; ModuleID = 'samples/937.bc'
source_filename = "par_mgr.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.hypre_Error = type { i32, i32, ptr, i32, i32 }
%struct.ompi_predefined_communicator_t = type opaque
%struct.ompi_predefined_datatype_t = type opaque
%struct.ompi_predefined_op_t = type opaque
%struct.hypre_ParMGRData = type { i32, ptr, ptr, ptr, i32, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, double, i32, i32, ptr, ptr, double, double, double, i32, i32, ptr, double, double, double, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, i32, i32, double, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, double, i32, i32, i32, double, ptr }
%struct.hypre_ParAMGData = type { i32, i32, double, i32, double, double, double, double, double, double, double, double, double, double, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, i32, i32, i32, i32, double, double, ptr, ptr, i32, double, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, double, double, double, double, ptr, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, double, ptr, ptr, i32, i32, i32, i32, double, ptr, ptr, double, i32, ptr, double, ptr, ptr, ptr, ptr, double, ptr, ptr, ptr, i32, i32, i32, i32, i32, double, ptr, i32, [256 x i8], i32, i32, [251 x i8], i32, ptr, i32, i32, ptr, ptr, i32, i32, double, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, double, i32, double, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, ptr, ptr, i32, ptr, i32, ptr }
%struct.hypre_ParCSRMatrix_struct = type { ptr, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, [2 x i32], [2 x i32], ptr, ptr, i32, i32, double, ptr, ptr, i32, ptr, i32, ptr, i32, ptr, ptr }
%struct.hypre_CSRMatrix = type { ptr, ptr, ptr, i32, i32, i32, ptr, ptr, i32, i32, ptr, ptr, i32, i32 }
%struct.hypre_IntArray = type { ptr, i32, i32 }
%struct.hypre_Vector = type { ptr, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._hypre_ParCSRCommPkg = type { ptr, i32, i32, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr }
%struct.hypre_ParVector_struct = type { ptr, i32, i32, i32, [2 x i32], i32, ptr, i32, i32, ptr }

@hypre__global_error = external global %struct.hypre_Error, align 8
@ompi_mpi_comm_null = external global %struct.ompi_predefined_communicator_t, align 1
@.str = private unnamed_addr constant [10 x i8] c"par_mgr.c\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Warning! MGR object empty!\0A\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@ompi_mpi_int = external global %struct.ompi_predefined_datatype_t, align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"Proc = %d     Interp: Comm 1 CF_marker =    %f\0A\00", align 1
@.str.5 = private unnamed_addr constant [48 x i8] c"Proc = %d     Interp: Internal work 1 =     %f\0A\00", align 1
@.str.6 = private unnamed_addr constant [48 x i8] c"Proc = %d     Interp: Comm 4 FineToCoarse = %f\0A\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"MGRTruncateAcfCPR\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"Dsp\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"Dpp\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"BlockRelaxSolve\00", align 1
@ompi_mpi_comm_world = external global %struct.ompi_predefined_communicator_t, align 1
@.str.11 = private unnamed_addr constant [50 x i8] c"Error!!! Input matrix is smaller than block size.\00", align 1
@ompi_mpi_op_sum = external global %struct.ompi_predefined_op_t, align 1
@.str.12 = private unnamed_addr constant [69 x i8] c" Coarse grid matrix is NULL. Please make sure MGRSetup() is called \0A\00", align 1
@.str.13 = private unnamed_addr constant [85 x i8] c" MGR solution array is NULL. Please make sure MGRSetup() and MGRSolve() are called \0A\00", align 1
@.str.14 = private unnamed_addr constant [80 x i8] c" MGR RHS array is NULL. Please make sure MGRSetup() and MGRSolve() are called \0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"MGR Setup parameters: \0A\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"Block size: %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"Max number of coarse levels: %d\0A\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"Set non-Cpoints to F-points: %d\0A\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"Set Cpoints method: %d\0A\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"Lev = %d, Interpolation type: %d\0A\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"Lev = %d, Restriction type: %d\0A\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"Lev = %d, F-relaxation type: %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [38 x i8] c"lev = %d, Number of relax sweeps: %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [44 x i8] c"Lev = %d, Use non-Galerkin coarse grid: %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [33 x i8] c"Lev = %d, Number of Cpoints: %d\0A\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"Cpoints indices: \00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"Number of Reserved Cpoints: %d\0A\00", align 1
@.str.30 = private unnamed_addr constant [36 x i8] c"Keep reserved Cpoints to level: %d\0A\00", align 1
@.str.31 = private unnamed_addr constant [27 x i8] c"\0A MGR Solver Parameters: \0A\00", align 1
@.str.32 = private unnamed_addr constant [36 x i8] c"Number of interpolation sweeps: %d\0A\00", align 1
@.str.33 = private unnamed_addr constant [34 x i8] c"Number of restriction sweeps: %d\0A\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"Global smoother type: %d\0A\00", align 1
@.str.35 = private unnamed_addr constant [38 x i8] c"Number of global smoother sweeps: %d\0A\00", align 1
@.str.36 = private unnamed_addr constant [30 x i8] c"Max number of iterations: %d\0A\00", align 1
@.str.37 = private unnamed_addr constant [24 x i8] c"Stopping tolerance: %e\0A\00", align 1
@.str.38 = private unnamed_addr constant [36 x i8] c"Use default coarse grid solver: %d\0A\00", align 1
@.str.39 = private unnamed_addr constant [60 x i8] c"Error: ParCSRMatrix Memory Location Diag (%d) != Offd (%d)\0A\00", align 1
@.str.40 = private unnamed_addr constant [34 x i8] c"./../parcsr_mv/_hypre_parcsr_mv.h\00", align 1

; Function Attrs: nounwind uwtable
define ptr @hypre_MGRCreate() #0 {
entry:
  %mgr_data = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %call = call ptr @hypre_CAlloc(i64 noundef 1, i64 noundef 616, i32 noundef 0)
  store ptr %call, ptr %mgr_data, align 8, !tbaa !4
  %0 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_size = getelementptr inbounds %struct.hypre_ParMGRData, ptr %0, i32 0, i32 0
  store i32 1, ptr %block_size, align 8, !tbaa !8
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 1
  store ptr null, ptr %block_num_coarse_indexes, align 8, !tbaa !12
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %point_marker_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 2
  store ptr null, ptr %point_marker_array, align 8, !tbaa !13
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 3
  store ptr null, ptr %block_cf_marker, align 8, !tbaa !14
  %4 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels = getelementptr inbounds %struct.hypre_ParMGRData, ptr %4, i32 0, i32 7
  store i32 10, ptr %max_num_coarse_levels, align 8, !tbaa !15
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 8
  store ptr null, ptr %A_array, align 8, !tbaa !16
  %6 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %B_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %6, i32 0, i32 9
  store ptr null, ptr %B_array, align 8, !tbaa !17
  %7 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %B_FF_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %7, i32 0, i32 10
  store ptr null, ptr %B_FF_array, align 8, !tbaa !18
  %8 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %P_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %8, i32 0, i32 12
  store ptr null, ptr %P_array, align 8, !tbaa !19
  %9 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %RT_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %9, i32 0, i32 13
  store ptr null, ptr %RT_array, align 8, !tbaa !20
  %10 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %RAP = getelementptr inbounds %struct.hypre_ParMGRData, ptr %10, i32 0, i32 14
  store ptr null, ptr %RAP, align 8, !tbaa !21
  %11 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %CF_marker_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %11, i32 0, i32 15
  store ptr null, ptr %CF_marker_array, align 8, !tbaa !22
  %12 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_indices_lvls = getelementptr inbounds %struct.hypre_ParMGRData, ptr %12, i32 0, i32 16
  store ptr null, ptr %coarse_indices_lvls, align 8, !tbaa !23
  %13 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_ff_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %13, i32 0, i32 11
  store ptr null, ptr %A_ff_array, align 8, !tbaa !24
  %14 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_fine_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %14, i32 0, i32 21
  store ptr null, ptr %F_fine_array, align 8, !tbaa !25
  %15 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_fine_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %15, i32 0, i32 22
  store ptr null, ptr %U_fine_array, align 8, !tbaa !26
  %16 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %aff_solver = getelementptr inbounds %struct.hypre_ParMGRData, ptr %16, i32 0, i32 23
  store ptr null, ptr %aff_solver, align 8, !tbaa !27
  %17 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %fine_grid_solver_setup = getelementptr inbounds %struct.hypre_ParMGRData, ptr %17, i32 0, i32 24
  store ptr null, ptr %fine_grid_solver_setup, align 8, !tbaa !28
  %18 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %fine_grid_solver_solve = getelementptr inbounds %struct.hypre_ParMGRData, ptr %18, i32 0, i32 25
  store ptr null, ptr %fine_grid_solver_solve, align 8, !tbaa !29
  %19 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %19, i32 0, i32 17
  store ptr null, ptr %F_array, align 8, !tbaa !30
  %20 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %20, i32 0, i32 18
  store ptr null, ptr %U_array, align 8, !tbaa !31
  %21 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %residual = getelementptr inbounds %struct.hypre_ParMGRData, ptr %21, i32 0, i32 19
  store ptr null, ptr %residual, align 8, !tbaa !32
  %22 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %rel_res_norms = getelementptr inbounds %struct.hypre_ParMGRData, ptr %22, i32 0, i32 20
  store ptr null, ptr %rel_res_norms, align 8, !tbaa !33
  %23 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Vtemp = getelementptr inbounds %struct.hypre_ParMGRData, ptr %23, i32 0, i32 54
  store ptr null, ptr %Vtemp, align 8, !tbaa !34
  %24 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Ztemp = getelementptr inbounds %struct.hypre_ParMGRData, ptr %24, i32 0, i32 55
  store ptr null, ptr %Ztemp, align 8, !tbaa !35
  %25 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Utemp = getelementptr inbounds %struct.hypre_ParMGRData, ptr %25, i32 0, i32 56
  store ptr null, ptr %Utemp, align 8, !tbaa !36
  %26 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Ftemp = getelementptr inbounds %struct.hypre_ParMGRData, ptr %26, i32 0, i32 57
  store ptr null, ptr %Ftemp, align 8, !tbaa !37
  %27 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_iterations = getelementptr inbounds %struct.hypre_ParMGRData, ptr %27, i32 0, i32 35
  store i32 0, ptr %num_iterations, align 4, !tbaa !38
  %28 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_interp_sweeps = getelementptr inbounds %struct.hypre_ParMGRData, ptr %28, i32 0, i32 27
  store i32 1, ptr %num_interp_sweeps, align 8, !tbaa !39
  %29 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_restrict_sweeps = getelementptr inbounds %struct.hypre_ParMGRData, ptr %29, i32 0, i32 28
  store i32 1, ptr %num_restrict_sweeps, align 4, !tbaa !40
  %30 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %trunc_factor = getelementptr inbounds %struct.hypre_ParMGRData, ptr %30, i32 0, i32 32
  store double 0.000000e+00, ptr %trunc_factor, align 8, !tbaa !41
  %31 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_row_sum = getelementptr inbounds %struct.hypre_ParMGRData, ptr %31, i32 0, i32 26
  store double 9.000000e-01, ptr %max_row_sum, align 8, !tbaa !42
  %32 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %strong_threshold = getelementptr inbounds %struct.hypre_ParMGRData, ptr %32, i32 0, i32 31
  store double 2.500000e-01, ptr %strong_threshold, align 8, !tbaa !43
  %33 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %P_max_elmts = getelementptr inbounds %struct.hypre_ParMGRData, ptr %33, i32 0, i32 34
  store i32 0, ptr %P_max_elmts, align 8, !tbaa !44
  %34 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_grid_solver = getelementptr inbounds %struct.hypre_ParMGRData, ptr %34, i32 0, i32 48
  store ptr null, ptr %coarse_grid_solver, align 8, !tbaa !45
  %35 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_grid_solver_setup = getelementptr inbounds %struct.hypre_ParMGRData, ptr %35, i32 0, i32 49
  store ptr null, ptr %coarse_grid_solver_setup, align 8, !tbaa !46
  %36 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_grid_solver_solve = getelementptr inbounds %struct.hypre_ParMGRData, ptr %36, i32 0, i32 50
  store ptr null, ptr %coarse_grid_solver_solve, align 8, !tbaa !47
  %37 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %use_default_cgrid_solver = getelementptr inbounds %struct.hypre_ParMGRData, ptr %37, i32 0, i32 51
  store i32 1, ptr %use_default_cgrid_solver, align 8, !tbaa !48
  %38 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %fsolver_mode = getelementptr inbounds %struct.hypre_ParMGRData, ptr %38, i32 0, i32 52
  store i32 -1, ptr %fsolver_mode, align 4, !tbaa !49
  %39 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %omega = getelementptr inbounds %struct.hypre_ParMGRData, ptr %39, i32 0, i32 53
  store double 1.000000e+00, ptr %omega, align 8, !tbaa !50
  %40 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_iter = getelementptr inbounds %struct.hypre_ParMGRData, ptr %40, i32 0, i32 45
  store i32 20, ptr %max_iter, align 4, !tbaa !51
  %41 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %tol = getelementptr inbounds %struct.hypre_ParMGRData, ptr %41, i32 0, i32 38
  store double 0x3EB0C6F7A0B5ED8D, ptr %tol, align 8, !tbaa !52
  %42 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %relax_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %42, i32 0, i32 40
  store i32 0, ptr %relax_type, align 8, !tbaa !53
  %43 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %43, i32 0, i32 73
  store ptr null, ptr %Frelax_type, align 8, !tbaa !54
  %44 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %relax_order = getelementptr inbounds %struct.hypre_ParMGRData, ptr %44, i32 0, i32 46
  store i32 1, ptr %relax_order, align 8, !tbaa !55
  %45 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_relax_sweeps = getelementptr inbounds %struct.hypre_ParMGRData, ptr %45, i32 0, i32 47
  store ptr null, ptr %num_relax_sweeps, align 8, !tbaa !56
  %46 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %relax_weight = getelementptr inbounds %struct.hypre_ParMGRData, ptr %46, i32 0, i32 39
  store double 1.000000e+00, ptr %relax_weight, align 8, !tbaa !57
  %47 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %interp_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %47, i32 0, i32 29
  store ptr null, ptr %interp_type, align 8, !tbaa !58
  %48 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %restrict_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %48, i32 0, i32 30
  store ptr null, ptr %restrict_type, align 8, !tbaa !59
  %49 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters = getelementptr inbounds %struct.hypre_ParMGRData, ptr %49, i32 0, i32 63
  store ptr null, ptr %level_smooth_iters, align 8, !tbaa !60
  %50 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %50, i32 0, i32 64
  store ptr null, ptr %level_smooth_type, align 8, !tbaa !61
  %51 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smoother = getelementptr inbounds %struct.hypre_ParMGRData, ptr %51, i32 0, i32 65
  store ptr null, ptr %level_smoother, align 8, !tbaa !62
  %52 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %global_smooth_cycle = getelementptr inbounds %struct.hypre_ParMGRData, ptr %52, i32 0, i32 66
  store i32 1, ptr %global_smooth_cycle, align 8, !tbaa !63
  %53 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %logging = getelementptr inbounds %struct.hypre_ParMGRData, ptr %53, i32 0, i32 41
  store i32 0, ptr %logging, align 4, !tbaa !64
  %54 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %print_level = getelementptr inbounds %struct.hypre_ParMGRData, ptr %54, i32 0, i32 42
  store i32 0, ptr %print_level, align 8, !tbaa !65
  %55 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %frelax_print_level = getelementptr inbounds %struct.hypre_ParMGRData, ptr %55, i32 0, i32 43
  store i32 0, ptr %frelax_print_level, align 4, !tbaa !66
  %56 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %cg_print_level = getelementptr inbounds %struct.hypre_ParMGRData, ptr %56, i32 0, i32 44
  store i32 0, ptr %cg_print_level, align 8, !tbaa !67
  %57 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %l1_norms = getelementptr inbounds %struct.hypre_ParMGRData, ptr %57, i32 0, i32 36
  store ptr null, ptr %l1_norms, align 8, !tbaa !68
  %58 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_coarse_size = getelementptr inbounds %struct.hypre_ParMGRData, ptr %58, i32 0, i32 67
  store i32 0, ptr %reserved_coarse_size, align 4, !tbaa !69
  %59 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_coarse_indexes = getelementptr inbounds %struct.hypre_ParMGRData, ptr %59, i32 0, i32 68
  store ptr null, ptr %reserved_coarse_indexes, align 8, !tbaa !70
  %60 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_Cpoint_local_indexes = getelementptr inbounds %struct.hypre_ParMGRData, ptr %60, i32 0, i32 69
  store ptr null, ptr %reserved_Cpoint_local_indexes, align 8, !tbaa !71
  %61 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_diaginv = getelementptr inbounds %struct.hypre_ParMGRData, ptr %61, i32 0, i32 58
  store ptr null, ptr %level_diaginv, align 8, !tbaa !72
  %62 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %frelax_diaginv = getelementptr inbounds %struct.hypre_ParMGRData, ptr %62, i32 0, i32 59
  store ptr null, ptr %frelax_diaginv, align 8, !tbaa !73
  %63 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %set_non_Cpoints_to_F = getelementptr inbounds %struct.hypre_ParMGRData, ptr %63, i32 0, i32 70
  store i32 0, ptr %set_non_Cpoints_to_F, align 8, !tbaa !74
  %64 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %idx_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %64, i32 0, i32 71
  store ptr null, ptr %idx_array, align 8, !tbaa !75
  %65 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %65, i32 0, i32 72
  store ptr null, ptr %Frelax_method, align 8, !tbaa !76
  %66 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %VcycleRelaxVtemp = getelementptr inbounds %struct.hypre_ParMGRData, ptr %66, i32 0, i32 77
  store ptr null, ptr %VcycleRelaxVtemp, align 8, !tbaa !77
  %67 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %VcycleRelaxZtemp = getelementptr inbounds %struct.hypre_ParMGRData, ptr %67, i32 0, i32 78
  store ptr null, ptr %VcycleRelaxZtemp, align 8, !tbaa !78
  %68 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %FrelaxVcycleData = getelementptr inbounds %struct.hypre_ParMGRData, ptr %68, i32 0, i32 76
  store ptr null, ptr %FrelaxVcycleData, align 8, !tbaa !79
  %69 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_num_functions = getelementptr inbounds %struct.hypre_ParMGRData, ptr %69, i32 0, i32 74
  store ptr null, ptr %Frelax_num_functions, align 8, !tbaa !80
  %70 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_local_lvls = getelementptr inbounds %struct.hypre_ParMGRData, ptr %70, i32 0, i32 79
  store i32 10, ptr %max_local_lvls, align 8, !tbaa !81
  %71 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %mgr_coarse_grid_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %71, i32 0, i32 75
  store ptr null, ptr %mgr_coarse_grid_method, align 8, !tbaa !82
  %72 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %print_coarse_system = getelementptr inbounds %struct.hypre_ParMGRData, ptr %72, i32 0, i32 80
  store i32 0, ptr %print_coarse_system, align 4, !tbaa !83
  %73 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %set_c_points_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %73, i32 0, i32 82
  store i32 0, ptr %set_c_points_method, align 8, !tbaa !84
  %74 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %lvl_to_keep_cpoints = getelementptr inbounds %struct.hypre_ParMGRData, ptr %74, i32 0, i32 83
  store i32 0, ptr %lvl_to_keep_cpoints, align 4, !tbaa !85
  %75 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %cg_convergence_factor = getelementptr inbounds %struct.hypre_ParMGRData, ptr %75, i32 0, i32 85
  store double 0.000000e+00, ptr %cg_convergence_factor, align 8, !tbaa !86
  %76 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_jacobi_bsize = getelementptr inbounds %struct.hypre_ParMGRData, ptr %76, i32 0, i32 84
  store i32 0, ptr %block_jacobi_bsize, align 8, !tbaa !87
  %77 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %blk_size = getelementptr inbounds %struct.hypre_ParMGRData, ptr %77, i32 0, i32 62
  store ptr null, ptr %blk_size, align 8, !tbaa !88
  %78 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %truncate_coarse_grid_threshold = getelementptr inbounds %struct.hypre_ParMGRData, ptr %78, i32 0, i32 81
  store double 0.000000e+00, ptr %truncate_coarse_grid_threshold, align 8, !tbaa !89
  %79 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %GSElimData = getelementptr inbounds %struct.hypre_ParMGRData, ptr %79, i32 0, i32 86
  store ptr null, ptr %GSElimData, align 8, !tbaa !90
  %80 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret ptr %80
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

declare ptr @hypre_CAlloc(i64 noundef, i64 noundef, i32 noundef) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRDestroy(ptr noundef %data) #0 {
entry:
  %data.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %num_coarse_levels = alloca i32, align 4
  store ptr %data, ptr %data.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %data.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 4
  %2 = load i32, ptr %num_coarse_levels1, align 8, !tbaa !91
  store i32 %2, ptr %num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 3
  %4 = load ptr, ptr %block_cf_marker, align 8, !tbaa !14
  %tobool = icmp ne ptr %4, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, ptr %i, align 4, !tbaa !92
  %6 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels = getelementptr inbounds %struct.hypre_ParMGRData, ptr %6, i32 0, i32 7
  %7 = load i32, ptr %max_num_coarse_levels, align 8, !tbaa !15
  %cmp = icmp slt i32 %5, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %8, i32 0, i32 3
  %9 = load ptr, ptr %block_cf_marker2, align 8, !tbaa !14
  %10 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds ptr, ptr %9, i64 %idxprom
  %11 = load ptr, ptr %arrayidx, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %11, i32 noundef 0)
  %12 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %12, i32 0, i32 3
  %13 = load ptr, ptr %block_cf_marker3, align 8, !tbaa !14
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom4 = sext i32 %14 to i64
  %arrayidx5 = getelementptr inbounds ptr, ptr %13, i64 %idxprom4
  store ptr null, ptr %arrayidx5, align 8, !tbaa !4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !93

for.end:                                          ; preds = %for.cond
  %16 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker6 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %16, i32 0, i32 3
  %17 = load ptr, ptr %block_cf_marker6, align 8, !tbaa !14
  call void @hypre_Free(ptr noundef %17, i32 noundef 0)
  %18 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker7 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %18, i32 0, i32 3
  store ptr null, ptr %block_cf_marker7, align 8, !tbaa !14
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %19 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes = getelementptr inbounds %struct.hypre_ParMGRData, ptr %19, i32 0, i32 1
  %20 = load ptr, ptr %block_num_coarse_indexes, align 8, !tbaa !12
  call void @hypre_Free(ptr noundef %20, i32 noundef 0)
  %21 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes8 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %21, i32 0, i32 1
  store ptr null, ptr %block_num_coarse_indexes8, align 8, !tbaa !12
  %22 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %residual = getelementptr inbounds %struct.hypre_ParMGRData, ptr %22, i32 0, i32 19
  %23 = load ptr, ptr %residual, align 8, !tbaa !32
  %tobool9 = icmp ne ptr %23, null
  br i1 %tobool9, label %if.then10, label %if.end13

if.then10:                                        ; preds = %if.end
  %24 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %residual11 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %24, i32 0, i32 19
  %25 = load ptr, ptr %residual11, align 8, !tbaa !32
  %call = call i32 @hypre_ParVectorDestroy(ptr noundef %25)
  %26 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %residual12 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %26, i32 0, i32 19
  store ptr null, ptr %residual12, align 8, !tbaa !32
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %if.end
  %27 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %rel_res_norms = getelementptr inbounds %struct.hypre_ParMGRData, ptr %27, i32 0, i32 20
  %28 = load ptr, ptr %rel_res_norms, align 8, !tbaa !33
  call void @hypre_Free(ptr noundef %28, i32 noundef 0)
  %29 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %rel_res_norms14 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %29, i32 0, i32 20
  store ptr null, ptr %rel_res_norms14, align 8, !tbaa !33
  %30 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Vtemp = getelementptr inbounds %struct.hypre_ParMGRData, ptr %30, i32 0, i32 54
  %31 = load ptr, ptr %Vtemp, align 8, !tbaa !34
  %tobool15 = icmp ne ptr %31, null
  br i1 %tobool15, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.end13
  %32 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Vtemp17 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %32, i32 0, i32 54
  %33 = load ptr, ptr %Vtemp17, align 8, !tbaa !34
  %call18 = call i32 @hypre_ParVectorDestroy(ptr noundef %33)
  %34 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Vtemp19 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %34, i32 0, i32 54
  store ptr null, ptr %Vtemp19, align 8, !tbaa !34
  br label %if.end20

if.end20:                                         ; preds = %if.then16, %if.end13
  %35 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Ztemp = getelementptr inbounds %struct.hypre_ParMGRData, ptr %35, i32 0, i32 55
  %36 = load ptr, ptr %Ztemp, align 8, !tbaa !35
  %tobool21 = icmp ne ptr %36, null
  br i1 %tobool21, label %if.then22, label %if.end26

if.then22:                                        ; preds = %if.end20
  %37 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Ztemp23 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %37, i32 0, i32 55
  %38 = load ptr, ptr %Ztemp23, align 8, !tbaa !35
  %call24 = call i32 @hypre_ParVectorDestroy(ptr noundef %38)
  %39 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Ztemp25 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %39, i32 0, i32 55
  store ptr null, ptr %Ztemp25, align 8, !tbaa !35
  br label %if.end26

if.end26:                                         ; preds = %if.then22, %if.end20
  %40 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Utemp = getelementptr inbounds %struct.hypre_ParMGRData, ptr %40, i32 0, i32 56
  %41 = load ptr, ptr %Utemp, align 8, !tbaa !36
  %tobool27 = icmp ne ptr %41, null
  br i1 %tobool27, label %if.then28, label %if.end32

if.then28:                                        ; preds = %if.end26
  %42 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Utemp29 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %42, i32 0, i32 56
  %43 = load ptr, ptr %Utemp29, align 8, !tbaa !36
  %call30 = call i32 @hypre_ParVectorDestroy(ptr noundef %43)
  %44 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Utemp31 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %44, i32 0, i32 56
  store ptr null, ptr %Utemp31, align 8, !tbaa !36
  br label %if.end32

if.end32:                                         ; preds = %if.then28, %if.end26
  %45 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Ftemp = getelementptr inbounds %struct.hypre_ParMGRData, ptr %45, i32 0, i32 57
  %46 = load ptr, ptr %Ftemp, align 8, !tbaa !37
  %tobool33 = icmp ne ptr %46, null
  br i1 %tobool33, label %if.then34, label %if.end38

if.then34:                                        ; preds = %if.end32
  %47 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Ftemp35 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %47, i32 0, i32 57
  %48 = load ptr, ptr %Ftemp35, align 8, !tbaa !37
  %call36 = call i32 @hypre_ParVectorDestroy(ptr noundef %48)
  %49 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Ftemp37 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %49, i32 0, i32 57
  store ptr null, ptr %Ftemp37, align 8, !tbaa !37
  br label %if.end38

if.end38:                                         ; preds = %if.then34, %if.end32
  %50 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %use_default_cgrid_solver = getelementptr inbounds %struct.hypre_ParMGRData, ptr %50, i32 0, i32 51
  %51 = load i32, ptr %use_default_cgrid_solver, align 8, !tbaa !48
  %tobool39 = icmp ne i32 %51, 0
  br i1 %tobool39, label %if.then40, label %if.end47

if.then40:                                        ; preds = %if.end38
  %52 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_grid_solver = getelementptr inbounds %struct.hypre_ParMGRData, ptr %52, i32 0, i32 48
  %53 = load ptr, ptr %coarse_grid_solver, align 8, !tbaa !45
  %tobool41 = icmp ne ptr %53, null
  br i1 %tobool41, label %if.then42, label %if.end45

if.then42:                                        ; preds = %if.then40
  %54 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_grid_solver43 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %54, i32 0, i32 48
  %55 = load ptr, ptr %coarse_grid_solver43, align 8, !tbaa !45
  %call44 = call i32 @hypre_BoomerAMGDestroy(ptr noundef %55)
  br label %if.end45

if.end45:                                         ; preds = %if.then42, %if.then40
  %56 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_grid_solver46 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %56, i32 0, i32 48
  store ptr null, ptr %coarse_grid_solver46, align 8, !tbaa !45
  br label %if.end47

if.end47:                                         ; preds = %if.end45, %if.end38
  %57 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %l1_norms = getelementptr inbounds %struct.hypre_ParMGRData, ptr %57, i32 0, i32 36
  %58 = load ptr, ptr %l1_norms, align 8, !tbaa !68
  %tobool48 = icmp ne ptr %58, null
  br i1 %tobool48, label %if.then49, label %if.end62

if.then49:                                        ; preds = %if.end47
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond50

for.cond50:                                       ; preds = %for.inc57, %if.then49
  %59 = load i32, ptr %i, align 4, !tbaa !92
  %60 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %cmp51 = icmp slt i32 %59, %60
  br i1 %cmp51, label %for.body52, label %for.end59

for.body52:                                       ; preds = %for.cond50
  %61 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %l1_norms53 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %61, i32 0, i32 36
  %62 = load ptr, ptr %l1_norms53, align 8, !tbaa !68
  %63 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom54 = sext i32 %63 to i64
  %arrayidx55 = getelementptr inbounds ptr, ptr %62, i64 %idxprom54
  %64 = load ptr, ptr %arrayidx55, align 8, !tbaa !4
  %call56 = call i32 @hypre_SeqVectorDestroy(ptr noundef %64)
  br label %for.inc57

for.inc57:                                        ; preds = %for.body52
  %65 = load i32, ptr %i, align 4, !tbaa !92
  %inc58 = add nsw i32 %65, 1
  store i32 %inc58, ptr %i, align 4, !tbaa !92
  br label %for.cond50, !llvm.loop !95

for.end59:                                        ; preds = %for.cond50
  %66 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %l1_norms60 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %66, i32 0, i32 36
  %67 = load ptr, ptr %l1_norms60, align 8, !tbaa !68
  call void @hypre_Free(ptr noundef %67, i32 noundef 0)
  %68 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %l1_norms61 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %68, i32 0, i32 36
  store ptr null, ptr %l1_norms61, align 8, !tbaa !68
  br label %if.end62

if.end62:                                         ; preds = %for.end59, %if.end47
  %69 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_indices_lvls = getelementptr inbounds %struct.hypre_ParMGRData, ptr %69, i32 0, i32 16
  %70 = load ptr, ptr %coarse_indices_lvls, align 8, !tbaa !23
  %tobool63 = icmp ne ptr %70, null
  br i1 %tobool63, label %if.then64, label %if.end79

if.then64:                                        ; preds = %if.end62
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond65

for.cond65:                                       ; preds = %for.inc74, %if.then64
  %71 = load i32, ptr %i, align 4, !tbaa !92
  %72 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %cmp66 = icmp slt i32 %71, %72
  br i1 %cmp66, label %for.body67, label %for.end76

for.body67:                                       ; preds = %for.cond65
  %73 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_indices_lvls68 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %73, i32 0, i32 16
  %74 = load ptr, ptr %coarse_indices_lvls68, align 8, !tbaa !23
  %75 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom69 = sext i32 %75 to i64
  %arrayidx70 = getelementptr inbounds ptr, ptr %74, i64 %idxprom69
  %76 = load ptr, ptr %arrayidx70, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %76, i32 noundef 0)
  %77 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_indices_lvls71 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %77, i32 0, i32 16
  %78 = load ptr, ptr %coarse_indices_lvls71, align 8, !tbaa !23
  %79 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom72 = sext i32 %79 to i64
  %arrayidx73 = getelementptr inbounds ptr, ptr %78, i64 %idxprom72
  store ptr null, ptr %arrayidx73, align 8, !tbaa !4
  br label %for.inc74

for.inc74:                                        ; preds = %for.body67
  %80 = load i32, ptr %i, align 4, !tbaa !92
  %inc75 = add nsw i32 %80, 1
  store i32 %inc75, ptr %i, align 4, !tbaa !92
  br label %for.cond65, !llvm.loop !96

for.end76:                                        ; preds = %for.cond65
  %81 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_indices_lvls77 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %81, i32 0, i32 16
  %82 = load ptr, ptr %coarse_indices_lvls77, align 8, !tbaa !23
  call void @hypre_Free(ptr noundef %82, i32 noundef 0)
  %83 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_indices_lvls78 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %83, i32 0, i32 16
  store ptr null, ptr %coarse_indices_lvls78, align 8, !tbaa !23
  br label %if.end79

if.end79:                                         ; preds = %for.end76, %if.end62
  %84 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %84, i32 0, i32 8
  %85 = load ptr, ptr %A_array, align 8, !tbaa !16
  %tobool80 = icmp ne ptr %85, null
  br i1 %tobool80, label %if.then86, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end79
  %86 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %P_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %86, i32 0, i32 12
  %87 = load ptr, ptr %P_array, align 8, !tbaa !19
  %tobool81 = icmp ne ptr %87, null
  br i1 %tobool81, label %if.then86, label %lor.lhs.false82

lor.lhs.false82:                                  ; preds = %lor.lhs.false
  %88 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %RT_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %88, i32 0, i32 13
  %89 = load ptr, ptr %RT_array, align 8, !tbaa !20
  %tobool83 = icmp ne ptr %89, null
  br i1 %tobool83, label %if.then86, label %lor.lhs.false84

lor.lhs.false84:                                  ; preds = %lor.lhs.false82
  %90 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %CF_marker_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %90, i32 0, i32 15
  %91 = load ptr, ptr %CF_marker_array, align 8, !tbaa !22
  %tobool85 = icmp ne ptr %91, null
  br i1 %tobool85, label %if.then86, label %if.end143

if.then86:                                        ; preds = %lor.lhs.false84, %lor.lhs.false82, %lor.lhs.false, %if.end79
  store i32 1, ptr %i, align 4, !tbaa !92
  br label %for.cond87

for.cond87:                                       ; preds = %for.inc124, %if.then86
  %92 = load i32, ptr %i, align 4, !tbaa !92
  %93 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %add = add nsw i32 %93, 1
  %cmp88 = icmp slt i32 %92, %add
  br i1 %cmp88, label %for.body89, label %for.end126

for.body89:                                       ; preds = %for.cond87
  %94 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %94, i32 0, i32 17
  %95 = load ptr, ptr %F_array, align 8, !tbaa !30
  %96 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom90 = sext i32 %96 to i64
  %arrayidx91 = getelementptr inbounds ptr, ptr %95, i64 %idxprom90
  %97 = load ptr, ptr %arrayidx91, align 8, !tbaa !4
  %call92 = call i32 @hypre_ParVectorDestroy(ptr noundef %97)
  %98 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %98, i32 0, i32 18
  %99 = load ptr, ptr %U_array, align 8, !tbaa !31
  %100 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom93 = sext i32 %100 to i64
  %arrayidx94 = getelementptr inbounds ptr, ptr %99, i64 %idxprom93
  %101 = load ptr, ptr %arrayidx94, align 8, !tbaa !4
  %call95 = call i32 @hypre_ParVectorDestroy(ptr noundef %101)
  %102 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %P_array96 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %102, i32 0, i32 12
  %103 = load ptr, ptr %P_array96, align 8, !tbaa !19
  %104 = load i32, ptr %i, align 4, !tbaa !92
  %sub = sub nsw i32 %104, 1
  %idxprom97 = sext i32 %sub to i64
  %arrayidx98 = getelementptr inbounds ptr, ptr %103, i64 %idxprom97
  %105 = load ptr, ptr %arrayidx98, align 8, !tbaa !4
  %tobool99 = icmp ne ptr %105, null
  br i1 %tobool99, label %if.then100, label %if.end106

if.then100:                                       ; preds = %for.body89
  %106 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %P_array101 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %106, i32 0, i32 12
  %107 = load ptr, ptr %P_array101, align 8, !tbaa !19
  %108 = load i32, ptr %i, align 4, !tbaa !92
  %sub102 = sub nsw i32 %108, 1
  %idxprom103 = sext i32 %sub102 to i64
  %arrayidx104 = getelementptr inbounds ptr, ptr %107, i64 %idxprom103
  %109 = load ptr, ptr %arrayidx104, align 8, !tbaa !4
  %call105 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %109)
  br label %if.end106

if.end106:                                        ; preds = %if.then100, %for.body89
  %110 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %RT_array107 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %110, i32 0, i32 13
  %111 = load ptr, ptr %RT_array107, align 8, !tbaa !20
  %112 = load i32, ptr %i, align 4, !tbaa !92
  %sub108 = sub nsw i32 %112, 1
  %idxprom109 = sext i32 %sub108 to i64
  %arrayidx110 = getelementptr inbounds ptr, ptr %111, i64 %idxprom109
  %113 = load ptr, ptr %arrayidx110, align 8, !tbaa !4
  %tobool111 = icmp ne ptr %113, null
  br i1 %tobool111, label %if.then112, label %if.end118

if.then112:                                       ; preds = %if.end106
  %114 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %RT_array113 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %114, i32 0, i32 13
  %115 = load ptr, ptr %RT_array113, align 8, !tbaa !20
  %116 = load i32, ptr %i, align 4, !tbaa !92
  %sub114 = sub nsw i32 %116, 1
  %idxprom115 = sext i32 %sub114 to i64
  %arrayidx116 = getelementptr inbounds ptr, ptr %115, i64 %idxprom115
  %117 = load ptr, ptr %arrayidx116, align 8, !tbaa !4
  %call117 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %117)
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.end106
  %118 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %CF_marker_array119 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %118, i32 0, i32 15
  %119 = load ptr, ptr %CF_marker_array119, align 8, !tbaa !22
  %120 = load i32, ptr %i, align 4, !tbaa !92
  %sub120 = sub nsw i32 %120, 1
  %idxprom121 = sext i32 %sub120 to i64
  %arrayidx122 = getelementptr inbounds ptr, ptr %119, i64 %idxprom121
  %121 = load ptr, ptr %arrayidx122, align 8, !tbaa !4
  %call123 = call i32 @hypre_IntArrayDestroy(ptr noundef %121)
  br label %for.inc124

for.inc124:                                       ; preds = %if.end118
  %122 = load i32, ptr %i, align 4, !tbaa !92
  %inc125 = add nsw i32 %122, 1
  store i32 %inc125, ptr %i, align 4, !tbaa !92
  br label %for.cond87, !llvm.loop !97

for.end126:                                       ; preds = %for.cond87
  store i32 1, ptr %i, align 4, !tbaa !92
  br label %for.cond127

for.cond127:                                      ; preds = %for.inc140, %for.end126
  %123 = load i32, ptr %i, align 4, !tbaa !92
  %124 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %cmp128 = icmp slt i32 %123, %124
  br i1 %cmp128, label %for.body129, label %for.end142

for.body129:                                      ; preds = %for.cond127
  %125 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_array130 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %125, i32 0, i32 8
  %126 = load ptr, ptr %A_array130, align 8, !tbaa !16
  %127 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom131 = sext i32 %127 to i64
  %arrayidx132 = getelementptr inbounds ptr, ptr %126, i64 %idxprom131
  %128 = load ptr, ptr %arrayidx132, align 8, !tbaa !4
  %tobool133 = icmp ne ptr %128, null
  br i1 %tobool133, label %if.then134, label %if.end139

if.then134:                                       ; preds = %for.body129
  %129 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_array135 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %129, i32 0, i32 8
  %130 = load ptr, ptr %A_array135, align 8, !tbaa !16
  %131 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom136 = sext i32 %131 to i64
  %arrayidx137 = getelementptr inbounds ptr, ptr %130, i64 %idxprom136
  %132 = load ptr, ptr %arrayidx137, align 8, !tbaa !4
  %call138 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %132)
  br label %if.end139

if.end139:                                        ; preds = %if.then134, %for.body129
  br label %for.inc140

for.inc140:                                       ; preds = %if.end139
  %133 = load i32, ptr %i, align 4, !tbaa !92
  %inc141 = add nsw i32 %133, 1
  store i32 %inc141, ptr %i, align 4, !tbaa !92
  br label %for.cond127, !llvm.loop !98

for.end142:                                       ; preds = %for.cond127
  br label %if.end143

if.end143:                                        ; preds = %for.end142, %lor.lhs.false84
  %134 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %B_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %134, i32 0, i32 9
  %135 = load ptr, ptr %B_array, align 8, !tbaa !17
  %tobool144 = icmp ne ptr %135, null
  br i1 %tobool144, label %if.then145, label %if.end156

if.then145:                                       ; preds = %if.end143
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond146

for.cond146:                                      ; preds = %for.inc153, %if.then145
  %136 = load i32, ptr %i, align 4, !tbaa !92
  %137 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %cmp147 = icmp slt i32 %136, %137
  br i1 %cmp147, label %for.body148, label %for.end155

for.body148:                                      ; preds = %for.cond146
  %138 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %B_array149 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %138, i32 0, i32 9
  %139 = load ptr, ptr %B_array149, align 8, !tbaa !17
  %140 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom150 = sext i32 %140 to i64
  %arrayidx151 = getelementptr inbounds ptr, ptr %139, i64 %idxprom150
  %141 = load ptr, ptr %arrayidx151, align 8, !tbaa !4
  %call152 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %141)
  br label %for.inc153

for.inc153:                                       ; preds = %for.body148
  %142 = load i32, ptr %i, align 4, !tbaa !92
  %inc154 = add nsw i32 %142, 1
  store i32 %inc154, ptr %i, align 4, !tbaa !92
  br label %for.cond146, !llvm.loop !99

for.end155:                                       ; preds = %for.cond146
  br label %if.end156

if.end156:                                        ; preds = %for.end155, %if.end143
  %143 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %B_FF_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %143, i32 0, i32 10
  %144 = load ptr, ptr %B_FF_array, align 8, !tbaa !18
  %tobool157 = icmp ne ptr %144, null
  br i1 %tobool157, label %if.then158, label %if.end169

if.then158:                                       ; preds = %if.end156
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond159

for.cond159:                                      ; preds = %for.inc166, %if.then158
  %145 = load i32, ptr %i, align 4, !tbaa !92
  %146 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %cmp160 = icmp slt i32 %145, %146
  br i1 %cmp160, label %for.body161, label %for.end168

for.body161:                                      ; preds = %for.cond159
  %147 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %B_FF_array162 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %147, i32 0, i32 10
  %148 = load ptr, ptr %B_FF_array162, align 8, !tbaa !18
  %149 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom163 = sext i32 %149 to i64
  %arrayidx164 = getelementptr inbounds ptr, ptr %148, i64 %idxprom163
  %150 = load ptr, ptr %arrayidx164, align 8, !tbaa !4
  %call165 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %150)
  br label %for.inc166

for.inc166:                                       ; preds = %for.body161
  %151 = load i32, ptr %i, align 4, !tbaa !92
  %inc167 = add nsw i32 %151, 1
  store i32 %inc167, ptr %i, align 4, !tbaa !92
  br label %for.cond159, !llvm.loop !100

for.end168:                                       ; preds = %for.cond159
  br label %if.end169

if.end169:                                        ; preds = %for.end168, %if.end156
  %152 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_ff_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %152, i32 0, i32 11
  %153 = load ptr, ptr %A_ff_array, align 8, !tbaa !24
  %tobool170 = icmp ne ptr %153, null
  br i1 %tobool170, label %if.then175, label %lor.lhs.false171

lor.lhs.false171:                                 ; preds = %if.end169
  %154 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_fine_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %154, i32 0, i32 21
  %155 = load ptr, ptr %F_fine_array, align 8, !tbaa !25
  %tobool172 = icmp ne ptr %155, null
  br i1 %tobool172, label %if.then175, label %lor.lhs.false173

lor.lhs.false173:                                 ; preds = %lor.lhs.false171
  %156 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_fine_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %156, i32 0, i32 22
  %157 = load ptr, ptr %U_fine_array, align 8, !tbaa !26
  %tobool174 = icmp ne ptr %157, null
  br i1 %tobool174, label %if.then175, label %if.end239

if.then175:                                       ; preds = %lor.lhs.false173, %lor.lhs.false171, %if.end169
  store i32 1, ptr %i, align 4, !tbaa !92
  br label %for.cond176

for.cond176:                                      ; preds = %for.inc200, %if.then175
  %158 = load i32, ptr %i, align 4, !tbaa !92
  %159 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %add177 = add nsw i32 %159, 1
  %cmp178 = icmp slt i32 %158, %add177
  br i1 %cmp178, label %for.body179, label %for.end202

for.body179:                                      ; preds = %for.cond176
  %160 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_fine_array180 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %160, i32 0, i32 21
  %161 = load ptr, ptr %F_fine_array180, align 8, !tbaa !25
  %162 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom181 = sext i32 %162 to i64
  %arrayidx182 = getelementptr inbounds ptr, ptr %161, i64 %idxprom181
  %163 = load ptr, ptr %arrayidx182, align 8, !tbaa !4
  %tobool183 = icmp ne ptr %163, null
  br i1 %tobool183, label %if.then184, label %if.end189

if.then184:                                       ; preds = %for.body179
  %164 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_fine_array185 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %164, i32 0, i32 21
  %165 = load ptr, ptr %F_fine_array185, align 8, !tbaa !25
  %166 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom186 = sext i32 %166 to i64
  %arrayidx187 = getelementptr inbounds ptr, ptr %165, i64 %idxprom186
  %167 = load ptr, ptr %arrayidx187, align 8, !tbaa !4
  %call188 = call i32 @hypre_ParVectorDestroy(ptr noundef %167)
  br label %if.end189

if.end189:                                        ; preds = %if.then184, %for.body179
  %168 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_fine_array190 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %168, i32 0, i32 22
  %169 = load ptr, ptr %U_fine_array190, align 8, !tbaa !26
  %170 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom191 = sext i32 %170 to i64
  %arrayidx192 = getelementptr inbounds ptr, ptr %169, i64 %idxprom191
  %171 = load ptr, ptr %arrayidx192, align 8, !tbaa !4
  %tobool193 = icmp ne ptr %171, null
  br i1 %tobool193, label %if.then194, label %if.end199

if.then194:                                       ; preds = %if.end189
  %172 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_fine_array195 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %172, i32 0, i32 22
  %173 = load ptr, ptr %U_fine_array195, align 8, !tbaa !26
  %174 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom196 = sext i32 %174 to i64
  %arrayidx197 = getelementptr inbounds ptr, ptr %173, i64 %idxprom196
  %175 = load ptr, ptr %arrayidx197, align 8, !tbaa !4
  %call198 = call i32 @hypre_ParVectorDestroy(ptr noundef %175)
  br label %if.end199

if.end199:                                        ; preds = %if.then194, %if.end189
  br label %for.inc200

for.inc200:                                       ; preds = %if.end199
  %176 = load i32, ptr %i, align 4, !tbaa !92
  %inc201 = add nsw i32 %176, 1
  store i32 %inc201, ptr %i, align 4, !tbaa !92
  br label %for.cond176, !llvm.loop !101

for.end202:                                       ; preds = %for.cond176
  store i32 1, ptr %i, align 4, !tbaa !92
  br label %for.cond203

for.cond203:                                      ; preds = %for.inc216, %for.end202
  %177 = load i32, ptr %i, align 4, !tbaa !92
  %178 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %cmp204 = icmp slt i32 %177, %178
  br i1 %cmp204, label %for.body205, label %for.end218

for.body205:                                      ; preds = %for.cond203
  %179 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_ff_array206 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %179, i32 0, i32 11
  %180 = load ptr, ptr %A_ff_array206, align 8, !tbaa !24
  %181 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom207 = sext i32 %181 to i64
  %arrayidx208 = getelementptr inbounds ptr, ptr %180, i64 %idxprom207
  %182 = load ptr, ptr %arrayidx208, align 8, !tbaa !4
  %tobool209 = icmp ne ptr %182, null
  br i1 %tobool209, label %if.then210, label %if.end215

if.then210:                                       ; preds = %for.body205
  %183 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_ff_array211 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %183, i32 0, i32 11
  %184 = load ptr, ptr %A_ff_array211, align 8, !tbaa !24
  %185 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom212 = sext i32 %185 to i64
  %arrayidx213 = getelementptr inbounds ptr, ptr %184, i64 %idxprom212
  %186 = load ptr, ptr %arrayidx213, align 8, !tbaa !4
  %call214 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %186)
  br label %if.end215

if.end215:                                        ; preds = %if.then210, %for.body205
  br label %for.inc216

for.inc216:                                       ; preds = %if.end215
  %187 = load i32, ptr %i, align 4, !tbaa !92
  %inc217 = add nsw i32 %187, 1
  store i32 %inc217, ptr %i, align 4, !tbaa !92
  br label %for.cond203, !llvm.loop !102

for.end218:                                       ; preds = %for.cond203
  %188 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %fsolver_mode = getelementptr inbounds %struct.hypre_ParMGRData, ptr %188, i32 0, i32 52
  %189 = load i32, ptr %fsolver_mode, align 4, !tbaa !49
  %cmp219 = icmp ne i32 %189, 0
  br i1 %cmp219, label %if.then220, label %if.end229

if.then220:                                       ; preds = %for.end218
  %190 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_ff_array221 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %190, i32 0, i32 11
  %191 = load ptr, ptr %A_ff_array221, align 8, !tbaa !24
  %arrayidx222 = getelementptr inbounds ptr, ptr %191, i64 0
  %192 = load ptr, ptr %arrayidx222, align 8, !tbaa !4
  %tobool223 = icmp ne ptr %192, null
  br i1 %tobool223, label %if.then224, label %if.end228

if.then224:                                       ; preds = %if.then220
  %193 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_ff_array225 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %193, i32 0, i32 11
  %194 = load ptr, ptr %A_ff_array225, align 8, !tbaa !24
  %arrayidx226 = getelementptr inbounds ptr, ptr %194, i64 0
  %195 = load ptr, ptr %arrayidx226, align 8, !tbaa !4
  %call227 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %195)
  br label %if.end228

if.end228:                                        ; preds = %if.then224, %if.then220
  br label %if.end229

if.end229:                                        ; preds = %if.end228, %for.end218
  %196 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_fine_array230 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %196, i32 0, i32 21
  %197 = load ptr, ptr %F_fine_array230, align 8, !tbaa !25
  call void @hypre_Free(ptr noundef %197, i32 noundef 0)
  %198 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_fine_array231 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %198, i32 0, i32 21
  store ptr null, ptr %F_fine_array231, align 8, !tbaa !25
  %199 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_fine_array232 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %199, i32 0, i32 21
  store ptr null, ptr %F_fine_array232, align 8, !tbaa !25
  %200 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_fine_array233 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %200, i32 0, i32 22
  %201 = load ptr, ptr %U_fine_array233, align 8, !tbaa !26
  call void @hypre_Free(ptr noundef %201, i32 noundef 0)
  %202 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_fine_array234 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %202, i32 0, i32 22
  store ptr null, ptr %U_fine_array234, align 8, !tbaa !26
  %203 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_fine_array235 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %203, i32 0, i32 22
  store ptr null, ptr %U_fine_array235, align 8, !tbaa !26
  %204 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_ff_array236 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %204, i32 0, i32 11
  %205 = load ptr, ptr %A_ff_array236, align 8, !tbaa !24
  call void @hypre_Free(ptr noundef %205, i32 noundef 0)
  %206 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_ff_array237 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %206, i32 0, i32 11
  store ptr null, ptr %A_ff_array237, align 8, !tbaa !24
  %207 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_ff_array238 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %207, i32 0, i32 11
  store ptr null, ptr %A_ff_array238, align 8, !tbaa !24
  br label %if.end239

if.end239:                                        ; preds = %if.end229, %lor.lhs.false173
  %208 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %aff_solver = getelementptr inbounds %struct.hypre_ParMGRData, ptr %208, i32 0, i32 23
  %209 = load ptr, ptr %aff_solver, align 8, !tbaa !27
  %tobool240 = icmp ne ptr %209, null
  br i1 %tobool240, label %if.then241, label %if.end273

if.then241:                                       ; preds = %if.end239
  store i32 1, ptr %i, align 4, !tbaa !92
  br label %for.cond242

for.cond242:                                      ; preds = %for.inc255, %if.then241
  %210 = load i32, ptr %i, align 4, !tbaa !92
  %211 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %cmp243 = icmp slt i32 %210, %211
  br i1 %cmp243, label %for.body244, label %for.end257

for.body244:                                      ; preds = %for.cond242
  %212 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %aff_solver245 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %212, i32 0, i32 23
  %213 = load ptr, ptr %aff_solver245, align 8, !tbaa !27
  %214 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom246 = sext i32 %214 to i64
  %arrayidx247 = getelementptr inbounds ptr, ptr %213, i64 %idxprom246
  %215 = load ptr, ptr %arrayidx247, align 8, !tbaa !4
  %tobool248 = icmp ne ptr %215, null
  br i1 %tobool248, label %if.then249, label %if.end254

if.then249:                                       ; preds = %for.body244
  %216 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %aff_solver250 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %216, i32 0, i32 23
  %217 = load ptr, ptr %aff_solver250, align 8, !tbaa !27
  %218 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom251 = sext i32 %218 to i64
  %arrayidx252 = getelementptr inbounds ptr, ptr %217, i64 %idxprom251
  %219 = load ptr, ptr %arrayidx252, align 8, !tbaa !4
  %call253 = call i32 @hypre_BoomerAMGDestroy(ptr noundef %219)
  br label %if.end254

if.end254:                                        ; preds = %if.then249, %for.body244
  br label %for.inc255

for.inc255:                                       ; preds = %if.end254
  %220 = load i32, ptr %i, align 4, !tbaa !92
  %inc256 = add nsw i32 %220, 1
  store i32 %inc256, ptr %i, align 4, !tbaa !92
  br label %for.cond242, !llvm.loop !103

for.end257:                                       ; preds = %for.cond242
  %221 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %fsolver_mode258 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %221, i32 0, i32 52
  %222 = load i32, ptr %fsolver_mode258, align 4, !tbaa !49
  %cmp259 = icmp eq i32 %222, 2
  br i1 %cmp259, label %if.then260, label %if.end269

if.then260:                                       ; preds = %for.end257
  %223 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %aff_solver261 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %223, i32 0, i32 23
  %224 = load ptr, ptr %aff_solver261, align 8, !tbaa !27
  %arrayidx262 = getelementptr inbounds ptr, ptr %224, i64 0
  %225 = load ptr, ptr %arrayidx262, align 8, !tbaa !4
  %tobool263 = icmp ne ptr %225, null
  br i1 %tobool263, label %if.then264, label %if.end268

if.then264:                                       ; preds = %if.then260
  %226 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %aff_solver265 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %226, i32 0, i32 23
  %227 = load ptr, ptr %aff_solver265, align 8, !tbaa !27
  %arrayidx266 = getelementptr inbounds ptr, ptr %227, i64 0
  %228 = load ptr, ptr %arrayidx266, align 8, !tbaa !4
  %call267 = call i32 @hypre_BoomerAMGDestroy(ptr noundef %228)
  br label %if.end268

if.end268:                                        ; preds = %if.then264, %if.then260
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %for.end257
  %229 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %aff_solver270 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %229, i32 0, i32 23
  %230 = load ptr, ptr %aff_solver270, align 8, !tbaa !27
  call void @hypre_Free(ptr noundef %230, i32 noundef 0)
  %231 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %aff_solver271 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %231, i32 0, i32 23
  store ptr null, ptr %aff_solver271, align 8, !tbaa !27
  %232 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %aff_solver272 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %232, i32 0, i32 23
  store ptr null, ptr %aff_solver272, align 8, !tbaa !27
  br label %if.end273

if.end273:                                        ; preds = %if.end269, %if.end239
  %233 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_diaginv = getelementptr inbounds %struct.hypre_ParMGRData, ptr %233, i32 0, i32 58
  %234 = load ptr, ptr %level_diaginv, align 8, !tbaa !72
  %tobool274 = icmp ne ptr %234, null
  br i1 %tobool274, label %if.then275, label %if.end290

if.then275:                                       ; preds = %if.end273
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond276

for.cond276:                                      ; preds = %for.inc285, %if.then275
  %235 = load i32, ptr %i, align 4, !tbaa !92
  %236 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %cmp277 = icmp slt i32 %235, %236
  br i1 %cmp277, label %for.body278, label %for.end287

for.body278:                                      ; preds = %for.cond276
  %237 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_diaginv279 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %237, i32 0, i32 58
  %238 = load ptr, ptr %level_diaginv279, align 8, !tbaa !72
  %239 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom280 = sext i32 %239 to i64
  %arrayidx281 = getelementptr inbounds ptr, ptr %238, i64 %idxprom280
  %240 = load ptr, ptr %arrayidx281, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %240, i32 noundef 0)
  %241 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_diaginv282 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %241, i32 0, i32 58
  %242 = load ptr, ptr %level_diaginv282, align 8, !tbaa !72
  %243 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom283 = sext i32 %243 to i64
  %arrayidx284 = getelementptr inbounds ptr, ptr %242, i64 %idxprom283
  store ptr null, ptr %arrayidx284, align 8, !tbaa !4
  br label %for.inc285

for.inc285:                                       ; preds = %for.body278
  %244 = load i32, ptr %i, align 4, !tbaa !92
  %inc286 = add nsw i32 %244, 1
  store i32 %inc286, ptr %i, align 4, !tbaa !92
  br label %for.cond276, !llvm.loop !104

for.end287:                                       ; preds = %for.cond276
  %245 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_diaginv288 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %245, i32 0, i32 58
  %246 = load ptr, ptr %level_diaginv288, align 8, !tbaa !72
  call void @hypre_Free(ptr noundef %246, i32 noundef 0)
  %247 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_diaginv289 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %247, i32 0, i32 58
  store ptr null, ptr %level_diaginv289, align 8, !tbaa !72
  br label %if.end290

if.end290:                                        ; preds = %for.end287, %if.end273
  %248 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %frelax_diaginv = getelementptr inbounds %struct.hypre_ParMGRData, ptr %248, i32 0, i32 59
  %249 = load ptr, ptr %frelax_diaginv, align 8, !tbaa !73
  %tobool291 = icmp ne ptr %249, null
  br i1 %tobool291, label %if.then292, label %if.end307

if.then292:                                       ; preds = %if.end290
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond293

for.cond293:                                      ; preds = %for.inc302, %if.then292
  %250 = load i32, ptr %i, align 4, !tbaa !92
  %251 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %cmp294 = icmp slt i32 %250, %251
  br i1 %cmp294, label %for.body295, label %for.end304

for.body295:                                      ; preds = %for.cond293
  %252 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %frelax_diaginv296 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %252, i32 0, i32 59
  %253 = load ptr, ptr %frelax_diaginv296, align 8, !tbaa !73
  %254 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom297 = sext i32 %254 to i64
  %arrayidx298 = getelementptr inbounds ptr, ptr %253, i64 %idxprom297
  %255 = load ptr, ptr %arrayidx298, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %255, i32 noundef 0)
  %256 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %frelax_diaginv299 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %256, i32 0, i32 59
  %257 = load ptr, ptr %frelax_diaginv299, align 8, !tbaa !73
  %258 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom300 = sext i32 %258 to i64
  %arrayidx301 = getelementptr inbounds ptr, ptr %257, i64 %idxprom300
  store ptr null, ptr %arrayidx301, align 8, !tbaa !4
  br label %for.inc302

for.inc302:                                       ; preds = %for.body295
  %259 = load i32, ptr %i, align 4, !tbaa !92
  %inc303 = add nsw i32 %259, 1
  store i32 %inc303, ptr %i, align 4, !tbaa !92
  br label %for.cond293, !llvm.loop !105

for.end304:                                       ; preds = %for.cond293
  %260 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %frelax_diaginv305 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %260, i32 0, i32 59
  %261 = load ptr, ptr %frelax_diaginv305, align 8, !tbaa !73
  call void @hypre_Free(ptr noundef %261, i32 noundef 0)
  %262 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %frelax_diaginv306 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %262, i32 0, i32 59
  store ptr null, ptr %frelax_diaginv306, align 8, !tbaa !73
  br label %if.end307

if.end307:                                        ; preds = %for.end304, %if.end290
  %263 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_array308 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %263, i32 0, i32 17
  %264 = load ptr, ptr %F_array308, align 8, !tbaa !30
  call void @hypre_Free(ptr noundef %264, i32 noundef 0)
  %265 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_array309 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %265, i32 0, i32 17
  store ptr null, ptr %F_array309, align 8, !tbaa !30
  %266 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_array310 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %266, i32 0, i32 18
  %267 = load ptr, ptr %U_array310, align 8, !tbaa !31
  call void @hypre_Free(ptr noundef %267, i32 noundef 0)
  %268 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_array311 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %268, i32 0, i32 18
  store ptr null, ptr %U_array311, align 8, !tbaa !31
  %269 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_array312 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %269, i32 0, i32 8
  %270 = load ptr, ptr %A_array312, align 8, !tbaa !16
  call void @hypre_Free(ptr noundef %270, i32 noundef 0)
  %271 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %A_array313 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %271, i32 0, i32 8
  store ptr null, ptr %A_array313, align 8, !tbaa !16
  %272 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %B_array314 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %272, i32 0, i32 9
  %273 = load ptr, ptr %B_array314, align 8, !tbaa !17
  call void @hypre_Free(ptr noundef %273, i32 noundef 0)
  %274 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %B_array315 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %274, i32 0, i32 9
  store ptr null, ptr %B_array315, align 8, !tbaa !17
  %275 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %B_FF_array316 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %275, i32 0, i32 10
  %276 = load ptr, ptr %B_FF_array316, align 8, !tbaa !18
  call void @hypre_Free(ptr noundef %276, i32 noundef 0)
  %277 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %B_FF_array317 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %277, i32 0, i32 10
  store ptr null, ptr %B_FF_array317, align 8, !tbaa !18
  %278 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %P_array318 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %278, i32 0, i32 12
  %279 = load ptr, ptr %P_array318, align 8, !tbaa !19
  call void @hypre_Free(ptr noundef %279, i32 noundef 0)
  %280 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %P_array319 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %280, i32 0, i32 12
  store ptr null, ptr %P_array319, align 8, !tbaa !19
  %281 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %RT_array320 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %281, i32 0, i32 13
  %282 = load ptr, ptr %RT_array320, align 8, !tbaa !20
  call void @hypre_Free(ptr noundef %282, i32 noundef 0)
  %283 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %RT_array321 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %283, i32 0, i32 13
  store ptr null, ptr %RT_array321, align 8, !tbaa !20
  %284 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %CF_marker_array322 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %284, i32 0, i32 15
  %285 = load ptr, ptr %CF_marker_array322, align 8, !tbaa !22
  call void @hypre_Free(ptr noundef %285, i32 noundef 0)
  %286 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %CF_marker_array323 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %286, i32 0, i32 15
  store ptr null, ptr %CF_marker_array323, align 8, !tbaa !22
  %287 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_Cpoint_local_indexes = getelementptr inbounds %struct.hypre_ParMGRData, ptr %287, i32 0, i32 69
  %288 = load ptr, ptr %reserved_Cpoint_local_indexes, align 8, !tbaa !71
  call void @hypre_Free(ptr noundef %288, i32 noundef 0)
  %289 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_Cpoint_local_indexes324 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %289, i32 0, i32 69
  store ptr null, ptr %reserved_Cpoint_local_indexes324, align 8, !tbaa !71
  %290 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %restrict_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %290, i32 0, i32 30
  %291 = load ptr, ptr %restrict_type, align 8, !tbaa !59
  call void @hypre_Free(ptr noundef %291, i32 noundef 0)
  %292 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %restrict_type325 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %292, i32 0, i32 30
  store ptr null, ptr %restrict_type325, align 8, !tbaa !59
  %293 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %interp_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %293, i32 0, i32 29
  %294 = load ptr, ptr %interp_type, align 8, !tbaa !58
  call void @hypre_Free(ptr noundef %294, i32 noundef 0)
  %295 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %interp_type326 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %295, i32 0, i32 29
  store ptr null, ptr %interp_type326, align 8, !tbaa !58
  %296 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %296, i32 0, i32 73
  %297 = load ptr, ptr %Frelax_type, align 8, !tbaa !54
  call void @hypre_Free(ptr noundef %297, i32 noundef 0)
  %298 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_type327 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %298, i32 0, i32 73
  store ptr null, ptr %Frelax_type327, align 8, !tbaa !54
  %299 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %299, i32 0, i32 72
  %300 = load ptr, ptr %Frelax_method, align 8, !tbaa !76
  call void @hypre_Free(ptr noundef %300, i32 noundef 0)
  %301 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_method328 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %301, i32 0, i32 72
  store ptr null, ptr %Frelax_method328, align 8, !tbaa !76
  %302 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_num_functions = getelementptr inbounds %struct.hypre_ParMGRData, ptr %302, i32 0, i32 74
  %303 = load ptr, ptr %Frelax_num_functions, align 8, !tbaa !80
  call void @hypre_Free(ptr noundef %303, i32 noundef 0)
  %304 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_num_functions329 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %304, i32 0, i32 74
  store ptr null, ptr %Frelax_num_functions329, align 8, !tbaa !80
  %305 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %VcycleRelaxVtemp = getelementptr inbounds %struct.hypre_ParMGRData, ptr %305, i32 0, i32 77
  %306 = load ptr, ptr %VcycleRelaxVtemp, align 8, !tbaa !77
  %tobool330 = icmp ne ptr %306, null
  br i1 %tobool330, label %if.then331, label %if.end335

if.then331:                                       ; preds = %if.end307
  %307 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %VcycleRelaxVtemp332 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %307, i32 0, i32 77
  %308 = load ptr, ptr %VcycleRelaxVtemp332, align 8, !tbaa !77
  %call333 = call i32 @hypre_ParVectorDestroy(ptr noundef %308)
  %309 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %VcycleRelaxVtemp334 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %309, i32 0, i32 77
  store ptr null, ptr %VcycleRelaxVtemp334, align 8, !tbaa !77
  br label %if.end335

if.end335:                                        ; preds = %if.then331, %if.end307
  %310 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %VcycleRelaxZtemp = getelementptr inbounds %struct.hypre_ParMGRData, ptr %310, i32 0, i32 78
  %311 = load ptr, ptr %VcycleRelaxZtemp, align 8, !tbaa !78
  %tobool336 = icmp ne ptr %311, null
  br i1 %tobool336, label %if.then337, label %if.end341

if.then337:                                       ; preds = %if.end335
  %312 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %VcycleRelaxZtemp338 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %312, i32 0, i32 78
  %313 = load ptr, ptr %VcycleRelaxZtemp338, align 8, !tbaa !78
  %call339 = call i32 @hypre_ParVectorDestroy(ptr noundef %313)
  %314 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %VcycleRelaxZtemp340 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %314, i32 0, i32 78
  store ptr null, ptr %VcycleRelaxZtemp340, align 8, !tbaa !78
  br label %if.end341

if.end341:                                        ; preds = %if.then337, %if.end335
  %315 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %FrelaxVcycleData = getelementptr inbounds %struct.hypre_ParMGRData, ptr %315, i32 0, i32 76
  %316 = load ptr, ptr %FrelaxVcycleData, align 8, !tbaa !79
  %tobool342 = icmp ne ptr %316, null
  br i1 %tobool342, label %if.then343, label %if.end356

if.then343:                                       ; preds = %if.end341
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond344

for.cond344:                                      ; preds = %for.inc351, %if.then343
  %317 = load i32, ptr %i, align 4, !tbaa !92
  %318 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %cmp345 = icmp slt i32 %317, %318
  br i1 %cmp345, label %for.body346, label %for.end353

for.body346:                                      ; preds = %for.cond344
  %319 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %FrelaxVcycleData347 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %319, i32 0, i32 76
  %320 = load ptr, ptr %FrelaxVcycleData347, align 8, !tbaa !79
  %321 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom348 = sext i32 %321 to i64
  %arrayidx349 = getelementptr inbounds ptr, ptr %320, i64 %idxprom348
  %322 = load ptr, ptr %arrayidx349, align 8, !tbaa !4
  %call350 = call i32 @hypre_MGRDestroyFrelaxVcycleData(ptr noundef %322)
  br label %for.inc351

for.inc351:                                       ; preds = %for.body346
  %323 = load i32, ptr %i, align 4, !tbaa !92
  %inc352 = add nsw i32 %323, 1
  store i32 %inc352, ptr %i, align 4, !tbaa !92
  br label %for.cond344, !llvm.loop !106

for.end353:                                       ; preds = %for.cond344
  %324 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %FrelaxVcycleData354 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %324, i32 0, i32 76
  %325 = load ptr, ptr %FrelaxVcycleData354, align 8, !tbaa !79
  call void @hypre_Free(ptr noundef %325, i32 noundef 0)
  %326 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %FrelaxVcycleData355 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %326, i32 0, i32 76
  store ptr null, ptr %FrelaxVcycleData355, align 8, !tbaa !79
  br label %if.end356

if.end356:                                        ; preds = %for.end353, %if.end341
  %327 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_coarse_indexes = getelementptr inbounds %struct.hypre_ParMGRData, ptr %327, i32 0, i32 68
  %328 = load ptr, ptr %reserved_coarse_indexes, align 8, !tbaa !70
  call void @hypre_Free(ptr noundef %328, i32 noundef 0)
  %329 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_coarse_indexes357 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %329, i32 0, i32 68
  store ptr null, ptr %reserved_coarse_indexes357, align 8, !tbaa !70
  %330 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %set_c_points_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %330, i32 0, i32 82
  %331 = load i32, ptr %set_c_points_method, align 8, !tbaa !84
  %cmp358 = icmp eq i32 %331, 1
  br i1 %cmp358, label %if.then359, label %if.end361

if.then359:                                       ; preds = %if.end356
  %332 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %idx_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %332, i32 0, i32 71
  %333 = load ptr, ptr %idx_array, align 8, !tbaa !75
  call void @hypre_Free(ptr noundef %333, i32 noundef 0)
  %334 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %idx_array360 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %334, i32 0, i32 71
  store ptr null, ptr %idx_array360, align 8, !tbaa !75
  br label %if.end361

if.end361:                                        ; preds = %if.then359, %if.end356
  %335 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %mgr_coarse_grid_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %335, i32 0, i32 75
  %336 = load ptr, ptr %mgr_coarse_grid_method, align 8, !tbaa !82
  call void @hypre_Free(ptr noundef %336, i32 noundef 0)
  %337 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %mgr_coarse_grid_method362 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %337, i32 0, i32 75
  store ptr null, ptr %mgr_coarse_grid_method362, align 8, !tbaa !82
  %338 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %RAP = getelementptr inbounds %struct.hypre_ParMGRData, ptr %338, i32 0, i32 14
  %339 = load ptr, ptr %RAP, align 8, !tbaa !21
  %tobool363 = icmp ne ptr %339, null
  br i1 %tobool363, label %if.then364, label %if.end367

if.then364:                                       ; preds = %if.end361
  %340 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %RAP365 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %340, i32 0, i32 14
  %341 = load ptr, ptr %RAP365, align 8, !tbaa !21
  %call366 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %341)
  br label %if.end367

if.end367:                                        ; preds = %if.then364, %if.end361
  %342 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smoother = getelementptr inbounds %struct.hypre_ParMGRData, ptr %342, i32 0, i32 65
  %343 = load ptr, ptr %level_smoother, align 8, !tbaa !62
  %cmp368 = icmp ne ptr %343, null
  br i1 %cmp368, label %if.then369, label %if.end402

if.then369:                                       ; preds = %if.end367
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond370

for.cond370:                                      ; preds = %for.inc397, %if.then369
  %344 = load i32, ptr %i, align 4, !tbaa !92
  %345 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %cmp371 = icmp slt i32 %344, %345
  br i1 %cmp371, label %for.body372, label %for.end399

for.body372:                                      ; preds = %for.cond370
  %346 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters = getelementptr inbounds %struct.hypre_ParMGRData, ptr %346, i32 0, i32 63
  %347 = load ptr, ptr %level_smooth_iters, align 8, !tbaa !60
  %348 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom373 = sext i32 %348 to i64
  %arrayidx374 = getelementptr inbounds i32, ptr %347, i64 %idxprom373
  %349 = load i32, ptr %arrayidx374, align 4, !tbaa !92
  %cmp375 = icmp sgt i32 %349, 0
  br i1 %cmp375, label %if.then376, label %if.end396

if.then376:                                       ; preds = %for.body372
  %350 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %350, i32 0, i32 64
  %351 = load ptr, ptr %level_smooth_type, align 8, !tbaa !61
  %352 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom377 = sext i32 %352 to i64
  %arrayidx378 = getelementptr inbounds i32, ptr %351, i64 %idxprom377
  %353 = load i32, ptr %arrayidx378, align 4, !tbaa !92
  %cmp379 = icmp eq i32 %353, 8
  br i1 %cmp379, label %if.then380, label %if.else

if.then380:                                       ; preds = %if.then376
  %354 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smoother381 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %354, i32 0, i32 65
  %355 = load ptr, ptr %level_smoother381, align 8, !tbaa !62
  %356 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom382 = sext i32 %356 to i64
  %arrayidx383 = getelementptr inbounds ptr, ptr %355, i64 %idxprom382
  %357 = load ptr, ptr %arrayidx383, align 8, !tbaa !4
  %call384 = call i32 @HYPRE_EuclidDestroy(ptr noundef %357)
  br label %if.end395

if.else:                                          ; preds = %if.then376
  %358 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type385 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %358, i32 0, i32 64
  %359 = load ptr, ptr %level_smooth_type385, align 8, !tbaa !61
  %360 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom386 = sext i32 %360 to i64
  %arrayidx387 = getelementptr inbounds i32, ptr %359, i64 %idxprom386
  %361 = load i32, ptr %arrayidx387, align 4, !tbaa !92
  %cmp388 = icmp eq i32 %361, 16
  br i1 %cmp388, label %if.then389, label %if.end394

if.then389:                                       ; preds = %if.else
  %362 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smoother390 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %362, i32 0, i32 65
  %363 = load ptr, ptr %level_smoother390, align 8, !tbaa !62
  %364 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom391 = sext i32 %364 to i64
  %arrayidx392 = getelementptr inbounds ptr, ptr %363, i64 %idxprom391
  %365 = load ptr, ptr %arrayidx392, align 8, !tbaa !4
  %call393 = call i32 @HYPRE_ILUDestroy(ptr noundef %365)
  br label %if.end394

if.end394:                                        ; preds = %if.then389, %if.else
  br label %if.end395

if.end395:                                        ; preds = %if.end394, %if.then380
  br label %if.end396

if.end396:                                        ; preds = %if.end395, %for.body372
  br label %for.inc397

for.inc397:                                       ; preds = %if.end396
  %366 = load i32, ptr %i, align 4, !tbaa !92
  %inc398 = add nsw i32 %366, 1
  store i32 %inc398, ptr %i, align 4, !tbaa !92
  br label %for.cond370, !llvm.loop !107

for.end399:                                       ; preds = %for.cond370
  %367 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smoother400 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %367, i32 0, i32 65
  %368 = load ptr, ptr %level_smoother400, align 8, !tbaa !62
  call void @hypre_Free(ptr noundef %368, i32 noundef 0)
  %369 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smoother401 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %369, i32 0, i32 65
  store ptr null, ptr %level_smoother401, align 8, !tbaa !62
  br label %if.end402

if.end402:                                        ; preds = %for.end399, %if.end367
  %370 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %blk_size = getelementptr inbounds %struct.hypre_ParMGRData, ptr %370, i32 0, i32 62
  %371 = load ptr, ptr %blk_size, align 8, !tbaa !88
  call void @hypre_Free(ptr noundef %371, i32 noundef 0)
  %372 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %blk_size403 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %372, i32 0, i32 62
  store ptr null, ptr %blk_size403, align 8, !tbaa !88
  %373 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type404 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %373, i32 0, i32 64
  %374 = load ptr, ptr %level_smooth_type404, align 8, !tbaa !61
  call void @hypre_Free(ptr noundef %374, i32 noundef 0)
  %375 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type405 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %375, i32 0, i32 64
  store ptr null, ptr %level_smooth_type405, align 8, !tbaa !61
  %376 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters406 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %376, i32 0, i32 63
  %377 = load ptr, ptr %level_smooth_iters406, align 8, !tbaa !60
  call void @hypre_Free(ptr noundef %377, i32 noundef 0)
  %378 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters407 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %378, i32 0, i32 63
  store ptr null, ptr %level_smooth_iters407, align 8, !tbaa !60
  %379 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_relax_sweeps = getelementptr inbounds %struct.hypre_ParMGRData, ptr %379, i32 0, i32 47
  %380 = load ptr, ptr %num_relax_sweeps, align 8, !tbaa !56
  call void @hypre_Free(ptr noundef %380, i32 noundef 0)
  %381 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_relax_sweeps408 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %381, i32 0, i32 47
  store ptr null, ptr %num_relax_sweeps408, align 8, !tbaa !56
  %382 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %GSElimData = getelementptr inbounds %struct.hypre_ParMGRData, ptr %382, i32 0, i32 86
  %383 = load ptr, ptr %GSElimData, align 8, !tbaa !90
  %tobool409 = icmp ne ptr %383, null
  br i1 %tobool409, label %if.then410, label %if.end432

if.then410:                                       ; preds = %if.end402
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond411

for.cond411:                                      ; preds = %for.inc427, %if.then410
  %384 = load i32, ptr %i, align 4, !tbaa !92
  %385 = load i32, ptr %num_coarse_levels, align 4, !tbaa !92
  %cmp412 = icmp slt i32 %384, %385
  br i1 %cmp412, label %for.body413, label %for.end429

for.body413:                                      ; preds = %for.cond411
  %386 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %GSElimData414 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %386, i32 0, i32 86
  %387 = load ptr, ptr %GSElimData414, align 8, !tbaa !90
  %388 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom415 = sext i32 %388 to i64
  %arrayidx416 = getelementptr inbounds ptr, ptr %387, i64 %idxprom415
  %389 = load ptr, ptr %arrayidx416, align 8, !tbaa !4
  %tobool417 = icmp ne ptr %389, null
  br i1 %tobool417, label %if.then418, label %if.end426

if.then418:                                       ; preds = %for.body413
  %390 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %GSElimData419 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %390, i32 0, i32 86
  %391 = load ptr, ptr %GSElimData419, align 8, !tbaa !90
  %392 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom420 = sext i32 %392 to i64
  %arrayidx421 = getelementptr inbounds ptr, ptr %391, i64 %idxprom420
  %393 = load ptr, ptr %arrayidx421, align 8, !tbaa !4
  %call422 = call i32 @hypre_MGRDestroyGSElimData(ptr noundef %393)
  %394 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %GSElimData423 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %394, i32 0, i32 86
  %395 = load ptr, ptr %GSElimData423, align 8, !tbaa !90
  %396 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom424 = sext i32 %396 to i64
  %arrayidx425 = getelementptr inbounds ptr, ptr %395, i64 %idxprom424
  store ptr null, ptr %arrayidx425, align 8, !tbaa !4
  br label %if.end426

if.end426:                                        ; preds = %if.then418, %for.body413
  br label %for.inc427

for.inc427:                                       ; preds = %if.end426
  %397 = load i32, ptr %i, align 4, !tbaa !92
  %inc428 = add nsw i32 %397, 1
  store i32 %inc428, ptr %i, align 4, !tbaa !92
  br label %for.cond411, !llvm.loop !108

for.end429:                                       ; preds = %for.cond411
  %398 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %GSElimData430 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %398, i32 0, i32 86
  %399 = load ptr, ptr %GSElimData430, align 8, !tbaa !90
  call void @hypre_Free(ptr noundef %399, i32 noundef 0)
  %400 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %GSElimData431 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %400, i32 0, i32 86
  store ptr null, ptr %GSElimData431, align 8, !tbaa !90
  br label %if.end432

if.end432:                                        ; preds = %for.end429, %if.end402
  %401 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %401, i32 noundef 0)
  store ptr null, ptr %mgr_data, align 8, !tbaa !4
  %402 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %402
}

declare void @hypre_Free(ptr noundef, i32 noundef) #2

declare i32 @hypre_ParVectorDestroy(ptr noundef) #2

declare i32 @hypre_BoomerAMGDestroy(ptr noundef) #2

declare i32 @hypre_SeqVectorDestroy(ptr noundef) #2

declare i32 @hypre_ParCSRMatrixDestroy(ptr noundef) #2

declare i32 @hypre_IntArrayDestroy(ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRDestroyFrelaxVcycleData(ptr noundef %data) #0 {
entry:
  %data.addr = alloca ptr, align 8
  %vdata = alloca ptr, align 8
  %i = alloca i32, align 4
  %num_levels = alloca i32, align 4
  %new_comm = alloca ptr, align 8
  store ptr %data, ptr %data.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %vdata) #6
  %0 = load ptr, ptr %data.addr, align 8, !tbaa !4
  store ptr %0, ptr %vdata, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_levels) #6
  %1 = load ptr, ptr %vdata, align 8, !tbaa !4
  %num_levels1 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %1, i32 0, i32 80
  %2 = load i32, ptr %num_levels1, align 8, !tbaa !111
  store i32 %2, ptr %num_levels, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_comm) #6
  %3 = load ptr, ptr %vdata, align 8, !tbaa !4
  %new_comm2 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %3, i32 0, i32 168
  %4 = load ptr, ptr %new_comm2, align 8, !tbaa !113
  store ptr %4, ptr %new_comm, align 8, !tbaa !4
  %5 = load ptr, ptr %vdata, align 8, !tbaa !4
  %dof_func_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %5, i32 0, i32 77
  %6 = load ptr, ptr %dof_func_array, align 8, !tbaa !114
  %arrayidx = getelementptr inbounds ptr, ptr %6, i64 0
  %7 = load ptr, ptr %arrayidx, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %7, i32 noundef 0)
  %8 = load ptr, ptr %vdata, align 8, !tbaa !4
  %dof_func_array3 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %8, i32 0, i32 77
  %9 = load ptr, ptr %dof_func_array3, align 8, !tbaa !114
  %arrayidx4 = getelementptr inbounds ptr, ptr %9, i64 0
  store ptr null, ptr %arrayidx4, align 8, !tbaa !4
  store i32 1, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, ptr %i, align 4, !tbaa !92
  %11 = load i32, ptr %num_levels, align 4, !tbaa !92
  %add = add nsw i32 %11, 1
  %cmp = icmp slt i32 %10, %add
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %12, i32 0, i32 71
  %13 = load ptr, ptr %A_array, align 8, !tbaa !115
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %14 to i64
  %arrayidx5 = getelementptr inbounds ptr, ptr %13, i64 %idxprom
  %15 = load ptr, ptr %arrayidx5, align 8, !tbaa !4
  %tobool = icmp ne ptr %15, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %16 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_array6 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %16, i32 0, i32 71
  %17 = load ptr, ptr %A_array6, align 8, !tbaa !115
  %18 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom7 = sext i32 %18 to i64
  %arrayidx8 = getelementptr inbounds ptr, ptr %17, i64 %idxprom7
  %19 = load ptr, ptr %arrayidx8, align 8, !tbaa !4
  %call = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %19)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %20 = load ptr, ptr %vdata, align 8, !tbaa !4
  %P_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %20, i32 0, i32 74
  %21 = load ptr, ptr %P_array, align 8, !tbaa !116
  %22 = load i32, ptr %i, align 4, !tbaa !92
  %sub = sub nsw i32 %22, 1
  %idxprom9 = sext i32 %sub to i64
  %arrayidx10 = getelementptr inbounds ptr, ptr %21, i64 %idxprom9
  %23 = load ptr, ptr %arrayidx10, align 8, !tbaa !4
  %tobool11 = icmp ne ptr %23, null
  br i1 %tobool11, label %if.then12, label %if.end18

if.then12:                                        ; preds = %if.end
  %24 = load ptr, ptr %vdata, align 8, !tbaa !4
  %P_array13 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %24, i32 0, i32 74
  %25 = load ptr, ptr %P_array13, align 8, !tbaa !116
  %26 = load i32, ptr %i, align 4, !tbaa !92
  %sub14 = sub nsw i32 %26, 1
  %idxprom15 = sext i32 %sub14 to i64
  %arrayidx16 = getelementptr inbounds ptr, ptr %25, i64 %idxprom15
  %27 = load ptr, ptr %arrayidx16, align 8, !tbaa !4
  %call17 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %27)
  br label %if.end18

if.end18:                                         ; preds = %if.then12, %if.end
  %28 = load ptr, ptr %vdata, align 8, !tbaa !4
  %CF_marker_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %28, i32 0, i32 76
  %29 = load ptr, ptr %CF_marker_array, align 8, !tbaa !117
  %30 = load i32, ptr %i, align 4, !tbaa !92
  %sub19 = sub nsw i32 %30, 1
  %idxprom20 = sext i32 %sub19 to i64
  %arrayidx21 = getelementptr inbounds ptr, ptr %29, i64 %idxprom20
  %31 = load ptr, ptr %arrayidx21, align 8, !tbaa !4
  %call22 = call i32 @hypre_IntArrayDestroy(ptr noundef %31)
  %32 = load ptr, ptr %vdata, align 8, !tbaa !4
  %F_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %32, i32 0, i32 72
  %33 = load ptr, ptr %F_array, align 8, !tbaa !118
  %34 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom23 = sext i32 %34 to i64
  %arrayidx24 = getelementptr inbounds ptr, ptr %33, i64 %idxprom23
  %35 = load ptr, ptr %arrayidx24, align 8, !tbaa !4
  %call25 = call i32 @hypre_ParVectorDestroy(ptr noundef %35)
  %36 = load ptr, ptr %vdata, align 8, !tbaa !4
  %U_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %36, i32 0, i32 73
  %37 = load ptr, ptr %U_array, align 8, !tbaa !119
  %38 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom26 = sext i32 %38 to i64
  %arrayidx27 = getelementptr inbounds ptr, ptr %37, i64 %idxprom26
  %39 = load ptr, ptr %arrayidx27, align 8, !tbaa !4
  %call28 = call i32 @hypre_ParVectorDestroy(ptr noundef %39)
  %40 = load ptr, ptr %vdata, align 8, !tbaa !4
  %dof_func_array29 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %40, i32 0, i32 77
  %41 = load ptr, ptr %dof_func_array29, align 8, !tbaa !114
  %42 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom30 = sext i32 %42 to i64
  %arrayidx31 = getelementptr inbounds ptr, ptr %41, i64 %idxprom30
  %43 = load ptr, ptr %arrayidx31, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %43, i32 noundef 0)
  %44 = load ptr, ptr %vdata, align 8, !tbaa !4
  %dof_func_array32 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %44, i32 0, i32 77
  %45 = load ptr, ptr %dof_func_array32, align 8, !tbaa !114
  %46 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom33 = sext i32 %46 to i64
  %arrayidx34 = getelementptr inbounds ptr, ptr %45, i64 %idxprom33
  store ptr null, ptr %arrayidx34, align 8, !tbaa !4
  br label %for.inc

for.inc:                                          ; preds = %if.end18
  %47 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %47, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !120

for.end:                                          ; preds = %for.cond
  %48 = load i32, ptr %num_levels, align 4, !tbaa !92
  %cmp35 = icmp slt i32 %48, 1
  br i1 %cmp35, label %if.then36, label %if.end40

if.then36:                                        ; preds = %for.end
  %49 = load ptr, ptr %vdata, align 8, !tbaa !4
  %CF_marker_array37 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %49, i32 0, i32 76
  %50 = load ptr, ptr %CF_marker_array37, align 8, !tbaa !117
  %arrayidx38 = getelementptr inbounds ptr, ptr %50, i64 0
  %51 = load ptr, ptr %arrayidx38, align 8, !tbaa !4
  %call39 = call i32 @hypre_IntArrayDestroy(ptr noundef %51)
  br label %if.end40

if.end40:                                         ; preds = %if.then36, %for.end
  %52 = load ptr, ptr %vdata, align 8, !tbaa !4
  %F_array41 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %52, i32 0, i32 72
  %53 = load ptr, ptr %F_array41, align 8, !tbaa !118
  call void @hypre_Free(ptr noundef %53, i32 noundef 0)
  %54 = load ptr, ptr %vdata, align 8, !tbaa !4
  %F_array42 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %54, i32 0, i32 72
  store ptr null, ptr %F_array42, align 8, !tbaa !118
  %55 = load ptr, ptr %vdata, align 8, !tbaa !4
  %U_array43 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %55, i32 0, i32 73
  %56 = load ptr, ptr %U_array43, align 8, !tbaa !119
  call void @hypre_Free(ptr noundef %56, i32 noundef 0)
  %57 = load ptr, ptr %vdata, align 8, !tbaa !4
  %U_array44 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %57, i32 0, i32 73
  store ptr null, ptr %U_array44, align 8, !tbaa !119
  %58 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_array45 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %58, i32 0, i32 71
  %59 = load ptr, ptr %A_array45, align 8, !tbaa !115
  call void @hypre_Free(ptr noundef %59, i32 noundef 0)
  %60 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_array46 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %60, i32 0, i32 71
  store ptr null, ptr %A_array46, align 8, !tbaa !115
  %61 = load ptr, ptr %vdata, align 8, !tbaa !4
  %P_array47 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %61, i32 0, i32 74
  %62 = load ptr, ptr %P_array47, align 8, !tbaa !116
  call void @hypre_Free(ptr noundef %62, i32 noundef 0)
  %63 = load ptr, ptr %vdata, align 8, !tbaa !4
  %P_array48 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %63, i32 0, i32 74
  store ptr null, ptr %P_array48, align 8, !tbaa !116
  %64 = load ptr, ptr %vdata, align 8, !tbaa !4
  %CF_marker_array49 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %64, i32 0, i32 76
  %65 = load ptr, ptr %CF_marker_array49, align 8, !tbaa !117
  call void @hypre_Free(ptr noundef %65, i32 noundef 0)
  %66 = load ptr, ptr %vdata, align 8, !tbaa !4
  %CF_marker_array50 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %66, i32 0, i32 76
  store ptr null, ptr %CF_marker_array50, align 8, !tbaa !117
  %67 = load ptr, ptr %vdata, align 8, !tbaa !4
  %dof_func_array51 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %67, i32 0, i32 77
  %68 = load ptr, ptr %dof_func_array51, align 8, !tbaa !114
  call void @hypre_Free(ptr noundef %68, i32 noundef 0)
  %69 = load ptr, ptr %vdata, align 8, !tbaa !4
  %dof_func_array52 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %69, i32 0, i32 77
  store ptr null, ptr %dof_func_array52, align 8, !tbaa !114
  %70 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_mat = getelementptr inbounds %struct.hypre_ParAMGData, ptr %70, i32 0, i32 170
  %71 = load ptr, ptr %A_mat, align 8, !tbaa !121
  %tobool53 = icmp ne ptr %71, null
  br i1 %tobool53, label %if.then54, label %if.end57

if.then54:                                        ; preds = %if.end40
  %72 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_mat55 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %72, i32 0, i32 170
  %73 = load ptr, ptr %A_mat55, align 8, !tbaa !121
  call void @hypre_Free(ptr noundef %73, i32 noundef 0)
  %74 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_mat56 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %74, i32 0, i32 170
  store ptr null, ptr %A_mat56, align 8, !tbaa !121
  br label %if.end57

if.end57:                                         ; preds = %if.then54, %if.end40
  %75 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_inv = getelementptr inbounds %struct.hypre_ParAMGData, ptr %75, i32 0, i32 171
  %76 = load ptr, ptr %A_inv, align 8, !tbaa !122
  %tobool58 = icmp ne ptr %76, null
  br i1 %tobool58, label %if.then59, label %if.end62

if.then59:                                        ; preds = %if.end57
  %77 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_inv60 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %77, i32 0, i32 171
  %78 = load ptr, ptr %A_inv60, align 8, !tbaa !122
  call void @hypre_Free(ptr noundef %78, i32 noundef 0)
  %79 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_inv61 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %79, i32 0, i32 171
  store ptr null, ptr %A_inv61, align 8, !tbaa !122
  br label %if.end62

if.end62:                                         ; preds = %if.then59, %if.end57
  %80 = load ptr, ptr %vdata, align 8, !tbaa !4
  %b_vec = getelementptr inbounds %struct.hypre_ParAMGData, ptr %80, i32 0, i32 172
  %81 = load ptr, ptr %b_vec, align 8, !tbaa !123
  %tobool63 = icmp ne ptr %81, null
  br i1 %tobool63, label %if.then64, label %if.end67

if.then64:                                        ; preds = %if.end62
  %82 = load ptr, ptr %vdata, align 8, !tbaa !4
  %b_vec65 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %82, i32 0, i32 172
  %83 = load ptr, ptr %b_vec65, align 8, !tbaa !123
  call void @hypre_Free(ptr noundef %83, i32 noundef 0)
  %84 = load ptr, ptr %vdata, align 8, !tbaa !4
  %b_vec66 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %84, i32 0, i32 172
  store ptr null, ptr %b_vec66, align 8, !tbaa !123
  br label %if.end67

if.end67:                                         ; preds = %if.then64, %if.end62
  %85 = load ptr, ptr %vdata, align 8, !tbaa !4
  %comm_info = getelementptr inbounds %struct.hypre_ParAMGData, ptr %85, i32 0, i32 173
  %86 = load ptr, ptr %comm_info, align 8, !tbaa !124
  %tobool68 = icmp ne ptr %86, null
  br i1 %tobool68, label %if.then69, label %if.end72

if.then69:                                        ; preds = %if.end67
  %87 = load ptr, ptr %vdata, align 8, !tbaa !4
  %comm_info70 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %87, i32 0, i32 173
  %88 = load ptr, ptr %comm_info70, align 8, !tbaa !124
  call void @hypre_Free(ptr noundef %88, i32 noundef 0)
  %89 = load ptr, ptr %vdata, align 8, !tbaa !4
  %comm_info71 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %89, i32 0, i32 173
  store ptr null, ptr %comm_info71, align 8, !tbaa !124
  br label %if.end72

if.end72:                                         ; preds = %if.then69, %if.end67
  %90 = load ptr, ptr %new_comm, align 8, !tbaa !4
  %cmp73 = icmp ne ptr %90, @ompi_mpi_comm_null
  br i1 %cmp73, label %if.then74, label %if.end76

if.then74:                                        ; preds = %if.end72
  %call75 = call i32 @hypre_MPI_Comm_free(ptr noundef %new_comm)
  br label %if.end76

if.end76:                                         ; preds = %if.then74, %if.end72
  %91 = load ptr, ptr %vdata, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %91, i32 noundef 0)
  store ptr null, ptr %vdata, align 8, !tbaa !4
  %92 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_comm) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %vdata) #6
  ret i32 %92
}

declare i32 @HYPRE_EuclidDestroy(ptr noundef) #2

declare i32 @HYPRE_ILUDestroy(ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRDestroyGSElimData(ptr noundef %data) #0 {
entry:
  %data.addr = alloca ptr, align 8
  %gsdata = alloca ptr, align 8
  %new_comm = alloca ptr, align 8
  store ptr %data, ptr %data.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %gsdata) #6
  %0 = load ptr, ptr %data.addr, align 8, !tbaa !4
  store ptr %0, ptr %gsdata, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_comm) #6
  %1 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %new_comm1 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %1, i32 0, i32 168
  %2 = load ptr, ptr %new_comm1, align 8, !tbaa !113
  store ptr %2, ptr %new_comm, align 8, !tbaa !4
  %3 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %A_mat = getelementptr inbounds %struct.hypre_ParAMGData, ptr %3, i32 0, i32 170
  %4 = load ptr, ptr %A_mat, align 8, !tbaa !121
  %tobool = icmp ne ptr %4, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %A_mat2 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %5, i32 0, i32 170
  %6 = load ptr, ptr %A_mat2, align 8, !tbaa !121
  call void @hypre_Free(ptr noundef %6, i32 noundef 0)
  %7 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %A_mat3 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %7, i32 0, i32 170
  store ptr null, ptr %A_mat3, align 8, !tbaa !121
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %A_inv = getelementptr inbounds %struct.hypre_ParAMGData, ptr %8, i32 0, i32 171
  %9 = load ptr, ptr %A_inv, align 8, !tbaa !122
  %tobool4 = icmp ne ptr %9, null
  br i1 %tobool4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  %10 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %A_inv6 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %10, i32 0, i32 171
  %11 = load ptr, ptr %A_inv6, align 8, !tbaa !122
  call void @hypre_Free(ptr noundef %11, i32 noundef 0)
  %12 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %A_inv7 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %12, i32 0, i32 171
  store ptr null, ptr %A_inv7, align 8, !tbaa !122
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.end
  %13 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %b_vec = getelementptr inbounds %struct.hypre_ParAMGData, ptr %13, i32 0, i32 172
  %14 = load ptr, ptr %b_vec, align 8, !tbaa !123
  %tobool9 = icmp ne ptr %14, null
  br i1 %tobool9, label %if.then10, label %if.end13

if.then10:                                        ; preds = %if.end8
  %15 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %b_vec11 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %15, i32 0, i32 172
  %16 = load ptr, ptr %b_vec11, align 8, !tbaa !123
  call void @hypre_Free(ptr noundef %16, i32 noundef 0)
  %17 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %b_vec12 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %17, i32 0, i32 172
  store ptr null, ptr %b_vec12, align 8, !tbaa !123
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %if.end8
  %18 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %comm_info = getelementptr inbounds %struct.hypre_ParAMGData, ptr %18, i32 0, i32 173
  %19 = load ptr, ptr %comm_info, align 8, !tbaa !124
  %tobool14 = icmp ne ptr %19, null
  br i1 %tobool14, label %if.then15, label %if.end18

if.then15:                                        ; preds = %if.end13
  %20 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %comm_info16 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %20, i32 0, i32 173
  %21 = load ptr, ptr %comm_info16, align 8, !tbaa !124
  call void @hypre_Free(ptr noundef %21, i32 noundef 0)
  %22 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %comm_info17 = getelementptr inbounds %struct.hypre_ParAMGData, ptr %22, i32 0, i32 173
  store ptr null, ptr %comm_info17, align 8, !tbaa !124
  br label %if.end18

if.end18:                                         ; preds = %if.then15, %if.end13
  %23 = load ptr, ptr %new_comm, align 8, !tbaa !4
  %cmp = icmp ne ptr %23, @ompi_mpi_comm_null
  br i1 %cmp, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end18
  %call = call i32 @hypre_MPI_Comm_free(ptr noundef %new_comm)
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end18
  %24 = load ptr, ptr %gsdata, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %24, i32 noundef 0)
  store ptr null, ptr %gsdata, align 8, !tbaa !4
  %25 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_comm) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %gsdata) #6
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define ptr @hypre_MGRCreateGSElimData() #0 {
entry:
  %gsdata = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %gsdata) #6
  %call = call ptr @hypre_CAlloc(i64 noundef 1, i64 noundef 1712, i32 noundef 0)
  store ptr %call, ptr %gsdata, align 8, !tbaa !4
  %0 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %gs_setup = getelementptr inbounds %struct.hypre_ParAMGData, ptr %0, i32 0, i32 169
  store i32 0, ptr %gs_setup, align 8, !tbaa !125
  %1 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %A_mat = getelementptr inbounds %struct.hypre_ParAMGData, ptr %1, i32 0, i32 170
  store ptr null, ptr %A_mat, align 8, !tbaa !121
  %2 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %A_inv = getelementptr inbounds %struct.hypre_ParAMGData, ptr %2, i32 0, i32 171
  store ptr null, ptr %A_inv, align 8, !tbaa !122
  %3 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %b_vec = getelementptr inbounds %struct.hypre_ParAMGData, ptr %3, i32 0, i32 172
  store ptr null, ptr %b_vec, align 8, !tbaa !123
  %4 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %comm_info = getelementptr inbounds %struct.hypre_ParAMGData, ptr %4, i32 0, i32 173
  store ptr null, ptr %comm_info, align 8, !tbaa !124
  %5 = load ptr, ptr %gsdata, align 8, !tbaa !4
  %new_comm = getelementptr inbounds %struct.hypre_ParAMGData, ptr %5, i32 0, i32 168
  store ptr @ompi_mpi_comm_null, ptr %new_comm, align 8, !tbaa !113
  %6 = load ptr, ptr %gsdata, align 8, !tbaa !4
  call void @llvm.lifetime.end.p0(i64 8, ptr %gsdata) #6
  ret ptr %6
}

declare i32 @hypre_MPI_Comm_free(ptr noundef) #2

; Function Attrs: nounwind uwtable
define ptr @hypre_MGRCreateFrelaxVcycleData() #0 {
entry:
  %vdata = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %vdata) #6
  %call = call ptr @hypre_CAlloc(i64 noundef 1, i64 noundef 1712, i32 noundef 0)
  store ptr %call, ptr %vdata, align 8, !tbaa !4
  %0 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %0, i32 0, i32 71
  store ptr null, ptr %A_array, align 8, !tbaa !115
  %1 = load ptr, ptr %vdata, align 8, !tbaa !4
  %P_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %1, i32 0, i32 74
  store ptr null, ptr %P_array, align 8, !tbaa !116
  %2 = load ptr, ptr %vdata, align 8, !tbaa !4
  %F_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %2, i32 0, i32 72
  store ptr null, ptr %F_array, align 8, !tbaa !118
  %3 = load ptr, ptr %vdata, align 8, !tbaa !4
  %CF_marker_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %3, i32 0, i32 76
  store ptr null, ptr %CF_marker_array, align 8, !tbaa !117
  %4 = load ptr, ptr %vdata, align 8, !tbaa !4
  %Vtemp = getelementptr inbounds %struct.hypre_ParAMGData, ptr %4, i32 0, i32 132
  store ptr null, ptr %Vtemp, align 8, !tbaa !126
  %5 = load ptr, ptr %vdata, align 8, !tbaa !4
  %Ztemp = getelementptr inbounds %struct.hypre_ParAMGData, ptr %5, i32 0, i32 138
  store ptr null, ptr %Ztemp, align 8, !tbaa !127
  %6 = load ptr, ptr %vdata, align 8, !tbaa !4
  %U_array = getelementptr inbounds %struct.hypre_ParAMGData, ptr %6, i32 0, i32 73
  store ptr null, ptr %U_array, align 8, !tbaa !119
  %7 = load ptr, ptr %vdata, align 8, !tbaa !4
  %new_comm = getelementptr inbounds %struct.hypre_ParAMGData, ptr %7, i32 0, i32 168
  store ptr @ompi_mpi_comm_null, ptr %new_comm, align 8, !tbaa !113
  %8 = load ptr, ptr %vdata, align 8, !tbaa !4
  %num_levels = getelementptr inbounds %struct.hypre_ParAMGData, ptr %8, i32 0, i32 80
  store i32 0, ptr %num_levels, align 8, !tbaa !111
  %9 = load ptr, ptr %vdata, align 8, !tbaa !4
  %max_levels = getelementptr inbounds %struct.hypre_ParAMGData, ptr %9, i32 0, i32 1
  store i32 10, ptr %max_levels, align 4, !tbaa !128
  %10 = load ptr, ptr %vdata, align 8, !tbaa !4
  %num_functions = getelementptr inbounds %struct.hypre_ParAMGData, ptr %10, i32 0, i32 62
  store i32 1, ptr %num_functions, align 4, !tbaa !129
  %11 = load ptr, ptr %vdata, align 8, !tbaa !4
  %S_commpkg_switch = getelementptr inbounds %struct.hypre_ParAMGData, ptr %11, i32 0, i32 11
  store double 1.000000e+00, ptr %S_commpkg_switch, align 8, !tbaa !130
  %12 = load ptr, ptr %vdata, align 8, !tbaa !4
  %relax_order = getelementptr inbounds %struct.hypre_ParAMGData, ptr %12, i32 0, i32 48
  store i32 1, ptr %relax_order, align 8, !tbaa !131
  %13 = load ptr, ptr %vdata, align 8, !tbaa !4
  %max_coarse_size = getelementptr inbounds %struct.hypre_ParAMGData, ptr %13, i32 0, i32 35
  store i32 9, ptr %max_coarse_size, align 8, !tbaa !132
  %14 = load ptr, ptr %vdata, align 8, !tbaa !4
  %min_coarse_size = getelementptr inbounds %struct.hypre_ParAMGData, ptr %14, i32 0, i32 36
  store i32 0, ptr %min_coarse_size, align 4, !tbaa !133
  %15 = load ptr, ptr %vdata, align 8, !tbaa !4
  %user_coarse_relax_type = getelementptr inbounds %struct.hypre_ParAMGData, ptr %15, i32 0, i32 49
  store i32 9, ptr %user_coarse_relax_type, align 4, !tbaa !134
  %16 = load ptr, ptr %vdata, align 8, !tbaa !4
  %gs_setup = getelementptr inbounds %struct.hypre_ParAMGData, ptr %16, i32 0, i32 169
  store i32 0, ptr %gs_setup, align 8, !tbaa !125
  %17 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_mat = getelementptr inbounds %struct.hypre_ParAMGData, ptr %17, i32 0, i32 170
  store ptr null, ptr %A_mat, align 8, !tbaa !121
  %18 = load ptr, ptr %vdata, align 8, !tbaa !4
  %A_inv = getelementptr inbounds %struct.hypre_ParAMGData, ptr %18, i32 0, i32 171
  store ptr null, ptr %A_inv, align 8, !tbaa !122
  %19 = load ptr, ptr %vdata, align 8, !tbaa !4
  %b_vec = getelementptr inbounds %struct.hypre_ParAMGData, ptr %19, i32 0, i32 172
  store ptr null, ptr %b_vec, align 8, !tbaa !123
  %20 = load ptr, ptr %vdata, align 8, !tbaa !4
  %comm_info = getelementptr inbounds %struct.hypre_ParAMGData, ptr %20, i32 0, i32 173
  store ptr null, ptr %comm_info, align 8, !tbaa !124
  %21 = load ptr, ptr %vdata, align 8, !tbaa !4
  call void @llvm.lifetime.end.p0(i64 8, ptr %vdata) #6
  ret ptr %21
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetReductionLevelCpoints(ptr noundef %mgr_vdata, i32 noundef %nlevels, ptr noundef %num_coarse_points, ptr noundef %level_coarse_indexes) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %nlevels.addr = alloca i32, align 4
  %num_coarse_points.addr = alloca ptr, align 8
  %level_coarse_indexes.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %nlevels, ptr %nlevels.addr, align 4, !tbaa !92
  store ptr %num_coarse_points, ptr %num_coarse_points.addr, align 8, !tbaa !4
  store ptr %level_coarse_indexes, ptr %level_coarse_indexes.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %nlevels.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_coarse_levels = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 4
  store i32 %1, ptr %num_coarse_levels, align 8, !tbaa !91
  %3 = load ptr, ptr %num_coarse_points.addr, align 8, !tbaa !4
  %4 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_coarse_per_level = getelementptr inbounds %struct.hypre_ParMGRData, ptr %4, i32 0, i32 5
  store ptr %3, ptr %num_coarse_per_level, align 8, !tbaa !135
  %5 = load ptr, ptr %level_coarse_indexes.addr, align 8, !tbaa !4
  %6 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_coarse_indexes1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %6, i32 0, i32 6
  store ptr %5, ptr %level_coarse_indexes1, align 8, !tbaa !136
  %7 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetNonCpointsToFpoints(ptr noundef %mgr_vdata, i32 noundef %nonCptToFptFlag) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %nonCptToFptFlag.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %nonCptToFptFlag, ptr %nonCptToFptFlag.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %nonCptToFptFlag.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %set_non_Cpoints_to_F = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 70
  store i32 %1, ptr %set_non_Cpoints_to_F, align 8, !tbaa !74
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetReservedCpointsLevelToKeep(ptr noundef %mgr_vdata, i32 noundef %level) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %level.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %level, ptr %level.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %level.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %lvl_to_keep_cpoints = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 83
  store i32 %1, ptr %lvl_to_keep_cpoints, align 4, !tbaa !85
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetCpointsByContiguousBlock(ptr noundef %mgr_vdata, i32 noundef %block_size, i32 noundef %max_num_levels, ptr noundef %begin_idx_array, ptr noundef %block_num_coarse_points, ptr noundef %block_coarse_indexes) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %block_size.addr = alloca i32, align 4
  %max_num_levels.addr = alloca i32, align 4
  %begin_idx_array.addr = alloca ptr, align 8
  %block_num_coarse_points.addr = alloca ptr, align 8
  %block_coarse_indexes.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %index_array = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %block_size, ptr %block_size.addr, align 4, !tbaa !92
  store i32 %max_num_levels, ptr %max_num_levels.addr, align 4, !tbaa !92
  store ptr %begin_idx_array, ptr %begin_idx_array.addr, align 8, !tbaa !4
  store ptr %block_num_coarse_points, ptr %block_num_coarse_points.addr, align 8, !tbaa !4
  store ptr %block_coarse_indexes, ptr %block_coarse_indexes.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %idx_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 71
  %2 = load ptr, ptr %idx_array, align 8, !tbaa !75
  %cmp = icmp ne ptr %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %idx_array1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 71
  %4 = load ptr, ptr %idx_array1, align 8, !tbaa !75
  call void @hypre_Free(ptr noundef %4, i32 noundef 0)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %idx_array2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 71
  store ptr null, ptr %idx_array2, align 8, !tbaa !75
  %6 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %idx_array3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %6, i32 0, i32 71
  store ptr null, ptr %idx_array3, align 8, !tbaa !75
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %index_array) #6
  %7 = load i32, ptr %block_size.addr, align 4, !tbaa !92
  %conv = sext i32 %7 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %index_array, align 8, !tbaa !4
  %8 = load ptr, ptr %begin_idx_array.addr, align 8, !tbaa !4
  %cmp4 = icmp ne ptr %8, null
  br i1 %cmp4, label %if.then6, label %if.end9

if.then6:                                         ; preds = %if.end
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then6
  %9 = load i32, ptr %i, align 4, !tbaa !92
  %10 = load i32, ptr %block_size.addr, align 4, !tbaa !92
  %cmp7 = icmp slt i32 %9, %10
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load ptr, ptr %begin_idx_array.addr, align 8, !tbaa !4
  %12 = load i32, ptr %i, align 4, !tbaa !92
  %idx.ext = sext i32 %12 to i64
  %add.ptr = getelementptr inbounds i32, ptr %11, i64 %idx.ext
  %13 = load i32, ptr %add.ptr, align 4, !tbaa !92
  %14 = load ptr, ptr %index_array, align 8, !tbaa !4
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %15 to i64
  %arrayidx = getelementptr inbounds i32, ptr %14, i64 %idxprom
  store i32 %13, ptr %arrayidx, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %16, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !137

for.end:                                          ; preds = %for.cond
  br label %if.end9

if.end9:                                          ; preds = %for.end, %if.end
  %17 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %18 = load i32, ptr %block_size.addr, align 4, !tbaa !92
  %19 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %20 = load ptr, ptr %block_num_coarse_points.addr, align 8, !tbaa !4
  %21 = load ptr, ptr %block_coarse_indexes.addr, align 8, !tbaa !4
  %call10 = call i32 @hypre_MGRSetCpointsByBlock(ptr noundef %17, i32 noundef %18, i32 noundef %19, ptr noundef %20, ptr noundef %21)
  %22 = load ptr, ptr %index_array, align 8, !tbaa !4
  %23 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %idx_array11 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %23, i32 0, i32 71
  store ptr %22, ptr %idx_array11, align 8, !tbaa !75
  %24 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %set_c_points_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %24, i32 0, i32 82
  store i32 1, ptr %set_c_points_method, align 8, !tbaa !84
  %25 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %index_array) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetCpointsByBlock(ptr noundef %mgr_vdata, i32 noundef %block_size, i32 noundef %max_num_levels, ptr noundef %block_num_coarse_points, ptr noundef %block_coarse_indexes) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %block_size.addr = alloca i32, align 4
  %max_num_levels.addr = alloca i32, align 4
  %block_num_coarse_points.addr = alloca ptr, align 8
  %block_coarse_indexes.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %block_cf_marker = alloca ptr, align 8
  %block_num_coarse_indexes = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %block_size, ptr %block_size.addr, align 4, !tbaa !92
  store i32 %max_num_levels, ptr %max_num_levels.addr, align 4, !tbaa !92
  store ptr %block_num_coarse_points, ptr %block_num_coarse_points.addr, align 8, !tbaa !4
  store ptr %block_coarse_indexes, ptr %block_coarse_indexes.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %block_cf_marker) #6
  store ptr null, ptr %block_cf_marker, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %block_num_coarse_indexes) #6
  store ptr null, ptr %block_num_coarse_indexes, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 3
  %2 = load ptr, ptr %block_cf_marker1, align 8, !tbaa !14
  %cmp = icmp ne ptr %2, null
  br i1 %cmp, label %if.then, label %if.end17

if.then:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, ptr %i, align 4, !tbaa !92
  %4 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels = getelementptr inbounds %struct.hypre_ParMGRData, ptr %4, i32 0, i32 7
  %5 = load i32, ptr %max_num_coarse_levels, align 8, !tbaa !15
  %cmp2 = icmp slt i32 %3, %5
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %6, i32 0, i32 3
  %7 = load ptr, ptr %block_cf_marker3, align 8, !tbaa !14
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds ptr, ptr %7, i64 %idxprom
  %9 = load ptr, ptr %arrayidx, align 8, !tbaa !4
  %tobool = icmp ne ptr %9, null
  br i1 %tobool, label %if.then4, label %if.end

if.then4:                                         ; preds = %for.body
  %10 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker5 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %10, i32 0, i32 3
  %11 = load ptr, ptr %block_cf_marker5, align 8, !tbaa !14
  %12 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom6 = sext i32 %12 to i64
  %arrayidx7 = getelementptr inbounds ptr, ptr %11, i64 %idxprom6
  %13 = load ptr, ptr %arrayidx7, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %13, i32 noundef 0)
  %14 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker8 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %14, i32 0, i32 3
  %15 = load ptr, ptr %block_cf_marker8, align 8, !tbaa !14
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom9 = sext i32 %16 to i64
  %arrayidx10 = getelementptr inbounds ptr, ptr %15, i64 %idxprom9
  store ptr null, ptr %arrayidx10, align 8, !tbaa !4
  %17 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker11 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %17, i32 0, i32 3
  %18 = load ptr, ptr %block_cf_marker11, align 8, !tbaa !14
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom12 = sext i32 %19 to i64
  %arrayidx13 = getelementptr inbounds ptr, ptr %18, i64 %idxprom12
  store ptr null, ptr %arrayidx13, align 8, !tbaa !4
  br label %if.end

if.end:                                           ; preds = %if.then4, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %20, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !138

for.end:                                          ; preds = %for.cond
  %21 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker14 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %21, i32 0, i32 3
  %22 = load ptr, ptr %block_cf_marker14, align 8, !tbaa !14
  call void @hypre_Free(ptr noundef %22, i32 noundef 0)
  %23 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker15 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %23, i32 0, i32 3
  store ptr null, ptr %block_cf_marker15, align 8, !tbaa !14
  %24 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker16 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %24, i32 0, i32 3
  store ptr null, ptr %block_cf_marker16, align 8, !tbaa !14
  br label %if.end17

if.end17:                                         ; preds = %for.end, %entry
  %25 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes18 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %25, i32 0, i32 1
  %26 = load ptr, ptr %block_num_coarse_indexes18, align 8, !tbaa !12
  %tobool19 = icmp ne ptr %26, null
  br i1 %tobool19, label %if.then20, label %if.end24

if.then20:                                        ; preds = %if.end17
  %27 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes21 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %27, i32 0, i32 1
  %28 = load ptr, ptr %block_num_coarse_indexes21, align 8, !tbaa !12
  call void @hypre_Free(ptr noundef %28, i32 noundef 0)
  %29 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes22 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %29, i32 0, i32 1
  store ptr null, ptr %block_num_coarse_indexes22, align 8, !tbaa !12
  %30 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes23 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %30, i32 0, i32 1
  store ptr null, ptr %block_num_coarse_indexes23, align 8, !tbaa !12
  br label %if.end24

if.end24:                                         ; preds = %if.then20, %if.end17
  %31 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %conv = sext i32 %31 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 8, i32 noundef 0)
  store ptr %call, ptr %block_cf_marker, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc36, %if.end24
  %32 = load i32, ptr %i, align 4, !tbaa !92
  %33 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %cmp26 = icmp slt i32 %32, %33
  br i1 %cmp26, label %for.body28, label %for.end38

for.body28:                                       ; preds = %for.cond25
  %34 = load i32, ptr %block_size.addr, align 4, !tbaa !92
  %conv29 = sext i32 %34 to i64
  %call30 = call ptr @hypre_CAlloc(i64 noundef %conv29, i64 noundef 4, i32 noundef 0)
  %35 = load ptr, ptr %block_cf_marker, align 8, !tbaa !4
  %36 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom31 = sext i32 %36 to i64
  %arrayidx32 = getelementptr inbounds ptr, ptr %35, i64 %idxprom31
  store ptr %call30, ptr %arrayidx32, align 8, !tbaa !4
  %37 = load ptr, ptr %block_cf_marker, align 8, !tbaa !4
  %38 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom33 = sext i32 %38 to i64
  %arrayidx34 = getelementptr inbounds ptr, ptr %37, i64 %idxprom33
  %39 = load ptr, ptr %arrayidx34, align 8, !tbaa !4
  %40 = load i32, ptr %block_size.addr, align 4, !tbaa !92
  %conv35 = sext i32 %40 to i64
  %mul = mul i64 %conv35, 4
  call void @llvm.memset.p0.i64(ptr align 4 %39, i8 -1, i64 %mul, i1 false)
  br label %for.inc36

for.inc36:                                        ; preds = %for.body28
  %41 = load i32, ptr %i, align 4, !tbaa !92
  %inc37 = add nsw i32 %41, 1
  store i32 %inc37, ptr %i, align 4, !tbaa !92
  br label %for.cond25, !llvm.loop !139

for.end38:                                        ; preds = %for.cond25
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond39

for.cond39:                                       ; preds = %for.inc60, %for.end38
  %42 = load i32, ptr %i, align 4, !tbaa !92
  %43 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %cmp40 = icmp slt i32 %42, %43
  br i1 %cmp40, label %for.body42, label %for.end62

for.body42:                                       ; preds = %for.cond39
  store i32 0, ptr %j, align 4, !tbaa !92
  br label %for.cond43

for.cond43:                                       ; preds = %for.inc57, %for.body42
  %44 = load i32, ptr %j, align 4, !tbaa !92
  %45 = load ptr, ptr %block_num_coarse_points.addr, align 8, !tbaa !4
  %46 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom44 = sext i32 %46 to i64
  %arrayidx45 = getelementptr inbounds i32, ptr %45, i64 %idxprom44
  %47 = load i32, ptr %arrayidx45, align 4, !tbaa !92
  %cmp46 = icmp slt i32 %44, %47
  br i1 %cmp46, label %for.body48, label %for.end59

for.body48:                                       ; preds = %for.cond43
  %48 = load ptr, ptr %block_cf_marker, align 8, !tbaa !4
  %49 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom49 = sext i32 %49 to i64
  %arrayidx50 = getelementptr inbounds ptr, ptr %48, i64 %idxprom49
  %50 = load ptr, ptr %arrayidx50, align 8, !tbaa !4
  %51 = load ptr, ptr %block_coarse_indexes.addr, align 8, !tbaa !4
  %52 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom51 = sext i32 %52 to i64
  %arrayidx52 = getelementptr inbounds ptr, ptr %51, i64 %idxprom51
  %53 = load ptr, ptr %arrayidx52, align 8, !tbaa !4
  %54 = load i32, ptr %j, align 4, !tbaa !92
  %idxprom53 = sext i32 %54 to i64
  %arrayidx54 = getelementptr inbounds i32, ptr %53, i64 %idxprom53
  %55 = load i32, ptr %arrayidx54, align 4, !tbaa !92
  %idxprom55 = sext i32 %55 to i64
  %arrayidx56 = getelementptr inbounds i32, ptr %50, i64 %idxprom55
  store i32 1, ptr %arrayidx56, align 4, !tbaa !92
  br label %for.inc57

for.inc57:                                        ; preds = %for.body48
  %56 = load i32, ptr %j, align 4, !tbaa !92
  %inc58 = add nsw i32 %56, 1
  store i32 %inc58, ptr %j, align 4, !tbaa !92
  br label %for.cond43, !llvm.loop !140

for.end59:                                        ; preds = %for.cond43
  br label %for.inc60

for.inc60:                                        ; preds = %for.end59
  %57 = load i32, ptr %i, align 4, !tbaa !92
  %inc61 = add nsw i32 %57, 1
  store i32 %inc61, ptr %i, align 4, !tbaa !92
  br label %for.cond39, !llvm.loop !141

for.end62:                                        ; preds = %for.cond39
  %58 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %cmp63 = icmp sgt i32 %58, 0
  br i1 %cmp63, label %if.then65, label %if.end79

if.then65:                                        ; preds = %for.end62
  %59 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %conv66 = sext i32 %59 to i64
  %call67 = call ptr @hypre_CAlloc(i64 noundef %conv66, i64 noundef 4, i32 noundef 0)
  store ptr %call67, ptr %block_num_coarse_indexes, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond68

for.cond68:                                       ; preds = %for.inc76, %if.then65
  %60 = load i32, ptr %i, align 4, !tbaa !92
  %61 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %cmp69 = icmp slt i32 %60, %61
  br i1 %cmp69, label %for.body71, label %for.end78

for.body71:                                       ; preds = %for.cond68
  %62 = load ptr, ptr %block_num_coarse_points.addr, align 8, !tbaa !4
  %63 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom72 = sext i32 %63 to i64
  %arrayidx73 = getelementptr inbounds i32, ptr %62, i64 %idxprom72
  %64 = load i32, ptr %arrayidx73, align 4, !tbaa !92
  %65 = load ptr, ptr %block_num_coarse_indexes, align 8, !tbaa !4
  %66 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom74 = sext i32 %66 to i64
  %arrayidx75 = getelementptr inbounds i32, ptr %65, i64 %idxprom74
  store i32 %64, ptr %arrayidx75, align 4, !tbaa !92
  br label %for.inc76

for.inc76:                                        ; preds = %for.body71
  %67 = load i32, ptr %i, align 4, !tbaa !92
  %inc77 = add nsw i32 %67, 1
  store i32 %inc77, ptr %i, align 4, !tbaa !92
  br label %for.cond68, !llvm.loop !142

for.end78:                                        ; preds = %for.cond68
  br label %if.end79

if.end79:                                         ; preds = %for.end78, %for.end62
  %68 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %69 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels80 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %69, i32 0, i32 7
  store i32 %68, ptr %max_num_coarse_levels80, align 8, !tbaa !15
  %70 = load i32, ptr %block_size.addr, align 4, !tbaa !92
  %71 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_size81 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %71, i32 0, i32 0
  store i32 %70, ptr %block_size81, align 8, !tbaa !8
  %72 = load ptr, ptr %block_num_coarse_indexes, align 8, !tbaa !4
  %73 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes82 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %73, i32 0, i32 1
  store ptr %72, ptr %block_num_coarse_indexes82, align 8, !tbaa !12
  %74 = load ptr, ptr %block_cf_marker, align 8, !tbaa !4
  %75 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker83 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %75, i32 0, i32 3
  store ptr %74, ptr %block_cf_marker83, align 8, !tbaa !14
  %76 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %set_c_points_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %76, i32 0, i32 82
  store i32 0, ptr %set_c_points_method, align 8, !tbaa !84
  %77 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %block_num_coarse_indexes) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %block_cf_marker) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  ret i32 %77
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetCpointsByPointMarkerArray(ptr noundef %mgr_vdata, i32 noundef %block_size, i32 noundef %max_num_levels, ptr noundef %lvl_num_coarse_points, ptr noundef %lvl_coarse_indexes, ptr noundef %point_marker_array) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %block_size.addr = alloca i32, align 4
  %max_num_levels.addr = alloca i32, align 4
  %lvl_num_coarse_points.addr = alloca ptr, align 8
  %lvl_coarse_indexes.addr = alloca ptr, align 8
  %point_marker_array.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %block_cf_marker = alloca ptr, align 8
  %block_num_coarse_indexes = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %block_size, ptr %block_size.addr, align 4, !tbaa !92
  store i32 %max_num_levels, ptr %max_num_levels.addr, align 4, !tbaa !92
  store ptr %lvl_num_coarse_points, ptr %lvl_num_coarse_points.addr, align 8, !tbaa !4
  store ptr %lvl_coarse_indexes, ptr %lvl_coarse_indexes.addr, align 8, !tbaa !4
  store ptr %point_marker_array, ptr %point_marker_array.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %block_cf_marker) #6
  store ptr null, ptr %block_cf_marker, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %block_num_coarse_indexes) #6
  store ptr null, ptr %block_num_coarse_indexes, align 8, !tbaa !4
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 3
  %2 = load ptr, ptr %block_cf_marker1, align 8, !tbaa !14
  %cmp = icmp ne ptr %2, null
  br i1 %cmp, label %if.then, label %if.end17

if.then:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, ptr %i, align 4, !tbaa !92
  %4 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels = getelementptr inbounds %struct.hypre_ParMGRData, ptr %4, i32 0, i32 7
  %5 = load i32, ptr %max_num_coarse_levels, align 8, !tbaa !15
  %cmp2 = icmp slt i32 %3, %5
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %6, i32 0, i32 3
  %7 = load ptr, ptr %block_cf_marker3, align 8, !tbaa !14
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds ptr, ptr %7, i64 %idxprom
  %9 = load ptr, ptr %arrayidx, align 8, !tbaa !4
  %tobool = icmp ne ptr %9, null
  br i1 %tobool, label %if.then4, label %if.end

if.then4:                                         ; preds = %for.body
  %10 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker5 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %10, i32 0, i32 3
  %11 = load ptr, ptr %block_cf_marker5, align 8, !tbaa !14
  %12 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom6 = sext i32 %12 to i64
  %arrayidx7 = getelementptr inbounds ptr, ptr %11, i64 %idxprom6
  %13 = load ptr, ptr %arrayidx7, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %13, i32 noundef 0)
  %14 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker8 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %14, i32 0, i32 3
  %15 = load ptr, ptr %block_cf_marker8, align 8, !tbaa !14
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom9 = sext i32 %16 to i64
  %arrayidx10 = getelementptr inbounds ptr, ptr %15, i64 %idxprom9
  store ptr null, ptr %arrayidx10, align 8, !tbaa !4
  %17 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker11 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %17, i32 0, i32 3
  %18 = load ptr, ptr %block_cf_marker11, align 8, !tbaa !14
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom12 = sext i32 %19 to i64
  %arrayidx13 = getelementptr inbounds ptr, ptr %18, i64 %idxprom12
  store ptr null, ptr %arrayidx13, align 8, !tbaa !4
  br label %if.end

if.end:                                           ; preds = %if.then4, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %20, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !143

for.end:                                          ; preds = %for.cond
  %21 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker14 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %21, i32 0, i32 3
  %22 = load ptr, ptr %block_cf_marker14, align 8, !tbaa !14
  call void @hypre_Free(ptr noundef %22, i32 noundef 0)
  %23 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker15 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %23, i32 0, i32 3
  store ptr null, ptr %block_cf_marker15, align 8, !tbaa !14
  %24 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker16 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %24, i32 0, i32 3
  store ptr null, ptr %block_cf_marker16, align 8, !tbaa !14
  br label %if.end17

if.end17:                                         ; preds = %for.end, %entry
  %25 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes18 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %25, i32 0, i32 1
  %26 = load ptr, ptr %block_num_coarse_indexes18, align 8, !tbaa !12
  %tobool19 = icmp ne ptr %26, null
  br i1 %tobool19, label %if.then20, label %if.end24

if.then20:                                        ; preds = %if.end17
  %27 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes21 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %27, i32 0, i32 1
  %28 = load ptr, ptr %block_num_coarse_indexes21, align 8, !tbaa !12
  call void @hypre_Free(ptr noundef %28, i32 noundef 0)
  %29 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes22 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %29, i32 0, i32 1
  store ptr null, ptr %block_num_coarse_indexes22, align 8, !tbaa !12
  %30 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes23 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %30, i32 0, i32 1
  store ptr null, ptr %block_num_coarse_indexes23, align 8, !tbaa !12
  br label %if.end24

if.end24:                                         ; preds = %if.then20, %if.end17
  %31 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %conv = sext i32 %31 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 8, i32 noundef 0)
  store ptr %call, ptr %block_cf_marker, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc36, %if.end24
  %32 = load i32, ptr %i, align 4, !tbaa !92
  %33 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %cmp26 = icmp slt i32 %32, %33
  br i1 %cmp26, label %for.body28, label %for.end38

for.body28:                                       ; preds = %for.cond25
  %34 = load i32, ptr %block_size.addr, align 4, !tbaa !92
  %conv29 = sext i32 %34 to i64
  %call30 = call ptr @hypre_CAlloc(i64 noundef %conv29, i64 noundef 4, i32 noundef 0)
  %35 = load ptr, ptr %block_cf_marker, align 8, !tbaa !4
  %36 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom31 = sext i32 %36 to i64
  %arrayidx32 = getelementptr inbounds ptr, ptr %35, i64 %idxprom31
  store ptr %call30, ptr %arrayidx32, align 8, !tbaa !4
  %37 = load ptr, ptr %block_cf_marker, align 8, !tbaa !4
  %38 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom33 = sext i32 %38 to i64
  %arrayidx34 = getelementptr inbounds ptr, ptr %37, i64 %idxprom33
  %39 = load ptr, ptr %arrayidx34, align 8, !tbaa !4
  %40 = load i32, ptr %block_size.addr, align 4, !tbaa !92
  %conv35 = sext i32 %40 to i64
  %mul = mul i64 %conv35, 4
  call void @llvm.memset.p0.i64(ptr align 4 %39, i8 -1, i64 %mul, i1 false)
  br label %for.inc36

for.inc36:                                        ; preds = %for.body28
  %41 = load i32, ptr %i, align 4, !tbaa !92
  %inc37 = add nsw i32 %41, 1
  store i32 %inc37, ptr %i, align 4, !tbaa !92
  br label %for.cond25, !llvm.loop !144

for.end38:                                        ; preds = %for.cond25
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond39

for.cond39:                                       ; preds = %for.inc60, %for.end38
  %42 = load i32, ptr %i, align 4, !tbaa !92
  %43 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %cmp40 = icmp slt i32 %42, %43
  br i1 %cmp40, label %for.body42, label %for.end62

for.body42:                                       ; preds = %for.cond39
  store i32 0, ptr %j, align 4, !tbaa !92
  br label %for.cond43

for.cond43:                                       ; preds = %for.inc57, %for.body42
  %44 = load i32, ptr %j, align 4, !tbaa !92
  %45 = load ptr, ptr %lvl_num_coarse_points.addr, align 8, !tbaa !4
  %46 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom44 = sext i32 %46 to i64
  %arrayidx45 = getelementptr inbounds i32, ptr %45, i64 %idxprom44
  %47 = load i32, ptr %arrayidx45, align 4, !tbaa !92
  %cmp46 = icmp slt i32 %44, %47
  br i1 %cmp46, label %for.body48, label %for.end59

for.body48:                                       ; preds = %for.cond43
  %48 = load ptr, ptr %lvl_coarse_indexes.addr, align 8, !tbaa !4
  %49 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom49 = sext i32 %49 to i64
  %arrayidx50 = getelementptr inbounds ptr, ptr %48, i64 %idxprom49
  %50 = load ptr, ptr %arrayidx50, align 8, !tbaa !4
  %51 = load i32, ptr %j, align 4, !tbaa !92
  %idxprom51 = sext i32 %51 to i64
  %arrayidx52 = getelementptr inbounds i32, ptr %50, i64 %idxprom51
  %52 = load i32, ptr %arrayidx52, align 4, !tbaa !92
  %53 = load ptr, ptr %block_cf_marker, align 8, !tbaa !4
  %54 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom53 = sext i32 %54 to i64
  %arrayidx54 = getelementptr inbounds ptr, ptr %53, i64 %idxprom53
  %55 = load ptr, ptr %arrayidx54, align 8, !tbaa !4
  %56 = load i32, ptr %j, align 4, !tbaa !92
  %idxprom55 = sext i32 %56 to i64
  %arrayidx56 = getelementptr inbounds i32, ptr %55, i64 %idxprom55
  store i32 %52, ptr %arrayidx56, align 4, !tbaa !92
  br label %for.inc57

for.inc57:                                        ; preds = %for.body48
  %57 = load i32, ptr %j, align 4, !tbaa !92
  %inc58 = add nsw i32 %57, 1
  store i32 %inc58, ptr %j, align 4, !tbaa !92
  br label %for.cond43, !llvm.loop !145

for.end59:                                        ; preds = %for.cond43
  br label %for.inc60

for.inc60:                                        ; preds = %for.end59
  %58 = load i32, ptr %i, align 4, !tbaa !92
  %inc61 = add nsw i32 %58, 1
  store i32 %inc61, ptr %i, align 4, !tbaa !92
  br label %for.cond39, !llvm.loop !146

for.end62:                                        ; preds = %for.cond39
  %59 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %cmp63 = icmp sgt i32 %59, 0
  br i1 %cmp63, label %if.then65, label %if.end79

if.then65:                                        ; preds = %for.end62
  %60 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %conv66 = sext i32 %60 to i64
  %call67 = call ptr @hypre_CAlloc(i64 noundef %conv66, i64 noundef 4, i32 noundef 0)
  store ptr %call67, ptr %block_num_coarse_indexes, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond68

for.cond68:                                       ; preds = %for.inc76, %if.then65
  %61 = load i32, ptr %i, align 4, !tbaa !92
  %62 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %cmp69 = icmp slt i32 %61, %62
  br i1 %cmp69, label %for.body71, label %for.end78

for.body71:                                       ; preds = %for.cond68
  %63 = load ptr, ptr %lvl_num_coarse_points.addr, align 8, !tbaa !4
  %64 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom72 = sext i32 %64 to i64
  %arrayidx73 = getelementptr inbounds i32, ptr %63, i64 %idxprom72
  %65 = load i32, ptr %arrayidx73, align 4, !tbaa !92
  %66 = load ptr, ptr %block_num_coarse_indexes, align 8, !tbaa !4
  %67 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom74 = sext i32 %67 to i64
  %arrayidx75 = getelementptr inbounds i32, ptr %66, i64 %idxprom74
  store i32 %65, ptr %arrayidx75, align 4, !tbaa !92
  br label %for.inc76

for.inc76:                                        ; preds = %for.body71
  %68 = load i32, ptr %i, align 4, !tbaa !92
  %inc77 = add nsw i32 %68, 1
  store i32 %inc77, ptr %i, align 4, !tbaa !92
  br label %for.cond68, !llvm.loop !147

for.end78:                                        ; preds = %for.cond68
  br label %if.end79

if.end79:                                         ; preds = %for.end78, %for.end62
  %69 = load i32, ptr %max_num_levels.addr, align 4, !tbaa !92
  %70 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels80 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %70, i32 0, i32 7
  store i32 %69, ptr %max_num_coarse_levels80, align 8, !tbaa !15
  %71 = load i32, ptr %block_size.addr, align 4, !tbaa !92
  %72 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_size81 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %72, i32 0, i32 0
  store i32 %71, ptr %block_size81, align 8, !tbaa !8
  %73 = load ptr, ptr %block_num_coarse_indexes, align 8, !tbaa !4
  %74 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes82 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %74, i32 0, i32 1
  store ptr %73, ptr %block_num_coarse_indexes82, align 8, !tbaa !12
  %75 = load ptr, ptr %block_cf_marker, align 8, !tbaa !4
  %76 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker83 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %76, i32 0, i32 3
  store ptr %75, ptr %block_cf_marker83, align 8, !tbaa !14
  %77 = load ptr, ptr %point_marker_array.addr, align 8, !tbaa !4
  %78 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %point_marker_array84 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %78, i32 0, i32 2
  store ptr %77, ptr %point_marker_array84, align 8, !tbaa !13
  %79 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %set_c_points_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %79, i32 0, i32 82
  store i32 2, ptr %set_c_points_method, align 8, !tbaa !84
  %80 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %block_num_coarse_indexes) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %block_cf_marker) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %80
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetReservedCoarseNodes(ptr noundef %mgr_vdata, i32 noundef %reserved_coarse_size, ptr noundef %reserved_cpt_index) #0 {
entry:
  %retval = alloca i32, align 4
  %mgr_vdata.addr = alloca ptr, align 8
  %reserved_coarse_size.addr = alloca i32, align 4
  %reserved_cpt_index.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %reserved_coarse_indexes = alloca ptr, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %reserved_coarse_size, ptr %reserved_coarse_size.addr, align 4, !tbaa !92
  store ptr %reserved_cpt_index, ptr %reserved_cpt_index.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %reserved_coarse_indexes) #6
  store ptr null, ptr %reserved_coarse_indexes, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 830, i32 noundef 1, ptr noundef @.str.1)
  %2 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %2, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load i32, ptr %reserved_coarse_size.addr, align 4, !tbaa !92
  %cmp = icmp slt i32 %3, 0
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 836, i32 noundef 20, ptr noundef null)
  %4 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %4, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_coarse_indexes3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 68
  %6 = load ptr, ptr %reserved_coarse_indexes3, align 8, !tbaa !70
  %tobool4 = icmp ne ptr %6, null
  br i1 %tobool4, label %if.then5, label %if.end9

if.then5:                                         ; preds = %if.end2
  %7 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_coarse_indexes6 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %7, i32 0, i32 68
  %8 = load ptr, ptr %reserved_coarse_indexes6, align 8, !tbaa !70
  call void @hypre_Free(ptr noundef %8, i32 noundef 0)
  %9 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_coarse_indexes7 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %9, i32 0, i32 68
  store ptr null, ptr %reserved_coarse_indexes7, align 8, !tbaa !70
  %10 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_coarse_indexes8 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %10, i32 0, i32 68
  store ptr null, ptr %reserved_coarse_indexes8, align 8, !tbaa !70
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.end2
  %11 = load i32, ptr %reserved_coarse_size.addr, align 4, !tbaa !92
  %cmp10 = icmp sgt i32 %11, 0
  br i1 %cmp10, label %if.then11, label %if.end16

if.then11:                                        ; preds = %if.end9
  %12 = load i32, ptr %reserved_coarse_size.addr, align 4, !tbaa !92
  %conv = sext i32 %12 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %reserved_coarse_indexes, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then11
  %13 = load i32, ptr %i, align 4, !tbaa !92
  %14 = load i32, ptr %reserved_coarse_size.addr, align 4, !tbaa !92
  %cmp12 = icmp slt i32 %13, %14
  br i1 %cmp12, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load ptr, ptr %reserved_cpt_index.addr, align 8, !tbaa !4
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %16 to i64
  %arrayidx = getelementptr inbounds i32, ptr %15, i64 %idxprom
  %17 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %18 = load ptr, ptr %reserved_coarse_indexes, align 8, !tbaa !4
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom14 = sext i32 %19 to i64
  %arrayidx15 = getelementptr inbounds i32, ptr %18, i64 %idxprom14
  store i32 %17, ptr %arrayidx15, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %20, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !148

for.end:                                          ; preds = %for.cond
  br label %if.end16

if.end16:                                         ; preds = %for.end, %if.end9
  %21 = load i32, ptr %reserved_coarse_size.addr, align 4, !tbaa !92
  %22 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_coarse_size17 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %22, i32 0, i32 67
  store i32 %21, ptr %reserved_coarse_size17, align 4, !tbaa !69
  %23 = load ptr, ptr %reserved_coarse_indexes, align 8, !tbaa !4
  %24 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_coarse_indexes18 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %24, i32 0, i32 68
  store ptr %23, ptr %reserved_coarse_indexes18, align 8, !tbaa !70
  %25 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %25, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.then1, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %reserved_coarse_indexes) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  %26 = load i32, ptr %retval, align 4
  ret i32 %26
}

declare void @hypre_error_handler(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRCoarsen(ptr noundef %S, ptr noundef %A, i32 noundef %fixed_coarse_size, ptr noundef %fixed_coarse_indexes, i32 noundef %debug_flag, ptr noundef %CF_marker_ptr, i32 noundef %cflag) #0 {
entry:
  %S.addr = alloca ptr, align 8
  %A.addr = alloca ptr, align 8
  %fixed_coarse_size.addr = alloca i32, align 4
  %fixed_coarse_indexes.addr = alloca ptr, align 8
  %debug_flag.addr = alloca i32, align 4
  %CF_marker_ptr.addr = alloca ptr, align 8
  %cflag.addr = alloca i32, align 4
  %CF_marker = alloca ptr, align 8
  %cindexes = alloca ptr, align 8
  %i = alloca i32, align 4
  %row = alloca i32, align 4
  %nc = alloca i32, align 4
  %nloc = alloca i32, align 4
  %memory_location = alloca i32, align 4
  store ptr %S, ptr %S.addr, align 8, !tbaa !4
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store i32 %fixed_coarse_size, ptr %fixed_coarse_size.addr, align 4, !tbaa !92
  store ptr %fixed_coarse_indexes, ptr %fixed_coarse_indexes.addr, align 8, !tbaa !4
  store i32 %debug_flag, ptr %debug_flag.addr, align 4, !tbaa !92
  store ptr %CF_marker_ptr, ptr %CF_marker_ptr.addr, align 8, !tbaa !4
  store i32 %cflag, ptr %cflag.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %CF_marker) #6
  store ptr null, ptr %CF_marker, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %cindexes) #6
  %0 = load ptr, ptr %fixed_coarse_indexes.addr, align 8, !tbaa !4
  store ptr %0, ptr %cindexes, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %row) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %nc) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %nloc) #6
  %1 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %1, i32 0, i32 8
  %2 = load ptr, ptr %diag, align 8, !tbaa !149
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %2, i32 0, i32 3
  %3 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %3, ptr %nloc, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %memory_location) #6
  %4 = load i32, ptr %cflag.addr, align 4, !tbaa !92
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %CF_marker_ptr.addr, align 8, !tbaa !4
  %6 = load ptr, ptr %5, align 8, !tbaa !4
  %cmp = icmp ne ptr %6, null
  br i1 %cmp, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %7 = load ptr, ptr %CF_marker_ptr.addr, align 8, !tbaa !4
  %8 = load ptr, ptr %7, align 8, !tbaa !4
  %call = call i32 @hypre_IntArrayDestroy(ptr noundef %8)
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %9 = load i32, ptr %nloc, align 4, !tbaa !92
  %call2 = call ptr @hypre_IntArrayCreate(i32 noundef %9)
  %10 = load ptr, ptr %CF_marker_ptr.addr, align 8, !tbaa !4
  store ptr %call2, ptr %10, align 8, !tbaa !4
  %11 = load ptr, ptr %CF_marker_ptr.addr, align 8, !tbaa !4
  %12 = load ptr, ptr %11, align 8, !tbaa !4
  %call3 = call i32 @hypre_IntArrayInitialize(ptr noundef %12)
  %13 = load ptr, ptr %CF_marker_ptr.addr, align 8, !tbaa !4
  %14 = load ptr, ptr %13, align 8, !tbaa !4
  %call4 = call i32 @hypre_IntArraySetConstantValues(ptr noundef %14, i32 noundef -1)
  %15 = load ptr, ptr %CF_marker_ptr.addr, align 8, !tbaa !4
  %16 = load ptr, ptr %15, align 8, !tbaa !4
  %memory_location5 = getelementptr inbounds %struct.hypre_IntArray, ptr %16, i32 0, i32 2
  %17 = load i32, ptr %memory_location5, align 4, !tbaa !153
  store i32 %17, ptr %memory_location, align 4, !tbaa !155
  %18 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call6 = call i32 @hypre_GetActualMemLocation(i32 noundef %18)
  %cmp7 = icmp eq i32 %call6, 2
  br i1 %cmp7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end
  %19 = load ptr, ptr %CF_marker_ptr.addr, align 8, !tbaa !4
  %20 = load ptr, ptr %19, align 8, !tbaa !4
  %call9 = call i32 @hypre_IntArrayMigrate(ptr noundef %20, i32 noundef 0)
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.end
  %21 = load ptr, ptr %CF_marker_ptr.addr, align 8, !tbaa !4
  %22 = load ptr, ptr %21, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_IntArray, ptr %22, i32 0, i32 0
  %23 = load ptr, ptr %data, align 8, !tbaa !156
  store ptr %23, ptr %CF_marker, align 8, !tbaa !4
  %24 = load i32, ptr %fixed_coarse_size.addr, align 4, !tbaa !92
  store i32 %24, ptr %nc, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end10
  %25 = load i32, ptr %i, align 4, !tbaa !92
  %26 = load i32, ptr %nc, align 4, !tbaa !92
  %cmp11 = icmp slt i32 %25, %26
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %27 = load ptr, ptr %CF_marker, align 8, !tbaa !4
  %28 = load ptr, ptr %cindexes, align 8, !tbaa !4
  %29 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %29 to i64
  %arrayidx = getelementptr inbounds i32, ptr %28, i64 %idxprom
  %30 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %idxprom12 = sext i32 %30 to i64
  %arrayidx13 = getelementptr inbounds i32, ptr %27, i64 %idxprom12
  store i32 1, ptr %arrayidx13, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %31 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %31, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !157

for.end:                                          ; preds = %for.cond
  %32 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call14 = call i32 @hypre_GetActualMemLocation(i32 noundef %32)
  %cmp15 = icmp eq i32 %call14, 2
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %for.end
  %33 = load ptr, ptr %CF_marker_ptr.addr, align 8, !tbaa !4
  %34 = load ptr, ptr %33, align 8, !tbaa !4
  %call17 = call i32 @hypre_IntArrayMigrate(ptr noundef %34, i32 noundef 1)
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %for.end
  br label %if.end44

if.else:                                          ; preds = %entry
  %35 = load ptr, ptr %S.addr, align 8, !tbaa !4
  %36 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %37 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %38 = load ptr, ptr %CF_marker_ptr.addr, align 8, !tbaa !4
  %call19 = call i32 @hypre_BoomerAMGCoarsen(ptr noundef %35, ptr noundef %36, i32 noundef 0, i32 noundef %37, ptr noundef %38)
  %39 = load ptr, ptr %CF_marker_ptr.addr, align 8, !tbaa !4
  %40 = load ptr, ptr %39, align 8, !tbaa !4
  %data20 = getelementptr inbounds %struct.hypre_IntArray, ptr %40, i32 0, i32 0
  %41 = load ptr, ptr %data20, align 8, !tbaa !156
  store ptr %41, ptr %CF_marker, align 8, !tbaa !4
  %42 = load i32, ptr %fixed_coarse_size.addr, align 4, !tbaa !92
  store i32 %42, ptr %nc, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc28, %if.else
  %43 = load i32, ptr %i, align 4, !tbaa !92
  %44 = load i32, ptr %nc, align 4, !tbaa !92
  %cmp22 = icmp slt i32 %43, %44
  br i1 %cmp22, label %for.body23, label %for.end30

for.body23:                                       ; preds = %for.cond21
  %45 = load ptr, ptr %CF_marker, align 8, !tbaa !4
  %46 = load ptr, ptr %cindexes, align 8, !tbaa !4
  %47 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom24 = sext i32 %47 to i64
  %arrayidx25 = getelementptr inbounds i32, ptr %46, i64 %idxprom24
  %48 = load i32, ptr %arrayidx25, align 4, !tbaa !92
  %idxprom26 = sext i32 %48 to i64
  %arrayidx27 = getelementptr inbounds i32, ptr %45, i64 %idxprom26
  store i32 1, ptr %arrayidx27, align 4, !tbaa !92
  br label %for.inc28

for.inc28:                                        ; preds = %for.body23
  %49 = load i32, ptr %i, align 4, !tbaa !92
  %inc29 = add nsw i32 %49, 1
  store i32 %inc29, ptr %i, align 4, !tbaa !92
  br label %for.cond21, !llvm.loop !158

for.end30:                                        ; preds = %for.cond21
  store i32 0, ptr %row, align 4, !tbaa !92
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc41, %for.end30
  %50 = load i32, ptr %row, align 4, !tbaa !92
  %51 = load i32, ptr %nloc, align 4, !tbaa !92
  %cmp32 = icmp slt i32 %50, %51
  br i1 %cmp32, label %for.body33, label %for.end43

for.body33:                                       ; preds = %for.cond31
  %52 = load ptr, ptr %CF_marker, align 8, !tbaa !4
  %53 = load i32, ptr %row, align 4, !tbaa !92
  %idxprom34 = sext i32 %53 to i64
  %arrayidx35 = getelementptr inbounds i32, ptr %52, i64 %idxprom34
  %54 = load i32, ptr %arrayidx35, align 4, !tbaa !92
  %cmp36 = icmp eq i32 %54, 1
  br i1 %cmp36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %for.body33
  br label %for.inc41

if.end38:                                         ; preds = %for.body33
  %55 = load ptr, ptr %CF_marker, align 8, !tbaa !4
  %56 = load i32, ptr %row, align 4, !tbaa !92
  %idxprom39 = sext i32 %56 to i64
  %arrayidx40 = getelementptr inbounds i32, ptr %55, i64 %idxprom39
  store i32 -1, ptr %arrayidx40, align 4, !tbaa !92
  br label %for.inc41

for.inc41:                                        ; preds = %if.end38, %if.then37
  %57 = load i32, ptr %row, align 4, !tbaa !92
  %inc42 = add nsw i32 %57, 1
  store i32 %inc42, ptr %row, align 4, !tbaa !92
  br label %for.cond31, !llvm.loop !159

for.end43:                                        ; preds = %for.cond31
  br label %if.end44

if.end44:                                         ; preds = %for.end43, %if.end18
  %58 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 4, ptr %memory_location) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nloc) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nc) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %row) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %cindexes) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %CF_marker) #6
  ret i32 %58
}

declare ptr @hypre_IntArrayCreate(i32 noundef) #2

declare i32 @hypre_IntArrayInitialize(ptr noundef) #2

declare i32 @hypre_IntArraySetConstantValues(ptr noundef, i32 noundef) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @hypre_GetActualMemLocation(i32 noundef %location) #4 {
entry:
  %retval = alloca i32, align 4
  %location.addr = alloca i32, align 4
  store i32 %location, ptr %location.addr, align 4, !tbaa !155
  %0 = load i32, ptr %location.addr, align 4, !tbaa !155
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, ptr %location.addr, align 4, !tbaa !155
  %cmp1 = icmp eq i32 %1, 1
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4
  br label %return

if.end3:                                          ; preds = %if.end
  store i32 -1, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %2 = load i32, ptr %retval, align 4
  ret i32 %2
}

declare i32 @hypre_IntArrayMigrate(ptr noundef, i32 noundef) #2

declare i32 @hypre_BoomerAMGCoarsen(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBuildPFromWp(ptr noundef %A, ptr noundef %Wp, ptr noundef %CF_marker, i32 noundef %debug_flag, ptr noundef %P_ptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %Wp.addr = alloca ptr, align 8
  %CF_marker.addr = alloca ptr, align 8
  %debug_flag.addr = alloca i32, align 4
  %P_ptr.addr = alloca ptr, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %Wp, ptr %Wp.addr, align 8, !tbaa !4
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store i32 %debug_flag, ptr %debug_flag.addr, align 4, !tbaa !92
  store ptr %P_ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %1 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %2 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %3 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %4 = load ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  %call = call i32 @hypre_MGRBuildPFromWpHost(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4)
  %5 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBuildPFromWpHost(ptr noundef %A, ptr noundef %Wp, ptr noundef %CF_marker, i32 noundef %debug_flag, ptr noundef %P_ptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %Wp.addr = alloca ptr, align 8
  %CF_marker.addr = alloca ptr, align 8
  %debug_flag.addr = alloca i32, align 4
  %P_ptr.addr = alloca ptr, align 8
  %comm = alloca ptr, align 8
  %memory_location_P = alloca i32, align 4
  %P = alloca ptr, align 8
  %P_diag = alloca ptr, align 8
  %P_offd = alloca ptr, align 8
  %Wp_diag = alloca ptr, align 8
  %Wp_offd = alloca ptr, align 8
  %P_diag_data = alloca ptr, align 8
  %Wp_diag_data = alloca ptr, align 8
  %P_diag_i = alloca ptr, align 8
  %Wp_diag_i = alloca ptr, align 8
  %P_diag_j = alloca ptr, align 8
  %Wp_diag_j = alloca ptr, align 8
  %P_offd_data = alloca ptr, align 8
  %Wp_offd_data = alloca ptr, align 8
  %P_offd_i = alloca ptr, align 8
  %Wp_offd_i = alloca ptr, align 8
  %P_offd_j = alloca ptr, align 8
  %Wp_offd_j = alloca ptr, align 8
  %P_num_rows = alloca i32, align 4
  %P_diag_size = alloca i32, align 4
  %P_offd_size = alloca i32, align 4
  %jj_counter = alloca i32, align 4
  %jj_counter_offd = alloca i32, align 4
  %start_indexing = alloca i32, align 4
  %i = alloca i32, align 4
  %jj = alloca i32, align 4
  %row_Wp = alloca i32, align 4
  %coarse_counter = alloca i32, align 4
  %one = alloca double, align 8
  %my_id = alloca i32, align 4
  %num_procs = alloca i32, align 4
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %Wp, ptr %Wp.addr, align 8, !tbaa !4
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store i32 %debug_flag, ptr %debug_flag.addr, align 4, !tbaa !92
  store ptr %P_ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %comm1, align 8, !tbaa !160
  store ptr %1, ptr %comm, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %memory_location_P) #6
  %2 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call = call i32 @hypre_ParCSRMatrixMemoryLocation(ptr noundef %2)
  store i32 %call, ptr %memory_location_P, align 4, !tbaa !155
  call void @llvm.lifetime.start.p0(i64 8, ptr %P) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag) #6
  store ptr null, ptr %P_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd) #6
  store ptr null, ptr %P_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wp_diag) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wp_offd) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wp_diag_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wp_diag_i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_j) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wp_diag_j) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wp_offd_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd_i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wp_offd_i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd_j) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wp_offd_j) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %P_num_rows) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %P_diag_size) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %P_offd_size) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj_counter_offd) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %start_indexing) #6
  store i32 0, ptr %start_indexing, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %row_Wp) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %coarse_counter) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %one) #6
  store double 1.000000e+00, ptr %one, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_procs) #6
  %3 = load ptr, ptr %comm, align 8, !tbaa !4
  %call2 = call i32 @hypre_MPI_Comm_size(ptr noundef %3, ptr noundef %num_procs)
  %4 = load ptr, ptr %comm, align 8, !tbaa !4
  %call3 = call i32 @hypre_MPI_Comm_rank(ptr noundef %4, ptr noundef %my_id)
  %5 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %5, i32 0, i32 8
  %6 = load ptr, ptr %diag, align 8, !tbaa !149
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %6, i32 0, i32 3
  %7 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %7, ptr %P_num_rows, align 4, !tbaa !92
  %8 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %diag4 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %8, i32 0, i32 8
  %9 = load ptr, ptr %diag4, align 8, !tbaa !149
  store ptr %9, ptr %Wp_diag, align 8, !tbaa !4
  %10 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %10, i32 0, i32 9
  %11 = load ptr, ptr %offd, align 8, !tbaa !162
  store ptr %11, ptr %Wp_offd, align 8, !tbaa !4
  %12 = load ptr, ptr %Wp_diag, align 8, !tbaa !4
  %i5 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %12, i32 0, i32 0
  %13 = load ptr, ptr %i5, align 8, !tbaa !163
  store ptr %13, ptr %Wp_diag_i, align 8, !tbaa !4
  %14 = load ptr, ptr %Wp_diag, align 8, !tbaa !4
  %j = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %14, i32 0, i32 1
  %15 = load ptr, ptr %j, align 8, !tbaa !164
  store ptr %15, ptr %Wp_diag_j, align 8, !tbaa !4
  %16 = load ptr, ptr %Wp_diag, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %16, i32 0, i32 10
  %17 = load ptr, ptr %data, align 8, !tbaa !165
  store ptr %17, ptr %Wp_diag_data, align 8, !tbaa !4
  %18 = load ptr, ptr %Wp_offd, align 8, !tbaa !4
  %i6 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %18, i32 0, i32 0
  %19 = load ptr, ptr %i6, align 8, !tbaa !163
  store ptr %19, ptr %Wp_offd_i, align 8, !tbaa !4
  %20 = load ptr, ptr %Wp_offd, align 8, !tbaa !4
  %j7 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %20, i32 0, i32 1
  %21 = load ptr, ptr %j7, align 8, !tbaa !164
  store ptr %21, ptr %Wp_offd_j, align 8, !tbaa !4
  %22 = load ptr, ptr %Wp_offd, align 8, !tbaa !4
  %data8 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %22, i32 0, i32 10
  %23 = load ptr, ptr %data8, align 8, !tbaa !165
  store ptr %23, ptr %Wp_offd_data, align 8, !tbaa !4
  %24 = load ptr, ptr %Wp_diag, align 8, !tbaa !4
  %num_nonzeros = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %24, i32 0, i32 5
  %25 = load i32, ptr %num_nonzeros, align 8, !tbaa !166
  %26 = load ptr, ptr %Wp_diag, align 8, !tbaa !4
  %num_cols = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %26, i32 0, i32 4
  %27 = load i32, ptr %num_cols, align 4, !tbaa !167
  %add = add nsw i32 %25, %27
  store i32 %add, ptr %P_diag_size, align 4, !tbaa !92
  %28 = load i32, ptr %P_num_rows, align 4, !tbaa !92
  %add9 = add nsw i32 %28, 1
  %conv = sext i32 %add9 to i64
  %29 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call10 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef %29)
  store ptr %call10, ptr %P_diag_i, align 8, !tbaa !4
  %30 = load i32, ptr %P_diag_size, align 4, !tbaa !92
  %conv11 = sext i32 %30 to i64
  %31 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call12 = call ptr @hypre_CAlloc(i64 noundef %conv11, i64 noundef 4, i32 noundef %31)
  store ptr %call12, ptr %P_diag_j, align 8, !tbaa !4
  %32 = load i32, ptr %P_diag_size, align 4, !tbaa !92
  %conv13 = sext i32 %32 to i64
  %33 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call14 = call ptr @hypre_CAlloc(i64 noundef %conv13, i64 noundef 8, i32 noundef %33)
  store ptr %call14, ptr %P_diag_data, align 8, !tbaa !4
  %34 = load i32, ptr %P_diag_size, align 4, !tbaa !92
  %35 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %36 = load i32, ptr %P_num_rows, align 4, !tbaa !92
  %idxprom = sext i32 %36 to i64
  %arrayidx = getelementptr inbounds i32, ptr %35, i64 %idxprom
  store i32 %34, ptr %arrayidx, align 4, !tbaa !92
  %37 = load ptr, ptr %Wp_offd, align 8, !tbaa !4
  %num_nonzeros15 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %37, i32 0, i32 5
  %38 = load i32, ptr %num_nonzeros15, align 8, !tbaa !166
  store i32 %38, ptr %P_offd_size, align 4, !tbaa !92
  %39 = load i32, ptr %P_num_rows, align 4, !tbaa !92
  %add16 = add nsw i32 %39, 1
  %conv17 = sext i32 %add16 to i64
  %40 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call18 = call ptr @hypre_CAlloc(i64 noundef %conv17, i64 noundef 4, i32 noundef %40)
  store ptr %call18, ptr %P_offd_i, align 8, !tbaa !4
  %41 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %conv19 = sext i32 %41 to i64
  %42 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call20 = call ptr @hypre_CAlloc(i64 noundef %conv19, i64 noundef 4, i32 noundef %42)
  store ptr %call20, ptr %P_offd_j, align 8, !tbaa !4
  %43 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %conv21 = sext i32 %43 to i64
  %44 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call22 = call ptr @hypre_CAlloc(i64 noundef %conv21, i64 noundef 8, i32 noundef %44)
  store ptr %call22, ptr %P_offd_data, align 8, !tbaa !4
  %45 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %46 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %47 = load i32, ptr %P_num_rows, align 4, !tbaa !92
  %idxprom23 = sext i32 %47 to i64
  %arrayidx24 = getelementptr inbounds i32, ptr %46, i64 %idxprom23
  store i32 %45, ptr %arrayidx24, align 4, !tbaa !92
  %48 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %48, ptr %jj_counter, align 4, !tbaa !92
  %49 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %49, ptr %jj_counter_offd, align 4, !tbaa !92
  store i32 0, ptr %row_Wp, align 4, !tbaa !92
  store i32 0, ptr %coarse_counter, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc90, %entry
  %50 = load i32, ptr %i, align 4, !tbaa !92
  %51 = load i32, ptr %P_num_rows, align 4, !tbaa !92
  %cmp = icmp slt i32 %50, %51
  br i1 %cmp, label %for.body, label %for.end92

for.body:                                         ; preds = %for.cond
  %52 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %53 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom26 = sext i32 %53 to i64
  %arrayidx27 = getelementptr inbounds i32, ptr %52, i64 %idxprom26
  %54 = load i32, ptr %arrayidx27, align 4, !tbaa !92
  %cmp28 = icmp sge i32 %54, 0
  br i1 %cmp28, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %55 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %56 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %57 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom30 = sext i32 %57 to i64
  %arrayidx31 = getelementptr inbounds i32, ptr %56, i64 %idxprom30
  store i32 %55, ptr %arrayidx31, align 4, !tbaa !92
  %58 = load i32, ptr %coarse_counter, align 4, !tbaa !92
  %59 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %60 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom32 = sext i32 %60 to i64
  %arrayidx33 = getelementptr inbounds i32, ptr %59, i64 %idxprom32
  store i32 %58, ptr %arrayidx33, align 4, !tbaa !92
  %61 = load double, ptr %one, align 8, !tbaa !161
  %62 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %63 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom34 = sext i32 %63 to i64
  %arrayidx35 = getelementptr inbounds double, ptr %62, i64 %idxprom34
  store double %61, ptr %arrayidx35, align 8, !tbaa !161
  %64 = load i32, ptr %coarse_counter, align 4, !tbaa !92
  %inc = add nsw i32 %64, 1
  store i32 %inc, ptr %coarse_counter, align 4, !tbaa !92
  %65 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc36 = add nsw i32 %65, 1
  store i32 %inc36, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end86

if.else:                                          ; preds = %for.body
  %66 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %67 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %68 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom37 = sext i32 %68 to i64
  %arrayidx38 = getelementptr inbounds i32, ptr %67, i64 %idxprom37
  store i32 %66, ptr %arrayidx38, align 4, !tbaa !92
  %69 = load ptr, ptr %Wp_diag_i, align 8, !tbaa !4
  %70 = load i32, ptr %row_Wp, align 4, !tbaa !92
  %idxprom39 = sext i32 %70 to i64
  %arrayidx40 = getelementptr inbounds i32, ptr %69, i64 %idxprom39
  %71 = load i32, ptr %arrayidx40, align 4, !tbaa !92
  store i32 %71, ptr %jj, align 4, !tbaa !92
  br label %for.cond41

for.cond41:                                       ; preds = %for.inc, %if.else
  %72 = load i32, ptr %jj, align 4, !tbaa !92
  %73 = load ptr, ptr %Wp_diag_i, align 8, !tbaa !4
  %74 = load i32, ptr %row_Wp, align 4, !tbaa !92
  %add42 = add nsw i32 %74, 1
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds i32, ptr %73, i64 %idxprom43
  %75 = load i32, ptr %arrayidx44, align 4, !tbaa !92
  %cmp45 = icmp slt i32 %72, %75
  br i1 %cmp45, label %for.body47, label %for.end

for.body47:                                       ; preds = %for.cond41
  %76 = load ptr, ptr %Wp_diag_j, align 8, !tbaa !4
  %77 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom48 = sext i32 %77 to i64
  %arrayidx49 = getelementptr inbounds i32, ptr %76, i64 %idxprom48
  %78 = load i32, ptr %arrayidx49, align 4, !tbaa !92
  %79 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %80 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom50 = sext i32 %80 to i64
  %arrayidx51 = getelementptr inbounds i32, ptr %79, i64 %idxprom50
  store i32 %78, ptr %arrayidx51, align 4, !tbaa !92
  %81 = load ptr, ptr %Wp_diag_data, align 8, !tbaa !4
  %82 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom52 = sext i32 %82 to i64
  %arrayidx53 = getelementptr inbounds double, ptr %81, i64 %idxprom52
  %83 = load double, ptr %arrayidx53, align 8, !tbaa !161
  %fneg = fneg double %83
  %84 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %85 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom54 = sext i32 %85 to i64
  %arrayidx55 = getelementptr inbounds double, ptr %84, i64 %idxprom54
  store double %fneg, ptr %arrayidx55, align 8, !tbaa !161
  %86 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc56 = add nsw i32 %86, 1
  store i32 %inc56, ptr %jj_counter, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body47
  %87 = load i32, ptr %jj, align 4, !tbaa !92
  %inc57 = add nsw i32 %87, 1
  store i32 %inc57, ptr %jj, align 4, !tbaa !92
  br label %for.cond41, !llvm.loop !168

for.end:                                          ; preds = %for.cond41
  %88 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %89 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %90 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom58 = sext i32 %90 to i64
  %arrayidx59 = getelementptr inbounds i32, ptr %89, i64 %idxprom58
  store i32 %88, ptr %arrayidx59, align 4, !tbaa !92
  %91 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp60 = icmp sgt i32 %91, 1
  br i1 %cmp60, label %if.then62, label %if.end

if.then62:                                        ; preds = %for.end
  %92 = load ptr, ptr %Wp_offd_i, align 8, !tbaa !4
  %93 = load i32, ptr %row_Wp, align 4, !tbaa !92
  %idxprom63 = sext i32 %93 to i64
  %arrayidx64 = getelementptr inbounds i32, ptr %92, i64 %idxprom63
  %94 = load i32, ptr %arrayidx64, align 4, !tbaa !92
  store i32 %94, ptr %jj, align 4, !tbaa !92
  br label %for.cond65

for.cond65:                                       ; preds = %for.inc82, %if.then62
  %95 = load i32, ptr %jj, align 4, !tbaa !92
  %96 = load ptr, ptr %Wp_offd_i, align 8, !tbaa !4
  %97 = load i32, ptr %row_Wp, align 4, !tbaa !92
  %add66 = add nsw i32 %97, 1
  %idxprom67 = sext i32 %add66 to i64
  %arrayidx68 = getelementptr inbounds i32, ptr %96, i64 %idxprom67
  %98 = load i32, ptr %arrayidx68, align 4, !tbaa !92
  %cmp69 = icmp slt i32 %95, %98
  br i1 %cmp69, label %for.body71, label %for.end84

for.body71:                                       ; preds = %for.cond65
  %99 = load ptr, ptr %Wp_offd_j, align 8, !tbaa !4
  %100 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom72 = sext i32 %100 to i64
  %arrayidx73 = getelementptr inbounds i32, ptr %99, i64 %idxprom72
  %101 = load i32, ptr %arrayidx73, align 4, !tbaa !92
  %102 = load ptr, ptr %P_offd_j, align 8, !tbaa !4
  %103 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %idxprom74 = sext i32 %103 to i64
  %arrayidx75 = getelementptr inbounds i32, ptr %102, i64 %idxprom74
  store i32 %101, ptr %arrayidx75, align 4, !tbaa !92
  %104 = load ptr, ptr %Wp_offd_data, align 8, !tbaa !4
  %105 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom76 = sext i32 %105 to i64
  %arrayidx77 = getelementptr inbounds double, ptr %104, i64 %idxprom76
  %106 = load double, ptr %arrayidx77, align 8, !tbaa !161
  %fneg78 = fneg double %106
  %107 = load ptr, ptr %P_offd_data, align 8, !tbaa !4
  %108 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %idxprom79 = sext i32 %108 to i64
  %arrayidx80 = getelementptr inbounds double, ptr %107, i64 %idxprom79
  store double %fneg78, ptr %arrayidx80, align 8, !tbaa !161
  %109 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %inc81 = add nsw i32 %109, 1
  store i32 %inc81, ptr %jj_counter_offd, align 4, !tbaa !92
  br label %for.inc82

for.inc82:                                        ; preds = %for.body71
  %110 = load i32, ptr %jj, align 4, !tbaa !92
  %inc83 = add nsw i32 %110, 1
  store i32 %inc83, ptr %jj, align 4, !tbaa !92
  br label %for.cond65, !llvm.loop !169

for.end84:                                        ; preds = %for.cond65
  br label %if.end

if.end:                                           ; preds = %for.end84, %for.end
  %111 = load i32, ptr %row_Wp, align 4, !tbaa !92
  %inc85 = add nsw i32 %111, 1
  store i32 %inc85, ptr %row_Wp, align 4, !tbaa !92
  br label %if.end86

if.end86:                                         ; preds = %if.end, %if.then
  %112 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %113 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %114 = load i32, ptr %i, align 4, !tbaa !92
  %add87 = add nsw i32 %114, 1
  %idxprom88 = sext i32 %add87 to i64
  %arrayidx89 = getelementptr inbounds i32, ptr %113, i64 %idxprom88
  store i32 %112, ptr %arrayidx89, align 4, !tbaa !92
  br label %for.inc90

for.inc90:                                        ; preds = %if.end86
  %115 = load i32, ptr %i, align 4, !tbaa !92
  %inc91 = add nsw i32 %115, 1
  store i32 %inc91, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !170

for.end92:                                        ; preds = %for.cond
  %116 = load ptr, ptr %comm, align 8, !tbaa !4
  %117 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %global_num_rows = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %117, i32 0, i32 1
  %118 = load i32, ptr %global_num_rows, align 8, !tbaa !171
  %119 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %global_num_cols = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %119, i32 0, i32 2
  %120 = load i32, ptr %global_num_cols, align 4, !tbaa !172
  %121 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %col_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %121, i32 0, i32 15
  %arraydecay = getelementptr inbounds [2 x i32], ptr %col_starts, i64 0, i64 0
  %122 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %col_starts93 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %122, i32 0, i32 15
  %arraydecay94 = getelementptr inbounds [2 x i32], ptr %col_starts93, i64 0, i64 0
  %123 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %offd95 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %123, i32 0, i32 9
  %124 = load ptr, ptr %offd95, align 8, !tbaa !162
  %num_cols96 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %124, i32 0, i32 4
  %125 = load i32, ptr %num_cols96, align 4, !tbaa !167
  %126 = load i32, ptr %P_diag_size, align 4, !tbaa !92
  %127 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %call97 = call ptr @hypre_ParCSRMatrixCreate(ptr noundef %116, i32 noundef %118, i32 noundef %120, ptr noundef %arraydecay, ptr noundef %arraydecay94, i32 noundef %125, i32 noundef %126, i32 noundef %127)
  store ptr %call97, ptr %P, align 8, !tbaa !4
  %128 = load ptr, ptr %P, align 8, !tbaa !4
  %diag98 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %128, i32 0, i32 8
  %129 = load ptr, ptr %diag98, align 8, !tbaa !149
  store ptr %129, ptr %P_diag, align 8, !tbaa !4
  %130 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %131 = load ptr, ptr %P_diag, align 8, !tbaa !4
  %data99 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %131, i32 0, i32 10
  store ptr %130, ptr %data99, align 8, !tbaa !165
  %132 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %133 = load ptr, ptr %P_diag, align 8, !tbaa !4
  %i100 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %133, i32 0, i32 0
  store ptr %132, ptr %i100, align 8, !tbaa !163
  %134 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %135 = load ptr, ptr %P_diag, align 8, !tbaa !4
  %j101 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %135, i32 0, i32 1
  store ptr %134, ptr %j101, align 8, !tbaa !164
  %136 = load ptr, ptr %P, align 8, !tbaa !4
  %offd102 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %136, i32 0, i32 9
  %137 = load ptr, ptr %offd102, align 8, !tbaa !162
  store ptr %137, ptr %P_offd, align 8, !tbaa !4
  %138 = load ptr, ptr %P_offd_data, align 8, !tbaa !4
  %139 = load ptr, ptr %P_offd, align 8, !tbaa !4
  %data103 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %139, i32 0, i32 10
  store ptr %138, ptr %data103, align 8, !tbaa !165
  %140 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %141 = load ptr, ptr %P_offd, align 8, !tbaa !4
  %i104 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %141, i32 0, i32 0
  store ptr %140, ptr %i104, align 8, !tbaa !163
  %142 = load ptr, ptr %P_offd_j, align 8, !tbaa !4
  %143 = load ptr, ptr %P_offd, align 8, !tbaa !4
  %j105 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %143, i32 0, i32 1
  store ptr %142, ptr %j105, align 8, !tbaa !164
  %144 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %device_col_map_offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %144, i32 0, i32 13
  %145 = load ptr, ptr %device_col_map_offd, align 8, !tbaa !173
  %146 = load ptr, ptr %P, align 8, !tbaa !4
  %device_col_map_offd106 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %146, i32 0, i32 13
  store ptr %145, ptr %device_col_map_offd106, align 8, !tbaa !173
  %147 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %col_map_offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %147, i32 0, i32 12
  %148 = load ptr, ptr %col_map_offd, align 8, !tbaa !174
  %149 = load ptr, ptr %P, align 8, !tbaa !4
  %col_map_offd107 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %149, i32 0, i32 12
  store ptr %148, ptr %col_map_offd107, align 8, !tbaa !174
  %150 = load ptr, ptr %P, align 8, !tbaa !4
  %diag108 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %150, i32 0, i32 8
  %151 = load ptr, ptr %diag108, align 8, !tbaa !149
  %num_nonzeros109 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %151, i32 0, i32 5
  %152 = load i32, ptr %num_nonzeros109, align 8, !tbaa !166
  %153 = load ptr, ptr %P, align 8, !tbaa !4
  %offd110 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %153, i32 0, i32 9
  %154 = load ptr, ptr %offd110, align 8, !tbaa !162
  %num_nonzeros111 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %154, i32 0, i32 5
  %155 = load i32, ptr %num_nonzeros111, align 8, !tbaa !166
  %add112 = add nsw i32 %152, %155
  %156 = load ptr, ptr %P, align 8, !tbaa !4
  %num_nonzeros113 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %156, i32 0, i32 19
  store i32 %add112, ptr %num_nonzeros113, align 4, !tbaa !175
  %157 = load ptr, ptr %P, align 8, !tbaa !4
  %num_nonzeros114 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %157, i32 0, i32 19
  %158 = load i32, ptr %num_nonzeros114, align 4, !tbaa !175
  %conv115 = sitofp i32 %158 to double
  %159 = load ptr, ptr %P, align 8, !tbaa !4
  %d_num_nonzeros = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %159, i32 0, i32 20
  store double %conv115, ptr %d_num_nonzeros, align 8, !tbaa !176
  %160 = load ptr, ptr %P, align 8, !tbaa !4
  %call116 = call i32 @hypre_MatvecCommPkgCreate(ptr noundef %160)
  %161 = load ptr, ptr %P, align 8, !tbaa !4
  %162 = load ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  store ptr %161, ptr %162, align 8, !tbaa !4
  %163 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %one) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %coarse_counter) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %row_Wp) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %start_indexing) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj_counter_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %P_offd_size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %P_diag_size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %P_num_rows) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wp_offd_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wp_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wp_offd_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wp_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wp_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wp_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wp_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wp_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %memory_location_P) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  ret i32 %163
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @hypre_ParCSRMatrixMemoryLocation(ptr noundef %matrix) #4 {
entry:
  %retval = alloca i32, align 4
  %matrix.addr = alloca ptr, align 8
  %diag = alloca ptr, align 8
  %offd = alloca ptr, align 8
  %memory_diag = alloca i32, align 4
  %memory_offd = alloca i32, align 4
  %err_msg = alloca [1024 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %matrix, ptr %matrix.addr, align 8, !tbaa !4
  %0 = load ptr, ptr %matrix.addr, align 8, !tbaa !4
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %diag) #6
  %1 = load ptr, ptr %matrix.addr, align 8, !tbaa !4
  %diag1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %1, i32 0, i32 8
  %2 = load ptr, ptr %diag1, align 8, !tbaa !149
  store ptr %2, ptr %diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %offd) #6
  %3 = load ptr, ptr %matrix.addr, align 8, !tbaa !4
  %offd2 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %3, i32 0, i32 9
  %4 = load ptr, ptr %offd2, align 8, !tbaa !162
  store ptr %4, ptr %offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %memory_diag) #6
  %5 = load ptr, ptr %diag, align 8, !tbaa !4
  %tobool3 = icmp ne ptr %5, null
  br i1 %tobool3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %6 = load ptr, ptr %diag, align 8, !tbaa !4
  %memory_location = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %6, i32 0, i32 13
  %7 = load i32, ptr %memory_location, align 4, !tbaa !177
  br label %cond.end

cond.false:                                       ; preds = %if.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ -1, %cond.false ]
  store i32 %cond, ptr %memory_diag, align 4, !tbaa !155
  call void @llvm.lifetime.start.p0(i64 4, ptr %memory_offd) #6
  %8 = load ptr, ptr %offd, align 8, !tbaa !4
  %tobool4 = icmp ne ptr %8, null
  br i1 %tobool4, label %cond.true5, label %cond.false7

cond.true5:                                       ; preds = %cond.end
  %9 = load ptr, ptr %offd, align 8, !tbaa !4
  %memory_location6 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %9, i32 0, i32 13
  %10 = load i32, ptr %memory_location6, align 4, !tbaa !177
  br label %cond.end8

cond.false7:                                      ; preds = %cond.end
  br label %cond.end8

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i32 [ %10, %cond.true5 ], [ -1, %cond.false7 ]
  store i32 %cond9, ptr %memory_offd, align 4, !tbaa !155
  %11 = load ptr, ptr %diag, align 8, !tbaa !4
  %tobool10 = icmp ne ptr %11, null
  br i1 %tobool10, label %land.lhs.true, label %if.end16

land.lhs.true:                                    ; preds = %cond.end8
  %12 = load ptr, ptr %offd, align 8, !tbaa !4
  %tobool11 = icmp ne ptr %12, null
  br i1 %tobool11, label %if.then12, label %if.end16

if.then12:                                        ; preds = %land.lhs.true
  %13 = load i32, ptr %memory_diag, align 4, !tbaa !155
  %14 = load i32, ptr %memory_offd, align 4, !tbaa !155
  %cmp = icmp ne i32 %13, %14
  br i1 %cmp, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.then12
  call void @llvm.lifetime.start.p0(i64 1024, ptr %err_msg) #6
  %arraydecay = getelementptr inbounds [1024 x i8], ptr %err_msg, i64 0, i64 0
  %15 = load i32, ptr %memory_diag, align 4, !tbaa !155
  %16 = load i32, ptr %memory_offd, align 4, !tbaa !155
  %call = call i32 (ptr, ptr, ...) @hypre_sprintf(ptr noundef %arraydecay, ptr noundef @.str.39, i32 noundef %15, i32 noundef %16)
  %arraydecay14 = getelementptr inbounds [1024 x i8], ptr %err_msg, i64 0, i64 0
  call void @hypre_error_handler(ptr noundef @.str.40, i32 noundef 425, i32 noundef 2, ptr noundef %arraydecay14)
  br label %do.body

do.body:                                          ; preds = %if.then13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 1024, ptr %err_msg) #6
  br label %cleanup

if.end15:                                         ; preds = %if.then12
  %17 = load i32, ptr %memory_diag, align 4, !tbaa !155
  store i32 %17, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end16:                                         ; preds = %land.lhs.true, %cond.end8
  %18 = load ptr, ptr %diag, align 8, !tbaa !4
  %tobool17 = icmp ne ptr %18, null
  br i1 %tobool17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end16
  %19 = load i32, ptr %memory_diag, align 4, !tbaa !155
  store i32 %19, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end19:                                         ; preds = %if.end16
  %20 = load ptr, ptr %offd, align 8, !tbaa !4
  %tobool20 = icmp ne ptr %20, null
  br i1 %tobool20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end19
  %21 = load i32, ptr %memory_offd, align 4, !tbaa !155
  store i32 %21, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end22:                                         ; preds = %if.end19
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end22, %if.then21, %if.then18, %if.end15, %do.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %memory_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %memory_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %diag) #6
  br label %return

return:                                           ; preds = %cleanup, %if.then
  %22 = load i32, ptr %retval, align 4
  ret i32 %22
}

declare i32 @hypre_MPI_Comm_size(ptr noundef, ptr noundef) #2

declare i32 @hypre_MPI_Comm_rank(ptr noundef, ptr noundef) #2

declare ptr @hypre_ParCSRMatrixCreate(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

declare i32 @hypre_MatvecCommPkgCreate(ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBuildBlockJacobiWp(ptr noundef %A_FF, ptr noundef %A_FC, i32 noundef %blk_size, ptr noundef %CF_marker, ptr noundef %cpts_starts, ptr noundef %Wp_ptr) #0 {
entry:
  %A_FF.addr = alloca ptr, align 8
  %A_FC.addr = alloca ptr, align 8
  %blk_size.addr = alloca i32, align 4
  %CF_marker.addr = alloca ptr, align 8
  %cpts_starts.addr = alloca ptr, align 8
  %Wp_ptr.addr = alloca ptr, align 8
  %A_FF_inv = alloca ptr, align 8
  %Wp = alloca ptr, align 8
  store ptr %A_FF, ptr %A_FF.addr, align 8, !tbaa !4
  store ptr %A_FC, ptr %A_FC.addr, align 8, !tbaa !4
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store ptr %cpts_starts, ptr %cpts_starts.addr, align 8, !tbaa !4
  store ptr %Wp_ptr, ptr %Wp_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_FF_inv) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wp) #6
  %0 = load ptr, ptr %A_FF.addr, align 8, !tbaa !4
  %1 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %call = call i32 @hypre_ParCSRMatrixBlockDiagMatrix(ptr noundef %0, i32 noundef %1, i32 noundef -1, ptr noundef null, i32 noundef 1, ptr noundef %A_FF_inv)
  %2 = load ptr, ptr %A_FF_inv, align 8, !tbaa !4
  %3 = load ptr, ptr %A_FC.addr, align 8, !tbaa !4
  %call1 = call ptr @hypre_ParCSRMatMat(ptr noundef %2, ptr noundef %3)
  store ptr %call1, ptr %Wp, align 8, !tbaa !4
  %4 = load ptr, ptr %A_FF_inv, align 8, !tbaa !4
  %call2 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %4)
  %5 = load ptr, ptr %Wp, align 8, !tbaa !4
  %6 = load ptr, ptr %Wp_ptr.addr, align 8, !tbaa !4
  store ptr %5, ptr %6, align 8, !tbaa !4
  %7 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_FF_inv) #6
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define i32 @hypre_ParCSRMatrixBlockDiagMatrix(ptr noundef %A, i32 noundef %blk_size, i32 noundef %point_type, ptr noundef %CF_marker, i32 noundef %diag_type, ptr noundef %B_ptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %blk_size.addr = alloca i32, align 4
  %point_type.addr = alloca i32, align 4
  %CF_marker.addr = alloca ptr, align 8
  %diag_type.addr = alloca i32, align 4
  %B_ptr.addr = alloca ptr, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  store i32 %point_type, ptr %point_type.addr, align 4, !tbaa !92
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store i32 %diag_type, ptr %diag_type.addr, align 4, !tbaa !92
  store ptr %B_ptr, ptr %B_ptr.addr, align 8, !tbaa !4
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %1 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %2 = load i32, ptr %point_type.addr, align 4, !tbaa !92
  %3 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %4 = load i32, ptr %diag_type.addr, align 4, !tbaa !92
  %5 = load ptr, ptr %B_ptr.addr, align 8, !tbaa !4
  %call = call i32 @hypre_ParCSRMatrixBlockDiagMatrixHost(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4, ptr noundef %5)
  %6 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  ret i32 %6
}

declare ptr @hypre_ParCSRMatMat(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBuildPBlockJacobi(ptr noundef %A, ptr noundef %A_FF, ptr noundef %A_FC, ptr noundef %Wp, i32 noundef %blk_size, ptr noundef %CF_marker, ptr noundef %cpts_starts, i32 noundef %debug_flag, ptr noundef %P_ptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %A_FF.addr = alloca ptr, align 8
  %A_FC.addr = alloca ptr, align 8
  %Wp.addr = alloca ptr, align 8
  %blk_size.addr = alloca i32, align 4
  %CF_marker.addr = alloca ptr, align 8
  %cpts_starts.addr = alloca ptr, align 8
  %debug_flag.addr = alloca i32, align 4
  %P_ptr.addr = alloca ptr, align 8
  %Wp_tmp = alloca ptr, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %A_FF, ptr %A_FF.addr, align 8, !tbaa !4
  store ptr %A_FC, ptr %A_FC.addr, align 8, !tbaa !4
  store ptr %Wp, ptr %Wp.addr, align 8, !tbaa !4
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store ptr %cpts_starts, ptr %cpts_starts.addr, align 8, !tbaa !4
  store i32 %debug_flag, ptr %debug_flag.addr, align 4, !tbaa !92
  store ptr %P_ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wp_tmp) #6
  %0 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %cmp = icmp eq ptr %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %A_FF.addr, align 8, !tbaa !4
  %2 = load ptr, ptr %A_FC.addr, align 8, !tbaa !4
  %3 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %4 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %5 = load ptr, ptr %cpts_starts.addr, align 8, !tbaa !4
  %call = call i32 @hypre_MGRBuildBlockJacobiWp(ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %Wp_tmp)
  %6 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %7 = load ptr, ptr %Wp_tmp, align 8, !tbaa !4
  %8 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %9 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %10 = load ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  %call1 = call i32 @hypre_MGRBuildPFromWp(ptr noundef %6, ptr noundef %7, ptr noundef %8, i32 noundef %9, ptr noundef %10)
  %11 = load ptr, ptr %Wp_tmp, align 8, !tbaa !4
  %device_col_map_offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %11, i32 0, i32 13
  store ptr null, ptr %device_col_map_offd, align 8, !tbaa !173
  %12 = load ptr, ptr %Wp_tmp, align 8, !tbaa !4
  %col_map_offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %12, i32 0, i32 12
  store ptr null, ptr %col_map_offd, align 8, !tbaa !174
  %13 = load ptr, ptr %Wp_tmp, align 8, !tbaa !4
  %call2 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %13)
  br label %if.end

if.else:                                          ; preds = %entry
  %14 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %15 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %16 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %17 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %18 = load ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  %call3 = call i32 @hypre_MGRBuildPFromWp(ptr noundef %14, ptr noundef %15, ptr noundef %16, i32 noundef %17, ptr noundef %18)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wp_tmp) #6
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define i32 @hypre_ExtendWtoPHost(i32 noundef %P_nr_of_rows, ptr noundef %CF_marker, ptr noundef %W_diag_i, ptr noundef %W_diag_j, ptr noundef %W_diag_data, ptr noundef %P_diag_i, ptr noundef %P_diag_j, ptr noundef %P_diag_data, ptr noundef %W_offd_i, ptr noundef %P_offd_i) #0 {
entry:
  %P_nr_of_rows.addr = alloca i32, align 4
  %CF_marker.addr = alloca ptr, align 8
  %W_diag_i.addr = alloca ptr, align 8
  %W_diag_j.addr = alloca ptr, align 8
  %W_diag_data.addr = alloca ptr, align 8
  %P_diag_i.addr = alloca ptr, align 8
  %P_diag_j.addr = alloca ptr, align 8
  %P_diag_data.addr = alloca ptr, align 8
  %W_offd_i.addr = alloca ptr, align 8
  %P_offd_i.addr = alloca ptr, align 8
  %jj_counter = alloca i32, align 4
  %jj_counter_offd = alloca i32, align 4
  %start_indexing = alloca i32, align 4
  %fine_to_coarse = alloca ptr, align 8
  %coarse_counter = alloca i32, align 4
  %i = alloca i32, align 4
  %jj = alloca i32, align 4
  %one = alloca double, align 8
  %row_counter = alloca i32, align 4
  store i32 %P_nr_of_rows, ptr %P_nr_of_rows.addr, align 4, !tbaa !92
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store ptr %W_diag_i, ptr %W_diag_i.addr, align 8, !tbaa !4
  store ptr %W_diag_j, ptr %W_diag_j.addr, align 8, !tbaa !4
  store ptr %W_diag_data, ptr %W_diag_data.addr, align 8, !tbaa !4
  store ptr %P_diag_i, ptr %P_diag_i.addr, align 8, !tbaa !4
  store ptr %P_diag_j, ptr %P_diag_j.addr, align 8, !tbaa !4
  store ptr %P_diag_data, ptr %P_diag_data.addr, align 8, !tbaa !4
  store ptr %W_offd_i, ptr %W_offd_i.addr, align 8, !tbaa !4
  store ptr %P_offd_i, ptr %P_offd_i.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj_counter_offd) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %start_indexing) #6
  store i32 0, ptr %start_indexing, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %fine_to_coarse) #6
  store ptr null, ptr %fine_to_coarse, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %coarse_counter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %one) #6
  store double 1.000000e+00, ptr %one, align 8, !tbaa !161
  %0 = load i32, ptr %P_nr_of_rows.addr, align 4, !tbaa !92
  %conv = sext i32 %0 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %fine_to_coarse, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, ptr %i, align 4, !tbaa !92
  %2 = load i32, ptr %P_nr_of_rows.addr, align 4, !tbaa !92
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %4 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds i32, ptr %3, i64 %idxprom
  store i32 -1, ptr %arrayidx, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %5, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !178

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %row_counter) #6
  store i32 0, ptr %row_counter, align 4, !tbaa !92
  store i32 0, ptr %coarse_counter, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc13, %for.end
  %6 = load i32, ptr %i, align 4, !tbaa !92
  %7 = load i32, ptr %P_nr_of_rows.addr, align 4, !tbaa !92
  %cmp3 = icmp slt i32 %6, %7
  br i1 %cmp3, label %for.body5, label %for.end15

for.body5:                                        ; preds = %for.cond2
  %8 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %9 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom6 = sext i32 %9 to i64
  %arrayidx7 = getelementptr inbounds i32, ptr %8, i64 %idxprom6
  %10 = load i32, ptr %arrayidx7, align 4, !tbaa !92
  %cmp8 = icmp sgt i32 %10, 0
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %for.body5
  %11 = load i32, ptr %coarse_counter, align 4, !tbaa !92
  %12 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %13 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom10 = sext i32 %13 to i64
  %arrayidx11 = getelementptr inbounds i32, ptr %12, i64 %idxprom10
  store i32 %11, ptr %arrayidx11, align 4, !tbaa !92
  %14 = load i32, ptr %coarse_counter, align 4, !tbaa !92
  %inc12 = add nsw i32 %14, 1
  store i32 %inc12, ptr %coarse_counter, align 4, !tbaa !92
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body5
  br label %for.inc13

for.inc13:                                        ; preds = %if.end
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc14 = add nsw i32 %15, 1
  store i32 %inc14, ptr %i, align 4, !tbaa !92
  br label %for.cond2, !llvm.loop !179

for.end15:                                        ; preds = %for.cond2
  %16 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %16, ptr %jj_counter, align 4, !tbaa !92
  %17 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %17, ptr %jj_counter_offd, align 4, !tbaa !92
  store i32 0, ptr %row_counter, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond16

for.cond16:                                       ; preds = %for.inc69, %for.end15
  %18 = load i32, ptr %i, align 4, !tbaa !92
  %19 = load i32, ptr %P_nr_of_rows.addr, align 4, !tbaa !92
  %cmp17 = icmp slt i32 %18, %19
  br i1 %cmp17, label %for.body19, label %for.end71

for.body19:                                       ; preds = %for.cond16
  %20 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %21 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom20 = sext i32 %21 to i64
  %arrayidx21 = getelementptr inbounds i32, ptr %20, i64 %idxprom20
  %22 = load i32, ptr %arrayidx21, align 4, !tbaa !92
  %cmp22 = icmp sge i32 %22, 0
  br i1 %cmp22, label %if.then24, label %if.else

if.then24:                                        ; preds = %for.body19
  %23 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %24 = load ptr, ptr %P_diag_i.addr, align 8, !tbaa !4
  %25 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom25 = sext i32 %25 to i64
  %arrayidx26 = getelementptr inbounds i32, ptr %24, i64 %idxprom25
  store i32 %23, ptr %arrayidx26, align 4, !tbaa !92
  %26 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %27 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom27 = sext i32 %27 to i64
  %arrayidx28 = getelementptr inbounds i32, ptr %26, i64 %idxprom27
  %28 = load i32, ptr %arrayidx28, align 4, !tbaa !92
  %29 = load ptr, ptr %P_diag_j.addr, align 8, !tbaa !4
  %30 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom29 = sext i32 %30 to i64
  %arrayidx30 = getelementptr inbounds i32, ptr %29, i64 %idxprom29
  store i32 %28, ptr %arrayidx30, align 4, !tbaa !92
  %31 = load double, ptr %one, align 8, !tbaa !161
  %32 = load ptr, ptr %P_diag_data.addr, align 8, !tbaa !4
  %33 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom31 = sext i32 %33 to i64
  %arrayidx32 = getelementptr inbounds double, ptr %32, i64 %idxprom31
  store double %31, ptr %arrayidx32, align 8, !tbaa !161
  %34 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc33 = add nsw i32 %34, 1
  store i32 %inc33, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end65

if.else:                                          ; preds = %for.body19
  %35 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %36 = load ptr, ptr %P_diag_i.addr, align 8, !tbaa !4
  %37 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom34 = sext i32 %37 to i64
  %arrayidx35 = getelementptr inbounds i32, ptr %36, i64 %idxprom34
  store i32 %35, ptr %arrayidx35, align 4, !tbaa !92
  %38 = load ptr, ptr %W_diag_i.addr, align 8, !tbaa !4
  %39 = load i32, ptr %row_counter, align 4, !tbaa !92
  %idxprom36 = sext i32 %39 to i64
  %arrayidx37 = getelementptr inbounds i32, ptr %38, i64 %idxprom36
  %40 = load i32, ptr %arrayidx37, align 4, !tbaa !92
  store i32 %40, ptr %jj, align 4, !tbaa !92
  br label %for.cond38

for.cond38:                                       ; preds = %for.inc53, %if.else
  %41 = load i32, ptr %jj, align 4, !tbaa !92
  %42 = load ptr, ptr %W_diag_i.addr, align 8, !tbaa !4
  %43 = load i32, ptr %row_counter, align 4, !tbaa !92
  %add = add nsw i32 %43, 1
  %idxprom39 = sext i32 %add to i64
  %arrayidx40 = getelementptr inbounds i32, ptr %42, i64 %idxprom39
  %44 = load i32, ptr %arrayidx40, align 4, !tbaa !92
  %cmp41 = icmp slt i32 %41, %44
  br i1 %cmp41, label %for.body43, label %for.end55

for.body43:                                       ; preds = %for.cond38
  %45 = load ptr, ptr %W_diag_j.addr, align 8, !tbaa !4
  %46 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom44 = sext i32 %46 to i64
  %arrayidx45 = getelementptr inbounds i32, ptr %45, i64 %idxprom44
  %47 = load i32, ptr %arrayidx45, align 4, !tbaa !92
  %48 = load ptr, ptr %P_diag_j.addr, align 8, !tbaa !4
  %49 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom46 = sext i32 %49 to i64
  %arrayidx47 = getelementptr inbounds i32, ptr %48, i64 %idxprom46
  store i32 %47, ptr %arrayidx47, align 4, !tbaa !92
  %50 = load ptr, ptr %W_diag_data.addr, align 8, !tbaa !4
  %51 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom48 = sext i32 %51 to i64
  %arrayidx49 = getelementptr inbounds double, ptr %50, i64 %idxprom48
  %52 = load double, ptr %arrayidx49, align 8, !tbaa !161
  %53 = load ptr, ptr %P_diag_data.addr, align 8, !tbaa !4
  %54 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom50 = sext i32 %54 to i64
  %arrayidx51 = getelementptr inbounds double, ptr %53, i64 %idxprom50
  store double %52, ptr %arrayidx51, align 8, !tbaa !161
  %55 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc52 = add nsw i32 %55, 1
  store i32 %inc52, ptr %jj_counter, align 4, !tbaa !92
  br label %for.inc53

for.inc53:                                        ; preds = %for.body43
  %56 = load i32, ptr %jj, align 4, !tbaa !92
  %inc54 = add nsw i32 %56, 1
  store i32 %inc54, ptr %jj, align 4, !tbaa !92
  br label %for.cond38, !llvm.loop !180

for.end55:                                        ; preds = %for.cond38
  %57 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %58 = load ptr, ptr %P_offd_i.addr, align 8, !tbaa !4
  %59 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom56 = sext i32 %59 to i64
  %arrayidx57 = getelementptr inbounds i32, ptr %58, i64 %idxprom56
  store i32 %57, ptr %arrayidx57, align 4, !tbaa !92
  %60 = load ptr, ptr %W_offd_i.addr, align 8, !tbaa !4
  %61 = load i32, ptr %row_counter, align 4, !tbaa !92
  %add58 = add nsw i32 %61, 1
  %idxprom59 = sext i32 %add58 to i64
  %arrayidx60 = getelementptr inbounds i32, ptr %60, i64 %idxprom59
  %62 = load i32, ptr %arrayidx60, align 4, !tbaa !92
  %63 = load ptr, ptr %W_offd_i.addr, align 8, !tbaa !4
  %64 = load i32, ptr %row_counter, align 4, !tbaa !92
  %idxprom61 = sext i32 %64 to i64
  %arrayidx62 = getelementptr inbounds i32, ptr %63, i64 %idxprom61
  %65 = load i32, ptr %arrayidx62, align 4, !tbaa !92
  %sub = sub nsw i32 %62, %65
  %66 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %add63 = add nsw i32 %66, %sub
  store i32 %add63, ptr %jj_counter_offd, align 4, !tbaa !92
  %67 = load i32, ptr %row_counter, align 4, !tbaa !92
  %inc64 = add nsw i32 %67, 1
  store i32 %inc64, ptr %row_counter, align 4, !tbaa !92
  br label %if.end65

if.end65:                                         ; preds = %for.end55, %if.then24
  %68 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %69 = load ptr, ptr %P_offd_i.addr, align 8, !tbaa !4
  %70 = load i32, ptr %i, align 4, !tbaa !92
  %add66 = add nsw i32 %70, 1
  %idxprom67 = sext i32 %add66 to i64
  %arrayidx68 = getelementptr inbounds i32, ptr %69, i64 %idxprom67
  store i32 %68, ptr %arrayidx68, align 4, !tbaa !92
  br label %for.inc69

for.inc69:                                        ; preds = %if.end65
  %71 = load i32, ptr %i, align 4, !tbaa !92
  %inc70 = add nsw i32 %71, 1
  store i32 %inc70, ptr %i, align 4, !tbaa !92
  br label %for.cond16, !llvm.loop !181

for.end71:                                        ; preds = %for.cond16
  %72 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %73 = load ptr, ptr %P_diag_i.addr, align 8, !tbaa !4
  %74 = load i32, ptr %P_nr_of_rows.addr, align 4, !tbaa !92
  %idxprom72 = sext i32 %74 to i64
  %arrayidx73 = getelementptr inbounds i32, ptr %73, i64 %idxprom72
  store i32 %72, ptr %arrayidx73, align 4, !tbaa !92
  %75 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %75, i32 noundef 0)
  store ptr null, ptr %fine_to_coarse, align 8, !tbaa !4
  call void @llvm.lifetime.end.p0(i64 4, ptr %row_counter) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %one) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %coarse_counter) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %fine_to_coarse) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %start_indexing) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj_counter_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj_counter) #6
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBuildPHost(ptr noundef %A, ptr noundef %CF_marker, ptr noundef %num_cpts_global, i32 noundef %method, ptr noundef %P_ptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %CF_marker.addr = alloca ptr, align 8
  %num_cpts_global.addr = alloca ptr, align 8
  %method.addr = alloca i32, align 4
  %P_ptr.addr = alloca ptr, align 8
  %comm = alloca ptr, align 8
  %num_procs = alloca i32, align 4
  %my_id = alloca i32, align 4
  %A_nr_of_rows = alloca i32, align 4
  %A_FF = alloca ptr, align 8
  %A_FC = alloca ptr, align 8
  %P = alloca ptr, align 8
  %W_diag = alloca ptr, align 8
  %W_offd = alloca ptr, align 8
  %P_diag_nnz = alloca i32, align 4
  %nfpoints = alloca i32, align 4
  %P_diag_i = alloca ptr, align 8
  %P_diag_j = alloca ptr, align 8
  %P_offd_i = alloca ptr, align 8
  %P_diag_data = alloca ptr, align 8
  %diag2 = alloca ptr, align 8
  %diag1 = alloca ptr, align 8
  %nC_global = alloca i32, align 4
  %i = alloca i32, align 4
  %memory_location_P = alloca i32, align 4
  %scal = alloca double, align 8
  %dsum = alloca double, align 8
  %D_FF_inv = alloca ptr, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store ptr %num_cpts_global, ptr %num_cpts_global.addr, align 8, !tbaa !4
  store i32 %method, ptr %method.addr, align 4, !tbaa !92
  store ptr %P_ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %comm1, align 8, !tbaa !160
  store ptr %1, ptr %comm, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %A_nr_of_rows) #6
  %2 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %2, i32 0, i32 8
  %3 = load ptr, ptr %diag, align 8, !tbaa !149
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %3, i32 0, i32 3
  %4 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %4, ptr %A_nr_of_rows, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_FF) #6
  store ptr null, ptr %A_FF, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_FC) #6
  store ptr null, ptr %A_FC, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %P) #6
  store ptr null, ptr %P, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %W_diag) #6
  store ptr null, ptr %W_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %W_offd) #6
  store ptr null, ptr %W_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %P_diag_nnz) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %nfpoints) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_i) #6
  store ptr null, ptr %P_diag_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_j) #6
  store ptr null, ptr %P_diag_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd_i) #6
  store ptr null, ptr %P_offd_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_data) #6
  store ptr null, ptr %P_diag_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %diag2) #6
  store ptr null, ptr %diag2, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %diag1) #6
  store ptr null, ptr %diag1, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %nC_global) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %memory_location_P) #6
  %5 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call = call i32 @hypre_ParCSRMatrixMemoryLocation(ptr noundef %5)
  store i32 %call, ptr %memory_location_P, align 4, !tbaa !155
  %6 = load ptr, ptr %comm, align 8, !tbaa !4
  %call3 = call i32 @hypre_MPI_Comm_size(ptr noundef %6, ptr noundef %num_procs)
  %7 = load ptr, ptr %comm, align 8, !tbaa !4
  %call4 = call i32 @hypre_MPI_Comm_rank(ptr noundef %7, ptr noundef %my_id)
  store i32 0, ptr %nfpoints, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %9 = load i32, ptr %A_nr_of_rows, align 4, !tbaa !92
  %cmp = icmp slt i32 %8, %9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom
  %12 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %cmp5 = icmp eq i32 %12, -1
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %13 = load i32, ptr %nfpoints, align 4, !tbaa !92
  %inc = add nsw i32 %13, 1
  store i32 %inc, ptr %nfpoints, align 4, !tbaa !92
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %inc6 = add nsw i32 %14, 1
  store i32 %inc6, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !182

for.end:                                          ; preds = %for.cond
  %15 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp7 = icmp sgt i32 %15, 0
  br i1 %cmp7, label %if.then8, label %if.else68

if.then8:                                         ; preds = %for.end
  %16 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %17 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %18 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %call9 = call i32 @hypre_ParCSRMatrixGenerateFFFCHost(ptr noundef %16, ptr noundef %17, ptr noundef %18, ptr noundef null, ptr noundef %A_FC, ptr noundef %A_FF)
  %19 = load i32, ptr %nfpoints, align 4, !tbaa !92
  %conv = sext i32 %19 to i64
  %20 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call10 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 8, i32 noundef %20)
  store ptr %call10, ptr %diag2, align 8, !tbaa !4
  %21 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp11 = icmp eq i32 %21, 1
  br i1 %cmp11, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.then8
  call void @llvm.lifetime.start.p0(i64 8, ptr %scal) #6
  store double 1.000000e+00, ptr %scal, align 8, !tbaa !161
  %22 = load i32, ptr %nfpoints, align 4, !tbaa !92
  %conv14 = sext i32 %22 to i64
  %23 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call15 = call ptr @hypre_CAlloc(i64 noundef %conv14, i64 noundef 8, i32 noundef %23)
  store ptr %call15, ptr %diag1, align 8, !tbaa !4
  %24 = load ptr, ptr %A_FF, align 8, !tbaa !4
  %diag16 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %24, i32 0, i32 8
  %25 = load ptr, ptr %diag16, align 8, !tbaa !149
  %26 = load ptr, ptr %diag2, align 8, !tbaa !4
  call void @hypre_CSRMatrixExtractDiagonalHost(ptr noundef %25, ptr noundef %26, i32 noundef 0)
  %27 = load ptr, ptr %A_FF, align 8, !tbaa !4
  %diag17 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %27, i32 0, i32 8
  %28 = load ptr, ptr %diag17, align 8, !tbaa !149
  %29 = load ptr, ptr %diag1, align 8, !tbaa !4
  call void @hypre_CSRMatrixComputeRowSumHost(ptr noundef %28, ptr noundef null, ptr noundef null, ptr noundef %29, i32 noundef 1, double noundef 1.000000e+00, ptr noundef @.str.2)
  %30 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %diag18 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %30, i32 0, i32 8
  %31 = load ptr, ptr %diag18, align 8, !tbaa !149
  %32 = load ptr, ptr %diag1, align 8, !tbaa !4
  call void @hypre_CSRMatrixComputeRowSumHost(ptr noundef %31, ptr noundef null, ptr noundef null, ptr noundef %32, i32 noundef 1, double noundef 1.000000e+00, ptr noundef @.str.3)
  %33 = load ptr, ptr %A_FF, align 8, !tbaa !4
  %offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %33, i32 0, i32 9
  %34 = load ptr, ptr %offd, align 8, !tbaa !162
  %35 = load ptr, ptr %diag1, align 8, !tbaa !4
  call void @hypre_CSRMatrixComputeRowSumHost(ptr noundef %34, ptr noundef null, ptr noundef null, ptr noundef %35, i32 noundef 1, double noundef 1.000000e+00, ptr noundef @.str.3)
  %36 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %offd19 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %36, i32 0, i32 9
  %37 = load ptr, ptr %offd19, align 8, !tbaa !162
  %38 = load ptr, ptr %diag1, align 8, !tbaa !4
  call void @hypre_CSRMatrixComputeRowSumHost(ptr noundef %37, ptr noundef null, ptr noundef null, ptr noundef %38, i32 noundef 1, double noundef 1.000000e+00, ptr noundef @.str.3)
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond20

for.cond20:                                       ; preds = %for.inc38, %if.then13
  %39 = load i32, ptr %i, align 4, !tbaa !92
  %40 = load i32, ptr %nfpoints, align 4, !tbaa !92
  %cmp21 = icmp slt i32 %39, %40
  br i1 %cmp21, label %for.body23, label %for.end40

for.body23:                                       ; preds = %for.cond20
  call void @llvm.lifetime.start.p0(i64 8, ptr %dsum) #6
  %41 = load ptr, ptr %diag2, align 8, !tbaa !4
  %42 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom24 = sext i32 %42 to i64
  %arrayidx25 = getelementptr inbounds double, ptr %41, i64 %idxprom24
  %43 = load double, ptr %arrayidx25, align 8, !tbaa !161
  %44 = load double, ptr %scal, align 8, !tbaa !161
  %45 = load ptr, ptr %diag1, align 8, !tbaa !4
  %46 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom26 = sext i32 %46 to i64
  %arrayidx27 = getelementptr inbounds double, ptr %45, i64 %idxprom26
  %47 = load double, ptr %arrayidx27, align 8, !tbaa !161
  %48 = load ptr, ptr %diag2, align 8, !tbaa !4
  %49 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom28 = sext i32 %49 to i64
  %arrayidx29 = getelementptr inbounds double, ptr %48, i64 %idxprom28
  %50 = load double, ptr %arrayidx29, align 8, !tbaa !161
  %cmp30 = fcmp ogt double %50, 0.000000e+00
  br i1 %cmp30, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body23
  %51 = load ptr, ptr %diag2, align 8, !tbaa !4
  %52 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom32 = sext i32 %52 to i64
  %arrayidx33 = getelementptr inbounds double, ptr %51, i64 %idxprom32
  %53 = load double, ptr %arrayidx33, align 8, !tbaa !161
  br label %cond.end

cond.false:                                       ; preds = %for.body23
  %54 = load ptr, ptr %diag2, align 8, !tbaa !4
  %55 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom34 = sext i32 %55 to i64
  %arrayidx35 = getelementptr inbounds double, ptr %54, i64 %idxprom34
  %56 = load double, ptr %arrayidx35, align 8, !tbaa !161
  %fneg = fneg double %56
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %53, %cond.true ], [ %fneg, %cond.false ]
  %sub = fsub double %47, %cond
  %57 = call double @llvm.fmuladd.f64(double %44, double %sub, double %43)
  store double %57, ptr %dsum, align 8, !tbaa !161
  %58 = load double, ptr %dsum, align 8, !tbaa !161
  %div = fdiv double 1.000000e+00, %58
  %59 = load ptr, ptr %diag2, align 8, !tbaa !4
  %60 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom36 = sext i32 %60 to i64
  %arrayidx37 = getelementptr inbounds double, ptr %59, i64 %idxprom36
  store double %div, ptr %arrayidx37, align 8, !tbaa !161
  call void @llvm.lifetime.end.p0(i64 8, ptr %dsum) #6
  br label %for.inc38

for.inc38:                                        ; preds = %cond.end
  %61 = load i32, ptr %i, align 4, !tbaa !92
  %inc39 = add nsw i32 %61, 1
  store i32 %inc39, ptr %i, align 4, !tbaa !92
  br label %for.cond20, !llvm.loop !183

for.end40:                                        ; preds = %for.cond20
  %62 = load ptr, ptr %diag1, align 8, !tbaa !4
  %63 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %62, i32 noundef %63)
  store ptr null, ptr %diag1, align 8, !tbaa !4
  call void @llvm.lifetime.end.p0(i64 8, ptr %scal) #6
  br label %if.end46

if.else:                                          ; preds = %if.then8
  %64 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp41 = icmp eq i32 %64, 2
  br i1 %cmp41, label %if.then43, label %if.end45

if.then43:                                        ; preds = %if.else
  %65 = load ptr, ptr %A_FF, align 8, !tbaa !4
  %diag44 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %65, i32 0, i32 8
  %66 = load ptr, ptr %diag44, align 8, !tbaa !149
  %67 = load ptr, ptr %diag2, align 8, !tbaa !4
  call void @hypre_CSRMatrixExtractDiagonalHost(ptr noundef %66, ptr noundef %67, i32 noundef 2)
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.else
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %for.end40
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond47

for.cond47:                                       ; preds = %for.inc56, %if.end46
  %68 = load i32, ptr %i, align 4, !tbaa !92
  %69 = load i32, ptr %nfpoints, align 4, !tbaa !92
  %cmp48 = icmp slt i32 %68, %69
  br i1 %cmp48, label %for.body50, label %for.end58

for.body50:                                       ; preds = %for.cond47
  %70 = load ptr, ptr %diag2, align 8, !tbaa !4
  %71 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom51 = sext i32 %71 to i64
  %arrayidx52 = getelementptr inbounds double, ptr %70, i64 %idxprom51
  %72 = load double, ptr %arrayidx52, align 8, !tbaa !161
  %fneg53 = fneg double %72
  %73 = load ptr, ptr %diag2, align 8, !tbaa !4
  %74 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom54 = sext i32 %74 to i64
  %arrayidx55 = getelementptr inbounds double, ptr %73, i64 %idxprom54
  store double %fneg53, ptr %arrayidx55, align 8, !tbaa !161
  br label %for.inc56

for.inc56:                                        ; preds = %for.body50
  %75 = load i32, ptr %i, align 4, !tbaa !92
  %inc57 = add nsw i32 %75, 1
  store i32 %inc57, ptr %i, align 4, !tbaa !92
  br label %for.cond47, !llvm.loop !184

for.end58:                                        ; preds = %for.cond47
  call void @llvm.lifetime.start.p0(i64 8, ptr %D_FF_inv) #6
  %76 = load i32, ptr %nfpoints, align 4, !tbaa !92
  %call59 = call ptr @hypre_SeqVectorCreate(i32 noundef %76)
  store ptr %call59, ptr %D_FF_inv, align 8, !tbaa !4
  %77 = load ptr, ptr %diag2, align 8, !tbaa !4
  %78 = load ptr, ptr %D_FF_inv, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_Vector, ptr %78, i32 0, i32 0
  store ptr %77, ptr %data, align 8, !tbaa !185
  %79 = load ptr, ptr %D_FF_inv, align 8, !tbaa !4
  %80 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call60 = call i32 @hypre_SeqVectorInitialize_v2(ptr noundef %79, i32 noundef %80)
  %81 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %diag61 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %81, i32 0, i32 8
  %82 = load ptr, ptr %diag61, align 8, !tbaa !149
  %83 = load ptr, ptr %D_FF_inv, align 8, !tbaa !4
  %call62 = call i32 @hypre_CSRMatrixDiagScale(ptr noundef %82, ptr noundef %83, ptr noundef null)
  %84 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %offd63 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %84, i32 0, i32 9
  %85 = load ptr, ptr %offd63, align 8, !tbaa !162
  %86 = load ptr, ptr %D_FF_inv, align 8, !tbaa !4
  %call64 = call i32 @hypre_CSRMatrixDiagScale(ptr noundef %85, ptr noundef %86, ptr noundef null)
  %87 = load ptr, ptr %D_FF_inv, align 8, !tbaa !4
  %call65 = call i32 @hypre_SeqVectorDestroy(ptr noundef %87)
  %88 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %diag66 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %88, i32 0, i32 8
  %89 = load ptr, ptr %diag66, align 8, !tbaa !149
  store ptr %89, ptr %W_diag, align 8, !tbaa !4
  %90 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %offd67 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %90, i32 0, i32 9
  %91 = load ptr, ptr %offd67, align 8, !tbaa !162
  store ptr %91, ptr %W_offd, align 8, !tbaa !4
  %92 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %global_num_cols = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %92, i32 0, i32 2
  %93 = load i32, ptr %global_num_cols, align 4, !tbaa !172
  store i32 %93, ptr %nC_global, align 4, !tbaa !92
  call void @llvm.lifetime.end.p0(i64 8, ptr %D_FF_inv) #6
  br label %if.end82

if.else68:                                        ; preds = %for.end
  %94 = load i32, ptr %nfpoints, align 4, !tbaa !92
  %95 = load i32, ptr %A_nr_of_rows, align 4, !tbaa !92
  %96 = load i32, ptr %nfpoints, align 4, !tbaa !92
  %sub69 = sub nsw i32 %95, %96
  %call70 = call ptr @hypre_CSRMatrixCreate(i32 noundef %94, i32 noundef %sub69, i32 noundef 0)
  store ptr %call70, ptr %W_diag, align 8, !tbaa !4
  %97 = load i32, ptr %nfpoints, align 4, !tbaa !92
  %call71 = call ptr @hypre_CSRMatrixCreate(i32 noundef %97, i32 noundef 0, i32 noundef 0)
  store ptr %call71, ptr %W_offd, align 8, !tbaa !4
  %98 = load ptr, ptr %W_diag, align 8, !tbaa !4
  %99 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call72 = call i32 @hypre_CSRMatrixInitialize_v2(ptr noundef %98, i32 noundef 0, i32 noundef %99)
  %100 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %101 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call73 = call i32 @hypre_CSRMatrixInitialize_v2(ptr noundef %100, i32 noundef 0, i32 noundef %101)
  %102 = load i32, ptr %my_id, align 4, !tbaa !92
  %103 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub74 = sub nsw i32 %103, 1
  %cmp75 = icmp eq i32 %102, %sub74
  br i1 %cmp75, label %if.then77, label %if.end79

if.then77:                                        ; preds = %if.else68
  %104 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %arrayidx78 = getelementptr inbounds i32, ptr %104, i64 1
  %105 = load i32, ptr %arrayidx78, align 4, !tbaa !92
  store i32 %105, ptr %nC_global, align 4, !tbaa !92
  br label %if.end79

if.end79:                                         ; preds = %if.then77, %if.else68
  %106 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub80 = sub nsw i32 %106, 1
  %107 = load ptr, ptr %comm, align 8, !tbaa !4
  %call81 = call i32 @hypre_MPI_Bcast(ptr noundef %nC_global, i32 noundef 1, ptr noundef @ompi_mpi_int, i32 noundef %sub80, ptr noundef %107)
  br label %if.end82

if.end82:                                         ; preds = %if.end79, %for.end58
  %108 = load ptr, ptr %W_diag, align 8, !tbaa !4
  %num_nonzeros = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %108, i32 0, i32 5
  %109 = load i32, ptr %num_nonzeros, align 8, !tbaa !166
  %110 = load ptr, ptr %W_diag, align 8, !tbaa !4
  %num_cols = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %110, i32 0, i32 4
  %111 = load i32, ptr %num_cols, align 4, !tbaa !167
  %add = add nsw i32 %109, %111
  store i32 %add, ptr %P_diag_nnz, align 4, !tbaa !92
  %112 = load i32, ptr %A_nr_of_rows, align 4, !tbaa !92
  %add83 = add nsw i32 %112, 1
  %conv84 = sext i32 %add83 to i64
  %113 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call85 = call ptr @hypre_CAlloc(i64 noundef %conv84, i64 noundef 4, i32 noundef %113)
  store ptr %call85, ptr %P_diag_i, align 8, !tbaa !4
  %114 = load i32, ptr %P_diag_nnz, align 4, !tbaa !92
  %conv86 = sext i32 %114 to i64
  %115 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call87 = call ptr @hypre_CAlloc(i64 noundef %conv86, i64 noundef 4, i32 noundef %115)
  store ptr %call87, ptr %P_diag_j, align 8, !tbaa !4
  %116 = load i32, ptr %P_diag_nnz, align 4, !tbaa !92
  %conv88 = sext i32 %116 to i64
  %117 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call89 = call ptr @hypre_CAlloc(i64 noundef %conv88, i64 noundef 8, i32 noundef %117)
  store ptr %call89, ptr %P_diag_data, align 8, !tbaa !4
  %118 = load i32, ptr %A_nr_of_rows, align 4, !tbaa !92
  %add90 = add nsw i32 %118, 1
  %conv91 = sext i32 %add90 to i64
  %119 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call92 = call ptr @hypre_CAlloc(i64 noundef %conv91, i64 noundef 4, i32 noundef %119)
  store ptr %call92, ptr %P_offd_i, align 8, !tbaa !4
  %120 = load i32, ptr %A_nr_of_rows, align 4, !tbaa !92
  %121 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %122 = load ptr, ptr %W_diag, align 8, !tbaa !4
  %i93 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %122, i32 0, i32 0
  %123 = load ptr, ptr %i93, align 8, !tbaa !163
  %124 = load ptr, ptr %W_diag, align 8, !tbaa !4
  %j = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %124, i32 0, i32 1
  %125 = load ptr, ptr %j, align 8, !tbaa !164
  %126 = load ptr, ptr %W_diag, align 8, !tbaa !4
  %data94 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %126, i32 0, i32 10
  %127 = load ptr, ptr %data94, align 8, !tbaa !165
  %128 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %129 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %130 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %131 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %i95 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %131, i32 0, i32 0
  %132 = load ptr, ptr %i95, align 8, !tbaa !163
  %133 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %call96 = call i32 @hypre_ExtendWtoPHost(i32 noundef %120, ptr noundef %121, ptr noundef %123, ptr noundef %125, ptr noundef %127, ptr noundef %128, ptr noundef %129, ptr noundef %130, ptr noundef %132, ptr noundef %133)
  %134 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm97 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %134, i32 0, i32 0
  %135 = load ptr, ptr %comm97, align 8, !tbaa !160
  %136 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %global_num_rows = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %136, i32 0, i32 1
  %137 = load i32, ptr %global_num_rows, align 8, !tbaa !171
  %138 = load i32, ptr %nC_global, align 4, !tbaa !92
  %139 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %col_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %139, i32 0, i32 15
  %arraydecay = getelementptr inbounds [2 x i32], ptr %col_starts, i64 0, i64 0
  %140 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %141 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %num_cols98 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %141, i32 0, i32 4
  %142 = load i32, ptr %num_cols98, align 4, !tbaa !167
  %143 = load i32, ptr %P_diag_nnz, align 4, !tbaa !92
  %144 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %num_nonzeros99 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %144, i32 0, i32 5
  %145 = load i32, ptr %num_nonzeros99, align 8, !tbaa !166
  %call100 = call ptr @hypre_ParCSRMatrixCreate(ptr noundef %135, i32 noundef %137, i32 noundef %138, ptr noundef %arraydecay, ptr noundef %140, i32 noundef %142, i32 noundef %143, i32 noundef %145)
  store ptr %call100, ptr %P, align 8, !tbaa !4
  %146 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %147 = load ptr, ptr %P, align 8, !tbaa !4
  %diag101 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %147, i32 0, i32 8
  %148 = load ptr, ptr %diag101, align 8, !tbaa !149
  %memory_location = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %148, i32 0, i32 13
  store i32 %146, ptr %memory_location, align 4, !tbaa !177
  %149 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %150 = load ptr, ptr %P, align 8, !tbaa !4
  %offd102 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %150, i32 0, i32 9
  %151 = load ptr, ptr %offd102, align 8, !tbaa !162
  %memory_location103 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %151, i32 0, i32 13
  store i32 %149, ptr %memory_location103, align 4, !tbaa !177
  %152 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %153 = load ptr, ptr %P, align 8, !tbaa !4
  %diag104 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %153, i32 0, i32 8
  %154 = load ptr, ptr %diag104, align 8, !tbaa !149
  %i105 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %154, i32 0, i32 0
  store ptr %152, ptr %i105, align 8, !tbaa !163
  %155 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %156 = load ptr, ptr %P, align 8, !tbaa !4
  %diag106 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %156, i32 0, i32 8
  %157 = load ptr, ptr %diag106, align 8, !tbaa !149
  %j107 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %157, i32 0, i32 1
  store ptr %155, ptr %j107, align 8, !tbaa !164
  %158 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %159 = load ptr, ptr %P, align 8, !tbaa !4
  %diag108 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %159, i32 0, i32 8
  %160 = load ptr, ptr %diag108, align 8, !tbaa !149
  %data109 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %160, i32 0, i32 10
  store ptr %158, ptr %data109, align 8, !tbaa !165
  %161 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %162 = load ptr, ptr %P, align 8, !tbaa !4
  %offd110 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %162, i32 0, i32 9
  %163 = load ptr, ptr %offd110, align 8, !tbaa !162
  %i111 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %163, i32 0, i32 0
  store ptr %161, ptr %i111, align 8, !tbaa !163
  %164 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %j112 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %164, i32 0, i32 1
  %165 = load ptr, ptr %j112, align 8, !tbaa !164
  %166 = load ptr, ptr %P, align 8, !tbaa !4
  %offd113 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %166, i32 0, i32 9
  %167 = load ptr, ptr %offd113, align 8, !tbaa !162
  %j114 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %167, i32 0, i32 1
  store ptr %165, ptr %j114, align 8, !tbaa !164
  %168 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %data115 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %168, i32 0, i32 10
  %169 = load ptr, ptr %data115, align 8, !tbaa !165
  %170 = load ptr, ptr %P, align 8, !tbaa !4
  %offd116 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %170, i32 0, i32 9
  %171 = load ptr, ptr %offd116, align 8, !tbaa !162
  %data117 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %171, i32 0, i32 10
  store ptr %169, ptr %data117, align 8, !tbaa !165
  %172 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %j118 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %172, i32 0, i32 1
  store ptr null, ptr %j118, align 8, !tbaa !164
  %173 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %data119 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %173, i32 0, i32 10
  store ptr null, ptr %data119, align 8, !tbaa !165
  %174 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp120 = icmp sgt i32 %174, 0
  br i1 %cmp120, label %if.then122, label %if.else132

if.then122:                                       ; preds = %if.end82
  %175 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %col_map_offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %175, i32 0, i32 12
  %176 = load ptr, ptr %col_map_offd, align 8, !tbaa !174
  %177 = load ptr, ptr %P, align 8, !tbaa !4
  %col_map_offd123 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %177, i32 0, i32 12
  store ptr %176, ptr %col_map_offd123, align 8, !tbaa !174
  %178 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %col_map_offd124 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %178, i32 0, i32 12
  %179 = load ptr, ptr %col_map_offd124, align 8, !tbaa !174
  %180 = load ptr, ptr %P, align 8, !tbaa !4
  %col_map_offd125 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %180, i32 0, i32 12
  store ptr %179, ptr %col_map_offd125, align 8, !tbaa !174
  %181 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %col_map_offd126 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %181, i32 0, i32 12
  store ptr null, ptr %col_map_offd126, align 8, !tbaa !174
  %182 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %col_map_offd127 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %182, i32 0, i32 12
  store ptr null, ptr %col_map_offd127, align 8, !tbaa !174
  %183 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %num_nonzeros128 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %183, i32 0, i32 19
  %184 = load i32, ptr %num_nonzeros128, align 4, !tbaa !175
  %185 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %global_num_cols129 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %185, i32 0, i32 2
  %186 = load i32, ptr %global_num_cols129, align 4, !tbaa !172
  %add130 = add nsw i32 %184, %186
  %187 = load ptr, ptr %P, align 8, !tbaa !4
  %num_nonzeros131 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %187, i32 0, i32 19
  store i32 %add130, ptr %num_nonzeros131, align 4, !tbaa !175
  br label %if.end134

if.else132:                                       ; preds = %if.end82
  %188 = load i32, ptr %nC_global, align 4, !tbaa !92
  %189 = load ptr, ptr %P, align 8, !tbaa !4
  %num_nonzeros133 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %189, i32 0, i32 19
  store i32 %188, ptr %num_nonzeros133, align 4, !tbaa !175
  br label %if.end134

if.end134:                                        ; preds = %if.else132, %if.then122
  %190 = load ptr, ptr %P, align 8, !tbaa !4
  %num_nonzeros135 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %190, i32 0, i32 19
  %191 = load i32, ptr %num_nonzeros135, align 4, !tbaa !175
  %conv136 = sitofp i32 %191 to double
  %192 = load ptr, ptr %P, align 8, !tbaa !4
  %d_num_nonzeros = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %192, i32 0, i32 20
  store double %conv136, ptr %d_num_nonzeros, align 8, !tbaa !176
  %193 = load ptr, ptr %P, align 8, !tbaa !4
  %call137 = call i32 @hypre_MatvecCommPkgCreate(ptr noundef %193)
  %194 = load ptr, ptr %P, align 8, !tbaa !4
  %195 = load ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  store ptr %194, ptr %195, align 8, !tbaa !4
  %196 = load ptr, ptr %A_FF, align 8, !tbaa !4
  %tobool = icmp ne ptr %196, null
  br i1 %tobool, label %if.then138, label %if.end140

if.then138:                                       ; preds = %if.end134
  %197 = load ptr, ptr %A_FF, align 8, !tbaa !4
  %call139 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %197)
  br label %if.end140

if.end140:                                        ; preds = %if.then138, %if.end134
  %198 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %tobool141 = icmp ne ptr %198, null
  br i1 %tobool141, label %if.then142, label %if.end144

if.then142:                                       ; preds = %if.end140
  %199 = load ptr, ptr %A_FC, align 8, !tbaa !4
  %call143 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %199)
  br label %if.end144

if.end144:                                        ; preds = %if.then142, %if.end140
  %200 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp145 = icmp sle i32 %200, 0
  br i1 %cmp145, label %if.then147, label %if.end150

if.then147:                                       ; preds = %if.end144
  %201 = load ptr, ptr %W_diag, align 8, !tbaa !4
  %call148 = call i32 @hypre_CSRMatrixDestroy(ptr noundef %201)
  %202 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %call149 = call i32 @hypre_CSRMatrixDestroy(ptr noundef %202)
  br label %if.end150

if.end150:                                        ; preds = %if.then147, %if.end144
  %203 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 4, ptr %memory_location_P) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nC_global) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %diag1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %diag2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nfpoints) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %P_diag_nnz) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %W_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %W_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_FC) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_FF) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %A_nr_of_rows) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  ret i32 %203
}

declare i32 @hypre_ParCSRMatrixGenerateFFFCHost(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

declare void @hypre_CSRMatrixExtractDiagonalHost(ptr noundef, ptr noundef, i32 noundef) #2

declare void @hypre_CSRMatrixComputeRowSumHost(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, double noundef, ptr noundef) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #5

declare ptr @hypre_SeqVectorCreate(i32 noundef) #2

declare i32 @hypre_SeqVectorInitialize_v2(ptr noundef, i32 noundef) #2

declare i32 @hypre_CSRMatrixDiagScale(ptr noundef, ptr noundef, ptr noundef) #2

declare ptr @hypre_CSRMatrixCreate(i32 noundef, i32 noundef, i32 noundef) #2

declare i32 @hypre_CSRMatrixInitialize_v2(ptr noundef, i32 noundef, i32 noundef) #2

declare i32 @hypre_MPI_Bcast(ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef) #2

declare i32 @hypre_CSRMatrixDestroy(ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBuildP(ptr noundef %A, ptr noundef %CF_marker, ptr noundef %num_cpts_global, i32 noundef %method, i32 noundef %debug_flag, ptr noundef %P_ptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %CF_marker.addr = alloca ptr, align 8
  %num_cpts_global.addr = alloca ptr, align 8
  %method.addr = alloca i32, align 4
  %debug_flag.addr = alloca i32, align 4
  %P_ptr.addr = alloca ptr, align 8
  %comm = alloca ptr, align 8
  %comm_pkg = alloca ptr, align 8
  %comm_handle = alloca ptr, align 8
  %memory_location_P = alloca i32, align 4
  %A_diag = alloca ptr, align 8
  %A_diag_data = alloca ptr, align 8
  %A_diag_i = alloca ptr, align 8
  %A_diag_j = alloca ptr, align 8
  %A_offd = alloca ptr, align 8
  %A_offd_data = alloca ptr, align 8
  %A_offd_i = alloca ptr, align 8
  %A_offd_j = alloca ptr, align 8
  %num_cols_A_offd = alloca i32, align 4
  %a_diag = alloca ptr, align 8
  %P = alloca ptr, align 8
  %col_map_offd_P = alloca ptr, align 8
  %tmp_map_offd = alloca ptr, align 8
  %CF_marker_offd = alloca ptr, align 8
  %P_diag = alloca ptr, align 8
  %P_offd = alloca ptr, align 8
  %P_diag_data = alloca ptr, align 8
  %P_diag_i = alloca ptr, align 8
  %P_diag_j = alloca ptr, align 8
  %P_offd_data = alloca ptr, align 8
  %P_offd_i = alloca ptr, align 8
  %P_offd_j = alloca ptr, align 8
  %P_diag_size = alloca i32, align 4
  %P_offd_size = alloca i32, align 4
  %P_marker = alloca ptr, align 8
  %P_marker_offd = alloca ptr, align 8
  %jj_counter = alloca i32, align 4
  %jj_counter_offd = alloca i32, align 4
  %jj_count = alloca ptr, align 8
  %jj_count_offd = alloca ptr, align 8
  %start_indexing = alloca i32, align 4
  %n_fine = alloca i32, align 4
  %fine_to_coarse = alloca ptr, align 8
  %coarse_counter = alloca ptr, align 8
  %coarse_shift = alloca i32, align 4
  %total_global_cpts = alloca i32, align 4
  %num_cols_P_offd = alloca i32, align 4
  %i6 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j7 = alloca i32, align 4
  %jl = alloca i32, align 4
  %jj = alloca i32, align 4
  %start = alloca i32, align 4
  %one = alloca double, align 8
  %my_id = alloca i32, align 4
  %num_procs = alloca i32, align 4
  %num_threads = alloca i32, align 4
  %num_sends = alloca i32, align 4
  %index = alloca i32, align 4
  %ns = alloca i32, align 4
  %ne = alloca i32, align 4
  %size = alloca i32, align 4
  %rest = alloca i32, align 4
  %int_buf_data = alloca ptr, align 8
  %wall_time = alloca double, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store ptr %num_cpts_global, ptr %num_cpts_global.addr, align 8, !tbaa !4
  store i32 %method, ptr %method.addr, align 4, !tbaa !92
  store i32 %debug_flag, ptr %debug_flag.addr, align 4, !tbaa !92
  store ptr %P_ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %comm1, align 8, !tbaa !160
  store ptr %1, ptr %comm, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm_pkg) #6
  %2 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm_pkg2 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %2, i32 0, i32 16
  %3 = load ptr, ptr %comm_pkg2, align 8, !tbaa !187
  store ptr %3, ptr %comm_pkg, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm_handle) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %memory_location_P) #6
  %4 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call = call i32 @hypre_ParCSRMatrixMemoryLocation(ptr noundef %4)
  store i32 %call, ptr %memory_location_P, align 4, !tbaa !155
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag) #6
  %5 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %5, i32 0, i32 8
  %6 = load ptr, ptr %diag, align 8, !tbaa !149
  store ptr %6, ptr %A_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_data) #6
  %7 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %7, i32 0, i32 10
  %8 = load ptr, ptr %data, align 8, !tbaa !165
  store ptr %8, ptr %A_diag_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_i) #6
  %9 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %i = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %9, i32 0, i32 0
  %10 = load ptr, ptr %i, align 8, !tbaa !163
  store ptr %10, ptr %A_diag_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_j) #6
  %11 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %j = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %11, i32 0, i32 1
  %12 = load ptr, ptr %j, align 8, !tbaa !164
  store ptr %12, ptr %A_diag_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd) #6
  %13 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %13, i32 0, i32 9
  %14 = load ptr, ptr %offd, align 8, !tbaa !162
  store ptr %14, ptr %A_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_data) #6
  %15 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %data3 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %15, i32 0, i32 10
  %16 = load ptr, ptr %data3, align 8, !tbaa !165
  store ptr %16, ptr %A_offd_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_i) #6
  %17 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %i4 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %17, i32 0, i32 0
  %18 = load ptr, ptr %i4, align 8, !tbaa !163
  store ptr %18, ptr %A_offd_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_j) #6
  %19 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %j5 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %19, i32 0, i32 1
  %20 = load ptr, ptr %j5, align 8, !tbaa !164
  store ptr %20, ptr %A_offd_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_cols_A_offd) #6
  %21 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %num_cols = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %21, i32 0, i32 4
  %22 = load i32, ptr %num_cols, align 4, !tbaa !167
  store i32 %22, ptr %num_cols_A_offd, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %a_diag) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %col_map_offd_P) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_map_offd) #6
  store ptr null, ptr %tmp_map_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %CF_marker_offd) #6
  store ptr null, ptr %CF_marker_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_j) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd_i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd_j) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %P_diag_size) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %P_offd_size) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_marker) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_marker_offd) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj_counter_offd) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %jj_count) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %jj_count_offd) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %start_indexing) #6
  store i32 0, ptr %start_indexing, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %n_fine) #6
  %23 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %23, i32 0, i32 3
  %24 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %24, ptr %n_fine, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %fine_to_coarse) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %coarse_counter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %coarse_shift) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %total_global_cpts) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_cols_P_offd) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i6) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i1) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j7) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jl) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %start) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %one) #6
  store double 1.000000e+00, ptr %one, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_threads) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_sends) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %index) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ns) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ne) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %size) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %rest) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %int_buf_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %wall_time) #6
  %25 = load ptr, ptr %comm, align 8, !tbaa !4
  %call8 = call i32 @hypre_MPI_Comm_size(ptr noundef %25, ptr noundef %num_procs)
  %26 = load ptr, ptr %comm, align 8, !tbaa !4
  %call9 = call i32 @hypre_MPI_Comm_rank(ptr noundef %26, ptr noundef %my_id)
  store i32 1, ptr %num_threads, align 4, !tbaa !92
  %27 = load i32, ptr %my_id, align 4, !tbaa !92
  %28 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub = sub nsw i32 %28, 1
  %cmp = icmp eq i32 %27, %sub
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %29 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds i32, ptr %29, i64 1
  %30 = load i32, ptr %arrayidx, align 4, !tbaa !92
  store i32 %30, ptr %total_global_cpts, align 4, !tbaa !92
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %31 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub10 = sub nsw i32 %31, 1
  %32 = load ptr, ptr %comm, align 8, !tbaa !4
  %call11 = call i32 @hypre_MPI_Bcast(ptr noundef %total_global_cpts, i32 noundef 1, ptr noundef @ompi_mpi_int, i32 noundef %sub10, ptr noundef %32)
  %33 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp12 = icmp slt i32 %33, 0
  br i1 %cmp12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.end
  %34 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %sub14 = sub nsw i32 0, %34
  store i32 %sub14, ptr %debug_flag.addr, align 4, !tbaa !92
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.end
  %35 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp16 = icmp eq i32 %35, 4
  br i1 %cmp16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.end15
  %call18 = call double @time_getWallclockSeconds()
  store double %call18, ptr %wall_time, align 8, !tbaa !161
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %if.end15
  %36 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %conv = sext i32 %36 to i64
  %call20 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call20, ptr %CF_marker_offd, align 8, !tbaa !4
  %37 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %tobool = icmp ne ptr %37, null
  br i1 %tobool, label %if.end24, label %if.then21

if.then21:                                        ; preds = %if.end19
  %38 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call22 = call i32 @hypre_MatvecCommPkgCreate(ptr noundef %38)
  %39 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm_pkg23 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %39, i32 0, i32 16
  %40 = load ptr, ptr %comm_pkg23, align 8, !tbaa !187
  store ptr %40, ptr %comm_pkg, align 8, !tbaa !4
  br label %if.end24

if.end24:                                         ; preds = %if.then21, %if.end19
  %41 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %num_sends25 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %41, i32 0, i32 2
  %42 = load i32, ptr %num_sends25, align 4, !tbaa !188
  store i32 %42, ptr %num_sends, align 4, !tbaa !92
  %43 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %43, i32 0, i32 4
  %44 = load ptr, ptr %send_map_starts, align 8, !tbaa !190
  %45 = load i32, ptr %num_sends, align 4, !tbaa !92
  %idxprom = sext i32 %45 to i64
  %arrayidx26 = getelementptr inbounds i32, ptr %44, i64 %idxprom
  %46 = load i32, ptr %arrayidx26, align 4, !tbaa !92
  %conv27 = sext i32 %46 to i64
  %call28 = call ptr @hypre_CAlloc(i64 noundef %conv27, i64 noundef 4, i32 noundef 0)
  store ptr %call28, ptr %int_buf_data, align 8, !tbaa !4
  store i32 0, ptr %index, align 4, !tbaa !92
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc48, %if.end24
  %47 = load i32, ptr %i6, align 4, !tbaa !92
  %48 = load i32, ptr %num_sends, align 4, !tbaa !92
  %cmp29 = icmp slt i32 %47, %48
  br i1 %cmp29, label %for.body, label %for.end50

for.body:                                         ; preds = %for.cond
  %49 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts31 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %49, i32 0, i32 4
  %50 = load ptr, ptr %send_map_starts31, align 8, !tbaa !190
  %51 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom32 = sext i32 %51 to i64
  %arrayidx33 = getelementptr inbounds i32, ptr %50, i64 %idxprom32
  %52 = load i32, ptr %arrayidx33, align 4, !tbaa !92
  store i32 %52, ptr %start, align 4, !tbaa !92
  %53 = load i32, ptr %start, align 4, !tbaa !92
  store i32 %53, ptr %j7, align 4, !tbaa !92
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc, %for.body
  %54 = load i32, ptr %j7, align 4, !tbaa !92
  %55 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts35 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %55, i32 0, i32 4
  %56 = load ptr, ptr %send_map_starts35, align 8, !tbaa !190
  %57 = load i32, ptr %i6, align 4, !tbaa !92
  %add = add nsw i32 %57, 1
  %idxprom36 = sext i32 %add to i64
  %arrayidx37 = getelementptr inbounds i32, ptr %56, i64 %idxprom36
  %58 = load i32, ptr %arrayidx37, align 4, !tbaa !92
  %cmp38 = icmp slt i32 %54, %58
  br i1 %cmp38, label %for.body40, label %for.end

for.body40:                                       ; preds = %for.cond34
  %59 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %60 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_elmts = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %60, i32 0, i32 5
  %61 = load ptr, ptr %send_map_elmts, align 8, !tbaa !191
  %62 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom41 = sext i32 %62 to i64
  %arrayidx42 = getelementptr inbounds i32, ptr %61, i64 %idxprom41
  %63 = load i32, ptr %arrayidx42, align 4, !tbaa !92
  %idxprom43 = sext i32 %63 to i64
  %arrayidx44 = getelementptr inbounds i32, ptr %59, i64 %idxprom43
  %64 = load i32, ptr %arrayidx44, align 4, !tbaa !92
  %65 = load ptr, ptr %int_buf_data, align 8, !tbaa !4
  %66 = load i32, ptr %index, align 4, !tbaa !92
  %inc = add nsw i32 %66, 1
  store i32 %inc, ptr %index, align 4, !tbaa !92
  %idxprom45 = sext i32 %66 to i64
  %arrayidx46 = getelementptr inbounds i32, ptr %65, i64 %idxprom45
  store i32 %64, ptr %arrayidx46, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body40
  %67 = load i32, ptr %j7, align 4, !tbaa !92
  %inc47 = add nsw i32 %67, 1
  store i32 %inc47, ptr %j7, align 4, !tbaa !92
  br label %for.cond34, !llvm.loop !192

for.end:                                          ; preds = %for.cond34
  br label %for.inc48

for.inc48:                                        ; preds = %for.end
  %68 = load i32, ptr %i6, align 4, !tbaa !92
  %inc49 = add nsw i32 %68, 1
  store i32 %inc49, ptr %i6, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !193

for.end50:                                        ; preds = %for.cond
  %69 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %70 = load ptr, ptr %int_buf_data, align 8, !tbaa !4
  %71 = load ptr, ptr %CF_marker_offd, align 8, !tbaa !4
  %call51 = call ptr @hypre_ParCSRCommHandleCreate(i32 noundef 11, ptr noundef %69, ptr noundef %70, ptr noundef %71)
  store ptr %call51, ptr %comm_handle, align 8, !tbaa !4
  %72 = load ptr, ptr %comm_handle, align 8, !tbaa !4
  %call52 = call i32 @hypre_ParCSRCommHandleDestroy(ptr noundef %72)
  %73 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp53 = icmp eq i32 %73, 4
  br i1 %cmp53, label %if.then55, label %if.end60

if.then55:                                        ; preds = %for.end50
  %call56 = call double @time_getWallclockSeconds()
  %74 = load double, ptr %wall_time, align 8, !tbaa !161
  %sub57 = fsub double %call56, %74
  store double %sub57, ptr %wall_time, align 8, !tbaa !161
  %75 = load i32, ptr %my_id, align 4, !tbaa !92
  %76 = load double, ptr %wall_time, align 8, !tbaa !161
  %call58 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.4, i32 noundef %75, double noundef %76)
  %call59 = call i32 @fflush(ptr noundef null)
  br label %if.end60

if.end60:                                         ; preds = %if.then55, %for.end50
  %77 = load i32, ptr %num_threads, align 4, !tbaa !92
  %conv61 = sext i32 %77 to i64
  %call62 = call ptr @hypre_CAlloc(i64 noundef %conv61, i64 noundef 4, i32 noundef 0)
  store ptr %call62, ptr %coarse_counter, align 8, !tbaa !4
  %78 = load i32, ptr %num_threads, align 4, !tbaa !92
  %conv63 = sext i32 %78 to i64
  %call64 = call ptr @hypre_CAlloc(i64 noundef %conv63, i64 noundef 4, i32 noundef 0)
  store ptr %call64, ptr %jj_count, align 8, !tbaa !4
  %79 = load i32, ptr %num_threads, align 4, !tbaa !92
  %conv65 = sext i32 %79 to i64
  %call66 = call ptr @hypre_CAlloc(i64 noundef %conv65, i64 noundef 4, i32 noundef 0)
  store ptr %call66, ptr %jj_count_offd, align 8, !tbaa !4
  %80 = load i32, ptr %n_fine, align 4, !tbaa !92
  %conv67 = sext i32 %80 to i64
  %call68 = call ptr @hypre_CAlloc(i64 noundef %conv67, i64 noundef 4, i32 noundef 0)
  store ptr %call68, ptr %fine_to_coarse, align 8, !tbaa !4
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc75, %if.end60
  %81 = load i32, ptr %i6, align 4, !tbaa !92
  %82 = load i32, ptr %n_fine, align 4, !tbaa !92
  %cmp70 = icmp slt i32 %81, %82
  br i1 %cmp70, label %for.body72, label %for.end77

for.body72:                                       ; preds = %for.cond69
  %83 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %84 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom73 = sext i32 %84 to i64
  %arrayidx74 = getelementptr inbounds i32, ptr %83, i64 %idxprom73
  store i32 -1, ptr %arrayidx74, align 4, !tbaa !92
  br label %for.inc75

for.inc75:                                        ; preds = %for.body72
  %85 = load i32, ptr %i6, align 4, !tbaa !92
  %inc76 = add nsw i32 %85, 1
  store i32 %inc76, ptr %i6, align 4, !tbaa !92
  br label %for.cond69, !llvm.loop !194

for.end77:                                        ; preds = %for.cond69
  %86 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %86, ptr %jj_counter, align 4, !tbaa !92
  %87 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %87, ptr %jj_counter_offd, align 4, !tbaa !92
  store i32 0, ptr %j7, align 4, !tbaa !92
  br label %for.cond78

for.cond78:                                       ; preds = %for.inc177, %for.end77
  %88 = load i32, ptr %j7, align 4, !tbaa !92
  %89 = load i32, ptr %num_threads, align 4, !tbaa !92
  %cmp79 = icmp slt i32 %88, %89
  br i1 %cmp79, label %for.body81, label %for.end179

for.body81:                                       ; preds = %for.cond78
  %90 = load i32, ptr %n_fine, align 4, !tbaa !92
  %91 = load i32, ptr %num_threads, align 4, !tbaa !92
  %div = sdiv i32 %90, %91
  store i32 %div, ptr %size, align 4, !tbaa !92
  %92 = load i32, ptr %n_fine, align 4, !tbaa !92
  %93 = load i32, ptr %size, align 4, !tbaa !92
  %94 = load i32, ptr %num_threads, align 4, !tbaa !92
  %mul = mul nsw i32 %93, %94
  %sub82 = sub nsw i32 %92, %mul
  store i32 %sub82, ptr %rest, align 4, !tbaa !92
  %95 = load i32, ptr %j7, align 4, !tbaa !92
  %96 = load i32, ptr %rest, align 4, !tbaa !92
  %cmp83 = icmp slt i32 %95, %96
  br i1 %cmp83, label %if.then85, label %if.else

if.then85:                                        ; preds = %for.body81
  %97 = load i32, ptr %j7, align 4, !tbaa !92
  %98 = load i32, ptr %size, align 4, !tbaa !92
  %mul86 = mul nsw i32 %97, %98
  %99 = load i32, ptr %j7, align 4, !tbaa !92
  %add87 = add nsw i32 %mul86, %99
  store i32 %add87, ptr %ns, align 4, !tbaa !92
  %100 = load i32, ptr %j7, align 4, !tbaa !92
  %add88 = add nsw i32 %100, 1
  %101 = load i32, ptr %size, align 4, !tbaa !92
  %mul89 = mul nsw i32 %add88, %101
  %102 = load i32, ptr %j7, align 4, !tbaa !92
  %add90 = add nsw i32 %mul89, %102
  %add91 = add nsw i32 %add90, 1
  store i32 %add91, ptr %ne, align 4, !tbaa !92
  br label %if.end97

if.else:                                          ; preds = %for.body81
  %103 = load i32, ptr %j7, align 4, !tbaa !92
  %104 = load i32, ptr %size, align 4, !tbaa !92
  %mul92 = mul nsw i32 %103, %104
  %105 = load i32, ptr %rest, align 4, !tbaa !92
  %add93 = add nsw i32 %mul92, %105
  store i32 %add93, ptr %ns, align 4, !tbaa !92
  %106 = load i32, ptr %j7, align 4, !tbaa !92
  %add94 = add nsw i32 %106, 1
  %107 = load i32, ptr %size, align 4, !tbaa !92
  %mul95 = mul nsw i32 %add94, %107
  %108 = load i32, ptr %rest, align 4, !tbaa !92
  %add96 = add nsw i32 %mul95, %108
  store i32 %add96, ptr %ne, align 4, !tbaa !92
  br label %if.end97

if.end97:                                         ; preds = %if.else, %if.then85
  %109 = load i32, ptr %ns, align 4, !tbaa !92
  store i32 %109, ptr %i6, align 4, !tbaa !92
  br label %for.cond98

for.cond98:                                       ; preds = %for.inc174, %if.end97
  %110 = load i32, ptr %i6, align 4, !tbaa !92
  %111 = load i32, ptr %ne, align 4, !tbaa !92
  %cmp99 = icmp slt i32 %110, %111
  br i1 %cmp99, label %for.body101, label %for.end176

for.body101:                                      ; preds = %for.cond98
  %112 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %113 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom102 = sext i32 %113 to i64
  %arrayidx103 = getelementptr inbounds i32, ptr %112, i64 %idxprom102
  %114 = load i32, ptr %arrayidx103, align 4, !tbaa !92
  %cmp104 = icmp sge i32 %114, 0
  br i1 %cmp104, label %if.then106, label %if.else117

if.then106:                                       ; preds = %for.body101
  %115 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %116 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom107 = sext i32 %116 to i64
  %arrayidx108 = getelementptr inbounds i32, ptr %115, i64 %idxprom107
  %117 = load i32, ptr %arrayidx108, align 4, !tbaa !92
  %inc109 = add nsw i32 %117, 1
  store i32 %inc109, ptr %arrayidx108, align 4, !tbaa !92
  %118 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %119 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom110 = sext i32 %119 to i64
  %arrayidx111 = getelementptr inbounds i32, ptr %118, i64 %idxprom110
  %120 = load i32, ptr %arrayidx111, align 4, !tbaa !92
  %121 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %122 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom112 = sext i32 %122 to i64
  %arrayidx113 = getelementptr inbounds i32, ptr %121, i64 %idxprom112
  store i32 %120, ptr %arrayidx113, align 4, !tbaa !92
  %123 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %124 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom114 = sext i32 %124 to i64
  %arrayidx115 = getelementptr inbounds i32, ptr %123, i64 %idxprom114
  %125 = load i32, ptr %arrayidx115, align 4, !tbaa !92
  %inc116 = add nsw i32 %125, 1
  store i32 %inc116, ptr %arrayidx115, align 4, !tbaa !92
  br label %if.end173

if.else117:                                       ; preds = %for.body101
  %126 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %127 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom118 = sext i32 %127 to i64
  %arrayidx119 = getelementptr inbounds i32, ptr %126, i64 %idxprom118
  %128 = load i32, ptr %arrayidx119, align 4, !tbaa !92
  store i32 %128, ptr %jj, align 4, !tbaa !92
  br label %for.cond120

for.cond120:                                      ; preds = %for.inc140, %if.else117
  %129 = load i32, ptr %jj, align 4, !tbaa !92
  %130 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %131 = load i32, ptr %i6, align 4, !tbaa !92
  %add121 = add nsw i32 %131, 1
  %idxprom122 = sext i32 %add121 to i64
  %arrayidx123 = getelementptr inbounds i32, ptr %130, i64 %idxprom122
  %132 = load i32, ptr %arrayidx123, align 4, !tbaa !92
  %cmp124 = icmp slt i32 %129, %132
  br i1 %cmp124, label %for.body126, label %for.end142

for.body126:                                      ; preds = %for.cond120
  %133 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %134 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom127 = sext i32 %134 to i64
  %arrayidx128 = getelementptr inbounds i32, ptr %133, i64 %idxprom127
  %135 = load i32, ptr %arrayidx128, align 4, !tbaa !92
  store i32 %135, ptr %i1, align 4, !tbaa !92
  %136 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %137 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom129 = sext i32 %137 to i64
  %arrayidx130 = getelementptr inbounds i32, ptr %136, i64 %idxprom129
  %138 = load i32, ptr %arrayidx130, align 4, !tbaa !92
  %cmp131 = icmp sge i32 %138, 0
  br i1 %cmp131, label %land.lhs.true, label %if.end139

land.lhs.true:                                    ; preds = %for.body126
  %139 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp133 = icmp sgt i32 %139, 0
  br i1 %cmp133, label %if.then135, label %if.end139

if.then135:                                       ; preds = %land.lhs.true
  %140 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %141 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom136 = sext i32 %141 to i64
  %arrayidx137 = getelementptr inbounds i32, ptr %140, i64 %idxprom136
  %142 = load i32, ptr %arrayidx137, align 4, !tbaa !92
  %inc138 = add nsw i32 %142, 1
  store i32 %inc138, ptr %arrayidx137, align 4, !tbaa !92
  br label %if.end139

if.end139:                                        ; preds = %if.then135, %land.lhs.true, %for.body126
  br label %for.inc140

for.inc140:                                       ; preds = %if.end139
  %143 = load i32, ptr %jj, align 4, !tbaa !92
  %inc141 = add nsw i32 %143, 1
  store i32 %inc141, ptr %jj, align 4, !tbaa !92
  br label %for.cond120, !llvm.loop !195

for.end142:                                       ; preds = %for.cond120
  %144 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp143 = icmp sgt i32 %144, 1
  br i1 %cmp143, label %if.then145, label %if.end172

if.then145:                                       ; preds = %for.end142
  %145 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %146 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom146 = sext i32 %146 to i64
  %arrayidx147 = getelementptr inbounds i32, ptr %145, i64 %idxprom146
  %147 = load i32, ptr %arrayidx147, align 4, !tbaa !92
  store i32 %147, ptr %jj, align 4, !tbaa !92
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc169, %if.then145
  %148 = load i32, ptr %jj, align 4, !tbaa !92
  %149 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %150 = load i32, ptr %i6, align 4, !tbaa !92
  %add149 = add nsw i32 %150, 1
  %idxprom150 = sext i32 %add149 to i64
  %arrayidx151 = getelementptr inbounds i32, ptr %149, i64 %idxprom150
  %151 = load i32, ptr %arrayidx151, align 4, !tbaa !92
  %cmp152 = icmp slt i32 %148, %151
  br i1 %cmp152, label %for.body154, label %for.end171

for.body154:                                      ; preds = %for.cond148
  %152 = load ptr, ptr %A_offd_j, align 8, !tbaa !4
  %153 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom155 = sext i32 %153 to i64
  %arrayidx156 = getelementptr inbounds i32, ptr %152, i64 %idxprom155
  %154 = load i32, ptr %arrayidx156, align 4, !tbaa !92
  store i32 %154, ptr %i1, align 4, !tbaa !92
  %155 = load ptr, ptr %CF_marker_offd, align 8, !tbaa !4
  %156 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom157 = sext i32 %156 to i64
  %arrayidx158 = getelementptr inbounds i32, ptr %155, i64 %idxprom157
  %157 = load i32, ptr %arrayidx158, align 4, !tbaa !92
  %cmp159 = icmp sge i32 %157, 0
  br i1 %cmp159, label %land.lhs.true161, label %if.end168

land.lhs.true161:                                 ; preds = %for.body154
  %158 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp162 = icmp sgt i32 %158, 0
  br i1 %cmp162, label %if.then164, label %if.end168

if.then164:                                       ; preds = %land.lhs.true161
  %159 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %160 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom165 = sext i32 %160 to i64
  %arrayidx166 = getelementptr inbounds i32, ptr %159, i64 %idxprom165
  %161 = load i32, ptr %arrayidx166, align 4, !tbaa !92
  %inc167 = add nsw i32 %161, 1
  store i32 %inc167, ptr %arrayidx166, align 4, !tbaa !92
  br label %if.end168

if.end168:                                        ; preds = %if.then164, %land.lhs.true161, %for.body154
  br label %for.inc169

for.inc169:                                       ; preds = %if.end168
  %162 = load i32, ptr %jj, align 4, !tbaa !92
  %inc170 = add nsw i32 %162, 1
  store i32 %inc170, ptr %jj, align 4, !tbaa !92
  br label %for.cond148, !llvm.loop !196

for.end171:                                       ; preds = %for.cond148
  br label %if.end172

if.end172:                                        ; preds = %for.end171, %for.end142
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.then106
  br label %for.inc174

for.inc174:                                       ; preds = %if.end173
  %163 = load i32, ptr %i6, align 4, !tbaa !92
  %inc175 = add nsw i32 %163, 1
  store i32 %inc175, ptr %i6, align 4, !tbaa !92
  br label %for.cond98, !llvm.loop !197

for.end176:                                       ; preds = %for.cond98
  br label %for.inc177

for.inc177:                                       ; preds = %for.end176
  %164 = load i32, ptr %j7, align 4, !tbaa !92
  %inc178 = add nsw i32 %164, 1
  store i32 %inc178, ptr %j7, align 4, !tbaa !92
  br label %for.cond78, !llvm.loop !198

for.end179:                                       ; preds = %for.cond78
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond180

for.cond180:                                      ; preds = %for.inc203, %for.end179
  %165 = load i32, ptr %i6, align 4, !tbaa !92
  %166 = load i32, ptr %num_threads, align 4, !tbaa !92
  %sub181 = sub nsw i32 %166, 1
  %cmp182 = icmp slt i32 %165, %sub181
  br i1 %cmp182, label %for.body184, label %for.end205

for.body184:                                      ; preds = %for.cond180
  %167 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %168 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom185 = sext i32 %168 to i64
  %arrayidx186 = getelementptr inbounds i32, ptr %167, i64 %idxprom185
  %169 = load i32, ptr %arrayidx186, align 4, !tbaa !92
  %170 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %171 = load i32, ptr %i6, align 4, !tbaa !92
  %add187 = add nsw i32 %171, 1
  %idxprom188 = sext i32 %add187 to i64
  %arrayidx189 = getelementptr inbounds i32, ptr %170, i64 %idxprom188
  %172 = load i32, ptr %arrayidx189, align 4, !tbaa !92
  %add190 = add nsw i32 %172, %169
  store i32 %add190, ptr %arrayidx189, align 4, !tbaa !92
  %173 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %174 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom191 = sext i32 %174 to i64
  %arrayidx192 = getelementptr inbounds i32, ptr %173, i64 %idxprom191
  %175 = load i32, ptr %arrayidx192, align 4, !tbaa !92
  %176 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %177 = load i32, ptr %i6, align 4, !tbaa !92
  %add193 = add nsw i32 %177, 1
  %idxprom194 = sext i32 %add193 to i64
  %arrayidx195 = getelementptr inbounds i32, ptr %176, i64 %idxprom194
  %178 = load i32, ptr %arrayidx195, align 4, !tbaa !92
  %add196 = add nsw i32 %178, %175
  store i32 %add196, ptr %arrayidx195, align 4, !tbaa !92
  %179 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %180 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom197 = sext i32 %180 to i64
  %arrayidx198 = getelementptr inbounds i32, ptr %179, i64 %idxprom197
  %181 = load i32, ptr %arrayidx198, align 4, !tbaa !92
  %182 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %183 = load i32, ptr %i6, align 4, !tbaa !92
  %add199 = add nsw i32 %183, 1
  %idxprom200 = sext i32 %add199 to i64
  %arrayidx201 = getelementptr inbounds i32, ptr %182, i64 %idxprom200
  %184 = load i32, ptr %arrayidx201, align 4, !tbaa !92
  %add202 = add nsw i32 %184, %181
  store i32 %add202, ptr %arrayidx201, align 4, !tbaa !92
  br label %for.inc203

for.inc203:                                       ; preds = %for.body184
  %185 = load i32, ptr %i6, align 4, !tbaa !92
  %inc204 = add nsw i32 %185, 1
  store i32 %inc204, ptr %i6, align 4, !tbaa !92
  br label %for.cond180, !llvm.loop !199

for.end205:                                       ; preds = %for.cond180
  %186 = load i32, ptr %num_threads, align 4, !tbaa !92
  %sub206 = sub nsw i32 %186, 1
  store i32 %sub206, ptr %i6, align 4, !tbaa !92
  %187 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %188 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom207 = sext i32 %188 to i64
  %arrayidx208 = getelementptr inbounds i32, ptr %187, i64 %idxprom207
  %189 = load i32, ptr %arrayidx208, align 4, !tbaa !92
  store i32 %189, ptr %jj_counter, align 4, !tbaa !92
  %190 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %191 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom209 = sext i32 %191 to i64
  %arrayidx210 = getelementptr inbounds i32, ptr %190, i64 %idxprom209
  %192 = load i32, ptr %arrayidx210, align 4, !tbaa !92
  store i32 %192, ptr %jj_counter_offd, align 4, !tbaa !92
  %193 = load i32, ptr %jj_counter, align 4, !tbaa !92
  store i32 %193, ptr %P_diag_size, align 4, !tbaa !92
  %194 = load i32, ptr %n_fine, align 4, !tbaa !92
  %add211 = add nsw i32 %194, 1
  %conv212 = sext i32 %add211 to i64
  %195 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call213 = call ptr @hypre_CAlloc(i64 noundef %conv212, i64 noundef 4, i32 noundef %195)
  store ptr %call213, ptr %P_diag_i, align 8, !tbaa !4
  %196 = load i32, ptr %P_diag_size, align 4, !tbaa !92
  %conv214 = sext i32 %196 to i64
  %197 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call215 = call ptr @hypre_CAlloc(i64 noundef %conv214, i64 noundef 4, i32 noundef %197)
  store ptr %call215, ptr %P_diag_j, align 8, !tbaa !4
  %198 = load i32, ptr %P_diag_size, align 4, !tbaa !92
  %conv216 = sext i32 %198 to i64
  %199 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call217 = call ptr @hypre_CAlloc(i64 noundef %conv216, i64 noundef 8, i32 noundef %199)
  store ptr %call217, ptr %P_diag_data, align 8, !tbaa !4
  %200 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %201 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %202 = load i32, ptr %n_fine, align 4, !tbaa !92
  %idxprom218 = sext i32 %202 to i64
  %arrayidx219 = getelementptr inbounds i32, ptr %201, i64 %idxprom218
  store i32 %200, ptr %arrayidx219, align 4, !tbaa !92
  %203 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  store i32 %203, ptr %P_offd_size, align 4, !tbaa !92
  %204 = load i32, ptr %n_fine, align 4, !tbaa !92
  %add220 = add nsw i32 %204, 1
  %conv221 = sext i32 %add220 to i64
  %205 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call222 = call ptr @hypre_CAlloc(i64 noundef %conv221, i64 noundef 4, i32 noundef %205)
  store ptr %call222, ptr %P_offd_i, align 8, !tbaa !4
  %206 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %conv223 = sext i32 %206 to i64
  %207 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call224 = call ptr @hypre_CAlloc(i64 noundef %conv223, i64 noundef 4, i32 noundef %207)
  store ptr %call224, ptr %P_offd_j, align 8, !tbaa !4
  %208 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %conv225 = sext i32 %208 to i64
  %209 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call226 = call ptr @hypre_CAlloc(i64 noundef %conv225, i64 noundef 8, i32 noundef %209)
  store ptr %call226, ptr %P_offd_data, align 8, !tbaa !4
  %210 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %210, ptr %jj_counter, align 4, !tbaa !92
  %211 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %211, ptr %jj_counter_offd, align 4, !tbaa !92
  %212 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp227 = icmp eq i32 %212, 4
  br i1 %cmp227, label %if.then229, label %if.end234

if.then229:                                       ; preds = %for.end205
  %call230 = call double @time_getWallclockSeconds()
  %213 = load double, ptr %wall_time, align 8, !tbaa !161
  %sub231 = fsub double %call230, %213
  store double %sub231, ptr %wall_time, align 8, !tbaa !161
  %214 = load i32, ptr %my_id, align 4, !tbaa !92
  %215 = load double, ptr %wall_time, align 8, !tbaa !161
  %call232 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.5, i32 noundef %214, double noundef %215)
  %call233 = call i32 @fflush(ptr noundef null)
  br label %if.end234

if.end234:                                        ; preds = %if.then229, %for.end205
  %216 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp235 = icmp eq i32 %216, 4
  br i1 %cmp235, label %if.then237, label %if.end239

if.then237:                                       ; preds = %if.end234
  %call238 = call double @time_getWallclockSeconds()
  store double %call238, ptr %wall_time, align 8, !tbaa !161
  br label %if.end239

if.end239:                                        ; preds = %if.then237, %if.end234
  store i32 0, ptr %j7, align 4, !tbaa !92
  br label %for.cond240

for.cond240:                                      ; preds = %for.inc280, %if.end239
  %217 = load i32, ptr %j7, align 4, !tbaa !92
  %218 = load i32, ptr %num_threads, align 4, !tbaa !92
  %cmp241 = icmp slt i32 %217, %218
  br i1 %cmp241, label %for.body243, label %for.end282

for.body243:                                      ; preds = %for.cond240
  store i32 0, ptr %coarse_shift, align 4, !tbaa !92
  %219 = load i32, ptr %j7, align 4, !tbaa !92
  %cmp244 = icmp sgt i32 %219, 0
  br i1 %cmp244, label %if.then246, label %if.end250

if.then246:                                       ; preds = %for.body243
  %220 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %221 = load i32, ptr %j7, align 4, !tbaa !92
  %sub247 = sub nsw i32 %221, 1
  %idxprom248 = sext i32 %sub247 to i64
  %arrayidx249 = getelementptr inbounds i32, ptr %220, i64 %idxprom248
  %222 = load i32, ptr %arrayidx249, align 4, !tbaa !92
  store i32 %222, ptr %coarse_shift, align 4, !tbaa !92
  br label %if.end250

if.end250:                                        ; preds = %if.then246, %for.body243
  %223 = load i32, ptr %n_fine, align 4, !tbaa !92
  %224 = load i32, ptr %num_threads, align 4, !tbaa !92
  %div251 = sdiv i32 %223, %224
  store i32 %div251, ptr %size, align 4, !tbaa !92
  %225 = load i32, ptr %n_fine, align 4, !tbaa !92
  %226 = load i32, ptr %size, align 4, !tbaa !92
  %227 = load i32, ptr %num_threads, align 4, !tbaa !92
  %mul252 = mul nsw i32 %226, %227
  %sub253 = sub nsw i32 %225, %mul252
  store i32 %sub253, ptr %rest, align 4, !tbaa !92
  %228 = load i32, ptr %j7, align 4, !tbaa !92
  %229 = load i32, ptr %rest, align 4, !tbaa !92
  %cmp254 = icmp slt i32 %228, %229
  br i1 %cmp254, label %if.then256, label %if.else263

if.then256:                                       ; preds = %if.end250
  %230 = load i32, ptr %j7, align 4, !tbaa !92
  %231 = load i32, ptr %size, align 4, !tbaa !92
  %mul257 = mul nsw i32 %230, %231
  %232 = load i32, ptr %j7, align 4, !tbaa !92
  %add258 = add nsw i32 %mul257, %232
  store i32 %add258, ptr %ns, align 4, !tbaa !92
  %233 = load i32, ptr %j7, align 4, !tbaa !92
  %add259 = add nsw i32 %233, 1
  %234 = load i32, ptr %size, align 4, !tbaa !92
  %mul260 = mul nsw i32 %add259, %234
  %235 = load i32, ptr %j7, align 4, !tbaa !92
  %add261 = add nsw i32 %mul260, %235
  %add262 = add nsw i32 %add261, 1
  store i32 %add262, ptr %ne, align 4, !tbaa !92
  br label %if.end269

if.else263:                                       ; preds = %if.end250
  %236 = load i32, ptr %j7, align 4, !tbaa !92
  %237 = load i32, ptr %size, align 4, !tbaa !92
  %mul264 = mul nsw i32 %236, %237
  %238 = load i32, ptr %rest, align 4, !tbaa !92
  %add265 = add nsw i32 %mul264, %238
  store i32 %add265, ptr %ns, align 4, !tbaa !92
  %239 = load i32, ptr %j7, align 4, !tbaa !92
  %add266 = add nsw i32 %239, 1
  %240 = load i32, ptr %size, align 4, !tbaa !92
  %mul267 = mul nsw i32 %add266, %240
  %241 = load i32, ptr %rest, align 4, !tbaa !92
  %add268 = add nsw i32 %mul267, %241
  store i32 %add268, ptr %ne, align 4, !tbaa !92
  br label %if.end269

if.end269:                                        ; preds = %if.else263, %if.then256
  %242 = load i32, ptr %ns, align 4, !tbaa !92
  store i32 %242, ptr %i6, align 4, !tbaa !92
  br label %for.cond270

for.cond270:                                      ; preds = %for.inc277, %if.end269
  %243 = load i32, ptr %i6, align 4, !tbaa !92
  %244 = load i32, ptr %ne, align 4, !tbaa !92
  %cmp271 = icmp slt i32 %243, %244
  br i1 %cmp271, label %for.body273, label %for.end279

for.body273:                                      ; preds = %for.cond270
  %245 = load i32, ptr %coarse_shift, align 4, !tbaa !92
  %246 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %247 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom274 = sext i32 %247 to i64
  %arrayidx275 = getelementptr inbounds i32, ptr %246, i64 %idxprom274
  %248 = load i32, ptr %arrayidx275, align 4, !tbaa !92
  %add276 = add nsw i32 %248, %245
  store i32 %add276, ptr %arrayidx275, align 4, !tbaa !92
  br label %for.inc277

for.inc277:                                       ; preds = %for.body273
  %249 = load i32, ptr %i6, align 4, !tbaa !92
  %inc278 = add nsw i32 %249, 1
  store i32 %inc278, ptr %i6, align 4, !tbaa !92
  br label %for.cond270, !llvm.loop !200

for.end279:                                       ; preds = %for.cond270
  br label %for.inc280

for.inc280:                                       ; preds = %for.end279
  %250 = load i32, ptr %j7, align 4, !tbaa !92
  %inc281 = add nsw i32 %250, 1
  store i32 %inc281, ptr %j7, align 4, !tbaa !92
  br label %for.cond240, !llvm.loop !201

for.end282:                                       ; preds = %for.cond240
  %251 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp283 = icmp eq i32 %251, 4
  br i1 %cmp283, label %if.then285, label %if.end290

if.then285:                                       ; preds = %for.end282
  %call286 = call double @time_getWallclockSeconds()
  %252 = load double, ptr %wall_time, align 8, !tbaa !161
  %sub287 = fsub double %call286, %252
  store double %sub287, ptr %wall_time, align 8, !tbaa !161
  %253 = load i32, ptr %my_id, align 4, !tbaa !92
  %254 = load double, ptr %wall_time, align 8, !tbaa !161
  %call288 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.6, i32 noundef %253, double noundef %254)
  %call289 = call i32 @fflush(ptr noundef null)
  br label %if.end290

if.end290:                                        ; preds = %if.then285, %for.end282
  %255 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp291 = icmp eq i32 %255, 4
  br i1 %cmp291, label %if.then293, label %if.end295

if.then293:                                       ; preds = %if.end290
  %call294 = call double @time_getWallclockSeconds()
  store double %call294, ptr %wall_time, align 8, !tbaa !161
  br label %if.end295

if.end295:                                        ; preds = %if.then293, %if.end290
  %256 = load i32, ptr %n_fine, align 4, !tbaa !92
  %conv296 = sext i32 %256 to i64
  %call297 = call ptr @hypre_CAlloc(i64 noundef %conv296, i64 noundef 8, i32 noundef 0)
  store ptr %call297, ptr %a_diag, align 8, !tbaa !4
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond298

for.cond298:                                      ; preds = %for.inc331, %if.end295
  %257 = load i32, ptr %i6, align 4, !tbaa !92
  %258 = load i32, ptr %n_fine, align 4, !tbaa !92
  %cmp299 = icmp slt i32 %257, %258
  br i1 %cmp299, label %for.body301, label %for.end333

for.body301:                                      ; preds = %for.cond298
  %259 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %260 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom302 = sext i32 %260 to i64
  %arrayidx303 = getelementptr inbounds i32, ptr %259, i64 %idxprom302
  %261 = load i32, ptr %arrayidx303, align 4, !tbaa !92
  %cmp304 = icmp slt i32 %261, 0
  br i1 %cmp304, label %if.then306, label %if.end330

if.then306:                                       ; preds = %for.body301
  %262 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %263 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom307 = sext i32 %263 to i64
  %arrayidx308 = getelementptr inbounds i32, ptr %262, i64 %idxprom307
  %264 = load i32, ptr %arrayidx308, align 4, !tbaa !92
  store i32 %264, ptr %jj, align 4, !tbaa !92
  br label %for.cond309

for.cond309:                                      ; preds = %for.inc327, %if.then306
  %265 = load i32, ptr %jj, align 4, !tbaa !92
  %266 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %267 = load i32, ptr %i6, align 4, !tbaa !92
  %add310 = add nsw i32 %267, 1
  %idxprom311 = sext i32 %add310 to i64
  %arrayidx312 = getelementptr inbounds i32, ptr %266, i64 %idxprom311
  %268 = load i32, ptr %arrayidx312, align 4, !tbaa !92
  %cmp313 = icmp slt i32 %265, %268
  br i1 %cmp313, label %for.body315, label %for.end329

for.body315:                                      ; preds = %for.cond309
  %269 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %270 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom316 = sext i32 %270 to i64
  %arrayidx317 = getelementptr inbounds i32, ptr %269, i64 %idxprom316
  %271 = load i32, ptr %arrayidx317, align 4, !tbaa !92
  store i32 %271, ptr %i1, align 4, !tbaa !92
  %272 = load i32, ptr %i6, align 4, !tbaa !92
  %273 = load i32, ptr %i1, align 4, !tbaa !92
  %cmp318 = icmp eq i32 %272, %273
  br i1 %cmp318, label %if.then320, label %if.end326

if.then320:                                       ; preds = %for.body315
  %274 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %275 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom321 = sext i32 %275 to i64
  %arrayidx322 = getelementptr inbounds double, ptr %274, i64 %idxprom321
  %276 = load double, ptr %arrayidx322, align 8, !tbaa !161
  %div323 = fdiv double 1.000000e+00, %276
  %277 = load ptr, ptr %a_diag, align 8, !tbaa !4
  %278 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom324 = sext i32 %278 to i64
  %arrayidx325 = getelementptr inbounds double, ptr %277, i64 %idxprom324
  store double %div323, ptr %arrayidx325, align 8, !tbaa !161
  br label %if.end326

if.end326:                                        ; preds = %if.then320, %for.body315
  br label %for.inc327

for.inc327:                                       ; preds = %if.end326
  %279 = load i32, ptr %jj, align 4, !tbaa !92
  %inc328 = add nsw i32 %279, 1
  store i32 %inc328, ptr %jj, align 4, !tbaa !92
  br label %for.cond309, !llvm.loop !202

for.end329:                                       ; preds = %for.cond309
  br label %if.end330

if.end330:                                        ; preds = %for.end329, %for.body301
  br label %for.inc331

for.inc331:                                       ; preds = %if.end330
  %280 = load i32, ptr %i6, align 4, !tbaa !92
  %inc332 = add nsw i32 %280, 1
  store i32 %inc332, ptr %i6, align 4, !tbaa !92
  br label %for.cond298, !llvm.loop !203

for.end333:                                       ; preds = %for.cond298
  store i32 0, ptr %jl, align 4, !tbaa !92
  br label %for.cond334

for.cond334:                                      ; preds = %for.inc532, %for.end333
  %281 = load i32, ptr %jl, align 4, !tbaa !92
  %282 = load i32, ptr %num_threads, align 4, !tbaa !92
  %cmp335 = icmp slt i32 %281, %282
  br i1 %cmp335, label %for.body337, label %for.end534

for.body337:                                      ; preds = %for.cond334
  %283 = load i32, ptr %n_fine, align 4, !tbaa !92
  %284 = load i32, ptr %num_threads, align 4, !tbaa !92
  %div338 = sdiv i32 %283, %284
  store i32 %div338, ptr %size, align 4, !tbaa !92
  %285 = load i32, ptr %n_fine, align 4, !tbaa !92
  %286 = load i32, ptr %size, align 4, !tbaa !92
  %287 = load i32, ptr %num_threads, align 4, !tbaa !92
  %mul339 = mul nsw i32 %286, %287
  %sub340 = sub nsw i32 %285, %mul339
  store i32 %sub340, ptr %rest, align 4, !tbaa !92
  %288 = load i32, ptr %jl, align 4, !tbaa !92
  %289 = load i32, ptr %rest, align 4, !tbaa !92
  %cmp341 = icmp slt i32 %288, %289
  br i1 %cmp341, label %if.then343, label %if.else350

if.then343:                                       ; preds = %for.body337
  %290 = load i32, ptr %jl, align 4, !tbaa !92
  %291 = load i32, ptr %size, align 4, !tbaa !92
  %mul344 = mul nsw i32 %290, %291
  %292 = load i32, ptr %jl, align 4, !tbaa !92
  %add345 = add nsw i32 %mul344, %292
  store i32 %add345, ptr %ns, align 4, !tbaa !92
  %293 = load i32, ptr %jl, align 4, !tbaa !92
  %add346 = add nsw i32 %293, 1
  %294 = load i32, ptr %size, align 4, !tbaa !92
  %mul347 = mul nsw i32 %add346, %294
  %295 = load i32, ptr %jl, align 4, !tbaa !92
  %add348 = add nsw i32 %mul347, %295
  %add349 = add nsw i32 %add348, 1
  store i32 %add349, ptr %ne, align 4, !tbaa !92
  br label %if.end356

if.else350:                                       ; preds = %for.body337
  %296 = load i32, ptr %jl, align 4, !tbaa !92
  %297 = load i32, ptr %size, align 4, !tbaa !92
  %mul351 = mul nsw i32 %296, %297
  %298 = load i32, ptr %rest, align 4, !tbaa !92
  %add352 = add nsw i32 %mul351, %298
  store i32 %add352, ptr %ns, align 4, !tbaa !92
  %299 = load i32, ptr %jl, align 4, !tbaa !92
  %add353 = add nsw i32 %299, 1
  %300 = load i32, ptr %size, align 4, !tbaa !92
  %mul354 = mul nsw i32 %add353, %300
  %301 = load i32, ptr %rest, align 4, !tbaa !92
  %add355 = add nsw i32 %mul354, %301
  store i32 %add355, ptr %ne, align 4, !tbaa !92
  br label %if.end356

if.end356:                                        ; preds = %if.else350, %if.then343
  store i32 0, ptr %jj_counter, align 4, !tbaa !92
  %302 = load i32, ptr %jl, align 4, !tbaa !92
  %cmp357 = icmp sgt i32 %302, 0
  br i1 %cmp357, label %if.then359, label %if.end363

if.then359:                                       ; preds = %if.end356
  %303 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %304 = load i32, ptr %jl, align 4, !tbaa !92
  %sub360 = sub nsw i32 %304, 1
  %idxprom361 = sext i32 %sub360 to i64
  %arrayidx362 = getelementptr inbounds i32, ptr %303, i64 %idxprom361
  %305 = load i32, ptr %arrayidx362, align 4, !tbaa !92
  store i32 %305, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end363

if.end363:                                        ; preds = %if.then359, %if.end356
  store i32 0, ptr %jj_counter_offd, align 4, !tbaa !92
  %306 = load i32, ptr %jl, align 4, !tbaa !92
  %cmp364 = icmp sgt i32 %306, 0
  br i1 %cmp364, label %if.then366, label %if.end370

if.then366:                                       ; preds = %if.end363
  %307 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %308 = load i32, ptr %jl, align 4, !tbaa !92
  %sub367 = sub nsw i32 %308, 1
  %idxprom368 = sext i32 %sub367 to i64
  %arrayidx369 = getelementptr inbounds i32, ptr %307, i64 %idxprom368
  %309 = load i32, ptr %arrayidx369, align 4, !tbaa !92
  store i32 %309, ptr %jj_counter_offd, align 4, !tbaa !92
  br label %if.end370

if.end370:                                        ; preds = %if.then366, %if.end363
  %310 = load i32, ptr %n_fine, align 4, !tbaa !92
  %conv371 = sext i32 %310 to i64
  %call372 = call ptr @hypre_CAlloc(i64 noundef %conv371, i64 noundef 4, i32 noundef 0)
  store ptr %call372, ptr %P_marker, align 8, !tbaa !4
  %311 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %tobool373 = icmp ne i32 %311, 0
  br i1 %tobool373, label %if.then374, label %if.else377

if.then374:                                       ; preds = %if.end370
  %312 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %conv375 = sext i32 %312 to i64
  %call376 = call ptr @hypre_CAlloc(i64 noundef %conv375, i64 noundef 4, i32 noundef 0)
  store ptr %call376, ptr %P_marker_offd, align 8, !tbaa !4
  br label %if.end378

if.else377:                                       ; preds = %if.end370
  store ptr null, ptr %P_marker_offd, align 8, !tbaa !4
  br label %if.end378

if.end378:                                        ; preds = %if.else377, %if.then374
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond379

for.cond379:                                      ; preds = %for.inc385, %if.end378
  %313 = load i32, ptr %i6, align 4, !tbaa !92
  %314 = load i32, ptr %n_fine, align 4, !tbaa !92
  %cmp380 = icmp slt i32 %313, %314
  br i1 %cmp380, label %for.body382, label %for.end387

for.body382:                                      ; preds = %for.cond379
  %315 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %316 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom383 = sext i32 %316 to i64
  %arrayidx384 = getelementptr inbounds i32, ptr %315, i64 %idxprom383
  store i32 -1, ptr %arrayidx384, align 4, !tbaa !92
  br label %for.inc385

for.inc385:                                       ; preds = %for.body382
  %317 = load i32, ptr %i6, align 4, !tbaa !92
  %inc386 = add nsw i32 %317, 1
  store i32 %inc386, ptr %i6, align 4, !tbaa !92
  br label %for.cond379, !llvm.loop !204

for.end387:                                       ; preds = %for.cond379
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond388

for.cond388:                                      ; preds = %for.inc394, %for.end387
  %318 = load i32, ptr %i6, align 4, !tbaa !92
  %319 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %cmp389 = icmp slt i32 %318, %319
  br i1 %cmp389, label %for.body391, label %for.end396

for.body391:                                      ; preds = %for.cond388
  %320 = load ptr, ptr %P_marker_offd, align 8, !tbaa !4
  %321 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom392 = sext i32 %321 to i64
  %arrayidx393 = getelementptr inbounds i32, ptr %320, i64 %idxprom392
  store i32 -1, ptr %arrayidx393, align 4, !tbaa !92
  br label %for.inc394

for.inc394:                                       ; preds = %for.body391
  %322 = load i32, ptr %i6, align 4, !tbaa !92
  %inc395 = add nsw i32 %322, 1
  store i32 %inc395, ptr %i6, align 4, !tbaa !92
  br label %for.cond388, !llvm.loop !205

for.end396:                                       ; preds = %for.cond388
  %323 = load i32, ptr %ns, align 4, !tbaa !92
  store i32 %323, ptr %i6, align 4, !tbaa !92
  br label %for.cond397

for.cond397:                                      ; preds = %for.inc529, %for.end396
  %324 = load i32, ptr %i6, align 4, !tbaa !92
  %325 = load i32, ptr %ne, align 4, !tbaa !92
  %cmp398 = icmp slt i32 %324, %325
  br i1 %cmp398, label %for.body400, label %for.end531

for.body400:                                      ; preds = %for.cond397
  %326 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %327 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom401 = sext i32 %327 to i64
  %arrayidx402 = getelementptr inbounds i32, ptr %326, i64 %idxprom401
  %328 = load i32, ptr %arrayidx402, align 4, !tbaa !92
  %cmp403 = icmp sge i32 %328, 0
  br i1 %cmp403, label %if.then405, label %if.else415

if.then405:                                       ; preds = %for.body400
  %329 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %330 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %331 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom406 = sext i32 %331 to i64
  %arrayidx407 = getelementptr inbounds i32, ptr %330, i64 %idxprom406
  store i32 %329, ptr %arrayidx407, align 4, !tbaa !92
  %332 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %333 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom408 = sext i32 %333 to i64
  %arrayidx409 = getelementptr inbounds i32, ptr %332, i64 %idxprom408
  %334 = load i32, ptr %arrayidx409, align 4, !tbaa !92
  %335 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %336 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom410 = sext i32 %336 to i64
  %arrayidx411 = getelementptr inbounds i32, ptr %335, i64 %idxprom410
  store i32 %334, ptr %arrayidx411, align 4, !tbaa !92
  %337 = load double, ptr %one, align 8, !tbaa !161
  %338 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %339 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom412 = sext i32 %339 to i64
  %arrayidx413 = getelementptr inbounds double, ptr %338, i64 %idxprom412
  store double %337, ptr %arrayidx413, align 8, !tbaa !161
  %340 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc414 = add nsw i32 %340, 1
  store i32 %inc414, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end525

if.else415:                                       ; preds = %for.body400
  %341 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %342 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %343 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom416 = sext i32 %343 to i64
  %arrayidx417 = getelementptr inbounds i32, ptr %342, i64 %idxprom416
  store i32 %341, ptr %arrayidx417, align 4, !tbaa !92
  %344 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %345 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom418 = sext i32 %345 to i64
  %arrayidx419 = getelementptr inbounds i32, ptr %344, i64 %idxprom418
  %346 = load i32, ptr %arrayidx419, align 4, !tbaa !92
  store i32 %346, ptr %jj, align 4, !tbaa !92
  br label %for.cond420

for.cond420:                                      ; preds = %for.inc466, %if.else415
  %347 = load i32, ptr %jj, align 4, !tbaa !92
  %348 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %349 = load i32, ptr %i6, align 4, !tbaa !92
  %add421 = add nsw i32 %349, 1
  %idxprom422 = sext i32 %add421 to i64
  %arrayidx423 = getelementptr inbounds i32, ptr %348, i64 %idxprom422
  %350 = load i32, ptr %arrayidx423, align 4, !tbaa !92
  %cmp424 = icmp slt i32 %347, %350
  br i1 %cmp424, label %for.body426, label %for.end468

for.body426:                                      ; preds = %for.cond420
  %351 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %352 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom427 = sext i32 %352 to i64
  %arrayidx428 = getelementptr inbounds i32, ptr %351, i64 %idxprom427
  %353 = load i32, ptr %arrayidx428, align 4, !tbaa !92
  store i32 %353, ptr %i1, align 4, !tbaa !92
  %354 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %355 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom429 = sext i32 %355 to i64
  %arrayidx430 = getelementptr inbounds i32, ptr %354, i64 %idxprom429
  %356 = load i32, ptr %arrayidx430, align 4, !tbaa !92
  %cmp431 = icmp sge i32 %356, 0
  br i1 %cmp431, label %land.lhs.true433, label %if.end465

land.lhs.true433:                                 ; preds = %for.body426
  %357 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp434 = icmp sgt i32 %357, 0
  br i1 %cmp434, label %if.then436, label %if.end465

if.then436:                                       ; preds = %land.lhs.true433
  %358 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %359 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %360 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom437 = sext i32 %360 to i64
  %arrayidx438 = getelementptr inbounds i32, ptr %359, i64 %idxprom437
  store i32 %358, ptr %arrayidx438, align 4, !tbaa !92
  %361 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %362 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom439 = sext i32 %362 to i64
  %arrayidx440 = getelementptr inbounds i32, ptr %361, i64 %idxprom439
  %363 = load i32, ptr %arrayidx440, align 4, !tbaa !92
  %364 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %365 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom441 = sext i32 %365 to i64
  %arrayidx442 = getelementptr inbounds i32, ptr %364, i64 %idxprom441
  store i32 %363, ptr %arrayidx442, align 4, !tbaa !92
  %366 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp443 = icmp eq i32 %366, 1
  br i1 %cmp443, label %if.then445, label %if.else450

if.then445:                                       ; preds = %if.then436
  %367 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %368 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom446 = sext i32 %368 to i64
  %arrayidx447 = getelementptr inbounds double, ptr %367, i64 %idxprom446
  %369 = load double, ptr %arrayidx447, align 8, !tbaa !161
  %fneg = fneg double %369
  %370 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %371 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom448 = sext i32 %371 to i64
  %arrayidx449 = getelementptr inbounds double, ptr %370, i64 %idxprom448
  store double %fneg, ptr %arrayidx449, align 8, !tbaa !161
  br label %if.end463

if.else450:                                       ; preds = %if.then436
  %372 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp451 = icmp eq i32 %372, 2
  br i1 %cmp451, label %if.then453, label %if.end462

if.then453:                                       ; preds = %if.else450
  %373 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %374 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom454 = sext i32 %374 to i64
  %arrayidx455 = getelementptr inbounds double, ptr %373, i64 %idxprom454
  %375 = load double, ptr %arrayidx455, align 8, !tbaa !161
  %fneg456 = fneg double %375
  %376 = load ptr, ptr %a_diag, align 8, !tbaa !4
  %377 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom457 = sext i32 %377 to i64
  %arrayidx458 = getelementptr inbounds double, ptr %376, i64 %idxprom457
  %378 = load double, ptr %arrayidx458, align 8, !tbaa !161
  %mul459 = fmul double %fneg456, %378
  %379 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %380 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom460 = sext i32 %380 to i64
  %arrayidx461 = getelementptr inbounds double, ptr %379, i64 %idxprom460
  store double %mul459, ptr %arrayidx461, align 8, !tbaa !161
  br label %if.end462

if.end462:                                        ; preds = %if.then453, %if.else450
  br label %if.end463

if.end463:                                        ; preds = %if.end462, %if.then445
  %381 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc464 = add nsw i32 %381, 1
  store i32 %inc464, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end465

if.end465:                                        ; preds = %if.end463, %land.lhs.true433, %for.body426
  br label %for.inc466

for.inc466:                                       ; preds = %if.end465
  %382 = load i32, ptr %jj, align 4, !tbaa !92
  %inc467 = add nsw i32 %382, 1
  store i32 %inc467, ptr %jj, align 4, !tbaa !92
  br label %for.cond420, !llvm.loop !206

for.end468:                                       ; preds = %for.cond420
  %383 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %384 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %385 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom469 = sext i32 %385 to i64
  %arrayidx470 = getelementptr inbounds i32, ptr %384, i64 %idxprom469
  store i32 %383, ptr %arrayidx470, align 4, !tbaa !92
  %386 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp471 = icmp sgt i32 %386, 1
  br i1 %cmp471, label %if.then473, label %if.end524

if.then473:                                       ; preds = %for.end468
  %387 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %388 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom474 = sext i32 %388 to i64
  %arrayidx475 = getelementptr inbounds i32, ptr %387, i64 %idxprom474
  %389 = load i32, ptr %arrayidx475, align 4, !tbaa !92
  store i32 %389, ptr %jj, align 4, !tbaa !92
  br label %for.cond476

for.cond476:                                      ; preds = %for.inc521, %if.then473
  %390 = load i32, ptr %jj, align 4, !tbaa !92
  %391 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %392 = load i32, ptr %i6, align 4, !tbaa !92
  %add477 = add nsw i32 %392, 1
  %idxprom478 = sext i32 %add477 to i64
  %arrayidx479 = getelementptr inbounds i32, ptr %391, i64 %idxprom478
  %393 = load i32, ptr %arrayidx479, align 4, !tbaa !92
  %cmp480 = icmp slt i32 %390, %393
  br i1 %cmp480, label %for.body482, label %for.end523

for.body482:                                      ; preds = %for.cond476
  %394 = load ptr, ptr %A_offd_j, align 8, !tbaa !4
  %395 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom483 = sext i32 %395 to i64
  %arrayidx484 = getelementptr inbounds i32, ptr %394, i64 %idxprom483
  %396 = load i32, ptr %arrayidx484, align 4, !tbaa !92
  store i32 %396, ptr %i1, align 4, !tbaa !92
  %397 = load ptr, ptr %CF_marker_offd, align 8, !tbaa !4
  %398 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom485 = sext i32 %398 to i64
  %arrayidx486 = getelementptr inbounds i32, ptr %397, i64 %idxprom485
  %399 = load i32, ptr %arrayidx486, align 4, !tbaa !92
  %cmp487 = icmp sge i32 %399, 0
  br i1 %cmp487, label %land.lhs.true489, label %if.end520

land.lhs.true489:                                 ; preds = %for.body482
  %400 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp490 = icmp sgt i32 %400, 0
  br i1 %cmp490, label %if.then492, label %if.end520

if.then492:                                       ; preds = %land.lhs.true489
  %401 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %402 = load ptr, ptr %P_marker_offd, align 8, !tbaa !4
  %403 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom493 = sext i32 %403 to i64
  %arrayidx494 = getelementptr inbounds i32, ptr %402, i64 %idxprom493
  store i32 %401, ptr %arrayidx494, align 4, !tbaa !92
  %404 = load i32, ptr %i1, align 4, !tbaa !92
  %405 = load ptr, ptr %P_offd_j, align 8, !tbaa !4
  %406 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %idxprom495 = sext i32 %406 to i64
  %arrayidx496 = getelementptr inbounds i32, ptr %405, i64 %idxprom495
  store i32 %404, ptr %arrayidx496, align 4, !tbaa !92
  %407 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp497 = icmp eq i32 %407, 1
  br i1 %cmp497, label %if.then499, label %if.else505

if.then499:                                       ; preds = %if.then492
  %408 = load ptr, ptr %A_offd_data, align 8, !tbaa !4
  %409 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom500 = sext i32 %409 to i64
  %arrayidx501 = getelementptr inbounds double, ptr %408, i64 %idxprom500
  %410 = load double, ptr %arrayidx501, align 8, !tbaa !161
  %fneg502 = fneg double %410
  %411 = load ptr, ptr %P_offd_data, align 8, !tbaa !4
  %412 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %idxprom503 = sext i32 %412 to i64
  %arrayidx504 = getelementptr inbounds double, ptr %411, i64 %idxprom503
  store double %fneg502, ptr %arrayidx504, align 8, !tbaa !161
  br label %if.end518

if.else505:                                       ; preds = %if.then492
  %413 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp506 = icmp eq i32 %413, 2
  br i1 %cmp506, label %if.then508, label %if.end517

if.then508:                                       ; preds = %if.else505
  %414 = load ptr, ptr %A_offd_data, align 8, !tbaa !4
  %415 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom509 = sext i32 %415 to i64
  %arrayidx510 = getelementptr inbounds double, ptr %414, i64 %idxprom509
  %416 = load double, ptr %arrayidx510, align 8, !tbaa !161
  %fneg511 = fneg double %416
  %417 = load ptr, ptr %a_diag, align 8, !tbaa !4
  %418 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom512 = sext i32 %418 to i64
  %arrayidx513 = getelementptr inbounds double, ptr %417, i64 %idxprom512
  %419 = load double, ptr %arrayidx513, align 8, !tbaa !161
  %mul514 = fmul double %fneg511, %419
  %420 = load ptr, ptr %P_offd_data, align 8, !tbaa !4
  %421 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %idxprom515 = sext i32 %421 to i64
  %arrayidx516 = getelementptr inbounds double, ptr %420, i64 %idxprom515
  store double %mul514, ptr %arrayidx516, align 8, !tbaa !161
  br label %if.end517

if.end517:                                        ; preds = %if.then508, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %if.then499
  %422 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %inc519 = add nsw i32 %422, 1
  store i32 %inc519, ptr %jj_counter_offd, align 4, !tbaa !92
  br label %if.end520

if.end520:                                        ; preds = %if.end518, %land.lhs.true489, %for.body482
  br label %for.inc521

for.inc521:                                       ; preds = %if.end520
  %423 = load i32, ptr %jj, align 4, !tbaa !92
  %inc522 = add nsw i32 %423, 1
  store i32 %inc522, ptr %jj, align 4, !tbaa !92
  br label %for.cond476, !llvm.loop !207

for.end523:                                       ; preds = %for.cond476
  br label %if.end524

if.end524:                                        ; preds = %for.end523, %for.end468
  br label %if.end525

if.end525:                                        ; preds = %if.end524, %if.then405
  %424 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %425 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %426 = load i32, ptr %i6, align 4, !tbaa !92
  %add526 = add nsw i32 %426, 1
  %idxprom527 = sext i32 %add526 to i64
  %arrayidx528 = getelementptr inbounds i32, ptr %425, i64 %idxprom527
  store i32 %424, ptr %arrayidx528, align 4, !tbaa !92
  br label %for.inc529

for.inc529:                                       ; preds = %if.end525
  %427 = load i32, ptr %i6, align 4, !tbaa !92
  %inc530 = add nsw i32 %427, 1
  store i32 %inc530, ptr %i6, align 4, !tbaa !92
  br label %for.cond397, !llvm.loop !208

for.end531:                                       ; preds = %for.cond397
  %428 = load ptr, ptr %P_marker, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %428, i32 noundef 0)
  store ptr null, ptr %P_marker, align 8, !tbaa !4
  %429 = load ptr, ptr %P_marker_offd, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %429, i32 noundef 0)
  store ptr null, ptr %P_marker_offd, align 8, !tbaa !4
  br label %for.inc532

for.inc532:                                       ; preds = %for.end531
  %430 = load i32, ptr %jl, align 4, !tbaa !92
  %inc533 = add nsw i32 %430, 1
  store i32 %inc533, ptr %jl, align 4, !tbaa !92
  br label %for.cond334, !llvm.loop !209

for.end534:                                       ; preds = %for.cond334
  %431 = load ptr, ptr %a_diag, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %431, i32 noundef 0)
  store ptr null, ptr %a_diag, align 8, !tbaa !4
  %432 = load ptr, ptr %comm, align 8, !tbaa !4
  %433 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %global_num_rows = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %433, i32 0, i32 1
  %434 = load i32, ptr %global_num_rows, align 8, !tbaa !171
  %435 = load i32, ptr %total_global_cpts, align 4, !tbaa !92
  %436 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %col_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %436, i32 0, i32 15
  %arraydecay = getelementptr inbounds [2 x i32], ptr %col_starts, i64 0, i64 0
  %437 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %438 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %439 = load i32, ptr %n_fine, align 4, !tbaa !92
  %idxprom535 = sext i32 %439 to i64
  %arrayidx536 = getelementptr inbounds i32, ptr %438, i64 %idxprom535
  %440 = load i32, ptr %arrayidx536, align 4, !tbaa !92
  %441 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %442 = load i32, ptr %n_fine, align 4, !tbaa !92
  %idxprom537 = sext i32 %442 to i64
  %arrayidx538 = getelementptr inbounds i32, ptr %441, i64 %idxprom537
  %443 = load i32, ptr %arrayidx538, align 4, !tbaa !92
  %call539 = call ptr @hypre_ParCSRMatrixCreate(ptr noundef %432, i32 noundef %434, i32 noundef %435, ptr noundef %arraydecay, ptr noundef %437, i32 noundef 0, i32 noundef %440, i32 noundef %443)
  store ptr %call539, ptr %P, align 8, !tbaa !4
  %444 = load ptr, ptr %P, align 8, !tbaa !4
  %diag540 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %444, i32 0, i32 8
  %445 = load ptr, ptr %diag540, align 8, !tbaa !149
  store ptr %445, ptr %P_diag, align 8, !tbaa !4
  %446 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %447 = load ptr, ptr %P_diag, align 8, !tbaa !4
  %data541 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %447, i32 0, i32 10
  store ptr %446, ptr %data541, align 8, !tbaa !165
  %448 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %449 = load ptr, ptr %P_diag, align 8, !tbaa !4
  %i542 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %449, i32 0, i32 0
  store ptr %448, ptr %i542, align 8, !tbaa !163
  %450 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %451 = load ptr, ptr %P_diag, align 8, !tbaa !4
  %j543 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %451, i32 0, i32 1
  store ptr %450, ptr %j543, align 8, !tbaa !164
  %452 = load ptr, ptr %P, align 8, !tbaa !4
  %offd544 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %452, i32 0, i32 9
  %453 = load ptr, ptr %offd544, align 8, !tbaa !162
  store ptr %453, ptr %P_offd, align 8, !tbaa !4
  %454 = load ptr, ptr %P_offd_data, align 8, !tbaa !4
  %455 = load ptr, ptr %P_offd, align 8, !tbaa !4
  %data545 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %455, i32 0, i32 10
  store ptr %454, ptr %data545, align 8, !tbaa !165
  %456 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %457 = load ptr, ptr %P_offd, align 8, !tbaa !4
  %i546 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %457, i32 0, i32 0
  store ptr %456, ptr %i546, align 8, !tbaa !163
  %458 = load ptr, ptr %P_offd_j, align 8, !tbaa !4
  %459 = load ptr, ptr %P_offd, align 8, !tbaa !4
  %j547 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %459, i32 0, i32 1
  store ptr %458, ptr %j547, align 8, !tbaa !164
  store i32 0, ptr %num_cols_P_offd, align 4, !tbaa !92
  %460 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %tobool548 = icmp ne i32 %460, 0
  br i1 %tobool548, label %if.then549, label %if.end609

if.then549:                                       ; preds = %for.end534
  %461 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %conv550 = sext i32 %461 to i64
  %call551 = call ptr @hypre_CAlloc(i64 noundef %conv550, i64 noundef 4, i32 noundef 0)
  store ptr %call551, ptr %P_marker, align 8, !tbaa !4
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond552

for.cond552:                                      ; preds = %for.inc558, %if.then549
  %462 = load i32, ptr %i6, align 4, !tbaa !92
  %463 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %cmp553 = icmp slt i32 %462, %463
  br i1 %cmp553, label %for.body555, label %for.end560

for.body555:                                      ; preds = %for.cond552
  %464 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %465 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom556 = sext i32 %465 to i64
  %arrayidx557 = getelementptr inbounds i32, ptr %464, i64 %idxprom556
  store i32 0, ptr %arrayidx557, align 4, !tbaa !92
  br label %for.inc558

for.inc558:                                       ; preds = %for.body555
  %466 = load i32, ptr %i6, align 4, !tbaa !92
  %inc559 = add nsw i32 %466, 1
  store i32 %inc559, ptr %i6, align 4, !tbaa !92
  br label %for.cond552, !llvm.loop !210

for.end560:                                       ; preds = %for.cond552
  store i32 0, ptr %num_cols_P_offd, align 4, !tbaa !92
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond561

for.cond561:                                      ; preds = %for.inc575, %for.end560
  %467 = load i32, ptr %i6, align 4, !tbaa !92
  %468 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %cmp562 = icmp slt i32 %467, %468
  br i1 %cmp562, label %for.body564, label %for.end577

for.body564:                                      ; preds = %for.cond561
  %469 = load ptr, ptr %P_offd_j, align 8, !tbaa !4
  %470 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom565 = sext i32 %470 to i64
  %arrayidx566 = getelementptr inbounds i32, ptr %469, i64 %idxprom565
  %471 = load i32, ptr %arrayidx566, align 4, !tbaa !92
  store i32 %471, ptr %index, align 4, !tbaa !92
  %472 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %473 = load i32, ptr %index, align 4, !tbaa !92
  %idxprom567 = sext i32 %473 to i64
  %arrayidx568 = getelementptr inbounds i32, ptr %472, i64 %idxprom567
  %474 = load i32, ptr %arrayidx568, align 4, !tbaa !92
  %tobool569 = icmp ne i32 %474, 0
  br i1 %tobool569, label %if.end574, label %if.then570

if.then570:                                       ; preds = %for.body564
  %475 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %inc571 = add nsw i32 %475, 1
  store i32 %inc571, ptr %num_cols_P_offd, align 4, !tbaa !92
  %476 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %477 = load i32, ptr %index, align 4, !tbaa !92
  %idxprom572 = sext i32 %477 to i64
  %arrayidx573 = getelementptr inbounds i32, ptr %476, i64 %idxprom572
  store i32 1, ptr %arrayidx573, align 4, !tbaa !92
  br label %if.end574

if.end574:                                        ; preds = %if.then570, %for.body564
  br label %for.inc575

for.inc575:                                       ; preds = %if.end574
  %478 = load i32, ptr %i6, align 4, !tbaa !92
  %inc576 = add nsw i32 %478, 1
  store i32 %inc576, ptr %i6, align 4, !tbaa !92
  br label %for.cond561, !llvm.loop !211

for.end577:                                       ; preds = %for.cond561
  %479 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %conv578 = sext i32 %479 to i64
  %call579 = call ptr @hypre_CAlloc(i64 noundef %conv578, i64 noundef 4, i32 noundef 0)
  store ptr %call579, ptr %col_map_offd_P, align 8, !tbaa !4
  %480 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %conv580 = sext i32 %480 to i64
  %call581 = call ptr @hypre_CAlloc(i64 noundef %conv580, i64 noundef 4, i32 noundef 0)
  store ptr %call581, ptr %tmp_map_offd, align 8, !tbaa !4
  store i32 0, ptr %index, align 4, !tbaa !92
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond582

for.cond582:                                      ; preds = %for.inc594, %for.end577
  %481 = load i32, ptr %i6, align 4, !tbaa !92
  %482 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %cmp583 = icmp slt i32 %481, %482
  br i1 %cmp583, label %for.body585, label %for.end596

for.body585:                                      ; preds = %for.cond582
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body585
  %483 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %484 = load i32, ptr %index, align 4, !tbaa !92
  %idxprom586 = sext i32 %484 to i64
  %arrayidx587 = getelementptr inbounds i32, ptr %483, i64 %idxprom586
  %485 = load i32, ptr %arrayidx587, align 4, !tbaa !92
  %cmp588 = icmp eq i32 %485, 0
  br i1 %cmp588, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %486 = load i32, ptr %index, align 4, !tbaa !92
  %inc590 = add nsw i32 %486, 1
  store i32 %inc590, ptr %index, align 4, !tbaa !92
  br label %while.cond, !llvm.loop !212

while.end:                                        ; preds = %while.cond
  %487 = load i32, ptr %index, align 4, !tbaa !92
  %inc591 = add nsw i32 %487, 1
  store i32 %inc591, ptr %index, align 4, !tbaa !92
  %488 = load ptr, ptr %tmp_map_offd, align 8, !tbaa !4
  %489 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom592 = sext i32 %489 to i64
  %arrayidx593 = getelementptr inbounds i32, ptr %488, i64 %idxprom592
  store i32 %487, ptr %arrayidx593, align 4, !tbaa !92
  br label %for.inc594

for.inc594:                                       ; preds = %while.end
  %490 = load i32, ptr %i6, align 4, !tbaa !92
  %inc595 = add nsw i32 %490, 1
  store i32 %inc595, ptr %i6, align 4, !tbaa !92
  br label %for.cond582, !llvm.loop !213

for.end596:                                       ; preds = %for.cond582
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond597

for.cond597:                                      ; preds = %for.inc606, %for.end596
  %491 = load i32, ptr %i6, align 4, !tbaa !92
  %492 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %cmp598 = icmp slt i32 %491, %492
  br i1 %cmp598, label %for.body600, label %for.end608

for.body600:                                      ; preds = %for.cond597
  %493 = load ptr, ptr %tmp_map_offd, align 8, !tbaa !4
  %494 = load ptr, ptr %P_offd_j, align 8, !tbaa !4
  %495 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom601 = sext i32 %495 to i64
  %arrayidx602 = getelementptr inbounds i32, ptr %494, i64 %idxprom601
  %496 = load i32, ptr %arrayidx602, align 4, !tbaa !92
  %497 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %call603 = call i32 @hypre_BinarySearch(ptr noundef %493, i32 noundef %496, i32 noundef %497)
  %498 = load ptr, ptr %P_offd_j, align 8, !tbaa !4
  %499 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom604 = sext i32 %499 to i64
  %arrayidx605 = getelementptr inbounds i32, ptr %498, i64 %idxprom604
  store i32 %call603, ptr %arrayidx605, align 4, !tbaa !92
  br label %for.inc606

for.inc606:                                       ; preds = %for.body600
  %500 = load i32, ptr %i6, align 4, !tbaa !92
  %inc607 = add nsw i32 %500, 1
  store i32 %inc607, ptr %i6, align 4, !tbaa !92
  br label %for.cond597, !llvm.loop !214

for.end608:                                       ; preds = %for.cond597
  %501 = load ptr, ptr %P_marker, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %501, i32 noundef 0)
  store ptr null, ptr %P_marker, align 8, !tbaa !4
  br label %if.end609

if.end609:                                        ; preds = %for.end608, %for.end534
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond610

for.cond610:                                      ; preds = %for.inc622, %if.end609
  %502 = load i32, ptr %i6, align 4, !tbaa !92
  %503 = load i32, ptr %n_fine, align 4, !tbaa !92
  %cmp611 = icmp slt i32 %502, %503
  br i1 %cmp611, label %for.body613, label %for.end624

for.body613:                                      ; preds = %for.cond610
  %504 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %505 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom614 = sext i32 %505 to i64
  %arrayidx615 = getelementptr inbounds i32, ptr %504, i64 %idxprom614
  %506 = load i32, ptr %arrayidx615, align 4, !tbaa !92
  %cmp616 = icmp eq i32 %506, -3
  br i1 %cmp616, label %if.then618, label %if.end621

if.then618:                                       ; preds = %for.body613
  %507 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %508 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom619 = sext i32 %508 to i64
  %arrayidx620 = getelementptr inbounds i32, ptr %507, i64 %idxprom619
  store i32 -1, ptr %arrayidx620, align 4, !tbaa !92
  br label %if.end621

if.end621:                                        ; preds = %if.then618, %for.body613
  br label %for.inc622

for.inc622:                                       ; preds = %if.end621
  %509 = load i32, ptr %i6, align 4, !tbaa !92
  %inc623 = add nsw i32 %509, 1
  store i32 %inc623, ptr %i6, align 4, !tbaa !92
  br label %for.cond610, !llvm.loop !215

for.end624:                                       ; preds = %for.cond610
  %510 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %tobool625 = icmp ne i32 %510, 0
  br i1 %tobool625, label %if.then626, label %if.end628

if.then626:                                       ; preds = %for.end624
  %511 = load ptr, ptr %col_map_offd_P, align 8, !tbaa !4
  %512 = load ptr, ptr %P, align 8, !tbaa !4
  %col_map_offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %512, i32 0, i32 12
  store ptr %511, ptr %col_map_offd, align 8, !tbaa !174
  %513 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %514 = load ptr, ptr %P_offd, align 8, !tbaa !4
  %num_cols627 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %514, i32 0, i32 4
  store i32 %513, ptr %num_cols627, align 4, !tbaa !167
  br label %if.end628

if.end628:                                        ; preds = %if.then626, %for.end624
  %515 = load ptr, ptr %P, align 8, !tbaa !4
  %516 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %517 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %518 = load ptr, ptr %tmp_map_offd, align 8, !tbaa !4
  %call629 = call i32 @hypre_GetCommPkgRTFromCommPkgA(ptr noundef %515, ptr noundef %516, ptr noundef %517, ptr noundef %518)
  %519 = load ptr, ptr %P, align 8, !tbaa !4
  %520 = load ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  store ptr %519, ptr %520, align 8, !tbaa !4
  %521 = load ptr, ptr %tmp_map_offd, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %521, i32 noundef 0)
  store ptr null, ptr %tmp_map_offd, align 8, !tbaa !4
  %522 = load ptr, ptr %CF_marker_offd, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %522, i32 noundef 0)
  store ptr null, ptr %CF_marker_offd, align 8, !tbaa !4
  %523 = load ptr, ptr %int_buf_data, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %523, i32 noundef 0)
  store ptr null, ptr %int_buf_data, align 8, !tbaa !4
  %524 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %524, i32 noundef 0)
  store ptr null, ptr %fine_to_coarse, align 8, !tbaa !4
  %525 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %525, i32 noundef 0)
  store ptr null, ptr %coarse_counter, align 8, !tbaa !4
  %526 = load ptr, ptr %jj_count, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %526, i32 noundef 0)
  store ptr null, ptr %jj_count, align 8, !tbaa !4
  %527 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %527, i32 noundef 0)
  store ptr null, ptr %jj_count_offd, align 8, !tbaa !4
  call void @llvm.lifetime.end.p0(i64 8, ptr %wall_time) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %int_buf_data) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %rest) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ne) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ns) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %index) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_sends) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_threads) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %one) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %start) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jl) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j7) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i1) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i6) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_cols_P_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %total_global_cpts) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %coarse_shift) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %coarse_counter) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %fine_to_coarse) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n_fine) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %start_indexing) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %jj_count_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %jj_count) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj_counter_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_marker_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_marker) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %P_offd_size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %P_diag_size) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %CF_marker_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_map_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %col_map_offd_P) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a_diag) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_cols_A_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %memory_location_P) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm_handle) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm_pkg) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  ret i32 0
}

declare double @time_getWallclockSeconds() #2

declare ptr @hypre_ParCSRCommHandleCreate(i32 noundef, ptr noundef, ptr noundef, ptr noundef) #2

declare i32 @hypre_ParCSRCommHandleDestroy(ptr noundef) #2

declare i32 @hypre_printf(ptr noundef, ...) #2

declare i32 @fflush(ptr noundef) #2

declare i32 @hypre_BinarySearch(ptr noundef, i32 noundef, i32 noundef) #2

declare i32 @hypre_GetCommPkgRTFromCommPkgA(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBuildPDRS(ptr noundef %A, ptr noundef %CF_marker, ptr noundef %num_cpts_global, i32 noundef %blk_size, i32 noundef %reserved_coarse_size, i32 noundef %debug_flag, ptr noundef %P_ptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %CF_marker.addr = alloca ptr, align 8
  %num_cpts_global.addr = alloca ptr, align 8
  %blk_size.addr = alloca i32, align 4
  %reserved_coarse_size.addr = alloca i32, align 4
  %debug_flag.addr = alloca i32, align 4
  %P_ptr.addr = alloca ptr, align 8
  %comm = alloca ptr, align 8
  %comm_pkg = alloca ptr, align 8
  %comm_handle = alloca ptr, align 8
  %A_diag = alloca ptr, align 8
  %A_diag_data = alloca ptr, align 8
  %A_diag_i = alloca ptr, align 8
  %A_diag_j = alloca ptr, align 8
  %A_offd = alloca ptr, align 8
  %A_offd_data = alloca ptr, align 8
  %A_offd_i = alloca ptr, align 8
  %A_offd_j = alloca ptr, align 8
  %num_cols_A_offd = alloca i32, align 4
  %a_diag = alloca ptr, align 8
  %P = alloca ptr, align 8
  %col_map_offd_P = alloca ptr, align 8
  %tmp_map_offd = alloca ptr, align 8
  %CF_marker_offd = alloca ptr, align 8
  %P_diag = alloca ptr, align 8
  %P_offd = alloca ptr, align 8
  %P_diag_data = alloca ptr, align 8
  %P_diag_i = alloca ptr, align 8
  %P_diag_j = alloca ptr, align 8
  %P_offd_data = alloca ptr, align 8
  %P_offd_i = alloca ptr, align 8
  %P_offd_j = alloca ptr, align 8
  %P_diag_size = alloca i32, align 4
  %P_offd_size = alloca i32, align 4
  %P_marker = alloca ptr, align 8
  %P_marker_offd = alloca ptr, align 8
  %jj_counter = alloca i32, align 4
  %jj_counter_offd = alloca i32, align 4
  %jj_count = alloca ptr, align 8
  %jj_count_offd = alloca ptr, align 8
  %start_indexing = alloca i32, align 4
  %n_fine = alloca i32, align 4
  %fine_to_coarse = alloca ptr, align 8
  %coarse_counter = alloca ptr, align 8
  %coarse_shift = alloca i32, align 4
  %total_global_cpts = alloca i32, align 4
  %num_cols_P_offd = alloca i32, align 4
  %i6 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j7 = alloca i32, align 4
  %jl = alloca i32, align 4
  %jj = alloca i32, align 4
  %start = alloca i32, align 4
  %one = alloca double, align 8
  %my_id = alloca i32, align 4
  %num_procs = alloca i32, align 4
  %num_threads = alloca i32, align 4
  %num_sends = alloca i32, align 4
  %index = alloca i32, align 4
  %ns = alloca i32, align 4
  %ne = alloca i32, align 4
  %size = alloca i32, align 4
  %rest = alloca i32, align 4
  %int_buf_data = alloca ptr, align 8
  %wall_time = alloca double, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store ptr %num_cpts_global, ptr %num_cpts_global.addr, align 8, !tbaa !4
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  store i32 %reserved_coarse_size, ptr %reserved_coarse_size.addr, align 4, !tbaa !92
  store i32 %debug_flag, ptr %debug_flag.addr, align 4, !tbaa !92
  store ptr %P_ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %comm1, align 8, !tbaa !160
  store ptr %1, ptr %comm, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm_pkg) #6
  %2 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm_pkg2 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %2, i32 0, i32 16
  %3 = load ptr, ptr %comm_pkg2, align 8, !tbaa !187
  store ptr %3, ptr %comm_pkg, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm_handle) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag) #6
  %4 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %4, i32 0, i32 8
  %5 = load ptr, ptr %diag, align 8, !tbaa !149
  store ptr %5, ptr %A_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_data) #6
  %6 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %6, i32 0, i32 10
  %7 = load ptr, ptr %data, align 8, !tbaa !165
  store ptr %7, ptr %A_diag_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_i) #6
  %8 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %i = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %8, i32 0, i32 0
  %9 = load ptr, ptr %i, align 8, !tbaa !163
  store ptr %9, ptr %A_diag_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_j) #6
  %10 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %j = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %10, i32 0, i32 1
  %11 = load ptr, ptr %j, align 8, !tbaa !164
  store ptr %11, ptr %A_diag_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd) #6
  %12 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %12, i32 0, i32 9
  %13 = load ptr, ptr %offd, align 8, !tbaa !162
  store ptr %13, ptr %A_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_data) #6
  %14 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %data3 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %14, i32 0, i32 10
  %15 = load ptr, ptr %data3, align 8, !tbaa !165
  store ptr %15, ptr %A_offd_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_i) #6
  %16 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %i4 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %16, i32 0, i32 0
  %17 = load ptr, ptr %i4, align 8, !tbaa !163
  store ptr %17, ptr %A_offd_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_j) #6
  %18 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %j5 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %18, i32 0, i32 1
  %19 = load ptr, ptr %j5, align 8, !tbaa !164
  store ptr %19, ptr %A_offd_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_cols_A_offd) #6
  %20 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %num_cols = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %20, i32 0, i32 4
  %21 = load i32, ptr %num_cols, align 4, !tbaa !167
  store i32 %21, ptr %num_cols_A_offd, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %a_diag) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %col_map_offd_P) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_map_offd) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %CF_marker_offd) #6
  store ptr null, ptr %CF_marker_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_j) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd_i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd_j) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %P_diag_size) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %P_offd_size) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_marker) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_marker_offd) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj_counter_offd) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %jj_count) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %jj_count_offd) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %start_indexing) #6
  store i32 0, ptr %start_indexing, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %n_fine) #6
  %22 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %22, i32 0, i32 3
  %23 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %23, ptr %n_fine, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %fine_to_coarse) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %coarse_counter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %coarse_shift) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %total_global_cpts) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_cols_P_offd) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i6) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i1) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j7) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jl) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %start) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %one) #6
  store double 1.000000e+00, ptr %one, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_threads) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_sends) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %index) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ns) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ne) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %size) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %rest) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %int_buf_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %wall_time) #6
  %24 = load ptr, ptr %comm, align 8, !tbaa !4
  %call = call i32 @hypre_MPI_Comm_size(ptr noundef %24, ptr noundef %num_procs)
  %25 = load ptr, ptr %comm, align 8, !tbaa !4
  %call8 = call i32 @hypre_MPI_Comm_rank(ptr noundef %25, ptr noundef %my_id)
  store i32 1, ptr %num_threads, align 4, !tbaa !92
  %26 = load i32, ptr %my_id, align 4, !tbaa !92
  %27 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub = sub nsw i32 %27, 1
  %cmp = icmp eq i32 %26, %sub
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %28 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds i32, ptr %28, i64 1
  %29 = load i32, ptr %arrayidx, align 4, !tbaa !92
  store i32 %29, ptr %total_global_cpts, align 4, !tbaa !92
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %30 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub9 = sub nsw i32 %30, 1
  %31 = load ptr, ptr %comm, align 8, !tbaa !4
  %call10 = call i32 @hypre_MPI_Bcast(ptr noundef %total_global_cpts, i32 noundef 1, ptr noundef @ompi_mpi_int, i32 noundef %sub9, ptr noundef %31)
  %32 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp11 = icmp slt i32 %32, 0
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end
  %33 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %sub13 = sub nsw i32 0, %33
  store i32 %sub13, ptr %debug_flag.addr, align 4, !tbaa !92
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end
  %34 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp15 = icmp eq i32 %34, 4
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end14
  %call17 = call double @time_getWallclockSeconds()
  store double %call17, ptr %wall_time, align 8, !tbaa !161
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end14
  %35 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %tobool = icmp ne i32 %35, 0
  br i1 %tobool, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end18
  %36 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %conv = sext i32 %36 to i64
  %call20 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call20, ptr %CF_marker_offd, align 8, !tbaa !4
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end18
  %37 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %tobool22 = icmp ne ptr %37, null
  br i1 %tobool22, label %if.end26, label %if.then23

if.then23:                                        ; preds = %if.end21
  %38 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call24 = call i32 @hypre_MatvecCommPkgCreate(ptr noundef %38)
  %39 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm_pkg25 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %39, i32 0, i32 16
  %40 = load ptr, ptr %comm_pkg25, align 8, !tbaa !187
  store ptr %40, ptr %comm_pkg, align 8, !tbaa !4
  br label %if.end26

if.end26:                                         ; preds = %if.then23, %if.end21
  %41 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %num_sends27 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %41, i32 0, i32 2
  %42 = load i32, ptr %num_sends27, align 4, !tbaa !188
  store i32 %42, ptr %num_sends, align 4, !tbaa !92
  %43 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %43, i32 0, i32 4
  %44 = load ptr, ptr %send_map_starts, align 8, !tbaa !190
  %45 = load i32, ptr %num_sends, align 4, !tbaa !92
  %idxprom = sext i32 %45 to i64
  %arrayidx28 = getelementptr inbounds i32, ptr %44, i64 %idxprom
  %46 = load i32, ptr %arrayidx28, align 4, !tbaa !92
  %conv29 = sext i32 %46 to i64
  %call30 = call ptr @hypre_CAlloc(i64 noundef %conv29, i64 noundef 4, i32 noundef 0)
  store ptr %call30, ptr %int_buf_data, align 8, !tbaa !4
  store i32 0, ptr %index, align 4, !tbaa !92
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc50, %if.end26
  %47 = load i32, ptr %i6, align 4, !tbaa !92
  %48 = load i32, ptr %num_sends, align 4, !tbaa !92
  %cmp31 = icmp slt i32 %47, %48
  br i1 %cmp31, label %for.body, label %for.end52

for.body:                                         ; preds = %for.cond
  %49 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts33 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %49, i32 0, i32 4
  %50 = load ptr, ptr %send_map_starts33, align 8, !tbaa !190
  %51 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom34 = sext i32 %51 to i64
  %arrayidx35 = getelementptr inbounds i32, ptr %50, i64 %idxprom34
  %52 = load i32, ptr %arrayidx35, align 4, !tbaa !92
  store i32 %52, ptr %start, align 4, !tbaa !92
  %53 = load i32, ptr %start, align 4, !tbaa !92
  store i32 %53, ptr %j7, align 4, !tbaa !92
  br label %for.cond36

for.cond36:                                       ; preds = %for.inc, %for.body
  %54 = load i32, ptr %j7, align 4, !tbaa !92
  %55 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts37 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %55, i32 0, i32 4
  %56 = load ptr, ptr %send_map_starts37, align 8, !tbaa !190
  %57 = load i32, ptr %i6, align 4, !tbaa !92
  %add = add nsw i32 %57, 1
  %idxprom38 = sext i32 %add to i64
  %arrayidx39 = getelementptr inbounds i32, ptr %56, i64 %idxprom38
  %58 = load i32, ptr %arrayidx39, align 4, !tbaa !92
  %cmp40 = icmp slt i32 %54, %58
  br i1 %cmp40, label %for.body42, label %for.end

for.body42:                                       ; preds = %for.cond36
  %59 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %60 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_elmts = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %60, i32 0, i32 5
  %61 = load ptr, ptr %send_map_elmts, align 8, !tbaa !191
  %62 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom43 = sext i32 %62 to i64
  %arrayidx44 = getelementptr inbounds i32, ptr %61, i64 %idxprom43
  %63 = load i32, ptr %arrayidx44, align 4, !tbaa !92
  %idxprom45 = sext i32 %63 to i64
  %arrayidx46 = getelementptr inbounds i32, ptr %59, i64 %idxprom45
  %64 = load i32, ptr %arrayidx46, align 4, !tbaa !92
  %65 = load ptr, ptr %int_buf_data, align 8, !tbaa !4
  %66 = load i32, ptr %index, align 4, !tbaa !92
  %inc = add nsw i32 %66, 1
  store i32 %inc, ptr %index, align 4, !tbaa !92
  %idxprom47 = sext i32 %66 to i64
  %arrayidx48 = getelementptr inbounds i32, ptr %65, i64 %idxprom47
  store i32 %64, ptr %arrayidx48, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body42
  %67 = load i32, ptr %j7, align 4, !tbaa !92
  %inc49 = add nsw i32 %67, 1
  store i32 %inc49, ptr %j7, align 4, !tbaa !92
  br label %for.cond36, !llvm.loop !216

for.end:                                          ; preds = %for.cond36
  br label %for.inc50

for.inc50:                                        ; preds = %for.end
  %68 = load i32, ptr %i6, align 4, !tbaa !92
  %inc51 = add nsw i32 %68, 1
  store i32 %inc51, ptr %i6, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !217

for.end52:                                        ; preds = %for.cond
  %69 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %70 = load ptr, ptr %int_buf_data, align 8, !tbaa !4
  %71 = load ptr, ptr %CF_marker_offd, align 8, !tbaa !4
  %call53 = call ptr @hypre_ParCSRCommHandleCreate(i32 noundef 11, ptr noundef %69, ptr noundef %70, ptr noundef %71)
  store ptr %call53, ptr %comm_handle, align 8, !tbaa !4
  %72 = load ptr, ptr %comm_handle, align 8, !tbaa !4
  %call54 = call i32 @hypre_ParCSRCommHandleDestroy(ptr noundef %72)
  %73 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp55 = icmp eq i32 %73, 4
  br i1 %cmp55, label %if.then57, label %if.end62

if.then57:                                        ; preds = %for.end52
  %call58 = call double @time_getWallclockSeconds()
  %74 = load double, ptr %wall_time, align 8, !tbaa !161
  %sub59 = fsub double %call58, %74
  store double %sub59, ptr %wall_time, align 8, !tbaa !161
  %75 = load i32, ptr %my_id, align 4, !tbaa !92
  %76 = load double, ptr %wall_time, align 8, !tbaa !161
  %call60 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.4, i32 noundef %75, double noundef %76)
  %call61 = call i32 @fflush(ptr noundef null)
  br label %if.end62

if.end62:                                         ; preds = %if.then57, %for.end52
  %77 = load i32, ptr %num_threads, align 4, !tbaa !92
  %conv63 = sext i32 %77 to i64
  %call64 = call ptr @hypre_CAlloc(i64 noundef %conv63, i64 noundef 4, i32 noundef 0)
  store ptr %call64, ptr %coarse_counter, align 8, !tbaa !4
  %78 = load i32, ptr %num_threads, align 4, !tbaa !92
  %conv65 = sext i32 %78 to i64
  %call66 = call ptr @hypre_CAlloc(i64 noundef %conv65, i64 noundef 4, i32 noundef 0)
  store ptr %call66, ptr %jj_count, align 8, !tbaa !4
  %79 = load i32, ptr %num_threads, align 4, !tbaa !92
  %conv67 = sext i32 %79 to i64
  %call68 = call ptr @hypre_CAlloc(i64 noundef %conv67, i64 noundef 4, i32 noundef 0)
  store ptr %call68, ptr %jj_count_offd, align 8, !tbaa !4
  %80 = load i32, ptr %n_fine, align 4, !tbaa !92
  %conv69 = sext i32 %80 to i64
  %call70 = call ptr @hypre_CAlloc(i64 noundef %conv69, i64 noundef 4, i32 noundef 0)
  store ptr %call70, ptr %fine_to_coarse, align 8, !tbaa !4
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond71

for.cond71:                                       ; preds = %for.inc77, %if.end62
  %81 = load i32, ptr %i6, align 4, !tbaa !92
  %82 = load i32, ptr %n_fine, align 4, !tbaa !92
  %cmp72 = icmp slt i32 %81, %82
  br i1 %cmp72, label %for.body74, label %for.end79

for.body74:                                       ; preds = %for.cond71
  %83 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %84 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom75 = sext i32 %84 to i64
  %arrayidx76 = getelementptr inbounds i32, ptr %83, i64 %idxprom75
  store i32 -1, ptr %arrayidx76, align 4, !tbaa !92
  br label %for.inc77

for.inc77:                                        ; preds = %for.body74
  %85 = load i32, ptr %i6, align 4, !tbaa !92
  %inc78 = add nsw i32 %85, 1
  store i32 %inc78, ptr %i6, align 4, !tbaa !92
  br label %for.cond71, !llvm.loop !218

for.end79:                                        ; preds = %for.cond71
  %86 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %86, ptr %jj_counter, align 4, !tbaa !92
  %87 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %87, ptr %jj_counter_offd, align 4, !tbaa !92
  store i32 0, ptr %j7, align 4, !tbaa !92
  br label %for.cond80

for.cond80:                                       ; preds = %for.inc174, %for.end79
  %88 = load i32, ptr %j7, align 4, !tbaa !92
  %89 = load i32, ptr %num_threads, align 4, !tbaa !92
  %cmp81 = icmp slt i32 %88, %89
  br i1 %cmp81, label %for.body83, label %for.end176

for.body83:                                       ; preds = %for.cond80
  %90 = load i32, ptr %n_fine, align 4, !tbaa !92
  %91 = load i32, ptr %num_threads, align 4, !tbaa !92
  %div = sdiv i32 %90, %91
  store i32 %div, ptr %size, align 4, !tbaa !92
  %92 = load i32, ptr %n_fine, align 4, !tbaa !92
  %93 = load i32, ptr %size, align 4, !tbaa !92
  %94 = load i32, ptr %num_threads, align 4, !tbaa !92
  %mul = mul nsw i32 %93, %94
  %sub84 = sub nsw i32 %92, %mul
  store i32 %sub84, ptr %rest, align 4, !tbaa !92
  %95 = load i32, ptr %j7, align 4, !tbaa !92
  %96 = load i32, ptr %rest, align 4, !tbaa !92
  %cmp85 = icmp slt i32 %95, %96
  br i1 %cmp85, label %if.then87, label %if.else

if.then87:                                        ; preds = %for.body83
  %97 = load i32, ptr %j7, align 4, !tbaa !92
  %98 = load i32, ptr %size, align 4, !tbaa !92
  %mul88 = mul nsw i32 %97, %98
  %99 = load i32, ptr %j7, align 4, !tbaa !92
  %add89 = add nsw i32 %mul88, %99
  store i32 %add89, ptr %ns, align 4, !tbaa !92
  %100 = load i32, ptr %j7, align 4, !tbaa !92
  %add90 = add nsw i32 %100, 1
  %101 = load i32, ptr %size, align 4, !tbaa !92
  %mul91 = mul nsw i32 %add90, %101
  %102 = load i32, ptr %j7, align 4, !tbaa !92
  %add92 = add nsw i32 %mul91, %102
  %add93 = add nsw i32 %add92, 1
  store i32 %add93, ptr %ne, align 4, !tbaa !92
  br label %if.end99

if.else:                                          ; preds = %for.body83
  %103 = load i32, ptr %j7, align 4, !tbaa !92
  %104 = load i32, ptr %size, align 4, !tbaa !92
  %mul94 = mul nsw i32 %103, %104
  %105 = load i32, ptr %rest, align 4, !tbaa !92
  %add95 = add nsw i32 %mul94, %105
  store i32 %add95, ptr %ns, align 4, !tbaa !92
  %106 = load i32, ptr %j7, align 4, !tbaa !92
  %add96 = add nsw i32 %106, 1
  %107 = load i32, ptr %size, align 4, !tbaa !92
  %mul97 = mul nsw i32 %add96, %107
  %108 = load i32, ptr %rest, align 4, !tbaa !92
  %add98 = add nsw i32 %mul97, %108
  store i32 %add98, ptr %ne, align 4, !tbaa !92
  br label %if.end99

if.end99:                                         ; preds = %if.else, %if.then87
  %109 = load i32, ptr %ns, align 4, !tbaa !92
  store i32 %109, ptr %i6, align 4, !tbaa !92
  br label %for.cond100

for.cond100:                                      ; preds = %for.inc171, %if.end99
  %110 = load i32, ptr %i6, align 4, !tbaa !92
  %111 = load i32, ptr %ne, align 4, !tbaa !92
  %cmp101 = icmp slt i32 %110, %111
  br i1 %cmp101, label %for.body103, label %for.end173

for.body103:                                      ; preds = %for.cond100
  %112 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %113 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom104 = sext i32 %113 to i64
  %arrayidx105 = getelementptr inbounds i32, ptr %112, i64 %idxprom104
  %114 = load i32, ptr %arrayidx105, align 4, !tbaa !92
  %cmp106 = icmp sge i32 %114, 0
  br i1 %cmp106, label %if.then108, label %if.else119

if.then108:                                       ; preds = %for.body103
  %115 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %116 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom109 = sext i32 %116 to i64
  %arrayidx110 = getelementptr inbounds i32, ptr %115, i64 %idxprom109
  %117 = load i32, ptr %arrayidx110, align 4, !tbaa !92
  %inc111 = add nsw i32 %117, 1
  store i32 %inc111, ptr %arrayidx110, align 4, !tbaa !92
  %118 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %119 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom112 = sext i32 %119 to i64
  %arrayidx113 = getelementptr inbounds i32, ptr %118, i64 %idxprom112
  %120 = load i32, ptr %arrayidx113, align 4, !tbaa !92
  %121 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %122 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom114 = sext i32 %122 to i64
  %arrayidx115 = getelementptr inbounds i32, ptr %121, i64 %idxprom114
  store i32 %120, ptr %arrayidx115, align 4, !tbaa !92
  %123 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %124 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom116 = sext i32 %124 to i64
  %arrayidx117 = getelementptr inbounds i32, ptr %123, i64 %idxprom116
  %125 = load i32, ptr %arrayidx117, align 4, !tbaa !92
  %inc118 = add nsw i32 %125, 1
  store i32 %inc118, ptr %arrayidx117, align 4, !tbaa !92
  br label %if.end170

if.else119:                                       ; preds = %for.body103
  %126 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %127 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom120 = sext i32 %127 to i64
  %arrayidx121 = getelementptr inbounds i32, ptr %126, i64 %idxprom120
  %128 = load i32, ptr %arrayidx121, align 4, !tbaa !92
  store i32 %128, ptr %jj, align 4, !tbaa !92
  br label %for.cond122

for.cond122:                                      ; preds = %for.inc140, %if.else119
  %129 = load i32, ptr %jj, align 4, !tbaa !92
  %130 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %131 = load i32, ptr %i6, align 4, !tbaa !92
  %add123 = add nsw i32 %131, 1
  %idxprom124 = sext i32 %add123 to i64
  %arrayidx125 = getelementptr inbounds i32, ptr %130, i64 %idxprom124
  %132 = load i32, ptr %arrayidx125, align 4, !tbaa !92
  %cmp126 = icmp slt i32 %129, %132
  br i1 %cmp126, label %for.body128, label %for.end142

for.body128:                                      ; preds = %for.cond122
  %133 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %134 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom129 = sext i32 %134 to i64
  %arrayidx130 = getelementptr inbounds i32, ptr %133, i64 %idxprom129
  %135 = load i32, ptr %arrayidx130, align 4, !tbaa !92
  store i32 %135, ptr %i1, align 4, !tbaa !92
  %136 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %137 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom131 = sext i32 %137 to i64
  %arrayidx132 = getelementptr inbounds i32, ptr %136, i64 %idxprom131
  %138 = load i32, ptr %arrayidx132, align 4, !tbaa !92
  %cmp133 = icmp sge i32 %138, 0
  br i1 %cmp133, label %if.then135, label %if.end139

if.then135:                                       ; preds = %for.body128
  %139 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %140 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom136 = sext i32 %140 to i64
  %arrayidx137 = getelementptr inbounds i32, ptr %139, i64 %idxprom136
  %141 = load i32, ptr %arrayidx137, align 4, !tbaa !92
  %inc138 = add nsw i32 %141, 1
  store i32 %inc138, ptr %arrayidx137, align 4, !tbaa !92
  br label %if.end139

if.end139:                                        ; preds = %if.then135, %for.body128
  br label %for.inc140

for.inc140:                                       ; preds = %if.end139
  %142 = load i32, ptr %jj, align 4, !tbaa !92
  %inc141 = add nsw i32 %142, 1
  store i32 %inc141, ptr %jj, align 4, !tbaa !92
  br label %for.cond122, !llvm.loop !219

for.end142:                                       ; preds = %for.cond122
  %143 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp143 = icmp sgt i32 %143, 1
  br i1 %cmp143, label %if.then145, label %if.end169

if.then145:                                       ; preds = %for.end142
  %144 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %145 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom146 = sext i32 %145 to i64
  %arrayidx147 = getelementptr inbounds i32, ptr %144, i64 %idxprom146
  %146 = load i32, ptr %arrayidx147, align 4, !tbaa !92
  store i32 %146, ptr %jj, align 4, !tbaa !92
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc166, %if.then145
  %147 = load i32, ptr %jj, align 4, !tbaa !92
  %148 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %149 = load i32, ptr %i6, align 4, !tbaa !92
  %add149 = add nsw i32 %149, 1
  %idxprom150 = sext i32 %add149 to i64
  %arrayidx151 = getelementptr inbounds i32, ptr %148, i64 %idxprom150
  %150 = load i32, ptr %arrayidx151, align 4, !tbaa !92
  %cmp152 = icmp slt i32 %147, %150
  br i1 %cmp152, label %for.body154, label %for.end168

for.body154:                                      ; preds = %for.cond148
  %151 = load ptr, ptr %A_offd_j, align 8, !tbaa !4
  %152 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom155 = sext i32 %152 to i64
  %arrayidx156 = getelementptr inbounds i32, ptr %151, i64 %idxprom155
  %153 = load i32, ptr %arrayidx156, align 4, !tbaa !92
  store i32 %153, ptr %i1, align 4, !tbaa !92
  %154 = load ptr, ptr %CF_marker_offd, align 8, !tbaa !4
  %155 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom157 = sext i32 %155 to i64
  %arrayidx158 = getelementptr inbounds i32, ptr %154, i64 %idxprom157
  %156 = load i32, ptr %arrayidx158, align 4, !tbaa !92
  %cmp159 = icmp sge i32 %156, 0
  br i1 %cmp159, label %if.then161, label %if.end165

if.then161:                                       ; preds = %for.body154
  %157 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %158 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom162 = sext i32 %158 to i64
  %arrayidx163 = getelementptr inbounds i32, ptr %157, i64 %idxprom162
  %159 = load i32, ptr %arrayidx163, align 4, !tbaa !92
  %inc164 = add nsw i32 %159, 1
  store i32 %inc164, ptr %arrayidx163, align 4, !tbaa !92
  br label %if.end165

if.end165:                                        ; preds = %if.then161, %for.body154
  br label %for.inc166

for.inc166:                                       ; preds = %if.end165
  %160 = load i32, ptr %jj, align 4, !tbaa !92
  %inc167 = add nsw i32 %160, 1
  store i32 %inc167, ptr %jj, align 4, !tbaa !92
  br label %for.cond148, !llvm.loop !220

for.end168:                                       ; preds = %for.cond148
  br label %if.end169

if.end169:                                        ; preds = %for.end168, %for.end142
  br label %if.end170

if.end170:                                        ; preds = %if.end169, %if.then108
  br label %for.inc171

for.inc171:                                       ; preds = %if.end170
  %161 = load i32, ptr %i6, align 4, !tbaa !92
  %inc172 = add nsw i32 %161, 1
  store i32 %inc172, ptr %i6, align 4, !tbaa !92
  br label %for.cond100, !llvm.loop !221

for.end173:                                       ; preds = %for.cond100
  br label %for.inc174

for.inc174:                                       ; preds = %for.end173
  %162 = load i32, ptr %j7, align 4, !tbaa !92
  %inc175 = add nsw i32 %162, 1
  store i32 %inc175, ptr %j7, align 4, !tbaa !92
  br label %for.cond80, !llvm.loop !222

for.end176:                                       ; preds = %for.cond80
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond177

for.cond177:                                      ; preds = %for.inc200, %for.end176
  %163 = load i32, ptr %i6, align 4, !tbaa !92
  %164 = load i32, ptr %num_threads, align 4, !tbaa !92
  %sub178 = sub nsw i32 %164, 1
  %cmp179 = icmp slt i32 %163, %sub178
  br i1 %cmp179, label %for.body181, label %for.end202

for.body181:                                      ; preds = %for.cond177
  %165 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %166 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom182 = sext i32 %166 to i64
  %arrayidx183 = getelementptr inbounds i32, ptr %165, i64 %idxprom182
  %167 = load i32, ptr %arrayidx183, align 4, !tbaa !92
  %168 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %169 = load i32, ptr %i6, align 4, !tbaa !92
  %add184 = add nsw i32 %169, 1
  %idxprom185 = sext i32 %add184 to i64
  %arrayidx186 = getelementptr inbounds i32, ptr %168, i64 %idxprom185
  %170 = load i32, ptr %arrayidx186, align 4, !tbaa !92
  %add187 = add nsw i32 %170, %167
  store i32 %add187, ptr %arrayidx186, align 4, !tbaa !92
  %171 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %172 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom188 = sext i32 %172 to i64
  %arrayidx189 = getelementptr inbounds i32, ptr %171, i64 %idxprom188
  %173 = load i32, ptr %arrayidx189, align 4, !tbaa !92
  %174 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %175 = load i32, ptr %i6, align 4, !tbaa !92
  %add190 = add nsw i32 %175, 1
  %idxprom191 = sext i32 %add190 to i64
  %arrayidx192 = getelementptr inbounds i32, ptr %174, i64 %idxprom191
  %176 = load i32, ptr %arrayidx192, align 4, !tbaa !92
  %add193 = add nsw i32 %176, %173
  store i32 %add193, ptr %arrayidx192, align 4, !tbaa !92
  %177 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %178 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom194 = sext i32 %178 to i64
  %arrayidx195 = getelementptr inbounds i32, ptr %177, i64 %idxprom194
  %179 = load i32, ptr %arrayidx195, align 4, !tbaa !92
  %180 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %181 = load i32, ptr %i6, align 4, !tbaa !92
  %add196 = add nsw i32 %181, 1
  %idxprom197 = sext i32 %add196 to i64
  %arrayidx198 = getelementptr inbounds i32, ptr %180, i64 %idxprom197
  %182 = load i32, ptr %arrayidx198, align 4, !tbaa !92
  %add199 = add nsw i32 %182, %179
  store i32 %add199, ptr %arrayidx198, align 4, !tbaa !92
  br label %for.inc200

for.inc200:                                       ; preds = %for.body181
  %183 = load i32, ptr %i6, align 4, !tbaa !92
  %inc201 = add nsw i32 %183, 1
  store i32 %inc201, ptr %i6, align 4, !tbaa !92
  br label %for.cond177, !llvm.loop !223

for.end202:                                       ; preds = %for.cond177
  %184 = load i32, ptr %num_threads, align 4, !tbaa !92
  %sub203 = sub nsw i32 %184, 1
  store i32 %sub203, ptr %i6, align 4, !tbaa !92
  %185 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %186 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom204 = sext i32 %186 to i64
  %arrayidx205 = getelementptr inbounds i32, ptr %185, i64 %idxprom204
  %187 = load i32, ptr %arrayidx205, align 4, !tbaa !92
  store i32 %187, ptr %jj_counter, align 4, !tbaa !92
  %188 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %189 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom206 = sext i32 %189 to i64
  %arrayidx207 = getelementptr inbounds i32, ptr %188, i64 %idxprom206
  %190 = load i32, ptr %arrayidx207, align 4, !tbaa !92
  store i32 %190, ptr %jj_counter_offd, align 4, !tbaa !92
  %191 = load i32, ptr %jj_counter, align 4, !tbaa !92
  store i32 %191, ptr %P_diag_size, align 4, !tbaa !92
  %192 = load i32, ptr %n_fine, align 4, !tbaa !92
  %add208 = add nsw i32 %192, 1
  %conv209 = sext i32 %add208 to i64
  %call210 = call ptr @hypre_CAlloc(i64 noundef %conv209, i64 noundef 4, i32 noundef 0)
  store ptr %call210, ptr %P_diag_i, align 8, !tbaa !4
  %193 = load i32, ptr %P_diag_size, align 4, !tbaa !92
  %conv211 = sext i32 %193 to i64
  %call212 = call ptr @hypre_CAlloc(i64 noundef %conv211, i64 noundef 4, i32 noundef 0)
  store ptr %call212, ptr %P_diag_j, align 8, !tbaa !4
  %194 = load i32, ptr %P_diag_size, align 4, !tbaa !92
  %conv213 = sext i32 %194 to i64
  %call214 = call ptr @hypre_CAlloc(i64 noundef %conv213, i64 noundef 8, i32 noundef 0)
  store ptr %call214, ptr %P_diag_data, align 8, !tbaa !4
  %195 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %196 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %197 = load i32, ptr %n_fine, align 4, !tbaa !92
  %idxprom215 = sext i32 %197 to i64
  %arrayidx216 = getelementptr inbounds i32, ptr %196, i64 %idxprom215
  store i32 %195, ptr %arrayidx216, align 4, !tbaa !92
  %198 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  store i32 %198, ptr %P_offd_size, align 4, !tbaa !92
  %199 = load i32, ptr %n_fine, align 4, !tbaa !92
  %add217 = add nsw i32 %199, 1
  %conv218 = sext i32 %add217 to i64
  %call219 = call ptr @hypre_CAlloc(i64 noundef %conv218, i64 noundef 4, i32 noundef 0)
  store ptr %call219, ptr %P_offd_i, align 8, !tbaa !4
  %200 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %conv220 = sext i32 %200 to i64
  %call221 = call ptr @hypre_CAlloc(i64 noundef %conv220, i64 noundef 4, i32 noundef 0)
  store ptr %call221, ptr %P_offd_j, align 8, !tbaa !4
  %201 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %conv222 = sext i32 %201 to i64
  %call223 = call ptr @hypre_CAlloc(i64 noundef %conv222, i64 noundef 8, i32 noundef 0)
  store ptr %call223, ptr %P_offd_data, align 8, !tbaa !4
  %202 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %202, ptr %jj_counter, align 4, !tbaa !92
  %203 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %203, ptr %jj_counter_offd, align 4, !tbaa !92
  %204 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp224 = icmp eq i32 %204, 4
  br i1 %cmp224, label %if.then226, label %if.end231

if.then226:                                       ; preds = %for.end202
  %call227 = call double @time_getWallclockSeconds()
  %205 = load double, ptr %wall_time, align 8, !tbaa !161
  %sub228 = fsub double %call227, %205
  store double %sub228, ptr %wall_time, align 8, !tbaa !161
  %206 = load i32, ptr %my_id, align 4, !tbaa !92
  %207 = load double, ptr %wall_time, align 8, !tbaa !161
  %call229 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.5, i32 noundef %206, double noundef %207)
  %call230 = call i32 @fflush(ptr noundef null)
  br label %if.end231

if.end231:                                        ; preds = %if.then226, %for.end202
  %208 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp232 = icmp eq i32 %208, 4
  br i1 %cmp232, label %if.then234, label %if.end236

if.then234:                                       ; preds = %if.end231
  %call235 = call double @time_getWallclockSeconds()
  store double %call235, ptr %wall_time, align 8, !tbaa !161
  br label %if.end236

if.end236:                                        ; preds = %if.then234, %if.end231
  store i32 0, ptr %j7, align 4, !tbaa !92
  br label %for.cond237

for.cond237:                                      ; preds = %for.inc277, %if.end236
  %209 = load i32, ptr %j7, align 4, !tbaa !92
  %210 = load i32, ptr %num_threads, align 4, !tbaa !92
  %cmp238 = icmp slt i32 %209, %210
  br i1 %cmp238, label %for.body240, label %for.end279

for.body240:                                      ; preds = %for.cond237
  store i32 0, ptr %coarse_shift, align 4, !tbaa !92
  %211 = load i32, ptr %j7, align 4, !tbaa !92
  %cmp241 = icmp sgt i32 %211, 0
  br i1 %cmp241, label %if.then243, label %if.end247

if.then243:                                       ; preds = %for.body240
  %212 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %213 = load i32, ptr %j7, align 4, !tbaa !92
  %sub244 = sub nsw i32 %213, 1
  %idxprom245 = sext i32 %sub244 to i64
  %arrayidx246 = getelementptr inbounds i32, ptr %212, i64 %idxprom245
  %214 = load i32, ptr %arrayidx246, align 4, !tbaa !92
  store i32 %214, ptr %coarse_shift, align 4, !tbaa !92
  br label %if.end247

if.end247:                                        ; preds = %if.then243, %for.body240
  %215 = load i32, ptr %n_fine, align 4, !tbaa !92
  %216 = load i32, ptr %num_threads, align 4, !tbaa !92
  %div248 = sdiv i32 %215, %216
  store i32 %div248, ptr %size, align 4, !tbaa !92
  %217 = load i32, ptr %n_fine, align 4, !tbaa !92
  %218 = load i32, ptr %size, align 4, !tbaa !92
  %219 = load i32, ptr %num_threads, align 4, !tbaa !92
  %mul249 = mul nsw i32 %218, %219
  %sub250 = sub nsw i32 %217, %mul249
  store i32 %sub250, ptr %rest, align 4, !tbaa !92
  %220 = load i32, ptr %j7, align 4, !tbaa !92
  %221 = load i32, ptr %rest, align 4, !tbaa !92
  %cmp251 = icmp slt i32 %220, %221
  br i1 %cmp251, label %if.then253, label %if.else260

if.then253:                                       ; preds = %if.end247
  %222 = load i32, ptr %j7, align 4, !tbaa !92
  %223 = load i32, ptr %size, align 4, !tbaa !92
  %mul254 = mul nsw i32 %222, %223
  %224 = load i32, ptr %j7, align 4, !tbaa !92
  %add255 = add nsw i32 %mul254, %224
  store i32 %add255, ptr %ns, align 4, !tbaa !92
  %225 = load i32, ptr %j7, align 4, !tbaa !92
  %add256 = add nsw i32 %225, 1
  %226 = load i32, ptr %size, align 4, !tbaa !92
  %mul257 = mul nsw i32 %add256, %226
  %227 = load i32, ptr %j7, align 4, !tbaa !92
  %add258 = add nsw i32 %mul257, %227
  %add259 = add nsw i32 %add258, 1
  store i32 %add259, ptr %ne, align 4, !tbaa !92
  br label %if.end266

if.else260:                                       ; preds = %if.end247
  %228 = load i32, ptr %j7, align 4, !tbaa !92
  %229 = load i32, ptr %size, align 4, !tbaa !92
  %mul261 = mul nsw i32 %228, %229
  %230 = load i32, ptr %rest, align 4, !tbaa !92
  %add262 = add nsw i32 %mul261, %230
  store i32 %add262, ptr %ns, align 4, !tbaa !92
  %231 = load i32, ptr %j7, align 4, !tbaa !92
  %add263 = add nsw i32 %231, 1
  %232 = load i32, ptr %size, align 4, !tbaa !92
  %mul264 = mul nsw i32 %add263, %232
  %233 = load i32, ptr %rest, align 4, !tbaa !92
  %add265 = add nsw i32 %mul264, %233
  store i32 %add265, ptr %ne, align 4, !tbaa !92
  br label %if.end266

if.end266:                                        ; preds = %if.else260, %if.then253
  %234 = load i32, ptr %ns, align 4, !tbaa !92
  store i32 %234, ptr %i6, align 4, !tbaa !92
  br label %for.cond267

for.cond267:                                      ; preds = %for.inc274, %if.end266
  %235 = load i32, ptr %i6, align 4, !tbaa !92
  %236 = load i32, ptr %ne, align 4, !tbaa !92
  %cmp268 = icmp slt i32 %235, %236
  br i1 %cmp268, label %for.body270, label %for.end276

for.body270:                                      ; preds = %for.cond267
  %237 = load i32, ptr %coarse_shift, align 4, !tbaa !92
  %238 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %239 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom271 = sext i32 %239 to i64
  %arrayidx272 = getelementptr inbounds i32, ptr %238, i64 %idxprom271
  %240 = load i32, ptr %arrayidx272, align 4, !tbaa !92
  %add273 = add nsw i32 %240, %237
  store i32 %add273, ptr %arrayidx272, align 4, !tbaa !92
  br label %for.inc274

for.inc274:                                       ; preds = %for.body270
  %241 = load i32, ptr %i6, align 4, !tbaa !92
  %inc275 = add nsw i32 %241, 1
  store i32 %inc275, ptr %i6, align 4, !tbaa !92
  br label %for.cond267, !llvm.loop !224

for.end276:                                       ; preds = %for.cond267
  br label %for.inc277

for.inc277:                                       ; preds = %for.end276
  %242 = load i32, ptr %j7, align 4, !tbaa !92
  %inc278 = add nsw i32 %242, 1
  store i32 %inc278, ptr %j7, align 4, !tbaa !92
  br label %for.cond237, !llvm.loop !225

for.end279:                                       ; preds = %for.cond237
  %243 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp280 = icmp eq i32 %243, 4
  br i1 %cmp280, label %if.then282, label %if.end287

if.then282:                                       ; preds = %for.end279
  %call283 = call double @time_getWallclockSeconds()
  %244 = load double, ptr %wall_time, align 8, !tbaa !161
  %sub284 = fsub double %call283, %244
  store double %sub284, ptr %wall_time, align 8, !tbaa !161
  %245 = load i32, ptr %my_id, align 4, !tbaa !92
  %246 = load double, ptr %wall_time, align 8, !tbaa !161
  %call285 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.6, i32 noundef %245, double noundef %246)
  %call286 = call i32 @fflush(ptr noundef null)
  br label %if.end287

if.end287:                                        ; preds = %if.then282, %for.end279
  %247 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp288 = icmp eq i32 %247, 4
  br i1 %cmp288, label %if.then290, label %if.end292

if.then290:                                       ; preds = %if.end287
  %call291 = call double @time_getWallclockSeconds()
  store double %call291, ptr %wall_time, align 8, !tbaa !161
  br label %if.end292

if.end292:                                        ; preds = %if.then290, %if.end287
  %248 = load i32, ptr %n_fine, align 4, !tbaa !92
  %conv293 = sext i32 %248 to i64
  %call294 = call ptr @hypre_CAlloc(i64 noundef %conv293, i64 noundef 8, i32 noundef 0)
  store ptr %call294, ptr %a_diag, align 8, !tbaa !4
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond295

for.cond295:                                      ; preds = %for.inc322, %if.end292
  %249 = load i32, ptr %i6, align 4, !tbaa !92
  %250 = load i32, ptr %n_fine, align 4, !tbaa !92
  %cmp296 = icmp slt i32 %249, %250
  br i1 %cmp296, label %for.body298, label %for.end324

for.body298:                                      ; preds = %for.cond295
  %251 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %252 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom299 = sext i32 %252 to i64
  %arrayidx300 = getelementptr inbounds i32, ptr %251, i64 %idxprom299
  %253 = load i32, ptr %arrayidx300, align 4, !tbaa !92
  store i32 %253, ptr %jj, align 4, !tbaa !92
  br label %for.cond301

for.cond301:                                      ; preds = %for.inc319, %for.body298
  %254 = load i32, ptr %jj, align 4, !tbaa !92
  %255 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %256 = load i32, ptr %i6, align 4, !tbaa !92
  %add302 = add nsw i32 %256, 1
  %idxprom303 = sext i32 %add302 to i64
  %arrayidx304 = getelementptr inbounds i32, ptr %255, i64 %idxprom303
  %257 = load i32, ptr %arrayidx304, align 4, !tbaa !92
  %cmp305 = icmp slt i32 %254, %257
  br i1 %cmp305, label %for.body307, label %for.end321

for.body307:                                      ; preds = %for.cond301
  %258 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %259 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom308 = sext i32 %259 to i64
  %arrayidx309 = getelementptr inbounds i32, ptr %258, i64 %idxprom308
  %260 = load i32, ptr %arrayidx309, align 4, !tbaa !92
  store i32 %260, ptr %i1, align 4, !tbaa !92
  %261 = load i32, ptr %i6, align 4, !tbaa !92
  %262 = load i32, ptr %i1, align 4, !tbaa !92
  %cmp310 = icmp eq i32 %261, %262
  br i1 %cmp310, label %if.then312, label %if.end318

if.then312:                                       ; preds = %for.body307
  %263 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %264 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom313 = sext i32 %264 to i64
  %arrayidx314 = getelementptr inbounds double, ptr %263, i64 %idxprom313
  %265 = load double, ptr %arrayidx314, align 8, !tbaa !161
  %div315 = fdiv double 1.000000e+00, %265
  %266 = load ptr, ptr %a_diag, align 8, !tbaa !4
  %267 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom316 = sext i32 %267 to i64
  %arrayidx317 = getelementptr inbounds double, ptr %266, i64 %idxprom316
  store double %div315, ptr %arrayidx317, align 8, !tbaa !161
  br label %if.end318

if.end318:                                        ; preds = %if.then312, %for.body307
  br label %for.inc319

for.inc319:                                       ; preds = %if.end318
  %268 = load i32, ptr %jj, align 4, !tbaa !92
  %inc320 = add nsw i32 %268, 1
  store i32 %inc320, ptr %jj, align 4, !tbaa !92
  br label %for.cond301, !llvm.loop !226

for.end321:                                       ; preds = %for.cond301
  br label %for.inc322

for.inc322:                                       ; preds = %for.end321
  %269 = load i32, ptr %i6, align 4, !tbaa !92
  %inc323 = add nsw i32 %269, 1
  store i32 %inc323, ptr %i6, align 4, !tbaa !92
  br label %for.cond295, !llvm.loop !227

for.end324:                                       ; preds = %for.cond295
  store i32 0, ptr %jl, align 4, !tbaa !92
  br label %for.cond325

for.cond325:                                      ; preds = %for.inc489, %for.end324
  %270 = load i32, ptr %jl, align 4, !tbaa !92
  %271 = load i32, ptr %num_threads, align 4, !tbaa !92
  %cmp326 = icmp slt i32 %270, %271
  br i1 %cmp326, label %for.body328, label %for.end491

for.body328:                                      ; preds = %for.cond325
  %272 = load i32, ptr %n_fine, align 4, !tbaa !92
  %273 = load i32, ptr %num_threads, align 4, !tbaa !92
  %div329 = sdiv i32 %272, %273
  store i32 %div329, ptr %size, align 4, !tbaa !92
  %274 = load i32, ptr %n_fine, align 4, !tbaa !92
  %275 = load i32, ptr %size, align 4, !tbaa !92
  %276 = load i32, ptr %num_threads, align 4, !tbaa !92
  %mul330 = mul nsw i32 %275, %276
  %sub331 = sub nsw i32 %274, %mul330
  store i32 %sub331, ptr %rest, align 4, !tbaa !92
  %277 = load i32, ptr %jl, align 4, !tbaa !92
  %278 = load i32, ptr %rest, align 4, !tbaa !92
  %cmp332 = icmp slt i32 %277, %278
  br i1 %cmp332, label %if.then334, label %if.else341

if.then334:                                       ; preds = %for.body328
  %279 = load i32, ptr %jl, align 4, !tbaa !92
  %280 = load i32, ptr %size, align 4, !tbaa !92
  %mul335 = mul nsw i32 %279, %280
  %281 = load i32, ptr %jl, align 4, !tbaa !92
  %add336 = add nsw i32 %mul335, %281
  store i32 %add336, ptr %ns, align 4, !tbaa !92
  %282 = load i32, ptr %jl, align 4, !tbaa !92
  %add337 = add nsw i32 %282, 1
  %283 = load i32, ptr %size, align 4, !tbaa !92
  %mul338 = mul nsw i32 %add337, %283
  %284 = load i32, ptr %jl, align 4, !tbaa !92
  %add339 = add nsw i32 %mul338, %284
  %add340 = add nsw i32 %add339, 1
  store i32 %add340, ptr %ne, align 4, !tbaa !92
  br label %if.end347

if.else341:                                       ; preds = %for.body328
  %285 = load i32, ptr %jl, align 4, !tbaa !92
  %286 = load i32, ptr %size, align 4, !tbaa !92
  %mul342 = mul nsw i32 %285, %286
  %287 = load i32, ptr %rest, align 4, !tbaa !92
  %add343 = add nsw i32 %mul342, %287
  store i32 %add343, ptr %ns, align 4, !tbaa !92
  %288 = load i32, ptr %jl, align 4, !tbaa !92
  %add344 = add nsw i32 %288, 1
  %289 = load i32, ptr %size, align 4, !tbaa !92
  %mul345 = mul nsw i32 %add344, %289
  %290 = load i32, ptr %rest, align 4, !tbaa !92
  %add346 = add nsw i32 %mul345, %290
  store i32 %add346, ptr %ne, align 4, !tbaa !92
  br label %if.end347

if.end347:                                        ; preds = %if.else341, %if.then334
  store i32 0, ptr %jj_counter, align 4, !tbaa !92
  %291 = load i32, ptr %jl, align 4, !tbaa !92
  %cmp348 = icmp sgt i32 %291, 0
  br i1 %cmp348, label %if.then350, label %if.end354

if.then350:                                       ; preds = %if.end347
  %292 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %293 = load i32, ptr %jl, align 4, !tbaa !92
  %sub351 = sub nsw i32 %293, 1
  %idxprom352 = sext i32 %sub351 to i64
  %arrayidx353 = getelementptr inbounds i32, ptr %292, i64 %idxprom352
  %294 = load i32, ptr %arrayidx353, align 4, !tbaa !92
  store i32 %294, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end354

if.end354:                                        ; preds = %if.then350, %if.end347
  store i32 0, ptr %jj_counter_offd, align 4, !tbaa !92
  %295 = load i32, ptr %jl, align 4, !tbaa !92
  %cmp355 = icmp sgt i32 %295, 0
  br i1 %cmp355, label %if.then357, label %if.end361

if.then357:                                       ; preds = %if.end354
  %296 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %297 = load i32, ptr %jl, align 4, !tbaa !92
  %sub358 = sub nsw i32 %297, 1
  %idxprom359 = sext i32 %sub358 to i64
  %arrayidx360 = getelementptr inbounds i32, ptr %296, i64 %idxprom359
  %298 = load i32, ptr %arrayidx360, align 4, !tbaa !92
  store i32 %298, ptr %jj_counter_offd, align 4, !tbaa !92
  br label %if.end361

if.end361:                                        ; preds = %if.then357, %if.end354
  %299 = load i32, ptr %n_fine, align 4, !tbaa !92
  %conv362 = sext i32 %299 to i64
  %call363 = call ptr @hypre_CAlloc(i64 noundef %conv362, i64 noundef 4, i32 noundef 0)
  store ptr %call363, ptr %P_marker, align 8, !tbaa !4
  %300 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %tobool364 = icmp ne i32 %300, 0
  br i1 %tobool364, label %if.then365, label %if.else368

if.then365:                                       ; preds = %if.end361
  %301 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %conv366 = sext i32 %301 to i64
  %call367 = call ptr @hypre_CAlloc(i64 noundef %conv366, i64 noundef 4, i32 noundef 0)
  store ptr %call367, ptr %P_marker_offd, align 8, !tbaa !4
  br label %if.end369

if.else368:                                       ; preds = %if.end361
  store ptr null, ptr %P_marker_offd, align 8, !tbaa !4
  br label %if.end369

if.end369:                                        ; preds = %if.else368, %if.then365
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond370

for.cond370:                                      ; preds = %for.inc376, %if.end369
  %302 = load i32, ptr %i6, align 4, !tbaa !92
  %303 = load i32, ptr %n_fine, align 4, !tbaa !92
  %cmp371 = icmp slt i32 %302, %303
  br i1 %cmp371, label %for.body373, label %for.end378

for.body373:                                      ; preds = %for.cond370
  %304 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %305 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom374 = sext i32 %305 to i64
  %arrayidx375 = getelementptr inbounds i32, ptr %304, i64 %idxprom374
  store i32 -1, ptr %arrayidx375, align 4, !tbaa !92
  br label %for.inc376

for.inc376:                                       ; preds = %for.body373
  %306 = load i32, ptr %i6, align 4, !tbaa !92
  %inc377 = add nsw i32 %306, 1
  store i32 %inc377, ptr %i6, align 4, !tbaa !92
  br label %for.cond370, !llvm.loop !228

for.end378:                                       ; preds = %for.cond370
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond379

for.cond379:                                      ; preds = %for.inc385, %for.end378
  %307 = load i32, ptr %i6, align 4, !tbaa !92
  %308 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %cmp380 = icmp slt i32 %307, %308
  br i1 %cmp380, label %for.body382, label %for.end387

for.body382:                                      ; preds = %for.cond379
  %309 = load ptr, ptr %P_marker_offd, align 8, !tbaa !4
  %310 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom383 = sext i32 %310 to i64
  %arrayidx384 = getelementptr inbounds i32, ptr %309, i64 %idxprom383
  store i32 -1, ptr %arrayidx384, align 4, !tbaa !92
  br label %for.inc385

for.inc385:                                       ; preds = %for.body382
  %311 = load i32, ptr %i6, align 4, !tbaa !92
  %inc386 = add nsw i32 %311, 1
  store i32 %inc386, ptr %i6, align 4, !tbaa !92
  br label %for.cond379, !llvm.loop !229

for.end387:                                       ; preds = %for.cond379
  %312 = load i32, ptr %ns, align 4, !tbaa !92
  store i32 %312, ptr %i6, align 4, !tbaa !92
  br label %for.cond388

for.cond388:                                      ; preds = %for.inc486, %for.end387
  %313 = load i32, ptr %i6, align 4, !tbaa !92
  %314 = load i32, ptr %ne, align 4, !tbaa !92
  %cmp389 = icmp slt i32 %313, %314
  br i1 %cmp389, label %for.body391, label %for.end488

for.body391:                                      ; preds = %for.cond388
  %315 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %316 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom392 = sext i32 %316 to i64
  %arrayidx393 = getelementptr inbounds i32, ptr %315, i64 %idxprom392
  %317 = load i32, ptr %arrayidx393, align 4, !tbaa !92
  %cmp394 = icmp sge i32 %317, 0
  br i1 %cmp394, label %if.then396, label %if.else406

if.then396:                                       ; preds = %for.body391
  %318 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %319 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %320 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom397 = sext i32 %320 to i64
  %arrayidx398 = getelementptr inbounds i32, ptr %319, i64 %idxprom397
  store i32 %318, ptr %arrayidx398, align 4, !tbaa !92
  %321 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %322 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom399 = sext i32 %322 to i64
  %arrayidx400 = getelementptr inbounds i32, ptr %321, i64 %idxprom399
  %323 = load i32, ptr %arrayidx400, align 4, !tbaa !92
  %324 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %325 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom401 = sext i32 %325 to i64
  %arrayidx402 = getelementptr inbounds i32, ptr %324, i64 %idxprom401
  store i32 %323, ptr %arrayidx402, align 4, !tbaa !92
  %326 = load double, ptr %one, align 8, !tbaa !161
  %327 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %328 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom403 = sext i32 %328 to i64
  %arrayidx404 = getelementptr inbounds double, ptr %327, i64 %idxprom403
  store double %326, ptr %arrayidx404, align 8, !tbaa !161
  %329 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc405 = add nsw i32 %329, 1
  store i32 %inc405, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end482

if.else406:                                       ; preds = %for.body391
  %330 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %331 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %332 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom407 = sext i32 %332 to i64
  %arrayidx408 = getelementptr inbounds i32, ptr %331, i64 %idxprom407
  store i32 %330, ptr %arrayidx408, align 4, !tbaa !92
  %333 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %334 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom409 = sext i32 %334 to i64
  %arrayidx410 = getelementptr inbounds i32, ptr %333, i64 %idxprom409
  %335 = load i32, ptr %arrayidx410, align 4, !tbaa !92
  store i32 %335, ptr %jj, align 4, !tbaa !92
  br label %for.cond411

for.cond411:                                      ; preds = %for.inc440, %if.else406
  %336 = load i32, ptr %jj, align 4, !tbaa !92
  %337 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %338 = load i32, ptr %i6, align 4, !tbaa !92
  %add412 = add nsw i32 %338, 1
  %idxprom413 = sext i32 %add412 to i64
  %arrayidx414 = getelementptr inbounds i32, ptr %337, i64 %idxprom413
  %339 = load i32, ptr %arrayidx414, align 4, !tbaa !92
  %cmp415 = icmp slt i32 %336, %339
  br i1 %cmp415, label %for.body417, label %for.end442

for.body417:                                      ; preds = %for.cond411
  %340 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %341 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom418 = sext i32 %341 to i64
  %arrayidx419 = getelementptr inbounds i32, ptr %340, i64 %idxprom418
  %342 = load i32, ptr %arrayidx419, align 4, !tbaa !92
  store i32 %342, ptr %i1, align 4, !tbaa !92
  %343 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %344 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom420 = sext i32 %344 to i64
  %arrayidx421 = getelementptr inbounds i32, ptr %343, i64 %idxprom420
  %345 = load i32, ptr %arrayidx421, align 4, !tbaa !92
  %cmp422 = icmp sge i32 %345, 0
  br i1 %cmp422, label %if.then424, label %if.end439

if.then424:                                       ; preds = %for.body417
  %346 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %347 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %348 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom425 = sext i32 %348 to i64
  %arrayidx426 = getelementptr inbounds i32, ptr %347, i64 %idxprom425
  store i32 %346, ptr %arrayidx426, align 4, !tbaa !92
  %349 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %350 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom427 = sext i32 %350 to i64
  %arrayidx428 = getelementptr inbounds i32, ptr %349, i64 %idxprom427
  %351 = load i32, ptr %arrayidx428, align 4, !tbaa !92
  %352 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %353 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom429 = sext i32 %353 to i64
  %arrayidx430 = getelementptr inbounds i32, ptr %352, i64 %idxprom429
  store i32 %351, ptr %arrayidx430, align 4, !tbaa !92
  %354 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %355 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom431 = sext i32 %355 to i64
  %arrayidx432 = getelementptr inbounds double, ptr %354, i64 %idxprom431
  %356 = load double, ptr %arrayidx432, align 8, !tbaa !161
  %fneg = fneg double %356
  %357 = load ptr, ptr %a_diag, align 8, !tbaa !4
  %358 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom433 = sext i32 %358 to i64
  %arrayidx434 = getelementptr inbounds double, ptr %357, i64 %idxprom433
  %359 = load double, ptr %arrayidx434, align 8, !tbaa !161
  %mul435 = fmul double %fneg, %359
  %360 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %361 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom436 = sext i32 %361 to i64
  %arrayidx437 = getelementptr inbounds double, ptr %360, i64 %idxprom436
  store double %mul435, ptr %arrayidx437, align 8, !tbaa !161
  %362 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc438 = add nsw i32 %362, 1
  store i32 %inc438, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end439

if.end439:                                        ; preds = %if.then424, %for.body417
  br label %for.inc440

for.inc440:                                       ; preds = %if.end439
  %363 = load i32, ptr %jj, align 4, !tbaa !92
  %inc441 = add nsw i32 %363, 1
  store i32 %inc441, ptr %jj, align 4, !tbaa !92
  br label %for.cond411, !llvm.loop !230

for.end442:                                       ; preds = %for.cond411
  %364 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %365 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %366 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom443 = sext i32 %366 to i64
  %arrayidx444 = getelementptr inbounds i32, ptr %365, i64 %idxprom443
  store i32 %364, ptr %arrayidx444, align 4, !tbaa !92
  %367 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp445 = icmp sgt i32 %367, 1
  br i1 %cmp445, label %if.then447, label %if.end481

if.then447:                                       ; preds = %for.end442
  %368 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %369 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom448 = sext i32 %369 to i64
  %arrayidx449 = getelementptr inbounds i32, ptr %368, i64 %idxprom448
  %370 = load i32, ptr %arrayidx449, align 4, !tbaa !92
  store i32 %370, ptr %jj, align 4, !tbaa !92
  br label %for.cond450

for.cond450:                                      ; preds = %for.inc478, %if.then447
  %371 = load i32, ptr %jj, align 4, !tbaa !92
  %372 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %373 = load i32, ptr %i6, align 4, !tbaa !92
  %add451 = add nsw i32 %373, 1
  %idxprom452 = sext i32 %add451 to i64
  %arrayidx453 = getelementptr inbounds i32, ptr %372, i64 %idxprom452
  %374 = load i32, ptr %arrayidx453, align 4, !tbaa !92
  %cmp454 = icmp slt i32 %371, %374
  br i1 %cmp454, label %for.body456, label %for.end480

for.body456:                                      ; preds = %for.cond450
  %375 = load ptr, ptr %A_offd_j, align 8, !tbaa !4
  %376 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom457 = sext i32 %376 to i64
  %arrayidx458 = getelementptr inbounds i32, ptr %375, i64 %idxprom457
  %377 = load i32, ptr %arrayidx458, align 4, !tbaa !92
  store i32 %377, ptr %i1, align 4, !tbaa !92
  %378 = load ptr, ptr %CF_marker_offd, align 8, !tbaa !4
  %379 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom459 = sext i32 %379 to i64
  %arrayidx460 = getelementptr inbounds i32, ptr %378, i64 %idxprom459
  %380 = load i32, ptr %arrayidx460, align 4, !tbaa !92
  %cmp461 = icmp sge i32 %380, 0
  br i1 %cmp461, label %if.then463, label %if.end477

if.then463:                                       ; preds = %for.body456
  %381 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %382 = load ptr, ptr %P_marker_offd, align 8, !tbaa !4
  %383 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom464 = sext i32 %383 to i64
  %arrayidx465 = getelementptr inbounds i32, ptr %382, i64 %idxprom464
  store i32 %381, ptr %arrayidx465, align 4, !tbaa !92
  %384 = load i32, ptr %i1, align 4, !tbaa !92
  %385 = load ptr, ptr %P_offd_j, align 8, !tbaa !4
  %386 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %idxprom466 = sext i32 %386 to i64
  %arrayidx467 = getelementptr inbounds i32, ptr %385, i64 %idxprom466
  store i32 %384, ptr %arrayidx467, align 4, !tbaa !92
  %387 = load ptr, ptr %A_offd_data, align 8, !tbaa !4
  %388 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom468 = sext i32 %388 to i64
  %arrayidx469 = getelementptr inbounds double, ptr %387, i64 %idxprom468
  %389 = load double, ptr %arrayidx469, align 8, !tbaa !161
  %fneg470 = fneg double %389
  %390 = load ptr, ptr %a_diag, align 8, !tbaa !4
  %391 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom471 = sext i32 %391 to i64
  %arrayidx472 = getelementptr inbounds double, ptr %390, i64 %idxprom471
  %392 = load double, ptr %arrayidx472, align 8, !tbaa !161
  %mul473 = fmul double %fneg470, %392
  %393 = load ptr, ptr %P_offd_data, align 8, !tbaa !4
  %394 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %idxprom474 = sext i32 %394 to i64
  %arrayidx475 = getelementptr inbounds double, ptr %393, i64 %idxprom474
  store double %mul473, ptr %arrayidx475, align 8, !tbaa !161
  %395 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %inc476 = add nsw i32 %395, 1
  store i32 %inc476, ptr %jj_counter_offd, align 4, !tbaa !92
  br label %if.end477

if.end477:                                        ; preds = %if.then463, %for.body456
  br label %for.inc478

for.inc478:                                       ; preds = %if.end477
  %396 = load i32, ptr %jj, align 4, !tbaa !92
  %inc479 = add nsw i32 %396, 1
  store i32 %inc479, ptr %jj, align 4, !tbaa !92
  br label %for.cond450, !llvm.loop !231

for.end480:                                       ; preds = %for.cond450
  br label %if.end481

if.end481:                                        ; preds = %for.end480, %for.end442
  br label %if.end482

if.end482:                                        ; preds = %if.end481, %if.then396
  %397 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %398 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %399 = load i32, ptr %i6, align 4, !tbaa !92
  %add483 = add nsw i32 %399, 1
  %idxprom484 = sext i32 %add483 to i64
  %arrayidx485 = getelementptr inbounds i32, ptr %398, i64 %idxprom484
  store i32 %397, ptr %arrayidx485, align 4, !tbaa !92
  br label %for.inc486

for.inc486:                                       ; preds = %if.end482
  %400 = load i32, ptr %i6, align 4, !tbaa !92
  %inc487 = add nsw i32 %400, 1
  store i32 %inc487, ptr %i6, align 4, !tbaa !92
  br label %for.cond388, !llvm.loop !232

for.end488:                                       ; preds = %for.cond388
  %401 = load ptr, ptr %P_marker, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %401, i32 noundef 0)
  store ptr null, ptr %P_marker, align 8, !tbaa !4
  %402 = load ptr, ptr %P_marker_offd, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %402, i32 noundef 0)
  store ptr null, ptr %P_marker_offd, align 8, !tbaa !4
  br label %for.inc489

for.inc489:                                       ; preds = %for.end488
  %403 = load i32, ptr %jl, align 4, !tbaa !92
  %inc490 = add nsw i32 %403, 1
  store i32 %inc490, ptr %jl, align 4, !tbaa !92
  br label %for.cond325, !llvm.loop !233

for.end491:                                       ; preds = %for.cond325
  %404 = load ptr, ptr %a_diag, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %404, i32 noundef 0)
  store ptr null, ptr %a_diag, align 8, !tbaa !4
  %405 = load ptr, ptr %comm, align 8, !tbaa !4
  %406 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %global_num_rows = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %406, i32 0, i32 1
  %407 = load i32, ptr %global_num_rows, align 8, !tbaa !171
  %408 = load i32, ptr %total_global_cpts, align 4, !tbaa !92
  %409 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %col_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %409, i32 0, i32 15
  %arraydecay = getelementptr inbounds [2 x i32], ptr %col_starts, i64 0, i64 0
  %410 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %411 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %412 = load i32, ptr %n_fine, align 4, !tbaa !92
  %idxprom492 = sext i32 %412 to i64
  %arrayidx493 = getelementptr inbounds i32, ptr %411, i64 %idxprom492
  %413 = load i32, ptr %arrayidx493, align 4, !tbaa !92
  %414 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %415 = load i32, ptr %n_fine, align 4, !tbaa !92
  %idxprom494 = sext i32 %415 to i64
  %arrayidx495 = getelementptr inbounds i32, ptr %414, i64 %idxprom494
  %416 = load i32, ptr %arrayidx495, align 4, !tbaa !92
  %call496 = call ptr @hypre_ParCSRMatrixCreate(ptr noundef %405, i32 noundef %407, i32 noundef %408, ptr noundef %arraydecay, ptr noundef %410, i32 noundef 0, i32 noundef %413, i32 noundef %416)
  store ptr %call496, ptr %P, align 8, !tbaa !4
  %417 = load ptr, ptr %P, align 8, !tbaa !4
  %diag497 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %417, i32 0, i32 8
  %418 = load ptr, ptr %diag497, align 8, !tbaa !149
  store ptr %418, ptr %P_diag, align 8, !tbaa !4
  %419 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %420 = load ptr, ptr %P_diag, align 8, !tbaa !4
  %data498 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %420, i32 0, i32 10
  store ptr %419, ptr %data498, align 8, !tbaa !165
  %421 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %422 = load ptr, ptr %P_diag, align 8, !tbaa !4
  %i499 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %422, i32 0, i32 0
  store ptr %421, ptr %i499, align 8, !tbaa !163
  %423 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %424 = load ptr, ptr %P_diag, align 8, !tbaa !4
  %j500 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %424, i32 0, i32 1
  store ptr %423, ptr %j500, align 8, !tbaa !164
  %425 = load ptr, ptr %P, align 8, !tbaa !4
  %offd501 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %425, i32 0, i32 9
  %426 = load ptr, ptr %offd501, align 8, !tbaa !162
  store ptr %426, ptr %P_offd, align 8, !tbaa !4
  %427 = load ptr, ptr %P_offd_data, align 8, !tbaa !4
  %428 = load ptr, ptr %P_offd, align 8, !tbaa !4
  %data502 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %428, i32 0, i32 10
  store ptr %427, ptr %data502, align 8, !tbaa !165
  %429 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %430 = load ptr, ptr %P_offd, align 8, !tbaa !4
  %i503 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %430, i32 0, i32 0
  store ptr %429, ptr %i503, align 8, !tbaa !163
  %431 = load ptr, ptr %P_offd_j, align 8, !tbaa !4
  %432 = load ptr, ptr %P_offd, align 8, !tbaa !4
  %j504 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %432, i32 0, i32 1
  store ptr %431, ptr %j504, align 8, !tbaa !164
  store i32 0, ptr %num_cols_P_offd, align 4, !tbaa !92
  %433 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %tobool505 = icmp ne i32 %433, 0
  br i1 %tobool505, label %if.then506, label %if.end566

if.then506:                                       ; preds = %for.end491
  %434 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %conv507 = sext i32 %434 to i64
  %call508 = call ptr @hypre_CAlloc(i64 noundef %conv507, i64 noundef 4, i32 noundef 0)
  store ptr %call508, ptr %P_marker, align 8, !tbaa !4
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond509

for.cond509:                                      ; preds = %for.inc515, %if.then506
  %435 = load i32, ptr %i6, align 4, !tbaa !92
  %436 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %cmp510 = icmp slt i32 %435, %436
  br i1 %cmp510, label %for.body512, label %for.end517

for.body512:                                      ; preds = %for.cond509
  %437 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %438 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom513 = sext i32 %438 to i64
  %arrayidx514 = getelementptr inbounds i32, ptr %437, i64 %idxprom513
  store i32 0, ptr %arrayidx514, align 4, !tbaa !92
  br label %for.inc515

for.inc515:                                       ; preds = %for.body512
  %439 = load i32, ptr %i6, align 4, !tbaa !92
  %inc516 = add nsw i32 %439, 1
  store i32 %inc516, ptr %i6, align 4, !tbaa !92
  br label %for.cond509, !llvm.loop !234

for.end517:                                       ; preds = %for.cond509
  store i32 0, ptr %num_cols_P_offd, align 4, !tbaa !92
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond518

for.cond518:                                      ; preds = %for.inc532, %for.end517
  %440 = load i32, ptr %i6, align 4, !tbaa !92
  %441 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %cmp519 = icmp slt i32 %440, %441
  br i1 %cmp519, label %for.body521, label %for.end534

for.body521:                                      ; preds = %for.cond518
  %442 = load ptr, ptr %P_offd_j, align 8, !tbaa !4
  %443 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom522 = sext i32 %443 to i64
  %arrayidx523 = getelementptr inbounds i32, ptr %442, i64 %idxprom522
  %444 = load i32, ptr %arrayidx523, align 4, !tbaa !92
  store i32 %444, ptr %index, align 4, !tbaa !92
  %445 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %446 = load i32, ptr %index, align 4, !tbaa !92
  %idxprom524 = sext i32 %446 to i64
  %arrayidx525 = getelementptr inbounds i32, ptr %445, i64 %idxprom524
  %447 = load i32, ptr %arrayidx525, align 4, !tbaa !92
  %tobool526 = icmp ne i32 %447, 0
  br i1 %tobool526, label %if.end531, label %if.then527

if.then527:                                       ; preds = %for.body521
  %448 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %inc528 = add nsw i32 %448, 1
  store i32 %inc528, ptr %num_cols_P_offd, align 4, !tbaa !92
  %449 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %450 = load i32, ptr %index, align 4, !tbaa !92
  %idxprom529 = sext i32 %450 to i64
  %arrayidx530 = getelementptr inbounds i32, ptr %449, i64 %idxprom529
  store i32 1, ptr %arrayidx530, align 4, !tbaa !92
  br label %if.end531

if.end531:                                        ; preds = %if.then527, %for.body521
  br label %for.inc532

for.inc532:                                       ; preds = %if.end531
  %451 = load i32, ptr %i6, align 4, !tbaa !92
  %inc533 = add nsw i32 %451, 1
  store i32 %inc533, ptr %i6, align 4, !tbaa !92
  br label %for.cond518, !llvm.loop !235

for.end534:                                       ; preds = %for.cond518
  %452 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %conv535 = sext i32 %452 to i64
  %call536 = call ptr @hypre_CAlloc(i64 noundef %conv535, i64 noundef 4, i32 noundef 0)
  store ptr %call536, ptr %tmp_map_offd, align 8, !tbaa !4
  %453 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %conv537 = sext i32 %453 to i64
  %call538 = call ptr @hypre_CAlloc(i64 noundef %conv537, i64 noundef 4, i32 noundef 0)
  store ptr %call538, ptr %col_map_offd_P, align 8, !tbaa !4
  store i32 0, ptr %index, align 4, !tbaa !92
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond539

for.cond539:                                      ; preds = %for.inc551, %for.end534
  %454 = load i32, ptr %i6, align 4, !tbaa !92
  %455 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %cmp540 = icmp slt i32 %454, %455
  br i1 %cmp540, label %for.body542, label %for.end553

for.body542:                                      ; preds = %for.cond539
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body542
  %456 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %457 = load i32, ptr %index, align 4, !tbaa !92
  %idxprom543 = sext i32 %457 to i64
  %arrayidx544 = getelementptr inbounds i32, ptr %456, i64 %idxprom543
  %458 = load i32, ptr %arrayidx544, align 4, !tbaa !92
  %cmp545 = icmp eq i32 %458, 0
  br i1 %cmp545, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %459 = load i32, ptr %index, align 4, !tbaa !92
  %inc547 = add nsw i32 %459, 1
  store i32 %inc547, ptr %index, align 4, !tbaa !92
  br label %while.cond, !llvm.loop !236

while.end:                                        ; preds = %while.cond
  %460 = load i32, ptr %index, align 4, !tbaa !92
  %inc548 = add nsw i32 %460, 1
  store i32 %inc548, ptr %index, align 4, !tbaa !92
  %461 = load ptr, ptr %tmp_map_offd, align 8, !tbaa !4
  %462 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom549 = sext i32 %462 to i64
  %arrayidx550 = getelementptr inbounds i32, ptr %461, i64 %idxprom549
  store i32 %460, ptr %arrayidx550, align 4, !tbaa !92
  br label %for.inc551

for.inc551:                                       ; preds = %while.end
  %463 = load i32, ptr %i6, align 4, !tbaa !92
  %inc552 = add nsw i32 %463, 1
  store i32 %inc552, ptr %i6, align 4, !tbaa !92
  br label %for.cond539, !llvm.loop !237

for.end553:                                       ; preds = %for.cond539
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond554

for.cond554:                                      ; preds = %for.inc563, %for.end553
  %464 = load i32, ptr %i6, align 4, !tbaa !92
  %465 = load i32, ptr %P_offd_size, align 4, !tbaa !92
  %cmp555 = icmp slt i32 %464, %465
  br i1 %cmp555, label %for.body557, label %for.end565

for.body557:                                      ; preds = %for.cond554
  %466 = load ptr, ptr %tmp_map_offd, align 8, !tbaa !4
  %467 = load ptr, ptr %P_offd_j, align 8, !tbaa !4
  %468 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom558 = sext i32 %468 to i64
  %arrayidx559 = getelementptr inbounds i32, ptr %467, i64 %idxprom558
  %469 = load i32, ptr %arrayidx559, align 4, !tbaa !92
  %470 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %call560 = call i32 @hypre_BinarySearch(ptr noundef %466, i32 noundef %469, i32 noundef %470)
  %471 = load ptr, ptr %P_offd_j, align 8, !tbaa !4
  %472 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom561 = sext i32 %472 to i64
  %arrayidx562 = getelementptr inbounds i32, ptr %471, i64 %idxprom561
  store i32 %call560, ptr %arrayidx562, align 4, !tbaa !92
  br label %for.inc563

for.inc563:                                       ; preds = %for.body557
  %473 = load i32, ptr %i6, align 4, !tbaa !92
  %inc564 = add nsw i32 %473, 1
  store i32 %inc564, ptr %i6, align 4, !tbaa !92
  br label %for.cond554, !llvm.loop !238

for.end565:                                       ; preds = %for.cond554
  %474 = load ptr, ptr %P_marker, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %474, i32 noundef 0)
  store ptr null, ptr %P_marker, align 8, !tbaa !4
  br label %if.end566

if.end566:                                        ; preds = %for.end565, %for.end491
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond567

for.cond567:                                      ; preds = %for.inc579, %if.end566
  %475 = load i32, ptr %i6, align 4, !tbaa !92
  %476 = load i32, ptr %n_fine, align 4, !tbaa !92
  %cmp568 = icmp slt i32 %475, %476
  br i1 %cmp568, label %for.body570, label %for.end581

for.body570:                                      ; preds = %for.cond567
  %477 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %478 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom571 = sext i32 %478 to i64
  %arrayidx572 = getelementptr inbounds i32, ptr %477, i64 %idxprom571
  %479 = load i32, ptr %arrayidx572, align 4, !tbaa !92
  %cmp573 = icmp eq i32 %479, -3
  br i1 %cmp573, label %if.then575, label %if.end578

if.then575:                                       ; preds = %for.body570
  %480 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %481 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom576 = sext i32 %481 to i64
  %arrayidx577 = getelementptr inbounds i32, ptr %480, i64 %idxprom576
  store i32 -1, ptr %arrayidx577, align 4, !tbaa !92
  br label %if.end578

if.end578:                                        ; preds = %if.then575, %for.body570
  br label %for.inc579

for.inc579:                                       ; preds = %if.end578
  %482 = load i32, ptr %i6, align 4, !tbaa !92
  %inc580 = add nsw i32 %482, 1
  store i32 %inc580, ptr %i6, align 4, !tbaa !92
  br label %for.cond567, !llvm.loop !239

for.end581:                                       ; preds = %for.cond567
  %483 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %tobool582 = icmp ne i32 %483, 0
  br i1 %tobool582, label %if.then583, label %if.end585

if.then583:                                       ; preds = %for.end581
  %484 = load ptr, ptr %col_map_offd_P, align 8, !tbaa !4
  %485 = load ptr, ptr %P, align 8, !tbaa !4
  %col_map_offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %485, i32 0, i32 12
  store ptr %484, ptr %col_map_offd, align 8, !tbaa !174
  %486 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %487 = load ptr, ptr %P_offd, align 8, !tbaa !4
  %num_cols584 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %487, i32 0, i32 4
  store i32 %486, ptr %num_cols584, align 4, !tbaa !167
  br label %if.end585

if.end585:                                        ; preds = %if.then583, %for.end581
  %488 = load ptr, ptr %P, align 8, !tbaa !4
  %489 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %490 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %491 = load ptr, ptr %tmp_map_offd, align 8, !tbaa !4
  %call586 = call i32 @hypre_GetCommPkgRTFromCommPkgA(ptr noundef %488, ptr noundef %489, ptr noundef %490, ptr noundef %491)
  %492 = load ptr, ptr %P, align 8, !tbaa !4
  %493 = load ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  store ptr %492, ptr %493, align 8, !tbaa !4
  %494 = load ptr, ptr %tmp_map_offd, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %494, i32 noundef 0)
  store ptr null, ptr %tmp_map_offd, align 8, !tbaa !4
  %495 = load ptr, ptr %CF_marker_offd, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %495, i32 noundef 0)
  store ptr null, ptr %CF_marker_offd, align 8, !tbaa !4
  %496 = load ptr, ptr %int_buf_data, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %496, i32 noundef 0)
  store ptr null, ptr %int_buf_data, align 8, !tbaa !4
  %497 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %497, i32 noundef 0)
  store ptr null, ptr %fine_to_coarse, align 8, !tbaa !4
  %498 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %498, i32 noundef 0)
  store ptr null, ptr %coarse_counter, align 8, !tbaa !4
  %499 = load ptr, ptr %jj_count, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %499, i32 noundef 0)
  store ptr null, ptr %jj_count, align 8, !tbaa !4
  %500 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %500, i32 noundef 0)
  store ptr null, ptr %jj_count_offd, align 8, !tbaa !4
  call void @llvm.lifetime.end.p0(i64 8, ptr %wall_time) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %int_buf_data) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %rest) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ne) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ns) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %index) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_sends) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_threads) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %one) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %start) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jl) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j7) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i1) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i6) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_cols_P_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %total_global_cpts) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %coarse_shift) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %coarse_counter) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %fine_to_coarse) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n_fine) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %start_indexing) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %jj_count_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %jj_count) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj_counter_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_marker_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_marker) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %P_offd_size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %P_diag_size) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %CF_marker_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_map_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %col_map_offd_P) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a_diag) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_cols_A_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm_handle) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm_pkg) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @hypre_ParCSRMatrixLeftScale(ptr noundef %vector, ptr noundef %A) #0 {
entry:
  %vector.addr = alloca ptr, align 8
  %A.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n_local = alloca i32, align 4
  %A_diag = alloca ptr, align 8
  %A_diag_data = alloca ptr, align 8
  %A_diag_i = alloca ptr, align 8
  %A_offd = alloca ptr, align 8
  %A_offd_data = alloca ptr, align 8
  %A_offd_i = alloca ptr, align 8
  %factor = alloca double, align 8
  store ptr %vector, ptr %vector.addr, align 8, !tbaa !4
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %n_local) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 8
  %1 = load ptr, ptr %diag, align 8, !tbaa !149
  store ptr %1, ptr %A_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_data) #6
  %2 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %2, i32 0, i32 10
  %3 = load ptr, ptr %data, align 8, !tbaa !165
  store ptr %3, ptr %A_diag_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_i) #6
  %4 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %i1 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %4, i32 0, i32 0
  %5 = load ptr, ptr %i1, align 8, !tbaa !163
  store ptr %5, ptr %A_diag_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd) #6
  %6 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %6, i32 0, i32 9
  %7 = load ptr, ptr %offd, align 8, !tbaa !162
  store ptr %7, ptr %A_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_data) #6
  %8 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %data2 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %8, i32 0, i32 10
  %9 = load ptr, ptr %data2, align 8, !tbaa !165
  store ptr %9, ptr %A_offd_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_i) #6
  %10 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %i3 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %10, i32 0, i32 0
  %11 = load ptr, ptr %i3, align 8, !tbaa !163
  store ptr %11, ptr %A_offd_i, align 8, !tbaa !4
  %12 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %12, i32 0, i32 3
  %13 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %13, ptr %n_local, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc27, %entry
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %15 = load i32, ptr %n_local, align 4, !tbaa !92
  %cmp = icmp slt i32 %14, %15
  br i1 %cmp, label %for.body, label %for.end29

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %factor) #6
  %16 = load ptr, ptr %vector.addr, align 8, !tbaa !4
  %17 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %17 to i64
  %arrayidx = getelementptr inbounds double, ptr %16, i64 %idxprom
  %18 = load double, ptr %arrayidx, align 8, !tbaa !161
  store double %18, ptr %factor, align 8, !tbaa !161
  %19 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom4 = sext i32 %20 to i64
  %arrayidx5 = getelementptr inbounds i32, ptr %19, i64 %idxprom4
  %21 = load i32, ptr %arrayidx5, align 4, !tbaa !92
  store i32 %21, ptr %j, align 4, !tbaa !92
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %for.body
  %22 = load i32, ptr %j, align 4, !tbaa !92
  %23 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %24 = load i32, ptr %i, align 4, !tbaa !92
  %add = add nsw i32 %24, 1
  %idxprom7 = sext i32 %add to i64
  %arrayidx8 = getelementptr inbounds i32, ptr %23, i64 %idxprom7
  %25 = load i32, ptr %arrayidx8, align 4, !tbaa !92
  %cmp9 = icmp slt i32 %22, %25
  br i1 %cmp9, label %for.body10, label %for.end

for.body10:                                       ; preds = %for.cond6
  %26 = load double, ptr %factor, align 8, !tbaa !161
  %27 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %28 = load i32, ptr %j, align 4, !tbaa !92
  %idxprom11 = sext i32 %28 to i64
  %arrayidx12 = getelementptr inbounds double, ptr %27, i64 %idxprom11
  %29 = load double, ptr %arrayidx12, align 8, !tbaa !161
  %mul = fmul double %29, %26
  store double %mul, ptr %arrayidx12, align 8, !tbaa !161
  br label %for.inc

for.inc:                                          ; preds = %for.body10
  %30 = load i32, ptr %j, align 4, !tbaa !92
  %inc = add nsw i32 %30, 1
  store i32 %inc, ptr %j, align 4, !tbaa !92
  br label %for.cond6, !llvm.loop !240

for.end:                                          ; preds = %for.cond6
  %31 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %32 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom13 = sext i32 %32 to i64
  %arrayidx14 = getelementptr inbounds i32, ptr %31, i64 %idxprom13
  %33 = load i32, ptr %arrayidx14, align 4, !tbaa !92
  store i32 %33, ptr %j, align 4, !tbaa !92
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc24, %for.end
  %34 = load i32, ptr %j, align 4, !tbaa !92
  %35 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %36 = load i32, ptr %i, align 4, !tbaa !92
  %add16 = add nsw i32 %36, 1
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds i32, ptr %35, i64 %idxprom17
  %37 = load i32, ptr %arrayidx18, align 4, !tbaa !92
  %cmp19 = icmp slt i32 %34, %37
  br i1 %cmp19, label %for.body20, label %for.end26

for.body20:                                       ; preds = %for.cond15
  %38 = load double, ptr %factor, align 8, !tbaa !161
  %39 = load ptr, ptr %A_offd_data, align 8, !tbaa !4
  %40 = load i32, ptr %j, align 4, !tbaa !92
  %idxprom21 = sext i32 %40 to i64
  %arrayidx22 = getelementptr inbounds double, ptr %39, i64 %idxprom21
  %41 = load double, ptr %arrayidx22, align 8, !tbaa !161
  %mul23 = fmul double %41, %38
  store double %mul23, ptr %arrayidx22, align 8, !tbaa !161
  br label %for.inc24

for.inc24:                                        ; preds = %for.body20
  %42 = load i32, ptr %j, align 4, !tbaa !92
  %inc25 = add nsw i32 %42, 1
  store i32 %inc25, ptr %j, align 4, !tbaa !92
  br label %for.cond15, !llvm.loop !241

for.end26:                                        ; preds = %for.cond15
  call void @llvm.lifetime.end.p0(i64 8, ptr %factor) #6
  br label %for.inc27

for.inc27:                                        ; preds = %for.end26
  %43 = load i32, ptr %i, align 4, !tbaa !92
  %inc28 = add nsw i32 %43, 1
  store i32 %inc28, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !242

for.end29:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n_local) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRGetAcfCPR(ptr noundef %A, i32 noundef %blk_size, ptr noundef %c_marker, ptr noundef %f_marker, ptr noundef %A_CF_ptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %blk_size.addr = alloca i32, align 4
  %c_marker.addr = alloca ptr, align 8
  %f_marker.addr = alloca ptr, align 8
  %A_CF_ptr.addr = alloca ptr, align 8
  %comm = alloca ptr, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %jj = alloca i32, align 4
  %jj1 = alloca i32, align 4
  %jj_counter = alloca i32, align 4
  %cpts_cnt = alloca i32, align 4
  %A_CF = alloca ptr, align 8
  %A_CF_diag = alloca ptr, align 8
  %memory_location = alloca i32, align 4
  %A_diag = alloca ptr, align 8
  %A_diag_i = alloca ptr, align 8
  %A_diag_j = alloca ptr, align 8
  %A_diag_data = alloca ptr, align 8
  %total_fpts = alloca i32, align 4
  %n_fpoints = alloca i32, align 4
  %num_rows = alloca i32, align 4
  %nnz_diag_new = alloca i32, align 4
  %num_procs = alloca i32, align 4
  %my_id = alloca i32, align 4
  %wrap_cf = alloca ptr, align 8
  %coarse_dof_func_ptr = alloca ptr, align 8
  %num_row_cpts_global = alloca [2 x i32], align 4
  %num_col_fpts_global = alloca [2 x i32], align 4
  %total_global_row_cpts = alloca i32, align 4
  %total_global_col_fpts = alloca i32, align 4
  %f_to_c_col_map = alloca ptr, align 8
  %A_CF_diag_i = alloca ptr, align 8
  %A_CF_diag_j = alloca ptr, align 8
  %A_CF_diag_data = alloca ptr, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  store ptr %c_marker, ptr %c_marker.addr, align 8, !tbaa !4
  store ptr %f_marker, ptr %f_marker.addr, align 8, !tbaa !4
  store ptr %A_CF_ptr, ptr %A_CF_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %comm1, align 8, !tbaa !160
  store ptr %1, ptr %comm, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj1) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %cpts_cnt) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF) #6
  store ptr null, ptr %A_CF, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_diag) #6
  store ptr null, ptr %A_CF_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %memory_location) #6
  %2 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call = call i32 @hypre_ParCSRMatrixMemoryLocation(ptr noundef %2)
  store i32 %call, ptr %memory_location, align 4, !tbaa !155
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag) #6
  %3 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %3, i32 0, i32 8
  %4 = load ptr, ptr %diag, align 8, !tbaa !149
  store ptr %4, ptr %A_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_i) #6
  %5 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %i2 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %5, i32 0, i32 0
  %6 = load ptr, ptr %i2, align 8, !tbaa !163
  store ptr %6, ptr %A_diag_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_j) #6
  %7 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %j3 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %7, i32 0, i32 1
  %8 = load ptr, ptr %j3, align 8, !tbaa !164
  store ptr %8, ptr %A_diag_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_data) #6
  %9 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %9, i32 0, i32 10
  %10 = load ptr, ptr %data, align 8, !tbaa !165
  store ptr %10, ptr %A_diag_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %total_fpts) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %n_fpoints) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_rows) #6
  %11 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag4 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %11, i32 0, i32 8
  %12 = load ptr, ptr %diag4, align 8, !tbaa !149
  %num_rows5 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %12, i32 0, i32 3
  %13 = load i32, ptr %num_rows5, align 8, !tbaa !151
  store i32 %13, ptr %num_rows, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %nnz_diag_new) #6
  store i32 0, ptr %nnz_diag_new, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %wrap_cf) #6
  store ptr null, ptr %wrap_cf, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %coarse_dof_func_ptr) #6
  store ptr null, ptr %coarse_dof_func_ptr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %num_row_cpts_global) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %num_col_fpts_global) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %total_global_row_cpts) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %total_global_col_fpts) #6
  %14 = load ptr, ptr %comm, align 8, !tbaa !4
  %call6 = call i32 @hypre_MPI_Comm_size(ptr noundef %14, ptr noundef %num_procs)
  %15 = load ptr, ptr %comm, align 8, !tbaa !4
  %call7 = call i32 @hypre_MPI_Comm_rank(ptr noundef %15, ptr noundef %my_id)
  store i32 0, ptr %total_fpts, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %f_to_c_col_map) #6
  %16 = load i32, ptr %num_rows, align 4, !tbaa !92
  %conv = sext i32 %16 to i64
  %call8 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call8, ptr %f_to_c_col_map, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load i32, ptr %i, align 4, !tbaa !92
  %18 = load i32, ptr %num_rows, align 4, !tbaa !92
  %cmp = icmp slt i32 %17, %18
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %19 = load ptr, ptr %f_marker.addr, align 8, !tbaa !4
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %20 to i64
  %arrayidx = getelementptr inbounds i32, ptr %19, i64 %idxprom
  %21 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %cmp10 = icmp eq i32 %21, 1
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %22 = load i32, ptr %total_fpts, align 4, !tbaa !92
  %23 = load ptr, ptr %f_to_c_col_map, align 8, !tbaa !4
  %24 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom12 = sext i32 %24 to i64
  %arrayidx13 = getelementptr inbounds i32, ptr %23, i64 %idxprom12
  store i32 %22, ptr %arrayidx13, align 4, !tbaa !92
  %25 = load i32, ptr %total_fpts, align 4, !tbaa !92
  %inc = add nsw i32 %25, 1
  store i32 %inc, ptr %total_fpts, align 4, !tbaa !92
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %26 = load i32, ptr %i, align 4, !tbaa !92
  %inc14 = add nsw i32 %26, 1
  store i32 %inc14, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !243

for.end:                                          ; preds = %for.cond
  %27 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  store i32 %27, ptr %n_fpoints, align 4, !tbaa !92
  %28 = load i32, ptr %num_rows, align 4, !tbaa !92
  %call15 = call ptr @hypre_IntArrayCreate(i32 noundef %28)
  store ptr %call15, ptr %wrap_cf, align 8, !tbaa !4
  %29 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %memory_location16 = getelementptr inbounds %struct.hypre_IntArray, ptr %29, i32 0, i32 2
  store i32 0, ptr %memory_location16, align 4, !tbaa !153
  %30 = load ptr, ptr %c_marker.addr, align 8, !tbaa !4
  %31 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %data17 = getelementptr inbounds %struct.hypre_IntArray, ptr %31, i32 0, i32 0
  store ptr %30, ptr %data17, align 8, !tbaa !156
  %32 = load ptr, ptr %comm, align 8, !tbaa !4
  %33 = load i32, ptr %num_rows, align 4, !tbaa !92
  %34 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %arraydecay = getelementptr inbounds [2 x i32], ptr %num_row_cpts_global, i64 0, i64 0
  %call18 = call i32 @hypre_BoomerAMGCoarseParms(ptr noundef %32, i32 noundef %33, i32 noundef 1, ptr noundef null, ptr noundef %34, ptr noundef %coarse_dof_func_ptr, ptr noundef %arraydecay)
  %35 = load ptr, ptr %coarse_dof_func_ptr, align 8, !tbaa !4
  %call19 = call i32 @hypre_IntArrayDestroy(ptr noundef %35)
  store ptr null, ptr %coarse_dof_func_ptr, align 8, !tbaa !4
  %36 = load i32, ptr %my_id, align 4, !tbaa !92
  %37 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub = sub nsw i32 %37, 1
  %cmp20 = icmp eq i32 %36, %sub
  br i1 %cmp20, label %if.then22, label %if.end24

if.then22:                                        ; preds = %for.end
  %arrayidx23 = getelementptr inbounds [2 x i32], ptr %num_row_cpts_global, i64 0, i64 1
  %38 = load i32, ptr %arrayidx23, align 4, !tbaa !92
  store i32 %38, ptr %total_global_row_cpts, align 4, !tbaa !92
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %for.end
  %39 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub25 = sub nsw i32 %39, 1
  %40 = load ptr, ptr %comm, align 8, !tbaa !4
  %call26 = call i32 @hypre_MPI_Bcast(ptr noundef %total_global_row_cpts, i32 noundef 1, ptr noundef @ompi_mpi_int, i32 noundef %sub25, ptr noundef %40)
  %41 = load ptr, ptr %f_marker.addr, align 8, !tbaa !4
  %42 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %data27 = getelementptr inbounds %struct.hypre_IntArray, ptr %42, i32 0, i32 0
  store ptr %41, ptr %data27, align 8, !tbaa !156
  %43 = load ptr, ptr %comm, align 8, !tbaa !4
  %44 = load i32, ptr %num_rows, align 4, !tbaa !92
  %45 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %arraydecay28 = getelementptr inbounds [2 x i32], ptr %num_col_fpts_global, i64 0, i64 0
  %call29 = call i32 @hypre_BoomerAMGCoarseParms(ptr noundef %43, i32 noundef %44, i32 noundef 1, ptr noundef null, ptr noundef %45, ptr noundef %coarse_dof_func_ptr, ptr noundef %arraydecay28)
  %46 = load ptr, ptr %coarse_dof_func_ptr, align 8, !tbaa !4
  %call30 = call i32 @hypre_IntArrayDestroy(ptr noundef %46)
  store ptr null, ptr %coarse_dof_func_ptr, align 8, !tbaa !4
  %47 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %data31 = getelementptr inbounds %struct.hypre_IntArray, ptr %47, i32 0, i32 0
  store ptr null, ptr %data31, align 8, !tbaa !156
  %48 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %call32 = call i32 @hypre_IntArrayDestroy(ptr noundef %48)
  %49 = load i32, ptr %my_id, align 4, !tbaa !92
  %50 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub33 = sub nsw i32 %50, 1
  %cmp34 = icmp eq i32 %49, %sub33
  br i1 %cmp34, label %if.then36, label %if.end38

if.then36:                                        ; preds = %if.end24
  %arrayidx37 = getelementptr inbounds [2 x i32], ptr %num_col_fpts_global, i64 0, i64 1
  %51 = load i32, ptr %arrayidx37, align 4, !tbaa !92
  store i32 %51, ptr %total_global_col_fpts, align 4, !tbaa !92
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %if.end24
  %52 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub39 = sub nsw i32 %52, 1
  %53 = load ptr, ptr %comm, align 8, !tbaa !4
  %call40 = call i32 @hypre_MPI_Bcast(ptr noundef %total_global_col_fpts, i32 noundef 1, ptr noundef @ompi_mpi_int, i32 noundef %sub39, ptr noundef %53)
  store i32 0, ptr %jj_counter, align 4, !tbaa !92
  store i32 0, ptr %cpts_cnt, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond41

for.cond41:                                       ; preds = %for.inc82, %if.end38
  %54 = load i32, ptr %i, align 4, !tbaa !92
  %55 = load i32, ptr %num_rows, align 4, !tbaa !92
  %cmp42 = icmp slt i32 %54, %55
  br i1 %cmp42, label %for.body44, label %for.end84

for.body44:                                       ; preds = %for.cond41
  %56 = load ptr, ptr %c_marker.addr, align 8, !tbaa !4
  %57 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom45 = sext i32 %57 to i64
  %arrayidx46 = getelementptr inbounds i32, ptr %56, i64 %idxprom45
  %58 = load i32, ptr %arrayidx46, align 4, !tbaa !92
  %cmp47 = icmp eq i32 %58, 1
  br i1 %cmp47, label %if.then49, label %if.end81

if.then49:                                        ; preds = %for.body44
  %59 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %60 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom50 = sext i32 %60 to i64
  %arrayidx51 = getelementptr inbounds i32, ptr %59, i64 %idxprom50
  %61 = load i32, ptr %arrayidx51, align 4, !tbaa !92
  store i32 %61, ptr %j, align 4, !tbaa !92
  br label %for.cond52

for.cond52:                                       ; preds = %for.inc77, %if.then49
  %62 = load i32, ptr %j, align 4, !tbaa !92
  %63 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %64 = load i32, ptr %i, align 4, !tbaa !92
  %add = add nsw i32 %64, 1
  %idxprom53 = sext i32 %add to i64
  %arrayidx54 = getelementptr inbounds i32, ptr %63, i64 %idxprom53
  %65 = load i32, ptr %arrayidx54, align 4, !tbaa !92
  %cmp55 = icmp slt i32 %62, %65
  br i1 %cmp55, label %for.body57, label %for.end79

for.body57:                                       ; preds = %for.cond52
  %66 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %67 = load i32, ptr %j, align 4, !tbaa !92
  %idxprom58 = sext i32 %67 to i64
  %arrayidx59 = getelementptr inbounds i32, ptr %66, i64 %idxprom58
  %68 = load i32, ptr %arrayidx59, align 4, !tbaa !92
  store i32 %68, ptr %jj, align 4, !tbaa !92
  %69 = load ptr, ptr %f_marker.addr, align 8, !tbaa !4
  %70 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom60 = sext i32 %70 to i64
  %arrayidx61 = getelementptr inbounds i32, ptr %69, i64 %idxprom60
  %71 = load i32, ptr %arrayidx61, align 4, !tbaa !92
  %cmp62 = icmp eq i32 %71, 1
  br i1 %cmp62, label %if.then64, label %if.end76

if.then64:                                        ; preds = %for.body57
  %72 = load ptr, ptr %f_to_c_col_map, align 8, !tbaa !4
  %73 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom65 = sext i32 %73 to i64
  %arrayidx66 = getelementptr inbounds i32, ptr %72, i64 %idxprom65
  %74 = load i32, ptr %arrayidx66, align 4, !tbaa !92
  store i32 %74, ptr %jj1, align 4, !tbaa !92
  %75 = load i32, ptr %jj1, align 4, !tbaa !92
  %76 = load i32, ptr %cpts_cnt, align 4, !tbaa !92
  %77 = load i32, ptr %n_fpoints, align 4, !tbaa !92
  %mul = mul nsw i32 %76, %77
  %cmp67 = icmp sge i32 %75, %mul
  br i1 %cmp67, label %land.lhs.true, label %if.end75

land.lhs.true:                                    ; preds = %if.then64
  %78 = load i32, ptr %jj1, align 4, !tbaa !92
  %79 = load i32, ptr %cpts_cnt, align 4, !tbaa !92
  %add69 = add nsw i32 %79, 1
  %80 = load i32, ptr %n_fpoints, align 4, !tbaa !92
  %mul70 = mul nsw i32 %add69, %80
  %cmp71 = icmp slt i32 %78, %mul70
  br i1 %cmp71, label %if.then73, label %if.end75

if.then73:                                        ; preds = %land.lhs.true
  %81 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc74 = add nsw i32 %81, 1
  store i32 %inc74, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end75

if.end75:                                         ; preds = %if.then73, %land.lhs.true, %if.then64
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %for.body57
  br label %for.inc77

for.inc77:                                        ; preds = %if.end76
  %82 = load i32, ptr %j, align 4, !tbaa !92
  %inc78 = add nsw i32 %82, 1
  store i32 %inc78, ptr %j, align 4, !tbaa !92
  br label %for.cond52, !llvm.loop !244

for.end79:                                        ; preds = %for.cond52
  %83 = load i32, ptr %cpts_cnt, align 4, !tbaa !92
  %inc80 = add nsw i32 %83, 1
  store i32 %inc80, ptr %cpts_cnt, align 4, !tbaa !92
  br label %if.end81

if.end81:                                         ; preds = %for.end79, %for.body44
  br label %for.inc82

for.inc82:                                        ; preds = %if.end81
  %84 = load i32, ptr %i, align 4, !tbaa !92
  %inc83 = add nsw i32 %84, 1
  store i32 %inc83, ptr %i, align 4, !tbaa !92
  br label %for.cond41, !llvm.loop !245

for.end84:                                        ; preds = %for.cond41
  %85 = load i32, ptr %jj_counter, align 4, !tbaa !92
  store i32 %85, ptr %nnz_diag_new, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_diag_i) #6
  %86 = load i32, ptr %cpts_cnt, align 4, !tbaa !92
  %add85 = add nsw i32 %86, 1
  %conv86 = sext i32 %add85 to i64
  %87 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call87 = call ptr @hypre_CAlloc(i64 noundef %conv86, i64 noundef 4, i32 noundef %87)
  store ptr %call87, ptr %A_CF_diag_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_diag_j) #6
  %88 = load i32, ptr %nnz_diag_new, align 4, !tbaa !92
  %conv88 = sext i32 %88 to i64
  %89 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call89 = call ptr @hypre_CAlloc(i64 noundef %conv88, i64 noundef 4, i32 noundef %89)
  store ptr %call89, ptr %A_CF_diag_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_diag_data) #6
  %90 = load i32, ptr %nnz_diag_new, align 4, !tbaa !92
  %conv90 = sext i32 %90 to i64
  %91 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call91 = call ptr @hypre_CAlloc(i64 noundef %conv90, i64 noundef 8, i32 noundef %91)
  store ptr %call91, ptr %A_CF_diag_data, align 8, !tbaa !4
  %92 = load i32, ptr %nnz_diag_new, align 4, !tbaa !92
  %93 = load ptr, ptr %A_CF_diag_i, align 8, !tbaa !4
  %94 = load i32, ptr %cpts_cnt, align 4, !tbaa !92
  %idxprom92 = sext i32 %94 to i64
  %arrayidx93 = getelementptr inbounds i32, ptr %93, i64 %idxprom92
  store i32 %92, ptr %arrayidx93, align 4, !tbaa !92
  store i32 0, ptr %jj_counter, align 4, !tbaa !92
  store i32 0, ptr %cpts_cnt, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond94

for.cond94:                                       ; preds = %for.inc146, %for.end84
  %95 = load i32, ptr %i, align 4, !tbaa !92
  %96 = load i32, ptr %num_rows, align 4, !tbaa !92
  %cmp95 = icmp slt i32 %95, %96
  br i1 %cmp95, label %for.body97, label %for.end148

for.body97:                                       ; preds = %for.cond94
  %97 = load ptr, ptr %c_marker.addr, align 8, !tbaa !4
  %98 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom98 = sext i32 %98 to i64
  %arrayidx99 = getelementptr inbounds i32, ptr %97, i64 %idxprom98
  %99 = load i32, ptr %arrayidx99, align 4, !tbaa !92
  %cmp100 = icmp eq i32 %99, 1
  br i1 %cmp100, label %if.then102, label %if.end145

if.then102:                                       ; preds = %for.body97
  %100 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %101 = load ptr, ptr %A_CF_diag_i, align 8, !tbaa !4
  %102 = load i32, ptr %cpts_cnt, align 4, !tbaa !92
  %idxprom103 = sext i32 %102 to i64
  %arrayidx104 = getelementptr inbounds i32, ptr %101, i64 %idxprom103
  store i32 %100, ptr %arrayidx104, align 4, !tbaa !92
  %103 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %104 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom105 = sext i32 %104 to i64
  %arrayidx106 = getelementptr inbounds i32, ptr %103, i64 %idxprom105
  %105 = load i32, ptr %arrayidx106, align 4, !tbaa !92
  store i32 %105, ptr %j, align 4, !tbaa !92
  br label %for.cond107

for.cond107:                                      ; preds = %for.inc141, %if.then102
  %106 = load i32, ptr %j, align 4, !tbaa !92
  %107 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %108 = load i32, ptr %i, align 4, !tbaa !92
  %add108 = add nsw i32 %108, 1
  %idxprom109 = sext i32 %add108 to i64
  %arrayidx110 = getelementptr inbounds i32, ptr %107, i64 %idxprom109
  %109 = load i32, ptr %arrayidx110, align 4, !tbaa !92
  %cmp111 = icmp slt i32 %106, %109
  br i1 %cmp111, label %for.body113, label %for.end143

for.body113:                                      ; preds = %for.cond107
  %110 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %111 = load i32, ptr %j, align 4, !tbaa !92
  %idxprom114 = sext i32 %111 to i64
  %arrayidx115 = getelementptr inbounds i32, ptr %110, i64 %idxprom114
  %112 = load i32, ptr %arrayidx115, align 4, !tbaa !92
  store i32 %112, ptr %jj, align 4, !tbaa !92
  %113 = load ptr, ptr %f_marker.addr, align 8, !tbaa !4
  %114 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom116 = sext i32 %114 to i64
  %arrayidx117 = getelementptr inbounds i32, ptr %113, i64 %idxprom116
  %115 = load i32, ptr %arrayidx117, align 4, !tbaa !92
  %cmp118 = icmp eq i32 %115, 1
  br i1 %cmp118, label %if.then120, label %if.end140

if.then120:                                       ; preds = %for.body113
  %116 = load ptr, ptr %f_to_c_col_map, align 8, !tbaa !4
  %117 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom121 = sext i32 %117 to i64
  %arrayidx122 = getelementptr inbounds i32, ptr %116, i64 %idxprom121
  %118 = load i32, ptr %arrayidx122, align 4, !tbaa !92
  store i32 %118, ptr %jj1, align 4, !tbaa !92
  %119 = load i32, ptr %jj1, align 4, !tbaa !92
  %120 = load i32, ptr %cpts_cnt, align 4, !tbaa !92
  %121 = load i32, ptr %n_fpoints, align 4, !tbaa !92
  %mul123 = mul nsw i32 %120, %121
  %cmp124 = icmp sge i32 %119, %mul123
  br i1 %cmp124, label %land.lhs.true126, label %if.end139

land.lhs.true126:                                 ; preds = %if.then120
  %122 = load i32, ptr %jj1, align 4, !tbaa !92
  %123 = load i32, ptr %cpts_cnt, align 4, !tbaa !92
  %add127 = add nsw i32 %123, 1
  %124 = load i32, ptr %n_fpoints, align 4, !tbaa !92
  %mul128 = mul nsw i32 %add127, %124
  %cmp129 = icmp slt i32 %122, %mul128
  br i1 %cmp129, label %if.then131, label %if.end139

if.then131:                                       ; preds = %land.lhs.true126
  %125 = load i32, ptr %jj1, align 4, !tbaa !92
  %126 = load ptr, ptr %A_CF_diag_j, align 8, !tbaa !4
  %127 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom132 = sext i32 %127 to i64
  %arrayidx133 = getelementptr inbounds i32, ptr %126, i64 %idxprom132
  store i32 %125, ptr %arrayidx133, align 4, !tbaa !92
  %128 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %129 = load i32, ptr %j, align 4, !tbaa !92
  %idxprom134 = sext i32 %129 to i64
  %arrayidx135 = getelementptr inbounds double, ptr %128, i64 %idxprom134
  %130 = load double, ptr %arrayidx135, align 8, !tbaa !161
  %131 = load ptr, ptr %A_CF_diag_data, align 8, !tbaa !4
  %132 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom136 = sext i32 %132 to i64
  %arrayidx137 = getelementptr inbounds double, ptr %131, i64 %idxprom136
  store double %130, ptr %arrayidx137, align 8, !tbaa !161
  %133 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc138 = add nsw i32 %133, 1
  store i32 %inc138, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end139

if.end139:                                        ; preds = %if.then131, %land.lhs.true126, %if.then120
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %for.body113
  br label %for.inc141

for.inc141:                                       ; preds = %if.end140
  %134 = load i32, ptr %j, align 4, !tbaa !92
  %inc142 = add nsw i32 %134, 1
  store i32 %inc142, ptr %j, align 4, !tbaa !92
  br label %for.cond107, !llvm.loop !246

for.end143:                                       ; preds = %for.cond107
  %135 = load i32, ptr %cpts_cnt, align 4, !tbaa !92
  %inc144 = add nsw i32 %135, 1
  store i32 %inc144, ptr %cpts_cnt, align 4, !tbaa !92
  br label %if.end145

if.end145:                                        ; preds = %for.end143, %for.body97
  br label %for.inc146

for.inc146:                                       ; preds = %if.end145
  %136 = load i32, ptr %i, align 4, !tbaa !92
  %inc147 = add nsw i32 %136, 1
  store i32 %inc147, ptr %i, align 4, !tbaa !92
  br label %for.cond94, !llvm.loop !247

for.end148:                                       ; preds = %for.cond94
  %137 = load ptr, ptr %comm, align 8, !tbaa !4
  %138 = load i32, ptr %total_global_row_cpts, align 4, !tbaa !92
  %139 = load i32, ptr %total_global_col_fpts, align 4, !tbaa !92
  %arraydecay149 = getelementptr inbounds [2 x i32], ptr %num_row_cpts_global, i64 0, i64 0
  %arraydecay150 = getelementptr inbounds [2 x i32], ptr %num_col_fpts_global, i64 0, i64 0
  %140 = load i32, ptr %nnz_diag_new, align 4, !tbaa !92
  %call151 = call ptr @hypre_ParCSRMatrixCreate(ptr noundef %137, i32 noundef %138, i32 noundef %139, ptr noundef %arraydecay149, ptr noundef %arraydecay150, i32 noundef 0, i32 noundef %140, i32 noundef 0)
  store ptr %call151, ptr %A_CF, align 8, !tbaa !4
  %141 = load ptr, ptr %A_CF, align 8, !tbaa !4
  %diag152 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %141, i32 0, i32 8
  %142 = load ptr, ptr %diag152, align 8, !tbaa !149
  store ptr %142, ptr %A_CF_diag, align 8, !tbaa !4
  %143 = load ptr, ptr %A_CF_diag_data, align 8, !tbaa !4
  %144 = load ptr, ptr %A_CF_diag, align 8, !tbaa !4
  %data153 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %144, i32 0, i32 10
  store ptr %143, ptr %data153, align 8, !tbaa !165
  %145 = load ptr, ptr %A_CF_diag_i, align 8, !tbaa !4
  %146 = load ptr, ptr %A_CF_diag, align 8, !tbaa !4
  %i154 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %146, i32 0, i32 0
  store ptr %145, ptr %i154, align 8, !tbaa !163
  %147 = load ptr, ptr %A_CF_diag_j, align 8, !tbaa !4
  %148 = load ptr, ptr %A_CF_diag, align 8, !tbaa !4
  %j155 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %148, i32 0, i32 1
  store ptr %147, ptr %j155, align 8, !tbaa !164
  %149 = load ptr, ptr %A_CF, align 8, !tbaa !4
  %offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %149, i32 0, i32 9
  %150 = load ptr, ptr %offd, align 8, !tbaa !162
  %data156 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %150, i32 0, i32 10
  store ptr null, ptr %data156, align 8, !tbaa !165
  %151 = load ptr, ptr %A_CF, align 8, !tbaa !4
  %offd157 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %151, i32 0, i32 9
  %152 = load ptr, ptr %offd157, align 8, !tbaa !162
  %i158 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %152, i32 0, i32 0
  store ptr null, ptr %i158, align 8, !tbaa !163
  %153 = load ptr, ptr %A_CF, align 8, !tbaa !4
  %offd159 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %153, i32 0, i32 9
  %154 = load ptr, ptr %offd159, align 8, !tbaa !162
  %j160 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %154, i32 0, i32 1
  store ptr null, ptr %j160, align 8, !tbaa !164
  %155 = load ptr, ptr %A_CF, align 8, !tbaa !4
  %156 = load ptr, ptr %A_CF_ptr.addr, align 8, !tbaa !4
  store ptr %155, ptr %156, align 8, !tbaa !4
  %157 = load ptr, ptr %f_to_c_col_map, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %157, i32 noundef 0)
  store ptr null, ptr %f_to_c_col_map, align 8, !tbaa !4
  %158 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %f_to_c_col_map) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %total_global_col_fpts) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %total_global_row_cpts) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %num_col_fpts_global) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %num_row_cpts_global) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %coarse_dof_func_ptr) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %wrap_cf) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nnz_diag_new) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_rows) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n_fpoints) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %total_fpts) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %memory_location) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %cpts_cnt) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj1) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  ret i32 %158
}

declare i32 @hypre_BoomerAMGCoarseParms(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRTruncateAcfCPRDevice(ptr noundef %A_CF, ptr noundef %A_CF_new_ptr) #0 {
entry:
  %A_CF.addr = alloca ptr, align 8
  %A_CF_new_ptr.addr = alloca ptr, align 8
  %hA_CF = alloca ptr, align 8
  %A_CF_new = alloca ptr, align 8
  store ptr %A_CF, ptr %A_CF.addr, align 8, !tbaa !4
  store ptr %A_CF_new_ptr, ptr %A_CF_new_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %hA_CF) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_new) #6
  call void @hypre_GpuProfilingPushRange(ptr noundef @.str.7)
  %0 = load ptr, ptr %A_CF.addr, align 8, !tbaa !4
  %call = call ptr @hypre_ParCSRMatrixClone_v2(ptr noundef %0, i32 noundef 1, i32 noundef 0)
  store ptr %call, ptr %hA_CF, align 8, !tbaa !4
  %1 = load ptr, ptr %hA_CF, align 8, !tbaa !4
  %call1 = call i32 @hypre_MGRTruncateAcfCPR(ptr noundef %1, ptr noundef %A_CF_new)
  %2 = load ptr, ptr %A_CF_new, align 8, !tbaa !4
  %call2 = call i32 @hypre_ParCSRMatrixMigrate(ptr noundef %2, i32 noundef 1)
  %3 = load ptr, ptr %hA_CF, align 8, !tbaa !4
  %call3 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %3)
  %4 = load ptr, ptr %A_CF_new, align 8, !tbaa !4
  %5 = load ptr, ptr %A_CF_new_ptr.addr, align 8, !tbaa !4
  store ptr %4, ptr %5, align 8, !tbaa !4
  call void @hypre_GpuProfilingPopRange()
  %6 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_new) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %hA_CF) #6
  ret i32 %6
}

declare void @hypre_GpuProfilingPushRange(ptr noundef) #2

declare ptr @hypre_ParCSRMatrixClone_v2(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRTruncateAcfCPR(ptr noundef %A_CF, ptr noundef %A_CF_new_ptr) #0 {
entry:
  %A_CF.addr = alloca ptr, align 8
  %A_CF_new_ptr.addr = alloca ptr, align 8
  %comm = alloca ptr, align 8
  %num_rows = alloca i32, align 4
  %num_cols = alloca i32, align 4
  %A_CF_diag = alloca ptr, align 8
  %A_CF_diag_i = alloca ptr, align 8
  %A_CF_diag_j = alloca ptr, align 8
  %A_CF_diag_data = alloca ptr, align 8
  %num_rows_local = alloca i32, align 4
  %A_CF_new = alloca ptr, align 8
  %A_CF_diag_new = alloca ptr, align 8
  %A_CF_diag_i_new = alloca ptr, align 8
  %A_CF_diag_j_new = alloca ptr, align 8
  %A_CF_diag_data_new = alloca ptr, align 8
  %nnz_diag_new = alloca i32, align 4
  %i3 = alloca i32, align 4
  %j4 = alloca i32, align 4
  %jj = alloca i32, align 4
  %jj_counter = alloca i32, align 4
  %blk_size = alloca i32, align 4
  store ptr %A_CF, ptr %A_CF.addr, align 8, !tbaa !4
  store ptr %A_CF_new_ptr, ptr %A_CF_new_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  %0 = load ptr, ptr %A_CF.addr, align 8, !tbaa !4
  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %comm1, align 8, !tbaa !160
  store ptr %1, ptr %comm, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_rows) #6
  %2 = load ptr, ptr %A_CF.addr, align 8, !tbaa !4
  %global_num_rows = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %2, i32 0, i32 1
  %3 = load i32, ptr %global_num_rows, align 8, !tbaa !171
  store i32 %3, ptr %num_rows, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_cols) #6
  %4 = load ptr, ptr %A_CF.addr, align 8, !tbaa !4
  %global_num_cols = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %4, i32 0, i32 2
  %5 = load i32, ptr %global_num_cols, align 4, !tbaa !172
  store i32 %5, ptr %num_cols, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_diag) #6
  %6 = load ptr, ptr %A_CF.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %6, i32 0, i32 8
  %7 = load ptr, ptr %diag, align 8, !tbaa !149
  store ptr %7, ptr %A_CF_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_diag_i) #6
  %8 = load ptr, ptr %A_CF_diag, align 8, !tbaa !4
  %i = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %8, i32 0, i32 0
  %9 = load ptr, ptr %i, align 8, !tbaa !163
  store ptr %9, ptr %A_CF_diag_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_diag_j) #6
  %10 = load ptr, ptr %A_CF_diag, align 8, !tbaa !4
  %j = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %10, i32 0, i32 1
  %11 = load ptr, ptr %j, align 8, !tbaa !164
  store ptr %11, ptr %A_CF_diag_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_diag_data) #6
  %12 = load ptr, ptr %A_CF_diag, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %12, i32 0, i32 10
  %13 = load ptr, ptr %data, align 8, !tbaa !165
  store ptr %13, ptr %A_CF_diag_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_rows_local) #6
  %14 = load ptr, ptr %A_CF_diag, align 8, !tbaa !4
  %num_rows2 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %14, i32 0, i32 3
  %15 = load i32, ptr %num_rows2, align 8, !tbaa !151
  store i32 %15, ptr %num_rows_local, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_new) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_diag_new) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_diag_i_new) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_diag_j_new) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_CF_diag_data_new) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %nnz_diag_new) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i3) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j4) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %blk_size) #6
  %16 = load i32, ptr %num_cols, align 4, !tbaa !92
  %17 = load i32, ptr %num_rows, align 4, !tbaa !92
  %div = sdiv i32 %16, %17
  store i32 %div, ptr %blk_size, align 4, !tbaa !92
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store i32 0, ptr %jj_counter, align 4, !tbaa !92
  store i32 0, ptr %i3, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc17, %do.end
  %18 = load i32, ptr %i3, align 4, !tbaa !92
  %19 = load i32, ptr %num_rows_local, align 4, !tbaa !92
  %cmp = icmp slt i32 %18, %19
  br i1 %cmp, label %for.body, label %for.end19

for.body:                                         ; preds = %for.cond
  %20 = load ptr, ptr %A_CF_diag_i, align 8, !tbaa !4
  %21 = load i32, ptr %i3, align 4, !tbaa !92
  %idxprom = sext i32 %21 to i64
  %arrayidx = getelementptr inbounds i32, ptr %20, i64 %idxprom
  %22 = load i32, ptr %arrayidx, align 4, !tbaa !92
  store i32 %22, ptr %j4, align 4, !tbaa !92
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %for.body
  %23 = load i32, ptr %j4, align 4, !tbaa !92
  %24 = load ptr, ptr %A_CF_diag_i, align 8, !tbaa !4
  %25 = load i32, ptr %i3, align 4, !tbaa !92
  %add = add nsw i32 %25, 1
  %idxprom6 = sext i32 %add to i64
  %arrayidx7 = getelementptr inbounds i32, ptr %24, i64 %idxprom6
  %26 = load i32, ptr %arrayidx7, align 4, !tbaa !92
  %cmp8 = icmp slt i32 %23, %26
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond5
  %27 = load ptr, ptr %A_CF_diag_j, align 8, !tbaa !4
  %28 = load i32, ptr %j4, align 4, !tbaa !92
  %idxprom10 = sext i32 %28 to i64
  %arrayidx11 = getelementptr inbounds i32, ptr %27, i64 %idxprom10
  %29 = load i32, ptr %arrayidx11, align 4, !tbaa !92
  store i32 %29, ptr %jj, align 4, !tbaa !92
  %30 = load i32, ptr %jj, align 4, !tbaa !92
  %31 = load i32, ptr %i3, align 4, !tbaa !92
  %32 = load i32, ptr %blk_size, align 4, !tbaa !92
  %mul = mul nsw i32 %31, %32
  %cmp12 = icmp sge i32 %30, %mul
  br i1 %cmp12, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body9
  %33 = load i32, ptr %jj, align 4, !tbaa !92
  %34 = load i32, ptr %i3, align 4, !tbaa !92
  %add13 = add nsw i32 %34, 1
  %35 = load i32, ptr %blk_size, align 4, !tbaa !92
  %mul14 = mul nsw i32 %add13, %35
  %cmp15 = icmp slt i32 %33, %mul14
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %36 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc = add nsw i32 %36, 1
  store i32 %inc, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body9
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %37 = load i32, ptr %j4, align 4, !tbaa !92
  %inc16 = add nsw i32 %37, 1
  store i32 %inc16, ptr %j4, align 4, !tbaa !92
  br label %for.cond5, !llvm.loop !248

for.end:                                          ; preds = %for.cond5
  br label %for.inc17

for.inc17:                                        ; preds = %for.end
  %38 = load i32, ptr %i3, align 4, !tbaa !92
  %inc18 = add nsw i32 %38, 1
  store i32 %inc18, ptr %i3, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !249

for.end19:                                        ; preds = %for.cond
  %39 = load i32, ptr %jj_counter, align 4, !tbaa !92
  store i32 %39, ptr %nnz_diag_new, align 4, !tbaa !92
  %40 = load ptr, ptr %comm, align 8, !tbaa !4
  %41 = load i32, ptr %num_rows, align 4, !tbaa !92
  %42 = load i32, ptr %num_cols, align 4, !tbaa !92
  %43 = load ptr, ptr %A_CF.addr, align 8, !tbaa !4
  %row_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %43, i32 0, i32 14
  %arraydecay = getelementptr inbounds [2 x i32], ptr %row_starts, i64 0, i64 0
  %44 = load ptr, ptr %A_CF.addr, align 8, !tbaa !4
  %col_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %44, i32 0, i32 15
  %arraydecay20 = getelementptr inbounds [2 x i32], ptr %col_starts, i64 0, i64 0
  %45 = load i32, ptr %nnz_diag_new, align 4, !tbaa !92
  %call = call ptr @hypre_ParCSRMatrixCreate(ptr noundef %40, i32 noundef %41, i32 noundef %42, ptr noundef %arraydecay, ptr noundef %arraydecay20, i32 noundef 0, i32 noundef %45, i32 noundef 0)
  store ptr %call, ptr %A_CF_new, align 8, !tbaa !4
  %46 = load ptr, ptr %A_CF_new, align 8, !tbaa !4
  %call21 = call i32 @hypre_ParCSRMatrixInitialize_v2(ptr noundef %46, i32 noundef 0)
  %47 = load ptr, ptr %A_CF_new, align 8, !tbaa !4
  %diag22 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %47, i32 0, i32 8
  %48 = load ptr, ptr %diag22, align 8, !tbaa !149
  store ptr %48, ptr %A_CF_diag_new, align 8, !tbaa !4
  %49 = load ptr, ptr %A_CF_diag_new, align 8, !tbaa !4
  %i23 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %49, i32 0, i32 0
  %50 = load ptr, ptr %i23, align 8, !tbaa !163
  store ptr %50, ptr %A_CF_diag_i_new, align 8, !tbaa !4
  %51 = load ptr, ptr %A_CF_diag_new, align 8, !tbaa !4
  %j24 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %51, i32 0, i32 1
  %52 = load ptr, ptr %j24, align 8, !tbaa !164
  store ptr %52, ptr %A_CF_diag_j_new, align 8, !tbaa !4
  %53 = load ptr, ptr %A_CF_diag_new, align 8, !tbaa !4
  %data25 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %53, i32 0, i32 10
  %54 = load ptr, ptr %data25, align 8, !tbaa !165
  store ptr %54, ptr %A_CF_diag_data_new, align 8, !tbaa !4
  store i32 0, ptr %jj_counter, align 4, !tbaa !92
  store i32 0, ptr %i3, align 4, !tbaa !92
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc59, %for.end19
  %55 = load i32, ptr %i3, align 4, !tbaa !92
  %56 = load i32, ptr %num_rows_local, align 4, !tbaa !92
  %cmp27 = icmp slt i32 %55, %56
  br i1 %cmp27, label %for.body28, label %for.end61

for.body28:                                       ; preds = %for.cond26
  %57 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %58 = load ptr, ptr %A_CF_diag_i_new, align 8, !tbaa !4
  %59 = load i32, ptr %i3, align 4, !tbaa !92
  %idxprom29 = sext i32 %59 to i64
  %arrayidx30 = getelementptr inbounds i32, ptr %58, i64 %idxprom29
  store i32 %57, ptr %arrayidx30, align 4, !tbaa !92
  %60 = load ptr, ptr %A_CF_diag_i, align 8, !tbaa !4
  %61 = load i32, ptr %i3, align 4, !tbaa !92
  %idxprom31 = sext i32 %61 to i64
  %arrayidx32 = getelementptr inbounds i32, ptr %60, i64 %idxprom31
  %62 = load i32, ptr %arrayidx32, align 4, !tbaa !92
  store i32 %62, ptr %j4, align 4, !tbaa !92
  br label %for.cond33

for.cond33:                                       ; preds = %for.inc56, %for.body28
  %63 = load i32, ptr %j4, align 4, !tbaa !92
  %64 = load ptr, ptr %A_CF_diag_i, align 8, !tbaa !4
  %65 = load i32, ptr %i3, align 4, !tbaa !92
  %add34 = add nsw i32 %65, 1
  %idxprom35 = sext i32 %add34 to i64
  %arrayidx36 = getelementptr inbounds i32, ptr %64, i64 %idxprom35
  %66 = load i32, ptr %arrayidx36, align 4, !tbaa !92
  %cmp37 = icmp slt i32 %63, %66
  br i1 %cmp37, label %for.body38, label %for.end58

for.body38:                                       ; preds = %for.cond33
  %67 = load ptr, ptr %A_CF_diag_j, align 8, !tbaa !4
  %68 = load i32, ptr %j4, align 4, !tbaa !92
  %idxprom39 = sext i32 %68 to i64
  %arrayidx40 = getelementptr inbounds i32, ptr %67, i64 %idxprom39
  %69 = load i32, ptr %arrayidx40, align 4, !tbaa !92
  store i32 %69, ptr %jj, align 4, !tbaa !92
  %70 = load i32, ptr %jj, align 4, !tbaa !92
  %71 = load i32, ptr %i3, align 4, !tbaa !92
  %72 = load i32, ptr %blk_size, align 4, !tbaa !92
  %mul41 = mul nsw i32 %71, %72
  %cmp42 = icmp sge i32 %70, %mul41
  br i1 %cmp42, label %land.lhs.true43, label %if.end55

land.lhs.true43:                                  ; preds = %for.body38
  %73 = load i32, ptr %jj, align 4, !tbaa !92
  %74 = load i32, ptr %i3, align 4, !tbaa !92
  %add44 = add nsw i32 %74, 1
  %75 = load i32, ptr %blk_size, align 4, !tbaa !92
  %mul45 = mul nsw i32 %add44, %75
  %cmp46 = icmp slt i32 %73, %mul45
  br i1 %cmp46, label %if.then47, label %if.end55

if.then47:                                        ; preds = %land.lhs.true43
  %76 = load i32, ptr %jj, align 4, !tbaa !92
  %77 = load ptr, ptr %A_CF_diag_j_new, align 8, !tbaa !4
  %78 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom48 = sext i32 %78 to i64
  %arrayidx49 = getelementptr inbounds i32, ptr %77, i64 %idxprom48
  store i32 %76, ptr %arrayidx49, align 4, !tbaa !92
  %79 = load ptr, ptr %A_CF_diag_data, align 8, !tbaa !4
  %80 = load i32, ptr %j4, align 4, !tbaa !92
  %idxprom50 = sext i32 %80 to i64
  %arrayidx51 = getelementptr inbounds double, ptr %79, i64 %idxprom50
  %81 = load double, ptr %arrayidx51, align 8, !tbaa !161
  %82 = load ptr, ptr %A_CF_diag_data_new, align 8, !tbaa !4
  %83 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom52 = sext i32 %83 to i64
  %arrayidx53 = getelementptr inbounds double, ptr %82, i64 %idxprom52
  store double %81, ptr %arrayidx53, align 8, !tbaa !161
  %84 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc54 = add nsw i32 %84, 1
  store i32 %inc54, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end55

if.end55:                                         ; preds = %if.then47, %land.lhs.true43, %for.body38
  br label %for.inc56

for.inc56:                                        ; preds = %if.end55
  %85 = load i32, ptr %j4, align 4, !tbaa !92
  %inc57 = add nsw i32 %85, 1
  store i32 %inc57, ptr %j4, align 4, !tbaa !92
  br label %for.cond33, !llvm.loop !250

for.end58:                                        ; preds = %for.cond33
  br label %for.inc59

for.inc59:                                        ; preds = %for.end58
  %86 = load i32, ptr %i3, align 4, !tbaa !92
  %inc60 = add nsw i32 %86, 1
  store i32 %inc60, ptr %i3, align 4, !tbaa !92
  br label %for.cond26, !llvm.loop !251

for.end61:                                        ; preds = %for.cond26
  %87 = load i32, ptr %nnz_diag_new, align 4, !tbaa !92
  %88 = load ptr, ptr %A_CF_diag_i_new, align 8, !tbaa !4
  %89 = load i32, ptr %num_rows_local, align 4, !tbaa !92
  %idxprom62 = sext i32 %89 to i64
  %arrayidx63 = getelementptr inbounds i32, ptr %88, i64 %idxprom62
  store i32 %87, ptr %arrayidx63, align 4, !tbaa !92
  %90 = load ptr, ptr %A_CF_new, align 8, !tbaa !4
  %91 = load ptr, ptr %A_CF_new_ptr.addr, align 8, !tbaa !4
  store ptr %90, ptr %91, align 8, !tbaa !4
  %92 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 4, ptr %blk_size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j4) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i3) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nnz_diag_new) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_diag_data_new) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_diag_j_new) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_diag_i_new) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_diag_new) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_new) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_rows_local) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_CF_diag) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_cols) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_rows) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  ret i32 %92
}

declare i32 @hypre_ParCSRMatrixMigrate(ptr noundef, i32 noundef) #2

declare void @hypre_GpuProfilingPopRange() #2

declare i32 @hypre_ParCSRMatrixInitialize_v2(ptr noundef, i32 noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRComputeNonGalerkinCoarseGrid(ptr noundef %A, ptr noundef %Wp, ptr noundef %RT, i32 noundef %bsize, i32 noundef %ordering, i32 noundef %method, i32 noundef %Pmax, ptr noundef %CF_marker, ptr noundef %A_H_ptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %Wp.addr = alloca ptr, align 8
  %RT.addr = alloca ptr, align 8
  %bsize.addr = alloca i32, align 4
  %ordering.addr = alloca i32, align 4
  %method.addr = alloca i32, align 4
  %Pmax.addr = alloca i32, align 4
  %CF_marker.addr = alloca ptr, align 8
  %A_H_ptr.addr = alloca ptr, align 8
  %c_marker = alloca ptr, align 8
  %f_marker = alloca ptr, align 8
  %n_local_fine_grid = alloca i32, align 4
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  %jj = alloca i32, align 4
  %A_cc = alloca ptr, align 8
  %A_ff = alloca ptr, align 8
  %A_fc = alloca ptr, align 8
  %A_cf = alloca ptr, align 8
  %A_ff_inv = alloca ptr, align 8
  %A_H = alloca ptr, align 8
  %A_H_correction = alloca ptr, align 8
  %max_elmts = alloca i32, align 4
  %alpha = alloca double, align 8
  %coarse_pnts_global = alloca [2 x i32], align 4
  %fine_pnts_global = alloca [2 x i32], align 4
  %marker_array = alloca ptr, align 8
  %my_id = alloca i32, align 4
  %comm = alloca ptr, align 8
  %memory_location = alloca i32, align 4
  %point_type = alloca i32, align 4
  %Wp_tmp = alloca ptr, align 8
  %A_cf_truncated = alloca ptr, align 8
  %blk_inv_size = alloca i32, align 4
  %Wr = alloca ptr, align 8
  %A_ff_inv57 = alloca ptr, align 8
  %minus_Wp = alloca ptr, align 8
  %n_local_cpoints = alloca i32, align 4
  %A_H_correction_diag = alloca ptr, align 8
  %A_H_correction_diag_data = alloca ptr, align 8
  %A_H_correction_diag_i = alloca ptr, align 8
  %A_H_correction_diag_j = alloca ptr, align 8
  %ncol_diag = alloca i32, align 4
  %A_H_correction_offd = alloca ptr, align 8
  %A_H_correction_offd_data = alloca ptr, align 8
  %A_H_correction_offd_i = alloca ptr, align 8
  %A_H_correction_offd_j = alloca ptr, align 8
  %A_H_correction_diag_i_new = alloca ptr, align 8
  %A_H_correction_diag_j_new = alloca ptr, align 8
  %A_H_correction_diag_data_new = alloca ptr, align 8
  %num_nonzeros_diag_new = alloca i32, align 4
  %A_H_correction_offd_i_new = alloca ptr, align 8
  %A_H_correction_offd_j_new = alloca ptr, align 8
  %A_H_correction_offd_data_new = alloca ptr, align 8
  %num_nonzeros_offd_new = alloca i32, align 4
  %max_num_nonzeros = alloca i32, align 4
  %aux_j = alloca ptr, align 8
  %aux_data = alloca ptr, align 8
  %row_start = alloca i32, align 4
  %row_stop = alloca i32, align 4
  %cnt = alloca i32, align 4
  %col_idx = alloca i32, align 4
  %col_value = alloca double, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %Wp, ptr %Wp.addr, align 8, !tbaa !4
  store ptr %RT, ptr %RT.addr, align 8, !tbaa !4
  store i32 %bsize, ptr %bsize.addr, align 4, !tbaa !92
  store i32 %ordering, ptr %ordering.addr, align 4, !tbaa !92
  store i32 %method, ptr %method.addr, align 4, !tbaa !92
  store i32 %Pmax, ptr %Pmax.addr, align 4, !tbaa !92
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store ptr %A_H_ptr, ptr %A_H_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %c_marker) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %f_marker) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %n_local_fine_grid) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i1) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_cc) #6
  store ptr null, ptr %A_cc, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_ff) #6
  store ptr null, ptr %A_ff, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_fc) #6
  store ptr null, ptr %A_fc, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_cf) #6
  store ptr null, ptr %A_cf, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_ff_inv) #6
  store ptr null, ptr %A_ff_inv, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H) #6
  store ptr null, ptr %A_H, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction) #6
  store ptr null, ptr %A_H_correction, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_elmts) #6
  %0 = load i32, ptr %Pmax.addr, align 4, !tbaa !92
  store i32 %0, ptr %max_elmts, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %alpha) #6
  store double -1.000000e+00, ptr %alpha, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %coarse_pnts_global) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %fine_pnts_global) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %marker_array) #6
  store ptr null, ptr %marker_array, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  %1 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %1, i32 0, i32 0
  %2 = load ptr, ptr %comm1, align 8, !tbaa !160
  store ptr %2, ptr %comm, align 8, !tbaa !4
  %3 = load ptr, ptr %comm, align 8, !tbaa !4
  %call = call i32 @hypre_MPI_Comm_rank(ptr noundef %3, ptr noundef %my_id)
  call void @llvm.lifetime.start.p0(i64 4, ptr %memory_location) #6
  %4 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call2 = call i32 @hypre_ParCSRMatrixMemoryLocation(ptr noundef %4)
  store i32 %call2, ptr %memory_location, align 4, !tbaa !155
  %5 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %5, i32 0, i32 8
  %6 = load ptr, ptr %diag, align 8, !tbaa !149
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %6, i32 0, i32 3
  %7 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %7, ptr %n_local_fine_grid, align 4, !tbaa !92
  %8 = load i32, ptr %n_local_fine_grid, align 4, !tbaa !92
  %conv = sext i32 %8 to i64
  %9 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call3 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef %9)
  store ptr %call3, ptr %c_marker, align 8, !tbaa !4
  %10 = load i32, ptr %n_local_fine_grid, align 4, !tbaa !92
  %conv4 = sext i32 %10 to i64
  %11 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call5 = call ptr @hypre_CAlloc(i64 noundef %conv4, i64 noundef 4, i32 noundef %11)
  store ptr %call5, ptr %f_marker, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, ptr %i, align 4, !tbaa !92
  %13 = load i32, ptr %n_local_fine_grid, align 4, !tbaa !92
  %cmp = icmp slt i32 %12, %13
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %point_type) #6
  %14 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %15 to i64
  %arrayidx = getelementptr inbounds i32, ptr %14, i64 %idxprom
  %16 = load i32, ptr %arrayidx, align 4, !tbaa !92
  store i32 %16, ptr %point_type, align 4, !tbaa !92
  %17 = load i32, ptr %point_type, align 4, !tbaa !92
  %18 = load ptr, ptr %c_marker, align 8, !tbaa !4
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom7 = sext i32 %19 to i64
  %arrayidx8 = getelementptr inbounds i32, ptr %18, i64 %idxprom7
  store i32 %17, ptr %arrayidx8, align 4, !tbaa !92
  %20 = load i32, ptr %point_type, align 4, !tbaa !92
  %sub = sub nsw i32 0, %20
  %21 = load ptr, ptr %f_marker, align 8, !tbaa !4
  %22 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom9 = sext i32 %22 to i64
  %arrayidx10 = getelementptr inbounds i32, ptr %21, i64 %idxprom9
  store i32 %sub, ptr %arrayidx10, align 4, !tbaa !92
  call void @llvm.lifetime.end.p0(i64 4, ptr %point_type) #6
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %23 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %23, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !252

for.end:                                          ; preds = %for.cond
  %24 = load i32, ptr %n_local_fine_grid, align 4, !tbaa !92
  %call11 = call ptr @hypre_IntArrayCreate(i32 noundef %24)
  store ptr %call11, ptr %marker_array, align 8, !tbaa !4
  %25 = load i32, ptr %memory_location, align 4, !tbaa !155
  %26 = load ptr, ptr %marker_array, align 8, !tbaa !4
  %memory_location12 = getelementptr inbounds %struct.hypre_IntArray, ptr %26, i32 0, i32 2
  store i32 %25, ptr %memory_location12, align 4, !tbaa !153
  %27 = load ptr, ptr %c_marker, align 8, !tbaa !4
  %28 = load ptr, ptr %marker_array, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_IntArray, ptr %28, i32 0, i32 0
  store ptr %27, ptr %data, align 8, !tbaa !156
  %29 = load ptr, ptr %comm, align 8, !tbaa !4
  %30 = load i32, ptr %n_local_fine_grid, align 4, !tbaa !92
  %31 = load ptr, ptr %marker_array, align 8, !tbaa !4
  %arraydecay = getelementptr inbounds [2 x i32], ptr %coarse_pnts_global, i64 0, i64 0
  %call13 = call i32 @hypre_BoomerAMGCoarseParms(ptr noundef %29, i32 noundef %30, i32 noundef 1, ptr noundef null, ptr noundef %31, ptr noundef null, ptr noundef %arraydecay)
  %32 = load ptr, ptr %f_marker, align 8, !tbaa !4
  %33 = load ptr, ptr %marker_array, align 8, !tbaa !4
  %data14 = getelementptr inbounds %struct.hypre_IntArray, ptr %33, i32 0, i32 0
  store ptr %32, ptr %data14, align 8, !tbaa !156
  %34 = load ptr, ptr %comm, align 8, !tbaa !4
  %35 = load i32, ptr %n_local_fine_grid, align 4, !tbaa !92
  %36 = load ptr, ptr %marker_array, align 8, !tbaa !4
  %arraydecay15 = getelementptr inbounds [2 x i32], ptr %fine_pnts_global, i64 0, i64 0
  %call16 = call i32 @hypre_BoomerAMGCoarseParms(ptr noundef %34, i32 noundef %35, i32 noundef 1, ptr noundef null, ptr noundef %36, ptr noundef null, ptr noundef %arraydecay15)
  %37 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %38 = load ptr, ptr %c_marker, align 8, !tbaa !4
  %arraydecay17 = getelementptr inbounds [2 x i32], ptr %coarse_pnts_global, i64 0, i64 0
  %call18 = call i32 @hypre_ParCSRMatrixGenerateFFFC(ptr noundef %37, ptr noundef %38, ptr noundef %arraydecay17, ptr noundef null, ptr noundef %A_fc, ptr noundef %A_ff)
  %39 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %40 = load ptr, ptr %f_marker, align 8, !tbaa !4
  %arraydecay19 = getelementptr inbounds [2 x i32], ptr %fine_pnts_global, i64 0, i64 0
  %call20 = call i32 @hypre_ParCSRMatrixGenerateFFFC(ptr noundef %39, ptr noundef %40, ptr noundef %arraydecay19, ptr noundef null, ptr noundef %A_cf, ptr noundef %A_cc)
  %41 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp21 = icmp eq i32 %41, 1
  br i1 %cmp21, label %if.then, label %if.else32

if.then:                                          ; preds = %for.end
  %42 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %cmp23 = icmp ne ptr %42, null
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.then
  %43 = load ptr, ptr %A_cf, align 8, !tbaa !4
  %44 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %call26 = call ptr @hypre_ParCSRMatMat(ptr noundef %43, ptr noundef %44)
  store ptr %call26, ptr %A_H_correction, align 8, !tbaa !4
  br label %if.end

if.else:                                          ; preds = %if.then
  %45 = load ptr, ptr %A_ff, align 8, !tbaa !4
  %call27 = call i32 @hypre_ParCSRMatrixBlockDiagMatrix(ptr noundef %45, i32 noundef 1, i32 noundef -1, ptr noundef null, i32 noundef 1, ptr noundef %A_ff_inv)
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wp_tmp) #6
  %46 = load ptr, ptr %A_ff_inv, align 8, !tbaa !4
  %47 = load ptr, ptr %A_fc, align 8, !tbaa !4
  %call28 = call ptr @hypre_ParMatmul(ptr noundef %46, ptr noundef %47)
  store ptr %call28, ptr %Wp_tmp, align 8, !tbaa !4
  %48 = load ptr, ptr %A_cf, align 8, !tbaa !4
  %49 = load ptr, ptr %Wp_tmp, align 8, !tbaa !4
  %call29 = call ptr @hypre_ParCSRMatMat(ptr noundef %48, ptr noundef %49)
  store ptr %call29, ptr %A_H_correction, align 8, !tbaa !4
  %50 = load ptr, ptr %Wp_tmp, align 8, !tbaa !4
  %call30 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %50)
  %51 = load ptr, ptr %A_ff_inv, align 8, !tbaa !4
  %call31 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %51)
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wp_tmp) #6
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then25
  br label %if.end64

if.else32:                                        ; preds = %for.end
  %52 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp33 = icmp eq i32 %52, 2
  br i1 %cmp33, label %if.then37, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else32
  %53 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp35 = icmp eq i32 %53, 3
  br i1 %cmp35, label %if.then37, label %if.else53

if.then37:                                        ; preds = %lor.lhs.false, %if.else32
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_cf_truncated) #6
  store ptr null, ptr %A_cf_truncated, align 8, !tbaa !4
  %54 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %55 = load i32, ptr %bsize.addr, align 4, !tbaa !92
  %56 = load ptr, ptr %c_marker, align 8, !tbaa !4
  %57 = load ptr, ptr %f_marker, align 8, !tbaa !4
  %call38 = call i32 @hypre_MGRGetAcfCPR(ptr noundef %54, i32 noundef %55, ptr noundef %56, ptr noundef %57, ptr noundef %A_cf_truncated)
  %58 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %cmp39 = icmp ne ptr %58, null
  br i1 %cmp39, label %if.then41, label %if.else43

if.then41:                                        ; preds = %if.then37
  %59 = load ptr, ptr %A_cf_truncated, align 8, !tbaa !4
  %60 = load ptr, ptr %Wp.addr, align 8, !tbaa !4
  %call42 = call ptr @hypre_ParCSRMatMat(ptr noundef %59, ptr noundef %60)
  store ptr %call42, ptr %A_H_correction, align 8, !tbaa !4
  br label %if.end51

if.else43:                                        ; preds = %if.then37
  call void @llvm.lifetime.start.p0(i64 4, ptr %blk_inv_size) #6
  %61 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp44 = icmp eq i32 %61, 2
  br i1 %cmp44, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else43
  %62 = load i32, ptr %bsize.addr, align 4, !tbaa !92
  br label %cond.end

cond.false:                                       ; preds = %if.else43
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %62, %cond.true ], [ 1, %cond.false ]
  store i32 %cond, ptr %blk_inv_size, align 4, !tbaa !92
  %63 = load ptr, ptr %A_ff, align 8, !tbaa !4
  %64 = load i32, ptr %blk_inv_size, align 4, !tbaa !92
  %call46 = call i32 @hypre_ParCSRMatrixBlockDiagMatrix(ptr noundef %63, i32 noundef %64, i32 noundef -1, ptr noundef null, i32 noundef 1, ptr noundef %A_ff_inv)
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wr) #6
  store ptr null, ptr %Wr, align 8, !tbaa !4
  %65 = load ptr, ptr %A_cf_truncated, align 8, !tbaa !4
  %66 = load ptr, ptr %A_ff_inv, align 8, !tbaa !4
  %call47 = call ptr @hypre_ParCSRMatMat(ptr noundef %65, ptr noundef %66)
  store ptr %call47, ptr %Wr, align 8, !tbaa !4
  %67 = load ptr, ptr %Wr, align 8, !tbaa !4
  %68 = load ptr, ptr %A_fc, align 8, !tbaa !4
  %call48 = call ptr @hypre_ParCSRMatMat(ptr noundef %67, ptr noundef %68)
  store ptr %call48, ptr %A_H_correction, align 8, !tbaa !4
  %69 = load ptr, ptr %Wr, align 8, !tbaa !4
  %call49 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %69)
  %70 = load ptr, ptr %A_ff_inv, align 8, !tbaa !4
  %call50 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %70)
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wr) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %blk_inv_size) #6
  br label %if.end51

if.end51:                                         ; preds = %cond.end, %if.then41
  %71 = load ptr, ptr %A_cf_truncated, align 8, !tbaa !4
  %call52 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %71)
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_cf_truncated) #6
  br label %if.end63

if.else53:                                        ; preds = %lor.lhs.false
  %72 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp54 = icmp eq i32 %72, 4
  br i1 %cmp54, label %if.then56, label %if.end62

if.then56:                                        ; preds = %if.else53
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_ff_inv57) #6
  store ptr null, ptr %A_ff_inv57, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %minus_Wp) #6
  store ptr null, ptr %minus_Wp, align 8, !tbaa !4
  %73 = load ptr, ptr %A_ff, align 8, !tbaa !4
  %call58 = call i32 @hypre_MGRApproximateInverse(ptr noundef %73, ptr noundef %A_ff_inv57)
  %74 = load ptr, ptr %A_ff_inv57, align 8, !tbaa !4
  %75 = load ptr, ptr %A_fc, align 8, !tbaa !4
  %call59 = call ptr @hypre_ParCSRMatMat(ptr noundef %74, ptr noundef %75)
  store ptr %call59, ptr %minus_Wp, align 8, !tbaa !4
  %76 = load ptr, ptr %A_cf, align 8, !tbaa !4
  %77 = load ptr, ptr %minus_Wp, align 8, !tbaa !4
  %call60 = call ptr @hypre_ParCSRMatMat(ptr noundef %76, ptr noundef %77)
  store ptr %call60, ptr %A_H_correction, align 8, !tbaa !4
  %78 = load ptr, ptr %minus_Wp, align 8, !tbaa !4
  %call61 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %78)
  call void @llvm.lifetime.end.p0(i64 8, ptr %minus_Wp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_ff_inv57) #6
  br label %if.end62

if.end62:                                         ; preds = %if.then56, %if.else53
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end51
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end
  %79 = load ptr, ptr %A_ff, align 8, !tbaa !4
  %call65 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %79)
  %80 = load ptr, ptr %A_fc, align 8, !tbaa !4
  %call66 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %80)
  %81 = load ptr, ptr %A_cf, align 8, !tbaa !4
  %call67 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %81)
  call void @llvm.lifetime.start.p0(i64 4, ptr %n_local_cpoints) #6
  %82 = load ptr, ptr %A_H_correction, align 8, !tbaa !4
  %diag68 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %82, i32 0, i32 8
  %83 = load ptr, ptr %diag68, align 8, !tbaa !149
  %num_rows69 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %83, i32 0, i32 3
  %84 = load i32, ptr %num_rows69, align 8, !tbaa !151
  store i32 %84, ptr %n_local_cpoints, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_diag) #6
  %85 = load ptr, ptr %A_H_correction, align 8, !tbaa !4
  %diag70 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %85, i32 0, i32 8
  %86 = load ptr, ptr %diag70, align 8, !tbaa !149
  store ptr %86, ptr %A_H_correction_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_diag_data) #6
  %87 = load ptr, ptr %A_H_correction_diag, align 8, !tbaa !4
  %data71 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %87, i32 0, i32 10
  %88 = load ptr, ptr %data71, align 8, !tbaa !165
  store ptr %88, ptr %A_H_correction_diag_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_diag_i) #6
  %89 = load ptr, ptr %A_H_correction_diag, align 8, !tbaa !4
  %i72 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %89, i32 0, i32 0
  %90 = load ptr, ptr %i72, align 8, !tbaa !163
  store ptr %90, ptr %A_H_correction_diag_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_diag_j) #6
  %91 = load ptr, ptr %A_H_correction_diag, align 8, !tbaa !4
  %j = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %91, i32 0, i32 1
  %92 = load ptr, ptr %j, align 8, !tbaa !164
  store ptr %92, ptr %A_H_correction_diag_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %ncol_diag) #6
  %93 = load ptr, ptr %A_H_correction_diag, align 8, !tbaa !4
  %num_cols = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %93, i32 0, i32 4
  %94 = load i32, ptr %num_cols, align 4, !tbaa !167
  store i32 %94, ptr %ncol_diag, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_offd) #6
  %95 = load ptr, ptr %A_H_correction, align 8, !tbaa !4
  %offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %95, i32 0, i32 9
  %96 = load ptr, ptr %offd, align 8, !tbaa !162
  store ptr %96, ptr %A_H_correction_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_offd_data) #6
  %97 = load ptr, ptr %A_H_correction_offd, align 8, !tbaa !4
  %data73 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %97, i32 0, i32 10
  %98 = load ptr, ptr %data73, align 8, !tbaa !165
  store ptr %98, ptr %A_H_correction_offd_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_offd_i) #6
  %99 = load ptr, ptr %A_H_correction_offd, align 8, !tbaa !4
  %i74 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %99, i32 0, i32 0
  %100 = load ptr, ptr %i74, align 8, !tbaa !163
  store ptr %100, ptr %A_H_correction_offd_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_offd_j) #6
  %101 = load ptr, ptr %A_H_correction_offd, align 8, !tbaa !4
  %j75 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %101, i32 0, i32 1
  %102 = load ptr, ptr %j75, align 8, !tbaa !164
  store ptr %102, ptr %A_H_correction_offd_j, align 8, !tbaa !4
  %103 = load i32, ptr %Pmax.addr, align 4, !tbaa !92
  %cmp76 = icmp sgt i32 %103, 0
  br i1 %cmp76, label %if.then78, label %if.end269

if.then78:                                        ; preds = %if.end64
  %104 = load i32, ptr %ordering.addr, align 4, !tbaa !92
  %cmp79 = icmp eq i32 %104, 0
  br i1 %cmp79, label %if.then81, label %if.else267

if.then81:                                        ; preds = %if.then78
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_diag_i_new) #6
  %105 = load i32, ptr %n_local_cpoints, align 4, !tbaa !92
  %add = add nsw i32 %105, 1
  %conv82 = sext i32 %add to i64
  %106 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call83 = call ptr @hypre_CAlloc(i64 noundef %conv82, i64 noundef 4, i32 noundef %106)
  store ptr %call83, ptr %A_H_correction_diag_i_new, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_diag_j_new) #6
  %107 = load i32, ptr %bsize.addr, align 4, !tbaa !92
  %108 = load i32, ptr %max_elmts, align 4, !tbaa !92
  %add84 = add nsw i32 %107, %108
  %109 = load i32, ptr %n_local_cpoints, align 4, !tbaa !92
  %mul = mul nsw i32 %add84, %109
  %conv85 = sext i32 %mul to i64
  %110 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call86 = call ptr @hypre_CAlloc(i64 noundef %conv85, i64 noundef 4, i32 noundef %110)
  store ptr %call86, ptr %A_H_correction_diag_j_new, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_diag_data_new) #6
  %111 = load i32, ptr %bsize.addr, align 4, !tbaa !92
  %112 = load i32, ptr %max_elmts, align 4, !tbaa !92
  %add87 = add nsw i32 %111, %112
  %113 = load i32, ptr %n_local_cpoints, align 4, !tbaa !92
  %mul88 = mul nsw i32 %add87, %113
  %conv89 = sext i32 %mul88 to i64
  %114 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call90 = call ptr @hypre_CAlloc(i64 noundef %conv89, i64 noundef 8, i32 noundef %114)
  store ptr %call90, ptr %A_H_correction_diag_data_new, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_nonzeros_diag_new) #6
  store i32 0, ptr %num_nonzeros_diag_new, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_offd_i_new) #6
  %115 = load i32, ptr %n_local_cpoints, align 4, !tbaa !92
  %add91 = add nsw i32 %115, 1
  %conv92 = sext i32 %add91 to i64
  %116 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call93 = call ptr @hypre_CAlloc(i64 noundef %conv92, i64 noundef 4, i32 noundef %116)
  store ptr %call93, ptr %A_H_correction_offd_i_new, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_offd_j_new) #6
  %117 = load i32, ptr %max_elmts, align 4, !tbaa !92
  %118 = load i32, ptr %n_local_cpoints, align 4, !tbaa !92
  %mul94 = mul nsw i32 %117, %118
  %conv95 = sext i32 %mul94 to i64
  %119 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call96 = call ptr @hypre_CAlloc(i64 noundef %conv95, i64 noundef 4, i32 noundef %119)
  store ptr %call96, ptr %A_H_correction_offd_j_new, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_H_correction_offd_data_new) #6
  %120 = load i32, ptr %max_elmts, align 4, !tbaa !92
  %121 = load i32, ptr %n_local_cpoints, align 4, !tbaa !92
  %mul97 = mul nsw i32 %120, %121
  %conv98 = sext i32 %mul97 to i64
  %122 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call99 = call ptr @hypre_CAlloc(i64 noundef %conv98, i64 noundef 8, i32 noundef %122)
  store ptr %call99, ptr %A_H_correction_offd_data_new, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_nonzeros_offd_new) #6
  store i32 0, ptr %num_nonzeros_offd_new, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond100

for.cond100:                                      ; preds = %for.inc249, %if.then81
  %123 = load i32, ptr %i, align 4, !tbaa !92
  %124 = load i32, ptr %n_local_cpoints, align 4, !tbaa !92
  %cmp101 = icmp slt i32 %123, %124
  br i1 %cmp101, label %for.body103, label %for.end251

for.body103:                                      ; preds = %for.cond100
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_nonzeros) #6
  %125 = load ptr, ptr %A_H_correction_diag_i, align 8, !tbaa !4
  %126 = load i32, ptr %i, align 4, !tbaa !92
  %add104 = add nsw i32 %126, 1
  %idxprom105 = sext i32 %add104 to i64
  %arrayidx106 = getelementptr inbounds i32, ptr %125, i64 %idxprom105
  %127 = load i32, ptr %arrayidx106, align 4, !tbaa !92
  %128 = load ptr, ptr %A_H_correction_diag_i, align 8, !tbaa !4
  %129 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom107 = sext i32 %129 to i64
  %arrayidx108 = getelementptr inbounds i32, ptr %128, i64 %idxprom107
  %130 = load i32, ptr %arrayidx108, align 4, !tbaa !92
  %sub109 = sub nsw i32 %127, %130
  %131 = load ptr, ptr %A_H_correction_offd_i, align 8, !tbaa !4
  %132 = load i32, ptr %i, align 4, !tbaa !92
  %add110 = add nsw i32 %132, 1
  %idxprom111 = sext i32 %add110 to i64
  %arrayidx112 = getelementptr inbounds i32, ptr %131, i64 %idxprom111
  %133 = load i32, ptr %arrayidx112, align 4, !tbaa !92
  %add113 = add nsw i32 %sub109, %133
  %134 = load ptr, ptr %A_H_correction_offd_i, align 8, !tbaa !4
  %135 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom114 = sext i32 %135 to i64
  %arrayidx115 = getelementptr inbounds i32, ptr %134, i64 %idxprom114
  %136 = load i32, ptr %arrayidx115, align 4, !tbaa !92
  %sub116 = sub nsw i32 %add113, %136
  store i32 %sub116, ptr %max_num_nonzeros, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %aux_j) #6
  %137 = load i32, ptr %max_num_nonzeros, align 4, !tbaa !92
  %conv117 = sext i32 %137 to i64
  %138 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call118 = call ptr @hypre_CAlloc(i64 noundef %conv117, i64 noundef 4, i32 noundef %138)
  store ptr %call118, ptr %aux_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %aux_data) #6
  %139 = load i32, ptr %max_num_nonzeros, align 4, !tbaa !92
  %conv119 = sext i32 %139 to i64
  %140 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call120 = call ptr @hypre_CAlloc(i64 noundef %conv119, i64 noundef 8, i32 noundef %140)
  store ptr %call120, ptr %aux_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %row_start) #6
  %141 = load i32, ptr %i, align 4, !tbaa !92
  %142 = load i32, ptr %i, align 4, !tbaa !92
  %143 = load i32, ptr %bsize.addr, align 4, !tbaa !92
  %rem = srem i32 %142, %143
  %sub121 = sub nsw i32 %141, %rem
  store i32 %sub121, ptr %row_start, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %row_stop) #6
  %144 = load i32, ptr %row_start, align 4, !tbaa !92
  %145 = load i32, ptr %bsize.addr, align 4, !tbaa !92
  %add122 = add nsw i32 %144, %145
  %sub123 = sub nsw i32 %add122, 1
  store i32 %sub123, ptr %row_stop, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #6
  store i32 0, ptr %cnt, align 4, !tbaa !92
  %146 = load ptr, ptr %A_H_correction_offd_i, align 8, !tbaa !4
  %147 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom124 = sext i32 %147 to i64
  %arrayidx125 = getelementptr inbounds i32, ptr %146, i64 %idxprom124
  %148 = load i32, ptr %arrayidx125, align 4, !tbaa !92
  store i32 %148, ptr %jj, align 4, !tbaa !92
  br label %for.cond126

for.cond126:                                      ; preds = %for.inc143, %for.body103
  %149 = load i32, ptr %jj, align 4, !tbaa !92
  %150 = load ptr, ptr %A_H_correction_offd_i, align 8, !tbaa !4
  %151 = load i32, ptr %i, align 4, !tbaa !92
  %add127 = add nsw i32 %151, 1
  %idxprom128 = sext i32 %add127 to i64
  %arrayidx129 = getelementptr inbounds i32, ptr %150, i64 %idxprom128
  %152 = load i32, ptr %arrayidx129, align 4, !tbaa !92
  %cmp130 = icmp slt i32 %149, %152
  br i1 %cmp130, label %for.body132, label %for.end145

for.body132:                                      ; preds = %for.cond126
  %153 = load ptr, ptr %A_H_correction_offd_j, align 8, !tbaa !4
  %154 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom133 = sext i32 %154 to i64
  %arrayidx134 = getelementptr inbounds i32, ptr %153, i64 %idxprom133
  %155 = load i32, ptr %arrayidx134, align 4, !tbaa !92
  %156 = load i32, ptr %ncol_diag, align 4, !tbaa !92
  %add135 = add nsw i32 %155, %156
  %157 = load ptr, ptr %aux_j, align 8, !tbaa !4
  %158 = load i32, ptr %cnt, align 4, !tbaa !92
  %idxprom136 = sext i32 %158 to i64
  %arrayidx137 = getelementptr inbounds i32, ptr %157, i64 %idxprom136
  store i32 %add135, ptr %arrayidx137, align 4, !tbaa !92
  %159 = load ptr, ptr %A_H_correction_offd_data, align 8, !tbaa !4
  %160 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom138 = sext i32 %160 to i64
  %arrayidx139 = getelementptr inbounds double, ptr %159, i64 %idxprom138
  %161 = load double, ptr %arrayidx139, align 8, !tbaa !161
  %162 = load ptr, ptr %aux_data, align 8, !tbaa !4
  %163 = load i32, ptr %cnt, align 4, !tbaa !92
  %idxprom140 = sext i32 %163 to i64
  %arrayidx141 = getelementptr inbounds double, ptr %162, i64 %idxprom140
  store double %161, ptr %arrayidx141, align 8, !tbaa !161
  %164 = load i32, ptr %cnt, align 4, !tbaa !92
  %inc142 = add nsw i32 %164, 1
  store i32 %inc142, ptr %cnt, align 4, !tbaa !92
  br label %for.inc143

for.inc143:                                       ; preds = %for.body132
  %165 = load i32, ptr %jj, align 4, !tbaa !92
  %inc144 = add nsw i32 %165, 1
  store i32 %inc144, ptr %jj, align 4, !tbaa !92
  br label %for.cond126, !llvm.loop !253

for.end145:                                       ; preds = %for.cond126
  %166 = load ptr, ptr %A_H_correction_diag_i, align 8, !tbaa !4
  %167 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom146 = sext i32 %167 to i64
  %arrayidx147 = getelementptr inbounds i32, ptr %166, i64 %idxprom146
  %168 = load i32, ptr %arrayidx147, align 4, !tbaa !92
  store i32 %168, ptr %jj, align 4, !tbaa !92
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc164, %for.end145
  %169 = load i32, ptr %jj, align 4, !tbaa !92
  %170 = load ptr, ptr %A_H_correction_diag_i, align 8, !tbaa !4
  %171 = load i32, ptr %i, align 4, !tbaa !92
  %add149 = add nsw i32 %171, 1
  %idxprom150 = sext i32 %add149 to i64
  %arrayidx151 = getelementptr inbounds i32, ptr %170, i64 %idxprom150
  %172 = load i32, ptr %arrayidx151, align 4, !tbaa !92
  %cmp152 = icmp slt i32 %169, %172
  br i1 %cmp152, label %for.body154, label %for.end166

for.body154:                                      ; preds = %for.cond148
  %173 = load ptr, ptr %A_H_correction_diag_j, align 8, !tbaa !4
  %174 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom155 = sext i32 %174 to i64
  %arrayidx156 = getelementptr inbounds i32, ptr %173, i64 %idxprom155
  %175 = load i32, ptr %arrayidx156, align 4, !tbaa !92
  %176 = load ptr, ptr %aux_j, align 8, !tbaa !4
  %177 = load i32, ptr %cnt, align 4, !tbaa !92
  %idxprom157 = sext i32 %177 to i64
  %arrayidx158 = getelementptr inbounds i32, ptr %176, i64 %idxprom157
  store i32 %175, ptr %arrayidx158, align 4, !tbaa !92
  %178 = load ptr, ptr %A_H_correction_diag_data, align 8, !tbaa !4
  %179 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom159 = sext i32 %179 to i64
  %arrayidx160 = getelementptr inbounds double, ptr %178, i64 %idxprom159
  %180 = load double, ptr %arrayidx160, align 8, !tbaa !161
  %181 = load ptr, ptr %aux_data, align 8, !tbaa !4
  %182 = load i32, ptr %cnt, align 4, !tbaa !92
  %idxprom161 = sext i32 %182 to i64
  %arrayidx162 = getelementptr inbounds double, ptr %181, i64 %idxprom161
  store double %180, ptr %arrayidx162, align 8, !tbaa !161
  %183 = load i32, ptr %cnt, align 4, !tbaa !92
  %inc163 = add nsw i32 %183, 1
  store i32 %inc163, ptr %cnt, align 4, !tbaa !92
  br label %for.inc164

for.inc164:                                       ; preds = %for.body154
  %184 = load i32, ptr %jj, align 4, !tbaa !92
  %inc165 = add nsw i32 %184, 1
  store i32 %inc165, ptr %jj, align 4, !tbaa !92
  br label %for.cond148, !llvm.loop !254

for.end166:                                       ; preds = %for.cond148
  %185 = load ptr, ptr %aux_j, align 8, !tbaa !4
  %186 = load ptr, ptr %aux_data, align 8, !tbaa !4
  %187 = load i32, ptr %cnt, align 4, !tbaa !92
  %sub167 = sub nsw i32 %187, 1
  call void @hypre_qsort2_abs(ptr noundef %185, ptr noundef %186, i32 noundef 0, i32 noundef %sub167)
  %188 = load ptr, ptr %A_H_correction_diag_i, align 8, !tbaa !4
  %189 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom168 = sext i32 %189 to i64
  %arrayidx169 = getelementptr inbounds i32, ptr %188, i64 %idxprom168
  %190 = load i32, ptr %arrayidx169, align 4, !tbaa !92
  store i32 %190, ptr %jj, align 4, !tbaa !92
  br label %for.cond170

for.cond170:                                      ; preds = %for.inc193, %for.end166
  %191 = load i32, ptr %jj, align 4, !tbaa !92
  %192 = load ptr, ptr %A_H_correction_diag_i, align 8, !tbaa !4
  %193 = load i32, ptr %i, align 4, !tbaa !92
  %add171 = add nsw i32 %193, 1
  %idxprom172 = sext i32 %add171 to i64
  %arrayidx173 = getelementptr inbounds i32, ptr %192, i64 %idxprom172
  %194 = load i32, ptr %arrayidx173, align 4, !tbaa !92
  %cmp174 = icmp slt i32 %191, %194
  br i1 %cmp174, label %for.body176, label %for.end195

for.body176:                                      ; preds = %for.cond170
  %195 = load ptr, ptr %A_H_correction_diag_j, align 8, !tbaa !4
  %196 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom177 = sext i32 %196 to i64
  %arrayidx178 = getelementptr inbounds i32, ptr %195, i64 %idxprom177
  %197 = load i32, ptr %arrayidx178, align 4, !tbaa !92
  store i32 %197, ptr %i1, align 4, !tbaa !92
  %198 = load i32, ptr %i1, align 4, !tbaa !92
  %199 = load i32, ptr %row_start, align 4, !tbaa !92
  %cmp179 = icmp sge i32 %198, %199
  br i1 %cmp179, label %land.lhs.true, label %if.else191

land.lhs.true:                                    ; preds = %for.body176
  %200 = load i32, ptr %i1, align 4, !tbaa !92
  %201 = load i32, ptr %row_stop, align 4, !tbaa !92
  %cmp181 = icmp sle i32 %200, %201
  br i1 %cmp181, label %if.then183, label %if.else191

if.then183:                                       ; preds = %land.lhs.true
  %202 = load i32, ptr %i1, align 4, !tbaa !92
  %203 = load ptr, ptr %A_H_correction_diag_j_new, align 8, !tbaa !4
  %204 = load i32, ptr %num_nonzeros_diag_new, align 4, !tbaa !92
  %idxprom184 = sext i32 %204 to i64
  %arrayidx185 = getelementptr inbounds i32, ptr %203, i64 %idxprom184
  store i32 %202, ptr %arrayidx185, align 4, !tbaa !92
  %205 = load ptr, ptr %A_H_correction_diag_data, align 8, !tbaa !4
  %206 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom186 = sext i32 %206 to i64
  %arrayidx187 = getelementptr inbounds double, ptr %205, i64 %idxprom186
  %207 = load double, ptr %arrayidx187, align 8, !tbaa !161
  %208 = load ptr, ptr %A_H_correction_diag_data_new, align 8, !tbaa !4
  %209 = load i32, ptr %num_nonzeros_diag_new, align 4, !tbaa !92
  %idxprom188 = sext i32 %209 to i64
  %arrayidx189 = getelementptr inbounds double, ptr %208, i64 %idxprom188
  store double %207, ptr %arrayidx189, align 8, !tbaa !161
  %210 = load i32, ptr %num_nonzeros_diag_new, align 4, !tbaa !92
  %inc190 = add nsw i32 %210, 1
  store i32 %inc190, ptr %num_nonzeros_diag_new, align 4, !tbaa !92
  br label %if.end192

if.else191:                                       ; preds = %land.lhs.true, %for.body176
  br label %if.end192

if.end192:                                        ; preds = %if.else191, %if.then183
  br label %for.inc193

for.inc193:                                       ; preds = %if.end192
  %211 = load i32, ptr %jj, align 4, !tbaa !92
  %inc194 = add nsw i32 %211, 1
  store i32 %inc194, ptr %jj, align 4, !tbaa !92
  br label %for.cond170, !llvm.loop !255

for.end195:                                       ; preds = %for.cond170
  %212 = load i32, ptr %max_elmts, align 4, !tbaa !92
  %cmp196 = icmp sgt i32 %212, 0
  br i1 %cmp196, label %if.then198, label %if.end242

if.then198:                                       ; preds = %for.end195
  store i32 0, ptr %jj, align 4, !tbaa !92
  br label %for.cond199

for.cond199:                                      ; preds = %for.inc239, %if.then198
  %213 = load i32, ptr %jj, align 4, !tbaa !92
  %214 = load i32, ptr %max_elmts, align 4, !tbaa !92
  %215 = load i32, ptr %cnt, align 4, !tbaa !92
  %cmp200 = icmp slt i32 %214, %215
  br i1 %cmp200, label %cond.true202, label %cond.false203

cond.true202:                                     ; preds = %for.cond199
  %216 = load i32, ptr %max_elmts, align 4, !tbaa !92
  br label %cond.end204

cond.false203:                                    ; preds = %for.cond199
  %217 = load i32, ptr %cnt, align 4, !tbaa !92
  br label %cond.end204

cond.end204:                                      ; preds = %cond.false203, %cond.true202
  %cond205 = phi i32 [ %216, %cond.true202 ], [ %217, %cond.false203 ]
  %cmp206 = icmp slt i32 %213, %cond205
  br i1 %cmp206, label %for.body208, label %for.end241

for.body208:                                      ; preds = %cond.end204
  call void @llvm.lifetime.start.p0(i64 4, ptr %col_idx) #6
  %218 = load ptr, ptr %aux_j, align 8, !tbaa !4
  %219 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom209 = sext i32 %219 to i64
  %arrayidx210 = getelementptr inbounds i32, ptr %218, i64 %idxprom209
  %220 = load i32, ptr %arrayidx210, align 4, !tbaa !92
  store i32 %220, ptr %col_idx, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %col_value) #6
  %221 = load ptr, ptr %aux_data, align 8, !tbaa !4
  %222 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom211 = sext i32 %222 to i64
  %arrayidx212 = getelementptr inbounds double, ptr %221, i64 %idxprom211
  %223 = load double, ptr %arrayidx212, align 8, !tbaa !161
  store double %223, ptr %col_value, align 8, !tbaa !161
  %224 = load i32, ptr %col_idx, align 4, !tbaa !92
  %225 = load i32, ptr %ncol_diag, align 4, !tbaa !92
  %cmp213 = icmp slt i32 %224, %225
  br i1 %cmp213, label %land.lhs.true215, label %if.else227

land.lhs.true215:                                 ; preds = %for.body208
  %226 = load i32, ptr %col_idx, align 4, !tbaa !92
  %227 = load i32, ptr %row_start, align 4, !tbaa !92
  %cmp216 = icmp slt i32 %226, %227
  br i1 %cmp216, label %if.then221, label %lor.lhs.false218

lor.lhs.false218:                                 ; preds = %land.lhs.true215
  %228 = load i32, ptr %col_idx, align 4, !tbaa !92
  %229 = load i32, ptr %row_stop, align 4, !tbaa !92
  %cmp219 = icmp sgt i32 %228, %229
  br i1 %cmp219, label %if.then221, label %if.else227

if.then221:                                       ; preds = %lor.lhs.false218, %land.lhs.true215
  %230 = load i32, ptr %col_idx, align 4, !tbaa !92
  %231 = load ptr, ptr %A_H_correction_diag_j_new, align 8, !tbaa !4
  %232 = load i32, ptr %num_nonzeros_diag_new, align 4, !tbaa !92
  %idxprom222 = sext i32 %232 to i64
  %arrayidx223 = getelementptr inbounds i32, ptr %231, i64 %idxprom222
  store i32 %230, ptr %arrayidx223, align 4, !tbaa !92
  %233 = load double, ptr %col_value, align 8, !tbaa !161
  %234 = load ptr, ptr %A_H_correction_diag_data_new, align 8, !tbaa !4
  %235 = load i32, ptr %num_nonzeros_diag_new, align 4, !tbaa !92
  %idxprom224 = sext i32 %235 to i64
  %arrayidx225 = getelementptr inbounds double, ptr %234, i64 %idxprom224
  store double %233, ptr %arrayidx225, align 8, !tbaa !161
  %236 = load i32, ptr %num_nonzeros_diag_new, align 4, !tbaa !92
  %inc226 = add nsw i32 %236, 1
  store i32 %inc226, ptr %num_nonzeros_diag_new, align 4, !tbaa !92
  br label %if.end238

if.else227:                                       ; preds = %lor.lhs.false218, %for.body208
  %237 = load i32, ptr %col_idx, align 4, !tbaa !92
  %238 = load i32, ptr %ncol_diag, align 4, !tbaa !92
  %cmp228 = icmp sge i32 %237, %238
  br i1 %cmp228, label %if.then230, label %if.end237

if.then230:                                       ; preds = %if.else227
  %239 = load i32, ptr %col_idx, align 4, !tbaa !92
  %240 = load i32, ptr %ncol_diag, align 4, !tbaa !92
  %sub231 = sub nsw i32 %239, %240
  %241 = load ptr, ptr %A_H_correction_offd_j_new, align 8, !tbaa !4
  %242 = load i32, ptr %num_nonzeros_offd_new, align 4, !tbaa !92
  %idxprom232 = sext i32 %242 to i64
  %arrayidx233 = getelementptr inbounds i32, ptr %241, i64 %idxprom232
  store i32 %sub231, ptr %arrayidx233, align 4, !tbaa !92
  %243 = load double, ptr %col_value, align 8, !tbaa !161
  %244 = load ptr, ptr %A_H_correction_offd_data_new, align 8, !tbaa !4
  %245 = load i32, ptr %num_nonzeros_offd_new, align 4, !tbaa !92
  %idxprom234 = sext i32 %245 to i64
  %arrayidx235 = getelementptr inbounds double, ptr %244, i64 %idxprom234
  store double %243, ptr %arrayidx235, align 8, !tbaa !161
  %246 = load i32, ptr %num_nonzeros_offd_new, align 4, !tbaa !92
  %inc236 = add nsw i32 %246, 1
  store i32 %inc236, ptr %num_nonzeros_offd_new, align 4, !tbaa !92
  br label %if.end237

if.end237:                                        ; preds = %if.then230, %if.else227
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %if.then221
  call void @llvm.lifetime.end.p0(i64 8, ptr %col_value) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %col_idx) #6
  br label %for.inc239

for.inc239:                                       ; preds = %if.end238
  %247 = load i32, ptr %jj, align 4, !tbaa !92
  %inc240 = add nsw i32 %247, 1
  store i32 %inc240, ptr %jj, align 4, !tbaa !92
  br label %for.cond199, !llvm.loop !256

for.end241:                                       ; preds = %cond.end204
  br label %if.end242

if.end242:                                        ; preds = %for.end241, %for.end195
  %248 = load i32, ptr %num_nonzeros_diag_new, align 4, !tbaa !92
  %249 = load ptr, ptr %A_H_correction_diag_i_new, align 8, !tbaa !4
  %250 = load i32, ptr %i, align 4, !tbaa !92
  %add243 = add nsw i32 %250, 1
  %idxprom244 = sext i32 %add243 to i64
  %arrayidx245 = getelementptr inbounds i32, ptr %249, i64 %idxprom244
  store i32 %248, ptr %arrayidx245, align 4, !tbaa !92
  %251 = load i32, ptr %num_nonzeros_offd_new, align 4, !tbaa !92
  %252 = load ptr, ptr %A_H_correction_offd_i_new, align 8, !tbaa !4
  %253 = load i32, ptr %i, align 4, !tbaa !92
  %add246 = add nsw i32 %253, 1
  %idxprom247 = sext i32 %add246 to i64
  %arrayidx248 = getelementptr inbounds i32, ptr %252, i64 %idxprom247
  store i32 %251, ptr %arrayidx248, align 4, !tbaa !92
  %254 = load ptr, ptr %aux_j, align 8, !tbaa !4
  %255 = load i32, ptr %memory_location, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %254, i32 noundef %255)
  store ptr null, ptr %aux_j, align 8, !tbaa !4
  %256 = load ptr, ptr %aux_data, align 8, !tbaa !4
  %257 = load i32, ptr %memory_location, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %256, i32 noundef %257)
  store ptr null, ptr %aux_data, align 8, !tbaa !4
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %row_stop) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %row_start) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %aux_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %aux_j) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_nonzeros) #6
  br label %for.inc249

for.inc249:                                       ; preds = %if.end242
  %258 = load i32, ptr %i, align 4, !tbaa !92
  %inc250 = add nsw i32 %258, 1
  store i32 %inc250, ptr %i, align 4, !tbaa !92
  br label %for.cond100, !llvm.loop !257

for.end251:                                       ; preds = %for.cond100
  %259 = load ptr, ptr %A_H_correction_diag_i, align 8, !tbaa !4
  %260 = load i32, ptr %memory_location, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %259, i32 noundef %260)
  store ptr null, ptr %A_H_correction_diag_i, align 8, !tbaa !4
  %261 = load ptr, ptr %A_H_correction_diag_j, align 8, !tbaa !4
  %262 = load i32, ptr %memory_location, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %261, i32 noundef %262)
  store ptr null, ptr %A_H_correction_diag_j, align 8, !tbaa !4
  %263 = load ptr, ptr %A_H_correction_diag_data, align 8, !tbaa !4
  %264 = load i32, ptr %memory_location, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %263, i32 noundef %264)
  store ptr null, ptr %A_H_correction_diag_data, align 8, !tbaa !4
  %265 = load ptr, ptr %A_H_correction_diag_i_new, align 8, !tbaa !4
  %266 = load ptr, ptr %A_H_correction_diag, align 8, !tbaa !4
  %i252 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %266, i32 0, i32 0
  store ptr %265, ptr %i252, align 8, !tbaa !163
  %267 = load ptr, ptr %A_H_correction_diag_j_new, align 8, !tbaa !4
  %268 = load ptr, ptr %A_H_correction_diag, align 8, !tbaa !4
  %j253 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %268, i32 0, i32 1
  store ptr %267, ptr %j253, align 8, !tbaa !164
  %269 = load ptr, ptr %A_H_correction_diag_data_new, align 8, !tbaa !4
  %270 = load ptr, ptr %A_H_correction_diag, align 8, !tbaa !4
  %data254 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %270, i32 0, i32 10
  store ptr %269, ptr %data254, align 8, !tbaa !165
  %271 = load i32, ptr %num_nonzeros_diag_new, align 4, !tbaa !92
  %272 = load ptr, ptr %A_H_correction_diag, align 8, !tbaa !4
  %num_nonzeros = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %272, i32 0, i32 5
  store i32 %271, ptr %num_nonzeros, align 8, !tbaa !166
  %273 = load ptr, ptr %A_H_correction_offd_i, align 8, !tbaa !4
  %tobool = icmp ne ptr %273, null
  br i1 %tobool, label %if.then255, label %if.end256

if.then255:                                       ; preds = %for.end251
  %274 = load ptr, ptr %A_H_correction_offd_i, align 8, !tbaa !4
  %275 = load i32, ptr %memory_location, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %274, i32 noundef %275)
  store ptr null, ptr %A_H_correction_offd_i, align 8, !tbaa !4
  br label %if.end256

if.end256:                                        ; preds = %if.then255, %for.end251
  %276 = load ptr, ptr %A_H_correction_offd_j, align 8, !tbaa !4
  %tobool257 = icmp ne ptr %276, null
  br i1 %tobool257, label %if.then258, label %if.end259

if.then258:                                       ; preds = %if.end256
  %277 = load ptr, ptr %A_H_correction_offd_j, align 8, !tbaa !4
  %278 = load i32, ptr %memory_location, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %277, i32 noundef %278)
  store ptr null, ptr %A_H_correction_offd_j, align 8, !tbaa !4
  br label %if.end259

if.end259:                                        ; preds = %if.then258, %if.end256
  %279 = load ptr, ptr %A_H_correction_offd_data, align 8, !tbaa !4
  %tobool260 = icmp ne ptr %279, null
  br i1 %tobool260, label %if.then261, label %if.end262

if.then261:                                       ; preds = %if.end259
  %280 = load ptr, ptr %A_H_correction_offd_data, align 8, !tbaa !4
  %281 = load i32, ptr %memory_location, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %280, i32 noundef %281)
  store ptr null, ptr %A_H_correction_offd_data, align 8, !tbaa !4
  br label %if.end262

if.end262:                                        ; preds = %if.then261, %if.end259
  %282 = load ptr, ptr %A_H_correction_offd_i_new, align 8, !tbaa !4
  %283 = load ptr, ptr %A_H_correction_offd, align 8, !tbaa !4
  %i263 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %283, i32 0, i32 0
  store ptr %282, ptr %i263, align 8, !tbaa !163
  %284 = load ptr, ptr %A_H_correction_offd_j_new, align 8, !tbaa !4
  %285 = load ptr, ptr %A_H_correction_offd, align 8, !tbaa !4
  %j264 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %285, i32 0, i32 1
  store ptr %284, ptr %j264, align 8, !tbaa !164
  %286 = load ptr, ptr %A_H_correction_offd_data_new, align 8, !tbaa !4
  %287 = load ptr, ptr %A_H_correction_offd, align 8, !tbaa !4
  %data265 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %287, i32 0, i32 10
  store ptr %286, ptr %data265, align 8, !tbaa !165
  %288 = load i32, ptr %num_nonzeros_offd_new, align 4, !tbaa !92
  %289 = load ptr, ptr %A_H_correction_offd, align 8, !tbaa !4
  %num_nonzeros266 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %289, i32 0, i32 5
  store i32 %288, ptr %num_nonzeros266, align 8, !tbaa !166
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_nonzeros_offd_new) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_offd_data_new) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_offd_j_new) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_offd_i_new) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_nonzeros_diag_new) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_diag_data_new) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_diag_j_new) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_diag_i_new) #6
  br label %if.end268

if.else267:                                       ; preds = %if.then78
  br label %if.end268

if.end268:                                        ; preds = %if.else267, %if.end262
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.end64
  store double -1.000000e+00, ptr %alpha, align 8, !tbaa !161
  %290 = load ptr, ptr %A_cc, align 8, !tbaa !4
  %291 = load double, ptr %alpha, align 8, !tbaa !161
  %292 = load ptr, ptr %A_H_correction, align 8, !tbaa !4
  %call270 = call i32 @hypre_ParCSRMatrixAdd(double noundef 1.000000e+00, ptr noundef %290, double noundef %291, ptr noundef %292, ptr noundef %A_H)
  %293 = load ptr, ptr %A_cc, align 8, !tbaa !4
  %call271 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %293)
  %294 = load ptr, ptr %A_H_correction, align 8, !tbaa !4
  %call272 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %294)
  %295 = load ptr, ptr %c_marker, align 8, !tbaa !4
  %296 = load i32, ptr %memory_location, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %295, i32 noundef %296)
  store ptr null, ptr %c_marker, align 8, !tbaa !4
  %297 = load ptr, ptr %f_marker, align 8, !tbaa !4
  %298 = load i32, ptr %memory_location, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %297, i32 noundef %298)
  store ptr null, ptr %f_marker, align 8, !tbaa !4
  %299 = load ptr, ptr %marker_array, align 8, !tbaa !4
  %300 = load i32, ptr %memory_location, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %299, i32 noundef %300)
  store ptr null, ptr %marker_array, align 8, !tbaa !4
  %301 = load ptr, ptr %A_H, align 8, !tbaa !4
  %302 = load ptr, ptr %A_H_ptr.addr, align 8, !tbaa !4
  store ptr %301, ptr %302, align 8, !tbaa !4
  %303 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_offd_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_offd_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ncol_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction_diag) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n_local_cpoints) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %memory_location) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %marker_array) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %fine_pnts_global) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %coarse_pnts_global) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %alpha) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_elmts) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H_correction) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_H) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_ff_inv) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_cf) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_fc) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_ff) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_cc) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i1) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n_local_fine_grid) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %f_marker) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %c_marker) #6
  ret i32 %303
}

declare i32 @hypre_ParCSRMatrixGenerateFFFC(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

declare ptr @hypre_ParMatmul(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRApproximateInverse(ptr noundef %A, ptr noundef %A_inv) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %A_inv.addr = alloca ptr, align 8
  %print_level = alloca i32, align 4
  %mr_max_row_nnz = alloca i32, align 4
  %mr_max_iter = alloca i32, align 4
  %nsh_max_row_nnz = alloca i32, align 4
  %nsh_max_iter = alloca i32, align 4
  %mr_col_version = alloca i32, align 4
  %mr_tol = alloca double, align 8
  %nsh_tol = alloca double, align 8
  %droptol = alloca ptr, align 8
  %approx_A_inv = alloca ptr, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %A_inv, ptr %A_inv.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %print_level) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %mr_max_row_nnz) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %mr_max_iter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %nsh_max_row_nnz) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %nsh_max_iter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %mr_col_version) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %mr_tol) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %nsh_tol) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %droptol) #6
  %call = call ptr @hypre_CAlloc(i64 noundef 2, i64 noundef 8, i32 noundef 0)
  store ptr %call, ptr %droptol, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %approx_A_inv) #6
  store ptr null, ptr %approx_A_inv, align 8, !tbaa !4
  store i32 0, ptr %print_level, align 4, !tbaa !92
  store i32 2, ptr %nsh_max_iter, align 4, !tbaa !92
  store i32 2, ptr %nsh_max_row_nnz, align 4, !tbaa !92
  store i32 1, ptr %mr_max_iter, align 4, !tbaa !92
  store double 1.000000e-03, ptr %mr_tol, align 8, !tbaa !161
  store i32 2, ptr %mr_max_row_nnz, align 4, !tbaa !92
  store i32 0, ptr %mr_col_version, align 4, !tbaa !92
  store double 1.000000e-03, ptr %nsh_tol, align 8, !tbaa !161
  %0 = load ptr, ptr %droptol, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds double, ptr %0, i64 0
  store double 1.000000e-02, ptr %arrayidx, align 8, !tbaa !161
  %1 = load ptr, ptr %droptol, align 8, !tbaa !4
  %arrayidx1 = getelementptr inbounds double, ptr %1, i64 1
  store double 1.000000e-02, ptr %arrayidx1, align 8, !tbaa !161
  %2 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %3 = load ptr, ptr %droptol, align 8, !tbaa !4
  %4 = load double, ptr %mr_tol, align 8, !tbaa !161
  %5 = load double, ptr %nsh_tol, align 8, !tbaa !161
  %6 = load i32, ptr %mr_max_row_nnz, align 4, !tbaa !92
  %7 = load i32, ptr %nsh_max_row_nnz, align 4, !tbaa !92
  %8 = load i32, ptr %mr_max_iter, align 4, !tbaa !92
  %9 = load i32, ptr %nsh_max_iter, align 4, !tbaa !92
  %10 = load i32, ptr %mr_col_version, align 4, !tbaa !92
  %11 = load i32, ptr %print_level, align 4, !tbaa !92
  %call2 = call i32 @hypre_ILUParCSRInverseNSH(ptr noundef %2, ptr noundef %approx_A_inv, ptr noundef %3, double noundef %4, double noundef %5, double noundef 0x10000000000000, i32 noundef %6, i32 noundef %7, i32 noundef %8, i32 noundef %9, i32 noundef %10, i32 noundef %11)
  %12 = load ptr, ptr %approx_A_inv, align 8, !tbaa !4
  %13 = load ptr, ptr %A_inv.addr, align 8, !tbaa !4
  store ptr %12, ptr %13, align 8, !tbaa !4
  %14 = load ptr, ptr %droptol, align 8, !tbaa !4
  %tobool = icmp ne ptr %14, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %15 = load ptr, ptr %droptol, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %15, i32 noundef 0)
  store ptr null, ptr %droptol, align 8, !tbaa !4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %16 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %approx_A_inv) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %droptol) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %nsh_tol) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mr_tol) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %mr_col_version) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nsh_max_iter) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nsh_max_row_nnz) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %mr_max_iter) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %mr_max_row_nnz) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %print_level) #6
  ret i32 %16
}

declare void @hypre_qsort2_abs(ptr noundef, ptr noundef, i32 noundef, i32 noundef) #2

declare i32 @hypre_ParCSRMatrixAdd(double noundef, ptr noundef, double noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRComputeAlgebraicFixedStress(ptr noundef %A, ptr noundef %mgr_idx_array, ptr noundef %A_ff_solver) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %mgr_idx_array.addr = alloca ptr, align 8
  %A_ff_solver.addr = alloca ptr, align 8
  %U_marker = alloca ptr, align 8
  %S_marker = alloca ptr, align 8
  %P_marker = alloca ptr, align 8
  %n_fine = alloca i32, align 4
  %i = alloca i32, align 4
  %ibegin = alloca i32, align 4
  %A_up = alloca ptr, align 8
  %A_uu = alloca ptr, align 8
  %A_su = alloca ptr, align 8
  %A_pu = alloca ptr, align 8
  %e1_vector = alloca ptr, align 8
  %e2_vector = alloca ptr, align 8
  %e3_vector = alloca ptr, align 8
  %e4_vector = alloca ptr, align 8
  %e5_vector = alloca ptr, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %mgr_idx_array, ptr %mgr_idx_array.addr, align 8, !tbaa !4
  store ptr %A_ff_solver, ptr %A_ff_solver.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %U_marker) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %S_marker) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_marker) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %n_fine) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ibegin) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_up) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_uu) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_su) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_pu) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %e1_vector) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %e2_vector) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %e3_vector) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %e4_vector) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %e5_vector) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 8
  %1 = load ptr, ptr %diag, align 8, !tbaa !149
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %1, i32 0, i32 3
  %2 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %2, ptr %n_fine, align 4, !tbaa !92
  %3 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %first_row_index = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %3, i32 0, i32 4
  %4 = load i32, ptr %first_row_index, align 4, !tbaa !258
  store i32 %4, ptr %ibegin, align 4, !tbaa !92
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %5 = load i32, ptr %n_fine, align 4, !tbaa !92
  %conv = sext i32 %5 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %U_marker, align 8, !tbaa !4
  %6 = load i32, ptr %n_fine, align 4, !tbaa !92
  %conv1 = sext i32 %6 to i64
  %call2 = call ptr @hypre_CAlloc(i64 noundef %conv1, i64 noundef 4, i32 noundef 0)
  store ptr %call2, ptr %S_marker, align 8, !tbaa !4
  %7 = load i32, ptr %n_fine, align 4, !tbaa !92
  %conv3 = sext i32 %7 to i64
  %call4 = call ptr @hypre_CAlloc(i64 noundef %conv3, i64 noundef 4, i32 noundef 0)
  store ptr %call4, ptr %P_marker, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %9 = load i32, ptr %n_fine, align 4, !tbaa !92
  %cmp = icmp slt i32 %8, %9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %U_marker, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom
  store i32 -1, ptr %arrayidx, align 4, !tbaa !92
  %12 = load ptr, ptr %S_marker, align 8, !tbaa !4
  %13 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom6 = sext i32 %13 to i64
  %arrayidx7 = getelementptr inbounds i32, ptr %12, i64 %idxprom6
  store i32 -1, ptr %arrayidx7, align 4, !tbaa !92
  %14 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom8 = sext i32 %15 to i64
  %arrayidx9 = getelementptr inbounds i32, ptr %14, i64 %idxprom8
  store i32 -1, ptr %arrayidx9, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %16, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !259

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc34, %for.end
  %17 = load i32, ptr %i, align 4, !tbaa !92
  %18 = load i32, ptr %n_fine, align 4, !tbaa !92
  %cmp11 = icmp slt i32 %17, %18
  br i1 %cmp11, label %for.body13, label %for.end36

for.body13:                                       ; preds = %for.cond10
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %20 = load ptr, ptr %mgr_idx_array.addr, align 8, !tbaa !4
  %arrayidx14 = getelementptr inbounds i32, ptr %20, i64 1
  %21 = load i32, ptr %arrayidx14, align 4, !tbaa !92
  %22 = load i32, ptr %ibegin, align 4, !tbaa !92
  %sub = sub nsw i32 %21, %22
  %cmp15 = icmp slt i32 %19, %sub
  br i1 %cmp15, label %if.then, label %if.else

if.then:                                          ; preds = %for.body13
  %23 = load ptr, ptr %U_marker, align 8, !tbaa !4
  %24 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom17 = sext i32 %24 to i64
  %arrayidx18 = getelementptr inbounds i32, ptr %23, i64 %idxprom17
  store i32 1, ptr %arrayidx18, align 4, !tbaa !92
  br label %if.end33

if.else:                                          ; preds = %for.body13
  %25 = load i32, ptr %i, align 4, !tbaa !92
  %26 = load ptr, ptr %mgr_idx_array.addr, align 8, !tbaa !4
  %arrayidx19 = getelementptr inbounds i32, ptr %26, i64 1
  %27 = load i32, ptr %arrayidx19, align 4, !tbaa !92
  %28 = load i32, ptr %ibegin, align 4, !tbaa !92
  %sub20 = sub nsw i32 %27, %28
  %cmp21 = icmp sge i32 %25, %sub20
  br i1 %cmp21, label %land.lhs.true, label %if.else30

land.lhs.true:                                    ; preds = %if.else
  %29 = load i32, ptr %i, align 4, !tbaa !92
  %30 = load ptr, ptr %mgr_idx_array.addr, align 8, !tbaa !4
  %arrayidx23 = getelementptr inbounds i32, ptr %30, i64 2
  %31 = load i32, ptr %arrayidx23, align 4, !tbaa !92
  %32 = load i32, ptr %ibegin, align 4, !tbaa !92
  %sub24 = sub nsw i32 %31, %32
  %cmp25 = icmp slt i32 %29, %sub24
  br i1 %cmp25, label %if.then27, label %if.else30

if.then27:                                        ; preds = %land.lhs.true
  %33 = load ptr, ptr %S_marker, align 8, !tbaa !4
  %34 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom28 = sext i32 %34 to i64
  %arrayidx29 = getelementptr inbounds i32, ptr %33, i64 %idxprom28
  store i32 1, ptr %arrayidx29, align 4, !tbaa !92
  br label %if.end

if.else30:                                        ; preds = %land.lhs.true, %if.else
  %35 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %36 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom31 = sext i32 %36 to i64
  %arrayidx32 = getelementptr inbounds i32, ptr %35, i64 %idxprom31
  store i32 1, ptr %arrayidx32, align 4, !tbaa !92
  br label %if.end

if.end:                                           ; preds = %if.else30, %if.then27
  br label %if.end33

if.end33:                                         ; preds = %if.end, %if.then
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %37 = load i32, ptr %i, align 4, !tbaa !92
  %inc35 = add nsw i32 %37, 1
  store i32 %inc35, ptr %i, align 4, !tbaa !92
  br label %for.cond10, !llvm.loop !260

for.end36:                                        ; preds = %for.cond10
  %38 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %39 = load ptr, ptr %U_marker, align 8, !tbaa !4
  %40 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %call37 = call i32 @hypre_MGRGetSubBlock(ptr noundef %38, ptr noundef %39, ptr noundef %40, i32 noundef 0, ptr noundef %A_up)
  %41 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %42 = load ptr, ptr %U_marker, align 8, !tbaa !4
  %43 = load ptr, ptr %U_marker, align 8, !tbaa !4
  %call38 = call i32 @hypre_MGRGetSubBlock(ptr noundef %41, ptr noundef %42, ptr noundef %43, i32 noundef 0, ptr noundef %A_uu)
  %44 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %45 = load ptr, ptr %S_marker, align 8, !tbaa !4
  %46 = load ptr, ptr %U_marker, align 8, !tbaa !4
  %call39 = call i32 @hypre_MGRGetSubBlock(ptr noundef %44, ptr noundef %45, ptr noundef %46, i32 noundef 0, ptr noundef %A_su)
  %47 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %48 = load ptr, ptr %P_marker, align 8, !tbaa !4
  %49 = load ptr, ptr %U_marker, align 8, !tbaa !4
  %call40 = call i32 @hypre_MGRGetSubBlock(ptr noundef %47, ptr noundef %48, ptr noundef %49, i32 noundef 0, ptr noundef %A_pu)
  %50 = load ptr, ptr %A_up, align 8, !tbaa !4
  %comm = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %50, i32 0, i32 0
  %51 = load ptr, ptr %comm, align 8, !tbaa !160
  %52 = load ptr, ptr %A_up, align 8, !tbaa !4
  %global_num_cols = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %52, i32 0, i32 2
  %53 = load i32, ptr %global_num_cols, align 4, !tbaa !172
  %54 = load ptr, ptr %A_up, align 8, !tbaa !4
  %col_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %54, i32 0, i32 15
  %arraydecay = getelementptr inbounds [2 x i32], ptr %col_starts, i64 0, i64 0
  %call41 = call ptr @hypre_ParVectorCreate(ptr noundef %51, i32 noundef %53, ptr noundef %arraydecay)
  store ptr %call41, ptr %e1_vector, align 8, !tbaa !4
  %55 = load ptr, ptr %e1_vector, align 8, !tbaa !4
  %call42 = call i32 @hypre_ParVectorInitialize(ptr noundef %55)
  %56 = load ptr, ptr %e1_vector, align 8, !tbaa !4
  %call43 = call i32 @hypre_ParVectorSetConstantValues(ptr noundef %56, double noundef 1.000000e+00)
  %57 = load ptr, ptr %A_uu, align 8, !tbaa !4
  %comm44 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %57, i32 0, i32 0
  %58 = load ptr, ptr %comm44, align 8, !tbaa !160
  %59 = load ptr, ptr %A_uu, align 8, !tbaa !4
  %global_num_rows = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %59, i32 0, i32 1
  %60 = load i32, ptr %global_num_rows, align 8, !tbaa !171
  %61 = load ptr, ptr %A_uu, align 8, !tbaa !4
  %row_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %61, i32 0, i32 14
  %arraydecay45 = getelementptr inbounds [2 x i32], ptr %row_starts, i64 0, i64 0
  %call46 = call ptr @hypre_ParVectorCreate(ptr noundef %58, i32 noundef %60, ptr noundef %arraydecay45)
  store ptr %call46, ptr %e2_vector, align 8, !tbaa !4
  %62 = load ptr, ptr %e2_vector, align 8, !tbaa !4
  %call47 = call i32 @hypre_ParVectorInitialize(ptr noundef %62)
  %63 = load ptr, ptr %e2_vector, align 8, !tbaa !4
  %call48 = call i32 @hypre_ParVectorSetConstantValues(ptr noundef %63, double noundef 0.000000e+00)
  %64 = load ptr, ptr %A_uu, align 8, !tbaa !4
  %comm49 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %64, i32 0, i32 0
  %65 = load ptr, ptr %comm49, align 8, !tbaa !160
  %66 = load ptr, ptr %A_uu, align 8, !tbaa !4
  %global_num_rows50 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %66, i32 0, i32 1
  %67 = load i32, ptr %global_num_rows50, align 8, !tbaa !171
  %68 = load ptr, ptr %A_uu, align 8, !tbaa !4
  %row_starts51 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %68, i32 0, i32 14
  %arraydecay52 = getelementptr inbounds [2 x i32], ptr %row_starts51, i64 0, i64 0
  %call53 = call ptr @hypre_ParVectorCreate(ptr noundef %65, i32 noundef %67, ptr noundef %arraydecay52)
  store ptr %call53, ptr %e3_vector, align 8, !tbaa !4
  %69 = load ptr, ptr %e3_vector, align 8, !tbaa !4
  %call54 = call i32 @hypre_ParVectorInitialize(ptr noundef %69)
  %70 = load ptr, ptr %e3_vector, align 8, !tbaa !4
  %call55 = call i32 @hypre_ParVectorSetConstantValues(ptr noundef %70, double noundef 0.000000e+00)
  %71 = load ptr, ptr %A_su, align 8, !tbaa !4
  %comm56 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %71, i32 0, i32 0
  %72 = load ptr, ptr %comm56, align 8, !tbaa !160
  %73 = load ptr, ptr %A_su, align 8, !tbaa !4
  %global_num_rows57 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %73, i32 0, i32 1
  %74 = load i32, ptr %global_num_rows57, align 8, !tbaa !171
  %75 = load ptr, ptr %A_su, align 8, !tbaa !4
  %row_starts58 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %75, i32 0, i32 14
  %arraydecay59 = getelementptr inbounds [2 x i32], ptr %row_starts58, i64 0, i64 0
  %call60 = call ptr @hypre_ParVectorCreate(ptr noundef %72, i32 noundef %74, ptr noundef %arraydecay59)
  store ptr %call60, ptr %e4_vector, align 8, !tbaa !4
  %76 = load ptr, ptr %e4_vector, align 8, !tbaa !4
  %call61 = call i32 @hypre_ParVectorInitialize(ptr noundef %76)
  %77 = load ptr, ptr %e4_vector, align 8, !tbaa !4
  %call62 = call i32 @hypre_ParVectorSetConstantValues(ptr noundef %77, double noundef 0.000000e+00)
  %78 = load ptr, ptr %A_pu, align 8, !tbaa !4
  %comm63 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %78, i32 0, i32 0
  %79 = load ptr, ptr %comm63, align 8, !tbaa !160
  %80 = load ptr, ptr %A_pu, align 8, !tbaa !4
  %global_num_rows64 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %80, i32 0, i32 1
  %81 = load i32, ptr %global_num_rows64, align 8, !tbaa !171
  %82 = load ptr, ptr %A_pu, align 8, !tbaa !4
  %row_starts65 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %82, i32 0, i32 14
  %arraydecay66 = getelementptr inbounds [2 x i32], ptr %row_starts65, i64 0, i64 0
  %call67 = call ptr @hypre_ParVectorCreate(ptr noundef %79, i32 noundef %81, ptr noundef %arraydecay66)
  store ptr %call67, ptr %e5_vector, align 8, !tbaa !4
  %83 = load ptr, ptr %e5_vector, align 8, !tbaa !4
  %call68 = call i32 @hypre_ParVectorInitialize(ptr noundef %83)
  %84 = load ptr, ptr %e5_vector, align 8, !tbaa !4
  %call69 = call i32 @hypre_ParVectorSetConstantValues(ptr noundef %84, double noundef 0.000000e+00)
  %85 = load ptr, ptr %A_up, align 8, !tbaa !4
  %86 = load ptr, ptr %e1_vector, align 8, !tbaa !4
  %87 = load ptr, ptr %e2_vector, align 8, !tbaa !4
  %88 = load ptr, ptr %e2_vector, align 8, !tbaa !4
  %call70 = call i32 @hypre_ParCSRMatrixMatvecOutOfPlace(double noundef 1.000000e+00, ptr noundef %85, ptr noundef %86, double noundef 0.000000e+00, ptr noundef %87, ptr noundef %88)
  %89 = load ptr, ptr %A_ff_solver.addr, align 8, !tbaa !4
  %90 = load ptr, ptr %A_uu, align 8, !tbaa !4
  %91 = load ptr, ptr %e2_vector, align 8, !tbaa !4
  %92 = load ptr, ptr %e3_vector, align 8, !tbaa !4
  %call71 = call i32 @hypre_BoomerAMGSolve(ptr noundef %89, ptr noundef %90, ptr noundef %91, ptr noundef %92)
  %93 = load ptr, ptr %A_su, align 8, !tbaa !4
  %94 = load ptr, ptr %e3_vector, align 8, !tbaa !4
  %95 = load ptr, ptr %e4_vector, align 8, !tbaa !4
  %96 = load ptr, ptr %e4_vector, align 8, !tbaa !4
  %call72 = call i32 @hypre_ParCSRMatrixMatvecOutOfPlace(double noundef 1.000000e+00, ptr noundef %93, ptr noundef %94, double noundef 0.000000e+00, ptr noundef %95, ptr noundef %96)
  %97 = load ptr, ptr %A_su, align 8, !tbaa !4
  %98 = load ptr, ptr %e3_vector, align 8, !tbaa !4
  %99 = load ptr, ptr %e4_vector, align 8, !tbaa !4
  %100 = load ptr, ptr %e4_vector, align 8, !tbaa !4
  %call73 = call i32 @hypre_ParCSRMatrixMatvecOutOfPlace(double noundef 1.000000e+00, ptr noundef %97, ptr noundef %98, double noundef 0.000000e+00, ptr noundef %99, ptr noundef %100)
  %101 = load ptr, ptr %e4_vector, align 8, !tbaa !4
  %call74 = call i32 @hypre_ParVectorPrintIJ(ptr noundef %101, i32 noundef 1, ptr noundef @.str.8)
  %102 = load ptr, ptr %A_pu, align 8, !tbaa !4
  %103 = load ptr, ptr %e3_vector, align 8, !tbaa !4
  %104 = load ptr, ptr %e5_vector, align 8, !tbaa !4
  %105 = load ptr, ptr %e5_vector, align 8, !tbaa !4
  %call75 = call i32 @hypre_ParCSRMatrixMatvecOutOfPlace(double noundef 1.000000e+00, ptr noundef %102, ptr noundef %103, double noundef 0.000000e+00, ptr noundef %104, ptr noundef %105)
  %106 = load ptr, ptr %e5_vector, align 8, !tbaa !4
  %call76 = call i32 @hypre_ParVectorPrintIJ(ptr noundef %106, i32 noundef 1, ptr noundef @.str.9)
  %107 = load ptr, ptr %e1_vector, align 8, !tbaa !4
  %call77 = call i32 @hypre_ParVectorDestroy(ptr noundef %107)
  %108 = load ptr, ptr %e2_vector, align 8, !tbaa !4
  %call78 = call i32 @hypre_ParVectorDestroy(ptr noundef %108)
  %109 = load ptr, ptr %e3_vector, align 8, !tbaa !4
  %call79 = call i32 @hypre_ParVectorDestroy(ptr noundef %109)
  %110 = load ptr, ptr %A_uu, align 8, !tbaa !4
  %call80 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %110)
  %111 = load ptr, ptr %A_up, align 8, !tbaa !4
  %call81 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %111)
  %112 = load ptr, ptr %A_pu, align 8, !tbaa !4
  %call82 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %112)
  %113 = load ptr, ptr %A_su, align 8, !tbaa !4
  %call83 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %113)
  %114 = load ptr, ptr %U_marker, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %114, i32 noundef 0)
  store ptr null, ptr %U_marker, align 8, !tbaa !4
  %115 = load ptr, ptr %S_marker, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %115, i32 noundef 0)
  store ptr null, ptr %S_marker, align 8, !tbaa !4
  %116 = load ptr, ptr %P_marker, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %116, i32 noundef 0)
  store ptr null, ptr %P_marker, align 8, !tbaa !4
  %117 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %e5_vector) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %e4_vector) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %e3_vector) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %e2_vector) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %e1_vector) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_pu) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_su) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_uu) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_up) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ibegin) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n_fine) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_marker) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %S_marker) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %U_marker) #6
  ret i32 %117
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRGetSubBlock(ptr noundef %A, ptr noundef %row_cf_marker, ptr noundef %col_cf_marker, i32 noundef %debug_flag, ptr noundef %A_block_ptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %row_cf_marker.addr = alloca ptr, align 8
  %col_cf_marker.addr = alloca ptr, align 8
  %debug_flag.addr = alloca i32, align 4
  %A_block_ptr.addr = alloca ptr, align 8
  %comm = alloca ptr, align 8
  %comm_pkg = alloca ptr, align 8
  %comm_handle = alloca ptr, align 8
  %memory_location = alloca i32, align 4
  %A_diag = alloca ptr, align 8
  %A_diag_data = alloca ptr, align 8
  %A_diag_i = alloca ptr, align 8
  %A_diag_j = alloca ptr, align 8
  %A_offd = alloca ptr, align 8
  %A_offd_data = alloca ptr, align 8
  %A_offd_i = alloca ptr, align 8
  %A_offd_j = alloca ptr, align 8
  %num_cols_A_offd = alloca i32, align 4
  %coarse_dof_func_ptr = alloca ptr, align 8
  %num_row_cpts_global = alloca [2 x i32], align 4
  %num_col_cpts_global = alloca [2 x i32], align 4
  %Ablock = alloca ptr, align 8
  %col_map_offd_Ablock = alloca ptr, align 8
  %tmp_map_offd = alloca ptr, align 8
  %CF_marker_offd = alloca ptr, align 8
  %Ablock_diag = alloca ptr, align 8
  %Ablock_offd = alloca ptr, align 8
  %Ablock_diag_data = alloca ptr, align 8
  %Ablock_diag_i = alloca ptr, align 8
  %Ablock_diag_j = alloca ptr, align 8
  %Ablock_offd_data = alloca ptr, align 8
  %Ablock_offd_i = alloca ptr, align 8
  %Ablock_offd_j = alloca ptr, align 8
  %Ablock_diag_size = alloca i32, align 4
  %Ablock_offd_size = alloca i32, align 4
  %Ablock_marker = alloca ptr, align 8
  %ii_counter = alloca i32, align 4
  %jj_counter = alloca i32, align 4
  %jj_counter_offd = alloca i32, align 4
  %jj_count = alloca ptr, align 8
  %jj_count_offd = alloca ptr, align 8
  %start_indexing = alloca i32, align 4
  %n_fine = alloca i32, align 4
  %fine_to_coarse = alloca ptr, align 8
  %coarse_counter = alloca ptr, align 8
  %col_coarse_counter = alloca ptr, align 8
  %coarse_shift = alloca i32, align 4
  %total_global_row_cpts = alloca i32, align 4
  %total_global_col_cpts = alloca i32, align 4
  %num_cols_Ablock_offd = alloca i32, align 4
  %i6 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j7 = alloca i32, align 4
  %jl = alloca i32, align 4
  %jj = alloca i32, align 4
  %start = alloca i32, align 4
  %my_id = alloca i32, align 4
  %num_procs = alloca i32, align 4
  %num_threads = alloca i32, align 4
  %num_sends = alloca i32, align 4
  %index = alloca i32, align 4
  %ns = alloca i32, align 4
  %ne = alloca i32, align 4
  %size = alloca i32, align 4
  %rest = alloca i32, align 4
  %int_buf_data = alloca ptr, align 8
  %local_numrows = alloca i32, align 4
  %wrap_cf = alloca ptr, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %row_cf_marker, ptr %row_cf_marker.addr, align 8, !tbaa !4
  store ptr %col_cf_marker, ptr %col_cf_marker.addr, align 8, !tbaa !4
  store i32 %debug_flag, ptr %debug_flag.addr, align 4, !tbaa !92
  store ptr %A_block_ptr, ptr %A_block_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %comm1, align 8, !tbaa !160
  store ptr %1, ptr %comm, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm_pkg) #6
  %2 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm_pkg2 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %2, i32 0, i32 16
  %3 = load ptr, ptr %comm_pkg2, align 8, !tbaa !187
  store ptr %3, ptr %comm_pkg, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm_handle) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %memory_location) #6
  %4 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call = call i32 @hypre_ParCSRMatrixMemoryLocation(ptr noundef %4)
  store i32 %call, ptr %memory_location, align 4, !tbaa !155
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag) #6
  %5 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %5, i32 0, i32 8
  %6 = load ptr, ptr %diag, align 8, !tbaa !149
  store ptr %6, ptr %A_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_data) #6
  %7 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %7, i32 0, i32 10
  %8 = load ptr, ptr %data, align 8, !tbaa !165
  store ptr %8, ptr %A_diag_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_i) #6
  %9 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %i = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %9, i32 0, i32 0
  %10 = load ptr, ptr %i, align 8, !tbaa !163
  store ptr %10, ptr %A_diag_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_j) #6
  %11 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %j = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %11, i32 0, i32 1
  %12 = load ptr, ptr %j, align 8, !tbaa !164
  store ptr %12, ptr %A_diag_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd) #6
  %13 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %13, i32 0, i32 9
  %14 = load ptr, ptr %offd, align 8, !tbaa !162
  store ptr %14, ptr %A_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_data) #6
  %15 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %data3 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %15, i32 0, i32 10
  %16 = load ptr, ptr %data3, align 8, !tbaa !165
  store ptr %16, ptr %A_offd_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_i) #6
  %17 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %i4 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %17, i32 0, i32 0
  %18 = load ptr, ptr %i4, align 8, !tbaa !163
  store ptr %18, ptr %A_offd_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_j) #6
  %19 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %j5 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %19, i32 0, i32 1
  %20 = load ptr, ptr %j5, align 8, !tbaa !164
  store ptr %20, ptr %A_offd_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_cols_A_offd) #6
  %21 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %num_cols = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %21, i32 0, i32 4
  %22 = load i32, ptr %num_cols, align 4, !tbaa !167
  store i32 %22, ptr %num_cols_A_offd, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %coarse_dof_func_ptr) #6
  store ptr null, ptr %coarse_dof_func_ptr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %num_row_cpts_global) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %num_col_cpts_global) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Ablock) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %col_map_offd_Ablock) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_map_offd) #6
  store ptr null, ptr %tmp_map_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %CF_marker_offd) #6
  store ptr null, ptr %CF_marker_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %Ablock_diag) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Ablock_offd) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Ablock_diag_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Ablock_diag_i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Ablock_diag_j) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Ablock_offd_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Ablock_offd_i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Ablock_offd_j) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %Ablock_diag_size) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %Ablock_offd_size) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %Ablock_marker) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ii_counter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj_counter_offd) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %jj_count) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %jj_count_offd) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %start_indexing) #6
  store i32 0, ptr %start_indexing, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %n_fine) #6
  %23 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %23, i32 0, i32 3
  %24 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %24, ptr %n_fine, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %fine_to_coarse) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %coarse_counter) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %col_coarse_counter) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %coarse_shift) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %total_global_row_cpts) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %total_global_col_cpts) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_cols_Ablock_offd) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i6) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i1) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j7) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jl) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %start) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_threads) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_sends) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %index) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ns) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ne) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %size) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %rest) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %int_buf_data) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %local_numrows) #6
  %25 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %num_rows8 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %25, i32 0, i32 3
  %26 = load i32, ptr %num_rows8, align 8, !tbaa !151
  store i32 %26, ptr %local_numrows, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %wrap_cf) #6
  %27 = load ptr, ptr %comm, align 8, !tbaa !4
  %call9 = call i32 @hypre_MPI_Comm_size(ptr noundef %27, ptr noundef %num_procs)
  %28 = load ptr, ptr %comm, align 8, !tbaa !4
  %call10 = call i32 @hypre_MPI_Comm_rank(ptr noundef %28, ptr noundef %my_id)
  store i32 1, ptr %num_threads, align 4, !tbaa !92
  %29 = load i32, ptr %local_numrows, align 4, !tbaa !92
  %call11 = call ptr @hypre_IntArrayCreate(i32 noundef %29)
  store ptr %call11, ptr %wrap_cf, align 8, !tbaa !4
  %30 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %memory_location12 = getelementptr inbounds %struct.hypre_IntArray, ptr %30, i32 0, i32 2
  store i32 0, ptr %memory_location12, align 4, !tbaa !153
  %31 = load ptr, ptr %row_cf_marker.addr, align 8, !tbaa !4
  %32 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %data13 = getelementptr inbounds %struct.hypre_IntArray, ptr %32, i32 0, i32 0
  store ptr %31, ptr %data13, align 8, !tbaa !156
  %33 = load ptr, ptr %comm, align 8, !tbaa !4
  %34 = load i32, ptr %local_numrows, align 4, !tbaa !92
  %35 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %arraydecay = getelementptr inbounds [2 x i32], ptr %num_row_cpts_global, i64 0, i64 0
  %call14 = call i32 @hypre_BoomerAMGCoarseParms(ptr noundef %33, i32 noundef %34, i32 noundef 1, ptr noundef null, ptr noundef %35, ptr noundef %coarse_dof_func_ptr, ptr noundef %arraydecay)
  %36 = load ptr, ptr %coarse_dof_func_ptr, align 8, !tbaa !4
  %call15 = call i32 @hypre_IntArrayDestroy(ptr noundef %36)
  store ptr null, ptr %coarse_dof_func_ptr, align 8, !tbaa !4
  %37 = load i32, ptr %my_id, align 4, !tbaa !92
  %38 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub = sub nsw i32 %38, 1
  %cmp = icmp eq i32 %37, %sub
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [2 x i32], ptr %num_row_cpts_global, i64 0, i64 1
  %39 = load i32, ptr %arrayidx, align 4, !tbaa !92
  store i32 %39, ptr %total_global_row_cpts, align 4, !tbaa !92
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %40 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub16 = sub nsw i32 %40, 1
  %41 = load ptr, ptr %comm, align 8, !tbaa !4
  %call17 = call i32 @hypre_MPI_Bcast(ptr noundef %total_global_row_cpts, i32 noundef 1, ptr noundef @ompi_mpi_int, i32 noundef %sub16, ptr noundef %41)
  %42 = load ptr, ptr %col_cf_marker.addr, align 8, !tbaa !4
  %43 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %data18 = getelementptr inbounds %struct.hypre_IntArray, ptr %43, i32 0, i32 0
  store ptr %42, ptr %data18, align 8, !tbaa !156
  %44 = load ptr, ptr %comm, align 8, !tbaa !4
  %45 = load i32, ptr %local_numrows, align 4, !tbaa !92
  %46 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %arraydecay19 = getelementptr inbounds [2 x i32], ptr %num_col_cpts_global, i64 0, i64 0
  %call20 = call i32 @hypre_BoomerAMGCoarseParms(ptr noundef %44, i32 noundef %45, i32 noundef 1, ptr noundef null, ptr noundef %46, ptr noundef %coarse_dof_func_ptr, ptr noundef %arraydecay19)
  %47 = load ptr, ptr %coarse_dof_func_ptr, align 8, !tbaa !4
  %call21 = call i32 @hypre_IntArrayDestroy(ptr noundef %47)
  store ptr null, ptr %coarse_dof_func_ptr, align 8, !tbaa !4
  %48 = load i32, ptr %my_id, align 4, !tbaa !92
  %49 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub22 = sub nsw i32 %49, 1
  %cmp23 = icmp eq i32 %48, %sub22
  br i1 %cmp23, label %if.then24, label %if.end26

if.then24:                                        ; preds = %if.end
  %arrayidx25 = getelementptr inbounds [2 x i32], ptr %num_col_cpts_global, i64 0, i64 1
  %50 = load i32, ptr %arrayidx25, align 4, !tbaa !92
  store i32 %50, ptr %total_global_col_cpts, align 4, !tbaa !92
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %if.end
  %51 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub27 = sub nsw i32 %51, 1
  %52 = load ptr, ptr %comm, align 8, !tbaa !4
  %call28 = call i32 @hypre_MPI_Bcast(ptr noundef %total_global_col_cpts, i32 noundef 1, ptr noundef @ompi_mpi_int, i32 noundef %sub27, ptr noundef %52)
  %53 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %cmp29 = icmp slt i32 %53, 0
  br i1 %cmp29, label %if.then30, label %if.end32

if.then30:                                        ; preds = %if.end26
  %54 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %sub31 = sub nsw i32 0, %54
  store i32 %sub31, ptr %debug_flag.addr, align 4, !tbaa !92
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %if.end26
  %55 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %tobool = icmp ne i32 %55, 0
  br i1 %tobool, label %if.then33, label %if.end35

if.then33:                                        ; preds = %if.end32
  %56 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %conv = sext i32 %56 to i64
  %call34 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call34, ptr %CF_marker_offd, align 8, !tbaa !4
  br label %if.end35

if.end35:                                         ; preds = %if.then33, %if.end32
  %57 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %tobool36 = icmp ne ptr %57, null
  br i1 %tobool36, label %if.end40, label %if.then37

if.then37:                                        ; preds = %if.end35
  %58 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call38 = call i32 @hypre_MatvecCommPkgCreate(ptr noundef %58)
  %59 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm_pkg39 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %59, i32 0, i32 16
  %60 = load ptr, ptr %comm_pkg39, align 8, !tbaa !187
  store ptr %60, ptr %comm_pkg, align 8, !tbaa !4
  br label %if.end40

if.end40:                                         ; preds = %if.then37, %if.end35
  %61 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %num_sends41 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %61, i32 0, i32 2
  %62 = load i32, ptr %num_sends41, align 4, !tbaa !188
  store i32 %62, ptr %num_sends, align 4, !tbaa !92
  %63 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %63, i32 0, i32 4
  %64 = load ptr, ptr %send_map_starts, align 8, !tbaa !190
  %65 = load i32, ptr %num_sends, align 4, !tbaa !92
  %idxprom = sext i32 %65 to i64
  %arrayidx42 = getelementptr inbounds i32, ptr %64, i64 %idxprom
  %66 = load i32, ptr %arrayidx42, align 4, !tbaa !92
  %conv43 = sext i32 %66 to i64
  %call44 = call ptr @hypre_CAlloc(i64 noundef %conv43, i64 noundef 4, i32 noundef 0)
  store ptr %call44, ptr %int_buf_data, align 8, !tbaa !4
  store i32 0, ptr %index, align 4, !tbaa !92
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc64, %if.end40
  %67 = load i32, ptr %i6, align 4, !tbaa !92
  %68 = load i32, ptr %num_sends, align 4, !tbaa !92
  %cmp45 = icmp slt i32 %67, %68
  br i1 %cmp45, label %for.body, label %for.end66

for.body:                                         ; preds = %for.cond
  %69 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts47 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %69, i32 0, i32 4
  %70 = load ptr, ptr %send_map_starts47, align 8, !tbaa !190
  %71 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom48 = sext i32 %71 to i64
  %arrayidx49 = getelementptr inbounds i32, ptr %70, i64 %idxprom48
  %72 = load i32, ptr %arrayidx49, align 4, !tbaa !92
  store i32 %72, ptr %start, align 4, !tbaa !92
  %73 = load i32, ptr %start, align 4, !tbaa !92
  store i32 %73, ptr %j7, align 4, !tbaa !92
  br label %for.cond50

for.cond50:                                       ; preds = %for.inc, %for.body
  %74 = load i32, ptr %j7, align 4, !tbaa !92
  %75 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts51 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %75, i32 0, i32 4
  %76 = load ptr, ptr %send_map_starts51, align 8, !tbaa !190
  %77 = load i32, ptr %i6, align 4, !tbaa !92
  %add = add nsw i32 %77, 1
  %idxprom52 = sext i32 %add to i64
  %arrayidx53 = getelementptr inbounds i32, ptr %76, i64 %idxprom52
  %78 = load i32, ptr %arrayidx53, align 4, !tbaa !92
  %cmp54 = icmp slt i32 %74, %78
  br i1 %cmp54, label %for.body56, label %for.end

for.body56:                                       ; preds = %for.cond50
  %79 = load ptr, ptr %col_cf_marker.addr, align 8, !tbaa !4
  %80 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_elmts = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %80, i32 0, i32 5
  %81 = load ptr, ptr %send_map_elmts, align 8, !tbaa !191
  %82 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom57 = sext i32 %82 to i64
  %arrayidx58 = getelementptr inbounds i32, ptr %81, i64 %idxprom57
  %83 = load i32, ptr %arrayidx58, align 4, !tbaa !92
  %idxprom59 = sext i32 %83 to i64
  %arrayidx60 = getelementptr inbounds i32, ptr %79, i64 %idxprom59
  %84 = load i32, ptr %arrayidx60, align 4, !tbaa !92
  %85 = load ptr, ptr %int_buf_data, align 8, !tbaa !4
  %86 = load i32, ptr %index, align 4, !tbaa !92
  %inc = add nsw i32 %86, 1
  store i32 %inc, ptr %index, align 4, !tbaa !92
  %idxprom61 = sext i32 %86 to i64
  %arrayidx62 = getelementptr inbounds i32, ptr %85, i64 %idxprom61
  store i32 %84, ptr %arrayidx62, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body56
  %87 = load i32, ptr %j7, align 4, !tbaa !92
  %inc63 = add nsw i32 %87, 1
  store i32 %inc63, ptr %j7, align 4, !tbaa !92
  br label %for.cond50, !llvm.loop !261

for.end:                                          ; preds = %for.cond50
  br label %for.inc64

for.inc64:                                        ; preds = %for.end
  %88 = load i32, ptr %i6, align 4, !tbaa !92
  %inc65 = add nsw i32 %88, 1
  store i32 %inc65, ptr %i6, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !262

for.end66:                                        ; preds = %for.cond
  %89 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %90 = load ptr, ptr %int_buf_data, align 8, !tbaa !4
  %91 = load ptr, ptr %CF_marker_offd, align 8, !tbaa !4
  %call67 = call ptr @hypre_ParCSRCommHandleCreate(i32 noundef 11, ptr noundef %89, ptr noundef %90, ptr noundef %91)
  store ptr %call67, ptr %comm_handle, align 8, !tbaa !4
  %92 = load ptr, ptr %comm_handle, align 8, !tbaa !4
  %call68 = call i32 @hypre_ParCSRCommHandleDestroy(ptr noundef %92)
  %93 = load i32, ptr %num_threads, align 4, !tbaa !92
  %conv69 = sext i32 %93 to i64
  %call70 = call ptr @hypre_CAlloc(i64 noundef %conv69, i64 noundef 4, i32 noundef 0)
  store ptr %call70, ptr %coarse_counter, align 8, !tbaa !4
  %94 = load i32, ptr %num_threads, align 4, !tbaa !92
  %conv71 = sext i32 %94 to i64
  %call72 = call ptr @hypre_CAlloc(i64 noundef %conv71, i64 noundef 4, i32 noundef 0)
  store ptr %call72, ptr %col_coarse_counter, align 8, !tbaa !4
  %95 = load i32, ptr %num_threads, align 4, !tbaa !92
  %conv73 = sext i32 %95 to i64
  %call74 = call ptr @hypre_CAlloc(i64 noundef %conv73, i64 noundef 4, i32 noundef 0)
  store ptr %call74, ptr %jj_count, align 8, !tbaa !4
  %96 = load i32, ptr %num_threads, align 4, !tbaa !92
  %conv75 = sext i32 %96 to i64
  %call76 = call ptr @hypre_CAlloc(i64 noundef %conv75, i64 noundef 4, i32 noundef 0)
  store ptr %call76, ptr %jj_count_offd, align 8, !tbaa !4
  %97 = load i32, ptr %n_fine, align 4, !tbaa !92
  %conv77 = sext i32 %97 to i64
  %call78 = call ptr @hypre_CAlloc(i64 noundef %conv77, i64 noundef 4, i32 noundef 0)
  store ptr %call78, ptr %fine_to_coarse, align 8, !tbaa !4
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond79

for.cond79:                                       ; preds = %for.inc85, %for.end66
  %98 = load i32, ptr %i6, align 4, !tbaa !92
  %99 = load i32, ptr %n_fine, align 4, !tbaa !92
  %cmp80 = icmp slt i32 %98, %99
  br i1 %cmp80, label %for.body82, label %for.end87

for.body82:                                       ; preds = %for.cond79
  %100 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %101 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom83 = sext i32 %101 to i64
  %arrayidx84 = getelementptr inbounds i32, ptr %100, i64 %idxprom83
  store i32 -1, ptr %arrayidx84, align 4, !tbaa !92
  br label %for.inc85

for.inc85:                                        ; preds = %for.body82
  %102 = load i32, ptr %i6, align 4, !tbaa !92
  %inc86 = add nsw i32 %102, 1
  store i32 %inc86, ptr %i6, align 4, !tbaa !92
  br label %for.cond79, !llvm.loop !263

for.end87:                                        ; preds = %for.cond79
  %103 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %103, ptr %jj_counter, align 4, !tbaa !92
  %104 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %104, ptr %jj_counter_offd, align 4, !tbaa !92
  store i32 0, ptr %j7, align 4, !tbaa !92
  br label %for.cond88

for.cond88:                                       ; preds = %for.inc187, %for.end87
  %105 = load i32, ptr %j7, align 4, !tbaa !92
  %106 = load i32, ptr %num_threads, align 4, !tbaa !92
  %cmp89 = icmp slt i32 %105, %106
  br i1 %cmp89, label %for.body91, label %for.end189

for.body91:                                       ; preds = %for.cond88
  %107 = load i32, ptr %n_fine, align 4, !tbaa !92
  %108 = load i32, ptr %num_threads, align 4, !tbaa !92
  %div = sdiv i32 %107, %108
  store i32 %div, ptr %size, align 4, !tbaa !92
  %109 = load i32, ptr %n_fine, align 4, !tbaa !92
  %110 = load i32, ptr %size, align 4, !tbaa !92
  %111 = load i32, ptr %num_threads, align 4, !tbaa !92
  %mul = mul nsw i32 %110, %111
  %sub92 = sub nsw i32 %109, %mul
  store i32 %sub92, ptr %rest, align 4, !tbaa !92
  %112 = load i32, ptr %j7, align 4, !tbaa !92
  %113 = load i32, ptr %rest, align 4, !tbaa !92
  %cmp93 = icmp slt i32 %112, %113
  br i1 %cmp93, label %if.then95, label %if.else

if.then95:                                        ; preds = %for.body91
  %114 = load i32, ptr %j7, align 4, !tbaa !92
  %115 = load i32, ptr %size, align 4, !tbaa !92
  %mul96 = mul nsw i32 %114, %115
  %116 = load i32, ptr %j7, align 4, !tbaa !92
  %add97 = add nsw i32 %mul96, %116
  store i32 %add97, ptr %ns, align 4, !tbaa !92
  %117 = load i32, ptr %j7, align 4, !tbaa !92
  %add98 = add nsw i32 %117, 1
  %118 = load i32, ptr %size, align 4, !tbaa !92
  %mul99 = mul nsw i32 %add98, %118
  %119 = load i32, ptr %j7, align 4, !tbaa !92
  %add100 = add nsw i32 %mul99, %119
  %add101 = add nsw i32 %add100, 1
  store i32 %add101, ptr %ne, align 4, !tbaa !92
  br label %if.end107

if.else:                                          ; preds = %for.body91
  %120 = load i32, ptr %j7, align 4, !tbaa !92
  %121 = load i32, ptr %size, align 4, !tbaa !92
  %mul102 = mul nsw i32 %120, %121
  %122 = load i32, ptr %rest, align 4, !tbaa !92
  %add103 = add nsw i32 %mul102, %122
  store i32 %add103, ptr %ns, align 4, !tbaa !92
  %123 = load i32, ptr %j7, align 4, !tbaa !92
  %add104 = add nsw i32 %123, 1
  %124 = load i32, ptr %size, align 4, !tbaa !92
  %mul105 = mul nsw i32 %add104, %124
  %125 = load i32, ptr %rest, align 4, !tbaa !92
  %add106 = add nsw i32 %mul105, %125
  store i32 %add106, ptr %ne, align 4, !tbaa !92
  br label %if.end107

if.end107:                                        ; preds = %if.else, %if.then95
  %126 = load i32, ptr %ns, align 4, !tbaa !92
  store i32 %126, ptr %i6, align 4, !tbaa !92
  br label %for.cond108

for.cond108:                                      ; preds = %for.inc184, %if.end107
  %127 = load i32, ptr %i6, align 4, !tbaa !92
  %128 = load i32, ptr %ne, align 4, !tbaa !92
  %cmp109 = icmp slt i32 %127, %128
  br i1 %cmp109, label %for.body111, label %for.end186

for.body111:                                      ; preds = %for.cond108
  %129 = load ptr, ptr %col_cf_marker.addr, align 8, !tbaa !4
  %130 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom112 = sext i32 %130 to i64
  %arrayidx113 = getelementptr inbounds i32, ptr %129, i64 %idxprom112
  %131 = load i32, ptr %arrayidx113, align 4, !tbaa !92
  %cmp114 = icmp sgt i32 %131, 0
  br i1 %cmp114, label %if.then116, label %if.end124

if.then116:                                       ; preds = %for.body111
  %132 = load ptr, ptr %col_coarse_counter, align 8, !tbaa !4
  %133 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom117 = sext i32 %133 to i64
  %arrayidx118 = getelementptr inbounds i32, ptr %132, i64 %idxprom117
  %134 = load i32, ptr %arrayidx118, align 4, !tbaa !92
  %135 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %136 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom119 = sext i32 %136 to i64
  %arrayidx120 = getelementptr inbounds i32, ptr %135, i64 %idxprom119
  store i32 %134, ptr %arrayidx120, align 4, !tbaa !92
  %137 = load ptr, ptr %col_coarse_counter, align 8, !tbaa !4
  %138 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom121 = sext i32 %138 to i64
  %arrayidx122 = getelementptr inbounds i32, ptr %137, i64 %idxprom121
  %139 = load i32, ptr %arrayidx122, align 4, !tbaa !92
  %inc123 = add nsw i32 %139, 1
  store i32 %inc123, ptr %arrayidx122, align 4, !tbaa !92
  br label %if.end124

if.end124:                                        ; preds = %if.then116, %for.body111
  %140 = load ptr, ptr %row_cf_marker.addr, align 8, !tbaa !4
  %141 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom125 = sext i32 %141 to i64
  %arrayidx126 = getelementptr inbounds i32, ptr %140, i64 %idxprom125
  %142 = load i32, ptr %arrayidx126, align 4, !tbaa !92
  %cmp127 = icmp sgt i32 %142, 0
  br i1 %cmp127, label %if.then129, label %if.end183

if.then129:                                       ; preds = %if.end124
  %143 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %144 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom130 = sext i32 %144 to i64
  %arrayidx131 = getelementptr inbounds i32, ptr %143, i64 %idxprom130
  %145 = load i32, ptr %arrayidx131, align 4, !tbaa !92
  %inc132 = add nsw i32 %145, 1
  store i32 %inc132, ptr %arrayidx131, align 4, !tbaa !92
  %146 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %147 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom133 = sext i32 %147 to i64
  %arrayidx134 = getelementptr inbounds i32, ptr %146, i64 %idxprom133
  %148 = load i32, ptr %arrayidx134, align 4, !tbaa !92
  store i32 %148, ptr %jj, align 4, !tbaa !92
  br label %for.cond135

for.cond135:                                      ; preds = %for.inc153, %if.then129
  %149 = load i32, ptr %jj, align 4, !tbaa !92
  %150 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %151 = load i32, ptr %i6, align 4, !tbaa !92
  %add136 = add nsw i32 %151, 1
  %idxprom137 = sext i32 %add136 to i64
  %arrayidx138 = getelementptr inbounds i32, ptr %150, i64 %idxprom137
  %152 = load i32, ptr %arrayidx138, align 4, !tbaa !92
  %cmp139 = icmp slt i32 %149, %152
  br i1 %cmp139, label %for.body141, label %for.end155

for.body141:                                      ; preds = %for.cond135
  %153 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %154 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom142 = sext i32 %154 to i64
  %arrayidx143 = getelementptr inbounds i32, ptr %153, i64 %idxprom142
  %155 = load i32, ptr %arrayidx143, align 4, !tbaa !92
  store i32 %155, ptr %i1, align 4, !tbaa !92
  %156 = load ptr, ptr %col_cf_marker.addr, align 8, !tbaa !4
  %157 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom144 = sext i32 %157 to i64
  %arrayidx145 = getelementptr inbounds i32, ptr %156, i64 %idxprom144
  %158 = load i32, ptr %arrayidx145, align 4, !tbaa !92
  %cmp146 = icmp sgt i32 %158, 0
  br i1 %cmp146, label %if.then148, label %if.end152

if.then148:                                       ; preds = %for.body141
  %159 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %160 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom149 = sext i32 %160 to i64
  %arrayidx150 = getelementptr inbounds i32, ptr %159, i64 %idxprom149
  %161 = load i32, ptr %arrayidx150, align 4, !tbaa !92
  %inc151 = add nsw i32 %161, 1
  store i32 %inc151, ptr %arrayidx150, align 4, !tbaa !92
  br label %if.end152

if.end152:                                        ; preds = %if.then148, %for.body141
  br label %for.inc153

for.inc153:                                       ; preds = %if.end152
  %162 = load i32, ptr %jj, align 4, !tbaa !92
  %inc154 = add nsw i32 %162, 1
  store i32 %inc154, ptr %jj, align 4, !tbaa !92
  br label %for.cond135, !llvm.loop !264

for.end155:                                       ; preds = %for.cond135
  %163 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp156 = icmp sgt i32 %163, 1
  br i1 %cmp156, label %if.then158, label %if.end182

if.then158:                                       ; preds = %for.end155
  %164 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %165 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom159 = sext i32 %165 to i64
  %arrayidx160 = getelementptr inbounds i32, ptr %164, i64 %idxprom159
  %166 = load i32, ptr %arrayidx160, align 4, !tbaa !92
  store i32 %166, ptr %jj, align 4, !tbaa !92
  br label %for.cond161

for.cond161:                                      ; preds = %for.inc179, %if.then158
  %167 = load i32, ptr %jj, align 4, !tbaa !92
  %168 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %169 = load i32, ptr %i6, align 4, !tbaa !92
  %add162 = add nsw i32 %169, 1
  %idxprom163 = sext i32 %add162 to i64
  %arrayidx164 = getelementptr inbounds i32, ptr %168, i64 %idxprom163
  %170 = load i32, ptr %arrayidx164, align 4, !tbaa !92
  %cmp165 = icmp slt i32 %167, %170
  br i1 %cmp165, label %for.body167, label %for.end181

for.body167:                                      ; preds = %for.cond161
  %171 = load ptr, ptr %A_offd_j, align 8, !tbaa !4
  %172 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom168 = sext i32 %172 to i64
  %arrayidx169 = getelementptr inbounds i32, ptr %171, i64 %idxprom168
  %173 = load i32, ptr %arrayidx169, align 4, !tbaa !92
  store i32 %173, ptr %i1, align 4, !tbaa !92
  %174 = load ptr, ptr %CF_marker_offd, align 8, !tbaa !4
  %175 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom170 = sext i32 %175 to i64
  %arrayidx171 = getelementptr inbounds i32, ptr %174, i64 %idxprom170
  %176 = load i32, ptr %arrayidx171, align 4, !tbaa !92
  %cmp172 = icmp sgt i32 %176, 0
  br i1 %cmp172, label %if.then174, label %if.end178

if.then174:                                       ; preds = %for.body167
  %177 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %178 = load i32, ptr %j7, align 4, !tbaa !92
  %idxprom175 = sext i32 %178 to i64
  %arrayidx176 = getelementptr inbounds i32, ptr %177, i64 %idxprom175
  %179 = load i32, ptr %arrayidx176, align 4, !tbaa !92
  %inc177 = add nsw i32 %179, 1
  store i32 %inc177, ptr %arrayidx176, align 4, !tbaa !92
  br label %if.end178

if.end178:                                        ; preds = %if.then174, %for.body167
  br label %for.inc179

for.inc179:                                       ; preds = %if.end178
  %180 = load i32, ptr %jj, align 4, !tbaa !92
  %inc180 = add nsw i32 %180, 1
  store i32 %inc180, ptr %jj, align 4, !tbaa !92
  br label %for.cond161, !llvm.loop !265

for.end181:                                       ; preds = %for.cond161
  br label %if.end182

if.end182:                                        ; preds = %for.end181, %for.end155
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.end124
  br label %for.inc184

for.inc184:                                       ; preds = %if.end183
  %181 = load i32, ptr %i6, align 4, !tbaa !92
  %inc185 = add nsw i32 %181, 1
  store i32 %inc185, ptr %i6, align 4, !tbaa !92
  br label %for.cond108, !llvm.loop !266

for.end186:                                       ; preds = %for.cond108
  br label %for.inc187

for.inc187:                                       ; preds = %for.end186
  %182 = load i32, ptr %j7, align 4, !tbaa !92
  %inc188 = add nsw i32 %182, 1
  store i32 %inc188, ptr %j7, align 4, !tbaa !92
  br label %for.cond88, !llvm.loop !267

for.end189:                                       ; preds = %for.cond88
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond190

for.cond190:                                      ; preds = %for.inc219, %for.end189
  %183 = load i32, ptr %i6, align 4, !tbaa !92
  %184 = load i32, ptr %num_threads, align 4, !tbaa !92
  %sub191 = sub nsw i32 %184, 1
  %cmp192 = icmp slt i32 %183, %sub191
  br i1 %cmp192, label %for.body194, label %for.end221

for.body194:                                      ; preds = %for.cond190
  %185 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %186 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom195 = sext i32 %186 to i64
  %arrayidx196 = getelementptr inbounds i32, ptr %185, i64 %idxprom195
  %187 = load i32, ptr %arrayidx196, align 4, !tbaa !92
  %188 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %189 = load i32, ptr %i6, align 4, !tbaa !92
  %add197 = add nsw i32 %189, 1
  %idxprom198 = sext i32 %add197 to i64
  %arrayidx199 = getelementptr inbounds i32, ptr %188, i64 %idxprom198
  %190 = load i32, ptr %arrayidx199, align 4, !tbaa !92
  %add200 = add nsw i32 %190, %187
  store i32 %add200, ptr %arrayidx199, align 4, !tbaa !92
  %191 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %192 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom201 = sext i32 %192 to i64
  %arrayidx202 = getelementptr inbounds i32, ptr %191, i64 %idxprom201
  %193 = load i32, ptr %arrayidx202, align 4, !tbaa !92
  %194 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %195 = load i32, ptr %i6, align 4, !tbaa !92
  %add203 = add nsw i32 %195, 1
  %idxprom204 = sext i32 %add203 to i64
  %arrayidx205 = getelementptr inbounds i32, ptr %194, i64 %idxprom204
  %196 = load i32, ptr %arrayidx205, align 4, !tbaa !92
  %add206 = add nsw i32 %196, %193
  store i32 %add206, ptr %arrayidx205, align 4, !tbaa !92
  %197 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %198 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom207 = sext i32 %198 to i64
  %arrayidx208 = getelementptr inbounds i32, ptr %197, i64 %idxprom207
  %199 = load i32, ptr %arrayidx208, align 4, !tbaa !92
  %200 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %201 = load i32, ptr %i6, align 4, !tbaa !92
  %add209 = add nsw i32 %201, 1
  %idxprom210 = sext i32 %add209 to i64
  %arrayidx211 = getelementptr inbounds i32, ptr %200, i64 %idxprom210
  %202 = load i32, ptr %arrayidx211, align 4, !tbaa !92
  %add212 = add nsw i32 %202, %199
  store i32 %add212, ptr %arrayidx211, align 4, !tbaa !92
  %203 = load ptr, ptr %col_coarse_counter, align 8, !tbaa !4
  %204 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom213 = sext i32 %204 to i64
  %arrayidx214 = getelementptr inbounds i32, ptr %203, i64 %idxprom213
  %205 = load i32, ptr %arrayidx214, align 4, !tbaa !92
  %206 = load ptr, ptr %col_coarse_counter, align 8, !tbaa !4
  %207 = load i32, ptr %i6, align 4, !tbaa !92
  %add215 = add nsw i32 %207, 1
  %idxprom216 = sext i32 %add215 to i64
  %arrayidx217 = getelementptr inbounds i32, ptr %206, i64 %idxprom216
  %208 = load i32, ptr %arrayidx217, align 4, !tbaa !92
  %add218 = add nsw i32 %208, %205
  store i32 %add218, ptr %arrayidx217, align 4, !tbaa !92
  br label %for.inc219

for.inc219:                                       ; preds = %for.body194
  %209 = load i32, ptr %i6, align 4, !tbaa !92
  %inc220 = add nsw i32 %209, 1
  store i32 %inc220, ptr %i6, align 4, !tbaa !92
  br label %for.cond190, !llvm.loop !268

for.end221:                                       ; preds = %for.cond190
  %210 = load i32, ptr %num_threads, align 4, !tbaa !92
  %sub222 = sub nsw i32 %210, 1
  store i32 %sub222, ptr %i6, align 4, !tbaa !92
  %211 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %212 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom223 = sext i32 %212 to i64
  %arrayidx224 = getelementptr inbounds i32, ptr %211, i64 %idxprom223
  %213 = load i32, ptr %arrayidx224, align 4, !tbaa !92
  store i32 %213, ptr %jj_counter, align 4, !tbaa !92
  %214 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %215 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom225 = sext i32 %215 to i64
  %arrayidx226 = getelementptr inbounds i32, ptr %214, i64 %idxprom225
  %216 = load i32, ptr %arrayidx226, align 4, !tbaa !92
  store i32 %216, ptr %jj_counter_offd, align 4, !tbaa !92
  %217 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  %218 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom227 = sext i32 %218 to i64
  %arrayidx228 = getelementptr inbounds i32, ptr %217, i64 %idxprom227
  %219 = load i32, ptr %arrayidx228, align 4, !tbaa !92
  store i32 %219, ptr %ii_counter, align 4, !tbaa !92
  %220 = load i32, ptr %jj_counter, align 4, !tbaa !92
  store i32 %220, ptr %Ablock_diag_size, align 4, !tbaa !92
  %221 = load i32, ptr %ii_counter, align 4, !tbaa !92
  %add229 = add nsw i32 %221, 1
  %conv230 = sext i32 %add229 to i64
  %222 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call231 = call ptr @hypre_CAlloc(i64 noundef %conv230, i64 noundef 4, i32 noundef %222)
  store ptr %call231, ptr %Ablock_diag_i, align 8, !tbaa !4
  %223 = load i32, ptr %Ablock_diag_size, align 4, !tbaa !92
  %conv232 = sext i32 %223 to i64
  %224 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call233 = call ptr @hypre_CAlloc(i64 noundef %conv232, i64 noundef 4, i32 noundef %224)
  store ptr %call233, ptr %Ablock_diag_j, align 8, !tbaa !4
  %225 = load i32, ptr %Ablock_diag_size, align 4, !tbaa !92
  %conv234 = sext i32 %225 to i64
  %226 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call235 = call ptr @hypre_CAlloc(i64 noundef %conv234, i64 noundef 8, i32 noundef %226)
  store ptr %call235, ptr %Ablock_diag_data, align 8, !tbaa !4
  %227 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %228 = load ptr, ptr %Ablock_diag_i, align 8, !tbaa !4
  %229 = load i32, ptr %ii_counter, align 4, !tbaa !92
  %idxprom236 = sext i32 %229 to i64
  %arrayidx237 = getelementptr inbounds i32, ptr %228, i64 %idxprom236
  store i32 %227, ptr %arrayidx237, align 4, !tbaa !92
  %230 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  store i32 %230, ptr %Ablock_offd_size, align 4, !tbaa !92
  %231 = load i32, ptr %ii_counter, align 4, !tbaa !92
  %add238 = add nsw i32 %231, 1
  %conv239 = sext i32 %add238 to i64
  %232 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call240 = call ptr @hypre_CAlloc(i64 noundef %conv239, i64 noundef 4, i32 noundef %232)
  store ptr %call240, ptr %Ablock_offd_i, align 8, !tbaa !4
  %233 = load i32, ptr %Ablock_offd_size, align 4, !tbaa !92
  %conv241 = sext i32 %233 to i64
  %234 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call242 = call ptr @hypre_CAlloc(i64 noundef %conv241, i64 noundef 4, i32 noundef %234)
  store ptr %call242, ptr %Ablock_offd_j, align 8, !tbaa !4
  %235 = load i32, ptr %Ablock_offd_size, align 4, !tbaa !92
  %conv243 = sext i32 %235 to i64
  %236 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call244 = call ptr @hypre_CAlloc(i64 noundef %conv243, i64 noundef 8, i32 noundef %236)
  store ptr %call244, ptr %Ablock_offd_data, align 8, !tbaa !4
  %237 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %237, ptr %jj_counter, align 4, !tbaa !92
  %238 = load i32, ptr %start_indexing, align 4, !tbaa !92
  store i32 %238, ptr %jj_counter_offd, align 4, !tbaa !92
  store i32 0, ptr %j7, align 4, !tbaa !92
  br label %for.cond245

for.cond245:                                      ; preds = %for.inc285, %for.end221
  %239 = load i32, ptr %j7, align 4, !tbaa !92
  %240 = load i32, ptr %num_threads, align 4, !tbaa !92
  %cmp246 = icmp slt i32 %239, %240
  br i1 %cmp246, label %for.body248, label %for.end287

for.body248:                                      ; preds = %for.cond245
  store i32 0, ptr %coarse_shift, align 4, !tbaa !92
  %241 = load i32, ptr %j7, align 4, !tbaa !92
  %cmp249 = icmp sgt i32 %241, 0
  br i1 %cmp249, label %if.then251, label %if.end255

if.then251:                                       ; preds = %for.body248
  %242 = load ptr, ptr %col_coarse_counter, align 8, !tbaa !4
  %243 = load i32, ptr %j7, align 4, !tbaa !92
  %sub252 = sub nsw i32 %243, 1
  %idxprom253 = sext i32 %sub252 to i64
  %arrayidx254 = getelementptr inbounds i32, ptr %242, i64 %idxprom253
  %244 = load i32, ptr %arrayidx254, align 4, !tbaa !92
  store i32 %244, ptr %coarse_shift, align 4, !tbaa !92
  br label %if.end255

if.end255:                                        ; preds = %if.then251, %for.body248
  %245 = load i32, ptr %n_fine, align 4, !tbaa !92
  %246 = load i32, ptr %num_threads, align 4, !tbaa !92
  %div256 = sdiv i32 %245, %246
  store i32 %div256, ptr %size, align 4, !tbaa !92
  %247 = load i32, ptr %n_fine, align 4, !tbaa !92
  %248 = load i32, ptr %size, align 4, !tbaa !92
  %249 = load i32, ptr %num_threads, align 4, !tbaa !92
  %mul257 = mul nsw i32 %248, %249
  %sub258 = sub nsw i32 %247, %mul257
  store i32 %sub258, ptr %rest, align 4, !tbaa !92
  %250 = load i32, ptr %j7, align 4, !tbaa !92
  %251 = load i32, ptr %rest, align 4, !tbaa !92
  %cmp259 = icmp slt i32 %250, %251
  br i1 %cmp259, label %if.then261, label %if.else268

if.then261:                                       ; preds = %if.end255
  %252 = load i32, ptr %j7, align 4, !tbaa !92
  %253 = load i32, ptr %size, align 4, !tbaa !92
  %mul262 = mul nsw i32 %252, %253
  %254 = load i32, ptr %j7, align 4, !tbaa !92
  %add263 = add nsw i32 %mul262, %254
  store i32 %add263, ptr %ns, align 4, !tbaa !92
  %255 = load i32, ptr %j7, align 4, !tbaa !92
  %add264 = add nsw i32 %255, 1
  %256 = load i32, ptr %size, align 4, !tbaa !92
  %mul265 = mul nsw i32 %add264, %256
  %257 = load i32, ptr %j7, align 4, !tbaa !92
  %add266 = add nsw i32 %mul265, %257
  %add267 = add nsw i32 %add266, 1
  store i32 %add267, ptr %ne, align 4, !tbaa !92
  br label %if.end274

if.else268:                                       ; preds = %if.end255
  %258 = load i32, ptr %j7, align 4, !tbaa !92
  %259 = load i32, ptr %size, align 4, !tbaa !92
  %mul269 = mul nsw i32 %258, %259
  %260 = load i32, ptr %rest, align 4, !tbaa !92
  %add270 = add nsw i32 %mul269, %260
  store i32 %add270, ptr %ns, align 4, !tbaa !92
  %261 = load i32, ptr %j7, align 4, !tbaa !92
  %add271 = add nsw i32 %261, 1
  %262 = load i32, ptr %size, align 4, !tbaa !92
  %mul272 = mul nsw i32 %add271, %262
  %263 = load i32, ptr %rest, align 4, !tbaa !92
  %add273 = add nsw i32 %mul272, %263
  store i32 %add273, ptr %ne, align 4, !tbaa !92
  br label %if.end274

if.end274:                                        ; preds = %if.else268, %if.then261
  %264 = load i32, ptr %ns, align 4, !tbaa !92
  store i32 %264, ptr %i6, align 4, !tbaa !92
  br label %for.cond275

for.cond275:                                      ; preds = %for.inc282, %if.end274
  %265 = load i32, ptr %i6, align 4, !tbaa !92
  %266 = load i32, ptr %ne, align 4, !tbaa !92
  %cmp276 = icmp slt i32 %265, %266
  br i1 %cmp276, label %for.body278, label %for.end284

for.body278:                                      ; preds = %for.cond275
  %267 = load i32, ptr %coarse_shift, align 4, !tbaa !92
  %268 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %269 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom279 = sext i32 %269 to i64
  %arrayidx280 = getelementptr inbounds i32, ptr %268, i64 %idxprom279
  %270 = load i32, ptr %arrayidx280, align 4, !tbaa !92
  %add281 = add nsw i32 %270, %267
  store i32 %add281, ptr %arrayidx280, align 4, !tbaa !92
  br label %for.inc282

for.inc282:                                       ; preds = %for.body278
  %271 = load i32, ptr %i6, align 4, !tbaa !92
  %inc283 = add nsw i32 %271, 1
  store i32 %inc283, ptr %i6, align 4, !tbaa !92
  br label %for.cond275, !llvm.loop !269

for.end284:                                       ; preds = %for.cond275
  br label %for.inc285

for.inc285:                                       ; preds = %for.end284
  %272 = load i32, ptr %j7, align 4, !tbaa !92
  %inc286 = add nsw i32 %272, 1
  store i32 %inc286, ptr %j7, align 4, !tbaa !92
  br label %for.cond245, !llvm.loop !270

for.end287:                                       ; preds = %for.cond245
  store i32 0, ptr %jl, align 4, !tbaa !92
  br label %for.cond288

for.cond288:                                      ; preds = %for.inc407, %for.end287
  %273 = load i32, ptr %jl, align 4, !tbaa !92
  %274 = load i32, ptr %num_threads, align 4, !tbaa !92
  %cmp289 = icmp slt i32 %273, %274
  br i1 %cmp289, label %for.body291, label %for.end409

for.body291:                                      ; preds = %for.cond288
  %275 = load i32, ptr %n_fine, align 4, !tbaa !92
  %276 = load i32, ptr %num_threads, align 4, !tbaa !92
  %div292 = sdiv i32 %275, %276
  store i32 %div292, ptr %size, align 4, !tbaa !92
  %277 = load i32, ptr %n_fine, align 4, !tbaa !92
  %278 = load i32, ptr %size, align 4, !tbaa !92
  %279 = load i32, ptr %num_threads, align 4, !tbaa !92
  %mul293 = mul nsw i32 %278, %279
  %sub294 = sub nsw i32 %277, %mul293
  store i32 %sub294, ptr %rest, align 4, !tbaa !92
  %280 = load i32, ptr %jl, align 4, !tbaa !92
  %281 = load i32, ptr %rest, align 4, !tbaa !92
  %cmp295 = icmp slt i32 %280, %281
  br i1 %cmp295, label %if.then297, label %if.else304

if.then297:                                       ; preds = %for.body291
  %282 = load i32, ptr %jl, align 4, !tbaa !92
  %283 = load i32, ptr %size, align 4, !tbaa !92
  %mul298 = mul nsw i32 %282, %283
  %284 = load i32, ptr %jl, align 4, !tbaa !92
  %add299 = add nsw i32 %mul298, %284
  store i32 %add299, ptr %ns, align 4, !tbaa !92
  %285 = load i32, ptr %jl, align 4, !tbaa !92
  %add300 = add nsw i32 %285, 1
  %286 = load i32, ptr %size, align 4, !tbaa !92
  %mul301 = mul nsw i32 %add300, %286
  %287 = load i32, ptr %jl, align 4, !tbaa !92
  %add302 = add nsw i32 %mul301, %287
  %add303 = add nsw i32 %add302, 1
  store i32 %add303, ptr %ne, align 4, !tbaa !92
  br label %if.end310

if.else304:                                       ; preds = %for.body291
  %288 = load i32, ptr %jl, align 4, !tbaa !92
  %289 = load i32, ptr %size, align 4, !tbaa !92
  %mul305 = mul nsw i32 %288, %289
  %290 = load i32, ptr %rest, align 4, !tbaa !92
  %add306 = add nsw i32 %mul305, %290
  store i32 %add306, ptr %ns, align 4, !tbaa !92
  %291 = load i32, ptr %jl, align 4, !tbaa !92
  %add307 = add nsw i32 %291, 1
  %292 = load i32, ptr %size, align 4, !tbaa !92
  %mul308 = mul nsw i32 %add307, %292
  %293 = load i32, ptr %rest, align 4, !tbaa !92
  %add309 = add nsw i32 %mul308, %293
  store i32 %add309, ptr %ne, align 4, !tbaa !92
  br label %if.end310

if.end310:                                        ; preds = %if.else304, %if.then297
  store i32 0, ptr %jj_counter, align 4, !tbaa !92
  %294 = load i32, ptr %jl, align 4, !tbaa !92
  %cmp311 = icmp sgt i32 %294, 0
  br i1 %cmp311, label %if.then313, label %if.end317

if.then313:                                       ; preds = %if.end310
  %295 = load ptr, ptr %jj_count, align 8, !tbaa !4
  %296 = load i32, ptr %jl, align 4, !tbaa !92
  %sub314 = sub nsw i32 %296, 1
  %idxprom315 = sext i32 %sub314 to i64
  %arrayidx316 = getelementptr inbounds i32, ptr %295, i64 %idxprom315
  %297 = load i32, ptr %arrayidx316, align 4, !tbaa !92
  store i32 %297, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end317

if.end317:                                        ; preds = %if.then313, %if.end310
  store i32 0, ptr %jj_counter_offd, align 4, !tbaa !92
  %298 = load i32, ptr %jl, align 4, !tbaa !92
  %cmp318 = icmp sgt i32 %298, 0
  br i1 %cmp318, label %if.then320, label %if.end324

if.then320:                                       ; preds = %if.end317
  %299 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  %300 = load i32, ptr %jl, align 4, !tbaa !92
  %sub321 = sub nsw i32 %300, 1
  %idxprom322 = sext i32 %sub321 to i64
  %arrayidx323 = getelementptr inbounds i32, ptr %299, i64 %idxprom322
  %301 = load i32, ptr %arrayidx323, align 4, !tbaa !92
  store i32 %301, ptr %jj_counter_offd, align 4, !tbaa !92
  br label %if.end324

if.end324:                                        ; preds = %if.then320, %if.end317
  store i32 0, ptr %ii_counter, align 4, !tbaa !92
  %302 = load i32, ptr %ns, align 4, !tbaa !92
  store i32 %302, ptr %i6, align 4, !tbaa !92
  br label %for.cond325

for.cond325:                                      ; preds = %for.inc400, %if.end324
  %303 = load i32, ptr %i6, align 4, !tbaa !92
  %304 = load i32, ptr %ne, align 4, !tbaa !92
  %cmp326 = icmp slt i32 %303, %304
  br i1 %cmp326, label %for.body328, label %for.end402

for.body328:                                      ; preds = %for.cond325
  %305 = load ptr, ptr %row_cf_marker.addr, align 8, !tbaa !4
  %306 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom329 = sext i32 %306 to i64
  %arrayidx330 = getelementptr inbounds i32, ptr %305, i64 %idxprom329
  %307 = load i32, ptr %arrayidx330, align 4, !tbaa !92
  %cmp331 = icmp sgt i32 %307, 0
  br i1 %cmp331, label %if.then333, label %if.end399

if.then333:                                       ; preds = %for.body328
  %308 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %309 = load ptr, ptr %Ablock_diag_i, align 8, !tbaa !4
  %310 = load i32, ptr %ii_counter, align 4, !tbaa !92
  %idxprom334 = sext i32 %310 to i64
  %arrayidx335 = getelementptr inbounds i32, ptr %309, i64 %idxprom334
  store i32 %308, ptr %arrayidx335, align 4, !tbaa !92
  %311 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %312 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom336 = sext i32 %312 to i64
  %arrayidx337 = getelementptr inbounds i32, ptr %311, i64 %idxprom336
  %313 = load i32, ptr %arrayidx337, align 4, !tbaa !92
  store i32 %313, ptr %jj, align 4, !tbaa !92
  br label %for.cond338

for.cond338:                                      ; preds = %for.inc362, %if.then333
  %314 = load i32, ptr %jj, align 4, !tbaa !92
  %315 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %316 = load i32, ptr %i6, align 4, !tbaa !92
  %add339 = add nsw i32 %316, 1
  %idxprom340 = sext i32 %add339 to i64
  %arrayidx341 = getelementptr inbounds i32, ptr %315, i64 %idxprom340
  %317 = load i32, ptr %arrayidx341, align 4, !tbaa !92
  %cmp342 = icmp slt i32 %314, %317
  br i1 %cmp342, label %for.body344, label %for.end364

for.body344:                                      ; preds = %for.cond338
  %318 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %319 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom345 = sext i32 %319 to i64
  %arrayidx346 = getelementptr inbounds i32, ptr %318, i64 %idxprom345
  %320 = load i32, ptr %arrayidx346, align 4, !tbaa !92
  store i32 %320, ptr %i1, align 4, !tbaa !92
  %321 = load ptr, ptr %col_cf_marker.addr, align 8, !tbaa !4
  %322 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom347 = sext i32 %322 to i64
  %arrayidx348 = getelementptr inbounds i32, ptr %321, i64 %idxprom347
  %323 = load i32, ptr %arrayidx348, align 4, !tbaa !92
  %cmp349 = icmp sgt i32 %323, 0
  br i1 %cmp349, label %if.then351, label %if.end361

if.then351:                                       ; preds = %for.body344
  %324 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %325 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom352 = sext i32 %325 to i64
  %arrayidx353 = getelementptr inbounds i32, ptr %324, i64 %idxprom352
  %326 = load i32, ptr %arrayidx353, align 4, !tbaa !92
  %327 = load ptr, ptr %Ablock_diag_j, align 8, !tbaa !4
  %328 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom354 = sext i32 %328 to i64
  %arrayidx355 = getelementptr inbounds i32, ptr %327, i64 %idxprom354
  store i32 %326, ptr %arrayidx355, align 4, !tbaa !92
  %329 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %330 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom356 = sext i32 %330 to i64
  %arrayidx357 = getelementptr inbounds double, ptr %329, i64 %idxprom356
  %331 = load double, ptr %arrayidx357, align 8, !tbaa !161
  %332 = load ptr, ptr %Ablock_diag_data, align 8, !tbaa !4
  %333 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %idxprom358 = sext i32 %333 to i64
  %arrayidx359 = getelementptr inbounds double, ptr %332, i64 %idxprom358
  store double %331, ptr %arrayidx359, align 8, !tbaa !161
  %334 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %inc360 = add nsw i32 %334, 1
  store i32 %inc360, ptr %jj_counter, align 4, !tbaa !92
  br label %if.end361

if.end361:                                        ; preds = %if.then351, %for.body344
  br label %for.inc362

for.inc362:                                       ; preds = %if.end361
  %335 = load i32, ptr %jj, align 4, !tbaa !92
  %inc363 = add nsw i32 %335, 1
  store i32 %inc363, ptr %jj, align 4, !tbaa !92
  br label %for.cond338, !llvm.loop !271

for.end364:                                       ; preds = %for.cond338
  %336 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %337 = load ptr, ptr %Ablock_offd_i, align 8, !tbaa !4
  %338 = load i32, ptr %ii_counter, align 4, !tbaa !92
  %idxprom365 = sext i32 %338 to i64
  %arrayidx366 = getelementptr inbounds i32, ptr %337, i64 %idxprom365
  store i32 %336, ptr %arrayidx366, align 4, !tbaa !92
  %339 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp367 = icmp sgt i32 %339, 1
  br i1 %cmp367, label %if.then369, label %if.end397

if.then369:                                       ; preds = %for.end364
  %340 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %341 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom370 = sext i32 %341 to i64
  %arrayidx371 = getelementptr inbounds i32, ptr %340, i64 %idxprom370
  %342 = load i32, ptr %arrayidx371, align 4, !tbaa !92
  store i32 %342, ptr %jj, align 4, !tbaa !92
  br label %for.cond372

for.cond372:                                      ; preds = %for.inc394, %if.then369
  %343 = load i32, ptr %jj, align 4, !tbaa !92
  %344 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %345 = load i32, ptr %i6, align 4, !tbaa !92
  %add373 = add nsw i32 %345, 1
  %idxprom374 = sext i32 %add373 to i64
  %arrayidx375 = getelementptr inbounds i32, ptr %344, i64 %idxprom374
  %346 = load i32, ptr %arrayidx375, align 4, !tbaa !92
  %cmp376 = icmp slt i32 %343, %346
  br i1 %cmp376, label %for.body378, label %for.end396

for.body378:                                      ; preds = %for.cond372
  %347 = load ptr, ptr %A_offd_j, align 8, !tbaa !4
  %348 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom379 = sext i32 %348 to i64
  %arrayidx380 = getelementptr inbounds i32, ptr %347, i64 %idxprom379
  %349 = load i32, ptr %arrayidx380, align 4, !tbaa !92
  store i32 %349, ptr %i1, align 4, !tbaa !92
  %350 = load ptr, ptr %CF_marker_offd, align 8, !tbaa !4
  %351 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom381 = sext i32 %351 to i64
  %arrayidx382 = getelementptr inbounds i32, ptr %350, i64 %idxprom381
  %352 = load i32, ptr %arrayidx382, align 4, !tbaa !92
  %cmp383 = icmp sgt i32 %352, 0
  br i1 %cmp383, label %if.then385, label %if.end393

if.then385:                                       ; preds = %for.body378
  %353 = load i32, ptr %i1, align 4, !tbaa !92
  %354 = load ptr, ptr %Ablock_offd_j, align 8, !tbaa !4
  %355 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %idxprom386 = sext i32 %355 to i64
  %arrayidx387 = getelementptr inbounds i32, ptr %354, i64 %idxprom386
  store i32 %353, ptr %arrayidx387, align 4, !tbaa !92
  %356 = load ptr, ptr %A_offd_data, align 8, !tbaa !4
  %357 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom388 = sext i32 %357 to i64
  %arrayidx389 = getelementptr inbounds double, ptr %356, i64 %idxprom388
  %358 = load double, ptr %arrayidx389, align 8, !tbaa !161
  %359 = load ptr, ptr %Ablock_offd_data, align 8, !tbaa !4
  %360 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %idxprom390 = sext i32 %360 to i64
  %arrayidx391 = getelementptr inbounds double, ptr %359, i64 %idxprom390
  store double %358, ptr %arrayidx391, align 8, !tbaa !161
  %361 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %inc392 = add nsw i32 %361, 1
  store i32 %inc392, ptr %jj_counter_offd, align 4, !tbaa !92
  br label %if.end393

if.end393:                                        ; preds = %if.then385, %for.body378
  br label %for.inc394

for.inc394:                                       ; preds = %if.end393
  %362 = load i32, ptr %jj, align 4, !tbaa !92
  %inc395 = add nsw i32 %362, 1
  store i32 %inc395, ptr %jj, align 4, !tbaa !92
  br label %for.cond372, !llvm.loop !272

for.end396:                                       ; preds = %for.cond372
  br label %if.end397

if.end397:                                        ; preds = %for.end396, %for.end364
  %363 = load i32, ptr %ii_counter, align 4, !tbaa !92
  %inc398 = add nsw i32 %363, 1
  store i32 %inc398, ptr %ii_counter, align 4, !tbaa !92
  br label %if.end399

if.end399:                                        ; preds = %if.end397, %for.body328
  br label %for.inc400

for.inc400:                                       ; preds = %if.end399
  %364 = load i32, ptr %i6, align 4, !tbaa !92
  %inc401 = add nsw i32 %364, 1
  store i32 %inc401, ptr %i6, align 4, !tbaa !92
  br label %for.cond325, !llvm.loop !273

for.end402:                                       ; preds = %for.cond325
  %365 = load i32, ptr %jj_counter_offd, align 4, !tbaa !92
  %366 = load ptr, ptr %Ablock_offd_i, align 8, !tbaa !4
  %367 = load i32, ptr %ii_counter, align 4, !tbaa !92
  %idxprom403 = sext i32 %367 to i64
  %arrayidx404 = getelementptr inbounds i32, ptr %366, i64 %idxprom403
  store i32 %365, ptr %arrayidx404, align 4, !tbaa !92
  %368 = load i32, ptr %jj_counter, align 4, !tbaa !92
  %369 = load ptr, ptr %Ablock_diag_i, align 8, !tbaa !4
  %370 = load i32, ptr %ii_counter, align 4, !tbaa !92
  %idxprom405 = sext i32 %370 to i64
  %arrayidx406 = getelementptr inbounds i32, ptr %369, i64 %idxprom405
  store i32 %368, ptr %arrayidx406, align 4, !tbaa !92
  br label %for.inc407

for.inc407:                                       ; preds = %for.end402
  %371 = load i32, ptr %jl, align 4, !tbaa !92
  %inc408 = add nsw i32 %371, 1
  store i32 %inc408, ptr %jl, align 4, !tbaa !92
  br label %for.cond288, !llvm.loop !274

for.end409:                                       ; preds = %for.cond288
  %372 = load ptr, ptr %comm, align 8, !tbaa !4
  %373 = load i32, ptr %total_global_row_cpts, align 4, !tbaa !92
  %374 = load i32, ptr %total_global_col_cpts, align 4, !tbaa !92
  %arraydecay410 = getelementptr inbounds [2 x i32], ptr %num_row_cpts_global, i64 0, i64 0
  %arraydecay411 = getelementptr inbounds [2 x i32], ptr %num_col_cpts_global, i64 0, i64 0
  %375 = load ptr, ptr %Ablock_diag_i, align 8, !tbaa !4
  %376 = load i32, ptr %ii_counter, align 4, !tbaa !92
  %idxprom412 = sext i32 %376 to i64
  %arrayidx413 = getelementptr inbounds i32, ptr %375, i64 %idxprom412
  %377 = load i32, ptr %arrayidx413, align 4, !tbaa !92
  %378 = load ptr, ptr %Ablock_offd_i, align 8, !tbaa !4
  %379 = load i32, ptr %ii_counter, align 4, !tbaa !92
  %idxprom414 = sext i32 %379 to i64
  %arrayidx415 = getelementptr inbounds i32, ptr %378, i64 %idxprom414
  %380 = load i32, ptr %arrayidx415, align 4, !tbaa !92
  %call416 = call ptr @hypre_ParCSRMatrixCreate(ptr noundef %372, i32 noundef %373, i32 noundef %374, ptr noundef %arraydecay410, ptr noundef %arraydecay411, i32 noundef 0, i32 noundef %377, i32 noundef %380)
  store ptr %call416, ptr %Ablock, align 8, !tbaa !4
  %381 = load ptr, ptr %Ablock, align 8, !tbaa !4
  %diag417 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %381, i32 0, i32 8
  %382 = load ptr, ptr %diag417, align 8, !tbaa !149
  store ptr %382, ptr %Ablock_diag, align 8, !tbaa !4
  %383 = load ptr, ptr %Ablock_diag_data, align 8, !tbaa !4
  %384 = load ptr, ptr %Ablock_diag, align 8, !tbaa !4
  %data418 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %384, i32 0, i32 10
  store ptr %383, ptr %data418, align 8, !tbaa !165
  %385 = load ptr, ptr %Ablock_diag_i, align 8, !tbaa !4
  %386 = load ptr, ptr %Ablock_diag, align 8, !tbaa !4
  %i419 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %386, i32 0, i32 0
  store ptr %385, ptr %i419, align 8, !tbaa !163
  %387 = load ptr, ptr %Ablock_diag_j, align 8, !tbaa !4
  %388 = load ptr, ptr %Ablock_diag, align 8, !tbaa !4
  %j420 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %388, i32 0, i32 1
  store ptr %387, ptr %j420, align 8, !tbaa !164
  %389 = load ptr, ptr %Ablock, align 8, !tbaa !4
  %offd421 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %389, i32 0, i32 9
  %390 = load ptr, ptr %offd421, align 8, !tbaa !162
  store ptr %390, ptr %Ablock_offd, align 8, !tbaa !4
  %391 = load ptr, ptr %Ablock_offd_data, align 8, !tbaa !4
  %392 = load ptr, ptr %Ablock_offd, align 8, !tbaa !4
  %data422 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %392, i32 0, i32 10
  store ptr %391, ptr %data422, align 8, !tbaa !165
  %393 = load ptr, ptr %Ablock_offd_i, align 8, !tbaa !4
  %394 = load ptr, ptr %Ablock_offd, align 8, !tbaa !4
  %i423 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %394, i32 0, i32 0
  store ptr %393, ptr %i423, align 8, !tbaa !163
  %395 = load ptr, ptr %Ablock_offd_j, align 8, !tbaa !4
  %396 = load ptr, ptr %Ablock_offd, align 8, !tbaa !4
  %j424 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %396, i32 0, i32 1
  store ptr %395, ptr %j424, align 8, !tbaa !164
  store i32 0, ptr %num_cols_Ablock_offd, align 4, !tbaa !92
  %397 = load i32, ptr %Ablock_offd_size, align 4, !tbaa !92
  %tobool425 = icmp ne i32 %397, 0
  br i1 %tobool425, label %if.then426, label %if.end486

if.then426:                                       ; preds = %for.end409
  %398 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %conv427 = sext i32 %398 to i64
  %call428 = call ptr @hypre_CAlloc(i64 noundef %conv427, i64 noundef 4, i32 noundef 0)
  store ptr %call428, ptr %Ablock_marker, align 8, !tbaa !4
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond429

for.cond429:                                      ; preds = %for.inc435, %if.then426
  %399 = load i32, ptr %i6, align 4, !tbaa !92
  %400 = load i32, ptr %num_cols_A_offd, align 4, !tbaa !92
  %cmp430 = icmp slt i32 %399, %400
  br i1 %cmp430, label %for.body432, label %for.end437

for.body432:                                      ; preds = %for.cond429
  %401 = load ptr, ptr %Ablock_marker, align 8, !tbaa !4
  %402 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom433 = sext i32 %402 to i64
  %arrayidx434 = getelementptr inbounds i32, ptr %401, i64 %idxprom433
  store i32 0, ptr %arrayidx434, align 4, !tbaa !92
  br label %for.inc435

for.inc435:                                       ; preds = %for.body432
  %403 = load i32, ptr %i6, align 4, !tbaa !92
  %inc436 = add nsw i32 %403, 1
  store i32 %inc436, ptr %i6, align 4, !tbaa !92
  br label %for.cond429, !llvm.loop !275

for.end437:                                       ; preds = %for.cond429
  store i32 0, ptr %num_cols_Ablock_offd, align 4, !tbaa !92
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond438

for.cond438:                                      ; preds = %for.inc452, %for.end437
  %404 = load i32, ptr %i6, align 4, !tbaa !92
  %405 = load i32, ptr %Ablock_offd_size, align 4, !tbaa !92
  %cmp439 = icmp slt i32 %404, %405
  br i1 %cmp439, label %for.body441, label %for.end454

for.body441:                                      ; preds = %for.cond438
  %406 = load ptr, ptr %Ablock_offd_j, align 8, !tbaa !4
  %407 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom442 = sext i32 %407 to i64
  %arrayidx443 = getelementptr inbounds i32, ptr %406, i64 %idxprom442
  %408 = load i32, ptr %arrayidx443, align 4, !tbaa !92
  store i32 %408, ptr %index, align 4, !tbaa !92
  %409 = load ptr, ptr %Ablock_marker, align 8, !tbaa !4
  %410 = load i32, ptr %index, align 4, !tbaa !92
  %idxprom444 = sext i32 %410 to i64
  %arrayidx445 = getelementptr inbounds i32, ptr %409, i64 %idxprom444
  %411 = load i32, ptr %arrayidx445, align 4, !tbaa !92
  %tobool446 = icmp ne i32 %411, 0
  br i1 %tobool446, label %if.end451, label %if.then447

if.then447:                                       ; preds = %for.body441
  %412 = load i32, ptr %num_cols_Ablock_offd, align 4, !tbaa !92
  %inc448 = add nsw i32 %412, 1
  store i32 %inc448, ptr %num_cols_Ablock_offd, align 4, !tbaa !92
  %413 = load ptr, ptr %Ablock_marker, align 8, !tbaa !4
  %414 = load i32, ptr %index, align 4, !tbaa !92
  %idxprom449 = sext i32 %414 to i64
  %arrayidx450 = getelementptr inbounds i32, ptr %413, i64 %idxprom449
  store i32 1, ptr %arrayidx450, align 4, !tbaa !92
  br label %if.end451

if.end451:                                        ; preds = %if.then447, %for.body441
  br label %for.inc452

for.inc452:                                       ; preds = %if.end451
  %415 = load i32, ptr %i6, align 4, !tbaa !92
  %inc453 = add nsw i32 %415, 1
  store i32 %inc453, ptr %i6, align 4, !tbaa !92
  br label %for.cond438, !llvm.loop !276

for.end454:                                       ; preds = %for.cond438
  %416 = load i32, ptr %num_cols_Ablock_offd, align 4, !tbaa !92
  %conv455 = sext i32 %416 to i64
  %417 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call456 = call ptr @hypre_CAlloc(i64 noundef %conv455, i64 noundef 4, i32 noundef %417)
  store ptr %call456, ptr %col_map_offd_Ablock, align 8, !tbaa !4
  %418 = load i32, ptr %num_cols_Ablock_offd, align 4, !tbaa !92
  %conv457 = sext i32 %418 to i64
  %call458 = call ptr @hypre_CAlloc(i64 noundef %conv457, i64 noundef 4, i32 noundef 0)
  store ptr %call458, ptr %tmp_map_offd, align 8, !tbaa !4
  store i32 0, ptr %index, align 4, !tbaa !92
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond459

for.cond459:                                      ; preds = %for.inc471, %for.end454
  %419 = load i32, ptr %i6, align 4, !tbaa !92
  %420 = load i32, ptr %num_cols_Ablock_offd, align 4, !tbaa !92
  %cmp460 = icmp slt i32 %419, %420
  br i1 %cmp460, label %for.body462, label %for.end473

for.body462:                                      ; preds = %for.cond459
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body462
  %421 = load ptr, ptr %Ablock_marker, align 8, !tbaa !4
  %422 = load i32, ptr %index, align 4, !tbaa !92
  %idxprom463 = sext i32 %422 to i64
  %arrayidx464 = getelementptr inbounds i32, ptr %421, i64 %idxprom463
  %423 = load i32, ptr %arrayidx464, align 4, !tbaa !92
  %cmp465 = icmp eq i32 %423, 0
  br i1 %cmp465, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %424 = load i32, ptr %index, align 4, !tbaa !92
  %inc467 = add nsw i32 %424, 1
  store i32 %inc467, ptr %index, align 4, !tbaa !92
  br label %while.cond, !llvm.loop !277

while.end:                                        ; preds = %while.cond
  %425 = load i32, ptr %index, align 4, !tbaa !92
  %inc468 = add nsw i32 %425, 1
  store i32 %inc468, ptr %index, align 4, !tbaa !92
  %426 = load ptr, ptr %tmp_map_offd, align 8, !tbaa !4
  %427 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom469 = sext i32 %427 to i64
  %arrayidx470 = getelementptr inbounds i32, ptr %426, i64 %idxprom469
  store i32 %425, ptr %arrayidx470, align 4, !tbaa !92
  br label %for.inc471

for.inc471:                                       ; preds = %while.end
  %428 = load i32, ptr %i6, align 4, !tbaa !92
  %inc472 = add nsw i32 %428, 1
  store i32 %inc472, ptr %i6, align 4, !tbaa !92
  br label %for.cond459, !llvm.loop !278

for.end473:                                       ; preds = %for.cond459
  store i32 0, ptr %i6, align 4, !tbaa !92
  br label %for.cond474

for.cond474:                                      ; preds = %for.inc483, %for.end473
  %429 = load i32, ptr %i6, align 4, !tbaa !92
  %430 = load i32, ptr %Ablock_offd_size, align 4, !tbaa !92
  %cmp475 = icmp slt i32 %429, %430
  br i1 %cmp475, label %for.body477, label %for.end485

for.body477:                                      ; preds = %for.cond474
  %431 = load ptr, ptr %tmp_map_offd, align 8, !tbaa !4
  %432 = load ptr, ptr %Ablock_offd_j, align 8, !tbaa !4
  %433 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom478 = sext i32 %433 to i64
  %arrayidx479 = getelementptr inbounds i32, ptr %432, i64 %idxprom478
  %434 = load i32, ptr %arrayidx479, align 4, !tbaa !92
  %435 = load i32, ptr %num_cols_Ablock_offd, align 4, !tbaa !92
  %call480 = call i32 @hypre_BinarySearch(ptr noundef %431, i32 noundef %434, i32 noundef %435)
  %436 = load ptr, ptr %Ablock_offd_j, align 8, !tbaa !4
  %437 = load i32, ptr %i6, align 4, !tbaa !92
  %idxprom481 = sext i32 %437 to i64
  %arrayidx482 = getelementptr inbounds i32, ptr %436, i64 %idxprom481
  store i32 %call480, ptr %arrayidx482, align 4, !tbaa !92
  br label %for.inc483

for.inc483:                                       ; preds = %for.body477
  %438 = load i32, ptr %i6, align 4, !tbaa !92
  %inc484 = add nsw i32 %438, 1
  store i32 %inc484, ptr %i6, align 4, !tbaa !92
  br label %for.cond474, !llvm.loop !279

for.end485:                                       ; preds = %for.cond474
  %439 = load ptr, ptr %Ablock_marker, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %439, i32 noundef 0)
  store ptr null, ptr %Ablock_marker, align 8, !tbaa !4
  br label %if.end486

if.end486:                                        ; preds = %for.end485, %for.end409
  %440 = load i32, ptr %num_cols_Ablock_offd, align 4, !tbaa !92
  %tobool487 = icmp ne i32 %440, 0
  br i1 %tobool487, label %if.then488, label %if.end490

if.then488:                                       ; preds = %if.end486
  %441 = load ptr, ptr %col_map_offd_Ablock, align 8, !tbaa !4
  %442 = load ptr, ptr %Ablock, align 8, !tbaa !4
  %col_map_offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %442, i32 0, i32 12
  store ptr %441, ptr %col_map_offd, align 8, !tbaa !174
  %443 = load i32, ptr %num_cols_Ablock_offd, align 4, !tbaa !92
  %444 = load ptr, ptr %Ablock_offd, align 8, !tbaa !4
  %num_cols489 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %444, i32 0, i32 4
  store i32 %443, ptr %num_cols489, align 4, !tbaa !167
  br label %if.end490

if.end490:                                        ; preds = %if.then488, %if.end486
  %445 = load ptr, ptr %Ablock, align 8, !tbaa !4
  %446 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %447 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  %448 = load ptr, ptr %tmp_map_offd, align 8, !tbaa !4
  %call491 = call i32 @hypre_GetCommPkgRTFromCommPkgA(ptr noundef %445, ptr noundef %446, ptr noundef %447, ptr noundef %448)
  %449 = load ptr, ptr %Ablock, align 8, !tbaa !4
  %assumed_partition = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %449, i32 0, i32 24
  %450 = load ptr, ptr %assumed_partition, align 8, !tbaa !280
  %cmp492 = icmp eq ptr %450, null
  br i1 %cmp492, label %if.then494, label %if.end496

if.then494:                                       ; preds = %if.end490
  %451 = load ptr, ptr %Ablock, align 8, !tbaa !4
  %call495 = call i32 @hypre_ParCSRMatrixCreateAssumedPartition(ptr noundef %451)
  br label %if.end496

if.end496:                                        ; preds = %if.then494, %if.end490
  %452 = load ptr, ptr %Ablock, align 8, !tbaa !4
  %453 = load ptr, ptr %A_block_ptr.addr, align 8, !tbaa !4
  store ptr %452, ptr %453, align 8, !tbaa !4
  %454 = load ptr, ptr %tmp_map_offd, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %454, i32 noundef 0)
  store ptr null, ptr %tmp_map_offd, align 8, !tbaa !4
  %455 = load ptr, ptr %CF_marker_offd, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %455, i32 noundef 0)
  store ptr null, ptr %CF_marker_offd, align 8, !tbaa !4
  %456 = load ptr, ptr %int_buf_data, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %456, i32 noundef 0)
  store ptr null, ptr %int_buf_data, align 8, !tbaa !4
  %457 = load ptr, ptr %fine_to_coarse, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %457, i32 noundef 0)
  store ptr null, ptr %fine_to_coarse, align 8, !tbaa !4
  %458 = load ptr, ptr %coarse_counter, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %458, i32 noundef 0)
  store ptr null, ptr %coarse_counter, align 8, !tbaa !4
  %459 = load ptr, ptr %col_coarse_counter, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %459, i32 noundef 0)
  store ptr null, ptr %col_coarse_counter, align 8, !tbaa !4
  %460 = load ptr, ptr %jj_count, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %460, i32 noundef 0)
  store ptr null, ptr %jj_count, align 8, !tbaa !4
  %461 = load ptr, ptr %jj_count_offd, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %461, i32 noundef 0)
  store ptr null, ptr %jj_count_offd, align 8, !tbaa !4
  %462 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %data497 = getelementptr inbounds %struct.hypre_IntArray, ptr %462, i32 0, i32 0
  store ptr null, ptr %data497, align 8, !tbaa !156
  %463 = load ptr, ptr %wrap_cf, align 8, !tbaa !4
  %call498 = call i32 @hypre_IntArrayDestroy(ptr noundef %463)
  %464 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %wrap_cf) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %local_numrows) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %int_buf_data) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %rest) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ne) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ns) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %index) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_sends) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_threads) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %start) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jl) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j7) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i1) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i6) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_cols_Ablock_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %total_global_col_cpts) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %total_global_row_cpts) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %coarse_shift) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %col_coarse_counter) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %coarse_counter) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %fine_to_coarse) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n_fine) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %start_indexing) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %jj_count_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %jj_count) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj_counter_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj_counter) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ii_counter) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Ablock_marker) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %Ablock_offd_size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %Ablock_diag_size) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Ablock_offd_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Ablock_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Ablock_offd_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Ablock_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Ablock_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Ablock_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Ablock_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Ablock_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %CF_marker_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_map_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %col_map_offd_Ablock) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Ablock) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %num_col_cpts_global) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %num_row_cpts_global) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %coarse_dof_func_ptr) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_cols_A_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %memory_location) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm_handle) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm_pkg) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  ret i32 %464
}

declare ptr @hypre_ParVectorCreate(ptr noundef, i32 noundef, ptr noundef) #2

declare i32 @hypre_ParVectorInitialize(ptr noundef) #2

declare i32 @hypre_ParVectorSetConstantValues(ptr noundef, double noundef) #2

declare i32 @hypre_ParCSRMatrixMatvecOutOfPlace(double noundef, ptr noundef, ptr noundef, double noundef, ptr noundef, ptr noundef) #2

declare i32 @hypre_BoomerAMGSolve(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

declare i32 @hypre_ParVectorPrintIJ(ptr noundef, i32 noundef, ptr noundef) #2

declare i32 @hypre_ILUParCSRInverseNSH(ptr noundef, ptr noundef, ptr noundef, double noundef, double noundef, double noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBuildInterpApproximateInverse(ptr noundef %A, ptr noundef %CF_marker, ptr noundef %num_cpts_global, i32 noundef %debug_flag, ptr noundef %P_ptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %CF_marker.addr = alloca ptr, align 8
  %num_cpts_global.addr = alloca ptr, align 8
  %debug_flag.addr = alloca i32, align 4
  %P_ptr.addr = alloca ptr, align 8
  %C_marker = alloca ptr, align 8
  %F_marker = alloca ptr, align 8
  %A_ff = alloca ptr, align 8
  %A_fc = alloca ptr, align 8
  %A_ff_inv = alloca ptr, align 8
  %W = alloca ptr, align 8
  %comm = alloca ptr, align 8
  %P = alloca ptr, align 8
  %col_map_offd_P = alloca ptr, align 8
  %P_diag_data = alloca ptr, align 8
  %P_diag_i = alloca ptr, align 8
  %P_diag_j = alloca ptr, align 8
  %P_offd_i = alloca ptr, align 8
  %P_diag_nnz = alloca i32, align 4
  %n_fine = alloca i32, align 4
  %total_global_cpts = alloca i32, align 4
  %num_cols_P_offd = alloca i32, align 4
  %i = alloca i32, align 4
  %m_one = alloca double, align 8
  %my_id = alloca i32, align 4
  %num_procs = alloca i32, align 4
  %memory_location_P = alloca i32, align 4
  %W_diag = alloca ptr, align 8
  %W_offd = alloca ptr, align 8
  %col_map_offd_tmp = alloca ptr, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store ptr %num_cpts_global, ptr %num_cpts_global.addr, align 8, !tbaa !4
  store i32 %debug_flag, ptr %debug_flag.addr, align 4, !tbaa !92
  store ptr %P_ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %C_marker) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %F_marker) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_ff) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_fc) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_ff_inv) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %W) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %comm1, align 8, !tbaa !160
  store ptr %1, ptr %comm, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %P) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %col_map_offd_P) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_data) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_diag_j) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_offd_i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %P_diag_nnz) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %n_fine) #6
  %2 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %2, i32 0, i32 8
  %3 = load ptr, ptr %diag, align 8, !tbaa !149
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %3, i32 0, i32 3
  %4 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %4, ptr %n_fine, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %total_global_cpts) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_cols_P_offd) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %m_one) #6
  store double -1.000000e+00, ptr %m_one, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %memory_location_P) #6
  %5 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call = call i32 @hypre_ParCSRMatrixMemoryLocation(ptr noundef %5)
  store i32 %call, ptr %memory_location_P, align 4, !tbaa !155
  %6 = load i32, ptr %n_fine, align 4, !tbaa !92
  %conv = sext i32 %6 to i64
  %call2 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call2, ptr %C_marker, align 8, !tbaa !4
  %7 = load i32, ptr %n_fine, align 4, !tbaa !92
  %conv3 = sext i32 %7 to i64
  %call4 = call ptr @hypre_CAlloc(i64 noundef %conv3, i64 noundef 4, i32 noundef 0)
  store ptr %call4, ptr %F_marker, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %9 = load i32, ptr %n_fine, align 4, !tbaa !92
  %cmp = icmp slt i32 %8, %9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom
  %12 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %cmp6 = icmp eq i32 %12, 1
  %13 = zext i1 %cmp6 to i64
  %cond = select i1 %cmp6, i32 1, i32 -1
  %14 = load ptr, ptr %C_marker, align 8, !tbaa !4
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom8 = sext i32 %15 to i64
  %arrayidx9 = getelementptr inbounds i32, ptr %14, i64 %idxprom8
  store i32 %cond, ptr %arrayidx9, align 4, !tbaa !92
  %16 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %17 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom10 = sext i32 %17 to i64
  %arrayidx11 = getelementptr inbounds i32, ptr %16, i64 %idxprom10
  %18 = load i32, ptr %arrayidx11, align 4, !tbaa !92
  %cmp12 = icmp eq i32 %18, 1
  %19 = zext i1 %cmp12 to i64
  %cond14 = select i1 %cmp12, i32 -1, i32 1
  %20 = load ptr, ptr %F_marker, align 8, !tbaa !4
  %21 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom15 = sext i32 %21 to i64
  %arrayidx16 = getelementptr inbounds i32, ptr %20, i64 %idxprom15
  store i32 %cond14, ptr %arrayidx16, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %22, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !281

for.end:                                          ; preds = %for.cond
  %23 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %24 = load ptr, ptr %F_marker, align 8, !tbaa !4
  %25 = load ptr, ptr %F_marker, align 8, !tbaa !4
  %call17 = call i32 @hypre_MGRGetSubBlock(ptr noundef %23, ptr noundef %24, ptr noundef %25, i32 noundef 0, ptr noundef %A_ff)
  %26 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %27 = load ptr, ptr %F_marker, align 8, !tbaa !4
  %28 = load ptr, ptr %C_marker, align 8, !tbaa !4
  %call18 = call i32 @hypre_MGRGetSubBlock(ptr noundef %26, ptr noundef %27, ptr noundef %28, i32 noundef 0, ptr noundef %A_fc)
  %29 = load ptr, ptr %A_ff, align 8, !tbaa !4
  %call19 = call i32 @hypre_MGRApproximateInverse(ptr noundef %29, ptr noundef %A_ff_inv)
  %30 = load ptr, ptr %A_ff_inv, align 8, !tbaa !4
  %31 = load ptr, ptr %A_fc, align 8, !tbaa !4
  %call20 = call ptr @hypre_ParMatmul(ptr noundef %30, ptr noundef %31)
  store ptr %call20, ptr %W, align 8, !tbaa !4
  %32 = load ptr, ptr %W, align 8, !tbaa !4
  %33 = load double, ptr %m_one, align 8, !tbaa !161
  %call21 = call i32 @hypre_ParCSRMatrixScale(ptr noundef %32, double noundef %33)
  call void @llvm.lifetime.start.p0(i64 8, ptr %W_diag) #6
  %34 = load ptr, ptr %W, align 8, !tbaa !4
  %diag22 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %34, i32 0, i32 8
  %35 = load ptr, ptr %diag22, align 8, !tbaa !149
  store ptr %35, ptr %W_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %W_offd) #6
  %36 = load ptr, ptr %W, align 8, !tbaa !4
  %offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %36, i32 0, i32 9
  %37 = load ptr, ptr %offd, align 8, !tbaa !162
  store ptr %37, ptr %W_offd, align 8, !tbaa !4
  %38 = load ptr, ptr %comm, align 8, !tbaa !4
  %call23 = call i32 @hypre_MPI_Comm_size(ptr noundef %38, ptr noundef %num_procs)
  %39 = load ptr, ptr %comm, align 8, !tbaa !4
  %call24 = call i32 @hypre_MPI_Comm_rank(ptr noundef %39, ptr noundef %my_id)
  %40 = load i32, ptr %my_id, align 4, !tbaa !92
  %41 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub = sub nsw i32 %41, 1
  %cmp25 = icmp eq i32 %40, %sub
  br i1 %cmp25, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %42 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %arrayidx27 = getelementptr inbounds i32, ptr %42, i64 1
  %43 = load i32, ptr %arrayidx27, align 4, !tbaa !92
  store i32 %43, ptr %total_global_cpts, align 4, !tbaa !92
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  %44 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub28 = sub nsw i32 %44, 1
  %45 = load ptr, ptr %comm, align 8, !tbaa !4
  %call29 = call i32 @hypre_MPI_Bcast(ptr noundef %total_global_cpts, i32 noundef 1, ptr noundef @ompi_mpi_int, i32 noundef %sub28, ptr noundef %45)
  %46 = load ptr, ptr %W_diag, align 8, !tbaa !4
  %num_nonzeros = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %46, i32 0, i32 5
  %47 = load i32, ptr %num_nonzeros, align 8, !tbaa !166
  %48 = load ptr, ptr %W_diag, align 8, !tbaa !4
  %num_cols = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %48, i32 0, i32 4
  %49 = load i32, ptr %num_cols, align 4, !tbaa !167
  %add = add nsw i32 %47, %49
  store i32 %add, ptr %P_diag_nnz, align 4, !tbaa !92
  %50 = load i32, ptr %n_fine, align 4, !tbaa !92
  %add30 = add nsw i32 %50, 1
  %conv31 = sext i32 %add30 to i64
  %51 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call32 = call ptr @hypre_CAlloc(i64 noundef %conv31, i64 noundef 4, i32 noundef %51)
  store ptr %call32, ptr %P_diag_i, align 8, !tbaa !4
  %52 = load i32, ptr %P_diag_nnz, align 4, !tbaa !92
  %conv33 = sext i32 %52 to i64
  %53 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call34 = call ptr @hypre_CAlloc(i64 noundef %conv33, i64 noundef 4, i32 noundef %53)
  store ptr %call34, ptr %P_diag_j, align 8, !tbaa !4
  %54 = load i32, ptr %P_diag_nnz, align 4, !tbaa !92
  %conv35 = sext i32 %54 to i64
  %55 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call36 = call ptr @hypre_CAlloc(i64 noundef %conv35, i64 noundef 8, i32 noundef %55)
  store ptr %call36, ptr %P_diag_data, align 8, !tbaa !4
  %56 = load i32, ptr %n_fine, align 4, !tbaa !92
  %add37 = add nsw i32 %56, 1
  %conv38 = sext i32 %add37 to i64
  %57 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %call39 = call ptr @hypre_CAlloc(i64 noundef %conv38, i64 noundef 4, i32 noundef %57)
  store ptr %call39, ptr %P_offd_i, align 8, !tbaa !4
  %58 = load i32, ptr %n_fine, align 4, !tbaa !92
  %59 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %60 = load ptr, ptr %W_diag, align 8, !tbaa !4
  %i40 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %60, i32 0, i32 0
  %61 = load ptr, ptr %i40, align 8, !tbaa !163
  %62 = load ptr, ptr %W_diag, align 8, !tbaa !4
  %j = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %62, i32 0, i32 1
  %63 = load ptr, ptr %j, align 8, !tbaa !164
  %64 = load ptr, ptr %W_diag, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %64, i32 0, i32 10
  %65 = load ptr, ptr %data, align 8, !tbaa !165
  %66 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %67 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %68 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %69 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %i41 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %69, i32 0, i32 0
  %70 = load ptr, ptr %i41, align 8, !tbaa !163
  %71 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %call42 = call i32 @hypre_ExtendWtoPHost(i32 noundef %58, ptr noundef %59, ptr noundef %61, ptr noundef %63, ptr noundef %65, ptr noundef %66, ptr noundef %67, ptr noundef %68, ptr noundef %70, ptr noundef %71)
  %72 = load ptr, ptr %comm, align 8, !tbaa !4
  %73 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %global_num_rows = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %73, i32 0, i32 1
  %74 = load i32, ptr %global_num_rows, align 8, !tbaa !171
  %75 = load i32, ptr %total_global_cpts, align 4, !tbaa !92
  %76 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %col_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %76, i32 0, i32 15
  %arraydecay = getelementptr inbounds [2 x i32], ptr %col_starts, i64 0, i64 0
  %77 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %78 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %num_cols43 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %78, i32 0, i32 4
  %79 = load i32, ptr %num_cols43, align 4, !tbaa !167
  %80 = load i32, ptr %P_diag_nnz, align 4, !tbaa !92
  %81 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %num_nonzeros44 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %81, i32 0, i32 5
  %82 = load i32, ptr %num_nonzeros44, align 8, !tbaa !166
  %call45 = call ptr @hypre_ParCSRMatrixCreate(ptr noundef %72, i32 noundef %74, i32 noundef %75, ptr noundef %arraydecay, ptr noundef %77, i32 noundef %79, i32 noundef %80, i32 noundef %82)
  store ptr %call45, ptr %P, align 8, !tbaa !4
  %83 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %84 = load ptr, ptr %P, align 8, !tbaa !4
  %diag46 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %84, i32 0, i32 8
  %85 = load ptr, ptr %diag46, align 8, !tbaa !149
  %memory_location = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %85, i32 0, i32 13
  store i32 %83, ptr %memory_location, align 4, !tbaa !177
  %86 = load i32, ptr %memory_location_P, align 4, !tbaa !155
  %87 = load ptr, ptr %P, align 8, !tbaa !4
  %offd47 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %87, i32 0, i32 9
  %88 = load ptr, ptr %offd47, align 8, !tbaa !162
  %memory_location48 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %88, i32 0, i32 13
  store i32 %86, ptr %memory_location48, align 4, !tbaa !177
  %89 = load ptr, ptr %P_diag_i, align 8, !tbaa !4
  %90 = load ptr, ptr %P, align 8, !tbaa !4
  %diag49 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %90, i32 0, i32 8
  %91 = load ptr, ptr %diag49, align 8, !tbaa !149
  %i50 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %91, i32 0, i32 0
  store ptr %89, ptr %i50, align 8, !tbaa !163
  %92 = load ptr, ptr %P_diag_j, align 8, !tbaa !4
  %93 = load ptr, ptr %P, align 8, !tbaa !4
  %diag51 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %93, i32 0, i32 8
  %94 = load ptr, ptr %diag51, align 8, !tbaa !149
  %j52 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %94, i32 0, i32 1
  store ptr %92, ptr %j52, align 8, !tbaa !164
  %95 = load ptr, ptr %P_diag_data, align 8, !tbaa !4
  %96 = load ptr, ptr %P, align 8, !tbaa !4
  %diag53 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %96, i32 0, i32 8
  %97 = load ptr, ptr %diag53, align 8, !tbaa !149
  %data54 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %97, i32 0, i32 10
  store ptr %95, ptr %data54, align 8, !tbaa !165
  %98 = load ptr, ptr %P_offd_i, align 8, !tbaa !4
  %99 = load ptr, ptr %P, align 8, !tbaa !4
  %offd55 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %99, i32 0, i32 9
  %100 = load ptr, ptr %offd55, align 8, !tbaa !162
  %i56 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %100, i32 0, i32 0
  store ptr %98, ptr %i56, align 8, !tbaa !163
  %101 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %j57 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %101, i32 0, i32 1
  %102 = load ptr, ptr %j57, align 8, !tbaa !164
  %103 = load ptr, ptr %P, align 8, !tbaa !4
  %offd58 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %103, i32 0, i32 9
  %104 = load ptr, ptr %offd58, align 8, !tbaa !162
  %j59 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %104, i32 0, i32 1
  store ptr %102, ptr %j59, align 8, !tbaa !164
  %105 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %data60 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %105, i32 0, i32 10
  %106 = load ptr, ptr %data60, align 8, !tbaa !165
  %107 = load ptr, ptr %P, align 8, !tbaa !4
  %offd61 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %107, i32 0, i32 9
  %108 = load ptr, ptr %offd61, align 8, !tbaa !162
  %data62 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %108, i32 0, i32 10
  store ptr %106, ptr %data62, align 8, !tbaa !165
  %109 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %j63 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %109, i32 0, i32 1
  store ptr null, ptr %j63, align 8, !tbaa !164
  %110 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %data64 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %110, i32 0, i32 10
  store ptr null, ptr %data64, align 8, !tbaa !165
  %111 = load ptr, ptr %W_offd, align 8, !tbaa !4
  %num_cols65 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %111, i32 0, i32 4
  %112 = load i32, ptr %num_cols65, align 4, !tbaa !167
  store i32 %112, ptr %num_cols_P_offd, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %col_map_offd_tmp) #6
  %113 = load ptr, ptr %W, align 8, !tbaa !4
  %col_map_offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %113, i32 0, i32 12
  %114 = load ptr, ptr %col_map_offd, align 8, !tbaa !174
  store ptr %114, ptr %col_map_offd_tmp, align 8, !tbaa !4
  %115 = load ptr, ptr %P, align 8, !tbaa !4
  %offd66 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %115, i32 0, i32 9
  %116 = load ptr, ptr %offd66, align 8, !tbaa !162
  %num_nonzeros67 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %116, i32 0, i32 5
  %117 = load i32, ptr %num_nonzeros67, align 8, !tbaa !166
  %tobool = icmp ne i32 %117, 0
  br i1 %tobool, label %if.then68, label %if.end82

if.then68:                                        ; preds = %if.end
  %118 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %conv69 = sext i32 %118 to i64
  %call70 = call ptr @hypre_CAlloc(i64 noundef %conv69, i64 noundef 4, i32 noundef 0)
  store ptr %call70, ptr %col_map_offd_P, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond71

for.cond71:                                       ; preds = %for.inc79, %if.then68
  %119 = load i32, ptr %i, align 4, !tbaa !92
  %120 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %cmp72 = icmp slt i32 %119, %120
  br i1 %cmp72, label %for.body74, label %for.end81

for.body74:                                       ; preds = %for.cond71
  %121 = load ptr, ptr %col_map_offd_tmp, align 8, !tbaa !4
  %122 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom75 = sext i32 %122 to i64
  %arrayidx76 = getelementptr inbounds i32, ptr %121, i64 %idxprom75
  %123 = load i32, ptr %arrayidx76, align 4, !tbaa !92
  %124 = load ptr, ptr %col_map_offd_P, align 8, !tbaa !4
  %125 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom77 = sext i32 %125 to i64
  %arrayidx78 = getelementptr inbounds i32, ptr %124, i64 %idxprom77
  store i32 %123, ptr %arrayidx78, align 4, !tbaa !92
  br label %for.inc79

for.inc79:                                        ; preds = %for.body74
  %126 = load i32, ptr %i, align 4, !tbaa !92
  %inc80 = add nsw i32 %126, 1
  store i32 %inc80, ptr %i, align 4, !tbaa !92
  br label %for.cond71, !llvm.loop !282

for.end81:                                        ; preds = %for.cond71
  br label %if.end82

if.end82:                                         ; preds = %for.end81, %if.end
  %127 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %tobool83 = icmp ne i32 %127, 0
  br i1 %tobool83, label %if.then84, label %if.end88

if.then84:                                        ; preds = %if.end82
  %128 = load ptr, ptr %col_map_offd_P, align 8, !tbaa !4
  %129 = load ptr, ptr %P, align 8, !tbaa !4
  %col_map_offd85 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %129, i32 0, i32 12
  store ptr %128, ptr %col_map_offd85, align 8, !tbaa !174
  %130 = load i32, ptr %num_cols_P_offd, align 4, !tbaa !92
  %131 = load ptr, ptr %P, align 8, !tbaa !4
  %offd86 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %131, i32 0, i32 9
  %132 = load ptr, ptr %offd86, align 8, !tbaa !162
  %num_cols87 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %132, i32 0, i32 4
  store i32 %130, ptr %num_cols87, align 4, !tbaa !167
  br label %if.end88

if.end88:                                         ; preds = %if.then84, %if.end82
  %133 = load ptr, ptr %P, align 8, !tbaa !4
  %call89 = call i32 @hypre_MatvecCommPkgCreate(ptr noundef %133)
  %134 = load ptr, ptr %P, align 8, !tbaa !4
  %135 = load ptr, ptr %P_ptr.addr, align 8, !tbaa !4
  store ptr %134, ptr %135, align 8, !tbaa !4
  %136 = load ptr, ptr %C_marker, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %136, i32 noundef 0)
  store ptr null, ptr %C_marker, align 8, !tbaa !4
  %137 = load ptr, ptr %F_marker, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %137, i32 noundef 0)
  store ptr null, ptr %F_marker, align 8, !tbaa !4
  %138 = load ptr, ptr %A_ff, align 8, !tbaa !4
  %call90 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %138)
  %139 = load ptr, ptr %A_fc, align 8, !tbaa !4
  %call91 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %139)
  %140 = load ptr, ptr %A_ff_inv, align 8, !tbaa !4
  %call92 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %140)
  %141 = load ptr, ptr %W, align 8, !tbaa !4
  %call93 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %141)
  call void @llvm.lifetime.end.p0(i64 8, ptr %col_map_offd_tmp) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %W_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %W_diag) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %memory_location_P) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %m_one) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_cols_P_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %total_global_cpts) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n_fine) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %P_diag_nnz) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %col_map_offd_P) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %P) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %W) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_ff_inv) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_fc) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_ff) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %F_marker) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %C_marker) #6
  ret i32 0
}

declare i32 @hypre_ParCSRMatrixScale(ptr noundef, double noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBuildInterp(ptr noundef %A, ptr noundef %A_FF, ptr noundef %A_FC, ptr noundef %CF_marker, ptr noundef %aux_mat, ptr noundef %num_cpts_global, i32 noundef %num_functions, ptr noundef %dof_func, i32 noundef %debug_flag, double noundef %trunc_factor, i32 noundef %max_elmts, i32 noundef %blk_size, ptr noundef %P, i32 noundef %interp_type, i32 noundef %numsweeps) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %A_FF.addr = alloca ptr, align 8
  %A_FC.addr = alloca ptr, align 8
  %CF_marker.addr = alloca ptr, align 8
  %aux_mat.addr = alloca ptr, align 8
  %num_cpts_global.addr = alloca ptr, align 8
  %num_functions.addr = alloca i32, align 4
  %dof_func.addr = alloca ptr, align 8
  %debug_flag.addr = alloca i32, align 4
  %trunc_factor.addr = alloca double, align 8
  %max_elmts.addr = alloca i32, align 4
  %blk_size.addr = alloca i32, align 4
  %P.addr = alloca ptr, align 8
  %interp_type.addr = alloca i32, align 4
  %numsweeps.addr = alloca i32, align 4
  %P_ptr = alloca ptr, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %A_FF, ptr %A_FF.addr, align 8, !tbaa !4
  store ptr %A_FC, ptr %A_FC.addr, align 8, !tbaa !4
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store ptr %aux_mat, ptr %aux_mat.addr, align 8, !tbaa !4
  store ptr %num_cpts_global, ptr %num_cpts_global.addr, align 8, !tbaa !4
  store i32 %num_functions, ptr %num_functions.addr, align 4, !tbaa !92
  store ptr %dof_func, ptr %dof_func.addr, align 8, !tbaa !4
  store i32 %debug_flag, ptr %debug_flag.addr, align 4, !tbaa !92
  store double %trunc_factor, ptr %trunc_factor.addr, align 8, !tbaa !161
  store i32 %max_elmts, ptr %max_elmts.addr, align 4, !tbaa !92
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  store ptr %P, ptr %P.addr, align 8, !tbaa !4
  store i32 %interp_type, ptr %interp_type.addr, align 4, !tbaa !92
  store i32 %numsweeps, ptr %numsweeps.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %P_ptr) #6
  store ptr null, ptr %P_ptr, align 8, !tbaa !4
  %0 = load i32, ptr %interp_type.addr, align 4, !tbaa !92
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %2 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %3 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %4 = load i32, ptr %interp_type.addr, align 4, !tbaa !92
  %call = call i32 @hypre_MGRBuildPHost(ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4, ptr noundef %P_ptr)
  br label %if.end27

if.else:                                          ; preds = %entry
  %5 = load i32, ptr %interp_type.addr, align 4, !tbaa !92
  %cmp1 = icmp eq i32 %5, 4
  br i1 %cmp1, label %if.then2, label %if.else5

if.then2:                                         ; preds = %if.else
  %6 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %7 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %8 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %9 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %call3 = call i32 @hypre_MGRBuildInterpApproximateInverse(ptr noundef %6, ptr noundef %7, ptr noundef %8, i32 noundef %9, ptr noundef %P_ptr)
  %10 = load ptr, ptr %P_ptr, align 8, !tbaa !4
  %11 = load double, ptr %trunc_factor.addr, align 8, !tbaa !161
  %12 = load i32, ptr %max_elmts.addr, align 4, !tbaa !92
  %call4 = call i32 @hypre_BoomerAMGInterpTruncation(ptr noundef %10, double noundef %11, i32 noundef %12)
  br label %if.end26

if.else5:                                         ; preds = %if.else
  %13 = load i32, ptr %interp_type.addr, align 4, !tbaa !92
  %cmp6 = icmp eq i32 %13, 5
  br i1 %cmp6, label %if.then7, label %if.else9

if.then7:                                         ; preds = %if.else5
  %14 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %15 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %16 = load ptr, ptr %aux_mat.addr, align 8, !tbaa !4
  %17 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %18 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %19 = load double, ptr %trunc_factor.addr, align 8, !tbaa !161
  %20 = load i32, ptr %max_elmts.addr, align 4, !tbaa !92
  %call8 = call i32 @hypre_BoomerAMGBuildModExtInterp(ptr noundef %14, ptr noundef %15, ptr noundef %16, ptr noundef %17, i32 noundef 1, ptr noundef null, i32 noundef %18, double noundef %19, i32 noundef %20, ptr noundef %P_ptr)
  br label %if.end25

if.else9:                                         ; preds = %if.else5
  %21 = load i32, ptr %interp_type.addr, align 4, !tbaa !92
  %cmp10 = icmp eq i32 %21, 6
  br i1 %cmp10, label %if.then11, label %if.else13

if.then11:                                        ; preds = %if.else9
  %22 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %23 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %24 = load ptr, ptr %aux_mat.addr, align 8, !tbaa !4
  %25 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %26 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %27 = load double, ptr %trunc_factor.addr, align 8, !tbaa !161
  %28 = load i32, ptr %max_elmts.addr, align 4, !tbaa !92
  %call12 = call i32 @hypre_BoomerAMGBuildModExtPIInterp(ptr noundef %22, ptr noundef %23, ptr noundef %24, ptr noundef %25, i32 noundef 1, ptr noundef null, i32 noundef %26, double noundef %27, i32 noundef %28, ptr noundef %P_ptr)
  br label %if.end24

if.else13:                                        ; preds = %if.else9
  %29 = load i32, ptr %interp_type.addr, align 4, !tbaa !92
  %cmp14 = icmp eq i32 %29, 7
  br i1 %cmp14, label %if.then15, label %if.else17

if.then15:                                        ; preds = %if.else13
  %30 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %31 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %32 = load ptr, ptr %aux_mat.addr, align 8, !tbaa !4
  %33 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %34 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %35 = load double, ptr %trunc_factor.addr, align 8, !tbaa !161
  %36 = load i32, ptr %max_elmts.addr, align 4, !tbaa !92
  %call16 = call i32 @hypre_BoomerAMGBuildModExtPEInterp(ptr noundef %30, ptr noundef %31, ptr noundef %32, ptr noundef %33, i32 noundef 1, ptr noundef null, i32 noundef %34, double noundef %35, i32 noundef %36, ptr noundef %P_ptr)
  br label %if.end23

if.else17:                                        ; preds = %if.else13
  %37 = load i32, ptr %interp_type.addr, align 4, !tbaa !92
  %cmp18 = icmp eq i32 %37, 12
  br i1 %cmp18, label %if.then19, label %if.else21

if.then19:                                        ; preds = %if.else17
  %38 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %39 = load ptr, ptr %A_FF.addr, align 8, !tbaa !4
  %40 = load ptr, ptr %A_FC.addr, align 8, !tbaa !4
  %41 = load ptr, ptr %aux_mat.addr, align 8, !tbaa !4
  %42 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %43 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %44 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %45 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %call20 = call i32 @hypre_MGRBuildPBlockJacobi(ptr noundef %38, ptr noundef %39, ptr noundef %40, ptr noundef %41, i32 noundef %42, ptr noundef %43, ptr noundef %44, i32 noundef %45, ptr noundef %P_ptr)
  br label %if.end

if.else21:                                        ; preds = %if.else17
  %46 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %47 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %48 = load ptr, ptr %aux_mat.addr, align 8, !tbaa !4
  %49 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %50 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %51 = load double, ptr %trunc_factor.addr, align 8, !tbaa !161
  %52 = load i32, ptr %max_elmts.addr, align 4, !tbaa !92
  %call22 = call i32 @hypre_BoomerAMGBuildInterp(ptr noundef %46, ptr noundef %47, ptr noundef %48, ptr noundef %49, i32 noundef 1, ptr noundef null, i32 noundef %50, double noundef %51, i32 noundef %52, ptr noundef %P_ptr)
  br label %if.end

if.end:                                           ; preds = %if.else21, %if.then19
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then15
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then11
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then7
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then2
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then
  %53 = load ptr, ptr %P_ptr, align 8, !tbaa !4
  %54 = load ptr, ptr %P.addr, align 8, !tbaa !4
  store ptr %53, ptr %54, align 8, !tbaa !4
  %55 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %P_ptr) #6
  ret i32 %55
}

declare i32 @hypre_BoomerAMGInterpTruncation(ptr noundef, double noundef, i32 noundef) #2

declare i32 @hypre_BoomerAMGBuildModExtInterp(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, double noundef, i32 noundef, ptr noundef) #2

declare i32 @hypre_BoomerAMGBuildModExtPIInterp(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, double noundef, i32 noundef, ptr noundef) #2

declare i32 @hypre_BoomerAMGBuildModExtPEInterp(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, double noundef, i32 noundef, ptr noundef) #2

declare i32 @hypre_BoomerAMGBuildInterp(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, double noundef, i32 noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBuildRestrict(ptr noundef %A, ptr noundef %A_FF, ptr noundef %A_FC, ptr noundef %CF_marker, ptr noundef %num_cpts_global, i32 noundef %num_functions, ptr noundef %dof_func, i32 noundef %debug_flag, double noundef %trunc_factor, i32 noundef %max_elmts, double noundef %strong_threshold, double noundef %max_row_sum, i32 noundef %blk_size, ptr noundef %R_ptr, i32 noundef %restrict_type, i32 noundef %numsweeps) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %A_FF.addr = alloca ptr, align 8
  %A_FC.addr = alloca ptr, align 8
  %CF_marker.addr = alloca ptr, align 8
  %num_cpts_global.addr = alloca ptr, align 8
  %num_functions.addr = alloca i32, align 4
  %dof_func.addr = alloca ptr, align 8
  %debug_flag.addr = alloca i32, align 4
  %trunc_factor.addr = alloca double, align 8
  %max_elmts.addr = alloca i32, align 4
  %strong_threshold.addr = alloca double, align 8
  %max_row_sum.addr = alloca double, align 8
  %blk_size.addr = alloca i32, align 4
  %R_ptr.addr = alloca ptr, align 8
  %restrict_type.addr = alloca i32, align 4
  %numsweeps.addr = alloca i32, align 4
  %R = alloca ptr, align 8
  %AT = alloca ptr, align 8
  %A_FFT = alloca ptr, align 8
  %A_FCT = alloca ptr, align 8
  %ST = alloca ptr, align 8
  %blk_A_cf = alloca ptr, align 8
  %blk_A_cf_transpose = alloca ptr, align 8
  %Wr_transpose = alloca ptr, align 8
  %blk_A_ff_inv_transpose = alloca ptr, align 8
  %c_marker = alloca ptr, align 8
  %f_marker = alloca ptr, align 8
  %i = alloca i32, align 4
  %nrows = alloca i32, align 4
  %memory_location = alloca i32, align 4
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %A_FF, ptr %A_FF.addr, align 8, !tbaa !4
  store ptr %A_FC, ptr %A_FC.addr, align 8, !tbaa !4
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store ptr %num_cpts_global, ptr %num_cpts_global.addr, align 8, !tbaa !4
  store i32 %num_functions, ptr %num_functions.addr, align 4, !tbaa !92
  store ptr %dof_func, ptr %dof_func.addr, align 8, !tbaa !4
  store i32 %debug_flag, ptr %debug_flag.addr, align 4, !tbaa !92
  store double %trunc_factor, ptr %trunc_factor.addr, align 8, !tbaa !161
  store i32 %max_elmts, ptr %max_elmts.addr, align 4, !tbaa !92
  store double %strong_threshold, ptr %strong_threshold.addr, align 8, !tbaa !161
  store double %max_row_sum, ptr %max_row_sum.addr, align 8, !tbaa !161
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  store ptr %R_ptr, ptr %R_ptr.addr, align 8, !tbaa !4
  store i32 %restrict_type, ptr %restrict_type.addr, align 4, !tbaa !92
  store i32 %numsweeps, ptr %numsweeps.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %R) #6
  store ptr null, ptr %R, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %AT) #6
  store ptr null, ptr %AT, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_FFT) #6
  store ptr null, ptr %A_FFT, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_FCT) #6
  store ptr null, ptr %A_FCT, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %ST) #6
  store ptr null, ptr %ST, align 8, !tbaa !4
  %0 = load i32, ptr %restrict_type.addr, align 4, !tbaa !92
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call = call i32 @hypre_ParCSRMatrixTranspose(ptr noundef %1, ptr noundef %AT, i32 noundef 1)
  %2 = load ptr, ptr %A_FF.addr, align 8, !tbaa !4
  %tobool = icmp ne ptr %2, null
  br i1 %tobool, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %3 = load ptr, ptr %A_FF.addr, align 8, !tbaa !4
  %call2 = call i32 @hypre_ParCSRMatrixTranspose(ptr noundef %3, ptr noundef %A_FFT, i32 noundef 1)
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %4 = load ptr, ptr %A_FC.addr, align 8, !tbaa !4
  %tobool3 = icmp ne ptr %4, null
  br i1 %tobool3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %5 = load ptr, ptr %A_FC.addr, align 8, !tbaa !4
  %call5 = call i32 @hypre_ParCSRMatrixTranspose(ptr noundef %5, ptr noundef %A_FCT, i32 noundef 1)
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %entry
  %6 = load i32, ptr %restrict_type.addr, align 4, !tbaa !92
  %cmp8 = icmp eq i32 %6, 0
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end7
  %7 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %8 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %9 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %10 = load i32, ptr %restrict_type.addr, align 4, !tbaa !92
  %11 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %call10 = call i32 @hypre_MGRBuildP(ptr noundef %7, ptr noundef %8, ptr noundef %9, i32 noundef %10, i32 noundef %11, ptr noundef %R)
  br label %if.end51

if.else:                                          ; preds = %if.end7
  %12 = load i32, ptr %restrict_type.addr, align 4, !tbaa !92
  %cmp11 = icmp eq i32 %12, 1
  br i1 %cmp11, label %if.then13, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %13 = load i32, ptr %restrict_type.addr, align 4, !tbaa !92
  %cmp12 = icmp eq i32 %13, 2
  br i1 %cmp12, label %if.then13, label %if.else15

if.then13:                                        ; preds = %lor.lhs.false, %if.else
  %14 = load ptr, ptr %AT, align 8, !tbaa !4
  %15 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %16 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %17 = load i32, ptr %restrict_type.addr, align 4, !tbaa !92
  %18 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %call14 = call i32 @hypre_MGRBuildP(ptr noundef %14, ptr noundef %15, ptr noundef %16, i32 noundef %17, i32 noundef %18, ptr noundef %R)
  br label %if.end50

if.else15:                                        ; preds = %lor.lhs.false
  %19 = load i32, ptr %restrict_type.addr, align 4, !tbaa !92
  %cmp16 = icmp eq i32 %19, 3
  br i1 %cmp16, label %if.then17, label %if.else21

if.then17:                                        ; preds = %if.else15
  %20 = load ptr, ptr %AT, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %20, i32 0, i32 8
  %21 = load ptr, ptr %diag, align 8, !tbaa !149
  %call18 = call i32 @hypre_CSRMatrixReorder(ptr noundef %21)
  %22 = load ptr, ptr %AT, align 8, !tbaa !4
  %23 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %24 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %25 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %call19 = call i32 @hypre_MGRBuildInterpApproximateInverse(ptr noundef %22, ptr noundef %23, ptr noundef %24, i32 noundef %25, ptr noundef %R)
  %26 = load ptr, ptr %R, align 8, !tbaa !4
  %27 = load double, ptr %trunc_factor.addr, align 8, !tbaa !161
  %28 = load i32, ptr %max_elmts.addr, align 4, !tbaa !92
  %call20 = call i32 @hypre_BoomerAMGInterpTruncation(ptr noundef %26, double noundef %27, i32 noundef %28)
  br label %if.end49

if.else21:                                        ; preds = %if.else15
  %29 = load i32, ptr %restrict_type.addr, align 4, !tbaa !92
  %cmp22 = icmp eq i32 %29, 12
  br i1 %cmp22, label %if.then23, label %if.else25

if.then23:                                        ; preds = %if.else21
  %30 = load ptr, ptr %AT, align 8, !tbaa !4
  %31 = load ptr, ptr %A_FFT, align 8, !tbaa !4
  %32 = load ptr, ptr %A_FCT, align 8, !tbaa !4
  %33 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %34 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %35 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %36 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %call24 = call i32 @hypre_MGRBuildPBlockJacobi(ptr noundef %30, ptr noundef %31, ptr noundef %32, ptr noundef null, i32 noundef %33, ptr noundef %34, ptr noundef %35, i32 noundef %36, ptr noundef %R)
  br label %if.end48

if.else25:                                        ; preds = %if.else21
  %37 = load i32, ptr %restrict_type.addr, align 4, !tbaa !92
  %cmp26 = icmp eq i32 %37, 13
  br i1 %cmp26, label %if.then27, label %if.else44

if.then27:                                        ; preds = %if.else25
  call void @llvm.lifetime.start.p0(i64 8, ptr %blk_A_cf) #6
  store ptr null, ptr %blk_A_cf, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %blk_A_cf_transpose) #6
  store ptr null, ptr %blk_A_cf_transpose, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %Wr_transpose) #6
  store ptr null, ptr %Wr_transpose, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %blk_A_ff_inv_transpose) #6
  store ptr null, ptr %blk_A_ff_inv_transpose, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %c_marker) #6
  store ptr null, ptr %c_marker, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %f_marker) #6
  store ptr null, ptr %f_marker, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %nrows) #6
  %38 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag28 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %38, i32 0, i32 8
  %39 = load ptr, ptr %diag28, align 8, !tbaa !149
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %39, i32 0, i32 3
  %40 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %40, ptr %nrows, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %memory_location) #6
  %41 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call29 = call i32 @hypre_ParCSRMatrixMemoryLocation(ptr noundef %41)
  store i32 %call29, ptr %memory_location, align 4, !tbaa !155
  %42 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  store ptr %42, ptr %c_marker, align 8, !tbaa !4
  %43 = load i32, ptr %nrows, align 4, !tbaa !92
  %conv = sext i32 %43 to i64
  %44 = load i32, ptr %memory_location, align 4, !tbaa !155
  %call30 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef %44)
  store ptr %call30, ptr %f_marker, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then27
  %45 = load i32, ptr %i, align 4, !tbaa !92
  %46 = load i32, ptr %nrows, align 4, !tbaa !92
  %cmp31 = icmp slt i32 %45, %46
  br i1 %cmp31, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %47 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %48 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %48 to i64
  %arrayidx = getelementptr inbounds i32, ptr %47, i64 %idxprom
  %49 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %sub = sub nsw i32 0, %49
  %50 = load ptr, ptr %f_marker, align 8, !tbaa !4
  %51 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom33 = sext i32 %51 to i64
  %arrayidx34 = getelementptr inbounds i32, ptr %50, i64 %idxprom33
  store i32 %sub, ptr %arrayidx34, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %52 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %52, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !283

for.end:                                          ; preds = %for.cond
  %53 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %54 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %55 = load ptr, ptr %c_marker, align 8, !tbaa !4
  %56 = load ptr, ptr %f_marker, align 8, !tbaa !4
  %call35 = call i32 @hypre_MGRGetAcfCPR(ptr noundef %53, i32 noundef %54, ptr noundef %55, ptr noundef %56, ptr noundef %blk_A_cf)
  %57 = load ptr, ptr %blk_A_cf, align 8, !tbaa !4
  %call36 = call i32 @hypre_ParCSRMatrixTranspose(ptr noundef %57, ptr noundef %blk_A_cf_transpose, i32 noundef 1)
  %58 = load ptr, ptr %AT, align 8, !tbaa !4
  %59 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %60 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %call37 = call i32 @hypre_ParCSRMatrixBlockDiagMatrix(ptr noundef %58, i32 noundef %59, i32 noundef -1, ptr noundef %60, i32 noundef 1, ptr noundef %blk_A_ff_inv_transpose)
  %61 = load ptr, ptr %blk_A_ff_inv_transpose, align 8, !tbaa !4
  %62 = load ptr, ptr %blk_A_cf_transpose, align 8, !tbaa !4
  %call38 = call ptr @hypre_ParCSRMatMat(ptr noundef %61, ptr noundef %62)
  store ptr %call38, ptr %Wr_transpose, align 8, !tbaa !4
  %63 = load ptr, ptr %AT, align 8, !tbaa !4
  %64 = load ptr, ptr %Wr_transpose, align 8, !tbaa !4
  %65 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %66 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %call39 = call i32 @hypre_MGRBuildPFromWp(ptr noundef %63, ptr noundef %64, ptr noundef %65, i32 noundef %66, ptr noundef %R)
  %67 = load ptr, ptr %blk_A_cf, align 8, !tbaa !4
  %call40 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %67)
  %68 = load ptr, ptr %blk_A_cf_transpose, align 8, !tbaa !4
  %call41 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %68)
  %69 = load ptr, ptr %Wr_transpose, align 8, !tbaa !4
  %call42 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %69)
  %70 = load ptr, ptr %blk_A_ff_inv_transpose, align 8, !tbaa !4
  %call43 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %70)
  %71 = load ptr, ptr %f_marker, align 8, !tbaa !4
  %72 = load i32, ptr %memory_location, align 4, !tbaa !155
  call void @hypre_Free(ptr noundef %71, i32 noundef %72)
  store ptr null, ptr %f_marker, align 8, !tbaa !4
  call void @llvm.lifetime.end.p0(i64 4, ptr %memory_location) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nrows) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %f_marker) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %c_marker) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %blk_A_ff_inv_transpose) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Wr_transpose) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %blk_A_cf_transpose) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %blk_A_cf) #6
  br label %if.end47

if.else44:                                        ; preds = %if.else25
  %73 = load ptr, ptr %AT, align 8, !tbaa !4
  %74 = load double, ptr %strong_threshold.addr, align 8, !tbaa !161
  %75 = load double, ptr %max_row_sum.addr, align 8, !tbaa !161
  %call45 = call i32 @hypre_BoomerAMGCreateS(ptr noundef %73, double noundef %74, double noundef %75, i32 noundef 1, ptr noundef null, ptr noundef %ST)
  %76 = load ptr, ptr %AT, align 8, !tbaa !4
  %77 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %78 = load ptr, ptr %ST, align 8, !tbaa !4
  %79 = load ptr, ptr %num_cpts_global.addr, align 8, !tbaa !4
  %80 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %81 = load double, ptr %trunc_factor.addr, align 8, !tbaa !161
  %82 = load i32, ptr %max_elmts.addr, align 4, !tbaa !92
  %call46 = call i32 @hypre_BoomerAMGBuildInterp(ptr noundef %76, ptr noundef %77, ptr noundef %78, ptr noundef %79, i32 noundef 1, ptr noundef null, i32 noundef %80, double noundef %81, i32 noundef %82, ptr noundef %R)
  br label %if.end47

if.end47:                                         ; preds = %if.else44, %for.end
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then23
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then17
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then13
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then9
  %83 = load ptr, ptr %R, align 8, !tbaa !4
  %diagT = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %83, i32 0, i32 10
  %84 = load ptr, ptr %diagT, align 8, !tbaa !284
  %tobool52 = icmp ne ptr %84, null
  br i1 %tobool52, label %if.end57, label %if.then53

if.then53:                                        ; preds = %if.end51
  %85 = load ptr, ptr %R, align 8, !tbaa !4
  %diag54 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %85, i32 0, i32 8
  %86 = load ptr, ptr %diag54, align 8, !tbaa !149
  %87 = load ptr, ptr %R, align 8, !tbaa !4
  %diagT55 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %87, i32 0, i32 10
  %call56 = call i32 @hypre_CSRMatrixTranspose(ptr noundef %86, ptr noundef %diagT55, i32 noundef 1)
  br label %if.end57

if.end57:                                         ; preds = %if.then53, %if.end51
  %88 = load ptr, ptr %R, align 8, !tbaa !4
  %offdT = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %88, i32 0, i32 11
  %89 = load ptr, ptr %offdT, align 8, !tbaa !285
  %tobool58 = icmp ne ptr %89, null
  br i1 %tobool58, label %if.end62, label %if.then59

if.then59:                                        ; preds = %if.end57
  %90 = load ptr, ptr %R, align 8, !tbaa !4
  %offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %90, i32 0, i32 9
  %91 = load ptr, ptr %offd, align 8, !tbaa !162
  %92 = load ptr, ptr %R, align 8, !tbaa !4
  %offdT60 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %92, i32 0, i32 11
  %call61 = call i32 @hypre_CSRMatrixTranspose(ptr noundef %91, ptr noundef %offdT60, i32 noundef 1)
  br label %if.end62

if.end62:                                         ; preds = %if.then59, %if.end57
  %93 = load ptr, ptr %R, align 8, !tbaa !4
  %94 = load ptr, ptr %R_ptr.addr, align 8, !tbaa !4
  store ptr %93, ptr %94, align 8, !tbaa !4
  %95 = load i32, ptr %restrict_type.addr, align 4, !tbaa !92
  %cmp63 = icmp sgt i32 %95, 0
  br i1 %cmp63, label %if.then65, label %if.end69

if.then65:                                        ; preds = %if.end62
  %96 = load ptr, ptr %AT, align 8, !tbaa !4
  %call66 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %96)
  %97 = load ptr, ptr %A_FFT, align 8, !tbaa !4
  %call67 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %97)
  %98 = load ptr, ptr %A_FCT, align 8, !tbaa !4
  %call68 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %98)
  br label %if.end69

if.end69:                                         ; preds = %if.then65, %if.end62
  %99 = load i32, ptr %restrict_type.addr, align 4, !tbaa !92
  %cmp70 = icmp sgt i32 %99, 5
  br i1 %cmp70, label %if.then72, label %if.end74

if.then72:                                        ; preds = %if.end69
  %100 = load ptr, ptr %ST, align 8, !tbaa !4
  %call73 = call i32 @hypre_ParCSRMatrixDestroy(ptr noundef %100)
  br label %if.end74

if.end74:                                         ; preds = %if.then72, %if.end69
  %101 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %ST) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_FCT) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_FFT) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %AT) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %R) #6
  ret i32 %101
}

declare i32 @hypre_ParCSRMatrixTranspose(ptr noundef, ptr noundef, i32 noundef) #2

declare i32 @hypre_CSRMatrixReorder(ptr noundef) #2

declare i32 @hypre_BoomerAMGCreateS(ptr noundef, double noundef, double noundef, i32 noundef, ptr noundef, ptr noundef) #2

declare i32 @hypre_CSRMatrixTranspose(ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: nounwind uwtable
define void @hypre_blas_smat_inv_n2(ptr noundef %a) #0 {
entry:
  %a.addr = alloca ptr, align 8
  %a11 = alloca double, align 8
  %a12 = alloca double, align 8
  %a21 = alloca double, align 8
  %a22 = alloca double, align 8
  %det_inv = alloca double, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %a11) #6
  %0 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds double, ptr %0, i64 0
  %1 = load double, ptr %arrayidx, align 8, !tbaa !161
  store double %1, ptr %a11, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a12) #6
  %2 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx1 = getelementptr inbounds double, ptr %2, i64 1
  %3 = load double, ptr %arrayidx1, align 8, !tbaa !161
  store double %3, ptr %a12, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a21) #6
  %4 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx2 = getelementptr inbounds double, ptr %4, i64 2
  %5 = load double, ptr %arrayidx2, align 8, !tbaa !161
  store double %5, ptr %a21, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a22) #6
  %6 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx3 = getelementptr inbounds double, ptr %6, i64 3
  %7 = load double, ptr %arrayidx3, align 8, !tbaa !161
  store double %7, ptr %a22, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %det_inv) #6
  %8 = load double, ptr %a11, align 8, !tbaa !161
  %9 = load double, ptr %a22, align 8, !tbaa !161
  %10 = load double, ptr %a12, align 8, !tbaa !161
  %11 = load double, ptr %a21, align 8, !tbaa !161
  %mul4 = fmul double %10, %11
  %neg = fneg double %mul4
  %12 = call double @llvm.fmuladd.f64(double %8, double %9, double %neg)
  %div = fdiv double 1.000000e+00, %12
  store double %div, ptr %det_inv, align 8, !tbaa !161
  %13 = load double, ptr %a22, align 8, !tbaa !161
  %14 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul = fmul double %13, %14
  %15 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx5 = getelementptr inbounds double, ptr %15, i64 0
  store double %mul, ptr %arrayidx5, align 8, !tbaa !161
  %16 = load double, ptr %a12, align 8, !tbaa !161
  %fneg = fneg double %16
  %17 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul6 = fmul double %fneg, %17
  %18 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx7 = getelementptr inbounds double, ptr %18, i64 1
  store double %mul6, ptr %arrayidx7, align 8, !tbaa !161
  %19 = load double, ptr %a21, align 8, !tbaa !161
  %fneg8 = fneg double %19
  %20 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul9 = fmul double %fneg8, %20
  %21 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx10 = getelementptr inbounds double, ptr %21, i64 2
  store double %mul9, ptr %arrayidx10, align 8, !tbaa !161
  %22 = load double, ptr %a11, align 8, !tbaa !161
  %23 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul11 = fmul double %22, %23
  %24 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx12 = getelementptr inbounds double, ptr %24, i64 3
  store double %mul11, ptr %arrayidx12, align 8, !tbaa !161
  call void @llvm.lifetime.end.p0(i64 8, ptr %det_inv) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a22) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a21) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a12) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a11) #6
  ret void
}

; Function Attrs: nounwind uwtable
define void @hypre_blas_smat_inv_n3(ptr noundef %a) #0 {
entry:
  %a.addr = alloca ptr, align 8
  %a11 = alloca double, align 8
  %a12 = alloca double, align 8
  %a13 = alloca double, align 8
  %a21 = alloca double, align 8
  %a22 = alloca double, align 8
  %a23 = alloca double, align 8
  %a31 = alloca double, align 8
  %a32 = alloca double, align 8
  %a33 = alloca double, align 8
  %det = alloca double, align 8
  %det_inv = alloca double, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %a11) #6
  %0 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds double, ptr %0, i64 0
  %1 = load double, ptr %arrayidx, align 8, !tbaa !161
  store double %1, ptr %a11, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a12) #6
  %2 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx1 = getelementptr inbounds double, ptr %2, i64 1
  %3 = load double, ptr %arrayidx1, align 8, !tbaa !161
  store double %3, ptr %a12, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a13) #6
  %4 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx2 = getelementptr inbounds double, ptr %4, i64 2
  %5 = load double, ptr %arrayidx2, align 8, !tbaa !161
  store double %5, ptr %a13, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a21) #6
  %6 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx3 = getelementptr inbounds double, ptr %6, i64 3
  %7 = load double, ptr %arrayidx3, align 8, !tbaa !161
  store double %7, ptr %a21, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a22) #6
  %8 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx4 = getelementptr inbounds double, ptr %8, i64 4
  %9 = load double, ptr %arrayidx4, align 8, !tbaa !161
  store double %9, ptr %a22, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a23) #6
  %10 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx5 = getelementptr inbounds double, ptr %10, i64 5
  %11 = load double, ptr %arrayidx5, align 8, !tbaa !161
  store double %11, ptr %a23, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a31) #6
  %12 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx6 = getelementptr inbounds double, ptr %12, i64 6
  %13 = load double, ptr %arrayidx6, align 8, !tbaa !161
  store double %13, ptr %a31, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a32) #6
  %14 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx7 = getelementptr inbounds double, ptr %14, i64 7
  %15 = load double, ptr %arrayidx7, align 8, !tbaa !161
  store double %15, ptr %a32, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a33) #6
  %16 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx8 = getelementptr inbounds double, ptr %16, i64 8
  %17 = load double, ptr %arrayidx8, align 8, !tbaa !161
  store double %17, ptr %a33, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %det) #6
  %18 = load double, ptr %a11, align 8, !tbaa !161
  %19 = load double, ptr %a22, align 8, !tbaa !161
  %mul = fmul double %18, %19
  %20 = load double, ptr %a33, align 8, !tbaa !161
  %21 = load double, ptr %a11, align 8, !tbaa !161
  %22 = load double, ptr %a23, align 8, !tbaa !161
  %mul10 = fmul double %21, %22
  %23 = load double, ptr %a32, align 8, !tbaa !161
  %mul11 = fmul double %mul10, %23
  %neg = fneg double %mul11
  %24 = call double @llvm.fmuladd.f64(double %mul, double %20, double %neg)
  %25 = load double, ptr %a12, align 8, !tbaa !161
  %26 = load double, ptr %a21, align 8, !tbaa !161
  %mul12 = fmul double %25, %26
  %27 = load double, ptr %a33, align 8, !tbaa !161
  %neg14 = fneg double %mul12
  %28 = call double @llvm.fmuladd.f64(double %neg14, double %27, double %24)
  %29 = load double, ptr %a12, align 8, !tbaa !161
  %30 = load double, ptr %a23, align 8, !tbaa !161
  %mul15 = fmul double %29, %30
  %31 = load double, ptr %a31, align 8, !tbaa !161
  %32 = call double @llvm.fmuladd.f64(double %mul15, double %31, double %28)
  %33 = load double, ptr %a13, align 8, !tbaa !161
  %34 = load double, ptr %a21, align 8, !tbaa !161
  %mul17 = fmul double %33, %34
  %35 = load double, ptr %a32, align 8, !tbaa !161
  %36 = call double @llvm.fmuladd.f64(double %mul17, double %35, double %32)
  %37 = load double, ptr %a13, align 8, !tbaa !161
  %38 = load double, ptr %a22, align 8, !tbaa !161
  %mul19 = fmul double %37, %38
  %39 = load double, ptr %a31, align 8, !tbaa !161
  %neg21 = fneg double %mul19
  %40 = call double @llvm.fmuladd.f64(double %neg21, double %39, double %36)
  store double %40, ptr %det, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %det_inv) #6
  %41 = load double, ptr %det, align 8, !tbaa !161
  %div = fdiv double 1.000000e+00, %41
  store double %div, ptr %det_inv, align 8, !tbaa !161
  %42 = load double, ptr %a22, align 8, !tbaa !161
  %43 = load double, ptr %a33, align 8, !tbaa !161
  %44 = load double, ptr %a23, align 8, !tbaa !161
  %45 = load double, ptr %a32, align 8, !tbaa !161
  %mul23 = fmul double %44, %45
  %neg24 = fneg double %mul23
  %46 = call double @llvm.fmuladd.f64(double %42, double %43, double %neg24)
  %47 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul25 = fmul double %46, %47
  %48 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx26 = getelementptr inbounds double, ptr %48, i64 0
  store double %mul25, ptr %arrayidx26, align 8, !tbaa !161
  %49 = load double, ptr %a13, align 8, !tbaa !161
  %50 = load double, ptr %a32, align 8, !tbaa !161
  %51 = load double, ptr %a12, align 8, !tbaa !161
  %52 = load double, ptr %a33, align 8, !tbaa !161
  %mul28 = fmul double %51, %52
  %neg29 = fneg double %mul28
  %53 = call double @llvm.fmuladd.f64(double %49, double %50, double %neg29)
  %54 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul30 = fmul double %53, %54
  %55 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx31 = getelementptr inbounds double, ptr %55, i64 1
  store double %mul30, ptr %arrayidx31, align 8, !tbaa !161
  %56 = load double, ptr %a12, align 8, !tbaa !161
  %57 = load double, ptr %a23, align 8, !tbaa !161
  %58 = load double, ptr %a13, align 8, !tbaa !161
  %59 = load double, ptr %a22, align 8, !tbaa !161
  %mul33 = fmul double %58, %59
  %neg34 = fneg double %mul33
  %60 = call double @llvm.fmuladd.f64(double %56, double %57, double %neg34)
  %61 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul35 = fmul double %60, %61
  %62 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx36 = getelementptr inbounds double, ptr %62, i64 2
  store double %mul35, ptr %arrayidx36, align 8, !tbaa !161
  %63 = load double, ptr %a23, align 8, !tbaa !161
  %64 = load double, ptr %a31, align 8, !tbaa !161
  %65 = load double, ptr %a21, align 8, !tbaa !161
  %66 = load double, ptr %a33, align 8, !tbaa !161
  %mul38 = fmul double %65, %66
  %neg39 = fneg double %mul38
  %67 = call double @llvm.fmuladd.f64(double %63, double %64, double %neg39)
  %68 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul40 = fmul double %67, %68
  %69 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx41 = getelementptr inbounds double, ptr %69, i64 3
  store double %mul40, ptr %arrayidx41, align 8, !tbaa !161
  %70 = load double, ptr %a11, align 8, !tbaa !161
  %71 = load double, ptr %a33, align 8, !tbaa !161
  %72 = load double, ptr %a13, align 8, !tbaa !161
  %73 = load double, ptr %a31, align 8, !tbaa !161
  %mul43 = fmul double %72, %73
  %neg44 = fneg double %mul43
  %74 = call double @llvm.fmuladd.f64(double %70, double %71, double %neg44)
  %75 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul45 = fmul double %74, %75
  %76 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx46 = getelementptr inbounds double, ptr %76, i64 4
  store double %mul45, ptr %arrayidx46, align 8, !tbaa !161
  %77 = load double, ptr %a13, align 8, !tbaa !161
  %78 = load double, ptr %a21, align 8, !tbaa !161
  %79 = load double, ptr %a11, align 8, !tbaa !161
  %80 = load double, ptr %a23, align 8, !tbaa !161
  %mul48 = fmul double %79, %80
  %neg49 = fneg double %mul48
  %81 = call double @llvm.fmuladd.f64(double %77, double %78, double %neg49)
  %82 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul50 = fmul double %81, %82
  %83 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx51 = getelementptr inbounds double, ptr %83, i64 5
  store double %mul50, ptr %arrayidx51, align 8, !tbaa !161
  %84 = load double, ptr %a21, align 8, !tbaa !161
  %85 = load double, ptr %a32, align 8, !tbaa !161
  %86 = load double, ptr %a22, align 8, !tbaa !161
  %87 = load double, ptr %a31, align 8, !tbaa !161
  %mul53 = fmul double %86, %87
  %neg54 = fneg double %mul53
  %88 = call double @llvm.fmuladd.f64(double %84, double %85, double %neg54)
  %89 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul55 = fmul double %88, %89
  %90 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx56 = getelementptr inbounds double, ptr %90, i64 6
  store double %mul55, ptr %arrayidx56, align 8, !tbaa !161
  %91 = load double, ptr %a12, align 8, !tbaa !161
  %92 = load double, ptr %a31, align 8, !tbaa !161
  %93 = load double, ptr %a11, align 8, !tbaa !161
  %94 = load double, ptr %a32, align 8, !tbaa !161
  %mul58 = fmul double %93, %94
  %neg59 = fneg double %mul58
  %95 = call double @llvm.fmuladd.f64(double %91, double %92, double %neg59)
  %96 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul60 = fmul double %95, %96
  %97 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx61 = getelementptr inbounds double, ptr %97, i64 7
  store double %mul60, ptr %arrayidx61, align 8, !tbaa !161
  %98 = load double, ptr %a11, align 8, !tbaa !161
  %99 = load double, ptr %a22, align 8, !tbaa !161
  %100 = load double, ptr %a12, align 8, !tbaa !161
  %101 = load double, ptr %a21, align 8, !tbaa !161
  %mul63 = fmul double %100, %101
  %neg64 = fneg double %mul63
  %102 = call double @llvm.fmuladd.f64(double %98, double %99, double %neg64)
  %103 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul65 = fmul double %102, %103
  %104 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx66 = getelementptr inbounds double, ptr %104, i64 8
  store double %mul65, ptr %arrayidx66, align 8, !tbaa !161
  call void @llvm.lifetime.end.p0(i64 8, ptr %det_inv) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %det) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a33) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a32) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a31) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a23) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a22) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a21) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a13) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a12) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a11) #6
  ret void
}

; Function Attrs: nounwind uwtable
define void @hypre_blas_smat_inv_n4(ptr noundef %a) #0 {
entry:
  %a.addr = alloca ptr, align 8
  %a11 = alloca double, align 8
  %a12 = alloca double, align 8
  %a13 = alloca double, align 8
  %a14 = alloca double, align 8
  %a21 = alloca double, align 8
  %a22 = alloca double, align 8
  %a23 = alloca double, align 8
  %a24 = alloca double, align 8
  %a31 = alloca double, align 8
  %a32 = alloca double, align 8
  %a33 = alloca double, align 8
  %a34 = alloca double, align 8
  %a41 = alloca double, align 8
  %a42 = alloca double, align 8
  %a43 = alloca double, align 8
  %a44 = alloca double, align 8
  %M11 = alloca double, align 8
  %M12 = alloca double, align 8
  %M13 = alloca double, align 8
  %M14 = alloca double, align 8
  %M21 = alloca double, align 8
  %M22 = alloca double, align 8
  %M23 = alloca double, align 8
  %M24 = alloca double, align 8
  %M31 = alloca double, align 8
  %M32 = alloca double, align 8
  %M33 = alloca double, align 8
  %M34 = alloca double, align 8
  %M41 = alloca double, align 8
  %M42 = alloca double, align 8
  %M43 = alloca double, align 8
  %M44 = alloca double, align 8
  %det = alloca double, align 8
  %det_inv = alloca double, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %a11) #6
  %0 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds double, ptr %0, i64 0
  %1 = load double, ptr %arrayidx, align 8, !tbaa !161
  store double %1, ptr %a11, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a12) #6
  %2 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx1 = getelementptr inbounds double, ptr %2, i64 1
  %3 = load double, ptr %arrayidx1, align 8, !tbaa !161
  store double %3, ptr %a12, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a13) #6
  %4 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx2 = getelementptr inbounds double, ptr %4, i64 2
  %5 = load double, ptr %arrayidx2, align 8, !tbaa !161
  store double %5, ptr %a13, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a14) #6
  %6 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx3 = getelementptr inbounds double, ptr %6, i64 3
  %7 = load double, ptr %arrayidx3, align 8, !tbaa !161
  store double %7, ptr %a14, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a21) #6
  %8 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx4 = getelementptr inbounds double, ptr %8, i64 4
  %9 = load double, ptr %arrayidx4, align 8, !tbaa !161
  store double %9, ptr %a21, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a22) #6
  %10 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx5 = getelementptr inbounds double, ptr %10, i64 5
  %11 = load double, ptr %arrayidx5, align 8, !tbaa !161
  store double %11, ptr %a22, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a23) #6
  %12 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx6 = getelementptr inbounds double, ptr %12, i64 6
  %13 = load double, ptr %arrayidx6, align 8, !tbaa !161
  store double %13, ptr %a23, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a24) #6
  %14 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx7 = getelementptr inbounds double, ptr %14, i64 7
  %15 = load double, ptr %arrayidx7, align 8, !tbaa !161
  store double %15, ptr %a24, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a31) #6
  %16 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx8 = getelementptr inbounds double, ptr %16, i64 8
  %17 = load double, ptr %arrayidx8, align 8, !tbaa !161
  store double %17, ptr %a31, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a32) #6
  %18 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx9 = getelementptr inbounds double, ptr %18, i64 9
  %19 = load double, ptr %arrayidx9, align 8, !tbaa !161
  store double %19, ptr %a32, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a33) #6
  %20 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx10 = getelementptr inbounds double, ptr %20, i64 10
  %21 = load double, ptr %arrayidx10, align 8, !tbaa !161
  store double %21, ptr %a33, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a34) #6
  %22 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx11 = getelementptr inbounds double, ptr %22, i64 11
  %23 = load double, ptr %arrayidx11, align 8, !tbaa !161
  store double %23, ptr %a34, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a41) #6
  %24 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx12 = getelementptr inbounds double, ptr %24, i64 12
  %25 = load double, ptr %arrayidx12, align 8, !tbaa !161
  store double %25, ptr %a41, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a42) #6
  %26 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx13 = getelementptr inbounds double, ptr %26, i64 13
  %27 = load double, ptr %arrayidx13, align 8, !tbaa !161
  store double %27, ptr %a42, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a43) #6
  %28 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx14 = getelementptr inbounds double, ptr %28, i64 14
  %29 = load double, ptr %arrayidx14, align 8, !tbaa !161
  store double %29, ptr %a43, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %a44) #6
  %30 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx15 = getelementptr inbounds double, ptr %30, i64 15
  %31 = load double, ptr %arrayidx15, align 8, !tbaa !161
  store double %31, ptr %a44, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M11) #6
  %32 = load double, ptr %a22, align 8, !tbaa !161
  %33 = load double, ptr %a33, align 8, !tbaa !161
  %mul = fmul double %32, %33
  %34 = load double, ptr %a44, align 8, !tbaa !161
  %35 = load double, ptr %a23, align 8, !tbaa !161
  %36 = load double, ptr %a34, align 8, !tbaa !161
  %mul17 = fmul double %35, %36
  %37 = load double, ptr %a42, align 8, !tbaa !161
  %mul18 = fmul double %mul17, %37
  %38 = call double @llvm.fmuladd.f64(double %mul, double %34, double %mul18)
  %39 = load double, ptr %a24, align 8, !tbaa !161
  %40 = load double, ptr %a32, align 8, !tbaa !161
  %mul19 = fmul double %39, %40
  %41 = load double, ptr %a43, align 8, !tbaa !161
  %42 = call double @llvm.fmuladd.f64(double %mul19, double %41, double %38)
  %43 = load double, ptr %a22, align 8, !tbaa !161
  %44 = load double, ptr %a34, align 8, !tbaa !161
  %mul21 = fmul double %43, %44
  %45 = load double, ptr %a43, align 8, !tbaa !161
  %neg = fneg double %mul21
  %46 = call double @llvm.fmuladd.f64(double %neg, double %45, double %42)
  %47 = load double, ptr %a23, align 8, !tbaa !161
  %48 = load double, ptr %a32, align 8, !tbaa !161
  %mul23 = fmul double %47, %48
  %49 = load double, ptr %a44, align 8, !tbaa !161
  %neg25 = fneg double %mul23
  %50 = call double @llvm.fmuladd.f64(double %neg25, double %49, double %46)
  %51 = load double, ptr %a24, align 8, !tbaa !161
  %52 = load double, ptr %a33, align 8, !tbaa !161
  %mul26 = fmul double %51, %52
  %53 = load double, ptr %a42, align 8, !tbaa !161
  %neg28 = fneg double %mul26
  %54 = call double @llvm.fmuladd.f64(double %neg28, double %53, double %50)
  store double %54, ptr %M11, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M12) #6
  %55 = load double, ptr %a12, align 8, !tbaa !161
  %56 = load double, ptr %a34, align 8, !tbaa !161
  %mul29 = fmul double %55, %56
  %57 = load double, ptr %a43, align 8, !tbaa !161
  %58 = load double, ptr %a13, align 8, !tbaa !161
  %59 = load double, ptr %a32, align 8, !tbaa !161
  %mul31 = fmul double %58, %59
  %60 = load double, ptr %a44, align 8, !tbaa !161
  %mul32 = fmul double %mul31, %60
  %61 = call double @llvm.fmuladd.f64(double %mul29, double %57, double %mul32)
  %62 = load double, ptr %a14, align 8, !tbaa !161
  %63 = load double, ptr %a33, align 8, !tbaa !161
  %mul33 = fmul double %62, %63
  %64 = load double, ptr %a42, align 8, !tbaa !161
  %65 = call double @llvm.fmuladd.f64(double %mul33, double %64, double %61)
  %66 = load double, ptr %a12, align 8, !tbaa !161
  %67 = load double, ptr %a33, align 8, !tbaa !161
  %mul35 = fmul double %66, %67
  %68 = load double, ptr %a44, align 8, !tbaa !161
  %neg37 = fneg double %mul35
  %69 = call double @llvm.fmuladd.f64(double %neg37, double %68, double %65)
  %70 = load double, ptr %a13, align 8, !tbaa !161
  %71 = load double, ptr %a34, align 8, !tbaa !161
  %mul38 = fmul double %70, %71
  %72 = load double, ptr %a42, align 8, !tbaa !161
  %neg40 = fneg double %mul38
  %73 = call double @llvm.fmuladd.f64(double %neg40, double %72, double %69)
  %74 = load double, ptr %a14, align 8, !tbaa !161
  %75 = load double, ptr %a32, align 8, !tbaa !161
  %mul41 = fmul double %74, %75
  %76 = load double, ptr %a43, align 8, !tbaa !161
  %neg43 = fneg double %mul41
  %77 = call double @llvm.fmuladd.f64(double %neg43, double %76, double %73)
  store double %77, ptr %M12, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M13) #6
  %78 = load double, ptr %a12, align 8, !tbaa !161
  %79 = load double, ptr %a23, align 8, !tbaa !161
  %mul44 = fmul double %78, %79
  %80 = load double, ptr %a44, align 8, !tbaa !161
  %81 = load double, ptr %a13, align 8, !tbaa !161
  %82 = load double, ptr %a24, align 8, !tbaa !161
  %mul46 = fmul double %81, %82
  %83 = load double, ptr %a42, align 8, !tbaa !161
  %mul47 = fmul double %mul46, %83
  %84 = call double @llvm.fmuladd.f64(double %mul44, double %80, double %mul47)
  %85 = load double, ptr %a14, align 8, !tbaa !161
  %86 = load double, ptr %a22, align 8, !tbaa !161
  %mul48 = fmul double %85, %86
  %87 = load double, ptr %a43, align 8, !tbaa !161
  %88 = call double @llvm.fmuladd.f64(double %mul48, double %87, double %84)
  %89 = load double, ptr %a12, align 8, !tbaa !161
  %90 = load double, ptr %a24, align 8, !tbaa !161
  %mul50 = fmul double %89, %90
  %91 = load double, ptr %a43, align 8, !tbaa !161
  %neg52 = fneg double %mul50
  %92 = call double @llvm.fmuladd.f64(double %neg52, double %91, double %88)
  %93 = load double, ptr %a13, align 8, !tbaa !161
  %94 = load double, ptr %a22, align 8, !tbaa !161
  %mul53 = fmul double %93, %94
  %95 = load double, ptr %a44, align 8, !tbaa !161
  %neg55 = fneg double %mul53
  %96 = call double @llvm.fmuladd.f64(double %neg55, double %95, double %92)
  %97 = load double, ptr %a14, align 8, !tbaa !161
  %98 = load double, ptr %a23, align 8, !tbaa !161
  %mul56 = fmul double %97, %98
  %99 = load double, ptr %a42, align 8, !tbaa !161
  %neg58 = fneg double %mul56
  %100 = call double @llvm.fmuladd.f64(double %neg58, double %99, double %96)
  store double %100, ptr %M13, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M14) #6
  %101 = load double, ptr %a12, align 8, !tbaa !161
  %102 = load double, ptr %a24, align 8, !tbaa !161
  %mul59 = fmul double %101, %102
  %103 = load double, ptr %a33, align 8, !tbaa !161
  %104 = load double, ptr %a13, align 8, !tbaa !161
  %105 = load double, ptr %a22, align 8, !tbaa !161
  %mul61 = fmul double %104, %105
  %106 = load double, ptr %a34, align 8, !tbaa !161
  %mul62 = fmul double %mul61, %106
  %107 = call double @llvm.fmuladd.f64(double %mul59, double %103, double %mul62)
  %108 = load double, ptr %a14, align 8, !tbaa !161
  %109 = load double, ptr %a23, align 8, !tbaa !161
  %mul63 = fmul double %108, %109
  %110 = load double, ptr %a32, align 8, !tbaa !161
  %111 = call double @llvm.fmuladd.f64(double %mul63, double %110, double %107)
  %112 = load double, ptr %a12, align 8, !tbaa !161
  %113 = load double, ptr %a23, align 8, !tbaa !161
  %mul65 = fmul double %112, %113
  %114 = load double, ptr %a34, align 8, !tbaa !161
  %neg67 = fneg double %mul65
  %115 = call double @llvm.fmuladd.f64(double %neg67, double %114, double %111)
  %116 = load double, ptr %a13, align 8, !tbaa !161
  %117 = load double, ptr %a24, align 8, !tbaa !161
  %mul68 = fmul double %116, %117
  %118 = load double, ptr %a32, align 8, !tbaa !161
  %neg70 = fneg double %mul68
  %119 = call double @llvm.fmuladd.f64(double %neg70, double %118, double %115)
  %120 = load double, ptr %a14, align 8, !tbaa !161
  %121 = load double, ptr %a22, align 8, !tbaa !161
  %mul71 = fmul double %120, %121
  %122 = load double, ptr %a33, align 8, !tbaa !161
  %neg73 = fneg double %mul71
  %123 = call double @llvm.fmuladd.f64(double %neg73, double %122, double %119)
  store double %123, ptr %M14, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M21) #6
  %124 = load double, ptr %a21, align 8, !tbaa !161
  %125 = load double, ptr %a34, align 8, !tbaa !161
  %mul74 = fmul double %124, %125
  %126 = load double, ptr %a43, align 8, !tbaa !161
  %127 = load double, ptr %a23, align 8, !tbaa !161
  %128 = load double, ptr %a31, align 8, !tbaa !161
  %mul76 = fmul double %127, %128
  %129 = load double, ptr %a44, align 8, !tbaa !161
  %mul77 = fmul double %mul76, %129
  %130 = call double @llvm.fmuladd.f64(double %mul74, double %126, double %mul77)
  %131 = load double, ptr %a24, align 8, !tbaa !161
  %132 = load double, ptr %a33, align 8, !tbaa !161
  %mul78 = fmul double %131, %132
  %133 = load double, ptr %a41, align 8, !tbaa !161
  %134 = call double @llvm.fmuladd.f64(double %mul78, double %133, double %130)
  %135 = load double, ptr %a21, align 8, !tbaa !161
  %136 = load double, ptr %a33, align 8, !tbaa !161
  %mul80 = fmul double %135, %136
  %137 = load double, ptr %a44, align 8, !tbaa !161
  %neg82 = fneg double %mul80
  %138 = call double @llvm.fmuladd.f64(double %neg82, double %137, double %134)
  %139 = load double, ptr %a23, align 8, !tbaa !161
  %140 = load double, ptr %a34, align 8, !tbaa !161
  %mul83 = fmul double %139, %140
  %141 = load double, ptr %a41, align 8, !tbaa !161
  %neg85 = fneg double %mul83
  %142 = call double @llvm.fmuladd.f64(double %neg85, double %141, double %138)
  %143 = load double, ptr %a24, align 8, !tbaa !161
  %144 = load double, ptr %a31, align 8, !tbaa !161
  %mul86 = fmul double %143, %144
  %145 = load double, ptr %a43, align 8, !tbaa !161
  %neg88 = fneg double %mul86
  %146 = call double @llvm.fmuladd.f64(double %neg88, double %145, double %142)
  store double %146, ptr %M21, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M22) #6
  %147 = load double, ptr %a11, align 8, !tbaa !161
  %148 = load double, ptr %a33, align 8, !tbaa !161
  %mul89 = fmul double %147, %148
  %149 = load double, ptr %a44, align 8, !tbaa !161
  %150 = load double, ptr %a13, align 8, !tbaa !161
  %151 = load double, ptr %a34, align 8, !tbaa !161
  %mul91 = fmul double %150, %151
  %152 = load double, ptr %a41, align 8, !tbaa !161
  %mul92 = fmul double %mul91, %152
  %153 = call double @llvm.fmuladd.f64(double %mul89, double %149, double %mul92)
  %154 = load double, ptr %a14, align 8, !tbaa !161
  %155 = load double, ptr %a31, align 8, !tbaa !161
  %mul93 = fmul double %154, %155
  %156 = load double, ptr %a43, align 8, !tbaa !161
  %157 = call double @llvm.fmuladd.f64(double %mul93, double %156, double %153)
  %158 = load double, ptr %a11, align 8, !tbaa !161
  %159 = load double, ptr %a34, align 8, !tbaa !161
  %mul95 = fmul double %158, %159
  %160 = load double, ptr %a43, align 8, !tbaa !161
  %neg97 = fneg double %mul95
  %161 = call double @llvm.fmuladd.f64(double %neg97, double %160, double %157)
  %162 = load double, ptr %a13, align 8, !tbaa !161
  %163 = load double, ptr %a31, align 8, !tbaa !161
  %mul98 = fmul double %162, %163
  %164 = load double, ptr %a44, align 8, !tbaa !161
  %neg100 = fneg double %mul98
  %165 = call double @llvm.fmuladd.f64(double %neg100, double %164, double %161)
  %166 = load double, ptr %a14, align 8, !tbaa !161
  %167 = load double, ptr %a33, align 8, !tbaa !161
  %mul101 = fmul double %166, %167
  %168 = load double, ptr %a41, align 8, !tbaa !161
  %neg103 = fneg double %mul101
  %169 = call double @llvm.fmuladd.f64(double %neg103, double %168, double %165)
  store double %169, ptr %M22, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M23) #6
  %170 = load double, ptr %a11, align 8, !tbaa !161
  %171 = load double, ptr %a24, align 8, !tbaa !161
  %mul104 = fmul double %170, %171
  %172 = load double, ptr %a43, align 8, !tbaa !161
  %173 = load double, ptr %a13, align 8, !tbaa !161
  %174 = load double, ptr %a21, align 8, !tbaa !161
  %mul106 = fmul double %173, %174
  %175 = load double, ptr %a44, align 8, !tbaa !161
  %mul107 = fmul double %mul106, %175
  %176 = call double @llvm.fmuladd.f64(double %mul104, double %172, double %mul107)
  %177 = load double, ptr %a14, align 8, !tbaa !161
  %178 = load double, ptr %a23, align 8, !tbaa !161
  %mul108 = fmul double %177, %178
  %179 = load double, ptr %a41, align 8, !tbaa !161
  %180 = call double @llvm.fmuladd.f64(double %mul108, double %179, double %176)
  %181 = load double, ptr %a11, align 8, !tbaa !161
  %182 = load double, ptr %a23, align 8, !tbaa !161
  %mul110 = fmul double %181, %182
  %183 = load double, ptr %a44, align 8, !tbaa !161
  %neg112 = fneg double %mul110
  %184 = call double @llvm.fmuladd.f64(double %neg112, double %183, double %180)
  %185 = load double, ptr %a13, align 8, !tbaa !161
  %186 = load double, ptr %a24, align 8, !tbaa !161
  %mul113 = fmul double %185, %186
  %187 = load double, ptr %a41, align 8, !tbaa !161
  %neg115 = fneg double %mul113
  %188 = call double @llvm.fmuladd.f64(double %neg115, double %187, double %184)
  %189 = load double, ptr %a14, align 8, !tbaa !161
  %190 = load double, ptr %a21, align 8, !tbaa !161
  %mul116 = fmul double %189, %190
  %191 = load double, ptr %a43, align 8, !tbaa !161
  %neg118 = fneg double %mul116
  %192 = call double @llvm.fmuladd.f64(double %neg118, double %191, double %188)
  store double %192, ptr %M23, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M24) #6
  %193 = load double, ptr %a11, align 8, !tbaa !161
  %194 = load double, ptr %a23, align 8, !tbaa !161
  %mul119 = fmul double %193, %194
  %195 = load double, ptr %a34, align 8, !tbaa !161
  %196 = load double, ptr %a13, align 8, !tbaa !161
  %197 = load double, ptr %a24, align 8, !tbaa !161
  %mul121 = fmul double %196, %197
  %198 = load double, ptr %a31, align 8, !tbaa !161
  %mul122 = fmul double %mul121, %198
  %199 = call double @llvm.fmuladd.f64(double %mul119, double %195, double %mul122)
  %200 = load double, ptr %a14, align 8, !tbaa !161
  %201 = load double, ptr %a21, align 8, !tbaa !161
  %mul123 = fmul double %200, %201
  %202 = load double, ptr %a33, align 8, !tbaa !161
  %203 = call double @llvm.fmuladd.f64(double %mul123, double %202, double %199)
  %204 = load double, ptr %a11, align 8, !tbaa !161
  %205 = load double, ptr %a24, align 8, !tbaa !161
  %mul125 = fmul double %204, %205
  %206 = load double, ptr %a33, align 8, !tbaa !161
  %neg127 = fneg double %mul125
  %207 = call double @llvm.fmuladd.f64(double %neg127, double %206, double %203)
  %208 = load double, ptr %a13, align 8, !tbaa !161
  %209 = load double, ptr %a21, align 8, !tbaa !161
  %mul128 = fmul double %208, %209
  %210 = load double, ptr %a34, align 8, !tbaa !161
  %neg130 = fneg double %mul128
  %211 = call double @llvm.fmuladd.f64(double %neg130, double %210, double %207)
  %212 = load double, ptr %a14, align 8, !tbaa !161
  %213 = load double, ptr %a23, align 8, !tbaa !161
  %mul131 = fmul double %212, %213
  %214 = load double, ptr %a31, align 8, !tbaa !161
  %neg133 = fneg double %mul131
  %215 = call double @llvm.fmuladd.f64(double %neg133, double %214, double %211)
  store double %215, ptr %M24, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M31) #6
  %216 = load double, ptr %a21, align 8, !tbaa !161
  %217 = load double, ptr %a32, align 8, !tbaa !161
  %mul134 = fmul double %216, %217
  %218 = load double, ptr %a44, align 8, !tbaa !161
  %219 = load double, ptr %a22, align 8, !tbaa !161
  %220 = load double, ptr %a34, align 8, !tbaa !161
  %mul136 = fmul double %219, %220
  %221 = load double, ptr %a41, align 8, !tbaa !161
  %mul137 = fmul double %mul136, %221
  %222 = call double @llvm.fmuladd.f64(double %mul134, double %218, double %mul137)
  %223 = load double, ptr %a24, align 8, !tbaa !161
  %224 = load double, ptr %a31, align 8, !tbaa !161
  %mul138 = fmul double %223, %224
  %225 = load double, ptr %a42, align 8, !tbaa !161
  %226 = call double @llvm.fmuladd.f64(double %mul138, double %225, double %222)
  %227 = load double, ptr %a21, align 8, !tbaa !161
  %228 = load double, ptr %a34, align 8, !tbaa !161
  %mul140 = fmul double %227, %228
  %229 = load double, ptr %a42, align 8, !tbaa !161
  %neg142 = fneg double %mul140
  %230 = call double @llvm.fmuladd.f64(double %neg142, double %229, double %226)
  %231 = load double, ptr %a22, align 8, !tbaa !161
  %232 = load double, ptr %a31, align 8, !tbaa !161
  %mul143 = fmul double %231, %232
  %233 = load double, ptr %a44, align 8, !tbaa !161
  %neg145 = fneg double %mul143
  %234 = call double @llvm.fmuladd.f64(double %neg145, double %233, double %230)
  %235 = load double, ptr %a24, align 8, !tbaa !161
  %236 = load double, ptr %a32, align 8, !tbaa !161
  %mul146 = fmul double %235, %236
  %237 = load double, ptr %a41, align 8, !tbaa !161
  %neg148 = fneg double %mul146
  %238 = call double @llvm.fmuladd.f64(double %neg148, double %237, double %234)
  store double %238, ptr %M31, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M32) #6
  %239 = load double, ptr %a11, align 8, !tbaa !161
  %240 = load double, ptr %a34, align 8, !tbaa !161
  %mul149 = fmul double %239, %240
  %241 = load double, ptr %a42, align 8, !tbaa !161
  %242 = load double, ptr %a12, align 8, !tbaa !161
  %243 = load double, ptr %a31, align 8, !tbaa !161
  %mul151 = fmul double %242, %243
  %244 = load double, ptr %a44, align 8, !tbaa !161
  %mul152 = fmul double %mul151, %244
  %245 = call double @llvm.fmuladd.f64(double %mul149, double %241, double %mul152)
  %246 = load double, ptr %a14, align 8, !tbaa !161
  %247 = load double, ptr %a32, align 8, !tbaa !161
  %mul153 = fmul double %246, %247
  %248 = load double, ptr %a41, align 8, !tbaa !161
  %249 = call double @llvm.fmuladd.f64(double %mul153, double %248, double %245)
  %250 = load double, ptr %a11, align 8, !tbaa !161
  %251 = load double, ptr %a32, align 8, !tbaa !161
  %mul155 = fmul double %250, %251
  %252 = load double, ptr %a44, align 8, !tbaa !161
  %neg157 = fneg double %mul155
  %253 = call double @llvm.fmuladd.f64(double %neg157, double %252, double %249)
  %254 = load double, ptr %a12, align 8, !tbaa !161
  %255 = load double, ptr %a34, align 8, !tbaa !161
  %mul158 = fmul double %254, %255
  %256 = load double, ptr %a41, align 8, !tbaa !161
  %neg160 = fneg double %mul158
  %257 = call double @llvm.fmuladd.f64(double %neg160, double %256, double %253)
  %258 = load double, ptr %a14, align 8, !tbaa !161
  %259 = load double, ptr %a31, align 8, !tbaa !161
  %mul161 = fmul double %258, %259
  %260 = load double, ptr %a42, align 8, !tbaa !161
  %neg163 = fneg double %mul161
  %261 = call double @llvm.fmuladd.f64(double %neg163, double %260, double %257)
  store double %261, ptr %M32, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M33) #6
  %262 = load double, ptr %a11, align 8, !tbaa !161
  %263 = load double, ptr %a22, align 8, !tbaa !161
  %mul164 = fmul double %262, %263
  %264 = load double, ptr %a44, align 8, !tbaa !161
  %265 = load double, ptr %a12, align 8, !tbaa !161
  %266 = load double, ptr %a24, align 8, !tbaa !161
  %mul166 = fmul double %265, %266
  %267 = load double, ptr %a41, align 8, !tbaa !161
  %mul167 = fmul double %mul166, %267
  %268 = call double @llvm.fmuladd.f64(double %mul164, double %264, double %mul167)
  %269 = load double, ptr %a14, align 8, !tbaa !161
  %270 = load double, ptr %a21, align 8, !tbaa !161
  %mul168 = fmul double %269, %270
  %271 = load double, ptr %a42, align 8, !tbaa !161
  %272 = call double @llvm.fmuladd.f64(double %mul168, double %271, double %268)
  %273 = load double, ptr %a11, align 8, !tbaa !161
  %274 = load double, ptr %a24, align 8, !tbaa !161
  %mul170 = fmul double %273, %274
  %275 = load double, ptr %a42, align 8, !tbaa !161
  %neg172 = fneg double %mul170
  %276 = call double @llvm.fmuladd.f64(double %neg172, double %275, double %272)
  %277 = load double, ptr %a12, align 8, !tbaa !161
  %278 = load double, ptr %a21, align 8, !tbaa !161
  %mul173 = fmul double %277, %278
  %279 = load double, ptr %a44, align 8, !tbaa !161
  %neg175 = fneg double %mul173
  %280 = call double @llvm.fmuladd.f64(double %neg175, double %279, double %276)
  %281 = load double, ptr %a14, align 8, !tbaa !161
  %282 = load double, ptr %a22, align 8, !tbaa !161
  %mul176 = fmul double %281, %282
  %283 = load double, ptr %a41, align 8, !tbaa !161
  %neg178 = fneg double %mul176
  %284 = call double @llvm.fmuladd.f64(double %neg178, double %283, double %280)
  store double %284, ptr %M33, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M34) #6
  %285 = load double, ptr %a11, align 8, !tbaa !161
  %286 = load double, ptr %a24, align 8, !tbaa !161
  %mul179 = fmul double %285, %286
  %287 = load double, ptr %a32, align 8, !tbaa !161
  %288 = load double, ptr %a12, align 8, !tbaa !161
  %289 = load double, ptr %a21, align 8, !tbaa !161
  %mul181 = fmul double %288, %289
  %290 = load double, ptr %a34, align 8, !tbaa !161
  %mul182 = fmul double %mul181, %290
  %291 = call double @llvm.fmuladd.f64(double %mul179, double %287, double %mul182)
  %292 = load double, ptr %a14, align 8, !tbaa !161
  %293 = load double, ptr %a22, align 8, !tbaa !161
  %mul183 = fmul double %292, %293
  %294 = load double, ptr %a31, align 8, !tbaa !161
  %295 = call double @llvm.fmuladd.f64(double %mul183, double %294, double %291)
  %296 = load double, ptr %a11, align 8, !tbaa !161
  %297 = load double, ptr %a22, align 8, !tbaa !161
  %mul185 = fmul double %296, %297
  %298 = load double, ptr %a34, align 8, !tbaa !161
  %neg187 = fneg double %mul185
  %299 = call double @llvm.fmuladd.f64(double %neg187, double %298, double %295)
  %300 = load double, ptr %a12, align 8, !tbaa !161
  %301 = load double, ptr %a24, align 8, !tbaa !161
  %mul188 = fmul double %300, %301
  %302 = load double, ptr %a31, align 8, !tbaa !161
  %neg190 = fneg double %mul188
  %303 = call double @llvm.fmuladd.f64(double %neg190, double %302, double %299)
  %304 = load double, ptr %a14, align 8, !tbaa !161
  %305 = load double, ptr %a21, align 8, !tbaa !161
  %mul191 = fmul double %304, %305
  %306 = load double, ptr %a32, align 8, !tbaa !161
  %neg193 = fneg double %mul191
  %307 = call double @llvm.fmuladd.f64(double %neg193, double %306, double %303)
  store double %307, ptr %M34, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M41) #6
  %308 = load double, ptr %a21, align 8, !tbaa !161
  %309 = load double, ptr %a33, align 8, !tbaa !161
  %mul194 = fmul double %308, %309
  %310 = load double, ptr %a42, align 8, !tbaa !161
  %311 = load double, ptr %a22, align 8, !tbaa !161
  %312 = load double, ptr %a31, align 8, !tbaa !161
  %mul196 = fmul double %311, %312
  %313 = load double, ptr %a43, align 8, !tbaa !161
  %mul197 = fmul double %mul196, %313
  %314 = call double @llvm.fmuladd.f64(double %mul194, double %310, double %mul197)
  %315 = load double, ptr %a23, align 8, !tbaa !161
  %316 = load double, ptr %a32, align 8, !tbaa !161
  %mul198 = fmul double %315, %316
  %317 = load double, ptr %a41, align 8, !tbaa !161
  %318 = call double @llvm.fmuladd.f64(double %mul198, double %317, double %314)
  %319 = load double, ptr %a21, align 8, !tbaa !161
  %320 = load double, ptr %a32, align 8, !tbaa !161
  %mul200 = fmul double %319, %320
  %321 = load double, ptr %a43, align 8, !tbaa !161
  %neg202 = fneg double %mul200
  %322 = call double @llvm.fmuladd.f64(double %neg202, double %321, double %318)
  %323 = load double, ptr %a22, align 8, !tbaa !161
  %324 = load double, ptr %a33, align 8, !tbaa !161
  %mul203 = fmul double %323, %324
  %325 = load double, ptr %a41, align 8, !tbaa !161
  %neg205 = fneg double %mul203
  %326 = call double @llvm.fmuladd.f64(double %neg205, double %325, double %322)
  %327 = load double, ptr %a23, align 8, !tbaa !161
  %328 = load double, ptr %a31, align 8, !tbaa !161
  %mul206 = fmul double %327, %328
  %329 = load double, ptr %a42, align 8, !tbaa !161
  %neg208 = fneg double %mul206
  %330 = call double @llvm.fmuladd.f64(double %neg208, double %329, double %326)
  store double %330, ptr %M41, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M42) #6
  %331 = load double, ptr %a11, align 8, !tbaa !161
  %332 = load double, ptr %a32, align 8, !tbaa !161
  %mul209 = fmul double %331, %332
  %333 = load double, ptr %a43, align 8, !tbaa !161
  %334 = load double, ptr %a12, align 8, !tbaa !161
  %335 = load double, ptr %a33, align 8, !tbaa !161
  %mul211 = fmul double %334, %335
  %336 = load double, ptr %a41, align 8, !tbaa !161
  %mul212 = fmul double %mul211, %336
  %337 = call double @llvm.fmuladd.f64(double %mul209, double %333, double %mul212)
  %338 = load double, ptr %a13, align 8, !tbaa !161
  %339 = load double, ptr %a31, align 8, !tbaa !161
  %mul213 = fmul double %338, %339
  %340 = load double, ptr %a42, align 8, !tbaa !161
  %341 = call double @llvm.fmuladd.f64(double %mul213, double %340, double %337)
  %342 = load double, ptr %a11, align 8, !tbaa !161
  %343 = load double, ptr %a33, align 8, !tbaa !161
  %mul215 = fmul double %342, %343
  %344 = load double, ptr %a42, align 8, !tbaa !161
  %neg217 = fneg double %mul215
  %345 = call double @llvm.fmuladd.f64(double %neg217, double %344, double %341)
  %346 = load double, ptr %a12, align 8, !tbaa !161
  %347 = load double, ptr %a31, align 8, !tbaa !161
  %mul218 = fmul double %346, %347
  %348 = load double, ptr %a43, align 8, !tbaa !161
  %neg220 = fneg double %mul218
  %349 = call double @llvm.fmuladd.f64(double %neg220, double %348, double %345)
  %350 = load double, ptr %a13, align 8, !tbaa !161
  %351 = load double, ptr %a32, align 8, !tbaa !161
  %mul221 = fmul double %350, %351
  %352 = load double, ptr %a41, align 8, !tbaa !161
  %neg223 = fneg double %mul221
  %353 = call double @llvm.fmuladd.f64(double %neg223, double %352, double %349)
  store double %353, ptr %M42, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M43) #6
  %354 = load double, ptr %a11, align 8, !tbaa !161
  %355 = load double, ptr %a23, align 8, !tbaa !161
  %mul224 = fmul double %354, %355
  %356 = load double, ptr %a42, align 8, !tbaa !161
  %357 = load double, ptr %a12, align 8, !tbaa !161
  %358 = load double, ptr %a21, align 8, !tbaa !161
  %mul226 = fmul double %357, %358
  %359 = load double, ptr %a43, align 8, !tbaa !161
  %mul227 = fmul double %mul226, %359
  %360 = call double @llvm.fmuladd.f64(double %mul224, double %356, double %mul227)
  %361 = load double, ptr %a13, align 8, !tbaa !161
  %362 = load double, ptr %a22, align 8, !tbaa !161
  %mul228 = fmul double %361, %362
  %363 = load double, ptr %a41, align 8, !tbaa !161
  %364 = call double @llvm.fmuladd.f64(double %mul228, double %363, double %360)
  %365 = load double, ptr %a11, align 8, !tbaa !161
  %366 = load double, ptr %a22, align 8, !tbaa !161
  %mul230 = fmul double %365, %366
  %367 = load double, ptr %a43, align 8, !tbaa !161
  %neg232 = fneg double %mul230
  %368 = call double @llvm.fmuladd.f64(double %neg232, double %367, double %364)
  %369 = load double, ptr %a12, align 8, !tbaa !161
  %370 = load double, ptr %a23, align 8, !tbaa !161
  %mul233 = fmul double %369, %370
  %371 = load double, ptr %a41, align 8, !tbaa !161
  %neg235 = fneg double %mul233
  %372 = call double @llvm.fmuladd.f64(double %neg235, double %371, double %368)
  %373 = load double, ptr %a13, align 8, !tbaa !161
  %374 = load double, ptr %a21, align 8, !tbaa !161
  %mul236 = fmul double %373, %374
  %375 = load double, ptr %a42, align 8, !tbaa !161
  %neg238 = fneg double %mul236
  %376 = call double @llvm.fmuladd.f64(double %neg238, double %375, double %372)
  store double %376, ptr %M43, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %M44) #6
  %377 = load double, ptr %a11, align 8, !tbaa !161
  %378 = load double, ptr %a22, align 8, !tbaa !161
  %mul239 = fmul double %377, %378
  %379 = load double, ptr %a33, align 8, !tbaa !161
  %380 = load double, ptr %a12, align 8, !tbaa !161
  %381 = load double, ptr %a23, align 8, !tbaa !161
  %mul241 = fmul double %380, %381
  %382 = load double, ptr %a31, align 8, !tbaa !161
  %mul242 = fmul double %mul241, %382
  %383 = call double @llvm.fmuladd.f64(double %mul239, double %379, double %mul242)
  %384 = load double, ptr %a13, align 8, !tbaa !161
  %385 = load double, ptr %a21, align 8, !tbaa !161
  %mul243 = fmul double %384, %385
  %386 = load double, ptr %a32, align 8, !tbaa !161
  %387 = call double @llvm.fmuladd.f64(double %mul243, double %386, double %383)
  %388 = load double, ptr %a11, align 8, !tbaa !161
  %389 = load double, ptr %a23, align 8, !tbaa !161
  %mul245 = fmul double %388, %389
  %390 = load double, ptr %a32, align 8, !tbaa !161
  %neg247 = fneg double %mul245
  %391 = call double @llvm.fmuladd.f64(double %neg247, double %390, double %387)
  %392 = load double, ptr %a12, align 8, !tbaa !161
  %393 = load double, ptr %a21, align 8, !tbaa !161
  %mul248 = fmul double %392, %393
  %394 = load double, ptr %a33, align 8, !tbaa !161
  %neg250 = fneg double %mul248
  %395 = call double @llvm.fmuladd.f64(double %neg250, double %394, double %391)
  %396 = load double, ptr %a13, align 8, !tbaa !161
  %397 = load double, ptr %a22, align 8, !tbaa !161
  %mul251 = fmul double %396, %397
  %398 = load double, ptr %a31, align 8, !tbaa !161
  %neg253 = fneg double %mul251
  %399 = call double @llvm.fmuladd.f64(double %neg253, double %398, double %395)
  store double %399, ptr %M44, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %det) #6
  %400 = load double, ptr %a11, align 8, !tbaa !161
  %401 = load double, ptr %M11, align 8, !tbaa !161
  %402 = load double, ptr %a12, align 8, !tbaa !161
  %403 = load double, ptr %M21, align 8, !tbaa !161
  %mul255 = fmul double %402, %403
  %404 = call double @llvm.fmuladd.f64(double %400, double %401, double %mul255)
  %405 = load double, ptr %a13, align 8, !tbaa !161
  %406 = load double, ptr %M31, align 8, !tbaa !161
  %407 = call double @llvm.fmuladd.f64(double %405, double %406, double %404)
  %408 = load double, ptr %a14, align 8, !tbaa !161
  %409 = load double, ptr %M41, align 8, !tbaa !161
  %410 = call double @llvm.fmuladd.f64(double %408, double %409, double %407)
  store double %410, ptr %det, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %det_inv) #6
  %411 = load double, ptr %det, align 8, !tbaa !161
  %div = fdiv double 1.000000e+00, %411
  store double %div, ptr %det_inv, align 8, !tbaa !161
  %412 = load double, ptr %M11, align 8, !tbaa !161
  %413 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul258 = fmul double %412, %413
  %414 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx259 = getelementptr inbounds double, ptr %414, i64 0
  store double %mul258, ptr %arrayidx259, align 8, !tbaa !161
  %415 = load double, ptr %M12, align 8, !tbaa !161
  %416 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul260 = fmul double %415, %416
  %417 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx261 = getelementptr inbounds double, ptr %417, i64 1
  store double %mul260, ptr %arrayidx261, align 8, !tbaa !161
  %418 = load double, ptr %M13, align 8, !tbaa !161
  %419 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul262 = fmul double %418, %419
  %420 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx263 = getelementptr inbounds double, ptr %420, i64 2
  store double %mul262, ptr %arrayidx263, align 8, !tbaa !161
  %421 = load double, ptr %M14, align 8, !tbaa !161
  %422 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul264 = fmul double %421, %422
  %423 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx265 = getelementptr inbounds double, ptr %423, i64 3
  store double %mul264, ptr %arrayidx265, align 8, !tbaa !161
  %424 = load double, ptr %M21, align 8, !tbaa !161
  %425 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul266 = fmul double %424, %425
  %426 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx267 = getelementptr inbounds double, ptr %426, i64 4
  store double %mul266, ptr %arrayidx267, align 8, !tbaa !161
  %427 = load double, ptr %M22, align 8, !tbaa !161
  %428 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul268 = fmul double %427, %428
  %429 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx269 = getelementptr inbounds double, ptr %429, i64 5
  store double %mul268, ptr %arrayidx269, align 8, !tbaa !161
  %430 = load double, ptr %M23, align 8, !tbaa !161
  %431 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul270 = fmul double %430, %431
  %432 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx271 = getelementptr inbounds double, ptr %432, i64 6
  store double %mul270, ptr %arrayidx271, align 8, !tbaa !161
  %433 = load double, ptr %M24, align 8, !tbaa !161
  %434 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul272 = fmul double %433, %434
  %435 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx273 = getelementptr inbounds double, ptr %435, i64 7
  store double %mul272, ptr %arrayidx273, align 8, !tbaa !161
  %436 = load double, ptr %M31, align 8, !tbaa !161
  %437 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul274 = fmul double %436, %437
  %438 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx275 = getelementptr inbounds double, ptr %438, i64 8
  store double %mul274, ptr %arrayidx275, align 8, !tbaa !161
  %439 = load double, ptr %M32, align 8, !tbaa !161
  %440 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul276 = fmul double %439, %440
  %441 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx277 = getelementptr inbounds double, ptr %441, i64 9
  store double %mul276, ptr %arrayidx277, align 8, !tbaa !161
  %442 = load double, ptr %M33, align 8, !tbaa !161
  %443 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul278 = fmul double %442, %443
  %444 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx279 = getelementptr inbounds double, ptr %444, i64 10
  store double %mul278, ptr %arrayidx279, align 8, !tbaa !161
  %445 = load double, ptr %M34, align 8, !tbaa !161
  %446 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul280 = fmul double %445, %446
  %447 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx281 = getelementptr inbounds double, ptr %447, i64 11
  store double %mul280, ptr %arrayidx281, align 8, !tbaa !161
  %448 = load double, ptr %M41, align 8, !tbaa !161
  %449 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul282 = fmul double %448, %449
  %450 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx283 = getelementptr inbounds double, ptr %450, i64 12
  store double %mul282, ptr %arrayidx283, align 8, !tbaa !161
  %451 = load double, ptr %M42, align 8, !tbaa !161
  %452 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul284 = fmul double %451, %452
  %453 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx285 = getelementptr inbounds double, ptr %453, i64 13
  store double %mul284, ptr %arrayidx285, align 8, !tbaa !161
  %454 = load double, ptr %M43, align 8, !tbaa !161
  %455 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul286 = fmul double %454, %455
  %456 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx287 = getelementptr inbounds double, ptr %456, i64 14
  store double %mul286, ptr %arrayidx287, align 8, !tbaa !161
  %457 = load double, ptr %M44, align 8, !tbaa !161
  %458 = load double, ptr %det_inv, align 8, !tbaa !161
  %mul288 = fmul double %457, %458
  %459 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %arrayidx289 = getelementptr inbounds double, ptr %459, i64 15
  store double %mul288, ptr %arrayidx289, align 8, !tbaa !161
  call void @llvm.lifetime.end.p0(i64 8, ptr %det_inv) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %det) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M44) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M43) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M42) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M41) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M34) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M33) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M32) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M31) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M24) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M23) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M22) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M21) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M14) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M13) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M12) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %M11) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a44) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a43) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a42) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a41) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a34) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a33) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a32) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a31) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a24) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a23) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a22) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a21) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a14) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a13) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a12) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %a11) #6
  ret void
}

; Function Attrs: nounwind uwtable
define void @hypre_MGRSmallBlkInverse(ptr noundef %mat, i32 noundef %blk_size) #0 {
entry:
  %mat.addr = alloca ptr, align 8
  %blk_size.addr = alloca i32, align 4
  store ptr %mat, ptr %mat.addr, align 8, !tbaa !4
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  %0 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp = icmp eq i32 %0, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %mat.addr, align 8, !tbaa !4
  call void @hypre_blas_smat_inv_n2(ptr noundef %1)
  br label %if.end7

if.else:                                          ; preds = %entry
  %2 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp1 = icmp eq i32 %2, 3
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  %3 = load ptr, ptr %mat.addr, align 8, !tbaa !4
  call void @hypre_blas_smat_inv_n3(ptr noundef %3)
  br label %if.end6

if.else3:                                         ; preds = %if.else
  %4 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp4 = icmp eq i32 %4, 4
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else3
  %5 = load ptr, ptr %mat.addr, align 8, !tbaa !4
  call void @hypre_blas_smat_inv_n4(ptr noundef %5)
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.else3
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then2
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @hypre_blas_mat_inv(ptr noundef %a, i32 noundef %n) #0 {
entry:
  %a.addr = alloca ptr, align 8
  %n.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %u = alloca i32, align 4
  %kn = alloca i32, align 4
  %in = alloca i32, align 4
  %alinv = alloca double, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !4
  store i32 %n, ptr %n.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %k) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %l) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %u) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %kn) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %in) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %alinv) #6
  %0 = load i32, ptr %n.addr, align 4, !tbaa !92
  %cmp = icmp eq i32 %0, 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %a.addr, align 8, !tbaa !4
  call void @hypre_blas_smat_inv_n4(ptr noundef %1)
  br label %if.end102

if.else:                                          ; preds = %entry
  store i32 0, ptr %k, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc99, %if.else
  %2 = load i32, ptr %k, align 4, !tbaa !92
  %3 = load i32, ptr %n.addr, align 4, !tbaa !92
  %cmp1 = icmp slt i32 %2, %3
  br i1 %cmp1, label %for.body, label %for.end101

for.body:                                         ; preds = %for.cond
  %4 = load i32, ptr %k, align 4, !tbaa !92
  %5 = load i32, ptr %n.addr, align 4, !tbaa !92
  %mul = mul nsw i32 %4, %5
  store i32 %mul, ptr %kn, align 4, !tbaa !92
  %6 = load i32, ptr %kn, align 4, !tbaa !92
  %7 = load i32, ptr %k, align 4, !tbaa !92
  %add = add nsw i32 %6, %7
  store i32 %add, ptr %l, align 4, !tbaa !92
  %8 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %9 = load i32, ptr %l, align 4, !tbaa !92
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds double, ptr %8, i64 %idxprom
  %10 = load double, ptr %arrayidx, align 8, !tbaa !161
  %div = fdiv double 1.000000e+00, %10
  store double %div, ptr %alinv, align 8, !tbaa !161
  %11 = load double, ptr %alinv, align 8, !tbaa !161
  %12 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %13 = load i32, ptr %l, align 4, !tbaa !92
  %idxprom2 = sext i32 %13 to i64
  %arrayidx3 = getelementptr inbounds double, ptr %12, i64 %idxprom2
  store double %11, ptr %arrayidx3, align 8, !tbaa !161
  store i32 0, ptr %j, align 4, !tbaa !92
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc, %for.body
  %14 = load i32, ptr %j, align 4, !tbaa !92
  %15 = load i32, ptr %k, align 4, !tbaa !92
  %cmp5 = icmp slt i32 %14, %15
  br i1 %cmp5, label %for.body6, label %for.end

for.body6:                                        ; preds = %for.cond4
  %16 = load i32, ptr %kn, align 4, !tbaa !92
  %17 = load i32, ptr %j, align 4, !tbaa !92
  %add7 = add nsw i32 %16, %17
  store i32 %add7, ptr %u, align 4, !tbaa !92
  %18 = load double, ptr %alinv, align 8, !tbaa !161
  %19 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %20 = load i32, ptr %u, align 4, !tbaa !92
  %idxprom8 = sext i32 %20 to i64
  %arrayidx9 = getelementptr inbounds double, ptr %19, i64 %idxprom8
  %21 = load double, ptr %arrayidx9, align 8, !tbaa !161
  %mul10 = fmul double %21, %18
  store double %mul10, ptr %arrayidx9, align 8, !tbaa !161
  br label %for.inc

for.inc:                                          ; preds = %for.body6
  %22 = load i32, ptr %j, align 4, !tbaa !92
  %inc = add nsw i32 %22, 1
  store i32 %inc, ptr %j, align 4, !tbaa !92
  br label %for.cond4, !llvm.loop !286

for.end:                                          ; preds = %for.cond4
  %23 = load i32, ptr %k, align 4, !tbaa !92
  %add11 = add nsw i32 %23, 1
  store i32 %add11, ptr %j, align 4, !tbaa !92
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc19, %for.end
  %24 = load i32, ptr %j, align 4, !tbaa !92
  %25 = load i32, ptr %n.addr, align 4, !tbaa !92
  %cmp13 = icmp slt i32 %24, %25
  br i1 %cmp13, label %for.body14, label %for.end21

for.body14:                                       ; preds = %for.cond12
  %26 = load i32, ptr %kn, align 4, !tbaa !92
  %27 = load i32, ptr %j, align 4, !tbaa !92
  %add15 = add nsw i32 %26, %27
  store i32 %add15, ptr %u, align 4, !tbaa !92
  %28 = load double, ptr %alinv, align 8, !tbaa !161
  %29 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %30 = load i32, ptr %u, align 4, !tbaa !92
  %idxprom16 = sext i32 %30 to i64
  %arrayidx17 = getelementptr inbounds double, ptr %29, i64 %idxprom16
  %31 = load double, ptr %arrayidx17, align 8, !tbaa !161
  %mul18 = fmul double %31, %28
  store double %mul18, ptr %arrayidx17, align 8, !tbaa !161
  br label %for.inc19

for.inc19:                                        ; preds = %for.body14
  %32 = load i32, ptr %j, align 4, !tbaa !92
  %inc20 = add nsw i32 %32, 1
  store i32 %inc20, ptr %j, align 4, !tbaa !92
  br label %for.cond12, !llvm.loop !287

for.end21:                                        ; preds = %for.cond12
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc44, %for.end21
  %33 = load i32, ptr %i, align 4, !tbaa !92
  %34 = load i32, ptr %k, align 4, !tbaa !92
  %cmp23 = icmp slt i32 %33, %34
  br i1 %cmp23, label %for.body24, label %for.end46

for.body24:                                       ; preds = %for.cond22
  %35 = load i32, ptr %i, align 4, !tbaa !92
  %36 = load i32, ptr %n.addr, align 4, !tbaa !92
  %mul25 = mul nsw i32 %35, %36
  store i32 %mul25, ptr %in, align 4, !tbaa !92
  store i32 0, ptr %j, align 4, !tbaa !92
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc41, %for.body24
  %37 = load i32, ptr %j, align 4, !tbaa !92
  %38 = load i32, ptr %n.addr, align 4, !tbaa !92
  %cmp27 = icmp slt i32 %37, %38
  br i1 %cmp27, label %for.body28, label %for.end43

for.body28:                                       ; preds = %for.cond26
  %39 = load i32, ptr %j, align 4, !tbaa !92
  %40 = load i32, ptr %k, align 4, !tbaa !92
  %cmp29 = icmp ne i32 %39, %40
  br i1 %cmp29, label %if.then30, label %if.end

if.then30:                                        ; preds = %for.body28
  %41 = load i32, ptr %in, align 4, !tbaa !92
  %42 = load i32, ptr %j, align 4, !tbaa !92
  %add31 = add nsw i32 %41, %42
  store i32 %add31, ptr %u, align 4, !tbaa !92
  %43 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %44 = load i32, ptr %in, align 4, !tbaa !92
  %45 = load i32, ptr %k, align 4, !tbaa !92
  %add32 = add nsw i32 %44, %45
  %idxprom33 = sext i32 %add32 to i64
  %arrayidx34 = getelementptr inbounds double, ptr %43, i64 %idxprom33
  %46 = load double, ptr %arrayidx34, align 8, !tbaa !161
  %47 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %48 = load i32, ptr %kn, align 4, !tbaa !92
  %49 = load i32, ptr %j, align 4, !tbaa !92
  %add35 = add nsw i32 %48, %49
  %idxprom36 = sext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds double, ptr %47, i64 %idxprom36
  %50 = load double, ptr %arrayidx37, align 8, !tbaa !161
  %51 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %52 = load i32, ptr %u, align 4, !tbaa !92
  %idxprom39 = sext i32 %52 to i64
  %arrayidx40 = getelementptr inbounds double, ptr %51, i64 %idxprom39
  %53 = load double, ptr %arrayidx40, align 8, !tbaa !161
  %neg = fneg double %46
  %54 = call double @llvm.fmuladd.f64(double %neg, double %50, double %53)
  store double %54, ptr %arrayidx40, align 8, !tbaa !161
  br label %if.end

if.end:                                           ; preds = %if.then30, %for.body28
  br label %for.inc41

for.inc41:                                        ; preds = %if.end
  %55 = load i32, ptr %j, align 4, !tbaa !92
  %inc42 = add nsw i32 %55, 1
  store i32 %inc42, ptr %j, align 4, !tbaa !92
  br label %for.cond26, !llvm.loop !288

for.end43:                                        ; preds = %for.cond26
  br label %for.inc44

for.inc44:                                        ; preds = %for.end43
  %56 = load i32, ptr %i, align 4, !tbaa !92
  %inc45 = add nsw i32 %56, 1
  store i32 %inc45, ptr %i, align 4, !tbaa !92
  br label %for.cond22, !llvm.loop !289

for.end46:                                        ; preds = %for.cond22
  %57 = load i32, ptr %k, align 4, !tbaa !92
  %add47 = add nsw i32 %57, 1
  store i32 %add47, ptr %i, align 4, !tbaa !92
  br label %for.cond48

for.cond48:                                       ; preds = %for.inc72, %for.end46
  %58 = load i32, ptr %i, align 4, !tbaa !92
  %59 = load i32, ptr %n.addr, align 4, !tbaa !92
  %cmp49 = icmp slt i32 %58, %59
  br i1 %cmp49, label %for.body50, label %for.end74

for.body50:                                       ; preds = %for.cond48
  %60 = load i32, ptr %i, align 4, !tbaa !92
  %61 = load i32, ptr %n.addr, align 4, !tbaa !92
  %mul51 = mul nsw i32 %60, %61
  store i32 %mul51, ptr %in, align 4, !tbaa !92
  store i32 0, ptr %j, align 4, !tbaa !92
  br label %for.cond52

for.cond52:                                       ; preds = %for.inc69, %for.body50
  %62 = load i32, ptr %j, align 4, !tbaa !92
  %63 = load i32, ptr %n.addr, align 4, !tbaa !92
  %cmp53 = icmp slt i32 %62, %63
  br i1 %cmp53, label %for.body54, label %for.end71

for.body54:                                       ; preds = %for.cond52
  %64 = load i32, ptr %j, align 4, !tbaa !92
  %65 = load i32, ptr %k, align 4, !tbaa !92
  %cmp55 = icmp ne i32 %64, %65
  br i1 %cmp55, label %if.then56, label %if.end68

if.then56:                                        ; preds = %for.body54
  %66 = load i32, ptr %in, align 4, !tbaa !92
  %67 = load i32, ptr %j, align 4, !tbaa !92
  %add57 = add nsw i32 %66, %67
  store i32 %add57, ptr %u, align 4, !tbaa !92
  %68 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %69 = load i32, ptr %in, align 4, !tbaa !92
  %70 = load i32, ptr %k, align 4, !tbaa !92
  %add58 = add nsw i32 %69, %70
  %idxprom59 = sext i32 %add58 to i64
  %arrayidx60 = getelementptr inbounds double, ptr %68, i64 %idxprom59
  %71 = load double, ptr %arrayidx60, align 8, !tbaa !161
  %72 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %73 = load i32, ptr %kn, align 4, !tbaa !92
  %74 = load i32, ptr %j, align 4, !tbaa !92
  %add61 = add nsw i32 %73, %74
  %idxprom62 = sext i32 %add61 to i64
  %arrayidx63 = getelementptr inbounds double, ptr %72, i64 %idxprom62
  %75 = load double, ptr %arrayidx63, align 8, !tbaa !161
  %76 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %77 = load i32, ptr %u, align 4, !tbaa !92
  %idxprom65 = sext i32 %77 to i64
  %arrayidx66 = getelementptr inbounds double, ptr %76, i64 %idxprom65
  %78 = load double, ptr %arrayidx66, align 8, !tbaa !161
  %neg67 = fneg double %71
  %79 = call double @llvm.fmuladd.f64(double %neg67, double %75, double %78)
  store double %79, ptr %arrayidx66, align 8, !tbaa !161
  br label %if.end68

if.end68:                                         ; preds = %if.then56, %for.body54
  br label %for.inc69

for.inc69:                                        ; preds = %if.end68
  %80 = load i32, ptr %j, align 4, !tbaa !92
  %inc70 = add nsw i32 %80, 1
  store i32 %inc70, ptr %j, align 4, !tbaa !92
  br label %for.cond52, !llvm.loop !290

for.end71:                                        ; preds = %for.cond52
  br label %for.inc72

for.inc72:                                        ; preds = %for.end71
  %81 = load i32, ptr %i, align 4, !tbaa !92
  %inc73 = add nsw i32 %81, 1
  store i32 %inc73, ptr %i, align 4, !tbaa !92
  br label %for.cond48, !llvm.loop !291

for.end74:                                        ; preds = %for.cond48
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond75

for.cond75:                                       ; preds = %for.inc83, %for.end74
  %82 = load i32, ptr %i, align 4, !tbaa !92
  %83 = load i32, ptr %k, align 4, !tbaa !92
  %cmp76 = icmp slt i32 %82, %83
  br i1 %cmp76, label %for.body77, label %for.end85

for.body77:                                       ; preds = %for.cond75
  %84 = load i32, ptr %i, align 4, !tbaa !92
  %85 = load i32, ptr %n.addr, align 4, !tbaa !92
  %mul78 = mul nsw i32 %84, %85
  %86 = load i32, ptr %k, align 4, !tbaa !92
  %add79 = add nsw i32 %mul78, %86
  store i32 %add79, ptr %u, align 4, !tbaa !92
  %87 = load double, ptr %alinv, align 8, !tbaa !161
  %fneg = fneg double %87
  %88 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %89 = load i32, ptr %u, align 4, !tbaa !92
  %idxprom80 = sext i32 %89 to i64
  %arrayidx81 = getelementptr inbounds double, ptr %88, i64 %idxprom80
  %90 = load double, ptr %arrayidx81, align 8, !tbaa !161
  %mul82 = fmul double %90, %fneg
  store double %mul82, ptr %arrayidx81, align 8, !tbaa !161
  br label %for.inc83

for.inc83:                                        ; preds = %for.body77
  %91 = load i32, ptr %i, align 4, !tbaa !92
  %inc84 = add nsw i32 %91, 1
  store i32 %inc84, ptr %i, align 4, !tbaa !92
  br label %for.cond75, !llvm.loop !292

for.end85:                                        ; preds = %for.cond75
  %92 = load i32, ptr %k, align 4, !tbaa !92
  %add86 = add nsw i32 %92, 1
  store i32 %add86, ptr %i, align 4, !tbaa !92
  br label %for.cond87

for.cond87:                                       ; preds = %for.inc96, %for.end85
  %93 = load i32, ptr %i, align 4, !tbaa !92
  %94 = load i32, ptr %n.addr, align 4, !tbaa !92
  %cmp88 = icmp slt i32 %93, %94
  br i1 %cmp88, label %for.body89, label %for.end98

for.body89:                                       ; preds = %for.cond87
  %95 = load i32, ptr %i, align 4, !tbaa !92
  %96 = load i32, ptr %n.addr, align 4, !tbaa !92
  %mul90 = mul nsw i32 %95, %96
  %97 = load i32, ptr %k, align 4, !tbaa !92
  %add91 = add nsw i32 %mul90, %97
  store i32 %add91, ptr %u, align 4, !tbaa !92
  %98 = load double, ptr %alinv, align 8, !tbaa !161
  %fneg92 = fneg double %98
  %99 = load ptr, ptr %a.addr, align 8, !tbaa !4
  %100 = load i32, ptr %u, align 4, !tbaa !92
  %idxprom93 = sext i32 %100 to i64
  %arrayidx94 = getelementptr inbounds double, ptr %99, i64 %idxprom93
  %101 = load double, ptr %arrayidx94, align 8, !tbaa !161
  %mul95 = fmul double %101, %fneg92
  store double %mul95, ptr %arrayidx94, align 8, !tbaa !161
  br label %for.inc96

for.inc96:                                        ; preds = %for.body89
  %102 = load i32, ptr %i, align 4, !tbaa !92
  %inc97 = add nsw i32 %102, 1
  store i32 %inc97, ptr %i, align 4, !tbaa !92
  br label %for.cond87, !llvm.loop !293

for.end98:                                        ; preds = %for.cond87
  br label %for.inc99

for.inc99:                                        ; preds = %for.end98
  %103 = load i32, ptr %k, align 4, !tbaa !92
  %inc100 = add nsw i32 %103, 1
  store i32 %inc100, ptr %k, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !294

for.end101:                                       ; preds = %for.cond
  br label %if.end102

if.end102:                                        ; preds = %for.end101, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %alinv) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %in) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %kn) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %u) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %l) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %k) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @hypre_block_jacobi_solve(ptr noundef %A, ptr noundef %f, ptr noundef %u, i32 noundef %blk_size, i32 noundef %method, ptr noundef %diaginv, ptr noundef %Vtemp) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %f.addr = alloca ptr, align 8
  %u.addr = alloca ptr, align 8
  %blk_size.addr = alloca i32, align 4
  %method.addr = alloca i32, align 4
  %diaginv.addr = alloca ptr, align 8
  %Vtemp.addr = alloca ptr, align 8
  %comm = alloca ptr, align 8
  %A_diag = alloca ptr, align 8
  %A_diag_data = alloca ptr, align 8
  %A_diag_i = alloca ptr, align 8
  %A_diag_j = alloca ptr, align 8
  %A_offd = alloca ptr, align 8
  %A_offd_i = alloca ptr, align 8
  %A_offd_data = alloca ptr, align 8
  %A_offd_j = alloca ptr, align 8
  %comm_pkg = alloca ptr, align 8
  %comm_handle = alloca ptr, align 8
  %n = alloca i32, align 4
  %num_cols_offd = alloca i32, align 4
  %u_local = alloca ptr, align 8
  %u_data = alloca ptr, align 8
  %f_local = alloca ptr, align 8
  %f_data = alloca ptr, align 8
  %Vtemp_local = alloca ptr, align 8
  %Vtemp_data = alloca ptr, align 8
  %Vext_data = alloca ptr, align 8
  %v_buf_data = alloca ptr, align 8
  %i11 = alloca i32, align 4
  %j12 = alloca i32, align 4
  %k = alloca i32, align 4
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %bidx = alloca i32, align 4
  %bidx1 = alloca i32, align 4
  %num_sends = alloca i32, align 4
  %index = alloca i32, align 4
  %start = alloca i32, align 4
  %num_procs = alloca i32, align 4
  %my_id = alloca i32, align 4
  %res = alloca ptr, align 8
  %nb2 = alloca i32, align 4
  %n_block = alloca i32, align 4
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %f, ptr %f.addr, align 8, !tbaa !4
  store ptr %u, ptr %u.addr, align 8, !tbaa !4
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  store i32 %method, ptr %method.addr, align 4, !tbaa !92
  store ptr %diaginv, ptr %diaginv.addr, align 8, !tbaa !4
  store ptr %Vtemp, ptr %Vtemp.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %comm1, align 8, !tbaa !160
  store ptr %1, ptr %comm, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag) #6
  %2 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %2, i32 0, i32 8
  %3 = load ptr, ptr %diag, align 8, !tbaa !149
  store ptr %3, ptr %A_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_data) #6
  %4 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %4, i32 0, i32 10
  %5 = load ptr, ptr %data, align 8, !tbaa !165
  store ptr %5, ptr %A_diag_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_i) #6
  %6 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %i = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %6, i32 0, i32 0
  %7 = load ptr, ptr %i, align 8, !tbaa !163
  store ptr %7, ptr %A_diag_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_j) #6
  %8 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %j = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %8, i32 0, i32 1
  %9 = load ptr, ptr %j, align 8, !tbaa !164
  store ptr %9, ptr %A_diag_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd) #6
  %10 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %10, i32 0, i32 9
  %11 = load ptr, ptr %offd, align 8, !tbaa !162
  store ptr %11, ptr %A_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_i) #6
  %12 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %i2 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %12, i32 0, i32 0
  %13 = load ptr, ptr %i2, align 8, !tbaa !163
  store ptr %13, ptr %A_offd_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_data) #6
  %14 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %data3 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %14, i32 0, i32 10
  %15 = load ptr, ptr %data3, align 8, !tbaa !165
  store ptr %15, ptr %A_offd_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_j) #6
  %16 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %j4 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %16, i32 0, i32 1
  %17 = load ptr, ptr %j4, align 8, !tbaa !164
  store ptr %17, ptr %A_offd_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm_pkg) #6
  %18 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm_pkg5 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %18, i32 0, i32 16
  %19 = load ptr, ptr %comm_pkg5, align 8, !tbaa !187
  store ptr %19, ptr %comm_pkg, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm_handle) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %n) #6
  %20 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %20, i32 0, i32 3
  %21 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %21, ptr %n, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_cols_offd) #6
  %22 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %num_cols = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %22, i32 0, i32 4
  %23 = load i32, ptr %num_cols, align 4, !tbaa !167
  store i32 %23, ptr %num_cols_offd, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %u_local) #6
  %24 = load ptr, ptr %u.addr, align 8, !tbaa !4
  %local_vector = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %24, i32 0, i32 6
  %25 = load ptr, ptr %local_vector, align 8, !tbaa !295
  store ptr %25, ptr %u_local, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %u_data) #6
  %26 = load ptr, ptr %u_local, align 8, !tbaa !4
  %data6 = getelementptr inbounds %struct.hypre_Vector, ptr %26, i32 0, i32 0
  %27 = load ptr, ptr %data6, align 8, !tbaa !185
  store ptr %27, ptr %u_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %f_local) #6
  %28 = load ptr, ptr %f.addr, align 8, !tbaa !4
  %local_vector7 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %28, i32 0, i32 6
  %29 = load ptr, ptr %local_vector7, align 8, !tbaa !295
  store ptr %29, ptr %f_local, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %f_data) #6
  %30 = load ptr, ptr %f_local, align 8, !tbaa !4
  %data8 = getelementptr inbounds %struct.hypre_Vector, ptr %30, i32 0, i32 0
  %31 = load ptr, ptr %data8, align 8, !tbaa !185
  store ptr %31, ptr %f_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %Vtemp_local) #6
  %32 = load ptr, ptr %Vtemp.addr, align 8, !tbaa !4
  %local_vector9 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %32, i32 0, i32 6
  %33 = load ptr, ptr %local_vector9, align 8, !tbaa !295
  store ptr %33, ptr %Vtemp_local, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %Vtemp_data) #6
  %34 = load ptr, ptr %Vtemp_local, align 8, !tbaa !4
  %data10 = getelementptr inbounds %struct.hypre_Vector, ptr %34, i32 0, i32 0
  %35 = load ptr, ptr %data10, align 8, !tbaa !185
  store ptr %35, ptr %Vtemp_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %Vext_data) #6
  store ptr null, ptr %Vext_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %v_buf_data) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i11) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j12) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %k) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ii) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %bidx) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %bidx1) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_sends) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %index) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %start) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %nb2) #6
  %36 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %37 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul = mul nsw i32 %36, %37
  store i32 %mul, ptr %nb2, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %n_block) #6
  %38 = load i32, ptr %n, align 4, !tbaa !92
  %39 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %div = sdiv i32 %38, %39
  store i32 %div, ptr %n_block, align 4, !tbaa !92
  %40 = load ptr, ptr %comm, align 8, !tbaa !4
  %call = call i32 @hypre_MPI_Comm_size(ptr noundef %40, ptr noundef %num_procs)
  %41 = load ptr, ptr %comm, align 8, !tbaa !4
  %call13 = call i32 @hypre_MPI_Comm_rank(ptr noundef %41, ptr noundef %my_id)
  %42 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %conv = sext i32 %42 to i64
  %call14 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 8, i32 noundef 0)
  store ptr %call14, ptr %res, align 8, !tbaa !4
  %43 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %tobool = icmp ne ptr %43, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %44 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call15 = call i32 @hypre_MatvecCommPkgCreate(ptr noundef %44)
  %45 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm_pkg16 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %45, i32 0, i32 16
  %46 = load ptr, ptr %comm_pkg16, align 8, !tbaa !187
  store ptr %46, ptr %comm_pkg, align 8, !tbaa !4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %47 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp = icmp sgt i32 %47, 1
  br i1 %cmp, label %if.then18, label %if.end52

if.then18:                                        ; preds = %if.end
  %48 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %num_sends19 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %48, i32 0, i32 2
  %49 = load i32, ptr %num_sends19, align 4, !tbaa !188
  store i32 %49, ptr %num_sends, align 4, !tbaa !92
  %50 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %50, i32 0, i32 4
  %51 = load ptr, ptr %send_map_starts, align 8, !tbaa !190
  %52 = load i32, ptr %num_sends, align 4, !tbaa !92
  %idxprom = sext i32 %52 to i64
  %arrayidx = getelementptr inbounds i32, ptr %51, i64 %idxprom
  %53 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %conv20 = sext i32 %53 to i64
  %call21 = call ptr @hypre_CAlloc(i64 noundef %conv20, i64 noundef 8, i32 noundef 0)
  store ptr %call21, ptr %v_buf_data, align 8, !tbaa !4
  %54 = load i32, ptr %num_cols_offd, align 4, !tbaa !92
  %conv22 = sext i32 %54 to i64
  %call23 = call ptr @hypre_CAlloc(i64 noundef %conv22, i64 noundef 8, i32 noundef 0)
  store ptr %call23, ptr %Vext_data, align 8, !tbaa !4
  %55 = load i32, ptr %num_cols_offd, align 4, !tbaa !92
  %tobool24 = icmp ne i32 %55, 0
  br i1 %tobool24, label %if.then25, label %if.end28

if.then25:                                        ; preds = %if.then18
  %56 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %j26 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %56, i32 0, i32 1
  %57 = load ptr, ptr %j26, align 8, !tbaa !164
  store ptr %57, ptr %A_offd_j, align 8, !tbaa !4
  %58 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %data27 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %58, i32 0, i32 10
  %59 = load ptr, ptr %data27, align 8, !tbaa !165
  store ptr %59, ptr %A_offd_data, align 8, !tbaa !4
  br label %if.end28

if.end28:                                         ; preds = %if.then25, %if.then18
  store i32 0, ptr %index, align 4, !tbaa !92
  store i32 0, ptr %i11, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc48, %if.end28
  %60 = load i32, ptr %i11, align 4, !tbaa !92
  %61 = load i32, ptr %num_sends, align 4, !tbaa !92
  %cmp29 = icmp slt i32 %60, %61
  br i1 %cmp29, label %for.body, label %for.end50

for.body:                                         ; preds = %for.cond
  %62 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts31 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %62, i32 0, i32 4
  %63 = load ptr, ptr %send_map_starts31, align 8, !tbaa !190
  %64 = load i32, ptr %i11, align 4, !tbaa !92
  %idxprom32 = sext i32 %64 to i64
  %arrayidx33 = getelementptr inbounds i32, ptr %63, i64 %idxprom32
  %65 = load i32, ptr %arrayidx33, align 4, !tbaa !92
  store i32 %65, ptr %start, align 4, !tbaa !92
  %66 = load i32, ptr %start, align 4, !tbaa !92
  store i32 %66, ptr %j12, align 4, !tbaa !92
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc, %for.body
  %67 = load i32, ptr %j12, align 4, !tbaa !92
  %68 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts35 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %68, i32 0, i32 4
  %69 = load ptr, ptr %send_map_starts35, align 8, !tbaa !190
  %70 = load i32, ptr %i11, align 4, !tbaa !92
  %add = add nsw i32 %70, 1
  %idxprom36 = sext i32 %add to i64
  %arrayidx37 = getelementptr inbounds i32, ptr %69, i64 %idxprom36
  %71 = load i32, ptr %arrayidx37, align 4, !tbaa !92
  %cmp38 = icmp slt i32 %67, %71
  br i1 %cmp38, label %for.body40, label %for.end

for.body40:                                       ; preds = %for.cond34
  %72 = load ptr, ptr %u_data, align 8, !tbaa !4
  %73 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_elmts = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %73, i32 0, i32 5
  %74 = load ptr, ptr %send_map_elmts, align 8, !tbaa !191
  %75 = load i32, ptr %j12, align 4, !tbaa !92
  %idxprom41 = sext i32 %75 to i64
  %arrayidx42 = getelementptr inbounds i32, ptr %74, i64 %idxprom41
  %76 = load i32, ptr %arrayidx42, align 4, !tbaa !92
  %idxprom43 = sext i32 %76 to i64
  %arrayidx44 = getelementptr inbounds double, ptr %72, i64 %idxprom43
  %77 = load double, ptr %arrayidx44, align 8, !tbaa !161
  %78 = load ptr, ptr %v_buf_data, align 8, !tbaa !4
  %79 = load i32, ptr %index, align 4, !tbaa !92
  %inc = add nsw i32 %79, 1
  store i32 %inc, ptr %index, align 4, !tbaa !92
  %idxprom45 = sext i32 %79 to i64
  %arrayidx46 = getelementptr inbounds double, ptr %78, i64 %idxprom45
  store double %77, ptr %arrayidx46, align 8, !tbaa !161
  br label %for.inc

for.inc:                                          ; preds = %for.body40
  %80 = load i32, ptr %j12, align 4, !tbaa !92
  %inc47 = add nsw i32 %80, 1
  store i32 %inc47, ptr %j12, align 4, !tbaa !92
  br label %for.cond34, !llvm.loop !297

for.end:                                          ; preds = %for.cond34
  br label %for.inc48

for.inc48:                                        ; preds = %for.end
  %81 = load i32, ptr %i11, align 4, !tbaa !92
  %inc49 = add nsw i32 %81, 1
  store i32 %inc49, ptr %i11, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !298

for.end50:                                        ; preds = %for.cond
  %82 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %83 = load ptr, ptr %v_buf_data, align 8, !tbaa !4
  %84 = load ptr, ptr %Vext_data, align 8, !tbaa !4
  %call51 = call ptr @hypre_ParCSRCommHandleCreate(i32 noundef 1, ptr noundef %82, ptr noundef %83, ptr noundef %84)
  store ptr %call51, ptr %comm_handle, align 8, !tbaa !4
  br label %if.end52

if.end52:                                         ; preds = %for.end50, %if.end
  store i32 0, ptr %i11, align 4, !tbaa !92
  br label %for.cond53

for.cond53:                                       ; preds = %for.inc61, %if.end52
  %85 = load i32, ptr %i11, align 4, !tbaa !92
  %86 = load i32, ptr %n, align 4, !tbaa !92
  %cmp54 = icmp slt i32 %85, %86
  br i1 %cmp54, label %for.body56, label %for.end63

for.body56:                                       ; preds = %for.cond53
  %87 = load ptr, ptr %u_data, align 8, !tbaa !4
  %88 = load i32, ptr %i11, align 4, !tbaa !92
  %idxprom57 = sext i32 %88 to i64
  %arrayidx58 = getelementptr inbounds double, ptr %87, i64 %idxprom57
  %89 = load double, ptr %arrayidx58, align 8, !tbaa !161
  %90 = load ptr, ptr %Vtemp_data, align 8, !tbaa !4
  %91 = load i32, ptr %i11, align 4, !tbaa !92
  %idxprom59 = sext i32 %91 to i64
  %arrayidx60 = getelementptr inbounds double, ptr %90, i64 %idxprom59
  store double %89, ptr %arrayidx60, align 8, !tbaa !161
  br label %for.inc61

for.inc61:                                        ; preds = %for.body56
  %92 = load i32, ptr %i11, align 4, !tbaa !92
  %inc62 = add nsw i32 %92, 1
  store i32 %inc62, ptr %i11, align 4, !tbaa !92
  br label %for.cond53, !llvm.loop !299

for.end63:                                        ; preds = %for.cond53
  %93 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp64 = icmp sgt i32 %93, 1
  br i1 %cmp64, label %if.then66, label %if.end68

if.then66:                                        ; preds = %for.end63
  %94 = load ptr, ptr %comm_handle, align 8, !tbaa !4
  %call67 = call i32 @hypre_ParCSRCommHandleDestroy(ptr noundef %94)
  store ptr null, ptr %comm_handle, align 8, !tbaa !4
  br label %if.end68

if.end68:                                         ; preds = %if.then66, %for.end63
  store i32 0, ptr %i11, align 4, !tbaa !92
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc181, %if.end68
  %95 = load i32, ptr %i11, align 4, !tbaa !92
  %96 = load i32, ptr %n_block, align 4, !tbaa !92
  %cmp70 = icmp slt i32 %95, %96
  br i1 %cmp70, label %for.body72, label %for.end183

for.body72:                                       ; preds = %for.cond69
  store i32 0, ptr %j12, align 4, !tbaa !92
  br label %for.cond73

for.cond73:                                       ; preds = %for.inc151, %for.body72
  %97 = load i32, ptr %j12, align 4, !tbaa !92
  %98 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp74 = icmp slt i32 %97, %98
  br i1 %cmp74, label %for.body76, label %for.end153

for.body76:                                       ; preds = %for.cond73
  %99 = load i32, ptr %i11, align 4, !tbaa !92
  %100 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul77 = mul nsw i32 %99, %100
  %101 = load i32, ptr %j12, align 4, !tbaa !92
  %add78 = add nsw i32 %mul77, %101
  store i32 %add78, ptr %bidx, align 4, !tbaa !92
  %102 = load ptr, ptr %f_data, align 8, !tbaa !4
  %103 = load i32, ptr %bidx, align 4, !tbaa !92
  %idxprom79 = sext i32 %103 to i64
  %arrayidx80 = getelementptr inbounds double, ptr %102, i64 %idxprom79
  %104 = load double, ptr %arrayidx80, align 8, !tbaa !161
  %105 = load ptr, ptr %res, align 8, !tbaa !4
  %106 = load i32, ptr %j12, align 4, !tbaa !92
  %idxprom81 = sext i32 %106 to i64
  %arrayidx82 = getelementptr inbounds double, ptr %105, i64 %idxprom81
  store double %104, ptr %arrayidx82, align 8, !tbaa !161
  %107 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %108 = load i32, ptr %bidx, align 4, !tbaa !92
  %idxprom83 = sext i32 %108 to i64
  %arrayidx84 = getelementptr inbounds i32, ptr %107, i64 %idxprom83
  %109 = load i32, ptr %arrayidx84, align 4, !tbaa !92
  store i32 %109, ptr %jj, align 4, !tbaa !92
  br label %for.cond85

for.cond85:                                       ; preds = %for.inc126, %for.body76
  %110 = load i32, ptr %jj, align 4, !tbaa !92
  %111 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %112 = load i32, ptr %bidx, align 4, !tbaa !92
  %add86 = add nsw i32 %112, 1
  %idxprom87 = sext i32 %add86 to i64
  %arrayidx88 = getelementptr inbounds i32, ptr %111, i64 %idxprom87
  %113 = load i32, ptr %arrayidx88, align 4, !tbaa !92
  %cmp89 = icmp slt i32 %110, %113
  br i1 %cmp89, label %for.body91, label %for.end128

for.body91:                                       ; preds = %for.cond85
  %114 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %115 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom92 = sext i32 %115 to i64
  %arrayidx93 = getelementptr inbounds i32, ptr %114, i64 %idxprom92
  %116 = load i32, ptr %arrayidx93, align 4, !tbaa !92
  store i32 %116, ptr %ii, align 4, !tbaa !92
  %117 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp94 = icmp eq i32 %117, 0
  br i1 %cmp94, label %if.then96, label %if.else

if.then96:                                        ; preds = %for.body91
  %118 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %119 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom97 = sext i32 %119 to i64
  %arrayidx98 = getelementptr inbounds double, ptr %118, i64 %idxprom97
  %120 = load double, ptr %arrayidx98, align 8, !tbaa !161
  %121 = load ptr, ptr %Vtemp_data, align 8, !tbaa !4
  %122 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom99 = sext i32 %122 to i64
  %arrayidx100 = getelementptr inbounds double, ptr %121, i64 %idxprom99
  %123 = load double, ptr %arrayidx100, align 8, !tbaa !161
  %124 = load ptr, ptr %res, align 8, !tbaa !4
  %125 = load i32, ptr %j12, align 4, !tbaa !92
  %idxprom102 = sext i32 %125 to i64
  %arrayidx103 = getelementptr inbounds double, ptr %124, i64 %idxprom102
  %126 = load double, ptr %arrayidx103, align 8, !tbaa !161
  %neg = fneg double %120
  %127 = call double @llvm.fmuladd.f64(double %neg, double %123, double %126)
  store double %127, ptr %arrayidx103, align 8, !tbaa !161
  br label %if.end125

if.else:                                          ; preds = %for.body91
  %128 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp104 = icmp eq i32 %128, 1
  br i1 %cmp104, label %if.then106, label %if.else115

if.then106:                                       ; preds = %if.else
  %129 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %130 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom107 = sext i32 %130 to i64
  %arrayidx108 = getelementptr inbounds double, ptr %129, i64 %idxprom107
  %131 = load double, ptr %arrayidx108, align 8, !tbaa !161
  %132 = load ptr, ptr %u_data, align 8, !tbaa !4
  %133 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom109 = sext i32 %133 to i64
  %arrayidx110 = getelementptr inbounds double, ptr %132, i64 %idxprom109
  %134 = load double, ptr %arrayidx110, align 8, !tbaa !161
  %135 = load ptr, ptr %res, align 8, !tbaa !4
  %136 = load i32, ptr %j12, align 4, !tbaa !92
  %idxprom112 = sext i32 %136 to i64
  %arrayidx113 = getelementptr inbounds double, ptr %135, i64 %idxprom112
  %137 = load double, ptr %arrayidx113, align 8, !tbaa !161
  %neg114 = fneg double %131
  %138 = call double @llvm.fmuladd.f64(double %neg114, double %134, double %137)
  store double %138, ptr %arrayidx113, align 8, !tbaa !161
  br label %if.end124

if.else115:                                       ; preds = %if.else
  %139 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %140 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom116 = sext i32 %140 to i64
  %arrayidx117 = getelementptr inbounds double, ptr %139, i64 %idxprom116
  %141 = load double, ptr %arrayidx117, align 8, !tbaa !161
  %142 = load ptr, ptr %Vtemp_data, align 8, !tbaa !4
  %143 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom118 = sext i32 %143 to i64
  %arrayidx119 = getelementptr inbounds double, ptr %142, i64 %idxprom118
  %144 = load double, ptr %arrayidx119, align 8, !tbaa !161
  %145 = load ptr, ptr %res, align 8, !tbaa !4
  %146 = load i32, ptr %j12, align 4, !tbaa !92
  %idxprom121 = sext i32 %146 to i64
  %arrayidx122 = getelementptr inbounds double, ptr %145, i64 %idxprom121
  %147 = load double, ptr %arrayidx122, align 8, !tbaa !161
  %neg123 = fneg double %141
  %148 = call double @llvm.fmuladd.f64(double %neg123, double %144, double %147)
  store double %148, ptr %arrayidx122, align 8, !tbaa !161
  br label %if.end124

if.end124:                                        ; preds = %if.else115, %if.then106
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then96
  br label %for.inc126

for.inc126:                                       ; preds = %if.end125
  %149 = load i32, ptr %jj, align 4, !tbaa !92
  %inc127 = add nsw i32 %149, 1
  store i32 %inc127, ptr %jj, align 4, !tbaa !92
  br label %for.cond85, !llvm.loop !300

for.end128:                                       ; preds = %for.cond85
  %150 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %151 = load i32, ptr %bidx, align 4, !tbaa !92
  %idxprom129 = sext i32 %151 to i64
  %arrayidx130 = getelementptr inbounds i32, ptr %150, i64 %idxprom129
  %152 = load i32, ptr %arrayidx130, align 4, !tbaa !92
  store i32 %152, ptr %jj, align 4, !tbaa !92
  br label %for.cond131

for.cond131:                                      ; preds = %for.inc148, %for.end128
  %153 = load i32, ptr %jj, align 4, !tbaa !92
  %154 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %155 = load i32, ptr %bidx, align 4, !tbaa !92
  %add132 = add nsw i32 %155, 1
  %idxprom133 = sext i32 %add132 to i64
  %arrayidx134 = getelementptr inbounds i32, ptr %154, i64 %idxprom133
  %156 = load i32, ptr %arrayidx134, align 4, !tbaa !92
  %cmp135 = icmp slt i32 %153, %156
  br i1 %cmp135, label %for.body137, label %for.end150

for.body137:                                      ; preds = %for.cond131
  %157 = load ptr, ptr %A_offd_j, align 8, !tbaa !4
  %158 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom138 = sext i32 %158 to i64
  %arrayidx139 = getelementptr inbounds i32, ptr %157, i64 %idxprom138
  %159 = load i32, ptr %arrayidx139, align 4, !tbaa !92
  store i32 %159, ptr %ii, align 4, !tbaa !92
  %160 = load ptr, ptr %A_offd_data, align 8, !tbaa !4
  %161 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom140 = sext i32 %161 to i64
  %arrayidx141 = getelementptr inbounds double, ptr %160, i64 %idxprom140
  %162 = load double, ptr %arrayidx141, align 8, !tbaa !161
  %163 = load ptr, ptr %Vext_data, align 8, !tbaa !4
  %164 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom142 = sext i32 %164 to i64
  %arrayidx143 = getelementptr inbounds double, ptr %163, i64 %idxprom142
  %165 = load double, ptr %arrayidx143, align 8, !tbaa !161
  %166 = load ptr, ptr %res, align 8, !tbaa !4
  %167 = load i32, ptr %j12, align 4, !tbaa !92
  %idxprom145 = sext i32 %167 to i64
  %arrayidx146 = getelementptr inbounds double, ptr %166, i64 %idxprom145
  %168 = load double, ptr %arrayidx146, align 8, !tbaa !161
  %neg147 = fneg double %162
  %169 = call double @llvm.fmuladd.f64(double %neg147, double %165, double %168)
  store double %169, ptr %arrayidx146, align 8, !tbaa !161
  br label %for.inc148

for.inc148:                                       ; preds = %for.body137
  %170 = load i32, ptr %jj, align 4, !tbaa !92
  %inc149 = add nsw i32 %170, 1
  store i32 %inc149, ptr %jj, align 4, !tbaa !92
  br label %for.cond131, !llvm.loop !301

for.end150:                                       ; preds = %for.cond131
  br label %for.inc151

for.inc151:                                       ; preds = %for.end150
  %171 = load i32, ptr %j12, align 4, !tbaa !92
  %inc152 = add nsw i32 %171, 1
  store i32 %inc152, ptr %j12, align 4, !tbaa !92
  br label %for.cond73, !llvm.loop !302

for.end153:                                       ; preds = %for.cond73
  store i32 0, ptr %j12, align 4, !tbaa !92
  br label %for.cond154

for.cond154:                                      ; preds = %for.inc178, %for.end153
  %172 = load i32, ptr %j12, align 4, !tbaa !92
  %173 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp155 = icmp slt i32 %172, %173
  br i1 %cmp155, label %for.body157, label %for.end180

for.body157:                                      ; preds = %for.cond154
  %174 = load i32, ptr %i11, align 4, !tbaa !92
  %175 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul158 = mul nsw i32 %174, %175
  %176 = load i32, ptr %j12, align 4, !tbaa !92
  %add159 = add nsw i32 %mul158, %176
  store i32 %add159, ptr %bidx1, align 4, !tbaa !92
  store i32 0, ptr %k, align 4, !tbaa !92
  br label %for.cond160

for.cond160:                                      ; preds = %for.inc175, %for.body157
  %177 = load i32, ptr %k, align 4, !tbaa !92
  %178 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp161 = icmp slt i32 %177, %178
  br i1 %cmp161, label %for.body163, label %for.end177

for.body163:                                      ; preds = %for.cond160
  %179 = load i32, ptr %i11, align 4, !tbaa !92
  %180 = load i32, ptr %nb2, align 4, !tbaa !92
  %mul164 = mul nsw i32 %179, %180
  %181 = load i32, ptr %j12, align 4, !tbaa !92
  %182 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul165 = mul nsw i32 %181, %182
  %add166 = add nsw i32 %mul164, %mul165
  %183 = load i32, ptr %k, align 4, !tbaa !92
  %add167 = add nsw i32 %add166, %183
  store i32 %add167, ptr %bidx, align 4, !tbaa !92
  %184 = load ptr, ptr %res, align 8, !tbaa !4
  %185 = load i32, ptr %k, align 4, !tbaa !92
  %idxprom168 = sext i32 %185 to i64
  %arrayidx169 = getelementptr inbounds double, ptr %184, i64 %idxprom168
  %186 = load double, ptr %arrayidx169, align 8, !tbaa !161
  %187 = load ptr, ptr %diaginv.addr, align 8, !tbaa !4
  %188 = load i32, ptr %bidx, align 4, !tbaa !92
  %idxprom170 = sext i32 %188 to i64
  %arrayidx171 = getelementptr inbounds double, ptr %187, i64 %idxprom170
  %189 = load double, ptr %arrayidx171, align 8, !tbaa !161
  %190 = load ptr, ptr %u_data, align 8, !tbaa !4
  %191 = load i32, ptr %bidx1, align 4, !tbaa !92
  %idxprom173 = sext i32 %191 to i64
  %arrayidx174 = getelementptr inbounds double, ptr %190, i64 %idxprom173
  %192 = load double, ptr %arrayidx174, align 8, !tbaa !161
  %193 = call double @llvm.fmuladd.f64(double %186, double %189, double %192)
  store double %193, ptr %arrayidx174, align 8, !tbaa !161
  br label %for.inc175

for.inc175:                                       ; preds = %for.body163
  %194 = load i32, ptr %k, align 4, !tbaa !92
  %inc176 = add nsw i32 %194, 1
  store i32 %inc176, ptr %k, align 4, !tbaa !92
  br label %for.cond160, !llvm.loop !303

for.end177:                                       ; preds = %for.cond160
  br label %for.inc178

for.inc178:                                       ; preds = %for.end177
  %195 = load i32, ptr %j12, align 4, !tbaa !92
  %inc179 = add nsw i32 %195, 1
  store i32 %inc179, ptr %j12, align 4, !tbaa !92
  br label %for.cond154, !llvm.loop !304

for.end180:                                       ; preds = %for.cond154
  br label %for.inc181

for.inc181:                                       ; preds = %for.end180
  %196 = load i32, ptr %i11, align 4, !tbaa !92
  %inc182 = add nsw i32 %196, 1
  store i32 %inc182, ptr %i11, align 4, !tbaa !92
  br label %for.cond69, !llvm.loop !305

for.end183:                                       ; preds = %for.cond69
  %197 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp184 = icmp sgt i32 %197, 1
  br i1 %cmp184, label %if.then186, label %if.end187

if.then186:                                       ; preds = %for.end183
  %198 = load ptr, ptr %Vext_data, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %198, i32 noundef 0)
  store ptr null, ptr %Vext_data, align 8, !tbaa !4
  %199 = load ptr, ptr %v_buf_data, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %199, i32 noundef 0)
  store ptr null, ptr %v_buf_data, align 8, !tbaa !4
  br label %if.end187

if.end187:                                        ; preds = %if.then186, %for.end183
  %200 = load ptr, ptr %res, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %200, i32 noundef 0)
  store ptr null, ptr %res, align 8, !tbaa !4
  %201 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 4, ptr %n_block) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nb2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %start) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %index) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_sends) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %bidx1) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %bidx) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ii) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %k) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j12) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i11) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %v_buf_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Vext_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Vtemp_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Vtemp_local) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %f_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %f_local) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %u_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %u_local) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_cols_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm_handle) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm_pkg) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  ret i32 %201
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBlockRelaxSolveDevice(ptr noundef %B, ptr noundef %A, ptr noundef %f, ptr noundef %u, ptr noundef %Vtemp, double noundef %relax_weight) #0 {
entry:
  %B.addr = alloca ptr, align 8
  %A.addr = alloca ptr, align 8
  %f.addr = alloca ptr, align 8
  %u.addr = alloca ptr, align 8
  %Vtemp.addr = alloca ptr, align 8
  %relax_weight.addr = alloca double, align 8
  store ptr %B, ptr %B.addr, align 8, !tbaa !4
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %f, ptr %f.addr, align 8, !tbaa !4
  store ptr %u, ptr %u.addr, align 8, !tbaa !4
  store ptr %Vtemp, ptr %Vtemp.addr, align 8, !tbaa !4
  store double %relax_weight, ptr %relax_weight.addr, align 8, !tbaa !161
  call void @hypre_GpuProfilingPushRange(ptr noundef @.str.10)
  %0 = load ptr, ptr %f.addr, align 8, !tbaa !4
  %1 = load ptr, ptr %Vtemp.addr, align 8, !tbaa !4
  %call = call i32 @hypre_ParVectorCopy(ptr noundef %0, ptr noundef %1)
  %2 = load ptr, ptr %u.addr, align 8, !tbaa !4
  %all_zeros = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %2, i32 0, i32 8
  %3 = load i32, ptr %all_zeros, align 4, !tbaa !306
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load double, ptr %relax_weight.addr, align 8, !tbaa !161
  %5 = load ptr, ptr %Vtemp.addr, align 8, !tbaa !4
  %call1 = call i32 @hypre_ParVectorScale(double noundef %4, ptr noundef %5)
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = load double, ptr %relax_weight.addr, align 8, !tbaa !161
  %fneg = fneg double %6
  %7 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %8 = load ptr, ptr %u.addr, align 8, !tbaa !4
  %9 = load double, ptr %relax_weight.addr, align 8, !tbaa !161
  %10 = load ptr, ptr %Vtemp.addr, align 8, !tbaa !4
  %call2 = call i32 @hypre_ParCSRMatrixMatvec(double noundef %fneg, ptr noundef %7, ptr noundef %8, double noundef %9, ptr noundef %10)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load ptr, ptr %B.addr, align 8, !tbaa !4
  %12 = load ptr, ptr %Vtemp.addr, align 8, !tbaa !4
  %13 = load ptr, ptr %u.addr, align 8, !tbaa !4
  %call3 = call i32 @hypre_ParCSRMatrixMatvec(double noundef 1.000000e+00, ptr noundef %11, ptr noundef %12, double noundef 1.000000e+00, ptr noundef %13)
  %14 = load ptr, ptr %u.addr, align 8, !tbaa !4
  %all_zeros4 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %14, i32 0, i32 8
  store i32 0, ptr %all_zeros4, align 4, !tbaa !306
  call void @hypre_GpuProfilingPopRange()
  %15 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  ret i32 %15
}

declare i32 @hypre_ParVectorCopy(ptr noundef, ptr noundef) #2

declare i32 @hypre_ParVectorScale(double noundef, ptr noundef) #2

declare i32 @hypre_ParCSRMatrixMatvec(double noundef, ptr noundef, ptr noundef, double noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBlockRelaxSolve(ptr noundef %A, ptr noundef %f, ptr noundef %u, i32 noundef %blk_size, i32 noundef %n_block, i32 noundef %left_size, i32 noundef %method, ptr noundef %diaginv, ptr noundef %Vtemp) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %f.addr = alloca ptr, align 8
  %u.addr = alloca ptr, align 8
  %blk_size.addr = alloca i32, align 4
  %n_block.addr = alloca i32, align 4
  %left_size.addr = alloca i32, align 4
  %method.addr = alloca i32, align 4
  %diaginv.addr = alloca ptr, align 8
  %Vtemp.addr = alloca ptr, align 8
  %comm = alloca ptr, align 8
  %A_diag = alloca ptr, align 8
  %A_diag_data = alloca ptr, align 8
  %A_diag_i = alloca ptr, align 8
  %A_diag_j = alloca ptr, align 8
  %A_offd = alloca ptr, align 8
  %A_offd_i = alloca ptr, align 8
  %A_offd_data = alloca ptr, align 8
  %A_offd_j = alloca ptr, align 8
  %comm_pkg = alloca ptr, align 8
  %comm_handle = alloca ptr, align 8
  %n = alloca i32, align 4
  %num_cols_offd = alloca i32, align 4
  %u_local = alloca ptr, align 8
  %u_data = alloca ptr, align 8
  %f_local = alloca ptr, align 8
  %f_data = alloca ptr, align 8
  %Vtemp_local = alloca ptr, align 8
  %Vtemp_data = alloca ptr, align 8
  %Vext_data = alloca ptr, align 8
  %v_buf_data = alloca ptr, align 8
  %i11 = alloca i32, align 4
  %j12 = alloca i32, align 4
  %k = alloca i32, align 4
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %bidx = alloca i32, align 4
  %bidx1 = alloca i32, align 4
  %bidxm1 = alloca i32, align 4
  %num_sends = alloca i32, align 4
  %index = alloca i32, align 4
  %start = alloca i32, align 4
  %num_procs = alloca i32, align 4
  %my_id = alloca i32, align 4
  %res = alloca ptr, align 8
  %nb2 = alloca i32, align 4
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %f, ptr %f.addr, align 8, !tbaa !4
  store ptr %u, ptr %u.addr, align 8, !tbaa !4
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  store i32 %n_block, ptr %n_block.addr, align 4, !tbaa !92
  store i32 %left_size, ptr %left_size.addr, align 4, !tbaa !92
  store i32 %method, ptr %method.addr, align 4, !tbaa !92
  store ptr %diaginv, ptr %diaginv.addr, align 8, !tbaa !4
  store ptr %Vtemp, ptr %Vtemp.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %comm1, align 8, !tbaa !160
  store ptr %1, ptr %comm, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag) #6
  %2 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %2, i32 0, i32 8
  %3 = load ptr, ptr %diag, align 8, !tbaa !149
  store ptr %3, ptr %A_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_data) #6
  %4 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %4, i32 0, i32 10
  %5 = load ptr, ptr %data, align 8, !tbaa !165
  store ptr %5, ptr %A_diag_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_i) #6
  %6 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %i = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %6, i32 0, i32 0
  %7 = load ptr, ptr %i, align 8, !tbaa !163
  store ptr %7, ptr %A_diag_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_j) #6
  %8 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %j = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %8, i32 0, i32 1
  %9 = load ptr, ptr %j, align 8, !tbaa !164
  store ptr %9, ptr %A_diag_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd) #6
  %10 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %offd = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %10, i32 0, i32 9
  %11 = load ptr, ptr %offd, align 8, !tbaa !162
  store ptr %11, ptr %A_offd, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_i) #6
  %12 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %i2 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %12, i32 0, i32 0
  %13 = load ptr, ptr %i2, align 8, !tbaa !163
  store ptr %13, ptr %A_offd_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_data) #6
  %14 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %data3 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %14, i32 0, i32 10
  %15 = load ptr, ptr %data3, align 8, !tbaa !165
  store ptr %15, ptr %A_offd_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_offd_j) #6
  %16 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %j4 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %16, i32 0, i32 1
  %17 = load ptr, ptr %j4, align 8, !tbaa !164
  store ptr %17, ptr %A_offd_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm_pkg) #6
  %18 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm_pkg5 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %18, i32 0, i32 16
  %19 = load ptr, ptr %comm_pkg5, align 8, !tbaa !187
  store ptr %19, ptr %comm_pkg, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm_handle) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %n) #6
  %20 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %20, i32 0, i32 3
  %21 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %21, ptr %n, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_cols_offd) #6
  %22 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %num_cols = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %22, i32 0, i32 4
  %23 = load i32, ptr %num_cols, align 4, !tbaa !167
  store i32 %23, ptr %num_cols_offd, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %u_local) #6
  %24 = load ptr, ptr %u.addr, align 8, !tbaa !4
  %local_vector = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %24, i32 0, i32 6
  %25 = load ptr, ptr %local_vector, align 8, !tbaa !295
  store ptr %25, ptr %u_local, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %u_data) #6
  %26 = load ptr, ptr %u_local, align 8, !tbaa !4
  %data6 = getelementptr inbounds %struct.hypre_Vector, ptr %26, i32 0, i32 0
  %27 = load ptr, ptr %data6, align 8, !tbaa !185
  store ptr %27, ptr %u_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %f_local) #6
  %28 = load ptr, ptr %f.addr, align 8, !tbaa !4
  %local_vector7 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %28, i32 0, i32 6
  %29 = load ptr, ptr %local_vector7, align 8, !tbaa !295
  store ptr %29, ptr %f_local, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %f_data) #6
  %30 = load ptr, ptr %f_local, align 8, !tbaa !4
  %data8 = getelementptr inbounds %struct.hypre_Vector, ptr %30, i32 0, i32 0
  %31 = load ptr, ptr %data8, align 8, !tbaa !185
  store ptr %31, ptr %f_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %Vtemp_local) #6
  %32 = load ptr, ptr %Vtemp.addr, align 8, !tbaa !4
  %local_vector9 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %32, i32 0, i32 6
  %33 = load ptr, ptr %local_vector9, align 8, !tbaa !295
  store ptr %33, ptr %Vtemp_local, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %Vtemp_data) #6
  %34 = load ptr, ptr %Vtemp_local, align 8, !tbaa !4
  %data10 = getelementptr inbounds %struct.hypre_Vector, ptr %34, i32 0, i32 0
  %35 = load ptr, ptr %data10, align 8, !tbaa !185
  store ptr %35, ptr %Vtemp_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %Vext_data) #6
  store ptr null, ptr %Vext_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %v_buf_data) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i11) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j12) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %k) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ii) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %bidx) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %bidx1) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %bidxm1) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_sends) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %index) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %start) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %nb2) #6
  %36 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %37 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul = mul nsw i32 %36, %37
  store i32 %mul, ptr %nb2, align 4, !tbaa !92
  %38 = load ptr, ptr %comm, align 8, !tbaa !4
  %call = call i32 @hypre_MPI_Comm_size(ptr noundef %38, ptr noundef %num_procs)
  %39 = load ptr, ptr %comm, align 8, !tbaa !4
  %call13 = call i32 @hypre_MPI_Comm_rank(ptr noundef %39, ptr noundef %my_id)
  %40 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %conv = sext i32 %40 to i64
  %call14 = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 8, i32 noundef 0)
  store ptr %call14, ptr %res, align 8, !tbaa !4
  %41 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %tobool = icmp ne ptr %41, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %42 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %call15 = call i32 @hypre_MatvecCommPkgCreate(ptr noundef %42)
  %43 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm_pkg16 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %43, i32 0, i32 16
  %44 = load ptr, ptr %comm_pkg16, align 8, !tbaa !187
  store ptr %44, ptr %comm_pkg, align 8, !tbaa !4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %45 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp = icmp sgt i32 %45, 1
  br i1 %cmp, label %if.then18, label %if.end52

if.then18:                                        ; preds = %if.end
  %46 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %num_sends19 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %46, i32 0, i32 2
  %47 = load i32, ptr %num_sends19, align 4, !tbaa !188
  store i32 %47, ptr %num_sends, align 4, !tbaa !92
  %48 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %48, i32 0, i32 4
  %49 = load ptr, ptr %send_map_starts, align 8, !tbaa !190
  %50 = load i32, ptr %num_sends, align 4, !tbaa !92
  %idxprom = sext i32 %50 to i64
  %arrayidx = getelementptr inbounds i32, ptr %49, i64 %idxprom
  %51 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %conv20 = sext i32 %51 to i64
  %call21 = call ptr @hypre_CAlloc(i64 noundef %conv20, i64 noundef 8, i32 noundef 0)
  store ptr %call21, ptr %v_buf_data, align 8, !tbaa !4
  %52 = load i32, ptr %num_cols_offd, align 4, !tbaa !92
  %conv22 = sext i32 %52 to i64
  %call23 = call ptr @hypre_CAlloc(i64 noundef %conv22, i64 noundef 8, i32 noundef 0)
  store ptr %call23, ptr %Vext_data, align 8, !tbaa !4
  %53 = load i32, ptr %num_cols_offd, align 4, !tbaa !92
  %tobool24 = icmp ne i32 %53, 0
  br i1 %tobool24, label %if.then25, label %if.end28

if.then25:                                        ; preds = %if.then18
  %54 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %j26 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %54, i32 0, i32 1
  %55 = load ptr, ptr %j26, align 8, !tbaa !164
  store ptr %55, ptr %A_offd_j, align 8, !tbaa !4
  %56 = load ptr, ptr %A_offd, align 8, !tbaa !4
  %data27 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %56, i32 0, i32 10
  %57 = load ptr, ptr %data27, align 8, !tbaa !165
  store ptr %57, ptr %A_offd_data, align 8, !tbaa !4
  br label %if.end28

if.end28:                                         ; preds = %if.then25, %if.then18
  store i32 0, ptr %index, align 4, !tbaa !92
  store i32 0, ptr %i11, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc48, %if.end28
  %58 = load i32, ptr %i11, align 4, !tbaa !92
  %59 = load i32, ptr %num_sends, align 4, !tbaa !92
  %cmp29 = icmp slt i32 %58, %59
  br i1 %cmp29, label %for.body, label %for.end50

for.body:                                         ; preds = %for.cond
  %60 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts31 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %60, i32 0, i32 4
  %61 = load ptr, ptr %send_map_starts31, align 8, !tbaa !190
  %62 = load i32, ptr %i11, align 4, !tbaa !92
  %idxprom32 = sext i32 %62 to i64
  %arrayidx33 = getelementptr inbounds i32, ptr %61, i64 %idxprom32
  %63 = load i32, ptr %arrayidx33, align 4, !tbaa !92
  store i32 %63, ptr %start, align 4, !tbaa !92
  %64 = load i32, ptr %start, align 4, !tbaa !92
  store i32 %64, ptr %j12, align 4, !tbaa !92
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc, %for.body
  %65 = load i32, ptr %j12, align 4, !tbaa !92
  %66 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_starts35 = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %66, i32 0, i32 4
  %67 = load ptr, ptr %send_map_starts35, align 8, !tbaa !190
  %68 = load i32, ptr %i11, align 4, !tbaa !92
  %add = add nsw i32 %68, 1
  %idxprom36 = sext i32 %add to i64
  %arrayidx37 = getelementptr inbounds i32, ptr %67, i64 %idxprom36
  %69 = load i32, ptr %arrayidx37, align 4, !tbaa !92
  %cmp38 = icmp slt i32 %65, %69
  br i1 %cmp38, label %for.body40, label %for.end

for.body40:                                       ; preds = %for.cond34
  %70 = load ptr, ptr %u_data, align 8, !tbaa !4
  %71 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %send_map_elmts = getelementptr inbounds %struct._hypre_ParCSRCommPkg, ptr %71, i32 0, i32 5
  %72 = load ptr, ptr %send_map_elmts, align 8, !tbaa !191
  %73 = load i32, ptr %j12, align 4, !tbaa !92
  %idxprom41 = sext i32 %73 to i64
  %arrayidx42 = getelementptr inbounds i32, ptr %72, i64 %idxprom41
  %74 = load i32, ptr %arrayidx42, align 4, !tbaa !92
  %idxprom43 = sext i32 %74 to i64
  %arrayidx44 = getelementptr inbounds double, ptr %70, i64 %idxprom43
  %75 = load double, ptr %arrayidx44, align 8, !tbaa !161
  %76 = load ptr, ptr %v_buf_data, align 8, !tbaa !4
  %77 = load i32, ptr %index, align 4, !tbaa !92
  %inc = add nsw i32 %77, 1
  store i32 %inc, ptr %index, align 4, !tbaa !92
  %idxprom45 = sext i32 %77 to i64
  %arrayidx46 = getelementptr inbounds double, ptr %76, i64 %idxprom45
  store double %75, ptr %arrayidx46, align 8, !tbaa !161
  br label %for.inc

for.inc:                                          ; preds = %for.body40
  %78 = load i32, ptr %j12, align 4, !tbaa !92
  %inc47 = add nsw i32 %78, 1
  store i32 %inc47, ptr %j12, align 4, !tbaa !92
  br label %for.cond34, !llvm.loop !307

for.end:                                          ; preds = %for.cond34
  br label %for.inc48

for.inc48:                                        ; preds = %for.end
  %79 = load i32, ptr %i11, align 4, !tbaa !92
  %inc49 = add nsw i32 %79, 1
  store i32 %inc49, ptr %i11, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !308

for.end50:                                        ; preds = %for.cond
  %80 = load ptr, ptr %comm_pkg, align 8, !tbaa !4
  %81 = load ptr, ptr %v_buf_data, align 8, !tbaa !4
  %82 = load ptr, ptr %Vext_data, align 8, !tbaa !4
  %call51 = call ptr @hypre_ParCSRCommHandleCreate(i32 noundef 1, ptr noundef %80, ptr noundef %81, ptr noundef %82)
  store ptr %call51, ptr %comm_handle, align 8, !tbaa !4
  br label %if.end52

if.end52:                                         ; preds = %for.end50, %if.end
  store i32 0, ptr %i11, align 4, !tbaa !92
  br label %for.cond53

for.cond53:                                       ; preds = %for.inc61, %if.end52
  %83 = load i32, ptr %i11, align 4, !tbaa !92
  %84 = load i32, ptr %n, align 4, !tbaa !92
  %cmp54 = icmp slt i32 %83, %84
  br i1 %cmp54, label %for.body56, label %for.end63

for.body56:                                       ; preds = %for.cond53
  %85 = load ptr, ptr %u_data, align 8, !tbaa !4
  %86 = load i32, ptr %i11, align 4, !tbaa !92
  %idxprom57 = sext i32 %86 to i64
  %arrayidx58 = getelementptr inbounds double, ptr %85, i64 %idxprom57
  %87 = load double, ptr %arrayidx58, align 8, !tbaa !161
  %88 = load ptr, ptr %Vtemp_data, align 8, !tbaa !4
  %89 = load i32, ptr %i11, align 4, !tbaa !92
  %idxprom59 = sext i32 %89 to i64
  %arrayidx60 = getelementptr inbounds double, ptr %88, i64 %idxprom59
  store double %87, ptr %arrayidx60, align 8, !tbaa !161
  br label %for.inc61

for.inc61:                                        ; preds = %for.body56
  %90 = load i32, ptr %i11, align 4, !tbaa !92
  %inc62 = add nsw i32 %90, 1
  store i32 %inc62, ptr %i11, align 4, !tbaa !92
  br label %for.cond53, !llvm.loop !309

for.end63:                                        ; preds = %for.cond53
  %91 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp64 = icmp sgt i32 %91, 1
  br i1 %cmp64, label %if.then66, label %if.end68

if.then66:                                        ; preds = %for.end63
  %92 = load ptr, ptr %comm_handle, align 8, !tbaa !4
  %call67 = call i32 @hypre_ParCSRCommHandleDestroy(ptr noundef %92)
  store ptr null, ptr %comm_handle, align 8, !tbaa !4
  br label %if.end68

if.end68:                                         ; preds = %if.then66, %for.end63
  store i32 0, ptr %i11, align 4, !tbaa !92
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc180, %if.end68
  %93 = load i32, ptr %i11, align 4, !tbaa !92
  %94 = load i32, ptr %n_block.addr, align 4, !tbaa !92
  %cmp70 = icmp slt i32 %93, %94
  br i1 %cmp70, label %for.body72, label %for.end182

for.body72:                                       ; preds = %for.cond69
  %95 = load i32, ptr %i11, align 4, !tbaa !92
  %96 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul73 = mul nsw i32 %95, %96
  store i32 %mul73, ptr %bidxm1, align 4, !tbaa !92
  store i32 0, ptr %j12, align 4, !tbaa !92
  br label %for.cond74

for.cond74:                                       ; preds = %for.inc151, %for.body72
  %97 = load i32, ptr %j12, align 4, !tbaa !92
  %98 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp75 = icmp slt i32 %97, %98
  br i1 %cmp75, label %for.body77, label %for.end153

for.body77:                                       ; preds = %for.cond74
  %99 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %100 = load i32, ptr %j12, align 4, !tbaa !92
  %add78 = add nsw i32 %99, %100
  store i32 %add78, ptr %bidx, align 4, !tbaa !92
  %101 = load ptr, ptr %f_data, align 8, !tbaa !4
  %102 = load i32, ptr %bidx, align 4, !tbaa !92
  %idxprom79 = sext i32 %102 to i64
  %arrayidx80 = getelementptr inbounds double, ptr %101, i64 %idxprom79
  %103 = load double, ptr %arrayidx80, align 8, !tbaa !161
  %104 = load ptr, ptr %res, align 8, !tbaa !4
  %105 = load i32, ptr %j12, align 4, !tbaa !92
  %idxprom81 = sext i32 %105 to i64
  %arrayidx82 = getelementptr inbounds double, ptr %104, i64 %idxprom81
  store double %103, ptr %arrayidx82, align 8, !tbaa !161
  %106 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %107 = load i32, ptr %bidx, align 4, !tbaa !92
  %idxprom83 = sext i32 %107 to i64
  %arrayidx84 = getelementptr inbounds i32, ptr %106, i64 %idxprom83
  %108 = load i32, ptr %arrayidx84, align 4, !tbaa !92
  store i32 %108, ptr %jj, align 4, !tbaa !92
  br label %for.cond85

for.cond85:                                       ; preds = %for.inc126, %for.body77
  %109 = load i32, ptr %jj, align 4, !tbaa !92
  %110 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %111 = load i32, ptr %bidx, align 4, !tbaa !92
  %add86 = add nsw i32 %111, 1
  %idxprom87 = sext i32 %add86 to i64
  %arrayidx88 = getelementptr inbounds i32, ptr %110, i64 %idxprom87
  %112 = load i32, ptr %arrayidx88, align 4, !tbaa !92
  %cmp89 = icmp slt i32 %109, %112
  br i1 %cmp89, label %for.body91, label %for.end128

for.body91:                                       ; preds = %for.cond85
  %113 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %114 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom92 = sext i32 %114 to i64
  %arrayidx93 = getelementptr inbounds i32, ptr %113, i64 %idxprom92
  %115 = load i32, ptr %arrayidx93, align 4, !tbaa !92
  store i32 %115, ptr %ii, align 4, !tbaa !92
  %116 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp94 = icmp eq i32 %116, 0
  br i1 %cmp94, label %if.then96, label %if.else

if.then96:                                        ; preds = %for.body91
  %117 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %118 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom97 = sext i32 %118 to i64
  %arrayidx98 = getelementptr inbounds double, ptr %117, i64 %idxprom97
  %119 = load double, ptr %arrayidx98, align 8, !tbaa !161
  %120 = load ptr, ptr %Vtemp_data, align 8, !tbaa !4
  %121 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom99 = sext i32 %121 to i64
  %arrayidx100 = getelementptr inbounds double, ptr %120, i64 %idxprom99
  %122 = load double, ptr %arrayidx100, align 8, !tbaa !161
  %123 = load ptr, ptr %res, align 8, !tbaa !4
  %124 = load i32, ptr %j12, align 4, !tbaa !92
  %idxprom102 = sext i32 %124 to i64
  %arrayidx103 = getelementptr inbounds double, ptr %123, i64 %idxprom102
  %125 = load double, ptr %arrayidx103, align 8, !tbaa !161
  %neg = fneg double %119
  %126 = call double @llvm.fmuladd.f64(double %neg, double %122, double %125)
  store double %126, ptr %arrayidx103, align 8, !tbaa !161
  br label %if.end125

if.else:                                          ; preds = %for.body91
  %127 = load i32, ptr %method.addr, align 4, !tbaa !92
  %cmp104 = icmp eq i32 %127, 1
  br i1 %cmp104, label %if.then106, label %if.else115

if.then106:                                       ; preds = %if.else
  %128 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %129 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom107 = sext i32 %129 to i64
  %arrayidx108 = getelementptr inbounds double, ptr %128, i64 %idxprom107
  %130 = load double, ptr %arrayidx108, align 8, !tbaa !161
  %131 = load ptr, ptr %u_data, align 8, !tbaa !4
  %132 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom109 = sext i32 %132 to i64
  %arrayidx110 = getelementptr inbounds double, ptr %131, i64 %idxprom109
  %133 = load double, ptr %arrayidx110, align 8, !tbaa !161
  %134 = load ptr, ptr %res, align 8, !tbaa !4
  %135 = load i32, ptr %j12, align 4, !tbaa !92
  %idxprom112 = sext i32 %135 to i64
  %arrayidx113 = getelementptr inbounds double, ptr %134, i64 %idxprom112
  %136 = load double, ptr %arrayidx113, align 8, !tbaa !161
  %neg114 = fneg double %130
  %137 = call double @llvm.fmuladd.f64(double %neg114, double %133, double %136)
  store double %137, ptr %arrayidx113, align 8, !tbaa !161
  br label %if.end124

if.else115:                                       ; preds = %if.else
  %138 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %139 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom116 = sext i32 %139 to i64
  %arrayidx117 = getelementptr inbounds double, ptr %138, i64 %idxprom116
  %140 = load double, ptr %arrayidx117, align 8, !tbaa !161
  %141 = load ptr, ptr %Vtemp_data, align 8, !tbaa !4
  %142 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom118 = sext i32 %142 to i64
  %arrayidx119 = getelementptr inbounds double, ptr %141, i64 %idxprom118
  %143 = load double, ptr %arrayidx119, align 8, !tbaa !161
  %144 = load ptr, ptr %res, align 8, !tbaa !4
  %145 = load i32, ptr %j12, align 4, !tbaa !92
  %idxprom121 = sext i32 %145 to i64
  %arrayidx122 = getelementptr inbounds double, ptr %144, i64 %idxprom121
  %146 = load double, ptr %arrayidx122, align 8, !tbaa !161
  %neg123 = fneg double %140
  %147 = call double @llvm.fmuladd.f64(double %neg123, double %143, double %146)
  store double %147, ptr %arrayidx122, align 8, !tbaa !161
  br label %if.end124

if.end124:                                        ; preds = %if.else115, %if.then106
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then96
  br label %for.inc126

for.inc126:                                       ; preds = %if.end125
  %148 = load i32, ptr %jj, align 4, !tbaa !92
  %inc127 = add nsw i32 %148, 1
  store i32 %inc127, ptr %jj, align 4, !tbaa !92
  br label %for.cond85, !llvm.loop !310

for.end128:                                       ; preds = %for.cond85
  %149 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %150 = load i32, ptr %bidx, align 4, !tbaa !92
  %idxprom129 = sext i32 %150 to i64
  %arrayidx130 = getelementptr inbounds i32, ptr %149, i64 %idxprom129
  %151 = load i32, ptr %arrayidx130, align 4, !tbaa !92
  store i32 %151, ptr %jj, align 4, !tbaa !92
  br label %for.cond131

for.cond131:                                      ; preds = %for.inc148, %for.end128
  %152 = load i32, ptr %jj, align 4, !tbaa !92
  %153 = load ptr, ptr %A_offd_i, align 8, !tbaa !4
  %154 = load i32, ptr %bidx, align 4, !tbaa !92
  %add132 = add nsw i32 %154, 1
  %idxprom133 = sext i32 %add132 to i64
  %arrayidx134 = getelementptr inbounds i32, ptr %153, i64 %idxprom133
  %155 = load i32, ptr %arrayidx134, align 4, !tbaa !92
  %cmp135 = icmp slt i32 %152, %155
  br i1 %cmp135, label %for.body137, label %for.end150

for.body137:                                      ; preds = %for.cond131
  %156 = load ptr, ptr %A_offd_j, align 8, !tbaa !4
  %157 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom138 = sext i32 %157 to i64
  %arrayidx139 = getelementptr inbounds i32, ptr %156, i64 %idxprom138
  %158 = load i32, ptr %arrayidx139, align 4, !tbaa !92
  store i32 %158, ptr %ii, align 4, !tbaa !92
  %159 = load ptr, ptr %A_offd_data, align 8, !tbaa !4
  %160 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom140 = sext i32 %160 to i64
  %arrayidx141 = getelementptr inbounds double, ptr %159, i64 %idxprom140
  %161 = load double, ptr %arrayidx141, align 8, !tbaa !161
  %162 = load ptr, ptr %Vext_data, align 8, !tbaa !4
  %163 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom142 = sext i32 %163 to i64
  %arrayidx143 = getelementptr inbounds double, ptr %162, i64 %idxprom142
  %164 = load double, ptr %arrayidx143, align 8, !tbaa !161
  %165 = load ptr, ptr %res, align 8, !tbaa !4
  %166 = load i32, ptr %j12, align 4, !tbaa !92
  %idxprom145 = sext i32 %166 to i64
  %arrayidx146 = getelementptr inbounds double, ptr %165, i64 %idxprom145
  %167 = load double, ptr %arrayidx146, align 8, !tbaa !161
  %neg147 = fneg double %161
  %168 = call double @llvm.fmuladd.f64(double %neg147, double %164, double %167)
  store double %168, ptr %arrayidx146, align 8, !tbaa !161
  br label %for.inc148

for.inc148:                                       ; preds = %for.body137
  %169 = load i32, ptr %jj, align 4, !tbaa !92
  %inc149 = add nsw i32 %169, 1
  store i32 %inc149, ptr %jj, align 4, !tbaa !92
  br label %for.cond131, !llvm.loop !311

for.end150:                                       ; preds = %for.cond131
  br label %for.inc151

for.inc151:                                       ; preds = %for.end150
  %170 = load i32, ptr %j12, align 4, !tbaa !92
  %inc152 = add nsw i32 %170, 1
  store i32 %inc152, ptr %j12, align 4, !tbaa !92
  br label %for.cond74, !llvm.loop !312

for.end153:                                       ; preds = %for.cond74
  store i32 0, ptr %j12, align 4, !tbaa !92
  br label %for.cond154

for.cond154:                                      ; preds = %for.inc177, %for.end153
  %171 = load i32, ptr %j12, align 4, !tbaa !92
  %172 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp155 = icmp slt i32 %171, %172
  br i1 %cmp155, label %for.body157, label %for.end179

for.body157:                                      ; preds = %for.cond154
  %173 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %174 = load i32, ptr %j12, align 4, !tbaa !92
  %add158 = add nsw i32 %173, %174
  store i32 %add158, ptr %bidx1, align 4, !tbaa !92
  store i32 0, ptr %k, align 4, !tbaa !92
  br label %for.cond159

for.cond159:                                      ; preds = %for.inc174, %for.body157
  %175 = load i32, ptr %k, align 4, !tbaa !92
  %176 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp160 = icmp slt i32 %175, %176
  br i1 %cmp160, label %for.body162, label %for.end176

for.body162:                                      ; preds = %for.cond159
  %177 = load i32, ptr %i11, align 4, !tbaa !92
  %178 = load i32, ptr %nb2, align 4, !tbaa !92
  %mul163 = mul nsw i32 %177, %178
  %179 = load i32, ptr %j12, align 4, !tbaa !92
  %180 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul164 = mul nsw i32 %179, %180
  %add165 = add nsw i32 %mul163, %mul164
  %181 = load i32, ptr %k, align 4, !tbaa !92
  %add166 = add nsw i32 %add165, %181
  store i32 %add166, ptr %bidx, align 4, !tbaa !92
  %182 = load ptr, ptr %res, align 8, !tbaa !4
  %183 = load i32, ptr %k, align 4, !tbaa !92
  %idxprom167 = sext i32 %183 to i64
  %arrayidx168 = getelementptr inbounds double, ptr %182, i64 %idxprom167
  %184 = load double, ptr %arrayidx168, align 8, !tbaa !161
  %185 = load ptr, ptr %diaginv.addr, align 8, !tbaa !4
  %186 = load i32, ptr %bidx, align 4, !tbaa !92
  %idxprom169 = sext i32 %186 to i64
  %arrayidx170 = getelementptr inbounds double, ptr %185, i64 %idxprom169
  %187 = load double, ptr %arrayidx170, align 8, !tbaa !161
  %188 = load ptr, ptr %u_data, align 8, !tbaa !4
  %189 = load i32, ptr %bidx1, align 4, !tbaa !92
  %idxprom172 = sext i32 %189 to i64
  %arrayidx173 = getelementptr inbounds double, ptr %188, i64 %idxprom172
  %190 = load double, ptr %arrayidx173, align 8, !tbaa !161
  %191 = call double @llvm.fmuladd.f64(double %184, double %187, double %190)
  store double %191, ptr %arrayidx173, align 8, !tbaa !161
  br label %for.inc174

for.inc174:                                       ; preds = %for.body162
  %192 = load i32, ptr %k, align 4, !tbaa !92
  %inc175 = add nsw i32 %192, 1
  store i32 %inc175, ptr %k, align 4, !tbaa !92
  br label %for.cond159, !llvm.loop !313

for.end176:                                       ; preds = %for.cond159
  br label %for.inc177

for.inc177:                                       ; preds = %for.end176
  %193 = load i32, ptr %j12, align 4, !tbaa !92
  %inc178 = add nsw i32 %193, 1
  store i32 %inc178, ptr %j12, align 4, !tbaa !92
  br label %for.cond154, !llvm.loop !314

for.end179:                                       ; preds = %for.cond154
  br label %for.inc180

for.inc180:                                       ; preds = %for.end179
  %194 = load i32, ptr %i11, align 4, !tbaa !92
  %inc181 = add nsw i32 %194, 1
  store i32 %inc181, ptr %i11, align 4, !tbaa !92
  br label %for.cond69, !llvm.loop !315

for.end182:                                       ; preds = %for.cond69
  %195 = load i32, ptr %num_procs, align 4, !tbaa !92
  %cmp183 = icmp sgt i32 %195, 1
  br i1 %cmp183, label %if.then185, label %if.end186

if.then185:                                       ; preds = %for.end182
  %196 = load ptr, ptr %Vext_data, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %196, i32 noundef 0)
  store ptr null, ptr %Vext_data, align 8, !tbaa !4
  %197 = load ptr, ptr %v_buf_data, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %197, i32 noundef 0)
  store ptr null, ptr %v_buf_data, align 8, !tbaa !4
  br label %if.end186

if.end186:                                        ; preds = %if.then185, %for.end182
  %198 = load ptr, ptr %res, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %198, i32 noundef 0)
  store ptr null, ptr %res, align 8, !tbaa !4
  %199 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 4, ptr %nb2) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %start) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %index) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_sends) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %bidxm1) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %bidx1) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %bidx) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ii) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %k) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j12) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i11) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %v_buf_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Vext_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Vtemp_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %Vtemp_local) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %f_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %f_local) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %u_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %u_local) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_cols_offd) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm_handle) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm_pkg) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_offd) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  ret i32 %199
}

; Function Attrs: nounwind uwtable
define i32 @hypre_BlockDiagInvLapack(ptr noundef %diag, i32 noundef %N, i32 noundef %blk_size) #0 {
entry:
  %diag.addr = alloca ptr, align 8
  %N.addr = alloca i32, align 4
  %blk_size.addr = alloca i32, align 4
  %nblock = alloca i32, align 4
  %left_size = alloca i32, align 4
  %i = alloca i32, align 4
  %LWORK = alloca i32, align 4
  %WORK = alloca ptr, align 8
  %INFO = alloca i32, align 4
  %wall_time = alloca double, align 8
  %my_id = alloca i32, align 4
  %comm = alloca ptr, align 8
  %IPIV = alloca ptr, align 8
  store ptr %diag, ptr %diag.addr, align 8, !tbaa !4
  store i32 %N, ptr %N.addr, align 4, !tbaa !92
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %nblock) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %left_size) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %LWORK) #6
  %0 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %1 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul = mul nsw i32 %0, %1
  store i32 %mul, ptr %LWORK, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %WORK) #6
  %2 = load i32, ptr %LWORK, align 4, !tbaa !92
  %conv = sext i32 %2 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 8, i32 noundef 0)
  store ptr %call, ptr %WORK, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %INFO) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %wall_time) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  store ptr @ompi_mpi_comm_world, ptr %comm, align 8, !tbaa !4
  %3 = load ptr, ptr %comm, align 8, !tbaa !4
  %call1 = call i32 @hypre_MPI_Comm_rank(ptr noundef %3, ptr noundef %my_id)
  %4 = load i32, ptr %N.addr, align 4, !tbaa !92
  %5 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %div = sdiv i32 %4, %5
  store i32 %div, ptr %nblock, align 4, !tbaa !92
  %6 = load i32, ptr %N.addr, align 4, !tbaa !92
  %7 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %8 = load i32, ptr %nblock, align 4, !tbaa !92
  %mul2 = mul nsw i32 %7, %8
  %sub = sub nsw i32 %6, %mul2
  store i32 %sub, ptr %left_size, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %IPIV) #6
  %9 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %conv3 = sext i32 %9 to i64
  %call4 = call ptr @hypre_CAlloc(i64 noundef %conv3, i64 noundef 4, i32 noundef 0)
  store ptr %call4, ptr %IPIV, align 8, !tbaa !4
  %call5 = call double @time_getWallclockSeconds()
  store double %call5, ptr %wall_time, align 8, !tbaa !161
  %10 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp = icmp sge i32 %10, 2
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %11 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp7 = icmp sle i32 %11, 4
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, ptr %i, align 4, !tbaa !92
  %13 = load i32, ptr %nblock, align 4, !tbaa !92
  %cmp9 = icmp slt i32 %12, %13
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load ptr, ptr %diag.addr, align 8, !tbaa !4
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %16 = load i32, ptr %LWORK, align 4, !tbaa !92
  %mul11 = mul nsw i32 %15, %16
  %idx.ext = sext i32 %mul11 to i64
  %add.ptr = getelementptr inbounds double, ptr %14, i64 %idx.ext
  %17 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  call void @hypre_MGRSmallBlkInverse(ptr noundef %add.ptr, i32 noundef %17)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %18 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %18, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !316

for.end:                                          ; preds = %for.cond
  br label %if.end30

if.else:                                          ; preds = %land.lhs.true, %entry
  %19 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp12 = icmp sgt i32 %19, 4
  br i1 %cmp12, label %if.then14, label %if.end

if.then14:                                        ; preds = %if.else
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc27, %if.then14
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %21 = load i32, ptr %nblock, align 4, !tbaa !92
  %cmp16 = icmp slt i32 %20, %21
  br i1 %cmp16, label %for.body18, label %for.end29

for.body18:                                       ; preds = %for.cond15
  %22 = load ptr, ptr %diag.addr, align 8, !tbaa !4
  %23 = load i32, ptr %i, align 4, !tbaa !92
  %24 = load i32, ptr %LWORK, align 4, !tbaa !92
  %mul19 = mul nsw i32 %23, %24
  %idx.ext20 = sext i32 %mul19 to i64
  %add.ptr21 = getelementptr inbounds double, ptr %22, i64 %idx.ext20
  %25 = load ptr, ptr %IPIV, align 8, !tbaa !4
  %call22 = call i32 @dgetrf_(ptr noundef %blk_size.addr, ptr noundef %blk_size.addr, ptr noundef %add.ptr21, ptr noundef %blk_size.addr, ptr noundef %25, ptr noundef %INFO)
  %26 = load ptr, ptr %diag.addr, align 8, !tbaa !4
  %27 = load i32, ptr %i, align 4, !tbaa !92
  %28 = load i32, ptr %LWORK, align 4, !tbaa !92
  %mul23 = mul nsw i32 %27, %28
  %idx.ext24 = sext i32 %mul23 to i64
  %add.ptr25 = getelementptr inbounds double, ptr %26, i64 %idx.ext24
  %29 = load ptr, ptr %IPIV, align 8, !tbaa !4
  %30 = load ptr, ptr %WORK, align 8, !tbaa !4
  %call26 = call i32 @dgetri_(ptr noundef %blk_size.addr, ptr noundef %add.ptr25, ptr noundef %blk_size.addr, ptr noundef %29, ptr noundef %30, ptr noundef %LWORK, ptr noundef %INFO)
  br label %for.inc27

for.inc27:                                        ; preds = %for.body18
  %31 = load i32, ptr %i, align 4, !tbaa !92
  %inc28 = add nsw i32 %31, 1
  store i32 %inc28, ptr %i, align 4, !tbaa !92
  br label %for.cond15, !llvm.loop !317

for.end29:                                        ; preds = %for.cond15
  br label %if.end

if.end:                                           ; preds = %for.end29, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %for.end
  %32 = load i32, ptr %left_size, align 4, !tbaa !92
  %cmp31 = icmp sgt i32 %32, 0
  br i1 %cmp31, label %if.then33, label %if.end42

if.then33:                                        ; preds = %if.end30
  %33 = load ptr, ptr %diag.addr, align 8, !tbaa !4
  %34 = load i32, ptr %i, align 4, !tbaa !92
  %35 = load i32, ptr %LWORK, align 4, !tbaa !92
  %mul34 = mul nsw i32 %34, %35
  %idx.ext35 = sext i32 %mul34 to i64
  %add.ptr36 = getelementptr inbounds double, ptr %33, i64 %idx.ext35
  %36 = load ptr, ptr %IPIV, align 8, !tbaa !4
  %call37 = call i32 @dgetrf_(ptr noundef %left_size, ptr noundef %left_size, ptr noundef %add.ptr36, ptr noundef %left_size, ptr noundef %36, ptr noundef %INFO)
  %37 = load ptr, ptr %diag.addr, align 8, !tbaa !4
  %38 = load i32, ptr %i, align 4, !tbaa !92
  %39 = load i32, ptr %LWORK, align 4, !tbaa !92
  %mul38 = mul nsw i32 %38, %39
  %idx.ext39 = sext i32 %mul38 to i64
  %add.ptr40 = getelementptr inbounds double, ptr %37, i64 %idx.ext39
  %40 = load ptr, ptr %IPIV, align 8, !tbaa !4
  %41 = load ptr, ptr %WORK, align 8, !tbaa !4
  %call41 = call i32 @dgetri_(ptr noundef %left_size, ptr noundef %add.ptr40, ptr noundef %left_size, ptr noundef %40, ptr noundef %41, ptr noundef %LWORK, ptr noundef %INFO)
  br label %if.end42

if.end42:                                         ; preds = %if.then33, %if.end30
  %call43 = call double @time_getWallclockSeconds()
  %42 = load double, ptr %wall_time, align 8, !tbaa !161
  %sub44 = fsub double %call43, %42
  store double %sub44, ptr %wall_time, align 8, !tbaa !161
  %43 = load ptr, ptr %IPIV, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %43, i32 noundef 0)
  store ptr null, ptr %IPIV, align 8, !tbaa !4
  %44 = load ptr, ptr %WORK, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %44, i32 noundef 0)
  store ptr null, ptr %WORK, align 8, !tbaa !4
  %45 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %IPIV) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %wall_time) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %INFO) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %WORK) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %LWORK) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %left_size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nblock) #6
  ret i32 %45
}

declare i32 @dgetrf_(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

declare i32 @dgetri_(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_ParCSRMatrixExtractBlockDiagHost(ptr noundef %par_A, i32 noundef %blk_size, i32 noundef %num_points, i32 noundef %point_type, ptr noundef %CF_marker, i32 noundef %diag_size, i32 noundef %diag_type, ptr noundef %diag_data) #0 {
entry:
  %par_A.addr = alloca ptr, align 8
  %blk_size.addr = alloca i32, align 4
  %num_points.addr = alloca i32, align 4
  %point_type.addr = alloca i32, align 4
  %CF_marker.addr = alloca ptr, align 8
  %diag_size.addr = alloca i32, align 4
  %diag_type.addr = alloca i32, align 4
  %diag_data.addr = alloca ptr, align 8
  %A_diag = alloca ptr, align 8
  %nrows = alloca i32, align 4
  %A_diag_data = alloca ptr, align 8
  %A_diag_i = alloca ptr, align 8
  %A_diag_j = alloca ptr, align 8
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %bidx = alloca i32, align 4
  %bidxm1 = alloca i32, align 4
  %bidxp1 = alloca i32, align 4
  %ridx = alloca i32, align 4
  %didx = alloca i32, align 4
  %row_offset = alloca i32, align 4
  %whole_num_points = alloca i32, align 4
  %cnt = alloca i32, align 4
  %bstart = alloca i32, align 4
  %bs2 = alloca i32, align 4
  %num_blocks = alloca i32, align 4
  %left_size = alloca i32, align 4
  store ptr %par_A, ptr %par_A.addr, align 8, !tbaa !4
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  store i32 %num_points, ptr %num_points.addr, align 4, !tbaa !92
  store i32 %point_type, ptr %point_type.addr, align 4, !tbaa !92
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store i32 %diag_size, ptr %diag_size.addr, align 4, !tbaa !92
  store i32 %diag_type, ptr %diag_type.addr, align 4, !tbaa !92
  store ptr %diag_data, ptr %diag_data.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag) #6
  %0 = load ptr, ptr %par_A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 8
  %1 = load ptr, ptr %diag, align 8, !tbaa !149
  store ptr %1, ptr %A_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %nrows) #6
  %2 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %2, i32 0, i32 3
  %3 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %3, ptr %nrows, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_data) #6
  %4 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %4, i32 0, i32 10
  %5 = load ptr, ptr %data, align 8, !tbaa !165
  store ptr %5, ptr %A_diag_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_i) #6
  %6 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %i = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %6, i32 0, i32 0
  %7 = load ptr, ptr %i, align 8, !tbaa !163
  store ptr %7, ptr %A_diag_i, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag_j) #6
  %8 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %j = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %8, i32 0, i32 1
  %9 = load ptr, ptr %j, align 8, !tbaa !164
  store ptr %9, ptr %A_diag_j, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i1) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j2) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ii) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %bidx) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %bidxm1) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %bidxp1) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %ridx) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %didx) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %row_offset) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %whole_num_points) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %cnt) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %bstart) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %bs2) #6
  %10 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %11 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul = mul nsw i32 %10, %11
  store i32 %mul, ptr %bs2, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_blocks) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %left_size) #6
  store i32 0, ptr %left_size, align 4, !tbaa !92
  %12 = load i32, ptr %num_points.addr, align 4, !tbaa !92
  %13 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %div = sdiv i32 %12, %13
  store i32 %div, ptr %num_blocks, align 4, !tbaa !92
  %14 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %15 = load i32, ptr %num_blocks, align 4, !tbaa !92
  %mul3 = mul nsw i32 %14, %15
  store i32 %mul3, ptr %whole_num_points, align 4, !tbaa !92
  %16 = load i32, ptr %num_points.addr, align 4, !tbaa !92
  %17 = load i32, ptr %whole_num_points, align 4, !tbaa !92
  %sub = sub nsw i32 %16, %17
  store i32 %sub, ptr %left_size, align 4, !tbaa !92
  %18 = load i32, ptr %bs2, align 4, !tbaa !92
  %19 = load i32, ptr %num_blocks, align 4, !tbaa !92
  %mul4 = mul nsw i32 %18, %19
  store i32 %mul4, ptr %bstart, align 4, !tbaa !92
  %20 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %cmp = icmp eq ptr %20, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, ptr %i1, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc45, %if.then
  %21 = load i32, ptr %i1, align 4, !tbaa !92
  %22 = load i32, ptr %num_blocks, align 4, !tbaa !92
  %cmp5 = icmp slt i32 %21, %22
  br i1 %cmp5, label %for.body, label %for.end47

for.body:                                         ; preds = %for.cond
  %23 = load i32, ptr %i1, align 4, !tbaa !92
  %24 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul6 = mul nsw i32 %23, %24
  store i32 %mul6, ptr %bidxm1, align 4, !tbaa !92
  %25 = load i32, ptr %i1, align 4, !tbaa !92
  %add = add nsw i32 %25, 1
  %26 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul7 = mul nsw i32 %add, %26
  store i32 %mul7, ptr %bidxp1, align 4, !tbaa !92
  store i32 0, ptr %j2, align 4, !tbaa !92
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc42, %for.body
  %27 = load i32, ptr %j2, align 4, !tbaa !92
  %28 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp9 = icmp slt i32 %27, %28
  br i1 %cmp9, label %for.body10, label %for.end44

for.body10:                                       ; preds = %for.cond8
  %29 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %30 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %31 = load i32, ptr %j2, align 4, !tbaa !92
  %add11 = add nsw i32 %30, %31
  %idxprom = sext i32 %add11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %29, i64 %idxprom
  %32 = load i32, ptr %arrayidx, align 4, !tbaa !92
  store i32 %32, ptr %ii, align 4, !tbaa !92
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc, %for.body10
  %33 = load i32, ptr %ii, align 4, !tbaa !92
  %34 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %35 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %36 = load i32, ptr %j2, align 4, !tbaa !92
  %add13 = add nsw i32 %35, %36
  %add14 = add nsw i32 %add13, 1
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds i32, ptr %34, i64 %idxprom15
  %37 = load i32, ptr %arrayidx16, align 4, !tbaa !92
  %cmp17 = icmp slt i32 %33, %37
  br i1 %cmp17, label %for.body18, label %for.end

for.body18:                                       ; preds = %for.cond12
  %38 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %39 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom19 = sext i32 %39 to i64
  %arrayidx20 = getelementptr inbounds i32, ptr %38, i64 %idxprom19
  %40 = load i32, ptr %arrayidx20, align 4, !tbaa !92
  store i32 %40, ptr %jj, align 4, !tbaa !92
  %41 = load i32, ptr %jj, align 4, !tbaa !92
  %42 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %cmp21 = icmp sge i32 %41, %42
  br i1 %cmp21, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body18
  %43 = load i32, ptr %jj, align 4, !tbaa !92
  %44 = load i32, ptr %bidxp1, align 4, !tbaa !92
  %cmp22 = icmp slt i32 %43, %44
  br i1 %cmp22, label %land.lhs.true23, label %if.end

land.lhs.true23:                                  ; preds = %land.lhs.true
  %45 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %46 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom24 = sext i32 %46 to i64
  %arrayidx25 = getelementptr inbounds double, ptr %45, i64 %idxprom24
  %47 = load double, ptr %arrayidx25, align 8, !tbaa !161
  %cmp26 = fcmp ogt double %47, 0.000000e+00
  br i1 %cmp26, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true23
  %48 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %49 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom27 = sext i32 %49 to i64
  %arrayidx28 = getelementptr inbounds double, ptr %48, i64 %idxprom27
  %50 = load double, ptr %arrayidx28, align 8, !tbaa !161
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true23
  %51 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %52 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom29 = sext i32 %52 to i64
  %arrayidx30 = getelementptr inbounds double, ptr %51, i64 %idxprom29
  %53 = load double, ptr %arrayidx30, align 8, !tbaa !161
  %fneg = fneg double %53
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %50, %cond.true ], [ %fneg, %cond.false ]
  %cmp31 = fcmp ogt double %cond, 0x10000000000000
  br i1 %cmp31, label %if.then32, label %if.end

if.then32:                                        ; preds = %cond.end
  %54 = load i32, ptr %j2, align 4, !tbaa !92
  %55 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul33 = mul nsw i32 %54, %55
  %56 = load i32, ptr %jj, align 4, !tbaa !92
  %add34 = add nsw i32 %mul33, %56
  %57 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %sub35 = sub nsw i32 %add34, %57
  store i32 %sub35, ptr %bidx, align 4, !tbaa !92
  %58 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %59 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom36 = sext i32 %59 to i64
  %arrayidx37 = getelementptr inbounds double, ptr %58, i64 %idxprom36
  %60 = load double, ptr %arrayidx37, align 8, !tbaa !161
  %61 = load ptr, ptr %diag_data.addr, align 8, !tbaa !4
  %62 = load i32, ptr %i1, align 4, !tbaa !92
  %63 = load i32, ptr %bs2, align 4, !tbaa !92
  %mul38 = mul nsw i32 %62, %63
  %64 = load i32, ptr %bidx, align 4, !tbaa !92
  %add39 = add nsw i32 %mul38, %64
  %idxprom40 = sext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds double, ptr %61, i64 %idxprom40
  store double %60, ptr %arrayidx41, align 8, !tbaa !161
  br label %if.end

if.end:                                           ; preds = %if.then32, %cond.end, %land.lhs.true, %for.body18
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %65 = load i32, ptr %ii, align 4, !tbaa !92
  %inc = add nsw i32 %65, 1
  store i32 %inc, ptr %ii, align 4, !tbaa !92
  br label %for.cond12, !llvm.loop !318

for.end:                                          ; preds = %for.cond12
  br label %for.inc42

for.inc42:                                        ; preds = %for.end
  %66 = load i32, ptr %j2, align 4, !tbaa !92
  %inc43 = add nsw i32 %66, 1
  store i32 %inc43, ptr %j2, align 4, !tbaa !92
  br label %for.cond8, !llvm.loop !319

for.end44:                                        ; preds = %for.cond8
  br label %for.inc45

for.inc45:                                        ; preds = %for.end44
  %67 = load i32, ptr %i1, align 4, !tbaa !92
  %inc46 = add nsw i32 %67, 1
  store i32 %inc46, ptr %i1, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !320

for.end47:                                        ; preds = %for.cond
  %68 = load i32, ptr %left_size, align 4, !tbaa !92
  %tobool = icmp ne i32 %68, 0
  br i1 %tobool, label %if.then48, label %if.end97

if.then48:                                        ; preds = %for.end47
  %69 = load i32, ptr %whole_num_points, align 4, !tbaa !92
  store i32 %69, ptr %bidxm1, align 4, !tbaa !92
  %70 = load i32, ptr %num_points.addr, align 4, !tbaa !92
  store i32 %70, ptr %bidxp1, align 4, !tbaa !92
  store i32 0, ptr %j2, align 4, !tbaa !92
  br label %for.cond49

for.cond49:                                       ; preds = %for.inc94, %if.then48
  %71 = load i32, ptr %j2, align 4, !tbaa !92
  %72 = load i32, ptr %left_size, align 4, !tbaa !92
  %cmp50 = icmp slt i32 %71, %72
  br i1 %cmp50, label %for.body51, label %for.end96

for.body51:                                       ; preds = %for.cond49
  %73 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %74 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %75 = load i32, ptr %j2, align 4, !tbaa !92
  %add52 = add nsw i32 %74, %75
  %idxprom53 = sext i32 %add52 to i64
  %arrayidx54 = getelementptr inbounds i32, ptr %73, i64 %idxprom53
  %76 = load i32, ptr %arrayidx54, align 4, !tbaa !92
  store i32 %76, ptr %ii, align 4, !tbaa !92
  br label %for.cond55

for.cond55:                                       ; preds = %for.inc91, %for.body51
  %77 = load i32, ptr %ii, align 4, !tbaa !92
  %78 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %79 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %80 = load i32, ptr %j2, align 4, !tbaa !92
  %add56 = add nsw i32 %79, %80
  %add57 = add nsw i32 %add56, 1
  %idxprom58 = sext i32 %add57 to i64
  %arrayidx59 = getelementptr inbounds i32, ptr %78, i64 %idxprom58
  %81 = load i32, ptr %arrayidx59, align 4, !tbaa !92
  %cmp60 = icmp slt i32 %77, %81
  br i1 %cmp60, label %for.body61, label %for.end93

for.body61:                                       ; preds = %for.cond55
  %82 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %83 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom62 = sext i32 %83 to i64
  %arrayidx63 = getelementptr inbounds i32, ptr %82, i64 %idxprom62
  %84 = load i32, ptr %arrayidx63, align 4, !tbaa !92
  store i32 %84, ptr %jj, align 4, !tbaa !92
  %85 = load i32, ptr %jj, align 4, !tbaa !92
  %86 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %cmp64 = icmp sge i32 %85, %86
  br i1 %cmp64, label %land.lhs.true65, label %if.end90

land.lhs.true65:                                  ; preds = %for.body61
  %87 = load i32, ptr %jj, align 4, !tbaa !92
  %88 = load i32, ptr %bidxp1, align 4, !tbaa !92
  %cmp66 = icmp slt i32 %87, %88
  br i1 %cmp66, label %land.lhs.true67, label %if.end90

land.lhs.true67:                                  ; preds = %land.lhs.true65
  %89 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %90 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom68 = sext i32 %90 to i64
  %arrayidx69 = getelementptr inbounds double, ptr %89, i64 %idxprom68
  %91 = load double, ptr %arrayidx69, align 8, !tbaa !161
  %cmp70 = fcmp ogt double %91, 0.000000e+00
  br i1 %cmp70, label %cond.true71, label %cond.false74

cond.true71:                                      ; preds = %land.lhs.true67
  %92 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %93 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom72 = sext i32 %93 to i64
  %arrayidx73 = getelementptr inbounds double, ptr %92, i64 %idxprom72
  %94 = load double, ptr %arrayidx73, align 8, !tbaa !161
  br label %cond.end78

cond.false74:                                     ; preds = %land.lhs.true67
  %95 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %96 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom75 = sext i32 %96 to i64
  %arrayidx76 = getelementptr inbounds double, ptr %95, i64 %idxprom75
  %97 = load double, ptr %arrayidx76, align 8, !tbaa !161
  %fneg77 = fneg double %97
  br label %cond.end78

cond.end78:                                       ; preds = %cond.false74, %cond.true71
  %cond79 = phi double [ %94, %cond.true71 ], [ %fneg77, %cond.false74 ]
  %cmp80 = fcmp ogt double %cond79, 0x10000000000000
  br i1 %cmp80, label %if.then81, label %if.end90

if.then81:                                        ; preds = %cond.end78
  %98 = load i32, ptr %j2, align 4, !tbaa !92
  %99 = load i32, ptr %left_size, align 4, !tbaa !92
  %mul82 = mul nsw i32 %98, %99
  %100 = load i32, ptr %jj, align 4, !tbaa !92
  %add83 = add nsw i32 %mul82, %100
  %101 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %sub84 = sub nsw i32 %add83, %101
  store i32 %sub84, ptr %bidx, align 4, !tbaa !92
  %102 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %103 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom85 = sext i32 %103 to i64
  %arrayidx86 = getelementptr inbounds double, ptr %102, i64 %idxprom85
  %104 = load double, ptr %arrayidx86, align 8, !tbaa !161
  %105 = load ptr, ptr %diag_data.addr, align 8, !tbaa !4
  %106 = load i32, ptr %bstart, align 4, !tbaa !92
  %107 = load i32, ptr %bidx, align 4, !tbaa !92
  %add87 = add nsw i32 %106, %107
  %idxprom88 = sext i32 %add87 to i64
  %arrayidx89 = getelementptr inbounds double, ptr %105, i64 %idxprom88
  store double %104, ptr %arrayidx89, align 8, !tbaa !161
  br label %if.end90

if.end90:                                         ; preds = %if.then81, %cond.end78, %land.lhs.true65, %for.body61
  br label %for.inc91

for.inc91:                                        ; preds = %if.end90
  %108 = load i32, ptr %ii, align 4, !tbaa !92
  %inc92 = add nsw i32 %108, 1
  store i32 %inc92, ptr %ii, align 4, !tbaa !92
  br label %for.cond55, !llvm.loop !321

for.end93:                                        ; preds = %for.cond55
  br label %for.inc94

for.inc94:                                        ; preds = %for.end93
  %109 = load i32, ptr %j2, align 4, !tbaa !92
  %inc95 = add nsw i32 %109, 1
  store i32 %inc95, ptr %j2, align 4, !tbaa !92
  br label %for.cond49, !llvm.loop !322

for.end96:                                        ; preds = %for.cond49
  br label %if.end97

if.end97:                                         ; preds = %for.end96, %for.end47
  br label %if.end231

if.else:                                          ; preds = %entry
  store i32 0, ptr %cnt, align 4, !tbaa !92
  store i32 0, ptr %row_offset, align 4, !tbaa !92
  store i32 0, ptr %i1, align 4, !tbaa !92
  br label %for.cond98

for.cond98:                                       ; preds = %for.inc165, %if.else
  %110 = load i32, ptr %i1, align 4, !tbaa !92
  %111 = load i32, ptr %nrows, align 4, !tbaa !92
  %cmp99 = icmp slt i32 %110, %111
  br i1 %cmp99, label %for.body100, label %for.end167

for.body100:                                      ; preds = %for.cond98
  %112 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %113 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom101 = sext i32 %113 to i64
  %arrayidx102 = getelementptr inbounds i32, ptr %112, i64 %idxprom101
  %114 = load i32, ptr %arrayidx102, align 4, !tbaa !92
  %115 = load i32, ptr %point_type.addr, align 4, !tbaa !92
  %cmp103 = icmp eq i32 %114, %115
  br i1 %cmp103, label %if.then104, label %if.else162

if.then104:                                       ; preds = %for.body100
  %116 = load i32, ptr %cnt, align 4, !tbaa !92
  %117 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %div105 = sdiv i32 %116, %117
  store i32 %div105, ptr %bidx, align 4, !tbaa !92
  %118 = load i32, ptr %cnt, align 4, !tbaa !92
  %119 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %rem = srem i32 %118, %119
  store i32 %rem, ptr %ridx, align 4, !tbaa !92
  %120 = load i32, ptr %bidx, align 4, !tbaa !92
  %121 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul106 = mul nsw i32 %120, %121
  store i32 %mul106, ptr %bidxm1, align 4, !tbaa !92
  %122 = load i32, ptr %bidx, align 4, !tbaa !92
  %add107 = add nsw i32 %122, 1
  %123 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul108 = mul nsw i32 %add107, %123
  store i32 %mul108, ptr %bidxp1, align 4, !tbaa !92
  %124 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %125 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom109 = sext i32 %125 to i64
  %arrayidx110 = getelementptr inbounds i32, ptr %124, i64 %idxprom109
  %126 = load i32, ptr %arrayidx110, align 4, !tbaa !92
  store i32 %126, ptr %ii, align 4, !tbaa !92
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc155, %if.then104
  %127 = load i32, ptr %ii, align 4, !tbaa !92
  %128 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %129 = load i32, ptr %i1, align 4, !tbaa !92
  %add112 = add nsw i32 %129, 1
  %idxprom113 = sext i32 %add112 to i64
  %arrayidx114 = getelementptr inbounds i32, ptr %128, i64 %idxprom113
  %130 = load i32, ptr %arrayidx114, align 4, !tbaa !92
  %cmp115 = icmp slt i32 %127, %130
  br i1 %cmp115, label %for.body116, label %for.end157

for.body116:                                      ; preds = %for.cond111
  %131 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %132 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom117 = sext i32 %132 to i64
  %arrayidx118 = getelementptr inbounds i32, ptr %131, i64 %idxprom117
  %133 = load i32, ptr %arrayidx118, align 4, !tbaa !92
  store i32 %133, ptr %jj, align 4, !tbaa !92
  %134 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %135 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom119 = sext i32 %135 to i64
  %arrayidx120 = getelementptr inbounds i32, ptr %134, i64 %idxprom119
  %136 = load i32, ptr %arrayidx120, align 4, !tbaa !92
  %137 = load i32, ptr %point_type.addr, align 4, !tbaa !92
  %cmp121 = icmp eq i32 %136, %137
  br i1 %cmp121, label %if.then122, label %if.end154

if.then122:                                       ; preds = %for.body116
  %138 = load i32, ptr %jj, align 4, !tbaa !92
  %139 = load i32, ptr %row_offset, align 4, !tbaa !92
  %sub123 = sub nsw i32 %138, %139
  %140 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %cmp124 = icmp sge i32 %sub123, %140
  br i1 %cmp124, label %land.lhs.true125, label %if.end153

land.lhs.true125:                                 ; preds = %if.then122
  %141 = load i32, ptr %jj, align 4, !tbaa !92
  %142 = load i32, ptr %row_offset, align 4, !tbaa !92
  %sub126 = sub nsw i32 %141, %142
  %143 = load i32, ptr %bidxp1, align 4, !tbaa !92
  %cmp127 = icmp slt i32 %sub126, %143
  br i1 %cmp127, label %land.lhs.true128, label %if.end153

land.lhs.true128:                                 ; preds = %land.lhs.true125
  %144 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %145 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom129 = sext i32 %145 to i64
  %arrayidx130 = getelementptr inbounds double, ptr %144, i64 %idxprom129
  %146 = load double, ptr %arrayidx130, align 8, !tbaa !161
  %cmp131 = fcmp ogt double %146, 0.000000e+00
  br i1 %cmp131, label %cond.true132, label %cond.false135

cond.true132:                                     ; preds = %land.lhs.true128
  %147 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %148 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom133 = sext i32 %148 to i64
  %arrayidx134 = getelementptr inbounds double, ptr %147, i64 %idxprom133
  %149 = load double, ptr %arrayidx134, align 8, !tbaa !161
  br label %cond.end139

cond.false135:                                    ; preds = %land.lhs.true128
  %150 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %151 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom136 = sext i32 %151 to i64
  %arrayidx137 = getelementptr inbounds double, ptr %150, i64 %idxprom136
  %152 = load double, ptr %arrayidx137, align 8, !tbaa !161
  %fneg138 = fneg double %152
  br label %cond.end139

cond.end139:                                      ; preds = %cond.false135, %cond.true132
  %cond140 = phi double [ %149, %cond.true132 ], [ %fneg138, %cond.false135 ]
  %cmp141 = fcmp ogt double %cond140, 0x10000000000000
  br i1 %cmp141, label %if.then142, label %if.end153

if.then142:                                       ; preds = %cond.end139
  %153 = load i32, ptr %bidx, align 4, !tbaa !92
  %154 = load i32, ptr %bs2, align 4, !tbaa !92
  %mul143 = mul nsw i32 %153, %154
  %155 = load i32, ptr %ridx, align 4, !tbaa !92
  %156 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul144 = mul nsw i32 %155, %156
  %add145 = add nsw i32 %mul143, %mul144
  %157 = load i32, ptr %jj, align 4, !tbaa !92
  %add146 = add nsw i32 %add145, %157
  %158 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %sub147 = sub nsw i32 %add146, %158
  %159 = load i32, ptr %row_offset, align 4, !tbaa !92
  %sub148 = sub nsw i32 %sub147, %159
  store i32 %sub148, ptr %didx, align 4, !tbaa !92
  %160 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %161 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom149 = sext i32 %161 to i64
  %arrayidx150 = getelementptr inbounds double, ptr %160, i64 %idxprom149
  %162 = load double, ptr %arrayidx150, align 8, !tbaa !161
  %163 = load ptr, ptr %diag_data.addr, align 8, !tbaa !4
  %164 = load i32, ptr %didx, align 4, !tbaa !92
  %idxprom151 = sext i32 %164 to i64
  %arrayidx152 = getelementptr inbounds double, ptr %163, i64 %idxprom151
  store double %162, ptr %arrayidx152, align 8, !tbaa !161
  br label %if.end153

if.end153:                                        ; preds = %if.then142, %cond.end139, %land.lhs.true125, %if.then122
  br label %if.end154

if.end154:                                        ; preds = %if.end153, %for.body116
  br label %for.inc155

for.inc155:                                       ; preds = %if.end154
  %165 = load i32, ptr %ii, align 4, !tbaa !92
  %inc156 = add nsw i32 %165, 1
  store i32 %inc156, ptr %ii, align 4, !tbaa !92
  br label %for.cond111, !llvm.loop !323

for.end157:                                       ; preds = %for.cond111
  %166 = load i32, ptr %cnt, align 4, !tbaa !92
  %inc158 = add nsw i32 %166, 1
  store i32 %inc158, ptr %cnt, align 4, !tbaa !92
  %167 = load i32, ptr %whole_num_points, align 4, !tbaa !92
  %cmp159 = icmp eq i32 %inc158, %167
  br i1 %cmp159, label %if.then160, label %if.end161

if.then160:                                       ; preds = %for.end157
  br label %for.end167

if.end161:                                        ; preds = %for.end157
  br label %if.end164

if.else162:                                       ; preds = %for.body100
  %168 = load i32, ptr %row_offset, align 4, !tbaa !92
  %inc163 = add nsw i32 %168, 1
  store i32 %inc163, ptr %row_offset, align 4, !tbaa !92
  br label %if.end164

if.end164:                                        ; preds = %if.else162, %if.end161
  br label %for.inc165

for.inc165:                                       ; preds = %if.end164
  %169 = load i32, ptr %i1, align 4, !tbaa !92
  %inc166 = add nsw i32 %169, 1
  store i32 %inc166, ptr %i1, align 4, !tbaa !92
  br label %for.cond98, !llvm.loop !324

for.end167:                                       ; preds = %if.then160, %for.cond98
  %170 = load i32, ptr %whole_num_points, align 4, !tbaa !92
  store i32 %170, ptr %i1, align 4, !tbaa !92
  br label %for.cond168

for.cond168:                                      ; preds = %for.inc228, %for.end167
  %171 = load i32, ptr %i1, align 4, !tbaa !92
  %172 = load i32, ptr %num_points.addr, align 4, !tbaa !92
  %cmp169 = icmp slt i32 %171, %172
  br i1 %cmp169, label %for.body170, label %for.end230

for.body170:                                      ; preds = %for.cond168
  %173 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %174 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom171 = sext i32 %174 to i64
  %arrayidx172 = getelementptr inbounds i32, ptr %173, i64 %idxprom171
  %175 = load i32, ptr %arrayidx172, align 4, !tbaa !92
  %176 = load i32, ptr %point_type.addr, align 4, !tbaa !92
  %cmp173 = icmp eq i32 %175, %176
  br i1 %cmp173, label %if.then174, label %if.else225

if.then174:                                       ; preds = %for.body170
  %177 = load i32, ptr %num_blocks, align 4, !tbaa !92
  store i32 %177, ptr %bidx, align 4, !tbaa !92
  %178 = load i32, ptr %cnt, align 4, !tbaa !92
  %179 = load i32, ptr %whole_num_points, align 4, !tbaa !92
  %sub175 = sub nsw i32 %178, %179
  store i32 %sub175, ptr %ridx, align 4, !tbaa !92
  %180 = load i32, ptr %whole_num_points, align 4, !tbaa !92
  store i32 %180, ptr %bidxm1, align 4, !tbaa !92
  %181 = load i32, ptr %num_points.addr, align 4, !tbaa !92
  store i32 %181, ptr %bidxp1, align 4, !tbaa !92
  %182 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %183 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom176 = sext i32 %183 to i64
  %arrayidx177 = getelementptr inbounds i32, ptr %182, i64 %idxprom176
  %184 = load i32, ptr %arrayidx177, align 4, !tbaa !92
  store i32 %184, ptr %ii, align 4, !tbaa !92
  br label %for.cond178

for.cond178:                                      ; preds = %for.inc221, %if.then174
  %185 = load i32, ptr %ii, align 4, !tbaa !92
  %186 = load ptr, ptr %A_diag_i, align 8, !tbaa !4
  %187 = load i32, ptr %i1, align 4, !tbaa !92
  %add179 = add nsw i32 %187, 1
  %idxprom180 = sext i32 %add179 to i64
  %arrayidx181 = getelementptr inbounds i32, ptr %186, i64 %idxprom180
  %188 = load i32, ptr %arrayidx181, align 4, !tbaa !92
  %cmp182 = icmp slt i32 %185, %188
  br i1 %cmp182, label %for.body183, label %for.end223

for.body183:                                      ; preds = %for.cond178
  %189 = load ptr, ptr %A_diag_j, align 8, !tbaa !4
  %190 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom184 = sext i32 %190 to i64
  %arrayidx185 = getelementptr inbounds i32, ptr %189, i64 %idxprom184
  %191 = load i32, ptr %arrayidx185, align 4, !tbaa !92
  store i32 %191, ptr %jj, align 4, !tbaa !92
  %192 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %193 = load i32, ptr %jj, align 4, !tbaa !92
  %idxprom186 = sext i32 %193 to i64
  %arrayidx187 = getelementptr inbounds i32, ptr %192, i64 %idxprom186
  %194 = load i32, ptr %arrayidx187, align 4, !tbaa !92
  %195 = load i32, ptr %point_type.addr, align 4, !tbaa !92
  %cmp188 = icmp eq i32 %194, %195
  br i1 %cmp188, label %if.then189, label %if.end220

if.then189:                                       ; preds = %for.body183
  %196 = load i32, ptr %jj, align 4, !tbaa !92
  %197 = load i32, ptr %row_offset, align 4, !tbaa !92
  %sub190 = sub nsw i32 %196, %197
  %198 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %cmp191 = icmp sge i32 %sub190, %198
  br i1 %cmp191, label %land.lhs.true192, label %if.end219

land.lhs.true192:                                 ; preds = %if.then189
  %199 = load i32, ptr %jj, align 4, !tbaa !92
  %200 = load i32, ptr %row_offset, align 4, !tbaa !92
  %sub193 = sub nsw i32 %199, %200
  %201 = load i32, ptr %bidxp1, align 4, !tbaa !92
  %cmp194 = icmp slt i32 %sub193, %201
  br i1 %cmp194, label %land.lhs.true195, label %if.end219

land.lhs.true195:                                 ; preds = %land.lhs.true192
  %202 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %203 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom196 = sext i32 %203 to i64
  %arrayidx197 = getelementptr inbounds double, ptr %202, i64 %idxprom196
  %204 = load double, ptr %arrayidx197, align 8, !tbaa !161
  %cmp198 = fcmp ogt double %204, 0.000000e+00
  br i1 %cmp198, label %cond.true199, label %cond.false202

cond.true199:                                     ; preds = %land.lhs.true195
  %205 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %206 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom200 = sext i32 %206 to i64
  %arrayidx201 = getelementptr inbounds double, ptr %205, i64 %idxprom200
  %207 = load double, ptr %arrayidx201, align 8, !tbaa !161
  br label %cond.end206

cond.false202:                                    ; preds = %land.lhs.true195
  %208 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %209 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom203 = sext i32 %209 to i64
  %arrayidx204 = getelementptr inbounds double, ptr %208, i64 %idxprom203
  %210 = load double, ptr %arrayidx204, align 8, !tbaa !161
  %fneg205 = fneg double %210
  br label %cond.end206

cond.end206:                                      ; preds = %cond.false202, %cond.true199
  %cond207 = phi double [ %207, %cond.true199 ], [ %fneg205, %cond.false202 ]
  %cmp208 = fcmp ogt double %cond207, 0x10000000000000
  br i1 %cmp208, label %if.then209, label %if.end219

if.then209:                                       ; preds = %cond.end206
  %211 = load i32, ptr %bstart, align 4, !tbaa !92
  %212 = load i32, ptr %ridx, align 4, !tbaa !92
  %213 = load i32, ptr %left_size, align 4, !tbaa !92
  %mul210 = mul nsw i32 %212, %213
  %add211 = add nsw i32 %211, %mul210
  %214 = load i32, ptr %jj, align 4, !tbaa !92
  %add212 = add nsw i32 %add211, %214
  %215 = load i32, ptr %bidxm1, align 4, !tbaa !92
  %sub213 = sub nsw i32 %add212, %215
  %216 = load i32, ptr %row_offset, align 4, !tbaa !92
  %sub214 = sub nsw i32 %sub213, %216
  store i32 %sub214, ptr %didx, align 4, !tbaa !92
  %217 = load ptr, ptr %A_diag_data, align 8, !tbaa !4
  %218 = load i32, ptr %ii, align 4, !tbaa !92
  %idxprom215 = sext i32 %218 to i64
  %arrayidx216 = getelementptr inbounds double, ptr %217, i64 %idxprom215
  %219 = load double, ptr %arrayidx216, align 8, !tbaa !161
  %220 = load ptr, ptr %diag_data.addr, align 8, !tbaa !4
  %221 = load i32, ptr %didx, align 4, !tbaa !92
  %idxprom217 = sext i32 %221 to i64
  %arrayidx218 = getelementptr inbounds double, ptr %220, i64 %idxprom217
  store double %219, ptr %arrayidx218, align 8, !tbaa !161
  br label %if.end219

if.end219:                                        ; preds = %if.then209, %cond.end206, %land.lhs.true192, %if.then189
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %for.body183
  br label %for.inc221

for.inc221:                                       ; preds = %if.end220
  %222 = load i32, ptr %ii, align 4, !tbaa !92
  %inc222 = add nsw i32 %222, 1
  store i32 %inc222, ptr %ii, align 4, !tbaa !92
  br label %for.cond178, !llvm.loop !325

for.end223:                                       ; preds = %for.cond178
  %223 = load i32, ptr %cnt, align 4, !tbaa !92
  %inc224 = add nsw i32 %223, 1
  store i32 %inc224, ptr %cnt, align 4, !tbaa !92
  br label %if.end227

if.else225:                                       ; preds = %for.body170
  %224 = load i32, ptr %row_offset, align 4, !tbaa !92
  %inc226 = add nsw i32 %224, 1
  store i32 %inc226, ptr %row_offset, align 4, !tbaa !92
  br label %if.end227

if.end227:                                        ; preds = %if.else225, %for.end223
  br label %for.inc228

for.inc228:                                       ; preds = %if.end227
  %225 = load i32, ptr %i1, align 4, !tbaa !92
  %inc229 = add nsw i32 %225, 1
  store i32 %inc229, ptr %i1, align 4, !tbaa !92
  br label %for.cond168, !llvm.loop !326

for.end230:                                       ; preds = %for.cond168
  br label %if.end231

if.end231:                                        ; preds = %for.end230, %if.end97
  %226 = load i32, ptr %diag_type.addr, align 4, !tbaa !92
  %cmp232 = icmp eq i32 %226, 1
  br i1 %cmp232, label %if.then233, label %if.end267

if.then233:                                       ; preds = %if.end231
  %227 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp234 = icmp sgt i32 %227, 1
  br i1 %cmp234, label %if.then235, label %if.else236

if.then235:                                       ; preds = %if.then233
  %228 = load ptr, ptr %diag_data.addr, align 8, !tbaa !4
  %229 = load i32, ptr %num_points.addr, align 4, !tbaa !92
  %230 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %call = call i32 @hypre_BlockDiagInvLapack(ptr noundef %228, i32 noundef %229, i32 noundef %230)
  br label %if.end266

if.else236:                                       ; preds = %if.then233
  store i32 0, ptr %i1, align 4, !tbaa !92
  br label %for.cond237

for.cond237:                                      ; preds = %for.inc263, %if.else236
  %231 = load i32, ptr %i1, align 4, !tbaa !92
  %232 = load i32, ptr %num_points.addr, align 4, !tbaa !92
  %cmp238 = icmp slt i32 %231, %232
  br i1 %cmp238, label %for.body239, label %for.end265

for.body239:                                      ; preds = %for.cond237
  %233 = load ptr, ptr %diag_data.addr, align 8, !tbaa !4
  %234 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom240 = sext i32 %234 to i64
  %arrayidx241 = getelementptr inbounds double, ptr %233, i64 %idxprom240
  %235 = load double, ptr %arrayidx241, align 8, !tbaa !161
  %cmp242 = fcmp ogt double %235, 0.000000e+00
  br i1 %cmp242, label %cond.true243, label %cond.false246

cond.true243:                                     ; preds = %for.body239
  %236 = load ptr, ptr %diag_data.addr, align 8, !tbaa !4
  %237 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom244 = sext i32 %237 to i64
  %arrayidx245 = getelementptr inbounds double, ptr %236, i64 %idxprom244
  %238 = load double, ptr %arrayidx245, align 8, !tbaa !161
  br label %cond.end250

cond.false246:                                    ; preds = %for.body239
  %239 = load ptr, ptr %diag_data.addr, align 8, !tbaa !4
  %240 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom247 = sext i32 %240 to i64
  %arrayidx248 = getelementptr inbounds double, ptr %239, i64 %idxprom247
  %241 = load double, ptr %arrayidx248, align 8, !tbaa !161
  %fneg249 = fneg double %241
  br label %cond.end250

cond.end250:                                      ; preds = %cond.false246, %cond.true243
  %cond251 = phi double [ %238, %cond.true243 ], [ %fneg249, %cond.false246 ]
  %cmp252 = fcmp olt double %cond251, 0x10000000000000
  br i1 %cmp252, label %if.then253, label %if.else256

if.then253:                                       ; preds = %cond.end250
  %242 = load ptr, ptr %diag_data.addr, align 8, !tbaa !4
  %243 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom254 = sext i32 %243 to i64
  %arrayidx255 = getelementptr inbounds double, ptr %242, i64 %idxprom254
  store double 0.000000e+00, ptr %arrayidx255, align 8, !tbaa !161
  br label %if.end262

if.else256:                                       ; preds = %cond.end250
  %244 = load ptr, ptr %diag_data.addr, align 8, !tbaa !4
  %245 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom257 = sext i32 %245 to i64
  %arrayidx258 = getelementptr inbounds double, ptr %244, i64 %idxprom257
  %246 = load double, ptr %arrayidx258, align 8, !tbaa !161
  %div259 = fdiv double 1.000000e+00, %246
  %247 = load ptr, ptr %diag_data.addr, align 8, !tbaa !4
  %248 = load i32, ptr %i1, align 4, !tbaa !92
  %idxprom260 = sext i32 %248 to i64
  %arrayidx261 = getelementptr inbounds double, ptr %247, i64 %idxprom260
  store double %div259, ptr %arrayidx261, align 8, !tbaa !161
  br label %if.end262

if.end262:                                        ; preds = %if.else256, %if.then253
  br label %for.inc263

for.inc263:                                       ; preds = %if.end262
  %249 = load i32, ptr %i1, align 4, !tbaa !92
  %inc264 = add nsw i32 %249, 1
  store i32 %inc264, ptr %i1, align 4, !tbaa !92
  br label %for.cond237, !llvm.loop !327

for.end265:                                       ; preds = %for.cond237
  br label %if.end266

if.end266:                                        ; preds = %for.end265, %if.then235
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %if.end231
  %250 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 4, ptr %left_size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_blocks) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %bs2) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %bstart) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %cnt) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %whole_num_points) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %row_offset) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %didx) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ridx) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %bidxp1) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %bidxm1) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %bidx) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %jj) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %ii) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j2) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i1) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nrows) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag) #6
  ret i32 %250
}

; Function Attrs: nounwind uwtable
define i32 @hypre_ParCSRMatrixBlockDiagMatrixHost(ptr noundef %A, i32 noundef %blk_size, i32 noundef %point_type, ptr noundef %CF_marker, i32 noundef %diag_type, ptr noundef %B_ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %A.addr = alloca ptr, align 8
  %blk_size.addr = alloca i32, align 4
  %point_type.addr = alloca i32, align 4
  %CF_marker.addr = alloca ptr, align 8
  %diag_type.addr = alloca i32, align 4
  %B_ptr.addr = alloca ptr, align 8
  %comm = alloca ptr, align 8
  %row_starts_A = alloca ptr, align 8
  %num_rows_A = alloca i32, align 4
  %A_diag = alloca ptr, align 8
  %A_diag_num_rows = alloca i32, align 4
  %par_B = alloca ptr, align 8
  %num_rows_B = alloca i32, align 4
  %row_starts_B = alloca [2 x i32], align 4
  %B_diag = alloca ptr, align 8
  %B_diag_num_rows = alloca i32, align 4
  %B_diag_size = alloca i32, align 4
  %B_diag_i = alloca ptr, align 8
  %B_diag_j = alloca ptr, align 8
  %B_diag_data = alloca ptr, align 8
  %num_rows_big = alloca i32, align 4
  %scan_recv = alloca i32, align 4
  %num_procs = alloca i32, align 4
  %my_id = alloca i32, align 4
  %nb2 = alloca i32, align 4
  %num_blocks = alloca i32, align 4
  %num_left = alloca i32, align 4
  %bidx = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  store i32 %point_type, ptr %point_type.addr, align 4, !tbaa !92
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store i32 %diag_type, ptr %diag_type.addr, align 4, !tbaa !92
  store ptr %B_ptr, ptr %B_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %comm) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %comm1 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %comm1, align 8, !tbaa !160
  store ptr %1, ptr %comm, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %row_starts_A) #6
  %2 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %row_starts = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %2, i32 0, i32 14
  %arraydecay = getelementptr inbounds [2 x i32], ptr %row_starts, i64 0, i64 0
  store ptr %arraydecay, ptr %row_starts_A, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_rows_A) #6
  %3 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %global_num_rows = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %3, i32 0, i32 1
  %4 = load i32, ptr %global_num_rows, align 8, !tbaa !171
  store i32 %4, ptr %num_rows_A, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag) #6
  %5 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %5, i32 0, i32 8
  %6 = load ptr, ptr %diag, align 8, !tbaa !149
  store ptr %6, ptr %A_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %A_diag_num_rows) #6
  %7 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %7, i32 0, i32 3
  %8 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %8, ptr %A_diag_num_rows, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %par_B) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_rows_B) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %row_starts_B) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %B_diag) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %B_diag_num_rows) #6
  store i32 0, ptr %B_diag_num_rows, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %B_diag_size) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %B_diag_i) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %B_diag_j) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %B_diag_data) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_rows_big) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %scan_recv) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %nb2) #6
  %9 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %10 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul = mul nsw i32 %9, %10
  store i32 %mul, ptr %nb2, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_blocks) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_left) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %bidx) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %k) #6
  %11 = load ptr, ptr %comm, align 8, !tbaa !4
  %call = call i32 @hypre_MPI_Comm_rank(ptr noundef %11, ptr noundef %my_id)
  %12 = load ptr, ptr %comm, align 8, !tbaa !4
  %call2 = call i32 @hypre_MPI_Comm_size(ptr noundef %12, ptr noundef %num_procs)
  %13 = load i32, ptr %num_rows_A, align 4, !tbaa !92
  %cmp = icmp sgt i32 %13, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %14 = load i32, ptr %num_rows_A, align 4, !tbaa !92
  %15 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp3 = icmp slt i32 %14, %15
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 4756, i32 noundef 1, ptr noundef @.str.11)
  %16 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %16, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true, %entry
  %17 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %cmp4 = icmp eq ptr %17, null
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end
  %18 = load i32, ptr %A_diag_num_rows, align 4, !tbaa !92
  store i32 %18, ptr %B_diag_num_rows, align 4, !tbaa !92
  br label %if.end8

if.else:                                          ; preds = %if.end
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %20 = load i32, ptr %A_diag_num_rows, align 4, !tbaa !92
  %cmp6 = icmp slt i32 %19, %20
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %22 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %22 to i64
  %arrayidx = getelementptr inbounds i32, ptr %21, i64 %idxprom
  %23 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %24 = load i32, ptr %point_type.addr, align 4, !tbaa !92
  %cmp7 = icmp eq i32 %23, %24
  %25 = zext i1 %cmp7 to i64
  %cond = select i1 %cmp7, i32 1, i32 0
  %26 = load i32, ptr %B_diag_num_rows, align 4, !tbaa !92
  %add = add nsw i32 %26, %cond
  store i32 %add, ptr %B_diag_num_rows, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %27 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %27, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !328

for.end:                                          ; preds = %for.cond
  br label %if.end8

if.end8:                                          ; preds = %for.end, %if.then5
  %28 = load i32, ptr %B_diag_num_rows, align 4, !tbaa !92
  %29 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %div = sdiv i32 %28, %29
  store i32 %div, ptr %num_blocks, align 4, !tbaa !92
  %30 = load i32, ptr %B_diag_num_rows, align 4, !tbaa !92
  %31 = load i32, ptr %num_blocks, align 4, !tbaa !92
  %32 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul9 = mul nsw i32 %31, %32
  %sub = sub nsw i32 %30, %mul9
  store i32 %sub, ptr %num_left, align 4, !tbaa !92
  %33 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %34 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %35 = load i32, ptr %num_blocks, align 4, !tbaa !92
  %mul10 = mul nsw i32 %34, %35
  %mul11 = mul nsw i32 %33, %mul10
  %36 = load i32, ptr %num_left, align 4, !tbaa !92
  %37 = load i32, ptr %num_left, align 4, !tbaa !92
  %mul12 = mul nsw i32 %36, %37
  %add13 = add nsw i32 %mul11, %mul12
  store i32 %add13, ptr %B_diag_size, align 4, !tbaa !92
  %38 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %tobool = icmp ne ptr %38, null
  br i1 %tobool, label %if.then14, label %if.else26

if.then14:                                        ; preds = %if.end8
  %39 = load i32, ptr %B_diag_num_rows, align 4, !tbaa !92
  store i32 %39, ptr %num_rows_big, align 4, !tbaa !92
  %40 = load ptr, ptr %comm, align 8, !tbaa !4
  %call15 = call i32 @hypre_MPI_Scan(ptr noundef %num_rows_big, ptr noundef %scan_recv, i32 noundef 1, ptr noundef @ompi_mpi_int, ptr noundef @ompi_mpi_op_sum, ptr noundef %40)
  %41 = load i32, ptr %scan_recv, align 4, !tbaa !92
  %42 = load i32, ptr %num_rows_big, align 4, !tbaa !92
  %sub16 = sub nsw i32 %41, %42
  %arrayidx17 = getelementptr inbounds [2 x i32], ptr %row_starts_B, i64 0, i64 0
  store i32 %sub16, ptr %arrayidx17, align 4, !tbaa !92
  %43 = load i32, ptr %scan_recv, align 4, !tbaa !92
  %arrayidx18 = getelementptr inbounds [2 x i32], ptr %row_starts_B, i64 0, i64 1
  store i32 %43, ptr %arrayidx18, align 4, !tbaa !92
  %44 = load i32, ptr %my_id, align 4, !tbaa !92
  %45 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub19 = sub nsw i32 %45, 1
  %cmp20 = icmp eq i32 %44, %sub19
  br i1 %cmp20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.then14
  %arrayidx22 = getelementptr inbounds [2 x i32], ptr %row_starts_B, i64 0, i64 1
  %46 = load i32, ptr %arrayidx22, align 4, !tbaa !92
  store i32 %46, ptr %num_rows_B, align 4, !tbaa !92
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.then14
  %47 = load i32, ptr %num_procs, align 4, !tbaa !92
  %sub24 = sub nsw i32 %47, 1
  %48 = load ptr, ptr %comm, align 8, !tbaa !4
  %call25 = call i32 @hypre_MPI_Bcast(ptr noundef %num_rows_B, i32 noundef 1, ptr noundef @ompi_mpi_int, i32 noundef %sub24, ptr noundef %48)
  br label %if.end31

if.else26:                                        ; preds = %if.end8
  %49 = load ptr, ptr %row_starts_A, align 8, !tbaa !4
  %arrayidx27 = getelementptr inbounds i32, ptr %49, i64 0
  %50 = load i32, ptr %arrayidx27, align 4, !tbaa !92
  %arrayidx28 = getelementptr inbounds [2 x i32], ptr %row_starts_B, i64 0, i64 0
  store i32 %50, ptr %arrayidx28, align 4, !tbaa !92
  %51 = load ptr, ptr %row_starts_A, align 8, !tbaa !4
  %arrayidx29 = getelementptr inbounds i32, ptr %51, i64 1
  %52 = load i32, ptr %arrayidx29, align 4, !tbaa !92
  %arrayidx30 = getelementptr inbounds [2 x i32], ptr %row_starts_B, i64 0, i64 1
  store i32 %52, ptr %arrayidx30, align 4, !tbaa !92
  %53 = load i32, ptr %num_rows_A, align 4, !tbaa !92
  store i32 %53, ptr %num_rows_B, align 4, !tbaa !92
  br label %if.end31

if.end31:                                         ; preds = %if.else26, %if.end23
  %54 = load ptr, ptr %comm, align 8, !tbaa !4
  %55 = load i32, ptr %num_rows_B, align 4, !tbaa !92
  %56 = load i32, ptr %num_rows_B, align 4, !tbaa !92
  %arraydecay32 = getelementptr inbounds [2 x i32], ptr %row_starts_B, i64 0, i64 0
  %arraydecay33 = getelementptr inbounds [2 x i32], ptr %row_starts_B, i64 0, i64 0
  %57 = load i32, ptr %B_diag_size, align 4, !tbaa !92
  %call34 = call ptr @hypre_ParCSRMatrixCreate(ptr noundef %54, i32 noundef %55, i32 noundef %56, ptr noundef %arraydecay32, ptr noundef %arraydecay33, i32 noundef 0, i32 noundef %57, i32 noundef 0)
  store ptr %call34, ptr %par_B, align 8, !tbaa !4
  %58 = load ptr, ptr %par_B, align 8, !tbaa !4
  %call35 = call i32 @hypre_ParCSRMatrixInitialize_v2(ptr noundef %58, i32 noundef 0)
  %59 = load ptr, ptr %par_B, align 8, !tbaa !4
  %diag36 = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %59, i32 0, i32 8
  %60 = load ptr, ptr %diag36, align 8, !tbaa !149
  store ptr %60, ptr %B_diag, align 8, !tbaa !4
  %61 = load ptr, ptr %B_diag, align 8, !tbaa !4
  %i37 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %61, i32 0, i32 0
  %62 = load ptr, ptr %i37, align 8, !tbaa !163
  store ptr %62, ptr %B_diag_i, align 8, !tbaa !4
  %63 = load ptr, ptr %B_diag, align 8, !tbaa !4
  %j38 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %63, i32 0, i32 1
  %64 = load ptr, ptr %j38, align 8, !tbaa !164
  store ptr %64, ptr %B_diag_j, align 8, !tbaa !4
  %65 = load ptr, ptr %B_diag, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %65, i32 0, i32 10
  %66 = load ptr, ptr %data, align 8, !tbaa !165
  store ptr %66, ptr %B_diag_data, align 8, !tbaa !4
  %67 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %68 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %69 = load i32, ptr %B_diag_num_rows, align 4, !tbaa !92
  %70 = load i32, ptr %point_type.addr, align 4, !tbaa !92
  %71 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %72 = load i32, ptr %B_diag_size, align 4, !tbaa !92
  %73 = load i32, ptr %diag_type.addr, align 4, !tbaa !92
  %74 = load ptr, ptr %B_diag_data, align 8, !tbaa !4
  %call39 = call i32 @hypre_ParCSRMatrixExtractBlockDiagHost(ptr noundef %67, i32 noundef %68, i32 noundef %69, i32 noundef %70, ptr noundef %71, i32 noundef %72, i32 noundef %73, ptr noundef %74)
  %75 = load i32, ptr %B_diag_size, align 4, !tbaa !92
  %76 = load ptr, ptr %B_diag_i, align 8, !tbaa !4
  %77 = load i32, ptr %B_diag_num_rows, align 4, !tbaa !92
  %idxprom40 = sext i32 %77 to i64
  %arrayidx41 = getelementptr inbounds i32, ptr %76, i64 %idxprom40
  store i32 %75, ptr %arrayidx41, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc72, %if.end31
  %78 = load i32, ptr %i, align 4, !tbaa !92
  %79 = load i32, ptr %num_blocks, align 4, !tbaa !92
  %cmp43 = icmp slt i32 %78, %79
  br i1 %cmp43, label %for.body44, label %for.end74

for.body44:                                       ; preds = %for.cond42
  store i32 0, ptr %k, align 4, !tbaa !92
  br label %for.cond45

for.cond45:                                       ; preds = %for.inc69, %for.body44
  %80 = load i32, ptr %k, align 4, !tbaa !92
  %81 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp46 = icmp slt i32 %80, %81
  br i1 %cmp46, label %for.body47, label %for.end71

for.body47:                                       ; preds = %for.cond45
  %82 = load i32, ptr %i, align 4, !tbaa !92
  %83 = load i32, ptr %nb2, align 4, !tbaa !92
  %mul48 = mul nsw i32 %82, %83
  %84 = load i32, ptr %k, align 4, !tbaa !92
  %85 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul49 = mul nsw i32 %84, %85
  %add50 = add nsw i32 %mul48, %mul49
  %86 = load ptr, ptr %B_diag_i, align 8, !tbaa !4
  %87 = load i32, ptr %i, align 4, !tbaa !92
  %88 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul51 = mul nsw i32 %87, %88
  %89 = load i32, ptr %k, align 4, !tbaa !92
  %add52 = add nsw i32 %mul51, %89
  %idxprom53 = sext i32 %add52 to i64
  %arrayidx54 = getelementptr inbounds i32, ptr %86, i64 %idxprom53
  store i32 %add50, ptr %arrayidx54, align 4, !tbaa !92
  store i32 0, ptr %j, align 4, !tbaa !92
  br label %for.cond55

for.cond55:                                       ; preds = %for.inc66, %for.body47
  %90 = load i32, ptr %j, align 4, !tbaa !92
  %91 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %cmp56 = icmp slt i32 %90, %91
  br i1 %cmp56, label %for.body57, label %for.end68

for.body57:                                       ; preds = %for.cond55
  %92 = load i32, ptr %i, align 4, !tbaa !92
  %93 = load i32, ptr %nb2, align 4, !tbaa !92
  %mul58 = mul nsw i32 %92, %93
  %94 = load i32, ptr %k, align 4, !tbaa !92
  %95 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul59 = mul nsw i32 %94, %95
  %add60 = add nsw i32 %mul58, %mul59
  %96 = load i32, ptr %j, align 4, !tbaa !92
  %add61 = add nsw i32 %add60, %96
  store i32 %add61, ptr %bidx, align 4, !tbaa !92
  %97 = load i32, ptr %i, align 4, !tbaa !92
  %98 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul62 = mul nsw i32 %97, %98
  %99 = load i32, ptr %j, align 4, !tbaa !92
  %add63 = add nsw i32 %mul62, %99
  %100 = load ptr, ptr %B_diag_j, align 8, !tbaa !4
  %101 = load i32, ptr %bidx, align 4, !tbaa !92
  %idxprom64 = sext i32 %101 to i64
  %arrayidx65 = getelementptr inbounds i32, ptr %100, i64 %idxprom64
  store i32 %add63, ptr %arrayidx65, align 4, !tbaa !92
  br label %for.inc66

for.inc66:                                        ; preds = %for.body57
  %102 = load i32, ptr %j, align 4, !tbaa !92
  %inc67 = add nsw i32 %102, 1
  store i32 %inc67, ptr %j, align 4, !tbaa !92
  br label %for.cond55, !llvm.loop !329

for.end68:                                        ; preds = %for.cond55
  br label %for.inc69

for.inc69:                                        ; preds = %for.end68
  %103 = load i32, ptr %k, align 4, !tbaa !92
  %inc70 = add nsw i32 %103, 1
  store i32 %inc70, ptr %k, align 4, !tbaa !92
  br label %for.cond45, !llvm.loop !330

for.end71:                                        ; preds = %for.cond45
  br label %for.inc72

for.inc72:                                        ; preds = %for.end71
  %104 = load i32, ptr %i, align 4, !tbaa !92
  %inc73 = add nsw i32 %104, 1
  store i32 %inc73, ptr %i, align 4, !tbaa !92
  br label %for.cond42, !llvm.loop !331

for.end74:                                        ; preds = %for.cond42
  store i32 0, ptr %k, align 4, !tbaa !92
  br label %for.cond75

for.cond75:                                       ; preds = %for.inc99, %for.end74
  %105 = load i32, ptr %k, align 4, !tbaa !92
  %106 = load i32, ptr %num_left, align 4, !tbaa !92
  %cmp76 = icmp slt i32 %105, %106
  br i1 %cmp76, label %for.body77, label %for.end101

for.body77:                                       ; preds = %for.cond75
  %107 = load i32, ptr %num_blocks, align 4, !tbaa !92
  %108 = load i32, ptr %nb2, align 4, !tbaa !92
  %mul78 = mul nsw i32 %107, %108
  %109 = load i32, ptr %k, align 4, !tbaa !92
  %110 = load i32, ptr %num_left, align 4, !tbaa !92
  %mul79 = mul nsw i32 %109, %110
  %add80 = add nsw i32 %mul78, %mul79
  %111 = load ptr, ptr %B_diag_i, align 8, !tbaa !4
  %112 = load i32, ptr %num_blocks, align 4, !tbaa !92
  %113 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul81 = mul nsw i32 %112, %113
  %114 = load i32, ptr %k, align 4, !tbaa !92
  %add82 = add nsw i32 %mul81, %114
  %idxprom83 = sext i32 %add82 to i64
  %arrayidx84 = getelementptr inbounds i32, ptr %111, i64 %idxprom83
  store i32 %add80, ptr %arrayidx84, align 4, !tbaa !92
  store i32 0, ptr %j, align 4, !tbaa !92
  br label %for.cond85

for.cond85:                                       ; preds = %for.inc96, %for.body77
  %115 = load i32, ptr %j, align 4, !tbaa !92
  %116 = load i32, ptr %num_left, align 4, !tbaa !92
  %cmp86 = icmp slt i32 %115, %116
  br i1 %cmp86, label %for.body87, label %for.end98

for.body87:                                       ; preds = %for.cond85
  %117 = load i32, ptr %num_blocks, align 4, !tbaa !92
  %118 = load i32, ptr %nb2, align 4, !tbaa !92
  %mul88 = mul nsw i32 %117, %118
  %119 = load i32, ptr %k, align 4, !tbaa !92
  %120 = load i32, ptr %num_left, align 4, !tbaa !92
  %mul89 = mul nsw i32 %119, %120
  %add90 = add nsw i32 %mul88, %mul89
  %121 = load i32, ptr %j, align 4, !tbaa !92
  %add91 = add nsw i32 %add90, %121
  store i32 %add91, ptr %bidx, align 4, !tbaa !92
  %122 = load i32, ptr %num_blocks, align 4, !tbaa !92
  %123 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %mul92 = mul nsw i32 %122, %123
  %124 = load i32, ptr %j, align 4, !tbaa !92
  %add93 = add nsw i32 %mul92, %124
  %125 = load ptr, ptr %B_diag_j, align 8, !tbaa !4
  %126 = load i32, ptr %bidx, align 4, !tbaa !92
  %idxprom94 = sext i32 %126 to i64
  %arrayidx95 = getelementptr inbounds i32, ptr %125, i64 %idxprom94
  store i32 %add93, ptr %arrayidx95, align 4, !tbaa !92
  br label %for.inc96

for.inc96:                                        ; preds = %for.body87
  %127 = load i32, ptr %j, align 4, !tbaa !92
  %inc97 = add nsw i32 %127, 1
  store i32 %inc97, ptr %j, align 4, !tbaa !92
  br label %for.cond85, !llvm.loop !332

for.end98:                                        ; preds = %for.cond85
  br label %for.inc99

for.inc99:                                        ; preds = %for.end98
  %128 = load i32, ptr %k, align 4, !tbaa !92
  %inc100 = add nsw i32 %128, 1
  store i32 %inc100, ptr %k, align 4, !tbaa !92
  br label %for.cond75, !llvm.loop !333

for.end101:                                       ; preds = %for.cond75
  %129 = load ptr, ptr %par_B, align 8, !tbaa !4
  %130 = load ptr, ptr %B_ptr.addr, align 8, !tbaa !4
  store ptr %129, ptr %130, align 8, !tbaa !4
  %131 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %131, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end101, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %k) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %bidx) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_left) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_blocks) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %nb2) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %my_id) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_procs) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %scan_recv) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_rows_big) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %B_diag_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %B_diag_j) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %B_diag_i) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %B_diag_size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %B_diag_num_rows) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %B_diag) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %row_starts_B) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_rows_B) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %par_B) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %A_diag_num_rows) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_rows_A) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %row_starts_A) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %comm) #6
  %132 = load i32, ptr %retval, align 4
  ret i32 %132
}

declare i32 @hypre_MPI_Scan(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBlockRelaxSetup(ptr noundef %A, i32 noundef %blk_size, ptr noundef %diaginvptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %blk_size.addr = alloca i32, align 4
  %diaginvptr.addr = alloca ptr, align 8
  %A_diag = alloca ptr, align 8
  %num_rows = alloca i32, align 4
  %num_blocks = alloca i32, align 4
  %diag_size = alloca i32, align 4
  %diaginv = alloca ptr, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  store ptr %diaginvptr, ptr %diaginvptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %A_diag) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 8
  %1 = load ptr, ptr %diag, align 8, !tbaa !149
  store ptr %1, ptr %A_diag, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_rows) #6
  %2 = load ptr, ptr %A_diag, align 8, !tbaa !4
  %num_rows1 = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %2, i32 0, i32 3
  %3 = load i32, ptr %num_rows1, align 8, !tbaa !151
  store i32 %3, ptr %num_rows, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %num_blocks) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %diag_size) #6
  call void @llvm.lifetime.start.p0(i64 8, ptr %diaginv) #6
  %4 = load ptr, ptr %diaginvptr.addr, align 8, !tbaa !4
  %5 = load ptr, ptr %4, align 8, !tbaa !4
  store ptr %5, ptr %diaginv, align 8, !tbaa !4
  %6 = load i32, ptr %num_rows, align 4, !tbaa !92
  %sub = sub nsw i32 %6, 1
  %7 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %div = sdiv i32 %sub, %7
  %add = add nsw i32 1, %div
  store i32 %add, ptr %num_blocks, align 4, !tbaa !92
  %8 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %9 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %10 = load i32, ptr %num_blocks, align 4, !tbaa !92
  %mul = mul nsw i32 %9, %10
  %mul2 = mul nsw i32 %8, %mul
  store i32 %mul2, ptr %diag_size, align 4, !tbaa !92
  %11 = load ptr, ptr %diaginv, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %11, i32 noundef 0)
  store ptr null, ptr %diaginv, align 8, !tbaa !4
  %12 = load i32, ptr %diag_size, align 4, !tbaa !92
  %conv = sext i32 %12 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 8, i32 noundef 0)
  store ptr %call, ptr %diaginv, align 8, !tbaa !4
  %13 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %14 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %15 = load i32, ptr %num_rows, align 4, !tbaa !92
  %16 = load i32, ptr %diag_size, align 4, !tbaa !92
  %17 = load ptr, ptr %diaginv, align 8, !tbaa !4
  %call3 = call i32 @hypre_ParCSRMatrixExtractBlockDiagHost(ptr noundef %13, i32 noundef %14, i32 noundef %15, i32 noundef 0, ptr noundef null, i32 noundef %16, i32 noundef 1, ptr noundef %17)
  %18 = load ptr, ptr %diaginv, align 8, !tbaa !4
  %19 = load ptr, ptr %diaginvptr.addr, align 8, !tbaa !4
  store ptr %18, ptr %19, align 8, !tbaa !4
  %20 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %diaginv) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %diag_size) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_blocks) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %num_rows) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %A_diag) #6
  ret i32 %20
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetFSolver(ptr noundef %mgr_vdata, ptr noundef %fine_grid_solver_solve, ptr noundef %fine_grid_solver_setup, ptr noundef %fsolver) #0 {
entry:
  %retval = alloca i32, align 4
  %mgr_vdata.addr = alloca ptr, align 8
  %fine_grid_solver_solve.addr = alloca ptr, align 8
  %fine_grid_solver_setup.addr = alloca ptr, align 8
  %fsolver.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %aff_solver = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %fine_grid_solver_solve, ptr %fine_grid_solver_solve.addr, align 8, !tbaa !4
  store ptr %fine_grid_solver_setup, ptr %fine_grid_solver_setup.addr, align 8, !tbaa !4
  store ptr %fsolver, ptr %fsolver.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 5224, i32 noundef 12, ptr noundef null)
  %2 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %2, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 7
  %4 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %4, ptr %max_num_coarse_levels, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %aff_solver) #6
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %aff_solver2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 23
  %6 = load ptr, ptr %aff_solver2, align 8, !tbaa !27
  store ptr %6, ptr %aff_solver, align 8, !tbaa !4
  %7 = load ptr, ptr %aff_solver, align 8, !tbaa !4
  %cmp = icmp eq ptr %7, null
  br i1 %cmp, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %8 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %8 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 8, i32 noundef 0)
  store ptr %call, ptr %aff_solver, align 8, !tbaa !4
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %9 = load ptr, ptr %fsolver.addr, align 8, !tbaa !4
  %10 = load ptr, ptr %aff_solver, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds ptr, ptr %10, i64 0
  store ptr %9, ptr %arrayidx, align 8, !tbaa !4
  %11 = load ptr, ptr %fine_grid_solver_solve.addr, align 8, !tbaa !4
  %12 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %fine_grid_solver_solve5 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %12, i32 0, i32 25
  store ptr %11, ptr %fine_grid_solver_solve5, align 8, !tbaa !29
  %13 = load ptr, ptr %fine_grid_solver_setup.addr, align 8, !tbaa !4
  %14 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %fine_grid_solver_setup6 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %14, i32 0, i32 24
  store ptr %13, ptr %fine_grid_solver_setup6, align 8, !tbaa !28
  %15 = load ptr, ptr %aff_solver, align 8, !tbaa !4
  %16 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %aff_solver7 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %16, i32 0, i32 23
  store ptr %15, ptr %aff_solver7, align 8, !tbaa !27
  %17 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %fsolver_mode = getelementptr inbounds %struct.hypre_ParMGRData, ptr %17, i32 0, i32 52
  store i32 0, ptr %fsolver_mode, align 4, !tbaa !49
  %18 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %18, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %aff_solver) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  %19 = load i32, ptr %retval, align 4
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetCoarseSolver(ptr noundef %mgr_vdata, ptr noundef %coarse_grid_solver_solve, ptr noundef %coarse_grid_solver_setup, ptr noundef %coarse_grid_solver) #0 {
entry:
  %retval = alloca i32, align 4
  %mgr_vdata.addr = alloca ptr, align 8
  %coarse_grid_solver_solve.addr = alloca ptr, align 8
  %coarse_grid_solver_setup.addr = alloca ptr, align 8
  %coarse_grid_solver.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %coarse_grid_solver_solve, ptr %coarse_grid_solver_solve.addr, align 8, !tbaa !4
  store ptr %coarse_grid_solver_setup, ptr %coarse_grid_solver_setup.addr, align 8, !tbaa !4
  store ptr %coarse_grid_solver, ptr %coarse_grid_solver.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 5257, i32 noundef 12, ptr noundef null)
  %2 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %2, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %coarse_grid_solver_solve.addr, align 8, !tbaa !4
  %4 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_grid_solver_solve1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %4, i32 0, i32 50
  store ptr %3, ptr %coarse_grid_solver_solve1, align 8, !tbaa !47
  %5 = load ptr, ptr %coarse_grid_solver_setup.addr, align 8, !tbaa !4
  %6 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_grid_solver_setup2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %6, i32 0, i32 49
  store ptr %5, ptr %coarse_grid_solver_setup2, align 8, !tbaa !46
  %7 = load ptr, ptr %coarse_grid_solver.addr, align 8, !tbaa !4
  %8 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %coarse_grid_solver3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %8, i32 0, i32 48
  store ptr %7, ptr %coarse_grid_solver3, align 8, !tbaa !45
  %9 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %use_default_cgrid_solver = getelementptr inbounds %struct.hypre_ParMGRData, ptr %9, i32 0, i32 51
  store i32 0, ptr %use_default_cgrid_solver, align 8, !tbaa !48
  %10 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %10, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  %11 = load i32, ptr %retval, align 4
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetMaxCoarseLevels(ptr noundef %mgr_vdata, i32 noundef %maxcoarselevs) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %maxcoarselevs.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %maxcoarselevs, ptr %maxcoarselevs.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %maxcoarselevs.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 7
  store i32 %1, ptr %max_num_coarse_levels, align 8, !tbaa !15
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetBlockSize(ptr noundef %mgr_vdata, i32 noundef %bsize) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %bsize.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %bsize, ptr %bsize.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %bsize.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_size = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 0
  store i32 %1, ptr %block_size, align 8, !tbaa !8
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetRelaxType(ptr noundef %mgr_vdata, i32 noundef %relax_type) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %relax_type.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %relax_type, ptr %relax_type.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %relax_type.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %relax_type1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 40
  store i32 %1, ptr %relax_type1, align 8, !tbaa !53
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetNumRelaxSweeps(ptr noundef %mgr_vdata, i32 noundef %nsweeps) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %nsweeps.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %num_relax_sweeps3 = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %nsweeps, ptr %nsweeps.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_relax_sweeps = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 47
  %4 = load ptr, ptr %num_relax_sweeps, align 8, !tbaa !56
  call void @hypre_Free(ptr noundef %4, i32 noundef 0)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_relax_sweeps2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 47
  store ptr null, ptr %num_relax_sweeps2, align 8, !tbaa !56
  call void @llvm.lifetime.start.p0(i64 8, ptr %num_relax_sweeps3) #6
  %6 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %6 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %num_relax_sweeps3, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, ptr %i, align 4, !tbaa !92
  %8 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp = icmp slt i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32, ptr %nsweeps.addr, align 4, !tbaa !92
  %10 = load ptr, ptr %num_relax_sweeps3, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom
  store i32 %9, ptr %arrayidx, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %12, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !334

for.end:                                          ; preds = %for.cond
  %13 = load ptr, ptr %num_relax_sweeps3, align 8, !tbaa !4
  %14 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_relax_sweeps5 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %14, i32 0, i32 47
  store ptr %13, ptr %num_relax_sweeps5, align 8, !tbaa !56
  %15 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %num_relax_sweeps3) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetLevelNumRelaxSweeps(ptr noundef %mgr_vdata, ptr noundef %level_nsweeps) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %level_nsweeps.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %num_relax_sweeps3 = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %level_nsweeps, ptr %level_nsweeps.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_relax_sweeps = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 47
  %4 = load ptr, ptr %num_relax_sweeps, align 8, !tbaa !56
  call void @hypre_Free(ptr noundef %4, i32 noundef 0)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_relax_sweeps2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 47
  store ptr null, ptr %num_relax_sweeps2, align 8, !tbaa !56
  call void @llvm.lifetime.start.p0(i64 8, ptr %num_relax_sweeps3) #6
  %6 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %6 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %num_relax_sweeps3, align 8, !tbaa !4
  %7 = load ptr, ptr %level_nsweeps.addr, align 8, !tbaa !4
  %cmp = icmp ne ptr %7, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp5 = icmp slt i32 %8, %9
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %level_nsweeps.addr, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom
  %12 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %13 = load ptr, ptr %num_relax_sweeps3, align 8, !tbaa !4
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom7 = sext i32 %14 to i64
  %arrayidx8 = getelementptr inbounds i32, ptr %13, i64 %idxprom7
  store i32 %12, ptr %arrayidx8, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !335

for.end:                                          ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc15, %if.else
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %17 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp10 = icmp slt i32 %16, %17
  br i1 %cmp10, label %for.body12, label %for.end17

for.body12:                                       ; preds = %for.cond9
  %18 = load ptr, ptr %num_relax_sweeps3, align 8, !tbaa !4
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom13 = sext i32 %19 to i64
  %arrayidx14 = getelementptr inbounds i32, ptr %18, i64 %idxprom13
  store i32 0, ptr %arrayidx14, align 4, !tbaa !92
  br label %for.inc15

for.inc15:                                        ; preds = %for.body12
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %inc16 = add nsw i32 %20, 1
  store i32 %inc16, ptr %i, align 4, !tbaa !92
  br label %for.cond9, !llvm.loop !336

for.end17:                                        ; preds = %for.cond9
  br label %if.end

if.end:                                           ; preds = %for.end17, %for.end
  %21 = load ptr, ptr %num_relax_sweeps3, align 8, !tbaa !4
  %22 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_relax_sweeps18 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %22, i32 0, i32 47
  store ptr %21, ptr %num_relax_sweeps18, align 8, !tbaa !56
  %23 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %num_relax_sweeps3) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetGlobalSmoothCycle(ptr noundef %mgr_vdata, i32 noundef %smooth_cycle) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %smooth_cycle.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %smooth_cycle, ptr %smooth_cycle.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %smooth_cycle.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %global_smooth_cycle = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 66
  store i32 %1, ptr %global_smooth_cycle, align 8, !tbaa !63
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetFRelaxMethod(ptr noundef %mgr_vdata, i32 noundef %relax_method) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %relax_method.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %Frelax_method3 = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %relax_method, ptr %relax_method.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 72
  %4 = load ptr, ptr %Frelax_method, align 8, !tbaa !76
  call void @hypre_Free(ptr noundef %4, i32 noundef 0)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_method2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 72
  store ptr null, ptr %Frelax_method2, align 8, !tbaa !76
  call void @llvm.lifetime.start.p0(i64 8, ptr %Frelax_method3) #6
  %6 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %6 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %Frelax_method3, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, ptr %i, align 4, !tbaa !92
  %8 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp = icmp slt i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32, ptr %relax_method.addr, align 4, !tbaa !92
  %10 = load ptr, ptr %Frelax_method3, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom
  store i32 %9, ptr %arrayidx, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %12, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !337

for.end:                                          ; preds = %for.cond
  %13 = load ptr, ptr %Frelax_method3, align 8, !tbaa !4
  %14 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_method5 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %14, i32 0, i32 72
  store ptr %13, ptr %Frelax_method5, align 8, !tbaa !76
  %15 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %Frelax_method3) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetLevelFRelaxMethod(ptr noundef %mgr_vdata, ptr noundef %relax_method) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %relax_method.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %Frelax_method3 = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %relax_method, ptr %relax_method.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 72
  %4 = load ptr, ptr %Frelax_method, align 8, !tbaa !76
  call void @hypre_Free(ptr noundef %4, i32 noundef 0)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_method2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 72
  store ptr null, ptr %Frelax_method2, align 8, !tbaa !76
  call void @llvm.lifetime.start.p0(i64 8, ptr %Frelax_method3) #6
  %6 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %6 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %Frelax_method3, align 8, !tbaa !4
  %7 = load ptr, ptr %relax_method.addr, align 8, !tbaa !4
  %cmp = icmp ne ptr %7, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp5 = icmp slt i32 %8, %9
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %relax_method.addr, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom
  %12 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %13 = load ptr, ptr %Frelax_method3, align 8, !tbaa !4
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom7 = sext i32 %14 to i64
  %arrayidx8 = getelementptr inbounds i32, ptr %13, i64 %idxprom7
  store i32 %12, ptr %arrayidx8, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !338

for.end:                                          ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc15, %if.else
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %17 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp10 = icmp slt i32 %16, %17
  br i1 %cmp10, label %for.body12, label %for.end17

for.body12:                                       ; preds = %for.cond9
  %18 = load ptr, ptr %Frelax_method3, align 8, !tbaa !4
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom13 = sext i32 %19 to i64
  %arrayidx14 = getelementptr inbounds i32, ptr %18, i64 %idxprom13
  store i32 0, ptr %arrayidx14, align 4, !tbaa !92
  br label %for.inc15

for.inc15:                                        ; preds = %for.body12
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %inc16 = add nsw i32 %20, 1
  store i32 %inc16, ptr %i, align 4, !tbaa !92
  br label %for.cond9, !llvm.loop !339

for.end17:                                        ; preds = %for.cond9
  br label %if.end

if.end:                                           ; preds = %for.end17, %for.end
  %21 = load ptr, ptr %Frelax_method3, align 8, !tbaa !4
  %22 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_method18 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %22, i32 0, i32 72
  store ptr %21, ptr %Frelax_method18, align 8, !tbaa !76
  %23 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %Frelax_method3) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetLevelFRelaxType(ptr noundef %mgr_vdata, ptr noundef %relax_type) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %relax_type.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %Frelax_type3 = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %relax_type, ptr %relax_type.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 73
  %4 = load ptr, ptr %Frelax_type, align 8, !tbaa !54
  call void @hypre_Free(ptr noundef %4, i32 noundef 0)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_type2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 73
  store ptr null, ptr %Frelax_type2, align 8, !tbaa !54
  call void @llvm.lifetime.start.p0(i64 8, ptr %Frelax_type3) #6
  %6 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %6 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %Frelax_type3, align 8, !tbaa !4
  %7 = load ptr, ptr %relax_type.addr, align 8, !tbaa !4
  %cmp = icmp ne ptr %7, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp5 = icmp slt i32 %8, %9
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %relax_type.addr, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom
  %12 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %13 = load ptr, ptr %Frelax_type3, align 8, !tbaa !4
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom7 = sext i32 %14 to i64
  %arrayidx8 = getelementptr inbounds i32, ptr %13, i64 %idxprom7
  store i32 %12, ptr %arrayidx8, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !340

for.end:                                          ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc15, %if.else
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %17 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp10 = icmp slt i32 %16, %17
  br i1 %cmp10, label %for.body12, label %for.end17

for.body12:                                       ; preds = %for.cond9
  %18 = load ptr, ptr %Frelax_type3, align 8, !tbaa !4
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom13 = sext i32 %19 to i64
  %arrayidx14 = getelementptr inbounds i32, ptr %18, i64 %idxprom13
  store i32 0, ptr %arrayidx14, align 4, !tbaa !92
  br label %for.inc15

for.inc15:                                        ; preds = %for.body12
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %inc16 = add nsw i32 %20, 1
  store i32 %inc16, ptr %i, align 4, !tbaa !92
  br label %for.cond9, !llvm.loop !341

for.end17:                                        ; preds = %for.cond9
  br label %if.end

if.end:                                           ; preds = %for.end17, %for.end
  %21 = load ptr, ptr %Frelax_type3, align 8, !tbaa !4
  %22 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_type18 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %22, i32 0, i32 73
  store ptr %21, ptr %Frelax_type18, align 8, !tbaa !54
  %23 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %Frelax_type3) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetCoarseGridMethod(ptr noundef %mgr_vdata, ptr noundef %cg_method) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %cg_method.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %mgr_coarse_grid_method3 = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %cg_method, ptr %cg_method.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %mgr_coarse_grid_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 75
  %4 = load ptr, ptr %mgr_coarse_grid_method, align 8, !tbaa !82
  call void @hypre_Free(ptr noundef %4, i32 noundef 0)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %mgr_coarse_grid_method2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 75
  store ptr null, ptr %mgr_coarse_grid_method2, align 8, !tbaa !82
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_coarse_grid_method3) #6
  %6 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %6 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %mgr_coarse_grid_method3, align 8, !tbaa !4
  %7 = load ptr, ptr %cg_method.addr, align 8, !tbaa !4
  %cmp = icmp ne ptr %7, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp5 = icmp slt i32 %8, %9
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %cg_method.addr, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom
  %12 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %13 = load ptr, ptr %mgr_coarse_grid_method3, align 8, !tbaa !4
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom7 = sext i32 %14 to i64
  %arrayidx8 = getelementptr inbounds i32, ptr %13, i64 %idxprom7
  store i32 %12, ptr %arrayidx8, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !342

for.end:                                          ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc15, %if.else
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %17 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp10 = icmp slt i32 %16, %17
  br i1 %cmp10, label %for.body12, label %for.end17

for.body12:                                       ; preds = %for.cond9
  %18 = load ptr, ptr %mgr_coarse_grid_method3, align 8, !tbaa !4
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom13 = sext i32 %19 to i64
  %arrayidx14 = getelementptr inbounds i32, ptr %18, i64 %idxprom13
  store i32 0, ptr %arrayidx14, align 4, !tbaa !92
  br label %for.inc15

for.inc15:                                        ; preds = %for.body12
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %inc16 = add nsw i32 %20, 1
  store i32 %inc16, ptr %i, align 4, !tbaa !92
  br label %for.cond9, !llvm.loop !343

for.end17:                                        ; preds = %for.cond9
  br label %if.end

if.end:                                           ; preds = %for.end17, %for.end
  %21 = load ptr, ptr %mgr_coarse_grid_method3, align 8, !tbaa !4
  %22 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %mgr_coarse_grid_method18 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %22, i32 0, i32 75
  store ptr %21, ptr %mgr_coarse_grid_method18, align 8, !tbaa !82
  %23 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_coarse_grid_method3) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetLevelFRelaxNumFunctions(ptr noundef %mgr_vdata, ptr noundef %num_functions) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %num_functions.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %Frelax_num_functions3 = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %num_functions, ptr %num_functions.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_num_functions = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 74
  %4 = load ptr, ptr %Frelax_num_functions, align 8, !tbaa !80
  call void @hypre_Free(ptr noundef %4, i32 noundef 0)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_num_functions2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 74
  store ptr null, ptr %Frelax_num_functions2, align 8, !tbaa !80
  call void @llvm.lifetime.start.p0(i64 8, ptr %Frelax_num_functions3) #6
  %6 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %6 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %Frelax_num_functions3, align 8, !tbaa !4
  %7 = load ptr, ptr %num_functions.addr, align 8, !tbaa !4
  %cmp = icmp ne ptr %7, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp5 = icmp slt i32 %8, %9
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %num_functions.addr, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom
  %12 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %13 = load ptr, ptr %Frelax_num_functions3, align 8, !tbaa !4
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom7 = sext i32 %14 to i64
  %arrayidx8 = getelementptr inbounds i32, ptr %13, i64 %idxprom7
  store i32 %12, ptr %arrayidx8, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !344

for.end:                                          ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc15, %if.else
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %17 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp10 = icmp slt i32 %16, %17
  br i1 %cmp10, label %for.body12, label %for.end17

for.body12:                                       ; preds = %for.cond9
  %18 = load ptr, ptr %Frelax_num_functions3, align 8, !tbaa !4
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom13 = sext i32 %19 to i64
  %arrayidx14 = getelementptr inbounds i32, ptr %18, i64 %idxprom13
  store i32 1, ptr %arrayidx14, align 4, !tbaa !92
  br label %for.inc15

for.inc15:                                        ; preds = %for.body12
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %inc16 = add nsw i32 %20, 1
  store i32 %inc16, ptr %i, align 4, !tbaa !92
  br label %for.cond9, !llvm.loop !345

for.end17:                                        ; preds = %for.cond9
  br label %if.end

if.end:                                           ; preds = %for.end17, %for.end
  %21 = load ptr, ptr %Frelax_num_functions3, align 8, !tbaa !4
  %22 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_num_functions18 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %22, i32 0, i32 74
  store ptr %21, ptr %Frelax_num_functions18, align 8, !tbaa !80
  %23 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %Frelax_num_functions3) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetLevelRestrictType(ptr noundef %mgr_vdata, ptr noundef %restrict_type) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %restrict_type.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %level_restrict_type = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %restrict_type, ptr %restrict_type.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %restrict_type2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 30
  %4 = load ptr, ptr %restrict_type2, align 8, !tbaa !59
  call void @hypre_Free(ptr noundef %4, i32 noundef 0)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %restrict_type3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 30
  store ptr null, ptr %restrict_type3, align 8, !tbaa !59
  call void @llvm.lifetime.start.p0(i64 8, ptr %level_restrict_type) #6
  %6 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %6 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %level_restrict_type, align 8, !tbaa !4
  %7 = load ptr, ptr %restrict_type.addr, align 8, !tbaa !4
  %cmp = icmp ne ptr %7, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp5 = icmp slt i32 %8, %9
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %restrict_type.addr, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds i32, ptr %10, i64 %idx.ext
  %12 = load i32, ptr %add.ptr, align 4, !tbaa !92
  %13 = load ptr, ptr %level_restrict_type, align 8, !tbaa !4
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %14 to i64
  %arrayidx = getelementptr inbounds i32, ptr %13, i64 %idxprom
  store i32 %12, ptr %arrayidx, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !346

for.end:                                          ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc13, %if.else
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %17 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp8 = icmp slt i32 %16, %17
  br i1 %cmp8, label %for.body10, label %for.end15

for.body10:                                       ; preds = %for.cond7
  %18 = load ptr, ptr %level_restrict_type, align 8, !tbaa !4
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom11 = sext i32 %19 to i64
  %arrayidx12 = getelementptr inbounds i32, ptr %18, i64 %idxprom11
  store i32 0, ptr %arrayidx12, align 4, !tbaa !92
  br label %for.inc13

for.inc13:                                        ; preds = %for.body10
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %inc14 = add nsw i32 %20, 1
  store i32 %inc14, ptr %i, align 4, !tbaa !92
  br label %for.cond7, !llvm.loop !347

for.end15:                                        ; preds = %for.cond7
  br label %if.end

if.end:                                           ; preds = %for.end15, %for.end
  %21 = load ptr, ptr %level_restrict_type, align 8, !tbaa !4
  %22 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %restrict_type16 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %22, i32 0, i32 30
  store ptr %21, ptr %restrict_type16, align 8, !tbaa !59
  %23 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %level_restrict_type) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetRestrictType(ptr noundef %mgr_vdata, i32 noundef %restrict_type) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %restrict_type.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %level_restrict_type = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %restrict_type, ptr %restrict_type.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %restrict_type2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 30
  %4 = load ptr, ptr %restrict_type2, align 8, !tbaa !59
  %cmp = icmp ne ptr %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %restrict_type3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 30
  %6 = load ptr, ptr %restrict_type3, align 8, !tbaa !59
  call void @hypre_Free(ptr noundef %6, i32 noundef 0)
  %7 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %restrict_type4 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %7, i32 0, i32 30
  store ptr null, ptr %restrict_type4, align 8, !tbaa !59
  %8 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %restrict_type5 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %8, i32 0, i32 30
  store ptr null, ptr %restrict_type5, align 8, !tbaa !59
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %level_restrict_type) #6
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %9 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %level_restrict_type, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, ptr %i, align 4, !tbaa !92
  %11 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp6 = icmp slt i32 %10, %11
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load i32, ptr %restrict_type.addr, align 4, !tbaa !92
  %13 = load ptr, ptr %level_restrict_type, align 8, !tbaa !4
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %14 to i64
  %arrayidx = getelementptr inbounds i32, ptr %13, i64 %idxprom
  store i32 %12, ptr %arrayidx, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !348

for.end:                                          ; preds = %for.cond
  %16 = load ptr, ptr %level_restrict_type, align 8, !tbaa !4
  %17 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %restrict_type8 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %17, i32 0, i32 30
  store ptr %16, ptr %restrict_type8, align 8, !tbaa !59
  %18 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %level_restrict_type) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %18
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetNumRestrictSweeps(ptr noundef %mgr_vdata, i32 noundef %nsweeps) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %nsweeps.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %nsweeps, ptr %nsweeps.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %nsweeps.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_restrict_sweeps = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 28
  store i32 %1, ptr %num_restrict_sweeps, align 4, !tbaa !40
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetInterpType(ptr noundef %mgr_vdata, i32 noundef %interpType) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %interpType.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %level_interp_type = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %interpType, ptr %interpType.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %interp_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 29
  %4 = load ptr, ptr %interp_type, align 8, !tbaa !58
  %cmp = icmp ne ptr %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %interp_type2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 29
  %6 = load ptr, ptr %interp_type2, align 8, !tbaa !58
  call void @hypre_Free(ptr noundef %6, i32 noundef 0)
  %7 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %interp_type3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %7, i32 0, i32 29
  store ptr null, ptr %interp_type3, align 8, !tbaa !58
  %8 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %interp_type4 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %8, i32 0, i32 29
  store ptr null, ptr %interp_type4, align 8, !tbaa !58
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %level_interp_type) #6
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %9 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %level_interp_type, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, ptr %i, align 4, !tbaa !92
  %11 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp5 = icmp slt i32 %10, %11
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load i32, ptr %interpType.addr, align 4, !tbaa !92
  %13 = load ptr, ptr %level_interp_type, align 8, !tbaa !4
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %14 to i64
  %arrayidx = getelementptr inbounds i32, ptr %13, i64 %idxprom
  store i32 %12, ptr %arrayidx, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !349

for.end:                                          ; preds = %for.cond
  %16 = load ptr, ptr %level_interp_type, align 8, !tbaa !4
  %17 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %interp_type7 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %17, i32 0, i32 29
  store ptr %16, ptr %interp_type7, align 8, !tbaa !58
  %18 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %level_interp_type) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %18
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetLevelInterpType(ptr noundef %mgr_vdata, ptr noundef %interpType) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %interpType.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %level_interp_type = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %interpType, ptr %interpType.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %interp_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 29
  %4 = load ptr, ptr %interp_type, align 8, !tbaa !58
  call void @hypre_Free(ptr noundef %4, i32 noundef 0)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %interp_type2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 29
  store ptr null, ptr %interp_type2, align 8, !tbaa !58
  call void @llvm.lifetime.start.p0(i64 8, ptr %level_interp_type) #6
  %6 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %6 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %level_interp_type, align 8, !tbaa !4
  %7 = load ptr, ptr %interpType.addr, align 8, !tbaa !4
  %cmp = icmp ne ptr %7, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp4 = icmp slt i32 %8, %9
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %interpType.addr, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds i32, ptr %10, i64 %idx.ext
  %12 = load i32, ptr %add.ptr, align 4, !tbaa !92
  %13 = load ptr, ptr %level_interp_type, align 8, !tbaa !4
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %14 to i64
  %arrayidx = getelementptr inbounds i32, ptr %13, i64 %idxprom
  store i32 %12, ptr %arrayidx, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !350

for.end:                                          ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc12, %if.else
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %17 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp7 = icmp slt i32 %16, %17
  br i1 %cmp7, label %for.body9, label %for.end14

for.body9:                                        ; preds = %for.cond6
  %18 = load ptr, ptr %level_interp_type, align 8, !tbaa !4
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom10 = sext i32 %19 to i64
  %arrayidx11 = getelementptr inbounds i32, ptr %18, i64 %idxprom10
  store i32 2, ptr %arrayidx11, align 4, !tbaa !92
  br label %for.inc12

for.inc12:                                        ; preds = %for.body9
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %inc13 = add nsw i32 %20, 1
  store i32 %inc13, ptr %i, align 4, !tbaa !92
  br label %for.cond6, !llvm.loop !351

for.end14:                                        ; preds = %for.cond6
  br label %if.end

if.end:                                           ; preds = %for.end14, %for.end
  %21 = load ptr, ptr %level_interp_type, align 8, !tbaa !4
  %22 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %interp_type15 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %22, i32 0, i32 29
  store ptr %21, ptr %interp_type15, align 8, !tbaa !58
  %23 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %level_interp_type) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetNumInterpSweeps(ptr noundef %mgr_vdata, i32 noundef %nsweeps) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %nsweeps.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %nsweeps, ptr %nsweeps.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %nsweeps.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_interp_sweeps = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 27
  store i32 %1, ptr %num_interp_sweeps, align 8, !tbaa !39
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetTruncateCoarseGridThreshold(ptr noundef %mgr_vdata, double noundef %threshold) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %threshold.addr = alloca double, align 8
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store double %threshold, ptr %threshold.addr, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load double, ptr %threshold.addr, align 8, !tbaa !161
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %truncate_coarse_grid_threshold = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 81
  store double %1, ptr %truncate_coarse_grid_threshold, align 8, !tbaa !89
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetBlockJacobiBlockSize(ptr noundef %mgr_vdata, i32 noundef %blk_size) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %blk_size.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %blk_size, ptr %blk_size.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %blk_size.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_jacobi_bsize = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 84
  store i32 %1, ptr %block_jacobi_bsize, align 8, !tbaa !87
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetFrelaxPrintLevel(ptr noundef %mgr_vdata, i32 noundef %print_level) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %print_level.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %print_level, ptr %print_level.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %print_level.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %frelax_print_level = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 43
  store i32 %1, ptr %frelax_print_level, align 4, !tbaa !66
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetCoarseGridPrintLevel(ptr noundef %mgr_vdata, i32 noundef %print_level) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %print_level.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %print_level, ptr %print_level.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %print_level.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %cg_print_level = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 44
  store i32 %1, ptr %cg_print_level, align 8, !tbaa !67
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetPrintLevel(ptr noundef %mgr_vdata, i32 noundef %print_level) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %print_level.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %print_level, ptr %print_level.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %print_level.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %print_level1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 42
  store i32 %1, ptr %print_level1, align 8, !tbaa !65
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetLogging(ptr noundef %mgr_vdata, i32 noundef %logging) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %logging.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %logging, ptr %logging.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %logging.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %logging1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 41
  store i32 %1, ptr %logging1, align 4, !tbaa !64
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetMaxIter(ptr noundef %mgr_vdata, i32 noundef %max_iter) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %max_iter.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %max_iter, ptr %max_iter.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %max_iter.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_iter1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 45
  store i32 %1, ptr %max_iter1, align 4, !tbaa !51
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetTol(ptr noundef %mgr_vdata, double noundef %tol) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %tol.addr = alloca double, align 8
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store double %tol, ptr %tol.addr, align 8, !tbaa !161
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load double, ptr %tol.addr, align 8, !tbaa !161
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %tol1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 38
  store double %1, ptr %tol1, align 8, !tbaa !52
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetMaxGlobalSmoothIters(ptr noundef %mgr_vdata, i32 noundef %max_iter) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %max_iter.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  %max_num_coarse_levels = alloca i32, align 4
  %level_smooth_iters5 = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %max_iter, ptr %max_iter.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 63
  %4 = load ptr, ptr %level_smooth_iters, align 8, !tbaa !60
  %cmp = icmp ne ptr %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 63
  %6 = load ptr, ptr %level_smooth_iters2, align 8, !tbaa !60
  call void @hypre_Free(ptr noundef %6, i32 noundef 0)
  %7 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %7, i32 0, i32 63
  store ptr null, ptr %level_smooth_iters3, align 8, !tbaa !60
  %8 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters4 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %8, i32 0, i32 63
  store ptr null, ptr %level_smooth_iters4, align 8, !tbaa !60
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %level_smooth_iters5) #6
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %9 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %level_smooth_iters5, align 8, !tbaa !4
  %10 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp6 = icmp sgt i32 %10, 0
  br i1 %cmp6, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  %11 = load i32, ptr %max_iter.addr, align 4, !tbaa !92
  %12 = load ptr, ptr %level_smooth_iters5, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds i32, ptr %12, i64 0
  store i32 %11, ptr %arrayidx, align 4, !tbaa !92
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end
  %13 = load ptr, ptr %level_smooth_iters5, align 8, !tbaa !4
  %14 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters10 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %14, i32 0, i32 63
  store ptr %13, ptr %level_smooth_iters10, align 8, !tbaa !60
  %15 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %level_smooth_iters5) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetGlobalSmoothType(ptr noundef %mgr_vdata, i32 noundef %gsmooth_type) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %gsmooth_type.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  %max_num_coarse_levels = alloca i32, align 4
  %level_smooth_type5 = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %gsmooth_type, ptr %gsmooth_type.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 64
  %4 = load ptr, ptr %level_smooth_type, align 8, !tbaa !61
  %cmp = icmp ne ptr %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 64
  %6 = load ptr, ptr %level_smooth_type2, align 8, !tbaa !61
  call void @hypre_Free(ptr noundef %6, i32 noundef 0)
  %7 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %7, i32 0, i32 64
  store ptr null, ptr %level_smooth_type3, align 8, !tbaa !61
  %8 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type4 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %8, i32 0, i32 64
  store ptr null, ptr %level_smooth_type4, align 8, !tbaa !61
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %level_smooth_type5) #6
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %9 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %level_smooth_type5, align 8, !tbaa !4
  %10 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp6 = icmp sgt i32 %10, 0
  br i1 %cmp6, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  %11 = load i32, ptr %gsmooth_type.addr, align 4, !tbaa !92
  %12 = load ptr, ptr %level_smooth_type5, align 8, !tbaa !4
  %arrayidx = getelementptr inbounds i32, ptr %12, i64 0
  store i32 %11, ptr %arrayidx, align 4, !tbaa !92
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end
  %13 = load ptr, ptr %level_smooth_type5, align 8, !tbaa !4
  %14 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type10 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %14, i32 0, i32 64
  store ptr %13, ptr %level_smooth_type10, align 8, !tbaa !61
  %15 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %level_smooth_type5) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetLevelSmoothType(ptr noundef %mgr_vdata, ptr noundef %gsmooth_type) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %gsmooth_type.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %level_smooth_type3 = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %gsmooth_type, ptr %gsmooth_type.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 64
  %4 = load ptr, ptr %level_smooth_type, align 8, !tbaa !61
  call void @hypre_Free(ptr noundef %4, i32 noundef 0)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 64
  store ptr null, ptr %level_smooth_type2, align 8, !tbaa !61
  call void @llvm.lifetime.start.p0(i64 8, ptr %level_smooth_type3) #6
  %6 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %6 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %level_smooth_type3, align 8, !tbaa !4
  %7 = load ptr, ptr %gsmooth_type.addr, align 8, !tbaa !4
  %cmp = icmp ne ptr %7, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp5 = icmp slt i32 %8, %9
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %gsmooth_type.addr, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom
  %12 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %13 = load ptr, ptr %level_smooth_type3, align 8, !tbaa !4
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom7 = sext i32 %14 to i64
  %arrayidx8 = getelementptr inbounds i32, ptr %13, i64 %idxprom7
  store i32 %12, ptr %arrayidx8, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !352

for.end:                                          ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc15, %if.else
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %17 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp10 = icmp slt i32 %16, %17
  br i1 %cmp10, label %for.body12, label %for.end17

for.body12:                                       ; preds = %for.cond9
  %18 = load ptr, ptr %level_smooth_type3, align 8, !tbaa !4
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom13 = sext i32 %19 to i64
  %arrayidx14 = getelementptr inbounds i32, ptr %18, i64 %idxprom13
  store i32 0, ptr %arrayidx14, align 4, !tbaa !92
  br label %for.inc15

for.inc15:                                        ; preds = %for.body12
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %inc16 = add nsw i32 %20, 1
  store i32 %inc16, ptr %i, align 4, !tbaa !92
  br label %for.cond9, !llvm.loop !353

for.end17:                                        ; preds = %for.cond9
  br label %if.end

if.end:                                           ; preds = %for.end17, %for.end
  %21 = load ptr, ptr %level_smooth_type3, align 8, !tbaa !4
  %22 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type18 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %22, i32 0, i32 64
  store ptr %21, ptr %level_smooth_type18, align 8, !tbaa !61
  %23 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %level_smooth_type3) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetLevelSmoothIters(ptr noundef %mgr_vdata, ptr noundef %gsmooth_iters) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %gsmooth_iters.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %level_smooth_iters3 = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %gsmooth_iters, ptr %gsmooth_iters.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 63
  %4 = load ptr, ptr %level_smooth_iters, align 8, !tbaa !60
  call void @hypre_Free(ptr noundef %4, i32 noundef 0)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters2 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 63
  store ptr null, ptr %level_smooth_iters2, align 8, !tbaa !60
  call void @llvm.lifetime.start.p0(i64 8, ptr %level_smooth_iters3) #6
  %6 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %conv = sext i32 %6 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %level_smooth_iters3, align 8, !tbaa !4
  %7 = load ptr, ptr %gsmooth_iters.addr, align 8, !tbaa !4
  %cmp = icmp ne ptr %7, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, ptr %i, align 4, !tbaa !92
  %9 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp5 = icmp slt i32 %8, %9
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load ptr, ptr %gsmooth_iters.addr, align 8, !tbaa !4
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i32, ptr %10, i64 %idxprom
  %12 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %13 = load ptr, ptr %level_smooth_iters3, align 8, !tbaa !4
  %14 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom7 = sext i32 %14 to i64
  %arrayidx8 = getelementptr inbounds i32, ptr %13, i64 %idxprom7
  store i32 %12, ptr %arrayidx8, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !354

for.end:                                          ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc15, %if.else
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %17 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp10 = icmp slt i32 %16, %17
  br i1 %cmp10, label %for.body12, label %for.end17

for.body12:                                       ; preds = %for.cond9
  %18 = load ptr, ptr %level_smooth_iters3, align 8, !tbaa !4
  %19 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom13 = sext i32 %19 to i64
  %arrayidx14 = getelementptr inbounds i32, ptr %18, i64 %idxprom13
  store i32 0, ptr %arrayidx14, align 4, !tbaa !92
  br label %for.inc15

for.inc15:                                        ; preds = %for.body12
  %20 = load i32, ptr %i, align 4, !tbaa !92
  %inc16 = add nsw i32 %20, 1
  store i32 %inc16, ptr %i, align 4, !tbaa !92
  br label %for.cond9, !llvm.loop !355

for.end17:                                        ; preds = %for.cond9
  br label %if.end

if.end:                                           ; preds = %for.end17, %for.end
  %21 = load ptr, ptr %level_smooth_iters3, align 8, !tbaa !4
  %22 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters18 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %22, i32 0, i32 63
  store ptr %21, ptr %level_smooth_iters18, align 8, !tbaa !60
  %23 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %level_smooth_iters3) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRSetPMaxElmts(ptr noundef %mgr_vdata, i32 noundef %P_max_elmts) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %P_max_elmts.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %P_max_elmts, ptr %P_max_elmts.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %P_max_elmts.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %P_max_elmts1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 34
  store i32 %1, ptr %P_max_elmts1, align 8, !tbaa !44
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRGetNumIterations(ptr noundef %mgr_vdata, ptr noundef %num_iterations) #0 {
entry:
  %retval = alloca i32, align 4
  %mgr_vdata.addr = alloca ptr, align 8
  %num_iterations.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %num_iterations, ptr %num_iterations.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 5819, i32 noundef 12, ptr noundef null)
  %2 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %2, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_iterations1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 35
  %4 = load i32, ptr %num_iterations1, align 4, !tbaa !38
  %5 = load ptr, ptr %num_iterations.addr, align 8, !tbaa !4
  store i32 %4, ptr %5, align 4, !tbaa !92
  %6 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %6, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  %7 = load i32, ptr %retval, align 4
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRGetFinalRelativeResidualNorm(ptr noundef %mgr_vdata, ptr noundef %res_norm) #0 {
entry:
  %retval = alloca i32, align 4
  %mgr_vdata.addr = alloca ptr, align 8
  %res_norm.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %res_norm, ptr %res_norm.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 5835, i32 noundef 12, ptr noundef null)
  %2 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %2, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %final_rel_residual_norm = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 37
  %4 = load double, ptr %final_rel_residual_norm, align 8, !tbaa !356
  %5 = load ptr, ptr %res_norm.addr, align 8, !tbaa !4
  store double %4, ptr %5, align 8, !tbaa !161
  %6 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %6, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  %7 = load i32, ptr %retval, align 4
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRGetCoarseGridConvergenceFactor(ptr noundef %mgr_vdata, ptr noundef %conv_factor) #0 {
entry:
  %retval = alloca i32, align 4
  %mgr_vdata.addr = alloca ptr, align 8
  %conv_factor.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %conv_factor, ptr %conv_factor.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 5850, i32 noundef 12, ptr noundef null)
  %2 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %2, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %cg_convergence_factor = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 85
  %4 = load double, ptr %cg_convergence_factor, align 8, !tbaa !86
  %5 = load ptr, ptr %conv_factor.addr, align 8, !tbaa !4
  store double %4, ptr %5, align 8, !tbaa !161
  %6 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %6, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  %7 = load i32, ptr %retval, align 4
  ret i32 %7
}

declare i32 @hypre_ParCSRMatrixCreateAssumedPartition(ptr noundef) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRBuildAff(ptr noundef %A, ptr noundef %CF_marker, i32 noundef %debug_flag, ptr noundef %A_ff_ptr) #0 {
entry:
  %A.addr = alloca ptr, align 8
  %CF_marker.addr = alloca ptr, align 8
  %debug_flag.addr = alloca i32, align 4
  %A_ff_ptr.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %local_numrows = alloca i32, align 4
  %CF_marker_copy = alloca ptr, align 8
  store ptr %A, ptr %A.addr, align 8, !tbaa !4
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store i32 %debug_flag, ptr %debug_flag.addr, align 4, !tbaa !92
  store ptr %A_ff_ptr, ptr %A_ff_ptr.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %local_numrows) #6
  %0 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %diag = getelementptr inbounds %struct.hypre_ParCSRMatrix_struct, ptr %0, i32 0, i32 8
  %1 = load ptr, ptr %diag, align 8, !tbaa !149
  %num_rows = getelementptr inbounds %struct.hypre_CSRMatrix, ptr %1, i32 0, i32 3
  %2 = load i32, ptr %num_rows, align 8, !tbaa !151
  store i32 %2, ptr %local_numrows, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %CF_marker_copy) #6
  %3 = load i32, ptr %local_numrows, align 4, !tbaa !92
  %conv = sext i32 %3 to i64
  %call = call ptr @hypre_CAlloc(i64 noundef %conv, i64 noundef 4, i32 noundef 0)
  store ptr %call, ptr %CF_marker_copy, align 8, !tbaa !4
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, ptr %i, align 4, !tbaa !92
  %5 = load i32, ptr %local_numrows, align 4, !tbaa !92
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %7 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds i32, ptr %6, i64 %idxprom
  %8 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %sub = sub nsw i32 0, %8
  %9 = load ptr, ptr %CF_marker_copy, align 8, !tbaa !4
  %10 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom2 = sext i32 %10 to i64
  %arrayidx3 = getelementptr inbounds i32, ptr %9, i64 %idxprom2
  store i32 %sub, ptr %arrayidx3, align 4, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %inc = add nsw i32 %11, 1
  store i32 %inc, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !357

for.end:                                          ; preds = %for.cond
  %12 = load ptr, ptr %A.addr, align 8, !tbaa !4
  %13 = load ptr, ptr %CF_marker_copy, align 8, !tbaa !4
  %14 = load ptr, ptr %CF_marker_copy, align 8, !tbaa !4
  %15 = load i32, ptr %debug_flag.addr, align 4, !tbaa !92
  %16 = load ptr, ptr %A_ff_ptr.addr, align 8, !tbaa !4
  %call4 = call i32 @hypre_MGRGetSubBlock(ptr noundef %12, ptr noundef %13, ptr noundef %14, i32 noundef %15, ptr noundef %16)
  %17 = load ptr, ptr %CF_marker_copy, align 8, !tbaa !4
  call void @hypre_Free(ptr noundef %17, i32 noundef 0)
  store ptr null, ptr %CF_marker_copy, align 8, !tbaa !4
  call void @llvm.lifetime.end.p0(i64 8, ptr %CF_marker_copy) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %local_numrows) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRAddVectorP(ptr noundef %CF_marker, i32 noundef %point_type, double noundef %a, ptr noundef %fromVector, double noundef %b, ptr noundef %toVector) #0 {
entry:
  %CF_marker.addr = alloca ptr, align 8
  %point_type.addr = alloca i32, align 4
  %a.addr = alloca double, align 8
  %fromVector.addr = alloca ptr, align 8
  %b.addr = alloca double, align 8
  %toVector.addr = alloca ptr, align 8
  %fromVectorLocal = alloca ptr, align 8
  %fromVectorData = alloca ptr, align 8
  %toVectorLocal = alloca ptr, align 8
  %toVectorData = alloca ptr, align 8
  %CF_marker_data = alloca ptr, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store i32 %point_type, ptr %point_type.addr, align 4, !tbaa !92
  store double %a, ptr %a.addr, align 8, !tbaa !161
  store ptr %fromVector, ptr %fromVector.addr, align 8, !tbaa !4
  store double %b, ptr %b.addr, align 8, !tbaa !161
  store ptr %toVector, ptr %toVector.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %fromVectorLocal) #6
  %0 = load ptr, ptr %fromVector.addr, align 8, !tbaa !4
  %local_vector = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %0, i32 0, i32 6
  %1 = load ptr, ptr %local_vector, align 8, !tbaa !295
  store ptr %1, ptr %fromVectorLocal, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %fromVectorData) #6
  %2 = load ptr, ptr %fromVectorLocal, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_Vector, ptr %2, i32 0, i32 0
  %3 = load ptr, ptr %data, align 8, !tbaa !185
  store ptr %3, ptr %fromVectorData, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %toVectorLocal) #6
  %4 = load ptr, ptr %toVector.addr, align 8, !tbaa !4
  %5 = load ptr, ptr %4, align 8, !tbaa !4
  %local_vector1 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %5, i32 0, i32 6
  %6 = load ptr, ptr %local_vector1, align 8, !tbaa !295
  store ptr %6, ptr %toVectorLocal, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %toVectorData) #6
  %7 = load ptr, ptr %toVectorLocal, align 8, !tbaa !4
  %data2 = getelementptr inbounds %struct.hypre_Vector, ptr %7, i32 0, i32 0
  %8 = load ptr, ptr %data2, align 8, !tbaa !185
  store ptr %8, ptr %toVectorData, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %CF_marker_data) #6
  %9 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %data3 = getelementptr inbounds %struct.hypre_IntArray, ptr %9, i32 0, i32 0
  %10 = load ptr, ptr %data3, align 8, !tbaa !156
  store ptr %10, ptr %CF_marker_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %n) #6
  %11 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %size = getelementptr inbounds %struct.hypre_IntArray, ptr %11, i32 0, i32 1
  %12 = load i32, ptr %size, align 8, !tbaa !358
  store i32 %12, ptr %n, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #6
  store i32 0, ptr %j, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load i32, ptr %i, align 4, !tbaa !92
  %14 = load i32, ptr %n, align 4, !tbaa !92
  %cmp = icmp slt i32 %13, %14
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load ptr, ptr %CF_marker_data, align 8, !tbaa !4
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %16 to i64
  %arrayidx = getelementptr inbounds i32, ptr %15, i64 %idxprom
  %17 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %18 = load i32, ptr %point_type.addr, align 4, !tbaa !92
  %cmp4 = icmp eq i32 %17, %18
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %19 = load double, ptr %b.addr, align 8, !tbaa !161
  %20 = load ptr, ptr %toVectorData, align 8, !tbaa !4
  %21 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom5 = sext i32 %21 to i64
  %arrayidx6 = getelementptr inbounds double, ptr %20, i64 %idxprom5
  %22 = load double, ptr %arrayidx6, align 8, !tbaa !161
  %23 = load double, ptr %a.addr, align 8, !tbaa !161
  %24 = load ptr, ptr %fromVectorData, align 8, !tbaa !4
  %25 = load i32, ptr %j, align 4, !tbaa !92
  %idxprom7 = sext i32 %25 to i64
  %arrayidx8 = getelementptr inbounds double, ptr %24, i64 %idxprom7
  %26 = load double, ptr %arrayidx8, align 8, !tbaa !161
  %mul9 = fmul double %23, %26
  %27 = call double @llvm.fmuladd.f64(double %19, double %22, double %mul9)
  %28 = load ptr, ptr %toVectorData, align 8, !tbaa !4
  %29 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom10 = sext i32 %29 to i64
  %arrayidx11 = getelementptr inbounds double, ptr %28, i64 %idxprom10
  store double %27, ptr %arrayidx11, align 8, !tbaa !161
  %30 = load i32, ptr %j, align 4, !tbaa !92
  %inc = add nsw i32 %30, 1
  store i32 %inc, ptr %j, align 4, !tbaa !92
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %31 = load i32, ptr %i, align 4, !tbaa !92
  %inc12 = add nsw i32 %31, 1
  store i32 %inc12, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !359

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %CF_marker_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %toVectorData) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %toVectorLocal) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %fromVectorData) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %fromVectorLocal) #6
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRAddVectorR(ptr noundef %CF_marker, i32 noundef %point_type, double noundef %a, ptr noundef %fromVector, double noundef %b, ptr noundef %toVector) #0 {
entry:
  %CF_marker.addr = alloca ptr, align 8
  %point_type.addr = alloca i32, align 4
  %a.addr = alloca double, align 8
  %fromVector.addr = alloca ptr, align 8
  %b.addr = alloca double, align 8
  %toVector.addr = alloca ptr, align 8
  %fromVectorLocal = alloca ptr, align 8
  %fromVectorData = alloca ptr, align 8
  %toVectorLocal = alloca ptr, align 8
  %toVectorData = alloca ptr, align 8
  %CF_marker_data = alloca ptr, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store ptr %CF_marker, ptr %CF_marker.addr, align 8, !tbaa !4
  store i32 %point_type, ptr %point_type.addr, align 4, !tbaa !92
  store double %a, ptr %a.addr, align 8, !tbaa !161
  store ptr %fromVector, ptr %fromVector.addr, align 8, !tbaa !4
  store double %b, ptr %b.addr, align 8, !tbaa !161
  store ptr %toVector, ptr %toVector.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %fromVectorLocal) #6
  %0 = load ptr, ptr %fromVector.addr, align 8, !tbaa !4
  %local_vector = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %0, i32 0, i32 6
  %1 = load ptr, ptr %local_vector, align 8, !tbaa !295
  store ptr %1, ptr %fromVectorLocal, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %fromVectorData) #6
  %2 = load ptr, ptr %fromVectorLocal, align 8, !tbaa !4
  %data = getelementptr inbounds %struct.hypre_Vector, ptr %2, i32 0, i32 0
  %3 = load ptr, ptr %data, align 8, !tbaa !185
  store ptr %3, ptr %fromVectorData, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %toVectorLocal) #6
  %4 = load ptr, ptr %toVector.addr, align 8, !tbaa !4
  %5 = load ptr, ptr %4, align 8, !tbaa !4
  %local_vector1 = getelementptr inbounds %struct.hypre_ParVector_struct, ptr %5, i32 0, i32 6
  %6 = load ptr, ptr %local_vector1, align 8, !tbaa !295
  store ptr %6, ptr %toVectorLocal, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %toVectorData) #6
  %7 = load ptr, ptr %toVectorLocal, align 8, !tbaa !4
  %data2 = getelementptr inbounds %struct.hypre_Vector, ptr %7, i32 0, i32 0
  %8 = load ptr, ptr %data2, align 8, !tbaa !185
  store ptr %8, ptr %toVectorData, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %CF_marker_data) #6
  %9 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %data3 = getelementptr inbounds %struct.hypre_IntArray, ptr %9, i32 0, i32 0
  %10 = load ptr, ptr %data3, align 8, !tbaa !156
  store ptr %10, ptr %CF_marker_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %n) #6
  %11 = load ptr, ptr %CF_marker.addr, align 8, !tbaa !4
  %size = getelementptr inbounds %struct.hypre_IntArray, ptr %11, i32 0, i32 1
  %12 = load i32, ptr %size, align 8, !tbaa !358
  store i32 %12, ptr %n, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #6
  store i32 0, ptr %j, align 4, !tbaa !92
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load i32, ptr %i, align 4, !tbaa !92
  %14 = load i32, ptr %n, align 4, !tbaa !92
  %cmp = icmp slt i32 %13, %14
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load ptr, ptr %CF_marker_data, align 8, !tbaa !4
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %16 to i64
  %arrayidx = getelementptr inbounds i32, ptr %15, i64 %idxprom
  %17 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %18 = load i32, ptr %point_type.addr, align 4, !tbaa !92
  %cmp4 = icmp eq i32 %17, %18
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %19 = load double, ptr %b.addr, align 8, !tbaa !161
  %20 = load ptr, ptr %toVectorData, align 8, !tbaa !4
  %21 = load i32, ptr %j, align 4, !tbaa !92
  %idxprom5 = sext i32 %21 to i64
  %arrayidx6 = getelementptr inbounds double, ptr %20, i64 %idxprom5
  %22 = load double, ptr %arrayidx6, align 8, !tbaa !161
  %23 = load double, ptr %a.addr, align 8, !tbaa !161
  %24 = load ptr, ptr %fromVectorData, align 8, !tbaa !4
  %25 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom7 = sext i32 %25 to i64
  %arrayidx8 = getelementptr inbounds double, ptr %24, i64 %idxprom7
  %26 = load double, ptr %arrayidx8, align 8, !tbaa !161
  %mul9 = fmul double %23, %26
  %27 = call double @llvm.fmuladd.f64(double %19, double %22, double %mul9)
  %28 = load ptr, ptr %toVectorData, align 8, !tbaa !4
  %29 = load i32, ptr %j, align 4, !tbaa !92
  %idxprom10 = sext i32 %29 to i64
  %arrayidx11 = getelementptr inbounds double, ptr %28, i64 %idxprom10
  store double %27, ptr %arrayidx11, align 8, !tbaa !161
  %30 = load i32, ptr %j, align 4, !tbaa !92
  %inc = add nsw i32 %30, 1
  store i32 %inc, ptr %j, align 4, !tbaa !92
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %31 = load i32, ptr %i, align 4, !tbaa !92
  %inc12 = add nsw i32 %31, 1
  store i32 %inc12, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !360

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %n) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %CF_marker_data) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %toVectorData) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %toVectorLocal) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %fromVectorData) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %fromVectorLocal) #6
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRGetCoarseGridMatrix(ptr noundef %mgr_vdata, ptr noundef %RAP) #0 {
entry:
  %retval = alloca i32, align 4
  %mgr_vdata.addr = alloca ptr, align 8
  %RAP.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %RAP, ptr %RAP.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 6469, i32 noundef 12, ptr noundef null)
  %2 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %2, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %RAP1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 14
  %4 = load ptr, ptr %RAP1, align 8, !tbaa !21
  %cmp = icmp eq ptr %4, null
  br i1 %cmp, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 6475, i32 noundef 1, ptr noundef @.str.12)
  %5 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %5, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %6 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %RAP4 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %6, i32 0, i32 14
  %7 = load ptr, ptr %RAP4, align 8, !tbaa !21
  %8 = load ptr, ptr %RAP.addr, align 8, !tbaa !4
  store ptr %7, ptr %8, align 8, !tbaa !4
  %9 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %9, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  %10 = load i32, ptr %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRGetCoarseGridSolution(ptr noundef %mgr_vdata, ptr noundef %sol) #0 {
entry:
  %retval = alloca i32, align 4
  %mgr_vdata.addr = alloca ptr, align 8
  %sol.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %sol, ptr %sol.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 6491, i32 noundef 12, ptr noundef null)
  %2 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %2, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 18
  %4 = load ptr, ptr %U_array, align 8, !tbaa !31
  %cmp = icmp eq ptr %4, null
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 6497, i32 noundef 1, ptr noundef @.str.13)
  %5 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %5, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %6 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %U_array3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %6, i32 0, i32 18
  %7 = load ptr, ptr %U_array3, align 8, !tbaa !31
  %8 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_coarse_levels = getelementptr inbounds %struct.hypre_ParMGRData, ptr %8, i32 0, i32 4
  %9 = load i32, ptr %num_coarse_levels, align 8, !tbaa !91
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds ptr, ptr %7, i64 %idxprom
  %10 = load ptr, ptr %arrayidx, align 8, !tbaa !4
  %11 = load ptr, ptr %sol.addr, align 8, !tbaa !4
  store ptr %10, ptr %11, align 8, !tbaa !4
  %12 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %12, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end2, %if.then1, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  %13 = load i32, ptr %retval, align 4
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRGetCoarseGridRHS(ptr noundef %mgr_vdata, ptr noundef %rhs) #0 {
entry:
  %retval = alloca i32, align 4
  %mgr_vdata.addr = alloca ptr, align 8
  %rhs.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %rhs, ptr %rhs.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 6513, i32 noundef 12, ptr noundef null)
  %2 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %2, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_array = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 17
  %4 = load ptr, ptr %F_array, align 8, !tbaa !30
  %cmp = icmp eq ptr %4, null
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  call void @hypre_error_handler(ptr noundef @.str, i32 noundef 6519, i32 noundef 1, ptr noundef @.str.14)
  %5 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %5, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %6 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %F_array3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %6, i32 0, i32 17
  %7 = load ptr, ptr %F_array3, align 8, !tbaa !30
  %8 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_coarse_levels = getelementptr inbounds %struct.hypre_ParMGRData, ptr %8, i32 0, i32 4
  %9 = load i32, ptr %num_coarse_levels, align 8, !tbaa !91
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds ptr, ptr %7, i64 %idxprom
  %10 = load ptr, ptr %arrayidx, align 8, !tbaa !4
  %11 = load ptr, ptr %rhs.addr, align 8, !tbaa !4
  store ptr %10, ptr %11, align 8, !tbaa !4
  %12 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  store i32 %12, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end2, %if.then1, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  %13 = load i32, ptr %retval, align 4
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRPrintCoarseSystem(ptr noundef %mgr_vdata, i32 noundef %print_flag) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %print_flag.addr = alloca i32, align 4
  %mgr_data = alloca ptr, align 8
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store i32 %print_flag, ptr %print_flag.addr, align 4, !tbaa !92
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  %1 = load i32, ptr %print_flag.addr, align 4, !tbaa !92
  %2 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %print_coarse_system = getelementptr inbounds %struct.hypre_ParMGRData, ptr %2, i32 0, i32 80
  store i32 %1, ptr %print_coarse_system, align 4, !tbaa !83
  %3 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define i32 @hypre_MGRWriteSolverParams(ptr noundef %mgr_vdata) #0 {
entry:
  %mgr_vdata.addr = alloca ptr, align 8
  %mgr_data = alloca ptr, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %max_num_coarse_levels = alloca i32, align 4
  %lvl_num_coarse_points = alloca i32, align 4
  store ptr %mgr_vdata, ptr %mgr_vdata.addr, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 8, ptr %mgr_data) #6
  %0 = load ptr, ptr %mgr_vdata.addr, align 8, !tbaa !4
  store ptr %0, ptr %mgr_data, align 8, !tbaa !4
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.start.p0(i64 4, ptr %max_num_coarse_levels) #6
  %1 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels1 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %1, i32 0, i32 7
  %2 = load i32, ptr %max_num_coarse_levels1, align 8, !tbaa !15
  store i32 %2, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %call = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.15)
  %3 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_size = getelementptr inbounds %struct.hypre_ParMGRData, ptr %3, i32 0, i32 0
  %4 = load i32, ptr %block_size, align 8, !tbaa !8
  %call2 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.16, i32 noundef %4)
  %5 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_num_coarse_levels3 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %5, i32 0, i32 7
  %6 = load i32, ptr %max_num_coarse_levels3, align 8, !tbaa !15
  %call4 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.17, i32 noundef %6)
  %7 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %set_non_Cpoints_to_F = getelementptr inbounds %struct.hypre_ParMGRData, ptr %7, i32 0, i32 70
  %8 = load i32, ptr %set_non_Cpoints_to_F, align 8, !tbaa !74
  %call5 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.18, i32 noundef %8)
  %9 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %set_c_points_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %9, i32 0, i32 82
  %10 = load i32, ptr %set_c_points_method, align 8, !tbaa !84
  %call6 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.19, i32 noundef %10)
  store i32 0, ptr %i, align 4, !tbaa !92
  br label %for.cond

for.cond:                                         ; preds = %for.inc34, %entry
  %11 = load i32, ptr %i, align 4, !tbaa !92
  %12 = load i32, ptr %max_num_coarse_levels, align 4, !tbaa !92
  %cmp = icmp slt i32 %11, %12
  br i1 %cmp, label %for.body, label %for.end36

for.body:                                         ; preds = %for.cond
  %13 = load i32, ptr %i, align 4, !tbaa !92
  %14 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %interp_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %14, i32 0, i32 29
  %15 = load ptr, ptr %interp_type, align 8, !tbaa !58
  %16 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom = sext i32 %16 to i64
  %arrayidx = getelementptr inbounds i32, ptr %15, i64 %idxprom
  %17 = load i32, ptr %arrayidx, align 4, !tbaa !92
  %call7 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.20, i32 noundef %13, i32 noundef %17)
  %18 = load i32, ptr %i, align 4, !tbaa !92
  %19 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %restrict_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %19, i32 0, i32 30
  %20 = load ptr, ptr %restrict_type, align 8, !tbaa !59
  %21 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom8 = sext i32 %21 to i64
  %arrayidx9 = getelementptr inbounds i32, ptr %20, i64 %idxprom8
  %22 = load i32, ptr %arrayidx9, align 4, !tbaa !92
  %call10 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.21, i32 noundef %18, i32 noundef %22)
  %23 = load i32, ptr %i, align 4, !tbaa !92
  %24 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %Frelax_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %24, i32 0, i32 73
  %25 = load ptr, ptr %Frelax_type, align 8, !tbaa !54
  %26 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom11 = sext i32 %26 to i64
  %arrayidx12 = getelementptr inbounds i32, ptr %25, i64 %idxprom11
  %27 = load i32, ptr %arrayidx12, align 4, !tbaa !92
  %call13 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.22, i32 noundef %23, i32 noundef %27)
  %28 = load i32, ptr %i, align 4, !tbaa !92
  %29 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_relax_sweeps = getelementptr inbounds %struct.hypre_ParMGRData, ptr %29, i32 0, i32 47
  %30 = load ptr, ptr %num_relax_sweeps, align 8, !tbaa !56
  %31 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom14 = sext i32 %31 to i64
  %arrayidx15 = getelementptr inbounds i32, ptr %30, i64 %idxprom14
  %32 = load i32, ptr %arrayidx15, align 4, !tbaa !92
  %call16 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.23, i32 noundef %28, i32 noundef %32)
  %33 = load i32, ptr %i, align 4, !tbaa !92
  %34 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %mgr_coarse_grid_method = getelementptr inbounds %struct.hypre_ParMGRData, ptr %34, i32 0, i32 75
  %35 = load ptr, ptr %mgr_coarse_grid_method, align 8, !tbaa !82
  %36 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom17 = sext i32 %36 to i64
  %arrayidx18 = getelementptr inbounds i32, ptr %35, i64 %idxprom17
  %37 = load i32, ptr %arrayidx18, align 4, !tbaa !92
  %call19 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.24, i32 noundef %33, i32 noundef %37)
  call void @llvm.lifetime.start.p0(i64 4, ptr %lvl_num_coarse_points) #6
  %38 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_num_coarse_indexes = getelementptr inbounds %struct.hypre_ParMGRData, ptr %38, i32 0, i32 1
  %39 = load ptr, ptr %block_num_coarse_indexes, align 8, !tbaa !12
  %40 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom20 = sext i32 %40 to i64
  %arrayidx21 = getelementptr inbounds i32, ptr %39, i64 %idxprom20
  %41 = load i32, ptr %arrayidx21, align 4, !tbaa !92
  store i32 %41, ptr %lvl_num_coarse_points, align 4, !tbaa !92
  %42 = load i32, ptr %i, align 4, !tbaa !92
  %43 = load i32, ptr %lvl_num_coarse_points, align 4, !tbaa !92
  %call22 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.25, i32 noundef %42, i32 noundef %43)
  %call23 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.26)
  store i32 0, ptr %j, align 4, !tbaa !92
  br label %for.cond24

for.cond24:                                       ; preds = %for.inc, %for.body
  %44 = load i32, ptr %j, align 4, !tbaa !92
  %45 = load i32, ptr %lvl_num_coarse_points, align 4, !tbaa !92
  %cmp25 = icmp slt i32 %44, %45
  br i1 %cmp25, label %for.body26, label %for.end

for.body26:                                       ; preds = %for.cond24
  %46 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %block_cf_marker = getelementptr inbounds %struct.hypre_ParMGRData, ptr %46, i32 0, i32 3
  %47 = load ptr, ptr %block_cf_marker, align 8, !tbaa !14
  %48 = load i32, ptr %i, align 4, !tbaa !92
  %idxprom27 = sext i32 %48 to i64
  %arrayidx28 = getelementptr inbounds ptr, ptr %47, i64 %idxprom27
  %49 = load ptr, ptr %arrayidx28, align 8, !tbaa !4
  %50 = load i32, ptr %j, align 4, !tbaa !92
  %idxprom29 = sext i32 %50 to i64
  %arrayidx30 = getelementptr inbounds i32, ptr %49, i64 %idxprom29
  %51 = load i32, ptr %arrayidx30, align 4, !tbaa !92
  %cmp31 = icmp eq i32 %51, 1
  br i1 %cmp31, label %if.then, label %if.end

if.then:                                          ; preds = %for.body26
  %52 = load i32, ptr %j, align 4, !tbaa !92
  %call32 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.27, i32 noundef %52)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body26
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %53 = load i32, ptr %j, align 4, !tbaa !92
  %inc = add nsw i32 %53, 1
  store i32 %inc, ptr %j, align 4, !tbaa !92
  br label %for.cond24, !llvm.loop !361

for.end:                                          ; preds = %for.cond24
  %call33 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.28)
  call void @llvm.lifetime.end.p0(i64 4, ptr %lvl_num_coarse_points) #6
  br label %for.inc34

for.inc34:                                        ; preds = %for.end
  %54 = load i32, ptr %i, align 4, !tbaa !92
  %inc35 = add nsw i32 %54, 1
  store i32 %inc35, ptr %i, align 4, !tbaa !92
  br label %for.cond, !llvm.loop !362

for.end36:                                        ; preds = %for.cond
  %55 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %reserved_coarse_size = getelementptr inbounds %struct.hypre_ParMGRData, ptr %55, i32 0, i32 67
  %56 = load i32, ptr %reserved_coarse_size, align 4, !tbaa !69
  %call37 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.29, i32 noundef %56)
  %57 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %lvl_to_keep_cpoints = getelementptr inbounds %struct.hypre_ParMGRData, ptr %57, i32 0, i32 83
  %58 = load i32, ptr %lvl_to_keep_cpoints, align 4, !tbaa !85
  %call38 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.30, i32 noundef %58)
  %call39 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.31)
  %59 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_interp_sweeps = getelementptr inbounds %struct.hypre_ParMGRData, ptr %59, i32 0, i32 27
  %60 = load i32, ptr %num_interp_sweeps, align 8, !tbaa !39
  %call40 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.32, i32 noundef %60)
  %61 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %num_restrict_sweeps = getelementptr inbounds %struct.hypre_ParMGRData, ptr %61, i32 0, i32 28
  %62 = load i32, ptr %num_restrict_sweeps, align 4, !tbaa !40
  %call41 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.33, i32 noundef %62)
  %63 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type = getelementptr inbounds %struct.hypre_ParMGRData, ptr %63, i32 0, i32 64
  %64 = load ptr, ptr %level_smooth_type, align 8, !tbaa !61
  %cmp42 = icmp ne ptr %64, null
  br i1 %cmp42, label %if.then43, label %if.end49

if.then43:                                        ; preds = %for.end36
  %65 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_type44 = getelementptr inbounds %struct.hypre_ParMGRData, ptr %65, i32 0, i32 64
  %66 = load ptr, ptr %level_smooth_type44, align 8, !tbaa !61
  %arrayidx45 = getelementptr inbounds i32, ptr %66, i64 0
  %67 = load i32, ptr %arrayidx45, align 4, !tbaa !92
  %call46 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.34, i32 noundef %67)
  %68 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %level_smooth_iters = getelementptr inbounds %struct.hypre_ParMGRData, ptr %68, i32 0, i32 63
  %69 = load ptr, ptr %level_smooth_iters, align 8, !tbaa !60
  %arrayidx47 = getelementptr inbounds i32, ptr %69, i64 0
  %70 = load i32, ptr %arrayidx47, align 4, !tbaa !92
  %call48 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.35, i32 noundef %70)
  br label %if.end49

if.end49:                                         ; preds = %if.then43, %for.end36
  %71 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %max_iter = getelementptr inbounds %struct.hypre_ParMGRData, ptr %71, i32 0, i32 45
  %72 = load i32, ptr %max_iter, align 4, !tbaa !51
  %call50 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.36, i32 noundef %72)
  %73 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %tol = getelementptr inbounds %struct.hypre_ParMGRData, ptr %73, i32 0, i32 38
  %74 = load double, ptr %tol, align 8, !tbaa !52
  %call51 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.37, double noundef %74)
  %75 = load ptr, ptr %mgr_data, align 8, !tbaa !4
  %use_default_cgrid_solver = getelementptr inbounds %struct.hypre_ParMGRData, ptr %75, i32 0, i32 51
  %76 = load i32, ptr %use_default_cgrid_solver, align 8, !tbaa !48
  %call52 = call i32 (ptr, ...) @hypre_printf(ptr noundef @.str.38, i32 noundef %76)
  %77 = load i32, ptr @hypre__global_error, align 8, !tbaa !109
  call void @llvm.lifetime.end.p0(i64 4, ptr %max_num_coarse_levels) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #6
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #6
  call void @llvm.lifetime.end.p0(i64 8, ptr %mgr_data) #6
  ret i32 %77
}

declare i32 @hypre_sprintf(ptr noundef, ptr noundef, ...) #2

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #4 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 2}
!3 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!4 = !{!5, !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !{!9, !10, i64 0}
!9 = !{!"", !10, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !10, i64 32, !5, i64 40, !5, i64 48, !10, i64 56, !5, i64 64, !5, i64 72, !5, i64 80, !5, i64 88, !5, i64 96, !5, i64 104, !5, i64 112, !5, i64 120, !5, i64 128, !5, i64 136, !5, i64 144, !5, i64 152, !5, i64 160, !5, i64 168, !5, i64 176, !5, i64 184, !5, i64 192, !5, i64 200, !11, i64 208, !10, i64 216, !10, i64 220, !5, i64 224, !5, i64 232, !11, i64 240, !11, i64 248, !11, i64 256, !10, i64 264, !10, i64 268, !5, i64 272, !11, i64 280, !11, i64 288, !11, i64 296, !10, i64 304, !10, i64 308, !10, i64 312, !10, i64 316, !10, i64 320, !10, i64 324, !10, i64 328, !5, i64 336, !5, i64 344, !5, i64 352, !5, i64 360, !10, i64 368, !10, i64 372, !11, i64 376, !5, i64 384, !5, i64 392, !5, i64 400, !5, i64 408, !5, i64 416, !5, i64 424, !10, i64 432, !10, i64 436, !5, i64 440, !5, i64 448, !5, i64 456, !5, i64 464, !10, i64 472, !10, i64 476, !5, i64 480, !5, i64 488, !10, i64 496, !5, i64 504, !5, i64 512, !5, i64 520, !5, i64 528, !5, i64 536, !5, i64 544, !5, i64 552, !5, i64 560, !10, i64 568, !10, i64 572, !11, i64 576, !10, i64 584, !10, i64 588, !10, i64 592, !11, i64 600, !5, i64 608}
!10 = !{!"int", !6, i64 0}
!11 = !{!"double", !6, i64 0}
!12 = !{!9, !5, i64 8}
!13 = !{!9, !5, i64 16}
!14 = !{!9, !5, i64 24}
!15 = !{!9, !10, i64 56}
!16 = !{!9, !5, i64 64}
!17 = !{!9, !5, i64 72}
!18 = !{!9, !5, i64 80}
!19 = !{!9, !5, i64 96}
!20 = !{!9, !5, i64 104}
!21 = !{!9, !5, i64 112}
!22 = !{!9, !5, i64 120}
!23 = !{!9, !5, i64 128}
!24 = !{!9, !5, i64 88}
!25 = !{!9, !5, i64 168}
!26 = !{!9, !5, i64 176}
!27 = !{!9, !5, i64 184}
!28 = !{!9, !5, i64 192}
!29 = !{!9, !5, i64 200}
!30 = !{!9, !5, i64 136}
!31 = !{!9, !5, i64 144}
!32 = !{!9, !5, i64 152}
!33 = !{!9, !5, i64 160}
!34 = !{!9, !5, i64 384}
!35 = !{!9, !5, i64 392}
!36 = !{!9, !5, i64 400}
!37 = !{!9, !5, i64 408}
!38 = !{!9, !10, i64 268}
!39 = !{!9, !10, i64 216}
!40 = !{!9, !10, i64 220}
!41 = !{!9, !11, i64 248}
!42 = !{!9, !11, i64 208}
!43 = !{!9, !11, i64 240}
!44 = !{!9, !10, i64 264}
!45 = !{!9, !5, i64 344}
!46 = !{!9, !5, i64 352}
!47 = !{!9, !5, i64 360}
!48 = !{!9, !10, i64 368}
!49 = !{!9, !10, i64 372}
!50 = !{!9, !11, i64 376}
!51 = !{!9, !10, i64 324}
!52 = !{!9, !11, i64 288}
!53 = !{!9, !10, i64 304}
!54 = !{!9, !5, i64 520}
!55 = !{!9, !10, i64 328}
!56 = !{!9, !5, i64 336}
!57 = !{!9, !11, i64 296}
!58 = !{!9, !5, i64 224}
!59 = !{!9, !5, i64 232}
!60 = !{!9, !5, i64 448}
!61 = !{!9, !5, i64 456}
!62 = !{!9, !5, i64 464}
!63 = !{!9, !10, i64 472}
!64 = !{!9, !10, i64 308}
!65 = !{!9, !10, i64 312}
!66 = !{!9, !10, i64 316}
!67 = !{!9, !10, i64 320}
!68 = !{!9, !5, i64 272}
!69 = !{!9, !10, i64 476}
!70 = !{!9, !5, i64 480}
!71 = !{!9, !5, i64 488}
!72 = !{!9, !5, i64 416}
!73 = !{!9, !5, i64 424}
!74 = !{!9, !10, i64 496}
!75 = !{!9, !5, i64 504}
!76 = !{!9, !5, i64 512}
!77 = !{!9, !5, i64 552}
!78 = !{!9, !5, i64 560}
!79 = !{!9, !5, i64 544}
!80 = !{!9, !5, i64 528}
!81 = !{!9, !10, i64 568}
!82 = !{!9, !5, i64 536}
!83 = !{!9, !10, i64 572}
!84 = !{!9, !10, i64 584}
!85 = !{!9, !10, i64 588}
!86 = !{!9, !11, i64 600}
!87 = !{!9, !10, i64 592}
!88 = !{!9, !5, i64 440}
!89 = !{!9, !11, i64 576}
!90 = !{!9, !5, i64 608}
!91 = !{!9, !10, i64 32}
!92 = !{!10, !10, i64 0}
!93 = distinct !{!93, !94}
!94 = !{!"llvm.loop.mustprogress"}
!95 = distinct !{!95, !94}
!96 = distinct !{!96, !94}
!97 = distinct !{!97, !94}
!98 = distinct !{!98, !94}
!99 = distinct !{!99, !94}
!100 = distinct !{!100, !94}
!101 = distinct !{!101, !94}
!102 = distinct !{!102, !94}
!103 = distinct !{!103, !94}
!104 = distinct !{!104, !94}
!105 = distinct !{!105, !94}
!106 = distinct !{!106, !94}
!107 = distinct !{!107, !94}
!108 = distinct !{!108, !94}
!109 = !{!110, !10, i64 0}
!110 = !{!"", !10, i64 0, !10, i64 4, !5, i64 8, !10, i64 16, !10, i64 20}
!111 = !{!112, !10, i64 464}
!112 = !{!"", !6, i64 0, !10, i64 4, !11, i64 8, !10, i64 16, !11, i64 24, !11, i64 32, !11, i64 40, !11, i64 48, !11, i64 56, !11, i64 64, !11, i64 72, !11, i64 80, !11, i64 88, !11, i64 96, !11, i64 104, !10, i64 112, !10, i64 116, !10, i64 120, !10, i64 124, !10, i64 128, !10, i64 132, !10, i64 136, !10, i64 140, !10, i64 144, !10, i64 148, !10, i64 152, !10, i64 156, !10, i64 160, !10, i64 164, !10, i64 168, !10, i64 172, !10, i64 176, !10, i64 180, !10, i64 184, !10, i64 188, !10, i64 192, !10, i64 196, !10, i64 200, !10, i64 204, !10, i64 208, !10, i64 212, !10, i64 216, !10, i64 220, !10, i64 224, !10, i64 228, !5, i64 232, !5, i64 240, !5, i64 248, !10, i64 256, !10, i64 260, !10, i64 264, !10, i64 268, !11, i64 272, !11, i64 280, !5, i64 288, !5, i64 296, !10, i64 304, !11, i64 312, !10, i64 320, !10, i64 324, !5, i64 328, !10, i64 336, !10, i64 340, !10, i64 344, !10, i64 348, !10, i64 352, !10, i64 356, !10, i64 360, !5, i64 368, !5, i64 376, !5, i64 384, !5, i64 392, !5, i64 400, !5, i64 408, !5, i64 416, !5, i64 424, !5, i64 432, !5, i64 440, !5, i64 448, !5, i64 456, !10, i64 464, !5, i64 472, !5, i64 480, !5, i64 488, !5, i64 496, !10, i64 504, !10, i64 508, !10, i64 512, !5, i64 520, !10, i64 528, !10, i64 532, !10, i64 536, !10, i64 540, !11, i64 544, !10, i64 552, !10, i64 556, !10, i64 560, !10, i64 564, !10, i64 568, !10, i64 572, !11, i64 576, !11, i64 584, !11, i64 592, !11, i64 600, !5, i64 608, !10, i64 616, !10, i64 620, !10, i64 624, !10, i64 628, !11, i64 632, !10, i64 640, !10, i64 644, !10, i64 648, !10, i64 652, !10, i64 656, !10, i64 660, !10, i64 664, !11, i64 672, !5, i64 680, !5, i64 688, !10, i64 696, !10, i64 700, !10, i64 704, !10, i64 708, !11, i64 712, !5, i64 720, !5, i64 728, !11, i64 736, !10, i64 744, !5, i64 752, !11, i64 760, !5, i64 768, !5, i64 776, !5, i64 784, !5, i64 792, !11, i64 800, !5, i64 808, !5, i64 816, !5, i64 824, !10, i64 832, !10, i64 836, !10, i64 840, !10, i64 844, !10, i64 848, !11, i64 856, !5, i64 864, !10, i64 872, !6, i64 876, !10, i64 1132, !10, i64 1136, !6, i64 1140, !10, i64 1392, !5, i64 1400, !10, i64 1408, !10, i64 1412, !5, i64 1416, !5, i64 1424, !10, i64 1432, !10, i64 1436, !11, i64 1440, !10, i64 1448, !10, i64 1452, !10, i64 1456, !5, i64 1464, !5, i64 1472, !5, i64 1480, !5, i64 1488, !5, i64 1496, !5, i64 1504, !10, i64 1512, !5, i64 1520, !5, i64 1528, !5, i64 1536, !5, i64 1544, !10, i64 1552, !10, i64 1556, !10, i64 1560, !10, i64 1564, !10, i64 1568, !11, i64 1576, !10, i64 1584, !11, i64 1592, !5, i64 1600, !5, i64 1608, !5, i64 1616, !5, i64 1624, !5, i64 1632, !10, i64 1640, !10, i64 1644, !10, i64 1648, !10, i64 1652, !10, i64 1656, !5, i64 1664, !5, i64 1672, !10, i64 1680, !5, i64 1688, !10, i64 1696, !5, i64 1704}
!113 = !{!112, !5, i64 1504}
!114 = !{!112, !5, i64 440}
!115 = !{!112, !5, i64 392}
!116 = !{!112, !5, i64 416}
!117 = !{!112, !5, i64 432}
!118 = !{!112, !5, i64 400}
!119 = !{!112, !5, i64 408}
!120 = distinct !{!120, !94}
!121 = !{!112, !5, i64 1520}
!122 = !{!112, !5, i64 1528}
!123 = !{!112, !5, i64 1536}
!124 = !{!112, !5, i64 1544}
!125 = !{!112, !10, i64 1512}
!126 = !{!112, !5, i64 776}
!127 = !{!112, !5, i64 824}
!128 = !{!112, !10, i64 4}
!129 = !{!112, !10, i64 340}
!130 = !{!112, !11, i64 80}
!131 = !{!112, !10, i64 256}
!132 = !{!112, !10, i64 192}
!133 = !{!112, !10, i64 196}
!134 = !{!112, !10, i64 260}
!135 = !{!9, !5, i64 40}
!136 = !{!9, !5, i64 48}
!137 = distinct !{!137, !94}
!138 = distinct !{!138, !94}
!139 = distinct !{!139, !94}
!140 = distinct !{!140, !94}
!141 = distinct !{!141, !94}
!142 = distinct !{!142, !94}
!143 = distinct !{!143, !94}
!144 = distinct !{!144, !94}
!145 = distinct !{!145, !94}
!146 = distinct !{!146, !94}
!147 = distinct !{!147, !94}
!148 = distinct !{!148, !94}
!149 = !{!150, !5, i64 40}
!150 = !{!"hypre_ParCSRMatrix_struct", !5, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 20, !10, i64 24, !10, i64 28, !10, i64 32, !5, i64 40, !5, i64 48, !5, i64 56, !5, i64 64, !5, i64 72, !5, i64 80, !6, i64 88, !6, i64 96, !5, i64 104, !5, i64 112, !10, i64 120, !10, i64 124, !11, i64 128, !5, i64 136, !5, i64 144, !10, i64 152, !5, i64 160, !10, i64 168, !5, i64 176, !10, i64 184, !5, i64 192, !5, i64 200}
!151 = !{!152, !10, i64 24}
!152 = !{!"", !5, i64 0, !5, i64 8, !5, i64 16, !10, i64 24, !10, i64 28, !10, i64 32, !5, i64 40, !5, i64 48, !10, i64 56, !10, i64 60, !5, i64 64, !5, i64 72, !10, i64 80, !6, i64 84}
!153 = !{!154, !6, i64 12}
!154 = !{!"", !5, i64 0, !10, i64 8, !6, i64 12}
!155 = !{!6, !6, i64 0}
!156 = !{!154, !5, i64 0}
!157 = distinct !{!157, !94}
!158 = distinct !{!158, !94}
!159 = distinct !{!159, !94}
!160 = !{!150, !5, i64 0}
!161 = !{!11, !11, i64 0}
!162 = !{!150, !5, i64 48}
!163 = !{!152, !5, i64 0}
!164 = !{!152, !5, i64 8}
!165 = !{!152, !5, i64 64}
!166 = !{!152, !10, i64 32}
!167 = !{!152, !10, i64 28}
!168 = distinct !{!168, !94}
!169 = distinct !{!169, !94}
!170 = distinct !{!170, !94}
!171 = !{!150, !10, i64 8}
!172 = !{!150, !10, i64 12}
!173 = !{!150, !5, i64 80}
!174 = !{!150, !5, i64 72}
!175 = !{!150, !10, i64 124}
!176 = !{!150, !11, i64 128}
!177 = !{!152, !6, i64 84}
!178 = distinct !{!178, !94}
!179 = distinct !{!179, !94}
!180 = distinct !{!180, !94}
!181 = distinct !{!181, !94}
!182 = distinct !{!182, !94}
!183 = distinct !{!183, !94}
!184 = distinct !{!184, !94}
!185 = !{!186, !5, i64 0}
!186 = !{!"", !5, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !6, i64 20, !10, i64 24, !10, i64 28, !10, i64 32, !10, i64 36}
!187 = !{!150, !5, i64 104}
!188 = !{!189, !10, i64 12}
!189 = !{!"_hypre_ParCSRCommPkg", !5, i64 0, !10, i64 8, !10, i64 12, !5, i64 16, !5, i64 24, !5, i64 32, !5, i64 40, !10, i64 48, !5, i64 56, !5, i64 64, !5, i64 72, !5, i64 80}
!190 = !{!189, !5, i64 24}
!191 = !{!189, !5, i64 32}
!192 = distinct !{!192, !94}
!193 = distinct !{!193, !94}
!194 = distinct !{!194, !94}
!195 = distinct !{!195, !94}
!196 = distinct !{!196, !94}
!197 = distinct !{!197, !94}
!198 = distinct !{!198, !94}
!199 = distinct !{!199, !94}
!200 = distinct !{!200, !94}
!201 = distinct !{!201, !94}
!202 = distinct !{!202, !94}
!203 = distinct !{!203, !94}
!204 = distinct !{!204, !94}
!205 = distinct !{!205, !94}
!206 = distinct !{!206, !94}
!207 = distinct !{!207, !94}
!208 = distinct !{!208, !94}
!209 = distinct !{!209, !94}
!210 = distinct !{!210, !94}
!211 = distinct !{!211, !94}
!212 = distinct !{!212, !94}
!213 = distinct !{!213, !94}
!214 = distinct !{!214, !94}
!215 = distinct !{!215, !94}
!216 = distinct !{!216, !94}
!217 = distinct !{!217, !94}
!218 = distinct !{!218, !94}
!219 = distinct !{!219, !94}
!220 = distinct !{!220, !94}
!221 = distinct !{!221, !94}
!222 = distinct !{!222, !94}
!223 = distinct !{!223, !94}
!224 = distinct !{!224, !94}
!225 = distinct !{!225, !94}
!226 = distinct !{!226, !94}
!227 = distinct !{!227, !94}
!228 = distinct !{!228, !94}
!229 = distinct !{!229, !94}
!230 = distinct !{!230, !94}
!231 = distinct !{!231, !94}
!232 = distinct !{!232, !94}
!233 = distinct !{!233, !94}
!234 = distinct !{!234, !94}
!235 = distinct !{!235, !94}
!236 = distinct !{!236, !94}
!237 = distinct !{!237, !94}
!238 = distinct !{!238, !94}
!239 = distinct !{!239, !94}
!240 = distinct !{!240, !94}
!241 = distinct !{!241, !94}
!242 = distinct !{!242, !94}
!243 = distinct !{!243, !94}
!244 = distinct !{!244, !94}
!245 = distinct !{!245, !94}
!246 = distinct !{!246, !94}
!247 = distinct !{!247, !94}
!248 = distinct !{!248, !94}
!249 = distinct !{!249, !94}
!250 = distinct !{!250, !94}
!251 = distinct !{!251, !94}
!252 = distinct !{!252, !94}
!253 = distinct !{!253, !94}
!254 = distinct !{!254, !94}
!255 = distinct !{!255, !94}
!256 = distinct !{!256, !94}
!257 = distinct !{!257, !94}
!258 = !{!150, !10, i64 20}
!259 = distinct !{!259, !94}
!260 = distinct !{!260, !94}
!261 = distinct !{!261, !94}
!262 = distinct !{!262, !94}
!263 = distinct !{!263, !94}
!264 = distinct !{!264, !94}
!265 = distinct !{!265, !94}
!266 = distinct !{!266, !94}
!267 = distinct !{!267, !94}
!268 = distinct !{!268, !94}
!269 = distinct !{!269, !94}
!270 = distinct !{!270, !94}
!271 = distinct !{!271, !94}
!272 = distinct !{!272, !94}
!273 = distinct !{!273, !94}
!274 = distinct !{!274, !94}
!275 = distinct !{!275, !94}
!276 = distinct !{!276, !94}
!277 = distinct !{!277, !94}
!278 = distinct !{!278, !94}
!279 = distinct !{!279, !94}
!280 = !{!150, !5, i64 160}
!281 = distinct !{!281, !94}
!282 = distinct !{!282, !94}
!283 = distinct !{!283, !94}
!284 = !{!150, !5, i64 56}
!285 = !{!150, !5, i64 64}
!286 = distinct !{!286, !94}
!287 = distinct !{!287, !94}
!288 = distinct !{!288, !94}
!289 = distinct !{!289, !94}
!290 = distinct !{!290, !94}
!291 = distinct !{!291, !94}
!292 = distinct !{!292, !94}
!293 = distinct !{!293, !94}
!294 = distinct !{!294, !94}
!295 = !{!296, !5, i64 32}
!296 = !{!"hypre_ParVector_struct", !5, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !6, i64 20, !10, i64 28, !5, i64 32, !10, i64 40, !10, i64 44, !5, i64 48}
!297 = distinct !{!297, !94}
!298 = distinct !{!298, !94}
!299 = distinct !{!299, !94}
!300 = distinct !{!300, !94}
!301 = distinct !{!301, !94}
!302 = distinct !{!302, !94}
!303 = distinct !{!303, !94}
!304 = distinct !{!304, !94}
!305 = distinct !{!305, !94}
!306 = !{!296, !10, i64 44}
!307 = distinct !{!307, !94}
!308 = distinct !{!308, !94}
!309 = distinct !{!309, !94}
!310 = distinct !{!310, !94}
!311 = distinct !{!311, !94}
!312 = distinct !{!312, !94}
!313 = distinct !{!313, !94}
!314 = distinct !{!314, !94}
!315 = distinct !{!315, !94}
!316 = distinct !{!316, !94}
!317 = distinct !{!317, !94}
!318 = distinct !{!318, !94}
!319 = distinct !{!319, !94}
!320 = distinct !{!320, !94}
!321 = distinct !{!321, !94}
!322 = distinct !{!322, !94}
!323 = distinct !{!323, !94}
!324 = distinct !{!324, !94}
!325 = distinct !{!325, !94}
!326 = distinct !{!326, !94}
!327 = distinct !{!327, !94}
!328 = distinct !{!328, !94}
!329 = distinct !{!329, !94}
!330 = distinct !{!330, !94}
!331 = distinct !{!331, !94}
!332 = distinct !{!332, !94}
!333 = distinct !{!333, !94}
!334 = distinct !{!334, !94}
!335 = distinct !{!335, !94}
!336 = distinct !{!336, !94}
!337 = distinct !{!337, !94}
!338 = distinct !{!338, !94}
!339 = distinct !{!339, !94}
!340 = distinct !{!340, !94}
!341 = distinct !{!341, !94}
!342 = distinct !{!342, !94}
!343 = distinct !{!343, !94}
!344 = distinct !{!344, !94}
!345 = distinct !{!345, !94}
!346 = distinct !{!346, !94}
!347 = distinct !{!347, !94}
!348 = distinct !{!348, !94}
!349 = distinct !{!349, !94}
!350 = distinct !{!350, !94}
!351 = distinct !{!351, !94}
!352 = distinct !{!352, !94}
!353 = distinct !{!353, !94}
!354 = distinct !{!354, !94}
!355 = distinct !{!355, !94}
!356 = !{!9, !11, i64 280}
!357 = distinct !{!357, !94}
!358 = !{!154, !10, i64 8}
!359 = distinct !{!359, !94}
!360 = distinct !{!360, !94}
!361 = distinct !{!361, !94}
!362 = distinct !{!362, !94}

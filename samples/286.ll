; ModuleID = 'samples/286.bc'
source_filename = "sdlz.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dns_dlzmethods = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.isc_logcategory = type { ptr, i32 }
%struct.isc_logmodule = type { ptr, i32 }
%struct.dns_dbmethods = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dns_dbiteratormethods = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dns_rdatasetmethods = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dns_rdatasetitermethods = type { ptr, ptr, ptr, ptr }
%struct.isc_consttextregion = type { ptr, i32 }
%struct.isc_buffer = type { i32, ptr, i32, i32, i32, i32, %struct.anon.6, ptr, i8 }
%struct.anon.6 = type { ptr, ptr }
%union.anon = type { ptr }
%struct.isc__magic_t = type { i32 }
%struct.dns_sdlzlookup = type { i32, ptr, %struct.anon.7, %struct.anon.8, ptr, %struct.anon.9, %union.pthread_mutex_t, %struct.dns_rdatacallbacks, i32 }
%struct.anon.7 = type { ptr, ptr }
%struct.anon.8 = type { ptr, ptr }
%struct.anon.9 = type { ptr, ptr }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { ptr, ptr }
%struct.dns_rdatacallbacks = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dns_sdlz_db = type { %struct.dns_db, ptr, ptr, %union.pthread_mutex_t, i32, ptr, i32 }
%struct.dns_db = type { i32, i32, ptr, i16, i16, %struct.dns_name, ptr, %struct.anon.12 }
%struct.dns_name = type { i32, ptr, i32, i32, i32, ptr, ptr, %struct.anon.10, %struct.anon.11 }
%struct.anon.10 = type { ptr, ptr }
%struct.anon.11 = type { ptr, ptr }
%struct.anon.12 = type { ptr, ptr }
%struct.dns_rdatalist = type { i16, i16, i16, i32, %struct.anon.13, %struct.anon.14, [32 x i8] }
%struct.anon.13 = type { ptr, ptr }
%struct.anon.14 = type { ptr, ptr }
%struct.dns_sdlzimplementation = type { ptr, ptr, ptr, i32, %union.pthread_mutex_t, ptr }
%struct.dns_rdata = type { ptr, i32, i16, i16, i32, %struct.anon.15 }
%struct.anon.15 = type { ptr, ptr }
%struct.dns_fixedname = type { %struct.dns_name, [128 x i8], %struct.isc_buffer, [255 x i8] }
%union.anon.17 = type { ptr }
%struct.dns_sdlzallnodes = type { %struct.dns_dbiterator, %struct.anon.16, ptr, ptr }
%struct.dns_dbiterator = type { i32, ptr, ptr, i8, i8 }
%struct.anon.16 = type { ptr, ptr }
%struct.dns_sdlzmethods = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }
%struct.dns_dlzdb = type { i32, ptr, ptr, ptr, ptr, i8, ptr, %struct.anon.18, ptr }
%struct.anon.18 = type { ptr, ptr }
%struct.dns_dlzimplementation = type { ptr, ptr, ptr, ptr, %struct.anon.19 }
%struct.anon.19 = type { ptr, ptr }
%struct.isc_netaddr = type { i32, %union.anon.20, i32 }
%union.anon.20 = type { %struct.in6_addr, [92 x i8] }
%struct.in6_addr = type { %union.anon.21 }
%union.anon.21 = type { [4 x i32] }
%struct.isc_region = type { ptr, i32 }
%struct.sdlz_rdatasetiter = type { %struct.dns_rdatasetiter, ptr }
%struct.dns_rdatasetiter = type { i32, ptr, ptr, ptr, ptr, i32 }
%struct.dns_rdataset = type { i32, ptr, %struct.anon.22, i16, i16, i32, i32, i16, i16, i32, i32, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr }
%struct.anon.22 = type { ptr, ptr }

@.str = private unnamed_addr constant [7 x i8] c"sdlz.c\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [172 x i8] c"(__builtin_expect(!!((lookup) != ((void*)0)), 1) && __builtin_expect(!!(((const isc__magic_t *)(lookup))->magic == ((('D') << 24 | ('L') << 16 | ('Z') << 8 | ('L')))), 1))\00", align 1, !dbg !8
@.str.2 = private unnamed_addr constant [19 x i8] c"type != ((void*)0)\00", align 1, !dbg !13
@.str.3 = private unnamed_addr constant [19 x i8] c"data != ((void*)0)\00", align 1, !dbg !18
@dns_rootname = external global ptr, align 8
@.str.4 = private unnamed_addr constant [20 x i8] c"mname != ((void*)0)\00", align 1, !dbg !20
@.str.5 = private unnamed_addr constant [20 x i8] c"rname != ((void*)0)\00", align 1, !dbg !25
@.str.6 = private unnamed_addr constant [21 x i8] c"%s %s %u %u %u %u %u\00", align 1, !dbg !27
@.str.7 = private unnamed_addr constant [4 x i8] c"SOA\00", align 1, !dbg !32
@.str.8 = private unnamed_addr constant [25 x i8] c"drivername != ((void*)0)\00", align 1, !dbg !37
@.str.9 = private unnamed_addr constant [22 x i8] c"methods != ((void*)0)\00", align 1, !dbg !42
@.str.10 = private unnamed_addr constant [32 x i8] c"methods->findzone != ((void*)0)\00", align 1, !dbg !47
@.str.11 = private unnamed_addr constant [30 x i8] c"methods->lookup != ((void*)0)\00", align 1, !dbg !52
@.str.12 = private unnamed_addr constant [19 x i8] c"mctx != ((void*)0)\00", align 1, !dbg !57
@.str.13 = private unnamed_addr constant [48 x i8] c"sdlzimp != ((void*)0) && *sdlzimp == ((void*)0)\00", align 1, !dbg !59
@.str.14 = private unnamed_addr constant [58 x i8] c"(flags & ~(0x00000002U | 0x00000004U | 0x00000001U)) == 0\00", align 1, !dbg !64
@.str.15 = private unnamed_addr constant [29 x i8] c"Registering SDLZ driver '%s'\00", align 1, !dbg !69
@sdlzmethods = internal global %struct.dns_dlzmethods { ptr @dns_sdlzcreate, ptr @dns_sdlzdestroy, ptr @dns_sdlzfindzone, ptr @dns_sdlzallowzonexfr, ptr @dns_sdlzconfigure, ptr @dns_sdlzssumatch }, align 8, !dbg !74
@.str.16 = private unnamed_addr constant [47 x i8] c"pthread_mutex_destroy((&imp->driverlock)) == 0\00", align 1, !dbg !2081
@.str.17 = private unnamed_addr constant [27 x i8] c"Unregistering SDLZ driver.\00", align 1, !dbg !2086
@.str.18 = private unnamed_addr constant [48 x i8] c"sdlzimp != ((void*)0) && *sdlzimp != ((void*)0)\00", align 1, !dbg !2091
@.str.19 = private unnamed_addr constant [102 x i8] c"((sdlz) != ((void*)0) && (sdlz)->common.impmagic == (('D') << 24 | ('L') << 16 | ('Z') << 8 | ('S')))\00", align 1, !dbg !2093
@.str.20 = private unnamed_addr constant [66 x i8] c"((pthread_mutex_lock(((&sdlz->refcnt_lock))) == 0) ? 0 : 34) == 0\00", align 1, !dbg !2098
@.str.21 = private unnamed_addr constant [21 x i8] c"sdlz->references > 0\00", align 1, !dbg !2103
@.str.22 = private unnamed_addr constant [68 x i8] c"((pthread_mutex_unlock(((&sdlz->refcnt_lock))) == 0) ? 0 : 34) == 0\00", align 1, !dbg !2105
@.str.23 = private unnamed_addr constant [30 x i8] c"(list->rdata).tail == (rdata)\00", align 1, !dbg !2110
@.str.24 = private unnamed_addr constant [30 x i8] c"(list->rdata).head == (rdata)\00", align 1, !dbg !2112
@.str.25 = private unnamed_addr constant [30 x i8] c"(list->rdata).head != (rdata)\00", align 1, !dbg !2114
@.str.26 = private unnamed_addr constant [30 x i8] c"(list->rdata).tail != (rdata)\00", align 1, !dbg !2116
@.str.27 = private unnamed_addr constant [29 x i8] c"(node->lists).tail == (list)\00", align 1, !dbg !2118
@.str.28 = private unnamed_addr constant [29 x i8] c"(node->lists).head == (list)\00", align 1, !dbg !2120
@.str.29 = private unnamed_addr constant [29 x i8] c"(node->lists).head != (list)\00", align 1, !dbg !2122
@.str.30 = private unnamed_addr constant [29 x i8] c"(node->lists).tail != (list)\00", align 1, !dbg !2124
@.str.31 = private unnamed_addr constant [28 x i8] c"(node->buffers).tail == (b)\00", align 1, !dbg !2126
@.str.32 = private unnamed_addr constant [28 x i8] c"(node->buffers).head == (b)\00", align 1, !dbg !2131
@.str.33 = private unnamed_addr constant [28 x i8] c"(node->buffers).head != (b)\00", align 1, !dbg !2133
@.str.34 = private unnamed_addr constant [28 x i8] c"(node->buffers).tail != (b)\00", align 1, !dbg !2135
@.str.35 = private unnamed_addr constant [42 x i8] c"pthread_mutex_destroy((&node->lock)) == 0\00", align 1, !dbg !2137
@.str.36 = private unnamed_addr constant [49 x i8] c"pthread_mutex_destroy((&sdlz->refcnt_lock)) == 0\00", align 1, !dbg !2142
@dns_lctx = external global ptr, align 8
@dns_categories = external global [0 x %struct.isc_logcategory], align 8
@dns_modules = external global [0 x %struct.isc_logmodule], align 8
@.str.37 = private unnamed_addr constant [21 x i8] c"Loading SDLZ driver.\00", align 1, !dbg !2147
@.str.38 = private unnamed_addr constant [24 x i8] c"driverarg != ((void*)0)\00", align 1, !dbg !2149
@.str.39 = private unnamed_addr constant [22 x i8] c"dlzname != ((void*)0)\00", align 1, !dbg !2154
@.str.40 = private unnamed_addr constant [21 x i8] c"dbdata != ((void*)0)\00", align 1, !dbg !2156
@.str.41 = private unnamed_addr constant [64 x i8] c"((pthread_mutex_lock(((&imp->driverlock))) == 0) ? 0 : 34) == 0\00", align 1, !dbg !2158
@.str.42 = private unnamed_addr constant [66 x i8] c"((pthread_mutex_unlock(((&imp->driverlock))) == 0) ? 0 : 34) == 0\00", align 1, !dbg !2161
@.str.43 = private unnamed_addr constant [33 x i8] c"SDLZ driver loaded successfully.\00", align 1, !dbg !2163
@.str.44 = private unnamed_addr constant [28 x i8] c"SDLZ driver failed to load.\00", align 1, !dbg !2168
@.str.45 = private unnamed_addr constant [23 x i8] c"Unloading SDLZ driver.\00", align 1, !dbg !2170
@.str.46 = private unnamed_addr constant [19 x i8] c"name != ((void*)0)\00", align 1, !dbg !2175
@.str.47 = private unnamed_addr constant [40 x i8] c"dbp != ((void*)0) && *dbp == ((void*)0)\00", align 1, !dbg !2177
@.str.48 = private unnamed_addr constant [46 x i8] c"isc_buffer_reserve(&_tmp, 1) == ISC_R_SUCCESS\00", align 1, !dbg !2180
@.str.49 = private unnamed_addr constant [37 x i8] c"isc_buffer_availablelength(&b) >= 1U\00", align 1, !dbg !2185
@.str.50 = private unnamed_addr constant [25 x i8] c"clientaddr != ((void*)0)\00", align 1, !dbg !2190
@.str.51 = private unnamed_addr constant [38 x i8] c"isc_buffer_availablelength(&b2) >= 1U\00", align 1, !dbg !2192
@sdlzdb_methods = internal global %struct.dns_dbmethods { ptr @attach, ptr @detach, ptr @beginload, ptr @endload, ptr null, ptr @dump, ptr @currentversion, ptr @newversion, ptr @attachversion, ptr @closeversion, ptr @findnode, ptr @find, ptr @findzonecut, ptr @attachnode, ptr @detachnode, ptr @expirenode, ptr @printnode, ptr @createiterator, ptr @findrdataset, ptr @allrdatasets, ptr @addrdataset, ptr @subtractrdataset, ptr @deleterdataset, ptr @issecure, ptr @nodecount, ptr @ispersistent, ptr @overmem, ptr @settask, ptr @getoriginnode, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @findnodeext, ptr @findext, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 8, !dbg !2197
@.str.52 = private unnamed_addr constant [50 x i8] c"versionp != ((void*)0) && *versionp == ((void*)0)\00", align 1, !dbg !2199
@.str.53 = private unnamed_addr constant [41 x i8] c"sdlz newversion on origin %s failed : %s\00", align 1, !dbg !2204
@.str.54 = private unnamed_addr constant [63 x i8] c"source != ((void*)0) && source == (void *)&sdlz->dummy_version\00", align 1, !dbg !2209
@.str.55 = private unnamed_addr constant [23 x i8] c"versionp != ((void*)0)\00", align 1, !dbg !2214
@.str.56 = private unnamed_addr constant [34 x i8] c"*versionp == sdlz->future_version\00", align 1, !dbg !2216
@.str.57 = private unnamed_addr constant [50 x i8] c"sdlz->dlzimp->methods->closeversion != ((void*)0)\00", align 1, !dbg !2221
@.str.58 = private unnamed_addr constant [38 x i8] c"sdlz closeversion on origin %s failed\00", align 1, !dbg !2223
@.str.59 = private unnamed_addr constant [44 x i8] c"nodep != ((void*)0) && *nodep == ((void*)0)\00", align 1, !dbg !2225
@.str.60 = private unnamed_addr constant [12 x i8] c"create == 0\00", align 1, !dbg !2230
@.str.61 = private unnamed_addr constant [73 x i8] c"((pthread_mutex_lock(((&sdlz->dlzimp->driverlock))) == 0) ? 0 : 34) == 0\00", align 1, !dbg !2235
@dns_wildcardname = external global ptr, align 8
@.str.62 = private unnamed_addr constant [75 x i8] c"((pthread_mutex_unlock(((&sdlz->dlzimp->driverlock))) == 0) ? 0 : 34) == 0\00", align 1, !dbg !2240
@.str.63 = private unnamed_addr constant [59 x i8] c"((pthread_mutex_lock(((&node->lock))) == 0) ? 0 : 34) == 0\00", align 1, !dbg !2245
@.str.64 = private unnamed_addr constant [21 x i8] c"node->references > 0\00", align 1, !dbg !2250
@.str.65 = private unnamed_addr constant [22 x i8] c"node->references != 0\00", align 1, !dbg !2252
@.str.66 = private unnamed_addr constant [61 x i8] c"((pthread_mutex_unlock(((&node->lock))) == 0) ? 0 : 34) == 0\00", align 1, !dbg !2254
@.str.67 = private unnamed_addr constant [48 x i8] c"targetp != ((void*)0) && *targetp != ((void*)0)\00", align 1, !dbg !2259
@.str.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1, !dbg !2261
@dbiterator_methods = internal global %struct.dns_dbiteratormethods { ptr @dbiterator_destroy, ptr @dbiterator_first, ptr @dbiterator_last, ptr @dbiterator_seek, ptr @dbiterator_prev, ptr @dbiterator_next, ptr @dbiterator_current, ptr @dbiterator_pause, ptr @dbiterator_origin }, align 8, !dbg !2272
@.str.69 = private unnamed_addr constant [48 x i8] c"(sdlziter->nodelist).tail == (sdlziter->origin)\00", align 1, !dbg !2264
@.str.70 = private unnamed_addr constant [48 x i8] c"(sdlziter->nodelist).head == (sdlziter->origin)\00", align 1, !dbg !2266
@.str.71 = private unnamed_addr constant [48 x i8] c"(sdlziter->nodelist).head != (sdlziter->origin)\00", align 1, !dbg !2268
@.str.72 = private unnamed_addr constant [48 x i8] c"(sdlziter->nodelist).tail != (sdlziter->origin)\00", align 1, !dbg !2270
@.str.73 = private unnamed_addr constant [36 x i8] c"(sdlziter->nodelist).tail == (node)\00", align 1, !dbg !2274
@.str.74 = private unnamed_addr constant [36 x i8] c"(sdlziter->nodelist).head == (node)\00", align 1, !dbg !2279
@.str.75 = private unnamed_addr constant [36 x i8] c"(sdlziter->nodelist).head != (node)\00", align 1, !dbg !2281
@.str.76 = private unnamed_addr constant [36 x i8] c"(sdlziter->nodelist).tail != (node)\00", align 1, !dbg !2283
@.str.77 = private unnamed_addr constant [168 x i8] c"(__builtin_expect(!!((node) != ((void*)0)), 1) && __builtin_expect(!!(((const isc__magic_t *)(node))->magic == ((('D') << 24 | ('L') << 16 | ('Z') << 8 | ('L')))), 1))\00", align 1, !dbg !2285
@.str.78 = private unnamed_addr constant [51 x i8] c"dns_rdatalist_tordataset(rdatalist, rdataset) == 0\00", align 1, !dbg !2290
@rdataset_methods = internal global %struct.dns_rdatasetmethods { ptr @disassociate, ptr @isc__rdatalist_first, ptr @isc__rdatalist_next, ptr @isc__rdatalist_current, ptr @rdataset_clone, ptr @isc__rdatalist_count, ptr @isc__rdatalist_addnoqname, ptr @isc__rdatalist_getnoqname, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 8, !dbg !2295
@.str.79 = private unnamed_addr constant [99 x i8] c"version == ((void*)0) || version == (void*)&sdlz->dummy_version || version == sdlz->future_version\00", align 1, !dbg !2297
@rdatasetiter_methods = internal global %struct.dns_rdatasetitermethods { ptr @rdatasetiter_destroy, ptr @rdatasetiter_first, ptr @rdatasetiter_next, ptr @rdatasetiter_current }, align 8, !dbg !2302
@.str.80 = private unnamed_addr constant [30 x i8] c"sdlz getoriginnode failed: %s\00", align 1, !dbg !2304
@.str.81 = private unnamed_addr constant [44 x i8] c"nodep == ((void*)0) || *nodep == ((void*)0)\00", align 1, !dbg !2306

; Function Attrs: nounwind null_pointer_is_valid uwtable
define i32 @dns_sdlz_putrr(ptr noundef %lookup, ptr noundef %type, i32 noundef %ttl, ptr noundef %data) #0 !dbg !2314 {
entry:
  %retval = alloca i32, align 4
  %lookup.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %ttl.addr = alloca i32, align 4
  %data.addr = alloca ptr, align 8
  %rdatalist = alloca ptr, align 8
  %rdata = alloca ptr, align 8
  %typeval = alloca i16, align 2
  %r = alloca %struct.isc_consttextregion, align 8
  %b = alloca %struct.isc_buffer, align 8
  %rdatabuf = alloca ptr, align 8
  %lex = alloca ptr, align 8
  %result = alloca i32, align 4
  %size = alloca i32, align 4
  %mctx = alloca ptr, align 8
  %origin = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %_deconst = alloca %union.anon, align 8
  store ptr %lookup, ptr %lookup.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %lookup.addr, metadata !2318, metadata !DIExpression()), !dbg !2349
  store ptr %type, ptr %type.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !2319, metadata !DIExpression()), !dbg !2350
  store i32 %ttl, ptr %ttl.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %ttl.addr, metadata !2320, metadata !DIExpression()), !dbg !2351
  store ptr %data, ptr %data.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !2321, metadata !DIExpression()), !dbg !2352
  call void @llvm.lifetime.start.p0(i64 8, ptr %rdatalist) #11, !dbg !2353
  tail call void @llvm.dbg.declare(metadata ptr %rdatalist, metadata !2322, metadata !DIExpression()), !dbg !2354
  call void @llvm.lifetime.start.p0(i64 8, ptr %rdata) #11, !dbg !2355
  tail call void @llvm.dbg.declare(metadata ptr %rdata, metadata !2323, metadata !DIExpression()), !dbg !2356
  call void @llvm.lifetime.start.p0(i64 2, ptr %typeval) #11, !dbg !2357
  tail call void @llvm.dbg.declare(metadata ptr %typeval, metadata !2324, metadata !DIExpression()), !dbg !2358
  call void @llvm.lifetime.start.p0(i64 16, ptr %r) #11, !dbg !2359
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !2325, metadata !DIExpression()), !dbg !2360
  call void @llvm.lifetime.start.p0(i64 64, ptr %b) #11, !dbg !2361
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !2331, metadata !DIExpression()), !dbg !2362
  call void @llvm.lifetime.start.p0(i64 8, ptr %rdatabuf) #11, !dbg !2363
  tail call void @llvm.dbg.declare(metadata ptr %rdatabuf, metadata !2332, metadata !DIExpression()), !dbg !2364
  store ptr null, ptr %rdatabuf, align 8, !dbg !2364
  call void @llvm.lifetime.start.p0(i64 8, ptr %lex) #11, !dbg !2365
  tail call void @llvm.dbg.declare(metadata ptr %lex, metadata !2333, metadata !DIExpression()), !dbg !2366
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !2367
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !2337, metadata !DIExpression()), !dbg !2368
  call void @llvm.lifetime.start.p0(i64 4, ptr %size) #11, !dbg !2369
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !2338, metadata !DIExpression()), !dbg !2370
  call void @llvm.lifetime.start.p0(i64 8, ptr %mctx) #11, !dbg !2371
  tail call void @llvm.dbg.declare(metadata ptr %mctx, metadata !2339, metadata !DIExpression()), !dbg !2372
  call void @llvm.lifetime.start.p0(i64 8, ptr %origin) #11, !dbg !2373
  tail call void @llvm.dbg.declare(metadata ptr %origin, metadata !2340, metadata !DIExpression()), !dbg !2374
  %0 = load ptr, ptr %lookup.addr, align 8, !dbg !2375
  %cmp = icmp ne ptr %0, null, !dbg !2375
  %lnot = xor i1 %cmp, true, !dbg !2375
  %lnot1 = xor i1 %lnot, true, !dbg !2375
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2375
  %conv = sext i32 %lnot.ext to i64, !dbg !2375
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !2375
  %tobool = icmp ne i64 %expval, 0, !dbg !2375
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2375

land.rhs:                                         ; preds = %entry
  %1 = load ptr, ptr %lookup.addr, align 8, !dbg !2375
  %magic = getelementptr inbounds %struct.isc__magic_t, ptr %1, i32 0, i32 0, !dbg !2375
  %2 = load i32, ptr %magic, align 4, !dbg !2375
  %cmp2 = icmp eq i32 %2, 1145854540, !dbg !2375
  %lnot4 = xor i1 %cmp2, true, !dbg !2375
  %lnot6 = xor i1 %lnot4, true, !dbg !2375
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !2375
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !2375
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 1), !dbg !2375
  %tobool10 = icmp ne i64 %expval9, 0, !dbg !2375
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool10, %land.rhs ], !dbg !2376
  %lnot11 = xor i1 %3, true, !dbg !2375
  %lnot13 = xor i1 %lnot11, true, !dbg !2375
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !2375
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !2375
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 1), !dbg !2375
  %tobool17 = icmp ne i64 %expval16, 0, !dbg !2375
  br i1 %tobool17, label %lor.end, label %lor.rhs, !dbg !2375

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1853, i32 noundef 0, ptr noundef @.str.1) #12, !dbg !2375
  unreachable, !dbg !2375

4:                                                ; No predecessors!
  br label %lor.end, !dbg !2375

lor.end:                                          ; preds = %4, %land.end
  %5 = phi i1 [ true, %land.end ], [ false, %4 ]
  %lor.ext = zext i1 %5 to i32, !dbg !2375
  %6 = load ptr, ptr %type.addr, align 8, !dbg !2377
  %cmp18 = icmp ne ptr %6, null, !dbg !2377
  %lnot20 = xor i1 %cmp18, true, !dbg !2377
  %lnot22 = xor i1 %lnot20, true, !dbg !2377
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !2377
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !2377
  %expval25 = call i64 @llvm.expect.i64(i64 %conv24, i64 1), !dbg !2377
  %tobool26 = icmp ne i64 %expval25, 0, !dbg !2377
  br i1 %tobool26, label %lor.end28, label %lor.rhs27, !dbg !2377

lor.rhs27:                                        ; preds = %lor.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1854, i32 noundef 0, ptr noundef @.str.2) #12, !dbg !2377
  unreachable, !dbg !2377

7:                                                ; No predecessors!
  br label %lor.end28, !dbg !2377

lor.end28:                                        ; preds = %7, %lor.end
  %8 = phi i1 [ true, %lor.end ], [ false, %7 ]
  %lor.ext29 = zext i1 %8 to i32, !dbg !2377
  %9 = load ptr, ptr %data.addr, align 8, !dbg !2378
  %cmp30 = icmp ne ptr %9, null, !dbg !2378
  %lnot32 = xor i1 %cmp30, true, !dbg !2378
  %lnot34 = xor i1 %lnot32, true, !dbg !2378
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !2378
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !2378
  %expval37 = call i64 @llvm.expect.i64(i64 %conv36, i64 1), !dbg !2378
  %tobool38 = icmp ne i64 %expval37, 0, !dbg !2378
  br i1 %tobool38, label %lor.end40, label %lor.rhs39, !dbg !2378

lor.rhs39:                                        ; preds = %lor.end28
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1855, i32 noundef 0, ptr noundef @.str.3) #12, !dbg !2378
  unreachable, !dbg !2378

10:                                               ; No predecessors!
  br label %lor.end40, !dbg !2378

lor.end40:                                        ; preds = %10, %lor.end28
  %11 = phi i1 [ true, %lor.end28 ], [ false, %10 ]
  %lor.ext41 = zext i1 %11 to i32, !dbg !2378
  %12 = load ptr, ptr %lookup.addr, align 8, !dbg !2379
  %sdlz = getelementptr inbounds %struct.dns_sdlzlookup, ptr %12, i32 0, i32 1, !dbg !2380
  %13 = load ptr, ptr %sdlz, align 8, !dbg !2380
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %13, i32 0, i32 0, !dbg !2381
  %mctx42 = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 6, !dbg !2382
  %14 = load ptr, ptr %mctx42, align 8, !dbg !2382
  store ptr %14, ptr %mctx, align 8, !dbg !2383
  %15 = load ptr, ptr %type.addr, align 8, !dbg !2384
  %base = getelementptr inbounds %struct.isc_consttextregion, ptr %r, i32 0, i32 0, !dbg !2385
  store ptr %15, ptr %base, align 8, !dbg !2386
  %16 = load ptr, ptr %type.addr, align 8, !dbg !2387
  %call = call i64 @strlen(ptr noundef %16) #13, !dbg !2388
  %conv43 = trunc i64 %call to i32, !dbg !2388
  %length = getelementptr inbounds %struct.isc_consttextregion, ptr %r, i32 0, i32 1, !dbg !2389
  store i32 %conv43, ptr %length, align 8, !dbg !2390
  %call44 = call i32 @dns_rdatatype_fromtext(ptr noundef %typeval, ptr noundef %r), !dbg !2391
  store i32 %call44, ptr %result, align 4, !dbg !2392
  %17 = load i32, ptr %result, align 4, !dbg !2393
  %cmp45 = icmp ne i32 %17, 0, !dbg !2395
  br i1 %cmp45, label %if.then, label %if.end, !dbg !2396

if.then:                                          ; preds = %lor.end40
  %18 = load i32, ptr %result, align 4, !dbg !2397
  store i32 %18, ptr %retval, align 4, !dbg !2398
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2398

if.end:                                           ; preds = %lor.end40
  %19 = load ptr, ptr %lookup.addr, align 8, !dbg !2399
  %lists = getelementptr inbounds %struct.dns_sdlzlookup, ptr %19, i32 0, i32 2, !dbg !2399
  %head = getelementptr inbounds %struct.anon.7, ptr %lists, i32 0, i32 0, !dbg !2399
  %20 = load ptr, ptr %head, align 8, !dbg !2399
  store ptr %20, ptr %rdatalist, align 8, !dbg !2400
  br label %while.cond, !dbg !2401

while.cond:                                       ; preds = %if.end55, %if.end
  %21 = load ptr, ptr %rdatalist, align 8, !dbg !2402
  %cmp47 = icmp ne ptr %21, null, !dbg !2403
  br i1 %cmp47, label %while.body, label %while.end, !dbg !2401

while.body:                                       ; preds = %while.cond
  %22 = load ptr, ptr %rdatalist, align 8, !dbg !2404
  %type49 = getelementptr inbounds %struct.dns_rdatalist, ptr %22, i32 0, i32 1, !dbg !2407
  %23 = load i16, ptr %type49, align 2, !dbg !2407
  %conv50 = zext i16 %23 to i32, !dbg !2404
  %24 = load i16, ptr %typeval, align 2, !dbg !2408
  %conv51 = zext i16 %24 to i32, !dbg !2408
  %cmp52 = icmp eq i32 %conv50, %conv51, !dbg !2409
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !2410

if.then54:                                        ; preds = %while.body
  br label %while.end, !dbg !2411

if.end55:                                         ; preds = %while.body
  %25 = load ptr, ptr %rdatalist, align 8, !dbg !2412
  %link = getelementptr inbounds %struct.dns_rdatalist, ptr %25, i32 0, i32 5, !dbg !2412
  %next = getelementptr inbounds %struct.anon.14, ptr %link, i32 0, i32 1, !dbg !2412
  %26 = load ptr, ptr %next, align 8, !dbg !2412
  store ptr %26, ptr %rdatalist, align 8, !dbg !2413
  br label %while.cond, !dbg !2401, !llvm.loop !2414

while.end:                                        ; preds = %if.then54, %while.cond
  %27 = load ptr, ptr %rdatalist, align 8, !dbg !2417
  %cmp56 = icmp eq ptr %27, null, !dbg !2419
  br i1 %cmp56, label %if.then58, label %if.else90, !dbg !2420

if.then58:                                        ; preds = %while.end
  %28 = load ptr, ptr %mctx, align 8, !dbg !2421
  %call59 = call ptr @isc__mem_get(ptr noundef %28, i64 noundef 80, ptr noundef @.str, i32 noundef 1873), !dbg !2421
  store ptr %call59, ptr %rdatalist, align 8, !dbg !2423
  %29 = load ptr, ptr %rdatalist, align 8, !dbg !2424
  %cmp60 = icmp eq ptr %29, null, !dbg !2426
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !2427

if.then62:                                        ; preds = %if.then58
  store i32 1, ptr %retval, align 4, !dbg !2428
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2428

if.end63:                                         ; preds = %if.then58
  %30 = load ptr, ptr %rdatalist, align 8, !dbg !2429
  call void @dns_rdatalist_init(ptr noundef %30), !dbg !2430
  %31 = load ptr, ptr %lookup.addr, align 8, !dbg !2431
  %sdlz64 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %31, i32 0, i32 1, !dbg !2432
  %32 = load ptr, ptr %sdlz64, align 8, !dbg !2432
  %common65 = getelementptr inbounds %struct.dns_sdlz_db, ptr %32, i32 0, i32 0, !dbg !2433
  %rdclass = getelementptr inbounds %struct.dns_db, ptr %common65, i32 0, i32 4, !dbg !2434
  %33 = load i16, ptr %rdclass, align 2, !dbg !2434
  %34 = load ptr, ptr %rdatalist, align 8, !dbg !2435
  %rdclass66 = getelementptr inbounds %struct.dns_rdatalist, ptr %34, i32 0, i32 0, !dbg !2436
  store i16 %33, ptr %rdclass66, align 8, !dbg !2437
  %35 = load i16, ptr %typeval, align 2, !dbg !2438
  %36 = load ptr, ptr %rdatalist, align 8, !dbg !2439
  %type67 = getelementptr inbounds %struct.dns_rdatalist, ptr %36, i32 0, i32 1, !dbg !2440
  store i16 %35, ptr %type67, align 2, !dbg !2441
  %37 = load i32, ptr %ttl.addr, align 4, !dbg !2442
  %38 = load ptr, ptr %rdatalist, align 8, !dbg !2443
  %ttl68 = getelementptr inbounds %struct.dns_rdatalist, ptr %38, i32 0, i32 3, !dbg !2444
  store i32 %37, ptr %ttl68, align 8, !dbg !2445
  br label %do.body, !dbg !2446

do.body:                                          ; preds = %if.end63
  br label %do.body69, !dbg !2447

do.body69:                                        ; preds = %do.body
  %39 = load ptr, ptr %lookup.addr, align 8, !dbg !2449
  %lists70 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %39, i32 0, i32 2, !dbg !2449
  %tail = getelementptr inbounds %struct.anon.7, ptr %lists70, i32 0, i32 1, !dbg !2449
  %40 = load ptr, ptr %tail, align 8, !dbg !2449
  %cmp71 = icmp ne ptr %40, null, !dbg !2449
  br i1 %cmp71, label %if.then73, label %if.else, !dbg !2452

if.then73:                                        ; preds = %do.body69
  %41 = load ptr, ptr %rdatalist, align 8, !dbg !2449
  %42 = load ptr, ptr %lookup.addr, align 8, !dbg !2449
  %lists74 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %42, i32 0, i32 2, !dbg !2449
  %tail75 = getelementptr inbounds %struct.anon.7, ptr %lists74, i32 0, i32 1, !dbg !2449
  %43 = load ptr, ptr %tail75, align 8, !dbg !2449
  %link76 = getelementptr inbounds %struct.dns_rdatalist, ptr %43, i32 0, i32 5, !dbg !2449
  %next77 = getelementptr inbounds %struct.anon.14, ptr %link76, i32 0, i32 1, !dbg !2449
  store ptr %41, ptr %next77, align 8, !dbg !2449
  br label %if.end80, !dbg !2449

if.else:                                          ; preds = %do.body69
  %44 = load ptr, ptr %rdatalist, align 8, !dbg !2449
  %45 = load ptr, ptr %lookup.addr, align 8, !dbg !2449
  %lists78 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %45, i32 0, i32 2, !dbg !2449
  %head79 = getelementptr inbounds %struct.anon.7, ptr %lists78, i32 0, i32 0, !dbg !2449
  store ptr %44, ptr %head79, align 8, !dbg !2449
  br label %if.end80

if.end80:                                         ; preds = %if.else, %if.then73
  %46 = load ptr, ptr %lookup.addr, align 8, !dbg !2452
  %lists81 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %46, i32 0, i32 2, !dbg !2452
  %tail82 = getelementptr inbounds %struct.anon.7, ptr %lists81, i32 0, i32 1, !dbg !2452
  %47 = load ptr, ptr %tail82, align 8, !dbg !2452
  %48 = load ptr, ptr %rdatalist, align 8, !dbg !2452
  %link83 = getelementptr inbounds %struct.dns_rdatalist, ptr %48, i32 0, i32 5, !dbg !2452
  %prev = getelementptr inbounds %struct.anon.14, ptr %link83, i32 0, i32 0, !dbg !2452
  store ptr %47, ptr %prev, align 8, !dbg !2452
  %49 = load ptr, ptr %rdatalist, align 8, !dbg !2452
  %link84 = getelementptr inbounds %struct.dns_rdatalist, ptr %49, i32 0, i32 5, !dbg !2452
  %next85 = getelementptr inbounds %struct.anon.14, ptr %link84, i32 0, i32 1, !dbg !2452
  store ptr null, ptr %next85, align 8, !dbg !2452
  %50 = load ptr, ptr %rdatalist, align 8, !dbg !2452
  %51 = load ptr, ptr %lookup.addr, align 8, !dbg !2452
  %lists86 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %51, i32 0, i32 2, !dbg !2452
  %tail87 = getelementptr inbounds %struct.anon.7, ptr %lists86, i32 0, i32 1, !dbg !2452
  store ptr %50, ptr %tail87, align 8, !dbg !2452
  br label %do.cond, !dbg !2452

do.cond:                                          ; preds = %if.end80
  br label %do.end, !dbg !2452

do.end:                                           ; preds = %do.cond
  br label %do.cond88, !dbg !2447

do.cond88:                                        ; preds = %do.end
  br label %do.end89, !dbg !2447

do.end89:                                         ; preds = %do.cond88
  br label %if.end97, !dbg !2453

if.else90:                                        ; preds = %while.end
  %52 = load ptr, ptr %rdatalist, align 8, !dbg !2454
  %ttl91 = getelementptr inbounds %struct.dns_rdatalist, ptr %52, i32 0, i32 3, !dbg !2456
  %53 = load i32, ptr %ttl91, align 8, !dbg !2456
  %54 = load i32, ptr %ttl.addr, align 4, !dbg !2457
  %cmp92 = icmp ugt i32 %53, %54, !dbg !2458
  br i1 %cmp92, label %if.then94, label %if.end96, !dbg !2459

if.then94:                                        ; preds = %if.else90
  %55 = load i32, ptr %ttl.addr, align 4, !dbg !2460
  %56 = load ptr, ptr %rdatalist, align 8, !dbg !2462
  %ttl95 = getelementptr inbounds %struct.dns_rdatalist, ptr %56, i32 0, i32 3, !dbg !2463
  store i32 %55, ptr %ttl95, align 8, !dbg !2464
  br label %if.end96, !dbg !2465

if.end96:                                         ; preds = %if.then94, %if.else90
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %do.end89
  %57 = load ptr, ptr %mctx, align 8, !dbg !2466
  %call98 = call ptr @isc__mem_get(ptr noundef %57, i64 noundef 40, ptr noundef @.str, i32 noundef 1893), !dbg !2466
  store ptr %call98, ptr %rdata, align 8, !dbg !2467
  %58 = load ptr, ptr %rdata, align 8, !dbg !2468
  %cmp99 = icmp eq ptr %58, null, !dbg !2470
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !2471

if.then101:                                       ; preds = %if.end97
  store i32 1, ptr %retval, align 4, !dbg !2472
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2472

if.end102:                                        ; preds = %if.end97
  %59 = load ptr, ptr %rdata, align 8, !dbg !2473
  call void @dns_rdata_init(ptr noundef %59), !dbg !2474
  %60 = load ptr, ptr %lookup.addr, align 8, !dbg !2475
  %sdlz103 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %60, i32 0, i32 1, !dbg !2477
  %61 = load ptr, ptr %sdlz103, align 8, !dbg !2477
  %dlzimp = getelementptr inbounds %struct.dns_sdlz_db, ptr %61, i32 0, i32 2, !dbg !2478
  %62 = load ptr, ptr %dlzimp, align 8, !dbg !2478
  %flags = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %62, i32 0, i32 3, !dbg !2479
  %63 = load i32, ptr %flags, align 8, !dbg !2479
  %and = and i32 %63, 4, !dbg !2480
  %cmp104 = icmp ne i32 %and, 0, !dbg !2481
  br i1 %cmp104, label %if.then106, label %if.else110, !dbg !2482

if.then106:                                       ; preds = %if.end102
  %64 = load ptr, ptr %lookup.addr, align 8, !dbg !2483
  %sdlz107 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %64, i32 0, i32 1, !dbg !2484
  %65 = load ptr, ptr %sdlz107, align 8, !dbg !2484
  %common108 = getelementptr inbounds %struct.dns_sdlz_db, ptr %65, i32 0, i32 0, !dbg !2485
  %origin109 = getelementptr inbounds %struct.dns_db, ptr %common108, i32 0, i32 5, !dbg !2486
  store ptr %origin109, ptr %origin, align 8, !dbg !2487
  br label %if.end111, !dbg !2488

if.else110:                                       ; preds = %if.end102
  %66 = load ptr, ptr @dns_rootname, align 8, !dbg !2489
  store ptr %66, ptr %origin, align 8, !dbg !2490
  br label %if.end111

if.end111:                                        ; preds = %if.else110, %if.then106
  store ptr null, ptr %lex, align 8, !dbg !2491
  %67 = load ptr, ptr %mctx, align 8, !dbg !2492
  %call112 = call i32 @isc_lex_create(ptr noundef %67, i64 noundef 64, ptr noundef %lex), !dbg !2493
  store i32 %call112, ptr %result, align 4, !dbg !2494
  %68 = load i32, ptr %result, align 4, !dbg !2495
  %cmp113 = icmp ne i32 %68, 0, !dbg !2497
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !2498

if.then115:                                       ; preds = %if.end111
  br label %failure, !dbg !2499

if.end116:                                        ; preds = %if.end111
  %69 = load ptr, ptr %data.addr, align 8, !dbg !2500
  %call117 = call i32 @initial_size(ptr noundef %69), !dbg !2501
  store i32 %call117, ptr %size, align 4, !dbg !2502
  br label %do.body118, !dbg !2503

do.body118:                                       ; preds = %do.cond170, %if.end116
  br label %do.body119, !dbg !2504

do.body119:                                       ; preds = %do.body118
  call void @llvm.lifetime.start.p0(i64 8, ptr %_deconst) #11, !dbg !2505
  tail call void @llvm.dbg.declare(metadata ptr %_deconst, metadata !2341, metadata !DIExpression()), !dbg !2505
  %70 = load ptr, ptr %data.addr, align 8, !dbg !2505
  store ptr %70, ptr %_deconst, align 8, !dbg !2505
  br label %do.body120, !dbg !2505

do.body120:                                       ; preds = %do.body119
  %71 = load ptr, ptr %_deconst, align 8, !dbg !2506
  %base121 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 1, !dbg !2506
  store ptr %71, ptr %base121, align 8, !dbg !2506
  %72 = load ptr, ptr %data.addr, align 8, !dbg !2506
  %call122 = call i64 @strlen(ptr noundef %72) #13, !dbg !2506
  %conv123 = trunc i64 %call122 to i32, !dbg !2506
  %length124 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 2, !dbg !2506
  store i32 %conv123, ptr %length124, align 8, !dbg !2506
  %used = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !2506
  store i32 0, ptr %used, align 4, !dbg !2506
  %current = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 4, !dbg !2506
  store i32 0, ptr %current, align 8, !dbg !2506
  %active = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 5, !dbg !2506
  store i32 0, ptr %active, align 4, !dbg !2506
  %mctx125 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 7, !dbg !2506
  store ptr null, ptr %mctx125, align 8, !dbg !2506
  br label %do.body126, !dbg !2506

do.body126:                                       ; preds = %do.body120
  %link127 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !2508
  %prev128 = getelementptr inbounds %struct.anon.6, ptr %link127, i32 0, i32 0, !dbg !2508
  store ptr inttoptr (i64 -1 to ptr), ptr %prev128, align 8, !dbg !2508
  %link129 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !2508
  %next130 = getelementptr inbounds %struct.anon.6, ptr %link129, i32 0, i32 1, !dbg !2508
  store ptr inttoptr (i64 -1 to ptr), ptr %next130, align 8, !dbg !2508
  br label %do.cond131, !dbg !2508

do.cond131:                                       ; preds = %do.body126
  br label %do.end132, !dbg !2508

do.end132:                                        ; preds = %do.cond131
  %magic133 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 0, !dbg !2506
  store i32 1114990113, ptr %magic133, align 8, !dbg !2506
  %autore = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 8, !dbg !2506
  store i8 0, ptr %autore, align 8, !dbg !2506
  br label %do.cond134, !dbg !2506

do.cond134:                                       ; preds = %do.end132
  br label %do.end135, !dbg !2506

do.end135:                                        ; preds = %do.cond134
  call void @llvm.lifetime.end.p0(i64 8, ptr %_deconst) #11, !dbg !2504
  br label %do.cond136, !dbg !2505

do.cond136:                                       ; preds = %do.end135
  br label %do.end137, !dbg !2505

do.end137:                                        ; preds = %do.cond136
  br label %do.body138, !dbg !2510

do.body138:                                       ; preds = %do.end137
  %73 = load ptr, ptr %data.addr, align 8, !dbg !2511
  %call139 = call i64 @strlen(ptr noundef %73) #13, !dbg !2511
  %used140 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !2511
  %74 = load i32, ptr %used140, align 4, !dbg !2511
  %conv141 = zext i32 %74 to i64, !dbg !2511
  %add = add i64 %conv141, %call139, !dbg !2511
  %conv142 = trunc i64 %add to i32, !dbg !2511
  store i32 %conv142, ptr %used140, align 4, !dbg !2511
  br label %do.cond143, !dbg !2511

do.cond143:                                       ; preds = %do.body138
  br label %do.end144, !dbg !2511

do.end144:                                        ; preds = %do.cond143
  %75 = load ptr, ptr %lex, align 8, !dbg !2513
  %call145 = call i32 @isc_lex_openbuffer(ptr noundef %75, ptr noundef %b), !dbg !2514
  store i32 %call145, ptr %result, align 4, !dbg !2515
  %76 = load i32, ptr %result, align 4, !dbg !2516
  %cmp146 = icmp ne i32 %76, 0, !dbg !2518
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !2519

if.then148:                                       ; preds = %do.end144
  br label %failure, !dbg !2520

if.end149:                                        ; preds = %do.end144
  store ptr null, ptr %rdatabuf, align 8, !dbg !2521
  %77 = load ptr, ptr %mctx, align 8, !dbg !2522
  %78 = load i32, ptr %size, align 4, !dbg !2523
  %call150 = call i32 @isc_buffer_allocate(ptr noundef %77, ptr noundef %rdatabuf, i32 noundef %78), !dbg !2524
  store i32 %call150, ptr %result, align 4, !dbg !2525
  %79 = load i32, ptr %result, align 4, !dbg !2526
  %cmp151 = icmp ne i32 %79, 0, !dbg !2528
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !2529

if.then153:                                       ; preds = %if.end149
  br label %failure, !dbg !2530

if.end154:                                        ; preds = %if.end149
  %80 = load ptr, ptr %rdata, align 8, !dbg !2531
  %81 = load ptr, ptr %rdatalist, align 8, !dbg !2532
  %rdclass155 = getelementptr inbounds %struct.dns_rdatalist, ptr %81, i32 0, i32 0, !dbg !2533
  %82 = load i16, ptr %rdclass155, align 8, !dbg !2533
  %83 = load ptr, ptr %rdatalist, align 8, !dbg !2534
  %type156 = getelementptr inbounds %struct.dns_rdatalist, ptr %83, i32 0, i32 1, !dbg !2535
  %84 = load i16, ptr %type156, align 2, !dbg !2535
  %85 = load ptr, ptr %lex, align 8, !dbg !2536
  %86 = load ptr, ptr %origin, align 8, !dbg !2537
  %87 = load ptr, ptr %mctx, align 8, !dbg !2538
  %88 = load ptr, ptr %rdatabuf, align 8, !dbg !2539
  %89 = load ptr, ptr %lookup.addr, align 8, !dbg !2540
  %callbacks = getelementptr inbounds %struct.dns_sdlzlookup, ptr %89, i32 0, i32 7, !dbg !2541
  %call157 = call i32 @dns_rdata_fromtext(ptr noundef %80, i16 noundef zeroext %82, i16 noundef zeroext %84, ptr noundef %85, ptr noundef %86, i32 noundef 0, ptr noundef %87, ptr noundef %88, ptr noundef %callbacks), !dbg !2542
  store i32 %call157, ptr %result, align 4, !dbg !2543
  %90 = load i32, ptr %result, align 4, !dbg !2544
  %cmp158 = icmp ne i32 %90, 0, !dbg !2546
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !2547

if.then160:                                       ; preds = %if.end154
  call void @isc_buffer_free(ptr noundef %rdatabuf), !dbg !2548
  store i32 196610, ptr %result, align 4, !dbg !2550
  br label %if.end161, !dbg !2551

if.end161:                                        ; preds = %if.then160, %if.end154
  %91 = load i32, ptr %size, align 4, !dbg !2552
  %cmp162 = icmp uge i32 %91, 65535, !dbg !2554
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !2555

if.then164:                                       ; preds = %if.end161
  br label %do.end173, !dbg !2556

if.end165:                                        ; preds = %if.end161
  %92 = load i32, ptr %size, align 4, !dbg !2557
  %mul = mul i32 %92, 2, !dbg !2557
  store i32 %mul, ptr %size, align 4, !dbg !2557
  %93 = load i32, ptr %size, align 4, !dbg !2558
  %cmp166 = icmp uge i32 %93, 65535, !dbg !2560
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !2561

if.then168:                                       ; preds = %if.end165
  store i32 65535, ptr %size, align 4, !dbg !2562
  br label %if.end169, !dbg !2563

if.end169:                                        ; preds = %if.then168, %if.end165
  br label %do.cond170, !dbg !2564

do.cond170:                                       ; preds = %if.end169
  %94 = load i32, ptr %result, align 4, !dbg !2565
  %cmp171 = icmp eq i32 %94, 19, !dbg !2566
  br i1 %cmp171, label %do.body118, label %do.end173, !dbg !2564, !llvm.loop !2567

do.end173:                                        ; preds = %do.cond170, %if.then164
  %95 = load i32, ptr %result, align 4, !dbg !2569
  %cmp174 = icmp ne i32 %95, 0, !dbg !2571
  br i1 %cmp174, label %if.then176, label %if.end177, !dbg !2572

if.then176:                                       ; preds = %do.end173
  br label %failure, !dbg !2573

if.end177:                                        ; preds = %do.end173
  br label %do.body178, !dbg !2574

do.body178:                                       ; preds = %if.end177
  br label %do.body179, !dbg !2575

do.body179:                                       ; preds = %do.body178
  %96 = load ptr, ptr %rdatalist, align 8, !dbg !2577
  %rdata180 = getelementptr inbounds %struct.dns_rdatalist, ptr %96, i32 0, i32 4, !dbg !2577
  %tail181 = getelementptr inbounds %struct.anon.13, ptr %rdata180, i32 0, i32 1, !dbg !2577
  %97 = load ptr, ptr %tail181, align 8, !dbg !2577
  %cmp182 = icmp ne ptr %97, null, !dbg !2577
  br i1 %cmp182, label %if.then184, label %if.else189, !dbg !2580

if.then184:                                       ; preds = %do.body179
  %98 = load ptr, ptr %rdata, align 8, !dbg !2577
  %99 = load ptr, ptr %rdatalist, align 8, !dbg !2577
  %rdata185 = getelementptr inbounds %struct.dns_rdatalist, ptr %99, i32 0, i32 4, !dbg !2577
  %tail186 = getelementptr inbounds %struct.anon.13, ptr %rdata185, i32 0, i32 1, !dbg !2577
  %100 = load ptr, ptr %tail186, align 8, !dbg !2577
  %link187 = getelementptr inbounds %struct.dns_rdata, ptr %100, i32 0, i32 5, !dbg !2577
  %next188 = getelementptr inbounds %struct.anon.15, ptr %link187, i32 0, i32 1, !dbg !2577
  store ptr %98, ptr %next188, align 8, !dbg !2577
  br label %if.end192, !dbg !2577

if.else189:                                       ; preds = %do.body179
  %101 = load ptr, ptr %rdata, align 8, !dbg !2577
  %102 = load ptr, ptr %rdatalist, align 8, !dbg !2577
  %rdata190 = getelementptr inbounds %struct.dns_rdatalist, ptr %102, i32 0, i32 4, !dbg !2577
  %head191 = getelementptr inbounds %struct.anon.13, ptr %rdata190, i32 0, i32 0, !dbg !2577
  store ptr %101, ptr %head191, align 8, !dbg !2577
  br label %if.end192

if.end192:                                        ; preds = %if.else189, %if.then184
  %103 = load ptr, ptr %rdatalist, align 8, !dbg !2580
  %rdata193 = getelementptr inbounds %struct.dns_rdatalist, ptr %103, i32 0, i32 4, !dbg !2580
  %tail194 = getelementptr inbounds %struct.anon.13, ptr %rdata193, i32 0, i32 1, !dbg !2580
  %104 = load ptr, ptr %tail194, align 8, !dbg !2580
  %105 = load ptr, ptr %rdata, align 8, !dbg !2580
  %link195 = getelementptr inbounds %struct.dns_rdata, ptr %105, i32 0, i32 5, !dbg !2580
  %prev196 = getelementptr inbounds %struct.anon.15, ptr %link195, i32 0, i32 0, !dbg !2580
  store ptr %104, ptr %prev196, align 8, !dbg !2580
  %106 = load ptr, ptr %rdata, align 8, !dbg !2580
  %link197 = getelementptr inbounds %struct.dns_rdata, ptr %106, i32 0, i32 5, !dbg !2580
  %next198 = getelementptr inbounds %struct.anon.15, ptr %link197, i32 0, i32 1, !dbg !2580
  store ptr null, ptr %next198, align 8, !dbg !2580
  %107 = load ptr, ptr %rdata, align 8, !dbg !2580
  %108 = load ptr, ptr %rdatalist, align 8, !dbg !2580
  %rdata199 = getelementptr inbounds %struct.dns_rdatalist, ptr %108, i32 0, i32 4, !dbg !2580
  %tail200 = getelementptr inbounds %struct.anon.13, ptr %rdata199, i32 0, i32 1, !dbg !2580
  store ptr %107, ptr %tail200, align 8, !dbg !2580
  br label %do.cond201, !dbg !2580

do.cond201:                                       ; preds = %if.end192
  br label %do.end202, !dbg !2580

do.end202:                                        ; preds = %do.cond201
  br label %do.cond203, !dbg !2575

do.cond203:                                       ; preds = %do.end202
  br label %do.end204, !dbg !2575

do.end204:                                        ; preds = %do.cond203
  br label %do.body205, !dbg !2581

do.body205:                                       ; preds = %do.end204
  br label %do.body206, !dbg !2582

do.body206:                                       ; preds = %do.body205
  %109 = load ptr, ptr %lookup.addr, align 8, !dbg !2584
  %buffers = getelementptr inbounds %struct.dns_sdlzlookup, ptr %109, i32 0, i32 3, !dbg !2584
  %tail207 = getelementptr inbounds %struct.anon.8, ptr %buffers, i32 0, i32 1, !dbg !2584
  %110 = load ptr, ptr %tail207, align 8, !dbg !2584
  %cmp208 = icmp ne ptr %110, null, !dbg !2584
  br i1 %cmp208, label %if.then210, label %if.else215, !dbg !2587

if.then210:                                       ; preds = %do.body206
  %111 = load ptr, ptr %rdatabuf, align 8, !dbg !2584
  %112 = load ptr, ptr %lookup.addr, align 8, !dbg !2584
  %buffers211 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %112, i32 0, i32 3, !dbg !2584
  %tail212 = getelementptr inbounds %struct.anon.8, ptr %buffers211, i32 0, i32 1, !dbg !2584
  %113 = load ptr, ptr %tail212, align 8, !dbg !2584
  %link213 = getelementptr inbounds %struct.isc_buffer, ptr %113, i32 0, i32 6, !dbg !2584
  %next214 = getelementptr inbounds %struct.anon.6, ptr %link213, i32 0, i32 1, !dbg !2584
  store ptr %111, ptr %next214, align 8, !dbg !2584
  br label %if.end218, !dbg !2584

if.else215:                                       ; preds = %do.body206
  %114 = load ptr, ptr %rdatabuf, align 8, !dbg !2584
  %115 = load ptr, ptr %lookup.addr, align 8, !dbg !2584
  %buffers216 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %115, i32 0, i32 3, !dbg !2584
  %head217 = getelementptr inbounds %struct.anon.8, ptr %buffers216, i32 0, i32 0, !dbg !2584
  store ptr %114, ptr %head217, align 8, !dbg !2584
  br label %if.end218

if.end218:                                        ; preds = %if.else215, %if.then210
  %116 = load ptr, ptr %lookup.addr, align 8, !dbg !2587
  %buffers219 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %116, i32 0, i32 3, !dbg !2587
  %tail220 = getelementptr inbounds %struct.anon.8, ptr %buffers219, i32 0, i32 1, !dbg !2587
  %117 = load ptr, ptr %tail220, align 8, !dbg !2587
  %118 = load ptr, ptr %rdatabuf, align 8, !dbg !2587
  %link221 = getelementptr inbounds %struct.isc_buffer, ptr %118, i32 0, i32 6, !dbg !2587
  %prev222 = getelementptr inbounds %struct.anon.6, ptr %link221, i32 0, i32 0, !dbg !2587
  store ptr %117, ptr %prev222, align 8, !dbg !2587
  %119 = load ptr, ptr %rdatabuf, align 8, !dbg !2587
  %link223 = getelementptr inbounds %struct.isc_buffer, ptr %119, i32 0, i32 6, !dbg !2587
  %next224 = getelementptr inbounds %struct.anon.6, ptr %link223, i32 0, i32 1, !dbg !2587
  store ptr null, ptr %next224, align 8, !dbg !2587
  %120 = load ptr, ptr %rdatabuf, align 8, !dbg !2587
  %121 = load ptr, ptr %lookup.addr, align 8, !dbg !2587
  %buffers225 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %121, i32 0, i32 3, !dbg !2587
  %tail226 = getelementptr inbounds %struct.anon.8, ptr %buffers225, i32 0, i32 1, !dbg !2587
  store ptr %120, ptr %tail226, align 8, !dbg !2587
  br label %do.cond227, !dbg !2587

do.cond227:                                       ; preds = %if.end218
  br label %do.end228, !dbg !2587

do.end228:                                        ; preds = %do.cond227
  br label %do.cond229, !dbg !2582

do.cond229:                                       ; preds = %do.end228
  br label %do.end230, !dbg !2582

do.end230:                                        ; preds = %do.cond229
  %122 = load ptr, ptr %lex, align 8, !dbg !2588
  %cmp231 = icmp ne ptr %122, null, !dbg !2590
  br i1 %cmp231, label %if.then233, label %if.end234, !dbg !2591

if.then233:                                       ; preds = %do.end230
  call void @isc_lex_destroy(ptr noundef %lex), !dbg !2592
  br label %if.end234, !dbg !2592

if.end234:                                        ; preds = %if.then233, %do.end230
  store i32 0, ptr %retval, align 4, !dbg !2593
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2593

failure:                                          ; preds = %if.then176, %if.then153, %if.then148, %if.then115
  tail call void @llvm.dbg.label(metadata !2348), !dbg !2594
  %123 = load ptr, ptr %rdatabuf, align 8, !dbg !2595
  %cmp235 = icmp ne ptr %123, null, !dbg !2597
  br i1 %cmp235, label %if.then237, label %if.end238, !dbg !2598

if.then237:                                       ; preds = %failure
  call void @isc_buffer_free(ptr noundef %rdatabuf), !dbg !2599
  br label %if.end238, !dbg !2599

if.end238:                                        ; preds = %if.then237, %failure
  %124 = load ptr, ptr %lex, align 8, !dbg !2600
  %cmp239 = icmp ne ptr %124, null, !dbg !2602
  br i1 %cmp239, label %if.then241, label %if.end242, !dbg !2603

if.then241:                                       ; preds = %if.end238
  call void @isc_lex_destroy(ptr noundef %lex), !dbg !2604
  br label %if.end242, !dbg !2604

if.end242:                                        ; preds = %if.then241, %if.end238
  br label %do.body243, !dbg !2605

do.body243:                                       ; preds = %if.end242
  %125 = load ptr, ptr %mctx, align 8, !dbg !2606
  %126 = load ptr, ptr %rdata, align 8, !dbg !2606
  call void @isc__mem_put(ptr noundef %125, ptr noundef %126, i64 noundef 40, ptr noundef @.str, i32 noundef 1954), !dbg !2606
  store ptr null, ptr %rdata, align 8, !dbg !2606
  br label %do.cond244, !dbg !2606

do.cond244:                                       ; preds = %do.body243
  br label %do.end245, !dbg !2606

do.end245:                                        ; preds = %do.cond244
  %127 = load i32, ptr %result, align 4, !dbg !2608
  store i32 %127, ptr %retval, align 4, !dbg !2609
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2609

cleanup:                                          ; preds = %do.end245, %if.end234, %if.then101, %if.then62, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %origin) #11, !dbg !2610
  call void @llvm.lifetime.end.p0(i64 8, ptr %mctx) #11, !dbg !2610
  call void @llvm.lifetime.end.p0(i64 4, ptr %size) #11, !dbg !2610
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !2610
  call void @llvm.lifetime.end.p0(i64 8, ptr %lex) #11, !dbg !2610
  call void @llvm.lifetime.end.p0(i64 8, ptr %rdatabuf) #11, !dbg !2610
  call void @llvm.lifetime.end.p0(i64 64, ptr %b) #11, !dbg !2610
  call void @llvm.lifetime.end.p0(i64 16, ptr %r) #11, !dbg !2610
  call void @llvm.lifetime.end.p0(i64 2, ptr %typeval) #11, !dbg !2610
  call void @llvm.lifetime.end.p0(i64 8, ptr %rdata) #11, !dbg !2610
  call void @llvm.lifetime.end.p0(i64 8, ptr %rdatalist) #11, !dbg !2610
  %128 = load i32, ptr %retval, align 4, !dbg !2610
  ret i32 %128, !dbg !2610
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i64 @llvm.expect.i64(i64, i64) #2

; Function Attrs: noreturn null_pointer_is_valid
declare !dbg !2611 void @isc_assertion_failed(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #3

; Function Attrs: nounwind null_pointer_is_valid willreturn memory(read)
declare !dbg !2615 i64 @strlen(ptr noundef) #4

; Function Attrs: null_pointer_is_valid
declare !dbg !2619 i32 @dns_rdatatype_fromtext(ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2630 ptr @isc__mem_get(ptr noundef, i64 noundef, ptr noundef, i32 noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2631 void @dns_rdatalist_init(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2634 void @dns_rdata_init(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2637 i32 @isc_lex_create(ptr noundef, i64 noundef, ptr noundef) #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid uwtable
define internal i32 @initial_size(ptr noundef %data) #6 !dbg !2642 {
entry:
  %data.addr = alloca ptr, align 8
  %len = alloca i32, align 4
  store ptr %data, ptr %data.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !2646, metadata !DIExpression()), !dbg !2648
  call void @llvm.lifetime.start.p0(i64 4, ptr %len) #11, !dbg !2649
  tail call void @llvm.dbg.declare(metadata ptr %len, metadata !2647, metadata !DIExpression()), !dbg !2650
  %0 = load ptr, ptr %data.addr, align 8, !dbg !2651
  %call = call i64 @strlen(ptr noundef %0) #13, !dbg !2652
  %div = udiv i64 %call, 64, !dbg !2653
  %add = add i64 %div, 1, !dbg !2654
  %conv = trunc i64 %add to i32, !dbg !2655
  store i32 %conv, ptr %len, align 4, !dbg !2650
  %1 = load i32, ptr %len, align 4, !dbg !2656
  %mul = mul i32 %1, 64, !dbg !2657
  %add1 = add i32 %mul, 64, !dbg !2658
  call void @llvm.lifetime.end.p0(i64 4, ptr %len) #11, !dbg !2659
  ret i32 %add1, !dbg !2660
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare !dbg !2661 i32 @isc_lex_openbuffer(ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2664 i32 @isc_buffer_allocate(ptr noundef, ptr noundef, i32 noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2668 i32 @dns_rdata_fromtext(ptr noundef, i16 noundef zeroext, i16 noundef zeroext, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2671 void @isc_buffer_free(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2674 void @isc_lex_destroy(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2677 void @isc__mem_put(ptr noundef, ptr noundef, i64 noundef, ptr noundef, i32 noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define i32 @dns_sdlz_putnamedrr(ptr noundef %allnodes, ptr noundef %name, ptr noundef %type, i32 noundef %ttl, ptr noundef %data) #0 !dbg !2678 {
entry:
  %retval = alloca i32, align 4
  %allnodes.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %ttl.addr = alloca i32, align 4
  %data.addr = alloca ptr, align 8
  %newname = alloca ptr, align 8
  %origin = alloca ptr, align 8
  %fnewname = alloca %struct.dns_fixedname, align 8
  %sdlz = alloca ptr, align 8
  %sdlznode = alloca ptr, align 8
  %mctx = alloca ptr, align 8
  %b = alloca %struct.isc_buffer, align 8
  %result = alloca i32, align 4
  %_deconst = alloca %union.anon.17, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %nlabels = alloca i32, align 4
  store ptr %allnodes, ptr %allnodes.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %allnodes.addr, metadata !2682, metadata !DIExpression()), !dbg !2704
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !2683, metadata !DIExpression()), !dbg !2705
  store ptr %type, ptr %type.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !2684, metadata !DIExpression()), !dbg !2706
  store i32 %ttl, ptr %ttl.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %ttl.addr, metadata !2685, metadata !DIExpression()), !dbg !2707
  store ptr %data, ptr %data.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !2686, metadata !DIExpression()), !dbg !2708
  call void @llvm.lifetime.start.p0(i64 8, ptr %newname) #11, !dbg !2709
  tail call void @llvm.dbg.declare(metadata ptr %newname, metadata !2687, metadata !DIExpression()), !dbg !2710
  call void @llvm.lifetime.start.p0(i64 8, ptr %origin) #11, !dbg !2711
  tail call void @llvm.dbg.declare(metadata ptr %origin, metadata !2688, metadata !DIExpression()), !dbg !2712
  call void @llvm.lifetime.start.p0(i64 528, ptr %fnewname) #11, !dbg !2713
  tail call void @llvm.dbg.declare(metadata ptr %fnewname, metadata !2689, metadata !DIExpression()), !dbg !2714
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !2715
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !2690, metadata !DIExpression()), !dbg !2716
  %0 = load ptr, ptr %allnodes.addr, align 8, !dbg !2717
  %common = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %0, i32 0, i32 0, !dbg !2718
  %db = getelementptr inbounds %struct.dns_dbiterator, ptr %common, i32 0, i32 2, !dbg !2719
  %1 = load ptr, ptr %db, align 8, !dbg !2719
  store ptr %1, ptr %sdlz, align 8, !dbg !2716
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlznode) #11, !dbg !2720
  tail call void @llvm.dbg.declare(metadata ptr %sdlznode, metadata !2691, metadata !DIExpression()), !dbg !2721
  call void @llvm.lifetime.start.p0(i64 8, ptr %mctx) #11, !dbg !2722
  tail call void @llvm.dbg.declare(metadata ptr %mctx, metadata !2692, metadata !DIExpression()), !dbg !2723
  %2 = load ptr, ptr %sdlz, align 8, !dbg !2724
  %common1 = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !2725
  %mctx2 = getelementptr inbounds %struct.dns_db, ptr %common1, i32 0, i32 6, !dbg !2726
  %3 = load ptr, ptr %mctx2, align 8, !dbg !2726
  store ptr %3, ptr %mctx, align 8, !dbg !2723
  call void @llvm.lifetime.start.p0(i64 64, ptr %b) #11, !dbg !2727
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !2693, metadata !DIExpression()), !dbg !2728
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !2729
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !2694, metadata !DIExpression()), !dbg !2730
  %call = call ptr @dns_fixedname_initname(ptr noundef %fnewname), !dbg !2731
  store ptr %call, ptr %newname, align 8, !dbg !2732
  %4 = load ptr, ptr %sdlz, align 8, !dbg !2733
  %dlzimp = getelementptr inbounds %struct.dns_sdlz_db, ptr %4, i32 0, i32 2, !dbg !2735
  %5 = load ptr, ptr %dlzimp, align 8, !dbg !2735
  %flags = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %5, i32 0, i32 3, !dbg !2736
  %6 = load i32, ptr %flags, align 8, !dbg !2736
  %and = and i32 %6, 4, !dbg !2737
  %cmp = icmp ne i32 %and, 0, !dbg !2738
  br i1 %cmp, label %if.then, label %if.else, !dbg !2739

if.then:                                          ; preds = %entry
  %7 = load ptr, ptr %sdlz, align 8, !dbg !2740
  %common3 = getelementptr inbounds %struct.dns_sdlz_db, ptr %7, i32 0, i32 0, !dbg !2741
  %origin4 = getelementptr inbounds %struct.dns_db, ptr %common3, i32 0, i32 5, !dbg !2742
  store ptr %origin4, ptr %origin, align 8, !dbg !2743
  br label %if.end, !dbg !2744

if.else:                                          ; preds = %entry
  %8 = load ptr, ptr @dns_rootname, align 8, !dbg !2745
  store ptr %8, ptr %origin, align 8, !dbg !2746
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body, !dbg !2747

do.body:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %_deconst) #11, !dbg !2748
  tail call void @llvm.dbg.declare(metadata ptr %_deconst, metadata !2695, metadata !DIExpression()), !dbg !2748
  %9 = load ptr, ptr %name.addr, align 8, !dbg !2748
  store ptr %9, ptr %_deconst, align 8, !dbg !2748
  br label %do.body5, !dbg !2748

do.body5:                                         ; preds = %do.body
  %10 = load ptr, ptr %_deconst, align 8, !dbg !2749
  %base = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 1, !dbg !2749
  store ptr %10, ptr %base, align 8, !dbg !2749
  %11 = load ptr, ptr %name.addr, align 8, !dbg !2749
  %call6 = call i64 @strlen(ptr noundef %11) #13, !dbg !2749
  %conv = trunc i64 %call6 to i32, !dbg !2749
  %length = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 2, !dbg !2749
  store i32 %conv, ptr %length, align 8, !dbg !2749
  %used = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !2749
  store i32 0, ptr %used, align 4, !dbg !2749
  %current = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 4, !dbg !2749
  store i32 0, ptr %current, align 8, !dbg !2749
  %active = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 5, !dbg !2749
  store i32 0, ptr %active, align 4, !dbg !2749
  %mctx7 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 7, !dbg !2749
  store ptr null, ptr %mctx7, align 8, !dbg !2749
  br label %do.body8, !dbg !2749

do.body8:                                         ; preds = %do.body5
  %link = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !2751
  %prev = getelementptr inbounds %struct.anon.6, ptr %link, i32 0, i32 0, !dbg !2751
  store ptr inttoptr (i64 -1 to ptr), ptr %prev, align 8, !dbg !2751
  %link9 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !2751
  %next = getelementptr inbounds %struct.anon.6, ptr %link9, i32 0, i32 1, !dbg !2751
  store ptr inttoptr (i64 -1 to ptr), ptr %next, align 8, !dbg !2751
  br label %do.cond, !dbg !2751

do.cond:                                          ; preds = %do.body8
  br label %do.end, !dbg !2751

do.end:                                           ; preds = %do.cond
  %magic = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 0, !dbg !2749
  store i32 1114990113, ptr %magic, align 8, !dbg !2749
  %autore = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 8, !dbg !2749
  store i8 0, ptr %autore, align 8, !dbg !2749
  br label %do.cond10, !dbg !2749

do.cond10:                                        ; preds = %do.end
  br label %do.end11, !dbg !2749

do.end11:                                         ; preds = %do.cond10
  call void @llvm.lifetime.end.p0(i64 8, ptr %_deconst) #11, !dbg !2747
  br label %do.cond12, !dbg !2748

do.cond12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !2748

do.end13:                                         ; preds = %do.cond12
  br label %do.body14, !dbg !2753

do.body14:                                        ; preds = %do.end13
  %12 = load ptr, ptr %name.addr, align 8, !dbg !2754
  %call15 = call i64 @strlen(ptr noundef %12) #13, !dbg !2754
  %used16 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !2754
  %13 = load i32, ptr %used16, align 4, !dbg !2754
  %conv17 = zext i32 %13 to i64, !dbg !2754
  %add = add i64 %conv17, %call15, !dbg !2754
  %conv18 = trunc i64 %add to i32, !dbg !2754
  store i32 %conv18, ptr %used16, align 4, !dbg !2754
  br label %do.cond19, !dbg !2754

do.cond19:                                        ; preds = %do.body14
  br label %do.end20, !dbg !2754

do.end20:                                         ; preds = %do.cond19
  %14 = load ptr, ptr %newname, align 8, !dbg !2756
  %15 = load ptr, ptr %origin, align 8, !dbg !2757
  %call21 = call i32 @dns_name_fromtext(ptr noundef %14, ptr noundef %b, ptr noundef %15, i32 noundef 0, ptr noundef null), !dbg !2758
  store i32 %call21, ptr %result, align 4, !dbg !2759
  %16 = load i32, ptr %result, align 4, !dbg !2760
  %cmp22 = icmp ne i32 %16, 0, !dbg !2762
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !2763

if.then24:                                        ; preds = %do.end20
  %17 = load i32, ptr %result, align 4, !dbg !2764
  store i32 %17, ptr %retval, align 4, !dbg !2765
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2765

if.end25:                                         ; preds = %do.end20
  %18 = load ptr, ptr %allnodes.addr, align 8, !dbg !2766
  %common26 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %18, i32 0, i32 0, !dbg !2767
  %relative_names = getelementptr inbounds %struct.dns_dbiterator, ptr %common26, i32 0, i32 3, !dbg !2768
  %19 = load i8, ptr %relative_names, align 8, !dbg !2768, !range !2769, !noundef !2770
  %tobool = trunc i8 %19 to i1, !dbg !2768
  br i1 %tobool, label %if.then27, label %if.end29, !dbg !2771

if.then27:                                        ; preds = %if.end25
  call void @llvm.lifetime.start.p0(i64 4, ptr %nlabels) #11, !dbg !2772
  tail call void @llvm.dbg.declare(metadata ptr %nlabels, metadata !2701, metadata !DIExpression()), !dbg !2773
  %20 = load ptr, ptr %newname, align 8, !dbg !2774
  %call28 = call i32 @dns_name_countlabels(ptr noundef %20), !dbg !2775
  store i32 %call28, ptr %nlabels, align 4, !dbg !2773
  %21 = load ptr, ptr %newname, align 8, !dbg !2776
  %22 = load i32, ptr %nlabels, align 4, !dbg !2777
  %sub = sub i32 %22, 1, !dbg !2778
  %23 = load ptr, ptr %newname, align 8, !dbg !2779
  call void @dns_name_getlabelsequence(ptr noundef %21, i32 noundef 0, i32 noundef %sub, ptr noundef %23), !dbg !2780
  call void @llvm.lifetime.end.p0(i64 4, ptr %nlabels) #11, !dbg !2781
  br label %if.end29, !dbg !2782

if.end29:                                         ; preds = %if.then27, %if.end25
  %24 = load ptr, ptr %allnodes.addr, align 8, !dbg !2783
  %nodelist = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %24, i32 0, i32 1, !dbg !2783
  %head = getelementptr inbounds %struct.anon.16, ptr %nodelist, i32 0, i32 0, !dbg !2783
  %25 = load ptr, ptr %head, align 8, !dbg !2783
  store ptr %25, ptr %sdlznode, align 8, !dbg !2784
  %26 = load ptr, ptr %sdlznode, align 8, !dbg !2785
  %cmp30 = icmp eq ptr %26, null, !dbg !2787
  br i1 %cmp30, label %if.then34, label %lor.lhs.false, !dbg !2788

lor.lhs.false:                                    ; preds = %if.end29
  %27 = load ptr, ptr %sdlznode, align 8, !dbg !2789
  %name32 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %27, i32 0, i32 4, !dbg !2790
  %28 = load ptr, ptr %name32, align 8, !dbg !2790
  %29 = load ptr, ptr %newname, align 8, !dbg !2791
  %call33 = call zeroext i1 @dns_name_equal(ptr noundef %28, ptr noundef %29), !dbg !2792
  br i1 %call33, label %if.end95, label %if.then34, !dbg !2793

if.then34:                                        ; preds = %lor.lhs.false, %if.end29
  store ptr null, ptr %sdlznode, align 8, !dbg !2794
  %30 = load ptr, ptr %sdlz, align 8, !dbg !2796
  %call35 = call i32 @createnode(ptr noundef %30, ptr noundef %sdlznode), !dbg !2797
  store i32 %call35, ptr %result, align 4, !dbg !2798
  %31 = load i32, ptr %result, align 4, !dbg !2799
  %cmp36 = icmp ne i32 %31, 0, !dbg !2801
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2802

if.then38:                                        ; preds = %if.then34
  %32 = load i32, ptr %result, align 4, !dbg !2803
  store i32 %32, ptr %retval, align 4, !dbg !2804
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2804

if.end39:                                         ; preds = %if.then34
  %33 = load ptr, ptr %mctx, align 8, !dbg !2805
  %call40 = call ptr @isc__mem_get(ptr noundef %33, i64 noundef 80, ptr noundef @.str, i32 noundef 1997), !dbg !2805
  %34 = load ptr, ptr %sdlznode, align 8, !dbg !2806
  %name41 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %34, i32 0, i32 4, !dbg !2807
  store ptr %call40, ptr %name41, align 8, !dbg !2808
  %35 = load ptr, ptr %sdlznode, align 8, !dbg !2809
  %name42 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %35, i32 0, i32 4, !dbg !2811
  %36 = load ptr, ptr %name42, align 8, !dbg !2811
  %cmp43 = icmp eq ptr %36, null, !dbg !2812
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !2813

if.then45:                                        ; preds = %if.end39
  %37 = load ptr, ptr %sdlznode, align 8, !dbg !2814
  call void @destroynode(ptr noundef %37), !dbg !2816
  store i32 1, ptr %retval, align 4, !dbg !2817
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2817

if.end46:                                         ; preds = %if.end39
  %38 = load ptr, ptr %sdlznode, align 8, !dbg !2818
  %name47 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %38, i32 0, i32 4, !dbg !2819
  %39 = load ptr, ptr %name47, align 8, !dbg !2819
  call void @dns_name_init(ptr noundef %39, ptr noundef null), !dbg !2820
  %40 = load ptr, ptr %newname, align 8, !dbg !2821
  %41 = load ptr, ptr %mctx, align 8, !dbg !2822
  %42 = load ptr, ptr %sdlznode, align 8, !dbg !2823
  %name48 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %42, i32 0, i32 4, !dbg !2824
  %43 = load ptr, ptr %name48, align 8, !dbg !2824
  %call49 = call i32 @dns_name_dup(ptr noundef %40, ptr noundef %41, ptr noundef %43), !dbg !2825
  store i32 %call49, ptr %result, align 4, !dbg !2826
  %44 = load i32, ptr %result, align 4, !dbg !2827
  %cmp50 = icmp ne i32 %44, 0, !dbg !2829
  br i1 %cmp50, label %if.then52, label %if.end58, !dbg !2830

if.then52:                                        ; preds = %if.end46
  br label %do.body53, !dbg !2831

do.body53:                                        ; preds = %if.then52
  %45 = load ptr, ptr %mctx, align 8, !dbg !2833
  %46 = load ptr, ptr %sdlznode, align 8, !dbg !2833
  %name54 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %46, i32 0, i32 4, !dbg !2833
  %47 = load ptr, ptr %name54, align 8, !dbg !2833
  call void @isc__mem_put(ptr noundef %45, ptr noundef %47, i64 noundef 80, ptr noundef @.str, i32 noundef 2005), !dbg !2833
  %48 = load ptr, ptr %sdlznode, align 8, !dbg !2833
  %name55 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %48, i32 0, i32 4, !dbg !2833
  store ptr null, ptr %name55, align 8, !dbg !2833
  br label %do.cond56, !dbg !2833

do.cond56:                                        ; preds = %do.body53
  br label %do.end57, !dbg !2833

do.end57:                                         ; preds = %do.cond56
  %49 = load ptr, ptr %sdlznode, align 8, !dbg !2835
  call void @destroynode(ptr noundef %49), !dbg !2836
  %50 = load i32, ptr %result, align 4, !dbg !2837
  store i32 %50, ptr %retval, align 4, !dbg !2838
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2838

if.end58:                                         ; preds = %if.end46
  br label %do.body59, !dbg !2839

do.body59:                                        ; preds = %if.end58
  br label %do.body60, !dbg !2840

do.body60:                                        ; preds = %do.body59
  %51 = load ptr, ptr %allnodes.addr, align 8, !dbg !2842
  %nodelist61 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %51, i32 0, i32 1, !dbg !2842
  %head62 = getelementptr inbounds %struct.anon.16, ptr %nodelist61, i32 0, i32 0, !dbg !2842
  %52 = load ptr, ptr %head62, align 8, !dbg !2842
  %cmp63 = icmp ne ptr %52, null, !dbg !2842
  br i1 %cmp63, label %if.then65, label %if.else70, !dbg !2845

if.then65:                                        ; preds = %do.body60
  %53 = load ptr, ptr %sdlznode, align 8, !dbg !2842
  %54 = load ptr, ptr %allnodes.addr, align 8, !dbg !2842
  %nodelist66 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %54, i32 0, i32 1, !dbg !2842
  %head67 = getelementptr inbounds %struct.anon.16, ptr %nodelist66, i32 0, i32 0, !dbg !2842
  %55 = load ptr, ptr %head67, align 8, !dbg !2842
  %link68 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %55, i32 0, i32 5, !dbg !2842
  %prev69 = getelementptr inbounds %struct.anon.9, ptr %link68, i32 0, i32 0, !dbg !2842
  store ptr %53, ptr %prev69, align 8, !dbg !2842
  br label %if.end72, !dbg !2842

if.else70:                                        ; preds = %do.body60
  %56 = load ptr, ptr %sdlznode, align 8, !dbg !2842
  %57 = load ptr, ptr %allnodes.addr, align 8, !dbg !2842
  %nodelist71 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %57, i32 0, i32 1, !dbg !2842
  %tail = getelementptr inbounds %struct.anon.16, ptr %nodelist71, i32 0, i32 1, !dbg !2842
  store ptr %56, ptr %tail, align 8, !dbg !2842
  br label %if.end72

if.end72:                                         ; preds = %if.else70, %if.then65
  %58 = load ptr, ptr %sdlznode, align 8, !dbg !2845
  %link73 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %58, i32 0, i32 5, !dbg !2845
  %prev74 = getelementptr inbounds %struct.anon.9, ptr %link73, i32 0, i32 0, !dbg !2845
  store ptr null, ptr %prev74, align 8, !dbg !2845
  %59 = load ptr, ptr %allnodes.addr, align 8, !dbg !2845
  %nodelist75 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %59, i32 0, i32 1, !dbg !2845
  %head76 = getelementptr inbounds %struct.anon.16, ptr %nodelist75, i32 0, i32 0, !dbg !2845
  %60 = load ptr, ptr %head76, align 8, !dbg !2845
  %61 = load ptr, ptr %sdlznode, align 8, !dbg !2845
  %link77 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %61, i32 0, i32 5, !dbg !2845
  %next78 = getelementptr inbounds %struct.anon.9, ptr %link77, i32 0, i32 1, !dbg !2845
  store ptr %60, ptr %next78, align 8, !dbg !2845
  %62 = load ptr, ptr %sdlznode, align 8, !dbg !2845
  %63 = load ptr, ptr %allnodes.addr, align 8, !dbg !2845
  %nodelist79 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %63, i32 0, i32 1, !dbg !2845
  %head80 = getelementptr inbounds %struct.anon.16, ptr %nodelist79, i32 0, i32 0, !dbg !2845
  store ptr %62, ptr %head80, align 8, !dbg !2845
  br label %do.cond81, !dbg !2845

do.cond81:                                        ; preds = %if.end72
  br label %do.end82, !dbg !2845

do.end82:                                         ; preds = %do.cond81
  br label %do.cond83, !dbg !2840

do.cond83:                                        ; preds = %do.end82
  br label %do.end84, !dbg !2840

do.end84:                                         ; preds = %do.cond83
  %64 = load ptr, ptr %allnodes.addr, align 8, !dbg !2846
  %origin85 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %64, i32 0, i32 3, !dbg !2848
  %65 = load ptr, ptr %origin85, align 8, !dbg !2848
  %cmp86 = icmp eq ptr %65, null, !dbg !2849
  br i1 %cmp86, label %land.lhs.true, label %if.end94, !dbg !2850

land.lhs.true:                                    ; preds = %do.end84
  %66 = load ptr, ptr %newname, align 8, !dbg !2851
  %67 = load ptr, ptr %sdlz, align 8, !dbg !2852
  %common88 = getelementptr inbounds %struct.dns_sdlz_db, ptr %67, i32 0, i32 0, !dbg !2853
  %origin89 = getelementptr inbounds %struct.dns_db, ptr %common88, i32 0, i32 5, !dbg !2854
  %call90 = call zeroext i1 @dns_name_equal(ptr noundef %66, ptr noundef %origin89), !dbg !2855
  br i1 %call90, label %if.then92, label %if.end94, !dbg !2856

if.then92:                                        ; preds = %land.lhs.true
  %68 = load ptr, ptr %sdlznode, align 8, !dbg !2857
  %69 = load ptr, ptr %allnodes.addr, align 8, !dbg !2858
  %origin93 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %69, i32 0, i32 3, !dbg !2859
  store ptr %68, ptr %origin93, align 8, !dbg !2860
  br label %if.end94, !dbg !2858

if.end94:                                         ; preds = %if.then92, %land.lhs.true, %do.end84
  br label %if.end95, !dbg !2861

if.end95:                                         ; preds = %if.end94, %lor.lhs.false
  %70 = load ptr, ptr %sdlznode, align 8, !dbg !2862
  %71 = load ptr, ptr %type.addr, align 8, !dbg !2863
  %72 = load i32, ptr %ttl.addr, align 4, !dbg !2864
  %73 = load ptr, ptr %data.addr, align 8, !dbg !2865
  %call96 = call i32 @dns_sdlz_putrr(ptr noundef %70, ptr noundef %71, i32 noundef %72, ptr noundef %73), !dbg !2866
  store i32 %call96, ptr %retval, align 4, !dbg !2867
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2867

cleanup:                                          ; preds = %if.end95, %do.end57, %if.then45, %if.then38, %if.then24
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !2868
  call void @llvm.lifetime.end.p0(i64 64, ptr %b) #11, !dbg !2868
  call void @llvm.lifetime.end.p0(i64 8, ptr %mctx) #11, !dbg !2868
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlznode) #11, !dbg !2868
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !2868
  call void @llvm.lifetime.end.p0(i64 528, ptr %fnewname) #11, !dbg !2868
  call void @llvm.lifetime.end.p0(i64 8, ptr %origin) #11, !dbg !2868
  call void @llvm.lifetime.end.p0(i64 8, ptr %newname) #11, !dbg !2868
  %74 = load i32, ptr %retval, align 4, !dbg !2868
  ret i32 %74, !dbg !2868
}

; Function Attrs: null_pointer_is_valid
declare !dbg !2869 ptr @dns_fixedname_initname(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2873 i32 @dns_name_fromtext(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2876 i32 @dns_name_countlabels(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2879 void @dns_name_getlabelsequence(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !2882 zeroext i1 @dns_name_equal(ptr noundef, ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @createnode(ptr noundef %sdlz, ptr noundef %nodep) #0 !dbg !2885 {
entry:
  %retval = alloca i32, align 4
  %sdlz.addr = alloca ptr, align 8
  %nodep.addr = alloca ptr, align 8
  %node = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %sdlz, ptr %sdlz.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %sdlz.addr, metadata !2890, metadata !DIExpression()), !dbg !2893
  store ptr %nodep, ptr %nodep.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %nodep.addr, metadata !2891, metadata !DIExpression()), !dbg !2894
  call void @llvm.lifetime.start.p0(i64 8, ptr %node) #11, !dbg !2895
  tail call void @llvm.dbg.declare(metadata ptr %node, metadata !2892, metadata !DIExpression()), !dbg !2896
  %0 = load ptr, ptr %sdlz.addr, align 8, !dbg !2897
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %0, i32 0, i32 0, !dbg !2897
  %mctx = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 6, !dbg !2897
  %1 = load ptr, ptr %mctx, align 8, !dbg !2897
  %call = call ptr @isc__mem_get(ptr noundef %1, i64 noundef 208, ptr noundef @.str, i32 noundef 471), !dbg !2897
  store ptr %call, ptr %node, align 8, !dbg !2898
  %2 = load ptr, ptr %node, align 8, !dbg !2899
  %cmp = icmp eq ptr %2, null, !dbg !2901
  br i1 %cmp, label %if.then, label %if.end, !dbg !2902

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !2903
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2903

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %node, align 8, !dbg !2904
  %sdlz1 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %3, i32 0, i32 1, !dbg !2905
  store ptr null, ptr %sdlz1, align 8, !dbg !2906
  %4 = load ptr, ptr %sdlz.addr, align 8, !dbg !2907
  %5 = load ptr, ptr %node, align 8, !dbg !2908
  %sdlz2 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %5, i32 0, i32 1, !dbg !2909
  call void @attach(ptr noundef %4, ptr noundef %sdlz2), !dbg !2910
  br label %do.body, !dbg !2911

do.body:                                          ; preds = %if.end
  %6 = load ptr, ptr %node, align 8, !dbg !2912
  %lists = getelementptr inbounds %struct.dns_sdlzlookup, ptr %6, i32 0, i32 2, !dbg !2912
  %head = getelementptr inbounds %struct.anon.7, ptr %lists, i32 0, i32 0, !dbg !2912
  store ptr null, ptr %head, align 8, !dbg !2912
  %7 = load ptr, ptr %node, align 8, !dbg !2912
  %lists3 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %7, i32 0, i32 2, !dbg !2912
  %tail = getelementptr inbounds %struct.anon.7, ptr %lists3, i32 0, i32 1, !dbg !2912
  store ptr null, ptr %tail, align 8, !dbg !2912
  br label %do.cond, !dbg !2912

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !2912

do.end:                                           ; preds = %do.cond
  br label %do.body4, !dbg !2914

do.body4:                                         ; preds = %do.end
  %8 = load ptr, ptr %node, align 8, !dbg !2915
  %buffers = getelementptr inbounds %struct.dns_sdlzlookup, ptr %8, i32 0, i32 3, !dbg !2915
  %head5 = getelementptr inbounds %struct.anon.8, ptr %buffers, i32 0, i32 0, !dbg !2915
  store ptr null, ptr %head5, align 8, !dbg !2915
  %9 = load ptr, ptr %node, align 8, !dbg !2915
  %buffers6 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %9, i32 0, i32 3, !dbg !2915
  %tail7 = getelementptr inbounds %struct.anon.8, ptr %buffers6, i32 0, i32 1, !dbg !2915
  store ptr null, ptr %tail7, align 8, !dbg !2915
  br label %do.cond8, !dbg !2915

do.cond8:                                         ; preds = %do.body4
  br label %do.end9, !dbg !2915

do.end9:                                          ; preds = %do.cond8
  br label %do.body10, !dbg !2917

do.body10:                                        ; preds = %do.end9
  %10 = load ptr, ptr %node, align 8, !dbg !2918
  %link = getelementptr inbounds %struct.dns_sdlzlookup, ptr %10, i32 0, i32 5, !dbg !2918
  %prev = getelementptr inbounds %struct.anon.9, ptr %link, i32 0, i32 0, !dbg !2918
  store ptr inttoptr (i64 -1 to ptr), ptr %prev, align 8, !dbg !2918
  %11 = load ptr, ptr %node, align 8, !dbg !2918
  %link11 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %11, i32 0, i32 5, !dbg !2918
  %next = getelementptr inbounds %struct.anon.9, ptr %link11, i32 0, i32 1, !dbg !2918
  store ptr inttoptr (i64 -1 to ptr), ptr %next, align 8, !dbg !2918
  br label %do.cond12, !dbg !2918

do.cond12:                                        ; preds = %do.body10
  br label %do.end13, !dbg !2918

do.end13:                                         ; preds = %do.cond12
  %12 = load ptr, ptr %node, align 8, !dbg !2920
  %name = getelementptr inbounds %struct.dns_sdlzlookup, ptr %12, i32 0, i32 4, !dbg !2921
  store ptr null, ptr %name, align 8, !dbg !2922
  %13 = load ptr, ptr %node, align 8, !dbg !2923
  %lock = getelementptr inbounds %struct.dns_sdlzlookup, ptr %13, i32 0, i32 6, !dbg !2923
  call void @isc__mutex_init(ptr noundef %lock, ptr noundef @.str, i32 noundef 481), !dbg !2923
  %14 = load ptr, ptr %node, align 8, !dbg !2924
  %callbacks = getelementptr inbounds %struct.dns_sdlzlookup, ptr %14, i32 0, i32 7, !dbg !2925
  call void @dns_rdatacallbacks_init(ptr noundef %callbacks), !dbg !2926
  %15 = load ptr, ptr %node, align 8, !dbg !2927
  %references = getelementptr inbounds %struct.dns_sdlzlookup, ptr %15, i32 0, i32 8, !dbg !2928
  store i32 1, ptr %references, align 8, !dbg !2929
  %16 = load ptr, ptr %node, align 8, !dbg !2930
  %magic = getelementptr inbounds %struct.dns_sdlzlookup, ptr %16, i32 0, i32 0, !dbg !2931
  store i32 1145854540, ptr %magic, align 8, !dbg !2932
  %17 = load ptr, ptr %node, align 8, !dbg !2933
  %18 = load ptr, ptr %nodep.addr, align 8, !dbg !2934
  store ptr %17, ptr %18, align 8, !dbg !2935
  store i32 0, ptr %retval, align 4, !dbg !2936
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2936

cleanup:                                          ; preds = %do.end13, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %node) #11, !dbg !2937
  %19 = load i32, ptr %retval, align 4, !dbg !2937
  ret i32 %19, !dbg !2937
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @destroynode(ptr noundef %node) #0 !dbg !2938 {
entry:
  %node.addr = alloca ptr, align 8
  %list = alloca ptr, align 8
  %rdata = alloca ptr, align 8
  %b = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %db = alloca ptr, align 8
  %mctx = alloca ptr, align 8
  store ptr %node, ptr %node.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !2942, metadata !DIExpression()), !dbg !2949
  call void @llvm.lifetime.start.p0(i64 8, ptr %list) #11, !dbg !2950
  tail call void @llvm.dbg.declare(metadata ptr %list, metadata !2943, metadata !DIExpression()), !dbg !2951
  call void @llvm.lifetime.start.p0(i64 8, ptr %rdata) #11, !dbg !2952
  tail call void @llvm.dbg.declare(metadata ptr %rdata, metadata !2944, metadata !DIExpression()), !dbg !2953
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #11, !dbg !2954
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !2945, metadata !DIExpression()), !dbg !2955
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !2956
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !2946, metadata !DIExpression()), !dbg !2957
  call void @llvm.lifetime.start.p0(i64 8, ptr %db) #11, !dbg !2958
  tail call void @llvm.dbg.declare(metadata ptr %db, metadata !2947, metadata !DIExpression()), !dbg !2959
  call void @llvm.lifetime.start.p0(i64 8, ptr %mctx) #11, !dbg !2960
  tail call void @llvm.dbg.declare(metadata ptr %mctx, metadata !2948, metadata !DIExpression()), !dbg !2961
  %0 = load ptr, ptr %node.addr, align 8, !dbg !2962
  %sdlz1 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %0, i32 0, i32 1, !dbg !2963
  %1 = load ptr, ptr %sdlz1, align 8, !dbg !2963
  store ptr %1, ptr %sdlz, align 8, !dbg !2964
  %2 = load ptr, ptr %sdlz, align 8, !dbg !2965
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !2966
  %mctx2 = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 6, !dbg !2967
  %3 = load ptr, ptr %mctx2, align 8, !dbg !2967
  store ptr %3, ptr %mctx, align 8, !dbg !2968
  br label %while.cond, !dbg !2969

while.cond:                                       ; preds = %do.end198, %entry
  %4 = load ptr, ptr %node.addr, align 8, !dbg !2970
  %lists = getelementptr inbounds %struct.dns_sdlzlookup, ptr %4, i32 0, i32 2, !dbg !2970
  %head = getelementptr inbounds %struct.anon.7, ptr %lists, i32 0, i32 0, !dbg !2970
  %5 = load ptr, ptr %head, align 8, !dbg !2970
  %cmp = icmp eq ptr %5, null, !dbg !2970
  %lnot = xor i1 %cmp, true, !dbg !2971
  br i1 %lnot, label %while.body, label %while.end199, !dbg !2969

while.body:                                       ; preds = %while.cond
  %6 = load ptr, ptr %node.addr, align 8, !dbg !2972
  %lists3 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %6, i32 0, i32 2, !dbg !2972
  %head4 = getelementptr inbounds %struct.anon.7, ptr %lists3, i32 0, i32 0, !dbg !2972
  %7 = load ptr, ptr %head4, align 8, !dbg !2972
  store ptr %7, ptr %list, align 8, !dbg !2974
  br label %while.cond5, !dbg !2975

while.cond5:                                      ; preds = %do.end95, %while.body
  %8 = load ptr, ptr %list, align 8, !dbg !2976
  %rdata6 = getelementptr inbounds %struct.dns_rdatalist, ptr %8, i32 0, i32 4, !dbg !2976
  %head7 = getelementptr inbounds %struct.anon.13, ptr %rdata6, i32 0, i32 0, !dbg !2976
  %9 = load ptr, ptr %head7, align 8, !dbg !2976
  %cmp8 = icmp eq ptr %9, null, !dbg !2976
  %lnot9 = xor i1 %cmp8, true, !dbg !2977
  br i1 %lnot9, label %while.body10, label %while.end, !dbg !2975

while.body10:                                     ; preds = %while.cond5
  %10 = load ptr, ptr %list, align 8, !dbg !2978
  %rdata11 = getelementptr inbounds %struct.dns_rdatalist, ptr %10, i32 0, i32 4, !dbg !2978
  %head12 = getelementptr inbounds %struct.anon.13, ptr %rdata11, i32 0, i32 0, !dbg !2978
  %11 = load ptr, ptr %head12, align 8, !dbg !2978
  store ptr %11, ptr %rdata, align 8, !dbg !2980
  br label %do.body, !dbg !2981

do.body:                                          ; preds = %while.body10
  br label %do.body13, !dbg !2982

do.body13:                                        ; preds = %do.body
  %12 = load ptr, ptr %rdata, align 8, !dbg !2984
  %link = getelementptr inbounds %struct.dns_rdata, ptr %12, i32 0, i32 5, !dbg !2984
  %next = getelementptr inbounds %struct.anon.15, ptr %link, i32 0, i32 1, !dbg !2984
  %13 = load ptr, ptr %next, align 8, !dbg !2984
  %cmp14 = icmp ne ptr %13, null, !dbg !2984
  br i1 %cmp14, label %if.then, label %if.else, !dbg !2987

if.then:                                          ; preds = %do.body13
  %14 = load ptr, ptr %rdata, align 8, !dbg !2984
  %link15 = getelementptr inbounds %struct.dns_rdata, ptr %14, i32 0, i32 5, !dbg !2984
  %prev = getelementptr inbounds %struct.anon.15, ptr %link15, i32 0, i32 0, !dbg !2984
  %15 = load ptr, ptr %prev, align 8, !dbg !2984
  %16 = load ptr, ptr %rdata, align 8, !dbg !2984
  %link16 = getelementptr inbounds %struct.dns_rdata, ptr %16, i32 0, i32 5, !dbg !2984
  %next17 = getelementptr inbounds %struct.anon.15, ptr %link16, i32 0, i32 1, !dbg !2984
  %17 = load ptr, ptr %next17, align 8, !dbg !2984
  %link18 = getelementptr inbounds %struct.dns_rdata, ptr %17, i32 0, i32 5, !dbg !2984
  %prev19 = getelementptr inbounds %struct.anon.15, ptr %link18, i32 0, i32 0, !dbg !2984
  store ptr %15, ptr %prev19, align 8, !dbg !2984
  br label %if.end, !dbg !2984

if.else:                                          ; preds = %do.body13
  %18 = load ptr, ptr %list, align 8, !dbg !2988
  %rdata20 = getelementptr inbounds %struct.dns_rdatalist, ptr %18, i32 0, i32 4, !dbg !2988
  %tail = getelementptr inbounds %struct.anon.13, ptr %rdata20, i32 0, i32 1, !dbg !2988
  %19 = load ptr, ptr %tail, align 8, !dbg !2988
  %20 = load ptr, ptr %rdata, align 8, !dbg !2988
  %cmp21 = icmp eq ptr %19, %20, !dbg !2988
  %lnot22 = xor i1 %cmp21, true, !dbg !2988
  %lnot23 = xor i1 %lnot22, true, !dbg !2988
  %lnot.ext = zext i1 %lnot23 to i32, !dbg !2988
  %conv = sext i32 %lnot.ext to i64, !dbg !2988
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !2988
  %tobool = icmp ne i64 %expval, 0, !dbg !2988
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !2988

lor.rhs:                                          ; preds = %if.else
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 506, i32 noundef 2, ptr noundef @.str.23) #12, !dbg !2988
  unreachable, !dbg !2988

21:                                               ; No predecessors!
  br label %lor.end, !dbg !2988

lor.end:                                          ; preds = %21, %if.else
  %22 = phi i1 [ true, %if.else ], [ false, %21 ]
  %lor.ext = zext i1 %22 to i32, !dbg !2988
  %23 = load ptr, ptr %rdata, align 8, !dbg !2988
  %link24 = getelementptr inbounds %struct.dns_rdata, ptr %23, i32 0, i32 5, !dbg !2988
  %prev25 = getelementptr inbounds %struct.anon.15, ptr %link24, i32 0, i32 0, !dbg !2988
  %24 = load ptr, ptr %prev25, align 8, !dbg !2988
  %25 = load ptr, ptr %list, align 8, !dbg !2988
  %rdata26 = getelementptr inbounds %struct.dns_rdatalist, ptr %25, i32 0, i32 4, !dbg !2988
  %tail27 = getelementptr inbounds %struct.anon.13, ptr %rdata26, i32 0, i32 1, !dbg !2988
  store ptr %24, ptr %tail27, align 8, !dbg !2988
  br label %if.end

if.end:                                           ; preds = %lor.end, %if.then
  %26 = load ptr, ptr %rdata, align 8, !dbg !2990
  %link28 = getelementptr inbounds %struct.dns_rdata, ptr %26, i32 0, i32 5, !dbg !2990
  %prev29 = getelementptr inbounds %struct.anon.15, ptr %link28, i32 0, i32 0, !dbg !2990
  %27 = load ptr, ptr %prev29, align 8, !dbg !2990
  %cmp30 = icmp ne ptr %27, null, !dbg !2990
  br i1 %cmp30, label %if.then32, label %if.else39, !dbg !2987

if.then32:                                        ; preds = %if.end
  %28 = load ptr, ptr %rdata, align 8, !dbg !2990
  %link33 = getelementptr inbounds %struct.dns_rdata, ptr %28, i32 0, i32 5, !dbg !2990
  %next34 = getelementptr inbounds %struct.anon.15, ptr %link33, i32 0, i32 1, !dbg !2990
  %29 = load ptr, ptr %next34, align 8, !dbg !2990
  %30 = load ptr, ptr %rdata, align 8, !dbg !2990
  %link35 = getelementptr inbounds %struct.dns_rdata, ptr %30, i32 0, i32 5, !dbg !2990
  %prev36 = getelementptr inbounds %struct.anon.15, ptr %link35, i32 0, i32 0, !dbg !2990
  %31 = load ptr, ptr %prev36, align 8, !dbg !2990
  %link37 = getelementptr inbounds %struct.dns_rdata, ptr %31, i32 0, i32 5, !dbg !2990
  %next38 = getelementptr inbounds %struct.anon.15, ptr %link37, i32 0, i32 1, !dbg !2990
  store ptr %29, ptr %next38, align 8, !dbg !2990
  br label %if.end58, !dbg !2990

if.else39:                                        ; preds = %if.end
  %32 = load ptr, ptr %list, align 8, !dbg !2992
  %rdata40 = getelementptr inbounds %struct.dns_rdatalist, ptr %32, i32 0, i32 4, !dbg !2992
  %head41 = getelementptr inbounds %struct.anon.13, ptr %rdata40, i32 0, i32 0, !dbg !2992
  %33 = load ptr, ptr %head41, align 8, !dbg !2992
  %34 = load ptr, ptr %rdata, align 8, !dbg !2992
  %cmp42 = icmp eq ptr %33, %34, !dbg !2992
  %lnot44 = xor i1 %cmp42, true, !dbg !2992
  %lnot46 = xor i1 %lnot44, true, !dbg !2992
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !2992
  %conv48 = sext i32 %lnot.ext47 to i64, !dbg !2992
  %expval49 = call i64 @llvm.expect.i64(i64 %conv48, i64 1), !dbg !2992
  %tobool50 = icmp ne i64 %expval49, 0, !dbg !2992
  br i1 %tobool50, label %lor.end52, label %lor.rhs51, !dbg !2992

lor.rhs51:                                        ; preds = %if.else39
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 506, i32 noundef 2, ptr noundef @.str.24) #12, !dbg !2992
  unreachable, !dbg !2992

35:                                               ; No predecessors!
  br label %lor.end52, !dbg !2992

lor.end52:                                        ; preds = %35, %if.else39
  %36 = phi i1 [ true, %if.else39 ], [ false, %35 ]
  %lor.ext53 = zext i1 %36 to i32, !dbg !2992
  %37 = load ptr, ptr %rdata, align 8, !dbg !2992
  %link54 = getelementptr inbounds %struct.dns_rdata, ptr %37, i32 0, i32 5, !dbg !2992
  %next55 = getelementptr inbounds %struct.anon.15, ptr %link54, i32 0, i32 1, !dbg !2992
  %38 = load ptr, ptr %next55, align 8, !dbg !2992
  %39 = load ptr, ptr %list, align 8, !dbg !2992
  %rdata56 = getelementptr inbounds %struct.dns_rdatalist, ptr %39, i32 0, i32 4, !dbg !2992
  %head57 = getelementptr inbounds %struct.anon.13, ptr %rdata56, i32 0, i32 0, !dbg !2992
  store ptr %38, ptr %head57, align 8, !dbg !2992
  br label %if.end58

if.end58:                                         ; preds = %lor.end52, %if.then32
  %40 = load ptr, ptr %rdata, align 8, !dbg !2987
  %link59 = getelementptr inbounds %struct.dns_rdata, ptr %40, i32 0, i32 5, !dbg !2987
  %prev60 = getelementptr inbounds %struct.anon.15, ptr %link59, i32 0, i32 0, !dbg !2987
  store ptr inttoptr (i64 -1 to ptr), ptr %prev60, align 8, !dbg !2987
  %41 = load ptr, ptr %rdata, align 8, !dbg !2987
  %link61 = getelementptr inbounds %struct.dns_rdata, ptr %41, i32 0, i32 5, !dbg !2987
  %next62 = getelementptr inbounds %struct.anon.15, ptr %link61, i32 0, i32 1, !dbg !2987
  store ptr inttoptr (i64 -1 to ptr), ptr %next62, align 8, !dbg !2987
  %42 = load ptr, ptr %list, align 8, !dbg !2987
  %rdata63 = getelementptr inbounds %struct.dns_rdatalist, ptr %42, i32 0, i32 4, !dbg !2987
  %head64 = getelementptr inbounds %struct.anon.13, ptr %rdata63, i32 0, i32 0, !dbg !2987
  %43 = load ptr, ptr %head64, align 8, !dbg !2987
  %44 = load ptr, ptr %rdata, align 8, !dbg !2987
  %cmp65 = icmp ne ptr %43, %44, !dbg !2987
  %lnot67 = xor i1 %cmp65, true, !dbg !2987
  %lnot69 = xor i1 %lnot67, true, !dbg !2987
  %lnot.ext70 = zext i1 %lnot69 to i32, !dbg !2987
  %conv71 = sext i32 %lnot.ext70 to i64, !dbg !2987
  %expval72 = call i64 @llvm.expect.i64(i64 %conv71, i64 1), !dbg !2987
  %tobool73 = icmp ne i64 %expval72, 0, !dbg !2987
  br i1 %tobool73, label %lor.end75, label %lor.rhs74, !dbg !2987

lor.rhs74:                                        ; preds = %if.end58
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 506, i32 noundef 2, ptr noundef @.str.25) #12, !dbg !2987
  unreachable, !dbg !2987

45:                                               ; No predecessors!
  br label %lor.end75, !dbg !2987

lor.end75:                                        ; preds = %45, %if.end58
  %46 = phi i1 [ true, %if.end58 ], [ false, %45 ]
  %lor.ext76 = zext i1 %46 to i32, !dbg !2987
  %47 = load ptr, ptr %list, align 8, !dbg !2987
  %rdata77 = getelementptr inbounds %struct.dns_rdatalist, ptr %47, i32 0, i32 4, !dbg !2987
  %tail78 = getelementptr inbounds %struct.anon.13, ptr %rdata77, i32 0, i32 1, !dbg !2987
  %48 = load ptr, ptr %tail78, align 8, !dbg !2987
  %49 = load ptr, ptr %rdata, align 8, !dbg !2987
  %cmp79 = icmp ne ptr %48, %49, !dbg !2987
  %lnot81 = xor i1 %cmp79, true, !dbg !2987
  %lnot83 = xor i1 %lnot81, true, !dbg !2987
  %lnot.ext84 = zext i1 %lnot83 to i32, !dbg !2987
  %conv85 = sext i32 %lnot.ext84 to i64, !dbg !2987
  %expval86 = call i64 @llvm.expect.i64(i64 %conv85, i64 1), !dbg !2987
  %tobool87 = icmp ne i64 %expval86, 0, !dbg !2987
  br i1 %tobool87, label %lor.end89, label %lor.rhs88, !dbg !2987

lor.rhs88:                                        ; preds = %lor.end75
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 506, i32 noundef 2, ptr noundef @.str.26) #12, !dbg !2987
  unreachable, !dbg !2987

50:                                               ; No predecessors!
  br label %lor.end89, !dbg !2987

lor.end89:                                        ; preds = %50, %lor.end75
  %51 = phi i1 [ true, %lor.end75 ], [ false, %50 ]
  %lor.ext90 = zext i1 %51 to i32, !dbg !2987
  br label %do.cond, !dbg !2987

do.cond:                                          ; preds = %lor.end89
  br label %do.end, !dbg !2987

do.end:                                           ; preds = %do.cond
  br label %do.cond91, !dbg !2982

do.cond91:                                        ; preds = %do.end
  br label %do.end92, !dbg !2982

do.end92:                                         ; preds = %do.cond91
  br label %do.body93, !dbg !2994

do.body93:                                        ; preds = %do.end92
  %52 = load ptr, ptr %mctx, align 8, !dbg !2995
  %53 = load ptr, ptr %rdata, align 8, !dbg !2995
  call void @isc__mem_put(ptr noundef %52, ptr noundef %53, i64 noundef 40, ptr noundef @.str, i32 noundef 507), !dbg !2995
  store ptr null, ptr %rdata, align 8, !dbg !2995
  br label %do.cond94, !dbg !2995

do.cond94:                                        ; preds = %do.body93
  br label %do.end95, !dbg !2995

do.end95:                                         ; preds = %do.cond94
  br label %while.cond5, !dbg !2975, !llvm.loop !2997

while.end:                                        ; preds = %while.cond5
  br label %do.body96, !dbg !2999

do.body96:                                        ; preds = %while.end
  br label %do.body97, !dbg !3000

do.body97:                                        ; preds = %do.body96
  %54 = load ptr, ptr %list, align 8, !dbg !3002
  %link98 = getelementptr inbounds %struct.dns_rdatalist, ptr %54, i32 0, i32 5, !dbg !3002
  %next99 = getelementptr inbounds %struct.anon.14, ptr %link98, i32 0, i32 1, !dbg !3002
  %55 = load ptr, ptr %next99, align 8, !dbg !3002
  %cmp100 = icmp ne ptr %55, null, !dbg !3002
  br i1 %cmp100, label %if.then102, label %if.else109, !dbg !3005

if.then102:                                       ; preds = %do.body97
  %56 = load ptr, ptr %list, align 8, !dbg !3002
  %link103 = getelementptr inbounds %struct.dns_rdatalist, ptr %56, i32 0, i32 5, !dbg !3002
  %prev104 = getelementptr inbounds %struct.anon.14, ptr %link103, i32 0, i32 0, !dbg !3002
  %57 = load ptr, ptr %prev104, align 8, !dbg !3002
  %58 = load ptr, ptr %list, align 8, !dbg !3002
  %link105 = getelementptr inbounds %struct.dns_rdatalist, ptr %58, i32 0, i32 5, !dbg !3002
  %next106 = getelementptr inbounds %struct.anon.14, ptr %link105, i32 0, i32 1, !dbg !3002
  %59 = load ptr, ptr %next106, align 8, !dbg !3002
  %link107 = getelementptr inbounds %struct.dns_rdatalist, ptr %59, i32 0, i32 5, !dbg !3002
  %prev108 = getelementptr inbounds %struct.anon.14, ptr %link107, i32 0, i32 0, !dbg !3002
  store ptr %57, ptr %prev108, align 8, !dbg !3002
  br label %if.end128, !dbg !3002

if.else109:                                       ; preds = %do.body97
  %60 = load ptr, ptr %node.addr, align 8, !dbg !3006
  %lists110 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %60, i32 0, i32 2, !dbg !3006
  %tail111 = getelementptr inbounds %struct.anon.7, ptr %lists110, i32 0, i32 1, !dbg !3006
  %61 = load ptr, ptr %tail111, align 8, !dbg !3006
  %62 = load ptr, ptr %list, align 8, !dbg !3006
  %cmp112 = icmp eq ptr %61, %62, !dbg !3006
  %lnot114 = xor i1 %cmp112, true, !dbg !3006
  %lnot116 = xor i1 %lnot114, true, !dbg !3006
  %lnot.ext117 = zext i1 %lnot116 to i32, !dbg !3006
  %conv118 = sext i32 %lnot.ext117 to i64, !dbg !3006
  %expval119 = call i64 @llvm.expect.i64(i64 %conv118, i64 1), !dbg !3006
  %tobool120 = icmp ne i64 %expval119, 0, !dbg !3006
  br i1 %tobool120, label %lor.end122, label %lor.rhs121, !dbg !3006

lor.rhs121:                                       ; preds = %if.else109
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 509, i32 noundef 2, ptr noundef @.str.27) #12, !dbg !3006
  unreachable, !dbg !3006

63:                                               ; No predecessors!
  br label %lor.end122, !dbg !3006

lor.end122:                                       ; preds = %63, %if.else109
  %64 = phi i1 [ true, %if.else109 ], [ false, %63 ]
  %lor.ext123 = zext i1 %64 to i32, !dbg !3006
  %65 = load ptr, ptr %list, align 8, !dbg !3006
  %link124 = getelementptr inbounds %struct.dns_rdatalist, ptr %65, i32 0, i32 5, !dbg !3006
  %prev125 = getelementptr inbounds %struct.anon.14, ptr %link124, i32 0, i32 0, !dbg !3006
  %66 = load ptr, ptr %prev125, align 8, !dbg !3006
  %67 = load ptr, ptr %node.addr, align 8, !dbg !3006
  %lists126 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %67, i32 0, i32 2, !dbg !3006
  %tail127 = getelementptr inbounds %struct.anon.7, ptr %lists126, i32 0, i32 1, !dbg !3006
  store ptr %66, ptr %tail127, align 8, !dbg !3006
  br label %if.end128

if.end128:                                        ; preds = %lor.end122, %if.then102
  %68 = load ptr, ptr %list, align 8, !dbg !3008
  %link129 = getelementptr inbounds %struct.dns_rdatalist, ptr %68, i32 0, i32 5, !dbg !3008
  %prev130 = getelementptr inbounds %struct.anon.14, ptr %link129, i32 0, i32 0, !dbg !3008
  %69 = load ptr, ptr %prev130, align 8, !dbg !3008
  %cmp131 = icmp ne ptr %69, null, !dbg !3008
  br i1 %cmp131, label %if.then133, label %if.else140, !dbg !3005

if.then133:                                       ; preds = %if.end128
  %70 = load ptr, ptr %list, align 8, !dbg !3008
  %link134 = getelementptr inbounds %struct.dns_rdatalist, ptr %70, i32 0, i32 5, !dbg !3008
  %next135 = getelementptr inbounds %struct.anon.14, ptr %link134, i32 0, i32 1, !dbg !3008
  %71 = load ptr, ptr %next135, align 8, !dbg !3008
  %72 = load ptr, ptr %list, align 8, !dbg !3008
  %link136 = getelementptr inbounds %struct.dns_rdatalist, ptr %72, i32 0, i32 5, !dbg !3008
  %prev137 = getelementptr inbounds %struct.anon.14, ptr %link136, i32 0, i32 0, !dbg !3008
  %73 = load ptr, ptr %prev137, align 8, !dbg !3008
  %link138 = getelementptr inbounds %struct.dns_rdatalist, ptr %73, i32 0, i32 5, !dbg !3008
  %next139 = getelementptr inbounds %struct.anon.14, ptr %link138, i32 0, i32 1, !dbg !3008
  store ptr %71, ptr %next139, align 8, !dbg !3008
  br label %if.end159, !dbg !3008

if.else140:                                       ; preds = %if.end128
  %74 = load ptr, ptr %node.addr, align 8, !dbg !3010
  %lists141 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %74, i32 0, i32 2, !dbg !3010
  %head142 = getelementptr inbounds %struct.anon.7, ptr %lists141, i32 0, i32 0, !dbg !3010
  %75 = load ptr, ptr %head142, align 8, !dbg !3010
  %76 = load ptr, ptr %list, align 8, !dbg !3010
  %cmp143 = icmp eq ptr %75, %76, !dbg !3010
  %lnot145 = xor i1 %cmp143, true, !dbg !3010
  %lnot147 = xor i1 %lnot145, true, !dbg !3010
  %lnot.ext148 = zext i1 %lnot147 to i32, !dbg !3010
  %conv149 = sext i32 %lnot.ext148 to i64, !dbg !3010
  %expval150 = call i64 @llvm.expect.i64(i64 %conv149, i64 1), !dbg !3010
  %tobool151 = icmp ne i64 %expval150, 0, !dbg !3010
  br i1 %tobool151, label %lor.end153, label %lor.rhs152, !dbg !3010

lor.rhs152:                                       ; preds = %if.else140
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 509, i32 noundef 2, ptr noundef @.str.28) #12, !dbg !3010
  unreachable, !dbg !3010

77:                                               ; No predecessors!
  br label %lor.end153, !dbg !3010

lor.end153:                                       ; preds = %77, %if.else140
  %78 = phi i1 [ true, %if.else140 ], [ false, %77 ]
  %lor.ext154 = zext i1 %78 to i32, !dbg !3010
  %79 = load ptr, ptr %list, align 8, !dbg !3010
  %link155 = getelementptr inbounds %struct.dns_rdatalist, ptr %79, i32 0, i32 5, !dbg !3010
  %next156 = getelementptr inbounds %struct.anon.14, ptr %link155, i32 0, i32 1, !dbg !3010
  %80 = load ptr, ptr %next156, align 8, !dbg !3010
  %81 = load ptr, ptr %node.addr, align 8, !dbg !3010
  %lists157 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %81, i32 0, i32 2, !dbg !3010
  %head158 = getelementptr inbounds %struct.anon.7, ptr %lists157, i32 0, i32 0, !dbg !3010
  store ptr %80, ptr %head158, align 8, !dbg !3010
  br label %if.end159

if.end159:                                        ; preds = %lor.end153, %if.then133
  %82 = load ptr, ptr %list, align 8, !dbg !3005
  %link160 = getelementptr inbounds %struct.dns_rdatalist, ptr %82, i32 0, i32 5, !dbg !3005
  %prev161 = getelementptr inbounds %struct.anon.14, ptr %link160, i32 0, i32 0, !dbg !3005
  store ptr inttoptr (i64 -1 to ptr), ptr %prev161, align 8, !dbg !3005
  %83 = load ptr, ptr %list, align 8, !dbg !3005
  %link162 = getelementptr inbounds %struct.dns_rdatalist, ptr %83, i32 0, i32 5, !dbg !3005
  %next163 = getelementptr inbounds %struct.anon.14, ptr %link162, i32 0, i32 1, !dbg !3005
  store ptr inttoptr (i64 -1 to ptr), ptr %next163, align 8, !dbg !3005
  %84 = load ptr, ptr %node.addr, align 8, !dbg !3005
  %lists164 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %84, i32 0, i32 2, !dbg !3005
  %head165 = getelementptr inbounds %struct.anon.7, ptr %lists164, i32 0, i32 0, !dbg !3005
  %85 = load ptr, ptr %head165, align 8, !dbg !3005
  %86 = load ptr, ptr %list, align 8, !dbg !3005
  %cmp166 = icmp ne ptr %85, %86, !dbg !3005
  %lnot168 = xor i1 %cmp166, true, !dbg !3005
  %lnot170 = xor i1 %lnot168, true, !dbg !3005
  %lnot.ext171 = zext i1 %lnot170 to i32, !dbg !3005
  %conv172 = sext i32 %lnot.ext171 to i64, !dbg !3005
  %expval173 = call i64 @llvm.expect.i64(i64 %conv172, i64 1), !dbg !3005
  %tobool174 = icmp ne i64 %expval173, 0, !dbg !3005
  br i1 %tobool174, label %lor.end176, label %lor.rhs175, !dbg !3005

lor.rhs175:                                       ; preds = %if.end159
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 509, i32 noundef 2, ptr noundef @.str.29) #12, !dbg !3005
  unreachable, !dbg !3005

87:                                               ; No predecessors!
  br label %lor.end176, !dbg !3005

lor.end176:                                       ; preds = %87, %if.end159
  %88 = phi i1 [ true, %if.end159 ], [ false, %87 ]
  %lor.ext177 = zext i1 %88 to i32, !dbg !3005
  %89 = load ptr, ptr %node.addr, align 8, !dbg !3005
  %lists178 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %89, i32 0, i32 2, !dbg !3005
  %tail179 = getelementptr inbounds %struct.anon.7, ptr %lists178, i32 0, i32 1, !dbg !3005
  %90 = load ptr, ptr %tail179, align 8, !dbg !3005
  %91 = load ptr, ptr %list, align 8, !dbg !3005
  %cmp180 = icmp ne ptr %90, %91, !dbg !3005
  %lnot182 = xor i1 %cmp180, true, !dbg !3005
  %lnot184 = xor i1 %lnot182, true, !dbg !3005
  %lnot.ext185 = zext i1 %lnot184 to i32, !dbg !3005
  %conv186 = sext i32 %lnot.ext185 to i64, !dbg !3005
  %expval187 = call i64 @llvm.expect.i64(i64 %conv186, i64 1), !dbg !3005
  %tobool188 = icmp ne i64 %expval187, 0, !dbg !3005
  br i1 %tobool188, label %lor.end190, label %lor.rhs189, !dbg !3005

lor.rhs189:                                       ; preds = %lor.end176
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 509, i32 noundef 2, ptr noundef @.str.30) #12, !dbg !3005
  unreachable, !dbg !3005

92:                                               ; No predecessors!
  br label %lor.end190, !dbg !3005

lor.end190:                                       ; preds = %92, %lor.end176
  %93 = phi i1 [ true, %lor.end176 ], [ false, %92 ]
  %lor.ext191 = zext i1 %93 to i32, !dbg !3005
  br label %do.cond192, !dbg !3005

do.cond192:                                       ; preds = %lor.end190
  br label %do.end193, !dbg !3005

do.end193:                                        ; preds = %do.cond192
  br label %do.cond194, !dbg !3000

do.cond194:                                       ; preds = %do.end193
  br label %do.end195, !dbg !3000

do.end195:                                        ; preds = %do.cond194
  br label %do.body196, !dbg !3012

do.body196:                                       ; preds = %do.end195
  %94 = load ptr, ptr %mctx, align 8, !dbg !3013
  %95 = load ptr, ptr %list, align 8, !dbg !3013
  call void @isc__mem_put(ptr noundef %94, ptr noundef %95, i64 noundef 80, ptr noundef @.str, i32 noundef 510), !dbg !3013
  store ptr null, ptr %list, align 8, !dbg !3013
  br label %do.cond197, !dbg !3013

do.cond197:                                       ; preds = %do.body196
  br label %do.end198, !dbg !3013

do.end198:                                        ; preds = %do.cond197
  br label %while.cond, !dbg !2969, !llvm.loop !3015

while.end199:                                     ; preds = %while.cond
  br label %while.cond200, !dbg !3017

while.cond200:                                    ; preds = %do.end308, %while.end199
  %96 = load ptr, ptr %node.addr, align 8, !dbg !3018
  %buffers = getelementptr inbounds %struct.dns_sdlzlookup, ptr %96, i32 0, i32 3, !dbg !3018
  %head201 = getelementptr inbounds %struct.anon.8, ptr %buffers, i32 0, i32 0, !dbg !3018
  %97 = load ptr, ptr %head201, align 8, !dbg !3018
  %cmp202 = icmp eq ptr %97, null, !dbg !3018
  %lnot204 = xor i1 %cmp202, true, !dbg !3019
  br i1 %lnot204, label %while.body206, label %while.end309, !dbg !3017

while.body206:                                    ; preds = %while.cond200
  %98 = load ptr, ptr %node.addr, align 8, !dbg !3020
  %buffers207 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %98, i32 0, i32 3, !dbg !3020
  %head208 = getelementptr inbounds %struct.anon.8, ptr %buffers207, i32 0, i32 0, !dbg !3020
  %99 = load ptr, ptr %head208, align 8, !dbg !3020
  store ptr %99, ptr %b, align 8, !dbg !3022
  br label %do.body209, !dbg !3023

do.body209:                                       ; preds = %while.body206
  br label %do.body210, !dbg !3024

do.body210:                                       ; preds = %do.body209
  %100 = load ptr, ptr %b, align 8, !dbg !3026
  %link211 = getelementptr inbounds %struct.isc_buffer, ptr %100, i32 0, i32 6, !dbg !3026
  %next212 = getelementptr inbounds %struct.anon.6, ptr %link211, i32 0, i32 1, !dbg !3026
  %101 = load ptr, ptr %next212, align 8, !dbg !3026
  %cmp213 = icmp ne ptr %101, null, !dbg !3026
  br i1 %cmp213, label %if.then215, label %if.else222, !dbg !3029

if.then215:                                       ; preds = %do.body210
  %102 = load ptr, ptr %b, align 8, !dbg !3026
  %link216 = getelementptr inbounds %struct.isc_buffer, ptr %102, i32 0, i32 6, !dbg !3026
  %prev217 = getelementptr inbounds %struct.anon.6, ptr %link216, i32 0, i32 0, !dbg !3026
  %103 = load ptr, ptr %prev217, align 8, !dbg !3026
  %104 = load ptr, ptr %b, align 8, !dbg !3026
  %link218 = getelementptr inbounds %struct.isc_buffer, ptr %104, i32 0, i32 6, !dbg !3026
  %next219 = getelementptr inbounds %struct.anon.6, ptr %link218, i32 0, i32 1, !dbg !3026
  %105 = load ptr, ptr %next219, align 8, !dbg !3026
  %link220 = getelementptr inbounds %struct.isc_buffer, ptr %105, i32 0, i32 6, !dbg !3026
  %prev221 = getelementptr inbounds %struct.anon.6, ptr %link220, i32 0, i32 0, !dbg !3026
  store ptr %103, ptr %prev221, align 8, !dbg !3026
  br label %if.end241, !dbg !3026

if.else222:                                       ; preds = %do.body210
  %106 = load ptr, ptr %node.addr, align 8, !dbg !3030
  %buffers223 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %106, i32 0, i32 3, !dbg !3030
  %tail224 = getelementptr inbounds %struct.anon.8, ptr %buffers223, i32 0, i32 1, !dbg !3030
  %107 = load ptr, ptr %tail224, align 8, !dbg !3030
  %108 = load ptr, ptr %b, align 8, !dbg !3030
  %cmp225 = icmp eq ptr %107, %108, !dbg !3030
  %lnot227 = xor i1 %cmp225, true, !dbg !3030
  %lnot229 = xor i1 %lnot227, true, !dbg !3030
  %lnot.ext230 = zext i1 %lnot229 to i32, !dbg !3030
  %conv231 = sext i32 %lnot.ext230 to i64, !dbg !3030
  %expval232 = call i64 @llvm.expect.i64(i64 %conv231, i64 1), !dbg !3030
  %tobool233 = icmp ne i64 %expval232, 0, !dbg !3030
  br i1 %tobool233, label %lor.end235, label %lor.rhs234, !dbg !3030

lor.rhs234:                                       ; preds = %if.else222
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 515, i32 noundef 2, ptr noundef @.str.31) #12, !dbg !3030
  unreachable, !dbg !3030

109:                                              ; No predecessors!
  br label %lor.end235, !dbg !3030

lor.end235:                                       ; preds = %109, %if.else222
  %110 = phi i1 [ true, %if.else222 ], [ false, %109 ]
  %lor.ext236 = zext i1 %110 to i32, !dbg !3030
  %111 = load ptr, ptr %b, align 8, !dbg !3030
  %link237 = getelementptr inbounds %struct.isc_buffer, ptr %111, i32 0, i32 6, !dbg !3030
  %prev238 = getelementptr inbounds %struct.anon.6, ptr %link237, i32 0, i32 0, !dbg !3030
  %112 = load ptr, ptr %prev238, align 8, !dbg !3030
  %113 = load ptr, ptr %node.addr, align 8, !dbg !3030
  %buffers239 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %113, i32 0, i32 3, !dbg !3030
  %tail240 = getelementptr inbounds %struct.anon.8, ptr %buffers239, i32 0, i32 1, !dbg !3030
  store ptr %112, ptr %tail240, align 8, !dbg !3030
  br label %if.end241

if.end241:                                        ; preds = %lor.end235, %if.then215
  %114 = load ptr, ptr %b, align 8, !dbg !3032
  %link242 = getelementptr inbounds %struct.isc_buffer, ptr %114, i32 0, i32 6, !dbg !3032
  %prev243 = getelementptr inbounds %struct.anon.6, ptr %link242, i32 0, i32 0, !dbg !3032
  %115 = load ptr, ptr %prev243, align 8, !dbg !3032
  %cmp244 = icmp ne ptr %115, null, !dbg !3032
  br i1 %cmp244, label %if.then246, label %if.else253, !dbg !3029

if.then246:                                       ; preds = %if.end241
  %116 = load ptr, ptr %b, align 8, !dbg !3032
  %link247 = getelementptr inbounds %struct.isc_buffer, ptr %116, i32 0, i32 6, !dbg !3032
  %next248 = getelementptr inbounds %struct.anon.6, ptr %link247, i32 0, i32 1, !dbg !3032
  %117 = load ptr, ptr %next248, align 8, !dbg !3032
  %118 = load ptr, ptr %b, align 8, !dbg !3032
  %link249 = getelementptr inbounds %struct.isc_buffer, ptr %118, i32 0, i32 6, !dbg !3032
  %prev250 = getelementptr inbounds %struct.anon.6, ptr %link249, i32 0, i32 0, !dbg !3032
  %119 = load ptr, ptr %prev250, align 8, !dbg !3032
  %link251 = getelementptr inbounds %struct.isc_buffer, ptr %119, i32 0, i32 6, !dbg !3032
  %next252 = getelementptr inbounds %struct.anon.6, ptr %link251, i32 0, i32 1, !dbg !3032
  store ptr %117, ptr %next252, align 8, !dbg !3032
  br label %if.end272, !dbg !3032

if.else253:                                       ; preds = %if.end241
  %120 = load ptr, ptr %node.addr, align 8, !dbg !3034
  %buffers254 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %120, i32 0, i32 3, !dbg !3034
  %head255 = getelementptr inbounds %struct.anon.8, ptr %buffers254, i32 0, i32 0, !dbg !3034
  %121 = load ptr, ptr %head255, align 8, !dbg !3034
  %122 = load ptr, ptr %b, align 8, !dbg !3034
  %cmp256 = icmp eq ptr %121, %122, !dbg !3034
  %lnot258 = xor i1 %cmp256, true, !dbg !3034
  %lnot260 = xor i1 %lnot258, true, !dbg !3034
  %lnot.ext261 = zext i1 %lnot260 to i32, !dbg !3034
  %conv262 = sext i32 %lnot.ext261 to i64, !dbg !3034
  %expval263 = call i64 @llvm.expect.i64(i64 %conv262, i64 1), !dbg !3034
  %tobool264 = icmp ne i64 %expval263, 0, !dbg !3034
  br i1 %tobool264, label %lor.end266, label %lor.rhs265, !dbg !3034

lor.rhs265:                                       ; preds = %if.else253
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 515, i32 noundef 2, ptr noundef @.str.32) #12, !dbg !3034
  unreachable, !dbg !3034

123:                                              ; No predecessors!
  br label %lor.end266, !dbg !3034

lor.end266:                                       ; preds = %123, %if.else253
  %124 = phi i1 [ true, %if.else253 ], [ false, %123 ]
  %lor.ext267 = zext i1 %124 to i32, !dbg !3034
  %125 = load ptr, ptr %b, align 8, !dbg !3034
  %link268 = getelementptr inbounds %struct.isc_buffer, ptr %125, i32 0, i32 6, !dbg !3034
  %next269 = getelementptr inbounds %struct.anon.6, ptr %link268, i32 0, i32 1, !dbg !3034
  %126 = load ptr, ptr %next269, align 8, !dbg !3034
  %127 = load ptr, ptr %node.addr, align 8, !dbg !3034
  %buffers270 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %127, i32 0, i32 3, !dbg !3034
  %head271 = getelementptr inbounds %struct.anon.8, ptr %buffers270, i32 0, i32 0, !dbg !3034
  store ptr %126, ptr %head271, align 8, !dbg !3034
  br label %if.end272

if.end272:                                        ; preds = %lor.end266, %if.then246
  %128 = load ptr, ptr %b, align 8, !dbg !3029
  %link273 = getelementptr inbounds %struct.isc_buffer, ptr %128, i32 0, i32 6, !dbg !3029
  %prev274 = getelementptr inbounds %struct.anon.6, ptr %link273, i32 0, i32 0, !dbg !3029
  store ptr inttoptr (i64 -1 to ptr), ptr %prev274, align 8, !dbg !3029
  %129 = load ptr, ptr %b, align 8, !dbg !3029
  %link275 = getelementptr inbounds %struct.isc_buffer, ptr %129, i32 0, i32 6, !dbg !3029
  %next276 = getelementptr inbounds %struct.anon.6, ptr %link275, i32 0, i32 1, !dbg !3029
  store ptr inttoptr (i64 -1 to ptr), ptr %next276, align 8, !dbg !3029
  %130 = load ptr, ptr %node.addr, align 8, !dbg !3029
  %buffers277 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %130, i32 0, i32 3, !dbg !3029
  %head278 = getelementptr inbounds %struct.anon.8, ptr %buffers277, i32 0, i32 0, !dbg !3029
  %131 = load ptr, ptr %head278, align 8, !dbg !3029
  %132 = load ptr, ptr %b, align 8, !dbg !3029
  %cmp279 = icmp ne ptr %131, %132, !dbg !3029
  %lnot281 = xor i1 %cmp279, true, !dbg !3029
  %lnot283 = xor i1 %lnot281, true, !dbg !3029
  %lnot.ext284 = zext i1 %lnot283 to i32, !dbg !3029
  %conv285 = sext i32 %lnot.ext284 to i64, !dbg !3029
  %expval286 = call i64 @llvm.expect.i64(i64 %conv285, i64 1), !dbg !3029
  %tobool287 = icmp ne i64 %expval286, 0, !dbg !3029
  br i1 %tobool287, label %lor.end289, label %lor.rhs288, !dbg !3029

lor.rhs288:                                       ; preds = %if.end272
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 515, i32 noundef 2, ptr noundef @.str.33) #12, !dbg !3029
  unreachable, !dbg !3029

133:                                              ; No predecessors!
  br label %lor.end289, !dbg !3029

lor.end289:                                       ; preds = %133, %if.end272
  %134 = phi i1 [ true, %if.end272 ], [ false, %133 ]
  %lor.ext290 = zext i1 %134 to i32, !dbg !3029
  %135 = load ptr, ptr %node.addr, align 8, !dbg !3029
  %buffers291 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %135, i32 0, i32 3, !dbg !3029
  %tail292 = getelementptr inbounds %struct.anon.8, ptr %buffers291, i32 0, i32 1, !dbg !3029
  %136 = load ptr, ptr %tail292, align 8, !dbg !3029
  %137 = load ptr, ptr %b, align 8, !dbg !3029
  %cmp293 = icmp ne ptr %136, %137, !dbg !3029
  %lnot295 = xor i1 %cmp293, true, !dbg !3029
  %lnot297 = xor i1 %lnot295, true, !dbg !3029
  %lnot.ext298 = zext i1 %lnot297 to i32, !dbg !3029
  %conv299 = sext i32 %lnot.ext298 to i64, !dbg !3029
  %expval300 = call i64 @llvm.expect.i64(i64 %conv299, i64 1), !dbg !3029
  %tobool301 = icmp ne i64 %expval300, 0, !dbg !3029
  br i1 %tobool301, label %lor.end303, label %lor.rhs302, !dbg !3029

lor.rhs302:                                       ; preds = %lor.end289
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 515, i32 noundef 2, ptr noundef @.str.34) #12, !dbg !3029
  unreachable, !dbg !3029

138:                                              ; No predecessors!
  br label %lor.end303, !dbg !3029

lor.end303:                                       ; preds = %138, %lor.end289
  %139 = phi i1 [ true, %lor.end289 ], [ false, %138 ]
  %lor.ext304 = zext i1 %139 to i32, !dbg !3029
  br label %do.cond305, !dbg !3029

do.cond305:                                       ; preds = %lor.end303
  br label %do.end306, !dbg !3029

do.end306:                                        ; preds = %do.cond305
  br label %do.cond307, !dbg !3024

do.cond307:                                       ; preds = %do.end306
  br label %do.end308, !dbg !3024

do.end308:                                        ; preds = %do.cond307
  call void @isc_buffer_free(ptr noundef %b), !dbg !3036
  br label %while.cond200, !dbg !3017, !llvm.loop !3037

while.end309:                                     ; preds = %while.cond200
  %140 = load ptr, ptr %node.addr, align 8, !dbg !3039
  %name = getelementptr inbounds %struct.dns_sdlzlookup, ptr %140, i32 0, i32 4, !dbg !3041
  %141 = load ptr, ptr %name, align 8, !dbg !3041
  %cmp310 = icmp ne ptr %141, null, !dbg !3042
  br i1 %cmp310, label %if.then312, label %if.end319, !dbg !3043

if.then312:                                       ; preds = %while.end309
  %142 = load ptr, ptr %node.addr, align 8, !dbg !3044
  %name313 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %142, i32 0, i32 4, !dbg !3046
  %143 = load ptr, ptr %name313, align 8, !dbg !3046
  %144 = load ptr, ptr %mctx, align 8, !dbg !3047
  call void @dns_name_free(ptr noundef %143, ptr noundef %144), !dbg !3048
  br label %do.body314, !dbg !3049

do.body314:                                       ; preds = %if.then312
  %145 = load ptr, ptr %mctx, align 8, !dbg !3050
  %146 = load ptr, ptr %node.addr, align 8, !dbg !3050
  %name315 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %146, i32 0, i32 4, !dbg !3050
  %147 = load ptr, ptr %name315, align 8, !dbg !3050
  call void @isc__mem_put(ptr noundef %145, ptr noundef %147, i64 noundef 80, ptr noundef @.str, i32 noundef 521), !dbg !3050
  %148 = load ptr, ptr %node.addr, align 8, !dbg !3050
  %name316 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %148, i32 0, i32 4, !dbg !3050
  store ptr null, ptr %name316, align 8, !dbg !3050
  br label %do.cond317, !dbg !3050

do.cond317:                                       ; preds = %do.body314
  br label %do.end318, !dbg !3050

do.end318:                                        ; preds = %do.cond317
  br label %if.end319, !dbg !3052

if.end319:                                        ; preds = %do.end318, %while.end309
  %149 = load ptr, ptr %node.addr, align 8, !dbg !3053
  %lock = getelementptr inbounds %struct.dns_sdlzlookup, ptr %149, i32 0, i32 6, !dbg !3053
  %call = call i32 @pthread_mutex_destroy(ptr noundef %lock) #11, !dbg !3053
  %cmp320 = icmp eq i32 %call, 0, !dbg !3053
  %lnot322 = xor i1 %cmp320, true, !dbg !3053
  %lnot324 = xor i1 %lnot322, true, !dbg !3053
  %lnot.ext325 = zext i1 %lnot324 to i32, !dbg !3053
  %conv326 = sext i32 %lnot.ext325 to i64, !dbg !3053
  %expval327 = call i64 @llvm.expect.i64(i64 %conv326, i64 1), !dbg !3053
  %tobool328 = icmp ne i64 %expval327, 0, !dbg !3053
  br i1 %tobool328, label %lor.end330, label %lor.rhs329, !dbg !3053

lor.rhs329:                                       ; preds = %if.end319
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 523, ptr noundef @.str.35) #12, !dbg !3053
  unreachable, !dbg !3053

150:                                              ; No predecessors!
  br label %lor.end330, !dbg !3053

lor.end330:                                       ; preds = %150, %if.end319
  %151 = phi i1 [ true, %if.end319 ], [ false, %150 ]
  %lor.ext331 = zext i1 %151 to i32, !dbg !3053
  %152 = load ptr, ptr %node.addr, align 8, !dbg !3054
  %magic = getelementptr inbounds %struct.dns_sdlzlookup, ptr %152, i32 0, i32 0, !dbg !3055
  store i32 0, ptr %magic, align 8, !dbg !3056
  br label %do.body332, !dbg !3057

do.body332:                                       ; preds = %lor.end330
  %153 = load ptr, ptr %mctx, align 8, !dbg !3058
  %154 = load ptr, ptr %node.addr, align 8, !dbg !3058
  call void @isc__mem_put(ptr noundef %153, ptr noundef %154, i64 noundef 208, ptr noundef @.str, i32 noundef 525), !dbg !3058
  store ptr null, ptr %node.addr, align 8, !dbg !3058
  br label %do.cond333, !dbg !3058

do.cond333:                                       ; preds = %do.body332
  br label %do.end334, !dbg !3058

do.end334:                                        ; preds = %do.cond333
  %155 = load ptr, ptr %sdlz, align 8, !dbg !3060
  %common335 = getelementptr inbounds %struct.dns_sdlz_db, ptr %155, i32 0, i32 0, !dbg !3061
  store ptr %common335, ptr %db, align 8, !dbg !3062
  call void @detach(ptr noundef %db), !dbg !3063
  call void @llvm.lifetime.end.p0(i64 8, ptr %mctx) #11, !dbg !3064
  call void @llvm.lifetime.end.p0(i64 8, ptr %db) #11, !dbg !3064
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !3064
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #11, !dbg !3064
  call void @llvm.lifetime.end.p0(i64 8, ptr %rdata) #11, !dbg !3064
  call void @llvm.lifetime.end.p0(i64 8, ptr %list) #11, !dbg !3064
  ret void, !dbg !3064
}

; Function Attrs: null_pointer_is_valid
declare !dbg !3065 void @dns_name_init(ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !3068 i32 @dns_name_dup(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define i32 @dns_sdlz_putsoa(ptr noundef %lookup, ptr noundef %mname, ptr noundef %rname, i32 noundef %serial) #0 !dbg !3071 {
entry:
  %retval = alloca i32, align 4
  %lookup.addr = alloca ptr, align 8
  %mname.addr = alloca ptr, align 8
  %rname.addr = alloca ptr, align 8
  %serial.addr = alloca i32, align 4
  %str = alloca [2108 x i8], align 16
  %n = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %lookup, ptr %lookup.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %lookup.addr, metadata !3075, metadata !DIExpression()), !dbg !3084
  store ptr %mname, ptr %mname.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %mname.addr, metadata !3076, metadata !DIExpression()), !dbg !3085
  store ptr %rname, ptr %rname.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %rname.addr, metadata !3077, metadata !DIExpression()), !dbg !3086
  store i32 %serial, ptr %serial.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %serial.addr, metadata !3078, metadata !DIExpression()), !dbg !3087
  call void @llvm.lifetime.start.p0(i64 2108, ptr %str) #11, !dbg !3088
  tail call void @llvm.dbg.declare(metadata ptr %str, metadata !3079, metadata !DIExpression()), !dbg !3089
  call void @llvm.lifetime.start.p0(i64 4, ptr %n) #11, !dbg !3090
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !3083, metadata !DIExpression()), !dbg !3091
  %0 = load ptr, ptr %mname.addr, align 8, !dbg !3092
  %cmp = icmp ne ptr %0, null, !dbg !3092
  %lnot = xor i1 %cmp, true, !dbg !3092
  %lnot1 = xor i1 %lnot, true, !dbg !3092
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3092
  %conv = sext i32 %lnot.ext to i64, !dbg !3092
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3092
  %tobool = icmp ne i64 %expval, 0, !dbg !3092
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3092

lor.rhs:                                          ; preds = %entry
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 2025, i32 noundef 0, ptr noundef @.str.4) #12, !dbg !3092
  unreachable, !dbg !3092

1:                                                ; No predecessors!
  br label %lor.end, !dbg !3092

lor.end:                                          ; preds = %1, %entry
  %2 = phi i1 [ true, %entry ], [ false, %1 ]
  %lor.ext = zext i1 %2 to i32, !dbg !3092
  %3 = load ptr, ptr %rname.addr, align 8, !dbg !3093
  %cmp2 = icmp ne ptr %3, null, !dbg !3093
  %lnot4 = xor i1 %cmp2, true, !dbg !3093
  %lnot6 = xor i1 %lnot4, true, !dbg !3093
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !3093
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !3093
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 1), !dbg !3093
  %tobool10 = icmp ne i64 %expval9, 0, !dbg !3093
  br i1 %tobool10, label %lor.end12, label %lor.rhs11, !dbg !3093

lor.rhs11:                                        ; preds = %lor.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 2026, i32 noundef 0, ptr noundef @.str.5) #12, !dbg !3093
  unreachable, !dbg !3093

4:                                                ; No predecessors!
  br label %lor.end12, !dbg !3093

lor.end12:                                        ; preds = %4, %lor.end
  %5 = phi i1 [ true, %lor.end ], [ false, %4 ]
  %lor.ext13 = zext i1 %5 to i32, !dbg !3093
  %arraydecay = getelementptr inbounds [2108 x i8], ptr %str, i64 0, i64 0, !dbg !3094
  %6 = load ptr, ptr %mname.addr, align 8, !dbg !3095
  %7 = load ptr, ptr %rname.addr, align 8, !dbg !3096
  %8 = load i32, ptr %serial.addr, align 4, !dbg !3097
  %call = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay, i64 noundef 2108, ptr noundef @.str.6, ptr noundef %6, ptr noundef %7, i32 noundef %8, i32 noundef 28800, i32 noundef 7200, i32 noundef 604800, i32 noundef 86400) #11, !dbg !3098
  store i32 %call, ptr %n, align 4, !dbg !3099
  %9 = load i32, ptr %n, align 4, !dbg !3100
  %cmp14 = icmp sge i32 %9, 2108, !dbg !3102
  br i1 %cmp14, label %if.then, label %lor.lhs.false, !dbg !3103

lor.lhs.false:                                    ; preds = %lor.end12
  %10 = load i32, ptr %n, align 4, !dbg !3104
  %cmp16 = icmp slt i32 %10, 0, !dbg !3105
  br i1 %cmp16, label %if.then, label %if.end, !dbg !3106

if.then:                                          ; preds = %lor.lhs.false, %lor.end12
  store i32 19, ptr %retval, align 4, !dbg !3107
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3107

if.end:                                           ; preds = %lor.lhs.false
  %11 = load ptr, ptr %lookup.addr, align 8, !dbg !3108
  %arraydecay18 = getelementptr inbounds [2108 x i8], ptr %str, i64 0, i64 0, !dbg !3109
  %call19 = call i32 @dns_sdlz_putrr(ptr noundef %11, ptr noundef @.str.7, i32 noundef 86400, ptr noundef %arraydecay18), !dbg !3110
  store i32 %call19, ptr %retval, align 4, !dbg !3111
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3111

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %n) #11, !dbg !3112
  call void @llvm.lifetime.end.p0(i64 2108, ptr %str) #11, !dbg !3112
  %12 = load i32, ptr %retval, align 4, !dbg !3112
  ret i32 %12, !dbg !3112
}

; Function Attrs: nounwind null_pointer_is_valid
declare !dbg !3113 i32 @snprintf(ptr noundef, i64 noundef, ptr noundef, ...) #7

; Function Attrs: nounwind null_pointer_is_valid uwtable
define i32 @dns_sdlzregister(ptr noundef %drivername, ptr noundef %methods, ptr noundef %driverarg, i32 noundef %flags, ptr noundef %mctx, ptr noundef %sdlzimp) #0 !dbg !3119 {
entry:
  %retval = alloca i32, align 4
  %drivername.addr = alloca ptr, align 8
  %methods.addr = alloca ptr, align 8
  %driverarg.addr = alloca ptr, align 8
  %flags.addr = alloca i32, align 4
  %mctx.addr = alloca ptr, align 8
  %sdlzimp.addr = alloca ptr, align 8
  %imp = alloca ptr, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %drivername, ptr %drivername.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %drivername.addr, metadata !3124, metadata !DIExpression()), !dbg !3133
  store ptr %methods, ptr %methods.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %methods.addr, metadata !3125, metadata !DIExpression()), !dbg !3134
  store ptr %driverarg, ptr %driverarg.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %driverarg.addr, metadata !3126, metadata !DIExpression()), !dbg !3135
  store i32 %flags, ptr %flags.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !3127, metadata !DIExpression()), !dbg !3136
  store ptr %mctx, ptr %mctx.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %mctx.addr, metadata !3128, metadata !DIExpression()), !dbg !3137
  store ptr %sdlzimp, ptr %sdlzimp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %sdlzimp.addr, metadata !3129, metadata !DIExpression()), !dbg !3138
  call void @llvm.lifetime.start.p0(i64 8, ptr %imp) #11, !dbg !3139
  tail call void @llvm.dbg.declare(metadata ptr %imp, metadata !3130, metadata !DIExpression()), !dbg !3140
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !3141
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !3131, metadata !DIExpression()), !dbg !3142
  %0 = load ptr, ptr %drivername.addr, align 8, !dbg !3143
  %cmp = icmp ne ptr %0, null, !dbg !3143
  %lnot = xor i1 %cmp, true, !dbg !3143
  %lnot1 = xor i1 %lnot, true, !dbg !3143
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3143
  %conv = sext i32 %lnot.ext to i64, !dbg !3143
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3143
  %tobool = icmp ne i64 %expval, 0, !dbg !3143
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3143

lor.rhs:                                          ; preds = %entry
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 2049, i32 noundef 0, ptr noundef @.str.8) #12, !dbg !3143
  unreachable, !dbg !3143

1:                                                ; No predecessors!
  br label %lor.end, !dbg !3143

lor.end:                                          ; preds = %1, %entry
  %2 = phi i1 [ true, %entry ], [ false, %1 ]
  %lor.ext = zext i1 %2 to i32, !dbg !3143
  %3 = load ptr, ptr %methods.addr, align 8, !dbg !3144
  %cmp2 = icmp ne ptr %3, null, !dbg !3144
  %lnot4 = xor i1 %cmp2, true, !dbg !3144
  %lnot6 = xor i1 %lnot4, true, !dbg !3144
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !3144
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !3144
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 1), !dbg !3144
  %tobool10 = icmp ne i64 %expval9, 0, !dbg !3144
  br i1 %tobool10, label %lor.end12, label %lor.rhs11, !dbg !3144

lor.rhs11:                                        ; preds = %lor.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 2050, i32 noundef 0, ptr noundef @.str.9) #12, !dbg !3144
  unreachable, !dbg !3144

4:                                                ; No predecessors!
  br label %lor.end12, !dbg !3144

lor.end12:                                        ; preds = %4, %lor.end
  %5 = phi i1 [ true, %lor.end ], [ false, %4 ]
  %lor.ext13 = zext i1 %5 to i32, !dbg !3144
  %6 = load ptr, ptr %methods.addr, align 8, !dbg !3145
  %findzone = getelementptr inbounds %struct.dns_sdlzmethods, ptr %6, i32 0, i32 2, !dbg !3145
  %7 = load ptr, ptr %findzone, align 8, !dbg !3145
  %cmp14 = icmp ne ptr %7, null, !dbg !3145
  %lnot16 = xor i1 %cmp14, true, !dbg !3145
  %lnot18 = xor i1 %lnot16, true, !dbg !3145
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !3145
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !3145
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 1), !dbg !3145
  %tobool22 = icmp ne i64 %expval21, 0, !dbg !3145
  br i1 %tobool22, label %lor.end24, label %lor.rhs23, !dbg !3145

lor.rhs23:                                        ; preds = %lor.end12
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 2051, i32 noundef 0, ptr noundef @.str.10) #12, !dbg !3145
  unreachable, !dbg !3145

8:                                                ; No predecessors!
  br label %lor.end24, !dbg !3145

lor.end24:                                        ; preds = %8, %lor.end12
  %9 = phi i1 [ true, %lor.end12 ], [ false, %8 ]
  %lor.ext25 = zext i1 %9 to i32, !dbg !3145
  %10 = load ptr, ptr %methods.addr, align 8, !dbg !3146
  %lookup = getelementptr inbounds %struct.dns_sdlzmethods, ptr %10, i32 0, i32 3, !dbg !3146
  %11 = load ptr, ptr %lookup, align 8, !dbg !3146
  %cmp26 = icmp ne ptr %11, null, !dbg !3146
  %lnot28 = xor i1 %cmp26, true, !dbg !3146
  %lnot30 = xor i1 %lnot28, true, !dbg !3146
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !3146
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !3146
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 1), !dbg !3146
  %tobool34 = icmp ne i64 %expval33, 0, !dbg !3146
  br i1 %tobool34, label %lor.end36, label %lor.rhs35, !dbg !3146

lor.rhs35:                                        ; preds = %lor.end24
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 2052, i32 noundef 0, ptr noundef @.str.11) #12, !dbg !3146
  unreachable, !dbg !3146

12:                                               ; No predecessors!
  br label %lor.end36, !dbg !3146

lor.end36:                                        ; preds = %12, %lor.end24
  %13 = phi i1 [ true, %lor.end24 ], [ false, %12 ]
  %lor.ext37 = zext i1 %13 to i32, !dbg !3146
  %14 = load ptr, ptr %mctx.addr, align 8, !dbg !3147
  %cmp38 = icmp ne ptr %14, null, !dbg !3147
  %lnot40 = xor i1 %cmp38, true, !dbg !3147
  %lnot42 = xor i1 %lnot40, true, !dbg !3147
  %lnot.ext43 = zext i1 %lnot42 to i32, !dbg !3147
  %conv44 = sext i32 %lnot.ext43 to i64, !dbg !3147
  %expval45 = call i64 @llvm.expect.i64(i64 %conv44, i64 1), !dbg !3147
  %tobool46 = icmp ne i64 %expval45, 0, !dbg !3147
  br i1 %tobool46, label %lor.end48, label %lor.rhs47, !dbg !3147

lor.rhs47:                                        ; preds = %lor.end36
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 2053, i32 noundef 0, ptr noundef @.str.12) #12, !dbg !3147
  unreachable, !dbg !3147

15:                                               ; No predecessors!
  br label %lor.end48, !dbg !3147

lor.end48:                                        ; preds = %15, %lor.end36
  %16 = phi i1 [ true, %lor.end36 ], [ false, %15 ]
  %lor.ext49 = zext i1 %16 to i32, !dbg !3147
  %17 = load ptr, ptr %sdlzimp.addr, align 8, !dbg !3148
  %cmp50 = icmp ne ptr %17, null, !dbg !3148
  br i1 %cmp50, label %land.rhs, label %land.end, !dbg !3148

land.rhs:                                         ; preds = %lor.end48
  %18 = load ptr, ptr %sdlzimp.addr, align 8, !dbg !3148
  %19 = load ptr, ptr %18, align 8, !dbg !3148
  %cmp52 = icmp eq ptr %19, null, !dbg !3148
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end48
  %20 = phi i1 [ false, %lor.end48 ], [ %cmp52, %land.rhs ], !dbg !3149
  %lnot54 = xor i1 %20, true, !dbg !3148
  %lnot56 = xor i1 %lnot54, true, !dbg !3148
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !3148
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !3148
  %expval59 = call i64 @llvm.expect.i64(i64 %conv58, i64 1), !dbg !3148
  %tobool60 = icmp ne i64 %expval59, 0, !dbg !3148
  br i1 %tobool60, label %lor.end62, label %lor.rhs61, !dbg !3148

lor.rhs61:                                        ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 2054, i32 noundef 0, ptr noundef @.str.13) #12, !dbg !3148
  unreachable, !dbg !3148

21:                                               ; No predecessors!
  br label %lor.end62, !dbg !3148

lor.end62:                                        ; preds = %21, %land.end
  %22 = phi i1 [ true, %land.end ], [ false, %21 ]
  %lor.ext63 = zext i1 %22 to i32, !dbg !3148
  %23 = load i32, ptr %flags.addr, align 4, !dbg !3150
  %and = and i32 %23, -8, !dbg !3150
  %cmp64 = icmp eq i32 %and, 0, !dbg !3150
  %lnot66 = xor i1 %cmp64, true, !dbg !3150
  %lnot68 = xor i1 %lnot66, true, !dbg !3150
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !3150
  %conv70 = sext i32 %lnot.ext69 to i64, !dbg !3150
  %expval71 = call i64 @llvm.expect.i64(i64 %conv70, i64 1), !dbg !3150
  %tobool72 = icmp ne i64 %expval71, 0, !dbg !3150
  br i1 %tobool72, label %lor.end74, label %lor.rhs73, !dbg !3150

lor.rhs73:                                        ; preds = %lor.end62
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 2057, i32 noundef 0, ptr noundef @.str.14) #12, !dbg !3150
  unreachable, !dbg !3150

24:                                               ; No predecessors!
  br label %lor.end74, !dbg !3150

lor.end74:                                        ; preds = %24, %lor.end62
  %25 = phi i1 [ true, %lor.end62 ], [ false, %24 ]
  %lor.ext75 = zext i1 %25 to i32, !dbg !3150
  %26 = load ptr, ptr %drivername.addr, align 8, !dbg !3151
  call void (i32, ptr, ...) @sdlz_log(i32 noundef 2, ptr noundef @.str.15, ptr noundef %26), !dbg !3152
  %27 = load ptr, ptr %mctx.addr, align 8, !dbg !3153
  %call = call ptr @isc__mem_get(ptr noundef %27, i64 noundef 80, ptr noundef @.str, i32 noundef 2066), !dbg !3153
  store ptr %call, ptr %imp, align 8, !dbg !3154
  %28 = load ptr, ptr %imp, align 8, !dbg !3155
  %cmp76 = icmp eq ptr %28, null, !dbg !3157
  br i1 %cmp76, label %if.then, label %if.end, !dbg !3158

if.then:                                          ; preds = %lor.end74
  store i32 1, ptr %retval, align 4, !dbg !3159
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3159

if.end:                                           ; preds = %lor.end74
  %29 = load ptr, ptr %imp, align 8, !dbg !3160
  call void @llvm.memset.p0.i64(ptr align 8 %29, i8 0, i64 80, i1 false), !dbg !3161
  %30 = load ptr, ptr %methods.addr, align 8, !dbg !3162
  %31 = load ptr, ptr %imp, align 8, !dbg !3163
  %methods78 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %31, i32 0, i32 0, !dbg !3164
  store ptr %30, ptr %methods78, align 8, !dbg !3165
  %32 = load ptr, ptr %driverarg.addr, align 8, !dbg !3166
  %33 = load ptr, ptr %imp, align 8, !dbg !3167
  %driverarg79 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %33, i32 0, i32 2, !dbg !3168
  store ptr %32, ptr %driverarg79, align 8, !dbg !3169
  %34 = load i32, ptr %flags.addr, align 4, !dbg !3170
  %35 = load ptr, ptr %imp, align 8, !dbg !3171
  %flags80 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %35, i32 0, i32 3, !dbg !3172
  store i32 %34, ptr %flags80, align 8, !dbg !3173
  %36 = load ptr, ptr %imp, align 8, !dbg !3174
  %mctx81 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %36, i32 0, i32 1, !dbg !3175
  store ptr null, ptr %mctx81, align 8, !dbg !3176
  %37 = load ptr, ptr %mctx.addr, align 8, !dbg !3177
  %38 = load ptr, ptr %imp, align 8, !dbg !3178
  %mctx82 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %38, i32 0, i32 1, !dbg !3179
  call void @isc_mem_attach(ptr noundef %37, ptr noundef %mctx82), !dbg !3180
  %39 = load ptr, ptr %imp, align 8, !dbg !3181
  %driverlock = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %39, i32 0, i32 4, !dbg !3181
  call void @isc__mutex_init(ptr noundef %driverlock, ptr noundef @.str, i32 noundef 2086), !dbg !3181
  %40 = load ptr, ptr %imp, align 8, !dbg !3182
  %dlz_imp = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %40, i32 0, i32 5, !dbg !3183
  store ptr null, ptr %dlz_imp, align 8, !dbg !3184
  %41 = load ptr, ptr %drivername.addr, align 8, !dbg !3185
  %42 = load ptr, ptr %imp, align 8, !dbg !3186
  %43 = load ptr, ptr %mctx.addr, align 8, !dbg !3187
  %44 = load ptr, ptr %imp, align 8, !dbg !3188
  %dlz_imp83 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %44, i32 0, i32 5, !dbg !3189
  %call84 = call i32 @dns_dlzregister(ptr noundef %41, ptr noundef @sdlzmethods, ptr noundef %42, ptr noundef %43, ptr noundef %dlz_imp83), !dbg !3190
  store i32 %call84, ptr %result, align 4, !dbg !3191
  %45 = load i32, ptr %result, align 4, !dbg !3192
  %cmp85 = icmp ne i32 %45, 0, !dbg !3194
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !3195

if.then87:                                        ; preds = %if.end
  br label %cleanup_mutex, !dbg !3196

if.end88:                                         ; preds = %if.end
  %46 = load ptr, ptr %imp, align 8, !dbg !3197
  %47 = load ptr, ptr %sdlzimp.addr, align 8, !dbg !3198
  store ptr %46, ptr %47, align 8, !dbg !3199
  store i32 0, ptr %retval, align 4, !dbg !3200
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3200

cleanup_mutex:                                    ; preds = %if.then87
  tail call void @llvm.dbg.label(metadata !3132), !dbg !3201
  %48 = load ptr, ptr %imp, align 8, !dbg !3202
  %driverlock89 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %48, i32 0, i32 4, !dbg !3202
  %call90 = call i32 @pthread_mutex_destroy(ptr noundef %driverlock89) #11, !dbg !3202
  %cmp91 = icmp eq i32 %call90, 0, !dbg !3202
  %lnot93 = xor i1 %cmp91, true, !dbg !3202
  %lnot95 = xor i1 %lnot93, true, !dbg !3202
  %lnot.ext96 = zext i1 %lnot95 to i32, !dbg !3202
  %conv97 = sext i32 %lnot.ext96 to i64, !dbg !3202
  %expval98 = call i64 @llvm.expect.i64(i64 %conv97, i64 1), !dbg !3202
  %tobool99 = icmp ne i64 %expval98, 0, !dbg !3202
  br i1 %tobool99, label %lor.end101, label %lor.rhs100, !dbg !3202

lor.rhs100:                                       ; preds = %cleanup_mutex
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 2109, ptr noundef @.str.16) #12, !dbg !3202
  unreachable, !dbg !3202

49:                                               ; No predecessors!
  br label %lor.end101, !dbg !3202

lor.end101:                                       ; preds = %49, %cleanup_mutex
  %50 = phi i1 [ true, %cleanup_mutex ], [ false, %49 ]
  %lor.ext102 = zext i1 %50 to i32, !dbg !3202
  br label %do.body, !dbg !3203

do.body:                                          ; preds = %lor.end101
  %51 = load ptr, ptr %mctx.addr, align 8, !dbg !3204
  %52 = load ptr, ptr %imp, align 8, !dbg !3204
  call void @isc__mem_put(ptr noundef %51, ptr noundef %52, i64 noundef 80, ptr noundef @.str, i32 noundef 2115), !dbg !3204
  store ptr null, ptr %imp, align 8, !dbg !3204
  br label %do.cond, !dbg !3204

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !3204

do.end:                                           ; preds = %do.cond
  call void @isc_mem_detach(ptr noundef %mctx.addr), !dbg !3206
  %53 = load i32, ptr %result, align 4, !dbg !3207
  store i32 %53, ptr %retval, align 4, !dbg !3208
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3208

cleanup:                                          ; preds = %do.end, %if.end88, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !3209
  call void @llvm.lifetime.end.p0(i64 8, ptr %imp) #11, !dbg !3209
  %54 = load i32, ptr %retval, align 4, !dbg !3209
  ret i32 %54, !dbg !3209
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @sdlz_log(i32 noundef %level, ptr noundef %fmt, ...) #0 !dbg !3210 {
entry:
  %level.addr = alloca i32, align 4
  %fmt.addr = alloca ptr, align 8
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  store i32 %level, ptr %level.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %level.addr, metadata !3214, metadata !DIExpression()), !dbg !3227
  store ptr %fmt, ptr %fmt.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %fmt.addr, metadata !3215, metadata !DIExpression()), !dbg !3228
  call void @llvm.lifetime.start.p0(i64 24, ptr %ap) #11, !dbg !3229
  tail call void @llvm.dbg.declare(metadata ptr %ap, metadata !3216, metadata !DIExpression()), !dbg !3230
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %ap, i64 0, i64 0, !dbg !3231
  call void @llvm.va_start.p0(ptr %arraydecay), !dbg !3231
  %0 = load ptr, ptr @dns_lctx, align 8, !dbg !3232
  %1 = load i32, ptr %level.addr, align 4, !dbg !3233
  %2 = load ptr, ptr %fmt.addr, align 8, !dbg !3234
  %arraydecay1 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %ap, i64 0, i64 0, !dbg !3235
  call void @isc_log_vwrite(ptr noundef %0, ptr noundef getelementptr inbounds ([0 x %struct.isc_logcategory], ptr @dns_categories, i64 0, i64 1), ptr noundef getelementptr inbounds ([0 x %struct.isc_logmodule], ptr @dns_modules, i64 0, i64 25), i32 noundef %1, ptr noundef %2, ptr noundef %arraydecay1), !dbg !3236
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %ap, i64 0, i64 0, !dbg !3237
  call void @llvm.va_end.p0(ptr %arraydecay2), !dbg !3237
  call void @llvm.lifetime.end.p0(i64 24, ptr %ap) #11, !dbg !3238
  ret void, !dbg !3238
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: null_pointer_is_valid
declare !dbg !3239 void @isc_mem_attach(ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !3242 void @isc__mutex_init(ptr noundef, ptr noundef, i32 noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !3246 i32 @dns_dlzregister(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid
declare !dbg !3250 i32 @pthread_mutex_destroy(ptr noundef) #7

; Function Attrs: noreturn null_pointer_is_valid
declare !dbg !3255 void @isc_error_runtimecheck(ptr noundef, i32 noundef, ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare !dbg !3259 void @isc_mem_detach(ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define void @dns_sdlzunregister(ptr noundef %sdlzimp) #0 !dbg !3262 {
entry:
  %sdlzimp.addr = alloca ptr, align 8
  %imp = alloca ptr, align 8
  %mctx = alloca ptr, align 8
  store ptr %sdlzimp, ptr %sdlzimp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %sdlzimp.addr, metadata !3266, metadata !DIExpression()), !dbg !3269
  call void @llvm.lifetime.start.p0(i64 8, ptr %imp) #11, !dbg !3270
  tail call void @llvm.dbg.declare(metadata ptr %imp, metadata !3267, metadata !DIExpression()), !dbg !3271
  call void @llvm.lifetime.start.p0(i64 8, ptr %mctx) #11, !dbg !3272
  tail call void @llvm.dbg.declare(metadata ptr %mctx, metadata !3268, metadata !DIExpression()), !dbg !3273
  call void (i32, ptr, ...) @sdlz_log(i32 noundef 2, ptr noundef @.str.17), !dbg !3274
  %0 = load ptr, ptr %sdlzimp.addr, align 8, !dbg !3275
  %cmp = icmp ne ptr %0, null, !dbg !3275
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3275

land.rhs:                                         ; preds = %entry
  %1 = load ptr, ptr %sdlzimp.addr, align 8, !dbg !3275
  %2 = load ptr, ptr %1, align 8, !dbg !3275
  %cmp1 = icmp ne ptr %2, null, !dbg !3275
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !3276
  %lnot = xor i1 %3, true, !dbg !3275
  %lnot2 = xor i1 %lnot, true, !dbg !3275
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !3275
  %conv = sext i32 %lnot.ext to i64, !dbg !3275
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3275
  %tobool = icmp ne i64 %expval, 0, !dbg !3275
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3275

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 2131, i32 noundef 0, ptr noundef @.str.18) #12, !dbg !3275
  unreachable, !dbg !3275

4:                                                ; No predecessors!
  br label %lor.end, !dbg !3275

lor.end:                                          ; preds = %4, %land.end
  %5 = phi i1 [ true, %land.end ], [ false, %4 ]
  %lor.ext = zext i1 %5 to i32, !dbg !3275
  %6 = load ptr, ptr %sdlzimp.addr, align 8, !dbg !3277
  %7 = load ptr, ptr %6, align 8, !dbg !3278
  store ptr %7, ptr %imp, align 8, !dbg !3279
  %8 = load ptr, ptr %imp, align 8, !dbg !3280
  %dlz_imp = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %8, i32 0, i32 5, !dbg !3281
  call void @dns_dlzunregister(ptr noundef %dlz_imp), !dbg !3282
  %9 = load ptr, ptr %imp, align 8, !dbg !3283
  %driverlock = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %9, i32 0, i32 4, !dbg !3283
  %call = call i32 @pthread_mutex_destroy(ptr noundef %driverlock) #11, !dbg !3283
  %cmp3 = icmp eq i32 %call, 0, !dbg !3283
  %lnot5 = xor i1 %cmp3, true, !dbg !3283
  %lnot7 = xor i1 %lnot5, true, !dbg !3283
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !3283
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !3283
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !3283
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !3283
  br i1 %tobool11, label %lor.end13, label %lor.rhs12, !dbg !3283

lor.rhs12:                                        ; preds = %lor.end
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 2139, ptr noundef @.str.16) #12, !dbg !3283
  unreachable, !dbg !3283

10:                                               ; No predecessors!
  br label %lor.end13, !dbg !3283

lor.end13:                                        ; preds = %10, %lor.end
  %11 = phi i1 [ true, %lor.end ], [ false, %10 ]
  %lor.ext14 = zext i1 %11 to i32, !dbg !3283
  %12 = load ptr, ptr %imp, align 8, !dbg !3284
  %mctx15 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %12, i32 0, i32 1, !dbg !3285
  %13 = load ptr, ptr %mctx15, align 8, !dbg !3285
  store ptr %13, ptr %mctx, align 8, !dbg !3286
  br label %do.body, !dbg !3287

do.body:                                          ; preds = %lor.end13
  %14 = load ptr, ptr %mctx, align 8, !dbg !3288
  %15 = load ptr, ptr %imp, align 8, !dbg !3288
  call void @isc__mem_put(ptr noundef %14, ptr noundef %15, i64 noundef 80, ptr noundef @.str, i32 noundef 2147), !dbg !3288
  store ptr null, ptr %imp, align 8, !dbg !3288
  br label %do.cond, !dbg !3288

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !3288

do.end:                                           ; preds = %do.cond
  call void @isc_mem_detach(ptr noundef %mctx), !dbg !3290
  %16 = load ptr, ptr %sdlzimp.addr, align 8, !dbg !3291
  store ptr null, ptr %16, align 8, !dbg !3292
  call void @llvm.lifetime.end.p0(i64 8, ptr %mctx) #11, !dbg !3293
  call void @llvm.lifetime.end.p0(i64 8, ptr %imp) #11, !dbg !3293
  ret void, !dbg !3293
}

; Function Attrs: null_pointer_is_valid
declare !dbg !3294 void @dns_dlzunregister(ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define i32 @dns_sdlz_setdb(ptr noundef %dlzdatabase, i16 noundef zeroext %rdclass, ptr noundef %name, ptr noundef %dbp) #0 !dbg !3297 {
entry:
  %dlzdatabase.addr = alloca ptr, align 8
  %rdclass.addr = alloca i16, align 2
  %name.addr = alloca ptr, align 8
  %dbp.addr = alloca ptr, align 8
  %result = alloca i32, align 4
  store ptr %dlzdatabase, ptr %dlzdatabase.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dlzdatabase.addr, metadata !3301, metadata !DIExpression()), !dbg !3306
  store i16 %rdclass, ptr %rdclass.addr, align 2
  tail call void @llvm.dbg.declare(metadata ptr %rdclass.addr, metadata !3302, metadata !DIExpression()), !dbg !3307
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !3303, metadata !DIExpression()), !dbg !3308
  store ptr %dbp, ptr %dbp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dbp.addr, metadata !3304, metadata !DIExpression()), !dbg !3309
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !3310
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !3305, metadata !DIExpression()), !dbg !3311
  %0 = load ptr, ptr %dlzdatabase.addr, align 8, !dbg !3312
  %mctx = getelementptr inbounds %struct.dns_dlzdb, ptr %0, i32 0, i32 1, !dbg !3313
  %1 = load ptr, ptr %mctx, align 8, !dbg !3313
  %2 = load ptr, ptr %dlzdatabase.addr, align 8, !dbg !3314
  %implementation = getelementptr inbounds %struct.dns_dlzdb, ptr %2, i32 0, i32 2, !dbg !3315
  %3 = load ptr, ptr %implementation, align 8, !dbg !3315
  %driverarg = getelementptr inbounds %struct.dns_dlzimplementation, ptr %3, i32 0, i32 3, !dbg !3316
  %4 = load ptr, ptr %driverarg, align 8, !dbg !3316
  %5 = load ptr, ptr %dlzdatabase.addr, align 8, !dbg !3317
  %dbdata = getelementptr inbounds %struct.dns_dlzdb, ptr %5, i32 0, i32 3, !dbg !3318
  %6 = load ptr, ptr %dbdata, align 8, !dbg !3318
  %7 = load ptr, ptr %name.addr, align 8, !dbg !3319
  %8 = load i16, ptr %rdclass.addr, align 2, !dbg !3320
  %9 = load ptr, ptr %dbp.addr, align 8, !dbg !3321
  %call = call i32 @dns_sdlzcreateDBP(ptr noundef %1, ptr noundef %4, ptr noundef %6, ptr noundef %7, i16 noundef zeroext %8, ptr noundef %9), !dbg !3322
  store i32 %call, ptr %result, align 4, !dbg !3323
  %10 = load i32, ptr %result, align 4, !dbg !3324
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !3325
  ret i32 %10, !dbg !3326
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dns_sdlzcreateDBP(ptr noundef %mctx, ptr noundef %driverarg, ptr noundef %dbdata, ptr noundef %name, i16 noundef zeroext %rdclass, ptr noundef %dbp) #0 !dbg !3327 {
entry:
  %retval = alloca i32, align 4
  %mctx.addr = alloca ptr, align 8
  %driverarg.addr = alloca ptr, align 8
  %dbdata.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %rdclass.addr = alloca i16, align 2
  %dbp.addr = alloca ptr, align 8
  %result = alloca i32, align 4
  %sdlzdb = alloca ptr, align 8
  %imp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %mctx, ptr %mctx.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %mctx.addr, metadata !3331, metadata !DIExpression()), !dbg !3341
  store ptr %driverarg, ptr %driverarg.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %driverarg.addr, metadata !3332, metadata !DIExpression()), !dbg !3342
  store ptr %dbdata, ptr %dbdata.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dbdata.addr, metadata !3333, metadata !DIExpression()), !dbg !3343
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !3334, metadata !DIExpression()), !dbg !3344
  store i16 %rdclass, ptr %rdclass.addr, align 2
  tail call void @llvm.dbg.declare(metadata ptr %rdclass.addr, metadata !3335, metadata !DIExpression()), !dbg !3345
  store ptr %dbp, ptr %dbp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dbp.addr, metadata !3336, metadata !DIExpression()), !dbg !3346
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !3347
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !3337, metadata !DIExpression()), !dbg !3348
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlzdb) #11, !dbg !3349
  tail call void @llvm.dbg.declare(metadata ptr %sdlzdb, metadata !3338, metadata !DIExpression()), !dbg !3350
  call void @llvm.lifetime.start.p0(i64 8, ptr %imp) #11, !dbg !3351
  tail call void @llvm.dbg.declare(metadata ptr %imp, metadata !3339, metadata !DIExpression()), !dbg !3352
  %0 = load ptr, ptr %dbp.addr, align 8, !dbg !3353
  %cmp = icmp ne ptr %0, null, !dbg !3353
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3353

land.rhs:                                         ; preds = %entry
  %1 = load ptr, ptr %dbp.addr, align 8, !dbg !3353
  %2 = load ptr, ptr %1, align 8, !dbg !3353
  %cmp1 = icmp eq ptr %2, null, !dbg !3353
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !3354
  %lnot = xor i1 %3, true, !dbg !3353
  %lnot2 = xor i1 %lnot, true, !dbg !3353
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !3353
  %conv = sext i32 %lnot.ext to i64, !dbg !3353
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3353
  %tobool = icmp ne i64 %expval, 0, !dbg !3353
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3353

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1531, i32 noundef 0, ptr noundef @.str.47) #12, !dbg !3353
  unreachable, !dbg !3353

4:                                                ; No predecessors!
  br label %lor.end, !dbg !3353

lor.end:                                          ; preds = %4, %land.end
  %5 = phi i1 [ true, %land.end ], [ false, %4 ]
  %lor.ext = zext i1 %5 to i32, !dbg !3353
  %6 = load ptr, ptr %name.addr, align 8, !dbg !3355
  %cmp3 = icmp ne ptr %6, null, !dbg !3355
  %lnot5 = xor i1 %cmp3, true, !dbg !3355
  %lnot7 = xor i1 %lnot5, true, !dbg !3355
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !3355
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !3355
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !3355
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !3355
  br i1 %tobool11, label %lor.end13, label %lor.rhs12, !dbg !3355

lor.rhs12:                                        ; preds = %lor.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1532, i32 noundef 0, ptr noundef @.str.46) #12, !dbg !3355
  unreachable, !dbg !3355

7:                                                ; No predecessors!
  br label %lor.end13, !dbg !3355

lor.end13:                                        ; preds = %7, %lor.end
  %8 = phi i1 [ true, %lor.end ], [ false, %7 ]
  %lor.ext14 = zext i1 %8 to i32, !dbg !3355
  %9 = load ptr, ptr %driverarg.addr, align 8, !dbg !3356
  store ptr %9, ptr %imp, align 8, !dbg !3357
  %10 = load ptr, ptr %mctx.addr, align 8, !dbg !3358
  %call = call ptr @isc__mem_get(ptr noundef %10, i64 noundef 208, ptr noundef @.str, i32 noundef 1537), !dbg !3358
  store ptr %call, ptr %sdlzdb, align 8, !dbg !3359
  %11 = load ptr, ptr %sdlzdb, align 8, !dbg !3360
  %cmp15 = icmp eq ptr %11, null, !dbg !3362
  br i1 %cmp15, label %if.then, label %if.end, !dbg !3363

if.then:                                          ; preds = %lor.end13
  store i32 1, ptr %retval, align 4, !dbg !3364
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3364

if.end:                                           ; preds = %lor.end13
  %12 = load ptr, ptr %sdlzdb, align 8, !dbg !3365
  call void @llvm.memset.p0.i64(ptr align 8 %12, i8 0, i64 208, i1 false), !dbg !3366
  %13 = load ptr, ptr %sdlzdb, align 8, !dbg !3367
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %13, i32 0, i32 0, !dbg !3368
  %origin = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 5, !dbg !3369
  call void @dns_name_init(ptr noundef %origin, ptr noundef null), !dbg !3370
  %14 = load ptr, ptr %name.addr, align 8, !dbg !3371
  %15 = load ptr, ptr %mctx.addr, align 8, !dbg !3372
  %16 = load ptr, ptr %sdlzdb, align 8, !dbg !3373
  %common17 = getelementptr inbounds %struct.dns_sdlz_db, ptr %16, i32 0, i32 0, !dbg !3374
  %origin18 = getelementptr inbounds %struct.dns_db, ptr %common17, i32 0, i32 5, !dbg !3375
  %call19 = call i32 @dns_name_dupwithoffsets(ptr noundef %14, ptr noundef %15, ptr noundef %origin18), !dbg !3376
  store i32 %call19, ptr %result, align 4, !dbg !3377
  %17 = load i32, ptr %result, align 4, !dbg !3378
  %cmp20 = icmp ne i32 %17, 0, !dbg !3380
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !3381

if.then22:                                        ; preds = %if.end
  br label %mem_cleanup, !dbg !3382

if.end23:                                         ; preds = %if.end
  %18 = load ptr, ptr %sdlzdb, align 8, !dbg !3383
  %refcnt_lock = getelementptr inbounds %struct.dns_sdlz_db, ptr %18, i32 0, i32 3, !dbg !3383
  call void @isc__mutex_init(ptr noundef %refcnt_lock, ptr noundef @.str, i32 noundef 1549), !dbg !3383
  %19 = load ptr, ptr %imp, align 8, !dbg !3384
  %20 = load ptr, ptr %sdlzdb, align 8, !dbg !3385
  %dlzimp = getelementptr inbounds %struct.dns_sdlz_db, ptr %20, i32 0, i32 2, !dbg !3386
  store ptr %19, ptr %dlzimp, align 8, !dbg !3387
  %21 = load ptr, ptr %sdlzdb, align 8, !dbg !3388
  %common24 = getelementptr inbounds %struct.dns_sdlz_db, ptr %21, i32 0, i32 0, !dbg !3389
  %methods = getelementptr inbounds %struct.dns_db, ptr %common24, i32 0, i32 2, !dbg !3390
  store ptr @sdlzdb_methods, ptr %methods, align 8, !dbg !3391
  %22 = load ptr, ptr %sdlzdb, align 8, !dbg !3392
  %common25 = getelementptr inbounds %struct.dns_sdlz_db, ptr %22, i32 0, i32 0, !dbg !3393
  %attributes = getelementptr inbounds %struct.dns_db, ptr %common25, i32 0, i32 3, !dbg !3394
  store i16 0, ptr %attributes, align 8, !dbg !3395
  %23 = load i16, ptr %rdclass.addr, align 2, !dbg !3396
  %24 = load ptr, ptr %sdlzdb, align 8, !dbg !3397
  %common26 = getelementptr inbounds %struct.dns_sdlz_db, ptr %24, i32 0, i32 0, !dbg !3398
  %rdclass27 = getelementptr inbounds %struct.dns_db, ptr %common26, i32 0, i32 4, !dbg !3399
  store i16 %23, ptr %rdclass27, align 2, !dbg !3400
  %25 = load ptr, ptr %sdlzdb, align 8, !dbg !3401
  %common28 = getelementptr inbounds %struct.dns_sdlz_db, ptr %25, i32 0, i32 0, !dbg !3402
  %mctx29 = getelementptr inbounds %struct.dns_db, ptr %common28, i32 0, i32 6, !dbg !3403
  store ptr null, ptr %mctx29, align 8, !dbg !3404
  %26 = load ptr, ptr %dbdata.addr, align 8, !dbg !3405
  %27 = load ptr, ptr %sdlzdb, align 8, !dbg !3406
  %dbdata30 = getelementptr inbounds %struct.dns_sdlz_db, ptr %27, i32 0, i32 1, !dbg !3407
  store ptr %26, ptr %dbdata30, align 8, !dbg !3408
  %28 = load ptr, ptr %sdlzdb, align 8, !dbg !3409
  %references = getelementptr inbounds %struct.dns_sdlz_db, ptr %28, i32 0, i32 4, !dbg !3410
  store i32 1, ptr %references, align 8, !dbg !3411
  %29 = load ptr, ptr %mctx.addr, align 8, !dbg !3412
  %30 = load ptr, ptr %sdlzdb, align 8, !dbg !3413
  %common31 = getelementptr inbounds %struct.dns_sdlz_db, ptr %30, i32 0, i32 0, !dbg !3414
  %mctx32 = getelementptr inbounds %struct.dns_db, ptr %common31, i32 0, i32 6, !dbg !3415
  call void @isc_mem_attach(ptr noundef %29, ptr noundef %mctx32), !dbg !3416
  %31 = load ptr, ptr %sdlzdb, align 8, !dbg !3417
  %common33 = getelementptr inbounds %struct.dns_sdlz_db, ptr %31, i32 0, i32 0, !dbg !3418
  %magic = getelementptr inbounds %struct.dns_db, ptr %common33, i32 0, i32 0, !dbg !3419
  store i32 1145983812, ptr %magic, align 8, !dbg !3420
  %32 = load ptr, ptr %sdlzdb, align 8, !dbg !3421
  %common34 = getelementptr inbounds %struct.dns_sdlz_db, ptr %32, i32 0, i32 0, !dbg !3422
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common34, i32 0, i32 1, !dbg !3423
  store i32 1145854547, ptr %impmagic, align 4, !dbg !3424
  %33 = load ptr, ptr %sdlzdb, align 8, !dbg !3425
  %34 = load ptr, ptr %dbp.addr, align 8, !dbg !3426
  store ptr %33, ptr %34, align 8, !dbg !3427
  %35 = load i32, ptr %result, align 4, !dbg !3428
  store i32 %35, ptr %retval, align 4, !dbg !3429
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3429

mem_cleanup:                                      ; preds = %if.then22
  tail call void @llvm.dbg.label(metadata !3340), !dbg !3430
  br label %do.body, !dbg !3431

do.body:                                          ; preds = %mem_cleanup
  %36 = load ptr, ptr %mctx.addr, align 8, !dbg !3432
  %37 = load ptr, ptr %sdlzdb, align 8, !dbg !3432
  call void @isc__mem_put(ptr noundef %36, ptr noundef %37, i64 noundef 208, ptr noundef @.str, i32 noundef 1570), !dbg !3432
  store ptr null, ptr %sdlzdb, align 8, !dbg !3432
  br label %do.cond, !dbg !3432

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !3432

do.end:                                           ; preds = %do.cond
  %38 = load i32, ptr %result, align 4, !dbg !3434
  store i32 %38, ptr %retval, align 4, !dbg !3435
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3435

cleanup:                                          ; preds = %do.end, %if.end23, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %imp) #11, !dbg !3436
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlzdb) #11, !dbg !3436
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !3436
  %39 = load i32, ptr %retval, align 4, !dbg !3436
  ret i32 %39, !dbg !3436
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @attach(ptr noundef %source, ptr noundef %targetp) #0 !dbg !3437 {
entry:
  %source.addr = alloca ptr, align 8
  %targetp.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  store ptr %source, ptr %source.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %source.addr, metadata !3439, metadata !DIExpression()), !dbg !3442
  store ptr %targetp, ptr %targetp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %targetp.addr, metadata !3440, metadata !DIExpression()), !dbg !3443
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !3444
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !3441, metadata !DIExpression()), !dbg !3445
  %0 = load ptr, ptr %source.addr, align 8, !dbg !3446
  store ptr %0, ptr %sdlz, align 8, !dbg !3445
  %1 = load ptr, ptr %sdlz, align 8, !dbg !3447
  %cmp = icmp ne ptr %1, null, !dbg !3447
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3447

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %sdlz, align 8, !dbg !3447
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !3447
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !3447
  %3 = load i32, ptr %impmagic, align 4, !dbg !3447
  %cmp1 = icmp eq i32 %3, 1145854547, !dbg !3447
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !3448
  %lnot = xor i1 %4, true, !dbg !3447
  %lnot2 = xor i1 %lnot, true, !dbg !3447
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !3447
  %conv = sext i32 %lnot.ext to i64, !dbg !3447
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3447
  %tobool = icmp ne i64 %expval, 0, !dbg !3447
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3447

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 321, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !3447
  unreachable, !dbg !3447

5:                                                ; No predecessors!
  br label %lor.end, !dbg !3447

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !3447
  br label %do.body, !dbg !3449

do.body:                                          ; preds = %lor.end
  %7 = load ptr, ptr %sdlz, align 8, !dbg !3450
  %refcnt_lock = getelementptr inbounds %struct.dns_sdlz_db, ptr %7, i32 0, i32 3, !dbg !3450
  %call = call i32 @pthread_mutex_lock(ptr noundef %refcnt_lock) #11, !dbg !3450
  %cmp3 = icmp eq i32 %call, 0, !dbg !3450
  %8 = zext i1 %cmp3 to i64, !dbg !3450
  %cond = select i1 %cmp3, i32 0, i32 34, !dbg !3450
  %cmp5 = icmp eq i32 %cond, 0, !dbg !3450
  %lnot7 = xor i1 %cmp5, true, !dbg !3450
  %lnot9 = xor i1 %lnot7, true, !dbg !3450
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !3450
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !3450
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 1), !dbg !3450
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !3450
  br i1 %tobool13, label %lor.end15, label %lor.rhs14, !dbg !3450

lor.rhs14:                                        ; preds = %do.body
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 323, ptr noundef @.str.20) #12, !dbg !3450
  unreachable, !dbg !3450

9:                                                ; No predecessors!
  br label %lor.end15, !dbg !3450

lor.end15:                                        ; preds = %9, %do.body
  %10 = phi i1 [ true, %do.body ], [ false, %9 ]
  %lor.ext16 = zext i1 %10 to i32, !dbg !3450
  br label %do.cond, !dbg !3450

do.cond:                                          ; preds = %lor.end15
  br label %do.end, !dbg !3450

do.end:                                           ; preds = %do.cond
  %11 = load ptr, ptr %sdlz, align 8, !dbg !3452
  %references = getelementptr inbounds %struct.dns_sdlz_db, ptr %11, i32 0, i32 4, !dbg !3452
  %12 = load i32, ptr %references, align 8, !dbg !3452
  %cmp17 = icmp ugt i32 %12, 0, !dbg !3452
  %lnot19 = xor i1 %cmp17, true, !dbg !3452
  %lnot21 = xor i1 %lnot19, true, !dbg !3452
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !3452
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !3452
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !3452
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !3452
  br i1 %tobool25, label %lor.end27, label %lor.rhs26, !dbg !3452

lor.rhs26:                                        ; preds = %do.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 324, i32 noundef 0, ptr noundef @.str.21) #12, !dbg !3452
  unreachable, !dbg !3452

13:                                               ; No predecessors!
  br label %lor.end27, !dbg !3452

lor.end27:                                        ; preds = %13, %do.end
  %14 = phi i1 [ true, %do.end ], [ false, %13 ]
  %lor.ext28 = zext i1 %14 to i32, !dbg !3452
  %15 = load ptr, ptr %sdlz, align 8, !dbg !3453
  %references29 = getelementptr inbounds %struct.dns_sdlz_db, ptr %15, i32 0, i32 4, !dbg !3454
  %16 = load i32, ptr %references29, align 8, !dbg !3455
  %inc = add i32 %16, 1, !dbg !3455
  store i32 %inc, ptr %references29, align 8, !dbg !3455
  br label %do.body30, !dbg !3456

do.body30:                                        ; preds = %lor.end27
  %17 = load ptr, ptr %sdlz, align 8, !dbg !3457
  %refcnt_lock31 = getelementptr inbounds %struct.dns_sdlz_db, ptr %17, i32 0, i32 3, !dbg !3457
  %call32 = call i32 @pthread_mutex_unlock(ptr noundef %refcnt_lock31) #11, !dbg !3457
  %cmp33 = icmp eq i32 %call32, 0, !dbg !3457
  %18 = zext i1 %cmp33 to i64, !dbg !3457
  %cond35 = select i1 %cmp33, i32 0, i32 34, !dbg !3457
  %cmp36 = icmp eq i32 %cond35, 0, !dbg !3457
  %lnot38 = xor i1 %cmp36, true, !dbg !3457
  %lnot40 = xor i1 %lnot38, true, !dbg !3457
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !3457
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !3457
  %expval43 = call i64 @llvm.expect.i64(i64 %conv42, i64 1), !dbg !3457
  %tobool44 = icmp ne i64 %expval43, 0, !dbg !3457
  br i1 %tobool44, label %lor.end46, label %lor.rhs45, !dbg !3457

lor.rhs45:                                        ; preds = %do.body30
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 326, ptr noundef @.str.22) #12, !dbg !3457
  unreachable, !dbg !3457

19:                                               ; No predecessors!
  br label %lor.end46, !dbg !3457

lor.end46:                                        ; preds = %19, %do.body30
  %20 = phi i1 [ true, %do.body30 ], [ false, %19 ]
  %lor.ext47 = zext i1 %20 to i32, !dbg !3457
  br label %do.cond48, !dbg !3457

do.cond48:                                        ; preds = %lor.end46
  br label %do.end49, !dbg !3457

do.end49:                                         ; preds = %do.cond48
  %21 = load ptr, ptr %source.addr, align 8, !dbg !3459
  %22 = load ptr, ptr %targetp.addr, align 8, !dbg !3460
  store ptr %21, ptr %22, align 8, !dbg !3461
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !3462
  ret void, !dbg !3462
}

; Function Attrs: null_pointer_is_valid
declare !dbg !3463 void @dns_rdatacallbacks_init(ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid
declare !dbg !3466 i32 @pthread_mutex_lock(ptr noundef) #7

; Function Attrs: nounwind null_pointer_is_valid
declare !dbg !3467 i32 @pthread_mutex_unlock(ptr noundef) #7

; Function Attrs: null_pointer_is_valid
declare !dbg !3468 void @dns_name_free(ptr noundef, ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @detach(ptr noundef %dbp) #0 !dbg !3471 {
entry:
  %dbp.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %need_destroy = alloca i8, align 1
  store ptr %dbp, ptr %dbp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dbp.addr, metadata !3473, metadata !DIExpression()), !dbg !3476
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !3477
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !3474, metadata !DIExpression()), !dbg !3478
  %0 = load ptr, ptr %dbp.addr, align 8, !dbg !3479
  %1 = load ptr, ptr %0, align 8, !dbg !3480
  store ptr %1, ptr %sdlz, align 8, !dbg !3478
  call void @llvm.lifetime.start.p0(i64 1, ptr %need_destroy) #11, !dbg !3481
  tail call void @llvm.dbg.declare(metadata ptr %need_destroy, metadata !3475, metadata !DIExpression()), !dbg !3482
  store i8 0, ptr %need_destroy, align 1, !dbg !3482
  %2 = load ptr, ptr %sdlz, align 8, !dbg !3483
  %cmp = icmp ne ptr %2, null, !dbg !3483
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3483

land.rhs:                                         ; preds = %entry
  %3 = load ptr, ptr %sdlz, align 8, !dbg !3483
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %3, i32 0, i32 0, !dbg !3483
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !3483
  %4 = load i32, ptr %impmagic, align 4, !dbg !3483
  %cmp1 = icmp eq i32 %4, 1145854547, !dbg !3483
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !3484
  %lnot = xor i1 %5, true, !dbg !3483
  %lnot2 = xor i1 %lnot, true, !dbg !3483
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !3483
  %conv = sext i32 %lnot.ext to i64, !dbg !3483
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3483
  %tobool = icmp ne i64 %expval, 0, !dbg !3483
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3483

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 352, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !3483
  unreachable, !dbg !3483

6:                                                ; No predecessors!
  br label %lor.end, !dbg !3483

lor.end:                                          ; preds = %6, %land.end
  %7 = phi i1 [ true, %land.end ], [ false, %6 ]
  %lor.ext = zext i1 %7 to i32, !dbg !3483
  br label %do.body, !dbg !3485

do.body:                                          ; preds = %lor.end
  %8 = load ptr, ptr %sdlz, align 8, !dbg !3486
  %refcnt_lock = getelementptr inbounds %struct.dns_sdlz_db, ptr %8, i32 0, i32 3, !dbg !3486
  %call = call i32 @pthread_mutex_lock(ptr noundef %refcnt_lock) #11, !dbg !3486
  %cmp3 = icmp eq i32 %call, 0, !dbg !3486
  %9 = zext i1 %cmp3 to i64, !dbg !3486
  %cond = select i1 %cmp3, i32 0, i32 34, !dbg !3486
  %cmp5 = icmp eq i32 %cond, 0, !dbg !3486
  %lnot7 = xor i1 %cmp5, true, !dbg !3486
  %lnot9 = xor i1 %lnot7, true, !dbg !3486
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !3486
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !3486
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 1), !dbg !3486
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !3486
  br i1 %tobool13, label %lor.end15, label %lor.rhs14, !dbg !3486

lor.rhs14:                                        ; preds = %do.body
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 353, ptr noundef @.str.20) #12, !dbg !3486
  unreachable, !dbg !3486

10:                                               ; No predecessors!
  br label %lor.end15, !dbg !3486

lor.end15:                                        ; preds = %10, %do.body
  %11 = phi i1 [ true, %do.body ], [ false, %10 ]
  %lor.ext16 = zext i1 %11 to i32, !dbg !3486
  br label %do.cond, !dbg !3486

do.cond:                                          ; preds = %lor.end15
  br label %do.end, !dbg !3486

do.end:                                           ; preds = %do.cond
  %12 = load ptr, ptr %sdlz, align 8, !dbg !3488
  %references = getelementptr inbounds %struct.dns_sdlz_db, ptr %12, i32 0, i32 4, !dbg !3488
  %13 = load i32, ptr %references, align 8, !dbg !3488
  %cmp17 = icmp ugt i32 %13, 0, !dbg !3488
  %lnot19 = xor i1 %cmp17, true, !dbg !3488
  %lnot21 = xor i1 %lnot19, true, !dbg !3488
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !3488
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !3488
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !3488
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !3488
  br i1 %tobool25, label %lor.end27, label %lor.rhs26, !dbg !3488

lor.rhs26:                                        ; preds = %do.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 354, i32 noundef 0, ptr noundef @.str.21) #12, !dbg !3488
  unreachable, !dbg !3488

14:                                               ; No predecessors!
  br label %lor.end27, !dbg !3488

lor.end27:                                        ; preds = %14, %do.end
  %15 = phi i1 [ true, %do.end ], [ false, %14 ]
  %lor.ext28 = zext i1 %15 to i32, !dbg !3488
  %16 = load ptr, ptr %sdlz, align 8, !dbg !3489
  %references29 = getelementptr inbounds %struct.dns_sdlz_db, ptr %16, i32 0, i32 4, !dbg !3490
  %17 = load i32, ptr %references29, align 8, !dbg !3491
  %dec = add i32 %17, -1, !dbg !3491
  store i32 %dec, ptr %references29, align 8, !dbg !3491
  %18 = load ptr, ptr %sdlz, align 8, !dbg !3492
  %references30 = getelementptr inbounds %struct.dns_sdlz_db, ptr %18, i32 0, i32 4, !dbg !3494
  %19 = load i32, ptr %references30, align 8, !dbg !3494
  %cmp31 = icmp eq i32 %19, 0, !dbg !3495
  br i1 %cmp31, label %if.then, label %if.end, !dbg !3496

if.then:                                          ; preds = %lor.end27
  store i8 1, ptr %need_destroy, align 1, !dbg !3497
  br label %if.end, !dbg !3498

if.end:                                           ; preds = %if.then, %lor.end27
  br label %do.body33, !dbg !3499

do.body33:                                        ; preds = %if.end
  %20 = load ptr, ptr %sdlz, align 8, !dbg !3500
  %refcnt_lock34 = getelementptr inbounds %struct.dns_sdlz_db, ptr %20, i32 0, i32 3, !dbg !3500
  %call35 = call i32 @pthread_mutex_unlock(ptr noundef %refcnt_lock34) #11, !dbg !3500
  %cmp36 = icmp eq i32 %call35, 0, !dbg !3500
  %21 = zext i1 %cmp36 to i64, !dbg !3500
  %cond38 = select i1 %cmp36, i32 0, i32 34, !dbg !3500
  %cmp39 = icmp eq i32 %cond38, 0, !dbg !3500
  %lnot41 = xor i1 %cmp39, true, !dbg !3500
  %lnot43 = xor i1 %lnot41, true, !dbg !3500
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !3500
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !3500
  %expval46 = call i64 @llvm.expect.i64(i64 %conv45, i64 1), !dbg !3500
  %tobool47 = icmp ne i64 %expval46, 0, !dbg !3500
  br i1 %tobool47, label %lor.end49, label %lor.rhs48, !dbg !3500

lor.rhs48:                                        ; preds = %do.body33
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 358, ptr noundef @.str.22) #12, !dbg !3500
  unreachable, !dbg !3500

22:                                               ; No predecessors!
  br label %lor.end49, !dbg !3500

lor.end49:                                        ; preds = %22, %do.body33
  %23 = phi i1 [ true, %do.body33 ], [ false, %22 ]
  %lor.ext50 = zext i1 %23 to i32, !dbg !3500
  br label %do.cond51, !dbg !3500

do.cond51:                                        ; preds = %lor.end49
  br label %do.end52, !dbg !3500

do.end52:                                         ; preds = %do.cond51
  %24 = load i8, ptr %need_destroy, align 1, !dbg !3502, !range !2769, !noundef !2770
  %tobool53 = trunc i8 %24 to i1, !dbg !3502
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !3504

if.then54:                                        ; preds = %do.end52
  %25 = load ptr, ptr %sdlz, align 8, !dbg !3505
  call void @destroy(ptr noundef %25), !dbg !3506
  br label %if.end55, !dbg !3506

if.end55:                                         ; preds = %if.then54, %do.end52
  %26 = load ptr, ptr %dbp.addr, align 8, !dbg !3507
  store ptr null, ptr %26, align 8, !dbg !3508
  call void @llvm.lifetime.end.p0(i64 1, ptr %need_destroy) #11, !dbg !3509
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !3509
  ret void, !dbg !3509
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @destroy(ptr noundef %sdlz) #0 !dbg !3510 {
entry:
  %sdlz.addr = alloca ptr, align 8
  %mctx = alloca ptr, align 8
  store ptr %sdlz, ptr %sdlz.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %sdlz.addr, metadata !3514, metadata !DIExpression()), !dbg !3516
  call void @llvm.lifetime.start.p0(i64 8, ptr %mctx) #11, !dbg !3517
  tail call void @llvm.dbg.declare(metadata ptr %mctx, metadata !3515, metadata !DIExpression()), !dbg !3518
  %0 = load ptr, ptr %sdlz.addr, align 8, !dbg !3519
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %0, i32 0, i32 0, !dbg !3520
  %mctx1 = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 6, !dbg !3521
  %1 = load ptr, ptr %mctx1, align 8, !dbg !3521
  store ptr %1, ptr %mctx, align 8, !dbg !3522
  %2 = load ptr, ptr %sdlz.addr, align 8, !dbg !3523
  %common2 = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !3524
  %magic = getelementptr inbounds %struct.dns_db, ptr %common2, i32 0, i32 0, !dbg !3525
  store i32 0, ptr %magic, align 8, !dbg !3526
  %3 = load ptr, ptr %sdlz.addr, align 8, !dbg !3527
  %common3 = getelementptr inbounds %struct.dns_sdlz_db, ptr %3, i32 0, i32 0, !dbg !3528
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common3, i32 0, i32 1, !dbg !3529
  store i32 0, ptr %impmagic, align 4, !dbg !3530
  %4 = load ptr, ptr %sdlz.addr, align 8, !dbg !3531
  %refcnt_lock = getelementptr inbounds %struct.dns_sdlz_db, ptr %4, i32 0, i32 3, !dbg !3531
  %call = call i32 @pthread_mutex_destroy(ptr noundef %refcnt_lock) #11, !dbg !3531
  %cmp = icmp eq i32 %call, 0, !dbg !3531
  %lnot = xor i1 %cmp, true, !dbg !3531
  %lnot4 = xor i1 %lnot, true, !dbg !3531
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !3531
  %conv = sext i32 %lnot.ext to i64, !dbg !3531
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3531
  %tobool = icmp ne i64 %expval, 0, !dbg !3531
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3531

lor.rhs:                                          ; preds = %entry
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 339, ptr noundef @.str.36) #12, !dbg !3531
  unreachable, !dbg !3531

5:                                                ; No predecessors!
  br label %lor.end, !dbg !3531

lor.end:                                          ; preds = %5, %entry
  %6 = phi i1 [ true, %entry ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !3531
  %7 = load ptr, ptr %sdlz.addr, align 8, !dbg !3532
  %common5 = getelementptr inbounds %struct.dns_sdlz_db, ptr %7, i32 0, i32 0, !dbg !3533
  %origin = getelementptr inbounds %struct.dns_db, ptr %common5, i32 0, i32 5, !dbg !3534
  %8 = load ptr, ptr %mctx, align 8, !dbg !3535
  call void @dns_name_free(ptr noundef %origin, ptr noundef %8), !dbg !3536
  br label %do.body, !dbg !3537

do.body:                                          ; preds = %lor.end
  %9 = load ptr, ptr %mctx, align 8, !dbg !3538
  %10 = load ptr, ptr %sdlz.addr, align 8, !dbg !3538
  call void @isc__mem_put(ptr noundef %9, ptr noundef %10, i64 noundef 208, ptr noundef @.str, i32 noundef 343), !dbg !3538
  store ptr null, ptr %sdlz.addr, align 8, !dbg !3538
  br label %do.cond, !dbg !3538

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !3538

do.end:                                           ; preds = %do.cond
  call void @isc_mem_detach(ptr noundef %mctx), !dbg !3540
  call void @llvm.lifetime.end.p0(i64 8, ptr %mctx) #11, !dbg !3541
  ret void, !dbg !3541
}

; Function Attrs: null_pointer_is_valid
declare !dbg !3542 void @isc_log_vwrite(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dns_sdlzcreate(ptr noundef %mctx, ptr noundef %dlzname, i32 noundef %argc, ptr noundef %argv, ptr noundef %driverarg, ptr noundef %dbdata) #0 !dbg !3562 {
entry:
  %mctx.addr = alloca ptr, align 8
  %dlzname.addr = alloca ptr, align 8
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca ptr, align 8
  %driverarg.addr = alloca ptr, align 8
  %dbdata.addr = alloca ptr, align 8
  %imp = alloca ptr, align 8
  %result = alloca i32, align 4
  %flags = alloca i32, align 4
  %flags54 = alloca i32, align 4
  store ptr %mctx, ptr %mctx.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %mctx.addr, metadata !3564, metadata !DIExpression()), !dbg !3578
  store ptr %dlzname, ptr %dlzname.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dlzname.addr, metadata !3565, metadata !DIExpression()), !dbg !3579
  store i32 %argc, ptr %argc.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %argc.addr, metadata !3566, metadata !DIExpression()), !dbg !3580
  store ptr %argv, ptr %argv.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %argv.addr, metadata !3567, metadata !DIExpression()), !dbg !3581
  store ptr %driverarg, ptr %driverarg.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %driverarg.addr, metadata !3568, metadata !DIExpression()), !dbg !3582
  store ptr %dbdata, ptr %dbdata.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dbdata.addr, metadata !3569, metadata !DIExpression()), !dbg !3583
  call void @llvm.lifetime.start.p0(i64 8, ptr %imp) #11, !dbg !3584
  tail call void @llvm.dbg.declare(metadata ptr %imp, metadata !3570, metadata !DIExpression()), !dbg !3585
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !3586
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !3571, metadata !DIExpression()), !dbg !3587
  store i32 23, ptr %result, align 4, !dbg !3587
  call void (i32, ptr, ...) @sdlz_log(i32 noundef 2, ptr noundef @.str.37), !dbg !3588
  %0 = load ptr, ptr %driverarg.addr, align 8, !dbg !3589
  %cmp = icmp ne ptr %0, null, !dbg !3589
  %lnot = xor i1 %cmp, true, !dbg !3589
  %lnot1 = xor i1 %lnot, true, !dbg !3589
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3589
  %conv = sext i32 %lnot.ext to i64, !dbg !3589
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3589
  %tobool = icmp ne i64 %expval, 0, !dbg !3589
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3589

lor.rhs:                                          ; preds = %entry
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1649, i32 noundef 0, ptr noundef @.str.38) #12, !dbg !3589
  unreachable, !dbg !3589

1:                                                ; No predecessors!
  br label %lor.end, !dbg !3589

lor.end:                                          ; preds = %1, %entry
  %2 = phi i1 [ true, %entry ], [ false, %1 ]
  %lor.ext = zext i1 %2 to i32, !dbg !3589
  %3 = load ptr, ptr %dlzname.addr, align 8, !dbg !3590
  %cmp2 = icmp ne ptr %3, null, !dbg !3590
  %lnot4 = xor i1 %cmp2, true, !dbg !3590
  %lnot6 = xor i1 %lnot4, true, !dbg !3590
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !3590
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !3590
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 1), !dbg !3590
  %tobool10 = icmp ne i64 %expval9, 0, !dbg !3590
  br i1 %tobool10, label %lor.end12, label %lor.rhs11, !dbg !3590

lor.rhs11:                                        ; preds = %lor.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1650, i32 noundef 0, ptr noundef @.str.39) #12, !dbg !3590
  unreachable, !dbg !3590

4:                                                ; No predecessors!
  br label %lor.end12, !dbg !3590

lor.end12:                                        ; preds = %4, %lor.end
  %5 = phi i1 [ true, %lor.end ], [ false, %4 ]
  %lor.ext13 = zext i1 %5 to i32, !dbg !3590
  %6 = load ptr, ptr %dbdata.addr, align 8, !dbg !3591
  %cmp14 = icmp ne ptr %6, null, !dbg !3591
  %lnot16 = xor i1 %cmp14, true, !dbg !3591
  %lnot18 = xor i1 %lnot16, true, !dbg !3591
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !3591
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !3591
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 1), !dbg !3591
  %tobool22 = icmp ne i64 %expval21, 0, !dbg !3591
  br i1 %tobool22, label %lor.end24, label %lor.rhs23, !dbg !3591

lor.rhs23:                                        ; preds = %lor.end12
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1651, i32 noundef 0, ptr noundef @.str.40) #12, !dbg !3591
  unreachable, !dbg !3591

7:                                                ; No predecessors!
  br label %lor.end24, !dbg !3591

lor.end24:                                        ; preds = %7, %lor.end12
  %8 = phi i1 [ true, %lor.end12 ], [ false, %7 ]
  %lor.ext25 = zext i1 %8 to i32, !dbg !3591
  %9 = load ptr, ptr %mctx.addr, align 8, !dbg !3592
  %10 = load ptr, ptr %driverarg.addr, align 8, !dbg !3593
  store ptr %10, ptr %imp, align 8, !dbg !3594
  %11 = load ptr, ptr %imp, align 8, !dbg !3595
  %methods = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %11, i32 0, i32 0, !dbg !3596
  %12 = load ptr, ptr %methods, align 8, !dbg !3596
  %create = getelementptr inbounds %struct.dns_sdlzmethods, ptr %12, i32 0, i32 0, !dbg !3597
  %13 = load ptr, ptr %create, align 8, !dbg !3597
  %cmp26 = icmp ne ptr %13, null, !dbg !3598
  br i1 %cmp26, label %if.then, label %if.end83, !dbg !3599

if.then:                                          ; preds = %lor.end24
  br label %do.body, !dbg !3600

do.body:                                          ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags) #11, !dbg !3601
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !3572, metadata !DIExpression()), !dbg !3601
  %14 = load ptr, ptr %imp, align 8, !dbg !3601
  %flags28 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %14, i32 0, i32 3, !dbg !3601
  %15 = load i32, ptr %flags28, align 8, !dbg !3601
  store i32 %15, ptr %flags, align 4, !dbg !3601
  %16 = load i32, ptr %flags, align 4, !dbg !3602
  %and = and i32 %16, 1, !dbg !3602
  %cmp29 = icmp eq i32 %and, 0, !dbg !3602
  br i1 %cmp29, label %if.then31, label %if.end, !dbg !3601

if.then31:                                        ; preds = %do.body
  br label %do.body32, !dbg !3602

do.body32:                                        ; preds = %if.then31
  %17 = load ptr, ptr %imp, align 8, !dbg !3604
  %driverlock = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %17, i32 0, i32 4, !dbg !3604
  %call = call i32 @pthread_mutex_lock(ptr noundef %driverlock) #11, !dbg !3604
  %cmp33 = icmp eq i32 %call, 0, !dbg !3604
  %18 = zext i1 %cmp33 to i64, !dbg !3604
  %cond = select i1 %cmp33, i32 0, i32 34, !dbg !3604
  %cmp35 = icmp eq i32 %cond, 0, !dbg !3604
  %lnot37 = xor i1 %cmp35, true, !dbg !3604
  %lnot39 = xor i1 %lnot37, true, !dbg !3604
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !3604
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !3604
  %expval42 = call i64 @llvm.expect.i64(i64 %conv41, i64 1), !dbg !3604
  %tobool43 = icmp ne i64 %expval42, 0, !dbg !3604
  br i1 %tobool43, label %lor.end45, label %lor.rhs44, !dbg !3604

lor.rhs44:                                        ; preds = %do.body32
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1658, ptr noundef @.str.41) #12, !dbg !3604
  unreachable, !dbg !3604

19:                                               ; No predecessors!
  br label %lor.end45, !dbg !3604

lor.end45:                                        ; preds = %19, %do.body32
  %20 = phi i1 [ true, %do.body32 ], [ false, %19 ]
  %lor.ext46 = zext i1 %20 to i32, !dbg !3604
  br label %do.cond, !dbg !3604

do.cond:                                          ; preds = %lor.end45
  br label %do.end, !dbg !3604

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !3604

if.end:                                           ; preds = %do.end, %do.body
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags) #11, !dbg !3600
  br label %do.cond47, !dbg !3601

do.cond47:                                        ; preds = %if.end
  br label %do.end48, !dbg !3601

do.end48:                                         ; preds = %do.cond47
  %21 = load ptr, ptr %imp, align 8, !dbg !3606
  %methods49 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %21, i32 0, i32 0, !dbg !3607
  %22 = load ptr, ptr %methods49, align 8, !dbg !3607
  %create50 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %22, i32 0, i32 0, !dbg !3608
  %23 = load ptr, ptr %create50, align 8, !dbg !3608
  %24 = load ptr, ptr %dlzname.addr, align 8, !dbg !3609
  %25 = load i32, ptr %argc.addr, align 4, !dbg !3610
  %26 = load ptr, ptr %argv.addr, align 8, !dbg !3611
  %27 = load ptr, ptr %imp, align 8, !dbg !3612
  %driverarg51 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %27, i32 0, i32 2, !dbg !3613
  %28 = load ptr, ptr %driverarg51, align 8, !dbg !3613
  %29 = load ptr, ptr %dbdata.addr, align 8, !dbg !3614
  %call52 = call i32 %23(ptr noundef %24, i32 noundef %25, ptr noundef %26, ptr noundef %28, ptr noundef %29), !dbg !3606
  store i32 %call52, ptr %result, align 4, !dbg !3615
  br label %do.body53, !dbg !3616

do.body53:                                        ; preds = %do.end48
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags54) #11, !dbg !3617
  tail call void @llvm.dbg.declare(metadata ptr %flags54, metadata !3576, metadata !DIExpression()), !dbg !3617
  %30 = load ptr, ptr %imp, align 8, !dbg !3617
  %flags55 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %30, i32 0, i32 3, !dbg !3617
  %31 = load i32, ptr %flags55, align 8, !dbg !3617
  store i32 %31, ptr %flags54, align 4, !dbg !3617
  %32 = load i32, ptr %flags54, align 4, !dbg !3618
  %and56 = and i32 %32, 1, !dbg !3618
  %cmp57 = icmp eq i32 %and56, 0, !dbg !3618
  br i1 %cmp57, label %if.then59, label %if.end80, !dbg !3617

if.then59:                                        ; preds = %do.body53
  br label %do.body60, !dbg !3618

do.body60:                                        ; preds = %if.then59
  %33 = load ptr, ptr %imp, align 8, !dbg !3620
  %driverlock61 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %33, i32 0, i32 4, !dbg !3620
  %call62 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock61) #11, !dbg !3620
  %cmp63 = icmp eq i32 %call62, 0, !dbg !3620
  %34 = zext i1 %cmp63 to i64, !dbg !3620
  %cond65 = select i1 %cmp63, i32 0, i32 34, !dbg !3620
  %cmp66 = icmp eq i32 %cond65, 0, !dbg !3620
  %lnot68 = xor i1 %cmp66, true, !dbg !3620
  %lnot70 = xor i1 %lnot68, true, !dbg !3620
  %lnot.ext71 = zext i1 %lnot70 to i32, !dbg !3620
  %conv72 = sext i32 %lnot.ext71 to i64, !dbg !3620
  %expval73 = call i64 @llvm.expect.i64(i64 %conv72, i64 1), !dbg !3620
  %tobool74 = icmp ne i64 %expval73, 0, !dbg !3620
  br i1 %tobool74, label %lor.end76, label %lor.rhs75, !dbg !3620

lor.rhs75:                                        ; preds = %do.body60
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1661, ptr noundef @.str.42) #12, !dbg !3620
  unreachable, !dbg !3620

35:                                               ; No predecessors!
  br label %lor.end76, !dbg !3620

lor.end76:                                        ; preds = %35, %do.body60
  %36 = phi i1 [ true, %do.body60 ], [ false, %35 ]
  %lor.ext77 = zext i1 %36 to i32, !dbg !3620
  br label %do.cond78, !dbg !3620

do.cond78:                                        ; preds = %lor.end76
  br label %do.end79, !dbg !3620

do.end79:                                         ; preds = %do.cond78
  br label %if.end80, !dbg !3620

if.end80:                                         ; preds = %do.end79, %do.body53
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags54) #11, !dbg !3616
  br label %do.cond81, !dbg !3617

do.cond81:                                        ; preds = %if.end80
  br label %do.end82, !dbg !3617

do.end82:                                         ; preds = %do.cond81
  br label %if.end83, !dbg !3622

if.end83:                                         ; preds = %do.end82, %lor.end24
  %37 = load i32, ptr %result, align 4, !dbg !3623
  %cmp84 = icmp eq i32 %37, 0, !dbg !3625
  br i1 %cmp84, label %if.then86, label %if.else, !dbg !3626

if.then86:                                        ; preds = %if.end83
  call void (i32, ptr, ...) @sdlz_log(i32 noundef 2, ptr noundef @.str.43), !dbg !3627
  br label %if.end87, !dbg !3629

if.else:                                          ; preds = %if.end83
  call void (i32, ptr, ...) @sdlz_log(i32 noundef -4, ptr noundef @.str.44), !dbg !3630
  br label %if.end87

if.end87:                                         ; preds = %if.else, %if.then86
  %38 = load i32, ptr %result, align 4, !dbg !3632
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !3633
  call void @llvm.lifetime.end.p0(i64 8, ptr %imp) #11, !dbg !3633
  ret i32 %38, !dbg !3634
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @dns_sdlzdestroy(ptr noundef %driverdata, ptr noundef %dbdata) #0 !dbg !3635 {
entry:
  %driverdata.addr = alloca ptr, align 8
  %dbdata.addr = alloca ptr, align 8
  %imp = alloca ptr, align 8
  %flags = alloca i32, align 4
  %flags13 = alloca i32, align 4
  store ptr %driverdata, ptr %driverdata.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %driverdata.addr, metadata !3637, metadata !DIExpression()), !dbg !3646
  store ptr %dbdata, ptr %dbdata.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dbdata.addr, metadata !3638, metadata !DIExpression()), !dbg !3647
  call void @llvm.lifetime.start.p0(i64 8, ptr %imp) #11, !dbg !3648
  tail call void @llvm.dbg.declare(metadata ptr %imp, metadata !3639, metadata !DIExpression()), !dbg !3649
  call void (i32, ptr, ...) @sdlz_log(i32 noundef 2, ptr noundef @.str.45), !dbg !3650
  %0 = load ptr, ptr %driverdata.addr, align 8, !dbg !3651
  store ptr %0, ptr %imp, align 8, !dbg !3652
  %1 = load ptr, ptr %imp, align 8, !dbg !3653
  %methods = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %1, i32 0, i32 0, !dbg !3654
  %2 = load ptr, ptr %methods, align 8, !dbg !3654
  %destroy = getelementptr inbounds %struct.dns_sdlzmethods, ptr %2, i32 0, i32 1, !dbg !3655
  %3 = load ptr, ptr %destroy, align 8, !dbg !3655
  %cmp = icmp ne ptr %3, null, !dbg !3656
  br i1 %cmp, label %if.then, label %if.end42, !dbg !3657

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !3658

do.body:                                          ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags) #11, !dbg !3659
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !3640, metadata !DIExpression()), !dbg !3659
  %4 = load ptr, ptr %imp, align 8, !dbg !3659
  %flags1 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %4, i32 0, i32 3, !dbg !3659
  %5 = load i32, ptr %flags1, align 8, !dbg !3659
  store i32 %5, ptr %flags, align 4, !dbg !3659
  %6 = load i32, ptr %flags, align 4, !dbg !3660
  %and = and i32 %6, 1, !dbg !3660
  %cmp2 = icmp eq i32 %and, 0, !dbg !3660
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !3659

if.then3:                                         ; preds = %do.body
  br label %do.body4, !dbg !3660

do.body4:                                         ; preds = %if.then3
  %7 = load ptr, ptr %imp, align 8, !dbg !3662
  %driverlock = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %7, i32 0, i32 4, !dbg !3662
  %call = call i32 @pthread_mutex_lock(ptr noundef %driverlock) #11, !dbg !3662
  %cmp5 = icmp eq i32 %call, 0, !dbg !3662
  %8 = zext i1 %cmp5 to i64, !dbg !3662
  %cond = select i1 %cmp5, i32 0, i32 34, !dbg !3662
  %cmp6 = icmp eq i32 %cond, 0, !dbg !3662
  %lnot = xor i1 %cmp6, true, !dbg !3662
  %lnot7 = xor i1 %lnot, true, !dbg !3662
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !3662
  %conv = sext i32 %lnot.ext to i64, !dbg !3662
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3662
  %tobool = icmp ne i64 %expval, 0, !dbg !3662
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3662

lor.rhs:                                          ; preds = %do.body4
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1685, ptr noundef @.str.41) #12, !dbg !3662
  unreachable, !dbg !3662

9:                                                ; No predecessors!
  br label %lor.end, !dbg !3662

lor.end:                                          ; preds = %9, %do.body4
  %10 = phi i1 [ true, %do.body4 ], [ false, %9 ]
  %lor.ext = zext i1 %10 to i32, !dbg !3662
  br label %do.cond, !dbg !3662

do.cond:                                          ; preds = %lor.end
  br label %do.end, !dbg !3662

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !3662

if.end:                                           ; preds = %do.end, %do.body
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags) #11, !dbg !3658
  br label %do.cond8, !dbg !3659

do.cond8:                                         ; preds = %if.end
  br label %do.end9, !dbg !3659

do.end9:                                          ; preds = %do.cond8
  %11 = load ptr, ptr %imp, align 8, !dbg !3664
  %methods10 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %11, i32 0, i32 0, !dbg !3665
  %12 = load ptr, ptr %methods10, align 8, !dbg !3665
  %destroy11 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %12, i32 0, i32 1, !dbg !3666
  %13 = load ptr, ptr %destroy11, align 8, !dbg !3666
  %14 = load ptr, ptr %imp, align 8, !dbg !3667
  %driverarg = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %14, i32 0, i32 2, !dbg !3668
  %15 = load ptr, ptr %driverarg, align 8, !dbg !3668
  %16 = load ptr, ptr %dbdata.addr, align 8, !dbg !3669
  call void %13(ptr noundef %15, ptr noundef %16), !dbg !3664
  br label %do.body12, !dbg !3670

do.body12:                                        ; preds = %do.end9
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags13) #11, !dbg !3671
  tail call void @llvm.dbg.declare(metadata ptr %flags13, metadata !3644, metadata !DIExpression()), !dbg !3671
  %17 = load ptr, ptr %imp, align 8, !dbg !3671
  %flags14 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %17, i32 0, i32 3, !dbg !3671
  %18 = load i32, ptr %flags14, align 8, !dbg !3671
  store i32 %18, ptr %flags13, align 4, !dbg !3671
  %19 = load i32, ptr %flags13, align 4, !dbg !3672
  %and15 = and i32 %19, 1, !dbg !3672
  %cmp16 = icmp eq i32 %and15, 0, !dbg !3672
  br i1 %cmp16, label %if.then18, label %if.end39, !dbg !3671

if.then18:                                        ; preds = %do.body12
  br label %do.body19, !dbg !3672

do.body19:                                        ; preds = %if.then18
  %20 = load ptr, ptr %imp, align 8, !dbg !3674
  %driverlock20 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %20, i32 0, i32 4, !dbg !3674
  %call21 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock20) #11, !dbg !3674
  %cmp22 = icmp eq i32 %call21, 0, !dbg !3674
  %21 = zext i1 %cmp22 to i64, !dbg !3674
  %cond24 = select i1 %cmp22, i32 0, i32 34, !dbg !3674
  %cmp25 = icmp eq i32 %cond24, 0, !dbg !3674
  %lnot27 = xor i1 %cmp25, true, !dbg !3674
  %lnot29 = xor i1 %lnot27, true, !dbg !3674
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !3674
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !3674
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 1), !dbg !3674
  %tobool33 = icmp ne i64 %expval32, 0, !dbg !3674
  br i1 %tobool33, label %lor.end35, label %lor.rhs34, !dbg !3674

lor.rhs34:                                        ; preds = %do.body19
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1687, ptr noundef @.str.42) #12, !dbg !3674
  unreachable, !dbg !3674

22:                                               ; No predecessors!
  br label %lor.end35, !dbg !3674

lor.end35:                                        ; preds = %22, %do.body19
  %23 = phi i1 [ true, %do.body19 ], [ false, %22 ]
  %lor.ext36 = zext i1 %23 to i32, !dbg !3674
  br label %do.cond37, !dbg !3674

do.cond37:                                        ; preds = %lor.end35
  br label %do.end38, !dbg !3674

do.end38:                                         ; preds = %do.cond37
  br label %if.end39, !dbg !3674

if.end39:                                         ; preds = %do.end38, %do.body12
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags13) #11, !dbg !3670
  br label %do.cond40, !dbg !3671

do.cond40:                                        ; preds = %if.end39
  br label %do.end41, !dbg !3671

do.end41:                                         ; preds = %do.cond40
  br label %if.end42, !dbg !3676

if.end42:                                         ; preds = %do.end41, %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %imp) #11, !dbg !3677
  ret void, !dbg !3677
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dns_sdlzfindzone(ptr noundef %driverarg, ptr noundef %dbdata, ptr noundef %mctx, i16 noundef zeroext %rdclass, ptr noundef %name, ptr noundef %methods, ptr noundef %clientinfo, ptr noundef %dbp) #0 !dbg !3678 {
entry:
  %retval = alloca i32, align 4
  %driverarg.addr = alloca ptr, align 8
  %dbdata.addr = alloca ptr, align 8
  %mctx.addr = alloca ptr, align 8
  %rdclass.addr = alloca i16, align 2
  %name.addr = alloca ptr, align 8
  %methods.addr = alloca ptr, align 8
  %clientinfo.addr = alloca ptr, align 8
  %dbp.addr = alloca ptr, align 8
  %b = alloca %struct.isc_buffer, align 8
  %namestr = alloca [1024 x i8], align 16
  %result = alloca i32, align 4
  %imp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %_cp = alloca ptr, align 8
  %_val2 = alloca i8, align 1
  %_tmp = alloca ptr, align 8
  %flags = alloca i32, align 4
  %flags111 = alloca i32, align 4
  store ptr %driverarg, ptr %driverarg.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %driverarg.addr, metadata !3680, metadata !DIExpression()), !dbg !3705
  store ptr %dbdata, ptr %dbdata.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dbdata.addr, metadata !3681, metadata !DIExpression()), !dbg !3706
  store ptr %mctx, ptr %mctx.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %mctx.addr, metadata !3682, metadata !DIExpression()), !dbg !3707
  store i16 %rdclass, ptr %rdclass.addr, align 2
  tail call void @llvm.dbg.declare(metadata ptr %rdclass.addr, metadata !3683, metadata !DIExpression()), !dbg !3708
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !3684, metadata !DIExpression()), !dbg !3709
  store ptr %methods, ptr %methods.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %methods.addr, metadata !3685, metadata !DIExpression()), !dbg !3710
  store ptr %clientinfo, ptr %clientinfo.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %clientinfo.addr, metadata !3686, metadata !DIExpression()), !dbg !3711
  store ptr %dbp, ptr %dbp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dbp.addr, metadata !3687, metadata !DIExpression()), !dbg !3712
  call void @llvm.lifetime.start.p0(i64 64, ptr %b) #11, !dbg !3713
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !3688, metadata !DIExpression()), !dbg !3714
  call void @llvm.lifetime.start.p0(i64 1024, ptr %namestr) #11, !dbg !3715
  tail call void @llvm.dbg.declare(metadata ptr %namestr, metadata !3689, metadata !DIExpression()), !dbg !3716
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !3717
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !3693, metadata !DIExpression()), !dbg !3718
  call void @llvm.lifetime.start.p0(i64 8, ptr %imp) #11, !dbg !3719
  tail call void @llvm.dbg.declare(metadata ptr %imp, metadata !3694, metadata !DIExpression()), !dbg !3720
  %0 = load ptr, ptr %driverarg.addr, align 8, !dbg !3721
  %cmp = icmp ne ptr %0, null, !dbg !3721
  %lnot = xor i1 %cmp, true, !dbg !3721
  %lnot1 = xor i1 %lnot, true, !dbg !3721
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3721
  %conv = sext i32 %lnot.ext to i64, !dbg !3721
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3721
  %tobool = icmp ne i64 %expval, 0, !dbg !3721
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3721

lor.rhs:                                          ; preds = %entry
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1706, i32 noundef 0, ptr noundef @.str.38) #12, !dbg !3721
  unreachable, !dbg !3721

1:                                                ; No predecessors!
  br label %lor.end, !dbg !3721

lor.end:                                          ; preds = %1, %entry
  %2 = phi i1 [ true, %entry ], [ false, %1 ]
  %lor.ext = zext i1 %2 to i32, !dbg !3721
  %3 = load ptr, ptr %name.addr, align 8, !dbg !3722
  %cmp2 = icmp ne ptr %3, null, !dbg !3722
  %lnot4 = xor i1 %cmp2, true, !dbg !3722
  %lnot6 = xor i1 %lnot4, true, !dbg !3722
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !3722
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !3722
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 1), !dbg !3722
  %tobool10 = icmp ne i64 %expval9, 0, !dbg !3722
  br i1 %tobool10, label %lor.end12, label %lor.rhs11, !dbg !3722

lor.rhs11:                                        ; preds = %lor.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1707, i32 noundef 0, ptr noundef @.str.46) #12, !dbg !3722
  unreachable, !dbg !3722

4:                                                ; No predecessors!
  br label %lor.end12, !dbg !3722

lor.end12:                                        ; preds = %4, %lor.end
  %5 = phi i1 [ true, %lor.end ], [ false, %4 ]
  %lor.ext13 = zext i1 %5 to i32, !dbg !3722
  %6 = load ptr, ptr %dbp.addr, align 8, !dbg !3723
  %cmp14 = icmp ne ptr %6, null, !dbg !3723
  br i1 %cmp14, label %land.rhs, label %land.end, !dbg !3723

land.rhs:                                         ; preds = %lor.end12
  %7 = load ptr, ptr %dbp.addr, align 8, !dbg !3723
  %8 = load ptr, ptr %7, align 8, !dbg !3723
  %cmp16 = icmp eq ptr %8, null, !dbg !3723
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end12
  %9 = phi i1 [ false, %lor.end12 ], [ %cmp16, %land.rhs ], !dbg !3724
  %lnot18 = xor i1 %9, true, !dbg !3723
  %lnot20 = xor i1 %lnot18, true, !dbg !3723
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !3723
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !3723
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 1), !dbg !3723
  %tobool24 = icmp ne i64 %expval23, 0, !dbg !3723
  br i1 %tobool24, label %lor.end26, label %lor.rhs25, !dbg !3723

lor.rhs25:                                        ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1708, i32 noundef 0, ptr noundef @.str.47) #12, !dbg !3723
  unreachable, !dbg !3723

10:                                               ; No predecessors!
  br label %lor.end26, !dbg !3723

lor.end26:                                        ; preds = %10, %land.end
  %11 = phi i1 [ true, %land.end ], [ false, %10 ]
  %lor.ext27 = zext i1 %11 to i32, !dbg !3723
  %12 = load ptr, ptr %driverarg.addr, align 8, !dbg !3725
  store ptr %12, ptr %imp, align 8, !dbg !3726
  br label %do.body, !dbg !3727

do.body:                                          ; preds = %lor.end26
  %arraydecay = getelementptr inbounds [1024 x i8], ptr %namestr, i64 0, i64 0, !dbg !3728
  %base = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 1, !dbg !3728
  store ptr %arraydecay, ptr %base, align 8, !dbg !3728
  %length = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 2, !dbg !3728
  store i32 1024, ptr %length, align 8, !dbg !3728
  %used = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !3728
  store i32 0, ptr %used, align 4, !dbg !3728
  %current = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 4, !dbg !3728
  store i32 0, ptr %current, align 8, !dbg !3728
  %active = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 5, !dbg !3728
  store i32 0, ptr %active, align 4, !dbg !3728
  %mctx28 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 7, !dbg !3728
  store ptr null, ptr %mctx28, align 8, !dbg !3728
  br label %do.body29, !dbg !3728

do.body29:                                        ; preds = %do.body
  %link = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !3730
  %prev = getelementptr inbounds %struct.anon.6, ptr %link, i32 0, i32 0, !dbg !3730
  store ptr inttoptr (i64 -1 to ptr), ptr %prev, align 8, !dbg !3730
  %link30 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !3730
  %next = getelementptr inbounds %struct.anon.6, ptr %link30, i32 0, i32 1, !dbg !3730
  store ptr inttoptr (i64 -1 to ptr), ptr %next, align 8, !dbg !3730
  br label %do.cond, !dbg !3730

do.cond:                                          ; preds = %do.body29
  br label %do.end, !dbg !3730

do.end:                                           ; preds = %do.cond
  %magic = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 0, !dbg !3728
  store i32 1114990113, ptr %magic, align 8, !dbg !3728
  %autore = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 8, !dbg !3728
  store i8 0, ptr %autore, align 8, !dbg !3728
  br label %do.cond31, !dbg !3728

do.cond31:                                        ; preds = %do.end
  br label %do.end32, !dbg !3728

do.end32:                                         ; preds = %do.cond31
  %13 = load ptr, ptr %name.addr, align 8, !dbg !3732
  %call = call i32 @dns_name_totext(ptr noundef %13, i1 noundef zeroext true, ptr noundef %b), !dbg !3733
  store i32 %call, ptr %result, align 4, !dbg !3734
  %14 = load i32, ptr %result, align 4, !dbg !3735
  %cmp33 = icmp ne i32 %14, 0, !dbg !3737
  br i1 %cmp33, label %if.then, label %if.end, !dbg !3738

if.then:                                          ; preds = %do.end32
  %15 = load i32, ptr %result, align 4, !dbg !3739
  store i32 %15, ptr %retval, align 4, !dbg !3740
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3740

if.end:                                           ; preds = %do.end32
  br label %do.body35, !dbg !3741

do.body35:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %_cp) #11, !dbg !3742
  tail call void @llvm.dbg.declare(metadata ptr %_cp, metadata !3695, metadata !DIExpression()), !dbg !3742
  call void @llvm.lifetime.start.p0(i64 1, ptr %_val2) #11, !dbg !3742
  tail call void @llvm.dbg.declare(metadata ptr %_val2, metadata !3697, metadata !DIExpression()), !dbg !3742
  store i8 0, ptr %_val2, align 1, !dbg !3742
  %autore36 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 8, !dbg !3743
  %16 = load i8, ptr %autore36, align 8, !dbg !3743, !range !2769, !noundef !2770
  %tobool37 = trunc i8 %16 to i1, !dbg !3743
  %lnot38 = xor i1 %tobool37, true, !dbg !3743
  %lnot40 = xor i1 %lnot38, true, !dbg !3743
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !3743
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !3743
  %expval43 = call i64 @llvm.expect.i64(i64 %conv42, i64 0), !dbg !3743
  %tobool44 = icmp ne i64 %expval43, 0, !dbg !3743
  br i1 %tobool44, label %if.then45, label %if.end59, !dbg !3742

if.then45:                                        ; preds = %do.body35
  call void @llvm.lifetime.start.p0(i64 8, ptr %_tmp) #11, !dbg !3744
  tail call void @llvm.dbg.declare(metadata ptr %_tmp, metadata !3698, metadata !DIExpression()), !dbg !3744
  store ptr %b, ptr %_tmp, align 8, !dbg !3744
  %call46 = call i32 @isc_buffer_reserve(ptr noundef %_tmp, i32 noundef 1), !dbg !3744
  %cmp47 = icmp eq i32 %call46, 0, !dbg !3744
  %lnot49 = xor i1 %cmp47, true, !dbg !3744
  %lnot51 = xor i1 %lnot49, true, !dbg !3744
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !3744
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !3744
  %expval54 = call i64 @llvm.expect.i64(i64 %conv53, i64 1), !dbg !3744
  %tobool55 = icmp ne i64 %expval54, 0, !dbg !3744
  br i1 %tobool55, label %lor.end57, label %lor.rhs56, !dbg !3744

lor.rhs56:                                        ; preds = %if.then45
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1717, i32 noundef 0, ptr noundef @.str.48) #12, !dbg !3744
  unreachable, !dbg !3744

17:                                               ; No predecessors!
  br label %lor.end57, !dbg !3744

lor.end57:                                        ; preds = %17, %if.then45
  %18 = phi i1 [ true, %if.then45 ], [ false, %17 ]
  %lor.ext58 = zext i1 %18 to i32, !dbg !3744
  call void @llvm.lifetime.end.p0(i64 8, ptr %_tmp) #11, !dbg !3743
  br label %if.end59, !dbg !3744

if.end59:                                         ; preds = %lor.end57, %do.body35
  %length60 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 2, !dbg !3742
  %19 = load i32, ptr %length60, align 8, !dbg !3742
  %used61 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !3742
  %20 = load i32, ptr %used61, align 4, !dbg !3742
  %sub = sub i32 %19, %20, !dbg !3742
  %cmp62 = icmp uge i32 %sub, 1, !dbg !3742
  %lnot64 = xor i1 %cmp62, true, !dbg !3742
  %lnot66 = xor i1 %lnot64, true, !dbg !3742
  %lnot.ext67 = zext i1 %lnot66 to i32, !dbg !3742
  %conv68 = sext i32 %lnot.ext67 to i64, !dbg !3742
  %expval69 = call i64 @llvm.expect.i64(i64 %conv68, i64 1), !dbg !3742
  %tobool70 = icmp ne i64 %expval69, 0, !dbg !3742
  br i1 %tobool70, label %lor.end72, label %lor.rhs71, !dbg !3742

lor.rhs71:                                        ; preds = %if.end59
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1717, i32 noundef 0, ptr noundef @.str.49) #12, !dbg !3742
  unreachable, !dbg !3742

21:                                               ; No predecessors!
  br label %lor.end72, !dbg !3742

lor.end72:                                        ; preds = %21, %if.end59
  %22 = phi i1 [ true, %if.end59 ], [ false, %21 ]
  %lor.ext73 = zext i1 %22 to i32, !dbg !3742
  %base74 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 1, !dbg !3742
  %23 = load ptr, ptr %base74, align 8, !dbg !3742
  %used75 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !3742
  %24 = load i32, ptr %used75, align 4, !dbg !3742
  %idx.ext = zext i32 %24 to i64, !dbg !3742
  %add.ptr = getelementptr inbounds i8, ptr %23, i64 %idx.ext, !dbg !3742
  store ptr %add.ptr, ptr %_cp, align 8, !dbg !3742
  %used76 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !3742
  %25 = load i32, ptr %used76, align 4, !dbg !3742
  %inc = add i32 %25, 1, !dbg !3742
  store i32 %inc, ptr %used76, align 4, !dbg !3742
  %26 = load i8, ptr %_val2, align 1, !dbg !3742
  %27 = load ptr, ptr %_cp, align 8, !dbg !3742
  %arrayidx = getelementptr inbounds i8, ptr %27, i64 0, !dbg !3742
  store i8 %26, ptr %arrayidx, align 1, !dbg !3742
  call void @llvm.lifetime.end.p0(i64 1, ptr %_val2) #11, !dbg !3741
  call void @llvm.lifetime.end.p0(i64 8, ptr %_cp) #11, !dbg !3741
  br label %do.cond77, !dbg !3742

do.cond77:                                        ; preds = %lor.end72
  br label %do.end78, !dbg !3742

do.end78:                                         ; preds = %do.cond77
  %arraydecay79 = getelementptr inbounds [1024 x i8], ptr %namestr, i64 0, i64 0, !dbg !3745
  call void @dns_sdlz_tolower(ptr noundef %arraydecay79), !dbg !3746
  br label %do.body80, !dbg !3747

do.body80:                                        ; preds = %do.end78
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags) #11, !dbg !3748
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !3701, metadata !DIExpression()), !dbg !3748
  %28 = load ptr, ptr %imp, align 8, !dbg !3748
  %flags81 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %28, i32 0, i32 3, !dbg !3748
  %29 = load i32, ptr %flags81, align 8, !dbg !3748
  store i32 %29, ptr %flags, align 4, !dbg !3748
  %30 = load i32, ptr %flags, align 4, !dbg !3749
  %and = and i32 %30, 1, !dbg !3749
  %cmp82 = icmp eq i32 %and, 0, !dbg !3749
  br i1 %cmp82, label %if.then84, label %if.end103, !dbg !3748

if.then84:                                        ; preds = %do.body80
  br label %do.body85, !dbg !3749

do.body85:                                        ; preds = %if.then84
  %31 = load ptr, ptr %imp, align 8, !dbg !3751
  %driverlock = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %31, i32 0, i32 4, !dbg !3751
  %call86 = call i32 @pthread_mutex_lock(ptr noundef %driverlock) #11, !dbg !3751
  %cmp87 = icmp eq i32 %call86, 0, !dbg !3751
  %32 = zext i1 %cmp87 to i64, !dbg !3751
  %cond = select i1 %cmp87, i32 0, i32 34, !dbg !3751
  %cmp89 = icmp eq i32 %cond, 0, !dbg !3751
  %lnot91 = xor i1 %cmp89, true, !dbg !3751
  %lnot93 = xor i1 %lnot91, true, !dbg !3751
  %lnot.ext94 = zext i1 %lnot93 to i32, !dbg !3751
  %conv95 = sext i32 %lnot.ext94 to i64, !dbg !3751
  %expval96 = call i64 @llvm.expect.i64(i64 %conv95, i64 1), !dbg !3751
  %tobool97 = icmp ne i64 %expval96, 0, !dbg !3751
  br i1 %tobool97, label %lor.end99, label %lor.rhs98, !dbg !3751

lor.rhs98:                                        ; preds = %do.body85
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1723, ptr noundef @.str.41) #12, !dbg !3751
  unreachable, !dbg !3751

33:                                               ; No predecessors!
  br label %lor.end99, !dbg !3751

lor.end99:                                        ; preds = %33, %do.body85
  %34 = phi i1 [ true, %do.body85 ], [ false, %33 ]
  %lor.ext100 = zext i1 %34 to i32, !dbg !3751
  br label %do.cond101, !dbg !3751

do.cond101:                                       ; preds = %lor.end99
  br label %do.end102, !dbg !3751

do.end102:                                        ; preds = %do.cond101
  br label %if.end103, !dbg !3751

if.end103:                                        ; preds = %do.end102, %do.body80
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags) #11, !dbg !3747
  br label %do.cond104, !dbg !3748

do.cond104:                                       ; preds = %if.end103
  br label %do.end105, !dbg !3748

do.end105:                                        ; preds = %do.cond104
  %35 = load ptr, ptr %imp, align 8, !dbg !3753
  %methods106 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %35, i32 0, i32 0, !dbg !3754
  %36 = load ptr, ptr %methods106, align 8, !dbg !3754
  %findzone = getelementptr inbounds %struct.dns_sdlzmethods, ptr %36, i32 0, i32 2, !dbg !3755
  %37 = load ptr, ptr %findzone, align 8, !dbg !3755
  %38 = load ptr, ptr %imp, align 8, !dbg !3756
  %driverarg107 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %38, i32 0, i32 2, !dbg !3757
  %39 = load ptr, ptr %driverarg107, align 8, !dbg !3757
  %40 = load ptr, ptr %dbdata.addr, align 8, !dbg !3758
  %arraydecay108 = getelementptr inbounds [1024 x i8], ptr %namestr, i64 0, i64 0, !dbg !3759
  %41 = load ptr, ptr %methods.addr, align 8, !dbg !3760
  %42 = load ptr, ptr %clientinfo.addr, align 8, !dbg !3761
  %call109 = call i32 %37(ptr noundef %39, ptr noundef %40, ptr noundef %arraydecay108, ptr noundef %41, ptr noundef %42), !dbg !3753
  store i32 %call109, ptr %result, align 4, !dbg !3762
  br label %do.body110, !dbg !3763

do.body110:                                       ; preds = %do.end105
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags111) #11, !dbg !3764
  tail call void @llvm.dbg.declare(metadata ptr %flags111, metadata !3703, metadata !DIExpression()), !dbg !3764
  %43 = load ptr, ptr %imp, align 8, !dbg !3764
  %flags112 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %43, i32 0, i32 3, !dbg !3764
  %44 = load i32, ptr %flags112, align 8, !dbg !3764
  store i32 %44, ptr %flags111, align 4, !dbg !3764
  %45 = load i32, ptr %flags111, align 4, !dbg !3765
  %and113 = and i32 %45, 1, !dbg !3765
  %cmp114 = icmp eq i32 %and113, 0, !dbg !3765
  br i1 %cmp114, label %if.then116, label %if.end137, !dbg !3764

if.then116:                                       ; preds = %do.body110
  br label %do.body117, !dbg !3765

do.body117:                                       ; preds = %if.then116
  %46 = load ptr, ptr %imp, align 8, !dbg !3767
  %driverlock118 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %46, i32 0, i32 4, !dbg !3767
  %call119 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock118) #11, !dbg !3767
  %cmp120 = icmp eq i32 %call119, 0, !dbg !3767
  %47 = zext i1 %cmp120 to i64, !dbg !3767
  %cond122 = select i1 %cmp120, i32 0, i32 34, !dbg !3767
  %cmp123 = icmp eq i32 %cond122, 0, !dbg !3767
  %lnot125 = xor i1 %cmp123, true, !dbg !3767
  %lnot127 = xor i1 %lnot125, true, !dbg !3767
  %lnot.ext128 = zext i1 %lnot127 to i32, !dbg !3767
  %conv129 = sext i32 %lnot.ext128 to i64, !dbg !3767
  %expval130 = call i64 @llvm.expect.i64(i64 %conv129, i64 1), !dbg !3767
  %tobool131 = icmp ne i64 %expval130, 0, !dbg !3767
  br i1 %tobool131, label %lor.end133, label %lor.rhs132, !dbg !3767

lor.rhs132:                                       ; preds = %do.body117
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1726, ptr noundef @.str.42) #12, !dbg !3767
  unreachable, !dbg !3767

48:                                               ; No predecessors!
  br label %lor.end133, !dbg !3767

lor.end133:                                       ; preds = %48, %do.body117
  %49 = phi i1 [ true, %do.body117 ], [ false, %48 ]
  %lor.ext134 = zext i1 %49 to i32, !dbg !3767
  br label %do.cond135, !dbg !3767

do.cond135:                                       ; preds = %lor.end133
  br label %do.end136, !dbg !3767

do.end136:                                        ; preds = %do.cond135
  br label %if.end137, !dbg !3767

if.end137:                                        ; preds = %do.end136, %do.body110
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags111) #11, !dbg !3763
  br label %do.cond138, !dbg !3764

do.cond138:                                       ; preds = %if.end137
  br label %do.end139, !dbg !3764

do.end139:                                        ; preds = %do.cond138
  %50 = load i32, ptr %result, align 4, !dbg !3769
  %cmp140 = icmp eq i32 %50, 0, !dbg !3771
  br i1 %cmp140, label %if.then142, label %if.end144, !dbg !3772

if.then142:                                       ; preds = %do.end139
  %51 = load ptr, ptr %mctx.addr, align 8, !dbg !3773
  %52 = load ptr, ptr %driverarg.addr, align 8, !dbg !3774
  %53 = load ptr, ptr %dbdata.addr, align 8, !dbg !3775
  %54 = load ptr, ptr %name.addr, align 8, !dbg !3776
  %55 = load i16, ptr %rdclass.addr, align 2, !dbg !3777
  %56 = load ptr, ptr %dbp.addr, align 8, !dbg !3778
  %call143 = call i32 @dns_sdlzcreateDBP(ptr noundef %51, ptr noundef %52, ptr noundef %53, ptr noundef %54, i16 noundef zeroext %55, ptr noundef %56), !dbg !3779
  store i32 %call143, ptr %result, align 4, !dbg !3780
  br label %if.end144, !dbg !3781

if.end144:                                        ; preds = %if.then142, %do.end139
  %57 = load i32, ptr %result, align 4, !dbg !3782
  store i32 %57, ptr %retval, align 4, !dbg !3783
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3783

cleanup:                                          ; preds = %if.end144, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %imp) #11, !dbg !3784
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !3784
  call void @llvm.lifetime.end.p0(i64 1024, ptr %namestr) #11, !dbg !3784
  call void @llvm.lifetime.end.p0(i64 64, ptr %b) #11, !dbg !3784
  %58 = load i32, ptr %retval, align 4, !dbg !3784
  ret i32 %58, !dbg !3784
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dns_sdlzallowzonexfr(ptr noundef %driverarg, ptr noundef %dbdata, ptr noundef %mctx, i16 noundef zeroext %rdclass, ptr noundef %name, ptr noundef %clientaddr, ptr noundef %dbp) #0 !dbg !3785 {
entry:
  %retval = alloca i32, align 4
  %driverarg.addr = alloca ptr, align 8
  %dbdata.addr = alloca ptr, align 8
  %mctx.addr = alloca ptr, align 8
  %rdclass.addr = alloca i16, align 2
  %name.addr = alloca ptr, align 8
  %clientaddr.addr = alloca ptr, align 8
  %dbp.addr = alloca ptr, align 8
  %b = alloca %struct.isc_buffer, align 8
  %b2 = alloca %struct.isc_buffer, align 8
  %namestr = alloca [1024 x i8], align 16
  %clientstr = alloca [47 x i8], align 16
  %netaddr = alloca %struct.isc_netaddr, align 4
  %result = alloca i32, align 4
  %imp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %_cp = alloca ptr, align 8
  %_val2 = alloca i8, align 1
  %_tmp = alloca ptr, align 8
  %_cp116 = alloca ptr, align 8
  %_val2117 = alloca i8, align 1
  %_tmp128 = alloca ptr, align 8
  %flags = alloca i32, align 4
  %flags205 = alloca i32, align 4
  store ptr %driverarg, ptr %driverarg.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %driverarg.addr, metadata !3787, metadata !DIExpression()), !dbg !3820
  store ptr %dbdata, ptr %dbdata.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dbdata.addr, metadata !3788, metadata !DIExpression()), !dbg !3821
  store ptr %mctx, ptr %mctx.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %mctx.addr, metadata !3789, metadata !DIExpression()), !dbg !3822
  store i16 %rdclass, ptr %rdclass.addr, align 2
  tail call void @llvm.dbg.declare(metadata ptr %rdclass.addr, metadata !3790, metadata !DIExpression()), !dbg !3823
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !3791, metadata !DIExpression()), !dbg !3824
  store ptr %clientaddr, ptr %clientaddr.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %clientaddr.addr, metadata !3792, metadata !DIExpression()), !dbg !3825
  store ptr %dbp, ptr %dbp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dbp.addr, metadata !3793, metadata !DIExpression()), !dbg !3826
  call void @llvm.lifetime.start.p0(i64 64, ptr %b) #11, !dbg !3827
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !3794, metadata !DIExpression()), !dbg !3828
  call void @llvm.lifetime.start.p0(i64 64, ptr %b2) #11, !dbg !3829
  tail call void @llvm.dbg.declare(metadata ptr %b2, metadata !3795, metadata !DIExpression()), !dbg !3830
  call void @llvm.lifetime.start.p0(i64 1024, ptr %namestr) #11, !dbg !3831
  tail call void @llvm.dbg.declare(metadata ptr %namestr, metadata !3796, metadata !DIExpression()), !dbg !3832
  call void @llvm.lifetime.start.p0(i64 47, ptr %clientstr) #11, !dbg !3833
  tail call void @llvm.dbg.declare(metadata ptr %clientstr, metadata !3797, metadata !DIExpression()), !dbg !3834
  call void @llvm.lifetime.start.p0(i64 116, ptr %netaddr) #11, !dbg !3835
  tail call void @llvm.dbg.declare(metadata ptr %netaddr, metadata !3799, metadata !DIExpression()), !dbg !3836
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !3837
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !3800, metadata !DIExpression()), !dbg !3838
  call void @llvm.lifetime.start.p0(i64 8, ptr %imp) #11, !dbg !3839
  tail call void @llvm.dbg.declare(metadata ptr %imp, metadata !3801, metadata !DIExpression()), !dbg !3840
  %0 = load ptr, ptr %driverarg.addr, align 8, !dbg !3841
  %cmp = icmp ne ptr %0, null, !dbg !3841
  %lnot = xor i1 %cmp, true, !dbg !3841
  %lnot1 = xor i1 %lnot, true, !dbg !3841
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3841
  %conv = sext i32 %lnot.ext to i64, !dbg !3841
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3841
  %tobool = icmp ne i64 %expval, 0, !dbg !3841
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3841

lor.rhs:                                          ; preds = %entry
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1591, i32 noundef 0, ptr noundef @.str.38) #12, !dbg !3841
  unreachable, !dbg !3841

1:                                                ; No predecessors!
  br label %lor.end, !dbg !3841

lor.end:                                          ; preds = %1, %entry
  %2 = phi i1 [ true, %entry ], [ false, %1 ]
  %lor.ext = zext i1 %2 to i32, !dbg !3841
  %3 = load ptr, ptr %name.addr, align 8, !dbg !3842
  %cmp2 = icmp ne ptr %3, null, !dbg !3842
  %lnot4 = xor i1 %cmp2, true, !dbg !3842
  %lnot6 = xor i1 %lnot4, true, !dbg !3842
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !3842
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !3842
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 1), !dbg !3842
  %tobool10 = icmp ne i64 %expval9, 0, !dbg !3842
  br i1 %tobool10, label %lor.end12, label %lor.rhs11, !dbg !3842

lor.rhs11:                                        ; preds = %lor.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1592, i32 noundef 0, ptr noundef @.str.46) #12, !dbg !3842
  unreachable, !dbg !3842

4:                                                ; No predecessors!
  br label %lor.end12, !dbg !3842

lor.end12:                                        ; preds = %4, %lor.end
  %5 = phi i1 [ true, %lor.end ], [ false, %4 ]
  %lor.ext13 = zext i1 %5 to i32, !dbg !3842
  %6 = load ptr, ptr %clientaddr.addr, align 8, !dbg !3843
  %cmp14 = icmp ne ptr %6, null, !dbg !3843
  %lnot16 = xor i1 %cmp14, true, !dbg !3843
  %lnot18 = xor i1 %lnot16, true, !dbg !3843
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !3843
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !3843
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 1), !dbg !3843
  %tobool22 = icmp ne i64 %expval21, 0, !dbg !3843
  br i1 %tobool22, label %lor.end24, label %lor.rhs23, !dbg !3843

lor.rhs23:                                        ; preds = %lor.end12
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1593, i32 noundef 0, ptr noundef @.str.50) #12, !dbg !3843
  unreachable, !dbg !3843

7:                                                ; No predecessors!
  br label %lor.end24, !dbg !3843

lor.end24:                                        ; preds = %7, %lor.end12
  %8 = phi i1 [ true, %lor.end12 ], [ false, %7 ]
  %lor.ext25 = zext i1 %8 to i32, !dbg !3843
  %9 = load ptr, ptr %dbp.addr, align 8, !dbg !3844
  %cmp26 = icmp ne ptr %9, null, !dbg !3844
  br i1 %cmp26, label %land.rhs, label %land.end, !dbg !3844

land.rhs:                                         ; preds = %lor.end24
  %10 = load ptr, ptr %dbp.addr, align 8, !dbg !3844
  %11 = load ptr, ptr %10, align 8, !dbg !3844
  %cmp28 = icmp eq ptr %11, null, !dbg !3844
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end24
  %12 = phi i1 [ false, %lor.end24 ], [ %cmp28, %land.rhs ], !dbg !3845
  %lnot30 = xor i1 %12, true, !dbg !3844
  %lnot32 = xor i1 %lnot30, true, !dbg !3844
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !3844
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !3844
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 1), !dbg !3844
  %tobool36 = icmp ne i64 %expval35, 0, !dbg !3844
  br i1 %tobool36, label %lor.end38, label %lor.rhs37, !dbg !3844

lor.rhs37:                                        ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1594, i32 noundef 0, ptr noundef @.str.47) #12, !dbg !3844
  unreachable, !dbg !3844

13:                                               ; No predecessors!
  br label %lor.end38, !dbg !3844

lor.end38:                                        ; preds = %13, %land.end
  %14 = phi i1 [ true, %land.end ], [ false, %13 ]
  %lor.ext39 = zext i1 %14 to i32, !dbg !3844
  %15 = load ptr, ptr %driverarg.addr, align 8, !dbg !3846
  store ptr %15, ptr %imp, align 8, !dbg !3847
  br label %do.body, !dbg !3848

do.body:                                          ; preds = %lor.end38
  %arraydecay = getelementptr inbounds [1024 x i8], ptr %namestr, i64 0, i64 0, !dbg !3849
  %base = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 1, !dbg !3849
  store ptr %arraydecay, ptr %base, align 8, !dbg !3849
  %length = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 2, !dbg !3849
  store i32 1024, ptr %length, align 8, !dbg !3849
  %used = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !3849
  store i32 0, ptr %used, align 4, !dbg !3849
  %current = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 4, !dbg !3849
  store i32 0, ptr %current, align 8, !dbg !3849
  %active = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 5, !dbg !3849
  store i32 0, ptr %active, align 4, !dbg !3849
  %mctx40 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 7, !dbg !3849
  store ptr null, ptr %mctx40, align 8, !dbg !3849
  br label %do.body41, !dbg !3849

do.body41:                                        ; preds = %do.body
  %link = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !3851
  %prev = getelementptr inbounds %struct.anon.6, ptr %link, i32 0, i32 0, !dbg !3851
  store ptr inttoptr (i64 -1 to ptr), ptr %prev, align 8, !dbg !3851
  %link42 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !3851
  %next = getelementptr inbounds %struct.anon.6, ptr %link42, i32 0, i32 1, !dbg !3851
  store ptr inttoptr (i64 -1 to ptr), ptr %next, align 8, !dbg !3851
  br label %do.cond, !dbg !3851

do.cond:                                          ; preds = %do.body41
  br label %do.end, !dbg !3851

do.end:                                           ; preds = %do.cond
  %magic = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 0, !dbg !3849
  store i32 1114990113, ptr %magic, align 8, !dbg !3849
  %autore = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 8, !dbg !3849
  store i8 0, ptr %autore, align 8, !dbg !3849
  br label %do.cond43, !dbg !3849

do.cond43:                                        ; preds = %do.end
  br label %do.end44, !dbg !3849

do.end44:                                         ; preds = %do.cond43
  %16 = load ptr, ptr %name.addr, align 8, !dbg !3853
  %call = call i32 @dns_name_totext(ptr noundef %16, i1 noundef zeroext true, ptr noundef %b), !dbg !3854
  store i32 %call, ptr %result, align 4, !dbg !3855
  %17 = load i32, ptr %result, align 4, !dbg !3856
  %cmp45 = icmp ne i32 %17, 0, !dbg !3858
  br i1 %cmp45, label %if.then, label %if.end, !dbg !3859

if.then:                                          ; preds = %do.end44
  %18 = load i32, ptr %result, align 4, !dbg !3860
  store i32 %18, ptr %retval, align 4, !dbg !3861
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3861

if.end:                                           ; preds = %do.end44
  br label %do.body47, !dbg !3862

do.body47:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %_cp) #11, !dbg !3863
  tail call void @llvm.dbg.declare(metadata ptr %_cp, metadata !3802, metadata !DIExpression()), !dbg !3863
  call void @llvm.lifetime.start.p0(i64 1, ptr %_val2) #11, !dbg !3863
  tail call void @llvm.dbg.declare(metadata ptr %_val2, metadata !3804, metadata !DIExpression()), !dbg !3863
  store i8 0, ptr %_val2, align 1, !dbg !3863
  %autore48 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 8, !dbg !3864
  %19 = load i8, ptr %autore48, align 8, !dbg !3864, !range !2769, !noundef !2770
  %tobool49 = trunc i8 %19 to i1, !dbg !3864
  %lnot50 = xor i1 %tobool49, true, !dbg !3864
  %lnot52 = xor i1 %lnot50, true, !dbg !3864
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !3864
  %conv54 = sext i32 %lnot.ext53 to i64, !dbg !3864
  %expval55 = call i64 @llvm.expect.i64(i64 %conv54, i64 0), !dbg !3864
  %tobool56 = icmp ne i64 %expval55, 0, !dbg !3864
  br i1 %tobool56, label %if.then57, label %if.end71, !dbg !3863

if.then57:                                        ; preds = %do.body47
  call void @llvm.lifetime.start.p0(i64 8, ptr %_tmp) #11, !dbg !3865
  tail call void @llvm.dbg.declare(metadata ptr %_tmp, metadata !3805, metadata !DIExpression()), !dbg !3865
  store ptr %b, ptr %_tmp, align 8, !dbg !3865
  %call58 = call i32 @isc_buffer_reserve(ptr noundef %_tmp, i32 noundef 1), !dbg !3865
  %cmp59 = icmp eq i32 %call58, 0, !dbg !3865
  %lnot61 = xor i1 %cmp59, true, !dbg !3865
  %lnot63 = xor i1 %lnot61, true, !dbg !3865
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !3865
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !3865
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 1), !dbg !3865
  %tobool67 = icmp ne i64 %expval66, 0, !dbg !3865
  br i1 %tobool67, label %lor.end69, label %lor.rhs68, !dbg !3865

lor.rhs68:                                        ; preds = %if.then57
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1603, i32 noundef 0, ptr noundef @.str.48) #12, !dbg !3865
  unreachable, !dbg !3865

20:                                               ; No predecessors!
  br label %lor.end69, !dbg !3865

lor.end69:                                        ; preds = %20, %if.then57
  %21 = phi i1 [ true, %if.then57 ], [ false, %20 ]
  %lor.ext70 = zext i1 %21 to i32, !dbg !3865
  call void @llvm.lifetime.end.p0(i64 8, ptr %_tmp) #11, !dbg !3864
  br label %if.end71, !dbg !3865

if.end71:                                         ; preds = %lor.end69, %do.body47
  %length72 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 2, !dbg !3863
  %22 = load i32, ptr %length72, align 8, !dbg !3863
  %used73 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !3863
  %23 = load i32, ptr %used73, align 4, !dbg !3863
  %sub = sub i32 %22, %23, !dbg !3863
  %cmp74 = icmp uge i32 %sub, 1, !dbg !3863
  %lnot76 = xor i1 %cmp74, true, !dbg !3863
  %lnot78 = xor i1 %lnot76, true, !dbg !3863
  %lnot.ext79 = zext i1 %lnot78 to i32, !dbg !3863
  %conv80 = sext i32 %lnot.ext79 to i64, !dbg !3863
  %expval81 = call i64 @llvm.expect.i64(i64 %conv80, i64 1), !dbg !3863
  %tobool82 = icmp ne i64 %expval81, 0, !dbg !3863
  br i1 %tobool82, label %lor.end84, label %lor.rhs83, !dbg !3863

lor.rhs83:                                        ; preds = %if.end71
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1603, i32 noundef 0, ptr noundef @.str.49) #12, !dbg !3863
  unreachable, !dbg !3863

24:                                               ; No predecessors!
  br label %lor.end84, !dbg !3863

lor.end84:                                        ; preds = %24, %if.end71
  %25 = phi i1 [ true, %if.end71 ], [ false, %24 ]
  %lor.ext85 = zext i1 %25 to i32, !dbg !3863
  %base86 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 1, !dbg !3863
  %26 = load ptr, ptr %base86, align 8, !dbg !3863
  %used87 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !3863
  %27 = load i32, ptr %used87, align 4, !dbg !3863
  %idx.ext = zext i32 %27 to i64, !dbg !3863
  %add.ptr = getelementptr inbounds i8, ptr %26, i64 %idx.ext, !dbg !3863
  store ptr %add.ptr, ptr %_cp, align 8, !dbg !3863
  %used88 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !3863
  %28 = load i32, ptr %used88, align 4, !dbg !3863
  %inc = add i32 %28, 1, !dbg !3863
  store i32 %inc, ptr %used88, align 4, !dbg !3863
  %29 = load i8, ptr %_val2, align 1, !dbg !3863
  %30 = load ptr, ptr %_cp, align 8, !dbg !3863
  %arrayidx = getelementptr inbounds i8, ptr %30, i64 0, !dbg !3863
  store i8 %29, ptr %arrayidx, align 1, !dbg !3863
  call void @llvm.lifetime.end.p0(i64 1, ptr %_val2) #11, !dbg !3862
  call void @llvm.lifetime.end.p0(i64 8, ptr %_cp) #11, !dbg !3862
  br label %do.cond89, !dbg !3863

do.cond89:                                        ; preds = %lor.end84
  br label %do.end90, !dbg !3863

do.end90:                                         ; preds = %do.cond89
  br label %do.body91, !dbg !3866

do.body91:                                        ; preds = %do.end90
  %arraydecay92 = getelementptr inbounds [47 x i8], ptr %clientstr, i64 0, i64 0, !dbg !3867
  %base93 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 1, !dbg !3867
  store ptr %arraydecay92, ptr %base93, align 8, !dbg !3867
  %length94 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 2, !dbg !3867
  store i32 47, ptr %length94, align 8, !dbg !3867
  %used95 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 3, !dbg !3867
  store i32 0, ptr %used95, align 4, !dbg !3867
  %current96 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 4, !dbg !3867
  store i32 0, ptr %current96, align 8, !dbg !3867
  %active97 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 5, !dbg !3867
  store i32 0, ptr %active97, align 4, !dbg !3867
  %mctx98 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 7, !dbg !3867
  store ptr null, ptr %mctx98, align 8, !dbg !3867
  br label %do.body99, !dbg !3867

do.body99:                                        ; preds = %do.body91
  %link100 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 6, !dbg !3869
  %prev101 = getelementptr inbounds %struct.anon.6, ptr %link100, i32 0, i32 0, !dbg !3869
  store ptr inttoptr (i64 -1 to ptr), ptr %prev101, align 8, !dbg !3869
  %link102 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 6, !dbg !3869
  %next103 = getelementptr inbounds %struct.anon.6, ptr %link102, i32 0, i32 1, !dbg !3869
  store ptr inttoptr (i64 -1 to ptr), ptr %next103, align 8, !dbg !3869
  br label %do.cond104, !dbg !3869

do.cond104:                                       ; preds = %do.body99
  br label %do.end105, !dbg !3869

do.end105:                                        ; preds = %do.cond104
  %magic106 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 0, !dbg !3867
  store i32 1114990113, ptr %magic106, align 8, !dbg !3867
  %autore107 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 8, !dbg !3867
  store i8 0, ptr %autore107, align 8, !dbg !3867
  br label %do.cond108, !dbg !3867

do.cond108:                                       ; preds = %do.end105
  br label %do.end109, !dbg !3867

do.end109:                                        ; preds = %do.cond108
  %31 = load ptr, ptr %clientaddr.addr, align 8, !dbg !3871
  call void @isc_netaddr_fromsockaddr(ptr noundef %netaddr, ptr noundef %31), !dbg !3872
  %call110 = call i32 @isc_netaddr_totext(ptr noundef %netaddr, ptr noundef %b2), !dbg !3873
  store i32 %call110, ptr %result, align 4, !dbg !3874
  %32 = load i32, ptr %result, align 4, !dbg !3875
  %cmp111 = icmp ne i32 %32, 0, !dbg !3877
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !3878

if.then113:                                       ; preds = %do.end109
  %33 = load i32, ptr %result, align 4, !dbg !3879
  store i32 %33, ptr %retval, align 4, !dbg !3880
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3880

if.end114:                                        ; preds = %do.end109
  br label %do.body115, !dbg !3881

do.body115:                                       ; preds = %if.end114
  call void @llvm.lifetime.start.p0(i64 8, ptr %_cp116) #11, !dbg !3882
  tail call void @llvm.dbg.declare(metadata ptr %_cp116, metadata !3808, metadata !DIExpression()), !dbg !3882
  call void @llvm.lifetime.start.p0(i64 1, ptr %_val2117) #11, !dbg !3882
  tail call void @llvm.dbg.declare(metadata ptr %_val2117, metadata !3810, metadata !DIExpression()), !dbg !3882
  store i8 0, ptr %_val2117, align 1, !dbg !3882
  %autore118 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 8, !dbg !3883
  %34 = load i8, ptr %autore118, align 8, !dbg !3883, !range !2769, !noundef !2770
  %tobool119 = trunc i8 %34 to i1, !dbg !3883
  %lnot120 = xor i1 %tobool119, true, !dbg !3883
  %lnot122 = xor i1 %lnot120, true, !dbg !3883
  %lnot.ext123 = zext i1 %lnot122 to i32, !dbg !3883
  %conv124 = sext i32 %lnot.ext123 to i64, !dbg !3883
  %expval125 = call i64 @llvm.expect.i64(i64 %conv124, i64 0), !dbg !3883
  %tobool126 = icmp ne i64 %expval125, 0, !dbg !3883
  br i1 %tobool126, label %if.then127, label %if.end142, !dbg !3882

if.then127:                                       ; preds = %do.body115
  call void @llvm.lifetime.start.p0(i64 8, ptr %_tmp128) #11, !dbg !3884
  tail call void @llvm.dbg.declare(metadata ptr %_tmp128, metadata !3811, metadata !DIExpression()), !dbg !3884
  store ptr %b2, ptr %_tmp128, align 8, !dbg !3884
  %call129 = call i32 @isc_buffer_reserve(ptr noundef %_tmp128, i32 noundef 1), !dbg !3884
  %cmp130 = icmp eq i32 %call129, 0, !dbg !3884
  %lnot132 = xor i1 %cmp130, true, !dbg !3884
  %lnot134 = xor i1 %lnot132, true, !dbg !3884
  %lnot.ext135 = zext i1 %lnot134 to i32, !dbg !3884
  %conv136 = sext i32 %lnot.ext135 to i64, !dbg !3884
  %expval137 = call i64 @llvm.expect.i64(i64 %conv136, i64 1), !dbg !3884
  %tobool138 = icmp ne i64 %expval137, 0, !dbg !3884
  br i1 %tobool138, label %lor.end140, label %lor.rhs139, !dbg !3884

lor.rhs139:                                       ; preds = %if.then127
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1611, i32 noundef 0, ptr noundef @.str.48) #12, !dbg !3884
  unreachable, !dbg !3884

35:                                               ; No predecessors!
  br label %lor.end140, !dbg !3884

lor.end140:                                       ; preds = %35, %if.then127
  %36 = phi i1 [ true, %if.then127 ], [ false, %35 ]
  %lor.ext141 = zext i1 %36 to i32, !dbg !3884
  call void @llvm.lifetime.end.p0(i64 8, ptr %_tmp128) #11, !dbg !3883
  br label %if.end142, !dbg !3884

if.end142:                                        ; preds = %lor.end140, %do.body115
  %length143 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 2, !dbg !3882
  %37 = load i32, ptr %length143, align 8, !dbg !3882
  %used144 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 3, !dbg !3882
  %38 = load i32, ptr %used144, align 4, !dbg !3882
  %sub145 = sub i32 %37, %38, !dbg !3882
  %cmp146 = icmp uge i32 %sub145, 1, !dbg !3882
  %lnot148 = xor i1 %cmp146, true, !dbg !3882
  %lnot150 = xor i1 %lnot148, true, !dbg !3882
  %lnot.ext151 = zext i1 %lnot150 to i32, !dbg !3882
  %conv152 = sext i32 %lnot.ext151 to i64, !dbg !3882
  %expval153 = call i64 @llvm.expect.i64(i64 %conv152, i64 1), !dbg !3882
  %tobool154 = icmp ne i64 %expval153, 0, !dbg !3882
  br i1 %tobool154, label %lor.end156, label %lor.rhs155, !dbg !3882

lor.rhs155:                                       ; preds = %if.end142
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1611, i32 noundef 0, ptr noundef @.str.51) #12, !dbg !3882
  unreachable, !dbg !3882

39:                                               ; No predecessors!
  br label %lor.end156, !dbg !3882

lor.end156:                                       ; preds = %39, %if.end142
  %40 = phi i1 [ true, %if.end142 ], [ false, %39 ]
  %lor.ext157 = zext i1 %40 to i32, !dbg !3882
  %base158 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 1, !dbg !3882
  %41 = load ptr, ptr %base158, align 8, !dbg !3882
  %used159 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 3, !dbg !3882
  %42 = load i32, ptr %used159, align 4, !dbg !3882
  %idx.ext160 = zext i32 %42 to i64, !dbg !3882
  %add.ptr161 = getelementptr inbounds i8, ptr %41, i64 %idx.ext160, !dbg !3882
  store ptr %add.ptr161, ptr %_cp116, align 8, !dbg !3882
  %used162 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 3, !dbg !3882
  %43 = load i32, ptr %used162, align 4, !dbg !3882
  %inc163 = add i32 %43, 1, !dbg !3882
  store i32 %inc163, ptr %used162, align 4, !dbg !3882
  %44 = load i8, ptr %_val2117, align 1, !dbg !3882
  %45 = load ptr, ptr %_cp116, align 8, !dbg !3882
  %arrayidx164 = getelementptr inbounds i8, ptr %45, i64 0, !dbg !3882
  store i8 %44, ptr %arrayidx164, align 1, !dbg !3882
  call void @llvm.lifetime.end.p0(i64 1, ptr %_val2117) #11, !dbg !3881
  call void @llvm.lifetime.end.p0(i64 8, ptr %_cp116) #11, !dbg !3881
  br label %do.cond165, !dbg !3882

do.cond165:                                       ; preds = %lor.end156
  br label %do.end166, !dbg !3882

do.end166:                                        ; preds = %do.cond165
  %arraydecay167 = getelementptr inbounds [1024 x i8], ptr %namestr, i64 0, i64 0, !dbg !3885
  call void @dns_sdlz_tolower(ptr noundef %arraydecay167), !dbg !3886
  %arraydecay168 = getelementptr inbounds [47 x i8], ptr %clientstr, i64 0, i64 0, !dbg !3887
  call void @dns_sdlz_tolower(ptr noundef %arraydecay168), !dbg !3888
  %46 = load ptr, ptr %imp, align 8, !dbg !3889
  %methods = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %46, i32 0, i32 0, !dbg !3890
  %47 = load ptr, ptr %methods, align 8, !dbg !3890
  %allowzonexfr = getelementptr inbounds %struct.dns_sdlzmethods, ptr %47, i32 0, i32 6, !dbg !3891
  %48 = load ptr, ptr %allowzonexfr, align 8, !dbg !3891
  %cmp169 = icmp ne ptr %48, null, !dbg !3892
  br i1 %cmp169, label %if.then171, label %if.end239, !dbg !3893

if.then171:                                       ; preds = %do.end166
  br label %do.body172, !dbg !3894

do.body172:                                       ; preds = %if.then171
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags) #11, !dbg !3895
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !3814, metadata !DIExpression()), !dbg !3895
  %49 = load ptr, ptr %imp, align 8, !dbg !3895
  %flags173 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %49, i32 0, i32 3, !dbg !3895
  %50 = load i32, ptr %flags173, align 8, !dbg !3895
  store i32 %50, ptr %flags, align 4, !dbg !3895
  %51 = load i32, ptr %flags, align 4, !dbg !3896
  %and = and i32 %51, 1, !dbg !3896
  %cmp174 = icmp eq i32 %and, 0, !dbg !3896
  br i1 %cmp174, label %if.then176, label %if.end195, !dbg !3895

if.then176:                                       ; preds = %do.body172
  br label %do.body177, !dbg !3896

do.body177:                                       ; preds = %if.then176
  %52 = load ptr, ptr %imp, align 8, !dbg !3898
  %driverlock = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %52, i32 0, i32 4, !dbg !3898
  %call178 = call i32 @pthread_mutex_lock(ptr noundef %driverlock) #11, !dbg !3898
  %cmp179 = icmp eq i32 %call178, 0, !dbg !3898
  %53 = zext i1 %cmp179 to i64, !dbg !3898
  %cond = select i1 %cmp179, i32 0, i32 34, !dbg !3898
  %cmp181 = icmp eq i32 %cond, 0, !dbg !3898
  %lnot183 = xor i1 %cmp181, true, !dbg !3898
  %lnot185 = xor i1 %lnot183, true, !dbg !3898
  %lnot.ext186 = zext i1 %lnot185 to i32, !dbg !3898
  %conv187 = sext i32 %lnot.ext186 to i64, !dbg !3898
  %expval188 = call i64 @llvm.expect.i64(i64 %conv187, i64 1), !dbg !3898
  %tobool189 = icmp ne i64 %expval188, 0, !dbg !3898
  br i1 %tobool189, label %lor.end191, label %lor.rhs190, !dbg !3898

lor.rhs190:                                       ; preds = %do.body177
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1619, ptr noundef @.str.41) #12, !dbg !3898
  unreachable, !dbg !3898

54:                                               ; No predecessors!
  br label %lor.end191, !dbg !3898

lor.end191:                                       ; preds = %54, %do.body177
  %55 = phi i1 [ true, %do.body177 ], [ false, %54 ]
  %lor.ext192 = zext i1 %55 to i32, !dbg !3898
  br label %do.cond193, !dbg !3898

do.cond193:                                       ; preds = %lor.end191
  br label %do.end194, !dbg !3898

do.end194:                                        ; preds = %do.cond193
  br label %if.end195, !dbg !3898

if.end195:                                        ; preds = %do.end194, %do.body172
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags) #11, !dbg !3894
  br label %do.cond196, !dbg !3895

do.cond196:                                       ; preds = %if.end195
  br label %do.end197, !dbg !3895

do.end197:                                        ; preds = %do.cond196
  %56 = load ptr, ptr %imp, align 8, !dbg !3900
  %methods198 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %56, i32 0, i32 0, !dbg !3901
  %57 = load ptr, ptr %methods198, align 8, !dbg !3901
  %allowzonexfr199 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %57, i32 0, i32 6, !dbg !3902
  %58 = load ptr, ptr %allowzonexfr199, align 8, !dbg !3902
  %59 = load ptr, ptr %imp, align 8, !dbg !3903
  %driverarg200 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %59, i32 0, i32 2, !dbg !3904
  %60 = load ptr, ptr %driverarg200, align 8, !dbg !3904
  %61 = load ptr, ptr %dbdata.addr, align 8, !dbg !3905
  %arraydecay201 = getelementptr inbounds [1024 x i8], ptr %namestr, i64 0, i64 0, !dbg !3906
  %arraydecay202 = getelementptr inbounds [47 x i8], ptr %clientstr, i64 0, i64 0, !dbg !3907
  %call203 = call i32 %58(ptr noundef %60, ptr noundef %61, ptr noundef %arraydecay201, ptr noundef %arraydecay202), !dbg !3900
  store i32 %call203, ptr %result, align 4, !dbg !3908
  br label %do.body204, !dbg !3909

do.body204:                                       ; preds = %do.end197
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags205) #11, !dbg !3910
  tail call void @llvm.dbg.declare(metadata ptr %flags205, metadata !3818, metadata !DIExpression()), !dbg !3910
  %62 = load ptr, ptr %imp, align 8, !dbg !3910
  %flags206 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %62, i32 0, i32 3, !dbg !3910
  %63 = load i32, ptr %flags206, align 8, !dbg !3910
  store i32 %63, ptr %flags205, align 4, !dbg !3910
  %64 = load i32, ptr %flags205, align 4, !dbg !3911
  %and207 = and i32 %64, 1, !dbg !3911
  %cmp208 = icmp eq i32 %and207, 0, !dbg !3911
  br i1 %cmp208, label %if.then210, label %if.end231, !dbg !3910

if.then210:                                       ; preds = %do.body204
  br label %do.body211, !dbg !3911

do.body211:                                       ; preds = %if.then210
  %65 = load ptr, ptr %imp, align 8, !dbg !3913
  %driverlock212 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %65, i32 0, i32 4, !dbg !3913
  %call213 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock212) #11, !dbg !3913
  %cmp214 = icmp eq i32 %call213, 0, !dbg !3913
  %66 = zext i1 %cmp214 to i64, !dbg !3913
  %cond216 = select i1 %cmp214, i32 0, i32 34, !dbg !3913
  %cmp217 = icmp eq i32 %cond216, 0, !dbg !3913
  %lnot219 = xor i1 %cmp217, true, !dbg !3913
  %lnot221 = xor i1 %lnot219, true, !dbg !3913
  %lnot.ext222 = zext i1 %lnot221 to i32, !dbg !3913
  %conv223 = sext i32 %lnot.ext222 to i64, !dbg !3913
  %expval224 = call i64 @llvm.expect.i64(i64 %conv223, i64 1), !dbg !3913
  %tobool225 = icmp ne i64 %expval224, 0, !dbg !3913
  br i1 %tobool225, label %lor.end227, label %lor.rhs226, !dbg !3913

lor.rhs226:                                       ; preds = %do.body211
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1622, ptr noundef @.str.42) #12, !dbg !3913
  unreachable, !dbg !3913

67:                                               ; No predecessors!
  br label %lor.end227, !dbg !3913

lor.end227:                                       ; preds = %67, %do.body211
  %68 = phi i1 [ true, %do.body211 ], [ false, %67 ]
  %lor.ext228 = zext i1 %68 to i32, !dbg !3913
  br label %do.cond229, !dbg !3913

do.cond229:                                       ; preds = %lor.end227
  br label %do.end230, !dbg !3913

do.end230:                                        ; preds = %do.cond229
  br label %if.end231, !dbg !3913

if.end231:                                        ; preds = %do.end230, %do.body204
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags205) #11, !dbg !3909
  br label %do.cond232, !dbg !3910

do.cond232:                                       ; preds = %if.end231
  br label %do.end233, !dbg !3910

do.end233:                                        ; preds = %do.cond232
  %69 = load i32, ptr %result, align 4, !dbg !3915
  %cmp234 = icmp eq i32 %69, 0, !dbg !3917
  br i1 %cmp234, label %if.then236, label %if.end238, !dbg !3918

if.then236:                                       ; preds = %do.end233
  %70 = load ptr, ptr %mctx.addr, align 8, !dbg !3919
  %71 = load ptr, ptr %driverarg.addr, align 8, !dbg !3920
  %72 = load ptr, ptr %dbdata.addr, align 8, !dbg !3921
  %73 = load ptr, ptr %name.addr, align 8, !dbg !3922
  %74 = load i16, ptr %rdclass.addr, align 2, !dbg !3923
  %75 = load ptr, ptr %dbp.addr, align 8, !dbg !3924
  %call237 = call i32 @dns_sdlzcreateDBP(ptr noundef %70, ptr noundef %71, ptr noundef %72, ptr noundef %73, i16 noundef zeroext %74, ptr noundef %75), !dbg !3925
  store i32 %call237, ptr %result, align 4, !dbg !3926
  br label %if.end238, !dbg !3927

if.end238:                                        ; preds = %if.then236, %do.end233
  %76 = load i32, ptr %result, align 4, !dbg !3928
  store i32 %76, ptr %retval, align 4, !dbg !3929
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3929

if.end239:                                        ; preds = %do.end166
  store i32 27, ptr %retval, align 4, !dbg !3930
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3930

cleanup:                                          ; preds = %if.end239, %if.end238, %if.then113, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %imp) #11, !dbg !3931
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !3931
  call void @llvm.lifetime.end.p0(i64 116, ptr %netaddr) #11, !dbg !3931
  call void @llvm.lifetime.end.p0(i64 47, ptr %clientstr) #11, !dbg !3931
  call void @llvm.lifetime.end.p0(i64 1024, ptr %namestr) #11, !dbg !3931
  call void @llvm.lifetime.end.p0(i64 64, ptr %b2) #11, !dbg !3931
  call void @llvm.lifetime.end.p0(i64 64, ptr %b) #11, !dbg !3931
  %77 = load i32, ptr %retval, align 4, !dbg !3931
  ret i32 %77, !dbg !3931
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dns_sdlzconfigure(ptr noundef %driverarg, ptr noundef %dbdata, ptr noundef %view, ptr noundef %dlzdb) #0 !dbg !3932 {
entry:
  %driverarg.addr = alloca ptr, align 8
  %dbdata.addr = alloca ptr, align 8
  %view.addr = alloca ptr, align 8
  %dlzdb.addr = alloca ptr, align 8
  %result = alloca i32, align 4
  %imp = alloca ptr, align 8
  %flags = alloca i32, align 4
  %flags30 = alloca i32, align 4
  store ptr %driverarg, ptr %driverarg.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %driverarg.addr, metadata !3934, metadata !DIExpression()), !dbg !3946
  store ptr %dbdata, ptr %dbdata.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dbdata.addr, metadata !3935, metadata !DIExpression()), !dbg !3947
  store ptr %view, ptr %view.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %view.addr, metadata !3936, metadata !DIExpression()), !dbg !3948
  store ptr %dlzdb, ptr %dlzdb.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dlzdb.addr, metadata !3937, metadata !DIExpression()), !dbg !3949
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !3950
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !3938, metadata !DIExpression()), !dbg !3951
  call void @llvm.lifetime.start.p0(i64 8, ptr %imp) #11, !dbg !3952
  tail call void @llvm.dbg.declare(metadata ptr %imp, metadata !3939, metadata !DIExpression()), !dbg !3953
  %0 = load ptr, ptr %driverarg.addr, align 8, !dbg !3954
  %cmp = icmp ne ptr %0, null, !dbg !3954
  %lnot = xor i1 %cmp, true, !dbg !3954
  %lnot1 = xor i1 %lnot, true, !dbg !3954
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3954
  %conv = sext i32 %lnot.ext to i64, !dbg !3954
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3954
  %tobool = icmp ne i64 %expval, 0, !dbg !3954
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3954

lor.rhs:                                          ; preds = %entry
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1747, i32 noundef 0, ptr noundef @.str.38) #12, !dbg !3954
  unreachable, !dbg !3954

1:                                                ; No predecessors!
  br label %lor.end, !dbg !3954

lor.end:                                          ; preds = %1, %entry
  %2 = phi i1 [ true, %entry ], [ false, %1 ]
  %lor.ext = zext i1 %2 to i32, !dbg !3954
  %3 = load ptr, ptr %driverarg.addr, align 8, !dbg !3955
  store ptr %3, ptr %imp, align 8, !dbg !3956
  %4 = load ptr, ptr %imp, align 8, !dbg !3957
  %methods = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %4, i32 0, i32 0, !dbg !3958
  %5 = load ptr, ptr %methods, align 8, !dbg !3958
  %configure = getelementptr inbounds %struct.dns_sdlzmethods, ptr %5, i32 0, i32 9, !dbg !3959
  %6 = load ptr, ptr %configure, align 8, !dbg !3959
  %cmp2 = icmp ne ptr %6, null, !dbg !3960
  br i1 %cmp2, label %if.then, label %if.else, !dbg !3961

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !3962

do.body:                                          ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags) #11, !dbg !3963
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !3940, metadata !DIExpression()), !dbg !3963
  %7 = load ptr, ptr %imp, align 8, !dbg !3963
  %flags4 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %7, i32 0, i32 3, !dbg !3963
  %8 = load i32, ptr %flags4, align 8, !dbg !3963
  store i32 %8, ptr %flags, align 4, !dbg !3963
  %9 = load i32, ptr %flags, align 4, !dbg !3964
  %and = and i32 %9, 1, !dbg !3964
  %cmp5 = icmp eq i32 %and, 0, !dbg !3964
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !3963

if.then7:                                         ; preds = %do.body
  br label %do.body8, !dbg !3964

do.body8:                                         ; preds = %if.then7
  %10 = load ptr, ptr %imp, align 8, !dbg !3966
  %driverlock = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %10, i32 0, i32 4, !dbg !3966
  %call = call i32 @pthread_mutex_lock(ptr noundef %driverlock) #11, !dbg !3966
  %cmp9 = icmp eq i32 %call, 0, !dbg !3966
  %11 = zext i1 %cmp9 to i64, !dbg !3966
  %cond = select i1 %cmp9, i32 0, i32 34, !dbg !3966
  %cmp11 = icmp eq i32 %cond, 0, !dbg !3966
  %lnot13 = xor i1 %cmp11, true, !dbg !3966
  %lnot15 = xor i1 %lnot13, true, !dbg !3966
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !3966
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !3966
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 1), !dbg !3966
  %tobool19 = icmp ne i64 %expval18, 0, !dbg !3966
  br i1 %tobool19, label %lor.end21, label %lor.rhs20, !dbg !3966

lor.rhs20:                                        ; preds = %do.body8
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1753, ptr noundef @.str.41) #12, !dbg !3966
  unreachable, !dbg !3966

12:                                               ; No predecessors!
  br label %lor.end21, !dbg !3966

lor.end21:                                        ; preds = %12, %do.body8
  %13 = phi i1 [ true, %do.body8 ], [ false, %12 ]
  %lor.ext22 = zext i1 %13 to i32, !dbg !3966
  br label %do.cond, !dbg !3966

do.cond:                                          ; preds = %lor.end21
  br label %do.end, !dbg !3966

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !3966

if.end:                                           ; preds = %do.end, %do.body
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags) #11, !dbg !3962
  br label %do.cond23, !dbg !3963

do.cond23:                                        ; preds = %if.end
  br label %do.end24, !dbg !3963

do.end24:                                         ; preds = %do.cond23
  %14 = load ptr, ptr %imp, align 8, !dbg !3968
  %methods25 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %14, i32 0, i32 0, !dbg !3969
  %15 = load ptr, ptr %methods25, align 8, !dbg !3969
  %configure26 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %15, i32 0, i32 9, !dbg !3970
  %16 = load ptr, ptr %configure26, align 8, !dbg !3970
  %17 = load ptr, ptr %view.addr, align 8, !dbg !3971
  %18 = load ptr, ptr %dlzdb.addr, align 8, !dbg !3972
  %19 = load ptr, ptr %imp, align 8, !dbg !3973
  %driverarg27 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %19, i32 0, i32 2, !dbg !3974
  %20 = load ptr, ptr %driverarg27, align 8, !dbg !3974
  %21 = load ptr, ptr %dbdata.addr, align 8, !dbg !3975
  %call28 = call i32 %16(ptr noundef %17, ptr noundef %18, ptr noundef %20, ptr noundef %21), !dbg !3968
  store i32 %call28, ptr %result, align 4, !dbg !3976
  br label %do.body29, !dbg !3977

do.body29:                                        ; preds = %do.end24
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags30) #11, !dbg !3978
  tail call void @llvm.dbg.declare(metadata ptr %flags30, metadata !3944, metadata !DIExpression()), !dbg !3978
  %22 = load ptr, ptr %imp, align 8, !dbg !3978
  %flags31 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %22, i32 0, i32 3, !dbg !3978
  %23 = load i32, ptr %flags31, align 8, !dbg !3978
  store i32 %23, ptr %flags30, align 4, !dbg !3978
  %24 = load i32, ptr %flags30, align 4, !dbg !3979
  %and32 = and i32 %24, 1, !dbg !3979
  %cmp33 = icmp eq i32 %and32, 0, !dbg !3979
  br i1 %cmp33, label %if.then35, label %if.end56, !dbg !3978

if.then35:                                        ; preds = %do.body29
  br label %do.body36, !dbg !3979

do.body36:                                        ; preds = %if.then35
  %25 = load ptr, ptr %imp, align 8, !dbg !3981
  %driverlock37 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %25, i32 0, i32 4, !dbg !3981
  %call38 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock37) #11, !dbg !3981
  %cmp39 = icmp eq i32 %call38, 0, !dbg !3981
  %26 = zext i1 %cmp39 to i64, !dbg !3981
  %cond41 = select i1 %cmp39, i32 0, i32 34, !dbg !3981
  %cmp42 = icmp eq i32 %cond41, 0, !dbg !3981
  %lnot44 = xor i1 %cmp42, true, !dbg !3981
  %lnot46 = xor i1 %lnot44, true, !dbg !3981
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !3981
  %conv48 = sext i32 %lnot.ext47 to i64, !dbg !3981
  %expval49 = call i64 @llvm.expect.i64(i64 %conv48, i64 1), !dbg !3981
  %tobool50 = icmp ne i64 %expval49, 0, !dbg !3981
  br i1 %tobool50, label %lor.end52, label %lor.rhs51, !dbg !3981

lor.rhs51:                                        ; preds = %do.body36
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1756, ptr noundef @.str.42) #12, !dbg !3981
  unreachable, !dbg !3981

27:                                               ; No predecessors!
  br label %lor.end52, !dbg !3981

lor.end52:                                        ; preds = %27, %do.body36
  %28 = phi i1 [ true, %do.body36 ], [ false, %27 ]
  %lor.ext53 = zext i1 %28 to i32, !dbg !3981
  br label %do.cond54, !dbg !3981

do.cond54:                                        ; preds = %lor.end52
  br label %do.end55, !dbg !3981

do.end55:                                         ; preds = %do.cond54
  br label %if.end56, !dbg !3981

if.end56:                                         ; preds = %do.end55, %do.body29
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags30) #11, !dbg !3977
  br label %do.cond57, !dbg !3978

do.cond57:                                        ; preds = %if.end56
  br label %do.end58, !dbg !3978

do.end58:                                         ; preds = %do.cond57
  br label %if.end59, !dbg !3983

if.else:                                          ; preds = %lor.end
  store i32 0, ptr %result, align 4, !dbg !3984
  br label %if.end59

if.end59:                                         ; preds = %if.else, %do.end58
  %29 = load i32, ptr %result, align 4, !dbg !3986
  call void @llvm.lifetime.end.p0(i64 8, ptr %imp) #11, !dbg !3987
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !3987
  ret i32 %29, !dbg !3988
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal zeroext i1 @dns_sdlzssumatch(ptr noundef %signer, ptr noundef %name, ptr noundef %tcpaddr, i16 noundef zeroext %type, ptr noundef %key, ptr noundef %driverarg, ptr noundef %dbdata) #0 !dbg !3989 {
entry:
  %retval = alloca i1, align 1
  %signer.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %tcpaddr.addr = alloca ptr, align 8
  %type.addr = alloca i16, align 2
  %key.addr = alloca ptr, align 8
  %driverarg.addr = alloca ptr, align 8
  %dbdata.addr = alloca ptr, align 8
  %imp = alloca ptr, align 8
  %b_signer = alloca [1024 x i8], align 16
  %b_name = alloca [1024 x i8], align 16
  %b_addr = alloca [57 x i8], align 16
  %b_type = alloca [11 x i8], align 1
  %b_key = alloca [1051 x i8], align 16
  %tkey_token = alloca ptr, align 8
  %token_region = alloca %struct.isc_region, align 8
  %token_len = alloca i32, align 4
  %ret = alloca i8, align 1
  %cleanup.dest.slot = alloca i32, align 4
  %flags = alloca i32, align 4
  %flags71 = alloca i32, align 4
  store ptr %signer, ptr %signer.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %signer.addr, metadata !3991, metadata !DIExpression()), !dbg !4021
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !3992, metadata !DIExpression()), !dbg !4022
  store ptr %tcpaddr, ptr %tcpaddr.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %tcpaddr.addr, metadata !3993, metadata !DIExpression()), !dbg !4023
  store i16 %type, ptr %type.addr, align 2
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !3994, metadata !DIExpression()), !dbg !4024
  store ptr %key, ptr %key.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %key.addr, metadata !3995, metadata !DIExpression()), !dbg !4025
  store ptr %driverarg, ptr %driverarg.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %driverarg.addr, metadata !3996, metadata !DIExpression()), !dbg !4026
  store ptr %dbdata, ptr %dbdata.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dbdata.addr, metadata !3997, metadata !DIExpression()), !dbg !4027
  call void @llvm.lifetime.start.p0(i64 8, ptr %imp) #11, !dbg !4028
  tail call void @llvm.dbg.declare(metadata ptr %imp, metadata !3998, metadata !DIExpression()), !dbg !4029
  call void @llvm.lifetime.start.p0(i64 1024, ptr %b_signer) #11, !dbg !4030
  tail call void @llvm.dbg.declare(metadata ptr %b_signer, metadata !3999, metadata !DIExpression()), !dbg !4031
  call void @llvm.lifetime.start.p0(i64 1024, ptr %b_name) #11, !dbg !4032
  tail call void @llvm.dbg.declare(metadata ptr %b_name, metadata !4000, metadata !DIExpression()), !dbg !4033
  call void @llvm.lifetime.start.p0(i64 57, ptr %b_addr) #11, !dbg !4034
  tail call void @llvm.dbg.declare(metadata ptr %b_addr, metadata !4001, metadata !DIExpression()), !dbg !4035
  call void @llvm.lifetime.start.p0(i64 11, ptr %b_type) #11, !dbg !4036
  tail call void @llvm.dbg.declare(metadata ptr %b_type, metadata !4005, metadata !DIExpression()), !dbg !4037
  call void @llvm.lifetime.start.p0(i64 1051, ptr %b_key) #11, !dbg !4038
  tail call void @llvm.dbg.declare(metadata ptr %b_key, metadata !4009, metadata !DIExpression()), !dbg !4039
  call void @llvm.lifetime.start.p0(i64 8, ptr %tkey_token) #11, !dbg !4040
  tail call void @llvm.dbg.declare(metadata ptr %tkey_token, metadata !4013, metadata !DIExpression()), !dbg !4041
  store ptr null, ptr %tkey_token, align 8, !dbg !4041
  call void @llvm.lifetime.start.p0(i64 16, ptr %token_region) #11, !dbg !4042
  tail call void @llvm.dbg.declare(metadata ptr %token_region, metadata !4014, metadata !DIExpression()), !dbg !4043
  call void @llvm.memset.p0.i64(ptr align 8 %token_region, i8 0, i64 16, i1 false), !dbg !4043
  call void @llvm.lifetime.start.p0(i64 4, ptr %token_len) #11, !dbg !4044
  tail call void @llvm.dbg.declare(metadata ptr %token_len, metadata !4015, metadata !DIExpression()), !dbg !4045
  store i32 0, ptr %token_len, align 4, !dbg !4045
  call void @llvm.lifetime.start.p0(i64 1, ptr %ret) #11, !dbg !4046
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !4016, metadata !DIExpression()), !dbg !4047
  %0 = load ptr, ptr %driverarg.addr, align 8, !dbg !4048
  %cmp = icmp ne ptr %0, null, !dbg !4048
  %lnot = xor i1 %cmp, true, !dbg !4048
  %lnot1 = xor i1 %lnot, true, !dbg !4048
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4048
  %conv = sext i32 %lnot.ext to i64, !dbg !4048
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4048
  %tobool = icmp ne i64 %expval, 0, !dbg !4048
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4048

lor.rhs:                                          ; preds = %entry
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1780, i32 noundef 0, ptr noundef @.str.38) #12, !dbg !4048
  unreachable, !dbg !4048

1:                                                ; No predecessors!
  br label %lor.end, !dbg !4048

lor.end:                                          ; preds = %1, %entry
  %2 = phi i1 [ true, %entry ], [ false, %1 ]
  %lor.ext = zext i1 %2 to i32, !dbg !4048
  %3 = load ptr, ptr %driverarg.addr, align 8, !dbg !4049
  store ptr %3, ptr %imp, align 8, !dbg !4050
  %4 = load ptr, ptr %imp, align 8, !dbg !4051
  %methods = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %4, i32 0, i32 0, !dbg !4053
  %5 = load ptr, ptr %methods, align 8, !dbg !4053
  %ssumatch = getelementptr inbounds %struct.dns_sdlzmethods, ptr %5, i32 0, i32 10, !dbg !4054
  %6 = load ptr, ptr %ssumatch, align 8, !dbg !4054
  %cmp2 = icmp eq ptr %6, null, !dbg !4055
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4056

if.then:                                          ; preds = %lor.end
  store i1 false, ptr %retval, align 1, !dbg !4057
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4057

if.end:                                           ; preds = %lor.end
  %7 = load ptr, ptr %signer.addr, align 8, !dbg !4058
  %cmp4 = icmp ne ptr %7, null, !dbg !4060
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !4061

if.then6:                                         ; preds = %if.end
  %8 = load ptr, ptr %signer.addr, align 8, !dbg !4062
  %arraydecay = getelementptr inbounds [1024 x i8], ptr %b_signer, i64 0, i64 0, !dbg !4063
  call void @dns_name_format(ptr noundef %8, ptr noundef %arraydecay, i32 noundef 1024), !dbg !4064
  br label %if.end7, !dbg !4064

if.else:                                          ; preds = %if.end
  %arrayidx = getelementptr inbounds [1024 x i8], ptr %b_signer, i64 0, i64 0, !dbg !4065
  store i8 0, ptr %arrayidx, align 16, !dbg !4066
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  %9 = load ptr, ptr %name.addr, align 8, !dbg !4067
  %arraydecay8 = getelementptr inbounds [1024 x i8], ptr %b_name, i64 0, i64 0, !dbg !4068
  call void @dns_name_format(ptr noundef %9, ptr noundef %arraydecay8, i32 noundef 1024), !dbg !4069
  %10 = load ptr, ptr %tcpaddr.addr, align 8, !dbg !4070
  %cmp9 = icmp ne ptr %10, null, !dbg !4072
  br i1 %cmp9, label %if.then11, label %if.else13, !dbg !4073

if.then11:                                        ; preds = %if.end7
  %11 = load ptr, ptr %tcpaddr.addr, align 8, !dbg !4074
  %arraydecay12 = getelementptr inbounds [57 x i8], ptr %b_addr, i64 0, i64 0, !dbg !4075
  call void @isc_netaddr_format(ptr noundef %11, ptr noundef %arraydecay12, i32 noundef 57), !dbg !4076
  br label %if.end15, !dbg !4076

if.else13:                                        ; preds = %if.end7
  %arrayidx14 = getelementptr inbounds [57 x i8], ptr %b_addr, i64 0, i64 0, !dbg !4077
  store i8 0, ptr %arrayidx14, align 16, !dbg !4078
  br label %if.end15

if.end15:                                         ; preds = %if.else13, %if.then11
  %12 = load i16, ptr %type.addr, align 2, !dbg !4079
  %arraydecay16 = getelementptr inbounds [11 x i8], ptr %b_type, i64 0, i64 0, !dbg !4080
  call void @dns_rdatatype_format(i16 noundef zeroext %12, ptr noundef %arraydecay16, i32 noundef 11), !dbg !4081
  %13 = load ptr, ptr %key.addr, align 8, !dbg !4082
  %cmp17 = icmp ne ptr %13, null, !dbg !4084
  br i1 %cmp17, label %if.then19, label %if.else21, !dbg !4085

if.then19:                                        ; preds = %if.end15
  %14 = load ptr, ptr %key.addr, align 8, !dbg !4086
  %arraydecay20 = getelementptr inbounds [1051 x i8], ptr %b_key, i64 0, i64 0, !dbg !4088
  call void @dst_key_format(ptr noundef %14, ptr noundef %arraydecay20, i32 noundef 1051), !dbg !4089
  %15 = load ptr, ptr %key.addr, align 8, !dbg !4090
  %call = call ptr @dst_key_tkeytoken(ptr noundef %15), !dbg !4091
  store ptr %call, ptr %tkey_token, align 8, !dbg !4092
  br label %if.end23, !dbg !4093

if.else21:                                        ; preds = %if.end15
  %arrayidx22 = getelementptr inbounds [1051 x i8], ptr %b_key, i64 0, i64 0, !dbg !4094
  store i8 0, ptr %arrayidx22, align 16, !dbg !4095
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.then19
  %16 = load ptr, ptr %tkey_token, align 8, !dbg !4096
  %cmp24 = icmp ne ptr %16, null, !dbg !4098
  br i1 %cmp24, label %if.then26, label %if.end30, !dbg !4099

if.then26:                                        ; preds = %if.end23
  br label %do.body, !dbg !4100

do.body:                                          ; preds = %if.then26
  %17 = load ptr, ptr %tkey_token, align 8, !dbg !4102
  %base = getelementptr inbounds %struct.isc_buffer, ptr %17, i32 0, i32 1, !dbg !4102
  %18 = load ptr, ptr %base, align 8, !dbg !4102
  %base27 = getelementptr inbounds %struct.isc_region, ptr %token_region, i32 0, i32 0, !dbg !4102
  store ptr %18, ptr %base27, align 8, !dbg !4102
  %19 = load ptr, ptr %tkey_token, align 8, !dbg !4102
  %length = getelementptr inbounds %struct.isc_buffer, ptr %19, i32 0, i32 2, !dbg !4102
  %20 = load i32, ptr %length, align 8, !dbg !4102
  %length28 = getelementptr inbounds %struct.isc_region, ptr %token_region, i32 0, i32 1, !dbg !4102
  store i32 %20, ptr %length28, align 8, !dbg !4102
  br label %do.cond, !dbg !4102

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4102

do.end:                                           ; preds = %do.cond
  %length29 = getelementptr inbounds %struct.isc_region, ptr %token_region, i32 0, i32 1, !dbg !4104
  %21 = load i32, ptr %length29, align 8, !dbg !4104
  store i32 %21, ptr %token_len, align 4, !dbg !4105
  br label %if.end30, !dbg !4106

if.end30:                                         ; preds = %do.end, %if.end23
  br label %do.body31, !dbg !4107

do.body31:                                        ; preds = %if.end30
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags) #11, !dbg !4108
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !4017, metadata !DIExpression()), !dbg !4108
  %22 = load ptr, ptr %imp, align 8, !dbg !4108
  %flags32 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %22, i32 0, i32 3, !dbg !4108
  %23 = load i32, ptr %flags32, align 8, !dbg !4108
  store i32 %23, ptr %flags, align 4, !dbg !4108
  %24 = load i32, ptr %flags, align 4, !dbg !4109
  %and = and i32 %24, 1, !dbg !4109
  %cmp33 = icmp eq i32 %and, 0, !dbg !4109
  br i1 %cmp33, label %if.then35, label %if.end54, !dbg !4108

if.then35:                                        ; preds = %do.body31
  br label %do.body36, !dbg !4109

do.body36:                                        ; preds = %if.then35
  %25 = load ptr, ptr %imp, align 8, !dbg !4111
  %driverlock = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %25, i32 0, i32 4, !dbg !4111
  %call37 = call i32 @pthread_mutex_lock(ptr noundef %driverlock) #11, !dbg !4111
  %cmp38 = icmp eq i32 %call37, 0, !dbg !4111
  %26 = zext i1 %cmp38 to i64, !dbg !4111
  %cond = select i1 %cmp38, i32 0, i32 34, !dbg !4111
  %cmp40 = icmp eq i32 %cond, 0, !dbg !4111
  %lnot42 = xor i1 %cmp40, true, !dbg !4111
  %lnot44 = xor i1 %lnot42, true, !dbg !4111
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !4111
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !4111
  %expval47 = call i64 @llvm.expect.i64(i64 %conv46, i64 1), !dbg !4111
  %tobool48 = icmp ne i64 %expval47, 0, !dbg !4111
  br i1 %tobool48, label %lor.end50, label %lor.rhs49, !dbg !4111

lor.rhs49:                                        ; preds = %do.body36
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1815, ptr noundef @.str.41) #12, !dbg !4111
  unreachable, !dbg !4111

27:                                               ; No predecessors!
  br label %lor.end50, !dbg !4111

lor.end50:                                        ; preds = %27, %do.body36
  %28 = phi i1 [ true, %do.body36 ], [ false, %27 ]
  %lor.ext51 = zext i1 %28 to i32, !dbg !4111
  br label %do.cond52, !dbg !4111

do.cond52:                                        ; preds = %lor.end50
  br label %do.end53, !dbg !4111

do.end53:                                         ; preds = %do.cond52
  br label %if.end54, !dbg !4111

if.end54:                                         ; preds = %do.end53, %do.body31
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags) #11, !dbg !4107
  br label %do.cond55, !dbg !4108

do.cond55:                                        ; preds = %if.end54
  br label %do.end56, !dbg !4108

do.end56:                                         ; preds = %do.cond55
  %29 = load ptr, ptr %imp, align 8, !dbg !4113
  %methods57 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %29, i32 0, i32 0, !dbg !4114
  %30 = load ptr, ptr %methods57, align 8, !dbg !4114
  %ssumatch58 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %30, i32 0, i32 10, !dbg !4115
  %31 = load ptr, ptr %ssumatch58, align 8, !dbg !4115
  %arraydecay59 = getelementptr inbounds [1024 x i8], ptr %b_signer, i64 0, i64 0, !dbg !4116
  %arraydecay60 = getelementptr inbounds [1024 x i8], ptr %b_name, i64 0, i64 0, !dbg !4117
  %arraydecay61 = getelementptr inbounds [57 x i8], ptr %b_addr, i64 0, i64 0, !dbg !4118
  %arraydecay62 = getelementptr inbounds [11 x i8], ptr %b_type, i64 0, i64 0, !dbg !4119
  %arraydecay63 = getelementptr inbounds [1051 x i8], ptr %b_key, i64 0, i64 0, !dbg !4120
  %32 = load i32, ptr %token_len, align 4, !dbg !4121
  %33 = load i32, ptr %token_len, align 4, !dbg !4122
  %cmp64 = icmp ne i32 %33, 0, !dbg !4123
  br i1 %cmp64, label %cond.true, label %cond.false, !dbg !4122

cond.true:                                        ; preds = %do.end56
  %base66 = getelementptr inbounds %struct.isc_region, ptr %token_region, i32 0, i32 0, !dbg !4124
  %34 = load ptr, ptr %base66, align 8, !dbg !4124
  br label %cond.end, !dbg !4122

cond.false:                                       ; preds = %do.end56
  br label %cond.end, !dbg !4122

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond67 = phi ptr [ %34, %cond.true ], [ null, %cond.false ], !dbg !4122
  %35 = load ptr, ptr %imp, align 8, !dbg !4125
  %driverarg68 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %35, i32 0, i32 2, !dbg !4126
  %36 = load ptr, ptr %driverarg68, align 8, !dbg !4126
  %37 = load ptr, ptr %dbdata.addr, align 8, !dbg !4127
  %call69 = call zeroext i1 %31(ptr noundef %arraydecay59, ptr noundef %arraydecay60, ptr noundef %arraydecay61, ptr noundef %arraydecay62, ptr noundef %arraydecay63, i32 noundef %32, ptr noundef %cond67, ptr noundef %36, ptr noundef %37), !dbg !4113
  %frombool = zext i1 %call69 to i8, !dbg !4128
  store i8 %frombool, ptr %ret, align 1, !dbg !4128
  br label %do.body70, !dbg !4129

do.body70:                                        ; preds = %cond.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags71) #11, !dbg !4130
  tail call void @llvm.dbg.declare(metadata ptr %flags71, metadata !4019, metadata !DIExpression()), !dbg !4130
  %38 = load ptr, ptr %imp, align 8, !dbg !4130
  %flags72 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %38, i32 0, i32 3, !dbg !4130
  %39 = load i32, ptr %flags72, align 8, !dbg !4130
  store i32 %39, ptr %flags71, align 4, !dbg !4130
  %40 = load i32, ptr %flags71, align 4, !dbg !4131
  %and73 = and i32 %40, 1, !dbg !4131
  %cmp74 = icmp eq i32 %and73, 0, !dbg !4131
  br i1 %cmp74, label %if.then76, label %if.end97, !dbg !4130

if.then76:                                        ; preds = %do.body70
  br label %do.body77, !dbg !4131

do.body77:                                        ; preds = %if.then76
  %41 = load ptr, ptr %imp, align 8, !dbg !4133
  %driverlock78 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %41, i32 0, i32 4, !dbg !4133
  %call79 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock78) #11, !dbg !4133
  %cmp80 = icmp eq i32 %call79, 0, !dbg !4133
  %42 = zext i1 %cmp80 to i64, !dbg !4133
  %cond82 = select i1 %cmp80, i32 0, i32 34, !dbg !4133
  %cmp83 = icmp eq i32 %cond82, 0, !dbg !4133
  %lnot85 = xor i1 %cmp83, true, !dbg !4133
  %lnot87 = xor i1 %lnot85, true, !dbg !4133
  %lnot.ext88 = zext i1 %lnot87 to i32, !dbg !4133
  %conv89 = sext i32 %lnot.ext88 to i64, !dbg !4133
  %expval90 = call i64 @llvm.expect.i64(i64 %conv89, i64 1), !dbg !4133
  %tobool91 = icmp ne i64 %expval90, 0, !dbg !4133
  br i1 %tobool91, label %lor.end93, label %lor.rhs92, !dbg !4133

lor.rhs92:                                        ; preds = %do.body77
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1820, ptr noundef @.str.42) #12, !dbg !4133
  unreachable, !dbg !4133

43:                                               ; No predecessors!
  br label %lor.end93, !dbg !4133

lor.end93:                                        ; preds = %43, %do.body77
  %44 = phi i1 [ true, %do.body77 ], [ false, %43 ]
  %lor.ext94 = zext i1 %44 to i32, !dbg !4133
  br label %do.cond95, !dbg !4133

do.cond95:                                        ; preds = %lor.end93
  br label %do.end96, !dbg !4133

do.end96:                                         ; preds = %do.cond95
  br label %if.end97, !dbg !4133

if.end97:                                         ; preds = %do.end96, %do.body70
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags71) #11, !dbg !4129
  br label %do.cond98, !dbg !4130

do.cond98:                                        ; preds = %if.end97
  br label %do.end99, !dbg !4130

do.end99:                                         ; preds = %do.cond98
  %45 = load i8, ptr %ret, align 1, !dbg !4135, !range !2769, !noundef !2770
  %tobool100 = trunc i8 %45 to i1, !dbg !4135
  store i1 %tobool100, ptr %retval, align 1, !dbg !4136
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4136

cleanup:                                          ; preds = %do.end99, %if.then
  call void @llvm.lifetime.end.p0(i64 1, ptr %ret) #11, !dbg !4137
  call void @llvm.lifetime.end.p0(i64 4, ptr %token_len) #11, !dbg !4137
  call void @llvm.lifetime.end.p0(i64 16, ptr %token_region) #11, !dbg !4137
  call void @llvm.lifetime.end.p0(i64 8, ptr %tkey_token) #11, !dbg !4137
  call void @llvm.lifetime.end.p0(i64 1051, ptr %b_key) #11, !dbg !4137
  call void @llvm.lifetime.end.p0(i64 11, ptr %b_type) #11, !dbg !4137
  call void @llvm.lifetime.end.p0(i64 57, ptr %b_addr) #11, !dbg !4137
  call void @llvm.lifetime.end.p0(i64 1024, ptr %b_name) #11, !dbg !4137
  call void @llvm.lifetime.end.p0(i64 1024, ptr %b_signer) #11, !dbg !4137
  call void @llvm.lifetime.end.p0(i64 8, ptr %imp) #11, !dbg !4137
  %46 = load i1, ptr %retval, align 1, !dbg !4137
  ret i1 %46, !dbg !4137
}

; Function Attrs: null_pointer_is_valid
declare !dbg !4138 i32 @dns_name_totext(ptr noundef, i1 noundef zeroext, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !4141 i32 @isc_buffer_reserve(ptr noundef, i32 noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @dns_sdlz_tolower(ptr noundef %str) #0 !dbg !4144 {
entry:
  %str.addr = alloca ptr, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  store ptr %str, ptr %str.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %str.addr, metadata !4148, metadata !DIExpression()), !dbg !4151
  call void @llvm.lifetime.start.p0(i64 4, ptr %len) #11, !dbg !4152
  tail call void @llvm.dbg.declare(metadata ptr %len, metadata !4149, metadata !DIExpression()), !dbg !4153
  %0 = load ptr, ptr %str.addr, align 8, !dbg !4154
  %call = call i64 @strlen(ptr noundef %0) #13, !dbg !4155
  %conv = trunc i64 %call to i32, !dbg !4155
  store i32 %conv, ptr %len, align 4, !dbg !4153
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #11, !dbg !4156
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4150, metadata !DIExpression()), !dbg !4157
  store i32 0, ptr %i, align 4, !dbg !4158
  br label %for.cond, !dbg !4160

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, ptr %i, align 4, !dbg !4161
  %2 = load i32, ptr %len, align 4, !dbg !4163
  %cmp = icmp ult i32 %1, %2, !dbg !4164
  br i1 %cmp, label %for.body, label %for.end, !dbg !4165

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %str.addr, align 8, !dbg !4166
  %4 = load i32, ptr %i, align 4, !dbg !4169
  %idxprom = zext i32 %4 to i64, !dbg !4166
  %arrayidx = getelementptr inbounds i8, ptr %3, i64 %idxprom, !dbg !4166
  %5 = load i8, ptr %arrayidx, align 1, !dbg !4166
  %conv2 = sext i8 %5 to i32, !dbg !4166
  %cmp3 = icmp sge i32 %conv2, 65, !dbg !4170
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !4171

land.lhs.true:                                    ; preds = %for.body
  %6 = load ptr, ptr %str.addr, align 8, !dbg !4172
  %7 = load i32, ptr %i, align 4, !dbg !4173
  %idxprom5 = zext i32 %7 to i64, !dbg !4172
  %arrayidx6 = getelementptr inbounds i8, ptr %6, i64 %idxprom5, !dbg !4172
  %8 = load i8, ptr %arrayidx6, align 1, !dbg !4172
  %conv7 = sext i8 %8 to i32, !dbg !4172
  %cmp8 = icmp sle i32 %conv7, 90, !dbg !4174
  br i1 %cmp8, label %if.then, label %if.end, !dbg !4175

if.then:                                          ; preds = %land.lhs.true
  %9 = load ptr, ptr %str.addr, align 8, !dbg !4176
  %10 = load i32, ptr %i, align 4, !dbg !4177
  %idxprom10 = zext i32 %10 to i64, !dbg !4176
  %arrayidx11 = getelementptr inbounds i8, ptr %9, i64 %idxprom10, !dbg !4176
  %11 = load i8, ptr %arrayidx11, align 1, !dbg !4178
  %conv12 = sext i8 %11 to i32, !dbg !4178
  %add = add nsw i32 %conv12, 32, !dbg !4178
  %conv13 = trunc i32 %add to i8, !dbg !4178
  store i8 %conv13, ptr %arrayidx11, align 1, !dbg !4178
  br label %if.end, !dbg !4176

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4179

for.inc:                                          ; preds = %if.end
  %12 = load i32, ptr %i, align 4, !dbg !4180
  %inc = add i32 %12, 1, !dbg !4180
  store i32 %inc, ptr %i, align 4, !dbg !4180
  br label %for.cond, !dbg !4181, !llvm.loop !4182

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #11, !dbg !4184
  call void @llvm.lifetime.end.p0(i64 4, ptr %len) #11, !dbg !4184
  ret void, !dbg !4184
}

; Function Attrs: null_pointer_is_valid
declare !dbg !4185 void @isc_netaddr_fromsockaddr(ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !4189 i32 @isc_netaddr_totext(ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !4192 void @dns_name_format(ptr noundef, ptr noundef, i32 noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !4195 void @isc_netaddr_format(ptr noundef, ptr noundef, i32 noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !4198 void @dns_rdatatype_format(i16 noundef zeroext, ptr noundef, i32 noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !4201 void @dst_key_format(ptr noundef, ptr noundef, i32 noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !4204 ptr @dst_key_tkeytoken(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !4207 i32 @dns_name_dupwithoffsets(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @beginload(ptr noundef %db, ptr noundef %callbacks) #0 !dbg !4208 {
entry:
  %db.addr = alloca ptr, align 8
  %callbacks.addr = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4210, metadata !DIExpression()), !dbg !4212
  store ptr %callbacks, ptr %callbacks.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %callbacks.addr, metadata !4211, metadata !DIExpression()), !dbg !4213
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4214
  %1 = load ptr, ptr %callbacks.addr, align 8, !dbg !4215
  ret i32 27, !dbg !4216
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @endload(ptr noundef %db, ptr noundef %callbacks) #0 !dbg !4217 {
entry:
  %db.addr = alloca ptr, align 8
  %callbacks.addr = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4219, metadata !DIExpression()), !dbg !4221
  store ptr %callbacks, ptr %callbacks.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %callbacks.addr, metadata !4220, metadata !DIExpression()), !dbg !4222
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4223
  %1 = load ptr, ptr %callbacks.addr, align 8, !dbg !4224
  ret i32 27, !dbg !4225
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dump(ptr noundef %db, ptr noundef %version, ptr noundef %filename, i32 noundef %masterformat) #0 !dbg !4226 {
entry:
  %db.addr = alloca ptr, align 8
  %version.addr = alloca ptr, align 8
  %filename.addr = alloca ptr, align 8
  %masterformat.addr = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4228, metadata !DIExpression()), !dbg !4232
  store ptr %version, ptr %version.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %version.addr, metadata !4229, metadata !DIExpression()), !dbg !4233
  store ptr %filename, ptr %filename.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %filename.addr, metadata !4230, metadata !DIExpression()), !dbg !4234
  store i32 %masterformat, ptr %masterformat.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %masterformat.addr, metadata !4231, metadata !DIExpression()), !dbg !4235
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4236
  %1 = load ptr, ptr %version.addr, align 8, !dbg !4237
  %2 = load ptr, ptr %filename.addr, align 8, !dbg !4238
  %3 = load i32, ptr %masterformat.addr, align 4, !dbg !4239
  ret i32 27, !dbg !4240
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @currentversion(ptr noundef %db, ptr noundef %versionp) #0 !dbg !4241 {
entry:
  %db.addr = alloca ptr, align 8
  %versionp.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4243, metadata !DIExpression()), !dbg !4246
  store ptr %versionp, ptr %versionp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %versionp.addr, metadata !4244, metadata !DIExpression()), !dbg !4247
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !4248
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !4245, metadata !DIExpression()), !dbg !4249
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4250
  store ptr %0, ptr %sdlz, align 8, !dbg !4249
  %1 = load ptr, ptr %sdlz, align 8, !dbg !4251
  %cmp = icmp ne ptr %1, null, !dbg !4251
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4251

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %sdlz, align 8, !dbg !4251
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !4251
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !4251
  %3 = load i32, ptr %impmagic, align 4, !dbg !4251
  %cmp1 = icmp eq i32 %3, 1145854547, !dbg !4251
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4252
  %lnot = xor i1 %4, true, !dbg !4251
  %lnot2 = xor i1 %lnot, true, !dbg !4251
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4251
  %conv = sext i32 %lnot.ext to i64, !dbg !4251
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4251
  %tobool = icmp ne i64 %expval, 0, !dbg !4251
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4251

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 394, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !4251
  unreachable, !dbg !4251

5:                                                ; No predecessors!
  br label %lor.end, !dbg !4251

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !4251
  %7 = load ptr, ptr %versionp.addr, align 8, !dbg !4253
  %cmp3 = icmp ne ptr %7, null, !dbg !4253
  br i1 %cmp3, label %land.rhs5, label %land.end8, !dbg !4253

land.rhs5:                                        ; preds = %lor.end
  %8 = load ptr, ptr %versionp.addr, align 8, !dbg !4253
  %9 = load ptr, ptr %8, align 8, !dbg !4253
  %cmp6 = icmp eq ptr %9, null, !dbg !4253
  br label %land.end8

land.end8:                                        ; preds = %land.rhs5, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %cmp6, %land.rhs5 ], !dbg !4252
  %lnot9 = xor i1 %10, true, !dbg !4253
  %lnot11 = xor i1 %lnot9, true, !dbg !4253
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !4253
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !4253
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 1), !dbg !4253
  %tobool15 = icmp ne i64 %expval14, 0, !dbg !4253
  br i1 %tobool15, label %lor.end17, label %lor.rhs16, !dbg !4253

lor.rhs16:                                        ; preds = %land.end8
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 395, i32 noundef 0, ptr noundef @.str.52) #12, !dbg !4253
  unreachable, !dbg !4253

11:                                               ; No predecessors!
  br label %lor.end17, !dbg !4253

lor.end17:                                        ; preds = %11, %land.end8
  %12 = phi i1 [ true, %land.end8 ], [ false, %11 ]
  %lor.ext18 = zext i1 %12 to i32, !dbg !4253
  %13 = load ptr, ptr %sdlz, align 8, !dbg !4254
  %dummy_version = getelementptr inbounds %struct.dns_sdlz_db, ptr %13, i32 0, i32 6, !dbg !4255
  %14 = load ptr, ptr %versionp.addr, align 8, !dbg !4256
  store ptr %dummy_version, ptr %14, align 8, !dbg !4257
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !4258
  ret void, !dbg !4258
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @newversion(ptr noundef %db, ptr noundef %versionp) #0 !dbg !4259 {
entry:
  %retval = alloca i32, align 4
  %db.addr = alloca ptr, align 8
  %versionp.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %origin = alloca [1024 x i8], align 16
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4261, metadata !DIExpression()), !dbg !4266
  store ptr %versionp, ptr %versionp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %versionp.addr, metadata !4262, metadata !DIExpression()), !dbg !4267
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !4268
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !4263, metadata !DIExpression()), !dbg !4269
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4270
  store ptr %0, ptr %sdlz, align 8, !dbg !4269
  call void @llvm.lifetime.start.p0(i64 1024, ptr %origin) #11, !dbg !4271
  tail call void @llvm.dbg.declare(metadata ptr %origin, metadata !4264, metadata !DIExpression()), !dbg !4272
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !4273
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4265, metadata !DIExpression()), !dbg !4274
  %1 = load ptr, ptr %sdlz, align 8, !dbg !4275
  %cmp = icmp ne ptr %1, null, !dbg !4275
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4275

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %sdlz, align 8, !dbg !4275
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !4275
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !4275
  %3 = load i32, ptr %impmagic, align 4, !dbg !4275
  %cmp1 = icmp eq i32 %3, 1145854547, !dbg !4275
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4276
  %lnot = xor i1 %4, true, !dbg !4275
  %lnot2 = xor i1 %lnot, true, !dbg !4275
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4275
  %conv = sext i32 %lnot.ext to i64, !dbg !4275
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4275
  %tobool = icmp ne i64 %expval, 0, !dbg !4275
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4275

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 407, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !4275
  unreachable, !dbg !4275

5:                                                ; No predecessors!
  br label %lor.end, !dbg !4275

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !4275
  %7 = load ptr, ptr %sdlz, align 8, !dbg !4277
  %dlzimp = getelementptr inbounds %struct.dns_sdlz_db, ptr %7, i32 0, i32 2, !dbg !4279
  %8 = load ptr, ptr %dlzimp, align 8, !dbg !4279
  %methods = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %8, i32 0, i32 0, !dbg !4280
  %9 = load ptr, ptr %methods, align 8, !dbg !4280
  %newversion = getelementptr inbounds %struct.dns_sdlzmethods, ptr %9, i32 0, i32 7, !dbg !4281
  %10 = load ptr, ptr %newversion, align 8, !dbg !4281
  %cmp3 = icmp eq ptr %10, null, !dbg !4282
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4283

if.then:                                          ; preds = %lor.end
  store i32 27, ptr %retval, align 4, !dbg !4284
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4284

if.end:                                           ; preds = %lor.end
  %11 = load ptr, ptr %sdlz, align 8, !dbg !4285
  %common5 = getelementptr inbounds %struct.dns_sdlz_db, ptr %11, i32 0, i32 0, !dbg !4286
  %origin6 = getelementptr inbounds %struct.dns_db, ptr %common5, i32 0, i32 5, !dbg !4287
  %arraydecay = getelementptr inbounds [1024 x i8], ptr %origin, i64 0, i64 0, !dbg !4288
  call void @dns_name_format(ptr noundef %origin6, ptr noundef %arraydecay, i32 noundef 1024), !dbg !4289
  %12 = load ptr, ptr %sdlz, align 8, !dbg !4290
  %dlzimp7 = getelementptr inbounds %struct.dns_sdlz_db, ptr %12, i32 0, i32 2, !dbg !4291
  %13 = load ptr, ptr %dlzimp7, align 8, !dbg !4291
  %methods8 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %13, i32 0, i32 0, !dbg !4292
  %14 = load ptr, ptr %methods8, align 8, !dbg !4292
  %newversion9 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %14, i32 0, i32 7, !dbg !4293
  %15 = load ptr, ptr %newversion9, align 8, !dbg !4293
  %arraydecay10 = getelementptr inbounds [1024 x i8], ptr %origin, i64 0, i64 0, !dbg !4294
  %16 = load ptr, ptr %sdlz, align 8, !dbg !4295
  %dlzimp11 = getelementptr inbounds %struct.dns_sdlz_db, ptr %16, i32 0, i32 2, !dbg !4296
  %17 = load ptr, ptr %dlzimp11, align 8, !dbg !4296
  %driverarg = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %17, i32 0, i32 2, !dbg !4297
  %18 = load ptr, ptr %driverarg, align 8, !dbg !4297
  %19 = load ptr, ptr %sdlz, align 8, !dbg !4298
  %dbdata = getelementptr inbounds %struct.dns_sdlz_db, ptr %19, i32 0, i32 1, !dbg !4299
  %20 = load ptr, ptr %dbdata, align 8, !dbg !4299
  %21 = load ptr, ptr %versionp.addr, align 8, !dbg !4300
  %call = call i32 %15(ptr noundef %arraydecay10, ptr noundef %18, ptr noundef %20, ptr noundef %21), !dbg !4290
  store i32 %call, ptr %result, align 4, !dbg !4301
  %22 = load i32, ptr %result, align 4, !dbg !4302
  %cmp12 = icmp ne i32 %22, 0, !dbg !4304
  br i1 %cmp12, label %if.then14, label %if.end17, !dbg !4305

if.then14:                                        ; preds = %if.end
  %arraydecay15 = getelementptr inbounds [1024 x i8], ptr %origin, i64 0, i64 0, !dbg !4306
  %23 = load i32, ptr %result, align 4, !dbg !4308
  %call16 = call ptr @isc_result_totext(i32 noundef %23), !dbg !4309
  call void (i32, ptr, ...) @sdlz_log(i32 noundef -4, ptr noundef @.str.53, ptr noundef %arraydecay15, ptr noundef %call16), !dbg !4310
  %24 = load i32, ptr %result, align 4, !dbg !4311
  store i32 %24, ptr %retval, align 4, !dbg !4312
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4312

if.end17:                                         ; preds = %if.end
  %25 = load ptr, ptr %versionp.addr, align 8, !dbg !4313
  %26 = load ptr, ptr %25, align 8, !dbg !4314
  %27 = load ptr, ptr %sdlz, align 8, !dbg !4315
  %future_version = getelementptr inbounds %struct.dns_sdlz_db, ptr %27, i32 0, i32 5, !dbg !4316
  store ptr %26, ptr %future_version, align 8, !dbg !4317
  store i32 0, ptr %retval, align 4, !dbg !4318
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4318

cleanup:                                          ; preds = %if.end17, %if.then14, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !4319
  call void @llvm.lifetime.end.p0(i64 1024, ptr %origin) #11, !dbg !4319
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !4319
  %28 = load i32, ptr %retval, align 4, !dbg !4319
  ret i32 %28, !dbg !4319
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @attachversion(ptr noundef %db, ptr noundef %source, ptr noundef %targetp) #0 !dbg !4320 {
entry:
  %db.addr = alloca ptr, align 8
  %source.addr = alloca ptr, align 8
  %targetp.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4322, metadata !DIExpression()), !dbg !4326
  store ptr %source, ptr %source.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %source.addr, metadata !4323, metadata !DIExpression()), !dbg !4327
  store ptr %targetp, ptr %targetp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %targetp.addr, metadata !4324, metadata !DIExpression()), !dbg !4328
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !4329
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !4325, metadata !DIExpression()), !dbg !4330
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4331
  store ptr %0, ptr %sdlz, align 8, !dbg !4330
  %1 = load ptr, ptr %sdlz, align 8, !dbg !4332
  %cmp = icmp ne ptr %1, null, !dbg !4332
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4332

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %sdlz, align 8, !dbg !4332
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !4332
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !4332
  %3 = load i32, ptr %impmagic, align 4, !dbg !4332
  %cmp1 = icmp eq i32 %3, 1145854547, !dbg !4332
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4333
  %lnot = xor i1 %4, true, !dbg !4332
  %lnot2 = xor i1 %lnot, true, !dbg !4332
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4332
  %conv = sext i32 %lnot.ext to i64, !dbg !4332
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4332
  %tobool = icmp ne i64 %expval, 0, !dbg !4332
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4332

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 433, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !4332
  unreachable, !dbg !4332

5:                                                ; No predecessors!
  br label %lor.end, !dbg !4332

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !4332
  %7 = load ptr, ptr %source.addr, align 8, !dbg !4334
  %cmp3 = icmp ne ptr %7, null, !dbg !4334
  br i1 %cmp3, label %land.rhs5, label %land.end8, !dbg !4334

land.rhs5:                                        ; preds = %lor.end
  %8 = load ptr, ptr %source.addr, align 8, !dbg !4334
  %9 = load ptr, ptr %sdlz, align 8, !dbg !4334
  %dummy_version = getelementptr inbounds %struct.dns_sdlz_db, ptr %9, i32 0, i32 6, !dbg !4334
  %cmp6 = icmp eq ptr %8, %dummy_version, !dbg !4334
  br label %land.end8

land.end8:                                        ; preds = %land.rhs5, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %cmp6, %land.rhs5 ], !dbg !4333
  %lnot9 = xor i1 %10, true, !dbg !4334
  %lnot11 = xor i1 %lnot9, true, !dbg !4334
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !4334
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !4334
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 1), !dbg !4334
  %tobool15 = icmp ne i64 %expval14, 0, !dbg !4334
  br i1 %tobool15, label %lor.end17, label %lor.rhs16, !dbg !4334

lor.rhs16:                                        ; preds = %land.end8
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 434, i32 noundef 0, ptr noundef @.str.54) #12, !dbg !4334
  unreachable, !dbg !4334

11:                                               ; No predecessors!
  br label %lor.end17, !dbg !4334

lor.end17:                                        ; preds = %11, %land.end8
  %12 = phi i1 [ true, %land.end8 ], [ false, %11 ]
  %lor.ext18 = zext i1 %12 to i32, !dbg !4334
  %13 = load ptr, ptr %source.addr, align 8, !dbg !4335
  %14 = load ptr, ptr %targetp.addr, align 8, !dbg !4336
  store ptr %13, ptr %14, align 8, !dbg !4337
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !4338
  ret void, !dbg !4338
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @closeversion(ptr noundef %db, ptr noundef %versionp, i1 noundef zeroext %commit) #0 !dbg !4339 {
entry:
  %db.addr = alloca ptr, align 8
  %versionp.addr = alloca ptr, align 8
  %commit.addr = alloca i8, align 1
  %sdlz = alloca ptr, align 8
  %origin = alloca [1024 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4341, metadata !DIExpression()), !dbg !4346
  store ptr %versionp, ptr %versionp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %versionp.addr, metadata !4342, metadata !DIExpression()), !dbg !4347
  %frombool = zext i1 %commit to i8
  store i8 %frombool, ptr %commit.addr, align 1
  tail call void @llvm.dbg.declare(metadata ptr %commit.addr, metadata !4343, metadata !DIExpression()), !dbg !4348
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !4349
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !4344, metadata !DIExpression()), !dbg !4350
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4351
  store ptr %0, ptr %sdlz, align 8, !dbg !4350
  call void @llvm.lifetime.start.p0(i64 1024, ptr %origin) #11, !dbg !4352
  tail call void @llvm.dbg.declare(metadata ptr %origin, metadata !4345, metadata !DIExpression()), !dbg !4353
  %1 = load ptr, ptr %sdlz, align 8, !dbg !4354
  %cmp = icmp ne ptr %1, null, !dbg !4354
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4354

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %sdlz, align 8, !dbg !4354
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !4354
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !4354
  %3 = load i32, ptr %impmagic, align 4, !dbg !4354
  %cmp1 = icmp eq i32 %3, 1145854547, !dbg !4354
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4355
  %lnot = xor i1 %4, true, !dbg !4354
  %lnot2 = xor i1 %lnot, true, !dbg !4354
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4354
  %conv = sext i32 %lnot.ext to i64, !dbg !4354
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4354
  %tobool = icmp ne i64 %expval, 0, !dbg !4354
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4354

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 444, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !4354
  unreachable, !dbg !4354

5:                                                ; No predecessors!
  br label %lor.end, !dbg !4354

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !4354
  %7 = load ptr, ptr %versionp.addr, align 8, !dbg !4356
  %cmp3 = icmp ne ptr %7, null, !dbg !4356
  %lnot5 = xor i1 %cmp3, true, !dbg !4356
  %lnot7 = xor i1 %lnot5, true, !dbg !4356
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !4356
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !4356
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !4356
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !4356
  br i1 %tobool11, label %lor.end13, label %lor.rhs12, !dbg !4356

lor.rhs12:                                        ; preds = %lor.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 445, i32 noundef 0, ptr noundef @.str.55) #12, !dbg !4356
  unreachable, !dbg !4356

8:                                                ; No predecessors!
  br label %lor.end13, !dbg !4356

lor.end13:                                        ; preds = %8, %lor.end
  %9 = phi i1 [ true, %lor.end ], [ false, %8 ]
  %lor.ext14 = zext i1 %9 to i32, !dbg !4356
  %10 = load ptr, ptr %versionp.addr, align 8, !dbg !4357
  %11 = load ptr, ptr %10, align 8, !dbg !4359
  %12 = load ptr, ptr %sdlz, align 8, !dbg !4360
  %dummy_version = getelementptr inbounds %struct.dns_sdlz_db, ptr %12, i32 0, i32 6, !dbg !4361
  %cmp15 = icmp eq ptr %11, %dummy_version, !dbg !4362
  br i1 %cmp15, label %if.then, label %if.end, !dbg !4363

if.then:                                          ; preds = %lor.end13
  %13 = load ptr, ptr %versionp.addr, align 8, !dbg !4364
  store ptr null, ptr %13, align 8, !dbg !4366
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4367

if.end:                                           ; preds = %lor.end13
  %14 = load ptr, ptr %versionp.addr, align 8, !dbg !4368
  %15 = load ptr, ptr %14, align 8, !dbg !4368
  %16 = load ptr, ptr %sdlz, align 8, !dbg !4368
  %future_version = getelementptr inbounds %struct.dns_sdlz_db, ptr %16, i32 0, i32 5, !dbg !4368
  %17 = load ptr, ptr %future_version, align 8, !dbg !4368
  %cmp17 = icmp eq ptr %15, %17, !dbg !4368
  %lnot19 = xor i1 %cmp17, true, !dbg !4368
  %lnot21 = xor i1 %lnot19, true, !dbg !4368
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !4368
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !4368
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !4368
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !4368
  br i1 %tobool25, label %lor.end27, label %lor.rhs26, !dbg !4368

lor.rhs26:                                        ; preds = %if.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 452, i32 noundef 0, ptr noundef @.str.56) #12, !dbg !4368
  unreachable, !dbg !4368

18:                                               ; No predecessors!
  br label %lor.end27, !dbg !4368

lor.end27:                                        ; preds = %18, %if.end
  %19 = phi i1 [ true, %if.end ], [ false, %18 ]
  %lor.ext28 = zext i1 %19 to i32, !dbg !4368
  %20 = load ptr, ptr %sdlz, align 8, !dbg !4369
  %dlzimp = getelementptr inbounds %struct.dns_sdlz_db, ptr %20, i32 0, i32 2, !dbg !4369
  %21 = load ptr, ptr %dlzimp, align 8, !dbg !4369
  %methods = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %21, i32 0, i32 0, !dbg !4369
  %22 = load ptr, ptr %methods, align 8, !dbg !4369
  %closeversion = getelementptr inbounds %struct.dns_sdlzmethods, ptr %22, i32 0, i32 8, !dbg !4369
  %23 = load ptr, ptr %closeversion, align 8, !dbg !4369
  %cmp29 = icmp ne ptr %23, null, !dbg !4369
  %lnot31 = xor i1 %cmp29, true, !dbg !4369
  %lnot33 = xor i1 %lnot31, true, !dbg !4369
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !4369
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !4369
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 1), !dbg !4369
  %tobool37 = icmp ne i64 %expval36, 0, !dbg !4369
  br i1 %tobool37, label %lor.end39, label %lor.rhs38, !dbg !4369

lor.rhs38:                                        ; preds = %lor.end27
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 453, i32 noundef 0, ptr noundef @.str.57) #12, !dbg !4369
  unreachable, !dbg !4369

24:                                               ; No predecessors!
  br label %lor.end39, !dbg !4369

lor.end39:                                        ; preds = %24, %lor.end27
  %25 = phi i1 [ true, %lor.end27 ], [ false, %24 ]
  %lor.ext40 = zext i1 %25 to i32, !dbg !4369
  %26 = load ptr, ptr %sdlz, align 8, !dbg !4370
  %common41 = getelementptr inbounds %struct.dns_sdlz_db, ptr %26, i32 0, i32 0, !dbg !4371
  %origin42 = getelementptr inbounds %struct.dns_db, ptr %common41, i32 0, i32 5, !dbg !4372
  %arraydecay = getelementptr inbounds [1024 x i8], ptr %origin, i64 0, i64 0, !dbg !4373
  call void @dns_name_format(ptr noundef %origin42, ptr noundef %arraydecay, i32 noundef 1024), !dbg !4374
  %27 = load ptr, ptr %sdlz, align 8, !dbg !4375
  %dlzimp43 = getelementptr inbounds %struct.dns_sdlz_db, ptr %27, i32 0, i32 2, !dbg !4376
  %28 = load ptr, ptr %dlzimp43, align 8, !dbg !4376
  %methods44 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %28, i32 0, i32 0, !dbg !4377
  %29 = load ptr, ptr %methods44, align 8, !dbg !4377
  %closeversion45 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %29, i32 0, i32 8, !dbg !4378
  %30 = load ptr, ptr %closeversion45, align 8, !dbg !4378
  %arraydecay46 = getelementptr inbounds [1024 x i8], ptr %origin, i64 0, i64 0, !dbg !4379
  %31 = load i8, ptr %commit.addr, align 1, !dbg !4380, !range !2769, !noundef !2770
  %tobool47 = trunc i8 %31 to i1, !dbg !4380
  %32 = load ptr, ptr %sdlz, align 8, !dbg !4381
  %dlzimp48 = getelementptr inbounds %struct.dns_sdlz_db, ptr %32, i32 0, i32 2, !dbg !4382
  %33 = load ptr, ptr %dlzimp48, align 8, !dbg !4382
  %driverarg = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %33, i32 0, i32 2, !dbg !4383
  %34 = load ptr, ptr %driverarg, align 8, !dbg !4383
  %35 = load ptr, ptr %sdlz, align 8, !dbg !4384
  %dbdata = getelementptr inbounds %struct.dns_sdlz_db, ptr %35, i32 0, i32 1, !dbg !4385
  %36 = load ptr, ptr %dbdata, align 8, !dbg !4385
  %37 = load ptr, ptr %versionp.addr, align 8, !dbg !4386
  call void %30(ptr noundef %arraydecay46, i1 noundef zeroext %tobool47, ptr noundef %34, ptr noundef %36, ptr noundef %37), !dbg !4375
  %38 = load ptr, ptr %versionp.addr, align 8, !dbg !4387
  %39 = load ptr, ptr %38, align 8, !dbg !4389
  %cmp49 = icmp ne ptr %39, null, !dbg !4390
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !4391

if.then51:                                        ; preds = %lor.end39
  %arraydecay52 = getelementptr inbounds [1024 x i8], ptr %origin, i64 0, i64 0, !dbg !4392
  call void (i32, ptr, ...) @sdlz_log(i32 noundef -4, ptr noundef @.str.58, ptr noundef %arraydecay52), !dbg !4393
  br label %if.end53, !dbg !4393

if.end53:                                         ; preds = %if.then51, %lor.end39
  %40 = load ptr, ptr %sdlz, align 8, !dbg !4394
  %future_version54 = getelementptr inbounds %struct.dns_sdlz_db, ptr %40, i32 0, i32 5, !dbg !4395
  store ptr null, ptr %future_version54, align 8, !dbg !4396
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4397
  br label %cleanup, !dbg !4397

cleanup:                                          ; preds = %if.end53, %if.then
  call void @llvm.lifetime.end.p0(i64 1024, ptr %origin) #11, !dbg !4397
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !4397
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !4397

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @findnode(ptr noundef %db, ptr noundef %name, i1 noundef zeroext %create, ptr noundef %nodep) #0 !dbg !4398 {
entry:
  %db.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %create.addr = alloca i8, align 1
  %nodep.addr = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4400, metadata !DIExpression()), !dbg !4404
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !4401, metadata !DIExpression()), !dbg !4405
  %frombool = zext i1 %create to i8
  store i8 %frombool, ptr %create.addr, align 1
  tail call void @llvm.dbg.declare(metadata ptr %create.addr, metadata !4402, metadata !DIExpression()), !dbg !4406
  store ptr %nodep, ptr %nodep.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %nodep.addr, metadata !4403, metadata !DIExpression()), !dbg !4407
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4408
  %1 = load ptr, ptr %name.addr, align 8, !dbg !4409
  %2 = load i8, ptr %create.addr, align 1, !dbg !4410, !range !2769, !noundef !2770
  %tobool = trunc i8 %2 to i1, !dbg !4410
  %3 = load ptr, ptr %nodep.addr, align 8, !dbg !4411
  %call = call i32 @getnodedata(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %tobool, i32 noundef 0, ptr noundef null, ptr noundef null, ptr noundef %3), !dbg !4412
  ret i32 %call, !dbg !4413
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @find(ptr noundef %db, ptr noundef %name, ptr noundef %version, i16 noundef zeroext %type, i32 noundef %options, i32 noundef %now, ptr noundef %nodep, ptr noundef %foundname, ptr noundef %rdataset, ptr noundef %sigrdataset) #0 !dbg !4414 {
entry:
  %db.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %version.addr = alloca ptr, align 8
  %type.addr = alloca i16, align 2
  %options.addr = alloca i32, align 4
  %now.addr = alloca i32, align 4
  %nodep.addr = alloca ptr, align 8
  %foundname.addr = alloca ptr, align 8
  %rdataset.addr = alloca ptr, align 8
  %sigrdataset.addr = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4416, metadata !DIExpression()), !dbg !4426
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !4417, metadata !DIExpression()), !dbg !4427
  store ptr %version, ptr %version.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %version.addr, metadata !4418, metadata !DIExpression()), !dbg !4428
  store i16 %type, ptr %type.addr, align 2
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !4419, metadata !DIExpression()), !dbg !4429
  store i32 %options, ptr %options.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !4420, metadata !DIExpression()), !dbg !4430
  store i32 %now, ptr %now.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !4421, metadata !DIExpression()), !dbg !4431
  store ptr %nodep, ptr %nodep.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %nodep.addr, metadata !4422, metadata !DIExpression()), !dbg !4432
  store ptr %foundname, ptr %foundname.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %foundname.addr, metadata !4423, metadata !DIExpression()), !dbg !4433
  store ptr %rdataset, ptr %rdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %rdataset.addr, metadata !4424, metadata !DIExpression()), !dbg !4434
  store ptr %sigrdataset, ptr %sigrdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %sigrdataset.addr, metadata !4425, metadata !DIExpression()), !dbg !4435
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4436
  %1 = load ptr, ptr %name.addr, align 8, !dbg !4437
  %2 = load ptr, ptr %version.addr, align 8, !dbg !4438
  %3 = load i16, ptr %type.addr, align 2, !dbg !4439
  %4 = load i32, ptr %options.addr, align 4, !dbg !4440
  %5 = load i32, ptr %now.addr, align 4, !dbg !4441
  %6 = load ptr, ptr %nodep.addr, align 8, !dbg !4442
  %7 = load ptr, ptr %foundname.addr, align 8, !dbg !4443
  %8 = load ptr, ptr %rdataset.addr, align 8, !dbg !4444
  %9 = load ptr, ptr %sigrdataset.addr, align 8, !dbg !4445
  %call = call i32 @findext(ptr noundef %0, ptr noundef %1, ptr noundef %2, i16 noundef zeroext %3, i32 noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef %7, ptr noundef null, ptr noundef null, ptr noundef %8, ptr noundef %9), !dbg !4446
  ret i32 %call, !dbg !4447
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @findzonecut(ptr noundef %db, ptr noundef %name, i32 noundef %options, i32 noundef %now, ptr noundef %nodep, ptr noundef %foundname, ptr noundef %dcname, ptr noundef %rdataset, ptr noundef %sigrdataset) #0 !dbg !4448 {
entry:
  %db.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %options.addr = alloca i32, align 4
  %now.addr = alloca i32, align 4
  %nodep.addr = alloca ptr, align 8
  %foundname.addr = alloca ptr, align 8
  %dcname.addr = alloca ptr, align 8
  %rdataset.addr = alloca ptr, align 8
  %sigrdataset.addr = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4450, metadata !DIExpression()), !dbg !4459
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !4451, metadata !DIExpression()), !dbg !4460
  store i32 %options, ptr %options.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !4452, metadata !DIExpression()), !dbg !4461
  store i32 %now, ptr %now.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !4453, metadata !DIExpression()), !dbg !4462
  store ptr %nodep, ptr %nodep.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %nodep.addr, metadata !4454, metadata !DIExpression()), !dbg !4463
  store ptr %foundname, ptr %foundname.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %foundname.addr, metadata !4455, metadata !DIExpression()), !dbg !4464
  store ptr %dcname, ptr %dcname.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %dcname.addr, metadata !4456, metadata !DIExpression()), !dbg !4465
  store ptr %rdataset, ptr %rdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %rdataset.addr, metadata !4457, metadata !DIExpression()), !dbg !4466
  store ptr %sigrdataset, ptr %sigrdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %sigrdataset.addr, metadata !4458, metadata !DIExpression()), !dbg !4467
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4468
  %1 = load ptr, ptr %name.addr, align 8, !dbg !4469
  %2 = load i32, ptr %options.addr, align 4, !dbg !4470
  %3 = load i32, ptr %now.addr, align 4, !dbg !4471
  %4 = load ptr, ptr %nodep.addr, align 8, !dbg !4472
  %5 = load ptr, ptr %foundname.addr, align 8, !dbg !4473
  %6 = load ptr, ptr %dcname.addr, align 8, !dbg !4474
  %7 = load ptr, ptr %rdataset.addr, align 8, !dbg !4475
  %8 = load ptr, ptr %sigrdataset.addr, align 8, !dbg !4476
  ret i32 27, !dbg !4477
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @attachnode(ptr noundef %db, ptr noundef %source, ptr noundef %targetp) #0 !dbg !4478 {
entry:
  %db.addr = alloca ptr, align 8
  %source.addr = alloca ptr, align 8
  %targetp.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %node = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4480, metadata !DIExpression()), !dbg !4485
  store ptr %source, ptr %source.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %source.addr, metadata !4481, metadata !DIExpression()), !dbg !4486
  store ptr %targetp, ptr %targetp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %targetp.addr, metadata !4482, metadata !DIExpression()), !dbg !4487
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !4488
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !4483, metadata !DIExpression()), !dbg !4489
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4490
  store ptr %0, ptr %sdlz, align 8, !dbg !4489
  call void @llvm.lifetime.start.p0(i64 8, ptr %node) #11, !dbg !4491
  tail call void @llvm.dbg.declare(metadata ptr %node, metadata !4484, metadata !DIExpression()), !dbg !4492
  %1 = load ptr, ptr %source.addr, align 8, !dbg !4493
  store ptr %1, ptr %node, align 8, !dbg !4492
  %2 = load ptr, ptr %sdlz, align 8, !dbg !4494
  %cmp = icmp ne ptr %2, null, !dbg !4494
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4494

land.rhs:                                         ; preds = %entry
  %3 = load ptr, ptr %sdlz, align 8, !dbg !4494
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %3, i32 0, i32 0, !dbg !4494
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !4494
  %4 = load i32, ptr %impmagic, align 4, !dbg !4494
  %cmp1 = icmp eq i32 %4, 1145854547, !dbg !4494
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4495
  %lnot = xor i1 %5, true, !dbg !4494
  %lnot2 = xor i1 %lnot, true, !dbg !4494
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4494
  %conv = sext i32 %lnot.ext to i64, !dbg !4494
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4494
  %tobool = icmp ne i64 %expval, 0, !dbg !4494
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4494

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 735, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !4494
  unreachable, !dbg !4494

6:                                                ; No predecessors!
  br label %lor.end, !dbg !4494

lor.end:                                          ; preds = %6, %land.end
  %7 = phi i1 [ true, %land.end ], [ false, %6 ]
  %lor.ext = zext i1 %7 to i32, !dbg !4494
  %8 = load ptr, ptr %sdlz, align 8, !dbg !4496
  br label %do.body, !dbg !4497

do.body:                                          ; preds = %lor.end
  %9 = load ptr, ptr %node, align 8, !dbg !4498
  %lock = getelementptr inbounds %struct.dns_sdlzlookup, ptr %9, i32 0, i32 6, !dbg !4498
  %call = call i32 @pthread_mutex_lock(ptr noundef %lock) #11, !dbg !4498
  %cmp3 = icmp eq i32 %call, 0, !dbg !4498
  %10 = zext i1 %cmp3 to i64, !dbg !4498
  %cond = select i1 %cmp3, i32 0, i32 34, !dbg !4498
  %cmp5 = icmp eq i32 %cond, 0, !dbg !4498
  %lnot7 = xor i1 %cmp5, true, !dbg !4498
  %lnot9 = xor i1 %lnot7, true, !dbg !4498
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !4498
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !4498
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 1), !dbg !4498
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !4498
  br i1 %tobool13, label %lor.end15, label %lor.rhs14, !dbg !4498

lor.rhs14:                                        ; preds = %do.body
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 739, ptr noundef @.str.63) #12, !dbg !4498
  unreachable, !dbg !4498

11:                                               ; No predecessors!
  br label %lor.end15, !dbg !4498

lor.end15:                                        ; preds = %11, %do.body
  %12 = phi i1 [ true, %do.body ], [ false, %11 ]
  %lor.ext16 = zext i1 %12 to i32, !dbg !4498
  br label %do.cond, !dbg !4498

do.cond:                                          ; preds = %lor.end15
  br label %do.end, !dbg !4498

do.end:                                           ; preds = %do.cond
  %13 = load ptr, ptr %node, align 8, !dbg !4500
  %references = getelementptr inbounds %struct.dns_sdlzlookup, ptr %13, i32 0, i32 8, !dbg !4500
  %14 = load i32, ptr %references, align 8, !dbg !4500
  %cmp17 = icmp ugt i32 %14, 0, !dbg !4500
  %lnot19 = xor i1 %cmp17, true, !dbg !4500
  %lnot21 = xor i1 %lnot19, true, !dbg !4500
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !4500
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !4500
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !4500
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !4500
  br i1 %tobool25, label %lor.end27, label %lor.rhs26, !dbg !4500

lor.rhs26:                                        ; preds = %do.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 740, i32 noundef 2, ptr noundef @.str.64) #12, !dbg !4500
  unreachable, !dbg !4500

15:                                               ; No predecessors!
  br label %lor.end27, !dbg !4500

lor.end27:                                        ; preds = %15, %do.end
  %16 = phi i1 [ true, %do.end ], [ false, %15 ]
  %lor.ext28 = zext i1 %16 to i32, !dbg !4500
  %17 = load ptr, ptr %node, align 8, !dbg !4501
  %references29 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %17, i32 0, i32 8, !dbg !4502
  %18 = load i32, ptr %references29, align 8, !dbg !4503
  %inc = add i32 %18, 1, !dbg !4503
  store i32 %inc, ptr %references29, align 8, !dbg !4503
  %19 = load ptr, ptr %node, align 8, !dbg !4504
  %references30 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %19, i32 0, i32 8, !dbg !4504
  %20 = load i32, ptr %references30, align 8, !dbg !4504
  %cmp31 = icmp ne i32 %20, 0, !dbg !4504
  %lnot33 = xor i1 %cmp31, true, !dbg !4504
  %lnot35 = xor i1 %lnot33, true, !dbg !4504
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !4504
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !4504
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 1), !dbg !4504
  %tobool39 = icmp ne i64 %expval38, 0, !dbg !4504
  br i1 %tobool39, label %lor.end41, label %lor.rhs40, !dbg !4504

lor.rhs40:                                        ; preds = %lor.end27
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 742, i32 noundef 2, ptr noundef @.str.65) #12, !dbg !4504
  unreachable, !dbg !4504

21:                                               ; No predecessors!
  br label %lor.end41, !dbg !4504

lor.end41:                                        ; preds = %21, %lor.end27
  %22 = phi i1 [ true, %lor.end27 ], [ false, %21 ]
  %lor.ext42 = zext i1 %22 to i32, !dbg !4504
  br label %do.body43, !dbg !4505

do.body43:                                        ; preds = %lor.end41
  %23 = load ptr, ptr %node, align 8, !dbg !4506
  %lock44 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %23, i32 0, i32 6, !dbg !4506
  %call45 = call i32 @pthread_mutex_unlock(ptr noundef %lock44) #11, !dbg !4506
  %cmp46 = icmp eq i32 %call45, 0, !dbg !4506
  %24 = zext i1 %cmp46 to i64, !dbg !4506
  %cond48 = select i1 %cmp46, i32 0, i32 34, !dbg !4506
  %cmp49 = icmp eq i32 %cond48, 0, !dbg !4506
  %lnot51 = xor i1 %cmp49, true, !dbg !4506
  %lnot53 = xor i1 %lnot51, true, !dbg !4506
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !4506
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !4506
  %expval56 = call i64 @llvm.expect.i64(i64 %conv55, i64 1), !dbg !4506
  %tobool57 = icmp ne i64 %expval56, 0, !dbg !4506
  br i1 %tobool57, label %lor.end59, label %lor.rhs58, !dbg !4506

lor.rhs58:                                        ; preds = %do.body43
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 743, ptr noundef @.str.66) #12, !dbg !4506
  unreachable, !dbg !4506

25:                                               ; No predecessors!
  br label %lor.end59, !dbg !4506

lor.end59:                                        ; preds = %25, %do.body43
  %26 = phi i1 [ true, %do.body43 ], [ false, %25 ]
  %lor.ext60 = zext i1 %26 to i32, !dbg !4506
  br label %do.cond61, !dbg !4506

do.cond61:                                        ; preds = %lor.end59
  br label %do.end62, !dbg !4506

do.end62:                                         ; preds = %do.cond61
  %27 = load ptr, ptr %source.addr, align 8, !dbg !4508
  %28 = load ptr, ptr %targetp.addr, align 8, !dbg !4509
  store ptr %27, ptr %28, align 8, !dbg !4510
  call void @llvm.lifetime.end.p0(i64 8, ptr %node) #11, !dbg !4511
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !4511
  ret void, !dbg !4511
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @detachnode(ptr noundef %db, ptr noundef %targetp) #0 !dbg !4512 {
entry:
  %db.addr = alloca ptr, align 8
  %targetp.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %node = alloca ptr, align 8
  %need_destroy = alloca i8, align 1
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4514, metadata !DIExpression()), !dbg !4519
  store ptr %targetp, ptr %targetp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %targetp.addr, metadata !4515, metadata !DIExpression()), !dbg !4520
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !4521
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !4516, metadata !DIExpression()), !dbg !4522
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4523
  store ptr %0, ptr %sdlz, align 8, !dbg !4522
  call void @llvm.lifetime.start.p0(i64 8, ptr %node) #11, !dbg !4524
  tail call void @llvm.dbg.declare(metadata ptr %node, metadata !4517, metadata !DIExpression()), !dbg !4525
  call void @llvm.lifetime.start.p0(i64 1, ptr %need_destroy) #11, !dbg !4526
  tail call void @llvm.dbg.declare(metadata ptr %need_destroy, metadata !4518, metadata !DIExpression()), !dbg !4527
  store i8 0, ptr %need_destroy, align 1, !dbg !4527
  %1 = load ptr, ptr %sdlz, align 8, !dbg !4528
  %cmp = icmp ne ptr %1, null, !dbg !4528
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4528

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %sdlz, align 8, !dbg !4528
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !4528
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !4528
  %3 = load i32, ptr %impmagic, align 4, !dbg !4528
  %cmp1 = icmp eq i32 %3, 1145854547, !dbg !4528
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4529
  %lnot = xor i1 %4, true, !dbg !4528
  %lnot2 = xor i1 %lnot, true, !dbg !4528
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4528
  %conv = sext i32 %lnot.ext to i64, !dbg !4528
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4528
  %tobool = icmp ne i64 %expval, 0, !dbg !4528
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4528

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 754, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !4528
  unreachable, !dbg !4528

5:                                                ; No predecessors!
  br label %lor.end, !dbg !4528

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !4528
  %7 = load ptr, ptr %targetp.addr, align 8, !dbg !4530
  %cmp3 = icmp ne ptr %7, null, !dbg !4530
  br i1 %cmp3, label %land.rhs5, label %land.end8, !dbg !4530

land.rhs5:                                        ; preds = %lor.end
  %8 = load ptr, ptr %targetp.addr, align 8, !dbg !4530
  %9 = load ptr, ptr %8, align 8, !dbg !4530
  %cmp6 = icmp ne ptr %9, null, !dbg !4530
  br label %land.end8

land.end8:                                        ; preds = %land.rhs5, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %cmp6, %land.rhs5 ], !dbg !4529
  %lnot9 = xor i1 %10, true, !dbg !4530
  %lnot11 = xor i1 %lnot9, true, !dbg !4530
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !4530
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !4530
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 1), !dbg !4530
  %tobool15 = icmp ne i64 %expval14, 0, !dbg !4530
  br i1 %tobool15, label %lor.end17, label %lor.rhs16, !dbg !4530

lor.rhs16:                                        ; preds = %land.end8
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 755, i32 noundef 0, ptr noundef @.str.67) #12, !dbg !4530
  unreachable, !dbg !4530

11:                                               ; No predecessors!
  br label %lor.end17, !dbg !4530

lor.end17:                                        ; preds = %11, %land.end8
  %12 = phi i1 [ true, %land.end8 ], [ false, %11 ]
  %lor.ext18 = zext i1 %12 to i32, !dbg !4530
  %13 = load ptr, ptr %sdlz, align 8, !dbg !4531
  %14 = load ptr, ptr %targetp.addr, align 8, !dbg !4532
  %15 = load ptr, ptr %14, align 8, !dbg !4533
  store ptr %15, ptr %node, align 8, !dbg !4534
  br label %do.body, !dbg !4535

do.body:                                          ; preds = %lor.end17
  %16 = load ptr, ptr %node, align 8, !dbg !4536
  %lock = getelementptr inbounds %struct.dns_sdlzlookup, ptr %16, i32 0, i32 6, !dbg !4536
  %call = call i32 @pthread_mutex_lock(ptr noundef %lock) #11, !dbg !4536
  %cmp19 = icmp eq i32 %call, 0, !dbg !4536
  %17 = zext i1 %cmp19 to i64, !dbg !4536
  %cond = select i1 %cmp19, i32 0, i32 34, !dbg !4536
  %cmp21 = icmp eq i32 %cond, 0, !dbg !4536
  %lnot23 = xor i1 %cmp21, true, !dbg !4536
  %lnot25 = xor i1 %lnot23, true, !dbg !4536
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !4536
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !4536
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 1), !dbg !4536
  %tobool29 = icmp ne i64 %expval28, 0, !dbg !4536
  br i1 %tobool29, label %lor.end31, label %lor.rhs30, !dbg !4536

lor.rhs30:                                        ; preds = %do.body
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 761, ptr noundef @.str.63) #12, !dbg !4536
  unreachable, !dbg !4536

18:                                               ; No predecessors!
  br label %lor.end31, !dbg !4536

lor.end31:                                        ; preds = %18, %do.body
  %19 = phi i1 [ true, %do.body ], [ false, %18 ]
  %lor.ext32 = zext i1 %19 to i32, !dbg !4536
  br label %do.cond, !dbg !4536

do.cond:                                          ; preds = %lor.end31
  br label %do.end, !dbg !4536

do.end:                                           ; preds = %do.cond
  %20 = load ptr, ptr %node, align 8, !dbg !4538
  %references = getelementptr inbounds %struct.dns_sdlzlookup, ptr %20, i32 0, i32 8, !dbg !4538
  %21 = load i32, ptr %references, align 8, !dbg !4538
  %cmp33 = icmp ugt i32 %21, 0, !dbg !4538
  %lnot35 = xor i1 %cmp33, true, !dbg !4538
  %lnot37 = xor i1 %lnot35, true, !dbg !4538
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !4538
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !4538
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 1), !dbg !4538
  %tobool41 = icmp ne i64 %expval40, 0, !dbg !4538
  br i1 %tobool41, label %lor.end43, label %lor.rhs42, !dbg !4538

lor.rhs42:                                        ; preds = %do.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 762, i32 noundef 2, ptr noundef @.str.64) #12, !dbg !4538
  unreachable, !dbg !4538

22:                                               ; No predecessors!
  br label %lor.end43, !dbg !4538

lor.end43:                                        ; preds = %22, %do.end
  %23 = phi i1 [ true, %do.end ], [ false, %22 ]
  %lor.ext44 = zext i1 %23 to i32, !dbg !4538
  %24 = load ptr, ptr %node, align 8, !dbg !4539
  %references45 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %24, i32 0, i32 8, !dbg !4540
  %25 = load i32, ptr %references45, align 8, !dbg !4541
  %dec = add i32 %25, -1, !dbg !4541
  store i32 %dec, ptr %references45, align 8, !dbg !4541
  %26 = load ptr, ptr %node, align 8, !dbg !4542
  %references46 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %26, i32 0, i32 8, !dbg !4544
  %27 = load i32, ptr %references46, align 8, !dbg !4544
  %cmp47 = icmp eq i32 %27, 0, !dbg !4545
  br i1 %cmp47, label %if.then, label %if.end, !dbg !4546

if.then:                                          ; preds = %lor.end43
  store i8 1, ptr %need_destroy, align 1, !dbg !4547
  br label %if.end, !dbg !4548

if.end:                                           ; preds = %if.then, %lor.end43
  br label %do.body49, !dbg !4549

do.body49:                                        ; preds = %if.end
  %28 = load ptr, ptr %node, align 8, !dbg !4550
  %lock50 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %28, i32 0, i32 6, !dbg !4550
  %call51 = call i32 @pthread_mutex_unlock(ptr noundef %lock50) #11, !dbg !4550
  %cmp52 = icmp eq i32 %call51, 0, !dbg !4550
  %29 = zext i1 %cmp52 to i64, !dbg !4550
  %cond54 = select i1 %cmp52, i32 0, i32 34, !dbg !4550
  %cmp55 = icmp eq i32 %cond54, 0, !dbg !4550
  %lnot57 = xor i1 %cmp55, true, !dbg !4550
  %lnot59 = xor i1 %lnot57, true, !dbg !4550
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !4550
  %conv61 = sext i32 %lnot.ext60 to i64, !dbg !4550
  %expval62 = call i64 @llvm.expect.i64(i64 %conv61, i64 1), !dbg !4550
  %tobool63 = icmp ne i64 %expval62, 0, !dbg !4550
  br i1 %tobool63, label %lor.end65, label %lor.rhs64, !dbg !4550

lor.rhs64:                                        ; preds = %do.body49
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 766, ptr noundef @.str.66) #12, !dbg !4550
  unreachable, !dbg !4550

30:                                               ; No predecessors!
  br label %lor.end65, !dbg !4550

lor.end65:                                        ; preds = %30, %do.body49
  %31 = phi i1 [ true, %do.body49 ], [ false, %30 ]
  %lor.ext66 = zext i1 %31 to i32, !dbg !4550
  br label %do.cond67, !dbg !4550

do.cond67:                                        ; preds = %lor.end65
  br label %do.end68, !dbg !4550

do.end68:                                         ; preds = %do.cond67
  %32 = load i8, ptr %need_destroy, align 1, !dbg !4552, !range !2769, !noundef !2770
  %tobool69 = trunc i8 %32 to i1, !dbg !4552
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !4554

if.then70:                                        ; preds = %do.end68
  %33 = load ptr, ptr %node, align 8, !dbg !4555
  call void @destroynode(ptr noundef %33), !dbg !4556
  br label %if.end71, !dbg !4556

if.end71:                                         ; preds = %if.then70, %do.end68
  %34 = load ptr, ptr %targetp.addr, align 8, !dbg !4557
  store ptr null, ptr %34, align 8, !dbg !4558
  call void @llvm.lifetime.end.p0(i64 1, ptr %need_destroy) #11, !dbg !4559
  call void @llvm.lifetime.end.p0(i64 8, ptr %node) #11, !dbg !4559
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !4559
  ret void, !dbg !4559
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @expirenode(ptr noundef %db, ptr noundef %node, i32 noundef %now) #0 !dbg !4560 {
entry:
  %db.addr = alloca ptr, align 8
  %node.addr = alloca ptr, align 8
  %now.addr = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4562, metadata !DIExpression()), !dbg !4565
  store ptr %node, ptr %node.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !4563, metadata !DIExpression()), !dbg !4566
  store i32 %now, ptr %now.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !4564, metadata !DIExpression()), !dbg !4567
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4568
  %1 = load ptr, ptr %node.addr, align 8, !dbg !4569
  %2 = load i32, ptr %now.addr, align 4, !dbg !4570
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 779, i32 noundef 2, ptr noundef @.str.68) #12, !dbg !4571
  unreachable, !dbg !4571
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @printnode(ptr noundef %db, ptr noundef %node, ptr noundef %out) #0 !dbg !4572 {
entry:
  %db.addr = alloca ptr, align 8
  %node.addr = alloca ptr, align 8
  %out.addr = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4574, metadata !DIExpression()), !dbg !4577
  store ptr %node, ptr %node.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !4575, metadata !DIExpression()), !dbg !4578
  store ptr %out, ptr %out.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %out.addr, metadata !4576, metadata !DIExpression()), !dbg !4579
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4580
  %1 = load ptr, ptr %node.addr, align 8, !dbg !4581
  %2 = load ptr, ptr %out.addr, align 8, !dbg !4582
  ret void, !dbg !4583
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @createiterator(ptr noundef %db, i32 noundef %options, ptr noundef %iteratorp) #0 !dbg !4584 {
entry:
  %retval = alloca i32, align 4
  %db.addr = alloca ptr, align 8
  %options.addr = alloca i32, align 4
  %iteratorp.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %sdlziter = alloca ptr, align 8
  %result = alloca i32, align 4
  %b = alloca %struct.isc_buffer, align 8
  %zonestr = alloca [1024 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %_cp = alloca ptr, align 8
  %_val2 = alloca i8, align 1
  %_tmp = alloca ptr, align 8
  %flags = alloca i32, align 4
  %flags127 = alloca i32, align 4
  %iter = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4586, metadata !DIExpression()), !dbg !4607
  store i32 %options, ptr %options.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !4587, metadata !DIExpression()), !dbg !4608
  store ptr %iteratorp, ptr %iteratorp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iteratorp.addr, metadata !4588, metadata !DIExpression()), !dbg !4609
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !4610
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !4589, metadata !DIExpression()), !dbg !4611
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4612
  store ptr %0, ptr %sdlz, align 8, !dbg !4611
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlziter) #11, !dbg !4613
  tail call void @llvm.dbg.declare(metadata ptr %sdlziter, metadata !4590, metadata !DIExpression()), !dbg !4614
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !4615
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4591, metadata !DIExpression()), !dbg !4616
  call void @llvm.lifetime.start.p0(i64 64, ptr %b) #11, !dbg !4617
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !4592, metadata !DIExpression()), !dbg !4618
  call void @llvm.lifetime.start.p0(i64 1024, ptr %zonestr) #11, !dbg !4619
  tail call void @llvm.dbg.declare(metadata ptr %zonestr, metadata !4593, metadata !DIExpression()), !dbg !4620
  %1 = load ptr, ptr %sdlz, align 8, !dbg !4621
  %cmp = icmp ne ptr %1, null, !dbg !4621
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4621

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %sdlz, align 8, !dbg !4621
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !4621
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !4621
  %3 = load i32, ptr %impmagic, align 4, !dbg !4621
  %cmp1 = icmp eq i32 %3, 1145854547, !dbg !4621
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4622
  %lnot = xor i1 %4, true, !dbg !4621
  %lnot2 = xor i1 %lnot, true, !dbg !4621
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4621
  %conv = sext i32 %lnot.ext to i64, !dbg !4621
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4621
  %tobool = icmp ne i64 %expval, 0, !dbg !4621
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4621

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 800, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !4621
  unreachable, !dbg !4621

5:                                                ; No predecessors!
  br label %lor.end, !dbg !4621

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !4621
  %7 = load ptr, ptr %sdlz, align 8, !dbg !4623
  %dlzimp = getelementptr inbounds %struct.dns_sdlz_db, ptr %7, i32 0, i32 2, !dbg !4625
  %8 = load ptr, ptr %dlzimp, align 8, !dbg !4625
  %methods = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %8, i32 0, i32 0, !dbg !4626
  %9 = load ptr, ptr %methods, align 8, !dbg !4626
  %allnodes = getelementptr inbounds %struct.dns_sdlzmethods, ptr %9, i32 0, i32 5, !dbg !4627
  %10 = load ptr, ptr %allnodes, align 8, !dbg !4627
  %cmp3 = icmp eq ptr %10, null, !dbg !4628
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4629

if.then:                                          ; preds = %lor.end
  store i32 27, ptr %retval, align 4, !dbg !4630
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4630

if.end:                                           ; preds = %lor.end
  %11 = load i32, ptr %options.addr, align 4, !dbg !4631
  %and = and i32 %11, 2, !dbg !4633
  %cmp5 = icmp ne i32 %and, 0, !dbg !4634
  br i1 %cmp5, label %if.then10, label %lor.lhs.false, !dbg !4635

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, ptr %options.addr, align 4, !dbg !4636
  %and7 = and i32 %12, 4, !dbg !4637
  %cmp8 = icmp ne i32 %and7, 0, !dbg !4638
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !4639

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  store i32 27, ptr %retval, align 4, !dbg !4640
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4640

if.end11:                                         ; preds = %lor.lhs.false
  br label %do.body, !dbg !4641

do.body:                                          ; preds = %if.end11
  %arraydecay = getelementptr inbounds [1024 x i8], ptr %zonestr, i64 0, i64 0, !dbg !4642
  %base = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 1, !dbg !4642
  store ptr %arraydecay, ptr %base, align 8, !dbg !4642
  %length = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 2, !dbg !4642
  store i32 1024, ptr %length, align 8, !dbg !4642
  %used = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !4642
  store i32 0, ptr %used, align 4, !dbg !4642
  %current = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 4, !dbg !4642
  store i32 0, ptr %current, align 8, !dbg !4642
  %active = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 5, !dbg !4642
  store i32 0, ptr %active, align 4, !dbg !4642
  %mctx = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 7, !dbg !4642
  store ptr null, ptr %mctx, align 8, !dbg !4642
  br label %do.body12, !dbg !4642

do.body12:                                        ; preds = %do.body
  %link = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !4644
  %prev = getelementptr inbounds %struct.anon.6, ptr %link, i32 0, i32 0, !dbg !4644
  store ptr inttoptr (i64 -1 to ptr), ptr %prev, align 8, !dbg !4644
  %link13 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !4644
  %next = getelementptr inbounds %struct.anon.6, ptr %link13, i32 0, i32 1, !dbg !4644
  store ptr inttoptr (i64 -1 to ptr), ptr %next, align 8, !dbg !4644
  br label %do.cond, !dbg !4644

do.cond:                                          ; preds = %do.body12
  br label %do.end, !dbg !4644

do.end:                                           ; preds = %do.cond
  %magic = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 0, !dbg !4642
  store i32 1114990113, ptr %magic, align 8, !dbg !4642
  %autore = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 8, !dbg !4642
  store i8 0, ptr %autore, align 8, !dbg !4642
  br label %do.cond14, !dbg !4642

do.cond14:                                        ; preds = %do.end
  br label %do.end15, !dbg !4642

do.end15:                                         ; preds = %do.cond14
  %13 = load ptr, ptr %sdlz, align 8, !dbg !4646
  %common16 = getelementptr inbounds %struct.dns_sdlz_db, ptr %13, i32 0, i32 0, !dbg !4647
  %origin = getelementptr inbounds %struct.dns_db, ptr %common16, i32 0, i32 5, !dbg !4648
  %call = call i32 @dns_name_totext(ptr noundef %origin, i1 noundef zeroext true, ptr noundef %b), !dbg !4649
  store i32 %call, ptr %result, align 4, !dbg !4650
  %14 = load i32, ptr %result, align 4, !dbg !4651
  %cmp17 = icmp ne i32 %14, 0, !dbg !4653
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4654

if.then19:                                        ; preds = %do.end15
  %15 = load i32, ptr %result, align 4, !dbg !4655
  store i32 %15, ptr %retval, align 4, !dbg !4656
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4656

if.end20:                                         ; preds = %do.end15
  br label %do.body21, !dbg !4657

do.body21:                                        ; preds = %if.end20
  call void @llvm.lifetime.start.p0(i64 8, ptr %_cp) #11, !dbg !4658
  tail call void @llvm.dbg.declare(metadata ptr %_cp, metadata !4594, metadata !DIExpression()), !dbg !4658
  call void @llvm.lifetime.start.p0(i64 1, ptr %_val2) #11, !dbg !4658
  tail call void @llvm.dbg.declare(metadata ptr %_val2, metadata !4596, metadata !DIExpression()), !dbg !4658
  store i8 0, ptr %_val2, align 1, !dbg !4658
  %autore22 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 8, !dbg !4659
  %16 = load i8, ptr %autore22, align 8, !dbg !4659, !range !2769, !noundef !2770
  %tobool23 = trunc i8 %16 to i1, !dbg !4659
  %lnot24 = xor i1 %tobool23, true, !dbg !4659
  %lnot26 = xor i1 %lnot24, true, !dbg !4659
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !4659
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !4659
  %expval29 = call i64 @llvm.expect.i64(i64 %conv28, i64 0), !dbg !4659
  %tobool30 = icmp ne i64 %expval29, 0, !dbg !4659
  br i1 %tobool30, label %if.then31, label %if.end45, !dbg !4658

if.then31:                                        ; preds = %do.body21
  call void @llvm.lifetime.start.p0(i64 8, ptr %_tmp) #11, !dbg !4660
  tail call void @llvm.dbg.declare(metadata ptr %_tmp, metadata !4597, metadata !DIExpression()), !dbg !4660
  store ptr %b, ptr %_tmp, align 8, !dbg !4660
  %call32 = call i32 @isc_buffer_reserve(ptr noundef %_tmp, i32 noundef 1), !dbg !4660
  %cmp33 = icmp eq i32 %call32, 0, !dbg !4660
  %lnot35 = xor i1 %cmp33, true, !dbg !4660
  %lnot37 = xor i1 %lnot35, true, !dbg !4660
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !4660
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !4660
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 1), !dbg !4660
  %tobool41 = icmp ne i64 %expval40, 0, !dbg !4660
  br i1 %tobool41, label %lor.end43, label %lor.rhs42, !dbg !4660

lor.rhs42:                                        ; preds = %if.then31
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 813, i32 noundef 0, ptr noundef @.str.48) #12, !dbg !4660
  unreachable, !dbg !4660

17:                                               ; No predecessors!
  br label %lor.end43, !dbg !4660

lor.end43:                                        ; preds = %17, %if.then31
  %18 = phi i1 [ true, %if.then31 ], [ false, %17 ]
  %lor.ext44 = zext i1 %18 to i32, !dbg !4660
  call void @llvm.lifetime.end.p0(i64 8, ptr %_tmp) #11, !dbg !4659
  br label %if.end45, !dbg !4660

if.end45:                                         ; preds = %lor.end43, %do.body21
  %length46 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 2, !dbg !4658
  %19 = load i32, ptr %length46, align 8, !dbg !4658
  %used47 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !4658
  %20 = load i32, ptr %used47, align 4, !dbg !4658
  %sub = sub i32 %19, %20, !dbg !4658
  %cmp48 = icmp uge i32 %sub, 1, !dbg !4658
  %lnot50 = xor i1 %cmp48, true, !dbg !4658
  %lnot52 = xor i1 %lnot50, true, !dbg !4658
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !4658
  %conv54 = sext i32 %lnot.ext53 to i64, !dbg !4658
  %expval55 = call i64 @llvm.expect.i64(i64 %conv54, i64 1), !dbg !4658
  %tobool56 = icmp ne i64 %expval55, 0, !dbg !4658
  br i1 %tobool56, label %lor.end58, label %lor.rhs57, !dbg !4658

lor.rhs57:                                        ; preds = %if.end45
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 813, i32 noundef 0, ptr noundef @.str.49) #12, !dbg !4658
  unreachable, !dbg !4658

21:                                               ; No predecessors!
  br label %lor.end58, !dbg !4658

lor.end58:                                        ; preds = %21, %if.end45
  %22 = phi i1 [ true, %if.end45 ], [ false, %21 ]
  %lor.ext59 = zext i1 %22 to i32, !dbg !4658
  %base60 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 1, !dbg !4658
  %23 = load ptr, ptr %base60, align 8, !dbg !4658
  %used61 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !4658
  %24 = load i32, ptr %used61, align 4, !dbg !4658
  %idx.ext = zext i32 %24 to i64, !dbg !4658
  %add.ptr = getelementptr inbounds i8, ptr %23, i64 %idx.ext, !dbg !4658
  store ptr %add.ptr, ptr %_cp, align 8, !dbg !4658
  %used62 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !4658
  %25 = load i32, ptr %used62, align 4, !dbg !4658
  %inc = add i32 %25, 1, !dbg !4658
  store i32 %inc, ptr %used62, align 4, !dbg !4658
  %26 = load i8, ptr %_val2, align 1, !dbg !4658
  %27 = load ptr, ptr %_cp, align 8, !dbg !4658
  %arrayidx = getelementptr inbounds i8, ptr %27, i64 0, !dbg !4658
  store i8 %26, ptr %arrayidx, align 1, !dbg !4658
  call void @llvm.lifetime.end.p0(i64 1, ptr %_val2) #11, !dbg !4657
  call void @llvm.lifetime.end.p0(i64 8, ptr %_cp) #11, !dbg !4657
  br label %do.cond63, !dbg !4658

do.cond63:                                        ; preds = %lor.end58
  br label %do.end64, !dbg !4658

do.end64:                                         ; preds = %do.cond63
  %28 = load ptr, ptr %sdlz, align 8, !dbg !4661
  %common65 = getelementptr inbounds %struct.dns_sdlz_db, ptr %28, i32 0, i32 0, !dbg !4661
  %mctx66 = getelementptr inbounds %struct.dns_db, ptr %common65, i32 0, i32 6, !dbg !4661
  %29 = load ptr, ptr %mctx66, align 8, !dbg !4661
  %call67 = call ptr @isc__mem_get(ptr noundef %29, i64 noundef 64, ptr noundef @.str, i32 noundef 815), !dbg !4661
  store ptr %call67, ptr %sdlziter, align 8, !dbg !4662
  %30 = load ptr, ptr %sdlziter, align 8, !dbg !4663
  %cmp68 = icmp eq ptr %30, null, !dbg !4665
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !4666

if.then70:                                        ; preds = %do.end64
  store i32 1, ptr %retval, align 4, !dbg !4667
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4667

if.end71:                                         ; preds = %do.end64
  %31 = load ptr, ptr %sdlziter, align 8, !dbg !4668
  %common72 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %31, i32 0, i32 0, !dbg !4669
  %methods73 = getelementptr inbounds %struct.dns_dbiterator, ptr %common72, i32 0, i32 1, !dbg !4670
  store ptr @dbiterator_methods, ptr %methods73, align 8, !dbg !4671
  %32 = load ptr, ptr %sdlziter, align 8, !dbg !4672
  %common74 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %32, i32 0, i32 0, !dbg !4673
  %db75 = getelementptr inbounds %struct.dns_dbiterator, ptr %common74, i32 0, i32 2, !dbg !4674
  store ptr null, ptr %db75, align 8, !dbg !4675
  %33 = load ptr, ptr %db.addr, align 8, !dbg !4676
  %34 = load ptr, ptr %sdlziter, align 8, !dbg !4677
  %common76 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %34, i32 0, i32 0, !dbg !4678
  %db77 = getelementptr inbounds %struct.dns_dbiterator, ptr %common76, i32 0, i32 2, !dbg !4679
  call void @dns_db_attach(ptr noundef %33, ptr noundef %db77), !dbg !4680
  %35 = load i32, ptr %options.addr, align 4, !dbg !4681
  %and78 = and i32 %35, 1, !dbg !4682
  %cmp79 = icmp ne i32 %and78, 0, !dbg !4683
  %36 = load ptr, ptr %sdlziter, align 8, !dbg !4684
  %common81 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %36, i32 0, i32 0, !dbg !4685
  %relative_names = getelementptr inbounds %struct.dns_dbiterator, ptr %common81, i32 0, i32 3, !dbg !4686
  %frombool = zext i1 %cmp79 to i8, !dbg !4687
  store i8 %frombool, ptr %relative_names, align 8, !dbg !4687
  %37 = load ptr, ptr %sdlziter, align 8, !dbg !4688
  %common82 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %37, i32 0, i32 0, !dbg !4689
  %magic83 = getelementptr inbounds %struct.dns_dbiterator, ptr %common82, i32 0, i32 0, !dbg !4690
  store i32 1145983817, ptr %magic83, align 8, !dbg !4691
  br label %do.body84, !dbg !4692

do.body84:                                        ; preds = %if.end71
  %38 = load ptr, ptr %sdlziter, align 8, !dbg !4693
  %nodelist = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %38, i32 0, i32 1, !dbg !4693
  %head = getelementptr inbounds %struct.anon.16, ptr %nodelist, i32 0, i32 0, !dbg !4693
  store ptr null, ptr %head, align 8, !dbg !4693
  %39 = load ptr, ptr %sdlziter, align 8, !dbg !4693
  %nodelist85 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %39, i32 0, i32 1, !dbg !4693
  %tail = getelementptr inbounds %struct.anon.16, ptr %nodelist85, i32 0, i32 1, !dbg !4693
  store ptr null, ptr %tail, align 8, !dbg !4693
  br label %do.cond86, !dbg !4693

do.cond86:                                        ; preds = %do.body84
  br label %do.end87, !dbg !4693

do.end87:                                         ; preds = %do.cond86
  %40 = load ptr, ptr %sdlziter, align 8, !dbg !4695
  %current88 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %40, i32 0, i32 2, !dbg !4696
  store ptr null, ptr %current88, align 8, !dbg !4697
  %41 = load ptr, ptr %sdlziter, align 8, !dbg !4698
  %origin89 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %41, i32 0, i32 3, !dbg !4699
  store ptr null, ptr %origin89, align 8, !dbg !4700
  %arraydecay90 = getelementptr inbounds [1024 x i8], ptr %zonestr, i64 0, i64 0, !dbg !4701
  call void @dns_sdlz_tolower(ptr noundef %arraydecay90), !dbg !4702
  br label %do.body91, !dbg !4703

do.body91:                                        ; preds = %do.end87
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags) #11, !dbg !4704
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !4600, metadata !DIExpression()), !dbg !4704
  %42 = load ptr, ptr %sdlz, align 8, !dbg !4704
  %dlzimp92 = getelementptr inbounds %struct.dns_sdlz_db, ptr %42, i32 0, i32 2, !dbg !4704
  %43 = load ptr, ptr %dlzimp92, align 8, !dbg !4704
  %flags93 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %43, i32 0, i32 3, !dbg !4704
  %44 = load i32, ptr %flags93, align 8, !dbg !4704
  store i32 %44, ptr %flags, align 4, !dbg !4704
  %45 = load i32, ptr %flags, align 4, !dbg !4705
  %and94 = and i32 %45, 1, !dbg !4705
  %cmp95 = icmp eq i32 %and94, 0, !dbg !4705
  br i1 %cmp95, label %if.then97, label %if.end117, !dbg !4704

if.then97:                                        ; preds = %do.body91
  br label %do.body98, !dbg !4705

do.body98:                                        ; preds = %if.then97
  %46 = load ptr, ptr %sdlz, align 8, !dbg !4707
  %dlzimp99 = getelementptr inbounds %struct.dns_sdlz_db, ptr %46, i32 0, i32 2, !dbg !4707
  %47 = load ptr, ptr %dlzimp99, align 8, !dbg !4707
  %driverlock = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %47, i32 0, i32 4, !dbg !4707
  %call100 = call i32 @pthread_mutex_lock(ptr noundef %driverlock) #11, !dbg !4707
  %cmp101 = icmp eq i32 %call100, 0, !dbg !4707
  %48 = zext i1 %cmp101 to i64, !dbg !4707
  %cond = select i1 %cmp101, i32 0, i32 34, !dbg !4707
  %cmp103 = icmp eq i32 %cond, 0, !dbg !4707
  %lnot105 = xor i1 %cmp103, true, !dbg !4707
  %lnot107 = xor i1 %lnot105, true, !dbg !4707
  %lnot.ext108 = zext i1 %lnot107 to i32, !dbg !4707
  %conv109 = sext i32 %lnot.ext108 to i64, !dbg !4707
  %expval110 = call i64 @llvm.expect.i64(i64 %conv109, i64 1), !dbg !4707
  %tobool111 = icmp ne i64 %expval110, 0, !dbg !4707
  br i1 %tobool111, label %lor.end113, label %lor.rhs112, !dbg !4707

lor.rhs112:                                       ; preds = %do.body98
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 832, ptr noundef @.str.61) #12, !dbg !4707
  unreachable, !dbg !4707

49:                                               ; No predecessors!
  br label %lor.end113, !dbg !4707

lor.end113:                                       ; preds = %49, %do.body98
  %50 = phi i1 [ true, %do.body98 ], [ false, %49 ]
  %lor.ext114 = zext i1 %50 to i32, !dbg !4707
  br label %do.cond115, !dbg !4707

do.cond115:                                       ; preds = %lor.end113
  br label %do.end116, !dbg !4707

do.end116:                                        ; preds = %do.cond115
  br label %if.end117, !dbg !4707

if.end117:                                        ; preds = %do.end116, %do.body91
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags) #11, !dbg !4703
  br label %do.cond118, !dbg !4704

do.cond118:                                       ; preds = %if.end117
  br label %do.end119, !dbg !4704

do.end119:                                        ; preds = %do.cond118
  %51 = load ptr, ptr %sdlz, align 8, !dbg !4709
  %dlzimp120 = getelementptr inbounds %struct.dns_sdlz_db, ptr %51, i32 0, i32 2, !dbg !4710
  %52 = load ptr, ptr %dlzimp120, align 8, !dbg !4710
  %methods121 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %52, i32 0, i32 0, !dbg !4711
  %53 = load ptr, ptr %methods121, align 8, !dbg !4711
  %allnodes122 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %53, i32 0, i32 5, !dbg !4712
  %54 = load ptr, ptr %allnodes122, align 8, !dbg !4712
  %arraydecay123 = getelementptr inbounds [1024 x i8], ptr %zonestr, i64 0, i64 0, !dbg !4713
  %55 = load ptr, ptr %sdlz, align 8, !dbg !4714
  %dlzimp124 = getelementptr inbounds %struct.dns_sdlz_db, ptr %55, i32 0, i32 2, !dbg !4715
  %56 = load ptr, ptr %dlzimp124, align 8, !dbg !4715
  %driverarg = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %56, i32 0, i32 2, !dbg !4716
  %57 = load ptr, ptr %driverarg, align 8, !dbg !4716
  %58 = load ptr, ptr %sdlz, align 8, !dbg !4717
  %dbdata = getelementptr inbounds %struct.dns_sdlz_db, ptr %58, i32 0, i32 1, !dbg !4718
  %59 = load ptr, ptr %dbdata, align 8, !dbg !4718
  %60 = load ptr, ptr %sdlziter, align 8, !dbg !4719
  %call125 = call i32 %54(ptr noundef %arraydecay123, ptr noundef %57, ptr noundef %59, ptr noundef %60), !dbg !4709
  store i32 %call125, ptr %result, align 4, !dbg !4720
  br label %do.body126, !dbg !4721

do.body126:                                       ; preds = %do.end119
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags127) #11, !dbg !4722
  tail call void @llvm.dbg.declare(metadata ptr %flags127, metadata !4602, metadata !DIExpression()), !dbg !4722
  %61 = load ptr, ptr %sdlz, align 8, !dbg !4722
  %dlzimp128 = getelementptr inbounds %struct.dns_sdlz_db, ptr %61, i32 0, i32 2, !dbg !4722
  %62 = load ptr, ptr %dlzimp128, align 8, !dbg !4722
  %flags129 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %62, i32 0, i32 3, !dbg !4722
  %63 = load i32, ptr %flags129, align 8, !dbg !4722
  store i32 %63, ptr %flags127, align 4, !dbg !4722
  %64 = load i32, ptr %flags127, align 4, !dbg !4723
  %and130 = and i32 %64, 1, !dbg !4723
  %cmp131 = icmp eq i32 %and130, 0, !dbg !4723
  br i1 %cmp131, label %if.then133, label %if.end155, !dbg !4722

if.then133:                                       ; preds = %do.body126
  br label %do.body134, !dbg !4723

do.body134:                                       ; preds = %if.then133
  %65 = load ptr, ptr %sdlz, align 8, !dbg !4725
  %dlzimp135 = getelementptr inbounds %struct.dns_sdlz_db, ptr %65, i32 0, i32 2, !dbg !4725
  %66 = load ptr, ptr %dlzimp135, align 8, !dbg !4725
  %driverlock136 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %66, i32 0, i32 4, !dbg !4725
  %call137 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock136) #11, !dbg !4725
  %cmp138 = icmp eq i32 %call137, 0, !dbg !4725
  %67 = zext i1 %cmp138 to i64, !dbg !4725
  %cond140 = select i1 %cmp138, i32 0, i32 34, !dbg !4725
  %cmp141 = icmp eq i32 %cond140, 0, !dbg !4725
  %lnot143 = xor i1 %cmp141, true, !dbg !4725
  %lnot145 = xor i1 %lnot143, true, !dbg !4725
  %lnot.ext146 = zext i1 %lnot145 to i32, !dbg !4725
  %conv147 = sext i32 %lnot.ext146 to i64, !dbg !4725
  %expval148 = call i64 @llvm.expect.i64(i64 %conv147, i64 1), !dbg !4725
  %tobool149 = icmp ne i64 %expval148, 0, !dbg !4725
  br i1 %tobool149, label %lor.end151, label %lor.rhs150, !dbg !4725

lor.rhs150:                                       ; preds = %do.body134
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 836, ptr noundef @.str.62) #12, !dbg !4725
  unreachable, !dbg !4725

68:                                               ; No predecessors!
  br label %lor.end151, !dbg !4725

lor.end151:                                       ; preds = %68, %do.body134
  %69 = phi i1 [ true, %do.body134 ], [ false, %68 ]
  %lor.ext152 = zext i1 %69 to i32, !dbg !4725
  br label %do.cond153, !dbg !4725

do.cond153:                                       ; preds = %lor.end151
  br label %do.end154, !dbg !4725

do.end154:                                        ; preds = %do.cond153
  br label %if.end155, !dbg !4725

if.end155:                                        ; preds = %do.end154, %do.body126
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags127) #11, !dbg !4721
  br label %do.cond156, !dbg !4722

do.cond156:                                       ; preds = %if.end155
  br label %do.end157, !dbg !4722

do.end157:                                        ; preds = %do.cond156
  %70 = load i32, ptr %result, align 4, !dbg !4727
  %cmp158 = icmp ne i32 %70, 0, !dbg !4728
  br i1 %cmp158, label %if.then160, label %if.end162, !dbg !4729

if.then160:                                       ; preds = %do.end157
  call void @llvm.lifetime.start.p0(i64 8, ptr %iter) #11, !dbg !4730
  tail call void @llvm.dbg.declare(metadata ptr %iter, metadata !4604, metadata !DIExpression()), !dbg !4731
  %71 = load ptr, ptr %sdlziter, align 8, !dbg !4732
  %common161 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %71, i32 0, i32 0, !dbg !4733
  store ptr %common161, ptr %iter, align 8, !dbg !4731
  call void @dbiterator_destroy(ptr noundef %iter), !dbg !4734
  %72 = load i32, ptr %result, align 4, !dbg !4735
  store i32 %72, ptr %retval, align 4, !dbg !4736
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %iter) #11, !dbg !4737
  br label %cleanup

if.end162:                                        ; preds = %do.end157
  %73 = load ptr, ptr %sdlziter, align 8, !dbg !4738
  %origin163 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %73, i32 0, i32 3, !dbg !4740
  %74 = load ptr, ptr %origin163, align 8, !dbg !4740
  %cmp164 = icmp ne ptr %74, null, !dbg !4741
  br i1 %cmp164, label %if.then166, label %if.end312, !dbg !4742

if.then166:                                       ; preds = %if.end162
  br label %do.body167, !dbg !4743

do.body167:                                       ; preds = %if.then166
  br label %do.body168, !dbg !4745

do.body168:                                       ; preds = %do.body167
  %75 = load ptr, ptr %sdlziter, align 8, !dbg !4747
  %origin169 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %75, i32 0, i32 3, !dbg !4747
  %76 = load ptr, ptr %origin169, align 8, !dbg !4747
  %link170 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %76, i32 0, i32 5, !dbg !4747
  %next171 = getelementptr inbounds %struct.anon.9, ptr %link170, i32 0, i32 1, !dbg !4747
  %77 = load ptr, ptr %next171, align 8, !dbg !4747
  %cmp172 = icmp ne ptr %77, null, !dbg !4747
  br i1 %cmp172, label %if.then174, label %if.else, !dbg !4750

if.then174:                                       ; preds = %do.body168
  %78 = load ptr, ptr %sdlziter, align 8, !dbg !4747
  %origin175 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %78, i32 0, i32 3, !dbg !4747
  %79 = load ptr, ptr %origin175, align 8, !dbg !4747
  %link176 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %79, i32 0, i32 5, !dbg !4747
  %prev177 = getelementptr inbounds %struct.anon.9, ptr %link176, i32 0, i32 0, !dbg !4747
  %80 = load ptr, ptr %prev177, align 8, !dbg !4747
  %81 = load ptr, ptr %sdlziter, align 8, !dbg !4747
  %origin178 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %81, i32 0, i32 3, !dbg !4747
  %82 = load ptr, ptr %origin178, align 8, !dbg !4747
  %link179 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %82, i32 0, i32 5, !dbg !4747
  %next180 = getelementptr inbounds %struct.anon.9, ptr %link179, i32 0, i32 1, !dbg !4747
  %83 = load ptr, ptr %next180, align 8, !dbg !4747
  %link181 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %83, i32 0, i32 5, !dbg !4747
  %prev182 = getelementptr inbounds %struct.anon.9, ptr %link181, i32 0, i32 0, !dbg !4747
  store ptr %80, ptr %prev182, align 8, !dbg !4747
  br label %if.end203, !dbg !4747

if.else:                                          ; preds = %do.body168
  %84 = load ptr, ptr %sdlziter, align 8, !dbg !4751
  %nodelist183 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %84, i32 0, i32 1, !dbg !4751
  %tail184 = getelementptr inbounds %struct.anon.16, ptr %nodelist183, i32 0, i32 1, !dbg !4751
  %85 = load ptr, ptr %tail184, align 8, !dbg !4751
  %86 = load ptr, ptr %sdlziter, align 8, !dbg !4751
  %origin185 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %86, i32 0, i32 3, !dbg !4751
  %87 = load ptr, ptr %origin185, align 8, !dbg !4751
  %cmp186 = icmp eq ptr %85, %87, !dbg !4751
  %lnot188 = xor i1 %cmp186, true, !dbg !4751
  %lnot190 = xor i1 %lnot188, true, !dbg !4751
  %lnot.ext191 = zext i1 %lnot190 to i32, !dbg !4751
  %conv192 = sext i32 %lnot.ext191 to i64, !dbg !4751
  %expval193 = call i64 @llvm.expect.i64(i64 %conv192, i64 1), !dbg !4751
  %tobool194 = icmp ne i64 %expval193, 0, !dbg !4751
  br i1 %tobool194, label %lor.end196, label %lor.rhs195, !dbg !4751

lor.rhs195:                                       ; preds = %if.else
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 844, i32 noundef 2, ptr noundef @.str.69) #12, !dbg !4751
  unreachable, !dbg !4751

88:                                               ; No predecessors!
  br label %lor.end196, !dbg !4751

lor.end196:                                       ; preds = %88, %if.else
  %89 = phi i1 [ true, %if.else ], [ false, %88 ]
  %lor.ext197 = zext i1 %89 to i32, !dbg !4751
  %90 = load ptr, ptr %sdlziter, align 8, !dbg !4751
  %origin198 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %90, i32 0, i32 3, !dbg !4751
  %91 = load ptr, ptr %origin198, align 8, !dbg !4751
  %link199 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %91, i32 0, i32 5, !dbg !4751
  %prev200 = getelementptr inbounds %struct.anon.9, ptr %link199, i32 0, i32 0, !dbg !4751
  %92 = load ptr, ptr %prev200, align 8, !dbg !4751
  %93 = load ptr, ptr %sdlziter, align 8, !dbg !4751
  %nodelist201 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %93, i32 0, i32 1, !dbg !4751
  %tail202 = getelementptr inbounds %struct.anon.16, ptr %nodelist201, i32 0, i32 1, !dbg !4751
  store ptr %92, ptr %tail202, align 8, !dbg !4751
  br label %if.end203

if.end203:                                        ; preds = %lor.end196, %if.then174
  %94 = load ptr, ptr %sdlziter, align 8, !dbg !4753
  %origin204 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %94, i32 0, i32 3, !dbg !4753
  %95 = load ptr, ptr %origin204, align 8, !dbg !4753
  %link205 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %95, i32 0, i32 5, !dbg !4753
  %prev206 = getelementptr inbounds %struct.anon.9, ptr %link205, i32 0, i32 0, !dbg !4753
  %96 = load ptr, ptr %prev206, align 8, !dbg !4753
  %cmp207 = icmp ne ptr %96, null, !dbg !4753
  br i1 %cmp207, label %if.then209, label %if.else218, !dbg !4750

if.then209:                                       ; preds = %if.end203
  %97 = load ptr, ptr %sdlziter, align 8, !dbg !4753
  %origin210 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %97, i32 0, i32 3, !dbg !4753
  %98 = load ptr, ptr %origin210, align 8, !dbg !4753
  %link211 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %98, i32 0, i32 5, !dbg !4753
  %next212 = getelementptr inbounds %struct.anon.9, ptr %link211, i32 0, i32 1, !dbg !4753
  %99 = load ptr, ptr %next212, align 8, !dbg !4753
  %100 = load ptr, ptr %sdlziter, align 8, !dbg !4753
  %origin213 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %100, i32 0, i32 3, !dbg !4753
  %101 = load ptr, ptr %origin213, align 8, !dbg !4753
  %link214 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %101, i32 0, i32 5, !dbg !4753
  %prev215 = getelementptr inbounds %struct.anon.9, ptr %link214, i32 0, i32 0, !dbg !4753
  %102 = load ptr, ptr %prev215, align 8, !dbg !4753
  %link216 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %102, i32 0, i32 5, !dbg !4753
  %next217 = getelementptr inbounds %struct.anon.9, ptr %link216, i32 0, i32 1, !dbg !4753
  store ptr %99, ptr %next217, align 8, !dbg !4753
  br label %if.end239, !dbg !4753

if.else218:                                       ; preds = %if.end203
  %103 = load ptr, ptr %sdlziter, align 8, !dbg !4755
  %nodelist219 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %103, i32 0, i32 1, !dbg !4755
  %head220 = getelementptr inbounds %struct.anon.16, ptr %nodelist219, i32 0, i32 0, !dbg !4755
  %104 = load ptr, ptr %head220, align 8, !dbg !4755
  %105 = load ptr, ptr %sdlziter, align 8, !dbg !4755
  %origin221 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %105, i32 0, i32 3, !dbg !4755
  %106 = load ptr, ptr %origin221, align 8, !dbg !4755
  %cmp222 = icmp eq ptr %104, %106, !dbg !4755
  %lnot224 = xor i1 %cmp222, true, !dbg !4755
  %lnot226 = xor i1 %lnot224, true, !dbg !4755
  %lnot.ext227 = zext i1 %lnot226 to i32, !dbg !4755
  %conv228 = sext i32 %lnot.ext227 to i64, !dbg !4755
  %expval229 = call i64 @llvm.expect.i64(i64 %conv228, i64 1), !dbg !4755
  %tobool230 = icmp ne i64 %expval229, 0, !dbg !4755
  br i1 %tobool230, label %lor.end232, label %lor.rhs231, !dbg !4755

lor.rhs231:                                       ; preds = %if.else218
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 844, i32 noundef 2, ptr noundef @.str.70) #12, !dbg !4755
  unreachable, !dbg !4755

107:                                              ; No predecessors!
  br label %lor.end232, !dbg !4755

lor.end232:                                       ; preds = %107, %if.else218
  %108 = phi i1 [ true, %if.else218 ], [ false, %107 ]
  %lor.ext233 = zext i1 %108 to i32, !dbg !4755
  %109 = load ptr, ptr %sdlziter, align 8, !dbg !4755
  %origin234 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %109, i32 0, i32 3, !dbg !4755
  %110 = load ptr, ptr %origin234, align 8, !dbg !4755
  %link235 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %110, i32 0, i32 5, !dbg !4755
  %next236 = getelementptr inbounds %struct.anon.9, ptr %link235, i32 0, i32 1, !dbg !4755
  %111 = load ptr, ptr %next236, align 8, !dbg !4755
  %112 = load ptr, ptr %sdlziter, align 8, !dbg !4755
  %nodelist237 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %112, i32 0, i32 1, !dbg !4755
  %head238 = getelementptr inbounds %struct.anon.16, ptr %nodelist237, i32 0, i32 0, !dbg !4755
  store ptr %111, ptr %head238, align 8, !dbg !4755
  br label %if.end239

if.end239:                                        ; preds = %lor.end232, %if.then209
  %113 = load ptr, ptr %sdlziter, align 8, !dbg !4750
  %origin240 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %113, i32 0, i32 3, !dbg !4750
  %114 = load ptr, ptr %origin240, align 8, !dbg !4750
  %link241 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %114, i32 0, i32 5, !dbg !4750
  %prev242 = getelementptr inbounds %struct.anon.9, ptr %link241, i32 0, i32 0, !dbg !4750
  store ptr inttoptr (i64 -1 to ptr), ptr %prev242, align 8, !dbg !4750
  %115 = load ptr, ptr %sdlziter, align 8, !dbg !4750
  %origin243 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %115, i32 0, i32 3, !dbg !4750
  %116 = load ptr, ptr %origin243, align 8, !dbg !4750
  %link244 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %116, i32 0, i32 5, !dbg !4750
  %next245 = getelementptr inbounds %struct.anon.9, ptr %link244, i32 0, i32 1, !dbg !4750
  store ptr inttoptr (i64 -1 to ptr), ptr %next245, align 8, !dbg !4750
  %117 = load ptr, ptr %sdlziter, align 8, !dbg !4750
  %nodelist246 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %117, i32 0, i32 1, !dbg !4750
  %head247 = getelementptr inbounds %struct.anon.16, ptr %nodelist246, i32 0, i32 0, !dbg !4750
  %118 = load ptr, ptr %head247, align 8, !dbg !4750
  %119 = load ptr, ptr %sdlziter, align 8, !dbg !4750
  %origin248 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %119, i32 0, i32 3, !dbg !4750
  %120 = load ptr, ptr %origin248, align 8, !dbg !4750
  %cmp249 = icmp ne ptr %118, %120, !dbg !4750
  %lnot251 = xor i1 %cmp249, true, !dbg !4750
  %lnot253 = xor i1 %lnot251, true, !dbg !4750
  %lnot.ext254 = zext i1 %lnot253 to i32, !dbg !4750
  %conv255 = sext i32 %lnot.ext254 to i64, !dbg !4750
  %expval256 = call i64 @llvm.expect.i64(i64 %conv255, i64 1), !dbg !4750
  %tobool257 = icmp ne i64 %expval256, 0, !dbg !4750
  br i1 %tobool257, label %lor.end259, label %lor.rhs258, !dbg !4750

lor.rhs258:                                       ; preds = %if.end239
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 844, i32 noundef 2, ptr noundef @.str.71) #12, !dbg !4750
  unreachable, !dbg !4750

121:                                              ; No predecessors!
  br label %lor.end259, !dbg !4750

lor.end259:                                       ; preds = %121, %if.end239
  %122 = phi i1 [ true, %if.end239 ], [ false, %121 ]
  %lor.ext260 = zext i1 %122 to i32, !dbg !4750
  %123 = load ptr, ptr %sdlziter, align 8, !dbg !4750
  %nodelist261 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %123, i32 0, i32 1, !dbg !4750
  %tail262 = getelementptr inbounds %struct.anon.16, ptr %nodelist261, i32 0, i32 1, !dbg !4750
  %124 = load ptr, ptr %tail262, align 8, !dbg !4750
  %125 = load ptr, ptr %sdlziter, align 8, !dbg !4750
  %origin263 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %125, i32 0, i32 3, !dbg !4750
  %126 = load ptr, ptr %origin263, align 8, !dbg !4750
  %cmp264 = icmp ne ptr %124, %126, !dbg !4750
  %lnot266 = xor i1 %cmp264, true, !dbg !4750
  %lnot268 = xor i1 %lnot266, true, !dbg !4750
  %lnot.ext269 = zext i1 %lnot268 to i32, !dbg !4750
  %conv270 = sext i32 %lnot.ext269 to i64, !dbg !4750
  %expval271 = call i64 @llvm.expect.i64(i64 %conv270, i64 1), !dbg !4750
  %tobool272 = icmp ne i64 %expval271, 0, !dbg !4750
  br i1 %tobool272, label %lor.end274, label %lor.rhs273, !dbg !4750

lor.rhs273:                                       ; preds = %lor.end259
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 844, i32 noundef 2, ptr noundef @.str.72) #12, !dbg !4750
  unreachable, !dbg !4750

127:                                              ; No predecessors!
  br label %lor.end274, !dbg !4750

lor.end274:                                       ; preds = %127, %lor.end259
  %128 = phi i1 [ true, %lor.end259 ], [ false, %127 ]
  %lor.ext275 = zext i1 %128 to i32, !dbg !4750
  br label %do.cond276, !dbg !4750

do.cond276:                                       ; preds = %lor.end274
  br label %do.end277, !dbg !4750

do.end277:                                        ; preds = %do.cond276
  br label %do.cond278, !dbg !4745

do.cond278:                                       ; preds = %do.end277
  br label %do.end279, !dbg !4745

do.end279:                                        ; preds = %do.cond278
  br label %do.body280, !dbg !4757

do.body280:                                       ; preds = %do.end279
  br label %do.body281, !dbg !4758

do.body281:                                       ; preds = %do.body280
  %129 = load ptr, ptr %sdlziter, align 8, !dbg !4760
  %nodelist282 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %129, i32 0, i32 1, !dbg !4760
  %head283 = getelementptr inbounds %struct.anon.16, ptr %nodelist282, i32 0, i32 0, !dbg !4760
  %130 = load ptr, ptr %head283, align 8, !dbg !4760
  %cmp284 = icmp ne ptr %130, null, !dbg !4760
  br i1 %cmp284, label %if.then286, label %if.else292, !dbg !4763

if.then286:                                       ; preds = %do.body281
  %131 = load ptr, ptr %sdlziter, align 8, !dbg !4760
  %origin287 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %131, i32 0, i32 3, !dbg !4760
  %132 = load ptr, ptr %origin287, align 8, !dbg !4760
  %133 = load ptr, ptr %sdlziter, align 8, !dbg !4760
  %nodelist288 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %133, i32 0, i32 1, !dbg !4760
  %head289 = getelementptr inbounds %struct.anon.16, ptr %nodelist288, i32 0, i32 0, !dbg !4760
  %134 = load ptr, ptr %head289, align 8, !dbg !4760
  %link290 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %134, i32 0, i32 5, !dbg !4760
  %prev291 = getelementptr inbounds %struct.anon.9, ptr %link290, i32 0, i32 0, !dbg !4760
  store ptr %132, ptr %prev291, align 8, !dbg !4760
  br label %if.end296, !dbg !4760

if.else292:                                       ; preds = %do.body281
  %135 = load ptr, ptr %sdlziter, align 8, !dbg !4760
  %origin293 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %135, i32 0, i32 3, !dbg !4760
  %136 = load ptr, ptr %origin293, align 8, !dbg !4760
  %137 = load ptr, ptr %sdlziter, align 8, !dbg !4760
  %nodelist294 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %137, i32 0, i32 1, !dbg !4760
  %tail295 = getelementptr inbounds %struct.anon.16, ptr %nodelist294, i32 0, i32 1, !dbg !4760
  store ptr %136, ptr %tail295, align 8, !dbg !4760
  br label %if.end296

if.end296:                                        ; preds = %if.else292, %if.then286
  %138 = load ptr, ptr %sdlziter, align 8, !dbg !4763
  %origin297 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %138, i32 0, i32 3, !dbg !4763
  %139 = load ptr, ptr %origin297, align 8, !dbg !4763
  %link298 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %139, i32 0, i32 5, !dbg !4763
  %prev299 = getelementptr inbounds %struct.anon.9, ptr %link298, i32 0, i32 0, !dbg !4763
  store ptr null, ptr %prev299, align 8, !dbg !4763
  %140 = load ptr, ptr %sdlziter, align 8, !dbg !4763
  %nodelist300 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %140, i32 0, i32 1, !dbg !4763
  %head301 = getelementptr inbounds %struct.anon.16, ptr %nodelist300, i32 0, i32 0, !dbg !4763
  %141 = load ptr, ptr %head301, align 8, !dbg !4763
  %142 = load ptr, ptr %sdlziter, align 8, !dbg !4763
  %origin302 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %142, i32 0, i32 3, !dbg !4763
  %143 = load ptr, ptr %origin302, align 8, !dbg !4763
  %link303 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %143, i32 0, i32 5, !dbg !4763
  %next304 = getelementptr inbounds %struct.anon.9, ptr %link303, i32 0, i32 1, !dbg !4763
  store ptr %141, ptr %next304, align 8, !dbg !4763
  %144 = load ptr, ptr %sdlziter, align 8, !dbg !4763
  %origin305 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %144, i32 0, i32 3, !dbg !4763
  %145 = load ptr, ptr %origin305, align 8, !dbg !4763
  %146 = load ptr, ptr %sdlziter, align 8, !dbg !4763
  %nodelist306 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %146, i32 0, i32 1, !dbg !4763
  %head307 = getelementptr inbounds %struct.anon.16, ptr %nodelist306, i32 0, i32 0, !dbg !4763
  store ptr %145, ptr %head307, align 8, !dbg !4763
  br label %do.cond308, !dbg !4763

do.cond308:                                       ; preds = %if.end296
  br label %do.end309, !dbg !4763

do.end309:                                        ; preds = %do.cond308
  br label %do.cond310, !dbg !4758

do.cond310:                                       ; preds = %do.end309
  br label %do.end311, !dbg !4758

do.end311:                                        ; preds = %do.cond310
  br label %if.end312, !dbg !4764

if.end312:                                        ; preds = %do.end311, %if.end162
  %147 = load ptr, ptr %sdlziter, align 8, !dbg !4765
  %148 = load ptr, ptr %iteratorp.addr, align 8, !dbg !4766
  store ptr %147, ptr %148, align 8, !dbg !4767
  store i32 0, ptr %retval, align 4, !dbg !4768
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4768

cleanup:                                          ; preds = %if.end312, %if.then160, %if.then70, %if.then19, %if.then10, %if.then
  call void @llvm.lifetime.end.p0(i64 1024, ptr %zonestr) #11, !dbg !4769
  call void @llvm.lifetime.end.p0(i64 64, ptr %b) #11, !dbg !4769
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !4769
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlziter) #11, !dbg !4769
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !4769
  %149 = load i32, ptr %retval, align 4, !dbg !4769
  ret i32 %149, !dbg !4769
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @findrdataset(ptr noundef %db, ptr noundef %node, ptr noundef %version, i16 noundef zeroext %type, i16 noundef zeroext %covers, i32 noundef %now, ptr noundef %rdataset, ptr noundef %sigrdataset) #0 !dbg !4770 {
entry:
  %retval = alloca i32, align 4
  %db.addr = alloca ptr, align 8
  %node.addr = alloca ptr, align 8
  %version.addr = alloca ptr, align 8
  %type.addr = alloca i16, align 2
  %covers.addr = alloca i16, align 2
  %now.addr = alloca i32, align 4
  %rdataset.addr = alloca ptr, align 8
  %sigrdataset.addr = alloca ptr, align 8
  %list = alloca ptr, align 8
  %sdlznode = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4772, metadata !DIExpression()), !dbg !4782
  store ptr %node, ptr %node.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !4773, metadata !DIExpression()), !dbg !4783
  store ptr %version, ptr %version.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %version.addr, metadata !4774, metadata !DIExpression()), !dbg !4784
  store i16 %type, ptr %type.addr, align 2
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !4775, metadata !DIExpression()), !dbg !4785
  store i16 %covers, ptr %covers.addr, align 2
  tail call void @llvm.dbg.declare(metadata ptr %covers.addr, metadata !4776, metadata !DIExpression()), !dbg !4786
  store i32 %now, ptr %now.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !4777, metadata !DIExpression()), !dbg !4787
  store ptr %rdataset, ptr %rdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %rdataset.addr, metadata !4778, metadata !DIExpression()), !dbg !4788
  store ptr %sigrdataset, ptr %sigrdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %sigrdataset.addr, metadata !4779, metadata !DIExpression()), !dbg !4789
  call void @llvm.lifetime.start.p0(i64 8, ptr %list) #11, !dbg !4790
  tail call void @llvm.dbg.declare(metadata ptr %list, metadata !4780, metadata !DIExpression()), !dbg !4791
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlznode) #11, !dbg !4792
  tail call void @llvm.dbg.declare(metadata ptr %sdlznode, metadata !4781, metadata !DIExpression()), !dbg !4793
  %0 = load ptr, ptr %node.addr, align 8, !dbg !4794
  store ptr %0, ptr %sdlznode, align 8, !dbg !4793
  %1 = load ptr, ptr %node.addr, align 8, !dbg !4795
  %cmp = icmp ne ptr %1, null, !dbg !4795
  %lnot = xor i1 %cmp, true, !dbg !4795
  %lnot1 = xor i1 %lnot, true, !dbg !4795
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4795
  %conv = sext i32 %lnot.ext to i64, !dbg !4795
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4795
  %tobool = icmp ne i64 %expval, 0, !dbg !4795
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4795

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %node.addr, align 8, !dbg !4795
  %magic = getelementptr inbounds %struct.isc__magic_t, ptr %2, i32 0, i32 0, !dbg !4795
  %3 = load i32, ptr %magic, align 4, !dbg !4795
  %cmp2 = icmp eq i32 %3, 1145854540, !dbg !4795
  %lnot4 = xor i1 %cmp2, true, !dbg !4795
  %lnot6 = xor i1 %lnot4, true, !dbg !4795
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !4795
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !4795
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 1), !dbg !4795
  %tobool10 = icmp ne i64 %expval9, 0, !dbg !4795
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool10, %land.rhs ], !dbg !4796
  %lnot11 = xor i1 %4, true, !dbg !4795
  %lnot13 = xor i1 %lnot11, true, !dbg !4795
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !4795
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !4795
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 1), !dbg !4795
  %tobool17 = icmp ne i64 %expval16, 0, !dbg !4795
  br i1 %tobool17, label %lor.end, label %lor.rhs, !dbg !4795

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 862, i32 noundef 0, ptr noundef @.str.77) #12, !dbg !4795
  unreachable, !dbg !4795

5:                                                ; No predecessors!
  br label %lor.end, !dbg !4795

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !4795
  %7 = load ptr, ptr %db.addr, align 8, !dbg !4797
  %8 = load ptr, ptr %version.addr, align 8, !dbg !4798
  %9 = load i16, ptr %covers.addr, align 2, !dbg !4799
  %10 = load i32, ptr %now.addr, align 4, !dbg !4800
  %11 = load ptr, ptr %sigrdataset.addr, align 8, !dbg !4801
  %12 = load i16, ptr %type.addr, align 2, !dbg !4802
  %conv18 = zext i16 %12 to i32, !dbg !4802
  %cmp19 = icmp eq i32 %conv18, 24, !dbg !4804
  br i1 %cmp19, label %if.then, label %lor.lhs.false, !dbg !4805

lor.lhs.false:                                    ; preds = %lor.end
  %13 = load i16, ptr %type.addr, align 2, !dbg !4806
  %conv21 = zext i16 %13 to i32, !dbg !4806
  %cmp22 = icmp eq i32 %conv21, 46, !dbg !4807
  br i1 %cmp22, label %if.then, label %if.end, !dbg !4808

if.then:                                          ; preds = %lor.lhs.false, %lor.end
  store i32 27, ptr %retval, align 4, !dbg !4809
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4809

if.end:                                           ; preds = %lor.lhs.false
  %14 = load ptr, ptr %sdlznode, align 8, !dbg !4810
  %lists = getelementptr inbounds %struct.dns_sdlzlookup, ptr %14, i32 0, i32 2, !dbg !4810
  %head = getelementptr inbounds %struct.anon.7, ptr %lists, i32 0, i32 0, !dbg !4810
  %15 = load ptr, ptr %head, align 8, !dbg !4810
  store ptr %15, ptr %list, align 8, !dbg !4811
  br label %while.cond, !dbg !4812

while.cond:                                       ; preds = %if.end32, %if.end
  %16 = load ptr, ptr %list, align 8, !dbg !4813
  %cmp24 = icmp ne ptr %16, null, !dbg !4814
  br i1 %cmp24, label %while.body, label %while.end, !dbg !4812

while.body:                                       ; preds = %while.cond
  %17 = load ptr, ptr %list, align 8, !dbg !4815
  %type26 = getelementptr inbounds %struct.dns_rdatalist, ptr %17, i32 0, i32 1, !dbg !4818
  %18 = load i16, ptr %type26, align 2, !dbg !4818
  %conv27 = zext i16 %18 to i32, !dbg !4815
  %19 = load i16, ptr %type.addr, align 2, !dbg !4819
  %conv28 = zext i16 %19 to i32, !dbg !4819
  %cmp29 = icmp eq i32 %conv27, %conv28, !dbg !4820
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !4821

if.then31:                                        ; preds = %while.body
  br label %while.end, !dbg !4822

if.end32:                                         ; preds = %while.body
  %20 = load ptr, ptr %list, align 8, !dbg !4823
  %link = getelementptr inbounds %struct.dns_rdatalist, ptr %20, i32 0, i32 5, !dbg !4823
  %next = getelementptr inbounds %struct.anon.14, ptr %link, i32 0, i32 1, !dbg !4823
  %21 = load ptr, ptr %next, align 8, !dbg !4823
  store ptr %21, ptr %list, align 8, !dbg !4824
  br label %while.cond, !dbg !4812, !llvm.loop !4825

while.end:                                        ; preds = %if.then31, %while.cond
  %22 = load ptr, ptr %list, align 8, !dbg !4827
  %cmp33 = icmp eq ptr %22, null, !dbg !4829
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !4830

if.then35:                                        ; preds = %while.end
  store i32 23, ptr %retval, align 4, !dbg !4831
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4831

if.end36:                                         ; preds = %while.end
  %23 = load ptr, ptr %list, align 8, !dbg !4832
  %24 = load ptr, ptr %db.addr, align 8, !dbg !4833
  %25 = load ptr, ptr %node.addr, align 8, !dbg !4834
  %26 = load ptr, ptr %rdataset.addr, align 8, !dbg !4835
  call void @list_tordataset(ptr noundef %23, ptr noundef %24, ptr noundef %25, ptr noundef %26), !dbg !4836
  store i32 0, ptr %retval, align 4, !dbg !4837
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4837

cleanup:                                          ; preds = %if.end36, %if.then35, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlznode) #11, !dbg !4838
  call void @llvm.lifetime.end.p0(i64 8, ptr %list) #11, !dbg !4838
  %27 = load i32, ptr %retval, align 4, !dbg !4838
  ret i32 %27, !dbg !4838
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @allrdatasets(ptr noundef %db, ptr noundef %node, ptr noundef %version, i32 noundef %now, ptr noundef %iteratorp) #0 !dbg !4839 {
entry:
  %retval = alloca i32, align 4
  %db.addr = alloca ptr, align 8
  %node.addr = alloca ptr, align 8
  %version.addr = alloca ptr, align 8
  %now.addr = alloca i32, align 4
  %iteratorp.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %iterator = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4841, metadata !DIExpression()), !dbg !4848
  store ptr %node, ptr %node.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !4842, metadata !DIExpression()), !dbg !4849
  store ptr %version, ptr %version.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %version.addr, metadata !4843, metadata !DIExpression()), !dbg !4850
  store i32 %now, ptr %now.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !4844, metadata !DIExpression()), !dbg !4851
  store ptr %iteratorp, ptr %iteratorp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iteratorp.addr, metadata !4845, metadata !DIExpression()), !dbg !4852
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !4853
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !4846, metadata !DIExpression()), !dbg !4854
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4855
  store ptr %0, ptr %sdlz, align 8, !dbg !4854
  call void @llvm.lifetime.start.p0(i64 8, ptr %iterator) #11, !dbg !4856
  tail call void @llvm.dbg.declare(metadata ptr %iterator, metadata !4847, metadata !DIExpression()), !dbg !4857
  %1 = load ptr, ptr %sdlz, align 8, !dbg !4858
  %cmp = icmp ne ptr %1, null, !dbg !4858
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4858

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %sdlz, align 8, !dbg !4858
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !4858
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !4858
  %3 = load i32, ptr %impmagic, align 4, !dbg !4858
  %cmp1 = icmp eq i32 %3, 1145854547, !dbg !4858
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4859
  %lnot = xor i1 %4, true, !dbg !4858
  %lnot2 = xor i1 %lnot, true, !dbg !4858
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4858
  %conv = sext i32 %lnot.ext to i64, !dbg !4858
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4858
  %tobool = icmp ne i64 %expval, 0, !dbg !4858
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4858

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1073, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !4858
  unreachable, !dbg !4858

5:                                                ; No predecessors!
  br label %lor.end, !dbg !4858

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !4858
  %7 = load ptr, ptr %version.addr, align 8, !dbg !4860
  %cmp3 = icmp eq ptr %7, null, !dbg !4860
  br i1 %cmp3, label %lor.end10, label %lor.lhs.false, !dbg !4860

lor.lhs.false:                                    ; preds = %lor.end
  %8 = load ptr, ptr %version.addr, align 8, !dbg !4860
  %9 = load ptr, ptr %sdlz, align 8, !dbg !4860
  %dummy_version = getelementptr inbounds %struct.dns_sdlz_db, ptr %9, i32 0, i32 6, !dbg !4860
  %cmp5 = icmp eq ptr %8, %dummy_version, !dbg !4860
  br i1 %cmp5, label %lor.end10, label %lor.rhs7, !dbg !4860

lor.rhs7:                                         ; preds = %lor.lhs.false
  %10 = load ptr, ptr %version.addr, align 8, !dbg !4860
  %11 = load ptr, ptr %sdlz, align 8, !dbg !4860
  %future_version = getelementptr inbounds %struct.dns_sdlz_db, ptr %11, i32 0, i32 5, !dbg !4860
  %12 = load ptr, ptr %future_version, align 8, !dbg !4860
  %cmp8 = icmp eq ptr %10, %12, !dbg !4860
  br label %lor.end10, !dbg !4860

lor.end10:                                        ; preds = %lor.rhs7, %lor.lhs.false, %lor.end
  %13 = phi i1 [ true, %lor.lhs.false ], [ true, %lor.end ], [ %cmp8, %lor.rhs7 ]
  %lnot12 = xor i1 %13, true, !dbg !4860
  %lnot14 = xor i1 %lnot12, true, !dbg !4860
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !4860
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !4860
  %expval17 = call i64 @llvm.expect.i64(i64 %conv16, i64 1), !dbg !4860
  %tobool18 = icmp ne i64 %expval17, 0, !dbg !4860
  br i1 %tobool18, label %lor.end20, label %lor.rhs19, !dbg !4860

lor.rhs19:                                        ; preds = %lor.end10
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1077, i32 noundef 0, ptr noundef @.str.79) #12, !dbg !4860
  unreachable, !dbg !4860

14:                                               ; No predecessors!
  br label %lor.end20, !dbg !4860

lor.end20:                                        ; preds = %14, %lor.end10
  %15 = phi i1 [ true, %lor.end10 ], [ false, %14 ]
  %lor.ext21 = zext i1 %15 to i32, !dbg !4860
  %16 = load ptr, ptr %version.addr, align 8, !dbg !4861
  %17 = load i32, ptr %now.addr, align 4, !dbg !4862
  %18 = load ptr, ptr %db.addr, align 8, !dbg !4863
  %mctx = getelementptr inbounds %struct.dns_db, ptr %18, i32 0, i32 6, !dbg !4863
  %19 = load ptr, ptr %mctx, align 8, !dbg !4863
  %call = call ptr @isc__mem_get(ptr noundef %19, i64 noundef 56, ptr noundef @.str, i32 noundef 1082), !dbg !4863
  store ptr %call, ptr %iterator, align 8, !dbg !4864
  %20 = load ptr, ptr %iterator, align 8, !dbg !4865
  %cmp22 = icmp eq ptr %20, null, !dbg !4867
  br i1 %cmp22, label %if.then, label %if.end, !dbg !4868

if.then:                                          ; preds = %lor.end20
  store i32 1, ptr %retval, align 4, !dbg !4869
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4869

if.end:                                           ; preds = %lor.end20
  %21 = load ptr, ptr %iterator, align 8, !dbg !4870
  %common24 = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %21, i32 0, i32 0, !dbg !4871
  %magic = getelementptr inbounds %struct.dns_rdatasetiter, ptr %common24, i32 0, i32 0, !dbg !4872
  store i32 1145983849, ptr %magic, align 8, !dbg !4873
  %22 = load ptr, ptr %iterator, align 8, !dbg !4874
  %common25 = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %22, i32 0, i32 0, !dbg !4875
  %methods = getelementptr inbounds %struct.dns_rdatasetiter, ptr %common25, i32 0, i32 1, !dbg !4876
  store ptr @rdatasetiter_methods, ptr %methods, align 8, !dbg !4877
  %23 = load ptr, ptr %db.addr, align 8, !dbg !4878
  %24 = load ptr, ptr %iterator, align 8, !dbg !4879
  %common26 = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %24, i32 0, i32 0, !dbg !4880
  %db27 = getelementptr inbounds %struct.dns_rdatasetiter, ptr %common26, i32 0, i32 2, !dbg !4881
  store ptr %23, ptr %db27, align 8, !dbg !4882
  %25 = load ptr, ptr %iterator, align 8, !dbg !4883
  %common28 = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %25, i32 0, i32 0, !dbg !4884
  %node29 = getelementptr inbounds %struct.dns_rdatasetiter, ptr %common28, i32 0, i32 3, !dbg !4885
  store ptr null, ptr %node29, align 8, !dbg !4886
  %26 = load ptr, ptr %db.addr, align 8, !dbg !4887
  %27 = load ptr, ptr %node.addr, align 8, !dbg !4888
  %28 = load ptr, ptr %iterator, align 8, !dbg !4889
  %common30 = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %28, i32 0, i32 0, !dbg !4890
  %node31 = getelementptr inbounds %struct.dns_rdatasetiter, ptr %common30, i32 0, i32 3, !dbg !4891
  call void @attachnode(ptr noundef %26, ptr noundef %27, ptr noundef %node31), !dbg !4892
  %29 = load ptr, ptr %version.addr, align 8, !dbg !4893
  %30 = load ptr, ptr %iterator, align 8, !dbg !4894
  %common32 = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %30, i32 0, i32 0, !dbg !4895
  %version33 = getelementptr inbounds %struct.dns_rdatasetiter, ptr %common32, i32 0, i32 4, !dbg !4896
  store ptr %29, ptr %version33, align 8, !dbg !4897
  %31 = load i32, ptr %now.addr, align 4, !dbg !4898
  %32 = load ptr, ptr %iterator, align 8, !dbg !4899
  %common34 = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %32, i32 0, i32 0, !dbg !4900
  %now35 = getelementptr inbounds %struct.dns_rdatasetiter, ptr %common34, i32 0, i32 5, !dbg !4901
  store i32 %31, ptr %now35, align 8, !dbg !4902
  %33 = load ptr, ptr %iterator, align 8, !dbg !4903
  %34 = load ptr, ptr %iteratorp.addr, align 8, !dbg !4904
  store ptr %33, ptr %34, align 8, !dbg !4905
  store i32 0, ptr %retval, align 4, !dbg !4906
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4906

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %iterator) #11, !dbg !4907
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !4907
  %35 = load i32, ptr %retval, align 4, !dbg !4907
  ret i32 %35, !dbg !4907
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @addrdataset(ptr noundef %db, ptr noundef %node, ptr noundef %version, i32 noundef %now, ptr noundef %rdataset, i32 noundef %options, ptr noundef %addedrdataset) #0 !dbg !4908 {
entry:
  %retval = alloca i32, align 4
  %db.addr = alloca ptr, align 8
  %node.addr = alloca ptr, align 8
  %version.addr = alloca ptr, align 8
  %now.addr = alloca i32, align 4
  %rdataset.addr = alloca ptr, align 8
  %options.addr = alloca i32, align 4
  %addedrdataset.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4910, metadata !DIExpression()), !dbg !4919
  store ptr %node, ptr %node.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !4911, metadata !DIExpression()), !dbg !4920
  store ptr %version, ptr %version.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %version.addr, metadata !4912, metadata !DIExpression()), !dbg !4921
  store i32 %now, ptr %now.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !4913, metadata !DIExpression()), !dbg !4922
  store ptr %rdataset, ptr %rdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %rdataset.addr, metadata !4914, metadata !DIExpression()), !dbg !4923
  store i32 %options, ptr %options.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !4915, metadata !DIExpression()), !dbg !4924
  store ptr %addedrdataset, ptr %addedrdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %addedrdataset.addr, metadata !4916, metadata !DIExpression()), !dbg !4925
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !4926
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !4917, metadata !DIExpression()), !dbg !4927
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4928
  store ptr %0, ptr %sdlz, align 8, !dbg !4927
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !4929
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4918, metadata !DIExpression()), !dbg !4930
  %1 = load i32, ptr %now.addr, align 4, !dbg !4931
  %2 = load ptr, ptr %addedrdataset.addr, align 8, !dbg !4932
  %3 = load ptr, ptr %sdlz, align 8, !dbg !4933
  %cmp = icmp ne ptr %3, null, !dbg !4933
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4933

land.rhs:                                         ; preds = %entry
  %4 = load ptr, ptr %sdlz, align 8, !dbg !4933
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %4, i32 0, i32 0, !dbg !4933
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !4933
  %5 = load i32, ptr %impmagic, align 4, !dbg !4933
  %cmp1 = icmp eq i32 %5, 1145854547, !dbg !4933
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4934
  %lnot = xor i1 %6, true, !dbg !4933
  %lnot2 = xor i1 %lnot, true, !dbg !4933
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4933
  %conv = sext i32 %lnot.ext to i64, !dbg !4933
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4933
  %tobool = icmp ne i64 %expval, 0, !dbg !4933
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4933

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1175, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !4933
  unreachable, !dbg !4933

7:                                                ; No predecessors!
  br label %lor.end, !dbg !4933

lor.end:                                          ; preds = %7, %land.end
  %8 = phi i1 [ true, %land.end ], [ false, %7 ]
  %lor.ext = zext i1 %8 to i32, !dbg !4933
  %9 = load ptr, ptr %sdlz, align 8, !dbg !4935
  %dlzimp = getelementptr inbounds %struct.dns_sdlz_db, ptr %9, i32 0, i32 2, !dbg !4937
  %10 = load ptr, ptr %dlzimp, align 8, !dbg !4937
  %methods = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %10, i32 0, i32 0, !dbg !4938
  %11 = load ptr, ptr %methods, align 8, !dbg !4938
  %addrdataset = getelementptr inbounds %struct.dns_sdlzmethods, ptr %11, i32 0, i32 11, !dbg !4939
  %12 = load ptr, ptr %addrdataset, align 8, !dbg !4939
  %cmp3 = icmp eq ptr %12, null, !dbg !4940
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4941

if.then:                                          ; preds = %lor.end
  store i32 27, ptr %retval, align 4, !dbg !4942
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4942

if.end:                                           ; preds = %lor.end
  %13 = load ptr, ptr %db.addr, align 8, !dbg !4943
  %14 = load ptr, ptr %node.addr, align 8, !dbg !4944
  %15 = load ptr, ptr %version.addr, align 8, !dbg !4945
  %16 = load ptr, ptr %rdataset.addr, align 8, !dbg !4946
  %17 = load i32, ptr %options.addr, align 4, !dbg !4947
  %18 = load ptr, ptr %sdlz, align 8, !dbg !4948
  %dlzimp5 = getelementptr inbounds %struct.dns_sdlz_db, ptr %18, i32 0, i32 2, !dbg !4949
  %19 = load ptr, ptr %dlzimp5, align 8, !dbg !4949
  %methods6 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %19, i32 0, i32 0, !dbg !4950
  %20 = load ptr, ptr %methods6, align 8, !dbg !4950
  %addrdataset7 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %20, i32 0, i32 11, !dbg !4951
  %21 = load ptr, ptr %addrdataset7, align 8, !dbg !4951
  %call = call i32 @modrdataset(ptr noundef %13, ptr noundef %14, ptr noundef %15, ptr noundef %16, i32 noundef %17, ptr noundef %21), !dbg !4952
  store i32 %call, ptr %result, align 4, !dbg !4953
  %22 = load i32, ptr %result, align 4, !dbg !4954
  store i32 %22, ptr %retval, align 4, !dbg !4955
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4955

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !4956
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !4956
  %23 = load i32, ptr %retval, align 4, !dbg !4956
  ret i32 %23, !dbg !4956
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @subtractrdataset(ptr noundef %db, ptr noundef %node, ptr noundef %version, ptr noundef %rdataset, i32 noundef %options, ptr noundef %newrdataset) #0 !dbg !4957 {
entry:
  %retval = alloca i32, align 4
  %db.addr = alloca ptr, align 8
  %node.addr = alloca ptr, align 8
  %version.addr = alloca ptr, align 8
  %rdataset.addr = alloca ptr, align 8
  %options.addr = alloca i32, align 4
  %newrdataset.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !4959, metadata !DIExpression()), !dbg !4967
  store ptr %node, ptr %node.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !4960, metadata !DIExpression()), !dbg !4968
  store ptr %version, ptr %version.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %version.addr, metadata !4961, metadata !DIExpression()), !dbg !4969
  store ptr %rdataset, ptr %rdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %rdataset.addr, metadata !4962, metadata !DIExpression()), !dbg !4970
  store i32 %options, ptr %options.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !4963, metadata !DIExpression()), !dbg !4971
  store ptr %newrdataset, ptr %newrdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %newrdataset.addr, metadata !4964, metadata !DIExpression()), !dbg !4972
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !4973
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !4965, metadata !DIExpression()), !dbg !4974
  %0 = load ptr, ptr %db.addr, align 8, !dbg !4975
  store ptr %0, ptr %sdlz, align 8, !dbg !4974
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !4976
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4966, metadata !DIExpression()), !dbg !4977
  %1 = load ptr, ptr %newrdataset.addr, align 8, !dbg !4978
  %2 = load ptr, ptr %sdlz, align 8, !dbg !4979
  %cmp = icmp ne ptr %2, null, !dbg !4979
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4979

land.rhs:                                         ; preds = %entry
  %3 = load ptr, ptr %sdlz, align 8, !dbg !4979
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %3, i32 0, i32 0, !dbg !4979
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !4979
  %4 = load i32, ptr %impmagic, align 4, !dbg !4979
  %cmp1 = icmp eq i32 %4, 1145854547, !dbg !4979
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4980
  %lnot = xor i1 %5, true, !dbg !4979
  %lnot2 = xor i1 %lnot, true, !dbg !4979
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4979
  %conv = sext i32 %lnot.ext to i64, !dbg !4979
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4979
  %tobool = icmp ne i64 %expval, 0, !dbg !4979
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4979

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1195, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !4979
  unreachable, !dbg !4979

6:                                                ; No predecessors!
  br label %lor.end, !dbg !4979

lor.end:                                          ; preds = %6, %land.end
  %7 = phi i1 [ true, %land.end ], [ false, %6 ]
  %lor.ext = zext i1 %7 to i32, !dbg !4979
  %8 = load ptr, ptr %sdlz, align 8, !dbg !4981
  %dlzimp = getelementptr inbounds %struct.dns_sdlz_db, ptr %8, i32 0, i32 2, !dbg !4983
  %9 = load ptr, ptr %dlzimp, align 8, !dbg !4983
  %methods = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %9, i32 0, i32 0, !dbg !4984
  %10 = load ptr, ptr %methods, align 8, !dbg !4984
  %subtractrdataset = getelementptr inbounds %struct.dns_sdlzmethods, ptr %10, i32 0, i32 12, !dbg !4985
  %11 = load ptr, ptr %subtractrdataset, align 8, !dbg !4985
  %cmp3 = icmp eq ptr %11, null, !dbg !4986
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4987

if.then:                                          ; preds = %lor.end
  store i32 27, ptr %retval, align 4, !dbg !4988
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4988

if.end:                                           ; preds = %lor.end
  %12 = load ptr, ptr %db.addr, align 8, !dbg !4990
  %13 = load ptr, ptr %node.addr, align 8, !dbg !4991
  %14 = load ptr, ptr %version.addr, align 8, !dbg !4992
  %15 = load ptr, ptr %rdataset.addr, align 8, !dbg !4993
  %16 = load i32, ptr %options.addr, align 4, !dbg !4994
  %17 = load ptr, ptr %sdlz, align 8, !dbg !4995
  %dlzimp5 = getelementptr inbounds %struct.dns_sdlz_db, ptr %17, i32 0, i32 2, !dbg !4996
  %18 = load ptr, ptr %dlzimp5, align 8, !dbg !4996
  %methods6 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %18, i32 0, i32 0, !dbg !4997
  %19 = load ptr, ptr %methods6, align 8, !dbg !4997
  %subtractrdataset7 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %19, i32 0, i32 12, !dbg !4998
  %20 = load ptr, ptr %subtractrdataset7, align 8, !dbg !4998
  %call = call i32 @modrdataset(ptr noundef %12, ptr noundef %13, ptr noundef %14, ptr noundef %15, i32 noundef %16, ptr noundef %20), !dbg !4999
  store i32 %call, ptr %result, align 4, !dbg !5000
  %21 = load i32, ptr %result, align 4, !dbg !5001
  store i32 %21, ptr %retval, align 4, !dbg !5002
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5002

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !5003
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !5003
  %22 = load i32, ptr %retval, align 4, !dbg !5003
  ret i32 %22, !dbg !5003
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @deleterdataset(ptr noundef %db, ptr noundef %node, ptr noundef %version, i16 noundef zeroext %type, i16 noundef zeroext %covers) #0 !dbg !5004 {
entry:
  %retval = alloca i32, align 4
  %db.addr = alloca ptr, align 8
  %node.addr = alloca ptr, align 8
  %version.addr = alloca ptr, align 8
  %type.addr = alloca i16, align 2
  %covers.addr = alloca i16, align 2
  %sdlz = alloca ptr, align 8
  %name = alloca [1024 x i8], align 16
  %b_type = alloca [11 x i8], align 1
  %sdlznode = alloca ptr, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %flags = alloca i32, align 4
  %flags39 = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !5006, metadata !DIExpression()), !dbg !5020
  store ptr %node, ptr %node.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !5007, metadata !DIExpression()), !dbg !5021
  store ptr %version, ptr %version.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %version.addr, metadata !5008, metadata !DIExpression()), !dbg !5022
  store i16 %type, ptr %type.addr, align 2
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !5009, metadata !DIExpression()), !dbg !5023
  store i16 %covers, ptr %covers.addr, align 2
  tail call void @llvm.dbg.declare(metadata ptr %covers.addr, metadata !5010, metadata !DIExpression()), !dbg !5024
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !5025
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !5011, metadata !DIExpression()), !dbg !5026
  %0 = load ptr, ptr %db.addr, align 8, !dbg !5027
  store ptr %0, ptr %sdlz, align 8, !dbg !5026
  call void @llvm.lifetime.start.p0(i64 1024, ptr %name) #11, !dbg !5028
  tail call void @llvm.dbg.declare(metadata ptr %name, metadata !5012, metadata !DIExpression()), !dbg !5029
  call void @llvm.lifetime.start.p0(i64 11, ptr %b_type) #11, !dbg !5030
  tail call void @llvm.dbg.declare(metadata ptr %b_type, metadata !5013, metadata !DIExpression()), !dbg !5031
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlznode) #11, !dbg !5032
  tail call void @llvm.dbg.declare(metadata ptr %sdlznode, metadata !5014, metadata !DIExpression()), !dbg !5033
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !5034
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5015, metadata !DIExpression()), !dbg !5035
  %1 = load i16, ptr %covers.addr, align 2, !dbg !5036
  %2 = load ptr, ptr %sdlz, align 8, !dbg !5037
  %cmp = icmp ne ptr %2, null, !dbg !5037
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5037

land.rhs:                                         ; preds = %entry
  %3 = load ptr, ptr %sdlz, align 8, !dbg !5037
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %3, i32 0, i32 0, !dbg !5037
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !5037
  %4 = load i32, ptr %impmagic, align 4, !dbg !5037
  %cmp1 = icmp eq i32 %4, 1145854547, !dbg !5037
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !5038
  %lnot = xor i1 %5, true, !dbg !5037
  %lnot2 = xor i1 %lnot, true, !dbg !5037
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5037
  %conv = sext i32 %lnot.ext to i64, !dbg !5037
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5037
  %tobool = icmp ne i64 %expval, 0, !dbg !5037
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !5037

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1218, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !5037
  unreachable, !dbg !5037

6:                                                ; No predecessors!
  br label %lor.end, !dbg !5037

lor.end:                                          ; preds = %6, %land.end
  %7 = phi i1 [ true, %land.end ], [ false, %6 ]
  %lor.ext = zext i1 %7 to i32, !dbg !5037
  %8 = load ptr, ptr %sdlz, align 8, !dbg !5039
  %dlzimp = getelementptr inbounds %struct.dns_sdlz_db, ptr %8, i32 0, i32 2, !dbg !5041
  %9 = load ptr, ptr %dlzimp, align 8, !dbg !5041
  %methods = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %9, i32 0, i32 0, !dbg !5042
  %10 = load ptr, ptr %methods, align 8, !dbg !5042
  %delrdataset = getelementptr inbounds %struct.dns_sdlzmethods, ptr %10, i32 0, i32 13, !dbg !5043
  %11 = load ptr, ptr %delrdataset, align 8, !dbg !5043
  %cmp3 = icmp eq ptr %11, null, !dbg !5044
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5045

if.then:                                          ; preds = %lor.end
  store i32 27, ptr %retval, align 4, !dbg !5046
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5046

if.end:                                           ; preds = %lor.end
  %12 = load ptr, ptr %node.addr, align 8, !dbg !5047
  store ptr %12, ptr %sdlznode, align 8, !dbg !5048
  %13 = load ptr, ptr %sdlznode, align 8, !dbg !5049
  %name5 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %13, i32 0, i32 4, !dbg !5050
  %14 = load ptr, ptr %name5, align 8, !dbg !5050
  %arraydecay = getelementptr inbounds [1024 x i8], ptr %name, i64 0, i64 0, !dbg !5051
  call void @dns_name_format(ptr noundef %14, ptr noundef %arraydecay, i32 noundef 1024), !dbg !5052
  %15 = load i16, ptr %type.addr, align 2, !dbg !5053
  %arraydecay6 = getelementptr inbounds [11 x i8], ptr %b_type, i64 0, i64 0, !dbg !5054
  call void @dns_rdatatype_format(i16 noundef zeroext %15, ptr noundef %arraydecay6, i32 noundef 11), !dbg !5055
  br label %do.body, !dbg !5056

do.body:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags) #11, !dbg !5057
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !5016, metadata !DIExpression()), !dbg !5057
  %16 = load ptr, ptr %sdlz, align 8, !dbg !5057
  %dlzimp7 = getelementptr inbounds %struct.dns_sdlz_db, ptr %16, i32 0, i32 2, !dbg !5057
  %17 = load ptr, ptr %dlzimp7, align 8, !dbg !5057
  %flags8 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %17, i32 0, i32 3, !dbg !5057
  %18 = load i32, ptr %flags8, align 8, !dbg !5057
  store i32 %18, ptr %flags, align 4, !dbg !5057
  %19 = load i32, ptr %flags, align 4, !dbg !5058
  %and = and i32 %19, 1, !dbg !5058
  %cmp9 = icmp eq i32 %and, 0, !dbg !5058
  br i1 %cmp9, label %if.then11, label %if.end28, !dbg !5057

if.then11:                                        ; preds = %do.body
  br label %do.body12, !dbg !5058

do.body12:                                        ; preds = %if.then11
  %20 = load ptr, ptr %sdlz, align 8, !dbg !5060
  %dlzimp13 = getelementptr inbounds %struct.dns_sdlz_db, ptr %20, i32 0, i32 2, !dbg !5060
  %21 = load ptr, ptr %dlzimp13, align 8, !dbg !5060
  %driverlock = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %21, i32 0, i32 4, !dbg !5060
  %call = call i32 @pthread_mutex_lock(ptr noundef %driverlock) #11, !dbg !5060
  %cmp14 = icmp eq i32 %call, 0, !dbg !5060
  %22 = zext i1 %cmp14 to i64, !dbg !5060
  %cond = select i1 %cmp14, i32 0, i32 34, !dbg !5060
  %cmp16 = icmp eq i32 %cond, 0, !dbg !5060
  %lnot18 = xor i1 %cmp16, true, !dbg !5060
  %lnot20 = xor i1 %lnot18, true, !dbg !5060
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !5060
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !5060
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 1), !dbg !5060
  %tobool24 = icmp ne i64 %expval23, 0, !dbg !5060
  br i1 %tobool24, label %lor.end26, label %lor.rhs25, !dbg !5060

lor.rhs25:                                        ; preds = %do.body12
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1227, ptr noundef @.str.61) #12, !dbg !5060
  unreachable, !dbg !5060

23:                                               ; No predecessors!
  br label %lor.end26, !dbg !5060

lor.end26:                                        ; preds = %23, %do.body12
  %24 = phi i1 [ true, %do.body12 ], [ false, %23 ]
  %lor.ext27 = zext i1 %24 to i32, !dbg !5060
  br label %do.cond, !dbg !5060

do.cond:                                          ; preds = %lor.end26
  br label %do.end, !dbg !5060

do.end:                                           ; preds = %do.cond
  br label %if.end28, !dbg !5060

if.end28:                                         ; preds = %do.end, %do.body
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags) #11, !dbg !5056
  br label %do.cond29, !dbg !5057

do.cond29:                                        ; preds = %if.end28
  br label %do.end30, !dbg !5057

do.end30:                                         ; preds = %do.cond29
  %25 = load ptr, ptr %sdlz, align 8, !dbg !5062
  %dlzimp31 = getelementptr inbounds %struct.dns_sdlz_db, ptr %25, i32 0, i32 2, !dbg !5063
  %26 = load ptr, ptr %dlzimp31, align 8, !dbg !5063
  %methods32 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %26, i32 0, i32 0, !dbg !5064
  %27 = load ptr, ptr %methods32, align 8, !dbg !5064
  %delrdataset33 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %27, i32 0, i32 13, !dbg !5065
  %28 = load ptr, ptr %delrdataset33, align 8, !dbg !5065
  %arraydecay34 = getelementptr inbounds [1024 x i8], ptr %name, i64 0, i64 0, !dbg !5066
  %arraydecay35 = getelementptr inbounds [11 x i8], ptr %b_type, i64 0, i64 0, !dbg !5067
  %29 = load ptr, ptr %sdlz, align 8, !dbg !5068
  %dlzimp36 = getelementptr inbounds %struct.dns_sdlz_db, ptr %29, i32 0, i32 2, !dbg !5069
  %30 = load ptr, ptr %dlzimp36, align 8, !dbg !5069
  %driverarg = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %30, i32 0, i32 2, !dbg !5070
  %31 = load ptr, ptr %driverarg, align 8, !dbg !5070
  %32 = load ptr, ptr %sdlz, align 8, !dbg !5071
  %dbdata = getelementptr inbounds %struct.dns_sdlz_db, ptr %32, i32 0, i32 1, !dbg !5072
  %33 = load ptr, ptr %dbdata, align 8, !dbg !5072
  %34 = load ptr, ptr %version.addr, align 8, !dbg !5073
  %call37 = call i32 %28(ptr noundef %arraydecay34, ptr noundef %arraydecay35, ptr noundef %31, ptr noundef %33, ptr noundef %34), !dbg !5062
  store i32 %call37, ptr %result, align 4, !dbg !5074
  br label %do.body38, !dbg !5075

do.body38:                                        ; preds = %do.end30
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags39) #11, !dbg !5076
  tail call void @llvm.dbg.declare(metadata ptr %flags39, metadata !5018, metadata !DIExpression()), !dbg !5076
  %35 = load ptr, ptr %sdlz, align 8, !dbg !5076
  %dlzimp40 = getelementptr inbounds %struct.dns_sdlz_db, ptr %35, i32 0, i32 2, !dbg !5076
  %36 = load ptr, ptr %dlzimp40, align 8, !dbg !5076
  %flags41 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %36, i32 0, i32 3, !dbg !5076
  %37 = load i32, ptr %flags41, align 8, !dbg !5076
  store i32 %37, ptr %flags39, align 4, !dbg !5076
  %38 = load i32, ptr %flags39, align 4, !dbg !5077
  %and42 = and i32 %38, 1, !dbg !5077
  %cmp43 = icmp eq i32 %and42, 0, !dbg !5077
  br i1 %cmp43, label %if.then45, label %if.end67, !dbg !5076

if.then45:                                        ; preds = %do.body38
  br label %do.body46, !dbg !5077

do.body46:                                        ; preds = %if.then45
  %39 = load ptr, ptr %sdlz, align 8, !dbg !5079
  %dlzimp47 = getelementptr inbounds %struct.dns_sdlz_db, ptr %39, i32 0, i32 2, !dbg !5079
  %40 = load ptr, ptr %dlzimp47, align 8, !dbg !5079
  %driverlock48 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %40, i32 0, i32 4, !dbg !5079
  %call49 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock48) #11, !dbg !5079
  %cmp50 = icmp eq i32 %call49, 0, !dbg !5079
  %41 = zext i1 %cmp50 to i64, !dbg !5079
  %cond52 = select i1 %cmp50, i32 0, i32 34, !dbg !5079
  %cmp53 = icmp eq i32 %cond52, 0, !dbg !5079
  %lnot55 = xor i1 %cmp53, true, !dbg !5079
  %lnot57 = xor i1 %lnot55, true, !dbg !5079
  %lnot.ext58 = zext i1 %lnot57 to i32, !dbg !5079
  %conv59 = sext i32 %lnot.ext58 to i64, !dbg !5079
  %expval60 = call i64 @llvm.expect.i64(i64 %conv59, i64 1), !dbg !5079
  %tobool61 = icmp ne i64 %expval60, 0, !dbg !5079
  br i1 %tobool61, label %lor.end63, label %lor.rhs62, !dbg !5079

lor.rhs62:                                        ; preds = %do.body46
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1231, ptr noundef @.str.62) #12, !dbg !5079
  unreachable, !dbg !5079

42:                                               ; No predecessors!
  br label %lor.end63, !dbg !5079

lor.end63:                                        ; preds = %42, %do.body46
  %43 = phi i1 [ true, %do.body46 ], [ false, %42 ]
  %lor.ext64 = zext i1 %43 to i32, !dbg !5079
  br label %do.cond65, !dbg !5079

do.cond65:                                        ; preds = %lor.end63
  br label %do.end66, !dbg !5079

do.end66:                                         ; preds = %do.cond65
  br label %if.end67, !dbg !5079

if.end67:                                         ; preds = %do.end66, %do.body38
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags39) #11, !dbg !5075
  br label %do.cond68, !dbg !5076

do.cond68:                                        ; preds = %if.end67
  br label %do.end69, !dbg !5076

do.end69:                                         ; preds = %do.cond68
  %44 = load i32, ptr %result, align 4, !dbg !5081
  store i32 %44, ptr %retval, align 4, !dbg !5082
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5082

cleanup:                                          ; preds = %do.end69, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !5083
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlznode) #11, !dbg !5083
  call void @llvm.lifetime.end.p0(i64 11, ptr %b_type) #11, !dbg !5083
  call void @llvm.lifetime.end.p0(i64 1024, ptr %name) #11, !dbg !5083
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !5083
  %45 = load i32, ptr %retval, align 4, !dbg !5083
  ret i32 %45, !dbg !5083
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal zeroext i1 @issecure(ptr noundef %db) #0 !dbg !5084 {
entry:
  %db.addr = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !5086, metadata !DIExpression()), !dbg !5087
  %0 = load ptr, ptr %db.addr, align 8, !dbg !5088
  ret i1 false, !dbg !5089
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @nodecount(ptr noundef %db) #0 !dbg !5090 {
entry:
  %db.addr = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !5092, metadata !DIExpression()), !dbg !5093
  %0 = load ptr, ptr %db.addr, align 8, !dbg !5094
  ret i32 0, !dbg !5095
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal zeroext i1 @ispersistent(ptr noundef %db) #0 !dbg !5096 {
entry:
  %db.addr = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !5098, metadata !DIExpression()), !dbg !5099
  %0 = load ptr, ptr %db.addr, align 8, !dbg !5100
  ret i1 true, !dbg !5101
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @overmem(ptr noundef %db, i1 noundef zeroext %over) #0 !dbg !5102 {
entry:
  %db.addr = alloca ptr, align 8
  %over.addr = alloca i8, align 1
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !5104, metadata !DIExpression()), !dbg !5106
  %frombool = zext i1 %over to i8
  store i8 %frombool, ptr %over.addr, align 1
  tail call void @llvm.dbg.declare(metadata ptr %over.addr, metadata !5105, metadata !DIExpression()), !dbg !5107
  %0 = load ptr, ptr %db.addr, align 8, !dbg !5108
  %1 = load i8, ptr %over.addr, align 1, !dbg !5109, !range !2769, !noundef !2770
  %tobool = trunc i8 %1 to i1, !dbg !5109
  ret void, !dbg !5110
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @settask(ptr noundef %db, ptr noundef %task) #0 !dbg !5111 {
entry:
  %db.addr = alloca ptr, align 8
  %task.addr = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !5113, metadata !DIExpression()), !dbg !5115
  store ptr %task, ptr %task.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %task.addr, metadata !5114, metadata !DIExpression()), !dbg !5116
  %0 = load ptr, ptr %db.addr, align 8, !dbg !5117
  %1 = load ptr, ptr %task.addr, align 8, !dbg !5118
  ret void, !dbg !5119
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @getoriginnode(ptr noundef %db, ptr noundef %nodep) #0 !dbg !5120 {
entry:
  %retval = alloca i32, align 4
  %db.addr = alloca ptr, align 8
  %nodep.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !5122, metadata !DIExpression()), !dbg !5126
  store ptr %nodep, ptr %nodep.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %nodep.addr, metadata !5123, metadata !DIExpression()), !dbg !5127
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !5128
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !5124, metadata !DIExpression()), !dbg !5129
  %0 = load ptr, ptr %db.addr, align 8, !dbg !5130
  store ptr %0, ptr %sdlz, align 8, !dbg !5129
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !5131
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5125, metadata !DIExpression()), !dbg !5132
  %1 = load ptr, ptr %sdlz, align 8, !dbg !5133
  %cmp = icmp ne ptr %1, null, !dbg !5133
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5133

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %sdlz, align 8, !dbg !5133
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !5133
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !5133
  %3 = load i32, ptr %impmagic, align 4, !dbg !5133
  %cmp1 = icmp eq i32 %3, 1145854547, !dbg !5133
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !5134
  %lnot = xor i1 %4, true, !dbg !5133
  %lnot2 = xor i1 %lnot, true, !dbg !5133
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5133
  %conv = sext i32 %lnot.ext to i64, !dbg !5133
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5133
  %tobool = icmp ne i64 %expval, 0, !dbg !5133
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !5133

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1277, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !5133
  unreachable, !dbg !5133

5:                                                ; No predecessors!
  br label %lor.end, !dbg !5133

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !5133
  %7 = load ptr, ptr %sdlz, align 8, !dbg !5135
  %dlzimp = getelementptr inbounds %struct.dns_sdlz_db, ptr %7, i32 0, i32 2, !dbg !5137
  %8 = load ptr, ptr %dlzimp, align 8, !dbg !5137
  %methods = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %8, i32 0, i32 0, !dbg !5138
  %9 = load ptr, ptr %methods, align 8, !dbg !5138
  %newversion = getelementptr inbounds %struct.dns_sdlzmethods, ptr %9, i32 0, i32 7, !dbg !5139
  %10 = load ptr, ptr %newversion, align 8, !dbg !5139
  %cmp3 = icmp eq ptr %10, null, !dbg !5140
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5141

if.then:                                          ; preds = %lor.end
  store i32 27, ptr %retval, align 4, !dbg !5142
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5142

if.end:                                           ; preds = %lor.end
  %11 = load ptr, ptr %db.addr, align 8, !dbg !5143
  %12 = load ptr, ptr %sdlz, align 8, !dbg !5144
  %common5 = getelementptr inbounds %struct.dns_sdlz_db, ptr %12, i32 0, i32 0, !dbg !5145
  %origin = getelementptr inbounds %struct.dns_db, ptr %common5, i32 0, i32 5, !dbg !5146
  %13 = load ptr, ptr %nodep.addr, align 8, !dbg !5147
  %call = call i32 @getnodedata(ptr noundef %11, ptr noundef %origin, i1 noundef zeroext false, i32 noundef 0, ptr noundef null, ptr noundef null, ptr noundef %13), !dbg !5148
  store i32 %call, ptr %result, align 4, !dbg !5149
  %14 = load i32, ptr %result, align 4, !dbg !5150
  %cmp6 = icmp ne i32 %14, 0, !dbg !5152
  br i1 %cmp6, label %if.then8, label %if.end10, !dbg !5153

if.then8:                                         ; preds = %if.end
  %15 = load i32, ptr %result, align 4, !dbg !5154
  %call9 = call ptr @isc_result_totext(i32 noundef %15), !dbg !5155
  call void (i32, ptr, ...) @sdlz_log(i32 noundef -4, ptr noundef @.str.80, ptr noundef %call9), !dbg !5156
  br label %if.end10, !dbg !5156

if.end10:                                         ; preds = %if.then8, %if.end
  %16 = load i32, ptr %result, align 4, !dbg !5157
  store i32 %16, ptr %retval, align 4, !dbg !5158
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5158

cleanup:                                          ; preds = %if.end10, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !5159
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !5159
  %17 = load i32, ptr %retval, align 4, !dbg !5159
  ret i32 %17, !dbg !5159
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @findnodeext(ptr noundef %db, ptr noundef %name, i1 noundef zeroext %create, ptr noundef %methods, ptr noundef %clientinfo, ptr noundef %nodep) #0 !dbg !5160 {
entry:
  %db.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %create.addr = alloca i8, align 1
  %methods.addr = alloca ptr, align 8
  %clientinfo.addr = alloca ptr, align 8
  %nodep.addr = alloca ptr, align 8
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !5162, metadata !DIExpression()), !dbg !5168
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !5163, metadata !DIExpression()), !dbg !5169
  %frombool = zext i1 %create to i8
  store i8 %frombool, ptr %create.addr, align 1
  tail call void @llvm.dbg.declare(metadata ptr %create.addr, metadata !5164, metadata !DIExpression()), !dbg !5170
  store ptr %methods, ptr %methods.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %methods.addr, metadata !5165, metadata !DIExpression()), !dbg !5171
  store ptr %clientinfo, ptr %clientinfo.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %clientinfo.addr, metadata !5166, metadata !DIExpression()), !dbg !5172
  store ptr %nodep, ptr %nodep.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %nodep.addr, metadata !5167, metadata !DIExpression()), !dbg !5173
  %0 = load ptr, ptr %db.addr, align 8, !dbg !5174
  %1 = load ptr, ptr %name.addr, align 8, !dbg !5175
  %2 = load i8, ptr %create.addr, align 1, !dbg !5176, !range !2769, !noundef !2770
  %tobool = trunc i8 %2 to i1, !dbg !5176
  %3 = load ptr, ptr %methods.addr, align 8, !dbg !5177
  %4 = load ptr, ptr %clientinfo.addr, align 8, !dbg !5178
  %5 = load ptr, ptr %nodep.addr, align 8, !dbg !5179
  %call = call i32 @getnodedata(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %tobool, i32 noundef 0, ptr noundef %3, ptr noundef %4, ptr noundef %5), !dbg !5180
  ret i32 %call, !dbg !5181
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @findext(ptr noundef %db, ptr noundef %name, ptr noundef %version, i16 noundef zeroext %type, i32 noundef %options, i32 noundef %now, ptr noundef %nodep, ptr noundef %foundname, ptr noundef %methods, ptr noundef %clientinfo, ptr noundef %rdataset, ptr noundef %sigrdataset) #0 !dbg !5182 {
entry:
  %retval = alloca i32, align 4
  %db.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %version.addr = alloca ptr, align 8
  %type.addr = alloca i16, align 2
  %options.addr = alloca i32, align 4
  %now.addr = alloca i32, align 4
  %nodep.addr = alloca ptr, align 8
  %foundname.addr = alloca ptr, align 8
  %methods.addr = alloca ptr, align 8
  %clientinfo.addr = alloca ptr, align 8
  %rdataset.addr = alloca ptr, align 8
  %sigrdataset.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %node = alloca ptr, align 8
  %fname = alloca %struct.dns_fixedname, align 8
  %xrdataset = alloca %struct.dns_rdataset, align 8
  %xname = alloca ptr, align 8
  %nlabels = alloca i32, align 4
  %olabels = alloca i32, align 4
  %result = alloca i32, align 4
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %xresult = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !5184, metadata !DIExpression()), !dbg !5212
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !5185, metadata !DIExpression()), !dbg !5213
  store ptr %version, ptr %version.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %version.addr, metadata !5186, metadata !DIExpression()), !dbg !5214
  store i16 %type, ptr %type.addr, align 2
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !5187, metadata !DIExpression()), !dbg !5215
  store i32 %options, ptr %options.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !5188, metadata !DIExpression()), !dbg !5216
  store i32 %now, ptr %now.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %now.addr, metadata !5189, metadata !DIExpression()), !dbg !5217
  store ptr %nodep, ptr %nodep.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %nodep.addr, metadata !5190, metadata !DIExpression()), !dbg !5218
  store ptr %foundname, ptr %foundname.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %foundname.addr, metadata !5191, metadata !DIExpression()), !dbg !5219
  store ptr %methods, ptr %methods.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %methods.addr, metadata !5192, metadata !DIExpression()), !dbg !5220
  store ptr %clientinfo, ptr %clientinfo.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %clientinfo.addr, metadata !5193, metadata !DIExpression()), !dbg !5221
  store ptr %rdataset, ptr %rdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %rdataset.addr, metadata !5194, metadata !DIExpression()), !dbg !5222
  store ptr %sigrdataset, ptr %sigrdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %sigrdataset.addr, metadata !5195, metadata !DIExpression()), !dbg !5223
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !5224
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !5196, metadata !DIExpression()), !dbg !5225
  %0 = load ptr, ptr %db.addr, align 8, !dbg !5226
  store ptr %0, ptr %sdlz, align 8, !dbg !5225
  call void @llvm.lifetime.start.p0(i64 8, ptr %node) #11, !dbg !5227
  tail call void @llvm.dbg.declare(metadata ptr %node, metadata !5197, metadata !DIExpression()), !dbg !5228
  store ptr null, ptr %node, align 8, !dbg !5228
  call void @llvm.lifetime.start.p0(i64 528, ptr %fname) #11, !dbg !5229
  tail call void @llvm.dbg.declare(metadata ptr %fname, metadata !5198, metadata !DIExpression()), !dbg !5230
  call void @llvm.lifetime.start.p0(i64 120, ptr %xrdataset) #11, !dbg !5231
  tail call void @llvm.dbg.declare(metadata ptr %xrdataset, metadata !5199, metadata !DIExpression()), !dbg !5232
  call void @llvm.lifetime.start.p0(i64 8, ptr %xname) #11, !dbg !5233
  tail call void @llvm.dbg.declare(metadata ptr %xname, metadata !5200, metadata !DIExpression()), !dbg !5234
  call void @llvm.lifetime.start.p0(i64 4, ptr %nlabels) #11, !dbg !5235
  tail call void @llvm.dbg.declare(metadata ptr %nlabels, metadata !5201, metadata !DIExpression()), !dbg !5236
  call void @llvm.lifetime.start.p0(i64 4, ptr %olabels) #11, !dbg !5235
  tail call void @llvm.dbg.declare(metadata ptr %olabels, metadata !5202, metadata !DIExpression()), !dbg !5237
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !5238
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5203, metadata !DIExpression()), !dbg !5239
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #11, !dbg !5240
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !5204, metadata !DIExpression()), !dbg !5241
  %1 = load ptr, ptr %sdlz, align 8, !dbg !5242
  %cmp = icmp ne ptr %1, null, !dbg !5242
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5242

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %sdlz, align 8, !dbg !5242
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !5242
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !5242
  %3 = load i32, ptr %impmagic, align 4, !dbg !5242
  %cmp1 = icmp eq i32 %3, 1145854547, !dbg !5242
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !5243
  %lnot = xor i1 %4, true, !dbg !5242
  %lnot2 = xor i1 %lnot, true, !dbg !5242
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5242
  %conv = sext i32 %lnot.ext to i64, !dbg !5242
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5242
  %tobool = icmp ne i64 %expval, 0, !dbg !5242
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !5242

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 903, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !5242
  unreachable, !dbg !5242

5:                                                ; No predecessors!
  br label %lor.end, !dbg !5242

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !5242
  %7 = load ptr, ptr %nodep.addr, align 8, !dbg !5244
  %cmp3 = icmp eq ptr %7, null, !dbg !5244
  br i1 %cmp3, label %lor.end8, label %lor.rhs5, !dbg !5244

lor.rhs5:                                         ; preds = %lor.end
  %8 = load ptr, ptr %nodep.addr, align 8, !dbg !5244
  %9 = load ptr, ptr %8, align 8, !dbg !5244
  %cmp6 = icmp eq ptr %9, null, !dbg !5244
  br label %lor.end8, !dbg !5244

lor.end8:                                         ; preds = %lor.rhs5, %lor.end
  %10 = phi i1 [ true, %lor.end ], [ %cmp6, %lor.rhs5 ]
  %lnot10 = xor i1 %10, true, !dbg !5244
  %lnot12 = xor i1 %lnot10, true, !dbg !5244
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !5244
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !5244
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 1), !dbg !5244
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !5244
  br i1 %tobool16, label %lor.end18, label %lor.rhs17, !dbg !5244

lor.rhs17:                                        ; preds = %lor.end8
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 904, i32 noundef 0, ptr noundef @.str.81) #12, !dbg !5244
  unreachable, !dbg !5244

11:                                               ; No predecessors!
  br label %lor.end18, !dbg !5244

lor.end18:                                        ; preds = %11, %lor.end8
  %12 = phi i1 [ true, %lor.end8 ], [ false, %11 ]
  %lor.ext19 = zext i1 %12 to i32, !dbg !5244
  %13 = load ptr, ptr %version.addr, align 8, !dbg !5245
  %cmp20 = icmp eq ptr %13, null, !dbg !5245
  br i1 %cmp20, label %lor.end27, label %lor.lhs.false, !dbg !5245

lor.lhs.false:                                    ; preds = %lor.end18
  %14 = load ptr, ptr %version.addr, align 8, !dbg !5245
  %15 = load ptr, ptr %sdlz, align 8, !dbg !5245
  %dummy_version = getelementptr inbounds %struct.dns_sdlz_db, ptr %15, i32 0, i32 6, !dbg !5245
  %cmp22 = icmp eq ptr %14, %dummy_version, !dbg !5245
  br i1 %cmp22, label %lor.end27, label %lor.rhs24, !dbg !5245

lor.rhs24:                                        ; preds = %lor.lhs.false
  %16 = load ptr, ptr %version.addr, align 8, !dbg !5245
  %17 = load ptr, ptr %sdlz, align 8, !dbg !5245
  %future_version = getelementptr inbounds %struct.dns_sdlz_db, ptr %17, i32 0, i32 5, !dbg !5245
  %18 = load ptr, ptr %future_version, align 8, !dbg !5245
  %cmp25 = icmp eq ptr %16, %18, !dbg !5245
  br label %lor.end27, !dbg !5245

lor.end27:                                        ; preds = %lor.rhs24, %lor.lhs.false, %lor.end18
  %19 = phi i1 [ true, %lor.lhs.false ], [ true, %lor.end18 ], [ %cmp25, %lor.rhs24 ]
  %lnot29 = xor i1 %19, true, !dbg !5245
  %lnot31 = xor i1 %lnot29, true, !dbg !5245
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !5245
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !5245
  %expval34 = call i64 @llvm.expect.i64(i64 %conv33, i64 1), !dbg !5245
  %tobool35 = icmp ne i64 %expval34, 0, !dbg !5245
  br i1 %tobool35, label %lor.end37, label %lor.rhs36, !dbg !5245

lor.rhs36:                                        ; preds = %lor.end27
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 907, i32 noundef 0, ptr noundef @.str.79) #12, !dbg !5245
  unreachable, !dbg !5245

20:                                               ; No predecessors!
  br label %lor.end37, !dbg !5245

lor.end37:                                        ; preds = %20, %lor.end27
  %21 = phi i1 [ true, %lor.end27 ], [ false, %20 ]
  %lor.ext38 = zext i1 %21 to i32, !dbg !5245
  %22 = load ptr, ptr %sdlz, align 8, !dbg !5246
  %23 = load ptr, ptr %name.addr, align 8, !dbg !5247
  %24 = load ptr, ptr %db.addr, align 8, !dbg !5249
  %origin = getelementptr inbounds %struct.dns_db, ptr %24, i32 0, i32 5, !dbg !5250
  %call = call zeroext i1 @dns_name_issubdomain(ptr noundef %23, ptr noundef %origin), !dbg !5251
  br i1 %call, label %if.end, label %if.then, !dbg !5252

if.then:                                          ; preds = %lor.end37
  store i32 196611, ptr %retval, align 4, !dbg !5253
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup162, !dbg !5253

if.end:                                           ; preds = %lor.end37
  %25 = load ptr, ptr %db.addr, align 8, !dbg !5254
  %origin39 = getelementptr inbounds %struct.dns_db, ptr %25, i32 0, i32 5, !dbg !5255
  %call40 = call i32 @dns_name_countlabels(ptr noundef %origin39), !dbg !5256
  store i32 %call40, ptr %olabels, align 4, !dbg !5257
  %26 = load ptr, ptr %name.addr, align 8, !dbg !5258
  %call41 = call i32 @dns_name_countlabels(ptr noundef %26), !dbg !5259
  store i32 %call41, ptr %nlabels, align 4, !dbg !5260
  %call42 = call ptr @dns_fixedname_initname(ptr noundef %fname), !dbg !5261
  store ptr %call42, ptr %xname, align 8, !dbg !5262
  %27 = load ptr, ptr %rdataset.addr, align 8, !dbg !5263
  %cmp43 = icmp eq ptr %27, null, !dbg !5265
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !5266

if.then45:                                        ; preds = %if.end
  call void @dns_rdataset_init(ptr noundef %xrdataset), !dbg !5267
  store ptr %xrdataset, ptr %rdataset.addr, align 8, !dbg !5269
  br label %if.end46, !dbg !5270

if.end46:                                         ; preds = %if.then45, %if.end
  store i32 196611, ptr %result, align 4, !dbg !5271
  %28 = load i32, ptr %options.addr, align 4, !dbg !5272
  %and = and i32 %28, 512, !dbg !5274
  %cmp47 = icmp ne i32 %and, 0, !dbg !5275
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !5276

if.then49:                                        ; preds = %if.end46
  %29 = load i32, ptr %nlabels, align 4, !dbg !5277
  store i32 %29, ptr %i, align 4, !dbg !5279
  br label %search, !dbg !5280

if.end50:                                         ; preds = %if.end46
  %30 = load i32, ptr %olabels, align 4, !dbg !5281
  store i32 %30, ptr %i, align 4, !dbg !5282
  br label %for.cond, !dbg !5283

for.cond:                                         ; preds = %for.inc, %if.end50
  %31 = load i32, ptr %i, align 4, !dbg !5284
  %32 = load i32, ptr %nlabels, align 4, !dbg !5285
  %cmp51 = icmp ule i32 %31, %32, !dbg !5286
  br i1 %cmp51, label %for.body, label %for.end, !dbg !5287

for.body:                                         ; preds = %for.cond
  br label %search, !dbg !5288

search:                                           ; preds = %for.body, %if.then49
  tail call void @llvm.dbg.label(metadata !5205), !dbg !5289
  %33 = load ptr, ptr %name.addr, align 8, !dbg !5290
  %34 = load i32, ptr %nlabels, align 4, !dbg !5291
  %35 = load i32, ptr %i, align 4, !dbg !5292
  %sub = sub i32 %34, %35, !dbg !5293
  %36 = load i32, ptr %i, align 4, !dbg !5294
  %37 = load ptr, ptr %xname, align 8, !dbg !5295
  call void @dns_name_getlabelsequence(ptr noundef %33, i32 noundef %sub, i32 noundef %36, ptr noundef %37), !dbg !5296
  %38 = load ptr, ptr %db.addr, align 8, !dbg !5297
  %39 = load ptr, ptr %xname, align 8, !dbg !5298
  %40 = load i32, ptr %options.addr, align 4, !dbg !5299
  %41 = load ptr, ptr %methods.addr, align 8, !dbg !5300
  %42 = load ptr, ptr %clientinfo.addr, align 8, !dbg !5301
  %call53 = call i32 @getnodedata(ptr noundef %38, ptr noundef %39, i1 noundef zeroext false, i32 noundef %40, ptr noundef %41, ptr noundef %42, ptr noundef %node), !dbg !5302
  store i32 %call53, ptr %result, align 4, !dbg !5303
  %43 = load i32, ptr %result, align 4, !dbg !5304
  %cmp54 = icmp eq i32 %43, 23, !dbg !5306
  br i1 %cmp54, label %if.then56, label %if.else, !dbg !5307

if.then56:                                        ; preds = %search
  store i32 196611, ptr %result, align 4, !dbg !5308
  br label %for.inc, !dbg !5310

if.else:                                          ; preds = %search
  %44 = load i32, ptr %result, align 4, !dbg !5311
  %cmp57 = icmp ne i32 %44, 0, !dbg !5313
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !5314

if.then59:                                        ; preds = %if.else
  br label %for.end, !dbg !5315

if.end60:                                         ; preds = %if.else
  br label %if.end61

if.end61:                                         ; preds = %if.end60
  %45 = load i32, ptr %i, align 4, !dbg !5316
  %46 = load i32, ptr %nlabels, align 4, !dbg !5318
  %cmp62 = icmp ult i32 %45, %46, !dbg !5319
  br i1 %cmp62, label %if.then64, label %if.end70, !dbg !5320

if.then64:                                        ; preds = %if.end61
  %47 = load ptr, ptr %db.addr, align 8, !dbg !5321
  %48 = load ptr, ptr %node, align 8, !dbg !5323
  %49 = load ptr, ptr %version.addr, align 8, !dbg !5324
  %50 = load i32, ptr %now.addr, align 4, !dbg !5325
  %51 = load ptr, ptr %rdataset.addr, align 8, !dbg !5326
  %52 = load ptr, ptr %sigrdataset.addr, align 8, !dbg !5327
  %call65 = call i32 @findrdataset(ptr noundef %47, ptr noundef %48, ptr noundef %49, i16 noundef zeroext 39, i16 noundef zeroext 0, i32 noundef %50, ptr noundef %51, ptr noundef %52), !dbg !5328
  store i32 %call65, ptr %result, align 4, !dbg !5329
  %53 = load i32, ptr %result, align 4, !dbg !5330
  %cmp66 = icmp eq i32 %53, 0, !dbg !5332
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !5333

if.then68:                                        ; preds = %if.then64
  store i32 65567, ptr %result, align 4, !dbg !5334
  br label %for.end, !dbg !5336

if.end69:                                         ; preds = %if.then64
  br label %if.end70, !dbg !5337

if.end70:                                         ; preds = %if.end69, %if.end61
  %54 = load i32, ptr %i, align 4, !dbg !5338
  %55 = load i32, ptr %olabels, align 4, !dbg !5340
  %cmp71 = icmp ne i32 %54, %55, !dbg !5341
  br i1 %cmp71, label %land.lhs.true, label %if.end105, !dbg !5342

land.lhs.true:                                    ; preds = %if.end70
  %56 = load i32, ptr %options.addr, align 4, !dbg !5343
  %and73 = and i32 %56, 1, !dbg !5344
  %cmp74 = icmp eq i32 %and73, 0, !dbg !5345
  br i1 %cmp74, label %land.lhs.true76, label %if.end105, !dbg !5346

land.lhs.true76:                                  ; preds = %land.lhs.true
  %57 = load i32, ptr %options.addr, align 4, !dbg !5347
  %and77 = and i32 %57, 512, !dbg !5348
  %cmp78 = icmp eq i32 %and77, 0, !dbg !5349
  br i1 %cmp78, label %if.then80, label %if.end105, !dbg !5350

if.then80:                                        ; preds = %land.lhs.true76
  %58 = load ptr, ptr %db.addr, align 8, !dbg !5351
  %59 = load ptr, ptr %node, align 8, !dbg !5353
  %60 = load ptr, ptr %version.addr, align 8, !dbg !5354
  %61 = load i32, ptr %now.addr, align 4, !dbg !5355
  %62 = load ptr, ptr %rdataset.addr, align 8, !dbg !5356
  %63 = load ptr, ptr %sigrdataset.addr, align 8, !dbg !5357
  %call81 = call i32 @findrdataset(ptr noundef %58, ptr noundef %59, ptr noundef %60, i16 noundef zeroext 2, i16 noundef zeroext 0, i32 noundef %61, ptr noundef %62, ptr noundef %63), !dbg !5358
  store i32 %call81, ptr %result, align 4, !dbg !5359
  %64 = load i32, ptr %result, align 4, !dbg !5360
  %cmp82 = icmp eq i32 %64, 0, !dbg !5362
  br i1 %cmp82, label %land.lhs.true84, label %if.else99, !dbg !5363

land.lhs.true84:                                  ; preds = %if.then80
  %65 = load i32, ptr %i, align 4, !dbg !5364
  %66 = load i32, ptr %nlabels, align 4, !dbg !5365
  %cmp85 = icmp eq i32 %65, %66, !dbg !5366
  br i1 %cmp85, label %land.lhs.true87, label %if.else99, !dbg !5367

land.lhs.true87:                                  ; preds = %land.lhs.true84
  %67 = load i16, ptr %type.addr, align 2, !dbg !5368
  %conv88 = zext i16 %67 to i32, !dbg !5368
  %cmp89 = icmp eq i32 %conv88, 255, !dbg !5369
  br i1 %cmp89, label %if.then91, label %if.else99, !dbg !5370

if.then91:                                        ; preds = %land.lhs.true87
  store i32 65570, ptr %result, align 4, !dbg !5371
  %68 = load ptr, ptr %rdataset.addr, align 8, !dbg !5373
  call void @dns_rdataset_disassociate(ptr noundef %68), !dbg !5374
  %69 = load ptr, ptr %sigrdataset.addr, align 8, !dbg !5375
  %cmp92 = icmp ne ptr %69, null, !dbg !5377
  br i1 %cmp92, label %land.lhs.true94, label %if.end98, !dbg !5378

land.lhs.true94:                                  ; preds = %if.then91
  %70 = load ptr, ptr %sigrdataset.addr, align 8, !dbg !5379
  %call95 = call zeroext i1 @dns_rdataset_isassociated(ptr noundef %70), !dbg !5380
  br i1 %call95, label %if.then97, label %if.end98, !dbg !5381

if.then97:                                        ; preds = %land.lhs.true94
  %71 = load ptr, ptr %sigrdataset.addr, align 8, !dbg !5382
  call void @dns_rdataset_disassociate(ptr noundef %71), !dbg !5383
  br label %if.end98, !dbg !5383

if.end98:                                         ; preds = %if.then97, %land.lhs.true94, %if.then91
  br label %for.end, !dbg !5384

if.else99:                                        ; preds = %land.lhs.true87, %land.lhs.true84, %if.then80
  %72 = load i32, ptr %result, align 4, !dbg !5385
  %cmp100 = icmp eq i32 %72, 0, !dbg !5387
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !5388

if.then102:                                       ; preds = %if.else99
  store i32 65565, ptr %result, align 4, !dbg !5389
  br label %for.end, !dbg !5391

if.end103:                                        ; preds = %if.else99
  br label %if.end104

if.end104:                                        ; preds = %if.end103
  br label %if.end105, !dbg !5392

if.end105:                                        ; preds = %if.end104, %land.lhs.true76, %land.lhs.true, %if.end70
  %73 = load i32, ptr %i, align 4, !dbg !5393
  %74 = load i32, ptr %nlabels, align 4, !dbg !5395
  %cmp106 = icmp ult i32 %73, %74, !dbg !5396
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !5397

if.then108:                                       ; preds = %if.end105
  %75 = load ptr, ptr %node, align 8, !dbg !5398
  call void @destroynode(ptr noundef %75), !dbg !5400
  store ptr null, ptr %node, align 8, !dbg !5401
  br label %for.inc, !dbg !5402

if.end109:                                        ; preds = %if.end105
  %76 = load i16, ptr %type.addr, align 2, !dbg !5403
  %conv110 = zext i16 %76 to i32, !dbg !5403
  %cmp111 = icmp eq i32 %conv110, 255, !dbg !5405
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !5406

if.then113:                                       ; preds = %if.end109
  store i32 0, ptr %result, align 4, !dbg !5407
  br label %for.end, !dbg !5409

if.end114:                                        ; preds = %if.end109
  %77 = load ptr, ptr %db.addr, align 8, !dbg !5410
  %78 = load ptr, ptr %node, align 8, !dbg !5411
  %79 = load ptr, ptr %version.addr, align 8, !dbg !5412
  %80 = load i16, ptr %type.addr, align 2, !dbg !5413
  %81 = load i32, ptr %now.addr, align 4, !dbg !5414
  %82 = load ptr, ptr %rdataset.addr, align 8, !dbg !5415
  %83 = load ptr, ptr %sigrdataset.addr, align 8, !dbg !5416
  %call115 = call i32 @findrdataset(ptr noundef %77, ptr noundef %78, ptr noundef %79, i16 noundef zeroext %80, i16 noundef zeroext 0, i32 noundef %81, ptr noundef %82, ptr noundef %83), !dbg !5417
  store i32 %call115, ptr %result, align 4, !dbg !5418
  %84 = load i32, ptr %result, align 4, !dbg !5419
  %cmp116 = icmp eq i32 %84, 0, !dbg !5421
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !5422

if.then118:                                       ; preds = %if.end114
  br label %for.end, !dbg !5423

if.end119:                                        ; preds = %if.end114
  %85 = load i16, ptr %type.addr, align 2, !dbg !5424
  %conv120 = zext i16 %85 to i32, !dbg !5424
  %cmp121 = icmp ne i32 %conv120, 5, !dbg !5426
  br i1 %cmp121, label %if.then123, label %if.end129, !dbg !5427

if.then123:                                       ; preds = %if.end119
  %86 = load ptr, ptr %db.addr, align 8, !dbg !5428
  %87 = load ptr, ptr %node, align 8, !dbg !5430
  %88 = load ptr, ptr %version.addr, align 8, !dbg !5431
  %89 = load i32, ptr %now.addr, align 4, !dbg !5432
  %90 = load ptr, ptr %rdataset.addr, align 8, !dbg !5433
  %91 = load ptr, ptr %sigrdataset.addr, align 8, !dbg !5434
  %call124 = call i32 @findrdataset(ptr noundef %86, ptr noundef %87, ptr noundef %88, i16 noundef zeroext 5, i16 noundef zeroext 0, i32 noundef %89, ptr noundef %90, ptr noundef %91), !dbg !5435
  store i32 %call124, ptr %result, align 4, !dbg !5436
  %92 = load i32, ptr %result, align 4, !dbg !5437
  %cmp125 = icmp eq i32 %92, 0, !dbg !5439
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !5440

if.then127:                                       ; preds = %if.then123
  store i32 65568, ptr %result, align 4, !dbg !5441
  br label %for.end, !dbg !5443

if.end128:                                        ; preds = %if.then123
  br label %if.end129, !dbg !5444

if.end129:                                        ; preds = %if.end128, %if.end119
  store i32 196616, ptr %result, align 4, !dbg !5445
  br label %for.end, !dbg !5446

for.inc:                                          ; preds = %if.then108, %if.then56
  %93 = load i32, ptr %i, align 4, !dbg !5447
  %inc = add i32 %93, 1, !dbg !5447
  store i32 %inc, ptr %i, align 4, !dbg !5447
  br label %for.cond, !dbg !5448, !llvm.loop !5449

for.end:                                          ; preds = %if.end129, %if.then127, %if.then118, %if.then113, %if.then102, %if.end98, %if.then68, %if.then59, %for.cond
  %94 = load ptr, ptr %rdataset.addr, align 8, !dbg !5451
  %cmp130 = icmp eq ptr %94, %xrdataset, !dbg !5453
  br i1 %cmp130, label %land.lhs.true132, label %if.end136, !dbg !5454

land.lhs.true132:                                 ; preds = %for.end
  %95 = load ptr, ptr %rdataset.addr, align 8, !dbg !5455
  %call133 = call zeroext i1 @dns_rdataset_isassociated(ptr noundef %95), !dbg !5456
  br i1 %call133, label %if.then135, label %if.end136, !dbg !5457

if.then135:                                       ; preds = %land.lhs.true132
  %96 = load ptr, ptr %rdataset.addr, align 8, !dbg !5458
  call void @dns_rdataset_disassociate(ptr noundef %96), !dbg !5459
  br label %if.end136, !dbg !5459

if.end136:                                        ; preds = %if.then135, %land.lhs.true132, %for.end
  %97 = load ptr, ptr %foundname.addr, align 8, !dbg !5460
  %cmp137 = icmp ne ptr %97, null, !dbg !5461
  br i1 %cmp137, label %if.then139, label %if.end152, !dbg !5462

if.then139:                                       ; preds = %if.end136
  call void @llvm.lifetime.start.p0(i64 4, ptr %xresult) #11, !dbg !5463
  tail call void @llvm.dbg.declare(metadata ptr %xresult, metadata !5209, metadata !DIExpression()), !dbg !5464
  %98 = load ptr, ptr %xname, align 8, !dbg !5465
  %99 = load ptr, ptr %foundname.addr, align 8, !dbg !5466
  %call140 = call i32 @dns_name_copy(ptr noundef %98, ptr noundef %99, ptr noundef null), !dbg !5467
  store i32 %call140, ptr %xresult, align 4, !dbg !5468
  %100 = load i32, ptr %xresult, align 4, !dbg !5469
  %cmp141 = icmp ne i32 %100, 0, !dbg !5471
  br i1 %cmp141, label %if.then143, label %if.end151, !dbg !5472

if.then143:                                       ; preds = %if.then139
  %101 = load ptr, ptr %node, align 8, !dbg !5473
  %cmp144 = icmp ne ptr %101, null, !dbg !5476
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !5477

if.then146:                                       ; preds = %if.then143
  %102 = load ptr, ptr %node, align 8, !dbg !5478
  call void @destroynode(ptr noundef %102), !dbg !5479
  br label %if.end147, !dbg !5479

if.end147:                                        ; preds = %if.then146, %if.then143
  %103 = load ptr, ptr %rdataset.addr, align 8, !dbg !5480
  %call148 = call zeroext i1 @dns_rdataset_isassociated(ptr noundef %103), !dbg !5482
  br i1 %call148, label %if.then149, label %if.end150, !dbg !5483

if.then149:                                       ; preds = %if.end147
  %104 = load ptr, ptr %rdataset.addr, align 8, !dbg !5484
  call void @dns_rdataset_disassociate(ptr noundef %104), !dbg !5485
  br label %if.end150, !dbg !5485

if.end150:                                        ; preds = %if.then149, %if.end147
  store i32 65569, ptr %retval, align 4, !dbg !5486
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5486

if.end151:                                        ; preds = %if.then139
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5487
  br label %cleanup, !dbg !5487

cleanup:                                          ; preds = %if.end151, %if.end150
  call void @llvm.lifetime.end.p0(i64 4, ptr %xresult) #11, !dbg !5487
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup162 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end152, !dbg !5488

if.end152:                                        ; preds = %cleanup.cont, %if.end136
  %105 = load ptr, ptr %nodep.addr, align 8, !dbg !5489
  %cmp153 = icmp ne ptr %105, null, !dbg !5491
  br i1 %cmp153, label %if.then155, label %if.else156, !dbg !5492

if.then155:                                       ; preds = %if.end152
  %106 = load ptr, ptr %node, align 8, !dbg !5493
  %107 = load ptr, ptr %nodep.addr, align 8, !dbg !5494
  store ptr %106, ptr %107, align 8, !dbg !5495
  br label %if.end161, !dbg !5496

if.else156:                                       ; preds = %if.end152
  %108 = load ptr, ptr %node, align 8, !dbg !5497
  %cmp157 = icmp ne ptr %108, null, !dbg !5499
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !5500

if.then159:                                       ; preds = %if.else156
  %109 = load ptr, ptr %db.addr, align 8, !dbg !5501
  call void @detachnode(ptr noundef %109, ptr noundef %node), !dbg !5502
  br label %if.end160, !dbg !5502

if.end160:                                        ; preds = %if.then159, %if.else156
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then155
  %110 = load i32, ptr %result, align 4, !dbg !5503
  store i32 %110, ptr %retval, align 4, !dbg !5504
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup162, !dbg !5504

cleanup162:                                       ; preds = %if.end161, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #11, !dbg !5505
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !5505
  call void @llvm.lifetime.end.p0(i64 4, ptr %olabels) #11, !dbg !5505
  call void @llvm.lifetime.end.p0(i64 4, ptr %nlabels) #11, !dbg !5505
  call void @llvm.lifetime.end.p0(i64 8, ptr %xname) #11, !dbg !5505
  call void @llvm.lifetime.end.p0(i64 120, ptr %xrdataset) #11, !dbg !5505
  call void @llvm.lifetime.end.p0(i64 528, ptr %fname) #11, !dbg !5505
  call void @llvm.lifetime.end.p0(i64 8, ptr %node) #11, !dbg !5505
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !5505
  %111 = load i32, ptr %retval, align 4, !dbg !5505
  ret i32 %111, !dbg !5505
}

; Function Attrs: null_pointer_is_valid
declare !dbg !5506 ptr @isc_result_totext(i32 noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @getnodedata(ptr noundef %db, ptr noundef %name, i1 noundef zeroext %create, i32 noundef %options, ptr noundef %methods, ptr noundef %clientinfo, ptr noundef %nodep) #0 !dbg !5510 {
entry:
  %retval = alloca i32, align 4
  %db.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %create.addr = alloca i8, align 1
  %options.addr = alloca i32, align 4
  %methods.addr = alloca ptr, align 8
  %clientinfo.addr = alloca ptr, align 8
  %nodep.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %node = alloca ptr, align 8
  %result = alloca i32, align 4
  %b = alloca %struct.isc_buffer, align 8
  %namestr = alloca [1024 x i8], align 16
  %b2 = alloca %struct.isc_buffer, align 8
  %zonestr = alloca [1024 x i8], align 16
  %isorigin = alloca i8, align 1
  %authority = alloca ptr, align 8
  %relname = alloca %struct.dns_name, align 8
  %labels = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %_cp = alloca ptr, align 8
  %_val2 = alloca i8, align 1
  %_tmp = alloca ptr, align 8
  %_cp130 = alloca ptr, align 8
  %_val2131 = alloca i8, align 1
  %_tmp142 = alloca ptr, align 8
  %flags193 = alloca i32, align 4
  %i = alloca i32, align 4
  %dlabels = alloca i32, align 4
  %nlabels = alloca i32, align 4
  %wildstr = alloca [1024 x i8], align 16
  %fixed = alloca %struct.dns_fixedname, align 8
  %wild = alloca ptr, align 8
  %fname = alloca ptr, align 8
  %flags256 = alloca i32, align 4
  %flags316 = alloca i32, align 4
  %_cp349 = alloca ptr, align 8
  %_val2350 = alloca i8, align 1
  %_tmp361 = alloca ptr, align 8
  %flags426 = alloca i32, align 4
  %flags480 = alloca i32, align 4
  %flags520 = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !5514, metadata !DIExpression()), !dbg !5584
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !5515, metadata !DIExpression()), !dbg !5585
  %frombool = zext i1 %create to i8
  store i8 %frombool, ptr %create.addr, align 1
  tail call void @llvm.dbg.declare(metadata ptr %create.addr, metadata !5516, metadata !DIExpression()), !dbg !5586
  store i32 %options, ptr %options.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !5517, metadata !DIExpression()), !dbg !5587
  store ptr %methods, ptr %methods.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %methods.addr, metadata !5518, metadata !DIExpression()), !dbg !5588
  store ptr %clientinfo, ptr %clientinfo.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %clientinfo.addr, metadata !5519, metadata !DIExpression()), !dbg !5589
  store ptr %nodep, ptr %nodep.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %nodep.addr, metadata !5520, metadata !DIExpression()), !dbg !5590
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !5591
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !5521, metadata !DIExpression()), !dbg !5592
  %0 = load ptr, ptr %db.addr, align 8, !dbg !5593
  store ptr %0, ptr %sdlz, align 8, !dbg !5592
  call void @llvm.lifetime.start.p0(i64 8, ptr %node) #11, !dbg !5594
  tail call void @llvm.dbg.declare(metadata ptr %node, metadata !5522, metadata !DIExpression()), !dbg !5595
  store ptr null, ptr %node, align 8, !dbg !5595
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !5596
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !5523, metadata !DIExpression()), !dbg !5597
  call void @llvm.lifetime.start.p0(i64 64, ptr %b) #11, !dbg !5598
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !5524, metadata !DIExpression()), !dbg !5599
  call void @llvm.lifetime.start.p0(i64 1024, ptr %namestr) #11, !dbg !5600
  tail call void @llvm.dbg.declare(metadata ptr %namestr, metadata !5525, metadata !DIExpression()), !dbg !5601
  call void @llvm.lifetime.start.p0(i64 64, ptr %b2) #11, !dbg !5602
  tail call void @llvm.dbg.declare(metadata ptr %b2, metadata !5526, metadata !DIExpression()), !dbg !5603
  call void @llvm.lifetime.start.p0(i64 1024, ptr %zonestr) #11, !dbg !5604
  tail call void @llvm.dbg.declare(metadata ptr %zonestr, metadata !5527, metadata !DIExpression()), !dbg !5605
  call void @llvm.lifetime.start.p0(i64 1, ptr %isorigin) #11, !dbg !5606
  tail call void @llvm.dbg.declare(metadata ptr %isorigin, metadata !5528, metadata !DIExpression()), !dbg !5607
  call void @llvm.lifetime.start.p0(i64 8, ptr %authority) #11, !dbg !5608
  tail call void @llvm.dbg.declare(metadata ptr %authority, metadata !5529, metadata !DIExpression()), !dbg !5609
  %1 = load ptr, ptr %sdlz, align 8, !dbg !5610
  %cmp = icmp ne ptr %1, null, !dbg !5610
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5610

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %sdlz, align 8, !dbg !5610
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !5610
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !5610
  %3 = load i32, ptr %impmagic, align 4, !dbg !5610
  %cmp1 = icmp eq i32 %3, 1145854547, !dbg !5610
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !5611
  %lnot = xor i1 %4, true, !dbg !5610
  %lnot2 = xor i1 %lnot, true, !dbg !5610
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5610
  %conv = sext i32 %lnot.ext to i64, !dbg !5610
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5610
  %tobool = icmp ne i64 %expval, 0, !dbg !5610
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !5610

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 545, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !5610
  unreachable, !dbg !5610

5:                                                ; No predecessors!
  br label %lor.end, !dbg !5610

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !5610
  %7 = load ptr, ptr %nodep.addr, align 8, !dbg !5612
  %cmp3 = icmp ne ptr %7, null, !dbg !5612
  br i1 %cmp3, label %land.rhs5, label %land.end8, !dbg !5612

land.rhs5:                                        ; preds = %lor.end
  %8 = load ptr, ptr %nodep.addr, align 8, !dbg !5612
  %9 = load ptr, ptr %8, align 8, !dbg !5612
  %cmp6 = icmp eq ptr %9, null, !dbg !5612
  br label %land.end8

land.end8:                                        ; preds = %land.rhs5, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %cmp6, %land.rhs5 ], !dbg !5611
  %lnot9 = xor i1 %10, true, !dbg !5612
  %lnot11 = xor i1 %lnot9, true, !dbg !5612
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !5612
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !5612
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 1), !dbg !5612
  %tobool15 = icmp ne i64 %expval14, 0, !dbg !5612
  br i1 %tobool15, label %lor.end17, label %lor.rhs16, !dbg !5612

lor.rhs16:                                        ; preds = %land.end8
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 546, i32 noundef 0, ptr noundef @.str.59) #12, !dbg !5612
  unreachable, !dbg !5612

11:                                               ; No predecessors!
  br label %lor.end17, !dbg !5612

lor.end17:                                        ; preds = %11, %land.end8
  %12 = phi i1 [ true, %land.end8 ], [ false, %11 ]
  %lor.ext18 = zext i1 %12 to i32, !dbg !5612
  %13 = load ptr, ptr %sdlz, align 8, !dbg !5613
  %dlzimp = getelementptr inbounds %struct.dns_sdlz_db, ptr %13, i32 0, i32 2, !dbg !5615
  %14 = load ptr, ptr %dlzimp, align 8, !dbg !5615
  %methods19 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %14, i32 0, i32 0, !dbg !5616
  %15 = load ptr, ptr %methods19, align 8, !dbg !5616
  %newversion = getelementptr inbounds %struct.dns_sdlzmethods, ptr %15, i32 0, i32 7, !dbg !5617
  %16 = load ptr, ptr %newversion, align 8, !dbg !5617
  %cmp20 = icmp eq ptr %16, null, !dbg !5618
  br i1 %cmp20, label %if.then, label %if.end, !dbg !5619

if.then:                                          ; preds = %lor.end17
  %17 = load i8, ptr %create.addr, align 1, !dbg !5620, !range !2769, !noundef !2770
  %tobool22 = trunc i8 %17 to i1, !dbg !5620
  %conv23 = zext i1 %tobool22 to i32, !dbg !5620
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !5620
  %lnot26 = xor i1 %cmp24, true, !dbg !5620
  %lnot28 = xor i1 %lnot26, true, !dbg !5620
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !5620
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !5620
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 1), !dbg !5620
  %tobool32 = icmp ne i64 %expval31, 0, !dbg !5620
  br i1 %tobool32, label %lor.end34, label %lor.rhs33, !dbg !5620

lor.rhs33:                                        ; preds = %if.then
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 549, i32 noundef 0, ptr noundef @.str.60) #12, !dbg !5620
  unreachable, !dbg !5620

18:                                               ; No predecessors!
  br label %lor.end34, !dbg !5620

lor.end34:                                        ; preds = %18, %if.then
  %19 = phi i1 [ true, %if.then ], [ false, %18 ]
  %lor.ext35 = zext i1 %19 to i32, !dbg !5620
  br label %if.end, !dbg !5622

if.end:                                           ; preds = %lor.end34, %lor.end17
  br label %do.body, !dbg !5623

do.body:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [1024 x i8], ptr %namestr, i64 0, i64 0, !dbg !5624
  %base = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 1, !dbg !5624
  store ptr %arraydecay, ptr %base, align 8, !dbg !5624
  %length = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 2, !dbg !5624
  store i32 1024, ptr %length, align 8, !dbg !5624
  %used = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !5624
  store i32 0, ptr %used, align 4, !dbg !5624
  %current = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 4, !dbg !5624
  store i32 0, ptr %current, align 8, !dbg !5624
  %active = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 5, !dbg !5624
  store i32 0, ptr %active, align 4, !dbg !5624
  %mctx = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 7, !dbg !5624
  store ptr null, ptr %mctx, align 8, !dbg !5624
  br label %do.body36, !dbg !5624

do.body36:                                        ; preds = %do.body
  %link = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !5626
  %prev = getelementptr inbounds %struct.anon.6, ptr %link, i32 0, i32 0, !dbg !5626
  store ptr inttoptr (i64 -1 to ptr), ptr %prev, align 8, !dbg !5626
  %link37 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !5626
  %next = getelementptr inbounds %struct.anon.6, ptr %link37, i32 0, i32 1, !dbg !5626
  store ptr inttoptr (i64 -1 to ptr), ptr %next, align 8, !dbg !5626
  br label %do.cond, !dbg !5626

do.cond:                                          ; preds = %do.body36
  br label %do.end, !dbg !5626

do.end:                                           ; preds = %do.cond
  %magic = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 0, !dbg !5624
  store i32 1114990113, ptr %magic, align 8, !dbg !5624
  %autore = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 8, !dbg !5624
  store i8 0, ptr %autore, align 8, !dbg !5624
  br label %do.cond38, !dbg !5624

do.cond38:                                        ; preds = %do.end
  br label %do.end39, !dbg !5624

do.end39:                                         ; preds = %do.cond38
  %20 = load ptr, ptr %sdlz, align 8, !dbg !5628
  %dlzimp40 = getelementptr inbounds %struct.dns_sdlz_db, ptr %20, i32 0, i32 2, !dbg !5629
  %21 = load ptr, ptr %dlzimp40, align 8, !dbg !5629
  %flags = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %21, i32 0, i32 3, !dbg !5630
  %22 = load i32, ptr %flags, align 8, !dbg !5630
  %and = and i32 %22, 2, !dbg !5631
  %cmp41 = icmp ne i32 %and, 0, !dbg !5632
  br i1 %cmp41, label %if.then43, label %if.else, !dbg !5633

if.then43:                                        ; preds = %do.end39
  call void @llvm.lifetime.start.p0(i64 80, ptr %relname) #11, !dbg !5634
  tail call void @llvm.dbg.declare(metadata ptr %relname, metadata !5530, metadata !DIExpression()), !dbg !5635
  call void @llvm.lifetime.start.p0(i64 4, ptr %labels) #11, !dbg !5636
  tail call void @llvm.dbg.declare(metadata ptr %labels, metadata !5533, metadata !DIExpression()), !dbg !5637
  %23 = load ptr, ptr %name.addr, align 8, !dbg !5638
  %call = call i32 @dns_name_countlabels(ptr noundef %23), !dbg !5639
  %24 = load ptr, ptr %sdlz, align 8, !dbg !5640
  %common44 = getelementptr inbounds %struct.dns_sdlz_db, ptr %24, i32 0, i32 0, !dbg !5641
  %origin = getelementptr inbounds %struct.dns_db, ptr %common44, i32 0, i32 5, !dbg !5642
  %call45 = call i32 @dns_name_countlabels(ptr noundef %origin), !dbg !5643
  %sub = sub i32 %call, %call45, !dbg !5644
  store i32 %sub, ptr %labels, align 4, !dbg !5645
  call void @dns_name_init(ptr noundef %relname, ptr noundef null), !dbg !5646
  %25 = load ptr, ptr %name.addr, align 8, !dbg !5647
  %26 = load i32, ptr %labels, align 4, !dbg !5648
  call void @dns_name_getlabelsequence(ptr noundef %25, i32 noundef 0, i32 noundef %26, ptr noundef %relname), !dbg !5649
  %call46 = call i32 @dns_name_totext(ptr noundef %relname, i1 noundef zeroext true, ptr noundef %b), !dbg !5650
  store i32 %call46, ptr %result, align 4, !dbg !5651
  %27 = load i32, ptr %result, align 4, !dbg !5652
  %cmp47 = icmp ne i32 %27, 0, !dbg !5654
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !5655

if.then49:                                        ; preds = %if.then43
  %28 = load i32, ptr %result, align 4, !dbg !5656
  store i32 %28, ptr %retval, align 4, !dbg !5657
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5657

if.end50:                                         ; preds = %if.then43
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5658
  br label %cleanup, !dbg !5658

cleanup:                                          ; preds = %if.end50, %if.then49
  call void @llvm.lifetime.end.p0(i64 4, ptr %labels) #11, !dbg !5658
  call void @llvm.lifetime.end.p0(i64 80, ptr %relname) #11, !dbg !5658
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup589 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end57, !dbg !5659

if.else:                                          ; preds = %do.end39
  %29 = load ptr, ptr %name.addr, align 8, !dbg !5660
  %call52 = call i32 @dns_name_totext(ptr noundef %29, i1 noundef zeroext true, ptr noundef %b), !dbg !5662
  store i32 %call52, ptr %result, align 4, !dbg !5663
  %30 = load i32, ptr %result, align 4, !dbg !5664
  %cmp53 = icmp ne i32 %30, 0, !dbg !5666
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !5667

if.then55:                                        ; preds = %if.else
  %31 = load i32, ptr %result, align 4, !dbg !5668
  store i32 %31, ptr %retval, align 4, !dbg !5669
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup589, !dbg !5669

if.end56:                                         ; preds = %if.else
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %cleanup.cont
  br label %do.body58, !dbg !5670

do.body58:                                        ; preds = %if.end57
  call void @llvm.lifetime.start.p0(i64 8, ptr %_cp) #11, !dbg !5671
  tail call void @llvm.dbg.declare(metadata ptr %_cp, metadata !5534, metadata !DIExpression()), !dbg !5671
  call void @llvm.lifetime.start.p0(i64 1, ptr %_val2) #11, !dbg !5671
  tail call void @llvm.dbg.declare(metadata ptr %_val2, metadata !5536, metadata !DIExpression()), !dbg !5671
  store i8 0, ptr %_val2, align 1, !dbg !5671
  %autore59 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 8, !dbg !5672
  %32 = load i8, ptr %autore59, align 8, !dbg !5672, !range !2769, !noundef !2770
  %tobool60 = trunc i8 %32 to i1, !dbg !5672
  %lnot61 = xor i1 %tobool60, true, !dbg !5672
  %lnot63 = xor i1 %lnot61, true, !dbg !5672
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !5672
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !5672
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 0), !dbg !5672
  %tobool67 = icmp ne i64 %expval66, 0, !dbg !5672
  br i1 %tobool67, label %if.then68, label %if.end82, !dbg !5671

if.then68:                                        ; preds = %do.body58
  call void @llvm.lifetime.start.p0(i64 8, ptr %_tmp) #11, !dbg !5673
  tail call void @llvm.dbg.declare(metadata ptr %_tmp, metadata !5537, metadata !DIExpression()), !dbg !5673
  store ptr %b, ptr %_tmp, align 8, !dbg !5673
  %call69 = call i32 @isc_buffer_reserve(ptr noundef %_tmp, i32 noundef 1), !dbg !5673
  %cmp70 = icmp eq i32 %call69, 0, !dbg !5673
  %lnot72 = xor i1 %cmp70, true, !dbg !5673
  %lnot74 = xor i1 %lnot72, true, !dbg !5673
  %lnot.ext75 = zext i1 %lnot74 to i32, !dbg !5673
  %conv76 = sext i32 %lnot.ext75 to i64, !dbg !5673
  %expval77 = call i64 @llvm.expect.i64(i64 %conv76, i64 1), !dbg !5673
  %tobool78 = icmp ne i64 %expval77, 0, !dbg !5673
  br i1 %tobool78, label %lor.end80, label %lor.rhs79, !dbg !5673

lor.rhs79:                                        ; preds = %if.then68
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 569, i32 noundef 0, ptr noundef @.str.48) #12, !dbg !5673
  unreachable, !dbg !5673

33:                                               ; No predecessors!
  br label %lor.end80, !dbg !5673

lor.end80:                                        ; preds = %33, %if.then68
  %34 = phi i1 [ true, %if.then68 ], [ false, %33 ]
  %lor.ext81 = zext i1 %34 to i32, !dbg !5673
  call void @llvm.lifetime.end.p0(i64 8, ptr %_tmp) #11, !dbg !5672
  br label %if.end82, !dbg !5673

if.end82:                                         ; preds = %lor.end80, %do.body58
  %length83 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 2, !dbg !5671
  %35 = load i32, ptr %length83, align 8, !dbg !5671
  %used84 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !5671
  %36 = load i32, ptr %used84, align 4, !dbg !5671
  %sub85 = sub i32 %35, %36, !dbg !5671
  %cmp86 = icmp uge i32 %sub85, 1, !dbg !5671
  %lnot88 = xor i1 %cmp86, true, !dbg !5671
  %lnot90 = xor i1 %lnot88, true, !dbg !5671
  %lnot.ext91 = zext i1 %lnot90 to i32, !dbg !5671
  %conv92 = sext i32 %lnot.ext91 to i64, !dbg !5671
  %expval93 = call i64 @llvm.expect.i64(i64 %conv92, i64 1), !dbg !5671
  %tobool94 = icmp ne i64 %expval93, 0, !dbg !5671
  br i1 %tobool94, label %lor.end96, label %lor.rhs95, !dbg !5671

lor.rhs95:                                        ; preds = %if.end82
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 569, i32 noundef 0, ptr noundef @.str.49) #12, !dbg !5671
  unreachable, !dbg !5671

37:                                               ; No predecessors!
  br label %lor.end96, !dbg !5671

lor.end96:                                        ; preds = %37, %if.end82
  %38 = phi i1 [ true, %if.end82 ], [ false, %37 ]
  %lor.ext97 = zext i1 %38 to i32, !dbg !5671
  %base98 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 1, !dbg !5671
  %39 = load ptr, ptr %base98, align 8, !dbg !5671
  %used99 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !5671
  %40 = load i32, ptr %used99, align 4, !dbg !5671
  %idx.ext = zext i32 %40 to i64, !dbg !5671
  %add.ptr = getelementptr inbounds i8, ptr %39, i64 %idx.ext, !dbg !5671
  store ptr %add.ptr, ptr %_cp, align 8, !dbg !5671
  %used100 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !5671
  %41 = load i32, ptr %used100, align 4, !dbg !5671
  %inc = add i32 %41, 1, !dbg !5671
  store i32 %inc, ptr %used100, align 4, !dbg !5671
  %42 = load i8, ptr %_val2, align 1, !dbg !5671
  %43 = load ptr, ptr %_cp, align 8, !dbg !5671
  %arrayidx = getelementptr inbounds i8, ptr %43, i64 0, !dbg !5671
  store i8 %42, ptr %arrayidx, align 1, !dbg !5671
  call void @llvm.lifetime.end.p0(i64 1, ptr %_val2) #11, !dbg !5670
  call void @llvm.lifetime.end.p0(i64 8, ptr %_cp) #11, !dbg !5670
  br label %do.cond101, !dbg !5671

do.cond101:                                       ; preds = %lor.end96
  br label %do.end102, !dbg !5671

do.end102:                                        ; preds = %do.cond101
  br label %do.body103, !dbg !5674

do.body103:                                       ; preds = %do.end102
  %arraydecay104 = getelementptr inbounds [1024 x i8], ptr %zonestr, i64 0, i64 0, !dbg !5675
  %base105 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 1, !dbg !5675
  store ptr %arraydecay104, ptr %base105, align 8, !dbg !5675
  %length106 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 2, !dbg !5675
  store i32 1024, ptr %length106, align 8, !dbg !5675
  %used107 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 3, !dbg !5675
  store i32 0, ptr %used107, align 4, !dbg !5675
  %current108 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 4, !dbg !5675
  store i32 0, ptr %current108, align 8, !dbg !5675
  %active109 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 5, !dbg !5675
  store i32 0, ptr %active109, align 4, !dbg !5675
  %mctx110 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 7, !dbg !5675
  store ptr null, ptr %mctx110, align 8, !dbg !5675
  br label %do.body111, !dbg !5675

do.body111:                                       ; preds = %do.body103
  %link112 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 6, !dbg !5677
  %prev113 = getelementptr inbounds %struct.anon.6, ptr %link112, i32 0, i32 0, !dbg !5677
  store ptr inttoptr (i64 -1 to ptr), ptr %prev113, align 8, !dbg !5677
  %link114 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 6, !dbg !5677
  %next115 = getelementptr inbounds %struct.anon.6, ptr %link114, i32 0, i32 1, !dbg !5677
  store ptr inttoptr (i64 -1 to ptr), ptr %next115, align 8, !dbg !5677
  br label %do.cond116, !dbg !5677

do.cond116:                                       ; preds = %do.body111
  br label %do.end117, !dbg !5677

do.end117:                                        ; preds = %do.cond116
  %magic118 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 0, !dbg !5675
  store i32 1114990113, ptr %magic118, align 8, !dbg !5675
  %autore119 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 8, !dbg !5675
  store i8 0, ptr %autore119, align 8, !dbg !5675
  br label %do.cond120, !dbg !5675

do.cond120:                                       ; preds = %do.end117
  br label %do.end121, !dbg !5675

do.end121:                                        ; preds = %do.cond120
  %44 = load ptr, ptr %sdlz, align 8, !dbg !5679
  %common122 = getelementptr inbounds %struct.dns_sdlz_db, ptr %44, i32 0, i32 0, !dbg !5680
  %origin123 = getelementptr inbounds %struct.dns_db, ptr %common122, i32 0, i32 5, !dbg !5681
  %call124 = call i32 @dns_name_totext(ptr noundef %origin123, i1 noundef zeroext true, ptr noundef %b2), !dbg !5682
  store i32 %call124, ptr %result, align 4, !dbg !5683
  %45 = load i32, ptr %result, align 4, !dbg !5684
  %cmp125 = icmp ne i32 %45, 0, !dbg !5686
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !5687

if.then127:                                       ; preds = %do.end121
  %46 = load i32, ptr %result, align 4, !dbg !5688
  store i32 %46, ptr %retval, align 4, !dbg !5689
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup589, !dbg !5689

if.end128:                                        ; preds = %do.end121
  br label %do.body129, !dbg !5690

do.body129:                                       ; preds = %if.end128
  call void @llvm.lifetime.start.p0(i64 8, ptr %_cp130) #11, !dbg !5691
  tail call void @llvm.dbg.declare(metadata ptr %_cp130, metadata !5540, metadata !DIExpression()), !dbg !5691
  call void @llvm.lifetime.start.p0(i64 1, ptr %_val2131) #11, !dbg !5691
  tail call void @llvm.dbg.declare(metadata ptr %_val2131, metadata !5542, metadata !DIExpression()), !dbg !5691
  store i8 0, ptr %_val2131, align 1, !dbg !5691
  %autore132 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 8, !dbg !5692
  %47 = load i8, ptr %autore132, align 8, !dbg !5692, !range !2769, !noundef !2770
  %tobool133 = trunc i8 %47 to i1, !dbg !5692
  %lnot134 = xor i1 %tobool133, true, !dbg !5692
  %lnot136 = xor i1 %lnot134, true, !dbg !5692
  %lnot.ext137 = zext i1 %lnot136 to i32, !dbg !5692
  %conv138 = sext i32 %lnot.ext137 to i64, !dbg !5692
  %expval139 = call i64 @llvm.expect.i64(i64 %conv138, i64 0), !dbg !5692
  %tobool140 = icmp ne i64 %expval139, 0, !dbg !5692
  br i1 %tobool140, label %if.then141, label %if.end156, !dbg !5691

if.then141:                                       ; preds = %do.body129
  call void @llvm.lifetime.start.p0(i64 8, ptr %_tmp142) #11, !dbg !5693
  tail call void @llvm.dbg.declare(metadata ptr %_tmp142, metadata !5543, metadata !DIExpression()), !dbg !5693
  store ptr %b2, ptr %_tmp142, align 8, !dbg !5693
  %call143 = call i32 @isc_buffer_reserve(ptr noundef %_tmp142, i32 noundef 1), !dbg !5693
  %cmp144 = icmp eq i32 %call143, 0, !dbg !5693
  %lnot146 = xor i1 %cmp144, true, !dbg !5693
  %lnot148 = xor i1 %lnot146, true, !dbg !5693
  %lnot.ext149 = zext i1 %lnot148 to i32, !dbg !5693
  %conv150 = sext i32 %lnot.ext149 to i64, !dbg !5693
  %expval151 = call i64 @llvm.expect.i64(i64 %conv150, i64 1), !dbg !5693
  %tobool152 = icmp ne i64 %expval151, 0, !dbg !5693
  br i1 %tobool152, label %lor.end154, label %lor.rhs153, !dbg !5693

lor.rhs153:                                       ; preds = %if.then141
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 575, i32 noundef 0, ptr noundef @.str.48) #12, !dbg !5693
  unreachable, !dbg !5693

48:                                               ; No predecessors!
  br label %lor.end154, !dbg !5693

lor.end154:                                       ; preds = %48, %if.then141
  %49 = phi i1 [ true, %if.then141 ], [ false, %48 ]
  %lor.ext155 = zext i1 %49 to i32, !dbg !5693
  call void @llvm.lifetime.end.p0(i64 8, ptr %_tmp142) #11, !dbg !5692
  br label %if.end156, !dbg !5693

if.end156:                                        ; preds = %lor.end154, %do.body129
  %length157 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 2, !dbg !5691
  %50 = load i32, ptr %length157, align 8, !dbg !5691
  %used158 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 3, !dbg !5691
  %51 = load i32, ptr %used158, align 4, !dbg !5691
  %sub159 = sub i32 %50, %51, !dbg !5691
  %cmp160 = icmp uge i32 %sub159, 1, !dbg !5691
  %lnot162 = xor i1 %cmp160, true, !dbg !5691
  %lnot164 = xor i1 %lnot162, true, !dbg !5691
  %lnot.ext165 = zext i1 %lnot164 to i32, !dbg !5691
  %conv166 = sext i32 %lnot.ext165 to i64, !dbg !5691
  %expval167 = call i64 @llvm.expect.i64(i64 %conv166, i64 1), !dbg !5691
  %tobool168 = icmp ne i64 %expval167, 0, !dbg !5691
  br i1 %tobool168, label %lor.end170, label %lor.rhs169, !dbg !5691

lor.rhs169:                                       ; preds = %if.end156
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 575, i32 noundef 0, ptr noundef @.str.51) #12, !dbg !5691
  unreachable, !dbg !5691

52:                                               ; No predecessors!
  br label %lor.end170, !dbg !5691

lor.end170:                                       ; preds = %52, %if.end156
  %53 = phi i1 [ true, %if.end156 ], [ false, %52 ]
  %lor.ext171 = zext i1 %53 to i32, !dbg !5691
  %base172 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 1, !dbg !5691
  %54 = load ptr, ptr %base172, align 8, !dbg !5691
  %used173 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 3, !dbg !5691
  %55 = load i32, ptr %used173, align 4, !dbg !5691
  %idx.ext174 = zext i32 %55 to i64, !dbg !5691
  %add.ptr175 = getelementptr inbounds i8, ptr %54, i64 %idx.ext174, !dbg !5691
  store ptr %add.ptr175, ptr %_cp130, align 8, !dbg !5691
  %used176 = getelementptr inbounds %struct.isc_buffer, ptr %b2, i32 0, i32 3, !dbg !5691
  %56 = load i32, ptr %used176, align 4, !dbg !5691
  %inc177 = add i32 %56, 1, !dbg !5691
  store i32 %inc177, ptr %used176, align 4, !dbg !5691
  %57 = load i8, ptr %_val2131, align 1, !dbg !5691
  %58 = load ptr, ptr %_cp130, align 8, !dbg !5691
  %arrayidx178 = getelementptr inbounds i8, ptr %58, i64 0, !dbg !5691
  store i8 %57, ptr %arrayidx178, align 1, !dbg !5691
  call void @llvm.lifetime.end.p0(i64 1, ptr %_val2131) #11, !dbg !5690
  call void @llvm.lifetime.end.p0(i64 8, ptr %_cp130) #11, !dbg !5690
  br label %do.cond179, !dbg !5691

do.cond179:                                       ; preds = %lor.end170
  br label %do.end180, !dbg !5691

do.end180:                                        ; preds = %do.cond179
  %59 = load ptr, ptr %sdlz, align 8, !dbg !5694
  %call181 = call i32 @createnode(ptr noundef %59, ptr noundef %node), !dbg !5695
  store i32 %call181, ptr %result, align 4, !dbg !5696
  %60 = load i32, ptr %result, align 4, !dbg !5697
  %cmp182 = icmp ne i32 %60, 0, !dbg !5699
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !5700

if.then184:                                       ; preds = %do.end180
  %61 = load i32, ptr %result, align 4, !dbg !5701
  store i32 %61, ptr %retval, align 4, !dbg !5702
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup589, !dbg !5702

if.end185:                                        ; preds = %do.end180
  %62 = load ptr, ptr %name.addr, align 8, !dbg !5703
  %63 = load ptr, ptr %sdlz, align 8, !dbg !5704
  %common186 = getelementptr inbounds %struct.dns_sdlz_db, ptr %63, i32 0, i32 0, !dbg !5705
  %origin187 = getelementptr inbounds %struct.dns_db, ptr %common186, i32 0, i32 5, !dbg !5706
  %call188 = call zeroext i1 @dns_name_equal(ptr noundef %62, ptr noundef %origin187), !dbg !5707
  %frombool189 = zext i1 %call188 to i8, !dbg !5708
  store i8 %frombool189, ptr %isorigin, align 1, !dbg !5708
  %arraydecay190 = getelementptr inbounds [1024 x i8], ptr %zonestr, i64 0, i64 0, !dbg !5709
  call void @dns_sdlz_tolower(ptr noundef %arraydecay190), !dbg !5710
  %arraydecay191 = getelementptr inbounds [1024 x i8], ptr %namestr, i64 0, i64 0, !dbg !5711
  call void @dns_sdlz_tolower(ptr noundef %arraydecay191), !dbg !5712
  br label %do.body192, !dbg !5713

do.body192:                                       ; preds = %if.end185
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags193) #11, !dbg !5714
  tail call void @llvm.dbg.declare(metadata ptr %flags193, metadata !5546, metadata !DIExpression()), !dbg !5714
  %64 = load ptr, ptr %sdlz, align 8, !dbg !5714
  %dlzimp194 = getelementptr inbounds %struct.dns_sdlz_db, ptr %64, i32 0, i32 2, !dbg !5714
  %65 = load ptr, ptr %dlzimp194, align 8, !dbg !5714
  %flags195 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %65, i32 0, i32 3, !dbg !5714
  %66 = load i32, ptr %flags195, align 8, !dbg !5714
  store i32 %66, ptr %flags193, align 4, !dbg !5714
  %67 = load i32, ptr %flags193, align 4, !dbg !5715
  %and196 = and i32 %67, 1, !dbg !5715
  %cmp197 = icmp eq i32 %and196, 0, !dbg !5715
  br i1 %cmp197, label %if.then199, label %if.end219, !dbg !5714

if.then199:                                       ; preds = %do.body192
  br label %do.body200, !dbg !5715

do.body200:                                       ; preds = %if.then199
  %68 = load ptr, ptr %sdlz, align 8, !dbg !5717
  %dlzimp201 = getelementptr inbounds %struct.dns_sdlz_db, ptr %68, i32 0, i32 2, !dbg !5717
  %69 = load ptr, ptr %dlzimp201, align 8, !dbg !5717
  %driverlock = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %69, i32 0, i32 4, !dbg !5717
  %call202 = call i32 @pthread_mutex_lock(ptr noundef %driverlock) #11, !dbg !5717
  %cmp203 = icmp eq i32 %call202, 0, !dbg !5717
  %70 = zext i1 %cmp203 to i64, !dbg !5717
  %cond = select i1 %cmp203, i32 0, i32 34, !dbg !5717
  %cmp205 = icmp eq i32 %cond, 0, !dbg !5717
  %lnot207 = xor i1 %cmp205, true, !dbg !5717
  %lnot209 = xor i1 %lnot207, true, !dbg !5717
  %lnot.ext210 = zext i1 %lnot209 to i32, !dbg !5717
  %conv211 = sext i32 %lnot.ext210 to i64, !dbg !5717
  %expval212 = call i64 @llvm.expect.i64(i64 %conv211, i64 1), !dbg !5717
  %tobool213 = icmp ne i64 %expval212, 0, !dbg !5717
  br i1 %tobool213, label %lor.end215, label %lor.rhs214, !dbg !5717

lor.rhs214:                                       ; preds = %do.body200
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 587, ptr noundef @.str.61) #12, !dbg !5717
  unreachable, !dbg !5717

71:                                               ; No predecessors!
  br label %lor.end215, !dbg !5717

lor.end215:                                       ; preds = %71, %do.body200
  %72 = phi i1 [ true, %do.body200 ], [ false, %71 ]
  %lor.ext216 = zext i1 %72 to i32, !dbg !5717
  br label %do.cond217, !dbg !5717

do.cond217:                                       ; preds = %lor.end215
  br label %do.end218, !dbg !5717

do.end218:                                        ; preds = %do.cond217
  br label %if.end219, !dbg !5717

if.end219:                                        ; preds = %do.end218, %do.body192
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags193) #11, !dbg !5713
  br label %do.cond220, !dbg !5714

do.cond220:                                       ; preds = %if.end219
  br label %do.end221, !dbg !5714

do.end221:                                        ; preds = %do.cond220
  %73 = load ptr, ptr %sdlz, align 8, !dbg !5719
  %dlzimp222 = getelementptr inbounds %struct.dns_sdlz_db, ptr %73, i32 0, i32 2, !dbg !5720
  %74 = load ptr, ptr %dlzimp222, align 8, !dbg !5720
  %methods223 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %74, i32 0, i32 0, !dbg !5721
  %75 = load ptr, ptr %methods223, align 8, !dbg !5721
  %lookup = getelementptr inbounds %struct.dns_sdlzmethods, ptr %75, i32 0, i32 3, !dbg !5722
  %76 = load ptr, ptr %lookup, align 8, !dbg !5722
  %arraydecay224 = getelementptr inbounds [1024 x i8], ptr %zonestr, i64 0, i64 0, !dbg !5723
  %arraydecay225 = getelementptr inbounds [1024 x i8], ptr %namestr, i64 0, i64 0, !dbg !5724
  %77 = load ptr, ptr %sdlz, align 8, !dbg !5725
  %dlzimp226 = getelementptr inbounds %struct.dns_sdlz_db, ptr %77, i32 0, i32 2, !dbg !5726
  %78 = load ptr, ptr %dlzimp226, align 8, !dbg !5726
  %driverarg = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %78, i32 0, i32 2, !dbg !5727
  %79 = load ptr, ptr %driverarg, align 8, !dbg !5727
  %80 = load ptr, ptr %sdlz, align 8, !dbg !5728
  %dbdata = getelementptr inbounds %struct.dns_sdlz_db, ptr %80, i32 0, i32 1, !dbg !5729
  %81 = load ptr, ptr %dbdata, align 8, !dbg !5729
  %82 = load ptr, ptr %node, align 8, !dbg !5730
  %83 = load ptr, ptr %methods.addr, align 8, !dbg !5731
  %84 = load ptr, ptr %clientinfo.addr, align 8, !dbg !5732
  %call227 = call i32 %76(ptr noundef %arraydecay224, ptr noundef %arraydecay225, ptr noundef %79, ptr noundef %81, ptr noundef %82, ptr noundef %83, ptr noundef %84), !dbg !5719
  store i32 %call227, ptr %result, align 4, !dbg !5733
  %85 = load i32, ptr %result, align 4, !dbg !5734
  %cmp228 = icmp eq i32 %85, 23, !dbg !5735
  br i1 %cmp228, label %land.lhs.true, label %if.end424, !dbg !5736

land.lhs.true:                                    ; preds = %do.end221
  %86 = load i8, ptr %create.addr, align 1, !dbg !5737, !range !2769, !noundef !2770
  %tobool230 = trunc i8 %86 to i1, !dbg !5737
  br i1 %tobool230, label %if.end424, label %land.lhs.true231, !dbg !5738

land.lhs.true231:                                 ; preds = %land.lhs.true
  %87 = load i32, ptr %options.addr, align 4, !dbg !5739
  %and232 = and i32 %87, 4, !dbg !5740
  %cmp233 = icmp eq i32 %and232, 0, !dbg !5741
  br i1 %cmp233, label %if.then235, label %if.end424, !dbg !5742

if.then235:                                       ; preds = %land.lhs.true231
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #11, !dbg !5743
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !5548, metadata !DIExpression()), !dbg !5744
  call void @llvm.lifetime.start.p0(i64 4, ptr %dlabels) #11, !dbg !5743
  tail call void @llvm.dbg.declare(metadata ptr %dlabels, metadata !5551, metadata !DIExpression()), !dbg !5745
  call void @llvm.lifetime.start.p0(i64 4, ptr %nlabels) #11, !dbg !5743
  tail call void @llvm.dbg.declare(metadata ptr %nlabels, metadata !5552, metadata !DIExpression()), !dbg !5746
  %88 = load ptr, ptr %name.addr, align 8, !dbg !5747
  %call236 = call i32 @dns_name_countlabels(ptr noundef %88), !dbg !5748
  store i32 %call236, ptr %nlabels, align 4, !dbg !5749
  %89 = load i32, ptr %nlabels, align 4, !dbg !5750
  %90 = load ptr, ptr %sdlz, align 8, !dbg !5751
  %common237 = getelementptr inbounds %struct.dns_sdlz_db, ptr %90, i32 0, i32 0, !dbg !5752
  %origin238 = getelementptr inbounds %struct.dns_db, ptr %common237, i32 0, i32 5, !dbg !5753
  %call239 = call i32 @dns_name_countlabels(ptr noundef %origin238), !dbg !5754
  %sub240 = sub i32 %89, %call239, !dbg !5755
  store i32 %sub240, ptr %dlabels, align 4, !dbg !5756
  store i32 0, ptr %i, align 4, !dbg !5757
  br label %for.cond, !dbg !5758

for.cond:                                         ; preds = %for.inc, %if.then235
  %91 = load i32, ptr %i, align 4, !dbg !5759
  %92 = load i32, ptr %dlabels, align 4, !dbg !5760
  %cmp241 = icmp ult i32 %91, %92, !dbg !5761
  br i1 %cmp241, label %for.body, label %for.end, !dbg !5762

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 1024, ptr %wildstr) #11, !dbg !5763
  tail call void @llvm.dbg.declare(metadata ptr %wildstr, metadata !5553, metadata !DIExpression()), !dbg !5764
  call void @llvm.lifetime.start.p0(i64 528, ptr %fixed) #11, !dbg !5765
  tail call void @llvm.dbg.declare(metadata ptr %fixed, metadata !5557, metadata !DIExpression()), !dbg !5766
  call void @llvm.lifetime.start.p0(i64 8, ptr %wild) #11, !dbg !5767
  tail call void @llvm.dbg.declare(metadata ptr %wild, metadata !5558, metadata !DIExpression()), !dbg !5768
  call void @dns_fixedname_init(ptr noundef %fixed), !dbg !5769
  %93 = load i32, ptr %i, align 4, !dbg !5770
  %94 = load i32, ptr %dlabels, align 4, !dbg !5771
  %sub243 = sub i32 %94, 1, !dbg !5772
  %cmp244 = icmp eq i32 %93, %sub243, !dbg !5773
  br i1 %cmp244, label %if.then246, label %if.else247, !dbg !5774

if.then246:                                       ; preds = %for.body
  %95 = load ptr, ptr @dns_wildcardname, align 8, !dbg !5775
  store ptr %95, ptr %wild, align 8, !dbg !5777
  br label %if.end291, !dbg !5778

if.else247:                                       ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %fname) #11, !dbg !5779
  tail call void @llvm.dbg.declare(metadata ptr %fname, metadata !5559, metadata !DIExpression()), !dbg !5780
  %call248 = call ptr @dns_fixedname_name(ptr noundef %fixed), !dbg !5781
  store ptr %call248, ptr %fname, align 8, !dbg !5782
  %96 = load ptr, ptr %name.addr, align 8, !dbg !5783
  %97 = load i32, ptr %i, align 4, !dbg !5784
  %add = add i32 %97, 1, !dbg !5785
  %98 = load i32, ptr %dlabels, align 4, !dbg !5786
  %99 = load i32, ptr %i, align 4, !dbg !5787
  %sub249 = sub i32 %98, %99, !dbg !5788
  %sub250 = sub i32 %sub249, 1, !dbg !5789
  %100 = load ptr, ptr %fname, align 8, !dbg !5790
  call void @dns_name_getlabelsequence(ptr noundef %96, i32 noundef %add, i32 noundef %sub250, ptr noundef %100), !dbg !5791
  %101 = load ptr, ptr @dns_wildcardname, align 8, !dbg !5792
  %102 = load ptr, ptr %fname, align 8, !dbg !5793
  %103 = load ptr, ptr %fname, align 8, !dbg !5794
  %call251 = call i32 @dns_name_concatenate(ptr noundef %101, ptr noundef %102, ptr noundef %103, ptr noundef null), !dbg !5795
  store i32 %call251, ptr %result, align 4, !dbg !5796
  %104 = load i32, ptr %result, align 4, !dbg !5797
  %cmp252 = icmp ne i32 %104, 0, !dbg !5798
  br i1 %cmp252, label %if.then254, label %if.end287, !dbg !5799

if.then254:                                       ; preds = %if.else247
  br label %do.body255, !dbg !5800

do.body255:                                       ; preds = %if.then254
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags256) #11, !dbg !5801
  tail call void @llvm.dbg.declare(metadata ptr %flags256, metadata !5562, metadata !DIExpression()), !dbg !5801
  %105 = load ptr, ptr %sdlz, align 8, !dbg !5801
  %dlzimp257 = getelementptr inbounds %struct.dns_sdlz_db, ptr %105, i32 0, i32 2, !dbg !5801
  %106 = load ptr, ptr %dlzimp257, align 8, !dbg !5801
  %flags258 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %106, i32 0, i32 3, !dbg !5801
  %107 = load i32, ptr %flags258, align 8, !dbg !5801
  store i32 %107, ptr %flags256, align 4, !dbg !5801
  %108 = load i32, ptr %flags256, align 4, !dbg !5802
  %and259 = and i32 %108, 1, !dbg !5802
  %cmp260 = icmp eq i32 %and259, 0, !dbg !5802
  br i1 %cmp260, label %if.then262, label %if.end284, !dbg !5801

if.then262:                                       ; preds = %do.body255
  br label %do.body263, !dbg !5802

do.body263:                                       ; preds = %if.then262
  %109 = load ptr, ptr %sdlz, align 8, !dbg !5804
  %dlzimp264 = getelementptr inbounds %struct.dns_sdlz_db, ptr %109, i32 0, i32 2, !dbg !5804
  %110 = load ptr, ptr %dlzimp264, align 8, !dbg !5804
  %driverlock265 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %110, i32 0, i32 4, !dbg !5804
  %call266 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock265) #11, !dbg !5804
  %cmp267 = icmp eq i32 %call266, 0, !dbg !5804
  %111 = zext i1 %cmp267 to i64, !dbg !5804
  %cond269 = select i1 %cmp267, i32 0, i32 34, !dbg !5804
  %cmp270 = icmp eq i32 %cond269, 0, !dbg !5804
  %lnot272 = xor i1 %cmp270, true, !dbg !5804
  %lnot274 = xor i1 %lnot272, true, !dbg !5804
  %lnot.ext275 = zext i1 %lnot274 to i32, !dbg !5804
  %conv276 = sext i32 %lnot.ext275 to i64, !dbg !5804
  %expval277 = call i64 @llvm.expect.i64(i64 %conv276, i64 1), !dbg !5804
  %tobool278 = icmp ne i64 %expval277, 0, !dbg !5804
  br i1 %tobool278, label %lor.end280, label %lor.rhs279, !dbg !5804

lor.rhs279:                                       ; preds = %do.body263
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 628, ptr noundef @.str.62) #12, !dbg !5804
  unreachable, !dbg !5804

112:                                              ; No predecessors!
  br label %lor.end280, !dbg !5804

lor.end280:                                       ; preds = %112, %do.body263
  %113 = phi i1 [ true, %do.body263 ], [ false, %112 ]
  %lor.ext281 = zext i1 %113 to i32, !dbg !5804
  br label %do.cond282, !dbg !5804

do.cond282:                                       ; preds = %lor.end280
  br label %do.end283, !dbg !5804

do.end283:                                        ; preds = %do.cond282
  br label %if.end284, !dbg !5804

if.end284:                                        ; preds = %do.end283, %do.body255
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags256) #11, !dbg !5800
  br label %do.cond285, !dbg !5801

do.cond285:                                       ; preds = %if.end284
  br label %do.end286, !dbg !5801

do.end286:                                        ; preds = %do.cond285
  %114 = load i32, ptr %result, align 4, !dbg !5806
  store i32 %114, ptr %retval, align 4, !dbg !5807
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup288, !dbg !5807

if.end287:                                        ; preds = %if.else247
  %115 = load ptr, ptr %fname, align 8, !dbg !5808
  store ptr %115, ptr %wild, align 8, !dbg !5809
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5810
  br label %cleanup288, !dbg !5810

cleanup288:                                       ; preds = %if.end287, %do.end286
  call void @llvm.lifetime.end.p0(i64 8, ptr %fname) #11, !dbg !5810
  %cleanup.dest289 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest289, label %cleanup413 [
    i32 0, label %cleanup.cont290
  ]

cleanup.cont290:                                  ; preds = %cleanup288
  br label %if.end291

if.end291:                                        ; preds = %cleanup.cont290, %if.then246
  br label %do.body292, !dbg !5811

do.body292:                                       ; preds = %if.end291
  %arraydecay293 = getelementptr inbounds [1024 x i8], ptr %wildstr, i64 0, i64 0, !dbg !5812
  %base294 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 1, !dbg !5812
  store ptr %arraydecay293, ptr %base294, align 8, !dbg !5812
  %length295 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 2, !dbg !5812
  store i32 1024, ptr %length295, align 8, !dbg !5812
  %used296 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !5812
  store i32 0, ptr %used296, align 4, !dbg !5812
  %current297 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 4, !dbg !5812
  store i32 0, ptr %current297, align 8, !dbg !5812
  %active298 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 5, !dbg !5812
  store i32 0, ptr %active298, align 4, !dbg !5812
  %mctx299 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 7, !dbg !5812
  store ptr null, ptr %mctx299, align 8, !dbg !5812
  br label %do.body300, !dbg !5812

do.body300:                                       ; preds = %do.body292
  %link301 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !5814
  %prev302 = getelementptr inbounds %struct.anon.6, ptr %link301, i32 0, i32 0, !dbg !5814
  store ptr inttoptr (i64 -1 to ptr), ptr %prev302, align 8, !dbg !5814
  %link303 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 6, !dbg !5814
  %next304 = getelementptr inbounds %struct.anon.6, ptr %link303, i32 0, i32 1, !dbg !5814
  store ptr inttoptr (i64 -1 to ptr), ptr %next304, align 8, !dbg !5814
  br label %do.cond305, !dbg !5814

do.cond305:                                       ; preds = %do.body300
  br label %do.end306, !dbg !5814

do.end306:                                        ; preds = %do.cond305
  %magic307 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 0, !dbg !5812
  store i32 1114990113, ptr %magic307, align 8, !dbg !5812
  %autore308 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 8, !dbg !5812
  store i8 0, ptr %autore308, align 8, !dbg !5812
  br label %do.cond309, !dbg !5812

do.cond309:                                       ; preds = %do.end306
  br label %do.end310, !dbg !5812

do.end310:                                        ; preds = %do.cond309
  %116 = load ptr, ptr %wild, align 8, !dbg !5816
  %call311 = call i32 @dns_name_totext(ptr noundef %116, i1 noundef zeroext true, ptr noundef %b), !dbg !5817
  store i32 %call311, ptr %result, align 4, !dbg !5818
  %117 = load i32, ptr %result, align 4, !dbg !5819
  %cmp312 = icmp ne i32 %117, 0, !dbg !5820
  br i1 %cmp312, label %if.then314, label %if.end347, !dbg !5821

if.then314:                                       ; preds = %do.end310
  br label %do.body315, !dbg !5822

do.body315:                                       ; preds = %if.then314
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags316) #11, !dbg !5823
  tail call void @llvm.dbg.declare(metadata ptr %flags316, metadata !5566, metadata !DIExpression()), !dbg !5823
  %118 = load ptr, ptr %sdlz, align 8, !dbg !5823
  %dlzimp317 = getelementptr inbounds %struct.dns_sdlz_db, ptr %118, i32 0, i32 2, !dbg !5823
  %119 = load ptr, ptr %dlzimp317, align 8, !dbg !5823
  %flags318 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %119, i32 0, i32 3, !dbg !5823
  %120 = load i32, ptr %flags318, align 8, !dbg !5823
  store i32 %120, ptr %flags316, align 4, !dbg !5823
  %121 = load i32, ptr %flags316, align 4, !dbg !5824
  %and319 = and i32 %121, 1, !dbg !5824
  %cmp320 = icmp eq i32 %and319, 0, !dbg !5824
  br i1 %cmp320, label %if.then322, label %if.end344, !dbg !5823

if.then322:                                       ; preds = %do.body315
  br label %do.body323, !dbg !5824

do.body323:                                       ; preds = %if.then322
  %122 = load ptr, ptr %sdlz, align 8, !dbg !5826
  %dlzimp324 = getelementptr inbounds %struct.dns_sdlz_db, ptr %122, i32 0, i32 2, !dbg !5826
  %123 = load ptr, ptr %dlzimp324, align 8, !dbg !5826
  %driverlock325 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %123, i32 0, i32 4, !dbg !5826
  %call326 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock325) #11, !dbg !5826
  %cmp327 = icmp eq i32 %call326, 0, !dbg !5826
  %124 = zext i1 %cmp327 to i64, !dbg !5826
  %cond329 = select i1 %cmp327, i32 0, i32 34, !dbg !5826
  %cmp330 = icmp eq i32 %cond329, 0, !dbg !5826
  %lnot332 = xor i1 %cmp330, true, !dbg !5826
  %lnot334 = xor i1 %lnot332, true, !dbg !5826
  %lnot.ext335 = zext i1 %lnot334 to i32, !dbg !5826
  %conv336 = sext i32 %lnot.ext335 to i64, !dbg !5826
  %expval337 = call i64 @llvm.expect.i64(i64 %conv336, i64 1), !dbg !5826
  %tobool338 = icmp ne i64 %expval337, 0, !dbg !5826
  br i1 %tobool338, label %lor.end340, label %lor.rhs339, !dbg !5826

lor.rhs339:                                       ; preds = %do.body323
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 637, ptr noundef @.str.62) #12, !dbg !5826
  unreachable, !dbg !5826

125:                                              ; No predecessors!
  br label %lor.end340, !dbg !5826

lor.end340:                                       ; preds = %125, %do.body323
  %126 = phi i1 [ true, %do.body323 ], [ false, %125 ]
  %lor.ext341 = zext i1 %126 to i32, !dbg !5826
  br label %do.cond342, !dbg !5826

do.cond342:                                       ; preds = %lor.end340
  br label %do.end343, !dbg !5826

do.end343:                                        ; preds = %do.cond342
  br label %if.end344, !dbg !5826

if.end344:                                        ; preds = %do.end343, %do.body315
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags316) #11, !dbg !5822
  br label %do.cond345, !dbg !5823

do.cond345:                                       ; preds = %if.end344
  br label %do.end346, !dbg !5823

do.end346:                                        ; preds = %do.cond345
  %127 = load i32, ptr %result, align 4, !dbg !5828
  store i32 %127, ptr %retval, align 4, !dbg !5829
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup413, !dbg !5829

if.end347:                                        ; preds = %do.end310
  br label %do.body348, !dbg !5830

do.body348:                                       ; preds = %if.end347
  call void @llvm.lifetime.start.p0(i64 8, ptr %_cp349) #11, !dbg !5831
  tail call void @llvm.dbg.declare(metadata ptr %_cp349, metadata !5570, metadata !DIExpression()), !dbg !5831
  call void @llvm.lifetime.start.p0(i64 1, ptr %_val2350) #11, !dbg !5831
  tail call void @llvm.dbg.declare(metadata ptr %_val2350, metadata !5572, metadata !DIExpression()), !dbg !5831
  store i8 0, ptr %_val2350, align 1, !dbg !5831
  %autore351 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 8, !dbg !5832
  %128 = load i8, ptr %autore351, align 8, !dbg !5832, !range !2769, !noundef !2770
  %tobool352 = trunc i8 %128 to i1, !dbg !5832
  %lnot353 = xor i1 %tobool352, true, !dbg !5832
  %lnot355 = xor i1 %lnot353, true, !dbg !5832
  %lnot.ext356 = zext i1 %lnot355 to i32, !dbg !5832
  %conv357 = sext i32 %lnot.ext356 to i64, !dbg !5832
  %expval358 = call i64 @llvm.expect.i64(i64 %conv357, i64 0), !dbg !5832
  %tobool359 = icmp ne i64 %expval358, 0, !dbg !5832
  br i1 %tobool359, label %if.then360, label %if.end375, !dbg !5831

if.then360:                                       ; preds = %do.body348
  call void @llvm.lifetime.start.p0(i64 8, ptr %_tmp361) #11, !dbg !5833
  tail call void @llvm.dbg.declare(metadata ptr %_tmp361, metadata !5573, metadata !DIExpression()), !dbg !5833
  store ptr %b, ptr %_tmp361, align 8, !dbg !5833
  %call362 = call i32 @isc_buffer_reserve(ptr noundef %_tmp361, i32 noundef 1), !dbg !5833
  %cmp363 = icmp eq i32 %call362, 0, !dbg !5833
  %lnot365 = xor i1 %cmp363, true, !dbg !5833
  %lnot367 = xor i1 %lnot365, true, !dbg !5833
  %lnot.ext368 = zext i1 %lnot367 to i32, !dbg !5833
  %conv369 = sext i32 %lnot.ext368 to i64, !dbg !5833
  %expval370 = call i64 @llvm.expect.i64(i64 %conv369, i64 1), !dbg !5833
  %tobool371 = icmp ne i64 %expval370, 0, !dbg !5833
  br i1 %tobool371, label %lor.end373, label %lor.rhs372, !dbg !5833

lor.rhs372:                                       ; preds = %if.then360
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 640, i32 noundef 0, ptr noundef @.str.48) #12, !dbg !5833
  unreachable, !dbg !5833

129:                                              ; No predecessors!
  br label %lor.end373, !dbg !5833

lor.end373:                                       ; preds = %129, %if.then360
  %130 = phi i1 [ true, %if.then360 ], [ false, %129 ]
  %lor.ext374 = zext i1 %130 to i32, !dbg !5833
  call void @llvm.lifetime.end.p0(i64 8, ptr %_tmp361) #11, !dbg !5832
  br label %if.end375, !dbg !5833

if.end375:                                        ; preds = %lor.end373, %do.body348
  %length376 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 2, !dbg !5831
  %131 = load i32, ptr %length376, align 8, !dbg !5831
  %used377 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !5831
  %132 = load i32, ptr %used377, align 4, !dbg !5831
  %sub378 = sub i32 %131, %132, !dbg !5831
  %cmp379 = icmp uge i32 %sub378, 1, !dbg !5831
  %lnot381 = xor i1 %cmp379, true, !dbg !5831
  %lnot383 = xor i1 %lnot381, true, !dbg !5831
  %lnot.ext384 = zext i1 %lnot383 to i32, !dbg !5831
  %conv385 = sext i32 %lnot.ext384 to i64, !dbg !5831
  %expval386 = call i64 @llvm.expect.i64(i64 %conv385, i64 1), !dbg !5831
  %tobool387 = icmp ne i64 %expval386, 0, !dbg !5831
  br i1 %tobool387, label %lor.end389, label %lor.rhs388, !dbg !5831

lor.rhs388:                                       ; preds = %if.end375
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 640, i32 noundef 0, ptr noundef @.str.49) #12, !dbg !5831
  unreachable, !dbg !5831

133:                                              ; No predecessors!
  br label %lor.end389, !dbg !5831

lor.end389:                                       ; preds = %133, %if.end375
  %134 = phi i1 [ true, %if.end375 ], [ false, %133 ]
  %lor.ext390 = zext i1 %134 to i32, !dbg !5831
  %base391 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 1, !dbg !5831
  %135 = load ptr, ptr %base391, align 8, !dbg !5831
  %used392 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !5831
  %136 = load i32, ptr %used392, align 4, !dbg !5831
  %idx.ext393 = zext i32 %136 to i64, !dbg !5831
  %add.ptr394 = getelementptr inbounds i8, ptr %135, i64 %idx.ext393, !dbg !5831
  store ptr %add.ptr394, ptr %_cp349, align 8, !dbg !5831
  %used395 = getelementptr inbounds %struct.isc_buffer, ptr %b, i32 0, i32 3, !dbg !5831
  %137 = load i32, ptr %used395, align 4, !dbg !5831
  %inc396 = add i32 %137, 1, !dbg !5831
  store i32 %inc396, ptr %used395, align 4, !dbg !5831
  %138 = load i8, ptr %_val2350, align 1, !dbg !5831
  %139 = load ptr, ptr %_cp349, align 8, !dbg !5831
  %arrayidx397 = getelementptr inbounds i8, ptr %139, i64 0, !dbg !5831
  store i8 %138, ptr %arrayidx397, align 1, !dbg !5831
  call void @llvm.lifetime.end.p0(i64 1, ptr %_val2350) #11, !dbg !5830
  call void @llvm.lifetime.end.p0(i64 8, ptr %_cp349) #11, !dbg !5830
  br label %do.cond398, !dbg !5831

do.cond398:                                       ; preds = %lor.end389
  br label %do.end399, !dbg !5831

do.end399:                                        ; preds = %do.cond398
  %140 = load ptr, ptr %sdlz, align 8, !dbg !5834
  %dlzimp400 = getelementptr inbounds %struct.dns_sdlz_db, ptr %140, i32 0, i32 2, !dbg !5835
  %141 = load ptr, ptr %dlzimp400, align 8, !dbg !5835
  %methods401 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %141, i32 0, i32 0, !dbg !5836
  %142 = load ptr, ptr %methods401, align 8, !dbg !5836
  %lookup402 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %142, i32 0, i32 3, !dbg !5837
  %143 = load ptr, ptr %lookup402, align 8, !dbg !5837
  %arraydecay403 = getelementptr inbounds [1024 x i8], ptr %zonestr, i64 0, i64 0, !dbg !5838
  %arraydecay404 = getelementptr inbounds [1024 x i8], ptr %wildstr, i64 0, i64 0, !dbg !5839
  %144 = load ptr, ptr %sdlz, align 8, !dbg !5840
  %dlzimp405 = getelementptr inbounds %struct.dns_sdlz_db, ptr %144, i32 0, i32 2, !dbg !5841
  %145 = load ptr, ptr %dlzimp405, align 8, !dbg !5841
  %driverarg406 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %145, i32 0, i32 2, !dbg !5842
  %146 = load ptr, ptr %driverarg406, align 8, !dbg !5842
  %147 = load ptr, ptr %sdlz, align 8, !dbg !5843
  %dbdata407 = getelementptr inbounds %struct.dns_sdlz_db, ptr %147, i32 0, i32 1, !dbg !5844
  %148 = load ptr, ptr %dbdata407, align 8, !dbg !5844
  %149 = load ptr, ptr %node, align 8, !dbg !5845
  %150 = load ptr, ptr %methods.addr, align 8, !dbg !5846
  %151 = load ptr, ptr %clientinfo.addr, align 8, !dbg !5847
  %call408 = call i32 %143(ptr noundef %arraydecay403, ptr noundef %arraydecay404, ptr noundef %146, ptr noundef %148, ptr noundef %149, ptr noundef %150, ptr noundef %151), !dbg !5834
  store i32 %call408, ptr %result, align 4, !dbg !5848
  %152 = load i32, ptr %result, align 4, !dbg !5849
  %cmp409 = icmp eq i32 %152, 0, !dbg !5851
  br i1 %cmp409, label %if.then411, label %if.end412, !dbg !5852

if.then411:                                       ; preds = %do.end399
  store i32 18, ptr %cleanup.dest.slot, align 4
  br label %cleanup413, !dbg !5853

if.end412:                                        ; preds = %do.end399
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5854
  br label %cleanup413, !dbg !5854

cleanup413:                                       ; preds = %if.end412, %if.then411, %do.end346, %cleanup288
  call void @llvm.lifetime.end.p0(i64 8, ptr %wild) #11, !dbg !5854
  call void @llvm.lifetime.end.p0(i64 528, ptr %fixed) #11, !dbg !5854
  call void @llvm.lifetime.end.p0(i64 1024, ptr %wildstr) #11, !dbg !5854
  %cleanup.dest416 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest416, label %cleanup419 [
    i32 0, label %cleanup.cont417
    i32 18, label %for.end
  ]

cleanup.cont417:                                  ; preds = %cleanup413
  br label %for.inc, !dbg !5855

for.inc:                                          ; preds = %cleanup.cont417
  %153 = load i32, ptr %i, align 4, !dbg !5856
  %inc418 = add i32 %153, 1, !dbg !5856
  store i32 %inc418, ptr %i, align 4, !dbg !5856
  br label %for.cond, !dbg !5857, !llvm.loop !5858

for.end:                                          ; preds = %cleanup413, %for.cond
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5860
  br label %cleanup419, !dbg !5860

cleanup419:                                       ; preds = %for.end, %cleanup413
  call void @llvm.lifetime.end.p0(i64 4, ptr %nlabels) #11, !dbg !5860
  call void @llvm.lifetime.end.p0(i64 4, ptr %dlabels) #11, !dbg !5860
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #11, !dbg !5860
  %cleanup.dest422 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest422, label %cleanup589 [
    i32 0, label %cleanup.cont423
  ]

cleanup.cont423:                                  ; preds = %cleanup419
  br label %if.end424, !dbg !5861

if.end424:                                        ; preds = %cleanup.cont423, %land.lhs.true231, %land.lhs.true, %do.end221
  br label %do.body425, !dbg !5862

do.body425:                                       ; preds = %if.end424
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags426) #11, !dbg !5863
  tail call void @llvm.dbg.declare(metadata ptr %flags426, metadata !5576, metadata !DIExpression()), !dbg !5863
  %154 = load ptr, ptr %sdlz, align 8, !dbg !5863
  %dlzimp427 = getelementptr inbounds %struct.dns_sdlz_db, ptr %154, i32 0, i32 2, !dbg !5863
  %155 = load ptr, ptr %dlzimp427, align 8, !dbg !5863
  %flags428 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %155, i32 0, i32 3, !dbg !5863
  %156 = load i32, ptr %flags428, align 8, !dbg !5863
  store i32 %156, ptr %flags426, align 4, !dbg !5863
  %157 = load i32, ptr %flags426, align 4, !dbg !5864
  %and429 = and i32 %157, 1, !dbg !5864
  %cmp430 = icmp eq i32 %and429, 0, !dbg !5864
  br i1 %cmp430, label %if.then432, label %if.end454, !dbg !5863

if.then432:                                       ; preds = %do.body425
  br label %do.body433, !dbg !5864

do.body433:                                       ; preds = %if.then432
  %158 = load ptr, ptr %sdlz, align 8, !dbg !5866
  %dlzimp434 = getelementptr inbounds %struct.dns_sdlz_db, ptr %158, i32 0, i32 2, !dbg !5866
  %159 = load ptr, ptr %dlzimp434, align 8, !dbg !5866
  %driverlock435 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %159, i32 0, i32 4, !dbg !5866
  %call436 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock435) #11, !dbg !5866
  %cmp437 = icmp eq i32 %call436, 0, !dbg !5866
  %160 = zext i1 %cmp437 to i64, !dbg !5866
  %cond439 = select i1 %cmp437, i32 0, i32 34, !dbg !5866
  %cmp440 = icmp eq i32 %cond439, 0, !dbg !5866
  %lnot442 = xor i1 %cmp440, true, !dbg !5866
  %lnot444 = xor i1 %lnot442, true, !dbg !5866
  %lnot.ext445 = zext i1 %lnot444 to i32, !dbg !5866
  %conv446 = sext i32 %lnot.ext445 to i64, !dbg !5866
  %expval447 = call i64 @llvm.expect.i64(i64 %conv446, i64 1), !dbg !5866
  %tobool448 = icmp ne i64 %expval447, 0, !dbg !5866
  br i1 %tobool448, label %lor.end450, label %lor.rhs449, !dbg !5866

lor.rhs449:                                       ; preds = %do.body433
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 651, ptr noundef @.str.62) #12, !dbg !5866
  unreachable, !dbg !5866

161:                                              ; No predecessors!
  br label %lor.end450, !dbg !5866

lor.end450:                                       ; preds = %161, %do.body433
  %162 = phi i1 [ true, %do.body433 ], [ false, %161 ]
  %lor.ext451 = zext i1 %162 to i32, !dbg !5866
  br label %do.cond452, !dbg !5866

do.cond452:                                       ; preds = %lor.end450
  br label %do.end453, !dbg !5866

do.end453:                                        ; preds = %do.cond452
  br label %if.end454, !dbg !5866

if.end454:                                        ; preds = %do.end453, %do.body425
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags426) #11, !dbg !5862
  br label %do.cond455, !dbg !5863

do.cond455:                                       ; preds = %if.end454
  br label %do.end456, !dbg !5863

do.end456:                                        ; preds = %do.cond455
  %163 = load i32, ptr %result, align 4, !dbg !5868
  %cmp457 = icmp eq i32 %163, 23, !dbg !5870
  br i1 %cmp457, label %land.lhs.true459, label %if.end465, !dbg !5871

land.lhs.true459:                                 ; preds = %do.end456
  %164 = load i8, ptr %isorigin, align 1, !dbg !5872, !range !2769, !noundef !2770
  %tobool460 = trunc i8 %164 to i1, !dbg !5872
  br i1 %tobool460, label %if.then464, label %lor.lhs.false, !dbg !5873

lor.lhs.false:                                    ; preds = %land.lhs.true459
  %165 = load i8, ptr %create.addr, align 1, !dbg !5874, !range !2769, !noundef !2770
  %tobool462 = trunc i8 %165 to i1, !dbg !5874
  br i1 %tobool462, label %if.then464, label %if.end465, !dbg !5875

if.then464:                                       ; preds = %lor.lhs.false, %land.lhs.true459
  store i32 0, ptr %result, align 4, !dbg !5876
  br label %if.end465, !dbg !5877

if.end465:                                        ; preds = %if.then464, %lor.lhs.false, %do.end456
  %166 = load i32, ptr %result, align 4, !dbg !5878
  %cmp466 = icmp ne i32 %166, 0, !dbg !5880
  br i1 %cmp466, label %if.then468, label %if.end469, !dbg !5881

if.then468:                                       ; preds = %if.end465
  %167 = load ptr, ptr %node, align 8, !dbg !5882
  call void @destroynode(ptr noundef %167), !dbg !5884
  %168 = load i32, ptr %result, align 4, !dbg !5885
  store i32 %168, ptr %retval, align 4, !dbg !5886
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup589, !dbg !5886

if.end469:                                        ; preds = %if.end465
  %169 = load i8, ptr %isorigin, align 1, !dbg !5887, !range !2769, !noundef !2770
  %tobool470 = trunc i8 %169 to i1, !dbg !5887
  br i1 %tobool470, label %land.lhs.true472, label %if.end558, !dbg !5888

land.lhs.true472:                                 ; preds = %if.end469
  %170 = load ptr, ptr %sdlz, align 8, !dbg !5889
  %dlzimp473 = getelementptr inbounds %struct.dns_sdlz_db, ptr %170, i32 0, i32 2, !dbg !5890
  %171 = load ptr, ptr %dlzimp473, align 8, !dbg !5890
  %methods474 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %171, i32 0, i32 0, !dbg !5891
  %172 = load ptr, ptr %methods474, align 8, !dbg !5891
  %authority475 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %172, i32 0, i32 4, !dbg !5892
  %173 = load ptr, ptr %authority475, align 8, !dbg !5892
  %cmp476 = icmp ne ptr %173, null, !dbg !5893
  br i1 %cmp476, label %if.then478, label %if.end558, !dbg !5894

if.then478:                                       ; preds = %land.lhs.true472
  br label %do.body479, !dbg !5895

do.body479:                                       ; preds = %if.then478
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags480) #11, !dbg !5896
  tail call void @llvm.dbg.declare(metadata ptr %flags480, metadata !5578, metadata !DIExpression()), !dbg !5896
  %174 = load ptr, ptr %sdlz, align 8, !dbg !5896
  %dlzimp481 = getelementptr inbounds %struct.dns_sdlz_db, ptr %174, i32 0, i32 2, !dbg !5896
  %175 = load ptr, ptr %dlzimp481, align 8, !dbg !5896
  %flags482 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %175, i32 0, i32 3, !dbg !5896
  %176 = load i32, ptr %flags482, align 8, !dbg !5896
  store i32 %176, ptr %flags480, align 4, !dbg !5896
  %177 = load i32, ptr %flags480, align 4, !dbg !5897
  %and483 = and i32 %177, 1, !dbg !5897
  %cmp484 = icmp eq i32 %and483, 0, !dbg !5897
  br i1 %cmp484, label %if.then486, label %if.end508, !dbg !5896

if.then486:                                       ; preds = %do.body479
  br label %do.body487, !dbg !5897

do.body487:                                       ; preds = %if.then486
  %178 = load ptr, ptr %sdlz, align 8, !dbg !5899
  %dlzimp488 = getelementptr inbounds %struct.dns_sdlz_db, ptr %178, i32 0, i32 2, !dbg !5899
  %179 = load ptr, ptr %dlzimp488, align 8, !dbg !5899
  %driverlock489 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %179, i32 0, i32 4, !dbg !5899
  %call490 = call i32 @pthread_mutex_lock(ptr noundef %driverlock489) #11, !dbg !5899
  %cmp491 = icmp eq i32 %call490, 0, !dbg !5899
  %180 = zext i1 %cmp491 to i64, !dbg !5899
  %cond493 = select i1 %cmp491, i32 0, i32 34, !dbg !5899
  %cmp494 = icmp eq i32 %cond493, 0, !dbg !5899
  %lnot496 = xor i1 %cmp494, true, !dbg !5899
  %lnot498 = xor i1 %lnot496, true, !dbg !5899
  %lnot.ext499 = zext i1 %lnot498 to i32, !dbg !5899
  %conv500 = sext i32 %lnot.ext499 to i64, !dbg !5899
  %expval501 = call i64 @llvm.expect.i64(i64 %conv500, i64 1), !dbg !5899
  %tobool502 = icmp ne i64 %expval501, 0, !dbg !5899
  br i1 %tobool502, label %lor.end504, label %lor.rhs503, !dbg !5899

lor.rhs503:                                       ; preds = %do.body487
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 662, ptr noundef @.str.61) #12, !dbg !5899
  unreachable, !dbg !5899

181:                                              ; No predecessors!
  br label %lor.end504, !dbg !5899

lor.end504:                                       ; preds = %181, %do.body487
  %182 = phi i1 [ true, %do.body487 ], [ false, %181 ]
  %lor.ext505 = zext i1 %182 to i32, !dbg !5899
  br label %do.cond506, !dbg !5899

do.cond506:                                       ; preds = %lor.end504
  br label %do.end507, !dbg !5899

do.end507:                                        ; preds = %do.cond506
  br label %if.end508, !dbg !5899

if.end508:                                        ; preds = %do.end507, %do.body479
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags480) #11, !dbg !5895
  br label %do.cond509, !dbg !5896

do.cond509:                                       ; preds = %if.end508
  br label %do.end510, !dbg !5896

do.end510:                                        ; preds = %do.cond509
  %183 = load ptr, ptr %sdlz, align 8, !dbg !5901
  %dlzimp511 = getelementptr inbounds %struct.dns_sdlz_db, ptr %183, i32 0, i32 2, !dbg !5902
  %184 = load ptr, ptr %dlzimp511, align 8, !dbg !5902
  %methods512 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %184, i32 0, i32 0, !dbg !5903
  %185 = load ptr, ptr %methods512, align 8, !dbg !5903
  %authority513 = getelementptr inbounds %struct.dns_sdlzmethods, ptr %185, i32 0, i32 4, !dbg !5904
  %186 = load ptr, ptr %authority513, align 8, !dbg !5904
  store ptr %186, ptr %authority, align 8, !dbg !5905
  %187 = load ptr, ptr %authority, align 8, !dbg !5906
  %arraydecay514 = getelementptr inbounds [1024 x i8], ptr %zonestr, i64 0, i64 0, !dbg !5907
  %188 = load ptr, ptr %sdlz, align 8, !dbg !5908
  %dlzimp515 = getelementptr inbounds %struct.dns_sdlz_db, ptr %188, i32 0, i32 2, !dbg !5909
  %189 = load ptr, ptr %dlzimp515, align 8, !dbg !5909
  %driverarg516 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %189, i32 0, i32 2, !dbg !5910
  %190 = load ptr, ptr %driverarg516, align 8, !dbg !5910
  %191 = load ptr, ptr %sdlz, align 8, !dbg !5911
  %dbdata517 = getelementptr inbounds %struct.dns_sdlz_db, ptr %191, i32 0, i32 1, !dbg !5912
  %192 = load ptr, ptr %dbdata517, align 8, !dbg !5912
  %193 = load ptr, ptr %node, align 8, !dbg !5913
  %call518 = call i32 %187(ptr noundef %arraydecay514, ptr noundef %190, ptr noundef %192, ptr noundef %193), !dbg !5914
  store i32 %call518, ptr %result, align 4, !dbg !5915
  br label %do.body519, !dbg !5916

do.body519:                                       ; preds = %do.end510
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags520) #11, !dbg !5917
  tail call void @llvm.dbg.declare(metadata ptr %flags520, metadata !5582, metadata !DIExpression()), !dbg !5917
  %194 = load ptr, ptr %sdlz, align 8, !dbg !5917
  %dlzimp521 = getelementptr inbounds %struct.dns_sdlz_db, ptr %194, i32 0, i32 2, !dbg !5917
  %195 = load ptr, ptr %dlzimp521, align 8, !dbg !5917
  %flags522 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %195, i32 0, i32 3, !dbg !5917
  %196 = load i32, ptr %flags522, align 8, !dbg !5917
  store i32 %196, ptr %flags520, align 4, !dbg !5917
  %197 = load i32, ptr %flags520, align 4, !dbg !5918
  %and523 = and i32 %197, 1, !dbg !5918
  %cmp524 = icmp eq i32 %and523, 0, !dbg !5918
  br i1 %cmp524, label %if.then526, label %if.end548, !dbg !5917

if.then526:                                       ; preds = %do.body519
  br label %do.body527, !dbg !5918

do.body527:                                       ; preds = %if.then526
  %198 = load ptr, ptr %sdlz, align 8, !dbg !5920
  %dlzimp528 = getelementptr inbounds %struct.dns_sdlz_db, ptr %198, i32 0, i32 2, !dbg !5920
  %199 = load ptr, ptr %dlzimp528, align 8, !dbg !5920
  %driverlock529 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %199, i32 0, i32 4, !dbg !5920
  %call530 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock529) #11, !dbg !5920
  %cmp531 = icmp eq i32 %call530, 0, !dbg !5920
  %200 = zext i1 %cmp531 to i64, !dbg !5920
  %cond533 = select i1 %cmp531, i32 0, i32 34, !dbg !5920
  %cmp534 = icmp eq i32 %cond533, 0, !dbg !5920
  %lnot536 = xor i1 %cmp534, true, !dbg !5920
  %lnot538 = xor i1 %lnot536, true, !dbg !5920
  %lnot.ext539 = zext i1 %lnot538 to i32, !dbg !5920
  %conv540 = sext i32 %lnot.ext539 to i64, !dbg !5920
  %expval541 = call i64 @llvm.expect.i64(i64 %conv540, i64 1), !dbg !5920
  %tobool542 = icmp ne i64 %expval541, 0, !dbg !5920
  br i1 %tobool542, label %lor.end544, label %lor.rhs543, !dbg !5920

lor.rhs543:                                       ; preds = %do.body527
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 666, ptr noundef @.str.62) #12, !dbg !5920
  unreachable, !dbg !5920

201:                                              ; No predecessors!
  br label %lor.end544, !dbg !5920

lor.end544:                                       ; preds = %201, %do.body527
  %202 = phi i1 [ true, %do.body527 ], [ false, %201 ]
  %lor.ext545 = zext i1 %202 to i32, !dbg !5920
  br label %do.cond546, !dbg !5920

do.cond546:                                       ; preds = %lor.end544
  br label %do.end547, !dbg !5920

do.end547:                                        ; preds = %do.cond546
  br label %if.end548, !dbg !5920

if.end548:                                        ; preds = %do.end547, %do.body519
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags520) #11, !dbg !5916
  br label %do.cond549, !dbg !5917

do.cond549:                                       ; preds = %if.end548
  br label %do.end550, !dbg !5917

do.end550:                                        ; preds = %do.cond549
  %203 = load i32, ptr %result, align 4, !dbg !5922
  %cmp551 = icmp ne i32 %203, 0, !dbg !5924
  br i1 %cmp551, label %land.lhs.true553, label %if.end557, !dbg !5925

land.lhs.true553:                                 ; preds = %do.end550
  %204 = load i32, ptr %result, align 4, !dbg !5926
  %cmp554 = icmp ne i32 %204, 27, !dbg !5927
  br i1 %cmp554, label %if.then556, label %if.end557, !dbg !5928

if.then556:                                       ; preds = %land.lhs.true553
  %205 = load ptr, ptr %node, align 8, !dbg !5929
  call void @destroynode(ptr noundef %205), !dbg !5931
  %206 = load i32, ptr %result, align 4, !dbg !5932
  store i32 %206, ptr %retval, align 4, !dbg !5933
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup589, !dbg !5933

if.end557:                                        ; preds = %land.lhs.true553, %do.end550
  br label %if.end558, !dbg !5934

if.end558:                                        ; preds = %if.end557, %land.lhs.true472, %if.end469
  %207 = load ptr, ptr %node, align 8, !dbg !5935
  %name559 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %207, i32 0, i32 4, !dbg !5937
  %208 = load ptr, ptr %name559, align 8, !dbg !5937
  %cmp560 = icmp eq ptr %208, null, !dbg !5938
  br i1 %cmp560, label %if.then562, label %if.end588, !dbg !5939

if.then562:                                       ; preds = %if.end558
  %209 = load ptr, ptr %sdlz, align 8, !dbg !5940
  %common563 = getelementptr inbounds %struct.dns_sdlz_db, ptr %209, i32 0, i32 0, !dbg !5940
  %mctx564 = getelementptr inbounds %struct.dns_db, ptr %common563, i32 0, i32 6, !dbg !5940
  %210 = load ptr, ptr %mctx564, align 8, !dbg !5940
  %call565 = call ptr @isc__mem_get(ptr noundef %210, i64 noundef 80, ptr noundef @.str, i32 noundef 677), !dbg !5940
  %211 = load ptr, ptr %node, align 8, !dbg !5942
  %name566 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %211, i32 0, i32 4, !dbg !5943
  store ptr %call565, ptr %name566, align 8, !dbg !5944
  %212 = load ptr, ptr %node, align 8, !dbg !5945
  %name567 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %212, i32 0, i32 4, !dbg !5947
  %213 = load ptr, ptr %name567, align 8, !dbg !5947
  %cmp568 = icmp eq ptr %213, null, !dbg !5948
  br i1 %cmp568, label %if.then570, label %if.end571, !dbg !5949

if.then570:                                       ; preds = %if.then562
  %214 = load ptr, ptr %node, align 8, !dbg !5950
  call void @destroynode(ptr noundef %214), !dbg !5952
  store i32 1, ptr %retval, align 4, !dbg !5953
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup589, !dbg !5953

if.end571:                                        ; preds = %if.then562
  %215 = load ptr, ptr %node, align 8, !dbg !5954
  %name572 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %215, i32 0, i32 4, !dbg !5955
  %216 = load ptr, ptr %name572, align 8, !dbg !5955
  call void @dns_name_init(ptr noundef %216, ptr noundef null), !dbg !5956
  %217 = load ptr, ptr %name.addr, align 8, !dbg !5957
  %218 = load ptr, ptr %sdlz, align 8, !dbg !5958
  %common573 = getelementptr inbounds %struct.dns_sdlz_db, ptr %218, i32 0, i32 0, !dbg !5959
  %mctx574 = getelementptr inbounds %struct.dns_db, ptr %common573, i32 0, i32 6, !dbg !5960
  %219 = load ptr, ptr %mctx574, align 8, !dbg !5960
  %220 = load ptr, ptr %node, align 8, !dbg !5961
  %name575 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %220, i32 0, i32 4, !dbg !5962
  %221 = load ptr, ptr %name575, align 8, !dbg !5962
  %call576 = call i32 @dns_name_dup(ptr noundef %217, ptr noundef %219, ptr noundef %221), !dbg !5963
  store i32 %call576, ptr %result, align 4, !dbg !5964
  %222 = load i32, ptr %result, align 4, !dbg !5965
  %cmp577 = icmp ne i32 %222, 0, !dbg !5967
  br i1 %cmp577, label %if.then579, label %if.end587, !dbg !5968

if.then579:                                       ; preds = %if.end571
  br label %do.body580, !dbg !5969

do.body580:                                       ; preds = %if.then579
  %223 = load ptr, ptr %sdlz, align 8, !dbg !5971
  %common581 = getelementptr inbounds %struct.dns_sdlz_db, ptr %223, i32 0, i32 0, !dbg !5971
  %mctx582 = getelementptr inbounds %struct.dns_db, ptr %common581, i32 0, i32 6, !dbg !5971
  %224 = load ptr, ptr %mctx582, align 8, !dbg !5971
  %225 = load ptr, ptr %node, align 8, !dbg !5971
  %name583 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %225, i32 0, i32 4, !dbg !5971
  %226 = load ptr, ptr %name583, align 8, !dbg !5971
  call void @isc__mem_put(ptr noundef %224, ptr noundef %226, i64 noundef 80, ptr noundef @.str, i32 noundef 686), !dbg !5971
  %227 = load ptr, ptr %node, align 8, !dbg !5971
  %name584 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %227, i32 0, i32 4, !dbg !5971
  store ptr null, ptr %name584, align 8, !dbg !5971
  br label %do.cond585, !dbg !5971

do.cond585:                                       ; preds = %do.body580
  br label %do.end586, !dbg !5971

do.end586:                                        ; preds = %do.cond585
  %228 = load ptr, ptr %node, align 8, !dbg !5973
  call void @destroynode(ptr noundef %228), !dbg !5974
  %229 = load i32, ptr %result, align 4, !dbg !5975
  store i32 %229, ptr %retval, align 4, !dbg !5976
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup589, !dbg !5976

if.end587:                                        ; preds = %if.end571
  br label %if.end588, !dbg !5977

if.end588:                                        ; preds = %if.end587, %if.end558
  %230 = load ptr, ptr %node, align 8, !dbg !5978
  %231 = load ptr, ptr %nodep.addr, align 8, !dbg !5979
  store ptr %230, ptr %231, align 8, !dbg !5980
  store i32 0, ptr %retval, align 4, !dbg !5981
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup589, !dbg !5981

cleanup589:                                       ; preds = %if.end588, %do.end586, %if.then570, %if.then556, %if.then468, %cleanup419, %if.then184, %if.then127, %if.then55, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %authority) #11, !dbg !5982
  call void @llvm.lifetime.end.p0(i64 1, ptr %isorigin) #11, !dbg !5982
  call void @llvm.lifetime.end.p0(i64 1024, ptr %zonestr) #11, !dbg !5982
  call void @llvm.lifetime.end.p0(i64 64, ptr %b2) #11, !dbg !5982
  call void @llvm.lifetime.end.p0(i64 1024, ptr %namestr) #11, !dbg !5982
  call void @llvm.lifetime.end.p0(i64 64, ptr %b) #11, !dbg !5982
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !5982
  call void @llvm.lifetime.end.p0(i64 8, ptr %node) #11, !dbg !5982
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !5982
  %232 = load i32, ptr %retval, align 4, !dbg !5982
  ret i32 %232, !dbg !5982
}

; Function Attrs: null_pointer_is_valid
declare !dbg !5983 void @dns_fixedname_init(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !5986 ptr @dns_fixedname_name(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !5987 i32 @dns_name_concatenate(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !5990 void @dns_db_attach(ptr noundef, ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @dbiterator_destroy(ptr noundef %iteratorp) #0 !dbg !5991 {
entry:
  %iteratorp.addr = alloca ptr, align 8
  %sdlziter = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %node = alloca ptr, align 8
  store ptr %iteratorp, ptr %iteratorp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iteratorp.addr, metadata !5993, metadata !DIExpression()), !dbg !5998
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlziter) #11, !dbg !5999
  tail call void @llvm.dbg.declare(metadata ptr %sdlziter, metadata !5994, metadata !DIExpression()), !dbg !6000
  %0 = load ptr, ptr %iteratorp.addr, align 8, !dbg !6001
  %1 = load ptr, ptr %0, align 8, !dbg !6002
  store ptr %1, ptr %sdlziter, align 8, !dbg !6000
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !6003
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !5995, metadata !DIExpression()), !dbg !6004
  %2 = load ptr, ptr %sdlziter, align 8, !dbg !6005
  %common = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %2, i32 0, i32 0, !dbg !6006
  %db = getelementptr inbounds %struct.dns_dbiterator, ptr %common, i32 0, i32 2, !dbg !6007
  %3 = load ptr, ptr %db, align 8, !dbg !6007
  store ptr %3, ptr %sdlz, align 8, !dbg !6004
  br label %while.cond, !dbg !6008

while.cond:                                       ; preds = %do.end82, %entry
  %4 = load ptr, ptr %sdlziter, align 8, !dbg !6009
  %nodelist = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %4, i32 0, i32 1, !dbg !6009
  %head = getelementptr inbounds %struct.anon.16, ptr %nodelist, i32 0, i32 0, !dbg !6009
  %5 = load ptr, ptr %head, align 8, !dbg !6009
  %cmp = icmp eq ptr %5, null, !dbg !6009
  %lnot = xor i1 %cmp, true, !dbg !6010
  br i1 %lnot, label %while.body, label %while.end, !dbg !6008

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %node) #11, !dbg !6011
  tail call void @llvm.dbg.declare(metadata ptr %node, metadata !5996, metadata !DIExpression()), !dbg !6012
  %6 = load ptr, ptr %sdlziter, align 8, !dbg !6013
  %nodelist1 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %6, i32 0, i32 1, !dbg !6013
  %head2 = getelementptr inbounds %struct.anon.16, ptr %nodelist1, i32 0, i32 0, !dbg !6013
  %7 = load ptr, ptr %head2, align 8, !dbg !6013
  store ptr %7, ptr %node, align 8, !dbg !6014
  br label %do.body, !dbg !6015

do.body:                                          ; preds = %while.body
  br label %do.body3, !dbg !6016

do.body3:                                         ; preds = %do.body
  %8 = load ptr, ptr %node, align 8, !dbg !6018
  %link = getelementptr inbounds %struct.dns_sdlzlookup, ptr %8, i32 0, i32 5, !dbg !6018
  %next = getelementptr inbounds %struct.anon.9, ptr %link, i32 0, i32 1, !dbg !6018
  %9 = load ptr, ptr %next, align 8, !dbg !6018
  %cmp4 = icmp ne ptr %9, null, !dbg !6018
  br i1 %cmp4, label %if.then, label %if.else, !dbg !6021

if.then:                                          ; preds = %do.body3
  %10 = load ptr, ptr %node, align 8, !dbg !6018
  %link5 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %10, i32 0, i32 5, !dbg !6018
  %prev = getelementptr inbounds %struct.anon.9, ptr %link5, i32 0, i32 0, !dbg !6018
  %11 = load ptr, ptr %prev, align 8, !dbg !6018
  %12 = load ptr, ptr %node, align 8, !dbg !6018
  %link6 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %12, i32 0, i32 5, !dbg !6018
  %next7 = getelementptr inbounds %struct.anon.9, ptr %link6, i32 0, i32 1, !dbg !6018
  %13 = load ptr, ptr %next7, align 8, !dbg !6018
  %link8 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %13, i32 0, i32 5, !dbg !6018
  %prev9 = getelementptr inbounds %struct.anon.9, ptr %link8, i32 0, i32 0, !dbg !6018
  store ptr %11, ptr %prev9, align 8, !dbg !6018
  br label %if.end, !dbg !6018

if.else:                                          ; preds = %do.body3
  %14 = load ptr, ptr %sdlziter, align 8, !dbg !6022
  %nodelist10 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %14, i32 0, i32 1, !dbg !6022
  %tail = getelementptr inbounds %struct.anon.16, ptr %nodelist10, i32 0, i32 1, !dbg !6022
  %15 = load ptr, ptr %tail, align 8, !dbg !6022
  %16 = load ptr, ptr %node, align 8, !dbg !6022
  %cmp11 = icmp eq ptr %15, %16, !dbg !6022
  %lnot12 = xor i1 %cmp11, true, !dbg !6022
  %lnot13 = xor i1 %lnot12, true, !dbg !6022
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !6022
  %conv = sext i32 %lnot.ext to i64, !dbg !6022
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6022
  %tobool = icmp ne i64 %expval, 0, !dbg !6022
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !6022

lor.rhs:                                          ; preds = %if.else
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1353, i32 noundef 2, ptr noundef @.str.73) #12, !dbg !6022
  unreachable, !dbg !6022

17:                                               ; No predecessors!
  br label %lor.end, !dbg !6022

lor.end:                                          ; preds = %17, %if.else
  %18 = phi i1 [ true, %if.else ], [ false, %17 ]
  %lor.ext = zext i1 %18 to i32, !dbg !6022
  %19 = load ptr, ptr %node, align 8, !dbg !6022
  %link14 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %19, i32 0, i32 5, !dbg !6022
  %prev15 = getelementptr inbounds %struct.anon.9, ptr %link14, i32 0, i32 0, !dbg !6022
  %20 = load ptr, ptr %prev15, align 8, !dbg !6022
  %21 = load ptr, ptr %sdlziter, align 8, !dbg !6022
  %nodelist16 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %21, i32 0, i32 1, !dbg !6022
  %tail17 = getelementptr inbounds %struct.anon.16, ptr %nodelist16, i32 0, i32 1, !dbg !6022
  store ptr %20, ptr %tail17, align 8, !dbg !6022
  br label %if.end

if.end:                                           ; preds = %lor.end, %if.then
  %22 = load ptr, ptr %node, align 8, !dbg !6024
  %link18 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %22, i32 0, i32 5, !dbg !6024
  %prev19 = getelementptr inbounds %struct.anon.9, ptr %link18, i32 0, i32 0, !dbg !6024
  %23 = load ptr, ptr %prev19, align 8, !dbg !6024
  %cmp20 = icmp ne ptr %23, null, !dbg !6024
  br i1 %cmp20, label %if.then22, label %if.else29, !dbg !6021

if.then22:                                        ; preds = %if.end
  %24 = load ptr, ptr %node, align 8, !dbg !6024
  %link23 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %24, i32 0, i32 5, !dbg !6024
  %next24 = getelementptr inbounds %struct.anon.9, ptr %link23, i32 0, i32 1, !dbg !6024
  %25 = load ptr, ptr %next24, align 8, !dbg !6024
  %26 = load ptr, ptr %node, align 8, !dbg !6024
  %link25 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %26, i32 0, i32 5, !dbg !6024
  %prev26 = getelementptr inbounds %struct.anon.9, ptr %link25, i32 0, i32 0, !dbg !6024
  %27 = load ptr, ptr %prev26, align 8, !dbg !6024
  %link27 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %27, i32 0, i32 5, !dbg !6024
  %next28 = getelementptr inbounds %struct.anon.9, ptr %link27, i32 0, i32 1, !dbg !6024
  store ptr %25, ptr %next28, align 8, !dbg !6024
  br label %if.end48, !dbg !6024

if.else29:                                        ; preds = %if.end
  %28 = load ptr, ptr %sdlziter, align 8, !dbg !6026
  %nodelist30 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %28, i32 0, i32 1, !dbg !6026
  %head31 = getelementptr inbounds %struct.anon.16, ptr %nodelist30, i32 0, i32 0, !dbg !6026
  %29 = load ptr, ptr %head31, align 8, !dbg !6026
  %30 = load ptr, ptr %node, align 8, !dbg !6026
  %cmp32 = icmp eq ptr %29, %30, !dbg !6026
  %lnot34 = xor i1 %cmp32, true, !dbg !6026
  %lnot36 = xor i1 %lnot34, true, !dbg !6026
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !6026
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !6026
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 1), !dbg !6026
  %tobool40 = icmp ne i64 %expval39, 0, !dbg !6026
  br i1 %tobool40, label %lor.end42, label %lor.rhs41, !dbg !6026

lor.rhs41:                                        ; preds = %if.else29
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1353, i32 noundef 2, ptr noundef @.str.74) #12, !dbg !6026
  unreachable, !dbg !6026

31:                                               ; No predecessors!
  br label %lor.end42, !dbg !6026

lor.end42:                                        ; preds = %31, %if.else29
  %32 = phi i1 [ true, %if.else29 ], [ false, %31 ]
  %lor.ext43 = zext i1 %32 to i32, !dbg !6026
  %33 = load ptr, ptr %node, align 8, !dbg !6026
  %link44 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %33, i32 0, i32 5, !dbg !6026
  %next45 = getelementptr inbounds %struct.anon.9, ptr %link44, i32 0, i32 1, !dbg !6026
  %34 = load ptr, ptr %next45, align 8, !dbg !6026
  %35 = load ptr, ptr %sdlziter, align 8, !dbg !6026
  %nodelist46 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %35, i32 0, i32 1, !dbg !6026
  %head47 = getelementptr inbounds %struct.anon.16, ptr %nodelist46, i32 0, i32 0, !dbg !6026
  store ptr %34, ptr %head47, align 8, !dbg !6026
  br label %if.end48

if.end48:                                         ; preds = %lor.end42, %if.then22
  %36 = load ptr, ptr %node, align 8, !dbg !6021
  %link49 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %36, i32 0, i32 5, !dbg !6021
  %prev50 = getelementptr inbounds %struct.anon.9, ptr %link49, i32 0, i32 0, !dbg !6021
  store ptr inttoptr (i64 -1 to ptr), ptr %prev50, align 8, !dbg !6021
  %37 = load ptr, ptr %node, align 8, !dbg !6021
  %link51 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %37, i32 0, i32 5, !dbg !6021
  %next52 = getelementptr inbounds %struct.anon.9, ptr %link51, i32 0, i32 1, !dbg !6021
  store ptr inttoptr (i64 -1 to ptr), ptr %next52, align 8, !dbg !6021
  %38 = load ptr, ptr %sdlziter, align 8, !dbg !6021
  %nodelist53 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %38, i32 0, i32 1, !dbg !6021
  %head54 = getelementptr inbounds %struct.anon.16, ptr %nodelist53, i32 0, i32 0, !dbg !6021
  %39 = load ptr, ptr %head54, align 8, !dbg !6021
  %40 = load ptr, ptr %node, align 8, !dbg !6021
  %cmp55 = icmp ne ptr %39, %40, !dbg !6021
  %lnot57 = xor i1 %cmp55, true, !dbg !6021
  %lnot59 = xor i1 %lnot57, true, !dbg !6021
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !6021
  %conv61 = sext i32 %lnot.ext60 to i64, !dbg !6021
  %expval62 = call i64 @llvm.expect.i64(i64 %conv61, i64 1), !dbg !6021
  %tobool63 = icmp ne i64 %expval62, 0, !dbg !6021
  br i1 %tobool63, label %lor.end65, label %lor.rhs64, !dbg !6021

lor.rhs64:                                        ; preds = %if.end48
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1353, i32 noundef 2, ptr noundef @.str.75) #12, !dbg !6021
  unreachable, !dbg !6021

41:                                               ; No predecessors!
  br label %lor.end65, !dbg !6021

lor.end65:                                        ; preds = %41, %if.end48
  %42 = phi i1 [ true, %if.end48 ], [ false, %41 ]
  %lor.ext66 = zext i1 %42 to i32, !dbg !6021
  %43 = load ptr, ptr %sdlziter, align 8, !dbg !6021
  %nodelist67 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %43, i32 0, i32 1, !dbg !6021
  %tail68 = getelementptr inbounds %struct.anon.16, ptr %nodelist67, i32 0, i32 1, !dbg !6021
  %44 = load ptr, ptr %tail68, align 8, !dbg !6021
  %45 = load ptr, ptr %node, align 8, !dbg !6021
  %cmp69 = icmp ne ptr %44, %45, !dbg !6021
  %lnot71 = xor i1 %cmp69, true, !dbg !6021
  %lnot73 = xor i1 %lnot71, true, !dbg !6021
  %lnot.ext74 = zext i1 %lnot73 to i32, !dbg !6021
  %conv75 = sext i32 %lnot.ext74 to i64, !dbg !6021
  %expval76 = call i64 @llvm.expect.i64(i64 %conv75, i64 1), !dbg !6021
  %tobool77 = icmp ne i64 %expval76, 0, !dbg !6021
  br i1 %tobool77, label %lor.end79, label %lor.rhs78, !dbg !6021

lor.rhs78:                                        ; preds = %lor.end65
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1353, i32 noundef 2, ptr noundef @.str.76) #12, !dbg !6021
  unreachable, !dbg !6021

46:                                               ; No predecessors!
  br label %lor.end79, !dbg !6021

lor.end79:                                        ; preds = %46, %lor.end65
  %47 = phi i1 [ true, %lor.end65 ], [ false, %46 ]
  %lor.ext80 = zext i1 %47 to i32, !dbg !6021
  br label %do.cond, !dbg !6021

do.cond:                                          ; preds = %lor.end79
  br label %do.end, !dbg !6021

do.end:                                           ; preds = %do.cond
  br label %do.cond81, !dbg !6016

do.cond81:                                        ; preds = %do.end
  br label %do.end82, !dbg !6016

do.end82:                                         ; preds = %do.cond81
  %48 = load ptr, ptr %node, align 8, !dbg !6028
  call void @destroynode(ptr noundef %48), !dbg !6029
  call void @llvm.lifetime.end.p0(i64 8, ptr %node) #11, !dbg !6030
  br label %while.cond, !dbg !6008, !llvm.loop !6031

while.end:                                        ; preds = %while.cond
  %49 = load ptr, ptr %sdlziter, align 8, !dbg !6032
  %common83 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %49, i32 0, i32 0, !dbg !6033
  %db84 = getelementptr inbounds %struct.dns_dbiterator, ptr %common83, i32 0, i32 2, !dbg !6034
  call void @dns_db_detach(ptr noundef %db84), !dbg !6035
  br label %do.body85, !dbg !6036

do.body85:                                        ; preds = %while.end
  %50 = load ptr, ptr %sdlz, align 8, !dbg !6037
  %common86 = getelementptr inbounds %struct.dns_sdlz_db, ptr %50, i32 0, i32 0, !dbg !6037
  %mctx = getelementptr inbounds %struct.dns_db, ptr %common86, i32 0, i32 6, !dbg !6037
  %51 = load ptr, ptr %mctx, align 8, !dbg !6037
  %52 = load ptr, ptr %sdlziter, align 8, !dbg !6037
  call void @isc__mem_put(ptr noundef %51, ptr noundef %52, i64 noundef 64, ptr noundef @.str, i32 noundef 1358), !dbg !6037
  store ptr null, ptr %sdlziter, align 8, !dbg !6037
  br label %do.cond87, !dbg !6037

do.cond87:                                        ; preds = %do.body85
  br label %do.end88, !dbg !6037

do.end88:                                         ; preds = %do.cond87
  %53 = load ptr, ptr %iteratorp.addr, align 8, !dbg !6039
  store ptr null, ptr %53, align 8, !dbg !6040
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !6041
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlziter) #11, !dbg !6041
  ret void, !dbg !6041
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dbiterator_first(ptr noundef %iterator) #0 !dbg !6042 {
entry:
  %retval = alloca i32, align 4
  %iterator.addr = alloca ptr, align 8
  %sdlziter = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %iterator, ptr %iterator.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iterator.addr, metadata !6044, metadata !DIExpression()), !dbg !6046
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlziter) #11, !dbg !6047
  tail call void @llvm.dbg.declare(metadata ptr %sdlziter, metadata !6045, metadata !DIExpression()), !dbg !6048
  %0 = load ptr, ptr %iterator.addr, align 8, !dbg !6049
  store ptr %0, ptr %sdlziter, align 8, !dbg !6048
  %1 = load ptr, ptr %sdlziter, align 8, !dbg !6050
  %nodelist = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %1, i32 0, i32 1, !dbg !6050
  %head = getelementptr inbounds %struct.anon.16, ptr %nodelist, i32 0, i32 0, !dbg !6050
  %2 = load ptr, ptr %head, align 8, !dbg !6050
  %3 = load ptr, ptr %sdlziter, align 8, !dbg !6051
  %current = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %3, i32 0, i32 2, !dbg !6052
  store ptr %2, ptr %current, align 8, !dbg !6053
  %4 = load ptr, ptr %sdlziter, align 8, !dbg !6054
  %current1 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %4, i32 0, i32 2, !dbg !6056
  %5 = load ptr, ptr %current1, align 8, !dbg !6056
  %cmp = icmp eq ptr %5, null, !dbg !6057
  br i1 %cmp, label %if.then, label %if.else, !dbg !6058

if.then:                                          ; preds = %entry
  store i32 29, ptr %retval, align 4, !dbg !6059
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6059

if.else:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !6060
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6060

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlziter) #11, !dbg !6061
  %6 = load i32, ptr %retval, align 4, !dbg !6061
  ret i32 %6, !dbg !6061
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dbiterator_last(ptr noundef %iterator) #0 !dbg !6062 {
entry:
  %retval = alloca i32, align 4
  %iterator.addr = alloca ptr, align 8
  %sdlziter = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %iterator, ptr %iterator.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iterator.addr, metadata !6064, metadata !DIExpression()), !dbg !6066
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlziter) #11, !dbg !6067
  tail call void @llvm.dbg.declare(metadata ptr %sdlziter, metadata !6065, metadata !DIExpression()), !dbg !6068
  %0 = load ptr, ptr %iterator.addr, align 8, !dbg !6069
  store ptr %0, ptr %sdlziter, align 8, !dbg !6068
  %1 = load ptr, ptr %sdlziter, align 8, !dbg !6070
  %nodelist = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %1, i32 0, i32 1, !dbg !6070
  %tail = getelementptr inbounds %struct.anon.16, ptr %nodelist, i32 0, i32 1, !dbg !6070
  %2 = load ptr, ptr %tail, align 8, !dbg !6070
  %3 = load ptr, ptr %sdlziter, align 8, !dbg !6071
  %current = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %3, i32 0, i32 2, !dbg !6072
  store ptr %2, ptr %current, align 8, !dbg !6073
  %4 = load ptr, ptr %sdlziter, align 8, !dbg !6074
  %current1 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %4, i32 0, i32 2, !dbg !6076
  %5 = load ptr, ptr %current1, align 8, !dbg !6076
  %cmp = icmp eq ptr %5, null, !dbg !6077
  br i1 %cmp, label %if.then, label %if.else, !dbg !6078

if.then:                                          ; preds = %entry
  store i32 29, ptr %retval, align 4, !dbg !6079
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6079

if.else:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !6080
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6080

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlziter) #11, !dbg !6081
  %6 = load i32, ptr %retval, align 4, !dbg !6081
  ret i32 %6, !dbg !6081
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dbiterator_seek(ptr noundef %iterator, ptr noundef %name) #0 !dbg !6082 {
entry:
  %retval = alloca i32, align 4
  %iterator.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %sdlziter = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %iterator, ptr %iterator.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iterator.addr, metadata !6084, metadata !DIExpression()), !dbg !6087
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !6085, metadata !DIExpression()), !dbg !6088
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlziter) #11, !dbg !6089
  tail call void @llvm.dbg.declare(metadata ptr %sdlziter, metadata !6086, metadata !DIExpression()), !dbg !6090
  %0 = load ptr, ptr %iterator.addr, align 8, !dbg !6091
  store ptr %0, ptr %sdlziter, align 8, !dbg !6090
  %1 = load ptr, ptr %sdlziter, align 8, !dbg !6092
  %nodelist = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %1, i32 0, i32 1, !dbg !6092
  %head = getelementptr inbounds %struct.anon.16, ptr %nodelist, i32 0, i32 0, !dbg !6092
  %2 = load ptr, ptr %head, align 8, !dbg !6092
  %3 = load ptr, ptr %sdlziter, align 8, !dbg !6093
  %current = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %3, i32 0, i32 2, !dbg !6094
  store ptr %2, ptr %current, align 8, !dbg !6095
  br label %while.cond, !dbg !6096

while.cond:                                       ; preds = %if.end, %entry
  %4 = load ptr, ptr %sdlziter, align 8, !dbg !6097
  %current1 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %4, i32 0, i32 2, !dbg !6098
  %5 = load ptr, ptr %current1, align 8, !dbg !6098
  %cmp = icmp ne ptr %5, null, !dbg !6099
  br i1 %cmp, label %while.body, label %while.end, !dbg !6096

while.body:                                       ; preds = %while.cond
  %6 = load ptr, ptr %sdlziter, align 8, !dbg !6100
  %current2 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %6, i32 0, i32 2, !dbg !6103
  %7 = load ptr, ptr %current2, align 8, !dbg !6103
  %name3 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %7, i32 0, i32 4, !dbg !6104
  %8 = load ptr, ptr %name3, align 8, !dbg !6104
  %9 = load ptr, ptr %name.addr, align 8, !dbg !6105
  %call = call zeroext i1 @dns_name_equal(ptr noundef %8, ptr noundef %9), !dbg !6106
  br i1 %call, label %if.then, label %if.end, !dbg !6107

if.then:                                          ; preds = %while.body
  store i32 0, ptr %retval, align 4, !dbg !6108
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6108

if.end:                                           ; preds = %while.body
  %10 = load ptr, ptr %sdlziter, align 8, !dbg !6109
  %current4 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %10, i32 0, i32 2, !dbg !6109
  %11 = load ptr, ptr %current4, align 8, !dbg !6109
  %link = getelementptr inbounds %struct.dns_sdlzlookup, ptr %11, i32 0, i32 5, !dbg !6109
  %next = getelementptr inbounds %struct.anon.9, ptr %link, i32 0, i32 1, !dbg !6109
  %12 = load ptr, ptr %next, align 8, !dbg !6109
  %13 = load ptr, ptr %sdlziter, align 8, !dbg !6110
  %current5 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %13, i32 0, i32 2, !dbg !6111
  store ptr %12, ptr %current5, align 8, !dbg !6112
  br label %while.cond, !dbg !6096, !llvm.loop !6113

while.end:                                        ; preds = %while.cond
  store i32 23, ptr %retval, align 4, !dbg !6115
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6115

cleanup:                                          ; preds = %while.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlziter) #11, !dbg !6116
  %14 = load i32, ptr %retval, align 4, !dbg !6116
  ret i32 %14, !dbg !6116
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dbiterator_prev(ptr noundef %iterator) #0 !dbg !6117 {
entry:
  %retval = alloca i32, align 4
  %iterator.addr = alloca ptr, align 8
  %sdlziter = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %iterator, ptr %iterator.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iterator.addr, metadata !6119, metadata !DIExpression()), !dbg !6121
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlziter) #11, !dbg !6122
  tail call void @llvm.dbg.declare(metadata ptr %sdlziter, metadata !6120, metadata !DIExpression()), !dbg !6123
  %0 = load ptr, ptr %iterator.addr, align 8, !dbg !6124
  store ptr %0, ptr %sdlziter, align 8, !dbg !6123
  %1 = load ptr, ptr %sdlziter, align 8, !dbg !6125
  %current = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %1, i32 0, i32 2, !dbg !6125
  %2 = load ptr, ptr %current, align 8, !dbg !6125
  %link = getelementptr inbounds %struct.dns_sdlzlookup, ptr %2, i32 0, i32 5, !dbg !6125
  %prev = getelementptr inbounds %struct.anon.9, ptr %link, i32 0, i32 0, !dbg !6125
  %3 = load ptr, ptr %prev, align 8, !dbg !6125
  %4 = load ptr, ptr %sdlziter, align 8, !dbg !6126
  %current1 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %4, i32 0, i32 2, !dbg !6127
  store ptr %3, ptr %current1, align 8, !dbg !6128
  %5 = load ptr, ptr %sdlziter, align 8, !dbg !6129
  %current2 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %5, i32 0, i32 2, !dbg !6131
  %6 = load ptr, ptr %current2, align 8, !dbg !6131
  %cmp = icmp eq ptr %6, null, !dbg !6132
  br i1 %cmp, label %if.then, label %if.else, !dbg !6133

if.then:                                          ; preds = %entry
  store i32 29, ptr %retval, align 4, !dbg !6134
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6134

if.else:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !6135
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6135

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlziter) #11, !dbg !6136
  %7 = load i32, ptr %retval, align 4, !dbg !6136
  ret i32 %7, !dbg !6136
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dbiterator_next(ptr noundef %iterator) #0 !dbg !6137 {
entry:
  %retval = alloca i32, align 4
  %iterator.addr = alloca ptr, align 8
  %sdlziter = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %iterator, ptr %iterator.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iterator.addr, metadata !6139, metadata !DIExpression()), !dbg !6141
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlziter) #11, !dbg !6142
  tail call void @llvm.dbg.declare(metadata ptr %sdlziter, metadata !6140, metadata !DIExpression()), !dbg !6143
  %0 = load ptr, ptr %iterator.addr, align 8, !dbg !6144
  store ptr %0, ptr %sdlziter, align 8, !dbg !6143
  %1 = load ptr, ptr %sdlziter, align 8, !dbg !6145
  %current = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %1, i32 0, i32 2, !dbg !6145
  %2 = load ptr, ptr %current, align 8, !dbg !6145
  %link = getelementptr inbounds %struct.dns_sdlzlookup, ptr %2, i32 0, i32 5, !dbg !6145
  %next = getelementptr inbounds %struct.anon.9, ptr %link, i32 0, i32 1, !dbg !6145
  %3 = load ptr, ptr %next, align 8, !dbg !6145
  %4 = load ptr, ptr %sdlziter, align 8, !dbg !6146
  %current1 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %4, i32 0, i32 2, !dbg !6147
  store ptr %3, ptr %current1, align 8, !dbg !6148
  %5 = load ptr, ptr %sdlziter, align 8, !dbg !6149
  %current2 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %5, i32 0, i32 2, !dbg !6151
  %6 = load ptr, ptr %current2, align 8, !dbg !6151
  %cmp = icmp eq ptr %6, null, !dbg !6152
  br i1 %cmp, label %if.then, label %if.else, !dbg !6153

if.then:                                          ; preds = %entry
  store i32 29, ptr %retval, align 4, !dbg !6154
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6154

if.else:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !6155
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6155

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlziter) #11, !dbg !6156
  %7 = load i32, ptr %retval, align 4, !dbg !6156
  ret i32 %7, !dbg !6156
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dbiterator_current(ptr noundef %iterator, ptr noundef %nodep, ptr noundef %name) #0 !dbg !6157 {
entry:
  %retval = alloca i32, align 4
  %iterator.addr = alloca ptr, align 8
  %nodep.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %sdlziter = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %iterator, ptr %iterator.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iterator.addr, metadata !6159, metadata !DIExpression()), !dbg !6163
  store ptr %nodep, ptr %nodep.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %nodep.addr, metadata !6160, metadata !DIExpression()), !dbg !6164
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !6161, metadata !DIExpression()), !dbg !6165
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlziter) #11, !dbg !6166
  tail call void @llvm.dbg.declare(metadata ptr %sdlziter, metadata !6162, metadata !DIExpression()), !dbg !6167
  %0 = load ptr, ptr %iterator.addr, align 8, !dbg !6168
  store ptr %0, ptr %sdlziter, align 8, !dbg !6167
  %1 = load ptr, ptr %iterator.addr, align 8, !dbg !6169
  %db = getelementptr inbounds %struct.dns_dbiterator, ptr %1, i32 0, i32 2, !dbg !6170
  %2 = load ptr, ptr %db, align 8, !dbg !6170
  %3 = load ptr, ptr %sdlziter, align 8, !dbg !6171
  %current = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %3, i32 0, i32 2, !dbg !6172
  %4 = load ptr, ptr %current, align 8, !dbg !6172
  %5 = load ptr, ptr %nodep.addr, align 8, !dbg !6173
  call void @attachnode(ptr noundef %2, ptr noundef %4, ptr noundef %5), !dbg !6174
  %6 = load ptr, ptr %name.addr, align 8, !dbg !6175
  %cmp = icmp ne ptr %6, null, !dbg !6177
  br i1 %cmp, label %if.then, label %if.end, !dbg !6178

if.then:                                          ; preds = %entry
  %7 = load ptr, ptr %sdlziter, align 8, !dbg !6179
  %current1 = getelementptr inbounds %struct.dns_sdlzallnodes, ptr %7, i32 0, i32 2, !dbg !6180
  %8 = load ptr, ptr %current1, align 8, !dbg !6180
  %name2 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %8, i32 0, i32 4, !dbg !6181
  %9 = load ptr, ptr %name2, align 8, !dbg !6181
  %10 = load ptr, ptr %name.addr, align 8, !dbg !6182
  %call = call i32 @dns_name_copy(ptr noundef %9, ptr noundef %10, ptr noundef null), !dbg !6183
  store i32 %call, ptr %retval, align 4, !dbg !6184
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6184

if.end:                                           ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !6185
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6185

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlziter) #11, !dbg !6186
  %11 = load i32, ptr %retval, align 4, !dbg !6186
  ret i32 %11, !dbg !6186
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dbiterator_pause(ptr noundef %iterator) #0 !dbg !6187 {
entry:
  %iterator.addr = alloca ptr, align 8
  store ptr %iterator, ptr %iterator.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iterator.addr, metadata !6189, metadata !DIExpression()), !dbg !6190
  %0 = load ptr, ptr %iterator.addr, align 8, !dbg !6191
  ret i32 0, !dbg !6192
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @dbiterator_origin(ptr noundef %iterator, ptr noundef %name) #0 !dbg !6193 {
entry:
  %iterator.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  store ptr %iterator, ptr %iterator.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iterator.addr, metadata !6195, metadata !DIExpression()), !dbg !6197
  store ptr %name, ptr %name.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !6196, metadata !DIExpression()), !dbg !6198
  %0 = load ptr, ptr %iterator.addr, align 8, !dbg !6199
  %1 = load ptr, ptr @dns_rootname, align 8, !dbg !6200
  %2 = load ptr, ptr %name.addr, align 8, !dbg !6201
  %call = call i32 @dns_name_copy(ptr noundef %1, ptr noundef %2, ptr noundef null), !dbg !6202
  ret i32 %call, !dbg !6203
}

; Function Attrs: null_pointer_is_valid
declare !dbg !6204 i32 @dns_name_copy(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !6207 void @dns_db_detach(ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @list_tordataset(ptr noundef %rdatalist, ptr noundef %db, ptr noundef %node, ptr noundef %rdataset) #0 !dbg !6208 {
entry:
  %rdatalist.addr = alloca ptr, align 8
  %db.addr = alloca ptr, align 8
  %node.addr = alloca ptr, align 8
  %rdataset.addr = alloca ptr, align 8
  store ptr %rdatalist, ptr %rdatalist.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %rdatalist.addr, metadata !6212, metadata !DIExpression()), !dbg !6216
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !6213, metadata !DIExpression()), !dbg !6217
  store ptr %node, ptr %node.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !6214, metadata !DIExpression()), !dbg !6218
  store ptr %rdataset, ptr %rdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %rdataset.addr, metadata !6215, metadata !DIExpression()), !dbg !6219
  %0 = load ptr, ptr %rdatalist.addr, align 8, !dbg !6220
  %1 = load ptr, ptr %rdataset.addr, align 8, !dbg !6220
  %call = call i32 @dns_rdatalist_tordataset(ptr noundef %0, ptr noundef %1), !dbg !6220
  %cmp = icmp eq i32 %call, 0, !dbg !6220
  %lnot = xor i1 %cmp, true, !dbg !6220
  %lnot1 = xor i1 %lnot, true, !dbg !6220
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6220
  %conv = sext i32 %lnot.ext to i64, !dbg !6220
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6220
  %tobool = icmp ne i64 %expval, 0, !dbg !6220
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !6220

lor.rhs:                                          ; preds = %entry
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1504, ptr noundef @.str.78) #12, !dbg !6220
  unreachable, !dbg !6220

2:                                                ; No predecessors!
  br label %lor.end, !dbg !6220

lor.end:                                          ; preds = %2, %entry
  %3 = phi i1 [ true, %entry ], [ false, %2 ]
  %lor.ext = zext i1 %3 to i32, !dbg !6220
  %4 = load ptr, ptr %rdataset.addr, align 8, !dbg !6221
  %methods = getelementptr inbounds %struct.dns_rdataset, ptr %4, i32 0, i32 1, !dbg !6222
  store ptr @rdataset_methods, ptr %methods, align 8, !dbg !6223
  %5 = load ptr, ptr %db.addr, align 8, !dbg !6224
  %6 = load ptr, ptr %node.addr, align 8, !dbg !6225
  %7 = load ptr, ptr %rdataset.addr, align 8, !dbg !6226
  %private5 = getelementptr inbounds %struct.dns_rdataset, ptr %7, i32 0, i32 16, !dbg !6227
  call void @dns_db_attachnode(ptr noundef %5, ptr noundef %6, ptr noundef %private5), !dbg !6228
  ret void, !dbg !6229
}

; Function Attrs: null_pointer_is_valid
declare !dbg !6230 i32 @dns_rdatalist_tordataset(ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !6233 void @dns_db_attachnode(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @disassociate(ptr noundef %rdataset) #0 !dbg !6234 {
entry:
  %rdataset.addr = alloca ptr, align 8
  %node = alloca ptr, align 8
  %sdlznode = alloca ptr, align 8
  %db = alloca ptr, align 8
  store ptr %rdataset, ptr %rdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %rdataset.addr, metadata !6236, metadata !DIExpression()), !dbg !6240
  call void @llvm.lifetime.start.p0(i64 8, ptr %node) #11, !dbg !6241
  tail call void @llvm.dbg.declare(metadata ptr %node, metadata !6237, metadata !DIExpression()), !dbg !6242
  %0 = load ptr, ptr %rdataset.addr, align 8, !dbg !6243
  %private5 = getelementptr inbounds %struct.dns_rdataset, ptr %0, i32 0, i32 16, !dbg !6244
  %1 = load ptr, ptr %private5, align 8, !dbg !6244
  store ptr %1, ptr %node, align 8, !dbg !6242
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlznode) #11, !dbg !6245
  tail call void @llvm.dbg.declare(metadata ptr %sdlznode, metadata !6238, metadata !DIExpression()), !dbg !6246
  %2 = load ptr, ptr %node, align 8, !dbg !6247
  store ptr %2, ptr %sdlznode, align 8, !dbg !6246
  call void @llvm.lifetime.start.p0(i64 8, ptr %db) #11, !dbg !6248
  tail call void @llvm.dbg.declare(metadata ptr %db, metadata !6239, metadata !DIExpression()), !dbg !6249
  %3 = load ptr, ptr %sdlznode, align 8, !dbg !6250
  %sdlz = getelementptr inbounds %struct.dns_sdlzlookup, ptr %3, i32 0, i32 1, !dbg !6251
  %4 = load ptr, ptr %sdlz, align 8, !dbg !6251
  store ptr %4, ptr %db, align 8, !dbg !6249
  %5 = load ptr, ptr %db, align 8, !dbg !6252
  call void @detachnode(ptr noundef %5, ptr noundef %node), !dbg !6253
  %6 = load ptr, ptr %rdataset.addr, align 8, !dbg !6254
  call void @isc__rdatalist_disassociate(ptr noundef %6), !dbg !6255
  call void @llvm.lifetime.end.p0(i64 8, ptr %db) #11, !dbg !6256
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlznode) #11, !dbg !6256
  call void @llvm.lifetime.end.p0(i64 8, ptr %node) #11, !dbg !6256
  ret void, !dbg !6256
}

; Function Attrs: null_pointer_is_valid
declare i32 @isc__rdatalist_first(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare i32 @isc__rdatalist_next(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare void @isc__rdatalist_current(ptr noundef, ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @rdataset_clone(ptr noundef %source, ptr noundef %target) #0 !dbg !6257 {
entry:
  %source.addr = alloca ptr, align 8
  %target.addr = alloca ptr, align 8
  %node = alloca ptr, align 8
  %sdlznode = alloca ptr, align 8
  %db = alloca ptr, align 8
  %tempdb = alloca ptr, align 8
  store ptr %source, ptr %source.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %source.addr, metadata !6259, metadata !DIExpression()), !dbg !6265
  store ptr %target, ptr %target.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %target.addr, metadata !6260, metadata !DIExpression()), !dbg !6266
  call void @llvm.lifetime.start.p0(i64 8, ptr %node) #11, !dbg !6267
  tail call void @llvm.dbg.declare(metadata ptr %node, metadata !6261, metadata !DIExpression()), !dbg !6268
  %0 = load ptr, ptr %source.addr, align 8, !dbg !6269
  %private5 = getelementptr inbounds %struct.dns_rdataset, ptr %0, i32 0, i32 16, !dbg !6270
  %1 = load ptr, ptr %private5, align 8, !dbg !6270
  store ptr %1, ptr %node, align 8, !dbg !6268
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlznode) #11, !dbg !6271
  tail call void @llvm.dbg.declare(metadata ptr %sdlznode, metadata !6262, metadata !DIExpression()), !dbg !6272
  %2 = load ptr, ptr %node, align 8, !dbg !6273
  store ptr %2, ptr %sdlznode, align 8, !dbg !6272
  call void @llvm.lifetime.start.p0(i64 8, ptr %db) #11, !dbg !6274
  tail call void @llvm.dbg.declare(metadata ptr %db, metadata !6263, metadata !DIExpression()), !dbg !6275
  %3 = load ptr, ptr %sdlznode, align 8, !dbg !6276
  %sdlz = getelementptr inbounds %struct.dns_sdlzlookup, ptr %3, i32 0, i32 1, !dbg !6277
  %4 = load ptr, ptr %sdlz, align 8, !dbg !6277
  store ptr %4, ptr %db, align 8, !dbg !6275
  call void @llvm.lifetime.start.p0(i64 8, ptr %tempdb) #11, !dbg !6278
  tail call void @llvm.dbg.declare(metadata ptr %tempdb, metadata !6264, metadata !DIExpression()), !dbg !6279
  store ptr null, ptr %tempdb, align 8, !dbg !6279
  %5 = load ptr, ptr %source.addr, align 8, !dbg !6280
  %6 = load ptr, ptr %target.addr, align 8, !dbg !6281
  call void @isc__rdatalist_clone(ptr noundef %5, ptr noundef %6), !dbg !6282
  %7 = load ptr, ptr %db, align 8, !dbg !6283
  %8 = load ptr, ptr %node, align 8, !dbg !6284
  call void @attachnode(ptr noundef %7, ptr noundef %8, ptr noundef %tempdb), !dbg !6285
  %9 = load ptr, ptr %tempdb, align 8, !dbg !6286
  %10 = load ptr, ptr %source.addr, align 8, !dbg !6287
  %private51 = getelementptr inbounds %struct.dns_rdataset, ptr %10, i32 0, i32 16, !dbg !6288
  store ptr %9, ptr %private51, align 8, !dbg !6289
  call void @llvm.lifetime.end.p0(i64 8, ptr %tempdb) #11, !dbg !6290
  call void @llvm.lifetime.end.p0(i64 8, ptr %db) #11, !dbg !6290
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlznode) #11, !dbg !6290
  call void @llvm.lifetime.end.p0(i64 8, ptr %node) #11, !dbg !6290
  ret void, !dbg !6290
}

; Function Attrs: null_pointer_is_valid
declare i32 @isc__rdatalist_count(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare i32 @isc__rdatalist_addnoqname(ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare i32 @isc__rdatalist_getnoqname(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !6291 void @isc__rdatalist_disassociate(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !6293 void @isc__rdatalist_clone(ptr noundef, ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @rdatasetiter_destroy(ptr noundef %iteratorp) #0 !dbg !6294 {
entry:
  %iteratorp.addr = alloca ptr, align 8
  %sdlziterator = alloca ptr, align 8
  store ptr %iteratorp, ptr %iteratorp.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iteratorp.addr, metadata !6296, metadata !DIExpression()), !dbg !6298
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlziterator) #11, !dbg !6299
  tail call void @llvm.dbg.declare(metadata ptr %sdlziterator, metadata !6297, metadata !DIExpression()), !dbg !6300
  %0 = load ptr, ptr %iteratorp.addr, align 8, !dbg !6301
  %1 = load ptr, ptr %0, align 8, !dbg !6302
  store ptr %1, ptr %sdlziterator, align 8, !dbg !6300
  %2 = load ptr, ptr %sdlziterator, align 8, !dbg !6303
  %common = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %2, i32 0, i32 0, !dbg !6304
  %db = getelementptr inbounds %struct.dns_rdatasetiter, ptr %common, i32 0, i32 2, !dbg !6305
  %3 = load ptr, ptr %db, align 8, !dbg !6305
  %4 = load ptr, ptr %sdlziterator, align 8, !dbg !6306
  %common1 = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %4, i32 0, i32 0, !dbg !6307
  %node = getelementptr inbounds %struct.dns_rdatasetiter, ptr %common1, i32 0, i32 3, !dbg !6308
  call void @detachnode(ptr noundef %3, ptr noundef %node), !dbg !6309
  br label %do.body, !dbg !6310

do.body:                                          ; preds = %entry
  %5 = load ptr, ptr %sdlziterator, align 8, !dbg !6311
  %common2 = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %5, i32 0, i32 0, !dbg !6311
  %db3 = getelementptr inbounds %struct.dns_rdatasetiter, ptr %common2, i32 0, i32 2, !dbg !6311
  %6 = load ptr, ptr %db3, align 8, !dbg !6311
  %mctx = getelementptr inbounds %struct.dns_db, ptr %6, i32 0, i32 6, !dbg !6311
  %7 = load ptr, ptr %mctx, align 8, !dbg !6311
  %8 = load ptr, ptr %sdlziterator, align 8, !dbg !6311
  call void @isc__mem_put(ptr noundef %7, ptr noundef %8, i64 noundef 56, ptr noundef @.str, i32 noundef 271), !dbg !6311
  store ptr null, ptr %sdlziterator, align 8, !dbg !6311
  br label %do.cond, !dbg !6311

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !6311

do.end:                                           ; preds = %do.cond
  %9 = load ptr, ptr %iteratorp.addr, align 8, !dbg !6313
  store ptr null, ptr %9, align 8, !dbg !6314
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlziterator) #11, !dbg !6315
  ret void, !dbg !6315
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @rdatasetiter_first(ptr noundef %iterator) #0 !dbg !6316 {
entry:
  %retval = alloca i32, align 4
  %iterator.addr = alloca ptr, align 8
  %sdlziterator = alloca ptr, align 8
  %sdlznode = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %iterator, ptr %iterator.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iterator.addr, metadata !6318, metadata !DIExpression()), !dbg !6321
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlziterator) #11, !dbg !6322
  tail call void @llvm.dbg.declare(metadata ptr %sdlziterator, metadata !6319, metadata !DIExpression()), !dbg !6323
  %0 = load ptr, ptr %iterator.addr, align 8, !dbg !6324
  store ptr %0, ptr %sdlziterator, align 8, !dbg !6323
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlznode) #11, !dbg !6325
  tail call void @llvm.dbg.declare(metadata ptr %sdlznode, metadata !6320, metadata !DIExpression()), !dbg !6326
  %1 = load ptr, ptr %iterator.addr, align 8, !dbg !6327
  %node = getelementptr inbounds %struct.dns_rdatasetiter, ptr %1, i32 0, i32 3, !dbg !6328
  %2 = load ptr, ptr %node, align 8, !dbg !6328
  store ptr %2, ptr %sdlznode, align 8, !dbg !6326
  %3 = load ptr, ptr %sdlznode, align 8, !dbg !6329
  %lists = getelementptr inbounds %struct.dns_sdlzlookup, ptr %3, i32 0, i32 2, !dbg !6329
  %head = getelementptr inbounds %struct.anon.7, ptr %lists, i32 0, i32 0, !dbg !6329
  %4 = load ptr, ptr %head, align 8, !dbg !6329
  %cmp = icmp eq ptr %4, null, !dbg !6329
  br i1 %cmp, label %if.then, label %if.end, !dbg !6331

if.then:                                          ; preds = %entry
  store i32 29, ptr %retval, align 4, !dbg !6332
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6332

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %sdlznode, align 8, !dbg !6333
  %lists1 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %5, i32 0, i32 2, !dbg !6333
  %head2 = getelementptr inbounds %struct.anon.7, ptr %lists1, i32 0, i32 0, !dbg !6333
  %6 = load ptr, ptr %head2, align 8, !dbg !6333
  %7 = load ptr, ptr %sdlziterator, align 8, !dbg !6334
  %current = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %7, i32 0, i32 1, !dbg !6335
  store ptr %6, ptr %current, align 8, !dbg !6336
  store i32 0, ptr %retval, align 4, !dbg !6337
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6337

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlznode) #11, !dbg !6338
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlziterator) #11, !dbg !6338
  %8 = load i32, ptr %retval, align 4, !dbg !6338
  ret i32 %8, !dbg !6338
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @rdatasetiter_next(ptr noundef %iterator) #0 !dbg !6339 {
entry:
  %retval = alloca i32, align 4
  %iterator.addr = alloca ptr, align 8
  %sdlziterator = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %iterator, ptr %iterator.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iterator.addr, metadata !6341, metadata !DIExpression()), !dbg !6343
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlziterator) #11, !dbg !6344
  tail call void @llvm.dbg.declare(metadata ptr %sdlziterator, metadata !6342, metadata !DIExpression()), !dbg !6345
  %0 = load ptr, ptr %iterator.addr, align 8, !dbg !6346
  store ptr %0, ptr %sdlziterator, align 8, !dbg !6345
  %1 = load ptr, ptr %sdlziterator, align 8, !dbg !6347
  %current = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %1, i32 0, i32 1, !dbg !6347
  %2 = load ptr, ptr %current, align 8, !dbg !6347
  %link = getelementptr inbounds %struct.dns_rdatalist, ptr %2, i32 0, i32 5, !dbg !6347
  %next = getelementptr inbounds %struct.anon.14, ptr %link, i32 0, i32 1, !dbg !6347
  %3 = load ptr, ptr %next, align 8, !dbg !6347
  %4 = load ptr, ptr %sdlziterator, align 8, !dbg !6348
  %current1 = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %4, i32 0, i32 1, !dbg !6349
  store ptr %3, ptr %current1, align 8, !dbg !6350
  %5 = load ptr, ptr %sdlziterator, align 8, !dbg !6351
  %current2 = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %5, i32 0, i32 1, !dbg !6353
  %6 = load ptr, ptr %current2, align 8, !dbg !6353
  %cmp = icmp eq ptr %6, null, !dbg !6354
  br i1 %cmp, label %if.then, label %if.else, !dbg !6355

if.then:                                          ; preds = %entry
  store i32 29, ptr %retval, align 4, !dbg !6356
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6356

if.else:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !6357
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6357

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlziterator) #11, !dbg !6358
  %7 = load i32, ptr %retval, align 4, !dbg !6358
  ret i32 %7, !dbg !6358
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal void @rdatasetiter_current(ptr noundef %iterator, ptr noundef %rdataset) #0 !dbg !6359 {
entry:
  %iterator.addr = alloca ptr, align 8
  %rdataset.addr = alloca ptr, align 8
  %sdlziterator = alloca ptr, align 8
  store ptr %iterator, ptr %iterator.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %iterator.addr, metadata !6361, metadata !DIExpression()), !dbg !6364
  store ptr %rdataset, ptr %rdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %rdataset.addr, metadata !6362, metadata !DIExpression()), !dbg !6365
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlziterator) #11, !dbg !6366
  tail call void @llvm.dbg.declare(metadata ptr %sdlziterator, metadata !6363, metadata !DIExpression()), !dbg !6367
  %0 = load ptr, ptr %iterator.addr, align 8, !dbg !6368
  store ptr %0, ptr %sdlziterator, align 8, !dbg !6367
  %1 = load ptr, ptr %sdlziterator, align 8, !dbg !6369
  %current = getelementptr inbounds %struct.sdlz_rdatasetiter, ptr %1, i32 0, i32 1, !dbg !6370
  %2 = load ptr, ptr %current, align 8, !dbg !6370
  %3 = load ptr, ptr %iterator.addr, align 8, !dbg !6371
  %db = getelementptr inbounds %struct.dns_rdatasetiter, ptr %3, i32 0, i32 2, !dbg !6372
  %4 = load ptr, ptr %db, align 8, !dbg !6372
  %5 = load ptr, ptr %iterator.addr, align 8, !dbg !6373
  %node = getelementptr inbounds %struct.dns_rdatasetiter, ptr %5, i32 0, i32 3, !dbg !6374
  %6 = load ptr, ptr %node, align 8, !dbg !6374
  %7 = load ptr, ptr %rdataset.addr, align 8, !dbg !6375
  call void @list_tordataset(ptr noundef %2, ptr noundef %4, ptr noundef %6, ptr noundef %7), !dbg !6376
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlziterator) #11, !dbg !6377
  ret void, !dbg !6377
}

; Function Attrs: nounwind null_pointer_is_valid uwtable
define internal i32 @modrdataset(ptr noundef %db, ptr noundef %node, ptr noundef %version, ptr noundef %rdataset, i32 noundef %options, ptr noundef %mod_function) #0 !dbg !6378 {
entry:
  %retval = alloca i32, align 4
  %db.addr = alloca ptr, align 8
  %node.addr = alloca ptr, align 8
  %version.addr = alloca ptr, align 8
  %rdataset.addr = alloca ptr, align 8
  %options.addr = alloca i32, align 4
  %mod_function.addr = alloca ptr, align 8
  %sdlz = alloca ptr, align 8
  %style = alloca ptr, align 8
  %result = alloca i32, align 4
  %buffer = alloca ptr, align 8
  %mctx = alloca ptr, align 8
  %sdlznode = alloca ptr, align 8
  %rdatastr = alloca ptr, align 8
  %name = alloca [1024 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %flags = alloca i32, align 4
  %flags60 = alloca i32, align 4
  store ptr %db, ptr %db.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %db.addr, metadata !6382, metadata !DIExpression()), !dbg !6405
  store ptr %node, ptr %node.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %node.addr, metadata !6383, metadata !DIExpression()), !dbg !6406
  store ptr %version, ptr %version.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %version.addr, metadata !6384, metadata !DIExpression()), !dbg !6407
  store ptr %rdataset, ptr %rdataset.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %rdataset.addr, metadata !6385, metadata !DIExpression()), !dbg !6408
  store i32 %options, ptr %options.addr, align 4
  tail call void @llvm.dbg.declare(metadata ptr %options.addr, metadata !6386, metadata !DIExpression()), !dbg !6409
  store ptr %mod_function, ptr %mod_function.addr, align 8
  tail call void @llvm.dbg.declare(metadata ptr %mod_function.addr, metadata !6387, metadata !DIExpression()), !dbg !6410
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlz) #11, !dbg !6411
  tail call void @llvm.dbg.declare(metadata ptr %sdlz, metadata !6388, metadata !DIExpression()), !dbg !6412
  %0 = load ptr, ptr %db.addr, align 8, !dbg !6413
  store ptr %0, ptr %sdlz, align 8, !dbg !6412
  call void @llvm.lifetime.start.p0(i64 8, ptr %style) #11, !dbg !6414
  tail call void @llvm.dbg.declare(metadata ptr %style, metadata !6389, metadata !DIExpression()), !dbg !6415
  store ptr null, ptr %style, align 8, !dbg !6415
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #11, !dbg !6416
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !6394, metadata !DIExpression()), !dbg !6417
  call void @llvm.lifetime.start.p0(i64 8, ptr %buffer) #11, !dbg !6418
  tail call void @llvm.dbg.declare(metadata ptr %buffer, metadata !6395, metadata !DIExpression()), !dbg !6419
  store ptr null, ptr %buffer, align 8, !dbg !6419
  call void @llvm.lifetime.start.p0(i64 8, ptr %mctx) #11, !dbg !6420
  tail call void @llvm.dbg.declare(metadata ptr %mctx, metadata !6396, metadata !DIExpression()), !dbg !6421
  call void @llvm.lifetime.start.p0(i64 8, ptr %sdlznode) #11, !dbg !6422
  tail call void @llvm.dbg.declare(metadata ptr %sdlznode, metadata !6397, metadata !DIExpression()), !dbg !6423
  call void @llvm.lifetime.start.p0(i64 8, ptr %rdatastr) #11, !dbg !6424
  tail call void @llvm.dbg.declare(metadata ptr %rdatastr, metadata !6398, metadata !DIExpression()), !dbg !6425
  store ptr null, ptr %rdatastr, align 8, !dbg !6425
  call void @llvm.lifetime.start.p0(i64 1024, ptr %name) #11, !dbg !6426
  tail call void @llvm.dbg.declare(metadata ptr %name, metadata !6399, metadata !DIExpression()), !dbg !6427
  %1 = load ptr, ptr %sdlz, align 8, !dbg !6428
  %cmp = icmp ne ptr %1, null, !dbg !6428
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6428

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %sdlz, align 8, !dbg !6428
  %common = getelementptr inbounds %struct.dns_sdlz_db, ptr %2, i32 0, i32 0, !dbg !6428
  %impmagic = getelementptr inbounds %struct.dns_db, ptr %common, i32 0, i32 1, !dbg !6428
  %3 = load i32, ptr %impmagic, align 4, !dbg !6428
  %cmp1 = icmp eq i32 %3, 1145854547, !dbg !6428
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !6429
  %lnot = xor i1 %4, true, !dbg !6428
  %lnot2 = xor i1 %lnot, true, !dbg !6428
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6428
  %conv = sext i32 %lnot.ext to i64, !dbg !6428
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6428
  %tobool = icmp ne i64 %expval, 0, !dbg !6428
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !6428

lor.rhs:                                          ; preds = %land.end
  call void @isc_assertion_failed(ptr noundef @.str, i32 noundef 1113, i32 noundef 0, ptr noundef @.str.19) #12, !dbg !6428
  unreachable, !dbg !6428

5:                                                ; No predecessors!
  br label %lor.end, !dbg !6428

lor.end:                                          ; preds = %5, %land.end
  %6 = phi i1 [ true, %land.end ], [ false, %5 ]
  %lor.ext = zext i1 %6 to i32, !dbg !6428
  %7 = load ptr, ptr %mod_function.addr, align 8, !dbg !6430
  %cmp3 = icmp eq ptr %7, null, !dbg !6432
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6433

if.then:                                          ; preds = %lor.end
  store i32 27, ptr %retval, align 4, !dbg !6434
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup95, !dbg !6434

if.end:                                           ; preds = %lor.end
  %8 = load ptr, ptr %node.addr, align 8, !dbg !6435
  store ptr %8, ptr %sdlznode, align 8, !dbg !6436
  %9 = load i32, ptr %options.addr, align 4, !dbg !6437
  %10 = load ptr, ptr %sdlznode, align 8, !dbg !6438
  %name5 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %10, i32 0, i32 4, !dbg !6439
  %11 = load ptr, ptr %name5, align 8, !dbg !6439
  %arraydecay = getelementptr inbounds [1024 x i8], ptr %name, i64 0, i64 0, !dbg !6440
  call void @dns_name_format(ptr noundef %11, ptr noundef %arraydecay, i32 noundef 1024), !dbg !6441
  %12 = load ptr, ptr %sdlz, align 8, !dbg !6442
  %common6 = getelementptr inbounds %struct.dns_sdlz_db, ptr %12, i32 0, i32 0, !dbg !6443
  %mctx7 = getelementptr inbounds %struct.dns_db, ptr %common6, i32 0, i32 6, !dbg !6444
  %13 = load ptr, ptr %mctx7, align 8, !dbg !6444
  store ptr %13, ptr %mctx, align 8, !dbg !6445
  %14 = load ptr, ptr %mctx, align 8, !dbg !6446
  %call = call i32 @isc_buffer_allocate(ptr noundef %14, ptr noundef %buffer, i32 noundef 1024), !dbg !6447
  store i32 %call, ptr %result, align 4, !dbg !6448
  %15 = load i32, ptr %result, align 4, !dbg !6449
  %cmp8 = icmp ne i32 %15, 0, !dbg !6451
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !6452

if.then10:                                        ; preds = %if.end
  %16 = load i32, ptr %result, align 4, !dbg !6453
  store i32 %16, ptr %retval, align 4, !dbg !6454
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup95, !dbg !6454

if.end11:                                         ; preds = %if.end
  %17 = load ptr, ptr %mctx, align 8, !dbg !6455
  %call12 = call i32 @dns_master_stylecreate(ptr noundef %style, i64 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, i32 noundef -1, ptr noundef %17), !dbg !6456
  store i32 %call12, ptr %result, align 4, !dbg !6457
  %18 = load i32, ptr %result, align 4, !dbg !6458
  %cmp13 = icmp ne i32 %18, 0, !dbg !6460
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !6461

if.then15:                                        ; preds = %if.end11
  br label %cleanup, !dbg !6462

if.end16:                                         ; preds = %if.end11
  %19 = load ptr, ptr %sdlznode, align 8, !dbg !6463
  %name17 = getelementptr inbounds %struct.dns_sdlzlookup, ptr %19, i32 0, i32 4, !dbg !6464
  %20 = load ptr, ptr %name17, align 8, !dbg !6464
  %21 = load ptr, ptr %rdataset.addr, align 8, !dbg !6465
  %22 = load ptr, ptr %style, align 8, !dbg !6466
  %23 = load ptr, ptr %buffer, align 8, !dbg !6467
  %call18 = call i32 @dns_master_rdatasettotext(ptr noundef %20, ptr noundef %21, ptr noundef %22, ptr noundef %23), !dbg !6468
  store i32 %call18, ptr %result, align 4, !dbg !6469
  %24 = load i32, ptr %result, align 4, !dbg !6470
  %cmp19 = icmp ne i32 %24, 0, !dbg !6472
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !6473

if.then21:                                        ; preds = %if.end16
  br label %cleanup, !dbg !6474

if.end22:                                         ; preds = %if.end16
  %25 = load ptr, ptr %buffer, align 8, !dbg !6475
  %used = getelementptr inbounds %struct.isc_buffer, ptr %25, i32 0, i32 3, !dbg !6475
  %26 = load i32, ptr %used, align 4, !dbg !6475
  %cmp23 = icmp ult i32 %26, 1, !dbg !6477
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !6478

if.then25:                                        ; preds = %if.end22
  store i32 59, ptr %result, align 4, !dbg !6479
  br label %cleanup, !dbg !6481

if.end26:                                         ; preds = %if.end22
  %27 = load ptr, ptr %buffer, align 8, !dbg !6482
  %base = getelementptr inbounds %struct.isc_buffer, ptr %27, i32 0, i32 1, !dbg !6482
  %28 = load ptr, ptr %base, align 8, !dbg !6482
  store ptr %28, ptr %rdatastr, align 8, !dbg !6483
  %29 = load ptr, ptr %rdatastr, align 8, !dbg !6484
  %cmp27 = icmp eq ptr %29, null, !dbg !6486
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !6487

if.then29:                                        ; preds = %if.end26
  store i32 1, ptr %result, align 4, !dbg !6488
  br label %cleanup, !dbg !6490

if.end30:                                         ; preds = %if.end26
  %30 = load ptr, ptr %rdatastr, align 8, !dbg !6491
  %31 = load ptr, ptr %buffer, align 8, !dbg !6492
  %used31 = getelementptr inbounds %struct.isc_buffer, ptr %31, i32 0, i32 3, !dbg !6492
  %32 = load i32, ptr %used31, align 4, !dbg !6492
  %sub = sub i32 %32, 1, !dbg !6493
  %idxprom = zext i32 %sub to i64, !dbg !6491
  %arrayidx = getelementptr inbounds i8, ptr %30, i64 %idxprom, !dbg !6491
  store i8 0, ptr %arrayidx, align 1, !dbg !6494
  br label %do.body, !dbg !6495

do.body:                                          ; preds = %if.end30
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags) #11, !dbg !6496
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !6400, metadata !DIExpression()), !dbg !6496
  %33 = load ptr, ptr %sdlz, align 8, !dbg !6496
  %dlzimp = getelementptr inbounds %struct.dns_sdlz_db, ptr %33, i32 0, i32 2, !dbg !6496
  %34 = load ptr, ptr %dlzimp, align 8, !dbg !6496
  %flags32 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %34, i32 0, i32 3, !dbg !6496
  %35 = load i32, ptr %flags32, align 8, !dbg !6496
  store i32 %35, ptr %flags, align 4, !dbg !6496
  %36 = load i32, ptr %flags, align 4, !dbg !6497
  %and = and i32 %36, 1, !dbg !6497
  %cmp33 = icmp eq i32 %and, 0, !dbg !6497
  br i1 %cmp33, label %if.then35, label %if.end53, !dbg !6496

if.then35:                                        ; preds = %do.body
  br label %do.body36, !dbg !6497

do.body36:                                        ; preds = %if.then35
  %37 = load ptr, ptr %sdlz, align 8, !dbg !6499
  %dlzimp37 = getelementptr inbounds %struct.dns_sdlz_db, ptr %37, i32 0, i32 2, !dbg !6499
  %38 = load ptr, ptr %dlzimp37, align 8, !dbg !6499
  %driverlock = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %38, i32 0, i32 4, !dbg !6499
  %call38 = call i32 @pthread_mutex_lock(ptr noundef %driverlock) #11, !dbg !6499
  %cmp39 = icmp eq i32 %call38, 0, !dbg !6499
  %39 = zext i1 %cmp39 to i64, !dbg !6499
  %cond = select i1 %cmp39, i32 0, i32 34, !dbg !6499
  %cmp41 = icmp eq i32 %cond, 0, !dbg !6499
  %lnot43 = xor i1 %cmp41, true, !dbg !6499
  %lnot45 = xor i1 %lnot43, true, !dbg !6499
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !6499
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !6499
  %expval48 = call i64 @llvm.expect.i64(i64 %conv47, i64 1), !dbg !6499
  %tobool49 = icmp ne i64 %expval48, 0, !dbg !6499
  br i1 %tobool49, label %lor.end51, label %lor.rhs50, !dbg !6499

lor.rhs50:                                        ; preds = %do.body36
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1152, ptr noundef @.str.61) #12, !dbg !6499
  unreachable, !dbg !6499

40:                                               ; No predecessors!
  br label %lor.end51, !dbg !6499

lor.end51:                                        ; preds = %40, %do.body36
  %41 = phi i1 [ true, %do.body36 ], [ false, %40 ]
  %lor.ext52 = zext i1 %41 to i32, !dbg !6499
  br label %do.cond, !dbg !6499

do.cond:                                          ; preds = %lor.end51
  br label %do.end, !dbg !6499

do.end:                                           ; preds = %do.cond
  br label %if.end53, !dbg !6499

if.end53:                                         ; preds = %do.end, %do.body
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags) #11, !dbg !6495
  br label %do.cond54, !dbg !6496

do.cond54:                                        ; preds = %if.end53
  br label %do.end55, !dbg !6496

do.end55:                                         ; preds = %do.cond54
  %42 = load ptr, ptr %mod_function.addr, align 8, !dbg !6501
  %arraydecay56 = getelementptr inbounds [1024 x i8], ptr %name, i64 0, i64 0, !dbg !6502
  %43 = load ptr, ptr %rdatastr, align 8, !dbg !6503
  %44 = load ptr, ptr %sdlz, align 8, !dbg !6504
  %dlzimp57 = getelementptr inbounds %struct.dns_sdlz_db, ptr %44, i32 0, i32 2, !dbg !6505
  %45 = load ptr, ptr %dlzimp57, align 8, !dbg !6505
  %driverarg = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %45, i32 0, i32 2, !dbg !6506
  %46 = load ptr, ptr %driverarg, align 8, !dbg !6506
  %47 = load ptr, ptr %sdlz, align 8, !dbg !6507
  %dbdata = getelementptr inbounds %struct.dns_sdlz_db, ptr %47, i32 0, i32 1, !dbg !6508
  %48 = load ptr, ptr %dbdata, align 8, !dbg !6508
  %49 = load ptr, ptr %version.addr, align 8, !dbg !6509
  %call58 = call i32 %42(ptr noundef %arraydecay56, ptr noundef %43, ptr noundef %46, ptr noundef %48, ptr noundef %49), !dbg !6501
  store i32 %call58, ptr %result, align 4, !dbg !6510
  br label %do.body59, !dbg !6511

do.body59:                                        ; preds = %do.end55
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags60) #11, !dbg !6512
  tail call void @llvm.dbg.declare(metadata ptr %flags60, metadata !6402, metadata !DIExpression()), !dbg !6512
  %50 = load ptr, ptr %sdlz, align 8, !dbg !6512
  %dlzimp61 = getelementptr inbounds %struct.dns_sdlz_db, ptr %50, i32 0, i32 2, !dbg !6512
  %51 = load ptr, ptr %dlzimp61, align 8, !dbg !6512
  %flags62 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %51, i32 0, i32 3, !dbg !6512
  %52 = load i32, ptr %flags62, align 8, !dbg !6512
  store i32 %52, ptr %flags60, align 4, !dbg !6512
  %53 = load i32, ptr %flags60, align 4, !dbg !6513
  %and63 = and i32 %53, 1, !dbg !6513
  %cmp64 = icmp eq i32 %and63, 0, !dbg !6513
  br i1 %cmp64, label %if.then66, label %if.end88, !dbg !6512

if.then66:                                        ; preds = %do.body59
  br label %do.body67, !dbg !6513

do.body67:                                        ; preds = %if.then66
  %54 = load ptr, ptr %sdlz, align 8, !dbg !6515
  %dlzimp68 = getelementptr inbounds %struct.dns_sdlz_db, ptr %54, i32 0, i32 2, !dbg !6515
  %55 = load ptr, ptr %dlzimp68, align 8, !dbg !6515
  %driverlock69 = getelementptr inbounds %struct.dns_sdlzimplementation, ptr %55, i32 0, i32 4, !dbg !6515
  %call70 = call i32 @pthread_mutex_unlock(ptr noundef %driverlock69) #11, !dbg !6515
  %cmp71 = icmp eq i32 %call70, 0, !dbg !6515
  %56 = zext i1 %cmp71 to i64, !dbg !6515
  %cond73 = select i1 %cmp71, i32 0, i32 34, !dbg !6515
  %cmp74 = icmp eq i32 %cond73, 0, !dbg !6515
  %lnot76 = xor i1 %cmp74, true, !dbg !6515
  %lnot78 = xor i1 %lnot76, true, !dbg !6515
  %lnot.ext79 = zext i1 %lnot78 to i32, !dbg !6515
  %conv80 = sext i32 %lnot.ext79 to i64, !dbg !6515
  %expval81 = call i64 @llvm.expect.i64(i64 %conv80, i64 1), !dbg !6515
  %tobool82 = icmp ne i64 %expval81, 0, !dbg !6515
  br i1 %tobool82, label %lor.end84, label %lor.rhs83, !dbg !6515

lor.rhs83:                                        ; preds = %do.body67
  call void @isc_error_runtimecheck(ptr noundef @.str, i32 noundef 1155, ptr noundef @.str.62) #12, !dbg !6515
  unreachable, !dbg !6515

57:                                               ; No predecessors!
  br label %lor.end84, !dbg !6515

lor.end84:                                        ; preds = %57, %do.body67
  %58 = phi i1 [ true, %do.body67 ], [ false, %57 ]
  %lor.ext85 = zext i1 %58 to i32, !dbg !6515
  br label %do.cond86, !dbg !6515

do.cond86:                                        ; preds = %lor.end84
  br label %do.end87, !dbg !6515

do.end87:                                         ; preds = %do.cond86
  br label %if.end88, !dbg !6515

if.end88:                                         ; preds = %do.end87, %do.body59
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags60) #11, !dbg !6511
  br label %do.cond89, !dbg !6512

do.cond89:                                        ; preds = %if.end88
  br label %do.end90, !dbg !6512

do.end90:                                         ; preds = %do.cond89
  br label %cleanup, !dbg !6512

cleanup:                                          ; preds = %do.end90, %if.then29, %if.then25, %if.then21, %if.then15
  tail call void @llvm.dbg.label(metadata !6404), !dbg !6517
  call void @isc_buffer_free(ptr noundef %buffer), !dbg !6518
  %59 = load ptr, ptr %style, align 8, !dbg !6519
  %cmp91 = icmp ne ptr %59, null, !dbg !6521
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !6522

if.then93:                                        ; preds = %cleanup
  %60 = load ptr, ptr %mctx, align 8, !dbg !6523
  call void @dns_master_styledestroy(ptr noundef %style, ptr noundef %60), !dbg !6524
  br label %if.end94, !dbg !6524

if.end94:                                         ; preds = %if.then93, %cleanup
  %61 = load i32, ptr %result, align 4, !dbg !6525
  store i32 %61, ptr %retval, align 4, !dbg !6526
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup95, !dbg !6526

cleanup95:                                        ; preds = %if.end94, %if.then10, %if.then
  call void @llvm.lifetime.end.p0(i64 1024, ptr %name) #11, !dbg !6527
  call void @llvm.lifetime.end.p0(i64 8, ptr %rdatastr) #11, !dbg !6527
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlznode) #11, !dbg !6527
  call void @llvm.lifetime.end.p0(i64 8, ptr %mctx) #11, !dbg !6527
  call void @llvm.lifetime.end.p0(i64 8, ptr %buffer) #11, !dbg !6527
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #11, !dbg !6527
  call void @llvm.lifetime.end.p0(i64 8, ptr %style) #11, !dbg !6527
  call void @llvm.lifetime.end.p0(i64 8, ptr %sdlz) #11, !dbg !6527
  %62 = load i32, ptr %retval, align 4, !dbg !6527
  ret i32 %62, !dbg !6527
}

; Function Attrs: null_pointer_is_valid
declare !dbg !6528 i32 @dns_master_stylecreate(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !6533 i32 @dns_master_rdatasettotext(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !6538 void @dns_master_styledestroy(ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !6541 zeroext i1 @dns_name_issubdomain(ptr noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !6542 void @dns_rdataset_init(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !6543 void @dns_rdataset_disassociate(ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare !dbg !6544 zeroext i1 @dns_rdataset_isassociated(ptr noundef) #5

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start.p0(ptr) #9

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end.p0(ptr) #9

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #10

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #10

attributes #0 = { nounwind null_pointer_is_valid uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { noreturn null_pointer_is_valid "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind null_pointer_is_valid willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { null_pointer_is_valid "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { inlinehint nounwind null_pointer_is_valid uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nounwind null_pointer_is_valid "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #9 = { nocallback nofree nosync nounwind willreturn }
attributes #10 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #11 = { nounwind }
attributes #12 = { noreturn }
attributes #13 = { nounwind willreturn memory(read) }

!llvm.dbg.cu = !{!76}
!llvm.module.flags = !{!2308, !2309, !2310, !2311, !2312}
!llvm.ident = !{!2313}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1853, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "sdlz.c", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "b5cff4f54082c9b35ea2628cfe105d5f")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 56, elements: !6)
!4 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!5 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!6 = !{!7}
!7 = !DISubrange(count: 7)
!8 = !DIGlobalVariableExpression(var: !9, expr: !DIExpression())
!9 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1853, type: !10, isLocal: true, isDefinition: true)
!10 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1376, elements: !11)
!11 = !{!12}
!12 = !DISubrange(count: 172)
!13 = !DIGlobalVariableExpression(var: !14, expr: !DIExpression())
!14 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1854, type: !15, isLocal: true, isDefinition: true)
!15 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 152, elements: !16)
!16 = !{!17}
!17 = !DISubrange(count: 19)
!18 = !DIGlobalVariableExpression(var: !19, expr: !DIExpression())
!19 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1855, type: !15, isLocal: true, isDefinition: true)
!20 = !DIGlobalVariableExpression(var: !21, expr: !DIExpression())
!21 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2025, type: !22, isLocal: true, isDefinition: true)
!22 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 160, elements: !23)
!23 = !{!24}
!24 = !DISubrange(count: 20)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2026, type: !22, isLocal: true, isDefinition: true)
!27 = !DIGlobalVariableExpression(var: !28, expr: !DIExpression())
!28 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2028, type: !29, isLocal: true, isDefinition: true)
!29 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 168, elements: !30)
!30 = !{!31}
!31 = !DISubrange(count: 21)
!32 = !DIGlobalVariableExpression(var: !33, expr: !DIExpression())
!33 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2034, type: !34, isLocal: true, isDefinition: true)
!34 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 32, elements: !35)
!35 = !{!36}
!36 = !DISubrange(count: 4)
!37 = !DIGlobalVariableExpression(var: !38, expr: !DIExpression())
!38 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2049, type: !39, isLocal: true, isDefinition: true)
!39 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 200, elements: !40)
!40 = !{!41}
!41 = !DISubrange(count: 25)
!42 = !DIGlobalVariableExpression(var: !43, expr: !DIExpression())
!43 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2050, type: !44, isLocal: true, isDefinition: true)
!44 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 176, elements: !45)
!45 = !{!46}
!46 = !DISubrange(count: 22)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2051, type: !49, isLocal: true, isDefinition: true)
!49 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 256, elements: !50)
!50 = !{!51}
!51 = !DISubrange(count: 32)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2052, type: !54, isLocal: true, isDefinition: true)
!54 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 240, elements: !55)
!55 = !{!56}
!56 = !DISubrange(count: 30)
!57 = !DIGlobalVariableExpression(var: !58, expr: !DIExpression())
!58 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2053, type: !15, isLocal: true, isDefinition: true)
!59 = !DIGlobalVariableExpression(var: !60, expr: !DIExpression())
!60 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2054, type: !61, isLocal: true, isDefinition: true)
!61 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 384, elements: !62)
!62 = !{!63}
!63 = !DISubrange(count: 48)
!64 = !DIGlobalVariableExpression(var: !65, expr: !DIExpression())
!65 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2055, type: !66, isLocal: true, isDefinition: true)
!66 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 464, elements: !67)
!67 = !{!68}
!68 = !DISubrange(count: 58)
!69 = !DIGlobalVariableExpression(var: !70, expr: !DIExpression())
!70 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2060, type: !71, isLocal: true, isDefinition: true)
!71 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 232, elements: !72)
!72 = !{!73}
!73 = !DISubrange(count: 29)
!74 = !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = distinct !DIGlobalVariable(name: "sdlzmethods", scope: !76, file: !2, line: 1824, type: !1919, isLocal: true, isDefinition: true)
!76 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !77, retainedTypes: !224, globals: !2080, splitDebugInlining: false, nameTableKind: None)
!77 = !{!78, !88, !95, !98, !104, !108, !113, !129, !136}
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !79, line: 46, baseType: !80, size: 32, elements: !81)
!79 = !DIFile(filename: "include/dns/acl.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "8449665ae1220470df829fb8ddc3551d")
!80 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!81 = !{!82, !83, !84, !85, !86, !87}
!82 = !DIEnumerator(name: "dns_aclelementtype_ipprefix", value: 0)
!83 = !DIEnumerator(name: "dns_aclelementtype_keyname", value: 1)
!84 = !DIEnumerator(name: "dns_aclelementtype_nestedacl", value: 2)
!85 = !DIEnumerator(name: "dns_aclelementtype_localhost", value: 3)
!86 = !DIEnumerator(name: "dns_aclelementtype_localnets", value: 4)
!87 = !DIEnumerator(name: "dns_aclelementtype_any", value: 5)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 213, baseType: !80, size: 32, elements: !90)
!89 = !DIFile(filename: "include/dns/types.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "f35a187441d60b1b4301c816339e75b0")
!90 = !{!91, !92, !93, !94}
!91 = !DIEnumerator(name: "dns_masterformat_none", value: 0)
!92 = !DIEnumerator(name: "dns_masterformat_text", value: 1)
!93 = !DIEnumerator(name: "dns_masterformat_raw", value: 2)
!94 = !DIEnumerator(name: "dns_masterformat_map", value: 3)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 164, baseType: !80, size: 32, elements: !96)
!96 = !{!97}
!97 = !DIEnumerator(name: "dns_hash_sha1", value: 1)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 197, baseType: !80, size: 32, elements: !99)
!99 = !{!100, !101, !102, !103}
!100 = !DIEnumerator(name: "dns_minimal_no", value: 0)
!101 = !DIEnumerator(name: "dns_minimal_yes", value: 1)
!102 = !DIEnumerator(name: "dns_minimal_noauth", value: 2)
!103 = !DIEnumerator(name: "dns_minimal_noauthrec", value: 3)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 182, baseType: !80, size: 32, elements: !105)
!105 = !{!106, !107}
!106 = !DIEnumerator(name: "dns_one_answer", value: 0)
!107 = !DIEnumerator(name: "dns_many_answers", value: 1)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 381, baseType: !80, size: 32, elements: !109)
!109 = !{!110, !111, !112}
!110 = !DIEnumerator(name: "dns_stale_answer_no", value: 0)
!111 = !DIEnumerator(name: "dns_stale_answer_yes", value: 1)
!112 = !DIEnumerator(name: "dns_stale_answer_conf", value: 2)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 65, baseType: !80, size: 32, elements: !115)
!114 = !DIFile(filename: "include/dns/rpz.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "47ba68e6731864dda9f206a7822cba5c")
!115 = !{!116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128}
!116 = !DIEnumerator(name: "DNS_RPZ_POLICY_GIVEN", value: 0)
!117 = !DIEnumerator(name: "DNS_RPZ_POLICY_DISABLED", value: 1)
!118 = !DIEnumerator(name: "DNS_RPZ_POLICY_PASSTHRU", value: 2)
!119 = !DIEnumerator(name: "DNS_RPZ_POLICY_DROP", value: 3)
!120 = !DIEnumerator(name: "DNS_RPZ_POLICY_TCP_ONLY", value: 4)
!121 = !DIEnumerator(name: "DNS_RPZ_POLICY_NXDOMAIN", value: 5)
!122 = !DIEnumerator(name: "DNS_RPZ_POLICY_NODATA", value: 6)
!123 = !DIEnumerator(name: "DNS_RPZ_POLICY_CNAME", value: 7)
!124 = !DIEnumerator(name: "DNS_RPZ_POLICY_DNS64", value: 8)
!125 = !DIEnumerator(name: "DNS_RPZ_POLICY_RECORD", value: 9)
!126 = !DIEnumerator(name: "DNS_RPZ_POLICY_WILDCNAME", value: 10)
!127 = !DIEnumerator(name: "DNS_RPZ_POLICY_MISS", value: 11)
!128 = !DIEnumerator(name: "DNS_RPZ_POLICY_ERROR", value: 12)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !130, line: 25, baseType: !80, size: 32, elements: !131)
!130 = !DIFile(filename: "isc/include/isc/assertions.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "d437064b1a440cf5712e89d244b6208d")
!131 = !{!132, !133, !134, !135}
!132 = !DIEnumerator(name: "isc_assertiontype_require", value: 0)
!133 = !DIEnumerator(name: "isc_assertiontype_ensure", value: 1)
!134 = !DIEnumerator(name: "isc_assertiontype_insist", value: 2)
!135 = !DIEnumerator(name: "isc_assertiontype_invariant", value: 3)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !137, line: 21, baseType: !80, size: 32, elements: !138)
!137 = !DIFile(filename: "include/dns/enumtype.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "11dbf2b1e0a48ddc2542c96b9ee9da38")
!138 = !{!139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223}
!139 = !DIEnumerator(name: "dns_rdatatype_none", value: 0)
!140 = !DIEnumerator(name: "dns_rdatatype_a", value: 1)
!141 = !DIEnumerator(name: "dns_rdatatype_ns", value: 2)
!142 = !DIEnumerator(name: "dns_rdatatype_md", value: 3)
!143 = !DIEnumerator(name: "dns_rdatatype_mf", value: 4)
!144 = !DIEnumerator(name: "dns_rdatatype_cname", value: 5)
!145 = !DIEnumerator(name: "dns_rdatatype_soa", value: 6)
!146 = !DIEnumerator(name: "dns_rdatatype_mb", value: 7)
!147 = !DIEnumerator(name: "dns_rdatatype_mg", value: 8)
!148 = !DIEnumerator(name: "dns_rdatatype_mr", value: 9)
!149 = !DIEnumerator(name: "dns_rdatatype_null", value: 10)
!150 = !DIEnumerator(name: "dns_rdatatype_wks", value: 11)
!151 = !DIEnumerator(name: "dns_rdatatype_ptr", value: 12)
!152 = !DIEnumerator(name: "dns_rdatatype_hinfo", value: 13)
!153 = !DIEnumerator(name: "dns_rdatatype_minfo", value: 14)
!154 = !DIEnumerator(name: "dns_rdatatype_mx", value: 15)
!155 = !DIEnumerator(name: "dns_rdatatype_txt", value: 16)
!156 = !DIEnumerator(name: "dns_rdatatype_rp", value: 17)
!157 = !DIEnumerator(name: "dns_rdatatype_afsdb", value: 18)
!158 = !DIEnumerator(name: "dns_rdatatype_x25", value: 19)
!159 = !DIEnumerator(name: "dns_rdatatype_isdn", value: 20)
!160 = !DIEnumerator(name: "dns_rdatatype_rt", value: 21)
!161 = !DIEnumerator(name: "dns_rdatatype_nsap", value: 22)
!162 = !DIEnumerator(name: "dns_rdatatype_nsap_ptr", value: 23)
!163 = !DIEnumerator(name: "dns_rdatatype_sig", value: 24)
!164 = !DIEnumerator(name: "dns_rdatatype_key", value: 25)
!165 = !DIEnumerator(name: "dns_rdatatype_px", value: 26)
!166 = !DIEnumerator(name: "dns_rdatatype_gpos", value: 27)
!167 = !DIEnumerator(name: "dns_rdatatype_aaaa", value: 28)
!168 = !DIEnumerator(name: "dns_rdatatype_loc", value: 29)
!169 = !DIEnumerator(name: "dns_rdatatype_nxt", value: 30)
!170 = !DIEnumerator(name: "dns_rdatatype_eid", value: 31)
!171 = !DIEnumerator(name: "dns_rdatatype_nimloc", value: 32)
!172 = !DIEnumerator(name: "dns_rdatatype_srv", value: 33)
!173 = !DIEnumerator(name: "dns_rdatatype_atma", value: 34)
!174 = !DIEnumerator(name: "dns_rdatatype_naptr", value: 35)
!175 = !DIEnumerator(name: "dns_rdatatype_kx", value: 36)
!176 = !DIEnumerator(name: "dns_rdatatype_cert", value: 37)
!177 = !DIEnumerator(name: "dns_rdatatype_a6", value: 38)
!178 = !DIEnumerator(name: "dns_rdatatype_dname", value: 39)
!179 = !DIEnumerator(name: "dns_rdatatype_sink", value: 40)
!180 = !DIEnumerator(name: "dns_rdatatype_opt", value: 41)
!181 = !DIEnumerator(name: "dns_rdatatype_apl", value: 42)
!182 = !DIEnumerator(name: "dns_rdatatype_ds", value: 43)
!183 = !DIEnumerator(name: "dns_rdatatype_sshfp", value: 44)
!184 = !DIEnumerator(name: "dns_rdatatype_ipseckey", value: 45)
!185 = !DIEnumerator(name: "dns_rdatatype_rrsig", value: 46)
!186 = !DIEnumerator(name: "dns_rdatatype_nsec", value: 47)
!187 = !DIEnumerator(name: "dns_rdatatype_dnskey", value: 48)
!188 = !DIEnumerator(name: "dns_rdatatype_dhcid", value: 49)
!189 = !DIEnumerator(name: "dns_rdatatype_nsec3", value: 50)
!190 = !DIEnumerator(name: "dns_rdatatype_nsec3param", value: 51)
!191 = !DIEnumerator(name: "dns_rdatatype_tlsa", value: 52)
!192 = !DIEnumerator(name: "dns_rdatatype_smimea", value: 53)
!193 = !DIEnumerator(name: "dns_rdatatype_hip", value: 55)
!194 = !DIEnumerator(name: "dns_rdatatype_ninfo", value: 56)
!195 = !DIEnumerator(name: "dns_rdatatype_rkey", value: 57)
!196 = !DIEnumerator(name: "dns_rdatatype_talink", value: 58)
!197 = !DIEnumerator(name: "dns_rdatatype_cds", value: 59)
!198 = !DIEnumerator(name: "dns_rdatatype_cdnskey", value: 60)
!199 = !DIEnumerator(name: "dns_rdatatype_openpgpkey", value: 61)
!200 = !DIEnumerator(name: "dns_rdatatype_csync", value: 62)
!201 = !DIEnumerator(name: "dns_rdatatype_zonemd", value: 63)
!202 = !DIEnumerator(name: "dns_rdatatype_spf", value: 99)
!203 = !DIEnumerator(name: "dns_rdatatype_nid", value: 104)
!204 = !DIEnumerator(name: "dns_rdatatype_l32", value: 105)
!205 = !DIEnumerator(name: "dns_rdatatype_l64", value: 106)
!206 = !DIEnumerator(name: "dns_rdatatype_lp", value: 107)
!207 = !DIEnumerator(name: "dns_rdatatype_eui48", value: 108)
!208 = !DIEnumerator(name: "dns_rdatatype_eui64", value: 109)
!209 = !DIEnumerator(name: "dns_rdatatype_tkey", value: 249)
!210 = !DIEnumerator(name: "dns_rdatatype_tsig", value: 250)
!211 = !DIEnumerator(name: "dns_rdatatype_uri", value: 256)
!212 = !DIEnumerator(name: "dns_rdatatype_caa", value: 257)
!213 = !DIEnumerator(name: "dns_rdatatype_avc", value: 258)
!214 = !DIEnumerator(name: "dns_rdatatype_doa", value: 259)
!215 = !DIEnumerator(name: "dns_rdatatype_amtrelay", value: 260)
!216 = !DIEnumerator(name: "dns_rdatatype_ta", value: 32768)
!217 = !DIEnumerator(name: "dns_rdatatype_dlv", value: 32769)
!218 = !DIEnumerator(name: "dns_rdatatype_keydata", value: 65533)
!219 = !DIEnumerator(name: "dns_rdatatype_ixfr", value: 251)
!220 = !DIEnumerator(name: "dns_rdatatype_axfr", value: 252)
!221 = !DIEnumerator(name: "dns_rdatatype_mailb", value: 253)
!222 = !DIEnumerator(name: "dns_rdatatype_maila", value: 254)
!223 = !DIEnumerator(name: "dns_rdatatype_any", value: 255)
!224 = !{!225, !226, !233, !480, !254, !255, !1237, !285, !1344, !937, !2072, !403, !984, !2074}
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc__magic_t", file: !229, line: 22, baseType: !230)
!229 = !DIFile(filename: "isc/include/isc/magic.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "8ece3f29379e72c0b49c17feca828350")
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !229, line: 20, size: 32, elements: !231)
!231 = !{!232}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !230, file: !229, line: 21, baseType: !80, size: 32)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlz_db_t", file: !235, line: 66, baseType: !236)
!235 = !DIFile(filename: "include/dns/sdlz.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "c409a1cc13bc727ebd9b6e03f17596bb")
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_sdlz_db", file: !2, line: 98, size: 1664, elements: !237)
!237 = !{!238, !1235, !1236, !2068, !2069, !2070, !2071}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !236, file: !2, line: 100, baseType: !239, size: 1024)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_db_t", file: !89, line: 54, baseType: !240)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_db", file: !241, line: 223, size: 1024, elements: !242)
!241 = !DIFile(filename: "include/dns/db.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "f7341a6445a0da00d6edbc7f74bf2ce5")
!242 = !{!243, !244, !245, !1211, !1212, !1213, !1214, !1215}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !240, file: !241, line: 224, baseType: !80, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "impmagic", scope: !240, file: !241, line: 225, baseType: !80, size: 32, offset: 32)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "methods", scope: !240, file: !241, line: 226, baseType: !246, size: 64, offset: 64)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dbmethods_t", file: !241, line: 200, baseType: !248)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_dbmethods", file: !241, line: 71, size: 3072, elements: !249)
!249 = !{!250, !256, !260, !874, !875, !879, !884, !889, !893, !897, !901, !908, !912, !916, !920, !924, !928, !932, !975, !979, !1012, !1016, !1020, !1024, !1028, !1032, !1033, !1037, !1044, !1048, !1052, !1061, !1062, !1066, !1070, !1074, !1075, !1082, !1086, !1090, !1175, !1179, !1186, !1190, !1194, !1201, !1205, !1210}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !248, file: !241, line: 72, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!252 = !DISubroutineType(types: !253)
!253 = !{null, !254, !255}
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !248, file: !241, line: 73, baseType: !257, size: 64, offset: 64)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!258 = !DISubroutineType(types: !259)
!259 = !{null, !255}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "beginload", scope: !248, file: !241, line: 74, baseType: !261, size: 64, offset: 128)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DISubroutineType(types: !263)
!263 = !{!264, !254, !266}
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_result_t", file: !265, line: 67, baseType: !80)
!265 = !DIFile(filename: "isc/include/isc/types.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "6a355582c4f962c465b18bab43b68c96")
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rdatacallbacks_t", file: !89, line: 120, baseType: !268)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rdatacallbacks", file: !269, line: 36, size: 704, elements: !270)
!269 = !DIFile(filename: "include/dns/callbacks.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "63e693eb1cc4ad6f15f89851bc8cca18")
!270 = !{!271, !272, !785, !844, !863, !864, !869, !870, !871, !872, !873}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !268, file: !269, line: 37, baseType: !80, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !268, file: !269, line: 42, baseType: !273, size: 64, offset: 64)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_addrdatasetfunc_t", file: !89, line: 400, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DISubroutineType(types: !276)
!276 = !{!264, !225, !277, !364}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !279)
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_name_t", file: !89, line: 107, baseType: !280)
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_name", file: !281, line: 104, size: 640, elements: !282)
!281 = !DIFile(filename: "include/dns/name.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "ec64c9a43875cd86cb4b0e37c1191a89")
!282 = !{!283, !284, !287, !288, !289, !290, !291, !354, !360}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !280, file: !281, line: 105, baseType: !80, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "ndata", scope: !280, file: !281, line: 106, baseType: !285, size: 64, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !280, file: !281, line: 107, baseType: !80, size: 32, offset: 128)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "labels", scope: !280, file: !281, line: 108, baseType: !80, size: 32, offset: 160)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !280, file: !281, line: 109, baseType: !80, size: 32, offset: 192)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !280, file: !281, line: 110, baseType: !285, size: 64, offset: 256)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !280, file: !281, line: 111, baseType: !292, size: 64, offset: 320)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_buffer_t", file: !265, line: 35, baseType: !294)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_buffer", file: !295, line: 173, size: 512, elements: !296)
!295 = !DIFile(filename: "isc/include/isc/buffer.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "feec9784066f3891a27281dd5bdccd55")
!296 = !{!297, !298, !299, !300, !301, !302, !303, !308, !352}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !294, file: !295, line: 174, baseType: !80, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !294, file: !295, line: 175, baseType: !225, size: 64, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !294, file: !295, line: 178, baseType: !80, size: 32, offset: 128)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !294, file: !295, line: 179, baseType: !80, size: 32, offset: 160)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !294, file: !295, line: 180, baseType: !80, size: 32, offset: 192)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !294, file: !295, line: 181, baseType: !80, size: 32, offset: 224)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !294, file: !295, line: 184, baseType: !304, size: 128, offset: 256)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !294, file: !295, line: 184, size: 128, elements: !305)
!305 = !{!306, !307}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !304, file: !295, line: 184, baseType: !292, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !304, file: !295, line: 184, baseType: !292, size: 64, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !294, file: !295, line: 186, baseType: !309, size: 64, offset: 384)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_mem_t", file: !265, line: 59, baseType: !311)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_mem", file: !312, line: 191, size: 128, elements: !313)
!312 = !DIFile(filename: "isc/include/isc/mem.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "587a841195795b087519b89f298822b2")
!313 = !{!314, !315, !316}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "impmagic", scope: !311, file: !312, line: 192, baseType: !80, size: 32)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !311, file: !312, line: 193, baseType: !80, size: 32, offset: 32)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "methods", scope: !311, file: !312, line: 194, baseType: !317, size: 64, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_memmethods_t", file: !312, line: 180, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_memmethods", file: !312, line: 170, size: 448, elements: !320)
!320 = !{!321, !329, !333, !338, !339, !343, !348}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "memget", scope: !319, file: !312, line: 171, baseType: !322, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{!225, !309, !325, !328, !80}
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !326, line: 70, baseType: !327)
!326 = !DIFile(filename: "/usr/lib/clang/18/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "592de6c0120e294e25519119517dd24e")
!327 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "memput", scope: !319, file: !312, line: 172, baseType: !330, size: 64, offset: 64)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DISubroutineType(types: !332)
!332 = !{null, !309, !225, !325, !328, !80}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "memputanddetach", scope: !319, file: !312, line: 173, baseType: !334, size: 64, offset: 128)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = !DISubroutineType(types: !336)
!336 = !{null, !337, !225, !325, !328, !80}
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "memallocate", scope: !319, file: !312, line: 175, baseType: !322, size: 64, offset: 192)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "memreallocate", scope: !319, file: !312, line: 176, baseType: !340, size: 64, offset: 256)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DISubroutineType(types: !342)
!342 = !{!225, !309, !225, !325, !328, !80}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "memstrdup", scope: !319, file: !312, line: 178, baseType: !344, size: 64, offset: 320)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DISubroutineType(types: !346)
!346 = !{!347, !309, !328, !328, !80}
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "memfree", scope: !319, file: !312, line: 179, baseType: !349, size: 64, offset: 384)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = !DISubroutineType(types: !351)
!351 = !{null, !309, !225, !328, !80}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "autore", scope: !294, file: !295, line: 188, baseType: !353, size: 8, offset: 448)
!353 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !280, file: !281, line: 112, baseType: !355, size: 128, offset: 384)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !280, file: !281, line: 112, size: 128, elements: !356)
!356 = !{!357, !359}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !355, file: !281, line: 112, baseType: !358, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !355, file: !281, line: 112, baseType: !358, size: 64, offset: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !280, file: !281, line: 113, baseType: !361, size: 128, offset: 512)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !280, file: !281, line: 113, size: 128, elements: !362)
!362 = !{!363, !784}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !361, file: !281, line: 113, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rdataset_t", file: !89, line: 123, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rdataset", file: !367, line: 107, size: 960, elements: !368)
!367 = !DIFile(filename: "include/dns/rdataset.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "a2414fd23f718a363582354673aed6a8")
!368 = !{!369, !370, !761, !766, !767, !768, !769, !770, !771, !772, !773, !774, !777, !778, !779, !780, !781, !782, !783}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !366, file: !367, line: 108, baseType: !80, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "methods", scope: !366, file: !367, line: 109, baseType: !371, size: 64, offset: 64)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rdatasetmethods_t", file: !367, line: 96, baseType: !373)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rdatasetmethods", file: !367, line: 64, size: 1024, elements: !374)
!374 = !{!375, !379, !383, !384, !410, !414, !418, !422, !426, !427, !428, !433, !434, !435, !439, !445}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "disassociate", scope: !373, file: !367, line: 65, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = !DISubroutineType(types: !378)
!378 = !{null, !364}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !373, file: !367, line: 66, baseType: !380, size: 64, offset: 64)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DISubroutineType(types: !382)
!382 = !{!264, !364}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !373, file: !367, line: 67, baseType: !380, size: 64, offset: 128)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !373, file: !367, line: 68, baseType: !385, size: 64, offset: 192)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!386 = !DISubroutineType(types: !387)
!387 = !{null, !364, !388}
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rdata_t", file: !89, line: 119, baseType: !390)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rdata", file: !391, line: 112, size: 320, elements: !392)
!391 = !DIFile(filename: "include/dns/rdata.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "e790fb4f336bc4fdcd566550403b32a6")
!392 = !{!393, !394, !395, !402, !404, !405}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !390, file: !391, line: 113, baseType: !285, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !390, file: !391, line: 114, baseType: !80, size: 32, offset: 64)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "rdclass", scope: !390, file: !391, line: 115, baseType: !396, size: 16, offset: 96)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rdataclass_t", file: !89, line: 121, baseType: !397)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !398, line: 25, baseType: !399)
!398 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !400, line: 40, baseType: !401)
!400 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!401 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !390, file: !391, line: 116, baseType: !403, size: 16, offset: 112)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rdatatype_t", file: !89, line: 126, baseType: !397)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !390, file: !391, line: 117, baseType: !80, size: 32, offset: 128)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !390, file: !391, line: 118, baseType: !406, size: 128, offset: 192)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !390, file: !391, line: 118, size: 128, elements: !407)
!407 = !{!408, !409}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !406, file: !391, line: 118, baseType: !388, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !406, file: !391, line: 118, baseType: !388, size: 64, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !373, file: !367, line: 70, baseType: !411, size: 64, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DISubroutineType(types: !413)
!413 = !{null, !364, !364}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !373, file: !367, line: 72, baseType: !415, size: 64, offset: 320)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DISubroutineType(types: !417)
!417 = !{!80, !364}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "addnoqname", scope: !373, file: !367, line: 73, baseType: !419, size: 64, offset: 384)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DISubroutineType(types: !421)
!421 = !{!264, !364, !277}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "getnoqname", scope: !373, file: !367, line: 75, baseType: !423, size: 64, offset: 448)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DISubroutineType(types: !425)
!425 = !{!264, !364, !358, !364, !364}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "addclosest", scope: !373, file: !367, line: 79, baseType: !419, size: 64, offset: 512)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "getclosest", scope: !373, file: !367, line: 81, baseType: !423, size: 64, offset: 576)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "settrust", scope: !373, file: !367, line: 85, baseType: !429, size: 64, offset: 640)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DISubroutineType(types: !431)
!431 = !{null, !364, !432}
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_trust_t", file: !89, line: 140, baseType: !397)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "expire", scope: !373, file: !367, line: 87, baseType: !376, size: 64, offset: 704)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "clearprefetch", scope: !373, file: !367, line: 88, baseType: !376, size: 64, offset: 768)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "setownercase", scope: !373, file: !367, line: 89, baseType: !436, size: 64, offset: 832)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = !DISubroutineType(types: !438)
!438 = !{null, !364, !277}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "getownercase", scope: !373, file: !367, line: 91, baseType: !440, size: 64, offset: 896)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = !DISubroutineType(types: !442)
!442 = !{null, !443, !358}
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !365)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "addglue", scope: !373, file: !367, line: 93, baseType: !446, size: 64, offset: 960)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DISubroutineType(types: !448)
!448 = !{!264, !364, !449, !451}
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dbversion_t", file: !89, line: 61, baseType: null)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_message_t", file: !89, line: 103, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_message", file: !454, line: 197, size: 3840, elements: !455)
!454 = !DIFile(filename: "include/dns/message.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "6416f0e57c4314c86bb1ccbb29bdbc0d")
!455 = !{!456, !457, !459, !460, !462, !464, !465, !467, !474, !476, !477, !478, !479, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !533, !534, !541, !542, !548, !549, !557, !562, !567, !572, !601, !602, !603, !604, !605, !609, !614, !615, !616, !617, !621, !622, !623, !624, !633}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !453, file: !454, line: 199, baseType: !80, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !453, file: !454, line: 201, baseType: !458, size: 16, offset: 32)
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_messageid_t", file: !89, line: 104, baseType: !397)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !453, file: !454, line: 202, baseType: !80, size: 32, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "rcode", scope: !453, file: !454, line: 203, baseType: !461, size: 16, offset: 96)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rcode_t", file: !89, line: 118, baseType: !397)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !453, file: !454, line: 204, baseType: !463, size: 16, offset: 112)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_opcode_t", file: !89, line: 111, baseType: !397)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "rdclass", scope: !453, file: !454, line: 205, baseType: !396, size: 16, offset: 128)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "counts", scope: !453, file: !454, line: 208, baseType: !466, size: 128, offset: 160)
!466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 128, elements: !35)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "sections", scope: !453, file: !454, line: 211, baseType: !468, size: 512, offset: 320)
!468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 512, elements: !35)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_namelist_t", file: !89, line: 108, baseType: !470)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !89, line: 108, size: 128, elements: !471)
!471 = !{!472, !473}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !470, file: !89, line: 108, baseType: !358, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !470, file: !89, line: 108, baseType: !358, size: 64, offset: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "cursors", scope: !453, file: !454, line: 212, baseType: !475, size: 256, offset: 832)
!475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 256, elements: !35)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "opt", scope: !453, file: !454, line: 213, baseType: !364, size: 64, offset: 1088)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "sig0", scope: !453, file: !454, line: 214, baseType: !364, size: 64, offset: 1152)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "tsig", scope: !453, file: !454, line: 215, baseType: !364, size: 64, offset: 1216)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !453, file: !454, line: 217, baseType: !480, size: 32, offset: 1280)
!480 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "from_to_wire", scope: !453, file: !454, line: 218, baseType: !80, size: 2, offset: 1312, flags: DIFlagBitField, extraData: i64 1312)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "header_ok", scope: !453, file: !454, line: 219, baseType: !80, size: 1, offset: 1314, flags: DIFlagBitField, extraData: i64 1312)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "question_ok", scope: !453, file: !454, line: 220, baseType: !80, size: 1, offset: 1315, flags: DIFlagBitField, extraData: i64 1312)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_continuation", scope: !453, file: !454, line: 221, baseType: !80, size: 1, offset: 1316, flags: DIFlagBitField, extraData: i64 1312)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "verified_sig", scope: !453, file: !454, line: 222, baseType: !80, size: 1, offset: 1317, flags: DIFlagBitField, extraData: i64 1312)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "verify_attempted", scope: !453, file: !454, line: 223, baseType: !80, size: 1, offset: 1318, flags: DIFlagBitField, extraData: i64 1312)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "free_query", scope: !453, file: !454, line: 224, baseType: !80, size: 1, offset: 1319, flags: DIFlagBitField, extraData: i64 1312)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "free_saved", scope: !453, file: !454, line: 225, baseType: !80, size: 1, offset: 1320, flags: DIFlagBitField, extraData: i64 1312)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "cc_ok", scope: !453, file: !454, line: 226, baseType: !80, size: 1, offset: 1321, flags: DIFlagBitField, extraData: i64 1312)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "cc_bad", scope: !453, file: !454, line: 227, baseType: !80, size: 1, offset: 1322, flags: DIFlagBitField, extraData: i64 1312)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "tkey", scope: !453, file: !454, line: 228, baseType: !80, size: 1, offset: 1323, flags: DIFlagBitField, extraData: i64 1312)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "rdclass_set", scope: !453, file: !454, line: 229, baseType: !80, size: 1, offset: 1324, flags: DIFlagBitField, extraData: i64 1312)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "opt_reserved", scope: !453, file: !454, line: 231, baseType: !80, size: 32, offset: 1344)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "sig_reserved", scope: !453, file: !454, line: 232, baseType: !80, size: 32, offset: 1376)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !453, file: !454, line: 233, baseType: !80, size: 32, offset: 1408)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !453, file: !454, line: 235, baseType: !397, size: 16, offset: 1440)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "padding_off", scope: !453, file: !454, line: 236, baseType: !80, size: 32, offset: 1472)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !453, file: !454, line: 238, baseType: !292, size: 64, offset: 1536)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "cctx", scope: !453, file: !454, line: 239, baseType: !500, size: 64, offset: 1600)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_compress_t", file: !89, line: 53, baseType: !502)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_compress", file: !503, line: 66, size: 18688, elements: !504)
!503 = !DIFile(filename: "include/dns/compress.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "ae360072e6dd15c4fe76c4efa2dcea4c")
!504 = !{!505, !506, !507, !508, !527, !531, !532}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !502, file: !503, line: 67, baseType: !80, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !502, file: !503, line: 68, baseType: !80, size: 32, offset: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "edns", scope: !502, file: !503, line: 69, baseType: !480, size: 32, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !502, file: !503, line: 71, baseType: !509, size: 4096, offset: 128)
!509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !510, size: 4096, elements: !525)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_compressnode_t", file: !503, line: 56, baseType: !512)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_compressnode", file: !503, line: 58, size: 896, elements: !513)
!513 = !{!514, !515, !516, !517, !524}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !512, file: !503, line: 59, baseType: !510, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !512, file: !503, line: 60, baseType: !397, size: 16, offset: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !512, file: !503, line: 61, baseType: !397, size: 16, offset: 80)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !512, file: !503, line: 62, baseType: !518, size: 128, offset: 128)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_region_t", file: !265, line: 65, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_region", file: !520, line: 21, size: 128, elements: !521)
!520 = !DIFile(filename: "isc/include/isc/region.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "2ed4a07dc05ddbd48f51e2dc9be9f317")
!521 = !{!522, !523}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !519, file: !520, line: 22, baseType: !285, size: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !519, file: !520, line: 23, baseType: !80, size: 32, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !512, file: !503, line: 63, baseType: !279, size: 640, offset: 256)
!525 = !{!526}
!526 = !DISubrange(count: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "initialnodes", scope: !502, file: !503, line: 73, baseType: !528, size: 14336, offset: 4224)
!528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !511, size: 14336, elements: !529)
!529 = !{!530}
!530 = !DISubrange(count: 16)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !502, file: !503, line: 74, baseType: !397, size: 16, offset: 18560)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !502, file: !503, line: 75, baseType: !309, size: 64, offset: 18624)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !453, file: !454, line: 241, baseType: !309, size: 64, offset: 1664)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "namepool", scope: !453, file: !454, line: 242, baseType: !535, size: 64, offset: 1728)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_mempool_t", file: !265, line: 60, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_mempool", file: !312, line: 205, size: 64, elements: !538)
!538 = !{!539, !540}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "impmagic", scope: !537, file: !312, line: 206, baseType: !80, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !537, file: !312, line: 207, baseType: !80, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "rdspool", scope: !453, file: !454, line: 243, baseType: !535, size: 64, offset: 1792)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "scratchpad", scope: !453, file: !454, line: 245, baseType: !543, size: 128, offset: 1856)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_bufferlist_t", file: !265, line: 36, baseType: !544)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !265, line: 36, size: 128, elements: !545)
!545 = !{!546, !547}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !544, file: !265, line: 36, baseType: !292, size: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !544, file: !265, line: 36, baseType: !292, size: 64, offset: 64)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !453, file: !454, line: 246, baseType: !543, size: 128, offset: 1984)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "rdatas", scope: !453, file: !454, line: 248, baseType: !550, size: 128, offset: 2112)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !453, file: !454, line: 248, size: 128, elements: !551)
!551 = !{!552, !556}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !550, file: !454, line: 248, baseType: !553, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_msgblock_t", file: !454, line: 189, baseType: !555)
!555 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_msgblock", file: !454, line: 189, flags: DIFlagFwdDecl)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !550, file: !454, line: 248, baseType: !553, size: 64, offset: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "rdatalists", scope: !453, file: !454, line: 249, baseType: !558, size: 128, offset: 2240)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !453, file: !454, line: 249, size: 128, elements: !559)
!559 = !{!560, !561}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !558, file: !454, line: 249, baseType: !553, size: 64)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !558, file: !454, line: 249, baseType: !553, size: 64, offset: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !453, file: !454, line: 250, baseType: !563, size: 128, offset: 2368)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !453, file: !454, line: 250, size: 128, elements: !564)
!564 = !{!565, !566}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !563, file: !454, line: 250, baseType: !553, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !563, file: !454, line: 250, baseType: !553, size: 64, offset: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "freerdata", scope: !453, file: !454, line: 252, baseType: !568, size: 128, offset: 2496)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !453, file: !454, line: 252, size: 128, elements: !569)
!569 = !{!570, !571}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !568, file: !454, line: 252, baseType: !388, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !568, file: !454, line: 252, baseType: !388, size: 64, offset: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "freerdatalist", scope: !453, file: !454, line: 253, baseType: !573, size: 128, offset: 2624)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !453, file: !454, line: 253, size: 128, elements: !574)
!574 = !{!575, !600}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !573, file: !454, line: 253, baseType: !576, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rdatalist_t", file: !89, line: 122, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rdatalist", file: !579, line: 47, size: 640, elements: !580)
!579 = !DIFile(filename: "include/dns/rdatalist.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "83ad1004003459f099937cac6d2eb8e0")
!580 = !{!581, !582, !583, !584, !588, !593, !598}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "rdclass", scope: !578, file: !579, line: 48, baseType: !396, size: 16)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !578, file: !579, line: 49, baseType: !403, size: 16, offset: 16)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "covers", scope: !578, file: !579, line: 50, baseType: !403, size: 16, offset: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !578, file: !579, line: 51, baseType: !585, size: 32, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_ttl_t", file: !89, line: 144, baseType: !586)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !398, line: 26, baseType: !587)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !400, line: 42, baseType: !80)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "rdata", scope: !578, file: !579, line: 52, baseType: !589, size: 128, offset: 128)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !578, file: !579, line: 52, size: 128, elements: !590)
!590 = !{!591, !592}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !589, file: !579, line: 52, baseType: !388, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !589, file: !579, line: 52, baseType: !388, size: 64, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !578, file: !579, line: 53, baseType: !594, size: 128, offset: 256)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !578, file: !579, line: 53, size: 128, elements: !595)
!595 = !{!596, !597}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !594, file: !579, line: 53, baseType: !576, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !594, file: !579, line: 53, baseType: !576, size: 64, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !578, file: !579, line: 59, baseType: !599, size: 256, offset: 384)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 256, elements: !50)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !573, file: !454, line: 253, baseType: !576, size: 64, offset: 64)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "tsigstatus", scope: !453, file: !454, line: 255, baseType: !461, size: 16, offset: 2752)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "querytsigstatus", scope: !453, file: !454, line: 256, baseType: !461, size: 16, offset: 2768)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "tsigname", scope: !453, file: !454, line: 257, baseType: !358, size: 64, offset: 2816)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "querytsig", scope: !453, file: !454, line: 258, baseType: !364, size: 64, offset: 2880)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "tsigkey", scope: !453, file: !454, line: 259, baseType: !606, size: 64, offset: 2944)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_tsigkey_t", file: !89, line: 143, baseType: !608)
!608 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_tsigkey", file: !89, line: 143, flags: DIFlagFwdDecl)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "tsigctx", scope: !453, file: !454, line: 260, baseType: !610, size: 64, offset: 3008)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "dst_context_t", file: !612, line: 45, baseType: !613)
!612 = !DIFile(filename: "include/dst/dst.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "10e76bcacbe005e6cc7dee2ac6ffac9a")
!613 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_context", file: !612, line: 45, flags: DIFlagFwdDecl)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "sigstart", scope: !453, file: !454, line: 261, baseType: !480, size: 32, offset: 3072)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "timeadjust", scope: !453, file: !454, line: 262, baseType: !480, size: 32, offset: 3104)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "sig0name", scope: !453, file: !454, line: 264, baseType: !358, size: 64, offset: 3136)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "sig0key", scope: !453, file: !454, line: 265, baseType: !618, size: 64, offset: 3200)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "dst_key_t", file: !612, line: 44, baseType: !620)
!620 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_key", file: !612, line: 44, flags: DIFlagFwdDecl)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "sig0status", scope: !453, file: !454, line: 266, baseType: !461, size: 16, offset: 3264)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !453, file: !454, line: 267, baseType: !518, size: 128, offset: 3328)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !453, file: !454, line: 268, baseType: !518, size: 128, offset: 3456)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !453, file: !454, line: 270, baseType: !625, size: 64, offset: 3584)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rdatasetorderfunc_t", file: !89, line: 415, baseType: !626)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DISubroutineType(types: !628)
!628 = !{!480, !629, !631}
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !389)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "order_arg", scope: !453, file: !454, line: 271, baseType: !634, size: 192, offset: 3648)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sortlist_arg_t", file: !89, line: 134, baseType: !635)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_sortlist_arg", file: !454, line: 191, size: 192, elements: !636)
!636 = !{!637, !755, !758}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !635, file: !454, line: 192, baseType: !638, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_aclenv_t", file: !89, line: 32, baseType: !640)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_aclenv", file: !79, line: 90, size: 192, elements: !641)
!641 = !{!642, !753, !754}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "localhost", scope: !640, file: !79, line: 91, baseType: !643, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_acl_t", file: !89, line: 30, baseType: !645)
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_acl", file: !79, line: 76, size: 640, elements: !646)
!646 = !{!647, !648, !649, !657, !733, !744, !745, !746, !747, !748}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !645, file: !79, line: 77, baseType: !80, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !645, file: !79, line: 78, baseType: !309, size: 64, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !645, file: !79, line: 79, baseType: !650, size: 64, offset: 128)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_refcount_t", file: !651, line: 33, baseType: !652)
!651 = !DIFile(filename: "isc/include/isc/refcount.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "91efe302f7658e72e20c0f8ed1bea09f")
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_uint_fast32_t", file: !653, line: 123, baseType: !654)
!653 = !DIFile(filename: "/usr/lib/clang/18/include/stdatomic.h", directory: "", checksumkind: CSK_MD5, checksum: "1c2aee2a953dfc5407753d1f439b6977")
!654 = !DIDerivedType(tag: DW_TAG_atomic_type, baseType: !655)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !656, line: 74, baseType: !327)
!656 = !DIFile(filename: "/usr/include/stdint.h", directory: "", checksumkind: CSK_MD5, checksum: "a48e64edacc5b19f56c99745232c963c")
!657 = !DIDerivedType(tag: DW_TAG_member, name: "iptable", scope: !645, file: !79, line: 80, baseType: !658, size: 64, offset: 192)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_iptable_t", file: !89, line: 92, baseType: !660)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_iptable", file: !661, line: 24, size: 384, elements: !662)
!661 = !DIFile(filename: "include/dns/iptable.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "44ddbfe18541d6c9d7b36fcfec983270")
!662 = !{!663, !664, !665, !666, !728}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !660, file: !661, line: 25, baseType: !80, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !660, file: !661, line: 26, baseType: !309, size: 64, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !660, file: !661, line: 27, baseType: !650, size: 64, offset: 128)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "radix", scope: !660, file: !661, line: 28, baseType: !667, size: 64, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_radix_tree_t", file: !669, line: 108, baseType: !670)
!669 = !DIFile(filename: "isc/include/isc/radix.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "349efdba94ad90663f1e49de2024c1c4")
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_radix_tree", file: !669, line: 101, size: 320, elements: !671)
!671 = !{!672, !673, !674, !725, !726, !727}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !670, file: !669, line: 102, baseType: !80, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !670, file: !669, line: 103, baseType: !309, size: 64, offset: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !670, file: !669, line: 104, baseType: !675, size: 64, offset: 128)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_radix_node_t", file: !669, line: 96, baseType: !677)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_radix_node", file: !669, line: 87, size: 576, elements: !678)
!678 = !{!679, !680, !681, !715, !717, !718, !719, !723}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !677, file: !669, line: 88, baseType: !309, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !677, file: !669, line: 89, baseType: !586, size: 32, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !677, file: !669, line: 90, baseType: !682, size: 64, offset: 128)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_prefix_t", file: !669, line: 54, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_prefix", file: !669, line: 45, size: 320, elements: !685)
!685 = !{!686, !687, !688, !689, !690}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !684, file: !669, line: 46, baseType: !309, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !684, file: !669, line: 47, baseType: !80, size: 32, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "bitlen", scope: !684, file: !669, line: 48, baseType: !80, size: 32, offset: 96)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !684, file: !669, line: 49, baseType: !650, size: 64, offset: 128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !684, file: !669, line: 53, baseType: !691, size: 128, offset: 192)
!691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !684, file: !669, line: 50, size: 128, elements: !692)
!692 = !{!693, !699}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !691, file: !669, line: 51, baseType: !694, size: 32)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !695, line: 31, size: 32, elements: !696)
!695 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "", checksumkind: CSK_MD5, checksum: "eb6560f10d4cfe9f30fea2c92b9da0fd")
!696 = !{!697}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !694, file: !695, line: 33, baseType: !698, size: 32)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !695, line: 30, baseType: !586)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "sin6", scope: !691, file: !669, line: 52, baseType: !700, size: 128)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !695, line: 219, size: 128, elements: !701)
!701 = !{!702}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "__in6_u", scope: !700, file: !695, line: 226, baseType: !703, size: 128)
!703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !700, file: !695, line: 221, size: 128, elements: !704)
!704 = !{!705, !709, !713}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !703, file: !695, line: 223, baseType: !706, size: 128)
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 128, elements: !529)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !398, line: 24, baseType: !708)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !400, line: 38, baseType: !286)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !703, file: !695, line: 224, baseType: !710, size: 128)
!710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 128, elements: !711)
!711 = !{!712}
!712 = !DISubrange(count: 8)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !703, file: !695, line: 225, baseType: !714, size: 128)
!714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 128, elements: !35)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !677, file: !669, line: 91, baseType: !716, size: 64, offset: 192)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !677, file: !669, line: 91, baseType: !716, size: 64, offset: 256)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !677, file: !669, line: 92, baseType: !716, size: 64, offset: 320)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !677, file: !669, line: 93, baseType: !720, size: 128, offset: 384)
!720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !225, size: 128, elements: !721)
!721 = !{!722}
!722 = !DISubrange(count: 2)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "node_num", scope: !677, file: !669, line: 94, baseType: !724, size: 64, offset: 512)
!724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 64, elements: !721)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "maxbits", scope: !670, file: !669, line: 105, baseType: !586, size: 32, offset: 192)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "num_active_node", scope: !670, file: !669, line: 106, baseType: !480, size: 32, offset: 224)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "num_added_node", scope: !670, file: !669, line: 107, baseType: !480, size: 32, offset: 256)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "nextincache", scope: !660, file: !661, line: 29, baseType: !729, size: 128, offset: 256)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !660, file: !661, line: 29, size: 128, elements: !730)
!730 = !{!731, !732}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !729, file: !661, line: 29, baseType: !658, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !729, file: !661, line: 29, baseType: !658, size: 64, offset: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !645, file: !79, line: 82, baseType: !734, size: 64, offset: 256)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_aclelement_t", file: !89, line: 31, baseType: !736)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_aclelement", file: !79, line: 65, size: 832, elements: !737)
!737 = !{!738, !740, !741, !742, !743}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !736, file: !79, line: 66, baseType: !739, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_aclelementtype_t", file: !79, line: 56, baseType: !78)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "negative", scope: !736, file: !79, line: 67, baseType: !353, size: 8, offset: 32)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "keyname", scope: !736, file: !79, line: 68, baseType: !279, size: 640, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "nestedacl", scope: !736, file: !79, line: 72, baseType: !643, size: 64, offset: 704)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "node_num", scope: !736, file: !79, line: 73, baseType: !480, size: 32, offset: 768)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "has_negatives", scope: !645, file: !79, line: 83, baseType: !353, size: 8, offset: 320)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !645, file: !79, line: 84, baseType: !80, size: 32, offset: 352)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !645, file: !79, line: 85, baseType: !80, size: 32, offset: 384)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !645, file: !79, line: 86, baseType: !347, size: 64, offset: 448)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "nextincache", scope: !645, file: !79, line: 87, baseType: !749, size: 128, offset: 512)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !645, file: !79, line: 87, size: 128, elements: !750)
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !749, file: !79, line: 87, baseType: !643, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !749, file: !79, line: 87, baseType: !643, size: 64, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "localnets", scope: !640, file: !79, line: 92, baseType: !643, size: 64, offset: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "match_mapped", scope: !640, file: !79, line: 93, baseType: !353, size: 8, offset: 128)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !635, file: !454, line: 193, baseType: !756, size: 64, offset: 64)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !644)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !635, file: !454, line: 194, baseType: !759, size: 64, offset: 128)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !735)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !366, file: !367, line: 110, baseType: !762, size: 128, offset: 128)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !366, file: !367, line: 110, size: 128, elements: !763)
!763 = !{!764, !765}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !762, file: !367, line: 110, baseType: !364, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !762, file: !367, line: 110, baseType: !364, size: 64, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "rdclass", scope: !366, file: !367, line: 117, baseType: !396, size: 16, offset: 256)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !366, file: !367, line: 118, baseType: !403, size: 16, offset: 272)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !366, file: !367, line: 119, baseType: !585, size: 32, offset: 288)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "stale_ttl", scope: !366, file: !367, line: 124, baseType: !585, size: 32, offset: 320)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "trust", scope: !366, file: !367, line: 125, baseType: !432, size: 16, offset: 352)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "covers", scope: !366, file: !367, line: 126, baseType: !403, size: 16, offset: 368)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !366, file: !367, line: 131, baseType: !80, size: 32, offset: 384)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !366, file: !367, line: 139, baseType: !586, size: 32, offset: 416)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "resign", scope: !366, file: !367, line: 145, baseType: !775, size: 32, offset: 448)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_stdtime_t", file: !776, line: 26, baseType: !586)
!776 = !DIFile(filename: "../../lib/isc/unix/include/isc/stdtime.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "b8868fded6c0eb282ad50986c628a693")
!777 = !DIDerivedType(tag: DW_TAG_member, name: "private1", scope: !366, file: !367, line: 152, baseType: !225, size: 64, offset: 512)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "private2", scope: !366, file: !367, line: 153, baseType: !225, size: 64, offset: 576)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "private3", scope: !366, file: !367, line: 154, baseType: !225, size: 64, offset: 640)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "privateuint4", scope: !366, file: !367, line: 155, baseType: !80, size: 32, offset: 704)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "private5", scope: !366, file: !367, line: 156, baseType: !225, size: 64, offset: 768)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "private6", scope: !366, file: !367, line: 157, baseType: !631, size: 64, offset: 832)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "private7", scope: !366, file: !367, line: 158, baseType: !631, size: 64, offset: 896)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !361, file: !281, line: 113, baseType: !364, size: 64, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "deserialize", scope: !268, file: !269, line: 48, baseType: !786, size: 64, offset: 128)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_deserializefunc_t", file: !89, line: 432, baseType: !787)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DISubroutineType(types: !789)
!789 = !{!264, !225, !790, !842}
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !792, line: 7, baseType: !793)
!792 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "571f9fb6223c42439075fdde11a0de5d")
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !794, line: 49, size: 1728, elements: !795)
!794 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "1bad07471b7974df4ecc1d1c2ca207e6")
!795 = !{!796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !811, !813, !814, !815, !818, !819, !821, !825, !828, !830, !833, !836, !837, !838, !839, !840}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !793, file: !794, line: 51, baseType: !480, size: 32)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !793, file: !794, line: 54, baseType: !347, size: 64, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !793, file: !794, line: 55, baseType: !347, size: 64, offset: 128)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !793, file: !794, line: 56, baseType: !347, size: 64, offset: 192)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !793, file: !794, line: 57, baseType: !347, size: 64, offset: 256)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !793, file: !794, line: 58, baseType: !347, size: 64, offset: 320)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !793, file: !794, line: 59, baseType: !347, size: 64, offset: 384)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !793, file: !794, line: 60, baseType: !347, size: 64, offset: 448)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !793, file: !794, line: 61, baseType: !347, size: 64, offset: 512)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !793, file: !794, line: 64, baseType: !347, size: 64, offset: 576)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !793, file: !794, line: 65, baseType: !347, size: 64, offset: 640)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !793, file: !794, line: 66, baseType: !347, size: 64, offset: 704)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !793, file: !794, line: 68, baseType: !809, size: 64, offset: 768)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !794, line: 36, flags: DIFlagFwdDecl)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !793, file: !794, line: 70, baseType: !812, size: 64, offset: 832)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !793, file: !794, line: 72, baseType: !480, size: 32, offset: 896)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !793, file: !794, line: 73, baseType: !480, size: 32, offset: 928)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !793, file: !794, line: 74, baseType: !816, size: 64, offset: 960)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !400, line: 152, baseType: !817)
!817 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !793, file: !794, line: 77, baseType: !401, size: 16, offset: 1024)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !793, file: !794, line: 78, baseType: !820, size: 8, offset: 1040)
!820 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !793, file: !794, line: 79, baseType: !822, size: 8, offset: 1048)
!822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 8, elements: !823)
!823 = !{!824}
!824 = !DISubrange(count: 1)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !793, file: !794, line: 81, baseType: !826, size: 64, offset: 1088)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !794, line: 43, baseType: null)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !793, file: !794, line: 89, baseType: !829, size: 64, offset: 1152)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !400, line: 153, baseType: !817)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !793, file: !794, line: 91, baseType: !831, size: 64, offset: 1216)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !794, line: 37, flags: DIFlagFwdDecl)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !793, file: !794, line: 92, baseType: !834, size: 64, offset: 1280)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !794, line: 38, flags: DIFlagFwdDecl)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !793, file: !794, line: 93, baseType: !812, size: 64, offset: 1344)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !793, file: !794, line: 94, baseType: !225, size: 64, offset: 1408)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !793, file: !794, line: 95, baseType: !325, size: 64, offset: 1472)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !793, file: !794, line: 96, baseType: !480, size: 32, offset: 1536)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !793, file: !794, line: 98, baseType: !841, size: 160, offset: 1568)
!841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 160, elements: !23)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !843, line: 85, baseType: !816)
!843 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "", checksumkind: CSK_MD5, checksum: "e62424071ad3f1b4d088c139fd9ccfd1")
!844 = !DIDerivedType(tag: DW_TAG_member, name: "rawdata", scope: !268, file: !269, line: 54, baseType: !845, size: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rawdatafunc_t", file: !89, line: 397, baseType: !846)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{null, !849, !852}
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_zone_t", file: !89, line: 149, baseType: !851)
!851 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_zone", file: !89, line: 149, flags: DIFlagFwdDecl)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_masterrawheader_t", file: !89, line: 101, baseType: !854)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_masterrawheader", file: !855, line: 75, size: 192, elements: !856)
!855 = !DIFile(filename: "include/dns/master.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "9c4212df68cef85d47e8b24e204803a0")
!856 = !{!857, !858, !859, !860, !861, !862}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !854, file: !855, line: 76, baseType: !586, size: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !854, file: !855, line: 80, baseType: !586, size: 32, offset: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "dumptime", scope: !854, file: !855, line: 82, baseType: !586, size: 32, offset: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !854, file: !855, line: 84, baseType: !586, size: 32, offset: 96)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "sourceserial", scope: !854, file: !855, line: 85, baseType: !586, size: 32, offset: 128)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "lastxfrin", scope: !854, file: !855, line: 87, baseType: !586, size: 32, offset: 160)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "zone", scope: !268, file: !269, line: 55, baseType: !849, size: 64, offset: 256)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !268, file: !269, line: 60, baseType: !865, size: 64, offset: 320)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{null, !868, !328, null}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "warn", scope: !268, file: !269, line: 64, baseType: !865, size: 64, offset: 384)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "add_private", scope: !268, file: !269, line: 68, baseType: !225, size: 64, offset: 448)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "deserialize_private", scope: !268, file: !269, line: 69, baseType: !225, size: 64, offset: 512)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "error_private", scope: !268, file: !269, line: 70, baseType: !225, size: 64, offset: 576)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "warn_private", scope: !268, file: !269, line: 71, baseType: !225, size: 64, offset: 640)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "endload", scope: !248, file: !241, line: 76, baseType: !261, size: 64, offset: 192)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "serialize", scope: !248, file: !241, line: 78, baseType: !876, size: 64, offset: 256)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DISubroutineType(types: !878)
!878 = !{!264, !254, !449, !790}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !248, file: !241, line: 80, baseType: !880, size: 64, offset: 320)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{!264, !254, !449, !328, !883}
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_masterformat_t", file: !89, line: 218, baseType: !88)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "currentversion", scope: !248, file: !241, line: 83, baseType: !885, size: 64, offset: 384)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DISubroutineType(types: !887)
!887 = !{null, !254, !888}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "newversion", scope: !248, file: !241, line: 85, baseType: !890, size: 64, offset: 448)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DISubroutineType(types: !892)
!892 = !{!264, !254, !888}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "attachversion", scope: !248, file: !241, line: 87, baseType: !894, size: 64, offset: 512)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DISubroutineType(types: !896)
!896 = !{null, !254, !449, !888}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "closeversion", scope: !248, file: !241, line: 89, baseType: !898, size: 64, offset: 576)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DISubroutineType(types: !900)
!900 = !{null, !254, !888, !353}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "findnode", scope: !248, file: !241, line: 92, baseType: !902, size: 64, offset: 640)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{!264, !254, !277, !353, !905}
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dbnode_t", file: !89, line: 58, baseType: null)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !248, file: !241, line: 95, baseType: !909, size: 64, offset: 704)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DISubroutineType(types: !911)
!911 = !{!264, !254, !277, !449, !403, !80, !775, !905, !358, !364, !364}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "findzonecut", scope: !248, file: !241, line: 102, baseType: !913, size: 64, offset: 768)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{!264, !254, !277, !80, !775, !905, !358, !358, !364, !364}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "attachnode", scope: !248, file: !241, line: 109, baseType: !917, size: 64, offset: 832)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{null, !254, !906, !905}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "detachnode", scope: !248, file: !241, line: 112, baseType: !921, size: 64, offset: 896)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{null, !254, !905}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "expirenode", scope: !248, file: !241, line: 114, baseType: !925, size: 64, offset: 960)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DISubroutineType(types: !927)
!927 = !{!264, !254, !906, !775}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "printnode", scope: !248, file: !241, line: 116, baseType: !929, size: 64, offset: 1024)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{null, !254, !906, !790}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "createiterator", scope: !248, file: !241, line: 118, baseType: !933, size: 64, offset: 1088)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = !DISubroutineType(types: !935)
!935 = !{!264, !254, !80, !936}
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dbiterator_t", file: !89, line: 56, baseType: !939)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_dbiterator", file: !940, line: 97, size: 256, elements: !941)
!940 = !DIFile(filename: "include/dns/dbiterator.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "e80aa0115ff591a0b9e600123d76473d")
!941 = !{!942, !943, !972, !973, !974}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !939, file: !940, line: 99, baseType: !80, size: 32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "methods", scope: !939, file: !940, line: 100, baseType: !944, size: 64, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dbiteratormethods_t", file: !940, line: 83, baseType: !946)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_dbiteratormethods", file: !940, line: 70, size: 576, elements: !947)
!947 = !{!948, !952, !956, !957, !961, !962, !963, !967, !968}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !946, file: !940, line: 71, baseType: !949, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{null, !936}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !946, file: !940, line: 72, baseType: !953, size: 64, offset: 64)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!264, !937}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !946, file: !940, line: 73, baseType: !953, size: 64, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !946, file: !940, line: 74, baseType: !958, size: 64, offset: 192)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DISubroutineType(types: !960)
!960 = !{!264, !937, !277}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !946, file: !940, line: 76, baseType: !953, size: 64, offset: 256)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !946, file: !940, line: 77, baseType: !953, size: 64, offset: 320)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !946, file: !940, line: 78, baseType: !964, size: 64, offset: 384)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{!264, !937, !905, !358}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "pause", scope: !946, file: !940, line: 80, baseType: !953, size: 64, offset: 448)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !946, file: !940, line: 81, baseType: !969, size: 64, offset: 512)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{!264, !937, !358}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !939, file: !940, line: 101, baseType: !254, size: 64, offset: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "relative_names", scope: !939, file: !940, line: 102, baseType: !353, size: 8, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "cleaning", scope: !939, file: !940, line: 103, baseType: !353, size: 8, offset: 200)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "findrdataset", scope: !248, file: !241, line: 120, baseType: !976, size: 64, offset: 1152)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = !DISubroutineType(types: !978)
!978 = !{!264, !254, !906, !449, !403, !403, !775, !364, !364}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "allrdatasets", scope: !248, file: !241, line: 127, baseType: !980, size: 64, offset: 1216)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{!264, !254, !906, !449, !775, !983}
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rdatasetiter_t", file: !89, line: 125, baseType: !986)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rdatasetiter", file: !987, line: 89, size: 384, elements: !988)
!987 = !DIFile(filename: "include/dns/rdatasetiter.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "9746ed7a00ac2faebfbf0cffc47d675f")
!988 = !{!989, !990, !1008, !1009, !1010, !1011}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !986, file: !987, line: 91, baseType: !80, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "methods", scope: !986, file: !987, line: 92, baseType: !991, size: 64, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rdatasetitermethods_t", file: !987, line: 75, baseType: !993)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rdatasetitermethods", file: !987, line: 69, size: 256, elements: !994)
!994 = !{!995, !999, !1003, !1004}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !993, file: !987, line: 70, baseType: !996, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{null, !983}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !993, file: !987, line: 71, baseType: !1000, size: 64, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!264, !984}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !993, file: !987, line: 72, baseType: !1000, size: 64, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !993, file: !987, line: 73, baseType: !1005, size: 64, offset: 192)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !984, !364}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !986, file: !987, line: 93, baseType: !254, size: 64, offset: 128)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !986, file: !987, line: 94, baseType: !906, size: 64, offset: 192)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !986, file: !987, line: 95, baseType: !449, size: 64, offset: 256)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "now", scope: !986, file: !987, line: 96, baseType: !775, size: 32, offset: 320)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "addrdataset", scope: !248, file: !241, line: 131, baseType: !1013, size: 64, offset: 1280)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!264, !254, !906, !449, !775, !364, !80, !364}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "subtractrdataset", scope: !248, file: !241, line: 137, baseType: !1017, size: 64, offset: 1344)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!264, !254, !906, !449, !364, !80, !364}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "deleterdataset", scope: !248, file: !241, line: 142, baseType: !1021, size: 64, offset: 1408)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!264, !254, !906, !449, !403, !403}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "issecure", scope: !248, file: !241, line: 146, baseType: !1025, size: 64, offset: 1472)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!353, !254}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "nodecount", scope: !248, file: !241, line: 147, baseType: !1029, size: 64, offset: 1536)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!80, !254}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "ispersistent", scope: !248, file: !241, line: 148, baseType: !1025, size: 64, offset: 1600)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "overmem", scope: !248, file: !241, line: 149, baseType: !1034, size: 64, offset: 1664)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{null, !254, !353}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "settask", scope: !248, file: !241, line: 150, baseType: !1038, size: 64, offset: 1728)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{null, !254, !1041}
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_task_t", file: !265, line: 77, baseType: !1043)
!1043 = !DICompositeType(tag: DW_TAG_structure_type, name: "isc_task", file: !265, line: 77, flags: DIFlagFwdDecl)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "getoriginnode", scope: !248, file: !241, line: 151, baseType: !1045, size: 64, offset: 1792)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!264, !254, !905}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "transfernode", scope: !248, file: !241, line: 152, baseType: !1049, size: 64, offset: 1856)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{null, !254, !905, !905}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "getnsec3parameters", scope: !248, file: !241, line: 154, baseType: !1053, size: 64, offset: 1920)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!264, !254, !449, !1056, !1058, !1059, !285, !1060}
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_hash_t", file: !89, line: 166, baseType: !95)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "findnsec3node", scope: !248, file: !241, line: 161, baseType: !902, size: 64, offset: 1984)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "setsigningtime", scope: !248, file: !241, line: 164, baseType: !1063, size: 64, offset: 2048)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!264, !254, !364, !775}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "getsigningtime", scope: !248, file: !241, line: 167, baseType: !1067, size: 64, offset: 2112)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!264, !254, !364, !358}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "resigned", scope: !248, file: !241, line: 170, baseType: !1071, size: 64, offset: 2176)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{null, !254, !364, !449}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "isdnssec", scope: !248, file: !241, line: 172, baseType: !1025, size: 64, offset: 2240)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "getrrsetstats", scope: !248, file: !241, line: 173, baseType: !1076, size: 64, offset: 2304)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!1079, !254}
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_stats_t", file: !89, line: 137, baseType: !1081)
!1081 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_stats", file: !89, line: 137, flags: DIFlagFwdDecl)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "rpz_attach", scope: !248, file: !241, line: 174, baseType: !1083, size: 64, offset: 2368)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{null, !254, !225, !707}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "rpz_ready", scope: !248, file: !241, line: 176, baseType: !1087, size: 64, offset: 2432)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!264, !254}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "findnodeext", scope: !248, file: !241, line: 177, baseType: !1091, size: 64, offset: 2496)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!264, !254, !277, !353, !1094, !1106, !905}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_clientinfomethods_t", file: !1096, line: 68, baseType: !1097)
!1096 = !DIFile(filename: "include/dns/clientinfo.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "f273dbbef534c5352c6d152e1993b2e9")
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_clientinfomethods", file: !1096, line: 64, size: 128, elements: !1098)
!1098 = !{!1099, !1100, !1101}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1097, file: !1096, line: 65, baseType: !397, size: 16)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "age", scope: !1097, file: !1096, line: 66, baseType: !397, size: 16, offset: 16)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "sourceip", scope: !1097, file: !1096, line: 67, baseType: !1102, size: 64, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_clientinfo_sourceip_t", file: !1096, line: 58, baseType: !1103)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!264, !1106, !1113}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_clientinfo_t", file: !1096, line: 56, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_clientinfo", file: !1096, line: 52, size: 192, elements: !1109)
!1109 = !{!1110, !1111, !1112}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1108, file: !1096, line: 53, baseType: !397, size: 16)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1108, file: !1096, line: 54, baseType: !225, size: 64, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "dbversion", scope: !1108, file: !1096, line: 55, baseType: !225, size: 64, offset: 128)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_sockaddr_t", file: !265, line: 69, baseType: !1116)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_sockaddr", file: !1117, line: 27, size: 1216, elements: !1118)
!1117 = !DIFile(filename: "isc/include/isc/sockaddr.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "b46a0f057942d922d0824c5621821d46")
!1118 = !{!1119, !1168, !1169}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1116, file: !1117, line: 36, baseType: !1120, size: 1024)
!1120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1116, file: !1117, line: 28, size: 1024, elements: !1121)
!1121 = !{!1122, !1133, !1142, !1150, !1159}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1120, file: !1117, line: 29, baseType: !1123, size: 128)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !1124, line: 180, size: 128, elements: !1125)
!1124 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "", checksumkind: CSK_MD5, checksum: "e3826be048699664d9ef7b080f62f2e0")
!1125 = !{!1126, !1129}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !1123, file: !1124, line: 182, baseType: !1127, size: 16)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !1128, line: 28, baseType: !401)
!1128 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "", checksumkind: CSK_MD5, checksum: "dd7f1d9dd6e26f88d1726905ed5d9ff5")
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !1123, file: !1124, line: 183, baseType: !1130, size: 112, offset: 16)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 112, elements: !1131)
!1131 = !{!1132}
!1132 = !DISubrange(count: 14)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !1120, file: !1117, line: 30, baseType: !1134, size: 128)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !695, line: 245, size: 128, elements: !1135)
!1135 = !{!1136, !1137, !1139, !1140}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !1134, file: !695, line: 247, baseType: !1127, size: 16)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !1134, file: !695, line: 248, baseType: !1138, size: 16, offset: 16)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !695, line: 123, baseType: !397)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !1134, file: !695, line: 249, baseType: !694, size: 32, offset: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !1134, file: !695, line: 252, baseType: !1141, size: 64, offset: 64)
!1141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 64, elements: !711)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "sin6", scope: !1120, file: !1117, line: 31, baseType: !1143, size: 224)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !695, line: 260, size: 224, elements: !1144)
!1144 = !{!1145, !1146, !1147, !1148, !1149}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !1143, file: !695, line: 262, baseType: !1127, size: 16)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !1143, file: !695, line: 263, baseType: !1138, size: 16, offset: 16)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !1143, file: !695, line: 264, baseType: !586, size: 32, offset: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !1143, file: !695, line: 265, baseType: !700, size: 128, offset: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !1143, file: !695, line: 266, baseType: !586, size: 32, offset: 192)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1120, file: !1117, line: 32, baseType: !1151, size: 1024)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !1124, line: 193, size: 1024, elements: !1152)
!1152 = !{!1153, !1154, !1158}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !1151, file: !1124, line: 195, baseType: !1127, size: 16)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_padding", scope: !1151, file: !1124, line: 196, baseType: !1155, size: 944, offset: 16)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 944, elements: !1156)
!1156 = !{!1157}
!1157 = !DISubrange(count: 118)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !1151, file: !1124, line: 197, baseType: !327, size: 64, offset: 960)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "sunix", scope: !1120, file: !1117, line: 34, baseType: !1160, size: 880)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_un", file: !1161, line: 29, size: 880, elements: !1162)
!1161 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/un.h", directory: "", checksumkind: CSK_MD5, checksum: "543d98cd612c9215c9333043f81a0cd3")
!1162 = !{!1163, !1164}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "sun_family", scope: !1160, file: !1161, line: 31, baseType: !1127, size: 16)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "sun_path", scope: !1160, file: !1161, line: 32, baseType: !1165, size: 864, offset: 16)
!1165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 864, elements: !1166)
!1166 = !{!1167}
!1167 = !DISubrange(count: 108)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1116, file: !1117, line: 37, baseType: !80, size: 32, offset: 1024)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1116, file: !1117, line: 38, baseType: !1170, size: 128, offset: 1088)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1116, file: !1117, line: 38, size: 128, elements: !1171)
!1171 = !{!1172, !1174}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1170, file: !1117, line: 38, baseType: !1173, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1170, file: !1117, line: 38, baseType: !1173, size: 64, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "findext", scope: !248, file: !241, line: 182, baseType: !1176, size: 64, offset: 2560)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!264, !254, !277, !449, !403, !80, !775, !905, !358, !1094, !1106, !364, !364}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "setcachestats", scope: !248, file: !241, line: 191, baseType: !1180, size: 64, offset: 2624)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!264, !254, !1183}
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_stats_t", file: !265, line: 74, baseType: !1185)
!1185 = !DICompositeType(tag: DW_TAG_structure_type, name: "isc_stats", file: !265, line: 74, flags: DIFlagFwdDecl)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "hashsize", scope: !248, file: !241, line: 192, baseType: !1187, size: 64, offset: 2688)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!325, !254}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "nodefullname", scope: !248, file: !241, line: 193, baseType: !1191, size: 64, offset: 2752)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!264, !254, !906, !358}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "getsize", scope: !248, file: !241, line: 195, baseType: !1195, size: 64, offset: 2816)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!264, !254, !449, !1198, !1198}
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !398, line: 27, baseType: !1200)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !400, line: 45, baseType: !327)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "setservestalettl", scope: !248, file: !241, line: 197, baseType: !1202, size: 64, offset: 2880)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!264, !254, !585}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "getservestalettl", scope: !248, file: !241, line: 198, baseType: !1206, size: 64, offset: 2944)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!264, !254, !1209}
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "setgluecachestats", scope: !248, file: !241, line: 199, baseType: !1180, size: 64, offset: 3008)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !240, file: !241, line: 227, baseType: !397, size: 16, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "rdclass", scope: !240, file: !241, line: 228, baseType: !396, size: 16, offset: 144)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !240, file: !241, line: 229, baseType: !279, size: 640, offset: 192)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !240, file: !241, line: 230, baseType: !309, size: 64, offset: 832)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "update_listeners", scope: !240, file: !241, line: 231, baseType: !1216, size: 128, offset: 896)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !240, file: !241, line: 231, size: 128, elements: !1217)
!1217 = !{!1218, !1234}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1216, file: !241, line: 231, baseType: !1219, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dbonupdatelistener_t", file: !89, line: 59, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_dbonupdatelistener", file: !241, line: 237, size: 256, elements: !1222)
!1222 = !{!1223, !1228, !1229}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "onupdate", scope: !1221, file: !241, line: 238, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dbupdate_callback_t", file: !241, line: 209, baseType: !1225)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!264, !254, !225}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "onupdate_arg", scope: !1221, file: !241, line: 239, baseType: !225, size: 64, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1221, file: !241, line: 240, baseType: !1230, size: 128, offset: 128)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1221, file: !241, line: 240, size: 128, elements: !1231)
!1231 = !{!1232, !1233}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1230, file: !241, line: 240, baseType: !1219, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1230, file: !241, line: 240, baseType: !1219, size: 64, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1216, file: !241, line: 231, baseType: !1219, size: 64, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "dbdata", scope: !236, file: !2, line: 101, baseType: !225, size: 64, offset: 1024)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "dlzimp", scope: !236, file: !2, line: 102, baseType: !1237, size: 64, offset: 1088)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzimplementation_t", file: !89, line: 66, baseType: !1239)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_sdlzimplementation", file: !2, line: 89, size: 640, elements: !1240)
!1240 = !{!1241, !2063, !2064, !2065, !2066, !2067}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "methods", scope: !1239, file: !2, line: 90, baseType: !1242, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1244)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzmethods_t", file: !235, line: 299, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_sdlzmethods", file: !235, line: 284, size: 896, elements: !1246)
!1246 = !{!1247, !1254, !1259, !1264, !1325, !1330, !1349, !1354, !1359, !1364, !2050, !2055, !2060, !2061}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1245, file: !235, line: 285, baseType: !1248, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzcreate_t", file: !235, line: 130, baseType: !1249)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!264, !328, !80, !1252, !225, !1253}
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !1245, file: !235, line: 286, baseType: !1255, size: 64, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzdestroy_t", file: !235, line: 141, baseType: !1256)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{null, !225, !225}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "findzone", scope: !1245, file: !235, line: 287, baseType: !1260, size: 64, offset: 128)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzfindzone_t", file: !235, line: 151, baseType: !1261)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!264, !225, !225, !328, !1094, !1106}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1245, file: !235, line: 288, baseType: !1265, size: 64, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzlookupfunc_t", file: !235, line: 182, baseType: !1266)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!264, !328, !328, !225, !225, !1269, !1094, !1106}
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzlookup_t", file: !235, line: 69, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_sdlzlookup", file: !2, line: 110, size: 1664, elements: !1272)
!1272 = !{!1273, !1274, !1275, !1280, !1285, !1286, !1291, !1323, !1324}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1271, file: !2, line: 112, baseType: !80, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "sdlz", scope: !1271, file: !2, line: 113, baseType: !233, size: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "lists", scope: !1271, file: !2, line: 114, baseType: !1276, size: 128, offset: 128)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1271, file: !2, line: 114, size: 128, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1276, file: !2, line: 114, baseType: !576, size: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1276, file: !2, line: 114, baseType: !576, size: 64, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !1271, file: !2, line: 115, baseType: !1281, size: 128, offset: 256)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1271, file: !2, line: 115, size: 128, elements: !1282)
!1282 = !{!1283, !1284}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1281, file: !2, line: 115, baseType: !292, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1281, file: !2, line: 115, baseType: !292, size: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1271, file: !2, line: 116, baseType: !358, size: 64, offset: 384)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1271, file: !2, line: 117, baseType: !1287, size: 128, offset: 448)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1271, file: !2, line: 117, size: 128, elements: !1288)
!1288 = !{!1289, !1290}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1287, file: !2, line: 117, baseType: !1269, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1287, file: !2, line: 117, baseType: !1269, size: 64, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1271, file: !2, line: 118, baseType: !1292, size: 320, offset: 576)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_mutex_t", file: !1293, line: 58, baseType: !1294)
!1293 = !DIFile(filename: "../../lib/isc/pthreads/include/isc/mutex.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "6b7e8979b3639d755e3f6ba516d0d52d")
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !1295, line: 72, baseType: !1296)
!1295 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "", checksumkind: CSK_MD5, checksum: "735e3bf264ff9d8f5d95898b1692fbdb")
!1296 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1295, line: 67, size: 320, elements: !1297)
!1297 = !{!1298, !1318, !1322}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !1296, file: !1295, line: 69, baseType: !1299, size: 320)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !1300, line: 22, size: 320, elements: !1301)
!1300 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h", directory: "", checksumkind: CSK_MD5, checksum: "584baedd80e6041b81caae7f496091c0")
!1301 = !{!1302, !1303, !1304, !1305, !1306, !1307, !1309, !1310}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !1299, file: !1300, line: 24, baseType: !480, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1299, file: !1300, line: 25, baseType: !80, size: 32, offset: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !1299, file: !1300, line: 26, baseType: !480, size: 32, offset: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !1299, file: !1300, line: 28, baseType: !80, size: 32, offset: 96)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !1299, file: !1300, line: 32, baseType: !480, size: 32, offset: 128)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !1299, file: !1300, line: 34, baseType: !1308, size: 16, offset: 160)
!1308 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !1299, file: !1300, line: 35, baseType: !1308, size: 16, offset: 176)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !1299, file: !1300, line: 36, baseType: !1311, size: 128, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !1312, line: 55, baseType: !1313)
!1312 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h", directory: "", checksumkind: CSK_MD5, checksum: "04c81e86d34dad9c99ad006d32e47a0d")
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !1312, line: 51, size: 128, elements: !1314)
!1314 = !{!1315, !1317}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !1313, file: !1312, line: 53, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !1313, file: !1312, line: 54, baseType: !1316, size: 64, offset: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !1296, file: !1295, line: 70, baseType: !1319, size: 320)
!1319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 320, elements: !1320)
!1320 = !{!1321}
!1321 = !DISubrange(count: 40)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !1296, file: !1295, line: 71, baseType: !817, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1271, file: !2, line: 119, baseType: !267, size: 704, offset: 896)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !1271, file: !2, line: 121, baseType: !80, size: 32, offset: 1600)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "authority", scope: !1245, file: !235, line: 289, baseType: !1326, size: 64, offset: 256)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzauthorityfunc_t", file: !235, line: 116, baseType: !1327)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{!264, !328, !225, !225, !1269}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "allnodes", scope: !1245, file: !235, line: 290, baseType: !1331, size: 64, offset: 320)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzallnodesfunc_t", file: !235, line: 74, baseType: !1332)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!264, !328, !225, !225, !1335}
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzallnodes_t", file: !235, line: 72, baseType: !1337)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_sdlzallnodes", file: !2, line: 126, size: 512, elements: !1338)
!1338 = !{!1339, !1340, !1347, !1348}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1337, file: !2, line: 127, baseType: !938, size: 256)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "nodelist", scope: !1337, file: !2, line: 128, baseType: !1341, size: 128, offset: 256)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1337, file: !2, line: 128, size: 128, elements: !1342)
!1342 = !{!1343, !1346}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1341, file: !2, line: 128, baseType: !1344, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlznode_t", file: !2, line: 124, baseType: !1271)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1341, file: !2, line: 128, baseType: !1344, size: 64, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1337, file: !2, line: 129, baseType: !1344, size: 64, offset: 384)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !1337, file: !2, line: 130, baseType: !1344, size: 64, offset: 448)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "allowzonexfr", scope: !1245, file: !235, line: 291, baseType: !1350, size: 64, offset: 384)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzallowzonexfr_t", file: !235, line: 91, baseType: !1351)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!264, !225, !225, !328, !328}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "newversion", scope: !1245, file: !235, line: 292, baseType: !1355, size: 64, offset: 448)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlznewversion_t", file: !235, line: 202, baseType: !1356)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!264, !328, !225, !225, !1253}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "closeversion", scope: !1245, file: !235, line: 293, baseType: !1360, size: 64, offset: 512)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzcloseversion_t", file: !235, line: 215, baseType: !1361)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{null, !328, !353, !225, !225, !1253}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1245, file: !235, line: 294, baseType: !1365, size: 64, offset: 576)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzconfigure_t", file: !235, line: 227, baseType: !1366)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!264, !1369, !1903, !225, !225}
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_view_t", file: !89, line: 147, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_view", file: !1372, line: 81, size: 18432, elements: !1373)
!1372 = !DIFile(filename: "include/dns/view.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "7b0b4502c652533faf24a1a42de34468")
!1373 = !{!1374, !1375, !1376, !1377, !1378, !1382, !1386, !1390, !1394, !1398, !1399, !1400, !1404, !1408, !1409, !1410, !1411, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1456, !1457, !1461, !1465, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1504, !1505, !1506, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1692, !1693, !1694, !1695, !1696, !1697, !1706, !1707, !1894, !1898, !1995, !1996, !1997, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2013, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2034, !2035, !2036, !2037, !2041, !2043, !2044, !2048, !2049}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1371, file: !1372, line: 83, baseType: !80, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !1371, file: !1372, line: 84, baseType: !309, size: 64, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "rdclass", scope: !1371, file: !1372, line: 85, baseType: !396, size: 16, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1371, file: !1372, line: 86, baseType: !347, size: 64, offset: 192)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "zonetable", scope: !1371, file: !1372, line: 87, baseType: !1379, size: 64, offset: 256)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_zt_t", file: !89, line: 152, baseType: !1381)
!1381 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_zt", file: !89, line: 152, flags: DIFlagFwdDecl)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "resolver", scope: !1371, file: !1372, line: 88, baseType: !1383, size: 64, offset: 320)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_resolver_t", file: !89, line: 129, baseType: !1385)
!1385 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_resolver", file: !89, line: 129, flags: DIFlagFwdDecl)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "adb", scope: !1371, file: !1372, line: 89, baseType: !1387, size: 64, offset: 384)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_adb_t", file: !89, line: 33, baseType: !1389)
!1389 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_adb", file: !89, line: 33, flags: DIFlagFwdDecl)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "requestmgr", scope: !1371, file: !1372, line: 90, baseType: !1391, size: 64, offset: 448)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_requestmgr_t", file: !89, line: 128, baseType: !1393)
!1393 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_requestmgr", file: !89, line: 128, flags: DIFlagFwdDecl)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1371, file: !1372, line: 91, baseType: !1395, size: 64, offset: 512)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_cache_t", file: !89, line: 51, baseType: !1397)
!1397 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_cache", file: !89, line: 51, flags: DIFlagFwdDecl)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "cachedb", scope: !1371, file: !1372, line: 92, baseType: !254, size: 64, offset: 576)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "hints", scope: !1371, file: !1372, line: 93, baseType: !254, size: 64, offset: 640)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "secroots_priv", scope: !1371, file: !1372, line: 99, baseType: !1401, size: 64, offset: 704)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_keytable_t", file: !89, line: 97, baseType: !1403)
!1403 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_keytable", file: !89, line: 97, flags: DIFlagFwdDecl)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ntatable_priv", scope: !1371, file: !1372, line: 100, baseType: !1405, size: 64, offset: 768)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_ntatable_t", file: !89, line: 110, baseType: !1407)
!1407 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_ntatable", file: !89, line: 110, flags: DIFlagFwdDecl)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1371, file: !1372, line: 102, baseType: !1292, size: 320, offset: 832)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1371, file: !1372, line: 103, baseType: !353, size: 8, offset: 1152)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1371, file: !1372, line: 104, baseType: !1041, size: 64, offset: 1216)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "resevent", scope: !1371, file: !1372, line: 105, baseType: !1412, size: 832, offset: 1280)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_event_t", file: !265, line: 41, baseType: !1413)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_event", file: !1414, line: 75, size: 832, elements: !1415)
!1414 = !DIFile(filename: "isc/include/isc/event.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "d58366ca324676a5c39720df6fa77dae")
!1415 = !{!1416, !1417, !1418, !1419, !1421, !1427, !1428, !1429, !1434, !1435, !1441}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "ev_size", scope: !1413, file: !1414, line: 76, baseType: !325, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "ev_attributes", scope: !1413, file: !1414, line: 76, baseType: !80, size: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "ev_tag", scope: !1413, file: !1414, line: 76, baseType: !225, size: 64, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ev_type", scope: !1413, file: !1414, line: 76, baseType: !1420, size: 32, offset: 192)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_eventtype_t", file: !265, line: 43, baseType: !80)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ev_action", scope: !1413, file: !1414, line: 76, baseType: !1422, size: 64, offset: 256)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_taskaction_t", file: !265, line: 85, baseType: !1423)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{null, !1041, !1426}
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "ev_arg", scope: !1413, file: !1414, line: 76, baseType: !225, size: 64, offset: 320)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "ev_sender", scope: !1413, file: !1414, line: 76, baseType: !225, size: 64, offset: 384)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "ev_destroy", scope: !1413, file: !1414, line: 76, baseType: !1430, size: 64, offset: 448)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_eventdestructor_t", file: !1414, line: 25, baseType: !1431)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = !DISubroutineType(types: !1433)
!1433 = !{null, !1426}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "ev_destroy_arg", scope: !1413, file: !1414, line: 76, baseType: !225, size: 64, offset: 512)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "ev_link", scope: !1413, file: !1414, line: 76, baseType: !1436, size: 128, offset: 576)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1413, file: !1414, line: 76, size: 128, elements: !1437)
!1437 = !{!1438, !1440}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1436, file: !1414, line: 76, baseType: !1439, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1436, file: !1414, line: 76, baseType: !1439, size: 64, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "ev_ratelink", scope: !1413, file: !1414, line: 76, baseType: !1442, size: 128, offset: 704)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1413, file: !1414, line: 76, size: 128, elements: !1443)
!1443 = !{!1444, !1445}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1442, file: !1414, line: 76, baseType: !1439, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1442, file: !1414, line: 76, baseType: !1439, size: 64, offset: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "adbevent", scope: !1371, file: !1372, line: 106, baseType: !1412, size: 832, offset: 2112)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "reqevent", scope: !1371, file: !1372, line: 107, baseType: !1412, size: 832, offset: 2944)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "adbstats", scope: !1371, file: !1372, line: 108, baseType: !1183, size: 64, offset: 3776)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "resstats", scope: !1371, file: !1372, line: 109, baseType: !1183, size: 64, offset: 3840)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "resquerystats", scope: !1371, file: !1372, line: 110, baseType: !1079, size: 64, offset: 3904)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "cacheshared", scope: !1371, file: !1372, line: 111, baseType: !353, size: 8, offset: 3968)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "statickeys", scope: !1371, file: !1372, line: 114, baseType: !1453, size: 64, offset: 4032)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_tsig_keyring_t", file: !89, line: 142, baseType: !1455)
!1455 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_tsig_keyring", file: !89, line: 142, flags: DIFlagFwdDecl)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "dynamickeys", scope: !1371, file: !1372, line: 115, baseType: !1453, size: 64, offset: 4096)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !1371, file: !1372, line: 116, baseType: !1458, size: 64, offset: 4160)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_peerlist_t", file: !89, line: 115, baseType: !1460)
!1460 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_peerlist", file: !89, line: 115, flags: DIFlagFwdDecl)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !1371, file: !1372, line: 117, baseType: !1462, size: 64, offset: 4224)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_order_t", file: !89, line: 113, baseType: !1464)
!1464 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_order", file: !89, line: 113, flags: DIFlagFwdDecl)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "fwdtable", scope: !1371, file: !1372, line: 118, baseType: !1466, size: 64, offset: 4288)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_fwdtable_t", file: !89, line: 90, baseType: !1468)
!1468 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_fwdtable", file: !89, line: 90, flags: DIFlagFwdDecl)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "recursion", scope: !1371, file: !1372, line: 119, baseType: !353, size: 8, offset: 4352)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "qminimization", scope: !1371, file: !1372, line: 120, baseType: !353, size: 8, offset: 4360)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "qmin_strict", scope: !1371, file: !1372, line: 121, baseType: !353, size: 8, offset: 4368)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "auth_nxdomain", scope: !1371, file: !1372, line: 122, baseType: !353, size: 8, offset: 4376)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "use_glue_cache", scope: !1371, file: !1372, line: 123, baseType: !353, size: 8, offset: 4384)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "minimal_any", scope: !1371, file: !1372, line: 124, baseType: !353, size: 8, offset: 4392)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "minimalresponses", scope: !1371, file: !1372, line: 125, baseType: !1476, size: 32, offset: 4416)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_minimaltype_t", file: !89, line: 202, baseType: !98)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "enablednssec", scope: !1371, file: !1372, line: 126, baseType: !353, size: 8, offset: 4448)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "enablevalidation", scope: !1371, file: !1372, line: 127, baseType: !353, size: 8, offset: 4456)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "acceptexpired", scope: !1371, file: !1372, line: 128, baseType: !353, size: 8, offset: 4464)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "requireservercookie", scope: !1371, file: !1372, line: 129, baseType: !353, size: 8, offset: 4472)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "synthfromdnssec", scope: !1371, file: !1372, line: 130, baseType: !353, size: 8, offset: 4480)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "trust_anchor_telemetry", scope: !1371, file: !1372, line: 131, baseType: !353, size: 8, offset: 4488)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "root_key_sentinel", scope: !1371, file: !1372, line: 132, baseType: !353, size: 8, offset: 4496)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_format", scope: !1371, file: !1372, line: 133, baseType: !1485, size: 32, offset: 4512)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_transfer_format_t", file: !89, line: 184, baseType: !104)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "cacheacl", scope: !1371, file: !1372, line: 134, baseType: !643, size: 64, offset: 4544)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "cacheonacl", scope: !1371, file: !1372, line: 135, baseType: !643, size: 64, offset: 4608)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "queryacl", scope: !1371, file: !1372, line: 136, baseType: !643, size: 64, offset: 4672)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "queryonacl", scope: !1371, file: !1372, line: 137, baseType: !643, size: 64, offset: 4736)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "recursionacl", scope: !1371, file: !1372, line: 138, baseType: !643, size: 64, offset: 4800)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "recursiononacl", scope: !1371, file: !1372, line: 139, baseType: !643, size: 64, offset: 4864)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "sortlist", scope: !1371, file: !1372, line: 140, baseType: !643, size: 64, offset: 4928)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "notifyacl", scope: !1371, file: !1372, line: 141, baseType: !643, size: 64, offset: 4992)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "transferacl", scope: !1371, file: !1372, line: 142, baseType: !643, size: 64, offset: 5056)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "updateacl", scope: !1371, file: !1372, line: 143, baseType: !643, size: 64, offset: 5120)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "upfwdacl", scope: !1371, file: !1372, line: 144, baseType: !643, size: 64, offset: 5184)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "denyansweracl", scope: !1371, file: !1372, line: 145, baseType: !643, size: 64, offset: 5248)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "nocasecompress", scope: !1371, file: !1372, line: 146, baseType: !643, size: 64, offset: 5312)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "msgcompression", scope: !1371, file: !1372, line: 147, baseType: !353, size: 8, offset: 5376)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "answeracl_exclude", scope: !1371, file: !1372, line: 148, baseType: !1501, size: 64, offset: 5440)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rbt_t", file: !89, line: 117, baseType: !1503)
!1503 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rbt", file: !89, line: 117, flags: DIFlagFwdDecl)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "denyanswernames", scope: !1371, file: !1372, line: 149, baseType: !1501, size: 64, offset: 5504)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "answernames_exclude", scope: !1371, file: !1372, line: 150, baseType: !1501, size: 64, offset: 5568)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "rrl", scope: !1371, file: !1372, line: 151, baseType: !1507, size: 64, offset: 5632)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rrl_t", file: !1509, line: 203, baseType: !1510)
!1509 = !DIFile(filename: "include/dns/rrl.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "6bfc3372ccb437cef0b7c0d6c4aadf9e")
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rrl", file: !1509, line: 204, size: 19328, elements: !1511)
!1511 = !{!1512, !1513, !1514, !1515, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1594, !1599, !1614, !1615, !1616, !1617, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1661}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1510, file: !1509, line: 205, baseType: !1292, size: 320)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !1510, file: !1509, line: 206, baseType: !309, size: 64, offset: 320)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "log_only", scope: !1510, file: !1509, line: 208, baseType: !353, size: 8, offset: 384)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "responses_per_second", scope: !1510, file: !1509, line: 209, baseType: !1516, size: 128, offset: 448)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rrl_rate_t", file: !1509, line: 193, baseType: !1517)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rrl_rate", file: !1509, line: 194, size: 128, elements: !1518)
!1518 = !{!1519, !1520, !1521}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1517, file: !1509, line: 195, baseType: !480, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "scaled", scope: !1517, file: !1509, line: 196, baseType: !480, size: 32, offset: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1517, file: !1509, line: 197, baseType: !328, size: 64, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "referrals_per_second", scope: !1510, file: !1509, line: 210, baseType: !1516, size: 128, offset: 576)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "nodata_per_second", scope: !1510, file: !1509, line: 211, baseType: !1516, size: 128, offset: 704)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "nxdomains_per_second", scope: !1510, file: !1509, line: 212, baseType: !1516, size: 128, offset: 832)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "errors_per_second", scope: !1510, file: !1509, line: 213, baseType: !1516, size: 128, offset: 960)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "all_per_second", scope: !1510, file: !1509, line: 214, baseType: !1516, size: 128, offset: 1088)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "slip", scope: !1510, file: !1509, line: 215, baseType: !1516, size: 128, offset: 1216)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !1510, file: !1509, line: 216, baseType: !480, size: 32, offset: 1344)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "qps_scale", scope: !1510, file: !1509, line: 217, baseType: !1530, size: 64, offset: 1408)
!1530 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1510, file: !1509, line: 218, baseType: !480, size: 32, offset: 1472)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "exempt", scope: !1510, file: !1509, line: 220, baseType: !643, size: 64, offset: 1536)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !1510, file: !1509, line: 222, baseType: !480, size: 32, offset: 1600)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "qps_responses", scope: !1510, file: !1509, line: 224, baseType: !480, size: 32, offset: 1632)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "qps_time", scope: !1510, file: !1509, line: 225, baseType: !775, size: 32, offset: 1664)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "qps", scope: !1510, file: !1509, line: 226, baseType: !1530, size: 64, offset: 1728)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !1510, file: !1509, line: 228, baseType: !80, size: 32, offset: 1792)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1510, file: !1509, line: 229, baseType: !80, size: 32, offset: 1824)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1510, file: !1509, line: 231, baseType: !1540, size: 128, offset: 1856)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1510, file: !1509, line: 231, size: 128, elements: !1541)
!1541 = !{!1542, !1593}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1540, file: !1509, line: 231, baseType: !1543, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rrl_block_t", file: !1509, line: 175, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rrl_block", file: !1509, line: 176, size: 640, elements: !1546)
!1546 = !{!1547, !1552, !1553}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1545, file: !1509, line: 177, baseType: !1548, size: 128)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1545, file: !1509, line: 177, size: 128, elements: !1549)
!1549 = !{!1550, !1551}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1548, file: !1509, line: 177, baseType: !1543, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1548, file: !1509, line: 177, baseType: !1543, size: 64, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1545, file: !1509, line: 178, baseType: !480, size: 32, offset: 128)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1545, file: !1509, line: 179, baseType: !1554, size: 448, offset: 192)
!1554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1555, size: 448, elements: !823)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rrl_entry_t", file: !1509, line: 108, baseType: !1556)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rrl_entry", file: !1509, line: 110, size: 448, elements: !1557)
!1557 = !{!1558, !1564, !1569, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1556, file: !1509, line: 111, baseType: !1559, size: 128)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1556, file: !1509, line: 111, size: 128, elements: !1560)
!1560 = !{!1561, !1563}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1559, file: !1509, line: 111, baseType: !1562, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1559, file: !1509, line: 111, baseType: !1562, size: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "hlink", scope: !1556, file: !1509, line: 112, baseType: !1565, size: 128, offset: 128)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1556, file: !1509, line: 112, size: 128, elements: !1566)
!1566 = !{!1567, !1568}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1565, file: !1509, line: 112, baseType: !1562, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1565, file: !1509, line: 112, baseType: !1562, size: 64, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1556, file: !1509, line: 113, baseType: !1570, size: 128, offset: 256)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rrl_key_t", file: !1509, line: 90, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "dns_rrl_key", file: !1509, line: 99, size: 128, elements: !1572)
!1572 = !{!1573, !1583}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !1571, file: !1509, line: 100, baseType: !1574, size: 128)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns__rrl_key", file: !1509, line: 91, size: 128, elements: !1575)
!1575 = !{!1576, !1578, !1579, !1580, !1581, !1582}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1574, file: !1509, line: 92, baseType: !1577, size: 64)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 64, elements: !721)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "qname_hash", scope: !1574, file: !1509, line: 93, baseType: !586, size: 32, offset: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "qtype", scope: !1574, file: !1509, line: 94, baseType: !403, size: 16, offset: 96)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "qclass", scope: !1574, file: !1509, line: 95, baseType: !707, size: 8, offset: 112)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "rtype", scope: !1574, file: !1509, line: 96, baseType: !80, size: 4, offset: 120, flags: DIFlagBitField, extraData: i64 120)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1574, file: !1509, line: 97, baseType: !80, size: 1, offset: 124, flags: DIFlagBitField, extraData: i64 120)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1571, file: !1509, line: 101, baseType: !710, size: 128)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "responses", scope: !1556, file: !1509, line: 115, baseType: !480, size: 24, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "log_qname", scope: !1556, file: !1509, line: 117, baseType: !80, size: 8, offset: 408, flags: DIFlagBitField, extraData: i64 384)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "ts_gen", scope: !1556, file: !1509, line: 120, baseType: !80, size: 2, offset: 416, flags: DIFlagBitField, extraData: i64 384)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "ts_valid", scope: !1556, file: !1509, line: 121, baseType: !80, size: 1, offset: 418, flags: DIFlagBitField, extraData: i64 384)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "hash_gen", scope: !1556, file: !1509, line: 123, baseType: !80, size: 1, offset: 419, flags: DIFlagBitField, extraData: i64 384)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "logged", scope: !1556, file: !1509, line: 124, baseType: !80, size: 1, offset: 420, flags: DIFlagBitField, extraData: i64 384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "log_secs", scope: !1556, file: !1509, line: 126, baseType: !80, size: 11, offset: 421, flags: DIFlagBitField, extraData: i64 384)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ts", scope: !1556, file: !1509, line: 129, baseType: !80, size: 12, offset: 432, flags: DIFlagBitField, extraData: i64 384)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "slip_cnt", scope: !1556, file: !1509, line: 132, baseType: !80, size: 4, offset: 444, flags: DIFlagBitField, extraData: i64 384)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1540, file: !1509, line: 231, baseType: !1543, size: 64, offset: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1510, file: !1509, line: 232, baseType: !1595, size: 128, offset: 1984)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1510, file: !1509, line: 232, size: 128, elements: !1596)
!1596 = !{!1597, !1598}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1595, file: !1509, line: 232, baseType: !1562, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1595, file: !1509, line: 232, baseType: !1562, size: 64, offset: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1510, file: !1509, line: 234, baseType: !1600, size: 64, offset: 2112)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rrl_hash_t", file: !1509, line: 64, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rrl_hash", file: !1509, line: 165, size: 256, elements: !1603)
!1603 = !{!1604, !1605, !1606, !1607}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "check_time", scope: !1602, file: !1509, line: 166, baseType: !775, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !1602, file: !1509, line: 167, baseType: !80, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1602, file: !1509, line: 168, baseType: !480, size: 32, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "bins", scope: !1602, file: !1509, line: 169, baseType: !1608, size: 128, offset: 128)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1609, size: 128, elements: !823)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rrl_bin_t", file: !1509, line: 109, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1509, line: 109, size: 128, elements: !1611)
!1611 = !{!1612, !1613}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1610, file: !1509, line: 109, baseType: !1562, size: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1610, file: !1509, line: 109, baseType: !1562, size: 64, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "old_hash", scope: !1510, file: !1509, line: 235, baseType: !1600, size: 64, offset: 2176)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "hash_gen", scope: !1510, file: !1509, line: 236, baseType: !80, size: 32, offset: 2240)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "ts_gen", scope: !1510, file: !1509, line: 238, baseType: !80, size: 32, offset: 2272)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "ts_bases", scope: !1510, file: !1509, line: 240, baseType: !1618, size: 128, offset: 2304)
!1618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 128, elements: !35)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_prefixlen", scope: !1510, file: !1509, line: 242, baseType: !480, size: 32, offset: 2432)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_mask", scope: !1510, file: !1509, line: 243, baseType: !586, size: 32, offset: 2464)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_prefixlen", scope: !1510, file: !1509, line: 244, baseType: !480, size: 32, offset: 2496)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_mask", scope: !1510, file: !1509, line: 245, baseType: !714, size: 128, offset: 2528)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "log_stops_time", scope: !1510, file: !1509, line: 247, baseType: !775, size: 32, offset: 2656)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "last_logged", scope: !1510, file: !1509, line: 248, baseType: !1562, size: 64, offset: 2688)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "num_logged", scope: !1510, file: !1509, line: 249, baseType: !480, size: 32, offset: 2752)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "num_qnames", scope: !1510, file: !1509, line: 250, baseType: !480, size: 32, offset: 2784)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "qname_free", scope: !1510, file: !1509, line: 251, baseType: !1628, size: 128, offset: 2816)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1510, file: !1509, line: 251, size: 128, elements: !1629)
!1629 = !{!1630, !1660}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1628, file: !1509, line: 251, baseType: !1631, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rrl_qname_buf_t", file: !1509, line: 185, baseType: !1633)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rrl_qname_buf", file: !1509, line: 186, size: 4480, elements: !1634)
!1634 = !{!1635, !1640, !1643, !1644}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1633, file: !1509, line: 187, baseType: !1636, size: 128)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1633, file: !1509, line: 187, size: 128, elements: !1637)
!1637 = !{!1638, !1639}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1636, file: !1509, line: 187, baseType: !1631, size: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1636, file: !1509, line: 187, baseType: !1631, size: 64, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1633, file: !1509, line: 188, baseType: !1641, size: 64, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1555)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1633, file: !1509, line: 189, baseType: !80, size: 32, offset: 192)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !1633, file: !1509, line: 190, baseType: !1645, size: 4224, offset: 256)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_fixedname_t", file: !89, line: 87, baseType: !1646)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_fixedname", file: !1647, line: 61, size: 4224, elements: !1648)
!1647 = !DIFile(filename: "include/dns/fixedname.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "0de03067a9d468538b5b154e7da6cb18")
!1648 = !{!1649, !1650, !1655, !1656}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1646, file: !1647, line: 62, baseType: !279, size: 640)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !1646, file: !1647, line: 63, baseType: !1651, size: 1024, offset: 640)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_offsets_t", file: !89, line: 112, baseType: !1652)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 1024, elements: !1653)
!1653 = !{!1654}
!1654 = !DISubrange(count: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1646, file: !1647, line: 64, baseType: !293, size: 512, offset: 1664)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1646, file: !1647, line: 65, baseType: !1657, size: 2040, offset: 2176)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 2040, elements: !1658)
!1658 = !{!1659}
!1659 = !DISubrange(count: 255)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1628, file: !1509, line: 251, baseType: !1631, size: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "qnames", scope: !1510, file: !1509, line: 253, baseType: !1662, size: 16384, offset: 2944)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1631, size: 16384, elements: !1663)
!1663 = !{!1664}
!1664 = !DISubrange(count: 256)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "provideixfr", scope: !1371, file: !1372, line: 152, baseType: !353, size: 8, offset: 5696)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "requestnsid", scope: !1371, file: !1372, line: 153, baseType: !353, size: 8, offset: 5704)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "sendcookie", scope: !1371, file: !1372, line: 154, baseType: !353, size: 8, offset: 5712)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "maxcachettl", scope: !1371, file: !1372, line: 155, baseType: !585, size: 32, offset: 5728)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "maxncachettl", scope: !1371, file: !1372, line: 156, baseType: !585, size: 32, offset: 5760)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "mincachettl", scope: !1371, file: !1372, line: 157, baseType: !585, size: 32, offset: 5792)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "minncachettl", scope: !1371, file: !1372, line: 158, baseType: !585, size: 32, offset: 5824)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "nta_lifetime", scope: !1371, file: !1372, line: 159, baseType: !586, size: 32, offset: 5856)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "nta_recheck", scope: !1371, file: !1372, line: 160, baseType: !586, size: 32, offset: 5888)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "nta_file", scope: !1371, file: !1372, line: 161, baseType: !347, size: 64, offset: 5952)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch_trigger", scope: !1371, file: !1372, line: 162, baseType: !585, size: 32, offset: 6016)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch_eligible", scope: !1371, file: !1372, line: 163, baseType: !585, size: 32, offset: 6048)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "dstport", scope: !1371, file: !1372, line: 164, baseType: !1138, size: 16, offset: 6080)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "aclenv", scope: !1371, file: !1372, line: 165, baseType: !639, size: 192, offset: 6144)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_glue", scope: !1371, file: !1372, line: 166, baseType: !403, size: 16, offset: 6336)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1371, file: !1372, line: 167, baseType: !353, size: 8, offset: 6352)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "delonly", scope: !1371, file: !1372, line: 168, baseType: !1682, size: 64, offset: 6400)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "rootdelonly", scope: !1371, file: !1372, line: 169, baseType: !353, size: 8, offset: 6464)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "rootexclude", scope: !1371, file: !1372, line: 170, baseType: !1682, size: 64, offset: 6528)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "checknames", scope: !1371, file: !1372, line: 171, baseType: !353, size: 8, offset: 6592)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "dlv", scope: !1371, file: !1372, line: 172, baseType: !358, size: 64, offset: 6656)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "dlv_fixed", scope: !1371, file: !1372, line: 173, baseType: !1645, size: 4224, offset: 6720)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "maxudp", scope: !1371, file: !1372, line: 174, baseType: !397, size: 16, offset: 10944)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "staleanswerttl", scope: !1371, file: !1372, line: 175, baseType: !585, size: 32, offset: 10976)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "staleanswersok", scope: !1371, file: !1372, line: 176, baseType: !1691, size: 32, offset: 11008)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_stale_answer_t", file: !89, line: 385, baseType: !108)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "staleanswersenable", scope: !1371, file: !1372, line: 177, baseType: !353, size: 8, offset: 11040)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "nocookieudp", scope: !1371, file: !1372, line: 178, baseType: !397, size: 16, offset: 11056)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1371, file: !1372, line: 179, baseType: !397, size: 16, offset: 11072)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "pad_acl", scope: !1371, file: !1372, line: 180, baseType: !643, size: 64, offset: 11136)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "maxbits", scope: !1371, file: !1372, line: 181, baseType: !80, size: 32, offset: 11200)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "dns64", scope: !1371, file: !1372, line: 182, baseType: !1698, size: 128, offset: 11264)
!1698 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dns64list_t", file: !89, line: 75, baseType: !1699)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !89, line: 75, size: 128, elements: !1700)
!1700 = !{!1701, !1705}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1699, file: !89, line: 75, baseType: !1702, size: 64)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dns64_t", file: !89, line: 74, baseType: !1704)
!1704 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_dns64", file: !89, line: 74, flags: DIFlagFwdDecl)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1699, file: !89, line: 75, baseType: !1702, size: 64, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "dns64cnt", scope: !1371, file: !1372, line: 183, baseType: !80, size: 32, offset: 11392)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "rpzs", scope: !1371, file: !1372, line: 184, baseType: !1708, size: 64, offset: 11456)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rpz_zones_t", file: !114, line: 127, baseType: !1710)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rpz_zones", file: !114, line: 207, size: 41280, elements: !1711)
!1711 = !{!1712, !1728, !1781, !1795, !1796, !1797, !1798, !1814, !1815, !1816, !1820, !1827, !1828, !1829, !1830, !1883, !1884, !1888, !1889, !1890, !1891}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1710, file: !114, line: 208, baseType: !1713, size: 384)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rpz_popt_t", file: !114, line: 190, baseType: !1714)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rpz_popt", file: !114, line: 191, size: 384, elements: !1715)
!1715 = !{!1716, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "no_rd_ok", scope: !1714, file: !114, line: 192, baseType: !1717, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rpz_zbits_t", file: !114, line: 88, baseType: !1199)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "no_log", scope: !1714, file: !114, line: 193, baseType: !1717, size: 64, offset: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "nsip_on", scope: !1714, file: !114, line: 194, baseType: !1717, size: 64, offset: 128)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "nsdname_on", scope: !1714, file: !114, line: 195, baseType: !1717, size: 64, offset: 192)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "dnsrps_enabled", scope: !1714, file: !114, line: 196, baseType: !353, size: 8, offset: 256)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "break_dnssec", scope: !1714, file: !114, line: 197, baseType: !353, size: 8, offset: 264)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "qname_wait_recurse", scope: !1714, file: !114, line: 198, baseType: !353, size: 8, offset: 272)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "nsip_wait_recurse", scope: !1714, file: !114, line: 199, baseType: !353, size: 8, offset: 280)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "min_ns_labels", scope: !1714, file: !114, line: 200, baseType: !80, size: 32, offset: 288)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "num_zones", scope: !1714, file: !114, line: 201, baseType: !1727, size: 8, offset: 320)
!1727 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rpz_num_t", file: !114, line: 81, baseType: !707)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "zones", scope: !1710, file: !114, line: 209, baseType: !1729, size: 4096, offset: 384)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 4096, elements: !525)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rpz_zone_t", file: !114, line: 126, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rpz_zone", file: !114, line: 129, size: 7616, elements: !1733)
!1733 = !{!1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1748, !1749, !1754, !1755, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1780}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1732, file: !114, line: 130, baseType: !650, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1732, file: !114, line: 131, baseType: !1727, size: 8, offset: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !1732, file: !114, line: 132, baseType: !279, size: 640, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "client_ip", scope: !1732, file: !114, line: 133, baseType: !279, size: 640, offset: 768)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1732, file: !114, line: 134, baseType: !279, size: 640, offset: 1408)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "nsdname", scope: !1732, file: !114, line: 135, baseType: !279, size: 640, offset: 2048)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "nsip", scope: !1732, file: !114, line: 136, baseType: !279, size: 640, offset: 2688)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "passthru", scope: !1732, file: !114, line: 137, baseType: !279, size: 640, offset: 3328)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "drop", scope: !1732, file: !114, line: 138, baseType: !279, size: 640, offset: 3968)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_only", scope: !1732, file: !114, line: 139, baseType: !279, size: 640, offset: 4608)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "cname", scope: !1732, file: !114, line: 140, baseType: !279, size: 640, offset: 5248)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "max_policy_ttl", scope: !1732, file: !114, line: 141, baseType: !585, size: 32, offset: 5888)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1732, file: !114, line: 142, baseType: !1747, size: 32, offset: 5920)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rpz_policy_t", file: !114, line: 79, baseType: !113)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "min_update_interval", scope: !1732, file: !114, line: 144, baseType: !586, size: 32, offset: 5952)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1732, file: !114, line: 145, baseType: !1750, size: 64, offset: 6016)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_ht_t", file: !1752, line: 23, baseType: !1753)
!1752 = !DIFile(filename: "isc/include/isc/ht.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "e74e984499e03de796b26b5938f0f5ca")
!1753 = !DICompositeType(tag: DW_TAG_structure_type, name: "isc_ht", file: !1752, line: 23, flags: DIFlagFwdDecl)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "rpzs", scope: !1732, file: !114, line: 146, baseType: !1708, size: 64, offset: 6080)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdated", scope: !1732, file: !114, line: 147, baseType: !1756, size: 64, offset: 6144)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_time_t", file: !265, line: 81, baseType: !1757)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_time", file: !1758, line: 86, size: 64, elements: !1759)
!1758 = !DIFile(filename: "../../lib/isc/unix/include/isc/time.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "a0595c59a7eba4194a4b687b13cdc892")
!1759 = !{!1760, !1761}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "seconds", scope: !1757, file: !1758, line: 87, baseType: !80, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "nanoseconds", scope: !1757, file: !1758, line: 88, baseType: !80, size: 32, offset: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "updatepending", scope: !1732, file: !114, line: 148, baseType: !353, size: 8, offset: 6208)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "updaterunning", scope: !1732, file: !114, line: 149, baseType: !353, size: 8, offset: 6216)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !1732, file: !114, line: 150, baseType: !254, size: 64, offset: 6272)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "dbversion", scope: !1732, file: !114, line: 151, baseType: !449, size: 64, offset: 6336)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "updb", scope: !1732, file: !114, line: 152, baseType: !254, size: 64, offset: 6400)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "updbversion", scope: !1732, file: !114, line: 153, baseType: !449, size: 64, offset: 6464)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "updbit", scope: !1732, file: !114, line: 154, baseType: !937, size: 64, offset: 6528)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "newnodes", scope: !1732, file: !114, line: 155, baseType: !1750, size: 64, offset: 6592)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "db_registered", scope: !1732, file: !114, line: 156, baseType: !353, size: 8, offset: 6656)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "addsoa", scope: !1732, file: !114, line: 157, baseType: !353, size: 8, offset: 6664)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "updatetimer", scope: !1732, file: !114, line: 158, baseType: !1773, size: 64, offset: 6720)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_timer_t", file: !265, line: 82, baseType: !1775)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_timer", file: !1776, line: 124, size: 64, elements: !1777)
!1776 = !DIFile(filename: "isc/include/isc/timer.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "fb32aeeb353e38cff055b720a3f7e611")
!1777 = !{!1778, !1779}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "impmagic", scope: !1775, file: !1776, line: 125, baseType: !80, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1775, file: !1776, line: 126, baseType: !80, size: 32, offset: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "updateevent", scope: !1732, file: !114, line: 159, baseType: !1412, size: 832, offset: 6784)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "triggers", scope: !1710, file: !114, line: 210, baseType: !1782, size: 32768, offset: 4480)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1783, size: 32768, elements: !525)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rpz_triggers_t", file: !114, line: 111, baseType: !1784)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rpz_triggers", file: !114, line: 112, size: 512, elements: !1785)
!1785 = !{!1786, !1788, !1789, !1790, !1791, !1792, !1793, !1794}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "client_ipv4", scope: !1784, file: !114, line: 113, baseType: !1787, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rpz_trigger_counter_t", file: !114, line: 106, baseType: !325)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "client_ipv6", scope: !1784, file: !114, line: 114, baseType: !1787, size: 64, offset: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !1784, file: !114, line: 115, baseType: !1787, size: 64, offset: 128)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !1784, file: !114, line: 116, baseType: !1787, size: 64, offset: 192)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1784, file: !114, line: 117, baseType: !1787, size: 64, offset: 256)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "nsdname", scope: !1784, file: !114, line: 118, baseType: !1787, size: 64, offset: 320)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "nsipv4", scope: !1784, file: !114, line: 119, baseType: !1787, size: 64, offset: 384)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "nsipv6", scope: !1784, file: !114, line: 120, baseType: !1787, size: 64, offset: 448)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "rpz_ver", scope: !1710, file: !114, line: 217, baseType: !480, size: 32, offset: 37248)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "defined", scope: !1710, file: !114, line: 219, baseType: !1717, size: 64, offset: 37312)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "load_begun", scope: !1710, file: !114, line: 234, baseType: !1717, size: 64, offset: 37376)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "have", scope: !1710, file: !114, line: 235, baseType: !1799, size: 768, offset: 37440)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rpz_have_t", file: !114, line: 171, baseType: !1800)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rpz_have", file: !114, line: 172, size: 768, elements: !1801)
!1801 = !{!1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "client_ipv4", scope: !1800, file: !114, line: 173, baseType: !1717, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "client_ipv6", scope: !1800, file: !114, line: 174, baseType: !1717, size: 64, offset: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "client_ip", scope: !1800, file: !114, line: 175, baseType: !1717, size: 64, offset: 128)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "qname", scope: !1800, file: !114, line: 176, baseType: !1717, size: 64, offset: 192)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !1800, file: !114, line: 177, baseType: !1717, size: 64, offset: 256)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1800, file: !114, line: 178, baseType: !1717, size: 64, offset: 320)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1800, file: !114, line: 179, baseType: !1717, size: 64, offset: 384)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "nsdname", scope: !1800, file: !114, line: 180, baseType: !1717, size: 64, offset: 448)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "nsipv4", scope: !1800, file: !114, line: 181, baseType: !1717, size: 64, offset: 512)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "nsipv6", scope: !1800, file: !114, line: 182, baseType: !1717, size: 64, offset: 576)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "nsip", scope: !1800, file: !114, line: 183, baseType: !1717, size: 64, offset: 640)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "qname_skip_recurse", scope: !1800, file: !114, line: 184, baseType: !1717, size: 64, offset: 704)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "total_triggers", scope: !1710, file: !114, line: 243, baseType: !1783, size: 512, offset: 38208)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !1710, file: !114, line: 245, baseType: !309, size: 64, offset: 38720)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "taskmgr", scope: !1710, file: !114, line: 246, baseType: !1817, size: 64, offset: 38784)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_taskmgr_t", file: !265, line: 79, baseType: !1819)
!1819 = !DICompositeType(tag: DW_TAG_structure_type, name: "isc_taskmgr", file: !265, line: 79, flags: DIFlagFwdDecl)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "timermgr", scope: !1710, file: !114, line: 247, baseType: !1821, size: 64, offset: 38848)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_timermgr_t", file: !265, line: 83, baseType: !1823)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_timermgr", file: !1776, line: 111, size: 64, elements: !1824)
!1824 = !{!1825, !1826}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "impmagic", scope: !1823, file: !1776, line: 112, baseType: !80, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1823, file: !1776, line: 113, baseType: !80, size: 32, offset: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "updater", scope: !1710, file: !114, line: 248, baseType: !1041, size: 64, offset: 38912)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1710, file: !114, line: 249, baseType: !650, size: 64, offset: 38976)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "irefs", scope: !1710, file: !114, line: 250, baseType: !650, size: 64, offset: 39040)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "search_lock", scope: !1710, file: !114, line: 257, baseType: !1831, size: 1536, offset: 39104)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_rwlock_t", file: !265, line: 68, baseType: !1832)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_rwlock", file: !1833, line: 34, size: 1536, elements: !1834)
!1833 = !DIFile(filename: "isc/include/isc/rwlock.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "12f0d511ee40b76119e1d4217f45e40c")
!1834 = !{!1835, !1836, !1837, !1841, !1845, !1846, !1847, !1879, !1880, !1881, !1882}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1832, file: !1833, line: 36, baseType: !80, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1832, file: !1833, line: 37, baseType: !1292, size: 320, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "spins", scope: !1832, file: !1833, line: 38, baseType: !1838, size: 32, offset: 384)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1839, line: 26, baseType: !1840)
!1839 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !400, line: 41, baseType: !480)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "write_requests", scope: !1832, file: !1833, line: 54, baseType: !1842, size: 64, offset: 448)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_int_fast32_t", file: !653, line: 122, baseType: !1843)
!1843 = !DIDerivedType(tag: DW_TAG_atomic_type, baseType: !1844)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !656, line: 61, baseType: !817)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "write_completions", scope: !1832, file: !1833, line: 55, baseType: !1842, size: 64, offset: 512)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "cnt_and_flag", scope: !1832, file: !1833, line: 56, baseType: !1842, size: 64, offset: 576)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "readable", scope: !1832, file: !1833, line: 59, baseType: !1848, size: 384, offset: 640)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_condition_t", file: !1849, line: 26, baseType: !1850)
!1849 = !DIFile(filename: "../../lib/isc/pthreads/include/isc/condition.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "62b58362ceb741b1d07e97ccdd1bbd3c")
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_cond_t", file: !1295, line: 80, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1295, line: 75, size: 384, elements: !1852)
!1852 = !{!1853, !1875, !1877}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !1851, file: !1295, line: 77, baseType: !1854, size: 384)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_cond_s", file: !1312, line: 94, size: 384, elements: !1855)
!1855 = !{!1856, !1868, !1869, !1871, !1872, !1873, !1874}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "__wseq", scope: !1854, file: !1312, line: 96, baseType: !1857, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "__atomic_wide_counter", file: !1858, line: 33, baseType: !1859)
!1858 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h", directory: "", checksumkind: CSK_MD5, checksum: "2708e6e61e266abad2d765ccef838dbe")
!1859 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1858, line: 25, size: 64, elements: !1860)
!1860 = !{!1861, !1863}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "__value64", scope: !1859, file: !1858, line: 27, baseType: !1862, size: 64)
!1862 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "__value32", scope: !1859, file: !1858, line: 32, baseType: !1864, size: 64)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1859, file: !1858, line: 28, size: 64, elements: !1865)
!1865 = !{!1866, !1867}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "__low", scope: !1864, file: !1858, line: 30, baseType: !80, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "__high", scope: !1864, file: !1858, line: 31, baseType: !80, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "__g1_start", scope: !1854, file: !1312, line: 97, baseType: !1857, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "__g_refs", scope: !1854, file: !1312, line: 98, baseType: !1870, size: 64, offset: 128)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 64, elements: !721)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "__g_size", scope: !1854, file: !1312, line: 99, baseType: !1870, size: 64, offset: 192)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "__g1_orig_size", scope: !1854, file: !1312, line: 100, baseType: !80, size: 32, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "__wrefs", scope: !1854, file: !1312, line: 101, baseType: !80, size: 32, offset: 288)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "__g_signals", scope: !1854, file: !1312, line: 102, baseType: !1870, size: 64, offset: 320)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !1851, file: !1295, line: 78, baseType: !1876, size: 384)
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 384, elements: !62)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !1851, file: !1295, line: 79, baseType: !1878, size: 64)
!1878 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "writeable", scope: !1832, file: !1833, line: 60, baseType: !1848, size: 384, offset: 1024)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "readers_waiting", scope: !1832, file: !1833, line: 61, baseType: !80, size: 32, offset: 1408)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "write_granted", scope: !1832, file: !1833, line: 64, baseType: !80, size: 32, offset: 1440)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "write_quota", scope: !1832, file: !1833, line: 67, baseType: !80, size: 32, offset: 1472)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "maint_lock", scope: !1710, file: !114, line: 258, baseType: !1292, size: 320, offset: 40640)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "cidr", scope: !1710, file: !114, line: 260, baseType: !1885, size: 64, offset: 40960)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_rpz_cidr_node_t", file: !114, line: 165, baseType: !1887)
!1887 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_rpz_cidr_node", file: !114, line: 165, flags: DIFlagFwdDecl)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "rbt", scope: !1710, file: !114, line: 261, baseType: !1501, size: 64, offset: 41024)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "rps_cstr", scope: !1710, file: !114, line: 266, baseType: !347, size: 64, offset: 41088)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "rps_cstr_size", scope: !1710, file: !114, line: 267, baseType: !325, size: 64, offset: 41152)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "rps_client", scope: !1710, file: !114, line: 268, baseType: !1892, size: 64, offset: 41216)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DICompositeType(tag: DW_TAG_structure_type, name: "librpz_client", file: !114, line: 268, flags: DIFlagFwdDecl)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "catzs", scope: !1371, file: !1372, line: 185, baseType: !1895, size: 64, offset: 11520)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_catz_zones_t", file: !89, line: 46, baseType: !1897)
!1897 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_catz_zones", file: !89, line: 46, flags: DIFlagFwdDecl)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "dlz_searched", scope: !1371, file: !1372, line: 186, baseType: !1899, size: 128, offset: 11584)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dlzdblist_t", file: !89, line: 64, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !89, line: 64, size: 128, elements: !1901)
!1901 = !{!1902, !1994}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1900, file: !89, line: 64, baseType: !1903, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dlzdb_t", file: !89, line: 63, baseType: !1905)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_dlzdb", file: !1906, line: 213, size: 640, elements: !1907)
!1906 = !DIFile(filename: "include/dns/dlz.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "a13d8cb029c61d03d714720b32526070")
!1907 = !{!1908, !1909, !1910, !1977, !1978, !1983, !1984, !1985, !1990}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1905, file: !1906, line: 214, baseType: !80, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !1905, file: !1906, line: 215, baseType: !309, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "implementation", scope: !1905, file: !1906, line: 216, baseType: !1911, size: 64, offset: 128)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dlzimplementation_t", file: !89, line: 62, baseType: !1913)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_dlzimplementation", file: !1906, line: 201, size: 384, elements: !1914)
!1914 = !{!1915, !1916, !1970, !1971, !1972}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1913, file: !1906, line: 202, baseType: !328, size: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "methods", scope: !1913, file: !1906, line: 203, baseType: !1917, size: 64, offset: 64)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1919)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dlzmethods_t", file: !1906, line: 198, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dns_dlzmethods", file: !1906, line: 191, size: 384, elements: !1921)
!1921 = !{!1922, !1927, !1932, !1937, !1944, !1949}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1920, file: !1906, line: 192, baseType: !1923, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dlzcreate_t", file: !1906, line: 117, baseType: !1924)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{!264, !309, !328, !80, !1252, !225, !1253}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !1920, file: !1906, line: 193, baseType: !1928, size: 64, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dlzdestroy_t", file: !1906, line: 127, baseType: !1929)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DISubroutineType(types: !1931)
!1931 = !{null, !225, !1253}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "findzone", scope: !1920, file: !1906, line: 194, baseType: !1933, size: 64, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dlzfindzone_t", file: !1906, line: 136, baseType: !1934)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DISubroutineType(types: !1936)
!1936 = !{!264, !225, !225, !309, !396, !277, !1094, !1106, !255}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "allowzonexfr", scope: !1920, file: !1906, line: 195, baseType: !1938, size: 64, offset: 192)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dlzallowzonexfr_t", file: !1906, line: 100, baseType: !1939)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{!264, !225, !225, !309, !396, !277, !1942, !255}
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1115)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1920, file: !1906, line: 196, baseType: !1945, size: 64, offset: 256)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dlzconfigure_t", file: !1906, line: 168, baseType: !1946)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!264, !225, !225, !1369, !1903}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "ssumatch", scope: !1920, file: !1906, line: 197, baseType: !1950, size: 64, offset: 320)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dlzssumatch_t", file: !1906, line: 178, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!353, !277, !277, !1954, !403, !1968, !225, !225}
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1956)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_netaddr_t", file: !265, line: 61, baseType: !1957)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_netaddr", file: !1958, line: 32, size: 928, elements: !1959)
!1958 = !DIFile(filename: "isc/include/isc/netaddr.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "32c674d5a712846b6ad38c7272a5fe0e")
!1959 = !{!1960, !1961, !1967}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !1957, file: !1958, line: 33, baseType: !80, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1957, file: !1958, line: 40, baseType: !1962, size: 864, offset: 32)
!1962 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1957, file: !1958, line: 34, size: 864, elements: !1963)
!1963 = !{!1964, !1965, !1966}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1962, file: !1958, line: 35, baseType: !694, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "in6", scope: !1962, file: !1958, line: 36, baseType: !700, size: 128)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "un", scope: !1962, file: !1958, line: 38, baseType: !1165, size: 864)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "zone", scope: !1957, file: !1958, line: 41, baseType: !586, size: 32, offset: 896)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !619)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !1913, file: !1906, line: 204, baseType: !309, size: 64, offset: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "driverarg", scope: !1913, file: !1906, line: 205, baseType: !225, size: 64, offset: 192)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1913, file: !1906, line: 206, baseType: !1973, size: 128, offset: 256)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1913, file: !1906, line: 206, size: 128, elements: !1974)
!1974 = !{!1975, !1976}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1973, file: !1906, line: 206, baseType: !1911, size: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1973, file: !1906, line: 206, baseType: !1911, size: 64, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "dbdata", scope: !1905, file: !1906, line: 217, baseType: !225, size: 64, offset: 192)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "configure_callback", scope: !1905, file: !1906, line: 218, baseType: !1979, size: 64, offset: 256)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "dlzconfigure_callback_t", file: !1906, line: 209, baseType: !1980)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{!264, !1369, !1903, !849}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "search", scope: !1905, file: !1906, line: 219, baseType: !353, size: 8, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "dlzname", scope: !1905, file: !1906, line: 220, baseType: !347, size: 64, offset: 384)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1905, file: !1906, line: 221, baseType: !1986, size: 128, offset: 448)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1905, file: !1906, line: 221, size: 128, elements: !1987)
!1987 = !{!1988, !1989}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1986, file: !1906, line: 221, baseType: !1903, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1986, file: !1906, line: 221, baseType: !1903, size: 64, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "ssutable", scope: !1905, file: !1906, line: 222, baseType: !1991, size: 64, offset: 576)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_ssutable_t", file: !89, line: 136, baseType: !1993)
!1993 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_ssutable", file: !89, line: 136, flags: DIFlagFwdDecl)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1900, file: !89, line: 64, baseType: !1903, size: 64, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "dlz_unsearched", scope: !1371, file: !1372, line: 187, baseType: !1899, size: 128, offset: 11712)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "fail_ttl", scope: !1371, file: !1372, line: 188, baseType: !586, size: 32, offset: 11840)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "failcache", scope: !1371, file: !1372, line: 189, baseType: !1998, size: 64, offset: 11904)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_badcache_t", file: !89, line: 39, baseType: !2000)
!2000 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_badcache", file: !89, line: 39, flags: DIFlagFwdDecl)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "matchclients", scope: !1371, file: !1372, line: 195, baseType: !643, size: 64, offset: 11968)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "matchdestinations", scope: !1371, file: !1372, line: 196, baseType: !643, size: 64, offset: 12032)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "matchrecursiveonly", scope: !1371, file: !1372, line: 197, baseType: !353, size: 8, offset: 12096)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !1371, file: !1372, line: 200, baseType: !650, size: 64, offset: 12160)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "weakrefs", scope: !1371, file: !1372, line: 201, baseType: !650, size: 64, offset: 12224)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1371, file: !1372, line: 204, baseType: !80, size: 32, offset: 12288)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1371, file: !1372, line: 206, baseType: !2008, size: 128, offset: 12352)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1371, file: !1372, line: 206, size: 128, elements: !2009)
!2009 = !{!2010, !2012}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2008, file: !1372, line: 206, baseType: !2011, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2008, file: !1372, line: 206, baseType: !2011, size: 64, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "viewlist", scope: !1371, file: !1372, line: 207, baseType: !2014, size: 64, offset: 12480)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_viewlist_t", file: !89, line: 148, baseType: !2016)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !89, line: 148, size: 128, elements: !2017)
!2017 = !{!2018, !2019}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2016, file: !89, line: 148, baseType: !1369, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2016, file: !89, line: 148, baseType: !1369, size: 64, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "managed_keys", scope: !1371, file: !1372, line: 209, baseType: !849, size: 64, offset: 12544)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !1371, file: !1372, line: 210, baseType: !849, size: 64, offset: 12608)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "redirectzone", scope: !1371, file: !1372, line: 211, baseType: !358, size: 64, offset: 12672)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "redirectfixed", scope: !1371, file: !1372, line: 214, baseType: !1645, size: 4224, offset: 12736)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "new_zone_dir", scope: !1371, file: !1372, line: 223, baseType: !347, size: 64, offset: 16960)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "new_zone_file", scope: !1371, file: !1372, line: 224, baseType: !347, size: 64, offset: 17024)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "new_zone_db", scope: !1371, file: !1372, line: 225, baseType: !347, size: 64, offset: 17088)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "new_zone_dbenv", scope: !1371, file: !1372, line: 226, baseType: !225, size: 64, offset: 17152)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "new_zone_mapsize", scope: !1371, file: !1372, line: 227, baseType: !1199, size: 64, offset: 17216)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "new_zone_config", scope: !1371, file: !1372, line: 228, baseType: !225, size: 64, offset: 17280)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_destroy", scope: !1371, file: !1372, line: 229, baseType: !2031, size: 64, offset: 17344)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DISubroutineType(types: !2033)
!2033 = !{null, !1253}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "new_zone_lock", scope: !1371, file: !1372, line: 230, baseType: !1292, size: 320, offset: 17408)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "secret", scope: !1371, file: !1372, line: 232, baseType: !599, size: 256, offset: 17728)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "v6bias", scope: !1371, file: !1372, line: 233, baseType: !80, size: 32, offset: 17984)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "dtenv", scope: !1371, file: !1372, line: 235, baseType: !2038, size: 64, offset: 18048)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dtenv_t", file: !89, line: 80, baseType: !2040)
!2040 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_dtenv", file: !89, line: 80, flags: DIFlagFwdDecl)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "dttypes", scope: !1371, file: !1372, line: 236, baseType: !2042, size: 16, offset: 18112)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_dtmsgtype_t", file: !89, line: 82, baseType: !397)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "plugins", scope: !1371, file: !1372, line: 240, baseType: !225, size: 64, offset: 18176)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "plugins_free", scope: !1371, file: !1372, line: 241, baseType: !2045, size: 64, offset: 18240)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{null, !309, !1253}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "hooktable", scope: !1371, file: !1372, line: 244, baseType: !225, size: 64, offset: 18304)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "hooktable_free", scope: !1371, file: !1372, line: 245, baseType: !2045, size: 64, offset: 18368)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "ssumatch", scope: !1245, file: !235, line: 295, baseType: !2051, size: 64, offset: 640)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzssumatch_t", file: !235, line: 238, baseType: !2052)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!353, !328, !328, !328, !328, !328, !586, !285, !225, !225}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "addrdataset", scope: !1245, file: !235, line: 296, baseType: !2056, size: 64, offset: 704)
!2056 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzmodrdataset_t", file: !235, line: 257, baseType: !2057)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DISubroutineType(types: !2059)
!2059 = !{!264, !328, !328, !225, !225, !225}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "subtractrdataset", scope: !1245, file: !235, line: 297, baseType: !2056, size: 64, offset: 768)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "delrdataset", scope: !1245, file: !235, line: 298, baseType: !2062, size: 64, offset: 832)
!2062 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_sdlzdelrdataset_t", file: !235, line: 272, baseType: !2057)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "mctx", scope: !1239, file: !2, line: 91, baseType: !309, size: 64, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "driverarg", scope: !1239, file: !2, line: 92, baseType: !225, size: 64, offset: 128)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1239, file: !2, line: 93, baseType: !80, size: 32, offset: 192)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "driverlock", scope: !1239, file: !2, line: 94, baseType: !1292, size: 320, offset: 256)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "dlz_imp", scope: !1239, file: !2, line: 95, baseType: !1911, size: 64, offset: 576)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt_lock", scope: !236, file: !2, line: 103, baseType: !1292, size: 320, offset: 1152)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "references", scope: !236, file: !2, line: 105, baseType: !80, size: 32, offset: 1472)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "future_version", scope: !236, file: !2, line: 106, baseType: !449, size: 64, offset: 1536)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "dummy_version", scope: !236, file: !2, line: 107, baseType: !480, size: 32, offset: 1600)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "sdlz_dbiterator_t", file: !2, line: 133, baseType: !1336)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "sdlz_rdatasetiter_t", file: !2, line: 138, baseType: !2076)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdlz_rdatasetiter", file: !2, line: 135, size: 448, elements: !2077)
!2077 = !{!2078, !2079}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2076, file: !2, line: 136, baseType: !985, size: 384)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2076, file: !2, line: 137, baseType: !576, size: 64, offset: 384)
!2080 = !{!0, !8, !13, !18, !20, !25, !27, !32, !37, !42, !47, !52, !57, !59, !64, !69, !2081, !2086, !2091, !2093, !2098, !2103, !2105, !2110, !2112, !2114, !2116, !2118, !2120, !2122, !2124, !2126, !2131, !2133, !2135, !2137, !2142, !74, !2147, !2149, !2154, !2156, !2158, !2161, !2163, !2168, !2170, !2175, !2177, !2180, !2185, !2190, !2192, !2197, !2199, !2204, !2209, !2214, !2216, !2221, !2223, !2225, !2230, !2235, !2240, !2245, !2250, !2252, !2254, !2259, !2261, !2264, !2266, !2268, !2270, !2272, !2274, !2279, !2281, !2283, !2285, !2290, !2295, !2297, !2302, !2304, !2306}
!2081 = !DIGlobalVariableExpression(var: !2082, expr: !DIExpression())
!2082 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2109, type: !2083, isLocal: true, isDefinition: true)
!2083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 376, elements: !2084)
!2084 = !{!2085}
!2085 = !DISubrange(count: 47)
!2086 = !DIGlobalVariableExpression(var: !2087, expr: !DIExpression())
!2087 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2126, type: !2088, isLocal: true, isDefinition: true)
!2088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 216, elements: !2089)
!2089 = !{!2090}
!2090 = !DISubrange(count: 27)
!2091 = !DIGlobalVariableExpression(var: !2092, expr: !DIExpression())
!2092 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2131, type: !61, isLocal: true, isDefinition: true)
!2093 = !DIGlobalVariableExpression(var: !2094, expr: !DIExpression())
!2094 = distinct !DIGlobalVariable(scope: null, file: !2, line: 321, type: !2095, isLocal: true, isDefinition: true)
!2095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 816, elements: !2096)
!2096 = !{!2097}
!2097 = !DISubrange(count: 102)
!2098 = !DIGlobalVariableExpression(var: !2099, expr: !DIExpression())
!2099 = distinct !DIGlobalVariable(scope: null, file: !2, line: 323, type: !2100, isLocal: true, isDefinition: true)
!2100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 528, elements: !2101)
!2101 = !{!2102}
!2102 = !DISubrange(count: 66)
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression())
!2104 = distinct !DIGlobalVariable(scope: null, file: !2, line: 324, type: !29, isLocal: true, isDefinition: true)
!2105 = !DIGlobalVariableExpression(var: !2106, expr: !DIExpression())
!2106 = distinct !DIGlobalVariable(scope: null, file: !2, line: 326, type: !2107, isLocal: true, isDefinition: true)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 544, elements: !2108)
!2108 = !{!2109}
!2109 = !DISubrange(count: 68)
!2110 = !DIGlobalVariableExpression(var: !2111, expr: !DIExpression())
!2111 = distinct !DIGlobalVariable(scope: null, file: !2, line: 506, type: !54, isLocal: true, isDefinition: true)
!2112 = !DIGlobalVariableExpression(var: !2113, expr: !DIExpression())
!2113 = distinct !DIGlobalVariable(scope: null, file: !2, line: 506, type: !54, isLocal: true, isDefinition: true)
!2114 = !DIGlobalVariableExpression(var: !2115, expr: !DIExpression())
!2115 = distinct !DIGlobalVariable(scope: null, file: !2, line: 506, type: !54, isLocal: true, isDefinition: true)
!2116 = !DIGlobalVariableExpression(var: !2117, expr: !DIExpression())
!2117 = distinct !DIGlobalVariable(scope: null, file: !2, line: 506, type: !54, isLocal: true, isDefinition: true)
!2118 = !DIGlobalVariableExpression(var: !2119, expr: !DIExpression())
!2119 = distinct !DIGlobalVariable(scope: null, file: !2, line: 509, type: !71, isLocal: true, isDefinition: true)
!2120 = !DIGlobalVariableExpression(var: !2121, expr: !DIExpression())
!2121 = distinct !DIGlobalVariable(scope: null, file: !2, line: 509, type: !71, isLocal: true, isDefinition: true)
!2122 = !DIGlobalVariableExpression(var: !2123, expr: !DIExpression())
!2123 = distinct !DIGlobalVariable(scope: null, file: !2, line: 509, type: !71, isLocal: true, isDefinition: true)
!2124 = !DIGlobalVariableExpression(var: !2125, expr: !DIExpression())
!2125 = distinct !DIGlobalVariable(scope: null, file: !2, line: 509, type: !71, isLocal: true, isDefinition: true)
!2126 = !DIGlobalVariableExpression(var: !2127, expr: !DIExpression())
!2127 = distinct !DIGlobalVariable(scope: null, file: !2, line: 515, type: !2128, isLocal: true, isDefinition: true)
!2128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 224, elements: !2129)
!2129 = !{!2130}
!2130 = !DISubrange(count: 28)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(scope: null, file: !2, line: 515, type: !2128, isLocal: true, isDefinition: true)
!2133 = !DIGlobalVariableExpression(var: !2134, expr: !DIExpression())
!2134 = distinct !DIGlobalVariable(scope: null, file: !2, line: 515, type: !2128, isLocal: true, isDefinition: true)
!2135 = !DIGlobalVariableExpression(var: !2136, expr: !DIExpression())
!2136 = distinct !DIGlobalVariable(scope: null, file: !2, line: 515, type: !2128, isLocal: true, isDefinition: true)
!2137 = !DIGlobalVariableExpression(var: !2138, expr: !DIExpression())
!2138 = distinct !DIGlobalVariable(scope: null, file: !2, line: 523, type: !2139, isLocal: true, isDefinition: true)
!2139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 336, elements: !2140)
!2140 = !{!2141}
!2141 = !DISubrange(count: 42)
!2142 = !DIGlobalVariableExpression(var: !2143, expr: !DIExpression())
!2143 = distinct !DIGlobalVariable(scope: null, file: !2, line: 339, type: !2144, isLocal: true, isDefinition: true)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 392, elements: !2145)
!2145 = !{!2146}
!2146 = !DISubrange(count: 49)
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1644, type: !29, isLocal: true, isDefinition: true)
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1649, type: !2151, isLocal: true, isDefinition: true)
!2151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 192, elements: !2152)
!2152 = !{!2153}
!2153 = !DISubrange(count: 24)
!2154 = !DIGlobalVariableExpression(var: !2155, expr: !DIExpression())
!2155 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1650, type: !44, isLocal: true, isDefinition: true)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1651, type: !29, isLocal: true, isDefinition: true)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1658, type: !2160, isLocal: true, isDefinition: true)
!2160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 512, elements: !525)
!2161 = !DIGlobalVariableExpression(var: !2162, expr: !DIExpression())
!2162 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1661, type: !2100, isLocal: true, isDefinition: true)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1666, type: !2165, isLocal: true, isDefinition: true)
!2165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 264, elements: !2166)
!2166 = !{!2167}
!2167 = !DISubrange(count: 33)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1668, type: !2128, isLocal: true, isDefinition: true)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1679, type: !2172, isLocal: true, isDefinition: true)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 184, elements: !2173)
!2173 = !{!2174}
!2174 = !DISubrange(count: 23)
!2175 = !DIGlobalVariableExpression(var: !2176, expr: !DIExpression())
!2176 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1707, type: !15, isLocal: true, isDefinition: true)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1708, type: !2179, isLocal: true, isDefinition: true)
!2179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 320, elements: !1320)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1717, type: !2182, isLocal: true, isDefinition: true)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 368, elements: !2183)
!2183 = !{!2184}
!2184 = !DISubrange(count: 46)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1717, type: !2187, isLocal: true, isDefinition: true)
!2187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 296, elements: !2188)
!2188 = !{!2189}
!2189 = !DISubrange(count: 37)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1593, type: !39, isLocal: true, isDefinition: true)
!2192 = !DIGlobalVariableExpression(var: !2193, expr: !DIExpression())
!2193 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1611, type: !2194, isLocal: true, isDefinition: true)
!2194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 304, elements: !2195)
!2195 = !{!2196}
!2196 = !DISubrange(count: 38)
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "sdlzdb_methods", scope: !76, file: !2, line: 1289, type: !247, isLocal: true, isDefinition: true)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(scope: null, file: !2, line: 395, type: !2201, isLocal: true, isDefinition: true)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 400, elements: !2202)
!2202 = !{!2203}
!2203 = !DISubrange(count: 50)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(scope: null, file: !2, line: 419, type: !2206, isLocal: true, isDefinition: true)
!2206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 328, elements: !2207)
!2207 = !{!2208}
!2208 = !DISubrange(count: 41)
!2209 = !DIGlobalVariableExpression(var: !2210, expr: !DIExpression())
!2210 = distinct !DIGlobalVariable(scope: null, file: !2, line: 434, type: !2211, isLocal: true, isDefinition: true)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 504, elements: !2212)
!2212 = !{!2213}
!2213 = !DISubrange(count: 63)
!2214 = !DIGlobalVariableExpression(var: !2215, expr: !DIExpression())
!2215 = distinct !DIGlobalVariable(scope: null, file: !2, line: 445, type: !2172, isLocal: true, isDefinition: true)
!2216 = !DIGlobalVariableExpression(var: !2217, expr: !DIExpression())
!2217 = distinct !DIGlobalVariable(scope: null, file: !2, line: 452, type: !2218, isLocal: true, isDefinition: true)
!2218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 272, elements: !2219)
!2219 = !{!2220}
!2220 = !DISubrange(count: 34)
!2221 = !DIGlobalVariableExpression(var: !2222, expr: !DIExpression())
!2222 = distinct !DIGlobalVariable(scope: null, file: !2, line: 453, type: !2201, isLocal: true, isDefinition: true)
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(scope: null, file: !2, line: 462, type: !2194, isLocal: true, isDefinition: true)
!2225 = !DIGlobalVariableExpression(var: !2226, expr: !DIExpression())
!2226 = distinct !DIGlobalVariable(scope: null, file: !2, line: 546, type: !2227, isLocal: true, isDefinition: true)
!2227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 352, elements: !2228)
!2228 = !{!2229}
!2229 = !DISubrange(count: 44)
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2231 = distinct !DIGlobalVariable(scope: null, file: !2, line: 549, type: !2232, isLocal: true, isDefinition: true)
!2232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 96, elements: !2233)
!2233 = !{!2234}
!2234 = !DISubrange(count: 12)
!2235 = !DIGlobalVariableExpression(var: !2236, expr: !DIExpression())
!2236 = distinct !DIGlobalVariable(scope: null, file: !2, line: 587, type: !2237, isLocal: true, isDefinition: true)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 584, elements: !2238)
!2238 = !{!2239}
!2239 = !DISubrange(count: 73)
!2240 = !DIGlobalVariableExpression(var: !2241, expr: !DIExpression())
!2241 = distinct !DIGlobalVariable(scope: null, file: !2, line: 628, type: !2242, isLocal: true, isDefinition: true)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 600, elements: !2243)
!2243 = !{!2244}
!2244 = !DISubrange(count: 75)
!2245 = !DIGlobalVariableExpression(var: !2246, expr: !DIExpression())
!2246 = distinct !DIGlobalVariable(scope: null, file: !2, line: 739, type: !2247, isLocal: true, isDefinition: true)
!2247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 472, elements: !2248)
!2248 = !{!2249}
!2249 = !DISubrange(count: 59)
!2250 = !DIGlobalVariableExpression(var: !2251, expr: !DIExpression())
!2251 = distinct !DIGlobalVariable(scope: null, file: !2, line: 740, type: !29, isLocal: true, isDefinition: true)
!2252 = !DIGlobalVariableExpression(var: !2253, expr: !DIExpression())
!2253 = distinct !DIGlobalVariable(scope: null, file: !2, line: 742, type: !44, isLocal: true, isDefinition: true)
!2254 = !DIGlobalVariableExpression(var: !2255, expr: !DIExpression())
!2255 = distinct !DIGlobalVariable(scope: null, file: !2, line: 743, type: !2256, isLocal: true, isDefinition: true)
!2256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 488, elements: !2257)
!2257 = !{!2258}
!2258 = !DISubrange(count: 61)
!2259 = !DIGlobalVariableExpression(var: !2260, expr: !DIExpression())
!2260 = distinct !DIGlobalVariable(scope: null, file: !2, line: 755, type: !61, isLocal: true, isDefinition: true)
!2261 = !DIGlobalVariableExpression(var: !2262, expr: !DIExpression())
!2262 = distinct !DIGlobalVariable(scope: null, file: !2, line: 779, type: !2263, isLocal: true, isDefinition: true)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 16, elements: !721)
!2264 = !DIGlobalVariableExpression(var: !2265, expr: !DIExpression())
!2265 = distinct !DIGlobalVariable(scope: null, file: !2, line: 844, type: !61, isLocal: true, isDefinition: true)
!2266 = !DIGlobalVariableExpression(var: !2267, expr: !DIExpression())
!2267 = distinct !DIGlobalVariable(scope: null, file: !2, line: 844, type: !61, isLocal: true, isDefinition: true)
!2268 = !DIGlobalVariableExpression(var: !2269, expr: !DIExpression())
!2269 = distinct !DIGlobalVariable(scope: null, file: !2, line: 844, type: !61, isLocal: true, isDefinition: true)
!2270 = !DIGlobalVariableExpression(var: !2271, expr: !DIExpression())
!2271 = distinct !DIGlobalVariable(scope: null, file: !2, line: 844, type: !61, isLocal: true, isDefinition: true)
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(name: "dbiterator_methods", scope: !76, file: !2, line: 212, type: !945, isLocal: true, isDefinition: true)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1353, type: !2276, isLocal: true, isDefinition: true)
!2276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 288, elements: !2277)
!2277 = !{!2278}
!2278 = !DISubrange(count: 36)
!2279 = !DIGlobalVariableExpression(var: !2280, expr: !DIExpression())
!2280 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1353, type: !2276, isLocal: true, isDefinition: true)
!2281 = !DIGlobalVariableExpression(var: !2282, expr: !DIExpression())
!2282 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1353, type: !2276, isLocal: true, isDefinition: true)
!2283 = !DIGlobalVariableExpression(var: !2284, expr: !DIExpression())
!2284 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1353, type: !2276, isLocal: true, isDefinition: true)
!2285 = !DIGlobalVariableExpression(var: !2286, expr: !DIExpression())
!2286 = distinct !DIGlobalVariable(scope: null, file: !2, line: 862, type: !2287, isLocal: true, isDefinition: true)
!2287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1344, elements: !2288)
!2288 = !{!2289}
!2289 = !DISubrange(count: 168)
!2290 = !DIGlobalVariableExpression(var: !2291, expr: !DIExpression())
!2291 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1503, type: !2292, isLocal: true, isDefinition: true)
!2292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 408, elements: !2293)
!2293 = !{!2294}
!2294 = !DISubrange(count: 51)
!2295 = !DIGlobalVariableExpression(var: !2296, expr: !DIExpression())
!2296 = distinct !DIGlobalVariable(name: "rdataset_methods", scope: !76, file: !2, line: 1471, type: !372, isLocal: true, isDefinition: true)
!2297 = !DIGlobalVariableExpression(var: !2298, expr: !DIExpression())
!2298 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1075, type: !2299, isLocal: true, isDefinition: true)
!2299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 792, elements: !2300)
!2300 = !{!2301}
!2301 = !DISubrange(count: 99)
!2302 = !DIGlobalVariableExpression(var: !2303, expr: !DIExpression())
!2303 = distinct !DIGlobalVariable(name: "rdatasetiter_methods", scope: !76, file: !2, line: 305, type: !992, isLocal: true, isDefinition: true)
!2304 = !DIGlobalVariableExpression(var: !2305, expr: !DIExpression())
!2305 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1284, type: !54, isLocal: true, isDefinition: true)
!2306 = !DIGlobalVariableExpression(var: !2307, expr: !DIExpression())
!2307 = distinct !DIGlobalVariable(scope: null, file: !2, line: 904, type: !2227, isLocal: true, isDefinition: true)
!2308 = !{i32 7, !"Dwarf Version", i32 5}
!2309 = !{i32 2, !"Debug Info Version", i32 3}
!2310 = !{i32 1, !"wchar_size", i32 4}
!2311 = !{i32 8, !"PIC Level", i32 2}
!2312 = !{i32 7, !"uwtable", i32 2}
!2313 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!2314 = distinct !DISubprogram(name: "dns_sdlz_putrr", scope: !2, file: !2, line: 1838, type: !2315, scopeLine: 1840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !2317)
!2315 = !DISubroutineType(types: !2316)
!2316 = !{!264, !1269, !328, !585, !328}
!2317 = !{!2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2331, !2332, !2333, !2337, !2338, !2339, !2340, !2341, !2348}
!2318 = !DILocalVariable(name: "lookup", arg: 1, scope: !2314, file: !2, line: 1838, type: !1269)
!2319 = !DILocalVariable(name: "type", arg: 2, scope: !2314, file: !2, line: 1838, type: !328)
!2320 = !DILocalVariable(name: "ttl", arg: 3, scope: !2314, file: !2, line: 1838, type: !585)
!2321 = !DILocalVariable(name: "data", arg: 4, scope: !2314, file: !2, line: 1839, type: !328)
!2322 = !DILocalVariable(name: "rdatalist", scope: !2314, file: !2, line: 1841, type: !576)
!2323 = !DILocalVariable(name: "rdata", scope: !2314, file: !2, line: 1842, type: !388)
!2324 = !DILocalVariable(name: "typeval", scope: !2314, file: !2, line: 1843, type: !403)
!2325 = !DILocalVariable(name: "r", scope: !2314, file: !2, line: 1844, type: !2326)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_consttextregion_t", file: !265, line: 38, baseType: !2327)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_consttextregion", file: !520, line: 39, size: 128, elements: !2328)
!2328 = !{!2329, !2330}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2327, file: !520, line: 40, baseType: !328, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2327, file: !520, line: 41, baseType: !80, size: 32, offset: 64)
!2331 = !DILocalVariable(name: "b", scope: !2314, file: !2, line: 1845, type: !293)
!2332 = !DILocalVariable(name: "rdatabuf", scope: !2314, file: !2, line: 1846, type: !292)
!2333 = !DILocalVariable(name: "lex", scope: !2314, file: !2, line: 1847, type: !2334)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_lex_t", file: !265, line: 54, baseType: !2336)
!2336 = !DICompositeType(tag: DW_TAG_structure_type, name: "isc_lex", file: !265, line: 54, flags: DIFlagFwdDecl)
!2337 = !DILocalVariable(name: "result", scope: !2314, file: !2, line: 1848, type: !264)
!2338 = !DILocalVariable(name: "size", scope: !2314, file: !2, line: 1849, type: !80)
!2339 = !DILocalVariable(name: "mctx", scope: !2314, file: !2, line: 1850, type: !309)
!2340 = !DILocalVariable(name: "origin", scope: !2314, file: !2, line: 1851, type: !277)
!2341 = !DILocalVariable(name: "_deconst", scope: !2342, file: !2, line: 1910, type: !2344)
!2342 = distinct !DILexicalBlock(scope: !2343, file: !2, line: 1910, column: 3)
!2343 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1909, column: 5)
!2344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2314, file: !2, line: 1910, size: 64, elements: !2345)
!2345 = !{!2346, !2347}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "_var", scope: !2344, file: !2, line: 1910, baseType: !225, size: 64)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "_const", scope: !2344, file: !2, line: 1910, baseType: !631, size: 64)
!2348 = !DILabel(scope: !2314, name: "failure", file: !2, line: 1949)
!2349 = !DILocation(line: 1838, column: 34, scope: !2314)
!2350 = !DILocation(line: 1838, column: 54, scope: !2314)
!2351 = !DILocation(line: 1838, column: 70, scope: !2314)
!2352 = !DILocation(line: 1839, column: 21, scope: !2314)
!2353 = !DILocation(line: 1841, column: 2, scope: !2314)
!2354 = !DILocation(line: 1841, column: 19, scope: !2314)
!2355 = !DILocation(line: 1842, column: 2, scope: !2314)
!2356 = !DILocation(line: 1842, column: 15, scope: !2314)
!2357 = !DILocation(line: 1843, column: 2, scope: !2314)
!2358 = !DILocation(line: 1843, column: 18, scope: !2314)
!2359 = !DILocation(line: 1844, column: 2, scope: !2314)
!2360 = !DILocation(line: 1844, column: 24, scope: !2314)
!2361 = !DILocation(line: 1845, column: 2, scope: !2314)
!2362 = !DILocation(line: 1845, column: 15, scope: !2314)
!2363 = !DILocation(line: 1846, column: 2, scope: !2314)
!2364 = !DILocation(line: 1846, column: 16, scope: !2314)
!2365 = !DILocation(line: 1847, column: 2, scope: !2314)
!2366 = !DILocation(line: 1847, column: 13, scope: !2314)
!2367 = !DILocation(line: 1848, column: 2, scope: !2314)
!2368 = !DILocation(line: 1848, column: 15, scope: !2314)
!2369 = !DILocation(line: 1849, column: 2, scope: !2314)
!2370 = !DILocation(line: 1849, column: 15, scope: !2314)
!2371 = !DILocation(line: 1850, column: 2, scope: !2314)
!2372 = !DILocation(line: 1850, column: 13, scope: !2314)
!2373 = !DILocation(line: 1851, column: 2, scope: !2314)
!2374 = !DILocation(line: 1851, column: 20, scope: !2314)
!2375 = !DILocation(line: 1853, column: 2, scope: !2314)
!2376 = !DILocation(line: 0, scope: !2314)
!2377 = !DILocation(line: 1854, column: 2, scope: !2314)
!2378 = !DILocation(line: 1855, column: 2, scope: !2314)
!2379 = !DILocation(line: 1857, column: 9, scope: !2314)
!2380 = !DILocation(line: 1857, column: 17, scope: !2314)
!2381 = !DILocation(line: 1857, column: 23, scope: !2314)
!2382 = !DILocation(line: 1857, column: 30, scope: !2314)
!2383 = !DILocation(line: 1857, column: 7, scope: !2314)
!2384 = !DILocation(line: 1859, column: 11, scope: !2314)
!2385 = !DILocation(line: 1859, column: 4, scope: !2314)
!2386 = !DILocation(line: 1859, column: 9, scope: !2314)
!2387 = !DILocation(line: 1860, column: 20, scope: !2314)
!2388 = !DILocation(line: 1860, column: 13, scope: !2314)
!2389 = !DILocation(line: 1860, column: 4, scope: !2314)
!2390 = !DILocation(line: 1860, column: 11, scope: !2314)
!2391 = !DILocation(line: 1861, column: 11, scope: !2314)
!2392 = !DILocation(line: 1861, column: 9, scope: !2314)
!2393 = !DILocation(line: 1862, column: 6, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1862, column: 6)
!2395 = !DILocation(line: 1862, column: 13, scope: !2394)
!2396 = !DILocation(line: 1862, column: 6, scope: !2314)
!2397 = !DILocation(line: 1863, column: 11, scope: !2394)
!2398 = !DILocation(line: 1863, column: 3, scope: !2394)
!2399 = !DILocation(line: 1865, column: 14, scope: !2314)
!2400 = !DILocation(line: 1865, column: 12, scope: !2314)
!2401 = !DILocation(line: 1866, column: 2, scope: !2314)
!2402 = !DILocation(line: 1866, column: 9, scope: !2314)
!2403 = !DILocation(line: 1866, column: 19, scope: !2314)
!2404 = !DILocation(line: 1867, column: 7, scope: !2405)
!2405 = distinct !DILexicalBlock(scope: !2406, file: !2, line: 1867, column: 7)
!2406 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1866, column: 28)
!2407 = !DILocation(line: 1867, column: 18, scope: !2405)
!2408 = !DILocation(line: 1867, column: 26, scope: !2405)
!2409 = !DILocation(line: 1867, column: 23, scope: !2405)
!2410 = !DILocation(line: 1867, column: 7, scope: !2406)
!2411 = !DILocation(line: 1868, column: 4, scope: !2405)
!2412 = !DILocation(line: 1869, column: 15, scope: !2406)
!2413 = !DILocation(line: 1869, column: 13, scope: !2406)
!2414 = distinct !{!2414, !2401, !2415, !2416}
!2415 = !DILocation(line: 1870, column: 2, scope: !2314)
!2416 = !{!"llvm.loop.mustprogress"}
!2417 = !DILocation(line: 1872, column: 6, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1872, column: 6)
!2419 = !DILocation(line: 1872, column: 16, scope: !2418)
!2420 = !DILocation(line: 1872, column: 6, scope: !2314)
!2421 = !DILocation(line: 1873, column: 15, scope: !2422)
!2422 = distinct !DILexicalBlock(scope: !2418, file: !2, line: 1872, column: 25)
!2423 = !DILocation(line: 1873, column: 13, scope: !2422)
!2424 = !DILocation(line: 1874, column: 7, scope: !2425)
!2425 = distinct !DILexicalBlock(scope: !2422, file: !2, line: 1874, column: 7)
!2426 = !DILocation(line: 1874, column: 17, scope: !2425)
!2427 = !DILocation(line: 1874, column: 7, scope: !2422)
!2428 = !DILocation(line: 1875, column: 4, scope: !2425)
!2429 = !DILocation(line: 1876, column: 22, scope: !2422)
!2430 = !DILocation(line: 1876, column: 3, scope: !2422)
!2431 = !DILocation(line: 1877, column: 24, scope: !2422)
!2432 = !DILocation(line: 1877, column: 32, scope: !2422)
!2433 = !DILocation(line: 1877, column: 38, scope: !2422)
!2434 = !DILocation(line: 1877, column: 45, scope: !2422)
!2435 = !DILocation(line: 1877, column: 3, scope: !2422)
!2436 = !DILocation(line: 1877, column: 14, scope: !2422)
!2437 = !DILocation(line: 1877, column: 22, scope: !2422)
!2438 = !DILocation(line: 1878, column: 21, scope: !2422)
!2439 = !DILocation(line: 1878, column: 3, scope: !2422)
!2440 = !DILocation(line: 1878, column: 14, scope: !2422)
!2441 = !DILocation(line: 1878, column: 19, scope: !2422)
!2442 = !DILocation(line: 1879, column: 20, scope: !2422)
!2443 = !DILocation(line: 1879, column: 3, scope: !2422)
!2444 = !DILocation(line: 1879, column: 14, scope: !2422)
!2445 = !DILocation(line: 1879, column: 18, scope: !2422)
!2446 = !DILocation(line: 1880, column: 3, scope: !2422)
!2447 = !DILocation(line: 1880, column: 3, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2422, file: !2, line: 1880, column: 3)
!2449 = !DILocation(line: 1880, column: 3, scope: !2450)
!2450 = distinct !DILexicalBlock(scope: !2451, file: !2, line: 1880, column: 3)
!2451 = distinct !DILexicalBlock(scope: !2448, file: !2, line: 1880, column: 3)
!2452 = !DILocation(line: 1880, column: 3, scope: !2451)
!2453 = !DILocation(line: 1881, column: 2, scope: !2422)
!2454 = !DILocation(line: 1882, column: 7, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !2418, file: !2, line: 1882, column: 7)
!2456 = !DILocation(line: 1882, column: 18, scope: !2455)
!2457 = !DILocation(line: 1882, column: 24, scope: !2455)
!2458 = !DILocation(line: 1882, column: 22, scope: !2455)
!2459 = !DILocation(line: 1882, column: 7, scope: !2418)
!2460 = !DILocation(line: 1890, column: 21, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2455, file: !2, line: 1882, column: 29)
!2462 = !DILocation(line: 1890, column: 4, scope: !2461)
!2463 = !DILocation(line: 1890, column: 15, scope: !2461)
!2464 = !DILocation(line: 1890, column: 19, scope: !2461)
!2465 = !DILocation(line: 1891, column: 3, scope: !2461)
!2466 = !DILocation(line: 1893, column: 10, scope: !2314)
!2467 = !DILocation(line: 1893, column: 8, scope: !2314)
!2468 = !DILocation(line: 1894, column: 6, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1894, column: 6)
!2470 = !DILocation(line: 1894, column: 12, scope: !2469)
!2471 = !DILocation(line: 1894, column: 6, scope: !2314)
!2472 = !DILocation(line: 1895, column: 3, scope: !2469)
!2473 = !DILocation(line: 1896, column: 17, scope: !2314)
!2474 = !DILocation(line: 1896, column: 2, scope: !2314)
!2475 = !DILocation(line: 1898, column: 7, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1898, column: 6)
!2477 = !DILocation(line: 1898, column: 15, scope: !2476)
!2478 = !DILocation(line: 1898, column: 21, scope: !2476)
!2479 = !DILocation(line: 1898, column: 29, scope: !2476)
!2480 = !DILocation(line: 1898, column: 35, scope: !2476)
!2481 = !DILocation(line: 1898, column: 65, scope: !2476)
!2482 = !DILocation(line: 1898, column: 6, scope: !2314)
!2483 = !DILocation(line: 1899, column: 13, scope: !2476)
!2484 = !DILocation(line: 1899, column: 21, scope: !2476)
!2485 = !DILocation(line: 1899, column: 27, scope: !2476)
!2486 = !DILocation(line: 1899, column: 34, scope: !2476)
!2487 = !DILocation(line: 1899, column: 10, scope: !2476)
!2488 = !DILocation(line: 1899, column: 3, scope: !2476)
!2489 = !DILocation(line: 1901, column: 12, scope: !2476)
!2490 = !DILocation(line: 1901, column: 10, scope: !2476)
!2491 = !DILocation(line: 1903, column: 6, scope: !2314)
!2492 = !DILocation(line: 1904, column: 26, scope: !2314)
!2493 = !DILocation(line: 1904, column: 11, scope: !2314)
!2494 = !DILocation(line: 1904, column: 9, scope: !2314)
!2495 = !DILocation(line: 1905, column: 6, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1905, column: 6)
!2497 = !DILocation(line: 1905, column: 13, scope: !2496)
!2498 = !DILocation(line: 1905, column: 6, scope: !2314)
!2499 = !DILocation(line: 1906, column: 3, scope: !2496)
!2500 = !DILocation(line: 1908, column: 22, scope: !2314)
!2501 = !DILocation(line: 1908, column: 9, scope: !2314)
!2502 = !DILocation(line: 1908, column: 7, scope: !2314)
!2503 = !DILocation(line: 1909, column: 2, scope: !2314)
!2504 = !DILocation(line: 1910, column: 3, scope: !2343)
!2505 = !DILocation(line: 1910, column: 3, scope: !2342)
!2506 = !DILocation(line: 1910, column: 3, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2342, file: !2, line: 1910, column: 3)
!2508 = !DILocation(line: 1910, column: 3, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2507, file: !2, line: 1910, column: 3)
!2510 = !DILocation(line: 1911, column: 3, scope: !2343)
!2511 = !DILocation(line: 1911, column: 3, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2343, file: !2, line: 1911, column: 3)
!2513 = !DILocation(line: 1913, column: 31, scope: !2343)
!2514 = !DILocation(line: 1913, column: 12, scope: !2343)
!2515 = !DILocation(line: 1913, column: 10, scope: !2343)
!2516 = !DILocation(line: 1914, column: 7, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2343, file: !2, line: 1914, column: 7)
!2518 = !DILocation(line: 1914, column: 14, scope: !2517)
!2519 = !DILocation(line: 1914, column: 7, scope: !2343)
!2520 = !DILocation(line: 1915, column: 4, scope: !2517)
!2521 = !DILocation(line: 1917, column: 12, scope: !2343)
!2522 = !DILocation(line: 1918, column: 32, scope: !2343)
!2523 = !DILocation(line: 1918, column: 49, scope: !2343)
!2524 = !DILocation(line: 1918, column: 12, scope: !2343)
!2525 = !DILocation(line: 1918, column: 10, scope: !2343)
!2526 = !DILocation(line: 1919, column: 7, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2343, file: !2, line: 1919, column: 7)
!2528 = !DILocation(line: 1919, column: 14, scope: !2527)
!2529 = !DILocation(line: 1919, column: 7, scope: !2343)
!2530 = !DILocation(line: 1920, column: 4, scope: !2527)
!2531 = !DILocation(line: 1922, column: 31, scope: !2343)
!2532 = !DILocation(line: 1922, column: 38, scope: !2343)
!2533 = !DILocation(line: 1922, column: 49, scope: !2343)
!2534 = !DILocation(line: 1923, column: 10, scope: !2343)
!2535 = !DILocation(line: 1923, column: 21, scope: !2343)
!2536 = !DILocation(line: 1923, column: 27, scope: !2343)
!2537 = !DILocation(line: 1924, column: 10, scope: !2343)
!2538 = !DILocation(line: 1925, column: 10, scope: !2343)
!2539 = !DILocation(line: 1925, column: 16, scope: !2343)
!2540 = !DILocation(line: 1926, column: 11, scope: !2343)
!2541 = !DILocation(line: 1926, column: 19, scope: !2343)
!2542 = !DILocation(line: 1922, column: 12, scope: !2343)
!2543 = !DILocation(line: 1922, column: 10, scope: !2343)
!2544 = !DILocation(line: 1927, column: 7, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2343, file: !2, line: 1927, column: 7)
!2546 = !DILocation(line: 1927, column: 14, scope: !2545)
!2547 = !DILocation(line: 1927, column: 7, scope: !2343)
!2548 = !DILocation(line: 1928, column: 4, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2545, file: !2, line: 1927, column: 32)
!2550 = !DILocation(line: 1929, column: 11, scope: !2549)
!2551 = !DILocation(line: 1930, column: 3, scope: !2549)
!2552 = !DILocation(line: 1931, column: 7, scope: !2553)
!2553 = distinct !DILexicalBlock(scope: !2343, file: !2, line: 1931, column: 7)
!2554 = !DILocation(line: 1931, column: 12, scope: !2553)
!2555 = !DILocation(line: 1931, column: 7, scope: !2343)
!2556 = !DILocation(line: 1932, column: 4, scope: !2553)
!2557 = !DILocation(line: 1933, column: 8, scope: !2343)
!2558 = !DILocation(line: 1934, column: 7, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2343, file: !2, line: 1934, column: 7)
!2560 = !DILocation(line: 1934, column: 12, scope: !2559)
!2561 = !DILocation(line: 1934, column: 7, scope: !2343)
!2562 = !DILocation(line: 1935, column: 9, scope: !2559)
!2563 = !DILocation(line: 1935, column: 4, scope: !2559)
!2564 = !DILocation(line: 1936, column: 2, scope: !2343)
!2565 = !DILocation(line: 1936, column: 11, scope: !2314)
!2566 = !DILocation(line: 1936, column: 18, scope: !2314)
!2567 = distinct !{!2567, !2503, !2568, !2416}
!2568 = !DILocation(line: 1936, column: 34, scope: !2314)
!2569 = !DILocation(line: 1938, column: 6, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1938, column: 6)
!2571 = !DILocation(line: 1938, column: 13, scope: !2570)
!2572 = !DILocation(line: 1938, column: 6, scope: !2314)
!2573 = !DILocation(line: 1939, column: 3, scope: !2570)
!2574 = !DILocation(line: 1941, column: 2, scope: !2314)
!2575 = !DILocation(line: 1941, column: 2, scope: !2576)
!2576 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1941, column: 2)
!2577 = !DILocation(line: 1941, column: 2, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2579, file: !2, line: 1941, column: 2)
!2579 = distinct !DILexicalBlock(scope: !2576, file: !2, line: 1941, column: 2)
!2580 = !DILocation(line: 1941, column: 2, scope: !2579)
!2581 = !DILocation(line: 1942, column: 2, scope: !2314)
!2582 = !DILocation(line: 1942, column: 2, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1942, column: 2)
!2584 = !DILocation(line: 1942, column: 2, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2586, file: !2, line: 1942, column: 2)
!2586 = distinct !DILexicalBlock(scope: !2583, file: !2, line: 1942, column: 2)
!2587 = !DILocation(line: 1942, column: 2, scope: !2586)
!2588 = !DILocation(line: 1944, column: 6, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1944, column: 6)
!2590 = !DILocation(line: 1944, column: 10, scope: !2589)
!2591 = !DILocation(line: 1944, column: 6, scope: !2314)
!2592 = !DILocation(line: 1945, column: 3, scope: !2589)
!2593 = !DILocation(line: 1947, column: 2, scope: !2314)
!2594 = !DILocation(line: 1949, column: 2, scope: !2314)
!2595 = !DILocation(line: 1950, column: 6, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1950, column: 6)
!2597 = !DILocation(line: 1950, column: 15, scope: !2596)
!2598 = !DILocation(line: 1950, column: 6, scope: !2314)
!2599 = !DILocation(line: 1951, column: 3, scope: !2596)
!2600 = !DILocation(line: 1952, column: 6, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1952, column: 6)
!2602 = !DILocation(line: 1952, column: 10, scope: !2601)
!2603 = !DILocation(line: 1952, column: 6, scope: !2314)
!2604 = !DILocation(line: 1953, column: 3, scope: !2601)
!2605 = !DILocation(line: 1954, column: 2, scope: !2314)
!2606 = !DILocation(line: 1954, column: 2, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2314, file: !2, line: 1954, column: 2)
!2608 = !DILocation(line: 1956, column: 10, scope: !2314)
!2609 = !DILocation(line: 1956, column: 2, scope: !2314)
!2610 = !DILocation(line: 1957, column: 1, scope: !2314)
!2611 = !DISubprogram(name: "isc_assertion_failed", scope: !130, file: !130, line: 37, type: !2612, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{null, !328, !480, !2614, !328}
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_assertiontype_t", file: !130, line: 30, baseType: !129)
!2615 = !DISubprogram(name: "strlen", scope: !2616, file: !2616, line: 407, type: !2617, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2616 = !DIFile(filename: "/usr/include/string.h", directory: "", checksumkind: CSK_MD5, checksum: "f443da8025a0b7c1498fb6c554ec788d")
!2617 = !DISubroutineType(types: !2618)
!2618 = !{!327, !328}
!2619 = !DISubprogram(name: "dns_rdatatype_fromtext", scope: !2620, file: !2620, line: 25, type: !2621, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2620 = !DIFile(filename: "include/dns/rdatatype.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "4060731bfe5fe2bfc52e6e897b3068ce")
!2621 = !DISubroutineType(types: !2622)
!2622 = !{!264, !2623, !2624}
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_textregion_t", file: !265, line: 80, baseType: !2626)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_textregion", file: !520, line: 26, size: 128, elements: !2627)
!2627 = !{!2628, !2629}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2626, file: !520, line: 27, baseType: !347, size: 64)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2626, file: !520, line: 28, baseType: !80, size: 32, offset: 64)
!2630 = !DISubprogram(name: "isc__mem_get", scope: !312, file: !312, line: 630, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2631 = !DISubprogram(name: "dns_rdatalist_init", scope: !579, file: !579, line: 65, type: !2632, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2632 = !DISubroutineType(types: !2633)
!2633 = !{null, !576}
!2634 = !DISubprogram(name: "dns_rdata_init", scope: !391, file: !391, line: 188, type: !2635, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2635 = !DISubroutineType(types: !2636)
!2636 = !{null, !388}
!2637 = !DISubprogram(name: "isc_lex_create", scope: !2638, file: !2638, line: 142, type: !2639, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2638 = !DIFile(filename: "isc/include/isc/lex.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "c630a697d1f9af6801673ad356823219")
!2639 = !DISubroutineType(types: !2640)
!2640 = !{!264, !309, !325, !2641}
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64)
!2642 = distinct !DISubprogram(name: "initial_size", scope: !2, file: !2, line: 254, type: !2643, scopeLine: 254, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !2645)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{!80, !328}
!2645 = !{!2646, !2647}
!2646 = !DILocalVariable(name: "data", arg: 1, scope: !2642, file: !2, line: 254, type: !328)
!2647 = !DILocalVariable(name: "len", scope: !2642, file: !2, line: 255, type: !80)
!2648 = !DILocation(line: 254, column: 26, scope: !2642)
!2649 = !DILocation(line: 255, column: 2, scope: !2642)
!2650 = !DILocation(line: 255, column: 15, scope: !2642)
!2651 = !DILocation(line: 255, column: 29, scope: !2642)
!2652 = !DILocation(line: 255, column: 22, scope: !2642)
!2653 = !DILocation(line: 255, column: 35, scope: !2642)
!2654 = !DILocation(line: 255, column: 41, scope: !2642)
!2655 = !DILocation(line: 255, column: 21, scope: !2642)
!2656 = !DILocation(line: 256, column: 10, scope: !2642)
!2657 = !DILocation(line: 256, column: 14, scope: !2642)
!2658 = !DILocation(line: 256, column: 19, scope: !2642)
!2659 = !DILocation(line: 257, column: 1, scope: !2642)
!2660 = !DILocation(line: 256, column: 2, scope: !2642)
!2661 = !DISubprogram(name: "isc_lex_openbuffer", scope: !2638, file: !2638, line: 252, type: !2662, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2662 = !DISubroutineType(types: !2663)
!2663 = !{!264, !2334, !292}
!2664 = !DISubprogram(name: "isc_buffer_allocate", scope: !295, file: !295, line: 196, type: !2665, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{!264, !309, !2667, !80}
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!2668 = !DISubprogram(name: "dns_rdata_fromtext", scope: !391, file: !391, line: 349, type: !2669, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2669 = !DISubroutineType(types: !2670)
!2670 = !{!264, !388, !396, !403, !2334, !277, !80, !309, !292, !266}
!2671 = !DISubprogram(name: "isc_buffer_free", scope: !295, file: !295, line: 237, type: !2672, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2672 = !DISubroutineType(types: !2673)
!2673 = !{null, !2667}
!2674 = !DISubprogram(name: "isc_lex_destroy", scope: !2638, file: !2638, line: 160, type: !2675, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2675 = !DISubroutineType(types: !2676)
!2676 = !{null, !2641}
!2677 = !DISubprogram(name: "isc__mem_put", scope: !312, file: !312, line: 634, type: !331, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2678 = distinct !DISubprogram(name: "dns_sdlz_putnamedrr", scope: !2, file: !2, line: 1960, type: !2679, scopeLine: 1962, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !2681)
!2679 = !DISubroutineType(types: !2680)
!2680 = !{!264, !1335, !328, !328, !585, !328}
!2681 = !{!2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2701}
!2682 = !DILocalVariable(name: "allnodes", arg: 1, scope: !2678, file: !2, line: 1960, type: !1335)
!2683 = !DILocalVariable(name: "name", arg: 2, scope: !2678, file: !2, line: 1960, type: !328)
!2684 = !DILocalVariable(name: "type", arg: 3, scope: !2678, file: !2, line: 1961, type: !328)
!2685 = !DILocalVariable(name: "ttl", arg: 4, scope: !2678, file: !2, line: 1961, type: !585)
!2686 = !DILocalVariable(name: "data", arg: 5, scope: !2678, file: !2, line: 1961, type: !328)
!2687 = !DILocalVariable(name: "newname", scope: !2678, file: !2, line: 1963, type: !358)
!2688 = !DILocalVariable(name: "origin", scope: !2678, file: !2, line: 1964, type: !277)
!2689 = !DILocalVariable(name: "fnewname", scope: !2678, file: !2, line: 1965, type: !1645)
!2690 = !DILocalVariable(name: "sdlz", scope: !2678, file: !2, line: 1966, type: !233)
!2691 = !DILocalVariable(name: "sdlznode", scope: !2678, file: !2, line: 1967, type: !1344)
!2692 = !DILocalVariable(name: "mctx", scope: !2678, file: !2, line: 1968, type: !309)
!2693 = !DILocalVariable(name: "b", scope: !2678, file: !2, line: 1969, type: !293)
!2694 = !DILocalVariable(name: "result", scope: !2678, file: !2, line: 1970, type: !264)
!2695 = !DILocalVariable(name: "_deconst", scope: !2696, file: !2, line: 1978, type: !2697)
!2696 = distinct !DILexicalBlock(scope: !2678, file: !2, line: 1978, column: 2)
!2697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2678, file: !2, line: 1978, size: 64, elements: !2698)
!2698 = !{!2699, !2700}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "_var", scope: !2697, file: !2, line: 1978, baseType: !225, size: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "_const", scope: !2697, file: !2, line: 1978, baseType: !631, size: 64)
!2701 = !DILocalVariable(name: "nlabels", scope: !2702, file: !2, line: 1987, type: !80)
!2702 = distinct !DILexicalBlock(scope: !2703, file: !2, line: 1985, column: 39)
!2703 = distinct !DILexicalBlock(scope: !2678, file: !2, line: 1985, column: 6)
!2704 = !DILocation(line: 1960, column: 41, scope: !2678)
!2705 = !DILocation(line: 1960, column: 63, scope: !2678)
!2706 = !DILocation(line: 1961, column: 19, scope: !2678)
!2707 = !DILocation(line: 1961, column: 35, scope: !2678)
!2708 = !DILocation(line: 1961, column: 52, scope: !2678)
!2709 = !DILocation(line: 1963, column: 2, scope: !2678)
!2710 = !DILocation(line: 1963, column: 14, scope: !2678)
!2711 = !DILocation(line: 1964, column: 2, scope: !2678)
!2712 = !DILocation(line: 1964, column: 20, scope: !2678)
!2713 = !DILocation(line: 1965, column: 2, scope: !2678)
!2714 = !DILocation(line: 1965, column: 18, scope: !2678)
!2715 = !DILocation(line: 1966, column: 2, scope: !2678)
!2716 = !DILocation(line: 1966, column: 17, scope: !2678)
!2717 = !DILocation(line: 1966, column: 41, scope: !2678)
!2718 = !DILocation(line: 1966, column: 51, scope: !2678)
!2719 = !DILocation(line: 1966, column: 58, scope: !2678)
!2720 = !DILocation(line: 1967, column: 2, scope: !2678)
!2721 = !DILocation(line: 1967, column: 18, scope: !2678)
!2722 = !DILocation(line: 1968, column: 2, scope: !2678)
!2723 = !DILocation(line: 1968, column: 13, scope: !2678)
!2724 = !DILocation(line: 1968, column: 20, scope: !2678)
!2725 = !DILocation(line: 1968, column: 26, scope: !2678)
!2726 = !DILocation(line: 1968, column: 33, scope: !2678)
!2727 = !DILocation(line: 1969, column: 2, scope: !2678)
!2728 = !DILocation(line: 1969, column: 15, scope: !2678)
!2729 = !DILocation(line: 1970, column: 2, scope: !2678)
!2730 = !DILocation(line: 1970, column: 15, scope: !2678)
!2731 = !DILocation(line: 1972, column: 12, scope: !2678)
!2732 = !DILocation(line: 1972, column: 10, scope: !2678)
!2733 = !DILocation(line: 1974, column: 7, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2678, file: !2, line: 1974, column: 6)
!2735 = !DILocation(line: 1974, column: 13, scope: !2734)
!2736 = !DILocation(line: 1974, column: 21, scope: !2734)
!2737 = !DILocation(line: 1974, column: 27, scope: !2734)
!2738 = !DILocation(line: 1974, column: 57, scope: !2734)
!2739 = !DILocation(line: 1974, column: 6, scope: !2678)
!2740 = !DILocation(line: 1975, column: 13, scope: !2734)
!2741 = !DILocation(line: 1975, column: 19, scope: !2734)
!2742 = !DILocation(line: 1975, column: 26, scope: !2734)
!2743 = !DILocation(line: 1975, column: 10, scope: !2734)
!2744 = !DILocation(line: 1975, column: 3, scope: !2734)
!2745 = !DILocation(line: 1977, column: 12, scope: !2734)
!2746 = !DILocation(line: 1977, column: 10, scope: !2734)
!2747 = !DILocation(line: 1978, column: 2, scope: !2678)
!2748 = !DILocation(line: 1978, column: 2, scope: !2696)
!2749 = !DILocation(line: 1978, column: 2, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2696, file: !2, line: 1978, column: 2)
!2751 = !DILocation(line: 1978, column: 2, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2750, file: !2, line: 1978, column: 2)
!2753 = !DILocation(line: 1979, column: 2, scope: !2678)
!2754 = !DILocation(line: 1979, column: 2, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2678, file: !2, line: 1979, column: 2)
!2756 = !DILocation(line: 1981, column: 29, scope: !2678)
!2757 = !DILocation(line: 1981, column: 42, scope: !2678)
!2758 = !DILocation(line: 1981, column: 11, scope: !2678)
!2759 = !DILocation(line: 1981, column: 9, scope: !2678)
!2760 = !DILocation(line: 1982, column: 6, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2678, file: !2, line: 1982, column: 6)
!2762 = !DILocation(line: 1982, column: 13, scope: !2761)
!2763 = !DILocation(line: 1982, column: 6, scope: !2678)
!2764 = !DILocation(line: 1983, column: 11, scope: !2761)
!2765 = !DILocation(line: 1983, column: 3, scope: !2761)
!2766 = !DILocation(line: 1985, column: 6, scope: !2703)
!2767 = !DILocation(line: 1985, column: 16, scope: !2703)
!2768 = !DILocation(line: 1985, column: 23, scope: !2703)
!2769 = !{i8 0, i8 2}
!2770 = !{}
!2771 = !DILocation(line: 1985, column: 6, scope: !2678)
!2772 = !DILocation(line: 1987, column: 3, scope: !2702)
!2773 = !DILocation(line: 1987, column: 16, scope: !2702)
!2774 = !DILocation(line: 1987, column: 47, scope: !2702)
!2775 = !DILocation(line: 1987, column: 26, scope: !2702)
!2776 = !DILocation(line: 1988, column: 29, scope: !2702)
!2777 = !DILocation(line: 1988, column: 41, scope: !2702)
!2778 = !DILocation(line: 1988, column: 49, scope: !2702)
!2779 = !DILocation(line: 1988, column: 54, scope: !2702)
!2780 = !DILocation(line: 1988, column: 3, scope: !2702)
!2781 = !DILocation(line: 1989, column: 2, scope: !2703)
!2782 = !DILocation(line: 1989, column: 2, scope: !2702)
!2783 = !DILocation(line: 1991, column: 13, scope: !2678)
!2784 = !DILocation(line: 1991, column: 11, scope: !2678)
!2785 = !DILocation(line: 1992, column: 6, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2678, file: !2, line: 1992, column: 6)
!2787 = !DILocation(line: 1992, column: 15, scope: !2786)
!2788 = !DILocation(line: 1992, column: 23, scope: !2786)
!2789 = !DILocation(line: 1992, column: 42, scope: !2786)
!2790 = !DILocation(line: 1992, column: 52, scope: !2786)
!2791 = !DILocation(line: 1992, column: 58, scope: !2786)
!2792 = !DILocation(line: 1992, column: 27, scope: !2786)
!2793 = !DILocation(line: 1992, column: 6, scope: !2678)
!2794 = !DILocation(line: 1993, column: 12, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2786, file: !2, line: 1992, column: 68)
!2796 = !DILocation(line: 1994, column: 23, scope: !2795)
!2797 = !DILocation(line: 1994, column: 12, scope: !2795)
!2798 = !DILocation(line: 1994, column: 10, scope: !2795)
!2799 = !DILocation(line: 1995, column: 7, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !2795, file: !2, line: 1995, column: 7)
!2801 = !DILocation(line: 1995, column: 14, scope: !2800)
!2802 = !DILocation(line: 1995, column: 7, scope: !2795)
!2803 = !DILocation(line: 1996, column: 12, scope: !2800)
!2804 = !DILocation(line: 1996, column: 4, scope: !2800)
!2805 = !DILocation(line: 1997, column: 20, scope: !2795)
!2806 = !DILocation(line: 1997, column: 3, scope: !2795)
!2807 = !DILocation(line: 1997, column: 13, scope: !2795)
!2808 = !DILocation(line: 1997, column: 18, scope: !2795)
!2809 = !DILocation(line: 1998, column: 7, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2795, file: !2, line: 1998, column: 7)
!2811 = !DILocation(line: 1998, column: 17, scope: !2810)
!2812 = !DILocation(line: 1998, column: 22, scope: !2810)
!2813 = !DILocation(line: 1998, column: 7, scope: !2795)
!2814 = !DILocation(line: 1999, column: 16, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2810, file: !2, line: 1998, column: 31)
!2816 = !DILocation(line: 1999, column: 4, scope: !2815)
!2817 = !DILocation(line: 2000, column: 4, scope: !2815)
!2818 = !DILocation(line: 2002, column: 17, scope: !2795)
!2819 = !DILocation(line: 2002, column: 27, scope: !2795)
!2820 = !DILocation(line: 2002, column: 3, scope: !2795)
!2821 = !DILocation(line: 2003, column: 25, scope: !2795)
!2822 = !DILocation(line: 2003, column: 34, scope: !2795)
!2823 = !DILocation(line: 2003, column: 40, scope: !2795)
!2824 = !DILocation(line: 2003, column: 50, scope: !2795)
!2825 = !DILocation(line: 2003, column: 12, scope: !2795)
!2826 = !DILocation(line: 2003, column: 10, scope: !2795)
!2827 = !DILocation(line: 2004, column: 7, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2795, file: !2, line: 2004, column: 7)
!2829 = !DILocation(line: 2004, column: 14, scope: !2828)
!2830 = !DILocation(line: 2004, column: 7, scope: !2795)
!2831 = !DILocation(line: 2005, column: 4, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2828, file: !2, line: 2004, column: 32)
!2833 = !DILocation(line: 2005, column: 4, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2832, file: !2, line: 2005, column: 4)
!2835 = !DILocation(line: 2006, column: 16, scope: !2832)
!2836 = !DILocation(line: 2006, column: 4, scope: !2832)
!2837 = !DILocation(line: 2007, column: 12, scope: !2832)
!2838 = !DILocation(line: 2007, column: 4, scope: !2832)
!2839 = !DILocation(line: 2009, column: 3, scope: !2795)
!2840 = !DILocation(line: 2009, column: 3, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2795, file: !2, line: 2009, column: 3)
!2842 = !DILocation(line: 2009, column: 3, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2844, file: !2, line: 2009, column: 3)
!2844 = distinct !DILexicalBlock(scope: !2841, file: !2, line: 2009, column: 3)
!2845 = !DILocation(line: 2009, column: 3, scope: !2844)
!2846 = !DILocation(line: 2010, column: 7, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2795, file: !2, line: 2010, column: 7)
!2848 = !DILocation(line: 2010, column: 17, scope: !2847)
!2849 = !DILocation(line: 2010, column: 24, scope: !2847)
!2850 = !DILocation(line: 2010, column: 32, scope: !2847)
!2851 = !DILocation(line: 2011, column: 22, scope: !2847)
!2852 = !DILocation(line: 2011, column: 32, scope: !2847)
!2853 = !DILocation(line: 2011, column: 38, scope: !2847)
!2854 = !DILocation(line: 2011, column: 45, scope: !2847)
!2855 = !DILocation(line: 2011, column: 7, scope: !2847)
!2856 = !DILocation(line: 2010, column: 7, scope: !2795)
!2857 = !DILocation(line: 2012, column: 23, scope: !2847)
!2858 = !DILocation(line: 2012, column: 4, scope: !2847)
!2859 = !DILocation(line: 2012, column: 14, scope: !2847)
!2860 = !DILocation(line: 2012, column: 21, scope: !2847)
!2861 = !DILocation(line: 2013, column: 2, scope: !2795)
!2862 = !DILocation(line: 2014, column: 25, scope: !2678)
!2863 = !DILocation(line: 2014, column: 35, scope: !2678)
!2864 = !DILocation(line: 2014, column: 41, scope: !2678)
!2865 = !DILocation(line: 2014, column: 46, scope: !2678)
!2866 = !DILocation(line: 2014, column: 10, scope: !2678)
!2867 = !DILocation(line: 2014, column: 2, scope: !2678)
!2868 = !DILocation(line: 2016, column: 1, scope: !2678)
!2869 = !DISubprogram(name: "dns_fixedname_initname", scope: !1647, file: !1647, line: 80, type: !2870, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!358, !2872}
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!2873 = !DISubprogram(name: "dns_name_fromtext", scope: !281, file: !281, line: 784, type: !2874, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{!264, !358, !292, !277, !80, !292}
!2876 = !DISubprogram(name: "dns_name_countlabels", scope: !281, file: !281, line: 570, type: !2877, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!80, !277}
!2879 = !DISubprogram(name: "dns_name_getlabelsequence", scope: !281, file: !281, line: 606, type: !2880, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{null, !277, !80, !80, !358}
!2882 = !DISubprogram(name: "dns_name_equal", scope: !281, file: !281, line: 452, type: !2883, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2883 = !DISubroutineType(types: !2884)
!2884 = !{!353, !277, !277}
!2885 = distinct !DISubprogram(name: "createnode", scope: !2, file: !2, line: 468, type: !2886, scopeLine: 468, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !2889)
!2886 = !DISubroutineType(types: !2887)
!2887 = !{!264, !233, !2888}
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!2889 = !{!2890, !2891, !2892}
!2890 = !DILocalVariable(name: "sdlz", arg: 1, scope: !2885, file: !2, line: 468, type: !233)
!2891 = !DILocalVariable(name: "nodep", arg: 2, scope: !2885, file: !2, line: 468, type: !2888)
!2892 = !DILocalVariable(name: "node", scope: !2885, file: !2, line: 469, type: !1344)
!2893 = !DILocation(line: 468, column: 27, scope: !2885)
!2894 = !DILocation(line: 468, column: 50, scope: !2885)
!2895 = !DILocation(line: 469, column: 2, scope: !2885)
!2896 = !DILocation(line: 469, column: 18, scope: !2885)
!2897 = !DILocation(line: 471, column: 9, scope: !2885)
!2898 = !DILocation(line: 471, column: 7, scope: !2885)
!2899 = !DILocation(line: 472, column: 6, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2885, file: !2, line: 472, column: 6)
!2901 = !DILocation(line: 472, column: 11, scope: !2900)
!2902 = !DILocation(line: 472, column: 6, scope: !2885)
!2903 = !DILocation(line: 473, column: 3, scope: !2900)
!2904 = !DILocation(line: 475, column: 2, scope: !2885)
!2905 = !DILocation(line: 475, column: 8, scope: !2885)
!2906 = !DILocation(line: 475, column: 13, scope: !2885)
!2907 = !DILocation(line: 476, column: 21, scope: !2885)
!2908 = !DILocation(line: 476, column: 41, scope: !2885)
!2909 = !DILocation(line: 476, column: 47, scope: !2885)
!2910 = !DILocation(line: 476, column: 2, scope: !2885)
!2911 = !DILocation(line: 477, column: 2, scope: !2885)
!2912 = !DILocation(line: 477, column: 2, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2885, file: !2, line: 477, column: 2)
!2914 = !DILocation(line: 478, column: 2, scope: !2885)
!2915 = !DILocation(line: 478, column: 2, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2885, file: !2, line: 478, column: 2)
!2917 = !DILocation(line: 479, column: 2, scope: !2885)
!2918 = !DILocation(line: 479, column: 2, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2885, file: !2, line: 479, column: 2)
!2920 = !DILocation(line: 480, column: 2, scope: !2885)
!2921 = !DILocation(line: 480, column: 8, scope: !2885)
!2922 = !DILocation(line: 480, column: 13, scope: !2885)
!2923 = !DILocation(line: 481, column: 2, scope: !2885)
!2924 = !DILocation(line: 482, column: 27, scope: !2885)
!2925 = !DILocation(line: 482, column: 33, scope: !2885)
!2926 = !DILocation(line: 482, column: 2, scope: !2885)
!2927 = !DILocation(line: 483, column: 2, scope: !2885)
!2928 = !DILocation(line: 483, column: 8, scope: !2885)
!2929 = !DILocation(line: 483, column: 19, scope: !2885)
!2930 = !DILocation(line: 484, column: 2, scope: !2885)
!2931 = !DILocation(line: 484, column: 8, scope: !2885)
!2932 = !DILocation(line: 484, column: 14, scope: !2885)
!2933 = !DILocation(line: 486, column: 11, scope: !2885)
!2934 = !DILocation(line: 486, column: 3, scope: !2885)
!2935 = !DILocation(line: 486, column: 9, scope: !2885)
!2936 = !DILocation(line: 487, column: 2, scope: !2885)
!2937 = !DILocation(line: 488, column: 1, scope: !2885)
!2938 = distinct !DISubprogram(name: "destroynode", scope: !2, file: !2, line: 491, type: !2939, scopeLine: 491, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !2941)
!2939 = !DISubroutineType(types: !2940)
!2940 = !{null, !1344}
!2941 = !{!2942, !2943, !2944, !2945, !2946, !2947, !2948}
!2942 = !DILocalVariable(name: "node", arg: 1, scope: !2938, file: !2, line: 491, type: !1344)
!2943 = !DILocalVariable(name: "list", scope: !2938, file: !2, line: 492, type: !576)
!2944 = !DILocalVariable(name: "rdata", scope: !2938, file: !2, line: 493, type: !388)
!2945 = !DILocalVariable(name: "b", scope: !2938, file: !2, line: 494, type: !292)
!2946 = !DILocalVariable(name: "sdlz", scope: !2938, file: !2, line: 495, type: !233)
!2947 = !DILocalVariable(name: "db", scope: !2938, file: !2, line: 496, type: !254)
!2948 = !DILocalVariable(name: "mctx", scope: !2938, file: !2, line: 497, type: !309)
!2949 = !DILocation(line: 491, column: 29, scope: !2938)
!2950 = !DILocation(line: 492, column: 2, scope: !2938)
!2951 = !DILocation(line: 492, column: 19, scope: !2938)
!2952 = !DILocation(line: 493, column: 2, scope: !2938)
!2953 = !DILocation(line: 493, column: 15, scope: !2938)
!2954 = !DILocation(line: 494, column: 2, scope: !2938)
!2955 = !DILocation(line: 494, column: 16, scope: !2938)
!2956 = !DILocation(line: 495, column: 2, scope: !2938)
!2957 = !DILocation(line: 495, column: 17, scope: !2938)
!2958 = !DILocation(line: 496, column: 2, scope: !2938)
!2959 = !DILocation(line: 496, column: 12, scope: !2938)
!2960 = !DILocation(line: 497, column: 2, scope: !2938)
!2961 = !DILocation(line: 497, column: 13, scope: !2938)
!2962 = !DILocation(line: 499, column: 9, scope: !2938)
!2963 = !DILocation(line: 499, column: 15, scope: !2938)
!2964 = !DILocation(line: 499, column: 7, scope: !2938)
!2965 = !DILocation(line: 500, column: 9, scope: !2938)
!2966 = !DILocation(line: 500, column: 15, scope: !2938)
!2967 = !DILocation(line: 500, column: 22, scope: !2938)
!2968 = !DILocation(line: 500, column: 7, scope: !2938)
!2969 = !DILocation(line: 502, column: 2, scope: !2938)
!2970 = !DILocation(line: 502, column: 10, scope: !2938)
!2971 = !DILocation(line: 502, column: 9, scope: !2938)
!2972 = !DILocation(line: 503, column: 10, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2938, file: !2, line: 502, column: 39)
!2974 = !DILocation(line: 503, column: 8, scope: !2973)
!2975 = !DILocation(line: 504, column: 3, scope: !2973)
!2976 = !DILocation(line: 504, column: 11, scope: !2973)
!2977 = !DILocation(line: 504, column: 10, scope: !2973)
!2978 = !DILocation(line: 505, column: 12, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2973, file: !2, line: 504, column: 40)
!2980 = !DILocation(line: 505, column: 10, scope: !2979)
!2981 = !DILocation(line: 506, column: 4, scope: !2979)
!2982 = !DILocation(line: 506, column: 4, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2979, file: !2, line: 506, column: 4)
!2984 = !DILocation(line: 506, column: 4, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2986, file: !2, line: 506, column: 4)
!2986 = distinct !DILexicalBlock(scope: !2983, file: !2, line: 506, column: 4)
!2987 = !DILocation(line: 506, column: 4, scope: !2986)
!2988 = !DILocation(line: 506, column: 4, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2985, file: !2, line: 506, column: 4)
!2990 = !DILocation(line: 506, column: 4, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2986, file: !2, line: 506, column: 4)
!2992 = !DILocation(line: 506, column: 4, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2991, file: !2, line: 506, column: 4)
!2994 = !DILocation(line: 507, column: 4, scope: !2979)
!2995 = !DILocation(line: 507, column: 4, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2979, file: !2, line: 507, column: 4)
!2997 = distinct !{!2997, !2975, !2998, !2416}
!2998 = !DILocation(line: 508, column: 3, scope: !2973)
!2999 = !DILocation(line: 509, column: 3, scope: !2973)
!3000 = !DILocation(line: 509, column: 3, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2973, file: !2, line: 509, column: 3)
!3002 = !DILocation(line: 509, column: 3, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !3004, file: !2, line: 509, column: 3)
!3004 = distinct !DILexicalBlock(scope: !3001, file: !2, line: 509, column: 3)
!3005 = !DILocation(line: 509, column: 3, scope: !3004)
!3006 = !DILocation(line: 509, column: 3, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !3003, file: !2, line: 509, column: 3)
!3008 = !DILocation(line: 509, column: 3, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !3004, file: !2, line: 509, column: 3)
!3010 = !DILocation(line: 509, column: 3, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !3009, file: !2, line: 509, column: 3)
!3012 = !DILocation(line: 510, column: 3, scope: !2973)
!3013 = !DILocation(line: 510, column: 3, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !2973, file: !2, line: 510, column: 3)
!3015 = distinct !{!3015, !2969, !3016, !2416}
!3016 = !DILocation(line: 511, column: 2, scope: !2938)
!3017 = !DILocation(line: 513, column: 2, scope: !2938)
!3018 = !DILocation(line: 513, column: 10, scope: !2938)
!3019 = !DILocation(line: 513, column: 9, scope: !2938)
!3020 = !DILocation(line: 514, column: 7, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !2938, file: !2, line: 513, column: 41)
!3022 = !DILocation(line: 514, column: 5, scope: !3021)
!3023 = !DILocation(line: 515, column: 3, scope: !3021)
!3024 = !DILocation(line: 515, column: 3, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3021, file: !2, line: 515, column: 3)
!3026 = !DILocation(line: 515, column: 3, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3028, file: !2, line: 515, column: 3)
!3028 = distinct !DILexicalBlock(scope: !3025, file: !2, line: 515, column: 3)
!3029 = !DILocation(line: 515, column: 3, scope: !3028)
!3030 = !DILocation(line: 515, column: 3, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3027, file: !2, line: 515, column: 3)
!3032 = !DILocation(line: 515, column: 3, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3028, file: !2, line: 515, column: 3)
!3034 = !DILocation(line: 515, column: 3, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3033, file: !2, line: 515, column: 3)
!3036 = !DILocation(line: 516, column: 3, scope: !3021)
!3037 = distinct !{!3037, !3017, !3038, !2416}
!3038 = !DILocation(line: 517, column: 2, scope: !2938)
!3039 = !DILocation(line: 519, column: 6, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !2938, file: !2, line: 519, column: 6)
!3041 = !DILocation(line: 519, column: 12, scope: !3040)
!3042 = !DILocation(line: 519, column: 17, scope: !3040)
!3043 = !DILocation(line: 519, column: 6, scope: !2938)
!3044 = !DILocation(line: 520, column: 17, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3040, file: !2, line: 519, column: 26)
!3046 = !DILocation(line: 520, column: 23, scope: !3045)
!3047 = !DILocation(line: 520, column: 29, scope: !3045)
!3048 = !DILocation(line: 520, column: 3, scope: !3045)
!3049 = !DILocation(line: 521, column: 3, scope: !3045)
!3050 = !DILocation(line: 521, column: 3, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3045, file: !2, line: 521, column: 3)
!3052 = !DILocation(line: 522, column: 2, scope: !3045)
!3053 = !DILocation(line: 523, column: 2, scope: !2938)
!3054 = !DILocation(line: 524, column: 2, scope: !2938)
!3055 = !DILocation(line: 524, column: 8, scope: !2938)
!3056 = !DILocation(line: 524, column: 14, scope: !2938)
!3057 = !DILocation(line: 525, column: 2, scope: !2938)
!3058 = !DILocation(line: 525, column: 2, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !2938, file: !2, line: 525, column: 2)
!3060 = !DILocation(line: 526, column: 8, scope: !2938)
!3061 = !DILocation(line: 526, column: 14, scope: !2938)
!3062 = !DILocation(line: 526, column: 5, scope: !2938)
!3063 = !DILocation(line: 527, column: 2, scope: !2938)
!3064 = !DILocation(line: 528, column: 1, scope: !2938)
!3065 = !DISubprogram(name: "dns_name_init", scope: !281, file: !281, line: 208, type: !3066, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3066 = !DISubroutineType(types: !3067)
!3067 = !{null, !358, !285}
!3068 = !DISubprogram(name: "dns_name_dup", scope: !281, file: !281, line: 1035, type: !3069, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{!264, !277, !309, !358}
!3071 = distinct !DISubprogram(name: "dns_sdlz_putsoa", scope: !2, file: !2, line: 2019, type: !3072, scopeLine: 2021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3074)
!3072 = !DISubroutineType(types: !3073)
!3073 = !{!264, !1269, !328, !328, !586}
!3074 = !{!3075, !3076, !3077, !3078, !3079, !3083}
!3075 = !DILocalVariable(name: "lookup", arg: 1, scope: !3071, file: !2, line: 2019, type: !1269)
!3076 = !DILocalVariable(name: "mname", arg: 2, scope: !3071, file: !2, line: 2019, type: !328)
!3077 = !DILocalVariable(name: "rname", arg: 3, scope: !3071, file: !2, line: 2019, type: !328)
!3078 = !DILocalVariable(name: "serial", arg: 4, scope: !3071, file: !2, line: 2020, type: !586)
!3079 = !DILocalVariable(name: "str", scope: !3071, file: !2, line: 2022, type: !3080)
!3080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 16864, elements: !3081)
!3081 = !{!3082}
!3082 = !DISubrange(count: 2108)
!3083 = !DILocalVariable(name: "n", scope: !3071, file: !2, line: 2023, type: !480)
!3084 = !DILocation(line: 2019, column: 35, scope: !3071)
!3085 = !DILocation(line: 2019, column: 55, scope: !3071)
!3086 = !DILocation(line: 2019, column: 74, scope: !3071)
!3087 = !DILocation(line: 2020, column: 12, scope: !3071)
!3088 = !DILocation(line: 2022, column: 2, scope: !3071)
!3089 = !DILocation(line: 2022, column: 7, scope: !3071)
!3090 = !DILocation(line: 2023, column: 2, scope: !3071)
!3091 = !DILocation(line: 2023, column: 6, scope: !3071)
!3092 = !DILocation(line: 2025, column: 2, scope: !3071)
!3093 = !DILocation(line: 2026, column: 2, scope: !3071)
!3094 = !DILocation(line: 2028, column: 15, scope: !3071)
!3095 = !DILocation(line: 2029, column: 8, scope: !3071)
!3096 = !DILocation(line: 2029, column: 15, scope: !3071)
!3097 = !DILocation(line: 2029, column: 22, scope: !3071)
!3098 = !DILocation(line: 2028, column: 6, scope: !3071)
!3099 = !DILocation(line: 2028, column: 4, scope: !3071)
!3100 = !DILocation(line: 2032, column: 6, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3071, file: !2, line: 2032, column: 6)
!3102 = !DILocation(line: 2032, column: 8, scope: !3101)
!3103 = !DILocation(line: 2032, column: 28, scope: !3101)
!3104 = !DILocation(line: 2032, column: 31, scope: !3101)
!3105 = !DILocation(line: 2032, column: 33, scope: !3101)
!3106 = !DILocation(line: 2032, column: 6, scope: !3071)
!3107 = !DILocation(line: 2033, column: 3, scope: !3101)
!3108 = !DILocation(line: 2034, column: 25, scope: !3071)
!3109 = !DILocation(line: 2034, column: 58, scope: !3071)
!3110 = !DILocation(line: 2034, column: 10, scope: !3071)
!3111 = !DILocation(line: 2034, column: 2, scope: !3071)
!3112 = !DILocation(line: 2035, column: 1, scope: !3071)
!3113 = !DISubprogram(name: "snprintf", scope: !3114, file: !3114, line: 378, type: !3115, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3114 = !DIFile(filename: "/usr/include/stdio.h", directory: "", checksumkind: CSK_MD5, checksum: "f31eefcc3f15835fc5a4023a625cf609")
!3115 = !DISubroutineType(types: !3116)
!3116 = !{!480, !3117, !325, !3118, null}
!3117 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !347)
!3118 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !328)
!3119 = distinct !DISubprogram(name: "dns_sdlzregister", scope: !2, file: !2, line: 2038, type: !3120, scopeLine: 2041, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3123)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{!264, !328, !1242, !225, !80, !309, !3122}
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!3123 = !{!3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132}
!3124 = !DILocalVariable(name: "drivername", arg: 1, scope: !3119, file: !2, line: 2038, type: !328)
!3125 = !DILocalVariable(name: "methods", arg: 2, scope: !3119, file: !2, line: 2038, type: !1242)
!3126 = !DILocalVariable(name: "driverarg", arg: 3, scope: !3119, file: !2, line: 2039, type: !225)
!3127 = !DILocalVariable(name: "flags", arg: 4, scope: !3119, file: !2, line: 2039, type: !80)
!3128 = !DILocalVariable(name: "mctx", arg: 5, scope: !3119, file: !2, line: 2039, type: !309)
!3129 = !DILocalVariable(name: "sdlzimp", arg: 6, scope: !3119, file: !2, line: 2040, type: !3122)
!3130 = !DILocalVariable(name: "imp", scope: !3119, file: !2, line: 2043, type: !1237)
!3131 = !DILocalVariable(name: "result", scope: !3119, file: !2, line: 2044, type: !264)
!3132 = !DILabel(scope: !3119, name: "cleanup_mutex", file: !2, line: 2107)
!3133 = !DILocation(line: 2038, column: 30, scope: !3119)
!3134 = !DILocation(line: 2038, column: 67, scope: !3119)
!3135 = !DILocation(line: 2039, column: 10, scope: !3119)
!3136 = !DILocation(line: 2039, column: 34, scope: !3119)
!3137 = !DILocation(line: 2039, column: 52, scope: !3119)
!3138 = !DILocation(line: 2040, column: 31, scope: !3119)
!3139 = !DILocation(line: 2043, column: 2, scope: !3119)
!3140 = !DILocation(line: 2043, column: 28, scope: !3119)
!3141 = !DILocation(line: 2044, column: 2, scope: !3119)
!3142 = !DILocation(line: 2044, column: 15, scope: !3119)
!3143 = !DILocation(line: 2049, column: 2, scope: !3119)
!3144 = !DILocation(line: 2050, column: 2, scope: !3119)
!3145 = !DILocation(line: 2051, column: 2, scope: !3119)
!3146 = !DILocation(line: 2052, column: 2, scope: !3119)
!3147 = !DILocation(line: 2053, column: 2, scope: !3119)
!3148 = !DILocation(line: 2054, column: 2, scope: !3119)
!3149 = !DILocation(line: 0, scope: !3119)
!3150 = !DILocation(line: 2055, column: 2, scope: !3119)
!3151 = !DILocation(line: 2060, column: 61, scope: !3119)
!3152 = !DILocation(line: 2060, column: 2, scope: !3119)
!3153 = !DILocation(line: 2066, column: 8, scope: !3119)
!3154 = !DILocation(line: 2066, column: 6, scope: !3119)
!3155 = !DILocation(line: 2067, column: 6, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3119, file: !2, line: 2067, column: 6)
!3157 = !DILocation(line: 2067, column: 10, scope: !3156)
!3158 = !DILocation(line: 2067, column: 6, scope: !3119)
!3159 = !DILocation(line: 2068, column: 3, scope: !3156)
!3160 = !DILocation(line: 2071, column: 9, scope: !3119)
!3161 = !DILocation(line: 2071, column: 2, scope: !3119)
!3162 = !DILocation(line: 2074, column: 17, scope: !3119)
!3163 = !DILocation(line: 2074, column: 2, scope: !3119)
!3164 = !DILocation(line: 2074, column: 7, scope: !3119)
!3165 = !DILocation(line: 2074, column: 15, scope: !3119)
!3166 = !DILocation(line: 2075, column: 19, scope: !3119)
!3167 = !DILocation(line: 2075, column: 2, scope: !3119)
!3168 = !DILocation(line: 2075, column: 7, scope: !3119)
!3169 = !DILocation(line: 2075, column: 17, scope: !3119)
!3170 = !DILocation(line: 2076, column: 15, scope: !3119)
!3171 = !DILocation(line: 2076, column: 2, scope: !3119)
!3172 = !DILocation(line: 2076, column: 7, scope: !3119)
!3173 = !DILocation(line: 2076, column: 13, scope: !3119)
!3174 = !DILocation(line: 2077, column: 2, scope: !3119)
!3175 = !DILocation(line: 2077, column: 7, scope: !3119)
!3176 = !DILocation(line: 2077, column: 12, scope: !3119)
!3177 = !DILocation(line: 2080, column: 17, scope: !3119)
!3178 = !DILocation(line: 2080, column: 24, scope: !3119)
!3179 = !DILocation(line: 2080, column: 29, scope: !3119)
!3180 = !DILocation(line: 2080, column: 2, scope: !3119)
!3181 = !DILocation(line: 2086, column: 2, scope: !3119)
!3182 = !DILocation(line: 2088, column: 2, scope: !3119)
!3183 = !DILocation(line: 2088, column: 7, scope: !3119)
!3184 = !DILocation(line: 2088, column: 15, scope: !3119)
!3185 = !DILocation(line: 2096, column: 27, scope: !3119)
!3186 = !DILocation(line: 2096, column: 53, scope: !3119)
!3187 = !DILocation(line: 2096, column: 58, scope: !3119)
!3188 = !DILocation(line: 2097, column: 7, scope: !3119)
!3189 = !DILocation(line: 2097, column: 12, scope: !3119)
!3190 = !DILocation(line: 2096, column: 11, scope: !3119)
!3191 = !DILocation(line: 2096, column: 9, scope: !3119)
!3192 = !DILocation(line: 2100, column: 6, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3119, file: !2, line: 2100, column: 6)
!3194 = !DILocation(line: 2100, column: 13, scope: !3193)
!3195 = !DILocation(line: 2100, column: 6, scope: !3119)
!3196 = !DILocation(line: 2101, column: 3, scope: !3193)
!3197 = !DILocation(line: 2103, column: 13, scope: !3119)
!3198 = !DILocation(line: 2103, column: 3, scope: !3119)
!3199 = !DILocation(line: 2103, column: 11, scope: !3119)
!3200 = !DILocation(line: 2105, column: 2, scope: !3119)
!3201 = !DILocation(line: 2107, column: 2, scope: !3119)
!3202 = !DILocation(line: 2109, column: 2, scope: !3119)
!3203 = !DILocation(line: 2115, column: 2, scope: !3119)
!3204 = !DILocation(line: 2115, column: 2, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3119, file: !2, line: 2115, column: 2)
!3206 = !DILocation(line: 2116, column: 2, scope: !3119)
!3207 = !DILocation(line: 2117, column: 10, scope: !3119)
!3208 = !DILocation(line: 2117, column: 2, scope: !3119)
!3209 = !DILocation(line: 2118, column: 1, scope: !3119)
!3210 = distinct !DISubprogram(name: "sdlz_log", scope: !2, file: !2, line: 232, type: !3211, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3213)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{null, !480, !328, null}
!3213 = !{!3214, !3215, !3216}
!3214 = !DILocalVariable(name: "level", arg: 1, scope: !3210, file: !2, line: 232, type: !480)
!3215 = !DILocalVariable(name: "fmt", arg: 2, scope: !3210, file: !2, line: 232, type: !328)
!3216 = !DILocalVariable(name: "ap", scope: !3210, file: !2, line: 233, type: !3217)
!3217 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3218, line: 42, baseType: !3219)
!3218 = !DIFile(filename: "/usr/lib/clang/18/include/stdarg.h", directory: "", checksumkind: CSK_MD5, checksum: "95ff2da58c2c75d7c246cff7935ff18b")
!3219 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2, baseType: !3220)
!3220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3221, size: 192, elements: !823)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !3222)
!3222 = !{!3223, !3224, !3225, !3226}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3221, file: !2, line: 233, baseType: !80, size: 32)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3221, file: !2, line: 233, baseType: !80, size: 32, offset: 32)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3221, file: !2, line: 233, baseType: !225, size: 64, offset: 64)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3221, file: !2, line: 233, baseType: !225, size: 64, offset: 128)
!3227 = !DILocation(line: 232, column: 14, scope: !3210)
!3228 = !DILocation(line: 232, column: 33, scope: !3210)
!3229 = !DILocation(line: 233, column: 2, scope: !3210)
!3230 = !DILocation(line: 233, column: 10, scope: !3210)
!3231 = !DILocation(line: 234, column: 2, scope: !3210)
!3232 = !DILocation(line: 235, column: 17, scope: !3210)
!3233 = !DILocation(line: 236, column: 29, scope: !3210)
!3234 = !DILocation(line: 237, column: 10, scope: !3210)
!3235 = !DILocation(line: 237, column: 15, scope: !3210)
!3236 = !DILocation(line: 235, column: 2, scope: !3210)
!3237 = !DILocation(line: 238, column: 2, scope: !3210)
!3238 = !DILocation(line: 239, column: 1, scope: !3210)
!3239 = !DISubprogram(name: "isc_mem_attach", scope: !312, file: !312, line: 299, type: !3240, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3240 = !DISubroutineType(types: !3241)
!3241 = !{null, !309, !337}
!3242 = !DISubprogram(name: "isc__mutex_init", scope: !1293, file: !1293, line: 72, type: !3243, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{null, !3245, !328, !80}
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!3246 = !DISubprogram(name: "dns_dlzregister", scope: !1906, file: !1906, line: 263, type: !3247, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{!264, !328, !1917, !225, !309, !3249}
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!3250 = !DISubprogram(name: "pthread_mutex_destroy", scope: !3251, file: !3251, line: 786, type: !3252, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3251 = !DIFile(filename: "/usr/include/pthread.h", directory: "", checksumkind: CSK_MD5, checksum: "5205981c6f80cc3dc1e81231df63d8ef")
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!480, !3254}
!3254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!3255 = !DISubprogram(name: "isc_error_runtimecheck", scope: !3256, file: !3256, line: 49, type: !3257, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!3256 = !DIFile(filename: "isc/include/isc/error.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "e90b8298ea6c947397fab383c61a094d")
!3257 = !DISubroutineType(types: !3258)
!3258 = !{null, !328, !480, !328}
!3259 = !DISubprogram(name: "isc_mem_detach", scope: !312, file: !312, line: 301, type: !3260, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{null, !337}
!3262 = distinct !DISubprogram(name: "dns_sdlzunregister", scope: !2, file: !2, line: 2121, type: !3263, scopeLine: 2121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3265)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{null, !3122}
!3265 = !{!3266, !3267, !3268}
!3266 = !DILocalVariable(name: "sdlzimp", arg: 1, scope: !3262, file: !2, line: 2121, type: !3122)
!3267 = !DILocalVariable(name: "imp", scope: !3262, file: !2, line: 2122, type: !1237)
!3268 = !DILocalVariable(name: "mctx", scope: !3262, file: !2, line: 2123, type: !309)
!3269 = !DILocation(line: 2121, column: 47, scope: !3262)
!3270 = !DILocation(line: 2122, column: 2, scope: !3262)
!3271 = !DILocation(line: 2122, column: 28, scope: !3262)
!3272 = !DILocation(line: 2123, column: 2, scope: !3262)
!3273 = !DILocation(line: 2123, column: 13, scope: !3262)
!3274 = !DILocation(line: 2126, column: 2, scope: !3262)
!3275 = !DILocation(line: 2131, column: 2, scope: !3262)
!3276 = !DILocation(line: 0, scope: !3262)
!3277 = !DILocation(line: 2133, column: 9, scope: !3262)
!3278 = !DILocation(line: 2133, column: 8, scope: !3262)
!3279 = !DILocation(line: 2133, column: 6, scope: !3262)
!3280 = !DILocation(line: 2136, column: 21, scope: !3262)
!3281 = !DILocation(line: 2136, column: 26, scope: !3262)
!3282 = !DILocation(line: 2136, column: 2, scope: !3262)
!3283 = !DILocation(line: 2139, column: 2, scope: !3262)
!3284 = !DILocation(line: 2141, column: 9, scope: !3262)
!3285 = !DILocation(line: 2141, column: 14, scope: !3262)
!3286 = !DILocation(line: 2141, column: 7, scope: !3262)
!3287 = !DILocation(line: 2147, column: 2, scope: !3262)
!3288 = !DILocation(line: 2147, column: 2, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3262, file: !2, line: 2147, column: 2)
!3290 = !DILocation(line: 2148, column: 2, scope: !3262)
!3291 = !DILocation(line: 2150, column: 3, scope: !3262)
!3292 = !DILocation(line: 2150, column: 11, scope: !3262)
!3293 = !DILocation(line: 2151, column: 1, scope: !3262)
!3294 = !DISubprogram(name: "dns_dlzunregister", scope: !1906, file: !1906, line: 302, type: !3295, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{null, !3249}
!3297 = distinct !DISubprogram(name: "dns_sdlz_setdb", scope: !2, file: !2, line: 2155, type: !3298, scopeLine: 2157, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3300)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{!264, !1903, !396, !277, !255}
!3300 = !{!3301, !3302, !3303, !3304, !3305}
!3301 = !DILocalVariable(name: "dlzdatabase", arg: 1, scope: !3297, file: !2, line: 2155, type: !1903)
!3302 = !DILocalVariable(name: "rdclass", arg: 2, scope: !3297, file: !2, line: 2155, type: !396)
!3303 = !DILocalVariable(name: "name", arg: 3, scope: !3297, file: !2, line: 2156, type: !277)
!3304 = !DILocalVariable(name: "dbp", arg: 4, scope: !3297, file: !2, line: 2156, type: !255)
!3305 = !DILocalVariable(name: "result", scope: !3297, file: !2, line: 2158, type: !264)
!3306 = !DILocation(line: 2155, column: 29, scope: !3297)
!3307 = !DILocation(line: 2155, column: 59, scope: !3297)
!3308 = !DILocation(line: 2156, column: 27, scope: !3297)
!3309 = !DILocation(line: 2156, column: 44, scope: !3297)
!3310 = !DILocation(line: 2158, column: 2, scope: !3297)
!3311 = !DILocation(line: 2158, column: 15, scope: !3297)
!3312 = !DILocation(line: 2160, column: 29, scope: !3297)
!3313 = !DILocation(line: 2160, column: 42, scope: !3297)
!3314 = !DILocation(line: 2161, column: 8, scope: !3297)
!3315 = !DILocation(line: 2161, column: 21, scope: !3297)
!3316 = !DILocation(line: 2161, column: 37, scope: !3297)
!3317 = !DILocation(line: 2162, column: 8, scope: !3297)
!3318 = !DILocation(line: 2162, column: 21, scope: !3297)
!3319 = !DILocation(line: 2162, column: 29, scope: !3297)
!3320 = !DILocation(line: 2162, column: 35, scope: !3297)
!3321 = !DILocation(line: 2162, column: 44, scope: !3297)
!3322 = !DILocation(line: 2160, column: 11, scope: !3297)
!3323 = !DILocation(line: 2160, column: 9, scope: !3297)
!3324 = !DILocation(line: 2163, column: 10, scope: !3297)
!3325 = !DILocation(line: 2164, column: 1, scope: !3297)
!3326 = !DILocation(line: 2163, column: 2, scope: !3297)
!3327 = distinct !DISubprogram(name: "dns_sdlzcreateDBP", scope: !2, file: !2, line: 1522, type: !3328, scopeLine: 1525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3330)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!264, !309, !225, !225, !277, !396, !255}
!3330 = !{!3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340}
!3331 = !DILocalVariable(name: "mctx", arg: 1, scope: !3327, file: !2, line: 1522, type: !309)
!3332 = !DILocalVariable(name: "driverarg", arg: 2, scope: !3327, file: !2, line: 1522, type: !225)
!3333 = !DILocalVariable(name: "dbdata", arg: 3, scope: !3327, file: !2, line: 1522, type: !225)
!3334 = !DILocalVariable(name: "name", arg: 4, scope: !3327, file: !2, line: 1523, type: !277)
!3335 = !DILocalVariable(name: "rdclass", arg: 5, scope: !3327, file: !2, line: 1523, type: !396)
!3336 = !DILocalVariable(name: "dbp", arg: 6, scope: !3327, file: !2, line: 1524, type: !255)
!3337 = !DILocalVariable(name: "result", scope: !3327, file: !2, line: 1526, type: !264)
!3338 = !DILocalVariable(name: "sdlzdb", scope: !3327, file: !2, line: 1527, type: !233)
!3339 = !DILocalVariable(name: "imp", scope: !3327, file: !2, line: 1528, type: !1237)
!3340 = !DILabel(scope: !3327, name: "mem_cleanup", file: !2, line: 1569)
!3341 = !DILocation(line: 1522, column: 30, scope: !3327)
!3342 = !DILocation(line: 1522, column: 42, scope: !3327)
!3343 = !DILocation(line: 1522, column: 59, scope: !3327)
!3344 = !DILocation(line: 1523, column: 23, scope: !3327)
!3345 = !DILocation(line: 1523, column: 46, scope: !3327)
!3346 = !DILocation(line: 1524, column: 16, scope: !3327)
!3347 = !DILocation(line: 1526, column: 2, scope: !3327)
!3348 = !DILocation(line: 1526, column: 15, scope: !3327)
!3349 = !DILocation(line: 1527, column: 2, scope: !3327)
!3350 = !DILocation(line: 1527, column: 17, scope: !3327)
!3351 = !DILocation(line: 1528, column: 2, scope: !3327)
!3352 = !DILocation(line: 1528, column: 28, scope: !3327)
!3353 = !DILocation(line: 1531, column: 2, scope: !3327)
!3354 = !DILocation(line: 0, scope: !3327)
!3355 = !DILocation(line: 1532, column: 2, scope: !3327)
!3356 = !DILocation(line: 1534, column: 37, scope: !3327)
!3357 = !DILocation(line: 1534, column: 6, scope: !3327)
!3358 = !DILocation(line: 1537, column: 11, scope: !3327)
!3359 = !DILocation(line: 1537, column: 9, scope: !3327)
!3360 = !DILocation(line: 1538, column: 6, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3327, file: !2, line: 1538, column: 6)
!3362 = !DILocation(line: 1538, column: 13, scope: !3361)
!3363 = !DILocation(line: 1538, column: 6, scope: !3327)
!3364 = !DILocation(line: 1539, column: 3, scope: !3361)
!3365 = !DILocation(line: 1540, column: 9, scope: !3327)
!3366 = !DILocation(line: 1540, column: 2, scope: !3327)
!3367 = !DILocation(line: 1543, column: 17, scope: !3327)
!3368 = !DILocation(line: 1543, column: 25, scope: !3327)
!3369 = !DILocation(line: 1543, column: 32, scope: !3327)
!3370 = !DILocation(line: 1543, column: 2, scope: !3327)
!3371 = !DILocation(line: 1544, column: 35, scope: !3327)
!3372 = !DILocation(line: 1544, column: 41, scope: !3327)
!3373 = !DILocation(line: 1544, column: 48, scope: !3327)
!3374 = !DILocation(line: 1544, column: 56, scope: !3327)
!3375 = !DILocation(line: 1544, column: 63, scope: !3327)
!3376 = !DILocation(line: 1544, column: 11, scope: !3327)
!3377 = !DILocation(line: 1544, column: 9, scope: !3327)
!3378 = !DILocation(line: 1545, column: 6, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3327, file: !2, line: 1545, column: 6)
!3380 = !DILocation(line: 1545, column: 13, scope: !3379)
!3381 = !DILocation(line: 1545, column: 6, scope: !3327)
!3382 = !DILocation(line: 1546, column: 3, scope: !3379)
!3383 = !DILocation(line: 1549, column: 2, scope: !3327)
!3384 = !DILocation(line: 1552, column: 19, scope: !3327)
!3385 = !DILocation(line: 1552, column: 2, scope: !3327)
!3386 = !DILocation(line: 1552, column: 10, scope: !3327)
!3387 = !DILocation(line: 1552, column: 17, scope: !3327)
!3388 = !DILocation(line: 1553, column: 2, scope: !3327)
!3389 = !DILocation(line: 1553, column: 10, scope: !3327)
!3390 = !DILocation(line: 1553, column: 17, scope: !3327)
!3391 = !DILocation(line: 1553, column: 25, scope: !3327)
!3392 = !DILocation(line: 1554, column: 2, scope: !3327)
!3393 = !DILocation(line: 1554, column: 10, scope: !3327)
!3394 = !DILocation(line: 1554, column: 17, scope: !3327)
!3395 = !DILocation(line: 1554, column: 28, scope: !3327)
!3396 = !DILocation(line: 1555, column: 27, scope: !3327)
!3397 = !DILocation(line: 1555, column: 2, scope: !3327)
!3398 = !DILocation(line: 1555, column: 10, scope: !3327)
!3399 = !DILocation(line: 1555, column: 17, scope: !3327)
!3400 = !DILocation(line: 1555, column: 25, scope: !3327)
!3401 = !DILocation(line: 1556, column: 2, scope: !3327)
!3402 = !DILocation(line: 1556, column: 10, scope: !3327)
!3403 = !DILocation(line: 1556, column: 17, scope: !3327)
!3404 = !DILocation(line: 1556, column: 22, scope: !3327)
!3405 = !DILocation(line: 1557, column: 19, scope: !3327)
!3406 = !DILocation(line: 1557, column: 2, scope: !3327)
!3407 = !DILocation(line: 1557, column: 10, scope: !3327)
!3408 = !DILocation(line: 1557, column: 17, scope: !3327)
!3409 = !DILocation(line: 1558, column: 2, scope: !3327)
!3410 = !DILocation(line: 1558, column: 10, scope: !3327)
!3411 = !DILocation(line: 1558, column: 21, scope: !3327)
!3412 = !DILocation(line: 1561, column: 17, scope: !3327)
!3413 = !DILocation(line: 1561, column: 24, scope: !3327)
!3414 = !DILocation(line: 1561, column: 32, scope: !3327)
!3415 = !DILocation(line: 1561, column: 39, scope: !3327)
!3416 = !DILocation(line: 1561, column: 2, scope: !3327)
!3417 = !DILocation(line: 1564, column: 2, scope: !3327)
!3418 = !DILocation(line: 1564, column: 10, scope: !3327)
!3419 = !DILocation(line: 1564, column: 17, scope: !3327)
!3420 = !DILocation(line: 1564, column: 23, scope: !3327)
!3421 = !DILocation(line: 1565, column: 2, scope: !3327)
!3422 = !DILocation(line: 1565, column: 10, scope: !3327)
!3423 = !DILocation(line: 1565, column: 17, scope: !3327)
!3424 = !DILocation(line: 1565, column: 26, scope: !3327)
!3425 = !DILocation(line: 1566, column: 22, scope: !3327)
!3426 = !DILocation(line: 1566, column: 3, scope: !3327)
!3427 = !DILocation(line: 1566, column: 7, scope: !3327)
!3428 = !DILocation(line: 1568, column: 10, scope: !3327)
!3429 = !DILocation(line: 1568, column: 2, scope: !3327)
!3430 = !DILocation(line: 1569, column: 2, scope: !3327)
!3431 = !DILocation(line: 1570, column: 2, scope: !3327)
!3432 = !DILocation(line: 1570, column: 2, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3327, file: !2, line: 1570, column: 2)
!3434 = !DILocation(line: 1571, column: 10, scope: !3327)
!3435 = !DILocation(line: 1571, column: 2, scope: !3327)
!3436 = !DILocation(line: 1572, column: 1, scope: !3327)
!3437 = distinct !DISubprogram(name: "attach", scope: !2, file: !2, line: 318, type: !252, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3438)
!3438 = !{!3439, !3440, !3441}
!3439 = !DILocalVariable(name: "source", arg: 1, scope: !3437, file: !2, line: 318, type: !254)
!3440 = !DILocalVariable(name: "targetp", arg: 2, scope: !3437, file: !2, line: 318, type: !255)
!3441 = !DILocalVariable(name: "sdlz", scope: !3437, file: !2, line: 319, type: !233)
!3442 = !DILocation(line: 318, column: 18, scope: !3437)
!3443 = !DILocation(line: 318, column: 37, scope: !3437)
!3444 = !DILocation(line: 319, column: 2, scope: !3437)
!3445 = !DILocation(line: 319, column: 17, scope: !3437)
!3446 = !DILocation(line: 319, column: 42, scope: !3437)
!3447 = !DILocation(line: 321, column: 2, scope: !3437)
!3448 = !DILocation(line: 0, scope: !3437)
!3449 = !DILocation(line: 323, column: 2, scope: !3437)
!3450 = !DILocation(line: 323, column: 2, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3437, file: !2, line: 323, column: 2)
!3452 = !DILocation(line: 324, column: 2, scope: !3437)
!3453 = !DILocation(line: 325, column: 2, scope: !3437)
!3454 = !DILocation(line: 325, column: 8, scope: !3437)
!3455 = !DILocation(line: 325, column: 18, scope: !3437)
!3456 = !DILocation(line: 326, column: 2, scope: !3437)
!3457 = !DILocation(line: 326, column: 2, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3437, file: !2, line: 326, column: 2)
!3459 = !DILocation(line: 328, column: 13, scope: !3437)
!3460 = !DILocation(line: 328, column: 3, scope: !3437)
!3461 = !DILocation(line: 328, column: 11, scope: !3437)
!3462 = !DILocation(line: 329, column: 1, scope: !3437)
!3463 = !DISubprogram(name: "dns_rdatacallbacks_init", scope: !269, file: !269, line: 79, type: !3464, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3464 = !DISubroutineType(types: !3465)
!3465 = !{null, !266}
!3466 = !DISubprogram(name: "pthread_mutex_lock", scope: !3251, file: !3251, line: 794, type: !3252, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3467 = !DISubprogram(name: "pthread_mutex_unlock", scope: !3251, file: !3251, line: 835, type: !3252, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3468 = !DISubprogram(name: "dns_name_free", scope: !281, file: !281, line: 1068, type: !3469, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{null, !358, !309}
!3471 = distinct !DISubprogram(name: "detach", scope: !2, file: !2, line: 348, type: !258, scopeLine: 348, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3472)
!3472 = !{!3473, !3474, !3475}
!3473 = !DILocalVariable(name: "dbp", arg: 1, scope: !3471, file: !2, line: 348, type: !255)
!3474 = !DILocalVariable(name: "sdlz", scope: !3471, file: !2, line: 349, type: !233)
!3475 = !DILocalVariable(name: "need_destroy", scope: !3471, file: !2, line: 350, type: !353)
!3476 = !DILocation(line: 348, column: 19, scope: !3471)
!3477 = !DILocation(line: 349, column: 2, scope: !3471)
!3478 = !DILocation(line: 349, column: 17, scope: !3471)
!3479 = !DILocation(line: 349, column: 43, scope: !3471)
!3480 = !DILocation(line: 349, column: 42, scope: !3471)
!3481 = !DILocation(line: 350, column: 2, scope: !3471)
!3482 = !DILocation(line: 350, column: 7, scope: !3471)
!3483 = !DILocation(line: 352, column: 2, scope: !3471)
!3484 = !DILocation(line: 0, scope: !3471)
!3485 = !DILocation(line: 353, column: 2, scope: !3471)
!3486 = !DILocation(line: 353, column: 2, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3471, file: !2, line: 353, column: 2)
!3488 = !DILocation(line: 354, column: 2, scope: !3471)
!3489 = !DILocation(line: 355, column: 2, scope: !3471)
!3490 = !DILocation(line: 355, column: 8, scope: !3471)
!3491 = !DILocation(line: 355, column: 18, scope: !3471)
!3492 = !DILocation(line: 356, column: 6, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3471, file: !2, line: 356, column: 6)
!3494 = !DILocation(line: 356, column: 12, scope: !3493)
!3495 = !DILocation(line: 356, column: 23, scope: !3493)
!3496 = !DILocation(line: 356, column: 6, scope: !3471)
!3497 = !DILocation(line: 357, column: 16, scope: !3493)
!3498 = !DILocation(line: 357, column: 3, scope: !3493)
!3499 = !DILocation(line: 358, column: 2, scope: !3471)
!3500 = !DILocation(line: 358, column: 2, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3471, file: !2, line: 358, column: 2)
!3502 = !DILocation(line: 360, column: 6, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3471, file: !2, line: 360, column: 6)
!3504 = !DILocation(line: 360, column: 6, scope: !3471)
!3505 = !DILocation(line: 361, column: 11, scope: !3503)
!3506 = !DILocation(line: 361, column: 3, scope: !3503)
!3507 = !DILocation(line: 363, column: 3, scope: !3471)
!3508 = !DILocation(line: 363, column: 7, scope: !3471)
!3509 = !DILocation(line: 364, column: 1, scope: !3471)
!3510 = distinct !DISubprogram(name: "destroy", scope: !2, file: !2, line: 332, type: !3511, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3513)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{null, !233}
!3513 = !{!3514, !3515}
!3514 = !DILocalVariable(name: "sdlz", arg: 1, scope: !3510, file: !2, line: 332, type: !233)
!3515 = !DILocalVariable(name: "mctx", scope: !3510, file: !2, line: 333, type: !309)
!3516 = !DILocation(line: 332, column: 24, scope: !3510)
!3517 = !DILocation(line: 333, column: 2, scope: !3510)
!3518 = !DILocation(line: 333, column: 13, scope: !3510)
!3519 = !DILocation(line: 334, column: 9, scope: !3510)
!3520 = !DILocation(line: 334, column: 15, scope: !3510)
!3521 = !DILocation(line: 334, column: 22, scope: !3510)
!3522 = !DILocation(line: 334, column: 7, scope: !3510)
!3523 = !DILocation(line: 336, column: 2, scope: !3510)
!3524 = !DILocation(line: 336, column: 8, scope: !3510)
!3525 = !DILocation(line: 336, column: 15, scope: !3510)
!3526 = !DILocation(line: 336, column: 21, scope: !3510)
!3527 = !DILocation(line: 337, column: 2, scope: !3510)
!3528 = !DILocation(line: 337, column: 8, scope: !3510)
!3529 = !DILocation(line: 337, column: 15, scope: !3510)
!3530 = !DILocation(line: 337, column: 24, scope: !3510)
!3531 = !DILocation(line: 339, column: 2, scope: !3510)
!3532 = !DILocation(line: 341, column: 17, scope: !3510)
!3533 = !DILocation(line: 341, column: 23, scope: !3510)
!3534 = !DILocation(line: 341, column: 30, scope: !3510)
!3535 = !DILocation(line: 341, column: 38, scope: !3510)
!3536 = !DILocation(line: 341, column: 2, scope: !3510)
!3537 = !DILocation(line: 343, column: 2, scope: !3510)
!3538 = !DILocation(line: 343, column: 2, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3510, file: !2, line: 343, column: 2)
!3540 = !DILocation(line: 344, column: 2, scope: !3510)
!3541 = !DILocation(line: 345, column: 1, scope: !3510)
!3542 = !DISubprogram(name: "isc_log_vwrite", scope: !3543, file: !3543, line: 615, type: !3544, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3543 = !DIFile(filename: "isc/include/isc/log.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "6c5d6bf932d34a38240a36d83b90e60a")
!3544 = !DISubroutineType(types: !3545)
!3545 = !{null, !3546, !3549, !3555, !480, !328, !3561}
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_log_t", file: !265, line: 55, baseType: !3548)
!3548 = !DICompositeType(tag: DW_TAG_structure_type, name: "isc_log", file: !265, line: 55, flags: DIFlagFwdDecl)
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 64)
!3550 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_logcategory_t", file: !265, line: 56, baseType: !3551)
!3551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_logcategory", file: !3543, line: 104, size: 128, elements: !3552)
!3552 = !{!3553, !3554}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3551, file: !3543, line: 105, baseType: !328, size: 64)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3551, file: !3543, line: 106, baseType: !80, size: 32, offset: 64)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DIDerivedType(tag: DW_TAG_typedef, name: "isc_logmodule_t", file: !265, line: 58, baseType: !3557)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isc_logmodule", file: !3543, line: 112, size: 128, elements: !3558)
!3558 = !{!3559, !3560}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3557, file: !3543, line: 113, baseType: !328, size: 64)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3557, file: !3543, line: 114, baseType: !80, size: 32, offset: 64)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3562 = distinct !DISubprogram(name: "dns_sdlzcreate", scope: !2, file: !2, line: 1637, type: !1925, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3563)
!3563 = !{!3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3576}
!3564 = !DILocalVariable(name: "mctx", arg: 1, scope: !3562, file: !2, line: 1637, type: !309)
!3565 = !DILocalVariable(name: "dlzname", arg: 2, scope: !3562, file: !2, line: 1637, type: !328)
!3566 = !DILocalVariable(name: "argc", arg: 3, scope: !3562, file: !2, line: 1637, type: !80)
!3567 = !DILocalVariable(name: "argv", arg: 4, scope: !3562, file: !2, line: 1638, type: !1252)
!3568 = !DILocalVariable(name: "driverarg", arg: 5, scope: !3562, file: !2, line: 1638, type: !225)
!3569 = !DILocalVariable(name: "dbdata", arg: 6, scope: !3562, file: !2, line: 1638, type: !1253)
!3570 = !DILocalVariable(name: "imp", scope: !3562, file: !2, line: 1640, type: !1237)
!3571 = !DILocalVariable(name: "result", scope: !3562, file: !2, line: 1641, type: !264)
!3572 = !DILocalVariable(name: "flags", scope: !3573, file: !2, line: 1658, type: !80)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !2, line: 1658, column: 3)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !2, line: 1657, column: 36)
!3575 = distinct !DILexicalBlock(scope: !3562, file: !2, line: 1657, column: 6)
!3576 = !DILocalVariable(name: "flags", scope: !3577, file: !2, line: 1661, type: !80)
!3577 = distinct !DILexicalBlock(scope: !3574, file: !2, line: 1661, column: 3)
!3578 = !DILocation(line: 1637, column: 27, scope: !3562)
!3579 = !DILocation(line: 1637, column: 45, scope: !3562)
!3580 = !DILocation(line: 1637, column: 67, scope: !3562)
!3581 = !DILocation(line: 1638, column: 15, scope: !3562)
!3582 = !DILocation(line: 1638, column: 29, scope: !3562)
!3583 = !DILocation(line: 1638, column: 47, scope: !3562)
!3584 = !DILocation(line: 1640, column: 2, scope: !3562)
!3585 = !DILocation(line: 1640, column: 28, scope: !3562)
!3586 = !DILocation(line: 1641, column: 2, scope: !3562)
!3587 = !DILocation(line: 1641, column: 15, scope: !3562)
!3588 = !DILocation(line: 1644, column: 2, scope: !3562)
!3589 = !DILocation(line: 1649, column: 2, scope: !3562)
!3590 = !DILocation(line: 1650, column: 2, scope: !3562)
!3591 = !DILocation(line: 1651, column: 2, scope: !3562)
!3592 = !DILocation(line: 1652, column: 2, scope: !3562)
!3593 = !DILocation(line: 1654, column: 8, scope: !3562)
!3594 = !DILocation(line: 1654, column: 6, scope: !3562)
!3595 = !DILocation(line: 1657, column: 6, scope: !3575)
!3596 = !DILocation(line: 1657, column: 11, scope: !3575)
!3597 = !DILocation(line: 1657, column: 20, scope: !3575)
!3598 = !DILocation(line: 1657, column: 27, scope: !3575)
!3599 = !DILocation(line: 1657, column: 6, scope: !3562)
!3600 = !DILocation(line: 1658, column: 3, scope: !3574)
!3601 = !DILocation(line: 1658, column: 3, scope: !3573)
!3602 = !DILocation(line: 1658, column: 3, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3573, file: !2, line: 1658, column: 3)
!3604 = !DILocation(line: 1658, column: 3, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3603, file: !2, line: 1658, column: 3)
!3606 = !DILocation(line: 1659, column: 12, scope: !3574)
!3607 = !DILocation(line: 1659, column: 17, scope: !3574)
!3608 = !DILocation(line: 1659, column: 26, scope: !3574)
!3609 = !DILocation(line: 1659, column: 33, scope: !3574)
!3610 = !DILocation(line: 1659, column: 42, scope: !3574)
!3611 = !DILocation(line: 1659, column: 48, scope: !3574)
!3612 = !DILocation(line: 1660, column: 12, scope: !3574)
!3613 = !DILocation(line: 1660, column: 17, scope: !3574)
!3614 = !DILocation(line: 1660, column: 28, scope: !3574)
!3615 = !DILocation(line: 1659, column: 10, scope: !3574)
!3616 = !DILocation(line: 1661, column: 3, scope: !3574)
!3617 = !DILocation(line: 1661, column: 3, scope: !3577)
!3618 = !DILocation(line: 1661, column: 3, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3577, file: !2, line: 1661, column: 3)
!3620 = !DILocation(line: 1661, column: 3, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3619, file: !2, line: 1661, column: 3)
!3622 = !DILocation(line: 1662, column: 2, scope: !3574)
!3623 = !DILocation(line: 1665, column: 6, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3562, file: !2, line: 1665, column: 6)
!3625 = !DILocation(line: 1665, column: 13, scope: !3624)
!3626 = !DILocation(line: 1665, column: 6, scope: !3562)
!3627 = !DILocation(line: 1666, column: 3, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3624, file: !2, line: 1665, column: 31)
!3629 = !DILocation(line: 1667, column: 2, scope: !3628)
!3630 = !DILocation(line: 1668, column: 3, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3624, file: !2, line: 1667, column: 9)
!3632 = !DILocation(line: 1671, column: 10, scope: !3562)
!3633 = !DILocation(line: 1672, column: 1, scope: !3562)
!3634 = !DILocation(line: 1671, column: 2, scope: !3562)
!3635 = distinct !DISubprogram(name: "dns_sdlzdestroy", scope: !2, file: !2, line: 1675, type: !1930, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3636)
!3636 = !{!3637, !3638, !3639, !3640, !3644}
!3637 = !DILocalVariable(name: "driverdata", arg: 1, scope: !3635, file: !2, line: 1675, type: !225)
!3638 = !DILocalVariable(name: "dbdata", arg: 2, scope: !3635, file: !2, line: 1675, type: !1253)
!3639 = !DILocalVariable(name: "imp", scope: !3635, file: !2, line: 1676, type: !1237)
!3640 = !DILocalVariable(name: "flags", scope: !3641, file: !2, line: 1685, type: !80)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !2, line: 1685, column: 3)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !2, line: 1684, column: 37)
!3643 = distinct !DILexicalBlock(scope: !3635, file: !2, line: 1684, column: 6)
!3644 = !DILocalVariable(name: "flags", scope: !3645, file: !2, line: 1687, type: !80)
!3645 = distinct !DILexicalBlock(scope: !3642, file: !2, line: 1687, column: 3)
!3646 = !DILocation(line: 1675, column: 23, scope: !3635)
!3647 = !DILocation(line: 1675, column: 42, scope: !3635)
!3648 = !DILocation(line: 1676, column: 2, scope: !3635)
!3649 = !DILocation(line: 1676, column: 28, scope: !3635)
!3650 = !DILocation(line: 1679, column: 2, scope: !3635)
!3651 = !DILocation(line: 1681, column: 8, scope: !3635)
!3652 = !DILocation(line: 1681, column: 6, scope: !3635)
!3653 = !DILocation(line: 1684, column: 6, scope: !3643)
!3654 = !DILocation(line: 1684, column: 11, scope: !3643)
!3655 = !DILocation(line: 1684, column: 20, scope: !3643)
!3656 = !DILocation(line: 1684, column: 28, scope: !3643)
!3657 = !DILocation(line: 1684, column: 6, scope: !3635)
!3658 = !DILocation(line: 1685, column: 3, scope: !3642)
!3659 = !DILocation(line: 1685, column: 3, scope: !3641)
!3660 = !DILocation(line: 1685, column: 3, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3641, file: !2, line: 1685, column: 3)
!3662 = !DILocation(line: 1685, column: 3, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3661, file: !2, line: 1685, column: 3)
!3664 = !DILocation(line: 1686, column: 3, scope: !3642)
!3665 = !DILocation(line: 1686, column: 8, scope: !3642)
!3666 = !DILocation(line: 1686, column: 17, scope: !3642)
!3667 = !DILocation(line: 1686, column: 25, scope: !3642)
!3668 = !DILocation(line: 1686, column: 30, scope: !3642)
!3669 = !DILocation(line: 1686, column: 41, scope: !3642)
!3670 = !DILocation(line: 1687, column: 3, scope: !3642)
!3671 = !DILocation(line: 1687, column: 3, scope: !3645)
!3672 = !DILocation(line: 1687, column: 3, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3645, file: !2, line: 1687, column: 3)
!3674 = !DILocation(line: 1687, column: 3, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3673, file: !2, line: 1687, column: 3)
!3676 = !DILocation(line: 1688, column: 2, scope: !3642)
!3677 = !DILocation(line: 1689, column: 1, scope: !3635)
!3678 = distinct !DISubprogram(name: "dns_sdlzfindzone", scope: !2, file: !2, line: 1692, type: !1935, scopeLine: 1697, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3679)
!3679 = !{!3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3693, !3694, !3695, !3697, !3698, !3701, !3703}
!3680 = !DILocalVariable(name: "driverarg", arg: 1, scope: !3678, file: !2, line: 1692, type: !225)
!3681 = !DILocalVariable(name: "dbdata", arg: 2, scope: !3678, file: !2, line: 1692, type: !225)
!3682 = !DILocalVariable(name: "mctx", arg: 3, scope: !3678, file: !2, line: 1692, type: !309)
!3683 = !DILocalVariable(name: "rdclass", arg: 4, scope: !3678, file: !2, line: 1693, type: !396)
!3684 = !DILocalVariable(name: "name", arg: 5, scope: !3678, file: !2, line: 1693, type: !277)
!3685 = !DILocalVariable(name: "methods", arg: 6, scope: !3678, file: !2, line: 1694, type: !1094)
!3686 = !DILocalVariable(name: "clientinfo", arg: 7, scope: !3678, file: !2, line: 1695, type: !1106)
!3687 = !DILocalVariable(name: "dbp", arg: 8, scope: !3678, file: !2, line: 1696, type: !255)
!3688 = !DILocalVariable(name: "b", scope: !3678, file: !2, line: 1698, type: !293)
!3689 = !DILocalVariable(name: "namestr", scope: !3678, file: !2, line: 1699, type: !3690)
!3690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 8192, elements: !3691)
!3691 = !{!3692}
!3692 = !DISubrange(count: 1024)
!3693 = !DILocalVariable(name: "result", scope: !3678, file: !2, line: 1700, type: !264)
!3694 = !DILocalVariable(name: "imp", scope: !3678, file: !2, line: 1701, type: !1237)
!3695 = !DILocalVariable(name: "_cp", scope: !3696, file: !2, line: 1717, type: !285)
!3696 = distinct !DILexicalBlock(scope: !3678, file: !2, line: 1717, column: 2)
!3697 = !DILocalVariable(name: "_val2", scope: !3696, file: !2, line: 1717, type: !707)
!3698 = !DILocalVariable(name: "_tmp", scope: !3699, file: !2, line: 1717, type: !292)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !2, line: 1717, column: 2)
!3700 = distinct !DILexicalBlock(scope: !3696, file: !2, line: 1717, column: 2)
!3701 = !DILocalVariable(name: "flags", scope: !3702, file: !2, line: 1723, type: !80)
!3702 = distinct !DILexicalBlock(scope: !3678, file: !2, line: 1723, column: 2)
!3703 = !DILocalVariable(name: "flags", scope: !3704, file: !2, line: 1726, type: !80)
!3704 = distinct !DILexicalBlock(scope: !3678, file: !2, line: 1726, column: 2)
!3705 = !DILocation(line: 1692, column: 24, scope: !3678)
!3706 = !DILocation(line: 1692, column: 41, scope: !3678)
!3707 = !DILocation(line: 1692, column: 60, scope: !3678)
!3708 = !DILocation(line: 1693, column: 21, scope: !3678)
!3709 = !DILocation(line: 1693, column: 48, scope: !3678)
!3710 = !DILocation(line: 1694, column: 29, scope: !3678)
!3711 = !DILocation(line: 1695, column: 22, scope: !3678)
!3712 = !DILocation(line: 1696, column: 15, scope: !3678)
!3713 = !DILocation(line: 1698, column: 2, scope: !3678)
!3714 = !DILocation(line: 1698, column: 15, scope: !3678)
!3715 = !DILocation(line: 1699, column: 2, scope: !3678)
!3716 = !DILocation(line: 1699, column: 7, scope: !3678)
!3717 = !DILocation(line: 1700, column: 2, scope: !3678)
!3718 = !DILocation(line: 1700, column: 15, scope: !3678)
!3719 = !DILocation(line: 1701, column: 2, scope: !3678)
!3720 = !DILocation(line: 1701, column: 28, scope: !3678)
!3721 = !DILocation(line: 1706, column: 2, scope: !3678)
!3722 = !DILocation(line: 1707, column: 2, scope: !3678)
!3723 = !DILocation(line: 1708, column: 2, scope: !3678)
!3724 = !DILocation(line: 0, scope: !3678)
!3725 = !DILocation(line: 1710, column: 37, scope: !3678)
!3726 = !DILocation(line: 1710, column: 6, scope: !3678)
!3727 = !DILocation(line: 1713, column: 2, scope: !3678)
!3728 = !DILocation(line: 1713, column: 2, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3678, file: !2, line: 1713, column: 2)
!3730 = !DILocation(line: 1713, column: 2, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3729, file: !2, line: 1713, column: 2)
!3732 = !DILocation(line: 1714, column: 27, scope: !3678)
!3733 = !DILocation(line: 1714, column: 11, scope: !3678)
!3734 = !DILocation(line: 1714, column: 9, scope: !3678)
!3735 = !DILocation(line: 1715, column: 6, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3678, file: !2, line: 1715, column: 6)
!3737 = !DILocation(line: 1715, column: 13, scope: !3736)
!3738 = !DILocation(line: 1715, column: 6, scope: !3678)
!3739 = !DILocation(line: 1716, column: 11, scope: !3736)
!3740 = !DILocation(line: 1716, column: 3, scope: !3736)
!3741 = !DILocation(line: 1717, column: 2, scope: !3678)
!3742 = !DILocation(line: 1717, column: 2, scope: !3696)
!3743 = !DILocation(line: 1717, column: 2, scope: !3700)
!3744 = !DILocation(line: 1717, column: 2, scope: !3699)
!3745 = !DILocation(line: 1720, column: 19, scope: !3678)
!3746 = !DILocation(line: 1720, column: 2, scope: !3678)
!3747 = !DILocation(line: 1723, column: 2, scope: !3678)
!3748 = !DILocation(line: 1723, column: 2, scope: !3702)
!3749 = !DILocation(line: 1723, column: 2, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3702, file: !2, line: 1723, column: 2)
!3751 = !DILocation(line: 1723, column: 2, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3750, file: !2, line: 1723, column: 2)
!3753 = !DILocation(line: 1724, column: 11, scope: !3678)
!3754 = !DILocation(line: 1724, column: 16, scope: !3678)
!3755 = !DILocation(line: 1724, column: 25, scope: !3678)
!3756 = !DILocation(line: 1724, column: 34, scope: !3678)
!3757 = !DILocation(line: 1724, column: 39, scope: !3678)
!3758 = !DILocation(line: 1724, column: 50, scope: !3678)
!3759 = !DILocation(line: 1724, column: 58, scope: !3678)
!3760 = !DILocation(line: 1725, column: 6, scope: !3678)
!3761 = !DILocation(line: 1725, column: 15, scope: !3678)
!3762 = !DILocation(line: 1724, column: 9, scope: !3678)
!3763 = !DILocation(line: 1726, column: 2, scope: !3678)
!3764 = !DILocation(line: 1726, column: 2, scope: !3704)
!3765 = !DILocation(line: 1726, column: 2, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3704, file: !2, line: 1726, column: 2)
!3767 = !DILocation(line: 1726, column: 2, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3766, file: !2, line: 1726, column: 2)
!3769 = !DILocation(line: 1732, column: 6, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3678, file: !2, line: 1732, column: 6)
!3771 = !DILocation(line: 1732, column: 13, scope: !3770)
!3772 = !DILocation(line: 1732, column: 6, scope: !3678)
!3773 = !DILocation(line: 1733, column: 30, scope: !3770)
!3774 = !DILocation(line: 1733, column: 36, scope: !3770)
!3775 = !DILocation(line: 1733, column: 47, scope: !3770)
!3776 = !DILocation(line: 1733, column: 55, scope: !3770)
!3777 = !DILocation(line: 1734, column: 9, scope: !3770)
!3778 = !DILocation(line: 1734, column: 18, scope: !3770)
!3779 = !DILocation(line: 1733, column: 12, scope: !3770)
!3780 = !DILocation(line: 1733, column: 10, scope: !3770)
!3781 = !DILocation(line: 1733, column: 3, scope: !3770)
!3782 = !DILocation(line: 1736, column: 10, scope: !3678)
!3783 = !DILocation(line: 1736, column: 2, scope: !3678)
!3784 = !DILocation(line: 1737, column: 1, scope: !3678)
!3785 = distinct !DISubprogram(name: "dns_sdlzallowzonexfr", scope: !2, file: !2, line: 1575, type: !1940, scopeLine: 1578, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3786)
!3786 = !{!3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3799, !3800, !3801, !3802, !3804, !3805, !3808, !3810, !3811, !3814, !3818}
!3787 = !DILocalVariable(name: "driverarg", arg: 1, scope: !3785, file: !2, line: 1575, type: !225)
!3788 = !DILocalVariable(name: "dbdata", arg: 2, scope: !3785, file: !2, line: 1575, type: !225)
!3789 = !DILocalVariable(name: "mctx", arg: 3, scope: !3785, file: !2, line: 1575, type: !309)
!3790 = !DILocalVariable(name: "rdclass", arg: 4, scope: !3785, file: !2, line: 1576, type: !396)
!3791 = !DILocalVariable(name: "name", arg: 5, scope: !3785, file: !2, line: 1576, type: !277)
!3792 = !DILocalVariable(name: "clientaddr", arg: 6, scope: !3785, file: !2, line: 1577, type: !1942)
!3793 = !DILocalVariable(name: "dbp", arg: 7, scope: !3785, file: !2, line: 1577, type: !255)
!3794 = !DILocalVariable(name: "b", scope: !3785, file: !2, line: 1579, type: !293)
!3795 = !DILocalVariable(name: "b2", scope: !3785, file: !2, line: 1580, type: !293)
!3796 = !DILocalVariable(name: "namestr", scope: !3785, file: !2, line: 1581, type: !3690)
!3797 = !DILocalVariable(name: "clientstr", scope: !3785, file: !2, line: 1582, type: !3798)
!3798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 376, elements: !2084)
!3799 = !DILocalVariable(name: "netaddr", scope: !3785, file: !2, line: 1584, type: !1956)
!3800 = !DILocalVariable(name: "result", scope: !3785, file: !2, line: 1585, type: !264)
!3801 = !DILocalVariable(name: "imp", scope: !3785, file: !2, line: 1586, type: !1237)
!3802 = !DILocalVariable(name: "_cp", scope: !3803, file: !2, line: 1603, type: !285)
!3803 = distinct !DILexicalBlock(scope: !3785, file: !2, line: 1603, column: 2)
!3804 = !DILocalVariable(name: "_val2", scope: !3803, file: !2, line: 1603, type: !707)
!3805 = !DILocalVariable(name: "_tmp", scope: !3806, file: !2, line: 1603, type: !292)
!3806 = distinct !DILexicalBlock(scope: !3807, file: !2, line: 1603, column: 2)
!3807 = distinct !DILexicalBlock(scope: !3803, file: !2, line: 1603, column: 2)
!3808 = !DILocalVariable(name: "_cp", scope: !3809, file: !2, line: 1611, type: !285)
!3809 = distinct !DILexicalBlock(scope: !3785, file: !2, line: 1611, column: 2)
!3810 = !DILocalVariable(name: "_val2", scope: !3809, file: !2, line: 1611, type: !707)
!3811 = !DILocalVariable(name: "_tmp", scope: !3812, file: !2, line: 1611, type: !292)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !2, line: 1611, column: 2)
!3813 = distinct !DILexicalBlock(scope: !3809, file: !2, line: 1611, column: 2)
!3814 = !DILocalVariable(name: "flags", scope: !3815, file: !2, line: 1619, type: !80)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !2, line: 1619, column: 3)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !2, line: 1618, column: 42)
!3817 = distinct !DILexicalBlock(scope: !3785, file: !2, line: 1618, column: 6)
!3818 = !DILocalVariable(name: "flags", scope: !3819, file: !2, line: 1622, type: !80)
!3819 = distinct !DILexicalBlock(scope: !3816, file: !2, line: 1622, column: 3)
!3820 = !DILocation(line: 1575, column: 28, scope: !3785)
!3821 = !DILocation(line: 1575, column: 45, scope: !3785)
!3822 = !DILocation(line: 1575, column: 64, scope: !3785)
!3823 = !DILocation(line: 1576, column: 25, scope: !3785)
!3824 = !DILocation(line: 1576, column: 52, scope: !3785)
!3825 = !DILocation(line: 1577, column: 30, scope: !3785)
!3826 = !DILocation(line: 1577, column: 53, scope: !3785)
!3827 = !DILocation(line: 1579, column: 2, scope: !3785)
!3828 = !DILocation(line: 1579, column: 15, scope: !3785)
!3829 = !DILocation(line: 1580, column: 2, scope: !3785)
!3830 = !DILocation(line: 1580, column: 15, scope: !3785)
!3831 = !DILocation(line: 1581, column: 2, scope: !3785)
!3832 = !DILocation(line: 1581, column: 7, scope: !3785)
!3833 = !DILocation(line: 1582, column: 2, scope: !3785)
!3834 = !DILocation(line: 1582, column: 7, scope: !3785)
!3835 = !DILocation(line: 1584, column: 2, scope: !3785)
!3836 = !DILocation(line: 1584, column: 16, scope: !3785)
!3837 = !DILocation(line: 1585, column: 2, scope: !3785)
!3838 = !DILocation(line: 1585, column: 15, scope: !3785)
!3839 = !DILocation(line: 1586, column: 2, scope: !3785)
!3840 = !DILocation(line: 1586, column: 28, scope: !3785)
!3841 = !DILocation(line: 1591, column: 2, scope: !3785)
!3842 = !DILocation(line: 1592, column: 2, scope: !3785)
!3843 = !DILocation(line: 1593, column: 2, scope: !3785)
!3844 = !DILocation(line: 1594, column: 2, scope: !3785)
!3845 = !DILocation(line: 0, scope: !3785)
!3846 = !DILocation(line: 1596, column: 37, scope: !3785)
!3847 = !DILocation(line: 1596, column: 6, scope: !3785)
!3848 = !DILocation(line: 1599, column: 2, scope: !3785)
!3849 = !DILocation(line: 1599, column: 2, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3785, file: !2, line: 1599, column: 2)
!3851 = !DILocation(line: 1599, column: 2, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3850, file: !2, line: 1599, column: 2)
!3853 = !DILocation(line: 1600, column: 27, scope: !3785)
!3854 = !DILocation(line: 1600, column: 11, scope: !3785)
!3855 = !DILocation(line: 1600, column: 9, scope: !3785)
!3856 = !DILocation(line: 1601, column: 6, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3785, file: !2, line: 1601, column: 6)
!3858 = !DILocation(line: 1601, column: 13, scope: !3857)
!3859 = !DILocation(line: 1601, column: 6, scope: !3785)
!3860 = !DILocation(line: 1602, column: 11, scope: !3857)
!3861 = !DILocation(line: 1602, column: 3, scope: !3857)
!3862 = !DILocation(line: 1603, column: 2, scope: !3785)
!3863 = !DILocation(line: 1603, column: 2, scope: !3803)
!3864 = !DILocation(line: 1603, column: 2, scope: !3807)
!3865 = !DILocation(line: 1603, column: 2, scope: !3806)
!3866 = !DILocation(line: 1606, column: 2, scope: !3785)
!3867 = !DILocation(line: 1606, column: 2, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3785, file: !2, line: 1606, column: 2)
!3869 = !DILocation(line: 1606, column: 2, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3868, file: !2, line: 1606, column: 2)
!3871 = !DILocation(line: 1607, column: 37, scope: !3785)
!3872 = !DILocation(line: 1607, column: 2, scope: !3785)
!3873 = !DILocation(line: 1608, column: 11, scope: !3785)
!3874 = !DILocation(line: 1608, column: 9, scope: !3785)
!3875 = !DILocation(line: 1609, column: 6, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3785, file: !2, line: 1609, column: 6)
!3877 = !DILocation(line: 1609, column: 13, scope: !3876)
!3878 = !DILocation(line: 1609, column: 6, scope: !3785)
!3879 = !DILocation(line: 1610, column: 11, scope: !3876)
!3880 = !DILocation(line: 1610, column: 3, scope: !3876)
!3881 = !DILocation(line: 1611, column: 2, scope: !3785)
!3882 = !DILocation(line: 1611, column: 2, scope: !3809)
!3883 = !DILocation(line: 1611, column: 2, scope: !3813)
!3884 = !DILocation(line: 1611, column: 2, scope: !3812)
!3885 = !DILocation(line: 1614, column: 19, scope: !3785)
!3886 = !DILocation(line: 1614, column: 2, scope: !3785)
!3887 = !DILocation(line: 1615, column: 19, scope: !3785)
!3888 = !DILocation(line: 1615, column: 2, scope: !3785)
!3889 = !DILocation(line: 1618, column: 6, scope: !3817)
!3890 = !DILocation(line: 1618, column: 11, scope: !3817)
!3891 = !DILocation(line: 1618, column: 20, scope: !3817)
!3892 = !DILocation(line: 1618, column: 33, scope: !3817)
!3893 = !DILocation(line: 1618, column: 6, scope: !3785)
!3894 = !DILocation(line: 1619, column: 3, scope: !3816)
!3895 = !DILocation(line: 1619, column: 3, scope: !3815)
!3896 = !DILocation(line: 1619, column: 3, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3815, file: !2, line: 1619, column: 3)
!3898 = !DILocation(line: 1619, column: 3, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3897, file: !2, line: 1619, column: 3)
!3900 = !DILocation(line: 1620, column: 12, scope: !3816)
!3901 = !DILocation(line: 1620, column: 17, scope: !3816)
!3902 = !DILocation(line: 1620, column: 26, scope: !3816)
!3903 = !DILocation(line: 1620, column: 39, scope: !3816)
!3904 = !DILocation(line: 1620, column: 44, scope: !3816)
!3905 = !DILocation(line: 1620, column: 55, scope: !3816)
!3906 = !DILocation(line: 1621, column: 11, scope: !3816)
!3907 = !DILocation(line: 1621, column: 20, scope: !3816)
!3908 = !DILocation(line: 1620, column: 10, scope: !3816)
!3909 = !DILocation(line: 1622, column: 3, scope: !3816)
!3910 = !DILocation(line: 1622, column: 3, scope: !3819)
!3911 = !DILocation(line: 1622, column: 3, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3819, file: !2, line: 1622, column: 3)
!3913 = !DILocation(line: 1622, column: 3, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3912, file: !2, line: 1622, column: 3)
!3915 = !DILocation(line: 1627, column: 7, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3816, file: !2, line: 1627, column: 7)
!3917 = !DILocation(line: 1627, column: 14, scope: !3916)
!3918 = !DILocation(line: 1627, column: 7, scope: !3816)
!3919 = !DILocation(line: 1628, column: 31, scope: !3916)
!3920 = !DILocation(line: 1628, column: 37, scope: !3916)
!3921 = !DILocation(line: 1628, column: 48, scope: !3916)
!3922 = !DILocation(line: 1629, column: 10, scope: !3916)
!3923 = !DILocation(line: 1629, column: 16, scope: !3916)
!3924 = !DILocation(line: 1629, column: 25, scope: !3916)
!3925 = !DILocation(line: 1628, column: 13, scope: !3916)
!3926 = !DILocation(line: 1628, column: 11, scope: !3916)
!3927 = !DILocation(line: 1628, column: 4, scope: !3916)
!3928 = !DILocation(line: 1630, column: 11, scope: !3816)
!3929 = !DILocation(line: 1630, column: 3, scope: !3816)
!3930 = !DILocation(line: 1633, column: 2, scope: !3785)
!3931 = !DILocation(line: 1634, column: 1, scope: !3785)
!3932 = distinct !DISubprogram(name: "dns_sdlzconfigure", scope: !2, file: !2, line: 1741, type: !1947, scopeLine: 1743, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3933)
!3933 = !{!3934, !3935, !3936, !3937, !3938, !3939, !3940, !3944}
!3934 = !DILocalVariable(name: "driverarg", arg: 1, scope: !3932, file: !2, line: 1741, type: !225)
!3935 = !DILocalVariable(name: "dbdata", arg: 2, scope: !3932, file: !2, line: 1741, type: !225)
!3936 = !DILocalVariable(name: "view", arg: 3, scope: !3932, file: !2, line: 1742, type: !1369)
!3937 = !DILocalVariable(name: "dlzdb", arg: 4, scope: !3932, file: !2, line: 1742, type: !1903)
!3938 = !DILocalVariable(name: "result", scope: !3932, file: !2, line: 1744, type: !264)
!3939 = !DILocalVariable(name: "imp", scope: !3932, file: !2, line: 1745, type: !1237)
!3940 = !DILocalVariable(name: "flags", scope: !3941, file: !2, line: 1753, type: !80)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !2, line: 1753, column: 3)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !2, line: 1752, column: 39)
!3943 = distinct !DILexicalBlock(scope: !3932, file: !2, line: 1752, column: 6)
!3944 = !DILocalVariable(name: "flags", scope: !3945, file: !2, line: 1756, type: !80)
!3945 = distinct !DILexicalBlock(scope: !3942, file: !2, line: 1756, column: 3)
!3946 = !DILocation(line: 1741, column: 25, scope: !3932)
!3947 = !DILocation(line: 1741, column: 42, scope: !3932)
!3948 = !DILocation(line: 1742, column: 17, scope: !3932)
!3949 = !DILocation(line: 1742, column: 36, scope: !3932)
!3950 = !DILocation(line: 1744, column: 2, scope: !3932)
!3951 = !DILocation(line: 1744, column: 15, scope: !3932)
!3952 = !DILocation(line: 1745, column: 2, scope: !3932)
!3953 = !DILocation(line: 1745, column: 28, scope: !3932)
!3954 = !DILocation(line: 1747, column: 2, scope: !3932)
!3955 = !DILocation(line: 1749, column: 37, scope: !3932)
!3956 = !DILocation(line: 1749, column: 6, scope: !3932)
!3957 = !DILocation(line: 1752, column: 6, scope: !3943)
!3958 = !DILocation(line: 1752, column: 11, scope: !3943)
!3959 = !DILocation(line: 1752, column: 20, scope: !3943)
!3960 = !DILocation(line: 1752, column: 30, scope: !3943)
!3961 = !DILocation(line: 1752, column: 6, scope: !3932)
!3962 = !DILocation(line: 1753, column: 3, scope: !3942)
!3963 = !DILocation(line: 1753, column: 3, scope: !3941)
!3964 = !DILocation(line: 1753, column: 3, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3941, file: !2, line: 1753, column: 3)
!3966 = !DILocation(line: 1753, column: 3, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3965, file: !2, line: 1753, column: 3)
!3968 = !DILocation(line: 1754, column: 12, scope: !3942)
!3969 = !DILocation(line: 1754, column: 17, scope: !3942)
!3970 = !DILocation(line: 1754, column: 26, scope: !3942)
!3971 = !DILocation(line: 1754, column: 36, scope: !3942)
!3972 = !DILocation(line: 1754, column: 42, scope: !3942)
!3973 = !DILocation(line: 1755, column: 8, scope: !3942)
!3974 = !DILocation(line: 1755, column: 13, scope: !3942)
!3975 = !DILocation(line: 1755, column: 24, scope: !3942)
!3976 = !DILocation(line: 1754, column: 10, scope: !3942)
!3977 = !DILocation(line: 1756, column: 3, scope: !3942)
!3978 = !DILocation(line: 1756, column: 3, scope: !3945)
!3979 = !DILocation(line: 1756, column: 3, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3945, file: !2, line: 1756, column: 3)
!3981 = !DILocation(line: 1756, column: 3, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3980, file: !2, line: 1756, column: 3)
!3983 = !DILocation(line: 1757, column: 2, scope: !3942)
!3984 = !DILocation(line: 1758, column: 10, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3943, file: !2, line: 1757, column: 9)
!3986 = !DILocation(line: 1761, column: 10, scope: !3932)
!3987 = !DILocation(line: 1762, column: 1, scope: !3932)
!3988 = !DILocation(line: 1761, column: 2, scope: !3932)
!3989 = distinct !DISubprogram(name: "dns_sdlzssumatch", scope: !2, file: !2, line: 1765, type: !1952, scopeLine: 1768, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !3990)
!3990 = !{!3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4005, !4009, !4013, !4014, !4015, !4016, !4017, !4019}
!3991 = !DILocalVariable(name: "signer", arg: 1, scope: !3989, file: !2, line: 1765, type: !277)
!3992 = !DILocalVariable(name: "name", arg: 2, scope: !3989, file: !2, line: 1765, type: !277)
!3993 = !DILocalVariable(name: "tcpaddr", arg: 3, scope: !3989, file: !2, line: 1766, type: !1954)
!3994 = !DILocalVariable(name: "type", arg: 4, scope: !3989, file: !2, line: 1766, type: !403)
!3995 = !DILocalVariable(name: "key", arg: 5, scope: !3989, file: !2, line: 1767, type: !1968)
!3996 = !DILocalVariable(name: "driverarg", arg: 6, scope: !3989, file: !2, line: 1767, type: !225)
!3997 = !DILocalVariable(name: "dbdata", arg: 7, scope: !3989, file: !2, line: 1767, type: !225)
!3998 = !DILocalVariable(name: "imp", scope: !3989, file: !2, line: 1769, type: !1237)
!3999 = !DILocalVariable(name: "b_signer", scope: !3989, file: !2, line: 1770, type: !3690)
!4000 = !DILocalVariable(name: "b_name", scope: !3989, file: !2, line: 1771, type: !3690)
!4001 = !DILocalVariable(name: "b_addr", scope: !3989, file: !2, line: 1772, type: !4002)
!4002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 456, elements: !4003)
!4003 = !{!4004}
!4004 = !DISubrange(count: 57)
!4005 = !DILocalVariable(name: "b_type", scope: !3989, file: !2, line: 1773, type: !4006)
!4006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 88, elements: !4007)
!4007 = !{!4008}
!4008 = !DISubrange(count: 11)
!4009 = !DILocalVariable(name: "b_key", scope: !3989, file: !2, line: 1774, type: !4010)
!4010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 8408, elements: !4011)
!4011 = !{!4012}
!4012 = !DISubrange(count: 1051)
!4013 = !DILocalVariable(name: "tkey_token", scope: !3989, file: !2, line: 1775, type: !292)
!4014 = !DILocalVariable(name: "token_region", scope: !3989, file: !2, line: 1776, type: !518)
!4015 = !DILocalVariable(name: "token_len", scope: !3989, file: !2, line: 1777, type: !586)
!4016 = !DILocalVariable(name: "ret", scope: !3989, file: !2, line: 1778, type: !353)
!4017 = !DILocalVariable(name: "flags", scope: !4018, file: !2, line: 1815, type: !80)
!4018 = distinct !DILexicalBlock(scope: !3989, file: !2, line: 1815, column: 2)
!4019 = !DILocalVariable(name: "flags", scope: !4020, file: !2, line: 1820, type: !80)
!4020 = distinct !DILexicalBlock(scope: !3989, file: !2, line: 1820, column: 2)
!4021 = !DILocation(line: 1765, column: 36, scope: !3989)
!4022 = !DILocation(line: 1765, column: 62, scope: !3989)
!4023 = !DILocation(line: 1766, column: 25, scope: !3989)
!4024 = !DILocation(line: 1766, column: 50, scope: !3989)
!4025 = !DILocation(line: 1767, column: 21, scope: !3989)
!4026 = !DILocation(line: 1767, column: 32, scope: !3989)
!4027 = !DILocation(line: 1767, column: 49, scope: !3989)
!4028 = !DILocation(line: 1769, column: 2, scope: !3989)
!4029 = !DILocation(line: 1769, column: 28, scope: !3989)
!4030 = !DILocation(line: 1770, column: 2, scope: !3989)
!4031 = !DILocation(line: 1770, column: 7, scope: !3989)
!4032 = !DILocation(line: 1771, column: 2, scope: !3989)
!4033 = !DILocation(line: 1771, column: 7, scope: !3989)
!4034 = !DILocation(line: 1772, column: 2, scope: !3989)
!4035 = !DILocation(line: 1772, column: 7, scope: !3989)
!4036 = !DILocation(line: 1773, column: 2, scope: !3989)
!4037 = !DILocation(line: 1773, column: 7, scope: !3989)
!4038 = !DILocation(line: 1774, column: 2, scope: !3989)
!4039 = !DILocation(line: 1774, column: 7, scope: !3989)
!4040 = !DILocation(line: 1775, column: 2, scope: !3989)
!4041 = !DILocation(line: 1775, column: 16, scope: !3989)
!4042 = !DILocation(line: 1776, column: 2, scope: !3989)
!4043 = !DILocation(line: 1776, column: 15, scope: !3989)
!4044 = !DILocation(line: 1777, column: 2, scope: !3989)
!4045 = !DILocation(line: 1777, column: 11, scope: !3989)
!4046 = !DILocation(line: 1778, column: 2, scope: !3989)
!4047 = !DILocation(line: 1778, column: 7, scope: !3989)
!4048 = !DILocation(line: 1780, column: 2, scope: !3989)
!4049 = !DILocation(line: 1782, column: 37, scope: !3989)
!4050 = !DILocation(line: 1782, column: 6, scope: !3989)
!4051 = !DILocation(line: 1783, column: 6, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !3989, file: !2, line: 1783, column: 6)
!4053 = !DILocation(line: 1783, column: 11, scope: !4052)
!4054 = !DILocation(line: 1783, column: 20, scope: !4052)
!4055 = !DILocation(line: 1783, column: 29, scope: !4052)
!4056 = !DILocation(line: 1783, column: 6, scope: !3989)
!4057 = !DILocation(line: 1784, column: 3, scope: !4052)
!4058 = !DILocation(line: 1790, column: 6, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !3989, file: !2, line: 1790, column: 6)
!4060 = !DILocation(line: 1790, column: 13, scope: !4059)
!4061 = !DILocation(line: 1790, column: 6, scope: !3989)
!4062 = !DILocation(line: 1791, column: 19, scope: !4059)
!4063 = !DILocation(line: 1791, column: 27, scope: !4059)
!4064 = !DILocation(line: 1791, column: 3, scope: !4059)
!4065 = !DILocation(line: 1793, column: 3, scope: !4059)
!4066 = !DILocation(line: 1793, column: 15, scope: !4059)
!4067 = !DILocation(line: 1795, column: 18, scope: !3989)
!4068 = !DILocation(line: 1795, column: 24, scope: !3989)
!4069 = !DILocation(line: 1795, column: 2, scope: !3989)
!4070 = !DILocation(line: 1797, column: 6, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !3989, file: !2, line: 1797, column: 6)
!4072 = !DILocation(line: 1797, column: 14, scope: !4071)
!4073 = !DILocation(line: 1797, column: 6, scope: !3989)
!4074 = !DILocation(line: 1798, column: 22, scope: !4071)
!4075 = !DILocation(line: 1798, column: 31, scope: !4071)
!4076 = !DILocation(line: 1798, column: 3, scope: !4071)
!4077 = !DILocation(line: 1800, column: 3, scope: !4071)
!4078 = !DILocation(line: 1800, column: 13, scope: !4071)
!4079 = !DILocation(line: 1802, column: 23, scope: !3989)
!4080 = !DILocation(line: 1802, column: 29, scope: !3989)
!4081 = !DILocation(line: 1802, column: 2, scope: !3989)
!4082 = !DILocation(line: 1804, column: 6, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !3989, file: !2, line: 1804, column: 6)
!4084 = !DILocation(line: 1804, column: 10, scope: !4083)
!4085 = !DILocation(line: 1804, column: 6, scope: !3989)
!4086 = !DILocation(line: 1805, column: 18, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4083, file: !2, line: 1804, column: 19)
!4088 = !DILocation(line: 1805, column: 23, scope: !4087)
!4089 = !DILocation(line: 1805, column: 3, scope: !4087)
!4090 = !DILocation(line: 1806, column: 34, scope: !4087)
!4091 = !DILocation(line: 1806, column: 16, scope: !4087)
!4092 = !DILocation(line: 1806, column: 14, scope: !4087)
!4093 = !DILocation(line: 1807, column: 2, scope: !4087)
!4094 = !DILocation(line: 1808, column: 3, scope: !4083)
!4095 = !DILocation(line: 1808, column: 12, scope: !4083)
!4096 = !DILocation(line: 1810, column: 6, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !3989, file: !2, line: 1810, column: 6)
!4098 = !DILocation(line: 1810, column: 17, scope: !4097)
!4099 = !DILocation(line: 1810, column: 6, scope: !3989)
!4100 = !DILocation(line: 1811, column: 3, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4097, file: !2, line: 1810, column: 26)
!4102 = !DILocation(line: 1811, column: 3, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4101, file: !2, line: 1811, column: 3)
!4104 = !DILocation(line: 1812, column: 28, scope: !4101)
!4105 = !DILocation(line: 1812, column: 13, scope: !4101)
!4106 = !DILocation(line: 1813, column: 2, scope: !4101)
!4107 = !DILocation(line: 1815, column: 2, scope: !3989)
!4108 = !DILocation(line: 1815, column: 2, scope: !4018)
!4109 = !DILocation(line: 1815, column: 2, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4018, file: !2, line: 1815, column: 2)
!4111 = !DILocation(line: 1815, column: 2, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4110, file: !2, line: 1815, column: 2)
!4113 = !DILocation(line: 1816, column: 8, scope: !3989)
!4114 = !DILocation(line: 1816, column: 13, scope: !3989)
!4115 = !DILocation(line: 1816, column: 22, scope: !3989)
!4116 = !DILocation(line: 1816, column: 31, scope: !3989)
!4117 = !DILocation(line: 1816, column: 41, scope: !3989)
!4118 = !DILocation(line: 1816, column: 49, scope: !3989)
!4119 = !DILocation(line: 1816, column: 57, scope: !3989)
!4120 = !DILocation(line: 1816, column: 65, scope: !3989)
!4121 = !DILocation(line: 1817, column: 10, scope: !3989)
!4122 = !DILocation(line: 1818, column: 10, scope: !3989)
!4123 = !DILocation(line: 1818, column: 20, scope: !3989)
!4124 = !DILocation(line: 1818, column: 40, scope: !3989)
!4125 = !DILocation(line: 1819, column: 10, scope: !3989)
!4126 = !DILocation(line: 1819, column: 15, scope: !3989)
!4127 = !DILocation(line: 1819, column: 26, scope: !3989)
!4128 = !DILocation(line: 1816, column: 6, scope: !3989)
!4129 = !DILocation(line: 1820, column: 2, scope: !3989)
!4130 = !DILocation(line: 1820, column: 2, scope: !4020)
!4131 = !DILocation(line: 1820, column: 2, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4020, file: !2, line: 1820, column: 2)
!4133 = !DILocation(line: 1820, column: 2, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4132, file: !2, line: 1820, column: 2)
!4135 = !DILocation(line: 1821, column: 10, scope: !3989)
!4136 = !DILocation(line: 1821, column: 2, scope: !3989)
!4137 = !DILocation(line: 1822, column: 1, scope: !3989)
!4138 = !DISubprogram(name: "dns_name_totext", scope: !281, file: !281, line: 836, type: !4139, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4139 = !DISubroutineType(types: !4140)
!4140 = !{!264, !277, !353, !292}
!4141 = !DISubprogram(name: "isc_buffer_reserve", scope: !295, file: !295, line: 216, type: !4142, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!264, !2667, !80}
!4144 = distinct !DISubprogram(name: "dns_sdlz_tolower", scope: !2, file: !2, line: 243, type: !4145, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4147)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{null, !347}
!4147 = !{!4148, !4149, !4150}
!4148 = !DILocalVariable(name: "str", arg: 1, scope: !4144, file: !2, line: 243, type: !347)
!4149 = !DILocalVariable(name: "len", scope: !4144, file: !2, line: 244, type: !80)
!4150 = !DILocalVariable(name: "i", scope: !4144, file: !2, line: 245, type: !80)
!4151 = !DILocation(line: 243, column: 24, scope: !4144)
!4152 = !DILocation(line: 244, column: 2, scope: !4144)
!4153 = !DILocation(line: 244, column: 15, scope: !4144)
!4154 = !DILocation(line: 244, column: 28, scope: !4144)
!4155 = !DILocation(line: 244, column: 21, scope: !4144)
!4156 = !DILocation(line: 245, column: 2, scope: !4144)
!4157 = !DILocation(line: 245, column: 15, scope: !4144)
!4158 = !DILocation(line: 247, column: 9, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4144, file: !2, line: 247, column: 2)
!4160 = !DILocation(line: 247, column: 7, scope: !4159)
!4161 = !DILocation(line: 247, column: 14, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4159, file: !2, line: 247, column: 2)
!4163 = !DILocation(line: 247, column: 18, scope: !4162)
!4164 = !DILocation(line: 247, column: 16, scope: !4162)
!4165 = !DILocation(line: 247, column: 2, scope: !4159)
!4166 = !DILocation(line: 248, column: 7, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !2, line: 248, column: 7)
!4168 = distinct !DILexicalBlock(scope: !4162, file: !2, line: 247, column: 28)
!4169 = !DILocation(line: 248, column: 11, scope: !4167)
!4170 = !DILocation(line: 248, column: 14, scope: !4167)
!4171 = !DILocation(line: 248, column: 21, scope: !4167)
!4172 = !DILocation(line: 248, column: 24, scope: !4167)
!4173 = !DILocation(line: 248, column: 28, scope: !4167)
!4174 = !DILocation(line: 248, column: 31, scope: !4167)
!4175 = !DILocation(line: 248, column: 7, scope: !4168)
!4176 = !DILocation(line: 249, column: 4, scope: !4167)
!4177 = !DILocation(line: 249, column: 8, scope: !4167)
!4178 = !DILocation(line: 249, column: 11, scope: !4167)
!4179 = !DILocation(line: 250, column: 2, scope: !4168)
!4180 = !DILocation(line: 247, column: 24, scope: !4162)
!4181 = !DILocation(line: 247, column: 2, scope: !4162)
!4182 = distinct !{!4182, !4165, !4183, !2416}
!4183 = !DILocation(line: 250, column: 2, scope: !4159)
!4184 = !DILocation(line: 251, column: 1, scope: !4144)
!4185 = !DISubprogram(name: "isc_netaddr_fromsockaddr", scope: !1958, file: !1958, line: 101, type: !4186, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4186 = !DISubroutineType(types: !4187)
!4187 = !{null, !4188, !1942}
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!4189 = !DISubprogram(name: "isc_netaddr_totext", scope: !1958, file: !1958, line: 75, type: !4190, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4190 = !DISubroutineType(types: !4191)
!4191 = !{!264, !1954, !292}
!4192 = !DISubprogram(name: "dns_name_format", scope: !281, file: !281, line: 1144, type: !4193, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{null, !277, !347, !80}
!4195 = !DISubprogram(name: "isc_netaddr_format", scope: !1958, file: !1958, line: 87, type: !4196, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{null, !1954, !347, !80}
!4198 = !DISubprogram(name: "dns_rdatatype_format", scope: !2620, file: !2620, line: 79, type: !4199, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4199 = !DISubroutineType(types: !4200)
!4200 = !{null, !403, !347, !80}
!4201 = !DISubprogram(name: "dst_key_format", scope: !612, file: !612, line: 902, type: !4202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{null, !1968, !347, !80}
!4204 = !DISubprogram(name: "dst_key_tkeytoken", scope: !612, file: !612, line: 910, type: !4205, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!292, !1968}
!4207 = !DISubprogram(name: "dns_name_dupwithoffsets", scope: !281, file: !281, line: 1050, type: !3069, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4208 = distinct !DISubprogram(name: "beginload", scope: !2, file: !2, line: 367, type: !262, scopeLine: 367, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4209)
!4209 = !{!4210, !4211}
!4210 = !DILocalVariable(name: "db", arg: 1, scope: !4208, file: !2, line: 367, type: !254)
!4211 = !DILocalVariable(name: "callbacks", arg: 2, scope: !4208, file: !2, line: 367, type: !266)
!4212 = !DILocation(line: 367, column: 21, scope: !4208)
!4213 = !DILocation(line: 367, column: 47, scope: !4208)
!4214 = !DILocation(line: 368, column: 2, scope: !4208)
!4215 = !DILocation(line: 369, column: 2, scope: !4208)
!4216 = !DILocation(line: 370, column: 2, scope: !4208)
!4217 = distinct !DISubprogram(name: "endload", scope: !2, file: !2, line: 374, type: !262, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4218)
!4218 = !{!4219, !4220}
!4219 = !DILocalVariable(name: "db", arg: 1, scope: !4217, file: !2, line: 374, type: !254)
!4220 = !DILocalVariable(name: "callbacks", arg: 2, scope: !4217, file: !2, line: 374, type: !266)
!4221 = !DILocation(line: 374, column: 19, scope: !4217)
!4222 = !DILocation(line: 374, column: 45, scope: !4217)
!4223 = !DILocation(line: 375, column: 2, scope: !4217)
!4224 = !DILocation(line: 376, column: 2, scope: !4217)
!4225 = !DILocation(line: 377, column: 2, scope: !4217)
!4226 = distinct !DISubprogram(name: "dump", scope: !2, file: !2, line: 381, type: !881, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4227)
!4227 = !{!4228, !4229, !4230, !4231}
!4228 = !DILocalVariable(name: "db", arg: 1, scope: !4226, file: !2, line: 381, type: !254)
!4229 = !DILocalVariable(name: "version", arg: 2, scope: !4226, file: !2, line: 381, type: !449)
!4230 = !DILocalVariable(name: "filename", arg: 3, scope: !4226, file: !2, line: 381, type: !328)
!4231 = !DILocalVariable(name: "masterformat", arg: 4, scope: !4226, file: !2, line: 382, type: !883)
!4232 = !DILocation(line: 381, column: 16, scope: !4226)
!4233 = !DILocation(line: 381, column: 37, scope: !4226)
!4234 = !DILocation(line: 381, column: 58, scope: !4226)
!4235 = !DILocation(line: 382, column: 25, scope: !4226)
!4236 = !DILocation(line: 384, column: 2, scope: !4226)
!4237 = !DILocation(line: 385, column: 2, scope: !4226)
!4238 = !DILocation(line: 386, column: 2, scope: !4226)
!4239 = !DILocation(line: 387, column: 2, scope: !4226)
!4240 = !DILocation(line: 388, column: 2, scope: !4226)
!4241 = distinct !DISubprogram(name: "currentversion", scope: !2, file: !2, line: 392, type: !886, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4242)
!4242 = !{!4243, !4244, !4245}
!4243 = !DILocalVariable(name: "db", arg: 1, scope: !4241, file: !2, line: 392, type: !254)
!4244 = !DILocalVariable(name: "versionp", arg: 2, scope: !4241, file: !2, line: 392, type: !888)
!4245 = !DILocalVariable(name: "sdlz", scope: !4241, file: !2, line: 393, type: !233)
!4246 = !DILocation(line: 392, column: 26, scope: !4241)
!4247 = !DILocation(line: 392, column: 48, scope: !4241)
!4248 = !DILocation(line: 393, column: 2, scope: !4241)
!4249 = !DILocation(line: 393, column: 17, scope: !4241)
!4250 = !DILocation(line: 393, column: 41, scope: !4241)
!4251 = !DILocation(line: 394, column: 2, scope: !4241)
!4252 = !DILocation(line: 0, scope: !4241)
!4253 = !DILocation(line: 395, column: 2, scope: !4241)
!4254 = !DILocation(line: 397, column: 24, scope: !4241)
!4255 = !DILocation(line: 397, column: 30, scope: !4241)
!4256 = !DILocation(line: 397, column: 3, scope: !4241)
!4257 = !DILocation(line: 397, column: 12, scope: !4241)
!4258 = !DILocation(line: 399, column: 1, scope: !4241)
!4259 = distinct !DISubprogram(name: "newversion", scope: !2, file: !2, line: 402, type: !891, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4260)
!4260 = !{!4261, !4262, !4263, !4264, !4265}
!4261 = !DILocalVariable(name: "db", arg: 1, scope: !4259, file: !2, line: 402, type: !254)
!4262 = !DILocalVariable(name: "versionp", arg: 2, scope: !4259, file: !2, line: 402, type: !888)
!4263 = !DILocalVariable(name: "sdlz", scope: !4259, file: !2, line: 403, type: !233)
!4264 = !DILocalVariable(name: "origin", scope: !4259, file: !2, line: 404, type: !3690)
!4265 = !DILocalVariable(name: "result", scope: !4259, file: !2, line: 405, type: !264)
!4266 = !DILocation(line: 402, column: 22, scope: !4259)
!4267 = !DILocation(line: 402, column: 44, scope: !4259)
!4268 = !DILocation(line: 403, column: 2, scope: !4259)
!4269 = !DILocation(line: 403, column: 17, scope: !4259)
!4270 = !DILocation(line: 403, column: 41, scope: !4259)
!4271 = !DILocation(line: 404, column: 2, scope: !4259)
!4272 = !DILocation(line: 404, column: 7, scope: !4259)
!4273 = !DILocation(line: 405, column: 2, scope: !4259)
!4274 = !DILocation(line: 405, column: 15, scope: !4259)
!4275 = !DILocation(line: 407, column: 2, scope: !4259)
!4276 = !DILocation(line: 0, scope: !4259)
!4277 = !DILocation(line: 409, column: 6, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4259, file: !2, line: 409, column: 6)
!4279 = !DILocation(line: 409, column: 12, scope: !4278)
!4280 = !DILocation(line: 409, column: 20, scope: !4278)
!4281 = !DILocation(line: 409, column: 29, scope: !4278)
!4282 = !DILocation(line: 409, column: 40, scope: !4278)
!4283 = !DILocation(line: 409, column: 6, scope: !4259)
!4284 = !DILocation(line: 410, column: 3, scope: !4278)
!4285 = !DILocation(line: 412, column: 19, scope: !4259)
!4286 = !DILocation(line: 412, column: 25, scope: !4259)
!4287 = !DILocation(line: 412, column: 32, scope: !4259)
!4288 = !DILocation(line: 412, column: 40, scope: !4259)
!4289 = !DILocation(line: 412, column: 2, scope: !4259)
!4290 = !DILocation(line: 414, column: 11, scope: !4259)
!4291 = !DILocation(line: 414, column: 17, scope: !4259)
!4292 = !DILocation(line: 414, column: 25, scope: !4259)
!4293 = !DILocation(line: 414, column: 34, scope: !4259)
!4294 = !DILocation(line: 414, column: 45, scope: !4259)
!4295 = !DILocation(line: 415, column: 10, scope: !4259)
!4296 = !DILocation(line: 415, column: 16, scope: !4259)
!4297 = !DILocation(line: 415, column: 24, scope: !4259)
!4298 = !DILocation(line: 416, column: 10, scope: !4259)
!4299 = !DILocation(line: 416, column: 16, scope: !4259)
!4300 = !DILocation(line: 416, column: 24, scope: !4259)
!4301 = !DILocation(line: 414, column: 9, scope: !4259)
!4302 = !DILocation(line: 417, column: 6, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4259, file: !2, line: 417, column: 6)
!4304 = !DILocation(line: 417, column: 13, scope: !4303)
!4305 = !DILocation(line: 417, column: 6, scope: !4259)
!4306 = !DILocation(line: 420, column: 5, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !2, line: 417, column: 31)
!4308 = !DILocation(line: 420, column: 31, scope: !4307)
!4309 = !DILocation(line: 420, column: 13, scope: !4307)
!4310 = !DILocation(line: 418, column: 3, scope: !4307)
!4311 = !DILocation(line: 421, column: 11, scope: !4307)
!4312 = !DILocation(line: 421, column: 3, scope: !4307)
!4313 = !DILocation(line: 424, column: 26, scope: !4259)
!4314 = !DILocation(line: 424, column: 25, scope: !4259)
!4315 = !DILocation(line: 424, column: 2, scope: !4259)
!4316 = !DILocation(line: 424, column: 8, scope: !4259)
!4317 = !DILocation(line: 424, column: 23, scope: !4259)
!4318 = !DILocation(line: 425, column: 2, scope: !4259)
!4319 = !DILocation(line: 426, column: 1, scope: !4259)
!4320 = distinct !DISubprogram(name: "attachversion", scope: !2, file: !2, line: 429, type: !895, scopeLine: 430, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4321)
!4321 = !{!4322, !4323, !4324, !4325}
!4322 = !DILocalVariable(name: "db", arg: 1, scope: !4320, file: !2, line: 429, type: !254)
!4323 = !DILocalVariable(name: "source", arg: 2, scope: !4320, file: !2, line: 429, type: !449)
!4324 = !DILocalVariable(name: "targetp", arg: 3, scope: !4320, file: !2, line: 429, type: !888)
!4325 = !DILocalVariable(name: "sdlz", scope: !4320, file: !2, line: 431, type: !233)
!4326 = !DILocation(line: 429, column: 25, scope: !4320)
!4327 = !DILocation(line: 429, column: 46, scope: !4320)
!4328 = !DILocation(line: 429, column: 72, scope: !4320)
!4329 = !DILocation(line: 431, column: 2, scope: !4320)
!4330 = !DILocation(line: 431, column: 17, scope: !4320)
!4331 = !DILocation(line: 431, column: 41, scope: !4320)
!4332 = !DILocation(line: 433, column: 2, scope: !4320)
!4333 = !DILocation(line: 0, scope: !4320)
!4334 = !DILocation(line: 434, column: 2, scope: !4320)
!4335 = !DILocation(line: 436, column: 13, scope: !4320)
!4336 = !DILocation(line: 436, column: 3, scope: !4320)
!4337 = !DILocation(line: 436, column: 11, scope: !4320)
!4338 = !DILocation(line: 437, column: 1, scope: !4320)
!4339 = distinct !DISubprogram(name: "closeversion", scope: !2, file: !2, line: 440, type: !899, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4340)
!4340 = !{!4341, !4342, !4343, !4344, !4345}
!4341 = !DILocalVariable(name: "db", arg: 1, scope: !4339, file: !2, line: 440, type: !254)
!4342 = !DILocalVariable(name: "versionp", arg: 2, scope: !4339, file: !2, line: 440, type: !888)
!4343 = !DILocalVariable(name: "commit", arg: 3, scope: !4339, file: !2, line: 440, type: !353)
!4344 = !DILocalVariable(name: "sdlz", scope: !4339, file: !2, line: 441, type: !233)
!4345 = !DILocalVariable(name: "origin", scope: !4339, file: !2, line: 442, type: !3690)
!4346 = !DILocation(line: 440, column: 24, scope: !4339)
!4347 = !DILocation(line: 440, column: 46, scope: !4339)
!4348 = !DILocation(line: 440, column: 61, scope: !4339)
!4349 = !DILocation(line: 441, column: 2, scope: !4339)
!4350 = !DILocation(line: 441, column: 17, scope: !4339)
!4351 = !DILocation(line: 441, column: 41, scope: !4339)
!4352 = !DILocation(line: 442, column: 2, scope: !4339)
!4353 = !DILocation(line: 442, column: 7, scope: !4339)
!4354 = !DILocation(line: 444, column: 2, scope: !4339)
!4355 = !DILocation(line: 0, scope: !4339)
!4356 = !DILocation(line: 445, column: 2, scope: !4339)
!4357 = !DILocation(line: 447, column: 7, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4339, file: !2, line: 447, column: 6)
!4359 = !DILocation(line: 447, column: 6, scope: !4358)
!4360 = !DILocation(line: 447, column: 28, scope: !4358)
!4361 = !DILocation(line: 447, column: 34, scope: !4358)
!4362 = !DILocation(line: 447, column: 16, scope: !4358)
!4363 = !DILocation(line: 447, column: 6, scope: !4339)
!4364 = !DILocation(line: 448, column: 4, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4358, file: !2, line: 447, column: 49)
!4366 = !DILocation(line: 448, column: 13, scope: !4365)
!4367 = !DILocation(line: 449, column: 3, scope: !4365)
!4368 = !DILocation(line: 452, column: 2, scope: !4339)
!4369 = !DILocation(line: 453, column: 2, scope: !4339)
!4370 = !DILocation(line: 455, column: 19, scope: !4339)
!4371 = !DILocation(line: 455, column: 25, scope: !4339)
!4372 = !DILocation(line: 455, column: 32, scope: !4339)
!4373 = !DILocation(line: 455, column: 40, scope: !4339)
!4374 = !DILocation(line: 455, column: 2, scope: !4339)
!4375 = !DILocation(line: 457, column: 2, scope: !4339)
!4376 = !DILocation(line: 457, column: 8, scope: !4339)
!4377 = !DILocation(line: 457, column: 16, scope: !4339)
!4378 = !DILocation(line: 457, column: 25, scope: !4339)
!4379 = !DILocation(line: 457, column: 38, scope: !4339)
!4380 = !DILocation(line: 457, column: 46, scope: !4339)
!4381 = !DILocation(line: 458, column: 10, scope: !4339)
!4382 = !DILocation(line: 458, column: 16, scope: !4339)
!4383 = !DILocation(line: 458, column: 24, scope: !4339)
!4384 = !DILocation(line: 459, column: 10, scope: !4339)
!4385 = !DILocation(line: 459, column: 16, scope: !4339)
!4386 = !DILocation(line: 459, column: 24, scope: !4339)
!4387 = !DILocation(line: 460, column: 7, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4339, file: !2, line: 460, column: 6)
!4389 = !DILocation(line: 460, column: 6, scope: !4388)
!4390 = !DILocation(line: 460, column: 16, scope: !4388)
!4391 = !DILocation(line: 460, column: 6, scope: !4339)
!4392 = !DILocation(line: 462, column: 45, scope: !4388)
!4393 = !DILocation(line: 461, column: 3, scope: !4388)
!4394 = !DILocation(line: 464, column: 2, scope: !4339)
!4395 = !DILocation(line: 464, column: 8, scope: !4339)
!4396 = !DILocation(line: 464, column: 23, scope: !4339)
!4397 = !DILocation(line: 465, column: 1, scope: !4339)
!4398 = distinct !DISubprogram(name: "findnode", scope: !2, file: !2, line: 705, type: !903, scopeLine: 707, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4399)
!4399 = !{!4400, !4401, !4402, !4403}
!4400 = !DILocalVariable(name: "db", arg: 1, scope: !4398, file: !2, line: 705, type: !254)
!4401 = !DILocalVariable(name: "name", arg: 2, scope: !4398, file: !2, line: 705, type: !277)
!4402 = !DILocalVariable(name: "create", arg: 3, scope: !4398, file: !2, line: 705, type: !353)
!4403 = !DILocalVariable(name: "nodep", arg: 4, scope: !4398, file: !2, line: 706, type: !905)
!4404 = !DILocation(line: 705, column: 20, scope: !4398)
!4405 = !DILocation(line: 705, column: 42, scope: !4398)
!4406 = !DILocation(line: 705, column: 53, scope: !4398)
!4407 = !DILocation(line: 706, column: 18, scope: !4398)
!4408 = !DILocation(line: 708, column: 22, scope: !4398)
!4409 = !DILocation(line: 708, column: 26, scope: !4398)
!4410 = !DILocation(line: 708, column: 32, scope: !4398)
!4411 = !DILocation(line: 708, column: 55, scope: !4398)
!4412 = !DILocation(line: 708, column: 10, scope: !4398)
!4413 = !DILocation(line: 708, column: 2, scope: !4398)
!4414 = distinct !DISubprogram(name: "find", scope: !2, file: !2, line: 1057, type: !910, scopeLine: 1061, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4415)
!4415 = !{!4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425}
!4416 = !DILocalVariable(name: "db", arg: 1, scope: !4414, file: !2, line: 1057, type: !254)
!4417 = !DILocalVariable(name: "name", arg: 2, scope: !4414, file: !2, line: 1057, type: !277)
!4418 = !DILocalVariable(name: "version", arg: 3, scope: !4414, file: !2, line: 1057, type: !449)
!4419 = !DILocalVariable(name: "type", arg: 4, scope: !4414, file: !2, line: 1058, type: !403)
!4420 = !DILocalVariable(name: "options", arg: 5, scope: !4414, file: !2, line: 1058, type: !80)
!4421 = !DILocalVariable(name: "now", arg: 6, scope: !4414, file: !2, line: 1058, type: !775)
!4422 = !DILocalVariable(name: "nodep", arg: 7, scope: !4414, file: !2, line: 1059, type: !905)
!4423 = !DILocalVariable(name: "foundname", arg: 8, scope: !4414, file: !2, line: 1059, type: !358)
!4424 = !DILocalVariable(name: "rdataset", arg: 9, scope: !4414, file: !2, line: 1060, type: !364)
!4425 = !DILocalVariable(name: "sigrdataset", arg: 10, scope: !4414, file: !2, line: 1060, type: !364)
!4426 = !DILocation(line: 1057, column: 16, scope: !4414)
!4427 = !DILocation(line: 1057, column: 38, scope: !4414)
!4428 = !DILocation(line: 1057, column: 61, scope: !4414)
!4429 = !DILocation(line: 1058, column: 22, scope: !4414)
!4430 = !DILocation(line: 1058, column: 41, scope: !4414)
!4431 = !DILocation(line: 1058, column: 64, scope: !4414)
!4432 = !DILocation(line: 1059, column: 21, scope: !4414)
!4433 = !DILocation(line: 1059, column: 40, scope: !4414)
!4434 = !DILocation(line: 1060, column: 22, scope: !4414)
!4435 = !DILocation(line: 1060, column: 48, scope: !4414)
!4436 = !DILocation(line: 1062, column: 18, scope: !4414)
!4437 = !DILocation(line: 1062, column: 22, scope: !4414)
!4438 = !DILocation(line: 1062, column: 28, scope: !4414)
!4439 = !DILocation(line: 1062, column: 37, scope: !4414)
!4440 = !DILocation(line: 1062, column: 43, scope: !4414)
!4441 = !DILocation(line: 1062, column: 52, scope: !4414)
!4442 = !DILocation(line: 1062, column: 57, scope: !4414)
!4443 = !DILocation(line: 1063, column: 4, scope: !4414)
!4444 = !DILocation(line: 1063, column: 27, scope: !4414)
!4445 = !DILocation(line: 1063, column: 37, scope: !4414)
!4446 = !DILocation(line: 1062, column: 10, scope: !4414)
!4447 = !DILocation(line: 1062, column: 2, scope: !4414)
!4448 = distinct !DISubprogram(name: "findzonecut", scope: !2, file: !2, line: 712, type: !914, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4449)
!4449 = !{!4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458}
!4450 = !DILocalVariable(name: "db", arg: 1, scope: !4448, file: !2, line: 712, type: !254)
!4451 = !DILocalVariable(name: "name", arg: 2, scope: !4448, file: !2, line: 712, type: !277)
!4452 = !DILocalVariable(name: "options", arg: 3, scope: !4448, file: !2, line: 712, type: !80)
!4453 = !DILocalVariable(name: "now", arg: 4, scope: !4448, file: !2, line: 713, type: !775)
!4454 = !DILocalVariable(name: "nodep", arg: 5, scope: !4448, file: !2, line: 713, type: !905)
!4455 = !DILocalVariable(name: "foundname", arg: 6, scope: !4448, file: !2, line: 713, type: !358)
!4456 = !DILocalVariable(name: "dcname", arg: 7, scope: !4448, file: !2, line: 714, type: !358)
!4457 = !DILocalVariable(name: "rdataset", arg: 8, scope: !4448, file: !2, line: 714, type: !364)
!4458 = !DILocalVariable(name: "sigrdataset", arg: 9, scope: !4448, file: !2, line: 715, type: !364)
!4459 = !DILocation(line: 712, column: 23, scope: !4448)
!4460 = !DILocation(line: 712, column: 45, scope: !4448)
!4461 = !DILocation(line: 712, column: 64, scope: !4448)
!4462 = !DILocation(line: 713, column: 20, scope: !4448)
!4463 = !DILocation(line: 713, column: 40, scope: !4448)
!4464 = !DILocation(line: 713, column: 59, scope: !4448)
!4465 = !DILocation(line: 714, column: 18, scope: !4448)
!4466 = !DILocation(line: 714, column: 42, scope: !4448)
!4467 = !DILocation(line: 715, column: 22, scope: !4448)
!4468 = !DILocation(line: 717, column: 2, scope: !4448)
!4469 = !DILocation(line: 718, column: 2, scope: !4448)
!4470 = !DILocation(line: 719, column: 2, scope: !4448)
!4471 = !DILocation(line: 720, column: 2, scope: !4448)
!4472 = !DILocation(line: 721, column: 2, scope: !4448)
!4473 = !DILocation(line: 722, column: 2, scope: !4448)
!4474 = !DILocation(line: 723, column: 2, scope: !4448)
!4475 = !DILocation(line: 724, column: 2, scope: !4448)
!4476 = !DILocation(line: 725, column: 2, scope: !4448)
!4477 = !DILocation(line: 727, column: 2, scope: !4448)
!4478 = distinct !DISubprogram(name: "attachnode", scope: !2, file: !2, line: 731, type: !918, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4479)
!4479 = !{!4480, !4481, !4482, !4483, !4484}
!4480 = !DILocalVariable(name: "db", arg: 1, scope: !4478, file: !2, line: 731, type: !254)
!4481 = !DILocalVariable(name: "source", arg: 2, scope: !4478, file: !2, line: 731, type: !906)
!4482 = !DILocalVariable(name: "targetp", arg: 3, scope: !4478, file: !2, line: 731, type: !905)
!4483 = !DILocalVariable(name: "sdlz", scope: !4478, file: !2, line: 732, type: !233)
!4484 = !DILocalVariable(name: "node", scope: !4478, file: !2, line: 733, type: !1344)
!4485 = !DILocation(line: 731, column: 22, scope: !4478)
!4486 = !DILocation(line: 731, column: 40, scope: !4478)
!4487 = !DILocation(line: 731, column: 63, scope: !4478)
!4488 = !DILocation(line: 732, column: 2, scope: !4478)
!4489 = !DILocation(line: 732, column: 17, scope: !4478)
!4490 = !DILocation(line: 732, column: 41, scope: !4478)
!4491 = !DILocation(line: 733, column: 2, scope: !4478)
!4492 = !DILocation(line: 733, column: 18, scope: !4478)
!4493 = !DILocation(line: 733, column: 43, scope: !4478)
!4494 = !DILocation(line: 735, column: 2, scope: !4478)
!4495 = !DILocation(line: 0, scope: !4478)
!4496 = !DILocation(line: 737, column: 2, scope: !4478)
!4497 = !DILocation(line: 739, column: 2, scope: !4478)
!4498 = !DILocation(line: 739, column: 2, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4478, file: !2, line: 739, column: 2)
!4500 = !DILocation(line: 740, column: 2, scope: !4478)
!4501 = !DILocation(line: 741, column: 2, scope: !4478)
!4502 = !DILocation(line: 741, column: 8, scope: !4478)
!4503 = !DILocation(line: 741, column: 18, scope: !4478)
!4504 = !DILocation(line: 742, column: 2, scope: !4478)
!4505 = !DILocation(line: 743, column: 2, scope: !4478)
!4506 = !DILocation(line: 743, column: 2, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4478, file: !2, line: 743, column: 2)
!4508 = !DILocation(line: 745, column: 13, scope: !4478)
!4509 = !DILocation(line: 745, column: 3, scope: !4478)
!4510 = !DILocation(line: 745, column: 11, scope: !4478)
!4511 = !DILocation(line: 746, column: 1, scope: !4478)
!4512 = distinct !DISubprogram(name: "detachnode", scope: !2, file: !2, line: 749, type: !922, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4513)
!4513 = !{!4514, !4515, !4516, !4517, !4518}
!4514 = !DILocalVariable(name: "db", arg: 1, scope: !4512, file: !2, line: 749, type: !254)
!4515 = !DILocalVariable(name: "targetp", arg: 2, scope: !4512, file: !2, line: 749, type: !905)
!4516 = !DILocalVariable(name: "sdlz", scope: !4512, file: !2, line: 750, type: !233)
!4517 = !DILocalVariable(name: "node", scope: !4512, file: !2, line: 751, type: !1344)
!4518 = !DILocalVariable(name: "need_destroy", scope: !4512, file: !2, line: 752, type: !353)
!4519 = !DILocation(line: 749, column: 22, scope: !4512)
!4520 = !DILocation(line: 749, column: 41, scope: !4512)
!4521 = !DILocation(line: 750, column: 2, scope: !4512)
!4522 = !DILocation(line: 750, column: 17, scope: !4512)
!4523 = !DILocation(line: 750, column: 41, scope: !4512)
!4524 = !DILocation(line: 751, column: 2, scope: !4512)
!4525 = !DILocation(line: 751, column: 18, scope: !4512)
!4526 = !DILocation(line: 752, column: 2, scope: !4512)
!4527 = !DILocation(line: 752, column: 7, scope: !4512)
!4528 = !DILocation(line: 754, column: 2, scope: !4512)
!4529 = !DILocation(line: 0, scope: !4512)
!4530 = !DILocation(line: 755, column: 2, scope: !4512)
!4531 = !DILocation(line: 757, column: 2, scope: !4512)
!4532 = !DILocation(line: 759, column: 29, scope: !4512)
!4533 = !DILocation(line: 759, column: 28, scope: !4512)
!4534 = !DILocation(line: 759, column: 7, scope: !4512)
!4535 = !DILocation(line: 761, column: 2, scope: !4512)
!4536 = !DILocation(line: 761, column: 2, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4512, file: !2, line: 761, column: 2)
!4538 = !DILocation(line: 762, column: 2, scope: !4512)
!4539 = !DILocation(line: 763, column: 2, scope: !4512)
!4540 = !DILocation(line: 763, column: 8, scope: !4512)
!4541 = !DILocation(line: 763, column: 18, scope: !4512)
!4542 = !DILocation(line: 764, column: 6, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4512, file: !2, line: 764, column: 6)
!4544 = !DILocation(line: 764, column: 12, scope: !4543)
!4545 = !DILocation(line: 764, column: 23, scope: !4543)
!4546 = !DILocation(line: 764, column: 6, scope: !4512)
!4547 = !DILocation(line: 765, column: 16, scope: !4543)
!4548 = !DILocation(line: 765, column: 3, scope: !4543)
!4549 = !DILocation(line: 766, column: 2, scope: !4512)
!4550 = !DILocation(line: 766, column: 2, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4512, file: !2, line: 766, column: 2)
!4552 = !DILocation(line: 768, column: 6, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4512, file: !2, line: 768, column: 6)
!4554 = !DILocation(line: 768, column: 6, scope: !4512)
!4555 = !DILocation(line: 769, column: 15, scope: !4553)
!4556 = !DILocation(line: 769, column: 3, scope: !4553)
!4557 = !DILocation(line: 771, column: 3, scope: !4512)
!4558 = !DILocation(line: 771, column: 11, scope: !4512)
!4559 = !DILocation(line: 772, column: 1, scope: !4512)
!4560 = distinct !DISubprogram(name: "expirenode", scope: !2, file: !2, line: 775, type: !926, scopeLine: 775, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4561)
!4561 = !{!4562, !4563, !4564}
!4562 = !DILocalVariable(name: "db", arg: 1, scope: !4560, file: !2, line: 775, type: !254)
!4563 = !DILocalVariable(name: "node", arg: 2, scope: !4560, file: !2, line: 775, type: !906)
!4564 = !DILocalVariable(name: "now", arg: 3, scope: !4560, file: !2, line: 775, type: !775)
!4565 = !DILocation(line: 775, column: 22, scope: !4560)
!4566 = !DILocation(line: 775, column: 40, scope: !4560)
!4567 = !DILocation(line: 775, column: 60, scope: !4560)
!4568 = !DILocation(line: 776, column: 2, scope: !4560)
!4569 = !DILocation(line: 777, column: 2, scope: !4560)
!4570 = !DILocation(line: 778, column: 2, scope: !4560)
!4571 = !DILocation(line: 779, column: 2, scope: !4560)
!4572 = distinct !DISubprogram(name: "printnode", scope: !2, file: !2, line: 784, type: !930, scopeLine: 784, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4573)
!4573 = !{!4574, !4575, !4576}
!4574 = !DILocalVariable(name: "db", arg: 1, scope: !4572, file: !2, line: 784, type: !254)
!4575 = !DILocalVariable(name: "node", arg: 2, scope: !4572, file: !2, line: 784, type: !906)
!4576 = !DILocalVariable(name: "out", arg: 3, scope: !4572, file: !2, line: 784, type: !790)
!4577 = !DILocation(line: 784, column: 21, scope: !4572)
!4578 = !DILocation(line: 784, column: 39, scope: !4572)
!4579 = !DILocation(line: 784, column: 51, scope: !4572)
!4580 = !DILocation(line: 785, column: 2, scope: !4572)
!4581 = !DILocation(line: 786, column: 2, scope: !4572)
!4582 = !DILocation(line: 787, column: 2, scope: !4572)
!4583 = !DILocation(line: 788, column: 2, scope: !4572)
!4584 = distinct !DISubprogram(name: "createiterator", scope: !2, file: !2, line: 792, type: !934, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4585)
!4585 = !{!4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4596, !4597, !4600, !4602, !4604}
!4586 = !DILocalVariable(name: "db", arg: 1, scope: !4584, file: !2, line: 792, type: !254)
!4587 = !DILocalVariable(name: "options", arg: 2, scope: !4584, file: !2, line: 792, type: !80)
!4588 = !DILocalVariable(name: "iteratorp", arg: 3, scope: !4584, file: !2, line: 792, type: !936)
!4589 = !DILocalVariable(name: "sdlz", scope: !4584, file: !2, line: 794, type: !233)
!4590 = !DILocalVariable(name: "sdlziter", scope: !4584, file: !2, line: 795, type: !2072)
!4591 = !DILocalVariable(name: "result", scope: !4584, file: !2, line: 796, type: !264)
!4592 = !DILocalVariable(name: "b", scope: !4584, file: !2, line: 797, type: !293)
!4593 = !DILocalVariable(name: "zonestr", scope: !4584, file: !2, line: 798, type: !3690)
!4594 = !DILocalVariable(name: "_cp", scope: !4595, file: !2, line: 813, type: !285)
!4595 = distinct !DILexicalBlock(scope: !4584, file: !2, line: 813, column: 2)
!4596 = !DILocalVariable(name: "_val2", scope: !4595, file: !2, line: 813, type: !707)
!4597 = !DILocalVariable(name: "_tmp", scope: !4598, file: !2, line: 813, type: !292)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !2, line: 813, column: 2)
!4599 = distinct !DILexicalBlock(scope: !4595, file: !2, line: 813, column: 2)
!4600 = !DILocalVariable(name: "flags", scope: !4601, file: !2, line: 832, type: !80)
!4601 = distinct !DILexicalBlock(scope: !4584, file: !2, line: 832, column: 2)
!4602 = !DILocalVariable(name: "flags", scope: !4603, file: !2, line: 836, type: !80)
!4603 = distinct !DILexicalBlock(scope: !4584, file: !2, line: 836, column: 2)
!4604 = !DILocalVariable(name: "iter", scope: !4605, file: !2, line: 838, type: !937)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !2, line: 837, column: 31)
!4606 = distinct !DILexicalBlock(scope: !4584, file: !2, line: 837, column: 6)
!4607 = !DILocation(line: 792, column: 26, scope: !4584)
!4608 = !DILocation(line: 792, column: 43, scope: !4584)
!4609 = !DILocation(line: 792, column: 71, scope: !4584)
!4610 = !DILocation(line: 794, column: 2, scope: !4584)
!4611 = !DILocation(line: 794, column: 17, scope: !4584)
!4612 = !DILocation(line: 794, column: 41, scope: !4584)
!4613 = !DILocation(line: 795, column: 2, scope: !4584)
!4614 = !DILocation(line: 795, column: 21, scope: !4584)
!4615 = !DILocation(line: 796, column: 2, scope: !4584)
!4616 = !DILocation(line: 796, column: 15, scope: !4584)
!4617 = !DILocation(line: 797, column: 2, scope: !4584)
!4618 = !DILocation(line: 797, column: 15, scope: !4584)
!4619 = !DILocation(line: 798, column: 2, scope: !4584)
!4620 = !DILocation(line: 798, column: 7, scope: !4584)
!4621 = !DILocation(line: 800, column: 2, scope: !4584)
!4622 = !DILocation(line: 0, scope: !4584)
!4623 = !DILocation(line: 802, column: 6, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4584, file: !2, line: 802, column: 6)
!4625 = !DILocation(line: 802, column: 12, scope: !4624)
!4626 = !DILocation(line: 802, column: 20, scope: !4624)
!4627 = !DILocation(line: 802, column: 29, scope: !4624)
!4628 = !DILocation(line: 802, column: 38, scope: !4624)
!4629 = !DILocation(line: 802, column: 6, scope: !4584)
!4630 = !DILocation(line: 803, column: 3, scope: !4624)
!4631 = !DILocation(line: 805, column: 7, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4584, file: !2, line: 805, column: 6)
!4633 = !DILocation(line: 805, column: 15, scope: !4632)
!4634 = !DILocation(line: 805, column: 35, scope: !4632)
!4635 = !DILocation(line: 805, column: 40, scope: !4632)
!4636 = !DILocation(line: 806, column: 7, scope: !4632)
!4637 = !DILocation(line: 806, column: 15, scope: !4632)
!4638 = !DILocation(line: 806, column: 33, scope: !4632)
!4639 = !DILocation(line: 805, column: 6, scope: !4584)
!4640 = !DILocation(line: 807, column: 4, scope: !4632)
!4641 = !DILocation(line: 809, column: 2, scope: !4584)
!4642 = !DILocation(line: 809, column: 2, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4584, file: !2, line: 809, column: 2)
!4644 = !DILocation(line: 809, column: 2, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4643, file: !2, line: 809, column: 2)
!4646 = !DILocation(line: 810, column: 28, scope: !4584)
!4647 = !DILocation(line: 810, column: 34, scope: !4584)
!4648 = !DILocation(line: 810, column: 41, scope: !4584)
!4649 = !DILocation(line: 810, column: 11, scope: !4584)
!4650 = !DILocation(line: 810, column: 9, scope: !4584)
!4651 = !DILocation(line: 811, column: 6, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4584, file: !2, line: 811, column: 6)
!4653 = !DILocation(line: 811, column: 13, scope: !4652)
!4654 = !DILocation(line: 811, column: 6, scope: !4584)
!4655 = !DILocation(line: 812, column: 11, scope: !4652)
!4656 = !DILocation(line: 812, column: 3, scope: !4652)
!4657 = !DILocation(line: 813, column: 2, scope: !4584)
!4658 = !DILocation(line: 813, column: 2, scope: !4595)
!4659 = !DILocation(line: 813, column: 2, scope: !4599)
!4660 = !DILocation(line: 813, column: 2, scope: !4598)
!4661 = !DILocation(line: 815, column: 13, scope: !4584)
!4662 = !DILocation(line: 815, column: 11, scope: !4584)
!4663 = !DILocation(line: 816, column: 6, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4584, file: !2, line: 816, column: 6)
!4665 = !DILocation(line: 816, column: 15, scope: !4664)
!4666 = !DILocation(line: 816, column: 6, scope: !4584)
!4667 = !DILocation(line: 817, column: 3, scope: !4664)
!4668 = !DILocation(line: 819, column: 2, scope: !4584)
!4669 = !DILocation(line: 819, column: 12, scope: !4584)
!4670 = !DILocation(line: 819, column: 19, scope: !4584)
!4671 = !DILocation(line: 819, column: 27, scope: !4584)
!4672 = !DILocation(line: 820, column: 2, scope: !4584)
!4673 = !DILocation(line: 820, column: 12, scope: !4584)
!4674 = !DILocation(line: 820, column: 19, scope: !4584)
!4675 = !DILocation(line: 820, column: 22, scope: !4584)
!4676 = !DILocation(line: 821, column: 16, scope: !4584)
!4677 = !DILocation(line: 821, column: 21, scope: !4584)
!4678 = !DILocation(line: 821, column: 31, scope: !4584)
!4679 = !DILocation(line: 821, column: 38, scope: !4584)
!4680 = !DILocation(line: 821, column: 2, scope: !4584)
!4681 = !DILocation(line: 823, column: 5, scope: !4584)
!4682 = !DILocation(line: 823, column: 13, scope: !4584)
!4683 = !DILocation(line: 823, column: 37, scope: !4584)
!4684 = !DILocation(line: 822, column: 2, scope: !4584)
!4685 = !DILocation(line: 822, column: 12, scope: !4584)
!4686 = !DILocation(line: 822, column: 19, scope: !4584)
!4687 = !DILocation(line: 822, column: 34, scope: !4584)
!4688 = !DILocation(line: 824, column: 2, scope: !4584)
!4689 = !DILocation(line: 824, column: 12, scope: !4584)
!4690 = !DILocation(line: 824, column: 19, scope: !4584)
!4691 = !DILocation(line: 824, column: 25, scope: !4584)
!4692 = !DILocation(line: 825, column: 2, scope: !4584)
!4693 = !DILocation(line: 825, column: 2, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4584, file: !2, line: 825, column: 2)
!4695 = !DILocation(line: 826, column: 2, scope: !4584)
!4696 = !DILocation(line: 826, column: 12, scope: !4584)
!4697 = !DILocation(line: 826, column: 20, scope: !4584)
!4698 = !DILocation(line: 827, column: 2, scope: !4584)
!4699 = !DILocation(line: 827, column: 12, scope: !4584)
!4700 = !DILocation(line: 827, column: 19, scope: !4584)
!4701 = !DILocation(line: 830, column: 19, scope: !4584)
!4702 = !DILocation(line: 830, column: 2, scope: !4584)
!4703 = !DILocation(line: 832, column: 2, scope: !4584)
!4704 = !DILocation(line: 832, column: 2, scope: !4601)
!4705 = !DILocation(line: 832, column: 2, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4601, file: !2, line: 832, column: 2)
!4707 = !DILocation(line: 832, column: 2, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4706, file: !2, line: 832, column: 2)
!4709 = !DILocation(line: 833, column: 11, scope: !4584)
!4710 = !DILocation(line: 833, column: 17, scope: !4584)
!4711 = !DILocation(line: 833, column: 25, scope: !4584)
!4712 = !DILocation(line: 833, column: 34, scope: !4584)
!4713 = !DILocation(line: 833, column: 43, scope: !4584)
!4714 = !DILocation(line: 834, column: 8, scope: !4584)
!4715 = !DILocation(line: 834, column: 14, scope: !4584)
!4716 = !DILocation(line: 834, column: 22, scope: !4584)
!4717 = !DILocation(line: 835, column: 8, scope: !4584)
!4718 = !DILocation(line: 835, column: 14, scope: !4584)
!4719 = !DILocation(line: 835, column: 22, scope: !4584)
!4720 = !DILocation(line: 833, column: 9, scope: !4584)
!4721 = !DILocation(line: 836, column: 2, scope: !4584)
!4722 = !DILocation(line: 836, column: 2, scope: !4603)
!4723 = !DILocation(line: 836, column: 2, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4603, file: !2, line: 836, column: 2)
!4725 = !DILocation(line: 836, column: 2, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4724, file: !2, line: 836, column: 2)
!4727 = !DILocation(line: 837, column: 6, scope: !4606)
!4728 = !DILocation(line: 837, column: 13, scope: !4606)
!4729 = !DILocation(line: 837, column: 6, scope: !4584)
!4730 = !DILocation(line: 838, column: 3, scope: !4605)
!4731 = !DILocation(line: 838, column: 21, scope: !4605)
!4732 = !DILocation(line: 838, column: 29, scope: !4605)
!4733 = !DILocation(line: 838, column: 39, scope: !4605)
!4734 = !DILocation(line: 839, column: 3, scope: !4605)
!4735 = !DILocation(line: 840, column: 11, scope: !4605)
!4736 = !DILocation(line: 840, column: 3, scope: !4605)
!4737 = !DILocation(line: 841, column: 2, scope: !4606)
!4738 = !DILocation(line: 843, column: 6, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4584, file: !2, line: 843, column: 6)
!4740 = !DILocation(line: 843, column: 16, scope: !4739)
!4741 = !DILocation(line: 843, column: 23, scope: !4739)
!4742 = !DILocation(line: 843, column: 6, scope: !4584)
!4743 = !DILocation(line: 844, column: 3, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4739, file: !2, line: 843, column: 32)
!4745 = !DILocation(line: 844, column: 3, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4744, file: !2, line: 844, column: 3)
!4747 = !DILocation(line: 844, column: 3, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !2, line: 844, column: 3)
!4749 = distinct !DILexicalBlock(scope: !4746, file: !2, line: 844, column: 3)
!4750 = !DILocation(line: 844, column: 3, scope: !4749)
!4751 = !DILocation(line: 844, column: 3, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4748, file: !2, line: 844, column: 3)
!4753 = !DILocation(line: 844, column: 3, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4749, file: !2, line: 844, column: 3)
!4755 = !DILocation(line: 844, column: 3, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4754, file: !2, line: 844, column: 3)
!4757 = !DILocation(line: 845, column: 3, scope: !4744)
!4758 = !DILocation(line: 845, column: 3, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4744, file: !2, line: 845, column: 3)
!4760 = !DILocation(line: 845, column: 3, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !2, line: 845, column: 3)
!4762 = distinct !DILexicalBlock(scope: !4759, file: !2, line: 845, column: 3)
!4763 = !DILocation(line: 845, column: 3, scope: !4762)
!4764 = !DILocation(line: 846, column: 2, scope: !4744)
!4765 = !DILocation(line: 848, column: 35, scope: !4584)
!4766 = !DILocation(line: 848, column: 3, scope: !4584)
!4767 = !DILocation(line: 848, column: 13, scope: !4584)
!4768 = !DILocation(line: 850, column: 2, scope: !4584)
!4769 = !DILocation(line: 851, column: 1, scope: !4584)
!4770 = distinct !DISubprogram(name: "findrdataset", scope: !2, file: !2, line: 854, type: !977, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4771)
!4771 = !{!4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781}
!4772 = !DILocalVariable(name: "db", arg: 1, scope: !4770, file: !2, line: 854, type: !254)
!4773 = !DILocalVariable(name: "node", arg: 2, scope: !4770, file: !2, line: 854, type: !906)
!4774 = !DILocalVariable(name: "version", arg: 3, scope: !4770, file: !2, line: 854, type: !449)
!4775 = !DILocalVariable(name: "type", arg: 4, scope: !4770, file: !2, line: 855, type: !403)
!4776 = !DILocalVariable(name: "covers", arg: 5, scope: !4770, file: !2, line: 855, type: !403)
!4777 = !DILocalVariable(name: "now", arg: 6, scope: !4770, file: !2, line: 856, type: !775)
!4778 = !DILocalVariable(name: "rdataset", arg: 7, scope: !4770, file: !2, line: 856, type: !364)
!4779 = !DILocalVariable(name: "sigrdataset", arg: 8, scope: !4770, file: !2, line: 857, type: !364)
!4780 = !DILocalVariable(name: "list", scope: !4770, file: !2, line: 859, type: !576)
!4781 = !DILocalVariable(name: "sdlznode", scope: !4770, file: !2, line: 860, type: !1344)
!4782 = !DILocation(line: 854, column: 24, scope: !4770)
!4783 = !DILocation(line: 854, column: 42, scope: !4770)
!4784 = !DILocation(line: 854, column: 65, scope: !4770)
!4785 = !DILocation(line: 855, column: 23, scope: !4770)
!4786 = !DILocation(line: 855, column: 45, scope: !4770)
!4787 = !DILocation(line: 856, column: 21, scope: !4770)
!4788 = !DILocation(line: 856, column: 42, scope: !4770)
!4789 = !DILocation(line: 857, column: 23, scope: !4770)
!4790 = !DILocation(line: 859, column: 2, scope: !4770)
!4791 = !DILocation(line: 859, column: 19, scope: !4770)
!4792 = !DILocation(line: 860, column: 2, scope: !4770)
!4793 = !DILocation(line: 860, column: 18, scope: !4770)
!4794 = !DILocation(line: 860, column: 47, scope: !4770)
!4795 = !DILocation(line: 862, column: 2, scope: !4770)
!4796 = !DILocation(line: 0, scope: !4770)
!4797 = !DILocation(line: 864, column: 2, scope: !4770)
!4798 = !DILocation(line: 865, column: 2, scope: !4770)
!4799 = !DILocation(line: 866, column: 2, scope: !4770)
!4800 = !DILocation(line: 867, column: 2, scope: !4770)
!4801 = !DILocation(line: 868, column: 2, scope: !4770)
!4802 = !DILocation(line: 870, column: 6, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4770, file: !2, line: 870, column: 6)
!4804 = !DILocation(line: 870, column: 11, scope: !4803)
!4805 = !DILocation(line: 870, column: 32, scope: !4803)
!4806 = !DILocation(line: 870, column: 35, scope: !4803)
!4807 = !DILocation(line: 870, column: 40, scope: !4803)
!4808 = !DILocation(line: 870, column: 6, scope: !4770)
!4809 = !DILocation(line: 871, column: 3, scope: !4803)
!4810 = !DILocation(line: 873, column: 9, scope: !4770)
!4811 = !DILocation(line: 873, column: 7, scope: !4770)
!4812 = !DILocation(line: 874, column: 2, scope: !4770)
!4813 = !DILocation(line: 874, column: 9, scope: !4770)
!4814 = !DILocation(line: 874, column: 14, scope: !4770)
!4815 = !DILocation(line: 875, column: 7, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4817, file: !2, line: 875, column: 7)
!4817 = distinct !DILexicalBlock(scope: !4770, file: !2, line: 874, column: 23)
!4818 = !DILocation(line: 875, column: 13, scope: !4816)
!4819 = !DILocation(line: 875, column: 21, scope: !4816)
!4820 = !DILocation(line: 875, column: 18, scope: !4816)
!4821 = !DILocation(line: 875, column: 7, scope: !4817)
!4822 = !DILocation(line: 876, column: 4, scope: !4816)
!4823 = !DILocation(line: 877, column: 10, scope: !4817)
!4824 = !DILocation(line: 877, column: 8, scope: !4817)
!4825 = distinct !{!4825, !4812, !4826, !2416}
!4826 = !DILocation(line: 878, column: 2, scope: !4770)
!4827 = !DILocation(line: 879, column: 6, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4770, file: !2, line: 879, column: 6)
!4829 = !DILocation(line: 879, column: 11, scope: !4828)
!4830 = !DILocation(line: 879, column: 6, scope: !4770)
!4831 = !DILocation(line: 880, column: 3, scope: !4828)
!4832 = !DILocation(line: 882, column: 18, scope: !4770)
!4833 = !DILocation(line: 882, column: 24, scope: !4770)
!4834 = !DILocation(line: 882, column: 28, scope: !4770)
!4835 = !DILocation(line: 882, column: 34, scope: !4770)
!4836 = !DILocation(line: 882, column: 2, scope: !4770)
!4837 = !DILocation(line: 884, column: 2, scope: !4770)
!4838 = !DILocation(line: 885, column: 1, scope: !4770)
!4839 = distinct !DISubprogram(name: "allrdatasets", scope: !2, file: !2, line: 1067, type: !981, scopeLine: 1069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4840)
!4840 = !{!4841, !4842, !4843, !4844, !4845, !4846, !4847}
!4841 = !DILocalVariable(name: "db", arg: 1, scope: !4839, file: !2, line: 1067, type: !254)
!4842 = !DILocalVariable(name: "node", arg: 2, scope: !4839, file: !2, line: 1067, type: !906)
!4843 = !DILocalVariable(name: "version", arg: 3, scope: !4839, file: !2, line: 1067, type: !449)
!4844 = !DILocalVariable(name: "now", arg: 4, scope: !4839, file: !2, line: 1068, type: !775)
!4845 = !DILocalVariable(name: "iteratorp", arg: 5, scope: !4839, file: !2, line: 1068, type: !983)
!4846 = !DILocalVariable(name: "sdlz", scope: !4839, file: !2, line: 1070, type: !233)
!4847 = !DILocalVariable(name: "iterator", scope: !4839, file: !2, line: 1071, type: !2074)
!4848 = !DILocation(line: 1067, column: 24, scope: !4839)
!4849 = !DILocation(line: 1067, column: 42, scope: !4839)
!4850 = !DILocation(line: 1067, column: 65, scope: !4839)
!4851 = !DILocation(line: 1068, column: 21, scope: !4839)
!4852 = !DILocation(line: 1068, column: 47, scope: !4839)
!4853 = !DILocation(line: 1070, column: 2, scope: !4839)
!4854 = !DILocation(line: 1070, column: 17, scope: !4839)
!4855 = !DILocation(line: 1070, column: 42, scope: !4839)
!4856 = !DILocation(line: 1071, column: 2, scope: !4839)
!4857 = !DILocation(line: 1071, column: 23, scope: !4839)
!4858 = !DILocation(line: 1073, column: 2, scope: !4839)
!4859 = !DILocation(line: 0, scope: !4839)
!4860 = !DILocation(line: 1075, column: 2, scope: !4839)
!4861 = !DILocation(line: 1079, column: 2, scope: !4839)
!4862 = !DILocation(line: 1080, column: 2, scope: !4839)
!4863 = !DILocation(line: 1082, column: 13, scope: !4839)
!4864 = !DILocation(line: 1082, column: 11, scope: !4839)
!4865 = !DILocation(line: 1083, column: 6, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4839, file: !2, line: 1083, column: 6)
!4867 = !DILocation(line: 1083, column: 15, scope: !4866)
!4868 = !DILocation(line: 1083, column: 6, scope: !4839)
!4869 = !DILocation(line: 1084, column: 3, scope: !4866)
!4870 = !DILocation(line: 1086, column: 2, scope: !4839)
!4871 = !DILocation(line: 1086, column: 12, scope: !4839)
!4872 = !DILocation(line: 1086, column: 19, scope: !4839)
!4873 = !DILocation(line: 1086, column: 25, scope: !4839)
!4874 = !DILocation(line: 1087, column: 2, scope: !4839)
!4875 = !DILocation(line: 1087, column: 12, scope: !4839)
!4876 = !DILocation(line: 1087, column: 19, scope: !4839)
!4877 = !DILocation(line: 1087, column: 27, scope: !4839)
!4878 = !DILocation(line: 1088, column: 24, scope: !4839)
!4879 = !DILocation(line: 1088, column: 2, scope: !4839)
!4880 = !DILocation(line: 1088, column: 12, scope: !4839)
!4881 = !DILocation(line: 1088, column: 19, scope: !4839)
!4882 = !DILocation(line: 1088, column: 22, scope: !4839)
!4883 = !DILocation(line: 1089, column: 2, scope: !4839)
!4884 = !DILocation(line: 1089, column: 12, scope: !4839)
!4885 = !DILocation(line: 1089, column: 19, scope: !4839)
!4886 = !DILocation(line: 1089, column: 24, scope: !4839)
!4887 = !DILocation(line: 1090, column: 13, scope: !4839)
!4888 = !DILocation(line: 1090, column: 17, scope: !4839)
!4889 = !DILocation(line: 1090, column: 24, scope: !4839)
!4890 = !DILocation(line: 1090, column: 34, scope: !4839)
!4891 = !DILocation(line: 1090, column: 41, scope: !4839)
!4892 = !DILocation(line: 1090, column: 2, scope: !4839)
!4893 = !DILocation(line: 1091, column: 29, scope: !4839)
!4894 = !DILocation(line: 1091, column: 2, scope: !4839)
!4895 = !DILocation(line: 1091, column: 12, scope: !4839)
!4896 = !DILocation(line: 1091, column: 19, scope: !4839)
!4897 = !DILocation(line: 1091, column: 27, scope: !4839)
!4898 = !DILocation(line: 1092, column: 25, scope: !4839)
!4899 = !DILocation(line: 1092, column: 2, scope: !4839)
!4900 = !DILocation(line: 1092, column: 12, scope: !4839)
!4901 = !DILocation(line: 1092, column: 19, scope: !4839)
!4902 = !DILocation(line: 1092, column: 23, scope: !4839)
!4903 = !DILocation(line: 1094, column: 37, scope: !4839)
!4904 = !DILocation(line: 1094, column: 3, scope: !4839)
!4905 = !DILocation(line: 1094, column: 13, scope: !4839)
!4906 = !DILocation(line: 1096, column: 2, scope: !4839)
!4907 = !DILocation(line: 1097, column: 1, scope: !4839)
!4908 = distinct !DISubprogram(name: "addrdataset", scope: !2, file: !2, line: 1166, type: !1014, scopeLine: 1169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4909)
!4909 = !{!4910, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918}
!4910 = !DILocalVariable(name: "db", arg: 1, scope: !4908, file: !2, line: 1166, type: !254)
!4911 = !DILocalVariable(name: "node", arg: 2, scope: !4908, file: !2, line: 1166, type: !906)
!4912 = !DILocalVariable(name: "version", arg: 3, scope: !4908, file: !2, line: 1166, type: !449)
!4913 = !DILocalVariable(name: "now", arg: 4, scope: !4908, file: !2, line: 1167, type: !775)
!4914 = !DILocalVariable(name: "rdataset", arg: 5, scope: !4908, file: !2, line: 1167, type: !364)
!4915 = !DILocalVariable(name: "options", arg: 6, scope: !4908, file: !2, line: 1167, type: !80)
!4916 = !DILocalVariable(name: "addedrdataset", arg: 7, scope: !4908, file: !2, line: 1168, type: !364)
!4917 = !DILocalVariable(name: "sdlz", scope: !4908, file: !2, line: 1170, type: !233)
!4918 = !DILocalVariable(name: "result", scope: !4908, file: !2, line: 1171, type: !264)
!4919 = !DILocation(line: 1166, column: 23, scope: !4908)
!4920 = !DILocation(line: 1166, column: 41, scope: !4908)
!4921 = !DILocation(line: 1166, column: 64, scope: !4908)
!4922 = !DILocation(line: 1167, column: 20, scope: !4908)
!4923 = !DILocation(line: 1167, column: 41, scope: !4908)
!4924 = !DILocation(line: 1167, column: 64, scope: !4908)
!4925 = !DILocation(line: 1168, column: 22, scope: !4908)
!4926 = !DILocation(line: 1170, column: 2, scope: !4908)
!4927 = !DILocation(line: 1170, column: 17, scope: !4908)
!4928 = !DILocation(line: 1170, column: 41, scope: !4908)
!4929 = !DILocation(line: 1171, column: 2, scope: !4908)
!4930 = !DILocation(line: 1171, column: 15, scope: !4908)
!4931 = !DILocation(line: 1173, column: 2, scope: !4908)
!4932 = !DILocation(line: 1174, column: 2, scope: !4908)
!4933 = !DILocation(line: 1175, column: 2, scope: !4908)
!4934 = !DILocation(line: 0, scope: !4908)
!4935 = !DILocation(line: 1177, column: 6, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4908, file: !2, line: 1177, column: 6)
!4937 = !DILocation(line: 1177, column: 12, scope: !4936)
!4938 = !DILocation(line: 1177, column: 20, scope: !4936)
!4939 = !DILocation(line: 1177, column: 29, scope: !4936)
!4940 = !DILocation(line: 1177, column: 41, scope: !4936)
!4941 = !DILocation(line: 1177, column: 6, scope: !4908)
!4942 = !DILocation(line: 1178, column: 3, scope: !4936)
!4943 = !DILocation(line: 1180, column: 23, scope: !4908)
!4944 = !DILocation(line: 1180, column: 27, scope: !4908)
!4945 = !DILocation(line: 1180, column: 33, scope: !4908)
!4946 = !DILocation(line: 1180, column: 42, scope: !4908)
!4947 = !DILocation(line: 1180, column: 52, scope: !4908)
!4948 = !DILocation(line: 1181, column: 9, scope: !4908)
!4949 = !DILocation(line: 1181, column: 15, scope: !4908)
!4950 = !DILocation(line: 1181, column: 23, scope: !4908)
!4951 = !DILocation(line: 1181, column: 32, scope: !4908)
!4952 = !DILocation(line: 1180, column: 11, scope: !4908)
!4953 = !DILocation(line: 1180, column: 9, scope: !4908)
!4954 = !DILocation(line: 1182, column: 10, scope: !4908)
!4955 = !DILocation(line: 1182, column: 2, scope: !4908)
!4956 = !DILocation(line: 1183, column: 1, scope: !4908)
!4957 = distinct !DISubprogram(name: "subtractrdataset", scope: !2, file: !2, line: 1187, type: !1018, scopeLine: 1190, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !4958)
!4958 = !{!4959, !4960, !4961, !4962, !4963, !4964, !4965, !4966}
!4959 = !DILocalVariable(name: "db", arg: 1, scope: !4957, file: !2, line: 1187, type: !254)
!4960 = !DILocalVariable(name: "node", arg: 2, scope: !4957, file: !2, line: 1187, type: !906)
!4961 = !DILocalVariable(name: "version", arg: 3, scope: !4957, file: !2, line: 1187, type: !449)
!4962 = !DILocalVariable(name: "rdataset", arg: 4, scope: !4957, file: !2, line: 1188, type: !364)
!4963 = !DILocalVariable(name: "options", arg: 5, scope: !4957, file: !2, line: 1188, type: !80)
!4964 = !DILocalVariable(name: "newrdataset", arg: 6, scope: !4957, file: !2, line: 1189, type: !364)
!4965 = !DILocalVariable(name: "sdlz", scope: !4957, file: !2, line: 1191, type: !233)
!4966 = !DILocalVariable(name: "result", scope: !4957, file: !2, line: 1192, type: !264)
!4967 = !DILocation(line: 1187, column: 28, scope: !4957)
!4968 = !DILocation(line: 1187, column: 46, scope: !4957)
!4969 = !DILocation(line: 1187, column: 69, scope: !4957)
!4970 = !DILocation(line: 1188, column: 20, scope: !4957)
!4971 = !DILocation(line: 1188, column: 43, scope: !4957)
!4972 = !DILocation(line: 1189, column: 20, scope: !4957)
!4973 = !DILocation(line: 1191, column: 2, scope: !4957)
!4974 = !DILocation(line: 1191, column: 17, scope: !4957)
!4975 = !DILocation(line: 1191, column: 41, scope: !4957)
!4976 = !DILocation(line: 1192, column: 2, scope: !4957)
!4977 = !DILocation(line: 1192, column: 15, scope: !4957)
!4978 = !DILocation(line: 1194, column: 2, scope: !4957)
!4979 = !DILocation(line: 1195, column: 2, scope: !4957)
!4980 = !DILocation(line: 0, scope: !4957)
!4981 = !DILocation(line: 1197, column: 6, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4957, file: !2, line: 1197, column: 6)
!4983 = !DILocation(line: 1197, column: 12, scope: !4982)
!4984 = !DILocation(line: 1197, column: 20, scope: !4982)
!4985 = !DILocation(line: 1197, column: 29, scope: !4982)
!4986 = !DILocation(line: 1197, column: 46, scope: !4982)
!4987 = !DILocation(line: 1197, column: 6, scope: !4957)
!4988 = !DILocation(line: 1198, column: 3, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4982, file: !2, line: 1197, column: 55)
!4990 = !DILocation(line: 1201, column: 23, scope: !4957)
!4991 = !DILocation(line: 1201, column: 27, scope: !4957)
!4992 = !DILocation(line: 1201, column: 33, scope: !4957)
!4993 = !DILocation(line: 1201, column: 42, scope: !4957)
!4994 = !DILocation(line: 1201, column: 52, scope: !4957)
!4995 = !DILocation(line: 1202, column: 9, scope: !4957)
!4996 = !DILocation(line: 1202, column: 15, scope: !4957)
!4997 = !DILocation(line: 1202, column: 23, scope: !4957)
!4998 = !DILocation(line: 1202, column: 32, scope: !4957)
!4999 = !DILocation(line: 1201, column: 11, scope: !4957)
!5000 = !DILocation(line: 1201, column: 9, scope: !4957)
!5001 = !DILocation(line: 1203, column: 10, scope: !4957)
!5002 = !DILocation(line: 1203, column: 2, scope: !4957)
!5003 = !DILocation(line: 1204, column: 1, scope: !4957)
!5004 = distinct !DISubprogram(name: "deleterdataset", scope: !2, file: !2, line: 1207, type: !1022, scopeLine: 1209, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !5005)
!5005 = !{!5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016, !5018}
!5006 = !DILocalVariable(name: "db", arg: 1, scope: !5004, file: !2, line: 1207, type: !254)
!5007 = !DILocalVariable(name: "node", arg: 2, scope: !5004, file: !2, line: 1207, type: !906)
!5008 = !DILocalVariable(name: "version", arg: 3, scope: !5004, file: !2, line: 1207, type: !449)
!5009 = !DILocalVariable(name: "type", arg: 4, scope: !5004, file: !2, line: 1208, type: !403)
!5010 = !DILocalVariable(name: "covers", arg: 5, scope: !5004, file: !2, line: 1208, type: !403)
!5011 = !DILocalVariable(name: "sdlz", scope: !5004, file: !2, line: 1210, type: !233)
!5012 = !DILocalVariable(name: "name", scope: !5004, file: !2, line: 1211, type: !3690)
!5013 = !DILocalVariable(name: "b_type", scope: !5004, file: !2, line: 1212, type: !4006)
!5014 = !DILocalVariable(name: "sdlznode", scope: !5004, file: !2, line: 1213, type: !1344)
!5015 = !DILocalVariable(name: "result", scope: !5004, file: !2, line: 1214, type: !264)
!5016 = !DILocalVariable(name: "flags", scope: !5017, file: !2, line: 1227, type: !80)
!5017 = distinct !DILexicalBlock(scope: !5004, file: !2, line: 1227, column: 2)
!5018 = !DILocalVariable(name: "flags", scope: !5019, file: !2, line: 1231, type: !80)
!5019 = distinct !DILexicalBlock(scope: !5004, file: !2, line: 1231, column: 2)
!5020 = !DILocation(line: 1207, column: 26, scope: !5004)
!5021 = !DILocation(line: 1207, column: 44, scope: !5004)
!5022 = !DILocation(line: 1207, column: 67, scope: !5004)
!5023 = !DILocation(line: 1208, column: 25, scope: !5004)
!5024 = !DILocation(line: 1208, column: 47, scope: !5004)
!5025 = !DILocation(line: 1210, column: 2, scope: !5004)
!5026 = !DILocation(line: 1210, column: 17, scope: !5004)
!5027 = !DILocation(line: 1210, column: 41, scope: !5004)
!5028 = !DILocation(line: 1211, column: 2, scope: !5004)
!5029 = !DILocation(line: 1211, column: 7, scope: !5004)
!5030 = !DILocation(line: 1212, column: 2, scope: !5004)
!5031 = !DILocation(line: 1212, column: 7, scope: !5004)
!5032 = !DILocation(line: 1213, column: 2, scope: !5004)
!5033 = !DILocation(line: 1213, column: 18, scope: !5004)
!5034 = !DILocation(line: 1214, column: 2, scope: !5004)
!5035 = !DILocation(line: 1214, column: 15, scope: !5004)
!5036 = !DILocation(line: 1216, column: 2, scope: !5004)
!5037 = !DILocation(line: 1218, column: 2, scope: !5004)
!5038 = !DILocation(line: 0, scope: !5004)
!5039 = !DILocation(line: 1220, column: 6, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5004, file: !2, line: 1220, column: 6)
!5041 = !DILocation(line: 1220, column: 12, scope: !5040)
!5042 = !DILocation(line: 1220, column: 20, scope: !5040)
!5043 = !DILocation(line: 1220, column: 29, scope: !5040)
!5044 = !DILocation(line: 1220, column: 41, scope: !5040)
!5045 = !DILocation(line: 1220, column: 6, scope: !5004)
!5046 = !DILocation(line: 1221, column: 3, scope: !5040)
!5047 = !DILocation(line: 1223, column: 31, scope: !5004)
!5048 = !DILocation(line: 1223, column: 11, scope: !5004)
!5049 = !DILocation(line: 1224, column: 18, scope: !5004)
!5050 = !DILocation(line: 1224, column: 28, scope: !5004)
!5051 = !DILocation(line: 1224, column: 34, scope: !5004)
!5052 = !DILocation(line: 1224, column: 2, scope: !5004)
!5053 = !DILocation(line: 1225, column: 23, scope: !5004)
!5054 = !DILocation(line: 1225, column: 29, scope: !5004)
!5055 = !DILocation(line: 1225, column: 2, scope: !5004)
!5056 = !DILocation(line: 1227, column: 2, scope: !5004)
!5057 = !DILocation(line: 1227, column: 2, scope: !5017)
!5058 = !DILocation(line: 1227, column: 2, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5017, file: !2, line: 1227, column: 2)
!5060 = !DILocation(line: 1227, column: 2, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5059, file: !2, line: 1227, column: 2)
!5062 = !DILocation(line: 1228, column: 11, scope: !5004)
!5063 = !DILocation(line: 1228, column: 17, scope: !5004)
!5064 = !DILocation(line: 1228, column: 25, scope: !5004)
!5065 = !DILocation(line: 1228, column: 34, scope: !5004)
!5066 = !DILocation(line: 1228, column: 46, scope: !5004)
!5067 = !DILocation(line: 1228, column: 52, scope: !5004)
!5068 = !DILocation(line: 1229, column: 11, scope: !5004)
!5069 = !DILocation(line: 1229, column: 17, scope: !5004)
!5070 = !DILocation(line: 1229, column: 25, scope: !5004)
!5071 = !DILocation(line: 1230, column: 11, scope: !5004)
!5072 = !DILocation(line: 1230, column: 17, scope: !5004)
!5073 = !DILocation(line: 1230, column: 25, scope: !5004)
!5074 = !DILocation(line: 1228, column: 9, scope: !5004)
!5075 = !DILocation(line: 1231, column: 2, scope: !5004)
!5076 = !DILocation(line: 1231, column: 2, scope: !5019)
!5077 = !DILocation(line: 1231, column: 2, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5019, file: !2, line: 1231, column: 2)
!5079 = !DILocation(line: 1231, column: 2, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5078, file: !2, line: 1231, column: 2)
!5081 = !DILocation(line: 1233, column: 10, scope: !5004)
!5082 = !DILocation(line: 1233, column: 2, scope: !5004)
!5083 = !DILocation(line: 1234, column: 1, scope: !5004)
!5084 = distinct !DISubprogram(name: "issecure", scope: !2, file: !2, line: 1237, type: !1026, scopeLine: 1237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !5085)
!5085 = !{!5086}
!5086 = !DILocalVariable(name: "db", arg: 1, scope: !5084, file: !2, line: 1237, type: !254)
!5087 = !DILocation(line: 1237, column: 20, scope: !5084)
!5088 = !DILocation(line: 1238, column: 2, scope: !5084)
!5089 = !DILocation(line: 1240, column: 2, scope: !5084)
!5090 = distinct !DISubprogram(name: "nodecount", scope: !2, file: !2, line: 1244, type: !1030, scopeLine: 1244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !5091)
!5091 = !{!5092}
!5092 = !DILocalVariable(name: "db", arg: 1, scope: !5090, file: !2, line: 1244, type: !254)
!5093 = !DILocation(line: 1244, column: 21, scope: !5090)
!5094 = !DILocation(line: 1245, column: 2, scope: !5090)
!5095 = !DILocation(line: 1247, column: 2, scope: !5090)
!5096 = distinct !DISubprogram(name: "ispersistent", scope: !2, file: !2, line: 1251, type: !1026, scopeLine: 1251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !5097)
!5097 = !{!5098}
!5098 = !DILocalVariable(name: "db", arg: 1, scope: !5096, file: !2, line: 1251, type: !254)
!5099 = !DILocation(line: 1251, column: 24, scope: !5096)
!5100 = !DILocation(line: 1252, column: 2, scope: !5096)
!5101 = !DILocation(line: 1253, column: 2, scope: !5096)
!5102 = distinct !DISubprogram(name: "overmem", scope: !2, file: !2, line: 1257, type: !1035, scopeLine: 1257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !5103)
!5103 = !{!5104, !5105}
!5104 = !DILocalVariable(name: "db", arg: 1, scope: !5102, file: !2, line: 1257, type: !254)
!5105 = !DILocalVariable(name: "over", arg: 2, scope: !5102, file: !2, line: 1257, type: !353)
!5106 = !DILocation(line: 1257, column: 19, scope: !5102)
!5107 = !DILocation(line: 1257, column: 28, scope: !5102)
!5108 = !DILocation(line: 1258, column: 2, scope: !5102)
!5109 = !DILocation(line: 1259, column: 2, scope: !5102)
!5110 = !DILocation(line: 1260, column: 1, scope: !5102)
!5111 = distinct !DISubprogram(name: "settask", scope: !2, file: !2, line: 1263, type: !1039, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !5112)
!5112 = !{!5113, !5114}
!5113 = !DILocalVariable(name: "db", arg: 1, scope: !5111, file: !2, line: 1263, type: !254)
!5114 = !DILocalVariable(name: "task", arg: 2, scope: !5111, file: !2, line: 1263, type: !1041)
!5115 = !DILocation(line: 1263, column: 19, scope: !5111)
!5116 = !DILocation(line: 1263, column: 35, scope: !5111)
!5117 = !DILocation(line: 1264, column: 2, scope: !5111)
!5118 = !DILocation(line: 1265, column: 2, scope: !5111)
!5119 = !DILocation(line: 1266, column: 1, scope: !5111)
!5120 = distinct !DISubprogram(name: "getoriginnode", scope: !2, file: !2, line: 1273, type: !1046, scopeLine: 1273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !5121)
!5121 = !{!5122, !5123, !5124, !5125}
!5122 = !DILocalVariable(name: "db", arg: 1, scope: !5120, file: !2, line: 1273, type: !254)
!5123 = !DILocalVariable(name: "nodep", arg: 2, scope: !5120, file: !2, line: 1273, type: !905)
!5124 = !DILocalVariable(name: "sdlz", scope: !5120, file: !2, line: 1274, type: !233)
!5125 = !DILocalVariable(name: "result", scope: !5120, file: !2, line: 1275, type: !264)
!5126 = !DILocation(line: 1273, column: 25, scope: !5120)
!5127 = !DILocation(line: 1273, column: 44, scope: !5120)
!5128 = !DILocation(line: 1274, column: 2, scope: !5120)
!5129 = !DILocation(line: 1274, column: 17, scope: !5120)
!5130 = !DILocation(line: 1274, column: 41, scope: !5120)
!5131 = !DILocation(line: 1275, column: 2, scope: !5120)
!5132 = !DILocation(line: 1275, column: 15, scope: !5120)
!5133 = !DILocation(line: 1277, column: 2, scope: !5120)
!5134 = !DILocation(line: 0, scope: !5120)
!5135 = !DILocation(line: 1278, column: 6, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5120, file: !2, line: 1278, column: 6)
!5137 = !DILocation(line: 1278, column: 12, scope: !5136)
!5138 = !DILocation(line: 1278, column: 20, scope: !5136)
!5139 = !DILocation(line: 1278, column: 29, scope: !5136)
!5140 = !DILocation(line: 1278, column: 40, scope: !5136)
!5141 = !DILocation(line: 1278, column: 6, scope: !5120)
!5142 = !DILocation(line: 1279, column: 3, scope: !5136)
!5143 = !DILocation(line: 1281, column: 23, scope: !5120)
!5144 = !DILocation(line: 1281, column: 28, scope: !5120)
!5145 = !DILocation(line: 1281, column: 34, scope: !5120)
!5146 = !DILocation(line: 1281, column: 41, scope: !5120)
!5147 = !DILocation(line: 1282, column: 24, scope: !5120)
!5148 = !DILocation(line: 1281, column: 11, scope: !5120)
!5149 = !DILocation(line: 1281, column: 9, scope: !5120)
!5150 = !DILocation(line: 1283, column: 6, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5120, file: !2, line: 1283, column: 6)
!5152 = !DILocation(line: 1283, column: 13, scope: !5151)
!5153 = !DILocation(line: 1283, column: 6, scope: !5120)
!5154 = !DILocation(line: 1285, column: 23, scope: !5151)
!5155 = !DILocation(line: 1285, column: 5, scope: !5151)
!5156 = !DILocation(line: 1284, column: 3, scope: !5151)
!5157 = !DILocation(line: 1286, column: 10, scope: !5120)
!5158 = !DILocation(line: 1286, column: 2, scope: !5120)
!5159 = !DILocation(line: 1287, column: 1, scope: !5120)
!5160 = distinct !DISubprogram(name: "findnodeext", scope: !2, file: !2, line: 697, type: !1092, scopeLine: 700, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !5161)
!5161 = !{!5162, !5163, !5164, !5165, !5166, !5167}
!5162 = !DILocalVariable(name: "db", arg: 1, scope: !5160, file: !2, line: 697, type: !254)
!5163 = !DILocalVariable(name: "name", arg: 2, scope: !5160, file: !2, line: 697, type: !277)
!5164 = !DILocalVariable(name: "create", arg: 3, scope: !5160, file: !2, line: 697, type: !353)
!5165 = !DILocalVariable(name: "methods", arg: 4, scope: !5160, file: !2, line: 698, type: !1094)
!5166 = !DILocalVariable(name: "clientinfo", arg: 5, scope: !5160, file: !2, line: 698, type: !1106)
!5167 = !DILocalVariable(name: "nodep", arg: 6, scope: !5160, file: !2, line: 699, type: !905)
!5168 = !DILocation(line: 697, column: 23, scope: !5160)
!5169 = !DILocation(line: 697, column: 45, scope: !5160)
!5170 = !DILocation(line: 697, column: 56, scope: !5160)
!5171 = !DILocation(line: 698, column: 31, scope: !5160)
!5172 = !DILocation(line: 698, column: 58, scope: !5160)
!5173 = !DILocation(line: 699, column: 21, scope: !5160)
!5174 = !DILocation(line: 701, column: 22, scope: !5160)
!5175 = !DILocation(line: 701, column: 26, scope: !5160)
!5176 = !DILocation(line: 701, column: 32, scope: !5160)
!5177 = !DILocation(line: 701, column: 43, scope: !5160)
!5178 = !DILocation(line: 701, column: 52, scope: !5160)
!5179 = !DILocation(line: 701, column: 64, scope: !5160)
!5180 = !DILocation(line: 701, column: 10, scope: !5160)
!5181 = !DILocation(line: 701, column: 2, scope: !5160)
!5182 = distinct !DISubprogram(name: "findext", scope: !2, file: !2, line: 888, type: !1177, scopeLine: 893, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !5183)
!5183 = !{!5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204, !5205, !5209}
!5184 = !DILocalVariable(name: "db", arg: 1, scope: !5182, file: !2, line: 888, type: !254)
!5185 = !DILocalVariable(name: "name", arg: 2, scope: !5182, file: !2, line: 888, type: !277)
!5186 = !DILocalVariable(name: "version", arg: 3, scope: !5182, file: !2, line: 888, type: !449)
!5187 = !DILocalVariable(name: "type", arg: 4, scope: !5182, file: !2, line: 889, type: !403)
!5188 = !DILocalVariable(name: "options", arg: 5, scope: !5182, file: !2, line: 889, type: !80)
!5189 = !DILocalVariable(name: "now", arg: 6, scope: !5182, file: !2, line: 889, type: !775)
!5190 = !DILocalVariable(name: "nodep", arg: 7, scope: !5182, file: !2, line: 890, type: !905)
!5191 = !DILocalVariable(name: "foundname", arg: 8, scope: !5182, file: !2, line: 890, type: !358)
!5192 = !DILocalVariable(name: "methods", arg: 9, scope: !5182, file: !2, line: 891, type: !1094)
!5193 = !DILocalVariable(name: "clientinfo", arg: 10, scope: !5182, file: !2, line: 891, type: !1106)
!5194 = !DILocalVariable(name: "rdataset", arg: 11, scope: !5182, file: !2, line: 892, type: !364)
!5195 = !DILocalVariable(name: "sigrdataset", arg: 12, scope: !5182, file: !2, line: 892, type: !364)
!5196 = !DILocalVariable(name: "sdlz", scope: !5182, file: !2, line: 894, type: !233)
!5197 = !DILocalVariable(name: "node", scope: !5182, file: !2, line: 895, type: !906)
!5198 = !DILocalVariable(name: "fname", scope: !5182, file: !2, line: 896, type: !1645)
!5199 = !DILocalVariable(name: "xrdataset", scope: !5182, file: !2, line: 897, type: !365)
!5200 = !DILocalVariable(name: "xname", scope: !5182, file: !2, line: 898, type: !358)
!5201 = !DILocalVariable(name: "nlabels", scope: !5182, file: !2, line: 899, type: !80)
!5202 = !DILocalVariable(name: "olabels", scope: !5182, file: !2, line: 899, type: !80)
!5203 = !DILocalVariable(name: "result", scope: !5182, file: !2, line: 900, type: !264)
!5204 = !DILocalVariable(name: "i", scope: !5182, file: !2, line: 901, type: !80)
!5205 = !DILabel(scope: !5206, name: "search", file: !2, line: 936)
!5206 = distinct !DILexicalBlock(scope: !5207, file: !2, line: 935, column: 39)
!5207 = distinct !DILexicalBlock(scope: !5208, file: !2, line: 935, column: 2)
!5208 = distinct !DILexicalBlock(scope: !5182, file: !2, line: 935, column: 2)
!5209 = !DILocalVariable(name: "xresult", scope: !5210, file: !2, line: 1036, type: !264)
!5210 = distinct !DILexicalBlock(scope: !5211, file: !2, line: 1035, column: 25)
!5211 = distinct !DILexicalBlock(scope: !5182, file: !2, line: 1035, column: 6)
!5212 = !DILocation(line: 888, column: 19, scope: !5182)
!5213 = !DILocation(line: 888, column: 41, scope: !5182)
!5214 = !DILocation(line: 888, column: 64, scope: !5182)
!5215 = !DILocation(line: 889, column: 18, scope: !5182)
!5216 = !DILocation(line: 889, column: 37, scope: !5182)
!5217 = !DILocation(line: 889, column: 60, scope: !5182)
!5218 = !DILocation(line: 890, column: 17, scope: !5182)
!5219 = !DILocation(line: 890, column: 36, scope: !5182)
!5220 = !DILocation(line: 891, column: 27, scope: !5182)
!5221 = !DILocation(line: 891, column: 54, scope: !5182)
!5222 = !DILocation(line: 892, column: 18, scope: !5182)
!5223 = !DILocation(line: 892, column: 44, scope: !5182)
!5224 = !DILocation(line: 894, column: 2, scope: !5182)
!5225 = !DILocation(line: 894, column: 17, scope: !5182)
!5226 = !DILocation(line: 894, column: 41, scope: !5182)
!5227 = !DILocation(line: 895, column: 2, scope: !5182)
!5228 = !DILocation(line: 895, column: 16, scope: !5182)
!5229 = !DILocation(line: 896, column: 2, scope: !5182)
!5230 = !DILocation(line: 896, column: 18, scope: !5182)
!5231 = !DILocation(line: 897, column: 2, scope: !5182)
!5232 = !DILocation(line: 897, column: 17, scope: !5182)
!5233 = !DILocation(line: 898, column: 2, scope: !5182)
!5234 = !DILocation(line: 898, column: 14, scope: !5182)
!5235 = !DILocation(line: 899, column: 2, scope: !5182)
!5236 = !DILocation(line: 899, column: 15, scope: !5182)
!5237 = !DILocation(line: 899, column: 24, scope: !5182)
!5238 = !DILocation(line: 900, column: 2, scope: !5182)
!5239 = !DILocation(line: 900, column: 15, scope: !5182)
!5240 = !DILocation(line: 901, column: 2, scope: !5182)
!5241 = !DILocation(line: 901, column: 15, scope: !5182)
!5242 = !DILocation(line: 903, column: 2, scope: !5182)
!5243 = !DILocation(line: 0, scope: !5182)
!5244 = !DILocation(line: 904, column: 2, scope: !5182)
!5245 = !DILocation(line: 905, column: 2, scope: !5182)
!5246 = !DILocation(line: 909, column: 2, scope: !5182)
!5247 = !DILocation(line: 911, column: 28, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5182, file: !2, line: 911, column: 6)
!5249 = !DILocation(line: 911, column: 35, scope: !5248)
!5250 = !DILocation(line: 911, column: 39, scope: !5248)
!5251 = !DILocation(line: 911, column: 7, scope: !5248)
!5252 = !DILocation(line: 911, column: 6, scope: !5182)
!5253 = !DILocation(line: 912, column: 3, scope: !5248)
!5254 = !DILocation(line: 914, column: 34, scope: !5182)
!5255 = !DILocation(line: 914, column: 38, scope: !5182)
!5256 = !DILocation(line: 914, column: 12, scope: !5182)
!5257 = !DILocation(line: 914, column: 10, scope: !5182)
!5258 = !DILocation(line: 915, column: 33, scope: !5182)
!5259 = !DILocation(line: 915, column: 12, scope: !5182)
!5260 = !DILocation(line: 915, column: 10, scope: !5182)
!5261 = !DILocation(line: 917, column: 10, scope: !5182)
!5262 = !DILocation(line: 917, column: 8, scope: !5182)
!5263 = !DILocation(line: 919, column: 6, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5182, file: !2, line: 919, column: 6)
!5265 = !DILocation(line: 919, column: 15, scope: !5264)
!5266 = !DILocation(line: 919, column: 6, scope: !5182)
!5267 = !DILocation(line: 920, column: 3, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5264, file: !2, line: 919, column: 24)
!5269 = !DILocation(line: 921, column: 12, scope: !5268)
!5270 = !DILocation(line: 922, column: 2, scope: !5268)
!5271 = !DILocation(line: 924, column: 9, scope: !5182)
!5272 = !DILocation(line: 930, column: 7, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5182, file: !2, line: 930, column: 6)
!5274 = !DILocation(line: 930, column: 15, scope: !5273)
!5275 = !DILocation(line: 930, column: 39, scope: !5273)
!5276 = !DILocation(line: 930, column: 6, scope: !5182)
!5277 = !DILocation(line: 931, column: 7, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5273, file: !2, line: 930, column: 45)
!5279 = !DILocation(line: 931, column: 5, scope: !5278)
!5280 = !DILocation(line: 932, column: 3, scope: !5278)
!5281 = !DILocation(line: 935, column: 11, scope: !5208)
!5282 = !DILocation(line: 935, column: 9, scope: !5208)
!5283 = !DILocation(line: 935, column: 7, scope: !5208)
!5284 = !DILocation(line: 935, column: 20, scope: !5207)
!5285 = !DILocation(line: 935, column: 25, scope: !5207)
!5286 = !DILocation(line: 935, column: 22, scope: !5207)
!5287 = !DILocation(line: 935, column: 2, scope: !5208)
!5288 = !DILocation(line: 935, column: 39, scope: !5207)
!5289 = !DILocation(line: 936, column: 2, scope: !5206)
!5290 = !DILocation(line: 940, column: 29, scope: !5206)
!5291 = !DILocation(line: 940, column: 35, scope: !5206)
!5292 = !DILocation(line: 940, column: 45, scope: !5206)
!5293 = !DILocation(line: 940, column: 43, scope: !5206)
!5294 = !DILocation(line: 940, column: 48, scope: !5206)
!5295 = !DILocation(line: 940, column: 51, scope: !5206)
!5296 = !DILocation(line: 940, column: 3, scope: !5206)
!5297 = !DILocation(line: 941, column: 24, scope: !5206)
!5298 = !DILocation(line: 941, column: 28, scope: !5206)
!5299 = !DILocation(line: 941, column: 42, scope: !5206)
!5300 = !DILocation(line: 942, column: 10, scope: !5206)
!5301 = !DILocation(line: 942, column: 19, scope: !5206)
!5302 = !DILocation(line: 941, column: 12, scope: !5206)
!5303 = !DILocation(line: 941, column: 10, scope: !5206)
!5304 = !DILocation(line: 943, column: 7, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5206, file: !2, line: 943, column: 7)
!5306 = !DILocation(line: 943, column: 14, scope: !5305)
!5307 = !DILocation(line: 943, column: 7, scope: !5206)
!5308 = !DILocation(line: 944, column: 11, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5305, file: !2, line: 943, column: 33)
!5310 = !DILocation(line: 945, column: 4, scope: !5309)
!5311 = !DILocation(line: 946, column: 14, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5305, file: !2, line: 946, column: 14)
!5313 = !DILocation(line: 946, column: 21, scope: !5312)
!5314 = !DILocation(line: 946, column: 14, scope: !5305)
!5315 = !DILocation(line: 947, column: 4, scope: !5312)
!5316 = !DILocation(line: 953, column: 7, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5206, file: !2, line: 953, column: 7)
!5318 = !DILocation(line: 953, column: 11, scope: !5317)
!5319 = !DILocation(line: 953, column: 9, scope: !5317)
!5320 = !DILocation(line: 953, column: 7, scope: !5206)
!5321 = !DILocation(line: 954, column: 26, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5317, file: !2, line: 953, column: 20)
!5323 = !DILocation(line: 954, column: 30, scope: !5322)
!5324 = !DILocation(line: 954, column: 36, scope: !5322)
!5325 = !DILocation(line: 955, column: 36, scope: !5322)
!5326 = !DILocation(line: 956, column: 12, scope: !5322)
!5327 = !DILocation(line: 956, column: 22, scope: !5322)
!5328 = !DILocation(line: 954, column: 13, scope: !5322)
!5329 = !DILocation(line: 954, column: 11, scope: !5322)
!5330 = !DILocation(line: 957, column: 8, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5322, file: !2, line: 957, column: 8)
!5332 = !DILocation(line: 957, column: 15, scope: !5331)
!5333 = !DILocation(line: 957, column: 8, scope: !5322)
!5334 = !DILocation(line: 958, column: 12, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5331, file: !2, line: 957, column: 33)
!5336 = !DILocation(line: 959, column: 5, scope: !5335)
!5337 = !DILocation(line: 961, column: 3, scope: !5322)
!5338 = !DILocation(line: 967, column: 7, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5206, file: !2, line: 967, column: 7)
!5340 = !DILocation(line: 967, column: 12, scope: !5339)
!5341 = !DILocation(line: 967, column: 9, scope: !5339)
!5342 = !DILocation(line: 967, column: 20, scope: !5339)
!5343 = !DILocation(line: 967, column: 24, scope: !5339)
!5344 = !DILocation(line: 967, column: 32, scope: !5339)
!5345 = !DILocation(line: 967, column: 53, scope: !5339)
!5346 = !DILocation(line: 967, column: 58, scope: !5339)
!5347 = !DILocation(line: 968, column: 8, scope: !5339)
!5348 = !DILocation(line: 968, column: 16, scope: !5339)
!5349 = !DILocation(line: 968, column: 40, scope: !5339)
!5350 = !DILocation(line: 967, column: 7, scope: !5206)
!5351 = !DILocation(line: 970, column: 26, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5339, file: !2, line: 969, column: 3)
!5353 = !DILocation(line: 970, column: 30, scope: !5352)
!5354 = !DILocation(line: 970, column: 36, scope: !5352)
!5355 = !DILocation(line: 971, column: 33, scope: !5352)
!5356 = !DILocation(line: 972, column: 12, scope: !5352)
!5357 = !DILocation(line: 972, column: 22, scope: !5352)
!5358 = !DILocation(line: 970, column: 13, scope: !5352)
!5359 = !DILocation(line: 970, column: 11, scope: !5352)
!5360 = !DILocation(line: 974, column: 8, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5352, file: !2, line: 974, column: 8)
!5362 = !DILocation(line: 974, column: 15, scope: !5361)
!5363 = !DILocation(line: 974, column: 32, scope: !5361)
!5364 = !DILocation(line: 975, column: 8, scope: !5361)
!5365 = !DILocation(line: 975, column: 13, scope: !5361)
!5366 = !DILocation(line: 975, column: 10, scope: !5361)
!5367 = !DILocation(line: 975, column: 21, scope: !5361)
!5368 = !DILocation(line: 975, column: 24, scope: !5361)
!5369 = !DILocation(line: 975, column: 29, scope: !5361)
!5370 = !DILocation(line: 974, column: 8, scope: !5352)
!5371 = !DILocation(line: 977, column: 12, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5361, file: !2, line: 976, column: 4)
!5373 = !DILocation(line: 978, column: 31, scope: !5372)
!5374 = !DILocation(line: 978, column: 5, scope: !5372)
!5375 = !DILocation(line: 979, column: 9, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5372, file: !2, line: 979, column: 9)
!5377 = !DILocation(line: 979, column: 21, scope: !5376)
!5378 = !DILocation(line: 979, column: 29, scope: !5376)
!5379 = !DILocation(line: 980, column: 35, scope: !5376)
!5380 = !DILocation(line: 980, column: 9, scope: !5376)
!5381 = !DILocation(line: 979, column: 9, scope: !5372)
!5382 = !DILocation(line: 981, column: 32, scope: !5376)
!5383 = !DILocation(line: 981, column: 6, scope: !5376)
!5384 = !DILocation(line: 982, column: 5, scope: !5372)
!5385 = !DILocation(line: 983, column: 15, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5361, file: !2, line: 983, column: 15)
!5387 = !DILocation(line: 983, column: 22, scope: !5386)
!5388 = !DILocation(line: 983, column: 15, scope: !5361)
!5389 = !DILocation(line: 984, column: 12, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5386, file: !2, line: 983, column: 40)
!5391 = !DILocation(line: 985, column: 5, scope: !5390)
!5392 = !DILocation(line: 987, column: 3, scope: !5352)
!5393 = !DILocation(line: 993, column: 7, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5206, file: !2, line: 993, column: 7)
!5395 = !DILocation(line: 993, column: 11, scope: !5394)
!5396 = !DILocation(line: 993, column: 9, scope: !5394)
!5397 = !DILocation(line: 993, column: 7, scope: !5206)
!5398 = !DILocation(line: 994, column: 16, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5394, file: !2, line: 993, column: 20)
!5400 = !DILocation(line: 994, column: 4, scope: !5399)
!5401 = !DILocation(line: 995, column: 9, scope: !5399)
!5402 = !DILocation(line: 996, column: 4, scope: !5399)
!5403 = !DILocation(line: 1002, column: 7, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5206, file: !2, line: 1002, column: 7)
!5405 = !DILocation(line: 1002, column: 12, scope: !5404)
!5406 = !DILocation(line: 1002, column: 7, scope: !5206)
!5407 = !DILocation(line: 1003, column: 11, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5404, file: !2, line: 1002, column: 34)
!5409 = !DILocation(line: 1004, column: 4, scope: !5408)
!5410 = !DILocation(line: 1010, column: 25, scope: !5206)
!5411 = !DILocation(line: 1010, column: 29, scope: !5206)
!5412 = !DILocation(line: 1010, column: 35, scope: !5206)
!5413 = !DILocation(line: 1010, column: 44, scope: !5206)
!5414 = !DILocation(line: 1010, column: 53, scope: !5206)
!5415 = !DILocation(line: 1011, column: 11, scope: !5206)
!5416 = !DILocation(line: 1011, column: 21, scope: !5206)
!5417 = !DILocation(line: 1010, column: 12, scope: !5206)
!5418 = !DILocation(line: 1010, column: 10, scope: !5206)
!5419 = !DILocation(line: 1012, column: 7, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5206, file: !2, line: 1012, column: 7)
!5421 = !DILocation(line: 1012, column: 14, scope: !5420)
!5422 = !DILocation(line: 1012, column: 7, scope: !5206)
!5423 = !DILocation(line: 1013, column: 4, scope: !5420)
!5424 = !DILocation(line: 1018, column: 7, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5206, file: !2, line: 1018, column: 7)
!5426 = !DILocation(line: 1018, column: 12, scope: !5425)
!5427 = !DILocation(line: 1018, column: 7, scope: !5206)
!5428 = !DILocation(line: 1019, column: 26, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5425, file: !2, line: 1018, column: 36)
!5430 = !DILocation(line: 1019, column: 30, scope: !5429)
!5431 = !DILocation(line: 1019, column: 36, scope: !5429)
!5432 = !DILocation(line: 1020, column: 36, scope: !5429)
!5433 = !DILocation(line: 1021, column: 12, scope: !5429)
!5434 = !DILocation(line: 1021, column: 22, scope: !5429)
!5435 = !DILocation(line: 1019, column: 13, scope: !5429)
!5436 = !DILocation(line: 1019, column: 11, scope: !5429)
!5437 = !DILocation(line: 1022, column: 8, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5429, file: !2, line: 1022, column: 8)
!5439 = !DILocation(line: 1022, column: 15, scope: !5438)
!5440 = !DILocation(line: 1022, column: 8, scope: !5429)
!5441 = !DILocation(line: 1023, column: 12, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5438, file: !2, line: 1022, column: 33)
!5443 = !DILocation(line: 1024, column: 5, scope: !5442)
!5444 = !DILocation(line: 1026, column: 3, scope: !5429)
!5445 = !DILocation(line: 1028, column: 10, scope: !5206)
!5446 = !DILocation(line: 1029, column: 3, scope: !5206)
!5447 = !DILocation(line: 935, column: 35, scope: !5207)
!5448 = !DILocation(line: 935, column: 2, scope: !5207)
!5449 = distinct !{!5449, !5287, !5450, !2416}
!5450 = !DILocation(line: 1030, column: 2, scope: !5208)
!5451 = !DILocation(line: 1032, column: 6, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5182, file: !2, line: 1032, column: 6)
!5453 = !DILocation(line: 1032, column: 15, scope: !5452)
!5454 = !DILocation(line: 1032, column: 29, scope: !5452)
!5455 = !DILocation(line: 1032, column: 58, scope: !5452)
!5456 = !DILocation(line: 1032, column: 32, scope: !5452)
!5457 = !DILocation(line: 1032, column: 6, scope: !5182)
!5458 = !DILocation(line: 1033, column: 29, scope: !5452)
!5459 = !DILocation(line: 1033, column: 3, scope: !5452)
!5460 = !DILocation(line: 1035, column: 6, scope: !5211)
!5461 = !DILocation(line: 1035, column: 16, scope: !5211)
!5462 = !DILocation(line: 1035, column: 6, scope: !5182)
!5463 = !DILocation(line: 1036, column: 3, scope: !5210)
!5464 = !DILocation(line: 1036, column: 16, scope: !5210)
!5465 = !DILocation(line: 1038, column: 27, scope: !5210)
!5466 = !DILocation(line: 1038, column: 34, scope: !5210)
!5467 = !DILocation(line: 1038, column: 13, scope: !5210)
!5468 = !DILocation(line: 1038, column: 11, scope: !5210)
!5469 = !DILocation(line: 1039, column: 7, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5210, file: !2, line: 1039, column: 7)
!5471 = !DILocation(line: 1039, column: 15, scope: !5470)
!5472 = !DILocation(line: 1039, column: 7, scope: !5210)
!5473 = !DILocation(line: 1040, column: 8, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5475, file: !2, line: 1040, column: 8)
!5475 = distinct !DILexicalBlock(scope: !5470, file: !2, line: 1039, column: 33)
!5476 = !DILocation(line: 1040, column: 13, scope: !5474)
!5477 = !DILocation(line: 1040, column: 8, scope: !5475)
!5478 = !DILocation(line: 1041, column: 17, scope: !5474)
!5479 = !DILocation(line: 1041, column: 5, scope: !5474)
!5480 = !DILocation(line: 1042, column: 34, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5475, file: !2, line: 1042, column: 8)
!5482 = !DILocation(line: 1042, column: 8, scope: !5481)
!5483 = !DILocation(line: 1042, column: 8, scope: !5475)
!5484 = !DILocation(line: 1043, column: 31, scope: !5481)
!5485 = !DILocation(line: 1043, column: 5, scope: !5481)
!5486 = !DILocation(line: 1044, column: 4, scope: !5475)
!5487 = !DILocation(line: 1046, column: 2, scope: !5211)
!5488 = !DILocation(line: 1046, column: 2, scope: !5210)
!5489 = !DILocation(line: 1048, column: 6, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5182, file: !2, line: 1048, column: 6)
!5491 = !DILocation(line: 1048, column: 12, scope: !5490)
!5492 = !DILocation(line: 1048, column: 6, scope: !5182)
!5493 = !DILocation(line: 1049, column: 12, scope: !5490)
!5494 = !DILocation(line: 1049, column: 4, scope: !5490)
!5495 = !DILocation(line: 1049, column: 10, scope: !5490)
!5496 = !DILocation(line: 1049, column: 3, scope: !5490)
!5497 = !DILocation(line: 1050, column: 11, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5490, file: !2, line: 1050, column: 11)
!5499 = !DILocation(line: 1050, column: 16, scope: !5498)
!5500 = !DILocation(line: 1050, column: 11, scope: !5490)
!5501 = !DILocation(line: 1051, column: 14, scope: !5498)
!5502 = !DILocation(line: 1051, column: 3, scope: !5498)
!5503 = !DILocation(line: 1053, column: 10, scope: !5182)
!5504 = !DILocation(line: 1053, column: 2, scope: !5182)
!5505 = !DILocation(line: 1054, column: 1, scope: !5182)
!5506 = !DISubprogram(name: "isc_result_totext", scope: !5507, file: !5507, line: 97, type: !5508, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5507 = !DIFile(filename: "isc/include/isc/result.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib", checksumkind: CSK_MD5, checksum: "b66e2fce4d36f26ced5288e76c5bf05c")
!5508 = !DISubroutineType(types: !5509)
!5509 = !{!328, !264}
!5510 = distinct !DISubprogram(name: "getnodedata", scope: !2, file: !2, line: 531, type: !5511, scopeLine: 534, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !5513)
!5511 = !DISubroutineType(types: !5512)
!5512 = !{!264, !254, !277, !353, !80, !1094, !1106, !905}
!5513 = !{!5514, !5515, !5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527, !5528, !5529, !5530, !5533, !5534, !5536, !5537, !5540, !5542, !5543, !5546, !5548, !5551, !5552, !5553, !5557, !5558, !5559, !5562, !5566, !5570, !5572, !5573, !5576, !5578, !5582}
!5514 = !DILocalVariable(name: "db", arg: 1, scope: !5510, file: !2, line: 531, type: !254)
!5515 = !DILocalVariable(name: "name", arg: 2, scope: !5510, file: !2, line: 531, type: !277)
!5516 = !DILocalVariable(name: "create", arg: 3, scope: !5510, file: !2, line: 531, type: !353)
!5517 = !DILocalVariable(name: "options", arg: 4, scope: !5510, file: !2, line: 532, type: !80)
!5518 = !DILocalVariable(name: "methods", arg: 5, scope: !5510, file: !2, line: 532, type: !1094)
!5519 = !DILocalVariable(name: "clientinfo", arg: 6, scope: !5510, file: !2, line: 533, type: !1106)
!5520 = !DILocalVariable(name: "nodep", arg: 7, scope: !5510, file: !2, line: 533, type: !905)
!5521 = !DILocalVariable(name: "sdlz", scope: !5510, file: !2, line: 535, type: !233)
!5522 = !DILocalVariable(name: "node", scope: !5510, file: !2, line: 536, type: !1344)
!5523 = !DILocalVariable(name: "result", scope: !5510, file: !2, line: 537, type: !264)
!5524 = !DILocalVariable(name: "b", scope: !5510, file: !2, line: 538, type: !293)
!5525 = !DILocalVariable(name: "namestr", scope: !5510, file: !2, line: 539, type: !3690)
!5526 = !DILocalVariable(name: "b2", scope: !5510, file: !2, line: 540, type: !293)
!5527 = !DILocalVariable(name: "zonestr", scope: !5510, file: !2, line: 541, type: !3690)
!5528 = !DILocalVariable(name: "isorigin", scope: !5510, file: !2, line: 542, type: !353)
!5529 = !DILocalVariable(name: "authority", scope: !5510, file: !2, line: 543, type: !1326)
!5530 = !DILocalVariable(name: "relname", scope: !5531, file: !2, line: 554, type: !279)
!5531 = distinct !DILexicalBlock(scope: !5532, file: !2, line: 553, column: 63)
!5532 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 553, column: 6)
!5533 = !DILocalVariable(name: "labels", scope: !5531, file: !2, line: 555, type: !80)
!5534 = !DILocalVariable(name: "_cp", scope: !5535, file: !2, line: 569, type: !285)
!5535 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 569, column: 2)
!5536 = !DILocalVariable(name: "_val2", scope: !5535, file: !2, line: 569, type: !707)
!5537 = !DILocalVariable(name: "_tmp", scope: !5538, file: !2, line: 569, type: !292)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !2, line: 569, column: 2)
!5539 = distinct !DILexicalBlock(scope: !5535, file: !2, line: 569, column: 2)
!5540 = !DILocalVariable(name: "_cp", scope: !5541, file: !2, line: 575, type: !285)
!5541 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 575, column: 2)
!5542 = !DILocalVariable(name: "_val2", scope: !5541, file: !2, line: 575, type: !707)
!5543 = !DILocalVariable(name: "_tmp", scope: !5544, file: !2, line: 575, type: !292)
!5544 = distinct !DILexicalBlock(scope: !5545, file: !2, line: 575, column: 2)
!5545 = distinct !DILexicalBlock(scope: !5541, file: !2, line: 575, column: 2)
!5546 = !DILocalVariable(name: "flags", scope: !5547, file: !2, line: 587, type: !80)
!5547 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 587, column: 2)
!5548 = !DILocalVariable(name: "i", scope: !5549, file: !2, line: 606, type: !80)
!5549 = distinct !DILexicalBlock(scope: !5550, file: !2, line: 605, column: 2)
!5550 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 603, column: 6)
!5551 = !DILocalVariable(name: "dlabels", scope: !5549, file: !2, line: 606, type: !80)
!5552 = !DILocalVariable(name: "nlabels", scope: !5549, file: !2, line: 606, type: !80)
!5553 = !DILocalVariable(name: "wildstr", scope: !5554, file: !2, line: 611, type: !3690)
!5554 = distinct !DILexicalBlock(scope: !5555, file: !2, line: 610, column: 33)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !2, line: 610, column: 3)
!5556 = distinct !DILexicalBlock(scope: !5549, file: !2, line: 610, column: 3)
!5557 = !DILocalVariable(name: "fixed", scope: !5554, file: !2, line: 612, type: !1645)
!5558 = !DILocalVariable(name: "wild", scope: !5554, file: !2, line: 613, type: !277)
!5559 = !DILocalVariable(name: "fname", scope: !5560, file: !2, line: 619, type: !358)
!5560 = distinct !DILexicalBlock(scope: !5561, file: !2, line: 618, column: 11)
!5561 = distinct !DILexicalBlock(scope: !5554, file: !2, line: 616, column: 8)
!5562 = !DILocalVariable(name: "flags", scope: !5563, file: !2, line: 628, type: !80)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !2, line: 628, column: 6)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !2, line: 627, column: 34)
!5565 = distinct !DILexicalBlock(scope: !5560, file: !2, line: 627, column: 9)
!5566 = !DILocalVariable(name: "flags", scope: !5567, file: !2, line: 637, type: !80)
!5567 = distinct !DILexicalBlock(scope: !5568, file: !2, line: 637, column: 5)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !2, line: 636, column: 33)
!5569 = distinct !DILexicalBlock(scope: !5554, file: !2, line: 636, column: 8)
!5570 = !DILocalVariable(name: "_cp", scope: !5571, file: !2, line: 640, type: !285)
!5571 = distinct !DILexicalBlock(scope: !5554, file: !2, line: 640, column: 4)
!5572 = !DILocalVariable(name: "_val2", scope: !5571, file: !2, line: 640, type: !707)
!5573 = !DILocalVariable(name: "_tmp", scope: !5574, file: !2, line: 640, type: !292)
!5574 = distinct !DILexicalBlock(scope: !5575, file: !2, line: 640, column: 4)
!5575 = distinct !DILexicalBlock(scope: !5571, file: !2, line: 640, column: 4)
!5576 = !DILocalVariable(name: "flags", scope: !5577, file: !2, line: 651, type: !80)
!5577 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 651, column: 2)
!5578 = !DILocalVariable(name: "flags", scope: !5579, file: !2, line: 662, type: !80)
!5579 = distinct !DILexicalBlock(scope: !5580, file: !2, line: 662, column: 3)
!5580 = distinct !DILexicalBlock(scope: !5581, file: !2, line: 661, column: 60)
!5581 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 661, column: 6)
!5582 = !DILocalVariable(name: "flags", scope: !5583, file: !2, line: 666, type: !80)
!5583 = distinct !DILexicalBlock(scope: !5580, file: !2, line: 666, column: 3)
!5584 = !DILocation(line: 531, column: 23, scope: !5510)
!5585 = !DILocation(line: 531, column: 45, scope: !5510)
!5586 = !DILocation(line: 531, column: 56, scope: !5510)
!5587 = !DILocation(line: 532, column: 19, scope: !5510)
!5588 = !DILocation(line: 532, column: 53, scope: !5510)
!5589 = !DILocation(line: 533, column: 24, scope: !5510)
!5590 = !DILocation(line: 533, column: 51, scope: !5510)
!5591 = !DILocation(line: 535, column: 2, scope: !5510)
!5592 = !DILocation(line: 535, column: 17, scope: !5510)
!5593 = !DILocation(line: 535, column: 41, scope: !5510)
!5594 = !DILocation(line: 536, column: 2, scope: !5510)
!5595 = !DILocation(line: 536, column: 18, scope: !5510)
!5596 = !DILocation(line: 537, column: 2, scope: !5510)
!5597 = !DILocation(line: 537, column: 15, scope: !5510)
!5598 = !DILocation(line: 538, column: 2, scope: !5510)
!5599 = !DILocation(line: 538, column: 15, scope: !5510)
!5600 = !DILocation(line: 539, column: 2, scope: !5510)
!5601 = !DILocation(line: 539, column: 7, scope: !5510)
!5602 = !DILocation(line: 540, column: 2, scope: !5510)
!5603 = !DILocation(line: 540, column: 15, scope: !5510)
!5604 = !DILocation(line: 541, column: 2, scope: !5510)
!5605 = !DILocation(line: 541, column: 7, scope: !5510)
!5606 = !DILocation(line: 542, column: 2, scope: !5510)
!5607 = !DILocation(line: 542, column: 7, scope: !5510)
!5608 = !DILocation(line: 543, column: 2, scope: !5510)
!5609 = !DILocation(line: 543, column: 26, scope: !5510)
!5610 = !DILocation(line: 545, column: 2, scope: !5510)
!5611 = !DILocation(line: 0, scope: !5510)
!5612 = !DILocation(line: 546, column: 2, scope: !5510)
!5613 = !DILocation(line: 548, column: 6, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 548, column: 6)
!5615 = !DILocation(line: 548, column: 12, scope: !5614)
!5616 = !DILocation(line: 548, column: 20, scope: !5614)
!5617 = !DILocation(line: 548, column: 29, scope: !5614)
!5618 = !DILocation(line: 548, column: 40, scope: !5614)
!5619 = !DILocation(line: 548, column: 6, scope: !5510)
!5620 = !DILocation(line: 549, column: 3, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5614, file: !2, line: 548, column: 49)
!5622 = !DILocation(line: 550, column: 2, scope: !5621)
!5623 = !DILocation(line: 552, column: 2, scope: !5510)
!5624 = !DILocation(line: 552, column: 2, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 552, column: 2)
!5626 = !DILocation(line: 552, column: 2, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5625, file: !2, line: 552, column: 2)
!5628 = !DILocation(line: 553, column: 7, scope: !5532)
!5629 = !DILocation(line: 553, column: 13, scope: !5532)
!5630 = !DILocation(line: 553, column: 21, scope: !5532)
!5631 = !DILocation(line: 553, column: 27, scope: !5532)
!5632 = !DILocation(line: 553, column: 57, scope: !5532)
!5633 = !DILocation(line: 553, column: 6, scope: !5510)
!5634 = !DILocation(line: 554, column: 3, scope: !5531)
!5635 = !DILocation(line: 554, column: 14, scope: !5531)
!5636 = !DILocation(line: 555, column: 3, scope: !5531)
!5637 = !DILocation(line: 555, column: 16, scope: !5531)
!5638 = !DILocation(line: 557, column: 33, scope: !5531)
!5639 = !DILocation(line: 557, column: 12, scope: !5531)
!5640 = !DILocation(line: 558, column: 27, scope: !5531)
!5641 = !DILocation(line: 558, column: 33, scope: !5531)
!5642 = !DILocation(line: 558, column: 40, scope: !5531)
!5643 = !DILocation(line: 558, column: 5, scope: !5531)
!5644 = !DILocation(line: 557, column: 39, scope: !5531)
!5645 = !DILocation(line: 557, column: 10, scope: !5531)
!5646 = !DILocation(line: 559, column: 3, scope: !5531)
!5647 = !DILocation(line: 560, column: 29, scope: !5531)
!5648 = !DILocation(line: 560, column: 38, scope: !5531)
!5649 = !DILocation(line: 560, column: 3, scope: !5531)
!5650 = !DILocation(line: 561, column: 12, scope: !5531)
!5651 = !DILocation(line: 561, column: 10, scope: !5531)
!5652 = !DILocation(line: 562, column: 7, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5531, file: !2, line: 562, column: 7)
!5654 = !DILocation(line: 562, column: 14, scope: !5653)
!5655 = !DILocation(line: 562, column: 7, scope: !5531)
!5656 = !DILocation(line: 563, column: 12, scope: !5653)
!5657 = !DILocation(line: 563, column: 4, scope: !5653)
!5658 = !DILocation(line: 564, column: 2, scope: !5532)
!5659 = !DILocation(line: 564, column: 2, scope: !5531)
!5660 = !DILocation(line: 565, column: 28, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5532, file: !2, line: 564, column: 9)
!5662 = !DILocation(line: 565, column: 12, scope: !5661)
!5663 = !DILocation(line: 565, column: 10, scope: !5661)
!5664 = !DILocation(line: 566, column: 7, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5661, file: !2, line: 566, column: 7)
!5666 = !DILocation(line: 566, column: 14, scope: !5665)
!5667 = !DILocation(line: 566, column: 7, scope: !5661)
!5668 = !DILocation(line: 567, column: 12, scope: !5665)
!5669 = !DILocation(line: 567, column: 4, scope: !5665)
!5670 = !DILocation(line: 569, column: 2, scope: !5510)
!5671 = !DILocation(line: 569, column: 2, scope: !5535)
!5672 = !DILocation(line: 569, column: 2, scope: !5539)
!5673 = !DILocation(line: 569, column: 2, scope: !5538)
!5674 = !DILocation(line: 571, column: 2, scope: !5510)
!5675 = !DILocation(line: 571, column: 2, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 571, column: 2)
!5677 = !DILocation(line: 571, column: 2, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5676, file: !2, line: 571, column: 2)
!5679 = !DILocation(line: 572, column: 28, scope: !5510)
!5680 = !DILocation(line: 572, column: 34, scope: !5510)
!5681 = !DILocation(line: 572, column: 41, scope: !5510)
!5682 = !DILocation(line: 572, column: 11, scope: !5510)
!5683 = !DILocation(line: 572, column: 9, scope: !5510)
!5684 = !DILocation(line: 573, column: 6, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 573, column: 6)
!5686 = !DILocation(line: 573, column: 13, scope: !5685)
!5687 = !DILocation(line: 573, column: 6, scope: !5510)
!5688 = !DILocation(line: 574, column: 11, scope: !5685)
!5689 = !DILocation(line: 574, column: 3, scope: !5685)
!5690 = !DILocation(line: 575, column: 2, scope: !5510)
!5691 = !DILocation(line: 575, column: 2, scope: !5541)
!5692 = !DILocation(line: 575, column: 2, scope: !5545)
!5693 = !DILocation(line: 575, column: 2, scope: !5544)
!5694 = !DILocation(line: 577, column: 22, scope: !5510)
!5695 = !DILocation(line: 577, column: 11, scope: !5510)
!5696 = !DILocation(line: 577, column: 9, scope: !5510)
!5697 = !DILocation(line: 578, column: 6, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 578, column: 6)
!5699 = !DILocation(line: 578, column: 13, scope: !5698)
!5700 = !DILocation(line: 578, column: 6, scope: !5510)
!5701 = !DILocation(line: 579, column: 11, scope: !5698)
!5702 = !DILocation(line: 579, column: 3, scope: !5698)
!5703 = !DILocation(line: 581, column: 28, scope: !5510)
!5704 = !DILocation(line: 581, column: 35, scope: !5510)
!5705 = !DILocation(line: 581, column: 41, scope: !5510)
!5706 = !DILocation(line: 581, column: 48, scope: !5510)
!5707 = !DILocation(line: 581, column: 13, scope: !5510)
!5708 = !DILocation(line: 581, column: 11, scope: !5510)
!5709 = !DILocation(line: 584, column: 19, scope: !5510)
!5710 = !DILocation(line: 584, column: 2, scope: !5510)
!5711 = !DILocation(line: 585, column: 19, scope: !5510)
!5712 = !DILocation(line: 585, column: 2, scope: !5510)
!5713 = !DILocation(line: 587, column: 2, scope: !5510)
!5714 = !DILocation(line: 587, column: 2, scope: !5547)
!5715 = !DILocation(line: 587, column: 2, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5547, file: !2, line: 587, column: 2)
!5717 = !DILocation(line: 587, column: 2, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5716, file: !2, line: 587, column: 2)
!5719 = !DILocation(line: 590, column: 11, scope: !5510)
!5720 = !DILocation(line: 590, column: 17, scope: !5510)
!5721 = !DILocation(line: 590, column: 25, scope: !5510)
!5722 = !DILocation(line: 590, column: 34, scope: !5510)
!5723 = !DILocation(line: 590, column: 41, scope: !5510)
!5724 = !DILocation(line: 590, column: 50, scope: !5510)
!5725 = !DILocation(line: 591, column: 13, scope: !5510)
!5726 = !DILocation(line: 591, column: 19, scope: !5510)
!5727 = !DILocation(line: 591, column: 27, scope: !5510)
!5728 = !DILocation(line: 592, column: 13, scope: !5510)
!5729 = !DILocation(line: 592, column: 19, scope: !5510)
!5730 = !DILocation(line: 592, column: 27, scope: !5510)
!5731 = !DILocation(line: 593, column: 13, scope: !5510)
!5732 = !DILocation(line: 593, column: 22, scope: !5510)
!5733 = !DILocation(line: 590, column: 9, scope: !5510)
!5734 = !DILocation(line: 603, column: 6, scope: !5550)
!5735 = !DILocation(line: 603, column: 13, scope: !5550)
!5736 = !DILocation(line: 603, column: 31, scope: !5550)
!5737 = !DILocation(line: 603, column: 35, scope: !5550)
!5738 = !DILocation(line: 603, column: 42, scope: !5550)
!5739 = !DILocation(line: 604, column: 7, scope: !5550)
!5740 = !DILocation(line: 604, column: 15, scope: !5550)
!5741 = !DILocation(line: 604, column: 36, scope: !5550)
!5742 = !DILocation(line: 603, column: 6, scope: !5510)
!5743 = !DILocation(line: 606, column: 3, scope: !5549)
!5744 = !DILocation(line: 606, column: 16, scope: !5549)
!5745 = !DILocation(line: 606, column: 19, scope: !5549)
!5746 = !DILocation(line: 606, column: 28, scope: !5549)
!5747 = !DILocation(line: 608, column: 34, scope: !5549)
!5748 = !DILocation(line: 608, column: 13, scope: !5549)
!5749 = !DILocation(line: 608, column: 11, scope: !5549)
!5750 = !DILocation(line: 609, column: 13, scope: !5549)
!5751 = !DILocation(line: 609, column: 45, scope: !5549)
!5752 = !DILocation(line: 609, column: 51, scope: !5549)
!5753 = !DILocation(line: 609, column: 58, scope: !5549)
!5754 = !DILocation(line: 609, column: 23, scope: !5549)
!5755 = !DILocation(line: 609, column: 21, scope: !5549)
!5756 = !DILocation(line: 609, column: 11, scope: !5549)
!5757 = !DILocation(line: 610, column: 10, scope: !5556)
!5758 = !DILocation(line: 610, column: 8, scope: !5556)
!5759 = !DILocation(line: 610, column: 15, scope: !5555)
!5760 = !DILocation(line: 610, column: 19, scope: !5555)
!5761 = !DILocation(line: 610, column: 17, scope: !5555)
!5762 = !DILocation(line: 610, column: 3, scope: !5556)
!5763 = !DILocation(line: 611, column: 4, scope: !5554)
!5764 = !DILocation(line: 611, column: 9, scope: !5554)
!5765 = !DILocation(line: 612, column: 4, scope: !5554)
!5766 = !DILocation(line: 612, column: 20, scope: !5554)
!5767 = !DILocation(line: 613, column: 4, scope: !5554)
!5768 = !DILocation(line: 613, column: 22, scope: !5554)
!5769 = !DILocation(line: 615, column: 4, scope: !5554)
!5770 = !DILocation(line: 616, column: 8, scope: !5561)
!5771 = !DILocation(line: 616, column: 13, scope: !5561)
!5772 = !DILocation(line: 616, column: 21, scope: !5561)
!5773 = !DILocation(line: 616, column: 10, scope: !5561)
!5774 = !DILocation(line: 616, column: 8, scope: !5554)
!5775 = !DILocation(line: 617, column: 12, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5561, file: !2, line: 616, column: 26)
!5777 = !DILocation(line: 617, column: 10, scope: !5776)
!5778 = !DILocation(line: 618, column: 4, scope: !5776)
!5779 = !DILocation(line: 619, column: 5, scope: !5560)
!5780 = !DILocation(line: 619, column: 17, scope: !5560)
!5781 = !DILocation(line: 620, column: 13, scope: !5560)
!5782 = !DILocation(line: 620, column: 11, scope: !5560)
!5783 = !DILocation(line: 621, column: 31, scope: !5560)
!5784 = !DILocation(line: 621, column: 37, scope: !5560)
!5785 = !DILocation(line: 621, column: 39, scope: !5560)
!5786 = !DILocation(line: 622, column: 10, scope: !5560)
!5787 = !DILocation(line: 622, column: 20, scope: !5560)
!5788 = !DILocation(line: 622, column: 18, scope: !5560)
!5789 = !DILocation(line: 622, column: 22, scope: !5560)
!5790 = !DILocation(line: 623, column: 10, scope: !5560)
!5791 = !DILocation(line: 621, column: 5, scope: !5560)
!5792 = !DILocation(line: 624, column: 35, scope: !5560)
!5793 = !DILocation(line: 625, column: 14, scope: !5560)
!5794 = !DILocation(line: 625, column: 21, scope: !5560)
!5795 = !DILocation(line: 624, column: 14, scope: !5560)
!5796 = !DILocation(line: 624, column: 12, scope: !5560)
!5797 = !DILocation(line: 627, column: 9, scope: !5565)
!5798 = !DILocation(line: 627, column: 16, scope: !5565)
!5799 = !DILocation(line: 627, column: 9, scope: !5560)
!5800 = !DILocation(line: 628, column: 6, scope: !5564)
!5801 = !DILocation(line: 628, column: 6, scope: !5563)
!5802 = !DILocation(line: 628, column: 6, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5563, file: !2, line: 628, column: 6)
!5804 = !DILocation(line: 628, column: 6, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5803, file: !2, line: 628, column: 6)
!5806 = !DILocation(line: 629, column: 14, scope: !5564)
!5807 = !DILocation(line: 629, column: 6, scope: !5564)
!5808 = !DILocation(line: 631, column: 12, scope: !5560)
!5809 = !DILocation(line: 631, column: 10, scope: !5560)
!5810 = !DILocation(line: 632, column: 4, scope: !5561)
!5811 = !DILocation(line: 634, column: 4, scope: !5554)
!5812 = !DILocation(line: 634, column: 4, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5554, file: !2, line: 634, column: 4)
!5814 = !DILocation(line: 634, column: 4, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5813, file: !2, line: 634, column: 4)
!5816 = !DILocation(line: 635, column: 29, scope: !5554)
!5817 = !DILocation(line: 635, column: 13, scope: !5554)
!5818 = !DILocation(line: 635, column: 11, scope: !5554)
!5819 = !DILocation(line: 636, column: 8, scope: !5569)
!5820 = !DILocation(line: 636, column: 15, scope: !5569)
!5821 = !DILocation(line: 636, column: 8, scope: !5554)
!5822 = !DILocation(line: 637, column: 5, scope: !5568)
!5823 = !DILocation(line: 637, column: 5, scope: !5567)
!5824 = !DILocation(line: 637, column: 5, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5567, file: !2, line: 637, column: 5)
!5826 = !DILocation(line: 637, column: 5, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5825, file: !2, line: 637, column: 5)
!5828 = !DILocation(line: 638, column: 13, scope: !5568)
!5829 = !DILocation(line: 638, column: 5, scope: !5568)
!5830 = !DILocation(line: 640, column: 4, scope: !5554)
!5831 = !DILocation(line: 640, column: 4, scope: !5571)
!5832 = !DILocation(line: 640, column: 4, scope: !5575)
!5833 = !DILocation(line: 640, column: 4, scope: !5574)
!5834 = !DILocation(line: 642, column: 13, scope: !5554)
!5835 = !DILocation(line: 642, column: 19, scope: !5554)
!5836 = !DILocation(line: 642, column: 27, scope: !5554)
!5837 = !DILocation(line: 642, column: 36, scope: !5554)
!5838 = !DILocation(line: 642, column: 43, scope: !5554)
!5839 = !DILocation(line: 642, column: 52, scope: !5554)
!5840 = !DILocation(line: 643, column: 14, scope: !5554)
!5841 = !DILocation(line: 643, column: 20, scope: !5554)
!5842 = !DILocation(line: 643, column: 28, scope: !5554)
!5843 = !DILocation(line: 644, column: 14, scope: !5554)
!5844 = !DILocation(line: 644, column: 20, scope: !5554)
!5845 = !DILocation(line: 644, column: 28, scope: !5554)
!5846 = !DILocation(line: 645, column: 14, scope: !5554)
!5847 = !DILocation(line: 645, column: 23, scope: !5554)
!5848 = !DILocation(line: 642, column: 11, scope: !5554)
!5849 = !DILocation(line: 646, column: 8, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5554, file: !2, line: 646, column: 8)
!5851 = !DILocation(line: 646, column: 15, scope: !5850)
!5852 = !DILocation(line: 646, column: 8, scope: !5554)
!5853 = !DILocation(line: 647, column: 5, scope: !5850)
!5854 = !DILocation(line: 648, column: 3, scope: !5555)
!5855 = !DILocation(line: 648, column: 3, scope: !5554)
!5856 = !DILocation(line: 610, column: 29, scope: !5555)
!5857 = !DILocation(line: 610, column: 3, scope: !5555)
!5858 = distinct !{!5858, !5762, !5859, !2416}
!5859 = !DILocation(line: 648, column: 3, scope: !5556)
!5860 = !DILocation(line: 649, column: 2, scope: !5550)
!5861 = !DILocation(line: 649, column: 2, scope: !5549)
!5862 = !DILocation(line: 651, column: 2, scope: !5510)
!5863 = !DILocation(line: 651, column: 2, scope: !5577)
!5864 = !DILocation(line: 651, column: 2, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5577, file: !2, line: 651, column: 2)
!5866 = !DILocation(line: 651, column: 2, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5865, file: !2, line: 651, column: 2)
!5868 = !DILocation(line: 653, column: 6, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 653, column: 6)
!5870 = !DILocation(line: 653, column: 13, scope: !5869)
!5871 = !DILocation(line: 653, column: 31, scope: !5869)
!5872 = !DILocation(line: 653, column: 35, scope: !5869)
!5873 = !DILocation(line: 653, column: 44, scope: !5869)
!5874 = !DILocation(line: 653, column: 47, scope: !5869)
!5875 = !DILocation(line: 653, column: 6, scope: !5510)
!5876 = !DILocation(line: 654, column: 10, scope: !5869)
!5877 = !DILocation(line: 654, column: 3, scope: !5869)
!5878 = !DILocation(line: 656, column: 6, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 656, column: 6)
!5880 = !DILocation(line: 656, column: 13, scope: !5879)
!5881 = !DILocation(line: 656, column: 6, scope: !5510)
!5882 = !DILocation(line: 657, column: 15, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5879, file: !2, line: 656, column: 31)
!5884 = !DILocation(line: 657, column: 3, scope: !5883)
!5885 = !DILocation(line: 658, column: 11, scope: !5883)
!5886 = !DILocation(line: 658, column: 3, scope: !5883)
!5887 = !DILocation(line: 661, column: 6, scope: !5581)
!5888 = !DILocation(line: 661, column: 15, scope: !5581)
!5889 = !DILocation(line: 661, column: 18, scope: !5581)
!5890 = !DILocation(line: 661, column: 24, scope: !5581)
!5891 = !DILocation(line: 661, column: 32, scope: !5581)
!5892 = !DILocation(line: 661, column: 41, scope: !5581)
!5893 = !DILocation(line: 661, column: 51, scope: !5581)
!5894 = !DILocation(line: 661, column: 6, scope: !5510)
!5895 = !DILocation(line: 662, column: 3, scope: !5580)
!5896 = !DILocation(line: 662, column: 3, scope: !5579)
!5897 = !DILocation(line: 662, column: 3, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5579, file: !2, line: 662, column: 3)
!5899 = !DILocation(line: 662, column: 3, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5898, file: !2, line: 662, column: 3)
!5901 = !DILocation(line: 663, column: 15, scope: !5580)
!5902 = !DILocation(line: 663, column: 21, scope: !5580)
!5903 = !DILocation(line: 663, column: 29, scope: !5580)
!5904 = !DILocation(line: 663, column: 38, scope: !5580)
!5905 = !DILocation(line: 663, column: 13, scope: !5580)
!5906 = !DILocation(line: 664, column: 14, scope: !5580)
!5907 = !DILocation(line: 664, column: 25, scope: !5580)
!5908 = !DILocation(line: 664, column: 34, scope: !5580)
!5909 = !DILocation(line: 664, column: 40, scope: !5580)
!5910 = !DILocation(line: 664, column: 48, scope: !5580)
!5911 = !DILocation(line: 665, column: 11, scope: !5580)
!5912 = !DILocation(line: 665, column: 17, scope: !5580)
!5913 = !DILocation(line: 665, column: 25, scope: !5580)
!5914 = !DILocation(line: 664, column: 12, scope: !5580)
!5915 = !DILocation(line: 664, column: 10, scope: !5580)
!5916 = !DILocation(line: 666, column: 3, scope: !5580)
!5917 = !DILocation(line: 666, column: 3, scope: !5583)
!5918 = !DILocation(line: 666, column: 3, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5583, file: !2, line: 666, column: 3)
!5920 = !DILocation(line: 666, column: 3, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5919, file: !2, line: 666, column: 3)
!5922 = !DILocation(line: 667, column: 7, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5580, file: !2, line: 667, column: 7)
!5924 = !DILocation(line: 667, column: 14, scope: !5923)
!5925 = !DILocation(line: 667, column: 31, scope: !5923)
!5926 = !DILocation(line: 668, column: 7, scope: !5923)
!5927 = !DILocation(line: 668, column: 14, scope: !5923)
!5928 = !DILocation(line: 667, column: 7, scope: !5580)
!5929 = !DILocation(line: 670, column: 16, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5923, file: !2, line: 669, column: 3)
!5931 = !DILocation(line: 670, column: 4, scope: !5930)
!5932 = !DILocation(line: 671, column: 12, scope: !5930)
!5933 = !DILocation(line: 671, column: 4, scope: !5930)
!5934 = !DILocation(line: 673, column: 2, scope: !5580)
!5935 = !DILocation(line: 675, column: 6, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5510, file: !2, line: 675, column: 6)
!5937 = !DILocation(line: 675, column: 12, scope: !5936)
!5938 = !DILocation(line: 675, column: 17, scope: !5936)
!5939 = !DILocation(line: 675, column: 6, scope: !5510)
!5940 = !DILocation(line: 676, column: 16, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5936, file: !2, line: 675, column: 26)
!5942 = !DILocation(line: 676, column: 3, scope: !5941)
!5943 = !DILocation(line: 676, column: 9, scope: !5941)
!5944 = !DILocation(line: 676, column: 14, scope: !5941)
!5945 = !DILocation(line: 678, column: 7, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5941, file: !2, line: 678, column: 7)
!5947 = !DILocation(line: 678, column: 13, scope: !5946)
!5948 = !DILocation(line: 678, column: 18, scope: !5946)
!5949 = !DILocation(line: 678, column: 7, scope: !5941)
!5950 = !DILocation(line: 679, column: 16, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5946, file: !2, line: 678, column: 27)
!5952 = !DILocation(line: 679, column: 4, scope: !5951)
!5953 = !DILocation(line: 680, column: 4, scope: !5951)
!5954 = !DILocation(line: 682, column: 17, scope: !5941)
!5955 = !DILocation(line: 682, column: 23, scope: !5941)
!5956 = !DILocation(line: 682, column: 3, scope: !5941)
!5957 = !DILocation(line: 683, column: 25, scope: !5941)
!5958 = !DILocation(line: 683, column: 31, scope: !5941)
!5959 = !DILocation(line: 683, column: 37, scope: !5941)
!5960 = !DILocation(line: 683, column: 44, scope: !5941)
!5961 = !DILocation(line: 683, column: 50, scope: !5941)
!5962 = !DILocation(line: 683, column: 56, scope: !5941)
!5963 = !DILocation(line: 683, column: 12, scope: !5941)
!5964 = !DILocation(line: 683, column: 10, scope: !5941)
!5965 = !DILocation(line: 684, column: 7, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5941, file: !2, line: 684, column: 7)
!5967 = !DILocation(line: 684, column: 14, scope: !5966)
!5968 = !DILocation(line: 684, column: 7, scope: !5941)
!5969 = !DILocation(line: 685, column: 4, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5966, file: !2, line: 684, column: 32)
!5971 = !DILocation(line: 685, column: 4, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5970, file: !2, line: 685, column: 4)
!5973 = !DILocation(line: 687, column: 16, scope: !5970)
!5974 = !DILocation(line: 687, column: 4, scope: !5970)
!5975 = !DILocation(line: 688, column: 12, scope: !5970)
!5976 = !DILocation(line: 688, column: 4, scope: !5970)
!5977 = !DILocation(line: 690, column: 2, scope: !5941)
!5978 = !DILocation(line: 692, column: 11, scope: !5510)
!5979 = !DILocation(line: 692, column: 3, scope: !5510)
!5980 = !DILocation(line: 692, column: 9, scope: !5510)
!5981 = !DILocation(line: 693, column: 2, scope: !5510)
!5982 = !DILocation(line: 694, column: 1, scope: !5510)
!5983 = !DISubprogram(name: "dns_fixedname_init", scope: !1647, file: !1647, line: 71, type: !5984, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5984 = !DISubroutineType(types: !5985)
!5985 = !{null, !2872}
!5986 = !DISubprogram(name: "dns_fixedname_name", scope: !1647, file: !1647, line: 77, type: !2870, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5987 = !DISubprogram(name: "dns_name_concatenate", scope: !281, file: !281, line: 956, type: !5988, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5988 = !DISubroutineType(types: !5989)
!5989 = !{!264, !277, !277, !358, !292}
!5990 = !DISubprogram(name: "dns_db_attach", scope: !241, file: !241, line: 334, type: !252, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5991 = distinct !DISubprogram(name: "dbiterator_destroy", scope: !2, file: !2, line: 1346, type: !950, scopeLine: 1346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !5992)
!5992 = !{!5993, !5994, !5995, !5996}
!5993 = !DILocalVariable(name: "iteratorp", arg: 1, scope: !5991, file: !2, line: 1346, type: !936)
!5994 = !DILocalVariable(name: "sdlziter", scope: !5991, file: !2, line: 1347, type: !2072)
!5995 = !DILocalVariable(name: "sdlz", scope: !5991, file: !2, line: 1348, type: !233)
!5996 = !DILocalVariable(name: "node", scope: !5997, file: !2, line: 1351, type: !1344)
!5997 = distinct !DILexicalBlock(scope: !5991, file: !2, line: 1350, column: 46)
!5998 = !DILocation(line: 1346, column: 39, scope: !5991)
!5999 = !DILocation(line: 1347, column: 2, scope: !5991)
!6000 = !DILocation(line: 1347, column: 21, scope: !5991)
!6001 = !DILocation(line: 1347, column: 55, scope: !5991)
!6002 = !DILocation(line: 1347, column: 54, scope: !5991)
!6003 = !DILocation(line: 1348, column: 2, scope: !5991)
!6004 = !DILocation(line: 1348, column: 17, scope: !5991)
!6005 = !DILocation(line: 1348, column: 41, scope: !5991)
!6006 = !DILocation(line: 1348, column: 51, scope: !5991)
!6007 = !DILocation(line: 1348, column: 58, scope: !5991)
!6008 = !DILocation(line: 1350, column: 2, scope: !5991)
!6009 = !DILocation(line: 1350, column: 10, scope: !5991)
!6010 = !DILocation(line: 1350, column: 9, scope: !5991)
!6011 = !DILocation(line: 1351, column: 3, scope: !5997)
!6012 = !DILocation(line: 1351, column: 19, scope: !5997)
!6013 = !DILocation(line: 1352, column: 10, scope: !5997)
!6014 = !DILocation(line: 1352, column: 8, scope: !5997)
!6015 = !DILocation(line: 1353, column: 3, scope: !5997)
!6016 = !DILocation(line: 1353, column: 3, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !5997, file: !2, line: 1353, column: 3)
!6018 = !DILocation(line: 1353, column: 3, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6020, file: !2, line: 1353, column: 3)
!6020 = distinct !DILexicalBlock(scope: !6017, file: !2, line: 1353, column: 3)
!6021 = !DILocation(line: 1353, column: 3, scope: !6020)
!6022 = !DILocation(line: 1353, column: 3, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6019, file: !2, line: 1353, column: 3)
!6024 = !DILocation(line: 1353, column: 3, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6020, file: !2, line: 1353, column: 3)
!6026 = !DILocation(line: 1353, column: 3, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6025, file: !2, line: 1353, column: 3)
!6028 = !DILocation(line: 1354, column: 15, scope: !5997)
!6029 = !DILocation(line: 1354, column: 3, scope: !5997)
!6030 = !DILocation(line: 1355, column: 2, scope: !5991)
!6031 = distinct !{!6031, !6008, !6030, !2416}
!6032 = !DILocation(line: 1357, column: 17, scope: !5991)
!6033 = !DILocation(line: 1357, column: 27, scope: !5991)
!6034 = !DILocation(line: 1357, column: 34, scope: !5991)
!6035 = !DILocation(line: 1357, column: 2, scope: !5991)
!6036 = !DILocation(line: 1358, column: 2, scope: !5991)
!6037 = !DILocation(line: 1358, column: 2, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !5991, file: !2, line: 1358, column: 2)
!6039 = !DILocation(line: 1360, column: 3, scope: !5991)
!6040 = !DILocation(line: 1360, column: 13, scope: !5991)
!6041 = !DILocation(line: 1361, column: 1, scope: !5991)
!6042 = distinct !DISubprogram(name: "dbiterator_first", scope: !2, file: !2, line: 1364, type: !954, scopeLine: 1364, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6043)
!6043 = !{!6044, !6045}
!6044 = !DILocalVariable(name: "iterator", arg: 1, scope: !6042, file: !2, line: 1364, type: !937)
!6045 = !DILocalVariable(name: "sdlziter", scope: !6042, file: !2, line: 1365, type: !2072)
!6046 = !DILocation(line: 1364, column: 36, scope: !6042)
!6047 = !DILocation(line: 1365, column: 2, scope: !6042)
!6048 = !DILocation(line: 1365, column: 21, scope: !6042)
!6049 = !DILocation(line: 1365, column: 53, scope: !6042)
!6050 = !DILocation(line: 1367, column: 22, scope: !6042)
!6051 = !DILocation(line: 1367, column: 2, scope: !6042)
!6052 = !DILocation(line: 1367, column: 12, scope: !6042)
!6053 = !DILocation(line: 1367, column: 20, scope: !6042)
!6054 = !DILocation(line: 1368, column: 6, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6042, file: !2, line: 1368, column: 6)
!6056 = !DILocation(line: 1368, column: 16, scope: !6055)
!6057 = !DILocation(line: 1368, column: 24, scope: !6055)
!6058 = !DILocation(line: 1368, column: 6, scope: !6042)
!6059 = !DILocation(line: 1369, column: 3, scope: !6055)
!6060 = !DILocation(line: 1371, column: 3, scope: !6055)
!6061 = !DILocation(line: 1372, column: 1, scope: !6042)
!6062 = distinct !DISubprogram(name: "dbiterator_last", scope: !2, file: !2, line: 1375, type: !954, scopeLine: 1375, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6063)
!6063 = !{!6064, !6065}
!6064 = !DILocalVariable(name: "iterator", arg: 1, scope: !6062, file: !2, line: 1375, type: !937)
!6065 = !DILocalVariable(name: "sdlziter", scope: !6062, file: !2, line: 1376, type: !2072)
!6066 = !DILocation(line: 1375, column: 35, scope: !6062)
!6067 = !DILocation(line: 1376, column: 2, scope: !6062)
!6068 = !DILocation(line: 1376, column: 21, scope: !6062)
!6069 = !DILocation(line: 1376, column: 53, scope: !6062)
!6070 = !DILocation(line: 1378, column: 22, scope: !6062)
!6071 = !DILocation(line: 1378, column: 2, scope: !6062)
!6072 = !DILocation(line: 1378, column: 12, scope: !6062)
!6073 = !DILocation(line: 1378, column: 20, scope: !6062)
!6074 = !DILocation(line: 1379, column: 6, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6062, file: !2, line: 1379, column: 6)
!6076 = !DILocation(line: 1379, column: 16, scope: !6075)
!6077 = !DILocation(line: 1379, column: 24, scope: !6075)
!6078 = !DILocation(line: 1379, column: 6, scope: !6062)
!6079 = !DILocation(line: 1380, column: 3, scope: !6075)
!6080 = !DILocation(line: 1382, column: 3, scope: !6075)
!6081 = !DILocation(line: 1383, column: 1, scope: !6062)
!6082 = distinct !DISubprogram(name: "dbiterator_seek", scope: !2, file: !2, line: 1386, type: !959, scopeLine: 1386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6083)
!6083 = !{!6084, !6085, !6086}
!6084 = !DILocalVariable(name: "iterator", arg: 1, scope: !6082, file: !2, line: 1386, type: !937)
!6085 = !DILocalVariable(name: "name", arg: 2, scope: !6082, file: !2, line: 1386, type: !277)
!6086 = !DILocalVariable(name: "sdlziter", scope: !6082, file: !2, line: 1387, type: !2072)
!6087 = !DILocation(line: 1386, column: 35, scope: !6082)
!6088 = !DILocation(line: 1386, column: 63, scope: !6082)
!6089 = !DILocation(line: 1387, column: 2, scope: !6082)
!6090 = !DILocation(line: 1387, column: 21, scope: !6082)
!6091 = !DILocation(line: 1387, column: 53, scope: !6082)
!6092 = !DILocation(line: 1389, column: 22, scope: !6082)
!6093 = !DILocation(line: 1389, column: 2, scope: !6082)
!6094 = !DILocation(line: 1389, column: 12, scope: !6082)
!6095 = !DILocation(line: 1389, column: 20, scope: !6082)
!6096 = !DILocation(line: 1390, column: 2, scope: !6082)
!6097 = !DILocation(line: 1390, column: 9, scope: !6082)
!6098 = !DILocation(line: 1390, column: 19, scope: !6082)
!6099 = !DILocation(line: 1390, column: 27, scope: !6082)
!6100 = !DILocation(line: 1391, column: 22, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6102, file: !2, line: 1391, column: 7)
!6102 = distinct !DILexicalBlock(scope: !6082, file: !2, line: 1390, column: 36)
!6103 = !DILocation(line: 1391, column: 32, scope: !6101)
!6104 = !DILocation(line: 1391, column: 41, scope: !6101)
!6105 = !DILocation(line: 1391, column: 47, scope: !6101)
!6106 = !DILocation(line: 1391, column: 7, scope: !6101)
!6107 = !DILocation(line: 1391, column: 7, scope: !6102)
!6108 = !DILocation(line: 1392, column: 4, scope: !6101)
!6109 = !DILocation(line: 1393, column: 23, scope: !6102)
!6110 = !DILocation(line: 1393, column: 3, scope: !6102)
!6111 = !DILocation(line: 1393, column: 13, scope: !6102)
!6112 = !DILocation(line: 1393, column: 21, scope: !6102)
!6113 = distinct !{!6113, !6096, !6114, !2416}
!6114 = !DILocation(line: 1394, column: 2, scope: !6082)
!6115 = !DILocation(line: 1395, column: 2, scope: !6082)
!6116 = !DILocation(line: 1396, column: 1, scope: !6082)
!6117 = distinct !DISubprogram(name: "dbiterator_prev", scope: !2, file: !2, line: 1399, type: !954, scopeLine: 1399, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6118)
!6118 = !{!6119, !6120}
!6119 = !DILocalVariable(name: "iterator", arg: 1, scope: !6117, file: !2, line: 1399, type: !937)
!6120 = !DILocalVariable(name: "sdlziter", scope: !6117, file: !2, line: 1400, type: !2072)
!6121 = !DILocation(line: 1399, column: 35, scope: !6117)
!6122 = !DILocation(line: 1400, column: 2, scope: !6117)
!6123 = !DILocation(line: 1400, column: 21, scope: !6117)
!6124 = !DILocation(line: 1400, column: 53, scope: !6117)
!6125 = !DILocation(line: 1402, column: 22, scope: !6117)
!6126 = !DILocation(line: 1402, column: 2, scope: !6117)
!6127 = !DILocation(line: 1402, column: 12, scope: !6117)
!6128 = !DILocation(line: 1402, column: 20, scope: !6117)
!6129 = !DILocation(line: 1403, column: 6, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6117, file: !2, line: 1403, column: 6)
!6131 = !DILocation(line: 1403, column: 16, scope: !6130)
!6132 = !DILocation(line: 1403, column: 24, scope: !6130)
!6133 = !DILocation(line: 1403, column: 6, scope: !6117)
!6134 = !DILocation(line: 1404, column: 3, scope: !6130)
!6135 = !DILocation(line: 1406, column: 3, scope: !6130)
!6136 = !DILocation(line: 1407, column: 1, scope: !6117)
!6137 = distinct !DISubprogram(name: "dbiterator_next", scope: !2, file: !2, line: 1410, type: !954, scopeLine: 1410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6138)
!6138 = !{!6139, !6140}
!6139 = !DILocalVariable(name: "iterator", arg: 1, scope: !6137, file: !2, line: 1410, type: !937)
!6140 = !DILocalVariable(name: "sdlziter", scope: !6137, file: !2, line: 1411, type: !2072)
!6141 = !DILocation(line: 1410, column: 35, scope: !6137)
!6142 = !DILocation(line: 1411, column: 2, scope: !6137)
!6143 = !DILocation(line: 1411, column: 21, scope: !6137)
!6144 = !DILocation(line: 1411, column: 53, scope: !6137)
!6145 = !DILocation(line: 1413, column: 22, scope: !6137)
!6146 = !DILocation(line: 1413, column: 2, scope: !6137)
!6147 = !DILocation(line: 1413, column: 12, scope: !6137)
!6148 = !DILocation(line: 1413, column: 20, scope: !6137)
!6149 = !DILocation(line: 1414, column: 6, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6137, file: !2, line: 1414, column: 6)
!6151 = !DILocation(line: 1414, column: 16, scope: !6150)
!6152 = !DILocation(line: 1414, column: 24, scope: !6150)
!6153 = !DILocation(line: 1414, column: 6, scope: !6137)
!6154 = !DILocation(line: 1415, column: 3, scope: !6150)
!6155 = !DILocation(line: 1417, column: 3, scope: !6150)
!6156 = !DILocation(line: 1418, column: 1, scope: !6137)
!6157 = distinct !DISubprogram(name: "dbiterator_current", scope: !2, file: !2, line: 1421, type: !965, scopeLine: 1423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6158)
!6158 = !{!6159, !6160, !6161, !6162}
!6159 = !DILocalVariable(name: "iterator", arg: 1, scope: !6157, file: !2, line: 1421, type: !937)
!6160 = !DILocalVariable(name: "nodep", arg: 2, scope: !6157, file: !2, line: 1421, type: !905)
!6161 = !DILocalVariable(name: "name", arg: 3, scope: !6157, file: !2, line: 1422, type: !358)
!6162 = !DILocalVariable(name: "sdlziter", scope: !6157, file: !2, line: 1424, type: !2072)
!6163 = !DILocation(line: 1421, column: 38, scope: !6157)
!6164 = !DILocation(line: 1421, column: 63, scope: !6157)
!6165 = !DILocation(line: 1422, column: 18, scope: !6157)
!6166 = !DILocation(line: 1424, column: 2, scope: !6157)
!6167 = !DILocation(line: 1424, column: 21, scope: !6157)
!6168 = !DILocation(line: 1424, column: 53, scope: !6157)
!6169 = !DILocation(line: 1426, column: 13, scope: !6157)
!6170 = !DILocation(line: 1426, column: 23, scope: !6157)
!6171 = !DILocation(line: 1426, column: 27, scope: !6157)
!6172 = !DILocation(line: 1426, column: 37, scope: !6157)
!6173 = !DILocation(line: 1426, column: 46, scope: !6157)
!6174 = !DILocation(line: 1426, column: 2, scope: !6157)
!6175 = !DILocation(line: 1427, column: 6, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6157, file: !2, line: 1427, column: 6)
!6177 = !DILocation(line: 1427, column: 11, scope: !6176)
!6178 = !DILocation(line: 1427, column: 6, scope: !6157)
!6179 = !DILocation(line: 1428, column: 25, scope: !6176)
!6180 = !DILocation(line: 1428, column: 35, scope: !6176)
!6181 = !DILocation(line: 1428, column: 44, scope: !6176)
!6182 = !DILocation(line: 1428, column: 50, scope: !6176)
!6183 = !DILocation(line: 1428, column: 11, scope: !6176)
!6184 = !DILocation(line: 1428, column: 3, scope: !6176)
!6185 = !DILocation(line: 1429, column: 2, scope: !6157)
!6186 = !DILocation(line: 1430, column: 1, scope: !6157)
!6187 = distinct !DISubprogram(name: "dbiterator_pause", scope: !2, file: !2, line: 1433, type: !954, scopeLine: 1433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6188)
!6188 = !{!6189}
!6189 = !DILocalVariable(name: "iterator", arg: 1, scope: !6187, file: !2, line: 1433, type: !937)
!6190 = !DILocation(line: 1433, column: 36, scope: !6187)
!6191 = !DILocation(line: 1434, column: 2, scope: !6187)
!6192 = !DILocation(line: 1435, column: 2, scope: !6187)
!6193 = distinct !DISubprogram(name: "dbiterator_origin", scope: !2, file: !2, line: 1439, type: !970, scopeLine: 1439, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6194)
!6194 = !{!6195, !6196}
!6195 = !DILocalVariable(name: "iterator", arg: 1, scope: !6193, file: !2, line: 1439, type: !937)
!6196 = !DILocalVariable(name: "name", arg: 2, scope: !6193, file: !2, line: 1439, type: !358)
!6197 = !DILocation(line: 1439, column: 37, scope: !6193)
!6198 = !DILocation(line: 1439, column: 59, scope: !6193)
!6199 = !DILocation(line: 1440, column: 2, scope: !6193)
!6200 = !DILocation(line: 1441, column: 24, scope: !6193)
!6201 = !DILocation(line: 1441, column: 38, scope: !6193)
!6202 = !DILocation(line: 1441, column: 10, scope: !6193)
!6203 = !DILocation(line: 1441, column: 2, scope: !6193)
!6204 = !DISubprogram(name: "dns_name_copy", scope: !281, file: !281, line: 1242, type: !6205, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6205 = !DISubroutineType(types: !6206)
!6206 = !{!264, !277, !358, !292}
!6207 = !DISubprogram(name: "dns_db_detach", scope: !241, file: !241, line: 350, type: !258, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6208 = distinct !DISubprogram(name: "list_tordataset", scope: !2, file: !2, line: 1491, type: !6209, scopeLine: 1494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6211)
!6209 = !DISubroutineType(types: !6210)
!6210 = !{null, !576, !254, !906, !364}
!6211 = !{!6212, !6213, !6214, !6215}
!6212 = !DILocalVariable(name: "rdatalist", arg: 1, scope: !6208, file: !2, line: 1491, type: !576)
!6213 = !DILocalVariable(name: "db", arg: 2, scope: !6208, file: !2, line: 1492, type: !254)
!6214 = !DILocalVariable(name: "node", arg: 3, scope: !6208, file: !2, line: 1492, type: !906)
!6215 = !DILocalVariable(name: "rdataset", arg: 4, scope: !6208, file: !2, line: 1493, type: !364)
!6216 = !DILocation(line: 1491, column: 34, scope: !6208)
!6217 = !DILocation(line: 1492, column: 13, scope: !6208)
!6218 = !DILocation(line: 1492, column: 31, scope: !6208)
!6219 = !DILocation(line: 1493, column: 19, scope: !6208)
!6220 = !DILocation(line: 1503, column: 2, scope: !6208)
!6221 = !DILocation(line: 1506, column: 2, scope: !6208)
!6222 = !DILocation(line: 1506, column: 12, scope: !6208)
!6223 = !DILocation(line: 1506, column: 20, scope: !6208)
!6224 = !DILocation(line: 1507, column: 20, scope: !6208)
!6225 = !DILocation(line: 1507, column: 24, scope: !6208)
!6226 = !DILocation(line: 1507, column: 31, scope: !6208)
!6227 = !DILocation(line: 1507, column: 41, scope: !6208)
!6228 = !DILocation(line: 1507, column: 2, scope: !6208)
!6229 = !DILocation(line: 1508, column: 1, scope: !6208)
!6230 = !DISubprogram(name: "dns_rdatalist_tordataset", scope: !579, file: !579, line: 75, type: !6231, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6231 = !DISubroutineType(types: !6232)
!6232 = !{!264, !576, !364}
!6233 = !DISubprogram(name: "dns_db_attachnode", scope: !241, file: !241, line: 988, type: !918, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6234 = distinct !DISubprogram(name: "disassociate", scope: !2, file: !2, line: 1450, type: !377, scopeLine: 1450, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6235)
!6235 = !{!6236, !6237, !6238, !6239}
!6236 = !DILocalVariable(name: "rdataset", arg: 1, scope: !6234, file: !2, line: 1450, type: !364)
!6237 = !DILocalVariable(name: "node", scope: !6234, file: !2, line: 1451, type: !906)
!6238 = !DILocalVariable(name: "sdlznode", scope: !6234, file: !2, line: 1452, type: !1344)
!6239 = !DILocalVariable(name: "db", scope: !6234, file: !2, line: 1453, type: !254)
!6240 = !DILocation(line: 1450, column: 30, scope: !6234)
!6241 = !DILocation(line: 1451, column: 2, scope: !6234)
!6242 = !DILocation(line: 1451, column: 16, scope: !6234)
!6243 = !DILocation(line: 1451, column: 23, scope: !6234)
!6244 = !DILocation(line: 1451, column: 33, scope: !6234)
!6245 = !DILocation(line: 1452, column: 2, scope: !6234)
!6246 = !DILocation(line: 1452, column: 18, scope: !6234)
!6247 = !DILocation(line: 1452, column: 48, scope: !6234)
!6248 = !DILocation(line: 1453, column: 2, scope: !6234)
!6249 = !DILocation(line: 1453, column: 12, scope: !6234)
!6250 = !DILocation(line: 1453, column: 30, scope: !6234)
!6251 = !DILocation(line: 1453, column: 40, scope: !6234)
!6252 = !DILocation(line: 1455, column: 13, scope: !6234)
!6253 = !DILocation(line: 1455, column: 2, scope: !6234)
!6254 = !DILocation(line: 1456, column: 30, scope: !6234)
!6255 = !DILocation(line: 1456, column: 2, scope: !6234)
!6256 = !DILocation(line: 1457, column: 1, scope: !6234)
!6257 = distinct !DISubprogram(name: "rdataset_clone", scope: !2, file: !2, line: 1460, type: !412, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6258)
!6258 = !{!6259, !6260, !6261, !6262, !6263, !6264}
!6259 = !DILocalVariable(name: "source", arg: 1, scope: !6257, file: !2, line: 1460, type: !364)
!6260 = !DILocalVariable(name: "target", arg: 2, scope: !6257, file: !2, line: 1460, type: !364)
!6261 = !DILocalVariable(name: "node", scope: !6257, file: !2, line: 1461, type: !906)
!6262 = !DILocalVariable(name: "sdlznode", scope: !6257, file: !2, line: 1462, type: !1344)
!6263 = !DILocalVariable(name: "db", scope: !6257, file: !2, line: 1463, type: !254)
!6264 = !DILocalVariable(name: "tempdb", scope: !6257, file: !2, line: 1464, type: !906)
!6265 = !DILocation(line: 1460, column: 32, scope: !6257)
!6266 = !DILocation(line: 1460, column: 56, scope: !6257)
!6267 = !DILocation(line: 1461, column: 2, scope: !6257)
!6268 = !DILocation(line: 1461, column: 16, scope: !6257)
!6269 = !DILocation(line: 1461, column: 23, scope: !6257)
!6270 = !DILocation(line: 1461, column: 31, scope: !6257)
!6271 = !DILocation(line: 1462, column: 2, scope: !6257)
!6272 = !DILocation(line: 1462, column: 18, scope: !6257)
!6273 = !DILocation(line: 1462, column: 48, scope: !6257)
!6274 = !DILocation(line: 1463, column: 2, scope: !6257)
!6275 = !DILocation(line: 1463, column: 12, scope: !6257)
!6276 = !DILocation(line: 1463, column: 30, scope: !6257)
!6277 = !DILocation(line: 1463, column: 40, scope: !6257)
!6278 = !DILocation(line: 1464, column: 2, scope: !6257)
!6279 = !DILocation(line: 1464, column: 16, scope: !6257)
!6280 = !DILocation(line: 1466, column: 23, scope: !6257)
!6281 = !DILocation(line: 1466, column: 31, scope: !6257)
!6282 = !DILocation(line: 1466, column: 2, scope: !6257)
!6283 = !DILocation(line: 1467, column: 13, scope: !6257)
!6284 = !DILocation(line: 1467, column: 17, scope: !6257)
!6285 = !DILocation(line: 1467, column: 2, scope: !6257)
!6286 = !DILocation(line: 1468, column: 21, scope: !6257)
!6287 = !DILocation(line: 1468, column: 2, scope: !6257)
!6288 = !DILocation(line: 1468, column: 10, scope: !6257)
!6289 = !DILocation(line: 1468, column: 19, scope: !6257)
!6290 = !DILocation(line: 1469, column: 1, scope: !6257)
!6291 = !DISubprogram(name: "isc__rdatalist_disassociate", scope: !6292, file: !6292, line: 24, type: !377, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6292 = !DIFile(filename: "./rdatalist_p.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "2128154def055657352ec34797167fd7")
!6293 = !DISubprogram(name: "isc__rdatalist_clone", scope: !6292, file: !6292, line: 36, type: !412, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6294 = distinct !DISubprogram(name: "rdatasetiter_destroy", scope: !2, file: !2, line: 265, type: !997, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6295)
!6295 = !{!6296, !6297}
!6296 = !DILocalVariable(name: "iteratorp", arg: 1, scope: !6294, file: !2, line: 265, type: !983)
!6297 = !DILocalVariable(name: "sdlziterator", scope: !6294, file: !2, line: 266, type: !2074)
!6298 = !DILocation(line: 265, column: 43, scope: !6294)
!6299 = !DILocation(line: 266, column: 2, scope: !6294)
!6300 = !DILocation(line: 266, column: 23, scope: !6294)
!6301 = !DILocation(line: 267, column: 28, scope: !6294)
!6302 = !DILocation(line: 267, column: 27, scope: !6294)
!6303 = !DILocation(line: 269, column: 13, scope: !6294)
!6304 = !DILocation(line: 269, column: 27, scope: !6294)
!6305 = !DILocation(line: 269, column: 34, scope: !6294)
!6306 = !DILocation(line: 269, column: 39, scope: !6294)
!6307 = !DILocation(line: 269, column: 53, scope: !6294)
!6308 = !DILocation(line: 269, column: 60, scope: !6294)
!6309 = !DILocation(line: 269, column: 2, scope: !6294)
!6310 = !DILocation(line: 270, column: 2, scope: !6294)
!6311 = !DILocation(line: 270, column: 2, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6294, file: !2, line: 270, column: 2)
!6313 = !DILocation(line: 272, column: 3, scope: !6294)
!6314 = !DILocation(line: 272, column: 13, scope: !6294)
!6315 = !DILocation(line: 273, column: 1, scope: !6294)
!6316 = distinct !DISubprogram(name: "rdatasetiter_first", scope: !2, file: !2, line: 276, type: !1001, scopeLine: 276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6317)
!6317 = !{!6318, !6319, !6320}
!6318 = !DILocalVariable(name: "iterator", arg: 1, scope: !6316, file: !2, line: 276, type: !984)
!6319 = !DILocalVariable(name: "sdlziterator", scope: !6316, file: !2, line: 277, type: !2074)
!6320 = !DILocalVariable(name: "sdlznode", scope: !6316, file: !2, line: 278, type: !1344)
!6321 = !DILocation(line: 276, column: 40, scope: !6316)
!6322 = !DILocation(line: 277, column: 2, scope: !6316)
!6323 = !DILocation(line: 277, column: 23, scope: !6316)
!6324 = !DILocation(line: 277, column: 61, scope: !6316)
!6325 = !DILocation(line: 278, column: 2, scope: !6316)
!6326 = !DILocation(line: 278, column: 18, scope: !6316)
!6327 = !DILocation(line: 278, column: 47, scope: !6316)
!6328 = !DILocation(line: 278, column: 57, scope: !6316)
!6329 = !DILocation(line: 280, column: 6, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6316, file: !2, line: 280, column: 6)
!6331 = !DILocation(line: 280, column: 6, scope: !6316)
!6332 = !DILocation(line: 281, column: 3, scope: !6330)
!6333 = !DILocation(line: 282, column: 26, scope: !6316)
!6334 = !DILocation(line: 282, column: 2, scope: !6316)
!6335 = !DILocation(line: 282, column: 16, scope: !6316)
!6336 = !DILocation(line: 282, column: 24, scope: !6316)
!6337 = !DILocation(line: 283, column: 2, scope: !6316)
!6338 = !DILocation(line: 284, column: 1, scope: !6316)
!6339 = distinct !DISubprogram(name: "rdatasetiter_next", scope: !2, file: !2, line: 287, type: !1001, scopeLine: 287, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6340)
!6340 = !{!6341, !6342}
!6341 = !DILocalVariable(name: "iterator", arg: 1, scope: !6339, file: !2, line: 287, type: !984)
!6342 = !DILocalVariable(name: "sdlziterator", scope: !6339, file: !2, line: 288, type: !2074)
!6343 = !DILocation(line: 287, column: 39, scope: !6339)
!6344 = !DILocation(line: 288, column: 2, scope: !6339)
!6345 = !DILocation(line: 288, column: 23, scope: !6339)
!6346 = !DILocation(line: 288, column: 61, scope: !6339)
!6347 = !DILocation(line: 290, column: 26, scope: !6339)
!6348 = !DILocation(line: 290, column: 2, scope: !6339)
!6349 = !DILocation(line: 290, column: 16, scope: !6339)
!6350 = !DILocation(line: 290, column: 24, scope: !6339)
!6351 = !DILocation(line: 291, column: 6, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6339, file: !2, line: 291, column: 6)
!6353 = !DILocation(line: 291, column: 20, scope: !6352)
!6354 = !DILocation(line: 291, column: 28, scope: !6352)
!6355 = !DILocation(line: 291, column: 6, scope: !6339)
!6356 = !DILocation(line: 292, column: 3, scope: !6352)
!6357 = !DILocation(line: 294, column: 3, scope: !6352)
!6358 = !DILocation(line: 295, column: 1, scope: !6339)
!6359 = distinct !DISubprogram(name: "rdatasetiter_current", scope: !2, file: !2, line: 298, type: !1006, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6360)
!6360 = !{!6361, !6362, !6363}
!6361 = !DILocalVariable(name: "iterator", arg: 1, scope: !6359, file: !2, line: 298, type: !984)
!6362 = !DILocalVariable(name: "rdataset", arg: 2, scope: !6359, file: !2, line: 298, type: !364)
!6363 = !DILocalVariable(name: "sdlziterator", scope: !6359, file: !2, line: 299, type: !2074)
!6364 = !DILocation(line: 298, column: 42, scope: !6359)
!6365 = !DILocation(line: 298, column: 68, scope: !6359)
!6366 = !DILocation(line: 299, column: 2, scope: !6359)
!6367 = !DILocation(line: 299, column: 23, scope: !6359)
!6368 = !DILocation(line: 299, column: 61, scope: !6359)
!6369 = !DILocation(line: 301, column: 18, scope: !6359)
!6370 = !DILocation(line: 301, column: 32, scope: !6359)
!6371 = !DILocation(line: 301, column: 41, scope: !6359)
!6372 = !DILocation(line: 301, column: 51, scope: !6359)
!6373 = !DILocation(line: 301, column: 55, scope: !6359)
!6374 = !DILocation(line: 301, column: 65, scope: !6359)
!6375 = !DILocation(line: 302, column: 4, scope: !6359)
!6376 = !DILocation(line: 301, column: 2, scope: !6359)
!6377 = !DILocation(line: 303, column: 1, scope: !6359)
!6378 = distinct !DISubprogram(name: "modrdataset", scope: !2, file: !2, line: 1100, type: !6379, scopeLine: 1103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !76, retainedNodes: !6381)
!6379 = !DISubroutineType(types: !6380)
!6380 = !{!264, !254, !906, !449, !364, !80, !2056}
!6381 = !{!6382, !6383, !6384, !6385, !6386, !6387, !6388, !6389, !6394, !6395, !6396, !6397, !6398, !6399, !6400, !6402, !6404}
!6382 = !DILocalVariable(name: "db", arg: 1, scope: !6378, file: !2, line: 1100, type: !254)
!6383 = !DILocalVariable(name: "node", arg: 2, scope: !6378, file: !2, line: 1100, type: !906)
!6384 = !DILocalVariable(name: "version", arg: 3, scope: !6378, file: !2, line: 1100, type: !449)
!6385 = !DILocalVariable(name: "rdataset", arg: 4, scope: !6378, file: !2, line: 1101, type: !364)
!6386 = !DILocalVariable(name: "options", arg: 5, scope: !6378, file: !2, line: 1101, type: !80)
!6387 = !DILocalVariable(name: "mod_function", arg: 6, scope: !6378, file: !2, line: 1102, type: !2056)
!6388 = !DILocalVariable(name: "sdlz", scope: !6378, file: !2, line: 1104, type: !233)
!6389 = !DILocalVariable(name: "style", scope: !6378, file: !2, line: 1105, type: !6390)
!6390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6391, size: 64)
!6391 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_master_style_t", file: !6392, line: 32, baseType: !6393)
!6392 = !DIFile(filename: "include/dns/masterdump.h", directory: "/local-ssd/bind9-bfe527roow53kyl4mztedmcoca3rfykn-build/aidengro/spack-stage-bind9-9_14_6-bfe527roow53kyl4mztedmcoca3rfykn/spack-src/lib/dns", checksumkind: CSK_MD5, checksum: "ca71d9f8f00020df7306dd98e6970576")
!6393 = !DICompositeType(tag: DW_TAG_structure_type, name: "dns_master_style", file: !6392, line: 32, flags: DIFlagFwdDecl)
!6394 = !DILocalVariable(name: "result", scope: !6378, file: !2, line: 1106, type: !264)
!6395 = !DILocalVariable(name: "buffer", scope: !6378, file: !2, line: 1107, type: !292)
!6396 = !DILocalVariable(name: "mctx", scope: !6378, file: !2, line: 1108, type: !309)
!6397 = !DILocalVariable(name: "sdlznode", scope: !6378, file: !2, line: 1109, type: !1344)
!6398 = !DILocalVariable(name: "rdatastr", scope: !6378, file: !2, line: 1110, type: !347)
!6399 = !DILocalVariable(name: "name", scope: !6378, file: !2, line: 1111, type: !3690)
!6400 = !DILocalVariable(name: "flags", scope: !6401, file: !2, line: 1152, type: !80)
!6401 = distinct !DILexicalBlock(scope: !6378, file: !2, line: 1152, column: 2)
!6402 = !DILocalVariable(name: "flags", scope: !6403, file: !2, line: 1155, type: !80)
!6403 = distinct !DILexicalBlock(scope: !6378, file: !2, line: 1155, column: 2)
!6404 = !DILabel(scope: !6378, name: "cleanup", file: !2, line: 1157)
!6405 = !DILocation(line: 1100, column: 23, scope: !6378)
!6406 = !DILocation(line: 1100, column: 41, scope: !6378)
!6407 = !DILocation(line: 1100, column: 64, scope: !6378)
!6408 = !DILocation(line: 1101, column: 22, scope: !6378)
!6409 = !DILocation(line: 1101, column: 45, scope: !6378)
!6410 = !DILocation(line: 1102, column: 28, scope: !6378)
!6411 = !DILocation(line: 1104, column: 2, scope: !6378)
!6412 = !DILocation(line: 1104, column: 17, scope: !6378)
!6413 = !DILocation(line: 1104, column: 41, scope: !6378)
!6414 = !DILocation(line: 1105, column: 2, scope: !6378)
!6415 = !DILocation(line: 1105, column: 22, scope: !6378)
!6416 = !DILocation(line: 1106, column: 2, scope: !6378)
!6417 = !DILocation(line: 1106, column: 15, scope: !6378)
!6418 = !DILocation(line: 1107, column: 2, scope: !6378)
!6419 = !DILocation(line: 1107, column: 16, scope: !6378)
!6420 = !DILocation(line: 1108, column: 2, scope: !6378)
!6421 = !DILocation(line: 1108, column: 13, scope: !6378)
!6422 = !DILocation(line: 1109, column: 2, scope: !6378)
!6423 = !DILocation(line: 1109, column: 18, scope: !6378)
!6424 = !DILocation(line: 1110, column: 2, scope: !6378)
!6425 = !DILocation(line: 1110, column: 8, scope: !6378)
!6426 = !DILocation(line: 1111, column: 2, scope: !6378)
!6427 = !DILocation(line: 1111, column: 7, scope: !6378)
!6428 = !DILocation(line: 1113, column: 2, scope: !6378)
!6429 = !DILocation(line: 0, scope: !6378)
!6430 = !DILocation(line: 1115, column: 6, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6378, file: !2, line: 1115, column: 6)
!6432 = !DILocation(line: 1115, column: 19, scope: !6431)
!6433 = !DILocation(line: 1115, column: 6, scope: !6378)
!6434 = !DILocation(line: 1116, column: 3, scope: !6431)
!6435 = !DILocation(line: 1118, column: 31, scope: !6378)
!6436 = !DILocation(line: 1118, column: 11, scope: !6378)
!6437 = !DILocation(line: 1120, column: 2, scope: !6378)
!6438 = !DILocation(line: 1122, column: 18, scope: !6378)
!6439 = !DILocation(line: 1122, column: 28, scope: !6378)
!6440 = !DILocation(line: 1122, column: 34, scope: !6378)
!6441 = !DILocation(line: 1122, column: 2, scope: !6378)
!6442 = !DILocation(line: 1124, column: 9, scope: !6378)
!6443 = !DILocation(line: 1124, column: 15, scope: !6378)
!6444 = !DILocation(line: 1124, column: 22, scope: !6378)
!6445 = !DILocation(line: 1124, column: 7, scope: !6378)
!6446 = !DILocation(line: 1126, column: 31, scope: !6378)
!6447 = !DILocation(line: 1126, column: 11, scope: !6378)
!6448 = !DILocation(line: 1126, column: 9, scope: !6378)
!6449 = !DILocation(line: 1127, column: 6, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6378, file: !2, line: 1127, column: 6)
!6451 = !DILocation(line: 1127, column: 13, scope: !6450)
!6452 = !DILocation(line: 1127, column: 6, scope: !6378)
!6453 = !DILocation(line: 1128, column: 11, scope: !6450)
!6454 = !DILocation(line: 1128, column: 3, scope: !6450)
!6455 = !DILocation(line: 1131, column: 18, scope: !6378)
!6456 = !DILocation(line: 1130, column: 11, scope: !6378)
!6457 = !DILocation(line: 1130, column: 9, scope: !6378)
!6458 = !DILocation(line: 1132, column: 6, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6378, file: !2, line: 1132, column: 6)
!6460 = !DILocation(line: 1132, column: 13, scope: !6459)
!6461 = !DILocation(line: 1132, column: 6, scope: !6378)
!6462 = !DILocation(line: 1133, column: 3, scope: !6459)
!6463 = !DILocation(line: 1135, column: 37, scope: !6378)
!6464 = !DILocation(line: 1135, column: 47, scope: !6378)
!6465 = !DILocation(line: 1135, column: 53, scope: !6378)
!6466 = !DILocation(line: 1136, column: 9, scope: !6378)
!6467 = !DILocation(line: 1136, column: 16, scope: !6378)
!6468 = !DILocation(line: 1135, column: 11, scope: !6378)
!6469 = !DILocation(line: 1135, column: 9, scope: !6378)
!6470 = !DILocation(line: 1137, column: 6, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6378, file: !2, line: 1137, column: 6)
!6472 = !DILocation(line: 1137, column: 13, scope: !6471)
!6473 = !DILocation(line: 1137, column: 6, scope: !6378)
!6474 = !DILocation(line: 1138, column: 3, scope: !6471)
!6475 = !DILocation(line: 1140, column: 6, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6378, file: !2, line: 1140, column: 6)
!6477 = !DILocation(line: 1140, column: 36, scope: !6476)
!6478 = !DILocation(line: 1140, column: 6, scope: !6378)
!6479 = !DILocation(line: 1141, column: 10, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6476, file: !2, line: 1140, column: 41)
!6481 = !DILocation(line: 1142, column: 3, scope: !6480)
!6482 = !DILocation(line: 1145, column: 13, scope: !6378)
!6483 = !DILocation(line: 1145, column: 11, scope: !6378)
!6484 = !DILocation(line: 1146, column: 6, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6378, file: !2, line: 1146, column: 6)
!6486 = !DILocation(line: 1146, column: 15, scope: !6485)
!6487 = !DILocation(line: 1146, column: 6, scope: !6378)
!6488 = !DILocation(line: 1147, column: 10, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6485, file: !2, line: 1146, column: 24)
!6490 = !DILocation(line: 1148, column: 3, scope: !6489)
!6491 = !DILocation(line: 1150, column: 2, scope: !6378)
!6492 = !DILocation(line: 1150, column: 11, scope: !6378)
!6493 = !DILocation(line: 1150, column: 41, scope: !6378)
!6494 = !DILocation(line: 1150, column: 46, scope: !6378)
!6495 = !DILocation(line: 1152, column: 2, scope: !6378)
!6496 = !DILocation(line: 1152, column: 2, scope: !6401)
!6497 = !DILocation(line: 1152, column: 2, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6401, file: !2, line: 1152, column: 2)
!6499 = !DILocation(line: 1152, column: 2, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6498, file: !2, line: 1152, column: 2)
!6501 = !DILocation(line: 1153, column: 11, scope: !6378)
!6502 = !DILocation(line: 1153, column: 24, scope: !6378)
!6503 = !DILocation(line: 1153, column: 30, scope: !6378)
!6504 = !DILocation(line: 1153, column: 40, scope: !6378)
!6505 = !DILocation(line: 1153, column: 46, scope: !6378)
!6506 = !DILocation(line: 1153, column: 54, scope: !6378)
!6507 = !DILocation(line: 1154, column: 10, scope: !6378)
!6508 = !DILocation(line: 1154, column: 16, scope: !6378)
!6509 = !DILocation(line: 1154, column: 24, scope: !6378)
!6510 = !DILocation(line: 1153, column: 9, scope: !6378)
!6511 = !DILocation(line: 1155, column: 2, scope: !6378)
!6512 = !DILocation(line: 1155, column: 2, scope: !6403)
!6513 = !DILocation(line: 1155, column: 2, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6403, file: !2, line: 1155, column: 2)
!6515 = !DILocation(line: 1155, column: 2, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6514, file: !2, line: 1155, column: 2)
!6517 = !DILocation(line: 1157, column: 1, scope: !6378)
!6518 = !DILocation(line: 1158, column: 2, scope: !6378)
!6519 = !DILocation(line: 1159, column: 6, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6378, file: !2, line: 1159, column: 6)
!6521 = !DILocation(line: 1159, column: 12, scope: !6520)
!6522 = !DILocation(line: 1159, column: 6, scope: !6378)
!6523 = !DILocation(line: 1160, column: 35, scope: !6520)
!6524 = !DILocation(line: 1160, column: 3, scope: !6520)
!6525 = !DILocation(line: 1162, column: 10, scope: !6378)
!6526 = !DILocation(line: 1162, column: 2, scope: !6378)
!6527 = !DILocation(line: 1163, column: 1, scope: !6378)
!6528 = !DISubprogram(name: "dns_master_stylecreate", scope: !6392, file: !6392, line: 379, type: !6529, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6529 = !DISubroutineType(types: !6530)
!6530 = !{!264, !6531, !6532, !80, !80, !80, !80, !80, !80, !80, !309}
!6531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6390, size: 64)
!6532 = !DIDerivedType(tag: DW_TAG_typedef, name: "dns_masterstyle_flags_t", file: !89, line: 102, baseType: !1199)
!6533 = !DISubprogram(name: "dns_master_rdatasettotext", scope: !6392, file: !6392, line: 341, type: !6534, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{!264, !277, !364, !6536, !292}
!6536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6537, size: 64)
!6537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6391)
!6538 = !DISubprogram(name: "dns_master_styledestroy", scope: !6392, file: !6392, line: 387, type: !6539, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{null, !6531, !309}
!6541 = !DISubprogram(name: "dns_name_issubdomain", scope: !281, file: !281, line: 507, type: !2883, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6542 = !DISubprogram(name: "dns_rdataset_init", scope: !367, file: !367, line: 210, type: !377, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6543 = !DISubprogram(name: "dns_rdataset_disassociate", scope: !367, file: !367, line: 235, type: !377, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6544 = !DISubprogram(name: "dns_rdataset_isassociated", scope: !367, file: !367, line: 251, type: !6545, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6545 = !DISubroutineType(types: !6546)
!6546 = !{!353, !364}

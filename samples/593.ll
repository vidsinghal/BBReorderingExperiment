; ModuleID = 'samples/593.bc'
source_filename = "xmlregexp.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._xmlChRangeGroup = type { i32, i32, ptr, ptr }
%struct._xmlRegexp = type { ptr, i32, ptr, i32, ptr, i32, ptr, i32, i32, i32, ptr, ptr, i32, ptr }
%struct._xmlRegExecCtxt = type { i32, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32 }
%struct._xmlAutomata = type { ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, ptr, i32, i32, ptr, i32, i32, i32, i32 }
%struct._xmlRegExecRollback = type { ptr, i32, i32, ptr }
%struct._xmlRegInputToken = type { ptr, ptr }
%struct._xmlAutomataState = type { i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, ptr }
%struct._xmlRegTrans = type { ptr, i32, i32, i32, i32 }
%struct._xmlRegCounter = type { i32, i32 }
%struct._xmlRegAtom = type { i32, i32, i32, i32, i32, ptr, ptr, i32, i32, ptr, ptr, ptr, i32, i32, ptr, ptr }
%struct._xmlRegRange = type { i32, i32, i32, i32, ptr }

@xmlMalloc = external global ptr, align 8
@.str = private unnamed_addr constant [27 x i8] c"creating execution context\00", align 1, !dbg !0
@xmlFree = external global ptr, align 8
@xmlMallocAtomic = external global ptr, align 8
@.str.1 = private unnamed_addr constant [10 x i8] c" regexp: \00", align 1, !dbg !8
@.str.2 = private unnamed_addr constant [6 x i8] c"NULL\0A\00", align 1, !dbg !13
@.str.3 = private unnamed_addr constant [6 x i8] c"'%s' \00", align 1, !dbg !18
@.str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1, !dbg !20
@.str.5 = private unnamed_addr constant [11 x i8] c"%d atoms:\0A\00", align 1, !dbg !25
@.str.6 = private unnamed_addr constant [7 x i8] c" %02d \00", align 1, !dbg !30
@.str.7 = private unnamed_addr constant [11 x i8] c"%d states:\00", align 1, !dbg !35
@.str.8 = private unnamed_addr constant [14 x i8] c"%d counters:\0A\00", align 1, !dbg !37
@.str.9 = private unnamed_addr constant [20 x i8] c" %d: min %d max %d\0A\00", align 1, !dbg !42
@.str.10 = private unnamed_addr constant [35 x i8] c"xmlFAParseRegExp: extra characters\00", align 1, !dbg !47
@.str.11 = private unnamed_addr constant [7 x i8] c"not %s\00", align 1, !dbg !52
@.str.12 = private unnamed_addr constant [31 x i8] c"Memory allocation failed : %s\0A\00", align 1, !dbg !54
@stderr = external global ptr, align 8
@.str.13 = private unnamed_addr constant [36 x i8] c"epsilon transition left at runtime\0A\00", align 1, !dbg !59
@.str.14 = private unnamed_addr constant [21 x i8] c"pushing input string\00", align 1, !dbg !64
@xmlRealloc = external global ptr, align 8
@.str.15 = private unnamed_addr constant [14 x i8] c"saving regexp\00", align 1, !dbg !69
@.str.16 = private unnamed_addr constant [29 x i8] c"exec save: allocation failed\00", align 1, !dbg !71
@.str.17 = private unnamed_addr constant [30 x i8] c"Unimplemented block at %s:%d\0A\00", align 1, !dbg !76
@.str.18 = private unnamed_addr constant [12 x i8] c"xmlregexp.c\00", align 1, !dbg !81
@.str.19 = private unnamed_addr constant [8 x i8] c" atom: \00", align 1, !dbg !86
@.str.20 = private unnamed_addr constant [5 x i8] c"not \00", align 1, !dbg !91
@.str.21 = private unnamed_addr constant [7 x i8] c"%d-%d \00", align 1, !dbg !96
@.str.22 = private unnamed_addr constant [9 x i8] c"char %c\0A\00", align 1, !dbg !98
@.str.23 = private unnamed_addr constant [12 x i8] c"%d entries\0A\00", align 1, !dbg !103
@.str.24 = private unnamed_addr constant [17 x i8] c"start %d end %d\0A\00", align 1, !dbg !105
@.str.25 = private unnamed_addr constant [9 x i8] c"epsilon \00", align 1, !dbg !110
@.str.26 = private unnamed_addr constant [9 x i8] c"charval \00", align 1, !dbg !112
@.str.27 = private unnamed_addr constant [8 x i8] c"ranges \00", align 1, !dbg !114
@.str.28 = private unnamed_addr constant [9 x i8] c"subexpr \00", align 1, !dbg !116
@.str.29 = private unnamed_addr constant [8 x i8] c"string \00", align 1, !dbg !118
@.str.30 = private unnamed_addr constant [9 x i8] c"anychar \00", align 1, !dbg !120
@.str.31 = private unnamed_addr constant [10 x i8] c"anyspace \00", align 1, !dbg !122
@.str.32 = private unnamed_addr constant [10 x i8] c"notspace \00", align 1, !dbg !124
@.str.33 = private unnamed_addr constant [10 x i8] c"initname \00", align 1, !dbg !126
@.str.34 = private unnamed_addr constant [13 x i8] c"notinitname \00", align 1, !dbg !128
@.str.35 = private unnamed_addr constant [10 x i8] c"namechar \00", align 1, !dbg !133
@.str.36 = private unnamed_addr constant [13 x i8] c"notnamechar \00", align 1, !dbg !135
@.str.37 = private unnamed_addr constant [9 x i8] c"decimal \00", align 1, !dbg !137
@.str.38 = private unnamed_addr constant [12 x i8] c"notdecimal \00", align 1, !dbg !139
@.str.39 = private unnamed_addr constant [10 x i8] c"realchar \00", align 1, !dbg !141
@.str.40 = private unnamed_addr constant [13 x i8] c"notrealchar \00", align 1, !dbg !143
@.str.41 = private unnamed_addr constant [8 x i8] c"LETTER \00", align 1, !dbg !145
@.str.42 = private unnamed_addr constant [18 x i8] c"LETTER_UPPERCASE \00", align 1, !dbg !147
@.str.43 = private unnamed_addr constant [18 x i8] c"LETTER_LOWERCASE \00", align 1, !dbg !152
@.str.44 = private unnamed_addr constant [18 x i8] c"LETTER_TITLECASE \00", align 1, !dbg !154
@.str.45 = private unnamed_addr constant [17 x i8] c"LETTER_MODIFIER \00", align 1, !dbg !156
@.str.46 = private unnamed_addr constant [15 x i8] c"LETTER_OTHERS \00", align 1, !dbg !158
@.str.47 = private unnamed_addr constant [6 x i8] c"MARK \00", align 1, !dbg !163
@.str.48 = private unnamed_addr constant [17 x i8] c"MARK_NONSPACING \00", align 1, !dbg !165
@.str.49 = private unnamed_addr constant [21 x i8] c"MARK_SPACECOMBINING \00", align 1, !dbg !167
@.str.50 = private unnamed_addr constant [16 x i8] c"MARK_ENCLOSING \00", align 1, !dbg !169
@.str.51 = private unnamed_addr constant [8 x i8] c"NUMBER \00", align 1, !dbg !174
@.str.52 = private unnamed_addr constant [16 x i8] c"NUMBER_DECIMAL \00", align 1, !dbg !176
@.str.53 = private unnamed_addr constant [15 x i8] c"NUMBER_LETTER \00", align 1, !dbg !178
@.str.54 = private unnamed_addr constant [15 x i8] c"NUMBER_OTHERS \00", align 1, !dbg !180
@.str.55 = private unnamed_addr constant [7 x i8] c"PUNCT \00", align 1, !dbg !182
@.str.56 = private unnamed_addr constant [17 x i8] c"PUNCT_CONNECTOR \00", align 1, !dbg !184
@.str.57 = private unnamed_addr constant [12 x i8] c"PUNCT_DASH \00", align 1, !dbg !186
@.str.58 = private unnamed_addr constant [12 x i8] c"PUNCT_OPEN \00", align 1, !dbg !188
@.str.59 = private unnamed_addr constant [13 x i8] c"PUNCT_CLOSE \00", align 1, !dbg !190
@.str.60 = private unnamed_addr constant [17 x i8] c"PUNCT_INITQUOTE \00", align 1, !dbg !192
@.str.61 = private unnamed_addr constant [16 x i8] c"PUNCT_FINQUOTE \00", align 1, !dbg !194
@.str.62 = private unnamed_addr constant [14 x i8] c"PUNCT_OTHERS \00", align 1, !dbg !196
@.str.63 = private unnamed_addr constant [7 x i8] c"SEPAR \00", align 1, !dbg !198
@.str.64 = private unnamed_addr constant [13 x i8] c"SEPAR_SPACE \00", align 1, !dbg !200
@.str.65 = private unnamed_addr constant [12 x i8] c"SEPAR_LINE \00", align 1, !dbg !202
@.str.66 = private unnamed_addr constant [12 x i8] c"SEPAR_PARA \00", align 1, !dbg !204
@.str.67 = private unnamed_addr constant [8 x i8] c"SYMBOL \00", align 1, !dbg !206
@.str.68 = private unnamed_addr constant [13 x i8] c"SYMBOL_MATH \00", align 1, !dbg !208
@.str.69 = private unnamed_addr constant [17 x i8] c"SYMBOL_CURRENCY \00", align 1, !dbg !210
@.str.70 = private unnamed_addr constant [17 x i8] c"SYMBOL_MODIFIER \00", align 1, !dbg !212
@.str.71 = private unnamed_addr constant [15 x i8] c"SYMBOL_OTHERS \00", align 1, !dbg !214
@.str.72 = private unnamed_addr constant [7 x i8] c"OTHER \00", align 1, !dbg !216
@.str.73 = private unnamed_addr constant [15 x i8] c"OTHER_CONTROL \00", align 1, !dbg !218
@.str.74 = private unnamed_addr constant [14 x i8] c"OTHER_FORMAT \00", align 1, !dbg !220
@.str.75 = private unnamed_addr constant [15 x i8] c"OTHER_PRIVATE \00", align 1, !dbg !222
@.str.76 = private unnamed_addr constant [10 x i8] c"OTHER_NA \00", align 1, !dbg !224
@.str.77 = private unnamed_addr constant [7 x i8] c"BLOCK \00", align 1, !dbg !226
@.str.78 = private unnamed_addr constant [6 x i8] c"once \00", align 1, !dbg !228
@.str.79 = private unnamed_addr constant [3 x i8] c"? \00", align 1, !dbg !230
@.str.80 = private unnamed_addr constant [3 x i8] c"* \00", align 1, !dbg !235
@.str.81 = private unnamed_addr constant [3 x i8] c"+ \00", align 1, !dbg !237
@.str.82 = private unnamed_addr constant [7 x i8] c"range \00", align 1, !dbg !239
@.str.83 = private unnamed_addr constant [10 x i8] c"onceonly \00", align 1, !dbg !241
@.str.84 = private unnamed_addr constant [5 x i8] c"all \00", align 1, !dbg !243
@.str.85 = private unnamed_addr constant [10 x i8] c"  range: \00", align 1, !dbg !245
@.str.86 = private unnamed_addr constant [10 x i8] c"negative \00", align 1, !dbg !247
@.str.87 = private unnamed_addr constant [9 x i8] c"%c - %c\0A\00", align 1, !dbg !249
@.str.88 = private unnamed_addr constant [9 x i8] c" state: \00", align 1, !dbg !251
@.str.89 = private unnamed_addr constant [7 x i8] c"START \00", align 1, !dbg !253
@.str.90 = private unnamed_addr constant [7 x i8] c"FINAL \00", align 1, !dbg !255
@.str.91 = private unnamed_addr constant [21 x i8] c"%d, %d transitions:\0A\00", align 1, !dbg !257
@.str.92 = private unnamed_addr constant [10 x i8] c"  trans: \00", align 1, !dbg !259
@.str.93 = private unnamed_addr constant [9 x i8] c"removed\0A\00", align 1, !dbg !261
@.str.94 = private unnamed_addr constant [23 x i8] c"last not determinist, \00", align 1, !dbg !263
@.str.95 = private unnamed_addr constant [18 x i8] c"not determinist, \00", align 1, !dbg !268
@.str.96 = private unnamed_addr constant [13 x i8] c"counted %d, \00", align 1, !dbg !270
@.str.97 = private unnamed_addr constant [17 x i8] c"all transition, \00", align 1, !dbg !272
@.str.98 = private unnamed_addr constant [17 x i8] c"count based %d, \00", align 1, !dbg !274
@.str.99 = private unnamed_addr constant [15 x i8] c"epsilon to %d\0A\00", align 1, !dbg !276
@.str.100 = private unnamed_addr constant [9 x i8] c"char %c \00", align 1, !dbg !278
@.str.101 = private unnamed_addr constant [16 x i8] c"atom %d, to %d\0A\00", align 1, !dbg !280
@.str.102 = private unnamed_addr constant [17 x i8] c"allocating state\00", align 1, !dbg !282
@.str.103 = private unnamed_addr constant [13 x i8] c"adding state\00", align 1, !dbg !284
@.str.104 = private unnamed_addr constant [28 x i8] c"internal: no atom generated\00", align 1, !dbg !286
@.str.105 = private unnamed_addr constant [47 x i8] c"xmlFAParseAtom: maximum nesting depth exceeded\00", align 1, !dbg !291
@.str.106 = private unnamed_addr constant [30 x i8] c"xmlFAParseAtom: expecting ')'\00", align 1, !dbg !296
@.str.107 = private unnamed_addr constant [34 x i8] c"xmlFAParseCharClass: ']' expected\00", align 1, !dbg !298
@.str.108 = private unnamed_addr constant [28 x i8] c"charClassExpr: ']' expected\00", align 1, !dbg !303
@.str.109 = private unnamed_addr constant [14 x i8] c"Expecting ']'\00", align 1, !dbg !305
@.str.110 = private unnamed_addr constant [21 x i8] c"Invalid escape value\00", align 1, !dbg !307
@.str.111 = private unnamed_addr constant [23 x i8] c"Expecting a char range\00", align 1, !dbg !309
@.str.112 = private unnamed_addr constant [34 x i8] c"Expecting the end of a char range\00", align 1, !dbg !311
@.str.113 = private unnamed_addr constant [38 x i8] c"End of range is before start of range\00", align 1, !dbg !313
@.str.114 = private unnamed_addr constant [24 x i8] c"add range: atom is NULL\00", align 1, !dbg !318
@.str.115 = private unnamed_addr constant [30 x i8] c"add range: atom is not ranges\00", align 1, !dbg !323
@.str.116 = private unnamed_addr constant [14 x i8] c"adding ranges\00", align 1, !dbg !325
@.str.117 = private unnamed_addr constant [17 x i8] c"allocating range\00", align 1, !dbg !327
@.str.118 = private unnamed_addr constant [30 x i8] c"Escaped sequence: expecting \\\00", align 1, !dbg !329
@.str.119 = private unnamed_addr constant [14 x i8] c"Expecting '{'\00", align 1, !dbg !331
@.str.120 = private unnamed_addr constant [14 x i8] c"Expecting '}'\00", align 1, !dbg !333
@.str.121 = private unnamed_addr constant [47 x i8] c"Wrong escape sequence, misuse of character '\\'\00", align 1, !dbg !335
@.str.122 = private unnamed_addr constant [16 x i8] c"IsXXXX expected\00", align 1, !dbg !337
@.str.123 = private unnamed_addr constant [22 x i8] c"Unknown char property\00", align 1, !dbg !339
@.str.124 = private unnamed_addr constant [37 x i8] c"Invalid low surrogate pair code unit\00", align 1, !dbg !344
@.str.125 = private unnamed_addr constant [20 x i8] c"Expecting hex digit\00", align 1, !dbg !349
@.str.126 = private unnamed_addr constant [20 x i8] c"Improper quantifier\00", align 1, !dbg !351
@.str.127 = private unnamed_addr constant [24 x i8] c"Unterminated quantifier\00", align 1, !dbg !353
@.str.128 = private unnamed_addr constant [23 x i8] c"failed to compile: %s\0A\00", align 1, !dbg !355
@.str.129 = private unnamed_addr constant [17 x i8] c"compiling regexp\00", align 1, !dbg !357
@.str.130 = private unnamed_addr constant [15 x i8] c"running regexp\00", align 1, !dbg !359
@.str.131 = private unnamed_addr constant [25 x i8] c"TODO: XML_REGEXP_STRING\0A\00", align 1, !dbg !361
@xmlIsBaseCharGroup = external constant %struct._xmlChRangeGroup, align 8
@xmlIsDigitGroup = external constant %struct._xmlChRangeGroup, align 8
@xmlIsCombiningGroup = external constant %struct._xmlChRangeGroup, align 8
@xmlIsExtenderGroup = external constant %struct._xmlChRangeGroup, align 8
@.str.132 = private unnamed_addr constant [16 x i8] c"allocating atom\00", align 1, !dbg !366
@.str.133 = private unnamed_addr constant [34 x i8] c"generate transition: atom == NULL\00", align 1, !dbg !368
@.str.134 = private unnamed_addr constant [13 x i8] c"copying atom\00", align 1, !dbg !370
@.str.135 = private unnamed_addr constant [19 x i8] c"allocating counter\00", align 1, !dbg !372
@.str.136 = private unnamed_addr constant [25 x i8] c"add state: state is NULL\00", align 1, !dbg !377
@.str.137 = private unnamed_addr constant [26 x i8] c"add state: target is NULL\00", align 1, !dbg !379
@.str.138 = private unnamed_addr constant [18 x i8] c"adding transition\00", align 1, !dbg !384
@.str.139 = private unnamed_addr constant [24 x i8] c"atom push: atom is NULL\00", align 1, !dbg !386
@.str.140 = private unnamed_addr constant [13 x i8] c"pushing atom\00", align 1, !dbg !388

; Function Attrs: nounwind uwtable
define ptr @xmlRegNewExecCtxt(ptr noundef %comp, ptr noundef %callback, ptr noundef %data) #0 !dbg !1519 {
entry:
  %retval = alloca ptr, align 8
  %comp.addr = alloca ptr, align 8
  %callback.addr = alloca ptr, align 8
  %data.addr = alloca ptr, align 8
  %exec = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %comp, ptr %comp.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %comp.addr, metadata !1523, metadata !DIExpression()), !dbg !1531
  store ptr %callback, ptr %callback.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %callback.addr, metadata !1524, metadata !DIExpression()), !dbg !1532
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !1525, metadata !DIExpression()), !dbg !1533
  call void @llvm.lifetime.start.p0(i64 8, ptr %exec) #8, !dbg !1534
  tail call void @llvm.dbg.declare(metadata ptr %exec, metadata !1526, metadata !DIExpression()), !dbg !1535
  %0 = load ptr, ptr %comp.addr, align 8, !dbg !1536, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !1538
  br i1 %cmp, label %if.then, label %if.end, !dbg !1539

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !1540
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1540

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %comp.addr, align 8, !dbg !1541, !tbaa !1527
  %compact = getelementptr inbounds %struct._xmlRegexp, ptr %1, i32 0, i32 10, !dbg !1543
  %2 = load ptr, ptr %compact, align 8, !dbg !1543, !tbaa !1544
  %cmp1 = icmp eq ptr %2, null, !dbg !1547
  br i1 %cmp1, label %land.lhs.true, label %if.end4, !dbg !1548

land.lhs.true:                                    ; preds = %if.end
  %3 = load ptr, ptr %comp.addr, align 8, !dbg !1549, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlRegexp, ptr %3, i32 0, i32 2, !dbg !1550
  %4 = load ptr, ptr %states, align 8, !dbg !1550, !tbaa !1551
  %cmp2 = icmp eq ptr %4, null, !dbg !1552
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !1553

if.then3:                                         ; preds = %land.lhs.true
  store ptr null, ptr %retval, align 8, !dbg !1554
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1554

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %5 = load ptr, ptr @xmlMalloc, align 8, !dbg !1555, !tbaa !1527
  %call = call ptr %5(i64 noundef 152), !dbg !1555
  store ptr %call, ptr %exec, align 8, !dbg !1556, !tbaa !1527
  %6 = load ptr, ptr %exec, align 8, !dbg !1557, !tbaa !1527
  %cmp5 = icmp eq ptr %6, null, !dbg !1559
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !1560

if.then6:                                         ; preds = %if.end4
  call void @xmlRegexpErrMemory(ptr noundef null, ptr noundef @.str), !dbg !1561
  store ptr null, ptr %retval, align 8, !dbg !1563
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1563

if.end7:                                          ; preds = %if.end4
  %7 = load ptr, ptr %exec, align 8, !dbg !1564, !tbaa !1527
  call void @llvm.memset.p0.i64(ptr align 8 %7, i8 0, i64 152, i1 false), !dbg !1565
  %8 = load ptr, ptr %exec, align 8, !dbg !1566, !tbaa !1527
  %inputString = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %8, i32 0, i32 16, !dbg !1567
  store ptr null, ptr %inputString, align 8, !dbg !1568, !tbaa !1569
  %9 = load ptr, ptr %exec, align 8, !dbg !1571, !tbaa !1527
  %index = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %9, i32 0, i32 14, !dbg !1572
  store i32 0, ptr %index, align 8, !dbg !1573, !tbaa !1574
  %10 = load ptr, ptr %exec, align 8, !dbg !1575, !tbaa !1527
  %determinist = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %10, i32 0, i32 1, !dbg !1576
  store i32 1, ptr %determinist, align 4, !dbg !1577, !tbaa !1578
  %11 = load ptr, ptr %exec, align 8, !dbg !1579, !tbaa !1527
  %maxRollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %11, i32 0, i32 8, !dbg !1580
  store i32 0, ptr %maxRollbacks, align 8, !dbg !1581, !tbaa !1582
  %12 = load ptr, ptr %exec, align 8, !dbg !1583, !tbaa !1527
  %nbRollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %12, i32 0, i32 9, !dbg !1584
  store i32 0, ptr %nbRollbacks, align 4, !dbg !1585, !tbaa !1586
  %13 = load ptr, ptr %exec, align 8, !dbg !1587, !tbaa !1527
  %rollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %13, i32 0, i32 10, !dbg !1588
  store ptr null, ptr %rollbacks, align 8, !dbg !1589, !tbaa !1590
  %14 = load ptr, ptr %exec, align 8, !dbg !1591, !tbaa !1527
  %status = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %14, i32 0, i32 0, !dbg !1592
  store i32 0, ptr %status, align 8, !dbg !1593, !tbaa !1594
  %15 = load ptr, ptr %comp.addr, align 8, !dbg !1595, !tbaa !1527
  %16 = load ptr, ptr %exec, align 8, !dbg !1596, !tbaa !1527
  %comp8 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %16, i32 0, i32 2, !dbg !1597
  store ptr %15, ptr %comp8, align 8, !dbg !1598, !tbaa !1599
  %17 = load ptr, ptr %comp.addr, align 8, !dbg !1600, !tbaa !1527
  %compact9 = getelementptr inbounds %struct._xmlRegexp, ptr %17, i32 0, i32 10, !dbg !1602
  %18 = load ptr, ptr %compact9, align 8, !dbg !1602, !tbaa !1544
  %cmp10 = icmp eq ptr %18, null, !dbg !1603
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !1604

if.then11:                                        ; preds = %if.end7
  %19 = load ptr, ptr %comp.addr, align 8, !dbg !1605, !tbaa !1527
  %states12 = getelementptr inbounds %struct._xmlRegexp, ptr %19, i32 0, i32 2, !dbg !1606
  %20 = load ptr, ptr %states12, align 8, !dbg !1606, !tbaa !1551
  %arrayidx = getelementptr inbounds ptr, ptr %20, i64 0, !dbg !1605
  %21 = load ptr, ptr %arrayidx, align 8, !dbg !1605, !tbaa !1527
  %22 = load ptr, ptr %exec, align 8, !dbg !1607, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %22, i32 0, i32 5, !dbg !1608
  store ptr %21, ptr %state, align 8, !dbg !1609, !tbaa !1610
  br label %if.end13, !dbg !1607

if.end13:                                         ; preds = %if.then11, %if.end7
  %23 = load ptr, ptr %exec, align 8, !dbg !1611, !tbaa !1527
  %transno = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %23, i32 0, i32 6, !dbg !1612
  store i32 0, ptr %transno, align 8, !dbg !1613, !tbaa !1614
  %24 = load ptr, ptr %exec, align 8, !dbg !1615, !tbaa !1527
  %transcount = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %24, i32 0, i32 7, !dbg !1616
  store i32 0, ptr %transcount, align 4, !dbg !1617, !tbaa !1618
  %25 = load ptr, ptr %callback.addr, align 8, !dbg !1619, !tbaa !1527
  %26 = load ptr, ptr %exec, align 8, !dbg !1620, !tbaa !1527
  %callback14 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %26, i32 0, i32 3, !dbg !1621
  store ptr %25, ptr %callback14, align 8, !dbg !1622, !tbaa !1623
  %27 = load ptr, ptr %data.addr, align 8, !dbg !1624, !tbaa !1527
  %28 = load ptr, ptr %exec, align 8, !dbg !1625, !tbaa !1527
  %data15 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %28, i32 0, i32 4, !dbg !1626
  store ptr %27, ptr %data15, align 8, !dbg !1627, !tbaa !1628
  %29 = load ptr, ptr %comp.addr, align 8, !dbg !1629, !tbaa !1527
  %nbCounters = getelementptr inbounds %struct._xmlRegexp, ptr %29, i32 0, i32 5, !dbg !1631
  %30 = load i32, ptr %nbCounters, align 8, !dbg !1631, !tbaa !1632
  %cmp16 = icmp sgt i32 %30, 0, !dbg !1633
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !1634

if.then17:                                        ; preds = %if.end13
  %31 = load ptr, ptr @xmlMalloc, align 8, !dbg !1635, !tbaa !1527
  %32 = load ptr, ptr %comp.addr, align 8, !dbg !1637, !tbaa !1527
  %nbCounters18 = getelementptr inbounds %struct._xmlRegexp, ptr %32, i32 0, i32 5, !dbg !1638
  %33 = load i32, ptr %nbCounters18, align 8, !dbg !1638, !tbaa !1632
  %conv = sext i32 %33 to i64, !dbg !1637
  %mul = mul i64 %conv, 4, !dbg !1639
  %mul19 = mul i64 %mul, 2, !dbg !1640
  %call20 = call ptr %31(i64 noundef %mul19), !dbg !1635
  %34 = load ptr, ptr %exec, align 8, !dbg !1641, !tbaa !1527
  %counts = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %34, i32 0, i32 11, !dbg !1642
  store ptr %call20, ptr %counts, align 8, !dbg !1643, !tbaa !1644
  %35 = load ptr, ptr %exec, align 8, !dbg !1645, !tbaa !1527
  %counts21 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %35, i32 0, i32 11, !dbg !1647
  %36 = load ptr, ptr %counts21, align 8, !dbg !1647, !tbaa !1644
  %cmp22 = icmp eq ptr %36, null, !dbg !1648
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !1649

if.then24:                                        ; preds = %if.then17
  call void @xmlRegexpErrMemory(ptr noundef null, ptr noundef @.str), !dbg !1650
  %37 = load ptr, ptr @xmlFree, align 8, !dbg !1652, !tbaa !1527
  %38 = load ptr, ptr %exec, align 8, !dbg !1653, !tbaa !1527
  call void %37(ptr noundef %38), !dbg !1652
  store ptr null, ptr %retval, align 8, !dbg !1654
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1654

if.end25:                                         ; preds = %if.then17
  %39 = load ptr, ptr %exec, align 8, !dbg !1655, !tbaa !1527
  %counts26 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %39, i32 0, i32 11, !dbg !1656
  %40 = load ptr, ptr %counts26, align 8, !dbg !1656, !tbaa !1644
  %41 = load ptr, ptr %comp.addr, align 8, !dbg !1657, !tbaa !1527
  %nbCounters27 = getelementptr inbounds %struct._xmlRegexp, ptr %41, i32 0, i32 5, !dbg !1658
  %42 = load i32, ptr %nbCounters27, align 8, !dbg !1658, !tbaa !1632
  %conv28 = sext i32 %42 to i64, !dbg !1657
  %mul29 = mul i64 %conv28, 4, !dbg !1659
  %mul30 = mul i64 %mul29, 2, !dbg !1660
  call void @llvm.memset.p0.i64(ptr align 4 %40, i8 0, i64 %mul30, i1 false), !dbg !1661
  %43 = load ptr, ptr %exec, align 8, !dbg !1662, !tbaa !1527
  %counts31 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %43, i32 0, i32 11, !dbg !1663
  %44 = load ptr, ptr %counts31, align 8, !dbg !1663, !tbaa !1644
  %45 = load ptr, ptr %comp.addr, align 8, !dbg !1664, !tbaa !1527
  %nbCounters32 = getelementptr inbounds %struct._xmlRegexp, ptr %45, i32 0, i32 5, !dbg !1665
  %46 = load i32, ptr %nbCounters32, align 8, !dbg !1665, !tbaa !1632
  %idxprom = sext i32 %46 to i64, !dbg !1662
  %arrayidx33 = getelementptr inbounds i32, ptr %44, i64 %idxprom, !dbg !1662
  %47 = load ptr, ptr %exec, align 8, !dbg !1666, !tbaa !1527
  %errCounts = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %47, i32 0, i32 21, !dbg !1667
  store ptr %arrayidx33, ptr %errCounts, align 8, !dbg !1668, !tbaa !1669
  br label %if.end36, !dbg !1670

if.else:                                          ; preds = %if.end13
  %48 = load ptr, ptr %exec, align 8, !dbg !1671, !tbaa !1527
  %counts34 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %48, i32 0, i32 11, !dbg !1673
  store ptr null, ptr %counts34, align 8, !dbg !1674, !tbaa !1644
  %49 = load ptr, ptr %exec, align 8, !dbg !1675, !tbaa !1527
  %errCounts35 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %49, i32 0, i32 21, !dbg !1676
  store ptr null, ptr %errCounts35, align 8, !dbg !1677, !tbaa !1669
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.end25
  %50 = load ptr, ptr %exec, align 8, !dbg !1678, !tbaa !1527
  %inputStackMax = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %50, i32 0, i32 12, !dbg !1679
  store i32 0, ptr %inputStackMax, align 8, !dbg !1680, !tbaa !1681
  %51 = load ptr, ptr %exec, align 8, !dbg !1682, !tbaa !1527
  %inputStackNr = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %51, i32 0, i32 13, !dbg !1683
  store i32 0, ptr %inputStackNr, align 4, !dbg !1684, !tbaa !1685
  %52 = load ptr, ptr %exec, align 8, !dbg !1686, !tbaa !1527
  %inputStack = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %52, i32 0, i32 17, !dbg !1687
  store ptr null, ptr %inputStack, align 8, !dbg !1688, !tbaa !1689
  %53 = load ptr, ptr %exec, align 8, !dbg !1690, !tbaa !1527
  %errStateNo = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %53, i32 0, i32 18, !dbg !1691
  store i32 -1, ptr %errStateNo, align 8, !dbg !1692, !tbaa !1693
  %54 = load ptr, ptr %exec, align 8, !dbg !1694, !tbaa !1527
  %errString = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %54, i32 0, i32 20, !dbg !1695
  store ptr null, ptr %errString, align 8, !dbg !1696, !tbaa !1697
  %55 = load ptr, ptr %exec, align 8, !dbg !1698, !tbaa !1527
  %nbPush = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %55, i32 0, i32 22, !dbg !1699
  store i32 0, ptr %nbPush, align 8, !dbg !1700, !tbaa !1701
  %56 = load ptr, ptr %exec, align 8, !dbg !1702, !tbaa !1527
  store ptr %56, ptr %retval, align 8, !dbg !1703
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1703

cleanup:                                          ; preds = %if.end36, %if.then24, %if.then6, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %exec) #8, !dbg !1704
  %57 = load ptr, ptr %retval, align 8, !dbg !1704
  ret ptr %57, !dbg !1704
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind uwtable
define internal void @xmlRegexpErrMemory(ptr noundef %ctxt, ptr noundef %extra) #0 !dbg !1705 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %extra.addr = alloca ptr, align 8
  %regexp = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !1709, metadata !DIExpression()), !dbg !1712
  store ptr %extra, ptr %extra.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %extra.addr, metadata !1710, metadata !DIExpression()), !dbg !1713
  call void @llvm.lifetime.start.p0(i64 8, ptr %regexp) #8, !dbg !1714
  tail call void @llvm.dbg.declare(metadata ptr %regexp, metadata !1711, metadata !DIExpression()), !dbg !1715
  store ptr null, ptr %regexp, align 8, !dbg !1715, !tbaa !1527
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !1716, !tbaa !1527
  %cmp = icmp ne ptr %0, null, !dbg !1718
  br i1 %cmp, label %if.then, label %if.end, !dbg !1719

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !1720, !tbaa !1527
  %string = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 0, !dbg !1722
  %2 = load ptr, ptr %string, align 8, !dbg !1722, !tbaa !1723
  store ptr %2, ptr %regexp, align 8, !dbg !1725, !tbaa !1527
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !1726, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 2, !dbg !1727
  store i32 2, ptr %error, align 8, !dbg !1728, !tbaa !1729
  br label %if.end, !dbg !1730

if.end:                                           ; preds = %if.then, %entry
  %4 = load ptr, ptr %extra.addr, align 8, !dbg !1731, !tbaa !1527
  %5 = load ptr, ptr %regexp, align 8, !dbg !1732, !tbaa !1527
  %6 = load ptr, ptr %extra.addr, align 8, !dbg !1733, !tbaa !1527
  call void (ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, i32, ptr, ptr, ptr, i32, i32, ptr, ...) @__xmlRaiseError(ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef 14, i32 noundef 2, i32 noundef 3, ptr noundef null, i32 noundef 0, ptr noundef %4, ptr noundef %5, ptr noundef null, i32 noundef 0, i32 noundef 0, ptr noundef @.str.12, ptr noundef %6), !dbg !1734
  call void @llvm.lifetime.end.p0(i64 8, ptr %regexp) #8, !dbg !1735
  ret void, !dbg !1735
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind uwtable
define void @xmlRegFreeExecCtxt(ptr noundef %exec) #0 !dbg !1736 {
entry:
  %exec.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %i25 = alloca i32, align 4
  store ptr %exec, ptr %exec.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %exec.addr, metadata !1740, metadata !DIExpression()), !dbg !1749
  %0 = load ptr, ptr %exec.addr, align 8, !dbg !1750, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !1752
  br i1 %cmp, label %if.then, label %if.end, !dbg !1753

if.then:                                          ; preds = %entry
  br label %return, !dbg !1754

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %exec.addr, align 8, !dbg !1755, !tbaa !1527
  %rollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %1, i32 0, i32 10, !dbg !1756
  %2 = load ptr, ptr %rollbacks, align 8, !dbg !1756, !tbaa !1590
  %cmp1 = icmp ne ptr %2, null, !dbg !1757
  br i1 %cmp1, label %if.then2, label %if.end17, !dbg !1758

if.then2:                                         ; preds = %if.end
  %3 = load ptr, ptr %exec.addr, align 8, !dbg !1759, !tbaa !1527
  %counts = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %3, i32 0, i32 11, !dbg !1760
  %4 = load ptr, ptr %counts, align 8, !dbg !1760, !tbaa !1644
  %cmp3 = icmp ne ptr %4, null, !dbg !1761
  br i1 %cmp3, label %if.then4, label %if.end15, !dbg !1762

if.then4:                                         ; preds = %if.then2
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !1763
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !1741, metadata !DIExpression()), !dbg !1764
  store i32 0, ptr %i, align 4, !dbg !1765, !tbaa !1767
  br label %for.cond, !dbg !1768

for.cond:                                         ; preds = %for.inc, %if.then4
  %5 = load i32, ptr %i, align 4, !dbg !1769, !tbaa !1767
  %6 = load ptr, ptr %exec.addr, align 8, !dbg !1771, !tbaa !1527
  %maxRollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %6, i32 0, i32 8, !dbg !1772
  %7 = load i32, ptr %maxRollbacks, align 8, !dbg !1772, !tbaa !1582
  %cmp5 = icmp slt i32 %5, %7, !dbg !1773
  br i1 %cmp5, label %for.body, label %for.end, !dbg !1774

for.body:                                         ; preds = %for.cond
  %8 = load ptr, ptr %exec.addr, align 8, !dbg !1775, !tbaa !1527
  %rollbacks6 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %8, i32 0, i32 10, !dbg !1777
  %9 = load ptr, ptr %rollbacks6, align 8, !dbg !1777, !tbaa !1590
  %10 = load i32, ptr %i, align 4, !dbg !1778, !tbaa !1767
  %idxprom = sext i32 %10 to i64, !dbg !1775
  %arrayidx = getelementptr inbounds %struct._xmlRegExecRollback, ptr %9, i64 %idxprom, !dbg !1775
  %counts7 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx, i32 0, i32 3, !dbg !1779
  %11 = load ptr, ptr %counts7, align 8, !dbg !1779, !tbaa !1780
  %cmp8 = icmp ne ptr %11, null, !dbg !1782
  br i1 %cmp8, label %if.then9, label %if.end14, !dbg !1783

if.then9:                                         ; preds = %for.body
  %12 = load ptr, ptr @xmlFree, align 8, !dbg !1784, !tbaa !1527
  %13 = load ptr, ptr %exec.addr, align 8, !dbg !1785, !tbaa !1527
  %rollbacks10 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %13, i32 0, i32 10, !dbg !1786
  %14 = load ptr, ptr %rollbacks10, align 8, !dbg !1786, !tbaa !1590
  %15 = load i32, ptr %i, align 4, !dbg !1787, !tbaa !1767
  %idxprom11 = sext i32 %15 to i64, !dbg !1785
  %arrayidx12 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %14, i64 %idxprom11, !dbg !1785
  %counts13 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx12, i32 0, i32 3, !dbg !1788
  %16 = load ptr, ptr %counts13, align 8, !dbg !1788, !tbaa !1780
  call void %12(ptr noundef %16), !dbg !1784
  br label %if.end14, !dbg !1784

if.end14:                                         ; preds = %if.then9, %for.body
  br label %for.inc, !dbg !1789

for.inc:                                          ; preds = %if.end14
  %17 = load i32, ptr %i, align 4, !dbg !1790, !tbaa !1767
  %inc = add nsw i32 %17, 1, !dbg !1790
  store i32 %inc, ptr %i, align 4, !dbg !1790, !tbaa !1767
  br label %for.cond, !dbg !1791, !llvm.loop !1792

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !1795
  br label %if.end15, !dbg !1796

if.end15:                                         ; preds = %for.end, %if.then2
  %18 = load ptr, ptr @xmlFree, align 8, !dbg !1797, !tbaa !1527
  %19 = load ptr, ptr %exec.addr, align 8, !dbg !1798, !tbaa !1527
  %rollbacks16 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %19, i32 0, i32 10, !dbg !1799
  %20 = load ptr, ptr %rollbacks16, align 8, !dbg !1799, !tbaa !1590
  call void %18(ptr noundef %20), !dbg !1797
  br label %if.end17, !dbg !1800

if.end17:                                         ; preds = %if.end15, %if.end
  %21 = load ptr, ptr %exec.addr, align 8, !dbg !1801, !tbaa !1527
  %counts18 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %21, i32 0, i32 11, !dbg !1803
  %22 = load ptr, ptr %counts18, align 8, !dbg !1803, !tbaa !1644
  %cmp19 = icmp ne ptr %22, null, !dbg !1804
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !1805

if.then20:                                        ; preds = %if.end17
  %23 = load ptr, ptr @xmlFree, align 8, !dbg !1806, !tbaa !1527
  %24 = load ptr, ptr %exec.addr, align 8, !dbg !1807, !tbaa !1527
  %counts21 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %24, i32 0, i32 11, !dbg !1808
  %25 = load ptr, ptr %counts21, align 8, !dbg !1808, !tbaa !1644
  call void %23(ptr noundef %25), !dbg !1806
  br label %if.end22, !dbg !1806

if.end22:                                         ; preds = %if.then20, %if.end17
  %26 = load ptr, ptr %exec.addr, align 8, !dbg !1809, !tbaa !1527
  %inputStack = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %26, i32 0, i32 17, !dbg !1810
  %27 = load ptr, ptr %inputStack, align 8, !dbg !1810, !tbaa !1689
  %cmp23 = icmp ne ptr %27, null, !dbg !1811
  br i1 %cmp23, label %if.then24, label %if.end43, !dbg !1812

if.then24:                                        ; preds = %if.end22
  call void @llvm.lifetime.start.p0(i64 4, ptr %i25) #8, !dbg !1813
  tail call void @llvm.dbg.declare(metadata ptr %i25, metadata !1746, metadata !DIExpression()), !dbg !1814
  store i32 0, ptr %i25, align 4, !dbg !1815, !tbaa !1767
  br label %for.cond26, !dbg !1817

for.cond26:                                       ; preds = %for.inc39, %if.then24
  %28 = load i32, ptr %i25, align 4, !dbg !1818, !tbaa !1767
  %29 = load ptr, ptr %exec.addr, align 8, !dbg !1820, !tbaa !1527
  %inputStackNr = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %29, i32 0, i32 13, !dbg !1821
  %30 = load i32, ptr %inputStackNr, align 4, !dbg !1821, !tbaa !1685
  %cmp27 = icmp slt i32 %28, %30, !dbg !1822
  br i1 %cmp27, label %for.body28, label %for.end41, !dbg !1823

for.body28:                                       ; preds = %for.cond26
  %31 = load ptr, ptr %exec.addr, align 8, !dbg !1824, !tbaa !1527
  %inputStack29 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %31, i32 0, i32 17, !dbg !1827
  %32 = load ptr, ptr %inputStack29, align 8, !dbg !1827, !tbaa !1689
  %33 = load i32, ptr %i25, align 4, !dbg !1828, !tbaa !1767
  %idxprom30 = sext i32 %33 to i64, !dbg !1824
  %arrayidx31 = getelementptr inbounds %struct._xmlRegInputToken, ptr %32, i64 %idxprom30, !dbg !1824
  %value = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx31, i32 0, i32 0, !dbg !1829
  %34 = load ptr, ptr %value, align 8, !dbg !1829, !tbaa !1830
  %cmp32 = icmp ne ptr %34, null, !dbg !1832
  br i1 %cmp32, label %if.then33, label %if.end38, !dbg !1833

if.then33:                                        ; preds = %for.body28
  %35 = load ptr, ptr @xmlFree, align 8, !dbg !1834, !tbaa !1527
  %36 = load ptr, ptr %exec.addr, align 8, !dbg !1835, !tbaa !1527
  %inputStack34 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %36, i32 0, i32 17, !dbg !1836
  %37 = load ptr, ptr %inputStack34, align 8, !dbg !1836, !tbaa !1689
  %38 = load i32, ptr %i25, align 4, !dbg !1837, !tbaa !1767
  %idxprom35 = sext i32 %38 to i64, !dbg !1835
  %arrayidx36 = getelementptr inbounds %struct._xmlRegInputToken, ptr %37, i64 %idxprom35, !dbg !1835
  %value37 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx36, i32 0, i32 0, !dbg !1838
  %39 = load ptr, ptr %value37, align 8, !dbg !1838, !tbaa !1830
  call void %35(ptr noundef %39), !dbg !1834
  br label %if.end38, !dbg !1834

if.end38:                                         ; preds = %if.then33, %for.body28
  br label %for.inc39, !dbg !1839

for.inc39:                                        ; preds = %if.end38
  %40 = load i32, ptr %i25, align 4, !dbg !1840, !tbaa !1767
  %inc40 = add nsw i32 %40, 1, !dbg !1840
  store i32 %inc40, ptr %i25, align 4, !dbg !1840, !tbaa !1767
  br label %for.cond26, !dbg !1841, !llvm.loop !1842

for.end41:                                        ; preds = %for.cond26
  %41 = load ptr, ptr @xmlFree, align 8, !dbg !1844, !tbaa !1527
  %42 = load ptr, ptr %exec.addr, align 8, !dbg !1845, !tbaa !1527
  %inputStack42 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %42, i32 0, i32 17, !dbg !1846
  %43 = load ptr, ptr %inputStack42, align 8, !dbg !1846, !tbaa !1689
  call void %41(ptr noundef %43), !dbg !1844
  call void @llvm.lifetime.end.p0(i64 4, ptr %i25) #8, !dbg !1847
  br label %if.end43, !dbg !1848

if.end43:                                         ; preds = %for.end41, %if.end22
  %44 = load ptr, ptr %exec.addr, align 8, !dbg !1849, !tbaa !1527
  %errString = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %44, i32 0, i32 20, !dbg !1851
  %45 = load ptr, ptr %errString, align 8, !dbg !1851, !tbaa !1697
  %cmp44 = icmp ne ptr %45, null, !dbg !1852
  br i1 %cmp44, label %if.then45, label %if.end47, !dbg !1853

if.then45:                                        ; preds = %if.end43
  %46 = load ptr, ptr @xmlFree, align 8, !dbg !1854, !tbaa !1527
  %47 = load ptr, ptr %exec.addr, align 8, !dbg !1855, !tbaa !1527
  %errString46 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %47, i32 0, i32 20, !dbg !1856
  %48 = load ptr, ptr %errString46, align 8, !dbg !1856, !tbaa !1697
  call void %46(ptr noundef %48), !dbg !1854
  br label %if.end47, !dbg !1854

if.end47:                                         ; preds = %if.then45, %if.end43
  %49 = load ptr, ptr @xmlFree, align 8, !dbg !1857, !tbaa !1527
  %50 = load ptr, ptr %exec.addr, align 8, !dbg !1858, !tbaa !1527
  call void %49(ptr noundef %50), !dbg !1857
  br label %return, !dbg !1859

return:                                           ; preds = %if.end47, %if.then
  ret void, !dbg !1859
}

; Function Attrs: nounwind uwtable
define i32 @xmlRegExecPushString(ptr noundef %exec, ptr noundef %value, ptr noundef %data) #0 !dbg !1860 {
entry:
  %exec.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %data.addr = alloca ptr, align 8
  store ptr %exec, ptr %exec.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %exec.addr, metadata !1864, metadata !DIExpression()), !dbg !1867
  store ptr %value, ptr %value.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !1865, metadata !DIExpression()), !dbg !1868
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !1866, metadata !DIExpression()), !dbg !1869
  %0 = load ptr, ptr %exec.addr, align 8, !dbg !1870, !tbaa !1527
  %1 = load ptr, ptr %value.addr, align 8, !dbg !1871, !tbaa !1527
  %2 = load ptr, ptr %data.addr, align 8, !dbg !1872, !tbaa !1527
  %call = call i32 @xmlRegExecPushStringInternal(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef 0), !dbg !1873
  ret i32 %call, !dbg !1874
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlRegExecPushStringInternal(ptr noundef %exec, ptr noundef %value, ptr noundef %data, i32 noundef %compound) #0 !dbg !1875 {
entry:
  %retval = alloca i32, align 4
  %exec.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %data.addr = alloca ptr, align 8
  %compound.addr = alloca i32, align 4
  %trans = alloca ptr, align 8
  %atom = alloca ptr, align 8
  %ret = alloca i32, align 4
  %final = alloca i32, align 4
  %progress = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i32, align 4
  %count56 = alloca i32, align 4
  %t = alloca ptr, align 8
  %counter = alloca ptr, align 8
  %i114 = alloca i32, align 4
  %count115 = alloca i32, align 4
  %t116 = alloca ptr, align 8
  %counter117 = alloca ptr, align 8
  %count156 = alloca i32, align 4
  %counter157 = alloca ptr, align 8
  %counter195 = alloca ptr, align 8
  %count196 = alloca i32, align 4
  %to219 = alloca ptr, align 8
  %transno260 = alloca i32, align 4
  %state262 = alloca ptr, align 8
  store ptr %exec, ptr %exec.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %exec.addr, metadata !1879, metadata !DIExpression()), !dbg !1929
  store ptr %value, ptr %value.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !1880, metadata !DIExpression()), !dbg !1930
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !1881, metadata !DIExpression()), !dbg !1931
  store i32 %compound, ptr %compound.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %compound.addr, metadata !1882, metadata !DIExpression()), !dbg !1932
  call void @llvm.lifetime.start.p0(i64 8, ptr %trans) #8, !dbg !1933
  tail call void @llvm.dbg.declare(metadata ptr %trans, metadata !1883, metadata !DIExpression()), !dbg !1934
  call void @llvm.lifetime.start.p0(i64 8, ptr %atom) #8, !dbg !1935
  tail call void @llvm.dbg.declare(metadata ptr %atom, metadata !1885, metadata !DIExpression()), !dbg !1936
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !1937
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1886, metadata !DIExpression()), !dbg !1938
  call void @llvm.lifetime.start.p0(i64 4, ptr %final) #8, !dbg !1939
  tail call void @llvm.dbg.declare(metadata ptr %final, metadata !1887, metadata !DIExpression()), !dbg !1940
  store i32 0, ptr %final, align 4, !dbg !1940, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 4, ptr %progress) #8, !dbg !1941
  tail call void @llvm.dbg.declare(metadata ptr %progress, metadata !1888, metadata !DIExpression()), !dbg !1942
  store i32 1, ptr %progress, align 4, !dbg !1942, !tbaa !1767
  %0 = load ptr, ptr %exec.addr, align 8, !dbg !1943, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !1945
  br i1 %cmp, label %if.then, label %if.end, !dbg !1946

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !1947
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup485, !dbg !1947

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %exec.addr, align 8, !dbg !1948, !tbaa !1527
  %comp = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %1, i32 0, i32 2, !dbg !1950
  %2 = load ptr, ptr %comp, align 8, !dbg !1950, !tbaa !1599
  %cmp1 = icmp eq ptr %2, null, !dbg !1951
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !1952

if.then2:                                         ; preds = %if.end
  store i32 -1, ptr %retval, align 4, !dbg !1953
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup485, !dbg !1953

if.end3:                                          ; preds = %if.end
  %3 = load ptr, ptr %exec.addr, align 8, !dbg !1954, !tbaa !1527
  %status = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %3, i32 0, i32 0, !dbg !1956
  %4 = load i32, ptr %status, align 8, !dbg !1956, !tbaa !1594
  %cmp4 = icmp ne i32 %4, 0, !dbg !1957
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !1958

if.then5:                                         ; preds = %if.end3
  %5 = load ptr, ptr %exec.addr, align 8, !dbg !1959, !tbaa !1527
  %status6 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %5, i32 0, i32 0, !dbg !1960
  %6 = load i32, ptr %status6, align 8, !dbg !1960, !tbaa !1594
  store i32 %6, ptr %retval, align 4, !dbg !1961
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup485, !dbg !1961

if.end7:                                          ; preds = %if.end3
  %7 = load ptr, ptr %exec.addr, align 8, !dbg !1962, !tbaa !1527
  %comp8 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %7, i32 0, i32 2, !dbg !1964
  %8 = load ptr, ptr %comp8, align 8, !dbg !1964, !tbaa !1599
  %compact = getelementptr inbounds %struct._xmlRegexp, ptr %8, i32 0, i32 10, !dbg !1965
  %9 = load ptr, ptr %compact, align 8, !dbg !1965, !tbaa !1544
  %cmp9 = icmp ne ptr %9, null, !dbg !1966
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !1967

if.then10:                                        ; preds = %if.end7
  %10 = load ptr, ptr %exec.addr, align 8, !dbg !1968, !tbaa !1527
  %11 = load ptr, ptr %exec.addr, align 8, !dbg !1969, !tbaa !1527
  %comp11 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %11, i32 0, i32 2, !dbg !1970
  %12 = load ptr, ptr %comp11, align 8, !dbg !1970, !tbaa !1599
  %13 = load ptr, ptr %value.addr, align 8, !dbg !1971, !tbaa !1527
  %14 = load ptr, ptr %data.addr, align 8, !dbg !1972, !tbaa !1527
  %call = call i32 @xmlRegCompactPushString(ptr noundef %10, ptr noundef %12, ptr noundef %13, ptr noundef %14), !dbg !1973
  store i32 %call, ptr %retval, align 4, !dbg !1974
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup485, !dbg !1974

if.end12:                                         ; preds = %if.end7
  %15 = load ptr, ptr %value.addr, align 8, !dbg !1975, !tbaa !1527
  %cmp13 = icmp eq ptr %15, null, !dbg !1977
  br i1 %cmp13, label %if.then14, label %if.end18, !dbg !1978

if.then14:                                        ; preds = %if.end12
  %16 = load ptr, ptr %exec.addr, align 8, !dbg !1979, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %16, i32 0, i32 5, !dbg !1982
  %17 = load ptr, ptr %state, align 8, !dbg !1982, !tbaa !1610
  %type = getelementptr inbounds %struct._xmlAutomataState, ptr %17, i32 0, i32 0, !dbg !1983
  %18 = load i32, ptr %type, align 8, !dbg !1983, !tbaa !1984
  %cmp15 = icmp eq i32 %18, 2, !dbg !1986
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !1987

if.then16:                                        ; preds = %if.then14
  store i32 1, ptr %retval, align 4, !dbg !1988
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup485, !dbg !1988

if.end17:                                         ; preds = %if.then14
  store i32 1, ptr %final, align 4, !dbg !1989, !tbaa !1767
  br label %if.end18, !dbg !1990

if.end18:                                         ; preds = %if.end17, %if.end12
  %19 = load ptr, ptr %value.addr, align 8, !dbg !1991, !tbaa !1527
  %cmp19 = icmp ne ptr %19, null, !dbg !1993
  br i1 %cmp19, label %land.lhs.true, label %if.end28, !dbg !1994

land.lhs.true:                                    ; preds = %if.end18
  %20 = load ptr, ptr %exec.addr, align 8, !dbg !1995, !tbaa !1527
  %inputStackNr = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %20, i32 0, i32 13, !dbg !1996
  %21 = load i32, ptr %inputStackNr, align 4, !dbg !1996, !tbaa !1685
  %cmp20 = icmp sgt i32 %21, 0, !dbg !1997
  br i1 %cmp20, label %if.then21, label %if.end28, !dbg !1998

if.then21:                                        ; preds = %land.lhs.true
  %22 = load ptr, ptr %exec.addr, align 8, !dbg !1999, !tbaa !1527
  %23 = load ptr, ptr %value.addr, align 8, !dbg !2001, !tbaa !1527
  %24 = load ptr, ptr %data.addr, align 8, !dbg !2002, !tbaa !1527
  call void @xmlFARegExecSaveInputString(ptr noundef %22, ptr noundef %23, ptr noundef %24), !dbg !2003
  %25 = load ptr, ptr %exec.addr, align 8, !dbg !2004, !tbaa !1527
  %inputStack = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %25, i32 0, i32 17, !dbg !2005
  %26 = load ptr, ptr %inputStack, align 8, !dbg !2005, !tbaa !1689
  %27 = load ptr, ptr %exec.addr, align 8, !dbg !2006, !tbaa !1527
  %index = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %27, i32 0, i32 14, !dbg !2007
  %28 = load i32, ptr %index, align 8, !dbg !2007, !tbaa !1574
  %idxprom = sext i32 %28 to i64, !dbg !2004
  %arrayidx = getelementptr inbounds %struct._xmlRegInputToken, ptr %26, i64 %idxprom, !dbg !2004
  %value22 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx, i32 0, i32 0, !dbg !2008
  %29 = load ptr, ptr %value22, align 8, !dbg !2008, !tbaa !1830
  store ptr %29, ptr %value.addr, align 8, !dbg !2009, !tbaa !1527
  %30 = load ptr, ptr %exec.addr, align 8, !dbg !2010, !tbaa !1527
  %inputStack23 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %30, i32 0, i32 17, !dbg !2011
  %31 = load ptr, ptr %inputStack23, align 8, !dbg !2011, !tbaa !1689
  %32 = load ptr, ptr %exec.addr, align 8, !dbg !2012, !tbaa !1527
  %index24 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %32, i32 0, i32 14, !dbg !2013
  %33 = load i32, ptr %index24, align 8, !dbg !2013, !tbaa !1574
  %idxprom25 = sext i32 %33 to i64, !dbg !2010
  %arrayidx26 = getelementptr inbounds %struct._xmlRegInputToken, ptr %31, i64 %idxprom25, !dbg !2010
  %data27 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx26, i32 0, i32 1, !dbg !2014
  %34 = load ptr, ptr %data27, align 8, !dbg !2014, !tbaa !2015
  store ptr %34, ptr %data.addr, align 8, !dbg !2016, !tbaa !1527
  br label %if.end28, !dbg !2017

if.end28:                                         ; preds = %if.then21, %land.lhs.true, %if.end18
  br label %while.cond, !dbg !2018

while.cond:                                       ; preds = %progress474, %if.end473, %if.end28
  %35 = load ptr, ptr %exec.addr, align 8, !dbg !2019, !tbaa !1527
  %status29 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %35, i32 0, i32 0, !dbg !2020
  %36 = load i32, ptr %status29, align 8, !dbg !2020, !tbaa !1594
  %cmp30 = icmp eq i32 %36, 0, !dbg !2021
  br i1 %cmp30, label %land.rhs, label %land.end37, !dbg !2022

land.rhs:                                         ; preds = %while.cond
  %37 = load ptr, ptr %value.addr, align 8, !dbg !2023, !tbaa !1527
  %cmp31 = icmp ne ptr %37, null, !dbg !2024
  br i1 %cmp31, label %lor.end, label %lor.rhs, !dbg !2025

lor.rhs:                                          ; preds = %land.rhs
  %38 = load i32, ptr %final, align 4, !dbg !2026, !tbaa !1767
  %cmp32 = icmp eq i32 %38, 1, !dbg !2027
  br i1 %cmp32, label %land.rhs33, label %land.end, !dbg !2028

land.rhs33:                                       ; preds = %lor.rhs
  %39 = load ptr, ptr %exec.addr, align 8, !dbg !2029, !tbaa !1527
  %state34 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %39, i32 0, i32 5, !dbg !2030
  %40 = load ptr, ptr %state34, align 8, !dbg !2030, !tbaa !1610
  %type35 = getelementptr inbounds %struct._xmlAutomataState, ptr %40, i32 0, i32 0, !dbg !2031
  %41 = load i32, ptr %type35, align 8, !dbg !2031, !tbaa !1984
  %cmp36 = icmp ne i32 %41, 2, !dbg !2032
  br label %land.end

land.end:                                         ; preds = %land.rhs33, %lor.rhs
  %42 = phi i1 [ false, %lor.rhs ], [ %cmp36, %land.rhs33 ], !dbg !2033
  br label %lor.end, !dbg !2025

lor.end:                                          ; preds = %land.end, %land.rhs
  %43 = phi i1 [ true, %land.rhs ], [ %42, %land.end ]
  br label %land.end37

land.end37:                                       ; preds = %lor.end, %while.cond
  %44 = phi i1 [ false, %while.cond ], [ %43, %lor.end ], !dbg !2033
  br i1 %44, label %while.body, label %while.end, !dbg !2018

while.body:                                       ; preds = %land.end37
  %45 = load ptr, ptr %value.addr, align 8, !dbg !2034, !tbaa !1527
  %cmp38 = icmp eq ptr %45, null, !dbg !2036
  br i1 %cmp38, label %land.lhs.true39, label %if.end42, !dbg !2037

land.lhs.true39:                                  ; preds = %while.body
  %46 = load ptr, ptr %exec.addr, align 8, !dbg !2038, !tbaa !1527
  %counts = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %46, i32 0, i32 11, !dbg !2039
  %47 = load ptr, ptr %counts, align 8, !dbg !2039, !tbaa !1644
  %cmp40 = icmp eq ptr %47, null, !dbg !2040
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !2041

if.then41:                                        ; preds = %land.lhs.true39
  br label %rollback, !dbg !2042

if.end42:                                         ; preds = %land.lhs.true39, %while.body
  %48 = load ptr, ptr %exec.addr, align 8, !dbg !2043, !tbaa !1527
  %transcount = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %48, i32 0, i32 7, !dbg !2044
  store i32 0, ptr %transcount, align 4, !dbg !2045, !tbaa !1618
  br label %for.cond, !dbg !2046

for.cond:                                         ; preds = %for.inc408, %if.end42
  %49 = load ptr, ptr %exec.addr, align 8, !dbg !2047, !tbaa !1527
  %transno = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %49, i32 0, i32 6, !dbg !2048
  %50 = load i32, ptr %transno, align 8, !dbg !2048, !tbaa !1614
  %51 = load ptr, ptr %exec.addr, align 8, !dbg !2049, !tbaa !1527
  %state43 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %51, i32 0, i32 5, !dbg !2050
  %52 = load ptr, ptr %state43, align 8, !dbg !2050, !tbaa !1610
  %nbTrans = getelementptr inbounds %struct._xmlAutomataState, ptr %52, i32 0, i32 6, !dbg !2051
  %53 = load i32, ptr %nbTrans, align 8, !dbg !2051, !tbaa !2052
  %cmp44 = icmp slt i32 %50, %53, !dbg !2053
  br i1 %cmp44, label %for.body, label %for.end411, !dbg !2054

for.body:                                         ; preds = %for.cond
  %54 = load ptr, ptr %exec.addr, align 8, !dbg !2055, !tbaa !1527
  %state45 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %54, i32 0, i32 5, !dbg !2056
  %55 = load ptr, ptr %state45, align 8, !dbg !2056, !tbaa !1610
  %trans46 = getelementptr inbounds %struct._xmlAutomataState, ptr %55, i32 0, i32 7, !dbg !2057
  %56 = load ptr, ptr %trans46, align 8, !dbg !2057, !tbaa !2058
  %57 = load ptr, ptr %exec.addr, align 8, !dbg !2059, !tbaa !1527
  %transno47 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %57, i32 0, i32 6, !dbg !2060
  %58 = load i32, ptr %transno47, align 8, !dbg !2060, !tbaa !1614
  %idxprom48 = sext i32 %58 to i64, !dbg !2055
  %arrayidx49 = getelementptr inbounds %struct._xmlRegTrans, ptr %56, i64 %idxprom48, !dbg !2055
  store ptr %arrayidx49, ptr %trans, align 8, !dbg !2061, !tbaa !1527
  %59 = load ptr, ptr %trans, align 8, !dbg !2062, !tbaa !1527
  %to = getelementptr inbounds %struct._xmlRegTrans, ptr %59, i32 0, i32 1, !dbg !2064
  %60 = load i32, ptr %to, align 8, !dbg !2064, !tbaa !2065
  %cmp50 = icmp slt i32 %60, 0, !dbg !2067
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !2068

if.then51:                                        ; preds = %for.body
  br label %for.inc408, !dbg !2069

if.end52:                                         ; preds = %for.body
  %61 = load ptr, ptr %trans, align 8, !dbg !2070, !tbaa !1527
  %atom53 = getelementptr inbounds %struct._xmlRegTrans, ptr %61, i32 0, i32 0, !dbg !2071
  %62 = load ptr, ptr %atom53, align 8, !dbg !2071, !tbaa !2072
  store ptr %62, ptr %atom, align 8, !dbg !2073, !tbaa !1527
  store i32 0, ptr %ret, align 4, !dbg !2074, !tbaa !1767
  %63 = load ptr, ptr %trans, align 8, !dbg !2075, !tbaa !1527
  %count = getelementptr inbounds %struct._xmlRegTrans, ptr %63, i32 0, i32 3, !dbg !2076
  %64 = load i32, ptr %count, align 8, !dbg !2076, !tbaa !2077
  %cmp54 = icmp eq i32 %64, 1193047, !dbg !2078
  br i1 %cmp54, label %if.then55, label %if.else110, !dbg !2079

if.then55:                                        ; preds = %if.end52
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !2080
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !1889, metadata !DIExpression()), !dbg !2081
  call void @llvm.lifetime.start.p0(i64 4, ptr %count56) #8, !dbg !2082
  tail call void @llvm.dbg.declare(metadata ptr %count56, metadata !1896, metadata !DIExpression()), !dbg !2083
  call void @llvm.lifetime.start.p0(i64 8, ptr %t) #8, !dbg !2084
  tail call void @llvm.dbg.declare(metadata ptr %t, metadata !1897, metadata !DIExpression()), !dbg !2085
  call void @llvm.lifetime.start.p0(i64 8, ptr %counter) #8, !dbg !2086
  tail call void @llvm.dbg.declare(metadata ptr %counter, metadata !1898, metadata !DIExpression()), !dbg !2087
  store i32 0, ptr %ret, align 4, !dbg !2088, !tbaa !1767
  %65 = load ptr, ptr %value.addr, align 8, !dbg !2089, !tbaa !1527
  %cmp57 = icmp eq ptr %65, null, !dbg !2091
  br i1 %cmp57, label %land.lhs.true58, label %if.else, !dbg !2092

land.lhs.true58:                                  ; preds = %if.then55
  %66 = load i32, ptr %final, align 4, !dbg !2093, !tbaa !1767
  %tobool = icmp ne i32 %66, 0, !dbg !2094
  br i1 %tobool, label %if.then59, label %if.else, !dbg !2095

if.then59:                                        ; preds = %land.lhs.true58
  store i32 1, ptr %ret, align 4, !dbg !2096, !tbaa !1767
  br label %if.end109, !dbg !2098

if.else:                                          ; preds = %land.lhs.true58, %if.then55
  %67 = load ptr, ptr %value.addr, align 8, !dbg !2099, !tbaa !1527
  %cmp60 = icmp ne ptr %67, null, !dbg !2101
  br i1 %cmp60, label %if.then61, label %if.end108, !dbg !2102

if.then61:                                        ; preds = %if.else
  store i32 0, ptr %i, align 4, !dbg !2103, !tbaa !1767
  br label %for.cond62, !dbg !2106

for.cond62:                                       ; preds = %for.inc, %if.then61
  %68 = load i32, ptr %i, align 4, !dbg !2107, !tbaa !1767
  %69 = load ptr, ptr %exec.addr, align 8, !dbg !2109, !tbaa !1527
  %state63 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %69, i32 0, i32 5, !dbg !2110
  %70 = load ptr, ptr %state63, align 8, !dbg !2110, !tbaa !1610
  %nbTrans64 = getelementptr inbounds %struct._xmlAutomataState, ptr %70, i32 0, i32 6, !dbg !2111
  %71 = load i32, ptr %nbTrans64, align 8, !dbg !2111, !tbaa !2052
  %cmp65 = icmp slt i32 %68, %71, !dbg !2112
  br i1 %cmp65, label %for.body66, label %for.end, !dbg !2113

for.body66:                                       ; preds = %for.cond62
  %72 = load ptr, ptr %exec.addr, align 8, !dbg !2114, !tbaa !1527
  %state67 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %72, i32 0, i32 5, !dbg !2116
  %73 = load ptr, ptr %state67, align 8, !dbg !2116, !tbaa !1610
  %trans68 = getelementptr inbounds %struct._xmlAutomataState, ptr %73, i32 0, i32 7, !dbg !2117
  %74 = load ptr, ptr %trans68, align 8, !dbg !2117, !tbaa !2058
  %75 = load i32, ptr %i, align 4, !dbg !2118, !tbaa !1767
  %idxprom69 = sext i32 %75 to i64, !dbg !2114
  %arrayidx70 = getelementptr inbounds %struct._xmlRegTrans, ptr %74, i64 %idxprom69, !dbg !2114
  store ptr %arrayidx70, ptr %t, align 8, !dbg !2119, !tbaa !1527
  %76 = load ptr, ptr %t, align 8, !dbg !2120, !tbaa !1527
  %counter71 = getelementptr inbounds %struct._xmlRegTrans, ptr %76, i32 0, i32 2, !dbg !2122
  %77 = load i32, ptr %counter71, align 4, !dbg !2122, !tbaa !2123
  %cmp72 = icmp slt i32 %77, 0, !dbg !2124
  br i1 %cmp72, label %if.then74, label %lor.lhs.false, !dbg !2125

lor.lhs.false:                                    ; preds = %for.body66
  %78 = load ptr, ptr %t, align 8, !dbg !2126, !tbaa !1527
  %79 = load ptr, ptr %trans, align 8, !dbg !2127, !tbaa !1527
  %cmp73 = icmp eq ptr %78, %79, !dbg !2128
  br i1 %cmp73, label %if.then74, label %if.end75, !dbg !2129

if.then74:                                        ; preds = %lor.lhs.false, %for.body66
  br label %for.inc, !dbg !2130

if.end75:                                         ; preds = %lor.lhs.false
  %80 = load ptr, ptr %exec.addr, align 8, !dbg !2131, !tbaa !1527
  %comp76 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %80, i32 0, i32 2, !dbg !2132
  %81 = load ptr, ptr %comp76, align 8, !dbg !2132, !tbaa !1599
  %counters = getelementptr inbounds %struct._xmlRegexp, ptr %81, i32 0, i32 6, !dbg !2133
  %82 = load ptr, ptr %counters, align 8, !dbg !2133, !tbaa !2134
  %83 = load ptr, ptr %t, align 8, !dbg !2135, !tbaa !1527
  %counter77 = getelementptr inbounds %struct._xmlRegTrans, ptr %83, i32 0, i32 2, !dbg !2136
  %84 = load i32, ptr %counter77, align 4, !dbg !2136, !tbaa !2123
  %idxprom78 = sext i32 %84 to i64, !dbg !2131
  %arrayidx79 = getelementptr inbounds %struct._xmlRegCounter, ptr %82, i64 %idxprom78, !dbg !2131
  store ptr %arrayidx79, ptr %counter, align 8, !dbg !2137, !tbaa !1527
  %85 = load ptr, ptr %exec.addr, align 8, !dbg !2138, !tbaa !1527
  %counts80 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %85, i32 0, i32 11, !dbg !2139
  %86 = load ptr, ptr %counts80, align 8, !dbg !2139, !tbaa !1644
  %87 = load ptr, ptr %t, align 8, !dbg !2140, !tbaa !1527
  %counter81 = getelementptr inbounds %struct._xmlRegTrans, ptr %87, i32 0, i32 2, !dbg !2141
  %88 = load i32, ptr %counter81, align 4, !dbg !2141, !tbaa !2123
  %idxprom82 = sext i32 %88 to i64, !dbg !2138
  %arrayidx83 = getelementptr inbounds i32, ptr %86, i64 %idxprom82, !dbg !2138
  %89 = load i32, ptr %arrayidx83, align 4, !dbg !2138, !tbaa !1767
  store i32 %89, ptr %count56, align 4, !dbg !2142, !tbaa !1767
  %90 = load i32, ptr %count56, align 4, !dbg !2143, !tbaa !1767
  %91 = load ptr, ptr %counter, align 8, !dbg !2145, !tbaa !1527
  %max = getelementptr inbounds %struct._xmlRegCounter, ptr %91, i32 0, i32 1, !dbg !2146
  %92 = load i32, ptr %max, align 4, !dbg !2146, !tbaa !2147
  %cmp84 = icmp slt i32 %90, %92, !dbg !2149
  br i1 %cmp84, label %land.lhs.true85, label %if.end93, !dbg !2150

land.lhs.true85:                                  ; preds = %if.end75
  %93 = load ptr, ptr %t, align 8, !dbg !2151, !tbaa !1527
  %atom86 = getelementptr inbounds %struct._xmlRegTrans, ptr %93, i32 0, i32 0, !dbg !2152
  %94 = load ptr, ptr %atom86, align 8, !dbg !2152, !tbaa !2072
  %cmp87 = icmp ne ptr %94, null, !dbg !2153
  br i1 %cmp87, label %land.lhs.true88, label %if.end93, !dbg !2154

land.lhs.true88:                                  ; preds = %land.lhs.true85
  %95 = load ptr, ptr %value.addr, align 8, !dbg !2155, !tbaa !1527
  %96 = load ptr, ptr %t, align 8, !dbg !2156, !tbaa !1527
  %atom89 = getelementptr inbounds %struct._xmlRegTrans, ptr %96, i32 0, i32 0, !dbg !2157
  %97 = load ptr, ptr %atom89, align 8, !dbg !2157, !tbaa !2072
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %97, i32 0, i32 5, !dbg !2158
  %98 = load ptr, ptr %valuep, align 8, !dbg !2158, !tbaa !2159
  %call90 = call i32 @xmlStrEqual(ptr noundef %95, ptr noundef %98), !dbg !2161
  %tobool91 = icmp ne i32 %call90, 0, !dbg !2161
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !2162

if.then92:                                        ; preds = %land.lhs.true88
  store i32 0, ptr %ret, align 4, !dbg !2163, !tbaa !1767
  br label %for.end, !dbg !2165

if.end93:                                         ; preds = %land.lhs.true88, %land.lhs.true85, %if.end75
  %99 = load i32, ptr %count56, align 4, !dbg !2166, !tbaa !1767
  %100 = load ptr, ptr %counter, align 8, !dbg !2168, !tbaa !1527
  %min = getelementptr inbounds %struct._xmlRegCounter, ptr %100, i32 0, i32 0, !dbg !2169
  %101 = load i32, ptr %min, align 4, !dbg !2169, !tbaa !2170
  %cmp94 = icmp sge i32 %99, %101, !dbg !2171
  br i1 %cmp94, label %land.lhs.true95, label %if.end107, !dbg !2172

land.lhs.true95:                                  ; preds = %if.end93
  %102 = load i32, ptr %count56, align 4, !dbg !2173, !tbaa !1767
  %103 = load ptr, ptr %counter, align 8, !dbg !2174, !tbaa !1527
  %max96 = getelementptr inbounds %struct._xmlRegCounter, ptr %103, i32 0, i32 1, !dbg !2175
  %104 = load i32, ptr %max96, align 4, !dbg !2175, !tbaa !2147
  %cmp97 = icmp slt i32 %102, %104, !dbg !2176
  br i1 %cmp97, label %land.lhs.true98, label %if.end107, !dbg !2177

land.lhs.true98:                                  ; preds = %land.lhs.true95
  %105 = load ptr, ptr %t, align 8, !dbg !2178, !tbaa !1527
  %atom99 = getelementptr inbounds %struct._xmlRegTrans, ptr %105, i32 0, i32 0, !dbg !2179
  %106 = load ptr, ptr %atom99, align 8, !dbg !2179, !tbaa !2072
  %cmp100 = icmp ne ptr %106, null, !dbg !2180
  br i1 %cmp100, label %land.lhs.true101, label %if.end107, !dbg !2181

land.lhs.true101:                                 ; preds = %land.lhs.true98
  %107 = load ptr, ptr %value.addr, align 8, !dbg !2182, !tbaa !1527
  %108 = load ptr, ptr %t, align 8, !dbg !2183, !tbaa !1527
  %atom102 = getelementptr inbounds %struct._xmlRegTrans, ptr %108, i32 0, i32 0, !dbg !2184
  %109 = load ptr, ptr %atom102, align 8, !dbg !2184, !tbaa !2072
  %valuep103 = getelementptr inbounds %struct._xmlRegAtom, ptr %109, i32 0, i32 5, !dbg !2185
  %110 = load ptr, ptr %valuep103, align 8, !dbg !2185, !tbaa !2159
  %call104 = call i32 @xmlStrEqual(ptr noundef %107, ptr noundef %110), !dbg !2186
  %tobool105 = icmp ne i32 %call104, 0, !dbg !2186
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !2187

if.then106:                                       ; preds = %land.lhs.true101
  store i32 1, ptr %ret, align 4, !dbg !2188, !tbaa !1767
  br label %for.end, !dbg !2190

if.end107:                                        ; preds = %land.lhs.true101, %land.lhs.true98, %land.lhs.true95, %if.end93
  br label %for.inc, !dbg !2191

for.inc:                                          ; preds = %if.end107, %if.then74
  %111 = load i32, ptr %i, align 4, !dbg !2192, !tbaa !1767
  %inc = add nsw i32 %111, 1, !dbg !2192
  store i32 %inc, ptr %i, align 4, !dbg !2192, !tbaa !1767
  br label %for.cond62, !dbg !2193, !llvm.loop !2194

for.end:                                          ; preds = %if.then106, %if.then92, %for.cond62
  br label %if.end108, !dbg !2196

if.end108:                                        ; preds = %for.end, %if.else
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then59
  call void @llvm.lifetime.end.p0(i64 8, ptr %counter) #8, !dbg !2197
  call void @llvm.lifetime.end.p0(i64 8, ptr %t) #8, !dbg !2197
  call void @llvm.lifetime.end.p0(i64 4, ptr %count56) #8, !dbg !2197
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !2197
  br label %if.end294, !dbg !2198

if.else110:                                       ; preds = %if.end52
  %112 = load ptr, ptr %trans, align 8, !dbg !2199, !tbaa !1527
  %count111 = getelementptr inbounds %struct._xmlRegTrans, ptr %112, i32 0, i32 3, !dbg !2200
  %113 = load i32, ptr %count111, align 8, !dbg !2200, !tbaa !2077
  %cmp112 = icmp eq i32 %113, 1193046, !dbg !2201
  br i1 %cmp112, label %if.then113, label %if.else152, !dbg !2202

if.then113:                                       ; preds = %if.else110
  call void @llvm.lifetime.start.p0(i64 4, ptr %i114) #8, !dbg !2203
  tail call void @llvm.dbg.declare(metadata ptr %i114, metadata !1900, metadata !DIExpression()), !dbg !2204
  call void @llvm.lifetime.start.p0(i64 4, ptr %count115) #8, !dbg !2205
  tail call void @llvm.dbg.declare(metadata ptr %count115, metadata !1903, metadata !DIExpression()), !dbg !2206
  call void @llvm.lifetime.start.p0(i64 8, ptr %t116) #8, !dbg !2207
  tail call void @llvm.dbg.declare(metadata ptr %t116, metadata !1904, metadata !DIExpression()), !dbg !2208
  call void @llvm.lifetime.start.p0(i64 8, ptr %counter117) #8, !dbg !2209
  tail call void @llvm.dbg.declare(metadata ptr %counter117, metadata !1905, metadata !DIExpression()), !dbg !2210
  store i32 1, ptr %ret, align 4, !dbg !2211, !tbaa !1767
  store i32 0, ptr %i114, align 4, !dbg !2212, !tbaa !1767
  br label %for.cond118, !dbg !2214

for.cond118:                                      ; preds = %for.inc149, %if.then113
  %114 = load i32, ptr %i114, align 4, !dbg !2215, !tbaa !1767
  %115 = load ptr, ptr %exec.addr, align 8, !dbg !2217, !tbaa !1527
  %state119 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %115, i32 0, i32 5, !dbg !2218
  %116 = load ptr, ptr %state119, align 8, !dbg !2218, !tbaa !1610
  %nbTrans120 = getelementptr inbounds %struct._xmlAutomataState, ptr %116, i32 0, i32 6, !dbg !2219
  %117 = load i32, ptr %nbTrans120, align 8, !dbg !2219, !tbaa !2052
  %cmp121 = icmp slt i32 %114, %117, !dbg !2220
  br i1 %cmp121, label %for.body122, label %for.end151, !dbg !2221

for.body122:                                      ; preds = %for.cond118
  %118 = load ptr, ptr %exec.addr, align 8, !dbg !2222, !tbaa !1527
  %state123 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %118, i32 0, i32 5, !dbg !2224
  %119 = load ptr, ptr %state123, align 8, !dbg !2224, !tbaa !1610
  %trans124 = getelementptr inbounds %struct._xmlAutomataState, ptr %119, i32 0, i32 7, !dbg !2225
  %120 = load ptr, ptr %trans124, align 8, !dbg !2225, !tbaa !2058
  %121 = load i32, ptr %i114, align 4, !dbg !2226, !tbaa !1767
  %idxprom125 = sext i32 %121 to i64, !dbg !2222
  %arrayidx126 = getelementptr inbounds %struct._xmlRegTrans, ptr %120, i64 %idxprom125, !dbg !2222
  store ptr %arrayidx126, ptr %t116, align 8, !dbg !2227, !tbaa !1527
  %122 = load ptr, ptr %t116, align 8, !dbg !2228, !tbaa !1527
  %counter127 = getelementptr inbounds %struct._xmlRegTrans, ptr %122, i32 0, i32 2, !dbg !2230
  %123 = load i32, ptr %counter127, align 4, !dbg !2230, !tbaa !2123
  %cmp128 = icmp slt i32 %123, 0, !dbg !2231
  br i1 %cmp128, label %if.then131, label %lor.lhs.false129, !dbg !2232

lor.lhs.false129:                                 ; preds = %for.body122
  %124 = load ptr, ptr %t116, align 8, !dbg !2233, !tbaa !1527
  %125 = load ptr, ptr %trans, align 8, !dbg !2234, !tbaa !1527
  %cmp130 = icmp eq ptr %124, %125, !dbg !2235
  br i1 %cmp130, label %if.then131, label %if.end132, !dbg !2236

if.then131:                                       ; preds = %lor.lhs.false129, %for.body122
  br label %for.inc149, !dbg !2237

if.end132:                                        ; preds = %lor.lhs.false129
  %126 = load ptr, ptr %exec.addr, align 8, !dbg !2238, !tbaa !1527
  %comp133 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %126, i32 0, i32 2, !dbg !2239
  %127 = load ptr, ptr %comp133, align 8, !dbg !2239, !tbaa !1599
  %counters134 = getelementptr inbounds %struct._xmlRegexp, ptr %127, i32 0, i32 6, !dbg !2240
  %128 = load ptr, ptr %counters134, align 8, !dbg !2240, !tbaa !2134
  %129 = load ptr, ptr %t116, align 8, !dbg !2241, !tbaa !1527
  %counter135 = getelementptr inbounds %struct._xmlRegTrans, ptr %129, i32 0, i32 2, !dbg !2242
  %130 = load i32, ptr %counter135, align 4, !dbg !2242, !tbaa !2123
  %idxprom136 = sext i32 %130 to i64, !dbg !2238
  %arrayidx137 = getelementptr inbounds %struct._xmlRegCounter, ptr %128, i64 %idxprom136, !dbg !2238
  store ptr %arrayidx137, ptr %counter117, align 8, !dbg !2243, !tbaa !1527
  %131 = load ptr, ptr %exec.addr, align 8, !dbg !2244, !tbaa !1527
  %counts138 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %131, i32 0, i32 11, !dbg !2245
  %132 = load ptr, ptr %counts138, align 8, !dbg !2245, !tbaa !1644
  %133 = load ptr, ptr %t116, align 8, !dbg !2246, !tbaa !1527
  %counter139 = getelementptr inbounds %struct._xmlRegTrans, ptr %133, i32 0, i32 2, !dbg !2247
  %134 = load i32, ptr %counter139, align 4, !dbg !2247, !tbaa !2123
  %idxprom140 = sext i32 %134 to i64, !dbg !2244
  %arrayidx141 = getelementptr inbounds i32, ptr %132, i64 %idxprom140, !dbg !2244
  %135 = load i32, ptr %arrayidx141, align 4, !dbg !2244, !tbaa !1767
  store i32 %135, ptr %count115, align 4, !dbg !2248, !tbaa !1767
  %136 = load i32, ptr %count115, align 4, !dbg !2249, !tbaa !1767
  %137 = load ptr, ptr %counter117, align 8, !dbg !2251, !tbaa !1527
  %min142 = getelementptr inbounds %struct._xmlRegCounter, ptr %137, i32 0, i32 0, !dbg !2252
  %138 = load i32, ptr %min142, align 4, !dbg !2252, !tbaa !2170
  %cmp143 = icmp slt i32 %136, %138, !dbg !2253
  br i1 %cmp143, label %if.then147, label %lor.lhs.false144, !dbg !2254

lor.lhs.false144:                                 ; preds = %if.end132
  %139 = load i32, ptr %count115, align 4, !dbg !2255, !tbaa !1767
  %140 = load ptr, ptr %counter117, align 8, !dbg !2256, !tbaa !1527
  %max145 = getelementptr inbounds %struct._xmlRegCounter, ptr %140, i32 0, i32 1, !dbg !2257
  %141 = load i32, ptr %max145, align 4, !dbg !2257, !tbaa !2147
  %cmp146 = icmp sgt i32 %139, %141, !dbg !2258
  br i1 %cmp146, label %if.then147, label %if.end148, !dbg !2259

if.then147:                                       ; preds = %lor.lhs.false144, %if.end132
  store i32 0, ptr %ret, align 4, !dbg !2260, !tbaa !1767
  br label %for.end151, !dbg !2262

if.end148:                                        ; preds = %lor.lhs.false144
  br label %for.inc149, !dbg !2263

for.inc149:                                       ; preds = %if.end148, %if.then131
  %142 = load i32, ptr %i114, align 4, !dbg !2264, !tbaa !1767
  %inc150 = add nsw i32 %142, 1, !dbg !2264
  store i32 %inc150, ptr %i114, align 4, !dbg !2264, !tbaa !1767
  br label %for.cond118, !dbg !2265, !llvm.loop !2266

for.end151:                                       ; preds = %if.then147, %for.cond118
  call void @llvm.lifetime.end.p0(i64 8, ptr %counter117) #8, !dbg !2268
  call void @llvm.lifetime.end.p0(i64 8, ptr %t116) #8, !dbg !2268
  call void @llvm.lifetime.end.p0(i64 4, ptr %count115) #8, !dbg !2268
  call void @llvm.lifetime.end.p0(i64 4, ptr %i114) #8, !dbg !2268
  br label %if.end293, !dbg !2269

if.else152:                                       ; preds = %if.else110
  %143 = load ptr, ptr %trans, align 8, !dbg !2270, !tbaa !1527
  %count153 = getelementptr inbounds %struct._xmlRegTrans, ptr %143, i32 0, i32 3, !dbg !2271
  %144 = load i32, ptr %count153, align 8, !dbg !2271, !tbaa !2077
  %cmp154 = icmp sge i32 %144, 0, !dbg !2272
  br i1 %cmp154, label %if.then155, label %if.else173, !dbg !2273

if.then155:                                       ; preds = %if.else152
  call void @llvm.lifetime.start.p0(i64 4, ptr %count156) #8, !dbg !2274
  tail call void @llvm.dbg.declare(metadata ptr %count156, metadata !1906, metadata !DIExpression()), !dbg !2275
  call void @llvm.lifetime.start.p0(i64 8, ptr %counter157) #8, !dbg !2276
  tail call void @llvm.dbg.declare(metadata ptr %counter157, metadata !1909, metadata !DIExpression()), !dbg !2277
  %145 = load ptr, ptr %exec.addr, align 8, !dbg !2278, !tbaa !1527
  %counts158 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %145, i32 0, i32 11, !dbg !2279
  %146 = load ptr, ptr %counts158, align 8, !dbg !2279, !tbaa !1644
  %147 = load ptr, ptr %trans, align 8, !dbg !2280, !tbaa !1527
  %count159 = getelementptr inbounds %struct._xmlRegTrans, ptr %147, i32 0, i32 3, !dbg !2281
  %148 = load i32, ptr %count159, align 8, !dbg !2281, !tbaa !2077
  %idxprom160 = sext i32 %148 to i64, !dbg !2278
  %arrayidx161 = getelementptr inbounds i32, ptr %146, i64 %idxprom160, !dbg !2278
  %149 = load i32, ptr %arrayidx161, align 4, !dbg !2278, !tbaa !1767
  store i32 %149, ptr %count156, align 4, !dbg !2282, !tbaa !1767
  %150 = load ptr, ptr %exec.addr, align 8, !dbg !2283, !tbaa !1527
  %comp162 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %150, i32 0, i32 2, !dbg !2284
  %151 = load ptr, ptr %comp162, align 8, !dbg !2284, !tbaa !1599
  %counters163 = getelementptr inbounds %struct._xmlRegexp, ptr %151, i32 0, i32 6, !dbg !2285
  %152 = load ptr, ptr %counters163, align 8, !dbg !2285, !tbaa !2134
  %153 = load ptr, ptr %trans, align 8, !dbg !2286, !tbaa !1527
  %count164 = getelementptr inbounds %struct._xmlRegTrans, ptr %153, i32 0, i32 3, !dbg !2287
  %154 = load i32, ptr %count164, align 8, !dbg !2287, !tbaa !2077
  %idxprom165 = sext i32 %154 to i64, !dbg !2283
  %arrayidx166 = getelementptr inbounds %struct._xmlRegCounter, ptr %152, i64 %idxprom165, !dbg !2283
  store ptr %arrayidx166, ptr %counter157, align 8, !dbg !2288, !tbaa !1527
  %155 = load i32, ptr %count156, align 4, !dbg !2289, !tbaa !1767
  %156 = load ptr, ptr %counter157, align 8, !dbg !2290, !tbaa !1527
  %min167 = getelementptr inbounds %struct._xmlRegCounter, ptr %156, i32 0, i32 0, !dbg !2291
  %157 = load i32, ptr %min167, align 4, !dbg !2291, !tbaa !2170
  %cmp168 = icmp sge i32 %155, %157, !dbg !2292
  br i1 %cmp168, label %land.rhs169, label %land.end172, !dbg !2293

land.rhs169:                                      ; preds = %if.then155
  %158 = load i32, ptr %count156, align 4, !dbg !2294, !tbaa !1767
  %159 = load ptr, ptr %counter157, align 8, !dbg !2295, !tbaa !1527
  %max170 = getelementptr inbounds %struct._xmlRegCounter, ptr %159, i32 0, i32 1, !dbg !2296
  %160 = load i32, ptr %max170, align 4, !dbg !2296, !tbaa !2147
  %cmp171 = icmp sle i32 %158, %160, !dbg !2297
  br label %land.end172

land.end172:                                      ; preds = %land.rhs169, %if.then155
  %161 = phi i1 [ false, %if.then155 ], [ %cmp171, %land.rhs169 ], !dbg !2298
  %land.ext = zext i1 %161 to i32, !dbg !2293
  store i32 %land.ext, ptr %ret, align 4, !dbg !2299, !tbaa !1767
  call void @llvm.lifetime.end.p0(i64 8, ptr %counter157) #8, !dbg !2300
  call void @llvm.lifetime.end.p0(i64 4, ptr %count156) #8, !dbg !2300
  br label %if.end292, !dbg !2301

if.else173:                                       ; preds = %if.else152
  %162 = load ptr, ptr %atom, align 8, !dbg !2302, !tbaa !1527
  %cmp174 = icmp eq ptr %162, null, !dbg !2303
  br i1 %cmp174, label %if.then175, label %if.else178, !dbg !2304

if.then175:                                       ; preds = %if.else173
  %163 = load ptr, ptr @stderr, align 8, !dbg !2305, !tbaa !1527
  %call176 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %163, ptr noundef @.str.13), !dbg !2307
  %164 = load ptr, ptr %exec.addr, align 8, !dbg !2308, !tbaa !1527
  %status177 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %164, i32 0, i32 0, !dbg !2309
  store i32 -2, ptr %status177, align 8, !dbg !2310, !tbaa !1594
  br label %for.end411, !dbg !2311

if.else178:                                       ; preds = %if.else173
  %165 = load ptr, ptr %value.addr, align 8, !dbg !2312, !tbaa !1527
  %cmp179 = icmp ne ptr %165, null, !dbg !2313
  br i1 %cmp179, label %if.then180, label %if.end290, !dbg !2314

if.then180:                                       ; preds = %if.else178
  %166 = load ptr, ptr %atom, align 8, !dbg !2315, !tbaa !1527
  %valuep181 = getelementptr inbounds %struct._xmlRegAtom, ptr %166, i32 0, i32 5, !dbg !2316
  %167 = load ptr, ptr %valuep181, align 8, !dbg !2316, !tbaa !2159
  %168 = load ptr, ptr %value.addr, align 8, !dbg !2317, !tbaa !1527
  %call182 = call i32 @xmlRegStrEqualWildcard(ptr noundef %167, ptr noundef %168), !dbg !2318
  store i32 %call182, ptr %ret, align 4, !dbg !2319, !tbaa !1767
  %169 = load ptr, ptr %atom, align 8, !dbg !2320, !tbaa !1527
  %neg = getelementptr inbounds %struct._xmlRegAtom, ptr %169, i32 0, i32 7, !dbg !2322
  %170 = load i32, ptr %neg, align 8, !dbg !2322, !tbaa !2323
  %tobool183 = icmp ne i32 %170, 0, !dbg !2320
  br i1 %tobool183, label %if.then184, label %if.end189, !dbg !2324

if.then184:                                       ; preds = %if.then180
  %171 = load i32, ptr %ret, align 4, !dbg !2325, !tbaa !1767
  %tobool185 = icmp ne i32 %171, 0, !dbg !2327
  %lnot = xor i1 %tobool185, true, !dbg !2327
  %lnot.ext = zext i1 %lnot to i32, !dbg !2327
  store i32 %lnot.ext, ptr %ret, align 4, !dbg !2328, !tbaa !1767
  %172 = load i32, ptr %compound.addr, align 4, !dbg !2329, !tbaa !1767
  %tobool186 = icmp ne i32 %172, 0, !dbg !2329
  br i1 %tobool186, label %if.end188, label %if.then187, !dbg !2331

if.then187:                                       ; preds = %if.then184
  store i32 0, ptr %ret, align 4, !dbg !2332, !tbaa !1767
  br label %if.end188, !dbg !2333

if.end188:                                        ; preds = %if.then187, %if.then184
  br label %if.end189, !dbg !2334

if.end189:                                        ; preds = %if.end188, %if.then180
  %173 = load i32, ptr %ret, align 4, !dbg !2335, !tbaa !1767
  %cmp190 = icmp eq i32 %173, 1, !dbg !2336
  br i1 %cmp190, label %land.lhs.true191, label %if.end210, !dbg !2337

land.lhs.true191:                                 ; preds = %if.end189
  %174 = load ptr, ptr %trans, align 8, !dbg !2338, !tbaa !1527
  %counter192 = getelementptr inbounds %struct._xmlRegTrans, ptr %174, i32 0, i32 2, !dbg !2339
  %175 = load i32, ptr %counter192, align 4, !dbg !2339, !tbaa !2123
  %cmp193 = icmp sge i32 %175, 0, !dbg !2340
  br i1 %cmp193, label %if.then194, label %if.end210, !dbg !2341

if.then194:                                       ; preds = %land.lhs.true191
  call void @llvm.lifetime.start.p0(i64 8, ptr %counter195) #8, !dbg !2342
  tail call void @llvm.dbg.declare(metadata ptr %counter195, metadata !1910, metadata !DIExpression()), !dbg !2343
  call void @llvm.lifetime.start.p0(i64 4, ptr %count196) #8, !dbg !2344
  tail call void @llvm.dbg.declare(metadata ptr %count196, metadata !1916, metadata !DIExpression()), !dbg !2345
  %176 = load ptr, ptr %exec.addr, align 8, !dbg !2346, !tbaa !1527
  %counts197 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %176, i32 0, i32 11, !dbg !2347
  %177 = load ptr, ptr %counts197, align 8, !dbg !2347, !tbaa !1644
  %178 = load ptr, ptr %trans, align 8, !dbg !2348, !tbaa !1527
  %counter198 = getelementptr inbounds %struct._xmlRegTrans, ptr %178, i32 0, i32 2, !dbg !2349
  %179 = load i32, ptr %counter198, align 4, !dbg !2349, !tbaa !2123
  %idxprom199 = sext i32 %179 to i64, !dbg !2346
  %arrayidx200 = getelementptr inbounds i32, ptr %177, i64 %idxprom199, !dbg !2346
  %180 = load i32, ptr %arrayidx200, align 4, !dbg !2346, !tbaa !1767
  store i32 %180, ptr %count196, align 4, !dbg !2350, !tbaa !1767
  %181 = load ptr, ptr %exec.addr, align 8, !dbg !2351, !tbaa !1527
  %comp201 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %181, i32 0, i32 2, !dbg !2352
  %182 = load ptr, ptr %comp201, align 8, !dbg !2352, !tbaa !1599
  %counters202 = getelementptr inbounds %struct._xmlRegexp, ptr %182, i32 0, i32 6, !dbg !2353
  %183 = load ptr, ptr %counters202, align 8, !dbg !2353, !tbaa !2134
  %184 = load ptr, ptr %trans, align 8, !dbg !2354, !tbaa !1527
  %counter203 = getelementptr inbounds %struct._xmlRegTrans, ptr %184, i32 0, i32 2, !dbg !2355
  %185 = load i32, ptr %counter203, align 4, !dbg !2355, !tbaa !2123
  %idxprom204 = sext i32 %185 to i64, !dbg !2351
  %arrayidx205 = getelementptr inbounds %struct._xmlRegCounter, ptr %183, i64 %idxprom204, !dbg !2351
  store ptr %arrayidx205, ptr %counter195, align 8, !dbg !2356, !tbaa !1527
  %186 = load i32, ptr %count196, align 4, !dbg !2357, !tbaa !1767
  %187 = load ptr, ptr %counter195, align 8, !dbg !2359, !tbaa !1527
  %max206 = getelementptr inbounds %struct._xmlRegCounter, ptr %187, i32 0, i32 1, !dbg !2360
  %188 = load i32, ptr %max206, align 4, !dbg !2360, !tbaa !2147
  %cmp207 = icmp sge i32 %186, %188, !dbg !2361
  br i1 %cmp207, label %if.then208, label %if.end209, !dbg !2362

if.then208:                                       ; preds = %if.then194
  store i32 0, ptr %ret, align 4, !dbg !2363, !tbaa !1767
  br label %if.end209, !dbg !2364

if.end209:                                        ; preds = %if.then208, %if.then194
  call void @llvm.lifetime.end.p0(i64 4, ptr %count196) #8, !dbg !2365
  call void @llvm.lifetime.end.p0(i64 8, ptr %counter195) #8, !dbg !2365
  br label %if.end210, !dbg !2366

if.end210:                                        ; preds = %if.end209, %land.lhs.true191, %if.end189
  %189 = load i32, ptr %ret, align 4, !dbg !2367, !tbaa !1767
  %cmp211 = icmp eq i32 %189, 1, !dbg !2368
  br i1 %cmp211, label %land.lhs.true212, label %if.end289, !dbg !2369

land.lhs.true212:                                 ; preds = %if.end210
  %190 = load ptr, ptr %atom, align 8, !dbg !2370, !tbaa !1527
  %min213 = getelementptr inbounds %struct._xmlRegAtom, ptr %190, i32 0, i32 3, !dbg !2371
  %191 = load i32, ptr %min213, align 4, !dbg !2371, !tbaa !2372
  %cmp214 = icmp sgt i32 %191, 0, !dbg !2373
  br i1 %cmp214, label %land.lhs.true215, label %if.end289, !dbg !2374

land.lhs.true215:                                 ; preds = %land.lhs.true212
  %192 = load ptr, ptr %atom, align 8, !dbg !2375, !tbaa !1527
  %max216 = getelementptr inbounds %struct._xmlRegAtom, ptr %192, i32 0, i32 4, !dbg !2376
  %193 = load i32, ptr %max216, align 8, !dbg !2376, !tbaa !2377
  %cmp217 = icmp sgt i32 %193, 0, !dbg !2378
  br i1 %cmp217, label %if.then218, label %if.end289, !dbg !2379

if.then218:                                       ; preds = %land.lhs.true215
  call void @llvm.lifetime.start.p0(i64 8, ptr %to219) #8, !dbg !2380
  tail call void @llvm.dbg.declare(metadata ptr %to219, metadata !1917, metadata !DIExpression()), !dbg !2381
  %194 = load ptr, ptr %exec.addr, align 8, !dbg !2382, !tbaa !1527
  %comp220 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %194, i32 0, i32 2, !dbg !2383
  %195 = load ptr, ptr %comp220, align 8, !dbg !2383, !tbaa !1599
  %states = getelementptr inbounds %struct._xmlRegexp, ptr %195, i32 0, i32 2, !dbg !2384
  %196 = load ptr, ptr %states, align 8, !dbg !2384, !tbaa !1551
  %197 = load ptr, ptr %trans, align 8, !dbg !2385, !tbaa !1527
  %to221 = getelementptr inbounds %struct._xmlRegTrans, ptr %197, i32 0, i32 1, !dbg !2386
  %198 = load i32, ptr %to221, align 8, !dbg !2386, !tbaa !2065
  %idxprom222 = sext i32 %198 to i64, !dbg !2382
  %arrayidx223 = getelementptr inbounds ptr, ptr %196, i64 %idxprom222, !dbg !2382
  %199 = load ptr, ptr %arrayidx223, align 8, !dbg !2382, !tbaa !1527
  store ptr %199, ptr %to219, align 8, !dbg !2381, !tbaa !1527
  %200 = load ptr, ptr %exec.addr, align 8, !dbg !2387, !tbaa !1527
  %state224 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %200, i32 0, i32 5, !dbg !2389
  %201 = load ptr, ptr %state224, align 8, !dbg !2389, !tbaa !1610
  %nbTrans225 = getelementptr inbounds %struct._xmlAutomataState, ptr %201, i32 0, i32 6, !dbg !2390
  %202 = load i32, ptr %nbTrans225, align 8, !dbg !2390, !tbaa !2052
  %203 = load ptr, ptr %exec.addr, align 8, !dbg !2391, !tbaa !1527
  %transno226 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %203, i32 0, i32 6, !dbg !2392
  %204 = load i32, ptr %transno226, align 8, !dbg !2392, !tbaa !1614
  %add = add nsw i32 %204, 1, !dbg !2393
  %cmp227 = icmp sgt i32 %202, %add, !dbg !2394
  br i1 %cmp227, label %if.then228, label %if.end233, !dbg !2395

if.then228:                                       ; preds = %if.then218
  %205 = load ptr, ptr %exec.addr, align 8, !dbg !2396, !tbaa !1527
  %inputStackNr229 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %205, i32 0, i32 13, !dbg !2399
  %206 = load i32, ptr %inputStackNr229, align 4, !dbg !2399, !tbaa !1685
  %cmp230 = icmp sle i32 %206, 0, !dbg !2400
  br i1 %cmp230, label %if.then231, label %if.end232, !dbg !2401

if.then231:                                       ; preds = %if.then228
  %207 = load ptr, ptr %exec.addr, align 8, !dbg !2402, !tbaa !1527
  %208 = load ptr, ptr %value.addr, align 8, !dbg !2404, !tbaa !1527
  %209 = load ptr, ptr %data.addr, align 8, !dbg !2405, !tbaa !1527
  call void @xmlFARegExecSaveInputString(ptr noundef %207, ptr noundef %208, ptr noundef %209), !dbg !2406
  br label %if.end232, !dbg !2407

if.end232:                                        ; preds = %if.then231, %if.then228
  %210 = load ptr, ptr %exec.addr, align 8, !dbg !2408, !tbaa !1527
  call void @xmlFARegExecSave(ptr noundef %210), !dbg !2409
  br label %if.end233, !dbg !2410

if.end233:                                        ; preds = %if.end232, %if.then218
  %211 = load ptr, ptr %exec.addr, align 8, !dbg !2411, !tbaa !1527
  %transcount234 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %211, i32 0, i32 7, !dbg !2412
  store i32 1, ptr %transcount234, align 4, !dbg !2413, !tbaa !1618
  br label %do.body, !dbg !2414

do.body:                                          ; preds = %do.cond, %if.end233
  %212 = load ptr, ptr %exec.addr, align 8, !dbg !2415, !tbaa !1527
  %transcount235 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %212, i32 0, i32 7, !dbg !2417
  %213 = load i32, ptr %transcount235, align 4, !dbg !2417, !tbaa !1618
  %214 = load ptr, ptr %atom, align 8, !dbg !2418, !tbaa !1527
  %max236 = getelementptr inbounds %struct._xmlRegAtom, ptr %214, i32 0, i32 4, !dbg !2419
  %215 = load i32, ptr %max236, align 8, !dbg !2419, !tbaa !2377
  %cmp237 = icmp eq i32 %213, %215, !dbg !2420
  br i1 %cmp237, label %if.then238, label %if.end239, !dbg !2421

if.then238:                                       ; preds = %do.body
  br label %do.end, !dbg !2422

if.end239:                                        ; preds = %do.body
  %216 = load ptr, ptr %exec.addr, align 8, !dbg !2424, !tbaa !1527
  %index240 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %216, i32 0, i32 14, !dbg !2425
  %217 = load i32, ptr %index240, align 8, !dbg !2426, !tbaa !1574
  %inc241 = add nsw i32 %217, 1, !dbg !2426
  store i32 %inc241, ptr %index240, align 8, !dbg !2426, !tbaa !1574
  %218 = load ptr, ptr %exec.addr, align 8, !dbg !2427, !tbaa !1527
  %inputStack242 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %218, i32 0, i32 17, !dbg !2428
  %219 = load ptr, ptr %inputStack242, align 8, !dbg !2428, !tbaa !1689
  %220 = load ptr, ptr %exec.addr, align 8, !dbg !2429, !tbaa !1527
  %index243 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %220, i32 0, i32 14, !dbg !2430
  %221 = load i32, ptr %index243, align 8, !dbg !2430, !tbaa !1574
  %idxprom244 = sext i32 %221 to i64, !dbg !2427
  %arrayidx245 = getelementptr inbounds %struct._xmlRegInputToken, ptr %219, i64 %idxprom244, !dbg !2427
  %value246 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx245, i32 0, i32 0, !dbg !2431
  %222 = load ptr, ptr %value246, align 8, !dbg !2431, !tbaa !1830
  store ptr %222, ptr %value.addr, align 8, !dbg !2432, !tbaa !1527
  %223 = load ptr, ptr %exec.addr, align 8, !dbg !2433, !tbaa !1527
  %inputStack247 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %223, i32 0, i32 17, !dbg !2434
  %224 = load ptr, ptr %inputStack247, align 8, !dbg !2434, !tbaa !1689
  %225 = load ptr, ptr %exec.addr, align 8, !dbg !2435, !tbaa !1527
  %index248 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %225, i32 0, i32 14, !dbg !2436
  %226 = load i32, ptr %index248, align 8, !dbg !2436, !tbaa !1574
  %idxprom249 = sext i32 %226 to i64, !dbg !2433
  %arrayidx250 = getelementptr inbounds %struct._xmlRegInputToken, ptr %224, i64 %idxprom249, !dbg !2433
  %data251 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx250, i32 0, i32 1, !dbg !2437
  %227 = load ptr, ptr %data251, align 8, !dbg !2437, !tbaa !2015
  store ptr %227, ptr %data.addr, align 8, !dbg !2438, !tbaa !1527
  %228 = load ptr, ptr %value.addr, align 8, !dbg !2439, !tbaa !1527
  %cmp252 = icmp eq ptr %228, null, !dbg !2441
  br i1 %cmp252, label %if.then253, label %if.end255, !dbg !2442

if.then253:                                       ; preds = %if.end239
  %229 = load ptr, ptr %exec.addr, align 8, !dbg !2443, !tbaa !1527
  %index254 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %229, i32 0, i32 14, !dbg !2445
  %230 = load i32, ptr %index254, align 8, !dbg !2446, !tbaa !1574
  %dec = add nsw i32 %230, -1, !dbg !2446
  store i32 %dec, ptr %index254, align 8, !dbg !2446, !tbaa !1574
  br label %do.end, !dbg !2447

if.end255:                                        ; preds = %if.end239
  %231 = load ptr, ptr %exec.addr, align 8, !dbg !2448, !tbaa !1527
  %transcount256 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %231, i32 0, i32 7, !dbg !2449
  %232 = load i32, ptr %transcount256, align 4, !dbg !2449, !tbaa !1618
  %233 = load ptr, ptr %atom, align 8, !dbg !2450, !tbaa !1527
  %min257 = getelementptr inbounds %struct._xmlRegAtom, ptr %233, i32 0, i32 3, !dbg !2451
  %234 = load i32, ptr %min257, align 4, !dbg !2451, !tbaa !2372
  %cmp258 = icmp sge i32 %232, %234, !dbg !2452
  br i1 %cmp258, label %if.then259, label %if.end272, !dbg !2453

if.then259:                                       ; preds = %if.end255
  call void @llvm.lifetime.start.p0(i64 4, ptr %transno260) #8, !dbg !2454
  tail call void @llvm.dbg.declare(metadata ptr %transno260, metadata !1920, metadata !DIExpression()), !dbg !2455
  %235 = load ptr, ptr %exec.addr, align 8, !dbg !2456, !tbaa !1527
  %transno261 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %235, i32 0, i32 6, !dbg !2457
  %236 = load i32, ptr %transno261, align 8, !dbg !2457, !tbaa !1614
  store i32 %236, ptr %transno260, align 4, !dbg !2455, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 8, ptr %state262) #8, !dbg !2458
  tail call void @llvm.dbg.declare(metadata ptr %state262, metadata !1924, metadata !DIExpression()), !dbg !2459
  %237 = load ptr, ptr %exec.addr, align 8, !dbg !2460, !tbaa !1527
  %state263 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %237, i32 0, i32 5, !dbg !2461
  %238 = load ptr, ptr %state263, align 8, !dbg !2461, !tbaa !1610
  store ptr %238, ptr %state262, align 8, !dbg !2459, !tbaa !1527
  %239 = load ptr, ptr %exec.addr, align 8, !dbg !2462, !tbaa !1527
  %transno264 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %239, i32 0, i32 6, !dbg !2463
  store i32 -1, ptr %transno264, align 8, !dbg !2464, !tbaa !1614
  %240 = load ptr, ptr %to219, align 8, !dbg !2465, !tbaa !1527
  %241 = load ptr, ptr %exec.addr, align 8, !dbg !2466, !tbaa !1527
  %state265 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %241, i32 0, i32 5, !dbg !2467
  store ptr %240, ptr %state265, align 8, !dbg !2468, !tbaa !1610
  %242 = load ptr, ptr %exec.addr, align 8, !dbg !2469, !tbaa !1527
  %inputStackNr266 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %242, i32 0, i32 13, !dbg !2471
  %243 = load i32, ptr %inputStackNr266, align 4, !dbg !2471, !tbaa !1685
  %cmp267 = icmp sle i32 %243, 0, !dbg !2472
  br i1 %cmp267, label %if.then268, label %if.end269, !dbg !2473

if.then268:                                       ; preds = %if.then259
  %244 = load ptr, ptr %exec.addr, align 8, !dbg !2474, !tbaa !1527
  %245 = load ptr, ptr %value.addr, align 8, !dbg !2476, !tbaa !1527
  %246 = load ptr, ptr %data.addr, align 8, !dbg !2477, !tbaa !1527
  call void @xmlFARegExecSaveInputString(ptr noundef %244, ptr noundef %245, ptr noundef %246), !dbg !2478
  br label %if.end269, !dbg !2479

if.end269:                                        ; preds = %if.then268, %if.then259
  %247 = load ptr, ptr %exec.addr, align 8, !dbg !2480, !tbaa !1527
  call void @xmlFARegExecSave(ptr noundef %247), !dbg !2481
  %248 = load i32, ptr %transno260, align 4, !dbg !2482, !tbaa !1767
  %249 = load ptr, ptr %exec.addr, align 8, !dbg !2483, !tbaa !1527
  %transno270 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %249, i32 0, i32 6, !dbg !2484
  store i32 %248, ptr %transno270, align 8, !dbg !2485, !tbaa !1614
  %250 = load ptr, ptr %state262, align 8, !dbg !2486, !tbaa !1527
  %251 = load ptr, ptr %exec.addr, align 8, !dbg !2487, !tbaa !1527
  %state271 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %251, i32 0, i32 5, !dbg !2488
  store ptr %250, ptr %state271, align 8, !dbg !2489, !tbaa !1610
  call void @llvm.lifetime.end.p0(i64 8, ptr %state262) #8, !dbg !2490
  call void @llvm.lifetime.end.p0(i64 4, ptr %transno260) #8, !dbg !2490
  br label %if.end272, !dbg !2491

if.end272:                                        ; preds = %if.end269, %if.end255
  %252 = load ptr, ptr %value.addr, align 8, !dbg !2492, !tbaa !1527
  %253 = load ptr, ptr %atom, align 8, !dbg !2493, !tbaa !1527
  %valuep273 = getelementptr inbounds %struct._xmlRegAtom, ptr %253, i32 0, i32 5, !dbg !2494
  %254 = load ptr, ptr %valuep273, align 8, !dbg !2494, !tbaa !2159
  %call274 = call i32 @xmlStrEqual(ptr noundef %252, ptr noundef %254), !dbg !2495
  store i32 %call274, ptr %ret, align 4, !dbg !2496, !tbaa !1767
  %255 = load ptr, ptr %exec.addr, align 8, !dbg !2497, !tbaa !1527
  %transcount275 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %255, i32 0, i32 7, !dbg !2498
  %256 = load i32, ptr %transcount275, align 4, !dbg !2499, !tbaa !1618
  %inc276 = add nsw i32 %256, 1, !dbg !2499
  store i32 %inc276, ptr %transcount275, align 4, !dbg !2499, !tbaa !1618
  br label %do.cond, !dbg !2500

do.cond:                                          ; preds = %if.end272
  %257 = load i32, ptr %ret, align 4, !dbg !2501, !tbaa !1767
  %cmp277 = icmp eq i32 %257, 1, !dbg !2502
  br i1 %cmp277, label %do.body, label %do.end, !dbg !2500, !llvm.loop !2503

do.end:                                           ; preds = %do.cond, %if.then253, %if.then238
  %258 = load ptr, ptr %exec.addr, align 8, !dbg !2505, !tbaa !1527
  %transcount278 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %258, i32 0, i32 7, !dbg !2507
  %259 = load i32, ptr %transcount278, align 4, !dbg !2507, !tbaa !1618
  %260 = load ptr, ptr %atom, align 8, !dbg !2508, !tbaa !1527
  %min279 = getelementptr inbounds %struct._xmlRegAtom, ptr %260, i32 0, i32 3, !dbg !2509
  %261 = load i32, ptr %min279, align 4, !dbg !2509, !tbaa !2372
  %cmp280 = icmp slt i32 %259, %261, !dbg !2510
  br i1 %cmp280, label %if.then281, label %if.end282, !dbg !2511

if.then281:                                       ; preds = %do.end
  store i32 0, ptr %ret, align 4, !dbg !2512, !tbaa !1767
  br label %if.end282, !dbg !2513

if.end282:                                        ; preds = %if.then281, %do.end
  %262 = load i32, ptr %ret, align 4, !dbg !2514, !tbaa !1767
  %cmp283 = icmp slt i32 %262, 0, !dbg !2516
  br i1 %cmp283, label %if.then284, label %if.end285, !dbg !2517

if.then284:                                       ; preds = %if.end282
  store i32 0, ptr %ret, align 4, !dbg !2518, !tbaa !1767
  br label %if.end285, !dbg !2519

if.end285:                                        ; preds = %if.then284, %if.end282
  %263 = load i32, ptr %ret, align 4, !dbg !2520, !tbaa !1767
  %cmp286 = icmp eq i32 %263, 0, !dbg !2522
  br i1 %cmp286, label %if.then287, label %if.end288, !dbg !2523

if.then287:                                       ; preds = %if.end285
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2524

if.end288:                                        ; preds = %if.end285
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !2526
  br label %cleanup, !dbg !2526

cleanup:                                          ; preds = %if.then287, %if.end288
  call void @llvm.lifetime.end.p0(i64 8, ptr %to219) #8, !dbg !2526
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup485 [
    i32 0, label %cleanup.cont
    i32 4, label %rollback
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end289, !dbg !2527

if.end289:                                        ; preds = %cleanup.cont, %land.lhs.true215, %land.lhs.true212, %if.end210
  br label %if.end290, !dbg !2528

if.end290:                                        ; preds = %if.end289, %if.else178
  br label %if.end291

if.end291:                                        ; preds = %if.end290
  br label %if.end292

if.end292:                                        ; preds = %if.end291, %land.end172
  br label %if.end293

if.end293:                                        ; preds = %if.end292, %for.end151
  br label %if.end294

if.end294:                                        ; preds = %if.end293, %if.end109
  %264 = load i32, ptr %ret, align 4, !dbg !2529, !tbaa !1767
  %cmp295 = icmp eq i32 %264, 1, !dbg !2531
  br i1 %cmp295, label %if.then296, label %if.else401, !dbg !2532

if.then296:                                       ; preds = %if.end294
  %265 = load ptr, ptr %exec.addr, align 8, !dbg !2533, !tbaa !1527
  %callback = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %265, i32 0, i32 3, !dbg !2536
  %266 = load ptr, ptr %callback, align 8, !dbg !2536, !tbaa !1623
  %cmp297 = icmp ne ptr %266, null, !dbg !2537
  br i1 %cmp297, label %land.lhs.true298, label %if.end307, !dbg !2538

land.lhs.true298:                                 ; preds = %if.then296
  %267 = load ptr, ptr %atom, align 8, !dbg !2539, !tbaa !1527
  %cmp299 = icmp ne ptr %267, null, !dbg !2540
  br i1 %cmp299, label %land.lhs.true300, label %if.end307, !dbg !2541

land.lhs.true300:                                 ; preds = %land.lhs.true298
  %268 = load ptr, ptr %data.addr, align 8, !dbg !2542, !tbaa !1527
  %cmp301 = icmp ne ptr %268, null, !dbg !2543
  br i1 %cmp301, label %if.then302, label %if.end307, !dbg !2544

if.then302:                                       ; preds = %land.lhs.true300
  %269 = load ptr, ptr %exec.addr, align 8, !dbg !2545, !tbaa !1527
  %callback303 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %269, i32 0, i32 3, !dbg !2547
  %270 = load ptr, ptr %callback303, align 8, !dbg !2547, !tbaa !1623
  %271 = load ptr, ptr %exec.addr, align 8, !dbg !2548, !tbaa !1527
  %data304 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %271, i32 0, i32 4, !dbg !2549
  %272 = load ptr, ptr %data304, align 8, !dbg !2549, !tbaa !1628
  %273 = load ptr, ptr %atom, align 8, !dbg !2550, !tbaa !1527
  %valuep305 = getelementptr inbounds %struct._xmlRegAtom, ptr %273, i32 0, i32 5, !dbg !2551
  %274 = load ptr, ptr %valuep305, align 8, !dbg !2551, !tbaa !2159
  %275 = load ptr, ptr %atom, align 8, !dbg !2552, !tbaa !1527
  %data306 = getelementptr inbounds %struct._xmlRegAtom, ptr %275, i32 0, i32 15, !dbg !2553
  %276 = load ptr, ptr %data306, align 8, !dbg !2553, !tbaa !2554
  %277 = load ptr, ptr %data.addr, align 8, !dbg !2555, !tbaa !1527
  call void %270(ptr noundef %272, ptr noundef %274, ptr noundef %276, ptr noundef %277), !dbg !2545
  br label %if.end307, !dbg !2556

if.end307:                                        ; preds = %if.then302, %land.lhs.true300, %land.lhs.true298, %if.then296
  %278 = load ptr, ptr %exec.addr, align 8, !dbg !2557, !tbaa !1527
  %state308 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %278, i32 0, i32 5, !dbg !2559
  %279 = load ptr, ptr %state308, align 8, !dbg !2559, !tbaa !1610
  %nbTrans309 = getelementptr inbounds %struct._xmlAutomataState, ptr %279, i32 0, i32 6, !dbg !2560
  %280 = load i32, ptr %nbTrans309, align 8, !dbg !2560, !tbaa !2052
  %281 = load ptr, ptr %exec.addr, align 8, !dbg !2561, !tbaa !1527
  %transno310 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %281, i32 0, i32 6, !dbg !2562
  %282 = load i32, ptr %transno310, align 8, !dbg !2562, !tbaa !1614
  %add311 = add nsw i32 %282, 1, !dbg !2563
  %cmp312 = icmp sgt i32 %280, %add311, !dbg !2564
  br i1 %cmp312, label %if.then313, label %if.end318, !dbg !2565

if.then313:                                       ; preds = %if.end307
  %283 = load ptr, ptr %exec.addr, align 8, !dbg !2566, !tbaa !1527
  %inputStackNr314 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %283, i32 0, i32 13, !dbg !2569
  %284 = load i32, ptr %inputStackNr314, align 4, !dbg !2569, !tbaa !1685
  %cmp315 = icmp sle i32 %284, 0, !dbg !2570
  br i1 %cmp315, label %if.then316, label %if.end317, !dbg !2571

if.then316:                                       ; preds = %if.then313
  %285 = load ptr, ptr %exec.addr, align 8, !dbg !2572, !tbaa !1527
  %286 = load ptr, ptr %value.addr, align 8, !dbg !2574, !tbaa !1527
  %287 = load ptr, ptr %data.addr, align 8, !dbg !2575, !tbaa !1527
  call void @xmlFARegExecSaveInputString(ptr noundef %285, ptr noundef %286, ptr noundef %287), !dbg !2576
  br label %if.end317, !dbg !2577

if.end317:                                        ; preds = %if.then316, %if.then313
  %288 = load ptr, ptr %exec.addr, align 8, !dbg !2578, !tbaa !1527
  call void @xmlFARegExecSave(ptr noundef %288), !dbg !2579
  br label %if.end318, !dbg !2580

if.end318:                                        ; preds = %if.end317, %if.end307
  %289 = load ptr, ptr %trans, align 8, !dbg !2581, !tbaa !1527
  %counter319 = getelementptr inbounds %struct._xmlRegTrans, ptr %289, i32 0, i32 2, !dbg !2583
  %290 = load i32, ptr %counter319, align 4, !dbg !2583, !tbaa !2123
  %cmp320 = icmp sge i32 %290, 0, !dbg !2584
  br i1 %cmp320, label %if.then321, label %if.end327, !dbg !2585

if.then321:                                       ; preds = %if.end318
  %291 = load ptr, ptr %exec.addr, align 8, !dbg !2586, !tbaa !1527
  %counts322 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %291, i32 0, i32 11, !dbg !2588
  %292 = load ptr, ptr %counts322, align 8, !dbg !2588, !tbaa !1644
  %293 = load ptr, ptr %trans, align 8, !dbg !2589, !tbaa !1527
  %counter323 = getelementptr inbounds %struct._xmlRegTrans, ptr %293, i32 0, i32 2, !dbg !2590
  %294 = load i32, ptr %counter323, align 4, !dbg !2590, !tbaa !2123
  %idxprom324 = sext i32 %294 to i64, !dbg !2586
  %arrayidx325 = getelementptr inbounds i32, ptr %292, i64 %idxprom324, !dbg !2586
  %295 = load i32, ptr %arrayidx325, align 4, !dbg !2591, !tbaa !1767
  %inc326 = add nsw i32 %295, 1, !dbg !2591
  store i32 %inc326, ptr %arrayidx325, align 4, !dbg !2591, !tbaa !1767
  br label %if.end327, !dbg !2592

if.end327:                                        ; preds = %if.then321, %if.end318
  %296 = load ptr, ptr %trans, align 8, !dbg !2593, !tbaa !1527
  %count328 = getelementptr inbounds %struct._xmlRegTrans, ptr %296, i32 0, i32 3, !dbg !2595
  %297 = load i32, ptr %count328, align 8, !dbg !2595, !tbaa !2077
  %cmp329 = icmp sge i32 %297, 0, !dbg !2596
  br i1 %cmp329, label %land.lhs.true330, label %if.end338, !dbg !2597

land.lhs.true330:                                 ; preds = %if.end327
  %298 = load ptr, ptr %trans, align 8, !dbg !2598, !tbaa !1527
  %count331 = getelementptr inbounds %struct._xmlRegTrans, ptr %298, i32 0, i32 3, !dbg !2599
  %299 = load i32, ptr %count331, align 8, !dbg !2599, !tbaa !2077
  %cmp332 = icmp slt i32 %299, 1193046, !dbg !2600
  br i1 %cmp332, label %if.then333, label %if.end338, !dbg !2601

if.then333:                                       ; preds = %land.lhs.true330
  %300 = load ptr, ptr %exec.addr, align 8, !dbg !2602, !tbaa !1527
  %counts334 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %300, i32 0, i32 11, !dbg !2604
  %301 = load ptr, ptr %counts334, align 8, !dbg !2604, !tbaa !1644
  %302 = load ptr, ptr %trans, align 8, !dbg !2605, !tbaa !1527
  %count335 = getelementptr inbounds %struct._xmlRegTrans, ptr %302, i32 0, i32 3, !dbg !2606
  %303 = load i32, ptr %count335, align 8, !dbg !2606, !tbaa !2077
  %idxprom336 = sext i32 %303 to i64, !dbg !2602
  %arrayidx337 = getelementptr inbounds i32, ptr %301, i64 %idxprom336, !dbg !2602
  store i32 0, ptr %arrayidx337, align 4, !dbg !2607, !tbaa !1767
  br label %if.end338, !dbg !2608

if.end338:                                        ; preds = %if.then333, %land.lhs.true330, %if.end327
  %304 = load ptr, ptr %exec.addr, align 8, !dbg !2609, !tbaa !1527
  %comp339 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %304, i32 0, i32 2, !dbg !2611
  %305 = load ptr, ptr %comp339, align 8, !dbg !2611, !tbaa !1599
  %states340 = getelementptr inbounds %struct._xmlRegexp, ptr %305, i32 0, i32 2, !dbg !2612
  %306 = load ptr, ptr %states340, align 8, !dbg !2612, !tbaa !1551
  %307 = load ptr, ptr %trans, align 8, !dbg !2613, !tbaa !1527
  %to341 = getelementptr inbounds %struct._xmlRegTrans, ptr %307, i32 0, i32 1, !dbg !2614
  %308 = load i32, ptr %to341, align 8, !dbg !2614, !tbaa !2065
  %idxprom342 = sext i32 %308 to i64, !dbg !2609
  %arrayidx343 = getelementptr inbounds ptr, ptr %306, i64 %idxprom342, !dbg !2609
  %309 = load ptr, ptr %arrayidx343, align 8, !dbg !2609, !tbaa !1527
  %cmp344 = icmp ne ptr %309, null, !dbg !2615
  br i1 %cmp344, label %land.lhs.true345, label %if.end363, !dbg !2616

land.lhs.true345:                                 ; preds = %if.end338
  %310 = load ptr, ptr %exec.addr, align 8, !dbg !2617, !tbaa !1527
  %comp346 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %310, i32 0, i32 2, !dbg !2618
  %311 = load ptr, ptr %comp346, align 8, !dbg !2618, !tbaa !1599
  %states347 = getelementptr inbounds %struct._xmlRegexp, ptr %311, i32 0, i32 2, !dbg !2619
  %312 = load ptr, ptr %states347, align 8, !dbg !2619, !tbaa !1551
  %313 = load ptr, ptr %trans, align 8, !dbg !2620, !tbaa !1527
  %to348 = getelementptr inbounds %struct._xmlRegTrans, ptr %313, i32 0, i32 1, !dbg !2621
  %314 = load i32, ptr %to348, align 8, !dbg !2621, !tbaa !2065
  %idxprom349 = sext i32 %314 to i64, !dbg !2617
  %arrayidx350 = getelementptr inbounds ptr, ptr %312, i64 %idxprom349, !dbg !2617
  %315 = load ptr, ptr %arrayidx350, align 8, !dbg !2617, !tbaa !1527
  %type351 = getelementptr inbounds %struct._xmlAutomataState, ptr %315, i32 0, i32 0, !dbg !2622
  %316 = load i32, ptr %type351, align 8, !dbg !2622, !tbaa !1984
  %cmp352 = icmp eq i32 %316, 4, !dbg !2623
  br i1 %cmp352, label %if.then353, label %if.end363, !dbg !2624

if.then353:                                       ; preds = %land.lhs.true345
  %317 = load ptr, ptr %exec.addr, align 8, !dbg !2625, !tbaa !1527
  %errString = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %317, i32 0, i32 20, !dbg !2628
  %318 = load ptr, ptr %errString, align 8, !dbg !2628, !tbaa !1697
  %cmp354 = icmp ne ptr %318, null, !dbg !2629
  br i1 %cmp354, label %if.then355, label %if.end357, !dbg !2630

if.then355:                                       ; preds = %if.then353
  %319 = load ptr, ptr @xmlFree, align 8, !dbg !2631, !tbaa !1527
  %320 = load ptr, ptr %exec.addr, align 8, !dbg !2632, !tbaa !1527
  %errString356 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %320, i32 0, i32 20, !dbg !2633
  %321 = load ptr, ptr %errString356, align 8, !dbg !2633, !tbaa !1697
  call void %319(ptr noundef %321), !dbg !2631
  br label %if.end357, !dbg !2631

if.end357:                                        ; preds = %if.then355, %if.then353
  %322 = load ptr, ptr %value.addr, align 8, !dbg !2634, !tbaa !1527
  %call358 = call ptr @xmlStrdup(ptr noundef %322), !dbg !2635
  %323 = load ptr, ptr %exec.addr, align 8, !dbg !2636, !tbaa !1527
  %errString359 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %323, i32 0, i32 20, !dbg !2637
  store ptr %call358, ptr %errString359, align 8, !dbg !2638, !tbaa !1697
  %324 = load ptr, ptr %exec.addr, align 8, !dbg !2639, !tbaa !1527
  %state360 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %324, i32 0, i32 5, !dbg !2640
  %325 = load ptr, ptr %state360, align 8, !dbg !2640, !tbaa !1610
  %326 = load ptr, ptr %exec.addr, align 8, !dbg !2641, !tbaa !1527
  %errState = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %326, i32 0, i32 19, !dbg !2642
  store ptr %325, ptr %errState, align 8, !dbg !2643, !tbaa !2644
  %327 = load ptr, ptr %exec.addr, align 8, !dbg !2645, !tbaa !1527
  %errCounts = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %327, i32 0, i32 21, !dbg !2646
  %328 = load ptr, ptr %errCounts, align 8, !dbg !2646, !tbaa !1669
  %329 = load ptr, ptr %exec.addr, align 8, !dbg !2647, !tbaa !1527
  %counts361 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %329, i32 0, i32 11, !dbg !2648
  %330 = load ptr, ptr %counts361, align 8, !dbg !2648, !tbaa !1644
  %331 = load ptr, ptr %exec.addr, align 8, !dbg !2649, !tbaa !1527
  %comp362 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %331, i32 0, i32 2, !dbg !2650
  %332 = load ptr, ptr %comp362, align 8, !dbg !2650, !tbaa !1599
  %nbCounters = getelementptr inbounds %struct._xmlRegexp, ptr %332, i32 0, i32 5, !dbg !2651
  %333 = load i32, ptr %nbCounters, align 8, !dbg !2651, !tbaa !1632
  %conv = sext i32 %333 to i64, !dbg !2649
  %mul = mul i64 %conv, 4, !dbg !2652
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %328, ptr align 4 %330, i64 %mul, i1 false), !dbg !2653
  br label %if.end363, !dbg !2654

if.end363:                                        ; preds = %if.end357, %land.lhs.true345, %if.end338
  %334 = load ptr, ptr %exec.addr, align 8, !dbg !2655, !tbaa !1527
  %comp364 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %334, i32 0, i32 2, !dbg !2656
  %335 = load ptr, ptr %comp364, align 8, !dbg !2656, !tbaa !1599
  %states365 = getelementptr inbounds %struct._xmlRegexp, ptr %335, i32 0, i32 2, !dbg !2657
  %336 = load ptr, ptr %states365, align 8, !dbg !2657, !tbaa !1551
  %337 = load ptr, ptr %trans, align 8, !dbg !2658, !tbaa !1527
  %to366 = getelementptr inbounds %struct._xmlRegTrans, ptr %337, i32 0, i32 1, !dbg !2659
  %338 = load i32, ptr %to366, align 8, !dbg !2659, !tbaa !2065
  %idxprom367 = sext i32 %338 to i64, !dbg !2655
  %arrayidx368 = getelementptr inbounds ptr, ptr %336, i64 %idxprom367, !dbg !2655
  %339 = load ptr, ptr %arrayidx368, align 8, !dbg !2655, !tbaa !1527
  %340 = load ptr, ptr %exec.addr, align 8, !dbg !2660, !tbaa !1527
  %state369 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %340, i32 0, i32 5, !dbg !2661
  store ptr %339, ptr %state369, align 8, !dbg !2662, !tbaa !1610
  %341 = load ptr, ptr %exec.addr, align 8, !dbg !2663, !tbaa !1527
  %transno370 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %341, i32 0, i32 6, !dbg !2664
  store i32 0, ptr %transno370, align 8, !dbg !2665, !tbaa !1614
  %342 = load ptr, ptr %trans, align 8, !dbg !2666, !tbaa !1527
  %atom371 = getelementptr inbounds %struct._xmlRegTrans, ptr %342, i32 0, i32 0, !dbg !2668
  %343 = load ptr, ptr %atom371, align 8, !dbg !2668, !tbaa !2072
  %cmp372 = icmp ne ptr %343, null, !dbg !2669
  br i1 %cmp372, label %if.then374, label %if.end400, !dbg !2670

if.then374:                                       ; preds = %if.end363
  %344 = load ptr, ptr %exec.addr, align 8, !dbg !2671, !tbaa !1527
  %inputStack375 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %344, i32 0, i32 17, !dbg !2674
  %345 = load ptr, ptr %inputStack375, align 8, !dbg !2674, !tbaa !1689
  %cmp376 = icmp ne ptr %345, null, !dbg !2675
  br i1 %cmp376, label %if.then378, label %if.else398, !dbg !2676

if.then378:                                       ; preds = %if.then374
  %346 = load ptr, ptr %exec.addr, align 8, !dbg !2677, !tbaa !1527
  %index379 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %346, i32 0, i32 14, !dbg !2679
  %347 = load i32, ptr %index379, align 8, !dbg !2680, !tbaa !1574
  %inc380 = add nsw i32 %347, 1, !dbg !2680
  store i32 %inc380, ptr %index379, align 8, !dbg !2680, !tbaa !1574
  %348 = load ptr, ptr %exec.addr, align 8, !dbg !2681, !tbaa !1527
  %index381 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %348, i32 0, i32 14, !dbg !2683
  %349 = load i32, ptr %index381, align 8, !dbg !2683, !tbaa !1574
  %350 = load ptr, ptr %exec.addr, align 8, !dbg !2684, !tbaa !1527
  %inputStackNr382 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %350, i32 0, i32 13, !dbg !2685
  %351 = load i32, ptr %inputStackNr382, align 4, !dbg !2685, !tbaa !1685
  %cmp383 = icmp slt i32 %349, %351, !dbg !2686
  br i1 %cmp383, label %if.then385, label %if.else396, !dbg !2687

if.then385:                                       ; preds = %if.then378
  %352 = load ptr, ptr %exec.addr, align 8, !dbg !2688, !tbaa !1527
  %inputStack386 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %352, i32 0, i32 17, !dbg !2690
  %353 = load ptr, ptr %inputStack386, align 8, !dbg !2690, !tbaa !1689
  %354 = load ptr, ptr %exec.addr, align 8, !dbg !2691, !tbaa !1527
  %index387 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %354, i32 0, i32 14, !dbg !2692
  %355 = load i32, ptr %index387, align 8, !dbg !2692, !tbaa !1574
  %idxprom388 = sext i32 %355 to i64, !dbg !2688
  %arrayidx389 = getelementptr inbounds %struct._xmlRegInputToken, ptr %353, i64 %idxprom388, !dbg !2688
  %value390 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx389, i32 0, i32 0, !dbg !2693
  %356 = load ptr, ptr %value390, align 8, !dbg !2693, !tbaa !1830
  store ptr %356, ptr %value.addr, align 8, !dbg !2694, !tbaa !1527
  %357 = load ptr, ptr %exec.addr, align 8, !dbg !2695, !tbaa !1527
  %inputStack391 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %357, i32 0, i32 17, !dbg !2696
  %358 = load ptr, ptr %inputStack391, align 8, !dbg !2696, !tbaa !1689
  %359 = load ptr, ptr %exec.addr, align 8, !dbg !2697, !tbaa !1527
  %index392 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %359, i32 0, i32 14, !dbg !2698
  %360 = load i32, ptr %index392, align 8, !dbg !2698, !tbaa !1574
  %idxprom393 = sext i32 %360 to i64, !dbg !2695
  %arrayidx394 = getelementptr inbounds %struct._xmlRegInputToken, ptr %358, i64 %idxprom393, !dbg !2695
  %data395 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx394, i32 0, i32 1, !dbg !2699
  %361 = load ptr, ptr %data395, align 8, !dbg !2699, !tbaa !2015
  store ptr %361, ptr %data.addr, align 8, !dbg !2700, !tbaa !1527
  br label %if.end397, !dbg !2701

if.else396:                                       ; preds = %if.then378
  store ptr null, ptr %value.addr, align 8, !dbg !2702, !tbaa !1527
  store ptr null, ptr %data.addr, align 8, !dbg !2704, !tbaa !1527
  br label %if.end397

if.end397:                                        ; preds = %if.else396, %if.then385
  br label %if.end399, !dbg !2705

if.else398:                                       ; preds = %if.then374
  store ptr null, ptr %value.addr, align 8, !dbg !2706, !tbaa !1527
  store ptr null, ptr %data.addr, align 8, !dbg !2708, !tbaa !1527
  br label %if.end399

if.end399:                                        ; preds = %if.else398, %if.end397
  br label %if.end400, !dbg !2709

if.end400:                                        ; preds = %if.end399, %if.end363
  br label %progress474, !dbg !2710

if.else401:                                       ; preds = %if.end294
  %362 = load i32, ptr %ret, align 4, !dbg !2711, !tbaa !1767
  %cmp402 = icmp slt i32 %362, 0, !dbg !2713
  br i1 %cmp402, label %if.then404, label %if.end406, !dbg !2714

if.then404:                                       ; preds = %if.else401
  %363 = load ptr, ptr %exec.addr, align 8, !dbg !2715, !tbaa !1527
  %status405 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %363, i32 0, i32 0, !dbg !2717
  store i32 -4, ptr %status405, align 8, !dbg !2718, !tbaa !1594
  br label %for.end411, !dbg !2719

if.end406:                                        ; preds = %if.else401
  br label %if.end407

if.end407:                                        ; preds = %if.end406
  br label %for.inc408, !dbg !2720

for.inc408:                                       ; preds = %if.end407, %if.then51
  %364 = load ptr, ptr %exec.addr, align 8, !dbg !2721, !tbaa !1527
  %transno409 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %364, i32 0, i32 6, !dbg !2722
  %365 = load i32, ptr %transno409, align 8, !dbg !2723, !tbaa !1614
  %inc410 = add nsw i32 %365, 1, !dbg !2723
  store i32 %inc410, ptr %transno409, align 8, !dbg !2723, !tbaa !1614
  br label %for.cond, !dbg !2724, !llvm.loop !2725

for.end411:                                       ; preds = %if.then404, %if.then175, %for.cond
  %366 = load ptr, ptr %exec.addr, align 8, !dbg !2727, !tbaa !1527
  %transno412 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %366, i32 0, i32 6, !dbg !2728
  %367 = load i32, ptr %transno412, align 8, !dbg !2728, !tbaa !1614
  %cmp413 = icmp ne i32 %367, 0, !dbg !2729
  br i1 %cmp413, label %if.then420, label %lor.lhs.false415, !dbg !2730

lor.lhs.false415:                                 ; preds = %for.end411
  %368 = load ptr, ptr %exec.addr, align 8, !dbg !2731, !tbaa !1527
  %state416 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %368, i32 0, i32 5, !dbg !2732
  %369 = load ptr, ptr %state416, align 8, !dbg !2732, !tbaa !1610
  %nbTrans417 = getelementptr inbounds %struct._xmlAutomataState, ptr %369, i32 0, i32 6, !dbg !2733
  %370 = load i32, ptr %nbTrans417, align 8, !dbg !2733, !tbaa !2052
  %cmp418 = icmp eq i32 %370, 0, !dbg !2734
  br i1 %cmp418, label %if.then420, label %if.end473, !dbg !2735

if.then420:                                       ; preds = %lor.lhs.false415, %for.end411
  br label %rollback, !dbg !2736

rollback:                                         ; preds = %if.then420, %cleanup, %if.then41
  tail call void @llvm.dbg.label(metadata !1925), !dbg !2737
  %371 = load i32, ptr %progress, align 4, !dbg !2738, !tbaa !1767
  %tobool421 = icmp ne i32 %371, 0, !dbg !2740
  br i1 %tobool421, label %land.lhs.true422, label %if.end453, !dbg !2741

land.lhs.true422:                                 ; preds = %rollback
  %372 = load ptr, ptr %exec.addr, align 8, !dbg !2742, !tbaa !1527
  %state423 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %372, i32 0, i32 5, !dbg !2743
  %373 = load ptr, ptr %state423, align 8, !dbg !2743, !tbaa !1610
  %cmp424 = icmp ne ptr %373, null, !dbg !2744
  br i1 %cmp424, label %land.lhs.true426, label %if.end453, !dbg !2745

land.lhs.true426:                                 ; preds = %land.lhs.true422
  %374 = load ptr, ptr %exec.addr, align 8, !dbg !2746, !tbaa !1527
  %state427 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %374, i32 0, i32 5, !dbg !2747
  %375 = load ptr, ptr %state427, align 8, !dbg !2747, !tbaa !1610
  %type428 = getelementptr inbounds %struct._xmlAutomataState, ptr %375, i32 0, i32 0, !dbg !2748
  %376 = load i32, ptr %type428, align 8, !dbg !2748, !tbaa !1984
  %cmp429 = icmp ne i32 %376, 4, !dbg !2749
  br i1 %cmp429, label %if.then431, label %if.end453, !dbg !2750

if.then431:                                       ; preds = %land.lhs.true426
  store i32 0, ptr %progress, align 4, !dbg !2751, !tbaa !1767
  %377 = load ptr, ptr %exec.addr, align 8, !dbg !2753, !tbaa !1527
  %errString432 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %377, i32 0, i32 20, !dbg !2755
  %378 = load ptr, ptr %errString432, align 8, !dbg !2755, !tbaa !1697
  %cmp433 = icmp ne ptr %378, null, !dbg !2756
  br i1 %cmp433, label %if.then435, label %if.end437, !dbg !2757

if.then435:                                       ; preds = %if.then431
  %379 = load ptr, ptr @xmlFree, align 8, !dbg !2758, !tbaa !1527
  %380 = load ptr, ptr %exec.addr, align 8, !dbg !2759, !tbaa !1527
  %errString436 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %380, i32 0, i32 20, !dbg !2760
  %381 = load ptr, ptr %errString436, align 8, !dbg !2760, !tbaa !1697
  call void %379(ptr noundef %381), !dbg !2758
  br label %if.end437, !dbg !2758

if.end437:                                        ; preds = %if.then435, %if.then431
  %382 = load ptr, ptr %value.addr, align 8, !dbg !2761, !tbaa !1527
  %call438 = call ptr @xmlStrdup(ptr noundef %382), !dbg !2762
  %383 = load ptr, ptr %exec.addr, align 8, !dbg !2763, !tbaa !1527
  %errString439 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %383, i32 0, i32 20, !dbg !2764
  store ptr %call438, ptr %errString439, align 8, !dbg !2765, !tbaa !1697
  %384 = load ptr, ptr %exec.addr, align 8, !dbg !2766, !tbaa !1527
  %state440 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %384, i32 0, i32 5, !dbg !2767
  %385 = load ptr, ptr %state440, align 8, !dbg !2767, !tbaa !1610
  %386 = load ptr, ptr %exec.addr, align 8, !dbg !2768, !tbaa !1527
  %errState441 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %386, i32 0, i32 19, !dbg !2769
  store ptr %385, ptr %errState441, align 8, !dbg !2770, !tbaa !2644
  %387 = load ptr, ptr %exec.addr, align 8, !dbg !2771, !tbaa !1527
  %comp442 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %387, i32 0, i32 2, !dbg !2773
  %388 = load ptr, ptr %comp442, align 8, !dbg !2773, !tbaa !1599
  %nbCounters443 = getelementptr inbounds %struct._xmlRegexp, ptr %388, i32 0, i32 5, !dbg !2774
  %389 = load i32, ptr %nbCounters443, align 8, !dbg !2774, !tbaa !1632
  %tobool444 = icmp ne i32 %389, 0, !dbg !2771
  br i1 %tobool444, label %if.then445, label %if.end452, !dbg !2775

if.then445:                                       ; preds = %if.end437
  %390 = load ptr, ptr %exec.addr, align 8, !dbg !2776, !tbaa !1527
  %errCounts446 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %390, i32 0, i32 21, !dbg !2777
  %391 = load ptr, ptr %errCounts446, align 8, !dbg !2777, !tbaa !1669
  %392 = load ptr, ptr %exec.addr, align 8, !dbg !2778, !tbaa !1527
  %counts447 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %392, i32 0, i32 11, !dbg !2779
  %393 = load ptr, ptr %counts447, align 8, !dbg !2779, !tbaa !1644
  %394 = load ptr, ptr %exec.addr, align 8, !dbg !2780, !tbaa !1527
  %comp448 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %394, i32 0, i32 2, !dbg !2781
  %395 = load ptr, ptr %comp448, align 8, !dbg !2781, !tbaa !1599
  %nbCounters449 = getelementptr inbounds %struct._xmlRegexp, ptr %395, i32 0, i32 5, !dbg !2782
  %396 = load i32, ptr %nbCounters449, align 8, !dbg !2782, !tbaa !1632
  %conv450 = sext i32 %396 to i64, !dbg !2780
  %mul451 = mul i64 %conv450, 4, !dbg !2783
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %391, ptr align 4 %393, i64 %mul451, i1 false), !dbg !2784
  br label %if.end452, !dbg !2784

if.end452:                                        ; preds = %if.then445, %if.end437
  br label %if.end453, !dbg !2785

if.end453:                                        ; preds = %if.end452, %land.lhs.true426, %land.lhs.true422, %rollback
  %397 = load ptr, ptr %exec.addr, align 8, !dbg !2786, !tbaa !1527
  %determinist = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %397, i32 0, i32 1, !dbg !2787
  store i32 0, ptr %determinist, align 4, !dbg !2788, !tbaa !1578
  %398 = load ptr, ptr %exec.addr, align 8, !dbg !2789, !tbaa !1527
  call void @xmlFARegExecRollBack(ptr noundef %398), !dbg !2790
  %399 = load ptr, ptr %exec.addr, align 8, !dbg !2791, !tbaa !1527
  %inputStack454 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %399, i32 0, i32 17, !dbg !2793
  %400 = load ptr, ptr %inputStack454, align 8, !dbg !2793, !tbaa !1689
  %cmp455 = icmp ne ptr %400, null, !dbg !2794
  br i1 %cmp455, label %land.lhs.true457, label %if.end472, !dbg !2795

land.lhs.true457:                                 ; preds = %if.end453
  %401 = load ptr, ptr %exec.addr, align 8, !dbg !2796, !tbaa !1527
  %status458 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %401, i32 0, i32 0, !dbg !2797
  %402 = load i32, ptr %status458, align 8, !dbg !2797, !tbaa !1594
  %cmp459 = icmp eq i32 %402, 0, !dbg !2798
  br i1 %cmp459, label %if.then461, label %if.end472, !dbg !2799

if.then461:                                       ; preds = %land.lhs.true457
  %403 = load ptr, ptr %exec.addr, align 8, !dbg !2800, !tbaa !1527
  %inputStack462 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %403, i32 0, i32 17, !dbg !2802
  %404 = load ptr, ptr %inputStack462, align 8, !dbg !2802, !tbaa !1689
  %405 = load ptr, ptr %exec.addr, align 8, !dbg !2803, !tbaa !1527
  %index463 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %405, i32 0, i32 14, !dbg !2804
  %406 = load i32, ptr %index463, align 8, !dbg !2804, !tbaa !1574
  %idxprom464 = sext i32 %406 to i64, !dbg !2800
  %arrayidx465 = getelementptr inbounds %struct._xmlRegInputToken, ptr %404, i64 %idxprom464, !dbg !2800
  %value466 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx465, i32 0, i32 0, !dbg !2805
  %407 = load ptr, ptr %value466, align 8, !dbg !2805, !tbaa !1830
  store ptr %407, ptr %value.addr, align 8, !dbg !2806, !tbaa !1527
  %408 = load ptr, ptr %exec.addr, align 8, !dbg !2807, !tbaa !1527
  %inputStack467 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %408, i32 0, i32 17, !dbg !2808
  %409 = load ptr, ptr %inputStack467, align 8, !dbg !2808, !tbaa !1689
  %410 = load ptr, ptr %exec.addr, align 8, !dbg !2809, !tbaa !1527
  %index468 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %410, i32 0, i32 14, !dbg !2810
  %411 = load i32, ptr %index468, align 8, !dbg !2810, !tbaa !1574
  %idxprom469 = sext i32 %411 to i64, !dbg !2807
  %arrayidx470 = getelementptr inbounds %struct._xmlRegInputToken, ptr %409, i64 %idxprom469, !dbg !2807
  %data471 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx470, i32 0, i32 1, !dbg !2811
  %412 = load ptr, ptr %data471, align 8, !dbg !2811, !tbaa !2015
  store ptr %412, ptr %data.addr, align 8, !dbg !2812, !tbaa !1527
  br label %if.end472, !dbg !2813

if.end472:                                        ; preds = %if.then461, %land.lhs.true457, %if.end453
  br label %if.end473, !dbg !2814

if.end473:                                        ; preds = %if.end472, %lor.lhs.false415
  br label %while.cond, !dbg !2815, !llvm.loop !2816

progress474:                                      ; preds = %if.end400
  tail call void @llvm.dbg.label(metadata !1928), !dbg !2818
  store i32 1, ptr %progress, align 4, !dbg !2819, !tbaa !1767
  br label %while.cond, !dbg !2820, !llvm.loop !2816

while.end:                                        ; preds = %land.end37
  %413 = load ptr, ptr %exec.addr, align 8, !dbg !2821, !tbaa !1527
  %status475 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %413, i32 0, i32 0, !dbg !2823
  %414 = load i32, ptr %status475, align 8, !dbg !2823, !tbaa !1594
  %cmp476 = icmp eq i32 %414, 0, !dbg !2824
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !2825

if.then478:                                       ; preds = %while.end
  %415 = load ptr, ptr %exec.addr, align 8, !dbg !2826, !tbaa !1527
  %state479 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %415, i32 0, i32 5, !dbg !2828
  %416 = load ptr, ptr %state479, align 8, !dbg !2828, !tbaa !1610
  %type480 = getelementptr inbounds %struct._xmlAutomataState, ptr %416, i32 0, i32 0, !dbg !2829
  %417 = load i32, ptr %type480, align 8, !dbg !2829, !tbaa !1984
  %cmp481 = icmp eq i32 %417, 2, !dbg !2830
  %conv482 = zext i1 %cmp481 to i32, !dbg !2830
  store i32 %conv482, ptr %retval, align 4, !dbg !2831
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup485, !dbg !2831

if.end483:                                        ; preds = %while.end
  %418 = load ptr, ptr %exec.addr, align 8, !dbg !2832, !tbaa !1527
  %status484 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %418, i32 0, i32 0, !dbg !2833
  %419 = load i32, ptr %status484, align 8, !dbg !2833, !tbaa !1594
  store i32 %419, ptr %retval, align 4, !dbg !2834
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup485, !dbg !2834

cleanup485:                                       ; preds = %if.end483, %if.then478, %cleanup, %if.then16, %if.then10, %if.then5, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %progress) #8, !dbg !2835
  call void @llvm.lifetime.end.p0(i64 4, ptr %final) #8, !dbg !2835
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !2835
  call void @llvm.lifetime.end.p0(i64 8, ptr %atom) #8, !dbg !2835
  call void @llvm.lifetime.end.p0(i64 8, ptr %trans) #8, !dbg !2835
  %420 = load i32, ptr %retval, align 4, !dbg !2835
  ret i32 %420, !dbg !2835
}

; Function Attrs: nounwind uwtable
define i32 @xmlRegExecPushString2(ptr noundef %exec, ptr noundef %value, ptr noundef %value2, ptr noundef %data) #0 !dbg !2836 {
entry:
  %retval = alloca i32, align 4
  %exec.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %value2.addr = alloca ptr, align 8
  %data.addr = alloca ptr, align 8
  %buf = alloca [150 x i8], align 16
  %lenn = alloca i32, align 4
  %lenp = alloca i32, align 4
  %ret = alloca i32, align 4
  %str = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %exec, ptr %exec.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %exec.addr, metadata !2840, metadata !DIExpression()), !dbg !2852
  store ptr %value, ptr %value.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !2841, metadata !DIExpression()), !dbg !2853
  store ptr %value2, ptr %value2.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %value2.addr, metadata !2842, metadata !DIExpression()), !dbg !2854
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !2843, metadata !DIExpression()), !dbg !2855
  call void @llvm.lifetime.start.p0(i64 150, ptr %buf) #8, !dbg !2856
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !2844, metadata !DIExpression()), !dbg !2857
  call void @llvm.lifetime.start.p0(i64 4, ptr %lenn) #8, !dbg !2858
  tail call void @llvm.dbg.declare(metadata ptr %lenn, metadata !2848, metadata !DIExpression()), !dbg !2859
  call void @llvm.lifetime.start.p0(i64 4, ptr %lenp) #8, !dbg !2858
  tail call void @llvm.dbg.declare(metadata ptr %lenp, metadata !2849, metadata !DIExpression()), !dbg !2860
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !2858
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !2850, metadata !DIExpression()), !dbg !2861
  call void @llvm.lifetime.start.p0(i64 8, ptr %str) #8, !dbg !2862
  tail call void @llvm.dbg.declare(metadata ptr %str, metadata !2851, metadata !DIExpression()), !dbg !2863
  %0 = load ptr, ptr %exec.addr, align 8, !dbg !2864, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !2866
  br i1 %cmp, label %if.then, label %if.end, !dbg !2867

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !2868
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2868

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %exec.addr, align 8, !dbg !2869, !tbaa !1527
  %comp = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %1, i32 0, i32 2, !dbg !2871
  %2 = load ptr, ptr %comp, align 8, !dbg !2871, !tbaa !1599
  %cmp1 = icmp eq ptr %2, null, !dbg !2872
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2873

if.then2:                                         ; preds = %if.end
  store i32 -1, ptr %retval, align 4, !dbg !2874
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2874

if.end3:                                          ; preds = %if.end
  %3 = load ptr, ptr %exec.addr, align 8, !dbg !2875, !tbaa !1527
  %status = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %3, i32 0, i32 0, !dbg !2877
  %4 = load i32, ptr %status, align 8, !dbg !2877, !tbaa !1594
  %cmp4 = icmp ne i32 %4, 0, !dbg !2878
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !2879

if.then5:                                         ; preds = %if.end3
  %5 = load ptr, ptr %exec.addr, align 8, !dbg !2880, !tbaa !1527
  %status6 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %5, i32 0, i32 0, !dbg !2881
  %6 = load i32, ptr %status6, align 8, !dbg !2881, !tbaa !1594
  store i32 %6, ptr %retval, align 4, !dbg !2882
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2882

if.end7:                                          ; preds = %if.end3
  %7 = load ptr, ptr %value2.addr, align 8, !dbg !2883, !tbaa !1527
  %cmp8 = icmp eq ptr %7, null, !dbg !2885
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2886

if.then9:                                         ; preds = %if.end7
  %8 = load ptr, ptr %exec.addr, align 8, !dbg !2887, !tbaa !1527
  %9 = load ptr, ptr %value.addr, align 8, !dbg !2888, !tbaa !1527
  %10 = load ptr, ptr %data.addr, align 8, !dbg !2889, !tbaa !1527
  %call = call i32 @xmlRegExecPushString(ptr noundef %8, ptr noundef %9, ptr noundef %10), !dbg !2890
  store i32 %call, ptr %retval, align 4, !dbg !2891
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2891

if.end10:                                         ; preds = %if.end7
  %11 = load ptr, ptr %value2.addr, align 8, !dbg !2892, !tbaa !1527
  %call11 = call i64 @strlen(ptr noundef %11) #9, !dbg !2893
  %conv = trunc i64 %call11 to i32, !dbg !2893
  store i32 %conv, ptr %lenn, align 4, !dbg !2894, !tbaa !1767
  %12 = load ptr, ptr %value.addr, align 8, !dbg !2895, !tbaa !1527
  %call12 = call i64 @strlen(ptr noundef %12) #9, !dbg !2896
  %conv13 = trunc i64 %call12 to i32, !dbg !2896
  store i32 %conv13, ptr %lenp, align 4, !dbg !2897, !tbaa !1767
  %13 = load i32, ptr %lenn, align 4, !dbg !2898, !tbaa !1767
  %14 = load i32, ptr %lenp, align 4, !dbg !2900, !tbaa !1767
  %add = add nsw i32 %13, %14, !dbg !2901
  %add14 = add nsw i32 %add, 2, !dbg !2902
  %cmp15 = icmp slt i32 150, %add14, !dbg !2903
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !2904

if.then17:                                        ; preds = %if.end10
  %15 = load ptr, ptr @xmlMallocAtomic, align 8, !dbg !2905, !tbaa !1527
  %16 = load i32, ptr %lenn, align 4, !dbg !2907, !tbaa !1767
  %17 = load i32, ptr %lenp, align 4, !dbg !2908, !tbaa !1767
  %add18 = add nsw i32 %16, %17, !dbg !2909
  %add19 = add nsw i32 %add18, 2, !dbg !2910
  %conv20 = sext i32 %add19 to i64, !dbg !2907
  %call21 = call ptr %15(i64 noundef %conv20), !dbg !2905
  store ptr %call21, ptr %str, align 8, !dbg !2911, !tbaa !1527
  %18 = load ptr, ptr %str, align 8, !dbg !2912, !tbaa !1527
  %cmp22 = icmp eq ptr %18, null, !dbg !2914
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !2915

if.then24:                                        ; preds = %if.then17
  %19 = load ptr, ptr %exec.addr, align 8, !dbg !2916, !tbaa !1527
  %status25 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %19, i32 0, i32 0, !dbg !2918
  store i32 -1, ptr %status25, align 8, !dbg !2919, !tbaa !1594
  store i32 -1, ptr %retval, align 4, !dbg !2920
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2920

if.end26:                                         ; preds = %if.then17
  br label %if.end27, !dbg !2921

if.else:                                          ; preds = %if.end10
  %arraydecay = getelementptr inbounds [150 x i8], ptr %buf, i64 0, i64 0, !dbg !2922
  store ptr %arraydecay, ptr %str, align 8, !dbg !2924, !tbaa !1527
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.end26
  %20 = load ptr, ptr %str, align 8, !dbg !2925, !tbaa !1527
  %arrayidx = getelementptr inbounds i8, ptr %20, i64 0, !dbg !2925
  %21 = load ptr, ptr %value.addr, align 8, !dbg !2926, !tbaa !1527
  %22 = load i32, ptr %lenp, align 4, !dbg !2927, !tbaa !1767
  %conv28 = sext i32 %22 to i64, !dbg !2927
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx, ptr align 1 %21, i64 %conv28, i1 false), !dbg !2928
  %23 = load ptr, ptr %str, align 8, !dbg !2929, !tbaa !1527
  %24 = load i32, ptr %lenp, align 4, !dbg !2930, !tbaa !1767
  %idxprom = sext i32 %24 to i64, !dbg !2929
  %arrayidx29 = getelementptr inbounds i8, ptr %23, i64 %idxprom, !dbg !2929
  store i8 124, ptr %arrayidx29, align 1, !dbg !2931, !tbaa !2932
  %25 = load ptr, ptr %str, align 8, !dbg !2933, !tbaa !1527
  %26 = load i32, ptr %lenp, align 4, !dbg !2934, !tbaa !1767
  %add30 = add nsw i32 %26, 1, !dbg !2935
  %idxprom31 = sext i32 %add30 to i64, !dbg !2933
  %arrayidx32 = getelementptr inbounds i8, ptr %25, i64 %idxprom31, !dbg !2933
  %27 = load ptr, ptr %value2.addr, align 8, !dbg !2936, !tbaa !1527
  %28 = load i32, ptr %lenn, align 4, !dbg !2937, !tbaa !1767
  %conv33 = sext i32 %28 to i64, !dbg !2937
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx32, ptr align 1 %27, i64 %conv33, i1 false), !dbg !2938
  %29 = load ptr, ptr %str, align 8, !dbg !2939, !tbaa !1527
  %30 = load i32, ptr %lenn, align 4, !dbg !2940, !tbaa !1767
  %31 = load i32, ptr %lenp, align 4, !dbg !2941, !tbaa !1767
  %add34 = add nsw i32 %30, %31, !dbg !2942
  %add35 = add nsw i32 %add34, 1, !dbg !2943
  %idxprom36 = sext i32 %add35 to i64, !dbg !2939
  %arrayidx37 = getelementptr inbounds i8, ptr %29, i64 %idxprom36, !dbg !2939
  store i8 0, ptr %arrayidx37, align 1, !dbg !2944, !tbaa !2932
  %32 = load ptr, ptr %exec.addr, align 8, !dbg !2945, !tbaa !1527
  %comp38 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %32, i32 0, i32 2, !dbg !2947
  %33 = load ptr, ptr %comp38, align 8, !dbg !2947, !tbaa !1599
  %compact = getelementptr inbounds %struct._xmlRegexp, ptr %33, i32 0, i32 10, !dbg !2948
  %34 = load ptr, ptr %compact, align 8, !dbg !2948, !tbaa !1544
  %cmp39 = icmp ne ptr %34, null, !dbg !2949
  br i1 %cmp39, label %if.then41, label %if.else44, !dbg !2950

if.then41:                                        ; preds = %if.end27
  %35 = load ptr, ptr %exec.addr, align 8, !dbg !2951, !tbaa !1527
  %36 = load ptr, ptr %exec.addr, align 8, !dbg !2952, !tbaa !1527
  %comp42 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %36, i32 0, i32 2, !dbg !2953
  %37 = load ptr, ptr %comp42, align 8, !dbg !2953, !tbaa !1599
  %38 = load ptr, ptr %str, align 8, !dbg !2954, !tbaa !1527
  %39 = load ptr, ptr %data.addr, align 8, !dbg !2955, !tbaa !1527
  %call43 = call i32 @xmlRegCompactPushString(ptr noundef %35, ptr noundef %37, ptr noundef %38, ptr noundef %39), !dbg !2956
  store i32 %call43, ptr %ret, align 4, !dbg !2957, !tbaa !1767
  br label %if.end46, !dbg !2958

if.else44:                                        ; preds = %if.end27
  %40 = load ptr, ptr %exec.addr, align 8, !dbg !2959, !tbaa !1527
  %41 = load ptr, ptr %str, align 8, !dbg !2960, !tbaa !1527
  %42 = load ptr, ptr %data.addr, align 8, !dbg !2961, !tbaa !1527
  %call45 = call i32 @xmlRegExecPushStringInternal(ptr noundef %40, ptr noundef %41, ptr noundef %42, i32 noundef 1), !dbg !2962
  store i32 %call45, ptr %ret, align 4, !dbg !2963, !tbaa !1767
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.then41
  %43 = load ptr, ptr %str, align 8, !dbg !2964, !tbaa !1527
  %arraydecay47 = getelementptr inbounds [150 x i8], ptr %buf, i64 0, i64 0, !dbg !2966
  %cmp48 = icmp ne ptr %43, %arraydecay47, !dbg !2967
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !2968

if.then50:                                        ; preds = %if.end46
  %44 = load ptr, ptr @xmlFree, align 8, !dbg !2969, !tbaa !1527
  %45 = load ptr, ptr %str, align 8, !dbg !2970, !tbaa !1527
  call void %44(ptr noundef %45), !dbg !2969
  br label %if.end51, !dbg !2969

if.end51:                                         ; preds = %if.then50, %if.end46
  %46 = load i32, ptr %ret, align 4, !dbg !2971, !tbaa !1767
  store i32 %46, ptr %retval, align 4, !dbg !2972
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2972

cleanup:                                          ; preds = %if.end51, %if.then24, %if.then9, %if.then5, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %str) #8, !dbg !2973
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !2973
  call void @llvm.lifetime.end.p0(i64 4, ptr %lenp) #8, !dbg !2973
  call void @llvm.lifetime.end.p0(i64 4, ptr %lenn) #8, !dbg !2973
  call void @llvm.lifetime.end.p0(i64 150, ptr %buf) #8, !dbg !2973
  %47 = load i32, ptr %retval, align 4, !dbg !2973
  ret i32 %47, !dbg !2973
}

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !2974 i64 @strlen(ptr noundef) #3

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind uwtable
define internal i32 @xmlRegCompactPushString(ptr noundef %exec, ptr noundef %comp, ptr noundef %value, ptr noundef %data) #0 !dbg !2978 {
entry:
  %retval = alloca i32, align 4
  %exec.addr = alloca ptr, align 8
  %comp.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %data.addr = alloca ptr, align 8
  %state = alloca i32, align 4
  %i = alloca i32, align 4
  %target = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %exec, ptr %exec.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %exec.addr, metadata !2982, metadata !DIExpression()), !dbg !2990
  store ptr %comp, ptr %comp.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %comp.addr, metadata !2983, metadata !DIExpression()), !dbg !2991
  store ptr %value, ptr %value.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !2984, metadata !DIExpression()), !dbg !2992
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !2985, metadata !DIExpression()), !dbg !2993
  call void @llvm.lifetime.start.p0(i64 4, ptr %state) #8, !dbg !2994
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !2986, metadata !DIExpression()), !dbg !2995
  %0 = load ptr, ptr %exec.addr, align 8, !dbg !2996, !tbaa !1527
  %index = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %0, i32 0, i32 14, !dbg !2997
  %1 = load i32, ptr %index, align 8, !dbg !2997, !tbaa !1574
  store i32 %1, ptr %state, align 4, !dbg !2995, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !2998
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !2987, metadata !DIExpression()), !dbg !2999
  call void @llvm.lifetime.start.p0(i64 4, ptr %target) #8, !dbg !2998
  tail call void @llvm.dbg.declare(metadata ptr %target, metadata !2988, metadata !DIExpression()), !dbg !3000
  %2 = load ptr, ptr %comp.addr, align 8, !dbg !3001, !tbaa !1527
  %cmp = icmp eq ptr %2, null, !dbg !3003
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3004

lor.lhs.false:                                    ; preds = %entry
  %3 = load ptr, ptr %comp.addr, align 8, !dbg !3005, !tbaa !1527
  %compact = getelementptr inbounds %struct._xmlRegexp, ptr %3, i32 0, i32 10, !dbg !3006
  %4 = load ptr, ptr %compact, align 8, !dbg !3006, !tbaa !1544
  %cmp1 = icmp eq ptr %4, null, !dbg !3007
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !3008

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %5 = load ptr, ptr %comp.addr, align 8, !dbg !3009, !tbaa !1527
  %stringMap = getelementptr inbounds %struct._xmlRegexp, ptr %5, i32 0, i32 13, !dbg !3010
  %6 = load ptr, ptr %stringMap, align 8, !dbg !3010, !tbaa !3011
  %cmp3 = icmp eq ptr %6, null, !dbg !3012
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3013

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -1, ptr %retval, align 4, !dbg !3014
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3014

if.end:                                           ; preds = %lor.lhs.false2
  %7 = load ptr, ptr %value.addr, align 8, !dbg !3015, !tbaa !1527
  %cmp4 = icmp eq ptr %7, null, !dbg !3017
  br i1 %cmp4, label %if.then5, label %if.end10, !dbg !3018

if.then5:                                         ; preds = %if.end
  %8 = load ptr, ptr %comp.addr, align 8, !dbg !3019, !tbaa !1527
  %compact6 = getelementptr inbounds %struct._xmlRegexp, ptr %8, i32 0, i32 10, !dbg !3022
  %9 = load ptr, ptr %compact6, align 8, !dbg !3022, !tbaa !1544
  %10 = load i32, ptr %state, align 4, !dbg !3023, !tbaa !1767
  %11 = load ptr, ptr %comp.addr, align 8, !dbg !3024, !tbaa !1527
  %nbstrings = getelementptr inbounds %struct._xmlRegexp, ptr %11, i32 0, i32 12, !dbg !3025
  %12 = load i32, ptr %nbstrings, align 8, !dbg !3025, !tbaa !3026
  %add = add nsw i32 %12, 1, !dbg !3027
  %mul = mul nsw i32 %10, %add, !dbg !3028
  %idxprom = sext i32 %mul to i64, !dbg !3019
  %arrayidx = getelementptr inbounds i32, ptr %9, i64 %idxprom, !dbg !3019
  %13 = load i32, ptr %arrayidx, align 4, !dbg !3019, !tbaa !1767
  %cmp7 = icmp eq i32 %13, 2, !dbg !3029
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !3030

if.then8:                                         ; preds = %if.then5
  store i32 1, ptr %retval, align 4, !dbg !3031
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3031

if.end9:                                          ; preds = %if.then5
  store i32 0, ptr %retval, align 4, !dbg !3032
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3032

if.end10:                                         ; preds = %if.end
  store i32 0, ptr %i, align 4, !dbg !3033, !tbaa !1767
  br label %for.cond, !dbg !3035

for.cond:                                         ; preds = %for.inc, %if.end10
  %14 = load i32, ptr %i, align 4, !dbg !3036, !tbaa !1767
  %15 = load ptr, ptr %comp.addr, align 8, !dbg !3038, !tbaa !1527
  %nbstrings11 = getelementptr inbounds %struct._xmlRegexp, ptr %15, i32 0, i32 12, !dbg !3039
  %16 = load i32, ptr %nbstrings11, align 8, !dbg !3039, !tbaa !3026
  %cmp12 = icmp slt i32 %14, %16, !dbg !3040
  br i1 %cmp12, label %for.body, label %for.end, !dbg !3041

for.body:                                         ; preds = %for.cond
  %17 = load ptr, ptr %comp.addr, align 8, !dbg !3042, !tbaa !1527
  %compact13 = getelementptr inbounds %struct._xmlRegexp, ptr %17, i32 0, i32 10, !dbg !3044
  %18 = load ptr, ptr %compact13, align 8, !dbg !3044, !tbaa !1544
  %19 = load i32, ptr %state, align 4, !dbg !3045, !tbaa !1767
  %20 = load ptr, ptr %comp.addr, align 8, !dbg !3046, !tbaa !1527
  %nbstrings14 = getelementptr inbounds %struct._xmlRegexp, ptr %20, i32 0, i32 12, !dbg !3047
  %21 = load i32, ptr %nbstrings14, align 8, !dbg !3047, !tbaa !3026
  %add15 = add nsw i32 %21, 1, !dbg !3048
  %mul16 = mul nsw i32 %19, %add15, !dbg !3049
  %22 = load i32, ptr %i, align 4, !dbg !3050, !tbaa !1767
  %add17 = add nsw i32 %mul16, %22, !dbg !3051
  %add18 = add nsw i32 %add17, 1, !dbg !3052
  %idxprom19 = sext i32 %add18 to i64, !dbg !3042
  %arrayidx20 = getelementptr inbounds i32, ptr %18, i64 %idxprom19, !dbg !3042
  %23 = load i32, ptr %arrayidx20, align 4, !dbg !3042, !tbaa !1767
  store i32 %23, ptr %target, align 4, !dbg !3053, !tbaa !1767
  %24 = load i32, ptr %target, align 4, !dbg !3054, !tbaa !1767
  %cmp21 = icmp sgt i32 %24, 0, !dbg !3056
  br i1 %cmp21, label %land.lhs.true, label %if.end61, !dbg !3057

land.lhs.true:                                    ; preds = %for.body
  %25 = load i32, ptr %target, align 4, !dbg !3058, !tbaa !1767
  %26 = load ptr, ptr %comp.addr, align 8, !dbg !3059, !tbaa !1527
  %nbstates = getelementptr inbounds %struct._xmlRegexp, ptr %26, i32 0, i32 9, !dbg !3060
  %27 = load i32, ptr %nbstates, align 8, !dbg !3060, !tbaa !3061
  %cmp22 = icmp sle i32 %25, %27, !dbg !3062
  br i1 %cmp22, label %if.then23, label %if.end61, !dbg !3063

if.then23:                                        ; preds = %land.lhs.true
  %28 = load i32, ptr %target, align 4, !dbg !3064, !tbaa !1767
  %dec = add nsw i32 %28, -1, !dbg !3064
  store i32 %dec, ptr %target, align 4, !dbg !3064, !tbaa !1767
  %29 = load ptr, ptr %comp.addr, align 8, !dbg !3066, !tbaa !1527
  %stringMap24 = getelementptr inbounds %struct._xmlRegexp, ptr %29, i32 0, i32 13, !dbg !3068
  %30 = load ptr, ptr %stringMap24, align 8, !dbg !3068, !tbaa !3011
  %31 = load i32, ptr %i, align 4, !dbg !3069, !tbaa !1767
  %idxprom25 = sext i32 %31 to i64, !dbg !3066
  %arrayidx26 = getelementptr inbounds ptr, ptr %30, i64 %idxprom25, !dbg !3066
  %32 = load ptr, ptr %arrayidx26, align 8, !dbg !3066, !tbaa !1527
  %33 = load ptr, ptr %value.addr, align 8, !dbg !3070, !tbaa !1527
  %call = call i32 @xmlRegStrEqualWildcard(ptr noundef %32, ptr noundef %33), !dbg !3071
  %tobool = icmp ne i32 %call, 0, !dbg !3071
  br i1 %tobool, label %if.then27, label %if.end60, !dbg !3072

if.then27:                                        ; preds = %if.then23
  %34 = load i32, ptr %target, align 4, !dbg !3073, !tbaa !1767
  %35 = load ptr, ptr %exec.addr, align 8, !dbg !3075, !tbaa !1527
  %index28 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %35, i32 0, i32 14, !dbg !3076
  store i32 %34, ptr %index28, align 8, !dbg !3077, !tbaa !1574
  %36 = load ptr, ptr %exec.addr, align 8, !dbg !3078, !tbaa !1527
  %callback = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %36, i32 0, i32 3, !dbg !3080
  %37 = load ptr, ptr %callback, align 8, !dbg !3080, !tbaa !1623
  %cmp29 = icmp ne ptr %37, null, !dbg !3081
  br i1 %cmp29, label %land.lhs.true30, label %if.end41, !dbg !3082

land.lhs.true30:                                  ; preds = %if.then27
  %38 = load ptr, ptr %comp.addr, align 8, !dbg !3083, !tbaa !1527
  %transdata = getelementptr inbounds %struct._xmlRegexp, ptr %38, i32 0, i32 11, !dbg !3084
  %39 = load ptr, ptr %transdata, align 8, !dbg !3084, !tbaa !3085
  %cmp31 = icmp ne ptr %39, null, !dbg !3086
  br i1 %cmp31, label %if.then32, label %if.end41, !dbg !3087

if.then32:                                        ; preds = %land.lhs.true30
  %40 = load ptr, ptr %exec.addr, align 8, !dbg !3088, !tbaa !1527
  %callback33 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %40, i32 0, i32 3, !dbg !3090
  %41 = load ptr, ptr %callback33, align 8, !dbg !3090, !tbaa !1623
  %42 = load ptr, ptr %exec.addr, align 8, !dbg !3091, !tbaa !1527
  %data34 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %42, i32 0, i32 4, !dbg !3092
  %43 = load ptr, ptr %data34, align 8, !dbg !3092, !tbaa !1628
  %44 = load ptr, ptr %value.addr, align 8, !dbg !3093, !tbaa !1527
  %45 = load ptr, ptr %comp.addr, align 8, !dbg !3094, !tbaa !1527
  %transdata35 = getelementptr inbounds %struct._xmlRegexp, ptr %45, i32 0, i32 11, !dbg !3095
  %46 = load ptr, ptr %transdata35, align 8, !dbg !3095, !tbaa !3085
  %47 = load i32, ptr %state, align 4, !dbg !3096, !tbaa !1767
  %48 = load ptr, ptr %comp.addr, align 8, !dbg !3097, !tbaa !1527
  %nbstrings36 = getelementptr inbounds %struct._xmlRegexp, ptr %48, i32 0, i32 12, !dbg !3098
  %49 = load i32, ptr %nbstrings36, align 8, !dbg !3098, !tbaa !3026
  %mul37 = mul nsw i32 %47, %49, !dbg !3099
  %50 = load i32, ptr %i, align 4, !dbg !3100, !tbaa !1767
  %add38 = add nsw i32 %mul37, %50, !dbg !3101
  %idxprom39 = sext i32 %add38 to i64, !dbg !3094
  %arrayidx40 = getelementptr inbounds ptr, ptr %46, i64 %idxprom39, !dbg !3094
  %51 = load ptr, ptr %arrayidx40, align 8, !dbg !3094, !tbaa !1527
  %52 = load ptr, ptr %data.addr, align 8, !dbg !3102, !tbaa !1527
  call void %41(ptr noundef %43, ptr noundef %44, ptr noundef %51, ptr noundef %52), !dbg !3088
  br label %if.end41, !dbg !3103

if.end41:                                         ; preds = %if.then32, %land.lhs.true30, %if.then27
  %53 = load ptr, ptr %comp.addr, align 8, !dbg !3104, !tbaa !1527
  %compact42 = getelementptr inbounds %struct._xmlRegexp, ptr %53, i32 0, i32 10, !dbg !3106
  %54 = load ptr, ptr %compact42, align 8, !dbg !3106, !tbaa !1544
  %55 = load i32, ptr %target, align 4, !dbg !3107, !tbaa !1767
  %56 = load ptr, ptr %comp.addr, align 8, !dbg !3108, !tbaa !1527
  %nbstrings43 = getelementptr inbounds %struct._xmlRegexp, ptr %56, i32 0, i32 12, !dbg !3109
  %57 = load i32, ptr %nbstrings43, align 8, !dbg !3109, !tbaa !3026
  %add44 = add nsw i32 %57, 1, !dbg !3110
  %mul45 = mul nsw i32 %55, %add44, !dbg !3111
  %idxprom46 = sext i32 %mul45 to i64, !dbg !3104
  %arrayidx47 = getelementptr inbounds i32, ptr %54, i64 %idxprom46, !dbg !3104
  %58 = load i32, ptr %arrayidx47, align 4, !dbg !3104, !tbaa !1767
  %cmp48 = icmp eq i32 %58, 4, !dbg !3112
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !3113

if.then49:                                        ; preds = %if.end41
  br label %error, !dbg !3114

if.end50:                                         ; preds = %if.end41
  %59 = load ptr, ptr %comp.addr, align 8, !dbg !3115, !tbaa !1527
  %compact51 = getelementptr inbounds %struct._xmlRegexp, ptr %59, i32 0, i32 10, !dbg !3117
  %60 = load ptr, ptr %compact51, align 8, !dbg !3117, !tbaa !1544
  %61 = load i32, ptr %target, align 4, !dbg !3118, !tbaa !1767
  %62 = load ptr, ptr %comp.addr, align 8, !dbg !3119, !tbaa !1527
  %nbstrings52 = getelementptr inbounds %struct._xmlRegexp, ptr %62, i32 0, i32 12, !dbg !3120
  %63 = load i32, ptr %nbstrings52, align 8, !dbg !3120, !tbaa !3026
  %add53 = add nsw i32 %63, 1, !dbg !3121
  %mul54 = mul nsw i32 %61, %add53, !dbg !3122
  %idxprom55 = sext i32 %mul54 to i64, !dbg !3115
  %arrayidx56 = getelementptr inbounds i32, ptr %60, i64 %idxprom55, !dbg !3115
  %64 = load i32, ptr %arrayidx56, align 4, !dbg !3115, !tbaa !1767
  %cmp57 = icmp eq i32 %64, 2, !dbg !3123
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !3124

if.then58:                                        ; preds = %if.end50
  store i32 1, ptr %retval, align 4, !dbg !3125
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3125

if.end59:                                         ; preds = %if.end50
  store i32 0, ptr %retval, align 4, !dbg !3126
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3126

if.end60:                                         ; preds = %if.then23
  br label %if.end61, !dbg !3127

if.end61:                                         ; preds = %if.end60, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3128

for.inc:                                          ; preds = %if.end61
  %65 = load i32, ptr %i, align 4, !dbg !3129, !tbaa !1767
  %inc = add nsw i32 %65, 1, !dbg !3129
  store i32 %inc, ptr %i, align 4, !dbg !3129, !tbaa !1767
  br label %for.cond, !dbg !3130, !llvm.loop !3131

for.end:                                          ; preds = %for.cond
  br label %error, !dbg !3132

error:                                            ; preds = %for.end, %if.then49
  tail call void @llvm.dbg.label(metadata !2989), !dbg !3133
  %66 = load ptr, ptr %exec.addr, align 8, !dbg !3134, !tbaa !1527
  %errString = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %66, i32 0, i32 20, !dbg !3136
  %67 = load ptr, ptr %errString, align 8, !dbg !3136, !tbaa !1697
  %cmp62 = icmp ne ptr %67, null, !dbg !3137
  br i1 %cmp62, label %if.then63, label %if.end65, !dbg !3138

if.then63:                                        ; preds = %error
  %68 = load ptr, ptr @xmlFree, align 8, !dbg !3139, !tbaa !1527
  %69 = load ptr, ptr %exec.addr, align 8, !dbg !3140, !tbaa !1527
  %errString64 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %69, i32 0, i32 20, !dbg !3141
  %70 = load ptr, ptr %errString64, align 8, !dbg !3141, !tbaa !1697
  call void %68(ptr noundef %70), !dbg !3139
  br label %if.end65, !dbg !3139

if.end65:                                         ; preds = %if.then63, %error
  %71 = load ptr, ptr %value.addr, align 8, !dbg !3142, !tbaa !1527
  %call66 = call ptr @xmlStrdup(ptr noundef %71), !dbg !3143
  %72 = load ptr, ptr %exec.addr, align 8, !dbg !3144, !tbaa !1527
  %errString67 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %72, i32 0, i32 20, !dbg !3145
  store ptr %call66, ptr %errString67, align 8, !dbg !3146, !tbaa !1697
  %73 = load i32, ptr %state, align 4, !dbg !3147, !tbaa !1767
  %74 = load ptr, ptr %exec.addr, align 8, !dbg !3148, !tbaa !1527
  %errStateNo = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %74, i32 0, i32 18, !dbg !3149
  store i32 %73, ptr %errStateNo, align 8, !dbg !3150, !tbaa !1693
  %75 = load ptr, ptr %exec.addr, align 8, !dbg !3151, !tbaa !1527
  %status = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %75, i32 0, i32 0, !dbg !3152
  store i32 -1, ptr %status, align 8, !dbg !3153, !tbaa !1594
  store i32 -1, ptr %retval, align 4, !dbg !3154
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3154

cleanup:                                          ; preds = %if.end65, %if.end59, %if.then58, %if.end9, %if.then8, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %target) #8, !dbg !3155
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !3155
  call void @llvm.lifetime.end.p0(i64 4, ptr %state) #8, !dbg !3155
  %76 = load i32, ptr %retval, align 4, !dbg !3155
  ret i32 %76, !dbg !3155
}

; Function Attrs: nounwind uwtable
define i32 @xmlRegExecNextValues(ptr noundef %exec, ptr noundef %nbval, ptr noundef %nbneg, ptr noundef %values, ptr noundef %terminal) #0 !dbg !3156 {
entry:
  %exec.addr = alloca ptr, align 8
  %nbval.addr = alloca ptr, align 8
  %nbneg.addr = alloca ptr, align 8
  %values.addr = alloca ptr, align 8
  %terminal.addr = alloca ptr, align 8
  store ptr %exec, ptr %exec.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %exec.addr, metadata !3160, metadata !DIExpression()), !dbg !3165
  store ptr %nbval, ptr %nbval.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %nbval.addr, metadata !3161, metadata !DIExpression()), !dbg !3166
  store ptr %nbneg, ptr %nbneg.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %nbneg.addr, metadata !3162, metadata !DIExpression()), !dbg !3167
  store ptr %values, ptr %values.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %values.addr, metadata !3163, metadata !DIExpression()), !dbg !3168
  store ptr %terminal, ptr %terminal.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %terminal.addr, metadata !3164, metadata !DIExpression()), !dbg !3169
  %0 = load ptr, ptr %exec.addr, align 8, !dbg !3170, !tbaa !1527
  %1 = load ptr, ptr %nbval.addr, align 8, !dbg !3171, !tbaa !1527
  %2 = load ptr, ptr %nbneg.addr, align 8, !dbg !3172, !tbaa !1527
  %3 = load ptr, ptr %values.addr, align 8, !dbg !3173, !tbaa !1527
  %4 = load ptr, ptr %terminal.addr, align 8, !dbg !3174, !tbaa !1527
  %call = call i32 @xmlRegExecGetValues(ptr noundef %0, i32 noundef 0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4), !dbg !3175
  ret i32 %call, !dbg !3176
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlRegExecGetValues(ptr noundef %exec, i32 noundef %err, ptr noundef %nbval, ptr noundef %nbneg, ptr noundef %values, ptr noundef %terminal) #0 !dbg !3177 {
entry:
  %retval = alloca i32, align 4
  %exec.addr = alloca ptr, align 8
  %err.addr = alloca i32, align 4
  %nbval.addr = alloca ptr, align 8
  %nbneg.addr = alloca ptr, align 8
  %values.addr = alloca ptr, align 8
  %terminal.addr = alloca ptr, align 8
  %maxval = alloca i32, align 4
  %nb = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %comp12 = alloca ptr, align 8
  %target = alloca i32, align 4
  %i = alloca i32, align 4
  %state = alloca i32, align 4
  %transno = alloca i32, align 4
  %trans = alloca ptr, align 8
  %atom = alloca ptr, align 8
  %state102 = alloca ptr, align 8
  %counter154 = alloca ptr, align 8
  %count155 = alloca i32, align 4
  store ptr %exec, ptr %exec.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %exec.addr, metadata !3181, metadata !DIExpression()), !dbg !3209
  store i32 %err, ptr %err.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !3182, metadata !DIExpression()), !dbg !3210
  store ptr %nbval, ptr %nbval.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %nbval.addr, metadata !3183, metadata !DIExpression()), !dbg !3211
  store ptr %nbneg, ptr %nbneg.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %nbneg.addr, metadata !3184, metadata !DIExpression()), !dbg !3212
  store ptr %values, ptr %values.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %values.addr, metadata !3185, metadata !DIExpression()), !dbg !3213
  store ptr %terminal, ptr %terminal.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %terminal.addr, metadata !3186, metadata !DIExpression()), !dbg !3214
  call void @llvm.lifetime.start.p0(i64 4, ptr %maxval) #8, !dbg !3215
  tail call void @llvm.dbg.declare(metadata ptr %maxval, metadata !3187, metadata !DIExpression()), !dbg !3216
  call void @llvm.lifetime.start.p0(i64 4, ptr %nb) #8, !dbg !3217
  tail call void @llvm.dbg.declare(metadata ptr %nb, metadata !3188, metadata !DIExpression()), !dbg !3218
  store i32 0, ptr %nb, align 4, !dbg !3218, !tbaa !1767
  %0 = load ptr, ptr %exec.addr, align 8, !dbg !3219, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !3221
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3222

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %nbval.addr, align 8, !dbg !3223, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !3224
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !3225

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load ptr, ptr %nbneg.addr, align 8, !dbg !3226, !tbaa !1527
  %cmp3 = icmp eq ptr %2, null, !dbg !3227
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !3228

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load ptr, ptr %values.addr, align 8, !dbg !3229, !tbaa !1527
  %cmp5 = icmp eq ptr %3, null, !dbg !3230
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !3231

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %4 = load ptr, ptr %nbval.addr, align 8, !dbg !3232, !tbaa !1527
  %5 = load i32, ptr %4, align 4, !dbg !3233, !tbaa !1767
  %cmp7 = icmp sle i32 %5, 0, !dbg !3234
  br i1 %cmp7, label %if.then, label %if.end, !dbg !3235

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -1, ptr %retval, align 4, !dbg !3236
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup306, !dbg !3236

if.end:                                           ; preds = %lor.lhs.false6
  %6 = load ptr, ptr %nbval.addr, align 8, !dbg !3237, !tbaa !1527
  %7 = load i32, ptr %6, align 4, !dbg !3238, !tbaa !1767
  store i32 %7, ptr %maxval, align 4, !dbg !3239, !tbaa !1767
  %8 = load ptr, ptr %nbval.addr, align 8, !dbg !3240, !tbaa !1527
  store i32 0, ptr %8, align 4, !dbg !3241, !tbaa !1767
  %9 = load ptr, ptr %nbneg.addr, align 8, !dbg !3242, !tbaa !1527
  store i32 0, ptr %9, align 4, !dbg !3243, !tbaa !1767
  %10 = load ptr, ptr %exec.addr, align 8, !dbg !3244, !tbaa !1527
  %comp = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %10, i32 0, i32 2, !dbg !3245
  %11 = load ptr, ptr %comp, align 8, !dbg !3245, !tbaa !1599
  %cmp8 = icmp ne ptr %11, null, !dbg !3246
  br i1 %cmp8, label %land.lhs.true, label %if.else101, !dbg !3247

land.lhs.true:                                    ; preds = %if.end
  %12 = load ptr, ptr %exec.addr, align 8, !dbg !3248, !tbaa !1527
  %comp9 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %12, i32 0, i32 2, !dbg !3249
  %13 = load ptr, ptr %comp9, align 8, !dbg !3249, !tbaa !1599
  %compact = getelementptr inbounds %struct._xmlRegexp, ptr %13, i32 0, i32 10, !dbg !3250
  %14 = load ptr, ptr %compact, align 8, !dbg !3250, !tbaa !1544
  %cmp10 = icmp ne ptr %14, null, !dbg !3251
  br i1 %cmp10, label %if.then11, label %if.else101, !dbg !3252

if.then11:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %comp12) #8, !dbg !3253
  tail call void @llvm.dbg.declare(metadata ptr %comp12, metadata !3189, metadata !DIExpression()), !dbg !3254
  call void @llvm.lifetime.start.p0(i64 4, ptr %target) #8, !dbg !3255
  tail call void @llvm.dbg.declare(metadata ptr %target, metadata !3192, metadata !DIExpression()), !dbg !3256
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !3255
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !3193, metadata !DIExpression()), !dbg !3257
  call void @llvm.lifetime.start.p0(i64 4, ptr %state) #8, !dbg !3255
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !3194, metadata !DIExpression()), !dbg !3258
  %15 = load ptr, ptr %exec.addr, align 8, !dbg !3259, !tbaa !1527
  %comp13 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %15, i32 0, i32 2, !dbg !3260
  %16 = load ptr, ptr %comp13, align 8, !dbg !3260, !tbaa !1599
  store ptr %16, ptr %comp12, align 8, !dbg !3261, !tbaa !1527
  %17 = load i32, ptr %err.addr, align 4, !dbg !3262, !tbaa !1767
  %tobool = icmp ne i32 %17, 0, !dbg !3262
  br i1 %tobool, label %if.then14, label %if.else, !dbg !3264

if.then14:                                        ; preds = %if.then11
  %18 = load ptr, ptr %exec.addr, align 8, !dbg !3265, !tbaa !1527
  %errStateNo = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %18, i32 0, i32 18, !dbg !3268
  %19 = load i32, ptr %errStateNo, align 8, !dbg !3268, !tbaa !1693
  %cmp15 = icmp eq i32 %19, -1, !dbg !3269
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !3270

if.then16:                                        ; preds = %if.then14
  store i32 -1, ptr %retval, align 4, !dbg !3271
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3271

if.end17:                                         ; preds = %if.then14
  %20 = load ptr, ptr %exec.addr, align 8, !dbg !3272, !tbaa !1527
  %errStateNo18 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %20, i32 0, i32 18, !dbg !3273
  %21 = load i32, ptr %errStateNo18, align 8, !dbg !3273, !tbaa !1693
  store i32 %21, ptr %state, align 4, !dbg !3274, !tbaa !1767
  br label %if.end19, !dbg !3275

if.else:                                          ; preds = %if.then11
  %22 = load ptr, ptr %exec.addr, align 8, !dbg !3276, !tbaa !1527
  %index = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %22, i32 0, i32 14, !dbg !3278
  %23 = load i32, ptr %index, align 8, !dbg !3278, !tbaa !1574
  store i32 %23, ptr %state, align 4, !dbg !3279, !tbaa !1767
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.end17
  %24 = load ptr, ptr %terminal.addr, align 8, !dbg !3280, !tbaa !1527
  %cmp20 = icmp ne ptr %24, null, !dbg !3282
  br i1 %cmp20, label %if.then21, label %if.end27, !dbg !3283

if.then21:                                        ; preds = %if.end19
  %25 = load ptr, ptr %comp12, align 8, !dbg !3284, !tbaa !1527
  %compact22 = getelementptr inbounds %struct._xmlRegexp, ptr %25, i32 0, i32 10, !dbg !3287
  %26 = load ptr, ptr %compact22, align 8, !dbg !3287, !tbaa !1544
  %27 = load i32, ptr %state, align 4, !dbg !3288, !tbaa !1767
  %28 = load ptr, ptr %comp12, align 8, !dbg !3289, !tbaa !1527
  %nbstrings = getelementptr inbounds %struct._xmlRegexp, ptr %28, i32 0, i32 12, !dbg !3290
  %29 = load i32, ptr %nbstrings, align 8, !dbg !3290, !tbaa !3026
  %add = add nsw i32 %29, 1, !dbg !3291
  %mul = mul nsw i32 %27, %add, !dbg !3292
  %idxprom = sext i32 %mul to i64, !dbg !3284
  %arrayidx = getelementptr inbounds i32, ptr %26, i64 %idxprom, !dbg !3284
  %30 = load i32, ptr %arrayidx, align 4, !dbg !3284, !tbaa !1767
  %cmp23 = icmp eq i32 %30, 2, !dbg !3293
  br i1 %cmp23, label %if.then24, label %if.else25, !dbg !3294

if.then24:                                        ; preds = %if.then21
  %31 = load ptr, ptr %terminal.addr, align 8, !dbg !3295, !tbaa !1527
  store i32 1, ptr %31, align 4, !dbg !3296, !tbaa !1767
  br label %if.end26, !dbg !3297

if.else25:                                        ; preds = %if.then21
  %32 = load ptr, ptr %terminal.addr, align 8, !dbg !3298, !tbaa !1527
  store i32 0, ptr %32, align 4, !dbg !3299, !tbaa !1767
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.then24
  br label %if.end27, !dbg !3300

if.end27:                                         ; preds = %if.end26, %if.end19
  store i32 0, ptr %i, align 4, !dbg !3301, !tbaa !1767
  br label %for.cond, !dbg !3303

for.cond:                                         ; preds = %for.inc, %if.end27
  %33 = load i32, ptr %i, align 4, !dbg !3304, !tbaa !1767
  %34 = load ptr, ptr %comp12, align 8, !dbg !3306, !tbaa !1527
  %nbstrings28 = getelementptr inbounds %struct._xmlRegexp, ptr %34, i32 0, i32 12, !dbg !3307
  %35 = load i32, ptr %nbstrings28, align 8, !dbg !3307, !tbaa !3026
  %cmp29 = icmp slt i32 %33, %35, !dbg !3308
  br i1 %cmp29, label %land.rhs, label %land.end, !dbg !3309

land.rhs:                                         ; preds = %for.cond
  %36 = load i32, ptr %nb, align 4, !dbg !3310, !tbaa !1767
  %37 = load i32, ptr %maxval, align 4, !dbg !3311, !tbaa !1767
  %cmp30 = icmp slt i32 %36, %37, !dbg !3312
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %38 = phi i1 [ false, %for.cond ], [ %cmp30, %land.rhs ], !dbg !3313
  br i1 %38, label %for.body, label %for.end, !dbg !3314

for.body:                                         ; preds = %land.end
  %39 = load ptr, ptr %comp12, align 8, !dbg !3315, !tbaa !1527
  %compact31 = getelementptr inbounds %struct._xmlRegexp, ptr %39, i32 0, i32 10, !dbg !3317
  %40 = load ptr, ptr %compact31, align 8, !dbg !3317, !tbaa !1544
  %41 = load i32, ptr %state, align 4, !dbg !3318, !tbaa !1767
  %42 = load ptr, ptr %comp12, align 8, !dbg !3319, !tbaa !1527
  %nbstrings32 = getelementptr inbounds %struct._xmlRegexp, ptr %42, i32 0, i32 12, !dbg !3320
  %43 = load i32, ptr %nbstrings32, align 8, !dbg !3320, !tbaa !3026
  %add33 = add nsw i32 %43, 1, !dbg !3321
  %mul34 = mul nsw i32 %41, %add33, !dbg !3322
  %44 = load i32, ptr %i, align 4, !dbg !3323, !tbaa !1767
  %add35 = add nsw i32 %mul34, %44, !dbg !3324
  %add36 = add nsw i32 %add35, 1, !dbg !3325
  %idxprom37 = sext i32 %add36 to i64, !dbg !3315
  %arrayidx38 = getelementptr inbounds i32, ptr %40, i64 %idxprom37, !dbg !3315
  %45 = load i32, ptr %arrayidx38, align 4, !dbg !3315, !tbaa !1767
  store i32 %45, ptr %target, align 4, !dbg !3326, !tbaa !1767
  %46 = load i32, ptr %target, align 4, !dbg !3327, !tbaa !1767
  %cmp39 = icmp sgt i32 %46, 0, !dbg !3329
  br i1 %cmp39, label %land.lhs.true40, label %if.end56, !dbg !3330

land.lhs.true40:                                  ; preds = %for.body
  %47 = load i32, ptr %target, align 4, !dbg !3331, !tbaa !1767
  %48 = load ptr, ptr %comp12, align 8, !dbg !3332, !tbaa !1527
  %nbstates = getelementptr inbounds %struct._xmlRegexp, ptr %48, i32 0, i32 9, !dbg !3333
  %49 = load i32, ptr %nbstates, align 8, !dbg !3333, !tbaa !3061
  %cmp41 = icmp sle i32 %47, %49, !dbg !3334
  br i1 %cmp41, label %land.lhs.true42, label %if.end56, !dbg !3335

land.lhs.true42:                                  ; preds = %land.lhs.true40
  %50 = load ptr, ptr %comp12, align 8, !dbg !3336, !tbaa !1527
  %compact43 = getelementptr inbounds %struct._xmlRegexp, ptr %50, i32 0, i32 10, !dbg !3337
  %51 = load ptr, ptr %compact43, align 8, !dbg !3337, !tbaa !1544
  %52 = load i32, ptr %target, align 4, !dbg !3338, !tbaa !1767
  %sub = sub nsw i32 %52, 1, !dbg !3339
  %53 = load ptr, ptr %comp12, align 8, !dbg !3340, !tbaa !1527
  %nbstrings44 = getelementptr inbounds %struct._xmlRegexp, ptr %53, i32 0, i32 12, !dbg !3341
  %54 = load i32, ptr %nbstrings44, align 8, !dbg !3341, !tbaa !3026
  %add45 = add nsw i32 %54, 1, !dbg !3342
  %mul46 = mul nsw i32 %sub, %add45, !dbg !3343
  %idxprom47 = sext i32 %mul46 to i64, !dbg !3336
  %arrayidx48 = getelementptr inbounds i32, ptr %51, i64 %idxprom47, !dbg !3336
  %55 = load i32, ptr %arrayidx48, align 4, !dbg !3336, !tbaa !1767
  %cmp49 = icmp ne i32 %55, 4, !dbg !3344
  br i1 %cmp49, label %if.then50, label %if.end56, !dbg !3345

if.then50:                                        ; preds = %land.lhs.true42
  %56 = load ptr, ptr %comp12, align 8, !dbg !3346, !tbaa !1527
  %stringMap = getelementptr inbounds %struct._xmlRegexp, ptr %56, i32 0, i32 13, !dbg !3348
  %57 = load ptr, ptr %stringMap, align 8, !dbg !3348, !tbaa !3011
  %58 = load i32, ptr %i, align 4, !dbg !3349, !tbaa !1767
  %idxprom51 = sext i32 %58 to i64, !dbg !3346
  %arrayidx52 = getelementptr inbounds ptr, ptr %57, i64 %idxprom51, !dbg !3346
  %59 = load ptr, ptr %arrayidx52, align 8, !dbg !3346, !tbaa !1527
  %60 = load ptr, ptr %values.addr, align 8, !dbg !3350, !tbaa !1527
  %61 = load i32, ptr %nb, align 4, !dbg !3351, !tbaa !1767
  %inc = add nsw i32 %61, 1, !dbg !3351
  store i32 %inc, ptr %nb, align 4, !dbg !3351, !tbaa !1767
  %idxprom53 = sext i32 %61 to i64, !dbg !3350
  %arrayidx54 = getelementptr inbounds ptr, ptr %60, i64 %idxprom53, !dbg !3350
  store ptr %59, ptr %arrayidx54, align 8, !dbg !3352, !tbaa !1527
  %62 = load ptr, ptr %nbval.addr, align 8, !dbg !3353, !tbaa !1527
  %63 = load i32, ptr %62, align 4, !dbg !3354, !tbaa !1767
  %inc55 = add nsw i32 %63, 1, !dbg !3354
  store i32 %inc55, ptr %62, align 4, !dbg !3354, !tbaa !1767
  br label %if.end56, !dbg !3355

if.end56:                                         ; preds = %if.then50, %land.lhs.true42, %land.lhs.true40, %for.body
  br label %for.inc, !dbg !3356

for.inc:                                          ; preds = %if.end56
  %64 = load i32, ptr %i, align 4, !dbg !3357, !tbaa !1767
  %inc57 = add nsw i32 %64, 1, !dbg !3357
  store i32 %inc57, ptr %i, align 4, !dbg !3357, !tbaa !1767
  br label %for.cond, !dbg !3358, !llvm.loop !3359

for.end:                                          ; preds = %land.end
  store i32 0, ptr %i, align 4, !dbg !3361, !tbaa !1767
  br label %for.cond58, !dbg !3363

for.cond58:                                       ; preds = %for.inc95, %for.end
  %65 = load i32, ptr %i, align 4, !dbg !3364, !tbaa !1767
  %66 = load ptr, ptr %comp12, align 8, !dbg !3366, !tbaa !1527
  %nbstrings59 = getelementptr inbounds %struct._xmlRegexp, ptr %66, i32 0, i32 12, !dbg !3367
  %67 = load i32, ptr %nbstrings59, align 8, !dbg !3367, !tbaa !3026
  %cmp60 = icmp slt i32 %65, %67, !dbg !3368
  br i1 %cmp60, label %land.rhs61, label %land.end63, !dbg !3369

land.rhs61:                                       ; preds = %for.cond58
  %68 = load i32, ptr %nb, align 4, !dbg !3370, !tbaa !1767
  %69 = load i32, ptr %maxval, align 4, !dbg !3371, !tbaa !1767
  %cmp62 = icmp slt i32 %68, %69, !dbg !3372
  br label %land.end63

land.end63:                                       ; preds = %land.rhs61, %for.cond58
  %70 = phi i1 [ false, %for.cond58 ], [ %cmp62, %land.rhs61 ], !dbg !3373
  br i1 %70, label %for.body64, label %for.end97, !dbg !3374

for.body64:                                       ; preds = %land.end63
  %71 = load ptr, ptr %comp12, align 8, !dbg !3375, !tbaa !1527
  %compact65 = getelementptr inbounds %struct._xmlRegexp, ptr %71, i32 0, i32 10, !dbg !3377
  %72 = load ptr, ptr %compact65, align 8, !dbg !3377, !tbaa !1544
  %73 = load i32, ptr %state, align 4, !dbg !3378, !tbaa !1767
  %74 = load ptr, ptr %comp12, align 8, !dbg !3379, !tbaa !1527
  %nbstrings66 = getelementptr inbounds %struct._xmlRegexp, ptr %74, i32 0, i32 12, !dbg !3380
  %75 = load i32, ptr %nbstrings66, align 8, !dbg !3380, !tbaa !3026
  %add67 = add nsw i32 %75, 1, !dbg !3381
  %mul68 = mul nsw i32 %73, %add67, !dbg !3382
  %76 = load i32, ptr %i, align 4, !dbg !3383, !tbaa !1767
  %add69 = add nsw i32 %mul68, %76, !dbg !3384
  %add70 = add nsw i32 %add69, 1, !dbg !3385
  %idxprom71 = sext i32 %add70 to i64, !dbg !3375
  %arrayidx72 = getelementptr inbounds i32, ptr %72, i64 %idxprom71, !dbg !3375
  %77 = load i32, ptr %arrayidx72, align 4, !dbg !3375, !tbaa !1767
  store i32 %77, ptr %target, align 4, !dbg !3386, !tbaa !1767
  %78 = load i32, ptr %target, align 4, !dbg !3387, !tbaa !1767
  %cmp73 = icmp sgt i32 %78, 0, !dbg !3389
  br i1 %cmp73, label %land.lhs.true74, label %if.end94, !dbg !3390

land.lhs.true74:                                  ; preds = %for.body64
  %79 = load i32, ptr %target, align 4, !dbg !3391, !tbaa !1767
  %80 = load ptr, ptr %comp12, align 8, !dbg !3392, !tbaa !1527
  %nbstates75 = getelementptr inbounds %struct._xmlRegexp, ptr %80, i32 0, i32 9, !dbg !3393
  %81 = load i32, ptr %nbstates75, align 8, !dbg !3393, !tbaa !3061
  %cmp76 = icmp sle i32 %79, %81, !dbg !3394
  br i1 %cmp76, label %land.lhs.true77, label %if.end94, !dbg !3395

land.lhs.true77:                                  ; preds = %land.lhs.true74
  %82 = load ptr, ptr %comp12, align 8, !dbg !3396, !tbaa !1527
  %compact78 = getelementptr inbounds %struct._xmlRegexp, ptr %82, i32 0, i32 10, !dbg !3397
  %83 = load ptr, ptr %compact78, align 8, !dbg !3397, !tbaa !1544
  %84 = load i32, ptr %target, align 4, !dbg !3398, !tbaa !1767
  %sub79 = sub nsw i32 %84, 1, !dbg !3399
  %85 = load ptr, ptr %comp12, align 8, !dbg !3400, !tbaa !1527
  %nbstrings80 = getelementptr inbounds %struct._xmlRegexp, ptr %85, i32 0, i32 12, !dbg !3401
  %86 = load i32, ptr %nbstrings80, align 8, !dbg !3401, !tbaa !3026
  %add81 = add nsw i32 %86, 1, !dbg !3402
  %mul82 = mul nsw i32 %sub79, %add81, !dbg !3403
  %idxprom83 = sext i32 %mul82 to i64, !dbg !3396
  %arrayidx84 = getelementptr inbounds i32, ptr %83, i64 %idxprom83, !dbg !3396
  %87 = load i32, ptr %arrayidx84, align 4, !dbg !3396, !tbaa !1767
  %cmp85 = icmp eq i32 %87, 4, !dbg !3404
  br i1 %cmp85, label %if.then86, label %if.end94, !dbg !3405

if.then86:                                        ; preds = %land.lhs.true77
  %88 = load ptr, ptr %comp12, align 8, !dbg !3406, !tbaa !1527
  %stringMap87 = getelementptr inbounds %struct._xmlRegexp, ptr %88, i32 0, i32 13, !dbg !3408
  %89 = load ptr, ptr %stringMap87, align 8, !dbg !3408, !tbaa !3011
  %90 = load i32, ptr %i, align 4, !dbg !3409, !tbaa !1767
  %idxprom88 = sext i32 %90 to i64, !dbg !3406
  %arrayidx89 = getelementptr inbounds ptr, ptr %89, i64 %idxprom88, !dbg !3406
  %91 = load ptr, ptr %arrayidx89, align 8, !dbg !3406, !tbaa !1527
  %92 = load ptr, ptr %values.addr, align 8, !dbg !3410, !tbaa !1527
  %93 = load i32, ptr %nb, align 4, !dbg !3411, !tbaa !1767
  %inc90 = add nsw i32 %93, 1, !dbg !3411
  store i32 %inc90, ptr %nb, align 4, !dbg !3411, !tbaa !1767
  %idxprom91 = sext i32 %93 to i64, !dbg !3410
  %arrayidx92 = getelementptr inbounds ptr, ptr %92, i64 %idxprom91, !dbg !3410
  store ptr %91, ptr %arrayidx92, align 8, !dbg !3412, !tbaa !1527
  %94 = load ptr, ptr %nbneg.addr, align 8, !dbg !3413, !tbaa !1527
  %95 = load i32, ptr %94, align 4, !dbg !3414, !tbaa !1767
  %inc93 = add nsw i32 %95, 1, !dbg !3414
  store i32 %inc93, ptr %94, align 4, !dbg !3414, !tbaa !1767
  br label %if.end94, !dbg !3415

if.end94:                                         ; preds = %if.then86, %land.lhs.true77, %land.lhs.true74, %for.body64
  br label %for.inc95, !dbg !3416

for.inc95:                                        ; preds = %if.end94
  %96 = load i32, ptr %i, align 4, !dbg !3417, !tbaa !1767
  %inc96 = add nsw i32 %96, 1, !dbg !3417
  store i32 %inc96, ptr %i, align 4, !dbg !3417, !tbaa !1767
  br label %for.cond58, !dbg !3418, !llvm.loop !3419

for.end97:                                        ; preds = %land.end63
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3421
  br label %cleanup, !dbg !3421

cleanup:                                          ; preds = %for.end97, %if.then16
  call void @llvm.lifetime.end.p0(i64 4, ptr %state) #8, !dbg !3421
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !3421
  call void @llvm.lifetime.end.p0(i64 4, ptr %target) #8, !dbg !3421
  call void @llvm.lifetime.end.p0(i64 8, ptr %comp12) #8, !dbg !3421
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup306 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end305, !dbg !3422

if.else101:                                       ; preds = %land.lhs.true, %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %transno) #8, !dbg !3423
  tail call void @llvm.dbg.declare(metadata ptr %transno, metadata !3195, metadata !DIExpression()), !dbg !3424
  call void @llvm.lifetime.start.p0(i64 8, ptr %trans) #8, !dbg !3425
  tail call void @llvm.dbg.declare(metadata ptr %trans, metadata !3197, metadata !DIExpression()), !dbg !3426
  call void @llvm.lifetime.start.p0(i64 8, ptr %atom) #8, !dbg !3427
  tail call void @llvm.dbg.declare(metadata ptr %atom, metadata !3198, metadata !DIExpression()), !dbg !3428
  call void @llvm.lifetime.start.p0(i64 8, ptr %state102) #8, !dbg !3429
  tail call void @llvm.dbg.declare(metadata ptr %state102, metadata !3199, metadata !DIExpression()), !dbg !3430
  %97 = load ptr, ptr %terminal.addr, align 8, !dbg !3431, !tbaa !1527
  %cmp103 = icmp ne ptr %97, null, !dbg !3433
  br i1 %cmp103, label %if.then104, label %if.end110, !dbg !3434

if.then104:                                       ; preds = %if.else101
  %98 = load ptr, ptr %exec.addr, align 8, !dbg !3435, !tbaa !1527
  %state105 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %98, i32 0, i32 5, !dbg !3438
  %99 = load ptr, ptr %state105, align 8, !dbg !3438, !tbaa !1610
  %type = getelementptr inbounds %struct._xmlAutomataState, ptr %99, i32 0, i32 0, !dbg !3439
  %100 = load i32, ptr %type, align 8, !dbg !3439, !tbaa !1984
  %cmp106 = icmp eq i32 %100, 2, !dbg !3440
  br i1 %cmp106, label %if.then107, label %if.else108, !dbg !3441

if.then107:                                       ; preds = %if.then104
  %101 = load ptr, ptr %terminal.addr, align 8, !dbg !3442, !tbaa !1527
  store i32 1, ptr %101, align 4, !dbg !3443, !tbaa !1767
  br label %if.end109, !dbg !3444

if.else108:                                       ; preds = %if.then104
  %102 = load ptr, ptr %terminal.addr, align 8, !dbg !3445, !tbaa !1527
  store i32 0, ptr %102, align 4, !dbg !3446, !tbaa !1767
  br label %if.end109

if.end109:                                        ; preds = %if.else108, %if.then107
  br label %if.end110, !dbg !3447

if.end110:                                        ; preds = %if.end109, %if.else101
  %103 = load i32, ptr %err.addr, align 4, !dbg !3448, !tbaa !1767
  %tobool111 = icmp ne i32 %103, 0, !dbg !3448
  br i1 %tobool111, label %if.then112, label %if.else117, !dbg !3450

if.then112:                                       ; preds = %if.end110
  %104 = load ptr, ptr %exec.addr, align 8, !dbg !3451, !tbaa !1527
  %errState = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %104, i32 0, i32 19, !dbg !3454
  %105 = load ptr, ptr %errState, align 8, !dbg !3454, !tbaa !2644
  %cmp113 = icmp eq ptr %105, null, !dbg !3455
  br i1 %cmp113, label %if.then114, label %if.end115, !dbg !3456

if.then114:                                       ; preds = %if.then112
  store i32 -1, ptr %retval, align 4, !dbg !3457
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup299, !dbg !3457

if.end115:                                        ; preds = %if.then112
  %106 = load ptr, ptr %exec.addr, align 8, !dbg !3458, !tbaa !1527
  %errState116 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %106, i32 0, i32 19, !dbg !3459
  %107 = load ptr, ptr %errState116, align 8, !dbg !3459, !tbaa !2644
  store ptr %107, ptr %state102, align 8, !dbg !3460, !tbaa !1527
  br label %if.end123, !dbg !3461

if.else117:                                       ; preds = %if.end110
  %108 = load ptr, ptr %exec.addr, align 8, !dbg !3462, !tbaa !1527
  %state118 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %108, i32 0, i32 5, !dbg !3465
  %109 = load ptr, ptr %state118, align 8, !dbg !3465, !tbaa !1610
  %cmp119 = icmp eq ptr %109, null, !dbg !3466
  br i1 %cmp119, label %if.then120, label %if.end121, !dbg !3467

if.then120:                                       ; preds = %if.else117
  store i32 -1, ptr %retval, align 4, !dbg !3468
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup299, !dbg !3468

if.end121:                                        ; preds = %if.else117
  %110 = load ptr, ptr %exec.addr, align 8, !dbg !3469, !tbaa !1527
  %state122 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %110, i32 0, i32 5, !dbg !3470
  %111 = load ptr, ptr %state122, align 8, !dbg !3470, !tbaa !1610
  store ptr %111, ptr %state102, align 8, !dbg !3471, !tbaa !1527
  br label %if.end123

if.end123:                                        ; preds = %if.end121, %if.end115
  store i32 0, ptr %transno, align 4, !dbg !3472, !tbaa !1767
  br label %for.cond124, !dbg !3473

for.cond124:                                      ; preds = %for.inc227, %if.end123
  %112 = load i32, ptr %transno, align 4, !dbg !3474, !tbaa !1767
  %113 = load ptr, ptr %state102, align 8, !dbg !3475, !tbaa !1527
  %nbTrans = getelementptr inbounds %struct._xmlAutomataState, ptr %113, i32 0, i32 6, !dbg !3476
  %114 = load i32, ptr %nbTrans, align 8, !dbg !3476, !tbaa !2052
  %cmp125 = icmp slt i32 %112, %114, !dbg !3477
  br i1 %cmp125, label %land.rhs126, label %land.end128, !dbg !3478

land.rhs126:                                      ; preds = %for.cond124
  %115 = load i32, ptr %nb, align 4, !dbg !3479, !tbaa !1767
  %116 = load i32, ptr %maxval, align 4, !dbg !3480, !tbaa !1767
  %cmp127 = icmp slt i32 %115, %116, !dbg !3481
  br label %land.end128

land.end128:                                      ; preds = %land.rhs126, %for.cond124
  %117 = phi i1 [ false, %for.cond124 ], [ %cmp127, %land.rhs126 ], !dbg !3482
  br i1 %117, label %for.body129, label %for.end229, !dbg !3483

for.body129:                                      ; preds = %land.end128
  %118 = load ptr, ptr %state102, align 8, !dbg !3484, !tbaa !1527
  %trans130 = getelementptr inbounds %struct._xmlAutomataState, ptr %118, i32 0, i32 7, !dbg !3485
  %119 = load ptr, ptr %trans130, align 8, !dbg !3485, !tbaa !2058
  %120 = load i32, ptr %transno, align 4, !dbg !3486, !tbaa !1767
  %idxprom131 = sext i32 %120 to i64, !dbg !3484
  %arrayidx132 = getelementptr inbounds %struct._xmlRegTrans, ptr %119, i64 %idxprom131, !dbg !3484
  store ptr %arrayidx132, ptr %trans, align 8, !dbg !3487, !tbaa !1527
  %121 = load ptr, ptr %trans, align 8, !dbg !3488, !tbaa !1527
  %to = getelementptr inbounds %struct._xmlRegTrans, ptr %121, i32 0, i32 1, !dbg !3490
  %122 = load i32, ptr %to, align 8, !dbg !3490, !tbaa !2065
  %cmp133 = icmp slt i32 %122, 0, !dbg !3491
  br i1 %cmp133, label %if.then134, label %if.end135, !dbg !3492

if.then134:                                       ; preds = %for.body129
  br label %for.inc227, !dbg !3493

if.end135:                                        ; preds = %for.body129
  %123 = load ptr, ptr %trans, align 8, !dbg !3494, !tbaa !1527
  %atom136 = getelementptr inbounds %struct._xmlRegTrans, ptr %123, i32 0, i32 0, !dbg !3495
  %124 = load ptr, ptr %atom136, align 8, !dbg !3495, !tbaa !2072
  store ptr %124, ptr %atom, align 8, !dbg !3496, !tbaa !1527
  %125 = load ptr, ptr %atom, align 8, !dbg !3497, !tbaa !1527
  %cmp137 = icmp eq ptr %125, null, !dbg !3499
  br i1 %cmp137, label %if.then140, label %lor.lhs.false138, !dbg !3500

lor.lhs.false138:                                 ; preds = %if.end135
  %126 = load ptr, ptr %atom, align 8, !dbg !3501, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %126, i32 0, i32 5, !dbg !3502
  %127 = load ptr, ptr %valuep, align 8, !dbg !3502, !tbaa !2159
  %cmp139 = icmp eq ptr %127, null, !dbg !3503
  br i1 %cmp139, label %if.then140, label %if.end141, !dbg !3504

if.then140:                                       ; preds = %lor.lhs.false138, %if.end135
  br label %for.inc227, !dbg !3505

if.end141:                                        ; preds = %lor.lhs.false138
  %128 = load ptr, ptr %trans, align 8, !dbg !3506, !tbaa !1527
  %count = getelementptr inbounds %struct._xmlRegTrans, ptr %128, i32 0, i32 3, !dbg !3507
  %129 = load i32, ptr %count, align 8, !dbg !3507, !tbaa !2077
  %cmp142 = icmp eq i32 %129, 1193047, !dbg !3508
  br i1 %cmp142, label %if.then143, label %if.else145, !dbg !3509

if.then143:                                       ; preds = %if.end141
  %call = call ptr @__xmlGenericError(), !dbg !3510
  %130 = load ptr, ptr %call, align 8, !dbg !3510, !tbaa !1527
  %call144 = call ptr @__xmlGenericErrorContext(), !dbg !3510
  %131 = load ptr, ptr %call144, align 8, !dbg !3510, !tbaa !1527
  call void (ptr, ptr, ...) %130(ptr noundef %131, ptr noundef @.str.17, ptr noundef @.str.18, i32 noundef 4365), !dbg !3510
  br label %if.end226, !dbg !3512

if.else145:                                       ; preds = %if.end141
  %132 = load ptr, ptr %trans, align 8, !dbg !3513, !tbaa !1527
  %count146 = getelementptr inbounds %struct._xmlRegTrans, ptr %132, i32 0, i32 3, !dbg !3514
  %133 = load i32, ptr %count146, align 8, !dbg !3514, !tbaa !2077
  %cmp147 = icmp eq i32 %133, 1193046, !dbg !3515
  br i1 %cmp147, label %if.then148, label %if.else151, !dbg !3516

if.then148:                                       ; preds = %if.else145
  %call149 = call ptr @__xmlGenericError(), !dbg !3517
  %134 = load ptr, ptr %call149, align 8, !dbg !3517, !tbaa !1527
  %call150 = call ptr @__xmlGenericErrorContext(), !dbg !3517
  %135 = load ptr, ptr %call150, align 8, !dbg !3517, !tbaa !1527
  call void (ptr, ptr, ...) %134(ptr noundef %135, ptr noundef @.str.17, ptr noundef @.str.18, i32 noundef 4368), !dbg !3517
  br label %if.end225, !dbg !3519

if.else151:                                       ; preds = %if.else145
  %136 = load ptr, ptr %trans, align 8, !dbg !3520, !tbaa !1527
  %counter = getelementptr inbounds %struct._xmlRegTrans, ptr %136, i32 0, i32 2, !dbg !3521
  %137 = load i32, ptr %counter, align 4, !dbg !3521, !tbaa !2123
  %cmp152 = icmp sge i32 %137, 0, !dbg !3522
  br i1 %cmp152, label %if.then153, label %if.else191, !dbg !3523

if.then153:                                       ; preds = %if.else151
  call void @llvm.lifetime.start.p0(i64 8, ptr %counter154) #8, !dbg !3524
  tail call void @llvm.dbg.declare(metadata ptr %counter154, metadata !3200, metadata !DIExpression()), !dbg !3525
  store ptr null, ptr %counter154, align 8, !dbg !3525, !tbaa !1527
  call void @llvm.lifetime.start.p0(i64 4, ptr %count155) #8, !dbg !3526
  tail call void @llvm.dbg.declare(metadata ptr %count155, metadata !3208, metadata !DIExpression()), !dbg !3527
  %138 = load i32, ptr %err.addr, align 4, !dbg !3528, !tbaa !1767
  %tobool156 = icmp ne i32 %138, 0, !dbg !3528
  br i1 %tobool156, label %if.then157, label %if.else161, !dbg !3530

if.then157:                                       ; preds = %if.then153
  %139 = load ptr, ptr %exec.addr, align 8, !dbg !3531, !tbaa !1527
  %errCounts = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %139, i32 0, i32 21, !dbg !3532
  %140 = load ptr, ptr %errCounts, align 8, !dbg !3532, !tbaa !1669
  %141 = load ptr, ptr %trans, align 8, !dbg !3533, !tbaa !1527
  %counter158 = getelementptr inbounds %struct._xmlRegTrans, ptr %141, i32 0, i32 2, !dbg !3534
  %142 = load i32, ptr %counter158, align 4, !dbg !3534, !tbaa !2123
  %idxprom159 = sext i32 %142 to i64, !dbg !3531
  %arrayidx160 = getelementptr inbounds i32, ptr %140, i64 %idxprom159, !dbg !3531
  %143 = load i32, ptr %arrayidx160, align 4, !dbg !3531, !tbaa !1767
  store i32 %143, ptr %count155, align 4, !dbg !3535, !tbaa !1767
  br label %if.end165, !dbg !3536

if.else161:                                       ; preds = %if.then153
  %144 = load ptr, ptr %exec.addr, align 8, !dbg !3537, !tbaa !1527
  %counts = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %144, i32 0, i32 11, !dbg !3538
  %145 = load ptr, ptr %counts, align 8, !dbg !3538, !tbaa !1644
  %146 = load ptr, ptr %trans, align 8, !dbg !3539, !tbaa !1527
  %counter162 = getelementptr inbounds %struct._xmlRegTrans, ptr %146, i32 0, i32 2, !dbg !3540
  %147 = load i32, ptr %counter162, align 4, !dbg !3540, !tbaa !2123
  %idxprom163 = sext i32 %147 to i64, !dbg !3537
  %arrayidx164 = getelementptr inbounds i32, ptr %145, i64 %idxprom163, !dbg !3537
  %148 = load i32, ptr %arrayidx164, align 4, !dbg !3537, !tbaa !1767
  store i32 %148, ptr %count155, align 4, !dbg !3541, !tbaa !1767
  br label %if.end165

if.end165:                                        ; preds = %if.else161, %if.then157
  %149 = load ptr, ptr %exec.addr, align 8, !dbg !3542, !tbaa !1527
  %comp166 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %149, i32 0, i32 2, !dbg !3544
  %150 = load ptr, ptr %comp166, align 8, !dbg !3544, !tbaa !1599
  %cmp167 = icmp ne ptr %150, null, !dbg !3545
  br i1 %cmp167, label %if.then168, label %if.end173, !dbg !3546

if.then168:                                       ; preds = %if.end165
  %151 = load ptr, ptr %exec.addr, align 8, !dbg !3547, !tbaa !1527
  %comp169 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %151, i32 0, i32 2, !dbg !3548
  %152 = load ptr, ptr %comp169, align 8, !dbg !3548, !tbaa !1599
  %counters = getelementptr inbounds %struct._xmlRegexp, ptr %152, i32 0, i32 6, !dbg !3549
  %153 = load ptr, ptr %counters, align 8, !dbg !3549, !tbaa !2134
  %154 = load ptr, ptr %trans, align 8, !dbg !3550, !tbaa !1527
  %counter170 = getelementptr inbounds %struct._xmlRegTrans, ptr %154, i32 0, i32 2, !dbg !3551
  %155 = load i32, ptr %counter170, align 4, !dbg !3551, !tbaa !2123
  %idxprom171 = sext i32 %155 to i64, !dbg !3547
  %arrayidx172 = getelementptr inbounds %struct._xmlRegCounter, ptr %153, i64 %idxprom171, !dbg !3547
  store ptr %arrayidx172, ptr %counter154, align 8, !dbg !3552, !tbaa !1527
  br label %if.end173, !dbg !3553

if.end173:                                        ; preds = %if.then168, %if.end165
  %156 = load ptr, ptr %counter154, align 8, !dbg !3554, !tbaa !1527
  %cmp174 = icmp eq ptr %156, null, !dbg !3556
  br i1 %cmp174, label %if.then177, label %lor.lhs.false175, !dbg !3557

lor.lhs.false175:                                 ; preds = %if.end173
  %157 = load i32, ptr %count155, align 4, !dbg !3558, !tbaa !1767
  %158 = load ptr, ptr %counter154, align 8, !dbg !3559, !tbaa !1527
  %max = getelementptr inbounds %struct._xmlRegCounter, ptr %158, i32 0, i32 1, !dbg !3560
  %159 = load i32, ptr %max, align 4, !dbg !3560, !tbaa !2147
  %cmp176 = icmp slt i32 %157, %159, !dbg !3561
  br i1 %cmp176, label %if.then177, label %if.end190, !dbg !3562

if.then177:                                       ; preds = %lor.lhs.false175, %if.end173
  %160 = load ptr, ptr %atom, align 8, !dbg !3563, !tbaa !1527
  %neg = getelementptr inbounds %struct._xmlRegAtom, ptr %160, i32 0, i32 7, !dbg !3566
  %161 = load i32, ptr %neg, align 8, !dbg !3566, !tbaa !2323
  %tobool178 = icmp ne i32 %161, 0, !dbg !3563
  br i1 %tobool178, label %if.then179, label %if.else183, !dbg !3567

if.then179:                                       ; preds = %if.then177
  %162 = load ptr, ptr %atom, align 8, !dbg !3568, !tbaa !1527
  %valuep2 = getelementptr inbounds %struct._xmlRegAtom, ptr %162, i32 0, i32 6, !dbg !3569
  %163 = load ptr, ptr %valuep2, align 8, !dbg !3569, !tbaa !3570
  %164 = load ptr, ptr %values.addr, align 8, !dbg !3571, !tbaa !1527
  %165 = load i32, ptr %nb, align 4, !dbg !3572, !tbaa !1767
  %inc180 = add nsw i32 %165, 1, !dbg !3572
  store i32 %inc180, ptr %nb, align 4, !dbg !3572, !tbaa !1767
  %idxprom181 = sext i32 %165 to i64, !dbg !3571
  %arrayidx182 = getelementptr inbounds ptr, ptr %164, i64 %idxprom181, !dbg !3571
  store ptr %163, ptr %arrayidx182, align 8, !dbg !3573, !tbaa !1527
  br label %if.end188, !dbg !3571

if.else183:                                       ; preds = %if.then177
  %166 = load ptr, ptr %atom, align 8, !dbg !3574, !tbaa !1527
  %valuep184 = getelementptr inbounds %struct._xmlRegAtom, ptr %166, i32 0, i32 5, !dbg !3575
  %167 = load ptr, ptr %valuep184, align 8, !dbg !3575, !tbaa !2159
  %168 = load ptr, ptr %values.addr, align 8, !dbg !3576, !tbaa !1527
  %169 = load i32, ptr %nb, align 4, !dbg !3577, !tbaa !1767
  %inc185 = add nsw i32 %169, 1, !dbg !3577
  store i32 %inc185, ptr %nb, align 4, !dbg !3577, !tbaa !1767
  %idxprom186 = sext i32 %169 to i64, !dbg !3576
  %arrayidx187 = getelementptr inbounds ptr, ptr %168, i64 %idxprom186, !dbg !3576
  store ptr %167, ptr %arrayidx187, align 8, !dbg !3578, !tbaa !1527
  br label %if.end188

if.end188:                                        ; preds = %if.else183, %if.then179
  %170 = load ptr, ptr %nbval.addr, align 8, !dbg !3579, !tbaa !1527
  %171 = load i32, ptr %170, align 4, !dbg !3580, !tbaa !1767
  %inc189 = add nsw i32 %171, 1, !dbg !3580
  store i32 %inc189, ptr %170, align 4, !dbg !3580, !tbaa !1767
  br label %if.end190, !dbg !3581

if.end190:                                        ; preds = %if.end188, %lor.lhs.false175
  call void @llvm.lifetime.end.p0(i64 4, ptr %count155) #8, !dbg !3582
  call void @llvm.lifetime.end.p0(i64 8, ptr %counter154) #8, !dbg !3582
  br label %if.end224, !dbg !3583

if.else191:                                       ; preds = %if.else151
  %172 = load ptr, ptr %exec.addr, align 8, !dbg !3584, !tbaa !1527
  %comp192 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %172, i32 0, i32 2, !dbg !3587
  %173 = load ptr, ptr %comp192, align 8, !dbg !3587, !tbaa !1599
  %cmp193 = icmp ne ptr %173, null, !dbg !3588
  br i1 %cmp193, label %land.lhs.true194, label %if.end223, !dbg !3589

land.lhs.true194:                                 ; preds = %if.else191
  %174 = load ptr, ptr %exec.addr, align 8, !dbg !3590, !tbaa !1527
  %comp195 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %174, i32 0, i32 2, !dbg !3591
  %175 = load ptr, ptr %comp195, align 8, !dbg !3591, !tbaa !1599
  %states = getelementptr inbounds %struct._xmlRegexp, ptr %175, i32 0, i32 2, !dbg !3592
  %176 = load ptr, ptr %states, align 8, !dbg !3592, !tbaa !1551
  %177 = load ptr, ptr %trans, align 8, !dbg !3593, !tbaa !1527
  %to196 = getelementptr inbounds %struct._xmlRegTrans, ptr %177, i32 0, i32 1, !dbg !3594
  %178 = load i32, ptr %to196, align 8, !dbg !3594, !tbaa !2065
  %idxprom197 = sext i32 %178 to i64, !dbg !3590
  %arrayidx198 = getelementptr inbounds ptr, ptr %176, i64 %idxprom197, !dbg !3590
  %179 = load ptr, ptr %arrayidx198, align 8, !dbg !3590, !tbaa !1527
  %cmp199 = icmp ne ptr %179, null, !dbg !3595
  br i1 %cmp199, label %land.lhs.true200, label %if.end223, !dbg !3596

land.lhs.true200:                                 ; preds = %land.lhs.true194
  %180 = load ptr, ptr %exec.addr, align 8, !dbg !3597, !tbaa !1527
  %comp201 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %180, i32 0, i32 2, !dbg !3598
  %181 = load ptr, ptr %comp201, align 8, !dbg !3598, !tbaa !1599
  %states202 = getelementptr inbounds %struct._xmlRegexp, ptr %181, i32 0, i32 2, !dbg !3599
  %182 = load ptr, ptr %states202, align 8, !dbg !3599, !tbaa !1551
  %183 = load ptr, ptr %trans, align 8, !dbg !3600, !tbaa !1527
  %to203 = getelementptr inbounds %struct._xmlRegTrans, ptr %183, i32 0, i32 1, !dbg !3601
  %184 = load i32, ptr %to203, align 8, !dbg !3601, !tbaa !2065
  %idxprom204 = sext i32 %184 to i64, !dbg !3597
  %arrayidx205 = getelementptr inbounds ptr, ptr %182, i64 %idxprom204, !dbg !3597
  %185 = load ptr, ptr %arrayidx205, align 8, !dbg !3597, !tbaa !1527
  %type206 = getelementptr inbounds %struct._xmlAutomataState, ptr %185, i32 0, i32 0, !dbg !3602
  %186 = load i32, ptr %type206, align 8, !dbg !3602, !tbaa !1984
  %cmp207 = icmp ne i32 %186, 4, !dbg !3603
  br i1 %cmp207, label %if.then208, label %if.end223, !dbg !3604

if.then208:                                       ; preds = %land.lhs.true200
  %187 = load ptr, ptr %atom, align 8, !dbg !3605, !tbaa !1527
  %neg209 = getelementptr inbounds %struct._xmlRegAtom, ptr %187, i32 0, i32 7, !dbg !3608
  %188 = load i32, ptr %neg209, align 8, !dbg !3608, !tbaa !2323
  %tobool210 = icmp ne i32 %188, 0, !dbg !3605
  br i1 %tobool210, label %if.then211, label %if.else216, !dbg !3609

if.then211:                                       ; preds = %if.then208
  %189 = load ptr, ptr %atom, align 8, !dbg !3610, !tbaa !1527
  %valuep2212 = getelementptr inbounds %struct._xmlRegAtom, ptr %189, i32 0, i32 6, !dbg !3611
  %190 = load ptr, ptr %valuep2212, align 8, !dbg !3611, !tbaa !3570
  %191 = load ptr, ptr %values.addr, align 8, !dbg !3612, !tbaa !1527
  %192 = load i32, ptr %nb, align 4, !dbg !3613, !tbaa !1767
  %inc213 = add nsw i32 %192, 1, !dbg !3613
  store i32 %inc213, ptr %nb, align 4, !dbg !3613, !tbaa !1767
  %idxprom214 = sext i32 %192 to i64, !dbg !3612
  %arrayidx215 = getelementptr inbounds ptr, ptr %191, i64 %idxprom214, !dbg !3612
  store ptr %190, ptr %arrayidx215, align 8, !dbg !3614, !tbaa !1527
  br label %if.end221, !dbg !3612

if.else216:                                       ; preds = %if.then208
  %193 = load ptr, ptr %atom, align 8, !dbg !3615, !tbaa !1527
  %valuep217 = getelementptr inbounds %struct._xmlRegAtom, ptr %193, i32 0, i32 5, !dbg !3616
  %194 = load ptr, ptr %valuep217, align 8, !dbg !3616, !tbaa !2159
  %195 = load ptr, ptr %values.addr, align 8, !dbg !3617, !tbaa !1527
  %196 = load i32, ptr %nb, align 4, !dbg !3618, !tbaa !1767
  %inc218 = add nsw i32 %196, 1, !dbg !3618
  store i32 %inc218, ptr %nb, align 4, !dbg !3618, !tbaa !1767
  %idxprom219 = sext i32 %196 to i64, !dbg !3617
  %arrayidx220 = getelementptr inbounds ptr, ptr %195, i64 %idxprom219, !dbg !3617
  store ptr %194, ptr %arrayidx220, align 8, !dbg !3619, !tbaa !1527
  br label %if.end221

if.end221:                                        ; preds = %if.else216, %if.then211
  %197 = load ptr, ptr %nbval.addr, align 8, !dbg !3620, !tbaa !1527
  %198 = load i32, ptr %197, align 4, !dbg !3621, !tbaa !1767
  %inc222 = add nsw i32 %198, 1, !dbg !3621
  store i32 %inc222, ptr %197, align 4, !dbg !3621, !tbaa !1767
  br label %if.end223, !dbg !3622

if.end223:                                        ; preds = %if.end221, %land.lhs.true200, %land.lhs.true194, %if.else191
  br label %if.end224

if.end224:                                        ; preds = %if.end223, %if.end190
  br label %if.end225

if.end225:                                        ; preds = %if.end224, %if.then148
  br label %if.end226

if.end226:                                        ; preds = %if.end225, %if.then143
  br label %for.inc227, !dbg !3623

for.inc227:                                       ; preds = %if.end226, %if.then140, %if.then134
  %199 = load i32, ptr %transno, align 4, !dbg !3624, !tbaa !1767
  %inc228 = add nsw i32 %199, 1, !dbg !3624
  store i32 %inc228, ptr %transno, align 4, !dbg !3624, !tbaa !1767
  br label %for.cond124, !dbg !3625, !llvm.loop !3626

for.end229:                                       ; preds = %land.end128
  store i32 0, ptr %transno, align 4, !dbg !3628, !tbaa !1767
  br label %for.cond230, !dbg !3630

for.cond230:                                      ; preds = %for.inc296, %for.end229
  %200 = load i32, ptr %transno, align 4, !dbg !3631, !tbaa !1767
  %201 = load ptr, ptr %state102, align 8, !dbg !3633, !tbaa !1527
  %nbTrans231 = getelementptr inbounds %struct._xmlAutomataState, ptr %201, i32 0, i32 6, !dbg !3634
  %202 = load i32, ptr %nbTrans231, align 8, !dbg !3634, !tbaa !2052
  %cmp232 = icmp slt i32 %200, %202, !dbg !3635
  br i1 %cmp232, label %land.rhs233, label %land.end235, !dbg !3636

land.rhs233:                                      ; preds = %for.cond230
  %203 = load i32, ptr %nb, align 4, !dbg !3637, !tbaa !1767
  %204 = load i32, ptr %maxval, align 4, !dbg !3638, !tbaa !1767
  %cmp234 = icmp slt i32 %203, %204, !dbg !3639
  br label %land.end235

land.end235:                                      ; preds = %land.rhs233, %for.cond230
  %205 = phi i1 [ false, %for.cond230 ], [ %cmp234, %land.rhs233 ], !dbg !3640
  br i1 %205, label %for.body236, label %for.end298, !dbg !3641

for.body236:                                      ; preds = %land.end235
  %206 = load ptr, ptr %state102, align 8, !dbg !3642, !tbaa !1527
  %trans237 = getelementptr inbounds %struct._xmlAutomataState, ptr %206, i32 0, i32 7, !dbg !3644
  %207 = load ptr, ptr %trans237, align 8, !dbg !3644, !tbaa !2058
  %208 = load i32, ptr %transno, align 4, !dbg !3645, !tbaa !1767
  %idxprom238 = sext i32 %208 to i64, !dbg !3642
  %arrayidx239 = getelementptr inbounds %struct._xmlRegTrans, ptr %207, i64 %idxprom238, !dbg !3642
  store ptr %arrayidx239, ptr %trans, align 8, !dbg !3646, !tbaa !1527
  %209 = load ptr, ptr %trans, align 8, !dbg !3647, !tbaa !1527
  %to240 = getelementptr inbounds %struct._xmlRegTrans, ptr %209, i32 0, i32 1, !dbg !3649
  %210 = load i32, ptr %to240, align 8, !dbg !3649, !tbaa !2065
  %cmp241 = icmp slt i32 %210, 0, !dbg !3650
  br i1 %cmp241, label %if.then242, label %if.end243, !dbg !3651

if.then242:                                       ; preds = %for.body236
  br label %for.inc296, !dbg !3652

if.end243:                                        ; preds = %for.body236
  %211 = load ptr, ptr %trans, align 8, !dbg !3653, !tbaa !1527
  %atom244 = getelementptr inbounds %struct._xmlRegTrans, ptr %211, i32 0, i32 0, !dbg !3654
  %212 = load ptr, ptr %atom244, align 8, !dbg !3654, !tbaa !2072
  store ptr %212, ptr %atom, align 8, !dbg !3655, !tbaa !1527
  %213 = load ptr, ptr %atom, align 8, !dbg !3656, !tbaa !1527
  %cmp245 = icmp eq ptr %213, null, !dbg !3658
  br i1 %cmp245, label %if.then249, label %lor.lhs.false246, !dbg !3659

lor.lhs.false246:                                 ; preds = %if.end243
  %214 = load ptr, ptr %atom, align 8, !dbg !3660, !tbaa !1527
  %valuep247 = getelementptr inbounds %struct._xmlRegAtom, ptr %214, i32 0, i32 5, !dbg !3661
  %215 = load ptr, ptr %valuep247, align 8, !dbg !3661, !tbaa !2159
  %cmp248 = icmp eq ptr %215, null, !dbg !3662
  br i1 %cmp248, label %if.then249, label %if.end250, !dbg !3663

if.then249:                                       ; preds = %lor.lhs.false246, %if.end243
  br label %for.inc296, !dbg !3664

if.end250:                                        ; preds = %lor.lhs.false246
  %216 = load ptr, ptr %trans, align 8, !dbg !3665, !tbaa !1527
  %count251 = getelementptr inbounds %struct._xmlRegTrans, ptr %216, i32 0, i32 3, !dbg !3667
  %217 = load i32, ptr %count251, align 8, !dbg !3667, !tbaa !2077
  %cmp252 = icmp eq i32 %217, 1193047, !dbg !3668
  br i1 %cmp252, label %if.then253, label %if.else254, !dbg !3669

if.then253:                                       ; preds = %if.end250
  br label %for.inc296, !dbg !3670

if.else254:                                       ; preds = %if.end250
  %218 = load ptr, ptr %trans, align 8, !dbg !3672, !tbaa !1527
  %count255 = getelementptr inbounds %struct._xmlRegTrans, ptr %218, i32 0, i32 3, !dbg !3674
  %219 = load i32, ptr %count255, align 8, !dbg !3674, !tbaa !2077
  %cmp256 = icmp eq i32 %219, 1193046, !dbg !3675
  br i1 %cmp256, label %if.then257, label %if.else258, !dbg !3676

if.then257:                                       ; preds = %if.else254
  br label %for.inc296, !dbg !3677

if.else258:                                       ; preds = %if.else254
  %220 = load ptr, ptr %trans, align 8, !dbg !3679, !tbaa !1527
  %counter259 = getelementptr inbounds %struct._xmlRegTrans, ptr %220, i32 0, i32 2, !dbg !3681
  %221 = load i32, ptr %counter259, align 4, !dbg !3681, !tbaa !2123
  %cmp260 = icmp sge i32 %221, 0, !dbg !3682
  br i1 %cmp260, label %if.then261, label %if.else262, !dbg !3683

if.then261:                                       ; preds = %if.else258
  br label %for.inc296, !dbg !3684

if.else262:                                       ; preds = %if.else258
  %222 = load ptr, ptr %exec.addr, align 8, !dbg !3686, !tbaa !1527
  %comp263 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %222, i32 0, i32 2, !dbg !3689
  %223 = load ptr, ptr %comp263, align 8, !dbg !3689, !tbaa !1599
  %states264 = getelementptr inbounds %struct._xmlRegexp, ptr %223, i32 0, i32 2, !dbg !3690
  %224 = load ptr, ptr %states264, align 8, !dbg !3690, !tbaa !1551
  %225 = load ptr, ptr %trans, align 8, !dbg !3691, !tbaa !1527
  %to265 = getelementptr inbounds %struct._xmlRegTrans, ptr %225, i32 0, i32 1, !dbg !3692
  %226 = load i32, ptr %to265, align 8, !dbg !3692, !tbaa !2065
  %idxprom266 = sext i32 %226 to i64, !dbg !3686
  %arrayidx267 = getelementptr inbounds ptr, ptr %224, i64 %idxprom266, !dbg !3686
  %227 = load ptr, ptr %arrayidx267, align 8, !dbg !3686, !tbaa !1527
  %cmp268 = icmp ne ptr %227, null, !dbg !3693
  br i1 %cmp268, label %land.lhs.true269, label %if.end292, !dbg !3694

land.lhs.true269:                                 ; preds = %if.else262
  %228 = load ptr, ptr %exec.addr, align 8, !dbg !3695, !tbaa !1527
  %comp270 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %228, i32 0, i32 2, !dbg !3696
  %229 = load ptr, ptr %comp270, align 8, !dbg !3696, !tbaa !1599
  %states271 = getelementptr inbounds %struct._xmlRegexp, ptr %229, i32 0, i32 2, !dbg !3697
  %230 = load ptr, ptr %states271, align 8, !dbg !3697, !tbaa !1551
  %231 = load ptr, ptr %trans, align 8, !dbg !3698, !tbaa !1527
  %to272 = getelementptr inbounds %struct._xmlRegTrans, ptr %231, i32 0, i32 1, !dbg !3699
  %232 = load i32, ptr %to272, align 8, !dbg !3699, !tbaa !2065
  %idxprom273 = sext i32 %232 to i64, !dbg !3695
  %arrayidx274 = getelementptr inbounds ptr, ptr %230, i64 %idxprom273, !dbg !3695
  %233 = load ptr, ptr %arrayidx274, align 8, !dbg !3695, !tbaa !1527
  %type275 = getelementptr inbounds %struct._xmlAutomataState, ptr %233, i32 0, i32 0, !dbg !3700
  %234 = load i32, ptr %type275, align 8, !dbg !3700, !tbaa !1984
  %cmp276 = icmp eq i32 %234, 4, !dbg !3701
  br i1 %cmp276, label %if.then277, label %if.end292, !dbg !3702

if.then277:                                       ; preds = %land.lhs.true269
  %235 = load ptr, ptr %atom, align 8, !dbg !3703, !tbaa !1527
  %neg278 = getelementptr inbounds %struct._xmlRegAtom, ptr %235, i32 0, i32 7, !dbg !3706
  %236 = load i32, ptr %neg278, align 8, !dbg !3706, !tbaa !2323
  %tobool279 = icmp ne i32 %236, 0, !dbg !3703
  br i1 %tobool279, label %if.then280, label %if.else285, !dbg !3707

if.then280:                                       ; preds = %if.then277
  %237 = load ptr, ptr %atom, align 8, !dbg !3708, !tbaa !1527
  %valuep2281 = getelementptr inbounds %struct._xmlRegAtom, ptr %237, i32 0, i32 6, !dbg !3709
  %238 = load ptr, ptr %valuep2281, align 8, !dbg !3709, !tbaa !3570
  %239 = load ptr, ptr %values.addr, align 8, !dbg !3710, !tbaa !1527
  %240 = load i32, ptr %nb, align 4, !dbg !3711, !tbaa !1767
  %inc282 = add nsw i32 %240, 1, !dbg !3711
  store i32 %inc282, ptr %nb, align 4, !dbg !3711, !tbaa !1767
  %idxprom283 = sext i32 %240 to i64, !dbg !3710
  %arrayidx284 = getelementptr inbounds ptr, ptr %239, i64 %idxprom283, !dbg !3710
  store ptr %238, ptr %arrayidx284, align 8, !dbg !3712, !tbaa !1527
  br label %if.end290, !dbg !3710

if.else285:                                       ; preds = %if.then277
  %241 = load ptr, ptr %atom, align 8, !dbg !3713, !tbaa !1527
  %valuep286 = getelementptr inbounds %struct._xmlRegAtom, ptr %241, i32 0, i32 5, !dbg !3714
  %242 = load ptr, ptr %valuep286, align 8, !dbg !3714, !tbaa !2159
  %243 = load ptr, ptr %values.addr, align 8, !dbg !3715, !tbaa !1527
  %244 = load i32, ptr %nb, align 4, !dbg !3716, !tbaa !1767
  %inc287 = add nsw i32 %244, 1, !dbg !3716
  store i32 %inc287, ptr %nb, align 4, !dbg !3716, !tbaa !1767
  %idxprom288 = sext i32 %244 to i64, !dbg !3715
  %arrayidx289 = getelementptr inbounds ptr, ptr %243, i64 %idxprom288, !dbg !3715
  store ptr %242, ptr %arrayidx289, align 8, !dbg !3717, !tbaa !1527
  br label %if.end290

if.end290:                                        ; preds = %if.else285, %if.then280
  %245 = load ptr, ptr %nbneg.addr, align 8, !dbg !3718, !tbaa !1527
  %246 = load i32, ptr %245, align 4, !dbg !3719, !tbaa !1767
  %inc291 = add nsw i32 %246, 1, !dbg !3719
  store i32 %inc291, ptr %245, align 4, !dbg !3719, !tbaa !1767
  br label %if.end292, !dbg !3720

if.end292:                                        ; preds = %if.end290, %land.lhs.true269, %if.else262
  br label %if.end293

if.end293:                                        ; preds = %if.end292
  br label %if.end294

if.end294:                                        ; preds = %if.end293
  br label %if.end295

if.end295:                                        ; preds = %if.end294
  br label %for.inc296, !dbg !3721

for.inc296:                                       ; preds = %if.end295, %if.then261, %if.then257, %if.then253, %if.then249, %if.then242
  %247 = load i32, ptr %transno, align 4, !dbg !3722, !tbaa !1767
  %inc297 = add nsw i32 %247, 1, !dbg !3722
  store i32 %inc297, ptr %transno, align 4, !dbg !3722, !tbaa !1767
  br label %for.cond230, !dbg !3723, !llvm.loop !3724

for.end298:                                       ; preds = %land.end235
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3726
  br label %cleanup299, !dbg !3726

cleanup299:                                       ; preds = %for.end298, %if.then120, %if.then114
  call void @llvm.lifetime.end.p0(i64 8, ptr %state102) #8, !dbg !3726
  call void @llvm.lifetime.end.p0(i64 8, ptr %atom) #8, !dbg !3726
  call void @llvm.lifetime.end.p0(i64 8, ptr %trans) #8, !dbg !3726
  call void @llvm.lifetime.end.p0(i64 4, ptr %transno) #8, !dbg !3726
  %cleanup.dest303 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest303, label %cleanup306 [
    i32 0, label %cleanup.cont304
  ]

cleanup.cont304:                                  ; preds = %cleanup299
  br label %if.end305

if.end305:                                        ; preds = %cleanup.cont304, %cleanup.cont
  store i32 0, ptr %retval, align 4, !dbg !3727
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup306, !dbg !3727

cleanup306:                                       ; preds = %if.end305, %cleanup299, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %nb) #8, !dbg !3728
  call void @llvm.lifetime.end.p0(i64 4, ptr %maxval) #8, !dbg !3728
  %248 = load i32, ptr %retval, align 4, !dbg !3728
  ret i32 %248, !dbg !3728
}

; Function Attrs: nounwind uwtable
define i32 @xmlRegExecErrInfo(ptr noundef %exec, ptr noundef %string, ptr noundef %nbval, ptr noundef %nbneg, ptr noundef %values, ptr noundef %terminal) #0 !dbg !3729 {
entry:
  %retval = alloca i32, align 4
  %exec.addr = alloca ptr, align 8
  %string.addr = alloca ptr, align 8
  %nbval.addr = alloca ptr, align 8
  %nbneg.addr = alloca ptr, align 8
  %values.addr = alloca ptr, align 8
  %terminal.addr = alloca ptr, align 8
  store ptr %exec, ptr %exec.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %exec.addr, metadata !3734, metadata !DIExpression()), !dbg !3740
  store ptr %string, ptr %string.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %string.addr, metadata !3735, metadata !DIExpression()), !dbg !3741
  store ptr %nbval, ptr %nbval.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %nbval.addr, metadata !3736, metadata !DIExpression()), !dbg !3742
  store ptr %nbneg, ptr %nbneg.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %nbneg.addr, metadata !3737, metadata !DIExpression()), !dbg !3743
  store ptr %values, ptr %values.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %values.addr, metadata !3738, metadata !DIExpression()), !dbg !3744
  store ptr %terminal, ptr %terminal.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %terminal.addr, metadata !3739, metadata !DIExpression()), !dbg !3745
  %0 = load ptr, ptr %exec.addr, align 8, !dbg !3746, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !3748
  br i1 %cmp, label %if.then, label %if.end, !dbg !3749

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !3750
  br label %return, !dbg !3750

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %string.addr, align 8, !dbg !3751, !tbaa !1527
  %cmp1 = icmp ne ptr %1, null, !dbg !3753
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !3754

if.then2:                                         ; preds = %if.end
  %2 = load ptr, ptr %exec.addr, align 8, !dbg !3755, !tbaa !1527
  %status = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %2, i32 0, i32 0, !dbg !3758
  %3 = load i32, ptr %status, align 8, !dbg !3758, !tbaa !1594
  %cmp3 = icmp ne i32 %3, 0, !dbg !3759
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !3760

if.then4:                                         ; preds = %if.then2
  %4 = load ptr, ptr %exec.addr, align 8, !dbg !3761, !tbaa !1527
  %errString = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %4, i32 0, i32 20, !dbg !3762
  %5 = load ptr, ptr %errString, align 8, !dbg !3762, !tbaa !1697
  %6 = load ptr, ptr %string.addr, align 8, !dbg !3763, !tbaa !1527
  store ptr %5, ptr %6, align 8, !dbg !3764, !tbaa !1527
  br label %if.end5, !dbg !3765

if.else:                                          ; preds = %if.then2
  %7 = load ptr, ptr %string.addr, align 8, !dbg !3766, !tbaa !1527
  store ptr null, ptr %7, align 8, !dbg !3767, !tbaa !1527
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  br label %if.end6, !dbg !3768

if.end6:                                          ; preds = %if.end5, %if.end
  %8 = load ptr, ptr %exec.addr, align 8, !dbg !3769, !tbaa !1527
  %9 = load ptr, ptr %nbval.addr, align 8, !dbg !3770, !tbaa !1527
  %10 = load ptr, ptr %nbneg.addr, align 8, !dbg !3771, !tbaa !1527
  %11 = load ptr, ptr %values.addr, align 8, !dbg !3772, !tbaa !1527
  %12 = load ptr, ptr %terminal.addr, align 8, !dbg !3773, !tbaa !1527
  %call = call i32 @xmlRegExecGetValues(ptr noundef %8, i32 noundef 1, ptr noundef %9, ptr noundef %10, ptr noundef %11, ptr noundef %12), !dbg !3774
  store i32 %call, ptr %retval, align 4, !dbg !3775
  br label %return, !dbg !3775

return:                                           ; preds = %if.end6, %if.then
  %13 = load i32, ptr %retval, align 4, !dbg !3776
  ret i32 %13, !dbg !3776
}

; Function Attrs: nounwind uwtable
define void @xmlRegexpPrint(ptr noundef %output, ptr noundef %regexp) #0 !dbg !3777 {
entry:
  %output.addr = alloca ptr, align 8
  %regexp.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %output, ptr %output.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %output.addr, metadata !3835, metadata !DIExpression()), !dbg !3838
  store ptr %regexp, ptr %regexp.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %regexp.addr, metadata !3836, metadata !DIExpression()), !dbg !3839
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !3840
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !3837, metadata !DIExpression()), !dbg !3841
  %0 = load ptr, ptr %output.addr, align 8, !dbg !3842, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !3844
  br i1 %cmp, label %if.then, label %if.end, !dbg !3845

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3846

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %output.addr, align 8, !dbg !3847, !tbaa !1527
  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef @.str.1), !dbg !3848
  %2 = load ptr, ptr %regexp.addr, align 8, !dbg !3849, !tbaa !1527
  %cmp1 = icmp eq ptr %2, null, !dbg !3851
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !3852

if.then2:                                         ; preds = %if.end
  %3 = load ptr, ptr %output.addr, align 8, !dbg !3853, !tbaa !1527
  %call3 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %3, ptr noundef @.str.2), !dbg !3855
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3856

if.end4:                                          ; preds = %if.end
  %4 = load ptr, ptr %output.addr, align 8, !dbg !3857, !tbaa !1527
  %5 = load ptr, ptr %regexp.addr, align 8, !dbg !3858, !tbaa !1527
  %string = getelementptr inbounds %struct._xmlRegexp, ptr %5, i32 0, i32 0, !dbg !3859
  %6 = load ptr, ptr %string, align 8, !dbg !3859, !tbaa !3860
  %call5 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %4, ptr noundef @.str.3, ptr noundef %6), !dbg !3861
  %7 = load ptr, ptr %output.addr, align 8, !dbg !3862, !tbaa !1527
  %call6 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %7, ptr noundef @.str.4), !dbg !3863
  %8 = load ptr, ptr %output.addr, align 8, !dbg !3864, !tbaa !1527
  %9 = load ptr, ptr %regexp.addr, align 8, !dbg !3865, !tbaa !1527
  %nbAtoms = getelementptr inbounds %struct._xmlRegexp, ptr %9, i32 0, i32 3, !dbg !3866
  %10 = load i32, ptr %nbAtoms, align 8, !dbg !3866, !tbaa !3867
  %call7 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef @.str.5, i32 noundef %10), !dbg !3868
  store i32 0, ptr %i, align 4, !dbg !3869, !tbaa !1767
  br label %for.cond, !dbg !3871

for.cond:                                         ; preds = %for.inc, %if.end4
  %11 = load i32, ptr %i, align 4, !dbg !3872, !tbaa !1767
  %12 = load ptr, ptr %regexp.addr, align 8, !dbg !3874, !tbaa !1527
  %nbAtoms8 = getelementptr inbounds %struct._xmlRegexp, ptr %12, i32 0, i32 3, !dbg !3875
  %13 = load i32, ptr %nbAtoms8, align 8, !dbg !3875, !tbaa !3867
  %cmp9 = icmp slt i32 %11, %13, !dbg !3876
  br i1 %cmp9, label %for.body, label %for.end, !dbg !3877

for.body:                                         ; preds = %for.cond
  %14 = load ptr, ptr %output.addr, align 8, !dbg !3878, !tbaa !1527
  %15 = load i32, ptr %i, align 4, !dbg !3880, !tbaa !1767
  %call10 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %14, ptr noundef @.str.6, i32 noundef %15), !dbg !3881
  %16 = load ptr, ptr %output.addr, align 8, !dbg !3882, !tbaa !1527
  %17 = load ptr, ptr %regexp.addr, align 8, !dbg !3883, !tbaa !1527
  %atoms = getelementptr inbounds %struct._xmlRegexp, ptr %17, i32 0, i32 4, !dbg !3884
  %18 = load ptr, ptr %atoms, align 8, !dbg !3884, !tbaa !3885
  %19 = load i32, ptr %i, align 4, !dbg !3886, !tbaa !1767
  %idxprom = sext i32 %19 to i64, !dbg !3883
  %arrayidx = getelementptr inbounds ptr, ptr %18, i64 %idxprom, !dbg !3883
  %20 = load ptr, ptr %arrayidx, align 8, !dbg !3883, !tbaa !1527
  call void @xmlRegPrintAtom(ptr noundef %16, ptr noundef %20), !dbg !3887
  br label %for.inc, !dbg !3888

for.inc:                                          ; preds = %for.body
  %21 = load i32, ptr %i, align 4, !dbg !3889, !tbaa !1767
  %inc = add nsw i32 %21, 1, !dbg !3889
  store i32 %inc, ptr %i, align 4, !dbg !3889, !tbaa !1767
  br label %for.cond, !dbg !3890, !llvm.loop !3891

for.end:                                          ; preds = %for.cond
  %22 = load ptr, ptr %output.addr, align 8, !dbg !3893, !tbaa !1527
  %23 = load ptr, ptr %regexp.addr, align 8, !dbg !3894, !tbaa !1527
  %nbStates = getelementptr inbounds %struct._xmlRegexp, ptr %23, i32 0, i32 1, !dbg !3895
  %24 = load i32, ptr %nbStates, align 8, !dbg !3895, !tbaa !3896
  %call11 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %22, ptr noundef @.str.7, i32 noundef %24), !dbg !3897
  %25 = load ptr, ptr %output.addr, align 8, !dbg !3898, !tbaa !1527
  %call12 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %25, ptr noundef @.str.4), !dbg !3899
  store i32 0, ptr %i, align 4, !dbg !3900, !tbaa !1767
  br label %for.cond13, !dbg !3902

for.cond13:                                       ; preds = %for.inc19, %for.end
  %26 = load i32, ptr %i, align 4, !dbg !3903, !tbaa !1767
  %27 = load ptr, ptr %regexp.addr, align 8, !dbg !3905, !tbaa !1527
  %nbStates14 = getelementptr inbounds %struct._xmlRegexp, ptr %27, i32 0, i32 1, !dbg !3906
  %28 = load i32, ptr %nbStates14, align 8, !dbg !3906, !tbaa !3896
  %cmp15 = icmp slt i32 %26, %28, !dbg !3907
  br i1 %cmp15, label %for.body16, label %for.end21, !dbg !3908

for.body16:                                       ; preds = %for.cond13
  %29 = load ptr, ptr %output.addr, align 8, !dbg !3909, !tbaa !1527
  %30 = load ptr, ptr %regexp.addr, align 8, !dbg !3911, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlRegexp, ptr %30, i32 0, i32 2, !dbg !3912
  %31 = load ptr, ptr %states, align 8, !dbg !3912, !tbaa !1551
  %32 = load i32, ptr %i, align 4, !dbg !3913, !tbaa !1767
  %idxprom17 = sext i32 %32 to i64, !dbg !3911
  %arrayidx18 = getelementptr inbounds ptr, ptr %31, i64 %idxprom17, !dbg !3911
  %33 = load ptr, ptr %arrayidx18, align 8, !dbg !3911, !tbaa !1527
  call void @xmlRegPrintState(ptr noundef %29, ptr noundef %33), !dbg !3914
  br label %for.inc19, !dbg !3915

for.inc19:                                        ; preds = %for.body16
  %34 = load i32, ptr %i, align 4, !dbg !3916, !tbaa !1767
  %inc20 = add nsw i32 %34, 1, !dbg !3916
  store i32 %inc20, ptr %i, align 4, !dbg !3916, !tbaa !1767
  br label %for.cond13, !dbg !3917, !llvm.loop !3918

for.end21:                                        ; preds = %for.cond13
  %35 = load ptr, ptr %output.addr, align 8, !dbg !3920, !tbaa !1527
  %36 = load ptr, ptr %regexp.addr, align 8, !dbg !3921, !tbaa !1527
  %nbCounters = getelementptr inbounds %struct._xmlRegexp, ptr %36, i32 0, i32 5, !dbg !3922
  %37 = load i32, ptr %nbCounters, align 8, !dbg !3922, !tbaa !1632
  %call22 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %35, ptr noundef @.str.8, i32 noundef %37), !dbg !3923
  store i32 0, ptr %i, align 4, !dbg !3924, !tbaa !1767
  br label %for.cond23, !dbg !3926

for.cond23:                                       ; preds = %for.inc33, %for.end21
  %38 = load i32, ptr %i, align 4, !dbg !3927, !tbaa !1767
  %39 = load ptr, ptr %regexp.addr, align 8, !dbg !3929, !tbaa !1527
  %nbCounters24 = getelementptr inbounds %struct._xmlRegexp, ptr %39, i32 0, i32 5, !dbg !3930
  %40 = load i32, ptr %nbCounters24, align 8, !dbg !3930, !tbaa !1632
  %cmp25 = icmp slt i32 %38, %40, !dbg !3931
  br i1 %cmp25, label %for.body26, label %for.end35, !dbg !3932

for.body26:                                       ; preds = %for.cond23
  %41 = load ptr, ptr %output.addr, align 8, !dbg !3933, !tbaa !1527
  %42 = load i32, ptr %i, align 4, !dbg !3935, !tbaa !1767
  %43 = load ptr, ptr %regexp.addr, align 8, !dbg !3936, !tbaa !1527
  %counters = getelementptr inbounds %struct._xmlRegexp, ptr %43, i32 0, i32 6, !dbg !3937
  %44 = load ptr, ptr %counters, align 8, !dbg !3937, !tbaa !2134
  %45 = load i32, ptr %i, align 4, !dbg !3938, !tbaa !1767
  %idxprom27 = sext i32 %45 to i64, !dbg !3936
  %arrayidx28 = getelementptr inbounds %struct._xmlRegCounter, ptr %44, i64 %idxprom27, !dbg !3936
  %min = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx28, i32 0, i32 0, !dbg !3939
  %46 = load i32, ptr %min, align 4, !dbg !3939, !tbaa !2170
  %47 = load ptr, ptr %regexp.addr, align 8, !dbg !3940, !tbaa !1527
  %counters29 = getelementptr inbounds %struct._xmlRegexp, ptr %47, i32 0, i32 6, !dbg !3941
  %48 = load ptr, ptr %counters29, align 8, !dbg !3941, !tbaa !2134
  %49 = load i32, ptr %i, align 4, !dbg !3942, !tbaa !1767
  %idxprom30 = sext i32 %49 to i64, !dbg !3940
  %arrayidx31 = getelementptr inbounds %struct._xmlRegCounter, ptr %48, i64 %idxprom30, !dbg !3940
  %max = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx31, i32 0, i32 1, !dbg !3943
  %50 = load i32, ptr %max, align 4, !dbg !3943, !tbaa !2147
  %call32 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %41, ptr noundef @.str.9, i32 noundef %42, i32 noundef %46, i32 noundef %50), !dbg !3944
  br label %for.inc33, !dbg !3945

for.inc33:                                        ; preds = %for.body26
  %51 = load i32, ptr %i, align 4, !dbg !3946, !tbaa !1767
  %inc34 = add nsw i32 %51, 1, !dbg !3946
  store i32 %inc34, ptr %i, align 4, !dbg !3946, !tbaa !1767
  br label %for.cond23, !dbg !3947, !llvm.loop !3948

for.end35:                                        ; preds = %for.cond23
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3950
  br label %cleanup, !dbg !3950

cleanup:                                          ; preds = %for.end35, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !3950
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !3950

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !3951 i32 @fprintf(ptr noundef, ptr noundef, ...) #5

; Function Attrs: nounwind uwtable
define internal void @xmlRegPrintAtom(ptr noundef %output, ptr noundef %atom) #0 !dbg !3957 {
entry:
  %output.addr = alloca ptr, align 8
  %atom.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  store ptr %output, ptr %output.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %output.addr, metadata !3961, metadata !DIExpression()), !dbg !3967
  store ptr %atom, ptr %atom.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom.addr, metadata !3962, metadata !DIExpression()), !dbg !3968
  %0 = load ptr, ptr %output.addr, align 8, !dbg !3969, !tbaa !1527
  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %0, ptr noundef @.str.19), !dbg !3970
  %1 = load ptr, ptr %atom.addr, align 8, !dbg !3971, !tbaa !1527
  %cmp = icmp eq ptr %1, null, !dbg !3973
  br i1 %cmp, label %if.then, label %if.end, !dbg !3974

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %output.addr, align 8, !dbg !3975, !tbaa !1527
  %call1 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %2, ptr noundef @.str.2), !dbg !3977
  br label %if.end35, !dbg !3978

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %atom.addr, align 8, !dbg !3979, !tbaa !1527
  %neg = getelementptr inbounds %struct._xmlRegAtom, ptr %3, i32 0, i32 7, !dbg !3981
  %4 = load i32, ptr %neg, align 8, !dbg !3981, !tbaa !2323
  %tobool = icmp ne i32 %4, 0, !dbg !3979
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !3982

if.then2:                                         ; preds = %if.end
  %5 = load ptr, ptr %output.addr, align 8, !dbg !3983, !tbaa !1527
  %call3 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %5, ptr noundef @.str.20), !dbg !3984
  br label %if.end4, !dbg !3984

if.end4:                                          ; preds = %if.then2, %if.end
  %6 = load ptr, ptr %output.addr, align 8, !dbg !3985, !tbaa !1527
  %7 = load ptr, ptr %atom.addr, align 8, !dbg !3986, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlRegAtom, ptr %7, i32 0, i32 1, !dbg !3987
  %8 = load i32, ptr %type, align 4, !dbg !3987, !tbaa !3988
  call void @xmlRegPrintAtomType(ptr noundef %6, i32 noundef %8), !dbg !3989
  %9 = load ptr, ptr %output.addr, align 8, !dbg !3990, !tbaa !1527
  %10 = load ptr, ptr %atom.addr, align 8, !dbg !3991, !tbaa !1527
  %quant = getelementptr inbounds %struct._xmlRegAtom, ptr %10, i32 0, i32 2, !dbg !3992
  %11 = load i32, ptr %quant, align 8, !dbg !3992, !tbaa !3993
  call void @xmlRegPrintQuantType(ptr noundef %9, i32 noundef %11), !dbg !3994
  %12 = load ptr, ptr %atom.addr, align 8, !dbg !3995, !tbaa !1527
  %quant5 = getelementptr inbounds %struct._xmlRegAtom, ptr %12, i32 0, i32 2, !dbg !3997
  %13 = load i32, ptr %quant5, align 8, !dbg !3997, !tbaa !3993
  %cmp6 = icmp eq i32 %13, 8, !dbg !3998
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !3999

if.then7:                                         ; preds = %if.end4
  %14 = load ptr, ptr %output.addr, align 8, !dbg !4000, !tbaa !1527
  %15 = load ptr, ptr %atom.addr, align 8, !dbg !4001, !tbaa !1527
  %min = getelementptr inbounds %struct._xmlRegAtom, ptr %15, i32 0, i32 3, !dbg !4002
  %16 = load i32, ptr %min, align 4, !dbg !4002, !tbaa !2372
  %17 = load ptr, ptr %atom.addr, align 8, !dbg !4003, !tbaa !1527
  %max = getelementptr inbounds %struct._xmlRegAtom, ptr %17, i32 0, i32 4, !dbg !4004
  %18 = load i32, ptr %max, align 8, !dbg !4004, !tbaa !2377
  %call8 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %14, ptr noundef @.str.21, i32 noundef %16, i32 noundef %18), !dbg !4005
  br label %if.end9, !dbg !4005

if.end9:                                          ; preds = %if.then7, %if.end4
  %19 = load ptr, ptr %atom.addr, align 8, !dbg !4006, !tbaa !1527
  %type10 = getelementptr inbounds %struct._xmlRegAtom, ptr %19, i32 0, i32 1, !dbg !4008
  %20 = load i32, ptr %type10, align 4, !dbg !4008, !tbaa !3988
  %cmp11 = icmp eq i32 %20, 5, !dbg !4009
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !4010

if.then12:                                        ; preds = %if.end9
  %21 = load ptr, ptr %output.addr, align 8, !dbg !4011, !tbaa !1527
  %22 = load ptr, ptr %atom.addr, align 8, !dbg !4012, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %22, i32 0, i32 5, !dbg !4013
  %23 = load ptr, ptr %valuep, align 8, !dbg !4013, !tbaa !2159
  %call13 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %21, ptr noundef @.str.3, ptr noundef %23), !dbg !4014
  br label %if.end14, !dbg !4014

if.end14:                                         ; preds = %if.then12, %if.end9
  %24 = load ptr, ptr %atom.addr, align 8, !dbg !4015, !tbaa !1527
  %type15 = getelementptr inbounds %struct._xmlRegAtom, ptr %24, i32 0, i32 1, !dbg !4016
  %25 = load i32, ptr %type15, align 4, !dbg !4016, !tbaa !3988
  %cmp16 = icmp eq i32 %25, 2, !dbg !4017
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !4018

if.then17:                                        ; preds = %if.end14
  %26 = load ptr, ptr %output.addr, align 8, !dbg !4019, !tbaa !1527
  %27 = load ptr, ptr %atom.addr, align 8, !dbg !4020, !tbaa !1527
  %codepoint = getelementptr inbounds %struct._xmlRegAtom, ptr %27, i32 0, i32 8, !dbg !4021
  %28 = load i32, ptr %codepoint, align 4, !dbg !4021, !tbaa !4022
  %call18 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %26, ptr noundef @.str.22, i32 noundef %28), !dbg !4023
  br label %if.end35, !dbg !4023

if.else:                                          ; preds = %if.end14
  %29 = load ptr, ptr %atom.addr, align 8, !dbg !4024, !tbaa !1527
  %type19 = getelementptr inbounds %struct._xmlRegAtom, ptr %29, i32 0, i32 1, !dbg !4025
  %30 = load i32, ptr %type19, align 4, !dbg !4025, !tbaa !3988
  %cmp20 = icmp eq i32 %30, 3, !dbg !4026
  br i1 %cmp20, label %if.then21, label %if.else25, !dbg !4027

if.then21:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !4028
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !3963, metadata !DIExpression()), !dbg !4029
  %31 = load ptr, ptr %output.addr, align 8, !dbg !4030, !tbaa !1527
  %32 = load ptr, ptr %atom.addr, align 8, !dbg !4031, !tbaa !1527
  %nbRanges = getelementptr inbounds %struct._xmlRegAtom, ptr %32, i32 0, i32 13, !dbg !4032
  %33 = load i32, ptr %nbRanges, align 4, !dbg !4032, !tbaa !4033
  %call22 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %31, ptr noundef @.str.23, i32 noundef %33), !dbg !4034
  store i32 0, ptr %i, align 4, !dbg !4035, !tbaa !1767
  br label %for.cond, !dbg !4037

for.cond:                                         ; preds = %for.inc, %if.then21
  %34 = load i32, ptr %i, align 4, !dbg !4038, !tbaa !1767
  %35 = load ptr, ptr %atom.addr, align 8, !dbg !4040, !tbaa !1527
  %nbRanges23 = getelementptr inbounds %struct._xmlRegAtom, ptr %35, i32 0, i32 13, !dbg !4041
  %36 = load i32, ptr %nbRanges23, align 4, !dbg !4041, !tbaa !4033
  %cmp24 = icmp slt i32 %34, %36, !dbg !4042
  br i1 %cmp24, label %for.body, label %for.end, !dbg !4043

for.body:                                         ; preds = %for.cond
  %37 = load ptr, ptr %output.addr, align 8, !dbg !4044, !tbaa !1527
  %38 = load ptr, ptr %atom.addr, align 8, !dbg !4045, !tbaa !1527
  %ranges = getelementptr inbounds %struct._xmlRegAtom, ptr %38, i32 0, i32 14, !dbg !4046
  %39 = load ptr, ptr %ranges, align 8, !dbg !4046, !tbaa !4047
  %40 = load i32, ptr %i, align 4, !dbg !4048, !tbaa !1767
  %idxprom = sext i32 %40 to i64, !dbg !4045
  %arrayidx = getelementptr inbounds ptr, ptr %39, i64 %idxprom, !dbg !4045
  %41 = load ptr, ptr %arrayidx, align 8, !dbg !4045, !tbaa !1527
  call void @xmlRegPrintRange(ptr noundef %37, ptr noundef %41), !dbg !4049
  br label %for.inc, !dbg !4049

for.inc:                                          ; preds = %for.body
  %42 = load i32, ptr %i, align 4, !dbg !4050, !tbaa !1767
  %inc = add nsw i32 %42, 1, !dbg !4050
  store i32 %inc, ptr %i, align 4, !dbg !4050, !tbaa !1767
  br label %for.cond, !dbg !4051, !llvm.loop !4052

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !4054
  br label %if.end34, !dbg !4055

if.else25:                                        ; preds = %if.else
  %43 = load ptr, ptr %atom.addr, align 8, !dbg !4056, !tbaa !1527
  %type26 = getelementptr inbounds %struct._xmlRegAtom, ptr %43, i32 0, i32 1, !dbg !4058
  %44 = load i32, ptr %type26, align 4, !dbg !4058, !tbaa !3988
  %cmp27 = icmp eq i32 %44, 4, !dbg !4059
  br i1 %cmp27, label %if.then28, label %if.else31, !dbg !4060

if.then28:                                        ; preds = %if.else25
  %45 = load ptr, ptr %output.addr, align 8, !dbg !4061, !tbaa !1527
  %46 = load ptr, ptr %atom.addr, align 8, !dbg !4063, !tbaa !1527
  %start = getelementptr inbounds %struct._xmlRegAtom, ptr %46, i32 0, i32 9, !dbg !4064
  %47 = load ptr, ptr %start, align 8, !dbg !4064, !tbaa !4065
  %no = getelementptr inbounds %struct._xmlAutomataState, ptr %47, i32 0, i32 4, !dbg !4066
  %48 = load i32, ptr %no, align 8, !dbg !4066, !tbaa !4067
  %49 = load ptr, ptr %atom.addr, align 8, !dbg !4068, !tbaa !1527
  %stop = getelementptr inbounds %struct._xmlRegAtom, ptr %49, i32 0, i32 11, !dbg !4069
  %50 = load ptr, ptr %stop, align 8, !dbg !4069, !tbaa !4070
  %no29 = getelementptr inbounds %struct._xmlAutomataState, ptr %50, i32 0, i32 4, !dbg !4071
  %51 = load i32, ptr %no29, align 8, !dbg !4071, !tbaa !4067
  %call30 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %45, ptr noundef @.str.24, i32 noundef %48, i32 noundef %51), !dbg !4072
  br label %if.end33, !dbg !4073

if.else31:                                        ; preds = %if.else25
  %52 = load ptr, ptr %output.addr, align 8, !dbg !4074, !tbaa !1527
  %call32 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %52, ptr noundef @.str.4), !dbg !4076
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then28
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %for.end
  br label %if.end35

if.end35:                                         ; preds = %if.then, %if.end34, %if.then17
  ret void, !dbg !4077
}

; Function Attrs: nounwind uwtable
define internal void @xmlRegPrintState(ptr noundef %output, ptr noundef %state) #0 !dbg !4078 {
entry:
  %output.addr = alloca ptr, align 8
  %state.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %output, ptr %output.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %output.addr, metadata !4082, metadata !DIExpression()), !dbg !4085
  store ptr %state, ptr %state.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !4083, metadata !DIExpression()), !dbg !4086
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !4087
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4084, metadata !DIExpression()), !dbg !4088
  %0 = load ptr, ptr %output.addr, align 8, !dbg !4089, !tbaa !1527
  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %0, ptr noundef @.str.88), !dbg !4090
  %1 = load ptr, ptr %state.addr, align 8, !dbg !4091, !tbaa !1527
  %cmp = icmp eq ptr %1, null, !dbg !4093
  br i1 %cmp, label %if.then, label %if.end, !dbg !4094

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %output.addr, align 8, !dbg !4095, !tbaa !1527
  %call1 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %2, ptr noundef @.str.2), !dbg !4097
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4098

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %state.addr, align 8, !dbg !4099, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlAutomataState, ptr %3, i32 0, i32 0, !dbg !4101
  %4 = load i32, ptr %type, align 8, !dbg !4101, !tbaa !1984
  %cmp2 = icmp eq i32 %4, 1, !dbg !4102
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !4103

if.then3:                                         ; preds = %if.end
  %5 = load ptr, ptr %output.addr, align 8, !dbg !4104, !tbaa !1527
  %call4 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %5, ptr noundef @.str.89), !dbg !4105
  br label %if.end5, !dbg !4105

if.end5:                                          ; preds = %if.then3, %if.end
  %6 = load ptr, ptr %state.addr, align 8, !dbg !4106, !tbaa !1527
  %type6 = getelementptr inbounds %struct._xmlAutomataState, ptr %6, i32 0, i32 0, !dbg !4108
  %7 = load i32, ptr %type6, align 8, !dbg !4108, !tbaa !1984
  %cmp7 = icmp eq i32 %7, 2, !dbg !4109
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !4110

if.then8:                                         ; preds = %if.end5
  %8 = load ptr, ptr %output.addr, align 8, !dbg !4111, !tbaa !1527
  %call9 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef @.str.90), !dbg !4112
  br label %if.end10, !dbg !4112

if.end10:                                         ; preds = %if.then8, %if.end5
  %9 = load ptr, ptr %output.addr, align 8, !dbg !4113, !tbaa !1527
  %10 = load ptr, ptr %state.addr, align 8, !dbg !4114, !tbaa !1527
  %no = getelementptr inbounds %struct._xmlAutomataState, ptr %10, i32 0, i32 4, !dbg !4115
  %11 = load i32, ptr %no, align 8, !dbg !4115, !tbaa !4067
  %12 = load ptr, ptr %state.addr, align 8, !dbg !4116, !tbaa !1527
  %nbTrans = getelementptr inbounds %struct._xmlAutomataState, ptr %12, i32 0, i32 6, !dbg !4117
  %13 = load i32, ptr %nbTrans, align 8, !dbg !4117, !tbaa !2052
  %call11 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %9, ptr noundef @.str.91, i32 noundef %11, i32 noundef %13), !dbg !4118
  store i32 0, ptr %i, align 4, !dbg !4119, !tbaa !1767
  br label %for.cond, !dbg !4121

for.cond:                                         ; preds = %for.inc, %if.end10
  %14 = load i32, ptr %i, align 4, !dbg !4122, !tbaa !1767
  %15 = load ptr, ptr %state.addr, align 8, !dbg !4124, !tbaa !1527
  %nbTrans12 = getelementptr inbounds %struct._xmlAutomataState, ptr %15, i32 0, i32 6, !dbg !4125
  %16 = load i32, ptr %nbTrans12, align 8, !dbg !4125, !tbaa !2052
  %cmp13 = icmp slt i32 %14, %16, !dbg !4126
  br i1 %cmp13, label %for.body, label %for.end, !dbg !4127

for.body:                                         ; preds = %for.cond
  %17 = load ptr, ptr %output.addr, align 8, !dbg !4128, !tbaa !1527
  %18 = load ptr, ptr %state.addr, align 8, !dbg !4130, !tbaa !1527
  %trans = getelementptr inbounds %struct._xmlAutomataState, ptr %18, i32 0, i32 7, !dbg !4131
  %19 = load ptr, ptr %trans, align 8, !dbg !4131, !tbaa !2058
  %20 = load i32, ptr %i, align 4, !dbg !4132, !tbaa !1767
  %idxprom = sext i32 %20 to i64, !dbg !4130
  %arrayidx = getelementptr inbounds %struct._xmlRegTrans, ptr %19, i64 %idxprom, !dbg !4130
  call void @xmlRegPrintTrans(ptr noundef %17, ptr noundef %arrayidx), !dbg !4133
  br label %for.inc, !dbg !4134

for.inc:                                          ; preds = %for.body
  %21 = load i32, ptr %i, align 4, !dbg !4135, !tbaa !1767
  %inc = add nsw i32 %21, 1, !dbg !4135
  store i32 %inc, ptr %i, align 4, !dbg !4135, !tbaa !1767
  br label %for.cond, !dbg !4136, !llvm.loop !4137

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4139
  br label %cleanup, !dbg !4139

cleanup:                                          ; preds = %for.end, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !4139
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !4139

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define ptr @xmlRegexpCompile(ptr noundef %regexp) #0 !dbg !4140 {
entry:
  %retval = alloca ptr, align 8
  %regexp.addr = alloca ptr, align 8
  %ret = alloca ptr, align 8
  %ctxt = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %regexp, ptr %regexp.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %regexp.addr, metadata !4144, metadata !DIExpression()), !dbg !4147
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #8, !dbg !4148
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !4145, metadata !DIExpression()), !dbg !4149
  call void @llvm.lifetime.start.p0(i64 8, ptr %ctxt) #8, !dbg !4150
  tail call void @llvm.dbg.declare(metadata ptr %ctxt, metadata !4146, metadata !DIExpression()), !dbg !4151
  %0 = load ptr, ptr %regexp.addr, align 8, !dbg !4152, !tbaa !1527
  %call = call ptr @xmlRegNewParserCtxt(ptr noundef %0), !dbg !4153
  store ptr %call, ptr %ctxt, align 8, !dbg !4154, !tbaa !1527
  %1 = load ptr, ptr %ctxt, align 8, !dbg !4155, !tbaa !1527
  %cmp = icmp eq ptr %1, null, !dbg !4157
  br i1 %cmp, label %if.then, label %if.end, !dbg !4158

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !4159
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4159

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %ctxt, align 8, !dbg !4160, !tbaa !1527
  %end = getelementptr inbounds %struct._xmlAutomata, ptr %2, i32 0, i32 5, !dbg !4161
  store ptr null, ptr %end, align 8, !dbg !4162, !tbaa !4163
  %3 = load ptr, ptr %ctxt, align 8, !dbg !4164, !tbaa !1527
  %call1 = call ptr @xmlRegNewState(ptr noundef %3), !dbg !4165
  %4 = load ptr, ptr %ctxt, align 8, !dbg !4166, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %4, i32 0, i32 6, !dbg !4167
  store ptr %call1, ptr %state, align 8, !dbg !4168, !tbaa !4169
  %5 = load ptr, ptr %ctxt, align 8, !dbg !4170, !tbaa !1527
  %start = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 4, !dbg !4171
  store ptr %call1, ptr %start, align 8, !dbg !4172, !tbaa !4173
  %6 = load ptr, ptr %ctxt, align 8, !dbg !4174, !tbaa !1527
  %7 = load ptr, ptr %ctxt, align 8, !dbg !4175, !tbaa !1527
  %start2 = getelementptr inbounds %struct._xmlAutomata, ptr %7, i32 0, i32 4, !dbg !4176
  %8 = load ptr, ptr %start2, align 8, !dbg !4176, !tbaa !4173
  %call3 = call i32 @xmlRegStatePush(ptr noundef %6, ptr noundef %8), !dbg !4177
  %9 = load ptr, ptr %ctxt, align 8, !dbg !4178, !tbaa !1527
  call void @xmlFAParseRegExp(ptr noundef %9, i32 noundef 1), !dbg !4179
  %10 = load ptr, ptr %ctxt, align 8, !dbg !4180, !tbaa !1527
  %cur = getelementptr inbounds %struct._xmlAutomata, ptr %10, i32 0, i32 1, !dbg !4180
  %11 = load ptr, ptr %cur, align 8, !dbg !4180, !tbaa !4182
  %12 = load i8, ptr %11, align 1, !dbg !4180, !tbaa !2932
  %conv = zext i8 %12 to i32, !dbg !4180
  %cmp4 = icmp ne i32 %conv, 0, !dbg !4183
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !4184

if.then6:                                         ; preds = %if.end
  %13 = load ptr, ptr %ctxt, align 8, !dbg !4185, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %13, i32 0, i32 2, !dbg !4185
  store i32 1450, ptr %error, align 8, !dbg !4185, !tbaa !1729
  %14 = load ptr, ptr %ctxt, align 8, !dbg !4185, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %14, ptr noundef @.str.10), !dbg !4185
  br label %if.end7, !dbg !4187

if.end7:                                          ; preds = %if.then6, %if.end
  %15 = load ptr, ptr %ctxt, align 8, !dbg !4188, !tbaa !1527
  %error8 = getelementptr inbounds %struct._xmlAutomata, ptr %15, i32 0, i32 2, !dbg !4190
  %16 = load i32, ptr %error8, align 8, !dbg !4190, !tbaa !1729
  %cmp9 = icmp ne i32 %16, 0, !dbg !4191
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !4192

if.then11:                                        ; preds = %if.end7
  %17 = load ptr, ptr %ctxt, align 8, !dbg !4193, !tbaa !1527
  call void @xmlRegFreeParserCtxt(ptr noundef %17), !dbg !4195
  store ptr null, ptr %retval, align 8, !dbg !4196
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4196

if.end12:                                         ; preds = %if.end7
  %18 = load ptr, ptr %ctxt, align 8, !dbg !4197, !tbaa !1527
  %state13 = getelementptr inbounds %struct._xmlAutomata, ptr %18, i32 0, i32 6, !dbg !4198
  %19 = load ptr, ptr %state13, align 8, !dbg !4198, !tbaa !4169
  %20 = load ptr, ptr %ctxt, align 8, !dbg !4199, !tbaa !1527
  %end14 = getelementptr inbounds %struct._xmlAutomata, ptr %20, i32 0, i32 5, !dbg !4200
  store ptr %19, ptr %end14, align 8, !dbg !4201, !tbaa !4163
  %21 = load ptr, ptr %ctxt, align 8, !dbg !4202, !tbaa !1527
  %start15 = getelementptr inbounds %struct._xmlAutomata, ptr %21, i32 0, i32 4, !dbg !4203
  %22 = load ptr, ptr %start15, align 8, !dbg !4203, !tbaa !4173
  %type = getelementptr inbounds %struct._xmlAutomataState, ptr %22, i32 0, i32 0, !dbg !4204
  store i32 1, ptr %type, align 8, !dbg !4205, !tbaa !1984
  %23 = load ptr, ptr %ctxt, align 8, !dbg !4206, !tbaa !1527
  %end16 = getelementptr inbounds %struct._xmlAutomata, ptr %23, i32 0, i32 5, !dbg !4207
  %24 = load ptr, ptr %end16, align 8, !dbg !4207, !tbaa !4163
  %type17 = getelementptr inbounds %struct._xmlAutomataState, ptr %24, i32 0, i32 0, !dbg !4208
  store i32 2, ptr %type17, align 8, !dbg !4209, !tbaa !1984
  %25 = load ptr, ptr %ctxt, align 8, !dbg !4210, !tbaa !1527
  call void @xmlFAEliminateEpsilonTransitions(ptr noundef %25), !dbg !4211
  %26 = load ptr, ptr %ctxt, align 8, !dbg !4212, !tbaa !1527
  %error18 = getelementptr inbounds %struct._xmlAutomata, ptr %26, i32 0, i32 2, !dbg !4214
  %27 = load i32, ptr %error18, align 8, !dbg !4214, !tbaa !1729
  %cmp19 = icmp ne i32 %27, 0, !dbg !4215
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !4216

if.then21:                                        ; preds = %if.end12
  %28 = load ptr, ptr %ctxt, align 8, !dbg !4217, !tbaa !1527
  call void @xmlRegFreeParserCtxt(ptr noundef %28), !dbg !4219
  store ptr null, ptr %retval, align 8, !dbg !4220
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4220

if.end22:                                         ; preds = %if.end12
  %29 = load ptr, ptr %ctxt, align 8, !dbg !4221, !tbaa !1527
  %call23 = call ptr @xmlRegEpxFromParse(ptr noundef %29), !dbg !4222
  store ptr %call23, ptr %ret, align 8, !dbg !4223, !tbaa !1527
  %30 = load ptr, ptr %ctxt, align 8, !dbg !4224, !tbaa !1527
  call void @xmlRegFreeParserCtxt(ptr noundef %30), !dbg !4225
  %31 = load ptr, ptr %ret, align 8, !dbg !4226, !tbaa !1527
  store ptr %31, ptr %retval, align 8, !dbg !4227
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4227

cleanup:                                          ; preds = %if.end22, %if.then21, %if.then11, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ctxt) #8, !dbg !4228
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #8, !dbg !4228
  %32 = load ptr, ptr %retval, align 8, !dbg !4228
  ret ptr %32, !dbg !4228
}

; Function Attrs: nounwind uwtable
define internal ptr @xmlRegNewParserCtxt(ptr noundef %string) #0 !dbg !4229 {
entry:
  %retval = alloca ptr, align 8
  %string.addr = alloca ptr, align 8
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %string, ptr %string.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %string.addr, metadata !4233, metadata !DIExpression()), !dbg !4235
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #8, !dbg !4236
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !4234, metadata !DIExpression()), !dbg !4237
  %0 = load ptr, ptr @xmlMalloc, align 8, !dbg !4238, !tbaa !1527
  %call = call ptr %0(i64 noundef 120), !dbg !4238
  store ptr %call, ptr %ret, align 8, !dbg !4239, !tbaa !1527
  %1 = load ptr, ptr %ret, align 8, !dbg !4240, !tbaa !1527
  %cmp = icmp eq ptr %1, null, !dbg !4242
  br i1 %cmp, label %if.then, label %if.end, !dbg !4243

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !4244
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4244

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %ret, align 8, !dbg !4245, !tbaa !1527
  call void @llvm.memset.p0.i64(ptr align 8 %2, i8 0, i64 120, i1 false), !dbg !4246
  %3 = load ptr, ptr %string.addr, align 8, !dbg !4247, !tbaa !1527
  %cmp1 = icmp ne ptr %3, null, !dbg !4249
  br i1 %cmp1, label %if.then2, label %if.end5, !dbg !4250

if.then2:                                         ; preds = %if.end
  %4 = load ptr, ptr %string.addr, align 8, !dbg !4251, !tbaa !1527
  %call3 = call ptr @xmlStrdup(ptr noundef %4), !dbg !4252
  %5 = load ptr, ptr %ret, align 8, !dbg !4253, !tbaa !1527
  %string4 = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 0, !dbg !4254
  store ptr %call3, ptr %string4, align 8, !dbg !4255, !tbaa !1723
  br label %if.end5, !dbg !4253

if.end5:                                          ; preds = %if.then2, %if.end
  %6 = load ptr, ptr %ret, align 8, !dbg !4256, !tbaa !1527
  %string6 = getelementptr inbounds %struct._xmlAutomata, ptr %6, i32 0, i32 0, !dbg !4257
  %7 = load ptr, ptr %string6, align 8, !dbg !4257, !tbaa !1723
  %8 = load ptr, ptr %ret, align 8, !dbg !4258, !tbaa !1527
  %cur = getelementptr inbounds %struct._xmlAutomata, ptr %8, i32 0, i32 1, !dbg !4259
  store ptr %7, ptr %cur, align 8, !dbg !4260, !tbaa !4182
  %9 = load ptr, ptr %ret, align 8, !dbg !4261, !tbaa !1527
  %neg = getelementptr inbounds %struct._xmlAutomata, ptr %9, i32 0, i32 3, !dbg !4262
  store i32 0, ptr %neg, align 4, !dbg !4263, !tbaa !4264
  %10 = load ptr, ptr %ret, align 8, !dbg !4265, !tbaa !1527
  %negs = getelementptr inbounds %struct._xmlAutomata, ptr %10, i32 0, i32 18, !dbg !4266
  store i32 0, ptr %negs, align 4, !dbg !4267, !tbaa !4268
  %11 = load ptr, ptr %ret, align 8, !dbg !4269, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %11, i32 0, i32 2, !dbg !4270
  store i32 0, ptr %error, align 8, !dbg !4271, !tbaa !1729
  %12 = load ptr, ptr %ret, align 8, !dbg !4272, !tbaa !1527
  %determinist = getelementptr inbounds %struct._xmlAutomata, ptr %12, i32 0, i32 17, !dbg !4273
  store i32 -1, ptr %determinist, align 8, !dbg !4274, !tbaa !4275
  %13 = load ptr, ptr %ret, align 8, !dbg !4276, !tbaa !1527
  store ptr %13, ptr %retval, align 8, !dbg !4277
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4277

cleanup:                                          ; preds = %if.end5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #8, !dbg !4278
  %14 = load ptr, ptr %retval, align 8, !dbg !4278
  ret ptr %14, !dbg !4278
}

; Function Attrs: nounwind uwtable
define internal ptr @xmlRegNewState(ptr noundef %ctxt) #0 !dbg !4279 {
entry:
  %retval = alloca ptr, align 8
  %ctxt.addr = alloca ptr, align 8
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !4283, metadata !DIExpression()), !dbg !4285
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #8, !dbg !4286
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !4284, metadata !DIExpression()), !dbg !4287
  %0 = load ptr, ptr @xmlMalloc, align 8, !dbg !4288, !tbaa !1527
  %call = call ptr %0(i64 noundef 56), !dbg !4288
  store ptr %call, ptr %ret, align 8, !dbg !4289, !tbaa !1527
  %1 = load ptr, ptr %ret, align 8, !dbg !4290, !tbaa !1527
  %cmp = icmp eq ptr %1, null, !dbg !4292
  br i1 %cmp, label %if.then, label %if.end, !dbg !4293

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !4294, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %2, ptr noundef @.str.102), !dbg !4296
  store ptr null, ptr %retval, align 8, !dbg !4297
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4297

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %ret, align 8, !dbg !4298, !tbaa !1527
  call void @llvm.memset.p0.i64(ptr align 8 %3, i8 0, i64 56, i1 false), !dbg !4299
  %4 = load ptr, ptr %ret, align 8, !dbg !4300, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlAutomataState, ptr %4, i32 0, i32 0, !dbg !4301
  store i32 3, ptr %type, align 8, !dbg !4302, !tbaa !1984
  %5 = load ptr, ptr %ret, align 8, !dbg !4303, !tbaa !1527
  %mark = getelementptr inbounds %struct._xmlAutomataState, ptr %5, i32 0, i32 1, !dbg !4304
  store i32 0, ptr %mark, align 4, !dbg !4305, !tbaa !4306
  %6 = load ptr, ptr %ret, align 8, !dbg !4307, !tbaa !1527
  store ptr %6, ptr %retval, align 8, !dbg !4308
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4308

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #8, !dbg !4309
  %7 = load ptr, ptr %retval, align 8, !dbg !4309
  ret ptr %7, !dbg !4309
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlRegStatePush(ptr noundef %ctxt, ptr noundef %state) #0 !dbg !4310 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %state.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !4314, metadata !DIExpression()), !dbg !4320
  store ptr %state, ptr %state.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !4315, metadata !DIExpression()), !dbg !4321
  %0 = load ptr, ptr %state.addr, align 8, !dbg !4322, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !4324
  br i1 %cmp, label %if.then, label %if.end, !dbg !4325

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !4326
  br label %return, !dbg !4326

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !4327, !tbaa !1527
  %maxStates = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 11, !dbg !4328
  %2 = load i32, ptr %maxStates, align 8, !dbg !4328, !tbaa !4329
  %cmp1 = icmp eq i32 %2, 0, !dbg !4330
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !4331

if.then2:                                         ; preds = %if.end
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !4332, !tbaa !1527
  %maxStates3 = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 11, !dbg !4334
  store i32 4, ptr %maxStates3, align 8, !dbg !4335, !tbaa !4329
  %4 = load ptr, ptr @xmlMalloc, align 8, !dbg !4336, !tbaa !1527
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !4337, !tbaa !1527
  %maxStates4 = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 11, !dbg !4338
  %6 = load i32, ptr %maxStates4, align 8, !dbg !4338, !tbaa !4329
  %conv = sext i32 %6 to i64, !dbg !4337
  %mul = mul i64 %conv, 8, !dbg !4339
  %call = call ptr %4(i64 noundef %mul), !dbg !4336
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !4340, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlAutomata, ptr %7, i32 0, i32 13, !dbg !4341
  store ptr %call, ptr %states, align 8, !dbg !4342, !tbaa !4343
  %8 = load ptr, ptr %ctxt.addr, align 8, !dbg !4344, !tbaa !1527
  %states5 = getelementptr inbounds %struct._xmlAutomata, ptr %8, i32 0, i32 13, !dbg !4346
  %9 = load ptr, ptr %states5, align 8, !dbg !4346, !tbaa !4343
  %cmp6 = icmp eq ptr %9, null, !dbg !4347
  br i1 %cmp6, label %if.then8, label %if.end10, !dbg !4348

if.then8:                                         ; preds = %if.then2
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !4349, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %10, ptr noundef @.str.103), !dbg !4351
  %11 = load ptr, ptr %ctxt.addr, align 8, !dbg !4352, !tbaa !1527
  %maxStates9 = getelementptr inbounds %struct._xmlAutomata, ptr %11, i32 0, i32 11, !dbg !4353
  store i32 0, ptr %maxStates9, align 8, !dbg !4354, !tbaa !4329
  store i32 -1, ptr %retval, align 4, !dbg !4355
  br label %return, !dbg !4355

if.end10:                                         ; preds = %if.then2
  br label %if.end29, !dbg !4356

if.else:                                          ; preds = %if.end
  %12 = load ptr, ptr %ctxt.addr, align 8, !dbg !4357, !tbaa !1527
  %nbStates = getelementptr inbounds %struct._xmlAutomata, ptr %12, i32 0, i32 12, !dbg !4358
  %13 = load i32, ptr %nbStates, align 4, !dbg !4358, !tbaa !4359
  %14 = load ptr, ptr %ctxt.addr, align 8, !dbg !4360, !tbaa !1527
  %maxStates11 = getelementptr inbounds %struct._xmlAutomata, ptr %14, i32 0, i32 11, !dbg !4361
  %15 = load i32, ptr %maxStates11, align 8, !dbg !4361, !tbaa !4329
  %cmp12 = icmp sge i32 %13, %15, !dbg !4362
  br i1 %cmp12, label %if.then14, label %if.end28, !dbg !4363

if.then14:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !4364
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !4316, metadata !DIExpression()), !dbg !4365
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !4366, !tbaa !1527
  %maxStates15 = getelementptr inbounds %struct._xmlAutomata, ptr %16, i32 0, i32 11, !dbg !4367
  %17 = load i32, ptr %maxStates15, align 8, !dbg !4368, !tbaa !4329
  %mul16 = mul nsw i32 %17, 2, !dbg !4368
  store i32 %mul16, ptr %maxStates15, align 8, !dbg !4368, !tbaa !4329
  %18 = load ptr, ptr @xmlRealloc, align 8, !dbg !4369, !tbaa !1527
  %19 = load ptr, ptr %ctxt.addr, align 8, !dbg !4370, !tbaa !1527
  %states17 = getelementptr inbounds %struct._xmlAutomata, ptr %19, i32 0, i32 13, !dbg !4371
  %20 = load ptr, ptr %states17, align 8, !dbg !4371, !tbaa !4343
  %21 = load ptr, ptr %ctxt.addr, align 8, !dbg !4372, !tbaa !1527
  %maxStates18 = getelementptr inbounds %struct._xmlAutomata, ptr %21, i32 0, i32 11, !dbg !4373
  %22 = load i32, ptr %maxStates18, align 8, !dbg !4373, !tbaa !4329
  %conv19 = sext i32 %22 to i64, !dbg !4372
  %mul20 = mul i64 %conv19, 8, !dbg !4374
  %call21 = call ptr %18(ptr noundef %20, i64 noundef %mul20), !dbg !4369
  store ptr %call21, ptr %tmp, align 8, !dbg !4375, !tbaa !1527
  %23 = load ptr, ptr %tmp, align 8, !dbg !4376, !tbaa !1527
  %cmp22 = icmp eq ptr %23, null, !dbg !4378
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !4379

if.then24:                                        ; preds = %if.then14
  %24 = load ptr, ptr %ctxt.addr, align 8, !dbg !4380, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %24, ptr noundef @.str.103), !dbg !4382
  %25 = load ptr, ptr %ctxt.addr, align 8, !dbg !4383, !tbaa !1527
  %maxStates25 = getelementptr inbounds %struct._xmlAutomata, ptr %25, i32 0, i32 11, !dbg !4384
  %26 = load i32, ptr %maxStates25, align 8, !dbg !4385, !tbaa !4329
  %div = sdiv i32 %26, 2, !dbg !4385
  store i32 %div, ptr %maxStates25, align 8, !dbg !4385, !tbaa !4329
  store i32 -1, ptr %retval, align 4, !dbg !4386
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4386

if.end26:                                         ; preds = %if.then14
  %27 = load ptr, ptr %tmp, align 8, !dbg !4387, !tbaa !1527
  %28 = load ptr, ptr %ctxt.addr, align 8, !dbg !4388, !tbaa !1527
  %states27 = getelementptr inbounds %struct._xmlAutomata, ptr %28, i32 0, i32 13, !dbg !4389
  store ptr %27, ptr %states27, align 8, !dbg !4390, !tbaa !4343
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4391
  br label %cleanup, !dbg !4391

cleanup:                                          ; preds = %if.end26, %if.then24
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !4391
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end28, !dbg !4392

if.end28:                                         ; preds = %cleanup.cont, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end10
  %29 = load ptr, ptr %ctxt.addr, align 8, !dbg !4393, !tbaa !1527
  %nbStates30 = getelementptr inbounds %struct._xmlAutomata, ptr %29, i32 0, i32 12, !dbg !4394
  %30 = load i32, ptr %nbStates30, align 4, !dbg !4394, !tbaa !4359
  %31 = load ptr, ptr %state.addr, align 8, !dbg !4395, !tbaa !1527
  %no = getelementptr inbounds %struct._xmlAutomataState, ptr %31, i32 0, i32 4, !dbg !4396
  store i32 %30, ptr %no, align 8, !dbg !4397, !tbaa !4067
  %32 = load ptr, ptr %state.addr, align 8, !dbg !4398, !tbaa !1527
  %33 = load ptr, ptr %ctxt.addr, align 8, !dbg !4399, !tbaa !1527
  %states31 = getelementptr inbounds %struct._xmlAutomata, ptr %33, i32 0, i32 13, !dbg !4400
  %34 = load ptr, ptr %states31, align 8, !dbg !4400, !tbaa !4343
  %35 = load ptr, ptr %ctxt.addr, align 8, !dbg !4401, !tbaa !1527
  %nbStates32 = getelementptr inbounds %struct._xmlAutomata, ptr %35, i32 0, i32 12, !dbg !4402
  %36 = load i32, ptr %nbStates32, align 4, !dbg !4403, !tbaa !4359
  %inc = add nsw i32 %36, 1, !dbg !4403
  store i32 %inc, ptr %nbStates32, align 4, !dbg !4403, !tbaa !4359
  %idxprom = sext i32 %36 to i64, !dbg !4399
  %arrayidx = getelementptr inbounds ptr, ptr %34, i64 %idxprom, !dbg !4399
  store ptr %32, ptr %arrayidx, align 8, !dbg !4404, !tbaa !1527
  store i32 0, ptr %retval, align 4, !dbg !4405
  br label %return, !dbg !4405

return:                                           ; preds = %if.end29, %cleanup, %if.then8, %if.then
  %37 = load i32, ptr %retval, align 4, !dbg !4406
  ret i32 %37, !dbg !4406

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAParseRegExp(ptr noundef %ctxt, i32 noundef %top) #0 !dbg !4407 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %top.addr = alloca i32, align 4
  %start = alloca ptr, align 8
  %end = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !4411, metadata !DIExpression()), !dbg !4415
  store i32 %top, ptr %top.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %top.addr, metadata !4412, metadata !DIExpression()), !dbg !4416
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #8, !dbg !4417
  tail call void @llvm.dbg.declare(metadata ptr %start, metadata !4413, metadata !DIExpression()), !dbg !4418
  call void @llvm.lifetime.start.p0(i64 8, ptr %end) #8, !dbg !4417
  tail call void @llvm.dbg.declare(metadata ptr %end, metadata !4414, metadata !DIExpression()), !dbg !4419
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !4420, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 6, !dbg !4421
  %1 = load ptr, ptr %state, align 8, !dbg !4421, !tbaa !4169
  store ptr %1, ptr %start, align 8, !dbg !4422, !tbaa !1527
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !4423, !tbaa !1527
  %end1 = getelementptr inbounds %struct._xmlAutomata, ptr %2, i32 0, i32 5, !dbg !4424
  store ptr null, ptr %end1, align 8, !dbg !4425, !tbaa !4163
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !4426, !tbaa !1527
  %call = call i32 @xmlFAParseBranch(ptr noundef %3, ptr noundef null), !dbg !4427
  %4 = load i32, ptr %top.addr, align 4, !dbg !4428, !tbaa !1767
  %tobool = icmp ne i32 %4, 0, !dbg !4428
  br i1 %tobool, label %if.then, label %if.end, !dbg !4430

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !4431, !tbaa !1527
  %state2 = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 6, !dbg !4433
  %6 = load ptr, ptr %state2, align 8, !dbg !4433, !tbaa !4169
  %type = getelementptr inbounds %struct._xmlAutomataState, ptr %6, i32 0, i32 0, !dbg !4434
  store i32 2, ptr %type, align 8, !dbg !4435, !tbaa !1984
  br label %if.end, !dbg !4436

if.end:                                           ; preds = %if.then, %entry
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !4437, !tbaa !1527
  %cur = getelementptr inbounds %struct._xmlAutomata, ptr %7, i32 0, i32 1, !dbg !4437
  %8 = load ptr, ptr %cur, align 8, !dbg !4437, !tbaa !4182
  %9 = load i8, ptr %8, align 1, !dbg !4437, !tbaa !2932
  %conv = zext i8 %9 to i32, !dbg !4437
  %cmp = icmp ne i32 %conv, 124, !dbg !4439
  br i1 %cmp, label %if.then4, label %if.end7, !dbg !4440

if.then4:                                         ; preds = %if.end
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !4441, !tbaa !1527
  %state5 = getelementptr inbounds %struct._xmlAutomata, ptr %10, i32 0, i32 6, !dbg !4443
  %11 = load ptr, ptr %state5, align 8, !dbg !4443, !tbaa !4169
  %12 = load ptr, ptr %ctxt.addr, align 8, !dbg !4444, !tbaa !1527
  %end6 = getelementptr inbounds %struct._xmlAutomata, ptr %12, i32 0, i32 5, !dbg !4445
  store ptr %11, ptr %end6, align 8, !dbg !4446, !tbaa !4163
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4447

if.end7:                                          ; preds = %if.end
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !4448, !tbaa !1527
  %state8 = getelementptr inbounds %struct._xmlAutomata, ptr %13, i32 0, i32 6, !dbg !4449
  %14 = load ptr, ptr %state8, align 8, !dbg !4449, !tbaa !4169
  store ptr %14, ptr %end, align 8, !dbg !4450, !tbaa !1527
  br label %while.cond, !dbg !4451

while.cond:                                       ; preds = %while.body, %if.end7
  %15 = load ptr, ptr %ctxt.addr, align 8, !dbg !4452, !tbaa !1527
  %cur9 = getelementptr inbounds %struct._xmlAutomata, ptr %15, i32 0, i32 1, !dbg !4452
  %16 = load ptr, ptr %cur9, align 8, !dbg !4452, !tbaa !4182
  %17 = load i8, ptr %16, align 1, !dbg !4452, !tbaa !2932
  %conv10 = zext i8 %17 to i32, !dbg !4452
  %cmp11 = icmp eq i32 %conv10, 124, !dbg !4453
  br i1 %cmp11, label %land.rhs, label %land.end, !dbg !4454

land.rhs:                                         ; preds = %while.cond
  %18 = load ptr, ptr %ctxt.addr, align 8, !dbg !4455, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %18, i32 0, i32 2, !dbg !4456
  %19 = load i32, ptr %error, align 8, !dbg !4456, !tbaa !1729
  %cmp13 = icmp eq i32 %19, 0, !dbg !4457
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %20 = phi i1 [ false, %while.cond ], [ %cmp13, %land.rhs ], !dbg !4458
  br i1 %20, label %while.body, label %while.end, !dbg !4451

while.body:                                       ; preds = %land.end
  %21 = load ptr, ptr %ctxt.addr, align 8, !dbg !4459, !tbaa !1527
  %cur15 = getelementptr inbounds %struct._xmlAutomata, ptr %21, i32 0, i32 1, !dbg !4459
  %22 = load ptr, ptr %cur15, align 8, !dbg !4459, !tbaa !4182
  %incdec.ptr = getelementptr inbounds i8, ptr %22, i32 1, !dbg !4459
  store ptr %incdec.ptr, ptr %cur15, align 8, !dbg !4459, !tbaa !4182
  %23 = load ptr, ptr %start, align 8, !dbg !4461, !tbaa !1527
  %24 = load ptr, ptr %ctxt.addr, align 8, !dbg !4462, !tbaa !1527
  %state16 = getelementptr inbounds %struct._xmlAutomata, ptr %24, i32 0, i32 6, !dbg !4463
  store ptr %23, ptr %state16, align 8, !dbg !4464, !tbaa !4169
  %25 = load ptr, ptr %ctxt.addr, align 8, !dbg !4465, !tbaa !1527
  %end17 = getelementptr inbounds %struct._xmlAutomata, ptr %25, i32 0, i32 5, !dbg !4466
  store ptr null, ptr %end17, align 8, !dbg !4467, !tbaa !4163
  %26 = load ptr, ptr %ctxt.addr, align 8, !dbg !4468, !tbaa !1527
  %27 = load ptr, ptr %end, align 8, !dbg !4469, !tbaa !1527
  %call18 = call i32 @xmlFAParseBranch(ptr noundef %26, ptr noundef %27), !dbg !4470
  br label %while.cond, !dbg !4451, !llvm.loop !4471

while.end:                                        ; preds = %land.end
  %28 = load i32, ptr %top.addr, align 4, !dbg !4473, !tbaa !1767
  %tobool19 = icmp ne i32 %28, 0, !dbg !4473
  br i1 %tobool19, label %if.end23, label %if.then20, !dbg !4475

if.then20:                                        ; preds = %while.end
  %29 = load ptr, ptr %end, align 8, !dbg !4476, !tbaa !1527
  %30 = load ptr, ptr %ctxt.addr, align 8, !dbg !4478, !tbaa !1527
  %state21 = getelementptr inbounds %struct._xmlAutomata, ptr %30, i32 0, i32 6, !dbg !4479
  store ptr %29, ptr %state21, align 8, !dbg !4480, !tbaa !4169
  %31 = load ptr, ptr %end, align 8, !dbg !4481, !tbaa !1527
  %32 = load ptr, ptr %ctxt.addr, align 8, !dbg !4482, !tbaa !1527
  %end22 = getelementptr inbounds %struct._xmlAutomata, ptr %32, i32 0, i32 5, !dbg !4483
  store ptr %31, ptr %end22, align 8, !dbg !4484, !tbaa !4163
  br label %if.end23, !dbg !4485

if.end23:                                         ; preds = %if.then20, %while.end
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4486
  br label %cleanup, !dbg !4486

cleanup:                                          ; preds = %if.end23, %if.then4
  call void @llvm.lifetime.end.p0(i64 8, ptr %end) #8, !dbg !4486
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #8, !dbg !4486
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !4486

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @xmlRegexpErrCompile(ptr noundef %ctxt, ptr noundef %extra) #0 !dbg !4487 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %extra.addr = alloca ptr, align 8
  %regexp = alloca ptr, align 8
  %idx = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !4489, metadata !DIExpression()), !dbg !4493
  store ptr %extra, ptr %extra.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %extra.addr, metadata !4490, metadata !DIExpression()), !dbg !4494
  call void @llvm.lifetime.start.p0(i64 8, ptr %regexp) #8, !dbg !4495
  tail call void @llvm.dbg.declare(metadata ptr %regexp, metadata !4491, metadata !DIExpression()), !dbg !4496
  store ptr null, ptr %regexp, align 8, !dbg !4496, !tbaa !1527
  call void @llvm.lifetime.start.p0(i64 4, ptr %idx) #8, !dbg !4497
  tail call void @llvm.dbg.declare(metadata ptr %idx, metadata !4492, metadata !DIExpression()), !dbg !4498
  store i32 0, ptr %idx, align 4, !dbg !4498, !tbaa !1767
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !4499, !tbaa !1527
  %cmp = icmp ne ptr %0, null, !dbg !4501
  br i1 %cmp, label %if.then, label %if.end, !dbg !4502

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !4503, !tbaa !1527
  %string = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 0, !dbg !4505
  %2 = load ptr, ptr %string, align 8, !dbg !4505, !tbaa !1723
  store ptr %2, ptr %regexp, align 8, !dbg !4506, !tbaa !1527
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !4507, !tbaa !1527
  %cur = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 1, !dbg !4508
  %4 = load ptr, ptr %cur, align 8, !dbg !4508, !tbaa !4182
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !4509, !tbaa !1527
  %string1 = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 0, !dbg !4510
  %6 = load ptr, ptr %string1, align 8, !dbg !4510, !tbaa !1723
  %sub.ptr.lhs.cast = ptrtoint ptr %4 to i64, !dbg !4511
  %sub.ptr.rhs.cast = ptrtoint ptr %6 to i64, !dbg !4511
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4511
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !4507
  store i32 %conv, ptr %idx, align 4, !dbg !4512, !tbaa !1767
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !4513, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %7, i32 0, i32 2, !dbg !4514
  store i32 1450, ptr %error, align 8, !dbg !4515, !tbaa !1729
  br label %if.end, !dbg !4516

if.end:                                           ; preds = %if.then, %entry
  %8 = load ptr, ptr %extra.addr, align 8, !dbg !4517, !tbaa !1527
  %9 = load ptr, ptr %regexp, align 8, !dbg !4518, !tbaa !1527
  %10 = load i32, ptr %idx, align 4, !dbg !4519, !tbaa !1767
  %11 = load ptr, ptr %extra.addr, align 8, !dbg !4520, !tbaa !1527
  call void (ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, i32, ptr, ptr, ptr, i32, i32, ptr, ...) @__xmlRaiseError(ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef 14, i32 noundef 1450, i32 noundef 3, ptr noundef null, i32 noundef 0, ptr noundef %8, ptr noundef %9, ptr noundef null, i32 noundef %10, i32 noundef 0, ptr noundef @.str.128, ptr noundef %11), !dbg !4521
  call void @llvm.lifetime.end.p0(i64 4, ptr %idx) #8, !dbg !4522
  call void @llvm.lifetime.end.p0(i64 8, ptr %regexp) #8, !dbg !4522
  ret void, !dbg !4522
}

; Function Attrs: nounwind uwtable
define internal void @xmlRegFreeParserCtxt(ptr noundef %ctxt) #0 !dbg !4523 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !4527, metadata !DIExpression()), !dbg !4529
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !4530
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4528, metadata !DIExpression()), !dbg !4531
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !4532, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !4534
  br i1 %cmp, label %if.then, label %if.end, !dbg !4535

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4536

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !4537, !tbaa !1527
  %string = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 0, !dbg !4539
  %2 = load ptr, ptr %string, align 8, !dbg !4539, !tbaa !1723
  %cmp1 = icmp ne ptr %2, null, !dbg !4540
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !4541

if.then2:                                         ; preds = %if.end
  %3 = load ptr, ptr @xmlFree, align 8, !dbg !4542, !tbaa !1527
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !4543, !tbaa !1527
  %string3 = getelementptr inbounds %struct._xmlAutomata, ptr %4, i32 0, i32 0, !dbg !4544
  %5 = load ptr, ptr %string3, align 8, !dbg !4544, !tbaa !1723
  call void %3(ptr noundef %5), !dbg !4542
  br label %if.end4, !dbg !4542

if.end4:                                          ; preds = %if.then2, %if.end
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !4545, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlAutomata, ptr %6, i32 0, i32 13, !dbg !4547
  %7 = load ptr, ptr %states, align 8, !dbg !4547, !tbaa !4343
  %cmp5 = icmp ne ptr %7, null, !dbg !4548
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !4549

if.then6:                                         ; preds = %if.end4
  store i32 0, ptr %i, align 4, !dbg !4550, !tbaa !1767
  br label %for.cond, !dbg !4553

for.cond:                                         ; preds = %for.inc, %if.then6
  %8 = load i32, ptr %i, align 4, !dbg !4554, !tbaa !1767
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !4556, !tbaa !1527
  %nbStates = getelementptr inbounds %struct._xmlAutomata, ptr %9, i32 0, i32 12, !dbg !4557
  %10 = load i32, ptr %nbStates, align 4, !dbg !4557, !tbaa !4359
  %cmp7 = icmp slt i32 %8, %10, !dbg !4558
  br i1 %cmp7, label %for.body, label %for.end, !dbg !4559

for.body:                                         ; preds = %for.cond
  %11 = load ptr, ptr %ctxt.addr, align 8, !dbg !4560, !tbaa !1527
  %states8 = getelementptr inbounds %struct._xmlAutomata, ptr %11, i32 0, i32 13, !dbg !4561
  %12 = load ptr, ptr %states8, align 8, !dbg !4561, !tbaa !4343
  %13 = load i32, ptr %i, align 4, !dbg !4562, !tbaa !1767
  %idxprom = sext i32 %13 to i64, !dbg !4560
  %arrayidx = getelementptr inbounds ptr, ptr %12, i64 %idxprom, !dbg !4560
  %14 = load ptr, ptr %arrayidx, align 8, !dbg !4560, !tbaa !1527
  call void @xmlRegFreeState(ptr noundef %14), !dbg !4563
  br label %for.inc, !dbg !4563

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !dbg !4564, !tbaa !1767
  %inc = add nsw i32 %15, 1, !dbg !4564
  store i32 %inc, ptr %i, align 4, !dbg !4564, !tbaa !1767
  br label %for.cond, !dbg !4565, !llvm.loop !4566

for.end:                                          ; preds = %for.cond
  %16 = load ptr, ptr @xmlFree, align 8, !dbg !4568, !tbaa !1527
  %17 = load ptr, ptr %ctxt.addr, align 8, !dbg !4569, !tbaa !1527
  %states9 = getelementptr inbounds %struct._xmlAutomata, ptr %17, i32 0, i32 13, !dbg !4570
  %18 = load ptr, ptr %states9, align 8, !dbg !4570, !tbaa !4343
  call void %16(ptr noundef %18), !dbg !4568
  br label %if.end10, !dbg !4571

if.end10:                                         ; preds = %for.end, %if.end4
  %19 = load ptr, ptr %ctxt.addr, align 8, !dbg !4572, !tbaa !1527
  %atoms = getelementptr inbounds %struct._xmlAutomata, ptr %19, i32 0, i32 10, !dbg !4574
  %20 = load ptr, ptr %atoms, align 8, !dbg !4574, !tbaa !4575
  %cmp11 = icmp ne ptr %20, null, !dbg !4576
  br i1 %cmp11, label %if.then12, label %if.end23, !dbg !4577

if.then12:                                        ; preds = %if.end10
  store i32 0, ptr %i, align 4, !dbg !4578, !tbaa !1767
  br label %for.cond13, !dbg !4581

for.cond13:                                       ; preds = %for.inc19, %if.then12
  %21 = load i32, ptr %i, align 4, !dbg !4582, !tbaa !1767
  %22 = load ptr, ptr %ctxt.addr, align 8, !dbg !4584, !tbaa !1527
  %nbAtoms = getelementptr inbounds %struct._xmlAutomata, ptr %22, i32 0, i32 9, !dbg !4585
  %23 = load i32, ptr %nbAtoms, align 4, !dbg !4585, !tbaa !4586
  %cmp14 = icmp slt i32 %21, %23, !dbg !4587
  br i1 %cmp14, label %for.body15, label %for.end21, !dbg !4588

for.body15:                                       ; preds = %for.cond13
  %24 = load ptr, ptr %ctxt.addr, align 8, !dbg !4589, !tbaa !1527
  %atoms16 = getelementptr inbounds %struct._xmlAutomata, ptr %24, i32 0, i32 10, !dbg !4590
  %25 = load ptr, ptr %atoms16, align 8, !dbg !4590, !tbaa !4575
  %26 = load i32, ptr %i, align 4, !dbg !4591, !tbaa !1767
  %idxprom17 = sext i32 %26 to i64, !dbg !4589
  %arrayidx18 = getelementptr inbounds ptr, ptr %25, i64 %idxprom17, !dbg !4589
  %27 = load ptr, ptr %arrayidx18, align 8, !dbg !4589, !tbaa !1527
  call void @xmlRegFreeAtom(ptr noundef %27), !dbg !4592
  br label %for.inc19, !dbg !4592

for.inc19:                                        ; preds = %for.body15
  %28 = load i32, ptr %i, align 4, !dbg !4593, !tbaa !1767
  %inc20 = add nsw i32 %28, 1, !dbg !4593
  store i32 %inc20, ptr %i, align 4, !dbg !4593, !tbaa !1767
  br label %for.cond13, !dbg !4594, !llvm.loop !4595

for.end21:                                        ; preds = %for.cond13
  %29 = load ptr, ptr @xmlFree, align 8, !dbg !4597, !tbaa !1527
  %30 = load ptr, ptr %ctxt.addr, align 8, !dbg !4598, !tbaa !1527
  %atoms22 = getelementptr inbounds %struct._xmlAutomata, ptr %30, i32 0, i32 10, !dbg !4599
  %31 = load ptr, ptr %atoms22, align 8, !dbg !4599, !tbaa !4575
  call void %29(ptr noundef %31), !dbg !4597
  br label %if.end23, !dbg !4600

if.end23:                                         ; preds = %for.end21, %if.end10
  %32 = load ptr, ptr %ctxt.addr, align 8, !dbg !4601, !tbaa !1527
  %counters = getelementptr inbounds %struct._xmlAutomata, ptr %32, i32 0, i32 16, !dbg !4603
  %33 = load ptr, ptr %counters, align 8, !dbg !4603, !tbaa !4604
  %cmp24 = icmp ne ptr %33, null, !dbg !4605
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !4606

if.then25:                                        ; preds = %if.end23
  %34 = load ptr, ptr @xmlFree, align 8, !dbg !4607, !tbaa !1527
  %35 = load ptr, ptr %ctxt.addr, align 8, !dbg !4608, !tbaa !1527
  %counters26 = getelementptr inbounds %struct._xmlAutomata, ptr %35, i32 0, i32 16, !dbg !4609
  %36 = load ptr, ptr %counters26, align 8, !dbg !4609, !tbaa !4604
  call void %34(ptr noundef %36), !dbg !4607
  br label %if.end27, !dbg !4607

if.end27:                                         ; preds = %if.then25, %if.end23
  %37 = load ptr, ptr @xmlFree, align 8, !dbg !4610, !tbaa !1527
  %38 = load ptr, ptr %ctxt.addr, align 8, !dbg !4611, !tbaa !1527
  call void %37(ptr noundef %38), !dbg !4610
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4612
  br label %cleanup, !dbg !4612

cleanup:                                          ; preds = %if.end27, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !4612
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !4612

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAEliminateEpsilonTransitions(ptr noundef %ctxt) #0 !dbg !4613 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %statenr = alloca i32, align 4
  %transnr = alloca i32, align 4
  %state = alloca ptr, align 8
  %has_epsilon = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %newto = alloca i32, align 4
  %trans90 = alloca ptr, align 8
  %target = alloca ptr, align 8
  %newto154 = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !4615, metadata !DIExpression()), !dbg !4649
  call void @llvm.lifetime.start.p0(i64 4, ptr %statenr) #8, !dbg !4650
  tail call void @llvm.dbg.declare(metadata ptr %statenr, metadata !4616, metadata !DIExpression()), !dbg !4651
  call void @llvm.lifetime.start.p0(i64 4, ptr %transnr) #8, !dbg !4650
  tail call void @llvm.dbg.declare(metadata ptr %transnr, metadata !4617, metadata !DIExpression()), !dbg !4652
  call void @llvm.lifetime.start.p0(i64 8, ptr %state) #8, !dbg !4653
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !4618, metadata !DIExpression()), !dbg !4654
  call void @llvm.lifetime.start.p0(i64 4, ptr %has_epsilon) #8, !dbg !4655
  tail call void @llvm.dbg.declare(metadata ptr %has_epsilon, metadata !4619, metadata !DIExpression()), !dbg !4656
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !4657, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 13, !dbg !4659
  %1 = load ptr, ptr %states, align 8, !dbg !4659, !tbaa !4343
  %cmp = icmp eq ptr %1, null, !dbg !4660
  br i1 %cmp, label %if.then, label %if.end, !dbg !4661

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup221, !dbg !4662

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !4663, !tbaa !1527
  call void @xmlFAEliminateSimpleEpsilonTransitions(ptr noundef %2), !dbg !4664
  store i32 0, ptr %statenr, align 4, !dbg !4665, !tbaa !1767
  br label %for.cond, !dbg !4667

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, ptr %statenr, align 4, !dbg !4668, !tbaa !1767
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !4670, !tbaa !1527
  %nbStates = getelementptr inbounds %struct._xmlAutomata, ptr %4, i32 0, i32 12, !dbg !4671
  %5 = load i32, ptr %nbStates, align 4, !dbg !4671, !tbaa !4359
  %cmp1 = icmp slt i32 %3, %5, !dbg !4672
  br i1 %cmp1, label %for.body, label %for.end, !dbg !4673

for.body:                                         ; preds = %for.cond
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !4674, !tbaa !1527
  %states2 = getelementptr inbounds %struct._xmlAutomata, ptr %6, i32 0, i32 13, !dbg !4676
  %7 = load ptr, ptr %states2, align 8, !dbg !4676, !tbaa !4343
  %8 = load i32, ptr %statenr, align 4, !dbg !4677, !tbaa !1767
  %idxprom = sext i32 %8 to i64, !dbg !4674
  %arrayidx = getelementptr inbounds ptr, ptr %7, i64 %idxprom, !dbg !4674
  %9 = load ptr, ptr %arrayidx, align 8, !dbg !4674, !tbaa !1527
  store ptr %9, ptr %state, align 8, !dbg !4678, !tbaa !1527
  %10 = load ptr, ptr %state, align 8, !dbg !4679, !tbaa !1527
  %cmp3 = icmp ne ptr %10, null, !dbg !4681
  br i1 %cmp3, label %land.lhs.true, label %if.end9, !dbg !4682

land.lhs.true:                                    ; preds = %for.body
  %11 = load ptr, ptr %state, align 8, !dbg !4683, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlAutomataState, ptr %11, i32 0, i32 0, !dbg !4684
  %12 = load i32, ptr %type, align 8, !dbg !4684, !tbaa !1984
  %cmp4 = icmp eq i32 %12, 5, !dbg !4685
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !4686

if.then5:                                         ; preds = %land.lhs.true
  %13 = load ptr, ptr %state, align 8, !dbg !4687, !tbaa !1527
  call void @xmlRegFreeState(ptr noundef %13), !dbg !4689
  %14 = load ptr, ptr %ctxt.addr, align 8, !dbg !4690, !tbaa !1527
  %states6 = getelementptr inbounds %struct._xmlAutomata, ptr %14, i32 0, i32 13, !dbg !4691
  %15 = load ptr, ptr %states6, align 8, !dbg !4691, !tbaa !4343
  %16 = load i32, ptr %statenr, align 4, !dbg !4692, !tbaa !1767
  %idxprom7 = sext i32 %16 to i64, !dbg !4690
  %arrayidx8 = getelementptr inbounds ptr, ptr %15, i64 %idxprom7, !dbg !4690
  store ptr null, ptr %arrayidx8, align 8, !dbg !4693, !tbaa !1527
  br label %if.end9, !dbg !4694

if.end9:                                          ; preds = %if.then5, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4695

for.inc:                                          ; preds = %if.end9
  %17 = load i32, ptr %statenr, align 4, !dbg !4696, !tbaa !1767
  %inc = add nsw i32 %17, 1, !dbg !4696
  store i32 %inc, ptr %statenr, align 4, !dbg !4696, !tbaa !1767
  br label %for.cond, !dbg !4697, !llvm.loop !4698

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %has_epsilon, align 4, !dbg !4700, !tbaa !1767
  %18 = load ptr, ptr %ctxt.addr, align 8, !dbg !4701, !tbaa !1527
  %nbStates10 = getelementptr inbounds %struct._xmlAutomata, ptr %18, i32 0, i32 12, !dbg !4702
  %19 = load i32, ptr %nbStates10, align 4, !dbg !4702, !tbaa !4359
  %sub = sub nsw i32 %19, 1, !dbg !4703
  store i32 %sub, ptr %statenr, align 4, !dbg !4704, !tbaa !1767
  br label %for.cond11, !dbg !4705

for.cond11:                                       ; preds = %for.inc73, %for.end
  %20 = load i32, ptr %statenr, align 4, !dbg !4706, !tbaa !1767
  %cmp12 = icmp sge i32 %20, 0, !dbg !4707
  br i1 %cmp12, label %for.body13, label %for.end74, !dbg !4708

for.body13:                                       ; preds = %for.cond11
  %21 = load ptr, ptr %ctxt.addr, align 8, !dbg !4709, !tbaa !1527
  %states14 = getelementptr inbounds %struct._xmlAutomata, ptr %21, i32 0, i32 13, !dbg !4710
  %22 = load ptr, ptr %states14, align 8, !dbg !4710, !tbaa !4343
  %23 = load i32, ptr %statenr, align 4, !dbg !4711, !tbaa !1767
  %idxprom15 = sext i32 %23 to i64, !dbg !4709
  %arrayidx16 = getelementptr inbounds ptr, ptr %22, i64 %idxprom15, !dbg !4709
  %24 = load ptr, ptr %arrayidx16, align 8, !dbg !4709, !tbaa !1527
  store ptr %24, ptr %state, align 8, !dbg !4712, !tbaa !1527
  %25 = load ptr, ptr %state, align 8, !dbg !4713, !tbaa !1527
  %cmp17 = icmp eq ptr %25, null, !dbg !4715
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !4716

if.then18:                                        ; preds = %for.body13
  br label %for.inc73, !dbg !4717

if.end19:                                         ; preds = %for.body13
  %26 = load ptr, ptr %state, align 8, !dbg !4718, !tbaa !1527
  %nbTrans = getelementptr inbounds %struct._xmlAutomataState, ptr %26, i32 0, i32 6, !dbg !4720
  %27 = load i32, ptr %nbTrans, align 8, !dbg !4720, !tbaa !2052
  %cmp20 = icmp eq i32 %27, 0, !dbg !4721
  br i1 %cmp20, label %land.lhs.true21, label %if.end26, !dbg !4722

land.lhs.true21:                                  ; preds = %if.end19
  %28 = load ptr, ptr %state, align 8, !dbg !4723, !tbaa !1527
  %type22 = getelementptr inbounds %struct._xmlAutomataState, ptr %28, i32 0, i32 0, !dbg !4724
  %29 = load i32, ptr %type22, align 8, !dbg !4724, !tbaa !1984
  %cmp23 = icmp ne i32 %29, 2, !dbg !4725
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !4726

if.then24:                                        ; preds = %land.lhs.true21
  %30 = load ptr, ptr %state, align 8, !dbg !4727, !tbaa !1527
  %type25 = getelementptr inbounds %struct._xmlAutomataState, ptr %30, i32 0, i32 0, !dbg !4729
  store i32 4, ptr %type25, align 8, !dbg !4730, !tbaa !1984
  br label %if.end26, !dbg !4731

if.end26:                                         ; preds = %if.then24, %land.lhs.true21, %if.end19
  store i32 0, ptr %transnr, align 4, !dbg !4732, !tbaa !1767
  br label %for.cond27, !dbg !4733

for.cond27:                                       ; preds = %for.inc70, %if.end26
  %31 = load i32, ptr %transnr, align 4, !dbg !4734, !tbaa !1767
  %32 = load ptr, ptr %state, align 8, !dbg !4735, !tbaa !1527
  %nbTrans28 = getelementptr inbounds %struct._xmlAutomataState, ptr %32, i32 0, i32 6, !dbg !4736
  %33 = load i32, ptr %nbTrans28, align 8, !dbg !4736, !tbaa !2052
  %cmp29 = icmp slt i32 %31, %33, !dbg !4737
  br i1 %cmp29, label %for.body30, label %for.end72, !dbg !4738

for.body30:                                       ; preds = %for.cond27
  %34 = load ptr, ptr %state, align 8, !dbg !4739, !tbaa !1527
  %trans = getelementptr inbounds %struct._xmlAutomataState, ptr %34, i32 0, i32 7, !dbg !4740
  %35 = load ptr, ptr %trans, align 8, !dbg !4740, !tbaa !2058
  %36 = load i32, ptr %transnr, align 4, !dbg !4741, !tbaa !1767
  %idxprom31 = sext i32 %36 to i64, !dbg !4739
  %arrayidx32 = getelementptr inbounds %struct._xmlRegTrans, ptr %35, i64 %idxprom31, !dbg !4739
  %atom = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx32, i32 0, i32 0, !dbg !4742
  %37 = load ptr, ptr %atom, align 8, !dbg !4742, !tbaa !2072
  %cmp33 = icmp eq ptr %37, null, !dbg !4743
  br i1 %cmp33, label %land.lhs.true34, label %if.end69, !dbg !4744

land.lhs.true34:                                  ; preds = %for.body30
  %38 = load ptr, ptr %state, align 8, !dbg !4745, !tbaa !1527
  %trans35 = getelementptr inbounds %struct._xmlAutomataState, ptr %38, i32 0, i32 7, !dbg !4746
  %39 = load ptr, ptr %trans35, align 8, !dbg !4746, !tbaa !2058
  %40 = load i32, ptr %transnr, align 4, !dbg !4747, !tbaa !1767
  %idxprom36 = sext i32 %40 to i64, !dbg !4745
  %arrayidx37 = getelementptr inbounds %struct._xmlRegTrans, ptr %39, i64 %idxprom36, !dbg !4745
  %to = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx37, i32 0, i32 1, !dbg !4748
  %41 = load i32, ptr %to, align 8, !dbg !4748, !tbaa !2065
  %cmp38 = icmp sge i32 %41, 0, !dbg !4749
  br i1 %cmp38, label %if.then39, label %if.end69, !dbg !4750

if.then39:                                        ; preds = %land.lhs.true34
  %42 = load ptr, ptr %state, align 8, !dbg !4751, !tbaa !1527
  %trans40 = getelementptr inbounds %struct._xmlAutomataState, ptr %42, i32 0, i32 7, !dbg !4752
  %43 = load ptr, ptr %trans40, align 8, !dbg !4752, !tbaa !2058
  %44 = load i32, ptr %transnr, align 4, !dbg !4753, !tbaa !1767
  %idxprom41 = sext i32 %44 to i64, !dbg !4751
  %arrayidx42 = getelementptr inbounds %struct._xmlRegTrans, ptr %43, i64 %idxprom41, !dbg !4751
  %to43 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx42, i32 0, i32 1, !dbg !4754
  %45 = load i32, ptr %to43, align 8, !dbg !4754, !tbaa !2065
  %46 = load i32, ptr %statenr, align 4, !dbg !4755, !tbaa !1767
  %cmp44 = icmp eq i32 %45, %46, !dbg !4756
  br i1 %cmp44, label %if.then45, label %if.else, !dbg !4757

if.then45:                                        ; preds = %if.then39
  %47 = load ptr, ptr %state, align 8, !dbg !4758, !tbaa !1527
  %trans46 = getelementptr inbounds %struct._xmlAutomataState, ptr %47, i32 0, i32 7, !dbg !4760
  %48 = load ptr, ptr %trans46, align 8, !dbg !4760, !tbaa !2058
  %49 = load i32, ptr %transnr, align 4, !dbg !4761, !tbaa !1767
  %idxprom47 = sext i32 %49 to i64, !dbg !4758
  %arrayidx48 = getelementptr inbounds %struct._xmlRegTrans, ptr %48, i64 %idxprom47, !dbg !4758
  %to49 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx48, i32 0, i32 1, !dbg !4762
  store i32 -1, ptr %to49, align 8, !dbg !4763, !tbaa !2065
  br label %if.end68, !dbg !4764

if.else:                                          ; preds = %if.then39
  %50 = load ptr, ptr %state, align 8, !dbg !4765, !tbaa !1527
  %trans50 = getelementptr inbounds %struct._xmlAutomataState, ptr %50, i32 0, i32 7, !dbg !4766
  %51 = load ptr, ptr %trans50, align 8, !dbg !4766, !tbaa !2058
  %52 = load i32, ptr %transnr, align 4, !dbg !4767, !tbaa !1767
  %idxprom51 = sext i32 %52 to i64, !dbg !4765
  %arrayidx52 = getelementptr inbounds %struct._xmlRegTrans, ptr %51, i64 %idxprom51, !dbg !4765
  %count = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx52, i32 0, i32 3, !dbg !4768
  %53 = load i32, ptr %count, align 8, !dbg !4768, !tbaa !2077
  %cmp53 = icmp slt i32 %53, 0, !dbg !4769
  br i1 %cmp53, label %if.then54, label %if.end67, !dbg !4770

if.then54:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 4, ptr %newto) #8, !dbg !4771
  tail call void @llvm.dbg.declare(metadata ptr %newto, metadata !4620, metadata !DIExpression()), !dbg !4772
  %54 = load ptr, ptr %state, align 8, !dbg !4773, !tbaa !1527
  %trans55 = getelementptr inbounds %struct._xmlAutomataState, ptr %54, i32 0, i32 7, !dbg !4774
  %55 = load ptr, ptr %trans55, align 8, !dbg !4774, !tbaa !2058
  %56 = load i32, ptr %transnr, align 4, !dbg !4775, !tbaa !1767
  %idxprom56 = sext i32 %56 to i64, !dbg !4773
  %arrayidx57 = getelementptr inbounds %struct._xmlRegTrans, ptr %55, i64 %idxprom56, !dbg !4773
  %to58 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx57, i32 0, i32 1, !dbg !4776
  %57 = load i32, ptr %to58, align 8, !dbg !4776, !tbaa !2065
  store i32 %57, ptr %newto, align 4, !dbg !4772, !tbaa !1767
  store i32 1, ptr %has_epsilon, align 4, !dbg !4777, !tbaa !1767
  %58 = load ptr, ptr %state, align 8, !dbg !4778, !tbaa !1527
  %trans59 = getelementptr inbounds %struct._xmlAutomataState, ptr %58, i32 0, i32 7, !dbg !4779
  %59 = load ptr, ptr %trans59, align 8, !dbg !4779, !tbaa !2058
  %60 = load i32, ptr %transnr, align 4, !dbg !4780, !tbaa !1767
  %idxprom60 = sext i32 %60 to i64, !dbg !4778
  %arrayidx61 = getelementptr inbounds %struct._xmlRegTrans, ptr %59, i64 %idxprom60, !dbg !4778
  %to62 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx61, i32 0, i32 1, !dbg !4781
  store i32 -2, ptr %to62, align 8, !dbg !4782, !tbaa !2065
  %61 = load ptr, ptr %state, align 8, !dbg !4783, !tbaa !1527
  %mark = getelementptr inbounds %struct._xmlAutomataState, ptr %61, i32 0, i32 1, !dbg !4784
  store i32 1, ptr %mark, align 4, !dbg !4785, !tbaa !4306
  %62 = load ptr, ptr %ctxt.addr, align 8, !dbg !4786, !tbaa !1527
  %63 = load i32, ptr %statenr, align 4, !dbg !4787, !tbaa !1767
  %64 = load i32, ptr %newto, align 4, !dbg !4788, !tbaa !1767
  %65 = load ptr, ptr %state, align 8, !dbg !4789, !tbaa !1527
  %trans63 = getelementptr inbounds %struct._xmlAutomataState, ptr %65, i32 0, i32 7, !dbg !4790
  %66 = load ptr, ptr %trans63, align 8, !dbg !4790, !tbaa !2058
  %67 = load i32, ptr %transnr, align 4, !dbg !4791, !tbaa !1767
  %idxprom64 = sext i32 %67 to i64, !dbg !4789
  %arrayidx65 = getelementptr inbounds %struct._xmlRegTrans, ptr %66, i64 %idxprom64, !dbg !4789
  %counter = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx65, i32 0, i32 2, !dbg !4792
  %68 = load i32, ptr %counter, align 4, !dbg !4792, !tbaa !2123
  call void @xmlFAReduceEpsilonTransitions(ptr noundef %62, i32 noundef %63, i32 noundef %64, i32 noundef %68), !dbg !4793
  %69 = load ptr, ptr %state, align 8, !dbg !4794, !tbaa !1527
  %mark66 = getelementptr inbounds %struct._xmlAutomataState, ptr %69, i32 0, i32 1, !dbg !4795
  store i32 0, ptr %mark66, align 4, !dbg !4796, !tbaa !4306
  call void @llvm.lifetime.end.p0(i64 4, ptr %newto) #8, !dbg !4797
  br label %if.end67, !dbg !4798

if.end67:                                         ; preds = %if.then54, %if.else
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then45
  br label %if.end69, !dbg !4799

if.end69:                                         ; preds = %if.end68, %land.lhs.true34, %for.body30
  br label %for.inc70, !dbg !4800

for.inc70:                                        ; preds = %if.end69
  %70 = load i32, ptr %transnr, align 4, !dbg !4801, !tbaa !1767
  %inc71 = add nsw i32 %70, 1, !dbg !4801
  store i32 %inc71, ptr %transnr, align 4, !dbg !4801, !tbaa !1767
  br label %for.cond27, !dbg !4802, !llvm.loop !4803

for.end72:                                        ; preds = %for.cond27
  br label %for.inc73, !dbg !4805

for.inc73:                                        ; preds = %for.end72, %if.then18
  %71 = load i32, ptr %statenr, align 4, !dbg !4806, !tbaa !1767
  %dec = add nsw i32 %71, -1, !dbg !4806
  store i32 %dec, ptr %statenr, align 4, !dbg !4806, !tbaa !1767
  br label %for.cond11, !dbg !4807, !llvm.loop !4808

for.end74:                                        ; preds = %for.cond11
  %72 = load i32, ptr %has_epsilon, align 4, !dbg !4810, !tbaa !1767
  %tobool = icmp ne i32 %72, 0, !dbg !4810
  br i1 %tobool, label %if.then75, label %if.end111, !dbg !4811

if.then75:                                        ; preds = %for.end74
  store i32 0, ptr %statenr, align 4, !dbg !4812, !tbaa !1767
  br label %for.cond76, !dbg !4813

for.cond76:                                       ; preds = %for.inc108, %if.then75
  %73 = load i32, ptr %statenr, align 4, !dbg !4814, !tbaa !1767
  %74 = load ptr, ptr %ctxt.addr, align 8, !dbg !4815, !tbaa !1527
  %nbStates77 = getelementptr inbounds %struct._xmlAutomata, ptr %74, i32 0, i32 12, !dbg !4816
  %75 = load i32, ptr %nbStates77, align 4, !dbg !4816, !tbaa !4359
  %cmp78 = icmp slt i32 %73, %75, !dbg !4817
  br i1 %cmp78, label %for.body79, label %for.end110, !dbg !4818

for.body79:                                       ; preds = %for.cond76
  %76 = load ptr, ptr %ctxt.addr, align 8, !dbg !4819, !tbaa !1527
  %states80 = getelementptr inbounds %struct._xmlAutomata, ptr %76, i32 0, i32 13, !dbg !4820
  %77 = load ptr, ptr %states80, align 8, !dbg !4820, !tbaa !4343
  %78 = load i32, ptr %statenr, align 4, !dbg !4821, !tbaa !1767
  %idxprom81 = sext i32 %78 to i64, !dbg !4819
  %arrayidx82 = getelementptr inbounds ptr, ptr %77, i64 %idxprom81, !dbg !4819
  %79 = load ptr, ptr %arrayidx82, align 8, !dbg !4819, !tbaa !1527
  store ptr %79, ptr %state, align 8, !dbg !4822, !tbaa !1527
  %80 = load ptr, ptr %state, align 8, !dbg !4823, !tbaa !1527
  %cmp83 = icmp eq ptr %80, null, !dbg !4825
  br i1 %cmp83, label %if.then84, label %if.end85, !dbg !4826

if.then84:                                        ; preds = %for.body79
  br label %for.inc108, !dbg !4827

if.end85:                                         ; preds = %for.body79
  store i32 0, ptr %transnr, align 4, !dbg !4828, !tbaa !1767
  br label %for.cond86, !dbg !4829

for.cond86:                                       ; preds = %for.inc105, %if.end85
  %81 = load i32, ptr %transnr, align 4, !dbg !4830, !tbaa !1767
  %82 = load ptr, ptr %state, align 8, !dbg !4831, !tbaa !1527
  %nbTrans87 = getelementptr inbounds %struct._xmlAutomataState, ptr %82, i32 0, i32 6, !dbg !4832
  %83 = load i32, ptr %nbTrans87, align 8, !dbg !4832, !tbaa !2052
  %cmp88 = icmp slt i32 %81, %83, !dbg !4833
  br i1 %cmp88, label %for.body89, label %for.end107, !dbg !4834

for.body89:                                       ; preds = %for.cond86
  call void @llvm.lifetime.start.p0(i64 8, ptr %trans90) #8, !dbg !4835
  tail call void @llvm.dbg.declare(metadata ptr %trans90, metadata !4632, metadata !DIExpression()), !dbg !4836
  %84 = load ptr, ptr %state, align 8, !dbg !4837, !tbaa !1527
  %trans91 = getelementptr inbounds %struct._xmlAutomataState, ptr %84, i32 0, i32 7, !dbg !4838
  %85 = load ptr, ptr %trans91, align 8, !dbg !4838, !tbaa !2058
  %86 = load i32, ptr %transnr, align 4, !dbg !4839, !tbaa !1767
  %idxprom92 = sext i32 %86 to i64, !dbg !4837
  %arrayidx93 = getelementptr inbounds %struct._xmlRegTrans, ptr %85, i64 %idxprom92, !dbg !4837
  store ptr %arrayidx93, ptr %trans90, align 8, !dbg !4836, !tbaa !1527
  %87 = load ptr, ptr %trans90, align 8, !dbg !4840, !tbaa !1527
  %atom94 = getelementptr inbounds %struct._xmlRegTrans, ptr %87, i32 0, i32 0, !dbg !4842
  %88 = load ptr, ptr %atom94, align 8, !dbg !4842, !tbaa !2072
  %cmp95 = icmp eq ptr %88, null, !dbg !4843
  br i1 %cmp95, label %land.lhs.true96, label %if.end104, !dbg !4844

land.lhs.true96:                                  ; preds = %for.body89
  %89 = load ptr, ptr %trans90, align 8, !dbg !4845, !tbaa !1527
  %count97 = getelementptr inbounds %struct._xmlRegTrans, ptr %89, i32 0, i32 3, !dbg !4846
  %90 = load i32, ptr %count97, align 8, !dbg !4846, !tbaa !2077
  %cmp98 = icmp slt i32 %90, 0, !dbg !4847
  br i1 %cmp98, label %land.lhs.true99, label %if.end104, !dbg !4848

land.lhs.true99:                                  ; preds = %land.lhs.true96
  %91 = load ptr, ptr %trans90, align 8, !dbg !4849, !tbaa !1527
  %to100 = getelementptr inbounds %struct._xmlRegTrans, ptr %91, i32 0, i32 1, !dbg !4850
  %92 = load i32, ptr %to100, align 8, !dbg !4850, !tbaa !2065
  %cmp101 = icmp sge i32 %92, 0, !dbg !4851
  br i1 %cmp101, label %if.then102, label %if.end104, !dbg !4852

if.then102:                                       ; preds = %land.lhs.true99
  %93 = load ptr, ptr %trans90, align 8, !dbg !4853, !tbaa !1527
  %to103 = getelementptr inbounds %struct._xmlRegTrans, ptr %93, i32 0, i32 1, !dbg !4855
  store i32 -1, ptr %to103, align 8, !dbg !4856, !tbaa !2065
  br label %if.end104, !dbg !4857

if.end104:                                        ; preds = %if.then102, %land.lhs.true99, %land.lhs.true96, %for.body89
  call void @llvm.lifetime.end.p0(i64 8, ptr %trans90) #8, !dbg !4858
  br label %for.inc105, !dbg !4859

for.inc105:                                       ; preds = %if.end104
  %94 = load i32, ptr %transnr, align 4, !dbg !4860, !tbaa !1767
  %inc106 = add nsw i32 %94, 1, !dbg !4860
  store i32 %inc106, ptr %transnr, align 4, !dbg !4860, !tbaa !1767
  br label %for.cond86, !dbg !4861, !llvm.loop !4862

for.end107:                                       ; preds = %for.cond86
  br label %for.inc108, !dbg !4864

for.inc108:                                       ; preds = %for.end107, %if.then84
  %95 = load i32, ptr %statenr, align 4, !dbg !4865, !tbaa !1767
  %inc109 = add nsw i32 %95, 1, !dbg !4865
  store i32 %inc109, ptr %statenr, align 4, !dbg !4865, !tbaa !1767
  br label %for.cond76, !dbg !4866, !llvm.loop !4867

for.end110:                                       ; preds = %for.cond76
  br label %if.end111, !dbg !4869

if.end111:                                        ; preds = %for.end110, %for.end74
  store i32 0, ptr %statenr, align 4, !dbg !4870, !tbaa !1767
  br label %for.cond112, !dbg !4872

for.cond112:                                      ; preds = %for.inc122, %if.end111
  %96 = load i32, ptr %statenr, align 4, !dbg !4873, !tbaa !1767
  %97 = load ptr, ptr %ctxt.addr, align 8, !dbg !4875, !tbaa !1527
  %nbStates113 = getelementptr inbounds %struct._xmlAutomata, ptr %97, i32 0, i32 12, !dbg !4876
  %98 = load i32, ptr %nbStates113, align 4, !dbg !4876, !tbaa !4359
  %cmp114 = icmp slt i32 %96, %98, !dbg !4877
  br i1 %cmp114, label %for.body115, label %for.end124, !dbg !4878

for.body115:                                      ; preds = %for.cond112
  %99 = load ptr, ptr %ctxt.addr, align 8, !dbg !4879, !tbaa !1527
  %states116 = getelementptr inbounds %struct._xmlAutomata, ptr %99, i32 0, i32 13, !dbg !4881
  %100 = load ptr, ptr %states116, align 8, !dbg !4881, !tbaa !4343
  %101 = load i32, ptr %statenr, align 4, !dbg !4882, !tbaa !1767
  %idxprom117 = sext i32 %101 to i64, !dbg !4879
  %arrayidx118 = getelementptr inbounds ptr, ptr %100, i64 %idxprom117, !dbg !4879
  %102 = load ptr, ptr %arrayidx118, align 8, !dbg !4879, !tbaa !1527
  store ptr %102, ptr %state, align 8, !dbg !4883, !tbaa !1527
  %103 = load ptr, ptr %state, align 8, !dbg !4884, !tbaa !1527
  %cmp119 = icmp ne ptr %103, null, !dbg !4886
  br i1 %cmp119, label %if.then120, label %if.end121, !dbg !4887

if.then120:                                       ; preds = %for.body115
  %104 = load ptr, ptr %state, align 8, !dbg !4888, !tbaa !1527
  %reached = getelementptr inbounds %struct._xmlAutomataState, ptr %104, i32 0, i32 3, !dbg !4889
  store i32 0, ptr %reached, align 4, !dbg !4890, !tbaa !4891
  br label %if.end121, !dbg !4888

if.end121:                                        ; preds = %if.then120, %for.body115
  br label %for.inc122, !dbg !4892

for.inc122:                                       ; preds = %if.end121
  %105 = load i32, ptr %statenr, align 4, !dbg !4893, !tbaa !1767
  %inc123 = add nsw i32 %105, 1, !dbg !4893
  store i32 %inc123, ptr %statenr, align 4, !dbg !4893, !tbaa !1767
  br label %for.cond112, !dbg !4894, !llvm.loop !4895

for.end124:                                       ; preds = %for.cond112
  %106 = load ptr, ptr %ctxt.addr, align 8, !dbg !4897, !tbaa !1527
  %states125 = getelementptr inbounds %struct._xmlAutomata, ptr %106, i32 0, i32 13, !dbg !4898
  %107 = load ptr, ptr %states125, align 8, !dbg !4898, !tbaa !4343
  %arrayidx126 = getelementptr inbounds ptr, ptr %107, i64 0, !dbg !4897
  %108 = load ptr, ptr %arrayidx126, align 8, !dbg !4897, !tbaa !1527
  store ptr %108, ptr %state, align 8, !dbg !4899, !tbaa !1527
  %109 = load ptr, ptr %state, align 8, !dbg !4900, !tbaa !1527
  %cmp127 = icmp ne ptr %109, null, !dbg !4902
  br i1 %cmp127, label %if.then128, label %if.end130, !dbg !4903

if.then128:                                       ; preds = %for.end124
  %110 = load ptr, ptr %state, align 8, !dbg !4904, !tbaa !1527
  %reached129 = getelementptr inbounds %struct._xmlAutomataState, ptr %110, i32 0, i32 3, !dbg !4905
  store i32 1, ptr %reached129, align 4, !dbg !4906, !tbaa !4891
  br label %if.end130, !dbg !4904

if.end130:                                        ; preds = %if.then128, %for.end124
  br label %while.cond, !dbg !4907

while.cond:                                       ; preds = %if.end201, %if.end130
  %111 = load ptr, ptr %state, align 8, !dbg !4908, !tbaa !1527
  %cmp131 = icmp ne ptr %111, null, !dbg !4909
  br i1 %cmp131, label %while.body, label %while.end, !dbg !4907

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %target) #8, !dbg !4910
  tail call void @llvm.dbg.declare(metadata ptr %target, metadata !4641, metadata !DIExpression()), !dbg !4911
  store ptr null, ptr %target, align 8, !dbg !4911, !tbaa !1527
  %112 = load ptr, ptr %state, align 8, !dbg !4912, !tbaa !1527
  %reached132 = getelementptr inbounds %struct._xmlAutomataState, ptr %112, i32 0, i32 3, !dbg !4913
  store i32 2, ptr %reached132, align 4, !dbg !4914, !tbaa !4891
  store i32 0, ptr %transnr, align 4, !dbg !4915, !tbaa !1767
  br label %for.cond133, !dbg !4916

for.cond133:                                      ; preds = %for.inc180, %while.body
  %113 = load i32, ptr %transnr, align 4, !dbg !4917, !tbaa !1767
  %114 = load ptr, ptr %state, align 8, !dbg !4918, !tbaa !1527
  %nbTrans134 = getelementptr inbounds %struct._xmlAutomataState, ptr %114, i32 0, i32 6, !dbg !4919
  %115 = load i32, ptr %nbTrans134, align 8, !dbg !4919, !tbaa !2052
  %cmp135 = icmp slt i32 %113, %115, !dbg !4920
  br i1 %cmp135, label %for.body136, label %for.end182, !dbg !4921

for.body136:                                      ; preds = %for.cond133
  %116 = load ptr, ptr %state, align 8, !dbg !4922, !tbaa !1527
  %trans137 = getelementptr inbounds %struct._xmlAutomataState, ptr %116, i32 0, i32 7, !dbg !4923
  %117 = load ptr, ptr %trans137, align 8, !dbg !4923, !tbaa !2058
  %118 = load i32, ptr %transnr, align 4, !dbg !4924, !tbaa !1767
  %idxprom138 = sext i32 %118 to i64, !dbg !4922
  %arrayidx139 = getelementptr inbounds %struct._xmlRegTrans, ptr %117, i64 %idxprom138, !dbg !4922
  %to140 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx139, i32 0, i32 1, !dbg !4925
  %119 = load i32, ptr %to140, align 8, !dbg !4925, !tbaa !2065
  %cmp141 = icmp sge i32 %119, 0, !dbg !4926
  br i1 %cmp141, label %land.lhs.true142, label %if.end179, !dbg !4927

land.lhs.true142:                                 ; preds = %for.body136
  %120 = load ptr, ptr %state, align 8, !dbg !4928, !tbaa !1527
  %trans143 = getelementptr inbounds %struct._xmlAutomataState, ptr %120, i32 0, i32 7, !dbg !4929
  %121 = load ptr, ptr %trans143, align 8, !dbg !4929, !tbaa !2058
  %122 = load i32, ptr %transnr, align 4, !dbg !4930, !tbaa !1767
  %idxprom144 = sext i32 %122 to i64, !dbg !4928
  %arrayidx145 = getelementptr inbounds %struct._xmlRegTrans, ptr %121, i64 %idxprom144, !dbg !4928
  %atom146 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx145, i32 0, i32 0, !dbg !4931
  %123 = load ptr, ptr %atom146, align 8, !dbg !4931, !tbaa !2072
  %cmp147 = icmp ne ptr %123, null, !dbg !4932
  br i1 %cmp147, label %if.then153, label %lor.lhs.false, !dbg !4933

lor.lhs.false:                                    ; preds = %land.lhs.true142
  %124 = load ptr, ptr %state, align 8, !dbg !4934, !tbaa !1527
  %trans148 = getelementptr inbounds %struct._xmlAutomataState, ptr %124, i32 0, i32 7, !dbg !4935
  %125 = load ptr, ptr %trans148, align 8, !dbg !4935, !tbaa !2058
  %126 = load i32, ptr %transnr, align 4, !dbg !4936, !tbaa !1767
  %idxprom149 = sext i32 %126 to i64, !dbg !4934
  %arrayidx150 = getelementptr inbounds %struct._xmlRegTrans, ptr %125, i64 %idxprom149, !dbg !4934
  %count151 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx150, i32 0, i32 3, !dbg !4937
  %127 = load i32, ptr %count151, align 8, !dbg !4937, !tbaa !2077
  %cmp152 = icmp sge i32 %127, 0, !dbg !4938
  br i1 %cmp152, label %if.then153, label %if.end179, !dbg !4939

if.then153:                                       ; preds = %lor.lhs.false, %land.lhs.true142
  call void @llvm.lifetime.start.p0(i64 4, ptr %newto154) #8, !dbg !4940
  tail call void @llvm.dbg.declare(metadata ptr %newto154, metadata !4643, metadata !DIExpression()), !dbg !4941
  %128 = load ptr, ptr %state, align 8, !dbg !4942, !tbaa !1527
  %trans155 = getelementptr inbounds %struct._xmlAutomataState, ptr %128, i32 0, i32 7, !dbg !4943
  %129 = load ptr, ptr %trans155, align 8, !dbg !4943, !tbaa !2058
  %130 = load i32, ptr %transnr, align 4, !dbg !4944, !tbaa !1767
  %idxprom156 = sext i32 %130 to i64, !dbg !4942
  %arrayidx157 = getelementptr inbounds %struct._xmlRegTrans, ptr %129, i64 %idxprom156, !dbg !4942
  %to158 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx157, i32 0, i32 1, !dbg !4945
  %131 = load i32, ptr %to158, align 8, !dbg !4945, !tbaa !2065
  store i32 %131, ptr %newto154, align 4, !dbg !4941, !tbaa !1767
  %132 = load ptr, ptr %ctxt.addr, align 8, !dbg !4946, !tbaa !1527
  %states159 = getelementptr inbounds %struct._xmlAutomata, ptr %132, i32 0, i32 13, !dbg !4948
  %133 = load ptr, ptr %states159, align 8, !dbg !4948, !tbaa !4343
  %134 = load i32, ptr %newto154, align 4, !dbg !4949, !tbaa !1767
  %idxprom160 = sext i32 %134 to i64, !dbg !4946
  %arrayidx161 = getelementptr inbounds ptr, ptr %133, i64 %idxprom160, !dbg !4946
  %135 = load ptr, ptr %arrayidx161, align 8, !dbg !4946, !tbaa !1527
  %cmp162 = icmp eq ptr %135, null, !dbg !4950
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !4951

if.then163:                                       ; preds = %if.then153
  store i32 24, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4952

if.end164:                                        ; preds = %if.then153
  %136 = load ptr, ptr %ctxt.addr, align 8, !dbg !4953, !tbaa !1527
  %states165 = getelementptr inbounds %struct._xmlAutomata, ptr %136, i32 0, i32 13, !dbg !4955
  %137 = load ptr, ptr %states165, align 8, !dbg !4955, !tbaa !4343
  %138 = load i32, ptr %newto154, align 4, !dbg !4956, !tbaa !1767
  %idxprom166 = sext i32 %138 to i64, !dbg !4953
  %arrayidx167 = getelementptr inbounds ptr, ptr %137, i64 %idxprom166, !dbg !4953
  %139 = load ptr, ptr %arrayidx167, align 8, !dbg !4953, !tbaa !1527
  %reached168 = getelementptr inbounds %struct._xmlAutomataState, ptr %139, i32 0, i32 3, !dbg !4957
  %140 = load i32, ptr %reached168, align 4, !dbg !4957, !tbaa !4891
  %cmp169 = icmp eq i32 %140, 0, !dbg !4958
  br i1 %cmp169, label %if.then170, label %if.end178, !dbg !4959

if.then170:                                       ; preds = %if.end164
  %141 = load ptr, ptr %ctxt.addr, align 8, !dbg !4960, !tbaa !1527
  %states171 = getelementptr inbounds %struct._xmlAutomata, ptr %141, i32 0, i32 13, !dbg !4962
  %142 = load ptr, ptr %states171, align 8, !dbg !4962, !tbaa !4343
  %143 = load i32, ptr %newto154, align 4, !dbg !4963, !tbaa !1767
  %idxprom172 = sext i32 %143 to i64, !dbg !4960
  %arrayidx173 = getelementptr inbounds ptr, ptr %142, i64 %idxprom172, !dbg !4960
  %144 = load ptr, ptr %arrayidx173, align 8, !dbg !4960, !tbaa !1527
  %reached174 = getelementptr inbounds %struct._xmlAutomataState, ptr %144, i32 0, i32 3, !dbg !4964
  store i32 1, ptr %reached174, align 4, !dbg !4965, !tbaa !4891
  %145 = load ptr, ptr %ctxt.addr, align 8, !dbg !4966, !tbaa !1527
  %states175 = getelementptr inbounds %struct._xmlAutomata, ptr %145, i32 0, i32 13, !dbg !4967
  %146 = load ptr, ptr %states175, align 8, !dbg !4967, !tbaa !4343
  %147 = load i32, ptr %newto154, align 4, !dbg !4968, !tbaa !1767
  %idxprom176 = sext i32 %147 to i64, !dbg !4966
  %arrayidx177 = getelementptr inbounds ptr, ptr %146, i64 %idxprom176, !dbg !4966
  %148 = load ptr, ptr %arrayidx177, align 8, !dbg !4966, !tbaa !1527
  store ptr %148, ptr %target, align 8, !dbg !4969, !tbaa !1527
  br label %if.end178, !dbg !4970

if.end178:                                        ; preds = %if.then170, %if.end164
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4971
  br label %cleanup, !dbg !4971

cleanup:                                          ; preds = %if.end178, %if.then163
  call void @llvm.lifetime.end.p0(i64 4, ptr %newto154) #8, !dbg !4971
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 24, label %for.inc180
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end179, !dbg !4972

if.end179:                                        ; preds = %cleanup.cont, %lor.lhs.false, %for.body136
  br label %for.inc180, !dbg !4973

for.inc180:                                       ; preds = %if.end179, %cleanup
  %149 = load i32, ptr %transnr, align 4, !dbg !4974, !tbaa !1767
  %inc181 = add nsw i32 %149, 1, !dbg !4974
  store i32 %inc181, ptr %transnr, align 4, !dbg !4974, !tbaa !1767
  br label %for.cond133, !dbg !4975, !llvm.loop !4976

for.end182:                                       ; preds = %for.cond133
  %150 = load ptr, ptr %target, align 8, !dbg !4978, !tbaa !1527
  %cmp183 = icmp eq ptr %150, null, !dbg !4980
  br i1 %cmp183, label %if.then184, label %if.end201, !dbg !4981

if.then184:                                       ; preds = %for.end182
  store i32 1, ptr %statenr, align 4, !dbg !4982, !tbaa !1767
  br label %for.cond185, !dbg !4985

for.cond185:                                      ; preds = %for.inc198, %if.then184
  %151 = load i32, ptr %statenr, align 4, !dbg !4986, !tbaa !1767
  %152 = load ptr, ptr %ctxt.addr, align 8, !dbg !4988, !tbaa !1527
  %nbStates186 = getelementptr inbounds %struct._xmlAutomata, ptr %152, i32 0, i32 12, !dbg !4989
  %153 = load i32, ptr %nbStates186, align 4, !dbg !4989, !tbaa !4359
  %cmp187 = icmp slt i32 %151, %153, !dbg !4990
  br i1 %cmp187, label %for.body188, label %for.end200, !dbg !4991

for.body188:                                      ; preds = %for.cond185
  %154 = load ptr, ptr %ctxt.addr, align 8, !dbg !4992, !tbaa !1527
  %states189 = getelementptr inbounds %struct._xmlAutomata, ptr %154, i32 0, i32 13, !dbg !4994
  %155 = load ptr, ptr %states189, align 8, !dbg !4994, !tbaa !4343
  %156 = load i32, ptr %statenr, align 4, !dbg !4995, !tbaa !1767
  %idxprom190 = sext i32 %156 to i64, !dbg !4992
  %arrayidx191 = getelementptr inbounds ptr, ptr %155, i64 %idxprom190, !dbg !4992
  %157 = load ptr, ptr %arrayidx191, align 8, !dbg !4992, !tbaa !1527
  store ptr %157, ptr %state, align 8, !dbg !4996, !tbaa !1527
  %158 = load ptr, ptr %state, align 8, !dbg !4997, !tbaa !1527
  %cmp192 = icmp ne ptr %158, null, !dbg !4999
  br i1 %cmp192, label %land.lhs.true193, label %if.end197, !dbg !5000

land.lhs.true193:                                 ; preds = %for.body188
  %159 = load ptr, ptr %state, align 8, !dbg !5001, !tbaa !1527
  %reached194 = getelementptr inbounds %struct._xmlAutomataState, ptr %159, i32 0, i32 3, !dbg !5002
  %160 = load i32, ptr %reached194, align 4, !dbg !5002, !tbaa !4891
  %cmp195 = icmp eq i32 %160, 1, !dbg !5003
  br i1 %cmp195, label %if.then196, label %if.end197, !dbg !5004

if.then196:                                       ; preds = %land.lhs.true193
  %161 = load ptr, ptr %state, align 8, !dbg !5005, !tbaa !1527
  store ptr %161, ptr %target, align 8, !dbg !5007, !tbaa !1527
  br label %for.end200, !dbg !5008

if.end197:                                        ; preds = %land.lhs.true193, %for.body188
  br label %for.inc198, !dbg !5009

for.inc198:                                       ; preds = %if.end197
  %162 = load i32, ptr %statenr, align 4, !dbg !5010, !tbaa !1767
  %inc199 = add nsw i32 %162, 1, !dbg !5010
  store i32 %inc199, ptr %statenr, align 4, !dbg !5010, !tbaa !1767
  br label %for.cond185, !dbg !5011, !llvm.loop !5012

for.end200:                                       ; preds = %if.then196, %for.cond185
  br label %if.end201, !dbg !5014

if.end201:                                        ; preds = %for.end200, %for.end182
  %163 = load ptr, ptr %target, align 8, !dbg !5015, !tbaa !1527
  store ptr %163, ptr %state, align 8, !dbg !5016, !tbaa !1527
  call void @llvm.lifetime.end.p0(i64 8, ptr %target) #8, !dbg !5017
  br label %while.cond, !dbg !4907, !llvm.loop !5018

while.end:                                        ; preds = %while.cond
  store i32 0, ptr %statenr, align 4, !dbg !5019, !tbaa !1767
  br label %for.cond202, !dbg !5021

for.cond202:                                      ; preds = %for.inc218, %while.end
  %164 = load i32, ptr %statenr, align 4, !dbg !5022, !tbaa !1767
  %165 = load ptr, ptr %ctxt.addr, align 8, !dbg !5024, !tbaa !1527
  %nbStates203 = getelementptr inbounds %struct._xmlAutomata, ptr %165, i32 0, i32 12, !dbg !5025
  %166 = load i32, ptr %nbStates203, align 4, !dbg !5025, !tbaa !4359
  %cmp204 = icmp slt i32 %164, %166, !dbg !5026
  br i1 %cmp204, label %for.body205, label %for.end220, !dbg !5027

for.body205:                                      ; preds = %for.cond202
  %167 = load ptr, ptr %ctxt.addr, align 8, !dbg !5028, !tbaa !1527
  %states206 = getelementptr inbounds %struct._xmlAutomata, ptr %167, i32 0, i32 13, !dbg !5030
  %168 = load ptr, ptr %states206, align 8, !dbg !5030, !tbaa !4343
  %169 = load i32, ptr %statenr, align 4, !dbg !5031, !tbaa !1767
  %idxprom207 = sext i32 %169 to i64, !dbg !5028
  %arrayidx208 = getelementptr inbounds ptr, ptr %168, i64 %idxprom207, !dbg !5028
  %170 = load ptr, ptr %arrayidx208, align 8, !dbg !5028, !tbaa !1527
  store ptr %170, ptr %state, align 8, !dbg !5032, !tbaa !1527
  %171 = load ptr, ptr %state, align 8, !dbg !5033, !tbaa !1527
  %cmp209 = icmp ne ptr %171, null, !dbg !5035
  br i1 %cmp209, label %land.lhs.true210, label %if.end217, !dbg !5036

land.lhs.true210:                                 ; preds = %for.body205
  %172 = load ptr, ptr %state, align 8, !dbg !5037, !tbaa !1527
  %reached211 = getelementptr inbounds %struct._xmlAutomataState, ptr %172, i32 0, i32 3, !dbg !5038
  %173 = load i32, ptr %reached211, align 4, !dbg !5038, !tbaa !4891
  %cmp212 = icmp eq i32 %173, 0, !dbg !5039
  br i1 %cmp212, label %if.then213, label %if.end217, !dbg !5040

if.then213:                                       ; preds = %land.lhs.true210
  %174 = load ptr, ptr %state, align 8, !dbg !5041, !tbaa !1527
  call void @xmlRegFreeState(ptr noundef %174), !dbg !5043
  %175 = load ptr, ptr %ctxt.addr, align 8, !dbg !5044, !tbaa !1527
  %states214 = getelementptr inbounds %struct._xmlAutomata, ptr %175, i32 0, i32 13, !dbg !5045
  %176 = load ptr, ptr %states214, align 8, !dbg !5045, !tbaa !4343
  %177 = load i32, ptr %statenr, align 4, !dbg !5046, !tbaa !1767
  %idxprom215 = sext i32 %177 to i64, !dbg !5044
  %arrayidx216 = getelementptr inbounds ptr, ptr %176, i64 %idxprom215, !dbg !5044
  store ptr null, ptr %arrayidx216, align 8, !dbg !5047, !tbaa !1527
  br label %if.end217, !dbg !5048

if.end217:                                        ; preds = %if.then213, %land.lhs.true210, %for.body205
  br label %for.inc218, !dbg !5049

for.inc218:                                       ; preds = %if.end217
  %178 = load i32, ptr %statenr, align 4, !dbg !5050, !tbaa !1767
  %inc219 = add nsw i32 %178, 1, !dbg !5050
  store i32 %inc219, ptr %statenr, align 4, !dbg !5050, !tbaa !1767
  br label %for.cond202, !dbg !5051, !llvm.loop !5052

for.end220:                                       ; preds = %for.cond202
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5054
  br label %cleanup221, !dbg !5054

cleanup221:                                       ; preds = %for.end220, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %has_epsilon) #8, !dbg !5054
  call void @llvm.lifetime.end.p0(i64 8, ptr %state) #8, !dbg !5054
  call void @llvm.lifetime.end.p0(i64 4, ptr %transnr) #8, !dbg !5054
  call void @llvm.lifetime.end.p0(i64 4, ptr %statenr) #8, !dbg !5054
  %cleanup.dest225 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest225, label %unreachable [
    i32 0, label %cleanup.cont226
    i32 1, label %cleanup.cont226
  ]

cleanup.cont226:                                  ; preds = %cleanup221, %cleanup221
  ret void, !dbg !5054

unreachable:                                      ; preds = %cleanup221, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal ptr @xmlRegEpxFromParse(ptr noundef %ctxt) #0 !dbg !5055 {
entry:
  %retval = alloca ptr, align 8
  %ctxt.addr = alloca ptr, align 8
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %nbstates = alloca i32, align 4
  %nbatoms = alloca i32, align 4
  %stateRemap = alloca ptr, align 8
  %stringRemap = alloca ptr, align 8
  %transitions = alloca ptr, align 8
  %transdata = alloca ptr, align 8
  %stringMap = alloca ptr, align 8
  %value = alloca ptr, align 8
  %stateno = alloca i32, align 4
  %atomno = alloca i32, align 4
  %targetno = alloca i32, align 4
  %prev = alloca i32, align 4
  %state = alloca ptr, align 8
  %trans = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !5059, metadata !DIExpression()), !dbg !5083
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #8, !dbg !5084
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !5060, metadata !DIExpression()), !dbg !5085
  %0 = load ptr, ptr @xmlMalloc, align 8, !dbg !5086, !tbaa !1527
  %call = call ptr %0(i64 noundef 104), !dbg !5086
  store ptr %call, ptr %ret, align 8, !dbg !5087, !tbaa !1527
  %1 = load ptr, ptr %ret, align 8, !dbg !5088, !tbaa !1527
  %cmp = icmp eq ptr %1, null, !dbg !5090
  br i1 %cmp, label %if.then, label %if.end, !dbg !5091

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !5092, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %2, ptr noundef @.str.129), !dbg !5094
  store ptr null, ptr %retval, align 8, !dbg !5095
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup332, !dbg !5095

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %ret, align 8, !dbg !5096, !tbaa !1527
  call void @llvm.memset.p0.i64(ptr align 8 %3, i8 0, i64 104, i1 false), !dbg !5097
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !5098, !tbaa !1527
  %string = getelementptr inbounds %struct._xmlAutomata, ptr %4, i32 0, i32 0, !dbg !5099
  %5 = load ptr, ptr %string, align 8, !dbg !5099, !tbaa !1723
  %6 = load ptr, ptr %ret, align 8, !dbg !5100, !tbaa !1527
  %string1 = getelementptr inbounds %struct._xmlRegexp, ptr %6, i32 0, i32 0, !dbg !5101
  store ptr %5, ptr %string1, align 8, !dbg !5102, !tbaa !3860
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !5103, !tbaa !1527
  %nbStates = getelementptr inbounds %struct._xmlAutomata, ptr %7, i32 0, i32 12, !dbg !5104
  %8 = load i32, ptr %nbStates, align 4, !dbg !5104, !tbaa !4359
  %9 = load ptr, ptr %ret, align 8, !dbg !5105, !tbaa !1527
  %nbStates2 = getelementptr inbounds %struct._xmlRegexp, ptr %9, i32 0, i32 1, !dbg !5106
  store i32 %8, ptr %nbStates2, align 8, !dbg !5107, !tbaa !3896
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !5108, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlAutomata, ptr %10, i32 0, i32 13, !dbg !5109
  %11 = load ptr, ptr %states, align 8, !dbg !5109, !tbaa !4343
  %12 = load ptr, ptr %ret, align 8, !dbg !5110, !tbaa !1527
  %states3 = getelementptr inbounds %struct._xmlRegexp, ptr %12, i32 0, i32 2, !dbg !5111
  store ptr %11, ptr %states3, align 8, !dbg !5112, !tbaa !1551
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !5113, !tbaa !1527
  %nbAtoms = getelementptr inbounds %struct._xmlAutomata, ptr %13, i32 0, i32 9, !dbg !5114
  %14 = load i32, ptr %nbAtoms, align 4, !dbg !5114, !tbaa !4586
  %15 = load ptr, ptr %ret, align 8, !dbg !5115, !tbaa !1527
  %nbAtoms4 = getelementptr inbounds %struct._xmlRegexp, ptr %15, i32 0, i32 3, !dbg !5116
  store i32 %14, ptr %nbAtoms4, align 8, !dbg !5117, !tbaa !3867
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !5118, !tbaa !1527
  %atoms = getelementptr inbounds %struct._xmlAutomata, ptr %16, i32 0, i32 10, !dbg !5119
  %17 = load ptr, ptr %atoms, align 8, !dbg !5119, !tbaa !4575
  %18 = load ptr, ptr %ret, align 8, !dbg !5120, !tbaa !1527
  %atoms5 = getelementptr inbounds %struct._xmlRegexp, ptr %18, i32 0, i32 4, !dbg !5121
  store ptr %17, ptr %atoms5, align 8, !dbg !5122, !tbaa !3885
  %19 = load ptr, ptr %ctxt.addr, align 8, !dbg !5123, !tbaa !1527
  %nbCounters = getelementptr inbounds %struct._xmlAutomata, ptr %19, i32 0, i32 15, !dbg !5124
  %20 = load i32, ptr %nbCounters, align 4, !dbg !5124, !tbaa !5125
  %21 = load ptr, ptr %ret, align 8, !dbg !5126, !tbaa !1527
  %nbCounters6 = getelementptr inbounds %struct._xmlRegexp, ptr %21, i32 0, i32 5, !dbg !5127
  store i32 %20, ptr %nbCounters6, align 8, !dbg !5128, !tbaa !1632
  %22 = load ptr, ptr %ctxt.addr, align 8, !dbg !5129, !tbaa !1527
  %counters = getelementptr inbounds %struct._xmlAutomata, ptr %22, i32 0, i32 16, !dbg !5130
  %23 = load ptr, ptr %counters, align 8, !dbg !5130, !tbaa !4604
  %24 = load ptr, ptr %ret, align 8, !dbg !5131, !tbaa !1527
  %counters7 = getelementptr inbounds %struct._xmlRegexp, ptr %24, i32 0, i32 6, !dbg !5132
  store ptr %23, ptr %counters7, align 8, !dbg !5133, !tbaa !2134
  %25 = load ptr, ptr %ctxt.addr, align 8, !dbg !5134, !tbaa !1527
  %determinist = getelementptr inbounds %struct._xmlAutomata, ptr %25, i32 0, i32 17, !dbg !5135
  %26 = load i32, ptr %determinist, align 8, !dbg !5135, !tbaa !4275
  %27 = load ptr, ptr %ret, align 8, !dbg !5136, !tbaa !1527
  %determinist8 = getelementptr inbounds %struct._xmlRegexp, ptr %27, i32 0, i32 7, !dbg !5137
  store i32 %26, ptr %determinist8, align 8, !dbg !5138, !tbaa !5139
  %28 = load ptr, ptr %ctxt.addr, align 8, !dbg !5140, !tbaa !1527
  %flags = getelementptr inbounds %struct._xmlAutomata, ptr %28, i32 0, i32 19, !dbg !5141
  %29 = load i32, ptr %flags, align 8, !dbg !5141, !tbaa !5142
  %30 = load ptr, ptr %ret, align 8, !dbg !5143, !tbaa !1527
  %flags9 = getelementptr inbounds %struct._xmlRegexp, ptr %30, i32 0, i32 8, !dbg !5144
  store i32 %29, ptr %flags9, align 4, !dbg !5145, !tbaa !5146
  %31 = load ptr, ptr %ret, align 8, !dbg !5147, !tbaa !1527
  %determinist10 = getelementptr inbounds %struct._xmlRegexp, ptr %31, i32 0, i32 7, !dbg !5149
  %32 = load i32, ptr %determinist10, align 8, !dbg !5149, !tbaa !5139
  %cmp11 = icmp eq i32 %32, -1, !dbg !5150
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !5151

if.then12:                                        ; preds = %if.end
  %33 = load ptr, ptr %ret, align 8, !dbg !5152, !tbaa !1527
  %call13 = call i32 @xmlRegexpIsDeterminist(ptr noundef %33), !dbg !5154
  br label %if.end14, !dbg !5155

if.end14:                                         ; preds = %if.then12, %if.end
  %34 = load ptr, ptr %ret, align 8, !dbg !5156, !tbaa !1527
  %determinist15 = getelementptr inbounds %struct._xmlRegexp, ptr %34, i32 0, i32 7, !dbg !5157
  %35 = load i32, ptr %determinist15, align 8, !dbg !5157, !tbaa !5139
  %cmp16 = icmp ne i32 %35, 0, !dbg !5158
  br i1 %cmp16, label %land.lhs.true, label %if.end324, !dbg !5159

land.lhs.true:                                    ; preds = %if.end14
  %36 = load ptr, ptr %ret, align 8, !dbg !5160, !tbaa !1527
  %nbCounters17 = getelementptr inbounds %struct._xmlRegexp, ptr %36, i32 0, i32 5, !dbg !5161
  %37 = load i32, ptr %nbCounters17, align 8, !dbg !5161, !tbaa !1632
  %cmp18 = icmp eq i32 %37, 0, !dbg !5162
  br i1 %cmp18, label %land.lhs.true19, label %if.end324, !dbg !5163

land.lhs.true19:                                  ; preds = %land.lhs.true
  %38 = load ptr, ptr %ctxt.addr, align 8, !dbg !5164, !tbaa !1527
  %negs = getelementptr inbounds %struct._xmlAutomata, ptr %38, i32 0, i32 18, !dbg !5165
  %39 = load i32, ptr %negs, align 4, !dbg !5165, !tbaa !4268
  %cmp20 = icmp eq i32 %39, 0, !dbg !5166
  br i1 %cmp20, label %land.lhs.true21, label %if.end324, !dbg !5167

land.lhs.true21:                                  ; preds = %land.lhs.true19
  %40 = load ptr, ptr %ret, align 8, !dbg !5168, !tbaa !1527
  %atoms22 = getelementptr inbounds %struct._xmlRegexp, ptr %40, i32 0, i32 4, !dbg !5169
  %41 = load ptr, ptr %atoms22, align 8, !dbg !5169, !tbaa !3885
  %cmp23 = icmp ne ptr %41, null, !dbg !5170
  br i1 %cmp23, label %land.lhs.true24, label %if.end324, !dbg !5171

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %42 = load ptr, ptr %ret, align 8, !dbg !5172, !tbaa !1527
  %atoms25 = getelementptr inbounds %struct._xmlRegexp, ptr %42, i32 0, i32 4, !dbg !5173
  %43 = load ptr, ptr %atoms25, align 8, !dbg !5173, !tbaa !3885
  %arrayidx = getelementptr inbounds ptr, ptr %43, i64 0, !dbg !5172
  %44 = load ptr, ptr %arrayidx, align 8, !dbg !5172, !tbaa !1527
  %cmp26 = icmp ne ptr %44, null, !dbg !5174
  br i1 %cmp26, label %land.lhs.true27, label %if.end324, !dbg !5175

land.lhs.true27:                                  ; preds = %land.lhs.true24
  %45 = load ptr, ptr %ret, align 8, !dbg !5176, !tbaa !1527
  %atoms28 = getelementptr inbounds %struct._xmlRegexp, ptr %45, i32 0, i32 4, !dbg !5177
  %46 = load ptr, ptr %atoms28, align 8, !dbg !5177, !tbaa !3885
  %arrayidx29 = getelementptr inbounds ptr, ptr %46, i64 0, !dbg !5176
  %47 = load ptr, ptr %arrayidx29, align 8, !dbg !5176, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlRegAtom, ptr %47, i32 0, i32 1, !dbg !5178
  %48 = load i32, ptr %type, align 4, !dbg !5178, !tbaa !3988
  %cmp30 = icmp eq i32 %48, 5, !dbg !5179
  br i1 %cmp30, label %if.then31, label %if.end324, !dbg !5180

if.then31:                                        ; preds = %land.lhs.true27
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !5181
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !5061, metadata !DIExpression()), !dbg !5182
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #8, !dbg !5181
  tail call void @llvm.dbg.declare(metadata ptr %j, metadata !5064, metadata !DIExpression()), !dbg !5183
  call void @llvm.lifetime.start.p0(i64 4, ptr %nbstates) #8, !dbg !5181
  tail call void @llvm.dbg.declare(metadata ptr %nbstates, metadata !5065, metadata !DIExpression()), !dbg !5184
  store i32 0, ptr %nbstates, align 4, !dbg !5184, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 4, ptr %nbatoms) #8, !dbg !5181
  tail call void @llvm.dbg.declare(metadata ptr %nbatoms, metadata !5066, metadata !DIExpression()), !dbg !5185
  store i32 0, ptr %nbatoms, align 4, !dbg !5185, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 8, ptr %stateRemap) #8, !dbg !5186
  tail call void @llvm.dbg.declare(metadata ptr %stateRemap, metadata !5067, metadata !DIExpression()), !dbg !5187
  call void @llvm.lifetime.start.p0(i64 8, ptr %stringRemap) #8, !dbg !5188
  tail call void @llvm.dbg.declare(metadata ptr %stringRemap, metadata !5068, metadata !DIExpression()), !dbg !5189
  call void @llvm.lifetime.start.p0(i64 8, ptr %transitions) #8, !dbg !5190
  tail call void @llvm.dbg.declare(metadata ptr %transitions, metadata !5069, metadata !DIExpression()), !dbg !5191
  call void @llvm.lifetime.start.p0(i64 8, ptr %transdata) #8, !dbg !5192
  tail call void @llvm.dbg.declare(metadata ptr %transdata, metadata !5070, metadata !DIExpression()), !dbg !5193
  call void @llvm.lifetime.start.p0(i64 8, ptr %stringMap) #8, !dbg !5194
  tail call void @llvm.dbg.declare(metadata ptr %stringMap, metadata !5071, metadata !DIExpression()), !dbg !5195
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #8, !dbg !5196
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !5072, metadata !DIExpression()), !dbg !5197
  %49 = load ptr, ptr @xmlMalloc, align 8, !dbg !5198, !tbaa !1527
  %50 = load ptr, ptr %ret, align 8, !dbg !5199, !tbaa !1527
  %nbStates32 = getelementptr inbounds %struct._xmlRegexp, ptr %50, i32 0, i32 1, !dbg !5200
  %51 = load i32, ptr %nbStates32, align 8, !dbg !5200, !tbaa !3896
  %conv = sext i32 %51 to i64, !dbg !5199
  %mul = mul i64 %conv, 4, !dbg !5201
  %call33 = call ptr %49(i64 noundef %mul), !dbg !5198
  store ptr %call33, ptr %stateRemap, align 8, !dbg !5202, !tbaa !1527
  %52 = load ptr, ptr %stateRemap, align 8, !dbg !5203, !tbaa !1527
  %cmp34 = icmp eq ptr %52, null, !dbg !5205
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !5206

if.then36:                                        ; preds = %if.then31
  %53 = load ptr, ptr %ctxt.addr, align 8, !dbg !5207, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %53, ptr noundef @.str.129), !dbg !5209
  %54 = load ptr, ptr @xmlFree, align 8, !dbg !5210, !tbaa !1527
  %55 = load ptr, ptr %ret, align 8, !dbg !5211, !tbaa !1527
  call void %54(ptr noundef %55), !dbg !5210
  store ptr null, ptr %retval, align 8, !dbg !5212
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup312, !dbg !5212

if.end37:                                         ; preds = %if.then31
  store i32 0, ptr %i, align 4, !dbg !5213, !tbaa !1767
  br label %for.cond, !dbg !5215

for.cond:                                         ; preds = %for.inc, %if.end37
  %56 = load i32, ptr %i, align 4, !dbg !5216, !tbaa !1767
  %57 = load ptr, ptr %ret, align 8, !dbg !5218, !tbaa !1527
  %nbStates38 = getelementptr inbounds %struct._xmlRegexp, ptr %57, i32 0, i32 1, !dbg !5219
  %58 = load i32, ptr %nbStates38, align 8, !dbg !5219, !tbaa !3896
  %cmp39 = icmp slt i32 %56, %58, !dbg !5220
  br i1 %cmp39, label %for.body, label %for.end, !dbg !5221

for.body:                                         ; preds = %for.cond
  %59 = load ptr, ptr %ret, align 8, !dbg !5222, !tbaa !1527
  %states41 = getelementptr inbounds %struct._xmlRegexp, ptr %59, i32 0, i32 2, !dbg !5225
  %60 = load ptr, ptr %states41, align 8, !dbg !5225, !tbaa !1551
  %61 = load i32, ptr %i, align 4, !dbg !5226, !tbaa !1767
  %idxprom = sext i32 %61 to i64, !dbg !5222
  %arrayidx42 = getelementptr inbounds ptr, ptr %60, i64 %idxprom, !dbg !5222
  %62 = load ptr, ptr %arrayidx42, align 8, !dbg !5222, !tbaa !1527
  %cmp43 = icmp ne ptr %62, null, !dbg !5227
  br i1 %cmp43, label %if.then45, label %if.else, !dbg !5228

if.then45:                                        ; preds = %for.body
  %63 = load i32, ptr %nbstates, align 4, !dbg !5229, !tbaa !1767
  %64 = load ptr, ptr %stateRemap, align 8, !dbg !5231, !tbaa !1527
  %65 = load i32, ptr %i, align 4, !dbg !5232, !tbaa !1767
  %idxprom46 = sext i32 %65 to i64, !dbg !5231
  %arrayidx47 = getelementptr inbounds i32, ptr %64, i64 %idxprom46, !dbg !5231
  store i32 %63, ptr %arrayidx47, align 4, !dbg !5233, !tbaa !1767
  %66 = load i32, ptr %nbstates, align 4, !dbg !5234, !tbaa !1767
  %inc = add nsw i32 %66, 1, !dbg !5234
  store i32 %inc, ptr %nbstates, align 4, !dbg !5234, !tbaa !1767
  br label %if.end50, !dbg !5235

if.else:                                          ; preds = %for.body
  %67 = load ptr, ptr %stateRemap, align 8, !dbg !5236, !tbaa !1527
  %68 = load i32, ptr %i, align 4, !dbg !5238, !tbaa !1767
  %idxprom48 = sext i32 %68 to i64, !dbg !5236
  %arrayidx49 = getelementptr inbounds i32, ptr %67, i64 %idxprom48, !dbg !5236
  store i32 -1, ptr %arrayidx49, align 4, !dbg !5239, !tbaa !1767
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then45
  br label %for.inc, !dbg !5240

for.inc:                                          ; preds = %if.end50
  %69 = load i32, ptr %i, align 4, !dbg !5241, !tbaa !1767
  %inc51 = add nsw i32 %69, 1, !dbg !5241
  store i32 %inc51, ptr %i, align 4, !dbg !5241, !tbaa !1767
  br label %for.cond, !dbg !5242, !llvm.loop !5243

for.end:                                          ; preds = %for.cond
  %70 = load ptr, ptr @xmlMalloc, align 8, !dbg !5245, !tbaa !1527
  %71 = load ptr, ptr %ret, align 8, !dbg !5246, !tbaa !1527
  %nbAtoms52 = getelementptr inbounds %struct._xmlRegexp, ptr %71, i32 0, i32 3, !dbg !5247
  %72 = load i32, ptr %nbAtoms52, align 8, !dbg !5247, !tbaa !3867
  %conv53 = sext i32 %72 to i64, !dbg !5246
  %mul54 = mul i64 %conv53, 8, !dbg !5248
  %call55 = call ptr %70(i64 noundef %mul54), !dbg !5245
  store ptr %call55, ptr %stringMap, align 8, !dbg !5249, !tbaa !1527
  %73 = load ptr, ptr %stringMap, align 8, !dbg !5250, !tbaa !1527
  %cmp56 = icmp eq ptr %73, null, !dbg !5252
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !5253

if.then58:                                        ; preds = %for.end
  %74 = load ptr, ptr %ctxt.addr, align 8, !dbg !5254, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %74, ptr noundef @.str.129), !dbg !5256
  %75 = load ptr, ptr @xmlFree, align 8, !dbg !5257, !tbaa !1527
  %76 = load ptr, ptr %stateRemap, align 8, !dbg !5258, !tbaa !1527
  call void %75(ptr noundef %76), !dbg !5257
  %77 = load ptr, ptr @xmlFree, align 8, !dbg !5259, !tbaa !1527
  %78 = load ptr, ptr %ret, align 8, !dbg !5260, !tbaa !1527
  call void %77(ptr noundef %78), !dbg !5259
  store ptr null, ptr %retval, align 8, !dbg !5261
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup312, !dbg !5261

if.end59:                                         ; preds = %for.end
  %79 = load ptr, ptr @xmlMalloc, align 8, !dbg !5262, !tbaa !1527
  %80 = load ptr, ptr %ret, align 8, !dbg !5263, !tbaa !1527
  %nbAtoms60 = getelementptr inbounds %struct._xmlRegexp, ptr %80, i32 0, i32 3, !dbg !5264
  %81 = load i32, ptr %nbAtoms60, align 8, !dbg !5264, !tbaa !3867
  %conv61 = sext i32 %81 to i64, !dbg !5263
  %mul62 = mul i64 %conv61, 4, !dbg !5265
  %call63 = call ptr %79(i64 noundef %mul62), !dbg !5262
  store ptr %call63, ptr %stringRemap, align 8, !dbg !5266, !tbaa !1527
  %82 = load ptr, ptr %stringRemap, align 8, !dbg !5267, !tbaa !1527
  %cmp64 = icmp eq ptr %82, null, !dbg !5269
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !5270

if.then66:                                        ; preds = %if.end59
  %83 = load ptr, ptr %ctxt.addr, align 8, !dbg !5271, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %83, ptr noundef @.str.129), !dbg !5273
  %84 = load ptr, ptr @xmlFree, align 8, !dbg !5274, !tbaa !1527
  %85 = load ptr, ptr %stringMap, align 8, !dbg !5275, !tbaa !1527
  call void %84(ptr noundef %85), !dbg !5274
  %86 = load ptr, ptr @xmlFree, align 8, !dbg !5276, !tbaa !1527
  %87 = load ptr, ptr %stateRemap, align 8, !dbg !5277, !tbaa !1527
  call void %86(ptr noundef %87), !dbg !5276
  %88 = load ptr, ptr @xmlFree, align 8, !dbg !5278, !tbaa !1527
  %89 = load ptr, ptr %ret, align 8, !dbg !5279, !tbaa !1527
  call void %88(ptr noundef %89), !dbg !5278
  store ptr null, ptr %retval, align 8, !dbg !5280
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup312, !dbg !5280

if.end67:                                         ; preds = %if.end59
  store i32 0, ptr %i, align 4, !dbg !5281, !tbaa !1767
  br label %for.cond68, !dbg !5283

for.cond68:                                       ; preds = %for.inc139, %if.end67
  %90 = load i32, ptr %i, align 4, !dbg !5284, !tbaa !1767
  %91 = load ptr, ptr %ret, align 8, !dbg !5286, !tbaa !1527
  %nbAtoms69 = getelementptr inbounds %struct._xmlRegexp, ptr %91, i32 0, i32 3, !dbg !5287
  %92 = load i32, ptr %nbAtoms69, align 8, !dbg !5287, !tbaa !3867
  %cmp70 = icmp slt i32 %90, %92, !dbg !5288
  br i1 %cmp70, label %for.body72, label %for.end141, !dbg !5289

for.body72:                                       ; preds = %for.cond68
  %93 = load ptr, ptr %ret, align 8, !dbg !5290, !tbaa !1527
  %atoms73 = getelementptr inbounds %struct._xmlRegexp, ptr %93, i32 0, i32 4, !dbg !5293
  %94 = load ptr, ptr %atoms73, align 8, !dbg !5293, !tbaa !3885
  %95 = load i32, ptr %i, align 4, !dbg !5294, !tbaa !1767
  %idxprom74 = sext i32 %95 to i64, !dbg !5290
  %arrayidx75 = getelementptr inbounds ptr, ptr %94, i64 %idxprom74, !dbg !5290
  %96 = load ptr, ptr %arrayidx75, align 8, !dbg !5290, !tbaa !1527
  %type76 = getelementptr inbounds %struct._xmlRegAtom, ptr %96, i32 0, i32 1, !dbg !5295
  %97 = load i32, ptr %type76, align 4, !dbg !5295, !tbaa !3988
  %cmp77 = icmp eq i32 %97, 5, !dbg !5296
  br i1 %cmp77, label %land.lhs.true79, label %if.else128, !dbg !5297

land.lhs.true79:                                  ; preds = %for.body72
  %98 = load ptr, ptr %ret, align 8, !dbg !5298, !tbaa !1527
  %atoms80 = getelementptr inbounds %struct._xmlRegexp, ptr %98, i32 0, i32 4, !dbg !5299
  %99 = load ptr, ptr %atoms80, align 8, !dbg !5299, !tbaa !3885
  %100 = load i32, ptr %i, align 4, !dbg !5300, !tbaa !1767
  %idxprom81 = sext i32 %100 to i64, !dbg !5298
  %arrayidx82 = getelementptr inbounds ptr, ptr %99, i64 %idxprom81, !dbg !5298
  %101 = load ptr, ptr %arrayidx82, align 8, !dbg !5298, !tbaa !1527
  %quant = getelementptr inbounds %struct._xmlRegAtom, ptr %101, i32 0, i32 2, !dbg !5301
  %102 = load i32, ptr %quant, align 8, !dbg !5301, !tbaa !3993
  %cmp83 = icmp eq i32 %102, 2, !dbg !5302
  br i1 %cmp83, label %if.then85, label %if.else128, !dbg !5303

if.then85:                                        ; preds = %land.lhs.true79
  %103 = load ptr, ptr %ret, align 8, !dbg !5304, !tbaa !1527
  %atoms86 = getelementptr inbounds %struct._xmlRegexp, ptr %103, i32 0, i32 4, !dbg !5306
  %104 = load ptr, ptr %atoms86, align 8, !dbg !5306, !tbaa !3885
  %105 = load i32, ptr %i, align 4, !dbg !5307, !tbaa !1767
  %idxprom87 = sext i32 %105 to i64, !dbg !5304
  %arrayidx88 = getelementptr inbounds ptr, ptr %104, i64 %idxprom87, !dbg !5304
  %106 = load ptr, ptr %arrayidx88, align 8, !dbg !5304, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %106, i32 0, i32 5, !dbg !5308
  %107 = load ptr, ptr %valuep, align 8, !dbg !5308, !tbaa !2159
  store ptr %107, ptr %value, align 8, !dbg !5309, !tbaa !1527
  store i32 0, ptr %j, align 4, !dbg !5310, !tbaa !1767
  br label %for.cond89, !dbg !5312

for.cond89:                                       ; preds = %for.inc100, %if.then85
  %108 = load i32, ptr %j, align 4, !dbg !5313, !tbaa !1767
  %109 = load i32, ptr %nbatoms, align 4, !dbg !5315, !tbaa !1767
  %cmp90 = icmp slt i32 %108, %109, !dbg !5316
  br i1 %cmp90, label %for.body92, label %for.end102, !dbg !5317

for.body92:                                       ; preds = %for.cond89
  %110 = load ptr, ptr %stringMap, align 8, !dbg !5318, !tbaa !1527
  %111 = load i32, ptr %j, align 4, !dbg !5321, !tbaa !1767
  %idxprom93 = sext i32 %111 to i64, !dbg !5318
  %arrayidx94 = getelementptr inbounds ptr, ptr %110, i64 %idxprom93, !dbg !5318
  %112 = load ptr, ptr %arrayidx94, align 8, !dbg !5318, !tbaa !1527
  %113 = load ptr, ptr %value, align 8, !dbg !5322, !tbaa !1527
  %call95 = call i32 @xmlStrEqual(ptr noundef %112, ptr noundef %113), !dbg !5323
  %tobool = icmp ne i32 %call95, 0, !dbg !5323
  br i1 %tobool, label %if.then96, label %if.end99, !dbg !5324

if.then96:                                        ; preds = %for.body92
  %114 = load i32, ptr %j, align 4, !dbg !5325, !tbaa !1767
  %115 = load ptr, ptr %stringRemap, align 8, !dbg !5327, !tbaa !1527
  %116 = load i32, ptr %i, align 4, !dbg !5328, !tbaa !1767
  %idxprom97 = sext i32 %116 to i64, !dbg !5327
  %arrayidx98 = getelementptr inbounds i32, ptr %115, i64 %idxprom97, !dbg !5327
  store i32 %114, ptr %arrayidx98, align 4, !dbg !5329, !tbaa !1767
  br label %for.end102, !dbg !5330

if.end99:                                         ; preds = %for.body92
  br label %for.inc100, !dbg !5331

for.inc100:                                       ; preds = %if.end99
  %117 = load i32, ptr %j, align 4, !dbg !5332, !tbaa !1767
  %inc101 = add nsw i32 %117, 1, !dbg !5332
  store i32 %inc101, ptr %j, align 4, !dbg !5332, !tbaa !1767
  br label %for.cond89, !dbg !5333, !llvm.loop !5334

for.end102:                                       ; preds = %if.then96, %for.cond89
  %118 = load i32, ptr %j, align 4, !dbg !5336, !tbaa !1767
  %119 = load i32, ptr %nbatoms, align 4, !dbg !5338, !tbaa !1767
  %cmp103 = icmp sge i32 %118, %119, !dbg !5339
  br i1 %cmp103, label %if.then105, label %if.end127, !dbg !5340

if.then105:                                       ; preds = %for.end102
  %120 = load i32, ptr %nbatoms, align 4, !dbg !5341, !tbaa !1767
  %121 = load ptr, ptr %stringRemap, align 8, !dbg !5343, !tbaa !1527
  %122 = load i32, ptr %i, align 4, !dbg !5344, !tbaa !1767
  %idxprom106 = sext i32 %122 to i64, !dbg !5343
  %arrayidx107 = getelementptr inbounds i32, ptr %121, i64 %idxprom106, !dbg !5343
  store i32 %120, ptr %arrayidx107, align 4, !dbg !5345, !tbaa !1767
  %123 = load ptr, ptr %value, align 8, !dbg !5346, !tbaa !1527
  %call108 = call ptr @xmlStrdup(ptr noundef %123), !dbg !5347
  %124 = load ptr, ptr %stringMap, align 8, !dbg !5348, !tbaa !1527
  %125 = load i32, ptr %nbatoms, align 4, !dbg !5349, !tbaa !1767
  %idxprom109 = sext i32 %125 to i64, !dbg !5348
  %arrayidx110 = getelementptr inbounds ptr, ptr %124, i64 %idxprom109, !dbg !5348
  store ptr %call108, ptr %arrayidx110, align 8, !dbg !5350, !tbaa !1527
  %126 = load ptr, ptr %stringMap, align 8, !dbg !5351, !tbaa !1527
  %127 = load i32, ptr %nbatoms, align 4, !dbg !5353, !tbaa !1767
  %idxprom111 = sext i32 %127 to i64, !dbg !5351
  %arrayidx112 = getelementptr inbounds ptr, ptr %126, i64 %idxprom111, !dbg !5351
  %128 = load ptr, ptr %arrayidx112, align 8, !dbg !5351, !tbaa !1527
  %cmp113 = icmp eq ptr %128, null, !dbg !5354
  br i1 %cmp113, label %if.then115, label %if.end125, !dbg !5355

if.then115:                                       ; preds = %if.then105
  store i32 0, ptr %i, align 4, !dbg !5356, !tbaa !1767
  br label %for.cond116, !dbg !5359

for.cond116:                                      ; preds = %for.inc122, %if.then115
  %129 = load i32, ptr %i, align 4, !dbg !5360, !tbaa !1767
  %130 = load i32, ptr %nbatoms, align 4, !dbg !5362, !tbaa !1767
  %cmp117 = icmp slt i32 %129, %130, !dbg !5363
  br i1 %cmp117, label %for.body119, label %for.end124, !dbg !5364

for.body119:                                      ; preds = %for.cond116
  %131 = load ptr, ptr @xmlFree, align 8, !dbg !5365, !tbaa !1527
  %132 = load ptr, ptr %stringMap, align 8, !dbg !5366, !tbaa !1527
  %133 = load i32, ptr %i, align 4, !dbg !5367, !tbaa !1767
  %idxprom120 = sext i32 %133 to i64, !dbg !5366
  %arrayidx121 = getelementptr inbounds ptr, ptr %132, i64 %idxprom120, !dbg !5366
  %134 = load ptr, ptr %arrayidx121, align 8, !dbg !5366, !tbaa !1527
  call void %131(ptr noundef %134), !dbg !5365
  br label %for.inc122, !dbg !5365

for.inc122:                                       ; preds = %for.body119
  %135 = load i32, ptr %i, align 4, !dbg !5368, !tbaa !1767
  %inc123 = add nsw i32 %135, 1, !dbg !5368
  store i32 %inc123, ptr %i, align 4, !dbg !5368, !tbaa !1767
  br label %for.cond116, !dbg !5369, !llvm.loop !5370

for.end124:                                       ; preds = %for.cond116
  %136 = load ptr, ptr @xmlFree, align 8, !dbg !5372, !tbaa !1527
  %137 = load ptr, ptr %stringRemap, align 8, !dbg !5373, !tbaa !1527
  call void %136(ptr noundef %137), !dbg !5372
  %138 = load ptr, ptr @xmlFree, align 8, !dbg !5374, !tbaa !1527
  %139 = load ptr, ptr %stringMap, align 8, !dbg !5375, !tbaa !1527
  call void %138(ptr noundef %139), !dbg !5374
  %140 = load ptr, ptr @xmlFree, align 8, !dbg !5376, !tbaa !1527
  %141 = load ptr, ptr %stateRemap, align 8, !dbg !5377, !tbaa !1527
  call void %140(ptr noundef %141), !dbg !5376
  %142 = load ptr, ptr @xmlFree, align 8, !dbg !5378, !tbaa !1527
  %143 = load ptr, ptr %ret, align 8, !dbg !5379, !tbaa !1527
  call void %142(ptr noundef %143), !dbg !5378
  store ptr null, ptr %retval, align 8, !dbg !5380
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup312, !dbg !5380

if.end125:                                        ; preds = %if.then105
  %144 = load i32, ptr %nbatoms, align 4, !dbg !5381, !tbaa !1767
  %inc126 = add nsw i32 %144, 1, !dbg !5381
  store i32 %inc126, ptr %nbatoms, align 4, !dbg !5381, !tbaa !1767
  br label %if.end127, !dbg !5382

if.end127:                                        ; preds = %if.end125, %for.end102
  br label %if.end138, !dbg !5383

if.else128:                                       ; preds = %land.lhs.true79, %for.body72
  %145 = load ptr, ptr @xmlFree, align 8, !dbg !5384, !tbaa !1527
  %146 = load ptr, ptr %stateRemap, align 8, !dbg !5386, !tbaa !1527
  call void %145(ptr noundef %146), !dbg !5384
  %147 = load ptr, ptr @xmlFree, align 8, !dbg !5387, !tbaa !1527
  %148 = load ptr, ptr %stringRemap, align 8, !dbg !5388, !tbaa !1527
  call void %147(ptr noundef %148), !dbg !5387
  store i32 0, ptr %i, align 4, !dbg !5389, !tbaa !1767
  br label %for.cond129, !dbg !5391

for.cond129:                                      ; preds = %for.inc135, %if.else128
  %149 = load i32, ptr %i, align 4, !dbg !5392, !tbaa !1767
  %150 = load i32, ptr %nbatoms, align 4, !dbg !5394, !tbaa !1767
  %cmp130 = icmp slt i32 %149, %150, !dbg !5395
  br i1 %cmp130, label %for.body132, label %for.end137, !dbg !5396

for.body132:                                      ; preds = %for.cond129
  %151 = load ptr, ptr @xmlFree, align 8, !dbg !5397, !tbaa !1527
  %152 = load ptr, ptr %stringMap, align 8, !dbg !5398, !tbaa !1527
  %153 = load i32, ptr %i, align 4, !dbg !5399, !tbaa !1767
  %idxprom133 = sext i32 %153 to i64, !dbg !5398
  %arrayidx134 = getelementptr inbounds ptr, ptr %152, i64 %idxprom133, !dbg !5398
  %154 = load ptr, ptr %arrayidx134, align 8, !dbg !5398, !tbaa !1527
  call void %151(ptr noundef %154), !dbg !5397
  br label %for.inc135, !dbg !5397

for.inc135:                                       ; preds = %for.body132
  %155 = load i32, ptr %i, align 4, !dbg !5400, !tbaa !1767
  %inc136 = add nsw i32 %155, 1, !dbg !5400
  store i32 %inc136, ptr %i, align 4, !dbg !5400, !tbaa !1767
  br label %for.cond129, !dbg !5401, !llvm.loop !5402

for.end137:                                       ; preds = %for.cond129
  %156 = load ptr, ptr @xmlFree, align 8, !dbg !5404, !tbaa !1527
  %157 = load ptr, ptr %stringMap, align 8, !dbg !5405, !tbaa !1527
  call void %156(ptr noundef %157), !dbg !5404
  %158 = load ptr, ptr @xmlFree, align 8, !dbg !5406, !tbaa !1527
  %159 = load ptr, ptr %ret, align 8, !dbg !5407, !tbaa !1527
  call void %158(ptr noundef %159), !dbg !5406
  store ptr null, ptr %retval, align 8, !dbg !5408
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup312, !dbg !5408

if.end138:                                        ; preds = %if.end127
  br label %for.inc139, !dbg !5409

for.inc139:                                       ; preds = %if.end138
  %160 = load i32, ptr %i, align 4, !dbg !5410, !tbaa !1767
  %inc140 = add nsw i32 %160, 1, !dbg !5410
  store i32 %inc140, ptr %i, align 4, !dbg !5410, !tbaa !1767
  br label %for.cond68, !dbg !5411, !llvm.loop !5412

for.end141:                                       ; preds = %for.cond68
  %161 = load i32, ptr %nbstates, align 4, !dbg !5414, !tbaa !1767
  %add = add nsw i32 %161, 1, !dbg !5415
  %conv142 = sext i32 %add to i64, !dbg !5414
  %162 = load i32, ptr %nbatoms, align 4, !dbg !5416, !tbaa !1767
  %add143 = add nsw i32 %162, 1, !dbg !5417
  %conv144 = sext i32 %add143 to i64, !dbg !5416
  %call145 = call ptr @xmlRegCalloc2(i64 noundef %conv142, i64 noundef %conv144, i64 noundef 4), !dbg !5418
  store ptr %call145, ptr %transitions, align 8, !dbg !5419, !tbaa !1527
  %163 = load ptr, ptr %transitions, align 8, !dbg !5420, !tbaa !1527
  %cmp146 = icmp eq ptr %163, null, !dbg !5422
  br i1 %cmp146, label %if.then148, label %if.end158, !dbg !5423

if.then148:                                       ; preds = %for.end141
  %164 = load ptr, ptr @xmlFree, align 8, !dbg !5424, !tbaa !1527
  %165 = load ptr, ptr %stateRemap, align 8, !dbg !5426, !tbaa !1527
  call void %164(ptr noundef %165), !dbg !5424
  %166 = load ptr, ptr @xmlFree, align 8, !dbg !5427, !tbaa !1527
  %167 = load ptr, ptr %stringRemap, align 8, !dbg !5428, !tbaa !1527
  call void %166(ptr noundef %167), !dbg !5427
  store i32 0, ptr %i, align 4, !dbg !5429, !tbaa !1767
  br label %for.cond149, !dbg !5431

for.cond149:                                      ; preds = %for.inc155, %if.then148
  %168 = load i32, ptr %i, align 4, !dbg !5432, !tbaa !1767
  %169 = load i32, ptr %nbatoms, align 4, !dbg !5434, !tbaa !1767
  %cmp150 = icmp slt i32 %168, %169, !dbg !5435
  br i1 %cmp150, label %for.body152, label %for.end157, !dbg !5436

for.body152:                                      ; preds = %for.cond149
  %170 = load ptr, ptr @xmlFree, align 8, !dbg !5437, !tbaa !1527
  %171 = load ptr, ptr %stringMap, align 8, !dbg !5438, !tbaa !1527
  %172 = load i32, ptr %i, align 4, !dbg !5439, !tbaa !1767
  %idxprom153 = sext i32 %172 to i64, !dbg !5438
  %arrayidx154 = getelementptr inbounds ptr, ptr %171, i64 %idxprom153, !dbg !5438
  %173 = load ptr, ptr %arrayidx154, align 8, !dbg !5438, !tbaa !1527
  call void %170(ptr noundef %173), !dbg !5437
  br label %for.inc155, !dbg !5437

for.inc155:                                       ; preds = %for.body152
  %174 = load i32, ptr %i, align 4, !dbg !5440, !tbaa !1767
  %inc156 = add nsw i32 %174, 1, !dbg !5440
  store i32 %inc156, ptr %i, align 4, !dbg !5440, !tbaa !1767
  br label %for.cond149, !dbg !5441, !llvm.loop !5442

for.end157:                                       ; preds = %for.cond149
  %175 = load ptr, ptr @xmlFree, align 8, !dbg !5444, !tbaa !1527
  %176 = load ptr, ptr %stringMap, align 8, !dbg !5445, !tbaa !1527
  call void %175(ptr noundef %176), !dbg !5444
  %177 = load ptr, ptr @xmlFree, align 8, !dbg !5446, !tbaa !1527
  %178 = load ptr, ptr %ret, align 8, !dbg !5447, !tbaa !1527
  call void %177(ptr noundef %178), !dbg !5446
  store ptr null, ptr %retval, align 8, !dbg !5448
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup312, !dbg !5448

if.end158:                                        ; preds = %for.end141
  store ptr null, ptr %transdata, align 8, !dbg !5449, !tbaa !1527
  store i32 0, ptr %i, align 4, !dbg !5450, !tbaa !1767
  br label %for.cond159, !dbg !5451

for.cond159:                                      ; preds = %for.inc267, %if.end158
  %179 = load i32, ptr %i, align 4, !dbg !5452, !tbaa !1767
  %180 = load ptr, ptr %ret, align 8, !dbg !5453, !tbaa !1527
  %nbStates160 = getelementptr inbounds %struct._xmlRegexp, ptr %180, i32 0, i32 1, !dbg !5454
  %181 = load i32, ptr %nbStates160, align 8, !dbg !5454, !tbaa !3896
  %cmp161 = icmp slt i32 %179, %181, !dbg !5455
  br i1 %cmp161, label %for.body163, label %for.end269, !dbg !5456

for.body163:                                      ; preds = %for.cond159
  call void @llvm.lifetime.start.p0(i64 4, ptr %stateno) #8, !dbg !5457
  tail call void @llvm.dbg.declare(metadata ptr %stateno, metadata !5073, metadata !DIExpression()), !dbg !5458
  call void @llvm.lifetime.start.p0(i64 4, ptr %atomno) #8, !dbg !5457
  tail call void @llvm.dbg.declare(metadata ptr %atomno, metadata !5077, metadata !DIExpression()), !dbg !5459
  call void @llvm.lifetime.start.p0(i64 4, ptr %targetno) #8, !dbg !5457
  tail call void @llvm.dbg.declare(metadata ptr %targetno, metadata !5078, metadata !DIExpression()), !dbg !5460
  call void @llvm.lifetime.start.p0(i64 4, ptr %prev) #8, !dbg !5457
  tail call void @llvm.dbg.declare(metadata ptr %prev, metadata !5079, metadata !DIExpression()), !dbg !5461
  call void @llvm.lifetime.start.p0(i64 8, ptr %state) #8, !dbg !5462
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !5080, metadata !DIExpression()), !dbg !5463
  call void @llvm.lifetime.start.p0(i64 8, ptr %trans) #8, !dbg !5464
  tail call void @llvm.dbg.declare(metadata ptr %trans, metadata !5081, metadata !DIExpression()), !dbg !5465
  %182 = load ptr, ptr %stateRemap, align 8, !dbg !5466, !tbaa !1527
  %183 = load i32, ptr %i, align 4, !dbg !5467, !tbaa !1767
  %idxprom164 = sext i32 %183 to i64, !dbg !5466
  %arrayidx165 = getelementptr inbounds i32, ptr %182, i64 %idxprom164, !dbg !5466
  %184 = load i32, ptr %arrayidx165, align 4, !dbg !5466, !tbaa !1767
  store i32 %184, ptr %stateno, align 4, !dbg !5468, !tbaa !1767
  %185 = load i32, ptr %stateno, align 4, !dbg !5469, !tbaa !1767
  %cmp166 = icmp eq i32 %185, -1, !dbg !5471
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !5472

if.then168:                                       ; preds = %for.body163
  store i32 22, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5473

if.end169:                                        ; preds = %for.body163
  %186 = load ptr, ptr %ret, align 8, !dbg !5474, !tbaa !1527
  %states170 = getelementptr inbounds %struct._xmlRegexp, ptr %186, i32 0, i32 2, !dbg !5475
  %187 = load ptr, ptr %states170, align 8, !dbg !5475, !tbaa !1551
  %188 = load i32, ptr %i, align 4, !dbg !5476, !tbaa !1767
  %idxprom171 = sext i32 %188 to i64, !dbg !5474
  %arrayidx172 = getelementptr inbounds ptr, ptr %187, i64 %idxprom171, !dbg !5474
  %189 = load ptr, ptr %arrayidx172, align 8, !dbg !5474, !tbaa !1527
  store ptr %189, ptr %state, align 8, !dbg !5477, !tbaa !1527
  %190 = load ptr, ptr %state, align 8, !dbg !5478, !tbaa !1527
  %type173 = getelementptr inbounds %struct._xmlAutomataState, ptr %190, i32 0, i32 0, !dbg !5479
  %191 = load i32, ptr %type173, align 8, !dbg !5479, !tbaa !1984
  %192 = load ptr, ptr %transitions, align 8, !dbg !5480, !tbaa !1527
  %193 = load i32, ptr %stateno, align 4, !dbg !5481, !tbaa !1767
  %194 = load i32, ptr %nbatoms, align 4, !dbg !5482, !tbaa !1767
  %add174 = add nsw i32 %194, 1, !dbg !5483
  %mul175 = mul nsw i32 %193, %add174, !dbg !5484
  %idxprom176 = sext i32 %mul175 to i64, !dbg !5480
  %arrayidx177 = getelementptr inbounds i32, ptr %192, i64 %idxprom176, !dbg !5480
  store i32 %191, ptr %arrayidx177, align 4, !dbg !5485, !tbaa !1767
  store i32 0, ptr %j, align 4, !dbg !5486, !tbaa !1767
  br label %for.cond178, !dbg !5488

for.cond178:                                      ; preds = %for.inc259, %if.end169
  %195 = load i32, ptr %j, align 4, !dbg !5489, !tbaa !1767
  %196 = load ptr, ptr %state, align 8, !dbg !5491, !tbaa !1527
  %nbTrans = getelementptr inbounds %struct._xmlAutomataState, ptr %196, i32 0, i32 6, !dbg !5492
  %197 = load i32, ptr %nbTrans, align 8, !dbg !5492, !tbaa !2052
  %cmp179 = icmp slt i32 %195, %197, !dbg !5493
  br i1 %cmp179, label %for.body181, label %for.end261, !dbg !5494

for.body181:                                      ; preds = %for.cond178
  %198 = load ptr, ptr %state, align 8, !dbg !5495, !tbaa !1527
  %trans182 = getelementptr inbounds %struct._xmlAutomataState, ptr %198, i32 0, i32 7, !dbg !5497
  %199 = load ptr, ptr %trans182, align 8, !dbg !5497, !tbaa !2058
  %200 = load i32, ptr %j, align 4, !dbg !5498, !tbaa !1767
  %idxprom183 = sext i32 %200 to i64, !dbg !5495
  %arrayidx184 = getelementptr inbounds %struct._xmlRegTrans, ptr %199, i64 %idxprom183, !dbg !5495
  store ptr %arrayidx184, ptr %trans, align 8, !dbg !5499, !tbaa !1527
  %201 = load ptr, ptr %trans, align 8, !dbg !5500, !tbaa !1527
  %to = getelementptr inbounds %struct._xmlRegTrans, ptr %201, i32 0, i32 1, !dbg !5502
  %202 = load i32, ptr %to, align 8, !dbg !5502, !tbaa !2065
  %cmp185 = icmp eq i32 %202, -1, !dbg !5503
  br i1 %cmp185, label %if.then189, label %lor.lhs.false, !dbg !5504

lor.lhs.false:                                    ; preds = %for.body181
  %203 = load ptr, ptr %trans, align 8, !dbg !5505, !tbaa !1527
  %atom = getelementptr inbounds %struct._xmlRegTrans, ptr %203, i32 0, i32 0, !dbg !5506
  %204 = load ptr, ptr %atom, align 8, !dbg !5506, !tbaa !2072
  %cmp187 = icmp eq ptr %204, null, !dbg !5507
  br i1 %cmp187, label %if.then189, label %if.end190, !dbg !5508

if.then189:                                       ; preds = %lor.lhs.false, %for.body181
  br label %for.inc259, !dbg !5509

if.end190:                                        ; preds = %lor.lhs.false
  %205 = load ptr, ptr %stringRemap, align 8, !dbg !5510, !tbaa !1527
  %206 = load ptr, ptr %trans, align 8, !dbg !5511, !tbaa !1527
  %atom191 = getelementptr inbounds %struct._xmlRegTrans, ptr %206, i32 0, i32 0, !dbg !5512
  %207 = load ptr, ptr %atom191, align 8, !dbg !5512, !tbaa !2072
  %no = getelementptr inbounds %struct._xmlRegAtom, ptr %207, i32 0, i32 0, !dbg !5513
  %208 = load i32, ptr %no, align 8, !dbg !5513, !tbaa !5514
  %idxprom192 = sext i32 %208 to i64, !dbg !5510
  %arrayidx193 = getelementptr inbounds i32, ptr %205, i64 %idxprom192, !dbg !5510
  %209 = load i32, ptr %arrayidx193, align 4, !dbg !5510, !tbaa !1767
  store i32 %209, ptr %atomno, align 4, !dbg !5515, !tbaa !1767
  %210 = load ptr, ptr %trans, align 8, !dbg !5516, !tbaa !1527
  %atom194 = getelementptr inbounds %struct._xmlRegTrans, ptr %210, i32 0, i32 0, !dbg !5518
  %211 = load ptr, ptr %atom194, align 8, !dbg !5518, !tbaa !2072
  %data = getelementptr inbounds %struct._xmlRegAtom, ptr %211, i32 0, i32 15, !dbg !5519
  %212 = load ptr, ptr %data, align 8, !dbg !5519, !tbaa !2554
  %cmp195 = icmp ne ptr %212, null, !dbg !5520
  br i1 %cmp195, label %land.lhs.true197, label %if.end208, !dbg !5521

land.lhs.true197:                                 ; preds = %if.end190
  %213 = load ptr, ptr %transdata, align 8, !dbg !5522, !tbaa !1527
  %cmp198 = icmp eq ptr %213, null, !dbg !5523
  br i1 %cmp198, label %if.then200, label %if.end208, !dbg !5524

if.then200:                                       ; preds = %land.lhs.true197
  %214 = load i32, ptr %nbstates, align 4, !dbg !5525, !tbaa !1767
  %conv201 = sext i32 %214 to i64, !dbg !5525
  %215 = load i32, ptr %nbatoms, align 4, !dbg !5527, !tbaa !1767
  %conv202 = sext i32 %215 to i64, !dbg !5527
  %call203 = call ptr @xmlRegCalloc2(i64 noundef %conv201, i64 noundef %conv202, i64 noundef 8), !dbg !5528
  store ptr %call203, ptr %transdata, align 8, !dbg !5529, !tbaa !1527
  %216 = load ptr, ptr %transdata, align 8, !dbg !5530, !tbaa !1527
  %cmp204 = icmp eq ptr %216, null, !dbg !5532
  br i1 %cmp204, label %if.then206, label %if.end207, !dbg !5533

if.then206:                                       ; preds = %if.then200
  %217 = load ptr, ptr %ctxt.addr, align 8, !dbg !5534, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %217, ptr noundef @.str.129), !dbg !5536
  br label %for.end261, !dbg !5537

if.end207:                                        ; preds = %if.then200
  br label %if.end208, !dbg !5538

if.end208:                                        ; preds = %if.end207, %land.lhs.true197, %if.end190
  %218 = load ptr, ptr %stateRemap, align 8, !dbg !5539, !tbaa !1527
  %219 = load ptr, ptr %trans, align 8, !dbg !5540, !tbaa !1527
  %to209 = getelementptr inbounds %struct._xmlRegTrans, ptr %219, i32 0, i32 1, !dbg !5541
  %220 = load i32, ptr %to209, align 8, !dbg !5541, !tbaa !2065
  %idxprom210 = sext i32 %220 to i64, !dbg !5539
  %arrayidx211 = getelementptr inbounds i32, ptr %218, i64 %idxprom210, !dbg !5539
  %221 = load i32, ptr %arrayidx211, align 4, !dbg !5539, !tbaa !1767
  store i32 %221, ptr %targetno, align 4, !dbg !5542, !tbaa !1767
  %222 = load ptr, ptr %transitions, align 8, !dbg !5543, !tbaa !1527
  %223 = load i32, ptr %stateno, align 4, !dbg !5544, !tbaa !1767
  %224 = load i32, ptr %nbatoms, align 4, !dbg !5545, !tbaa !1767
  %add212 = add nsw i32 %224, 1, !dbg !5546
  %mul213 = mul nsw i32 %223, %add212, !dbg !5547
  %225 = load i32, ptr %atomno, align 4, !dbg !5548, !tbaa !1767
  %add214 = add nsw i32 %mul213, %225, !dbg !5549
  %add215 = add nsw i32 %add214, 1, !dbg !5550
  %idxprom216 = sext i32 %add215 to i64, !dbg !5543
  %arrayidx217 = getelementptr inbounds i32, ptr %222, i64 %idxprom216, !dbg !5543
  %226 = load i32, ptr %arrayidx217, align 4, !dbg !5543, !tbaa !1767
  store i32 %226, ptr %prev, align 4, !dbg !5551, !tbaa !1767
  %227 = load i32, ptr %prev, align 4, !dbg !5552, !tbaa !1767
  %cmp218 = icmp ne i32 %227, 0, !dbg !5554
  br i1 %cmp218, label %if.then220, label %if.else240, !dbg !5555

if.then220:                                       ; preds = %if.end208
  %228 = load i32, ptr %prev, align 4, !dbg !5556, !tbaa !1767
  %229 = load i32, ptr %targetno, align 4, !dbg !5559, !tbaa !1767
  %add221 = add nsw i32 %229, 1, !dbg !5560
  %cmp222 = icmp ne i32 %228, %add221, !dbg !5561
  br i1 %cmp222, label %if.then224, label %if.end239, !dbg !5562

if.then224:                                       ; preds = %if.then220
  %230 = load ptr, ptr %ret, align 8, !dbg !5563, !tbaa !1527
  %determinist225 = getelementptr inbounds %struct._xmlRegexp, ptr %230, i32 0, i32 7, !dbg !5565
  store i32 0, ptr %determinist225, align 8, !dbg !5566, !tbaa !5139
  %231 = load ptr, ptr %transdata, align 8, !dbg !5567, !tbaa !1527
  %cmp226 = icmp ne ptr %231, null, !dbg !5569
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !5570

if.then228:                                       ; preds = %if.then224
  %232 = load ptr, ptr @xmlFree, align 8, !dbg !5571, !tbaa !1527
  %233 = load ptr, ptr %transdata, align 8, !dbg !5572, !tbaa !1527
  call void %232(ptr noundef %233), !dbg !5571
  br label %if.end229, !dbg !5571

if.end229:                                        ; preds = %if.then228, %if.then224
  %234 = load ptr, ptr @xmlFree, align 8, !dbg !5573, !tbaa !1527
  %235 = load ptr, ptr %transitions, align 8, !dbg !5574, !tbaa !1527
  call void %234(ptr noundef %235), !dbg !5573
  %236 = load ptr, ptr @xmlFree, align 8, !dbg !5575, !tbaa !1527
  %237 = load ptr, ptr %stateRemap, align 8, !dbg !5576, !tbaa !1527
  call void %236(ptr noundef %237), !dbg !5575
  %238 = load ptr, ptr @xmlFree, align 8, !dbg !5577, !tbaa !1527
  %239 = load ptr, ptr %stringRemap, align 8, !dbg !5578, !tbaa !1527
  call void %238(ptr noundef %239), !dbg !5577
  store i32 0, ptr %i, align 4, !dbg !5579, !tbaa !1767
  br label %for.cond230, !dbg !5581

for.cond230:                                      ; preds = %for.inc236, %if.end229
  %240 = load i32, ptr %i, align 4, !dbg !5582, !tbaa !1767
  %241 = load i32, ptr %nbatoms, align 4, !dbg !5584, !tbaa !1767
  %cmp231 = icmp slt i32 %240, %241, !dbg !5585
  br i1 %cmp231, label %for.body233, label %for.end238, !dbg !5586

for.body233:                                      ; preds = %for.cond230
  %242 = load ptr, ptr @xmlFree, align 8, !dbg !5587, !tbaa !1527
  %243 = load ptr, ptr %stringMap, align 8, !dbg !5588, !tbaa !1527
  %244 = load i32, ptr %i, align 4, !dbg !5589, !tbaa !1767
  %idxprom234 = sext i32 %244 to i64, !dbg !5588
  %arrayidx235 = getelementptr inbounds ptr, ptr %243, i64 %idxprom234, !dbg !5588
  %245 = load ptr, ptr %arrayidx235, align 8, !dbg !5588, !tbaa !1527
  call void %242(ptr noundef %245), !dbg !5587
  br label %for.inc236, !dbg !5587

for.inc236:                                       ; preds = %for.body233
  %246 = load i32, ptr %i, align 4, !dbg !5590, !tbaa !1767
  %inc237 = add nsw i32 %246, 1, !dbg !5590
  store i32 %inc237, ptr %i, align 4, !dbg !5590, !tbaa !1767
  br label %for.cond230, !dbg !5591, !llvm.loop !5592

for.end238:                                       ; preds = %for.cond230
  %247 = load ptr, ptr @xmlFree, align 8, !dbg !5594, !tbaa !1527
  %248 = load ptr, ptr %stringMap, align 8, !dbg !5595, !tbaa !1527
  call void %247(ptr noundef %248), !dbg !5594
  store i32 29, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5596

if.end239:                                        ; preds = %if.then220
  br label %if.end258, !dbg !5597

if.else240:                                       ; preds = %if.end208
  %249 = load i32, ptr %targetno, align 4, !dbg !5598, !tbaa !1767
  %add241 = add nsw i32 %249, 1, !dbg !5600
  %250 = load ptr, ptr %transitions, align 8, !dbg !5601, !tbaa !1527
  %251 = load i32, ptr %stateno, align 4, !dbg !5602, !tbaa !1767
  %252 = load i32, ptr %nbatoms, align 4, !dbg !5603, !tbaa !1767
  %add242 = add nsw i32 %252, 1, !dbg !5604
  %mul243 = mul nsw i32 %251, %add242, !dbg !5605
  %253 = load i32, ptr %atomno, align 4, !dbg !5606, !tbaa !1767
  %add244 = add nsw i32 %mul243, %253, !dbg !5607
  %add245 = add nsw i32 %add244, 1, !dbg !5608
  %idxprom246 = sext i32 %add245 to i64, !dbg !5601
  %arrayidx247 = getelementptr inbounds i32, ptr %250, i64 %idxprom246, !dbg !5601
  store i32 %add241, ptr %arrayidx247, align 4, !dbg !5609, !tbaa !1767
  %254 = load ptr, ptr %transdata, align 8, !dbg !5610, !tbaa !1527
  %cmp248 = icmp ne ptr %254, null, !dbg !5612
  br i1 %cmp248, label %if.then250, label %if.end257, !dbg !5613

if.then250:                                       ; preds = %if.else240
  %255 = load ptr, ptr %trans, align 8, !dbg !5614, !tbaa !1527
  %atom251 = getelementptr inbounds %struct._xmlRegTrans, ptr %255, i32 0, i32 0, !dbg !5615
  %256 = load ptr, ptr %atom251, align 8, !dbg !5615, !tbaa !2072
  %data252 = getelementptr inbounds %struct._xmlRegAtom, ptr %256, i32 0, i32 15, !dbg !5616
  %257 = load ptr, ptr %data252, align 8, !dbg !5616, !tbaa !2554
  %258 = load ptr, ptr %transdata, align 8, !dbg !5617, !tbaa !1527
  %259 = load i32, ptr %stateno, align 4, !dbg !5618, !tbaa !1767
  %260 = load i32, ptr %nbatoms, align 4, !dbg !5619, !tbaa !1767
  %mul253 = mul nsw i32 %259, %260, !dbg !5620
  %261 = load i32, ptr %atomno, align 4, !dbg !5621, !tbaa !1767
  %add254 = add nsw i32 %mul253, %261, !dbg !5622
  %idxprom255 = sext i32 %add254 to i64, !dbg !5617
  %arrayidx256 = getelementptr inbounds ptr, ptr %258, i64 %idxprom255, !dbg !5617
  store ptr %257, ptr %arrayidx256, align 8, !dbg !5623, !tbaa !1527
  br label %if.end257, !dbg !5617

if.end257:                                        ; preds = %if.then250, %if.else240
  br label %if.end258

if.end258:                                        ; preds = %if.end257, %if.end239
  br label %for.inc259, !dbg !5624

for.inc259:                                       ; preds = %if.end258, %if.then189
  %262 = load i32, ptr %j, align 4, !dbg !5625, !tbaa !1767
  %inc260 = add nsw i32 %262, 1, !dbg !5625
  store i32 %inc260, ptr %j, align 4, !dbg !5625, !tbaa !1767
  br label %for.cond178, !dbg !5626, !llvm.loop !5627

for.end261:                                       ; preds = %if.then206, %for.cond178
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5629
  br label %cleanup, !dbg !5629

cleanup:                                          ; preds = %for.end238, %for.end261, %if.then168
  call void @llvm.lifetime.end.p0(i64 8, ptr %trans) #8, !dbg !5629
  call void @llvm.lifetime.end.p0(i64 8, ptr %state) #8, !dbg !5629
  call void @llvm.lifetime.end.p0(i64 4, ptr %prev) #8, !dbg !5629
  call void @llvm.lifetime.end.p0(i64 4, ptr %targetno) #8, !dbg !5629
  call void @llvm.lifetime.end.p0(i64 4, ptr %atomno) #8, !dbg !5629
  call void @llvm.lifetime.end.p0(i64 4, ptr %stateno) #8, !dbg !5629
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup312 [
    i32 0, label %cleanup.cont
    i32 22, label %for.inc267
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc267, !dbg !5630

for.inc267:                                       ; preds = %cleanup.cont, %cleanup
  %263 = load i32, ptr %i, align 4, !dbg !5631, !tbaa !1767
  %inc268 = add nsw i32 %263, 1, !dbg !5631
  store i32 %inc268, ptr %i, align 4, !dbg !5631, !tbaa !1767
  br label %for.cond159, !dbg !5632, !llvm.loop !5633

for.end269:                                       ; preds = %for.cond159
  %264 = load ptr, ptr %ret, align 8, !dbg !5635, !tbaa !1527
  %determinist270 = getelementptr inbounds %struct._xmlRegexp, ptr %264, i32 0, i32 7, !dbg !5636
  store i32 1, ptr %determinist270, align 8, !dbg !5637, !tbaa !5139
  %265 = load ptr, ptr %ret, align 8, !dbg !5638, !tbaa !1527
  %states271 = getelementptr inbounds %struct._xmlRegexp, ptr %265, i32 0, i32 2, !dbg !5640
  %266 = load ptr, ptr %states271, align 8, !dbg !5640, !tbaa !1551
  %cmp272 = icmp ne ptr %266, null, !dbg !5641
  br i1 %cmp272, label %if.then274, label %if.end287, !dbg !5642

if.then274:                                       ; preds = %for.end269
  store i32 0, ptr %i, align 4, !dbg !5643, !tbaa !1767
  br label %for.cond275, !dbg !5646

for.cond275:                                      ; preds = %for.inc283, %if.then274
  %267 = load i32, ptr %i, align 4, !dbg !5647, !tbaa !1767
  %268 = load ptr, ptr %ret, align 8, !dbg !5649, !tbaa !1527
  %nbStates276 = getelementptr inbounds %struct._xmlRegexp, ptr %268, i32 0, i32 1, !dbg !5650
  %269 = load i32, ptr %nbStates276, align 8, !dbg !5650, !tbaa !3896
  %cmp277 = icmp slt i32 %267, %269, !dbg !5651
  br i1 %cmp277, label %for.body279, label %for.end285, !dbg !5652

for.body279:                                      ; preds = %for.cond275
  %270 = load ptr, ptr %ret, align 8, !dbg !5653, !tbaa !1527
  %states280 = getelementptr inbounds %struct._xmlRegexp, ptr %270, i32 0, i32 2, !dbg !5654
  %271 = load ptr, ptr %states280, align 8, !dbg !5654, !tbaa !1551
  %272 = load i32, ptr %i, align 4, !dbg !5655, !tbaa !1767
  %idxprom281 = sext i32 %272 to i64, !dbg !5653
  %arrayidx282 = getelementptr inbounds ptr, ptr %271, i64 %idxprom281, !dbg !5653
  %273 = load ptr, ptr %arrayidx282, align 8, !dbg !5653, !tbaa !1527
  call void @xmlRegFreeState(ptr noundef %273), !dbg !5656
  br label %for.inc283, !dbg !5656

for.inc283:                                       ; preds = %for.body279
  %274 = load i32, ptr %i, align 4, !dbg !5657, !tbaa !1767
  %inc284 = add nsw i32 %274, 1, !dbg !5657
  store i32 %inc284, ptr %i, align 4, !dbg !5657, !tbaa !1767
  br label %for.cond275, !dbg !5658, !llvm.loop !5659

for.end285:                                       ; preds = %for.cond275
  %275 = load ptr, ptr @xmlFree, align 8, !dbg !5661, !tbaa !1527
  %276 = load ptr, ptr %ret, align 8, !dbg !5662, !tbaa !1527
  %states286 = getelementptr inbounds %struct._xmlRegexp, ptr %276, i32 0, i32 2, !dbg !5663
  %277 = load ptr, ptr %states286, align 8, !dbg !5663, !tbaa !1551
  call void %275(ptr noundef %277), !dbg !5661
  br label %if.end287, !dbg !5664

if.end287:                                        ; preds = %for.end285, %for.end269
  %278 = load ptr, ptr %ret, align 8, !dbg !5665, !tbaa !1527
  %states288 = getelementptr inbounds %struct._xmlRegexp, ptr %278, i32 0, i32 2, !dbg !5666
  store ptr null, ptr %states288, align 8, !dbg !5667, !tbaa !1551
  %279 = load ptr, ptr %ret, align 8, !dbg !5668, !tbaa !1527
  %nbStates289 = getelementptr inbounds %struct._xmlRegexp, ptr %279, i32 0, i32 1, !dbg !5669
  store i32 0, ptr %nbStates289, align 8, !dbg !5670, !tbaa !3896
  %280 = load ptr, ptr %ret, align 8, !dbg !5671, !tbaa !1527
  %atoms290 = getelementptr inbounds %struct._xmlRegexp, ptr %280, i32 0, i32 4, !dbg !5673
  %281 = load ptr, ptr %atoms290, align 8, !dbg !5673, !tbaa !3885
  %cmp291 = icmp ne ptr %281, null, !dbg !5674
  br i1 %cmp291, label %if.then293, label %if.end306, !dbg !5675

if.then293:                                       ; preds = %if.end287
  store i32 0, ptr %i, align 4, !dbg !5676, !tbaa !1767
  br label %for.cond294, !dbg !5679

for.cond294:                                      ; preds = %for.inc302, %if.then293
  %282 = load i32, ptr %i, align 4, !dbg !5680, !tbaa !1767
  %283 = load ptr, ptr %ret, align 8, !dbg !5682, !tbaa !1527
  %nbAtoms295 = getelementptr inbounds %struct._xmlRegexp, ptr %283, i32 0, i32 3, !dbg !5683
  %284 = load i32, ptr %nbAtoms295, align 8, !dbg !5683, !tbaa !3867
  %cmp296 = icmp slt i32 %282, %284, !dbg !5684
  br i1 %cmp296, label %for.body298, label %for.end304, !dbg !5685

for.body298:                                      ; preds = %for.cond294
  %285 = load ptr, ptr %ret, align 8, !dbg !5686, !tbaa !1527
  %atoms299 = getelementptr inbounds %struct._xmlRegexp, ptr %285, i32 0, i32 4, !dbg !5687
  %286 = load ptr, ptr %atoms299, align 8, !dbg !5687, !tbaa !3885
  %287 = load i32, ptr %i, align 4, !dbg !5688, !tbaa !1767
  %idxprom300 = sext i32 %287 to i64, !dbg !5686
  %arrayidx301 = getelementptr inbounds ptr, ptr %286, i64 %idxprom300, !dbg !5686
  %288 = load ptr, ptr %arrayidx301, align 8, !dbg !5686, !tbaa !1527
  call void @xmlRegFreeAtom(ptr noundef %288), !dbg !5689
  br label %for.inc302, !dbg !5689

for.inc302:                                       ; preds = %for.body298
  %289 = load i32, ptr %i, align 4, !dbg !5690, !tbaa !1767
  %inc303 = add nsw i32 %289, 1, !dbg !5690
  store i32 %inc303, ptr %i, align 4, !dbg !5690, !tbaa !1767
  br label %for.cond294, !dbg !5691, !llvm.loop !5692

for.end304:                                       ; preds = %for.cond294
  %290 = load ptr, ptr @xmlFree, align 8, !dbg !5694, !tbaa !1527
  %291 = load ptr, ptr %ret, align 8, !dbg !5695, !tbaa !1527
  %atoms305 = getelementptr inbounds %struct._xmlRegexp, ptr %291, i32 0, i32 4, !dbg !5696
  %292 = load ptr, ptr %atoms305, align 8, !dbg !5696, !tbaa !3885
  call void %290(ptr noundef %292), !dbg !5694
  br label %if.end306, !dbg !5697

if.end306:                                        ; preds = %for.end304, %if.end287
  %293 = load ptr, ptr %ret, align 8, !dbg !5698, !tbaa !1527
  %atoms307 = getelementptr inbounds %struct._xmlRegexp, ptr %293, i32 0, i32 4, !dbg !5699
  store ptr null, ptr %atoms307, align 8, !dbg !5700, !tbaa !3885
  %294 = load ptr, ptr %ret, align 8, !dbg !5701, !tbaa !1527
  %nbAtoms308 = getelementptr inbounds %struct._xmlRegexp, ptr %294, i32 0, i32 3, !dbg !5702
  store i32 0, ptr %nbAtoms308, align 8, !dbg !5703, !tbaa !3867
  %295 = load ptr, ptr %transitions, align 8, !dbg !5704, !tbaa !1527
  %296 = load ptr, ptr %ret, align 8, !dbg !5705, !tbaa !1527
  %compact = getelementptr inbounds %struct._xmlRegexp, ptr %296, i32 0, i32 10, !dbg !5706
  store ptr %295, ptr %compact, align 8, !dbg !5707, !tbaa !1544
  %297 = load ptr, ptr %transdata, align 8, !dbg !5708, !tbaa !1527
  %298 = load ptr, ptr %ret, align 8, !dbg !5709, !tbaa !1527
  %transdata309 = getelementptr inbounds %struct._xmlRegexp, ptr %298, i32 0, i32 11, !dbg !5710
  store ptr %297, ptr %transdata309, align 8, !dbg !5711, !tbaa !3085
  %299 = load ptr, ptr %stringMap, align 8, !dbg !5712, !tbaa !1527
  %300 = load ptr, ptr %ret, align 8, !dbg !5713, !tbaa !1527
  %stringMap310 = getelementptr inbounds %struct._xmlRegexp, ptr %300, i32 0, i32 13, !dbg !5714
  store ptr %299, ptr %stringMap310, align 8, !dbg !5715, !tbaa !3011
  %301 = load i32, ptr %nbatoms, align 4, !dbg !5716, !tbaa !1767
  %302 = load ptr, ptr %ret, align 8, !dbg !5717, !tbaa !1527
  %nbstrings = getelementptr inbounds %struct._xmlRegexp, ptr %302, i32 0, i32 12, !dbg !5718
  store i32 %301, ptr %nbstrings, align 8, !dbg !5719, !tbaa !3026
  %303 = load i32, ptr %nbstates, align 4, !dbg !5720, !tbaa !1767
  %304 = load ptr, ptr %ret, align 8, !dbg !5721, !tbaa !1527
  %nbstates311 = getelementptr inbounds %struct._xmlRegexp, ptr %304, i32 0, i32 9, !dbg !5722
  store i32 %303, ptr %nbstates311, align 8, !dbg !5723, !tbaa !3061
  %305 = load ptr, ptr @xmlFree, align 8, !dbg !5724, !tbaa !1527
  %306 = load ptr, ptr %stateRemap, align 8, !dbg !5725, !tbaa !1527
  call void %305(ptr noundef %306), !dbg !5724
  %307 = load ptr, ptr @xmlFree, align 8, !dbg !5726, !tbaa !1527
  %308 = load ptr, ptr %stringRemap, align 8, !dbg !5727, !tbaa !1527
  call void %307(ptr noundef %308), !dbg !5726
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5728
  br label %cleanup312, !dbg !5728

cleanup312:                                       ; preds = %if.end306, %cleanup, %for.end157, %for.end137, %for.end124, %if.then66, %if.then58, %if.then36
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #8, !dbg !5728
  call void @llvm.lifetime.end.p0(i64 8, ptr %stringMap) #8, !dbg !5728
  call void @llvm.lifetime.end.p0(i64 8, ptr %transdata) #8, !dbg !5728
  call void @llvm.lifetime.end.p0(i64 8, ptr %transitions) #8, !dbg !5728
  call void @llvm.lifetime.end.p0(i64 8, ptr %stringRemap) #8, !dbg !5728
  call void @llvm.lifetime.end.p0(i64 8, ptr %stateRemap) #8, !dbg !5728
  call void @llvm.lifetime.end.p0(i64 4, ptr %nbatoms) #8, !dbg !5728
  call void @llvm.lifetime.end.p0(i64 4, ptr %nbstates) #8, !dbg !5728
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #8, !dbg !5728
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !5728
  %cleanup.dest322 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest322, label %cleanup332 [
    i32 0, label %cleanup.cont323
    i32 29, label %not_determ
  ]

cleanup.cont323:                                  ; preds = %cleanup312
  br label %if.end324, !dbg !5729

if.end324:                                        ; preds = %cleanup.cont323, %land.lhs.true27, %land.lhs.true24, %land.lhs.true21, %land.lhs.true19, %land.lhs.true, %if.end14
  br label %not_determ, !dbg !5730

not_determ:                                       ; preds = %if.end324, %cleanup312
  tail call void @llvm.dbg.label(metadata !5082), !dbg !5731
  %309 = load ptr, ptr %ctxt.addr, align 8, !dbg !5732, !tbaa !1527
  %string325 = getelementptr inbounds %struct._xmlAutomata, ptr %309, i32 0, i32 0, !dbg !5733
  store ptr null, ptr %string325, align 8, !dbg !5734, !tbaa !1723
  %310 = load ptr, ptr %ctxt.addr, align 8, !dbg !5735, !tbaa !1527
  %nbStates326 = getelementptr inbounds %struct._xmlAutomata, ptr %310, i32 0, i32 12, !dbg !5736
  store i32 0, ptr %nbStates326, align 4, !dbg !5737, !tbaa !4359
  %311 = load ptr, ptr %ctxt.addr, align 8, !dbg !5738, !tbaa !1527
  %states327 = getelementptr inbounds %struct._xmlAutomata, ptr %311, i32 0, i32 13, !dbg !5739
  store ptr null, ptr %states327, align 8, !dbg !5740, !tbaa !4343
  %312 = load ptr, ptr %ctxt.addr, align 8, !dbg !5741, !tbaa !1527
  %nbAtoms328 = getelementptr inbounds %struct._xmlAutomata, ptr %312, i32 0, i32 9, !dbg !5742
  store i32 0, ptr %nbAtoms328, align 4, !dbg !5743, !tbaa !4586
  %313 = load ptr, ptr %ctxt.addr, align 8, !dbg !5744, !tbaa !1527
  %atoms329 = getelementptr inbounds %struct._xmlAutomata, ptr %313, i32 0, i32 10, !dbg !5745
  store ptr null, ptr %atoms329, align 8, !dbg !5746, !tbaa !4575
  %314 = load ptr, ptr %ctxt.addr, align 8, !dbg !5747, !tbaa !1527
  %nbCounters330 = getelementptr inbounds %struct._xmlAutomata, ptr %314, i32 0, i32 15, !dbg !5748
  store i32 0, ptr %nbCounters330, align 4, !dbg !5749, !tbaa !5125
  %315 = load ptr, ptr %ctxt.addr, align 8, !dbg !5750, !tbaa !1527
  %counters331 = getelementptr inbounds %struct._xmlAutomata, ptr %315, i32 0, i32 16, !dbg !5751
  store ptr null, ptr %counters331, align 8, !dbg !5752, !tbaa !4604
  %316 = load ptr, ptr %ret, align 8, !dbg !5753, !tbaa !1527
  store ptr %316, ptr %retval, align 8, !dbg !5754
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup332, !dbg !5754

cleanup332:                                       ; preds = %not_determ, %cleanup312, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #8, !dbg !5755
  %317 = load ptr, ptr %retval, align 8, !dbg !5755
  ret ptr %317, !dbg !5755
}

; Function Attrs: nounwind uwtable
define i32 @xmlRegexpExec(ptr noundef %comp, ptr noundef %content) #0 !dbg !5756 {
entry:
  %retval = alloca i32, align 4
  %comp.addr = alloca ptr, align 8
  %content.addr = alloca ptr, align 8
  store ptr %comp, ptr %comp.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %comp.addr, metadata !5760, metadata !DIExpression()), !dbg !5762
  store ptr %content, ptr %content.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %content.addr, metadata !5761, metadata !DIExpression()), !dbg !5763
  %0 = load ptr, ptr %comp.addr, align 8, !dbg !5764, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !5766
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5767

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %content.addr, align 8, !dbg !5768, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !5769
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5770

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, ptr %retval, align 4, !dbg !5771
  br label %return, !dbg !5771

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr %comp.addr, align 8, !dbg !5772, !tbaa !1527
  %3 = load ptr, ptr %content.addr, align 8, !dbg !5773, !tbaa !1527
  %call = call i32 @xmlFARegExec(ptr noundef %2, ptr noundef %3), !dbg !5774
  store i32 %call, ptr %retval, align 4, !dbg !5775
  br label %return, !dbg !5775

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, ptr %retval, align 4, !dbg !5776
  ret i32 %4, !dbg !5776
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlFARegExec(ptr noundef %comp, ptr noundef %content) #0 !dbg !5777 {
entry:
  %retval = alloca i32, align 4
  %comp.addr = alloca ptr, align 8
  %content.addr = alloca ptr, align 8
  %execval = alloca %struct._xmlRegExecCtxt, align 8
  %exec = alloca ptr, align 8
  %ret = alloca i32, align 4
  %codepoint = alloca i32, align 4
  %len = alloca i32, align 4
  %deter = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %trans = alloca ptr, align 8
  %atom = alloca ptr, align 8
  %count90 = alloca i32, align 4
  %counter = alloca ptr, align 8
  %to153 = alloca ptr, align 8
  %counter162 = alloca ptr, align 8
  %transno235 = alloca i32, align 4
  %state237 = alloca ptr, align 8
  %counter340 = alloca ptr, align 8
  %i = alloca i32, align 4
  store ptr %comp, ptr %comp.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %comp.addr, metadata !5779, metadata !DIExpression()), !dbg !5826
  store ptr %content, ptr %content.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %content.addr, metadata !5780, metadata !DIExpression()), !dbg !5827
  call void @llvm.lifetime.start.p0(i64 152, ptr %execval) #8, !dbg !5828
  tail call void @llvm.dbg.declare(metadata ptr %execval, metadata !5781, metadata !DIExpression()), !dbg !5829
  call void @llvm.lifetime.start.p0(i64 8, ptr %exec) #8, !dbg !5830
  tail call void @llvm.dbg.declare(metadata ptr %exec, metadata !5782, metadata !DIExpression()), !dbg !5831
  store ptr %execval, ptr %exec, align 8, !dbg !5831, !tbaa !1527
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !5832
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !5783, metadata !DIExpression()), !dbg !5833
  call void @llvm.lifetime.start.p0(i64 4, ptr %codepoint) #8, !dbg !5832
  tail call void @llvm.dbg.declare(metadata ptr %codepoint, metadata !5784, metadata !DIExpression()), !dbg !5834
  store i32 0, ptr %codepoint, align 4, !dbg !5834, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 4, ptr %len) #8, !dbg !5832
  tail call void @llvm.dbg.declare(metadata ptr %len, metadata !5785, metadata !DIExpression()), !dbg !5835
  call void @llvm.lifetime.start.p0(i64 4, ptr %deter) #8, !dbg !5832
  tail call void @llvm.dbg.declare(metadata ptr %deter, metadata !5786, metadata !DIExpression()), !dbg !5836
  %0 = load ptr, ptr %content.addr, align 8, !dbg !5837, !tbaa !1527
  %1 = load ptr, ptr %exec, align 8, !dbg !5838, !tbaa !1527
  %inputString = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %1, i32 0, i32 16, !dbg !5839
  store ptr %0, ptr %inputString, align 8, !dbg !5840, !tbaa !1569
  %2 = load ptr, ptr %exec, align 8, !dbg !5841, !tbaa !1527
  %index = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %2, i32 0, i32 14, !dbg !5842
  store i32 0, ptr %index, align 8, !dbg !5843, !tbaa !1574
  %3 = load ptr, ptr %exec, align 8, !dbg !5844, !tbaa !1527
  %nbPush = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %3, i32 0, i32 22, !dbg !5845
  store i32 0, ptr %nbPush, align 8, !dbg !5846, !tbaa !1701
  %4 = load ptr, ptr %exec, align 8, !dbg !5847, !tbaa !1527
  %determinist = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %4, i32 0, i32 1, !dbg !5848
  store i32 1, ptr %determinist, align 4, !dbg !5849, !tbaa !1578
  %5 = load ptr, ptr %exec, align 8, !dbg !5850, !tbaa !1527
  %maxRollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %5, i32 0, i32 8, !dbg !5851
  store i32 0, ptr %maxRollbacks, align 8, !dbg !5852, !tbaa !1582
  %6 = load ptr, ptr %exec, align 8, !dbg !5853, !tbaa !1527
  %nbRollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %6, i32 0, i32 9, !dbg !5854
  store i32 0, ptr %nbRollbacks, align 4, !dbg !5855, !tbaa !1586
  %7 = load ptr, ptr %exec, align 8, !dbg !5856, !tbaa !1527
  %rollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %7, i32 0, i32 10, !dbg !5857
  store ptr null, ptr %rollbacks, align 8, !dbg !5858, !tbaa !1590
  %8 = load ptr, ptr %exec, align 8, !dbg !5859, !tbaa !1527
  %status = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %8, i32 0, i32 0, !dbg !5860
  store i32 0, ptr %status, align 8, !dbg !5861, !tbaa !1594
  %9 = load ptr, ptr %comp.addr, align 8, !dbg !5862, !tbaa !1527
  %10 = load ptr, ptr %exec, align 8, !dbg !5863, !tbaa !1527
  %comp1 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %10, i32 0, i32 2, !dbg !5864
  store ptr %9, ptr %comp1, align 8, !dbg !5865, !tbaa !1599
  %11 = load ptr, ptr %comp.addr, align 8, !dbg !5866, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlRegexp, ptr %11, i32 0, i32 2, !dbg !5867
  %12 = load ptr, ptr %states, align 8, !dbg !5867, !tbaa !1551
  %arrayidx = getelementptr inbounds ptr, ptr %12, i64 0, !dbg !5866
  %13 = load ptr, ptr %arrayidx, align 8, !dbg !5866, !tbaa !1527
  %14 = load ptr, ptr %exec, align 8, !dbg !5868, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %14, i32 0, i32 5, !dbg !5869
  store ptr %13, ptr %state, align 8, !dbg !5870, !tbaa !1610
  %15 = load ptr, ptr %exec, align 8, !dbg !5871, !tbaa !1527
  %transno = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %15, i32 0, i32 6, !dbg !5872
  store i32 0, ptr %transno, align 8, !dbg !5873, !tbaa !1614
  %16 = load ptr, ptr %exec, align 8, !dbg !5874, !tbaa !1527
  %transcount = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %16, i32 0, i32 7, !dbg !5875
  store i32 0, ptr %transcount, align 4, !dbg !5876, !tbaa !1618
  %17 = load ptr, ptr %exec, align 8, !dbg !5877, !tbaa !1527
  %inputStack = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %17, i32 0, i32 17, !dbg !5878
  store ptr null, ptr %inputStack, align 8, !dbg !5879, !tbaa !1689
  %18 = load ptr, ptr %exec, align 8, !dbg !5880, !tbaa !1527
  %inputStackMax = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %18, i32 0, i32 12, !dbg !5881
  store i32 0, ptr %inputStackMax, align 8, !dbg !5882, !tbaa !1681
  %19 = load ptr, ptr %comp.addr, align 8, !dbg !5883, !tbaa !1527
  %nbCounters = getelementptr inbounds %struct._xmlRegexp, ptr %19, i32 0, i32 5, !dbg !5885
  %20 = load i32, ptr %nbCounters, align 8, !dbg !5885, !tbaa !1632
  %cmp = icmp sgt i32 %20, 0, !dbg !5886
  br i1 %cmp, label %if.then, label %if.else, !dbg !5887

if.then:                                          ; preds = %entry
  %21 = load ptr, ptr @xmlMalloc, align 8, !dbg !5888, !tbaa !1527
  %22 = load ptr, ptr %comp.addr, align 8, !dbg !5890, !tbaa !1527
  %nbCounters2 = getelementptr inbounds %struct._xmlRegexp, ptr %22, i32 0, i32 5, !dbg !5891
  %23 = load i32, ptr %nbCounters2, align 8, !dbg !5891, !tbaa !1632
  %conv = sext i32 %23 to i64, !dbg !5890
  %mul = mul i64 %conv, 4, !dbg !5892
  %call = call ptr %21(i64 noundef %mul), !dbg !5888
  %24 = load ptr, ptr %exec, align 8, !dbg !5893, !tbaa !1527
  %counts = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %24, i32 0, i32 11, !dbg !5894
  store ptr %call, ptr %counts, align 8, !dbg !5895, !tbaa !1644
  %25 = load ptr, ptr %exec, align 8, !dbg !5896, !tbaa !1527
  %counts3 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %25, i32 0, i32 11, !dbg !5898
  %26 = load ptr, ptr %counts3, align 8, !dbg !5898, !tbaa !1644
  %cmp4 = icmp eq ptr %26, null, !dbg !5899
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !5900

if.then6:                                         ; preds = %if.then
  call void @xmlRegexpErrMemory(ptr noundef null, ptr noundef @.str.130), !dbg !5901
  store i32 -1, ptr %retval, align 4, !dbg !5903
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup492, !dbg !5903

if.end:                                           ; preds = %if.then
  %27 = load ptr, ptr %exec, align 8, !dbg !5904, !tbaa !1527
  %counts7 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %27, i32 0, i32 11, !dbg !5905
  %28 = load ptr, ptr %counts7, align 8, !dbg !5905, !tbaa !1644
  %29 = load ptr, ptr %comp.addr, align 8, !dbg !5906, !tbaa !1527
  %nbCounters8 = getelementptr inbounds %struct._xmlRegexp, ptr %29, i32 0, i32 5, !dbg !5907
  %30 = load i32, ptr %nbCounters8, align 8, !dbg !5907, !tbaa !1632
  %conv9 = sext i32 %30 to i64, !dbg !5906
  %mul10 = mul i64 %conv9, 4, !dbg !5908
  call void @llvm.memset.p0.i64(ptr align 4 %28, i8 0, i64 %mul10, i1 false), !dbg !5909
  br label %if.end12, !dbg !5910

if.else:                                          ; preds = %entry
  %31 = load ptr, ptr %exec, align 8, !dbg !5911, !tbaa !1527
  %counts11 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %31, i32 0, i32 11, !dbg !5912
  store ptr null, ptr %counts11, align 8, !dbg !5913, !tbaa !1644
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.end
  br label %while.cond, !dbg !5914

while.cond:                                       ; preds = %cleanup431, %if.end12
  %32 = load ptr, ptr %exec, align 8, !dbg !5915, !tbaa !1527
  %status13 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %32, i32 0, i32 0, !dbg !5916
  %33 = load i32, ptr %status13, align 8, !dbg !5916, !tbaa !1594
  %cmp14 = icmp eq i32 %33, 0, !dbg !5917
  br i1 %cmp14, label %land.lhs.true, label %land.end32, !dbg !5918

land.lhs.true:                                    ; preds = %while.cond
  %34 = load ptr, ptr %exec, align 8, !dbg !5919, !tbaa !1527
  %state16 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %34, i32 0, i32 5, !dbg !5920
  %35 = load ptr, ptr %state16, align 8, !dbg !5920, !tbaa !1610
  %cmp17 = icmp ne ptr %35, null, !dbg !5921
  br i1 %cmp17, label %land.rhs, label %land.end32, !dbg !5922

land.rhs:                                         ; preds = %land.lhs.true
  %36 = load ptr, ptr %exec, align 8, !dbg !5923, !tbaa !1527
  %inputString19 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %36, i32 0, i32 16, !dbg !5924
  %37 = load ptr, ptr %inputString19, align 8, !dbg !5924, !tbaa !1569
  %38 = load ptr, ptr %exec, align 8, !dbg !5925, !tbaa !1527
  %index20 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %38, i32 0, i32 14, !dbg !5926
  %39 = load i32, ptr %index20, align 8, !dbg !5926, !tbaa !1574
  %idxprom = sext i32 %39 to i64, !dbg !5923
  %arrayidx21 = getelementptr inbounds i8, ptr %37, i64 %idxprom, !dbg !5923
  %40 = load i8, ptr %arrayidx21, align 1, !dbg !5923, !tbaa !2932
  %conv22 = zext i8 %40 to i32, !dbg !5923
  %cmp23 = icmp ne i32 %conv22, 0, !dbg !5927
  br i1 %cmp23, label %lor.end, label %lor.rhs, !dbg !5928

lor.rhs:                                          ; preds = %land.rhs
  %41 = load ptr, ptr %exec, align 8, !dbg !5929, !tbaa !1527
  %state25 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %41, i32 0, i32 5, !dbg !5930
  %42 = load ptr, ptr %state25, align 8, !dbg !5930, !tbaa !1610
  %cmp26 = icmp ne ptr %42, null, !dbg !5931
  br i1 %cmp26, label %land.rhs28, label %land.end, !dbg !5932

land.rhs28:                                       ; preds = %lor.rhs
  %43 = load ptr, ptr %exec, align 8, !dbg !5933, !tbaa !1527
  %state29 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %43, i32 0, i32 5, !dbg !5934
  %44 = load ptr, ptr %state29, align 8, !dbg !5934, !tbaa !1610
  %type = getelementptr inbounds %struct._xmlAutomataState, ptr %44, i32 0, i32 0, !dbg !5935
  %45 = load i32, ptr %type, align 8, !dbg !5935, !tbaa !1984
  %cmp30 = icmp ne i32 %45, 2, !dbg !5936
  br label %land.end

land.end:                                         ; preds = %land.rhs28, %lor.rhs
  %46 = phi i1 [ false, %lor.rhs ], [ %cmp30, %land.rhs28 ], !dbg !5937
  br label %lor.end, !dbg !5928

lor.end:                                          ; preds = %land.end, %land.rhs
  %47 = phi i1 [ true, %land.rhs ], [ %46, %land.end ]
  br label %land.end32

land.end32:                                       ; preds = %lor.end, %land.lhs.true, %while.cond
  %48 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %47, %lor.end ], !dbg !5937
  br i1 %48, label %while.body, label %while.end, !dbg !5914

while.body:                                       ; preds = %land.end32
  call void @llvm.lifetime.start.p0(i64 8, ptr %trans) #8, !dbg !5938
  tail call void @llvm.dbg.declare(metadata ptr %trans, metadata !5787, metadata !DIExpression()), !dbg !5939
  call void @llvm.lifetime.start.p0(i64 8, ptr %atom) #8, !dbg !5940
  tail call void @llvm.dbg.declare(metadata ptr %atom, metadata !5789, metadata !DIExpression()), !dbg !5941
  store i32 1, ptr %len, align 4, !dbg !5942, !tbaa !1767
  %49 = load ptr, ptr %exec, align 8, !dbg !5943, !tbaa !1527
  %inputString33 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %49, i32 0, i32 16, !dbg !5945
  %50 = load ptr, ptr %inputString33, align 8, !dbg !5945, !tbaa !1569
  %51 = load ptr, ptr %exec, align 8, !dbg !5946, !tbaa !1527
  %index34 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %51, i32 0, i32 14, !dbg !5947
  %52 = load i32, ptr %index34, align 8, !dbg !5947, !tbaa !1574
  %idxprom35 = sext i32 %52 to i64, !dbg !5943
  %arrayidx36 = getelementptr inbounds i8, ptr %50, i64 %idxprom35, !dbg !5943
  %53 = load i8, ptr %arrayidx36, align 1, !dbg !5943, !tbaa !2932
  %conv37 = zext i8 %53 to i32, !dbg !5943
  %cmp38 = icmp eq i32 %conv37, 0, !dbg !5948
  br i1 %cmp38, label %land.lhs.true40, label %if.end69, !dbg !5949

land.lhs.true40:                                  ; preds = %while.body
  %54 = load ptr, ptr %exec, align 8, !dbg !5950, !tbaa !1527
  %counts41 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %54, i32 0, i32 11, !dbg !5951
  %55 = load ptr, ptr %counts41, align 8, !dbg !5951, !tbaa !1644
  %cmp42 = icmp eq ptr %55, null, !dbg !5952
  br i1 %cmp42, label %if.then44, label %if.end69, !dbg !5953

if.then44:                                        ; preds = %land.lhs.true40
  %56 = load ptr, ptr %exec, align 8, !dbg !5954, !tbaa !1527
  %transno45 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %56, i32 0, i32 6, !dbg !5957
  %57 = load i32, ptr %transno45, align 8, !dbg !5957, !tbaa !1614
  %58 = load ptr, ptr %exec, align 8, !dbg !5958, !tbaa !1527
  %state46 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %58, i32 0, i32 5, !dbg !5959
  %59 = load ptr, ptr %state46, align 8, !dbg !5959, !tbaa !1610
  %nbTrans = getelementptr inbounds %struct._xmlAutomataState, ptr %59, i32 0, i32 6, !dbg !5960
  %60 = load i32, ptr %nbTrans, align 8, !dbg !5960, !tbaa !2052
  %cmp47 = icmp slt i32 %57, %60, !dbg !5961
  br i1 %cmp47, label %if.then49, label %if.else67, !dbg !5962

if.then49:                                        ; preds = %if.then44
  %61 = load ptr, ptr %exec, align 8, !dbg !5963, !tbaa !1527
  %state50 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %61, i32 0, i32 5, !dbg !5965
  %62 = load ptr, ptr %state50, align 8, !dbg !5965, !tbaa !1610
  %trans51 = getelementptr inbounds %struct._xmlAutomataState, ptr %62, i32 0, i32 7, !dbg !5966
  %63 = load ptr, ptr %trans51, align 8, !dbg !5966, !tbaa !2058
  %64 = load ptr, ptr %exec, align 8, !dbg !5967, !tbaa !1527
  %transno52 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %64, i32 0, i32 6, !dbg !5968
  %65 = load i32, ptr %transno52, align 8, !dbg !5968, !tbaa !1614
  %idxprom53 = sext i32 %65 to i64, !dbg !5963
  %arrayidx54 = getelementptr inbounds %struct._xmlRegTrans, ptr %63, i64 %idxprom53, !dbg !5963
  store ptr %arrayidx54, ptr %trans, align 8, !dbg !5969, !tbaa !1527
  %66 = load ptr, ptr %trans, align 8, !dbg !5970, !tbaa !1527
  %to = getelementptr inbounds %struct._xmlRegTrans, ptr %66, i32 0, i32 1, !dbg !5972
  %67 = load i32, ptr %to, align 8, !dbg !5972, !tbaa !2065
  %cmp55 = icmp sge i32 %67, 0, !dbg !5973
  br i1 %cmp55, label %if.then57, label %if.end66, !dbg !5974

if.then57:                                        ; preds = %if.then49
  %68 = load ptr, ptr %trans, align 8, !dbg !5975, !tbaa !1527
  %atom58 = getelementptr inbounds %struct._xmlRegTrans, ptr %68, i32 0, i32 0, !dbg !5977
  %69 = load ptr, ptr %atom58, align 8, !dbg !5977, !tbaa !2072
  store ptr %69, ptr %atom, align 8, !dbg !5978, !tbaa !1527
  %70 = load ptr, ptr %atom, align 8, !dbg !5979, !tbaa !1527
  %min = getelementptr inbounds %struct._xmlRegAtom, ptr %70, i32 0, i32 3, !dbg !5981
  %71 = load i32, ptr %min, align 4, !dbg !5981, !tbaa !2372
  %cmp59 = icmp eq i32 %71, 0, !dbg !5982
  br i1 %cmp59, label %land.lhs.true61, label %if.then64, !dbg !5983

land.lhs.true61:                                  ; preds = %if.then57
  %72 = load ptr, ptr %atom, align 8, !dbg !5984, !tbaa !1527
  %max = getelementptr inbounds %struct._xmlRegAtom, ptr %72, i32 0, i32 4, !dbg !5985
  %73 = load i32, ptr %max, align 8, !dbg !5985, !tbaa !2377
  %cmp62 = icmp sgt i32 %73, 0, !dbg !5986
  br i1 %cmp62, label %if.end65, label %if.then64, !dbg !5987

if.then64:                                        ; preds = %land.lhs.true61, %if.then57
  br label %rollback, !dbg !5988

if.end65:                                         ; preds = %land.lhs.true61
  br label %if.end66, !dbg !5989

if.end66:                                         ; preds = %if.end65, %if.then49
  br label %if.end68, !dbg !5990

if.else67:                                        ; preds = %if.then44
  br label %rollback, !dbg !5991

if.end68:                                         ; preds = %if.end66
  br label %if.end69, !dbg !5992

if.end69:                                         ; preds = %if.end68, %land.lhs.true40, %while.body
  %74 = load ptr, ptr %exec, align 8, !dbg !5993, !tbaa !1527
  %transcount70 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %74, i32 0, i32 7, !dbg !5994
  store i32 0, ptr %transcount70, align 4, !dbg !5995, !tbaa !1618
  br label %for.cond, !dbg !5996

for.cond:                                         ; preds = %for.inc, %if.end69
  %75 = load ptr, ptr %exec, align 8, !dbg !5997, !tbaa !1527
  %transno71 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %75, i32 0, i32 6, !dbg !5998
  %76 = load i32, ptr %transno71, align 8, !dbg !5998, !tbaa !1614
  %77 = load ptr, ptr %exec, align 8, !dbg !5999, !tbaa !1527
  %state72 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %77, i32 0, i32 5, !dbg !6000
  %78 = load ptr, ptr %state72, align 8, !dbg !6000, !tbaa !1610
  %nbTrans73 = getelementptr inbounds %struct._xmlAutomataState, ptr %78, i32 0, i32 6, !dbg !6001
  %79 = load i32, ptr %nbTrans73, align 8, !dbg !6001, !tbaa !2052
  %cmp74 = icmp slt i32 %76, %79, !dbg !6002
  br i1 %cmp74, label %for.body, label %for.end, !dbg !6003

for.body:                                         ; preds = %for.cond
  %80 = load ptr, ptr %exec, align 8, !dbg !6004, !tbaa !1527
  %state76 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %80, i32 0, i32 5, !dbg !6005
  %81 = load ptr, ptr %state76, align 8, !dbg !6005, !tbaa !1610
  %trans77 = getelementptr inbounds %struct._xmlAutomataState, ptr %81, i32 0, i32 7, !dbg !6006
  %82 = load ptr, ptr %trans77, align 8, !dbg !6006, !tbaa !2058
  %83 = load ptr, ptr %exec, align 8, !dbg !6007, !tbaa !1527
  %transno78 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %83, i32 0, i32 6, !dbg !6008
  %84 = load i32, ptr %transno78, align 8, !dbg !6008, !tbaa !1614
  %idxprom79 = sext i32 %84 to i64, !dbg !6004
  %arrayidx80 = getelementptr inbounds %struct._xmlRegTrans, ptr %82, i64 %idxprom79, !dbg !6004
  store ptr %arrayidx80, ptr %trans, align 8, !dbg !6009, !tbaa !1527
  %85 = load ptr, ptr %trans, align 8, !dbg !6010, !tbaa !1527
  %to81 = getelementptr inbounds %struct._xmlRegTrans, ptr %85, i32 0, i32 1, !dbg !6012
  %86 = load i32, ptr %to81, align 8, !dbg !6012, !tbaa !2065
  %cmp82 = icmp slt i32 %86, 0, !dbg !6013
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !6014

if.then84:                                        ; preds = %for.body
  br label %for.inc, !dbg !6015

if.end85:                                         ; preds = %for.body
  %87 = load ptr, ptr %trans, align 8, !dbg !6016, !tbaa !1527
  %atom86 = getelementptr inbounds %struct._xmlRegTrans, ptr %87, i32 0, i32 0, !dbg !6017
  %88 = load ptr, ptr %atom86, align 8, !dbg !6017, !tbaa !2072
  store ptr %88, ptr %atom, align 8, !dbg !6018, !tbaa !1527
  store i32 0, ptr %ret, align 4, !dbg !6019, !tbaa !1767
  store i32 1, ptr %deter, align 4, !dbg !6020, !tbaa !1767
  %89 = load ptr, ptr %trans, align 8, !dbg !6021, !tbaa !1527
  %count = getelementptr inbounds %struct._xmlRegTrans, ptr %89, i32 0, i32 3, !dbg !6022
  %90 = load i32, ptr %count, align 8, !dbg !6022, !tbaa !2077
  %cmp87 = icmp sge i32 %90, 0, !dbg !6023
  br i1 %cmp87, label %if.then89, label %if.else121, !dbg !6024

if.then89:                                        ; preds = %if.end85
  call void @llvm.lifetime.start.p0(i64 4, ptr %count90) #8, !dbg !6025
  tail call void @llvm.dbg.declare(metadata ptr %count90, metadata !5790, metadata !DIExpression()), !dbg !6026
  call void @llvm.lifetime.start.p0(i64 8, ptr %counter) #8, !dbg !6027
  tail call void @llvm.dbg.declare(metadata ptr %counter, metadata !5796, metadata !DIExpression()), !dbg !6028
  %91 = load ptr, ptr %exec, align 8, !dbg !6029, !tbaa !1527
  %counts91 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %91, i32 0, i32 11, !dbg !6031
  %92 = load ptr, ptr %counts91, align 8, !dbg !6031, !tbaa !1644
  %cmp92 = icmp eq ptr %92, null, !dbg !6032
  br i1 %cmp92, label %if.then94, label %if.end96, !dbg !6033

if.then94:                                        ; preds = %if.then89
  %93 = load ptr, ptr %exec, align 8, !dbg !6034, !tbaa !1527
  %status95 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %93, i32 0, i32 0, !dbg !6036
  store i32 -1, ptr %status95, align 8, !dbg !6037, !tbaa !1594
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6038

if.end96:                                         ; preds = %if.then89
  %94 = load ptr, ptr %exec, align 8, !dbg !6039, !tbaa !1527
  %counts97 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %94, i32 0, i32 11, !dbg !6040
  %95 = load ptr, ptr %counts97, align 8, !dbg !6040, !tbaa !1644
  %96 = load ptr, ptr %trans, align 8, !dbg !6041, !tbaa !1527
  %count98 = getelementptr inbounds %struct._xmlRegTrans, ptr %96, i32 0, i32 3, !dbg !6042
  %97 = load i32, ptr %count98, align 8, !dbg !6042, !tbaa !2077
  %idxprom99 = sext i32 %97 to i64, !dbg !6039
  %arrayidx100 = getelementptr inbounds i32, ptr %95, i64 %idxprom99, !dbg !6039
  %98 = load i32, ptr %arrayidx100, align 4, !dbg !6039, !tbaa !1767
  store i32 %98, ptr %count90, align 4, !dbg !6043, !tbaa !1767
  %99 = load ptr, ptr %exec, align 8, !dbg !6044, !tbaa !1527
  %comp101 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %99, i32 0, i32 2, !dbg !6045
  %100 = load ptr, ptr %comp101, align 8, !dbg !6045, !tbaa !1599
  %counters = getelementptr inbounds %struct._xmlRegexp, ptr %100, i32 0, i32 6, !dbg !6046
  %101 = load ptr, ptr %counters, align 8, !dbg !6046, !tbaa !2134
  %102 = load ptr, ptr %trans, align 8, !dbg !6047, !tbaa !1527
  %count102 = getelementptr inbounds %struct._xmlRegTrans, ptr %102, i32 0, i32 3, !dbg !6048
  %103 = load i32, ptr %count102, align 8, !dbg !6048, !tbaa !2077
  %idxprom103 = sext i32 %103 to i64, !dbg !6044
  %arrayidx104 = getelementptr inbounds %struct._xmlRegCounter, ptr %101, i64 %idxprom103, !dbg !6044
  store ptr %arrayidx104, ptr %counter, align 8, !dbg !6049, !tbaa !1527
  %104 = load i32, ptr %count90, align 4, !dbg !6050, !tbaa !1767
  %105 = load ptr, ptr %counter, align 8, !dbg !6051, !tbaa !1527
  %min105 = getelementptr inbounds %struct._xmlRegCounter, ptr %105, i32 0, i32 0, !dbg !6052
  %106 = load i32, ptr %min105, align 4, !dbg !6052, !tbaa !2170
  %cmp106 = icmp sge i32 %104, %106, !dbg !6053
  br i1 %cmp106, label %land.rhs108, label %land.end112, !dbg !6054

land.rhs108:                                      ; preds = %if.end96
  %107 = load i32, ptr %count90, align 4, !dbg !6055, !tbaa !1767
  %108 = load ptr, ptr %counter, align 8, !dbg !6056, !tbaa !1527
  %max109 = getelementptr inbounds %struct._xmlRegCounter, ptr %108, i32 0, i32 1, !dbg !6057
  %109 = load i32, ptr %max109, align 4, !dbg !6057, !tbaa !2147
  %cmp110 = icmp sle i32 %107, %109, !dbg !6058
  br label %land.end112

land.end112:                                      ; preds = %land.rhs108, %if.end96
  %110 = phi i1 [ false, %if.end96 ], [ %cmp110, %land.rhs108 ], !dbg !6059
  %land.ext = zext i1 %110 to i32, !dbg !6054
  store i32 %land.ext, ptr %ret, align 4, !dbg !6060, !tbaa !1767
  %111 = load i32, ptr %ret, align 4, !dbg !6061, !tbaa !1767
  %tobool = icmp ne i32 %111, 0, !dbg !6063
  br i1 %tobool, label %land.lhs.true113, label %if.end119, !dbg !6064

land.lhs.true113:                                 ; preds = %land.end112
  %112 = load ptr, ptr %counter, align 8, !dbg !6065, !tbaa !1527
  %min114 = getelementptr inbounds %struct._xmlRegCounter, ptr %112, i32 0, i32 0, !dbg !6066
  %113 = load i32, ptr %min114, align 4, !dbg !6066, !tbaa !2170
  %114 = load ptr, ptr %counter, align 8, !dbg !6067, !tbaa !1527
  %max115 = getelementptr inbounds %struct._xmlRegCounter, ptr %114, i32 0, i32 1, !dbg !6068
  %115 = load i32, ptr %max115, align 4, !dbg !6068, !tbaa !2147
  %cmp116 = icmp ne i32 %113, %115, !dbg !6069
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !6070

if.then118:                                       ; preds = %land.lhs.true113
  store i32 0, ptr %deter, align 4, !dbg !6071, !tbaa !1767
  br label %if.end119, !dbg !6072

if.end119:                                        ; preds = %if.then118, %land.lhs.true113, %land.end112
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6073
  br label %cleanup, !dbg !6073

cleanup:                                          ; preds = %if.then94, %if.end119
  call void @llvm.lifetime.end.p0(i64 8, ptr %counter) #8, !dbg !6073
  call void @llvm.lifetime.end.p0(i64 4, ptr %count90) #8, !dbg !6073
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup431 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end314, !dbg !6074

if.else121:                                       ; preds = %if.end85
  %116 = load ptr, ptr %atom, align 8, !dbg !6075, !tbaa !1527
  %cmp122 = icmp eq ptr %116, null, !dbg !6076
  br i1 %cmp122, label %if.then124, label %if.else127, !dbg !6077

if.then124:                                       ; preds = %if.else121
  %117 = load ptr, ptr @stderr, align 8, !dbg !6078, !tbaa !1527
  %call125 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %117, ptr noundef @.str.13), !dbg !6080
  %118 = load ptr, ptr %exec, align 8, !dbg !6081, !tbaa !1527
  %status126 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %118, i32 0, i32 0, !dbg !6082
  store i32 -2, ptr %status126, align 8, !dbg !6083, !tbaa !1594
  br label %for.end, !dbg !6084

if.else127:                                       ; preds = %if.else121
  %119 = load ptr, ptr %exec, align 8, !dbg !6085, !tbaa !1527
  %inputString128 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %119, i32 0, i32 16, !dbg !6086
  %120 = load ptr, ptr %inputString128, align 8, !dbg !6086, !tbaa !1569
  %121 = load ptr, ptr %exec, align 8, !dbg !6087, !tbaa !1527
  %index129 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %121, i32 0, i32 14, !dbg !6088
  %122 = load i32, ptr %index129, align 8, !dbg !6088, !tbaa !1574
  %idxprom130 = sext i32 %122 to i64, !dbg !6085
  %arrayidx131 = getelementptr inbounds i8, ptr %120, i64 %idxprom130, !dbg !6085
  %123 = load i8, ptr %arrayidx131, align 1, !dbg !6085, !tbaa !2932
  %conv132 = zext i8 %123 to i32, !dbg !6085
  %cmp133 = icmp ne i32 %conv132, 0, !dbg !6089
  br i1 %cmp133, label %if.then135, label %if.else301, !dbg !6090

if.then135:                                       ; preds = %if.else127
  %124 = load ptr, ptr %exec, align 8, !dbg !6091, !tbaa !1527
  %inputString136 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %124, i32 0, i32 16, !dbg !6091
  %125 = load ptr, ptr %inputString136, align 8, !dbg !6091, !tbaa !1569
  %126 = load ptr, ptr %exec, align 8, !dbg !6091, !tbaa !1527
  %index137 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %126, i32 0, i32 14, !dbg !6091
  %127 = load i32, ptr %index137, align 8, !dbg !6091, !tbaa !1574
  %idxprom138 = sext i32 %127 to i64, !dbg !6091
  %arrayidx139 = getelementptr inbounds i8, ptr %125, i64 %idxprom138, !dbg !6091
  %call140 = call i32 @xmlStringCurrentChar(ptr noundef null, ptr noundef %arrayidx139, ptr noundef %len), !dbg !6091
  store i32 %call140, ptr %codepoint, align 4, !dbg !6092, !tbaa !1767
  %128 = load ptr, ptr %atom, align 8, !dbg !6093, !tbaa !1527
  %129 = load i32, ptr %codepoint, align 4, !dbg !6094, !tbaa !1767
  %call141 = call i32 @xmlRegCheckCharacter(ptr noundef %128, i32 noundef %129), !dbg !6095
  store i32 %call141, ptr %ret, align 4, !dbg !6096, !tbaa !1767
  %130 = load i32, ptr %ret, align 4, !dbg !6097, !tbaa !1767
  %cmp142 = icmp eq i32 %130, 1, !dbg !6098
  br i1 %cmp142, label %land.lhs.true144, label %if.else286, !dbg !6099

land.lhs.true144:                                 ; preds = %if.then135
  %131 = load ptr, ptr %atom, align 8, !dbg !6100, !tbaa !1527
  %min145 = getelementptr inbounds %struct._xmlRegAtom, ptr %131, i32 0, i32 3, !dbg !6101
  %132 = load i32, ptr %min145, align 4, !dbg !6101, !tbaa !2372
  %cmp146 = icmp sge i32 %132, 0, !dbg !6102
  br i1 %cmp146, label %land.lhs.true148, label %if.else286, !dbg !6103

land.lhs.true148:                                 ; preds = %land.lhs.true144
  %133 = load ptr, ptr %atom, align 8, !dbg !6104, !tbaa !1527
  %max149 = getelementptr inbounds %struct._xmlRegAtom, ptr %133, i32 0, i32 4, !dbg !6105
  %134 = load i32, ptr %max149, align 8, !dbg !6105, !tbaa !2377
  %cmp150 = icmp sgt i32 %134, 0, !dbg !6106
  br i1 %cmp150, label %if.then152, label %if.else286, !dbg !6107

if.then152:                                       ; preds = %land.lhs.true148
  call void @llvm.lifetime.start.p0(i64 8, ptr %to153) #8, !dbg !6108
  tail call void @llvm.dbg.declare(metadata ptr %to153, metadata !5797, metadata !DIExpression()), !dbg !6109
  %135 = load ptr, ptr %comp.addr, align 8, !dbg !6110, !tbaa !1527
  %states154 = getelementptr inbounds %struct._xmlRegexp, ptr %135, i32 0, i32 2, !dbg !6111
  %136 = load ptr, ptr %states154, align 8, !dbg !6111, !tbaa !1551
  %137 = load ptr, ptr %trans, align 8, !dbg !6112, !tbaa !1527
  %to155 = getelementptr inbounds %struct._xmlRegTrans, ptr %137, i32 0, i32 1, !dbg !6113
  %138 = load i32, ptr %to155, align 8, !dbg !6113, !tbaa !2065
  %idxprom156 = sext i32 %138 to i64, !dbg !6110
  %arrayidx157 = getelementptr inbounds ptr, ptr %136, i64 %idxprom156, !dbg !6110
  %139 = load ptr, ptr %arrayidx157, align 8, !dbg !6110, !tbaa !1527
  store ptr %139, ptr %to153, align 8, !dbg !6109, !tbaa !1527
  %140 = load ptr, ptr %trans, align 8, !dbg !6114, !tbaa !1527
  %counter158 = getelementptr inbounds %struct._xmlRegTrans, ptr %140, i32 0, i32 2, !dbg !6115
  %141 = load i32, ptr %counter158, align 4, !dbg !6115, !tbaa !2123
  %cmp159 = icmp sge i32 %141, 0, !dbg !6116
  br i1 %cmp159, label %if.then161, label %if.end194, !dbg !6117

if.then161:                                       ; preds = %if.then152
  call void @llvm.lifetime.start.p0(i64 8, ptr %counter162) #8, !dbg !6118
  tail call void @llvm.dbg.declare(metadata ptr %counter162, metadata !5803, metadata !DIExpression()), !dbg !6119
  %142 = load ptr, ptr %exec, align 8, !dbg !6120, !tbaa !1527
  %counts163 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %142, i32 0, i32 11, !dbg !6122
  %143 = load ptr, ptr %counts163, align 8, !dbg !6122, !tbaa !1644
  %cmp164 = icmp eq ptr %143, null, !dbg !6123
  br i1 %cmp164, label %if.then174, label %lor.lhs.false, !dbg !6124

lor.lhs.false:                                    ; preds = %if.then161
  %144 = load ptr, ptr %exec, align 8, !dbg !6125, !tbaa !1527
  %comp166 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %144, i32 0, i32 2, !dbg !6126
  %145 = load ptr, ptr %comp166, align 8, !dbg !6126, !tbaa !1599
  %cmp167 = icmp eq ptr %145, null, !dbg !6127
  br i1 %cmp167, label %if.then174, label %lor.lhs.false169, !dbg !6128

lor.lhs.false169:                                 ; preds = %lor.lhs.false
  %146 = load ptr, ptr %exec, align 8, !dbg !6129, !tbaa !1527
  %comp170 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %146, i32 0, i32 2, !dbg !6130
  %147 = load ptr, ptr %comp170, align 8, !dbg !6130, !tbaa !1599
  %counters171 = getelementptr inbounds %struct._xmlRegexp, ptr %147, i32 0, i32 6, !dbg !6131
  %148 = load ptr, ptr %counters171, align 8, !dbg !6131, !tbaa !2134
  %cmp172 = icmp eq ptr %148, null, !dbg !6132
  br i1 %cmp172, label %if.then174, label %if.end176, !dbg !6133

if.then174:                                       ; preds = %lor.lhs.false169, %lor.lhs.false, %if.then161
  %149 = load ptr, ptr %exec, align 8, !dbg !6134, !tbaa !1527
  %status175 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %149, i32 0, i32 0, !dbg !6136
  store i32 -1, ptr %status175, align 8, !dbg !6137, !tbaa !1594
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup191, !dbg !6138

if.end176:                                        ; preds = %lor.lhs.false169
  %150 = load ptr, ptr %exec, align 8, !dbg !6139, !tbaa !1527
  %comp177 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %150, i32 0, i32 2, !dbg !6140
  %151 = load ptr, ptr %comp177, align 8, !dbg !6140, !tbaa !1599
  %counters178 = getelementptr inbounds %struct._xmlRegexp, ptr %151, i32 0, i32 6, !dbg !6141
  %152 = load ptr, ptr %counters178, align 8, !dbg !6141, !tbaa !2134
  %153 = load ptr, ptr %trans, align 8, !dbg !6142, !tbaa !1527
  %counter179 = getelementptr inbounds %struct._xmlRegTrans, ptr %153, i32 0, i32 2, !dbg !6143
  %154 = load i32, ptr %counter179, align 4, !dbg !6143, !tbaa !2123
  %idxprom180 = sext i32 %154 to i64, !dbg !6139
  %arrayidx181 = getelementptr inbounds %struct._xmlRegCounter, ptr %152, i64 %idxprom180, !dbg !6139
  store ptr %arrayidx181, ptr %counter162, align 8, !dbg !6144, !tbaa !1527
  %155 = load ptr, ptr %exec, align 8, !dbg !6145, !tbaa !1527
  %counts182 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %155, i32 0, i32 11, !dbg !6147
  %156 = load ptr, ptr %counts182, align 8, !dbg !6147, !tbaa !1644
  %157 = load ptr, ptr %trans, align 8, !dbg !6148, !tbaa !1527
  %counter183 = getelementptr inbounds %struct._xmlRegTrans, ptr %157, i32 0, i32 2, !dbg !6149
  %158 = load i32, ptr %counter183, align 4, !dbg !6149, !tbaa !2123
  %idxprom184 = sext i32 %158 to i64, !dbg !6145
  %arrayidx185 = getelementptr inbounds i32, ptr %156, i64 %idxprom184, !dbg !6145
  %159 = load i32, ptr %arrayidx185, align 4, !dbg !6145, !tbaa !1767
  %160 = load ptr, ptr %counter162, align 8, !dbg !6150, !tbaa !1527
  %max186 = getelementptr inbounds %struct._xmlRegCounter, ptr %160, i32 0, i32 1, !dbg !6151
  %161 = load i32, ptr %max186, align 4, !dbg !6151, !tbaa !2147
  %cmp187 = icmp sge i32 %159, %161, !dbg !6152
  br i1 %cmp187, label %if.then189, label %if.end190, !dbg !6153

if.then189:                                       ; preds = %if.end176
  store i32 7, ptr %cleanup.dest.slot, align 4
  br label %cleanup191, !dbg !6154

if.end190:                                        ; preds = %if.end176
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6155
  br label %cleanup191, !dbg !6155

cleanup191:                                       ; preds = %if.then174, %if.end190, %if.then189
  call void @llvm.lifetime.end.p0(i64 8, ptr %counter162) #8, !dbg !6155
  %cleanup.dest192 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest192, label %cleanup283 [
    i32 0, label %cleanup.cont193
  ]

cleanup.cont193:                                  ; preds = %cleanup191
  br label %if.end194, !dbg !6156

if.end194:                                        ; preds = %cleanup.cont193, %if.then152
  %162 = load ptr, ptr %exec, align 8, !dbg !6157, !tbaa !1527
  %state195 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %162, i32 0, i32 5, !dbg !6159
  %163 = load ptr, ptr %state195, align 8, !dbg !6159, !tbaa !1610
  %nbTrans196 = getelementptr inbounds %struct._xmlAutomataState, ptr %163, i32 0, i32 6, !dbg !6160
  %164 = load i32, ptr %nbTrans196, align 8, !dbg !6160, !tbaa !2052
  %165 = load ptr, ptr %exec, align 8, !dbg !6161, !tbaa !1527
  %transno197 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %165, i32 0, i32 6, !dbg !6162
  %166 = load i32, ptr %transno197, align 8, !dbg !6162, !tbaa !1614
  %add = add nsw i32 %166, 1, !dbg !6163
  %cmp198 = icmp sgt i32 %164, %add, !dbg !6164
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !6165

if.then200:                                       ; preds = %if.end194
  %167 = load ptr, ptr %exec, align 8, !dbg !6166, !tbaa !1527
  call void @xmlFARegExecSave(ptr noundef %167), !dbg !6168
  br label %if.end201, !dbg !6169

if.end201:                                        ; preds = %if.then200, %if.end194
  %168 = load ptr, ptr %trans, align 8, !dbg !6170, !tbaa !1527
  %counter202 = getelementptr inbounds %struct._xmlRegTrans, ptr %168, i32 0, i32 2, !dbg !6172
  %169 = load i32, ptr %counter202, align 4, !dbg !6172, !tbaa !2123
  %cmp203 = icmp sge i32 %169, 0, !dbg !6173
  br i1 %cmp203, label %if.then205, label %if.end210, !dbg !6174

if.then205:                                       ; preds = %if.end201
  %170 = load ptr, ptr %exec, align 8, !dbg !6175, !tbaa !1527
  %counts206 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %170, i32 0, i32 11, !dbg !6177
  %171 = load ptr, ptr %counts206, align 8, !dbg !6177, !tbaa !1644
  %172 = load ptr, ptr %trans, align 8, !dbg !6178, !tbaa !1527
  %counter207 = getelementptr inbounds %struct._xmlRegTrans, ptr %172, i32 0, i32 2, !dbg !6179
  %173 = load i32, ptr %counter207, align 4, !dbg !6179, !tbaa !2123
  %idxprom208 = sext i32 %173 to i64, !dbg !6175
  %arrayidx209 = getelementptr inbounds i32, ptr %171, i64 %idxprom208, !dbg !6175
  %174 = load i32, ptr %arrayidx209, align 4, !dbg !6180, !tbaa !1767
  %inc = add nsw i32 %174, 1, !dbg !6180
  store i32 %inc, ptr %arrayidx209, align 4, !dbg !6180, !tbaa !1767
  br label %if.end210, !dbg !6181

if.end210:                                        ; preds = %if.then205, %if.end201
  %175 = load ptr, ptr %exec, align 8, !dbg !6182, !tbaa !1527
  %transcount211 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %175, i32 0, i32 7, !dbg !6183
  store i32 1, ptr %transcount211, align 4, !dbg !6184, !tbaa !1618
  br label %do.body, !dbg !6185

do.body:                                          ; preds = %do.cond, %if.end210
  %176 = load ptr, ptr %exec, align 8, !dbg !6186, !tbaa !1527
  %transcount212 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %176, i32 0, i32 7, !dbg !6188
  %177 = load i32, ptr %transcount212, align 4, !dbg !6188, !tbaa !1618
  %178 = load ptr, ptr %atom, align 8, !dbg !6189, !tbaa !1527
  %max213 = getelementptr inbounds %struct._xmlRegAtom, ptr %178, i32 0, i32 4, !dbg !6190
  %179 = load i32, ptr %max213, align 8, !dbg !6190, !tbaa !2377
  %cmp214 = icmp eq i32 %177, %179, !dbg !6191
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !6192

if.then216:                                       ; preds = %do.body
  br label %do.end, !dbg !6193

if.end217:                                        ; preds = %do.body
  %180 = load i32, ptr %len, align 4, !dbg !6195, !tbaa !1767
  %181 = load ptr, ptr %exec, align 8, !dbg !6196, !tbaa !1527
  %index218 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %181, i32 0, i32 14, !dbg !6197
  %182 = load i32, ptr %index218, align 8, !dbg !6198, !tbaa !1574
  %add219 = add nsw i32 %182, %180, !dbg !6198
  store i32 %add219, ptr %index218, align 8, !dbg !6198, !tbaa !1574
  %183 = load ptr, ptr %exec, align 8, !dbg !6199, !tbaa !1527
  %inputString220 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %183, i32 0, i32 16, !dbg !6201
  %184 = load ptr, ptr %inputString220, align 8, !dbg !6201, !tbaa !1569
  %185 = load ptr, ptr %exec, align 8, !dbg !6202, !tbaa !1527
  %index221 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %185, i32 0, i32 14, !dbg !6203
  %186 = load i32, ptr %index221, align 8, !dbg !6203, !tbaa !1574
  %idxprom222 = sext i32 %186 to i64, !dbg !6199
  %arrayidx223 = getelementptr inbounds i8, ptr %184, i64 %idxprom222, !dbg !6199
  %187 = load i8, ptr %arrayidx223, align 1, !dbg !6199, !tbaa !2932
  %conv224 = zext i8 %187 to i32, !dbg !6199
  %cmp225 = icmp eq i32 %conv224, 0, !dbg !6204
  br i1 %cmp225, label %if.then227, label %if.end229, !dbg !6205

if.then227:                                       ; preds = %if.end217
  %188 = load i32, ptr %len, align 4, !dbg !6206, !tbaa !1767
  %189 = load ptr, ptr %exec, align 8, !dbg !6208, !tbaa !1527
  %index228 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %189, i32 0, i32 14, !dbg !6209
  %190 = load i32, ptr %index228, align 8, !dbg !6210, !tbaa !1574
  %sub = sub nsw i32 %190, %188, !dbg !6210
  store i32 %sub, ptr %index228, align 8, !dbg !6210, !tbaa !1574
  br label %do.end, !dbg !6211

if.end229:                                        ; preds = %if.end217
  %191 = load ptr, ptr %exec, align 8, !dbg !6212, !tbaa !1527
  %transcount230 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %191, i32 0, i32 7, !dbg !6213
  %192 = load i32, ptr %transcount230, align 4, !dbg !6213, !tbaa !1618
  %193 = load ptr, ptr %atom, align 8, !dbg !6214, !tbaa !1527
  %min231 = getelementptr inbounds %struct._xmlRegAtom, ptr %193, i32 0, i32 3, !dbg !6215
  %194 = load i32, ptr %min231, align 4, !dbg !6215, !tbaa !2372
  %cmp232 = icmp sge i32 %192, %194, !dbg !6216
  br i1 %cmp232, label %if.then234, label %if.end243, !dbg !6217

if.then234:                                       ; preds = %if.end229
  call void @llvm.lifetime.start.p0(i64 4, ptr %transno235) #8, !dbg !6218
  tail call void @llvm.dbg.declare(metadata ptr %transno235, metadata !5806, metadata !DIExpression()), !dbg !6219
  %195 = load ptr, ptr %exec, align 8, !dbg !6220, !tbaa !1527
  %transno236 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %195, i32 0, i32 6, !dbg !6221
  %196 = load i32, ptr %transno236, align 8, !dbg !6221, !tbaa !1614
  store i32 %196, ptr %transno235, align 4, !dbg !6219, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 8, ptr %state237) #8, !dbg !6222
  tail call void @llvm.dbg.declare(metadata ptr %state237, metadata !5810, metadata !DIExpression()), !dbg !6223
  %197 = load ptr, ptr %exec, align 8, !dbg !6224, !tbaa !1527
  %state238 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %197, i32 0, i32 5, !dbg !6225
  %198 = load ptr, ptr %state238, align 8, !dbg !6225, !tbaa !1610
  store ptr %198, ptr %state237, align 8, !dbg !6223, !tbaa !1527
  %199 = load ptr, ptr %exec, align 8, !dbg !6226, !tbaa !1527
  %transno239 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %199, i32 0, i32 6, !dbg !6227
  store i32 -1, ptr %transno239, align 8, !dbg !6228, !tbaa !1614
  %200 = load ptr, ptr %to153, align 8, !dbg !6229, !tbaa !1527
  %201 = load ptr, ptr %exec, align 8, !dbg !6230, !tbaa !1527
  %state240 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %201, i32 0, i32 5, !dbg !6231
  store ptr %200, ptr %state240, align 8, !dbg !6232, !tbaa !1610
  %202 = load ptr, ptr %exec, align 8, !dbg !6233, !tbaa !1527
  call void @xmlFARegExecSave(ptr noundef %202), !dbg !6234
  %203 = load i32, ptr %transno235, align 4, !dbg !6235, !tbaa !1767
  %204 = load ptr, ptr %exec, align 8, !dbg !6236, !tbaa !1527
  %transno241 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %204, i32 0, i32 6, !dbg !6237
  store i32 %203, ptr %transno241, align 8, !dbg !6238, !tbaa !1614
  %205 = load ptr, ptr %state237, align 8, !dbg !6239, !tbaa !1527
  %206 = load ptr, ptr %exec, align 8, !dbg !6240, !tbaa !1527
  %state242 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %206, i32 0, i32 5, !dbg !6241
  store ptr %205, ptr %state242, align 8, !dbg !6242, !tbaa !1610
  call void @llvm.lifetime.end.p0(i64 8, ptr %state237) #8, !dbg !6243
  call void @llvm.lifetime.end.p0(i64 4, ptr %transno235) #8, !dbg !6243
  br label %if.end243, !dbg !6244

if.end243:                                        ; preds = %if.then234, %if.end229
  %207 = load ptr, ptr %exec, align 8, !dbg !6245, !tbaa !1527
  %inputString244 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %207, i32 0, i32 16, !dbg !6245
  %208 = load ptr, ptr %inputString244, align 8, !dbg !6245, !tbaa !1569
  %209 = load ptr, ptr %exec, align 8, !dbg !6245, !tbaa !1527
  %index245 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %209, i32 0, i32 14, !dbg !6245
  %210 = load i32, ptr %index245, align 8, !dbg !6245, !tbaa !1574
  %idxprom246 = sext i32 %210 to i64, !dbg !6245
  %arrayidx247 = getelementptr inbounds i8, ptr %208, i64 %idxprom246, !dbg !6245
  %call248 = call i32 @xmlStringCurrentChar(ptr noundef null, ptr noundef %arrayidx247, ptr noundef %len), !dbg !6245
  store i32 %call248, ptr %codepoint, align 4, !dbg !6246, !tbaa !1767
  %211 = load ptr, ptr %atom, align 8, !dbg !6247, !tbaa !1527
  %212 = load i32, ptr %codepoint, align 4, !dbg !6248, !tbaa !1767
  %call249 = call i32 @xmlRegCheckCharacter(ptr noundef %211, i32 noundef %212), !dbg !6249
  store i32 %call249, ptr %ret, align 4, !dbg !6250, !tbaa !1767
  %213 = load ptr, ptr %exec, align 8, !dbg !6251, !tbaa !1527
  %transcount250 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %213, i32 0, i32 7, !dbg !6252
  %214 = load i32, ptr %transcount250, align 4, !dbg !6253, !tbaa !1618
  %inc251 = add nsw i32 %214, 1, !dbg !6253
  store i32 %inc251, ptr %transcount250, align 4, !dbg !6253, !tbaa !1618
  br label %do.cond, !dbg !6254

do.cond:                                          ; preds = %if.end243
  %215 = load i32, ptr %ret, align 4, !dbg !6255, !tbaa !1767
  %cmp252 = icmp eq i32 %215, 1, !dbg !6256
  br i1 %cmp252, label %do.body, label %do.end, !dbg !6254, !llvm.loop !6257

do.end:                                           ; preds = %do.cond, %if.then227, %if.then216
  %216 = load ptr, ptr %exec, align 8, !dbg !6259, !tbaa !1527
  %transcount254 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %216, i32 0, i32 7, !dbg !6261
  %217 = load i32, ptr %transcount254, align 4, !dbg !6261, !tbaa !1618
  %218 = load ptr, ptr %atom, align 8, !dbg !6262, !tbaa !1527
  %min255 = getelementptr inbounds %struct._xmlRegAtom, ptr %218, i32 0, i32 3, !dbg !6263
  %219 = load i32, ptr %min255, align 4, !dbg !6263, !tbaa !2372
  %cmp256 = icmp slt i32 %217, %219, !dbg !6264
  br i1 %cmp256, label %if.then258, label %if.end259, !dbg !6265

if.then258:                                       ; preds = %do.end
  store i32 0, ptr %ret, align 4, !dbg !6266, !tbaa !1767
  br label %if.end259, !dbg !6267

if.end259:                                        ; preds = %if.then258, %do.end
  %220 = load i32, ptr %ret, align 4, !dbg !6268, !tbaa !1767
  %cmp260 = icmp slt i32 %220, 0, !dbg !6270
  br i1 %cmp260, label %if.then262, label %if.end263, !dbg !6271

if.then262:                                       ; preds = %if.end259
  store i32 0, ptr %ret, align 4, !dbg !6272, !tbaa !1767
  br label %if.end263, !dbg !6273

if.end263:                                        ; preds = %if.then262, %if.end259
  %221 = load i32, ptr %ret, align 4, !dbg !6274, !tbaa !1767
  %cmp264 = icmp eq i32 %221, 0, !dbg !6276
  br i1 %cmp264, label %if.then266, label %if.end267, !dbg !6277

if.then266:                                       ; preds = %if.end263
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup283, !dbg !6278

if.end267:                                        ; preds = %if.end263
  %222 = load ptr, ptr %trans, align 8, !dbg !6280, !tbaa !1527
  %counter268 = getelementptr inbounds %struct._xmlRegTrans, ptr %222, i32 0, i32 2, !dbg !6282
  %223 = load i32, ptr %counter268, align 4, !dbg !6282, !tbaa !2123
  %cmp269 = icmp sge i32 %223, 0, !dbg !6283
  br i1 %cmp269, label %if.then271, label %if.end282, !dbg !6284

if.then271:                                       ; preds = %if.end267
  %224 = load ptr, ptr %exec, align 8, !dbg !6285, !tbaa !1527
  %counts272 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %224, i32 0, i32 11, !dbg !6288
  %225 = load ptr, ptr %counts272, align 8, !dbg !6288, !tbaa !1644
  %cmp273 = icmp eq ptr %225, null, !dbg !6289
  br i1 %cmp273, label %if.then275, label %if.end277, !dbg !6290

if.then275:                                       ; preds = %if.then271
  %226 = load ptr, ptr %exec, align 8, !dbg !6291, !tbaa !1527
  %status276 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %226, i32 0, i32 0, !dbg !6293
  store i32 -1, ptr %status276, align 8, !dbg !6294, !tbaa !1594
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup283, !dbg !6295

if.end277:                                        ; preds = %if.then271
  %227 = load ptr, ptr %exec, align 8, !dbg !6296, !tbaa !1527
  %counts278 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %227, i32 0, i32 11, !dbg !6297
  %228 = load ptr, ptr %counts278, align 8, !dbg !6297, !tbaa !1644
  %229 = load ptr, ptr %trans, align 8, !dbg !6298, !tbaa !1527
  %counter279 = getelementptr inbounds %struct._xmlRegTrans, ptr %229, i32 0, i32 2, !dbg !6299
  %230 = load i32, ptr %counter279, align 4, !dbg !6299, !tbaa !2123
  %idxprom280 = sext i32 %230 to i64, !dbg !6296
  %arrayidx281 = getelementptr inbounds i32, ptr %228, i64 %idxprom280, !dbg !6296
  %231 = load i32, ptr %arrayidx281, align 4, !dbg !6300, !tbaa !1767
  %dec = add nsw i32 %231, -1, !dbg !6300
  store i32 %dec, ptr %arrayidx281, align 4, !dbg !6300, !tbaa !1767
  br label %if.end282, !dbg !6301

if.end282:                                        ; preds = %if.end277, %if.end267
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6302
  br label %cleanup283, !dbg !6302

cleanup283:                                       ; preds = %if.then275, %if.then266, %if.end282, %cleanup191
  call void @llvm.lifetime.end.p0(i64 8, ptr %to153) #8, !dbg !6302
  %cleanup.dest284 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest284, label %cleanup431 [
    i32 0, label %cleanup.cont285
    i32 7, label %for.inc
    i32 4, label %rollback
  ]

cleanup.cont285:                                  ; preds = %cleanup283
  br label %if.end300, !dbg !6303

if.else286:                                       ; preds = %land.lhs.true148, %land.lhs.true144, %if.then135
  %232 = load i32, ptr %ret, align 4, !dbg !6304, !tbaa !1767
  %cmp287 = icmp eq i32 %232, 0, !dbg !6306
  br i1 %cmp287, label %land.lhs.true289, label %if.end299, !dbg !6307

land.lhs.true289:                                 ; preds = %if.else286
  %233 = load ptr, ptr %atom, align 8, !dbg !6308, !tbaa !1527
  %min290 = getelementptr inbounds %struct._xmlRegAtom, ptr %233, i32 0, i32 3, !dbg !6309
  %234 = load i32, ptr %min290, align 4, !dbg !6309, !tbaa !2372
  %cmp291 = icmp eq i32 %234, 0, !dbg !6310
  br i1 %cmp291, label %land.lhs.true293, label %if.end299, !dbg !6311

land.lhs.true293:                                 ; preds = %land.lhs.true289
  %235 = load ptr, ptr %atom, align 8, !dbg !6312, !tbaa !1527
  %max294 = getelementptr inbounds %struct._xmlRegAtom, ptr %235, i32 0, i32 4, !dbg !6313
  %236 = load i32, ptr %max294, align 8, !dbg !6313, !tbaa !2377
  %cmp295 = icmp sgt i32 %236, 0, !dbg !6314
  br i1 %cmp295, label %if.then297, label %if.end299, !dbg !6315

if.then297:                                       ; preds = %land.lhs.true293
  %237 = load ptr, ptr %exec, align 8, !dbg !6316, !tbaa !1527
  %transcount298 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %237, i32 0, i32 7, !dbg !6318
  store i32 1, ptr %transcount298, align 4, !dbg !6319, !tbaa !1618
  store i32 0, ptr %len, align 4, !dbg !6320, !tbaa !1767
  store i32 1, ptr %ret, align 4, !dbg !6321, !tbaa !1767
  br label %if.end299, !dbg !6322

if.end299:                                        ; preds = %if.then297, %land.lhs.true293, %land.lhs.true289, %if.else286
  br label %if.end300

if.end300:                                        ; preds = %if.end299, %cleanup.cont285
  br label %if.end312, !dbg !6323

if.else301:                                       ; preds = %if.else127
  %238 = load ptr, ptr %atom, align 8, !dbg !6324, !tbaa !1527
  %min302 = getelementptr inbounds %struct._xmlRegAtom, ptr %238, i32 0, i32 3, !dbg !6326
  %239 = load i32, ptr %min302, align 4, !dbg !6326, !tbaa !2372
  %cmp303 = icmp eq i32 %239, 0, !dbg !6327
  br i1 %cmp303, label %land.lhs.true305, label %if.end311, !dbg !6328

land.lhs.true305:                                 ; preds = %if.else301
  %240 = load ptr, ptr %atom, align 8, !dbg !6329, !tbaa !1527
  %max306 = getelementptr inbounds %struct._xmlRegAtom, ptr %240, i32 0, i32 4, !dbg !6330
  %241 = load i32, ptr %max306, align 8, !dbg !6330, !tbaa !2377
  %cmp307 = icmp sgt i32 %241, 0, !dbg !6331
  br i1 %cmp307, label %if.then309, label %if.end311, !dbg !6332

if.then309:                                       ; preds = %land.lhs.true305
  %242 = load ptr, ptr %exec, align 8, !dbg !6333, !tbaa !1527
  %transcount310 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %242, i32 0, i32 7, !dbg !6335
  store i32 1, ptr %transcount310, align 4, !dbg !6336, !tbaa !1618
  store i32 0, ptr %len, align 4, !dbg !6337, !tbaa !1767
  store i32 1, ptr %ret, align 4, !dbg !6338, !tbaa !1767
  br label %if.end311, !dbg !6339

if.end311:                                        ; preds = %if.then309, %land.lhs.true305, %if.else301
  br label %if.end312

if.end312:                                        ; preds = %if.end311, %if.end300
  br label %if.end313

if.end313:                                        ; preds = %if.end312
  br label %if.end314

if.end314:                                        ; preds = %if.end313, %cleanup.cont
  %243 = load i32, ptr %ret, align 4, !dbg !6340, !tbaa !1767
  %cmp315 = icmp eq i32 %243, 1, !dbg !6341
  br i1 %cmp315, label %if.then317, label %if.else411, !dbg !6342

if.then317:                                       ; preds = %if.end314
  %244 = load ptr, ptr %trans, align 8, !dbg !6343, !tbaa !1527
  %nd = getelementptr inbounds %struct._xmlRegTrans, ptr %244, i32 0, i32 4, !dbg !6345
  %245 = load i32, ptr %nd, align 4, !dbg !6345, !tbaa !6346
  %cmp318 = icmp eq i32 %245, 1, !dbg !6347
  br i1 %cmp318, label %if.then334, label %lor.lhs.false320, !dbg !6348

lor.lhs.false320:                                 ; preds = %if.then317
  %246 = load ptr, ptr %trans, align 8, !dbg !6349, !tbaa !1527
  %count321 = getelementptr inbounds %struct._xmlRegTrans, ptr %246, i32 0, i32 3, !dbg !6350
  %247 = load i32, ptr %count321, align 8, !dbg !6350, !tbaa !2077
  %cmp322 = icmp sge i32 %247, 0, !dbg !6351
  br i1 %cmp322, label %land.lhs.true324, label %if.end335, !dbg !6352

land.lhs.true324:                                 ; preds = %lor.lhs.false320
  %248 = load i32, ptr %deter, align 4, !dbg !6353, !tbaa !1767
  %cmp325 = icmp eq i32 %248, 0, !dbg !6354
  br i1 %cmp325, label %land.lhs.true327, label %if.end335, !dbg !6355

land.lhs.true327:                                 ; preds = %land.lhs.true324
  %249 = load ptr, ptr %exec, align 8, !dbg !6356, !tbaa !1527
  %state328 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %249, i32 0, i32 5, !dbg !6357
  %250 = load ptr, ptr %state328, align 8, !dbg !6357, !tbaa !1610
  %nbTrans329 = getelementptr inbounds %struct._xmlAutomataState, ptr %250, i32 0, i32 6, !dbg !6358
  %251 = load i32, ptr %nbTrans329, align 8, !dbg !6358, !tbaa !2052
  %252 = load ptr, ptr %exec, align 8, !dbg !6359, !tbaa !1527
  %transno330 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %252, i32 0, i32 6, !dbg !6360
  %253 = load i32, ptr %transno330, align 8, !dbg !6360, !tbaa !1614
  %add331 = add nsw i32 %253, 1, !dbg !6361
  %cmp332 = icmp sgt i32 %251, %add331, !dbg !6362
  br i1 %cmp332, label %if.then334, label %if.end335, !dbg !6363

if.then334:                                       ; preds = %land.lhs.true327, %if.then317
  %254 = load ptr, ptr %exec, align 8, !dbg !6364, !tbaa !1527
  call void @xmlFARegExecSave(ptr noundef %254), !dbg !6366
  br label %if.end335, !dbg !6367

if.end335:                                        ; preds = %if.then334, %land.lhs.true327, %land.lhs.true324, %lor.lhs.false320
  %255 = load ptr, ptr %trans, align 8, !dbg !6368, !tbaa !1527
  %counter336 = getelementptr inbounds %struct._xmlRegTrans, ptr %255, i32 0, i32 2, !dbg !6369
  %256 = load i32, ptr %counter336, align 4, !dbg !6369, !tbaa !2123
  %cmp337 = icmp sge i32 %256, 0, !dbg !6370
  br i1 %cmp337, label %if.then339, label %if.end378, !dbg !6371

if.then339:                                       ; preds = %if.end335
  call void @llvm.lifetime.start.p0(i64 8, ptr %counter340) #8, !dbg !6372
  tail call void @llvm.dbg.declare(metadata ptr %counter340, metadata !5811, metadata !DIExpression()), !dbg !6373
  %257 = load ptr, ptr %exec, align 8, !dbg !6374, !tbaa !1527
  %counts341 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %257, i32 0, i32 11, !dbg !6376
  %258 = load ptr, ptr %counts341, align 8, !dbg !6376, !tbaa !1644
  %cmp342 = icmp eq ptr %258, null, !dbg !6377
  br i1 %cmp342, label %if.then353, label %lor.lhs.false344, !dbg !6378

lor.lhs.false344:                                 ; preds = %if.then339
  %259 = load ptr, ptr %exec, align 8, !dbg !6379, !tbaa !1527
  %comp345 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %259, i32 0, i32 2, !dbg !6380
  %260 = load ptr, ptr %comp345, align 8, !dbg !6380, !tbaa !1599
  %cmp346 = icmp eq ptr %260, null, !dbg !6381
  br i1 %cmp346, label %if.then353, label %lor.lhs.false348, !dbg !6382

lor.lhs.false348:                                 ; preds = %lor.lhs.false344
  %261 = load ptr, ptr %exec, align 8, !dbg !6383, !tbaa !1527
  %comp349 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %261, i32 0, i32 2, !dbg !6384
  %262 = load ptr, ptr %comp349, align 8, !dbg !6384, !tbaa !1599
  %counters350 = getelementptr inbounds %struct._xmlRegexp, ptr %262, i32 0, i32 6, !dbg !6385
  %263 = load ptr, ptr %counters350, align 8, !dbg !6385, !tbaa !2134
  %cmp351 = icmp eq ptr %263, null, !dbg !6386
  br i1 %cmp351, label %if.then353, label %if.end355, !dbg !6387

if.then353:                                       ; preds = %lor.lhs.false348, %lor.lhs.false344, %if.then339
  %264 = load ptr, ptr %exec, align 8, !dbg !6388, !tbaa !1527
  %status354 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %264, i32 0, i32 0, !dbg !6390
  store i32 -1, ptr %status354, align 8, !dbg !6391, !tbaa !1594
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup375, !dbg !6392

if.end355:                                        ; preds = %lor.lhs.false348
  %265 = load ptr, ptr %exec, align 8, !dbg !6393, !tbaa !1527
  %comp356 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %265, i32 0, i32 2, !dbg !6394
  %266 = load ptr, ptr %comp356, align 8, !dbg !6394, !tbaa !1599
  %counters357 = getelementptr inbounds %struct._xmlRegexp, ptr %266, i32 0, i32 6, !dbg !6395
  %267 = load ptr, ptr %counters357, align 8, !dbg !6395, !tbaa !2134
  %268 = load ptr, ptr %trans, align 8, !dbg !6396, !tbaa !1527
  %counter358 = getelementptr inbounds %struct._xmlRegTrans, ptr %268, i32 0, i32 2, !dbg !6397
  %269 = load i32, ptr %counter358, align 4, !dbg !6397, !tbaa !2123
  %idxprom359 = sext i32 %269 to i64, !dbg !6393
  %arrayidx360 = getelementptr inbounds %struct._xmlRegCounter, ptr %267, i64 %idxprom359, !dbg !6393
  store ptr %arrayidx360, ptr %counter340, align 8, !dbg !6398, !tbaa !1527
  %270 = load ptr, ptr %exec, align 8, !dbg !6399, !tbaa !1527
  %counts361 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %270, i32 0, i32 11, !dbg !6401
  %271 = load ptr, ptr %counts361, align 8, !dbg !6401, !tbaa !1644
  %272 = load ptr, ptr %trans, align 8, !dbg !6402, !tbaa !1527
  %counter362 = getelementptr inbounds %struct._xmlRegTrans, ptr %272, i32 0, i32 2, !dbg !6403
  %273 = load i32, ptr %counter362, align 4, !dbg !6403, !tbaa !2123
  %idxprom363 = sext i32 %273 to i64, !dbg !6399
  %arrayidx364 = getelementptr inbounds i32, ptr %271, i64 %idxprom363, !dbg !6399
  %274 = load i32, ptr %arrayidx364, align 4, !dbg !6399, !tbaa !1767
  %275 = load ptr, ptr %counter340, align 8, !dbg !6404, !tbaa !1527
  %max365 = getelementptr inbounds %struct._xmlRegCounter, ptr %275, i32 0, i32 1, !dbg !6405
  %276 = load i32, ptr %max365, align 4, !dbg !6405, !tbaa !2147
  %cmp366 = icmp sge i32 %274, %276, !dbg !6406
  br i1 %cmp366, label %if.then368, label %if.end369, !dbg !6407

if.then368:                                       ; preds = %if.end355
  store i32 7, ptr %cleanup.dest.slot, align 4
  br label %cleanup375, !dbg !6408

if.end369:                                        ; preds = %if.end355
  %277 = load ptr, ptr %exec, align 8, !dbg !6409, !tbaa !1527
  %counts370 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %277, i32 0, i32 11, !dbg !6410
  %278 = load ptr, ptr %counts370, align 8, !dbg !6410, !tbaa !1644
  %279 = load ptr, ptr %trans, align 8, !dbg !6411, !tbaa !1527
  %counter371 = getelementptr inbounds %struct._xmlRegTrans, ptr %279, i32 0, i32 2, !dbg !6412
  %280 = load i32, ptr %counter371, align 4, !dbg !6412, !tbaa !2123
  %idxprom372 = sext i32 %280 to i64, !dbg !6409
  %arrayidx373 = getelementptr inbounds i32, ptr %278, i64 %idxprom372, !dbg !6409
  %281 = load i32, ptr %arrayidx373, align 4, !dbg !6413, !tbaa !1767
  %inc374 = add nsw i32 %281, 1, !dbg !6413
  store i32 %inc374, ptr %arrayidx373, align 4, !dbg !6413, !tbaa !1767
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6414
  br label %cleanup375, !dbg !6414

cleanup375:                                       ; preds = %if.then353, %if.end369, %if.then368
  call void @llvm.lifetime.end.p0(i64 8, ptr %counter340) #8, !dbg !6414
  %cleanup.dest376 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest376, label %cleanup431 [
    i32 0, label %cleanup.cont377
    i32 7, label %for.inc
  ]

cleanup.cont377:                                  ; preds = %cleanup375
  br label %if.end378, !dbg !6415

if.end378:                                        ; preds = %cleanup.cont377, %if.end335
  %282 = load ptr, ptr %trans, align 8, !dbg !6416, !tbaa !1527
  %count379 = getelementptr inbounds %struct._xmlRegTrans, ptr %282, i32 0, i32 3, !dbg !6418
  %283 = load i32, ptr %count379, align 8, !dbg !6418, !tbaa !2077
  %cmp380 = icmp sge i32 %283, 0, !dbg !6419
  br i1 %cmp380, label %land.lhs.true382, label %if.end397, !dbg !6420

land.lhs.true382:                                 ; preds = %if.end378
  %284 = load ptr, ptr %trans, align 8, !dbg !6421, !tbaa !1527
  %count383 = getelementptr inbounds %struct._xmlRegTrans, ptr %284, i32 0, i32 3, !dbg !6422
  %285 = load i32, ptr %count383, align 8, !dbg !6422, !tbaa !2077
  %cmp384 = icmp slt i32 %285, 1193046, !dbg !6423
  br i1 %cmp384, label %if.then386, label %if.end397, !dbg !6424

if.then386:                                       ; preds = %land.lhs.true382
  %286 = load ptr, ptr %exec, align 8, !dbg !6425, !tbaa !1527
  %counts387 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %286, i32 0, i32 11, !dbg !6428
  %287 = load ptr, ptr %counts387, align 8, !dbg !6428, !tbaa !1644
  %cmp388 = icmp eq ptr %287, null, !dbg !6429
  br i1 %cmp388, label %if.then390, label %if.end392, !dbg !6430

if.then390:                                       ; preds = %if.then386
  %288 = load ptr, ptr %exec, align 8, !dbg !6431, !tbaa !1527
  %status391 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %288, i32 0, i32 0, !dbg !6433
  store i32 -1, ptr %status391, align 8, !dbg !6434, !tbaa !1594
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup431, !dbg !6435

if.end392:                                        ; preds = %if.then386
  %289 = load ptr, ptr %exec, align 8, !dbg !6436, !tbaa !1527
  %counts393 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %289, i32 0, i32 11, !dbg !6437
  %290 = load ptr, ptr %counts393, align 8, !dbg !6437, !tbaa !1644
  %291 = load ptr, ptr %trans, align 8, !dbg !6438, !tbaa !1527
  %count394 = getelementptr inbounds %struct._xmlRegTrans, ptr %291, i32 0, i32 3, !dbg !6439
  %292 = load i32, ptr %count394, align 8, !dbg !6439, !tbaa !2077
  %idxprom395 = sext i32 %292 to i64, !dbg !6436
  %arrayidx396 = getelementptr inbounds i32, ptr %290, i64 %idxprom395, !dbg !6436
  store i32 0, ptr %arrayidx396, align 4, !dbg !6440, !tbaa !1767
  br label %if.end397, !dbg !6441

if.end397:                                        ; preds = %if.end392, %land.lhs.true382, %if.end378
  %293 = load ptr, ptr %comp.addr, align 8, !dbg !6442, !tbaa !1527
  %states398 = getelementptr inbounds %struct._xmlRegexp, ptr %293, i32 0, i32 2, !dbg !6443
  %294 = load ptr, ptr %states398, align 8, !dbg !6443, !tbaa !1551
  %295 = load ptr, ptr %trans, align 8, !dbg !6444, !tbaa !1527
  %to399 = getelementptr inbounds %struct._xmlRegTrans, ptr %295, i32 0, i32 1, !dbg !6445
  %296 = load i32, ptr %to399, align 8, !dbg !6445, !tbaa !2065
  %idxprom400 = sext i32 %296 to i64, !dbg !6442
  %arrayidx401 = getelementptr inbounds ptr, ptr %294, i64 %idxprom400, !dbg !6442
  %297 = load ptr, ptr %arrayidx401, align 8, !dbg !6442, !tbaa !1527
  %298 = load ptr, ptr %exec, align 8, !dbg !6446, !tbaa !1527
  %state402 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %298, i32 0, i32 5, !dbg !6447
  store ptr %297, ptr %state402, align 8, !dbg !6448, !tbaa !1610
  %299 = load ptr, ptr %exec, align 8, !dbg !6449, !tbaa !1527
  %transno403 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %299, i32 0, i32 6, !dbg !6450
  store i32 0, ptr %transno403, align 8, !dbg !6451, !tbaa !1614
  %300 = load ptr, ptr %trans, align 8, !dbg !6452, !tbaa !1527
  %atom404 = getelementptr inbounds %struct._xmlRegTrans, ptr %300, i32 0, i32 0, !dbg !6454
  %301 = load ptr, ptr %atom404, align 8, !dbg !6454, !tbaa !2072
  %cmp405 = icmp ne ptr %301, null, !dbg !6455
  br i1 %cmp405, label %if.then407, label %if.end410, !dbg !6456

if.then407:                                       ; preds = %if.end397
  %302 = load i32, ptr %len, align 4, !dbg !6457, !tbaa !1767
  %303 = load ptr, ptr %exec, align 8, !dbg !6459, !tbaa !1527
  %index408 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %303, i32 0, i32 14, !dbg !6460
  %304 = load i32, ptr %index408, align 8, !dbg !6461, !tbaa !1574
  %add409 = add nsw i32 %304, %302, !dbg !6461
  store i32 %add409, ptr %index408, align 8, !dbg !6461, !tbaa !1574
  br label %if.end410, !dbg !6462

if.end410:                                        ; preds = %if.then407, %if.end397
  br label %progress, !dbg !6463

if.else411:                                       ; preds = %if.end314
  %305 = load i32, ptr %ret, align 4, !dbg !6464, !tbaa !1767
  %cmp412 = icmp slt i32 %305, 0, !dbg !6466
  br i1 %cmp412, label %if.then414, label %if.end416, !dbg !6467

if.then414:                                       ; preds = %if.else411
  %306 = load ptr, ptr %exec, align 8, !dbg !6468, !tbaa !1527
  %status415 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %306, i32 0, i32 0, !dbg !6470
  store i32 -4, ptr %status415, align 8, !dbg !6471, !tbaa !1594
  br label %for.end, !dbg !6472

if.end416:                                        ; preds = %if.else411
  br label %if.end417

if.end417:                                        ; preds = %if.end416
  br label %for.inc, !dbg !6473

for.inc:                                          ; preds = %if.end417, %cleanup375, %cleanup283, %if.then84
  %307 = load ptr, ptr %exec, align 8, !dbg !6474, !tbaa !1527
  %transno418 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %307, i32 0, i32 6, !dbg !6475
  %308 = load i32, ptr %transno418, align 8, !dbg !6476, !tbaa !1614
  %inc419 = add nsw i32 %308, 1, !dbg !6476
  store i32 %inc419, ptr %transno418, align 8, !dbg !6476, !tbaa !1614
  br label %for.cond, !dbg !6477, !llvm.loop !6478

for.end:                                          ; preds = %if.then414, %if.then124, %for.cond
  %309 = load ptr, ptr %exec, align 8, !dbg !6480, !tbaa !1527
  %transno420 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %309, i32 0, i32 6, !dbg !6481
  %310 = load i32, ptr %transno420, align 8, !dbg !6481, !tbaa !1614
  %cmp421 = icmp ne i32 %310, 0, !dbg !6482
  br i1 %cmp421, label %if.then428, label %lor.lhs.false423, !dbg !6483

lor.lhs.false423:                                 ; preds = %for.end
  %311 = load ptr, ptr %exec, align 8, !dbg !6484, !tbaa !1527
  %state424 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %311, i32 0, i32 5, !dbg !6485
  %312 = load ptr, ptr %state424, align 8, !dbg !6485, !tbaa !1610
  %nbTrans425 = getelementptr inbounds %struct._xmlAutomataState, ptr %312, i32 0, i32 6, !dbg !6486
  %313 = load i32, ptr %nbTrans425, align 8, !dbg !6486, !tbaa !2052
  %cmp426 = icmp eq i32 %313, 0, !dbg !6487
  br i1 %cmp426, label %if.then428, label %if.end430, !dbg !6488

if.then428:                                       ; preds = %lor.lhs.false423, %for.end
  br label %rollback, !dbg !6489

rollback:                                         ; preds = %if.then428, %cleanup283, %if.else67, %if.then64
  tail call void @llvm.dbg.label(metadata !5816), !dbg !6490
  %314 = load ptr, ptr %exec, align 8, !dbg !6491, !tbaa !1527
  %determinist429 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %314, i32 0, i32 1, !dbg !6492
  store i32 0, ptr %determinist429, align 4, !dbg !6493, !tbaa !1578
  %315 = load ptr, ptr %exec, align 8, !dbg !6494, !tbaa !1527
  call void @xmlFARegExecRollBack(ptr noundef %315), !dbg !6495
  br label %if.end430, !dbg !6496

if.end430:                                        ; preds = %rollback, %lor.lhs.false423
  br label %progress, !dbg !6497

progress:                                         ; preds = %if.end430, %if.end410
  tail call void @llvm.dbg.label(metadata !5819), !dbg !6498
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup431, !dbg !6499, !llvm.loop !6500

cleanup431:                                       ; preds = %if.then390, %progress, %cleanup375, %cleanup283, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %atom) #8, !dbg !6501
  call void @llvm.lifetime.end.p0(i64 8, ptr %trans) #8, !dbg !6501
  %cleanup.dest433 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest433, label %cleanup492 [
    i32 2, label %while.cond
    i32 8, label %error
  ]

while.end:                                        ; preds = %land.end32
  br label %error, !dbg !5914

error:                                            ; preds = %while.end, %cleanup431
  tail call void @llvm.dbg.label(metadata !5820), !dbg !6502
  %316 = load ptr, ptr %exec, align 8, !dbg !6503, !tbaa !1527
  %rollbacks434 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %316, i32 0, i32 10, !dbg !6504
  %317 = load ptr, ptr %rollbacks434, align 8, !dbg !6504, !tbaa !1590
  %cmp435 = icmp ne ptr %317, null, !dbg !6505
  br i1 %cmp435, label %if.then437, label %if.end464, !dbg !6506

if.then437:                                       ; preds = %error
  %318 = load ptr, ptr %exec, align 8, !dbg !6507, !tbaa !1527
  %counts438 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %318, i32 0, i32 11, !dbg !6508
  %319 = load ptr, ptr %counts438, align 8, !dbg !6508, !tbaa !1644
  %cmp439 = icmp ne ptr %319, null, !dbg !6509
  br i1 %cmp439, label %if.then441, label %if.end462, !dbg !6510

if.then441:                                       ; preds = %if.then437
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !6511
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !5821, metadata !DIExpression()), !dbg !6512
  store i32 0, ptr %i, align 4, !dbg !6513, !tbaa !1767
  br label %for.cond442, !dbg !6515

for.cond442:                                      ; preds = %for.inc459, %if.then441
  %320 = load i32, ptr %i, align 4, !dbg !6516, !tbaa !1767
  %321 = load ptr, ptr %exec, align 8, !dbg !6518, !tbaa !1527
  %maxRollbacks443 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %321, i32 0, i32 8, !dbg !6519
  %322 = load i32, ptr %maxRollbacks443, align 8, !dbg !6519, !tbaa !1582
  %cmp444 = icmp slt i32 %320, %322, !dbg !6520
  br i1 %cmp444, label %for.body446, label %for.end461, !dbg !6521

for.body446:                                      ; preds = %for.cond442
  %323 = load ptr, ptr %exec, align 8, !dbg !6522, !tbaa !1527
  %rollbacks447 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %323, i32 0, i32 10, !dbg !6524
  %324 = load ptr, ptr %rollbacks447, align 8, !dbg !6524, !tbaa !1590
  %325 = load i32, ptr %i, align 4, !dbg !6525, !tbaa !1767
  %idxprom448 = sext i32 %325 to i64, !dbg !6522
  %arrayidx449 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %324, i64 %idxprom448, !dbg !6522
  %counts450 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx449, i32 0, i32 3, !dbg !6526
  %326 = load ptr, ptr %counts450, align 8, !dbg !6526, !tbaa !1780
  %cmp451 = icmp ne ptr %326, null, !dbg !6527
  br i1 %cmp451, label %if.then453, label %if.end458, !dbg !6528

if.then453:                                       ; preds = %for.body446
  %327 = load ptr, ptr @xmlFree, align 8, !dbg !6529, !tbaa !1527
  %328 = load ptr, ptr %exec, align 8, !dbg !6530, !tbaa !1527
  %rollbacks454 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %328, i32 0, i32 10, !dbg !6531
  %329 = load ptr, ptr %rollbacks454, align 8, !dbg !6531, !tbaa !1590
  %330 = load i32, ptr %i, align 4, !dbg !6532, !tbaa !1767
  %idxprom455 = sext i32 %330 to i64, !dbg !6530
  %arrayidx456 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %329, i64 %idxprom455, !dbg !6530
  %counts457 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx456, i32 0, i32 3, !dbg !6533
  %331 = load ptr, ptr %counts457, align 8, !dbg !6533, !tbaa !1780
  call void %327(ptr noundef %331), !dbg !6529
  br label %if.end458, !dbg !6529

if.end458:                                        ; preds = %if.then453, %for.body446
  br label %for.inc459, !dbg !6534

for.inc459:                                       ; preds = %if.end458
  %332 = load i32, ptr %i, align 4, !dbg !6535, !tbaa !1767
  %inc460 = add nsw i32 %332, 1, !dbg !6535
  store i32 %inc460, ptr %i, align 4, !dbg !6535, !tbaa !1767
  br label %for.cond442, !dbg !6536, !llvm.loop !6537

for.end461:                                       ; preds = %for.cond442
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !6539
  br label %if.end462, !dbg !6540

if.end462:                                        ; preds = %for.end461, %if.then437
  %333 = load ptr, ptr @xmlFree, align 8, !dbg !6541, !tbaa !1527
  %334 = load ptr, ptr %exec, align 8, !dbg !6542, !tbaa !1527
  %rollbacks463 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %334, i32 0, i32 10, !dbg !6543
  %335 = load ptr, ptr %rollbacks463, align 8, !dbg !6543, !tbaa !1590
  call void %333(ptr noundef %335), !dbg !6541
  br label %if.end464, !dbg !6544

if.end464:                                        ; preds = %if.end462, %error
  %336 = load ptr, ptr %exec, align 8, !dbg !6545, !tbaa !1527
  %state465 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %336, i32 0, i32 5, !dbg !6547
  %337 = load ptr, ptr %state465, align 8, !dbg !6547, !tbaa !1610
  %cmp466 = icmp eq ptr %337, null, !dbg !6548
  br i1 %cmp466, label %if.then468, label %if.end469, !dbg !6549

if.then468:                                       ; preds = %if.end464
  store i32 -1, ptr %retval, align 4, !dbg !6550
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup492, !dbg !6550

if.end469:                                        ; preds = %if.end464
  %338 = load ptr, ptr %exec, align 8, !dbg !6551, !tbaa !1527
  %counts470 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %338, i32 0, i32 11, !dbg !6553
  %339 = load ptr, ptr %counts470, align 8, !dbg !6553, !tbaa !1644
  %cmp471 = icmp ne ptr %339, null, !dbg !6554
  br i1 %cmp471, label %if.then473, label %if.end475, !dbg !6555

if.then473:                                       ; preds = %if.end469
  %340 = load ptr, ptr @xmlFree, align 8, !dbg !6556, !tbaa !1527
  %341 = load ptr, ptr %exec, align 8, !dbg !6557, !tbaa !1527
  %counts474 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %341, i32 0, i32 11, !dbg !6558
  %342 = load ptr, ptr %counts474, align 8, !dbg !6558, !tbaa !1644
  call void %340(ptr noundef %342), !dbg !6556
  br label %if.end475, !dbg !6556

if.end475:                                        ; preds = %if.then473, %if.end469
  %343 = load ptr, ptr %exec, align 8, !dbg !6559, !tbaa !1527
  %status476 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %343, i32 0, i32 0, !dbg !6561
  %344 = load i32, ptr %status476, align 8, !dbg !6561, !tbaa !1594
  %cmp477 = icmp eq i32 %344, 0, !dbg !6562
  br i1 %cmp477, label %if.then479, label %if.end480, !dbg !6563

if.then479:                                       ; preds = %if.end475
  store i32 1, ptr %retval, align 4, !dbg !6564
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup492, !dbg !6564

if.end480:                                        ; preds = %if.end475
  %345 = load ptr, ptr %exec, align 8, !dbg !6565, !tbaa !1527
  %status481 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %345, i32 0, i32 0, !dbg !6567
  %346 = load i32, ptr %status481, align 8, !dbg !6567, !tbaa !1594
  %cmp482 = icmp eq i32 %346, -1, !dbg !6568
  br i1 %cmp482, label %if.then484, label %if.end490, !dbg !6569

if.then484:                                       ; preds = %if.end480
  %347 = load ptr, ptr %exec, align 8, !dbg !6570, !tbaa !1527
  %nbPush485 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %347, i32 0, i32 22, !dbg !6573
  %348 = load i32, ptr %nbPush485, align 8, !dbg !6573, !tbaa !1701
  %cmp486 = icmp sgt i32 %348, 10000000, !dbg !6574
  br i1 %cmp486, label %if.then488, label %if.end489, !dbg !6575

if.then488:                                       ; preds = %if.then484
  store i32 -1, ptr %retval, align 4, !dbg !6576
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup492, !dbg !6576

if.end489:                                        ; preds = %if.then484
  store i32 0, ptr %retval, align 4, !dbg !6577
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup492, !dbg !6577

if.end490:                                        ; preds = %if.end480
  %349 = load ptr, ptr %exec, align 8, !dbg !6578, !tbaa !1527
  %status491 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %349, i32 0, i32 0, !dbg !6579
  %350 = load i32, ptr %status491, align 8, !dbg !6579, !tbaa !1594
  store i32 %350, ptr %retval, align 4, !dbg !6580
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup492, !dbg !6580

cleanup492:                                       ; preds = %if.end490, %if.end489, %if.then488, %if.then479, %if.then468, %cleanup431, %if.then6
  call void @llvm.lifetime.end.p0(i64 4, ptr %deter) #8, !dbg !6581
  call void @llvm.lifetime.end.p0(i64 4, ptr %len) #8, !dbg !6581
  call void @llvm.lifetime.end.p0(i64 4, ptr %codepoint) #8, !dbg !6581
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !6581
  call void @llvm.lifetime.end.p0(i64 8, ptr %exec) #8, !dbg !6581
  call void @llvm.lifetime.end.p0(i64 152, ptr %execval) #8, !dbg !6581
  %351 = load i32, ptr %retval, align 4, !dbg !6581
  ret i32 %351, !dbg !6581
}

; Function Attrs: nounwind uwtable
define i32 @xmlRegexpIsDeterminist(ptr noundef %comp) #0 !dbg !6582 {
entry:
  %retval = alloca i32, align 4
  %comp.addr = alloca ptr, align 8
  %am = alloca ptr, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i32, align 4
  store ptr %comp, ptr %comp.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %comp.addr, metadata !6586, metadata !DIExpression()), !dbg !6596
  call void @llvm.lifetime.start.p0(i64 8, ptr %am) #8, !dbg !6597
  tail call void @llvm.dbg.declare(metadata ptr %am, metadata !6587, metadata !DIExpression()), !dbg !6598
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !6599
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !6592, metadata !DIExpression()), !dbg !6600
  %0 = load ptr, ptr %comp.addr, align 8, !dbg !6601, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !6603
  br i1 %cmp, label %if.then, label %if.end, !dbg !6604

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !6605
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6605

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %comp.addr, align 8, !dbg !6606, !tbaa !1527
  %determinist = getelementptr inbounds %struct._xmlRegexp, ptr %1, i32 0, i32 7, !dbg !6608
  %2 = load i32, ptr %determinist, align 8, !dbg !6608, !tbaa !5139
  %cmp1 = icmp ne i32 %2, -1, !dbg !6609
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !6610

if.then2:                                         ; preds = %if.end
  %3 = load ptr, ptr %comp.addr, align 8, !dbg !6611, !tbaa !1527
  %determinist3 = getelementptr inbounds %struct._xmlRegexp, ptr %3, i32 0, i32 7, !dbg !6612
  %4 = load i32, ptr %determinist3, align 8, !dbg !6612, !tbaa !5139
  store i32 %4, ptr %retval, align 4, !dbg !6613
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6613

if.end4:                                          ; preds = %if.end
  %call = call ptr @xmlNewAutomata(), !dbg !6614
  store ptr %call, ptr %am, align 8, !dbg !6615, !tbaa !1527
  %5 = load ptr, ptr %am, align 8, !dbg !6616, !tbaa !1527
  %cmp5 = icmp eq ptr %5, null, !dbg !6618
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6619

if.then6:                                         ; preds = %if.end4
  store i32 -1, ptr %retval, align 4, !dbg !6620
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6620

if.end7:                                          ; preds = %if.end4
  %6 = load ptr, ptr %am, align 8, !dbg !6621, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlAutomata, ptr %6, i32 0, i32 13, !dbg !6622
  %7 = load ptr, ptr %states, align 8, !dbg !6622, !tbaa !4343
  %cmp8 = icmp ne ptr %7, null, !dbg !6623
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !6624

if.then9:                                         ; preds = %if.end7
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !6625
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !6593, metadata !DIExpression()), !dbg !6626
  store i32 0, ptr %i, align 4, !dbg !6627, !tbaa !1767
  br label %for.cond, !dbg !6629

for.cond:                                         ; preds = %for.inc, %if.then9
  %8 = load i32, ptr %i, align 4, !dbg !6630, !tbaa !1767
  %9 = load ptr, ptr %am, align 8, !dbg !6632, !tbaa !1527
  %nbStates = getelementptr inbounds %struct._xmlAutomata, ptr %9, i32 0, i32 12, !dbg !6633
  %10 = load i32, ptr %nbStates, align 4, !dbg !6633, !tbaa !4359
  %cmp10 = icmp slt i32 %8, %10, !dbg !6634
  br i1 %cmp10, label %for.body, label %for.end, !dbg !6635

for.body:                                         ; preds = %for.cond
  %11 = load ptr, ptr %am, align 8, !dbg !6636, !tbaa !1527
  %states11 = getelementptr inbounds %struct._xmlAutomata, ptr %11, i32 0, i32 13, !dbg !6637
  %12 = load ptr, ptr %states11, align 8, !dbg !6637, !tbaa !4343
  %13 = load i32, ptr %i, align 4, !dbg !6638, !tbaa !1767
  %idxprom = sext i32 %13 to i64, !dbg !6636
  %arrayidx = getelementptr inbounds ptr, ptr %12, i64 %idxprom, !dbg !6636
  %14 = load ptr, ptr %arrayidx, align 8, !dbg !6636, !tbaa !1527
  call void @xmlRegFreeState(ptr noundef %14), !dbg !6639
  br label %for.inc, !dbg !6639

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !dbg !6640, !tbaa !1767
  %inc = add nsw i32 %15, 1, !dbg !6640
  store i32 %inc, ptr %i, align 4, !dbg !6640, !tbaa !1767
  br label %for.cond, !dbg !6641, !llvm.loop !6642

for.end:                                          ; preds = %for.cond
  %16 = load ptr, ptr @xmlFree, align 8, !dbg !6644, !tbaa !1527
  %17 = load ptr, ptr %am, align 8, !dbg !6645, !tbaa !1527
  %states12 = getelementptr inbounds %struct._xmlAutomata, ptr %17, i32 0, i32 13, !dbg !6646
  %18 = load ptr, ptr %states12, align 8, !dbg !6646, !tbaa !4343
  call void %16(ptr noundef %18), !dbg !6644
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !6647
  br label %if.end13, !dbg !6648

if.end13:                                         ; preds = %for.end, %if.end7
  %19 = load ptr, ptr %comp.addr, align 8, !dbg !6649, !tbaa !1527
  %nbAtoms = getelementptr inbounds %struct._xmlRegexp, ptr %19, i32 0, i32 3, !dbg !6650
  %20 = load i32, ptr %nbAtoms, align 8, !dbg !6650, !tbaa !3867
  %21 = load ptr, ptr %am, align 8, !dbg !6651, !tbaa !1527
  %nbAtoms14 = getelementptr inbounds %struct._xmlAutomata, ptr %21, i32 0, i32 9, !dbg !6652
  store i32 %20, ptr %nbAtoms14, align 4, !dbg !6653, !tbaa !4586
  %22 = load ptr, ptr %comp.addr, align 8, !dbg !6654, !tbaa !1527
  %atoms = getelementptr inbounds %struct._xmlRegexp, ptr %22, i32 0, i32 4, !dbg !6655
  %23 = load ptr, ptr %atoms, align 8, !dbg !6655, !tbaa !3885
  %24 = load ptr, ptr %am, align 8, !dbg !6656, !tbaa !1527
  %atoms15 = getelementptr inbounds %struct._xmlAutomata, ptr %24, i32 0, i32 10, !dbg !6657
  store ptr %23, ptr %atoms15, align 8, !dbg !6658, !tbaa !4575
  %25 = load ptr, ptr %comp.addr, align 8, !dbg !6659, !tbaa !1527
  %nbStates16 = getelementptr inbounds %struct._xmlRegexp, ptr %25, i32 0, i32 1, !dbg !6660
  %26 = load i32, ptr %nbStates16, align 8, !dbg !6660, !tbaa !3896
  %27 = load ptr, ptr %am, align 8, !dbg !6661, !tbaa !1527
  %nbStates17 = getelementptr inbounds %struct._xmlAutomata, ptr %27, i32 0, i32 12, !dbg !6662
  store i32 %26, ptr %nbStates17, align 4, !dbg !6663, !tbaa !4359
  %28 = load ptr, ptr %comp.addr, align 8, !dbg !6664, !tbaa !1527
  %states18 = getelementptr inbounds %struct._xmlRegexp, ptr %28, i32 0, i32 2, !dbg !6665
  %29 = load ptr, ptr %states18, align 8, !dbg !6665, !tbaa !1551
  %30 = load ptr, ptr %am, align 8, !dbg !6666, !tbaa !1527
  %states19 = getelementptr inbounds %struct._xmlAutomata, ptr %30, i32 0, i32 13, !dbg !6667
  store ptr %29, ptr %states19, align 8, !dbg !6668, !tbaa !4343
  %31 = load ptr, ptr %am, align 8, !dbg !6669, !tbaa !1527
  %determinist20 = getelementptr inbounds %struct._xmlAutomata, ptr %31, i32 0, i32 17, !dbg !6670
  store i32 -1, ptr %determinist20, align 8, !dbg !6671, !tbaa !4275
  %32 = load ptr, ptr %comp.addr, align 8, !dbg !6672, !tbaa !1527
  %flags = getelementptr inbounds %struct._xmlRegexp, ptr %32, i32 0, i32 8, !dbg !6673
  %33 = load i32, ptr %flags, align 4, !dbg !6673, !tbaa !5146
  %34 = load ptr, ptr %am, align 8, !dbg !6674, !tbaa !1527
  %flags21 = getelementptr inbounds %struct._xmlAutomata, ptr %34, i32 0, i32 19, !dbg !6675
  store i32 %33, ptr %flags21, align 8, !dbg !6676, !tbaa !5142
  %35 = load ptr, ptr %am, align 8, !dbg !6677, !tbaa !1527
  %call22 = call i32 @xmlFAComputesDeterminism(ptr noundef %35), !dbg !6678
  store i32 %call22, ptr %ret, align 4, !dbg !6679, !tbaa !1767
  %36 = load ptr, ptr %am, align 8, !dbg !6680, !tbaa !1527
  %atoms23 = getelementptr inbounds %struct._xmlAutomata, ptr %36, i32 0, i32 10, !dbg !6681
  store ptr null, ptr %atoms23, align 8, !dbg !6682, !tbaa !4575
  %37 = load ptr, ptr %am, align 8, !dbg !6683, !tbaa !1527
  %states24 = getelementptr inbounds %struct._xmlAutomata, ptr %37, i32 0, i32 13, !dbg !6684
  store ptr null, ptr %states24, align 8, !dbg !6685, !tbaa !4343
  %38 = load ptr, ptr %am, align 8, !dbg !6686, !tbaa !1527
  call void @xmlFreeAutomata(ptr noundef %38), !dbg !6687
  %39 = load i32, ptr %ret, align 4, !dbg !6688, !tbaa !1767
  %40 = load ptr, ptr %comp.addr, align 8, !dbg !6689, !tbaa !1527
  %determinist25 = getelementptr inbounds %struct._xmlRegexp, ptr %40, i32 0, i32 7, !dbg !6690
  store i32 %39, ptr %determinist25, align 8, !dbg !6691, !tbaa !5139
  %41 = load i32, ptr %ret, align 4, !dbg !6692, !tbaa !1767
  store i32 %41, ptr %retval, align 4, !dbg !6693
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6693

cleanup:                                          ; preds = %if.end13, %if.then6, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !6694
  call void @llvm.lifetime.end.p0(i64 8, ptr %am) #8, !dbg !6694
  %42 = load i32, ptr %retval, align 4, !dbg !6694
  ret i32 %42, !dbg !6694
}

; Function Attrs: nounwind uwtable
define ptr @xmlNewAutomata() #0 !dbg !6695 {
entry:
  %retval = alloca ptr, align 8
  %ctxt = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %ctxt) #8, !dbg !6700
  tail call void @llvm.dbg.declare(metadata ptr %ctxt, metadata !6699, metadata !DIExpression()), !dbg !6701
  %call = call ptr @xmlRegNewParserCtxt(ptr noundef null), !dbg !6702
  store ptr %call, ptr %ctxt, align 8, !dbg !6703, !tbaa !1527
  %0 = load ptr, ptr %ctxt, align 8, !dbg !6704, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !6706
  br i1 %cmp, label %if.then, label %if.end, !dbg !6707

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !6708
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6708

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt, align 8, !dbg !6709, !tbaa !1527
  %end = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 5, !dbg !6710
  store ptr null, ptr %end, align 8, !dbg !6711, !tbaa !4163
  %2 = load ptr, ptr %ctxt, align 8, !dbg !6712, !tbaa !1527
  %call1 = call ptr @xmlRegNewState(ptr noundef %2), !dbg !6713
  %3 = load ptr, ptr %ctxt, align 8, !dbg !6714, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 6, !dbg !6715
  store ptr %call1, ptr %state, align 8, !dbg !6716, !tbaa !4169
  %4 = load ptr, ptr %ctxt, align 8, !dbg !6717, !tbaa !1527
  %start = getelementptr inbounds %struct._xmlAutomata, ptr %4, i32 0, i32 4, !dbg !6718
  store ptr %call1, ptr %start, align 8, !dbg !6719, !tbaa !4173
  %5 = load ptr, ptr %ctxt, align 8, !dbg !6720, !tbaa !1527
  %start2 = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 4, !dbg !6722
  %6 = load ptr, ptr %start2, align 8, !dbg !6722, !tbaa !4173
  %cmp3 = icmp eq ptr %6, null, !dbg !6723
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6724

if.then4:                                         ; preds = %if.end
  %7 = load ptr, ptr %ctxt, align 8, !dbg !6725, !tbaa !1527
  call void @xmlFreeAutomata(ptr noundef %7), !dbg !6727
  store ptr null, ptr %retval, align 8, !dbg !6728
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6728

if.end5:                                          ; preds = %if.end
  %8 = load ptr, ptr %ctxt, align 8, !dbg !6729, !tbaa !1527
  %start6 = getelementptr inbounds %struct._xmlAutomata, ptr %8, i32 0, i32 4, !dbg !6730
  %9 = load ptr, ptr %start6, align 8, !dbg !6730, !tbaa !4173
  %type = getelementptr inbounds %struct._xmlAutomataState, ptr %9, i32 0, i32 0, !dbg !6731
  store i32 1, ptr %type, align 8, !dbg !6732, !tbaa !1984
  %10 = load ptr, ptr %ctxt, align 8, !dbg !6733, !tbaa !1527
  %11 = load ptr, ptr %ctxt, align 8, !dbg !6735, !tbaa !1527
  %start7 = getelementptr inbounds %struct._xmlAutomata, ptr %11, i32 0, i32 4, !dbg !6736
  %12 = load ptr, ptr %start7, align 8, !dbg !6736, !tbaa !4173
  %call8 = call i32 @xmlRegStatePush(ptr noundef %10, ptr noundef %12), !dbg !6737
  %cmp9 = icmp slt i32 %call8, 0, !dbg !6738
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !6739

if.then10:                                        ; preds = %if.end5
  %13 = load ptr, ptr %ctxt, align 8, !dbg !6740, !tbaa !1527
  %start11 = getelementptr inbounds %struct._xmlAutomata, ptr %13, i32 0, i32 4, !dbg !6742
  %14 = load ptr, ptr %start11, align 8, !dbg !6742, !tbaa !4173
  call void @xmlRegFreeState(ptr noundef %14), !dbg !6743
  %15 = load ptr, ptr %ctxt, align 8, !dbg !6744, !tbaa !1527
  call void @xmlFreeAutomata(ptr noundef %15), !dbg !6745
  store ptr null, ptr %retval, align 8, !dbg !6746
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6746

if.end12:                                         ; preds = %if.end5
  %16 = load ptr, ptr %ctxt, align 8, !dbg !6747, !tbaa !1527
  %flags = getelementptr inbounds %struct._xmlAutomata, ptr %16, i32 0, i32 19, !dbg !6748
  store i32 0, ptr %flags, align 8, !dbg !6749, !tbaa !5142
  %17 = load ptr, ptr %ctxt, align 8, !dbg !6750, !tbaa !1527
  store ptr %17, ptr %retval, align 8, !dbg !6751
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6751

cleanup:                                          ; preds = %if.end12, %if.then10, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ctxt) #8, !dbg !6752
  %18 = load ptr, ptr %retval, align 8, !dbg !6752
  ret ptr %18, !dbg !6752
}

; Function Attrs: nounwind uwtable
define internal void @xmlRegFreeState(ptr noundef %state) #0 !dbg !6753 {
entry:
  %state.addr = alloca ptr, align 8
  store ptr %state, ptr %state.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !6757, metadata !DIExpression()), !dbg !6758
  %0 = load ptr, ptr %state.addr, align 8, !dbg !6759, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !6761
  br i1 %cmp, label %if.then, label %if.end, !dbg !6762

if.then:                                          ; preds = %entry
  br label %return, !dbg !6763

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %state.addr, align 8, !dbg !6764, !tbaa !1527
  %trans = getelementptr inbounds %struct._xmlAutomataState, ptr %1, i32 0, i32 7, !dbg !6766
  %2 = load ptr, ptr %trans, align 8, !dbg !6766, !tbaa !2058
  %cmp1 = icmp ne ptr %2, null, !dbg !6767
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !6768

if.then2:                                         ; preds = %if.end
  %3 = load ptr, ptr @xmlFree, align 8, !dbg !6769, !tbaa !1527
  %4 = load ptr, ptr %state.addr, align 8, !dbg !6770, !tbaa !1527
  %trans3 = getelementptr inbounds %struct._xmlAutomataState, ptr %4, i32 0, i32 7, !dbg !6771
  %5 = load ptr, ptr %trans3, align 8, !dbg !6771, !tbaa !2058
  call void %3(ptr noundef %5), !dbg !6769
  br label %if.end4, !dbg !6769

if.end4:                                          ; preds = %if.then2, %if.end
  %6 = load ptr, ptr %state.addr, align 8, !dbg !6772, !tbaa !1527
  %transTo = getelementptr inbounds %struct._xmlAutomataState, ptr %6, i32 0, i32 10, !dbg !6774
  %7 = load ptr, ptr %transTo, align 8, !dbg !6774, !tbaa !6775
  %cmp5 = icmp ne ptr %7, null, !dbg !6776
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !6777

if.then6:                                         ; preds = %if.end4
  %8 = load ptr, ptr @xmlFree, align 8, !dbg !6778, !tbaa !1527
  %9 = load ptr, ptr %state.addr, align 8, !dbg !6779, !tbaa !1527
  %transTo7 = getelementptr inbounds %struct._xmlAutomataState, ptr %9, i32 0, i32 10, !dbg !6780
  %10 = load ptr, ptr %transTo7, align 8, !dbg !6780, !tbaa !6775
  call void %8(ptr noundef %10), !dbg !6778
  br label %if.end8, !dbg !6778

if.end8:                                          ; preds = %if.then6, %if.end4
  %11 = load ptr, ptr @xmlFree, align 8, !dbg !6781, !tbaa !1527
  %12 = load ptr, ptr %state.addr, align 8, !dbg !6782, !tbaa !1527
  call void %11(ptr noundef %12), !dbg !6781
  br label %return, !dbg !6783

return:                                           ; preds = %if.end8, %if.then
  ret void, !dbg !6783
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlFAComputesDeterminism(ptr noundef %ctxt) #0 !dbg !6784 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %statenr = alloca i32, align 4
  %transnr = alloca i32, align 4
  %state = alloca ptr, align 8
  %t1 = alloca ptr, align 8
  %t2 = alloca ptr, align 8
  %last = alloca ptr, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %deep = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !6788, metadata !DIExpression()), !dbg !6798
  call void @llvm.lifetime.start.p0(i64 4, ptr %statenr) #8, !dbg !6799
  tail call void @llvm.dbg.declare(metadata ptr %statenr, metadata !6789, metadata !DIExpression()), !dbg !6800
  call void @llvm.lifetime.start.p0(i64 4, ptr %transnr) #8, !dbg !6799
  tail call void @llvm.dbg.declare(metadata ptr %transnr, metadata !6790, metadata !DIExpression()), !dbg !6801
  call void @llvm.lifetime.start.p0(i64 8, ptr %state) #8, !dbg !6802
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !6791, metadata !DIExpression()), !dbg !6803
  call void @llvm.lifetime.start.p0(i64 8, ptr %t1) #8, !dbg !6804
  tail call void @llvm.dbg.declare(metadata ptr %t1, metadata !6792, metadata !DIExpression()), !dbg !6805
  call void @llvm.lifetime.start.p0(i64 8, ptr %t2) #8, !dbg !6804
  tail call void @llvm.dbg.declare(metadata ptr %t2, metadata !6793, metadata !DIExpression()), !dbg !6806
  call void @llvm.lifetime.start.p0(i64 8, ptr %last) #8, !dbg !6804
  tail call void @llvm.dbg.declare(metadata ptr %last, metadata !6794, metadata !DIExpression()), !dbg !6807
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !6808
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !6795, metadata !DIExpression()), !dbg !6809
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !6810
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !6796, metadata !DIExpression()), !dbg !6811
  store i32 1, ptr %ret, align 4, !dbg !6811, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 4, ptr %deep) #8, !dbg !6812
  tail call void @llvm.dbg.declare(metadata ptr %deep, metadata !6797, metadata !DIExpression()), !dbg !6813
  store i32 1, ptr %deep, align 4, !dbg !6813, !tbaa !1767
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !6814, !tbaa !1527
  %determinist = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 17, !dbg !6816
  %1 = load i32, ptr %determinist, align 8, !dbg !6816, !tbaa !4275
  %cmp = icmp ne i32 %1, -1, !dbg !6817
  br i1 %cmp, label %if.then, label %if.end, !dbg !6818

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !6819, !tbaa !1527
  %determinist1 = getelementptr inbounds %struct._xmlAutomata, ptr %2, i32 0, i32 17, !dbg !6820
  %3 = load i32, ptr %determinist1, align 8, !dbg !6820, !tbaa !4275
  store i32 %3, ptr %retval, align 4, !dbg !6821
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6821

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !6822, !tbaa !1527
  %flags = getelementptr inbounds %struct._xmlAutomata, ptr %4, i32 0, i32 19, !dbg !6824
  %5 = load i32, ptr %flags, align 8, !dbg !6824, !tbaa !5142
  %and = and i32 %5, 1, !dbg !6825
  %tobool = icmp ne i32 %and, 0, !dbg !6825
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !6826

if.then2:                                         ; preds = %if.end
  store i32 0, ptr %deep, align 4, !dbg !6827, !tbaa !1767
  br label %if.end3, !dbg !6828

if.end3:                                          ; preds = %if.then2, %if.end
  store i32 0, ptr %statenr, align 4, !dbg !6829, !tbaa !1767
  br label %for.cond, !dbg !6831

for.cond:                                         ; preds = %for.inc56, %if.end3
  %6 = load i32, ptr %statenr, align 4, !dbg !6832, !tbaa !1767
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !6834, !tbaa !1527
  %nbStates = getelementptr inbounds %struct._xmlAutomata, ptr %7, i32 0, i32 12, !dbg !6835
  %8 = load i32, ptr %nbStates, align 4, !dbg !6835, !tbaa !4359
  %cmp4 = icmp slt i32 %6, %8, !dbg !6836
  br i1 %cmp4, label %for.body, label %for.end58, !dbg !6837

for.body:                                         ; preds = %for.cond
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !6838, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlAutomata, ptr %9, i32 0, i32 13, !dbg !6840
  %10 = load ptr, ptr %states, align 8, !dbg !6840, !tbaa !4343
  %11 = load i32, ptr %statenr, align 4, !dbg !6841, !tbaa !1767
  %idxprom = sext i32 %11 to i64, !dbg !6838
  %arrayidx = getelementptr inbounds ptr, ptr %10, i64 %idxprom, !dbg !6838
  %12 = load ptr, ptr %arrayidx, align 8, !dbg !6838, !tbaa !1527
  store ptr %12, ptr %state, align 8, !dbg !6842, !tbaa !1527
  %13 = load ptr, ptr %state, align 8, !dbg !6843, !tbaa !1527
  %cmp5 = icmp eq ptr %13, null, !dbg !6845
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6846

if.then6:                                         ; preds = %for.body
  br label %for.inc56, !dbg !6847

if.end7:                                          ; preds = %for.body
  %14 = load ptr, ptr %state, align 8, !dbg !6848, !tbaa !1527
  %nbTrans = getelementptr inbounds %struct._xmlAutomataState, ptr %14, i32 0, i32 6, !dbg !6850
  %15 = load i32, ptr %nbTrans, align 8, !dbg !6850, !tbaa !2052
  %cmp8 = icmp slt i32 %15, 2, !dbg !6851
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !6852

if.then9:                                         ; preds = %if.end7
  br label %for.inc56, !dbg !6853

if.end10:                                         ; preds = %if.end7
  store i32 0, ptr %transnr, align 4, !dbg !6854, !tbaa !1767
  br label %for.cond11, !dbg !6856

for.cond11:                                       ; preds = %for.inc53, %if.end10
  %16 = load i32, ptr %transnr, align 4, !dbg !6857, !tbaa !1767
  %17 = load ptr, ptr %state, align 8, !dbg !6859, !tbaa !1527
  %nbTrans12 = getelementptr inbounds %struct._xmlAutomataState, ptr %17, i32 0, i32 6, !dbg !6860
  %18 = load i32, ptr %nbTrans12, align 8, !dbg !6860, !tbaa !2052
  %cmp13 = icmp slt i32 %16, %18, !dbg !6861
  br i1 %cmp13, label %for.body14, label %for.end55, !dbg !6862

for.body14:                                       ; preds = %for.cond11
  %19 = load ptr, ptr %state, align 8, !dbg !6863, !tbaa !1527
  %trans = getelementptr inbounds %struct._xmlAutomataState, ptr %19, i32 0, i32 7, !dbg !6865
  %20 = load ptr, ptr %trans, align 8, !dbg !6865, !tbaa !2058
  %21 = load i32, ptr %transnr, align 4, !dbg !6866, !tbaa !1767
  %idxprom15 = sext i32 %21 to i64, !dbg !6863
  %arrayidx16 = getelementptr inbounds %struct._xmlRegTrans, ptr %20, i64 %idxprom15, !dbg !6863
  store ptr %arrayidx16, ptr %t1, align 8, !dbg !6867, !tbaa !1527
  %22 = load ptr, ptr %t1, align 8, !dbg !6868, !tbaa !1527
  %atom = getelementptr inbounds %struct._xmlRegTrans, ptr %22, i32 0, i32 0, !dbg !6870
  %23 = load ptr, ptr %atom, align 8, !dbg !6870, !tbaa !2072
  %cmp17 = icmp eq ptr %23, null, !dbg !6871
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !6872

if.then18:                                        ; preds = %for.body14
  br label %for.inc53, !dbg !6873

if.end19:                                         ; preds = %for.body14
  %24 = load ptr, ptr %t1, align 8, !dbg !6875, !tbaa !1527
  %to = getelementptr inbounds %struct._xmlRegTrans, ptr %24, i32 0, i32 1, !dbg !6877
  %25 = load i32, ptr %to, align 8, !dbg !6877, !tbaa !2065
  %cmp20 = icmp eq i32 %25, -1, !dbg !6878
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !6879

if.then21:                                        ; preds = %if.end19
  br label %for.inc53, !dbg !6880

if.end22:                                         ; preds = %if.end19
  store i32 0, ptr %i, align 4, !dbg !6881, !tbaa !1767
  br label %for.cond23, !dbg !6883

for.cond23:                                       ; preds = %for.inc, %if.end22
  %26 = load i32, ptr %i, align 4, !dbg !6884, !tbaa !1767
  %27 = load i32, ptr %transnr, align 4, !dbg !6886, !tbaa !1767
  %cmp24 = icmp slt i32 %26, %27, !dbg !6887
  br i1 %cmp24, label %for.body25, label %for.end, !dbg !6888

for.body25:                                       ; preds = %for.cond23
  %28 = load ptr, ptr %state, align 8, !dbg !6889, !tbaa !1527
  %trans26 = getelementptr inbounds %struct._xmlAutomataState, ptr %28, i32 0, i32 7, !dbg !6891
  %29 = load ptr, ptr %trans26, align 8, !dbg !6891, !tbaa !2058
  %30 = load i32, ptr %i, align 4, !dbg !6892, !tbaa !1767
  %idxprom27 = sext i32 %30 to i64, !dbg !6889
  %arrayidx28 = getelementptr inbounds %struct._xmlRegTrans, ptr %29, i64 %idxprom27, !dbg !6889
  store ptr %arrayidx28, ptr %t2, align 8, !dbg !6893, !tbaa !1527
  %31 = load ptr, ptr %t2, align 8, !dbg !6894, !tbaa !1527
  %to29 = getelementptr inbounds %struct._xmlRegTrans, ptr %31, i32 0, i32 1, !dbg !6896
  %32 = load i32, ptr %to29, align 8, !dbg !6896, !tbaa !2065
  %cmp30 = icmp eq i32 %32, -1, !dbg !6897
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !6898

if.then31:                                        ; preds = %for.body25
  br label %for.inc, !dbg !6899

if.end32:                                         ; preds = %for.body25
  %33 = load ptr, ptr %t2, align 8, !dbg !6900, !tbaa !1527
  %atom33 = getelementptr inbounds %struct._xmlRegTrans, ptr %33, i32 0, i32 0, !dbg !6902
  %34 = load ptr, ptr %atom33, align 8, !dbg !6902, !tbaa !2072
  %cmp34 = icmp ne ptr %34, null, !dbg !6903
  br i1 %cmp34, label %if.then35, label %if.end52, !dbg !6904

if.then35:                                        ; preds = %if.end32
  %35 = load ptr, ptr %t1, align 8, !dbg !6905, !tbaa !1527
  %to36 = getelementptr inbounds %struct._xmlRegTrans, ptr %35, i32 0, i32 1, !dbg !6908
  %36 = load i32, ptr %to36, align 8, !dbg !6908, !tbaa !2065
  %37 = load ptr, ptr %t2, align 8, !dbg !6909, !tbaa !1527
  %to37 = getelementptr inbounds %struct._xmlRegTrans, ptr %37, i32 0, i32 1, !dbg !6910
  %38 = load i32, ptr %to37, align 8, !dbg !6910, !tbaa !2065
  %cmp38 = icmp eq i32 %36, %38, !dbg !6911
  br i1 %cmp38, label %if.then39, label %if.end51, !dbg !6912

if.then39:                                        ; preds = %if.then35
  %39 = load ptr, ptr %t1, align 8, !dbg !6913, !tbaa !1527
  %atom40 = getelementptr inbounds %struct._xmlRegTrans, ptr %39, i32 0, i32 0, !dbg !6916
  %40 = load ptr, ptr %atom40, align 8, !dbg !6916, !tbaa !2072
  %41 = load ptr, ptr %t2, align 8, !dbg !6917, !tbaa !1527
  %atom41 = getelementptr inbounds %struct._xmlRegTrans, ptr %41, i32 0, i32 0, !dbg !6918
  %42 = load ptr, ptr %atom41, align 8, !dbg !6918, !tbaa !2072
  %43 = load i32, ptr %deep, align 4, !dbg !6919, !tbaa !1767
  %call = call i32 @xmlFAEqualAtoms(ptr noundef %40, ptr noundef %42, i32 noundef %43), !dbg !6920
  %tobool42 = icmp ne i32 %call, 0, !dbg !6920
  br i1 %tobool42, label %land.lhs.true, label %if.end50, !dbg !6921

land.lhs.true:                                    ; preds = %if.then39
  %44 = load ptr, ptr %t1, align 8, !dbg !6922, !tbaa !1527
  %counter = getelementptr inbounds %struct._xmlRegTrans, ptr %44, i32 0, i32 2, !dbg !6923
  %45 = load i32, ptr %counter, align 4, !dbg !6923, !tbaa !2123
  %46 = load ptr, ptr %t2, align 8, !dbg !6924, !tbaa !1527
  %counter43 = getelementptr inbounds %struct._xmlRegTrans, ptr %46, i32 0, i32 2, !dbg !6925
  %47 = load i32, ptr %counter43, align 4, !dbg !6925, !tbaa !2123
  %cmp44 = icmp eq i32 %45, %47, !dbg !6926
  br i1 %cmp44, label %land.lhs.true45, label %if.end50, !dbg !6927

land.lhs.true45:                                  ; preds = %land.lhs.true
  %48 = load ptr, ptr %t1, align 8, !dbg !6928, !tbaa !1527
  %count = getelementptr inbounds %struct._xmlRegTrans, ptr %48, i32 0, i32 3, !dbg !6929
  %49 = load i32, ptr %count, align 8, !dbg !6929, !tbaa !2077
  %50 = load ptr, ptr %t2, align 8, !dbg !6930, !tbaa !1527
  %count46 = getelementptr inbounds %struct._xmlRegTrans, ptr %50, i32 0, i32 3, !dbg !6931
  %51 = load i32, ptr %count46, align 8, !dbg !6931, !tbaa !2077
  %cmp47 = icmp eq i32 %49, %51, !dbg !6932
  br i1 %cmp47, label %if.then48, label %if.end50, !dbg !6933

if.then48:                                        ; preds = %land.lhs.true45
  %52 = load ptr, ptr %t2, align 8, !dbg !6934, !tbaa !1527
  %to49 = getelementptr inbounds %struct._xmlRegTrans, ptr %52, i32 0, i32 1, !dbg !6935
  store i32 -1, ptr %to49, align 8, !dbg !6936, !tbaa !2065
  br label %if.end50, !dbg !6934

if.end50:                                         ; preds = %if.then48, %land.lhs.true45, %land.lhs.true, %if.then39
  br label %if.end51, !dbg !6937

if.end51:                                         ; preds = %if.end50, %if.then35
  br label %if.end52, !dbg !6938

if.end52:                                         ; preds = %if.end51, %if.end32
  br label %for.inc, !dbg !6939

for.inc:                                          ; preds = %if.end52, %if.then31
  %53 = load i32, ptr %i, align 4, !dbg !6940, !tbaa !1767
  %inc = add nsw i32 %53, 1, !dbg !6940
  store i32 %inc, ptr %i, align 4, !dbg !6940, !tbaa !1767
  br label %for.cond23, !dbg !6941, !llvm.loop !6942

for.end:                                          ; preds = %for.cond23
  br label %for.inc53, !dbg !6944

for.inc53:                                        ; preds = %for.end, %if.then21, %if.then18
  %54 = load i32, ptr %transnr, align 4, !dbg !6945, !tbaa !1767
  %inc54 = add nsw i32 %54, 1, !dbg !6945
  store i32 %inc54, ptr %transnr, align 4, !dbg !6945, !tbaa !1767
  br label %for.cond11, !dbg !6946, !llvm.loop !6947

for.end55:                                        ; preds = %for.cond11
  br label %for.inc56, !dbg !6949

for.inc56:                                        ; preds = %for.end55, %if.then9, %if.then6
  %55 = load i32, ptr %statenr, align 4, !dbg !6950, !tbaa !1767
  %inc57 = add nsw i32 %55, 1, !dbg !6950
  store i32 %inc57, ptr %statenr, align 4, !dbg !6950, !tbaa !1767
  br label %for.cond, !dbg !6951, !llvm.loop !6952

for.end58:                                        ; preds = %for.cond
  store i32 0, ptr %statenr, align 4, !dbg !6954, !tbaa !1767
  br label %for.cond59, !dbg !6956

for.cond59:                                       ; preds = %for.inc138, %for.end58
  %56 = load i32, ptr %statenr, align 4, !dbg !6957, !tbaa !1767
  %57 = load ptr, ptr %ctxt.addr, align 8, !dbg !6959, !tbaa !1527
  %nbStates60 = getelementptr inbounds %struct._xmlAutomata, ptr %57, i32 0, i32 12, !dbg !6960
  %58 = load i32, ptr %nbStates60, align 4, !dbg !6960, !tbaa !4359
  %cmp61 = icmp slt i32 %56, %58, !dbg !6961
  br i1 %cmp61, label %for.body62, label %for.end140, !dbg !6962

for.body62:                                       ; preds = %for.cond59
  %59 = load ptr, ptr %ctxt.addr, align 8, !dbg !6963, !tbaa !1527
  %states63 = getelementptr inbounds %struct._xmlAutomata, ptr %59, i32 0, i32 13, !dbg !6965
  %60 = load ptr, ptr %states63, align 8, !dbg !6965, !tbaa !4343
  %61 = load i32, ptr %statenr, align 4, !dbg !6966, !tbaa !1767
  %idxprom64 = sext i32 %61 to i64, !dbg !6963
  %arrayidx65 = getelementptr inbounds ptr, ptr %60, i64 %idxprom64, !dbg !6963
  %62 = load ptr, ptr %arrayidx65, align 8, !dbg !6963, !tbaa !1527
  store ptr %62, ptr %state, align 8, !dbg !6967, !tbaa !1527
  %63 = load ptr, ptr %state, align 8, !dbg !6968, !tbaa !1527
  %cmp66 = icmp eq ptr %63, null, !dbg !6970
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !6971

if.then67:                                        ; preds = %for.body62
  br label %for.inc138, !dbg !6972

if.end68:                                         ; preds = %for.body62
  %64 = load ptr, ptr %state, align 8, !dbg !6973, !tbaa !1527
  %nbTrans69 = getelementptr inbounds %struct._xmlAutomataState, ptr %64, i32 0, i32 6, !dbg !6975
  %65 = load i32, ptr %nbTrans69, align 8, !dbg !6975, !tbaa !2052
  %cmp70 = icmp slt i32 %65, 2, !dbg !6976
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !6977

if.then71:                                        ; preds = %if.end68
  br label %for.inc138, !dbg !6978

if.end72:                                         ; preds = %if.end68
  store ptr null, ptr %last, align 8, !dbg !6979, !tbaa !1527
  store i32 0, ptr %transnr, align 4, !dbg !6980, !tbaa !1767
  br label %for.cond73, !dbg !6982

for.cond73:                                       ; preds = %for.inc131, %if.end72
  %66 = load i32, ptr %transnr, align 4, !dbg !6983, !tbaa !1767
  %67 = load ptr, ptr %state, align 8, !dbg !6985, !tbaa !1527
  %nbTrans74 = getelementptr inbounds %struct._xmlAutomataState, ptr %67, i32 0, i32 6, !dbg !6986
  %68 = load i32, ptr %nbTrans74, align 8, !dbg !6986, !tbaa !2052
  %cmp75 = icmp slt i32 %66, %68, !dbg !6987
  br i1 %cmp75, label %for.body76, label %for.end133, !dbg !6988

for.body76:                                       ; preds = %for.cond73
  %69 = load ptr, ptr %state, align 8, !dbg !6989, !tbaa !1527
  %trans77 = getelementptr inbounds %struct._xmlAutomataState, ptr %69, i32 0, i32 7, !dbg !6991
  %70 = load ptr, ptr %trans77, align 8, !dbg !6991, !tbaa !2058
  %71 = load i32, ptr %transnr, align 4, !dbg !6992, !tbaa !1767
  %idxprom78 = sext i32 %71 to i64, !dbg !6989
  %arrayidx79 = getelementptr inbounds %struct._xmlRegTrans, ptr %70, i64 %idxprom78, !dbg !6989
  store ptr %arrayidx79, ptr %t1, align 8, !dbg !6993, !tbaa !1527
  %72 = load ptr, ptr %t1, align 8, !dbg !6994, !tbaa !1527
  %atom80 = getelementptr inbounds %struct._xmlRegTrans, ptr %72, i32 0, i32 0, !dbg !6996
  %73 = load ptr, ptr %atom80, align 8, !dbg !6996, !tbaa !2072
  %cmp81 = icmp eq ptr %73, null, !dbg !6997
  br i1 %cmp81, label %if.then82, label %if.end83, !dbg !6998

if.then82:                                        ; preds = %for.body76
  br label %for.inc131, !dbg !6999

if.end83:                                         ; preds = %for.body76
  %74 = load ptr, ptr %t1, align 8, !dbg !7001, !tbaa !1527
  %to84 = getelementptr inbounds %struct._xmlRegTrans, ptr %74, i32 0, i32 1, !dbg !7003
  %75 = load i32, ptr %to84, align 8, !dbg !7003, !tbaa !2065
  %cmp85 = icmp eq i32 %75, -1, !dbg !7004
  br i1 %cmp85, label %if.then86, label %if.end87, !dbg !7005

if.then86:                                        ; preds = %if.end83
  br label %for.inc131, !dbg !7006

if.end87:                                         ; preds = %if.end83
  store i32 0, ptr %i, align 4, !dbg !7007, !tbaa !1767
  br label %for.cond88, !dbg !7009

for.cond88:                                       ; preds = %for.inc128, %if.end87
  %76 = load i32, ptr %i, align 4, !dbg !7010, !tbaa !1767
  %77 = load i32, ptr %transnr, align 4, !dbg !7012, !tbaa !1767
  %cmp89 = icmp slt i32 %76, %77, !dbg !7013
  br i1 %cmp89, label %for.body90, label %for.end130, !dbg !7014

for.body90:                                       ; preds = %for.cond88
  %78 = load ptr, ptr %state, align 8, !dbg !7015, !tbaa !1527
  %trans91 = getelementptr inbounds %struct._xmlAutomataState, ptr %78, i32 0, i32 7, !dbg !7017
  %79 = load ptr, ptr %trans91, align 8, !dbg !7017, !tbaa !2058
  %80 = load i32, ptr %i, align 4, !dbg !7018, !tbaa !1767
  %idxprom92 = sext i32 %80 to i64, !dbg !7015
  %arrayidx93 = getelementptr inbounds %struct._xmlRegTrans, ptr %79, i64 %idxprom92, !dbg !7015
  store ptr %arrayidx93, ptr %t2, align 8, !dbg !7019, !tbaa !1527
  %81 = load ptr, ptr %t2, align 8, !dbg !7020, !tbaa !1527
  %to94 = getelementptr inbounds %struct._xmlRegTrans, ptr %81, i32 0, i32 1, !dbg !7022
  %82 = load i32, ptr %to94, align 8, !dbg !7022, !tbaa !2065
  %cmp95 = icmp eq i32 %82, -1, !dbg !7023
  br i1 %cmp95, label %if.then96, label %if.end97, !dbg !7024

if.then96:                                        ; preds = %for.body90
  br label %for.inc128, !dbg !7025

if.end97:                                         ; preds = %for.body90
  %83 = load ptr, ptr %t2, align 8, !dbg !7026, !tbaa !1527
  %atom98 = getelementptr inbounds %struct._xmlRegTrans, ptr %83, i32 0, i32 0, !dbg !7028
  %84 = load ptr, ptr %atom98, align 8, !dbg !7028, !tbaa !2072
  %cmp99 = icmp ne ptr %84, null, !dbg !7029
  br i1 %cmp99, label %if.then100, label %if.else, !dbg !7030

if.then100:                                       ; preds = %if.end97
  %85 = load ptr, ptr %t1, align 8, !dbg !7031, !tbaa !1527
  %atom101 = getelementptr inbounds %struct._xmlRegTrans, ptr %85, i32 0, i32 0, !dbg !7034
  %86 = load ptr, ptr %atom101, align 8, !dbg !7034, !tbaa !2072
  %87 = load ptr, ptr %t2, align 8, !dbg !7035, !tbaa !1527
  %atom102 = getelementptr inbounds %struct._xmlRegTrans, ptr %87, i32 0, i32 0, !dbg !7036
  %88 = load ptr, ptr %atom102, align 8, !dbg !7036, !tbaa !2072
  %call103 = call i32 @xmlFACompareAtoms(ptr noundef %86, ptr noundef %88, i32 noundef 1), !dbg !7037
  %tobool104 = icmp ne i32 %call103, 0, !dbg !7037
  br i1 %tobool104, label %if.then105, label %if.end107, !dbg !7038

if.then105:                                       ; preds = %if.then100
  store i32 0, ptr %ret, align 4, !dbg !7039, !tbaa !1767
  %89 = load ptr, ptr %t1, align 8, !dbg !7041, !tbaa !1527
  %nd = getelementptr inbounds %struct._xmlRegTrans, ptr %89, i32 0, i32 4, !dbg !7042
  store i32 1, ptr %nd, align 4, !dbg !7043, !tbaa !6346
  %90 = load ptr, ptr %t2, align 8, !dbg !7044, !tbaa !1527
  %nd106 = getelementptr inbounds %struct._xmlRegTrans, ptr %90, i32 0, i32 4, !dbg !7045
  store i32 1, ptr %nd106, align 4, !dbg !7046, !tbaa !6346
  %91 = load ptr, ptr %t1, align 8, !dbg !7047, !tbaa !1527
  store ptr %91, ptr %last, align 8, !dbg !7048, !tbaa !1527
  br label %if.end107, !dbg !7049

if.end107:                                        ; preds = %if.then105, %if.then100
  br label %if.end127, !dbg !7050

if.else:                                          ; preds = %if.end97
  %92 = load ptr, ptr %t1, align 8, !dbg !7051, !tbaa !1527
  %to108 = getelementptr inbounds %struct._xmlRegTrans, ptr %92, i32 0, i32 1, !dbg !7053
  %93 = load i32, ptr %to108, align 8, !dbg !7053, !tbaa !2065
  %cmp109 = icmp ne i32 %93, -1, !dbg !7054
  br i1 %cmp109, label %if.then110, label %if.end126, !dbg !7055

if.then110:                                       ; preds = %if.else
  %94 = load ptr, ptr %ctxt.addr, align 8, !dbg !7056, !tbaa !1527
  %95 = load ptr, ptr %ctxt.addr, align 8, !dbg !7058, !tbaa !1527
  %states111 = getelementptr inbounds %struct._xmlAutomata, ptr %95, i32 0, i32 13, !dbg !7059
  %96 = load ptr, ptr %states111, align 8, !dbg !7059, !tbaa !4343
  %97 = load ptr, ptr %t1, align 8, !dbg !7060, !tbaa !1527
  %to112 = getelementptr inbounds %struct._xmlRegTrans, ptr %97, i32 0, i32 1, !dbg !7061
  %98 = load i32, ptr %to112, align 8, !dbg !7061, !tbaa !2065
  %idxprom113 = sext i32 %98 to i64, !dbg !7058
  %arrayidx114 = getelementptr inbounds ptr, ptr %96, i64 %idxprom113, !dbg !7058
  %99 = load ptr, ptr %arrayidx114, align 8, !dbg !7058, !tbaa !1527
  %100 = load ptr, ptr %t2, align 8, !dbg !7062, !tbaa !1527
  %to115 = getelementptr inbounds %struct._xmlRegTrans, ptr %100, i32 0, i32 1, !dbg !7063
  %101 = load i32, ptr %to115, align 8, !dbg !7063, !tbaa !2065
  %102 = load ptr, ptr %t2, align 8, !dbg !7064, !tbaa !1527
  %atom116 = getelementptr inbounds %struct._xmlRegTrans, ptr %102, i32 0, i32 0, !dbg !7065
  %103 = load ptr, ptr %atom116, align 8, !dbg !7065, !tbaa !2072
  %call117 = call i32 @xmlFARecurseDeterminism(ptr noundef %94, ptr noundef %99, i32 noundef %101, ptr noundef %103), !dbg !7066
  store i32 %call117, ptr %ret, align 4, !dbg !7067, !tbaa !1767
  %104 = load ptr, ptr %ctxt.addr, align 8, !dbg !7068, !tbaa !1527
  %105 = load ptr, ptr %ctxt.addr, align 8, !dbg !7069, !tbaa !1527
  %states118 = getelementptr inbounds %struct._xmlAutomata, ptr %105, i32 0, i32 13, !dbg !7070
  %106 = load ptr, ptr %states118, align 8, !dbg !7070, !tbaa !4343
  %107 = load ptr, ptr %t1, align 8, !dbg !7071, !tbaa !1527
  %to119 = getelementptr inbounds %struct._xmlRegTrans, ptr %107, i32 0, i32 1, !dbg !7072
  %108 = load i32, ptr %to119, align 8, !dbg !7072, !tbaa !2065
  %idxprom120 = sext i32 %108 to i64, !dbg !7069
  %arrayidx121 = getelementptr inbounds ptr, ptr %106, i64 %idxprom120, !dbg !7069
  %109 = load ptr, ptr %arrayidx121, align 8, !dbg !7069, !tbaa !1527
  call void @xmlFAFinishRecurseDeterminism(ptr noundef %104, ptr noundef %109), !dbg !7073
  %110 = load i32, ptr %ret, align 4, !dbg !7074, !tbaa !1767
  %cmp122 = icmp eq i32 %110, 0, !dbg !7076
  br i1 %cmp122, label %if.then123, label %if.end125, !dbg !7077

if.then123:                                       ; preds = %if.then110
  %111 = load ptr, ptr %t1, align 8, !dbg !7078, !tbaa !1527
  %nd124 = getelementptr inbounds %struct._xmlRegTrans, ptr %111, i32 0, i32 4, !dbg !7080
  store i32 1, ptr %nd124, align 4, !dbg !7081, !tbaa !6346
  %112 = load ptr, ptr %t1, align 8, !dbg !7082, !tbaa !1527
  store ptr %112, ptr %last, align 8, !dbg !7083, !tbaa !1527
  br label %if.end125, !dbg !7084

if.end125:                                        ; preds = %if.then123, %if.then110
  br label %if.end126, !dbg !7085

if.end126:                                        ; preds = %if.end125, %if.else
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.end107
  br label %for.inc128, !dbg !7086

for.inc128:                                       ; preds = %if.end127, %if.then96
  %113 = load i32, ptr %i, align 4, !dbg !7087, !tbaa !1767
  %inc129 = add nsw i32 %113, 1, !dbg !7087
  store i32 %inc129, ptr %i, align 4, !dbg !7087, !tbaa !1767
  br label %for.cond88, !dbg !7088, !llvm.loop !7089

for.end130:                                       ; preds = %for.cond88
  br label %for.inc131, !dbg !7091

for.inc131:                                       ; preds = %for.end130, %if.then86, %if.then82
  %114 = load i32, ptr %transnr, align 4, !dbg !7092, !tbaa !1767
  %inc132 = add nsw i32 %114, 1, !dbg !7092
  store i32 %inc132, ptr %transnr, align 4, !dbg !7092, !tbaa !1767
  br label %for.cond73, !dbg !7093, !llvm.loop !7094

for.end133:                                       ; preds = %for.cond73
  %115 = load ptr, ptr %last, align 8, !dbg !7096, !tbaa !1527
  %cmp134 = icmp ne ptr %115, null, !dbg !7098
  br i1 %cmp134, label %if.then135, label %if.end137, !dbg !7099

if.then135:                                       ; preds = %for.end133
  %116 = load ptr, ptr %last, align 8, !dbg !7100, !tbaa !1527
  %nd136 = getelementptr inbounds %struct._xmlRegTrans, ptr %116, i32 0, i32 4, !dbg !7102
  store i32 2, ptr %nd136, align 4, !dbg !7103, !tbaa !6346
  br label %if.end137, !dbg !7104

if.end137:                                        ; preds = %if.then135, %for.end133
  br label %for.inc138, !dbg !7105

for.inc138:                                       ; preds = %if.end137, %if.then71, %if.then67
  %117 = load i32, ptr %statenr, align 4, !dbg !7106, !tbaa !1767
  %inc139 = add nsw i32 %117, 1, !dbg !7106
  store i32 %inc139, ptr %statenr, align 4, !dbg !7106, !tbaa !1767
  br label %for.cond59, !dbg !7107, !llvm.loop !7108

for.end140:                                       ; preds = %for.cond59
  %118 = load i32, ptr %ret, align 4, !dbg !7110, !tbaa !1767
  %119 = load ptr, ptr %ctxt.addr, align 8, !dbg !7111, !tbaa !1527
  %determinist141 = getelementptr inbounds %struct._xmlAutomata, ptr %119, i32 0, i32 17, !dbg !7112
  store i32 %118, ptr %determinist141, align 8, !dbg !7113, !tbaa !4275
  %120 = load i32, ptr %ret, align 4, !dbg !7114, !tbaa !1767
  store i32 %120, ptr %retval, align 4, !dbg !7115
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7115

cleanup:                                          ; preds = %for.end140, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %deep) #8, !dbg !7116
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !7116
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !7116
  call void @llvm.lifetime.end.p0(i64 8, ptr %last) #8, !dbg !7116
  call void @llvm.lifetime.end.p0(i64 8, ptr %t2) #8, !dbg !7116
  call void @llvm.lifetime.end.p0(i64 8, ptr %t1) #8, !dbg !7116
  call void @llvm.lifetime.end.p0(i64 8, ptr %state) #8, !dbg !7116
  call void @llvm.lifetime.end.p0(i64 4, ptr %transnr) #8, !dbg !7116
  call void @llvm.lifetime.end.p0(i64 4, ptr %statenr) #8, !dbg !7116
  %121 = load i32, ptr %retval, align 4, !dbg !7116
  ret i32 %121, !dbg !7116
}

; Function Attrs: nounwind uwtable
define void @xmlFreeAutomata(ptr noundef %am) #0 !dbg !7117 {
entry:
  %am.addr = alloca ptr, align 8
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !7121, metadata !DIExpression()), !dbg !7122
  %0 = load ptr, ptr %am.addr, align 8, !dbg !7123, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !7125
  br i1 %cmp, label %if.then, label %if.end, !dbg !7126

if.then:                                          ; preds = %entry
  br label %return, !dbg !7127

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %am.addr, align 8, !dbg !7128, !tbaa !1527
  call void @xmlRegFreeParserCtxt(ptr noundef %1), !dbg !7129
  br label %return, !dbg !7130

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7130
}

; Function Attrs: nounwind uwtable
define void @xmlRegFreeRegexp(ptr noundef %regexp) #0 !dbg !7131 {
entry:
  %regexp.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %regexp, ptr %regexp.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %regexp.addr, metadata !7135, metadata !DIExpression()), !dbg !7137
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !7138
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !7136, metadata !DIExpression()), !dbg !7139
  %0 = load ptr, ptr %regexp.addr, align 8, !dbg !7140, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !7142
  br i1 %cmp, label %if.then, label %if.end, !dbg !7143

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7144

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %regexp.addr, align 8, !dbg !7145, !tbaa !1527
  %string = getelementptr inbounds %struct._xmlRegexp, ptr %1, i32 0, i32 0, !dbg !7147
  %2 = load ptr, ptr %string, align 8, !dbg !7147, !tbaa !3860
  %cmp1 = icmp ne ptr %2, null, !dbg !7148
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !7149

if.then2:                                         ; preds = %if.end
  %3 = load ptr, ptr @xmlFree, align 8, !dbg !7150, !tbaa !1527
  %4 = load ptr, ptr %regexp.addr, align 8, !dbg !7151, !tbaa !1527
  %string3 = getelementptr inbounds %struct._xmlRegexp, ptr %4, i32 0, i32 0, !dbg !7152
  %5 = load ptr, ptr %string3, align 8, !dbg !7152, !tbaa !3860
  call void %3(ptr noundef %5), !dbg !7150
  br label %if.end4, !dbg !7150

if.end4:                                          ; preds = %if.then2, %if.end
  %6 = load ptr, ptr %regexp.addr, align 8, !dbg !7153, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlRegexp, ptr %6, i32 0, i32 2, !dbg !7155
  %7 = load ptr, ptr %states, align 8, !dbg !7155, !tbaa !1551
  %cmp5 = icmp ne ptr %7, null, !dbg !7156
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !7157

if.then6:                                         ; preds = %if.end4
  store i32 0, ptr %i, align 4, !dbg !7158, !tbaa !1767
  br label %for.cond, !dbg !7161

for.cond:                                         ; preds = %for.inc, %if.then6
  %8 = load i32, ptr %i, align 4, !dbg !7162, !tbaa !1767
  %9 = load ptr, ptr %regexp.addr, align 8, !dbg !7164, !tbaa !1527
  %nbStates = getelementptr inbounds %struct._xmlRegexp, ptr %9, i32 0, i32 1, !dbg !7165
  %10 = load i32, ptr %nbStates, align 8, !dbg !7165, !tbaa !3896
  %cmp7 = icmp slt i32 %8, %10, !dbg !7166
  br i1 %cmp7, label %for.body, label %for.end, !dbg !7167

for.body:                                         ; preds = %for.cond
  %11 = load ptr, ptr %regexp.addr, align 8, !dbg !7168, !tbaa !1527
  %states8 = getelementptr inbounds %struct._xmlRegexp, ptr %11, i32 0, i32 2, !dbg !7169
  %12 = load ptr, ptr %states8, align 8, !dbg !7169, !tbaa !1551
  %13 = load i32, ptr %i, align 4, !dbg !7170, !tbaa !1767
  %idxprom = sext i32 %13 to i64, !dbg !7168
  %arrayidx = getelementptr inbounds ptr, ptr %12, i64 %idxprom, !dbg !7168
  %14 = load ptr, ptr %arrayidx, align 8, !dbg !7168, !tbaa !1527
  call void @xmlRegFreeState(ptr noundef %14), !dbg !7171
  br label %for.inc, !dbg !7171

for.inc:                                          ; preds = %for.body
  %15 = load i32, ptr %i, align 4, !dbg !7172, !tbaa !1767
  %inc = add nsw i32 %15, 1, !dbg !7172
  store i32 %inc, ptr %i, align 4, !dbg !7172, !tbaa !1767
  br label %for.cond, !dbg !7173, !llvm.loop !7174

for.end:                                          ; preds = %for.cond
  %16 = load ptr, ptr @xmlFree, align 8, !dbg !7176, !tbaa !1527
  %17 = load ptr, ptr %regexp.addr, align 8, !dbg !7177, !tbaa !1527
  %states9 = getelementptr inbounds %struct._xmlRegexp, ptr %17, i32 0, i32 2, !dbg !7178
  %18 = load ptr, ptr %states9, align 8, !dbg !7178, !tbaa !1551
  call void %16(ptr noundef %18), !dbg !7176
  br label %if.end10, !dbg !7179

if.end10:                                         ; preds = %for.end, %if.end4
  %19 = load ptr, ptr %regexp.addr, align 8, !dbg !7180, !tbaa !1527
  %atoms = getelementptr inbounds %struct._xmlRegexp, ptr %19, i32 0, i32 4, !dbg !7182
  %20 = load ptr, ptr %atoms, align 8, !dbg !7182, !tbaa !3885
  %cmp11 = icmp ne ptr %20, null, !dbg !7183
  br i1 %cmp11, label %if.then12, label %if.end23, !dbg !7184

if.then12:                                        ; preds = %if.end10
  store i32 0, ptr %i, align 4, !dbg !7185, !tbaa !1767
  br label %for.cond13, !dbg !7188

for.cond13:                                       ; preds = %for.inc19, %if.then12
  %21 = load i32, ptr %i, align 4, !dbg !7189, !tbaa !1767
  %22 = load ptr, ptr %regexp.addr, align 8, !dbg !7191, !tbaa !1527
  %nbAtoms = getelementptr inbounds %struct._xmlRegexp, ptr %22, i32 0, i32 3, !dbg !7192
  %23 = load i32, ptr %nbAtoms, align 8, !dbg !7192, !tbaa !3867
  %cmp14 = icmp slt i32 %21, %23, !dbg !7193
  br i1 %cmp14, label %for.body15, label %for.end21, !dbg !7194

for.body15:                                       ; preds = %for.cond13
  %24 = load ptr, ptr %regexp.addr, align 8, !dbg !7195, !tbaa !1527
  %atoms16 = getelementptr inbounds %struct._xmlRegexp, ptr %24, i32 0, i32 4, !dbg !7196
  %25 = load ptr, ptr %atoms16, align 8, !dbg !7196, !tbaa !3885
  %26 = load i32, ptr %i, align 4, !dbg !7197, !tbaa !1767
  %idxprom17 = sext i32 %26 to i64, !dbg !7195
  %arrayidx18 = getelementptr inbounds ptr, ptr %25, i64 %idxprom17, !dbg !7195
  %27 = load ptr, ptr %arrayidx18, align 8, !dbg !7195, !tbaa !1527
  call void @xmlRegFreeAtom(ptr noundef %27), !dbg !7198
  br label %for.inc19, !dbg !7198

for.inc19:                                        ; preds = %for.body15
  %28 = load i32, ptr %i, align 4, !dbg !7199, !tbaa !1767
  %inc20 = add nsw i32 %28, 1, !dbg !7199
  store i32 %inc20, ptr %i, align 4, !dbg !7199, !tbaa !1767
  br label %for.cond13, !dbg !7200, !llvm.loop !7201

for.end21:                                        ; preds = %for.cond13
  %29 = load ptr, ptr @xmlFree, align 8, !dbg !7203, !tbaa !1527
  %30 = load ptr, ptr %regexp.addr, align 8, !dbg !7204, !tbaa !1527
  %atoms22 = getelementptr inbounds %struct._xmlRegexp, ptr %30, i32 0, i32 4, !dbg !7205
  %31 = load ptr, ptr %atoms22, align 8, !dbg !7205, !tbaa !3885
  call void %29(ptr noundef %31), !dbg !7203
  br label %if.end23, !dbg !7206

if.end23:                                         ; preds = %for.end21, %if.end10
  %32 = load ptr, ptr %regexp.addr, align 8, !dbg !7207, !tbaa !1527
  %counters = getelementptr inbounds %struct._xmlRegexp, ptr %32, i32 0, i32 6, !dbg !7209
  %33 = load ptr, ptr %counters, align 8, !dbg !7209, !tbaa !2134
  %cmp24 = icmp ne ptr %33, null, !dbg !7210
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !7211

if.then25:                                        ; preds = %if.end23
  %34 = load ptr, ptr @xmlFree, align 8, !dbg !7212, !tbaa !1527
  %35 = load ptr, ptr %regexp.addr, align 8, !dbg !7213, !tbaa !1527
  %counters26 = getelementptr inbounds %struct._xmlRegexp, ptr %35, i32 0, i32 6, !dbg !7214
  %36 = load ptr, ptr %counters26, align 8, !dbg !7214, !tbaa !2134
  call void %34(ptr noundef %36), !dbg !7212
  br label %if.end27, !dbg !7212

if.end27:                                         ; preds = %if.then25, %if.end23
  %37 = load ptr, ptr %regexp.addr, align 8, !dbg !7215, !tbaa !1527
  %compact = getelementptr inbounds %struct._xmlRegexp, ptr %37, i32 0, i32 10, !dbg !7217
  %38 = load ptr, ptr %compact, align 8, !dbg !7217, !tbaa !1544
  %cmp28 = icmp ne ptr %38, null, !dbg !7218
  br i1 %cmp28, label %if.then29, label %if.end31, !dbg !7219

if.then29:                                        ; preds = %if.end27
  %39 = load ptr, ptr @xmlFree, align 8, !dbg !7220, !tbaa !1527
  %40 = load ptr, ptr %regexp.addr, align 8, !dbg !7221, !tbaa !1527
  %compact30 = getelementptr inbounds %struct._xmlRegexp, ptr %40, i32 0, i32 10, !dbg !7222
  %41 = load ptr, ptr %compact30, align 8, !dbg !7222, !tbaa !1544
  call void %39(ptr noundef %41), !dbg !7220
  br label %if.end31, !dbg !7220

if.end31:                                         ; preds = %if.then29, %if.end27
  %42 = load ptr, ptr %regexp.addr, align 8, !dbg !7223, !tbaa !1527
  %transdata = getelementptr inbounds %struct._xmlRegexp, ptr %42, i32 0, i32 11, !dbg !7225
  %43 = load ptr, ptr %transdata, align 8, !dbg !7225, !tbaa !3085
  %cmp32 = icmp ne ptr %43, null, !dbg !7226
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !7227

if.then33:                                        ; preds = %if.end31
  %44 = load ptr, ptr @xmlFree, align 8, !dbg !7228, !tbaa !1527
  %45 = load ptr, ptr %regexp.addr, align 8, !dbg !7229, !tbaa !1527
  %transdata34 = getelementptr inbounds %struct._xmlRegexp, ptr %45, i32 0, i32 11, !dbg !7230
  %46 = load ptr, ptr %transdata34, align 8, !dbg !7230, !tbaa !3085
  call void %44(ptr noundef %46), !dbg !7228
  br label %if.end35, !dbg !7228

if.end35:                                         ; preds = %if.then33, %if.end31
  %47 = load ptr, ptr %regexp.addr, align 8, !dbg !7231, !tbaa !1527
  %stringMap = getelementptr inbounds %struct._xmlRegexp, ptr %47, i32 0, i32 13, !dbg !7233
  %48 = load ptr, ptr %stringMap, align 8, !dbg !7233, !tbaa !3011
  %cmp36 = icmp ne ptr %48, null, !dbg !7234
  br i1 %cmp36, label %if.then37, label %if.end48, !dbg !7235

if.then37:                                        ; preds = %if.end35
  store i32 0, ptr %i, align 4, !dbg !7236, !tbaa !1767
  br label %for.cond38, !dbg !7239

for.cond38:                                       ; preds = %for.inc44, %if.then37
  %49 = load i32, ptr %i, align 4, !dbg !7240, !tbaa !1767
  %50 = load ptr, ptr %regexp.addr, align 8, !dbg !7242, !tbaa !1527
  %nbstrings = getelementptr inbounds %struct._xmlRegexp, ptr %50, i32 0, i32 12, !dbg !7243
  %51 = load i32, ptr %nbstrings, align 8, !dbg !7243, !tbaa !3026
  %cmp39 = icmp slt i32 %49, %51, !dbg !7244
  br i1 %cmp39, label %for.body40, label %for.end46, !dbg !7245

for.body40:                                       ; preds = %for.cond38
  %52 = load ptr, ptr @xmlFree, align 8, !dbg !7246, !tbaa !1527
  %53 = load ptr, ptr %regexp.addr, align 8, !dbg !7247, !tbaa !1527
  %stringMap41 = getelementptr inbounds %struct._xmlRegexp, ptr %53, i32 0, i32 13, !dbg !7248
  %54 = load ptr, ptr %stringMap41, align 8, !dbg !7248, !tbaa !3011
  %55 = load i32, ptr %i, align 4, !dbg !7249, !tbaa !1767
  %idxprom42 = sext i32 %55 to i64, !dbg !7247
  %arrayidx43 = getelementptr inbounds ptr, ptr %54, i64 %idxprom42, !dbg !7247
  %56 = load ptr, ptr %arrayidx43, align 8, !dbg !7247, !tbaa !1527
  call void %52(ptr noundef %56), !dbg !7246
  br label %for.inc44, !dbg !7246

for.inc44:                                        ; preds = %for.body40
  %57 = load i32, ptr %i, align 4, !dbg !7250, !tbaa !1767
  %inc45 = add nsw i32 %57, 1, !dbg !7250
  store i32 %inc45, ptr %i, align 4, !dbg !7250, !tbaa !1767
  br label %for.cond38, !dbg !7251, !llvm.loop !7252

for.end46:                                        ; preds = %for.cond38
  %58 = load ptr, ptr @xmlFree, align 8, !dbg !7254, !tbaa !1527
  %59 = load ptr, ptr %regexp.addr, align 8, !dbg !7255, !tbaa !1527
  %stringMap47 = getelementptr inbounds %struct._xmlRegexp, ptr %59, i32 0, i32 13, !dbg !7256
  %60 = load ptr, ptr %stringMap47, align 8, !dbg !7256, !tbaa !3011
  call void %58(ptr noundef %60), !dbg !7254
  br label %if.end48, !dbg !7257

if.end48:                                         ; preds = %for.end46, %if.end35
  %61 = load ptr, ptr @xmlFree, align 8, !dbg !7258, !tbaa !1527
  %62 = load ptr, ptr %regexp.addr, align 8, !dbg !7259, !tbaa !1527
  call void %61(ptr noundef %62), !dbg !7258
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7260
  br label %cleanup, !dbg !7260

cleanup:                                          ; preds = %if.end48, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !7260
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !7260

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @xmlRegFreeAtom(ptr noundef %atom) #0 !dbg !7261 {
entry:
  %atom.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %atom, ptr %atom.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom.addr, metadata !7265, metadata !DIExpression()), !dbg !7267
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !7268
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !7266, metadata !DIExpression()), !dbg !7269
  %0 = load ptr, ptr %atom.addr, align 8, !dbg !7270, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !7272
  br i1 %cmp, label %if.then, label %if.end, !dbg !7273

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7274

if.end:                                           ; preds = %entry
  store i32 0, ptr %i, align 4, !dbg !7275, !tbaa !1767
  br label %for.cond, !dbg !7277

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, ptr %i, align 4, !dbg !7278, !tbaa !1767
  %2 = load ptr, ptr %atom.addr, align 8, !dbg !7280, !tbaa !1527
  %nbRanges = getelementptr inbounds %struct._xmlRegAtom, ptr %2, i32 0, i32 13, !dbg !7281
  %3 = load i32, ptr %nbRanges, align 4, !dbg !7281, !tbaa !4033
  %cmp1 = icmp slt i32 %1, %3, !dbg !7282
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7283

for.body:                                         ; preds = %for.cond
  %4 = load ptr, ptr %atom.addr, align 8, !dbg !7284, !tbaa !1527
  %ranges = getelementptr inbounds %struct._xmlRegAtom, ptr %4, i32 0, i32 14, !dbg !7285
  %5 = load ptr, ptr %ranges, align 8, !dbg !7285, !tbaa !4047
  %6 = load i32, ptr %i, align 4, !dbg !7286, !tbaa !1767
  %idxprom = sext i32 %6 to i64, !dbg !7284
  %arrayidx = getelementptr inbounds ptr, ptr %5, i64 %idxprom, !dbg !7284
  %7 = load ptr, ptr %arrayidx, align 8, !dbg !7284, !tbaa !1527
  call void @xmlRegFreeRange(ptr noundef %7), !dbg !7287
  br label %for.inc, !dbg !7287

for.inc:                                          ; preds = %for.body
  %8 = load i32, ptr %i, align 4, !dbg !7288, !tbaa !1767
  %inc = add nsw i32 %8, 1, !dbg !7288
  store i32 %inc, ptr %i, align 4, !dbg !7288, !tbaa !1767
  br label %for.cond, !dbg !7289, !llvm.loop !7290

for.end:                                          ; preds = %for.cond
  %9 = load ptr, ptr %atom.addr, align 8, !dbg !7292, !tbaa !1527
  %ranges2 = getelementptr inbounds %struct._xmlRegAtom, ptr %9, i32 0, i32 14, !dbg !7294
  %10 = load ptr, ptr %ranges2, align 8, !dbg !7294, !tbaa !4047
  %cmp3 = icmp ne ptr %10, null, !dbg !7295
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !7296

if.then4:                                         ; preds = %for.end
  %11 = load ptr, ptr @xmlFree, align 8, !dbg !7297, !tbaa !1527
  %12 = load ptr, ptr %atom.addr, align 8, !dbg !7298, !tbaa !1527
  %ranges5 = getelementptr inbounds %struct._xmlRegAtom, ptr %12, i32 0, i32 14, !dbg !7299
  %13 = load ptr, ptr %ranges5, align 8, !dbg !7299, !tbaa !4047
  call void %11(ptr noundef %13), !dbg !7297
  br label %if.end6, !dbg !7297

if.end6:                                          ; preds = %if.then4, %for.end
  %14 = load ptr, ptr %atom.addr, align 8, !dbg !7300, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlRegAtom, ptr %14, i32 0, i32 1, !dbg !7302
  %15 = load i32, ptr %type, align 4, !dbg !7302, !tbaa !3988
  %cmp7 = icmp eq i32 %15, 5, !dbg !7303
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !7304

land.lhs.true:                                    ; preds = %if.end6
  %16 = load ptr, ptr %atom.addr, align 8, !dbg !7305, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %16, i32 0, i32 5, !dbg !7306
  %17 = load ptr, ptr %valuep, align 8, !dbg !7306, !tbaa !2159
  %cmp8 = icmp ne ptr %17, null, !dbg !7307
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !7308

if.then9:                                         ; preds = %land.lhs.true
  %18 = load ptr, ptr @xmlFree, align 8, !dbg !7309, !tbaa !1527
  %19 = load ptr, ptr %atom.addr, align 8, !dbg !7310, !tbaa !1527
  %valuep10 = getelementptr inbounds %struct._xmlRegAtom, ptr %19, i32 0, i32 5, !dbg !7311
  %20 = load ptr, ptr %valuep10, align 8, !dbg !7311, !tbaa !2159
  call void %18(ptr noundef %20), !dbg !7309
  br label %if.end11, !dbg !7309

if.end11:                                         ; preds = %if.then9, %land.lhs.true, %if.end6
  %21 = load ptr, ptr %atom.addr, align 8, !dbg !7312, !tbaa !1527
  %type12 = getelementptr inbounds %struct._xmlRegAtom, ptr %21, i32 0, i32 1, !dbg !7314
  %22 = load i32, ptr %type12, align 4, !dbg !7314, !tbaa !3988
  %cmp13 = icmp eq i32 %22, 5, !dbg !7315
  br i1 %cmp13, label %land.lhs.true14, label %if.end18, !dbg !7316

land.lhs.true14:                                  ; preds = %if.end11
  %23 = load ptr, ptr %atom.addr, align 8, !dbg !7317, !tbaa !1527
  %valuep2 = getelementptr inbounds %struct._xmlRegAtom, ptr %23, i32 0, i32 6, !dbg !7318
  %24 = load ptr, ptr %valuep2, align 8, !dbg !7318, !tbaa !3570
  %cmp15 = icmp ne ptr %24, null, !dbg !7319
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !7320

if.then16:                                        ; preds = %land.lhs.true14
  %25 = load ptr, ptr @xmlFree, align 8, !dbg !7321, !tbaa !1527
  %26 = load ptr, ptr %atom.addr, align 8, !dbg !7322, !tbaa !1527
  %valuep217 = getelementptr inbounds %struct._xmlRegAtom, ptr %26, i32 0, i32 6, !dbg !7323
  %27 = load ptr, ptr %valuep217, align 8, !dbg !7323, !tbaa !3570
  call void %25(ptr noundef %27), !dbg !7321
  br label %if.end18, !dbg !7321

if.end18:                                         ; preds = %if.then16, %land.lhs.true14, %if.end11
  %28 = load ptr, ptr %atom.addr, align 8, !dbg !7324, !tbaa !1527
  %type19 = getelementptr inbounds %struct._xmlRegAtom, ptr %28, i32 0, i32 1, !dbg !7326
  %29 = load i32, ptr %type19, align 4, !dbg !7326, !tbaa !3988
  %cmp20 = icmp eq i32 %29, 136, !dbg !7327
  br i1 %cmp20, label %land.lhs.true21, label %if.end26, !dbg !7328

land.lhs.true21:                                  ; preds = %if.end18
  %30 = load ptr, ptr %atom.addr, align 8, !dbg !7329, !tbaa !1527
  %valuep22 = getelementptr inbounds %struct._xmlRegAtom, ptr %30, i32 0, i32 5, !dbg !7330
  %31 = load ptr, ptr %valuep22, align 8, !dbg !7330, !tbaa !2159
  %cmp23 = icmp ne ptr %31, null, !dbg !7331
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !7332

if.then24:                                        ; preds = %land.lhs.true21
  %32 = load ptr, ptr @xmlFree, align 8, !dbg !7333, !tbaa !1527
  %33 = load ptr, ptr %atom.addr, align 8, !dbg !7334, !tbaa !1527
  %valuep25 = getelementptr inbounds %struct._xmlRegAtom, ptr %33, i32 0, i32 5, !dbg !7335
  %34 = load ptr, ptr %valuep25, align 8, !dbg !7335, !tbaa !2159
  call void %32(ptr noundef %34), !dbg !7333
  br label %if.end26, !dbg !7333

if.end26:                                         ; preds = %if.then24, %land.lhs.true21, %if.end18
  %35 = load ptr, ptr @xmlFree, align 8, !dbg !7336, !tbaa !1527
  %36 = load ptr, ptr %atom.addr, align 8, !dbg !7337, !tbaa !1527
  call void %35(ptr noundef %36), !dbg !7336
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7338
  br label %cleanup, !dbg !7338

cleanup:                                          ; preds = %if.end26, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !7338
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !7338

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define void @xmlAutomataSetFlags(ptr noundef %am, i32 noundef %flags) #0 !dbg !7339 {
entry:
  %am.addr = alloca ptr, align 8
  %flags.addr = alloca i32, align 4
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !7343, metadata !DIExpression()), !dbg !7345
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !7344, metadata !DIExpression()), !dbg !7346
  %0 = load ptr, ptr %am.addr, align 8, !dbg !7347, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !7349
  br i1 %cmp, label %if.then, label %if.end, !dbg !7350

if.then:                                          ; preds = %entry
  br label %return, !dbg !7351

if.end:                                           ; preds = %entry
  %1 = load i32, ptr %flags.addr, align 4, !dbg !7352, !tbaa !1767
  %2 = load ptr, ptr %am.addr, align 8, !dbg !7353, !tbaa !1527
  %flags1 = getelementptr inbounds %struct._xmlAutomata, ptr %2, i32 0, i32 19, !dbg !7354
  %3 = load i32, ptr %flags1, align 8, !dbg !7355, !tbaa !5142
  %or = or i32 %3, %1, !dbg !7355
  store i32 %or, ptr %flags1, align 8, !dbg !7355, !tbaa !5142
  br label %return, !dbg !7356

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7356
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataGetInitState(ptr noundef %am) #0 !dbg !7357 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !7364, metadata !DIExpression()), !dbg !7365
  %0 = load ptr, ptr %am.addr, align 8, !dbg !7366, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !7368
  br i1 %cmp, label %if.then, label %if.end, !dbg !7369

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !7370
  br label %return, !dbg !7370

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %am.addr, align 8, !dbg !7371, !tbaa !1527
  %start = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 4, !dbg !7372
  %2 = load ptr, ptr %start, align 8, !dbg !7372, !tbaa !4173
  store ptr %2, ptr %retval, align 8, !dbg !7373
  br label %return, !dbg !7373

return:                                           ; preds = %if.end, %if.then
  %3 = load ptr, ptr %retval, align 8, !dbg !7374
  ret ptr %3, !dbg !7374
}

; Function Attrs: nounwind uwtable
define i32 @xmlAutomataSetFinalState(ptr noundef %am, ptr noundef %state) #0 !dbg !7375 {
entry:
  %retval = alloca i32, align 4
  %am.addr = alloca ptr, align 8
  %state.addr = alloca ptr, align 8
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !7379, metadata !DIExpression()), !dbg !7381
  store ptr %state, ptr %state.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !7380, metadata !DIExpression()), !dbg !7382
  %0 = load ptr, ptr %am.addr, align 8, !dbg !7383, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !7385
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7386

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %state.addr, align 8, !dbg !7387, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !7388
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7389

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, ptr %retval, align 4, !dbg !7390
  br label %return, !dbg !7390

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr %state.addr, align 8, !dbg !7391, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlAutomataState, ptr %2, i32 0, i32 0, !dbg !7392
  store i32 2, ptr %type, align 8, !dbg !7393, !tbaa !1984
  store i32 0, ptr %retval, align 4, !dbg !7394
  br label %return, !dbg !7394

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, ptr %retval, align 4, !dbg !7395
  ret i32 %3, !dbg !7395
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataNewTransition(ptr noundef %am, ptr noundef %from, ptr noundef %to, ptr noundef %token, ptr noundef %data) #0 !dbg !7396 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %token.addr = alloca ptr, align 8
  %data.addr = alloca ptr, align 8
  %atom = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !7400, metadata !DIExpression()), !dbg !7406
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !7401, metadata !DIExpression()), !dbg !7407
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !7402, metadata !DIExpression()), !dbg !7408
  store ptr %token, ptr %token.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %token.addr, metadata !7403, metadata !DIExpression()), !dbg !7409
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !7404, metadata !DIExpression()), !dbg !7410
  call void @llvm.lifetime.start.p0(i64 8, ptr %atom) #8, !dbg !7411
  tail call void @llvm.dbg.declare(metadata ptr %atom, metadata !7405, metadata !DIExpression()), !dbg !7412
  %0 = load ptr, ptr %am.addr, align 8, !dbg !7413, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !7415
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7416

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %from.addr, align 8, !dbg !7417, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !7418
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !7419

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load ptr, ptr %token.addr, align 8, !dbg !7420, !tbaa !1527
  %cmp3 = icmp eq ptr %2, null, !dbg !7421
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7422

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !7423
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7423

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load ptr, ptr %am.addr, align 8, !dbg !7424, !tbaa !1527
  %call = call ptr @xmlRegNewAtom(ptr noundef %3, i32 noundef 5), !dbg !7425
  store ptr %call, ptr %atom, align 8, !dbg !7426, !tbaa !1527
  %4 = load ptr, ptr %atom, align 8, !dbg !7427, !tbaa !1527
  %cmp4 = icmp eq ptr %4, null, !dbg !7429
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7430

if.then5:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !7431
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7431

if.end6:                                          ; preds = %if.end
  %5 = load ptr, ptr %data.addr, align 8, !dbg !7432, !tbaa !1527
  %6 = load ptr, ptr %atom, align 8, !dbg !7433, !tbaa !1527
  %data7 = getelementptr inbounds %struct._xmlRegAtom, ptr %6, i32 0, i32 15, !dbg !7434
  store ptr %5, ptr %data7, align 8, !dbg !7435, !tbaa !2554
  %7 = load ptr, ptr %token.addr, align 8, !dbg !7436, !tbaa !1527
  %call8 = call ptr @xmlStrdup(ptr noundef %7), !dbg !7437
  %8 = load ptr, ptr %atom, align 8, !dbg !7438, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %8, i32 0, i32 5, !dbg !7439
  store ptr %call8, ptr %valuep, align 8, !dbg !7440, !tbaa !2159
  %9 = load ptr, ptr %am.addr, align 8, !dbg !7441, !tbaa !1527
  %10 = load ptr, ptr %from.addr, align 8, !dbg !7443, !tbaa !1527
  %11 = load ptr, ptr %to.addr, align 8, !dbg !7444, !tbaa !1527
  %12 = load ptr, ptr %atom, align 8, !dbg !7445, !tbaa !1527
  %call9 = call i32 @xmlFAGenerateTransitions(ptr noundef %9, ptr noundef %10, ptr noundef %11, ptr noundef %12), !dbg !7446
  %cmp10 = icmp slt i32 %call9, 0, !dbg !7447
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !7448

if.then11:                                        ; preds = %if.end6
  %13 = load ptr, ptr %atom, align 8, !dbg !7449, !tbaa !1527
  call void @xmlRegFreeAtom(ptr noundef %13), !dbg !7451
  store ptr null, ptr %retval, align 8, !dbg !7452
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7452

if.end12:                                         ; preds = %if.end6
  %14 = load ptr, ptr %to.addr, align 8, !dbg !7453, !tbaa !1527
  %cmp13 = icmp eq ptr %14, null, !dbg !7455
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !7456

if.then14:                                        ; preds = %if.end12
  %15 = load ptr, ptr %am.addr, align 8, !dbg !7457, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %15, i32 0, i32 6, !dbg !7458
  %16 = load ptr, ptr %state, align 8, !dbg !7458, !tbaa !4169
  store ptr %16, ptr %retval, align 8, !dbg !7459
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7459

if.end15:                                         ; preds = %if.end12
  %17 = load ptr, ptr %to.addr, align 8, !dbg !7460, !tbaa !1527
  store ptr %17, ptr %retval, align 8, !dbg !7461
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7461

cleanup:                                          ; preds = %if.end15, %if.then14, %if.then11, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %atom) #8, !dbg !7462
  %18 = load ptr, ptr %retval, align 8, !dbg !7462
  ret ptr %18, !dbg !7462
}

; Function Attrs: nounwind uwtable
define internal ptr @xmlRegNewAtom(ptr noundef %ctxt, i32 noundef %type) #0 !dbg !7463 {
entry:
  %retval = alloca ptr, align 8
  %ctxt.addr = alloca ptr, align 8
  %type.addr = alloca i32, align 4
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !7467, metadata !DIExpression()), !dbg !7470
  store i32 %type, ptr %type.addr, align 4, !tbaa !2932
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !7468, metadata !DIExpression()), !dbg !7471
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #8, !dbg !7472
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !7469, metadata !DIExpression()), !dbg !7473
  %0 = load ptr, ptr @xmlMalloc, align 8, !dbg !7474, !tbaa !1527
  %call = call ptr %0(i64 noundef 96), !dbg !7474
  store ptr %call, ptr %ret, align 8, !dbg !7475, !tbaa !1527
  %1 = load ptr, ptr %ret, align 8, !dbg !7476, !tbaa !1527
  %cmp = icmp eq ptr %1, null, !dbg !7478
  br i1 %cmp, label %if.then, label %if.end, !dbg !7479

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !7480, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %2, ptr noundef @.str.132), !dbg !7482
  store ptr null, ptr %retval, align 8, !dbg !7483
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7483

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %ret, align 8, !dbg !7484, !tbaa !1527
  call void @llvm.memset.p0.i64(ptr align 8 %3, i8 0, i64 96, i1 false), !dbg !7485
  %4 = load i32, ptr %type.addr, align 4, !dbg !7486, !tbaa !2932
  %5 = load ptr, ptr %ret, align 8, !dbg !7487, !tbaa !1527
  %type1 = getelementptr inbounds %struct._xmlRegAtom, ptr %5, i32 0, i32 1, !dbg !7488
  store i32 %4, ptr %type1, align 4, !dbg !7489, !tbaa !3988
  %6 = load ptr, ptr %ret, align 8, !dbg !7490, !tbaa !1527
  %quant = getelementptr inbounds %struct._xmlRegAtom, ptr %6, i32 0, i32 2, !dbg !7491
  store i32 2, ptr %quant, align 8, !dbg !7492, !tbaa !3993
  %7 = load ptr, ptr %ret, align 8, !dbg !7493, !tbaa !1527
  %min = getelementptr inbounds %struct._xmlRegAtom, ptr %7, i32 0, i32 3, !dbg !7494
  store i32 0, ptr %min, align 4, !dbg !7495, !tbaa !2372
  %8 = load ptr, ptr %ret, align 8, !dbg !7496, !tbaa !1527
  %max = getelementptr inbounds %struct._xmlRegAtom, ptr %8, i32 0, i32 4, !dbg !7497
  store i32 0, ptr %max, align 8, !dbg !7498, !tbaa !2377
  %9 = load ptr, ptr %ret, align 8, !dbg !7499, !tbaa !1527
  store ptr %9, ptr %retval, align 8, !dbg !7500
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7500

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #8, !dbg !7501
  %10 = load ptr, ptr %retval, align 8, !dbg !7501
  ret ptr %10, !dbg !7501
}

declare !dbg !7502 ptr @xmlStrdup(ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal i32 @xmlFAGenerateTransitions(ptr noundef %ctxt, ptr noundef %from, ptr noundef %to, ptr noundef %atom) #0 !dbg !7505 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %atom.addr = alloca ptr, align 8
  %end = alloca ptr, align 8
  %nullable = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %counter = alloca i32, align 4
  %inter = alloca ptr, align 8
  %newstate = alloca ptr, align 8
  %copy = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !7509, metadata !DIExpression()), !dbg !7528
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !7510, metadata !DIExpression()), !dbg !7529
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !7511, metadata !DIExpression()), !dbg !7530
  store ptr %atom, ptr %atom.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom.addr, metadata !7512, metadata !DIExpression()), !dbg !7531
  call void @llvm.lifetime.start.p0(i64 8, ptr %end) #8, !dbg !7532
  tail call void @llvm.dbg.declare(metadata ptr %end, metadata !7513, metadata !DIExpression()), !dbg !7533
  call void @llvm.lifetime.start.p0(i64 4, ptr %nullable) #8, !dbg !7534
  tail call void @llvm.dbg.declare(metadata ptr %nullable, metadata !7514, metadata !DIExpression()), !dbg !7535
  store i32 0, ptr %nullable, align 4, !dbg !7535, !tbaa !1767
  %0 = load ptr, ptr %atom.addr, align 8, !dbg !7536, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !7538
  br i1 %cmp, label %if.then, label %if.end, !dbg !7539

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !7540, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 2, !dbg !7540
  store i32 1450, ptr %error, align 8, !dbg !7540, !tbaa !1729
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !7540, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %2, ptr noundef @.str.133), !dbg !7540
  store i32 -1, ptr %retval, align 4, !dbg !7542
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup174, !dbg !7542

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %atom.addr, align 8, !dbg !7543, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlRegAtom, ptr %3, i32 0, i32 1, !dbg !7544
  %4 = load i32, ptr %type, align 4, !dbg !7544, !tbaa !3988
  %cmp1 = icmp eq i32 %4, 4, !dbg !7545
  br i1 %cmp1, label %if.then2, label %if.end96, !dbg !7546

if.then2:                                         ; preds = %if.end
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !7547, !tbaa !1527
  %6 = load ptr, ptr %atom.addr, align 8, !dbg !7549, !tbaa !1527
  %call = call i32 @xmlRegAtomPush(ptr noundef %5, ptr noundef %6), !dbg !7550
  %cmp3 = icmp slt i32 %call, 0, !dbg !7551
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7552

if.then4:                                         ; preds = %if.then2
  store i32 -1, ptr %retval, align 4, !dbg !7553
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup174, !dbg !7553

if.end5:                                          ; preds = %if.then2
  %7 = load ptr, ptr %to.addr, align 8, !dbg !7555, !tbaa !1527
  %cmp6 = icmp ne ptr %7, null, !dbg !7557
  br i1 %cmp6, label %land.lhs.true, label %if.end12, !dbg !7558

land.lhs.true:                                    ; preds = %if.end5
  %8 = load ptr, ptr %atom.addr, align 8, !dbg !7559, !tbaa !1527
  %stop = getelementptr inbounds %struct._xmlRegAtom, ptr %8, i32 0, i32 11, !dbg !7560
  %9 = load ptr, ptr %stop, align 8, !dbg !7560, !tbaa !4070
  %10 = load ptr, ptr %to.addr, align 8, !dbg !7561, !tbaa !1527
  %cmp7 = icmp ne ptr %9, %10, !dbg !7562
  br i1 %cmp7, label %land.lhs.true8, label %if.end12, !dbg !7563

land.lhs.true8:                                   ; preds = %land.lhs.true
  %11 = load ptr, ptr %atom.addr, align 8, !dbg !7564, !tbaa !1527
  %quant = getelementptr inbounds %struct._xmlRegAtom, ptr %11, i32 0, i32 2, !dbg !7565
  %12 = load i32, ptr %quant, align 8, !dbg !7565, !tbaa !3993
  %cmp9 = icmp ne i32 %12, 8, !dbg !7566
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !7567

if.then10:                                        ; preds = %land.lhs.true8
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !7568, !tbaa !1527
  %14 = load ptr, ptr %atom.addr, align 8, !dbg !7570, !tbaa !1527
  %stop11 = getelementptr inbounds %struct._xmlRegAtom, ptr %14, i32 0, i32 11, !dbg !7571
  %15 = load ptr, ptr %stop11, align 8, !dbg !7571, !tbaa !4070
  %16 = load ptr, ptr %to.addr, align 8, !dbg !7572, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %13, ptr noundef %15, ptr noundef %16), !dbg !7573
  br label %if.end12, !dbg !7574

if.end12:                                         ; preds = %if.then10, %land.lhs.true8, %land.lhs.true, %if.end5
  %17 = load ptr, ptr %atom.addr, align 8, !dbg !7575, !tbaa !1527
  %quant13 = getelementptr inbounds %struct._xmlRegAtom, ptr %17, i32 0, i32 2, !dbg !7576
  %18 = load i32, ptr %quant13, align 8, !dbg !7576, !tbaa !3993
  switch i32 %18, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb20
    i32 5, label %sw.bb26
    i32 8, label %sw.bb30
  ], !dbg !7577

sw.bb:                                            ; preds = %if.end12
  %19 = load ptr, ptr %atom.addr, align 8, !dbg !7578, !tbaa !1527
  %quant14 = getelementptr inbounds %struct._xmlRegAtom, ptr %19, i32 0, i32 2, !dbg !7579
  store i32 2, ptr %quant14, align 8, !dbg !7580, !tbaa !3993
  %20 = load ptr, ptr %to.addr, align 8, !dbg !7581, !tbaa !1527
  %cmp15 = icmp eq ptr %20, null, !dbg !7583
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !7584

if.then16:                                        ; preds = %sw.bb
  %21 = load ptr, ptr %ctxt.addr, align 8, !dbg !7585, !tbaa !1527
  %22 = load ptr, ptr %atom.addr, align 8, !dbg !7587, !tbaa !1527
  %start = getelementptr inbounds %struct._xmlRegAtom, ptr %22, i32 0, i32 9, !dbg !7588
  %23 = load ptr, ptr %start, align 8, !dbg !7588, !tbaa !4065
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %21, ptr noundef %23, ptr noundef null), !dbg !7589
  %24 = load ptr, ptr %ctxt.addr, align 8, !dbg !7590, !tbaa !1527
  %25 = load ptr, ptr %atom.addr, align 8, !dbg !7591, !tbaa !1527
  %stop17 = getelementptr inbounds %struct._xmlRegAtom, ptr %25, i32 0, i32 11, !dbg !7592
  %26 = load ptr, ptr %stop17, align 8, !dbg !7592, !tbaa !4070
  %27 = load ptr, ptr %ctxt.addr, align 8, !dbg !7593, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %27, i32 0, i32 6, !dbg !7594
  %28 = load ptr, ptr %state, align 8, !dbg !7594, !tbaa !4169
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %24, ptr noundef %26, ptr noundef %28), !dbg !7595
  br label %if.end19, !dbg !7596

if.else:                                          ; preds = %sw.bb
  %29 = load ptr, ptr %ctxt.addr, align 8, !dbg !7597, !tbaa !1527
  %30 = load ptr, ptr %atom.addr, align 8, !dbg !7599, !tbaa !1527
  %start18 = getelementptr inbounds %struct._xmlRegAtom, ptr %30, i32 0, i32 9, !dbg !7600
  %31 = load ptr, ptr %start18, align 8, !dbg !7600, !tbaa !4065
  %32 = load ptr, ptr %to.addr, align 8, !dbg !7601, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %29, ptr noundef %31, ptr noundef %32), !dbg !7602
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then16
  br label %sw.epilog, !dbg !7603

sw.bb20:                                          ; preds = %if.end12
  %33 = load ptr, ptr %atom.addr, align 8, !dbg !7604, !tbaa !1527
  %quant21 = getelementptr inbounds %struct._xmlRegAtom, ptr %33, i32 0, i32 2, !dbg !7605
  store i32 2, ptr %quant21, align 8, !dbg !7606, !tbaa !3993
  %34 = load ptr, ptr %ctxt.addr, align 8, !dbg !7607, !tbaa !1527
  %35 = load ptr, ptr %atom.addr, align 8, !dbg !7608, !tbaa !1527
  %start22 = getelementptr inbounds %struct._xmlRegAtom, ptr %35, i32 0, i32 9, !dbg !7609
  %36 = load ptr, ptr %start22, align 8, !dbg !7609, !tbaa !4065
  %37 = load ptr, ptr %atom.addr, align 8, !dbg !7610, !tbaa !1527
  %stop23 = getelementptr inbounds %struct._xmlRegAtom, ptr %37, i32 0, i32 11, !dbg !7611
  %38 = load ptr, ptr %stop23, align 8, !dbg !7611, !tbaa !4070
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %34, ptr noundef %36, ptr noundef %38), !dbg !7612
  %39 = load ptr, ptr %ctxt.addr, align 8, !dbg !7613, !tbaa !1527
  %40 = load ptr, ptr %atom.addr, align 8, !dbg !7614, !tbaa !1527
  %stop24 = getelementptr inbounds %struct._xmlRegAtom, ptr %40, i32 0, i32 11, !dbg !7615
  %41 = load ptr, ptr %stop24, align 8, !dbg !7615, !tbaa !4070
  %42 = load ptr, ptr %atom.addr, align 8, !dbg !7616, !tbaa !1527
  %start25 = getelementptr inbounds %struct._xmlRegAtom, ptr %42, i32 0, i32 9, !dbg !7617
  %43 = load ptr, ptr %start25, align 8, !dbg !7617, !tbaa !4065
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %39, ptr noundef %41, ptr noundef %43), !dbg !7618
  br label %sw.epilog, !dbg !7619

sw.bb26:                                          ; preds = %if.end12
  %44 = load ptr, ptr %atom.addr, align 8, !dbg !7620, !tbaa !1527
  %quant27 = getelementptr inbounds %struct._xmlRegAtom, ptr %44, i32 0, i32 2, !dbg !7621
  store i32 2, ptr %quant27, align 8, !dbg !7622, !tbaa !3993
  %45 = load ptr, ptr %ctxt.addr, align 8, !dbg !7623, !tbaa !1527
  %46 = load ptr, ptr %atom.addr, align 8, !dbg !7624, !tbaa !1527
  %stop28 = getelementptr inbounds %struct._xmlRegAtom, ptr %46, i32 0, i32 11, !dbg !7625
  %47 = load ptr, ptr %stop28, align 8, !dbg !7625, !tbaa !4070
  %48 = load ptr, ptr %atom.addr, align 8, !dbg !7626, !tbaa !1527
  %start29 = getelementptr inbounds %struct._xmlRegAtom, ptr %48, i32 0, i32 9, !dbg !7627
  %49 = load ptr, ptr %start29, align 8, !dbg !7627, !tbaa !4065
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %45, ptr noundef %47, ptr noundef %49), !dbg !7628
  br label %sw.epilog, !dbg !7629

sw.bb30:                                          ; preds = %if.end12
  call void @llvm.lifetime.start.p0(i64 4, ptr %counter) #8, !dbg !7630
  tail call void @llvm.dbg.declare(metadata ptr %counter, metadata !7515, metadata !DIExpression()), !dbg !7631
  call void @llvm.lifetime.start.p0(i64 8, ptr %inter) #8, !dbg !7632
  tail call void @llvm.dbg.declare(metadata ptr %inter, metadata !7520, metadata !DIExpression()), !dbg !7633
  call void @llvm.lifetime.start.p0(i64 8, ptr %newstate) #8, !dbg !7632
  tail call void @llvm.dbg.declare(metadata ptr %newstate, metadata !7521, metadata !DIExpression()), !dbg !7634
  %50 = load ptr, ptr %to.addr, align 8, !dbg !7635, !tbaa !1527
  %cmp31 = icmp ne ptr %50, null, !dbg !7637
  br i1 %cmp31, label %if.then32, label %if.else33, !dbg !7638

if.then32:                                        ; preds = %sw.bb30
  %51 = load ptr, ptr %to.addr, align 8, !dbg !7639, !tbaa !1527
  store ptr %51, ptr %newstate, align 8, !dbg !7641, !tbaa !1527
  br label %if.end36, !dbg !7642

if.else33:                                        ; preds = %sw.bb30
  %52 = load ptr, ptr %ctxt.addr, align 8, !dbg !7643, !tbaa !1527
  %call34 = call ptr @xmlRegNewState(ptr noundef %52), !dbg !7645
  store ptr %call34, ptr %newstate, align 8, !dbg !7646, !tbaa !1527
  %53 = load ptr, ptr %ctxt.addr, align 8, !dbg !7647, !tbaa !1527
  %54 = load ptr, ptr %newstate, align 8, !dbg !7648, !tbaa !1527
  %call35 = call i32 @xmlRegStatePush(ptr noundef %53, ptr noundef %54), !dbg !7649
  br label %if.end36

if.end36:                                         ; preds = %if.else33, %if.then32
  %55 = load ptr, ptr %atom.addr, align 8, !dbg !7650, !tbaa !1527
  %min = getelementptr inbounds %struct._xmlRegAtom, ptr %55, i32 0, i32 3, !dbg !7651
  %56 = load i32, ptr %min, align 4, !dbg !7651, !tbaa !2372
  %cmp37 = icmp eq i32 %56, 0, !dbg !7652
  br i1 %cmp37, label %land.lhs.true38, label %if.else64, !dbg !7653

land.lhs.true38:                                  ; preds = %if.end36
  %57 = load ptr, ptr %atom.addr, align 8, !dbg !7654, !tbaa !1527
  %start0 = getelementptr inbounds %struct._xmlRegAtom, ptr %57, i32 0, i32 10, !dbg !7655
  %58 = load ptr, ptr %start0, align 8, !dbg !7655, !tbaa !7656
  %cmp39 = icmp eq ptr %58, null, !dbg !7657
  br i1 %cmp39, label %if.then40, label %if.else64, !dbg !7658

if.then40:                                        ; preds = %land.lhs.true38
  call void @llvm.lifetime.start.p0(i64 8, ptr %copy) #8, !dbg !7659
  tail call void @llvm.dbg.declare(metadata ptr %copy, metadata !7522, metadata !DIExpression()), !dbg !7660
  %59 = load ptr, ptr %ctxt.addr, align 8, !dbg !7661, !tbaa !1527
  %60 = load ptr, ptr %atom.addr, align 8, !dbg !7662, !tbaa !1527
  %call41 = call ptr @xmlRegCopyAtom(ptr noundef %59, ptr noundef %60), !dbg !7663
  store ptr %call41, ptr %copy, align 8, !dbg !7664, !tbaa !1527
  %61 = load ptr, ptr %copy, align 8, !dbg !7665, !tbaa !1527
  %cmp42 = icmp eq ptr %61, null, !dbg !7667
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !7668

if.then43:                                        ; preds = %if.then40
  store i32 -1, ptr %retval, align 4, !dbg !7669
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7669

if.end44:                                         ; preds = %if.then40
  %62 = load ptr, ptr %copy, align 8, !dbg !7670, !tbaa !1527
  %quant45 = getelementptr inbounds %struct._xmlRegAtom, ptr %62, i32 0, i32 2, !dbg !7671
  store i32 2, ptr %quant45, align 8, !dbg !7672, !tbaa !3993
  %63 = load ptr, ptr %copy, align 8, !dbg !7673, !tbaa !1527
  %min46 = getelementptr inbounds %struct._xmlRegAtom, ptr %63, i32 0, i32 3, !dbg !7674
  store i32 0, ptr %min46, align 4, !dbg !7675, !tbaa !2372
  %64 = load ptr, ptr %copy, align 8, !dbg !7676, !tbaa !1527
  %max = getelementptr inbounds %struct._xmlRegAtom, ptr %64, i32 0, i32 4, !dbg !7677
  store i32 0, ptr %max, align 8, !dbg !7678, !tbaa !2377
  %65 = load ptr, ptr %ctxt.addr, align 8, !dbg !7679, !tbaa !1527
  %66 = load ptr, ptr %atom.addr, align 8, !dbg !7681, !tbaa !1527
  %start47 = getelementptr inbounds %struct._xmlRegAtom, ptr %66, i32 0, i32 9, !dbg !7682
  %67 = load ptr, ptr %start47, align 8, !dbg !7682, !tbaa !4065
  %68 = load ptr, ptr %copy, align 8, !dbg !7683, !tbaa !1527
  %call48 = call i32 @xmlFAGenerateTransitions(ptr noundef %65, ptr noundef %67, ptr noundef null, ptr noundef %68), !dbg !7684
  %cmp49 = icmp slt i32 %call48, 0, !dbg !7685
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !7686

if.then50:                                        ; preds = %if.end44
  store i32 -1, ptr %retval, align 4, !dbg !7687
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7687

if.end51:                                         ; preds = %if.end44
  %69 = load ptr, ptr %ctxt.addr, align 8, !dbg !7688, !tbaa !1527
  %state52 = getelementptr inbounds %struct._xmlAutomata, ptr %69, i32 0, i32 6, !dbg !7689
  %70 = load ptr, ptr %state52, align 8, !dbg !7689, !tbaa !4169
  store ptr %70, ptr %inter, align 8, !dbg !7690, !tbaa !1527
  %71 = load ptr, ptr %ctxt.addr, align 8, !dbg !7691, !tbaa !1527
  %call53 = call i32 @xmlRegGetCounter(ptr noundef %71), !dbg !7692
  store i32 %call53, ptr %counter, align 4, !dbg !7693, !tbaa !1767
  %72 = load ptr, ptr %atom.addr, align 8, !dbg !7694, !tbaa !1527
  %min54 = getelementptr inbounds %struct._xmlRegAtom, ptr %72, i32 0, i32 3, !dbg !7695
  %73 = load i32, ptr %min54, align 4, !dbg !7695, !tbaa !2372
  %sub = sub nsw i32 %73, 1, !dbg !7696
  %74 = load ptr, ptr %ctxt.addr, align 8, !dbg !7697, !tbaa !1527
  %counters = getelementptr inbounds %struct._xmlAutomata, ptr %74, i32 0, i32 16, !dbg !7698
  %75 = load ptr, ptr %counters, align 8, !dbg !7698, !tbaa !4604
  %76 = load i32, ptr %counter, align 4, !dbg !7699, !tbaa !1767
  %idxprom = sext i32 %76 to i64, !dbg !7697
  %arrayidx = getelementptr inbounds %struct._xmlRegCounter, ptr %75, i64 %idxprom, !dbg !7697
  %min55 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx, i32 0, i32 0, !dbg !7700
  store i32 %sub, ptr %min55, align 4, !dbg !7701, !tbaa !2170
  %77 = load ptr, ptr %atom.addr, align 8, !dbg !7702, !tbaa !1527
  %max56 = getelementptr inbounds %struct._xmlRegAtom, ptr %77, i32 0, i32 4, !dbg !7703
  %78 = load i32, ptr %max56, align 8, !dbg !7703, !tbaa !2377
  %sub57 = sub nsw i32 %78, 1, !dbg !7704
  %79 = load ptr, ptr %ctxt.addr, align 8, !dbg !7705, !tbaa !1527
  %counters58 = getelementptr inbounds %struct._xmlAutomata, ptr %79, i32 0, i32 16, !dbg !7706
  %80 = load ptr, ptr %counters58, align 8, !dbg !7706, !tbaa !4604
  %81 = load i32, ptr %counter, align 4, !dbg !7707, !tbaa !1767
  %idxprom59 = sext i32 %81 to i64, !dbg !7705
  %arrayidx60 = getelementptr inbounds %struct._xmlRegCounter, ptr %80, i64 %idxprom59, !dbg !7705
  %max61 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx60, i32 0, i32 1, !dbg !7708
  store i32 %sub57, ptr %max61, align 4, !dbg !7709, !tbaa !2147
  %82 = load ptr, ptr %ctxt.addr, align 8, !dbg !7710, !tbaa !1527
  %83 = load ptr, ptr %inter, align 8, !dbg !7711, !tbaa !1527
  %84 = load ptr, ptr %atom.addr, align 8, !dbg !7712, !tbaa !1527
  %stop62 = getelementptr inbounds %struct._xmlRegAtom, ptr %84, i32 0, i32 11, !dbg !7713
  %85 = load ptr, ptr %stop62, align 8, !dbg !7713, !tbaa !4070
  %86 = load i32, ptr %counter, align 4, !dbg !7714, !tbaa !1767
  call void @xmlFAGenerateCountedEpsilonTransition(ptr noundef %82, ptr noundef %83, ptr noundef %85, i32 noundef %86), !dbg !7715
  %87 = load ptr, ptr %ctxt.addr, align 8, !dbg !7716, !tbaa !1527
  %88 = load ptr, ptr %inter, align 8, !dbg !7717, !tbaa !1527
  %89 = load ptr, ptr %newstate, align 8, !dbg !7718, !tbaa !1527
  %90 = load i32, ptr %counter, align 4, !dbg !7719, !tbaa !1767
  call void @xmlFAGenerateCountedTransition(ptr noundef %87, ptr noundef %88, ptr noundef %89, i32 noundef %90), !dbg !7720
  %91 = load ptr, ptr %ctxt.addr, align 8, !dbg !7721, !tbaa !1527
  %92 = load ptr, ptr %atom.addr, align 8, !dbg !7722, !tbaa !1527
  %start63 = getelementptr inbounds %struct._xmlRegAtom, ptr %92, i32 0, i32 9, !dbg !7723
  %93 = load ptr, ptr %start63, align 8, !dbg !7723, !tbaa !4065
  %94 = load ptr, ptr %newstate, align 8, !dbg !7724, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %91, ptr noundef %93, ptr noundef %94), !dbg !7725
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7726
  br label %cleanup, !dbg !7726

cleanup:                                          ; preds = %if.end51, %if.then50, %if.then43
  call void @llvm.lifetime.end.p0(i64 8, ptr %copy) #8, !dbg !7726
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup91 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end86, !dbg !7727

if.else64:                                        ; preds = %land.lhs.true38, %if.end36
  %95 = load ptr, ptr %ctxt.addr, align 8, !dbg !7728, !tbaa !1527
  %call65 = call i32 @xmlRegGetCounter(ptr noundef %95), !dbg !7730
  store i32 %call65, ptr %counter, align 4, !dbg !7731, !tbaa !1767
  %96 = load ptr, ptr %atom.addr, align 8, !dbg !7732, !tbaa !1527
  %min66 = getelementptr inbounds %struct._xmlRegAtom, ptr %96, i32 0, i32 3, !dbg !7733
  %97 = load i32, ptr %min66, align 4, !dbg !7733, !tbaa !2372
  %sub67 = sub nsw i32 %97, 1, !dbg !7734
  %98 = load ptr, ptr %ctxt.addr, align 8, !dbg !7735, !tbaa !1527
  %counters68 = getelementptr inbounds %struct._xmlAutomata, ptr %98, i32 0, i32 16, !dbg !7736
  %99 = load ptr, ptr %counters68, align 8, !dbg !7736, !tbaa !4604
  %100 = load i32, ptr %counter, align 4, !dbg !7737, !tbaa !1767
  %idxprom69 = sext i32 %100 to i64, !dbg !7735
  %arrayidx70 = getelementptr inbounds %struct._xmlRegCounter, ptr %99, i64 %idxprom69, !dbg !7735
  %min71 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx70, i32 0, i32 0, !dbg !7738
  store i32 %sub67, ptr %min71, align 4, !dbg !7739, !tbaa !2170
  %101 = load ptr, ptr %atom.addr, align 8, !dbg !7740, !tbaa !1527
  %max72 = getelementptr inbounds %struct._xmlRegAtom, ptr %101, i32 0, i32 4, !dbg !7741
  %102 = load i32, ptr %max72, align 8, !dbg !7741, !tbaa !2377
  %sub73 = sub nsw i32 %102, 1, !dbg !7742
  %103 = load ptr, ptr %ctxt.addr, align 8, !dbg !7743, !tbaa !1527
  %counters74 = getelementptr inbounds %struct._xmlAutomata, ptr %103, i32 0, i32 16, !dbg !7744
  %104 = load ptr, ptr %counters74, align 8, !dbg !7744, !tbaa !4604
  %105 = load i32, ptr %counter, align 4, !dbg !7745, !tbaa !1767
  %idxprom75 = sext i32 %105 to i64, !dbg !7743
  %arrayidx76 = getelementptr inbounds %struct._xmlRegCounter, ptr %104, i64 %idxprom75, !dbg !7743
  %max77 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx76, i32 0, i32 1, !dbg !7746
  store i32 %sub73, ptr %max77, align 4, !dbg !7747, !tbaa !2147
  %106 = load ptr, ptr %ctxt.addr, align 8, !dbg !7748, !tbaa !1527
  %107 = load ptr, ptr %atom.addr, align 8, !dbg !7749, !tbaa !1527
  %stop78 = getelementptr inbounds %struct._xmlRegAtom, ptr %107, i32 0, i32 11, !dbg !7750
  %108 = load ptr, ptr %stop78, align 8, !dbg !7750, !tbaa !4070
  %109 = load ptr, ptr %newstate, align 8, !dbg !7751, !tbaa !1527
  %110 = load i32, ptr %counter, align 4, !dbg !7752, !tbaa !1767
  call void @xmlFAGenerateCountedTransition(ptr noundef %106, ptr noundef %108, ptr noundef %109, i32 noundef %110), !dbg !7753
  %111 = load ptr, ptr %ctxt.addr, align 8, !dbg !7754, !tbaa !1527
  %112 = load ptr, ptr %atom.addr, align 8, !dbg !7755, !tbaa !1527
  %stop79 = getelementptr inbounds %struct._xmlRegAtom, ptr %112, i32 0, i32 11, !dbg !7756
  %113 = load ptr, ptr %stop79, align 8, !dbg !7756, !tbaa !4070
  %114 = load ptr, ptr %atom.addr, align 8, !dbg !7757, !tbaa !1527
  %start80 = getelementptr inbounds %struct._xmlRegAtom, ptr %114, i32 0, i32 9, !dbg !7758
  %115 = load ptr, ptr %start80, align 8, !dbg !7758, !tbaa !4065
  %116 = load i32, ptr %counter, align 4, !dbg !7759, !tbaa !1767
  call void @xmlFAGenerateCountedEpsilonTransition(ptr noundef %111, ptr noundef %113, ptr noundef %115, i32 noundef %116), !dbg !7760
  %117 = load ptr, ptr %atom.addr, align 8, !dbg !7761, !tbaa !1527
  %min81 = getelementptr inbounds %struct._xmlRegAtom, ptr %117, i32 0, i32 3, !dbg !7763
  %118 = load i32, ptr %min81, align 4, !dbg !7763, !tbaa !2372
  %cmp82 = icmp eq i32 %118, 0, !dbg !7764
  br i1 %cmp82, label %if.then83, label %if.end85, !dbg !7765

if.then83:                                        ; preds = %if.else64
  %119 = load ptr, ptr %ctxt.addr, align 8, !dbg !7766, !tbaa !1527
  %120 = load ptr, ptr %atom.addr, align 8, !dbg !7767, !tbaa !1527
  %start084 = getelementptr inbounds %struct._xmlRegAtom, ptr %120, i32 0, i32 10, !dbg !7768
  %121 = load ptr, ptr %start084, align 8, !dbg !7768, !tbaa !7656
  %122 = load ptr, ptr %newstate, align 8, !dbg !7769, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %119, ptr noundef %121, ptr noundef %122), !dbg !7770
  br label %if.end85, !dbg !7770

if.end85:                                         ; preds = %if.then83, %if.else64
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %cleanup.cont
  %123 = load ptr, ptr %atom.addr, align 8, !dbg !7771, !tbaa !1527
  %min87 = getelementptr inbounds %struct._xmlRegAtom, ptr %123, i32 0, i32 3, !dbg !7772
  store i32 0, ptr %min87, align 4, !dbg !7773, !tbaa !2372
  %124 = load ptr, ptr %atom.addr, align 8, !dbg !7774, !tbaa !1527
  %max88 = getelementptr inbounds %struct._xmlRegAtom, ptr %124, i32 0, i32 4, !dbg !7775
  store i32 0, ptr %max88, align 8, !dbg !7776, !tbaa !2377
  %125 = load ptr, ptr %atom.addr, align 8, !dbg !7777, !tbaa !1527
  %quant89 = getelementptr inbounds %struct._xmlRegAtom, ptr %125, i32 0, i32 2, !dbg !7778
  store i32 2, ptr %quant89, align 8, !dbg !7779, !tbaa !3993
  %126 = load ptr, ptr %newstate, align 8, !dbg !7780, !tbaa !1527
  %127 = load ptr, ptr %ctxt.addr, align 8, !dbg !7781, !tbaa !1527
  %state90 = getelementptr inbounds %struct._xmlAutomata, ptr %127, i32 0, i32 6, !dbg !7782
  store ptr %126, ptr %state90, align 8, !dbg !7783, !tbaa !4169
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7784
  br label %cleanup91, !dbg !7784

cleanup91:                                        ; preds = %if.end86, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %newstate) #8, !dbg !7784
  call void @llvm.lifetime.end.p0(i64 8, ptr %inter) #8, !dbg !7784
  call void @llvm.lifetime.end.p0(i64 4, ptr %counter) #8, !dbg !7784
  %cleanup.dest94 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest94, label %cleanup174 [
    i32 0, label %cleanup.cont95
  ]

cleanup.cont95:                                   ; preds = %cleanup91
  br label %sw.default, !dbg !7785

sw.default:                                       ; preds = %if.end12, %cleanup.cont95
  br label %sw.epilog, !dbg !7786

sw.epilog:                                        ; preds = %sw.default, %sw.bb26, %sw.bb20, %if.end19
  store i32 0, ptr %retval, align 4, !dbg !7787
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup174, !dbg !7787

if.end96:                                         ; preds = %if.end
  %128 = load ptr, ptr %atom.addr, align 8, !dbg !7788, !tbaa !1527
  %min97 = getelementptr inbounds %struct._xmlRegAtom, ptr %128, i32 0, i32 3, !dbg !7790
  %129 = load i32, ptr %min97, align 4, !dbg !7790, !tbaa !2372
  %cmp98 = icmp eq i32 %129, 0, !dbg !7791
  br i1 %cmp98, label %land.lhs.true99, label %if.end116, !dbg !7792

land.lhs.true99:                                  ; preds = %if.end96
  %130 = load ptr, ptr %atom.addr, align 8, !dbg !7793, !tbaa !1527
  %max100 = getelementptr inbounds %struct._xmlRegAtom, ptr %130, i32 0, i32 4, !dbg !7794
  %131 = load i32, ptr %max100, align 8, !dbg !7794, !tbaa !2377
  %cmp101 = icmp eq i32 %131, 0, !dbg !7795
  br i1 %cmp101, label %land.lhs.true102, label %if.end116, !dbg !7796

land.lhs.true102:                                 ; preds = %land.lhs.true99
  %132 = load ptr, ptr %atom.addr, align 8, !dbg !7797, !tbaa !1527
  %quant103 = getelementptr inbounds %struct._xmlRegAtom, ptr %132, i32 0, i32 2, !dbg !7798
  %133 = load i32, ptr %quant103, align 8, !dbg !7798, !tbaa !3993
  %cmp104 = icmp eq i32 %133, 8, !dbg !7799
  br i1 %cmp104, label %if.then105, label %if.end116, !dbg !7800

if.then105:                                       ; preds = %land.lhs.true102
  %134 = load ptr, ptr %to.addr, align 8, !dbg !7801, !tbaa !1527
  %cmp106 = icmp eq ptr %134, null, !dbg !7804
  br i1 %cmp106, label %if.then107, label %if.end114, !dbg !7805

if.then107:                                       ; preds = %if.then105
  %135 = load ptr, ptr %ctxt.addr, align 8, !dbg !7806, !tbaa !1527
  %call108 = call ptr @xmlRegNewState(ptr noundef %135), !dbg !7808
  store ptr %call108, ptr %to.addr, align 8, !dbg !7809, !tbaa !1527
  %136 = load ptr, ptr %to.addr, align 8, !dbg !7810, !tbaa !1527
  %cmp109 = icmp ne ptr %136, null, !dbg !7812
  br i1 %cmp109, label %if.then110, label %if.else112, !dbg !7813

if.then110:                                       ; preds = %if.then107
  %137 = load ptr, ptr %ctxt.addr, align 8, !dbg !7814, !tbaa !1527
  %138 = load ptr, ptr %to.addr, align 8, !dbg !7815, !tbaa !1527
  %call111 = call i32 @xmlRegStatePush(ptr noundef %137, ptr noundef %138), !dbg !7816
  br label %if.end113, !dbg !7816

if.else112:                                       ; preds = %if.then107
  store i32 -1, ptr %retval, align 4, !dbg !7817
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup174, !dbg !7817

if.end113:                                        ; preds = %if.then110
  br label %if.end114, !dbg !7819

if.end114:                                        ; preds = %if.end113, %if.then105
  %139 = load ptr, ptr %ctxt.addr, align 8, !dbg !7820, !tbaa !1527
  %140 = load ptr, ptr %from.addr, align 8, !dbg !7821, !tbaa !1527
  %141 = load ptr, ptr %to.addr, align 8, !dbg !7822, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %139, ptr noundef %140, ptr noundef %141), !dbg !7823
  %142 = load ptr, ptr %to.addr, align 8, !dbg !7824, !tbaa !1527
  %143 = load ptr, ptr %ctxt.addr, align 8, !dbg !7825, !tbaa !1527
  %state115 = getelementptr inbounds %struct._xmlAutomata, ptr %143, i32 0, i32 6, !dbg !7826
  store ptr %142, ptr %state115, align 8, !dbg !7827, !tbaa !4169
  %144 = load ptr, ptr %atom.addr, align 8, !dbg !7828, !tbaa !1527
  call void @xmlRegFreeAtom(ptr noundef %144), !dbg !7829
  store i32 0, ptr %retval, align 4, !dbg !7830
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup174, !dbg !7830

if.end116:                                        ; preds = %land.lhs.true102, %land.lhs.true99, %if.end96
  %145 = load ptr, ptr %to.addr, align 8, !dbg !7831, !tbaa !1527
  %cmp117 = icmp eq ptr %145, null, !dbg !7833
  br i1 %cmp117, label %if.then118, label %if.end125, !dbg !7834

if.then118:                                       ; preds = %if.end116
  %146 = load ptr, ptr %ctxt.addr, align 8, !dbg !7835, !tbaa !1527
  %call119 = call ptr @xmlRegNewState(ptr noundef %146), !dbg !7837
  store ptr %call119, ptr %to.addr, align 8, !dbg !7838, !tbaa !1527
  %147 = load ptr, ptr %to.addr, align 8, !dbg !7839, !tbaa !1527
  %cmp120 = icmp ne ptr %147, null, !dbg !7841
  br i1 %cmp120, label %if.then121, label %if.else123, !dbg !7842

if.then121:                                       ; preds = %if.then118
  %148 = load ptr, ptr %ctxt.addr, align 8, !dbg !7843, !tbaa !1527
  %149 = load ptr, ptr %to.addr, align 8, !dbg !7844, !tbaa !1527
  %call122 = call i32 @xmlRegStatePush(ptr noundef %148, ptr noundef %149), !dbg !7845
  br label %if.end124, !dbg !7845

if.else123:                                       ; preds = %if.then118
  store i32 -1, ptr %retval, align 4, !dbg !7846
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup174, !dbg !7846

if.end124:                                        ; preds = %if.then121
  br label %if.end125, !dbg !7848

if.end125:                                        ; preds = %if.end124, %if.end116
  %150 = load ptr, ptr %to.addr, align 8, !dbg !7849, !tbaa !1527
  store ptr %150, ptr %end, align 8, !dbg !7850, !tbaa !1527
  %151 = load ptr, ptr %atom.addr, align 8, !dbg !7851, !tbaa !1527
  %quant126 = getelementptr inbounds %struct._xmlRegAtom, ptr %151, i32 0, i32 2, !dbg !7852
  %152 = load i32, ptr %quant126, align 8, !dbg !7852, !tbaa !3993
  %cmp127 = icmp eq i32 %152, 4, !dbg !7853
  br i1 %cmp127, label %if.then130, label %lor.lhs.false, !dbg !7854

lor.lhs.false:                                    ; preds = %if.end125
  %153 = load ptr, ptr %atom.addr, align 8, !dbg !7855, !tbaa !1527
  %quant128 = getelementptr inbounds %struct._xmlRegAtom, ptr %153, i32 0, i32 2, !dbg !7856
  %154 = load i32, ptr %quant128, align 8, !dbg !7856, !tbaa !3993
  %cmp129 = icmp eq i32 %154, 5, !dbg !7857
  br i1 %cmp129, label %if.then130, label %if.end140, !dbg !7858

if.then130:                                       ; preds = %lor.lhs.false, %if.end125
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !7859
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !7525, metadata !DIExpression()), !dbg !7860
  %155 = load ptr, ptr %ctxt.addr, align 8, !dbg !7861, !tbaa !1527
  %call131 = call ptr @xmlRegNewState(ptr noundef %155), !dbg !7862
  store ptr %call131, ptr %tmp, align 8, !dbg !7863, !tbaa !1527
  %156 = load ptr, ptr %tmp, align 8, !dbg !7864, !tbaa !1527
  %cmp132 = icmp ne ptr %156, null, !dbg !7866
  br i1 %cmp132, label %if.then133, label %if.else135, !dbg !7867

if.then133:                                       ; preds = %if.then130
  %157 = load ptr, ptr %ctxt.addr, align 8, !dbg !7868, !tbaa !1527
  %158 = load ptr, ptr %tmp, align 8, !dbg !7869, !tbaa !1527
  %call134 = call i32 @xmlRegStatePush(ptr noundef %157, ptr noundef %158), !dbg !7870
  br label %if.end136, !dbg !7870

if.else135:                                       ; preds = %if.then130
  store i32 -1, ptr %retval, align 4, !dbg !7871
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup137, !dbg !7871

if.end136:                                        ; preds = %if.then133
  %159 = load ptr, ptr %ctxt.addr, align 8, !dbg !7873, !tbaa !1527
  %160 = load ptr, ptr %tmp, align 8, !dbg !7874, !tbaa !1527
  %161 = load ptr, ptr %to.addr, align 8, !dbg !7875, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %159, ptr noundef %160, ptr noundef %161), !dbg !7876
  %162 = load ptr, ptr %tmp, align 8, !dbg !7877, !tbaa !1527
  store ptr %162, ptr %to.addr, align 8, !dbg !7878, !tbaa !1527
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7879
  br label %cleanup137, !dbg !7879

cleanup137:                                       ; preds = %if.end136, %if.else135
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !7879
  %cleanup.dest138 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest138, label %cleanup174 [
    i32 0, label %cleanup.cont139
  ]

cleanup.cont139:                                  ; preds = %cleanup137
  br label %if.end140, !dbg !7880

if.end140:                                        ; preds = %cleanup.cont139, %lor.lhs.false
  %163 = load ptr, ptr %ctxt.addr, align 8, !dbg !7881, !tbaa !1527
  %164 = load ptr, ptr %atom.addr, align 8, !dbg !7883, !tbaa !1527
  %call141 = call i32 @xmlRegAtomPush(ptr noundef %163, ptr noundef %164), !dbg !7884
  %cmp142 = icmp slt i32 %call141, 0, !dbg !7885
  br i1 %cmp142, label %if.then143, label %if.end144, !dbg !7886

if.then143:                                       ; preds = %if.end140
  store i32 -1, ptr %retval, align 4, !dbg !7887
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup174, !dbg !7887

if.end144:                                        ; preds = %if.end140
  %165 = load ptr, ptr %atom.addr, align 8, !dbg !7889, !tbaa !1527
  %quant145 = getelementptr inbounds %struct._xmlRegAtom, ptr %165, i32 0, i32 2, !dbg !7891
  %166 = load i32, ptr %quant145, align 8, !dbg !7891, !tbaa !3993
  %cmp146 = icmp eq i32 %166, 8, !dbg !7892
  br i1 %cmp146, label %land.lhs.true147, label %if.end160, !dbg !7893

land.lhs.true147:                                 ; preds = %if.end144
  %167 = load ptr, ptr %atom.addr, align 8, !dbg !7894, !tbaa !1527
  %min148 = getelementptr inbounds %struct._xmlRegAtom, ptr %167, i32 0, i32 3, !dbg !7895
  %168 = load i32, ptr %min148, align 4, !dbg !7895, !tbaa !2372
  %cmp149 = icmp eq i32 %168, 0, !dbg !7896
  br i1 %cmp149, label %land.lhs.true150, label %if.end160, !dbg !7897

land.lhs.true150:                                 ; preds = %land.lhs.true147
  %169 = load ptr, ptr %atom.addr, align 8, !dbg !7898, !tbaa !1527
  %max151 = getelementptr inbounds %struct._xmlRegAtom, ptr %169, i32 0, i32 4, !dbg !7899
  %170 = load i32, ptr %max151, align 8, !dbg !7899, !tbaa !2377
  %cmp152 = icmp sgt i32 %170, 0, !dbg !7900
  br i1 %cmp152, label %if.then153, label %if.end160, !dbg !7901

if.then153:                                       ; preds = %land.lhs.true150
  store i32 1, ptr %nullable, align 4, !dbg !7902, !tbaa !1767
  %171 = load ptr, ptr %atom.addr, align 8, !dbg !7904, !tbaa !1527
  %min154 = getelementptr inbounds %struct._xmlRegAtom, ptr %171, i32 0, i32 3, !dbg !7905
  store i32 1, ptr %min154, align 4, !dbg !7906, !tbaa !2372
  %172 = load ptr, ptr %atom.addr, align 8, !dbg !7907, !tbaa !1527
  %max155 = getelementptr inbounds %struct._xmlRegAtom, ptr %172, i32 0, i32 4, !dbg !7909
  %173 = load i32, ptr %max155, align 8, !dbg !7909, !tbaa !2377
  %cmp156 = icmp eq i32 %173, 1, !dbg !7910
  br i1 %cmp156, label %if.then157, label %if.end159, !dbg !7911

if.then157:                                       ; preds = %if.then153
  %174 = load ptr, ptr %atom.addr, align 8, !dbg !7912, !tbaa !1527
  %quant158 = getelementptr inbounds %struct._xmlRegAtom, ptr %174, i32 0, i32 2, !dbg !7913
  store i32 3, ptr %quant158, align 8, !dbg !7914, !tbaa !3993
  br label %if.end159, !dbg !7912

if.end159:                                        ; preds = %if.then157, %if.then153
  br label %if.end160, !dbg !7915

if.end160:                                        ; preds = %if.end159, %land.lhs.true150, %land.lhs.true147, %if.end144
  %175 = load ptr, ptr %ctxt.addr, align 8, !dbg !7916, !tbaa !1527
  %176 = load ptr, ptr %from.addr, align 8, !dbg !7917, !tbaa !1527
  %177 = load ptr, ptr %atom.addr, align 8, !dbg !7918, !tbaa !1527
  %178 = load ptr, ptr %to.addr, align 8, !dbg !7919, !tbaa !1527
  call void @xmlRegStateAddTrans(ptr noundef %175, ptr noundef %176, ptr noundef %177, ptr noundef %178, i32 noundef -1, i32 noundef -1), !dbg !7920
  %179 = load ptr, ptr %end, align 8, !dbg !7921, !tbaa !1527
  %180 = load ptr, ptr %ctxt.addr, align 8, !dbg !7922, !tbaa !1527
  %state161 = getelementptr inbounds %struct._xmlAutomata, ptr %180, i32 0, i32 6, !dbg !7923
  store ptr %179, ptr %state161, align 8, !dbg !7924, !tbaa !4169
  %181 = load ptr, ptr %atom.addr, align 8, !dbg !7925, !tbaa !1527
  %quant162 = getelementptr inbounds %struct._xmlRegAtom, ptr %181, i32 0, i32 2, !dbg !7926
  %182 = load i32, ptr %quant162, align 8, !dbg !7926, !tbaa !3993
  switch i32 %182, label %sw.default172 [
    i32 3, label %sw.bb163
    i32 4, label %sw.bb165
    i32 5, label %sw.bb167
    i32 8, label %sw.bb169
  ], !dbg !7927

sw.bb163:                                         ; preds = %if.end160
  %183 = load ptr, ptr %atom.addr, align 8, !dbg !7928, !tbaa !1527
  %quant164 = getelementptr inbounds %struct._xmlRegAtom, ptr %183, i32 0, i32 2, !dbg !7930
  store i32 2, ptr %quant164, align 8, !dbg !7931, !tbaa !3993
  %184 = load ptr, ptr %ctxt.addr, align 8, !dbg !7932, !tbaa !1527
  %185 = load ptr, ptr %from.addr, align 8, !dbg !7933, !tbaa !1527
  %186 = load ptr, ptr %to.addr, align 8, !dbg !7934, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %184, ptr noundef %185, ptr noundef %186), !dbg !7935
  br label %sw.epilog173, !dbg !7936

sw.bb165:                                         ; preds = %if.end160
  %187 = load ptr, ptr %atom.addr, align 8, !dbg !7937, !tbaa !1527
  %quant166 = getelementptr inbounds %struct._xmlRegAtom, ptr %187, i32 0, i32 2, !dbg !7938
  store i32 2, ptr %quant166, align 8, !dbg !7939, !tbaa !3993
  %188 = load ptr, ptr %ctxt.addr, align 8, !dbg !7940, !tbaa !1527
  %189 = load ptr, ptr %from.addr, align 8, !dbg !7941, !tbaa !1527
  %190 = load ptr, ptr %to.addr, align 8, !dbg !7942, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %188, ptr noundef %189, ptr noundef %190), !dbg !7943
  %191 = load ptr, ptr %ctxt.addr, align 8, !dbg !7944, !tbaa !1527
  %192 = load ptr, ptr %to.addr, align 8, !dbg !7945, !tbaa !1527
  %193 = load ptr, ptr %atom.addr, align 8, !dbg !7946, !tbaa !1527
  %194 = load ptr, ptr %to.addr, align 8, !dbg !7947, !tbaa !1527
  call void @xmlRegStateAddTrans(ptr noundef %191, ptr noundef %192, ptr noundef %193, ptr noundef %194, i32 noundef -1, i32 noundef -1), !dbg !7948
  br label %sw.epilog173, !dbg !7949

sw.bb167:                                         ; preds = %if.end160
  %195 = load ptr, ptr %atom.addr, align 8, !dbg !7950, !tbaa !1527
  %quant168 = getelementptr inbounds %struct._xmlRegAtom, ptr %195, i32 0, i32 2, !dbg !7951
  store i32 2, ptr %quant168, align 8, !dbg !7952, !tbaa !3993
  %196 = load ptr, ptr %ctxt.addr, align 8, !dbg !7953, !tbaa !1527
  %197 = load ptr, ptr %to.addr, align 8, !dbg !7954, !tbaa !1527
  %198 = load ptr, ptr %atom.addr, align 8, !dbg !7955, !tbaa !1527
  %199 = load ptr, ptr %to.addr, align 8, !dbg !7956, !tbaa !1527
  call void @xmlRegStateAddTrans(ptr noundef %196, ptr noundef %197, ptr noundef %198, ptr noundef %199, i32 noundef -1, i32 noundef -1), !dbg !7957
  br label %sw.epilog173, !dbg !7958

sw.bb169:                                         ; preds = %if.end160
  %200 = load i32, ptr %nullable, align 4, !dbg !7959, !tbaa !1767
  %tobool = icmp ne i32 %200, 0, !dbg !7959
  br i1 %tobool, label %if.then170, label %if.end171, !dbg !7961

if.then170:                                       ; preds = %sw.bb169
  %201 = load ptr, ptr %ctxt.addr, align 8, !dbg !7962, !tbaa !1527
  %202 = load ptr, ptr %from.addr, align 8, !dbg !7963, !tbaa !1527
  %203 = load ptr, ptr %to.addr, align 8, !dbg !7964, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %201, ptr noundef %202, ptr noundef %203), !dbg !7965
  br label %if.end171, !dbg !7965

if.end171:                                        ; preds = %if.then170, %sw.bb169
  br label %sw.epilog173, !dbg !7966

sw.default172:                                    ; preds = %if.end160
  br label %sw.epilog173, !dbg !7967

sw.epilog173:                                     ; preds = %sw.default172, %if.end171, %sw.bb167, %sw.bb165, %sw.bb163
  store i32 0, ptr %retval, align 4, !dbg !7968
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup174, !dbg !7968

cleanup174:                                       ; preds = %sw.epilog173, %if.then143, %cleanup137, %if.else123, %if.end114, %if.else112, %sw.epilog, %cleanup91, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %nullable) #8, !dbg !7969
  call void @llvm.lifetime.end.p0(i64 8, ptr %end) #8, !dbg !7969
  %204 = load i32, ptr %retval, align 4, !dbg !7969
  ret i32 %204, !dbg !7969
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataNewTransition2(ptr noundef %am, ptr noundef %from, ptr noundef %to, ptr noundef %token, ptr noundef %token2, ptr noundef %data) #0 !dbg !7970 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %token.addr = alloca ptr, align 8
  %token2.addr = alloca ptr, align 8
  %data.addr = alloca ptr, align 8
  %atom = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %lenn = alloca i32, align 4
  %lenp = alloca i32, align 4
  %str = alloca ptr, align 8
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !7974, metadata !DIExpression()), !dbg !7986
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !7975, metadata !DIExpression()), !dbg !7987
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !7976, metadata !DIExpression()), !dbg !7988
  store ptr %token, ptr %token.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %token.addr, metadata !7977, metadata !DIExpression()), !dbg !7989
  store ptr %token2, ptr %token2.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %token2.addr, metadata !7978, metadata !DIExpression()), !dbg !7990
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !7979, metadata !DIExpression()), !dbg !7991
  call void @llvm.lifetime.start.p0(i64 8, ptr %atom) #8, !dbg !7992
  tail call void @llvm.dbg.declare(metadata ptr %atom, metadata !7980, metadata !DIExpression()), !dbg !7993
  %0 = load ptr, ptr %am.addr, align 8, !dbg !7994, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !7996
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7997

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %from.addr, align 8, !dbg !7998, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !7999
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !8000

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load ptr, ptr %token.addr, align 8, !dbg !8001, !tbaa !1527
  %cmp3 = icmp eq ptr %2, null, !dbg !8002
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8003

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !8004
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup48, !dbg !8004

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load ptr, ptr %am.addr, align 8, !dbg !8005, !tbaa !1527
  %call = call ptr @xmlRegNewAtom(ptr noundef %3, i32 noundef 5), !dbg !8006
  store ptr %call, ptr %atom, align 8, !dbg !8007, !tbaa !1527
  %4 = load ptr, ptr %atom, align 8, !dbg !8008, !tbaa !1527
  %cmp4 = icmp eq ptr %4, null, !dbg !8010
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !8011

if.then5:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !8012
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup48, !dbg !8012

if.end6:                                          ; preds = %if.end
  %5 = load ptr, ptr %data.addr, align 8, !dbg !8013, !tbaa !1527
  %6 = load ptr, ptr %atom, align 8, !dbg !8014, !tbaa !1527
  %data7 = getelementptr inbounds %struct._xmlRegAtom, ptr %6, i32 0, i32 15, !dbg !8015
  store ptr %5, ptr %data7, align 8, !dbg !8016, !tbaa !2554
  %7 = load ptr, ptr %token2.addr, align 8, !dbg !8017, !tbaa !1527
  %cmp8 = icmp eq ptr %7, null, !dbg !8018
  br i1 %cmp8, label %if.then12, label %lor.lhs.false9, !dbg !8019

lor.lhs.false9:                                   ; preds = %if.end6
  %8 = load ptr, ptr %token2.addr, align 8, !dbg !8020, !tbaa !1527
  %9 = load i8, ptr %8, align 1, !dbg !8021, !tbaa !2932
  %conv = zext i8 %9 to i32, !dbg !8021
  %cmp10 = icmp eq i32 %conv, 0, !dbg !8022
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !8023

if.then12:                                        ; preds = %lor.lhs.false9, %if.end6
  %10 = load ptr, ptr %token.addr, align 8, !dbg !8024, !tbaa !1527
  %call13 = call ptr @xmlStrdup(ptr noundef %10), !dbg !8026
  %11 = load ptr, ptr %atom, align 8, !dbg !8027, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %11, i32 0, i32 5, !dbg !8028
  store ptr %call13, ptr %valuep, align 8, !dbg !8029, !tbaa !2159
  br label %if.end38, !dbg !8030

if.else:                                          ; preds = %lor.lhs.false9
  call void @llvm.lifetime.start.p0(i64 4, ptr %lenn) #8, !dbg !8031
  tail call void @llvm.dbg.declare(metadata ptr %lenn, metadata !7981, metadata !DIExpression()), !dbg !8032
  call void @llvm.lifetime.start.p0(i64 4, ptr %lenp) #8, !dbg !8031
  tail call void @llvm.dbg.declare(metadata ptr %lenp, metadata !7984, metadata !DIExpression()), !dbg !8033
  call void @llvm.lifetime.start.p0(i64 8, ptr %str) #8, !dbg !8034
  tail call void @llvm.dbg.declare(metadata ptr %str, metadata !7985, metadata !DIExpression()), !dbg !8035
  %12 = load ptr, ptr %token2.addr, align 8, !dbg !8036, !tbaa !1527
  %call14 = call i64 @strlen(ptr noundef %12) #9, !dbg !8037
  %conv15 = trunc i64 %call14 to i32, !dbg !8037
  store i32 %conv15, ptr %lenn, align 4, !dbg !8038, !tbaa !1767
  %13 = load ptr, ptr %token.addr, align 8, !dbg !8039, !tbaa !1527
  %call16 = call i64 @strlen(ptr noundef %13) #9, !dbg !8040
  %conv17 = trunc i64 %call16 to i32, !dbg !8040
  store i32 %conv17, ptr %lenp, align 4, !dbg !8041, !tbaa !1767
  %14 = load ptr, ptr @xmlMallocAtomic, align 8, !dbg !8042, !tbaa !1527
  %15 = load i32, ptr %lenn, align 4, !dbg !8043, !tbaa !1767
  %16 = load i32, ptr %lenp, align 4, !dbg !8044, !tbaa !1767
  %add = add nsw i32 %15, %16, !dbg !8045
  %add18 = add nsw i32 %add, 2, !dbg !8046
  %conv19 = sext i32 %add18 to i64, !dbg !8043
  %call20 = call ptr %14(i64 noundef %conv19), !dbg !8042
  store ptr %call20, ptr %str, align 8, !dbg !8047, !tbaa !1527
  %17 = load ptr, ptr %str, align 8, !dbg !8048, !tbaa !1527
  %cmp21 = icmp eq ptr %17, null, !dbg !8050
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !8051

if.then23:                                        ; preds = %if.else
  %18 = load ptr, ptr %atom, align 8, !dbg !8052, !tbaa !1527
  call void @xmlRegFreeAtom(ptr noundef %18), !dbg !8054
  store ptr null, ptr %retval, align 8, !dbg !8055
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8055

if.end24:                                         ; preds = %if.else
  %19 = load ptr, ptr %str, align 8, !dbg !8056, !tbaa !1527
  %arrayidx = getelementptr inbounds i8, ptr %19, i64 0, !dbg !8056
  %20 = load ptr, ptr %token.addr, align 8, !dbg !8057, !tbaa !1527
  %21 = load i32, ptr %lenp, align 4, !dbg !8058, !tbaa !1767
  %conv25 = sext i32 %21 to i64, !dbg !8058
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx, ptr align 1 %20, i64 %conv25, i1 false), !dbg !8059
  %22 = load ptr, ptr %str, align 8, !dbg !8060, !tbaa !1527
  %23 = load i32, ptr %lenp, align 4, !dbg !8061, !tbaa !1767
  %idxprom = sext i32 %23 to i64, !dbg !8060
  %arrayidx26 = getelementptr inbounds i8, ptr %22, i64 %idxprom, !dbg !8060
  store i8 124, ptr %arrayidx26, align 1, !dbg !8062, !tbaa !2932
  %24 = load ptr, ptr %str, align 8, !dbg !8063, !tbaa !1527
  %25 = load i32, ptr %lenp, align 4, !dbg !8064, !tbaa !1767
  %add27 = add nsw i32 %25, 1, !dbg !8065
  %idxprom28 = sext i32 %add27 to i64, !dbg !8063
  %arrayidx29 = getelementptr inbounds i8, ptr %24, i64 %idxprom28, !dbg !8063
  %26 = load ptr, ptr %token2.addr, align 8, !dbg !8066, !tbaa !1527
  %27 = load i32, ptr %lenn, align 4, !dbg !8067, !tbaa !1767
  %conv30 = sext i32 %27 to i64, !dbg !8067
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx29, ptr align 1 %26, i64 %conv30, i1 false), !dbg !8068
  %28 = load ptr, ptr %str, align 8, !dbg !8069, !tbaa !1527
  %29 = load i32, ptr %lenn, align 4, !dbg !8070, !tbaa !1767
  %30 = load i32, ptr %lenp, align 4, !dbg !8071, !tbaa !1767
  %add31 = add nsw i32 %29, %30, !dbg !8072
  %add32 = add nsw i32 %add31, 1, !dbg !8073
  %idxprom33 = sext i32 %add32 to i64, !dbg !8069
  %arrayidx34 = getelementptr inbounds i8, ptr %28, i64 %idxprom33, !dbg !8069
  store i8 0, ptr %arrayidx34, align 1, !dbg !8074, !tbaa !2932
  %31 = load ptr, ptr %str, align 8, !dbg !8075, !tbaa !1527
  %32 = load ptr, ptr %atom, align 8, !dbg !8076, !tbaa !1527
  %valuep35 = getelementptr inbounds %struct._xmlRegAtom, ptr %32, i32 0, i32 5, !dbg !8077
  store ptr %31, ptr %valuep35, align 8, !dbg !8078, !tbaa !2159
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8079
  br label %cleanup, !dbg !8079

cleanup:                                          ; preds = %if.end24, %if.then23
  call void @llvm.lifetime.end.p0(i64 8, ptr %str) #8, !dbg !8079
  call void @llvm.lifetime.end.p0(i64 4, ptr %lenp) #8, !dbg !8079
  call void @llvm.lifetime.end.p0(i64 4, ptr %lenn) #8, !dbg !8079
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup48 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end38

if.end38:                                         ; preds = %cleanup.cont, %if.then12
  %33 = load ptr, ptr %am.addr, align 8, !dbg !8080, !tbaa !1527
  %34 = load ptr, ptr %from.addr, align 8, !dbg !8082, !tbaa !1527
  %35 = load ptr, ptr %to.addr, align 8, !dbg !8083, !tbaa !1527
  %36 = load ptr, ptr %atom, align 8, !dbg !8084, !tbaa !1527
  %call39 = call i32 @xmlFAGenerateTransitions(ptr noundef %33, ptr noundef %34, ptr noundef %35, ptr noundef %36), !dbg !8085
  %cmp40 = icmp slt i32 %call39, 0, !dbg !8086
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !8087

if.then42:                                        ; preds = %if.end38
  %37 = load ptr, ptr %atom, align 8, !dbg !8088, !tbaa !1527
  call void @xmlRegFreeAtom(ptr noundef %37), !dbg !8090
  store ptr null, ptr %retval, align 8, !dbg !8091
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup48, !dbg !8091

if.end43:                                         ; preds = %if.end38
  %38 = load ptr, ptr %to.addr, align 8, !dbg !8092, !tbaa !1527
  %cmp44 = icmp eq ptr %38, null, !dbg !8094
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !8095

if.then46:                                        ; preds = %if.end43
  %39 = load ptr, ptr %am.addr, align 8, !dbg !8096, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %39, i32 0, i32 6, !dbg !8097
  %40 = load ptr, ptr %state, align 8, !dbg !8097, !tbaa !4169
  store ptr %40, ptr %retval, align 8, !dbg !8098
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup48, !dbg !8098

if.end47:                                         ; preds = %if.end43
  %41 = load ptr, ptr %to.addr, align 8, !dbg !8099, !tbaa !1527
  store ptr %41, ptr %retval, align 8, !dbg !8100
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup48, !dbg !8100

cleanup48:                                        ; preds = %if.end47, %if.then46, %if.then42, %cleanup, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %atom) #8, !dbg !8101
  %42 = load ptr, ptr %retval, align 8, !dbg !8101
  ret ptr %42, !dbg !8101
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataNewNegTrans(ptr noundef %am, ptr noundef %from, ptr noundef %to, ptr noundef %token, ptr noundef %token2, ptr noundef %data) #0 !dbg !8102 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %token.addr = alloca ptr, align 8
  %token2.addr = alloca ptr, align 8
  %data.addr = alloca ptr, align 8
  %atom = alloca ptr, align 8
  %err_msg = alloca [200 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %lenn = alloca i32, align 4
  %lenp = alloca i32, align 4
  %str = alloca ptr, align 8
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !8104, metadata !DIExpression()), !dbg !8120
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !8105, metadata !DIExpression()), !dbg !8121
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !8106, metadata !DIExpression()), !dbg !8122
  store ptr %token, ptr %token.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %token.addr, metadata !8107, metadata !DIExpression()), !dbg !8123
  store ptr %token2, ptr %token2.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %token2.addr, metadata !8108, metadata !DIExpression()), !dbg !8124
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !8109, metadata !DIExpression()), !dbg !8125
  call void @llvm.lifetime.start.p0(i64 8, ptr %atom) #8, !dbg !8126
  tail call void @llvm.dbg.declare(metadata ptr %atom, metadata !8110, metadata !DIExpression()), !dbg !8127
  call void @llvm.lifetime.start.p0(i64 200, ptr %err_msg) #8, !dbg !8128
  tail call void @llvm.dbg.declare(metadata ptr %err_msg, metadata !8111, metadata !DIExpression()), !dbg !8129
  %0 = load ptr, ptr %am.addr, align 8, !dbg !8130, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !8132
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8133

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %from.addr, align 8, !dbg !8134, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !8135
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !8136

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load ptr, ptr %token.addr, align 8, !dbg !8137, !tbaa !1527
  %cmp3 = icmp eq ptr %2, null, !dbg !8138
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8139

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !8140
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup53, !dbg !8140

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load ptr, ptr %am.addr, align 8, !dbg !8141, !tbaa !1527
  %call = call ptr @xmlRegNewAtom(ptr noundef %3, i32 noundef 5), !dbg !8142
  store ptr %call, ptr %atom, align 8, !dbg !8143, !tbaa !1527
  %4 = load ptr, ptr %atom, align 8, !dbg !8144, !tbaa !1527
  %cmp4 = icmp eq ptr %4, null, !dbg !8146
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !8147

if.then5:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !8148
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup53, !dbg !8148

if.end6:                                          ; preds = %if.end
  %5 = load ptr, ptr %data.addr, align 8, !dbg !8149, !tbaa !1527
  %6 = load ptr, ptr %atom, align 8, !dbg !8150, !tbaa !1527
  %data7 = getelementptr inbounds %struct._xmlRegAtom, ptr %6, i32 0, i32 15, !dbg !8151
  store ptr %5, ptr %data7, align 8, !dbg !8152, !tbaa !2554
  %7 = load ptr, ptr %atom, align 8, !dbg !8153, !tbaa !1527
  %neg = getelementptr inbounds %struct._xmlRegAtom, ptr %7, i32 0, i32 7, !dbg !8154
  store i32 1, ptr %neg, align 8, !dbg !8155, !tbaa !2323
  %8 = load ptr, ptr %token2.addr, align 8, !dbg !8156, !tbaa !1527
  %cmp8 = icmp eq ptr %8, null, !dbg !8157
  br i1 %cmp8, label %if.then12, label %lor.lhs.false9, !dbg !8158

lor.lhs.false9:                                   ; preds = %if.end6
  %9 = load ptr, ptr %token2.addr, align 8, !dbg !8159, !tbaa !1527
  %10 = load i8, ptr %9, align 1, !dbg !8160, !tbaa !2932
  %conv = zext i8 %10 to i32, !dbg !8160
  %cmp10 = icmp eq i32 %conv, 0, !dbg !8161
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !8162

if.then12:                                        ; preds = %lor.lhs.false9, %if.end6
  %11 = load ptr, ptr %token.addr, align 8, !dbg !8163, !tbaa !1527
  %call13 = call ptr @xmlStrdup(ptr noundef %11), !dbg !8165
  %12 = load ptr, ptr %atom, align 8, !dbg !8166, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %12, i32 0, i32 5, !dbg !8167
  store ptr %call13, ptr %valuep, align 8, !dbg !8168, !tbaa !2159
  br label %if.end38, !dbg !8169

if.else:                                          ; preds = %lor.lhs.false9
  call void @llvm.lifetime.start.p0(i64 4, ptr %lenn) #8, !dbg !8170
  tail call void @llvm.dbg.declare(metadata ptr %lenn, metadata !8115, metadata !DIExpression()), !dbg !8171
  call void @llvm.lifetime.start.p0(i64 4, ptr %lenp) #8, !dbg !8170
  tail call void @llvm.dbg.declare(metadata ptr %lenp, metadata !8118, metadata !DIExpression()), !dbg !8172
  call void @llvm.lifetime.start.p0(i64 8, ptr %str) #8, !dbg !8173
  tail call void @llvm.dbg.declare(metadata ptr %str, metadata !8119, metadata !DIExpression()), !dbg !8174
  %13 = load ptr, ptr %token2.addr, align 8, !dbg !8175, !tbaa !1527
  %call14 = call i64 @strlen(ptr noundef %13) #9, !dbg !8176
  %conv15 = trunc i64 %call14 to i32, !dbg !8176
  store i32 %conv15, ptr %lenn, align 4, !dbg !8177, !tbaa !1767
  %14 = load ptr, ptr %token.addr, align 8, !dbg !8178, !tbaa !1527
  %call16 = call i64 @strlen(ptr noundef %14) #9, !dbg !8179
  %conv17 = trunc i64 %call16 to i32, !dbg !8179
  store i32 %conv17, ptr %lenp, align 4, !dbg !8180, !tbaa !1767
  %15 = load ptr, ptr @xmlMallocAtomic, align 8, !dbg !8181, !tbaa !1527
  %16 = load i32, ptr %lenn, align 4, !dbg !8182, !tbaa !1767
  %17 = load i32, ptr %lenp, align 4, !dbg !8183, !tbaa !1767
  %add = add nsw i32 %16, %17, !dbg !8184
  %add18 = add nsw i32 %add, 2, !dbg !8185
  %conv19 = sext i32 %add18 to i64, !dbg !8182
  %call20 = call ptr %15(i64 noundef %conv19), !dbg !8181
  store ptr %call20, ptr %str, align 8, !dbg !8186, !tbaa !1527
  %18 = load ptr, ptr %str, align 8, !dbg !8187, !tbaa !1527
  %cmp21 = icmp eq ptr %18, null, !dbg !8189
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !8190

if.then23:                                        ; preds = %if.else
  %19 = load ptr, ptr %atom, align 8, !dbg !8191, !tbaa !1527
  call void @xmlRegFreeAtom(ptr noundef %19), !dbg !8193
  store ptr null, ptr %retval, align 8, !dbg !8194
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8194

if.end24:                                         ; preds = %if.else
  %20 = load ptr, ptr %str, align 8, !dbg !8195, !tbaa !1527
  %arrayidx = getelementptr inbounds i8, ptr %20, i64 0, !dbg !8195
  %21 = load ptr, ptr %token.addr, align 8, !dbg !8196, !tbaa !1527
  %22 = load i32, ptr %lenp, align 4, !dbg !8197, !tbaa !1767
  %conv25 = sext i32 %22 to i64, !dbg !8197
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx, ptr align 1 %21, i64 %conv25, i1 false), !dbg !8198
  %23 = load ptr, ptr %str, align 8, !dbg !8199, !tbaa !1527
  %24 = load i32, ptr %lenp, align 4, !dbg !8200, !tbaa !1767
  %idxprom = sext i32 %24 to i64, !dbg !8199
  %arrayidx26 = getelementptr inbounds i8, ptr %23, i64 %idxprom, !dbg !8199
  store i8 124, ptr %arrayidx26, align 1, !dbg !8201, !tbaa !2932
  %25 = load ptr, ptr %str, align 8, !dbg !8202, !tbaa !1527
  %26 = load i32, ptr %lenp, align 4, !dbg !8203, !tbaa !1767
  %add27 = add nsw i32 %26, 1, !dbg !8204
  %idxprom28 = sext i32 %add27 to i64, !dbg !8202
  %arrayidx29 = getelementptr inbounds i8, ptr %25, i64 %idxprom28, !dbg !8202
  %27 = load ptr, ptr %token2.addr, align 8, !dbg !8205, !tbaa !1527
  %28 = load i32, ptr %lenn, align 4, !dbg !8206, !tbaa !1767
  %conv30 = sext i32 %28 to i64, !dbg !8206
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx29, ptr align 1 %27, i64 %conv30, i1 false), !dbg !8207
  %29 = load ptr, ptr %str, align 8, !dbg !8208, !tbaa !1527
  %30 = load i32, ptr %lenn, align 4, !dbg !8209, !tbaa !1767
  %31 = load i32, ptr %lenp, align 4, !dbg !8210, !tbaa !1767
  %add31 = add nsw i32 %30, %31, !dbg !8211
  %add32 = add nsw i32 %add31, 1, !dbg !8212
  %idxprom33 = sext i32 %add32 to i64, !dbg !8208
  %arrayidx34 = getelementptr inbounds i8, ptr %29, i64 %idxprom33, !dbg !8208
  store i8 0, ptr %arrayidx34, align 1, !dbg !8213, !tbaa !2932
  %32 = load ptr, ptr %str, align 8, !dbg !8214, !tbaa !1527
  %33 = load ptr, ptr %atom, align 8, !dbg !8215, !tbaa !1527
  %valuep35 = getelementptr inbounds %struct._xmlRegAtom, ptr %33, i32 0, i32 5, !dbg !8216
  store ptr %32, ptr %valuep35, align 8, !dbg !8217, !tbaa !2159
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8218
  br label %cleanup, !dbg !8218

cleanup:                                          ; preds = %if.end24, %if.then23
  call void @llvm.lifetime.end.p0(i64 8, ptr %str) #8, !dbg !8218
  call void @llvm.lifetime.end.p0(i64 4, ptr %lenp) #8, !dbg !8218
  call void @llvm.lifetime.end.p0(i64 4, ptr %lenn) #8, !dbg !8218
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup53 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end38

if.end38:                                         ; preds = %cleanup.cont, %if.then12
  %arraydecay = getelementptr inbounds [200 x i8], ptr %err_msg, i64 0, i64 0, !dbg !8219
  %34 = load ptr, ptr %atom, align 8, !dbg !8220, !tbaa !1527
  %valuep39 = getelementptr inbounds %struct._xmlRegAtom, ptr %34, i32 0, i32 5, !dbg !8221
  %35 = load ptr, ptr %valuep39, align 8, !dbg !8221, !tbaa !2159
  %call40 = call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef %arraydecay, i64 noundef 199, ptr noundef @.str.11, ptr noundef %35) #8, !dbg !8222
  %arrayidx41 = getelementptr inbounds [200 x i8], ptr %err_msg, i64 0, i64 199, !dbg !8223
  store i8 0, ptr %arrayidx41, align 1, !dbg !8224, !tbaa !2932
  %arraydecay42 = getelementptr inbounds [200 x i8], ptr %err_msg, i64 0, i64 0, !dbg !8225
  %call43 = call ptr @xmlStrdup(ptr noundef %arraydecay42), !dbg !8226
  %36 = load ptr, ptr %atom, align 8, !dbg !8227, !tbaa !1527
  %valuep2 = getelementptr inbounds %struct._xmlRegAtom, ptr %36, i32 0, i32 6, !dbg !8228
  store ptr %call43, ptr %valuep2, align 8, !dbg !8229, !tbaa !3570
  %37 = load ptr, ptr %am.addr, align 8, !dbg !8230, !tbaa !1527
  %38 = load ptr, ptr %from.addr, align 8, !dbg !8232, !tbaa !1527
  %39 = load ptr, ptr %to.addr, align 8, !dbg !8233, !tbaa !1527
  %40 = load ptr, ptr %atom, align 8, !dbg !8234, !tbaa !1527
  %call44 = call i32 @xmlFAGenerateTransitions(ptr noundef %37, ptr noundef %38, ptr noundef %39, ptr noundef %40), !dbg !8235
  %cmp45 = icmp slt i32 %call44, 0, !dbg !8236
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !8237

if.then47:                                        ; preds = %if.end38
  %41 = load ptr, ptr %atom, align 8, !dbg !8238, !tbaa !1527
  call void @xmlRegFreeAtom(ptr noundef %41), !dbg !8240
  store ptr null, ptr %retval, align 8, !dbg !8241
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup53, !dbg !8241

if.end48:                                         ; preds = %if.end38
  %42 = load ptr, ptr %am.addr, align 8, !dbg !8242, !tbaa !1527
  %negs = getelementptr inbounds %struct._xmlAutomata, ptr %42, i32 0, i32 18, !dbg !8243
  %43 = load i32, ptr %negs, align 4, !dbg !8244, !tbaa !4268
  %inc = add nsw i32 %43, 1, !dbg !8244
  store i32 %inc, ptr %negs, align 4, !dbg !8244, !tbaa !4268
  %44 = load ptr, ptr %to.addr, align 8, !dbg !8245, !tbaa !1527
  %cmp49 = icmp eq ptr %44, null, !dbg !8247
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !8248

if.then51:                                        ; preds = %if.end48
  %45 = load ptr, ptr %am.addr, align 8, !dbg !8249, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %45, i32 0, i32 6, !dbg !8250
  %46 = load ptr, ptr %state, align 8, !dbg !8250, !tbaa !4169
  store ptr %46, ptr %retval, align 8, !dbg !8251
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup53, !dbg !8251

if.end52:                                         ; preds = %if.end48
  %47 = load ptr, ptr %to.addr, align 8, !dbg !8252, !tbaa !1527
  store ptr %47, ptr %retval, align 8, !dbg !8253
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup53, !dbg !8253

cleanup53:                                        ; preds = %if.end52, %if.then51, %if.then47, %cleanup, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 200, ptr %err_msg) #8, !dbg !8254
  call void @llvm.lifetime.end.p0(i64 8, ptr %atom) #8, !dbg !8254
  %48 = load ptr, ptr %retval, align 8, !dbg !8254
  ret ptr %48, !dbg !8254
}

; Function Attrs: nounwind
declare !dbg !8255 i32 @snprintf(ptr noundef, i64 noundef, ptr noundef, ...) #6

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataNewCountTrans2(ptr noundef %am, ptr noundef %from, ptr noundef %to, ptr noundef %token, ptr noundef %token2, i32 noundef %min, i32 noundef %max, ptr noundef %data) #0 !dbg !8259 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %token.addr = alloca ptr, align 8
  %token2.addr = alloca ptr, align 8
  %min.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %data.addr = alloca ptr, align 8
  %atom = alloca ptr, align 8
  %counter = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %lenn = alloca i32, align 4
  %lenp = alloca i32, align 4
  %str = alloca ptr, align 8
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !8263, metadata !DIExpression()), !dbg !8278
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !8264, metadata !DIExpression()), !dbg !8279
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !8265, metadata !DIExpression()), !dbg !8280
  store ptr %token, ptr %token.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %token.addr, metadata !8266, metadata !DIExpression()), !dbg !8281
  store ptr %token2, ptr %token2.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %token2.addr, metadata !8267, metadata !DIExpression()), !dbg !8282
  store i32 %min, ptr %min.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %min.addr, metadata !8268, metadata !DIExpression()), !dbg !8283
  store i32 %max, ptr %max.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %max.addr, metadata !8269, metadata !DIExpression()), !dbg !8284
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !8270, metadata !DIExpression()), !dbg !8285
  call void @llvm.lifetime.start.p0(i64 8, ptr %atom) #8, !dbg !8286
  tail call void @llvm.dbg.declare(metadata ptr %atom, metadata !8271, metadata !DIExpression()), !dbg !8287
  call void @llvm.lifetime.start.p0(i64 4, ptr %counter) #8, !dbg !8288
  tail call void @llvm.dbg.declare(metadata ptr %counter, metadata !8272, metadata !DIExpression()), !dbg !8289
  %0 = load ptr, ptr %am.addr, align 8, !dbg !8290, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !8292
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8293

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %from.addr, align 8, !dbg !8294, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !8295
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !8296

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load ptr, ptr %token.addr, align 8, !dbg !8297, !tbaa !1527
  %cmp3 = icmp eq ptr %2, null, !dbg !8298
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8299

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !8300
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup83, !dbg !8300

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load i32, ptr %min.addr, align 4, !dbg !8301, !tbaa !1767
  %cmp4 = icmp slt i32 %3, 0, !dbg !8303
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !8304

if.then5:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !8305
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup83, !dbg !8305

if.end6:                                          ; preds = %if.end
  %4 = load i32, ptr %max.addr, align 4, !dbg !8306, !tbaa !1767
  %5 = load i32, ptr %min.addr, align 4, !dbg !8308, !tbaa !1767
  %cmp7 = icmp slt i32 %4, %5, !dbg !8309
  br i1 %cmp7, label %if.then10, label %lor.lhs.false8, !dbg !8310

lor.lhs.false8:                                   ; preds = %if.end6
  %6 = load i32, ptr %max.addr, align 4, !dbg !8311, !tbaa !1767
  %cmp9 = icmp slt i32 %6, 1, !dbg !8312
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !8313

if.then10:                                        ; preds = %lor.lhs.false8, %if.end6
  store ptr null, ptr %retval, align 8, !dbg !8314
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup83, !dbg !8314

if.end11:                                         ; preds = %lor.lhs.false8
  %7 = load ptr, ptr %am.addr, align 8, !dbg !8315, !tbaa !1527
  %call = call ptr @xmlRegNewAtom(ptr noundef %7, i32 noundef 5), !dbg !8316
  store ptr %call, ptr %atom, align 8, !dbg !8317, !tbaa !1527
  %8 = load ptr, ptr %atom, align 8, !dbg !8318, !tbaa !1527
  %cmp12 = icmp eq ptr %8, null, !dbg !8320
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !8321

if.then13:                                        ; preds = %if.end11
  store ptr null, ptr %retval, align 8, !dbg !8322
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup83, !dbg !8322

if.end14:                                         ; preds = %if.end11
  %9 = load ptr, ptr %token2.addr, align 8, !dbg !8323, !tbaa !1527
  %cmp15 = icmp eq ptr %9, null, !dbg !8324
  br i1 %cmp15, label %if.then19, label %lor.lhs.false16, !dbg !8325

lor.lhs.false16:                                  ; preds = %if.end14
  %10 = load ptr, ptr %token2.addr, align 8, !dbg !8326, !tbaa !1527
  %11 = load i8, ptr %10, align 1, !dbg !8327, !tbaa !2932
  %conv = zext i8 %11 to i32, !dbg !8327
  %cmp17 = icmp eq i32 %conv, 0, !dbg !8328
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !8329

if.then19:                                        ; preds = %lor.lhs.false16, %if.end14
  %12 = load ptr, ptr %token.addr, align 8, !dbg !8330, !tbaa !1527
  %call20 = call ptr @xmlStrdup(ptr noundef %12), !dbg !8332
  %13 = load ptr, ptr %atom, align 8, !dbg !8333, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %13, i32 0, i32 5, !dbg !8334
  store ptr %call20, ptr %valuep, align 8, !dbg !8335, !tbaa !2159
  br label %if.end45, !dbg !8336

if.else:                                          ; preds = %lor.lhs.false16
  call void @llvm.lifetime.start.p0(i64 4, ptr %lenn) #8, !dbg !8337
  tail call void @llvm.dbg.declare(metadata ptr %lenn, metadata !8273, metadata !DIExpression()), !dbg !8338
  call void @llvm.lifetime.start.p0(i64 4, ptr %lenp) #8, !dbg !8337
  tail call void @llvm.dbg.declare(metadata ptr %lenp, metadata !8276, metadata !DIExpression()), !dbg !8339
  call void @llvm.lifetime.start.p0(i64 8, ptr %str) #8, !dbg !8340
  tail call void @llvm.dbg.declare(metadata ptr %str, metadata !8277, metadata !DIExpression()), !dbg !8341
  %14 = load ptr, ptr %token2.addr, align 8, !dbg !8342, !tbaa !1527
  %call21 = call i64 @strlen(ptr noundef %14) #9, !dbg !8343
  %conv22 = trunc i64 %call21 to i32, !dbg !8343
  store i32 %conv22, ptr %lenn, align 4, !dbg !8344, !tbaa !1767
  %15 = load ptr, ptr %token.addr, align 8, !dbg !8345, !tbaa !1527
  %call23 = call i64 @strlen(ptr noundef %15) #9, !dbg !8346
  %conv24 = trunc i64 %call23 to i32, !dbg !8346
  store i32 %conv24, ptr %lenp, align 4, !dbg !8347, !tbaa !1767
  %16 = load ptr, ptr @xmlMallocAtomic, align 8, !dbg !8348, !tbaa !1527
  %17 = load i32, ptr %lenn, align 4, !dbg !8349, !tbaa !1767
  %18 = load i32, ptr %lenp, align 4, !dbg !8350, !tbaa !1767
  %add = add nsw i32 %17, %18, !dbg !8351
  %add25 = add nsw i32 %add, 2, !dbg !8352
  %conv26 = sext i32 %add25 to i64, !dbg !8349
  %call27 = call ptr %16(i64 noundef %conv26), !dbg !8348
  store ptr %call27, ptr %str, align 8, !dbg !8353, !tbaa !1527
  %19 = load ptr, ptr %str, align 8, !dbg !8354, !tbaa !1527
  %cmp28 = icmp eq ptr %19, null, !dbg !8356
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !8357

if.then30:                                        ; preds = %if.else
  %20 = load ptr, ptr %atom, align 8, !dbg !8358, !tbaa !1527
  call void @xmlRegFreeAtom(ptr noundef %20), !dbg !8360
  store ptr null, ptr %retval, align 8, !dbg !8361
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8361

if.end31:                                         ; preds = %if.else
  %21 = load ptr, ptr %str, align 8, !dbg !8362, !tbaa !1527
  %arrayidx = getelementptr inbounds i8, ptr %21, i64 0, !dbg !8362
  %22 = load ptr, ptr %token.addr, align 8, !dbg !8363, !tbaa !1527
  %23 = load i32, ptr %lenp, align 4, !dbg !8364, !tbaa !1767
  %conv32 = sext i32 %23 to i64, !dbg !8364
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx, ptr align 1 %22, i64 %conv32, i1 false), !dbg !8365
  %24 = load ptr, ptr %str, align 8, !dbg !8366, !tbaa !1527
  %25 = load i32, ptr %lenp, align 4, !dbg !8367, !tbaa !1767
  %idxprom = sext i32 %25 to i64, !dbg !8366
  %arrayidx33 = getelementptr inbounds i8, ptr %24, i64 %idxprom, !dbg !8366
  store i8 124, ptr %arrayidx33, align 1, !dbg !8368, !tbaa !2932
  %26 = load ptr, ptr %str, align 8, !dbg !8369, !tbaa !1527
  %27 = load i32, ptr %lenp, align 4, !dbg !8370, !tbaa !1767
  %add34 = add nsw i32 %27, 1, !dbg !8371
  %idxprom35 = sext i32 %add34 to i64, !dbg !8369
  %arrayidx36 = getelementptr inbounds i8, ptr %26, i64 %idxprom35, !dbg !8369
  %28 = load ptr, ptr %token2.addr, align 8, !dbg !8372, !tbaa !1527
  %29 = load i32, ptr %lenn, align 4, !dbg !8373, !tbaa !1767
  %conv37 = sext i32 %29 to i64, !dbg !8373
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx36, ptr align 1 %28, i64 %conv37, i1 false), !dbg !8374
  %30 = load ptr, ptr %str, align 8, !dbg !8375, !tbaa !1527
  %31 = load i32, ptr %lenn, align 4, !dbg !8376, !tbaa !1767
  %32 = load i32, ptr %lenp, align 4, !dbg !8377, !tbaa !1767
  %add38 = add nsw i32 %31, %32, !dbg !8378
  %add39 = add nsw i32 %add38, 1, !dbg !8379
  %idxprom40 = sext i32 %add39 to i64, !dbg !8375
  %arrayidx41 = getelementptr inbounds i8, ptr %30, i64 %idxprom40, !dbg !8375
  store i8 0, ptr %arrayidx41, align 1, !dbg !8380, !tbaa !2932
  %33 = load ptr, ptr %str, align 8, !dbg !8381, !tbaa !1527
  %34 = load ptr, ptr %atom, align 8, !dbg !8382, !tbaa !1527
  %valuep42 = getelementptr inbounds %struct._xmlRegAtom, ptr %34, i32 0, i32 5, !dbg !8383
  store ptr %33, ptr %valuep42, align 8, !dbg !8384, !tbaa !2159
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8385
  br label %cleanup, !dbg !8385

cleanup:                                          ; preds = %if.end31, %if.then30
  call void @llvm.lifetime.end.p0(i64 8, ptr %str) #8, !dbg !8385
  call void @llvm.lifetime.end.p0(i64 4, ptr %lenp) #8, !dbg !8385
  call void @llvm.lifetime.end.p0(i64 4, ptr %lenn) #8, !dbg !8385
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup83 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end45

if.end45:                                         ; preds = %cleanup.cont, %if.then19
  %35 = load ptr, ptr %data.addr, align 8, !dbg !8386, !tbaa !1527
  %36 = load ptr, ptr %atom, align 8, !dbg !8387, !tbaa !1527
  %data46 = getelementptr inbounds %struct._xmlRegAtom, ptr %36, i32 0, i32 15, !dbg !8388
  store ptr %35, ptr %data46, align 8, !dbg !8389, !tbaa !2554
  %37 = load i32, ptr %min.addr, align 4, !dbg !8390, !tbaa !1767
  %cmp47 = icmp eq i32 %37, 0, !dbg !8392
  br i1 %cmp47, label %if.then49, label %if.else51, !dbg !8393

if.then49:                                        ; preds = %if.end45
  %38 = load ptr, ptr %atom, align 8, !dbg !8394, !tbaa !1527
  %min50 = getelementptr inbounds %struct._xmlRegAtom, ptr %38, i32 0, i32 3, !dbg !8395
  store i32 1, ptr %min50, align 4, !dbg !8396, !tbaa !2372
  br label %if.end53, !dbg !8394

if.else51:                                        ; preds = %if.end45
  %39 = load i32, ptr %min.addr, align 4, !dbg !8397, !tbaa !1767
  %40 = load ptr, ptr %atom, align 8, !dbg !8398, !tbaa !1527
  %min52 = getelementptr inbounds %struct._xmlRegAtom, ptr %40, i32 0, i32 3, !dbg !8399
  store i32 %39, ptr %min52, align 4, !dbg !8400, !tbaa !2372
  br label %if.end53

if.end53:                                         ; preds = %if.else51, %if.then49
  %41 = load i32, ptr %max.addr, align 4, !dbg !8401, !tbaa !1767
  %42 = load ptr, ptr %atom, align 8, !dbg !8402, !tbaa !1527
  %max54 = getelementptr inbounds %struct._xmlRegAtom, ptr %42, i32 0, i32 4, !dbg !8403
  store i32 %41, ptr %max54, align 8, !dbg !8404, !tbaa !2377
  %43 = load ptr, ptr %am.addr, align 8, !dbg !8405, !tbaa !1527
  %call55 = call i32 @xmlRegGetCounter(ptr noundef %43), !dbg !8406
  store i32 %call55, ptr %counter, align 4, !dbg !8407, !tbaa !1767
  %44 = load i32, ptr %min.addr, align 4, !dbg !8408, !tbaa !1767
  %45 = load ptr, ptr %am.addr, align 8, !dbg !8409, !tbaa !1527
  %counters = getelementptr inbounds %struct._xmlAutomata, ptr %45, i32 0, i32 16, !dbg !8410
  %46 = load ptr, ptr %counters, align 8, !dbg !8410, !tbaa !4604
  %47 = load i32, ptr %counter, align 4, !dbg !8411, !tbaa !1767
  %idxprom56 = sext i32 %47 to i64, !dbg !8409
  %arrayidx57 = getelementptr inbounds %struct._xmlRegCounter, ptr %46, i64 %idxprom56, !dbg !8409
  %min58 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx57, i32 0, i32 0, !dbg !8412
  store i32 %44, ptr %min58, align 4, !dbg !8413, !tbaa !2170
  %48 = load i32, ptr %max.addr, align 4, !dbg !8414, !tbaa !1767
  %49 = load ptr, ptr %am.addr, align 8, !dbg !8415, !tbaa !1527
  %counters59 = getelementptr inbounds %struct._xmlAutomata, ptr %49, i32 0, i32 16, !dbg !8416
  %50 = load ptr, ptr %counters59, align 8, !dbg !8416, !tbaa !4604
  %51 = load i32, ptr %counter, align 4, !dbg !8417, !tbaa !1767
  %idxprom60 = sext i32 %51 to i64, !dbg !8415
  %arrayidx61 = getelementptr inbounds %struct._xmlRegCounter, ptr %50, i64 %idxprom60, !dbg !8415
  %max62 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx61, i32 0, i32 1, !dbg !8418
  store i32 %48, ptr %max62, align 4, !dbg !8419, !tbaa !2147
  %52 = load ptr, ptr %to.addr, align 8, !dbg !8420, !tbaa !1527
  %cmp63 = icmp eq ptr %52, null, !dbg !8422
  br i1 %cmp63, label %if.then65, label %if.end68, !dbg !8423

if.then65:                                        ; preds = %if.end53
  %53 = load ptr, ptr %am.addr, align 8, !dbg !8424, !tbaa !1527
  %call66 = call ptr @xmlRegNewState(ptr noundef %53), !dbg !8426
  store ptr %call66, ptr %to.addr, align 8, !dbg !8427, !tbaa !1527
  %54 = load ptr, ptr %am.addr, align 8, !dbg !8428, !tbaa !1527
  %55 = load ptr, ptr %to.addr, align 8, !dbg !8429, !tbaa !1527
  %call67 = call i32 @xmlRegStatePush(ptr noundef %54, ptr noundef %55), !dbg !8430
  br label %if.end68, !dbg !8431

if.end68:                                         ; preds = %if.then65, %if.end53
  %56 = load ptr, ptr %am.addr, align 8, !dbg !8432, !tbaa !1527
  %57 = load ptr, ptr %from.addr, align 8, !dbg !8433, !tbaa !1527
  %58 = load ptr, ptr %atom, align 8, !dbg !8434, !tbaa !1527
  %59 = load ptr, ptr %to.addr, align 8, !dbg !8435, !tbaa !1527
  %60 = load i32, ptr %counter, align 4, !dbg !8436, !tbaa !1767
  call void @xmlRegStateAddTrans(ptr noundef %56, ptr noundef %57, ptr noundef %58, ptr noundef %59, i32 noundef %60, i32 noundef -1), !dbg !8437
  %61 = load ptr, ptr %am.addr, align 8, !dbg !8438, !tbaa !1527
  %62 = load ptr, ptr %atom, align 8, !dbg !8439, !tbaa !1527
  %call69 = call i32 @xmlRegAtomPush(ptr noundef %61, ptr noundef %62), !dbg !8440
  %63 = load ptr, ptr %to.addr, align 8, !dbg !8441, !tbaa !1527
  %64 = load ptr, ptr %am.addr, align 8, !dbg !8442, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %64, i32 0, i32 6, !dbg !8443
  store ptr %63, ptr %state, align 8, !dbg !8444, !tbaa !4169
  %65 = load ptr, ptr %to.addr, align 8, !dbg !8445, !tbaa !1527
  %cmp70 = icmp eq ptr %65, null, !dbg !8447
  br i1 %cmp70, label %if.then72, label %if.end74, !dbg !8448

if.then72:                                        ; preds = %if.end68
  %66 = load ptr, ptr %am.addr, align 8, !dbg !8449, !tbaa !1527
  %state73 = getelementptr inbounds %struct._xmlAutomata, ptr %66, i32 0, i32 6, !dbg !8450
  %67 = load ptr, ptr %state73, align 8, !dbg !8450, !tbaa !4169
  store ptr %67, ptr %to.addr, align 8, !dbg !8451, !tbaa !1527
  br label %if.end74, !dbg !8452

if.end74:                                         ; preds = %if.then72, %if.end68
  %68 = load ptr, ptr %to.addr, align 8, !dbg !8453, !tbaa !1527
  %cmp75 = icmp eq ptr %68, null, !dbg !8455
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !8456

if.then77:                                        ; preds = %if.end74
  store ptr null, ptr %retval, align 8, !dbg !8457
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup83, !dbg !8457

if.end78:                                         ; preds = %if.end74
  %69 = load i32, ptr %min.addr, align 4, !dbg !8458, !tbaa !1767
  %cmp79 = icmp eq i32 %69, 0, !dbg !8460
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !8461

if.then81:                                        ; preds = %if.end78
  %70 = load ptr, ptr %am.addr, align 8, !dbg !8462, !tbaa !1527
  %71 = load ptr, ptr %from.addr, align 8, !dbg !8463, !tbaa !1527
  %72 = load ptr, ptr %to.addr, align 8, !dbg !8464, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %70, ptr noundef %71, ptr noundef %72), !dbg !8465
  br label %if.end82, !dbg !8465

if.end82:                                         ; preds = %if.then81, %if.end78
  %73 = load ptr, ptr %to.addr, align 8, !dbg !8466, !tbaa !1527
  store ptr %73, ptr %retval, align 8, !dbg !8467
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup83, !dbg !8467

cleanup83:                                        ; preds = %if.end82, %if.then77, %cleanup, %if.then13, %if.then10, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %counter) #8, !dbg !8468
  call void @llvm.lifetime.end.p0(i64 8, ptr %atom) #8, !dbg !8468
  %74 = load ptr, ptr %retval, align 8, !dbg !8468
  ret ptr %74, !dbg !8468
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlRegGetCounter(ptr noundef %ctxt) #0 !dbg !8469 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !8471, metadata !DIExpression()), !dbg !8476
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !8477, !tbaa !1527
  %maxCounters = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 14, !dbg !8478
  %1 = load i32, ptr %maxCounters, align 8, !dbg !8478, !tbaa !8479
  %cmp = icmp eq i32 %1, 0, !dbg !8480
  br i1 %cmp, label %if.then, label %if.else, !dbg !8481

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !8482, !tbaa !1527
  %maxCounters1 = getelementptr inbounds %struct._xmlAutomata, ptr %2, i32 0, i32 14, !dbg !8484
  store i32 4, ptr %maxCounters1, align 8, !dbg !8485, !tbaa !8479
  %3 = load ptr, ptr @xmlMalloc, align 8, !dbg !8486, !tbaa !1527
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !8487, !tbaa !1527
  %maxCounters2 = getelementptr inbounds %struct._xmlAutomata, ptr %4, i32 0, i32 14, !dbg !8488
  %5 = load i32, ptr %maxCounters2, align 8, !dbg !8488, !tbaa !8479
  %conv = sext i32 %5 to i64, !dbg !8487
  %mul = mul i64 %conv, 8, !dbg !8489
  %call = call ptr %3(i64 noundef %mul), !dbg !8486
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !8490, !tbaa !1527
  %counters = getelementptr inbounds %struct._xmlAutomata, ptr %6, i32 0, i32 16, !dbg !8491
  store ptr %call, ptr %counters, align 8, !dbg !8492, !tbaa !4604
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !8493, !tbaa !1527
  %counters3 = getelementptr inbounds %struct._xmlAutomata, ptr %7, i32 0, i32 16, !dbg !8495
  %8 = load ptr, ptr %counters3, align 8, !dbg !8495, !tbaa !4604
  %cmp4 = icmp eq ptr %8, null, !dbg !8496
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !8497

if.then6:                                         ; preds = %if.then
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !8498, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %9, ptr noundef @.str.135), !dbg !8500
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !8501, !tbaa !1527
  %maxCounters7 = getelementptr inbounds %struct._xmlAutomata, ptr %10, i32 0, i32 14, !dbg !8502
  store i32 0, ptr %maxCounters7, align 8, !dbg !8503, !tbaa !8479
  store i32 -1, ptr %retval, align 4, !dbg !8504
  br label %return, !dbg !8504

if.end:                                           ; preds = %if.then
  br label %if.end26, !dbg !8505

if.else:                                          ; preds = %entry
  %11 = load ptr, ptr %ctxt.addr, align 8, !dbg !8506, !tbaa !1527
  %nbCounters = getelementptr inbounds %struct._xmlAutomata, ptr %11, i32 0, i32 15, !dbg !8507
  %12 = load i32, ptr %nbCounters, align 4, !dbg !8507, !tbaa !5125
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !8508, !tbaa !1527
  %maxCounters8 = getelementptr inbounds %struct._xmlAutomata, ptr %13, i32 0, i32 14, !dbg !8509
  %14 = load i32, ptr %maxCounters8, align 8, !dbg !8509, !tbaa !8479
  %cmp9 = icmp sge i32 %12, %14, !dbg !8510
  br i1 %cmp9, label %if.then11, label %if.end25, !dbg !8511

if.then11:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !8512
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !8472, metadata !DIExpression()), !dbg !8513
  %15 = load ptr, ptr %ctxt.addr, align 8, !dbg !8514, !tbaa !1527
  %maxCounters12 = getelementptr inbounds %struct._xmlAutomata, ptr %15, i32 0, i32 14, !dbg !8515
  %16 = load i32, ptr %maxCounters12, align 8, !dbg !8516, !tbaa !8479
  %mul13 = mul nsw i32 %16, 2, !dbg !8516
  store i32 %mul13, ptr %maxCounters12, align 8, !dbg !8516, !tbaa !8479
  %17 = load ptr, ptr @xmlRealloc, align 8, !dbg !8517, !tbaa !1527
  %18 = load ptr, ptr %ctxt.addr, align 8, !dbg !8518, !tbaa !1527
  %counters14 = getelementptr inbounds %struct._xmlAutomata, ptr %18, i32 0, i32 16, !dbg !8519
  %19 = load ptr, ptr %counters14, align 8, !dbg !8519, !tbaa !4604
  %20 = load ptr, ptr %ctxt.addr, align 8, !dbg !8520, !tbaa !1527
  %maxCounters15 = getelementptr inbounds %struct._xmlAutomata, ptr %20, i32 0, i32 14, !dbg !8521
  %21 = load i32, ptr %maxCounters15, align 8, !dbg !8521, !tbaa !8479
  %conv16 = sext i32 %21 to i64, !dbg !8520
  %mul17 = mul i64 %conv16, 8, !dbg !8522
  %call18 = call ptr %17(ptr noundef %19, i64 noundef %mul17), !dbg !8517
  store ptr %call18, ptr %tmp, align 8, !dbg !8523, !tbaa !1527
  %22 = load ptr, ptr %tmp, align 8, !dbg !8524, !tbaa !1527
  %cmp19 = icmp eq ptr %22, null, !dbg !8526
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !8527

if.then21:                                        ; preds = %if.then11
  %23 = load ptr, ptr %ctxt.addr, align 8, !dbg !8528, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %23, ptr noundef @.str.135), !dbg !8530
  %24 = load ptr, ptr %ctxt.addr, align 8, !dbg !8531, !tbaa !1527
  %maxCounters22 = getelementptr inbounds %struct._xmlAutomata, ptr %24, i32 0, i32 14, !dbg !8532
  %25 = load i32, ptr %maxCounters22, align 8, !dbg !8533, !tbaa !8479
  %div = sdiv i32 %25, 2, !dbg !8533
  store i32 %div, ptr %maxCounters22, align 8, !dbg !8533, !tbaa !8479
  store i32 -1, ptr %retval, align 4, !dbg !8534
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8534

if.end23:                                         ; preds = %if.then11
  %26 = load ptr, ptr %tmp, align 8, !dbg !8535, !tbaa !1527
  %27 = load ptr, ptr %ctxt.addr, align 8, !dbg !8536, !tbaa !1527
  %counters24 = getelementptr inbounds %struct._xmlAutomata, ptr %27, i32 0, i32 16, !dbg !8537
  store ptr %26, ptr %counters24, align 8, !dbg !8538, !tbaa !4604
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8539
  br label %cleanup, !dbg !8539

cleanup:                                          ; preds = %if.end23, %if.then21
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !8539
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end25, !dbg !8540

if.end25:                                         ; preds = %cleanup.cont, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end
  %28 = load ptr, ptr %ctxt.addr, align 8, !dbg !8541, !tbaa !1527
  %counters27 = getelementptr inbounds %struct._xmlAutomata, ptr %28, i32 0, i32 16, !dbg !8542
  %29 = load ptr, ptr %counters27, align 8, !dbg !8542, !tbaa !4604
  %30 = load ptr, ptr %ctxt.addr, align 8, !dbg !8543, !tbaa !1527
  %nbCounters28 = getelementptr inbounds %struct._xmlAutomata, ptr %30, i32 0, i32 15, !dbg !8544
  %31 = load i32, ptr %nbCounters28, align 4, !dbg !8544, !tbaa !5125
  %idxprom = sext i32 %31 to i64, !dbg !8541
  %arrayidx = getelementptr inbounds %struct._xmlRegCounter, ptr %29, i64 %idxprom, !dbg !8541
  %min = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx, i32 0, i32 0, !dbg !8545
  store i32 -1, ptr %min, align 4, !dbg !8546, !tbaa !2170
  %32 = load ptr, ptr %ctxt.addr, align 8, !dbg !8547, !tbaa !1527
  %counters29 = getelementptr inbounds %struct._xmlAutomata, ptr %32, i32 0, i32 16, !dbg !8548
  %33 = load ptr, ptr %counters29, align 8, !dbg !8548, !tbaa !4604
  %34 = load ptr, ptr %ctxt.addr, align 8, !dbg !8549, !tbaa !1527
  %nbCounters30 = getelementptr inbounds %struct._xmlAutomata, ptr %34, i32 0, i32 15, !dbg !8550
  %35 = load i32, ptr %nbCounters30, align 4, !dbg !8550, !tbaa !5125
  %idxprom31 = sext i32 %35 to i64, !dbg !8547
  %arrayidx32 = getelementptr inbounds %struct._xmlRegCounter, ptr %33, i64 %idxprom31, !dbg !8547
  %max = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx32, i32 0, i32 1, !dbg !8551
  store i32 -1, ptr %max, align 4, !dbg !8552, !tbaa !2147
  %36 = load ptr, ptr %ctxt.addr, align 8, !dbg !8553, !tbaa !1527
  %nbCounters33 = getelementptr inbounds %struct._xmlAutomata, ptr %36, i32 0, i32 15, !dbg !8554
  %37 = load i32, ptr %nbCounters33, align 4, !dbg !8555, !tbaa !5125
  %inc = add nsw i32 %37, 1, !dbg !8555
  store i32 %inc, ptr %nbCounters33, align 4, !dbg !8555, !tbaa !5125
  store i32 %37, ptr %retval, align 4, !dbg !8556
  br label %return, !dbg !8556

return:                                           ; preds = %if.end26, %cleanup, %if.then6
  %38 = load i32, ptr %retval, align 4, !dbg !8557
  ret i32 %38, !dbg !8557

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @xmlRegStateAddTrans(ptr noundef %ctxt, ptr noundef %state, ptr noundef %atom, ptr noundef %target, i32 noundef %counter, i32 noundef %count) #0 !dbg !8558 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %state.addr = alloca ptr, align 8
  %atom.addr = alloca ptr, align 8
  %target.addr = alloca ptr, align 8
  %counter.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %nrtrans = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %trans = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !8562, metadata !DIExpression()), !dbg !8577
  store ptr %state, ptr %state.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !8563, metadata !DIExpression()), !dbg !8578
  store ptr %atom, ptr %atom.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom.addr, metadata !8564, metadata !DIExpression()), !dbg !8579
  store ptr %target, ptr %target.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %target.addr, metadata !8565, metadata !DIExpression()), !dbg !8580
  store i32 %counter, ptr %counter.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %counter.addr, metadata !8566, metadata !DIExpression()), !dbg !8581
  store i32 %count, ptr %count.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %count.addr, metadata !8567, metadata !DIExpression()), !dbg !8582
  call void @llvm.lifetime.start.p0(i64 4, ptr %nrtrans) #8, !dbg !8583
  tail call void @llvm.dbg.declare(metadata ptr %nrtrans, metadata !8568, metadata !DIExpression()), !dbg !8584
  %0 = load ptr, ptr %state.addr, align 8, !dbg !8585, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !8587
  br i1 %cmp, label %if.then, label %if.end, !dbg !8588

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !8589, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 2, !dbg !8589
  store i32 1450, ptr %error, align 8, !dbg !8589, !tbaa !1729
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !8589, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %2, ptr noundef @.str.136), !dbg !8589
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup79, !dbg !8591

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %target.addr, align 8, !dbg !8592, !tbaa !1527
  %cmp1 = icmp eq ptr %3, null, !dbg !8594
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !8595

if.then2:                                         ; preds = %if.end
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !8596, !tbaa !1527
  %error3 = getelementptr inbounds %struct._xmlAutomata, ptr %4, i32 0, i32 2, !dbg !8596
  store i32 1450, ptr %error3, align 8, !dbg !8596, !tbaa !1729
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !8596, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %5, ptr noundef @.str.137), !dbg !8596
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup79, !dbg !8598

if.end4:                                          ; preds = %if.end
  %6 = load ptr, ptr %state.addr, align 8, !dbg !8599, !tbaa !1527
  %nbTrans = getelementptr inbounds %struct._xmlAutomataState, ptr %6, i32 0, i32 6, !dbg !8600
  %7 = load i32, ptr %nbTrans, align 8, !dbg !8600, !tbaa !2052
  %sub = sub nsw i32 %7, 1, !dbg !8601
  store i32 %sub, ptr %nrtrans, align 4, !dbg !8602, !tbaa !1767
  br label %for.cond, !dbg !8603

for.cond:                                         ; preds = %for.inc, %if.end4
  %8 = load i32, ptr %nrtrans, align 4, !dbg !8604, !tbaa !1767
  %cmp5 = icmp sge i32 %8, 0, !dbg !8605
  br i1 %cmp5, label %for.body, label %for.end, !dbg !8606

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %trans) #8, !dbg !8607
  tail call void @llvm.dbg.declare(metadata ptr %trans, metadata !8569, metadata !DIExpression()), !dbg !8608
  %9 = load ptr, ptr %state.addr, align 8, !dbg !8609, !tbaa !1527
  %trans6 = getelementptr inbounds %struct._xmlAutomataState, ptr %9, i32 0, i32 7, !dbg !8610
  %10 = load ptr, ptr %trans6, align 8, !dbg !8610, !tbaa !2058
  %11 = load i32, ptr %nrtrans, align 4, !dbg !8611, !tbaa !1767
  %idxprom = sext i32 %11 to i64, !dbg !8609
  %arrayidx = getelementptr inbounds %struct._xmlRegTrans, ptr %10, i64 %idxprom, !dbg !8609
  store ptr %arrayidx, ptr %trans, align 8, !dbg !8608, !tbaa !1527
  %12 = load ptr, ptr %trans, align 8, !dbg !8612, !tbaa !1527
  %atom7 = getelementptr inbounds %struct._xmlRegTrans, ptr %12, i32 0, i32 0, !dbg !8614
  %13 = load ptr, ptr %atom7, align 8, !dbg !8614, !tbaa !2072
  %14 = load ptr, ptr %atom.addr, align 8, !dbg !8615, !tbaa !1527
  %cmp8 = icmp eq ptr %13, %14, !dbg !8616
  br i1 %cmp8, label %land.lhs.true, label %if.end17, !dbg !8617

land.lhs.true:                                    ; preds = %for.body
  %15 = load ptr, ptr %trans, align 8, !dbg !8618, !tbaa !1527
  %to = getelementptr inbounds %struct._xmlRegTrans, ptr %15, i32 0, i32 1, !dbg !8619
  %16 = load i32, ptr %to, align 8, !dbg !8619, !tbaa !2065
  %17 = load ptr, ptr %target.addr, align 8, !dbg !8620, !tbaa !1527
  %no = getelementptr inbounds %struct._xmlAutomataState, ptr %17, i32 0, i32 4, !dbg !8621
  %18 = load i32, ptr %no, align 8, !dbg !8621, !tbaa !4067
  %cmp9 = icmp eq i32 %16, %18, !dbg !8622
  br i1 %cmp9, label %land.lhs.true10, label %if.end17, !dbg !8623

land.lhs.true10:                                  ; preds = %land.lhs.true
  %19 = load ptr, ptr %trans, align 8, !dbg !8624, !tbaa !1527
  %counter11 = getelementptr inbounds %struct._xmlRegTrans, ptr %19, i32 0, i32 2, !dbg !8625
  %20 = load i32, ptr %counter11, align 4, !dbg !8625, !tbaa !2123
  %21 = load i32, ptr %counter.addr, align 4, !dbg !8626, !tbaa !1767
  %cmp12 = icmp eq i32 %20, %21, !dbg !8627
  br i1 %cmp12, label %land.lhs.true13, label %if.end17, !dbg !8628

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %22 = load ptr, ptr %trans, align 8, !dbg !8629, !tbaa !1527
  %count14 = getelementptr inbounds %struct._xmlRegTrans, ptr %22, i32 0, i32 3, !dbg !8630
  %23 = load i32, ptr %count14, align 8, !dbg !8630, !tbaa !2077
  %24 = load i32, ptr %count.addr, align 4, !dbg !8631, !tbaa !1767
  %cmp15 = icmp eq i32 %23, %24, !dbg !8632
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !8633

if.then16:                                        ; preds = %land.lhs.true13
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8634

if.end17:                                         ; preds = %land.lhs.true13, %land.lhs.true10, %land.lhs.true, %for.body
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8636
  br label %cleanup, !dbg !8636

cleanup:                                          ; preds = %if.end17, %if.then16
  call void @llvm.lifetime.end.p0(i64 8, ptr %trans) #8, !dbg !8636
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup79 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !8637

for.inc:                                          ; preds = %cleanup.cont
  %25 = load i32, ptr %nrtrans, align 4, !dbg !8638, !tbaa !1767
  %dec = add nsw i32 %25, -1, !dbg !8638
  store i32 %dec, ptr %nrtrans, align 4, !dbg !8638, !tbaa !1767
  br label %for.cond, !dbg !8639, !llvm.loop !8640

for.end:                                          ; preds = %for.cond
  %26 = load ptr, ptr %state.addr, align 8, !dbg !8642, !tbaa !1527
  %maxTrans = getelementptr inbounds %struct._xmlAutomataState, ptr %26, i32 0, i32 5, !dbg !8643
  %27 = load i32, ptr %maxTrans, align 4, !dbg !8643, !tbaa !8644
  %cmp18 = icmp eq i32 %27, 0, !dbg !8645
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !8646

if.then19:                                        ; preds = %for.end
  %28 = load ptr, ptr %state.addr, align 8, !dbg !8647, !tbaa !1527
  %maxTrans20 = getelementptr inbounds %struct._xmlAutomataState, ptr %28, i32 0, i32 5, !dbg !8649
  store i32 8, ptr %maxTrans20, align 4, !dbg !8650, !tbaa !8644
  %29 = load ptr, ptr @xmlMalloc, align 8, !dbg !8651, !tbaa !1527
  %30 = load ptr, ptr %state.addr, align 8, !dbg !8652, !tbaa !1527
  %maxTrans21 = getelementptr inbounds %struct._xmlAutomataState, ptr %30, i32 0, i32 5, !dbg !8653
  %31 = load i32, ptr %maxTrans21, align 4, !dbg !8653, !tbaa !8644
  %conv = sext i32 %31 to i64, !dbg !8652
  %mul = mul i64 %conv, 24, !dbg !8654
  %call = call ptr %29(i64 noundef %mul), !dbg !8651
  %32 = load ptr, ptr %state.addr, align 8, !dbg !8655, !tbaa !1527
  %trans22 = getelementptr inbounds %struct._xmlAutomataState, ptr %32, i32 0, i32 7, !dbg !8656
  store ptr %call, ptr %trans22, align 8, !dbg !8657, !tbaa !2058
  %33 = load ptr, ptr %state.addr, align 8, !dbg !8658, !tbaa !1527
  %trans23 = getelementptr inbounds %struct._xmlAutomataState, ptr %33, i32 0, i32 7, !dbg !8660
  %34 = load ptr, ptr %trans23, align 8, !dbg !8660, !tbaa !2058
  %cmp24 = icmp eq ptr %34, null, !dbg !8661
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !8662

if.then26:                                        ; preds = %if.then19
  %35 = load ptr, ptr %ctxt.addr, align 8, !dbg !8663, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %35, ptr noundef @.str.138), !dbg !8665
  %36 = load ptr, ptr %state.addr, align 8, !dbg !8666, !tbaa !1527
  %maxTrans27 = getelementptr inbounds %struct._xmlAutomataState, ptr %36, i32 0, i32 5, !dbg !8667
  store i32 0, ptr %maxTrans27, align 4, !dbg !8668, !tbaa !8644
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup79, !dbg !8669

if.end28:                                         ; preds = %if.then19
  br label %if.end51, !dbg !8670

if.else:                                          ; preds = %for.end
  %37 = load ptr, ptr %state.addr, align 8, !dbg !8671, !tbaa !1527
  %nbTrans29 = getelementptr inbounds %struct._xmlAutomataState, ptr %37, i32 0, i32 6, !dbg !8672
  %38 = load i32, ptr %nbTrans29, align 8, !dbg !8672, !tbaa !2052
  %39 = load ptr, ptr %state.addr, align 8, !dbg !8673, !tbaa !1527
  %maxTrans30 = getelementptr inbounds %struct._xmlAutomataState, ptr %39, i32 0, i32 5, !dbg !8674
  %40 = load i32, ptr %maxTrans30, align 4, !dbg !8674, !tbaa !8644
  %cmp31 = icmp sge i32 %38, %40, !dbg !8675
  br i1 %cmp31, label %if.then33, label %if.end50, !dbg !8676

if.then33:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !8677
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !8573, metadata !DIExpression()), !dbg !8678
  %41 = load ptr, ptr %state.addr, align 8, !dbg !8679, !tbaa !1527
  %maxTrans34 = getelementptr inbounds %struct._xmlAutomataState, ptr %41, i32 0, i32 5, !dbg !8680
  %42 = load i32, ptr %maxTrans34, align 4, !dbg !8681, !tbaa !8644
  %mul35 = mul nsw i32 %42, 2, !dbg !8681
  store i32 %mul35, ptr %maxTrans34, align 4, !dbg !8681, !tbaa !8644
  %43 = load ptr, ptr @xmlRealloc, align 8, !dbg !8682, !tbaa !1527
  %44 = load ptr, ptr %state.addr, align 8, !dbg !8683, !tbaa !1527
  %trans36 = getelementptr inbounds %struct._xmlAutomataState, ptr %44, i32 0, i32 7, !dbg !8684
  %45 = load ptr, ptr %trans36, align 8, !dbg !8684, !tbaa !2058
  %46 = load ptr, ptr %state.addr, align 8, !dbg !8685, !tbaa !1527
  %maxTrans37 = getelementptr inbounds %struct._xmlAutomataState, ptr %46, i32 0, i32 5, !dbg !8686
  %47 = load i32, ptr %maxTrans37, align 4, !dbg !8686, !tbaa !8644
  %conv38 = sext i32 %47 to i64, !dbg !8685
  %mul39 = mul i64 %conv38, 24, !dbg !8687
  %call40 = call ptr %43(ptr noundef %45, i64 noundef %mul39), !dbg !8682
  store ptr %call40, ptr %tmp, align 8, !dbg !8688, !tbaa !1527
  %48 = load ptr, ptr %tmp, align 8, !dbg !8689, !tbaa !1527
  %cmp41 = icmp eq ptr %48, null, !dbg !8691
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !8692

if.then43:                                        ; preds = %if.then33
  %49 = load ptr, ptr %ctxt.addr, align 8, !dbg !8693, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %49, ptr noundef @.str.138), !dbg !8695
  %50 = load ptr, ptr %state.addr, align 8, !dbg !8696, !tbaa !1527
  %maxTrans44 = getelementptr inbounds %struct._xmlAutomataState, ptr %50, i32 0, i32 5, !dbg !8697
  %51 = load i32, ptr %maxTrans44, align 4, !dbg !8698, !tbaa !8644
  %div = sdiv i32 %51, 2, !dbg !8698
  store i32 %div, ptr %maxTrans44, align 4, !dbg !8698, !tbaa !8644
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup47, !dbg !8699

if.end45:                                         ; preds = %if.then33
  %52 = load ptr, ptr %tmp, align 8, !dbg !8700, !tbaa !1527
  %53 = load ptr, ptr %state.addr, align 8, !dbg !8701, !tbaa !1527
  %trans46 = getelementptr inbounds %struct._xmlAutomataState, ptr %53, i32 0, i32 7, !dbg !8702
  store ptr %52, ptr %trans46, align 8, !dbg !8703, !tbaa !2058
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8704
  br label %cleanup47, !dbg !8704

cleanup47:                                        ; preds = %if.end45, %if.then43
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !8704
  %cleanup.dest48 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest48, label %cleanup79 [
    i32 0, label %cleanup.cont49
  ]

cleanup.cont49:                                   ; preds = %cleanup47
  br label %if.end50, !dbg !8705

if.end50:                                         ; preds = %cleanup.cont49, %if.else
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end28
  %54 = load ptr, ptr %atom.addr, align 8, !dbg !8706, !tbaa !1527
  %55 = load ptr, ptr %state.addr, align 8, !dbg !8707, !tbaa !1527
  %trans52 = getelementptr inbounds %struct._xmlAutomataState, ptr %55, i32 0, i32 7, !dbg !8708
  %56 = load ptr, ptr %trans52, align 8, !dbg !8708, !tbaa !2058
  %57 = load ptr, ptr %state.addr, align 8, !dbg !8709, !tbaa !1527
  %nbTrans53 = getelementptr inbounds %struct._xmlAutomataState, ptr %57, i32 0, i32 6, !dbg !8710
  %58 = load i32, ptr %nbTrans53, align 8, !dbg !8710, !tbaa !2052
  %idxprom54 = sext i32 %58 to i64, !dbg !8707
  %arrayidx55 = getelementptr inbounds %struct._xmlRegTrans, ptr %56, i64 %idxprom54, !dbg !8707
  %atom56 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx55, i32 0, i32 0, !dbg !8711
  store ptr %54, ptr %atom56, align 8, !dbg !8712, !tbaa !2072
  %59 = load ptr, ptr %target.addr, align 8, !dbg !8713, !tbaa !1527
  %no57 = getelementptr inbounds %struct._xmlAutomataState, ptr %59, i32 0, i32 4, !dbg !8714
  %60 = load i32, ptr %no57, align 8, !dbg !8714, !tbaa !4067
  %61 = load ptr, ptr %state.addr, align 8, !dbg !8715, !tbaa !1527
  %trans58 = getelementptr inbounds %struct._xmlAutomataState, ptr %61, i32 0, i32 7, !dbg !8716
  %62 = load ptr, ptr %trans58, align 8, !dbg !8716, !tbaa !2058
  %63 = load ptr, ptr %state.addr, align 8, !dbg !8717, !tbaa !1527
  %nbTrans59 = getelementptr inbounds %struct._xmlAutomataState, ptr %63, i32 0, i32 6, !dbg !8718
  %64 = load i32, ptr %nbTrans59, align 8, !dbg !8718, !tbaa !2052
  %idxprom60 = sext i32 %64 to i64, !dbg !8715
  %arrayidx61 = getelementptr inbounds %struct._xmlRegTrans, ptr %62, i64 %idxprom60, !dbg !8715
  %to62 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx61, i32 0, i32 1, !dbg !8719
  store i32 %60, ptr %to62, align 8, !dbg !8720, !tbaa !2065
  %65 = load i32, ptr %counter.addr, align 4, !dbg !8721, !tbaa !1767
  %66 = load ptr, ptr %state.addr, align 8, !dbg !8722, !tbaa !1527
  %trans63 = getelementptr inbounds %struct._xmlAutomataState, ptr %66, i32 0, i32 7, !dbg !8723
  %67 = load ptr, ptr %trans63, align 8, !dbg !8723, !tbaa !2058
  %68 = load ptr, ptr %state.addr, align 8, !dbg !8724, !tbaa !1527
  %nbTrans64 = getelementptr inbounds %struct._xmlAutomataState, ptr %68, i32 0, i32 6, !dbg !8725
  %69 = load i32, ptr %nbTrans64, align 8, !dbg !8725, !tbaa !2052
  %idxprom65 = sext i32 %69 to i64, !dbg !8722
  %arrayidx66 = getelementptr inbounds %struct._xmlRegTrans, ptr %67, i64 %idxprom65, !dbg !8722
  %counter67 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx66, i32 0, i32 2, !dbg !8726
  store i32 %65, ptr %counter67, align 4, !dbg !8727, !tbaa !2123
  %70 = load i32, ptr %count.addr, align 4, !dbg !8728, !tbaa !1767
  %71 = load ptr, ptr %state.addr, align 8, !dbg !8729, !tbaa !1527
  %trans68 = getelementptr inbounds %struct._xmlAutomataState, ptr %71, i32 0, i32 7, !dbg !8730
  %72 = load ptr, ptr %trans68, align 8, !dbg !8730, !tbaa !2058
  %73 = load ptr, ptr %state.addr, align 8, !dbg !8731, !tbaa !1527
  %nbTrans69 = getelementptr inbounds %struct._xmlAutomataState, ptr %73, i32 0, i32 6, !dbg !8732
  %74 = load i32, ptr %nbTrans69, align 8, !dbg !8732, !tbaa !2052
  %idxprom70 = sext i32 %74 to i64, !dbg !8729
  %arrayidx71 = getelementptr inbounds %struct._xmlRegTrans, ptr %72, i64 %idxprom70, !dbg !8729
  %count72 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx71, i32 0, i32 3, !dbg !8733
  store i32 %70, ptr %count72, align 8, !dbg !8734, !tbaa !2077
  %75 = load ptr, ptr %state.addr, align 8, !dbg !8735, !tbaa !1527
  %trans73 = getelementptr inbounds %struct._xmlAutomataState, ptr %75, i32 0, i32 7, !dbg !8736
  %76 = load ptr, ptr %trans73, align 8, !dbg !8736, !tbaa !2058
  %77 = load ptr, ptr %state.addr, align 8, !dbg !8737, !tbaa !1527
  %nbTrans74 = getelementptr inbounds %struct._xmlAutomataState, ptr %77, i32 0, i32 6, !dbg !8738
  %78 = load i32, ptr %nbTrans74, align 8, !dbg !8738, !tbaa !2052
  %idxprom75 = sext i32 %78 to i64, !dbg !8735
  %arrayidx76 = getelementptr inbounds %struct._xmlRegTrans, ptr %76, i64 %idxprom75, !dbg !8735
  %nd = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx76, i32 0, i32 4, !dbg !8739
  store i32 0, ptr %nd, align 4, !dbg !8740, !tbaa !6346
  %79 = load ptr, ptr %state.addr, align 8, !dbg !8741, !tbaa !1527
  %nbTrans77 = getelementptr inbounds %struct._xmlAutomataState, ptr %79, i32 0, i32 6, !dbg !8742
  %80 = load i32, ptr %nbTrans77, align 8, !dbg !8743, !tbaa !2052
  %inc = add nsw i32 %80, 1, !dbg !8743
  store i32 %inc, ptr %nbTrans77, align 8, !dbg !8743, !tbaa !2052
  %81 = load ptr, ptr %ctxt.addr, align 8, !dbg !8744, !tbaa !1527
  %82 = load ptr, ptr %target.addr, align 8, !dbg !8745, !tbaa !1527
  %83 = load ptr, ptr %state.addr, align 8, !dbg !8746, !tbaa !1527
  %no78 = getelementptr inbounds %struct._xmlAutomataState, ptr %83, i32 0, i32 4, !dbg !8747
  %84 = load i32, ptr %no78, align 8, !dbg !8747, !tbaa !4067
  call void @xmlRegStateAddTransTo(ptr noundef %81, ptr noundef %82, i32 noundef %84), !dbg !8748
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8749
  br label %cleanup79, !dbg !8749

cleanup79:                                        ; preds = %if.end51, %cleanup47, %if.then26, %cleanup, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %nrtrans) #8, !dbg !8749
  %cleanup.dest80 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest80, label %unreachable [
    i32 0, label %cleanup.cont81
    i32 1, label %cleanup.cont81
  ]

cleanup.cont81:                                   ; preds = %cleanup79, %cleanup79
  ret void, !dbg !8749

unreachable:                                      ; preds = %cleanup79
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlRegAtomPush(ptr noundef %ctxt, ptr noundef %atom) #0 !dbg !8750 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %atom.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !8754, metadata !DIExpression()), !dbg !8760
  store ptr %atom, ptr %atom.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom.addr, metadata !8755, metadata !DIExpression()), !dbg !8761
  %0 = load ptr, ptr %atom.addr, align 8, !dbg !8762, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !8764
  br i1 %cmp, label %if.then, label %if.end, !dbg !8765

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !8766, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 2, !dbg !8766
  store i32 1450, ptr %error, align 8, !dbg !8766, !tbaa !1729
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !8766, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %2, ptr noundef @.str.139), !dbg !8766
  store i32 -1, ptr %retval, align 4, !dbg !8768
  br label %return, !dbg !8768

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !8769, !tbaa !1527
  %maxAtoms = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 8, !dbg !8770
  %4 = load i32, ptr %maxAtoms, align 8, !dbg !8770, !tbaa !8771
  %cmp1 = icmp eq i32 %4, 0, !dbg !8772
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !8773

if.then2:                                         ; preds = %if.end
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !8774, !tbaa !1527
  %maxAtoms3 = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 8, !dbg !8776
  store i32 4, ptr %maxAtoms3, align 8, !dbg !8777, !tbaa !8771
  %6 = load ptr, ptr @xmlMalloc, align 8, !dbg !8778, !tbaa !1527
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !8779, !tbaa !1527
  %maxAtoms4 = getelementptr inbounds %struct._xmlAutomata, ptr %7, i32 0, i32 8, !dbg !8780
  %8 = load i32, ptr %maxAtoms4, align 8, !dbg !8780, !tbaa !8771
  %conv = sext i32 %8 to i64, !dbg !8779
  %mul = mul i64 %conv, 8, !dbg !8781
  %call = call ptr %6(i64 noundef %mul), !dbg !8778
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !8782, !tbaa !1527
  %atoms = getelementptr inbounds %struct._xmlAutomata, ptr %9, i32 0, i32 10, !dbg !8783
  store ptr %call, ptr %atoms, align 8, !dbg !8784, !tbaa !4575
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !8785, !tbaa !1527
  %atoms5 = getelementptr inbounds %struct._xmlAutomata, ptr %10, i32 0, i32 10, !dbg !8787
  %11 = load ptr, ptr %atoms5, align 8, !dbg !8787, !tbaa !4575
  %cmp6 = icmp eq ptr %11, null, !dbg !8788
  br i1 %cmp6, label %if.then8, label %if.end10, !dbg !8789

if.then8:                                         ; preds = %if.then2
  %12 = load ptr, ptr %ctxt.addr, align 8, !dbg !8790, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %12, ptr noundef @.str.140), !dbg !8792
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !8793, !tbaa !1527
  %maxAtoms9 = getelementptr inbounds %struct._xmlAutomata, ptr %13, i32 0, i32 8, !dbg !8794
  store i32 0, ptr %maxAtoms9, align 8, !dbg !8795, !tbaa !8771
  store i32 -1, ptr %retval, align 4, !dbg !8796
  br label %return, !dbg !8796

if.end10:                                         ; preds = %if.then2
  br label %if.end29, !dbg !8797

if.else:                                          ; preds = %if.end
  %14 = load ptr, ptr %ctxt.addr, align 8, !dbg !8798, !tbaa !1527
  %nbAtoms = getelementptr inbounds %struct._xmlAutomata, ptr %14, i32 0, i32 9, !dbg !8799
  %15 = load i32, ptr %nbAtoms, align 4, !dbg !8799, !tbaa !4586
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !8800, !tbaa !1527
  %maxAtoms11 = getelementptr inbounds %struct._xmlAutomata, ptr %16, i32 0, i32 8, !dbg !8801
  %17 = load i32, ptr %maxAtoms11, align 8, !dbg !8801, !tbaa !8771
  %cmp12 = icmp sge i32 %15, %17, !dbg !8802
  br i1 %cmp12, label %if.then14, label %if.end28, !dbg !8803

if.then14:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !8804
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !8756, metadata !DIExpression()), !dbg !8805
  %18 = load ptr, ptr %ctxt.addr, align 8, !dbg !8806, !tbaa !1527
  %maxAtoms15 = getelementptr inbounds %struct._xmlAutomata, ptr %18, i32 0, i32 8, !dbg !8807
  %19 = load i32, ptr %maxAtoms15, align 8, !dbg !8808, !tbaa !8771
  %mul16 = mul nsw i32 %19, 2, !dbg !8808
  store i32 %mul16, ptr %maxAtoms15, align 8, !dbg !8808, !tbaa !8771
  %20 = load ptr, ptr @xmlRealloc, align 8, !dbg !8809, !tbaa !1527
  %21 = load ptr, ptr %ctxt.addr, align 8, !dbg !8810, !tbaa !1527
  %atoms17 = getelementptr inbounds %struct._xmlAutomata, ptr %21, i32 0, i32 10, !dbg !8811
  %22 = load ptr, ptr %atoms17, align 8, !dbg !8811, !tbaa !4575
  %23 = load ptr, ptr %ctxt.addr, align 8, !dbg !8812, !tbaa !1527
  %maxAtoms18 = getelementptr inbounds %struct._xmlAutomata, ptr %23, i32 0, i32 8, !dbg !8813
  %24 = load i32, ptr %maxAtoms18, align 8, !dbg !8813, !tbaa !8771
  %conv19 = sext i32 %24 to i64, !dbg !8812
  %mul20 = mul i64 %conv19, 8, !dbg !8814
  %call21 = call ptr %20(ptr noundef %22, i64 noundef %mul20), !dbg !8809
  store ptr %call21, ptr %tmp, align 8, !dbg !8815, !tbaa !1527
  %25 = load ptr, ptr %tmp, align 8, !dbg !8816, !tbaa !1527
  %cmp22 = icmp eq ptr %25, null, !dbg !8818
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !8819

if.then24:                                        ; preds = %if.then14
  %26 = load ptr, ptr %ctxt.addr, align 8, !dbg !8820, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %26, ptr noundef @.str.135), !dbg !8822
  %27 = load ptr, ptr %ctxt.addr, align 8, !dbg !8823, !tbaa !1527
  %maxAtoms25 = getelementptr inbounds %struct._xmlAutomata, ptr %27, i32 0, i32 8, !dbg !8824
  %28 = load i32, ptr %maxAtoms25, align 8, !dbg !8825, !tbaa !8771
  %div = sdiv i32 %28, 2, !dbg !8825
  store i32 %div, ptr %maxAtoms25, align 8, !dbg !8825, !tbaa !8771
  store i32 -1, ptr %retval, align 4, !dbg !8826
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8826

if.end26:                                         ; preds = %if.then14
  %29 = load ptr, ptr %tmp, align 8, !dbg !8827, !tbaa !1527
  %30 = load ptr, ptr %ctxt.addr, align 8, !dbg !8828, !tbaa !1527
  %atoms27 = getelementptr inbounds %struct._xmlAutomata, ptr %30, i32 0, i32 10, !dbg !8829
  store ptr %29, ptr %atoms27, align 8, !dbg !8830, !tbaa !4575
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !8831
  br label %cleanup, !dbg !8831

cleanup:                                          ; preds = %if.end26, %if.then24
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !8831
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end28, !dbg !8832

if.end28:                                         ; preds = %cleanup.cont, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end10
  %31 = load ptr, ptr %ctxt.addr, align 8, !dbg !8833, !tbaa !1527
  %nbAtoms30 = getelementptr inbounds %struct._xmlAutomata, ptr %31, i32 0, i32 9, !dbg !8834
  %32 = load i32, ptr %nbAtoms30, align 4, !dbg !8834, !tbaa !4586
  %33 = load ptr, ptr %atom.addr, align 8, !dbg !8835, !tbaa !1527
  %no = getelementptr inbounds %struct._xmlRegAtom, ptr %33, i32 0, i32 0, !dbg !8836
  store i32 %32, ptr %no, align 8, !dbg !8837, !tbaa !5514
  %34 = load ptr, ptr %atom.addr, align 8, !dbg !8838, !tbaa !1527
  %35 = load ptr, ptr %ctxt.addr, align 8, !dbg !8839, !tbaa !1527
  %atoms31 = getelementptr inbounds %struct._xmlAutomata, ptr %35, i32 0, i32 10, !dbg !8840
  %36 = load ptr, ptr %atoms31, align 8, !dbg !8840, !tbaa !4575
  %37 = load ptr, ptr %ctxt.addr, align 8, !dbg !8841, !tbaa !1527
  %nbAtoms32 = getelementptr inbounds %struct._xmlAutomata, ptr %37, i32 0, i32 9, !dbg !8842
  %38 = load i32, ptr %nbAtoms32, align 4, !dbg !8843, !tbaa !4586
  %inc = add nsw i32 %38, 1, !dbg !8843
  store i32 %inc, ptr %nbAtoms32, align 4, !dbg !8843, !tbaa !4586
  %idxprom = sext i32 %38 to i64, !dbg !8839
  %arrayidx = getelementptr inbounds ptr, ptr %36, i64 %idxprom, !dbg !8839
  store ptr %34, ptr %arrayidx, align 8, !dbg !8844, !tbaa !1527
  store i32 0, ptr %retval, align 4, !dbg !8845
  br label %return, !dbg !8845

return:                                           ; preds = %if.end29, %cleanup, %if.then8, %if.then
  %39 = load i32, ptr %retval, align 4, !dbg !8846
  ret i32 %39, !dbg !8846

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAGenerateEpsilonTransition(ptr noundef %ctxt, ptr noundef %from, ptr noundef %to) #0 !dbg !8847 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !8851, metadata !DIExpression()), !dbg !8854
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !8852, metadata !DIExpression()), !dbg !8855
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !8853, metadata !DIExpression()), !dbg !8856
  %0 = load ptr, ptr %to.addr, align 8, !dbg !8857, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !8859
  br i1 %cmp, label %if.then, label %if.end, !dbg !8860

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !8861, !tbaa !1527
  %call = call ptr @xmlRegNewState(ptr noundef %1), !dbg !8863
  store ptr %call, ptr %to.addr, align 8, !dbg !8864, !tbaa !1527
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !8865, !tbaa !1527
  %3 = load ptr, ptr %to.addr, align 8, !dbg !8866, !tbaa !1527
  %call1 = call i32 @xmlRegStatePush(ptr noundef %2, ptr noundef %3), !dbg !8867
  %4 = load ptr, ptr %to.addr, align 8, !dbg !8868, !tbaa !1527
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !8869, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 6, !dbg !8870
  store ptr %4, ptr %state, align 8, !dbg !8871, !tbaa !4169
  br label %if.end, !dbg !8872

if.end:                                           ; preds = %if.then, %entry
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !8873, !tbaa !1527
  %7 = load ptr, ptr %from.addr, align 8, !dbg !8874, !tbaa !1527
  %8 = load ptr, ptr %to.addr, align 8, !dbg !8875, !tbaa !1527
  call void @xmlRegStateAddTrans(ptr noundef %6, ptr noundef %7, ptr noundef null, ptr noundef %8, i32 noundef -1, i32 noundef -1), !dbg !8876
  ret void, !dbg !8877
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataNewCountTrans(ptr noundef %am, ptr noundef %from, ptr noundef %to, ptr noundef %token, i32 noundef %min, i32 noundef %max, ptr noundef %data) #0 !dbg !8878 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %token.addr = alloca ptr, align 8
  %min.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %data.addr = alloca ptr, align 8
  %atom = alloca ptr, align 8
  %counter = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !8882, metadata !DIExpression()), !dbg !8891
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !8883, metadata !DIExpression()), !dbg !8892
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !8884, metadata !DIExpression()), !dbg !8893
  store ptr %token, ptr %token.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %token.addr, metadata !8885, metadata !DIExpression()), !dbg !8894
  store i32 %min, ptr %min.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %min.addr, metadata !8886, metadata !DIExpression()), !dbg !8895
  store i32 %max, ptr %max.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %max.addr, metadata !8887, metadata !DIExpression()), !dbg !8896
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !8888, metadata !DIExpression()), !dbg !8897
  call void @llvm.lifetime.start.p0(i64 8, ptr %atom) #8, !dbg !8898
  tail call void @llvm.dbg.declare(metadata ptr %atom, metadata !8889, metadata !DIExpression()), !dbg !8899
  call void @llvm.lifetime.start.p0(i64 4, ptr %counter) #8, !dbg !8900
  tail call void @llvm.dbg.declare(metadata ptr %counter, metadata !8890, metadata !DIExpression()), !dbg !8901
  %0 = load ptr, ptr %am.addr, align 8, !dbg !8902, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !8904
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8905

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %from.addr, align 8, !dbg !8906, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !8907
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !8908

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load ptr, ptr %token.addr, align 8, !dbg !8909, !tbaa !1527
  %cmp3 = icmp eq ptr %2, null, !dbg !8910
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8911

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !8912
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8912

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load i32, ptr %min.addr, align 4, !dbg !8913, !tbaa !1767
  %cmp4 = icmp slt i32 %3, 0, !dbg !8915
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !8916

if.then5:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !8917
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8917

if.end6:                                          ; preds = %if.end
  %4 = load i32, ptr %max.addr, align 4, !dbg !8918, !tbaa !1767
  %5 = load i32, ptr %min.addr, align 4, !dbg !8920, !tbaa !1767
  %cmp7 = icmp slt i32 %4, %5, !dbg !8921
  br i1 %cmp7, label %if.then10, label %lor.lhs.false8, !dbg !8922

lor.lhs.false8:                                   ; preds = %if.end6
  %6 = load i32, ptr %max.addr, align 4, !dbg !8923, !tbaa !1767
  %cmp9 = icmp slt i32 %6, 1, !dbg !8924
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !8925

if.then10:                                        ; preds = %lor.lhs.false8, %if.end6
  store ptr null, ptr %retval, align 8, !dbg !8926
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8926

if.end11:                                         ; preds = %lor.lhs.false8
  %7 = load ptr, ptr %am.addr, align 8, !dbg !8927, !tbaa !1527
  %call = call ptr @xmlRegNewAtom(ptr noundef %7, i32 noundef 5), !dbg !8928
  store ptr %call, ptr %atom, align 8, !dbg !8929, !tbaa !1527
  %8 = load ptr, ptr %atom, align 8, !dbg !8930, !tbaa !1527
  %cmp12 = icmp eq ptr %8, null, !dbg !8932
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !8933

if.then13:                                        ; preds = %if.end11
  store ptr null, ptr %retval, align 8, !dbg !8934
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !8934

if.end14:                                         ; preds = %if.end11
  %9 = load ptr, ptr %token.addr, align 8, !dbg !8935, !tbaa !1527
  %call15 = call ptr @xmlStrdup(ptr noundef %9), !dbg !8936
  %10 = load ptr, ptr %atom, align 8, !dbg !8937, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %10, i32 0, i32 5, !dbg !8938
  store ptr %call15, ptr %valuep, align 8, !dbg !8939, !tbaa !2159
  %11 = load ptr, ptr %data.addr, align 8, !dbg !8940, !tbaa !1527
  %12 = load ptr, ptr %atom, align 8, !dbg !8941, !tbaa !1527
  %data16 = getelementptr inbounds %struct._xmlRegAtom, ptr %12, i32 0, i32 15, !dbg !8942
  store ptr %11, ptr %data16, align 8, !dbg !8943, !tbaa !2554
  %13 = load i32, ptr %min.addr, align 4, !dbg !8944, !tbaa !1767
  %cmp17 = icmp eq i32 %13, 0, !dbg !8946
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !8947

if.then18:                                        ; preds = %if.end14
  %14 = load ptr, ptr %atom, align 8, !dbg !8948, !tbaa !1527
  %min19 = getelementptr inbounds %struct._xmlRegAtom, ptr %14, i32 0, i32 3, !dbg !8949
  store i32 1, ptr %min19, align 4, !dbg !8950, !tbaa !2372
  br label %if.end21, !dbg !8948

if.else:                                          ; preds = %if.end14
  %15 = load i32, ptr %min.addr, align 4, !dbg !8951, !tbaa !1767
  %16 = load ptr, ptr %atom, align 8, !dbg !8952, !tbaa !1527
  %min20 = getelementptr inbounds %struct._xmlRegAtom, ptr %16, i32 0, i32 3, !dbg !8953
  store i32 %15, ptr %min20, align 4, !dbg !8954, !tbaa !2372
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then18
  %17 = load i32, ptr %max.addr, align 4, !dbg !8955, !tbaa !1767
  %18 = load ptr, ptr %atom, align 8, !dbg !8956, !tbaa !1527
  %max22 = getelementptr inbounds %struct._xmlRegAtom, ptr %18, i32 0, i32 4, !dbg !8957
  store i32 %17, ptr %max22, align 8, !dbg !8958, !tbaa !2377
  %19 = load ptr, ptr %am.addr, align 8, !dbg !8959, !tbaa !1527
  %call23 = call i32 @xmlRegGetCounter(ptr noundef %19), !dbg !8960
  store i32 %call23, ptr %counter, align 4, !dbg !8961, !tbaa !1767
  %20 = load i32, ptr %min.addr, align 4, !dbg !8962, !tbaa !1767
  %21 = load ptr, ptr %am.addr, align 8, !dbg !8963, !tbaa !1527
  %counters = getelementptr inbounds %struct._xmlAutomata, ptr %21, i32 0, i32 16, !dbg !8964
  %22 = load ptr, ptr %counters, align 8, !dbg !8964, !tbaa !4604
  %23 = load i32, ptr %counter, align 4, !dbg !8965, !tbaa !1767
  %idxprom = sext i32 %23 to i64, !dbg !8963
  %arrayidx = getelementptr inbounds %struct._xmlRegCounter, ptr %22, i64 %idxprom, !dbg !8963
  %min24 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx, i32 0, i32 0, !dbg !8966
  store i32 %20, ptr %min24, align 4, !dbg !8967, !tbaa !2170
  %24 = load i32, ptr %max.addr, align 4, !dbg !8968, !tbaa !1767
  %25 = load ptr, ptr %am.addr, align 8, !dbg !8969, !tbaa !1527
  %counters25 = getelementptr inbounds %struct._xmlAutomata, ptr %25, i32 0, i32 16, !dbg !8970
  %26 = load ptr, ptr %counters25, align 8, !dbg !8970, !tbaa !4604
  %27 = load i32, ptr %counter, align 4, !dbg !8971, !tbaa !1767
  %idxprom26 = sext i32 %27 to i64, !dbg !8969
  %arrayidx27 = getelementptr inbounds %struct._xmlRegCounter, ptr %26, i64 %idxprom26, !dbg !8969
  %max28 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx27, i32 0, i32 1, !dbg !8972
  store i32 %24, ptr %max28, align 4, !dbg !8973, !tbaa !2147
  %28 = load ptr, ptr %to.addr, align 8, !dbg !8974, !tbaa !1527
  %cmp29 = icmp eq ptr %28, null, !dbg !8976
  br i1 %cmp29, label %if.then30, label %if.end33, !dbg !8977

if.then30:                                        ; preds = %if.end21
  %29 = load ptr, ptr %am.addr, align 8, !dbg !8978, !tbaa !1527
  %call31 = call ptr @xmlRegNewState(ptr noundef %29), !dbg !8980
  store ptr %call31, ptr %to.addr, align 8, !dbg !8981, !tbaa !1527
  %30 = load ptr, ptr %am.addr, align 8, !dbg !8982, !tbaa !1527
  %31 = load ptr, ptr %to.addr, align 8, !dbg !8983, !tbaa !1527
  %call32 = call i32 @xmlRegStatePush(ptr noundef %30, ptr noundef %31), !dbg !8984
  br label %if.end33, !dbg !8985

if.end33:                                         ; preds = %if.then30, %if.end21
  %32 = load ptr, ptr %am.addr, align 8, !dbg !8986, !tbaa !1527
  %33 = load ptr, ptr %from.addr, align 8, !dbg !8987, !tbaa !1527
  %34 = load ptr, ptr %atom, align 8, !dbg !8988, !tbaa !1527
  %35 = load ptr, ptr %to.addr, align 8, !dbg !8989, !tbaa !1527
  %36 = load i32, ptr %counter, align 4, !dbg !8990, !tbaa !1767
  call void @xmlRegStateAddTrans(ptr noundef %32, ptr noundef %33, ptr noundef %34, ptr noundef %35, i32 noundef %36, i32 noundef -1), !dbg !8991
  %37 = load ptr, ptr %am.addr, align 8, !dbg !8992, !tbaa !1527
  %38 = load ptr, ptr %atom, align 8, !dbg !8993, !tbaa !1527
  %call34 = call i32 @xmlRegAtomPush(ptr noundef %37, ptr noundef %38), !dbg !8994
  %39 = load ptr, ptr %to.addr, align 8, !dbg !8995, !tbaa !1527
  %40 = load ptr, ptr %am.addr, align 8, !dbg !8996, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %40, i32 0, i32 6, !dbg !8997
  store ptr %39, ptr %state, align 8, !dbg !8998, !tbaa !4169
  %41 = load ptr, ptr %to.addr, align 8, !dbg !8999, !tbaa !1527
  %cmp35 = icmp eq ptr %41, null, !dbg !9001
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !9002

if.then36:                                        ; preds = %if.end33
  %42 = load ptr, ptr %am.addr, align 8, !dbg !9003, !tbaa !1527
  %state37 = getelementptr inbounds %struct._xmlAutomata, ptr %42, i32 0, i32 6, !dbg !9004
  %43 = load ptr, ptr %state37, align 8, !dbg !9004, !tbaa !4169
  store ptr %43, ptr %to.addr, align 8, !dbg !9005, !tbaa !1527
  br label %if.end38, !dbg !9006

if.end38:                                         ; preds = %if.then36, %if.end33
  %44 = load ptr, ptr %to.addr, align 8, !dbg !9007, !tbaa !1527
  %cmp39 = icmp eq ptr %44, null, !dbg !9009
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !9010

if.then40:                                        ; preds = %if.end38
  store ptr null, ptr %retval, align 8, !dbg !9011
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9011

if.end41:                                         ; preds = %if.end38
  %45 = load i32, ptr %min.addr, align 4, !dbg !9012, !tbaa !1767
  %cmp42 = icmp eq i32 %45, 0, !dbg !9014
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !9015

if.then43:                                        ; preds = %if.end41
  %46 = load ptr, ptr %am.addr, align 8, !dbg !9016, !tbaa !1527
  %47 = load ptr, ptr %from.addr, align 8, !dbg !9017, !tbaa !1527
  %48 = load ptr, ptr %to.addr, align 8, !dbg !9018, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %46, ptr noundef %47, ptr noundef %48), !dbg !9019
  br label %if.end44, !dbg !9019

if.end44:                                         ; preds = %if.then43, %if.end41
  %49 = load ptr, ptr %to.addr, align 8, !dbg !9020, !tbaa !1527
  store ptr %49, ptr %retval, align 8, !dbg !9021
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9021

cleanup:                                          ; preds = %if.end44, %if.then40, %if.then13, %if.then10, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %counter) #8, !dbg !9022
  call void @llvm.lifetime.end.p0(i64 8, ptr %atom) #8, !dbg !9022
  %50 = load ptr, ptr %retval, align 8, !dbg !9022
  ret ptr %50, !dbg !9022
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataNewOnceTrans2(ptr noundef %am, ptr noundef %from, ptr noundef %to, ptr noundef %token, ptr noundef %token2, i32 noundef %min, i32 noundef %max, ptr noundef %data) #0 !dbg !9023 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %token.addr = alloca ptr, align 8
  %token2.addr = alloca ptr, align 8
  %min.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %data.addr = alloca ptr, align 8
  %atom = alloca ptr, align 8
  %counter = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %lenn = alloca i32, align 4
  %lenp = alloca i32, align 4
  %str = alloca ptr, align 8
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !9025, metadata !DIExpression()), !dbg !9040
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !9026, metadata !DIExpression()), !dbg !9041
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !9027, metadata !DIExpression()), !dbg !9042
  store ptr %token, ptr %token.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %token.addr, metadata !9028, metadata !DIExpression()), !dbg !9043
  store ptr %token2, ptr %token2.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %token2.addr, metadata !9029, metadata !DIExpression()), !dbg !9044
  store i32 %min, ptr %min.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %min.addr, metadata !9030, metadata !DIExpression()), !dbg !9045
  store i32 %max, ptr %max.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %max.addr, metadata !9031, metadata !DIExpression()), !dbg !9046
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !9032, metadata !DIExpression()), !dbg !9047
  call void @llvm.lifetime.start.p0(i64 8, ptr %atom) #8, !dbg !9048
  tail call void @llvm.dbg.declare(metadata ptr %atom, metadata !9033, metadata !DIExpression()), !dbg !9049
  call void @llvm.lifetime.start.p0(i64 4, ptr %counter) #8, !dbg !9050
  tail call void @llvm.dbg.declare(metadata ptr %counter, metadata !9034, metadata !DIExpression()), !dbg !9051
  %0 = load ptr, ptr %am.addr, align 8, !dbg !9052, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9054
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9055

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %from.addr, align 8, !dbg !9056, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !9057
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !9058

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load ptr, ptr %token.addr, align 8, !dbg !9059, !tbaa !1527
  %cmp3 = icmp eq ptr %2, null, !dbg !9060
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9061

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !9062
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup62, !dbg !9062

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load i32, ptr %min.addr, align 4, !dbg !9063, !tbaa !1767
  %cmp4 = icmp slt i32 %3, 1, !dbg !9065
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9066

if.then5:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !9067
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup62, !dbg !9067

if.end6:                                          ; preds = %if.end
  %4 = load i32, ptr %max.addr, align 4, !dbg !9068, !tbaa !1767
  %5 = load i32, ptr %min.addr, align 4, !dbg !9070, !tbaa !1767
  %cmp7 = icmp slt i32 %4, %5, !dbg !9071
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !9072

if.then8:                                         ; preds = %if.end6
  store ptr null, ptr %retval, align 8, !dbg !9073
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup62, !dbg !9073

if.end9:                                          ; preds = %if.end6
  %6 = load ptr, ptr %am.addr, align 8, !dbg !9074, !tbaa !1527
  %call = call ptr @xmlRegNewAtom(ptr noundef %6, i32 noundef 5), !dbg !9075
  store ptr %call, ptr %atom, align 8, !dbg !9076, !tbaa !1527
  %7 = load ptr, ptr %atom, align 8, !dbg !9077, !tbaa !1527
  %cmp10 = icmp eq ptr %7, null, !dbg !9079
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9080

if.then11:                                        ; preds = %if.end9
  store ptr null, ptr %retval, align 8, !dbg !9081
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup62, !dbg !9081

if.end12:                                         ; preds = %if.end9
  %8 = load ptr, ptr %token2.addr, align 8, !dbg !9082, !tbaa !1527
  %cmp13 = icmp eq ptr %8, null, !dbg !9083
  br i1 %cmp13, label %if.then17, label %lor.lhs.false14, !dbg !9084

lor.lhs.false14:                                  ; preds = %if.end12
  %9 = load ptr, ptr %token2.addr, align 8, !dbg !9085, !tbaa !1527
  %10 = load i8, ptr %9, align 1, !dbg !9086, !tbaa !2932
  %conv = zext i8 %10 to i32, !dbg !9086
  %cmp15 = icmp eq i32 %conv, 0, !dbg !9087
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !9088

if.then17:                                        ; preds = %lor.lhs.false14, %if.end12
  %11 = load ptr, ptr %token.addr, align 8, !dbg !9089, !tbaa !1527
  %call18 = call ptr @xmlStrdup(ptr noundef %11), !dbg !9091
  %12 = load ptr, ptr %atom, align 8, !dbg !9092, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %12, i32 0, i32 5, !dbg !9093
  store ptr %call18, ptr %valuep, align 8, !dbg !9094, !tbaa !2159
  br label %if.end43, !dbg !9095

if.else:                                          ; preds = %lor.lhs.false14
  call void @llvm.lifetime.start.p0(i64 4, ptr %lenn) #8, !dbg !9096
  tail call void @llvm.dbg.declare(metadata ptr %lenn, metadata !9035, metadata !DIExpression()), !dbg !9097
  call void @llvm.lifetime.start.p0(i64 4, ptr %lenp) #8, !dbg !9096
  tail call void @llvm.dbg.declare(metadata ptr %lenp, metadata !9038, metadata !DIExpression()), !dbg !9098
  call void @llvm.lifetime.start.p0(i64 8, ptr %str) #8, !dbg !9099
  tail call void @llvm.dbg.declare(metadata ptr %str, metadata !9039, metadata !DIExpression()), !dbg !9100
  %13 = load ptr, ptr %token2.addr, align 8, !dbg !9101, !tbaa !1527
  %call19 = call i64 @strlen(ptr noundef %13) #9, !dbg !9102
  %conv20 = trunc i64 %call19 to i32, !dbg !9102
  store i32 %conv20, ptr %lenn, align 4, !dbg !9103, !tbaa !1767
  %14 = load ptr, ptr %token.addr, align 8, !dbg !9104, !tbaa !1527
  %call21 = call i64 @strlen(ptr noundef %14) #9, !dbg !9105
  %conv22 = trunc i64 %call21 to i32, !dbg !9105
  store i32 %conv22, ptr %lenp, align 4, !dbg !9106, !tbaa !1767
  %15 = load ptr, ptr @xmlMallocAtomic, align 8, !dbg !9107, !tbaa !1527
  %16 = load i32, ptr %lenn, align 4, !dbg !9108, !tbaa !1767
  %17 = load i32, ptr %lenp, align 4, !dbg !9109, !tbaa !1767
  %add = add nsw i32 %16, %17, !dbg !9110
  %add23 = add nsw i32 %add, 2, !dbg !9111
  %conv24 = sext i32 %add23 to i64, !dbg !9108
  %call25 = call ptr %15(i64 noundef %conv24), !dbg !9107
  store ptr %call25, ptr %str, align 8, !dbg !9112, !tbaa !1527
  %18 = load ptr, ptr %str, align 8, !dbg !9113, !tbaa !1527
  %cmp26 = icmp eq ptr %18, null, !dbg !9115
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !9116

if.then28:                                        ; preds = %if.else
  %19 = load ptr, ptr %atom, align 8, !dbg !9117, !tbaa !1527
  call void @xmlRegFreeAtom(ptr noundef %19), !dbg !9119
  store ptr null, ptr %retval, align 8, !dbg !9120
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9120

if.end29:                                         ; preds = %if.else
  %20 = load ptr, ptr %str, align 8, !dbg !9121, !tbaa !1527
  %arrayidx = getelementptr inbounds i8, ptr %20, i64 0, !dbg !9121
  %21 = load ptr, ptr %token.addr, align 8, !dbg !9122, !tbaa !1527
  %22 = load i32, ptr %lenp, align 4, !dbg !9123, !tbaa !1767
  %conv30 = sext i32 %22 to i64, !dbg !9123
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx, ptr align 1 %21, i64 %conv30, i1 false), !dbg !9124
  %23 = load ptr, ptr %str, align 8, !dbg !9125, !tbaa !1527
  %24 = load i32, ptr %lenp, align 4, !dbg !9126, !tbaa !1767
  %idxprom = sext i32 %24 to i64, !dbg !9125
  %arrayidx31 = getelementptr inbounds i8, ptr %23, i64 %idxprom, !dbg !9125
  store i8 124, ptr %arrayidx31, align 1, !dbg !9127, !tbaa !2932
  %25 = load ptr, ptr %str, align 8, !dbg !9128, !tbaa !1527
  %26 = load i32, ptr %lenp, align 4, !dbg !9129, !tbaa !1767
  %add32 = add nsw i32 %26, 1, !dbg !9130
  %idxprom33 = sext i32 %add32 to i64, !dbg !9128
  %arrayidx34 = getelementptr inbounds i8, ptr %25, i64 %idxprom33, !dbg !9128
  %27 = load ptr, ptr %token2.addr, align 8, !dbg !9131, !tbaa !1527
  %28 = load i32, ptr %lenn, align 4, !dbg !9132, !tbaa !1767
  %conv35 = sext i32 %28 to i64, !dbg !9132
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %arrayidx34, ptr align 1 %27, i64 %conv35, i1 false), !dbg !9133
  %29 = load ptr, ptr %str, align 8, !dbg !9134, !tbaa !1527
  %30 = load i32, ptr %lenn, align 4, !dbg !9135, !tbaa !1767
  %31 = load i32, ptr %lenp, align 4, !dbg !9136, !tbaa !1767
  %add36 = add nsw i32 %30, %31, !dbg !9137
  %add37 = add nsw i32 %add36, 1, !dbg !9138
  %idxprom38 = sext i32 %add37 to i64, !dbg !9134
  %arrayidx39 = getelementptr inbounds i8, ptr %29, i64 %idxprom38, !dbg !9134
  store i8 0, ptr %arrayidx39, align 1, !dbg !9139, !tbaa !2932
  %32 = load ptr, ptr %str, align 8, !dbg !9140, !tbaa !1527
  %33 = load ptr, ptr %atom, align 8, !dbg !9141, !tbaa !1527
  %valuep40 = getelementptr inbounds %struct._xmlRegAtom, ptr %33, i32 0, i32 5, !dbg !9142
  store ptr %32, ptr %valuep40, align 8, !dbg !9143, !tbaa !2159
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !9144
  br label %cleanup, !dbg !9144

cleanup:                                          ; preds = %if.end29, %if.then28
  call void @llvm.lifetime.end.p0(i64 8, ptr %str) #8, !dbg !9144
  call void @llvm.lifetime.end.p0(i64 4, ptr %lenp) #8, !dbg !9144
  call void @llvm.lifetime.end.p0(i64 4, ptr %lenn) #8, !dbg !9144
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup62 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end43

if.end43:                                         ; preds = %cleanup.cont, %if.then17
  %34 = load ptr, ptr %data.addr, align 8, !dbg !9145, !tbaa !1527
  %35 = load ptr, ptr %atom, align 8, !dbg !9146, !tbaa !1527
  %data44 = getelementptr inbounds %struct._xmlRegAtom, ptr %35, i32 0, i32 15, !dbg !9147
  store ptr %34, ptr %data44, align 8, !dbg !9148, !tbaa !2554
  %36 = load ptr, ptr %atom, align 8, !dbg !9149, !tbaa !1527
  %quant = getelementptr inbounds %struct._xmlRegAtom, ptr %36, i32 0, i32 2, !dbg !9150
  store i32 6, ptr %quant, align 8, !dbg !9151, !tbaa !3993
  %37 = load i32, ptr %min.addr, align 4, !dbg !9152, !tbaa !1767
  %38 = load ptr, ptr %atom, align 8, !dbg !9153, !tbaa !1527
  %min45 = getelementptr inbounds %struct._xmlRegAtom, ptr %38, i32 0, i32 3, !dbg !9154
  store i32 %37, ptr %min45, align 4, !dbg !9155, !tbaa !2372
  %39 = load i32, ptr %max.addr, align 4, !dbg !9156, !tbaa !1767
  %40 = load ptr, ptr %atom, align 8, !dbg !9157, !tbaa !1527
  %max46 = getelementptr inbounds %struct._xmlRegAtom, ptr %40, i32 0, i32 4, !dbg !9158
  store i32 %39, ptr %max46, align 8, !dbg !9159, !tbaa !2377
  %41 = load ptr, ptr %am.addr, align 8, !dbg !9160, !tbaa !1527
  %call47 = call i32 @xmlRegGetCounter(ptr noundef %41), !dbg !9161
  store i32 %call47, ptr %counter, align 4, !dbg !9162, !tbaa !1767
  %42 = load ptr, ptr %am.addr, align 8, !dbg !9163, !tbaa !1527
  %counters = getelementptr inbounds %struct._xmlAutomata, ptr %42, i32 0, i32 16, !dbg !9164
  %43 = load ptr, ptr %counters, align 8, !dbg !9164, !tbaa !4604
  %44 = load i32, ptr %counter, align 4, !dbg !9165, !tbaa !1767
  %idxprom48 = sext i32 %44 to i64, !dbg !9163
  %arrayidx49 = getelementptr inbounds %struct._xmlRegCounter, ptr %43, i64 %idxprom48, !dbg !9163
  %min50 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx49, i32 0, i32 0, !dbg !9166
  store i32 1, ptr %min50, align 4, !dbg !9167, !tbaa !2170
  %45 = load ptr, ptr %am.addr, align 8, !dbg !9168, !tbaa !1527
  %counters51 = getelementptr inbounds %struct._xmlAutomata, ptr %45, i32 0, i32 16, !dbg !9169
  %46 = load ptr, ptr %counters51, align 8, !dbg !9169, !tbaa !4604
  %47 = load i32, ptr %counter, align 4, !dbg !9170, !tbaa !1767
  %idxprom52 = sext i32 %47 to i64, !dbg !9168
  %arrayidx53 = getelementptr inbounds %struct._xmlRegCounter, ptr %46, i64 %idxprom52, !dbg !9168
  %max54 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx53, i32 0, i32 1, !dbg !9171
  store i32 1, ptr %max54, align 4, !dbg !9172, !tbaa !2147
  %48 = load ptr, ptr %to.addr, align 8, !dbg !9173, !tbaa !1527
  %cmp55 = icmp eq ptr %48, null, !dbg !9175
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !9176

if.then57:                                        ; preds = %if.end43
  %49 = load ptr, ptr %am.addr, align 8, !dbg !9177, !tbaa !1527
  %call58 = call ptr @xmlRegNewState(ptr noundef %49), !dbg !9179
  store ptr %call58, ptr %to.addr, align 8, !dbg !9180, !tbaa !1527
  %50 = load ptr, ptr %am.addr, align 8, !dbg !9181, !tbaa !1527
  %51 = load ptr, ptr %to.addr, align 8, !dbg !9182, !tbaa !1527
  %call59 = call i32 @xmlRegStatePush(ptr noundef %50, ptr noundef %51), !dbg !9183
  br label %if.end60, !dbg !9184

if.end60:                                         ; preds = %if.then57, %if.end43
  %52 = load ptr, ptr %am.addr, align 8, !dbg !9185, !tbaa !1527
  %53 = load ptr, ptr %from.addr, align 8, !dbg !9186, !tbaa !1527
  %54 = load ptr, ptr %atom, align 8, !dbg !9187, !tbaa !1527
  %55 = load ptr, ptr %to.addr, align 8, !dbg !9188, !tbaa !1527
  %56 = load i32, ptr %counter, align 4, !dbg !9189, !tbaa !1767
  call void @xmlRegStateAddTrans(ptr noundef %52, ptr noundef %53, ptr noundef %54, ptr noundef %55, i32 noundef %56, i32 noundef -1), !dbg !9190
  %57 = load ptr, ptr %am.addr, align 8, !dbg !9191, !tbaa !1527
  %58 = load ptr, ptr %atom, align 8, !dbg !9192, !tbaa !1527
  %call61 = call i32 @xmlRegAtomPush(ptr noundef %57, ptr noundef %58), !dbg !9193
  %59 = load ptr, ptr %to.addr, align 8, !dbg !9194, !tbaa !1527
  %60 = load ptr, ptr %am.addr, align 8, !dbg !9195, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %60, i32 0, i32 6, !dbg !9196
  store ptr %59, ptr %state, align 8, !dbg !9197, !tbaa !4169
  %61 = load ptr, ptr %to.addr, align 8, !dbg !9198, !tbaa !1527
  store ptr %61, ptr %retval, align 8, !dbg !9199
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup62, !dbg !9199

cleanup62:                                        ; preds = %if.end60, %cleanup, %if.then11, %if.then8, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %counter) #8, !dbg !9200
  call void @llvm.lifetime.end.p0(i64 8, ptr %atom) #8, !dbg !9200
  %62 = load ptr, ptr %retval, align 8, !dbg !9200
  ret ptr %62, !dbg !9200
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataNewOnceTrans(ptr noundef %am, ptr noundef %from, ptr noundef %to, ptr noundef %token, i32 noundef %min, i32 noundef %max, ptr noundef %data) #0 !dbg !9201 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %token.addr = alloca ptr, align 8
  %min.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %data.addr = alloca ptr, align 8
  %atom = alloca ptr, align 8
  %counter = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !9203, metadata !DIExpression()), !dbg !9212
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !9204, metadata !DIExpression()), !dbg !9213
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !9205, metadata !DIExpression()), !dbg !9214
  store ptr %token, ptr %token.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %token.addr, metadata !9206, metadata !DIExpression()), !dbg !9215
  store i32 %min, ptr %min.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %min.addr, metadata !9207, metadata !DIExpression()), !dbg !9216
  store i32 %max, ptr %max.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %max.addr, metadata !9208, metadata !DIExpression()), !dbg !9217
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !9209, metadata !DIExpression()), !dbg !9218
  call void @llvm.lifetime.start.p0(i64 8, ptr %atom) #8, !dbg !9219
  tail call void @llvm.dbg.declare(metadata ptr %atom, metadata !9210, metadata !DIExpression()), !dbg !9220
  call void @llvm.lifetime.start.p0(i64 4, ptr %counter) #8, !dbg !9221
  tail call void @llvm.dbg.declare(metadata ptr %counter, metadata !9211, metadata !DIExpression()), !dbg !9222
  %0 = load ptr, ptr %am.addr, align 8, !dbg !9223, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9225
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9226

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %from.addr, align 8, !dbg !9227, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !9228
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !9229

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load ptr, ptr %token.addr, align 8, !dbg !9230, !tbaa !1527
  %cmp3 = icmp eq ptr %2, null, !dbg !9231
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9232

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !9233
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9233

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load i32, ptr %min.addr, align 4, !dbg !9234, !tbaa !1767
  %cmp4 = icmp slt i32 %3, 1, !dbg !9236
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9237

if.then5:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !9238
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9238

if.end6:                                          ; preds = %if.end
  %4 = load i32, ptr %max.addr, align 4, !dbg !9239, !tbaa !1767
  %5 = load i32, ptr %min.addr, align 4, !dbg !9241, !tbaa !1767
  %cmp7 = icmp slt i32 %4, %5, !dbg !9242
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !9243

if.then8:                                         ; preds = %if.end6
  store ptr null, ptr %retval, align 8, !dbg !9244
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9244

if.end9:                                          ; preds = %if.end6
  %6 = load ptr, ptr %am.addr, align 8, !dbg !9245, !tbaa !1527
  %call = call ptr @xmlRegNewAtom(ptr noundef %6, i32 noundef 5), !dbg !9246
  store ptr %call, ptr %atom, align 8, !dbg !9247, !tbaa !1527
  %7 = load ptr, ptr %atom, align 8, !dbg !9248, !tbaa !1527
  %cmp10 = icmp eq ptr %7, null, !dbg !9250
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9251

if.then11:                                        ; preds = %if.end9
  store ptr null, ptr %retval, align 8, !dbg !9252
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9252

if.end12:                                         ; preds = %if.end9
  %8 = load ptr, ptr %token.addr, align 8, !dbg !9253, !tbaa !1527
  %call13 = call ptr @xmlStrdup(ptr noundef %8), !dbg !9254
  %9 = load ptr, ptr %atom, align 8, !dbg !9255, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %9, i32 0, i32 5, !dbg !9256
  store ptr %call13, ptr %valuep, align 8, !dbg !9257, !tbaa !2159
  %10 = load ptr, ptr %data.addr, align 8, !dbg !9258, !tbaa !1527
  %11 = load ptr, ptr %atom, align 8, !dbg !9259, !tbaa !1527
  %data14 = getelementptr inbounds %struct._xmlRegAtom, ptr %11, i32 0, i32 15, !dbg !9260
  store ptr %10, ptr %data14, align 8, !dbg !9261, !tbaa !2554
  %12 = load ptr, ptr %atom, align 8, !dbg !9262, !tbaa !1527
  %quant = getelementptr inbounds %struct._xmlRegAtom, ptr %12, i32 0, i32 2, !dbg !9263
  store i32 6, ptr %quant, align 8, !dbg !9264, !tbaa !3993
  %13 = load i32, ptr %min.addr, align 4, !dbg !9265, !tbaa !1767
  %14 = load ptr, ptr %atom, align 8, !dbg !9266, !tbaa !1527
  %min15 = getelementptr inbounds %struct._xmlRegAtom, ptr %14, i32 0, i32 3, !dbg !9267
  store i32 %13, ptr %min15, align 4, !dbg !9268, !tbaa !2372
  %15 = load i32, ptr %max.addr, align 4, !dbg !9269, !tbaa !1767
  %16 = load ptr, ptr %atom, align 8, !dbg !9270, !tbaa !1527
  %max16 = getelementptr inbounds %struct._xmlRegAtom, ptr %16, i32 0, i32 4, !dbg !9271
  store i32 %15, ptr %max16, align 8, !dbg !9272, !tbaa !2377
  %17 = load ptr, ptr %am.addr, align 8, !dbg !9273, !tbaa !1527
  %call17 = call i32 @xmlRegGetCounter(ptr noundef %17), !dbg !9274
  store i32 %call17, ptr %counter, align 4, !dbg !9275, !tbaa !1767
  %18 = load ptr, ptr %am.addr, align 8, !dbg !9276, !tbaa !1527
  %counters = getelementptr inbounds %struct._xmlAutomata, ptr %18, i32 0, i32 16, !dbg !9277
  %19 = load ptr, ptr %counters, align 8, !dbg !9277, !tbaa !4604
  %20 = load i32, ptr %counter, align 4, !dbg !9278, !tbaa !1767
  %idxprom = sext i32 %20 to i64, !dbg !9276
  %arrayidx = getelementptr inbounds %struct._xmlRegCounter, ptr %19, i64 %idxprom, !dbg !9276
  %min18 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx, i32 0, i32 0, !dbg !9279
  store i32 1, ptr %min18, align 4, !dbg !9280, !tbaa !2170
  %21 = load ptr, ptr %am.addr, align 8, !dbg !9281, !tbaa !1527
  %counters19 = getelementptr inbounds %struct._xmlAutomata, ptr %21, i32 0, i32 16, !dbg !9282
  %22 = load ptr, ptr %counters19, align 8, !dbg !9282, !tbaa !4604
  %23 = load i32, ptr %counter, align 4, !dbg !9283, !tbaa !1767
  %idxprom20 = sext i32 %23 to i64, !dbg !9281
  %arrayidx21 = getelementptr inbounds %struct._xmlRegCounter, ptr %22, i64 %idxprom20, !dbg !9281
  %max22 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx21, i32 0, i32 1, !dbg !9284
  store i32 1, ptr %max22, align 4, !dbg !9285, !tbaa !2147
  %24 = load ptr, ptr %to.addr, align 8, !dbg !9286, !tbaa !1527
  %cmp23 = icmp eq ptr %24, null, !dbg !9288
  br i1 %cmp23, label %if.then24, label %if.end27, !dbg !9289

if.then24:                                        ; preds = %if.end12
  %25 = load ptr, ptr %am.addr, align 8, !dbg !9290, !tbaa !1527
  %call25 = call ptr @xmlRegNewState(ptr noundef %25), !dbg !9292
  store ptr %call25, ptr %to.addr, align 8, !dbg !9293, !tbaa !1527
  %26 = load ptr, ptr %am.addr, align 8, !dbg !9294, !tbaa !1527
  %27 = load ptr, ptr %to.addr, align 8, !dbg !9295, !tbaa !1527
  %call26 = call i32 @xmlRegStatePush(ptr noundef %26, ptr noundef %27), !dbg !9296
  br label %if.end27, !dbg !9297

if.end27:                                         ; preds = %if.then24, %if.end12
  %28 = load ptr, ptr %am.addr, align 8, !dbg !9298, !tbaa !1527
  %29 = load ptr, ptr %from.addr, align 8, !dbg !9299, !tbaa !1527
  %30 = load ptr, ptr %atom, align 8, !dbg !9300, !tbaa !1527
  %31 = load ptr, ptr %to.addr, align 8, !dbg !9301, !tbaa !1527
  %32 = load i32, ptr %counter, align 4, !dbg !9302, !tbaa !1767
  call void @xmlRegStateAddTrans(ptr noundef %28, ptr noundef %29, ptr noundef %30, ptr noundef %31, i32 noundef %32, i32 noundef -1), !dbg !9303
  %33 = load ptr, ptr %am.addr, align 8, !dbg !9304, !tbaa !1527
  %34 = load ptr, ptr %atom, align 8, !dbg !9305, !tbaa !1527
  %call28 = call i32 @xmlRegAtomPush(ptr noundef %33, ptr noundef %34), !dbg !9306
  %35 = load ptr, ptr %to.addr, align 8, !dbg !9307, !tbaa !1527
  %36 = load ptr, ptr %am.addr, align 8, !dbg !9308, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %36, i32 0, i32 6, !dbg !9309
  store ptr %35, ptr %state, align 8, !dbg !9310, !tbaa !4169
  %37 = load ptr, ptr %to.addr, align 8, !dbg !9311, !tbaa !1527
  store ptr %37, ptr %retval, align 8, !dbg !9312
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9312

cleanup:                                          ; preds = %if.end27, %if.then11, %if.then8, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %counter) #8, !dbg !9313
  call void @llvm.lifetime.end.p0(i64 8, ptr %atom) #8, !dbg !9313
  %38 = load ptr, ptr %retval, align 8, !dbg !9313
  ret ptr %38, !dbg !9313
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataNewState(ptr noundef %am) #0 !dbg !9314 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %to = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !9316, metadata !DIExpression()), !dbg !9318
  call void @llvm.lifetime.start.p0(i64 8, ptr %to) #8, !dbg !9319
  tail call void @llvm.dbg.declare(metadata ptr %to, metadata !9317, metadata !DIExpression()), !dbg !9320
  %0 = load ptr, ptr %am.addr, align 8, !dbg !9321, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9323
  br i1 %cmp, label %if.then, label %if.end, !dbg !9324

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !9325
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9325

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %am.addr, align 8, !dbg !9326, !tbaa !1527
  %call = call ptr @xmlRegNewState(ptr noundef %1), !dbg !9327
  store ptr %call, ptr %to, align 8, !dbg !9328, !tbaa !1527
  %2 = load ptr, ptr %am.addr, align 8, !dbg !9329, !tbaa !1527
  %3 = load ptr, ptr %to, align 8, !dbg !9330, !tbaa !1527
  %call1 = call i32 @xmlRegStatePush(ptr noundef %2, ptr noundef %3), !dbg !9331
  %4 = load ptr, ptr %to, align 8, !dbg !9332, !tbaa !1527
  store ptr %4, ptr %retval, align 8, !dbg !9333
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9333

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %to) #8, !dbg !9334
  %5 = load ptr, ptr %retval, align 8, !dbg !9334
  ret ptr %5, !dbg !9334
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataNewEpsilon(ptr noundef %am, ptr noundef %from, ptr noundef %to) #0 !dbg !9335 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !9339, metadata !DIExpression()), !dbg !9342
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !9340, metadata !DIExpression()), !dbg !9343
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !9341, metadata !DIExpression()), !dbg !9344
  %0 = load ptr, ptr %am.addr, align 8, !dbg !9345, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9347
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9348

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %from.addr, align 8, !dbg !9349, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !9350
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9351

if.then:                                          ; preds = %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !9352
  br label %return, !dbg !9352

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr %am.addr, align 8, !dbg !9353, !tbaa !1527
  %3 = load ptr, ptr %from.addr, align 8, !dbg !9354, !tbaa !1527
  %4 = load ptr, ptr %to.addr, align 8, !dbg !9355, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %2, ptr noundef %3, ptr noundef %4), !dbg !9356
  %5 = load ptr, ptr %to.addr, align 8, !dbg !9357, !tbaa !1527
  %cmp2 = icmp eq ptr %5, null, !dbg !9359
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9360

if.then3:                                         ; preds = %if.end
  %6 = load ptr, ptr %am.addr, align 8, !dbg !9361, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %6, i32 0, i32 6, !dbg !9362
  %7 = load ptr, ptr %state, align 8, !dbg !9362, !tbaa !4169
  store ptr %7, ptr %retval, align 8, !dbg !9363
  br label %return, !dbg !9363

if.end4:                                          ; preds = %if.end
  %8 = load ptr, ptr %to.addr, align 8, !dbg !9364, !tbaa !1527
  store ptr %8, ptr %retval, align 8, !dbg !9365
  br label %return, !dbg !9365

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %9 = load ptr, ptr %retval, align 8, !dbg !9366
  ret ptr %9, !dbg !9366
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataNewAllTrans(ptr noundef %am, ptr noundef %from, ptr noundef %to, i32 noundef %lax) #0 !dbg !9367 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %lax.addr = alloca i32, align 4
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !9371, metadata !DIExpression()), !dbg !9375
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !9372, metadata !DIExpression()), !dbg !9376
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !9373, metadata !DIExpression()), !dbg !9377
  store i32 %lax, ptr %lax.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %lax.addr, metadata !9374, metadata !DIExpression()), !dbg !9378
  %0 = load ptr, ptr %am.addr, align 8, !dbg !9379, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9381
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9382

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %from.addr, align 8, !dbg !9383, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !9384
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9385

if.then:                                          ; preds = %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !9386
  br label %return, !dbg !9386

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr %am.addr, align 8, !dbg !9387, !tbaa !1527
  %3 = load ptr, ptr %from.addr, align 8, !dbg !9388, !tbaa !1527
  %4 = load ptr, ptr %to.addr, align 8, !dbg !9389, !tbaa !1527
  %5 = load i32, ptr %lax.addr, align 4, !dbg !9390, !tbaa !1767
  call void @xmlFAGenerateAllTransition(ptr noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5), !dbg !9391
  %6 = load ptr, ptr %to.addr, align 8, !dbg !9392, !tbaa !1527
  %cmp2 = icmp eq ptr %6, null, !dbg !9394
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9395

if.then3:                                         ; preds = %if.end
  %7 = load ptr, ptr %am.addr, align 8, !dbg !9396, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %7, i32 0, i32 6, !dbg !9397
  %8 = load ptr, ptr %state, align 8, !dbg !9397, !tbaa !4169
  store ptr %8, ptr %retval, align 8, !dbg !9398
  br label %return, !dbg !9398

if.end4:                                          ; preds = %if.end
  %9 = load ptr, ptr %to.addr, align 8, !dbg !9399, !tbaa !1527
  store ptr %9, ptr %retval, align 8, !dbg !9400
  br label %return, !dbg !9400

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %10 = load ptr, ptr %retval, align 8, !dbg !9401
  ret ptr %10, !dbg !9401
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAGenerateAllTransition(ptr noundef %ctxt, ptr noundef %from, ptr noundef %to, i32 noundef %lax) #0 !dbg !9402 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %lax.addr = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !9406, metadata !DIExpression()), !dbg !9410
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !9407, metadata !DIExpression()), !dbg !9411
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !9408, metadata !DIExpression()), !dbg !9412
  store i32 %lax, ptr %lax.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %lax.addr, metadata !9409, metadata !DIExpression()), !dbg !9413
  %0 = load ptr, ptr %to.addr, align 8, !dbg !9414, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9416
  br i1 %cmp, label %if.then, label %if.end, !dbg !9417

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !9418, !tbaa !1527
  %call = call ptr @xmlRegNewState(ptr noundef %1), !dbg !9420
  store ptr %call, ptr %to.addr, align 8, !dbg !9421, !tbaa !1527
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !9422, !tbaa !1527
  %3 = load ptr, ptr %to.addr, align 8, !dbg !9423, !tbaa !1527
  %call1 = call i32 @xmlRegStatePush(ptr noundef %2, ptr noundef %3), !dbg !9424
  %4 = load ptr, ptr %to.addr, align 8, !dbg !9425, !tbaa !1527
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !9426, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 6, !dbg !9427
  store ptr %4, ptr %state, align 8, !dbg !9428, !tbaa !4169
  br label %if.end, !dbg !9429

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, ptr %lax.addr, align 4, !dbg !9430, !tbaa !1767
  %tobool = icmp ne i32 %6, 0, !dbg !9430
  br i1 %tobool, label %if.then2, label %if.else, !dbg !9432

if.then2:                                         ; preds = %if.end
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !9433, !tbaa !1527
  %8 = load ptr, ptr %from.addr, align 8, !dbg !9434, !tbaa !1527
  %9 = load ptr, ptr %to.addr, align 8, !dbg !9435, !tbaa !1527
  call void @xmlRegStateAddTrans(ptr noundef %7, ptr noundef %8, ptr noundef null, ptr noundef %9, i32 noundef -1, i32 noundef 1193047), !dbg !9436
  br label %if.end3, !dbg !9436

if.else:                                          ; preds = %if.end
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !9437, !tbaa !1527
  %11 = load ptr, ptr %from.addr, align 8, !dbg !9438, !tbaa !1527
  %12 = load ptr, ptr %to.addr, align 8, !dbg !9439, !tbaa !1527
  call void @xmlRegStateAddTrans(ptr noundef %10, ptr noundef %11, ptr noundef null, ptr noundef %12, i32 noundef -1, i32 noundef 1193046), !dbg !9440
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then2
  ret void, !dbg !9441
}

; Function Attrs: nounwind uwtable
define i32 @xmlAutomataNewCounter(ptr noundef %am, i32 noundef %min, i32 noundef %max) #0 !dbg !9442 {
entry:
  %retval = alloca i32, align 4
  %am.addr = alloca ptr, align 8
  %min.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !9446, metadata !DIExpression()), !dbg !9450
  store i32 %min, ptr %min.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %min.addr, metadata !9447, metadata !DIExpression()), !dbg !9451
  store i32 %max, ptr %max.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %max.addr, metadata !9448, metadata !DIExpression()), !dbg !9452
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !9453
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !9449, metadata !DIExpression()), !dbg !9454
  %0 = load ptr, ptr %am.addr, align 8, !dbg !9455, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9457
  br i1 %cmp, label %if.then, label %if.end, !dbg !9458

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !9459
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9459

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %am.addr, align 8, !dbg !9460, !tbaa !1527
  %call = call i32 @xmlRegGetCounter(ptr noundef %1), !dbg !9461
  store i32 %call, ptr %ret, align 4, !dbg !9462, !tbaa !1767
  %2 = load i32, ptr %ret, align 4, !dbg !9463, !tbaa !1767
  %cmp1 = icmp slt i32 %2, 0, !dbg !9465
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9466

if.then2:                                         ; preds = %if.end
  store i32 -1, ptr %retval, align 4, !dbg !9467
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9467

if.end3:                                          ; preds = %if.end
  %3 = load i32, ptr %min.addr, align 4, !dbg !9468, !tbaa !1767
  %4 = load ptr, ptr %am.addr, align 8, !dbg !9469, !tbaa !1527
  %counters = getelementptr inbounds %struct._xmlAutomata, ptr %4, i32 0, i32 16, !dbg !9470
  %5 = load ptr, ptr %counters, align 8, !dbg !9470, !tbaa !4604
  %6 = load i32, ptr %ret, align 4, !dbg !9471, !tbaa !1767
  %idxprom = sext i32 %6 to i64, !dbg !9469
  %arrayidx = getelementptr inbounds %struct._xmlRegCounter, ptr %5, i64 %idxprom, !dbg !9469
  %min4 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx, i32 0, i32 0, !dbg !9472
  store i32 %3, ptr %min4, align 4, !dbg !9473, !tbaa !2170
  %7 = load i32, ptr %max.addr, align 4, !dbg !9474, !tbaa !1767
  %8 = load ptr, ptr %am.addr, align 8, !dbg !9475, !tbaa !1527
  %counters5 = getelementptr inbounds %struct._xmlAutomata, ptr %8, i32 0, i32 16, !dbg !9476
  %9 = load ptr, ptr %counters5, align 8, !dbg !9476, !tbaa !4604
  %10 = load i32, ptr %ret, align 4, !dbg !9477, !tbaa !1767
  %idxprom6 = sext i32 %10 to i64, !dbg !9475
  %arrayidx7 = getelementptr inbounds %struct._xmlRegCounter, ptr %9, i64 %idxprom6, !dbg !9475
  %max8 = getelementptr inbounds %struct._xmlRegCounter, ptr %arrayidx7, i32 0, i32 1, !dbg !9478
  store i32 %7, ptr %max8, align 4, !dbg !9479, !tbaa !2147
  %11 = load i32, ptr %ret, align 4, !dbg !9480, !tbaa !1767
  store i32 %11, ptr %retval, align 4, !dbg !9481
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9481

cleanup:                                          ; preds = %if.end3, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !9482
  %12 = load i32, ptr %retval, align 4, !dbg !9482
  ret i32 %12, !dbg !9482
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataNewCountedTrans(ptr noundef %am, ptr noundef %from, ptr noundef %to, i32 noundef %counter) #0 !dbg !9483 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %counter.addr = alloca i32, align 4
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !9485, metadata !DIExpression()), !dbg !9489
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !9486, metadata !DIExpression()), !dbg !9490
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !9487, metadata !DIExpression()), !dbg !9491
  store i32 %counter, ptr %counter.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %counter.addr, metadata !9488, metadata !DIExpression()), !dbg !9492
  %0 = load ptr, ptr %am.addr, align 8, !dbg !9493, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9495
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9496

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %from.addr, align 8, !dbg !9497, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !9498
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !9499

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, ptr %counter.addr, align 4, !dbg !9500, !tbaa !1767
  %cmp3 = icmp slt i32 %2, 0, !dbg !9501
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9502

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !9503
  br label %return, !dbg !9503

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load ptr, ptr %am.addr, align 8, !dbg !9504, !tbaa !1527
  %4 = load ptr, ptr %from.addr, align 8, !dbg !9505, !tbaa !1527
  %5 = load ptr, ptr %to.addr, align 8, !dbg !9506, !tbaa !1527
  %6 = load i32, ptr %counter.addr, align 4, !dbg !9507, !tbaa !1767
  call void @xmlFAGenerateCountedEpsilonTransition(ptr noundef %3, ptr noundef %4, ptr noundef %5, i32 noundef %6), !dbg !9508
  %7 = load ptr, ptr %to.addr, align 8, !dbg !9509, !tbaa !1527
  %cmp4 = icmp eq ptr %7, null, !dbg !9511
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9512

if.then5:                                         ; preds = %if.end
  %8 = load ptr, ptr %am.addr, align 8, !dbg !9513, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %8, i32 0, i32 6, !dbg !9514
  %9 = load ptr, ptr %state, align 8, !dbg !9514, !tbaa !4169
  store ptr %9, ptr %retval, align 8, !dbg !9515
  br label %return, !dbg !9515

if.end6:                                          ; preds = %if.end
  %10 = load ptr, ptr %to.addr, align 8, !dbg !9516, !tbaa !1527
  store ptr %10, ptr %retval, align 8, !dbg !9517
  br label %return, !dbg !9517

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %11 = load ptr, ptr %retval, align 8, !dbg !9518
  ret ptr %11, !dbg !9518
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAGenerateCountedEpsilonTransition(ptr noundef %ctxt, ptr noundef %from, ptr noundef %to, i32 noundef %counter) #0 !dbg !9519 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %counter.addr = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !9521, metadata !DIExpression()), !dbg !9525
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !9522, metadata !DIExpression()), !dbg !9526
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !9523, metadata !DIExpression()), !dbg !9527
  store i32 %counter, ptr %counter.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %counter.addr, metadata !9524, metadata !DIExpression()), !dbg !9528
  %0 = load ptr, ptr %to.addr, align 8, !dbg !9529, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9531
  br i1 %cmp, label %if.then, label %if.end, !dbg !9532

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !9533, !tbaa !1527
  %call = call ptr @xmlRegNewState(ptr noundef %1), !dbg !9535
  store ptr %call, ptr %to.addr, align 8, !dbg !9536, !tbaa !1527
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !9537, !tbaa !1527
  %3 = load ptr, ptr %to.addr, align 8, !dbg !9538, !tbaa !1527
  %call1 = call i32 @xmlRegStatePush(ptr noundef %2, ptr noundef %3), !dbg !9539
  %4 = load ptr, ptr %to.addr, align 8, !dbg !9540, !tbaa !1527
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !9541, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 6, !dbg !9542
  store ptr %4, ptr %state, align 8, !dbg !9543, !tbaa !4169
  br label %if.end, !dbg !9544

if.end:                                           ; preds = %if.then, %entry
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !9545, !tbaa !1527
  %7 = load ptr, ptr %from.addr, align 8, !dbg !9546, !tbaa !1527
  %8 = load ptr, ptr %to.addr, align 8, !dbg !9547, !tbaa !1527
  %9 = load i32, ptr %counter.addr, align 4, !dbg !9548, !tbaa !1767
  call void @xmlRegStateAddTrans(ptr noundef %6, ptr noundef %7, ptr noundef null, ptr noundef %8, i32 noundef %9, i32 noundef -1), !dbg !9549
  ret void, !dbg !9550
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataNewCounterTrans(ptr noundef %am, ptr noundef %from, ptr noundef %to, i32 noundef %counter) #0 !dbg !9551 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %counter.addr = alloca i32, align 4
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !9553, metadata !DIExpression()), !dbg !9557
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !9554, metadata !DIExpression()), !dbg !9558
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !9555, metadata !DIExpression()), !dbg !9559
  store i32 %counter, ptr %counter.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %counter.addr, metadata !9556, metadata !DIExpression()), !dbg !9560
  %0 = load ptr, ptr %am.addr, align 8, !dbg !9561, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9563
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9564

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %from.addr, align 8, !dbg !9565, !tbaa !1527
  %cmp1 = icmp eq ptr %1, null, !dbg !9566
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !9567

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, ptr %counter.addr, align 4, !dbg !9568, !tbaa !1767
  %cmp3 = icmp slt i32 %2, 0, !dbg !9569
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9570

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !9571
  br label %return, !dbg !9571

if.end:                                           ; preds = %lor.lhs.false2
  %3 = load ptr, ptr %am.addr, align 8, !dbg !9572, !tbaa !1527
  %4 = load ptr, ptr %from.addr, align 8, !dbg !9573, !tbaa !1527
  %5 = load ptr, ptr %to.addr, align 8, !dbg !9574, !tbaa !1527
  %6 = load i32, ptr %counter.addr, align 4, !dbg !9575, !tbaa !1767
  call void @xmlFAGenerateCountedTransition(ptr noundef %3, ptr noundef %4, ptr noundef %5, i32 noundef %6), !dbg !9576
  %7 = load ptr, ptr %to.addr, align 8, !dbg !9577, !tbaa !1527
  %cmp4 = icmp eq ptr %7, null, !dbg !9579
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9580

if.then5:                                         ; preds = %if.end
  %8 = load ptr, ptr %am.addr, align 8, !dbg !9581, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %8, i32 0, i32 6, !dbg !9582
  %9 = load ptr, ptr %state, align 8, !dbg !9582, !tbaa !4169
  store ptr %9, ptr %retval, align 8, !dbg !9583
  br label %return, !dbg !9583

if.end6:                                          ; preds = %if.end
  %10 = load ptr, ptr %to.addr, align 8, !dbg !9584, !tbaa !1527
  store ptr %10, ptr %retval, align 8, !dbg !9585
  br label %return, !dbg !9585

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %11 = load ptr, ptr %retval, align 8, !dbg !9586
  ret ptr %11, !dbg !9586
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAGenerateCountedTransition(ptr noundef %ctxt, ptr noundef %from, ptr noundef %to, i32 noundef %counter) #0 !dbg !9587 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %from.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %counter.addr = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !9589, metadata !DIExpression()), !dbg !9593
  store ptr %from, ptr %from.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !9590, metadata !DIExpression()), !dbg !9594
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !9591, metadata !DIExpression()), !dbg !9595
  store i32 %counter, ptr %counter.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %counter.addr, metadata !9592, metadata !DIExpression()), !dbg !9596
  %0 = load ptr, ptr %to.addr, align 8, !dbg !9597, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9599
  br i1 %cmp, label %if.then, label %if.end, !dbg !9600

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !9601, !tbaa !1527
  %call = call ptr @xmlRegNewState(ptr noundef %1), !dbg !9603
  store ptr %call, ptr %to.addr, align 8, !dbg !9604, !tbaa !1527
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !9605, !tbaa !1527
  %3 = load ptr, ptr %to.addr, align 8, !dbg !9606, !tbaa !1527
  %call1 = call i32 @xmlRegStatePush(ptr noundef %2, ptr noundef %3), !dbg !9607
  %4 = load ptr, ptr %to.addr, align 8, !dbg !9608, !tbaa !1527
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !9609, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 6, !dbg !9610
  store ptr %4, ptr %state, align 8, !dbg !9611, !tbaa !4169
  br label %if.end, !dbg !9612

if.end:                                           ; preds = %if.then, %entry
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !9613, !tbaa !1527
  %7 = load ptr, ptr %from.addr, align 8, !dbg !9614, !tbaa !1527
  %8 = load ptr, ptr %to.addr, align 8, !dbg !9615, !tbaa !1527
  %9 = load i32, ptr %counter.addr, align 4, !dbg !9616, !tbaa !1767
  call void @xmlRegStateAddTrans(ptr noundef %6, ptr noundef %7, ptr noundef null, ptr noundef %8, i32 noundef -1, i32 noundef %9), !dbg !9617
  ret void, !dbg !9618
}

; Function Attrs: nounwind uwtable
define ptr @xmlAutomataCompile(ptr noundef %am) #0 !dbg !9619 {
entry:
  %retval = alloca ptr, align 8
  %am.addr = alloca ptr, align 8
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !9623, metadata !DIExpression()), !dbg !9625
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #8, !dbg !9626
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !9624, metadata !DIExpression()), !dbg !9627
  %0 = load ptr, ptr %am.addr, align 8, !dbg !9628, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9630
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9631

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %am.addr, align 8, !dbg !9632, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 2, !dbg !9633
  %2 = load i32, ptr %error, align 8, !dbg !9633, !tbaa !1729
  %cmp1 = icmp ne i32 %2, 0, !dbg !9634
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9635

if.then:                                          ; preds = %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !9636
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9636

if.end:                                           ; preds = %lor.lhs.false
  %3 = load ptr, ptr %am.addr, align 8, !dbg !9637, !tbaa !1527
  call void @xmlFAEliminateEpsilonTransitions(ptr noundef %3), !dbg !9638
  %4 = load ptr, ptr %am.addr, align 8, !dbg !9639, !tbaa !1527
  %call = call ptr @xmlRegEpxFromParse(ptr noundef %4), !dbg !9640
  store ptr %call, ptr %ret, align 8, !dbg !9641, !tbaa !1527
  %5 = load ptr, ptr %ret, align 8, !dbg !9642, !tbaa !1527
  store ptr %5, ptr %retval, align 8, !dbg !9643
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9643

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #8, !dbg !9644
  %6 = load ptr, ptr %retval, align 8, !dbg !9644
  ret ptr %6, !dbg !9644
}

; Function Attrs: nounwind uwtable
define i32 @xmlAutomataIsDeterminist(ptr noundef %am) #0 !dbg !9645 {
entry:
  %retval = alloca i32, align 4
  %am.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %am, ptr %am.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %am.addr, metadata !9649, metadata !DIExpression()), !dbg !9651
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !9652
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !9650, metadata !DIExpression()), !dbg !9653
  %0 = load ptr, ptr %am.addr, align 8, !dbg !9654, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !9656
  br i1 %cmp, label %if.then, label %if.end, !dbg !9657

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !9658
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9658

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %am.addr, align 8, !dbg !9659, !tbaa !1527
  %call = call i32 @xmlFAComputesDeterminism(ptr noundef %1), !dbg !9660
  store i32 %call, ptr %ret, align 4, !dbg !9661, !tbaa !1767
  %2 = load i32, ptr %ret, align 4, !dbg !9662, !tbaa !1767
  store i32 %2, ptr %retval, align 4, !dbg !9663
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9663

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !9664
  %3 = load i32, ptr %retval, align 4, !dbg !9664
  ret i32 %3, !dbg !9664
}

declare !dbg !9665 void @__xmlRaiseError(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) #5

; Function Attrs: nounwind uwtable
define internal void @xmlFARegExecSaveInputString(ptr noundef %exec, ptr noundef %value, ptr noundef %data) #0 !dbg !9695 {
entry:
  %exec.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %data.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %exec, ptr %exec.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %exec.addr, metadata !9699, metadata !DIExpression()), !dbg !9706
  store ptr %value, ptr %value.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !9700, metadata !DIExpression()), !dbg !9707
  store ptr %data, ptr %data.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %data.addr, metadata !9701, metadata !DIExpression()), !dbg !9708
  %0 = load ptr, ptr %exec.addr, align 8, !dbg !9709, !tbaa !1527
  %inputStackMax = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %0, i32 0, i32 12, !dbg !9710
  %1 = load i32, ptr %inputStackMax, align 8, !dbg !9710, !tbaa !1681
  %cmp = icmp eq i32 %1, 0, !dbg !9711
  br i1 %cmp, label %if.then, label %if.else, !dbg !9712

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %exec.addr, align 8, !dbg !9713, !tbaa !1527
  %inputStackMax1 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %2, i32 0, i32 12, !dbg !9715
  store i32 4, ptr %inputStackMax1, align 8, !dbg !9716, !tbaa !1681
  %3 = load ptr, ptr @xmlMalloc, align 8, !dbg !9717, !tbaa !1527
  %4 = load ptr, ptr %exec.addr, align 8, !dbg !9718, !tbaa !1527
  %inputStackMax2 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %4, i32 0, i32 12, !dbg !9719
  %5 = load i32, ptr %inputStackMax2, align 8, !dbg !9719, !tbaa !1681
  %conv = sext i32 %5 to i64, !dbg !9718
  %mul = mul i64 %conv, 16, !dbg !9720
  %call = call ptr %3(i64 noundef %mul), !dbg !9717
  %6 = load ptr, ptr %exec.addr, align 8, !dbg !9721, !tbaa !1527
  %inputStack = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %6, i32 0, i32 17, !dbg !9722
  store ptr %call, ptr %inputStack, align 8, !dbg !9723, !tbaa !1689
  %7 = load ptr, ptr %exec.addr, align 8, !dbg !9724, !tbaa !1527
  %inputStack3 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %7, i32 0, i32 17, !dbg !9726
  %8 = load ptr, ptr %inputStack3, align 8, !dbg !9726, !tbaa !1689
  %cmp4 = icmp eq ptr %8, null, !dbg !9727
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !9728

if.then6:                                         ; preds = %if.then
  call void @xmlRegexpErrMemory(ptr noundef null, ptr noundef @.str.14), !dbg !9729
  %9 = load ptr, ptr %exec.addr, align 8, !dbg !9731, !tbaa !1527
  %inputStackMax7 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %9, i32 0, i32 12, !dbg !9732
  store i32 0, ptr %inputStackMax7, align 8, !dbg !9733, !tbaa !1681
  br label %return, !dbg !9734

if.end:                                           ; preds = %if.then
  br label %if.end26, !dbg !9735

if.else:                                          ; preds = %entry
  %10 = load ptr, ptr %exec.addr, align 8, !dbg !9736, !tbaa !1527
  %inputStackNr = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %10, i32 0, i32 13, !dbg !9737
  %11 = load i32, ptr %inputStackNr, align 4, !dbg !9737, !tbaa !1685
  %add = add nsw i32 %11, 1, !dbg !9738
  %12 = load ptr, ptr %exec.addr, align 8, !dbg !9739, !tbaa !1527
  %inputStackMax8 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %12, i32 0, i32 12, !dbg !9740
  %13 = load i32, ptr %inputStackMax8, align 8, !dbg !9740, !tbaa !1681
  %cmp9 = icmp sge i32 %add, %13, !dbg !9741
  br i1 %cmp9, label %if.then11, label %if.end25, !dbg !9742

if.then11:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !9743
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !9702, metadata !DIExpression()), !dbg !9744
  %14 = load ptr, ptr %exec.addr, align 8, !dbg !9745, !tbaa !1527
  %inputStackMax12 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %14, i32 0, i32 12, !dbg !9746
  %15 = load i32, ptr %inputStackMax12, align 8, !dbg !9747, !tbaa !1681
  %mul13 = mul nsw i32 %15, 2, !dbg !9747
  store i32 %mul13, ptr %inputStackMax12, align 8, !dbg !9747, !tbaa !1681
  %16 = load ptr, ptr @xmlRealloc, align 8, !dbg !9748, !tbaa !1527
  %17 = load ptr, ptr %exec.addr, align 8, !dbg !9749, !tbaa !1527
  %inputStack14 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %17, i32 0, i32 17, !dbg !9750
  %18 = load ptr, ptr %inputStack14, align 8, !dbg !9750, !tbaa !1689
  %19 = load ptr, ptr %exec.addr, align 8, !dbg !9751, !tbaa !1527
  %inputStackMax15 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %19, i32 0, i32 12, !dbg !9752
  %20 = load i32, ptr %inputStackMax15, align 8, !dbg !9752, !tbaa !1681
  %conv16 = sext i32 %20 to i64, !dbg !9751
  %mul17 = mul i64 %conv16, 16, !dbg !9753
  %call18 = call ptr %16(ptr noundef %18, i64 noundef %mul17), !dbg !9748
  store ptr %call18, ptr %tmp, align 8, !dbg !9754, !tbaa !1527
  %21 = load ptr, ptr %tmp, align 8, !dbg !9755, !tbaa !1527
  %cmp19 = icmp eq ptr %21, null, !dbg !9757
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !9758

if.then21:                                        ; preds = %if.then11
  call void @xmlRegexpErrMemory(ptr noundef null, ptr noundef @.str.14), !dbg !9759
  %22 = load ptr, ptr %exec.addr, align 8, !dbg !9761, !tbaa !1527
  %inputStackMax22 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %22, i32 0, i32 12, !dbg !9762
  %23 = load i32, ptr %inputStackMax22, align 8, !dbg !9763, !tbaa !1681
  %div = sdiv i32 %23, 2, !dbg !9763
  store i32 %div, ptr %inputStackMax22, align 8, !dbg !9763, !tbaa !1681
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9764

if.end23:                                         ; preds = %if.then11
  %24 = load ptr, ptr %tmp, align 8, !dbg !9765, !tbaa !1527
  %25 = load ptr, ptr %exec.addr, align 8, !dbg !9766, !tbaa !1527
  %inputStack24 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %25, i32 0, i32 17, !dbg !9767
  store ptr %24, ptr %inputStack24, align 8, !dbg !9768, !tbaa !1689
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !9769
  br label %cleanup, !dbg !9769

cleanup:                                          ; preds = %if.end23, %if.then21
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !9769
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end25, !dbg !9770

if.end25:                                         ; preds = %cleanup.cont, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end
  %26 = load ptr, ptr %value.addr, align 8, !dbg !9771, !tbaa !1527
  %call27 = call ptr @xmlStrdup(ptr noundef %26), !dbg !9772
  %27 = load ptr, ptr %exec.addr, align 8, !dbg !9773, !tbaa !1527
  %inputStack28 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %27, i32 0, i32 17, !dbg !9774
  %28 = load ptr, ptr %inputStack28, align 8, !dbg !9774, !tbaa !1689
  %29 = load ptr, ptr %exec.addr, align 8, !dbg !9775, !tbaa !1527
  %inputStackNr29 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %29, i32 0, i32 13, !dbg !9776
  %30 = load i32, ptr %inputStackNr29, align 4, !dbg !9776, !tbaa !1685
  %idxprom = sext i32 %30 to i64, !dbg !9773
  %arrayidx = getelementptr inbounds %struct._xmlRegInputToken, ptr %28, i64 %idxprom, !dbg !9773
  %value30 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx, i32 0, i32 0, !dbg !9777
  store ptr %call27, ptr %value30, align 8, !dbg !9778, !tbaa !1830
  %31 = load ptr, ptr %data.addr, align 8, !dbg !9779, !tbaa !1527
  %32 = load ptr, ptr %exec.addr, align 8, !dbg !9780, !tbaa !1527
  %inputStack31 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %32, i32 0, i32 17, !dbg !9781
  %33 = load ptr, ptr %inputStack31, align 8, !dbg !9781, !tbaa !1689
  %34 = load ptr, ptr %exec.addr, align 8, !dbg !9782, !tbaa !1527
  %inputStackNr32 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %34, i32 0, i32 13, !dbg !9783
  %35 = load i32, ptr %inputStackNr32, align 4, !dbg !9783, !tbaa !1685
  %idxprom33 = sext i32 %35 to i64, !dbg !9780
  %arrayidx34 = getelementptr inbounds %struct._xmlRegInputToken, ptr %33, i64 %idxprom33, !dbg !9780
  %data35 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx34, i32 0, i32 1, !dbg !9784
  store ptr %31, ptr %data35, align 8, !dbg !9785, !tbaa !2015
  %36 = load ptr, ptr %exec.addr, align 8, !dbg !9786, !tbaa !1527
  %inputStackNr36 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %36, i32 0, i32 13, !dbg !9787
  %37 = load i32, ptr %inputStackNr36, align 4, !dbg !9788, !tbaa !1685
  %inc = add nsw i32 %37, 1, !dbg !9788
  store i32 %inc, ptr %inputStackNr36, align 4, !dbg !9788, !tbaa !1685
  %38 = load ptr, ptr %exec.addr, align 8, !dbg !9789, !tbaa !1527
  %inputStack37 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %38, i32 0, i32 17, !dbg !9790
  %39 = load ptr, ptr %inputStack37, align 8, !dbg !9790, !tbaa !1689
  %40 = load ptr, ptr %exec.addr, align 8, !dbg !9791, !tbaa !1527
  %inputStackNr38 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %40, i32 0, i32 13, !dbg !9792
  %41 = load i32, ptr %inputStackNr38, align 4, !dbg !9792, !tbaa !1685
  %idxprom39 = sext i32 %41 to i64, !dbg !9789
  %arrayidx40 = getelementptr inbounds %struct._xmlRegInputToken, ptr %39, i64 %idxprom39, !dbg !9789
  %value41 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx40, i32 0, i32 0, !dbg !9793
  store ptr null, ptr %value41, align 8, !dbg !9794, !tbaa !1830
  %42 = load ptr, ptr %exec.addr, align 8, !dbg !9795, !tbaa !1527
  %inputStack42 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %42, i32 0, i32 17, !dbg !9796
  %43 = load ptr, ptr %inputStack42, align 8, !dbg !9796, !tbaa !1689
  %44 = load ptr, ptr %exec.addr, align 8, !dbg !9797, !tbaa !1527
  %inputStackNr43 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %44, i32 0, i32 13, !dbg !9798
  %45 = load i32, ptr %inputStackNr43, align 4, !dbg !9798, !tbaa !1685
  %idxprom44 = sext i32 %45 to i64, !dbg !9795
  %arrayidx45 = getelementptr inbounds %struct._xmlRegInputToken, ptr %43, i64 %idxprom44, !dbg !9795
  %data46 = getelementptr inbounds %struct._xmlRegInputToken, ptr %arrayidx45, i32 0, i32 1, !dbg !9799
  store ptr null, ptr %data46, align 8, !dbg !9800, !tbaa !2015
  br label %return, !dbg !9801

return:                                           ; preds = %if.end26, %cleanup, %if.then6
  ret void, !dbg !9801

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !9802 i32 @xmlStrEqual(ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal i32 @xmlRegStrEqualWildcard(ptr noundef %expStr, ptr noundef %valStr) #0 !dbg !9805 {
entry:
  %retval = alloca i32, align 4
  %expStr.addr = alloca ptr, align 8
  %valStr.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %expStr, ptr %expStr.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %expStr.addr, metadata !9807, metadata !DIExpression()), !dbg !9815
  store ptr %valStr, ptr %valStr.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %valStr.addr, metadata !9808, metadata !DIExpression()), !dbg !9816
  %0 = load ptr, ptr %expStr.addr, align 8, !dbg !9817, !tbaa !1527
  %1 = load ptr, ptr %valStr.addr, align 8, !dbg !9819, !tbaa !1527
  %cmp = icmp eq ptr %0, %1, !dbg !9820
  br i1 %cmp, label %if.then, label %if.end, !dbg !9821

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !9822
  br label %return, !dbg !9822

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %expStr.addr, align 8, !dbg !9823, !tbaa !1527
  %cmp1 = icmp eq ptr %2, null, !dbg !9825
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9826

if.then2:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !9827
  br label %return, !dbg !9827

if.end3:                                          ; preds = %if.end
  %3 = load ptr, ptr %valStr.addr, align 8, !dbg !9828, !tbaa !1527
  %cmp4 = icmp eq ptr %3, null, !dbg !9830
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9831

if.then5:                                         ; preds = %if.end3
  store i32 0, ptr %retval, align 4, !dbg !9832
  br label %return, !dbg !9832

if.end6:                                          ; preds = %if.end3
  br label %do.body, !dbg !9833

do.body:                                          ; preds = %do.cond40, %if.end6
  %4 = load ptr, ptr %expStr.addr, align 8, !dbg !9834, !tbaa !1527
  %5 = load i8, ptr %4, align 1, !dbg !9835, !tbaa !2932
  %conv = zext i8 %5 to i32, !dbg !9835
  %6 = load ptr, ptr %valStr.addr, align 8, !dbg !9836, !tbaa !1527
  %7 = load i8, ptr %6, align 1, !dbg !9837, !tbaa !2932
  %conv7 = zext i8 %7 to i32, !dbg !9837
  %cmp8 = icmp ne i32 %conv, %conv7, !dbg !9838
  br i1 %cmp8, label %if.then10, label %if.end37, !dbg !9839

if.then10:                                        ; preds = %do.body
  %8 = load ptr, ptr %valStr.addr, align 8, !dbg !9840, !tbaa !1527
  %9 = load i8, ptr %8, align 1, !dbg !9841, !tbaa !2932
  %conv11 = zext i8 %9 to i32, !dbg !9841
  %cmp12 = icmp eq i32 %conv11, 42, !dbg !9842
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !9843

if.then14:                                        ; preds = %if.then10
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !9844
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !9809, metadata !DIExpression()), !dbg !9845
  %10 = load ptr, ptr %valStr.addr, align 8, !dbg !9846, !tbaa !1527
  store ptr %10, ptr %tmp, align 8, !dbg !9847, !tbaa !1527
  %11 = load ptr, ptr %expStr.addr, align 8, !dbg !9848, !tbaa !1527
  store ptr %11, ptr %valStr.addr, align 8, !dbg !9849, !tbaa !1527
  %12 = load ptr, ptr %tmp, align 8, !dbg !9850, !tbaa !1527
  store ptr %12, ptr %expStr.addr, align 8, !dbg !9851, !tbaa !1527
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !9852
  br label %if.end15, !dbg !9853

if.end15:                                         ; preds = %if.then14, %if.then10
  %13 = load ptr, ptr %valStr.addr, align 8, !dbg !9854, !tbaa !1527
  %14 = load i8, ptr %13, align 1, !dbg !9856, !tbaa !2932
  %conv16 = zext i8 %14 to i32, !dbg !9856
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !9857
  br i1 %cmp17, label %land.lhs.true, label %if.else, !dbg !9858

land.lhs.true:                                    ; preds = %if.end15
  %15 = load ptr, ptr %expStr.addr, align 8, !dbg !9859, !tbaa !1527
  %16 = load i8, ptr %15, align 1, !dbg !9860, !tbaa !2932
  %conv19 = zext i8 %16 to i32, !dbg !9860
  %cmp20 = icmp ne i32 %conv19, 0, !dbg !9861
  br i1 %cmp20, label %land.lhs.true22, label %if.else, !dbg !9862

land.lhs.true22:                                  ; preds = %land.lhs.true
  %17 = load ptr, ptr %expStr.addr, align 8, !dbg !9863, !tbaa !1527
  %incdec.ptr = getelementptr inbounds i8, ptr %17, i32 1, !dbg !9863
  store ptr %incdec.ptr, ptr %expStr.addr, align 8, !dbg !9863, !tbaa !1527
  %18 = load i8, ptr %17, align 1, !dbg !9864, !tbaa !2932
  %conv23 = zext i8 %18 to i32, !dbg !9864
  %cmp24 = icmp eq i32 %conv23, 42, !dbg !9865
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !9866

if.then26:                                        ; preds = %land.lhs.true22
  br label %do.body27, !dbg !9867

do.body27:                                        ; preds = %do.cond, %if.then26
  %19 = load ptr, ptr %valStr.addr, align 8, !dbg !9869, !tbaa !1527
  %20 = load i8, ptr %19, align 1, !dbg !9872, !tbaa !2932
  %conv28 = zext i8 %20 to i32, !dbg !9872
  %cmp29 = icmp eq i32 %conv28, 124, !dbg !9873
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !9874

if.then31:                                        ; preds = %do.body27
  br label %do.end, !dbg !9875

if.end32:                                         ; preds = %do.body27
  %21 = load ptr, ptr %valStr.addr, align 8, !dbg !9876, !tbaa !1527
  %incdec.ptr33 = getelementptr inbounds i8, ptr %21, i32 1, !dbg !9876
  store ptr %incdec.ptr33, ptr %valStr.addr, align 8, !dbg !9876, !tbaa !1527
  br label %do.cond, !dbg !9877

do.cond:                                          ; preds = %if.end32
  %22 = load ptr, ptr %valStr.addr, align 8, !dbg !9878, !tbaa !1527
  %23 = load i8, ptr %22, align 1, !dbg !9879, !tbaa !2932
  %conv34 = zext i8 %23 to i32, !dbg !9879
  %cmp35 = icmp ne i32 %conv34, 0, !dbg !9880
  br i1 %cmp35, label %do.body27, label %do.end, !dbg !9877, !llvm.loop !9881

do.end:                                           ; preds = %do.cond, %if.then31
  br label %do.cond40, !dbg !9883

if.else:                                          ; preds = %land.lhs.true22, %land.lhs.true, %if.end15
  store i32 0, ptr %retval, align 4, !dbg !9884
  br label %return, !dbg !9884

if.end37:                                         ; preds = %do.body
  %24 = load ptr, ptr %expStr.addr, align 8, !dbg !9885, !tbaa !1527
  %incdec.ptr38 = getelementptr inbounds i8, ptr %24, i32 1, !dbg !9885
  store ptr %incdec.ptr38, ptr %expStr.addr, align 8, !dbg !9885, !tbaa !1527
  %25 = load ptr, ptr %valStr.addr, align 8, !dbg !9886, !tbaa !1527
  %incdec.ptr39 = getelementptr inbounds i8, ptr %25, i32 1, !dbg !9886
  store ptr %incdec.ptr39, ptr %valStr.addr, align 8, !dbg !9886, !tbaa !1527
  br label %do.cond40, !dbg !9887

do.cond40:                                        ; preds = %if.end37, %do.end
  %26 = load ptr, ptr %valStr.addr, align 8, !dbg !9888, !tbaa !1527
  %27 = load i8, ptr %26, align 1, !dbg !9889, !tbaa !2932
  %conv41 = zext i8 %27 to i32, !dbg !9889
  %cmp42 = icmp ne i32 %conv41, 0, !dbg !9890
  br i1 %cmp42, label %do.body, label %do.end44, !dbg !9887, !llvm.loop !9891

do.end44:                                         ; preds = %do.cond40
  %28 = load ptr, ptr %expStr.addr, align 8, !dbg !9893, !tbaa !1527
  %29 = load i8, ptr %28, align 1, !dbg !9895, !tbaa !2932
  %conv45 = zext i8 %29 to i32, !dbg !9895
  %cmp46 = icmp ne i32 %conv45, 0, !dbg !9896
  br i1 %cmp46, label %if.then48, label %if.else49, !dbg !9897

if.then48:                                        ; preds = %do.end44
  store i32 0, ptr %retval, align 4, !dbg !9898
  br label %return, !dbg !9898

if.else49:                                        ; preds = %do.end44
  store i32 1, ptr %retval, align 4, !dbg !9899
  br label %return, !dbg !9899

return:                                           ; preds = %if.else49, %if.then48, %if.else, %if.then5, %if.then2, %if.then
  %30 = load i32, ptr %retval, align 4, !dbg !9900
  ret i32 %30, !dbg !9900
}

; Function Attrs: nounwind uwtable
define internal void @xmlFARegExecSave(ptr noundef %exec) #0 !dbg !9901 {
entry:
  %exec.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %len = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %exec, ptr %exec.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %exec.addr, metadata !9903, metadata !DIExpression()), !dbg !9909
  %0 = load ptr, ptr %exec.addr, align 8, !dbg !9910, !tbaa !1527
  %nbPush = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %0, i32 0, i32 22, !dbg !9912
  %1 = load i32, ptr %nbPush, align 8, !dbg !9912, !tbaa !1701
  %cmp = icmp sgt i32 %1, 10000000, !dbg !9913
  br i1 %cmp, label %if.then, label %if.end, !dbg !9914

if.then:                                          ; preds = %entry
  br label %return, !dbg !9915

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %exec.addr, align 8, !dbg !9917, !tbaa !1527
  %nbPush1 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %2, i32 0, i32 22, !dbg !9918
  %3 = load i32, ptr %nbPush1, align 8, !dbg !9919, !tbaa !1701
  %inc = add nsw i32 %3, 1, !dbg !9919
  store i32 %inc, ptr %nbPush1, align 8, !dbg !9919, !tbaa !1701
  %4 = load ptr, ptr %exec.addr, align 8, !dbg !9920, !tbaa !1527
  %maxRollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %4, i32 0, i32 8, !dbg !9921
  %5 = load i32, ptr %maxRollbacks, align 8, !dbg !9921, !tbaa !1582
  %cmp2 = icmp eq i32 %5, 0, !dbg !9922
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !9923

if.then3:                                         ; preds = %if.end
  %6 = load ptr, ptr %exec.addr, align 8, !dbg !9924, !tbaa !1527
  %maxRollbacks4 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %6, i32 0, i32 8, !dbg !9926
  store i32 4, ptr %maxRollbacks4, align 8, !dbg !9927, !tbaa !1582
  %7 = load ptr, ptr @xmlMalloc, align 8, !dbg !9928, !tbaa !1527
  %8 = load ptr, ptr %exec.addr, align 8, !dbg !9929, !tbaa !1527
  %maxRollbacks5 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %8, i32 0, i32 8, !dbg !9930
  %9 = load i32, ptr %maxRollbacks5, align 8, !dbg !9930, !tbaa !1582
  %conv = sext i32 %9 to i64, !dbg !9929
  %mul = mul i64 %conv, 24, !dbg !9931
  %call = call ptr %7(i64 noundef %mul), !dbg !9928
  %10 = load ptr, ptr %exec.addr, align 8, !dbg !9932, !tbaa !1527
  %rollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %10, i32 0, i32 10, !dbg !9933
  store ptr %call, ptr %rollbacks, align 8, !dbg !9934, !tbaa !1590
  %11 = load ptr, ptr %exec.addr, align 8, !dbg !9935, !tbaa !1527
  %rollbacks6 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %11, i32 0, i32 10, !dbg !9937
  %12 = load ptr, ptr %rollbacks6, align 8, !dbg !9937, !tbaa !1590
  %cmp7 = icmp eq ptr %12, null, !dbg !9938
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !9939

if.then9:                                         ; preds = %if.then3
  call void @xmlRegexpErrMemory(ptr noundef null, ptr noundef @.str.15), !dbg !9940
  %13 = load ptr, ptr %exec.addr, align 8, !dbg !9942, !tbaa !1527
  %maxRollbacks10 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %13, i32 0, i32 8, !dbg !9943
  store i32 0, ptr %maxRollbacks10, align 8, !dbg !9944, !tbaa !1582
  br label %return, !dbg !9945

if.end11:                                         ; preds = %if.then3
  %14 = load ptr, ptr %exec.addr, align 8, !dbg !9946, !tbaa !1527
  %rollbacks12 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %14, i32 0, i32 10, !dbg !9947
  %15 = load ptr, ptr %rollbacks12, align 8, !dbg !9947, !tbaa !1590
  %16 = load ptr, ptr %exec.addr, align 8, !dbg !9948, !tbaa !1527
  %maxRollbacks13 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %16, i32 0, i32 8, !dbg !9949
  %17 = load i32, ptr %maxRollbacks13, align 8, !dbg !9949, !tbaa !1582
  %conv14 = sext i32 %17 to i64, !dbg !9948
  %mul15 = mul i64 %conv14, 24, !dbg !9950
  call void @llvm.memset.p0.i64(ptr align 8 %15, i8 0, i64 %mul15, i1 false), !dbg !9951
  br label %if.end40, !dbg !9952

if.else:                                          ; preds = %if.end
  %18 = load ptr, ptr %exec.addr, align 8, !dbg !9953, !tbaa !1527
  %nbRollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %18, i32 0, i32 9, !dbg !9954
  %19 = load i32, ptr %nbRollbacks, align 4, !dbg !9954, !tbaa !1586
  %20 = load ptr, ptr %exec.addr, align 8, !dbg !9955, !tbaa !1527
  %maxRollbacks16 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %20, i32 0, i32 8, !dbg !9956
  %21 = load i32, ptr %maxRollbacks16, align 8, !dbg !9956, !tbaa !1582
  %cmp17 = icmp sge i32 %19, %21, !dbg !9957
  br i1 %cmp17, label %if.then19, label %if.end39, !dbg !9958

if.then19:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !9959
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !9904, metadata !DIExpression()), !dbg !9960
  call void @llvm.lifetime.start.p0(i64 4, ptr %len) #8, !dbg !9961
  tail call void @llvm.dbg.declare(metadata ptr %len, metadata !9908, metadata !DIExpression()), !dbg !9962
  %22 = load ptr, ptr %exec.addr, align 8, !dbg !9963, !tbaa !1527
  %maxRollbacks20 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %22, i32 0, i32 8, !dbg !9964
  %23 = load i32, ptr %maxRollbacks20, align 8, !dbg !9964, !tbaa !1582
  store i32 %23, ptr %len, align 4, !dbg !9962, !tbaa !1767
  %24 = load ptr, ptr %exec.addr, align 8, !dbg !9965, !tbaa !1527
  %maxRollbacks21 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %24, i32 0, i32 8, !dbg !9966
  %25 = load i32, ptr %maxRollbacks21, align 8, !dbg !9967, !tbaa !1582
  %mul22 = mul nsw i32 %25, 2, !dbg !9967
  store i32 %mul22, ptr %maxRollbacks21, align 8, !dbg !9967, !tbaa !1582
  %26 = load ptr, ptr @xmlRealloc, align 8, !dbg !9968, !tbaa !1527
  %27 = load ptr, ptr %exec.addr, align 8, !dbg !9969, !tbaa !1527
  %rollbacks23 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %27, i32 0, i32 10, !dbg !9970
  %28 = load ptr, ptr %rollbacks23, align 8, !dbg !9970, !tbaa !1590
  %29 = load ptr, ptr %exec.addr, align 8, !dbg !9971, !tbaa !1527
  %maxRollbacks24 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %29, i32 0, i32 8, !dbg !9972
  %30 = load i32, ptr %maxRollbacks24, align 8, !dbg !9972, !tbaa !1582
  %conv25 = sext i32 %30 to i64, !dbg !9971
  %mul26 = mul i64 %conv25, 24, !dbg !9973
  %call27 = call ptr %26(ptr noundef %28, i64 noundef %mul26), !dbg !9968
  store ptr %call27, ptr %tmp, align 8, !dbg !9974, !tbaa !1527
  %31 = load ptr, ptr %tmp, align 8, !dbg !9975, !tbaa !1527
  %cmp28 = icmp eq ptr %31, null, !dbg !9977
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !9978

if.then30:                                        ; preds = %if.then19
  call void @xmlRegexpErrMemory(ptr noundef null, ptr noundef @.str.15), !dbg !9979
  %32 = load ptr, ptr %exec.addr, align 8, !dbg !9981, !tbaa !1527
  %maxRollbacks31 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %32, i32 0, i32 8, !dbg !9982
  %33 = load i32, ptr %maxRollbacks31, align 8, !dbg !9983, !tbaa !1582
  %div = sdiv i32 %33, 2, !dbg !9983
  store i32 %div, ptr %maxRollbacks31, align 8, !dbg !9983, !tbaa !1582
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !9984

if.end32:                                         ; preds = %if.then19
  %34 = load ptr, ptr %tmp, align 8, !dbg !9985, !tbaa !1527
  %35 = load ptr, ptr %exec.addr, align 8, !dbg !9986, !tbaa !1527
  %rollbacks33 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %35, i32 0, i32 10, !dbg !9987
  store ptr %34, ptr %rollbacks33, align 8, !dbg !9988, !tbaa !1590
  %36 = load ptr, ptr %exec.addr, align 8, !dbg !9989, !tbaa !1527
  %rollbacks34 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %36, i32 0, i32 10, !dbg !9990
  %37 = load ptr, ptr %rollbacks34, align 8, !dbg !9990, !tbaa !1590
  %38 = load i32, ptr %len, align 4, !dbg !9991, !tbaa !1767
  %idxprom = sext i32 %38 to i64, !dbg !9989
  %arrayidx = getelementptr inbounds %struct._xmlRegExecRollback, ptr %37, i64 %idxprom, !dbg !9989
  store ptr %arrayidx, ptr %tmp, align 8, !dbg !9992, !tbaa !1527
  %39 = load ptr, ptr %tmp, align 8, !dbg !9993, !tbaa !1527
  %40 = load ptr, ptr %exec.addr, align 8, !dbg !9994, !tbaa !1527
  %maxRollbacks35 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %40, i32 0, i32 8, !dbg !9995
  %41 = load i32, ptr %maxRollbacks35, align 8, !dbg !9995, !tbaa !1582
  %42 = load i32, ptr %len, align 4, !dbg !9996, !tbaa !1767
  %sub = sub nsw i32 %41, %42, !dbg !9997
  %conv36 = sext i32 %sub to i64, !dbg !9998
  %mul37 = mul i64 %conv36, 24, !dbg !9999
  call void @llvm.memset.p0.i64(ptr align 8 %39, i8 0, i64 %mul37, i1 false), !dbg !10000
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !10001
  br label %cleanup, !dbg !10001

cleanup:                                          ; preds = %if.end32, %if.then30
  call void @llvm.lifetime.end.p0(i64 4, ptr %len) #8, !dbg !10001
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !10001
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end39, !dbg !10002

if.end39:                                         ; preds = %cleanup.cont, %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end11
  %43 = load ptr, ptr %exec.addr, align 8, !dbg !10003, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %43, i32 0, i32 5, !dbg !10004
  %44 = load ptr, ptr %state, align 8, !dbg !10004, !tbaa !1610
  %45 = load ptr, ptr %exec.addr, align 8, !dbg !10005, !tbaa !1527
  %rollbacks41 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %45, i32 0, i32 10, !dbg !10006
  %46 = load ptr, ptr %rollbacks41, align 8, !dbg !10006, !tbaa !1590
  %47 = load ptr, ptr %exec.addr, align 8, !dbg !10007, !tbaa !1527
  %nbRollbacks42 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %47, i32 0, i32 9, !dbg !10008
  %48 = load i32, ptr %nbRollbacks42, align 4, !dbg !10008, !tbaa !1586
  %idxprom43 = sext i32 %48 to i64, !dbg !10005
  %arrayidx44 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %46, i64 %idxprom43, !dbg !10005
  %state45 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx44, i32 0, i32 0, !dbg !10009
  store ptr %44, ptr %state45, align 8, !dbg !10010, !tbaa !10011
  %49 = load ptr, ptr %exec.addr, align 8, !dbg !10012, !tbaa !1527
  %index = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %49, i32 0, i32 14, !dbg !10013
  %50 = load i32, ptr %index, align 8, !dbg !10013, !tbaa !1574
  %51 = load ptr, ptr %exec.addr, align 8, !dbg !10014, !tbaa !1527
  %rollbacks46 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %51, i32 0, i32 10, !dbg !10015
  %52 = load ptr, ptr %rollbacks46, align 8, !dbg !10015, !tbaa !1590
  %53 = load ptr, ptr %exec.addr, align 8, !dbg !10016, !tbaa !1527
  %nbRollbacks47 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %53, i32 0, i32 9, !dbg !10017
  %54 = load i32, ptr %nbRollbacks47, align 4, !dbg !10017, !tbaa !1586
  %idxprom48 = sext i32 %54 to i64, !dbg !10014
  %arrayidx49 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %52, i64 %idxprom48, !dbg !10014
  %index50 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx49, i32 0, i32 1, !dbg !10018
  store i32 %50, ptr %index50, align 8, !dbg !10019, !tbaa !10020
  %55 = load ptr, ptr %exec.addr, align 8, !dbg !10021, !tbaa !1527
  %transno = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %55, i32 0, i32 6, !dbg !10022
  %56 = load i32, ptr %transno, align 8, !dbg !10022, !tbaa !1614
  %add = add nsw i32 %56, 1, !dbg !10023
  %57 = load ptr, ptr %exec.addr, align 8, !dbg !10024, !tbaa !1527
  %rollbacks51 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %57, i32 0, i32 10, !dbg !10025
  %58 = load ptr, ptr %rollbacks51, align 8, !dbg !10025, !tbaa !1590
  %59 = load ptr, ptr %exec.addr, align 8, !dbg !10026, !tbaa !1527
  %nbRollbacks52 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %59, i32 0, i32 9, !dbg !10027
  %60 = load i32, ptr %nbRollbacks52, align 4, !dbg !10027, !tbaa !1586
  %idxprom53 = sext i32 %60 to i64, !dbg !10024
  %arrayidx54 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %58, i64 %idxprom53, !dbg !10024
  %nextbranch = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx54, i32 0, i32 2, !dbg !10028
  store i32 %add, ptr %nextbranch, align 4, !dbg !10029, !tbaa !10030
  %61 = load ptr, ptr %exec.addr, align 8, !dbg !10031, !tbaa !1527
  %comp = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %61, i32 0, i32 2, !dbg !10033
  %62 = load ptr, ptr %comp, align 8, !dbg !10033, !tbaa !1599
  %nbCounters = getelementptr inbounds %struct._xmlRegexp, ptr %62, i32 0, i32 5, !dbg !10034
  %63 = load i32, ptr %nbCounters, align 8, !dbg !10034, !tbaa !1632
  %cmp55 = icmp sgt i32 %63, 0, !dbg !10035
  br i1 %cmp55, label %if.then57, label %if.end95, !dbg !10036

if.then57:                                        ; preds = %if.end40
  %64 = load ptr, ptr %exec.addr, align 8, !dbg !10037, !tbaa !1527
  %rollbacks58 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %64, i32 0, i32 10, !dbg !10040
  %65 = load ptr, ptr %rollbacks58, align 8, !dbg !10040, !tbaa !1590
  %66 = load ptr, ptr %exec.addr, align 8, !dbg !10041, !tbaa !1527
  %nbRollbacks59 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %66, i32 0, i32 9, !dbg !10042
  %67 = load i32, ptr %nbRollbacks59, align 4, !dbg !10042, !tbaa !1586
  %idxprom60 = sext i32 %67 to i64, !dbg !10037
  %arrayidx61 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %65, i64 %idxprom60, !dbg !10037
  %counts = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx61, i32 0, i32 3, !dbg !10043
  %68 = load ptr, ptr %counts, align 8, !dbg !10043, !tbaa !1780
  %cmp62 = icmp eq ptr %68, null, !dbg !10044
  br i1 %cmp62, label %if.then64, label %if.end84, !dbg !10045

if.then64:                                        ; preds = %if.then57
  %69 = load ptr, ptr @xmlMalloc, align 8, !dbg !10046, !tbaa !1527
  %70 = load ptr, ptr %exec.addr, align 8, !dbg !10048, !tbaa !1527
  %comp65 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %70, i32 0, i32 2, !dbg !10049
  %71 = load ptr, ptr %comp65, align 8, !dbg !10049, !tbaa !1599
  %nbCounters66 = getelementptr inbounds %struct._xmlRegexp, ptr %71, i32 0, i32 5, !dbg !10050
  %72 = load i32, ptr %nbCounters66, align 8, !dbg !10050, !tbaa !1632
  %conv67 = sext i32 %72 to i64, !dbg !10048
  %mul68 = mul i64 %conv67, 4, !dbg !10051
  %call69 = call ptr %69(i64 noundef %mul68), !dbg !10046
  %73 = load ptr, ptr %exec.addr, align 8, !dbg !10052, !tbaa !1527
  %rollbacks70 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %73, i32 0, i32 10, !dbg !10053
  %74 = load ptr, ptr %rollbacks70, align 8, !dbg !10053, !tbaa !1590
  %75 = load ptr, ptr %exec.addr, align 8, !dbg !10054, !tbaa !1527
  %nbRollbacks71 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %75, i32 0, i32 9, !dbg !10055
  %76 = load i32, ptr %nbRollbacks71, align 4, !dbg !10055, !tbaa !1586
  %idxprom72 = sext i32 %76 to i64, !dbg !10052
  %arrayidx73 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %74, i64 %idxprom72, !dbg !10052
  %counts74 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx73, i32 0, i32 3, !dbg !10056
  store ptr %call69, ptr %counts74, align 8, !dbg !10057, !tbaa !1780
  %77 = load ptr, ptr %exec.addr, align 8, !dbg !10058, !tbaa !1527
  %rollbacks75 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %77, i32 0, i32 10, !dbg !10060
  %78 = load ptr, ptr %rollbacks75, align 8, !dbg !10060, !tbaa !1590
  %79 = load ptr, ptr %exec.addr, align 8, !dbg !10061, !tbaa !1527
  %nbRollbacks76 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %79, i32 0, i32 9, !dbg !10062
  %80 = load i32, ptr %nbRollbacks76, align 4, !dbg !10062, !tbaa !1586
  %idxprom77 = sext i32 %80 to i64, !dbg !10058
  %arrayidx78 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %78, i64 %idxprom77, !dbg !10058
  %counts79 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx78, i32 0, i32 3, !dbg !10063
  %81 = load ptr, ptr %counts79, align 8, !dbg !10063, !tbaa !1780
  %cmp80 = icmp eq ptr %81, null, !dbg !10064
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !10065

if.then82:                                        ; preds = %if.then64
  call void @xmlRegexpErrMemory(ptr noundef null, ptr noundef @.str.15), !dbg !10066
  %82 = load ptr, ptr %exec.addr, align 8, !dbg !10068, !tbaa !1527
  %status = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %82, i32 0, i32 0, !dbg !10069
  store i32 -5, ptr %status, align 8, !dbg !10070, !tbaa !1594
  br label %return, !dbg !10071

if.end83:                                         ; preds = %if.then64
  br label %if.end84, !dbg !10072

if.end84:                                         ; preds = %if.end83, %if.then57
  %83 = load ptr, ptr %exec.addr, align 8, !dbg !10073, !tbaa !1527
  %rollbacks85 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %83, i32 0, i32 10, !dbg !10074
  %84 = load ptr, ptr %rollbacks85, align 8, !dbg !10074, !tbaa !1590
  %85 = load ptr, ptr %exec.addr, align 8, !dbg !10075, !tbaa !1527
  %nbRollbacks86 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %85, i32 0, i32 9, !dbg !10076
  %86 = load i32, ptr %nbRollbacks86, align 4, !dbg !10076, !tbaa !1586
  %idxprom87 = sext i32 %86 to i64, !dbg !10073
  %arrayidx88 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %84, i64 %idxprom87, !dbg !10073
  %counts89 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx88, i32 0, i32 3, !dbg !10077
  %87 = load ptr, ptr %counts89, align 8, !dbg !10077, !tbaa !1780
  %88 = load ptr, ptr %exec.addr, align 8, !dbg !10078, !tbaa !1527
  %counts90 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %88, i32 0, i32 11, !dbg !10079
  %89 = load ptr, ptr %counts90, align 8, !dbg !10079, !tbaa !1644
  %90 = load ptr, ptr %exec.addr, align 8, !dbg !10080, !tbaa !1527
  %comp91 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %90, i32 0, i32 2, !dbg !10081
  %91 = load ptr, ptr %comp91, align 8, !dbg !10081, !tbaa !1599
  %nbCounters92 = getelementptr inbounds %struct._xmlRegexp, ptr %91, i32 0, i32 5, !dbg !10082
  %92 = load i32, ptr %nbCounters92, align 8, !dbg !10082, !tbaa !1632
  %conv93 = sext i32 %92 to i64, !dbg !10080
  %mul94 = mul i64 %conv93, 4, !dbg !10083
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %87, ptr align 4 %89, i64 %mul94, i1 false), !dbg !10084
  br label %if.end95, !dbg !10085

if.end95:                                         ; preds = %if.end84, %if.end40
  %93 = load ptr, ptr %exec.addr, align 8, !dbg !10086, !tbaa !1527
  %nbRollbacks96 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %93, i32 0, i32 9, !dbg !10087
  %94 = load i32, ptr %nbRollbacks96, align 4, !dbg !10088, !tbaa !1586
  %inc97 = add nsw i32 %94, 1, !dbg !10088
  store i32 %inc97, ptr %nbRollbacks96, align 4, !dbg !10088, !tbaa !1586
  br label %return, !dbg !10089

return:                                           ; preds = %if.end95, %if.then82, %cleanup, %if.then9, %if.then
  ret void, !dbg !10089

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @xmlFARegExecRollBack(ptr noundef %exec) #0 !dbg !10090 {
entry:
  %exec.addr = alloca ptr, align 8
  store ptr %exec, ptr %exec.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %exec.addr, metadata !10092, metadata !DIExpression()), !dbg !10093
  %0 = load ptr, ptr %exec.addr, align 8, !dbg !10094, !tbaa !1527
  %nbRollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %0, i32 0, i32 9, !dbg !10096
  %1 = load i32, ptr %nbRollbacks, align 4, !dbg !10096, !tbaa !1586
  %cmp = icmp sle i32 %1, 0, !dbg !10097
  br i1 %cmp, label %if.then, label %if.end, !dbg !10098

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %exec.addr, align 8, !dbg !10099, !tbaa !1527
  %status = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %2, i32 0, i32 0, !dbg !10101
  store i32 -1, ptr %status, align 8, !dbg !10102, !tbaa !1594
  br label %if.end34, !dbg !10103

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %exec.addr, align 8, !dbg !10104, !tbaa !1527
  %nbRollbacks1 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %3, i32 0, i32 9, !dbg !10105
  %4 = load i32, ptr %nbRollbacks1, align 4, !dbg !10106, !tbaa !1586
  %dec = add nsw i32 %4, -1, !dbg !10106
  store i32 %dec, ptr %nbRollbacks1, align 4, !dbg !10106, !tbaa !1586
  %5 = load ptr, ptr %exec.addr, align 8, !dbg !10107, !tbaa !1527
  %rollbacks = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %5, i32 0, i32 10, !dbg !10108
  %6 = load ptr, ptr %rollbacks, align 8, !dbg !10108, !tbaa !1590
  %7 = load ptr, ptr %exec.addr, align 8, !dbg !10109, !tbaa !1527
  %nbRollbacks2 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %7, i32 0, i32 9, !dbg !10110
  %8 = load i32, ptr %nbRollbacks2, align 4, !dbg !10110, !tbaa !1586
  %idxprom = sext i32 %8 to i64, !dbg !10107
  %arrayidx = getelementptr inbounds %struct._xmlRegExecRollback, ptr %6, i64 %idxprom, !dbg !10107
  %state = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx, i32 0, i32 0, !dbg !10111
  %9 = load ptr, ptr %state, align 8, !dbg !10111, !tbaa !10011
  %10 = load ptr, ptr %exec.addr, align 8, !dbg !10112, !tbaa !1527
  %state3 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %10, i32 0, i32 5, !dbg !10113
  store ptr %9, ptr %state3, align 8, !dbg !10114, !tbaa !1610
  %11 = load ptr, ptr %exec.addr, align 8, !dbg !10115, !tbaa !1527
  %rollbacks4 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %11, i32 0, i32 10, !dbg !10116
  %12 = load ptr, ptr %rollbacks4, align 8, !dbg !10116, !tbaa !1590
  %13 = load ptr, ptr %exec.addr, align 8, !dbg !10117, !tbaa !1527
  %nbRollbacks5 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %13, i32 0, i32 9, !dbg !10118
  %14 = load i32, ptr %nbRollbacks5, align 4, !dbg !10118, !tbaa !1586
  %idxprom6 = sext i32 %14 to i64, !dbg !10115
  %arrayidx7 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %12, i64 %idxprom6, !dbg !10115
  %index = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx7, i32 0, i32 1, !dbg !10119
  %15 = load i32, ptr %index, align 8, !dbg !10119, !tbaa !10020
  %16 = load ptr, ptr %exec.addr, align 8, !dbg !10120, !tbaa !1527
  %index8 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %16, i32 0, i32 14, !dbg !10121
  store i32 %15, ptr %index8, align 8, !dbg !10122, !tbaa !1574
  %17 = load ptr, ptr %exec.addr, align 8, !dbg !10123, !tbaa !1527
  %rollbacks9 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %17, i32 0, i32 10, !dbg !10124
  %18 = load ptr, ptr %rollbacks9, align 8, !dbg !10124, !tbaa !1590
  %19 = load ptr, ptr %exec.addr, align 8, !dbg !10125, !tbaa !1527
  %nbRollbacks10 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %19, i32 0, i32 9, !dbg !10126
  %20 = load i32, ptr %nbRollbacks10, align 4, !dbg !10126, !tbaa !1586
  %idxprom11 = sext i32 %20 to i64, !dbg !10123
  %arrayidx12 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %18, i64 %idxprom11, !dbg !10123
  %nextbranch = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx12, i32 0, i32 2, !dbg !10127
  %21 = load i32, ptr %nextbranch, align 4, !dbg !10127, !tbaa !10030
  %22 = load ptr, ptr %exec.addr, align 8, !dbg !10128, !tbaa !1527
  %transno = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %22, i32 0, i32 6, !dbg !10129
  store i32 %21, ptr %transno, align 8, !dbg !10130, !tbaa !1614
  %23 = load ptr, ptr %exec.addr, align 8, !dbg !10131, !tbaa !1527
  %comp = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %23, i32 0, i32 2, !dbg !10133
  %24 = load ptr, ptr %comp, align 8, !dbg !10133, !tbaa !1599
  %nbCounters = getelementptr inbounds %struct._xmlRegexp, ptr %24, i32 0, i32 5, !dbg !10134
  %25 = load i32, ptr %nbCounters, align 8, !dbg !10134, !tbaa !1632
  %cmp13 = icmp sgt i32 %25, 0, !dbg !10135
  br i1 %cmp13, label %if.then14, label %if.end34, !dbg !10136

if.then14:                                        ; preds = %if.end
  %26 = load ptr, ptr %exec.addr, align 8, !dbg !10137, !tbaa !1527
  %rollbacks15 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %26, i32 0, i32 10, !dbg !10140
  %27 = load ptr, ptr %rollbacks15, align 8, !dbg !10140, !tbaa !1590
  %28 = load ptr, ptr %exec.addr, align 8, !dbg !10141, !tbaa !1527
  %nbRollbacks16 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %28, i32 0, i32 9, !dbg !10142
  %29 = load i32, ptr %nbRollbacks16, align 4, !dbg !10142, !tbaa !1586
  %idxprom17 = sext i32 %29 to i64, !dbg !10137
  %arrayidx18 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %27, i64 %idxprom17, !dbg !10137
  %counts = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx18, i32 0, i32 3, !dbg !10143
  %30 = load ptr, ptr %counts, align 8, !dbg !10143, !tbaa !1780
  %cmp19 = icmp eq ptr %30, null, !dbg !10144
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !10145

if.then20:                                        ; preds = %if.then14
  %31 = load ptr, ptr @stderr, align 8, !dbg !10146, !tbaa !1527
  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %31, ptr noundef @.str.16), !dbg !10148
  %32 = load ptr, ptr %exec.addr, align 8, !dbg !10149, !tbaa !1527
  %status21 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %32, i32 0, i32 0, !dbg !10150
  store i32 -6, ptr %status21, align 8, !dbg !10151, !tbaa !1594
  br label %if.end34, !dbg !10152

if.end22:                                         ; preds = %if.then14
  %33 = load ptr, ptr %exec.addr, align 8, !dbg !10153, !tbaa !1527
  %counts23 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %33, i32 0, i32 11, !dbg !10155
  %34 = load ptr, ptr %counts23, align 8, !dbg !10155, !tbaa !1644
  %tobool = icmp ne ptr %34, null, !dbg !10153
  br i1 %tobool, label %if.then24, label %if.end33, !dbg !10156

if.then24:                                        ; preds = %if.end22
  %35 = load ptr, ptr %exec.addr, align 8, !dbg !10157, !tbaa !1527
  %counts25 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %35, i32 0, i32 11, !dbg !10159
  %36 = load ptr, ptr %counts25, align 8, !dbg !10159, !tbaa !1644
  %37 = load ptr, ptr %exec.addr, align 8, !dbg !10160, !tbaa !1527
  %rollbacks26 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %37, i32 0, i32 10, !dbg !10161
  %38 = load ptr, ptr %rollbacks26, align 8, !dbg !10161, !tbaa !1590
  %39 = load ptr, ptr %exec.addr, align 8, !dbg !10162, !tbaa !1527
  %nbRollbacks27 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %39, i32 0, i32 9, !dbg !10163
  %40 = load i32, ptr %nbRollbacks27, align 4, !dbg !10163, !tbaa !1586
  %idxprom28 = sext i32 %40 to i64, !dbg !10160
  %arrayidx29 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %38, i64 %idxprom28, !dbg !10160
  %counts30 = getelementptr inbounds %struct._xmlRegExecRollback, ptr %arrayidx29, i32 0, i32 3, !dbg !10164
  %41 = load ptr, ptr %counts30, align 8, !dbg !10164, !tbaa !1780
  %42 = load ptr, ptr %exec.addr, align 8, !dbg !10165, !tbaa !1527
  %comp31 = getelementptr inbounds %struct._xmlRegExecCtxt, ptr %42, i32 0, i32 2, !dbg !10166
  %43 = load ptr, ptr %comp31, align 8, !dbg !10166, !tbaa !1599
  %nbCounters32 = getelementptr inbounds %struct._xmlRegexp, ptr %43, i32 0, i32 5, !dbg !10167
  %44 = load i32, ptr %nbCounters32, align 8, !dbg !10167, !tbaa !1632
  %conv = sext i32 %44 to i64, !dbg !10165
  %mul = mul i64 %conv, 4, !dbg !10168
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %36, ptr align 4 %41, i64 %mul, i1 false), !dbg !10169
  br label %if.end33, !dbg !10170

if.end33:                                         ; preds = %if.then24, %if.end22
  br label %if.end34, !dbg !10171

if.end34:                                         ; preds = %if.then, %if.then20, %if.end33, %if.end
  ret void, !dbg !10172
}

declare !dbg !10173 ptr @__xmlGenericError() #5

declare !dbg !10178 ptr @__xmlGenericErrorContext() #5

; Function Attrs: nounwind uwtable
define internal void @xmlRegPrintAtomType(ptr noundef %output, i32 noundef %type) #0 !dbg !10181 {
entry:
  %output.addr = alloca ptr, align 8
  %type.addr = alloca i32, align 4
  store ptr %output, ptr %output.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %output.addr, metadata !10185, metadata !DIExpression()), !dbg !10187
  store i32 %type, ptr %type.addr, align 4, !tbaa !2932
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !10186, metadata !DIExpression()), !dbg !10188
  %0 = load i32, ptr %type.addr, align 4, !dbg !10189, !tbaa !2932
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb3
    i32 4, label %sw.bb5
    i32 5, label %sw.bb7
    i32 6, label %sw.bb9
    i32 7, label %sw.bb11
    i32 8, label %sw.bb13
    i32 9, label %sw.bb15
    i32 10, label %sw.bb17
    i32 11, label %sw.bb19
    i32 12, label %sw.bb21
    i32 13, label %sw.bb23
    i32 14, label %sw.bb25
    i32 15, label %sw.bb27
    i32 16, label %sw.bb29
    i32 100, label %sw.bb31
    i32 101, label %sw.bb33
    i32 102, label %sw.bb35
    i32 103, label %sw.bb37
    i32 104, label %sw.bb39
    i32 105, label %sw.bb41
    i32 106, label %sw.bb43
    i32 107, label %sw.bb45
    i32 108, label %sw.bb47
    i32 109, label %sw.bb49
    i32 110, label %sw.bb51
    i32 111, label %sw.bb53
    i32 112, label %sw.bb55
    i32 113, label %sw.bb57
    i32 114, label %sw.bb59
    i32 115, label %sw.bb61
    i32 116, label %sw.bb63
    i32 117, label %sw.bb65
    i32 118, label %sw.bb67
    i32 119, label %sw.bb69
    i32 120, label %sw.bb71
    i32 121, label %sw.bb73
    i32 122, label %sw.bb75
    i32 123, label %sw.bb77
    i32 124, label %sw.bb79
    i32 125, label %sw.bb81
    i32 126, label %sw.bb83
    i32 127, label %sw.bb85
    i32 128, label %sw.bb87
    i32 129, label %sw.bb89
    i32 130, label %sw.bb91
    i32 131, label %sw.bb93
    i32 132, label %sw.bb95
    i32 133, label %sw.bb97
    i32 134, label %sw.bb99
    i32 135, label %sw.bb101
    i32 136, label %sw.bb103
  ], !dbg !10190

sw.bb:                                            ; preds = %entry
  %1 = load ptr, ptr %output.addr, align 8, !dbg !10191, !tbaa !1527
  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef @.str.25), !dbg !10193
  br label %sw.epilog, !dbg !10194

sw.bb1:                                           ; preds = %entry
  %2 = load ptr, ptr %output.addr, align 8, !dbg !10195, !tbaa !1527
  %call2 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %2, ptr noundef @.str.26), !dbg !10196
  br label %sw.epilog, !dbg !10197

sw.bb3:                                           ; preds = %entry
  %3 = load ptr, ptr %output.addr, align 8, !dbg !10198, !tbaa !1527
  %call4 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %3, ptr noundef @.str.27), !dbg !10199
  br label %sw.epilog, !dbg !10200

sw.bb5:                                           ; preds = %entry
  %4 = load ptr, ptr %output.addr, align 8, !dbg !10201, !tbaa !1527
  %call6 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %4, ptr noundef @.str.28), !dbg !10202
  br label %sw.epilog, !dbg !10203

sw.bb7:                                           ; preds = %entry
  %5 = load ptr, ptr %output.addr, align 8, !dbg !10204, !tbaa !1527
  %call8 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %5, ptr noundef @.str.29), !dbg !10205
  br label %sw.epilog, !dbg !10206

sw.bb9:                                           ; preds = %entry
  %6 = load ptr, ptr %output.addr, align 8, !dbg !10207, !tbaa !1527
  %call10 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %6, ptr noundef @.str.30), !dbg !10208
  br label %sw.epilog, !dbg !10209

sw.bb11:                                          ; preds = %entry
  %7 = load ptr, ptr %output.addr, align 8, !dbg !10210, !tbaa !1527
  %call12 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %7, ptr noundef @.str.31), !dbg !10211
  br label %sw.epilog, !dbg !10212

sw.bb13:                                          ; preds = %entry
  %8 = load ptr, ptr %output.addr, align 8, !dbg !10213, !tbaa !1527
  %call14 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef @.str.32), !dbg !10214
  br label %sw.epilog, !dbg !10215

sw.bb15:                                          ; preds = %entry
  %9 = load ptr, ptr %output.addr, align 8, !dbg !10216, !tbaa !1527
  %call16 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %9, ptr noundef @.str.33), !dbg !10217
  br label %sw.epilog, !dbg !10218

sw.bb17:                                          ; preds = %entry
  %10 = load ptr, ptr %output.addr, align 8, !dbg !10219, !tbaa !1527
  %call18 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %10, ptr noundef @.str.34), !dbg !10220
  br label %sw.epilog, !dbg !10221

sw.bb19:                                          ; preds = %entry
  %11 = load ptr, ptr %output.addr, align 8, !dbg !10222, !tbaa !1527
  %call20 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %11, ptr noundef @.str.35), !dbg !10223
  br label %sw.epilog, !dbg !10224

sw.bb21:                                          ; preds = %entry
  %12 = load ptr, ptr %output.addr, align 8, !dbg !10225, !tbaa !1527
  %call22 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %12, ptr noundef @.str.36), !dbg !10226
  br label %sw.epilog, !dbg !10227

sw.bb23:                                          ; preds = %entry
  %13 = load ptr, ptr %output.addr, align 8, !dbg !10228, !tbaa !1527
  %call24 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %13, ptr noundef @.str.37), !dbg !10229
  br label %sw.epilog, !dbg !10230

sw.bb25:                                          ; preds = %entry
  %14 = load ptr, ptr %output.addr, align 8, !dbg !10231, !tbaa !1527
  %call26 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %14, ptr noundef @.str.38), !dbg !10232
  br label %sw.epilog, !dbg !10233

sw.bb27:                                          ; preds = %entry
  %15 = load ptr, ptr %output.addr, align 8, !dbg !10234, !tbaa !1527
  %call28 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %15, ptr noundef @.str.39), !dbg !10235
  br label %sw.epilog, !dbg !10236

sw.bb29:                                          ; preds = %entry
  %16 = load ptr, ptr %output.addr, align 8, !dbg !10237, !tbaa !1527
  %call30 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %16, ptr noundef @.str.40), !dbg !10238
  br label %sw.epilog, !dbg !10239

sw.bb31:                                          ; preds = %entry
  %17 = load ptr, ptr %output.addr, align 8, !dbg !10240, !tbaa !1527
  %call32 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %17, ptr noundef @.str.41), !dbg !10241
  br label %sw.epilog, !dbg !10242

sw.bb33:                                          ; preds = %entry
  %18 = load ptr, ptr %output.addr, align 8, !dbg !10243, !tbaa !1527
  %call34 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %18, ptr noundef @.str.42), !dbg !10244
  br label %sw.epilog, !dbg !10245

sw.bb35:                                          ; preds = %entry
  %19 = load ptr, ptr %output.addr, align 8, !dbg !10246, !tbaa !1527
  %call36 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %19, ptr noundef @.str.43), !dbg !10247
  br label %sw.epilog, !dbg !10248

sw.bb37:                                          ; preds = %entry
  %20 = load ptr, ptr %output.addr, align 8, !dbg !10249, !tbaa !1527
  %call38 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %20, ptr noundef @.str.44), !dbg !10250
  br label %sw.epilog, !dbg !10251

sw.bb39:                                          ; preds = %entry
  %21 = load ptr, ptr %output.addr, align 8, !dbg !10252, !tbaa !1527
  %call40 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %21, ptr noundef @.str.45), !dbg !10253
  br label %sw.epilog, !dbg !10254

sw.bb41:                                          ; preds = %entry
  %22 = load ptr, ptr %output.addr, align 8, !dbg !10255, !tbaa !1527
  %call42 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %22, ptr noundef @.str.46), !dbg !10256
  br label %sw.epilog, !dbg !10257

sw.bb43:                                          ; preds = %entry
  %23 = load ptr, ptr %output.addr, align 8, !dbg !10258, !tbaa !1527
  %call44 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %23, ptr noundef @.str.47), !dbg !10259
  br label %sw.epilog, !dbg !10260

sw.bb45:                                          ; preds = %entry
  %24 = load ptr, ptr %output.addr, align 8, !dbg !10261, !tbaa !1527
  %call46 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %24, ptr noundef @.str.48), !dbg !10262
  br label %sw.epilog, !dbg !10263

sw.bb47:                                          ; preds = %entry
  %25 = load ptr, ptr %output.addr, align 8, !dbg !10264, !tbaa !1527
  %call48 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %25, ptr noundef @.str.49), !dbg !10265
  br label %sw.epilog, !dbg !10266

sw.bb49:                                          ; preds = %entry
  %26 = load ptr, ptr %output.addr, align 8, !dbg !10267, !tbaa !1527
  %call50 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %26, ptr noundef @.str.50), !dbg !10268
  br label %sw.epilog, !dbg !10269

sw.bb51:                                          ; preds = %entry
  %27 = load ptr, ptr %output.addr, align 8, !dbg !10270, !tbaa !1527
  %call52 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %27, ptr noundef @.str.51), !dbg !10271
  br label %sw.epilog, !dbg !10272

sw.bb53:                                          ; preds = %entry
  %28 = load ptr, ptr %output.addr, align 8, !dbg !10273, !tbaa !1527
  %call54 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %28, ptr noundef @.str.52), !dbg !10274
  br label %sw.epilog, !dbg !10275

sw.bb55:                                          ; preds = %entry
  %29 = load ptr, ptr %output.addr, align 8, !dbg !10276, !tbaa !1527
  %call56 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %29, ptr noundef @.str.53), !dbg !10277
  br label %sw.epilog, !dbg !10278

sw.bb57:                                          ; preds = %entry
  %30 = load ptr, ptr %output.addr, align 8, !dbg !10279, !tbaa !1527
  %call58 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %30, ptr noundef @.str.54), !dbg !10280
  br label %sw.epilog, !dbg !10281

sw.bb59:                                          ; preds = %entry
  %31 = load ptr, ptr %output.addr, align 8, !dbg !10282, !tbaa !1527
  %call60 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %31, ptr noundef @.str.55), !dbg !10283
  br label %sw.epilog, !dbg !10284

sw.bb61:                                          ; preds = %entry
  %32 = load ptr, ptr %output.addr, align 8, !dbg !10285, !tbaa !1527
  %call62 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %32, ptr noundef @.str.56), !dbg !10286
  br label %sw.epilog, !dbg !10287

sw.bb63:                                          ; preds = %entry
  %33 = load ptr, ptr %output.addr, align 8, !dbg !10288, !tbaa !1527
  %call64 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %33, ptr noundef @.str.57), !dbg !10289
  br label %sw.epilog, !dbg !10290

sw.bb65:                                          ; preds = %entry
  %34 = load ptr, ptr %output.addr, align 8, !dbg !10291, !tbaa !1527
  %call66 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %34, ptr noundef @.str.58), !dbg !10292
  br label %sw.epilog, !dbg !10293

sw.bb67:                                          ; preds = %entry
  %35 = load ptr, ptr %output.addr, align 8, !dbg !10294, !tbaa !1527
  %call68 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %35, ptr noundef @.str.59), !dbg !10295
  br label %sw.epilog, !dbg !10296

sw.bb69:                                          ; preds = %entry
  %36 = load ptr, ptr %output.addr, align 8, !dbg !10297, !tbaa !1527
  %call70 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %36, ptr noundef @.str.60), !dbg !10298
  br label %sw.epilog, !dbg !10299

sw.bb71:                                          ; preds = %entry
  %37 = load ptr, ptr %output.addr, align 8, !dbg !10300, !tbaa !1527
  %call72 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %37, ptr noundef @.str.61), !dbg !10301
  br label %sw.epilog, !dbg !10302

sw.bb73:                                          ; preds = %entry
  %38 = load ptr, ptr %output.addr, align 8, !dbg !10303, !tbaa !1527
  %call74 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %38, ptr noundef @.str.62), !dbg !10304
  br label %sw.epilog, !dbg !10305

sw.bb75:                                          ; preds = %entry
  %39 = load ptr, ptr %output.addr, align 8, !dbg !10306, !tbaa !1527
  %call76 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %39, ptr noundef @.str.63), !dbg !10307
  br label %sw.epilog, !dbg !10308

sw.bb77:                                          ; preds = %entry
  %40 = load ptr, ptr %output.addr, align 8, !dbg !10309, !tbaa !1527
  %call78 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %40, ptr noundef @.str.64), !dbg !10310
  br label %sw.epilog, !dbg !10311

sw.bb79:                                          ; preds = %entry
  %41 = load ptr, ptr %output.addr, align 8, !dbg !10312, !tbaa !1527
  %call80 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %41, ptr noundef @.str.65), !dbg !10313
  br label %sw.epilog, !dbg !10314

sw.bb81:                                          ; preds = %entry
  %42 = load ptr, ptr %output.addr, align 8, !dbg !10315, !tbaa !1527
  %call82 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %42, ptr noundef @.str.66), !dbg !10316
  br label %sw.epilog, !dbg !10317

sw.bb83:                                          ; preds = %entry
  %43 = load ptr, ptr %output.addr, align 8, !dbg !10318, !tbaa !1527
  %call84 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %43, ptr noundef @.str.67), !dbg !10319
  br label %sw.epilog, !dbg !10320

sw.bb85:                                          ; preds = %entry
  %44 = load ptr, ptr %output.addr, align 8, !dbg !10321, !tbaa !1527
  %call86 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %44, ptr noundef @.str.68), !dbg !10322
  br label %sw.epilog, !dbg !10323

sw.bb87:                                          ; preds = %entry
  %45 = load ptr, ptr %output.addr, align 8, !dbg !10324, !tbaa !1527
  %call88 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %45, ptr noundef @.str.69), !dbg !10325
  br label %sw.epilog, !dbg !10326

sw.bb89:                                          ; preds = %entry
  %46 = load ptr, ptr %output.addr, align 8, !dbg !10327, !tbaa !1527
  %call90 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %46, ptr noundef @.str.70), !dbg !10328
  br label %sw.epilog, !dbg !10329

sw.bb91:                                          ; preds = %entry
  %47 = load ptr, ptr %output.addr, align 8, !dbg !10330, !tbaa !1527
  %call92 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %47, ptr noundef @.str.71), !dbg !10331
  br label %sw.epilog, !dbg !10332

sw.bb93:                                          ; preds = %entry
  %48 = load ptr, ptr %output.addr, align 8, !dbg !10333, !tbaa !1527
  %call94 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %48, ptr noundef @.str.72), !dbg !10334
  br label %sw.epilog, !dbg !10335

sw.bb95:                                          ; preds = %entry
  %49 = load ptr, ptr %output.addr, align 8, !dbg !10336, !tbaa !1527
  %call96 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %49, ptr noundef @.str.73), !dbg !10337
  br label %sw.epilog, !dbg !10338

sw.bb97:                                          ; preds = %entry
  %50 = load ptr, ptr %output.addr, align 8, !dbg !10339, !tbaa !1527
  %call98 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %50, ptr noundef @.str.74), !dbg !10340
  br label %sw.epilog, !dbg !10341

sw.bb99:                                          ; preds = %entry
  %51 = load ptr, ptr %output.addr, align 8, !dbg !10342, !tbaa !1527
  %call100 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %51, ptr noundef @.str.75), !dbg !10343
  br label %sw.epilog, !dbg !10344

sw.bb101:                                         ; preds = %entry
  %52 = load ptr, ptr %output.addr, align 8, !dbg !10345, !tbaa !1527
  %call102 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %52, ptr noundef @.str.76), !dbg !10346
  br label %sw.epilog, !dbg !10347

sw.bb103:                                         ; preds = %entry
  %53 = load ptr, ptr %output.addr, align 8, !dbg !10348, !tbaa !1527
  %call104 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %53, ptr noundef @.str.77), !dbg !10349
  br label %sw.epilog, !dbg !10350

sw.epilog:                                        ; preds = %entry, %sw.bb103, %sw.bb101, %sw.bb99, %sw.bb97, %sw.bb95, %sw.bb93, %sw.bb91, %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb71, %sw.bb69, %sw.bb67, %sw.bb65, %sw.bb63, %sw.bb61, %sw.bb59, %sw.bb57, %sw.bb55, %sw.bb53, %sw.bb51, %sw.bb49, %sw.bb47, %sw.bb45, %sw.bb43, %sw.bb41, %sw.bb39, %sw.bb37, %sw.bb35, %sw.bb33, %sw.bb31, %sw.bb29, %sw.bb27, %sw.bb25, %sw.bb23, %sw.bb21, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  ret void, !dbg !10351
}

; Function Attrs: nounwind uwtable
define internal void @xmlRegPrintQuantType(ptr noundef %output, i32 noundef %type) #0 !dbg !10352 {
entry:
  %output.addr = alloca ptr, align 8
  %type.addr = alloca i32, align 4
  store ptr %output, ptr %output.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %output.addr, metadata !10356, metadata !DIExpression()), !dbg !10358
  store i32 %type, ptr %type.addr, align 4, !tbaa !2932
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !10357, metadata !DIExpression()), !dbg !10359
  %0 = load i32, ptr %type.addr, align 4, !dbg !10360, !tbaa !2932
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb3
    i32 4, label %sw.bb5
    i32 5, label %sw.bb7
    i32 8, label %sw.bb9
    i32 6, label %sw.bb11
    i32 7, label %sw.bb13
  ], !dbg !10361

sw.bb:                                            ; preds = %entry
  %1 = load ptr, ptr %output.addr, align 8, !dbg !10362, !tbaa !1527
  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef @.str.25), !dbg !10364
  br label %sw.epilog, !dbg !10365

sw.bb1:                                           ; preds = %entry
  %2 = load ptr, ptr %output.addr, align 8, !dbg !10366, !tbaa !1527
  %call2 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %2, ptr noundef @.str.78), !dbg !10367
  br label %sw.epilog, !dbg !10368

sw.bb3:                                           ; preds = %entry
  %3 = load ptr, ptr %output.addr, align 8, !dbg !10369, !tbaa !1527
  %call4 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %3, ptr noundef @.str.79), !dbg !10370
  br label %sw.epilog, !dbg !10371

sw.bb5:                                           ; preds = %entry
  %4 = load ptr, ptr %output.addr, align 8, !dbg !10372, !tbaa !1527
  %call6 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %4, ptr noundef @.str.80), !dbg !10373
  br label %sw.epilog, !dbg !10374

sw.bb7:                                           ; preds = %entry
  %5 = load ptr, ptr %output.addr, align 8, !dbg !10375, !tbaa !1527
  %call8 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %5, ptr noundef @.str.81), !dbg !10376
  br label %sw.epilog, !dbg !10377

sw.bb9:                                           ; preds = %entry
  %6 = load ptr, ptr %output.addr, align 8, !dbg !10378, !tbaa !1527
  %call10 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %6, ptr noundef @.str.82), !dbg !10379
  br label %sw.epilog, !dbg !10380

sw.bb11:                                          ; preds = %entry
  %7 = load ptr, ptr %output.addr, align 8, !dbg !10381, !tbaa !1527
  %call12 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %7, ptr noundef @.str.83), !dbg !10382
  br label %sw.epilog, !dbg !10383

sw.bb13:                                          ; preds = %entry
  %8 = load ptr, ptr %output.addr, align 8, !dbg !10384, !tbaa !1527
  %call14 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef @.str.84), !dbg !10385
  br label %sw.epilog, !dbg !10386

sw.epilog:                                        ; preds = %entry, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  ret void, !dbg !10387
}

; Function Attrs: nounwind uwtable
define internal void @xmlRegPrintRange(ptr noundef %output, ptr noundef %range) #0 !dbg !10388 {
entry:
  %output.addr = alloca ptr, align 8
  %range.addr = alloca ptr, align 8
  store ptr %output, ptr %output.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %output.addr, metadata !10392, metadata !DIExpression()), !dbg !10394
  store ptr %range, ptr %range.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %range.addr, metadata !10393, metadata !DIExpression()), !dbg !10395
  %0 = load ptr, ptr %output.addr, align 8, !dbg !10396, !tbaa !1527
  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %0, ptr noundef @.str.85), !dbg !10397
  %1 = load ptr, ptr %range.addr, align 8, !dbg !10398, !tbaa !1527
  %neg = getelementptr inbounds %struct._xmlRegRange, ptr %1, i32 0, i32 0, !dbg !10400
  %2 = load i32, ptr %neg, align 8, !dbg !10400, !tbaa !10401
  %tobool = icmp ne i32 %2, 0, !dbg !10398
  br i1 %tobool, label %if.then, label %if.end, !dbg !10403

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %output.addr, align 8, !dbg !10404, !tbaa !1527
  %call1 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %3, ptr noundef @.str.86), !dbg !10405
  br label %if.end, !dbg !10405

if.end:                                           ; preds = %if.then, %entry
  %4 = load ptr, ptr %output.addr, align 8, !dbg !10406, !tbaa !1527
  %5 = load ptr, ptr %range.addr, align 8, !dbg !10407, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlRegRange, ptr %5, i32 0, i32 1, !dbg !10408
  %6 = load i32, ptr %type, align 4, !dbg !10408, !tbaa !10409
  call void @xmlRegPrintAtomType(ptr noundef %4, i32 noundef %6), !dbg !10410
  %7 = load ptr, ptr %output.addr, align 8, !dbg !10411, !tbaa !1527
  %8 = load ptr, ptr %range.addr, align 8, !dbg !10412, !tbaa !1527
  %start = getelementptr inbounds %struct._xmlRegRange, ptr %8, i32 0, i32 2, !dbg !10413
  %9 = load i32, ptr %start, align 8, !dbg !10413, !tbaa !10414
  %10 = load ptr, ptr %range.addr, align 8, !dbg !10415, !tbaa !1527
  %end = getelementptr inbounds %struct._xmlRegRange, ptr %10, i32 0, i32 3, !dbg !10416
  %11 = load i32, ptr %end, align 4, !dbg !10416, !tbaa !10417
  %call2 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %7, ptr noundef @.str.87, i32 noundef %9, i32 noundef %11), !dbg !10418
  ret void, !dbg !10419
}

; Function Attrs: nounwind uwtable
define internal void @xmlRegPrintTrans(ptr noundef %output, ptr noundef %trans) #0 !dbg !10420 {
entry:
  %output.addr = alloca ptr, align 8
  %trans.addr = alloca ptr, align 8
  store ptr %output, ptr %output.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %output.addr, metadata !10424, metadata !DIExpression()), !dbg !10426
  store ptr %trans, ptr %trans.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %trans.addr, metadata !10425, metadata !DIExpression()), !dbg !10427
  %0 = load ptr, ptr %output.addr, align 8, !dbg !10428, !tbaa !1527
  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %0, ptr noundef @.str.92), !dbg !10429
  %1 = load ptr, ptr %trans.addr, align 8, !dbg !10430, !tbaa !1527
  %cmp = icmp eq ptr %1, null, !dbg !10432
  br i1 %cmp, label %if.then, label %if.end, !dbg !10433

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %output.addr, align 8, !dbg !10434, !tbaa !1527
  %call1 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %2, ptr noundef @.str.2), !dbg !10436
  br label %return, !dbg !10437

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %trans.addr, align 8, !dbg !10438, !tbaa !1527
  %to = getelementptr inbounds %struct._xmlRegTrans, ptr %3, i32 0, i32 1, !dbg !10440
  %4 = load i32, ptr %to, align 8, !dbg !10440, !tbaa !2065
  %cmp2 = icmp slt i32 %4, 0, !dbg !10441
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !10442

if.then3:                                         ; preds = %if.end
  %5 = load ptr, ptr %output.addr, align 8, !dbg !10443, !tbaa !1527
  %call4 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %5, ptr noundef @.str.93), !dbg !10445
  br label %return, !dbg !10446

if.end5:                                          ; preds = %if.end
  %6 = load ptr, ptr %trans.addr, align 8, !dbg !10447, !tbaa !1527
  %nd = getelementptr inbounds %struct._xmlRegTrans, ptr %6, i32 0, i32 4, !dbg !10449
  %7 = load i32, ptr %nd, align 4, !dbg !10449, !tbaa !6346
  %cmp6 = icmp ne i32 %7, 0, !dbg !10450
  br i1 %cmp6, label %if.then7, label %if.end14, !dbg !10451

if.then7:                                         ; preds = %if.end5
  %8 = load ptr, ptr %trans.addr, align 8, !dbg !10452, !tbaa !1527
  %nd8 = getelementptr inbounds %struct._xmlRegTrans, ptr %8, i32 0, i32 4, !dbg !10455
  %9 = load i32, ptr %nd8, align 4, !dbg !10455, !tbaa !6346
  %cmp9 = icmp eq i32 %9, 2, !dbg !10456
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !10457

if.then10:                                        ; preds = %if.then7
  %10 = load ptr, ptr %output.addr, align 8, !dbg !10458, !tbaa !1527
  %call11 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %10, ptr noundef @.str.94), !dbg !10459
  br label %if.end13, !dbg !10459

if.else:                                          ; preds = %if.then7
  %11 = load ptr, ptr %output.addr, align 8, !dbg !10460, !tbaa !1527
  %call12 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %11, ptr noundef @.str.95), !dbg !10461
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then10
  br label %if.end14, !dbg !10462

if.end14:                                         ; preds = %if.end13, %if.end5
  %12 = load ptr, ptr %trans.addr, align 8, !dbg !10463, !tbaa !1527
  %counter = getelementptr inbounds %struct._xmlRegTrans, ptr %12, i32 0, i32 2, !dbg !10465
  %13 = load i32, ptr %counter, align 4, !dbg !10465, !tbaa !2123
  %cmp15 = icmp sge i32 %13, 0, !dbg !10466
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !10467

if.then16:                                        ; preds = %if.end14
  %14 = load ptr, ptr %output.addr, align 8, !dbg !10468, !tbaa !1527
  %15 = load ptr, ptr %trans.addr, align 8, !dbg !10470, !tbaa !1527
  %counter17 = getelementptr inbounds %struct._xmlRegTrans, ptr %15, i32 0, i32 2, !dbg !10471
  %16 = load i32, ptr %counter17, align 4, !dbg !10471, !tbaa !2123
  %call18 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %14, ptr noundef @.str.96, i32 noundef %16), !dbg !10472
  br label %if.end19, !dbg !10473

if.end19:                                         ; preds = %if.then16, %if.end14
  %17 = load ptr, ptr %trans.addr, align 8, !dbg !10474, !tbaa !1527
  %count = getelementptr inbounds %struct._xmlRegTrans, ptr %17, i32 0, i32 3, !dbg !10476
  %18 = load i32, ptr %count, align 8, !dbg !10476, !tbaa !2077
  %cmp20 = icmp eq i32 %18, 1193046, !dbg !10477
  br i1 %cmp20, label %if.then21, label %if.else23, !dbg !10478

if.then21:                                        ; preds = %if.end19
  %19 = load ptr, ptr %output.addr, align 8, !dbg !10479, !tbaa !1527
  %call22 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %19, ptr noundef @.str.97), !dbg !10481
  br label %if.end30, !dbg !10482

if.else23:                                        ; preds = %if.end19
  %20 = load ptr, ptr %trans.addr, align 8, !dbg !10483, !tbaa !1527
  %count24 = getelementptr inbounds %struct._xmlRegTrans, ptr %20, i32 0, i32 3, !dbg !10485
  %21 = load i32, ptr %count24, align 8, !dbg !10485, !tbaa !2077
  %cmp25 = icmp sge i32 %21, 0, !dbg !10486
  br i1 %cmp25, label %if.then26, label %if.end29, !dbg !10487

if.then26:                                        ; preds = %if.else23
  %22 = load ptr, ptr %output.addr, align 8, !dbg !10488, !tbaa !1527
  %23 = load ptr, ptr %trans.addr, align 8, !dbg !10490, !tbaa !1527
  %count27 = getelementptr inbounds %struct._xmlRegTrans, ptr %23, i32 0, i32 3, !dbg !10491
  %24 = load i32, ptr %count27, align 8, !dbg !10491, !tbaa !2077
  %call28 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %22, ptr noundef @.str.98, i32 noundef %24), !dbg !10492
  br label %if.end29, !dbg !10493

if.end29:                                         ; preds = %if.then26, %if.else23
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then21
  %25 = load ptr, ptr %trans.addr, align 8, !dbg !10494, !tbaa !1527
  %atom = getelementptr inbounds %struct._xmlRegTrans, ptr %25, i32 0, i32 0, !dbg !10496
  %26 = load ptr, ptr %atom, align 8, !dbg !10496, !tbaa !2072
  %cmp31 = icmp eq ptr %26, null, !dbg !10497
  br i1 %cmp31, label %if.then32, label %if.end35, !dbg !10498

if.then32:                                        ; preds = %if.end30
  %27 = load ptr, ptr %output.addr, align 8, !dbg !10499, !tbaa !1527
  %28 = load ptr, ptr %trans.addr, align 8, !dbg !10501, !tbaa !1527
  %to33 = getelementptr inbounds %struct._xmlRegTrans, ptr %28, i32 0, i32 1, !dbg !10502
  %29 = load i32, ptr %to33, align 8, !dbg !10502, !tbaa !2065
  %call34 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %27, ptr noundef @.str.99, i32 noundef %29), !dbg !10503
  br label %return, !dbg !10504

if.end35:                                         ; preds = %if.end30
  %30 = load ptr, ptr %trans.addr, align 8, !dbg !10505, !tbaa !1527
  %atom36 = getelementptr inbounds %struct._xmlRegTrans, ptr %30, i32 0, i32 0, !dbg !10507
  %31 = load ptr, ptr %atom36, align 8, !dbg !10507, !tbaa !2072
  %type = getelementptr inbounds %struct._xmlRegAtom, ptr %31, i32 0, i32 1, !dbg !10508
  %32 = load i32, ptr %type, align 4, !dbg !10508, !tbaa !3988
  %cmp37 = icmp eq i32 %32, 2, !dbg !10509
  br i1 %cmp37, label %if.then38, label %if.end41, !dbg !10510

if.then38:                                        ; preds = %if.end35
  %33 = load ptr, ptr %output.addr, align 8, !dbg !10511, !tbaa !1527
  %34 = load ptr, ptr %trans.addr, align 8, !dbg !10512, !tbaa !1527
  %atom39 = getelementptr inbounds %struct._xmlRegTrans, ptr %34, i32 0, i32 0, !dbg !10513
  %35 = load ptr, ptr %atom39, align 8, !dbg !10513, !tbaa !2072
  %codepoint = getelementptr inbounds %struct._xmlRegAtom, ptr %35, i32 0, i32 8, !dbg !10514
  %36 = load i32, ptr %codepoint, align 4, !dbg !10514, !tbaa !4022
  %call40 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %33, ptr noundef @.str.100, i32 noundef %36), !dbg !10515
  br label %if.end41, !dbg !10515

if.end41:                                         ; preds = %if.then38, %if.end35
  %37 = load ptr, ptr %output.addr, align 8, !dbg !10516, !tbaa !1527
  %38 = load ptr, ptr %trans.addr, align 8, !dbg !10517, !tbaa !1527
  %atom42 = getelementptr inbounds %struct._xmlRegTrans, ptr %38, i32 0, i32 0, !dbg !10518
  %39 = load ptr, ptr %atom42, align 8, !dbg !10518, !tbaa !2072
  %no = getelementptr inbounds %struct._xmlRegAtom, ptr %39, i32 0, i32 0, !dbg !10519
  %40 = load i32, ptr %no, align 8, !dbg !10519, !tbaa !5514
  %41 = load ptr, ptr %trans.addr, align 8, !dbg !10520, !tbaa !1527
  %to43 = getelementptr inbounds %struct._xmlRegTrans, ptr %41, i32 0, i32 1, !dbg !10521
  %42 = load i32, ptr %to43, align 8, !dbg !10521, !tbaa !2065
  %call44 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %37, ptr noundef @.str.101, i32 noundef %40, i32 noundef %42), !dbg !10522
  br label %return, !dbg !10523

return:                                           ; preds = %if.end41, %if.then32, %if.then3, %if.then
  ret void, !dbg !10523
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlFAParseBranch(ptr noundef %ctxt, ptr noundef %to) #0 !dbg !10524 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %to.addr = alloca ptr, align 8
  %previous = alloca ptr, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !10526, metadata !DIExpression()), !dbg !10530
  store ptr %to, ptr %to.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !10527, metadata !DIExpression()), !dbg !10531
  call void @llvm.lifetime.start.p0(i64 8, ptr %previous) #8, !dbg !10532
  tail call void @llvm.dbg.declare(metadata ptr %previous, metadata !10528, metadata !DIExpression()), !dbg !10533
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !10534
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !10529, metadata !DIExpression()), !dbg !10535
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !10536, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 6, !dbg !10537
  %1 = load ptr, ptr %state, align 8, !dbg !10537, !tbaa !4169
  store ptr %1, ptr %previous, align 8, !dbg !10538, !tbaa !1527
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !10539, !tbaa !1527
  %call = call i32 @xmlFAParsePiece(ptr noundef %2), !dbg !10540
  store i32 %call, ptr %ret, align 4, !dbg !10541, !tbaa !1767
  %3 = load i32, ptr %ret, align 4, !dbg !10542, !tbaa !1767
  %cmp = icmp eq i32 %3, 0, !dbg !10544
  br i1 %cmp, label %if.then, label %if.else, !dbg !10545

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !10546, !tbaa !1527
  %5 = load ptr, ptr %previous, align 8, !dbg !10548, !tbaa !1527
  %6 = load ptr, ptr %to.addr, align 8, !dbg !10549, !tbaa !1527
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %4, ptr noundef %5, ptr noundef %6), !dbg !10550
  br label %if.end18, !dbg !10551

if.else:                                          ; preds = %entry
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !10552, !tbaa !1527
  %8 = load ptr, ptr %previous, align 8, !dbg !10555, !tbaa !1527
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !10556, !tbaa !1527
  %cur = getelementptr inbounds %struct._xmlAutomata, ptr %9, i32 0, i32 1, !dbg !10556
  %10 = load ptr, ptr %cur, align 8, !dbg !10556, !tbaa !4182
  %11 = load i8, ptr %10, align 1, !dbg !10556, !tbaa !2932
  %conv = zext i8 %11 to i32, !dbg !10556
  %cmp1 = icmp eq i32 %conv, 124, !dbg !10557
  br i1 %cmp1, label %cond.true, label %lor.lhs.false, !dbg !10558

lor.lhs.false:                                    ; preds = %if.else
  %12 = load ptr, ptr %ctxt.addr, align 8, !dbg !10559, !tbaa !1527
  %cur3 = getelementptr inbounds %struct._xmlAutomata, ptr %12, i32 0, i32 1, !dbg !10559
  %13 = load ptr, ptr %cur3, align 8, !dbg !10559, !tbaa !4182
  %14 = load i8, ptr %13, align 1, !dbg !10559, !tbaa !2932
  %conv4 = zext i8 %14 to i32, !dbg !10559
  %cmp5 = icmp eq i32 %conv4, 41, !dbg !10560
  br i1 %cmp5, label %cond.true, label %lor.lhs.false7, !dbg !10561

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %15 = load ptr, ptr %ctxt.addr, align 8, !dbg !10562, !tbaa !1527
  %cur8 = getelementptr inbounds %struct._xmlAutomata, ptr %15, i32 0, i32 1, !dbg !10562
  %16 = load ptr, ptr %cur8, align 8, !dbg !10562, !tbaa !4182
  %17 = load i8, ptr %16, align 1, !dbg !10562, !tbaa !2932
  %conv9 = zext i8 %17 to i32, !dbg !10562
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !10563
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !10564

cond.true:                                        ; preds = %lor.lhs.false7, %lor.lhs.false, %if.else
  %18 = load ptr, ptr %to.addr, align 8, !dbg !10565, !tbaa !1527
  br label %cond.end, !dbg !10564

cond.false:                                       ; preds = %lor.lhs.false7
  br label %cond.end, !dbg !10564

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %18, %cond.true ], [ null, %cond.false ], !dbg !10564
  %19 = load ptr, ptr %ctxt.addr, align 8, !dbg !10566, !tbaa !1527
  %atom = getelementptr inbounds %struct._xmlAutomata, ptr %19, i32 0, i32 7, !dbg !10567
  %20 = load ptr, ptr %atom, align 8, !dbg !10567, !tbaa !10568
  %call12 = call i32 @xmlFAGenerateTransitions(ptr noundef %7, ptr noundef %8, ptr noundef %cond, ptr noundef %20), !dbg !10569
  %cmp13 = icmp slt i32 %call12, 0, !dbg !10570
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !10571

if.then15:                                        ; preds = %cond.end
  store i32 -1, ptr %retval, align 4, !dbg !10572
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10572

if.end:                                           ; preds = %cond.end
  %21 = load ptr, ptr %ctxt.addr, align 8, !dbg !10573, !tbaa !1527
  %state16 = getelementptr inbounds %struct._xmlAutomata, ptr %21, i32 0, i32 6, !dbg !10574
  %22 = load ptr, ptr %state16, align 8, !dbg !10574, !tbaa !4169
  store ptr %22, ptr %previous, align 8, !dbg !10575, !tbaa !1527
  %23 = load ptr, ptr %ctxt.addr, align 8, !dbg !10576, !tbaa !1527
  %atom17 = getelementptr inbounds %struct._xmlAutomata, ptr %23, i32 0, i32 7, !dbg !10577
  store ptr null, ptr %atom17, align 8, !dbg !10578, !tbaa !10568
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then
  br label %while.cond, !dbg !10579

while.cond:                                       ; preds = %if.end53, %if.end18
  %24 = load i32, ptr %ret, align 4, !dbg !10580, !tbaa !1767
  %cmp19 = icmp ne i32 %24, 0, !dbg !10581
  br i1 %cmp19, label %land.rhs, label %land.end, !dbg !10582

land.rhs:                                         ; preds = %while.cond
  %25 = load ptr, ptr %ctxt.addr, align 8, !dbg !10583, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %25, i32 0, i32 2, !dbg !10584
  %26 = load i32, ptr %error, align 8, !dbg !10584, !tbaa !1729
  %cmp21 = icmp eq i32 %26, 0, !dbg !10585
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %27 = phi i1 [ false, %while.cond ], [ %cmp21, %land.rhs ], !dbg !10586
  br i1 %27, label %while.body, label %while.end, !dbg !10579

while.body:                                       ; preds = %land.end
  %28 = load ptr, ptr %ctxt.addr, align 8, !dbg !10587, !tbaa !1527
  %call23 = call i32 @xmlFAParsePiece(ptr noundef %28), !dbg !10589
  store i32 %call23, ptr %ret, align 4, !dbg !10590, !tbaa !1767
  %29 = load i32, ptr %ret, align 4, !dbg !10591, !tbaa !1767
  %cmp24 = icmp ne i32 %29, 0, !dbg !10593
  br i1 %cmp24, label %if.then26, label %if.end53, !dbg !10594

if.then26:                                        ; preds = %while.body
  %30 = load ptr, ptr %ctxt.addr, align 8, !dbg !10595, !tbaa !1527
  %31 = load ptr, ptr %previous, align 8, !dbg !10598, !tbaa !1527
  %32 = load ptr, ptr %ctxt.addr, align 8, !dbg !10599, !tbaa !1527
  %cur27 = getelementptr inbounds %struct._xmlAutomata, ptr %32, i32 0, i32 1, !dbg !10599
  %33 = load ptr, ptr %cur27, align 8, !dbg !10599, !tbaa !4182
  %34 = load i8, ptr %33, align 1, !dbg !10599, !tbaa !2932
  %conv28 = zext i8 %34 to i32, !dbg !10599
  %cmp29 = icmp eq i32 %conv28, 124, !dbg !10600
  br i1 %cmp29, label %cond.true41, label %lor.lhs.false31, !dbg !10601

lor.lhs.false31:                                  ; preds = %if.then26
  %35 = load ptr, ptr %ctxt.addr, align 8, !dbg !10602, !tbaa !1527
  %cur32 = getelementptr inbounds %struct._xmlAutomata, ptr %35, i32 0, i32 1, !dbg !10602
  %36 = load ptr, ptr %cur32, align 8, !dbg !10602, !tbaa !4182
  %37 = load i8, ptr %36, align 1, !dbg !10602, !tbaa !2932
  %conv33 = zext i8 %37 to i32, !dbg !10602
  %cmp34 = icmp eq i32 %conv33, 41, !dbg !10603
  br i1 %cmp34, label %cond.true41, label %lor.lhs.false36, !dbg !10604

lor.lhs.false36:                                  ; preds = %lor.lhs.false31
  %38 = load ptr, ptr %ctxt.addr, align 8, !dbg !10605, !tbaa !1527
  %cur37 = getelementptr inbounds %struct._xmlAutomata, ptr %38, i32 0, i32 1, !dbg !10605
  %39 = load ptr, ptr %cur37, align 8, !dbg !10605, !tbaa !4182
  %40 = load i8, ptr %39, align 1, !dbg !10605, !tbaa !2932
  %conv38 = zext i8 %40 to i32, !dbg !10605
  %cmp39 = icmp eq i32 %conv38, 0, !dbg !10606
  br i1 %cmp39, label %cond.true41, label %cond.false42, !dbg !10607

cond.true41:                                      ; preds = %lor.lhs.false36, %lor.lhs.false31, %if.then26
  %41 = load ptr, ptr %to.addr, align 8, !dbg !10608, !tbaa !1527
  br label %cond.end43, !dbg !10607

cond.false42:                                     ; preds = %lor.lhs.false36
  br label %cond.end43, !dbg !10607

cond.end43:                                       ; preds = %cond.false42, %cond.true41
  %cond44 = phi ptr [ %41, %cond.true41 ], [ null, %cond.false42 ], !dbg !10607
  %42 = load ptr, ptr %ctxt.addr, align 8, !dbg !10609, !tbaa !1527
  %atom45 = getelementptr inbounds %struct._xmlAutomata, ptr %42, i32 0, i32 7, !dbg !10610
  %43 = load ptr, ptr %atom45, align 8, !dbg !10610, !tbaa !10568
  %call46 = call i32 @xmlFAGenerateTransitions(ptr noundef %30, ptr noundef %31, ptr noundef %cond44, ptr noundef %43), !dbg !10611
  %cmp47 = icmp slt i32 %call46, 0, !dbg !10612
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !10613

if.then49:                                        ; preds = %cond.end43
  store i32 -1, ptr %retval, align 4, !dbg !10614
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10614

if.end50:                                         ; preds = %cond.end43
  %44 = load ptr, ptr %ctxt.addr, align 8, !dbg !10615, !tbaa !1527
  %state51 = getelementptr inbounds %struct._xmlAutomata, ptr %44, i32 0, i32 6, !dbg !10616
  %45 = load ptr, ptr %state51, align 8, !dbg !10616, !tbaa !4169
  store ptr %45, ptr %previous, align 8, !dbg !10617, !tbaa !1527
  %46 = load ptr, ptr %ctxt.addr, align 8, !dbg !10618, !tbaa !1527
  %atom52 = getelementptr inbounds %struct._xmlAutomata, ptr %46, i32 0, i32 7, !dbg !10619
  store ptr null, ptr %atom52, align 8, !dbg !10620, !tbaa !10568
  br label %if.end53, !dbg !10621

if.end53:                                         ; preds = %if.end50, %while.body
  br label %while.cond, !dbg !10579, !llvm.loop !10622

while.end:                                        ; preds = %land.end
  store i32 0, ptr %retval, align 4, !dbg !10624
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10624

cleanup:                                          ; preds = %while.end, %if.then49, %if.then15
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !10625
  call void @llvm.lifetime.end.p0(i64 8, ptr %previous) #8, !dbg !10625
  %47 = load i32, ptr %retval, align 4, !dbg !10625
  ret i32 %47, !dbg !10625
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlFAParsePiece(ptr noundef %ctxt) #0 !dbg !10626 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !10628, metadata !DIExpression()), !dbg !10630
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !10631
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !10629, metadata !DIExpression()), !dbg !10632
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !10633, !tbaa !1527
  %atom = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 7, !dbg !10634
  store ptr null, ptr %atom, align 8, !dbg !10635, !tbaa !10568
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !10636, !tbaa !1527
  %call = call i32 @xmlFAParseAtom(ptr noundef %1), !dbg !10637
  store i32 %call, ptr %ret, align 4, !dbg !10638, !tbaa !1767
  %2 = load i32, ptr %ret, align 4, !dbg !10639, !tbaa !1767
  %cmp = icmp eq i32 %2, 0, !dbg !10641
  br i1 %cmp, label %if.then, label %if.end, !dbg !10642

if.then:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !10643
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10643

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !10644, !tbaa !1527
  %atom1 = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 7, !dbg !10646
  %4 = load ptr, ptr %atom1, align 8, !dbg !10646, !tbaa !10568
  %cmp2 = icmp eq ptr %4, null, !dbg !10647
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10648

if.then3:                                         ; preds = %if.end
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !10649, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 2, !dbg !10649
  store i32 1450, ptr %error, align 8, !dbg !10649, !tbaa !1729
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !10649, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %6, ptr noundef @.str.104), !dbg !10649
  br label %if.end4, !dbg !10651

if.end4:                                          ; preds = %if.then3, %if.end
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !10652, !tbaa !1527
  %call5 = call i32 @xmlFAParseQuantifier(ptr noundef %7), !dbg !10653
  store i32 1, ptr %retval, align 4, !dbg !10654
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10654

cleanup:                                          ; preds = %if.end4, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !10655
  %8 = load i32, ptr %retval, align 4, !dbg !10655
  ret i32 %8, !dbg !10655
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlFAParseAtom(ptr noundef %ctxt) #0 !dbg !10656 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %codepoint = alloca i32, align 4
  %len = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %start = alloca ptr, align 8
  %oldend = alloca ptr, align 8
  %start0 = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !10658, metadata !DIExpression()), !dbg !10670
  call void @llvm.lifetime.start.p0(i64 4, ptr %codepoint) #8, !dbg !10671
  tail call void @llvm.dbg.declare(metadata ptr %codepoint, metadata !10659, metadata !DIExpression()), !dbg !10672
  call void @llvm.lifetime.start.p0(i64 4, ptr %len) #8, !dbg !10671
  tail call void @llvm.dbg.declare(metadata ptr %len, metadata !10660, metadata !DIExpression()), !dbg !10673
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !10674, !tbaa !1527
  %call = call i32 @xmlFAIsChar(ptr noundef %0), !dbg !10675
  store i32 %call, ptr %codepoint, align 4, !dbg !10676, !tbaa !1767
  %1 = load i32, ptr %codepoint, align 4, !dbg !10677, !tbaa !1767
  %cmp = icmp sgt i32 %1, 0, !dbg !10678
  br i1 %cmp, label %if.then, label %if.else, !dbg !10679

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !10680, !tbaa !1527
  %call1 = call ptr @xmlRegNewAtom(ptr noundef %2, i32 noundef 2), !dbg !10682
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !10683, !tbaa !1527
  %atom = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 7, !dbg !10684
  store ptr %call1, ptr %atom, align 8, !dbg !10685, !tbaa !10568
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !10686, !tbaa !1527
  %atom2 = getelementptr inbounds %struct._xmlAutomata, ptr %4, i32 0, i32 7, !dbg !10688
  %5 = load ptr, ptr %atom2, align 8, !dbg !10688, !tbaa !10568
  %cmp3 = icmp eq ptr %5, null, !dbg !10689
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !10690

if.then4:                                         ; preds = %if.then
  store i32 -1, ptr %retval, align 4, !dbg !10691
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup90, !dbg !10691

if.end:                                           ; preds = %if.then
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !10692, !tbaa !1527
  %cur = getelementptr inbounds %struct._xmlAutomata, ptr %6, i32 0, i32 1, !dbg !10692
  %7 = load ptr, ptr %cur, align 8, !dbg !10692, !tbaa !4182
  %call5 = call i32 @xmlStringCurrentChar(ptr noundef null, ptr noundef %7, ptr noundef %len), !dbg !10692
  store i32 %call5, ptr %codepoint, align 4, !dbg !10693, !tbaa !1767
  %8 = load i32, ptr %codepoint, align 4, !dbg !10694, !tbaa !1767
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !10695, !tbaa !1527
  %atom6 = getelementptr inbounds %struct._xmlAutomata, ptr %9, i32 0, i32 7, !dbg !10696
  %10 = load ptr, ptr %atom6, align 8, !dbg !10696, !tbaa !10568
  %codepoint7 = getelementptr inbounds %struct._xmlRegAtom, ptr %10, i32 0, i32 8, !dbg !10697
  store i32 %8, ptr %codepoint7, align 4, !dbg !10698, !tbaa !4022
  %11 = load i32, ptr %len, align 4, !dbg !10699, !tbaa !1767
  %12 = load ptr, ptr %ctxt.addr, align 8, !dbg !10699, !tbaa !1527
  %cur8 = getelementptr inbounds %struct._xmlAutomata, ptr %12, i32 0, i32 1, !dbg !10699
  %13 = load ptr, ptr %cur8, align 8, !dbg !10699, !tbaa !4182
  %idx.ext = sext i32 %11 to i64, !dbg !10699
  %add.ptr = getelementptr inbounds i8, ptr %13, i64 %idx.ext, !dbg !10699
  store ptr %add.ptr, ptr %cur8, align 8, !dbg !10699, !tbaa !4182
  store i32 1, ptr %retval, align 4, !dbg !10700
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup90, !dbg !10700

if.else:                                          ; preds = %entry
  %14 = load ptr, ptr %ctxt.addr, align 8, !dbg !10701, !tbaa !1527
  %cur9 = getelementptr inbounds %struct._xmlAutomata, ptr %14, i32 0, i32 1, !dbg !10701
  %15 = load ptr, ptr %cur9, align 8, !dbg !10701, !tbaa !4182
  %16 = load i8, ptr %15, align 1, !dbg !10701, !tbaa !2932
  %conv = zext i8 %16 to i32, !dbg !10701
  %cmp10 = icmp eq i32 %conv, 124, !dbg !10702
  br i1 %cmp10, label %if.then12, label %if.else13, !dbg !10703

if.then12:                                        ; preds = %if.else
  store i32 0, ptr %retval, align 4, !dbg !10704
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup90, !dbg !10704

if.else13:                                        ; preds = %if.else
  %17 = load ptr, ptr %ctxt.addr, align 8, !dbg !10706, !tbaa !1527
  %cur14 = getelementptr inbounds %struct._xmlAutomata, ptr %17, i32 0, i32 1, !dbg !10706
  %18 = load ptr, ptr %cur14, align 8, !dbg !10706, !tbaa !4182
  %19 = load i8, ptr %18, align 1, !dbg !10706, !tbaa !2932
  %conv15 = zext i8 %19 to i32, !dbg !10706
  %cmp16 = icmp eq i32 %conv15, 0, !dbg !10707
  br i1 %cmp16, label %if.then18, label %if.else19, !dbg !10708

if.then18:                                        ; preds = %if.else13
  store i32 0, ptr %retval, align 4, !dbg !10709
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup90, !dbg !10709

if.else19:                                        ; preds = %if.else13
  %20 = load ptr, ptr %ctxt.addr, align 8, !dbg !10711, !tbaa !1527
  %cur20 = getelementptr inbounds %struct._xmlAutomata, ptr %20, i32 0, i32 1, !dbg !10711
  %21 = load ptr, ptr %cur20, align 8, !dbg !10711, !tbaa !4182
  %22 = load i8, ptr %21, align 1, !dbg !10711, !tbaa !2932
  %conv21 = zext i8 %22 to i32, !dbg !10711
  %cmp22 = icmp eq i32 %conv21, 41, !dbg !10712
  br i1 %cmp22, label %if.then24, label %if.else25, !dbg !10713

if.then24:                                        ; preds = %if.else19
  store i32 0, ptr %retval, align 4, !dbg !10714
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup90, !dbg !10714

if.else25:                                        ; preds = %if.else19
  %23 = load ptr, ptr %ctxt.addr, align 8, !dbg !10716, !tbaa !1527
  %cur26 = getelementptr inbounds %struct._xmlAutomata, ptr %23, i32 0, i32 1, !dbg !10716
  %24 = load ptr, ptr %cur26, align 8, !dbg !10716, !tbaa !4182
  %25 = load i8, ptr %24, align 1, !dbg !10716, !tbaa !2932
  %conv27 = zext i8 %25 to i32, !dbg !10716
  %cmp28 = icmp eq i32 %conv27, 40, !dbg !10717
  br i1 %cmp28, label %if.then30, label %if.else69, !dbg !10718

if.then30:                                        ; preds = %if.else25
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #8, !dbg !10719
  tail call void @llvm.dbg.declare(metadata ptr %start, metadata !10661, metadata !DIExpression()), !dbg !10720
  call void @llvm.lifetime.start.p0(i64 8, ptr %oldend) #8, !dbg !10719
  tail call void @llvm.dbg.declare(metadata ptr %oldend, metadata !10668, metadata !DIExpression()), !dbg !10721
  call void @llvm.lifetime.start.p0(i64 8, ptr %start0) #8, !dbg !10719
  tail call void @llvm.dbg.declare(metadata ptr %start0, metadata !10669, metadata !DIExpression()), !dbg !10722
  %26 = load ptr, ptr %ctxt.addr, align 8, !dbg !10723, !tbaa !1527
  %cur31 = getelementptr inbounds %struct._xmlAutomata, ptr %26, i32 0, i32 1, !dbg !10723
  %27 = load ptr, ptr %cur31, align 8, !dbg !10723, !tbaa !4182
  %incdec.ptr = getelementptr inbounds i8, ptr %27, i32 1, !dbg !10723
  store ptr %incdec.ptr, ptr %cur31, align 8, !dbg !10723, !tbaa !4182
  %28 = load ptr, ptr %ctxt.addr, align 8, !dbg !10724, !tbaa !1527
  %depth = getelementptr inbounds %struct._xmlAutomata, ptr %28, i32 0, i32 20, !dbg !10726
  %29 = load i32, ptr %depth, align 4, !dbg !10726, !tbaa !10727
  %cmp32 = icmp sge i32 %29, 50, !dbg !10728
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !10729

if.then34:                                        ; preds = %if.then30
  %30 = load ptr, ptr %ctxt.addr, align 8, !dbg !10730, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %30, i32 0, i32 2, !dbg !10730
  store i32 1450, ptr %error, align 8, !dbg !10730, !tbaa !1729
  %31 = load ptr, ptr %ctxt.addr, align 8, !dbg !10730, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %31, ptr noundef @.str.105), !dbg !10730
  store i32 -1, ptr %retval, align 4, !dbg !10732
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10732

if.end35:                                         ; preds = %if.then30
  %32 = load ptr, ptr %ctxt.addr, align 8, !dbg !10733, !tbaa !1527
  %33 = load ptr, ptr %ctxt.addr, align 8, !dbg !10734, !tbaa !1527
  %state = getelementptr inbounds %struct._xmlAutomata, ptr %33, i32 0, i32 6, !dbg !10735
  %34 = load ptr, ptr %state, align 8, !dbg !10735, !tbaa !4169
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %32, ptr noundef %34, ptr noundef null), !dbg !10736
  %35 = load ptr, ptr %ctxt.addr, align 8, !dbg !10737, !tbaa !1527
  %state36 = getelementptr inbounds %struct._xmlAutomata, ptr %35, i32 0, i32 6, !dbg !10738
  %36 = load ptr, ptr %state36, align 8, !dbg !10738, !tbaa !4169
  store ptr %36, ptr %start0, align 8, !dbg !10739, !tbaa !1527
  %37 = load ptr, ptr %ctxt.addr, align 8, !dbg !10740, !tbaa !1527
  %38 = load ptr, ptr %ctxt.addr, align 8, !dbg !10741, !tbaa !1527
  %state37 = getelementptr inbounds %struct._xmlAutomata, ptr %38, i32 0, i32 6, !dbg !10742
  %39 = load ptr, ptr %state37, align 8, !dbg !10742, !tbaa !4169
  call void @xmlFAGenerateEpsilonTransition(ptr noundef %37, ptr noundef %39, ptr noundef null), !dbg !10743
  %40 = load ptr, ptr %ctxt.addr, align 8, !dbg !10744, !tbaa !1527
  %state38 = getelementptr inbounds %struct._xmlAutomata, ptr %40, i32 0, i32 6, !dbg !10745
  %41 = load ptr, ptr %state38, align 8, !dbg !10745, !tbaa !4169
  store ptr %41, ptr %start, align 8, !dbg !10746, !tbaa !1527
  %42 = load ptr, ptr %ctxt.addr, align 8, !dbg !10747, !tbaa !1527
  %end = getelementptr inbounds %struct._xmlAutomata, ptr %42, i32 0, i32 5, !dbg !10748
  %43 = load ptr, ptr %end, align 8, !dbg !10748, !tbaa !4163
  store ptr %43, ptr %oldend, align 8, !dbg !10749, !tbaa !1527
  %44 = load ptr, ptr %ctxt.addr, align 8, !dbg !10750, !tbaa !1527
  %end39 = getelementptr inbounds %struct._xmlAutomata, ptr %44, i32 0, i32 5, !dbg !10751
  store ptr null, ptr %end39, align 8, !dbg !10752, !tbaa !4163
  %45 = load ptr, ptr %ctxt.addr, align 8, !dbg !10753, !tbaa !1527
  %atom40 = getelementptr inbounds %struct._xmlAutomata, ptr %45, i32 0, i32 7, !dbg !10754
  store ptr null, ptr %atom40, align 8, !dbg !10755, !tbaa !10568
  %46 = load ptr, ptr %ctxt.addr, align 8, !dbg !10756, !tbaa !1527
  %depth41 = getelementptr inbounds %struct._xmlAutomata, ptr %46, i32 0, i32 20, !dbg !10757
  %47 = load i32, ptr %depth41, align 4, !dbg !10758, !tbaa !10727
  %inc = add nsw i32 %47, 1, !dbg !10758
  store i32 %inc, ptr %depth41, align 4, !dbg !10758, !tbaa !10727
  %48 = load ptr, ptr %ctxt.addr, align 8, !dbg !10759, !tbaa !1527
  call void @xmlFAParseRegExp(ptr noundef %48, i32 noundef 0), !dbg !10760
  %49 = load ptr, ptr %ctxt.addr, align 8, !dbg !10761, !tbaa !1527
  %depth42 = getelementptr inbounds %struct._xmlAutomata, ptr %49, i32 0, i32 20, !dbg !10762
  %50 = load i32, ptr %depth42, align 4, !dbg !10763, !tbaa !10727
  %dec = add nsw i32 %50, -1, !dbg !10763
  store i32 %dec, ptr %depth42, align 4, !dbg !10763, !tbaa !10727
  %51 = load ptr, ptr %ctxt.addr, align 8, !dbg !10764, !tbaa !1527
  %cur43 = getelementptr inbounds %struct._xmlAutomata, ptr %51, i32 0, i32 1, !dbg !10764
  %52 = load ptr, ptr %cur43, align 8, !dbg !10764, !tbaa !4182
  %53 = load i8, ptr %52, align 1, !dbg !10764, !tbaa !2932
  %conv44 = zext i8 %53 to i32, !dbg !10764
  %cmp45 = icmp eq i32 %conv44, 41, !dbg !10766
  br i1 %cmp45, label %if.then47, label %if.else50, !dbg !10767

if.then47:                                        ; preds = %if.end35
  %54 = load ptr, ptr %ctxt.addr, align 8, !dbg !10768, !tbaa !1527
  %cur48 = getelementptr inbounds %struct._xmlAutomata, ptr %54, i32 0, i32 1, !dbg !10768
  %55 = load ptr, ptr %cur48, align 8, !dbg !10768, !tbaa !4182
  %incdec.ptr49 = getelementptr inbounds i8, ptr %55, i32 1, !dbg !10768
  store ptr %incdec.ptr49, ptr %cur48, align 8, !dbg !10768, !tbaa !4182
  br label %if.end52, !dbg !10770

if.else50:                                        ; preds = %if.end35
  %56 = load ptr, ptr %ctxt.addr, align 8, !dbg !10771, !tbaa !1527
  %error51 = getelementptr inbounds %struct._xmlAutomata, ptr %56, i32 0, i32 2, !dbg !10771
  store i32 1450, ptr %error51, align 8, !dbg !10771, !tbaa !1729
  %57 = load ptr, ptr %ctxt.addr, align 8, !dbg !10771, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %57, ptr noundef @.str.106), !dbg !10771
  br label %if.end52

if.end52:                                         ; preds = %if.else50, %if.then47
  %58 = load ptr, ptr %ctxt.addr, align 8, !dbg !10773, !tbaa !1527
  %call53 = call ptr @xmlRegNewAtom(ptr noundef %58, i32 noundef 4), !dbg !10774
  %59 = load ptr, ptr %ctxt.addr, align 8, !dbg !10775, !tbaa !1527
  %atom54 = getelementptr inbounds %struct._xmlAutomata, ptr %59, i32 0, i32 7, !dbg !10776
  store ptr %call53, ptr %atom54, align 8, !dbg !10777, !tbaa !10568
  %60 = load ptr, ptr %ctxt.addr, align 8, !dbg !10778, !tbaa !1527
  %atom55 = getelementptr inbounds %struct._xmlAutomata, ptr %60, i32 0, i32 7, !dbg !10780
  %61 = load ptr, ptr %atom55, align 8, !dbg !10780, !tbaa !10568
  %cmp56 = icmp eq ptr %61, null, !dbg !10781
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !10782

if.then58:                                        ; preds = %if.end52
  store i32 -1, ptr %retval, align 4, !dbg !10783
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10783

if.end59:                                         ; preds = %if.end52
  %62 = load ptr, ptr %start, align 8, !dbg !10784, !tbaa !1527
  %63 = load ptr, ptr %ctxt.addr, align 8, !dbg !10785, !tbaa !1527
  %atom60 = getelementptr inbounds %struct._xmlAutomata, ptr %63, i32 0, i32 7, !dbg !10786
  %64 = load ptr, ptr %atom60, align 8, !dbg !10786, !tbaa !10568
  %start61 = getelementptr inbounds %struct._xmlRegAtom, ptr %64, i32 0, i32 9, !dbg !10787
  store ptr %62, ptr %start61, align 8, !dbg !10788, !tbaa !4065
  %65 = load ptr, ptr %start0, align 8, !dbg !10789, !tbaa !1527
  %66 = load ptr, ptr %ctxt.addr, align 8, !dbg !10790, !tbaa !1527
  %atom62 = getelementptr inbounds %struct._xmlAutomata, ptr %66, i32 0, i32 7, !dbg !10791
  %67 = load ptr, ptr %atom62, align 8, !dbg !10791, !tbaa !10568
  %start063 = getelementptr inbounds %struct._xmlRegAtom, ptr %67, i32 0, i32 10, !dbg !10792
  store ptr %65, ptr %start063, align 8, !dbg !10793, !tbaa !7656
  %68 = load ptr, ptr %ctxt.addr, align 8, !dbg !10794, !tbaa !1527
  %state64 = getelementptr inbounds %struct._xmlAutomata, ptr %68, i32 0, i32 6, !dbg !10795
  %69 = load ptr, ptr %state64, align 8, !dbg !10795, !tbaa !4169
  %70 = load ptr, ptr %ctxt.addr, align 8, !dbg !10796, !tbaa !1527
  %atom65 = getelementptr inbounds %struct._xmlAutomata, ptr %70, i32 0, i32 7, !dbg !10797
  %71 = load ptr, ptr %atom65, align 8, !dbg !10797, !tbaa !10568
  %stop = getelementptr inbounds %struct._xmlRegAtom, ptr %71, i32 0, i32 11, !dbg !10798
  store ptr %69, ptr %stop, align 8, !dbg !10799, !tbaa !4070
  %72 = load ptr, ptr %oldend, align 8, !dbg !10800, !tbaa !1527
  %73 = load ptr, ptr %ctxt.addr, align 8, !dbg !10801, !tbaa !1527
  %end66 = getelementptr inbounds %struct._xmlAutomata, ptr %73, i32 0, i32 5, !dbg !10802
  store ptr %72, ptr %end66, align 8, !dbg !10803, !tbaa !4163
  store i32 1, ptr %retval, align 4, !dbg !10804
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10804

cleanup:                                          ; preds = %if.end59, %if.then58, %if.then34
  call void @llvm.lifetime.end.p0(i64 8, ptr %start0) #8, !dbg !10805
  call void @llvm.lifetime.end.p0(i64 8, ptr %oldend) #8, !dbg !10805
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #8, !dbg !10805
  br label %cleanup90

if.else69:                                        ; preds = %if.else25
  %74 = load ptr, ptr %ctxt.addr, align 8, !dbg !10806, !tbaa !1527
  %cur70 = getelementptr inbounds %struct._xmlAutomata, ptr %74, i32 0, i32 1, !dbg !10806
  %75 = load ptr, ptr %cur70, align 8, !dbg !10806, !tbaa !4182
  %76 = load i8, ptr %75, align 1, !dbg !10806, !tbaa !2932
  %conv71 = zext i8 %76 to i32, !dbg !10806
  %cmp72 = icmp eq i32 %conv71, 91, !dbg !10808
  br i1 %cmp72, label %if.then83, label %lor.lhs.false, !dbg !10809

lor.lhs.false:                                    ; preds = %if.else69
  %77 = load ptr, ptr %ctxt.addr, align 8, !dbg !10810, !tbaa !1527
  %cur74 = getelementptr inbounds %struct._xmlAutomata, ptr %77, i32 0, i32 1, !dbg !10810
  %78 = load ptr, ptr %cur74, align 8, !dbg !10810, !tbaa !4182
  %79 = load i8, ptr %78, align 1, !dbg !10810, !tbaa !2932
  %conv75 = zext i8 %79 to i32, !dbg !10810
  %cmp76 = icmp eq i32 %conv75, 92, !dbg !10811
  br i1 %cmp76, label %if.then83, label %lor.lhs.false78, !dbg !10812

lor.lhs.false78:                                  ; preds = %lor.lhs.false
  %80 = load ptr, ptr %ctxt.addr, align 8, !dbg !10813, !tbaa !1527
  %cur79 = getelementptr inbounds %struct._xmlAutomata, ptr %80, i32 0, i32 1, !dbg !10813
  %81 = load ptr, ptr %cur79, align 8, !dbg !10813, !tbaa !4182
  %82 = load i8, ptr %81, align 1, !dbg !10813, !tbaa !2932
  %conv80 = zext i8 %82 to i32, !dbg !10813
  %cmp81 = icmp eq i32 %conv80, 46, !dbg !10814
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !10815

if.then83:                                        ; preds = %lor.lhs.false78, %lor.lhs.false, %if.else69
  %83 = load ptr, ptr %ctxt.addr, align 8, !dbg !10816, !tbaa !1527
  call void @xmlFAParseCharClass(ptr noundef %83), !dbg !10818
  store i32 1, ptr %retval, align 4, !dbg !10819
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup90, !dbg !10819

if.end84:                                         ; preds = %lor.lhs.false78
  br label %if.end85

if.end85:                                         ; preds = %if.end84
  br label %if.end86

if.end86:                                         ; preds = %if.end85
  br label %if.end87

if.end87:                                         ; preds = %if.end86
  br label %if.end88

if.end88:                                         ; preds = %if.end87
  br label %if.end89

if.end89:                                         ; preds = %if.end88
  store i32 0, ptr %retval, align 4, !dbg !10820
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup90, !dbg !10820

cleanup90:                                        ; preds = %if.end89, %if.then83, %cleanup, %if.then24, %if.then18, %if.then12, %if.end, %if.then4
  call void @llvm.lifetime.end.p0(i64 4, ptr %len) #8, !dbg !10821
  call void @llvm.lifetime.end.p0(i64 4, ptr %codepoint) #8, !dbg !10821
  %84 = load i32, ptr %retval, align 4, !dbg !10821
  ret i32 %84, !dbg !10821
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlFAParseQuantifier(ptr noundef %ctxt) #0 !dbg !10822 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %cur = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %min = alloca i32, align 4
  %max = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !10824, metadata !DIExpression()), !dbg !10830
  call void @llvm.lifetime.start.p0(i64 4, ptr %cur) #8, !dbg !10831
  tail call void @llvm.dbg.declare(metadata ptr %cur, metadata !10825, metadata !DIExpression()), !dbg !10832
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !10833, !tbaa !1527
  %cur1 = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 1, !dbg !10833
  %1 = load ptr, ptr %cur1, align 8, !dbg !10833, !tbaa !4182
  %2 = load i8, ptr %1, align 1, !dbg !10833, !tbaa !2932
  %conv = zext i8 %2 to i32, !dbg !10833
  store i32 %conv, ptr %cur, align 4, !dbg !10834, !tbaa !1767
  %3 = load i32, ptr %cur, align 4, !dbg !10835, !tbaa !1767
  %cmp = icmp eq i32 %3, 63, !dbg !10837
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10838

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, ptr %cur, align 4, !dbg !10839, !tbaa !1767
  %cmp3 = icmp eq i32 %4, 42, !dbg !10840
  br i1 %cmp3, label %if.then, label %lor.lhs.false5, !dbg !10841

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %5 = load i32, ptr %cur, align 4, !dbg !10842, !tbaa !1767
  %cmp6 = icmp eq i32 %5, 43, !dbg !10843
  br i1 %cmp6, label %if.then, label %if.end30, !dbg !10844

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %entry
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !10845, !tbaa !1527
  %atom = getelementptr inbounds %struct._xmlAutomata, ptr %6, i32 0, i32 7, !dbg !10848
  %7 = load ptr, ptr %atom, align 8, !dbg !10848, !tbaa !10568
  %cmp8 = icmp ne ptr %7, null, !dbg !10849
  br i1 %cmp8, label %if.then10, label %if.end28, !dbg !10850

if.then10:                                        ; preds = %if.then
  %8 = load i32, ptr %cur, align 4, !dbg !10851, !tbaa !1767
  %cmp11 = icmp eq i32 %8, 63, !dbg !10854
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !10855

if.then13:                                        ; preds = %if.then10
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !10856, !tbaa !1527
  %atom14 = getelementptr inbounds %struct._xmlAutomata, ptr %9, i32 0, i32 7, !dbg !10857
  %10 = load ptr, ptr %atom14, align 8, !dbg !10857, !tbaa !10568
  %quant = getelementptr inbounds %struct._xmlRegAtom, ptr %10, i32 0, i32 2, !dbg !10858
  store i32 3, ptr %quant, align 8, !dbg !10859, !tbaa !3993
  br label %if.end27, !dbg !10856

if.else:                                          ; preds = %if.then10
  %11 = load i32, ptr %cur, align 4, !dbg !10860, !tbaa !1767
  %cmp15 = icmp eq i32 %11, 42, !dbg !10862
  br i1 %cmp15, label %if.then17, label %if.else20, !dbg !10863

if.then17:                                        ; preds = %if.else
  %12 = load ptr, ptr %ctxt.addr, align 8, !dbg !10864, !tbaa !1527
  %atom18 = getelementptr inbounds %struct._xmlAutomata, ptr %12, i32 0, i32 7, !dbg !10865
  %13 = load ptr, ptr %atom18, align 8, !dbg !10865, !tbaa !10568
  %quant19 = getelementptr inbounds %struct._xmlRegAtom, ptr %13, i32 0, i32 2, !dbg !10866
  store i32 4, ptr %quant19, align 8, !dbg !10867, !tbaa !3993
  br label %if.end26, !dbg !10864

if.else20:                                        ; preds = %if.else
  %14 = load i32, ptr %cur, align 4, !dbg !10868, !tbaa !1767
  %cmp21 = icmp eq i32 %14, 43, !dbg !10870
  br i1 %cmp21, label %if.then23, label %if.end, !dbg !10871

if.then23:                                        ; preds = %if.else20
  %15 = load ptr, ptr %ctxt.addr, align 8, !dbg !10872, !tbaa !1527
  %atom24 = getelementptr inbounds %struct._xmlAutomata, ptr %15, i32 0, i32 7, !dbg !10873
  %16 = load ptr, ptr %atom24, align 8, !dbg !10873, !tbaa !10568
  %quant25 = getelementptr inbounds %struct._xmlRegAtom, ptr %16, i32 0, i32 2, !dbg !10874
  store i32 5, ptr %quant25, align 8, !dbg !10875, !tbaa !3993
  br label %if.end, !dbg !10872

if.end:                                           ; preds = %if.then23, %if.else20
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then17
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then13
  br label %if.end28, !dbg !10876

if.end28:                                         ; preds = %if.end27, %if.then
  %17 = load ptr, ptr %ctxt.addr, align 8, !dbg !10877, !tbaa !1527
  %cur29 = getelementptr inbounds %struct._xmlAutomata, ptr %17, i32 0, i32 1, !dbg !10877
  %18 = load ptr, ptr %cur29, align 8, !dbg !10877, !tbaa !4182
  %incdec.ptr = getelementptr inbounds i8, ptr %18, i32 1, !dbg !10877
  store ptr %incdec.ptr, ptr %cur29, align 8, !dbg !10877, !tbaa !4182
  store i32 1, ptr %retval, align 4, !dbg !10878
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10878

if.end30:                                         ; preds = %lor.lhs.false5
  %19 = load i32, ptr %cur, align 4, !dbg !10879, !tbaa !1767
  %cmp31 = icmp eq i32 %19, 123, !dbg !10880
  br i1 %cmp31, label %if.then33, label %if.end88, !dbg !10881

if.then33:                                        ; preds = %if.end30
  call void @llvm.lifetime.start.p0(i64 4, ptr %min) #8, !dbg !10882
  tail call void @llvm.dbg.declare(metadata ptr %min, metadata !10826, metadata !DIExpression()), !dbg !10883
  store i32 0, ptr %min, align 4, !dbg !10883, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 4, ptr %max) #8, !dbg !10882
  tail call void @llvm.dbg.declare(metadata ptr %max, metadata !10829, metadata !DIExpression()), !dbg !10884
  store i32 0, ptr %max, align 4, !dbg !10884, !tbaa !1767
  %20 = load ptr, ptr %ctxt.addr, align 8, !dbg !10885, !tbaa !1527
  %cur34 = getelementptr inbounds %struct._xmlAutomata, ptr %20, i32 0, i32 1, !dbg !10885
  %21 = load ptr, ptr %cur34, align 8, !dbg !10885, !tbaa !4182
  %incdec.ptr35 = getelementptr inbounds i8, ptr %21, i32 1, !dbg !10885
  store ptr %incdec.ptr35, ptr %cur34, align 8, !dbg !10885, !tbaa !4182
  %22 = load ptr, ptr %ctxt.addr, align 8, !dbg !10886, !tbaa !1527
  %call = call i32 @xmlFAParseQuantExact(ptr noundef %22), !dbg !10887
  store i32 %call, ptr %cur, align 4, !dbg !10888, !tbaa !1767
  %23 = load i32, ptr %cur, align 4, !dbg !10889, !tbaa !1767
  %cmp36 = icmp sge i32 %23, 0, !dbg !10891
  br i1 %cmp36, label %if.then38, label %if.else39, !dbg !10892

if.then38:                                        ; preds = %if.then33
  %24 = load i32, ptr %cur, align 4, !dbg !10893, !tbaa !1767
  store i32 %24, ptr %min, align 4, !dbg !10894, !tbaa !1767
  br label %if.end40, !dbg !10895

if.else39:                                        ; preds = %if.then33
  %25 = load ptr, ptr %ctxt.addr, align 8, !dbg !10896, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %25, i32 0, i32 2, !dbg !10896
  store i32 1450, ptr %error, align 8, !dbg !10896, !tbaa !1729
  %26 = load ptr, ptr %ctxt.addr, align 8, !dbg !10896, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %26, ptr noundef @.str.126), !dbg !10896
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  %27 = load ptr, ptr %ctxt.addr, align 8, !dbg !10898, !tbaa !1527
  %cur41 = getelementptr inbounds %struct._xmlAutomata, ptr %27, i32 0, i32 1, !dbg !10898
  %28 = load ptr, ptr %cur41, align 8, !dbg !10898, !tbaa !4182
  %29 = load i8, ptr %28, align 1, !dbg !10898, !tbaa !2932
  %conv42 = zext i8 %29 to i32, !dbg !10898
  %cmp43 = icmp eq i32 %conv42, 44, !dbg !10900
  br i1 %cmp43, label %if.then45, label %if.end62, !dbg !10901

if.then45:                                        ; preds = %if.end40
  %30 = load ptr, ptr %ctxt.addr, align 8, !dbg !10902, !tbaa !1527
  %cur46 = getelementptr inbounds %struct._xmlAutomata, ptr %30, i32 0, i32 1, !dbg !10902
  %31 = load ptr, ptr %cur46, align 8, !dbg !10902, !tbaa !4182
  %incdec.ptr47 = getelementptr inbounds i8, ptr %31, i32 1, !dbg !10902
  store ptr %incdec.ptr47, ptr %cur46, align 8, !dbg !10902, !tbaa !4182
  %32 = load ptr, ptr %ctxt.addr, align 8, !dbg !10904, !tbaa !1527
  %cur48 = getelementptr inbounds %struct._xmlAutomata, ptr %32, i32 0, i32 1, !dbg !10904
  %33 = load ptr, ptr %cur48, align 8, !dbg !10904, !tbaa !4182
  %34 = load i8, ptr %33, align 1, !dbg !10904, !tbaa !2932
  %conv49 = zext i8 %34 to i32, !dbg !10904
  %cmp50 = icmp eq i32 %conv49, 125, !dbg !10906
  br i1 %cmp50, label %if.then52, label %if.else53, !dbg !10907

if.then52:                                        ; preds = %if.then45
  store i32 2147483647, ptr %max, align 4, !dbg !10908, !tbaa !1767
  br label %if.end61, !dbg !10909

if.else53:                                        ; preds = %if.then45
  %35 = load ptr, ptr %ctxt.addr, align 8, !dbg !10910, !tbaa !1527
  %call54 = call i32 @xmlFAParseQuantExact(ptr noundef %35), !dbg !10912
  store i32 %call54, ptr %cur, align 4, !dbg !10913, !tbaa !1767
  %36 = load i32, ptr %cur, align 4, !dbg !10914, !tbaa !1767
  %cmp55 = icmp sge i32 %36, 0, !dbg !10916
  br i1 %cmp55, label %if.then57, label %if.else58, !dbg !10917

if.then57:                                        ; preds = %if.else53
  %37 = load i32, ptr %cur, align 4, !dbg !10918, !tbaa !1767
  store i32 %37, ptr %max, align 4, !dbg !10919, !tbaa !1767
  br label %if.end60, !dbg !10920

if.else58:                                        ; preds = %if.else53
  %38 = load ptr, ptr %ctxt.addr, align 8, !dbg !10921, !tbaa !1527
  %error59 = getelementptr inbounds %struct._xmlAutomata, ptr %38, i32 0, i32 2, !dbg !10921
  store i32 1450, ptr %error59, align 8, !dbg !10921, !tbaa !1729
  %39 = load ptr, ptr %ctxt.addr, align 8, !dbg !10921, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %39, ptr noundef @.str.126), !dbg !10921
  br label %if.end60

if.end60:                                         ; preds = %if.else58, %if.then57
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then52
  br label %if.end62, !dbg !10923

if.end62:                                         ; preds = %if.end61, %if.end40
  %40 = load ptr, ptr %ctxt.addr, align 8, !dbg !10924, !tbaa !1527
  %cur63 = getelementptr inbounds %struct._xmlAutomata, ptr %40, i32 0, i32 1, !dbg !10924
  %41 = load ptr, ptr %cur63, align 8, !dbg !10924, !tbaa !4182
  %42 = load i8, ptr %41, align 1, !dbg !10924, !tbaa !2932
  %conv64 = zext i8 %42 to i32, !dbg !10924
  %cmp65 = icmp eq i32 %conv64, 125, !dbg !10926
  br i1 %cmp65, label %if.then67, label %if.else70, !dbg !10927

if.then67:                                        ; preds = %if.end62
  %43 = load ptr, ptr %ctxt.addr, align 8, !dbg !10928, !tbaa !1527
  %cur68 = getelementptr inbounds %struct._xmlAutomata, ptr %43, i32 0, i32 1, !dbg !10928
  %44 = load ptr, ptr %cur68, align 8, !dbg !10928, !tbaa !4182
  %incdec.ptr69 = getelementptr inbounds i8, ptr %44, i32 1, !dbg !10928
  store ptr %incdec.ptr69, ptr %cur68, align 8, !dbg !10928, !tbaa !4182
  br label %if.end72, !dbg !10930

if.else70:                                        ; preds = %if.end62
  %45 = load ptr, ptr %ctxt.addr, align 8, !dbg !10931, !tbaa !1527
  %error71 = getelementptr inbounds %struct._xmlAutomata, ptr %45, i32 0, i32 2, !dbg !10931
  store i32 1450, ptr %error71, align 8, !dbg !10931, !tbaa !1729
  %46 = load ptr, ptr %ctxt.addr, align 8, !dbg !10931, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %46, ptr noundef @.str.127), !dbg !10931
  br label %if.end72

if.end72:                                         ; preds = %if.else70, %if.then67
  %47 = load i32, ptr %max, align 4, !dbg !10933, !tbaa !1767
  %cmp73 = icmp eq i32 %47, 0, !dbg !10935
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !10936

if.then75:                                        ; preds = %if.end72
  %48 = load i32, ptr %min, align 4, !dbg !10937, !tbaa !1767
  store i32 %48, ptr %max, align 4, !dbg !10938, !tbaa !1767
  br label %if.end76, !dbg !10939

if.end76:                                         ; preds = %if.then75, %if.end72
  %49 = load ptr, ptr %ctxt.addr, align 8, !dbg !10940, !tbaa !1527
  %atom77 = getelementptr inbounds %struct._xmlAutomata, ptr %49, i32 0, i32 7, !dbg !10942
  %50 = load ptr, ptr %atom77, align 8, !dbg !10942, !tbaa !10568
  %cmp78 = icmp ne ptr %50, null, !dbg !10943
  br i1 %cmp78, label %if.then80, label %if.end87, !dbg !10944

if.then80:                                        ; preds = %if.end76
  %51 = load ptr, ptr %ctxt.addr, align 8, !dbg !10945, !tbaa !1527
  %atom81 = getelementptr inbounds %struct._xmlAutomata, ptr %51, i32 0, i32 7, !dbg !10947
  %52 = load ptr, ptr %atom81, align 8, !dbg !10947, !tbaa !10568
  %quant82 = getelementptr inbounds %struct._xmlRegAtom, ptr %52, i32 0, i32 2, !dbg !10948
  store i32 8, ptr %quant82, align 8, !dbg !10949, !tbaa !3993
  %53 = load i32, ptr %min, align 4, !dbg !10950, !tbaa !1767
  %54 = load ptr, ptr %ctxt.addr, align 8, !dbg !10951, !tbaa !1527
  %atom83 = getelementptr inbounds %struct._xmlAutomata, ptr %54, i32 0, i32 7, !dbg !10952
  %55 = load ptr, ptr %atom83, align 8, !dbg !10952, !tbaa !10568
  %min84 = getelementptr inbounds %struct._xmlRegAtom, ptr %55, i32 0, i32 3, !dbg !10953
  store i32 %53, ptr %min84, align 4, !dbg !10954, !tbaa !2372
  %56 = load i32, ptr %max, align 4, !dbg !10955, !tbaa !1767
  %57 = load ptr, ptr %ctxt.addr, align 8, !dbg !10956, !tbaa !1527
  %atom85 = getelementptr inbounds %struct._xmlAutomata, ptr %57, i32 0, i32 7, !dbg !10957
  %58 = load ptr, ptr %atom85, align 8, !dbg !10957, !tbaa !10568
  %max86 = getelementptr inbounds %struct._xmlRegAtom, ptr %58, i32 0, i32 4, !dbg !10958
  store i32 %56, ptr %max86, align 8, !dbg !10959, !tbaa !2377
  br label %if.end87, !dbg !10960

if.end87:                                         ; preds = %if.then80, %if.end76
  store i32 1, ptr %retval, align 4, !dbg !10961
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %max) #8, !dbg !10962
  call void @llvm.lifetime.end.p0(i64 4, ptr %min) #8, !dbg !10962
  br label %cleanup

if.end88:                                         ; preds = %if.end30
  store i32 0, ptr %retval, align 4, !dbg !10963
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !10963

cleanup:                                          ; preds = %if.end88, %if.end87, %if.end28
  call void @llvm.lifetime.end.p0(i64 4, ptr %cur) #8, !dbg !10964
  %59 = load i32, ptr %retval, align 4, !dbg !10964
  ret i32 %59, !dbg !10964
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlFAIsChar(ptr noundef %ctxt) #0 !dbg !10965 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %cur = alloca i32, align 4
  %len = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !10967, metadata !DIExpression()), !dbg !10970
  call void @llvm.lifetime.start.p0(i64 4, ptr %cur) #8, !dbg !10971
  tail call void @llvm.dbg.declare(metadata ptr %cur, metadata !10968, metadata !DIExpression()), !dbg !10972
  call void @llvm.lifetime.start.p0(i64 4, ptr %len) #8, !dbg !10973
  tail call void @llvm.dbg.declare(metadata ptr %len, metadata !10969, metadata !DIExpression()), !dbg !10974
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !10975, !tbaa !1527
  %cur1 = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 1, !dbg !10975
  %1 = load ptr, ptr %cur1, align 8, !dbg !10975, !tbaa !4182
  %call = call i32 @xmlStringCurrentChar(ptr noundef null, ptr noundef %1, ptr noundef %len), !dbg !10975
  store i32 %call, ptr %cur, align 4, !dbg !10976, !tbaa !1767
  %2 = load i32, ptr %cur, align 4, !dbg !10977, !tbaa !1767
  %cmp = icmp eq i32 %2, 46, !dbg !10979
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10980

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, ptr %cur, align 4, !dbg !10981, !tbaa !1767
  %cmp2 = icmp eq i32 %3, 92, !dbg !10982
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !10983

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load i32, ptr %cur, align 4, !dbg !10984, !tbaa !1767
  %cmp4 = icmp eq i32 %4, 63, !dbg !10985
  br i1 %cmp4, label %if.then, label %lor.lhs.false5, !dbg !10986

lor.lhs.false5:                                   ; preds = %lor.lhs.false3
  %5 = load i32, ptr %cur, align 4, !dbg !10987, !tbaa !1767
  %cmp6 = icmp eq i32 %5, 42, !dbg !10988
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !10989

lor.lhs.false7:                                   ; preds = %lor.lhs.false5
  %6 = load i32, ptr %cur, align 4, !dbg !10990, !tbaa !1767
  %cmp8 = icmp eq i32 %6, 43, !dbg !10991
  br i1 %cmp8, label %if.then, label %lor.lhs.false9, !dbg !10992

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %7 = load i32, ptr %cur, align 4, !dbg !10993, !tbaa !1767
  %cmp10 = icmp eq i32 %7, 40, !dbg !10994
  br i1 %cmp10, label %if.then, label %lor.lhs.false11, !dbg !10995

lor.lhs.false11:                                  ; preds = %lor.lhs.false9
  %8 = load i32, ptr %cur, align 4, !dbg !10996, !tbaa !1767
  %cmp12 = icmp eq i32 %8, 41, !dbg !10997
  br i1 %cmp12, label %if.then, label %lor.lhs.false13, !dbg !10998

lor.lhs.false13:                                  ; preds = %lor.lhs.false11
  %9 = load i32, ptr %cur, align 4, !dbg !10999, !tbaa !1767
  %cmp14 = icmp eq i32 %9, 124, !dbg !11000
  br i1 %cmp14, label %if.then, label %lor.lhs.false15, !dbg !11001

lor.lhs.false15:                                  ; preds = %lor.lhs.false13
  %10 = load i32, ptr %cur, align 4, !dbg !11002, !tbaa !1767
  %cmp16 = icmp eq i32 %10, 91, !dbg !11003
  br i1 %cmp16, label %if.then, label %lor.lhs.false17, !dbg !11004

lor.lhs.false17:                                  ; preds = %lor.lhs.false15
  %11 = load i32, ptr %cur, align 4, !dbg !11005, !tbaa !1767
  %cmp18 = icmp eq i32 %11, 93, !dbg !11006
  br i1 %cmp18, label %if.then, label %lor.lhs.false19, !dbg !11007

lor.lhs.false19:                                  ; preds = %lor.lhs.false17
  %12 = load i32, ptr %cur, align 4, !dbg !11008, !tbaa !1767
  %cmp20 = icmp eq i32 %12, 0, !dbg !11009
  br i1 %cmp20, label %if.then, label %if.end, !dbg !11010

if.then:                                          ; preds = %lor.lhs.false19, %lor.lhs.false17, %lor.lhs.false15, %lor.lhs.false13, %lor.lhs.false11, %lor.lhs.false9, %lor.lhs.false7, %lor.lhs.false5, %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 -1, ptr %retval, align 4, !dbg !11011
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11011

if.end:                                           ; preds = %lor.lhs.false19
  %13 = load i32, ptr %cur, align 4, !dbg !11012, !tbaa !1767
  store i32 %13, ptr %retval, align 4, !dbg !11013
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11013

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %len) #8, !dbg !11014
  call void @llvm.lifetime.end.p0(i64 4, ptr %cur) #8, !dbg !11014
  %14 = load i32, ptr %retval, align 4, !dbg !11014
  ret i32 %14, !dbg !11014
}

declare !dbg !11015 i32 @xmlStringCurrentChar(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal void @xmlFAParseCharClass(ptr noundef %ctxt) #0 !dbg !11515 {
entry:
  %ctxt.addr = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !11517, metadata !DIExpression()), !dbg !11518
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !11519, !tbaa !1527
  %cur = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 1, !dbg !11519
  %1 = load ptr, ptr %cur, align 8, !dbg !11519, !tbaa !4182
  %2 = load i8, ptr %1, align 1, !dbg !11519, !tbaa !2932
  %conv = zext i8 %2 to i32, !dbg !11519
  %cmp = icmp eq i32 %conv, 91, !dbg !11521
  br i1 %cmp, label %if.then, label %if.else15, !dbg !11522

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !11523, !tbaa !1527
  %cur2 = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 1, !dbg !11523
  %4 = load ptr, ptr %cur2, align 8, !dbg !11523, !tbaa !4182
  %incdec.ptr = getelementptr inbounds i8, ptr %4, i32 1, !dbg !11523
  store ptr %incdec.ptr, ptr %cur2, align 8, !dbg !11523, !tbaa !4182
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !11525, !tbaa !1527
  %call = call ptr @xmlRegNewAtom(ptr noundef %5, i32 noundef 3), !dbg !11526
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !11527, !tbaa !1527
  %atom = getelementptr inbounds %struct._xmlAutomata, ptr %6, i32 0, i32 7, !dbg !11528
  store ptr %call, ptr %atom, align 8, !dbg !11529, !tbaa !10568
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !11530, !tbaa !1527
  %atom3 = getelementptr inbounds %struct._xmlAutomata, ptr %7, i32 0, i32 7, !dbg !11532
  %8 = load ptr, ptr %atom3, align 8, !dbg !11532, !tbaa !10568
  %cmp4 = icmp eq ptr %8, null, !dbg !11533
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !11534

if.then6:                                         ; preds = %if.then
  br label %if.end16, !dbg !11535

if.end:                                           ; preds = %if.then
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !11536, !tbaa !1527
  call void @xmlFAParseCharGroup(ptr noundef %9), !dbg !11537
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !11538, !tbaa !1527
  %cur7 = getelementptr inbounds %struct._xmlAutomata, ptr %10, i32 0, i32 1, !dbg !11538
  %11 = load ptr, ptr %cur7, align 8, !dbg !11538, !tbaa !4182
  %12 = load i8, ptr %11, align 1, !dbg !11538, !tbaa !2932
  %conv8 = zext i8 %12 to i32, !dbg !11538
  %cmp9 = icmp eq i32 %conv8, 93, !dbg !11540
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !11541

if.then11:                                        ; preds = %if.end
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !11542, !tbaa !1527
  %cur12 = getelementptr inbounds %struct._xmlAutomata, ptr %13, i32 0, i32 1, !dbg !11542
  %14 = load ptr, ptr %cur12, align 8, !dbg !11542, !tbaa !4182
  %incdec.ptr13 = getelementptr inbounds i8, ptr %14, i32 1, !dbg !11542
  store ptr %incdec.ptr13, ptr %cur12, align 8, !dbg !11542, !tbaa !4182
  br label %if.end14, !dbg !11544

if.else:                                          ; preds = %if.end
  %15 = load ptr, ptr %ctxt.addr, align 8, !dbg !11545, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %15, i32 0, i32 2, !dbg !11545
  store i32 1450, ptr %error, align 8, !dbg !11545, !tbaa !1729
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !11545, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %16, ptr noundef @.str.107), !dbg !11545
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !11547

if.else15:                                        ; preds = %entry
  %17 = load ptr, ptr %ctxt.addr, align 8, !dbg !11548, !tbaa !1527
  call void @xmlFAParseCharClassEsc(ptr noundef %17), !dbg !11550
  br label %if.end16

if.end16:                                         ; preds = %if.then6, %if.else15, %if.end14
  ret void, !dbg !11551
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAParseCharGroup(ptr noundef %ctxt) #0 !dbg !11552 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %neg = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !11554, metadata !DIExpression()), !dbg !11556
  call void @llvm.lifetime.start.p0(i64 4, ptr %neg) #8, !dbg !11557
  tail call void @llvm.dbg.declare(metadata ptr %neg, metadata !11555, metadata !DIExpression()), !dbg !11558
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !11559, !tbaa !1527
  %neg1 = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 3, !dbg !11560
  %1 = load i32, ptr %neg1, align 4, !dbg !11560, !tbaa !4264
  store i32 %1, ptr %neg, align 4, !dbg !11558, !tbaa !1767
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !11561, !tbaa !1527
  %cur = getelementptr inbounds %struct._xmlAutomata, ptr %2, i32 0, i32 1, !dbg !11561
  %3 = load ptr, ptr %cur, align 8, !dbg !11561, !tbaa !4182
  %4 = load i8, ptr %3, align 1, !dbg !11561, !tbaa !2932
  %conv = zext i8 %4 to i32, !dbg !11561
  %cmp = icmp eq i32 %conv, 94, !dbg !11563
  br i1 %cmp, label %if.then, label %if.end, !dbg !11564

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !11565, !tbaa !1527
  %cur3 = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 1, !dbg !11565
  %6 = load ptr, ptr %cur3, align 8, !dbg !11565, !tbaa !4182
  %incdec.ptr = getelementptr inbounds i8, ptr %6, i32 1, !dbg !11565
  store ptr %incdec.ptr, ptr %cur3, align 8, !dbg !11565, !tbaa !4182
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !11567, !tbaa !1527
  %neg4 = getelementptr inbounds %struct._xmlAutomata, ptr %7, i32 0, i32 3, !dbg !11568
  %8 = load i32, ptr %neg4, align 4, !dbg !11568, !tbaa !4264
  %tobool = icmp ne i32 %8, 0, !dbg !11569
  %lnot = xor i1 %tobool, true, !dbg !11569
  %lnot.ext = zext i1 %lnot to i32, !dbg !11569
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !11570, !tbaa !1527
  %neg5 = getelementptr inbounds %struct._xmlAutomata, ptr %9, i32 0, i32 3, !dbg !11571
  store i32 %lnot.ext, ptr %neg5, align 4, !dbg !11572, !tbaa !4264
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !11573, !tbaa !1527
  call void @xmlFAParsePosCharGroup(ptr noundef %10), !dbg !11574
  %11 = load i32, ptr %neg, align 4, !dbg !11575, !tbaa !1767
  %12 = load ptr, ptr %ctxt.addr, align 8, !dbg !11576, !tbaa !1527
  %neg6 = getelementptr inbounds %struct._xmlAutomata, ptr %12, i32 0, i32 3, !dbg !11577
  store i32 %11, ptr %neg6, align 4, !dbg !11578, !tbaa !4264
  br label %if.end, !dbg !11579

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !11580

while.cond:                                       ; preds = %if.end38, %if.end
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !11581, !tbaa !1527
  %cur7 = getelementptr inbounds %struct._xmlAutomata, ptr %13, i32 0, i32 1, !dbg !11581
  %14 = load ptr, ptr %cur7, align 8, !dbg !11581, !tbaa !4182
  %15 = load i8, ptr %14, align 1, !dbg !11581, !tbaa !2932
  %conv8 = zext i8 %15 to i32, !dbg !11581
  %cmp9 = icmp ne i32 %conv8, 93, !dbg !11582
  br i1 %cmp9, label %land.rhs, label %land.end, !dbg !11583

land.rhs:                                         ; preds = %while.cond
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !11584, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %16, i32 0, i32 2, !dbg !11585
  %17 = load i32, ptr %error, align 8, !dbg !11585, !tbaa !1729
  %cmp11 = icmp eq i32 %17, 0, !dbg !11586
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %18 = phi i1 [ false, %while.cond ], [ %cmp11, %land.rhs ], !dbg !11587
  br i1 %18, label %while.body, label %while.end, !dbg !11580

while.body:                                       ; preds = %land.end
  %19 = load ptr, ptr %ctxt.addr, align 8, !dbg !11588, !tbaa !1527
  %cur13 = getelementptr inbounds %struct._xmlAutomata, ptr %19, i32 0, i32 1, !dbg !11588
  %20 = load ptr, ptr %cur13, align 8, !dbg !11588, !tbaa !4182
  %21 = load i8, ptr %20, align 1, !dbg !11588, !tbaa !2932
  %conv14 = zext i8 %21 to i32, !dbg !11588
  %cmp15 = icmp eq i32 %conv14, 45, !dbg !11591
  br i1 %cmp15, label %land.lhs.true, label %if.else37, !dbg !11592

land.lhs.true:                                    ; preds = %while.body
  %22 = load ptr, ptr %ctxt.addr, align 8, !dbg !11593, !tbaa !1527
  %cur17 = getelementptr inbounds %struct._xmlAutomata, ptr %22, i32 0, i32 1, !dbg !11593
  %23 = load ptr, ptr %cur17, align 8, !dbg !11593, !tbaa !4182
  %arrayidx = getelementptr inbounds i8, ptr %23, i64 1, !dbg !11593
  %24 = load i8, ptr %arrayidx, align 1, !dbg !11593, !tbaa !2932
  %conv18 = zext i8 %24 to i32, !dbg !11593
  %cmp19 = icmp eq i32 %conv18, 91, !dbg !11594
  br i1 %cmp19, label %if.then21, label %if.else37, !dbg !11595

if.then21:                                        ; preds = %land.lhs.true
  %25 = load ptr, ptr %ctxt.addr, align 8, !dbg !11596, !tbaa !1527
  %cur22 = getelementptr inbounds %struct._xmlAutomata, ptr %25, i32 0, i32 1, !dbg !11596
  %26 = load ptr, ptr %cur22, align 8, !dbg !11596, !tbaa !4182
  %incdec.ptr23 = getelementptr inbounds i8, ptr %26, i32 1, !dbg !11596
  store ptr %incdec.ptr23, ptr %cur22, align 8, !dbg !11596, !tbaa !4182
  %27 = load ptr, ptr %ctxt.addr, align 8, !dbg !11598, !tbaa !1527
  %cur24 = getelementptr inbounds %struct._xmlAutomata, ptr %27, i32 0, i32 1, !dbg !11598
  %28 = load ptr, ptr %cur24, align 8, !dbg !11598, !tbaa !4182
  %incdec.ptr25 = getelementptr inbounds i8, ptr %28, i32 1, !dbg !11598
  store ptr %incdec.ptr25, ptr %cur24, align 8, !dbg !11598, !tbaa !4182
  %29 = load ptr, ptr %ctxt.addr, align 8, !dbg !11599, !tbaa !1527
  %neg26 = getelementptr inbounds %struct._xmlAutomata, ptr %29, i32 0, i32 3, !dbg !11600
  store i32 2, ptr %neg26, align 4, !dbg !11601, !tbaa !4264
  %30 = load ptr, ptr %ctxt.addr, align 8, !dbg !11602, !tbaa !1527
  call void @xmlFAParseCharGroup(ptr noundef %30), !dbg !11603
  %31 = load i32, ptr %neg, align 4, !dbg !11604, !tbaa !1767
  %32 = load ptr, ptr %ctxt.addr, align 8, !dbg !11605, !tbaa !1527
  %neg27 = getelementptr inbounds %struct._xmlAutomata, ptr %32, i32 0, i32 3, !dbg !11606
  store i32 %31, ptr %neg27, align 4, !dbg !11607, !tbaa !4264
  %33 = load ptr, ptr %ctxt.addr, align 8, !dbg !11608, !tbaa !1527
  %cur28 = getelementptr inbounds %struct._xmlAutomata, ptr %33, i32 0, i32 1, !dbg !11608
  %34 = load ptr, ptr %cur28, align 8, !dbg !11608, !tbaa !4182
  %35 = load i8, ptr %34, align 1, !dbg !11608, !tbaa !2932
  %conv29 = zext i8 %35 to i32, !dbg !11608
  %cmp30 = icmp eq i32 %conv29, 93, !dbg !11610
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !11611

if.then32:                                        ; preds = %if.then21
  %36 = load ptr, ptr %ctxt.addr, align 8, !dbg !11612, !tbaa !1527
  %cur33 = getelementptr inbounds %struct._xmlAutomata, ptr %36, i32 0, i32 1, !dbg !11612
  %37 = load ptr, ptr %cur33, align 8, !dbg !11612, !tbaa !4182
  %incdec.ptr34 = getelementptr inbounds i8, ptr %37, i32 1, !dbg !11612
  store ptr %incdec.ptr34, ptr %cur33, align 8, !dbg !11612, !tbaa !4182
  br label %if.end36, !dbg !11614

if.else:                                          ; preds = %if.then21
  %38 = load ptr, ptr %ctxt.addr, align 8, !dbg !11615, !tbaa !1527
  %error35 = getelementptr inbounds %struct._xmlAutomata, ptr %38, i32 0, i32 2, !dbg !11615
  store i32 1450, ptr %error35, align 8, !dbg !11615, !tbaa !1729
  %39 = load ptr, ptr %ctxt.addr, align 8, !dbg !11615, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %39, ptr noundef @.str.108), !dbg !11615
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then32
  br label %while.end, !dbg !11617

if.else37:                                        ; preds = %land.lhs.true, %while.body
  %40 = load ptr, ptr %ctxt.addr, align 8, !dbg !11618, !tbaa !1527
  call void @xmlFAParsePosCharGroup(ptr noundef %40), !dbg !11620
  br label %if.end38

if.end38:                                         ; preds = %if.else37
  br label %while.cond, !dbg !11580, !llvm.loop !11621

while.end:                                        ; preds = %if.end36, %land.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %neg) #8, !dbg !11623
  ret void, !dbg !11623
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAParseCharClassEsc(ptr noundef %ctxt) #0 !dbg !11624 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %cur = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %type250 = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !11626, metadata !DIExpression()), !dbg !11634
  call void @llvm.lifetime.start.p0(i64 4, ptr %cur) #8, !dbg !11635
  tail call void @llvm.dbg.declare(metadata ptr %cur, metadata !11627, metadata !DIExpression()), !dbg !11636
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !11637, !tbaa !1527
  %cur1 = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 1, !dbg !11637
  %1 = load ptr, ptr %cur1, align 8, !dbg !11637, !tbaa !4182
  %2 = load i8, ptr %1, align 1, !dbg !11637, !tbaa !2932
  %conv = zext i8 %2 to i32, !dbg !11637
  %cmp = icmp eq i32 %conv, 46, !dbg !11639
  br i1 %cmp, label %if.then, label %if.end14, !dbg !11640

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !11641, !tbaa !1527
  %atom = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 7, !dbg !11644
  %4 = load ptr, ptr %atom, align 8, !dbg !11644, !tbaa !10568
  %cmp3 = icmp eq ptr %4, null, !dbg !11645
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !11646

if.then5:                                         ; preds = %if.then
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !11647, !tbaa !1527
  %call = call ptr @xmlRegNewAtom(ptr noundef %5, i32 noundef 6), !dbg !11649
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !11650, !tbaa !1527
  %atom6 = getelementptr inbounds %struct._xmlAutomata, ptr %6, i32 0, i32 7, !dbg !11651
  store ptr %call, ptr %atom6, align 8, !dbg !11652, !tbaa !10568
  br label %if.end12, !dbg !11653

if.else:                                          ; preds = %if.then
  %7 = load ptr, ptr %ctxt.addr, align 8, !dbg !11654, !tbaa !1527
  %atom7 = getelementptr inbounds %struct._xmlAutomata, ptr %7, i32 0, i32 7, !dbg !11656
  %8 = load ptr, ptr %atom7, align 8, !dbg !11656, !tbaa !10568
  %type = getelementptr inbounds %struct._xmlRegAtom, ptr %8, i32 0, i32 1, !dbg !11657
  %9 = load i32, ptr %type, align 4, !dbg !11657, !tbaa !3988
  %cmp8 = icmp eq i32 %9, 3, !dbg !11658
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !11659

if.then10:                                        ; preds = %if.else
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !11660, !tbaa !1527
  %11 = load ptr, ptr %ctxt.addr, align 8, !dbg !11662, !tbaa !1527
  %atom11 = getelementptr inbounds %struct._xmlAutomata, ptr %11, i32 0, i32 7, !dbg !11663
  %12 = load ptr, ptr %atom11, align 8, !dbg !11663, !tbaa !10568
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !11664, !tbaa !1527
  %neg = getelementptr inbounds %struct._xmlAutomata, ptr %13, i32 0, i32 3, !dbg !11665
  %14 = load i32, ptr %neg, align 4, !dbg !11665, !tbaa !4264
  call void @xmlRegAtomAddRange(ptr noundef %10, ptr noundef %12, i32 noundef %14, i32 noundef 6, i32 noundef 0, i32 noundef 0, ptr noundef null), !dbg !11666
  br label %if.end, !dbg !11667

if.end:                                           ; preds = %if.then10, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then5
  %15 = load ptr, ptr %ctxt.addr, align 8, !dbg !11668, !tbaa !1527
  %cur13 = getelementptr inbounds %struct._xmlAutomata, ptr %15, i32 0, i32 1, !dbg !11668
  %16 = load ptr, ptr %cur13, align 8, !dbg !11668, !tbaa !4182
  %incdec.ptr = getelementptr inbounds i8, ptr %16, i32 1, !dbg !11668
  store ptr %incdec.ptr, ptr %cur13, align 8, !dbg !11668, !tbaa !4182
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11669

if.end14:                                         ; preds = %entry
  %17 = load ptr, ptr %ctxt.addr, align 8, !dbg !11670, !tbaa !1527
  %cur15 = getelementptr inbounds %struct._xmlAutomata, ptr %17, i32 0, i32 1, !dbg !11670
  %18 = load ptr, ptr %cur15, align 8, !dbg !11670, !tbaa !4182
  %19 = load i8, ptr %18, align 1, !dbg !11670, !tbaa !2932
  %conv16 = zext i8 %19 to i32, !dbg !11670
  %cmp17 = icmp ne i32 %conv16, 92, !dbg !11672
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !11673

if.then19:                                        ; preds = %if.end14
  %20 = load ptr, ptr %ctxt.addr, align 8, !dbg !11674, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %20, i32 0, i32 2, !dbg !11674
  store i32 1450, ptr %error, align 8, !dbg !11674, !tbaa !1729
  %21 = load ptr, ptr %ctxt.addr, align 8, !dbg !11674, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %21, ptr noundef @.str.118), !dbg !11674
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11676

if.end20:                                         ; preds = %if.end14
  %22 = load ptr, ptr %ctxt.addr, align 8, !dbg !11677, !tbaa !1527
  %cur21 = getelementptr inbounds %struct._xmlAutomata, ptr %22, i32 0, i32 1, !dbg !11677
  %23 = load ptr, ptr %cur21, align 8, !dbg !11677, !tbaa !4182
  %incdec.ptr22 = getelementptr inbounds i8, ptr %23, i32 1, !dbg !11677
  store ptr %incdec.ptr22, ptr %cur21, align 8, !dbg !11677, !tbaa !4182
  %24 = load ptr, ptr %ctxt.addr, align 8, !dbg !11678, !tbaa !1527
  %cur23 = getelementptr inbounds %struct._xmlAutomata, ptr %24, i32 0, i32 1, !dbg !11678
  %25 = load ptr, ptr %cur23, align 8, !dbg !11678, !tbaa !4182
  %26 = load i8, ptr %25, align 1, !dbg !11678, !tbaa !2932
  %conv24 = zext i8 %26 to i32, !dbg !11678
  store i32 %conv24, ptr %cur, align 4, !dbg !11679, !tbaa !1767
  %27 = load i32, ptr %cur, align 4, !dbg !11680, !tbaa !1767
  %cmp25 = icmp eq i32 %27, 112, !dbg !11681
  br i1 %cmp25, label %if.then27, label %if.else48, !dbg !11682

if.then27:                                        ; preds = %if.end20
  %28 = load ptr, ptr %ctxt.addr, align 8, !dbg !11683, !tbaa !1527
  %cur28 = getelementptr inbounds %struct._xmlAutomata, ptr %28, i32 0, i32 1, !dbg !11683
  %29 = load ptr, ptr %cur28, align 8, !dbg !11683, !tbaa !4182
  %incdec.ptr29 = getelementptr inbounds i8, ptr %29, i32 1, !dbg !11683
  store ptr %incdec.ptr29, ptr %cur28, align 8, !dbg !11683, !tbaa !4182
  %30 = load ptr, ptr %ctxt.addr, align 8, !dbg !11685, !tbaa !1527
  %cur30 = getelementptr inbounds %struct._xmlAutomata, ptr %30, i32 0, i32 1, !dbg !11685
  %31 = load ptr, ptr %cur30, align 8, !dbg !11685, !tbaa !4182
  %32 = load i8, ptr %31, align 1, !dbg !11685, !tbaa !2932
  %conv31 = zext i8 %32 to i32, !dbg !11685
  %cmp32 = icmp ne i32 %conv31, 123, !dbg !11687
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !11688

if.then34:                                        ; preds = %if.then27
  %33 = load ptr, ptr %ctxt.addr, align 8, !dbg !11689, !tbaa !1527
  %error35 = getelementptr inbounds %struct._xmlAutomata, ptr %33, i32 0, i32 2, !dbg !11689
  store i32 1450, ptr %error35, align 8, !dbg !11689, !tbaa !1729
  %34 = load ptr, ptr %ctxt.addr, align 8, !dbg !11689, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %34, ptr noundef @.str.119), !dbg !11689
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11691

if.end36:                                         ; preds = %if.then27
  %35 = load ptr, ptr %ctxt.addr, align 8, !dbg !11692, !tbaa !1527
  %cur37 = getelementptr inbounds %struct._xmlAutomata, ptr %35, i32 0, i32 1, !dbg !11692
  %36 = load ptr, ptr %cur37, align 8, !dbg !11692, !tbaa !4182
  %incdec.ptr38 = getelementptr inbounds i8, ptr %36, i32 1, !dbg !11692
  store ptr %incdec.ptr38, ptr %cur37, align 8, !dbg !11692, !tbaa !4182
  %37 = load ptr, ptr %ctxt.addr, align 8, !dbg !11693, !tbaa !1527
  call void @xmlFAParseCharProp(ptr noundef %37), !dbg !11694
  %38 = load ptr, ptr %ctxt.addr, align 8, !dbg !11695, !tbaa !1527
  %cur39 = getelementptr inbounds %struct._xmlAutomata, ptr %38, i32 0, i32 1, !dbg !11695
  %39 = load ptr, ptr %cur39, align 8, !dbg !11695, !tbaa !4182
  %40 = load i8, ptr %39, align 1, !dbg !11695, !tbaa !2932
  %conv40 = zext i8 %40 to i32, !dbg !11695
  %cmp41 = icmp ne i32 %conv40, 125, !dbg !11697
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !11698

if.then43:                                        ; preds = %if.end36
  %41 = load ptr, ptr %ctxt.addr, align 8, !dbg !11699, !tbaa !1527
  %error44 = getelementptr inbounds %struct._xmlAutomata, ptr %41, i32 0, i32 2, !dbg !11699
  store i32 1450, ptr %error44, align 8, !dbg !11699, !tbaa !1729
  %42 = load ptr, ptr %ctxt.addr, align 8, !dbg !11699, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %42, ptr noundef @.str.120), !dbg !11699
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11701

if.end45:                                         ; preds = %if.end36
  %43 = load ptr, ptr %ctxt.addr, align 8, !dbg !11702, !tbaa !1527
  %cur46 = getelementptr inbounds %struct._xmlAutomata, ptr %43, i32 0, i32 1, !dbg !11702
  %44 = load ptr, ptr %cur46, align 8, !dbg !11702, !tbaa !4182
  %incdec.ptr47 = getelementptr inbounds i8, ptr %44, i32 1, !dbg !11702
  store ptr %incdec.ptr47, ptr %cur46, align 8, !dbg !11702, !tbaa !4182
  br label %if.end285, !dbg !11703

if.else48:                                        ; preds = %if.end20
  %45 = load i32, ptr %cur, align 4, !dbg !11704, !tbaa !1767
  %cmp49 = icmp eq i32 %45, 80, !dbg !11705
  br i1 %cmp49, label %if.then51, label %if.else79, !dbg !11706

if.then51:                                        ; preds = %if.else48
  %46 = load ptr, ptr %ctxt.addr, align 8, !dbg !11707, !tbaa !1527
  %cur52 = getelementptr inbounds %struct._xmlAutomata, ptr %46, i32 0, i32 1, !dbg !11707
  %47 = load ptr, ptr %cur52, align 8, !dbg !11707, !tbaa !4182
  %incdec.ptr53 = getelementptr inbounds i8, ptr %47, i32 1, !dbg !11707
  store ptr %incdec.ptr53, ptr %cur52, align 8, !dbg !11707, !tbaa !4182
  %48 = load ptr, ptr %ctxt.addr, align 8, !dbg !11709, !tbaa !1527
  %cur54 = getelementptr inbounds %struct._xmlAutomata, ptr %48, i32 0, i32 1, !dbg !11709
  %49 = load ptr, ptr %cur54, align 8, !dbg !11709, !tbaa !4182
  %50 = load i8, ptr %49, align 1, !dbg !11709, !tbaa !2932
  %conv55 = zext i8 %50 to i32, !dbg !11709
  %cmp56 = icmp ne i32 %conv55, 123, !dbg !11711
  br i1 %cmp56, label %if.then58, label %if.end60, !dbg !11712

if.then58:                                        ; preds = %if.then51
  %51 = load ptr, ptr %ctxt.addr, align 8, !dbg !11713, !tbaa !1527
  %error59 = getelementptr inbounds %struct._xmlAutomata, ptr %51, i32 0, i32 2, !dbg !11713
  store i32 1450, ptr %error59, align 8, !dbg !11713, !tbaa !1729
  %52 = load ptr, ptr %ctxt.addr, align 8, !dbg !11713, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %52, ptr noundef @.str.119), !dbg !11713
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11715

if.end60:                                         ; preds = %if.then51
  %53 = load ptr, ptr %ctxt.addr, align 8, !dbg !11716, !tbaa !1527
  %cur61 = getelementptr inbounds %struct._xmlAutomata, ptr %53, i32 0, i32 1, !dbg !11716
  %54 = load ptr, ptr %cur61, align 8, !dbg !11716, !tbaa !4182
  %incdec.ptr62 = getelementptr inbounds i8, ptr %54, i32 1, !dbg !11716
  store ptr %incdec.ptr62, ptr %cur61, align 8, !dbg !11716, !tbaa !4182
  %55 = load ptr, ptr %ctxt.addr, align 8, !dbg !11717, !tbaa !1527
  call void @xmlFAParseCharProp(ptr noundef %55), !dbg !11718
  %56 = load ptr, ptr %ctxt.addr, align 8, !dbg !11719, !tbaa !1527
  %atom63 = getelementptr inbounds %struct._xmlAutomata, ptr %56, i32 0, i32 7, !dbg !11721
  %57 = load ptr, ptr %atom63, align 8, !dbg !11721, !tbaa !10568
  %cmp64 = icmp ne ptr %57, null, !dbg !11722
  br i1 %cmp64, label %if.then66, label %if.end69, !dbg !11723

if.then66:                                        ; preds = %if.end60
  %58 = load ptr, ptr %ctxt.addr, align 8, !dbg !11724, !tbaa !1527
  %atom67 = getelementptr inbounds %struct._xmlAutomata, ptr %58, i32 0, i32 7, !dbg !11725
  %59 = load ptr, ptr %atom67, align 8, !dbg !11725, !tbaa !10568
  %neg68 = getelementptr inbounds %struct._xmlRegAtom, ptr %59, i32 0, i32 7, !dbg !11726
  store i32 1, ptr %neg68, align 8, !dbg !11727, !tbaa !2323
  br label %if.end69, !dbg !11724

if.end69:                                         ; preds = %if.then66, %if.end60
  %60 = load ptr, ptr %ctxt.addr, align 8, !dbg !11728, !tbaa !1527
  %cur70 = getelementptr inbounds %struct._xmlAutomata, ptr %60, i32 0, i32 1, !dbg !11728
  %61 = load ptr, ptr %cur70, align 8, !dbg !11728, !tbaa !4182
  %62 = load i8, ptr %61, align 1, !dbg !11728, !tbaa !2932
  %conv71 = zext i8 %62 to i32, !dbg !11728
  %cmp72 = icmp ne i32 %conv71, 125, !dbg !11730
  br i1 %cmp72, label %if.then74, label %if.end76, !dbg !11731

if.then74:                                        ; preds = %if.end69
  %63 = load ptr, ptr %ctxt.addr, align 8, !dbg !11732, !tbaa !1527
  %error75 = getelementptr inbounds %struct._xmlAutomata, ptr %63, i32 0, i32 2, !dbg !11732
  store i32 1450, ptr %error75, align 8, !dbg !11732, !tbaa !1729
  %64 = load ptr, ptr %ctxt.addr, align 8, !dbg !11732, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %64, ptr noundef @.str.120), !dbg !11732
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11734

if.end76:                                         ; preds = %if.end69
  %65 = load ptr, ptr %ctxt.addr, align 8, !dbg !11735, !tbaa !1527
  %cur77 = getelementptr inbounds %struct._xmlAutomata, ptr %65, i32 0, i32 1, !dbg !11735
  %66 = load ptr, ptr %cur77, align 8, !dbg !11735, !tbaa !4182
  %incdec.ptr78 = getelementptr inbounds i8, ptr %66, i32 1, !dbg !11735
  store ptr %incdec.ptr78, ptr %cur77, align 8, !dbg !11735, !tbaa !4182
  br label %if.end284, !dbg !11736

if.else79:                                        ; preds = %if.else48
  %67 = load i32, ptr %cur, align 4, !dbg !11737, !tbaa !1767
  %cmp80 = icmp eq i32 %67, 110, !dbg !11738
  br i1 %cmp80, label %if.then174, label %lor.lhs.false, !dbg !11739

lor.lhs.false:                                    ; preds = %if.else79
  %68 = load i32, ptr %cur, align 4, !dbg !11740, !tbaa !1767
  %cmp82 = icmp eq i32 %68, 114, !dbg !11741
  br i1 %cmp82, label %if.then174, label %lor.lhs.false84, !dbg !11742

lor.lhs.false84:                                  ; preds = %lor.lhs.false
  %69 = load i32, ptr %cur, align 4, !dbg !11743, !tbaa !1767
  %cmp85 = icmp eq i32 %69, 116, !dbg !11744
  br i1 %cmp85, label %if.then174, label %lor.lhs.false87, !dbg !11745

lor.lhs.false87:                                  ; preds = %lor.lhs.false84
  %70 = load i32, ptr %cur, align 4, !dbg !11746, !tbaa !1767
  %cmp88 = icmp eq i32 %70, 92, !dbg !11747
  br i1 %cmp88, label %if.then174, label %lor.lhs.false90, !dbg !11748

lor.lhs.false90:                                  ; preds = %lor.lhs.false87
  %71 = load i32, ptr %cur, align 4, !dbg !11749, !tbaa !1767
  %cmp91 = icmp eq i32 %71, 124, !dbg !11750
  br i1 %cmp91, label %if.then174, label %lor.lhs.false93, !dbg !11751

lor.lhs.false93:                                  ; preds = %lor.lhs.false90
  %72 = load i32, ptr %cur, align 4, !dbg !11752, !tbaa !1767
  %cmp94 = icmp eq i32 %72, 46, !dbg !11753
  br i1 %cmp94, label %if.then174, label %lor.lhs.false96, !dbg !11754

lor.lhs.false96:                                  ; preds = %lor.lhs.false93
  %73 = load i32, ptr %cur, align 4, !dbg !11755, !tbaa !1767
  %cmp97 = icmp eq i32 %73, 63, !dbg !11756
  br i1 %cmp97, label %if.then174, label %lor.lhs.false99, !dbg !11757

lor.lhs.false99:                                  ; preds = %lor.lhs.false96
  %74 = load i32, ptr %cur, align 4, !dbg !11758, !tbaa !1767
  %cmp100 = icmp eq i32 %74, 42, !dbg !11759
  br i1 %cmp100, label %if.then174, label %lor.lhs.false102, !dbg !11760

lor.lhs.false102:                                 ; preds = %lor.lhs.false99
  %75 = load i32, ptr %cur, align 4, !dbg !11761, !tbaa !1767
  %cmp103 = icmp eq i32 %75, 43, !dbg !11762
  br i1 %cmp103, label %if.then174, label %lor.lhs.false105, !dbg !11763

lor.lhs.false105:                                 ; preds = %lor.lhs.false102
  %76 = load i32, ptr %cur, align 4, !dbg !11764, !tbaa !1767
  %cmp106 = icmp eq i32 %76, 40, !dbg !11765
  br i1 %cmp106, label %if.then174, label %lor.lhs.false108, !dbg !11766

lor.lhs.false108:                                 ; preds = %lor.lhs.false105
  %77 = load i32, ptr %cur, align 4, !dbg !11767, !tbaa !1767
  %cmp109 = icmp eq i32 %77, 41, !dbg !11768
  br i1 %cmp109, label %if.then174, label %lor.lhs.false111, !dbg !11769

lor.lhs.false111:                                 ; preds = %lor.lhs.false108
  %78 = load i32, ptr %cur, align 4, !dbg !11770, !tbaa !1767
  %cmp112 = icmp eq i32 %78, 123, !dbg !11771
  br i1 %cmp112, label %if.then174, label %lor.lhs.false114, !dbg !11772

lor.lhs.false114:                                 ; preds = %lor.lhs.false111
  %79 = load i32, ptr %cur, align 4, !dbg !11773, !tbaa !1767
  %cmp115 = icmp eq i32 %79, 125, !dbg !11774
  br i1 %cmp115, label %if.then174, label %lor.lhs.false117, !dbg !11775

lor.lhs.false117:                                 ; preds = %lor.lhs.false114
  %80 = load i32, ptr %cur, align 4, !dbg !11776, !tbaa !1767
  %cmp118 = icmp eq i32 %80, 45, !dbg !11777
  br i1 %cmp118, label %if.then174, label %lor.lhs.false120, !dbg !11778

lor.lhs.false120:                                 ; preds = %lor.lhs.false117
  %81 = load i32, ptr %cur, align 4, !dbg !11779, !tbaa !1767
  %cmp121 = icmp eq i32 %81, 91, !dbg !11780
  br i1 %cmp121, label %if.then174, label %lor.lhs.false123, !dbg !11781

lor.lhs.false123:                                 ; preds = %lor.lhs.false120
  %82 = load i32, ptr %cur, align 4, !dbg !11782, !tbaa !1767
  %cmp124 = icmp eq i32 %82, 93, !dbg !11783
  br i1 %cmp124, label %if.then174, label %lor.lhs.false126, !dbg !11784

lor.lhs.false126:                                 ; preds = %lor.lhs.false123
  %83 = load i32, ptr %cur, align 4, !dbg !11785, !tbaa !1767
  %cmp127 = icmp eq i32 %83, 94, !dbg !11786
  br i1 %cmp127, label %if.then174, label %lor.lhs.false129, !dbg !11787

lor.lhs.false129:                                 ; preds = %lor.lhs.false126
  %84 = load i32, ptr %cur, align 4, !dbg !11788, !tbaa !1767
  %cmp130 = icmp eq i32 %84, 33, !dbg !11789
  br i1 %cmp130, label %if.then174, label %lor.lhs.false132, !dbg !11790

lor.lhs.false132:                                 ; preds = %lor.lhs.false129
  %85 = load i32, ptr %cur, align 4, !dbg !11791, !tbaa !1767
  %cmp133 = icmp eq i32 %85, 34, !dbg !11792
  br i1 %cmp133, label %if.then174, label %lor.lhs.false135, !dbg !11793

lor.lhs.false135:                                 ; preds = %lor.lhs.false132
  %86 = load i32, ptr %cur, align 4, !dbg !11794, !tbaa !1767
  %cmp136 = icmp eq i32 %86, 35, !dbg !11795
  br i1 %cmp136, label %if.then174, label %lor.lhs.false138, !dbg !11796

lor.lhs.false138:                                 ; preds = %lor.lhs.false135
  %87 = load i32, ptr %cur, align 4, !dbg !11797, !tbaa !1767
  %cmp139 = icmp eq i32 %87, 36, !dbg !11798
  br i1 %cmp139, label %if.then174, label %lor.lhs.false141, !dbg !11799

lor.lhs.false141:                                 ; preds = %lor.lhs.false138
  %88 = load i32, ptr %cur, align 4, !dbg !11800, !tbaa !1767
  %cmp142 = icmp eq i32 %88, 37, !dbg !11801
  br i1 %cmp142, label %if.then174, label %lor.lhs.false144, !dbg !11802

lor.lhs.false144:                                 ; preds = %lor.lhs.false141
  %89 = load i32, ptr %cur, align 4, !dbg !11803, !tbaa !1767
  %cmp145 = icmp eq i32 %89, 44, !dbg !11804
  br i1 %cmp145, label %if.then174, label %lor.lhs.false147, !dbg !11805

lor.lhs.false147:                                 ; preds = %lor.lhs.false144
  %90 = load i32, ptr %cur, align 4, !dbg !11806, !tbaa !1767
  %cmp148 = icmp eq i32 %90, 47, !dbg !11807
  br i1 %cmp148, label %if.then174, label %lor.lhs.false150, !dbg !11808

lor.lhs.false150:                                 ; preds = %lor.lhs.false147
  %91 = load i32, ptr %cur, align 4, !dbg !11809, !tbaa !1767
  %cmp151 = icmp eq i32 %91, 58, !dbg !11810
  br i1 %cmp151, label %if.then174, label %lor.lhs.false153, !dbg !11811

lor.lhs.false153:                                 ; preds = %lor.lhs.false150
  %92 = load i32, ptr %cur, align 4, !dbg !11812, !tbaa !1767
  %cmp154 = icmp eq i32 %92, 59, !dbg !11813
  br i1 %cmp154, label %if.then174, label %lor.lhs.false156, !dbg !11814

lor.lhs.false156:                                 ; preds = %lor.lhs.false153
  %93 = load i32, ptr %cur, align 4, !dbg !11815, !tbaa !1767
  %cmp157 = icmp eq i32 %93, 61, !dbg !11816
  br i1 %cmp157, label %if.then174, label %lor.lhs.false159, !dbg !11817

lor.lhs.false159:                                 ; preds = %lor.lhs.false156
  %94 = load i32, ptr %cur, align 4, !dbg !11818, !tbaa !1767
  %cmp160 = icmp eq i32 %94, 62, !dbg !11819
  br i1 %cmp160, label %if.then174, label %lor.lhs.false162, !dbg !11820

lor.lhs.false162:                                 ; preds = %lor.lhs.false159
  %95 = load i32, ptr %cur, align 4, !dbg !11821, !tbaa !1767
  %cmp163 = icmp eq i32 %95, 64, !dbg !11822
  br i1 %cmp163, label %if.then174, label %lor.lhs.false165, !dbg !11823

lor.lhs.false165:                                 ; preds = %lor.lhs.false162
  %96 = load i32, ptr %cur, align 4, !dbg !11824, !tbaa !1767
  %cmp166 = icmp eq i32 %96, 96, !dbg !11825
  br i1 %cmp166, label %if.then174, label %lor.lhs.false168, !dbg !11826

lor.lhs.false168:                                 ; preds = %lor.lhs.false165
  %97 = load i32, ptr %cur, align 4, !dbg !11827, !tbaa !1767
  %cmp169 = icmp eq i32 %97, 126, !dbg !11828
  br i1 %cmp169, label %if.then174, label %lor.lhs.false171, !dbg !11829

lor.lhs.false171:                                 ; preds = %lor.lhs.false168
  %98 = load i32, ptr %cur, align 4, !dbg !11830, !tbaa !1767
  %cmp172 = icmp eq i32 %98, 117, !dbg !11831
  br i1 %cmp172, label %if.then174, label %if.else219, !dbg !11832

if.then174:                                       ; preds = %lor.lhs.false171, %lor.lhs.false168, %lor.lhs.false165, %lor.lhs.false162, %lor.lhs.false159, %lor.lhs.false156, %lor.lhs.false153, %lor.lhs.false150, %lor.lhs.false147, %lor.lhs.false144, %lor.lhs.false141, %lor.lhs.false138, %lor.lhs.false135, %lor.lhs.false132, %lor.lhs.false129, %lor.lhs.false126, %lor.lhs.false123, %lor.lhs.false120, %lor.lhs.false117, %lor.lhs.false114, %lor.lhs.false111, %lor.lhs.false108, %lor.lhs.false105, %lor.lhs.false102, %lor.lhs.false99, %lor.lhs.false96, %lor.lhs.false93, %lor.lhs.false90, %lor.lhs.false87, %lor.lhs.false84, %lor.lhs.false, %if.else79
  %99 = load ptr, ptr %ctxt.addr, align 8, !dbg !11833, !tbaa !1527
  %atom175 = getelementptr inbounds %struct._xmlAutomata, ptr %99, i32 0, i32 7, !dbg !11836
  %100 = load ptr, ptr %atom175, align 8, !dbg !11836, !tbaa !10568
  %cmp176 = icmp eq ptr %100, null, !dbg !11837
  br i1 %cmp176, label %if.then178, label %if.else203, !dbg !11838

if.then178:                                       ; preds = %if.then174
  %101 = load ptr, ptr %ctxt.addr, align 8, !dbg !11839, !tbaa !1527
  %call179 = call ptr @xmlRegNewAtom(ptr noundef %101, i32 noundef 2), !dbg !11841
  %102 = load ptr, ptr %ctxt.addr, align 8, !dbg !11842, !tbaa !1527
  %atom180 = getelementptr inbounds %struct._xmlAutomata, ptr %102, i32 0, i32 7, !dbg !11843
  store ptr %call179, ptr %atom180, align 8, !dbg !11844, !tbaa !10568
  %103 = load ptr, ptr %ctxt.addr, align 8, !dbg !11845, !tbaa !1527
  %atom181 = getelementptr inbounds %struct._xmlAutomata, ptr %103, i32 0, i32 7, !dbg !11847
  %104 = load ptr, ptr %atom181, align 8, !dbg !11847, !tbaa !10568
  %cmp182 = icmp ne ptr %104, null, !dbg !11848
  br i1 %cmp182, label %if.then184, label %if.end202, !dbg !11849

if.then184:                                       ; preds = %if.then178
  %105 = load i32, ptr %cur, align 4, !dbg !11850, !tbaa !1767
  switch i32 %105, label %sw.default [
    i32 110, label %sw.bb
    i32 114, label %sw.bb186
    i32 116, label %sw.bb189
    i32 117, label %sw.bb192
  ], !dbg !11852

sw.bb:                                            ; preds = %if.then184
  %106 = load ptr, ptr %ctxt.addr, align 8, !dbg !11853, !tbaa !1527
  %atom185 = getelementptr inbounds %struct._xmlAutomata, ptr %106, i32 0, i32 7, !dbg !11855
  %107 = load ptr, ptr %atom185, align 8, !dbg !11855, !tbaa !10568
  %codepoint = getelementptr inbounds %struct._xmlRegAtom, ptr %107, i32 0, i32 8, !dbg !11856
  store i32 10, ptr %codepoint, align 4, !dbg !11857, !tbaa !4022
  br label %sw.epilog, !dbg !11858

sw.bb186:                                         ; preds = %if.then184
  %108 = load ptr, ptr %ctxt.addr, align 8, !dbg !11859, !tbaa !1527
  %atom187 = getelementptr inbounds %struct._xmlAutomata, ptr %108, i32 0, i32 7, !dbg !11860
  %109 = load ptr, ptr %atom187, align 8, !dbg !11860, !tbaa !10568
  %codepoint188 = getelementptr inbounds %struct._xmlRegAtom, ptr %109, i32 0, i32 8, !dbg !11861
  store i32 13, ptr %codepoint188, align 4, !dbg !11862, !tbaa !4022
  br label %sw.epilog, !dbg !11863

sw.bb189:                                         ; preds = %if.then184
  %110 = load ptr, ptr %ctxt.addr, align 8, !dbg !11864, !tbaa !1527
  %atom190 = getelementptr inbounds %struct._xmlAutomata, ptr %110, i32 0, i32 7, !dbg !11865
  %111 = load ptr, ptr %atom190, align 8, !dbg !11865, !tbaa !10568
  %codepoint191 = getelementptr inbounds %struct._xmlRegAtom, ptr %111, i32 0, i32 8, !dbg !11866
  store i32 9, ptr %codepoint191, align 4, !dbg !11867, !tbaa !4022
  br label %sw.epilog, !dbg !11868

sw.bb192:                                         ; preds = %if.then184
  %112 = load ptr, ptr %ctxt.addr, align 8, !dbg !11869, !tbaa !1527
  %call193 = call i32 @parse_escaped_codepoint(ptr noundef %112), !dbg !11870
  store i32 %call193, ptr %cur, align 4, !dbg !11871, !tbaa !1767
  %113 = load i32, ptr %cur, align 4, !dbg !11872, !tbaa !1767
  %cmp194 = icmp slt i32 %113, 0, !dbg !11874
  br i1 %cmp194, label %if.then196, label %if.end197, !dbg !11875

if.then196:                                       ; preds = %sw.bb192
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !11876

if.end197:                                        ; preds = %sw.bb192
  %114 = load i32, ptr %cur, align 4, !dbg !11878, !tbaa !1767
  %115 = load ptr, ptr %ctxt.addr, align 8, !dbg !11879, !tbaa !1527
  %atom198 = getelementptr inbounds %struct._xmlAutomata, ptr %115, i32 0, i32 7, !dbg !11880
  %116 = load ptr, ptr %atom198, align 8, !dbg !11880, !tbaa !10568
  %codepoint199 = getelementptr inbounds %struct._xmlRegAtom, ptr %116, i32 0, i32 8, !dbg !11881
  store i32 %114, ptr %codepoint199, align 4, !dbg !11882, !tbaa !4022
  br label %sw.epilog, !dbg !11883

sw.default:                                       ; preds = %if.then184
  %117 = load i32, ptr %cur, align 4, !dbg !11884, !tbaa !1767
  %118 = load ptr, ptr %ctxt.addr, align 8, !dbg !11885, !tbaa !1527
  %atom200 = getelementptr inbounds %struct._xmlAutomata, ptr %118, i32 0, i32 7, !dbg !11886
  %119 = load ptr, ptr %atom200, align 8, !dbg !11886, !tbaa !10568
  %codepoint201 = getelementptr inbounds %struct._xmlRegAtom, ptr %119, i32 0, i32 8, !dbg !11887
  store i32 %117, ptr %codepoint201, align 4, !dbg !11888, !tbaa !4022
  br label %sw.epilog, !dbg !11889

sw.epilog:                                        ; preds = %sw.default, %if.end197, %sw.bb189, %sw.bb186, %sw.bb
  br label %if.end202, !dbg !11890

if.end202:                                        ; preds = %sw.epilog, %if.then178
  br label %if.end216, !dbg !11891

if.else203:                                       ; preds = %if.then174
  %120 = load ptr, ptr %ctxt.addr, align 8, !dbg !11892, !tbaa !1527
  %atom204 = getelementptr inbounds %struct._xmlAutomata, ptr %120, i32 0, i32 7, !dbg !11894
  %121 = load ptr, ptr %atom204, align 8, !dbg !11894, !tbaa !10568
  %type205 = getelementptr inbounds %struct._xmlRegAtom, ptr %121, i32 0, i32 1, !dbg !11895
  %122 = load i32, ptr %type205, align 4, !dbg !11895, !tbaa !3988
  %cmp206 = icmp eq i32 %122, 3, !dbg !11896
  br i1 %cmp206, label %if.then208, label %if.end215, !dbg !11897

if.then208:                                       ; preds = %if.else203
  %123 = load i32, ptr %cur, align 4, !dbg !11898, !tbaa !1767
  switch i32 %123, label %sw.epilog212 [
    i32 110, label %sw.bb209
    i32 114, label %sw.bb210
    i32 116, label %sw.bb211
  ], !dbg !11900

sw.bb209:                                         ; preds = %if.then208
  store i32 10, ptr %cur, align 4, !dbg !11901, !tbaa !1767
  br label %sw.epilog212, !dbg !11903

sw.bb210:                                         ; preds = %if.then208
  store i32 13, ptr %cur, align 4, !dbg !11904, !tbaa !1767
  br label %sw.epilog212, !dbg !11905

sw.bb211:                                         ; preds = %if.then208
  store i32 9, ptr %cur, align 4, !dbg !11906, !tbaa !1767
  br label %sw.epilog212, !dbg !11907

sw.epilog212:                                     ; preds = %if.then208, %sw.bb211, %sw.bb210, %sw.bb209
  %124 = load ptr, ptr %ctxt.addr, align 8, !dbg !11908, !tbaa !1527
  %125 = load ptr, ptr %ctxt.addr, align 8, !dbg !11909, !tbaa !1527
  %atom213 = getelementptr inbounds %struct._xmlAutomata, ptr %125, i32 0, i32 7, !dbg !11910
  %126 = load ptr, ptr %atom213, align 8, !dbg !11910, !tbaa !10568
  %127 = load ptr, ptr %ctxt.addr, align 8, !dbg !11911, !tbaa !1527
  %neg214 = getelementptr inbounds %struct._xmlAutomata, ptr %127, i32 0, i32 3, !dbg !11912
  %128 = load i32, ptr %neg214, align 4, !dbg !11912, !tbaa !4264
  %129 = load i32, ptr %cur, align 4, !dbg !11913, !tbaa !1767
  %130 = load i32, ptr %cur, align 4, !dbg !11914, !tbaa !1767
  call void @xmlRegAtomAddRange(ptr noundef %124, ptr noundef %126, i32 noundef %128, i32 noundef 2, i32 noundef %129, i32 noundef %130, ptr noundef null), !dbg !11915
  br label %if.end215, !dbg !11916

if.end215:                                        ; preds = %sw.epilog212, %if.else203
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %if.end202
  %131 = load ptr, ptr %ctxt.addr, align 8, !dbg !11917, !tbaa !1527
  %cur217 = getelementptr inbounds %struct._xmlAutomata, ptr %131, i32 0, i32 1, !dbg !11917
  %132 = load ptr, ptr %cur217, align 8, !dbg !11917, !tbaa !4182
  %incdec.ptr218 = getelementptr inbounds i8, ptr %132, i32 1, !dbg !11917
  store ptr %incdec.ptr218, ptr %cur217, align 8, !dbg !11917, !tbaa !4182
  br label %if.end283, !dbg !11918

if.else219:                                       ; preds = %lor.lhs.false171
  %133 = load i32, ptr %cur, align 4, !dbg !11919, !tbaa !1767
  %cmp220 = icmp eq i32 %133, 115, !dbg !11920
  br i1 %cmp220, label %if.then249, label %lor.lhs.false222, !dbg !11921

lor.lhs.false222:                                 ; preds = %if.else219
  %134 = load i32, ptr %cur, align 4, !dbg !11922, !tbaa !1767
  %cmp223 = icmp eq i32 %134, 83, !dbg !11923
  br i1 %cmp223, label %if.then249, label %lor.lhs.false225, !dbg !11924

lor.lhs.false225:                                 ; preds = %lor.lhs.false222
  %135 = load i32, ptr %cur, align 4, !dbg !11925, !tbaa !1767
  %cmp226 = icmp eq i32 %135, 105, !dbg !11926
  br i1 %cmp226, label %if.then249, label %lor.lhs.false228, !dbg !11927

lor.lhs.false228:                                 ; preds = %lor.lhs.false225
  %136 = load i32, ptr %cur, align 4, !dbg !11928, !tbaa !1767
  %cmp229 = icmp eq i32 %136, 73, !dbg !11929
  br i1 %cmp229, label %if.then249, label %lor.lhs.false231, !dbg !11930

lor.lhs.false231:                                 ; preds = %lor.lhs.false228
  %137 = load i32, ptr %cur, align 4, !dbg !11931, !tbaa !1767
  %cmp232 = icmp eq i32 %137, 99, !dbg !11932
  br i1 %cmp232, label %if.then249, label %lor.lhs.false234, !dbg !11933

lor.lhs.false234:                                 ; preds = %lor.lhs.false231
  %138 = load i32, ptr %cur, align 4, !dbg !11934, !tbaa !1767
  %cmp235 = icmp eq i32 %138, 67, !dbg !11935
  br i1 %cmp235, label %if.then249, label %lor.lhs.false237, !dbg !11936

lor.lhs.false237:                                 ; preds = %lor.lhs.false234
  %139 = load i32, ptr %cur, align 4, !dbg !11937, !tbaa !1767
  %cmp238 = icmp eq i32 %139, 100, !dbg !11938
  br i1 %cmp238, label %if.then249, label %lor.lhs.false240, !dbg !11939

lor.lhs.false240:                                 ; preds = %lor.lhs.false237
  %140 = load i32, ptr %cur, align 4, !dbg !11940, !tbaa !1767
  %cmp241 = icmp eq i32 %140, 68, !dbg !11941
  br i1 %cmp241, label %if.then249, label %lor.lhs.false243, !dbg !11942

lor.lhs.false243:                                 ; preds = %lor.lhs.false240
  %141 = load i32, ptr %cur, align 4, !dbg !11943, !tbaa !1767
  %cmp244 = icmp eq i32 %141, 119, !dbg !11944
  br i1 %cmp244, label %if.then249, label %lor.lhs.false246, !dbg !11945

lor.lhs.false246:                                 ; preds = %lor.lhs.false243
  %142 = load i32, ptr %cur, align 4, !dbg !11946, !tbaa !1767
  %cmp247 = icmp eq i32 %142, 87, !dbg !11947
  br i1 %cmp247, label %if.then249, label %if.else280, !dbg !11948

if.then249:                                       ; preds = %lor.lhs.false246, %lor.lhs.false243, %lor.lhs.false240, %lor.lhs.false237, %lor.lhs.false234, %lor.lhs.false231, %lor.lhs.false228, %lor.lhs.false225, %lor.lhs.false222, %if.else219
  call void @llvm.lifetime.start.p0(i64 4, ptr %type250) #8, !dbg !11949
  tail call void @llvm.dbg.declare(metadata ptr %type250, metadata !11628, metadata !DIExpression()), !dbg !11950
  store i32 7, ptr %type250, align 4, !dbg !11950, !tbaa !2932
  %143 = load i32, ptr %cur, align 4, !dbg !11951, !tbaa !1767
  switch i32 %143, label %sw.epilog261 [
    i32 115, label %sw.bb251
    i32 83, label %sw.bb252
    i32 105, label %sw.bb253
    i32 73, label %sw.bb254
    i32 99, label %sw.bb255
    i32 67, label %sw.bb256
    i32 100, label %sw.bb257
    i32 68, label %sw.bb258
    i32 119, label %sw.bb259
    i32 87, label %sw.bb260
  ], !dbg !11952

sw.bb251:                                         ; preds = %if.then249
  store i32 7, ptr %type250, align 4, !dbg !11953, !tbaa !2932
  br label %sw.epilog261, !dbg !11955

sw.bb252:                                         ; preds = %if.then249
  store i32 8, ptr %type250, align 4, !dbg !11956, !tbaa !2932
  br label %sw.epilog261, !dbg !11957

sw.bb253:                                         ; preds = %if.then249
  store i32 9, ptr %type250, align 4, !dbg !11958, !tbaa !2932
  br label %sw.epilog261, !dbg !11959

sw.bb254:                                         ; preds = %if.then249
  store i32 10, ptr %type250, align 4, !dbg !11960, !tbaa !2932
  br label %sw.epilog261, !dbg !11961

sw.bb255:                                         ; preds = %if.then249
  store i32 11, ptr %type250, align 4, !dbg !11962, !tbaa !2932
  br label %sw.epilog261, !dbg !11963

sw.bb256:                                         ; preds = %if.then249
  store i32 12, ptr %type250, align 4, !dbg !11964, !tbaa !2932
  br label %sw.epilog261, !dbg !11965

sw.bb257:                                         ; preds = %if.then249
  store i32 13, ptr %type250, align 4, !dbg !11966, !tbaa !2932
  br label %sw.epilog261, !dbg !11967

sw.bb258:                                         ; preds = %if.then249
  store i32 14, ptr %type250, align 4, !dbg !11968, !tbaa !2932
  br label %sw.epilog261, !dbg !11969

sw.bb259:                                         ; preds = %if.then249
  store i32 15, ptr %type250, align 4, !dbg !11970, !tbaa !2932
  br label %sw.epilog261, !dbg !11971

sw.bb260:                                         ; preds = %if.then249
  store i32 16, ptr %type250, align 4, !dbg !11972, !tbaa !2932
  br label %sw.epilog261, !dbg !11973

sw.epilog261:                                     ; preds = %if.then249, %sw.bb260, %sw.bb259, %sw.bb258, %sw.bb257, %sw.bb256, %sw.bb255, %sw.bb254, %sw.bb253, %sw.bb252, %sw.bb251
  %144 = load ptr, ptr %ctxt.addr, align 8, !dbg !11974, !tbaa !1527
  %cur262 = getelementptr inbounds %struct._xmlAutomata, ptr %144, i32 0, i32 1, !dbg !11974
  %145 = load ptr, ptr %cur262, align 8, !dbg !11974, !tbaa !4182
  %incdec.ptr263 = getelementptr inbounds i8, ptr %145, i32 1, !dbg !11974
  store ptr %incdec.ptr263, ptr %cur262, align 8, !dbg !11974, !tbaa !4182
  %146 = load ptr, ptr %ctxt.addr, align 8, !dbg !11975, !tbaa !1527
  %atom264 = getelementptr inbounds %struct._xmlAutomata, ptr %146, i32 0, i32 7, !dbg !11977
  %147 = load ptr, ptr %atom264, align 8, !dbg !11977, !tbaa !10568
  %cmp265 = icmp eq ptr %147, null, !dbg !11978
  br i1 %cmp265, label %if.then267, label %if.else270, !dbg !11979

if.then267:                                       ; preds = %sw.epilog261
  %148 = load ptr, ptr %ctxt.addr, align 8, !dbg !11980, !tbaa !1527
  %149 = load i32, ptr %type250, align 4, !dbg !11982, !tbaa !2932
  %call268 = call ptr @xmlRegNewAtom(ptr noundef %148, i32 noundef %149), !dbg !11983
  %150 = load ptr, ptr %ctxt.addr, align 8, !dbg !11984, !tbaa !1527
  %atom269 = getelementptr inbounds %struct._xmlAutomata, ptr %150, i32 0, i32 7, !dbg !11985
  store ptr %call268, ptr %atom269, align 8, !dbg !11986, !tbaa !10568
  br label %if.end279, !dbg !11987

if.else270:                                       ; preds = %sw.epilog261
  %151 = load ptr, ptr %ctxt.addr, align 8, !dbg !11988, !tbaa !1527
  %atom271 = getelementptr inbounds %struct._xmlAutomata, ptr %151, i32 0, i32 7, !dbg !11990
  %152 = load ptr, ptr %atom271, align 8, !dbg !11990, !tbaa !10568
  %type272 = getelementptr inbounds %struct._xmlRegAtom, ptr %152, i32 0, i32 1, !dbg !11991
  %153 = load i32, ptr %type272, align 4, !dbg !11991, !tbaa !3988
  %cmp273 = icmp eq i32 %153, 3, !dbg !11992
  br i1 %cmp273, label %if.then275, label %if.end278, !dbg !11993

if.then275:                                       ; preds = %if.else270
  %154 = load ptr, ptr %ctxt.addr, align 8, !dbg !11994, !tbaa !1527
  %155 = load ptr, ptr %ctxt.addr, align 8, !dbg !11996, !tbaa !1527
  %atom276 = getelementptr inbounds %struct._xmlAutomata, ptr %155, i32 0, i32 7, !dbg !11997
  %156 = load ptr, ptr %atom276, align 8, !dbg !11997, !tbaa !10568
  %157 = load ptr, ptr %ctxt.addr, align 8, !dbg !11998, !tbaa !1527
  %neg277 = getelementptr inbounds %struct._xmlAutomata, ptr %157, i32 0, i32 3, !dbg !11999
  %158 = load i32, ptr %neg277, align 4, !dbg !11999, !tbaa !4264
  %159 = load i32, ptr %type250, align 4, !dbg !12000, !tbaa !2932
  call void @xmlRegAtomAddRange(ptr noundef %154, ptr noundef %156, i32 noundef %158, i32 noundef %159, i32 noundef 0, i32 noundef 0, ptr noundef null), !dbg !12001
  br label %if.end278, !dbg !12002

if.end278:                                        ; preds = %if.then275, %if.else270
  br label %if.end279

if.end279:                                        ; preds = %if.end278, %if.then267
  call void @llvm.lifetime.end.p0(i64 4, ptr %type250) #8, !dbg !12003
  br label %if.end282, !dbg !12004

if.else280:                                       ; preds = %lor.lhs.false246
  %160 = load ptr, ptr %ctxt.addr, align 8, !dbg !12005, !tbaa !1527
  %error281 = getelementptr inbounds %struct._xmlAutomata, ptr %160, i32 0, i32 2, !dbg !12005
  store i32 1450, ptr %error281, align 8, !dbg !12005, !tbaa !1729
  %161 = load ptr, ptr %ctxt.addr, align 8, !dbg !12005, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %161, ptr noundef @.str.121), !dbg !12005
  br label %if.end282

if.end282:                                        ; preds = %if.else280, %if.end279
  br label %if.end283

if.end283:                                        ; preds = %if.end282, %if.end216
  br label %if.end284

if.end284:                                        ; preds = %if.end283, %if.end76
  br label %if.end285

if.end285:                                        ; preds = %if.end284, %if.end45
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12007
  br label %cleanup, !dbg !12007

cleanup:                                          ; preds = %if.end285, %if.then196, %if.then74, %if.then58, %if.then43, %if.then34, %if.then19, %if.end12
  call void @llvm.lifetime.end.p0(i64 4, ptr %cur) #8, !dbg !12007
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !12007

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAParsePosCharGroup(ptr noundef %ctxt) #0 !dbg !12008 {
entry:
  %ctxt.addr = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !12010, metadata !DIExpression()), !dbg !12011
  br label %do.body, !dbg !12012

do.body:                                          ; preds = %land.end, %entry
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !12013, !tbaa !1527
  %cur = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 1, !dbg !12013
  %1 = load ptr, ptr %cur, align 8, !dbg !12013, !tbaa !4182
  %2 = load i8, ptr %1, align 1, !dbg !12013, !tbaa !2932
  %conv = zext i8 %2 to i32, !dbg !12013
  %cmp = icmp eq i32 %conv, 92, !dbg !12016
  br i1 %cmp, label %if.then, label %if.else, !dbg !12017

if.then:                                          ; preds = %do.body
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !12018, !tbaa !1527
  call void @xmlFAParseCharClassEsc(ptr noundef %3), !dbg !12020
  br label %if.end, !dbg !12021

if.else:                                          ; preds = %do.body
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !12022, !tbaa !1527
  call void @xmlFAParseCharRange(ptr noundef %4), !dbg !12024
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.cond, !dbg !12025

do.cond:                                          ; preds = %if.end
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !12026, !tbaa !1527
  %cur2 = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 1, !dbg !12026
  %6 = load ptr, ptr %cur2, align 8, !dbg !12026, !tbaa !4182
  %7 = load i8, ptr %6, align 1, !dbg !12026, !tbaa !2932
  %conv3 = zext i8 %7 to i32, !dbg !12026
  %cmp4 = icmp ne i32 %conv3, 93, !dbg !12027
  br i1 %cmp4, label %land.lhs.true, label %land.end, !dbg !12028

land.lhs.true:                                    ; preds = %do.cond
  %8 = load ptr, ptr %ctxt.addr, align 8, !dbg !12029, !tbaa !1527
  %cur6 = getelementptr inbounds %struct._xmlAutomata, ptr %8, i32 0, i32 1, !dbg !12029
  %9 = load ptr, ptr %cur6, align 8, !dbg !12029, !tbaa !4182
  %10 = load i8, ptr %9, align 1, !dbg !12029, !tbaa !2932
  %conv7 = zext i8 %10 to i32, !dbg !12029
  %cmp8 = icmp ne i32 %conv7, 45, !dbg !12030
  br i1 %cmp8, label %land.lhs.true10, label %land.end, !dbg !12031

land.lhs.true10:                                  ; preds = %land.lhs.true
  %11 = load ptr, ptr %ctxt.addr, align 8, !dbg !12032, !tbaa !1527
  %cur11 = getelementptr inbounds %struct._xmlAutomata, ptr %11, i32 0, i32 1, !dbg !12032
  %12 = load ptr, ptr %cur11, align 8, !dbg !12032, !tbaa !4182
  %13 = load i8, ptr %12, align 1, !dbg !12032, !tbaa !2932
  %conv12 = zext i8 %13 to i32, !dbg !12032
  %cmp13 = icmp ne i32 %conv12, 0, !dbg !12033
  br i1 %cmp13, label %land.rhs, label %land.end, !dbg !12034

land.rhs:                                         ; preds = %land.lhs.true10
  %14 = load ptr, ptr %ctxt.addr, align 8, !dbg !12035, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %14, i32 0, i32 2, !dbg !12036
  %15 = load i32, ptr %error, align 8, !dbg !12036, !tbaa !1729
  %cmp15 = icmp eq i32 %15, 0, !dbg !12037
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true10, %land.lhs.true, %do.cond
  %16 = phi i1 [ false, %land.lhs.true10 ], [ false, %land.lhs.true ], [ false, %do.cond ], [ %cmp15, %land.rhs ], !dbg !12038
  br i1 %16, label %do.body, label %do.end, !dbg !12025, !llvm.loop !12039

do.end:                                           ; preds = %land.end
  ret void, !dbg !12041
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAParseCharRange(ptr noundef %ctxt) #0 !dbg !12042 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %cur = alloca i32, align 4
  %len = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !12044, metadata !DIExpression()), !dbg !12049
  call void @llvm.lifetime.start.p0(i64 4, ptr %cur) #8, !dbg !12050
  tail call void @llvm.dbg.declare(metadata ptr %cur, metadata !12045, metadata !DIExpression()), !dbg !12051
  call void @llvm.lifetime.start.p0(i64 4, ptr %len) #8, !dbg !12050
  tail call void @llvm.dbg.declare(metadata ptr %len, metadata !12046, metadata !DIExpression()), !dbg !12052
  call void @llvm.lifetime.start.p0(i64 4, ptr %start) #8, !dbg !12053
  tail call void @llvm.dbg.declare(metadata ptr %start, metadata !12047, metadata !DIExpression()), !dbg !12054
  store i32 -1, ptr %start, align 4, !dbg !12054, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 4, ptr %end) #8, !dbg !12055
  tail call void @llvm.dbg.declare(metadata ptr %end, metadata !12048, metadata !DIExpression()), !dbg !12056
  store i32 -1, ptr %end, align 4, !dbg !12056, !tbaa !1767
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !12057, !tbaa !1527
  %cur1 = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 1, !dbg !12057
  %1 = load ptr, ptr %cur1, align 8, !dbg !12057, !tbaa !4182
  %2 = load i8, ptr %1, align 1, !dbg !12057, !tbaa !2932
  %conv = zext i8 %2 to i32, !dbg !12057
  %cmp = icmp eq i32 %conv, 0, !dbg !12059
  br i1 %cmp, label %if.then, label %if.end, !dbg !12060

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !12061, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 2, !dbg !12061
  store i32 1450, ptr %error, align 8, !dbg !12061, !tbaa !1729
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !12061, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %4, ptr noundef @.str.109), !dbg !12061
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12063

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !12064, !tbaa !1527
  %cur3 = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 1, !dbg !12064
  %6 = load ptr, ptr %cur3, align 8, !dbg !12064, !tbaa !4182
  %7 = load i8, ptr %6, align 1, !dbg !12064, !tbaa !2932
  %conv4 = zext i8 %7 to i32, !dbg !12064
  store i32 %conv4, ptr %cur, align 4, !dbg !12065, !tbaa !1767
  %8 = load i32, ptr %cur, align 4, !dbg !12066, !tbaa !1767
  %cmp5 = icmp eq i32 %8, 92, !dbg !12068
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !12069

if.then7:                                         ; preds = %if.end
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !12070, !tbaa !1527
  %cur8 = getelementptr inbounds %struct._xmlAutomata, ptr %9, i32 0, i32 1, !dbg !12070
  %10 = load ptr, ptr %cur8, align 8, !dbg !12070, !tbaa !4182
  %incdec.ptr = getelementptr inbounds i8, ptr %10, i32 1, !dbg !12070
  store ptr %incdec.ptr, ptr %cur8, align 8, !dbg !12070, !tbaa !4182
  %11 = load ptr, ptr %ctxt.addr, align 8, !dbg !12072, !tbaa !1527
  %cur9 = getelementptr inbounds %struct._xmlAutomata, ptr %11, i32 0, i32 1, !dbg !12072
  %12 = load ptr, ptr %cur9, align 8, !dbg !12072, !tbaa !4182
  %13 = load i8, ptr %12, align 1, !dbg !12072, !tbaa !2932
  %conv10 = zext i8 %13 to i32, !dbg !12072
  store i32 %conv10, ptr %cur, align 4, !dbg !12073, !tbaa !1767
  %14 = load i32, ptr %cur, align 4, !dbg !12074, !tbaa !1767
  switch i32 %14, label %sw.default [
    i32 110, label %sw.bb
    i32 114, label %sw.bb11
    i32 116, label %sw.bb12
    i32 92, label %sw.bb13
    i32 124, label %sw.bb13
    i32 46, label %sw.bb13
    i32 45, label %sw.bb13
    i32 94, label %sw.bb13
    i32 63, label %sw.bb13
    i32 42, label %sw.bb13
    i32 43, label %sw.bb13
    i32 123, label %sw.bb13
    i32 125, label %sw.bb13
    i32 40, label %sw.bb13
    i32 41, label %sw.bb13
    i32 91, label %sw.bb13
    i32 93, label %sw.bb13
  ], !dbg !12075

sw.bb:                                            ; preds = %if.then7
  store i32 10, ptr %start, align 4, !dbg !12076, !tbaa !1767
  br label %sw.epilog, !dbg !12078

sw.bb11:                                          ; preds = %if.then7
  store i32 13, ptr %start, align 4, !dbg !12079, !tbaa !1767
  br label %sw.epilog, !dbg !12080

sw.bb12:                                          ; preds = %if.then7
  store i32 9, ptr %start, align 4, !dbg !12081, !tbaa !1767
  br label %sw.epilog, !dbg !12082

sw.bb13:                                          ; preds = %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7, %if.then7
  %15 = load i32, ptr %cur, align 4, !dbg !12083, !tbaa !1767
  store i32 %15, ptr %start, align 4, !dbg !12084, !tbaa !1767
  br label %sw.epilog, !dbg !12085

sw.default:                                       ; preds = %if.then7
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !12086, !tbaa !1527
  %error14 = getelementptr inbounds %struct._xmlAutomata, ptr %16, i32 0, i32 2, !dbg !12086
  store i32 1450, ptr %error14, align 8, !dbg !12086, !tbaa !1729
  %17 = load ptr, ptr %ctxt.addr, align 8, !dbg !12086, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %17, ptr noundef @.str.110), !dbg !12086
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12087

sw.epilog:                                        ; preds = %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb
  %18 = load i32, ptr %start, align 4, !dbg !12088, !tbaa !1767
  store i32 %18, ptr %end, align 4, !dbg !12089, !tbaa !1767
  store i32 1, ptr %len, align 4, !dbg !12090, !tbaa !1767
  br label %if.end24, !dbg !12091

if.else:                                          ; preds = %if.end
  %19 = load i32, ptr %cur, align 4, !dbg !12092, !tbaa !1767
  %cmp15 = icmp ne i32 %19, 91, !dbg !12094
  br i1 %cmp15, label %land.lhs.true, label %if.else21, !dbg !12095

land.lhs.true:                                    ; preds = %if.else
  %20 = load i32, ptr %cur, align 4, !dbg !12096, !tbaa !1767
  %cmp17 = icmp ne i32 %20, 93, !dbg !12097
  br i1 %cmp17, label %if.then19, label %if.else21, !dbg !12098

if.then19:                                        ; preds = %land.lhs.true
  %21 = load ptr, ptr %ctxt.addr, align 8, !dbg !12099, !tbaa !1527
  %cur20 = getelementptr inbounds %struct._xmlAutomata, ptr %21, i32 0, i32 1, !dbg !12099
  %22 = load ptr, ptr %cur20, align 8, !dbg !12099, !tbaa !4182
  %call = call i32 @xmlStringCurrentChar(ptr noundef null, ptr noundef %22, ptr noundef %len), !dbg !12099
  store i32 %call, ptr %start, align 4, !dbg !12101, !tbaa !1767
  store i32 %call, ptr %end, align 4, !dbg !12102, !tbaa !1767
  br label %if.end23, !dbg !12103

if.else21:                                        ; preds = %land.lhs.true, %if.else
  %23 = load ptr, ptr %ctxt.addr, align 8, !dbg !12104, !tbaa !1527
  %error22 = getelementptr inbounds %struct._xmlAutomata, ptr %23, i32 0, i32 2, !dbg !12104
  store i32 1450, ptr %error22, align 8, !dbg !12104, !tbaa !1729
  %24 = load ptr, ptr %ctxt.addr, align 8, !dbg !12104, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %24, ptr noundef @.str.111), !dbg !12104
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12106

if.end23:                                         ; preds = %if.then19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %sw.epilog
  %25 = load i32, ptr %start, align 4, !dbg !12107, !tbaa !1767
  %cmp25 = icmp eq i32 %25, 45, !dbg !12109
  br i1 %cmp25, label %land.lhs.true27, label %if.end46, !dbg !12110

land.lhs.true27:                                  ; preds = %if.end24
  %26 = load ptr, ptr %ctxt.addr, align 8, !dbg !12111, !tbaa !1527
  %cur28 = getelementptr inbounds %struct._xmlAutomata, ptr %26, i32 0, i32 1, !dbg !12111
  %27 = load ptr, ptr %cur28, align 8, !dbg !12111, !tbaa !4182
  %arrayidx = getelementptr inbounds i8, ptr %27, i64 1, !dbg !12111
  %28 = load i8, ptr %arrayidx, align 1, !dbg !12111, !tbaa !2932
  %conv29 = zext i8 %28 to i32, !dbg !12111
  %cmp30 = icmp ne i32 %conv29, 93, !dbg !12112
  br i1 %cmp30, label %land.lhs.true32, label %if.end46, !dbg !12113

land.lhs.true32:                                  ; preds = %land.lhs.true27
  %29 = load ptr, ptr %ctxt.addr, align 8, !dbg !12114, !tbaa !1527
  %cur33 = getelementptr inbounds %struct._xmlAutomata, ptr %29, i32 0, i32 1, !dbg !12114
  %30 = load ptr, ptr %cur33, align 8, !dbg !12114, !tbaa !4182
  %arrayidx34 = getelementptr inbounds i8, ptr %30, i64 -1, !dbg !12114
  %31 = load i8, ptr %arrayidx34, align 1, !dbg !12114, !tbaa !2932
  %conv35 = zext i8 %31 to i32, !dbg !12114
  %cmp36 = icmp ne i32 %conv35, 91, !dbg !12115
  br i1 %cmp36, label %land.lhs.true38, label %if.end46, !dbg !12116

land.lhs.true38:                                  ; preds = %land.lhs.true32
  %32 = load ptr, ptr %ctxt.addr, align 8, !dbg !12117, !tbaa !1527
  %cur39 = getelementptr inbounds %struct._xmlAutomata, ptr %32, i32 0, i32 1, !dbg !12117
  %33 = load ptr, ptr %cur39, align 8, !dbg !12117, !tbaa !4182
  %arrayidx40 = getelementptr inbounds i8, ptr %33, i64 -1, !dbg !12117
  %34 = load i8, ptr %arrayidx40, align 1, !dbg !12117, !tbaa !2932
  %conv41 = zext i8 %34 to i32, !dbg !12117
  %cmp42 = icmp ne i32 %conv41, 94, !dbg !12118
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !12119

if.then44:                                        ; preds = %land.lhs.true38
  %35 = load i32, ptr %len, align 4, !dbg !12120, !tbaa !1767
  %36 = load ptr, ptr %ctxt.addr, align 8, !dbg !12120, !tbaa !1527
  %cur45 = getelementptr inbounds %struct._xmlAutomata, ptr %36, i32 0, i32 1, !dbg !12120
  %37 = load ptr, ptr %cur45, align 8, !dbg !12120, !tbaa !4182
  %idx.ext = sext i32 %35 to i64, !dbg !12120
  %add.ptr = getelementptr inbounds i8, ptr %37, i64 %idx.ext, !dbg !12120
  store ptr %add.ptr, ptr %cur45, align 8, !dbg !12120, !tbaa !4182
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12122

if.end46:                                         ; preds = %land.lhs.true38, %land.lhs.true32, %land.lhs.true27, %if.end24
  %38 = load i32, ptr %len, align 4, !dbg !12123, !tbaa !1767
  %39 = load ptr, ptr %ctxt.addr, align 8, !dbg !12123, !tbaa !1527
  %cur47 = getelementptr inbounds %struct._xmlAutomata, ptr %39, i32 0, i32 1, !dbg !12123
  %40 = load ptr, ptr %cur47, align 8, !dbg !12123, !tbaa !4182
  %idx.ext48 = sext i32 %38 to i64, !dbg !12123
  %add.ptr49 = getelementptr inbounds i8, ptr %40, i64 %idx.ext48, !dbg !12123
  store ptr %add.ptr49, ptr %cur47, align 8, !dbg !12123, !tbaa !4182
  %41 = load ptr, ptr %ctxt.addr, align 8, !dbg !12124, !tbaa !1527
  %cur50 = getelementptr inbounds %struct._xmlAutomata, ptr %41, i32 0, i32 1, !dbg !12124
  %42 = load ptr, ptr %cur50, align 8, !dbg !12124, !tbaa !4182
  %43 = load i8, ptr %42, align 1, !dbg !12124, !tbaa !2932
  %conv51 = zext i8 %43 to i32, !dbg !12124
  store i32 %conv51, ptr %cur, align 4, !dbg !12125, !tbaa !1767
  %44 = load i32, ptr %cur, align 4, !dbg !12126, !tbaa !1767
  %cmp52 = icmp ne i32 %44, 45, !dbg !12128
  br i1 %cmp52, label %if.then65, label %lor.lhs.false, !dbg !12129

lor.lhs.false:                                    ; preds = %if.end46
  %45 = load ptr, ptr %ctxt.addr, align 8, !dbg !12130, !tbaa !1527
  %cur54 = getelementptr inbounds %struct._xmlAutomata, ptr %45, i32 0, i32 1, !dbg !12130
  %46 = load ptr, ptr %cur54, align 8, !dbg !12130, !tbaa !4182
  %arrayidx55 = getelementptr inbounds i8, ptr %46, i64 1, !dbg !12130
  %47 = load i8, ptr %arrayidx55, align 1, !dbg !12130, !tbaa !2932
  %conv56 = zext i8 %47 to i32, !dbg !12130
  %cmp57 = icmp eq i32 %conv56, 91, !dbg !12131
  br i1 %cmp57, label %if.then65, label %lor.lhs.false59, !dbg !12132

lor.lhs.false59:                                  ; preds = %lor.lhs.false
  %48 = load ptr, ptr %ctxt.addr, align 8, !dbg !12133, !tbaa !1527
  %cur60 = getelementptr inbounds %struct._xmlAutomata, ptr %48, i32 0, i32 1, !dbg !12133
  %49 = load ptr, ptr %cur60, align 8, !dbg !12133, !tbaa !4182
  %arrayidx61 = getelementptr inbounds i8, ptr %49, i64 1, !dbg !12133
  %50 = load i8, ptr %arrayidx61, align 1, !dbg !12133, !tbaa !2932
  %conv62 = zext i8 %50 to i32, !dbg !12133
  %cmp63 = icmp eq i32 %conv62, 93, !dbg !12134
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !12135

if.then65:                                        ; preds = %lor.lhs.false59, %lor.lhs.false, %if.end46
  %51 = load ptr, ptr %ctxt.addr, align 8, !dbg !12136, !tbaa !1527
  %52 = load ptr, ptr %ctxt.addr, align 8, !dbg !12138, !tbaa !1527
  %atom = getelementptr inbounds %struct._xmlAutomata, ptr %52, i32 0, i32 7, !dbg !12139
  %53 = load ptr, ptr %atom, align 8, !dbg !12139, !tbaa !10568
  %54 = load ptr, ptr %ctxt.addr, align 8, !dbg !12140, !tbaa !1527
  %neg = getelementptr inbounds %struct._xmlAutomata, ptr %54, i32 0, i32 3, !dbg !12141
  %55 = load i32, ptr %neg, align 4, !dbg !12141, !tbaa !4264
  %56 = load i32, ptr %start, align 4, !dbg !12142, !tbaa !1767
  %57 = load i32, ptr %end, align 4, !dbg !12143, !tbaa !1767
  call void @xmlRegAtomAddRange(ptr noundef %51, ptr noundef %53, i32 noundef %55, i32 noundef 2, i32 noundef %56, i32 noundef %57, ptr noundef null), !dbg !12144
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12145

if.end66:                                         ; preds = %lor.lhs.false59
  %58 = load ptr, ptr %ctxt.addr, align 8, !dbg !12146, !tbaa !1527
  %cur67 = getelementptr inbounds %struct._xmlAutomata, ptr %58, i32 0, i32 1, !dbg !12146
  %59 = load ptr, ptr %cur67, align 8, !dbg !12146, !tbaa !4182
  %incdec.ptr68 = getelementptr inbounds i8, ptr %59, i32 1, !dbg !12146
  store ptr %incdec.ptr68, ptr %cur67, align 8, !dbg !12146, !tbaa !4182
  %60 = load ptr, ptr %ctxt.addr, align 8, !dbg !12147, !tbaa !1527
  %cur69 = getelementptr inbounds %struct._xmlAutomata, ptr %60, i32 0, i32 1, !dbg !12147
  %61 = load ptr, ptr %cur69, align 8, !dbg !12147, !tbaa !4182
  %62 = load i8, ptr %61, align 1, !dbg !12147, !tbaa !2932
  %conv70 = zext i8 %62 to i32, !dbg !12147
  store i32 %conv70, ptr %cur, align 4, !dbg !12148, !tbaa !1767
  %63 = load i32, ptr %cur, align 4, !dbg !12149, !tbaa !1767
  %cmp71 = icmp eq i32 %63, 92, !dbg !12151
  br i1 %cmp71, label %if.then73, label %if.else85, !dbg !12152

if.then73:                                        ; preds = %if.end66
  %64 = load ptr, ptr %ctxt.addr, align 8, !dbg !12153, !tbaa !1527
  %cur74 = getelementptr inbounds %struct._xmlAutomata, ptr %64, i32 0, i32 1, !dbg !12153
  %65 = load ptr, ptr %cur74, align 8, !dbg !12153, !tbaa !4182
  %incdec.ptr75 = getelementptr inbounds i8, ptr %65, i32 1, !dbg !12153
  store ptr %incdec.ptr75, ptr %cur74, align 8, !dbg !12153, !tbaa !4182
  %66 = load ptr, ptr %ctxt.addr, align 8, !dbg !12155, !tbaa !1527
  %cur76 = getelementptr inbounds %struct._xmlAutomata, ptr %66, i32 0, i32 1, !dbg !12155
  %67 = load ptr, ptr %cur76, align 8, !dbg !12155, !tbaa !4182
  %68 = load i8, ptr %67, align 1, !dbg !12155, !tbaa !2932
  %conv77 = zext i8 %68 to i32, !dbg !12155
  store i32 %conv77, ptr %cur, align 4, !dbg !12156, !tbaa !1767
  %69 = load i32, ptr %cur, align 4, !dbg !12157, !tbaa !1767
  switch i32 %69, label %sw.default82 [
    i32 110, label %sw.bb78
    i32 114, label %sw.bb79
    i32 116, label %sw.bb80
    i32 92, label %sw.bb81
    i32 124, label %sw.bb81
    i32 46, label %sw.bb81
    i32 45, label %sw.bb81
    i32 94, label %sw.bb81
    i32 63, label %sw.bb81
    i32 42, label %sw.bb81
    i32 43, label %sw.bb81
    i32 123, label %sw.bb81
    i32 125, label %sw.bb81
    i32 40, label %sw.bb81
    i32 41, label %sw.bb81
    i32 91, label %sw.bb81
    i32 93, label %sw.bb81
  ], !dbg !12158

sw.bb78:                                          ; preds = %if.then73
  store i32 10, ptr %end, align 4, !dbg !12159, !tbaa !1767
  br label %sw.epilog84, !dbg !12161

sw.bb79:                                          ; preds = %if.then73
  store i32 13, ptr %end, align 4, !dbg !12162, !tbaa !1767
  br label %sw.epilog84, !dbg !12163

sw.bb80:                                          ; preds = %if.then73
  store i32 9, ptr %end, align 4, !dbg !12164, !tbaa !1767
  br label %sw.epilog84, !dbg !12165

sw.bb81:                                          ; preds = %if.then73, %if.then73, %if.then73, %if.then73, %if.then73, %if.then73, %if.then73, %if.then73, %if.then73, %if.then73, %if.then73, %if.then73, %if.then73, %if.then73
  %70 = load i32, ptr %cur, align 4, !dbg !12166, !tbaa !1767
  store i32 %70, ptr %end, align 4, !dbg !12167, !tbaa !1767
  br label %sw.epilog84, !dbg !12168

sw.default82:                                     ; preds = %if.then73
  %71 = load ptr, ptr %ctxt.addr, align 8, !dbg !12169, !tbaa !1527
  %error83 = getelementptr inbounds %struct._xmlAutomata, ptr %71, i32 0, i32 2, !dbg !12169
  store i32 1450, ptr %error83, align 8, !dbg !12169, !tbaa !1729
  %72 = load ptr, ptr %ctxt.addr, align 8, !dbg !12169, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %72, ptr noundef @.str.110), !dbg !12169
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12170

sw.epilog84:                                      ; preds = %sw.bb81, %sw.bb80, %sw.bb79, %sw.bb78
  store i32 1, ptr %len, align 4, !dbg !12171, !tbaa !1767
  br label %if.end100, !dbg !12172

if.else85:                                        ; preds = %if.end66
  %73 = load i32, ptr %cur, align 4, !dbg !12173, !tbaa !1767
  %cmp86 = icmp ne i32 %73, 0, !dbg !12175
  br i1 %cmp86, label %land.lhs.true88, label %if.else97, !dbg !12176

land.lhs.true88:                                  ; preds = %if.else85
  %74 = load i32, ptr %cur, align 4, !dbg !12177, !tbaa !1767
  %cmp89 = icmp ne i32 %74, 91, !dbg !12178
  br i1 %cmp89, label %land.lhs.true91, label %if.else97, !dbg !12179

land.lhs.true91:                                  ; preds = %land.lhs.true88
  %75 = load i32, ptr %cur, align 4, !dbg !12180, !tbaa !1767
  %cmp92 = icmp ne i32 %75, 93, !dbg !12181
  br i1 %cmp92, label %if.then94, label %if.else97, !dbg !12182

if.then94:                                        ; preds = %land.lhs.true91
  %76 = load ptr, ptr %ctxt.addr, align 8, !dbg !12183, !tbaa !1527
  %cur95 = getelementptr inbounds %struct._xmlAutomata, ptr %76, i32 0, i32 1, !dbg !12183
  %77 = load ptr, ptr %cur95, align 8, !dbg !12183, !tbaa !4182
  %call96 = call i32 @xmlStringCurrentChar(ptr noundef null, ptr noundef %77, ptr noundef %len), !dbg !12183
  store i32 %call96, ptr %end, align 4, !dbg !12185, !tbaa !1767
  br label %if.end99, !dbg !12186

if.else97:                                        ; preds = %land.lhs.true91, %land.lhs.true88, %if.else85
  %78 = load ptr, ptr %ctxt.addr, align 8, !dbg !12187, !tbaa !1527
  %error98 = getelementptr inbounds %struct._xmlAutomata, ptr %78, i32 0, i32 2, !dbg !12187
  store i32 1450, ptr %error98, align 8, !dbg !12187, !tbaa !1729
  %79 = load ptr, ptr %ctxt.addr, align 8, !dbg !12187, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %79, ptr noundef @.str.112), !dbg !12187
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12189

if.end99:                                         ; preds = %if.then94
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %sw.epilog84
  %80 = load i32, ptr %end, align 4, !dbg !12190, !tbaa !1767
  %81 = load i32, ptr %start, align 4, !dbg !12192, !tbaa !1767
  %cmp101 = icmp slt i32 %80, %81, !dbg !12193
  br i1 %cmp101, label %if.then103, label %if.else105, !dbg !12194

if.then103:                                       ; preds = %if.end100
  %82 = load ptr, ptr %ctxt.addr, align 8, !dbg !12195, !tbaa !1527
  %error104 = getelementptr inbounds %struct._xmlAutomata, ptr %82, i32 0, i32 2, !dbg !12195
  store i32 1450, ptr %error104, align 8, !dbg !12195, !tbaa !1729
  %83 = load ptr, ptr %ctxt.addr, align 8, !dbg !12195, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %83, ptr noundef @.str.113), !dbg !12195
  br label %if.end111, !dbg !12197

if.else105:                                       ; preds = %if.end100
  %84 = load i32, ptr %len, align 4, !dbg !12198, !tbaa !1767
  %85 = load ptr, ptr %ctxt.addr, align 8, !dbg !12198, !tbaa !1527
  %cur106 = getelementptr inbounds %struct._xmlAutomata, ptr %85, i32 0, i32 1, !dbg !12198
  %86 = load ptr, ptr %cur106, align 8, !dbg !12198, !tbaa !4182
  %idx.ext107 = sext i32 %84 to i64, !dbg !12198
  %add.ptr108 = getelementptr inbounds i8, ptr %86, i64 %idx.ext107, !dbg !12198
  store ptr %add.ptr108, ptr %cur106, align 8, !dbg !12198, !tbaa !4182
  %87 = load ptr, ptr %ctxt.addr, align 8, !dbg !12200, !tbaa !1527
  %88 = load ptr, ptr %ctxt.addr, align 8, !dbg !12201, !tbaa !1527
  %atom109 = getelementptr inbounds %struct._xmlAutomata, ptr %88, i32 0, i32 7, !dbg !12202
  %89 = load ptr, ptr %atom109, align 8, !dbg !12202, !tbaa !10568
  %90 = load ptr, ptr %ctxt.addr, align 8, !dbg !12203, !tbaa !1527
  %neg110 = getelementptr inbounds %struct._xmlAutomata, ptr %90, i32 0, i32 3, !dbg !12204
  %91 = load i32, ptr %neg110, align 4, !dbg !12204, !tbaa !4264
  %92 = load i32, ptr %start, align 4, !dbg !12205, !tbaa !1767
  %93 = load i32, ptr %end, align 4, !dbg !12206, !tbaa !1767
  call void @xmlRegAtomAddRange(ptr noundef %87, ptr noundef %89, i32 noundef %91, i32 noundef 2, i32 noundef %92, i32 noundef %93, ptr noundef null), !dbg !12207
  br label %if.end111

if.end111:                                        ; preds = %if.else105, %if.then103
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12208

cleanup:                                          ; preds = %if.end111, %if.else97, %sw.default82, %if.then65, %if.then44, %if.else21, %sw.default, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %end) #8, !dbg !12209
  call void @llvm.lifetime.end.p0(i64 4, ptr %start) #8, !dbg !12209
  call void @llvm.lifetime.end.p0(i64 4, ptr %len) #8, !dbg !12209
  call void @llvm.lifetime.end.p0(i64 4, ptr %cur) #8, !dbg !12209
  ret void, !dbg !12209
}

; Function Attrs: nounwind uwtable
define internal void @xmlRegAtomAddRange(ptr noundef %ctxt, ptr noundef %atom, i32 noundef %neg, i32 noundef %type, i32 noundef %start, i32 noundef %end, ptr noundef %blockName) #0 !dbg !12210 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %atom.addr = alloca ptr, align 8
  %neg.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %blockName.addr = alloca ptr, align 8
  %range = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !12214, metadata !DIExpression()), !dbg !12226
  store ptr %atom, ptr %atom.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom.addr, metadata !12215, metadata !DIExpression()), !dbg !12227
  store i32 %neg, ptr %neg.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %neg.addr, metadata !12216, metadata !DIExpression()), !dbg !12228
  store i32 %type, ptr %type.addr, align 4, !tbaa !2932
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !12217, metadata !DIExpression()), !dbg !12229
  store i32 %start, ptr %start.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %start.addr, metadata !12218, metadata !DIExpression()), !dbg !12230
  store i32 %end, ptr %end.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %end.addr, metadata !12219, metadata !DIExpression()), !dbg !12231
  store ptr %blockName, ptr %blockName.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %blockName.addr, metadata !12220, metadata !DIExpression()), !dbg !12232
  call void @llvm.lifetime.start.p0(i64 8, ptr %range) #8, !dbg !12233
  tail call void @llvm.dbg.declare(metadata ptr %range, metadata !12221, metadata !DIExpression()), !dbg !12234
  %0 = load ptr, ptr %atom.addr, align 8, !dbg !12235, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !12237
  br i1 %cmp, label %if.then, label %if.end, !dbg !12238

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !12239, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 2, !dbg !12239
  store i32 1450, ptr %error, align 8, !dbg !12239, !tbaa !1729
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !12239, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %2, ptr noundef @.str.114), !dbg !12239
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup43, !dbg !12241

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %atom.addr, align 8, !dbg !12242, !tbaa !1527
  %type1 = getelementptr inbounds %struct._xmlRegAtom, ptr %3, i32 0, i32 1, !dbg !12244
  %4 = load i32, ptr %type1, align 4, !dbg !12244, !tbaa !3988
  %cmp2 = icmp ne i32 %4, 3, !dbg !12245
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !12246

if.then3:                                         ; preds = %if.end
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !12247, !tbaa !1527
  %error4 = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 2, !dbg !12247
  store i32 1450, ptr %error4, align 8, !dbg !12247, !tbaa !1729
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !12247, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %6, ptr noundef @.str.115), !dbg !12247
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup43, !dbg !12249

if.end5:                                          ; preds = %if.end
  %7 = load ptr, ptr %atom.addr, align 8, !dbg !12250, !tbaa !1527
  %maxRanges = getelementptr inbounds %struct._xmlRegAtom, ptr %7, i32 0, i32 12, !dbg !12251
  %8 = load i32, ptr %maxRanges, align 8, !dbg !12251, !tbaa !12252
  %cmp6 = icmp eq i32 %8, 0, !dbg !12253
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !12254

if.then7:                                         ; preds = %if.end5
  %9 = load ptr, ptr %atom.addr, align 8, !dbg !12255, !tbaa !1527
  %maxRanges8 = getelementptr inbounds %struct._xmlRegAtom, ptr %9, i32 0, i32 12, !dbg !12257
  store i32 4, ptr %maxRanges8, align 8, !dbg !12258, !tbaa !12252
  %10 = load ptr, ptr @xmlMalloc, align 8, !dbg !12259, !tbaa !1527
  %11 = load ptr, ptr %atom.addr, align 8, !dbg !12260, !tbaa !1527
  %maxRanges9 = getelementptr inbounds %struct._xmlRegAtom, ptr %11, i32 0, i32 12, !dbg !12261
  %12 = load i32, ptr %maxRanges9, align 8, !dbg !12261, !tbaa !12252
  %conv = sext i32 %12 to i64, !dbg !12260
  %mul = mul i64 %conv, 8, !dbg !12262
  %call = call ptr %10(i64 noundef %mul), !dbg !12259
  %13 = load ptr, ptr %atom.addr, align 8, !dbg !12263, !tbaa !1527
  %ranges = getelementptr inbounds %struct._xmlRegAtom, ptr %13, i32 0, i32 14, !dbg !12264
  store ptr %call, ptr %ranges, align 8, !dbg !12265, !tbaa !4047
  %14 = load ptr, ptr %atom.addr, align 8, !dbg !12266, !tbaa !1527
  %ranges10 = getelementptr inbounds %struct._xmlRegAtom, ptr %14, i32 0, i32 14, !dbg !12268
  %15 = load ptr, ptr %ranges10, align 8, !dbg !12268, !tbaa !4047
  %cmp11 = icmp eq ptr %15, null, !dbg !12269
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !12270

if.then13:                                        ; preds = %if.then7
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !12271, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %16, ptr noundef @.str.116), !dbg !12273
  %17 = load ptr, ptr %atom.addr, align 8, !dbg !12274, !tbaa !1527
  %maxRanges14 = getelementptr inbounds %struct._xmlRegAtom, ptr %17, i32 0, i32 12, !dbg !12275
  store i32 0, ptr %maxRanges14, align 8, !dbg !12276, !tbaa !12252
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup43, !dbg !12277

if.end15:                                         ; preds = %if.then7
  br label %if.end34, !dbg !12278

if.else:                                          ; preds = %if.end5
  %18 = load ptr, ptr %atom.addr, align 8, !dbg !12279, !tbaa !1527
  %nbRanges = getelementptr inbounds %struct._xmlRegAtom, ptr %18, i32 0, i32 13, !dbg !12280
  %19 = load i32, ptr %nbRanges, align 4, !dbg !12280, !tbaa !4033
  %20 = load ptr, ptr %atom.addr, align 8, !dbg !12281, !tbaa !1527
  %maxRanges16 = getelementptr inbounds %struct._xmlRegAtom, ptr %20, i32 0, i32 12, !dbg !12282
  %21 = load i32, ptr %maxRanges16, align 8, !dbg !12282, !tbaa !12252
  %cmp17 = icmp sge i32 %19, %21, !dbg !12283
  br i1 %cmp17, label %if.then19, label %if.end33, !dbg !12284

if.then19:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !12285
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !12222, metadata !DIExpression()), !dbg !12286
  %22 = load ptr, ptr %atom.addr, align 8, !dbg !12287, !tbaa !1527
  %maxRanges20 = getelementptr inbounds %struct._xmlRegAtom, ptr %22, i32 0, i32 12, !dbg !12288
  %23 = load i32, ptr %maxRanges20, align 8, !dbg !12289, !tbaa !12252
  %mul21 = mul nsw i32 %23, 2, !dbg !12289
  store i32 %mul21, ptr %maxRanges20, align 8, !dbg !12289, !tbaa !12252
  %24 = load ptr, ptr @xmlRealloc, align 8, !dbg !12290, !tbaa !1527
  %25 = load ptr, ptr %atom.addr, align 8, !dbg !12291, !tbaa !1527
  %ranges22 = getelementptr inbounds %struct._xmlRegAtom, ptr %25, i32 0, i32 14, !dbg !12292
  %26 = load ptr, ptr %ranges22, align 8, !dbg !12292, !tbaa !4047
  %27 = load ptr, ptr %atom.addr, align 8, !dbg !12293, !tbaa !1527
  %maxRanges23 = getelementptr inbounds %struct._xmlRegAtom, ptr %27, i32 0, i32 12, !dbg !12294
  %28 = load i32, ptr %maxRanges23, align 8, !dbg !12294, !tbaa !12252
  %conv24 = sext i32 %28 to i64, !dbg !12293
  %mul25 = mul i64 %conv24, 8, !dbg !12295
  %call26 = call ptr %24(ptr noundef %26, i64 noundef %mul25), !dbg !12290
  store ptr %call26, ptr %tmp, align 8, !dbg !12296, !tbaa !1527
  %29 = load ptr, ptr %tmp, align 8, !dbg !12297, !tbaa !1527
  %cmp27 = icmp eq ptr %29, null, !dbg !12299
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !12300

if.then29:                                        ; preds = %if.then19
  %30 = load ptr, ptr %ctxt.addr, align 8, !dbg !12301, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %30, ptr noundef @.str.116), !dbg !12303
  %31 = load ptr, ptr %atom.addr, align 8, !dbg !12304, !tbaa !1527
  %maxRanges30 = getelementptr inbounds %struct._xmlRegAtom, ptr %31, i32 0, i32 12, !dbg !12305
  %32 = load i32, ptr %maxRanges30, align 8, !dbg !12306, !tbaa !12252
  %div = sdiv i32 %32, 2, !dbg !12306
  store i32 %div, ptr %maxRanges30, align 8, !dbg !12306, !tbaa !12252
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12307

if.end31:                                         ; preds = %if.then19
  %33 = load ptr, ptr %tmp, align 8, !dbg !12308, !tbaa !1527
  %34 = load ptr, ptr %atom.addr, align 8, !dbg !12309, !tbaa !1527
  %ranges32 = getelementptr inbounds %struct._xmlRegAtom, ptr %34, i32 0, i32 14, !dbg !12310
  store ptr %33, ptr %ranges32, align 8, !dbg !12311, !tbaa !4047
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12312
  br label %cleanup, !dbg !12312

cleanup:                                          ; preds = %if.end31, %if.then29
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !12312
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup43 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end33, !dbg !12313

if.end33:                                         ; preds = %cleanup.cont, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end15
  %35 = load ptr, ptr %ctxt.addr, align 8, !dbg !12314, !tbaa !1527
  %36 = load i32, ptr %neg.addr, align 4, !dbg !12315, !tbaa !1767
  %37 = load i32, ptr %type.addr, align 4, !dbg !12316, !tbaa !2932
  %38 = load i32, ptr %start.addr, align 4, !dbg !12317, !tbaa !1767
  %39 = load i32, ptr %end.addr, align 4, !dbg !12318, !tbaa !1767
  %call35 = call ptr @xmlRegNewRange(ptr noundef %35, i32 noundef %36, i32 noundef %37, i32 noundef %38, i32 noundef %39), !dbg !12319
  store ptr %call35, ptr %range, align 8, !dbg !12320, !tbaa !1527
  %40 = load ptr, ptr %range, align 8, !dbg !12321, !tbaa !1527
  %cmp36 = icmp eq ptr %40, null, !dbg !12323
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !12324

if.then38:                                        ; preds = %if.end34
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup43, !dbg !12325

if.end39:                                         ; preds = %if.end34
  %41 = load ptr, ptr %blockName.addr, align 8, !dbg !12326, !tbaa !1527
  %42 = load ptr, ptr %range, align 8, !dbg !12327, !tbaa !1527
  %blockName40 = getelementptr inbounds %struct._xmlRegRange, ptr %42, i32 0, i32 4, !dbg !12328
  store ptr %41, ptr %blockName40, align 8, !dbg !12329, !tbaa !12330
  %43 = load ptr, ptr %range, align 8, !dbg !12331, !tbaa !1527
  %44 = load ptr, ptr %atom.addr, align 8, !dbg !12332, !tbaa !1527
  %ranges41 = getelementptr inbounds %struct._xmlRegAtom, ptr %44, i32 0, i32 14, !dbg !12333
  %45 = load ptr, ptr %ranges41, align 8, !dbg !12333, !tbaa !4047
  %46 = load ptr, ptr %atom.addr, align 8, !dbg !12334, !tbaa !1527
  %nbRanges42 = getelementptr inbounds %struct._xmlRegAtom, ptr %46, i32 0, i32 13, !dbg !12335
  %47 = load i32, ptr %nbRanges42, align 4, !dbg !12336, !tbaa !4033
  %inc = add nsw i32 %47, 1, !dbg !12336
  store i32 %inc, ptr %nbRanges42, align 4, !dbg !12336, !tbaa !4033
  %idxprom = sext i32 %47 to i64, !dbg !12332
  %arrayidx = getelementptr inbounds ptr, ptr %45, i64 %idxprom, !dbg !12332
  store ptr %43, ptr %arrayidx, align 8, !dbg !12337, !tbaa !1527
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12338
  br label %cleanup43, !dbg !12338

cleanup43:                                        ; preds = %if.end39, %if.then38, %cleanup, %if.then13, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %range) #8, !dbg !12338
  %cleanup.dest44 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest44, label %unreachable [
    i32 0, label %cleanup.cont45
    i32 1, label %cleanup.cont45
  ]

cleanup.cont45:                                   ; preds = %cleanup43, %cleanup43
  ret void, !dbg !12338

unreachable:                                      ; preds = %cleanup43
  unreachable
}

; Function Attrs: nounwind uwtable
define internal ptr @xmlRegNewRange(ptr noundef %ctxt, i32 noundef %neg, i32 noundef %type, i32 noundef %start, i32 noundef %end) #0 !dbg !12339 {
entry:
  %retval = alloca ptr, align 8
  %ctxt.addr = alloca ptr, align 8
  %neg.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !12343, metadata !DIExpression()), !dbg !12349
  store i32 %neg, ptr %neg.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %neg.addr, metadata !12344, metadata !DIExpression()), !dbg !12350
  store i32 %type, ptr %type.addr, align 4, !tbaa !2932
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !12345, metadata !DIExpression()), !dbg !12351
  store i32 %start, ptr %start.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %start.addr, metadata !12346, metadata !DIExpression()), !dbg !12352
  store i32 %end, ptr %end.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %end.addr, metadata !12347, metadata !DIExpression()), !dbg !12353
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #8, !dbg !12354
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !12348, metadata !DIExpression()), !dbg !12355
  %0 = load ptr, ptr @xmlMalloc, align 8, !dbg !12356, !tbaa !1527
  %call = call ptr %0(i64 noundef 24), !dbg !12356
  store ptr %call, ptr %ret, align 8, !dbg !12357, !tbaa !1527
  %1 = load ptr, ptr %ret, align 8, !dbg !12358, !tbaa !1527
  %cmp = icmp eq ptr %1, null, !dbg !12360
  br i1 %cmp, label %if.then, label %if.end, !dbg !12361

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !12362, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %2, ptr noundef @.str.117), !dbg !12364
  store ptr null, ptr %retval, align 8, !dbg !12365
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12365

if.end:                                           ; preds = %entry
  %3 = load i32, ptr %neg.addr, align 4, !dbg !12366, !tbaa !1767
  %4 = load ptr, ptr %ret, align 8, !dbg !12367, !tbaa !1527
  %neg1 = getelementptr inbounds %struct._xmlRegRange, ptr %4, i32 0, i32 0, !dbg !12368
  store i32 %3, ptr %neg1, align 8, !dbg !12369, !tbaa !10401
  %5 = load i32, ptr %type.addr, align 4, !dbg !12370, !tbaa !2932
  %6 = load ptr, ptr %ret, align 8, !dbg !12371, !tbaa !1527
  %type2 = getelementptr inbounds %struct._xmlRegRange, ptr %6, i32 0, i32 1, !dbg !12372
  store i32 %5, ptr %type2, align 4, !dbg !12373, !tbaa !10409
  %7 = load i32, ptr %start.addr, align 4, !dbg !12374, !tbaa !1767
  %8 = load ptr, ptr %ret, align 8, !dbg !12375, !tbaa !1527
  %start3 = getelementptr inbounds %struct._xmlRegRange, ptr %8, i32 0, i32 2, !dbg !12376
  store i32 %7, ptr %start3, align 8, !dbg !12377, !tbaa !10414
  %9 = load i32, ptr %end.addr, align 4, !dbg !12378, !tbaa !1767
  %10 = load ptr, ptr %ret, align 8, !dbg !12379, !tbaa !1527
  %end4 = getelementptr inbounds %struct._xmlRegRange, ptr %10, i32 0, i32 3, !dbg !12380
  store i32 %9, ptr %end4, align 4, !dbg !12381, !tbaa !10417
  %11 = load ptr, ptr %ret, align 8, !dbg !12382, !tbaa !1527
  store ptr %11, ptr %retval, align 8, !dbg !12383
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12383

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #8, !dbg !12384
  %12 = load ptr, ptr %retval, align 8, !dbg !12384
  ret ptr %12, !dbg !12384
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAParseCharProp(ptr noundef %ctxt) #0 !dbg !12385 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %cur = alloca i32, align 4
  %type = alloca i32, align 4
  %blockName = alloca ptr, align 8
  %start = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !12387, metadata !DIExpression()), !dbg !12401
  call void @llvm.lifetime.start.p0(i64 4, ptr %cur) #8, !dbg !12402
  tail call void @llvm.dbg.declare(metadata ptr %cur, metadata !12388, metadata !DIExpression()), !dbg !12403
  call void @llvm.lifetime.start.p0(i64 4, ptr %type) #8, !dbg !12404
  tail call void @llvm.dbg.declare(metadata ptr %type, metadata !12389, metadata !DIExpression()), !dbg !12405
  store i32 0, ptr %type, align 4, !dbg !12405, !tbaa !2932
  call void @llvm.lifetime.start.p0(i64 8, ptr %blockName) #8, !dbg !12406
  tail call void @llvm.dbg.declare(metadata ptr %blockName, metadata !12390, metadata !DIExpression()), !dbg !12407
  store ptr null, ptr %blockName, align 8, !dbg !12407, !tbaa !1527
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !12408, !tbaa !1527
  %cur1 = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 1, !dbg !12408
  %1 = load ptr, ptr %cur1, align 8, !dbg !12408, !tbaa !4182
  %2 = load i8, ptr %1, align 1, !dbg !12408, !tbaa !2932
  %conv = zext i8 %2 to i32, !dbg !12408
  store i32 %conv, ptr %cur, align 4, !dbg !12409, !tbaa !1767
  %3 = load i32, ptr %cur, align 4, !dbg !12410, !tbaa !1767
  %cmp = icmp eq i32 %3, 76, !dbg !12411
  br i1 %cmp, label %if.then, label %if.else39, !dbg !12412

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !12413, !tbaa !1527
  %cur3 = getelementptr inbounds %struct._xmlAutomata, ptr %4, i32 0, i32 1, !dbg !12413
  %5 = load ptr, ptr %cur3, align 8, !dbg !12413, !tbaa !4182
  %incdec.ptr = getelementptr inbounds i8, ptr %5, i32 1, !dbg !12413
  store ptr %incdec.ptr, ptr %cur3, align 8, !dbg !12413, !tbaa !4182
  %6 = load ptr, ptr %ctxt.addr, align 8, !dbg !12415, !tbaa !1527
  %cur4 = getelementptr inbounds %struct._xmlAutomata, ptr %6, i32 0, i32 1, !dbg !12415
  %7 = load ptr, ptr %cur4, align 8, !dbg !12415, !tbaa !4182
  %8 = load i8, ptr %7, align 1, !dbg !12415, !tbaa !2932
  %conv5 = zext i8 %8 to i32, !dbg !12415
  store i32 %conv5, ptr %cur, align 4, !dbg !12416, !tbaa !1767
  %9 = load i32, ptr %cur, align 4, !dbg !12417, !tbaa !1767
  %cmp6 = icmp eq i32 %9, 117, !dbg !12419
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !12420

if.then8:                                         ; preds = %if.then
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !12421, !tbaa !1527
  %cur9 = getelementptr inbounds %struct._xmlAutomata, ptr %10, i32 0, i32 1, !dbg !12421
  %11 = load ptr, ptr %cur9, align 8, !dbg !12421, !tbaa !4182
  %incdec.ptr10 = getelementptr inbounds i8, ptr %11, i32 1, !dbg !12421
  store ptr %incdec.ptr10, ptr %cur9, align 8, !dbg !12421, !tbaa !4182
  store i32 101, ptr %type, align 4, !dbg !12423, !tbaa !2932
  br label %if.end38, !dbg !12424

if.else:                                          ; preds = %if.then
  %12 = load i32, ptr %cur, align 4, !dbg !12425, !tbaa !1767
  %cmp11 = icmp eq i32 %12, 108, !dbg !12427
  br i1 %cmp11, label %if.then13, label %if.else16, !dbg !12428

if.then13:                                        ; preds = %if.else
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !12429, !tbaa !1527
  %cur14 = getelementptr inbounds %struct._xmlAutomata, ptr %13, i32 0, i32 1, !dbg !12429
  %14 = load ptr, ptr %cur14, align 8, !dbg !12429, !tbaa !4182
  %incdec.ptr15 = getelementptr inbounds i8, ptr %14, i32 1, !dbg !12429
  store ptr %incdec.ptr15, ptr %cur14, align 8, !dbg !12429, !tbaa !4182
  store i32 102, ptr %type, align 4, !dbg !12431, !tbaa !2932
  br label %if.end37, !dbg !12432

if.else16:                                        ; preds = %if.else
  %15 = load i32, ptr %cur, align 4, !dbg !12433, !tbaa !1767
  %cmp17 = icmp eq i32 %15, 116, !dbg !12435
  br i1 %cmp17, label %if.then19, label %if.else22, !dbg !12436

if.then19:                                        ; preds = %if.else16
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !12437, !tbaa !1527
  %cur20 = getelementptr inbounds %struct._xmlAutomata, ptr %16, i32 0, i32 1, !dbg !12437
  %17 = load ptr, ptr %cur20, align 8, !dbg !12437, !tbaa !4182
  %incdec.ptr21 = getelementptr inbounds i8, ptr %17, i32 1, !dbg !12437
  store ptr %incdec.ptr21, ptr %cur20, align 8, !dbg !12437, !tbaa !4182
  store i32 103, ptr %type, align 4, !dbg !12439, !tbaa !2932
  br label %if.end36, !dbg !12440

if.else22:                                        ; preds = %if.else16
  %18 = load i32, ptr %cur, align 4, !dbg !12441, !tbaa !1767
  %cmp23 = icmp eq i32 %18, 109, !dbg !12443
  br i1 %cmp23, label %if.then25, label %if.else28, !dbg !12444

if.then25:                                        ; preds = %if.else22
  %19 = load ptr, ptr %ctxt.addr, align 8, !dbg !12445, !tbaa !1527
  %cur26 = getelementptr inbounds %struct._xmlAutomata, ptr %19, i32 0, i32 1, !dbg !12445
  %20 = load ptr, ptr %cur26, align 8, !dbg !12445, !tbaa !4182
  %incdec.ptr27 = getelementptr inbounds i8, ptr %20, i32 1, !dbg !12445
  store ptr %incdec.ptr27, ptr %cur26, align 8, !dbg !12445, !tbaa !4182
  store i32 104, ptr %type, align 4, !dbg !12447, !tbaa !2932
  br label %if.end35, !dbg !12448

if.else28:                                        ; preds = %if.else22
  %21 = load i32, ptr %cur, align 4, !dbg !12449, !tbaa !1767
  %cmp29 = icmp eq i32 %21, 111, !dbg !12451
  br i1 %cmp29, label %if.then31, label %if.else34, !dbg !12452

if.then31:                                        ; preds = %if.else28
  %22 = load ptr, ptr %ctxt.addr, align 8, !dbg !12453, !tbaa !1527
  %cur32 = getelementptr inbounds %struct._xmlAutomata, ptr %22, i32 0, i32 1, !dbg !12453
  %23 = load ptr, ptr %cur32, align 8, !dbg !12453, !tbaa !4182
  %incdec.ptr33 = getelementptr inbounds i8, ptr %23, i32 1, !dbg !12453
  store ptr %incdec.ptr33, ptr %cur32, align 8, !dbg !12453, !tbaa !4182
  store i32 105, ptr %type, align 4, !dbg !12455, !tbaa !2932
  br label %if.end, !dbg !12456

if.else34:                                        ; preds = %if.else28
  store i32 100, ptr %type, align 4, !dbg !12457, !tbaa !2932
  br label %if.end

if.end:                                           ; preds = %if.else34, %if.then31
  br label %if.end35

if.end35:                                         ; preds = %if.end, %if.then25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then19
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then13
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then8
  br label %if.end330, !dbg !12459

if.else39:                                        ; preds = %entry
  %24 = load i32, ptr %cur, align 4, !dbg !12460, !tbaa !1767
  %cmp40 = icmp eq i32 %24, 77, !dbg !12461
  br i1 %cmp40, label %if.then42, label %if.else68, !dbg !12462

if.then42:                                        ; preds = %if.else39
  %25 = load ptr, ptr %ctxt.addr, align 8, !dbg !12463, !tbaa !1527
  %cur43 = getelementptr inbounds %struct._xmlAutomata, ptr %25, i32 0, i32 1, !dbg !12463
  %26 = load ptr, ptr %cur43, align 8, !dbg !12463, !tbaa !4182
  %incdec.ptr44 = getelementptr inbounds i8, ptr %26, i32 1, !dbg !12463
  store ptr %incdec.ptr44, ptr %cur43, align 8, !dbg !12463, !tbaa !4182
  %27 = load ptr, ptr %ctxt.addr, align 8, !dbg !12465, !tbaa !1527
  %cur45 = getelementptr inbounds %struct._xmlAutomata, ptr %27, i32 0, i32 1, !dbg !12465
  %28 = load ptr, ptr %cur45, align 8, !dbg !12465, !tbaa !4182
  %29 = load i8, ptr %28, align 1, !dbg !12465, !tbaa !2932
  %conv46 = zext i8 %29 to i32, !dbg !12465
  store i32 %conv46, ptr %cur, align 4, !dbg !12466, !tbaa !1767
  %30 = load i32, ptr %cur, align 4, !dbg !12467, !tbaa !1767
  %cmp47 = icmp eq i32 %30, 110, !dbg !12469
  br i1 %cmp47, label %if.then49, label %if.else52, !dbg !12470

if.then49:                                        ; preds = %if.then42
  %31 = load ptr, ptr %ctxt.addr, align 8, !dbg !12471, !tbaa !1527
  %cur50 = getelementptr inbounds %struct._xmlAutomata, ptr %31, i32 0, i32 1, !dbg !12471
  %32 = load ptr, ptr %cur50, align 8, !dbg !12471, !tbaa !4182
  %incdec.ptr51 = getelementptr inbounds i8, ptr %32, i32 1, !dbg !12471
  store ptr %incdec.ptr51, ptr %cur50, align 8, !dbg !12471, !tbaa !4182
  store i32 107, ptr %type, align 4, !dbg !12473, !tbaa !2932
  br label %if.end67, !dbg !12474

if.else52:                                        ; preds = %if.then42
  %33 = load i32, ptr %cur, align 4, !dbg !12475, !tbaa !1767
  %cmp53 = icmp eq i32 %33, 99, !dbg !12477
  br i1 %cmp53, label %if.then55, label %if.else58, !dbg !12478

if.then55:                                        ; preds = %if.else52
  %34 = load ptr, ptr %ctxt.addr, align 8, !dbg !12479, !tbaa !1527
  %cur56 = getelementptr inbounds %struct._xmlAutomata, ptr %34, i32 0, i32 1, !dbg !12479
  %35 = load ptr, ptr %cur56, align 8, !dbg !12479, !tbaa !4182
  %incdec.ptr57 = getelementptr inbounds i8, ptr %35, i32 1, !dbg !12479
  store ptr %incdec.ptr57, ptr %cur56, align 8, !dbg !12479, !tbaa !4182
  store i32 108, ptr %type, align 4, !dbg !12481, !tbaa !2932
  br label %if.end66, !dbg !12482

if.else58:                                        ; preds = %if.else52
  %36 = load i32, ptr %cur, align 4, !dbg !12483, !tbaa !1767
  %cmp59 = icmp eq i32 %36, 101, !dbg !12485
  br i1 %cmp59, label %if.then61, label %if.else64, !dbg !12486

if.then61:                                        ; preds = %if.else58
  %37 = load ptr, ptr %ctxt.addr, align 8, !dbg !12487, !tbaa !1527
  %cur62 = getelementptr inbounds %struct._xmlAutomata, ptr %37, i32 0, i32 1, !dbg !12487
  %38 = load ptr, ptr %cur62, align 8, !dbg !12487, !tbaa !4182
  %incdec.ptr63 = getelementptr inbounds i8, ptr %38, i32 1, !dbg !12487
  store ptr %incdec.ptr63, ptr %cur62, align 8, !dbg !12487, !tbaa !4182
  store i32 109, ptr %type, align 4, !dbg !12489, !tbaa !2932
  br label %if.end65, !dbg !12490

if.else64:                                        ; preds = %if.else58
  store i32 106, ptr %type, align 4, !dbg !12491, !tbaa !2932
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.then61
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then55
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then49
  br label %if.end329, !dbg !12493

if.else68:                                        ; preds = %if.else39
  %39 = load i32, ptr %cur, align 4, !dbg !12494, !tbaa !1767
  %cmp69 = icmp eq i32 %39, 78, !dbg !12495
  br i1 %cmp69, label %if.then71, label %if.else97, !dbg !12496

if.then71:                                        ; preds = %if.else68
  %40 = load ptr, ptr %ctxt.addr, align 8, !dbg !12497, !tbaa !1527
  %cur72 = getelementptr inbounds %struct._xmlAutomata, ptr %40, i32 0, i32 1, !dbg !12497
  %41 = load ptr, ptr %cur72, align 8, !dbg !12497, !tbaa !4182
  %incdec.ptr73 = getelementptr inbounds i8, ptr %41, i32 1, !dbg !12497
  store ptr %incdec.ptr73, ptr %cur72, align 8, !dbg !12497, !tbaa !4182
  %42 = load ptr, ptr %ctxt.addr, align 8, !dbg !12499, !tbaa !1527
  %cur74 = getelementptr inbounds %struct._xmlAutomata, ptr %42, i32 0, i32 1, !dbg !12499
  %43 = load ptr, ptr %cur74, align 8, !dbg !12499, !tbaa !4182
  %44 = load i8, ptr %43, align 1, !dbg !12499, !tbaa !2932
  %conv75 = zext i8 %44 to i32, !dbg !12499
  store i32 %conv75, ptr %cur, align 4, !dbg !12500, !tbaa !1767
  %45 = load i32, ptr %cur, align 4, !dbg !12501, !tbaa !1767
  %cmp76 = icmp eq i32 %45, 100, !dbg !12503
  br i1 %cmp76, label %if.then78, label %if.else81, !dbg !12504

if.then78:                                        ; preds = %if.then71
  %46 = load ptr, ptr %ctxt.addr, align 8, !dbg !12505, !tbaa !1527
  %cur79 = getelementptr inbounds %struct._xmlAutomata, ptr %46, i32 0, i32 1, !dbg !12505
  %47 = load ptr, ptr %cur79, align 8, !dbg !12505, !tbaa !4182
  %incdec.ptr80 = getelementptr inbounds i8, ptr %47, i32 1, !dbg !12505
  store ptr %incdec.ptr80, ptr %cur79, align 8, !dbg !12505, !tbaa !4182
  store i32 111, ptr %type, align 4, !dbg !12507, !tbaa !2932
  br label %if.end96, !dbg !12508

if.else81:                                        ; preds = %if.then71
  %48 = load i32, ptr %cur, align 4, !dbg !12509, !tbaa !1767
  %cmp82 = icmp eq i32 %48, 108, !dbg !12511
  br i1 %cmp82, label %if.then84, label %if.else87, !dbg !12512

if.then84:                                        ; preds = %if.else81
  %49 = load ptr, ptr %ctxt.addr, align 8, !dbg !12513, !tbaa !1527
  %cur85 = getelementptr inbounds %struct._xmlAutomata, ptr %49, i32 0, i32 1, !dbg !12513
  %50 = load ptr, ptr %cur85, align 8, !dbg !12513, !tbaa !4182
  %incdec.ptr86 = getelementptr inbounds i8, ptr %50, i32 1, !dbg !12513
  store ptr %incdec.ptr86, ptr %cur85, align 8, !dbg !12513, !tbaa !4182
  store i32 112, ptr %type, align 4, !dbg !12515, !tbaa !2932
  br label %if.end95, !dbg !12516

if.else87:                                        ; preds = %if.else81
  %51 = load i32, ptr %cur, align 4, !dbg !12517, !tbaa !1767
  %cmp88 = icmp eq i32 %51, 111, !dbg !12519
  br i1 %cmp88, label %if.then90, label %if.else93, !dbg !12520

if.then90:                                        ; preds = %if.else87
  %52 = load ptr, ptr %ctxt.addr, align 8, !dbg !12521, !tbaa !1527
  %cur91 = getelementptr inbounds %struct._xmlAutomata, ptr %52, i32 0, i32 1, !dbg !12521
  %53 = load ptr, ptr %cur91, align 8, !dbg !12521, !tbaa !4182
  %incdec.ptr92 = getelementptr inbounds i8, ptr %53, i32 1, !dbg !12521
  store ptr %incdec.ptr92, ptr %cur91, align 8, !dbg !12521, !tbaa !4182
  store i32 113, ptr %type, align 4, !dbg !12523, !tbaa !2932
  br label %if.end94, !dbg !12524

if.else93:                                        ; preds = %if.else87
  store i32 110, ptr %type, align 4, !dbg !12525, !tbaa !2932
  br label %if.end94

if.end94:                                         ; preds = %if.else93, %if.then90
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then84
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then78
  br label %if.end328, !dbg !12527

if.else97:                                        ; preds = %if.else68
  %54 = load i32, ptr %cur, align 4, !dbg !12528, !tbaa !1767
  %cmp98 = icmp eq i32 %54, 80, !dbg !12529
  br i1 %cmp98, label %if.then100, label %if.else154, !dbg !12530

if.then100:                                       ; preds = %if.else97
  %55 = load ptr, ptr %ctxt.addr, align 8, !dbg !12531, !tbaa !1527
  %cur101 = getelementptr inbounds %struct._xmlAutomata, ptr %55, i32 0, i32 1, !dbg !12531
  %56 = load ptr, ptr %cur101, align 8, !dbg !12531, !tbaa !4182
  %incdec.ptr102 = getelementptr inbounds i8, ptr %56, i32 1, !dbg !12531
  store ptr %incdec.ptr102, ptr %cur101, align 8, !dbg !12531, !tbaa !4182
  %57 = load ptr, ptr %ctxt.addr, align 8, !dbg !12533, !tbaa !1527
  %cur103 = getelementptr inbounds %struct._xmlAutomata, ptr %57, i32 0, i32 1, !dbg !12533
  %58 = load ptr, ptr %cur103, align 8, !dbg !12533, !tbaa !4182
  %59 = load i8, ptr %58, align 1, !dbg !12533, !tbaa !2932
  %conv104 = zext i8 %59 to i32, !dbg !12533
  store i32 %conv104, ptr %cur, align 4, !dbg !12534, !tbaa !1767
  %60 = load i32, ptr %cur, align 4, !dbg !12535, !tbaa !1767
  %cmp105 = icmp eq i32 %60, 99, !dbg !12537
  br i1 %cmp105, label %if.then107, label %if.else110, !dbg !12538

if.then107:                                       ; preds = %if.then100
  %61 = load ptr, ptr %ctxt.addr, align 8, !dbg !12539, !tbaa !1527
  %cur108 = getelementptr inbounds %struct._xmlAutomata, ptr %61, i32 0, i32 1, !dbg !12539
  %62 = load ptr, ptr %cur108, align 8, !dbg !12539, !tbaa !4182
  %incdec.ptr109 = getelementptr inbounds i8, ptr %62, i32 1, !dbg !12539
  store ptr %incdec.ptr109, ptr %cur108, align 8, !dbg !12539, !tbaa !4182
  store i32 115, ptr %type, align 4, !dbg !12541, !tbaa !2932
  br label %if.end153, !dbg !12542

if.else110:                                       ; preds = %if.then100
  %63 = load i32, ptr %cur, align 4, !dbg !12543, !tbaa !1767
  %cmp111 = icmp eq i32 %63, 100, !dbg !12545
  br i1 %cmp111, label %if.then113, label %if.else116, !dbg !12546

if.then113:                                       ; preds = %if.else110
  %64 = load ptr, ptr %ctxt.addr, align 8, !dbg !12547, !tbaa !1527
  %cur114 = getelementptr inbounds %struct._xmlAutomata, ptr %64, i32 0, i32 1, !dbg !12547
  %65 = load ptr, ptr %cur114, align 8, !dbg !12547, !tbaa !4182
  %incdec.ptr115 = getelementptr inbounds i8, ptr %65, i32 1, !dbg !12547
  store ptr %incdec.ptr115, ptr %cur114, align 8, !dbg !12547, !tbaa !4182
  store i32 116, ptr %type, align 4, !dbg !12549, !tbaa !2932
  br label %if.end152, !dbg !12550

if.else116:                                       ; preds = %if.else110
  %66 = load i32, ptr %cur, align 4, !dbg !12551, !tbaa !1767
  %cmp117 = icmp eq i32 %66, 115, !dbg !12553
  br i1 %cmp117, label %if.then119, label %if.else122, !dbg !12554

if.then119:                                       ; preds = %if.else116
  %67 = load ptr, ptr %ctxt.addr, align 8, !dbg !12555, !tbaa !1527
  %cur120 = getelementptr inbounds %struct._xmlAutomata, ptr %67, i32 0, i32 1, !dbg !12555
  %68 = load ptr, ptr %cur120, align 8, !dbg !12555, !tbaa !4182
  %incdec.ptr121 = getelementptr inbounds i8, ptr %68, i32 1, !dbg !12555
  store ptr %incdec.ptr121, ptr %cur120, align 8, !dbg !12555, !tbaa !4182
  store i32 117, ptr %type, align 4, !dbg !12557, !tbaa !2932
  br label %if.end151, !dbg !12558

if.else122:                                       ; preds = %if.else116
  %69 = load i32, ptr %cur, align 4, !dbg !12559, !tbaa !1767
  %cmp123 = icmp eq i32 %69, 101, !dbg !12561
  br i1 %cmp123, label %if.then125, label %if.else128, !dbg !12562

if.then125:                                       ; preds = %if.else122
  %70 = load ptr, ptr %ctxt.addr, align 8, !dbg !12563, !tbaa !1527
  %cur126 = getelementptr inbounds %struct._xmlAutomata, ptr %70, i32 0, i32 1, !dbg !12563
  %71 = load ptr, ptr %cur126, align 8, !dbg !12563, !tbaa !4182
  %incdec.ptr127 = getelementptr inbounds i8, ptr %71, i32 1, !dbg !12563
  store ptr %incdec.ptr127, ptr %cur126, align 8, !dbg !12563, !tbaa !4182
  store i32 118, ptr %type, align 4, !dbg !12565, !tbaa !2932
  br label %if.end150, !dbg !12566

if.else128:                                       ; preds = %if.else122
  %72 = load i32, ptr %cur, align 4, !dbg !12567, !tbaa !1767
  %cmp129 = icmp eq i32 %72, 105, !dbg !12569
  br i1 %cmp129, label %if.then131, label %if.else134, !dbg !12570

if.then131:                                       ; preds = %if.else128
  %73 = load ptr, ptr %ctxt.addr, align 8, !dbg !12571, !tbaa !1527
  %cur132 = getelementptr inbounds %struct._xmlAutomata, ptr %73, i32 0, i32 1, !dbg !12571
  %74 = load ptr, ptr %cur132, align 8, !dbg !12571, !tbaa !4182
  %incdec.ptr133 = getelementptr inbounds i8, ptr %74, i32 1, !dbg !12571
  store ptr %incdec.ptr133, ptr %cur132, align 8, !dbg !12571, !tbaa !4182
  store i32 119, ptr %type, align 4, !dbg !12573, !tbaa !2932
  br label %if.end149, !dbg !12574

if.else134:                                       ; preds = %if.else128
  %75 = load i32, ptr %cur, align 4, !dbg !12575, !tbaa !1767
  %cmp135 = icmp eq i32 %75, 102, !dbg !12577
  br i1 %cmp135, label %if.then137, label %if.else140, !dbg !12578

if.then137:                                       ; preds = %if.else134
  %76 = load ptr, ptr %ctxt.addr, align 8, !dbg !12579, !tbaa !1527
  %cur138 = getelementptr inbounds %struct._xmlAutomata, ptr %76, i32 0, i32 1, !dbg !12579
  %77 = load ptr, ptr %cur138, align 8, !dbg !12579, !tbaa !4182
  %incdec.ptr139 = getelementptr inbounds i8, ptr %77, i32 1, !dbg !12579
  store ptr %incdec.ptr139, ptr %cur138, align 8, !dbg !12579, !tbaa !4182
  store i32 120, ptr %type, align 4, !dbg !12581, !tbaa !2932
  br label %if.end148, !dbg !12582

if.else140:                                       ; preds = %if.else134
  %78 = load i32, ptr %cur, align 4, !dbg !12583, !tbaa !1767
  %cmp141 = icmp eq i32 %78, 111, !dbg !12585
  br i1 %cmp141, label %if.then143, label %if.else146, !dbg !12586

if.then143:                                       ; preds = %if.else140
  %79 = load ptr, ptr %ctxt.addr, align 8, !dbg !12587, !tbaa !1527
  %cur144 = getelementptr inbounds %struct._xmlAutomata, ptr %79, i32 0, i32 1, !dbg !12587
  %80 = load ptr, ptr %cur144, align 8, !dbg !12587, !tbaa !4182
  %incdec.ptr145 = getelementptr inbounds i8, ptr %80, i32 1, !dbg !12587
  store ptr %incdec.ptr145, ptr %cur144, align 8, !dbg !12587, !tbaa !4182
  store i32 121, ptr %type, align 4, !dbg !12589, !tbaa !2932
  br label %if.end147, !dbg !12590

if.else146:                                       ; preds = %if.else140
  store i32 114, ptr %type, align 4, !dbg !12591, !tbaa !2932
  br label %if.end147

if.end147:                                        ; preds = %if.else146, %if.then143
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.then137
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.then131
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.then125
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then119
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then113
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then107
  br label %if.end327, !dbg !12593

if.else154:                                       ; preds = %if.else97
  %81 = load i32, ptr %cur, align 4, !dbg !12594, !tbaa !1767
  %cmp155 = icmp eq i32 %81, 90, !dbg !12595
  br i1 %cmp155, label %if.then157, label %if.else183, !dbg !12596

if.then157:                                       ; preds = %if.else154
  %82 = load ptr, ptr %ctxt.addr, align 8, !dbg !12597, !tbaa !1527
  %cur158 = getelementptr inbounds %struct._xmlAutomata, ptr %82, i32 0, i32 1, !dbg !12597
  %83 = load ptr, ptr %cur158, align 8, !dbg !12597, !tbaa !4182
  %incdec.ptr159 = getelementptr inbounds i8, ptr %83, i32 1, !dbg !12597
  store ptr %incdec.ptr159, ptr %cur158, align 8, !dbg !12597, !tbaa !4182
  %84 = load ptr, ptr %ctxt.addr, align 8, !dbg !12599, !tbaa !1527
  %cur160 = getelementptr inbounds %struct._xmlAutomata, ptr %84, i32 0, i32 1, !dbg !12599
  %85 = load ptr, ptr %cur160, align 8, !dbg !12599, !tbaa !4182
  %86 = load i8, ptr %85, align 1, !dbg !12599, !tbaa !2932
  %conv161 = zext i8 %86 to i32, !dbg !12599
  store i32 %conv161, ptr %cur, align 4, !dbg !12600, !tbaa !1767
  %87 = load i32, ptr %cur, align 4, !dbg !12601, !tbaa !1767
  %cmp162 = icmp eq i32 %87, 115, !dbg !12603
  br i1 %cmp162, label %if.then164, label %if.else167, !dbg !12604

if.then164:                                       ; preds = %if.then157
  %88 = load ptr, ptr %ctxt.addr, align 8, !dbg !12605, !tbaa !1527
  %cur165 = getelementptr inbounds %struct._xmlAutomata, ptr %88, i32 0, i32 1, !dbg !12605
  %89 = load ptr, ptr %cur165, align 8, !dbg !12605, !tbaa !4182
  %incdec.ptr166 = getelementptr inbounds i8, ptr %89, i32 1, !dbg !12605
  store ptr %incdec.ptr166, ptr %cur165, align 8, !dbg !12605, !tbaa !4182
  store i32 123, ptr %type, align 4, !dbg !12607, !tbaa !2932
  br label %if.end182, !dbg !12608

if.else167:                                       ; preds = %if.then157
  %90 = load i32, ptr %cur, align 4, !dbg !12609, !tbaa !1767
  %cmp168 = icmp eq i32 %90, 108, !dbg !12611
  br i1 %cmp168, label %if.then170, label %if.else173, !dbg !12612

if.then170:                                       ; preds = %if.else167
  %91 = load ptr, ptr %ctxt.addr, align 8, !dbg !12613, !tbaa !1527
  %cur171 = getelementptr inbounds %struct._xmlAutomata, ptr %91, i32 0, i32 1, !dbg !12613
  %92 = load ptr, ptr %cur171, align 8, !dbg !12613, !tbaa !4182
  %incdec.ptr172 = getelementptr inbounds i8, ptr %92, i32 1, !dbg !12613
  store ptr %incdec.ptr172, ptr %cur171, align 8, !dbg !12613, !tbaa !4182
  store i32 124, ptr %type, align 4, !dbg !12615, !tbaa !2932
  br label %if.end181, !dbg !12616

if.else173:                                       ; preds = %if.else167
  %93 = load i32, ptr %cur, align 4, !dbg !12617, !tbaa !1767
  %cmp174 = icmp eq i32 %93, 112, !dbg !12619
  br i1 %cmp174, label %if.then176, label %if.else179, !dbg !12620

if.then176:                                       ; preds = %if.else173
  %94 = load ptr, ptr %ctxt.addr, align 8, !dbg !12621, !tbaa !1527
  %cur177 = getelementptr inbounds %struct._xmlAutomata, ptr %94, i32 0, i32 1, !dbg !12621
  %95 = load ptr, ptr %cur177, align 8, !dbg !12621, !tbaa !4182
  %incdec.ptr178 = getelementptr inbounds i8, ptr %95, i32 1, !dbg !12621
  store ptr %incdec.ptr178, ptr %cur177, align 8, !dbg !12621, !tbaa !4182
  store i32 125, ptr %type, align 4, !dbg !12623, !tbaa !2932
  br label %if.end180, !dbg !12624

if.else179:                                       ; preds = %if.else173
  store i32 122, ptr %type, align 4, !dbg !12625, !tbaa !2932
  br label %if.end180

if.end180:                                        ; preds = %if.else179, %if.then176
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.then170
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.then164
  br label %if.end326, !dbg !12627

if.else183:                                       ; preds = %if.else154
  %96 = load i32, ptr %cur, align 4, !dbg !12628, !tbaa !1767
  %cmp184 = icmp eq i32 %96, 83, !dbg !12629
  br i1 %cmp184, label %if.then186, label %if.else219, !dbg !12630

if.then186:                                       ; preds = %if.else183
  %97 = load ptr, ptr %ctxt.addr, align 8, !dbg !12631, !tbaa !1527
  %cur187 = getelementptr inbounds %struct._xmlAutomata, ptr %97, i32 0, i32 1, !dbg !12631
  %98 = load ptr, ptr %cur187, align 8, !dbg !12631, !tbaa !4182
  %incdec.ptr188 = getelementptr inbounds i8, ptr %98, i32 1, !dbg !12631
  store ptr %incdec.ptr188, ptr %cur187, align 8, !dbg !12631, !tbaa !4182
  %99 = load ptr, ptr %ctxt.addr, align 8, !dbg !12633, !tbaa !1527
  %cur189 = getelementptr inbounds %struct._xmlAutomata, ptr %99, i32 0, i32 1, !dbg !12633
  %100 = load ptr, ptr %cur189, align 8, !dbg !12633, !tbaa !4182
  %101 = load i8, ptr %100, align 1, !dbg !12633, !tbaa !2932
  %conv190 = zext i8 %101 to i32, !dbg !12633
  store i32 %conv190, ptr %cur, align 4, !dbg !12634, !tbaa !1767
  %102 = load i32, ptr %cur, align 4, !dbg !12635, !tbaa !1767
  %cmp191 = icmp eq i32 %102, 109, !dbg !12637
  br i1 %cmp191, label %if.then193, label %if.else196, !dbg !12638

if.then193:                                       ; preds = %if.then186
  %103 = load ptr, ptr %ctxt.addr, align 8, !dbg !12639, !tbaa !1527
  %cur194 = getelementptr inbounds %struct._xmlAutomata, ptr %103, i32 0, i32 1, !dbg !12639
  %104 = load ptr, ptr %cur194, align 8, !dbg !12639, !tbaa !4182
  %incdec.ptr195 = getelementptr inbounds i8, ptr %104, i32 1, !dbg !12639
  store ptr %incdec.ptr195, ptr %cur194, align 8, !dbg !12639, !tbaa !4182
  store i32 127, ptr %type, align 4, !dbg !12641, !tbaa !2932
  br label %if.end218, !dbg !12642

if.else196:                                       ; preds = %if.then186
  %105 = load i32, ptr %cur, align 4, !dbg !12643, !tbaa !1767
  %cmp197 = icmp eq i32 %105, 99, !dbg !12645
  br i1 %cmp197, label %if.then199, label %if.else202, !dbg !12646

if.then199:                                       ; preds = %if.else196
  %106 = load ptr, ptr %ctxt.addr, align 8, !dbg !12647, !tbaa !1527
  %cur200 = getelementptr inbounds %struct._xmlAutomata, ptr %106, i32 0, i32 1, !dbg !12647
  %107 = load ptr, ptr %cur200, align 8, !dbg !12647, !tbaa !4182
  %incdec.ptr201 = getelementptr inbounds i8, ptr %107, i32 1, !dbg !12647
  store ptr %incdec.ptr201, ptr %cur200, align 8, !dbg !12647, !tbaa !4182
  store i32 128, ptr %type, align 4, !dbg !12649, !tbaa !2932
  br label %if.end217, !dbg !12650

if.else202:                                       ; preds = %if.else196
  %108 = load i32, ptr %cur, align 4, !dbg !12651, !tbaa !1767
  %cmp203 = icmp eq i32 %108, 107, !dbg !12653
  br i1 %cmp203, label %if.then205, label %if.else208, !dbg !12654

if.then205:                                       ; preds = %if.else202
  %109 = load ptr, ptr %ctxt.addr, align 8, !dbg !12655, !tbaa !1527
  %cur206 = getelementptr inbounds %struct._xmlAutomata, ptr %109, i32 0, i32 1, !dbg !12655
  %110 = load ptr, ptr %cur206, align 8, !dbg !12655, !tbaa !4182
  %incdec.ptr207 = getelementptr inbounds i8, ptr %110, i32 1, !dbg !12655
  store ptr %incdec.ptr207, ptr %cur206, align 8, !dbg !12655, !tbaa !4182
  store i32 129, ptr %type, align 4, !dbg !12657, !tbaa !2932
  br label %if.end216, !dbg !12658

if.else208:                                       ; preds = %if.else202
  %111 = load i32, ptr %cur, align 4, !dbg !12659, !tbaa !1767
  %cmp209 = icmp eq i32 %111, 111, !dbg !12661
  br i1 %cmp209, label %if.then211, label %if.else214, !dbg !12662

if.then211:                                       ; preds = %if.else208
  %112 = load ptr, ptr %ctxt.addr, align 8, !dbg !12663, !tbaa !1527
  %cur212 = getelementptr inbounds %struct._xmlAutomata, ptr %112, i32 0, i32 1, !dbg !12663
  %113 = load ptr, ptr %cur212, align 8, !dbg !12663, !tbaa !4182
  %incdec.ptr213 = getelementptr inbounds i8, ptr %113, i32 1, !dbg !12663
  store ptr %incdec.ptr213, ptr %cur212, align 8, !dbg !12663, !tbaa !4182
  store i32 130, ptr %type, align 4, !dbg !12665, !tbaa !2932
  br label %if.end215, !dbg !12666

if.else214:                                       ; preds = %if.else208
  store i32 126, ptr %type, align 4, !dbg !12667, !tbaa !2932
  br label %if.end215

if.end215:                                        ; preds = %if.else214, %if.then211
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %if.then205
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.then199
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.then193
  br label %if.end325, !dbg !12669

if.else219:                                       ; preds = %if.else183
  %114 = load i32, ptr %cur, align 4, !dbg !12670, !tbaa !1767
  %cmp220 = icmp eq i32 %114, 67, !dbg !12671
  br i1 %cmp220, label %if.then222, label %if.else255, !dbg !12672

if.then222:                                       ; preds = %if.else219
  %115 = load ptr, ptr %ctxt.addr, align 8, !dbg !12673, !tbaa !1527
  %cur223 = getelementptr inbounds %struct._xmlAutomata, ptr %115, i32 0, i32 1, !dbg !12673
  %116 = load ptr, ptr %cur223, align 8, !dbg !12673, !tbaa !4182
  %incdec.ptr224 = getelementptr inbounds i8, ptr %116, i32 1, !dbg !12673
  store ptr %incdec.ptr224, ptr %cur223, align 8, !dbg !12673, !tbaa !4182
  %117 = load ptr, ptr %ctxt.addr, align 8, !dbg !12675, !tbaa !1527
  %cur225 = getelementptr inbounds %struct._xmlAutomata, ptr %117, i32 0, i32 1, !dbg !12675
  %118 = load ptr, ptr %cur225, align 8, !dbg !12675, !tbaa !4182
  %119 = load i8, ptr %118, align 1, !dbg !12675, !tbaa !2932
  %conv226 = zext i8 %119 to i32, !dbg !12675
  store i32 %conv226, ptr %cur, align 4, !dbg !12676, !tbaa !1767
  %120 = load i32, ptr %cur, align 4, !dbg !12677, !tbaa !1767
  %cmp227 = icmp eq i32 %120, 99, !dbg !12679
  br i1 %cmp227, label %if.then229, label %if.else232, !dbg !12680

if.then229:                                       ; preds = %if.then222
  %121 = load ptr, ptr %ctxt.addr, align 8, !dbg !12681, !tbaa !1527
  %cur230 = getelementptr inbounds %struct._xmlAutomata, ptr %121, i32 0, i32 1, !dbg !12681
  %122 = load ptr, ptr %cur230, align 8, !dbg !12681, !tbaa !4182
  %incdec.ptr231 = getelementptr inbounds i8, ptr %122, i32 1, !dbg !12681
  store ptr %incdec.ptr231, ptr %cur230, align 8, !dbg !12681, !tbaa !4182
  store i32 132, ptr %type, align 4, !dbg !12683, !tbaa !2932
  br label %if.end254, !dbg !12684

if.else232:                                       ; preds = %if.then222
  %123 = load i32, ptr %cur, align 4, !dbg !12685, !tbaa !1767
  %cmp233 = icmp eq i32 %123, 102, !dbg !12687
  br i1 %cmp233, label %if.then235, label %if.else238, !dbg !12688

if.then235:                                       ; preds = %if.else232
  %124 = load ptr, ptr %ctxt.addr, align 8, !dbg !12689, !tbaa !1527
  %cur236 = getelementptr inbounds %struct._xmlAutomata, ptr %124, i32 0, i32 1, !dbg !12689
  %125 = load ptr, ptr %cur236, align 8, !dbg !12689, !tbaa !4182
  %incdec.ptr237 = getelementptr inbounds i8, ptr %125, i32 1, !dbg !12689
  store ptr %incdec.ptr237, ptr %cur236, align 8, !dbg !12689, !tbaa !4182
  store i32 133, ptr %type, align 4, !dbg !12691, !tbaa !2932
  br label %if.end253, !dbg !12692

if.else238:                                       ; preds = %if.else232
  %126 = load i32, ptr %cur, align 4, !dbg !12693, !tbaa !1767
  %cmp239 = icmp eq i32 %126, 111, !dbg !12695
  br i1 %cmp239, label %if.then241, label %if.else244, !dbg !12696

if.then241:                                       ; preds = %if.else238
  %127 = load ptr, ptr %ctxt.addr, align 8, !dbg !12697, !tbaa !1527
  %cur242 = getelementptr inbounds %struct._xmlAutomata, ptr %127, i32 0, i32 1, !dbg !12697
  %128 = load ptr, ptr %cur242, align 8, !dbg !12697, !tbaa !4182
  %incdec.ptr243 = getelementptr inbounds i8, ptr %128, i32 1, !dbg !12697
  store ptr %incdec.ptr243, ptr %cur242, align 8, !dbg !12697, !tbaa !4182
  store i32 134, ptr %type, align 4, !dbg !12699, !tbaa !2932
  br label %if.end252, !dbg !12700

if.else244:                                       ; preds = %if.else238
  %129 = load i32, ptr %cur, align 4, !dbg !12701, !tbaa !1767
  %cmp245 = icmp eq i32 %129, 110, !dbg !12703
  br i1 %cmp245, label %if.then247, label %if.else250, !dbg !12704

if.then247:                                       ; preds = %if.else244
  %130 = load ptr, ptr %ctxt.addr, align 8, !dbg !12705, !tbaa !1527
  %cur248 = getelementptr inbounds %struct._xmlAutomata, ptr %130, i32 0, i32 1, !dbg !12705
  %131 = load ptr, ptr %cur248, align 8, !dbg !12705, !tbaa !4182
  %incdec.ptr249 = getelementptr inbounds i8, ptr %131, i32 1, !dbg !12705
  store ptr %incdec.ptr249, ptr %cur248, align 8, !dbg !12705, !tbaa !4182
  store i32 135, ptr %type, align 4, !dbg !12707, !tbaa !2932
  br label %if.end251, !dbg !12708

if.else250:                                       ; preds = %if.else244
  store i32 131, ptr %type, align 4, !dbg !12709, !tbaa !2932
  br label %if.end251

if.end251:                                        ; preds = %if.else250, %if.then247
  br label %if.end252

if.end252:                                        ; preds = %if.end251, %if.then241
  br label %if.end253

if.end253:                                        ; preds = %if.end252, %if.then235
  br label %if.end254

if.end254:                                        ; preds = %if.end253, %if.then229
  br label %if.end324, !dbg !12711

if.else255:                                       ; preds = %if.else219
  %132 = load i32, ptr %cur, align 4, !dbg !12712, !tbaa !1767
  %cmp256 = icmp eq i32 %132, 73, !dbg !12713
  br i1 %cmp256, label %if.then258, label %if.else321, !dbg !12714

if.then258:                                       ; preds = %if.else255
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #8, !dbg !12715
  tail call void @llvm.dbg.declare(metadata ptr %start, metadata !12391, metadata !DIExpression()), !dbg !12716
  %133 = load ptr, ptr %ctxt.addr, align 8, !dbg !12717, !tbaa !1527
  %cur259 = getelementptr inbounds %struct._xmlAutomata, ptr %133, i32 0, i32 1, !dbg !12717
  %134 = load ptr, ptr %cur259, align 8, !dbg !12717, !tbaa !4182
  %incdec.ptr260 = getelementptr inbounds i8, ptr %134, i32 1, !dbg !12717
  store ptr %incdec.ptr260, ptr %cur259, align 8, !dbg !12717, !tbaa !4182
  %135 = load ptr, ptr %ctxt.addr, align 8, !dbg !12718, !tbaa !1527
  %cur261 = getelementptr inbounds %struct._xmlAutomata, ptr %135, i32 0, i32 1, !dbg !12718
  %136 = load ptr, ptr %cur261, align 8, !dbg !12718, !tbaa !4182
  %137 = load i8, ptr %136, align 1, !dbg !12718, !tbaa !2932
  %conv262 = zext i8 %137 to i32, !dbg !12718
  store i32 %conv262, ptr %cur, align 4, !dbg !12719, !tbaa !1767
  %138 = load i32, ptr %cur, align 4, !dbg !12720, !tbaa !1767
  %cmp263 = icmp ne i32 %138, 115, !dbg !12722
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !12723

if.then265:                                       ; preds = %if.then258
  %139 = load ptr, ptr %ctxt.addr, align 8, !dbg !12724, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %139, i32 0, i32 2, !dbg !12724
  store i32 1450, ptr %error, align 8, !dbg !12724, !tbaa !1729
  %140 = load ptr, ptr %ctxt.addr, align 8, !dbg !12724, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %140, ptr noundef @.str.122), !dbg !12724
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12726

if.end266:                                        ; preds = %if.then258
  %141 = load ptr, ptr %ctxt.addr, align 8, !dbg !12727, !tbaa !1527
  %cur267 = getelementptr inbounds %struct._xmlAutomata, ptr %141, i32 0, i32 1, !dbg !12727
  %142 = load ptr, ptr %cur267, align 8, !dbg !12727, !tbaa !4182
  %incdec.ptr268 = getelementptr inbounds i8, ptr %142, i32 1, !dbg !12727
  store ptr %incdec.ptr268, ptr %cur267, align 8, !dbg !12727, !tbaa !4182
  %143 = load ptr, ptr %ctxt.addr, align 8, !dbg !12728, !tbaa !1527
  %cur269 = getelementptr inbounds %struct._xmlAutomata, ptr %143, i32 0, i32 1, !dbg !12729
  %144 = load ptr, ptr %cur269, align 8, !dbg !12729, !tbaa !4182
  store ptr %144, ptr %start, align 8, !dbg !12730, !tbaa !1527
  %145 = load ptr, ptr %ctxt.addr, align 8, !dbg !12731, !tbaa !1527
  %cur270 = getelementptr inbounds %struct._xmlAutomata, ptr %145, i32 0, i32 1, !dbg !12731
  %146 = load ptr, ptr %cur270, align 8, !dbg !12731, !tbaa !4182
  %147 = load i8, ptr %146, align 1, !dbg !12731, !tbaa !2932
  %conv271 = zext i8 %147 to i32, !dbg !12731
  store i32 %conv271, ptr %cur, align 4, !dbg !12732, !tbaa !1767
  %148 = load i32, ptr %cur, align 4, !dbg !12733, !tbaa !1767
  %cmp272 = icmp sge i32 %148, 97, !dbg !12735
  br i1 %cmp272, label %land.lhs.true, label %lor.lhs.false, !dbg !12736

land.lhs.true:                                    ; preds = %if.end266
  %149 = load i32, ptr %cur, align 4, !dbg !12737, !tbaa !1767
  %cmp274 = icmp sle i32 %149, 122, !dbg !12738
  br i1 %cmp274, label %if.then290, label %lor.lhs.false, !dbg !12739

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end266
  %150 = load i32, ptr %cur, align 4, !dbg !12740, !tbaa !1767
  %cmp276 = icmp sge i32 %150, 65, !dbg !12741
  br i1 %cmp276, label %land.lhs.true278, label %lor.lhs.false281, !dbg !12742

land.lhs.true278:                                 ; preds = %lor.lhs.false
  %151 = load i32, ptr %cur, align 4, !dbg !12743, !tbaa !1767
  %cmp279 = icmp sle i32 %151, 90, !dbg !12744
  br i1 %cmp279, label %if.then290, label %lor.lhs.false281, !dbg !12745

lor.lhs.false281:                                 ; preds = %land.lhs.true278, %lor.lhs.false
  %152 = load i32, ptr %cur, align 4, !dbg !12746, !tbaa !1767
  %cmp282 = icmp sge i32 %152, 48, !dbg !12747
  br i1 %cmp282, label %land.lhs.true284, label %lor.lhs.false287, !dbg !12748

land.lhs.true284:                                 ; preds = %lor.lhs.false281
  %153 = load i32, ptr %cur, align 4, !dbg !12749, !tbaa !1767
  %cmp285 = icmp sle i32 %153, 57, !dbg !12750
  br i1 %cmp285, label %if.then290, label %lor.lhs.false287, !dbg !12751

lor.lhs.false287:                                 ; preds = %land.lhs.true284, %lor.lhs.false281
  %154 = load i32, ptr %cur, align 4, !dbg !12752, !tbaa !1767
  %cmp288 = icmp eq i32 %154, 45, !dbg !12753
  br i1 %cmp288, label %if.then290, label %if.end318, !dbg !12754

if.then290:                                       ; preds = %lor.lhs.false287, %land.lhs.true284, %land.lhs.true278, %land.lhs.true
  %155 = load ptr, ptr %ctxt.addr, align 8, !dbg !12755, !tbaa !1527
  %cur291 = getelementptr inbounds %struct._xmlAutomata, ptr %155, i32 0, i32 1, !dbg !12755
  %156 = load ptr, ptr %cur291, align 8, !dbg !12755, !tbaa !4182
  %incdec.ptr292 = getelementptr inbounds i8, ptr %156, i32 1, !dbg !12755
  store ptr %incdec.ptr292, ptr %cur291, align 8, !dbg !12755, !tbaa !4182
  %157 = load ptr, ptr %ctxt.addr, align 8, !dbg !12757, !tbaa !1527
  %cur293 = getelementptr inbounds %struct._xmlAutomata, ptr %157, i32 0, i32 1, !dbg !12757
  %158 = load ptr, ptr %cur293, align 8, !dbg !12757, !tbaa !4182
  %159 = load i8, ptr %158, align 1, !dbg !12757, !tbaa !2932
  %conv294 = zext i8 %159 to i32, !dbg !12757
  store i32 %conv294, ptr %cur, align 4, !dbg !12758, !tbaa !1767
  br label %while.cond, !dbg !12759

while.cond:                                       ; preds = %while.body, %if.then290
  %160 = load i32, ptr %cur, align 4, !dbg !12760, !tbaa !1767
  %cmp295 = icmp sge i32 %160, 97, !dbg !12761
  br i1 %cmp295, label %land.lhs.true297, label %lor.lhs.false300, !dbg !12762

land.lhs.true297:                                 ; preds = %while.cond
  %161 = load i32, ptr %cur, align 4, !dbg !12763, !tbaa !1767
  %cmp298 = icmp sle i32 %161, 122, !dbg !12764
  br i1 %cmp298, label %lor.end, label %lor.lhs.false300, !dbg !12765

lor.lhs.false300:                                 ; preds = %land.lhs.true297, %while.cond
  %162 = load i32, ptr %cur, align 4, !dbg !12766, !tbaa !1767
  %cmp301 = icmp sge i32 %162, 65, !dbg !12767
  br i1 %cmp301, label %land.lhs.true303, label %lor.lhs.false306, !dbg !12768

land.lhs.true303:                                 ; preds = %lor.lhs.false300
  %163 = load i32, ptr %cur, align 4, !dbg !12769, !tbaa !1767
  %cmp304 = icmp sle i32 %163, 90, !dbg !12770
  br i1 %cmp304, label %lor.end, label %lor.lhs.false306, !dbg !12771

lor.lhs.false306:                                 ; preds = %land.lhs.true303, %lor.lhs.false300
  %164 = load i32, ptr %cur, align 4, !dbg !12772, !tbaa !1767
  %cmp307 = icmp sge i32 %164, 48, !dbg !12773
  br i1 %cmp307, label %land.lhs.true309, label %lor.rhs, !dbg !12774

land.lhs.true309:                                 ; preds = %lor.lhs.false306
  %165 = load i32, ptr %cur, align 4, !dbg !12775, !tbaa !1767
  %cmp310 = icmp sle i32 %165, 57, !dbg !12776
  br i1 %cmp310, label %lor.end, label %lor.rhs, !dbg !12777

lor.rhs:                                          ; preds = %land.lhs.true309, %lor.lhs.false306
  %166 = load i32, ptr %cur, align 4, !dbg !12778, !tbaa !1767
  %cmp312 = icmp eq i32 %166, 45, !dbg !12779
  br label %lor.end, !dbg !12777

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true309, %land.lhs.true303, %land.lhs.true297
  %167 = phi i1 [ true, %land.lhs.true309 ], [ true, %land.lhs.true303 ], [ true, %land.lhs.true297 ], [ %cmp312, %lor.rhs ]
  br i1 %167, label %while.body, label %while.end, !dbg !12759

while.body:                                       ; preds = %lor.end
  %168 = load ptr, ptr %ctxt.addr, align 8, !dbg !12780, !tbaa !1527
  %cur314 = getelementptr inbounds %struct._xmlAutomata, ptr %168, i32 0, i32 1, !dbg !12780
  %169 = load ptr, ptr %cur314, align 8, !dbg !12780, !tbaa !4182
  %incdec.ptr315 = getelementptr inbounds i8, ptr %169, i32 1, !dbg !12780
  store ptr %incdec.ptr315, ptr %cur314, align 8, !dbg !12780, !tbaa !4182
  %170 = load ptr, ptr %ctxt.addr, align 8, !dbg !12782, !tbaa !1527
  %cur316 = getelementptr inbounds %struct._xmlAutomata, ptr %170, i32 0, i32 1, !dbg !12782
  %171 = load ptr, ptr %cur316, align 8, !dbg !12782, !tbaa !4182
  %172 = load i8, ptr %171, align 1, !dbg !12782, !tbaa !2932
  %conv317 = zext i8 %172 to i32, !dbg !12782
  store i32 %conv317, ptr %cur, align 4, !dbg !12783, !tbaa !1767
  br label %while.cond, !dbg !12759, !llvm.loop !12784

while.end:                                        ; preds = %lor.end
  br label %if.end318, !dbg !12786

if.end318:                                        ; preds = %while.end, %lor.lhs.false287
  store i32 136, ptr %type, align 4, !dbg !12787, !tbaa !2932
  %173 = load ptr, ptr %start, align 8, !dbg !12788, !tbaa !1527
  %174 = load ptr, ptr %ctxt.addr, align 8, !dbg !12789, !tbaa !1527
  %cur319 = getelementptr inbounds %struct._xmlAutomata, ptr %174, i32 0, i32 1, !dbg !12790
  %175 = load ptr, ptr %cur319, align 8, !dbg !12790, !tbaa !4182
  %176 = load ptr, ptr %start, align 8, !dbg !12791, !tbaa !1527
  %sub.ptr.lhs.cast = ptrtoint ptr %175 to i64, !dbg !12792
  %sub.ptr.rhs.cast = ptrtoint ptr %176 to i64, !dbg !12792
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12792
  %conv320 = trunc i64 %sub.ptr.sub to i32, !dbg !12789
  %call = call ptr @xmlStrndup(ptr noundef %173, i32 noundef %conv320), !dbg !12793
  store ptr %call, ptr %blockName, align 8, !dbg !12794, !tbaa !1527
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12795
  br label %cleanup, !dbg !12795

cleanup:                                          ; preds = %if.end318, %if.then265
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #8, !dbg !12795
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup351 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end323, !dbg !12796

if.else321:                                       ; preds = %if.else255
  %177 = load ptr, ptr %ctxt.addr, align 8, !dbg !12797, !tbaa !1527
  %error322 = getelementptr inbounds %struct._xmlAutomata, ptr %177, i32 0, i32 2, !dbg !12797
  store i32 1450, ptr %error322, align 8, !dbg !12797, !tbaa !1729
  %178 = load ptr, ptr %ctxt.addr, align 8, !dbg !12797, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %178, ptr noundef @.str.123), !dbg !12797
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup351, !dbg !12799

if.end323:                                        ; preds = %cleanup.cont
  br label %if.end324

if.end324:                                        ; preds = %if.end323, %if.end254
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.end218
  br label %if.end326

if.end326:                                        ; preds = %if.end325, %if.end182
  br label %if.end327

if.end327:                                        ; preds = %if.end326, %if.end153
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.end96
  br label %if.end329

if.end329:                                        ; preds = %if.end328, %if.end67
  br label %if.end330

if.end330:                                        ; preds = %if.end329, %if.end38
  %179 = load ptr, ptr %ctxt.addr, align 8, !dbg !12800, !tbaa !1527
  %atom = getelementptr inbounds %struct._xmlAutomata, ptr %179, i32 0, i32 7, !dbg !12802
  %180 = load ptr, ptr %atom, align 8, !dbg !12802, !tbaa !10568
  %cmp331 = icmp eq ptr %180, null, !dbg !12803
  br i1 %cmp331, label %if.then333, label %if.else342, !dbg !12804

if.then333:                                       ; preds = %if.end330
  %181 = load ptr, ptr %ctxt.addr, align 8, !dbg !12805, !tbaa !1527
  %182 = load i32, ptr %type, align 4, !dbg !12807, !tbaa !2932
  %call334 = call ptr @xmlRegNewAtom(ptr noundef %181, i32 noundef %182), !dbg !12808
  %183 = load ptr, ptr %ctxt.addr, align 8, !dbg !12809, !tbaa !1527
  %atom335 = getelementptr inbounds %struct._xmlAutomata, ptr %183, i32 0, i32 7, !dbg !12810
  store ptr %call334, ptr %atom335, align 8, !dbg !12811, !tbaa !10568
  %184 = load ptr, ptr %ctxt.addr, align 8, !dbg !12812, !tbaa !1527
  %atom336 = getelementptr inbounds %struct._xmlAutomata, ptr %184, i32 0, i32 7, !dbg !12814
  %185 = load ptr, ptr %atom336, align 8, !dbg !12814, !tbaa !10568
  %cmp337 = icmp ne ptr %185, null, !dbg !12815
  br i1 %cmp337, label %if.then339, label %if.end341, !dbg !12816

if.then339:                                       ; preds = %if.then333
  %186 = load ptr, ptr %blockName, align 8, !dbg !12817, !tbaa !1527
  %187 = load ptr, ptr %ctxt.addr, align 8, !dbg !12818, !tbaa !1527
  %atom340 = getelementptr inbounds %struct._xmlAutomata, ptr %187, i32 0, i32 7, !dbg !12819
  %188 = load ptr, ptr %atom340, align 8, !dbg !12819, !tbaa !10568
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %188, i32 0, i32 5, !dbg !12820
  store ptr %186, ptr %valuep, align 8, !dbg !12821, !tbaa !2159
  br label %if.end341, !dbg !12818

if.end341:                                        ; preds = %if.then339, %if.then333
  br label %if.end350, !dbg !12822

if.else342:                                       ; preds = %if.end330
  %189 = load ptr, ptr %ctxt.addr, align 8, !dbg !12823, !tbaa !1527
  %atom343 = getelementptr inbounds %struct._xmlAutomata, ptr %189, i32 0, i32 7, !dbg !12825
  %190 = load ptr, ptr %atom343, align 8, !dbg !12825, !tbaa !10568
  %type344 = getelementptr inbounds %struct._xmlRegAtom, ptr %190, i32 0, i32 1, !dbg !12826
  %191 = load i32, ptr %type344, align 4, !dbg !12826, !tbaa !3988
  %cmp345 = icmp eq i32 %191, 3, !dbg !12827
  br i1 %cmp345, label %if.then347, label %if.end349, !dbg !12828

if.then347:                                       ; preds = %if.else342
  %192 = load ptr, ptr %ctxt.addr, align 8, !dbg !12829, !tbaa !1527
  %193 = load ptr, ptr %ctxt.addr, align 8, !dbg !12831, !tbaa !1527
  %atom348 = getelementptr inbounds %struct._xmlAutomata, ptr %193, i32 0, i32 7, !dbg !12832
  %194 = load ptr, ptr %atom348, align 8, !dbg !12832, !tbaa !10568
  %195 = load ptr, ptr %ctxt.addr, align 8, !dbg !12833, !tbaa !1527
  %neg = getelementptr inbounds %struct._xmlAutomata, ptr %195, i32 0, i32 3, !dbg !12834
  %196 = load i32, ptr %neg, align 4, !dbg !12834, !tbaa !4264
  %197 = load i32, ptr %type, align 4, !dbg !12835, !tbaa !2932
  %198 = load ptr, ptr %blockName, align 8, !dbg !12836, !tbaa !1527
  call void @xmlRegAtomAddRange(ptr noundef %192, ptr noundef %194, i32 noundef %196, i32 noundef %197, i32 noundef 0, i32 noundef 0, ptr noundef %198), !dbg !12837
  br label %if.end349, !dbg !12838

if.end349:                                        ; preds = %if.then347, %if.else342
  br label %if.end350

if.end350:                                        ; preds = %if.end349, %if.end341
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12839
  br label %cleanup351, !dbg !12839

cleanup351:                                       ; preds = %if.end350, %if.else321, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %blockName) #8, !dbg !12839
  call void @llvm.lifetime.end.p0(i64 4, ptr %type) #8, !dbg !12839
  call void @llvm.lifetime.end.p0(i64 4, ptr %cur) #8, !dbg !12839
  %cleanup.dest354 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest354, label %unreachable [
    i32 0, label %cleanup.cont355
    i32 1, label %cleanup.cont355
  ]

cleanup.cont355:                                  ; preds = %cleanup351, %cleanup351
  ret void, !dbg !12839

unreachable:                                      ; preds = %cleanup351
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_escaped_codepoint(ptr noundef %ctxt) #0 !dbg !12840 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %val = alloca i32, align 4
  %low = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !12842, metadata !DIExpression()), !dbg !12851
  call void @llvm.lifetime.start.p0(i64 4, ptr %val) #8, !dbg !12852
  tail call void @llvm.dbg.declare(metadata ptr %val, metadata !12843, metadata !DIExpression()), !dbg !12853
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !12854, !tbaa !1527
  %call = call i32 @parse_escaped_codeunit(ptr noundef %0), !dbg !12855
  store i32 %call, ptr %val, align 4, !dbg !12853, !tbaa !1767
  %1 = load i32, ptr %val, align 4, !dbg !12856, !tbaa !1767
  %cmp = icmp sle i32 55296, %1, !dbg !12857
  br i1 %cmp, label %land.lhs.true, label %if.end24, !dbg !12858

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, ptr %val, align 4, !dbg !12859, !tbaa !1767
  %cmp1 = icmp sle i32 %2, 56319, !dbg !12860
  br i1 %cmp1, label %if.then, label %if.end24, !dbg !12861

if.then:                                          ; preds = %land.lhs.true
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !12862, !tbaa !1527
  %cur = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 1, !dbg !12862
  %4 = load ptr, ptr %cur, align 8, !dbg !12862, !tbaa !4182
  %incdec.ptr = getelementptr inbounds i8, ptr %4, i32 1, !dbg !12862
  store ptr %incdec.ptr, ptr %cur, align 8, !dbg !12862, !tbaa !4182
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !12863, !tbaa !1527
  %cur2 = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 1, !dbg !12863
  %6 = load ptr, ptr %cur2, align 8, !dbg !12863, !tbaa !4182
  %7 = load i8, ptr %6, align 1, !dbg !12863, !tbaa !2932
  %conv = zext i8 %7 to i32, !dbg !12863
  %cmp3 = icmp eq i32 %conv, 92, !dbg !12864
  br i1 %cmp3, label %if.then5, label %if.end23, !dbg !12865

if.then5:                                         ; preds = %if.then
  %8 = load ptr, ptr %ctxt.addr, align 8, !dbg !12866, !tbaa !1527
  %cur6 = getelementptr inbounds %struct._xmlAutomata, ptr %8, i32 0, i32 1, !dbg !12866
  %9 = load ptr, ptr %cur6, align 8, !dbg !12866, !tbaa !4182
  %incdec.ptr7 = getelementptr inbounds i8, ptr %9, i32 1, !dbg !12866
  store ptr %incdec.ptr7, ptr %cur6, align 8, !dbg !12866, !tbaa !4182
  %10 = load ptr, ptr %ctxt.addr, align 8, !dbg !12867, !tbaa !1527
  %cur8 = getelementptr inbounds %struct._xmlAutomata, ptr %10, i32 0, i32 1, !dbg !12867
  %11 = load ptr, ptr %cur8, align 8, !dbg !12867, !tbaa !4182
  %12 = load i8, ptr %11, align 1, !dbg !12867, !tbaa !2932
  %conv9 = zext i8 %12 to i32, !dbg !12867
  %cmp10 = icmp eq i32 %conv9, 117, !dbg !12868
  br i1 %cmp10, label %if.then12, label %if.end22, !dbg !12869

if.then12:                                        ; preds = %if.then5
  call void @llvm.lifetime.start.p0(i64 4, ptr %low) #8, !dbg !12870
  tail call void @llvm.dbg.declare(metadata ptr %low, metadata !12844, metadata !DIExpression()), !dbg !12871
  %13 = load ptr, ptr %ctxt.addr, align 8, !dbg !12872, !tbaa !1527
  %call13 = call i32 @parse_escaped_codeunit(ptr noundef %13), !dbg !12873
  store i32 %call13, ptr %low, align 4, !dbg !12871, !tbaa !1767
  %14 = load i32, ptr %low, align 4, !dbg !12874, !tbaa !1767
  %cmp14 = icmp sle i32 56320, %14, !dbg !12876
  br i1 %cmp14, label %land.lhs.true16, label %if.end, !dbg !12877

land.lhs.true16:                                  ; preds = %if.then12
  %15 = load i32, ptr %low, align 4, !dbg !12878, !tbaa !1767
  %cmp17 = icmp sle i32 %15, 57343, !dbg !12879
  br i1 %cmp17, label %if.then19, label %if.end, !dbg !12880

if.then19:                                        ; preds = %land.lhs.true16
  %16 = load i32, ptr %val, align 4, !dbg !12881, !tbaa !1767
  %sub = sub nsw i32 %16, 55296, !dbg !12883
  %mul = mul nsw i32 %sub, 1024, !dbg !12884
  %17 = load i32, ptr %low, align 4, !dbg !12885, !tbaa !1767
  %sub20 = sub nsw i32 %17, 56320, !dbg !12886
  %add = add nsw i32 %mul, %sub20, !dbg !12887
  %add21 = add nsw i32 %add, 65536, !dbg !12888
  store i32 %add21, ptr %retval, align 4, !dbg !12889
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12889

if.end:                                           ; preds = %land.lhs.true16, %if.then12
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !12890
  br label %cleanup, !dbg !12890

cleanup:                                          ; preds = %if.end, %if.then19
  call void @llvm.lifetime.end.p0(i64 4, ptr %low) #8, !dbg !12890
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup25 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end22, !dbg !12891

if.end22:                                         ; preds = %cleanup.cont, %if.then5
  br label %if.end23, !dbg !12892

if.end23:                                         ; preds = %if.end22, %if.then
  %18 = load ptr, ptr %ctxt.addr, align 8, !dbg !12893, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %18, i32 0, i32 2, !dbg !12893
  store i32 1450, ptr %error, align 8, !dbg !12893, !tbaa !1729
  %19 = load ptr, ptr %ctxt.addr, align 8, !dbg !12893, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %19, ptr noundef @.str.124), !dbg !12893
  store i32 -1, ptr %val, align 4, !dbg !12894, !tbaa !1767
  br label %if.end24, !dbg !12895

if.end24:                                         ; preds = %if.end23, %land.lhs.true, %entry
  %20 = load i32, ptr %val, align 4, !dbg !12896, !tbaa !1767
  store i32 %20, ptr %retval, align 4, !dbg !12897
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup25, !dbg !12897

cleanup25:                                        ; preds = %if.end24, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %val) #8, !dbg !12898
  %21 = load i32, ptr %retval, align 4, !dbg !12898
  ret i32 %21, !dbg !12898
}

declare !dbg !12899 ptr @xmlStrndup(ptr noundef, i32 noundef) #5

; Function Attrs: nounwind uwtable
define internal i32 @parse_escaped_codeunit(ptr noundef %ctxt) #0 !dbg !12902 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %val = alloca i32, align 4
  %i = alloca i32, align 4
  %cur = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !12904, metadata !DIExpression()), !dbg !12908
  call void @llvm.lifetime.start.p0(i64 4, ptr %val) #8, !dbg !12909
  tail call void @llvm.dbg.declare(metadata ptr %val, metadata !12905, metadata !DIExpression()), !dbg !12910
  store i32 0, ptr %val, align 4, !dbg !12910, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !12909
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !12906, metadata !DIExpression()), !dbg !12911
  call void @llvm.lifetime.start.p0(i64 4, ptr %cur) #8, !dbg !12909
  tail call void @llvm.dbg.declare(metadata ptr %cur, metadata !12907, metadata !DIExpression()), !dbg !12912
  store i32 0, ptr %i, align 4, !dbg !12913, !tbaa !1767
  br label %for.cond, !dbg !12915

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, ptr %i, align 4, !dbg !12916, !tbaa !1767
  %cmp = icmp slt i32 %0, 4, !dbg !12918
  br i1 %cmp, label %for.body, label %for.end, !dbg !12919

for.body:                                         ; preds = %for.cond
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !12920, !tbaa !1527
  %cur1 = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 1, !dbg !12920
  %2 = load ptr, ptr %cur1, align 8, !dbg !12920, !tbaa !4182
  %incdec.ptr = getelementptr inbounds i8, ptr %2, i32 1, !dbg !12920
  store ptr %incdec.ptr, ptr %cur1, align 8, !dbg !12920, !tbaa !4182
  %3 = load i32, ptr %val, align 4, !dbg !12922, !tbaa !1767
  %mul = mul nsw i32 %3, 16, !dbg !12922
  store i32 %mul, ptr %val, align 4, !dbg !12922, !tbaa !1767
  %4 = load ptr, ptr %ctxt.addr, align 8, !dbg !12923, !tbaa !1527
  %cur2 = getelementptr inbounds %struct._xmlAutomata, ptr %4, i32 0, i32 1, !dbg !12923
  %5 = load ptr, ptr %cur2, align 8, !dbg !12923, !tbaa !4182
  %6 = load i8, ptr %5, align 1, !dbg !12923, !tbaa !2932
  %conv = zext i8 %6 to i32, !dbg !12923
  store i32 %conv, ptr %cur, align 4, !dbg !12924, !tbaa !1767
  %7 = load i32, ptr %cur, align 4, !dbg !12925, !tbaa !1767
  %cmp3 = icmp sge i32 %7, 48, !dbg !12927
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !12928

land.lhs.true:                                    ; preds = %for.body
  %8 = load i32, ptr %cur, align 4, !dbg !12929, !tbaa !1767
  %cmp5 = icmp sle i32 %8, 57, !dbg !12930
  br i1 %cmp5, label %if.then, label %if.else, !dbg !12931

if.then:                                          ; preds = %land.lhs.true
  %9 = load i32, ptr %cur, align 4, !dbg !12932, !tbaa !1767
  %sub = sub nsw i32 %9, 48, !dbg !12934
  %10 = load i32, ptr %val, align 4, !dbg !12935, !tbaa !1767
  %add = add nsw i32 %10, %sub, !dbg !12935
  store i32 %add, ptr %val, align 4, !dbg !12935, !tbaa !1767
  br label %if.end28, !dbg !12936

if.else:                                          ; preds = %land.lhs.true, %for.body
  %11 = load i32, ptr %cur, align 4, !dbg !12937, !tbaa !1767
  %cmp7 = icmp sge i32 %11, 65, !dbg !12939
  br i1 %cmp7, label %land.lhs.true9, label %if.else16, !dbg !12940

land.lhs.true9:                                   ; preds = %if.else
  %12 = load i32, ptr %cur, align 4, !dbg !12941, !tbaa !1767
  %cmp10 = icmp sle i32 %12, 70, !dbg !12942
  br i1 %cmp10, label %if.then12, label %if.else16, !dbg !12943

if.then12:                                        ; preds = %land.lhs.true9
  %13 = load i32, ptr %cur, align 4, !dbg !12944, !tbaa !1767
  %sub13 = sub nsw i32 %13, 65, !dbg !12946
  %add14 = add nsw i32 %sub13, 10, !dbg !12947
  %14 = load i32, ptr %val, align 4, !dbg !12948, !tbaa !1767
  %add15 = add nsw i32 %14, %add14, !dbg !12948
  store i32 %add15, ptr %val, align 4, !dbg !12948, !tbaa !1767
  br label %if.end27, !dbg !12949

if.else16:                                        ; preds = %land.lhs.true9, %if.else
  %15 = load i32, ptr %cur, align 4, !dbg !12950, !tbaa !1767
  %cmp17 = icmp sge i32 %15, 97, !dbg !12952
  br i1 %cmp17, label %land.lhs.true19, label %if.else26, !dbg !12953

land.lhs.true19:                                  ; preds = %if.else16
  %16 = load i32, ptr %cur, align 4, !dbg !12954, !tbaa !1767
  %cmp20 = icmp sle i32 %16, 102, !dbg !12955
  br i1 %cmp20, label %if.then22, label %if.else26, !dbg !12956

if.then22:                                        ; preds = %land.lhs.true19
  %17 = load i32, ptr %cur, align 4, !dbg !12957, !tbaa !1767
  %sub23 = sub nsw i32 %17, 97, !dbg !12959
  %add24 = add nsw i32 %sub23, 10, !dbg !12960
  %18 = load i32, ptr %val, align 4, !dbg !12961, !tbaa !1767
  %add25 = add nsw i32 %18, %add24, !dbg !12961
  store i32 %add25, ptr %val, align 4, !dbg !12961, !tbaa !1767
  br label %if.end, !dbg !12962

if.else26:                                        ; preds = %land.lhs.true19, %if.else16
  %19 = load ptr, ptr %ctxt.addr, align 8, !dbg !12963, !tbaa !1527
  %error = getelementptr inbounds %struct._xmlAutomata, ptr %19, i32 0, i32 2, !dbg !12963
  store i32 1450, ptr %error, align 8, !dbg !12963, !tbaa !1729
  %20 = load ptr, ptr %ctxt.addr, align 8, !dbg !12963, !tbaa !1527
  call void @xmlRegexpErrCompile(ptr noundef %20, ptr noundef @.str.125), !dbg !12963
  store i32 -1, ptr %retval, align 4, !dbg !12965
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12965

if.end:                                           ; preds = %if.then22
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then12
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  br label %for.inc, !dbg !12966

for.inc:                                          ; preds = %if.end28
  %21 = load i32, ptr %i, align 4, !dbg !12967, !tbaa !1767
  %inc = add nsw i32 %21, 1, !dbg !12967
  store i32 %inc, ptr %i, align 4, !dbg !12967, !tbaa !1767
  br label %for.cond, !dbg !12968, !llvm.loop !12969

for.end:                                          ; preds = %for.cond
  %22 = load i32, ptr %val, align 4, !dbg !12971, !tbaa !1767
  store i32 %22, ptr %retval, align 4, !dbg !12972
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !12972

cleanup:                                          ; preds = %for.end, %if.else26
  call void @llvm.lifetime.end.p0(i64 4, ptr %cur) #8, !dbg !12973
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !12973
  call void @llvm.lifetime.end.p0(i64 4, ptr %val) #8, !dbg !12973
  %23 = load i32, ptr %retval, align 4, !dbg !12973
  ret i32 %23, !dbg !12973
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlFAParseQuantExact(ptr noundef %ctxt) #0 !dbg !12974 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %ok = alloca i32, align 4
  %overflow = alloca i32, align 4
  %digit = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !12976, metadata !DIExpression()), !dbg !12984
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !12985
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !12977, metadata !DIExpression()), !dbg !12986
  store i32 0, ptr %ret, align 4, !dbg !12986, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 4, ptr %ok) #8, !dbg !12987
  tail call void @llvm.dbg.declare(metadata ptr %ok, metadata !12978, metadata !DIExpression()), !dbg !12988
  store i32 0, ptr %ok, align 4, !dbg !12988, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 4, ptr %overflow) #8, !dbg !12989
  tail call void @llvm.dbg.declare(metadata ptr %overflow, metadata !12979, metadata !DIExpression()), !dbg !12990
  store i32 0, ptr %overflow, align 4, !dbg !12990, !tbaa !1767
  br label %while.cond, !dbg !12991

while.cond:                                       ; preds = %if.end15, %entry
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !12992, !tbaa !1527
  %cur = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 1, !dbg !12992
  %1 = load ptr, ptr %cur, align 8, !dbg !12992, !tbaa !4182
  %2 = load i8, ptr %1, align 1, !dbg !12992, !tbaa !2932
  %conv = zext i8 %2 to i32, !dbg !12992
  %cmp = icmp sge i32 %conv, 48, !dbg !12993
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12994

land.rhs:                                         ; preds = %while.cond
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !12995, !tbaa !1527
  %cur2 = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 1, !dbg !12995
  %4 = load ptr, ptr %cur2, align 8, !dbg !12995, !tbaa !4182
  %5 = load i8, ptr %4, align 1, !dbg !12995, !tbaa !2932
  %conv3 = zext i8 %5 to i32, !dbg !12995
  %cmp4 = icmp sle i32 %conv3, 57, !dbg !12996
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ], !dbg !12997
  br i1 %6, label %while.body, label %while.end, !dbg !12991

while.body:                                       ; preds = %land.end
  %7 = load i32, ptr %ret, align 4, !dbg !12998, !tbaa !1767
  %cmp6 = icmp sgt i32 %7, 214748364, !dbg !12999
  br i1 %cmp6, label %if.then, label %if.else, !dbg !13000

if.then:                                          ; preds = %while.body
  store i32 1, ptr %overflow, align 4, !dbg !13001, !tbaa !1767
  br label %if.end15, !dbg !13003

if.else:                                          ; preds = %while.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %digit) #8, !dbg !13004
  tail call void @llvm.dbg.declare(metadata ptr %digit, metadata !12980, metadata !DIExpression()), !dbg !13005
  %8 = load ptr, ptr %ctxt.addr, align 8, !dbg !13006, !tbaa !1527
  %cur8 = getelementptr inbounds %struct._xmlAutomata, ptr %8, i32 0, i32 1, !dbg !13006
  %9 = load ptr, ptr %cur8, align 8, !dbg !13006, !tbaa !4182
  %10 = load i8, ptr %9, align 1, !dbg !13006, !tbaa !2932
  %conv9 = zext i8 %10 to i32, !dbg !13006
  %sub = sub nsw i32 %conv9, 48, !dbg !13007
  store i32 %sub, ptr %digit, align 4, !dbg !13005, !tbaa !1767
  %11 = load i32, ptr %ret, align 4, !dbg !13008, !tbaa !1767
  %mul = mul nsw i32 %11, 10, !dbg !13008
  store i32 %mul, ptr %ret, align 4, !dbg !13008, !tbaa !1767
  %12 = load i32, ptr %ret, align 4, !dbg !13009, !tbaa !1767
  %13 = load i32, ptr %digit, align 4, !dbg !13011, !tbaa !1767
  %sub10 = sub nsw i32 2147483647, %13, !dbg !13012
  %cmp11 = icmp sgt i32 %12, %sub10, !dbg !13013
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !13014

if.then13:                                        ; preds = %if.else
  store i32 1, ptr %overflow, align 4, !dbg !13015, !tbaa !1767
  br label %if.end, !dbg !13016

if.else14:                                        ; preds = %if.else
  %14 = load i32, ptr %digit, align 4, !dbg !13017, !tbaa !1767
  %15 = load i32, ptr %ret, align 4, !dbg !13018, !tbaa !1767
  %add = add nsw i32 %15, %14, !dbg !13018
  store i32 %add, ptr %ret, align 4, !dbg !13018, !tbaa !1767
  br label %if.end

if.end:                                           ; preds = %if.else14, %if.then13
  call void @llvm.lifetime.end.p0(i64 4, ptr %digit) #8, !dbg !13019
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  store i32 1, ptr %ok, align 4, !dbg !13020, !tbaa !1767
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !13021, !tbaa !1527
  %cur16 = getelementptr inbounds %struct._xmlAutomata, ptr %16, i32 0, i32 1, !dbg !13021
  %17 = load ptr, ptr %cur16, align 8, !dbg !13021, !tbaa !4182
  %incdec.ptr = getelementptr inbounds i8, ptr %17, i32 1, !dbg !13021
  store ptr %incdec.ptr, ptr %cur16, align 8, !dbg !13021, !tbaa !4182
  br label %while.cond, !dbg !12991, !llvm.loop !13022

while.end:                                        ; preds = %land.end
  %18 = load i32, ptr %ok, align 4, !dbg !13024, !tbaa !1767
  %cmp17 = icmp ne i32 %18, 1, !dbg !13026
  br i1 %cmp17, label %if.then21, label %lor.lhs.false, !dbg !13027

lor.lhs.false:                                    ; preds = %while.end
  %19 = load i32, ptr %overflow, align 4, !dbg !13028, !tbaa !1767
  %cmp19 = icmp eq i32 %19, 1, !dbg !13029
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !13030

if.then21:                                        ; preds = %lor.lhs.false, %while.end
  store i32 -1, ptr %retval, align 4, !dbg !13031
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13031

if.end22:                                         ; preds = %lor.lhs.false
  %20 = load i32, ptr %ret, align 4, !dbg !13033, !tbaa !1767
  store i32 %20, ptr %retval, align 4, !dbg !13034
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13034

cleanup:                                          ; preds = %if.end22, %if.then21
  call void @llvm.lifetime.end.p0(i64 4, ptr %overflow) #8, !dbg !13035
  call void @llvm.lifetime.end.p0(i64 4, ptr %ok) #8, !dbg !13035
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !13035
  %21 = load i32, ptr %retval, align 4, !dbg !13035
  ret i32 %21, !dbg !13035
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAEliminateSimpleEpsilonTransitions(ptr noundef %ctxt) #0 !dbg !13036 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %statenr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %newto = alloca i32, align 4
  %state = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !13038, metadata !DIExpression()), !dbg !13045
  call void @llvm.lifetime.start.p0(i64 4, ptr %statenr) #8, !dbg !13046
  tail call void @llvm.dbg.declare(metadata ptr %statenr, metadata !13039, metadata !DIExpression()), !dbg !13047
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !13046
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !13040, metadata !DIExpression()), !dbg !13048
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #8, !dbg !13046
  tail call void @llvm.dbg.declare(metadata ptr %j, metadata !13041, metadata !DIExpression()), !dbg !13049
  call void @llvm.lifetime.start.p0(i64 4, ptr %newto) #8, !dbg !13046
  tail call void @llvm.dbg.declare(metadata ptr %newto, metadata !13042, metadata !DIExpression()), !dbg !13050
  call void @llvm.lifetime.start.p0(i64 8, ptr %state) #8, !dbg !13051
  tail call void @llvm.dbg.declare(metadata ptr %state, metadata !13043, metadata !DIExpression()), !dbg !13052
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !13051
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !13044, metadata !DIExpression()), !dbg !13053
  store i32 0, ptr %statenr, align 4, !dbg !13054, !tbaa !1767
  br label %for.cond, !dbg !13056

for.cond:                                         ; preds = %for.inc88, %entry
  %0 = load i32, ptr %statenr, align 4, !dbg !13057, !tbaa !1767
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !13059, !tbaa !1527
  %nbStates = getelementptr inbounds %struct._xmlAutomata, ptr %1, i32 0, i32 12, !dbg !13060
  %2 = load i32, ptr %nbStates, align 4, !dbg !13060, !tbaa !4359
  %cmp = icmp slt i32 %0, %2, !dbg !13061
  br i1 %cmp, label %for.body, label %for.end90, !dbg !13062

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %ctxt.addr, align 8, !dbg !13063, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlAutomata, ptr %3, i32 0, i32 13, !dbg !13065
  %4 = load ptr, ptr %states, align 8, !dbg !13065, !tbaa !4343
  %5 = load i32, ptr %statenr, align 4, !dbg !13066, !tbaa !1767
  %idxprom = sext i32 %5 to i64, !dbg !13063
  %arrayidx = getelementptr inbounds ptr, ptr %4, i64 %idxprom, !dbg !13063
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !13063, !tbaa !1527
  store ptr %6, ptr %state, align 8, !dbg !13067, !tbaa !1527
  %7 = load ptr, ptr %state, align 8, !dbg !13068, !tbaa !1527
  %cmp1 = icmp eq ptr %7, null, !dbg !13070
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13071

if.then:                                          ; preds = %for.body
  br label %for.inc88, !dbg !13072

if.end:                                           ; preds = %for.body
  %8 = load ptr, ptr %state, align 8, !dbg !13073, !tbaa !1527
  %nbTrans = getelementptr inbounds %struct._xmlAutomataState, ptr %8, i32 0, i32 6, !dbg !13075
  %9 = load i32, ptr %nbTrans, align 8, !dbg !13075, !tbaa !2052
  %cmp2 = icmp ne i32 %9, 1, !dbg !13076
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !13077

if.then3:                                         ; preds = %if.end
  br label %for.inc88, !dbg !13078

if.end4:                                          ; preds = %if.end
  %10 = load ptr, ptr %state, align 8, !dbg !13079, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlAutomataState, ptr %10, i32 0, i32 0, !dbg !13081
  %11 = load i32, ptr %type, align 8, !dbg !13081, !tbaa !1984
  %cmp5 = icmp eq i32 %11, 5, !dbg !13082
  br i1 %cmp5, label %if.then8, label %lor.lhs.false, !dbg !13083

lor.lhs.false:                                    ; preds = %if.end4
  %12 = load ptr, ptr %state, align 8, !dbg !13084, !tbaa !1527
  %type6 = getelementptr inbounds %struct._xmlAutomataState, ptr %12, i32 0, i32 0, !dbg !13085
  %13 = load i32, ptr %type6, align 8, !dbg !13085, !tbaa !1984
  %cmp7 = icmp eq i32 %13, 2, !dbg !13086
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !13087

if.then8:                                         ; preds = %lor.lhs.false, %if.end4
  br label %for.inc88, !dbg !13088

if.end9:                                          ; preds = %lor.lhs.false
  %14 = load ptr, ptr %state, align 8, !dbg !13089, !tbaa !1527
  %trans = getelementptr inbounds %struct._xmlAutomataState, ptr %14, i32 0, i32 7, !dbg !13091
  %15 = load ptr, ptr %trans, align 8, !dbg !13091, !tbaa !2058
  %arrayidx10 = getelementptr inbounds %struct._xmlRegTrans, ptr %15, i64 0, !dbg !13089
  %atom = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx10, i32 0, i32 0, !dbg !13092
  %16 = load ptr, ptr %atom, align 8, !dbg !13092, !tbaa !2072
  %cmp11 = icmp eq ptr %16, null, !dbg !13093
  br i1 %cmp11, label %land.lhs.true, label %if.end87, !dbg !13094

land.lhs.true:                                    ; preds = %if.end9
  %17 = load ptr, ptr %state, align 8, !dbg !13095, !tbaa !1527
  %trans12 = getelementptr inbounds %struct._xmlAutomataState, ptr %17, i32 0, i32 7, !dbg !13096
  %18 = load ptr, ptr %trans12, align 8, !dbg !13096, !tbaa !2058
  %arrayidx13 = getelementptr inbounds %struct._xmlRegTrans, ptr %18, i64 0, !dbg !13095
  %to = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx13, i32 0, i32 1, !dbg !13097
  %19 = load i32, ptr %to, align 8, !dbg !13097, !tbaa !2065
  %cmp14 = icmp sge i32 %19, 0, !dbg !13098
  br i1 %cmp14, label %land.lhs.true15, label %if.end87, !dbg !13099

land.lhs.true15:                                  ; preds = %land.lhs.true
  %20 = load ptr, ptr %state, align 8, !dbg !13100, !tbaa !1527
  %trans16 = getelementptr inbounds %struct._xmlAutomataState, ptr %20, i32 0, i32 7, !dbg !13101
  %21 = load ptr, ptr %trans16, align 8, !dbg !13101, !tbaa !2058
  %arrayidx17 = getelementptr inbounds %struct._xmlRegTrans, ptr %21, i64 0, !dbg !13100
  %to18 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx17, i32 0, i32 1, !dbg !13102
  %22 = load i32, ptr %to18, align 8, !dbg !13102, !tbaa !2065
  %23 = load i32, ptr %statenr, align 4, !dbg !13103, !tbaa !1767
  %cmp19 = icmp ne i32 %22, %23, !dbg !13104
  br i1 %cmp19, label %land.lhs.true20, label %if.end87, !dbg !13105

land.lhs.true20:                                  ; preds = %land.lhs.true15
  %24 = load ptr, ptr %state, align 8, !dbg !13106, !tbaa !1527
  %trans21 = getelementptr inbounds %struct._xmlAutomataState, ptr %24, i32 0, i32 7, !dbg !13107
  %25 = load ptr, ptr %trans21, align 8, !dbg !13107, !tbaa !2058
  %arrayidx22 = getelementptr inbounds %struct._xmlRegTrans, ptr %25, i64 0, !dbg !13106
  %counter = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx22, i32 0, i32 2, !dbg !13108
  %26 = load i32, ptr %counter, align 4, !dbg !13108, !tbaa !2123
  %cmp23 = icmp slt i32 %26, 0, !dbg !13109
  br i1 %cmp23, label %land.lhs.true24, label %if.end87, !dbg !13110

land.lhs.true24:                                  ; preds = %land.lhs.true20
  %27 = load ptr, ptr %state, align 8, !dbg !13111, !tbaa !1527
  %trans25 = getelementptr inbounds %struct._xmlAutomataState, ptr %27, i32 0, i32 7, !dbg !13112
  %28 = load ptr, ptr %trans25, align 8, !dbg !13112, !tbaa !2058
  %arrayidx26 = getelementptr inbounds %struct._xmlRegTrans, ptr %28, i64 0, !dbg !13111
  %count = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx26, i32 0, i32 3, !dbg !13113
  %29 = load i32, ptr %count, align 8, !dbg !13113, !tbaa !2077
  %cmp27 = icmp slt i32 %29, 0, !dbg !13114
  br i1 %cmp27, label %if.then28, label %if.end87, !dbg !13115

if.then28:                                        ; preds = %land.lhs.true24
  %30 = load ptr, ptr %state, align 8, !dbg !13116, !tbaa !1527
  %trans29 = getelementptr inbounds %struct._xmlAutomataState, ptr %30, i32 0, i32 7, !dbg !13118
  %31 = load ptr, ptr %trans29, align 8, !dbg !13118, !tbaa !2058
  %arrayidx30 = getelementptr inbounds %struct._xmlRegTrans, ptr %31, i64 0, !dbg !13116
  %to31 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx30, i32 0, i32 1, !dbg !13119
  %32 = load i32, ptr %to31, align 8, !dbg !13119, !tbaa !2065
  store i32 %32, ptr %newto, align 4, !dbg !13120, !tbaa !1767
  %33 = load ptr, ptr %state, align 8, !dbg !13121, !tbaa !1527
  %type32 = getelementptr inbounds %struct._xmlAutomataState, ptr %33, i32 0, i32 0, !dbg !13123
  %34 = load i32, ptr %type32, align 8, !dbg !13123, !tbaa !1984
  %cmp33 = icmp eq i32 %34, 1, !dbg !13124
  br i1 %cmp33, label %if.then34, label %if.else, !dbg !13125

if.then34:                                        ; preds = %if.then28
  br label %if.end86, !dbg !13126

if.else:                                          ; preds = %if.then28
  store i32 0, ptr %i, align 4, !dbg !13128, !tbaa !1767
  br label %for.cond35, !dbg !13131

for.cond35:                                       ; preds = %for.inc73, %if.else
  %35 = load i32, ptr %i, align 4, !dbg !13132, !tbaa !1767
  %36 = load ptr, ptr %state, align 8, !dbg !13134, !tbaa !1527
  %nbTransTo = getelementptr inbounds %struct._xmlAutomataState, ptr %36, i32 0, i32 9, !dbg !13135
  %37 = load i32, ptr %nbTransTo, align 4, !dbg !13135, !tbaa !13136
  %cmp36 = icmp slt i32 %35, %37, !dbg !13137
  br i1 %cmp36, label %for.body37, label %for.end75, !dbg !13138

for.body37:                                       ; preds = %for.cond35
  %38 = load ptr, ptr %ctxt.addr, align 8, !dbg !13139, !tbaa !1527
  %states38 = getelementptr inbounds %struct._xmlAutomata, ptr %38, i32 0, i32 13, !dbg !13141
  %39 = load ptr, ptr %states38, align 8, !dbg !13141, !tbaa !4343
  %40 = load ptr, ptr %state, align 8, !dbg !13142, !tbaa !1527
  %transTo = getelementptr inbounds %struct._xmlAutomataState, ptr %40, i32 0, i32 10, !dbg !13143
  %41 = load ptr, ptr %transTo, align 8, !dbg !13143, !tbaa !6775
  %42 = load i32, ptr %i, align 4, !dbg !13144, !tbaa !1767
  %idxprom39 = sext i32 %42 to i64, !dbg !13142
  %arrayidx40 = getelementptr inbounds i32, ptr %41, i64 %idxprom39, !dbg !13142
  %43 = load i32, ptr %arrayidx40, align 4, !dbg !13142, !tbaa !1767
  %idxprom41 = sext i32 %43 to i64, !dbg !13139
  %arrayidx42 = getelementptr inbounds ptr, ptr %39, i64 %idxprom41, !dbg !13139
  %44 = load ptr, ptr %arrayidx42, align 8, !dbg !13139, !tbaa !1527
  store ptr %44, ptr %tmp, align 8, !dbg !13145, !tbaa !1527
  store i32 0, ptr %j, align 4, !dbg !13146, !tbaa !1767
  br label %for.cond43, !dbg !13148

for.cond43:                                       ; preds = %for.inc, %for.body37
  %45 = load i32, ptr %j, align 4, !dbg !13149, !tbaa !1767
  %46 = load ptr, ptr %tmp, align 8, !dbg !13151, !tbaa !1527
  %nbTrans44 = getelementptr inbounds %struct._xmlAutomataState, ptr %46, i32 0, i32 6, !dbg !13152
  %47 = load i32, ptr %nbTrans44, align 8, !dbg !13152, !tbaa !2052
  %cmp45 = icmp slt i32 %45, %47, !dbg !13153
  br i1 %cmp45, label %for.body46, label %for.end, !dbg !13154

for.body46:                                       ; preds = %for.cond43
  %48 = load ptr, ptr %tmp, align 8, !dbg !13155, !tbaa !1527
  %trans47 = getelementptr inbounds %struct._xmlAutomataState, ptr %48, i32 0, i32 7, !dbg !13158
  %49 = load ptr, ptr %trans47, align 8, !dbg !13158, !tbaa !2058
  %50 = load i32, ptr %j, align 4, !dbg !13159, !tbaa !1767
  %idxprom48 = sext i32 %50 to i64, !dbg !13155
  %arrayidx49 = getelementptr inbounds %struct._xmlRegTrans, ptr %49, i64 %idxprom48, !dbg !13155
  %to50 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx49, i32 0, i32 1, !dbg !13160
  %51 = load i32, ptr %to50, align 8, !dbg !13160, !tbaa !2065
  %52 = load i32, ptr %statenr, align 4, !dbg !13161, !tbaa !1767
  %cmp51 = icmp eq i32 %51, %52, !dbg !13162
  br i1 %cmp51, label %if.then52, label %if.end72, !dbg !13163

if.then52:                                        ; preds = %for.body46
  %53 = load ptr, ptr %tmp, align 8, !dbg !13164, !tbaa !1527
  %trans53 = getelementptr inbounds %struct._xmlAutomataState, ptr %53, i32 0, i32 7, !dbg !13166
  %54 = load ptr, ptr %trans53, align 8, !dbg !13166, !tbaa !2058
  %55 = load i32, ptr %j, align 4, !dbg !13167, !tbaa !1767
  %idxprom54 = sext i32 %55 to i64, !dbg !13164
  %arrayidx55 = getelementptr inbounds %struct._xmlRegTrans, ptr %54, i64 %idxprom54, !dbg !13164
  %to56 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx55, i32 0, i32 1, !dbg !13168
  store i32 -1, ptr %to56, align 8, !dbg !13169, !tbaa !2065
  %56 = load ptr, ptr %ctxt.addr, align 8, !dbg !13170, !tbaa !1527
  %57 = load ptr, ptr %tmp, align 8, !dbg !13171, !tbaa !1527
  %58 = load ptr, ptr %tmp, align 8, !dbg !13172, !tbaa !1527
  %trans57 = getelementptr inbounds %struct._xmlAutomataState, ptr %58, i32 0, i32 7, !dbg !13173
  %59 = load ptr, ptr %trans57, align 8, !dbg !13173, !tbaa !2058
  %60 = load i32, ptr %j, align 4, !dbg !13174, !tbaa !1767
  %idxprom58 = sext i32 %60 to i64, !dbg !13172
  %arrayidx59 = getelementptr inbounds %struct._xmlRegTrans, ptr %59, i64 %idxprom58, !dbg !13172
  %atom60 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx59, i32 0, i32 0, !dbg !13175
  %61 = load ptr, ptr %atom60, align 8, !dbg !13175, !tbaa !2072
  %62 = load ptr, ptr %ctxt.addr, align 8, !dbg !13176, !tbaa !1527
  %states61 = getelementptr inbounds %struct._xmlAutomata, ptr %62, i32 0, i32 13, !dbg !13177
  %63 = load ptr, ptr %states61, align 8, !dbg !13177, !tbaa !4343
  %64 = load i32, ptr %newto, align 4, !dbg !13178, !tbaa !1767
  %idxprom62 = sext i32 %64 to i64, !dbg !13176
  %arrayidx63 = getelementptr inbounds ptr, ptr %63, i64 %idxprom62, !dbg !13176
  %65 = load ptr, ptr %arrayidx63, align 8, !dbg !13176, !tbaa !1527
  %66 = load ptr, ptr %tmp, align 8, !dbg !13179, !tbaa !1527
  %trans64 = getelementptr inbounds %struct._xmlAutomataState, ptr %66, i32 0, i32 7, !dbg !13180
  %67 = load ptr, ptr %trans64, align 8, !dbg !13180, !tbaa !2058
  %68 = load i32, ptr %j, align 4, !dbg !13181, !tbaa !1767
  %idxprom65 = sext i32 %68 to i64, !dbg !13179
  %arrayidx66 = getelementptr inbounds %struct._xmlRegTrans, ptr %67, i64 %idxprom65, !dbg !13179
  %counter67 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx66, i32 0, i32 2, !dbg !13182
  %69 = load i32, ptr %counter67, align 4, !dbg !13182, !tbaa !2123
  %70 = load ptr, ptr %tmp, align 8, !dbg !13183, !tbaa !1527
  %trans68 = getelementptr inbounds %struct._xmlAutomataState, ptr %70, i32 0, i32 7, !dbg !13184
  %71 = load ptr, ptr %trans68, align 8, !dbg !13184, !tbaa !2058
  %72 = load i32, ptr %j, align 4, !dbg !13185, !tbaa !1767
  %idxprom69 = sext i32 %72 to i64, !dbg !13183
  %arrayidx70 = getelementptr inbounds %struct._xmlRegTrans, ptr %71, i64 %idxprom69, !dbg !13183
  %count71 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx70, i32 0, i32 3, !dbg !13186
  %73 = load i32, ptr %count71, align 8, !dbg !13186, !tbaa !2077
  call void @xmlRegStateAddTrans(ptr noundef %56, ptr noundef %57, ptr noundef %61, ptr noundef %65, i32 noundef %69, i32 noundef %73), !dbg !13187
  br label %if.end72, !dbg !13188

if.end72:                                         ; preds = %if.then52, %for.body46
  br label %for.inc, !dbg !13189

for.inc:                                          ; preds = %if.end72
  %74 = load i32, ptr %j, align 4, !dbg !13190, !tbaa !1767
  %inc = add nsw i32 %74, 1, !dbg !13190
  store i32 %inc, ptr %j, align 4, !dbg !13190, !tbaa !1767
  br label %for.cond43, !dbg !13191, !llvm.loop !13192

for.end:                                          ; preds = %for.cond43
  br label %for.inc73, !dbg !13194

for.inc73:                                        ; preds = %for.end
  %75 = load i32, ptr %i, align 4, !dbg !13195, !tbaa !1767
  %inc74 = add nsw i32 %75, 1, !dbg !13195
  store i32 %inc74, ptr %i, align 4, !dbg !13195, !tbaa !1767
  br label %for.cond35, !dbg !13196, !llvm.loop !13197

for.end75:                                        ; preds = %for.cond35
  %76 = load ptr, ptr %state, align 8, !dbg !13199, !tbaa !1527
  %type76 = getelementptr inbounds %struct._xmlAutomataState, ptr %76, i32 0, i32 0, !dbg !13201
  %77 = load i32, ptr %type76, align 8, !dbg !13201, !tbaa !1984
  %cmp77 = icmp eq i32 %77, 2, !dbg !13202
  br i1 %cmp77, label %if.then78, label %if.end83, !dbg !13203

if.then78:                                        ; preds = %for.end75
  %78 = load ptr, ptr %ctxt.addr, align 8, !dbg !13204, !tbaa !1527
  %states79 = getelementptr inbounds %struct._xmlAutomata, ptr %78, i32 0, i32 13, !dbg !13205
  %79 = load ptr, ptr %states79, align 8, !dbg !13205, !tbaa !4343
  %80 = load i32, ptr %newto, align 4, !dbg !13206, !tbaa !1767
  %idxprom80 = sext i32 %80 to i64, !dbg !13204
  %arrayidx81 = getelementptr inbounds ptr, ptr %79, i64 %idxprom80, !dbg !13204
  %81 = load ptr, ptr %arrayidx81, align 8, !dbg !13204, !tbaa !1527
  %type82 = getelementptr inbounds %struct._xmlAutomataState, ptr %81, i32 0, i32 0, !dbg !13207
  store i32 2, ptr %type82, align 8, !dbg !13208, !tbaa !1984
  br label %if.end83, !dbg !13204

if.end83:                                         ; preds = %if.then78, %for.end75
  %82 = load ptr, ptr %state, align 8, !dbg !13209, !tbaa !1527
  %nbTrans84 = getelementptr inbounds %struct._xmlAutomataState, ptr %82, i32 0, i32 6, !dbg !13210
  store i32 0, ptr %nbTrans84, align 8, !dbg !13211, !tbaa !2052
  %83 = load ptr, ptr %state, align 8, !dbg !13212, !tbaa !1527
  %type85 = getelementptr inbounds %struct._xmlAutomataState, ptr %83, i32 0, i32 0, !dbg !13213
  store i32 5, ptr %type85, align 8, !dbg !13214, !tbaa !1984
  br label %if.end86

if.end86:                                         ; preds = %if.end83, %if.then34
  br label %if.end87, !dbg !13215

if.end87:                                         ; preds = %if.end86, %land.lhs.true24, %land.lhs.true20, %land.lhs.true15, %land.lhs.true, %if.end9
  br label %for.inc88, !dbg !13216

for.inc88:                                        ; preds = %if.end87, %if.then8, %if.then3, %if.then
  %84 = load i32, ptr %statenr, align 4, !dbg !13217, !tbaa !1767
  %inc89 = add nsw i32 %84, 1, !dbg !13217
  store i32 %inc89, ptr %statenr, align 4, !dbg !13217, !tbaa !1767
  br label %for.cond, !dbg !13218, !llvm.loop !13219

for.end90:                                        ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !13221
  call void @llvm.lifetime.end.p0(i64 8, ptr %state) #8, !dbg !13221
  call void @llvm.lifetime.end.p0(i64 4, ptr %newto) #8, !dbg !13221
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #8, !dbg !13221
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !13221
  call void @llvm.lifetime.end.p0(i64 4, ptr %statenr) #8, !dbg !13221
  ret void, !dbg !13221
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAReduceEpsilonTransitions(ptr noundef %ctxt, i32 noundef %fromnr, i32 noundef %tonr, i32 noundef %counter) #0 !dbg !13222 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %fromnr.addr = alloca i32, align 4
  %tonr.addr = alloca i32, align 4
  %counter.addr = alloca i32, align 4
  %transnr = alloca i32, align 4
  %from = alloca ptr, align 8
  %to = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %newto = alloca i32, align 4
  %newto74 = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !13226, metadata !DIExpression()), !dbg !13245
  store i32 %fromnr, ptr %fromnr.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %fromnr.addr, metadata !13227, metadata !DIExpression()), !dbg !13246
  store i32 %tonr, ptr %tonr.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %tonr.addr, metadata !13228, metadata !DIExpression()), !dbg !13247
  store i32 %counter, ptr %counter.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %counter.addr, metadata !13229, metadata !DIExpression()), !dbg !13248
  call void @llvm.lifetime.start.p0(i64 4, ptr %transnr) #8, !dbg !13249
  tail call void @llvm.dbg.declare(metadata ptr %transnr, metadata !13230, metadata !DIExpression()), !dbg !13250
  call void @llvm.lifetime.start.p0(i64 8, ptr %from) #8, !dbg !13251
  tail call void @llvm.dbg.declare(metadata ptr %from, metadata !13231, metadata !DIExpression()), !dbg !13252
  call void @llvm.lifetime.start.p0(i64 8, ptr %to) #8, !dbg !13253
  tail call void @llvm.dbg.declare(metadata ptr %to, metadata !13232, metadata !DIExpression()), !dbg !13254
  %0 = load ptr, ptr %ctxt.addr, align 8, !dbg !13255, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlAutomata, ptr %0, i32 0, i32 13, !dbg !13256
  %1 = load ptr, ptr %states, align 8, !dbg !13256, !tbaa !4343
  %2 = load i32, ptr %fromnr.addr, align 4, !dbg !13257, !tbaa !1767
  %idxprom = sext i32 %2 to i64, !dbg !13255
  %arrayidx = getelementptr inbounds ptr, ptr %1, i64 %idxprom, !dbg !13255
  %3 = load ptr, ptr %arrayidx, align 8, !dbg !13255, !tbaa !1527
  store ptr %3, ptr %from, align 8, !dbg !13258, !tbaa !1527
  %4 = load ptr, ptr %from, align 8, !dbg !13259, !tbaa !1527
  %cmp = icmp eq ptr %4, null, !dbg !13261
  br i1 %cmp, label %if.then, label %if.end, !dbg !13262

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13263

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !13264, !tbaa !1527
  %states1 = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 13, !dbg !13265
  %6 = load ptr, ptr %states1, align 8, !dbg !13265, !tbaa !4343
  %7 = load i32, ptr %tonr.addr, align 4, !dbg !13266, !tbaa !1767
  %idxprom2 = sext i32 %7 to i64, !dbg !13264
  %arrayidx3 = getelementptr inbounds ptr, ptr %6, i64 %idxprom2, !dbg !13264
  %8 = load ptr, ptr %arrayidx3, align 8, !dbg !13264, !tbaa !1527
  store ptr %8, ptr %to, align 8, !dbg !13267, !tbaa !1527
  %9 = load ptr, ptr %to, align 8, !dbg !13268, !tbaa !1527
  %cmp4 = icmp eq ptr %9, null, !dbg !13270
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !13271

if.then5:                                         ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13272

if.end6:                                          ; preds = %if.end
  %10 = load ptr, ptr %to, align 8, !dbg !13273, !tbaa !1527
  %mark = getelementptr inbounds %struct._xmlAutomataState, ptr %10, i32 0, i32 1, !dbg !13275
  %11 = load i32, ptr %mark, align 4, !dbg !13275, !tbaa !4306
  %cmp7 = icmp eq i32 %11, 1, !dbg !13276
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !13277

lor.lhs.false:                                    ; preds = %if.end6
  %12 = load ptr, ptr %to, align 8, !dbg !13278, !tbaa !1527
  %mark8 = getelementptr inbounds %struct._xmlAutomataState, ptr %12, i32 0, i32 1, !dbg !13279
  %13 = load i32, ptr %mark8, align 4, !dbg !13279, !tbaa !4306
  %cmp9 = icmp eq i32 %13, 2, !dbg !13280
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !13281

if.then10:                                        ; preds = %lor.lhs.false, %if.end6
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13282

if.end11:                                         ; preds = %lor.lhs.false
  %14 = load ptr, ptr %to, align 8, !dbg !13283, !tbaa !1527
  %mark12 = getelementptr inbounds %struct._xmlAutomataState, ptr %14, i32 0, i32 1, !dbg !13284
  store i32 2, ptr %mark12, align 4, !dbg !13285, !tbaa !4306
  %15 = load ptr, ptr %to, align 8, !dbg !13286, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlAutomataState, ptr %15, i32 0, i32 0, !dbg !13288
  %16 = load i32, ptr %type, align 8, !dbg !13288, !tbaa !1984
  %cmp13 = icmp eq i32 %16, 2, !dbg !13289
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !13290

if.then14:                                        ; preds = %if.end11
  %17 = load ptr, ptr %from, align 8, !dbg !13291, !tbaa !1527
  %type15 = getelementptr inbounds %struct._xmlAutomataState, ptr %17, i32 0, i32 0, !dbg !13293
  store i32 2, ptr %type15, align 8, !dbg !13294, !tbaa !1984
  br label %if.end16, !dbg !13295

if.end16:                                         ; preds = %if.then14, %if.end11
  store i32 0, ptr %transnr, align 4, !dbg !13296, !tbaa !1767
  br label %for.cond, !dbg !13297

for.cond:                                         ; preds = %for.inc, %if.end16
  %18 = load i32, ptr %transnr, align 4, !dbg !13298, !tbaa !1767
  %19 = load ptr, ptr %to, align 8, !dbg !13299, !tbaa !1527
  %nbTrans = getelementptr inbounds %struct._xmlAutomataState, ptr %19, i32 0, i32 6, !dbg !13300
  %20 = load i32, ptr %nbTrans, align 8, !dbg !13300, !tbaa !2052
  %cmp17 = icmp slt i32 %18, %20, !dbg !13301
  br i1 %cmp17, label %for.body, label %for.end, !dbg !13302

for.body:                                         ; preds = %for.cond
  %21 = load ptr, ptr %to, align 8, !dbg !13303, !tbaa !1527
  %trans = getelementptr inbounds %struct._xmlAutomataState, ptr %21, i32 0, i32 7, !dbg !13305
  %22 = load ptr, ptr %trans, align 8, !dbg !13305, !tbaa !2058
  %23 = load i32, ptr %transnr, align 4, !dbg !13306, !tbaa !1767
  %idxprom18 = sext i32 %23 to i64, !dbg !13303
  %arrayidx19 = getelementptr inbounds %struct._xmlRegTrans, ptr %22, i64 %idxprom18, !dbg !13303
  %to20 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx19, i32 0, i32 1, !dbg !13307
  %24 = load i32, ptr %to20, align 8, !dbg !13307, !tbaa !2065
  %cmp21 = icmp slt i32 %24, 0, !dbg !13308
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !13309

if.then22:                                        ; preds = %for.body
  br label %for.inc, !dbg !13310

if.end23:                                         ; preds = %for.body
  %25 = load ptr, ptr %to, align 8, !dbg !13311, !tbaa !1527
  %trans24 = getelementptr inbounds %struct._xmlAutomataState, ptr %25, i32 0, i32 7, !dbg !13312
  %26 = load ptr, ptr %trans24, align 8, !dbg !13312, !tbaa !2058
  %27 = load i32, ptr %transnr, align 4, !dbg !13313, !tbaa !1767
  %idxprom25 = sext i32 %27 to i64, !dbg !13311
  %arrayidx26 = getelementptr inbounds %struct._xmlRegTrans, ptr %26, i64 %idxprom25, !dbg !13311
  %atom = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx26, i32 0, i32 0, !dbg !13314
  %28 = load ptr, ptr %atom, align 8, !dbg !13314, !tbaa !2072
  %cmp27 = icmp eq ptr %28, null, !dbg !13315
  br i1 %cmp27, label %if.then28, label %if.else73, !dbg !13316

if.then28:                                        ; preds = %if.end23
  %29 = load ptr, ptr %to, align 8, !dbg !13317, !tbaa !1527
  %trans29 = getelementptr inbounds %struct._xmlAutomataState, ptr %29, i32 0, i32 7, !dbg !13318
  %30 = load ptr, ptr %trans29, align 8, !dbg !13318, !tbaa !2058
  %31 = load i32, ptr %transnr, align 4, !dbg !13319, !tbaa !1767
  %idxprom30 = sext i32 %31 to i64, !dbg !13317
  %arrayidx31 = getelementptr inbounds %struct._xmlRegTrans, ptr %30, i64 %idxprom30, !dbg !13317
  %to32 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx31, i32 0, i32 1, !dbg !13320
  %32 = load i32, ptr %to32, align 8, !dbg !13320, !tbaa !2065
  %33 = load i32, ptr %fromnr.addr, align 4, !dbg !13321, !tbaa !1767
  %cmp33 = icmp ne i32 %32, %33, !dbg !13322
  br i1 %cmp33, label %if.then34, label %if.end72, !dbg !13323

if.then34:                                        ; preds = %if.then28
  %34 = load ptr, ptr %to, align 8, !dbg !13324, !tbaa !1527
  %trans35 = getelementptr inbounds %struct._xmlAutomataState, ptr %34, i32 0, i32 7, !dbg !13325
  %35 = load ptr, ptr %trans35, align 8, !dbg !13325, !tbaa !2058
  %36 = load i32, ptr %transnr, align 4, !dbg !13326, !tbaa !1767
  %idxprom36 = sext i32 %36 to i64, !dbg !13324
  %arrayidx37 = getelementptr inbounds %struct._xmlRegTrans, ptr %35, i64 %idxprom36, !dbg !13324
  %count = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx37, i32 0, i32 3, !dbg !13327
  %37 = load i32, ptr %count, align 8, !dbg !13327, !tbaa !2077
  %cmp38 = icmp sge i32 %37, 0, !dbg !13328
  br i1 %cmp38, label %if.then39, label %if.else, !dbg !13329

if.then39:                                        ; preds = %if.then34
  call void @llvm.lifetime.start.p0(i64 4, ptr %newto) #8, !dbg !13330
  tail call void @llvm.dbg.declare(metadata ptr %newto, metadata !13233, metadata !DIExpression()), !dbg !13331
  %38 = load ptr, ptr %to, align 8, !dbg !13332, !tbaa !1527
  %trans40 = getelementptr inbounds %struct._xmlAutomataState, ptr %38, i32 0, i32 7, !dbg !13333
  %39 = load ptr, ptr %trans40, align 8, !dbg !13333, !tbaa !2058
  %40 = load i32, ptr %transnr, align 4, !dbg !13334, !tbaa !1767
  %idxprom41 = sext i32 %40 to i64, !dbg !13332
  %arrayidx42 = getelementptr inbounds %struct._xmlRegTrans, ptr %39, i64 %idxprom41, !dbg !13332
  %to43 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx42, i32 0, i32 1, !dbg !13335
  %41 = load i32, ptr %to43, align 8, !dbg !13335, !tbaa !2065
  store i32 %41, ptr %newto, align 4, !dbg !13331, !tbaa !1767
  %42 = load ptr, ptr %ctxt.addr, align 8, !dbg !13336, !tbaa !1527
  %43 = load ptr, ptr %from, align 8, !dbg !13337, !tbaa !1527
  %44 = load ptr, ptr %ctxt.addr, align 8, !dbg !13338, !tbaa !1527
  %states44 = getelementptr inbounds %struct._xmlAutomata, ptr %44, i32 0, i32 13, !dbg !13339
  %45 = load ptr, ptr %states44, align 8, !dbg !13339, !tbaa !4343
  %46 = load i32, ptr %newto, align 4, !dbg !13340, !tbaa !1767
  %idxprom45 = sext i32 %46 to i64, !dbg !13338
  %arrayidx46 = getelementptr inbounds ptr, ptr %45, i64 %idxprom45, !dbg !13338
  %47 = load ptr, ptr %arrayidx46, align 8, !dbg !13338, !tbaa !1527
  %48 = load ptr, ptr %to, align 8, !dbg !13341, !tbaa !1527
  %trans47 = getelementptr inbounds %struct._xmlAutomataState, ptr %48, i32 0, i32 7, !dbg !13342
  %49 = load ptr, ptr %trans47, align 8, !dbg !13342, !tbaa !2058
  %50 = load i32, ptr %transnr, align 4, !dbg !13343, !tbaa !1767
  %idxprom48 = sext i32 %50 to i64, !dbg !13341
  %arrayidx49 = getelementptr inbounds %struct._xmlRegTrans, ptr %49, i64 %idxprom48, !dbg !13341
  %count50 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx49, i32 0, i32 3, !dbg !13344
  %51 = load i32, ptr %count50, align 8, !dbg !13344, !tbaa !2077
  call void @xmlRegStateAddTrans(ptr noundef %42, ptr noundef %43, ptr noundef null, ptr noundef %47, i32 noundef -1, i32 noundef %51), !dbg !13345
  call void @llvm.lifetime.end.p0(i64 4, ptr %newto) #8, !dbg !13346
  br label %if.end71, !dbg !13347

if.else:                                          ; preds = %if.then34
  %52 = load ptr, ptr %to, align 8, !dbg !13348, !tbaa !1527
  %trans51 = getelementptr inbounds %struct._xmlAutomataState, ptr %52, i32 0, i32 7, !dbg !13351
  %53 = load ptr, ptr %trans51, align 8, !dbg !13351, !tbaa !2058
  %54 = load i32, ptr %transnr, align 4, !dbg !13352, !tbaa !1767
  %idxprom52 = sext i32 %54 to i64, !dbg !13348
  %arrayidx53 = getelementptr inbounds %struct._xmlRegTrans, ptr %53, i64 %idxprom52, !dbg !13348
  %counter54 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx53, i32 0, i32 2, !dbg !13353
  %55 = load i32, ptr %counter54, align 4, !dbg !13353, !tbaa !2123
  %cmp55 = icmp sge i32 %55, 0, !dbg !13354
  br i1 %cmp55, label %if.then56, label %if.else65, !dbg !13355

if.then56:                                        ; preds = %if.else
  %56 = load ptr, ptr %ctxt.addr, align 8, !dbg !13356, !tbaa !1527
  %57 = load i32, ptr %fromnr.addr, align 4, !dbg !13358, !tbaa !1767
  %58 = load ptr, ptr %to, align 8, !dbg !13359, !tbaa !1527
  %trans57 = getelementptr inbounds %struct._xmlAutomataState, ptr %58, i32 0, i32 7, !dbg !13360
  %59 = load ptr, ptr %trans57, align 8, !dbg !13360, !tbaa !2058
  %60 = load i32, ptr %transnr, align 4, !dbg !13361, !tbaa !1767
  %idxprom58 = sext i32 %60 to i64, !dbg !13359
  %arrayidx59 = getelementptr inbounds %struct._xmlRegTrans, ptr %59, i64 %idxprom58, !dbg !13359
  %to60 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx59, i32 0, i32 1, !dbg !13362
  %61 = load i32, ptr %to60, align 8, !dbg !13362, !tbaa !2065
  %62 = load ptr, ptr %to, align 8, !dbg !13363, !tbaa !1527
  %trans61 = getelementptr inbounds %struct._xmlAutomataState, ptr %62, i32 0, i32 7, !dbg !13364
  %63 = load ptr, ptr %trans61, align 8, !dbg !13364, !tbaa !2058
  %64 = load i32, ptr %transnr, align 4, !dbg !13365, !tbaa !1767
  %idxprom62 = sext i32 %64 to i64, !dbg !13363
  %arrayidx63 = getelementptr inbounds %struct._xmlRegTrans, ptr %63, i64 %idxprom62, !dbg !13363
  %counter64 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx63, i32 0, i32 2, !dbg !13366
  %65 = load i32, ptr %counter64, align 4, !dbg !13366, !tbaa !2123
  call void @xmlFAReduceEpsilonTransitions(ptr noundef %56, i32 noundef %57, i32 noundef %61, i32 noundef %65), !dbg !13367
  br label %if.end70, !dbg !13368

if.else65:                                        ; preds = %if.else
  %66 = load ptr, ptr %ctxt.addr, align 8, !dbg !13369, !tbaa !1527
  %67 = load i32, ptr %fromnr.addr, align 4, !dbg !13371, !tbaa !1767
  %68 = load ptr, ptr %to, align 8, !dbg !13372, !tbaa !1527
  %trans66 = getelementptr inbounds %struct._xmlAutomataState, ptr %68, i32 0, i32 7, !dbg !13373
  %69 = load ptr, ptr %trans66, align 8, !dbg !13373, !tbaa !2058
  %70 = load i32, ptr %transnr, align 4, !dbg !13374, !tbaa !1767
  %idxprom67 = sext i32 %70 to i64, !dbg !13372
  %arrayidx68 = getelementptr inbounds %struct._xmlRegTrans, ptr %69, i64 %idxprom67, !dbg !13372
  %to69 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx68, i32 0, i32 1, !dbg !13375
  %71 = load i32, ptr %to69, align 8, !dbg !13375, !tbaa !2065
  %72 = load i32, ptr %counter.addr, align 4, !dbg !13376, !tbaa !1767
  call void @xmlFAReduceEpsilonTransitions(ptr noundef %66, i32 noundef %67, i32 noundef %71, i32 noundef %72), !dbg !13377
  br label %if.end70

if.end70:                                         ; preds = %if.else65, %if.then56
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then39
  br label %if.end72, !dbg !13378

if.end72:                                         ; preds = %if.end71, %if.then28
  br label %if.end105, !dbg !13379

if.else73:                                        ; preds = %if.end23
  call void @llvm.lifetime.start.p0(i64 4, ptr %newto74) #8, !dbg !13380
  tail call void @llvm.dbg.declare(metadata ptr %newto74, metadata !13243, metadata !DIExpression()), !dbg !13381
  %73 = load ptr, ptr %to, align 8, !dbg !13382, !tbaa !1527
  %trans75 = getelementptr inbounds %struct._xmlAutomataState, ptr %73, i32 0, i32 7, !dbg !13383
  %74 = load ptr, ptr %trans75, align 8, !dbg !13383, !tbaa !2058
  %75 = load i32, ptr %transnr, align 4, !dbg !13384, !tbaa !1767
  %idxprom76 = sext i32 %75 to i64, !dbg !13382
  %arrayidx77 = getelementptr inbounds %struct._xmlRegTrans, ptr %74, i64 %idxprom76, !dbg !13382
  %to78 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx77, i32 0, i32 1, !dbg !13385
  %76 = load i32, ptr %to78, align 8, !dbg !13385, !tbaa !2065
  store i32 %76, ptr %newto74, align 4, !dbg !13381, !tbaa !1767
  %77 = load ptr, ptr %to, align 8, !dbg !13386, !tbaa !1527
  %trans79 = getelementptr inbounds %struct._xmlAutomataState, ptr %77, i32 0, i32 7, !dbg !13388
  %78 = load ptr, ptr %trans79, align 8, !dbg !13388, !tbaa !2058
  %79 = load i32, ptr %transnr, align 4, !dbg !13389, !tbaa !1767
  %idxprom80 = sext i32 %79 to i64, !dbg !13386
  %arrayidx81 = getelementptr inbounds %struct._xmlRegTrans, ptr %78, i64 %idxprom80, !dbg !13386
  %counter82 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx81, i32 0, i32 2, !dbg !13390
  %80 = load i32, ptr %counter82, align 4, !dbg !13390, !tbaa !2123
  %cmp83 = icmp sge i32 %80, 0, !dbg !13391
  br i1 %cmp83, label %if.then84, label %if.else96, !dbg !13392

if.then84:                                        ; preds = %if.else73
  %81 = load ptr, ptr %ctxt.addr, align 8, !dbg !13393, !tbaa !1527
  %82 = load ptr, ptr %from, align 8, !dbg !13395, !tbaa !1527
  %83 = load ptr, ptr %to, align 8, !dbg !13396, !tbaa !1527
  %trans85 = getelementptr inbounds %struct._xmlAutomataState, ptr %83, i32 0, i32 7, !dbg !13397
  %84 = load ptr, ptr %trans85, align 8, !dbg !13397, !tbaa !2058
  %85 = load i32, ptr %transnr, align 4, !dbg !13398, !tbaa !1767
  %idxprom86 = sext i32 %85 to i64, !dbg !13396
  %arrayidx87 = getelementptr inbounds %struct._xmlRegTrans, ptr %84, i64 %idxprom86, !dbg !13396
  %atom88 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx87, i32 0, i32 0, !dbg !13399
  %86 = load ptr, ptr %atom88, align 8, !dbg !13399, !tbaa !2072
  %87 = load ptr, ptr %ctxt.addr, align 8, !dbg !13400, !tbaa !1527
  %states89 = getelementptr inbounds %struct._xmlAutomata, ptr %87, i32 0, i32 13, !dbg !13401
  %88 = load ptr, ptr %states89, align 8, !dbg !13401, !tbaa !4343
  %89 = load i32, ptr %newto74, align 4, !dbg !13402, !tbaa !1767
  %idxprom90 = sext i32 %89 to i64, !dbg !13400
  %arrayidx91 = getelementptr inbounds ptr, ptr %88, i64 %idxprom90, !dbg !13400
  %90 = load ptr, ptr %arrayidx91, align 8, !dbg !13400, !tbaa !1527
  %91 = load ptr, ptr %to, align 8, !dbg !13403, !tbaa !1527
  %trans92 = getelementptr inbounds %struct._xmlAutomataState, ptr %91, i32 0, i32 7, !dbg !13404
  %92 = load ptr, ptr %trans92, align 8, !dbg !13404, !tbaa !2058
  %93 = load i32, ptr %transnr, align 4, !dbg !13405, !tbaa !1767
  %idxprom93 = sext i32 %93 to i64, !dbg !13403
  %arrayidx94 = getelementptr inbounds %struct._xmlRegTrans, ptr %92, i64 %idxprom93, !dbg !13403
  %counter95 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx94, i32 0, i32 2, !dbg !13406
  %94 = load i32, ptr %counter95, align 4, !dbg !13406, !tbaa !2123
  call void @xmlRegStateAddTrans(ptr noundef %81, ptr noundef %82, ptr noundef %86, ptr noundef %90, i32 noundef %94, i32 noundef -1), !dbg !13407
  br label %if.end104, !dbg !13408

if.else96:                                        ; preds = %if.else73
  %95 = load ptr, ptr %ctxt.addr, align 8, !dbg !13409, !tbaa !1527
  %96 = load ptr, ptr %from, align 8, !dbg !13411, !tbaa !1527
  %97 = load ptr, ptr %to, align 8, !dbg !13412, !tbaa !1527
  %trans97 = getelementptr inbounds %struct._xmlAutomataState, ptr %97, i32 0, i32 7, !dbg !13413
  %98 = load ptr, ptr %trans97, align 8, !dbg !13413, !tbaa !2058
  %99 = load i32, ptr %transnr, align 4, !dbg !13414, !tbaa !1767
  %idxprom98 = sext i32 %99 to i64, !dbg !13412
  %arrayidx99 = getelementptr inbounds %struct._xmlRegTrans, ptr %98, i64 %idxprom98, !dbg !13412
  %atom100 = getelementptr inbounds %struct._xmlRegTrans, ptr %arrayidx99, i32 0, i32 0, !dbg !13415
  %100 = load ptr, ptr %atom100, align 8, !dbg !13415, !tbaa !2072
  %101 = load ptr, ptr %ctxt.addr, align 8, !dbg !13416, !tbaa !1527
  %states101 = getelementptr inbounds %struct._xmlAutomata, ptr %101, i32 0, i32 13, !dbg !13417
  %102 = load ptr, ptr %states101, align 8, !dbg !13417, !tbaa !4343
  %103 = load i32, ptr %newto74, align 4, !dbg !13418, !tbaa !1767
  %idxprom102 = sext i32 %103 to i64, !dbg !13416
  %arrayidx103 = getelementptr inbounds ptr, ptr %102, i64 %idxprom102, !dbg !13416
  %104 = load ptr, ptr %arrayidx103, align 8, !dbg !13416, !tbaa !1527
  %105 = load i32, ptr %counter.addr, align 4, !dbg !13419, !tbaa !1767
  call void @xmlRegStateAddTrans(ptr noundef %95, ptr noundef %96, ptr noundef %100, ptr noundef %104, i32 noundef %105, i32 noundef -1), !dbg !13420
  br label %if.end104

if.end104:                                        ; preds = %if.else96, %if.then84
  call void @llvm.lifetime.end.p0(i64 4, ptr %newto74) #8, !dbg !13421
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end72
  br label %for.inc, !dbg !13422

for.inc:                                          ; preds = %if.end105, %if.then22
  %106 = load i32, ptr %transnr, align 4, !dbg !13423, !tbaa !1767
  %inc = add nsw i32 %106, 1, !dbg !13423
  store i32 %inc, ptr %transnr, align 4, !dbg !13423, !tbaa !1767
  br label %for.cond, !dbg !13424, !llvm.loop !13425

for.end:                                          ; preds = %for.cond
  %107 = load ptr, ptr %to, align 8, !dbg !13427, !tbaa !1527
  %mark106 = getelementptr inbounds %struct._xmlAutomataState, ptr %107, i32 0, i32 1, !dbg !13428
  store i32 0, ptr %mark106, align 4, !dbg !13429, !tbaa !4306
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !13430
  br label %cleanup, !dbg !13430

cleanup:                                          ; preds = %for.end, %if.then10, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %to) #8, !dbg !13430
  call void @llvm.lifetime.end.p0(i64 8, ptr %from) #8, !dbg !13430
  call void @llvm.lifetime.end.p0(i64 4, ptr %transnr) #8, !dbg !13430
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !13430

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal ptr @xmlRegCalloc2(i64 noundef %dim1, i64 noundef %dim2, i64 noundef %elemSize) #0 !dbg !13431 {
entry:
  %retval = alloca ptr, align 8
  %dim1.addr = alloca i64, align 8
  %dim2.addr = alloca i64, align 8
  %elemSize.addr = alloca i64, align 8
  %totalSize = alloca i64, align 8
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i64 %dim1, ptr %dim1.addr, align 8, !tbaa !13440
  tail call void @llvm.dbg.declare(metadata ptr %dim1.addr, metadata !13435, metadata !DIExpression()), !dbg !13442
  store i64 %dim2, ptr %dim2.addr, align 8, !tbaa !13440
  tail call void @llvm.dbg.declare(metadata ptr %dim2.addr, metadata !13436, metadata !DIExpression()), !dbg !13443
  store i64 %elemSize, ptr %elemSize.addr, align 8, !tbaa !13440
  tail call void @llvm.dbg.declare(metadata ptr %elemSize.addr, metadata !13437, metadata !DIExpression()), !dbg !13444
  call void @llvm.lifetime.start.p0(i64 8, ptr %totalSize) #8, !dbg !13445
  tail call void @llvm.dbg.declare(metadata ptr %totalSize, metadata !13438, metadata !DIExpression()), !dbg !13446
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #8, !dbg !13447
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !13439, metadata !DIExpression()), !dbg !13448
  %0 = load i64, ptr %dim1.addr, align 8, !dbg !13449, !tbaa !13440
  %1 = load i64, ptr %dim2.addr, align 8, !dbg !13451, !tbaa !13440
  %div = udiv i64 -1, %1, !dbg !13452
  %2 = load i64, ptr %elemSize.addr, align 8, !dbg !13453, !tbaa !13440
  %div1 = udiv i64 %div, %2, !dbg !13454
  %cmp = icmp ugt i64 %0, %div1, !dbg !13455
  br i1 %cmp, label %if.then, label %if.end, !dbg !13456

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !13457
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13457

if.end:                                           ; preds = %entry
  %3 = load i64, ptr %dim1.addr, align 8, !dbg !13458, !tbaa !13440
  %4 = load i64, ptr %dim2.addr, align 8, !dbg !13459, !tbaa !13440
  %mul = mul i64 %3, %4, !dbg !13460
  %5 = load i64, ptr %elemSize.addr, align 8, !dbg !13461, !tbaa !13440
  %mul2 = mul i64 %mul, %5, !dbg !13462
  store i64 %mul2, ptr %totalSize, align 8, !dbg !13463, !tbaa !13440
  %6 = load ptr, ptr @xmlMalloc, align 8, !dbg !13464, !tbaa !1527
  %7 = load i64, ptr %totalSize, align 8, !dbg !13465, !tbaa !13440
  %call = call ptr %6(i64 noundef %7), !dbg !13464
  store ptr %call, ptr %ret, align 8, !dbg !13466, !tbaa !1527
  %8 = load ptr, ptr %ret, align 8, !dbg !13467, !tbaa !1527
  %cmp3 = icmp ne ptr %8, null, !dbg !13469
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !13470

if.then4:                                         ; preds = %if.end
  %9 = load ptr, ptr %ret, align 8, !dbg !13471, !tbaa !1527
  %10 = load i64, ptr %totalSize, align 8, !dbg !13472, !tbaa !13440
  call void @llvm.memset.p0.i64(ptr align 1 %9, i8 0, i64 %10, i1 false), !dbg !13473
  br label %if.end5, !dbg !13473

if.end5:                                          ; preds = %if.then4, %if.end
  %11 = load ptr, ptr %ret, align 8, !dbg !13474, !tbaa !1527
  store ptr %11, ptr %retval, align 8, !dbg !13475
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13475

cleanup:                                          ; preds = %if.end5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #8, !dbg !13476
  call void @llvm.lifetime.end.p0(i64 8, ptr %totalSize) #8, !dbg !13476
  %12 = load ptr, ptr %retval, align 8, !dbg !13476
  ret ptr %12, !dbg !13476
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlRegCheckCharacter(ptr noundef %atom, i32 noundef %codepoint) #0 !dbg !13477 {
entry:
  %retval = alloca i32, align 4
  %atom.addr = alloca ptr, align 8
  %codepoint.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %range = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %accept = alloca i32, align 4
  store ptr %atom, ptr %atom.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom.addr, metadata !13481, metadata !DIExpression()), !dbg !13489
  store i32 %codepoint, ptr %codepoint.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %codepoint.addr, metadata !13482, metadata !DIExpression()), !dbg !13490
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !13491
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !13483, metadata !DIExpression()), !dbg !13492
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !13491
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !13484, metadata !DIExpression()), !dbg !13493
  store i32 0, ptr %ret, align 4, !dbg !13493, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 8, ptr %range) #8, !dbg !13494
  tail call void @llvm.dbg.declare(metadata ptr %range, metadata !13485, metadata !DIExpression()), !dbg !13495
  %0 = load ptr, ptr %atom.addr, align 8, !dbg !13496, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !13498
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13499

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, ptr %codepoint.addr, align 4, !dbg !13500, !tbaa !1767
  %cmp1 = icmp slt i32 %1, 256, !dbg !13500
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !13501

cond.true:                                        ; preds = %lor.lhs.false
  %2 = load i32, ptr %codepoint.addr, align 4, !dbg !13500, !tbaa !1767
  %cmp2 = icmp sle i32 9, %2, !dbg !13500
  br i1 %cmp2, label %land.lhs.true, label %lor.lhs.false4, !dbg !13500

land.lhs.true:                                    ; preds = %cond.true
  %3 = load i32, ptr %codepoint.addr, align 4, !dbg !13500, !tbaa !1767
  %cmp3 = icmp sle i32 %3, 10, !dbg !13500
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !13500

lor.lhs.false4:                                   ; preds = %land.lhs.true, %cond.true
  %4 = load i32, ptr %codepoint.addr, align 4, !dbg !13500, !tbaa !1767
  %cmp5 = icmp eq i32 %4, 13, !dbg !13500
  br i1 %cmp5, label %if.end, label %lor.lhs.false6, !dbg !13500

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %5 = load i32, ptr %codepoint.addr, align 4, !dbg !13500, !tbaa !1767
  %cmp7 = icmp sle i32 32, %5, !dbg !13500
  br i1 %cmp7, label %if.end, label %if.then, !dbg !13500

cond.false:                                       ; preds = %lor.lhs.false
  %6 = load i32, ptr %codepoint.addr, align 4, !dbg !13500, !tbaa !1767
  %cmp8 = icmp sle i32 256, %6, !dbg !13500
  br i1 %cmp8, label %land.lhs.true9, label %lor.lhs.false11, !dbg !13500

land.lhs.true9:                                   ; preds = %cond.false
  %7 = load i32, ptr %codepoint.addr, align 4, !dbg !13500, !tbaa !1767
  %cmp10 = icmp sle i32 %7, 55295, !dbg !13500
  br i1 %cmp10, label %if.end, label %lor.lhs.false11, !dbg !13500

lor.lhs.false11:                                  ; preds = %land.lhs.true9, %cond.false
  %8 = load i32, ptr %codepoint.addr, align 4, !dbg !13500, !tbaa !1767
  %cmp12 = icmp sle i32 57344, %8, !dbg !13500
  br i1 %cmp12, label %land.lhs.true13, label %lor.lhs.false15, !dbg !13500

land.lhs.true13:                                  ; preds = %lor.lhs.false11
  %9 = load i32, ptr %codepoint.addr, align 4, !dbg !13500, !tbaa !1767
  %cmp14 = icmp sle i32 %9, 65533, !dbg !13500
  br i1 %cmp14, label %if.end, label %lor.lhs.false15, !dbg !13500

lor.lhs.false15:                                  ; preds = %land.lhs.true13, %lor.lhs.false11
  %10 = load i32, ptr %codepoint.addr, align 4, !dbg !13500, !tbaa !1767
  %cmp16 = icmp sle i32 65536, %10, !dbg !13500
  br i1 %cmp16, label %land.lhs.true17, label %if.then, !dbg !13500

land.lhs.true17:                                  ; preds = %lor.lhs.false15
  %11 = load i32, ptr %codepoint.addr, align 4, !dbg !13500, !tbaa !1767
  %cmp18 = icmp sle i32 %11, 1114111, !dbg !13500
  br i1 %cmp18, label %if.end, label %if.then, !dbg !13501

if.then:                                          ; preds = %land.lhs.true17, %lor.lhs.false15, %lor.lhs.false6, %entry
  store i32 -1, ptr %retval, align 4, !dbg !13502
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !13502

if.end:                                           ; preds = %land.lhs.true17, %land.lhs.true13, %land.lhs.true9, %lor.lhs.false6, %lor.lhs.false4, %land.lhs.true
  %12 = load ptr, ptr %atom.addr, align 8, !dbg !13503, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlRegAtom, ptr %12, i32 0, i32 1, !dbg !13504
  %13 = load i32, ptr %type, align 4, !dbg !13504, !tbaa !3988
  switch i32 %13, label %sw.epilog [
    i32 4, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb19
    i32 3, label %sw.bb22
    i32 5, label %sw.bb57
    i32 6, label %sw.bb59
    i32 7, label %sw.bb59
    i32 8, label %sw.bb59
    i32 9, label %sw.bb59
    i32 10, label %sw.bb59
    i32 11, label %sw.bb59
    i32 12, label %sw.bb59
    i32 13, label %sw.bb59
    i32 14, label %sw.bb59
    i32 15, label %sw.bb59
    i32 16, label %sw.bb59
    i32 100, label %sw.bb59
    i32 101, label %sw.bb59
    i32 102, label %sw.bb59
    i32 103, label %sw.bb59
    i32 104, label %sw.bb59
    i32 105, label %sw.bb59
    i32 106, label %sw.bb59
    i32 107, label %sw.bb59
    i32 108, label %sw.bb59
    i32 109, label %sw.bb59
    i32 110, label %sw.bb59
    i32 111, label %sw.bb59
    i32 112, label %sw.bb59
    i32 113, label %sw.bb59
    i32 114, label %sw.bb59
    i32 115, label %sw.bb59
    i32 116, label %sw.bb59
    i32 117, label %sw.bb59
    i32 118, label %sw.bb59
    i32 119, label %sw.bb59
    i32 120, label %sw.bb59
    i32 121, label %sw.bb59
    i32 122, label %sw.bb59
    i32 123, label %sw.bb59
    i32 124, label %sw.bb59
    i32 125, label %sw.bb59
    i32 126, label %sw.bb59
    i32 127, label %sw.bb59
    i32 128, label %sw.bb59
    i32 129, label %sw.bb59
    i32 130, label %sw.bb59
    i32 131, label %sw.bb59
    i32 132, label %sw.bb59
    i32 133, label %sw.bb59
    i32 134, label %sw.bb59
    i32 135, label %sw.bb59
    i32 136, label %sw.bb59
  ], !dbg !13505

sw.bb:                                            ; preds = %if.end, %if.end
  store i32 -1, ptr %retval, align 4, !dbg !13506
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !13506

sw.bb19:                                          ; preds = %if.end
  %14 = load i32, ptr %codepoint.addr, align 4, !dbg !13507, !tbaa !1767
  %15 = load ptr, ptr %atom.addr, align 8, !dbg !13508, !tbaa !1527
  %codepoint20 = getelementptr inbounds %struct._xmlRegAtom, ptr %15, i32 0, i32 8, !dbg !13509
  %16 = load i32, ptr %codepoint20, align 4, !dbg !13509, !tbaa !4022
  %cmp21 = icmp eq i32 %14, %16, !dbg !13510
  %conv = zext i1 %cmp21 to i32, !dbg !13510
  store i32 %conv, ptr %retval, align 4, !dbg !13511
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !13511

sw.bb22:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %accept) #8, !dbg !13512
  tail call void @llvm.dbg.declare(metadata ptr %accept, metadata !13486, metadata !DIExpression()), !dbg !13513
  store i32 0, ptr %accept, align 4, !dbg !13513, !tbaa !1767
  store i32 0, ptr %i, align 4, !dbg !13514, !tbaa !1767
  br label %for.cond, !dbg !13516

for.cond:                                         ; preds = %for.inc, %sw.bb22
  %17 = load i32, ptr %i, align 4, !dbg !13517, !tbaa !1767
  %18 = load ptr, ptr %atom.addr, align 8, !dbg !13519, !tbaa !1527
  %nbRanges = getelementptr inbounds %struct._xmlRegAtom, ptr %18, i32 0, i32 13, !dbg !13520
  %19 = load i32, ptr %nbRanges, align 4, !dbg !13520, !tbaa !4033
  %cmp23 = icmp slt i32 %17, %19, !dbg !13521
  br i1 %cmp23, label %for.body, label %for.end, !dbg !13522

for.body:                                         ; preds = %for.cond
  %20 = load ptr, ptr %atom.addr, align 8, !dbg !13523, !tbaa !1527
  %ranges = getelementptr inbounds %struct._xmlRegAtom, ptr %20, i32 0, i32 14, !dbg !13525
  %21 = load ptr, ptr %ranges, align 8, !dbg !13525, !tbaa !4047
  %22 = load i32, ptr %i, align 4, !dbg !13526, !tbaa !1767
  %idxprom = sext i32 %22 to i64, !dbg !13523
  %arrayidx = getelementptr inbounds ptr, ptr %21, i64 %idxprom, !dbg !13523
  %23 = load ptr, ptr %arrayidx, align 8, !dbg !13523, !tbaa !1527
  store ptr %23, ptr %range, align 8, !dbg !13527, !tbaa !1527
  %24 = load ptr, ptr %range, align 8, !dbg !13528, !tbaa !1527
  %neg = getelementptr inbounds %struct._xmlRegRange, ptr %24, i32 0, i32 0, !dbg !13530
  %25 = load i32, ptr %neg, align 8, !dbg !13530, !tbaa !10401
  %cmp25 = icmp eq i32 %25, 2, !dbg !13531
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !13532

if.then27:                                        ; preds = %for.body
  %26 = load ptr, ptr %range, align 8, !dbg !13533, !tbaa !1527
  %type28 = getelementptr inbounds %struct._xmlRegRange, ptr %26, i32 0, i32 1, !dbg !13535
  %27 = load i32, ptr %type28, align 4, !dbg !13535, !tbaa !10409
  %28 = load i32, ptr %codepoint.addr, align 4, !dbg !13536, !tbaa !1767
  %29 = load ptr, ptr %range, align 8, !dbg !13537, !tbaa !1527
  %start = getelementptr inbounds %struct._xmlRegRange, ptr %29, i32 0, i32 2, !dbg !13538
  %30 = load i32, ptr %start, align 8, !dbg !13538, !tbaa !10414
  %31 = load ptr, ptr %range, align 8, !dbg !13539, !tbaa !1527
  %end = getelementptr inbounds %struct._xmlRegRange, ptr %31, i32 0, i32 3, !dbg !13540
  %32 = load i32, ptr %end, align 4, !dbg !13540, !tbaa !10417
  %33 = load ptr, ptr %range, align 8, !dbg !13541, !tbaa !1527
  %blockName = getelementptr inbounds %struct._xmlRegRange, ptr %33, i32 0, i32 4, !dbg !13542
  %34 = load ptr, ptr %blockName, align 8, !dbg !13542, !tbaa !12330
  %call = call i32 @xmlRegCheckCharacterRange(i32 noundef %27, i32 noundef %28, i32 noundef 0, i32 noundef %30, i32 noundef %32, ptr noundef %34), !dbg !13543
  store i32 %call, ptr %ret, align 4, !dbg !13544, !tbaa !1767
  %35 = load i32, ptr %ret, align 4, !dbg !13545, !tbaa !1767
  %cmp29 = icmp ne i32 %35, 0, !dbg !13547
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !13548

if.then31:                                        ; preds = %if.then27
  store i32 0, ptr %retval, align 4, !dbg !13549
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13549

if.end32:                                         ; preds = %if.then27
  br label %if.end56, !dbg !13550

if.else:                                          ; preds = %for.body
  %36 = load ptr, ptr %range, align 8, !dbg !13551, !tbaa !1527
  %neg33 = getelementptr inbounds %struct._xmlRegRange, ptr %36, i32 0, i32 0, !dbg !13553
  %37 = load i32, ptr %neg33, align 8, !dbg !13553, !tbaa !10401
  %tobool = icmp ne i32 %37, 0, !dbg !13551
  br i1 %tobool, label %if.then34, label %if.else45, !dbg !13554

if.then34:                                        ; preds = %if.else
  %38 = load ptr, ptr %range, align 8, !dbg !13555, !tbaa !1527
  %type35 = getelementptr inbounds %struct._xmlRegRange, ptr %38, i32 0, i32 1, !dbg !13557
  %39 = load i32, ptr %type35, align 4, !dbg !13557, !tbaa !10409
  %40 = load i32, ptr %codepoint.addr, align 4, !dbg !13558, !tbaa !1767
  %41 = load ptr, ptr %range, align 8, !dbg !13559, !tbaa !1527
  %start36 = getelementptr inbounds %struct._xmlRegRange, ptr %41, i32 0, i32 2, !dbg !13560
  %42 = load i32, ptr %start36, align 8, !dbg !13560, !tbaa !10414
  %43 = load ptr, ptr %range, align 8, !dbg !13561, !tbaa !1527
  %end37 = getelementptr inbounds %struct._xmlRegRange, ptr %43, i32 0, i32 3, !dbg !13562
  %44 = load i32, ptr %end37, align 4, !dbg !13562, !tbaa !10417
  %45 = load ptr, ptr %range, align 8, !dbg !13563, !tbaa !1527
  %blockName38 = getelementptr inbounds %struct._xmlRegRange, ptr %45, i32 0, i32 4, !dbg !13564
  %46 = load ptr, ptr %blockName38, align 8, !dbg !13564, !tbaa !12330
  %call39 = call i32 @xmlRegCheckCharacterRange(i32 noundef %39, i32 noundef %40, i32 noundef 0, i32 noundef %42, i32 noundef %44, ptr noundef %46), !dbg !13565
  store i32 %call39, ptr %ret, align 4, !dbg !13566, !tbaa !1767
  %47 = load i32, ptr %ret, align 4, !dbg !13567, !tbaa !1767
  %cmp40 = icmp eq i32 %47, 0, !dbg !13569
  br i1 %cmp40, label %if.then42, label %if.else43, !dbg !13570

if.then42:                                        ; preds = %if.then34
  store i32 1, ptr %accept, align 4, !dbg !13571, !tbaa !1767
  br label %if.end44, !dbg !13572

if.else43:                                        ; preds = %if.then34
  store i32 0, ptr %retval, align 4, !dbg !13573
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13573

if.end44:                                         ; preds = %if.then42
  br label %if.end55, !dbg !13574

if.else45:                                        ; preds = %if.else
  %48 = load ptr, ptr %range, align 8, !dbg !13575, !tbaa !1527
  %type46 = getelementptr inbounds %struct._xmlRegRange, ptr %48, i32 0, i32 1, !dbg !13577
  %49 = load i32, ptr %type46, align 4, !dbg !13577, !tbaa !10409
  %50 = load i32, ptr %codepoint.addr, align 4, !dbg !13578, !tbaa !1767
  %51 = load ptr, ptr %range, align 8, !dbg !13579, !tbaa !1527
  %start47 = getelementptr inbounds %struct._xmlRegRange, ptr %51, i32 0, i32 2, !dbg !13580
  %52 = load i32, ptr %start47, align 8, !dbg !13580, !tbaa !10414
  %53 = load ptr, ptr %range, align 8, !dbg !13581, !tbaa !1527
  %end48 = getelementptr inbounds %struct._xmlRegRange, ptr %53, i32 0, i32 3, !dbg !13582
  %54 = load i32, ptr %end48, align 4, !dbg !13582, !tbaa !10417
  %55 = load ptr, ptr %range, align 8, !dbg !13583, !tbaa !1527
  %blockName49 = getelementptr inbounds %struct._xmlRegRange, ptr %55, i32 0, i32 4, !dbg !13584
  %56 = load ptr, ptr %blockName49, align 8, !dbg !13584, !tbaa !12330
  %call50 = call i32 @xmlRegCheckCharacterRange(i32 noundef %49, i32 noundef %50, i32 noundef 0, i32 noundef %52, i32 noundef %54, ptr noundef %56), !dbg !13585
  store i32 %call50, ptr %ret, align 4, !dbg !13586, !tbaa !1767
  %57 = load i32, ptr %ret, align 4, !dbg !13587, !tbaa !1767
  %cmp51 = icmp ne i32 %57, 0, !dbg !13589
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !13590

if.then53:                                        ; preds = %if.else45
  store i32 1, ptr %accept, align 4, !dbg !13591, !tbaa !1767
  br label %if.end54, !dbg !13592

if.end54:                                         ; preds = %if.then53, %if.else45
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end44
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end32
  br label %for.inc, !dbg !13593

for.inc:                                          ; preds = %if.end56
  %58 = load i32, ptr %i, align 4, !dbg !13594, !tbaa !1767
  %inc = add nsw i32 %58, 1, !dbg !13594
  store i32 %inc, ptr %i, align 4, !dbg !13594, !tbaa !1767
  br label %for.cond, !dbg !13595, !llvm.loop !13596

for.end:                                          ; preds = %for.cond
  %59 = load i32, ptr %accept, align 4, !dbg !13598, !tbaa !1767
  store i32 %59, ptr %retval, align 4, !dbg !13599
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13599

cleanup:                                          ; preds = %for.end, %if.else43, %if.then31
  call void @llvm.lifetime.end.p0(i64 4, ptr %accept) #8, !dbg !13600
  br label %cleanup67

sw.bb57:                                          ; preds = %if.end
  %call58 = call i32 (ptr, ...) @printf(ptr noundef @.str.131), !dbg !13601
  store i32 -1, ptr %retval, align 4, !dbg !13602
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !13602

sw.bb59:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %60 = load ptr, ptr %atom.addr, align 8, !dbg !13603, !tbaa !1527
  %type60 = getelementptr inbounds %struct._xmlRegAtom, ptr %60, i32 0, i32 1, !dbg !13604
  %61 = load i32, ptr %type60, align 4, !dbg !13604, !tbaa !3988
  %62 = load i32, ptr %codepoint.addr, align 4, !dbg !13605, !tbaa !1767
  %63 = load ptr, ptr %atom.addr, align 8, !dbg !13606, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %63, i32 0, i32 5, !dbg !13607
  %64 = load ptr, ptr %valuep, align 8, !dbg !13607, !tbaa !2159
  %call61 = call i32 @xmlRegCheckCharacterRange(i32 noundef %61, i32 noundef %62, i32 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef %64), !dbg !13608
  store i32 %call61, ptr %ret, align 4, !dbg !13609, !tbaa !1767
  %65 = load ptr, ptr %atom.addr, align 8, !dbg !13610, !tbaa !1527
  %neg62 = getelementptr inbounds %struct._xmlRegAtom, ptr %65, i32 0, i32 7, !dbg !13612
  %66 = load i32, ptr %neg62, align 8, !dbg !13612, !tbaa !2323
  %tobool63 = icmp ne i32 %66, 0, !dbg !13610
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !13613

if.then64:                                        ; preds = %sw.bb59
  %67 = load i32, ptr %ret, align 4, !dbg !13614, !tbaa !1767
  %tobool65 = icmp ne i32 %67, 0, !dbg !13615
  %lnot = xor i1 %tobool65, true, !dbg !13615
  %lnot.ext = zext i1 %lnot to i32, !dbg !13615
  store i32 %lnot.ext, ptr %ret, align 4, !dbg !13616, !tbaa !1767
  br label %if.end66, !dbg !13617

if.end66:                                         ; preds = %if.then64, %sw.bb59
  br label %sw.epilog, !dbg !13618

sw.epilog:                                        ; preds = %if.end, %if.end66
  %68 = load i32, ptr %ret, align 4, !dbg !13619, !tbaa !1767
  store i32 %68, ptr %retval, align 4, !dbg !13620
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !13620

cleanup67:                                        ; preds = %sw.epilog, %sw.bb57, %cleanup, %sw.bb19, %sw.bb, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %range) #8, !dbg !13621
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !13621
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !13621
  %69 = load i32, ptr %retval, align 4, !dbg !13621
  ret i32 %69, !dbg !13621
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlRegCheckCharacterRange(i32 noundef %type, i32 noundef %codepoint, i32 noundef %neg, i32 noundef %start, i32 noundef %end, ptr noundef %blockName) #0 !dbg !13622 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %codepoint.addr = alloca i32, align 4
  %neg.addr = alloca i32, align 4
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %blockName.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %type, ptr %type.addr, align 4, !tbaa !2932
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !13626, metadata !DIExpression()), !dbg !13633
  store i32 %codepoint, ptr %codepoint.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %codepoint.addr, metadata !13627, metadata !DIExpression()), !dbg !13634
  store i32 %neg, ptr %neg.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %neg.addr, metadata !13628, metadata !DIExpression()), !dbg !13635
  store i32 %start, ptr %start.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %start.addr, metadata !13629, metadata !DIExpression()), !dbg !13636
  store i32 %end, ptr %end.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %end.addr, metadata !13630, metadata !DIExpression()), !dbg !13637
  store ptr %blockName, ptr %blockName.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %blockName.addr, metadata !13631, metadata !DIExpression()), !dbg !13638
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !13639
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !13632, metadata !DIExpression()), !dbg !13640
  store i32 0, ptr %ret, align 4, !dbg !13640, !tbaa !1767
  %0 = load i32, ptr %type.addr, align 4, !dbg !13641, !tbaa !2932
  switch i32 %0, label %sw.epilog [
    i32 5, label %sw.bb
    i32 4, label %sw.bb
    i32 3, label %sw.bb
    i32 1, label %sw.bb
    i32 6, label %sw.bb1
    i32 2, label %sw.bb3
    i32 8, label %sw.bb9
    i32 7, label %sw.bb10
    i32 10, label %sw.bb16
    i32 9, label %sw.bb20
    i32 12, label %sw.bb58
    i32 11, label %sw.bb62
    i32 14, label %sw.bb130
    i32 13, label %sw.bb134
    i32 15, label %sw.bb136
    i32 16, label %sw.bb140
    i32 100, label %sw.bb150
    i32 101, label %sw.bb152
    i32 102, label %sw.bb154
    i32 103, label %sw.bb156
    i32 104, label %sw.bb158
    i32 105, label %sw.bb160
    i32 106, label %sw.bb162
    i32 107, label %sw.bb164
    i32 108, label %sw.bb166
    i32 109, label %sw.bb168
    i32 110, label %sw.bb170
    i32 111, label %sw.bb172
    i32 112, label %sw.bb174
    i32 113, label %sw.bb176
    i32 114, label %sw.bb178
    i32 115, label %sw.bb180
    i32 116, label %sw.bb182
    i32 117, label %sw.bb184
    i32 118, label %sw.bb186
    i32 119, label %sw.bb188
    i32 120, label %sw.bb190
    i32 121, label %sw.bb192
    i32 122, label %sw.bb194
    i32 123, label %sw.bb196
    i32 124, label %sw.bb198
    i32 125, label %sw.bb200
    i32 126, label %sw.bb202
    i32 127, label %sw.bb204
    i32 128, label %sw.bb206
    i32 129, label %sw.bb208
    i32 130, label %sw.bb210
    i32 131, label %sw.bb212
    i32 132, label %sw.bb214
    i32 133, label %sw.bb216
    i32 134, label %sw.bb218
    i32 135, label %sw.bb220
    i32 136, label %sw.bb221
  ], !dbg !13642

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  store i32 -1, ptr %retval, align 4, !dbg !13643
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13643

sw.bb1:                                           ; preds = %entry
  %1 = load i32, ptr %codepoint.addr, align 4, !dbg !13645, !tbaa !1767
  %cmp = icmp ne i32 %1, 10, !dbg !13646
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13647

land.rhs:                                         ; preds = %sw.bb1
  %2 = load i32, ptr %codepoint.addr, align 4, !dbg !13648, !tbaa !1767
  %cmp2 = icmp ne i32 %2, 13, !dbg !13649
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb1
  %3 = phi i1 [ false, %sw.bb1 ], [ %cmp2, %land.rhs ], !dbg !13650
  %land.ext = zext i1 %3 to i32, !dbg !13647
  store i32 %land.ext, ptr %ret, align 4, !dbg !13651, !tbaa !1767
  br label %sw.epilog, !dbg !13652

sw.bb3:                                           ; preds = %entry
  %4 = load i32, ptr %codepoint.addr, align 4, !dbg !13653, !tbaa !1767
  %5 = load i32, ptr %start.addr, align 4, !dbg !13654, !tbaa !1767
  %cmp4 = icmp sge i32 %4, %5, !dbg !13655
  br i1 %cmp4, label %land.rhs5, label %land.end7, !dbg !13656

land.rhs5:                                        ; preds = %sw.bb3
  %6 = load i32, ptr %codepoint.addr, align 4, !dbg !13657, !tbaa !1767
  %7 = load i32, ptr %end.addr, align 4, !dbg !13658, !tbaa !1767
  %cmp6 = icmp sle i32 %6, %7, !dbg !13659
  br label %land.end7

land.end7:                                        ; preds = %land.rhs5, %sw.bb3
  %8 = phi i1 [ false, %sw.bb3 ], [ %cmp6, %land.rhs5 ], !dbg !13650
  %land.ext8 = zext i1 %8 to i32, !dbg !13656
  store i32 %land.ext8, ptr %ret, align 4, !dbg !13660, !tbaa !1767
  br label %sw.epilog, !dbg !13661

sw.bb9:                                           ; preds = %entry
  %9 = load i32, ptr %neg.addr, align 4, !dbg !13662, !tbaa !1767
  %tobool = icmp ne i32 %9, 0, !dbg !13663
  %lnot = xor i1 %tobool, true, !dbg !13663
  %lnot.ext = zext i1 %lnot to i32, !dbg !13663
  store i32 %lnot.ext, ptr %neg.addr, align 4, !dbg !13664, !tbaa !1767
  br label %sw.bb10, !dbg !13665

sw.bb10:                                          ; preds = %entry, %sw.bb9
  %10 = load i32, ptr %codepoint.addr, align 4, !dbg !13666, !tbaa !1767
  %cmp11 = icmp eq i32 %10, 10, !dbg !13667
  br i1 %cmp11, label %lor.end, label %lor.lhs.false, !dbg !13668

lor.lhs.false:                                    ; preds = %sw.bb10
  %11 = load i32, ptr %codepoint.addr, align 4, !dbg !13669, !tbaa !1767
  %cmp12 = icmp eq i32 %11, 13, !dbg !13670
  br i1 %cmp12, label %lor.end, label %lor.lhs.false13, !dbg !13671

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %12 = load i32, ptr %codepoint.addr, align 4, !dbg !13672, !tbaa !1767
  %cmp14 = icmp eq i32 %12, 9, !dbg !13673
  br i1 %cmp14, label %lor.end, label %lor.rhs, !dbg !13674

lor.rhs:                                          ; preds = %lor.lhs.false13
  %13 = load i32, ptr %codepoint.addr, align 4, !dbg !13675, !tbaa !1767
  %cmp15 = icmp eq i32 %13, 32, !dbg !13676
  br label %lor.end, !dbg !13674

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false13, %lor.lhs.false, %sw.bb10
  %14 = phi i1 [ true, %lor.lhs.false13 ], [ true, %lor.lhs.false ], [ true, %sw.bb10 ], [ %cmp15, %lor.rhs ]
  %lor.ext = zext i1 %14 to i32, !dbg !13674
  store i32 %lor.ext, ptr %ret, align 4, !dbg !13677, !tbaa !1767
  br label %sw.epilog, !dbg !13678

sw.bb16:                                          ; preds = %entry
  %15 = load i32, ptr %neg.addr, align 4, !dbg !13679, !tbaa !1767
  %tobool17 = icmp ne i32 %15, 0, !dbg !13680
  %lnot18 = xor i1 %tobool17, true, !dbg !13680
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !13680
  store i32 %lnot.ext19, ptr %neg.addr, align 4, !dbg !13681, !tbaa !1767
  br label %sw.bb20, !dbg !13682

sw.bb20:                                          ; preds = %entry, %sw.bb16
  %16 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp21 = icmp slt i32 %16, 256, !dbg !13683
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !13683

cond.true:                                        ; preds = %sw.bb20
  %17 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp22 = icmp sle i32 65, %17, !dbg !13683
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false24, !dbg !13683

land.lhs.true:                                    ; preds = %cond.true
  %18 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp23 = icmp sle i32 %18, 90, !dbg !13683
  br i1 %cmp23, label %lor.end56, label %lor.lhs.false24, !dbg !13683

lor.lhs.false24:                                  ; preds = %land.lhs.true, %cond.true
  %19 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp25 = icmp sle i32 97, %19, !dbg !13683
  br i1 %cmp25, label %land.lhs.true26, label %lor.lhs.false28, !dbg !13683

land.lhs.true26:                                  ; preds = %lor.lhs.false24
  %20 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp27 = icmp sle i32 %20, 122, !dbg !13683
  br i1 %cmp27, label %lor.end56, label %lor.lhs.false28, !dbg !13683

lor.lhs.false28:                                  ; preds = %land.lhs.true26, %lor.lhs.false24
  %21 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp29 = icmp sle i32 192, %21, !dbg !13683
  br i1 %cmp29, label %land.lhs.true30, label %lor.lhs.false32, !dbg !13683

land.lhs.true30:                                  ; preds = %lor.lhs.false28
  %22 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp31 = icmp sle i32 %22, 214, !dbg !13683
  br i1 %cmp31, label %lor.end56, label %lor.lhs.false32, !dbg !13683

lor.lhs.false32:                                  ; preds = %land.lhs.true30, %lor.lhs.false28
  %23 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp33 = icmp sle i32 216, %23, !dbg !13683
  br i1 %cmp33, label %land.lhs.true34, label %lor.lhs.false36, !dbg !13683

land.lhs.true34:                                  ; preds = %lor.lhs.false32
  %24 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp35 = icmp sle i32 %24, 246, !dbg !13683
  br i1 %cmp35, label %lor.end56, label %lor.lhs.false36, !dbg !13683

lor.lhs.false36:                                  ; preds = %land.lhs.true34, %lor.lhs.false32
  %25 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp37 = icmp sle i32 248, %25, !dbg !13683
  br i1 %cmp37, label %lor.end56, label %lor.lhs.false39, !dbg !13683

cond.false:                                       ; preds = %sw.bb20
  %26 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %call = call i32 @xmlCharInRange(i32 noundef %26, ptr noundef @xmlIsBaseCharGroup), !dbg !13683
  %tobool38 = icmp ne i32 %call, 0, !dbg !13683
  br i1 %tobool38, label %lor.end56, label %lor.lhs.false39, !dbg !13683

lor.lhs.false39:                                  ; preds = %cond.false, %lor.lhs.false36
  %27 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp40 = icmp slt i32 %27, 256, !dbg !13683
  br i1 %cmp40, label %cond.true41, label %cond.false42, !dbg !13684

cond.true41:                                      ; preds = %lor.lhs.false39
  br i1 false, label %lor.end56, label %lor.lhs.false52, !dbg !13683

cond.false42:                                     ; preds = %lor.lhs.false39
  %28 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp43 = icmp sle i32 19968, %28, !dbg !13683
  br i1 %cmp43, label %land.lhs.true44, label %lor.lhs.false46, !dbg !13683

land.lhs.true44:                                  ; preds = %cond.false42
  %29 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp45 = icmp sle i32 %29, 40869, !dbg !13683
  br i1 %cmp45, label %lor.end56, label %lor.lhs.false46, !dbg !13683

lor.lhs.false46:                                  ; preds = %land.lhs.true44, %cond.false42
  %30 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp47 = icmp eq i32 %30, 12295, !dbg !13683
  br i1 %cmp47, label %lor.end56, label %lor.lhs.false48, !dbg !13683

lor.lhs.false48:                                  ; preds = %lor.lhs.false46
  %31 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp49 = icmp sle i32 12321, %31, !dbg !13683
  br i1 %cmp49, label %land.lhs.true50, label %lor.lhs.false52, !dbg !13683

land.lhs.true50:                                  ; preds = %lor.lhs.false48
  %32 = load i32, ptr %codepoint.addr, align 4, !dbg !13683, !tbaa !1767
  %cmp51 = icmp sle i32 %32, 12329, !dbg !13683
  br i1 %cmp51, label %lor.end56, label %lor.lhs.false52, !dbg !13684

lor.lhs.false52:                                  ; preds = %land.lhs.true50, %lor.lhs.false48, %cond.true41
  %33 = load i32, ptr %codepoint.addr, align 4, !dbg !13685, !tbaa !1767
  %cmp53 = icmp eq i32 %33, 95, !dbg !13686
  br i1 %cmp53, label %lor.end56, label %lor.rhs54, !dbg !13687

lor.rhs54:                                        ; preds = %lor.lhs.false52
  %34 = load i32, ptr %codepoint.addr, align 4, !dbg !13688, !tbaa !1767
  %cmp55 = icmp eq i32 %34, 58, !dbg !13689
  br label %lor.end56, !dbg !13687

lor.end56:                                        ; preds = %lor.rhs54, %lor.lhs.false52, %land.lhs.true50, %lor.lhs.false46, %land.lhs.true44, %cond.true41, %cond.false, %lor.lhs.false36, %land.lhs.true34, %land.lhs.true30, %land.lhs.true26, %land.lhs.true
  %35 = phi i1 [ true, %lor.lhs.false52 ], [ true, %land.lhs.true50 ], [ true, %lor.lhs.false46 ], [ true, %land.lhs.true44 ], [ true, %cond.true41 ], [ true, %cond.false ], [ true, %lor.lhs.false36 ], [ true, %land.lhs.true34 ], [ true, %land.lhs.true30 ], [ true, %land.lhs.true26 ], [ true, %land.lhs.true ], [ %cmp55, %lor.rhs54 ]
  %lor.ext57 = zext i1 %35 to i32, !dbg !13687
  store i32 %lor.ext57, ptr %ret, align 4, !dbg !13690, !tbaa !1767
  br label %sw.epilog, !dbg !13691

sw.bb58:                                          ; preds = %entry
  %36 = load i32, ptr %neg.addr, align 4, !dbg !13692, !tbaa !1767
  %tobool59 = icmp ne i32 %36, 0, !dbg !13693
  %lnot60 = xor i1 %tobool59, true, !dbg !13693
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !13693
  store i32 %lnot.ext61, ptr %neg.addr, align 4, !dbg !13694, !tbaa !1767
  br label %sw.bb62, !dbg !13695

sw.bb62:                                          ; preds = %entry, %sw.bb58
  %37 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp63 = icmp slt i32 %37, 256, !dbg !13696
  br i1 %cmp63, label %cond.true64, label %cond.false82, !dbg !13696

cond.true64:                                      ; preds = %sw.bb62
  %38 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp65 = icmp sle i32 65, %38, !dbg !13696
  br i1 %cmp65, label %land.lhs.true66, label %lor.lhs.false68, !dbg !13696

land.lhs.true66:                                  ; preds = %cond.true64
  %39 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp67 = icmp sle i32 %39, 90, !dbg !13696
  br i1 %cmp67, label %lor.end128, label %lor.lhs.false68, !dbg !13696

lor.lhs.false68:                                  ; preds = %land.lhs.true66, %cond.true64
  %40 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp69 = icmp sle i32 97, %40, !dbg !13696
  br i1 %cmp69, label %land.lhs.true70, label %lor.lhs.false72, !dbg !13696

land.lhs.true70:                                  ; preds = %lor.lhs.false68
  %41 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp71 = icmp sle i32 %41, 122, !dbg !13696
  br i1 %cmp71, label %lor.end128, label %lor.lhs.false72, !dbg !13696

lor.lhs.false72:                                  ; preds = %land.lhs.true70, %lor.lhs.false68
  %42 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp73 = icmp sle i32 192, %42, !dbg !13696
  br i1 %cmp73, label %land.lhs.true74, label %lor.lhs.false76, !dbg !13696

land.lhs.true74:                                  ; preds = %lor.lhs.false72
  %43 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp75 = icmp sle i32 %43, 214, !dbg !13696
  br i1 %cmp75, label %lor.end128, label %lor.lhs.false76, !dbg !13696

lor.lhs.false76:                                  ; preds = %land.lhs.true74, %lor.lhs.false72
  %44 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp77 = icmp sle i32 216, %44, !dbg !13696
  br i1 %cmp77, label %land.lhs.true78, label %lor.lhs.false80, !dbg !13696

land.lhs.true78:                                  ; preds = %lor.lhs.false76
  %45 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp79 = icmp sle i32 %45, 246, !dbg !13696
  br i1 %cmp79, label %lor.end128, label %lor.lhs.false80, !dbg !13696

lor.lhs.false80:                                  ; preds = %land.lhs.true78, %lor.lhs.false76
  %46 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp81 = icmp sle i32 248, %46, !dbg !13696
  br i1 %cmp81, label %lor.end128, label %lor.lhs.false85, !dbg !13696

cond.false82:                                     ; preds = %sw.bb62
  %47 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %call83 = call i32 @xmlCharInRange(i32 noundef %47, ptr noundef @xmlIsBaseCharGroup), !dbg !13696
  %tobool84 = icmp ne i32 %call83, 0, !dbg !13696
  br i1 %tobool84, label %lor.end128, label %lor.lhs.false85, !dbg !13696

lor.lhs.false85:                                  ; preds = %cond.false82, %lor.lhs.false80
  %48 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp86 = icmp slt i32 %48, 256, !dbg !13696
  br i1 %cmp86, label %cond.true87, label %cond.false88, !dbg !13697

cond.true87:                                      ; preds = %lor.lhs.false85
  br i1 false, label %lor.end128, label %lor.lhs.false98, !dbg !13696

cond.false88:                                     ; preds = %lor.lhs.false85
  %49 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp89 = icmp sle i32 19968, %49, !dbg !13696
  br i1 %cmp89, label %land.lhs.true90, label %lor.lhs.false92, !dbg !13696

land.lhs.true90:                                  ; preds = %cond.false88
  %50 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp91 = icmp sle i32 %50, 40869, !dbg !13696
  br i1 %cmp91, label %lor.end128, label %lor.lhs.false92, !dbg !13696

lor.lhs.false92:                                  ; preds = %land.lhs.true90, %cond.false88
  %51 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp93 = icmp eq i32 %51, 12295, !dbg !13696
  br i1 %cmp93, label %lor.end128, label %lor.lhs.false94, !dbg !13696

lor.lhs.false94:                                  ; preds = %lor.lhs.false92
  %52 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp95 = icmp sle i32 12321, %52, !dbg !13696
  br i1 %cmp95, label %land.lhs.true96, label %lor.lhs.false98, !dbg !13696

land.lhs.true96:                                  ; preds = %lor.lhs.false94
  %53 = load i32, ptr %codepoint.addr, align 4, !dbg !13696, !tbaa !1767
  %cmp97 = icmp sle i32 %53, 12329, !dbg !13696
  br i1 %cmp97, label %lor.end128, label %lor.lhs.false98, !dbg !13697

lor.lhs.false98:                                  ; preds = %land.lhs.true96, %lor.lhs.false94, %cond.true87
  %54 = load i32, ptr %codepoint.addr, align 4, !dbg !13698, !tbaa !1767
  %cmp99 = icmp slt i32 %54, 256, !dbg !13698
  br i1 %cmp99, label %cond.true100, label %cond.false104, !dbg !13699

cond.true100:                                     ; preds = %lor.lhs.false98
  %55 = load i32, ptr %codepoint.addr, align 4, !dbg !13698, !tbaa !1767
  %cmp101 = icmp sle i32 48, %55, !dbg !13698
  br i1 %cmp101, label %land.lhs.true102, label %lor.lhs.false107, !dbg !13698

land.lhs.true102:                                 ; preds = %cond.true100
  %56 = load i32, ptr %codepoint.addr, align 4, !dbg !13698, !tbaa !1767
  %cmp103 = icmp sle i32 %56, 57, !dbg !13698
  br i1 %cmp103, label %lor.end128, label %lor.lhs.false107, !dbg !13698

cond.false104:                                    ; preds = %lor.lhs.false98
  %57 = load i32, ptr %codepoint.addr, align 4, !dbg !13698, !tbaa !1767
  %call105 = call i32 @xmlCharInRange(i32 noundef %57, ptr noundef @xmlIsDigitGroup), !dbg !13698
  %tobool106 = icmp ne i32 %call105, 0, !dbg !13698
  br i1 %tobool106, label %lor.end128, label %lor.lhs.false107, !dbg !13699

lor.lhs.false107:                                 ; preds = %cond.false104, %land.lhs.true102, %cond.true100
  %58 = load i32, ptr %codepoint.addr, align 4, !dbg !13700, !tbaa !1767
  %cmp108 = icmp eq i32 %58, 46, !dbg !13701
  br i1 %cmp108, label %lor.end128, label %lor.lhs.false109, !dbg !13702

lor.lhs.false109:                                 ; preds = %lor.lhs.false107
  %59 = load i32, ptr %codepoint.addr, align 4, !dbg !13703, !tbaa !1767
  %cmp110 = icmp eq i32 %59, 45, !dbg !13704
  br i1 %cmp110, label %lor.end128, label %lor.lhs.false111, !dbg !13705

lor.lhs.false111:                                 ; preds = %lor.lhs.false109
  %60 = load i32, ptr %codepoint.addr, align 4, !dbg !13706, !tbaa !1767
  %cmp112 = icmp eq i32 %60, 95, !dbg !13707
  br i1 %cmp112, label %lor.end128, label %lor.lhs.false113, !dbg !13708

lor.lhs.false113:                                 ; preds = %lor.lhs.false111
  %61 = load i32, ptr %codepoint.addr, align 4, !dbg !13709, !tbaa !1767
  %cmp114 = icmp eq i32 %61, 58, !dbg !13710
  br i1 %cmp114, label %lor.end128, label %lor.lhs.false115, !dbg !13711

lor.lhs.false115:                                 ; preds = %lor.lhs.false113
  %62 = load i32, ptr %codepoint.addr, align 4, !dbg !13712, !tbaa !1767
  %cmp116 = icmp slt i32 %62, 256, !dbg !13712
  br i1 %cmp116, label %cond.true117, label %cond.false118, !dbg !13713

cond.true117:                                     ; preds = %lor.lhs.false115
  br i1 false, label %lor.end128, label %lor.rhs121, !dbg !13712

cond.false118:                                    ; preds = %lor.lhs.false115
  %63 = load i32, ptr %codepoint.addr, align 4, !dbg !13712, !tbaa !1767
  %call119 = call i32 @xmlCharInRange(i32 noundef %63, ptr noundef @xmlIsCombiningGroup), !dbg !13712
  %tobool120 = icmp ne i32 %call119, 0, !dbg !13712
  br i1 %tobool120, label %lor.end128, label %lor.rhs121, !dbg !13713

lor.rhs121:                                       ; preds = %cond.false118, %cond.true117
  %64 = load i32, ptr %codepoint.addr, align 4, !dbg !13714, !tbaa !1767
  %cmp122 = icmp slt i32 %64, 256, !dbg !13714
  br i1 %cmp122, label %cond.true123, label %cond.false125, !dbg !13714

cond.true123:                                     ; preds = %lor.rhs121
  %65 = load i32, ptr %codepoint.addr, align 4, !dbg !13714, !tbaa !1767
  %cmp124 = icmp eq i32 %65, 183, !dbg !13714
  %conv = zext i1 %cmp124 to i32, !dbg !13714
  br label %cond.end, !dbg !13714

cond.false125:                                    ; preds = %lor.rhs121
  %66 = load i32, ptr %codepoint.addr, align 4, !dbg !13714, !tbaa !1767
  %call126 = call i32 @xmlCharInRange(i32 noundef %66, ptr noundef @xmlIsExtenderGroup), !dbg !13714
  br label %cond.end, !dbg !13714

cond.end:                                         ; preds = %cond.false125, %cond.true123
  %cond = phi i32 [ %conv, %cond.true123 ], [ %call126, %cond.false125 ], !dbg !13714
  %tobool127 = icmp ne i32 %cond, 0, !dbg !13713
  br label %lor.end128, !dbg !13713

lor.end128:                                       ; preds = %cond.end, %cond.false118, %cond.true117, %lor.lhs.false113, %lor.lhs.false111, %lor.lhs.false109, %lor.lhs.false107, %cond.false104, %land.lhs.true102, %land.lhs.true96, %lor.lhs.false92, %land.lhs.true90, %cond.true87, %cond.false82, %lor.lhs.false80, %land.lhs.true78, %land.lhs.true74, %land.lhs.true70, %land.lhs.true66
  %67 = phi i1 [ true, %cond.false118 ], [ true, %cond.true117 ], [ true, %lor.lhs.false113 ], [ true, %lor.lhs.false111 ], [ true, %lor.lhs.false109 ], [ true, %lor.lhs.false107 ], [ true, %cond.false104 ], [ true, %land.lhs.true102 ], [ true, %land.lhs.true96 ], [ true, %lor.lhs.false92 ], [ true, %land.lhs.true90 ], [ true, %cond.true87 ], [ true, %cond.false82 ], [ true, %lor.lhs.false80 ], [ true, %land.lhs.true78 ], [ true, %land.lhs.true74 ], [ true, %land.lhs.true70 ], [ true, %land.lhs.true66 ], [ %tobool127, %cond.end ]
  %lor.ext129 = zext i1 %67 to i32, !dbg !13713
  store i32 %lor.ext129, ptr %ret, align 4, !dbg !13715, !tbaa !1767
  br label %sw.epilog, !dbg !13716

sw.bb130:                                         ; preds = %entry
  %68 = load i32, ptr %neg.addr, align 4, !dbg !13717, !tbaa !1767
  %tobool131 = icmp ne i32 %68, 0, !dbg !13718
  %lnot132 = xor i1 %tobool131, true, !dbg !13718
  %lnot.ext133 = zext i1 %lnot132 to i32, !dbg !13718
  store i32 %lnot.ext133, ptr %neg.addr, align 4, !dbg !13719, !tbaa !1767
  br label %sw.bb134, !dbg !13720

sw.bb134:                                         ; preds = %entry, %sw.bb130
  %69 = load i32, ptr %codepoint.addr, align 4, !dbg !13721, !tbaa !1767
  %call135 = call i32 @xmlUCSIsCatNd(i32 noundef %69), !dbg !13722
  store i32 %call135, ptr %ret, align 4, !dbg !13723, !tbaa !1767
  br label %sw.epilog, !dbg !13724

sw.bb136:                                         ; preds = %entry
  %70 = load i32, ptr %neg.addr, align 4, !dbg !13725, !tbaa !1767
  %tobool137 = icmp ne i32 %70, 0, !dbg !13726
  %lnot138 = xor i1 %tobool137, true, !dbg !13726
  %lnot.ext139 = zext i1 %lnot138 to i32, !dbg !13726
  store i32 %lnot.ext139, ptr %neg.addr, align 4, !dbg !13727, !tbaa !1767
  br label %sw.bb140, !dbg !13728

sw.bb140:                                         ; preds = %entry, %sw.bb136
  %71 = load i32, ptr %codepoint.addr, align 4, !dbg !13729, !tbaa !1767
  %call141 = call i32 @xmlUCSIsCatP(i32 noundef %71), !dbg !13730
  store i32 %call141, ptr %ret, align 4, !dbg !13731, !tbaa !1767
  %72 = load i32, ptr %ret, align 4, !dbg !13732, !tbaa !1767
  %cmp142 = icmp eq i32 %72, 0, !dbg !13734
  br i1 %cmp142, label %if.then, label %if.end, !dbg !13735

if.then:                                          ; preds = %sw.bb140
  %73 = load i32, ptr %codepoint.addr, align 4, !dbg !13736, !tbaa !1767
  %call144 = call i32 @xmlUCSIsCatZ(i32 noundef %73), !dbg !13737
  store i32 %call144, ptr %ret, align 4, !dbg !13738, !tbaa !1767
  br label %if.end, !dbg !13739

if.end:                                           ; preds = %if.then, %sw.bb140
  %74 = load i32, ptr %ret, align 4, !dbg !13740, !tbaa !1767
  %cmp145 = icmp eq i32 %74, 0, !dbg !13742
  br i1 %cmp145, label %if.then147, label %if.end149, !dbg !13743

if.then147:                                       ; preds = %if.end
  %75 = load i32, ptr %codepoint.addr, align 4, !dbg !13744, !tbaa !1767
  %call148 = call i32 @xmlUCSIsCatC(i32 noundef %75), !dbg !13745
  store i32 %call148, ptr %ret, align 4, !dbg !13746, !tbaa !1767
  br label %if.end149, !dbg !13747

if.end149:                                        ; preds = %if.then147, %if.end
  br label %sw.epilog, !dbg !13748

sw.bb150:                                         ; preds = %entry
  %76 = load i32, ptr %codepoint.addr, align 4, !dbg !13749, !tbaa !1767
  %call151 = call i32 @xmlUCSIsCatL(i32 noundef %76), !dbg !13750
  store i32 %call151, ptr %ret, align 4, !dbg !13751, !tbaa !1767
  br label %sw.epilog, !dbg !13752

sw.bb152:                                         ; preds = %entry
  %77 = load i32, ptr %codepoint.addr, align 4, !dbg !13753, !tbaa !1767
  %call153 = call i32 @xmlUCSIsCatLu(i32 noundef %77), !dbg !13754
  store i32 %call153, ptr %ret, align 4, !dbg !13755, !tbaa !1767
  br label %sw.epilog, !dbg !13756

sw.bb154:                                         ; preds = %entry
  %78 = load i32, ptr %codepoint.addr, align 4, !dbg !13757, !tbaa !1767
  %call155 = call i32 @xmlUCSIsCatLl(i32 noundef %78), !dbg !13758
  store i32 %call155, ptr %ret, align 4, !dbg !13759, !tbaa !1767
  br label %sw.epilog, !dbg !13760

sw.bb156:                                         ; preds = %entry
  %79 = load i32, ptr %codepoint.addr, align 4, !dbg !13761, !tbaa !1767
  %call157 = call i32 @xmlUCSIsCatLt(i32 noundef %79), !dbg !13762
  store i32 %call157, ptr %ret, align 4, !dbg !13763, !tbaa !1767
  br label %sw.epilog, !dbg !13764

sw.bb158:                                         ; preds = %entry
  %80 = load i32, ptr %codepoint.addr, align 4, !dbg !13765, !tbaa !1767
  %call159 = call i32 @xmlUCSIsCatLm(i32 noundef %80), !dbg !13766
  store i32 %call159, ptr %ret, align 4, !dbg !13767, !tbaa !1767
  br label %sw.epilog, !dbg !13768

sw.bb160:                                         ; preds = %entry
  %81 = load i32, ptr %codepoint.addr, align 4, !dbg !13769, !tbaa !1767
  %call161 = call i32 @xmlUCSIsCatLo(i32 noundef %81), !dbg !13770
  store i32 %call161, ptr %ret, align 4, !dbg !13771, !tbaa !1767
  br label %sw.epilog, !dbg !13772

sw.bb162:                                         ; preds = %entry
  %82 = load i32, ptr %codepoint.addr, align 4, !dbg !13773, !tbaa !1767
  %call163 = call i32 @xmlUCSIsCatM(i32 noundef %82), !dbg !13774
  store i32 %call163, ptr %ret, align 4, !dbg !13775, !tbaa !1767
  br label %sw.epilog, !dbg !13776

sw.bb164:                                         ; preds = %entry
  %83 = load i32, ptr %codepoint.addr, align 4, !dbg !13777, !tbaa !1767
  %call165 = call i32 @xmlUCSIsCatMn(i32 noundef %83), !dbg !13778
  store i32 %call165, ptr %ret, align 4, !dbg !13779, !tbaa !1767
  br label %sw.epilog, !dbg !13780

sw.bb166:                                         ; preds = %entry
  %84 = load i32, ptr %codepoint.addr, align 4, !dbg !13781, !tbaa !1767
  %call167 = call i32 @xmlUCSIsCatMc(i32 noundef %84), !dbg !13782
  store i32 %call167, ptr %ret, align 4, !dbg !13783, !tbaa !1767
  br label %sw.epilog, !dbg !13784

sw.bb168:                                         ; preds = %entry
  %85 = load i32, ptr %codepoint.addr, align 4, !dbg !13785, !tbaa !1767
  %call169 = call i32 @xmlUCSIsCatMe(i32 noundef %85), !dbg !13786
  store i32 %call169, ptr %ret, align 4, !dbg !13787, !tbaa !1767
  br label %sw.epilog, !dbg !13788

sw.bb170:                                         ; preds = %entry
  %86 = load i32, ptr %codepoint.addr, align 4, !dbg !13789, !tbaa !1767
  %call171 = call i32 @xmlUCSIsCatN(i32 noundef %86), !dbg !13790
  store i32 %call171, ptr %ret, align 4, !dbg !13791, !tbaa !1767
  br label %sw.epilog, !dbg !13792

sw.bb172:                                         ; preds = %entry
  %87 = load i32, ptr %codepoint.addr, align 4, !dbg !13793, !tbaa !1767
  %call173 = call i32 @xmlUCSIsCatNd(i32 noundef %87), !dbg !13794
  store i32 %call173, ptr %ret, align 4, !dbg !13795, !tbaa !1767
  br label %sw.epilog, !dbg !13796

sw.bb174:                                         ; preds = %entry
  %88 = load i32, ptr %codepoint.addr, align 4, !dbg !13797, !tbaa !1767
  %call175 = call i32 @xmlUCSIsCatNl(i32 noundef %88), !dbg !13798
  store i32 %call175, ptr %ret, align 4, !dbg !13799, !tbaa !1767
  br label %sw.epilog, !dbg !13800

sw.bb176:                                         ; preds = %entry
  %89 = load i32, ptr %codepoint.addr, align 4, !dbg !13801, !tbaa !1767
  %call177 = call i32 @xmlUCSIsCatNo(i32 noundef %89), !dbg !13802
  store i32 %call177, ptr %ret, align 4, !dbg !13803, !tbaa !1767
  br label %sw.epilog, !dbg !13804

sw.bb178:                                         ; preds = %entry
  %90 = load i32, ptr %codepoint.addr, align 4, !dbg !13805, !tbaa !1767
  %call179 = call i32 @xmlUCSIsCatP(i32 noundef %90), !dbg !13806
  store i32 %call179, ptr %ret, align 4, !dbg !13807, !tbaa !1767
  br label %sw.epilog, !dbg !13808

sw.bb180:                                         ; preds = %entry
  %91 = load i32, ptr %codepoint.addr, align 4, !dbg !13809, !tbaa !1767
  %call181 = call i32 @xmlUCSIsCatPc(i32 noundef %91), !dbg !13810
  store i32 %call181, ptr %ret, align 4, !dbg !13811, !tbaa !1767
  br label %sw.epilog, !dbg !13812

sw.bb182:                                         ; preds = %entry
  %92 = load i32, ptr %codepoint.addr, align 4, !dbg !13813, !tbaa !1767
  %call183 = call i32 @xmlUCSIsCatPd(i32 noundef %92), !dbg !13814
  store i32 %call183, ptr %ret, align 4, !dbg !13815, !tbaa !1767
  br label %sw.epilog, !dbg !13816

sw.bb184:                                         ; preds = %entry
  %93 = load i32, ptr %codepoint.addr, align 4, !dbg !13817, !tbaa !1767
  %call185 = call i32 @xmlUCSIsCatPs(i32 noundef %93), !dbg !13818
  store i32 %call185, ptr %ret, align 4, !dbg !13819, !tbaa !1767
  br label %sw.epilog, !dbg !13820

sw.bb186:                                         ; preds = %entry
  %94 = load i32, ptr %codepoint.addr, align 4, !dbg !13821, !tbaa !1767
  %call187 = call i32 @xmlUCSIsCatPe(i32 noundef %94), !dbg !13822
  store i32 %call187, ptr %ret, align 4, !dbg !13823, !tbaa !1767
  br label %sw.epilog, !dbg !13824

sw.bb188:                                         ; preds = %entry
  %95 = load i32, ptr %codepoint.addr, align 4, !dbg !13825, !tbaa !1767
  %call189 = call i32 @xmlUCSIsCatPi(i32 noundef %95), !dbg !13826
  store i32 %call189, ptr %ret, align 4, !dbg !13827, !tbaa !1767
  br label %sw.epilog, !dbg !13828

sw.bb190:                                         ; preds = %entry
  %96 = load i32, ptr %codepoint.addr, align 4, !dbg !13829, !tbaa !1767
  %call191 = call i32 @xmlUCSIsCatPf(i32 noundef %96), !dbg !13830
  store i32 %call191, ptr %ret, align 4, !dbg !13831, !tbaa !1767
  br label %sw.epilog, !dbg !13832

sw.bb192:                                         ; preds = %entry
  %97 = load i32, ptr %codepoint.addr, align 4, !dbg !13833, !tbaa !1767
  %call193 = call i32 @xmlUCSIsCatPo(i32 noundef %97), !dbg !13834
  store i32 %call193, ptr %ret, align 4, !dbg !13835, !tbaa !1767
  br label %sw.epilog, !dbg !13836

sw.bb194:                                         ; preds = %entry
  %98 = load i32, ptr %codepoint.addr, align 4, !dbg !13837, !tbaa !1767
  %call195 = call i32 @xmlUCSIsCatZ(i32 noundef %98), !dbg !13838
  store i32 %call195, ptr %ret, align 4, !dbg !13839, !tbaa !1767
  br label %sw.epilog, !dbg !13840

sw.bb196:                                         ; preds = %entry
  %99 = load i32, ptr %codepoint.addr, align 4, !dbg !13841, !tbaa !1767
  %call197 = call i32 @xmlUCSIsCatZs(i32 noundef %99), !dbg !13842
  store i32 %call197, ptr %ret, align 4, !dbg !13843, !tbaa !1767
  br label %sw.epilog, !dbg !13844

sw.bb198:                                         ; preds = %entry
  %100 = load i32, ptr %codepoint.addr, align 4, !dbg !13845, !tbaa !1767
  %call199 = call i32 @xmlUCSIsCatZl(i32 noundef %100), !dbg !13846
  store i32 %call199, ptr %ret, align 4, !dbg !13847, !tbaa !1767
  br label %sw.epilog, !dbg !13848

sw.bb200:                                         ; preds = %entry
  %101 = load i32, ptr %codepoint.addr, align 4, !dbg !13849, !tbaa !1767
  %call201 = call i32 @xmlUCSIsCatZp(i32 noundef %101), !dbg !13850
  store i32 %call201, ptr %ret, align 4, !dbg !13851, !tbaa !1767
  br label %sw.epilog, !dbg !13852

sw.bb202:                                         ; preds = %entry
  %102 = load i32, ptr %codepoint.addr, align 4, !dbg !13853, !tbaa !1767
  %call203 = call i32 @xmlUCSIsCatS(i32 noundef %102), !dbg !13854
  store i32 %call203, ptr %ret, align 4, !dbg !13855, !tbaa !1767
  br label %sw.epilog, !dbg !13856

sw.bb204:                                         ; preds = %entry
  %103 = load i32, ptr %codepoint.addr, align 4, !dbg !13857, !tbaa !1767
  %call205 = call i32 @xmlUCSIsCatSm(i32 noundef %103), !dbg !13858
  store i32 %call205, ptr %ret, align 4, !dbg !13859, !tbaa !1767
  br label %sw.epilog, !dbg !13860

sw.bb206:                                         ; preds = %entry
  %104 = load i32, ptr %codepoint.addr, align 4, !dbg !13861, !tbaa !1767
  %call207 = call i32 @xmlUCSIsCatSc(i32 noundef %104), !dbg !13862
  store i32 %call207, ptr %ret, align 4, !dbg !13863, !tbaa !1767
  br label %sw.epilog, !dbg !13864

sw.bb208:                                         ; preds = %entry
  %105 = load i32, ptr %codepoint.addr, align 4, !dbg !13865, !tbaa !1767
  %call209 = call i32 @xmlUCSIsCatSk(i32 noundef %105), !dbg !13866
  store i32 %call209, ptr %ret, align 4, !dbg !13867, !tbaa !1767
  br label %sw.epilog, !dbg !13868

sw.bb210:                                         ; preds = %entry
  %106 = load i32, ptr %codepoint.addr, align 4, !dbg !13869, !tbaa !1767
  %call211 = call i32 @xmlUCSIsCatSo(i32 noundef %106), !dbg !13870
  store i32 %call211, ptr %ret, align 4, !dbg !13871, !tbaa !1767
  br label %sw.epilog, !dbg !13872

sw.bb212:                                         ; preds = %entry
  %107 = load i32, ptr %codepoint.addr, align 4, !dbg !13873, !tbaa !1767
  %call213 = call i32 @xmlUCSIsCatC(i32 noundef %107), !dbg !13874
  store i32 %call213, ptr %ret, align 4, !dbg !13875, !tbaa !1767
  br label %sw.epilog, !dbg !13876

sw.bb214:                                         ; preds = %entry
  %108 = load i32, ptr %codepoint.addr, align 4, !dbg !13877, !tbaa !1767
  %call215 = call i32 @xmlUCSIsCatCc(i32 noundef %108), !dbg !13878
  store i32 %call215, ptr %ret, align 4, !dbg !13879, !tbaa !1767
  br label %sw.epilog, !dbg !13880

sw.bb216:                                         ; preds = %entry
  %109 = load i32, ptr %codepoint.addr, align 4, !dbg !13881, !tbaa !1767
  %call217 = call i32 @xmlUCSIsCatCf(i32 noundef %109), !dbg !13882
  store i32 %call217, ptr %ret, align 4, !dbg !13883, !tbaa !1767
  br label %sw.epilog, !dbg !13884

sw.bb218:                                         ; preds = %entry
  %110 = load i32, ptr %codepoint.addr, align 4, !dbg !13885, !tbaa !1767
  %call219 = call i32 @xmlUCSIsCatCo(i32 noundef %110), !dbg !13886
  store i32 %call219, ptr %ret, align 4, !dbg !13887, !tbaa !1767
  br label %sw.epilog, !dbg !13888

sw.bb220:                                         ; preds = %entry
  store i32 0, ptr %ret, align 4, !dbg !13889, !tbaa !1767
  br label %sw.epilog, !dbg !13890

sw.bb221:                                         ; preds = %entry
  %111 = load i32, ptr %codepoint.addr, align 4, !dbg !13891, !tbaa !1767
  %112 = load ptr, ptr %blockName.addr, align 8, !dbg !13892, !tbaa !1527
  %call222 = call i32 @xmlUCSIsBlock(i32 noundef %111, ptr noundef %112), !dbg !13893
  store i32 %call222, ptr %ret, align 4, !dbg !13894, !tbaa !1767
  br label %sw.epilog, !dbg !13895

sw.epilog:                                        ; preds = %entry, %sw.bb221, %sw.bb220, %sw.bb218, %sw.bb216, %sw.bb214, %sw.bb212, %sw.bb210, %sw.bb208, %sw.bb206, %sw.bb204, %sw.bb202, %sw.bb200, %sw.bb198, %sw.bb196, %sw.bb194, %sw.bb192, %sw.bb190, %sw.bb188, %sw.bb186, %sw.bb184, %sw.bb182, %sw.bb180, %sw.bb178, %sw.bb176, %sw.bb174, %sw.bb172, %sw.bb170, %sw.bb168, %sw.bb166, %sw.bb164, %sw.bb162, %sw.bb160, %sw.bb158, %sw.bb156, %sw.bb154, %sw.bb152, %sw.bb150, %if.end149, %sw.bb134, %lor.end128, %lor.end56, %lor.end, %land.end7, %land.end
  %113 = load i32, ptr %neg.addr, align 4, !dbg !13896, !tbaa !1767
  %tobool223 = icmp ne i32 %113, 0, !dbg !13896
  br i1 %tobool223, label %if.then224, label %if.end228, !dbg !13898

if.then224:                                       ; preds = %sw.epilog
  %114 = load i32, ptr %ret, align 4, !dbg !13899, !tbaa !1767
  %tobool225 = icmp ne i32 %114, 0, !dbg !13900
  %lnot226 = xor i1 %tobool225, true, !dbg !13900
  %lnot.ext227 = zext i1 %lnot226 to i32, !dbg !13900
  store i32 %lnot.ext227, ptr %retval, align 4, !dbg !13901
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13901

if.end228:                                        ; preds = %sw.epilog
  %115 = load i32, ptr %ret, align 4, !dbg !13902, !tbaa !1767
  store i32 %115, ptr %retval, align 4, !dbg !13903
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13903

cleanup:                                          ; preds = %if.end228, %if.then224, %sw.bb
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !13904
  %116 = load i32, ptr %retval, align 4, !dbg !13904
  ret i32 %116, !dbg !13904
}

declare !dbg !13905 i32 @printf(ptr noundef, ...) #5

declare !dbg !13908 i32 @xmlCharInRange(i32 noundef, ptr noundef) #5

declare !dbg !13935 i32 @xmlUCSIsCatNd(i32 noundef) #5

declare !dbg !13939 i32 @xmlUCSIsCatP(i32 noundef) #5

declare !dbg !13940 i32 @xmlUCSIsCatZ(i32 noundef) #5

declare !dbg !13941 i32 @xmlUCSIsCatC(i32 noundef) #5

declare !dbg !13942 i32 @xmlUCSIsCatL(i32 noundef) #5

declare !dbg !13943 i32 @xmlUCSIsCatLu(i32 noundef) #5

declare !dbg !13944 i32 @xmlUCSIsCatLl(i32 noundef) #5

declare !dbg !13945 i32 @xmlUCSIsCatLt(i32 noundef) #5

declare !dbg !13946 i32 @xmlUCSIsCatLm(i32 noundef) #5

declare !dbg !13947 i32 @xmlUCSIsCatLo(i32 noundef) #5

declare !dbg !13948 i32 @xmlUCSIsCatM(i32 noundef) #5

declare !dbg !13949 i32 @xmlUCSIsCatMn(i32 noundef) #5

declare !dbg !13950 i32 @xmlUCSIsCatMc(i32 noundef) #5

declare !dbg !13951 i32 @xmlUCSIsCatMe(i32 noundef) #5

declare !dbg !13952 i32 @xmlUCSIsCatN(i32 noundef) #5

declare !dbg !13953 i32 @xmlUCSIsCatNl(i32 noundef) #5

declare !dbg !13954 i32 @xmlUCSIsCatNo(i32 noundef) #5

declare !dbg !13955 i32 @xmlUCSIsCatPc(i32 noundef) #5

declare !dbg !13956 i32 @xmlUCSIsCatPd(i32 noundef) #5

declare !dbg !13957 i32 @xmlUCSIsCatPs(i32 noundef) #5

declare !dbg !13958 i32 @xmlUCSIsCatPe(i32 noundef) #5

declare !dbg !13959 i32 @xmlUCSIsCatPi(i32 noundef) #5

declare !dbg !13960 i32 @xmlUCSIsCatPf(i32 noundef) #5

declare !dbg !13961 i32 @xmlUCSIsCatPo(i32 noundef) #5

declare !dbg !13962 i32 @xmlUCSIsCatZs(i32 noundef) #5

declare !dbg !13963 i32 @xmlUCSIsCatZl(i32 noundef) #5

declare !dbg !13964 i32 @xmlUCSIsCatZp(i32 noundef) #5

declare !dbg !13965 i32 @xmlUCSIsCatS(i32 noundef) #5

declare !dbg !13966 i32 @xmlUCSIsCatSm(i32 noundef) #5

declare !dbg !13967 i32 @xmlUCSIsCatSc(i32 noundef) #5

declare !dbg !13968 i32 @xmlUCSIsCatSk(i32 noundef) #5

declare !dbg !13969 i32 @xmlUCSIsCatSo(i32 noundef) #5

declare !dbg !13970 i32 @xmlUCSIsCatCc(i32 noundef) #5

declare !dbg !13971 i32 @xmlUCSIsCatCf(i32 noundef) #5

declare !dbg !13972 i32 @xmlUCSIsCatCo(i32 noundef) #5

declare !dbg !13973 i32 @xmlUCSIsBlock(i32 noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal i32 @xmlFAEqualAtoms(ptr noundef %atom1, ptr noundef %atom2, i32 noundef %deep) #0 !dbg !13976 {
entry:
  %retval = alloca i32, align 4
  %atom1.addr = alloca ptr, align 8
  %atom2.addr = alloca ptr, align 8
  %deep.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %atom1, ptr %atom1.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom1.addr, metadata !13980, metadata !DIExpression()), !dbg !13984
  store ptr %atom2, ptr %atom2.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom2.addr, metadata !13981, metadata !DIExpression()), !dbg !13985
  store i32 %deep, ptr %deep.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %deep.addr, metadata !13982, metadata !DIExpression()), !dbg !13986
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !13987
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !13983, metadata !DIExpression()), !dbg !13988
  store i32 0, ptr %ret, align 4, !dbg !13988, !tbaa !1767
  %0 = load ptr, ptr %atom1.addr, align 8, !dbg !13989, !tbaa !1527
  %1 = load ptr, ptr %atom2.addr, align 8, !dbg !13991, !tbaa !1527
  %cmp = icmp eq ptr %0, %1, !dbg !13992
  br i1 %cmp, label %if.then, label %if.end, !dbg !13993

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !13994
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !13994

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %atom1.addr, align 8, !dbg !13995, !tbaa !1527
  %cmp1 = icmp eq ptr %2, null, !dbg !13997
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !13998

lor.lhs.false:                                    ; preds = %if.end
  %3 = load ptr, ptr %atom2.addr, align 8, !dbg !13999, !tbaa !1527
  %cmp2 = icmp eq ptr %3, null, !dbg !14000
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !14001

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, ptr %retval, align 4, !dbg !14002
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14002

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load ptr, ptr %atom1.addr, align 8, !dbg !14003, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlRegAtom, ptr %4, i32 0, i32 1, !dbg !14005
  %5 = load i32, ptr %type, align 4, !dbg !14005, !tbaa !3988
  %6 = load ptr, ptr %atom2.addr, align 8, !dbg !14006, !tbaa !1527
  %type5 = getelementptr inbounds %struct._xmlRegAtom, ptr %6, i32 0, i32 1, !dbg !14007
  %7 = load i32, ptr %type5, align 4, !dbg !14007, !tbaa !3988
  %cmp6 = icmp ne i32 %5, %7, !dbg !14008
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14009

if.then7:                                         ; preds = %if.end4
  store i32 0, ptr %retval, align 4, !dbg !14010
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14010

if.end8:                                          ; preds = %if.end4
  %8 = load ptr, ptr %atom1.addr, align 8, !dbg !14011, !tbaa !1527
  %type9 = getelementptr inbounds %struct._xmlRegAtom, ptr %8, i32 0, i32 1, !dbg !14012
  %9 = load i32, ptr %type9, align 4, !dbg !14012, !tbaa !3988
  switch i32 %9, label %sw.default [
    i32 1, label %sw.bb
    i32 5, label %sw.bb10
    i32 2, label %sw.bb17
    i32 3, label %sw.bb21
  ], !dbg !14013

sw.bb:                                            ; preds = %if.end8
  store i32 0, ptr %ret, align 4, !dbg !14014, !tbaa !1767
  br label %sw.epilog, !dbg !14016

sw.bb10:                                          ; preds = %if.end8
  %10 = load i32, ptr %deep.addr, align 4, !dbg !14017, !tbaa !1767
  %tobool = icmp ne i32 %10, 0, !dbg !14017
  br i1 %tobool, label %if.else, label %if.then11, !dbg !14019

if.then11:                                        ; preds = %sw.bb10
  %11 = load ptr, ptr %atom1.addr, align 8, !dbg !14020, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %11, i32 0, i32 5, !dbg !14021
  %12 = load ptr, ptr %valuep, align 8, !dbg !14021, !tbaa !2159
  %13 = load ptr, ptr %atom2.addr, align 8, !dbg !14022, !tbaa !1527
  %valuep12 = getelementptr inbounds %struct._xmlRegAtom, ptr %13, i32 0, i32 5, !dbg !14023
  %14 = load ptr, ptr %valuep12, align 8, !dbg !14023, !tbaa !2159
  %cmp13 = icmp eq ptr %12, %14, !dbg !14024
  %conv = zext i1 %cmp13 to i32, !dbg !14024
  store i32 %conv, ptr %ret, align 4, !dbg !14025, !tbaa !1767
  br label %if.end16, !dbg !14026

if.else:                                          ; preds = %sw.bb10
  %15 = load ptr, ptr %atom1.addr, align 8, !dbg !14027, !tbaa !1527
  %valuep14 = getelementptr inbounds %struct._xmlRegAtom, ptr %15, i32 0, i32 5, !dbg !14028
  %16 = load ptr, ptr %valuep14, align 8, !dbg !14028, !tbaa !2159
  %17 = load ptr, ptr %atom2.addr, align 8, !dbg !14029, !tbaa !1527
  %valuep15 = getelementptr inbounds %struct._xmlRegAtom, ptr %17, i32 0, i32 5, !dbg !14030
  %18 = load ptr, ptr %valuep15, align 8, !dbg !14030, !tbaa !2159
  %call = call i32 @xmlStrEqual(ptr noundef %16, ptr noundef %18), !dbg !14031
  store i32 %call, ptr %ret, align 4, !dbg !14032, !tbaa !1767
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then11
  br label %sw.epilog, !dbg !14033

sw.bb17:                                          ; preds = %if.end8
  %19 = load ptr, ptr %atom1.addr, align 8, !dbg !14034, !tbaa !1527
  %codepoint = getelementptr inbounds %struct._xmlRegAtom, ptr %19, i32 0, i32 8, !dbg !14035
  %20 = load i32, ptr %codepoint, align 4, !dbg !14035, !tbaa !4022
  %21 = load ptr, ptr %atom2.addr, align 8, !dbg !14036, !tbaa !1527
  %codepoint18 = getelementptr inbounds %struct._xmlRegAtom, ptr %21, i32 0, i32 8, !dbg !14037
  %22 = load i32, ptr %codepoint18, align 4, !dbg !14037, !tbaa !4022
  %cmp19 = icmp eq i32 %20, %22, !dbg !14038
  %conv20 = zext i1 %cmp19 to i32, !dbg !14038
  store i32 %conv20, ptr %ret, align 4, !dbg !14039, !tbaa !1767
  br label %sw.epilog, !dbg !14040

sw.bb21:                                          ; preds = %if.end8
  store i32 0, ptr %ret, align 4, !dbg !14041, !tbaa !1767
  br label %sw.default, !dbg !14042

sw.default:                                       ; preds = %if.end8, %sw.bb21
  br label %sw.epilog, !dbg !14043

sw.epilog:                                        ; preds = %sw.default, %sw.bb17, %if.end16, %sw.bb
  %23 = load i32, ptr %ret, align 4, !dbg !14044, !tbaa !1767
  store i32 %23, ptr %retval, align 4, !dbg !14045
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14045

cleanup:                                          ; preds = %sw.epilog, %if.then7, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !14046
  %24 = load i32, ptr %retval, align 4, !dbg !14046
  ret i32 %24, !dbg !14046
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlFACompareAtoms(ptr noundef %atom1, ptr noundef %atom2, i32 noundef %deep) #0 !dbg !14047 {
entry:
  %retval = alloca i32, align 4
  %atom1.addr = alloca ptr, align 8
  %atom2.addr = alloca ptr, align 8
  %deep.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %val1 = alloca ptr, align 8
  %val2 = alloca ptr, align 8
  %compound1 = alloca i32, align 4
  %compound2 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %res = alloca i32, align 4
  %r1 = alloca ptr, align 8
  %r2 = alloca ptr, align 8
  store ptr %atom1, ptr %atom1.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom1.addr, metadata !14049, metadata !DIExpression()), !dbg !14072
  store ptr %atom2, ptr %atom2.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom2.addr, metadata !14050, metadata !DIExpression()), !dbg !14073
  store i32 %deep, ptr %deep.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %deep.addr, metadata !14051, metadata !DIExpression()), !dbg !14074
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !14075
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !14052, metadata !DIExpression()), !dbg !14076
  store i32 1, ptr %ret, align 4, !dbg !14076, !tbaa !1767
  %0 = load ptr, ptr %atom1.addr, align 8, !dbg !14077, !tbaa !1527
  %1 = load ptr, ptr %atom2.addr, align 8, !dbg !14079, !tbaa !1527
  %cmp = icmp eq ptr %0, %1, !dbg !14080
  br i1 %cmp, label %if.then, label %if.end, !dbg !14081

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !14082
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup105, !dbg !14082

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %atom1.addr, align 8, !dbg !14083, !tbaa !1527
  %cmp1 = icmp eq ptr %2, null, !dbg !14085
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !14086

lor.lhs.false:                                    ; preds = %if.end
  %3 = load ptr, ptr %atom2.addr, align 8, !dbg !14087, !tbaa !1527
  %cmp2 = icmp eq ptr %3, null, !dbg !14088
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !14089

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, ptr %retval, align 4, !dbg !14090
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup105, !dbg !14090

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load ptr, ptr %atom1.addr, align 8, !dbg !14091, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlRegAtom, ptr %4, i32 0, i32 1, !dbg !14093
  %5 = load i32, ptr %type, align 4, !dbg !14093, !tbaa !3988
  %cmp5 = icmp eq i32 %5, 6, !dbg !14094
  br i1 %cmp5, label %if.then9, label %lor.lhs.false6, !dbg !14095

lor.lhs.false6:                                   ; preds = %if.end4
  %6 = load ptr, ptr %atom2.addr, align 8, !dbg !14096, !tbaa !1527
  %type7 = getelementptr inbounds %struct._xmlRegAtom, ptr %6, i32 0, i32 1, !dbg !14097
  %7 = load i32, ptr %type7, align 4, !dbg !14097, !tbaa !3988
  %cmp8 = icmp eq i32 %7, 6, !dbg !14098
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !14099

if.then9:                                         ; preds = %lor.lhs.false6, %if.end4
  store i32 1, ptr %retval, align 4, !dbg !14100
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup105, !dbg !14100

if.end10:                                         ; preds = %lor.lhs.false6
  %8 = load ptr, ptr %atom1.addr, align 8, !dbg !14101, !tbaa !1527
  %type11 = getelementptr inbounds %struct._xmlRegAtom, ptr %8, i32 0, i32 1, !dbg !14102
  %9 = load i32, ptr %type11, align 4, !dbg !14102, !tbaa !3988
  %10 = load ptr, ptr %atom2.addr, align 8, !dbg !14103, !tbaa !1527
  %type12 = getelementptr inbounds %struct._xmlRegAtom, ptr %10, i32 0, i32 1, !dbg !14104
  %11 = load i32, ptr %type12, align 4, !dbg !14104, !tbaa !3988
  %cmp13 = icmp ugt i32 %9, %11, !dbg !14105
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !14106

if.then14:                                        ; preds = %if.end10
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !14107
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !14053, metadata !DIExpression()), !dbg !14108
  %12 = load ptr, ptr %atom1.addr, align 8, !dbg !14109, !tbaa !1527
  store ptr %12, ptr %tmp, align 8, !dbg !14110, !tbaa !1527
  %13 = load ptr, ptr %atom2.addr, align 8, !dbg !14111, !tbaa !1527
  store ptr %13, ptr %atom1.addr, align 8, !dbg !14112, !tbaa !1527
  %14 = load ptr, ptr %tmp, align 8, !dbg !14113, !tbaa !1527
  store ptr %14, ptr %atom2.addr, align 8, !dbg !14114, !tbaa !1527
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !14115
  br label %if.end15, !dbg !14116

if.end15:                                         ; preds = %if.then14, %if.end10
  %15 = load ptr, ptr %atom1.addr, align 8, !dbg !14117, !tbaa !1527
  %type16 = getelementptr inbounds %struct._xmlRegAtom, ptr %15, i32 0, i32 1, !dbg !14119
  %16 = load i32, ptr %type16, align 4, !dbg !14119, !tbaa !3988
  %17 = load ptr, ptr %atom2.addr, align 8, !dbg !14120, !tbaa !1527
  %type17 = getelementptr inbounds %struct._xmlRegAtom, ptr %17, i32 0, i32 1, !dbg !14121
  %18 = load i32, ptr %type17, align 4, !dbg !14121, !tbaa !3988
  %cmp18 = icmp ne i32 %16, %18, !dbg !14122
  br i1 %cmp18, label %if.then19, label %if.end25, !dbg !14123

if.then19:                                        ; preds = %if.end15
  %19 = load ptr, ptr %atom1.addr, align 8, !dbg !14124, !tbaa !1527
  %type20 = getelementptr inbounds %struct._xmlRegAtom, ptr %19, i32 0, i32 1, !dbg !14126
  %20 = load i32, ptr %type20, align 4, !dbg !14126, !tbaa !3988
  %21 = load ptr, ptr %atom2.addr, align 8, !dbg !14127, !tbaa !1527
  %type21 = getelementptr inbounds %struct._xmlRegAtom, ptr %21, i32 0, i32 1, !dbg !14128
  %22 = load i32, ptr %type21, align 4, !dbg !14128, !tbaa !3988
  %call = call i32 @xmlFACompareAtomTypes(i32 noundef %20, i32 noundef %22), !dbg !14129
  store i32 %call, ptr %ret, align 4, !dbg !14130, !tbaa !1767
  %23 = load i32, ptr %ret, align 4, !dbg !14131, !tbaa !1767
  %cmp22 = icmp eq i32 %23, 0, !dbg !14133
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !14134

if.then23:                                        ; preds = %if.then19
  store i32 0, ptr %retval, align 4, !dbg !14135
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup105, !dbg !14135

if.end24:                                         ; preds = %if.then19
  br label %if.end25, !dbg !14136

if.end25:                                         ; preds = %if.end24, %if.end15
  %24 = load ptr, ptr %atom1.addr, align 8, !dbg !14137, !tbaa !1527
  %type26 = getelementptr inbounds %struct._xmlRegAtom, ptr %24, i32 0, i32 1, !dbg !14138
  %25 = load i32, ptr %type26, align 4, !dbg !14138, !tbaa !3988
  switch i32 %25, label %sw.default [
    i32 5, label %sw.bb
    i32 1, label %sw.bb47
    i32 2, label %sw.bb48
    i32 3, label %sw.bb64
  ], !dbg !14139

sw.bb:                                            ; preds = %if.end25
  %26 = load i32, ptr %deep.addr, align 4, !dbg !14140, !tbaa !1767
  %tobool = icmp ne i32 %26, 0, !dbg !14140
  br i1 %tobool, label %if.else, label %if.then27, !dbg !14141

if.then27:                                        ; preds = %sw.bb
  %27 = load ptr, ptr %atom1.addr, align 8, !dbg !14142, !tbaa !1527
  %valuep = getelementptr inbounds %struct._xmlRegAtom, ptr %27, i32 0, i32 5, !dbg !14143
  %28 = load ptr, ptr %valuep, align 8, !dbg !14143, !tbaa !2159
  %29 = load ptr, ptr %atom2.addr, align 8, !dbg !14144, !tbaa !1527
  %valuep28 = getelementptr inbounds %struct._xmlRegAtom, ptr %29, i32 0, i32 5, !dbg !14145
  %30 = load ptr, ptr %valuep28, align 8, !dbg !14145, !tbaa !2159
  %cmp29 = icmp ne ptr %28, %30, !dbg !14146
  %conv = zext i1 %cmp29 to i32, !dbg !14146
  store i32 %conv, ptr %ret, align 4, !dbg !14147, !tbaa !1767
  br label %if.end46, !dbg !14148

if.else:                                          ; preds = %sw.bb
  call void @llvm.lifetime.start.p0(i64 8, ptr %val1) #8, !dbg !14149
  tail call void @llvm.dbg.declare(metadata ptr %val1, metadata !14056, metadata !DIExpression()), !dbg !14150
  %31 = load ptr, ptr %atom1.addr, align 8, !dbg !14151, !tbaa !1527
  %valuep30 = getelementptr inbounds %struct._xmlRegAtom, ptr %31, i32 0, i32 5, !dbg !14152
  %32 = load ptr, ptr %valuep30, align 8, !dbg !14152, !tbaa !2159
  store ptr %32, ptr %val1, align 8, !dbg !14150, !tbaa !1527
  call void @llvm.lifetime.start.p0(i64 8, ptr %val2) #8, !dbg !14153
  tail call void @llvm.dbg.declare(metadata ptr %val2, metadata !14060, metadata !DIExpression()), !dbg !14154
  %33 = load ptr, ptr %atom2.addr, align 8, !dbg !14155, !tbaa !1527
  %valuep31 = getelementptr inbounds %struct._xmlRegAtom, ptr %33, i32 0, i32 5, !dbg !14156
  %34 = load ptr, ptr %valuep31, align 8, !dbg !14156, !tbaa !2159
  store ptr %34, ptr %val2, align 8, !dbg !14154, !tbaa !1527
  call void @llvm.lifetime.start.p0(i64 4, ptr %compound1) #8, !dbg !14157
  tail call void @llvm.dbg.declare(metadata ptr %compound1, metadata !14061, metadata !DIExpression()), !dbg !14158
  %35 = load ptr, ptr %val1, align 8, !dbg !14159, !tbaa !1527
  %call32 = call ptr @xmlStrchr(ptr noundef %35, i8 noundef zeroext 124), !dbg !14160
  %cmp33 = icmp ne ptr %call32, null, !dbg !14161
  %conv34 = zext i1 %cmp33 to i32, !dbg !14161
  store i32 %conv34, ptr %compound1, align 4, !dbg !14158, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 4, ptr %compound2) #8, !dbg !14162
  tail call void @llvm.dbg.declare(metadata ptr %compound2, metadata !14062, metadata !DIExpression()), !dbg !14163
  %36 = load ptr, ptr %val2, align 8, !dbg !14164, !tbaa !1527
  %call35 = call ptr @xmlStrchr(ptr noundef %36, i8 noundef zeroext 124), !dbg !14165
  %cmp36 = icmp ne ptr %call35, null, !dbg !14166
  %conv37 = zext i1 %cmp36 to i32, !dbg !14166
  store i32 %conv37, ptr %compound2, align 4, !dbg !14163, !tbaa !1767
  %37 = load i32, ptr %compound1, align 4, !dbg !14167, !tbaa !1767
  %38 = load i32, ptr %compound2, align 4, !dbg !14169, !tbaa !1767
  %cmp38 = icmp ne i32 %37, %38, !dbg !14170
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !14171

if.then40:                                        ; preds = %if.else
  store i32 0, ptr %retval, align 4, !dbg !14172
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14172

if.end41:                                         ; preds = %if.else
  %39 = load ptr, ptr %val1, align 8, !dbg !14173, !tbaa !1527
  %40 = load ptr, ptr %val2, align 8, !dbg !14174, !tbaa !1527
  %call42 = call i32 @xmlRegStrEqualWildcard(ptr noundef %39, ptr noundef %40), !dbg !14175
  store i32 %call42, ptr %ret, align 4, !dbg !14176, !tbaa !1767
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !14177
  br label %cleanup, !dbg !14177

cleanup:                                          ; preds = %if.end41, %if.then40
  call void @llvm.lifetime.end.p0(i64 4, ptr %compound2) #8, !dbg !14177
  call void @llvm.lifetime.end.p0(i64 4, ptr %compound1) #8, !dbg !14177
  call void @llvm.lifetime.end.p0(i64 8, ptr %val2) #8, !dbg !14177
  call void @llvm.lifetime.end.p0(i64 8, ptr %val1) #8, !dbg !14177
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup105 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end46

if.end46:                                         ; preds = %cleanup.cont, %if.then27
  br label %sw.epilog, !dbg !14178

sw.bb47:                                          ; preds = %if.end25
  br label %not_determinist, !dbg !14179

sw.bb48:                                          ; preds = %if.end25
  %41 = load ptr, ptr %atom2.addr, align 8, !dbg !14180, !tbaa !1527
  %type49 = getelementptr inbounds %struct._xmlRegAtom, ptr %41, i32 0, i32 1, !dbg !14182
  %42 = load i32, ptr %type49, align 4, !dbg !14182, !tbaa !3988
  %cmp50 = icmp eq i32 %42, 2, !dbg !14183
  br i1 %cmp50, label %if.then52, label %if.else56, !dbg !14184

if.then52:                                        ; preds = %sw.bb48
  %43 = load ptr, ptr %atom1.addr, align 8, !dbg !14185, !tbaa !1527
  %codepoint = getelementptr inbounds %struct._xmlRegAtom, ptr %43, i32 0, i32 8, !dbg !14187
  %44 = load i32, ptr %codepoint, align 4, !dbg !14187, !tbaa !4022
  %45 = load ptr, ptr %atom2.addr, align 8, !dbg !14188, !tbaa !1527
  %codepoint53 = getelementptr inbounds %struct._xmlRegAtom, ptr %45, i32 0, i32 8, !dbg !14189
  %46 = load i32, ptr %codepoint53, align 4, !dbg !14189, !tbaa !4022
  %cmp54 = icmp eq i32 %44, %46, !dbg !14190
  %conv55 = zext i1 %cmp54 to i32, !dbg !14190
  store i32 %conv55, ptr %ret, align 4, !dbg !14191, !tbaa !1767
  br label %if.end63, !dbg !14192

if.else56:                                        ; preds = %sw.bb48
  %47 = load ptr, ptr %atom2.addr, align 8, !dbg !14193, !tbaa !1527
  %48 = load ptr, ptr %atom1.addr, align 8, !dbg !14195, !tbaa !1527
  %codepoint57 = getelementptr inbounds %struct._xmlRegAtom, ptr %48, i32 0, i32 8, !dbg !14196
  %49 = load i32, ptr %codepoint57, align 4, !dbg !14196, !tbaa !4022
  %call58 = call i32 @xmlRegCheckCharacter(ptr noundef %47, i32 noundef %49), !dbg !14197
  store i32 %call58, ptr %ret, align 4, !dbg !14198, !tbaa !1767
  %50 = load i32, ptr %ret, align 4, !dbg !14199, !tbaa !1767
  %cmp59 = icmp slt i32 %50, 0, !dbg !14201
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !14202

if.then61:                                        ; preds = %if.else56
  store i32 1, ptr %ret, align 4, !dbg !14203, !tbaa !1767
  br label %if.end62, !dbg !14204

if.end62:                                         ; preds = %if.then61, %if.else56
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then52
  br label %sw.epilog, !dbg !14205

sw.bb64:                                          ; preds = %if.end25
  %51 = load ptr, ptr %atom2.addr, align 8, !dbg !14206, !tbaa !1527
  %type65 = getelementptr inbounds %struct._xmlRegAtom, ptr %51, i32 0, i32 1, !dbg !14207
  %52 = load i32, ptr %type65, align 4, !dbg !14207, !tbaa !3988
  %cmp66 = icmp eq i32 %52, 3, !dbg !14208
  br i1 %cmp66, label %if.then68, label %if.end94, !dbg !14209

if.then68:                                        ; preds = %sw.bb64
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !14210
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !14063, metadata !DIExpression()), !dbg !14211
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #8, !dbg !14210
  tail call void @llvm.dbg.declare(metadata ptr %j, metadata !14066, metadata !DIExpression()), !dbg !14212
  call void @llvm.lifetime.start.p0(i64 4, ptr %res) #8, !dbg !14210
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !14067, metadata !DIExpression()), !dbg !14213
  call void @llvm.lifetime.start.p0(i64 8, ptr %r1) #8, !dbg !14214
  tail call void @llvm.dbg.declare(metadata ptr %r1, metadata !14068, metadata !DIExpression()), !dbg !14215
  call void @llvm.lifetime.start.p0(i64 8, ptr %r2) #8, !dbg !14214
  tail call void @llvm.dbg.declare(metadata ptr %r2, metadata !14069, metadata !DIExpression()), !dbg !14216
  store i32 0, ptr %i, align 4, !dbg !14217, !tbaa !1767
  br label %for.cond, !dbg !14219

for.cond:                                         ; preds = %for.inc84, %if.then68
  %53 = load i32, ptr %i, align 4, !dbg !14220, !tbaa !1767
  %54 = load ptr, ptr %atom1.addr, align 8, !dbg !14222, !tbaa !1527
  %nbRanges = getelementptr inbounds %struct._xmlRegAtom, ptr %54, i32 0, i32 13, !dbg !14223
  %55 = load i32, ptr %nbRanges, align 4, !dbg !14223, !tbaa !4033
  %cmp69 = icmp slt i32 %53, %55, !dbg !14224
  br i1 %cmp69, label %for.body, label %for.end86, !dbg !14225

for.body:                                         ; preds = %for.cond
  store i32 0, ptr %j, align 4, !dbg !14226, !tbaa !1767
  br label %for.cond71, !dbg !14229

for.cond71:                                       ; preds = %for.inc, %for.body
  %56 = load i32, ptr %j, align 4, !dbg !14230, !tbaa !1767
  %57 = load ptr, ptr %atom2.addr, align 8, !dbg !14232, !tbaa !1527
  %nbRanges72 = getelementptr inbounds %struct._xmlRegAtom, ptr %57, i32 0, i32 13, !dbg !14233
  %58 = load i32, ptr %nbRanges72, align 4, !dbg !14233, !tbaa !4033
  %cmp73 = icmp slt i32 %56, %58, !dbg !14234
  br i1 %cmp73, label %for.body75, label %for.end, !dbg !14235

for.body75:                                       ; preds = %for.cond71
  %59 = load ptr, ptr %atom1.addr, align 8, !dbg !14236, !tbaa !1527
  %ranges = getelementptr inbounds %struct._xmlRegAtom, ptr %59, i32 0, i32 14, !dbg !14238
  %60 = load ptr, ptr %ranges, align 8, !dbg !14238, !tbaa !4047
  %61 = load i32, ptr %i, align 4, !dbg !14239, !tbaa !1767
  %idxprom = sext i32 %61 to i64, !dbg !14236
  %arrayidx = getelementptr inbounds ptr, ptr %60, i64 %idxprom, !dbg !14236
  %62 = load ptr, ptr %arrayidx, align 8, !dbg !14236, !tbaa !1527
  store ptr %62, ptr %r1, align 8, !dbg !14240, !tbaa !1527
  %63 = load ptr, ptr %atom2.addr, align 8, !dbg !14241, !tbaa !1527
  %ranges76 = getelementptr inbounds %struct._xmlRegAtom, ptr %63, i32 0, i32 14, !dbg !14242
  %64 = load ptr, ptr %ranges76, align 8, !dbg !14242, !tbaa !4047
  %65 = load i32, ptr %j, align 4, !dbg !14243, !tbaa !1767
  %idxprom77 = sext i32 %65 to i64, !dbg !14241
  %arrayidx78 = getelementptr inbounds ptr, ptr %64, i64 %idxprom77, !dbg !14241
  %66 = load ptr, ptr %arrayidx78, align 8, !dbg !14241, !tbaa !1527
  store ptr %66, ptr %r2, align 8, !dbg !14244, !tbaa !1527
  %67 = load ptr, ptr %r1, align 8, !dbg !14245, !tbaa !1527
  %68 = load ptr, ptr %r2, align 8, !dbg !14246, !tbaa !1527
  %call79 = call i32 @xmlFACompareRanges(ptr noundef %67, ptr noundef %68), !dbg !14247
  store i32 %call79, ptr %res, align 4, !dbg !14248, !tbaa !1767
  %69 = load i32, ptr %res, align 4, !dbg !14249, !tbaa !1767
  %cmp80 = icmp eq i32 %69, 1, !dbg !14251
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !14252

if.then82:                                        ; preds = %for.body75
  store i32 1, ptr %ret, align 4, !dbg !14253, !tbaa !1767
  store i32 10, ptr %cleanup.dest.slot, align 4
  br label %cleanup87, !dbg !14255

if.end83:                                         ; preds = %for.body75
  br label %for.inc, !dbg !14256

for.inc:                                          ; preds = %if.end83
  %70 = load i32, ptr %j, align 4, !dbg !14257, !tbaa !1767
  %inc = add nsw i32 %70, 1, !dbg !14257
  store i32 %inc, ptr %j, align 4, !dbg !14257, !tbaa !1767
  br label %for.cond71, !dbg !14258, !llvm.loop !14259

for.end:                                          ; preds = %for.cond71
  br label %for.inc84, !dbg !14261

for.inc84:                                        ; preds = %for.end
  %71 = load i32, ptr %i, align 4, !dbg !14262, !tbaa !1767
  %inc85 = add nsw i32 %71, 1, !dbg !14262
  store i32 %inc85, ptr %i, align 4, !dbg !14262, !tbaa !1767
  br label %for.cond, !dbg !14263, !llvm.loop !14264

for.end86:                                        ; preds = %for.cond
  store i32 0, ptr %ret, align 4, !dbg !14266, !tbaa !1767
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !14267
  br label %cleanup87, !dbg !14267

cleanup87:                                        ; preds = %if.then82, %for.end86
  call void @llvm.lifetime.end.p0(i64 8, ptr %r2) #8, !dbg !14267
  call void @llvm.lifetime.end.p0(i64 8, ptr %r1) #8, !dbg !14267
  call void @llvm.lifetime.end.p0(i64 4, ptr %res) #8, !dbg !14267
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #8, !dbg !14267
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !14267
  %cleanup.dest92 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest92, label %cleanup105 [
    i32 0, label %cleanup.cont93
    i32 10, label %done
  ]

cleanup.cont93:                                   ; preds = %cleanup87
  br label %if.end94, !dbg !14268

if.end94:                                         ; preds = %cleanup.cont93, %sw.bb64
  br label %sw.epilog, !dbg !14269

sw.default:                                       ; preds = %if.end25
  br label %not_determinist, !dbg !14270

sw.epilog:                                        ; preds = %if.end94, %if.end63, %if.end46
  br label %done, !dbg !14271

done:                                             ; preds = %sw.epilog, %cleanup87
  tail call void @llvm.dbg.label(metadata !14070), !dbg !14272
  %72 = load ptr, ptr %atom1.addr, align 8, !dbg !14273, !tbaa !1527
  %neg = getelementptr inbounds %struct._xmlRegAtom, ptr %72, i32 0, i32 7, !dbg !14275
  %73 = load i32, ptr %neg, align 8, !dbg !14275, !tbaa !2323
  %74 = load ptr, ptr %atom2.addr, align 8, !dbg !14276, !tbaa !1527
  %neg95 = getelementptr inbounds %struct._xmlRegAtom, ptr %74, i32 0, i32 7, !dbg !14277
  %75 = load i32, ptr %neg95, align 8, !dbg !14277, !tbaa !2323
  %cmp96 = icmp ne i32 %73, %75, !dbg !14278
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !14279

if.then98:                                        ; preds = %done
  %76 = load i32, ptr %ret, align 4, !dbg !14280, !tbaa !1767
  %tobool99 = icmp ne i32 %76, 0, !dbg !14282
  %lnot = xor i1 %tobool99, true, !dbg !14282
  %lnot.ext = zext i1 %lnot to i32, !dbg !14282
  store i32 %lnot.ext, ptr %ret, align 4, !dbg !14283, !tbaa !1767
  br label %if.end100, !dbg !14284

if.end100:                                        ; preds = %if.then98, %done
  %77 = load i32, ptr %ret, align 4, !dbg !14285, !tbaa !1767
  %cmp101 = icmp eq i32 %77, 0, !dbg !14287
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !14288

if.then103:                                       ; preds = %if.end100
  store i32 0, ptr %retval, align 4, !dbg !14289
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup105, !dbg !14289

if.end104:                                        ; preds = %if.end100
  br label %not_determinist, !dbg !14290

not_determinist:                                  ; preds = %if.end104, %sw.default, %sw.bb47
  tail call void @llvm.dbg.label(metadata !14071), !dbg !14291
  store i32 1, ptr %retval, align 4, !dbg !14292
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup105, !dbg !14292

cleanup105:                                       ; preds = %not_determinist, %if.then103, %cleanup87, %cleanup, %if.then23, %if.then9, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !14293
  %78 = load i32, ptr %retval, align 4, !dbg !14293
  ret i32 %78, !dbg !14293
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlFARecurseDeterminism(ptr noundef %ctxt, ptr noundef %state, i32 noundef %to, ptr noundef %atom) #0 !dbg !14294 {
entry:
  %retval = alloca i32, align 4
  %ctxt.addr = alloca ptr, align 8
  %state.addr = alloca ptr, align 8
  %to.addr = alloca i32, align 4
  %atom.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %res = alloca i32, align 4
  %transnr = alloca i32, align 4
  %nbTrans = alloca i32, align 4
  %t1 = alloca ptr, align 8
  %deep = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !14298, metadata !DIExpression()), !dbg !14308
  store ptr %state, ptr %state.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !14299, metadata !DIExpression()), !dbg !14309
  store i32 %to, ptr %to.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %to.addr, metadata !14300, metadata !DIExpression()), !dbg !14310
  store ptr %atom, ptr %atom.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom.addr, metadata !14301, metadata !DIExpression()), !dbg !14311
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !14312
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !14302, metadata !DIExpression()), !dbg !14313
  store i32 1, ptr %ret, align 4, !dbg !14313, !tbaa !1767
  call void @llvm.lifetime.start.p0(i64 4, ptr %res) #8, !dbg !14314
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !14303, metadata !DIExpression()), !dbg !14315
  call void @llvm.lifetime.start.p0(i64 4, ptr %transnr) #8, !dbg !14316
  tail call void @llvm.dbg.declare(metadata ptr %transnr, metadata !14304, metadata !DIExpression()), !dbg !14317
  call void @llvm.lifetime.start.p0(i64 4, ptr %nbTrans) #8, !dbg !14316
  tail call void @llvm.dbg.declare(metadata ptr %nbTrans, metadata !14305, metadata !DIExpression()), !dbg !14318
  call void @llvm.lifetime.start.p0(i64 8, ptr %t1) #8, !dbg !14319
  tail call void @llvm.dbg.declare(metadata ptr %t1, metadata !14306, metadata !DIExpression()), !dbg !14320
  call void @llvm.lifetime.start.p0(i64 4, ptr %deep) #8, !dbg !14321
  tail call void @llvm.dbg.declare(metadata ptr %deep, metadata !14307, metadata !DIExpression()), !dbg !14322
  store i32 1, ptr %deep, align 4, !dbg !14322, !tbaa !1767
  %0 = load ptr, ptr %state.addr, align 8, !dbg !14323, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !14325
  br i1 %cmp, label %if.then, label %if.end, !dbg !14326

if.then:                                          ; preds = %entry
  %1 = load i32, ptr %ret, align 4, !dbg !14327, !tbaa !1767
  store i32 %1, ptr %retval, align 4, !dbg !14328
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14328

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %state.addr, align 8, !dbg !14329, !tbaa !1527
  %markd = getelementptr inbounds %struct._xmlAutomataState, ptr %2, i32 0, i32 2, !dbg !14331
  %3 = load i32, ptr %markd, align 8, !dbg !14331, !tbaa !14332
  %cmp1 = icmp eq i32 %3, 2, !dbg !14333
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !14334

if.then2:                                         ; preds = %if.end
  %4 = load i32, ptr %ret, align 4, !dbg !14335, !tbaa !1767
  store i32 %4, ptr %retval, align 4, !dbg !14336
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14336

if.end3:                                          ; preds = %if.end
  %5 = load ptr, ptr %ctxt.addr, align 8, !dbg !14337, !tbaa !1527
  %flags = getelementptr inbounds %struct._xmlAutomata, ptr %5, i32 0, i32 19, !dbg !14339
  %6 = load i32, ptr %flags, align 8, !dbg !14339, !tbaa !5142
  %and = and i32 %6, 1, !dbg !14340
  %tobool = icmp ne i32 %and, 0, !dbg !14340
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !14341

if.then4:                                         ; preds = %if.end3
  store i32 0, ptr %deep, align 4, !dbg !14342, !tbaa !1767
  br label %if.end5, !dbg !14343

if.end5:                                          ; preds = %if.then4, %if.end3
  %7 = load ptr, ptr %state.addr, align 8, !dbg !14344, !tbaa !1527
  %nbTrans6 = getelementptr inbounds %struct._xmlAutomataState, ptr %7, i32 0, i32 6, !dbg !14345
  %8 = load i32, ptr %nbTrans6, align 8, !dbg !14345, !tbaa !2052
  store i32 %8, ptr %nbTrans, align 4, !dbg !14346, !tbaa !1767
  store i32 0, ptr %transnr, align 4, !dbg !14347, !tbaa !1767
  br label %for.cond, !dbg !14349

for.cond:                                         ; preds = %for.inc, %if.end5
  %9 = load i32, ptr %transnr, align 4, !dbg !14350, !tbaa !1767
  %10 = load i32, ptr %nbTrans, align 4, !dbg !14352, !tbaa !1767
  %cmp7 = icmp slt i32 %9, %10, !dbg !14353
  br i1 %cmp7, label %for.body, label %for.end, !dbg !14354

for.body:                                         ; preds = %for.cond
  %11 = load ptr, ptr %state.addr, align 8, !dbg !14355, !tbaa !1527
  %trans = getelementptr inbounds %struct._xmlAutomataState, ptr %11, i32 0, i32 7, !dbg !14357
  %12 = load ptr, ptr %trans, align 8, !dbg !14357, !tbaa !2058
  %13 = load i32, ptr %transnr, align 4, !dbg !14358, !tbaa !1767
  %idxprom = sext i32 %13 to i64, !dbg !14355
  %arrayidx = getelementptr inbounds %struct._xmlRegTrans, ptr %12, i64 %idxprom, !dbg !14355
  store ptr %arrayidx, ptr %t1, align 8, !dbg !14359, !tbaa !1527
  %14 = load ptr, ptr %t1, align 8, !dbg !14360, !tbaa !1527
  %atom8 = getelementptr inbounds %struct._xmlRegTrans, ptr %14, i32 0, i32 0, !dbg !14362
  %15 = load ptr, ptr %atom8, align 8, !dbg !14362, !tbaa !2072
  %cmp9 = icmp eq ptr %15, null, !dbg !14363
  br i1 %cmp9, label %if.then10, label %if.end22, !dbg !14364

if.then10:                                        ; preds = %for.body
  %16 = load ptr, ptr %t1, align 8, !dbg !14365, !tbaa !1527
  %to11 = getelementptr inbounds %struct._xmlRegTrans, ptr %16, i32 0, i32 1, !dbg !14368
  %17 = load i32, ptr %to11, align 8, !dbg !14368, !tbaa !2065
  %cmp12 = icmp slt i32 %17, 0, !dbg !14369
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !14370

if.then13:                                        ; preds = %if.then10
  br label %for.inc, !dbg !14371

if.end14:                                         ; preds = %if.then10
  %18 = load ptr, ptr %state.addr, align 8, !dbg !14372, !tbaa !1527
  %markd15 = getelementptr inbounds %struct._xmlAutomataState, ptr %18, i32 0, i32 2, !dbg !14373
  store i32 2, ptr %markd15, align 8, !dbg !14374, !tbaa !14332
  %19 = load ptr, ptr %ctxt.addr, align 8, !dbg !14375, !tbaa !1527
  %20 = load ptr, ptr %ctxt.addr, align 8, !dbg !14376, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlAutomata, ptr %20, i32 0, i32 13, !dbg !14377
  %21 = load ptr, ptr %states, align 8, !dbg !14377, !tbaa !4343
  %22 = load ptr, ptr %t1, align 8, !dbg !14378, !tbaa !1527
  %to16 = getelementptr inbounds %struct._xmlRegTrans, ptr %22, i32 0, i32 1, !dbg !14379
  %23 = load i32, ptr %to16, align 8, !dbg !14379, !tbaa !2065
  %idxprom17 = sext i32 %23 to i64, !dbg !14376
  %arrayidx18 = getelementptr inbounds ptr, ptr %21, i64 %idxprom17, !dbg !14376
  %24 = load ptr, ptr %arrayidx18, align 8, !dbg !14376, !tbaa !1527
  %25 = load i32, ptr %to.addr, align 4, !dbg !14380, !tbaa !1767
  %26 = load ptr, ptr %atom.addr, align 8, !dbg !14381, !tbaa !1527
  %call = call i32 @xmlFARecurseDeterminism(ptr noundef %19, ptr noundef %24, i32 noundef %25, ptr noundef %26), !dbg !14382
  store i32 %call, ptr %res, align 4, !dbg !14383, !tbaa !1767
  %27 = load i32, ptr %res, align 4, !dbg !14384, !tbaa !1767
  %cmp19 = icmp eq i32 %27, 0, !dbg !14386
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !14387

if.then20:                                        ; preds = %if.end14
  store i32 0, ptr %ret, align 4, !dbg !14388, !tbaa !1767
  br label %if.end21, !dbg !14390

if.end21:                                         ; preds = %if.then20, %if.end14
  br label %for.inc, !dbg !14391

if.end22:                                         ; preds = %for.body
  %28 = load ptr, ptr %t1, align 8, !dbg !14392, !tbaa !1527
  %to23 = getelementptr inbounds %struct._xmlRegTrans, ptr %28, i32 0, i32 1, !dbg !14394
  %29 = load i32, ptr %to23, align 8, !dbg !14394, !tbaa !2065
  %30 = load i32, ptr %to.addr, align 4, !dbg !14395, !tbaa !1767
  %cmp24 = icmp ne i32 %29, %30, !dbg !14396
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !14397

if.then25:                                        ; preds = %if.end22
  br label %for.inc, !dbg !14398

if.end26:                                         ; preds = %if.end22
  %31 = load ptr, ptr %t1, align 8, !dbg !14399, !tbaa !1527
  %atom27 = getelementptr inbounds %struct._xmlRegTrans, ptr %31, i32 0, i32 0, !dbg !14401
  %32 = load ptr, ptr %atom27, align 8, !dbg !14401, !tbaa !2072
  %33 = load ptr, ptr %atom.addr, align 8, !dbg !14402, !tbaa !1527
  %34 = load i32, ptr %deep, align 4, !dbg !14403, !tbaa !1767
  %call28 = call i32 @xmlFACompareAtoms(ptr noundef %32, ptr noundef %33, i32 noundef %34), !dbg !14404
  %tobool29 = icmp ne i32 %call28, 0, !dbg !14404
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !14405

if.then30:                                        ; preds = %if.end26
  store i32 0, ptr %ret, align 4, !dbg !14406, !tbaa !1767
  %35 = load ptr, ptr %t1, align 8, !dbg !14408, !tbaa !1527
  %nd = getelementptr inbounds %struct._xmlRegTrans, ptr %35, i32 0, i32 4, !dbg !14409
  store i32 1, ptr %nd, align 4, !dbg !14410, !tbaa !6346
  br label %if.end31, !dbg !14411

if.end31:                                         ; preds = %if.then30, %if.end26
  br label %for.inc, !dbg !14412

for.inc:                                          ; preds = %if.end31, %if.then25, %if.end21, %if.then13
  %36 = load i32, ptr %transnr, align 4, !dbg !14413, !tbaa !1767
  %inc = add nsw i32 %36, 1, !dbg !14413
  store i32 %inc, ptr %transnr, align 4, !dbg !14413, !tbaa !1767
  br label %for.cond, !dbg !14414, !llvm.loop !14415

for.end:                                          ; preds = %for.cond
  %37 = load i32, ptr %ret, align 4, !dbg !14417, !tbaa !1767
  store i32 %37, ptr %retval, align 4, !dbg !14418
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14418

cleanup:                                          ; preds = %for.end, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %deep) #8, !dbg !14419
  call void @llvm.lifetime.end.p0(i64 8, ptr %t1) #8, !dbg !14419
  call void @llvm.lifetime.end.p0(i64 4, ptr %nbTrans) #8, !dbg !14419
  call void @llvm.lifetime.end.p0(i64 4, ptr %transnr) #8, !dbg !14419
  call void @llvm.lifetime.end.p0(i64 4, ptr %res) #8, !dbg !14419
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !14419
  %38 = load i32, ptr %retval, align 4, !dbg !14419
  ret i32 %38, !dbg !14419
}

; Function Attrs: nounwind uwtable
define internal void @xmlFAFinishRecurseDeterminism(ptr noundef %ctxt, ptr noundef %state) #0 !dbg !14420 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %state.addr = alloca ptr, align 8
  %transnr = alloca i32, align 4
  %nbTrans = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %t1 = alloca ptr, align 8
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !14424, metadata !DIExpression()), !dbg !14432
  store ptr %state, ptr %state.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %state.addr, metadata !14425, metadata !DIExpression()), !dbg !14433
  call void @llvm.lifetime.start.p0(i64 4, ptr %transnr) #8, !dbg !14434
  tail call void @llvm.dbg.declare(metadata ptr %transnr, metadata !14426, metadata !DIExpression()), !dbg !14435
  call void @llvm.lifetime.start.p0(i64 4, ptr %nbTrans) #8, !dbg !14434
  tail call void @llvm.dbg.declare(metadata ptr %nbTrans, metadata !14427, metadata !DIExpression()), !dbg !14436
  %0 = load ptr, ptr %state.addr, align 8, !dbg !14437, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !14439
  br i1 %cmp, label %if.then, label %if.end, !dbg !14440

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14441

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %state.addr, align 8, !dbg !14442, !tbaa !1527
  %markd = getelementptr inbounds %struct._xmlAutomataState, ptr %1, i32 0, i32 2, !dbg !14444
  %2 = load i32, ptr %markd, align 8, !dbg !14444, !tbaa !14332
  %cmp1 = icmp ne i32 %2, 2, !dbg !14445
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !14446

if.then2:                                         ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14447

if.end3:                                          ; preds = %if.end
  %3 = load ptr, ptr %state.addr, align 8, !dbg !14448, !tbaa !1527
  %markd4 = getelementptr inbounds %struct._xmlAutomataState, ptr %3, i32 0, i32 2, !dbg !14449
  store i32 0, ptr %markd4, align 8, !dbg !14450, !tbaa !14332
  %4 = load ptr, ptr %state.addr, align 8, !dbg !14451, !tbaa !1527
  %nbTrans5 = getelementptr inbounds %struct._xmlAutomataState, ptr %4, i32 0, i32 6, !dbg !14452
  %5 = load i32, ptr %nbTrans5, align 8, !dbg !14452, !tbaa !2052
  store i32 %5, ptr %nbTrans, align 4, !dbg !14453, !tbaa !1767
  store i32 0, ptr %transnr, align 4, !dbg !14454, !tbaa !1767
  br label %for.cond, !dbg !14455

for.cond:                                         ; preds = %for.inc, %if.end3
  %6 = load i32, ptr %transnr, align 4, !dbg !14456, !tbaa !1767
  %7 = load i32, ptr %nbTrans, align 4, !dbg !14457, !tbaa !1767
  %cmp6 = icmp slt i32 %6, %7, !dbg !14458
  br i1 %cmp6, label %for.body, label %for.end, !dbg !14459

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %t1) #8, !dbg !14460
  tail call void @llvm.dbg.declare(metadata ptr %t1, metadata !14428, metadata !DIExpression()), !dbg !14461
  %8 = load ptr, ptr %state.addr, align 8, !dbg !14462, !tbaa !1527
  %trans = getelementptr inbounds %struct._xmlAutomataState, ptr %8, i32 0, i32 7, !dbg !14463
  %9 = load ptr, ptr %trans, align 8, !dbg !14463, !tbaa !2058
  %10 = load i32, ptr %transnr, align 4, !dbg !14464, !tbaa !1767
  %idxprom = sext i32 %10 to i64, !dbg !14462
  %arrayidx = getelementptr inbounds %struct._xmlRegTrans, ptr %9, i64 %idxprom, !dbg !14462
  store ptr %arrayidx, ptr %t1, align 8, !dbg !14461, !tbaa !1527
  %11 = load ptr, ptr %t1, align 8, !dbg !14465, !tbaa !1527
  %atom = getelementptr inbounds %struct._xmlRegTrans, ptr %11, i32 0, i32 0, !dbg !14467
  %12 = load ptr, ptr %atom, align 8, !dbg !14467, !tbaa !2072
  %cmp7 = icmp eq ptr %12, null, !dbg !14468
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !14469

land.lhs.true:                                    ; preds = %for.body
  %13 = load ptr, ptr %t1, align 8, !dbg !14470, !tbaa !1527
  %to = getelementptr inbounds %struct._xmlRegTrans, ptr %13, i32 0, i32 1, !dbg !14471
  %14 = load i32, ptr %to, align 8, !dbg !14471, !tbaa !2065
  %cmp8 = icmp sge i32 %14, 0, !dbg !14472
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !14473

if.then9:                                         ; preds = %land.lhs.true
  %15 = load ptr, ptr %ctxt.addr, align 8, !dbg !14474, !tbaa !1527
  %16 = load ptr, ptr %ctxt.addr, align 8, !dbg !14475, !tbaa !1527
  %states = getelementptr inbounds %struct._xmlAutomata, ptr %16, i32 0, i32 13, !dbg !14476
  %17 = load ptr, ptr %states, align 8, !dbg !14476, !tbaa !4343
  %18 = load ptr, ptr %t1, align 8, !dbg !14477, !tbaa !1527
  %to10 = getelementptr inbounds %struct._xmlRegTrans, ptr %18, i32 0, i32 1, !dbg !14478
  %19 = load i32, ptr %to10, align 8, !dbg !14478, !tbaa !2065
  %idxprom11 = sext i32 %19 to i64, !dbg !14475
  %arrayidx12 = getelementptr inbounds ptr, ptr %17, i64 %idxprom11, !dbg !14475
  %20 = load ptr, ptr %arrayidx12, align 8, !dbg !14475, !tbaa !1527
  call void @xmlFAFinishRecurseDeterminism(ptr noundef %15, ptr noundef %20), !dbg !14479
  br label %if.end13, !dbg !14479

if.end13:                                         ; preds = %if.then9, %land.lhs.true, %for.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %t1) #8, !dbg !14480
  br label %for.inc, !dbg !14481

for.inc:                                          ; preds = %if.end13
  %21 = load i32, ptr %transnr, align 4, !dbg !14482, !tbaa !1767
  %inc = add nsw i32 %21, 1, !dbg !14482
  store i32 %inc, ptr %transnr, align 4, !dbg !14482, !tbaa !1767
  br label %for.cond, !dbg !14483, !llvm.loop !14484

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !14486
  br label %cleanup, !dbg !14486

cleanup:                                          ; preds = %for.end, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %nbTrans) #8, !dbg !14486
  call void @llvm.lifetime.end.p0(i64 4, ptr %transnr) #8, !dbg !14486
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !14486

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @xmlFACompareAtomTypes(i32 noundef %type1, i32 noundef %type2) #0 !dbg !14487 {
entry:
  %retval = alloca i32, align 4
  %type1.addr = alloca i32, align 4
  %type2.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %type1, ptr %type1.addr, align 4, !tbaa !2932
  tail call void @llvm.dbg.declare(metadata ptr %type1.addr, metadata !14491, metadata !DIExpression()), !dbg !14496
  store i32 %type2, ptr %type2.addr, align 4, !tbaa !2932
  tail call void @llvm.dbg.declare(metadata ptr %type2.addr, metadata !14492, metadata !DIExpression()), !dbg !14497
  %0 = load i32, ptr %type1.addr, align 4, !dbg !14498, !tbaa !2932
  %cmp = icmp eq i32 %0, 1, !dbg !14500
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14501

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, ptr %type1.addr, align 4, !dbg !14502, !tbaa !2932
  %cmp1 = icmp eq i32 %1, 2, !dbg !14503
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !14504

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, ptr %type1.addr, align 4, !dbg !14505, !tbaa !2932
  %cmp3 = icmp eq i32 %2, 3, !dbg !14506
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !14507

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, ptr %type1.addr, align 4, !dbg !14508, !tbaa !2932
  %cmp5 = icmp eq i32 %3, 4, !dbg !14509
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !14510

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %4 = load i32, ptr %type1.addr, align 4, !dbg !14511, !tbaa !2932
  %cmp7 = icmp eq i32 %4, 5, !dbg !14512
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !14513

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %5 = load i32, ptr %type1.addr, align 4, !dbg !14514, !tbaa !2932
  %cmp9 = icmp eq i32 %5, 6, !dbg !14515
  br i1 %cmp9, label %if.then, label %if.end, !dbg !14516

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 1, ptr %retval, align 4, !dbg !14517
  br label %return, !dbg !14517

if.end:                                           ; preds = %lor.lhs.false8
  %6 = load i32, ptr %type2.addr, align 4, !dbg !14518, !tbaa !2932
  %cmp10 = icmp eq i32 %6, 1, !dbg !14520
  br i1 %cmp10, label %if.then21, label %lor.lhs.false11, !dbg !14521

lor.lhs.false11:                                  ; preds = %if.end
  %7 = load i32, ptr %type2.addr, align 4, !dbg !14522, !tbaa !2932
  %cmp12 = icmp eq i32 %7, 2, !dbg !14523
  br i1 %cmp12, label %if.then21, label %lor.lhs.false13, !dbg !14524

lor.lhs.false13:                                  ; preds = %lor.lhs.false11
  %8 = load i32, ptr %type2.addr, align 4, !dbg !14525, !tbaa !2932
  %cmp14 = icmp eq i32 %8, 3, !dbg !14526
  br i1 %cmp14, label %if.then21, label %lor.lhs.false15, !dbg !14527

lor.lhs.false15:                                  ; preds = %lor.lhs.false13
  %9 = load i32, ptr %type2.addr, align 4, !dbg !14528, !tbaa !2932
  %cmp16 = icmp eq i32 %9, 4, !dbg !14529
  br i1 %cmp16, label %if.then21, label %lor.lhs.false17, !dbg !14530

lor.lhs.false17:                                  ; preds = %lor.lhs.false15
  %10 = load i32, ptr %type2.addr, align 4, !dbg !14531, !tbaa !2932
  %cmp18 = icmp eq i32 %10, 5, !dbg !14532
  br i1 %cmp18, label %if.then21, label %lor.lhs.false19, !dbg !14533

lor.lhs.false19:                                  ; preds = %lor.lhs.false17
  %11 = load i32, ptr %type2.addr, align 4, !dbg !14534, !tbaa !2932
  %cmp20 = icmp eq i32 %11, 6, !dbg !14535
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !14536

if.then21:                                        ; preds = %lor.lhs.false19, %lor.lhs.false17, %lor.lhs.false15, %lor.lhs.false13, %lor.lhs.false11, %if.end
  store i32 1, ptr %retval, align 4, !dbg !14537
  br label %return, !dbg !14537

if.end22:                                         ; preds = %lor.lhs.false19
  %12 = load i32, ptr %type1.addr, align 4, !dbg !14538, !tbaa !2932
  %13 = load i32, ptr %type2.addr, align 4, !dbg !14540, !tbaa !2932
  %cmp23 = icmp eq i32 %12, %13, !dbg !14541
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !14542

if.then24:                                        ; preds = %if.end22
  store i32 1, ptr %retval, align 4, !dbg !14543
  br label %return, !dbg !14543

if.end25:                                         ; preds = %if.end22
  %14 = load i32, ptr %type1.addr, align 4, !dbg !14544, !tbaa !2932
  %15 = load i32, ptr %type2.addr, align 4, !dbg !14545, !tbaa !2932
  %cmp26 = icmp ugt i32 %14, %15, !dbg !14546
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !14547

if.then27:                                        ; preds = %if.end25
  call void @llvm.lifetime.start.p0(i64 4, ptr %tmp) #8, !dbg !14548
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !14493, metadata !DIExpression()), !dbg !14549
  %16 = load i32, ptr %type1.addr, align 4, !dbg !14550, !tbaa !2932
  store i32 %16, ptr %tmp, align 4, !dbg !14549, !tbaa !2932
  %17 = load i32, ptr %type2.addr, align 4, !dbg !14551, !tbaa !2932
  store i32 %17, ptr %type1.addr, align 4, !dbg !14552, !tbaa !2932
  %18 = load i32, ptr %tmp, align 4, !dbg !14553, !tbaa !2932
  store i32 %18, ptr %type2.addr, align 4, !dbg !14554, !tbaa !2932
  call void @llvm.lifetime.end.p0(i64 4, ptr %tmp) #8, !dbg !14555
  br label %if.end28, !dbg !14556

if.end28:                                         ; preds = %if.then27, %if.end25
  %19 = load i32, ptr %type1.addr, align 4, !dbg !14557, !tbaa !2932
  switch i32 %19, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.epilog
    i32 9, label %sw.bb51
    i32 10, label %sw.epilog
    i32 11, label %sw.bb79
    i32 12, label %sw.epilog
    i32 13, label %sw.bb103
    i32 14, label %sw.epilog
    i32 15, label %sw.bb133
    i32 16, label %sw.epilog
    i32 100, label %sw.bb157
    i32 101, label %sw.bb161
    i32 102, label %sw.bb161
    i32 103, label %sw.bb161
    i32 104, label %sw.bb161
    i32 105, label %sw.bb161
    i32 106, label %sw.bb162
    i32 107, label %sw.bb166
    i32 108, label %sw.bb166
    i32 109, label %sw.bb166
    i32 110, label %sw.bb167
    i32 111, label %sw.bb171
    i32 112, label %sw.bb171
    i32 113, label %sw.bb171
    i32 114, label %sw.bb172
    i32 115, label %sw.bb176
    i32 116, label %sw.bb176
    i32 117, label %sw.bb176
    i32 118, label %sw.bb176
    i32 119, label %sw.bb176
    i32 120, label %sw.bb176
    i32 121, label %sw.bb176
    i32 122, label %sw.bb177
    i32 123, label %sw.bb181
    i32 124, label %sw.bb181
    i32 125, label %sw.bb181
    i32 126, label %sw.bb182
    i32 127, label %sw.bb186
    i32 128, label %sw.bb186
    i32 129, label %sw.bb186
    i32 130, label %sw.bb186
    i32 131, label %sw.bb187
    i32 132, label %sw.bb191
    i32 133, label %sw.bb191
    i32 134, label %sw.bb191
    i32 135, label %sw.bb191
  ], !dbg !14558

sw.bb:                                            ; preds = %if.end28
  %20 = load i32, ptr %type2.addr, align 4, !dbg !14559, !tbaa !2932
  %cmp29 = icmp eq i32 %20, 8, !dbg !14562
  br i1 %cmp29, label %if.then49, label %lor.lhs.false30, !dbg !14563

lor.lhs.false30:                                  ; preds = %sw.bb
  %21 = load i32, ptr %type2.addr, align 4, !dbg !14564, !tbaa !2932
  %cmp31 = icmp uge i32 %21, 100, !dbg !14565
  br i1 %cmp31, label %land.lhs.true, label %lor.lhs.false33, !dbg !14566

land.lhs.true:                                    ; preds = %lor.lhs.false30
  %22 = load i32, ptr %type2.addr, align 4, !dbg !14567, !tbaa !2932
  %cmp32 = icmp ule i32 %22, 105, !dbg !14568
  br i1 %cmp32, label %if.then49, label %lor.lhs.false33, !dbg !14569

lor.lhs.false33:                                  ; preds = %land.lhs.true, %lor.lhs.false30
  %23 = load i32, ptr %type2.addr, align 4, !dbg !14570, !tbaa !2932
  %cmp34 = icmp uge i32 %23, 110, !dbg !14571
  br i1 %cmp34, label %land.lhs.true35, label %lor.lhs.false37, !dbg !14572

land.lhs.true35:                                  ; preds = %lor.lhs.false33
  %24 = load i32, ptr %type2.addr, align 4, !dbg !14573, !tbaa !2932
  %cmp36 = icmp ule i32 %24, 113, !dbg !14574
  br i1 %cmp36, label %if.then49, label %lor.lhs.false37, !dbg !14575

lor.lhs.false37:                                  ; preds = %land.lhs.true35, %lor.lhs.false33
  %25 = load i32, ptr %type2.addr, align 4, !dbg !14576, !tbaa !2932
  %cmp38 = icmp uge i32 %25, 106, !dbg !14577
  br i1 %cmp38, label %land.lhs.true39, label %lor.lhs.false41, !dbg !14578

land.lhs.true39:                                  ; preds = %lor.lhs.false37
  %26 = load i32, ptr %type2.addr, align 4, !dbg !14579, !tbaa !2932
  %cmp40 = icmp ule i32 %26, 109, !dbg !14580
  br i1 %cmp40, label %if.then49, label %lor.lhs.false41, !dbg !14581

lor.lhs.false41:                                  ; preds = %land.lhs.true39, %lor.lhs.false37
  %27 = load i32, ptr %type2.addr, align 4, !dbg !14582, !tbaa !2932
  %cmp42 = icmp uge i32 %27, 114, !dbg !14583
  br i1 %cmp42, label %land.lhs.true43, label %lor.lhs.false45, !dbg !14584

land.lhs.true43:                                  ; preds = %lor.lhs.false41
  %28 = load i32, ptr %type2.addr, align 4, !dbg !14585, !tbaa !2932
  %cmp44 = icmp ule i32 %28, 121, !dbg !14586
  br i1 %cmp44, label %if.then49, label %lor.lhs.false45, !dbg !14587

lor.lhs.false45:                                  ; preds = %land.lhs.true43, %lor.lhs.false41
  %29 = load i32, ptr %type2.addr, align 4, !dbg !14588, !tbaa !2932
  %cmp46 = icmp uge i32 %29, 126, !dbg !14589
  br i1 %cmp46, label %land.lhs.true47, label %if.end50, !dbg !14590

land.lhs.true47:                                  ; preds = %lor.lhs.false45
  %30 = load i32, ptr %type2.addr, align 4, !dbg !14591, !tbaa !2932
  %cmp48 = icmp ule i32 %30, 130, !dbg !14592
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !14593

if.then49:                                        ; preds = %land.lhs.true47, %land.lhs.true43, %land.lhs.true39, %land.lhs.true35, %land.lhs.true, %sw.bb
  store i32 0, ptr %retval, align 4, !dbg !14594
  br label %return, !dbg !14594

if.end50:                                         ; preds = %land.lhs.true47, %lor.lhs.false45
  br label %sw.epilog, !dbg !14595

sw.bb51:                                          ; preds = %if.end28
  %31 = load i32, ptr %type2.addr, align 4, !dbg !14596, !tbaa !2932
  %cmp52 = icmp eq i32 %31, 10, !dbg !14598
  br i1 %cmp52, label %if.then77, label %lor.lhs.false53, !dbg !14599

lor.lhs.false53:                                  ; preds = %sw.bb51
  %32 = load i32, ptr %type2.addr, align 4, !dbg !14600, !tbaa !2932
  %cmp54 = icmp uge i32 %32, 110, !dbg !14601
  br i1 %cmp54, label %land.lhs.true55, label %lor.lhs.false57, !dbg !14602

land.lhs.true55:                                  ; preds = %lor.lhs.false53
  %33 = load i32, ptr %type2.addr, align 4, !dbg !14603, !tbaa !2932
  %cmp56 = icmp ule i32 %33, 113, !dbg !14604
  br i1 %cmp56, label %if.then77, label %lor.lhs.false57, !dbg !14605

lor.lhs.false57:                                  ; preds = %land.lhs.true55, %lor.lhs.false53
  %34 = load i32, ptr %type2.addr, align 4, !dbg !14606, !tbaa !2932
  %cmp58 = icmp uge i32 %34, 106, !dbg !14607
  br i1 %cmp58, label %land.lhs.true59, label %lor.lhs.false61, !dbg !14608

land.lhs.true59:                                  ; preds = %lor.lhs.false57
  %35 = load i32, ptr %type2.addr, align 4, !dbg !14609, !tbaa !2932
  %cmp60 = icmp ule i32 %35, 109, !dbg !14610
  br i1 %cmp60, label %if.then77, label %lor.lhs.false61, !dbg !14611

lor.lhs.false61:                                  ; preds = %land.lhs.true59, %lor.lhs.false57
  %36 = load i32, ptr %type2.addr, align 4, !dbg !14612, !tbaa !2932
  %cmp62 = icmp uge i32 %36, 122, !dbg !14613
  br i1 %cmp62, label %land.lhs.true63, label %lor.lhs.false65, !dbg !14614

land.lhs.true63:                                  ; preds = %lor.lhs.false61
  %37 = load i32, ptr %type2.addr, align 4, !dbg !14615, !tbaa !2932
  %cmp64 = icmp ule i32 %37, 125, !dbg !14616
  br i1 %cmp64, label %if.then77, label %lor.lhs.false65, !dbg !14617

lor.lhs.false65:                                  ; preds = %land.lhs.true63, %lor.lhs.false61
  %38 = load i32, ptr %type2.addr, align 4, !dbg !14618, !tbaa !2932
  %cmp66 = icmp uge i32 %38, 114, !dbg !14619
  br i1 %cmp66, label %land.lhs.true67, label %lor.lhs.false69, !dbg !14620

land.lhs.true67:                                  ; preds = %lor.lhs.false65
  %39 = load i32, ptr %type2.addr, align 4, !dbg !14621, !tbaa !2932
  %cmp68 = icmp ule i32 %39, 121, !dbg !14622
  br i1 %cmp68, label %if.then77, label %lor.lhs.false69, !dbg !14623

lor.lhs.false69:                                  ; preds = %land.lhs.true67, %lor.lhs.false65
  %40 = load i32, ptr %type2.addr, align 4, !dbg !14624, !tbaa !2932
  %cmp70 = icmp uge i32 %40, 126, !dbg !14625
  br i1 %cmp70, label %land.lhs.true71, label %lor.lhs.false73, !dbg !14626

land.lhs.true71:                                  ; preds = %lor.lhs.false69
  %41 = load i32, ptr %type2.addr, align 4, !dbg !14627, !tbaa !2932
  %cmp72 = icmp ule i32 %41, 130, !dbg !14628
  br i1 %cmp72, label %if.then77, label %lor.lhs.false73, !dbg !14629

lor.lhs.false73:                                  ; preds = %land.lhs.true71, %lor.lhs.false69
  %42 = load i32, ptr %type2.addr, align 4, !dbg !14630, !tbaa !2932
  %cmp74 = icmp uge i32 %42, 131, !dbg !14631
  br i1 %cmp74, label %land.lhs.true75, label %if.end78, !dbg !14632

land.lhs.true75:                                  ; preds = %lor.lhs.false73
  %43 = load i32, ptr %type2.addr, align 4, !dbg !14633, !tbaa !2932
  %cmp76 = icmp ule i32 %43, 135, !dbg !14634
  br i1 %cmp76, label %if.then77, label %if.end78, !dbg !14635

if.then77:                                        ; preds = %land.lhs.true75, %land.lhs.true71, %land.lhs.true67, %land.lhs.true63, %land.lhs.true59, %land.lhs.true55, %sw.bb51
  store i32 0, ptr %retval, align 4, !dbg !14636
  br label %return, !dbg !14636

if.end78:                                         ; preds = %land.lhs.true75, %lor.lhs.false73
  br label %sw.epilog, !dbg !14637

sw.bb79:                                          ; preds = %if.end28
  %44 = load i32, ptr %type2.addr, align 4, !dbg !14638, !tbaa !2932
  %cmp80 = icmp eq i32 %44, 12, !dbg !14640
  br i1 %cmp80, label %if.then101, label %lor.lhs.false81, !dbg !14641

lor.lhs.false81:                                  ; preds = %sw.bb79
  %45 = load i32, ptr %type2.addr, align 4, !dbg !14642, !tbaa !2932
  %cmp82 = icmp uge i32 %45, 106, !dbg !14643
  br i1 %cmp82, label %land.lhs.true83, label %lor.lhs.false85, !dbg !14644

land.lhs.true83:                                  ; preds = %lor.lhs.false81
  %46 = load i32, ptr %type2.addr, align 4, !dbg !14645, !tbaa !2932
  %cmp84 = icmp ule i32 %46, 109, !dbg !14646
  br i1 %cmp84, label %if.then101, label %lor.lhs.false85, !dbg !14647

lor.lhs.false85:                                  ; preds = %land.lhs.true83, %lor.lhs.false81
  %47 = load i32, ptr %type2.addr, align 4, !dbg !14648, !tbaa !2932
  %cmp86 = icmp uge i32 %47, 114, !dbg !14649
  br i1 %cmp86, label %land.lhs.true87, label %lor.lhs.false89, !dbg !14650

land.lhs.true87:                                  ; preds = %lor.lhs.false85
  %48 = load i32, ptr %type2.addr, align 4, !dbg !14651, !tbaa !2932
  %cmp88 = icmp ule i32 %48, 121, !dbg !14652
  br i1 %cmp88, label %if.then101, label %lor.lhs.false89, !dbg !14653

lor.lhs.false89:                                  ; preds = %land.lhs.true87, %lor.lhs.false85
  %49 = load i32, ptr %type2.addr, align 4, !dbg !14654, !tbaa !2932
  %cmp90 = icmp uge i32 %49, 122, !dbg !14655
  br i1 %cmp90, label %land.lhs.true91, label %lor.lhs.false93, !dbg !14656

land.lhs.true91:                                  ; preds = %lor.lhs.false89
  %50 = load i32, ptr %type2.addr, align 4, !dbg !14657, !tbaa !2932
  %cmp92 = icmp ule i32 %50, 125, !dbg !14658
  br i1 %cmp92, label %if.then101, label %lor.lhs.false93, !dbg !14659

lor.lhs.false93:                                  ; preds = %land.lhs.true91, %lor.lhs.false89
  %51 = load i32, ptr %type2.addr, align 4, !dbg !14660, !tbaa !2932
  %cmp94 = icmp uge i32 %51, 126, !dbg !14661
  br i1 %cmp94, label %land.lhs.true95, label %lor.lhs.false97, !dbg !14662

land.lhs.true95:                                  ; preds = %lor.lhs.false93
  %52 = load i32, ptr %type2.addr, align 4, !dbg !14663, !tbaa !2932
  %cmp96 = icmp ule i32 %52, 130, !dbg !14664
  br i1 %cmp96, label %if.then101, label %lor.lhs.false97, !dbg !14665

lor.lhs.false97:                                  ; preds = %land.lhs.true95, %lor.lhs.false93
  %53 = load i32, ptr %type2.addr, align 4, !dbg !14666, !tbaa !2932
  %cmp98 = icmp uge i32 %53, 131, !dbg !14667
  br i1 %cmp98, label %land.lhs.true99, label %if.end102, !dbg !14668

land.lhs.true99:                                  ; preds = %lor.lhs.false97
  %54 = load i32, ptr %type2.addr, align 4, !dbg !14669, !tbaa !2932
  %cmp100 = icmp ule i32 %54, 135, !dbg !14670
  br i1 %cmp100, label %if.then101, label %if.end102, !dbg !14671

if.then101:                                       ; preds = %land.lhs.true99, %land.lhs.true95, %land.lhs.true91, %land.lhs.true87, %land.lhs.true83, %sw.bb79
  store i32 0, ptr %retval, align 4, !dbg !14672
  br label %return, !dbg !14672

if.end102:                                        ; preds = %land.lhs.true99, %lor.lhs.false97
  br label %sw.epilog, !dbg !14673

sw.bb103:                                         ; preds = %if.end28
  %55 = load i32, ptr %type2.addr, align 4, !dbg !14674, !tbaa !2932
  %cmp104 = icmp eq i32 %55, 14, !dbg !14676
  br i1 %cmp104, label %if.then131, label %lor.lhs.false105, !dbg !14677

lor.lhs.false105:                                 ; preds = %sw.bb103
  %56 = load i32, ptr %type2.addr, align 4, !dbg !14678, !tbaa !2932
  %cmp106 = icmp eq i32 %56, 15, !dbg !14679
  br i1 %cmp106, label %if.then131, label %lor.lhs.false107, !dbg !14680

lor.lhs.false107:                                 ; preds = %lor.lhs.false105
  %57 = load i32, ptr %type2.addr, align 4, !dbg !14681, !tbaa !2932
  %cmp108 = icmp uge i32 %57, 100, !dbg !14682
  br i1 %cmp108, label %land.lhs.true109, label %lor.lhs.false111, !dbg !14683

land.lhs.true109:                                 ; preds = %lor.lhs.false107
  %58 = load i32, ptr %type2.addr, align 4, !dbg !14684, !tbaa !2932
  %cmp110 = icmp ule i32 %58, 105, !dbg !14685
  br i1 %cmp110, label %if.then131, label %lor.lhs.false111, !dbg !14686

lor.lhs.false111:                                 ; preds = %land.lhs.true109, %lor.lhs.false107
  %59 = load i32, ptr %type2.addr, align 4, !dbg !14687, !tbaa !2932
  %cmp112 = icmp uge i32 %59, 106, !dbg !14688
  br i1 %cmp112, label %land.lhs.true113, label %lor.lhs.false115, !dbg !14689

land.lhs.true113:                                 ; preds = %lor.lhs.false111
  %60 = load i32, ptr %type2.addr, align 4, !dbg !14690, !tbaa !2932
  %cmp114 = icmp ule i32 %60, 109, !dbg !14691
  br i1 %cmp114, label %if.then131, label %lor.lhs.false115, !dbg !14692

lor.lhs.false115:                                 ; preds = %land.lhs.true113, %lor.lhs.false111
  %61 = load i32, ptr %type2.addr, align 4, !dbg !14693, !tbaa !2932
  %cmp116 = icmp uge i32 %61, 114, !dbg !14694
  br i1 %cmp116, label %land.lhs.true117, label %lor.lhs.false119, !dbg !14695

land.lhs.true117:                                 ; preds = %lor.lhs.false115
  %62 = load i32, ptr %type2.addr, align 4, !dbg !14696, !tbaa !2932
  %cmp118 = icmp ule i32 %62, 121, !dbg !14697
  br i1 %cmp118, label %if.then131, label %lor.lhs.false119, !dbg !14698

lor.lhs.false119:                                 ; preds = %land.lhs.true117, %lor.lhs.false115
  %63 = load i32, ptr %type2.addr, align 4, !dbg !14699, !tbaa !2932
  %cmp120 = icmp uge i32 %63, 122, !dbg !14700
  br i1 %cmp120, label %land.lhs.true121, label %lor.lhs.false123, !dbg !14701

land.lhs.true121:                                 ; preds = %lor.lhs.false119
  %64 = load i32, ptr %type2.addr, align 4, !dbg !14702, !tbaa !2932
  %cmp122 = icmp ule i32 %64, 125, !dbg !14703
  br i1 %cmp122, label %if.then131, label %lor.lhs.false123, !dbg !14704

lor.lhs.false123:                                 ; preds = %land.lhs.true121, %lor.lhs.false119
  %65 = load i32, ptr %type2.addr, align 4, !dbg !14705, !tbaa !2932
  %cmp124 = icmp uge i32 %65, 126, !dbg !14706
  br i1 %cmp124, label %land.lhs.true125, label %lor.lhs.false127, !dbg !14707

land.lhs.true125:                                 ; preds = %lor.lhs.false123
  %66 = load i32, ptr %type2.addr, align 4, !dbg !14708, !tbaa !2932
  %cmp126 = icmp ule i32 %66, 130, !dbg !14709
  br i1 %cmp126, label %if.then131, label %lor.lhs.false127, !dbg !14710

lor.lhs.false127:                                 ; preds = %land.lhs.true125, %lor.lhs.false123
  %67 = load i32, ptr %type2.addr, align 4, !dbg !14711, !tbaa !2932
  %cmp128 = icmp uge i32 %67, 131, !dbg !14712
  br i1 %cmp128, label %land.lhs.true129, label %if.end132, !dbg !14713

land.lhs.true129:                                 ; preds = %lor.lhs.false127
  %68 = load i32, ptr %type2.addr, align 4, !dbg !14714, !tbaa !2932
  %cmp130 = icmp ule i32 %68, 135, !dbg !14715
  br i1 %cmp130, label %if.then131, label %if.end132, !dbg !14716

if.then131:                                       ; preds = %land.lhs.true129, %land.lhs.true125, %land.lhs.true121, %land.lhs.true117, %land.lhs.true113, %land.lhs.true109, %lor.lhs.false105, %sw.bb103
  store i32 0, ptr %retval, align 4, !dbg !14717
  br label %return, !dbg !14717

if.end132:                                        ; preds = %land.lhs.true129, %lor.lhs.false127
  br label %sw.epilog, !dbg !14718

sw.bb133:                                         ; preds = %if.end28
  %69 = load i32, ptr %type2.addr, align 4, !dbg !14719, !tbaa !2932
  %cmp134 = icmp eq i32 %69, 14, !dbg !14721
  br i1 %cmp134, label %if.then155, label %lor.lhs.false135, !dbg !14722

lor.lhs.false135:                                 ; preds = %sw.bb133
  %70 = load i32, ptr %type2.addr, align 4, !dbg !14723, !tbaa !2932
  %cmp136 = icmp uge i32 %70, 106, !dbg !14724
  br i1 %cmp136, label %land.lhs.true137, label %lor.lhs.false139, !dbg !14725

land.lhs.true137:                                 ; preds = %lor.lhs.false135
  %71 = load i32, ptr %type2.addr, align 4, !dbg !14726, !tbaa !2932
  %cmp138 = icmp ule i32 %71, 109, !dbg !14727
  br i1 %cmp138, label %if.then155, label %lor.lhs.false139, !dbg !14728

lor.lhs.false139:                                 ; preds = %land.lhs.true137, %lor.lhs.false135
  %72 = load i32, ptr %type2.addr, align 4, !dbg !14729, !tbaa !2932
  %cmp140 = icmp uge i32 %72, 114, !dbg !14730
  br i1 %cmp140, label %land.lhs.true141, label %lor.lhs.false143, !dbg !14731

land.lhs.true141:                                 ; preds = %lor.lhs.false139
  %73 = load i32, ptr %type2.addr, align 4, !dbg !14732, !tbaa !2932
  %cmp142 = icmp ule i32 %73, 121, !dbg !14733
  br i1 %cmp142, label %if.then155, label %lor.lhs.false143, !dbg !14734

lor.lhs.false143:                                 ; preds = %land.lhs.true141, %lor.lhs.false139
  %74 = load i32, ptr %type2.addr, align 4, !dbg !14735, !tbaa !2932
  %cmp144 = icmp uge i32 %74, 122, !dbg !14736
  br i1 %cmp144, label %land.lhs.true145, label %lor.lhs.false147, !dbg !14737

land.lhs.true145:                                 ; preds = %lor.lhs.false143
  %75 = load i32, ptr %type2.addr, align 4, !dbg !14738, !tbaa !2932
  %cmp146 = icmp ule i32 %75, 125, !dbg !14739
  br i1 %cmp146, label %if.then155, label %lor.lhs.false147, !dbg !14740

lor.lhs.false147:                                 ; preds = %land.lhs.true145, %lor.lhs.false143
  %76 = load i32, ptr %type2.addr, align 4, !dbg !14741, !tbaa !2932
  %cmp148 = icmp uge i32 %76, 126, !dbg !14742
  br i1 %cmp148, label %land.lhs.true149, label %lor.lhs.false151, !dbg !14743

land.lhs.true149:                                 ; preds = %lor.lhs.false147
  %77 = load i32, ptr %type2.addr, align 4, !dbg !14744, !tbaa !2932
  %cmp150 = icmp ule i32 %77, 130, !dbg !14745
  br i1 %cmp150, label %if.then155, label %lor.lhs.false151, !dbg !14746

lor.lhs.false151:                                 ; preds = %land.lhs.true149, %lor.lhs.false147
  %78 = load i32, ptr %type2.addr, align 4, !dbg !14747, !tbaa !2932
  %cmp152 = icmp uge i32 %78, 131, !dbg !14748
  br i1 %cmp152, label %land.lhs.true153, label %if.end156, !dbg !14749

land.lhs.true153:                                 ; preds = %lor.lhs.false151
  %79 = load i32, ptr %type2.addr, align 4, !dbg !14750, !tbaa !2932
  %cmp154 = icmp ule i32 %79, 135, !dbg !14751
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !14752

if.then155:                                       ; preds = %land.lhs.true153, %land.lhs.true149, %land.lhs.true145, %land.lhs.true141, %land.lhs.true137, %sw.bb133
  store i32 0, ptr %retval, align 4, !dbg !14753
  br label %return, !dbg !14753

if.end156:                                        ; preds = %land.lhs.true153, %lor.lhs.false151
  br label %sw.epilog, !dbg !14754

sw.bb157:                                         ; preds = %if.end28
  %80 = load i32, ptr %type2.addr, align 4, !dbg !14755, !tbaa !2932
  %cmp158 = icmp ule i32 %80, 105, !dbg !14757
  br i1 %cmp158, label %if.then159, label %if.end160, !dbg !14758

if.then159:                                       ; preds = %sw.bb157
  store i32 1, ptr %retval, align 4, !dbg !14759
  br label %return, !dbg !14759

if.end160:                                        ; preds = %sw.bb157
  store i32 0, ptr %retval, align 4, !dbg !14760
  br label %return, !dbg !14760

sw.bb161:                                         ; preds = %if.end28, %if.end28, %if.end28, %if.end28, %if.end28
  store i32 0, ptr %retval, align 4, !dbg !14761
  br label %return, !dbg !14761

sw.bb162:                                         ; preds = %if.end28
  %81 = load i32, ptr %type2.addr, align 4, !dbg !14762, !tbaa !2932
  %cmp163 = icmp ule i32 %81, 109, !dbg !14764
  br i1 %cmp163, label %if.then164, label %if.end165, !dbg !14765

if.then164:                                       ; preds = %sw.bb162
  store i32 1, ptr %retval, align 4, !dbg !14766
  br label %return, !dbg !14766

if.end165:                                        ; preds = %sw.bb162
  store i32 0, ptr %retval, align 4, !dbg !14767
  br label %return, !dbg !14767

sw.bb166:                                         ; preds = %if.end28, %if.end28, %if.end28
  store i32 0, ptr %retval, align 4, !dbg !14768
  br label %return, !dbg !14768

sw.bb167:                                         ; preds = %if.end28
  %82 = load i32, ptr %type2.addr, align 4, !dbg !14769, !tbaa !2932
  %cmp168 = icmp ule i32 %82, 113, !dbg !14771
  br i1 %cmp168, label %if.then169, label %if.end170, !dbg !14772

if.then169:                                       ; preds = %sw.bb167
  store i32 1, ptr %retval, align 4, !dbg !14773
  br label %return, !dbg !14773

if.end170:                                        ; preds = %sw.bb167
  store i32 0, ptr %retval, align 4, !dbg !14774
  br label %return, !dbg !14774

sw.bb171:                                         ; preds = %if.end28, %if.end28, %if.end28
  store i32 0, ptr %retval, align 4, !dbg !14775
  br label %return, !dbg !14775

sw.bb172:                                         ; preds = %if.end28
  %83 = load i32, ptr %type2.addr, align 4, !dbg !14776, !tbaa !2932
  %cmp173 = icmp ule i32 %83, 121, !dbg !14778
  br i1 %cmp173, label %if.then174, label %if.end175, !dbg !14779

if.then174:                                       ; preds = %sw.bb172
  store i32 1, ptr %retval, align 4, !dbg !14780
  br label %return, !dbg !14780

if.end175:                                        ; preds = %sw.bb172
  store i32 0, ptr %retval, align 4, !dbg !14781
  br label %return, !dbg !14781

sw.bb176:                                         ; preds = %if.end28, %if.end28, %if.end28, %if.end28, %if.end28, %if.end28, %if.end28
  store i32 0, ptr %retval, align 4, !dbg !14782
  br label %return, !dbg !14782

sw.bb177:                                         ; preds = %if.end28
  %84 = load i32, ptr %type2.addr, align 4, !dbg !14783, !tbaa !2932
  %cmp178 = icmp ule i32 %84, 125, !dbg !14785
  br i1 %cmp178, label %if.then179, label %if.end180, !dbg !14786

if.then179:                                       ; preds = %sw.bb177
  store i32 1, ptr %retval, align 4, !dbg !14787
  br label %return, !dbg !14787

if.end180:                                        ; preds = %sw.bb177
  store i32 0, ptr %retval, align 4, !dbg !14788
  br label %return, !dbg !14788

sw.bb181:                                         ; preds = %if.end28, %if.end28, %if.end28
  store i32 0, ptr %retval, align 4, !dbg !14789
  br label %return, !dbg !14789

sw.bb182:                                         ; preds = %if.end28
  %85 = load i32, ptr %type2.addr, align 4, !dbg !14790, !tbaa !2932
  %cmp183 = icmp ule i32 %85, 130, !dbg !14792
  br i1 %cmp183, label %if.then184, label %if.end185, !dbg !14793

if.then184:                                       ; preds = %sw.bb182
  store i32 1, ptr %retval, align 4, !dbg !14794
  br label %return, !dbg !14794

if.end185:                                        ; preds = %sw.bb182
  store i32 0, ptr %retval, align 4, !dbg !14795
  br label %return, !dbg !14795

sw.bb186:                                         ; preds = %if.end28, %if.end28, %if.end28, %if.end28
  store i32 0, ptr %retval, align 4, !dbg !14796
  br label %return, !dbg !14796

sw.bb187:                                         ; preds = %if.end28
  %86 = load i32, ptr %type2.addr, align 4, !dbg !14797, !tbaa !2932
  %cmp188 = icmp ule i32 %86, 135, !dbg !14799
  br i1 %cmp188, label %if.then189, label %if.end190, !dbg !14800

if.then189:                                       ; preds = %sw.bb187
  store i32 1, ptr %retval, align 4, !dbg !14801
  br label %return, !dbg !14801

if.end190:                                        ; preds = %sw.bb187
  store i32 0, ptr %retval, align 4, !dbg !14802
  br label %return, !dbg !14802

sw.bb191:                                         ; preds = %if.end28, %if.end28, %if.end28, %if.end28
  store i32 0, ptr %retval, align 4, !dbg !14803
  br label %return, !dbg !14803

sw.default:                                       ; preds = %if.end28
  br label %sw.epilog, !dbg !14804

sw.epilog:                                        ; preds = %sw.default, %if.end28, %if.end28, %if.end28, %if.end28, %if.end28, %if.end156, %if.end132, %if.end102, %if.end78, %if.end50
  store i32 1, ptr %retval, align 4, !dbg !14805
  br label %return, !dbg !14805

return:                                           ; preds = %sw.epilog, %sw.bb191, %if.end190, %if.then189, %sw.bb186, %if.end185, %if.then184, %sw.bb181, %if.end180, %if.then179, %sw.bb176, %if.end175, %if.then174, %sw.bb171, %if.end170, %if.then169, %sw.bb166, %if.end165, %if.then164, %sw.bb161, %if.end160, %if.then159, %if.then155, %if.then131, %if.then101, %if.then77, %if.then49, %if.then24, %if.then21, %if.then
  %87 = load i32, ptr %retval, align 4, !dbg !14806
  ret i32 %87, !dbg !14806
}

declare !dbg !14807 ptr @xmlStrchr(ptr noundef, i8 noundef zeroext) #5

; Function Attrs: nounwind uwtable
define internal i32 @xmlFACompareRanges(ptr noundef %range1, ptr noundef %range2) #0 !dbg !14810 {
entry:
  %retval = alloca i32, align 4
  %range1.addr = alloca ptr, align 8
  %range2.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %codepoint = alloca i32, align 4
  %neg = alloca i32, align 4
  store ptr %range1, ptr %range1.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %range1.addr, metadata !14814, metadata !DIExpression()), !dbg !14827
  store ptr %range2, ptr %range2.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %range2.addr, metadata !14815, metadata !DIExpression()), !dbg !14828
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !14829
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !14816, metadata !DIExpression()), !dbg !14830
  store i32 0, ptr %ret, align 4, !dbg !14830, !tbaa !1767
  %0 = load ptr, ptr %range1.addr, align 8, !dbg !14831, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlRegRange, ptr %0, i32 0, i32 1, !dbg !14833
  %1 = load i32, ptr %type, align 4, !dbg !14833, !tbaa !10409
  %cmp = icmp eq i32 %1, 3, !dbg !14834
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14835

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %range2.addr, align 8, !dbg !14836, !tbaa !1527
  %type1 = getelementptr inbounds %struct._xmlRegRange, ptr %2, i32 0, i32 1, !dbg !14837
  %3 = load i32, ptr %type1, align 4, !dbg !14837, !tbaa !10409
  %cmp2 = icmp eq i32 %3, 3, !dbg !14838
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !14839

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load ptr, ptr %range2.addr, align 8, !dbg !14840, !tbaa !1527
  %type4 = getelementptr inbounds %struct._xmlRegRange, ptr %4, i32 0, i32 1, !dbg !14841
  %5 = load i32, ptr %type4, align 4, !dbg !14841, !tbaa !10409
  %cmp5 = icmp eq i32 %5, 4, !dbg !14842
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !14843

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %6 = load ptr, ptr %range1.addr, align 8, !dbg !14844, !tbaa !1527
  %type7 = getelementptr inbounds %struct._xmlRegRange, ptr %6, i32 0, i32 1, !dbg !14845
  %7 = load i32, ptr %type7, align 4, !dbg !14845, !tbaa !10409
  %cmp8 = icmp eq i32 %7, 4, !dbg !14846
  br i1 %cmp8, label %if.then, label %lor.lhs.false9, !dbg !14847

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %8 = load ptr, ptr %range1.addr, align 8, !dbg !14848, !tbaa !1527
  %type10 = getelementptr inbounds %struct._xmlRegRange, ptr %8, i32 0, i32 1, !dbg !14849
  %9 = load i32, ptr %type10, align 4, !dbg !14849, !tbaa !10409
  %cmp11 = icmp eq i32 %9, 5, !dbg !14850
  br i1 %cmp11, label %if.then, label %lor.lhs.false12, !dbg !14851

lor.lhs.false12:                                  ; preds = %lor.lhs.false9
  %10 = load ptr, ptr %range2.addr, align 8, !dbg !14852, !tbaa !1527
  %type13 = getelementptr inbounds %struct._xmlRegRange, ptr %10, i32 0, i32 1, !dbg !14853
  %11 = load i32, ptr %type13, align 4, !dbg !14853, !tbaa !10409
  %cmp14 = icmp eq i32 %11, 5, !dbg !14854
  br i1 %cmp14, label %if.then, label %if.end, !dbg !14855

if.then:                                          ; preds = %lor.lhs.false12, %lor.lhs.false9, %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 -1, ptr %retval, align 4, !dbg !14856
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup274, !dbg !14856

if.end:                                           ; preds = %lor.lhs.false12
  %12 = load ptr, ptr %range1.addr, align 8, !dbg !14857, !tbaa !1527
  %type15 = getelementptr inbounds %struct._xmlRegRange, ptr %12, i32 0, i32 1, !dbg !14858
  %13 = load i32, ptr %type15, align 4, !dbg !14858, !tbaa !10409
  %14 = load ptr, ptr %range2.addr, align 8, !dbg !14859, !tbaa !1527
  %type16 = getelementptr inbounds %struct._xmlRegRange, ptr %14, i32 0, i32 1, !dbg !14860
  %15 = load i32, ptr %type16, align 4, !dbg !14860, !tbaa !10409
  %cmp17 = icmp ugt i32 %13, %15, !dbg !14861
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !14862

if.then18:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !14863
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !14817, metadata !DIExpression()), !dbg !14864
  %16 = load ptr, ptr %range1.addr, align 8, !dbg !14865, !tbaa !1527
  store ptr %16, ptr %tmp, align 8, !dbg !14866, !tbaa !1527
  %17 = load ptr, ptr %range2.addr, align 8, !dbg !14867, !tbaa !1527
  store ptr %17, ptr %range1.addr, align 8, !dbg !14868, !tbaa !1527
  %18 = load ptr, ptr %tmp, align 8, !dbg !14869, !tbaa !1527
  store ptr %18, ptr %range2.addr, align 8, !dbg !14870, !tbaa !1527
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !14871
  br label %if.end19, !dbg !14872

if.end19:                                         ; preds = %if.then18, %if.end
  %19 = load ptr, ptr %range1.addr, align 8, !dbg !14873, !tbaa !1527
  %type20 = getelementptr inbounds %struct._xmlRegRange, ptr %19, i32 0, i32 1, !dbg !14874
  %20 = load i32, ptr %type20, align 4, !dbg !14874, !tbaa !10409
  %cmp21 = icmp eq i32 %20, 6, !dbg !14875
  br i1 %cmp21, label %if.then25, label %lor.lhs.false22, !dbg !14876

lor.lhs.false22:                                  ; preds = %if.end19
  %21 = load ptr, ptr %range2.addr, align 8, !dbg !14877, !tbaa !1527
  %type23 = getelementptr inbounds %struct._xmlRegRange, ptr %21, i32 0, i32 1, !dbg !14878
  %22 = load i32, ptr %type23, align 4, !dbg !14878, !tbaa !10409
  %cmp24 = icmp eq i32 %22, 6, !dbg !14879
  br i1 %cmp24, label %if.then25, label %if.else, !dbg !14880

if.then25:                                        ; preds = %lor.lhs.false22, %if.end19
  store i32 1, ptr %ret, align 4, !dbg !14881, !tbaa !1767
  br label %if.end260, !dbg !14883

if.else:                                          ; preds = %lor.lhs.false22
  %23 = load ptr, ptr %range1.addr, align 8, !dbg !14884, !tbaa !1527
  %type26 = getelementptr inbounds %struct._xmlRegRange, ptr %23, i32 0, i32 1, !dbg !14885
  %24 = load i32, ptr %type26, align 4, !dbg !14885, !tbaa !10409
  %cmp27 = icmp eq i32 %24, 1, !dbg !14886
  br i1 %cmp27, label %if.then31, label %lor.lhs.false28, !dbg !14887

lor.lhs.false28:                                  ; preds = %if.else
  %25 = load ptr, ptr %range2.addr, align 8, !dbg !14888, !tbaa !1527
  %type29 = getelementptr inbounds %struct._xmlRegRange, ptr %25, i32 0, i32 1, !dbg !14889
  %26 = load i32, ptr %type29, align 4, !dbg !14889, !tbaa !10409
  %cmp30 = icmp eq i32 %26, 1, !dbg !14890
  br i1 %cmp30, label %if.then31, label %if.else32, !dbg !14891

if.then31:                                        ; preds = %lor.lhs.false28, %if.else
  store i32 0, ptr %retval, align 4, !dbg !14892
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup274, !dbg !14892

if.else32:                                        ; preds = %lor.lhs.false28
  %27 = load ptr, ptr %range1.addr, align 8, !dbg !14894, !tbaa !1527
  %type33 = getelementptr inbounds %struct._xmlRegRange, ptr %27, i32 0, i32 1, !dbg !14895
  %28 = load i32, ptr %type33, align 4, !dbg !14895, !tbaa !10409
  %29 = load ptr, ptr %range2.addr, align 8, !dbg !14896, !tbaa !1527
  %type34 = getelementptr inbounds %struct._xmlRegRange, ptr %29, i32 0, i32 1, !dbg !14897
  %30 = load i32, ptr %type34, align 4, !dbg !14897, !tbaa !10409
  %cmp35 = icmp eq i32 %28, %30, !dbg !14898
  br i1 %cmp35, label %if.then36, label %if.else50, !dbg !14899

if.then36:                                        ; preds = %if.else32
  %31 = load ptr, ptr %range1.addr, align 8, !dbg !14900, !tbaa !1527
  %type37 = getelementptr inbounds %struct._xmlRegRange, ptr %31, i32 0, i32 1, !dbg !14903
  %32 = load i32, ptr %type37, align 4, !dbg !14903, !tbaa !10409
  %cmp38 = icmp ne i32 %32, 2, !dbg !14904
  br i1 %cmp38, label %if.then39, label %if.else40, !dbg !14905

if.then39:                                        ; preds = %if.then36
  store i32 1, ptr %ret, align 4, !dbg !14906, !tbaa !1767
  br label %if.end49, !dbg !14907

if.else40:                                        ; preds = %if.then36
  %33 = load ptr, ptr %range1.addr, align 8, !dbg !14908, !tbaa !1527
  %end = getelementptr inbounds %struct._xmlRegRange, ptr %33, i32 0, i32 3, !dbg !14910
  %34 = load i32, ptr %end, align 4, !dbg !14910, !tbaa !10417
  %35 = load ptr, ptr %range2.addr, align 8, !dbg !14911, !tbaa !1527
  %start = getelementptr inbounds %struct._xmlRegRange, ptr %35, i32 0, i32 2, !dbg !14912
  %36 = load i32, ptr %start, align 8, !dbg !14912, !tbaa !10414
  %cmp41 = icmp slt i32 %34, %36, !dbg !14913
  br i1 %cmp41, label %if.then46, label %lor.lhs.false42, !dbg !14914

lor.lhs.false42:                                  ; preds = %if.else40
  %37 = load ptr, ptr %range2.addr, align 8, !dbg !14915, !tbaa !1527
  %end43 = getelementptr inbounds %struct._xmlRegRange, ptr %37, i32 0, i32 3, !dbg !14916
  %38 = load i32, ptr %end43, align 4, !dbg !14916, !tbaa !10417
  %39 = load ptr, ptr %range1.addr, align 8, !dbg !14917, !tbaa !1527
  %start44 = getelementptr inbounds %struct._xmlRegRange, ptr %39, i32 0, i32 2, !dbg !14918
  %40 = load i32, ptr %start44, align 8, !dbg !14918, !tbaa !10414
  %cmp45 = icmp slt i32 %38, %40, !dbg !14919
  br i1 %cmp45, label %if.then46, label %if.else47, !dbg !14920

if.then46:                                        ; preds = %lor.lhs.false42, %if.else40
  store i32 0, ptr %ret, align 4, !dbg !14921, !tbaa !1767
  br label %if.end48, !dbg !14922

if.else47:                                        ; preds = %lor.lhs.false42
  store i32 1, ptr %ret, align 4, !dbg !14923, !tbaa !1767
  br label %if.end48

if.end48:                                         ; preds = %if.else47, %if.then46
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then39
  br label %if.end258, !dbg !14924

if.else50:                                        ; preds = %if.else32
  %41 = load ptr, ptr %range1.addr, align 8, !dbg !14925, !tbaa !1527
  %type51 = getelementptr inbounds %struct._xmlRegRange, ptr %41, i32 0, i32 1, !dbg !14926
  %42 = load i32, ptr %type51, align 4, !dbg !14926, !tbaa !10409
  %cmp52 = icmp eq i32 %42, 2, !dbg !14927
  br i1 %cmp52, label %if.then53, label %if.else85, !dbg !14928

if.then53:                                        ; preds = %if.else50
  call void @llvm.lifetime.start.p0(i64 4, ptr %codepoint) #8, !dbg !14929
  tail call void @llvm.dbg.declare(metadata ptr %codepoint, metadata !14820, metadata !DIExpression()), !dbg !14930
  call void @llvm.lifetime.start.p0(i64 4, ptr %neg) #8, !dbg !14931
  tail call void @llvm.dbg.declare(metadata ptr %neg, metadata !14826, metadata !DIExpression()), !dbg !14932
  store i32 0, ptr %neg, align 4, !dbg !14932, !tbaa !1767
  %43 = load ptr, ptr %range1.addr, align 8, !dbg !14933, !tbaa !1527
  %neg54 = getelementptr inbounds %struct._xmlRegRange, ptr %43, i32 0, i32 0, !dbg !14935
  %44 = load i32, ptr %neg54, align 8, !dbg !14935, !tbaa !10401
  %cmp55 = icmp eq i32 %44, 0, !dbg !14936
  br i1 %cmp55, label %land.lhs.true, label %lor.lhs.false58, !dbg !14937

land.lhs.true:                                    ; preds = %if.then53
  %45 = load ptr, ptr %range2.addr, align 8, !dbg !14938, !tbaa !1527
  %neg56 = getelementptr inbounds %struct._xmlRegRange, ptr %45, i32 0, i32 0, !dbg !14939
  %46 = load i32, ptr %neg56, align 8, !dbg !14939, !tbaa !10401
  %cmp57 = icmp ne i32 %46, 0, !dbg !14940
  br i1 %cmp57, label %if.then64, label %lor.lhs.false58, !dbg !14941

lor.lhs.false58:                                  ; preds = %land.lhs.true, %if.then53
  %47 = load ptr, ptr %range1.addr, align 8, !dbg !14942, !tbaa !1527
  %neg59 = getelementptr inbounds %struct._xmlRegRange, ptr %47, i32 0, i32 0, !dbg !14943
  %48 = load i32, ptr %neg59, align 8, !dbg !14943, !tbaa !10401
  %cmp60 = icmp ne i32 %48, 0, !dbg !14944
  br i1 %cmp60, label %land.lhs.true61, label %if.end65, !dbg !14945

land.lhs.true61:                                  ; preds = %lor.lhs.false58
  %49 = load ptr, ptr %range2.addr, align 8, !dbg !14946, !tbaa !1527
  %neg62 = getelementptr inbounds %struct._xmlRegRange, ptr %49, i32 0, i32 0, !dbg !14947
  %50 = load i32, ptr %neg62, align 8, !dbg !14947, !tbaa !10401
  %cmp63 = icmp eq i32 %50, 0, !dbg !14948
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !14949

if.then64:                                        ; preds = %land.lhs.true61, %land.lhs.true
  store i32 1, ptr %neg, align 4, !dbg !14950, !tbaa !1767
  br label %if.end65, !dbg !14951

if.end65:                                         ; preds = %if.then64, %land.lhs.true61, %lor.lhs.false58
  %51 = load ptr, ptr %range1.addr, align 8, !dbg !14952, !tbaa !1527
  %start66 = getelementptr inbounds %struct._xmlRegRange, ptr %51, i32 0, i32 2, !dbg !14954
  %52 = load i32, ptr %start66, align 8, !dbg !14954, !tbaa !10414
  store i32 %52, ptr %codepoint, align 4, !dbg !14955, !tbaa !1767
  br label %for.cond, !dbg !14956

for.cond:                                         ; preds = %for.inc, %if.end65
  %53 = load i32, ptr %codepoint, align 4, !dbg !14957, !tbaa !1767
  %54 = load ptr, ptr %range1.addr, align 8, !dbg !14959, !tbaa !1527
  %end67 = getelementptr inbounds %struct._xmlRegRange, ptr %54, i32 0, i32 3, !dbg !14960
  %55 = load i32, ptr %end67, align 4, !dbg !14960, !tbaa !10417
  %cmp68 = icmp sle i32 %53, %55, !dbg !14961
  br i1 %cmp68, label %for.body, label %for.end, !dbg !14962

for.body:                                         ; preds = %for.cond
  %56 = load ptr, ptr %range2.addr, align 8, !dbg !14963, !tbaa !1527
  %type69 = getelementptr inbounds %struct._xmlRegRange, ptr %56, i32 0, i32 1, !dbg !14965
  %57 = load i32, ptr %type69, align 4, !dbg !14965, !tbaa !10409
  %58 = load i32, ptr %codepoint, align 4, !dbg !14966, !tbaa !1767
  %59 = load ptr, ptr %range2.addr, align 8, !dbg !14967, !tbaa !1527
  %start70 = getelementptr inbounds %struct._xmlRegRange, ptr %59, i32 0, i32 2, !dbg !14968
  %60 = load i32, ptr %start70, align 8, !dbg !14968, !tbaa !10414
  %61 = load ptr, ptr %range2.addr, align 8, !dbg !14969, !tbaa !1527
  %end71 = getelementptr inbounds %struct._xmlRegRange, ptr %61, i32 0, i32 3, !dbg !14970
  %62 = load i32, ptr %end71, align 4, !dbg !14970, !tbaa !10417
  %63 = load ptr, ptr %range2.addr, align 8, !dbg !14971, !tbaa !1527
  %blockName = getelementptr inbounds %struct._xmlRegRange, ptr %63, i32 0, i32 4, !dbg !14972
  %64 = load ptr, ptr %blockName, align 8, !dbg !14972, !tbaa !12330
  %call = call i32 @xmlRegCheckCharacterRange(i32 noundef %57, i32 noundef %58, i32 noundef 0, i32 noundef %60, i32 noundef %62, ptr noundef %64), !dbg !14973
  store i32 %call, ptr %ret, align 4, !dbg !14974, !tbaa !1767
  %65 = load i32, ptr %ret, align 4, !dbg !14975, !tbaa !1767
  %cmp72 = icmp slt i32 %65, 0, !dbg !14977
  br i1 %cmp72, label %if.then73, label %if.end74, !dbg !14978

if.then73:                                        ; preds = %for.body
  store i32 -1, ptr %retval, align 4, !dbg !14979
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14979

if.end74:                                         ; preds = %for.body
  %66 = load i32, ptr %neg, align 4, !dbg !14980, !tbaa !1767
  %cmp75 = icmp eq i32 %66, 1, !dbg !14982
  br i1 %cmp75, label %land.lhs.true76, label %lor.lhs.false78, !dbg !14983

land.lhs.true76:                                  ; preds = %if.end74
  %67 = load i32, ptr %ret, align 4, !dbg !14984, !tbaa !1767
  %cmp77 = icmp eq i32 %67, 0, !dbg !14985
  br i1 %cmp77, label %if.then82, label %lor.lhs.false78, !dbg !14986

lor.lhs.false78:                                  ; preds = %land.lhs.true76, %if.end74
  %68 = load i32, ptr %neg, align 4, !dbg !14987, !tbaa !1767
  %cmp79 = icmp eq i32 %68, 0, !dbg !14988
  br i1 %cmp79, label %land.lhs.true80, label %if.end83, !dbg !14989

land.lhs.true80:                                  ; preds = %lor.lhs.false78
  %69 = load i32, ptr %ret, align 4, !dbg !14990, !tbaa !1767
  %cmp81 = icmp eq i32 %69, 1, !dbg !14991
  br i1 %cmp81, label %if.then82, label %if.end83, !dbg !14992

if.then82:                                        ; preds = %land.lhs.true80, %land.lhs.true76
  store i32 1, ptr %retval, align 4, !dbg !14993
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14993

if.end83:                                         ; preds = %land.lhs.true80, %lor.lhs.false78
  br label %for.inc, !dbg !14994

for.inc:                                          ; preds = %if.end83
  %70 = load i32, ptr %codepoint, align 4, !dbg !14995, !tbaa !1767
  %inc = add nsw i32 %70, 1, !dbg !14995
  store i32 %inc, ptr %codepoint, align 4, !dbg !14995, !tbaa !1767
  br label %for.cond, !dbg !14996, !llvm.loop !14997

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %retval, align 4, !dbg !14999
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !14999

cleanup:                                          ; preds = %for.end, %if.then82, %if.then73
  call void @llvm.lifetime.end.p0(i64 4, ptr %neg) #8, !dbg !15000
  call void @llvm.lifetime.end.p0(i64 4, ptr %codepoint) #8, !dbg !15000
  br label %cleanup274

if.else85:                                        ; preds = %if.else50
  %71 = load ptr, ptr %range1.addr, align 8, !dbg !15001, !tbaa !1527
  %type86 = getelementptr inbounds %struct._xmlRegRange, ptr %71, i32 0, i32 1, !dbg !15003
  %72 = load i32, ptr %type86, align 4, !dbg !15003, !tbaa !10409
  %cmp87 = icmp eq i32 %72, 136, !dbg !15004
  br i1 %cmp87, label %if.then91, label %lor.lhs.false88, !dbg !15005

lor.lhs.false88:                                  ; preds = %if.else85
  %73 = load ptr, ptr %range2.addr, align 8, !dbg !15006, !tbaa !1527
  %type89 = getelementptr inbounds %struct._xmlRegRange, ptr %73, i32 0, i32 1, !dbg !15007
  %74 = load i32, ptr %type89, align 4, !dbg !15007, !tbaa !10409
  %cmp90 = icmp eq i32 %74, 136, !dbg !15008
  br i1 %cmp90, label %if.then91, label %if.else101, !dbg !15009

if.then91:                                        ; preds = %lor.lhs.false88, %if.else85
  %75 = load ptr, ptr %range1.addr, align 8, !dbg !15010, !tbaa !1527
  %type92 = getelementptr inbounds %struct._xmlRegRange, ptr %75, i32 0, i32 1, !dbg !15013
  %76 = load i32, ptr %type92, align 4, !dbg !15013, !tbaa !10409
  %77 = load ptr, ptr %range2.addr, align 8, !dbg !15014, !tbaa !1527
  %type93 = getelementptr inbounds %struct._xmlRegRange, ptr %77, i32 0, i32 1, !dbg !15015
  %78 = load i32, ptr %type93, align 4, !dbg !15015, !tbaa !10409
  %cmp94 = icmp eq i32 %76, %78, !dbg !15016
  br i1 %cmp94, label %if.then95, label %if.else99, !dbg !15017

if.then95:                                        ; preds = %if.then91
  %79 = load ptr, ptr %range1.addr, align 8, !dbg !15018, !tbaa !1527
  %blockName96 = getelementptr inbounds %struct._xmlRegRange, ptr %79, i32 0, i32 4, !dbg !15020
  %80 = load ptr, ptr %blockName96, align 8, !dbg !15020, !tbaa !12330
  %81 = load ptr, ptr %range2.addr, align 8, !dbg !15021, !tbaa !1527
  %blockName97 = getelementptr inbounds %struct._xmlRegRange, ptr %81, i32 0, i32 4, !dbg !15022
  %82 = load ptr, ptr %blockName97, align 8, !dbg !15022, !tbaa !12330
  %call98 = call i32 @xmlStrEqual(ptr noundef %80, ptr noundef %82), !dbg !15023
  store i32 %call98, ptr %ret, align 4, !dbg !15024, !tbaa !1767
  br label %if.end100, !dbg !15025

if.else99:                                        ; preds = %if.then91
  store i32 1, ptr %retval, align 4, !dbg !15026
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup274, !dbg !15026

if.end100:                                        ; preds = %if.then95
  br label %if.end256, !dbg !15028

if.else101:                                       ; preds = %lor.lhs.false88
  %83 = load ptr, ptr %range1.addr, align 8, !dbg !15029, !tbaa !1527
  %type102 = getelementptr inbounds %struct._xmlRegRange, ptr %83, i32 0, i32 1, !dbg !15031
  %84 = load i32, ptr %type102, align 4, !dbg !15031, !tbaa !10409
  %cmp103 = icmp ult i32 %84, 100, !dbg !15032
  br i1 %cmp103, label %if.then107, label %lor.lhs.false104, !dbg !15033

lor.lhs.false104:                                 ; preds = %if.else101
  %85 = load ptr, ptr %range2.addr, align 8, !dbg !15034, !tbaa !1527
  %type105 = getelementptr inbounds %struct._xmlRegRange, ptr %85, i32 0, i32 1, !dbg !15035
  %86 = load i32, ptr %type105, align 4, !dbg !15035, !tbaa !10409
  %cmp106 = icmp ult i32 %86, 100, !dbg !15036
  br i1 %cmp106, label %if.then107, label %if.else148, !dbg !15037

if.then107:                                       ; preds = %lor.lhs.false104, %if.else101
  %87 = load ptr, ptr %range1.addr, align 8, !dbg !15038, !tbaa !1527
  %type108 = getelementptr inbounds %struct._xmlRegRange, ptr %87, i32 0, i32 1, !dbg !15041
  %88 = load i32, ptr %type108, align 4, !dbg !15041, !tbaa !10409
  %cmp109 = icmp eq i32 %88, 7, !dbg !15042
  br i1 %cmp109, label %land.lhs.true110, label %if.else114, !dbg !15043

land.lhs.true110:                                 ; preds = %if.then107
  %89 = load ptr, ptr %range2.addr, align 8, !dbg !15044, !tbaa !1527
  %type111 = getelementptr inbounds %struct._xmlRegRange, ptr %89, i32 0, i32 1, !dbg !15045
  %90 = load i32, ptr %type111, align 4, !dbg !15045, !tbaa !10409
  %cmp112 = icmp eq i32 %90, 8, !dbg !15046
  br i1 %cmp112, label %if.then113, label %if.else114, !dbg !15047

if.then113:                                       ; preds = %land.lhs.true110
  store i32 0, ptr %ret, align 4, !dbg !15048, !tbaa !1767
  br label %if.end147, !dbg !15049

if.else114:                                       ; preds = %land.lhs.true110, %if.then107
  %91 = load ptr, ptr %range1.addr, align 8, !dbg !15050, !tbaa !1527
  %type115 = getelementptr inbounds %struct._xmlRegRange, ptr %91, i32 0, i32 1, !dbg !15052
  %92 = load i32, ptr %type115, align 4, !dbg !15052, !tbaa !10409
  %cmp116 = icmp eq i32 %92, 9, !dbg !15053
  br i1 %cmp116, label %land.lhs.true117, label %if.else121, !dbg !15054

land.lhs.true117:                                 ; preds = %if.else114
  %93 = load ptr, ptr %range2.addr, align 8, !dbg !15055, !tbaa !1527
  %type118 = getelementptr inbounds %struct._xmlRegRange, ptr %93, i32 0, i32 1, !dbg !15056
  %94 = load i32, ptr %type118, align 4, !dbg !15056, !tbaa !10409
  %cmp119 = icmp eq i32 %94, 10, !dbg !15057
  br i1 %cmp119, label %if.then120, label %if.else121, !dbg !15058

if.then120:                                       ; preds = %land.lhs.true117
  store i32 0, ptr %ret, align 4, !dbg !15059, !tbaa !1767
  br label %if.end146, !dbg !15060

if.else121:                                       ; preds = %land.lhs.true117, %if.else114
  %95 = load ptr, ptr %range1.addr, align 8, !dbg !15061, !tbaa !1527
  %type122 = getelementptr inbounds %struct._xmlRegRange, ptr %95, i32 0, i32 1, !dbg !15063
  %96 = load i32, ptr %type122, align 4, !dbg !15063, !tbaa !10409
  %cmp123 = icmp eq i32 %96, 11, !dbg !15064
  br i1 %cmp123, label %land.lhs.true124, label %if.else128, !dbg !15065

land.lhs.true124:                                 ; preds = %if.else121
  %97 = load ptr, ptr %range2.addr, align 8, !dbg !15066, !tbaa !1527
  %type125 = getelementptr inbounds %struct._xmlRegRange, ptr %97, i32 0, i32 1, !dbg !15067
  %98 = load i32, ptr %type125, align 4, !dbg !15067, !tbaa !10409
  %cmp126 = icmp eq i32 %98, 12, !dbg !15068
  br i1 %cmp126, label %if.then127, label %if.else128, !dbg !15069

if.then127:                                       ; preds = %land.lhs.true124
  store i32 0, ptr %ret, align 4, !dbg !15070, !tbaa !1767
  br label %if.end145, !dbg !15071

if.else128:                                       ; preds = %land.lhs.true124, %if.else121
  %99 = load ptr, ptr %range1.addr, align 8, !dbg !15072, !tbaa !1527
  %type129 = getelementptr inbounds %struct._xmlRegRange, ptr %99, i32 0, i32 1, !dbg !15074
  %100 = load i32, ptr %type129, align 4, !dbg !15074, !tbaa !10409
  %cmp130 = icmp eq i32 %100, 13, !dbg !15075
  br i1 %cmp130, label %land.lhs.true131, label %if.else135, !dbg !15076

land.lhs.true131:                                 ; preds = %if.else128
  %101 = load ptr, ptr %range2.addr, align 8, !dbg !15077, !tbaa !1527
  %type132 = getelementptr inbounds %struct._xmlRegRange, ptr %101, i32 0, i32 1, !dbg !15078
  %102 = load i32, ptr %type132, align 4, !dbg !15078, !tbaa !10409
  %cmp133 = icmp eq i32 %102, 14, !dbg !15079
  br i1 %cmp133, label %if.then134, label %if.else135, !dbg !15080

if.then134:                                       ; preds = %land.lhs.true131
  store i32 0, ptr %ret, align 4, !dbg !15081, !tbaa !1767
  br label %if.end144, !dbg !15082

if.else135:                                       ; preds = %land.lhs.true131, %if.else128
  %103 = load ptr, ptr %range1.addr, align 8, !dbg !15083, !tbaa !1527
  %type136 = getelementptr inbounds %struct._xmlRegRange, ptr %103, i32 0, i32 1, !dbg !15085
  %104 = load i32, ptr %type136, align 4, !dbg !15085, !tbaa !10409
  %cmp137 = icmp eq i32 %104, 15, !dbg !15086
  br i1 %cmp137, label %land.lhs.true138, label %if.else142, !dbg !15087

land.lhs.true138:                                 ; preds = %if.else135
  %105 = load ptr, ptr %range2.addr, align 8, !dbg !15088, !tbaa !1527
  %type139 = getelementptr inbounds %struct._xmlRegRange, ptr %105, i32 0, i32 1, !dbg !15089
  %106 = load i32, ptr %type139, align 4, !dbg !15089, !tbaa !10409
  %cmp140 = icmp eq i32 %106, 16, !dbg !15090
  br i1 %cmp140, label %if.then141, label %if.else142, !dbg !15091

if.then141:                                       ; preds = %land.lhs.true138
  store i32 0, ptr %ret, align 4, !dbg !15092, !tbaa !1767
  br label %if.end143, !dbg !15093

if.else142:                                       ; preds = %land.lhs.true138, %if.else135
  store i32 1, ptr %retval, align 4, !dbg !15094
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup274, !dbg !15094

if.end143:                                        ; preds = %if.then141
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.then134
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.then127
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then120
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then113
  br label %if.end255, !dbg !15096

if.else148:                                       ; preds = %lor.lhs.false104
  store i32 0, ptr %ret, align 4, !dbg !15097, !tbaa !1767
  %107 = load ptr, ptr %range1.addr, align 8, !dbg !15099, !tbaa !1527
  %type149 = getelementptr inbounds %struct._xmlRegRange, ptr %107, i32 0, i32 1, !dbg !15100
  %108 = load i32, ptr %type149, align 4, !dbg !15100, !tbaa !10409
  switch i32 %108, label %sw.default [
    i32 100, label %sw.bb
    i32 106, label %sw.bb166
    i32 110, label %sw.bb177
    i32 114, label %sw.bb188
    i32 122, label %sw.bb211
    i32 126, label %sw.bb222
    i32 131, label %sw.bb236
  ], !dbg !15101

sw.bb:                                            ; preds = %if.else148
  %109 = load ptr, ptr %range2.addr, align 8, !dbg !15102, !tbaa !1527
  %type150 = getelementptr inbounds %struct._xmlRegRange, ptr %109, i32 0, i32 1, !dbg !15105
  %110 = load i32, ptr %type150, align 4, !dbg !15105, !tbaa !10409
  %cmp151 = icmp eq i32 %110, 101, !dbg !15106
  br i1 %cmp151, label %if.then164, label %lor.lhs.false152, !dbg !15107

lor.lhs.false152:                                 ; preds = %sw.bb
  %111 = load ptr, ptr %range2.addr, align 8, !dbg !15108, !tbaa !1527
  %type153 = getelementptr inbounds %struct._xmlRegRange, ptr %111, i32 0, i32 1, !dbg !15109
  %112 = load i32, ptr %type153, align 4, !dbg !15109, !tbaa !10409
  %cmp154 = icmp eq i32 %112, 102, !dbg !15110
  br i1 %cmp154, label %if.then164, label %lor.lhs.false155, !dbg !15111

lor.lhs.false155:                                 ; preds = %lor.lhs.false152
  %113 = load ptr, ptr %range2.addr, align 8, !dbg !15112, !tbaa !1527
  %type156 = getelementptr inbounds %struct._xmlRegRange, ptr %113, i32 0, i32 1, !dbg !15113
  %114 = load i32, ptr %type156, align 4, !dbg !15113, !tbaa !10409
  %cmp157 = icmp eq i32 %114, 103, !dbg !15114
  br i1 %cmp157, label %if.then164, label %lor.lhs.false158, !dbg !15115

lor.lhs.false158:                                 ; preds = %lor.lhs.false155
  %115 = load ptr, ptr %range2.addr, align 8, !dbg !15116, !tbaa !1527
  %type159 = getelementptr inbounds %struct._xmlRegRange, ptr %115, i32 0, i32 1, !dbg !15117
  %116 = load i32, ptr %type159, align 4, !dbg !15117, !tbaa !10409
  %cmp160 = icmp eq i32 %116, 104, !dbg !15118
  br i1 %cmp160, label %if.then164, label %lor.lhs.false161, !dbg !15119

lor.lhs.false161:                                 ; preds = %lor.lhs.false158
  %117 = load ptr, ptr %range2.addr, align 8, !dbg !15120, !tbaa !1527
  %type162 = getelementptr inbounds %struct._xmlRegRange, ptr %117, i32 0, i32 1, !dbg !15121
  %118 = load i32, ptr %type162, align 4, !dbg !15121, !tbaa !10409
  %cmp163 = icmp eq i32 %118, 105, !dbg !15122
  br i1 %cmp163, label %if.then164, label %if.end165, !dbg !15123

if.then164:                                       ; preds = %lor.lhs.false161, %lor.lhs.false158, %lor.lhs.false155, %lor.lhs.false152, %sw.bb
  store i32 1, ptr %ret, align 4, !dbg !15124, !tbaa !1767
  br label %if.end165, !dbg !15125

if.end165:                                        ; preds = %if.then164, %lor.lhs.false161
  br label %sw.epilog, !dbg !15126

sw.bb166:                                         ; preds = %if.else148
  %119 = load ptr, ptr %range2.addr, align 8, !dbg !15127, !tbaa !1527
  %type167 = getelementptr inbounds %struct._xmlRegRange, ptr %119, i32 0, i32 1, !dbg !15129
  %120 = load i32, ptr %type167, align 4, !dbg !15129, !tbaa !10409
  %cmp168 = icmp eq i32 %120, 107, !dbg !15130
  br i1 %cmp168, label %if.then175, label %lor.lhs.false169, !dbg !15131

lor.lhs.false169:                                 ; preds = %sw.bb166
  %121 = load ptr, ptr %range2.addr, align 8, !dbg !15132, !tbaa !1527
  %type170 = getelementptr inbounds %struct._xmlRegRange, ptr %121, i32 0, i32 1, !dbg !15133
  %122 = load i32, ptr %type170, align 4, !dbg !15133, !tbaa !10409
  %cmp171 = icmp eq i32 %122, 108, !dbg !15134
  br i1 %cmp171, label %if.then175, label %lor.lhs.false172, !dbg !15135

lor.lhs.false172:                                 ; preds = %lor.lhs.false169
  %123 = load ptr, ptr %range2.addr, align 8, !dbg !15136, !tbaa !1527
  %type173 = getelementptr inbounds %struct._xmlRegRange, ptr %123, i32 0, i32 1, !dbg !15137
  %124 = load i32, ptr %type173, align 4, !dbg !15137, !tbaa !10409
  %cmp174 = icmp eq i32 %124, 109, !dbg !15138
  br i1 %cmp174, label %if.then175, label %if.end176, !dbg !15139

if.then175:                                       ; preds = %lor.lhs.false172, %lor.lhs.false169, %sw.bb166
  store i32 1, ptr %ret, align 4, !dbg !15140, !tbaa !1767
  br label %if.end176, !dbg !15141

if.end176:                                        ; preds = %if.then175, %lor.lhs.false172
  br label %sw.epilog, !dbg !15142

sw.bb177:                                         ; preds = %if.else148
  %125 = load ptr, ptr %range2.addr, align 8, !dbg !15143, !tbaa !1527
  %type178 = getelementptr inbounds %struct._xmlRegRange, ptr %125, i32 0, i32 1, !dbg !15145
  %126 = load i32, ptr %type178, align 4, !dbg !15145, !tbaa !10409
  %cmp179 = icmp eq i32 %126, 111, !dbg !15146
  br i1 %cmp179, label %if.then186, label %lor.lhs.false180, !dbg !15147

lor.lhs.false180:                                 ; preds = %sw.bb177
  %127 = load ptr, ptr %range2.addr, align 8, !dbg !15148, !tbaa !1527
  %type181 = getelementptr inbounds %struct._xmlRegRange, ptr %127, i32 0, i32 1, !dbg !15149
  %128 = load i32, ptr %type181, align 4, !dbg !15149, !tbaa !10409
  %cmp182 = icmp eq i32 %128, 112, !dbg !15150
  br i1 %cmp182, label %if.then186, label %lor.lhs.false183, !dbg !15151

lor.lhs.false183:                                 ; preds = %lor.lhs.false180
  %129 = load ptr, ptr %range2.addr, align 8, !dbg !15152, !tbaa !1527
  %type184 = getelementptr inbounds %struct._xmlRegRange, ptr %129, i32 0, i32 1, !dbg !15153
  %130 = load i32, ptr %type184, align 4, !dbg !15153, !tbaa !10409
  %cmp185 = icmp eq i32 %130, 113, !dbg !15154
  br i1 %cmp185, label %if.then186, label %if.end187, !dbg !15155

if.then186:                                       ; preds = %lor.lhs.false183, %lor.lhs.false180, %sw.bb177
  store i32 1, ptr %ret, align 4, !dbg !15156, !tbaa !1767
  br label %if.end187, !dbg !15157

if.end187:                                        ; preds = %if.then186, %lor.lhs.false183
  br label %sw.epilog, !dbg !15158

sw.bb188:                                         ; preds = %if.else148
  %131 = load ptr, ptr %range2.addr, align 8, !dbg !15159, !tbaa !1527
  %type189 = getelementptr inbounds %struct._xmlRegRange, ptr %131, i32 0, i32 1, !dbg !15161
  %132 = load i32, ptr %type189, align 4, !dbg !15161, !tbaa !10409
  %cmp190 = icmp eq i32 %132, 115, !dbg !15162
  br i1 %cmp190, label %if.then209, label %lor.lhs.false191, !dbg !15163

lor.lhs.false191:                                 ; preds = %sw.bb188
  %133 = load ptr, ptr %range2.addr, align 8, !dbg !15164, !tbaa !1527
  %type192 = getelementptr inbounds %struct._xmlRegRange, ptr %133, i32 0, i32 1, !dbg !15165
  %134 = load i32, ptr %type192, align 4, !dbg !15165, !tbaa !10409
  %cmp193 = icmp eq i32 %134, 116, !dbg !15166
  br i1 %cmp193, label %if.then209, label %lor.lhs.false194, !dbg !15167

lor.lhs.false194:                                 ; preds = %lor.lhs.false191
  %135 = load ptr, ptr %range2.addr, align 8, !dbg !15168, !tbaa !1527
  %type195 = getelementptr inbounds %struct._xmlRegRange, ptr %135, i32 0, i32 1, !dbg !15169
  %136 = load i32, ptr %type195, align 4, !dbg !15169, !tbaa !10409
  %cmp196 = icmp eq i32 %136, 117, !dbg !15170
  br i1 %cmp196, label %if.then209, label %lor.lhs.false197, !dbg !15171

lor.lhs.false197:                                 ; preds = %lor.lhs.false194
  %137 = load ptr, ptr %range2.addr, align 8, !dbg !15172, !tbaa !1527
  %type198 = getelementptr inbounds %struct._xmlRegRange, ptr %137, i32 0, i32 1, !dbg !15173
  %138 = load i32, ptr %type198, align 4, !dbg !15173, !tbaa !10409
  %cmp199 = icmp eq i32 %138, 118, !dbg !15174
  br i1 %cmp199, label %if.then209, label %lor.lhs.false200, !dbg !15175

lor.lhs.false200:                                 ; preds = %lor.lhs.false197
  %139 = load ptr, ptr %range2.addr, align 8, !dbg !15176, !tbaa !1527
  %type201 = getelementptr inbounds %struct._xmlRegRange, ptr %139, i32 0, i32 1, !dbg !15177
  %140 = load i32, ptr %type201, align 4, !dbg !15177, !tbaa !10409
  %cmp202 = icmp eq i32 %140, 119, !dbg !15178
  br i1 %cmp202, label %if.then209, label %lor.lhs.false203, !dbg !15179

lor.lhs.false203:                                 ; preds = %lor.lhs.false200
  %141 = load ptr, ptr %range2.addr, align 8, !dbg !15180, !tbaa !1527
  %type204 = getelementptr inbounds %struct._xmlRegRange, ptr %141, i32 0, i32 1, !dbg !15181
  %142 = load i32, ptr %type204, align 4, !dbg !15181, !tbaa !10409
  %cmp205 = icmp eq i32 %142, 120, !dbg !15182
  br i1 %cmp205, label %if.then209, label %lor.lhs.false206, !dbg !15183

lor.lhs.false206:                                 ; preds = %lor.lhs.false203
  %143 = load ptr, ptr %range2.addr, align 8, !dbg !15184, !tbaa !1527
  %type207 = getelementptr inbounds %struct._xmlRegRange, ptr %143, i32 0, i32 1, !dbg !15185
  %144 = load i32, ptr %type207, align 4, !dbg !15185, !tbaa !10409
  %cmp208 = icmp eq i32 %144, 121, !dbg !15186
  br i1 %cmp208, label %if.then209, label %if.end210, !dbg !15187

if.then209:                                       ; preds = %lor.lhs.false206, %lor.lhs.false203, %lor.lhs.false200, %lor.lhs.false197, %lor.lhs.false194, %lor.lhs.false191, %sw.bb188
  store i32 1, ptr %ret, align 4, !dbg !15188, !tbaa !1767
  br label %if.end210, !dbg !15189

if.end210:                                        ; preds = %if.then209, %lor.lhs.false206
  br label %sw.epilog, !dbg !15190

sw.bb211:                                         ; preds = %if.else148
  %145 = load ptr, ptr %range2.addr, align 8, !dbg !15191, !tbaa !1527
  %type212 = getelementptr inbounds %struct._xmlRegRange, ptr %145, i32 0, i32 1, !dbg !15193
  %146 = load i32, ptr %type212, align 4, !dbg !15193, !tbaa !10409
  %cmp213 = icmp eq i32 %146, 123, !dbg !15194
  br i1 %cmp213, label %if.then220, label %lor.lhs.false214, !dbg !15195

lor.lhs.false214:                                 ; preds = %sw.bb211
  %147 = load ptr, ptr %range2.addr, align 8, !dbg !15196, !tbaa !1527
  %type215 = getelementptr inbounds %struct._xmlRegRange, ptr %147, i32 0, i32 1, !dbg !15197
  %148 = load i32, ptr %type215, align 4, !dbg !15197, !tbaa !10409
  %cmp216 = icmp eq i32 %148, 124, !dbg !15198
  br i1 %cmp216, label %if.then220, label %lor.lhs.false217, !dbg !15199

lor.lhs.false217:                                 ; preds = %lor.lhs.false214
  %149 = load ptr, ptr %range2.addr, align 8, !dbg !15200, !tbaa !1527
  %type218 = getelementptr inbounds %struct._xmlRegRange, ptr %149, i32 0, i32 1, !dbg !15201
  %150 = load i32, ptr %type218, align 4, !dbg !15201, !tbaa !10409
  %cmp219 = icmp eq i32 %150, 125, !dbg !15202
  br i1 %cmp219, label %if.then220, label %if.end221, !dbg !15203

if.then220:                                       ; preds = %lor.lhs.false217, %lor.lhs.false214, %sw.bb211
  store i32 1, ptr %ret, align 4, !dbg !15204, !tbaa !1767
  br label %if.end221, !dbg !15205

if.end221:                                        ; preds = %if.then220, %lor.lhs.false217
  br label %sw.epilog, !dbg !15206

sw.bb222:                                         ; preds = %if.else148
  %151 = load ptr, ptr %range2.addr, align 8, !dbg !15207, !tbaa !1527
  %type223 = getelementptr inbounds %struct._xmlRegRange, ptr %151, i32 0, i32 1, !dbg !15209
  %152 = load i32, ptr %type223, align 4, !dbg !15209, !tbaa !10409
  %cmp224 = icmp eq i32 %152, 127, !dbg !15210
  br i1 %cmp224, label %if.then234, label %lor.lhs.false225, !dbg !15211

lor.lhs.false225:                                 ; preds = %sw.bb222
  %153 = load ptr, ptr %range2.addr, align 8, !dbg !15212, !tbaa !1527
  %type226 = getelementptr inbounds %struct._xmlRegRange, ptr %153, i32 0, i32 1, !dbg !15213
  %154 = load i32, ptr %type226, align 4, !dbg !15213, !tbaa !10409
  %cmp227 = icmp eq i32 %154, 128, !dbg !15214
  br i1 %cmp227, label %if.then234, label %lor.lhs.false228, !dbg !15215

lor.lhs.false228:                                 ; preds = %lor.lhs.false225
  %155 = load ptr, ptr %range2.addr, align 8, !dbg !15216, !tbaa !1527
  %type229 = getelementptr inbounds %struct._xmlRegRange, ptr %155, i32 0, i32 1, !dbg !15217
  %156 = load i32, ptr %type229, align 4, !dbg !15217, !tbaa !10409
  %cmp230 = icmp eq i32 %156, 129, !dbg !15218
  br i1 %cmp230, label %if.then234, label %lor.lhs.false231, !dbg !15219

lor.lhs.false231:                                 ; preds = %lor.lhs.false228
  %157 = load ptr, ptr %range2.addr, align 8, !dbg !15220, !tbaa !1527
  %type232 = getelementptr inbounds %struct._xmlRegRange, ptr %157, i32 0, i32 1, !dbg !15221
  %158 = load i32, ptr %type232, align 4, !dbg !15221, !tbaa !10409
  %cmp233 = icmp eq i32 %158, 130, !dbg !15222
  br i1 %cmp233, label %if.then234, label %if.end235, !dbg !15223

if.then234:                                       ; preds = %lor.lhs.false231, %lor.lhs.false228, %lor.lhs.false225, %sw.bb222
  store i32 1, ptr %ret, align 4, !dbg !15224, !tbaa !1767
  br label %if.end235, !dbg !15225

if.end235:                                        ; preds = %if.then234, %lor.lhs.false231
  br label %sw.epilog, !dbg !15226

sw.bb236:                                         ; preds = %if.else148
  %159 = load ptr, ptr %range2.addr, align 8, !dbg !15227, !tbaa !1527
  %type237 = getelementptr inbounds %struct._xmlRegRange, ptr %159, i32 0, i32 1, !dbg !15229
  %160 = load i32, ptr %type237, align 4, !dbg !15229, !tbaa !10409
  %cmp238 = icmp eq i32 %160, 132, !dbg !15230
  br i1 %cmp238, label %if.then245, label %lor.lhs.false239, !dbg !15231

lor.lhs.false239:                                 ; preds = %sw.bb236
  %161 = load ptr, ptr %range2.addr, align 8, !dbg !15232, !tbaa !1527
  %type240 = getelementptr inbounds %struct._xmlRegRange, ptr %161, i32 0, i32 1, !dbg !15233
  %162 = load i32, ptr %type240, align 4, !dbg !15233, !tbaa !10409
  %cmp241 = icmp eq i32 %162, 133, !dbg !15234
  br i1 %cmp241, label %if.then245, label %lor.lhs.false242, !dbg !15235

lor.lhs.false242:                                 ; preds = %lor.lhs.false239
  %163 = load ptr, ptr %range2.addr, align 8, !dbg !15236, !tbaa !1527
  %type243 = getelementptr inbounds %struct._xmlRegRange, ptr %163, i32 0, i32 1, !dbg !15237
  %164 = load i32, ptr %type243, align 4, !dbg !15237, !tbaa !10409
  %cmp244 = icmp eq i32 %164, 134, !dbg !15238
  br i1 %cmp244, label %if.then245, label %if.end246, !dbg !15239

if.then245:                                       ; preds = %lor.lhs.false242, %lor.lhs.false239, %sw.bb236
  store i32 1, ptr %ret, align 4, !dbg !15240, !tbaa !1767
  br label %if.end246, !dbg !15241

if.end246:                                        ; preds = %if.then245, %lor.lhs.false242
  br label %sw.epilog, !dbg !15242

sw.default:                                       ; preds = %if.else148
  %165 = load ptr, ptr %range2.addr, align 8, !dbg !15243, !tbaa !1527
  %type247 = getelementptr inbounds %struct._xmlRegRange, ptr %165, i32 0, i32 1, !dbg !15245
  %166 = load i32, ptr %type247, align 4, !dbg !15245, !tbaa !10409
  %cmp248 = icmp uge i32 %166, 100, !dbg !15246
  br i1 %cmp248, label %land.lhs.true249, label %if.else253, !dbg !15247

land.lhs.true249:                                 ; preds = %sw.default
  %167 = load ptr, ptr %range2.addr, align 8, !dbg !15248, !tbaa !1527
  %type250 = getelementptr inbounds %struct._xmlRegRange, ptr %167, i32 0, i32 1, !dbg !15249
  %168 = load i32, ptr %type250, align 4, !dbg !15249, !tbaa !10409
  %cmp251 = icmp ult i32 %168, 136, !dbg !15250
  br i1 %cmp251, label %if.then252, label %if.else253, !dbg !15251

if.then252:                                       ; preds = %land.lhs.true249
  store i32 0, ptr %ret, align 4, !dbg !15252, !tbaa !1767
  br label %if.end254, !dbg !15253

if.else253:                                       ; preds = %land.lhs.true249, %sw.default
  store i32 1, ptr %retval, align 4, !dbg !15254
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup274, !dbg !15254

if.end254:                                        ; preds = %if.then252
  br label %sw.epilog, !dbg !15256

sw.epilog:                                        ; preds = %if.end254, %if.end246, %if.end235, %if.end221, %if.end210, %if.end187, %if.end176, %if.end165
  br label %if.end255

if.end255:                                        ; preds = %sw.epilog, %if.end147
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %if.end100
  br label %if.end257

if.end257:                                        ; preds = %if.end256
  br label %if.end258

if.end258:                                        ; preds = %if.end257, %if.end49
  br label %if.end259

if.end259:                                        ; preds = %if.end258
  br label %if.end260

if.end260:                                        ; preds = %if.end259, %if.then25
  %169 = load ptr, ptr %range1.addr, align 8, !dbg !15257, !tbaa !1527
  %neg261 = getelementptr inbounds %struct._xmlRegRange, ptr %169, i32 0, i32 0, !dbg !15259
  %170 = load i32, ptr %neg261, align 8, !dbg !15259, !tbaa !10401
  %cmp262 = icmp eq i32 %170, 0, !dbg !15260
  br i1 %cmp262, label %land.lhs.true263, label %lor.lhs.false266, !dbg !15261

land.lhs.true263:                                 ; preds = %if.end260
  %171 = load ptr, ptr %range2.addr, align 8, !dbg !15262, !tbaa !1527
  %neg264 = getelementptr inbounds %struct._xmlRegRange, ptr %171, i32 0, i32 0, !dbg !15263
  %172 = load i32, ptr %neg264, align 8, !dbg !15263, !tbaa !10401
  %cmp265 = icmp ne i32 %172, 0, !dbg !15264
  br i1 %cmp265, label %if.then272, label %lor.lhs.false266, !dbg !15265

lor.lhs.false266:                                 ; preds = %land.lhs.true263, %if.end260
  %173 = load ptr, ptr %range1.addr, align 8, !dbg !15266, !tbaa !1527
  %neg267 = getelementptr inbounds %struct._xmlRegRange, ptr %173, i32 0, i32 0, !dbg !15267
  %174 = load i32, ptr %neg267, align 8, !dbg !15267, !tbaa !10401
  %cmp268 = icmp ne i32 %174, 0, !dbg !15268
  br i1 %cmp268, label %land.lhs.true269, label %if.end273, !dbg !15269

land.lhs.true269:                                 ; preds = %lor.lhs.false266
  %175 = load ptr, ptr %range2.addr, align 8, !dbg !15270, !tbaa !1527
  %neg270 = getelementptr inbounds %struct._xmlRegRange, ptr %175, i32 0, i32 0, !dbg !15271
  %176 = load i32, ptr %neg270, align 8, !dbg !15271, !tbaa !10401
  %cmp271 = icmp eq i32 %176, 0, !dbg !15272
  br i1 %cmp271, label %if.then272, label %if.end273, !dbg !15273

if.then272:                                       ; preds = %land.lhs.true269, %land.lhs.true263
  %177 = load i32, ptr %ret, align 4, !dbg !15274, !tbaa !1767
  %tobool = icmp ne i32 %177, 0, !dbg !15275
  %lnot = xor i1 %tobool, true, !dbg !15275
  %lnot.ext = zext i1 %lnot to i32, !dbg !15275
  store i32 %lnot.ext, ptr %ret, align 4, !dbg !15276, !tbaa !1767
  br label %if.end273, !dbg !15277

if.end273:                                        ; preds = %if.then272, %land.lhs.true269, %lor.lhs.false266
  %178 = load i32, ptr %ret, align 4, !dbg !15278, !tbaa !1767
  store i32 %178, ptr %retval, align 4, !dbg !15279
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup274, !dbg !15279

cleanup274:                                       ; preds = %if.end273, %if.else253, %if.else142, %if.else99, %cleanup, %if.then31, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !15280
  %179 = load i32, ptr %retval, align 4, !dbg !15280
  ret i32 %179, !dbg !15280
}

; Function Attrs: nounwind uwtable
define internal void @xmlRegFreeRange(ptr noundef %range) #0 !dbg !15281 {
entry:
  %range.addr = alloca ptr, align 8
  store ptr %range, ptr %range.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %range.addr, metadata !15285, metadata !DIExpression()), !dbg !15286
  %0 = load ptr, ptr %range.addr, align 8, !dbg !15287, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !15289
  br i1 %cmp, label %if.then, label %if.end, !dbg !15290

if.then:                                          ; preds = %entry
  br label %return, !dbg !15291

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %range.addr, align 8, !dbg !15292, !tbaa !1527
  %blockName = getelementptr inbounds %struct._xmlRegRange, ptr %1, i32 0, i32 4, !dbg !15294
  %2 = load ptr, ptr %blockName, align 8, !dbg !15294, !tbaa !12330
  %cmp1 = icmp ne ptr %2, null, !dbg !15295
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !15296

if.then2:                                         ; preds = %if.end
  %3 = load ptr, ptr @xmlFree, align 8, !dbg !15297, !tbaa !1527
  %4 = load ptr, ptr %range.addr, align 8, !dbg !15298, !tbaa !1527
  %blockName3 = getelementptr inbounds %struct._xmlRegRange, ptr %4, i32 0, i32 4, !dbg !15299
  %5 = load ptr, ptr %blockName3, align 8, !dbg !15299, !tbaa !12330
  call void %3(ptr noundef %5), !dbg !15297
  br label %if.end4, !dbg !15297

if.end4:                                          ; preds = %if.then2, %if.end
  %6 = load ptr, ptr @xmlFree, align 8, !dbg !15300, !tbaa !1527
  %7 = load ptr, ptr %range.addr, align 8, !dbg !15301, !tbaa !1527
  call void %6(ptr noundef %7), !dbg !15300
  br label %return, !dbg !15302

return:                                           ; preds = %if.end4, %if.then
  ret void, !dbg !15302
}

; Function Attrs: nounwind uwtable
define internal ptr @xmlRegCopyAtom(ptr noundef %ctxt, ptr noundef %atom) #0 !dbg !15303 {
entry:
  %retval = alloca ptr, align 8
  %ctxt.addr = alloca ptr, align 8
  %atom.addr = alloca ptr, align 8
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !15307, metadata !DIExpression()), !dbg !15314
  store ptr %atom, ptr %atom.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %atom.addr, metadata !15308, metadata !DIExpression()), !dbg !15315
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #8, !dbg !15316
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !15309, metadata !DIExpression()), !dbg !15317
  %0 = load ptr, ptr @xmlMalloc, align 8, !dbg !15318, !tbaa !1527
  %call = call ptr %0(i64 noundef 96), !dbg !15318
  store ptr %call, ptr %ret, align 8, !dbg !15319, !tbaa !1527
  %1 = load ptr, ptr %ret, align 8, !dbg !15320, !tbaa !1527
  %cmp = icmp eq ptr %1, null, !dbg !15322
  br i1 %cmp, label %if.then, label %if.end, !dbg !15323

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %ctxt.addr, align 8, !dbg !15324, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %2, ptr noundef @.str.134), !dbg !15326
  store ptr null, ptr %retval, align 8, !dbg !15327
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup31, !dbg !15327

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %ret, align 8, !dbg !15328, !tbaa !1527
  call void @llvm.memset.p0.i64(ptr align 8 %3, i8 0, i64 96, i1 false), !dbg !15329
  %4 = load ptr, ptr %atom.addr, align 8, !dbg !15330, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlRegAtom, ptr %4, i32 0, i32 1, !dbg !15331
  %5 = load i32, ptr %type, align 4, !dbg !15331, !tbaa !3988
  %6 = load ptr, ptr %ret, align 8, !dbg !15332, !tbaa !1527
  %type1 = getelementptr inbounds %struct._xmlRegAtom, ptr %6, i32 0, i32 1, !dbg !15333
  store i32 %5, ptr %type1, align 4, !dbg !15334, !tbaa !3988
  %7 = load ptr, ptr %atom.addr, align 8, !dbg !15335, !tbaa !1527
  %quant = getelementptr inbounds %struct._xmlRegAtom, ptr %7, i32 0, i32 2, !dbg !15336
  %8 = load i32, ptr %quant, align 8, !dbg !15336, !tbaa !3993
  %9 = load ptr, ptr %ret, align 8, !dbg !15337, !tbaa !1527
  %quant2 = getelementptr inbounds %struct._xmlRegAtom, ptr %9, i32 0, i32 2, !dbg !15338
  store i32 %8, ptr %quant2, align 8, !dbg !15339, !tbaa !3993
  %10 = load ptr, ptr %atom.addr, align 8, !dbg !15340, !tbaa !1527
  %min = getelementptr inbounds %struct._xmlRegAtom, ptr %10, i32 0, i32 3, !dbg !15341
  %11 = load i32, ptr %min, align 4, !dbg !15341, !tbaa !2372
  %12 = load ptr, ptr %ret, align 8, !dbg !15342, !tbaa !1527
  %min3 = getelementptr inbounds %struct._xmlRegAtom, ptr %12, i32 0, i32 3, !dbg !15343
  store i32 %11, ptr %min3, align 4, !dbg !15344, !tbaa !2372
  %13 = load ptr, ptr %atom.addr, align 8, !dbg !15345, !tbaa !1527
  %max = getelementptr inbounds %struct._xmlRegAtom, ptr %13, i32 0, i32 4, !dbg !15346
  %14 = load i32, ptr %max, align 8, !dbg !15346, !tbaa !2377
  %15 = load ptr, ptr %ret, align 8, !dbg !15347, !tbaa !1527
  %max4 = getelementptr inbounds %struct._xmlRegAtom, ptr %15, i32 0, i32 4, !dbg !15348
  store i32 %14, ptr %max4, align 8, !dbg !15349, !tbaa !2377
  %16 = load ptr, ptr %atom.addr, align 8, !dbg !15350, !tbaa !1527
  %nbRanges = getelementptr inbounds %struct._xmlRegAtom, ptr %16, i32 0, i32 13, !dbg !15351
  %17 = load i32, ptr %nbRanges, align 4, !dbg !15351, !tbaa !4033
  %cmp5 = icmp sgt i32 %17, 0, !dbg !15352
  br i1 %cmp5, label %if.then6, label %if.end30, !dbg !15353

if.then6:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !15354
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !15310, metadata !DIExpression()), !dbg !15355
  %18 = load ptr, ptr @xmlMalloc, align 8, !dbg !15356, !tbaa !1527
  %19 = load ptr, ptr %atom.addr, align 8, !dbg !15357, !tbaa !1527
  %nbRanges7 = getelementptr inbounds %struct._xmlRegAtom, ptr %19, i32 0, i32 13, !dbg !15358
  %20 = load i32, ptr %nbRanges7, align 4, !dbg !15358, !tbaa !4033
  %conv = sext i32 %20 to i64, !dbg !15357
  %mul = mul i64 8, %conv, !dbg !15359
  %call8 = call ptr %18(i64 noundef %mul), !dbg !15356
  %21 = load ptr, ptr %ret, align 8, !dbg !15360, !tbaa !1527
  %ranges = getelementptr inbounds %struct._xmlRegAtom, ptr %21, i32 0, i32 14, !dbg !15361
  store ptr %call8, ptr %ranges, align 8, !dbg !15362, !tbaa !4047
  %22 = load ptr, ptr %ret, align 8, !dbg !15363, !tbaa !1527
  %ranges9 = getelementptr inbounds %struct._xmlRegAtom, ptr %22, i32 0, i32 14, !dbg !15365
  %23 = load ptr, ptr %ranges9, align 8, !dbg !15365, !tbaa !4047
  %cmp10 = icmp eq ptr %23, null, !dbg !15366
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !15367

if.then12:                                        ; preds = %if.then6
  %24 = load ptr, ptr %ctxt.addr, align 8, !dbg !15368, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %24, ptr noundef @.str.134), !dbg !15370
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15371

if.end13:                                         ; preds = %if.then6
  store i32 0, ptr %i, align 4, !dbg !15372, !tbaa !1767
  br label %for.cond, !dbg !15374

for.cond:                                         ; preds = %for.inc, %if.end13
  %25 = load i32, ptr %i, align 4, !dbg !15375, !tbaa !1767
  %26 = load ptr, ptr %atom.addr, align 8, !dbg !15377, !tbaa !1527
  %nbRanges14 = getelementptr inbounds %struct._xmlRegAtom, ptr %26, i32 0, i32 13, !dbg !15378
  %27 = load i32, ptr %nbRanges14, align 4, !dbg !15378, !tbaa !4033
  %cmp15 = icmp slt i32 %25, %27, !dbg !15379
  br i1 %cmp15, label %for.body, label %for.end, !dbg !15380

for.body:                                         ; preds = %for.cond
  %28 = load ptr, ptr %ctxt.addr, align 8, !dbg !15381, !tbaa !1527
  %29 = load ptr, ptr %atom.addr, align 8, !dbg !15383, !tbaa !1527
  %ranges17 = getelementptr inbounds %struct._xmlRegAtom, ptr %29, i32 0, i32 14, !dbg !15384
  %30 = load ptr, ptr %ranges17, align 8, !dbg !15384, !tbaa !4047
  %31 = load i32, ptr %i, align 4, !dbg !15385, !tbaa !1767
  %idxprom = sext i32 %31 to i64, !dbg !15383
  %arrayidx = getelementptr inbounds ptr, ptr %30, i64 %idxprom, !dbg !15383
  %32 = load ptr, ptr %arrayidx, align 8, !dbg !15383, !tbaa !1527
  %call18 = call ptr @xmlRegCopyRange(ptr noundef %28, ptr noundef %32), !dbg !15386
  %33 = load ptr, ptr %ret, align 8, !dbg !15387, !tbaa !1527
  %ranges19 = getelementptr inbounds %struct._xmlRegAtom, ptr %33, i32 0, i32 14, !dbg !15388
  %34 = load ptr, ptr %ranges19, align 8, !dbg !15388, !tbaa !4047
  %35 = load i32, ptr %i, align 4, !dbg !15389, !tbaa !1767
  %idxprom20 = sext i32 %35 to i64, !dbg !15387
  %arrayidx21 = getelementptr inbounds ptr, ptr %34, i64 %idxprom20, !dbg !15387
  store ptr %call18, ptr %arrayidx21, align 8, !dbg !15390, !tbaa !1527
  %36 = load ptr, ptr %ret, align 8, !dbg !15391, !tbaa !1527
  %ranges22 = getelementptr inbounds %struct._xmlRegAtom, ptr %36, i32 0, i32 14, !dbg !15393
  %37 = load ptr, ptr %ranges22, align 8, !dbg !15393, !tbaa !4047
  %38 = load i32, ptr %i, align 4, !dbg !15394, !tbaa !1767
  %idxprom23 = sext i32 %38 to i64, !dbg !15391
  %arrayidx24 = getelementptr inbounds ptr, ptr %37, i64 %idxprom23, !dbg !15391
  %39 = load ptr, ptr %arrayidx24, align 8, !dbg !15391, !tbaa !1527
  %cmp25 = icmp eq ptr %39, null, !dbg !15395
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !15396

if.then27:                                        ; preds = %for.body
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15397

if.end28:                                         ; preds = %for.body
  %40 = load i32, ptr %i, align 4, !dbg !15398, !tbaa !1767
  %add = add nsw i32 %40, 1, !dbg !15399
  %41 = load ptr, ptr %ret, align 8, !dbg !15400, !tbaa !1527
  %nbRanges29 = getelementptr inbounds %struct._xmlRegAtom, ptr %41, i32 0, i32 13, !dbg !15401
  store i32 %add, ptr %nbRanges29, align 4, !dbg !15402, !tbaa !4033
  br label %for.inc, !dbg !15403

for.inc:                                          ; preds = %if.end28
  %42 = load i32, ptr %i, align 4, !dbg !15404, !tbaa !1767
  %inc = add nsw i32 %42, 1, !dbg !15404
  store i32 %inc, ptr %i, align 4, !dbg !15404, !tbaa !1767
  br label %for.cond, !dbg !15405, !llvm.loop !15406

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !15408
  br label %cleanup, !dbg !15408

cleanup:                                          ; preds = %if.then27, %if.then12, %for.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !15408
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup31 [
    i32 0, label %cleanup.cont
    i32 2, label %error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end30, !dbg !15409

if.end30:                                         ; preds = %cleanup.cont, %if.end
  %43 = load ptr, ptr %ret, align 8, !dbg !15410, !tbaa !1527
  store ptr %43, ptr %retval, align 8, !dbg !15411
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup31, !dbg !15411

error:                                            ; preds = %cleanup
  tail call void @llvm.dbg.label(metadata !15313), !dbg !15412
  %44 = load ptr, ptr %ret, align 8, !dbg !15413, !tbaa !1527
  call void @xmlRegFreeAtom(ptr noundef %44), !dbg !15414
  store ptr null, ptr %retval, align 8, !dbg !15415
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup31, !dbg !15415

cleanup31:                                        ; preds = %error, %if.end30, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #8, !dbg !15416
  %45 = load ptr, ptr %retval, align 8, !dbg !15416
  ret ptr %45, !dbg !15416
}

; Function Attrs: nounwind uwtable
define internal ptr @xmlRegCopyRange(ptr noundef %ctxt, ptr noundef %range) #0 !dbg !15417 {
entry:
  %retval = alloca ptr, align 8
  %ctxt.addr = alloca ptr, align 8
  %range.addr = alloca ptr, align 8
  %ret = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !15421, metadata !DIExpression()), !dbg !15424
  store ptr %range, ptr %range.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %range.addr, metadata !15422, metadata !DIExpression()), !dbg !15425
  call void @llvm.lifetime.start.p0(i64 8, ptr %ret) #8, !dbg !15426
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !15423, metadata !DIExpression()), !dbg !15427
  %0 = load ptr, ptr %range.addr, align 8, !dbg !15428, !tbaa !1527
  %cmp = icmp eq ptr %0, null, !dbg !15430
  br i1 %cmp, label %if.then, label %if.end, !dbg !15431

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !15432
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15432

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %ctxt.addr, align 8, !dbg !15433, !tbaa !1527
  %2 = load ptr, ptr %range.addr, align 8, !dbg !15434, !tbaa !1527
  %neg = getelementptr inbounds %struct._xmlRegRange, ptr %2, i32 0, i32 0, !dbg !15435
  %3 = load i32, ptr %neg, align 8, !dbg !15435, !tbaa !10401
  %4 = load ptr, ptr %range.addr, align 8, !dbg !15436, !tbaa !1527
  %type = getelementptr inbounds %struct._xmlRegRange, ptr %4, i32 0, i32 1, !dbg !15437
  %5 = load i32, ptr %type, align 4, !dbg !15437, !tbaa !10409
  %6 = load ptr, ptr %range.addr, align 8, !dbg !15438, !tbaa !1527
  %start = getelementptr inbounds %struct._xmlRegRange, ptr %6, i32 0, i32 2, !dbg !15439
  %7 = load i32, ptr %start, align 8, !dbg !15439, !tbaa !10414
  %8 = load ptr, ptr %range.addr, align 8, !dbg !15440, !tbaa !1527
  %end = getelementptr inbounds %struct._xmlRegRange, ptr %8, i32 0, i32 3, !dbg !15441
  %9 = load i32, ptr %end, align 4, !dbg !15441, !tbaa !10417
  %call = call ptr @xmlRegNewRange(ptr noundef %1, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9), !dbg !15442
  store ptr %call, ptr %ret, align 8, !dbg !15443, !tbaa !1527
  %10 = load ptr, ptr %ret, align 8, !dbg !15444, !tbaa !1527
  %cmp1 = icmp eq ptr %10, null, !dbg !15446
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !15447

if.then2:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !15448
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15448

if.end3:                                          ; preds = %if.end
  %11 = load ptr, ptr %range.addr, align 8, !dbg !15449, !tbaa !1527
  %blockName = getelementptr inbounds %struct._xmlRegRange, ptr %11, i32 0, i32 4, !dbg !15451
  %12 = load ptr, ptr %blockName, align 8, !dbg !15451, !tbaa !12330
  %cmp4 = icmp ne ptr %12, null, !dbg !15452
  br i1 %cmp4, label %if.then5, label %if.end13, !dbg !15453

if.then5:                                         ; preds = %if.end3
  %13 = load ptr, ptr %range.addr, align 8, !dbg !15454, !tbaa !1527
  %blockName6 = getelementptr inbounds %struct._xmlRegRange, ptr %13, i32 0, i32 4, !dbg !15456
  %14 = load ptr, ptr %blockName6, align 8, !dbg !15456, !tbaa !12330
  %call7 = call ptr @xmlStrdup(ptr noundef %14), !dbg !15457
  %15 = load ptr, ptr %ret, align 8, !dbg !15458, !tbaa !1527
  %blockName8 = getelementptr inbounds %struct._xmlRegRange, ptr %15, i32 0, i32 4, !dbg !15459
  store ptr %call7, ptr %blockName8, align 8, !dbg !15460, !tbaa !12330
  %16 = load ptr, ptr %ret, align 8, !dbg !15461, !tbaa !1527
  %blockName9 = getelementptr inbounds %struct._xmlRegRange, ptr %16, i32 0, i32 4, !dbg !15463
  %17 = load ptr, ptr %blockName9, align 8, !dbg !15463, !tbaa !12330
  %cmp10 = icmp eq ptr %17, null, !dbg !15464
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !15465

if.then11:                                        ; preds = %if.then5
  %18 = load ptr, ptr %ctxt.addr, align 8, !dbg !15466, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %18, ptr noundef @.str.117), !dbg !15468
  %19 = load ptr, ptr %ret, align 8, !dbg !15469, !tbaa !1527
  call void @xmlRegFreeRange(ptr noundef %19), !dbg !15470
  store ptr null, ptr %retval, align 8, !dbg !15471
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15471

if.end12:                                         ; preds = %if.then5
  br label %if.end13, !dbg !15472

if.end13:                                         ; preds = %if.end12, %if.end3
  %20 = load ptr, ptr %ret, align 8, !dbg !15473, !tbaa !1527
  store ptr %20, ptr %retval, align 8, !dbg !15474
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15474

cleanup:                                          ; preds = %if.end13, %if.then11, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %ret) #8, !dbg !15475
  %21 = load ptr, ptr %retval, align 8, !dbg !15475
  ret ptr %21, !dbg !15475
}

; Function Attrs: nounwind uwtable
define internal void @xmlRegStateAddTransTo(ptr noundef %ctxt, ptr noundef %target, i32 noundef %from) #0 !dbg !15476 {
entry:
  %ctxt.addr = alloca ptr, align 8
  %target.addr = alloca ptr, align 8
  %from.addr = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctxt, ptr %ctxt.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %ctxt.addr, metadata !15480, metadata !DIExpression()), !dbg !15487
  store ptr %target, ptr %target.addr, align 8, !tbaa !1527
  tail call void @llvm.dbg.declare(metadata ptr %target.addr, metadata !15481, metadata !DIExpression()), !dbg !15488
  store i32 %from, ptr %from.addr, align 4, !tbaa !1767
  tail call void @llvm.dbg.declare(metadata ptr %from.addr, metadata !15482, metadata !DIExpression()), !dbg !15489
  %0 = load ptr, ptr %target.addr, align 8, !dbg !15490, !tbaa !1527
  %maxTransTo = getelementptr inbounds %struct._xmlAutomataState, ptr %0, i32 0, i32 8, !dbg !15491
  %1 = load i32, ptr %maxTransTo, align 8, !dbg !15491, !tbaa !15492
  %cmp = icmp eq i32 %1, 0, !dbg !15493
  br i1 %cmp, label %if.then, label %if.else, !dbg !15494

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %target.addr, align 8, !dbg !15495, !tbaa !1527
  %maxTransTo1 = getelementptr inbounds %struct._xmlAutomataState, ptr %2, i32 0, i32 8, !dbg !15497
  store i32 8, ptr %maxTransTo1, align 8, !dbg !15498, !tbaa !15492
  %3 = load ptr, ptr @xmlMalloc, align 8, !dbg !15499, !tbaa !1527
  %4 = load ptr, ptr %target.addr, align 8, !dbg !15500, !tbaa !1527
  %maxTransTo2 = getelementptr inbounds %struct._xmlAutomataState, ptr %4, i32 0, i32 8, !dbg !15501
  %5 = load i32, ptr %maxTransTo2, align 8, !dbg !15501, !tbaa !15492
  %conv = sext i32 %5 to i64, !dbg !15500
  %mul = mul i64 %conv, 4, !dbg !15502
  %call = call ptr %3(i64 noundef %mul), !dbg !15499
  %6 = load ptr, ptr %target.addr, align 8, !dbg !15503, !tbaa !1527
  %transTo = getelementptr inbounds %struct._xmlAutomataState, ptr %6, i32 0, i32 10, !dbg !15504
  store ptr %call, ptr %transTo, align 8, !dbg !15505, !tbaa !6775
  %7 = load ptr, ptr %target.addr, align 8, !dbg !15506, !tbaa !1527
  %transTo3 = getelementptr inbounds %struct._xmlAutomataState, ptr %7, i32 0, i32 10, !dbg !15508
  %8 = load ptr, ptr %transTo3, align 8, !dbg !15508, !tbaa !6775
  %cmp4 = icmp eq ptr %8, null, !dbg !15509
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !15510

if.then6:                                         ; preds = %if.then
  %9 = load ptr, ptr %ctxt.addr, align 8, !dbg !15511, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %9, ptr noundef @.str.138), !dbg !15513
  %10 = load ptr, ptr %target.addr, align 8, !dbg !15514, !tbaa !1527
  %maxTransTo7 = getelementptr inbounds %struct._xmlAutomataState, ptr %10, i32 0, i32 8, !dbg !15515
  store i32 0, ptr %maxTransTo7, align 8, !dbg !15516, !tbaa !15492
  br label %return, !dbg !15517

if.end:                                           ; preds = %if.then
  br label %if.end26, !dbg !15518

if.else:                                          ; preds = %entry
  %11 = load ptr, ptr %target.addr, align 8, !dbg !15519, !tbaa !1527
  %nbTransTo = getelementptr inbounds %struct._xmlAutomataState, ptr %11, i32 0, i32 9, !dbg !15520
  %12 = load i32, ptr %nbTransTo, align 4, !dbg !15520, !tbaa !13136
  %13 = load ptr, ptr %target.addr, align 8, !dbg !15521, !tbaa !1527
  %maxTransTo8 = getelementptr inbounds %struct._xmlAutomataState, ptr %13, i32 0, i32 8, !dbg !15522
  %14 = load i32, ptr %maxTransTo8, align 8, !dbg !15522, !tbaa !15492
  %cmp9 = icmp sge i32 %12, %14, !dbg !15523
  br i1 %cmp9, label %if.then11, label %if.end25, !dbg !15524

if.then11:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !15525
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !15483, metadata !DIExpression()), !dbg !15526
  %15 = load ptr, ptr %target.addr, align 8, !dbg !15527, !tbaa !1527
  %maxTransTo12 = getelementptr inbounds %struct._xmlAutomataState, ptr %15, i32 0, i32 8, !dbg !15528
  %16 = load i32, ptr %maxTransTo12, align 8, !dbg !15529, !tbaa !15492
  %mul13 = mul nsw i32 %16, 2, !dbg !15529
  store i32 %mul13, ptr %maxTransTo12, align 8, !dbg !15529, !tbaa !15492
  %17 = load ptr, ptr @xmlRealloc, align 8, !dbg !15530, !tbaa !1527
  %18 = load ptr, ptr %target.addr, align 8, !dbg !15531, !tbaa !1527
  %transTo14 = getelementptr inbounds %struct._xmlAutomataState, ptr %18, i32 0, i32 10, !dbg !15532
  %19 = load ptr, ptr %transTo14, align 8, !dbg !15532, !tbaa !6775
  %20 = load ptr, ptr %target.addr, align 8, !dbg !15533, !tbaa !1527
  %maxTransTo15 = getelementptr inbounds %struct._xmlAutomataState, ptr %20, i32 0, i32 8, !dbg !15534
  %21 = load i32, ptr %maxTransTo15, align 8, !dbg !15534, !tbaa !15492
  %conv16 = sext i32 %21 to i64, !dbg !15533
  %mul17 = mul i64 %conv16, 4, !dbg !15535
  %call18 = call ptr %17(ptr noundef %19, i64 noundef %mul17), !dbg !15530
  store ptr %call18, ptr %tmp, align 8, !dbg !15536, !tbaa !1527
  %22 = load ptr, ptr %tmp, align 8, !dbg !15537, !tbaa !1527
  %cmp19 = icmp eq ptr %22, null, !dbg !15539
  br i1 %cmp19, label %if.then21, label %if.end23, !dbg !15540

if.then21:                                        ; preds = %if.then11
  %23 = load ptr, ptr %ctxt.addr, align 8, !dbg !15541, !tbaa !1527
  call void @xmlRegexpErrMemory(ptr noundef %23, ptr noundef @.str.138), !dbg !15543
  %24 = load ptr, ptr %target.addr, align 8, !dbg !15544, !tbaa !1527
  %maxTransTo22 = getelementptr inbounds %struct._xmlAutomataState, ptr %24, i32 0, i32 8, !dbg !15545
  %25 = load i32, ptr %maxTransTo22, align 8, !dbg !15546, !tbaa !15492
  %div = sdiv i32 %25, 2, !dbg !15546
  store i32 %div, ptr %maxTransTo22, align 8, !dbg !15546, !tbaa !15492
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !15547

if.end23:                                         ; preds = %if.then11
  %26 = load ptr, ptr %tmp, align 8, !dbg !15548, !tbaa !1527
  %27 = load ptr, ptr %target.addr, align 8, !dbg !15549, !tbaa !1527
  %transTo24 = getelementptr inbounds %struct._xmlAutomataState, ptr %27, i32 0, i32 10, !dbg !15550
  store ptr %26, ptr %transTo24, align 8, !dbg !15551, !tbaa !6775
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !15552
  br label %cleanup, !dbg !15552

cleanup:                                          ; preds = %if.end23, %if.then21
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !15552
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end25, !dbg !15553

if.end25:                                         ; preds = %cleanup.cont, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end
  %28 = load i32, ptr %from.addr, align 4, !dbg !15554, !tbaa !1767
  %29 = load ptr, ptr %target.addr, align 8, !dbg !15555, !tbaa !1527
  %transTo27 = getelementptr inbounds %struct._xmlAutomataState, ptr %29, i32 0, i32 10, !dbg !15556
  %30 = load ptr, ptr %transTo27, align 8, !dbg !15556, !tbaa !6775
  %31 = load ptr, ptr %target.addr, align 8, !dbg !15557, !tbaa !1527
  %nbTransTo28 = getelementptr inbounds %struct._xmlAutomataState, ptr %31, i32 0, i32 9, !dbg !15558
  %32 = load i32, ptr %nbTransTo28, align 4, !dbg !15558, !tbaa !13136
  %idxprom = sext i32 %32 to i64, !dbg !15555
  %arrayidx = getelementptr inbounds i32, ptr %30, i64 %idxprom, !dbg !15555
  store i32 %28, ptr %arrayidx, align 4, !dbg !15559, !tbaa !1767
  %33 = load ptr, ptr %target.addr, align 8, !dbg !15560, !tbaa !1527
  %nbTransTo29 = getelementptr inbounds %struct._xmlAutomataState, ptr %33, i32 0, i32 9, !dbg !15561
  %34 = load i32, ptr %nbTransTo29, align 4, !dbg !15562, !tbaa !13136
  %inc = add nsw i32 %34, 1, !dbg !15562
  store i32 %inc, ptr %nbTransTo29, align 4, !dbg !15562, !tbaa !13136
  br label %return, !dbg !15563

return:                                           ; preds = %if.end26, %cleanup, %if.then6
  ret void, !dbg !15563

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #7

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #3 = { nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #8 = { nounwind }
attributes #9 = { nounwind willreturn memory(read) }

!llvm.dbg.cu = !{!390}
!llvm.module.flags = !{!1513, !1514, !1515, !1516, !1517}
!llvm.ident = !{!1518}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3585, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "xmlregexp.c", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "9baff07fda19112b9f7a02c2299a361e")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 216, elements: !6)
!4 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!5 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!6 = !{!7}
!7 = !DISubrange(count: 27)
!8 = !DIGlobalVariableExpression(var: !9, expr: !DIExpression())
!9 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5579, type: !10, isLocal: true, isDefinition: true)
!10 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 80, elements: !11)
!11 = !{!12}
!12 = !DISubrange(count: 10)
!13 = !DIGlobalVariableExpression(var: !14, expr: !DIExpression())
!14 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5581, type: !15, isLocal: true, isDefinition: true)
!15 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 48, elements: !16)
!16 = !{!17}
!17 = !DISubrange(count: 6)
!18 = !DIGlobalVariableExpression(var: !19, expr: !DIExpression())
!19 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5584, type: !15, isLocal: true, isDefinition: true)
!20 = !DIGlobalVariableExpression(var: !21, expr: !DIExpression())
!21 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5585, type: !22, isLocal: true, isDefinition: true)
!22 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 16, elements: !23)
!23 = !{!24}
!24 = !DISubrange(count: 2)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5586, type: !27, isLocal: true, isDefinition: true)
!27 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 88, elements: !28)
!28 = !{!29}
!29 = !DISubrange(count: 11)
!30 = !DIGlobalVariableExpression(var: !31, expr: !DIExpression())
!31 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5588, type: !32, isLocal: true, isDefinition: true)
!32 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 56, elements: !33)
!33 = !{!34}
!34 = !DISubrange(count: 7)
!35 = !DIGlobalVariableExpression(var: !36, expr: !DIExpression())
!36 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5591, type: !27, isLocal: true, isDefinition: true)
!37 = !DIGlobalVariableExpression(var: !38, expr: !DIExpression())
!38 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5596, type: !39, isLocal: true, isDefinition: true)
!39 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 112, elements: !40)
!40 = !{!41}
!41 = !DISubrange(count: 14)
!42 = !DIGlobalVariableExpression(var: !43, expr: !DIExpression())
!43 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5598, type: !44, isLocal: true, isDefinition: true)
!44 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 160, elements: !45)
!45 = !{!46}
!46 = !DISubrange(count: 20)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5630, type: !49, isLocal: true, isDefinition: true)
!49 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 280, elements: !50)
!50 = !{!51}
!51 = !DISubrange(count: 35)
!52 = !DIGlobalVariableExpression(var: !53, expr: !DIExpression())
!53 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5996, type: !32, isLocal: true, isDefinition: true)
!54 = !DIGlobalVariableExpression(var: !55, expr: !DIExpression())
!55 = distinct !DIGlobalVariable(scope: null, file: !2, line: 388, type: !56, isLocal: true, isDefinition: true)
!56 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 248, elements: !57)
!57 = !{!58}
!58 = !DISubrange(count: 31)
!59 = !DIGlobalVariableExpression(var: !60, expr: !DIExpression())
!60 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3987, type: !61, isLocal: true, isDefinition: true)
!61 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 288, elements: !62)
!62 = !{!63}
!63 = !DISubrange(count: 36)
!64 = !DIGlobalVariableExpression(var: !65, expr: !DIExpression())
!65 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3678, type: !66, isLocal: true, isDefinition: true)
!66 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 168, elements: !67)
!67 = !{!68}
!68 = !DISubrange(count: 21)
!69 = !DIGlobalVariableExpression(var: !70, expr: !DIExpression())
!70 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3179, type: !39, isLocal: true, isDefinition: true)
!71 = !DIGlobalVariableExpression(var: !72, expr: !DIExpression())
!72 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3235, type: !73, isLocal: true, isDefinition: true)
!73 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 232, elements: !74)
!74 = !{!75}
!75 = !DISubrange(count: 29)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4365, type: !78, isLocal: true, isDefinition: true)
!78 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 240, elements: !79)
!79 = !{!80}
!80 = !DISubrange(count: 30)
!81 = !DIGlobalVariableExpression(var: !82, expr: !DIExpression())
!82 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4365, type: !83, isLocal: true, isDefinition: true)
!83 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 96, elements: !84)
!84 = !{!85}
!85 = !DISubrange(count: 12)
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1111, type: !88, isLocal: true, isDefinition: true)
!88 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 64, elements: !89)
!89 = !{!90}
!90 = !DISubrange(count: 8)
!91 = !DIGlobalVariableExpression(var: !92, expr: !DIExpression())
!92 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1117, type: !93, isLocal: true, isDefinition: true)
!93 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 40, elements: !94)
!94 = !{!95}
!95 = !DISubrange(count: 5)
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1121, type: !32, isLocal: true, isDefinition: true)
!98 = !DIGlobalVariableExpression(var: !99, expr: !DIExpression())
!99 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1125, type: !100, isLocal: true, isDefinition: true)
!100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 72, elements: !101)
!101 = !{!102}
!102 = !DISubrange(count: 9)
!103 = !DIGlobalVariableExpression(var: !104, expr: !DIExpression())
!104 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1128, type: !83, isLocal: true, isDefinition: true)
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1132, type: !107, isLocal: true, isDefinition: true)
!107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 136, elements: !108)
!108 = !{!109}
!109 = !DISubrange(count: 17)
!110 = !DIGlobalVariableExpression(var: !111, expr: !DIExpression())
!111 = distinct !DIGlobalVariable(scope: null, file: !2, line: 971, type: !100, isLocal: true, isDefinition: true)
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(scope: null, file: !2, line: 973, type: !100, isLocal: true, isDefinition: true)
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(scope: null, file: !2, line: 975, type: !88, isLocal: true, isDefinition: true)
!116 = !DIGlobalVariableExpression(var: !117, expr: !DIExpression())
!117 = distinct !DIGlobalVariable(scope: null, file: !2, line: 977, type: !100, isLocal: true, isDefinition: true)
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(scope: null, file: !2, line: 979, type: !88, isLocal: true, isDefinition: true)
!120 = !DIGlobalVariableExpression(var: !121, expr: !DIExpression())
!121 = distinct !DIGlobalVariable(scope: null, file: !2, line: 981, type: !100, isLocal: true, isDefinition: true)
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(scope: null, file: !2, line: 983, type: !10, isLocal: true, isDefinition: true)
!124 = !DIGlobalVariableExpression(var: !125, expr: !DIExpression())
!125 = distinct !DIGlobalVariable(scope: null, file: !2, line: 985, type: !10, isLocal: true, isDefinition: true)
!126 = !DIGlobalVariableExpression(var: !127, expr: !DIExpression())
!127 = distinct !DIGlobalVariable(scope: null, file: !2, line: 987, type: !10, isLocal: true, isDefinition: true)
!128 = !DIGlobalVariableExpression(var: !129, expr: !DIExpression())
!129 = distinct !DIGlobalVariable(scope: null, file: !2, line: 989, type: !130, isLocal: true, isDefinition: true)
!130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 104, elements: !131)
!131 = !{!132}
!132 = !DISubrange(count: 13)
!133 = !DIGlobalVariableExpression(var: !134, expr: !DIExpression())
!134 = distinct !DIGlobalVariable(scope: null, file: !2, line: 991, type: !10, isLocal: true, isDefinition: true)
!135 = !DIGlobalVariableExpression(var: !136, expr: !DIExpression())
!136 = distinct !DIGlobalVariable(scope: null, file: !2, line: 993, type: !130, isLocal: true, isDefinition: true)
!137 = !DIGlobalVariableExpression(var: !138, expr: !DIExpression())
!138 = distinct !DIGlobalVariable(scope: null, file: !2, line: 995, type: !100, isLocal: true, isDefinition: true)
!139 = !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = distinct !DIGlobalVariable(scope: null, file: !2, line: 997, type: !83, isLocal: true, isDefinition: true)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(scope: null, file: !2, line: 999, type: !10, isLocal: true, isDefinition: true)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1001, type: !130, isLocal: true, isDefinition: true)
!145 = !DIGlobalVariableExpression(var: !146, expr: !DIExpression())
!146 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1003, type: !88, isLocal: true, isDefinition: true)
!147 = !DIGlobalVariableExpression(var: !148, expr: !DIExpression())
!148 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1005, type: !149, isLocal: true, isDefinition: true)
!149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 144, elements: !150)
!150 = !{!151}
!151 = !DISubrange(count: 18)
!152 = !DIGlobalVariableExpression(var: !153, expr: !DIExpression())
!153 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1007, type: !149, isLocal: true, isDefinition: true)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1009, type: !149, isLocal: true, isDefinition: true)
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1011, type: !107, isLocal: true, isDefinition: true)
!158 = !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!159 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1013, type: !160, isLocal: true, isDefinition: true)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 120, elements: !161)
!161 = !{!162}
!162 = !DISubrange(count: 15)
!163 = !DIGlobalVariableExpression(var: !164, expr: !DIExpression())
!164 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1015, type: !15, isLocal: true, isDefinition: true)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1017, type: !107, isLocal: true, isDefinition: true)
!167 = !DIGlobalVariableExpression(var: !168, expr: !DIExpression())
!168 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1019, type: !66, isLocal: true, isDefinition: true)
!169 = !DIGlobalVariableExpression(var: !170, expr: !DIExpression())
!170 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1021, type: !171, isLocal: true, isDefinition: true)
!171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, elements: !172)
!172 = !{!173}
!173 = !DISubrange(count: 16)
!174 = !DIGlobalVariableExpression(var: !175, expr: !DIExpression())
!175 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1023, type: !88, isLocal: true, isDefinition: true)
!176 = !DIGlobalVariableExpression(var: !177, expr: !DIExpression())
!177 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1025, type: !171, isLocal: true, isDefinition: true)
!178 = !DIGlobalVariableExpression(var: !179, expr: !DIExpression())
!179 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1027, type: !160, isLocal: true, isDefinition: true)
!180 = !DIGlobalVariableExpression(var: !181, expr: !DIExpression())
!181 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1029, type: !160, isLocal: true, isDefinition: true)
!182 = !DIGlobalVariableExpression(var: !183, expr: !DIExpression())
!183 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1031, type: !32, isLocal: true, isDefinition: true)
!184 = !DIGlobalVariableExpression(var: !185, expr: !DIExpression())
!185 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1033, type: !107, isLocal: true, isDefinition: true)
!186 = !DIGlobalVariableExpression(var: !187, expr: !DIExpression())
!187 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1035, type: !83, isLocal: true, isDefinition: true)
!188 = !DIGlobalVariableExpression(var: !189, expr: !DIExpression())
!189 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1037, type: !83, isLocal: true, isDefinition: true)
!190 = !DIGlobalVariableExpression(var: !191, expr: !DIExpression())
!191 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1039, type: !130, isLocal: true, isDefinition: true)
!192 = !DIGlobalVariableExpression(var: !193, expr: !DIExpression())
!193 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1041, type: !107, isLocal: true, isDefinition: true)
!194 = !DIGlobalVariableExpression(var: !195, expr: !DIExpression())
!195 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1043, type: !171, isLocal: true, isDefinition: true)
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1045, type: !39, isLocal: true, isDefinition: true)
!198 = !DIGlobalVariableExpression(var: !199, expr: !DIExpression())
!199 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1047, type: !32, isLocal: true, isDefinition: true)
!200 = !DIGlobalVariableExpression(var: !201, expr: !DIExpression())
!201 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1049, type: !130, isLocal: true, isDefinition: true)
!202 = !DIGlobalVariableExpression(var: !203, expr: !DIExpression())
!203 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1051, type: !83, isLocal: true, isDefinition: true)
!204 = !DIGlobalVariableExpression(var: !205, expr: !DIExpression())
!205 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1053, type: !83, isLocal: true, isDefinition: true)
!206 = !DIGlobalVariableExpression(var: !207, expr: !DIExpression())
!207 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1055, type: !88, isLocal: true, isDefinition: true)
!208 = !DIGlobalVariableExpression(var: !209, expr: !DIExpression())
!209 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1057, type: !130, isLocal: true, isDefinition: true)
!210 = !DIGlobalVariableExpression(var: !211, expr: !DIExpression())
!211 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1059, type: !107, isLocal: true, isDefinition: true)
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1061, type: !107, isLocal: true, isDefinition: true)
!214 = !DIGlobalVariableExpression(var: !215, expr: !DIExpression())
!215 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1063, type: !160, isLocal: true, isDefinition: true)
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1065, type: !32, isLocal: true, isDefinition: true)
!218 = !DIGlobalVariableExpression(var: !219, expr: !DIExpression())
!219 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1067, type: !160, isLocal: true, isDefinition: true)
!220 = !DIGlobalVariableExpression(var: !221, expr: !DIExpression())
!221 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1069, type: !39, isLocal: true, isDefinition: true)
!222 = !DIGlobalVariableExpression(var: !223, expr: !DIExpression())
!223 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1071, type: !160, isLocal: true, isDefinition: true)
!224 = !DIGlobalVariableExpression(var: !225, expr: !DIExpression())
!225 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1073, type: !10, isLocal: true, isDefinition: true)
!226 = !DIGlobalVariableExpression(var: !227, expr: !DIExpression())
!227 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1075, type: !32, isLocal: true, isDefinition: true)
!228 = !DIGlobalVariableExpression(var: !229, expr: !DIExpression())
!229 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1085, type: !15, isLocal: true, isDefinition: true)
!230 = !DIGlobalVariableExpression(var: !231, expr: !DIExpression())
!231 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1087, type: !232, isLocal: true, isDefinition: true)
!232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 24, elements: !233)
!233 = !{!234}
!234 = !DISubrange(count: 3)
!235 = !DIGlobalVariableExpression(var: !236, expr: !DIExpression())
!236 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1089, type: !232, isLocal: true, isDefinition: true)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1091, type: !232, isLocal: true, isDefinition: true)
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1093, type: !32, isLocal: true, isDefinition: true)
!241 = !DIGlobalVariableExpression(var: !242, expr: !DIExpression())
!242 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1095, type: !10, isLocal: true, isDefinition: true)
!243 = !DIGlobalVariableExpression(var: !244, expr: !DIExpression())
!244 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1097, type: !93, isLocal: true, isDefinition: true)
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1102, type: !10, isLocal: true, isDefinition: true)
!247 = !DIGlobalVariableExpression(var: !248, expr: !DIExpression())
!248 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1104, type: !10, isLocal: true, isDefinition: true)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1106, type: !100, isLocal: true, isDefinition: true)
!251 = !DIGlobalVariableExpression(var: !252, expr: !DIExpression())
!252 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1176, type: !100, isLocal: true, isDefinition: true)
!253 = !DIGlobalVariableExpression(var: !254, expr: !DIExpression())
!254 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1182, type: !32, isLocal: true, isDefinition: true)
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1184, type: !32, isLocal: true, isDefinition: true)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1186, type: !66, isLocal: true, isDefinition: true)
!259 = !DIGlobalVariableExpression(var: !260, expr: !DIExpression())
!260 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1140, type: !10, isLocal: true, isDefinition: true)
!261 = !DIGlobalVariableExpression(var: !262, expr: !DIExpression())
!262 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1146, type: !100, isLocal: true, isDefinition: true)
!263 = !DIGlobalVariableExpression(var: !264, expr: !DIExpression())
!264 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1151, type: !265, isLocal: true, isDefinition: true)
!265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 184, elements: !266)
!266 = !{!267}
!267 = !DISubrange(count: 23)
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1153, type: !149, isLocal: true, isDefinition: true)
!270 = !DIGlobalVariableExpression(var: !271, expr: !DIExpression())
!271 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1156, type: !130, isLocal: true, isDefinition: true)
!272 = !DIGlobalVariableExpression(var: !273, expr: !DIExpression())
!273 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1159, type: !107, isLocal: true, isDefinition: true)
!274 = !DIGlobalVariableExpression(var: !275, expr: !DIExpression())
!275 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1161, type: !107, isLocal: true, isDefinition: true)
!276 = !DIGlobalVariableExpression(var: !277, expr: !DIExpression())
!277 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1164, type: !160, isLocal: true, isDefinition: true)
!278 = !DIGlobalVariableExpression(var: !279, expr: !DIExpression())
!279 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1168, type: !100, isLocal: true, isDefinition: true)
!280 = !DIGlobalVariableExpression(var: !281, expr: !DIExpression())
!281 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1169, type: !171, isLocal: true, isDefinition: true)
!282 = !DIGlobalVariableExpression(var: !283, expr: !DIExpression())
!283 = distinct !DIGlobalVariable(scope: null, file: !2, line: 905, type: !107, isLocal: true, isDefinition: true)
!284 = !DIGlobalVariableExpression(var: !285, expr: !DIExpression())
!285 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1458, type: !130, isLocal: true, isDefinition: true)
!286 = !DIGlobalVariableExpression(var: !287, expr: !DIExpression())
!287 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5475, type: !288, isLocal: true, isDefinition: true)
!288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 224, elements: !289)
!289 = !{!290}
!290 = !DISubrange(count: 28)
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5423, type: !293, isLocal: true, isDefinition: true)
!293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 376, elements: !294)
!294 = !{!295}
!295 = !DISubrange(count: 47)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5443, type: !78, isLocal: true, isDefinition: true)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5284, type: !300, isLocal: true, isDefinition: true)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 272, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 34)
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5257, type: !288, isLocal: true, isDefinition: true)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5131, type: !39, isLocal: true, isDefinition: true)
!307 = !DIGlobalVariableExpression(var: !308, expr: !DIExpression())
!308 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5148, type: !66, isLocal: true, isDefinition: true)
!309 = !DIGlobalVariableExpression(var: !310, expr: !DIExpression())
!310 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5156, type: !265, isLocal: true, isDefinition: true)
!311 = !DIGlobalVariableExpression(var: !312, expr: !DIExpression())
!312 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5195, type: !300, isLocal: true, isDefinition: true)
!313 = !DIGlobalVariableExpression(var: !314, expr: !DIExpression())
!314 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5201, type: !315, isLocal: true, isDefinition: true)
!315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 304, elements: !316)
!316 = !{!317}
!317 = !DISubrange(count: 38)
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1247, type: !320, isLocal: true, isDefinition: true)
!320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 192, elements: !321)
!321 = !{!322}
!322 = !DISubrange(count: 24)
!323 = !DIGlobalVariableExpression(var: !324, expr: !DIExpression())
!324 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1251, type: !78, isLocal: true, isDefinition: true)
!325 = !DIGlobalVariableExpression(var: !326, expr: !DIExpression())
!326 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1259, type: !39, isLocal: true, isDefinition: true)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(scope: null, file: !2, line: 745, type: !107, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4969, type: !78, isLocal: true, isDefinition: true)
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4977, type: !39, isLocal: true, isDefinition: true)
!333 = !DIGlobalVariableExpression(var: !334, expr: !DIExpression())
!334 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4983, type: !39, isLocal: true, isDefinition: true)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5110, type: !293, isLocal: true, isDefinition: true)
!337 = !DIGlobalVariableExpression(var: !338, expr: !DIExpression())
!338 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4867, type: !171, isLocal: true, isDefinition: true)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4890, type: !341, isLocal: true, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 176, elements: !342)
!342 = !{!343}
!343 = !DISubrange(count: 22)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4938, type: !346, isLocal: true, isDefinition: true)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 296, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 37)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(scope: null, file: !2, line: 4917, type: !44, isLocal: true, isDefinition: true)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5361, type: !44, isLocal: true, isDefinition: true)
!353 = !DIGlobalVariableExpression(var: !354, expr: !DIExpression())
!354 = distinct !DIGlobalVariable(scope: null, file: !2, line: 5379, type: !320, isLocal: true, isDefinition: true)
!355 = !DIGlobalVariableExpression(var: !356, expr: !DIExpression())
!356 = distinct !DIGlobalVariable(scope: null, file: !2, line: 411, type: !265, isLocal: true, isDefinition: true)
!357 = !DIGlobalVariableExpression(var: !358, expr: !DIExpression())
!358 = distinct !DIGlobalVariable(scope: null, file: !2, line: 461, type: !107, isLocal: true, isDefinition: true)
!359 = !DIGlobalVariableExpression(var: !360, expr: !DIExpression())
!360 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3280, type: !160, isLocal: true, isDefinition: true)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(scope: null, file: !2, line: 3077, type: !363, isLocal: true, isDefinition: true)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 200, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 25)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(scope: null, file: !2, line: 816, type: !171, isLocal: true, isDefinition: true)
!368 = !DIGlobalVariableExpression(var: !369, expr: !DIExpression())
!369 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1574, type: !300, isLocal: true, isDefinition: true)
!370 = !DIGlobalVariableExpression(var: !371, expr: !DIExpression())
!371 = distinct !DIGlobalVariable(scope: null, file: !2, line: 868, type: !130, isLocal: true, isDefinition: true)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1290, type: !374, isLocal: true, isDefinition: true)
!374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 152, elements: !375)
!375 = !{!376}
!376 = !DISubrange(count: 19)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1379, type: !363, isLocal: true, isDefinition: true)
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1383, type: !381, isLocal: true, isDefinition: true)
!381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 208, elements: !382)
!382 = !{!383}
!383 = !DISubrange(count: 26)
!384 = !DIGlobalVariableExpression(var: !385, expr: !DIExpression())
!385 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1411, type: !149, isLocal: true, isDefinition: true)
!386 = !DIGlobalVariableExpression(var: !387, expr: !DIExpression())
!387 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1314, type: !320, isLocal: true, isDefinition: true)
!388 = !DIGlobalVariableExpression(var: !389, expr: !DIExpression())
!389 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1322, type: !130, isLocal: true, isDefinition: true)
!390 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !391, retainedTypes: !1334, globals: !1512, splitDebugInlining: false, nameTableKind: None)
!391 = !{!392, !400, !405, !460, !470, !1209, !1242, !1248, !1271, !1283, !1292, !1298, !1304, !1326}
!392 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2, line: 150, baseType: !393, size: 32, elements: !394)
!393 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!394 = !{!395, !396, !397, !398, !399}
!395 = !DIEnumerator(name: "XML_REGEXP_START_STATE", value: 1)
!396 = !DIEnumerator(name: "XML_REGEXP_FINAL_STATE", value: 2)
!397 = !DIEnumerator(name: "XML_REGEXP_TRANS_STATE", value: 3)
!398 = !DIEnumerator(name: "XML_REGEXP_SINK_STATE", value: 4)
!399 = !DIEnumerator(name: "XML_REGEXP_UNREACH_STATE", value: 5)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2, line: 158, baseType: !393, size: 32, elements: !401)
!401 = !{!402, !403, !404}
!402 = !DIEnumerator(name: "XML_REGEXP_MARK_NORMAL", value: 0)
!403 = !DIEnumerator(name: "XML_REGEXP_MARK_START", value: 1)
!404 = !DIEnumerator(name: "XML_REGEXP_MARK_VISITED", value: 2)
!405 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2, line: 83, baseType: !393, size: 32, elements: !406)
!406 = !{!407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459}
!407 = !DIEnumerator(name: "XML_REGEXP_EPSILON", value: 1)
!408 = !DIEnumerator(name: "XML_REGEXP_CHARVAL", value: 2)
!409 = !DIEnumerator(name: "XML_REGEXP_RANGES", value: 3)
!410 = !DIEnumerator(name: "XML_REGEXP_SUBREG", value: 4)
!411 = !DIEnumerator(name: "XML_REGEXP_STRING", value: 5)
!412 = !DIEnumerator(name: "XML_REGEXP_ANYCHAR", value: 6)
!413 = !DIEnumerator(name: "XML_REGEXP_ANYSPACE", value: 7)
!414 = !DIEnumerator(name: "XML_REGEXP_NOTSPACE", value: 8)
!415 = !DIEnumerator(name: "XML_REGEXP_INITNAME", value: 9)
!416 = !DIEnumerator(name: "XML_REGEXP_NOTINITNAME", value: 10)
!417 = !DIEnumerator(name: "XML_REGEXP_NAMECHAR", value: 11)
!418 = !DIEnumerator(name: "XML_REGEXP_NOTNAMECHAR", value: 12)
!419 = !DIEnumerator(name: "XML_REGEXP_DECIMAL", value: 13)
!420 = !DIEnumerator(name: "XML_REGEXP_NOTDECIMAL", value: 14)
!421 = !DIEnumerator(name: "XML_REGEXP_REALCHAR", value: 15)
!422 = !DIEnumerator(name: "XML_REGEXP_NOTREALCHAR", value: 16)
!423 = !DIEnumerator(name: "XML_REGEXP_LETTER", value: 100)
!424 = !DIEnumerator(name: "XML_REGEXP_LETTER_UPPERCASE", value: 101)
!425 = !DIEnumerator(name: "XML_REGEXP_LETTER_LOWERCASE", value: 102)
!426 = !DIEnumerator(name: "XML_REGEXP_LETTER_TITLECASE", value: 103)
!427 = !DIEnumerator(name: "XML_REGEXP_LETTER_MODIFIER", value: 104)
!428 = !DIEnumerator(name: "XML_REGEXP_LETTER_OTHERS", value: 105)
!429 = !DIEnumerator(name: "XML_REGEXP_MARK", value: 106)
!430 = !DIEnumerator(name: "XML_REGEXP_MARK_NONSPACING", value: 107)
!431 = !DIEnumerator(name: "XML_REGEXP_MARK_SPACECOMBINING", value: 108)
!432 = !DIEnumerator(name: "XML_REGEXP_MARK_ENCLOSING", value: 109)
!433 = !DIEnumerator(name: "XML_REGEXP_NUMBER", value: 110)
!434 = !DIEnumerator(name: "XML_REGEXP_NUMBER_DECIMAL", value: 111)
!435 = !DIEnumerator(name: "XML_REGEXP_NUMBER_LETTER", value: 112)
!436 = !DIEnumerator(name: "XML_REGEXP_NUMBER_OTHERS", value: 113)
!437 = !DIEnumerator(name: "XML_REGEXP_PUNCT", value: 114)
!438 = !DIEnumerator(name: "XML_REGEXP_PUNCT_CONNECTOR", value: 115)
!439 = !DIEnumerator(name: "XML_REGEXP_PUNCT_DASH", value: 116)
!440 = !DIEnumerator(name: "XML_REGEXP_PUNCT_OPEN", value: 117)
!441 = !DIEnumerator(name: "XML_REGEXP_PUNCT_CLOSE", value: 118)
!442 = !DIEnumerator(name: "XML_REGEXP_PUNCT_INITQUOTE", value: 119)
!443 = !DIEnumerator(name: "XML_REGEXP_PUNCT_FINQUOTE", value: 120)
!444 = !DIEnumerator(name: "XML_REGEXP_PUNCT_OTHERS", value: 121)
!445 = !DIEnumerator(name: "XML_REGEXP_SEPAR", value: 122)
!446 = !DIEnumerator(name: "XML_REGEXP_SEPAR_SPACE", value: 123)
!447 = !DIEnumerator(name: "XML_REGEXP_SEPAR_LINE", value: 124)
!448 = !DIEnumerator(name: "XML_REGEXP_SEPAR_PARA", value: 125)
!449 = !DIEnumerator(name: "XML_REGEXP_SYMBOL", value: 126)
!450 = !DIEnumerator(name: "XML_REGEXP_SYMBOL_MATH", value: 127)
!451 = !DIEnumerator(name: "XML_REGEXP_SYMBOL_CURRENCY", value: 128)
!452 = !DIEnumerator(name: "XML_REGEXP_SYMBOL_MODIFIER", value: 129)
!453 = !DIEnumerator(name: "XML_REGEXP_SYMBOL_OTHERS", value: 130)
!454 = !DIEnumerator(name: "XML_REGEXP_OTHER", value: 131)
!455 = !DIEnumerator(name: "XML_REGEXP_OTHER_CONTROL", value: 132)
!456 = !DIEnumerator(name: "XML_REGEXP_OTHER_FORMAT", value: 133)
!457 = !DIEnumerator(name: "XML_REGEXP_OTHER_PRIVATE", value: 134)
!458 = !DIEnumerator(name: "XML_REGEXP_OTHER_NA", value: 135)
!459 = !DIEnumerator(name: "XML_REGEXP_BLOCK_NAME", value: 136)
!460 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2, line: 139, baseType: !393, size: 32, elements: !461)
!461 = !{!462, !463, !464, !465, !466, !467, !468, !469}
!462 = !DIEnumerator(name: "XML_REGEXP_QUANT_EPSILON", value: 1)
!463 = !DIEnumerator(name: "XML_REGEXP_QUANT_ONCE", value: 2)
!464 = !DIEnumerator(name: "XML_REGEXP_QUANT_OPT", value: 3)
!465 = !DIEnumerator(name: "XML_REGEXP_QUANT_MULT", value: 4)
!466 = !DIEnumerator(name: "XML_REGEXP_QUANT_PLUS", value: 5)
!467 = !DIEnumerator(name: "XML_REGEXP_QUANT_ONCEONLY", value: 6)
!468 = !DIEnumerator(name: "XML_REGEXP_QUANT_ALL", value: 7)
!469 = !DIEnumerator(name: "XML_REGEXP_QUANT_RANGE", value: 8)
!470 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !471, line: 99, baseType: !393, size: 32, elements: !472)
!471 = !DIFile(filename: "./include/libxml/xmlerror.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "7e825cd47252b863bbbd4d8d4449cf69")
!472 = !{!473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208}
!473 = !DIEnumerator(name: "XML_ERR_OK", value: 0)
!474 = !DIEnumerator(name: "XML_ERR_INTERNAL_ERROR", value: 1)
!475 = !DIEnumerator(name: "XML_ERR_NO_MEMORY", value: 2)
!476 = !DIEnumerator(name: "XML_ERR_DOCUMENT_START", value: 3)
!477 = !DIEnumerator(name: "XML_ERR_DOCUMENT_EMPTY", value: 4)
!478 = !DIEnumerator(name: "XML_ERR_DOCUMENT_END", value: 5)
!479 = !DIEnumerator(name: "XML_ERR_INVALID_HEX_CHARREF", value: 6)
!480 = !DIEnumerator(name: "XML_ERR_INVALID_DEC_CHARREF", value: 7)
!481 = !DIEnumerator(name: "XML_ERR_INVALID_CHARREF", value: 8)
!482 = !DIEnumerator(name: "XML_ERR_INVALID_CHAR", value: 9)
!483 = !DIEnumerator(name: "XML_ERR_CHARREF_AT_EOF", value: 10)
!484 = !DIEnumerator(name: "XML_ERR_CHARREF_IN_PROLOG", value: 11)
!485 = !DIEnumerator(name: "XML_ERR_CHARREF_IN_EPILOG", value: 12)
!486 = !DIEnumerator(name: "XML_ERR_CHARREF_IN_DTD", value: 13)
!487 = !DIEnumerator(name: "XML_ERR_ENTITYREF_AT_EOF", value: 14)
!488 = !DIEnumerator(name: "XML_ERR_ENTITYREF_IN_PROLOG", value: 15)
!489 = !DIEnumerator(name: "XML_ERR_ENTITYREF_IN_EPILOG", value: 16)
!490 = !DIEnumerator(name: "XML_ERR_ENTITYREF_IN_DTD", value: 17)
!491 = !DIEnumerator(name: "XML_ERR_PEREF_AT_EOF", value: 18)
!492 = !DIEnumerator(name: "XML_ERR_PEREF_IN_PROLOG", value: 19)
!493 = !DIEnumerator(name: "XML_ERR_PEREF_IN_EPILOG", value: 20)
!494 = !DIEnumerator(name: "XML_ERR_PEREF_IN_INT_SUBSET", value: 21)
!495 = !DIEnumerator(name: "XML_ERR_ENTITYREF_NO_NAME", value: 22)
!496 = !DIEnumerator(name: "XML_ERR_ENTITYREF_SEMICOL_MISSING", value: 23)
!497 = !DIEnumerator(name: "XML_ERR_PEREF_NO_NAME", value: 24)
!498 = !DIEnumerator(name: "XML_ERR_PEREF_SEMICOL_MISSING", value: 25)
!499 = !DIEnumerator(name: "XML_ERR_UNDECLARED_ENTITY", value: 26)
!500 = !DIEnumerator(name: "XML_WAR_UNDECLARED_ENTITY", value: 27)
!501 = !DIEnumerator(name: "XML_ERR_UNPARSED_ENTITY", value: 28)
!502 = !DIEnumerator(name: "XML_ERR_ENTITY_IS_EXTERNAL", value: 29)
!503 = !DIEnumerator(name: "XML_ERR_ENTITY_IS_PARAMETER", value: 30)
!504 = !DIEnumerator(name: "XML_ERR_UNKNOWN_ENCODING", value: 31)
!505 = !DIEnumerator(name: "XML_ERR_UNSUPPORTED_ENCODING", value: 32)
!506 = !DIEnumerator(name: "XML_ERR_STRING_NOT_STARTED", value: 33)
!507 = !DIEnumerator(name: "XML_ERR_STRING_NOT_CLOSED", value: 34)
!508 = !DIEnumerator(name: "XML_ERR_NS_DECL_ERROR", value: 35)
!509 = !DIEnumerator(name: "XML_ERR_ENTITY_NOT_STARTED", value: 36)
!510 = !DIEnumerator(name: "XML_ERR_ENTITY_NOT_FINISHED", value: 37)
!511 = !DIEnumerator(name: "XML_ERR_LT_IN_ATTRIBUTE", value: 38)
!512 = !DIEnumerator(name: "XML_ERR_ATTRIBUTE_NOT_STARTED", value: 39)
!513 = !DIEnumerator(name: "XML_ERR_ATTRIBUTE_NOT_FINISHED", value: 40)
!514 = !DIEnumerator(name: "XML_ERR_ATTRIBUTE_WITHOUT_VALUE", value: 41)
!515 = !DIEnumerator(name: "XML_ERR_ATTRIBUTE_REDEFINED", value: 42)
!516 = !DIEnumerator(name: "XML_ERR_LITERAL_NOT_STARTED", value: 43)
!517 = !DIEnumerator(name: "XML_ERR_LITERAL_NOT_FINISHED", value: 44)
!518 = !DIEnumerator(name: "XML_ERR_COMMENT_NOT_FINISHED", value: 45)
!519 = !DIEnumerator(name: "XML_ERR_PI_NOT_STARTED", value: 46)
!520 = !DIEnumerator(name: "XML_ERR_PI_NOT_FINISHED", value: 47)
!521 = !DIEnumerator(name: "XML_ERR_NOTATION_NOT_STARTED", value: 48)
!522 = !DIEnumerator(name: "XML_ERR_NOTATION_NOT_FINISHED", value: 49)
!523 = !DIEnumerator(name: "XML_ERR_ATTLIST_NOT_STARTED", value: 50)
!524 = !DIEnumerator(name: "XML_ERR_ATTLIST_NOT_FINISHED", value: 51)
!525 = !DIEnumerator(name: "XML_ERR_MIXED_NOT_STARTED", value: 52)
!526 = !DIEnumerator(name: "XML_ERR_MIXED_NOT_FINISHED", value: 53)
!527 = !DIEnumerator(name: "XML_ERR_ELEMCONTENT_NOT_STARTED", value: 54)
!528 = !DIEnumerator(name: "XML_ERR_ELEMCONTENT_NOT_FINISHED", value: 55)
!529 = !DIEnumerator(name: "XML_ERR_XMLDECL_NOT_STARTED", value: 56)
!530 = !DIEnumerator(name: "XML_ERR_XMLDECL_NOT_FINISHED", value: 57)
!531 = !DIEnumerator(name: "XML_ERR_CONDSEC_NOT_STARTED", value: 58)
!532 = !DIEnumerator(name: "XML_ERR_CONDSEC_NOT_FINISHED", value: 59)
!533 = !DIEnumerator(name: "XML_ERR_EXT_SUBSET_NOT_FINISHED", value: 60)
!534 = !DIEnumerator(name: "XML_ERR_DOCTYPE_NOT_FINISHED", value: 61)
!535 = !DIEnumerator(name: "XML_ERR_MISPLACED_CDATA_END", value: 62)
!536 = !DIEnumerator(name: "XML_ERR_CDATA_NOT_FINISHED", value: 63)
!537 = !DIEnumerator(name: "XML_ERR_RESERVED_XML_NAME", value: 64)
!538 = !DIEnumerator(name: "XML_ERR_SPACE_REQUIRED", value: 65)
!539 = !DIEnumerator(name: "XML_ERR_SEPARATOR_REQUIRED", value: 66)
!540 = !DIEnumerator(name: "XML_ERR_NMTOKEN_REQUIRED", value: 67)
!541 = !DIEnumerator(name: "XML_ERR_NAME_REQUIRED", value: 68)
!542 = !DIEnumerator(name: "XML_ERR_PCDATA_REQUIRED", value: 69)
!543 = !DIEnumerator(name: "XML_ERR_URI_REQUIRED", value: 70)
!544 = !DIEnumerator(name: "XML_ERR_PUBID_REQUIRED", value: 71)
!545 = !DIEnumerator(name: "XML_ERR_LT_REQUIRED", value: 72)
!546 = !DIEnumerator(name: "XML_ERR_GT_REQUIRED", value: 73)
!547 = !DIEnumerator(name: "XML_ERR_LTSLASH_REQUIRED", value: 74)
!548 = !DIEnumerator(name: "XML_ERR_EQUAL_REQUIRED", value: 75)
!549 = !DIEnumerator(name: "XML_ERR_TAG_NAME_MISMATCH", value: 76)
!550 = !DIEnumerator(name: "XML_ERR_TAG_NOT_FINISHED", value: 77)
!551 = !DIEnumerator(name: "XML_ERR_STANDALONE_VALUE", value: 78)
!552 = !DIEnumerator(name: "XML_ERR_ENCODING_NAME", value: 79)
!553 = !DIEnumerator(name: "XML_ERR_HYPHEN_IN_COMMENT", value: 80)
!554 = !DIEnumerator(name: "XML_ERR_INVALID_ENCODING", value: 81)
!555 = !DIEnumerator(name: "XML_ERR_EXT_ENTITY_STANDALONE", value: 82)
!556 = !DIEnumerator(name: "XML_ERR_CONDSEC_INVALID", value: 83)
!557 = !DIEnumerator(name: "XML_ERR_VALUE_REQUIRED", value: 84)
!558 = !DIEnumerator(name: "XML_ERR_NOT_WELL_BALANCED", value: 85)
!559 = !DIEnumerator(name: "XML_ERR_EXTRA_CONTENT", value: 86)
!560 = !DIEnumerator(name: "XML_ERR_ENTITY_CHAR_ERROR", value: 87)
!561 = !DIEnumerator(name: "XML_ERR_ENTITY_PE_INTERNAL", value: 88)
!562 = !DIEnumerator(name: "XML_ERR_ENTITY_LOOP", value: 89)
!563 = !DIEnumerator(name: "XML_ERR_ENTITY_BOUNDARY", value: 90)
!564 = !DIEnumerator(name: "XML_ERR_INVALID_URI", value: 91)
!565 = !DIEnumerator(name: "XML_ERR_URI_FRAGMENT", value: 92)
!566 = !DIEnumerator(name: "XML_WAR_CATALOG_PI", value: 93)
!567 = !DIEnumerator(name: "XML_ERR_NO_DTD", value: 94)
!568 = !DIEnumerator(name: "XML_ERR_CONDSEC_INVALID_KEYWORD", value: 95)
!569 = !DIEnumerator(name: "XML_ERR_VERSION_MISSING", value: 96)
!570 = !DIEnumerator(name: "XML_WAR_UNKNOWN_VERSION", value: 97)
!571 = !DIEnumerator(name: "XML_WAR_LANG_VALUE", value: 98)
!572 = !DIEnumerator(name: "XML_WAR_NS_URI", value: 99)
!573 = !DIEnumerator(name: "XML_WAR_NS_URI_RELATIVE", value: 100)
!574 = !DIEnumerator(name: "XML_ERR_MISSING_ENCODING", value: 101)
!575 = !DIEnumerator(name: "XML_WAR_SPACE_VALUE", value: 102)
!576 = !DIEnumerator(name: "XML_ERR_NOT_STANDALONE", value: 103)
!577 = !DIEnumerator(name: "XML_ERR_ENTITY_PROCESSING", value: 104)
!578 = !DIEnumerator(name: "XML_ERR_NOTATION_PROCESSING", value: 105)
!579 = !DIEnumerator(name: "XML_WAR_NS_COLUMN", value: 106)
!580 = !DIEnumerator(name: "XML_WAR_ENTITY_REDEFINED", value: 107)
!581 = !DIEnumerator(name: "XML_ERR_UNKNOWN_VERSION", value: 108)
!582 = !DIEnumerator(name: "XML_ERR_VERSION_MISMATCH", value: 109)
!583 = !DIEnumerator(name: "XML_ERR_NAME_TOO_LONG", value: 110)
!584 = !DIEnumerator(name: "XML_ERR_USER_STOP", value: 111)
!585 = !DIEnumerator(name: "XML_ERR_COMMENT_ABRUPTLY_ENDED", value: 112)
!586 = !DIEnumerator(name: "XML_NS_ERR_XML_NAMESPACE", value: 200)
!587 = !DIEnumerator(name: "XML_NS_ERR_UNDEFINED_NAMESPACE", value: 201)
!588 = !DIEnumerator(name: "XML_NS_ERR_QNAME", value: 202)
!589 = !DIEnumerator(name: "XML_NS_ERR_ATTRIBUTE_REDEFINED", value: 203)
!590 = !DIEnumerator(name: "XML_NS_ERR_EMPTY", value: 204)
!591 = !DIEnumerator(name: "XML_NS_ERR_COLON", value: 205)
!592 = !DIEnumerator(name: "XML_DTD_ATTRIBUTE_DEFAULT", value: 500)
!593 = !DIEnumerator(name: "XML_DTD_ATTRIBUTE_REDEFINED", value: 501)
!594 = !DIEnumerator(name: "XML_DTD_ATTRIBUTE_VALUE", value: 502)
!595 = !DIEnumerator(name: "XML_DTD_CONTENT_ERROR", value: 503)
!596 = !DIEnumerator(name: "XML_DTD_CONTENT_MODEL", value: 504)
!597 = !DIEnumerator(name: "XML_DTD_CONTENT_NOT_DETERMINIST", value: 505)
!598 = !DIEnumerator(name: "XML_DTD_DIFFERENT_PREFIX", value: 506)
!599 = !DIEnumerator(name: "XML_DTD_ELEM_DEFAULT_NAMESPACE", value: 507)
!600 = !DIEnumerator(name: "XML_DTD_ELEM_NAMESPACE", value: 508)
!601 = !DIEnumerator(name: "XML_DTD_ELEM_REDEFINED", value: 509)
!602 = !DIEnumerator(name: "XML_DTD_EMPTY_NOTATION", value: 510)
!603 = !DIEnumerator(name: "XML_DTD_ENTITY_TYPE", value: 511)
!604 = !DIEnumerator(name: "XML_DTD_ID_FIXED", value: 512)
!605 = !DIEnumerator(name: "XML_DTD_ID_REDEFINED", value: 513)
!606 = !DIEnumerator(name: "XML_DTD_ID_SUBSET", value: 514)
!607 = !DIEnumerator(name: "XML_DTD_INVALID_CHILD", value: 515)
!608 = !DIEnumerator(name: "XML_DTD_INVALID_DEFAULT", value: 516)
!609 = !DIEnumerator(name: "XML_DTD_LOAD_ERROR", value: 517)
!610 = !DIEnumerator(name: "XML_DTD_MISSING_ATTRIBUTE", value: 518)
!611 = !DIEnumerator(name: "XML_DTD_MIXED_CORRUPT", value: 519)
!612 = !DIEnumerator(name: "XML_DTD_MULTIPLE_ID", value: 520)
!613 = !DIEnumerator(name: "XML_DTD_NO_DOC", value: 521)
!614 = !DIEnumerator(name: "XML_DTD_NO_DTD", value: 522)
!615 = !DIEnumerator(name: "XML_DTD_NO_ELEM_NAME", value: 523)
!616 = !DIEnumerator(name: "XML_DTD_NO_PREFIX", value: 524)
!617 = !DIEnumerator(name: "XML_DTD_NO_ROOT", value: 525)
!618 = !DIEnumerator(name: "XML_DTD_NOTATION_REDEFINED", value: 526)
!619 = !DIEnumerator(name: "XML_DTD_NOTATION_VALUE", value: 527)
!620 = !DIEnumerator(name: "XML_DTD_NOT_EMPTY", value: 528)
!621 = !DIEnumerator(name: "XML_DTD_NOT_PCDATA", value: 529)
!622 = !DIEnumerator(name: "XML_DTD_NOT_STANDALONE", value: 530)
!623 = !DIEnumerator(name: "XML_DTD_ROOT_NAME", value: 531)
!624 = !DIEnumerator(name: "XML_DTD_STANDALONE_WHITE_SPACE", value: 532)
!625 = !DIEnumerator(name: "XML_DTD_UNKNOWN_ATTRIBUTE", value: 533)
!626 = !DIEnumerator(name: "XML_DTD_UNKNOWN_ELEM", value: 534)
!627 = !DIEnumerator(name: "XML_DTD_UNKNOWN_ENTITY", value: 535)
!628 = !DIEnumerator(name: "XML_DTD_UNKNOWN_ID", value: 536)
!629 = !DIEnumerator(name: "XML_DTD_UNKNOWN_NOTATION", value: 537)
!630 = !DIEnumerator(name: "XML_DTD_STANDALONE_DEFAULTED", value: 538)
!631 = !DIEnumerator(name: "XML_DTD_XMLID_VALUE", value: 539)
!632 = !DIEnumerator(name: "XML_DTD_XMLID_TYPE", value: 540)
!633 = !DIEnumerator(name: "XML_DTD_DUP_TOKEN", value: 541)
!634 = !DIEnumerator(name: "XML_HTML_STRUCURE_ERROR", value: 800)
!635 = !DIEnumerator(name: "XML_HTML_UNKNOWN_TAG", value: 801)
!636 = !DIEnumerator(name: "XML_HTML_INCORRECTLY_OPENED_COMMENT", value: 802)
!637 = !DIEnumerator(name: "XML_RNGP_ANYNAME_ATTR_ANCESTOR", value: 1000)
!638 = !DIEnumerator(name: "XML_RNGP_ATTR_CONFLICT", value: 1001)
!639 = !DIEnumerator(name: "XML_RNGP_ATTRIBUTE_CHILDREN", value: 1002)
!640 = !DIEnumerator(name: "XML_RNGP_ATTRIBUTE_CONTENT", value: 1003)
!641 = !DIEnumerator(name: "XML_RNGP_ATTRIBUTE_EMPTY", value: 1004)
!642 = !DIEnumerator(name: "XML_RNGP_ATTRIBUTE_NOOP", value: 1005)
!643 = !DIEnumerator(name: "XML_RNGP_CHOICE_CONTENT", value: 1006)
!644 = !DIEnumerator(name: "XML_RNGP_CHOICE_EMPTY", value: 1007)
!645 = !DIEnumerator(name: "XML_RNGP_CREATE_FAILURE", value: 1008)
!646 = !DIEnumerator(name: "XML_RNGP_DATA_CONTENT", value: 1009)
!647 = !DIEnumerator(name: "XML_RNGP_DEF_CHOICE_AND_INTERLEAVE", value: 1010)
!648 = !DIEnumerator(name: "XML_RNGP_DEFINE_CREATE_FAILED", value: 1011)
!649 = !DIEnumerator(name: "XML_RNGP_DEFINE_EMPTY", value: 1012)
!650 = !DIEnumerator(name: "XML_RNGP_DEFINE_MISSING", value: 1013)
!651 = !DIEnumerator(name: "XML_RNGP_DEFINE_NAME_MISSING", value: 1014)
!652 = !DIEnumerator(name: "XML_RNGP_ELEM_CONTENT_EMPTY", value: 1015)
!653 = !DIEnumerator(name: "XML_RNGP_ELEM_CONTENT_ERROR", value: 1016)
!654 = !DIEnumerator(name: "XML_RNGP_ELEMENT_EMPTY", value: 1017)
!655 = !DIEnumerator(name: "XML_RNGP_ELEMENT_CONTENT", value: 1018)
!656 = !DIEnumerator(name: "XML_RNGP_ELEMENT_NAME", value: 1019)
!657 = !DIEnumerator(name: "XML_RNGP_ELEMENT_NO_CONTENT", value: 1020)
!658 = !DIEnumerator(name: "XML_RNGP_ELEM_TEXT_CONFLICT", value: 1021)
!659 = !DIEnumerator(name: "XML_RNGP_EMPTY", value: 1022)
!660 = !DIEnumerator(name: "XML_RNGP_EMPTY_CONSTRUCT", value: 1023)
!661 = !DIEnumerator(name: "XML_RNGP_EMPTY_CONTENT", value: 1024)
!662 = !DIEnumerator(name: "XML_RNGP_EMPTY_NOT_EMPTY", value: 1025)
!663 = !DIEnumerator(name: "XML_RNGP_ERROR_TYPE_LIB", value: 1026)
!664 = !DIEnumerator(name: "XML_RNGP_EXCEPT_EMPTY", value: 1027)
!665 = !DIEnumerator(name: "XML_RNGP_EXCEPT_MISSING", value: 1028)
!666 = !DIEnumerator(name: "XML_RNGP_EXCEPT_MULTIPLE", value: 1029)
!667 = !DIEnumerator(name: "XML_RNGP_EXCEPT_NO_CONTENT", value: 1030)
!668 = !DIEnumerator(name: "XML_RNGP_EXTERNALREF_EMTPY", value: 1031)
!669 = !DIEnumerator(name: "XML_RNGP_EXTERNAL_REF_FAILURE", value: 1032)
!670 = !DIEnumerator(name: "XML_RNGP_EXTERNALREF_RECURSE", value: 1033)
!671 = !DIEnumerator(name: "XML_RNGP_FORBIDDEN_ATTRIBUTE", value: 1034)
!672 = !DIEnumerator(name: "XML_RNGP_FOREIGN_ELEMENT", value: 1035)
!673 = !DIEnumerator(name: "XML_RNGP_GRAMMAR_CONTENT", value: 1036)
!674 = !DIEnumerator(name: "XML_RNGP_GRAMMAR_EMPTY", value: 1037)
!675 = !DIEnumerator(name: "XML_RNGP_GRAMMAR_MISSING", value: 1038)
!676 = !DIEnumerator(name: "XML_RNGP_GRAMMAR_NO_START", value: 1039)
!677 = !DIEnumerator(name: "XML_RNGP_GROUP_ATTR_CONFLICT", value: 1040)
!678 = !DIEnumerator(name: "XML_RNGP_HREF_ERROR", value: 1041)
!679 = !DIEnumerator(name: "XML_RNGP_INCLUDE_EMPTY", value: 1042)
!680 = !DIEnumerator(name: "XML_RNGP_INCLUDE_FAILURE", value: 1043)
!681 = !DIEnumerator(name: "XML_RNGP_INCLUDE_RECURSE", value: 1044)
!682 = !DIEnumerator(name: "XML_RNGP_INTERLEAVE_ADD", value: 1045)
!683 = !DIEnumerator(name: "XML_RNGP_INTERLEAVE_CREATE_FAILED", value: 1046)
!684 = !DIEnumerator(name: "XML_RNGP_INTERLEAVE_EMPTY", value: 1047)
!685 = !DIEnumerator(name: "XML_RNGP_INTERLEAVE_NO_CONTENT", value: 1048)
!686 = !DIEnumerator(name: "XML_RNGP_INVALID_DEFINE_NAME", value: 1049)
!687 = !DIEnumerator(name: "XML_RNGP_INVALID_URI", value: 1050)
!688 = !DIEnumerator(name: "XML_RNGP_INVALID_VALUE", value: 1051)
!689 = !DIEnumerator(name: "XML_RNGP_MISSING_HREF", value: 1052)
!690 = !DIEnumerator(name: "XML_RNGP_NAME_MISSING", value: 1053)
!691 = !DIEnumerator(name: "XML_RNGP_NEED_COMBINE", value: 1054)
!692 = !DIEnumerator(name: "XML_RNGP_NOTALLOWED_NOT_EMPTY", value: 1055)
!693 = !DIEnumerator(name: "XML_RNGP_NSNAME_ATTR_ANCESTOR", value: 1056)
!694 = !DIEnumerator(name: "XML_RNGP_NSNAME_NO_NS", value: 1057)
!695 = !DIEnumerator(name: "XML_RNGP_PARAM_FORBIDDEN", value: 1058)
!696 = !DIEnumerator(name: "XML_RNGP_PARAM_NAME_MISSING", value: 1059)
!697 = !DIEnumerator(name: "XML_RNGP_PARENTREF_CREATE_FAILED", value: 1060)
!698 = !DIEnumerator(name: "XML_RNGP_PARENTREF_NAME_INVALID", value: 1061)
!699 = !DIEnumerator(name: "XML_RNGP_PARENTREF_NO_NAME", value: 1062)
!700 = !DIEnumerator(name: "XML_RNGP_PARENTREF_NO_PARENT", value: 1063)
!701 = !DIEnumerator(name: "XML_RNGP_PARENTREF_NOT_EMPTY", value: 1064)
!702 = !DIEnumerator(name: "XML_RNGP_PARSE_ERROR", value: 1065)
!703 = !DIEnumerator(name: "XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME", value: 1066)
!704 = !DIEnumerator(name: "XML_RNGP_PAT_ATTR_ATTR", value: 1067)
!705 = !DIEnumerator(name: "XML_RNGP_PAT_ATTR_ELEM", value: 1068)
!706 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_ATTR", value: 1069)
!707 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_ELEM", value: 1070)
!708 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_EMPTY", value: 1071)
!709 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_GROUP", value: 1072)
!710 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE", value: 1073)
!711 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_LIST", value: 1074)
!712 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_ONEMORE", value: 1075)
!713 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_REF", value: 1076)
!714 = !DIEnumerator(name: "XML_RNGP_PAT_DATA_EXCEPT_TEXT", value: 1077)
!715 = !DIEnumerator(name: "XML_RNGP_PAT_LIST_ATTR", value: 1078)
!716 = !DIEnumerator(name: "XML_RNGP_PAT_LIST_ELEM", value: 1079)
!717 = !DIEnumerator(name: "XML_RNGP_PAT_LIST_INTERLEAVE", value: 1080)
!718 = !DIEnumerator(name: "XML_RNGP_PAT_LIST_LIST", value: 1081)
!719 = !DIEnumerator(name: "XML_RNGP_PAT_LIST_REF", value: 1082)
!720 = !DIEnumerator(name: "XML_RNGP_PAT_LIST_TEXT", value: 1083)
!721 = !DIEnumerator(name: "XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME", value: 1084)
!722 = !DIEnumerator(name: "XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME", value: 1085)
!723 = !DIEnumerator(name: "XML_RNGP_PAT_ONEMORE_GROUP_ATTR", value: 1086)
!724 = !DIEnumerator(name: "XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR", value: 1087)
!725 = !DIEnumerator(name: "XML_RNGP_PAT_START_ATTR", value: 1088)
!726 = !DIEnumerator(name: "XML_RNGP_PAT_START_DATA", value: 1089)
!727 = !DIEnumerator(name: "XML_RNGP_PAT_START_EMPTY", value: 1090)
!728 = !DIEnumerator(name: "XML_RNGP_PAT_START_GROUP", value: 1091)
!729 = !DIEnumerator(name: "XML_RNGP_PAT_START_INTERLEAVE", value: 1092)
!730 = !DIEnumerator(name: "XML_RNGP_PAT_START_LIST", value: 1093)
!731 = !DIEnumerator(name: "XML_RNGP_PAT_START_ONEMORE", value: 1094)
!732 = !DIEnumerator(name: "XML_RNGP_PAT_START_TEXT", value: 1095)
!733 = !DIEnumerator(name: "XML_RNGP_PAT_START_VALUE", value: 1096)
!734 = !DIEnumerator(name: "XML_RNGP_PREFIX_UNDEFINED", value: 1097)
!735 = !DIEnumerator(name: "XML_RNGP_REF_CREATE_FAILED", value: 1098)
!736 = !DIEnumerator(name: "XML_RNGP_REF_CYCLE", value: 1099)
!737 = !DIEnumerator(name: "XML_RNGP_REF_NAME_INVALID", value: 1100)
!738 = !DIEnumerator(name: "XML_RNGP_REF_NO_DEF", value: 1101)
!739 = !DIEnumerator(name: "XML_RNGP_REF_NO_NAME", value: 1102)
!740 = !DIEnumerator(name: "XML_RNGP_REF_NOT_EMPTY", value: 1103)
!741 = !DIEnumerator(name: "XML_RNGP_START_CHOICE_AND_INTERLEAVE", value: 1104)
!742 = !DIEnumerator(name: "XML_RNGP_START_CONTENT", value: 1105)
!743 = !DIEnumerator(name: "XML_RNGP_START_EMPTY", value: 1106)
!744 = !DIEnumerator(name: "XML_RNGP_START_MISSING", value: 1107)
!745 = !DIEnumerator(name: "XML_RNGP_TEXT_EXPECTED", value: 1108)
!746 = !DIEnumerator(name: "XML_RNGP_TEXT_HAS_CHILD", value: 1109)
!747 = !DIEnumerator(name: "XML_RNGP_TYPE_MISSING", value: 1110)
!748 = !DIEnumerator(name: "XML_RNGP_TYPE_NOT_FOUND", value: 1111)
!749 = !DIEnumerator(name: "XML_RNGP_TYPE_VALUE", value: 1112)
!750 = !DIEnumerator(name: "XML_RNGP_UNKNOWN_ATTRIBUTE", value: 1113)
!751 = !DIEnumerator(name: "XML_RNGP_UNKNOWN_COMBINE", value: 1114)
!752 = !DIEnumerator(name: "XML_RNGP_UNKNOWN_CONSTRUCT", value: 1115)
!753 = !DIEnumerator(name: "XML_RNGP_UNKNOWN_TYPE_LIB", value: 1116)
!754 = !DIEnumerator(name: "XML_RNGP_URI_FRAGMENT", value: 1117)
!755 = !DIEnumerator(name: "XML_RNGP_URI_NOT_ABSOLUTE", value: 1118)
!756 = !DIEnumerator(name: "XML_RNGP_VALUE_EMPTY", value: 1119)
!757 = !DIEnumerator(name: "XML_RNGP_VALUE_NO_CONTENT", value: 1120)
!758 = !DIEnumerator(name: "XML_RNGP_XMLNS_NAME", value: 1121)
!759 = !DIEnumerator(name: "XML_RNGP_XML_NS", value: 1122)
!760 = !DIEnumerator(name: "XML_XPATH_EXPRESSION_OK", value: 1200)
!761 = !DIEnumerator(name: "XML_XPATH_NUMBER_ERROR", value: 1201)
!762 = !DIEnumerator(name: "XML_XPATH_UNFINISHED_LITERAL_ERROR", value: 1202)
!763 = !DIEnumerator(name: "XML_XPATH_START_LITERAL_ERROR", value: 1203)
!764 = !DIEnumerator(name: "XML_XPATH_VARIABLE_REF_ERROR", value: 1204)
!765 = !DIEnumerator(name: "XML_XPATH_UNDEF_VARIABLE_ERROR", value: 1205)
!766 = !DIEnumerator(name: "XML_XPATH_INVALID_PREDICATE_ERROR", value: 1206)
!767 = !DIEnumerator(name: "XML_XPATH_EXPR_ERROR", value: 1207)
!768 = !DIEnumerator(name: "XML_XPATH_UNCLOSED_ERROR", value: 1208)
!769 = !DIEnumerator(name: "XML_XPATH_UNKNOWN_FUNC_ERROR", value: 1209)
!770 = !DIEnumerator(name: "XML_XPATH_INVALID_OPERAND", value: 1210)
!771 = !DIEnumerator(name: "XML_XPATH_INVALID_TYPE", value: 1211)
!772 = !DIEnumerator(name: "XML_XPATH_INVALID_ARITY", value: 1212)
!773 = !DIEnumerator(name: "XML_XPATH_INVALID_CTXT_SIZE", value: 1213)
!774 = !DIEnumerator(name: "XML_XPATH_INVALID_CTXT_POSITION", value: 1214)
!775 = !DIEnumerator(name: "XML_XPATH_MEMORY_ERROR", value: 1215)
!776 = !DIEnumerator(name: "XML_XPTR_SYNTAX_ERROR", value: 1216)
!777 = !DIEnumerator(name: "XML_XPTR_RESOURCE_ERROR", value: 1217)
!778 = !DIEnumerator(name: "XML_XPTR_SUB_RESOURCE_ERROR", value: 1218)
!779 = !DIEnumerator(name: "XML_XPATH_UNDEF_PREFIX_ERROR", value: 1219)
!780 = !DIEnumerator(name: "XML_XPATH_ENCODING_ERROR", value: 1220)
!781 = !DIEnumerator(name: "XML_XPATH_INVALID_CHAR_ERROR", value: 1221)
!782 = !DIEnumerator(name: "XML_TREE_INVALID_HEX", value: 1300)
!783 = !DIEnumerator(name: "XML_TREE_INVALID_DEC", value: 1301)
!784 = !DIEnumerator(name: "XML_TREE_UNTERMINATED_ENTITY", value: 1302)
!785 = !DIEnumerator(name: "XML_TREE_NOT_UTF8", value: 1303)
!786 = !DIEnumerator(name: "XML_SAVE_NOT_UTF8", value: 1400)
!787 = !DIEnumerator(name: "XML_SAVE_CHAR_INVALID", value: 1401)
!788 = !DIEnumerator(name: "XML_SAVE_NO_DOCTYPE", value: 1402)
!789 = !DIEnumerator(name: "XML_SAVE_UNKNOWN_ENCODING", value: 1403)
!790 = !DIEnumerator(name: "XML_REGEXP_COMPILE_ERROR", value: 1450)
!791 = !DIEnumerator(name: "XML_IO_UNKNOWN", value: 1500)
!792 = !DIEnumerator(name: "XML_IO_EACCES", value: 1501)
!793 = !DIEnumerator(name: "XML_IO_EAGAIN", value: 1502)
!794 = !DIEnumerator(name: "XML_IO_EBADF", value: 1503)
!795 = !DIEnumerator(name: "XML_IO_EBADMSG", value: 1504)
!796 = !DIEnumerator(name: "XML_IO_EBUSY", value: 1505)
!797 = !DIEnumerator(name: "XML_IO_ECANCELED", value: 1506)
!798 = !DIEnumerator(name: "XML_IO_ECHILD", value: 1507)
!799 = !DIEnumerator(name: "XML_IO_EDEADLK", value: 1508)
!800 = !DIEnumerator(name: "XML_IO_EDOM", value: 1509)
!801 = !DIEnumerator(name: "XML_IO_EEXIST", value: 1510)
!802 = !DIEnumerator(name: "XML_IO_EFAULT", value: 1511)
!803 = !DIEnumerator(name: "XML_IO_EFBIG", value: 1512)
!804 = !DIEnumerator(name: "XML_IO_EINPROGRESS", value: 1513)
!805 = !DIEnumerator(name: "XML_IO_EINTR", value: 1514)
!806 = !DIEnumerator(name: "XML_IO_EINVAL", value: 1515)
!807 = !DIEnumerator(name: "XML_IO_EIO", value: 1516)
!808 = !DIEnumerator(name: "XML_IO_EISDIR", value: 1517)
!809 = !DIEnumerator(name: "XML_IO_EMFILE", value: 1518)
!810 = !DIEnumerator(name: "XML_IO_EMLINK", value: 1519)
!811 = !DIEnumerator(name: "XML_IO_EMSGSIZE", value: 1520)
!812 = !DIEnumerator(name: "XML_IO_ENAMETOOLONG", value: 1521)
!813 = !DIEnumerator(name: "XML_IO_ENFILE", value: 1522)
!814 = !DIEnumerator(name: "XML_IO_ENODEV", value: 1523)
!815 = !DIEnumerator(name: "XML_IO_ENOENT", value: 1524)
!816 = !DIEnumerator(name: "XML_IO_ENOEXEC", value: 1525)
!817 = !DIEnumerator(name: "XML_IO_ENOLCK", value: 1526)
!818 = !DIEnumerator(name: "XML_IO_ENOMEM", value: 1527)
!819 = !DIEnumerator(name: "XML_IO_ENOSPC", value: 1528)
!820 = !DIEnumerator(name: "XML_IO_ENOSYS", value: 1529)
!821 = !DIEnumerator(name: "XML_IO_ENOTDIR", value: 1530)
!822 = !DIEnumerator(name: "XML_IO_ENOTEMPTY", value: 1531)
!823 = !DIEnumerator(name: "XML_IO_ENOTSUP", value: 1532)
!824 = !DIEnumerator(name: "XML_IO_ENOTTY", value: 1533)
!825 = !DIEnumerator(name: "XML_IO_ENXIO", value: 1534)
!826 = !DIEnumerator(name: "XML_IO_EPERM", value: 1535)
!827 = !DIEnumerator(name: "XML_IO_EPIPE", value: 1536)
!828 = !DIEnumerator(name: "XML_IO_ERANGE", value: 1537)
!829 = !DIEnumerator(name: "XML_IO_EROFS", value: 1538)
!830 = !DIEnumerator(name: "XML_IO_ESPIPE", value: 1539)
!831 = !DIEnumerator(name: "XML_IO_ESRCH", value: 1540)
!832 = !DIEnumerator(name: "XML_IO_ETIMEDOUT", value: 1541)
!833 = !DIEnumerator(name: "XML_IO_EXDEV", value: 1542)
!834 = !DIEnumerator(name: "XML_IO_NETWORK_ATTEMPT", value: 1543)
!835 = !DIEnumerator(name: "XML_IO_ENCODER", value: 1544)
!836 = !DIEnumerator(name: "XML_IO_FLUSH", value: 1545)
!837 = !DIEnumerator(name: "XML_IO_WRITE", value: 1546)
!838 = !DIEnumerator(name: "XML_IO_NO_INPUT", value: 1547)
!839 = !DIEnumerator(name: "XML_IO_BUFFER_FULL", value: 1548)
!840 = !DIEnumerator(name: "XML_IO_LOAD_ERROR", value: 1549)
!841 = !DIEnumerator(name: "XML_IO_ENOTSOCK", value: 1550)
!842 = !DIEnumerator(name: "XML_IO_EISCONN", value: 1551)
!843 = !DIEnumerator(name: "XML_IO_ECONNREFUSED", value: 1552)
!844 = !DIEnumerator(name: "XML_IO_ENETUNREACH", value: 1553)
!845 = !DIEnumerator(name: "XML_IO_EADDRINUSE", value: 1554)
!846 = !DIEnumerator(name: "XML_IO_EALREADY", value: 1555)
!847 = !DIEnumerator(name: "XML_IO_EAFNOSUPPORT", value: 1556)
!848 = !DIEnumerator(name: "XML_XINCLUDE_RECURSION", value: 1600)
!849 = !DIEnumerator(name: "XML_XINCLUDE_PARSE_VALUE", value: 1601)
!850 = !DIEnumerator(name: "XML_XINCLUDE_ENTITY_DEF_MISMATCH", value: 1602)
!851 = !DIEnumerator(name: "XML_XINCLUDE_NO_HREF", value: 1603)
!852 = !DIEnumerator(name: "XML_XINCLUDE_NO_FALLBACK", value: 1604)
!853 = !DIEnumerator(name: "XML_XINCLUDE_HREF_URI", value: 1605)
!854 = !DIEnumerator(name: "XML_XINCLUDE_TEXT_FRAGMENT", value: 1606)
!855 = !DIEnumerator(name: "XML_XINCLUDE_TEXT_DOCUMENT", value: 1607)
!856 = !DIEnumerator(name: "XML_XINCLUDE_INVALID_CHAR", value: 1608)
!857 = !DIEnumerator(name: "XML_XINCLUDE_BUILD_FAILED", value: 1609)
!858 = !DIEnumerator(name: "XML_XINCLUDE_UNKNOWN_ENCODING", value: 1610)
!859 = !DIEnumerator(name: "XML_XINCLUDE_MULTIPLE_ROOT", value: 1611)
!860 = !DIEnumerator(name: "XML_XINCLUDE_XPTR_FAILED", value: 1612)
!861 = !DIEnumerator(name: "XML_XINCLUDE_XPTR_RESULT", value: 1613)
!862 = !DIEnumerator(name: "XML_XINCLUDE_INCLUDE_IN_INCLUDE", value: 1614)
!863 = !DIEnumerator(name: "XML_XINCLUDE_FALLBACKS_IN_INCLUDE", value: 1615)
!864 = !DIEnumerator(name: "XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE", value: 1616)
!865 = !DIEnumerator(name: "XML_XINCLUDE_DEPRECATED_NS", value: 1617)
!866 = !DIEnumerator(name: "XML_XINCLUDE_FRAGMENT_ID", value: 1618)
!867 = !DIEnumerator(name: "XML_CATALOG_MISSING_ATTR", value: 1650)
!868 = !DIEnumerator(name: "XML_CATALOG_ENTRY_BROKEN", value: 1651)
!869 = !DIEnumerator(name: "XML_CATALOG_PREFER_VALUE", value: 1652)
!870 = !DIEnumerator(name: "XML_CATALOG_NOT_CATALOG", value: 1653)
!871 = !DIEnumerator(name: "XML_CATALOG_RECURSION", value: 1654)
!872 = !DIEnumerator(name: "XML_SCHEMAP_PREFIX_UNDEFINED", value: 1700)
!873 = !DIEnumerator(name: "XML_SCHEMAP_ATTRFORMDEFAULT_VALUE", value: 1701)
!874 = !DIEnumerator(name: "XML_SCHEMAP_ATTRGRP_NONAME_NOREF", value: 1702)
!875 = !DIEnumerator(name: "XML_SCHEMAP_ATTR_NONAME_NOREF", value: 1703)
!876 = !DIEnumerator(name: "XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF", value: 1704)
!877 = !DIEnumerator(name: "XML_SCHEMAP_ELEMFORMDEFAULT_VALUE", value: 1705)
!878 = !DIEnumerator(name: "XML_SCHEMAP_ELEM_NONAME_NOREF", value: 1706)
!879 = !DIEnumerator(name: "XML_SCHEMAP_EXTENSION_NO_BASE", value: 1707)
!880 = !DIEnumerator(name: "XML_SCHEMAP_FACET_NO_VALUE", value: 1708)
!881 = !DIEnumerator(name: "XML_SCHEMAP_FAILED_BUILD_IMPORT", value: 1709)
!882 = !DIEnumerator(name: "XML_SCHEMAP_GROUP_NONAME_NOREF", value: 1710)
!883 = !DIEnumerator(name: "XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI", value: 1711)
!884 = !DIEnumerator(name: "XML_SCHEMAP_IMPORT_REDEFINE_NSNAME", value: 1712)
!885 = !DIEnumerator(name: "XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI", value: 1713)
!886 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_BOOLEAN", value: 1714)
!887 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_ENUM", value: 1715)
!888 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_FACET", value: 1716)
!889 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_FACET_VALUE", value: 1717)
!890 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_MAXOCCURS", value: 1718)
!891 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_MINOCCURS", value: 1719)
!892 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_REF_AND_SUBTYPE", value: 1720)
!893 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_WHITE_SPACE", value: 1721)
!894 = !DIEnumerator(name: "XML_SCHEMAP_NOATTR_NOREF", value: 1722)
!895 = !DIEnumerator(name: "XML_SCHEMAP_NOTATION_NO_NAME", value: 1723)
!896 = !DIEnumerator(name: "XML_SCHEMAP_NOTYPE_NOREF", value: 1724)
!897 = !DIEnumerator(name: "XML_SCHEMAP_REF_AND_SUBTYPE", value: 1725)
!898 = !DIEnumerator(name: "XML_SCHEMAP_RESTRICTION_NONAME_NOREF", value: 1726)
!899 = !DIEnumerator(name: "XML_SCHEMAP_SIMPLETYPE_NONAME", value: 1727)
!900 = !DIEnumerator(name: "XML_SCHEMAP_TYPE_AND_SUBTYPE", value: 1728)
!901 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_ALL_CHILD", value: 1729)
!902 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD", value: 1730)
!903 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_ATTR_CHILD", value: 1731)
!904 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD", value: 1732)
!905 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP", value: 1733)
!906 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_BASE_TYPE", value: 1734)
!907 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_CHOICE_CHILD", value: 1735)
!908 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD", value: 1736)
!909 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD", value: 1737)
!910 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_ELEM_CHILD", value: 1738)
!911 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD", value: 1739)
!912 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_FACET_CHILD", value: 1740)
!913 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_FACET_TYPE", value: 1741)
!914 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_GROUP_CHILD", value: 1742)
!915 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_IMPORT_CHILD", value: 1743)
!916 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_LIST_CHILD", value: 1744)
!917 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_NOTATION_CHILD", value: 1745)
!918 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD", value: 1746)
!919 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_REF", value: 1747)
!920 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD", value: 1748)
!921 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD", value: 1749)
!922 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD", value: 1750)
!923 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD", value: 1751)
!924 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD", value: 1752)
!925 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_TYPE", value: 1753)
!926 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_UNION_CHILD", value: 1754)
!927 = !DIEnumerator(name: "XML_SCHEMAP_ELEM_DEFAULT_FIXED", value: 1755)
!928 = !DIEnumerator(name: "XML_SCHEMAP_REGEXP_INVALID", value: 1756)
!929 = !DIEnumerator(name: "XML_SCHEMAP_FAILED_LOAD", value: 1757)
!930 = !DIEnumerator(name: "XML_SCHEMAP_NOTHING_TO_PARSE", value: 1758)
!931 = !DIEnumerator(name: "XML_SCHEMAP_NOROOT", value: 1759)
!932 = !DIEnumerator(name: "XML_SCHEMAP_REDEFINED_GROUP", value: 1760)
!933 = !DIEnumerator(name: "XML_SCHEMAP_REDEFINED_TYPE", value: 1761)
!934 = !DIEnumerator(name: "XML_SCHEMAP_REDEFINED_ELEMENT", value: 1762)
!935 = !DIEnumerator(name: "XML_SCHEMAP_REDEFINED_ATTRGROUP", value: 1763)
!936 = !DIEnumerator(name: "XML_SCHEMAP_REDEFINED_ATTR", value: 1764)
!937 = !DIEnumerator(name: "XML_SCHEMAP_REDEFINED_NOTATION", value: 1765)
!938 = !DIEnumerator(name: "XML_SCHEMAP_FAILED_PARSE", value: 1766)
!939 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_PREFIX", value: 1767)
!940 = !DIEnumerator(name: "XML_SCHEMAP_DEF_AND_PREFIX", value: 1768)
!941 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD", value: 1769)
!942 = !DIEnumerator(name: "XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI", value: 1770)
!943 = !DIEnumerator(name: "XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI", value: 1771)
!944 = !DIEnumerator(name: "XML_SCHEMAP_NOT_SCHEMA", value: 1772)
!945 = !DIEnumerator(name: "XML_SCHEMAP_UNKNOWN_MEMBER_TYPE", value: 1773)
!946 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_ATTR_USE", value: 1774)
!947 = !DIEnumerator(name: "XML_SCHEMAP_RECURSIVE", value: 1775)
!948 = !DIEnumerator(name: "XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE", value: 1776)
!949 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_ATTR_COMBINATION", value: 1777)
!950 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION", value: 1778)
!951 = !DIEnumerator(name: "XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD", value: 1779)
!952 = !DIEnumerator(name: "XML_SCHEMAP_INVALID_ATTR_NAME", value: 1780)
!953 = !DIEnumerator(name: "XML_SCHEMAP_REF_AND_CONTENT", value: 1781)
!954 = !DIEnumerator(name: "XML_SCHEMAP_CT_PROPS_CORRECT_1", value: 1782)
!955 = !DIEnumerator(name: "XML_SCHEMAP_CT_PROPS_CORRECT_2", value: 1783)
!956 = !DIEnumerator(name: "XML_SCHEMAP_CT_PROPS_CORRECT_3", value: 1784)
!957 = !DIEnumerator(name: "XML_SCHEMAP_CT_PROPS_CORRECT_4", value: 1785)
!958 = !DIEnumerator(name: "XML_SCHEMAP_CT_PROPS_CORRECT_5", value: 1786)
!959 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1", value: 1787)
!960 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1", value: 1788)
!961 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2", value: 1789)
!962 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2", value: 1790)
!963 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3", value: 1791)
!964 = !DIEnumerator(name: "XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER", value: 1792)
!965 = !DIEnumerator(name: "XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE", value: 1793)
!966 = !DIEnumerator(name: "XML_SCHEMAP_UNION_NOT_EXPRESSIBLE", value: 1794)
!967 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_3_1", value: 1795)
!968 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_3_2", value: 1796)
!969 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1", value: 1797)
!970 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2", value: 1798)
!971 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3", value: 1799)
!972 = !DIEnumerator(name: "XML_SCHEMAP_COS_CT_EXTENDS_1_3", value: 1800)
!973 = !DIEnumerator(name: "XML_SCHEMAV_NOROOT", value: 1801)
!974 = !DIEnumerator(name: "XML_SCHEMAV_UNDECLAREDELEM", value: 1802)
!975 = !DIEnumerator(name: "XML_SCHEMAV_NOTTOPLEVEL", value: 1803)
!976 = !DIEnumerator(name: "XML_SCHEMAV_MISSING", value: 1804)
!977 = !DIEnumerator(name: "XML_SCHEMAV_WRONGELEM", value: 1805)
!978 = !DIEnumerator(name: "XML_SCHEMAV_NOTYPE", value: 1806)
!979 = !DIEnumerator(name: "XML_SCHEMAV_NOROLLBACK", value: 1807)
!980 = !DIEnumerator(name: "XML_SCHEMAV_ISABSTRACT", value: 1808)
!981 = !DIEnumerator(name: "XML_SCHEMAV_NOTEMPTY", value: 1809)
!982 = !DIEnumerator(name: "XML_SCHEMAV_ELEMCONT", value: 1810)
!983 = !DIEnumerator(name: "XML_SCHEMAV_HAVEDEFAULT", value: 1811)
!984 = !DIEnumerator(name: "XML_SCHEMAV_NOTNILLABLE", value: 1812)
!985 = !DIEnumerator(name: "XML_SCHEMAV_EXTRACONTENT", value: 1813)
!986 = !DIEnumerator(name: "XML_SCHEMAV_INVALIDATTR", value: 1814)
!987 = !DIEnumerator(name: "XML_SCHEMAV_INVALIDELEM", value: 1815)
!988 = !DIEnumerator(name: "XML_SCHEMAV_NOTDETERMINIST", value: 1816)
!989 = !DIEnumerator(name: "XML_SCHEMAV_CONSTRUCT", value: 1817)
!990 = !DIEnumerator(name: "XML_SCHEMAV_INTERNAL", value: 1818)
!991 = !DIEnumerator(name: "XML_SCHEMAV_NOTSIMPLE", value: 1819)
!992 = !DIEnumerator(name: "XML_SCHEMAV_ATTRUNKNOWN", value: 1820)
!993 = !DIEnumerator(name: "XML_SCHEMAV_ATTRINVALID", value: 1821)
!994 = !DIEnumerator(name: "XML_SCHEMAV_VALUE", value: 1822)
!995 = !DIEnumerator(name: "XML_SCHEMAV_FACET", value: 1823)
!996 = !DIEnumerator(name: "XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1", value: 1824)
!997 = !DIEnumerator(name: "XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2", value: 1825)
!998 = !DIEnumerator(name: "XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3", value: 1826)
!999 = !DIEnumerator(name: "XML_SCHEMAV_CVC_TYPE_3_1_1", value: 1827)
!1000 = !DIEnumerator(name: "XML_SCHEMAV_CVC_TYPE_3_1_2", value: 1828)
!1001 = !DIEnumerator(name: "XML_SCHEMAV_CVC_FACET_VALID", value: 1829)
!1002 = !DIEnumerator(name: "XML_SCHEMAV_CVC_LENGTH_VALID", value: 1830)
!1003 = !DIEnumerator(name: "XML_SCHEMAV_CVC_MINLENGTH_VALID", value: 1831)
!1004 = !DIEnumerator(name: "XML_SCHEMAV_CVC_MAXLENGTH_VALID", value: 1832)
!1005 = !DIEnumerator(name: "XML_SCHEMAV_CVC_MININCLUSIVE_VALID", value: 1833)
!1006 = !DIEnumerator(name: "XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID", value: 1834)
!1007 = !DIEnumerator(name: "XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID", value: 1835)
!1008 = !DIEnumerator(name: "XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID", value: 1836)
!1009 = !DIEnumerator(name: "XML_SCHEMAV_CVC_TOTALDIGITS_VALID", value: 1837)
!1010 = !DIEnumerator(name: "XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID", value: 1838)
!1011 = !DIEnumerator(name: "XML_SCHEMAV_CVC_PATTERN_VALID", value: 1839)
!1012 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ENUMERATION_VALID", value: 1840)
!1013 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1", value: 1841)
!1014 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2", value: 1842)
!1015 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3", value: 1843)
!1016 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4", value: 1844)
!1017 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_1", value: 1845)
!1018 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_2", value: 1846)
!1019 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_3_1", value: 1847)
!1020 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_3_2_1", value: 1848)
!1021 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_3_2_2", value: 1849)
!1022 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_4_1", value: 1850)
!1023 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_4_2", value: 1851)
!1024 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_4_3", value: 1852)
!1025 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_5_1_1", value: 1853)
!1026 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_5_1_2", value: 1854)
!1027 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_5_2_1", value: 1855)
!1028 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_5_2_2_1", value: 1856)
!1029 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_5_2_2_2_1", value: 1857)
!1030 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_5_2_2_2_2", value: 1858)
!1031 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_6", value: 1859)
!1032 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ELT_7", value: 1860)
!1033 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ATTRIBUTE_1", value: 1861)
!1034 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ATTRIBUTE_2", value: 1862)
!1035 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ATTRIBUTE_3", value: 1863)
!1036 = !DIEnumerator(name: "XML_SCHEMAV_CVC_ATTRIBUTE_4", value: 1864)
!1037 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1", value: 1865)
!1038 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1", value: 1866)
!1039 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2", value: 1867)
!1040 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_4", value: 1868)
!1041 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1", value: 1869)
!1042 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2", value: 1870)
!1043 = !DIEnumerator(name: "XML_SCHEMAV_ELEMENT_CONTENT", value: 1871)
!1044 = !DIEnumerator(name: "XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING", value: 1872)
!1045 = !DIEnumerator(name: "XML_SCHEMAV_CVC_COMPLEX_TYPE_1", value: 1873)
!1046 = !DIEnumerator(name: "XML_SCHEMAV_CVC_AU", value: 1874)
!1047 = !DIEnumerator(name: "XML_SCHEMAV_CVC_TYPE_1", value: 1875)
!1048 = !DIEnumerator(name: "XML_SCHEMAV_CVC_TYPE_2", value: 1876)
!1049 = !DIEnumerator(name: "XML_SCHEMAV_CVC_IDC", value: 1877)
!1050 = !DIEnumerator(name: "XML_SCHEMAV_CVC_WILDCARD", value: 1878)
!1051 = !DIEnumerator(name: "XML_SCHEMAV_MISC", value: 1879)
!1052 = !DIEnumerator(name: "XML_XPTR_UNKNOWN_SCHEME", value: 1900)
!1053 = !DIEnumerator(name: "XML_XPTR_CHILDSEQ_START", value: 1901)
!1054 = !DIEnumerator(name: "XML_XPTR_EVAL_FAILED", value: 1902)
!1055 = !DIEnumerator(name: "XML_XPTR_EXTRA_OBJECTS", value: 1903)
!1056 = !DIEnumerator(name: "XML_C14N_CREATE_CTXT", value: 1950)
!1057 = !DIEnumerator(name: "XML_C14N_REQUIRES_UTF8", value: 1951)
!1058 = !DIEnumerator(name: "XML_C14N_CREATE_STACK", value: 1952)
!1059 = !DIEnumerator(name: "XML_C14N_INVALID_NODE", value: 1953)
!1060 = !DIEnumerator(name: "XML_C14N_UNKNOW_NODE", value: 1954)
!1061 = !DIEnumerator(name: "XML_C14N_RELATIVE_NAMESPACE", value: 1955)
!1062 = !DIEnumerator(name: "XML_FTP_PASV_ANSWER", value: 2000)
!1063 = !DIEnumerator(name: "XML_FTP_EPSV_ANSWER", value: 2001)
!1064 = !DIEnumerator(name: "XML_FTP_ACCNT", value: 2002)
!1065 = !DIEnumerator(name: "XML_FTP_URL_SYNTAX", value: 2003)
!1066 = !DIEnumerator(name: "XML_HTTP_URL_SYNTAX", value: 2020)
!1067 = !DIEnumerator(name: "XML_HTTP_USE_IP", value: 2021)
!1068 = !DIEnumerator(name: "XML_HTTP_UNKNOWN_HOST", value: 2022)
!1069 = !DIEnumerator(name: "XML_SCHEMAP_SRC_SIMPLE_TYPE_1", value: 3000)
!1070 = !DIEnumerator(name: "XML_SCHEMAP_SRC_SIMPLE_TYPE_2", value: 3001)
!1071 = !DIEnumerator(name: "XML_SCHEMAP_SRC_SIMPLE_TYPE_3", value: 3002)
!1072 = !DIEnumerator(name: "XML_SCHEMAP_SRC_SIMPLE_TYPE_4", value: 3003)
!1073 = !DIEnumerator(name: "XML_SCHEMAP_SRC_RESOLVE", value: 3004)
!1074 = !DIEnumerator(name: "XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE", value: 3005)
!1075 = !DIEnumerator(name: "XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE", value: 3006)
!1076 = !DIEnumerator(name: "XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES", value: 3007)
!1077 = !DIEnumerator(name: "XML_SCHEMAP_ST_PROPS_CORRECT_1", value: 3008)
!1078 = !DIEnumerator(name: "XML_SCHEMAP_ST_PROPS_CORRECT_2", value: 3009)
!1079 = !DIEnumerator(name: "XML_SCHEMAP_ST_PROPS_CORRECT_3", value: 3010)
!1080 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_1_1", value: 3011)
!1081 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_1_2", value: 3012)
!1082 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1", value: 3013)
!1083 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2", value: 3014)
!1084 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_1", value: 3015)
!1085 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1", value: 3016)
!1086 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2", value: 3017)
!1087 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1", value: 3018)
!1088 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2", value: 3019)
!1089 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3", value: 3020)
!1090 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4", value: 3021)
!1091 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5", value: 3022)
!1092 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_1", value: 3023)
!1093 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1", value: 3024)
!1094 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2", value: 3025)
!1095 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2", value: 3026)
!1096 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1", value: 3027)
!1097 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3", value: 3028)
!1098 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4", value: 3029)
!1099 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5", value: 3030)
!1100 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_DERIVED_OK_2_1", value: 3031)
!1101 = !DIEnumerator(name: "XML_SCHEMAP_COS_ST_DERIVED_OK_2_2", value: 3032)
!1102 = !DIEnumerator(name: "XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED", value: 3033)
!1103 = !DIEnumerator(name: "XML_SCHEMAP_S4S_ELEM_MISSING", value: 3034)
!1104 = !DIEnumerator(name: "XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED", value: 3035)
!1105 = !DIEnumerator(name: "XML_SCHEMAP_S4S_ATTR_MISSING", value: 3036)
!1106 = !DIEnumerator(name: "XML_SCHEMAP_S4S_ATTR_INVALID_VALUE", value: 3037)
!1107 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ELEMENT_1", value: 3038)
!1108 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ELEMENT_2_1", value: 3039)
!1109 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ELEMENT_2_2", value: 3040)
!1110 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ELEMENT_3", value: 3041)
!1111 = !DIEnumerator(name: "XML_SCHEMAP_P_PROPS_CORRECT_1", value: 3042)
!1112 = !DIEnumerator(name: "XML_SCHEMAP_P_PROPS_CORRECT_2_1", value: 3043)
!1113 = !DIEnumerator(name: "XML_SCHEMAP_P_PROPS_CORRECT_2_2", value: 3044)
!1114 = !DIEnumerator(name: "XML_SCHEMAP_E_PROPS_CORRECT_2", value: 3045)
!1115 = !DIEnumerator(name: "XML_SCHEMAP_E_PROPS_CORRECT_3", value: 3046)
!1116 = !DIEnumerator(name: "XML_SCHEMAP_E_PROPS_CORRECT_4", value: 3047)
!1117 = !DIEnumerator(name: "XML_SCHEMAP_E_PROPS_CORRECT_5", value: 3048)
!1118 = !DIEnumerator(name: "XML_SCHEMAP_E_PROPS_CORRECT_6", value: 3049)
!1119 = !DIEnumerator(name: "XML_SCHEMAP_SRC_INCLUDE", value: 3050)
!1120 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_1", value: 3051)
!1121 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_2", value: 3052)
!1122 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_3_1", value: 3053)
!1123 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_3_2", value: 3054)
!1124 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_4", value: 3055)
!1125 = !DIEnumerator(name: "XML_SCHEMAP_NO_XMLNS", value: 3056)
!1126 = !DIEnumerator(name: "XML_SCHEMAP_NO_XSI", value: 3057)
!1127 = !DIEnumerator(name: "XML_SCHEMAP_COS_VALID_DEFAULT_1", value: 3058)
!1128 = !DIEnumerator(name: "XML_SCHEMAP_COS_VALID_DEFAULT_2_1", value: 3059)
!1129 = !DIEnumerator(name: "XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1", value: 3060)
!1130 = !DIEnumerator(name: "XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2", value: 3061)
!1131 = !DIEnumerator(name: "XML_SCHEMAP_CVC_SIMPLE_TYPE", value: 3062)
!1132 = !DIEnumerator(name: "XML_SCHEMAP_COS_CT_EXTENDS_1_1", value: 3063)
!1133 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_1_1", value: 3064)
!1134 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_1_2", value: 3065)
!1135 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_2", value: 3066)
!1136 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_2_1", value: 3067)
!1137 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT_2_2", value: 3068)
!1138 = !DIEnumerator(name: "XML_SCHEMAP_INTERNAL", value: 3069)
!1139 = !DIEnumerator(name: "XML_SCHEMAP_NOT_DETERMINISTIC", value: 3070)
!1140 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1", value: 3071)
!1141 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2", value: 3072)
!1142 = !DIEnumerator(name: "XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3", value: 3073)
!1143 = !DIEnumerator(name: "XML_SCHEMAP_MG_PROPS_CORRECT_1", value: 3074)
!1144 = !DIEnumerator(name: "XML_SCHEMAP_MG_PROPS_CORRECT_2", value: 3075)
!1145 = !DIEnumerator(name: "XML_SCHEMAP_SRC_CT_1", value: 3076)
!1146 = !DIEnumerator(name: "XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3", value: 3077)
!1147 = !DIEnumerator(name: "XML_SCHEMAP_AU_PROPS_CORRECT_2", value: 3078)
!1148 = !DIEnumerator(name: "XML_SCHEMAP_A_PROPS_CORRECT_2", value: 3079)
!1149 = !DIEnumerator(name: "XML_SCHEMAP_C_PROPS_CORRECT", value: 3080)
!1150 = !DIEnumerator(name: "XML_SCHEMAP_SRC_REDEFINE", value: 3081)
!1151 = !DIEnumerator(name: "XML_SCHEMAP_SRC_IMPORT", value: 3082)
!1152 = !DIEnumerator(name: "XML_SCHEMAP_WARN_SKIP_SCHEMA", value: 3083)
!1153 = !DIEnumerator(name: "XML_SCHEMAP_WARN_UNLOCATED_SCHEMA", value: 3084)
!1154 = !DIEnumerator(name: "XML_SCHEMAP_WARN_ATTR_REDECL_PROH", value: 3085)
!1155 = !DIEnumerator(name: "XML_SCHEMAP_WARN_ATTR_POINTLESS_PROH", value: 3086)
!1156 = !DIEnumerator(name: "XML_SCHEMAP_AG_PROPS_CORRECT", value: 3087)
!1157 = !DIEnumerator(name: "XML_SCHEMAP_COS_CT_EXTENDS_1_2", value: 3088)
!1158 = !DIEnumerator(name: "XML_SCHEMAP_AU_PROPS_CORRECT", value: 3089)
!1159 = !DIEnumerator(name: "XML_SCHEMAP_A_PROPS_CORRECT_3", value: 3090)
!1160 = !DIEnumerator(name: "XML_SCHEMAP_COS_ALL_LIMITED", value: 3091)
!1161 = !DIEnumerator(name: "XML_SCHEMATRONV_ASSERT", value: 4000)
!1162 = !DIEnumerator(name: "XML_SCHEMATRONV_REPORT", value: 4001)
!1163 = !DIEnumerator(name: "XML_MODULE_OPEN", value: 4900)
!1164 = !DIEnumerator(name: "XML_MODULE_CLOSE", value: 4901)
!1165 = !DIEnumerator(name: "XML_CHECK_FOUND_ELEMENT", value: 5000)
!1166 = !DIEnumerator(name: "XML_CHECK_FOUND_ATTRIBUTE", value: 5001)
!1167 = !DIEnumerator(name: "XML_CHECK_FOUND_TEXT", value: 5002)
!1168 = !DIEnumerator(name: "XML_CHECK_FOUND_CDATA", value: 5003)
!1169 = !DIEnumerator(name: "XML_CHECK_FOUND_ENTITYREF", value: 5004)
!1170 = !DIEnumerator(name: "XML_CHECK_FOUND_ENTITY", value: 5005)
!1171 = !DIEnumerator(name: "XML_CHECK_FOUND_PI", value: 5006)
!1172 = !DIEnumerator(name: "XML_CHECK_FOUND_COMMENT", value: 5007)
!1173 = !DIEnumerator(name: "XML_CHECK_FOUND_DOCTYPE", value: 5008)
!1174 = !DIEnumerator(name: "XML_CHECK_FOUND_FRAGMENT", value: 5009)
!1175 = !DIEnumerator(name: "XML_CHECK_FOUND_NOTATION", value: 5010)
!1176 = !DIEnumerator(name: "XML_CHECK_UNKNOWN_NODE", value: 5011)
!1177 = !DIEnumerator(name: "XML_CHECK_ENTITY_TYPE", value: 5012)
!1178 = !DIEnumerator(name: "XML_CHECK_NO_PARENT", value: 5013)
!1179 = !DIEnumerator(name: "XML_CHECK_NO_DOC", value: 5014)
!1180 = !DIEnumerator(name: "XML_CHECK_NO_NAME", value: 5015)
!1181 = !DIEnumerator(name: "XML_CHECK_NO_ELEM", value: 5016)
!1182 = !DIEnumerator(name: "XML_CHECK_WRONG_DOC", value: 5017)
!1183 = !DIEnumerator(name: "XML_CHECK_NO_PREV", value: 5018)
!1184 = !DIEnumerator(name: "XML_CHECK_WRONG_PREV", value: 5019)
!1185 = !DIEnumerator(name: "XML_CHECK_NO_NEXT", value: 5020)
!1186 = !DIEnumerator(name: "XML_CHECK_WRONG_NEXT", value: 5021)
!1187 = !DIEnumerator(name: "XML_CHECK_NOT_DTD", value: 5022)
!1188 = !DIEnumerator(name: "XML_CHECK_NOT_ATTR", value: 5023)
!1189 = !DIEnumerator(name: "XML_CHECK_NOT_ATTR_DECL", value: 5024)
!1190 = !DIEnumerator(name: "XML_CHECK_NOT_ELEM_DECL", value: 5025)
!1191 = !DIEnumerator(name: "XML_CHECK_NOT_ENTITY_DECL", value: 5026)
!1192 = !DIEnumerator(name: "XML_CHECK_NOT_NS_DECL", value: 5027)
!1193 = !DIEnumerator(name: "XML_CHECK_NO_HREF", value: 5028)
!1194 = !DIEnumerator(name: "XML_CHECK_WRONG_PARENT", value: 5029)
!1195 = !DIEnumerator(name: "XML_CHECK_NS_SCOPE", value: 5030)
!1196 = !DIEnumerator(name: "XML_CHECK_NS_ANCESTOR", value: 5031)
!1197 = !DIEnumerator(name: "XML_CHECK_NOT_UTF8", value: 5032)
!1198 = !DIEnumerator(name: "XML_CHECK_NO_DICT", value: 5033)
!1199 = !DIEnumerator(name: "XML_CHECK_NOT_NCNAME", value: 5034)
!1200 = !DIEnumerator(name: "XML_CHECK_OUTSIDE_DICT", value: 5035)
!1201 = !DIEnumerator(name: "XML_CHECK_WRONG_NAME", value: 5036)
!1202 = !DIEnumerator(name: "XML_CHECK_NAME_NOT_NULL", value: 5037)
!1203 = !DIEnumerator(name: "XML_I18N_NO_NAME", value: 6000)
!1204 = !DIEnumerator(name: "XML_I18N_NO_HANDLER", value: 6001)
!1205 = !DIEnumerator(name: "XML_I18N_EXCESS_HANDLER", value: 6002)
!1206 = !DIEnumerator(name: "XML_I18N_CONV_FAILED", value: 6003)
!1207 = !DIEnumerator(name: "XML_I18N_NO_OUTPUT", value: 6004)
!1208 = !DIEnumerator(name: "XML_BUF_OVERFLOW", value: 7000)
!1209 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !471, line: 36, baseType: !393, size: 32, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241}
!1211 = !DIEnumerator(name: "XML_FROM_NONE", value: 0)
!1212 = !DIEnumerator(name: "XML_FROM_PARSER", value: 1)
!1213 = !DIEnumerator(name: "XML_FROM_TREE", value: 2)
!1214 = !DIEnumerator(name: "XML_FROM_NAMESPACE", value: 3)
!1215 = !DIEnumerator(name: "XML_FROM_DTD", value: 4)
!1216 = !DIEnumerator(name: "XML_FROM_HTML", value: 5)
!1217 = !DIEnumerator(name: "XML_FROM_MEMORY", value: 6)
!1218 = !DIEnumerator(name: "XML_FROM_OUTPUT", value: 7)
!1219 = !DIEnumerator(name: "XML_FROM_IO", value: 8)
!1220 = !DIEnumerator(name: "XML_FROM_FTP", value: 9)
!1221 = !DIEnumerator(name: "XML_FROM_HTTP", value: 10)
!1222 = !DIEnumerator(name: "XML_FROM_XINCLUDE", value: 11)
!1223 = !DIEnumerator(name: "XML_FROM_XPATH", value: 12)
!1224 = !DIEnumerator(name: "XML_FROM_XPOINTER", value: 13)
!1225 = !DIEnumerator(name: "XML_FROM_REGEXP", value: 14)
!1226 = !DIEnumerator(name: "XML_FROM_DATATYPE", value: 15)
!1227 = !DIEnumerator(name: "XML_FROM_SCHEMASP", value: 16)
!1228 = !DIEnumerator(name: "XML_FROM_SCHEMASV", value: 17)
!1229 = !DIEnumerator(name: "XML_FROM_RELAXNGP", value: 18)
!1230 = !DIEnumerator(name: "XML_FROM_RELAXNGV", value: 19)
!1231 = !DIEnumerator(name: "XML_FROM_CATALOG", value: 20)
!1232 = !DIEnumerator(name: "XML_FROM_C14N", value: 21)
!1233 = !DIEnumerator(name: "XML_FROM_XSLT", value: 22)
!1234 = !DIEnumerator(name: "XML_FROM_VALID", value: 23)
!1235 = !DIEnumerator(name: "XML_FROM_CHECK", value: 24)
!1236 = !DIEnumerator(name: "XML_FROM_WRITER", value: 25)
!1237 = !DIEnumerator(name: "XML_FROM_MODULE", value: 26)
!1238 = !DIEnumerator(name: "XML_FROM_I18N", value: 27)
!1239 = !DIEnumerator(name: "XML_FROM_SCHEMATRONV", value: 28)
!1240 = !DIEnumerator(name: "XML_FROM_BUFFER", value: 29)
!1241 = !DIEnumerator(name: "XML_FROM_URI", value: 30)
!1242 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !471, line: 24, baseType: !393, size: 32, elements: !1243)
!1243 = !{!1244, !1245, !1246, !1247}
!1244 = !DIEnumerator(name: "XML_ERR_NONE", value: 0)
!1245 = !DIEnumerator(name: "XML_ERR_WARNING", value: 1)
!1246 = !DIEnumerator(name: "XML_ERR_ERROR", value: 2)
!1247 = !DIEnumerator(name: "XML_ERR_FATAL", value: 3)
!1248 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1249, line: 159, baseType: !393, size: 32, elements: !1250)
!1249 = !DIFile(filename: "./include/libxml/tree.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "779271a97c222ae4bf8e03a37eb49028")
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270}
!1251 = !DIEnumerator(name: "XML_ELEMENT_NODE", value: 1)
!1252 = !DIEnumerator(name: "XML_ATTRIBUTE_NODE", value: 2)
!1253 = !DIEnumerator(name: "XML_TEXT_NODE", value: 3)
!1254 = !DIEnumerator(name: "XML_CDATA_SECTION_NODE", value: 4)
!1255 = !DIEnumerator(name: "XML_ENTITY_REF_NODE", value: 5)
!1256 = !DIEnumerator(name: "XML_ENTITY_NODE", value: 6)
!1257 = !DIEnumerator(name: "XML_PI_NODE", value: 7)
!1258 = !DIEnumerator(name: "XML_COMMENT_NODE", value: 8)
!1259 = !DIEnumerator(name: "XML_DOCUMENT_NODE", value: 9)
!1260 = !DIEnumerator(name: "XML_DOCUMENT_TYPE_NODE", value: 10)
!1261 = !DIEnumerator(name: "XML_DOCUMENT_FRAG_NODE", value: 11)
!1262 = !DIEnumerator(name: "XML_NOTATION_NODE", value: 12)
!1263 = !DIEnumerator(name: "XML_HTML_DOCUMENT_NODE", value: 13)
!1264 = !DIEnumerator(name: "XML_DTD_NODE", value: 14)
!1265 = !DIEnumerator(name: "XML_ELEMENT_DECL", value: 15)
!1266 = !DIEnumerator(name: "XML_ATTRIBUTE_DECL", value: 16)
!1267 = !DIEnumerator(name: "XML_ENTITY_DECL", value: 17)
!1268 = !DIEnumerator(name: "XML_NAMESPACE_DECL", value: 18)
!1269 = !DIEnumerator(name: "XML_XINCLUDE_START", value: 19)
!1270 = !DIEnumerator(name: "XML_XINCLUDE_END", value: 20)
!1271 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1249, line: 206, baseType: !393, size: 32, elements: !1272)
!1272 = !{!1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282}
!1273 = !DIEnumerator(name: "XML_ATTRIBUTE_CDATA", value: 1)
!1274 = !DIEnumerator(name: "XML_ATTRIBUTE_ID", value: 2)
!1275 = !DIEnumerator(name: "XML_ATTRIBUTE_IDREF", value: 3)
!1276 = !DIEnumerator(name: "XML_ATTRIBUTE_IDREFS", value: 4)
!1277 = !DIEnumerator(name: "XML_ATTRIBUTE_ENTITY", value: 5)
!1278 = !DIEnumerator(name: "XML_ATTRIBUTE_ENTITIES", value: 6)
!1279 = !DIEnumerator(name: "XML_ATTRIBUTE_NMTOKEN", value: 7)
!1280 = !DIEnumerator(name: "XML_ATTRIBUTE_NMTOKENS", value: 8)
!1281 = !DIEnumerator(name: "XML_ATTRIBUTE_ENUMERATION", value: 9)
!1282 = !DIEnumerator(name: "XML_ATTRIBUTE_NOTATION", value: 10)
!1283 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1284, line: 24, baseType: !393, size: 32, elements: !1285)
!1284 = !DIFile(filename: "./include/libxml/entities.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "bbcf5796d61f8622702aeacafea4d993")
!1285 = !{!1286, !1287, !1288, !1289, !1290, !1291}
!1286 = !DIEnumerator(name: "XML_INTERNAL_GENERAL_ENTITY", value: 1)
!1287 = !DIEnumerator(name: "XML_EXTERNAL_GENERAL_PARSED_ENTITY", value: 2)
!1288 = !DIEnumerator(name: "XML_EXTERNAL_GENERAL_UNPARSED_ENTITY", value: 3)
!1289 = !DIEnumerator(name: "XML_INTERNAL_PARAMETER_ENTITY", value: 4)
!1290 = !DIEnumerator(name: "XML_EXTERNAL_PARAMETER_ENTITY", value: 5)
!1291 = !DIEnumerator(name: "XML_INTERNAL_PREDEFINED_ENTITY", value: 6)
!1292 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1249, line: 278, baseType: !393, size: 32, elements: !1293)
!1293 = !{!1294, !1295, !1296, !1297}
!1294 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_PCDATA", value: 1)
!1295 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_ELEMENT", value: 2)
!1296 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_SEQ", value: 3)
!1297 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_OR", value: 4)
!1298 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1249, line: 290, baseType: !393, size: 32, elements: !1299)
!1299 = !{!1300, !1301, !1302, !1303}
!1300 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_ONCE", value: 1)
!1301 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_OPT", value: 2)
!1302 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_MULT", value: 3)
!1303 = !DIEnumerator(name: "XML_ELEMENT_CONTENT_PLUS", value: 4)
!1304 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1305, line: 110, baseType: !1306, size: 32, elements: !1307)
!1305 = !DIFile(filename: "./include/libxml/parser.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "4cbcb375d54234f53f49e76e95c077ac")
!1306 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1307 = !{!1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325}
!1308 = !DIEnumerator(name: "XML_PARSER_EOF", value: -1)
!1309 = !DIEnumerator(name: "XML_PARSER_START", value: 0)
!1310 = !DIEnumerator(name: "XML_PARSER_MISC", value: 1)
!1311 = !DIEnumerator(name: "XML_PARSER_PI", value: 2)
!1312 = !DIEnumerator(name: "XML_PARSER_DTD", value: 3)
!1313 = !DIEnumerator(name: "XML_PARSER_PROLOG", value: 4)
!1314 = !DIEnumerator(name: "XML_PARSER_COMMENT", value: 5)
!1315 = !DIEnumerator(name: "XML_PARSER_START_TAG", value: 6)
!1316 = !DIEnumerator(name: "XML_PARSER_CONTENT", value: 7)
!1317 = !DIEnumerator(name: "XML_PARSER_CDATA_SECTION", value: 8)
!1318 = !DIEnumerator(name: "XML_PARSER_END_TAG", value: 9)
!1319 = !DIEnumerator(name: "XML_PARSER_ENTITY_DECL", value: 10)
!1320 = !DIEnumerator(name: "XML_PARSER_ENTITY_VALUE", value: 11)
!1321 = !DIEnumerator(name: "XML_PARSER_ATTRIBUTE_VALUE", value: 12)
!1322 = !DIEnumerator(name: "XML_PARSER_SYSTEM_LITERAL", value: 13)
!1323 = !DIEnumerator(name: "XML_PARSER_EPILOG", value: 14)
!1324 = !DIEnumerator(name: "XML_PARSER_IGNORE", value: 15)
!1325 = !DIEnumerator(name: "XML_PARSER_PUBLIC_LITERAL", value: 16)
!1326 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1305, line: 161, baseType: !393, size: 32, elements: !1327)
!1327 = !{!1328, !1329, !1330, !1331, !1332, !1333}
!1328 = !DIEnumerator(name: "XML_PARSE_UNKNOWN", value: 0)
!1329 = !DIEnumerator(name: "XML_PARSE_DOM", value: 1)
!1330 = !DIEnumerator(name: "XML_PARSE_SAX", value: 2)
!1331 = !DIEnumerator(name: "XML_PARSE_PUSH_DOM", value: 3)
!1332 = !DIEnumerator(name: "XML_PARSE_PUSH_SAX", value: 4)
!1333 = !DIEnumerator(name: "XML_PARSE_READER", value: 5)
!1334 = !{!1335, !1336, !1419, !1481, !1351, !1482, !1469, !1454, !1483, !1358, !1357, !1400, !1401, !1385, !1345, !1436, !1509, !1445, !1378, !1425, !1373, !1422}
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegExecCtxtPtr", file: !1337, line: 37, baseType: !1338)
!1337 = !DIFile(filename: "./include/libxml/xmlregexp.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "fea3110c96e8cd9013900e1c8e5b6c0b")
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegExecCtxt", file: !1337, line: 36, baseType: !1340)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlRegExecCtxt", file: !2, line: 310, size: 1216, elements: !1341)
!1341 = !{!1342, !1343, !1344, !1440, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1476, !1477, !1478, !1479, !1480}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1340, file: !2, line: 311, baseType: !1306, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "determinist", scope: !1340, file: !2, line: 312, baseType: !1306, size: 32, offset: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !1340, file: !2, line: 313, baseType: !1345, size: 64, offset: 64)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegexpPtr", file: !1337, line: 29, baseType: !1346)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegexp", file: !1337, line: 28, baseType: !1348)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlRegexp", file: !2, line: 272, size: 832, elements: !1349)
!1349 = !{!1350, !1355, !1356, !1420, !1421, !1423, !1424, !1431, !1432, !1433, !1434, !1435, !1437, !1438}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1348, file: !2, line: 273, baseType: !1351, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlChar", file: !1353, line: 28, baseType: !1354)
!1353 = !DIFile(filename: "./include/libxml/xmlstring.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "82efb8a055d5fc8eb7d815ed471eca53")
!1354 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "nbStates", scope: !1348, file: !2, line: 274, baseType: !1306, size: 32, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1348, file: !2, line: 275, baseType: !1357, size: 64, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegStatePtr", file: !2, line: 179, baseType: !1359)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegState", file: !2, line: 178, baseType: !1361)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlAutomataState", file: !2, line: 220, size: 448, elements: !1362)
!1362 = !{!1363, !1365, !1367, !1368, !1369, !1370, !1371, !1372, !1416, !1417, !1418}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1361, file: !2, line: 221, baseType: !1364, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegStateType", file: !2, line: 156, baseType: !392)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !1361, file: !2, line: 222, baseType: !1366, size: 32, offset: 32)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegMarkedType", file: !2, line: 162, baseType: !400)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "markd", scope: !1361, file: !2, line: 223, baseType: !1366, size: 32, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "reached", scope: !1361, file: !2, line: 224, baseType: !1366, size: 32, offset: 96)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1361, file: !2, line: 225, baseType: !1306, size: 32, offset: 128)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "maxTrans", scope: !1361, file: !2, line: 226, baseType: !1306, size: 32, offset: 160)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "nbTrans", scope: !1361, file: !2, line: 227, baseType: !1306, size: 32, offset: 192)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "trans", scope: !1361, file: !2, line: 228, baseType: !1373, size: 64, offset: 256)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegTrans", file: !2, line: 209, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlRegTrans", file: !2, line: 212, size: 192, elements: !1376)
!1376 = !{!1377, !1412, !1413, !1414, !1415}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "atom", scope: !1375, file: !2, line: 213, baseType: !1378, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegAtomPtr", file: !2, line: 176, baseType: !1379)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegAtom", file: !2, line: 175, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlRegAtom", file: !2, line: 181, size: 768, elements: !1382)
!1382 = !{!1383, !1384, !1386, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1411}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1381, file: !2, line: 182, baseType: !1306, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1381, file: !2, line: 183, baseType: !1385, size: 32, offset: 32)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegAtomType", file: !2, line: 137, baseType: !405)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "quant", scope: !1381, file: !2, line: 184, baseType: !1387, size: 32, offset: 64)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegQuantType", file: !2, line: 148, baseType: !460)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1381, file: !2, line: 185, baseType: !1306, size: 32, offset: 96)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1381, file: !2, line: 186, baseType: !1306, size: 32, offset: 128)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "valuep", scope: !1381, file: !2, line: 188, baseType: !1335, size: 64, offset: 192)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "valuep2", scope: !1381, file: !2, line: 189, baseType: !1335, size: 64, offset: 256)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "neg", scope: !1381, file: !2, line: 190, baseType: !1306, size: 32, offset: 320)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "codepoint", scope: !1381, file: !2, line: 191, baseType: !1306, size: 32, offset: 352)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1381, file: !2, line: 192, baseType: !1358, size: 64, offset: 384)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "start0", scope: !1381, file: !2, line: 193, baseType: !1358, size: 64, offset: 448)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1381, file: !2, line: 194, baseType: !1358, size: 64, offset: 512)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "maxRanges", scope: !1381, file: !2, line: 195, baseType: !1306, size: 32, offset: 576)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "nbRanges", scope: !1381, file: !2, line: 196, baseType: !1306, size: 32, offset: 608)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !1381, file: !2, line: 197, baseType: !1400, size: 64, offset: 640)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegRangePtr", file: !2, line: 165, baseType: !1402)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegRange", file: !2, line: 164, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlRegRange", file: !2, line: 167, size: 192, elements: !1405)
!1405 = !{!1406, !1407, !1408, !1409, !1410}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "neg", scope: !1404, file: !2, line: 168, baseType: !1306, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1404, file: !2, line: 169, baseType: !1385, size: 32, offset: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1404, file: !2, line: 170, baseType: !1306, size: 32, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1404, file: !2, line: 171, baseType: !1306, size: 32, offset: 96)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "blockName", scope: !1404, file: !2, line: 172, baseType: !1351, size: 64, offset: 128)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1381, file: !2, line: 198, baseType: !1335, size: 64, offset: 704)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1375, file: !2, line: 214, baseType: !1306, size: 32, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1375, file: !2, line: 215, baseType: !1306, size: 32, offset: 96)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1375, file: !2, line: 216, baseType: !1306, size: 32, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "nd", scope: !1375, file: !2, line: 217, baseType: !1306, size: 32, offset: 160)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "maxTransTo", scope: !1361, file: !2, line: 230, baseType: !1306, size: 32, offset: 320)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "nbTransTo", scope: !1361, file: !2, line: 231, baseType: !1306, size: 32, offset: 352)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "transTo", scope: !1361, file: !2, line: 232, baseType: !1419, size: 64, offset: 384)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "nbAtoms", scope: !1348, file: !2, line: 276, baseType: !1306, size: 32, offset: 192)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "atoms", scope: !1348, file: !2, line: 277, baseType: !1422, size: 64, offset: 256)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "nbCounters", scope: !1348, file: !2, line: 278, baseType: !1306, size: 32, offset: 320)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1348, file: !2, line: 279, baseType: !1425, size: 64, offset: 384)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegCounter", file: !2, line: 201, baseType: !1427)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlRegCounter", file: !2, line: 204, size: 64, elements: !1428)
!1428 = !{!1429, !1430}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1427, file: !2, line: 205, baseType: !1306, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1427, file: !2, line: 206, baseType: !1306, size: 32, offset: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "determinist", scope: !1348, file: !2, line: 280, baseType: !1306, size: 32, offset: 448)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1348, file: !2, line: 281, baseType: !1306, size: 32, offset: 480)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "nbstates", scope: !1348, file: !2, line: 285, baseType: !1306, size: 32, offset: 512)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !1348, file: !2, line: 286, baseType: !1419, size: 64, offset: 576)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "transdata", scope: !1348, file: !2, line: 287, baseType: !1436, size: 64, offset: 640)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "nbstrings", scope: !1348, file: !2, line: 288, baseType: !1306, size: 32, offset: 704)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "stringMap", scope: !1348, file: !2, line: 289, baseType: !1439, size: 64, offset: 768)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1340, file: !2, line: 314, baseType: !1441, size: 64, offset: 128)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegExecCallbacks", file: !1337, line: 72, baseType: !1442)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{null, !1336, !1445, !1335, !1335}
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1352)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1340, file: !2, line: 315, baseType: !1335, size: 64, offset: 192)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1340, file: !2, line: 317, baseType: !1358, size: 64, offset: 256)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "transno", scope: !1340, file: !2, line: 318, baseType: !1306, size: 32, offset: 320)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "transcount", scope: !1340, file: !2, line: 319, baseType: !1306, size: 32, offset: 352)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "maxRollbacks", scope: !1340, file: !2, line: 324, baseType: !1306, size: 32, offset: 384)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "nbRollbacks", scope: !1340, file: !2, line: 325, baseType: !1306, size: 32, offset: 416)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rollbacks", scope: !1340, file: !2, line: 326, baseType: !1454, size: 64, offset: 448)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegExecRollback", file: !2, line: 292, baseType: !1456)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlRegExecRollback", file: !2, line: 295, size: 192, elements: !1457)
!1457 = !{!1458, !1459, !1460, !1461}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1456, file: !2, line: 296, baseType: !1358, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1456, file: !2, line: 297, baseType: !1306, size: 32, offset: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "nextbranch", scope: !1456, file: !2, line: 298, baseType: !1306, size: 32, offset: 96)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "counts", scope: !1456, file: !2, line: 299, baseType: !1419, size: 64, offset: 128)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "counts", scope: !1340, file: !2, line: 331, baseType: !1419, size: 64, offset: 512)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "inputStackMax", scope: !1340, file: !2, line: 336, baseType: !1306, size: 32, offset: 576)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "inputStackNr", scope: !1340, file: !2, line: 337, baseType: !1306, size: 32, offset: 608)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1340, file: !2, line: 338, baseType: !1306, size: 32, offset: 640)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "charStack", scope: !1340, file: !2, line: 339, baseType: !1419, size: 64, offset: 704)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "inputString", scope: !1340, file: !2, line: 340, baseType: !1445, size: 64, offset: 768)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "inputStack", scope: !1340, file: !2, line: 341, baseType: !1469, size: 64, offset: 832)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegInputTokenPtr", file: !2, line: 303, baseType: !1470)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegInputToken", file: !2, line: 302, baseType: !1472)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlRegInputToken", file: !2, line: 305, size: 128, elements: !1473)
!1473 = !{!1474, !1475}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1472, file: !2, line: 306, baseType: !1351, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1472, file: !2, line: 307, baseType: !1335, size: 64, offset: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "errStateNo", scope: !1340, file: !2, line: 346, baseType: !1306, size: 32, offset: 896)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "errState", scope: !1340, file: !2, line: 347, baseType: !1358, size: 64, offset: 960)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "errString", scope: !1340, file: !2, line: 348, baseType: !1351, size: 64, offset: 1024)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "errCounts", scope: !1340, file: !2, line: 349, baseType: !1419, size: 64, offset: 1088)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "nbPush", scope: !1340, file: !2, line: 350, baseType: !1306, size: 32, offset: 1152)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegParserCtxtPtr", file: !2, line: 236, baseType: !1484)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegParserCtxt", file: !2, line: 235, baseType: !1486)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlAutomata", file: !2, line: 240, size: 960, elements: !1487)
!1487 = !{!1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1486, file: !2, line: 241, baseType: !1351, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1486, file: !2, line: 242, baseType: !1351, size: 64, offset: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1486, file: !2, line: 244, baseType: !1306, size: 32, offset: 128)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "neg", scope: !1486, file: !2, line: 245, baseType: !1306, size: 32, offset: 160)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1486, file: !2, line: 247, baseType: !1358, size: 64, offset: 192)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1486, file: !2, line: 248, baseType: !1358, size: 64, offset: 256)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1486, file: !2, line: 249, baseType: !1358, size: 64, offset: 320)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "atom", scope: !1486, file: !2, line: 251, baseType: !1378, size: 64, offset: 384)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "maxAtoms", scope: !1486, file: !2, line: 253, baseType: !1306, size: 32, offset: 448)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "nbAtoms", scope: !1486, file: !2, line: 254, baseType: !1306, size: 32, offset: 480)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "atoms", scope: !1486, file: !2, line: 255, baseType: !1422, size: 64, offset: 512)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "maxStates", scope: !1486, file: !2, line: 257, baseType: !1306, size: 32, offset: 576)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nbStates", scope: !1486, file: !2, line: 258, baseType: !1306, size: 32, offset: 608)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1486, file: !2, line: 259, baseType: !1357, size: 64, offset: 640)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "maxCounters", scope: !1486, file: !2, line: 261, baseType: !1306, size: 32, offset: 704)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "nbCounters", scope: !1486, file: !2, line: 262, baseType: !1306, size: 32, offset: 736)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1486, file: !2, line: 263, baseType: !1425, size: 64, offset: 768)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "determinist", scope: !1486, file: !2, line: 265, baseType: !1306, size: 32, offset: 832)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "negs", scope: !1486, file: !2, line: 266, baseType: !1306, size: 32, offset: 864)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1486, file: !2, line: 267, baseType: !1306, size: 32, offset: 896)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1486, file: !2, line: 269, baseType: !1306, size: 32, offset: 928)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1510, line: 70, baseType: !1511)
!1510 = !DIFile(filename: "/usr/lib/clang/18/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "592de6c0120e294e25519119517dd24e")
!1511 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!1512 = !{!0, !8, !13, !18, !20, !25, !30, !35, !37, !42, !47, !52, !54, !59, !64, !69, !71, !76, !81, !86, !91, !96, !98, !103, !105, !110, !112, !114, !116, !118, !120, !122, !124, !126, !128, !133, !135, !137, !139, !141, !143, !145, !147, !152, !154, !156, !158, !163, !165, !167, !169, !174, !176, !178, !180, !182, !184, !186, !188, !190, !192, !194, !196, !198, !200, !202, !204, !206, !208, !210, !212, !214, !216, !218, !220, !222, !224, !226, !228, !230, !235, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !259, !261, !263, !268, !270, !272, !274, !276, !278, !280, !282, !284, !286, !291, !296, !298, !303, !305, !307, !309, !311, !313, !318, !323, !325, !327, !329, !331, !333, !335, !337, !339, !344, !349, !351, !353, !355, !357, !359, !361, !366, !368, !370, !372, !377, !379, !384, !386, !388}
!1513 = !{i32 7, !"Dwarf Version", i32 5}
!1514 = !{i32 2, !"Debug Info Version", i32 3}
!1515 = !{i32 1, !"wchar_size", i32 4}
!1516 = !{i32 8, !"PIC Level", i32 2}
!1517 = !{i32 7, !"uwtable", i32 2}
!1518 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!1519 = distinct !DISubprogram(name: "xmlRegNewExecCtxt", scope: !2, file: !2, line: 3576, type: !1520, scopeLine: 3576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !1522)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!1336, !1345, !1441, !1335}
!1522 = !{!1523, !1524, !1525, !1526}
!1523 = !DILocalVariable(name: "comp", arg: 1, scope: !1519, file: !2, line: 3576, type: !1345)
!1524 = !DILocalVariable(name: "callback", arg: 2, scope: !1519, file: !2, line: 3576, type: !1441)
!1525 = !DILocalVariable(name: "data", arg: 3, scope: !1519, file: !2, line: 3576, type: !1335)
!1526 = !DILocalVariable(name: "exec", scope: !1519, file: !2, line: 3577, type: !1336)
!1527 = !{!1528, !1528, i64 0}
!1528 = !{!"any pointer", !1529, i64 0}
!1529 = !{!"omnipotent char", !1530, i64 0}
!1530 = !{!"Simple C/C++ TBAA"}
!1531 = !DILocation(line: 3576, column: 32, scope: !1519)
!1532 = !DILocation(line: 3576, column: 58, scope: !1519)
!1533 = !DILocation(line: 3576, column: 74, scope: !1519)
!1534 = !DILocation(line: 3577, column: 5, scope: !1519)
!1535 = !DILocation(line: 3577, column: 23, scope: !1519)
!1536 = !DILocation(line: 3579, column: 9, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !1519, file: !2, line: 3579, column: 9)
!1538 = !DILocation(line: 3579, column: 14, scope: !1537)
!1539 = !DILocation(line: 3579, column: 9, scope: !1519)
!1540 = !DILocation(line: 3580, column: 2, scope: !1537)
!1541 = !DILocation(line: 3581, column: 10, scope: !1542)
!1542 = distinct !DILexicalBlock(scope: !1519, file: !2, line: 3581, column: 9)
!1543 = !DILocation(line: 3581, column: 16, scope: !1542)
!1544 = !{!1545, !1528, i64 72}
!1545 = !{!"_xmlRegexp", !1528, i64 0, !1546, i64 8, !1528, i64 16, !1546, i64 24, !1528, i64 32, !1546, i64 40, !1528, i64 48, !1546, i64 56, !1546, i64 60, !1546, i64 64, !1528, i64 72, !1528, i64 80, !1546, i64 88, !1528, i64 96}
!1546 = !{!"int", !1529, i64 0}
!1547 = !DILocation(line: 3581, column: 24, scope: !1542)
!1548 = !DILocation(line: 3581, column: 33, scope: !1542)
!1549 = !DILocation(line: 3581, column: 37, scope: !1542)
!1550 = !DILocation(line: 3581, column: 43, scope: !1542)
!1551 = !{!1545, !1528, i64 16}
!1552 = !DILocation(line: 3581, column: 50, scope: !1542)
!1553 = !DILocation(line: 3581, column: 9, scope: !1519)
!1554 = !DILocation(line: 3582, column: 9, scope: !1542)
!1555 = !DILocation(line: 3583, column: 32, scope: !1519)
!1556 = !DILocation(line: 3583, column: 10, scope: !1519)
!1557 = !DILocation(line: 3584, column: 9, scope: !1558)
!1558 = distinct !DILexicalBlock(scope: !1519, file: !2, line: 3584, column: 9)
!1559 = !DILocation(line: 3584, column: 14, scope: !1558)
!1560 = !DILocation(line: 3584, column: 9, scope: !1519)
!1561 = !DILocation(line: 3585, column: 2, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1558, file: !2, line: 3584, column: 23)
!1563 = !DILocation(line: 3586, column: 2, scope: !1562)
!1564 = !DILocation(line: 3588, column: 12, scope: !1519)
!1565 = !DILocation(line: 3588, column: 5, scope: !1519)
!1566 = !DILocation(line: 3589, column: 5, scope: !1519)
!1567 = !DILocation(line: 3589, column: 11, scope: !1519)
!1568 = !DILocation(line: 3589, column: 23, scope: !1519)
!1569 = !{!1570, !1528, i64 96}
!1570 = !{!"_xmlRegExecCtxt", !1546, i64 0, !1546, i64 4, !1528, i64 8, !1528, i64 16, !1528, i64 24, !1528, i64 32, !1546, i64 40, !1546, i64 44, !1546, i64 48, !1546, i64 52, !1528, i64 56, !1528, i64 64, !1546, i64 72, !1546, i64 76, !1546, i64 80, !1528, i64 88, !1528, i64 96, !1528, i64 104, !1546, i64 112, !1528, i64 120, !1528, i64 128, !1528, i64 136, !1546, i64 144}
!1571 = !DILocation(line: 3590, column: 5, scope: !1519)
!1572 = !DILocation(line: 3590, column: 11, scope: !1519)
!1573 = !DILocation(line: 3590, column: 17, scope: !1519)
!1574 = !{!1570, !1546, i64 80}
!1575 = !DILocation(line: 3591, column: 5, scope: !1519)
!1576 = !DILocation(line: 3591, column: 11, scope: !1519)
!1577 = !DILocation(line: 3591, column: 23, scope: !1519)
!1578 = !{!1570, !1546, i64 4}
!1579 = !DILocation(line: 3592, column: 5, scope: !1519)
!1580 = !DILocation(line: 3592, column: 11, scope: !1519)
!1581 = !DILocation(line: 3592, column: 24, scope: !1519)
!1582 = !{!1570, !1546, i64 48}
!1583 = !DILocation(line: 3593, column: 5, scope: !1519)
!1584 = !DILocation(line: 3593, column: 11, scope: !1519)
!1585 = !DILocation(line: 3593, column: 23, scope: !1519)
!1586 = !{!1570, !1546, i64 52}
!1587 = !DILocation(line: 3594, column: 5, scope: !1519)
!1588 = !DILocation(line: 3594, column: 11, scope: !1519)
!1589 = !DILocation(line: 3594, column: 21, scope: !1519)
!1590 = !{!1570, !1528, i64 56}
!1591 = !DILocation(line: 3595, column: 5, scope: !1519)
!1592 = !DILocation(line: 3595, column: 11, scope: !1519)
!1593 = !DILocation(line: 3595, column: 18, scope: !1519)
!1594 = !{!1570, !1546, i64 0}
!1595 = !DILocation(line: 3596, column: 18, scope: !1519)
!1596 = !DILocation(line: 3596, column: 5, scope: !1519)
!1597 = !DILocation(line: 3596, column: 11, scope: !1519)
!1598 = !DILocation(line: 3596, column: 16, scope: !1519)
!1599 = !{!1570, !1528, i64 8}
!1600 = !DILocation(line: 3597, column: 9, scope: !1601)
!1601 = distinct !DILexicalBlock(scope: !1519, file: !2, line: 3597, column: 9)
!1602 = !DILocation(line: 3597, column: 15, scope: !1601)
!1603 = !DILocation(line: 3597, column: 23, scope: !1601)
!1604 = !DILocation(line: 3597, column: 9, scope: !1519)
!1605 = !DILocation(line: 3598, column: 16, scope: !1601)
!1606 = !DILocation(line: 3598, column: 22, scope: !1601)
!1607 = !DILocation(line: 3598, column: 2, scope: !1601)
!1608 = !DILocation(line: 3598, column: 8, scope: !1601)
!1609 = !DILocation(line: 3598, column: 14, scope: !1601)
!1610 = !{!1570, !1528, i64 32}
!1611 = !DILocation(line: 3599, column: 5, scope: !1519)
!1612 = !DILocation(line: 3599, column: 11, scope: !1519)
!1613 = !DILocation(line: 3599, column: 19, scope: !1519)
!1614 = !{!1570, !1546, i64 40}
!1615 = !DILocation(line: 3600, column: 5, scope: !1519)
!1616 = !DILocation(line: 3600, column: 11, scope: !1519)
!1617 = !DILocation(line: 3600, column: 22, scope: !1519)
!1618 = !{!1570, !1546, i64 44}
!1619 = !DILocation(line: 3601, column: 22, scope: !1519)
!1620 = !DILocation(line: 3601, column: 5, scope: !1519)
!1621 = !DILocation(line: 3601, column: 11, scope: !1519)
!1622 = !DILocation(line: 3601, column: 20, scope: !1519)
!1623 = !{!1570, !1528, i64 16}
!1624 = !DILocation(line: 3602, column: 18, scope: !1519)
!1625 = !DILocation(line: 3602, column: 5, scope: !1519)
!1626 = !DILocation(line: 3602, column: 11, scope: !1519)
!1627 = !DILocation(line: 3602, column: 16, scope: !1519)
!1628 = !{!1570, !1528, i64 24}
!1629 = !DILocation(line: 3603, column: 9, scope: !1630)
!1630 = distinct !DILexicalBlock(scope: !1519, file: !2, line: 3603, column: 9)
!1631 = !DILocation(line: 3603, column: 15, scope: !1630)
!1632 = !{!1545, !1546, i64 40}
!1633 = !DILocation(line: 3603, column: 26, scope: !1630)
!1634 = !DILocation(line: 3603, column: 9, scope: !1519)
!1635 = !DILocation(line: 3608, column: 25, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !1630, file: !2, line: 3603, column: 31)
!1637 = !DILocation(line: 3608, column: 35, scope: !1636)
!1638 = !DILocation(line: 3608, column: 41, scope: !1636)
!1639 = !DILocation(line: 3608, column: 52, scope: !1636)
!1640 = !DILocation(line: 3609, column: 35, scope: !1636)
!1641 = !DILocation(line: 3608, column: 2, scope: !1636)
!1642 = !DILocation(line: 3608, column: 8, scope: !1636)
!1643 = !DILocation(line: 3608, column: 15, scope: !1636)
!1644 = !{!1570, !1528, i64 64}
!1645 = !DILocation(line: 3610, column: 6, scope: !1646)
!1646 = distinct !DILexicalBlock(scope: !1636, file: !2, line: 3610, column: 6)
!1647 = !DILocation(line: 3610, column: 12, scope: !1646)
!1648 = !DILocation(line: 3610, column: 19, scope: !1646)
!1649 = !DILocation(line: 3610, column: 6, scope: !1636)
!1650 = !DILocation(line: 3611, column: 6, scope: !1651)
!1651 = distinct !DILexicalBlock(scope: !1646, file: !2, line: 3610, column: 28)
!1652 = !DILocation(line: 3612, column: 6, scope: !1651)
!1653 = !DILocation(line: 3612, column: 14, scope: !1651)
!1654 = !DILocation(line: 3613, column: 6, scope: !1651)
!1655 = !DILocation(line: 3615, column: 16, scope: !1636)
!1656 = !DILocation(line: 3615, column: 22, scope: !1636)
!1657 = !DILocation(line: 3615, column: 33, scope: !1636)
!1658 = !DILocation(line: 3615, column: 39, scope: !1636)
!1659 = !DILocation(line: 3615, column: 50, scope: !1636)
!1660 = !DILocation(line: 3615, column: 64, scope: !1636)
!1661 = !DILocation(line: 3615, column: 9, scope: !1636)
!1662 = !DILocation(line: 3616, column: 21, scope: !1636)
!1663 = !DILocation(line: 3616, column: 27, scope: !1636)
!1664 = !DILocation(line: 3616, column: 34, scope: !1636)
!1665 = !DILocation(line: 3616, column: 40, scope: !1636)
!1666 = !DILocation(line: 3616, column: 2, scope: !1636)
!1667 = !DILocation(line: 3616, column: 8, scope: !1636)
!1668 = !DILocation(line: 3616, column: 18, scope: !1636)
!1669 = !{!1570, !1528, i64 136}
!1670 = !DILocation(line: 3617, column: 5, scope: !1636)
!1671 = !DILocation(line: 3618, column: 2, scope: !1672)
!1672 = distinct !DILexicalBlock(scope: !1630, file: !2, line: 3617, column: 12)
!1673 = !DILocation(line: 3618, column: 8, scope: !1672)
!1674 = !DILocation(line: 3618, column: 15, scope: !1672)
!1675 = !DILocation(line: 3619, column: 2, scope: !1672)
!1676 = !DILocation(line: 3619, column: 8, scope: !1672)
!1677 = !DILocation(line: 3619, column: 18, scope: !1672)
!1678 = !DILocation(line: 3621, column: 5, scope: !1519)
!1679 = !DILocation(line: 3621, column: 11, scope: !1519)
!1680 = !DILocation(line: 3621, column: 25, scope: !1519)
!1681 = !{!1570, !1546, i64 72}
!1682 = !DILocation(line: 3622, column: 5, scope: !1519)
!1683 = !DILocation(line: 3622, column: 11, scope: !1519)
!1684 = !DILocation(line: 3622, column: 24, scope: !1519)
!1685 = !{!1570, !1546, i64 76}
!1686 = !DILocation(line: 3623, column: 5, scope: !1519)
!1687 = !DILocation(line: 3623, column: 11, scope: !1519)
!1688 = !DILocation(line: 3623, column: 22, scope: !1519)
!1689 = !{!1570, !1528, i64 104}
!1690 = !DILocation(line: 3624, column: 5, scope: !1519)
!1691 = !DILocation(line: 3624, column: 11, scope: !1519)
!1692 = !DILocation(line: 3624, column: 22, scope: !1519)
!1693 = !{!1570, !1546, i64 112}
!1694 = !DILocation(line: 3625, column: 5, scope: !1519)
!1695 = !DILocation(line: 3625, column: 11, scope: !1519)
!1696 = !DILocation(line: 3625, column: 21, scope: !1519)
!1697 = !{!1570, !1528, i64 128}
!1698 = !DILocation(line: 3626, column: 5, scope: !1519)
!1699 = !DILocation(line: 3626, column: 11, scope: !1519)
!1700 = !DILocation(line: 3626, column: 18, scope: !1519)
!1701 = !{!1570, !1546, i64 144}
!1702 = !DILocation(line: 3627, column: 12, scope: !1519)
!1703 = !DILocation(line: 3627, column: 5, scope: !1519)
!1704 = !DILocation(line: 3628, column: 1, scope: !1519)
!1705 = distinct !DISubprogram(name: "xmlRegexpErrMemory", scope: !2, file: !2, line: 378, type: !1706, scopeLine: 379, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !1708)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{null, !1483, !1482}
!1708 = !{!1709, !1710, !1711}
!1709 = !DILocalVariable(name: "ctxt", arg: 1, scope: !1705, file: !2, line: 378, type: !1483)
!1710 = !DILocalVariable(name: "extra", arg: 2, scope: !1705, file: !2, line: 378, type: !1482)
!1711 = !DILocalVariable(name: "regexp", scope: !1705, file: !2, line: 380, type: !1482)
!1712 = !DILocation(line: 378, column: 40, scope: !1705)
!1713 = !DILocation(line: 378, column: 58, scope: !1705)
!1714 = !DILocation(line: 380, column: 5, scope: !1705)
!1715 = !DILocation(line: 380, column: 17, scope: !1705)
!1716 = !DILocation(line: 381, column: 9, scope: !1717)
!1717 = distinct !DILexicalBlock(scope: !1705, file: !2, line: 381, column: 9)
!1718 = !DILocation(line: 381, column: 14, scope: !1717)
!1719 = !DILocation(line: 381, column: 9, scope: !1705)
!1720 = !DILocation(line: 382, column: 33, scope: !1721)
!1721 = distinct !DILexicalBlock(scope: !1717, file: !2, line: 381, column: 23)
!1722 = !DILocation(line: 382, column: 39, scope: !1721)
!1723 = !{!1724, !1528, i64 0}
!1724 = !{!"_xmlAutomata", !1528, i64 0, !1528, i64 8, !1546, i64 16, !1546, i64 20, !1528, i64 24, !1528, i64 32, !1528, i64 40, !1528, i64 48, !1546, i64 56, !1546, i64 60, !1528, i64 64, !1546, i64 72, !1546, i64 76, !1528, i64 80, !1546, i64 88, !1546, i64 92, !1528, i64 96, !1546, i64 104, !1546, i64 108, !1546, i64 112, !1546, i64 116}
!1725 = !DILocation(line: 382, column: 16, scope: !1721)
!1726 = !DILocation(line: 383, column: 2, scope: !1721)
!1727 = !DILocation(line: 383, column: 8, scope: !1721)
!1728 = !DILocation(line: 383, column: 14, scope: !1721)
!1729 = !{!1724, !1546, i64 16}
!1730 = !DILocation(line: 384, column: 5, scope: !1721)
!1731 = !DILocation(line: 386, column: 50, scope: !1705)
!1732 = !DILocation(line: 387, column: 7, scope: !1705)
!1733 = !DILocation(line: 388, column: 42, scope: !1705)
!1734 = !DILocation(line: 385, column: 5, scope: !1705)
!1735 = !DILocation(line: 389, column: 1, scope: !1705)
!1736 = distinct !DISubprogram(name: "xmlRegFreeExecCtxt", scope: !2, file: !2, line: 3637, type: !1737, scopeLine: 3637, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !1739)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{null, !1336}
!1739 = !{!1740, !1741, !1746}
!1740 = !DILocalVariable(name: "exec", arg: 1, scope: !1736, file: !2, line: 3637, type: !1336)
!1741 = !DILocalVariable(name: "i", scope: !1742, file: !2, line: 3643, type: !1306)
!1742 = distinct !DILexicalBlock(scope: !1743, file: !2, line: 3642, column: 28)
!1743 = distinct !DILexicalBlock(scope: !1744, file: !2, line: 3642, column: 6)
!1744 = distinct !DILexicalBlock(scope: !1745, file: !2, line: 3641, column: 34)
!1745 = distinct !DILexicalBlock(scope: !1736, file: !2, line: 3641, column: 9)
!1746 = !DILocalVariable(name: "i", scope: !1747, file: !2, line: 3654, type: !1306)
!1747 = distinct !DILexicalBlock(scope: !1748, file: !2, line: 3653, column: 35)
!1748 = distinct !DILexicalBlock(scope: !1736, file: !2, line: 3653, column: 9)
!1749 = !DILocation(line: 3637, column: 38, scope: !1736)
!1750 = !DILocation(line: 3638, column: 9, scope: !1751)
!1751 = distinct !DILexicalBlock(scope: !1736, file: !2, line: 3638, column: 9)
!1752 = !DILocation(line: 3638, column: 14, scope: !1751)
!1753 = !DILocation(line: 3638, column: 9, scope: !1736)
!1754 = !DILocation(line: 3639, column: 2, scope: !1751)
!1755 = !DILocation(line: 3641, column: 9, scope: !1745)
!1756 = !DILocation(line: 3641, column: 15, scope: !1745)
!1757 = !DILocation(line: 3641, column: 25, scope: !1745)
!1758 = !DILocation(line: 3641, column: 9, scope: !1736)
!1759 = !DILocation(line: 3642, column: 6, scope: !1743)
!1760 = !DILocation(line: 3642, column: 12, scope: !1743)
!1761 = !DILocation(line: 3642, column: 19, scope: !1743)
!1762 = !DILocation(line: 3642, column: 6, scope: !1744)
!1763 = !DILocation(line: 3643, column: 6, scope: !1742)
!1764 = !DILocation(line: 3643, column: 10, scope: !1742)
!1765 = !DILocation(line: 3645, column: 13, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !1742, file: !2, line: 3645, column: 6)
!1767 = !{!1546, !1546, i64 0}
!1768 = !DILocation(line: 3645, column: 11, scope: !1766)
!1769 = !DILocation(line: 3645, column: 17, scope: !1770)
!1770 = distinct !DILexicalBlock(scope: !1766, file: !2, line: 3645, column: 6)
!1771 = !DILocation(line: 3645, column: 21, scope: !1770)
!1772 = !DILocation(line: 3645, column: 27, scope: !1770)
!1773 = !DILocation(line: 3645, column: 19, scope: !1770)
!1774 = !DILocation(line: 3645, column: 6, scope: !1766)
!1775 = !DILocation(line: 3646, column: 7, scope: !1776)
!1776 = distinct !DILexicalBlock(scope: !1770, file: !2, line: 3646, column: 7)
!1777 = !DILocation(line: 3646, column: 13, scope: !1776)
!1778 = !DILocation(line: 3646, column: 23, scope: !1776)
!1779 = !DILocation(line: 3646, column: 26, scope: !1776)
!1780 = !{!1781, !1528, i64 16}
!1781 = !{!"_xmlRegExecRollback", !1528, i64 0, !1546, i64 8, !1546, i64 12, !1528, i64 16}
!1782 = !DILocation(line: 3646, column: 33, scope: !1776)
!1783 = !DILocation(line: 3646, column: 7, scope: !1770)
!1784 = !DILocation(line: 3647, column: 7, scope: !1776)
!1785 = !DILocation(line: 3647, column: 15, scope: !1776)
!1786 = !DILocation(line: 3647, column: 21, scope: !1776)
!1787 = !DILocation(line: 3647, column: 31, scope: !1776)
!1788 = !DILocation(line: 3647, column: 34, scope: !1776)
!1789 = !DILocation(line: 3646, column: 36, scope: !1776)
!1790 = !DILocation(line: 3645, column: 41, scope: !1770)
!1791 = !DILocation(line: 3645, column: 6, scope: !1770)
!1792 = distinct !{!1792, !1774, !1793, !1794}
!1793 = !DILocation(line: 3647, column: 40, scope: !1766)
!1794 = !{!"llvm.loop.mustprogress"}
!1795 = !DILocation(line: 3648, column: 2, scope: !1743)
!1796 = !DILocation(line: 3648, column: 2, scope: !1742)
!1797 = !DILocation(line: 3649, column: 2, scope: !1744)
!1798 = !DILocation(line: 3649, column: 10, scope: !1744)
!1799 = !DILocation(line: 3649, column: 16, scope: !1744)
!1800 = !DILocation(line: 3650, column: 5, scope: !1744)
!1801 = !DILocation(line: 3651, column: 9, scope: !1802)
!1802 = distinct !DILexicalBlock(scope: !1736, file: !2, line: 3651, column: 9)
!1803 = !DILocation(line: 3651, column: 15, scope: !1802)
!1804 = !DILocation(line: 3651, column: 22, scope: !1802)
!1805 = !DILocation(line: 3651, column: 9, scope: !1736)
!1806 = !DILocation(line: 3652, column: 2, scope: !1802)
!1807 = !DILocation(line: 3652, column: 10, scope: !1802)
!1808 = !DILocation(line: 3652, column: 16, scope: !1802)
!1809 = !DILocation(line: 3653, column: 9, scope: !1748)
!1810 = !DILocation(line: 3653, column: 15, scope: !1748)
!1811 = !DILocation(line: 3653, column: 26, scope: !1748)
!1812 = !DILocation(line: 3653, column: 9, scope: !1736)
!1813 = !DILocation(line: 3654, column: 2, scope: !1747)
!1814 = !DILocation(line: 3654, column: 6, scope: !1747)
!1815 = !DILocation(line: 3656, column: 9, scope: !1816)
!1816 = distinct !DILexicalBlock(scope: !1747, file: !2, line: 3656, column: 2)
!1817 = !DILocation(line: 3656, column: 7, scope: !1816)
!1818 = !DILocation(line: 3656, column: 13, scope: !1819)
!1819 = distinct !DILexicalBlock(scope: !1816, file: !2, line: 3656, column: 2)
!1820 = !DILocation(line: 3656, column: 17, scope: !1819)
!1821 = !DILocation(line: 3656, column: 23, scope: !1819)
!1822 = !DILocation(line: 3656, column: 15, scope: !1819)
!1823 = !DILocation(line: 3656, column: 2, scope: !1816)
!1824 = !DILocation(line: 3657, column: 10, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !1826, file: !2, line: 3657, column: 10)
!1826 = distinct !DILexicalBlock(scope: !1819, file: !2, line: 3656, column: 41)
!1827 = !DILocation(line: 3657, column: 16, scope: !1825)
!1828 = !DILocation(line: 3657, column: 27, scope: !1825)
!1829 = !DILocation(line: 3657, column: 30, scope: !1825)
!1830 = !{!1831, !1528, i64 0}
!1831 = !{!"_xmlRegInputToken", !1528, i64 0, !1528, i64 8}
!1832 = !DILocation(line: 3657, column: 36, scope: !1825)
!1833 = !DILocation(line: 3657, column: 10, scope: !1826)
!1834 = !DILocation(line: 3658, column: 3, scope: !1825)
!1835 = !DILocation(line: 3658, column: 11, scope: !1825)
!1836 = !DILocation(line: 3658, column: 17, scope: !1825)
!1837 = !DILocation(line: 3658, column: 28, scope: !1825)
!1838 = !DILocation(line: 3658, column: 31, scope: !1825)
!1839 = !DILocation(line: 3659, column: 2, scope: !1826)
!1840 = !DILocation(line: 3656, column: 37, scope: !1819)
!1841 = !DILocation(line: 3656, column: 2, scope: !1819)
!1842 = distinct !{!1842, !1823, !1843, !1794}
!1843 = !DILocation(line: 3659, column: 2, scope: !1816)
!1844 = !DILocation(line: 3660, column: 2, scope: !1747)
!1845 = !DILocation(line: 3660, column: 10, scope: !1747)
!1846 = !DILocation(line: 3660, column: 16, scope: !1747)
!1847 = !DILocation(line: 3661, column: 5, scope: !1748)
!1848 = !DILocation(line: 3661, column: 5, scope: !1747)
!1849 = !DILocation(line: 3662, column: 9, scope: !1850)
!1850 = distinct !DILexicalBlock(scope: !1736, file: !2, line: 3662, column: 9)
!1851 = !DILocation(line: 3662, column: 15, scope: !1850)
!1852 = !DILocation(line: 3662, column: 25, scope: !1850)
!1853 = !DILocation(line: 3662, column: 9, scope: !1736)
!1854 = !DILocation(line: 3663, column: 9, scope: !1850)
!1855 = !DILocation(line: 3663, column: 17, scope: !1850)
!1856 = !DILocation(line: 3663, column: 23, scope: !1850)
!1857 = !DILocation(line: 3664, column: 5, scope: !1736)
!1858 = !DILocation(line: 3664, column: 13, scope: !1736)
!1859 = !DILocation(line: 3665, column: 1, scope: !1736)
!1860 = distinct !DISubprogram(name: "xmlRegExecPushString", scope: !2, file: !2, line: 4208, type: !1861, scopeLine: 4209, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !1863)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!1306, !1336, !1445, !1335}
!1863 = !{!1864, !1865, !1866}
!1864 = !DILocalVariable(name: "exec", arg: 1, scope: !1860, file: !2, line: 4208, type: !1336)
!1865 = !DILocalVariable(name: "value", arg: 2, scope: !1860, file: !2, line: 4208, type: !1445)
!1866 = !DILocalVariable(name: "data", arg: 3, scope: !1860, file: !2, line: 4209, type: !1335)
!1867 = !DILocation(line: 4208, column: 40, scope: !1860)
!1868 = !DILocation(line: 4208, column: 61, scope: !1860)
!1869 = !DILocation(line: 4209, column: 21, scope: !1860)
!1870 = !DILocation(line: 4210, column: 41, scope: !1860)
!1871 = !DILocation(line: 4210, column: 47, scope: !1860)
!1872 = !DILocation(line: 4210, column: 54, scope: !1860)
!1873 = !DILocation(line: 4210, column: 12, scope: !1860)
!1874 = !DILocation(line: 4210, column: 5, scope: !1860)
!1875 = distinct !DISubprogram(name: "xmlRegExecPushStringInternal", scope: !2, file: !2, line: 3848, type: !1876, scopeLine: 3849, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !1878)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{!1306, !1336, !1445, !1335, !1306}
!1878 = !{!1879, !1880, !1881, !1882, !1883, !1885, !1886, !1887, !1888, !1889, !1896, !1897, !1898, !1900, !1903, !1904, !1905, !1906, !1909, !1910, !1916, !1917, !1920, !1924, !1925, !1928}
!1879 = !DILocalVariable(name: "exec", arg: 1, scope: !1875, file: !2, line: 3848, type: !1336)
!1880 = !DILocalVariable(name: "value", arg: 2, scope: !1875, file: !2, line: 3848, type: !1445)
!1881 = !DILocalVariable(name: "data", arg: 3, scope: !1875, file: !2, line: 3849, type: !1335)
!1882 = !DILocalVariable(name: "compound", arg: 4, scope: !1875, file: !2, line: 3849, type: !1306)
!1883 = !DILocalVariable(name: "trans", scope: !1875, file: !2, line: 3850, type: !1884)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegTransPtr", file: !2, line: 210, baseType: !1373)
!1885 = !DILocalVariable(name: "atom", scope: !1875, file: !2, line: 3851, type: !1378)
!1886 = !DILocalVariable(name: "ret", scope: !1875, file: !2, line: 3852, type: !1306)
!1887 = !DILocalVariable(name: "final", scope: !1875, file: !2, line: 3853, type: !1306)
!1888 = !DILocalVariable(name: "progress", scope: !1875, file: !2, line: 3854, type: !1306)
!1889 = !DILocalVariable(name: "i", scope: !1890, file: !2, line: 3909, type: !1306)
!1890 = distinct !DILexicalBlock(scope: !1891, file: !2, line: 3908, column: 50)
!1891 = distinct !DILexicalBlock(scope: !1892, file: !2, line: 3908, column: 10)
!1892 = distinct !DILexicalBlock(scope: !1893, file: !2, line: 3902, column: 62)
!1893 = distinct !DILexicalBlock(scope: !1894, file: !2, line: 3902, column: 2)
!1894 = distinct !DILexicalBlock(scope: !1895, file: !2, line: 3902, column: 2)
!1895 = distinct !DILexicalBlock(scope: !1875, file: !2, line: 3891, column: 56)
!1896 = !DILocalVariable(name: "count", scope: !1890, file: !2, line: 3910, type: !1306)
!1897 = !DILocalVariable(name: "t", scope: !1890, file: !2, line: 3911, type: !1884)
!1898 = !DILocalVariable(name: "counter", scope: !1890, file: !2, line: 3912, type: !1899)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlRegCounterPtr", file: !2, line: 202, baseType: !1425)
!1900 = !DILocalVariable(name: "i", scope: !1901, file: !2, line: 3947, type: !1306)
!1901 = distinct !DILexicalBlock(scope: !1902, file: !2, line: 3946, column: 53)
!1902 = distinct !DILexicalBlock(scope: !1891, file: !2, line: 3946, column: 17)
!1903 = !DILocalVariable(name: "count", scope: !1901, file: !2, line: 3948, type: !1306)
!1904 = !DILocalVariable(name: "t", scope: !1901, file: !2, line: 3949, type: !1884)
!1905 = !DILocalVariable(name: "counter", scope: !1901, file: !2, line: 3950, type: !1899)
!1906 = !DILocalVariable(name: "count", scope: !1907, file: !2, line: 3972, type: !1306)
!1907 = distinct !DILexicalBlock(scope: !1908, file: !2, line: 3971, column: 36)
!1908 = distinct !DILexicalBlock(scope: !1902, file: !2, line: 3971, column: 17)
!1909 = !DILocalVariable(name: "counter", scope: !1907, file: !2, line: 3973, type: !1899)
!1910 = !DILocalVariable(name: "counter", scope: !1911, file: !2, line: 3998, type: !1899)
!1911 = distinct !DILexicalBlock(scope: !1912, file: !2, line: 3997, column: 44)
!1912 = distinct !DILexicalBlock(scope: !1913, file: !2, line: 3997, column: 7)
!1913 = distinct !DILexicalBlock(scope: !1914, file: !2, line: 3990, column: 32)
!1914 = distinct !DILexicalBlock(scope: !1915, file: !2, line: 3990, column: 17)
!1915 = distinct !DILexicalBlock(scope: !1908, file: !2, line: 3986, column: 17)
!1916 = !DILocalVariable(name: "count", scope: !1911, file: !2, line: 3999, type: !1306)
!1917 = !DILocalVariable(name: "to", scope: !1918, file: !2, line: 4008, type: !1358)
!1918 = distinct !DILexicalBlock(scope: !1919, file: !2, line: 4007, column: 57)
!1919 = distinct !DILexicalBlock(scope: !1913, file: !2, line: 4007, column: 7)
!1920 = !DILocalVariable(name: "transno", scope: !1921, file: !2, line: 4042, type: !1306)
!1921 = distinct !DILexicalBlock(scope: !1922, file: !2, line: 4041, column: 39)
!1922 = distinct !DILexicalBlock(scope: !1923, file: !2, line: 4041, column: 8)
!1923 = distinct !DILexicalBlock(scope: !1918, file: !2, line: 4020, column: 10)
!1924 = !DILocalVariable(name: "state", scope: !1921, file: !2, line: 4043, type: !1358)
!1925 = !DILabel(scope: !1926, name: "rollback", file: !2, line: 4150)
!1926 = distinct !DILexicalBlock(scope: !1927, file: !2, line: 4149, column: 59)
!1927 = distinct !DILexicalBlock(scope: !1895, file: !2, line: 4149, column: 6)
!1928 = !DILabel(scope: !1895, name: "progress", file: !2, line: 4181)
!1929 = !DILocation(line: 3848, column: 48, scope: !1875)
!1930 = !DILocation(line: 3848, column: 69, scope: !1875)
!1931 = !DILocation(line: 3849, column: 29, scope: !1875)
!1932 = !DILocation(line: 3849, column: 39, scope: !1875)
!1933 = !DILocation(line: 3850, column: 5, scope: !1875)
!1934 = !DILocation(line: 3850, column: 20, scope: !1875)
!1935 = !DILocation(line: 3851, column: 5, scope: !1875)
!1936 = !DILocation(line: 3851, column: 19, scope: !1875)
!1937 = !DILocation(line: 3852, column: 5, scope: !1875)
!1938 = !DILocation(line: 3852, column: 9, scope: !1875)
!1939 = !DILocation(line: 3853, column: 5, scope: !1875)
!1940 = !DILocation(line: 3853, column: 9, scope: !1875)
!1941 = !DILocation(line: 3854, column: 5, scope: !1875)
!1942 = !DILocation(line: 3854, column: 9, scope: !1875)
!1943 = !DILocation(line: 3856, column: 9, scope: !1944)
!1944 = distinct !DILexicalBlock(scope: !1875, file: !2, line: 3856, column: 9)
!1945 = !DILocation(line: 3856, column: 14, scope: !1944)
!1946 = !DILocation(line: 3856, column: 9, scope: !1875)
!1947 = !DILocation(line: 3857, column: 2, scope: !1944)
!1948 = !DILocation(line: 3858, column: 9, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !1875, file: !2, line: 3858, column: 9)
!1950 = !DILocation(line: 3858, column: 15, scope: !1949)
!1951 = !DILocation(line: 3858, column: 20, scope: !1949)
!1952 = !DILocation(line: 3858, column: 9, scope: !1875)
!1953 = !DILocation(line: 3859, column: 2, scope: !1949)
!1954 = !DILocation(line: 3860, column: 9, scope: !1955)
!1955 = distinct !DILexicalBlock(scope: !1875, file: !2, line: 3860, column: 9)
!1956 = !DILocation(line: 3860, column: 15, scope: !1955)
!1957 = !DILocation(line: 3860, column: 22, scope: !1955)
!1958 = !DILocation(line: 3860, column: 9, scope: !1875)
!1959 = !DILocation(line: 3861, column: 9, scope: !1955)
!1960 = !DILocation(line: 3861, column: 15, scope: !1955)
!1961 = !DILocation(line: 3861, column: 2, scope: !1955)
!1962 = !DILocation(line: 3863, column: 9, scope: !1963)
!1963 = distinct !DILexicalBlock(scope: !1875, file: !2, line: 3863, column: 9)
!1964 = !DILocation(line: 3863, column: 15, scope: !1963)
!1965 = !DILocation(line: 3863, column: 21, scope: !1963)
!1966 = !DILocation(line: 3863, column: 29, scope: !1963)
!1967 = !DILocation(line: 3863, column: 9, scope: !1875)
!1968 = !DILocation(line: 3864, column: 33, scope: !1963)
!1969 = !DILocation(line: 3864, column: 39, scope: !1963)
!1970 = !DILocation(line: 3864, column: 45, scope: !1963)
!1971 = !DILocation(line: 3864, column: 51, scope: !1963)
!1972 = !DILocation(line: 3864, column: 58, scope: !1963)
!1973 = !DILocation(line: 3864, column: 9, scope: !1963)
!1974 = !DILocation(line: 3864, column: 2, scope: !1963)
!1975 = !DILocation(line: 3866, column: 9, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1875, file: !2, line: 3866, column: 9)
!1977 = !DILocation(line: 3866, column: 15, scope: !1976)
!1978 = !DILocation(line: 3866, column: 9, scope: !1875)
!1979 = !DILocation(line: 3867, column: 13, scope: !1980)
!1980 = distinct !DILexicalBlock(scope: !1981, file: !2, line: 3867, column: 13)
!1981 = distinct !DILexicalBlock(scope: !1976, file: !2, line: 3866, column: 24)
!1982 = !DILocation(line: 3867, column: 19, scope: !1980)
!1983 = !DILocation(line: 3867, column: 26, scope: !1980)
!1984 = !{!1985, !1529, i64 0}
!1985 = !{!"_xmlAutomataState", !1529, i64 0, !1529, i64 4, !1529, i64 8, !1529, i64 12, !1546, i64 16, !1546, i64 20, !1546, i64 24, !1528, i64 32, !1546, i64 40, !1546, i64 44, !1528, i64 48}
!1986 = !DILocation(line: 3867, column: 31, scope: !1980)
!1987 = !DILocation(line: 3867, column: 13, scope: !1981)
!1988 = !DILocation(line: 3868, column: 6, scope: !1980)
!1989 = !DILocation(line: 3869, column: 8, scope: !1981)
!1990 = !DILocation(line: 3870, column: 5, scope: !1981)
!1991 = !DILocation(line: 3879, column: 10, scope: !1992)
!1992 = distinct !DILexicalBlock(scope: !1875, file: !2, line: 3879, column: 9)
!1993 = !DILocation(line: 3879, column: 16, scope: !1992)
!1994 = !DILocation(line: 3879, column: 25, scope: !1992)
!1995 = !DILocation(line: 3879, column: 29, scope: !1992)
!1996 = !DILocation(line: 3879, column: 35, scope: !1992)
!1997 = !DILocation(line: 3879, column: 48, scope: !1992)
!1998 = !DILocation(line: 3879, column: 9, scope: !1875)
!1999 = !DILocation(line: 3880, column: 30, scope: !2000)
!2000 = distinct !DILexicalBlock(scope: !1992, file: !2, line: 3879, column: 54)
!2001 = !DILocation(line: 3880, column: 36, scope: !2000)
!2002 = !DILocation(line: 3880, column: 43, scope: !2000)
!2003 = !DILocation(line: 3880, column: 2, scope: !2000)
!2004 = !DILocation(line: 3881, column: 10, scope: !2000)
!2005 = !DILocation(line: 3881, column: 16, scope: !2000)
!2006 = !DILocation(line: 3881, column: 27, scope: !2000)
!2007 = !DILocation(line: 3881, column: 33, scope: !2000)
!2008 = !DILocation(line: 3881, column: 40, scope: !2000)
!2009 = !DILocation(line: 3881, column: 8, scope: !2000)
!2010 = !DILocation(line: 3882, column: 9, scope: !2000)
!2011 = !DILocation(line: 3882, column: 15, scope: !2000)
!2012 = !DILocation(line: 3882, column: 26, scope: !2000)
!2013 = !DILocation(line: 3882, column: 32, scope: !2000)
!2014 = !DILocation(line: 3882, column: 39, scope: !2000)
!2015 = !{!1831, !1528, i64 8}
!2016 = !DILocation(line: 3882, column: 7, scope: !2000)
!2017 = !DILocation(line: 3886, column: 5, scope: !2000)
!2018 = !DILocation(line: 3888, column: 5, scope: !1875)
!2019 = !DILocation(line: 3888, column: 13, scope: !1875)
!2020 = !DILocation(line: 3888, column: 19, scope: !1875)
!2021 = !DILocation(line: 3888, column: 26, scope: !1875)
!2022 = !DILocation(line: 3888, column: 32, scope: !1875)
!2023 = !DILocation(line: 3889, column: 7, scope: !1875)
!2024 = !DILocation(line: 3889, column: 13, scope: !1875)
!2025 = !DILocation(line: 3889, column: 22, scope: !1875)
!2026 = !DILocation(line: 3890, column: 8, scope: !1875)
!2027 = !DILocation(line: 3890, column: 14, scope: !1875)
!2028 = !DILocation(line: 3890, column: 20, scope: !1875)
!2029 = !DILocation(line: 3891, column: 8, scope: !1875)
!2030 = !DILocation(line: 3891, column: 14, scope: !1875)
!2031 = !DILocation(line: 3891, column: 21, scope: !1875)
!2032 = !DILocation(line: 3891, column: 26, scope: !1875)
!2033 = !DILocation(line: 0, scope: !1875)
!2034 = !DILocation(line: 3898, column: 7, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !1895, file: !2, line: 3898, column: 6)
!2036 = !DILocation(line: 3898, column: 13, scope: !2035)
!2037 = !DILocation(line: 3898, column: 22, scope: !2035)
!2038 = !DILocation(line: 3898, column: 26, scope: !2035)
!2039 = !DILocation(line: 3898, column: 32, scope: !2035)
!2040 = !DILocation(line: 3898, column: 39, scope: !2035)
!2041 = !DILocation(line: 3898, column: 6, scope: !1895)
!2042 = !DILocation(line: 3899, column: 6, scope: !2035)
!2043 = !DILocation(line: 3901, column: 2, scope: !1895)
!2044 = !DILocation(line: 3901, column: 8, scope: !1895)
!2045 = !DILocation(line: 3901, column: 19, scope: !1895)
!2046 = !DILocation(line: 3902, column: 2, scope: !1895)
!2047 = !DILocation(line: 3902, column: 8, scope: !1893)
!2048 = !DILocation(line: 3902, column: 14, scope: !1893)
!2049 = !DILocation(line: 3902, column: 24, scope: !1893)
!2050 = !DILocation(line: 3902, column: 30, scope: !1893)
!2051 = !DILocation(line: 3902, column: 37, scope: !1893)
!2052 = !{!1985, !1546, i64 24}
!2053 = !DILocation(line: 3902, column: 22, scope: !1893)
!2054 = !DILocation(line: 3902, column: 2, scope: !1894)
!2055 = !DILocation(line: 3903, column: 15, scope: !1892)
!2056 = !DILocation(line: 3903, column: 21, scope: !1892)
!2057 = !DILocation(line: 3903, column: 28, scope: !1892)
!2058 = !{!1985, !1528, i64 32}
!2059 = !DILocation(line: 3903, column: 34, scope: !1892)
!2060 = !DILocation(line: 3903, column: 40, scope: !1892)
!2061 = !DILocation(line: 3903, column: 12, scope: !1892)
!2062 = !DILocation(line: 3904, column: 10, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !1892, file: !2, line: 3904, column: 10)
!2064 = !DILocation(line: 3904, column: 17, scope: !2063)
!2065 = !{!2066, !1546, i64 8}
!2066 = !{!"_xmlRegTrans", !1528, i64 0, !1546, i64 8, !1546, i64 12, !1546, i64 16, !1546, i64 20}
!2067 = !DILocation(line: 3904, column: 20, scope: !2063)
!2068 = !DILocation(line: 3904, column: 10, scope: !1892)
!2069 = !DILocation(line: 3905, column: 3, scope: !2063)
!2070 = !DILocation(line: 3906, column: 13, scope: !1892)
!2071 = !DILocation(line: 3906, column: 20, scope: !1892)
!2072 = !{!2066, !1528, i64 0}
!2073 = !DILocation(line: 3906, column: 11, scope: !1892)
!2074 = !DILocation(line: 3907, column: 10, scope: !1892)
!2075 = !DILocation(line: 3908, column: 10, scope: !1891)
!2076 = !DILocation(line: 3908, column: 17, scope: !1891)
!2077 = !{!2066, !1546, i64 16}
!2078 = !DILocation(line: 3908, column: 23, scope: !1891)
!2079 = !DILocation(line: 3908, column: 10, scope: !1892)
!2080 = !DILocation(line: 3909, column: 3, scope: !1890)
!2081 = !DILocation(line: 3909, column: 7, scope: !1890)
!2082 = !DILocation(line: 3910, column: 3, scope: !1890)
!2083 = !DILocation(line: 3910, column: 7, scope: !1890)
!2084 = !DILocation(line: 3911, column: 3, scope: !1890)
!2085 = !DILocation(line: 3911, column: 18, scope: !1890)
!2086 = !DILocation(line: 3912, column: 3, scope: !1890)
!2087 = !DILocation(line: 3912, column: 20, scope: !1890)
!2088 = !DILocation(line: 3914, column: 7, scope: !1890)
!2089 = !DILocation(line: 3922, column: 8, scope: !2090)
!2090 = distinct !DILexicalBlock(scope: !1890, file: !2, line: 3922, column: 7)
!2091 = !DILocation(line: 3922, column: 14, scope: !2090)
!2092 = !DILocation(line: 3922, column: 23, scope: !2090)
!2093 = !DILocation(line: 3922, column: 27, scope: !2090)
!2094 = !DILocation(line: 3922, column: 26, scope: !2090)
!2095 = !DILocation(line: 3922, column: 7, scope: !1890)
!2096 = !DILocation(line: 3923, column: 11, scope: !2097)
!2097 = distinct !DILexicalBlock(scope: !2090, file: !2, line: 3922, column: 35)
!2098 = !DILocation(line: 3924, column: 3, scope: !2097)
!2099 = !DILocation(line: 3924, column: 14, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2090, file: !2, line: 3924, column: 14)
!2101 = !DILocation(line: 3924, column: 20, scope: !2100)
!2102 = !DILocation(line: 3924, column: 14, scope: !2090)
!2103 = !DILocation(line: 3925, column: 14, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !2105, file: !2, line: 3925, column: 7)
!2105 = distinct !DILexicalBlock(scope: !2100, file: !2, line: 3924, column: 29)
!2106 = !DILocation(line: 3925, column: 12, scope: !2104)
!2107 = !DILocation(line: 3925, column: 18, scope: !2108)
!2108 = distinct !DILexicalBlock(scope: !2104, file: !2, line: 3925, column: 7)
!2109 = !DILocation(line: 3925, column: 22, scope: !2108)
!2110 = !DILocation(line: 3925, column: 28, scope: !2108)
!2111 = !DILocation(line: 3925, column: 35, scope: !2108)
!2112 = !DILocation(line: 3925, column: 20, scope: !2108)
!2113 = !DILocation(line: 3925, column: 7, scope: !2104)
!2114 = !DILocation(line: 3926, column: 9, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2108, file: !2, line: 3925, column: 48)
!2116 = !DILocation(line: 3926, column: 15, scope: !2115)
!2117 = !DILocation(line: 3926, column: 22, scope: !2115)
!2118 = !DILocation(line: 3926, column: 28, scope: !2115)
!2119 = !DILocation(line: 3926, column: 6, scope: !2115)
!2120 = !DILocation(line: 3927, column: 9, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !2115, file: !2, line: 3927, column: 8)
!2122 = !DILocation(line: 3927, column: 12, scope: !2121)
!2123 = !{!2066, !1546, i64 12}
!2124 = !DILocation(line: 3927, column: 20, scope: !2121)
!2125 = !DILocation(line: 3927, column: 25, scope: !2121)
!2126 = !DILocation(line: 3927, column: 29, scope: !2121)
!2127 = !DILocation(line: 3927, column: 34, scope: !2121)
!2128 = !DILocation(line: 3927, column: 31, scope: !2121)
!2129 = !DILocation(line: 3927, column: 8, scope: !2115)
!2130 = !DILocation(line: 3928, column: 8, scope: !2121)
!2131 = !DILocation(line: 3929, column: 15, scope: !2115)
!2132 = !DILocation(line: 3929, column: 21, scope: !2115)
!2133 = !DILocation(line: 3929, column: 27, scope: !2115)
!2134 = !{!1545, !1528, i64 48}
!2135 = !DILocation(line: 3929, column: 36, scope: !2115)
!2136 = !DILocation(line: 3929, column: 39, scope: !2115)
!2137 = !DILocation(line: 3929, column: 12, scope: !2115)
!2138 = !DILocation(line: 3930, column: 12, scope: !2115)
!2139 = !DILocation(line: 3930, column: 18, scope: !2115)
!2140 = !DILocation(line: 3930, column: 25, scope: !2115)
!2141 = !DILocation(line: 3930, column: 28, scope: !2115)
!2142 = !DILocation(line: 3930, column: 10, scope: !2115)
!2143 = !DILocation(line: 3931, column: 9, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !2115, file: !2, line: 3931, column: 8)
!2145 = !DILocation(line: 3931, column: 17, scope: !2144)
!2146 = !DILocation(line: 3931, column: 26, scope: !2144)
!2147 = !{!2148, !1546, i64 4}
!2148 = !{!"_xmlRegCounter", !1546, i64 0, !1546, i64 4}
!2149 = !DILocation(line: 3931, column: 15, scope: !2144)
!2150 = !DILocation(line: 3931, column: 31, scope: !2144)
!2151 = !DILocation(line: 3932, column: 16, scope: !2144)
!2152 = !DILocation(line: 3932, column: 19, scope: !2144)
!2153 = !DILocation(line: 3932, column: 24, scope: !2144)
!2154 = !DILocation(line: 3932, column: 33, scope: !2144)
!2155 = !DILocation(line: 3933, column: 21, scope: !2144)
!2156 = !DILocation(line: 3933, column: 28, scope: !2144)
!2157 = !DILocation(line: 3933, column: 31, scope: !2144)
!2158 = !DILocation(line: 3933, column: 37, scope: !2144)
!2159 = !{!2160, !1528, i64 24}
!2160 = !{!"_xmlRegAtom", !1546, i64 0, !1529, i64 4, !1529, i64 8, !1546, i64 12, !1546, i64 16, !1528, i64 24, !1528, i64 32, !1546, i64 40, !1546, i64 44, !1528, i64 48, !1528, i64 56, !1528, i64 64, !1546, i64 72, !1546, i64 76, !1528, i64 80, !1528, i64 88}
!2161 = !DILocation(line: 3933, column: 9, scope: !2144)
!2162 = !DILocation(line: 3931, column: 8, scope: !2115)
!2163 = !DILocation(line: 3934, column: 12, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !2144, file: !2, line: 3933, column: 47)
!2165 = !DILocation(line: 3935, column: 8, scope: !2164)
!2166 = !DILocation(line: 3937, column: 9, scope: !2167)
!2167 = distinct !DILexicalBlock(scope: !2115, file: !2, line: 3937, column: 8)
!2168 = !DILocation(line: 3937, column: 18, scope: !2167)
!2169 = !DILocation(line: 3937, column: 27, scope: !2167)
!2170 = !{!2148, !1546, i64 0}
!2171 = !DILocation(line: 3937, column: 15, scope: !2167)
!2172 = !DILocation(line: 3937, column: 32, scope: !2167)
!2173 = !DILocation(line: 3938, column: 9, scope: !2167)
!2174 = !DILocation(line: 3938, column: 17, scope: !2167)
!2175 = !DILocation(line: 3938, column: 26, scope: !2167)
!2176 = !DILocation(line: 3938, column: 15, scope: !2167)
!2177 = !DILocation(line: 3938, column: 31, scope: !2167)
!2178 = !DILocation(line: 3939, column: 9, scope: !2167)
!2179 = !DILocation(line: 3939, column: 12, scope: !2167)
!2180 = !DILocation(line: 3939, column: 17, scope: !2167)
!2181 = !DILocation(line: 3939, column: 26, scope: !2167)
!2182 = !DILocation(line: 3940, column: 21, scope: !2167)
!2183 = !DILocation(line: 3940, column: 28, scope: !2167)
!2184 = !DILocation(line: 3940, column: 31, scope: !2167)
!2185 = !DILocation(line: 3940, column: 37, scope: !2167)
!2186 = !DILocation(line: 3940, column: 9, scope: !2167)
!2187 = !DILocation(line: 3937, column: 8, scope: !2115)
!2188 = !DILocation(line: 3941, column: 12, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2167, file: !2, line: 3940, column: 47)
!2190 = !DILocation(line: 3942, column: 8, scope: !2189)
!2191 = !DILocation(line: 3944, column: 7, scope: !2115)
!2192 = !DILocation(line: 3925, column: 44, scope: !2108)
!2193 = !DILocation(line: 3925, column: 7, scope: !2108)
!2194 = distinct !{!2194, !2113, !2195, !1794}
!2195 = !DILocation(line: 3944, column: 7, scope: !2104)
!2196 = !DILocation(line: 3945, column: 3, scope: !2105)
!2197 = !DILocation(line: 3946, column: 6, scope: !1891)
!2198 = !DILocation(line: 3946, column: 6, scope: !1890)
!2199 = !DILocation(line: 3946, column: 17, scope: !1902)
!2200 = !DILocation(line: 3946, column: 24, scope: !1902)
!2201 = !DILocation(line: 3946, column: 30, scope: !1902)
!2202 = !DILocation(line: 3946, column: 17, scope: !1891)
!2203 = !DILocation(line: 3947, column: 3, scope: !1901)
!2204 = !DILocation(line: 3947, column: 7, scope: !1901)
!2205 = !DILocation(line: 3948, column: 3, scope: !1901)
!2206 = !DILocation(line: 3948, column: 7, scope: !1901)
!2207 = !DILocation(line: 3949, column: 3, scope: !1901)
!2208 = !DILocation(line: 3949, column: 18, scope: !1901)
!2209 = !DILocation(line: 3950, column: 3, scope: !1901)
!2210 = !DILocation(line: 3950, column: 20, scope: !1901)
!2211 = !DILocation(line: 3952, column: 7, scope: !1901)
!2212 = !DILocation(line: 3960, column: 10, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !1901, file: !2, line: 3960, column: 3)
!2214 = !DILocation(line: 3960, column: 8, scope: !2213)
!2215 = !DILocation(line: 3960, column: 14, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2213, file: !2, line: 3960, column: 3)
!2217 = !DILocation(line: 3960, column: 18, scope: !2216)
!2218 = !DILocation(line: 3960, column: 24, scope: !2216)
!2219 = !DILocation(line: 3960, column: 31, scope: !2216)
!2220 = !DILocation(line: 3960, column: 16, scope: !2216)
!2221 = !DILocation(line: 3960, column: 3, scope: !2213)
!2222 = !DILocation(line: 3961, column: 26, scope: !2223)
!2223 = distinct !DILexicalBlock(scope: !2216, file: !2, line: 3960, column: 44)
!2224 = !DILocation(line: 3961, column: 32, scope: !2223)
!2225 = !DILocation(line: 3961, column: 39, scope: !2223)
!2226 = !DILocation(line: 3961, column: 45, scope: !2223)
!2227 = !DILocation(line: 3961, column: 23, scope: !2223)
!2228 = !DILocation(line: 3962, column: 12, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2223, file: !2, line: 3962, column: 11)
!2230 = !DILocation(line: 3962, column: 15, scope: !2229)
!2231 = !DILocation(line: 3962, column: 23, scope: !2229)
!2232 = !DILocation(line: 3962, column: 28, scope: !2229)
!2233 = !DILocation(line: 3962, column: 32, scope: !2229)
!2234 = !DILocation(line: 3962, column: 37, scope: !2229)
!2235 = !DILocation(line: 3962, column: 34, scope: !2229)
!2236 = !DILocation(line: 3962, column: 11, scope: !2223)
!2237 = !DILocation(line: 3963, column: 4, scope: !2229)
!2238 = !DILocation(line: 3964, column: 32, scope: !2223)
!2239 = !DILocation(line: 3964, column: 38, scope: !2223)
!2240 = !DILocation(line: 3964, column: 44, scope: !2223)
!2241 = !DILocation(line: 3964, column: 53, scope: !2223)
!2242 = !DILocation(line: 3964, column: 56, scope: !2223)
!2243 = !DILocation(line: 3964, column: 29, scope: !2223)
!2244 = !DILocation(line: 3965, column: 15, scope: !2223)
!2245 = !DILocation(line: 3965, column: 21, scope: !2223)
!2246 = !DILocation(line: 3965, column: 28, scope: !2223)
!2247 = !DILocation(line: 3965, column: 31, scope: !2223)
!2248 = !DILocation(line: 3965, column: 13, scope: !2223)
!2249 = !DILocation(line: 3966, column: 12, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2223, file: !2, line: 3966, column: 11)
!2251 = !DILocation(line: 3966, column: 20, scope: !2250)
!2252 = !DILocation(line: 3966, column: 29, scope: !2250)
!2253 = !DILocation(line: 3966, column: 18, scope: !2250)
!2254 = !DILocation(line: 3966, column: 34, scope: !2250)
!2255 = !DILocation(line: 3966, column: 38, scope: !2250)
!2256 = !DILocation(line: 3966, column: 46, scope: !2250)
!2257 = !DILocation(line: 3966, column: 55, scope: !2250)
!2258 = !DILocation(line: 3966, column: 44, scope: !2250)
!2259 = !DILocation(line: 3966, column: 11, scope: !2223)
!2260 = !DILocation(line: 3967, column: 8, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2250, file: !2, line: 3966, column: 61)
!2262 = !DILocation(line: 3968, column: 4, scope: !2261)
!2263 = !DILocation(line: 3970, column: 3, scope: !2223)
!2264 = !DILocation(line: 3960, column: 40, scope: !2216)
!2265 = !DILocation(line: 3960, column: 3, scope: !2216)
!2266 = distinct !{!2266, !2221, !2267, !1794}
!2267 = !DILocation(line: 3970, column: 3, scope: !2213)
!2268 = !DILocation(line: 3971, column: 6, scope: !1902)
!2269 = !DILocation(line: 3971, column: 6, scope: !1901)
!2270 = !DILocation(line: 3971, column: 17, scope: !1908)
!2271 = !DILocation(line: 3971, column: 24, scope: !1908)
!2272 = !DILocation(line: 3971, column: 30, scope: !1908)
!2273 = !DILocation(line: 3971, column: 17, scope: !1902)
!2274 = !DILocation(line: 3972, column: 3, scope: !1907)
!2275 = !DILocation(line: 3972, column: 7, scope: !1907)
!2276 = !DILocation(line: 3973, column: 3, scope: !1907)
!2277 = !DILocation(line: 3973, column: 20, scope: !1907)
!2278 = !DILocation(line: 3979, column: 11, scope: !1907)
!2279 = !DILocation(line: 3979, column: 17, scope: !1907)
!2280 = !DILocation(line: 3979, column: 24, scope: !1907)
!2281 = !DILocation(line: 3979, column: 31, scope: !1907)
!2282 = !DILocation(line: 3979, column: 9, scope: !1907)
!2283 = !DILocation(line: 3980, column: 14, scope: !1907)
!2284 = !DILocation(line: 3980, column: 20, scope: !1907)
!2285 = !DILocation(line: 3980, column: 26, scope: !1907)
!2286 = !DILocation(line: 3980, column: 35, scope: !1907)
!2287 = !DILocation(line: 3980, column: 42, scope: !1907)
!2288 = !DILocation(line: 3980, column: 11, scope: !1907)
!2289 = !DILocation(line: 3985, column: 11, scope: !1907)
!2290 = !DILocation(line: 3985, column: 20, scope: !1907)
!2291 = !DILocation(line: 3985, column: 29, scope: !1907)
!2292 = !DILocation(line: 3985, column: 17, scope: !1907)
!2293 = !DILocation(line: 3985, column: 34, scope: !1907)
!2294 = !DILocation(line: 3985, column: 38, scope: !1907)
!2295 = !DILocation(line: 3985, column: 47, scope: !1907)
!2296 = !DILocation(line: 3985, column: 56, scope: !1907)
!2297 = !DILocation(line: 3985, column: 44, scope: !1907)
!2298 = !DILocation(line: 0, scope: !1907)
!2299 = !DILocation(line: 3985, column: 7, scope: !1907)
!2300 = !DILocation(line: 3986, column: 6, scope: !1908)
!2301 = !DILocation(line: 3986, column: 6, scope: !1907)
!2302 = !DILocation(line: 3986, column: 17, scope: !1915)
!2303 = !DILocation(line: 3986, column: 22, scope: !1915)
!2304 = !DILocation(line: 3986, column: 17, scope: !1908)
!2305 = !DILocation(line: 3987, column: 11, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !1915, file: !2, line: 3986, column: 31)
!2307 = !DILocation(line: 3987, column: 3, scope: !2306)
!2308 = !DILocation(line: 3988, column: 3, scope: !2306)
!2309 = !DILocation(line: 3988, column: 9, scope: !2306)
!2310 = !DILocation(line: 3988, column: 16, scope: !2306)
!2311 = !DILocation(line: 3989, column: 3, scope: !2306)
!2312 = !DILocation(line: 3990, column: 17, scope: !1914)
!2313 = !DILocation(line: 3990, column: 23, scope: !1914)
!2314 = !DILocation(line: 3990, column: 17, scope: !1915)
!2315 = !DILocation(line: 3991, column: 32, scope: !1913)
!2316 = !DILocation(line: 3991, column: 38, scope: !1913)
!2317 = !DILocation(line: 3991, column: 46, scope: !1913)
!2318 = !DILocation(line: 3991, column: 9, scope: !1913)
!2319 = !DILocation(line: 3991, column: 7, scope: !1913)
!2320 = !DILocation(line: 3992, column: 7, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !1913, file: !2, line: 3992, column: 7)
!2322 = !DILocation(line: 3992, column: 13, scope: !2321)
!2323 = !{!2160, !1546, i64 40}
!2324 = !DILocation(line: 3992, column: 7, scope: !1913)
!2325 = !DILocation(line: 3993, column: 14, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2321, file: !2, line: 3992, column: 18)
!2327 = !DILocation(line: 3993, column: 13, scope: !2326)
!2328 = !DILocation(line: 3993, column: 11, scope: !2326)
!2329 = !DILocation(line: 3994, column: 12, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2326, file: !2, line: 3994, column: 11)
!2331 = !DILocation(line: 3994, column: 11, scope: !2326)
!2332 = !DILocation(line: 3995, column: 15, scope: !2330)
!2333 = !DILocation(line: 3995, column: 11, scope: !2330)
!2334 = !DILocation(line: 3996, column: 3, scope: !2326)
!2335 = !DILocation(line: 3997, column: 8, scope: !1912)
!2336 = !DILocation(line: 3997, column: 12, scope: !1912)
!2337 = !DILocation(line: 3997, column: 18, scope: !1912)
!2338 = !DILocation(line: 3997, column: 22, scope: !1912)
!2339 = !DILocation(line: 3997, column: 29, scope: !1912)
!2340 = !DILocation(line: 3997, column: 37, scope: !1912)
!2341 = !DILocation(line: 3997, column: 7, scope: !1913)
!2342 = !DILocation(line: 3998, column: 7, scope: !1911)
!2343 = !DILocation(line: 3998, column: 24, scope: !1911)
!2344 = !DILocation(line: 3999, column: 7, scope: !1911)
!2345 = !DILocation(line: 3999, column: 11, scope: !1911)
!2346 = !DILocation(line: 4001, column: 15, scope: !1911)
!2347 = !DILocation(line: 4001, column: 21, scope: !1911)
!2348 = !DILocation(line: 4001, column: 28, scope: !1911)
!2349 = !DILocation(line: 4001, column: 35, scope: !1911)
!2350 = !DILocation(line: 4001, column: 13, scope: !1911)
!2351 = !DILocation(line: 4002, column: 18, scope: !1911)
!2352 = !DILocation(line: 4002, column: 24, scope: !1911)
!2353 = !DILocation(line: 4002, column: 30, scope: !1911)
!2354 = !DILocation(line: 4002, column: 39, scope: !1911)
!2355 = !DILocation(line: 4002, column: 46, scope: !1911)
!2356 = !DILocation(line: 4002, column: 15, scope: !1911)
!2357 = !DILocation(line: 4003, column: 11, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !1911, file: !2, line: 4003, column: 11)
!2359 = !DILocation(line: 4003, column: 20, scope: !2358)
!2360 = !DILocation(line: 4003, column: 29, scope: !2358)
!2361 = !DILocation(line: 4003, column: 17, scope: !2358)
!2362 = !DILocation(line: 4003, column: 11, scope: !1911)
!2363 = !DILocation(line: 4004, column: 8, scope: !2358)
!2364 = !DILocation(line: 4004, column: 4, scope: !2358)
!2365 = !DILocation(line: 4005, column: 3, scope: !1912)
!2366 = !DILocation(line: 4005, column: 3, scope: !1911)
!2367 = !DILocation(line: 4007, column: 8, scope: !1919)
!2368 = !DILocation(line: 4007, column: 12, scope: !1919)
!2369 = !DILocation(line: 4007, column: 18, scope: !1919)
!2370 = !DILocation(line: 4007, column: 22, scope: !1919)
!2371 = !DILocation(line: 4007, column: 28, scope: !1919)
!2372 = !{!2160, !1546, i64 12}
!2373 = !DILocation(line: 4007, column: 32, scope: !1919)
!2374 = !DILocation(line: 4007, column: 37, scope: !1919)
!2375 = !DILocation(line: 4007, column: 41, scope: !1919)
!2376 = !DILocation(line: 4007, column: 47, scope: !1919)
!2377 = !{!2160, !1546, i64 16}
!2378 = !DILocation(line: 4007, column: 51, scope: !1919)
!2379 = !DILocation(line: 4007, column: 7, scope: !1913)
!2380 = !DILocation(line: 4008, column: 7, scope: !1918)
!2381 = !DILocation(line: 4008, column: 22, scope: !1918)
!2382 = !DILocation(line: 4008, column: 27, scope: !1918)
!2383 = !DILocation(line: 4008, column: 33, scope: !1918)
!2384 = !DILocation(line: 4008, column: 39, scope: !1918)
!2385 = !DILocation(line: 4008, column: 46, scope: !1918)
!2386 = !DILocation(line: 4008, column: 53, scope: !1918)
!2387 = !DILocation(line: 4013, column: 11, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !1918, file: !2, line: 4013, column: 11)
!2389 = !DILocation(line: 4013, column: 17, scope: !2388)
!2390 = !DILocation(line: 4013, column: 24, scope: !2388)
!2391 = !DILocation(line: 4013, column: 34, scope: !2388)
!2392 = !DILocation(line: 4013, column: 40, scope: !2388)
!2393 = !DILocation(line: 4013, column: 48, scope: !2388)
!2394 = !DILocation(line: 4013, column: 32, scope: !2388)
!2395 = !DILocation(line: 4013, column: 11, scope: !1918)
!2396 = !DILocation(line: 4014, column: 8, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2398, file: !2, line: 4014, column: 8)
!2398 = distinct !DILexicalBlock(scope: !2388, file: !2, line: 4013, column: 53)
!2399 = !DILocation(line: 4014, column: 14, scope: !2397)
!2400 = !DILocation(line: 4014, column: 27, scope: !2397)
!2401 = !DILocation(line: 4014, column: 8, scope: !2398)
!2402 = !DILocation(line: 4015, column: 36, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2397, file: !2, line: 4014, column: 33)
!2404 = !DILocation(line: 4015, column: 42, scope: !2403)
!2405 = !DILocation(line: 4015, column: 49, scope: !2403)
!2406 = !DILocation(line: 4015, column: 8, scope: !2403)
!2407 = !DILocation(line: 4016, column: 4, scope: !2403)
!2408 = !DILocation(line: 4017, column: 21, scope: !2398)
!2409 = !DILocation(line: 4017, column: 4, scope: !2398)
!2410 = !DILocation(line: 4018, column: 7, scope: !2398)
!2411 = !DILocation(line: 4019, column: 7, scope: !1918)
!2412 = !DILocation(line: 4019, column: 13, scope: !1918)
!2413 = !DILocation(line: 4019, column: 24, scope: !1918)
!2414 = !DILocation(line: 4020, column: 7, scope: !1918)
!2415 = !DILocation(line: 4024, column: 8, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !1923, file: !2, line: 4024, column: 8)
!2417 = !DILocation(line: 4024, column: 14, scope: !2416)
!2418 = !DILocation(line: 4024, column: 28, scope: !2416)
!2419 = !DILocation(line: 4024, column: 34, scope: !2416)
!2420 = !DILocation(line: 4024, column: 25, scope: !2416)
!2421 = !DILocation(line: 4024, column: 8, scope: !1923)
!2422 = !DILocation(line: 4025, column: 8, scope: !2423)
!2423 = distinct !DILexicalBlock(scope: !2416, file: !2, line: 4024, column: 39)
!2424 = !DILocation(line: 4027, column: 4, scope: !1923)
!2425 = !DILocation(line: 4027, column: 10, scope: !1923)
!2426 = !DILocation(line: 4027, column: 15, scope: !1923)
!2427 = !DILocation(line: 4028, column: 12, scope: !1923)
!2428 = !DILocation(line: 4028, column: 18, scope: !1923)
!2429 = !DILocation(line: 4028, column: 29, scope: !1923)
!2430 = !DILocation(line: 4028, column: 35, scope: !1923)
!2431 = !DILocation(line: 4028, column: 42, scope: !1923)
!2432 = !DILocation(line: 4028, column: 10, scope: !1923)
!2433 = !DILocation(line: 4029, column: 11, scope: !1923)
!2434 = !DILocation(line: 4029, column: 17, scope: !1923)
!2435 = !DILocation(line: 4029, column: 28, scope: !1923)
!2436 = !DILocation(line: 4029, column: 34, scope: !1923)
!2437 = !DILocation(line: 4029, column: 41, scope: !1923)
!2438 = !DILocation(line: 4029, column: 9, scope: !1923)
!2439 = !DILocation(line: 4037, column: 8, scope: !2440)
!2440 = distinct !DILexicalBlock(scope: !1923, file: !2, line: 4037, column: 8)
!2441 = !DILocation(line: 4037, column: 14, scope: !2440)
!2442 = !DILocation(line: 4037, column: 8, scope: !1923)
!2443 = !DILocation(line: 4038, column: 8, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2440, file: !2, line: 4037, column: 23)
!2445 = !DILocation(line: 4038, column: 14, scope: !2444)
!2446 = !DILocation(line: 4038, column: 20, scope: !2444)
!2447 = !DILocation(line: 4039, column: 8, scope: !2444)
!2448 = !DILocation(line: 4041, column: 8, scope: !1922)
!2449 = !DILocation(line: 4041, column: 14, scope: !1922)
!2450 = !DILocation(line: 4041, column: 28, scope: !1922)
!2451 = !DILocation(line: 4041, column: 34, scope: !1922)
!2452 = !DILocation(line: 4041, column: 25, scope: !1922)
!2453 = !DILocation(line: 4041, column: 8, scope: !1923)
!2454 = !DILocation(line: 4042, column: 8, scope: !1921)
!2455 = !DILocation(line: 4042, column: 12, scope: !1921)
!2456 = !DILocation(line: 4042, column: 22, scope: !1921)
!2457 = !DILocation(line: 4042, column: 28, scope: !1921)
!2458 = !DILocation(line: 4043, column: 8, scope: !1921)
!2459 = !DILocation(line: 4043, column: 23, scope: !1921)
!2460 = !DILocation(line: 4043, column: 31, scope: !1921)
!2461 = !DILocation(line: 4043, column: 37, scope: !1921)
!2462 = !DILocation(line: 4048, column: 8, scope: !1921)
!2463 = !DILocation(line: 4048, column: 14, scope: !1921)
!2464 = !DILocation(line: 4048, column: 22, scope: !1921)
!2465 = !DILocation(line: 4049, column: 22, scope: !1921)
!2466 = !DILocation(line: 4049, column: 8, scope: !1921)
!2467 = !DILocation(line: 4049, column: 14, scope: !1921)
!2468 = !DILocation(line: 4049, column: 20, scope: !1921)
!2469 = !DILocation(line: 4050, column: 12, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !1921, file: !2, line: 4050, column: 12)
!2471 = !DILocation(line: 4050, column: 18, scope: !2470)
!2472 = !DILocation(line: 4050, column: 31, scope: !2470)
!2473 = !DILocation(line: 4050, column: 12, scope: !1921)
!2474 = !DILocation(line: 4051, column: 33, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2470, file: !2, line: 4050, column: 37)
!2476 = !DILocation(line: 4051, column: 39, scope: !2475)
!2477 = !DILocation(line: 4051, column: 46, scope: !2475)
!2478 = !DILocation(line: 4051, column: 5, scope: !2475)
!2479 = !DILocation(line: 4052, column: 8, scope: !2475)
!2480 = !DILocation(line: 4053, column: 25, scope: !1921)
!2481 = !DILocation(line: 4053, column: 8, scope: !1921)
!2482 = !DILocation(line: 4054, column: 24, scope: !1921)
!2483 = !DILocation(line: 4054, column: 8, scope: !1921)
!2484 = !DILocation(line: 4054, column: 14, scope: !1921)
!2485 = !DILocation(line: 4054, column: 22, scope: !1921)
!2486 = !DILocation(line: 4055, column: 22, scope: !1921)
!2487 = !DILocation(line: 4055, column: 8, scope: !1921)
!2488 = !DILocation(line: 4055, column: 14, scope: !1921)
!2489 = !DILocation(line: 4055, column: 20, scope: !1921)
!2490 = !DILocation(line: 4056, column: 4, scope: !1922)
!2491 = !DILocation(line: 4056, column: 4, scope: !1921)
!2492 = !DILocation(line: 4057, column: 22, scope: !1923)
!2493 = !DILocation(line: 4057, column: 29, scope: !1923)
!2494 = !DILocation(line: 4057, column: 35, scope: !1923)
!2495 = !DILocation(line: 4057, column: 10, scope: !1923)
!2496 = !DILocation(line: 4057, column: 8, scope: !1923)
!2497 = !DILocation(line: 4058, column: 4, scope: !1923)
!2498 = !DILocation(line: 4058, column: 10, scope: !1923)
!2499 = !DILocation(line: 4058, column: 20, scope: !1923)
!2500 = !DILocation(line: 4059, column: 7, scope: !1923)
!2501 = !DILocation(line: 4059, column: 16, scope: !1918)
!2502 = !DILocation(line: 4059, column: 20, scope: !1918)
!2503 = distinct !{!2503, !2414, !2504, !1794}
!2504 = !DILocation(line: 4059, column: 24, scope: !1918)
!2505 = !DILocation(line: 4060, column: 11, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !1918, file: !2, line: 4060, column: 11)
!2507 = !DILocation(line: 4060, column: 17, scope: !2506)
!2508 = !DILocation(line: 4060, column: 30, scope: !2506)
!2509 = !DILocation(line: 4060, column: 36, scope: !2506)
!2510 = !DILocation(line: 4060, column: 28, scope: !2506)
!2511 = !DILocation(line: 4060, column: 11, scope: !1918)
!2512 = !DILocation(line: 4061, column: 8, scope: !2506)
!2513 = !DILocation(line: 4061, column: 4, scope: !2506)
!2514 = !DILocation(line: 4067, column: 11, scope: !2515)
!2515 = distinct !DILexicalBlock(scope: !1918, file: !2, line: 4067, column: 11)
!2516 = !DILocation(line: 4067, column: 15, scope: !2515)
!2517 = !DILocation(line: 4067, column: 11, scope: !1918)
!2518 = !DILocation(line: 4068, column: 8, scope: !2515)
!2519 = !DILocation(line: 4068, column: 4, scope: !2515)
!2520 = !DILocation(line: 4069, column: 11, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !1918, file: !2, line: 4069, column: 11)
!2522 = !DILocation(line: 4069, column: 15, scope: !2521)
!2523 = !DILocation(line: 4069, column: 11, scope: !1918)
!2524 = !DILocation(line: 4070, column: 4, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2521, file: !2, line: 4069, column: 21)
!2526 = !DILocation(line: 4072, column: 3, scope: !1919)
!2527 = !DILocation(line: 4072, column: 3, scope: !1918)
!2528 = !DILocation(line: 4073, column: 6, scope: !1913)
!2529 = !DILocation(line: 4074, column: 10, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !1892, file: !2, line: 4074, column: 10)
!2531 = !DILocation(line: 4074, column: 14, scope: !2530)
!2532 = !DILocation(line: 4074, column: 10, scope: !1892)
!2533 = !DILocation(line: 4075, column: 8, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2535, file: !2, line: 4075, column: 7)
!2535 = distinct !DILexicalBlock(scope: !2530, file: !2, line: 4074, column: 20)
!2536 = !DILocation(line: 4075, column: 14, scope: !2534)
!2537 = !DILocation(line: 4075, column: 23, scope: !2534)
!2538 = !DILocation(line: 4075, column: 32, scope: !2534)
!2539 = !DILocation(line: 4075, column: 36, scope: !2534)
!2540 = !DILocation(line: 4075, column: 41, scope: !2534)
!2541 = !DILocation(line: 4075, column: 50, scope: !2534)
!2542 = !DILocation(line: 4076, column: 5, scope: !2534)
!2543 = !DILocation(line: 4076, column: 10, scope: !2534)
!2544 = !DILocation(line: 4075, column: 7, scope: !2535)
!2545 = !DILocation(line: 4077, column: 7, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2534, file: !2, line: 4076, column: 20)
!2547 = !DILocation(line: 4077, column: 13, scope: !2546)
!2548 = !DILocation(line: 4077, column: 22, scope: !2546)
!2549 = !DILocation(line: 4077, column: 28, scope: !2546)
!2550 = !DILocation(line: 4077, column: 34, scope: !2546)
!2551 = !DILocation(line: 4077, column: 40, scope: !2546)
!2552 = !DILocation(line: 4078, column: 15, scope: !2546)
!2553 = !DILocation(line: 4078, column: 21, scope: !2546)
!2554 = !{!2160, !1528, i64 88}
!2555 = !DILocation(line: 4078, column: 27, scope: !2546)
!2556 = !DILocation(line: 4079, column: 3, scope: !2546)
!2557 = !DILocation(line: 4080, column: 7, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2535, file: !2, line: 4080, column: 7)
!2559 = !DILocation(line: 4080, column: 13, scope: !2558)
!2560 = !DILocation(line: 4080, column: 20, scope: !2558)
!2561 = !DILocation(line: 4080, column: 30, scope: !2558)
!2562 = !DILocation(line: 4080, column: 36, scope: !2558)
!2563 = !DILocation(line: 4080, column: 44, scope: !2558)
!2564 = !DILocation(line: 4080, column: 28, scope: !2558)
!2565 = !DILocation(line: 4080, column: 7, scope: !2535)
!2566 = !DILocation(line: 4081, column: 11, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2568, file: !2, line: 4081, column: 11)
!2568 = distinct !DILexicalBlock(scope: !2558, file: !2, line: 4080, column: 49)
!2569 = !DILocation(line: 4081, column: 17, scope: !2567)
!2570 = !DILocation(line: 4081, column: 30, scope: !2567)
!2571 = !DILocation(line: 4081, column: 11, scope: !2568)
!2572 = !DILocation(line: 4082, column: 32, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2567, file: !2, line: 4081, column: 36)
!2574 = !DILocation(line: 4082, column: 38, scope: !2573)
!2575 = !DILocation(line: 4082, column: 45, scope: !2573)
!2576 = !DILocation(line: 4082, column: 4, scope: !2573)
!2577 = !DILocation(line: 4083, column: 7, scope: !2573)
!2578 = !DILocation(line: 4084, column: 24, scope: !2568)
!2579 = !DILocation(line: 4084, column: 7, scope: !2568)
!2580 = !DILocation(line: 4085, column: 3, scope: !2568)
!2581 = !DILocation(line: 4086, column: 7, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2535, file: !2, line: 4086, column: 7)
!2583 = !DILocation(line: 4086, column: 14, scope: !2582)
!2584 = !DILocation(line: 4086, column: 22, scope: !2582)
!2585 = !DILocation(line: 4086, column: 7, scope: !2535)
!2586 = !DILocation(line: 4090, column: 7, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2582, file: !2, line: 4086, column: 28)
!2588 = !DILocation(line: 4090, column: 13, scope: !2587)
!2589 = !DILocation(line: 4090, column: 20, scope: !2587)
!2590 = !DILocation(line: 4090, column: 27, scope: !2587)
!2591 = !DILocation(line: 4090, column: 35, scope: !2587)
!2592 = !DILocation(line: 4091, column: 3, scope: !2587)
!2593 = !DILocation(line: 4092, column: 8, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2535, file: !2, line: 4092, column: 7)
!2595 = !DILocation(line: 4092, column: 15, scope: !2594)
!2596 = !DILocation(line: 4092, column: 21, scope: !2594)
!2597 = !DILocation(line: 4092, column: 27, scope: !2594)
!2598 = !DILocation(line: 4093, column: 8, scope: !2594)
!2599 = !DILocation(line: 4093, column: 15, scope: !2594)
!2600 = !DILocation(line: 4093, column: 21, scope: !2594)
!2601 = !DILocation(line: 4092, column: 7, scope: !2535)
!2602 = !DILocation(line: 4098, column: 7, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2594, file: !2, line: 4093, column: 44)
!2604 = !DILocation(line: 4098, column: 13, scope: !2603)
!2605 = !DILocation(line: 4098, column: 20, scope: !2603)
!2606 = !DILocation(line: 4098, column: 27, scope: !2603)
!2607 = !DILocation(line: 4098, column: 34, scope: !2603)
!2608 = !DILocation(line: 4099, column: 3, scope: !2603)
!2609 = !DILocation(line: 4103, column: 22, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !2535, file: !2, line: 4103, column: 21)
!2611 = !DILocation(line: 4103, column: 28, scope: !2610)
!2612 = !DILocation(line: 4103, column: 34, scope: !2610)
!2613 = !DILocation(line: 4103, column: 41, scope: !2610)
!2614 = !DILocation(line: 4103, column: 48, scope: !2610)
!2615 = !DILocation(line: 4103, column: 52, scope: !2610)
!2616 = !DILocation(line: 4103, column: 61, scope: !2610)
!2617 = !DILocation(line: 4104, column: 8, scope: !2610)
!2618 = !DILocation(line: 4104, column: 14, scope: !2610)
!2619 = !DILocation(line: 4104, column: 20, scope: !2610)
!2620 = !DILocation(line: 4104, column: 27, scope: !2610)
!2621 = !DILocation(line: 4104, column: 34, scope: !2610)
!2622 = !DILocation(line: 4104, column: 39, scope: !2610)
!2623 = !DILocation(line: 4104, column: 44, scope: !2610)
!2624 = !DILocation(line: 4103, column: 21, scope: !2535)
!2625 = !DILocation(line: 4110, column: 11, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2627, file: !2, line: 4110, column: 11)
!2627 = distinct !DILexicalBlock(scope: !2610, file: !2, line: 4105, column: 32)
!2628 = !DILocation(line: 4110, column: 17, scope: !2626)
!2629 = !DILocation(line: 4110, column: 27, scope: !2626)
!2630 = !DILocation(line: 4110, column: 11, scope: !2627)
!2631 = !DILocation(line: 4111, column: 4, scope: !2626)
!2632 = !DILocation(line: 4111, column: 12, scope: !2626)
!2633 = !DILocation(line: 4111, column: 18, scope: !2626)
!2634 = !DILocation(line: 4112, column: 35, scope: !2627)
!2635 = !DILocation(line: 4112, column: 25, scope: !2627)
!2636 = !DILocation(line: 4112, column: 7, scope: !2627)
!2637 = !DILocation(line: 4112, column: 13, scope: !2627)
!2638 = !DILocation(line: 4112, column: 23, scope: !2627)
!2639 = !DILocation(line: 4113, column: 24, scope: !2627)
!2640 = !DILocation(line: 4113, column: 30, scope: !2627)
!2641 = !DILocation(line: 4113, column: 7, scope: !2627)
!2642 = !DILocation(line: 4113, column: 13, scope: !2627)
!2643 = !DILocation(line: 4113, column: 22, scope: !2627)
!2644 = !{!1570, !1528, i64 120}
!2645 = !DILocation(line: 4114, column: 14, scope: !2627)
!2646 = !DILocation(line: 4114, column: 20, scope: !2627)
!2647 = !DILocation(line: 4114, column: 31, scope: !2627)
!2648 = !DILocation(line: 4114, column: 37, scope: !2627)
!2649 = !DILocation(line: 4115, column: 7, scope: !2627)
!2650 = !DILocation(line: 4115, column: 13, scope: !2627)
!2651 = !DILocation(line: 4115, column: 19, scope: !2627)
!2652 = !DILocation(line: 4115, column: 30, scope: !2627)
!2653 = !DILocation(line: 4114, column: 7, scope: !2627)
!2654 = !DILocation(line: 4116, column: 3, scope: !2627)
!2655 = !DILocation(line: 4117, column: 17, scope: !2535)
!2656 = !DILocation(line: 4117, column: 23, scope: !2535)
!2657 = !DILocation(line: 4117, column: 29, scope: !2535)
!2658 = !DILocation(line: 4117, column: 36, scope: !2535)
!2659 = !DILocation(line: 4117, column: 43, scope: !2535)
!2660 = !DILocation(line: 4117, column: 3, scope: !2535)
!2661 = !DILocation(line: 4117, column: 9, scope: !2535)
!2662 = !DILocation(line: 4117, column: 15, scope: !2535)
!2663 = !DILocation(line: 4118, column: 3, scope: !2535)
!2664 = !DILocation(line: 4118, column: 9, scope: !2535)
!2665 = !DILocation(line: 4118, column: 17, scope: !2535)
!2666 = !DILocation(line: 4119, column: 7, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2535, file: !2, line: 4119, column: 7)
!2668 = !DILocation(line: 4119, column: 14, scope: !2667)
!2669 = !DILocation(line: 4119, column: 19, scope: !2667)
!2670 = !DILocation(line: 4119, column: 7, scope: !2535)
!2671 = !DILocation(line: 4120, column: 11, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2673, file: !2, line: 4120, column: 11)
!2673 = distinct !DILexicalBlock(scope: !2667, file: !2, line: 4119, column: 28)
!2674 = !DILocation(line: 4120, column: 17, scope: !2672)
!2675 = !DILocation(line: 4120, column: 28, scope: !2672)
!2676 = !DILocation(line: 4120, column: 11, scope: !2673)
!2677 = !DILocation(line: 4121, column: 4, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2672, file: !2, line: 4120, column: 37)
!2679 = !DILocation(line: 4121, column: 10, scope: !2678)
!2680 = !DILocation(line: 4121, column: 15, scope: !2678)
!2681 = !DILocation(line: 4122, column: 8, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2678, file: !2, line: 4122, column: 8)
!2683 = !DILocation(line: 4122, column: 14, scope: !2682)
!2684 = !DILocation(line: 4122, column: 22, scope: !2682)
!2685 = !DILocation(line: 4122, column: 28, scope: !2682)
!2686 = !DILocation(line: 4122, column: 20, scope: !2682)
!2687 = !DILocation(line: 4122, column: 8, scope: !2678)
!2688 = !DILocation(line: 4123, column: 16, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2682, file: !2, line: 4122, column: 42)
!2690 = !DILocation(line: 4123, column: 22, scope: !2689)
!2691 = !DILocation(line: 4123, column: 33, scope: !2689)
!2692 = !DILocation(line: 4123, column: 39, scope: !2689)
!2693 = !DILocation(line: 4123, column: 46, scope: !2689)
!2694 = !DILocation(line: 4123, column: 14, scope: !2689)
!2695 = !DILocation(line: 4124, column: 15, scope: !2689)
!2696 = !DILocation(line: 4124, column: 21, scope: !2689)
!2697 = !DILocation(line: 4124, column: 32, scope: !2689)
!2698 = !DILocation(line: 4124, column: 38, scope: !2689)
!2699 = !DILocation(line: 4124, column: 45, scope: !2689)
!2700 = !DILocation(line: 4124, column: 13, scope: !2689)
!2701 = !DILocation(line: 4128, column: 4, scope: !2689)
!2702 = !DILocation(line: 4129, column: 14, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2682, file: !2, line: 4128, column: 11)
!2704 = !DILocation(line: 4130, column: 13, scope: !2703)
!2705 = !DILocation(line: 4135, column: 7, scope: !2678)
!2706 = !DILocation(line: 4136, column: 10, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2672, file: !2, line: 4135, column: 14)
!2708 = !DILocation(line: 4137, column: 9, scope: !2707)
!2709 = !DILocation(line: 4142, column: 3, scope: !2673)
!2710 = !DILocation(line: 4143, column: 3, scope: !2535)
!2711 = !DILocation(line: 4144, column: 17, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2530, file: !2, line: 4144, column: 17)
!2713 = !DILocation(line: 4144, column: 21, scope: !2712)
!2714 = !DILocation(line: 4144, column: 17, scope: !2530)
!2715 = !DILocation(line: 4145, column: 3, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2712, file: !2, line: 4144, column: 26)
!2717 = !DILocation(line: 4145, column: 9, scope: !2716)
!2718 = !DILocation(line: 4145, column: 16, scope: !2716)
!2719 = !DILocation(line: 4146, column: 3, scope: !2716)
!2720 = !DILocation(line: 4148, column: 2, scope: !1892)
!2721 = !DILocation(line: 3902, column: 45, scope: !1893)
!2722 = !DILocation(line: 3902, column: 51, scope: !1893)
!2723 = !DILocation(line: 3902, column: 58, scope: !1893)
!2724 = !DILocation(line: 3902, column: 2, scope: !1893)
!2725 = distinct !{!2725, !2054, !2726, !1794}
!2726 = !DILocation(line: 4148, column: 2, scope: !1894)
!2727 = !DILocation(line: 4149, column: 7, scope: !1927)
!2728 = !DILocation(line: 4149, column: 13, scope: !1927)
!2729 = !DILocation(line: 4149, column: 21, scope: !1927)
!2730 = !DILocation(line: 4149, column: 27, scope: !1927)
!2731 = !DILocation(line: 4149, column: 31, scope: !1927)
!2732 = !DILocation(line: 4149, column: 37, scope: !1927)
!2733 = !DILocation(line: 4149, column: 44, scope: !1927)
!2734 = !DILocation(line: 4149, column: 52, scope: !1927)
!2735 = !DILocation(line: 4149, column: 6, scope: !1895)
!2736 = !DILocation(line: 4149, column: 59, scope: !1927)
!2737 = !DILocation(line: 4150, column: 1, scope: !1926)
!2738 = !DILocation(line: 4155, column: 11, scope: !2739)
!2739 = distinct !DILexicalBlock(scope: !1926, file: !2, line: 4155, column: 10)
!2740 = !DILocation(line: 4155, column: 10, scope: !2739)
!2741 = !DILocation(line: 4155, column: 21, scope: !2739)
!2742 = !DILocation(line: 4155, column: 25, scope: !2739)
!2743 = !DILocation(line: 4155, column: 31, scope: !2739)
!2744 = !DILocation(line: 4155, column: 37, scope: !2739)
!2745 = !DILocation(line: 4155, column: 46, scope: !2739)
!2746 = !DILocation(line: 4156, column: 11, scope: !2739)
!2747 = !DILocation(line: 4156, column: 17, scope: !2739)
!2748 = !DILocation(line: 4156, column: 24, scope: !2739)
!2749 = !DILocation(line: 4156, column: 29, scope: !2739)
!2750 = !DILocation(line: 4155, column: 10, scope: !1926)
!2751 = !DILocation(line: 4157, column: 19, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2739, file: !2, line: 4156, column: 56)
!2753 = !DILocation(line: 4158, column: 7, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2752, file: !2, line: 4158, column: 7)
!2755 = !DILocation(line: 4158, column: 13, scope: !2754)
!2756 = !DILocation(line: 4158, column: 23, scope: !2754)
!2757 = !DILocation(line: 4158, column: 7, scope: !2752)
!2758 = !DILocation(line: 4159, column: 7, scope: !2754)
!2759 = !DILocation(line: 4159, column: 15, scope: !2754)
!2760 = !DILocation(line: 4159, column: 21, scope: !2754)
!2761 = !DILocation(line: 4160, column: 31, scope: !2752)
!2762 = !DILocation(line: 4160, column: 21, scope: !2752)
!2763 = !DILocation(line: 4160, column: 3, scope: !2752)
!2764 = !DILocation(line: 4160, column: 9, scope: !2752)
!2765 = !DILocation(line: 4160, column: 19, scope: !2752)
!2766 = !DILocation(line: 4161, column: 20, scope: !2752)
!2767 = !DILocation(line: 4161, column: 26, scope: !2752)
!2768 = !DILocation(line: 4161, column: 3, scope: !2752)
!2769 = !DILocation(line: 4161, column: 9, scope: !2752)
!2770 = !DILocation(line: 4161, column: 18, scope: !2752)
!2771 = !DILocation(line: 4162, column: 21, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2752, file: !2, line: 4162, column: 21)
!2773 = !DILocation(line: 4162, column: 27, scope: !2772)
!2774 = !DILocation(line: 4162, column: 33, scope: !2772)
!2775 = !DILocation(line: 4162, column: 21, scope: !2752)
!2776 = !DILocation(line: 4163, column: 28, scope: !2772)
!2777 = !DILocation(line: 4163, column: 34, scope: !2772)
!2778 = !DILocation(line: 4163, column: 45, scope: !2772)
!2779 = !DILocation(line: 4163, column: 51, scope: !2772)
!2780 = !DILocation(line: 4164, column: 28, scope: !2772)
!2781 = !DILocation(line: 4164, column: 34, scope: !2772)
!2782 = !DILocation(line: 4164, column: 40, scope: !2772)
!2783 = !DILocation(line: 4164, column: 51, scope: !2772)
!2784 = !DILocation(line: 4163, column: 21, scope: !2772)
!2785 = !DILocation(line: 4165, column: 6, scope: !2752)
!2786 = !DILocation(line: 4170, column: 6, scope: !1926)
!2787 = !DILocation(line: 4170, column: 12, scope: !1926)
!2788 = !DILocation(line: 4170, column: 24, scope: !1926)
!2789 = !DILocation(line: 4171, column: 27, scope: !1926)
!2790 = !DILocation(line: 4171, column: 6, scope: !1926)
!2791 = !DILocation(line: 4172, column: 11, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !1926, file: !2, line: 4172, column: 10)
!2793 = !DILocation(line: 4172, column: 17, scope: !2792)
!2794 = !DILocation(line: 4172, column: 28, scope: !2792)
!2795 = !DILocation(line: 4172, column: 38, scope: !2792)
!2796 = !DILocation(line: 4172, column: 42, scope: !2792)
!2797 = !DILocation(line: 4172, column: 48, scope: !2792)
!2798 = !DILocation(line: 4172, column: 55, scope: !2792)
!2799 = !DILocation(line: 4172, column: 10, scope: !1926)
!2800 = !DILocation(line: 4173, column: 11, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2792, file: !2, line: 4172, column: 62)
!2802 = !DILocation(line: 4173, column: 17, scope: !2801)
!2803 = !DILocation(line: 4173, column: 28, scope: !2801)
!2804 = !DILocation(line: 4173, column: 34, scope: !2801)
!2805 = !DILocation(line: 4173, column: 41, scope: !2801)
!2806 = !DILocation(line: 4173, column: 9, scope: !2801)
!2807 = !DILocation(line: 4174, column: 10, scope: !2801)
!2808 = !DILocation(line: 4174, column: 16, scope: !2801)
!2809 = !DILocation(line: 4174, column: 27, scope: !2801)
!2810 = !DILocation(line: 4174, column: 33, scope: !2801)
!2811 = !DILocation(line: 4174, column: 40, scope: !2801)
!2812 = !DILocation(line: 4174, column: 8, scope: !2801)
!2813 = !DILocation(line: 4178, column: 6, scope: !2801)
!2814 = !DILocation(line: 4179, column: 2, scope: !1926)
!2815 = !DILocation(line: 4180, column: 2, scope: !1895)
!2816 = distinct !{!2816, !2018, !2817, !1794}
!2817 = !DILocation(line: 4184, column: 5, scope: !1875)
!2818 = !DILocation(line: 4181, column: 1, scope: !1895)
!2819 = !DILocation(line: 4182, column: 18, scope: !1895)
!2820 = !DILocation(line: 4183, column: 2, scope: !1895)
!2821 = !DILocation(line: 4185, column: 9, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !1875, file: !2, line: 4185, column: 9)
!2823 = !DILocation(line: 4185, column: 15, scope: !2822)
!2824 = !DILocation(line: 4185, column: 22, scope: !2822)
!2825 = !DILocation(line: 4185, column: 9, scope: !1875)
!2826 = !DILocation(line: 4186, column: 16, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2822, file: !2, line: 4185, column: 28)
!2828 = !DILocation(line: 4186, column: 22, scope: !2827)
!2829 = !DILocation(line: 4186, column: 29, scope: !2827)
!2830 = !DILocation(line: 4186, column: 34, scope: !2827)
!2831 = !DILocation(line: 4186, column: 9, scope: !2827)
!2832 = !DILocation(line: 4193, column: 12, scope: !1875)
!2833 = !DILocation(line: 4193, column: 18, scope: !1875)
!2834 = !DILocation(line: 4193, column: 5, scope: !1875)
!2835 = !DILocation(line: 4194, column: 1, scope: !1875)
!2836 = distinct !DISubprogram(name: "xmlRegExecPushString2", scope: !2, file: !2, line: 4226, type: !2837, scopeLine: 4227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !2839)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{!1306, !1336, !1445, !1445, !1335}
!2839 = !{!2840, !2841, !2842, !2843, !2844, !2848, !2849, !2850, !2851}
!2840 = !DILocalVariable(name: "exec", arg: 1, scope: !2836, file: !2, line: 4226, type: !1336)
!2841 = !DILocalVariable(name: "value", arg: 2, scope: !2836, file: !2, line: 4226, type: !1445)
!2842 = !DILocalVariable(name: "value2", arg: 3, scope: !2836, file: !2, line: 4227, type: !1445)
!2843 = !DILocalVariable(name: "data", arg: 4, scope: !2836, file: !2, line: 4227, type: !1335)
!2844 = !DILocalVariable(name: "buf", scope: !2836, file: !2, line: 4228, type: !2845)
!2845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1352, size: 1200, elements: !2846)
!2846 = !{!2847}
!2847 = !DISubrange(count: 150)
!2848 = !DILocalVariable(name: "lenn", scope: !2836, file: !2, line: 4229, type: !1306)
!2849 = !DILocalVariable(name: "lenp", scope: !2836, file: !2, line: 4229, type: !1306)
!2850 = !DILocalVariable(name: "ret", scope: !2836, file: !2, line: 4229, type: !1306)
!2851 = !DILocalVariable(name: "str", scope: !2836, file: !2, line: 4230, type: !1351)
!2852 = !DILocation(line: 4226, column: 41, scope: !2836)
!2853 = !DILocation(line: 4226, column: 62, scope: !2836)
!2854 = !DILocation(line: 4227, column: 38, scope: !2836)
!2855 = !DILocation(line: 4227, column: 52, scope: !2836)
!2856 = !DILocation(line: 4228, column: 5, scope: !2836)
!2857 = !DILocation(line: 4228, column: 13, scope: !2836)
!2858 = !DILocation(line: 4229, column: 5, scope: !2836)
!2859 = !DILocation(line: 4229, column: 9, scope: !2836)
!2860 = !DILocation(line: 4229, column: 15, scope: !2836)
!2861 = !DILocation(line: 4229, column: 21, scope: !2836)
!2862 = !DILocation(line: 4230, column: 5, scope: !2836)
!2863 = !DILocation(line: 4230, column: 14, scope: !2836)
!2864 = !DILocation(line: 4232, column: 9, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2836, file: !2, line: 4232, column: 9)
!2866 = !DILocation(line: 4232, column: 14, scope: !2865)
!2867 = !DILocation(line: 4232, column: 9, scope: !2836)
!2868 = !DILocation(line: 4233, column: 2, scope: !2865)
!2869 = !DILocation(line: 4234, column: 9, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2836, file: !2, line: 4234, column: 9)
!2871 = !DILocation(line: 4234, column: 15, scope: !2870)
!2872 = !DILocation(line: 4234, column: 20, scope: !2870)
!2873 = !DILocation(line: 4234, column: 9, scope: !2836)
!2874 = !DILocation(line: 4235, column: 2, scope: !2870)
!2875 = !DILocation(line: 4236, column: 9, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2836, file: !2, line: 4236, column: 9)
!2877 = !DILocation(line: 4236, column: 15, scope: !2876)
!2878 = !DILocation(line: 4236, column: 22, scope: !2876)
!2879 = !DILocation(line: 4236, column: 9, scope: !2836)
!2880 = !DILocation(line: 4237, column: 9, scope: !2876)
!2881 = !DILocation(line: 4237, column: 15, scope: !2876)
!2882 = !DILocation(line: 4237, column: 2, scope: !2876)
!2883 = !DILocation(line: 4239, column: 9, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2836, file: !2, line: 4239, column: 9)
!2885 = !DILocation(line: 4239, column: 16, scope: !2884)
!2886 = !DILocation(line: 4239, column: 9, scope: !2836)
!2887 = !DILocation(line: 4240, column: 37, scope: !2884)
!2888 = !DILocation(line: 4240, column: 43, scope: !2884)
!2889 = !DILocation(line: 4240, column: 50, scope: !2884)
!2890 = !DILocation(line: 4240, column: 16, scope: !2884)
!2891 = !DILocation(line: 4240, column: 9, scope: !2884)
!2892 = !DILocation(line: 4242, column: 28, scope: !2836)
!2893 = !DILocation(line: 4242, column: 12, scope: !2836)
!2894 = !DILocation(line: 4242, column: 10, scope: !2836)
!2895 = !DILocation(line: 4243, column: 28, scope: !2836)
!2896 = !DILocation(line: 4243, column: 12, scope: !2836)
!2897 = !DILocation(line: 4243, column: 10, scope: !2836)
!2898 = !DILocation(line: 4245, column: 15, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2836, file: !2, line: 4245, column: 9)
!2900 = !DILocation(line: 4245, column: 22, scope: !2899)
!2901 = !DILocation(line: 4245, column: 20, scope: !2899)
!2902 = !DILocation(line: 4245, column: 27, scope: !2899)
!2903 = !DILocation(line: 4245, column: 13, scope: !2899)
!2904 = !DILocation(line: 4245, column: 9, scope: !2836)
!2905 = !DILocation(line: 4246, column: 20, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2899, file: !2, line: 4245, column: 32)
!2907 = !DILocation(line: 4246, column: 36, scope: !2906)
!2908 = !DILocation(line: 4246, column: 43, scope: !2906)
!2909 = !DILocation(line: 4246, column: 41, scope: !2906)
!2910 = !DILocation(line: 4246, column: 48, scope: !2906)
!2911 = !DILocation(line: 4246, column: 6, scope: !2906)
!2912 = !DILocation(line: 4247, column: 6, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2906, file: !2, line: 4247, column: 6)
!2914 = !DILocation(line: 4247, column: 10, scope: !2913)
!2915 = !DILocation(line: 4247, column: 6, scope: !2906)
!2916 = !DILocation(line: 4248, column: 6, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2913, file: !2, line: 4247, column: 19)
!2918 = !DILocation(line: 4248, column: 12, scope: !2917)
!2919 = !DILocation(line: 4248, column: 19, scope: !2917)
!2920 = !DILocation(line: 4249, column: 6, scope: !2917)
!2921 = !DILocation(line: 4251, column: 5, scope: !2906)
!2922 = !DILocation(line: 4252, column: 8, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2899, file: !2, line: 4251, column: 12)
!2924 = !DILocation(line: 4252, column: 6, scope: !2923)
!2925 = !DILocation(line: 4254, column: 13, scope: !2836)
!2926 = !DILocation(line: 4254, column: 21, scope: !2836)
!2927 = !DILocation(line: 4254, column: 28, scope: !2836)
!2928 = !DILocation(line: 4254, column: 5, scope: !2836)
!2929 = !DILocation(line: 4255, column: 5, scope: !2836)
!2930 = !DILocation(line: 4255, column: 9, scope: !2836)
!2931 = !DILocation(line: 4255, column: 15, scope: !2836)
!2932 = !{!1529, !1529, i64 0}
!2933 = !DILocation(line: 4256, column: 13, scope: !2836)
!2934 = !DILocation(line: 4256, column: 17, scope: !2836)
!2935 = !DILocation(line: 4256, column: 22, scope: !2836)
!2936 = !DILocation(line: 4256, column: 28, scope: !2836)
!2937 = !DILocation(line: 4256, column: 36, scope: !2836)
!2938 = !DILocation(line: 4256, column: 5, scope: !2836)
!2939 = !DILocation(line: 4257, column: 5, scope: !2836)
!2940 = !DILocation(line: 4257, column: 9, scope: !2836)
!2941 = !DILocation(line: 4257, column: 16, scope: !2836)
!2942 = !DILocation(line: 4257, column: 14, scope: !2836)
!2943 = !DILocation(line: 4257, column: 21, scope: !2836)
!2944 = !DILocation(line: 4257, column: 26, scope: !2836)
!2945 = !DILocation(line: 4259, column: 9, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2836, file: !2, line: 4259, column: 9)
!2947 = !DILocation(line: 4259, column: 15, scope: !2946)
!2948 = !DILocation(line: 4259, column: 21, scope: !2946)
!2949 = !DILocation(line: 4259, column: 29, scope: !2946)
!2950 = !DILocation(line: 4259, column: 9, scope: !2836)
!2951 = !DILocation(line: 4260, column: 32, scope: !2946)
!2952 = !DILocation(line: 4260, column: 38, scope: !2946)
!2953 = !DILocation(line: 4260, column: 44, scope: !2946)
!2954 = !DILocation(line: 4260, column: 50, scope: !2946)
!2955 = !DILocation(line: 4260, column: 55, scope: !2946)
!2956 = !DILocation(line: 4260, column: 8, scope: !2946)
!2957 = !DILocation(line: 4260, column: 6, scope: !2946)
!2958 = !DILocation(line: 4260, column: 2, scope: !2946)
!2959 = !DILocation(line: 4262, column: 44, scope: !2946)
!2960 = !DILocation(line: 4262, column: 50, scope: !2946)
!2961 = !DILocation(line: 4262, column: 55, scope: !2946)
!2962 = !DILocation(line: 4262, column: 15, scope: !2946)
!2963 = !DILocation(line: 4262, column: 13, scope: !2946)
!2964 = !DILocation(line: 4264, column: 9, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2836, file: !2, line: 4264, column: 9)
!2966 = !DILocation(line: 4264, column: 16, scope: !2965)
!2967 = !DILocation(line: 4264, column: 13, scope: !2965)
!2968 = !DILocation(line: 4264, column: 9, scope: !2836)
!2969 = !DILocation(line: 4265, column: 9, scope: !2965)
!2970 = !DILocation(line: 4265, column: 17, scope: !2965)
!2971 = !DILocation(line: 4266, column: 12, scope: !2836)
!2972 = !DILocation(line: 4266, column: 5, scope: !2836)
!2973 = !DILocation(line: 4267, column: 1, scope: !2836)
!2974 = !DISubprogram(name: "strlen", scope: !2975, file: !2975, line: 407, type: !2976, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2975 = !DIFile(filename: "/usr/include/string.h", directory: "", checksumkind: CSK_MD5, checksum: "f443da8025a0b7c1498fb6c554ec788d")
!2976 = !DISubroutineType(types: !2977)
!2977 = !{!1511, !1482}
!2978 = distinct !DISubprogram(name: "xmlRegCompactPushString", scope: !2, file: !2, line: 3765, type: !2979, scopeLine: 3768, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !2981)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!1306, !1336, !1345, !1445, !1335}
!2981 = !{!2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989}
!2982 = !DILocalVariable(name: "exec", arg: 1, scope: !2978, file: !2, line: 3765, type: !1336)
!2983 = !DILocalVariable(name: "comp", arg: 2, scope: !2978, file: !2, line: 3766, type: !1345)
!2984 = !DILocalVariable(name: "value", arg: 3, scope: !2978, file: !2, line: 3767, type: !1445)
!2985 = !DILocalVariable(name: "data", arg: 4, scope: !2978, file: !2, line: 3768, type: !1335)
!2986 = !DILocalVariable(name: "state", scope: !2978, file: !2, line: 3769, type: !1306)
!2987 = !DILocalVariable(name: "i", scope: !2978, file: !2, line: 3770, type: !1306)
!2988 = !DILocalVariable(name: "target", scope: !2978, file: !2, line: 3770, type: !1306)
!2989 = !DILabel(scope: !2978, name: "error", file: !2, line: 3823)
!2990 = !DILocation(line: 3765, column: 43, scope: !2978)
!2991 = !DILocation(line: 3766, column: 31, scope: !2978)
!2992 = !DILocation(line: 3767, column: 33, scope: !2978)
!2993 = !DILocation(line: 3768, column: 24, scope: !2978)
!2994 = !DILocation(line: 3769, column: 5, scope: !2978)
!2995 = !DILocation(line: 3769, column: 9, scope: !2978)
!2996 = !DILocation(line: 3769, column: 17, scope: !2978)
!2997 = !DILocation(line: 3769, column: 23, scope: !2978)
!2998 = !DILocation(line: 3770, column: 5, scope: !2978)
!2999 = !DILocation(line: 3770, column: 9, scope: !2978)
!3000 = !DILocation(line: 3770, column: 12, scope: !2978)
!3001 = !DILocation(line: 3772, column: 10, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2978, file: !2, line: 3772, column: 9)
!3003 = !DILocation(line: 3772, column: 15, scope: !3002)
!3004 = !DILocation(line: 3772, column: 24, scope: !3002)
!3005 = !DILocation(line: 3772, column: 28, scope: !3002)
!3006 = !DILocation(line: 3772, column: 34, scope: !3002)
!3007 = !DILocation(line: 3772, column: 42, scope: !3002)
!3008 = !DILocation(line: 3772, column: 51, scope: !3002)
!3009 = !DILocation(line: 3772, column: 55, scope: !3002)
!3010 = !DILocation(line: 3772, column: 61, scope: !3002)
!3011 = !{!1545, !1528, i64 96}
!3012 = !DILocation(line: 3772, column: 71, scope: !3002)
!3013 = !DILocation(line: 3772, column: 9, scope: !2978)
!3014 = !DILocation(line: 3773, column: 2, scope: !3002)
!3015 = !DILocation(line: 3775, column: 9, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !2978, file: !2, line: 3775, column: 9)
!3017 = !DILocation(line: 3775, column: 15, scope: !3016)
!3018 = !DILocation(line: 3775, column: 9, scope: !2978)
!3019 = !DILocation(line: 3779, column: 6, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3021, file: !2, line: 3779, column: 6)
!3021 = distinct !DILexicalBlock(scope: !3016, file: !2, line: 3775, column: 24)
!3022 = !DILocation(line: 3779, column: 12, scope: !3020)
!3023 = !DILocation(line: 3779, column: 20, scope: !3020)
!3024 = !DILocation(line: 3779, column: 29, scope: !3020)
!3025 = !DILocation(line: 3779, column: 35, scope: !3020)
!3026 = !{!1545, !1546, i64 88}
!3027 = !DILocation(line: 3779, column: 45, scope: !3020)
!3028 = !DILocation(line: 3779, column: 26, scope: !3020)
!3029 = !DILocation(line: 3779, column: 51, scope: !3020)
!3030 = !DILocation(line: 3779, column: 6, scope: !3021)
!3031 = !DILocation(line: 3781, column: 6, scope: !3020)
!3032 = !DILocation(line: 3782, column: 2, scope: !3021)
!3033 = !DILocation(line: 3792, column: 12, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !2978, file: !2, line: 3792, column: 5)
!3035 = !DILocation(line: 3792, column: 10, scope: !3034)
!3036 = !DILocation(line: 3792, column: 16, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3034, file: !2, line: 3792, column: 5)
!3038 = !DILocation(line: 3792, column: 20, scope: !3037)
!3039 = !DILocation(line: 3792, column: 26, scope: !3037)
!3040 = !DILocation(line: 3792, column: 18, scope: !3037)
!3041 = !DILocation(line: 3792, column: 5, scope: !3034)
!3042 = !DILocation(line: 3793, column: 11, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3037, file: !2, line: 3792, column: 41)
!3044 = !DILocation(line: 3793, column: 17, scope: !3043)
!3045 = !DILocation(line: 3793, column: 25, scope: !3043)
!3046 = !DILocation(line: 3793, column: 34, scope: !3043)
!3047 = !DILocation(line: 3793, column: 40, scope: !3043)
!3048 = !DILocation(line: 3793, column: 50, scope: !3043)
!3049 = !DILocation(line: 3793, column: 31, scope: !3043)
!3050 = !DILocation(line: 3793, column: 57, scope: !3043)
!3051 = !DILocation(line: 3793, column: 55, scope: !3043)
!3052 = !DILocation(line: 3793, column: 59, scope: !3043)
!3053 = !DILocation(line: 3793, column: 9, scope: !3043)
!3054 = !DILocation(line: 3794, column: 7, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3043, file: !2, line: 3794, column: 6)
!3056 = !DILocation(line: 3794, column: 14, scope: !3055)
!3057 = !DILocation(line: 3794, column: 19, scope: !3055)
!3058 = !DILocation(line: 3794, column: 23, scope: !3055)
!3059 = !DILocation(line: 3794, column: 33, scope: !3055)
!3060 = !DILocation(line: 3794, column: 39, scope: !3055)
!3061 = !{!1545, !1546, i64 64}
!3062 = !DILocation(line: 3794, column: 30, scope: !3055)
!3063 = !DILocation(line: 3794, column: 6, scope: !3043)
!3064 = !DILocation(line: 3795, column: 12, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3055, file: !2, line: 3794, column: 50)
!3066 = !DILocation(line: 3796, column: 33, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3065, file: !2, line: 3796, column: 10)
!3068 = !DILocation(line: 3796, column: 39, scope: !3067)
!3069 = !DILocation(line: 3796, column: 49, scope: !3067)
!3070 = !DILocation(line: 3796, column: 53, scope: !3067)
!3071 = !DILocation(line: 3796, column: 10, scope: !3067)
!3072 = !DILocation(line: 3796, column: 10, scope: !3065)
!3073 = !DILocation(line: 3797, column: 17, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3067, file: !2, line: 3796, column: 61)
!3075 = !DILocation(line: 3797, column: 3, scope: !3074)
!3076 = !DILocation(line: 3797, column: 9, scope: !3074)
!3077 = !DILocation(line: 3797, column: 15, scope: !3074)
!3078 = !DILocation(line: 3798, column: 8, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3074, file: !2, line: 3798, column: 7)
!3080 = !DILocation(line: 3798, column: 14, scope: !3079)
!3081 = !DILocation(line: 3798, column: 23, scope: !3079)
!3082 = !DILocation(line: 3798, column: 32, scope: !3079)
!3083 = !DILocation(line: 3798, column: 36, scope: !3079)
!3084 = !DILocation(line: 3798, column: 42, scope: !3079)
!3085 = !{!1545, !1528, i64 80}
!3086 = !DILocation(line: 3798, column: 52, scope: !3079)
!3087 = !DILocation(line: 3798, column: 7, scope: !3074)
!3088 = !DILocation(line: 3799, column: 7, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3079, file: !2, line: 3798, column: 62)
!3090 = !DILocation(line: 3799, column: 13, scope: !3089)
!3091 = !DILocation(line: 3799, column: 22, scope: !3089)
!3092 = !DILocation(line: 3799, column: 28, scope: !3089)
!3093 = !DILocation(line: 3799, column: 34, scope: !3089)
!3094 = !DILocation(line: 3800, column: 6, scope: !3089)
!3095 = !DILocation(line: 3800, column: 12, scope: !3089)
!3096 = !DILocation(line: 3800, column: 22, scope: !3089)
!3097 = !DILocation(line: 3800, column: 30, scope: !3089)
!3098 = !DILocation(line: 3800, column: 36, scope: !3089)
!3099 = !DILocation(line: 3800, column: 28, scope: !3089)
!3100 = !DILocation(line: 3800, column: 48, scope: !3089)
!3101 = !DILocation(line: 3800, column: 46, scope: !3089)
!3102 = !DILocation(line: 3800, column: 52, scope: !3089)
!3103 = !DILocation(line: 3801, column: 3, scope: !3089)
!3104 = !DILocation(line: 3805, column: 7, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3074, file: !2, line: 3805, column: 7)
!3106 = !DILocation(line: 3805, column: 13, scope: !3105)
!3107 = !DILocation(line: 3805, column: 21, scope: !3105)
!3108 = !DILocation(line: 3805, column: 31, scope: !3105)
!3109 = !DILocation(line: 3805, column: 37, scope: !3105)
!3110 = !DILocation(line: 3805, column: 47, scope: !3105)
!3111 = !DILocation(line: 3805, column: 28, scope: !3105)
!3112 = !DILocation(line: 3805, column: 53, scope: !3105)
!3113 = !DILocation(line: 3805, column: 7, scope: !3074)
!3114 = !DILocation(line: 3807, column: 7, scope: !3105)
!3115 = !DILocation(line: 3809, column: 7, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3074, file: !2, line: 3809, column: 7)
!3117 = !DILocation(line: 3809, column: 13, scope: !3116)
!3118 = !DILocation(line: 3809, column: 21, scope: !3116)
!3119 = !DILocation(line: 3809, column: 31, scope: !3116)
!3120 = !DILocation(line: 3809, column: 37, scope: !3116)
!3121 = !DILocation(line: 3809, column: 47, scope: !3116)
!3122 = !DILocation(line: 3809, column: 28, scope: !3116)
!3123 = !DILocation(line: 3809, column: 53, scope: !3116)
!3124 = !DILocation(line: 3809, column: 7, scope: !3074)
!3125 = !DILocation(line: 3811, column: 7, scope: !3116)
!3126 = !DILocation(line: 3812, column: 3, scope: !3074)
!3127 = !DILocation(line: 3814, column: 2, scope: !3065)
!3128 = !DILocation(line: 3815, column: 5, scope: !3043)
!3129 = !DILocation(line: 3792, column: 37, scope: !3037)
!3130 = !DILocation(line: 3792, column: 5, scope: !3037)
!3131 = distinct !{!3131, !3041, !3132, !1794}
!3132 = !DILocation(line: 3815, column: 5, scope: !3034)
!3133 = !DILocation(line: 3823, column: 1, scope: !2978)
!3134 = !DILocation(line: 3824, column: 9, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !2978, file: !2, line: 3824, column: 9)
!3136 = !DILocation(line: 3824, column: 15, scope: !3135)
!3137 = !DILocation(line: 3824, column: 25, scope: !3135)
!3138 = !DILocation(line: 3824, column: 9, scope: !2978)
!3139 = !DILocation(line: 3825, column: 9, scope: !3135)
!3140 = !DILocation(line: 3825, column: 17, scope: !3135)
!3141 = !DILocation(line: 3825, column: 23, scope: !3135)
!3142 = !DILocation(line: 3826, column: 33, scope: !2978)
!3143 = !DILocation(line: 3826, column: 23, scope: !2978)
!3144 = !DILocation(line: 3826, column: 5, scope: !2978)
!3145 = !DILocation(line: 3826, column: 11, scope: !2978)
!3146 = !DILocation(line: 3826, column: 21, scope: !2978)
!3147 = !DILocation(line: 3827, column: 24, scope: !2978)
!3148 = !DILocation(line: 3827, column: 5, scope: !2978)
!3149 = !DILocation(line: 3827, column: 11, scope: !2978)
!3150 = !DILocation(line: 3827, column: 22, scope: !2978)
!3151 = !DILocation(line: 3828, column: 5, scope: !2978)
!3152 = !DILocation(line: 3828, column: 11, scope: !2978)
!3153 = !DILocation(line: 3828, column: 18, scope: !2978)
!3154 = !DILocation(line: 3832, column: 5, scope: !2978)
!3155 = !DILocation(line: 3833, column: 1, scope: !2978)
!3156 = distinct !DISubprogram(name: "xmlRegExecNextValues", scope: !2, file: !2, line: 4447, type: !3157, scopeLine: 4448, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !3159)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{!1306, !1336, !1419, !1419, !1439, !1419}
!3159 = !{!3160, !3161, !3162, !3163, !3164}
!3160 = !DILocalVariable(name: "exec", arg: 1, scope: !3156, file: !2, line: 4447, type: !1336)
!3161 = !DILocalVariable(name: "nbval", arg: 2, scope: !3156, file: !2, line: 4447, type: !1419)
!3162 = !DILocalVariable(name: "nbneg", arg: 3, scope: !3156, file: !2, line: 4447, type: !1419)
!3163 = !DILocalVariable(name: "values", arg: 4, scope: !3156, file: !2, line: 4448, type: !1439)
!3164 = !DILocalVariable(name: "terminal", arg: 5, scope: !3156, file: !2, line: 4448, type: !1419)
!3165 = !DILocation(line: 4447, column: 40, scope: !3156)
!3166 = !DILocation(line: 4447, column: 51, scope: !3156)
!3167 = !DILocation(line: 4447, column: 63, scope: !3156)
!3168 = !DILocation(line: 4448, column: 32, scope: !3156)
!3169 = !DILocation(line: 4448, column: 45, scope: !3156)
!3170 = !DILocation(line: 4449, column: 32, scope: !3156)
!3171 = !DILocation(line: 4449, column: 41, scope: !3156)
!3172 = !DILocation(line: 4449, column: 48, scope: !3156)
!3173 = !DILocation(line: 4449, column: 55, scope: !3156)
!3174 = !DILocation(line: 4449, column: 63, scope: !3156)
!3175 = !DILocation(line: 4449, column: 12, scope: !3156)
!3176 = !DILocation(line: 4449, column: 5, scope: !3156)
!3177 = distinct !DISubprogram(name: "xmlRegExecGetValues", scope: !2, file: !2, line: 4284, type: !3178, scopeLine: 4286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !3180)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{!1306, !1336, !1306, !1419, !1419, !1439, !1419}
!3180 = !{!3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3192, !3193, !3194, !3195, !3197, !3198, !3199, !3200, !3208}
!3181 = !DILocalVariable(name: "exec", arg: 1, scope: !3177, file: !2, line: 4284, type: !1336)
!3182 = !DILocalVariable(name: "err", arg: 2, scope: !3177, file: !2, line: 4284, type: !1306)
!3183 = !DILocalVariable(name: "nbval", arg: 3, scope: !3177, file: !2, line: 4285, type: !1419)
!3184 = !DILocalVariable(name: "nbneg", arg: 4, scope: !3177, file: !2, line: 4285, type: !1419)
!3185 = !DILocalVariable(name: "values", arg: 5, scope: !3177, file: !2, line: 4286, type: !1439)
!3186 = !DILocalVariable(name: "terminal", arg: 6, scope: !3177, file: !2, line: 4286, type: !1419)
!3187 = !DILocalVariable(name: "maxval", scope: !3177, file: !2, line: 4287, type: !1306)
!3188 = !DILocalVariable(name: "nb", scope: !3177, file: !2, line: 4288, type: !1306)
!3189 = !DILocalVariable(name: "comp", scope: !3190, file: !2, line: 4298, type: !1345)
!3190 = distinct !DILexicalBlock(scope: !3191, file: !2, line: 4297, column: 64)
!3191 = distinct !DILexicalBlock(scope: !3177, file: !2, line: 4297, column: 9)
!3192 = !DILocalVariable(name: "target", scope: !3190, file: !2, line: 4299, type: !1306)
!3193 = !DILocalVariable(name: "i", scope: !3190, file: !2, line: 4299, type: !1306)
!3194 = !DILocalVariable(name: "state", scope: !3190, file: !2, line: 4299, type: !1306)
!3195 = !DILocalVariable(name: "transno", scope: !3196, file: !2, line: 4335, type: !1306)
!3196 = distinct !DILexicalBlock(scope: !3191, file: !2, line: 4334, column: 12)
!3197 = !DILocalVariable(name: "trans", scope: !3196, file: !2, line: 4336, type: !1884)
!3198 = !DILocalVariable(name: "atom", scope: !3196, file: !2, line: 4337, type: !1378)
!3199 = !DILocalVariable(name: "state", scope: !3196, file: !2, line: 4338, type: !1358)
!3200 = !DILocalVariable(name: "counter", scope: !3201, file: !2, line: 4370, type: !1899)
!3201 = distinct !DILexicalBlock(scope: !3202, file: !2, line: 4369, column: 38)
!3202 = distinct !DILexicalBlock(scope: !3203, file: !2, line: 4369, column: 17)
!3203 = distinct !DILexicalBlock(scope: !3204, file: !2, line: 4366, column: 17)
!3204 = distinct !DILexicalBlock(scope: !3205, file: !2, line: 4363, column: 10)
!3205 = distinct !DILexicalBlock(scope: !3206, file: !2, line: 4356, column: 18)
!3206 = distinct !DILexicalBlock(scope: !3207, file: !2, line: 4354, column: 2)
!3207 = distinct !DILexicalBlock(scope: !3196, file: !2, line: 4354, column: 2)
!3208 = !DILocalVariable(name: "count", scope: !3201, file: !2, line: 4371, type: !1306)
!3209 = !DILocation(line: 4284, column: 39, scope: !3177)
!3210 = !DILocation(line: 4284, column: 49, scope: !3177)
!3211 = !DILocation(line: 4285, column: 26, scope: !3177)
!3212 = !DILocation(line: 4285, column: 38, scope: !3177)
!3213 = !DILocation(line: 4286, column: 17, scope: !3177)
!3214 = !DILocation(line: 4286, column: 30, scope: !3177)
!3215 = !DILocation(line: 4287, column: 5, scope: !3177)
!3216 = !DILocation(line: 4287, column: 9, scope: !3177)
!3217 = !DILocation(line: 4288, column: 5, scope: !3177)
!3218 = !DILocation(line: 4288, column: 9, scope: !3177)
!3219 = !DILocation(line: 4290, column: 10, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3177, file: !2, line: 4290, column: 9)
!3221 = !DILocation(line: 4290, column: 15, scope: !3220)
!3222 = !DILocation(line: 4290, column: 24, scope: !3220)
!3223 = !DILocation(line: 4290, column: 28, scope: !3220)
!3224 = !DILocation(line: 4290, column: 34, scope: !3220)
!3225 = !DILocation(line: 4290, column: 43, scope: !3220)
!3226 = !DILocation(line: 4290, column: 47, scope: !3220)
!3227 = !DILocation(line: 4290, column: 53, scope: !3220)
!3228 = !DILocation(line: 4290, column: 62, scope: !3220)
!3229 = !DILocation(line: 4291, column: 10, scope: !3220)
!3230 = !DILocation(line: 4291, column: 17, scope: !3220)
!3231 = !DILocation(line: 4291, column: 26, scope: !3220)
!3232 = !DILocation(line: 4291, column: 31, scope: !3220)
!3233 = !DILocation(line: 4291, column: 30, scope: !3220)
!3234 = !DILocation(line: 4291, column: 37, scope: !3220)
!3235 = !DILocation(line: 4290, column: 9, scope: !3177)
!3236 = !DILocation(line: 4292, column: 9, scope: !3220)
!3237 = !DILocation(line: 4294, column: 15, scope: !3177)
!3238 = !DILocation(line: 4294, column: 14, scope: !3177)
!3239 = !DILocation(line: 4294, column: 12, scope: !3177)
!3240 = !DILocation(line: 4295, column: 6, scope: !3177)
!3241 = !DILocation(line: 4295, column: 12, scope: !3177)
!3242 = !DILocation(line: 4296, column: 6, scope: !3177)
!3243 = !DILocation(line: 4296, column: 12, scope: !3177)
!3244 = !DILocation(line: 4297, column: 10, scope: !3191)
!3245 = !DILocation(line: 4297, column: 16, scope: !3191)
!3246 = !DILocation(line: 4297, column: 21, scope: !3191)
!3247 = !DILocation(line: 4297, column: 30, scope: !3191)
!3248 = !DILocation(line: 4297, column: 34, scope: !3191)
!3249 = !DILocation(line: 4297, column: 40, scope: !3191)
!3250 = !DILocation(line: 4297, column: 46, scope: !3191)
!3251 = !DILocation(line: 4297, column: 54, scope: !3191)
!3252 = !DILocation(line: 4297, column: 9, scope: !3177)
!3253 = !DILocation(line: 4298, column: 9, scope: !3190)
!3254 = !DILocation(line: 4298, column: 22, scope: !3190)
!3255 = !DILocation(line: 4299, column: 2, scope: !3190)
!3256 = !DILocation(line: 4299, column: 6, scope: !3190)
!3257 = !DILocation(line: 4299, column: 14, scope: !3190)
!3258 = !DILocation(line: 4299, column: 17, scope: !3190)
!3259 = !DILocation(line: 4301, column: 16, scope: !3190)
!3260 = !DILocation(line: 4301, column: 22, scope: !3190)
!3261 = !DILocation(line: 4301, column: 14, scope: !3190)
!3262 = !DILocation(line: 4303, column: 6, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3190, file: !2, line: 4303, column: 6)
!3264 = !DILocation(line: 4303, column: 6, scope: !3190)
!3265 = !DILocation(line: 4304, column: 10, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3267, file: !2, line: 4304, column: 10)
!3267 = distinct !DILexicalBlock(scope: !3263, file: !2, line: 4303, column: 11)
!3268 = !DILocation(line: 4304, column: 16, scope: !3266)
!3269 = !DILocation(line: 4304, column: 27, scope: !3266)
!3270 = !DILocation(line: 4304, column: 10, scope: !3267)
!3271 = !DILocation(line: 4304, column: 34, scope: !3266)
!3272 = !DILocation(line: 4305, column: 14, scope: !3267)
!3273 = !DILocation(line: 4305, column: 20, scope: !3267)
!3274 = !DILocation(line: 4305, column: 12, scope: !3267)
!3275 = !DILocation(line: 4306, column: 2, scope: !3267)
!3276 = !DILocation(line: 4307, column: 14, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3263, file: !2, line: 4306, column: 9)
!3278 = !DILocation(line: 4307, column: 20, scope: !3277)
!3279 = !DILocation(line: 4307, column: 12, scope: !3277)
!3280 = !DILocation(line: 4309, column: 6, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3190, file: !2, line: 4309, column: 6)
!3282 = !DILocation(line: 4309, column: 15, scope: !3281)
!3283 = !DILocation(line: 4309, column: 6, scope: !3190)
!3284 = !DILocation(line: 4310, column: 10, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3286, file: !2, line: 4310, column: 10)
!3286 = distinct !DILexicalBlock(scope: !3281, file: !2, line: 4309, column: 24)
!3287 = !DILocation(line: 4310, column: 16, scope: !3285)
!3288 = !DILocation(line: 4310, column: 24, scope: !3285)
!3289 = !DILocation(line: 4310, column: 33, scope: !3285)
!3290 = !DILocation(line: 4310, column: 39, scope: !3285)
!3291 = !DILocation(line: 4310, column: 49, scope: !3285)
!3292 = !DILocation(line: 4310, column: 30, scope: !3285)
!3293 = !DILocation(line: 4310, column: 55, scope: !3285)
!3294 = !DILocation(line: 4310, column: 10, scope: !3286)
!3295 = !DILocation(line: 4312, column: 4, scope: !3285)
!3296 = !DILocation(line: 4312, column: 13, scope: !3285)
!3297 = !DILocation(line: 4312, column: 3, scope: !3285)
!3298 = !DILocation(line: 4314, column: 4, scope: !3285)
!3299 = !DILocation(line: 4314, column: 13, scope: !3285)
!3300 = !DILocation(line: 4315, column: 2, scope: !3286)
!3301 = !DILocation(line: 4316, column: 9, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3190, file: !2, line: 4316, column: 2)
!3303 = !DILocation(line: 4316, column: 7, scope: !3302)
!3304 = !DILocation(line: 4316, column: 14, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3302, file: !2, line: 4316, column: 2)
!3306 = !DILocation(line: 4316, column: 18, scope: !3305)
!3307 = !DILocation(line: 4316, column: 24, scope: !3305)
!3308 = !DILocation(line: 4316, column: 16, scope: !3305)
!3309 = !DILocation(line: 4316, column: 35, scope: !3305)
!3310 = !DILocation(line: 4316, column: 39, scope: !3305)
!3311 = !DILocation(line: 4316, column: 44, scope: !3305)
!3312 = !DILocation(line: 4316, column: 42, scope: !3305)
!3313 = !DILocation(line: 0, scope: !3305)
!3314 = !DILocation(line: 4316, column: 2, scope: !3302)
!3315 = !DILocation(line: 4317, column: 15, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3305, file: !2, line: 4316, column: 57)
!3317 = !DILocation(line: 4317, column: 21, scope: !3316)
!3318 = !DILocation(line: 4317, column: 29, scope: !3316)
!3319 = !DILocation(line: 4317, column: 38, scope: !3316)
!3320 = !DILocation(line: 4317, column: 44, scope: !3316)
!3321 = !DILocation(line: 4317, column: 54, scope: !3316)
!3322 = !DILocation(line: 4317, column: 35, scope: !3316)
!3323 = !DILocation(line: 4317, column: 61, scope: !3316)
!3324 = !DILocation(line: 4317, column: 59, scope: !3316)
!3325 = !DILocation(line: 4317, column: 63, scope: !3316)
!3326 = !DILocation(line: 4317, column: 13, scope: !3316)
!3327 = !DILocation(line: 4318, column: 11, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3316, file: !2, line: 4318, column: 10)
!3329 = !DILocation(line: 4318, column: 18, scope: !3328)
!3330 = !DILocation(line: 4318, column: 23, scope: !3328)
!3331 = !DILocation(line: 4318, column: 27, scope: !3328)
!3332 = !DILocation(line: 4318, column: 37, scope: !3328)
!3333 = !DILocation(line: 4318, column: 43, scope: !3328)
!3334 = !DILocation(line: 4318, column: 34, scope: !3328)
!3335 = !DILocation(line: 4318, column: 53, scope: !3328)
!3336 = !DILocation(line: 4319, column: 11, scope: !3328)
!3337 = !DILocation(line: 4319, column: 17, scope: !3328)
!3338 = !DILocation(line: 4319, column: 26, scope: !3328)
!3339 = !DILocation(line: 4319, column: 33, scope: !3328)
!3340 = !DILocation(line: 4319, column: 41, scope: !3328)
!3341 = !DILocation(line: 4319, column: 47, scope: !3328)
!3342 = !DILocation(line: 4319, column: 57, scope: !3328)
!3343 = !DILocation(line: 4319, column: 38, scope: !3328)
!3344 = !DILocation(line: 4319, column: 63, scope: !3328)
!3345 = !DILocation(line: 4318, column: 10, scope: !3316)
!3346 = !DILocation(line: 4321, column: 25, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3328, file: !2, line: 4320, column: 28)
!3348 = !DILocation(line: 4321, column: 31, scope: !3347)
!3349 = !DILocation(line: 4321, column: 41, scope: !3347)
!3350 = !DILocation(line: 4321, column: 10, scope: !3347)
!3351 = !DILocation(line: 4321, column: 19, scope: !3347)
!3352 = !DILocation(line: 4321, column: 23, scope: !3347)
!3353 = !DILocation(line: 4322, column: 5, scope: !3347)
!3354 = !DILocation(line: 4322, column: 11, scope: !3347)
!3355 = !DILocation(line: 4323, column: 6, scope: !3347)
!3356 = !DILocation(line: 4324, column: 2, scope: !3316)
!3357 = !DILocation(line: 4316, column: 53, scope: !3305)
!3358 = !DILocation(line: 4316, column: 2, scope: !3305)
!3359 = distinct !{!3359, !3314, !3360, !1794}
!3360 = !DILocation(line: 4324, column: 2, scope: !3302)
!3361 = !DILocation(line: 4325, column: 9, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3190, file: !2, line: 4325, column: 2)
!3363 = !DILocation(line: 4325, column: 7, scope: !3362)
!3364 = !DILocation(line: 4325, column: 14, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3362, file: !2, line: 4325, column: 2)
!3366 = !DILocation(line: 4325, column: 18, scope: !3365)
!3367 = !DILocation(line: 4325, column: 24, scope: !3365)
!3368 = !DILocation(line: 4325, column: 16, scope: !3365)
!3369 = !DILocation(line: 4325, column: 35, scope: !3365)
!3370 = !DILocation(line: 4325, column: 39, scope: !3365)
!3371 = !DILocation(line: 4325, column: 44, scope: !3365)
!3372 = !DILocation(line: 4325, column: 42, scope: !3365)
!3373 = !DILocation(line: 0, scope: !3365)
!3374 = !DILocation(line: 4325, column: 2, scope: !3362)
!3375 = !DILocation(line: 4326, column: 15, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3365, file: !2, line: 4325, column: 57)
!3377 = !DILocation(line: 4326, column: 21, scope: !3376)
!3378 = !DILocation(line: 4326, column: 29, scope: !3376)
!3379 = !DILocation(line: 4326, column: 38, scope: !3376)
!3380 = !DILocation(line: 4326, column: 44, scope: !3376)
!3381 = !DILocation(line: 4326, column: 54, scope: !3376)
!3382 = !DILocation(line: 4326, column: 35, scope: !3376)
!3383 = !DILocation(line: 4326, column: 61, scope: !3376)
!3384 = !DILocation(line: 4326, column: 59, scope: !3376)
!3385 = !DILocation(line: 4326, column: 63, scope: !3376)
!3386 = !DILocation(line: 4326, column: 13, scope: !3376)
!3387 = !DILocation(line: 4327, column: 11, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3376, file: !2, line: 4327, column: 10)
!3389 = !DILocation(line: 4327, column: 18, scope: !3388)
!3390 = !DILocation(line: 4327, column: 23, scope: !3388)
!3391 = !DILocation(line: 4327, column: 27, scope: !3388)
!3392 = !DILocation(line: 4327, column: 37, scope: !3388)
!3393 = !DILocation(line: 4327, column: 43, scope: !3388)
!3394 = !DILocation(line: 4327, column: 34, scope: !3388)
!3395 = !DILocation(line: 4327, column: 53, scope: !3388)
!3396 = !DILocation(line: 4328, column: 11, scope: !3388)
!3397 = !DILocation(line: 4328, column: 17, scope: !3388)
!3398 = !DILocation(line: 4328, column: 26, scope: !3388)
!3399 = !DILocation(line: 4328, column: 33, scope: !3388)
!3400 = !DILocation(line: 4328, column: 41, scope: !3388)
!3401 = !DILocation(line: 4328, column: 47, scope: !3388)
!3402 = !DILocation(line: 4328, column: 57, scope: !3388)
!3403 = !DILocation(line: 4328, column: 38, scope: !3388)
!3404 = !DILocation(line: 4328, column: 63, scope: !3388)
!3405 = !DILocation(line: 4327, column: 10, scope: !3376)
!3406 = !DILocation(line: 4330, column: 25, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3388, file: !2, line: 4329, column: 28)
!3408 = !DILocation(line: 4330, column: 31, scope: !3407)
!3409 = !DILocation(line: 4330, column: 41, scope: !3407)
!3410 = !DILocation(line: 4330, column: 10, scope: !3407)
!3411 = !DILocation(line: 4330, column: 19, scope: !3407)
!3412 = !DILocation(line: 4330, column: 23, scope: !3407)
!3413 = !DILocation(line: 4331, column: 5, scope: !3407)
!3414 = !DILocation(line: 4331, column: 11, scope: !3407)
!3415 = !DILocation(line: 4332, column: 6, scope: !3407)
!3416 = !DILocation(line: 4333, column: 2, scope: !3376)
!3417 = !DILocation(line: 4325, column: 53, scope: !3365)
!3418 = !DILocation(line: 4325, column: 2, scope: !3365)
!3419 = distinct !{!3419, !3374, !3420, !1794}
!3420 = !DILocation(line: 4333, column: 2, scope: !3362)
!3421 = !DILocation(line: 4334, column: 5, scope: !3191)
!3422 = !DILocation(line: 4334, column: 5, scope: !3190)
!3423 = !DILocation(line: 4335, column: 9, scope: !3196)
!3424 = !DILocation(line: 4335, column: 13, scope: !3196)
!3425 = !DILocation(line: 4336, column: 2, scope: !3196)
!3426 = !DILocation(line: 4336, column: 17, scope: !3196)
!3427 = !DILocation(line: 4337, column: 2, scope: !3196)
!3428 = !DILocation(line: 4337, column: 16, scope: !3196)
!3429 = !DILocation(line: 4338, column: 2, scope: !3196)
!3430 = !DILocation(line: 4338, column: 17, scope: !3196)
!3431 = !DILocation(line: 4340, column: 6, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3196, file: !2, line: 4340, column: 6)
!3433 = !DILocation(line: 4340, column: 15, scope: !3432)
!3434 = !DILocation(line: 4340, column: 6, scope: !3196)
!3435 = !DILocation(line: 4341, column: 10, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !2, line: 4341, column: 10)
!3437 = distinct !DILexicalBlock(scope: !3432, file: !2, line: 4340, column: 24)
!3438 = !DILocation(line: 4341, column: 16, scope: !3436)
!3439 = !DILocation(line: 4341, column: 23, scope: !3436)
!3440 = !DILocation(line: 4341, column: 28, scope: !3436)
!3441 = !DILocation(line: 4341, column: 10, scope: !3437)
!3442 = !DILocation(line: 4342, column: 4, scope: !3436)
!3443 = !DILocation(line: 4342, column: 13, scope: !3436)
!3444 = !DILocation(line: 4342, column: 3, scope: !3436)
!3445 = !DILocation(line: 4344, column: 4, scope: !3436)
!3446 = !DILocation(line: 4344, column: 13, scope: !3436)
!3447 = !DILocation(line: 4345, column: 2, scope: !3437)
!3448 = !DILocation(line: 4347, column: 6, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3196, file: !2, line: 4347, column: 6)
!3450 = !DILocation(line: 4347, column: 6, scope: !3196)
!3451 = !DILocation(line: 4348, column: 10, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !2, line: 4348, column: 10)
!3453 = distinct !DILexicalBlock(scope: !3449, file: !2, line: 4347, column: 11)
!3454 = !DILocation(line: 4348, column: 16, scope: !3452)
!3455 = !DILocation(line: 4348, column: 25, scope: !3452)
!3456 = !DILocation(line: 4348, column: 10, scope: !3453)
!3457 = !DILocation(line: 4348, column: 34, scope: !3452)
!3458 = !DILocation(line: 4349, column: 14, scope: !3453)
!3459 = !DILocation(line: 4349, column: 20, scope: !3453)
!3460 = !DILocation(line: 4349, column: 12, scope: !3453)
!3461 = !DILocation(line: 4350, column: 2, scope: !3453)
!3462 = !DILocation(line: 4351, column: 10, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !2, line: 4351, column: 10)
!3464 = distinct !DILexicalBlock(scope: !3449, file: !2, line: 4350, column: 9)
!3465 = !DILocation(line: 4351, column: 16, scope: !3463)
!3466 = !DILocation(line: 4351, column: 22, scope: !3463)
!3467 = !DILocation(line: 4351, column: 10, scope: !3464)
!3468 = !DILocation(line: 4351, column: 31, scope: !3463)
!3469 = !DILocation(line: 4352, column: 14, scope: !3464)
!3470 = !DILocation(line: 4352, column: 20, scope: !3464)
!3471 = !DILocation(line: 4352, column: 12, scope: !3464)
!3472 = !DILocation(line: 4354, column: 15, scope: !3207)
!3473 = !DILocation(line: 4354, column: 7, scope: !3207)
!3474 = !DILocation(line: 4355, column: 8, scope: !3206)
!3475 = !DILocation(line: 4355, column: 18, scope: !3206)
!3476 = !DILocation(line: 4355, column: 25, scope: !3206)
!3477 = !DILocation(line: 4355, column: 16, scope: !3206)
!3478 = !DILocation(line: 4355, column: 34, scope: !3206)
!3479 = !DILocation(line: 4355, column: 38, scope: !3206)
!3480 = !DILocation(line: 4355, column: 43, scope: !3206)
!3481 = !DILocation(line: 4355, column: 41, scope: !3206)
!3482 = !DILocation(line: 0, scope: !3206)
!3483 = !DILocation(line: 4354, column: 2, scope: !3207)
!3484 = !DILocation(line: 4357, column: 15, scope: !3205)
!3485 = !DILocation(line: 4357, column: 22, scope: !3205)
!3486 = !DILocation(line: 4357, column: 28, scope: !3205)
!3487 = !DILocation(line: 4357, column: 12, scope: !3205)
!3488 = !DILocation(line: 4358, column: 10, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3205, file: !2, line: 4358, column: 10)
!3490 = !DILocation(line: 4358, column: 17, scope: !3489)
!3491 = !DILocation(line: 4358, column: 20, scope: !3489)
!3492 = !DILocation(line: 4358, column: 10, scope: !3205)
!3493 = !DILocation(line: 4359, column: 3, scope: !3489)
!3494 = !DILocation(line: 4360, column: 13, scope: !3205)
!3495 = !DILocation(line: 4360, column: 20, scope: !3205)
!3496 = !DILocation(line: 4360, column: 11, scope: !3205)
!3497 = !DILocation(line: 4361, column: 11, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3205, file: !2, line: 4361, column: 10)
!3499 = !DILocation(line: 4361, column: 16, scope: !3498)
!3500 = !DILocation(line: 4361, column: 25, scope: !3498)
!3501 = !DILocation(line: 4361, column: 29, scope: !3498)
!3502 = !DILocation(line: 4361, column: 35, scope: !3498)
!3503 = !DILocation(line: 4361, column: 42, scope: !3498)
!3504 = !DILocation(line: 4361, column: 10, scope: !3205)
!3505 = !DILocation(line: 4362, column: 3, scope: !3498)
!3506 = !DILocation(line: 4363, column: 10, scope: !3204)
!3507 = !DILocation(line: 4363, column: 17, scope: !3204)
!3508 = !DILocation(line: 4363, column: 23, scope: !3204)
!3509 = !DILocation(line: 4363, column: 10, scope: !3205)
!3510 = !DILocation(line: 4365, column: 10, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3204, file: !2, line: 4363, column: 50)
!3512 = !DILocation(line: 4366, column: 6, scope: !3511)
!3513 = !DILocation(line: 4366, column: 17, scope: !3203)
!3514 = !DILocation(line: 4366, column: 24, scope: !3203)
!3515 = !DILocation(line: 4366, column: 30, scope: !3203)
!3516 = !DILocation(line: 4366, column: 17, scope: !3204)
!3517 = !DILocation(line: 4368, column: 10, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3203, file: !2, line: 4366, column: 53)
!3519 = !DILocation(line: 4369, column: 6, scope: !3518)
!3520 = !DILocation(line: 4369, column: 17, scope: !3202)
!3521 = !DILocation(line: 4369, column: 24, scope: !3202)
!3522 = !DILocation(line: 4369, column: 32, scope: !3202)
!3523 = !DILocation(line: 4369, column: 17, scope: !3203)
!3524 = !DILocation(line: 4370, column: 3, scope: !3201)
!3525 = !DILocation(line: 4370, column: 20, scope: !3201)
!3526 = !DILocation(line: 4371, column: 3, scope: !3201)
!3527 = !DILocation(line: 4371, column: 7, scope: !3201)
!3528 = !DILocation(line: 4373, column: 7, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3201, file: !2, line: 4373, column: 7)
!3530 = !DILocation(line: 4373, column: 7, scope: !3201)
!3531 = !DILocation(line: 4374, column: 15, scope: !3529)
!3532 = !DILocation(line: 4374, column: 21, scope: !3529)
!3533 = !DILocation(line: 4374, column: 31, scope: !3529)
!3534 = !DILocation(line: 4374, column: 38, scope: !3529)
!3535 = !DILocation(line: 4374, column: 13, scope: !3529)
!3536 = !DILocation(line: 4374, column: 7, scope: !3529)
!3537 = !DILocation(line: 4376, column: 15, scope: !3529)
!3538 = !DILocation(line: 4376, column: 21, scope: !3529)
!3539 = !DILocation(line: 4376, column: 28, scope: !3529)
!3540 = !DILocation(line: 4376, column: 35, scope: !3529)
!3541 = !DILocation(line: 4376, column: 13, scope: !3529)
!3542 = !DILocation(line: 4377, column: 7, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3201, file: !2, line: 4377, column: 7)
!3544 = !DILocation(line: 4377, column: 13, scope: !3543)
!3545 = !DILocation(line: 4377, column: 18, scope: !3543)
!3546 = !DILocation(line: 4377, column: 7, scope: !3201)
!3547 = !DILocation(line: 4378, column: 18, scope: !3543)
!3548 = !DILocation(line: 4378, column: 24, scope: !3543)
!3549 = !DILocation(line: 4378, column: 30, scope: !3543)
!3550 = !DILocation(line: 4378, column: 39, scope: !3543)
!3551 = !DILocation(line: 4378, column: 46, scope: !3543)
!3552 = !DILocation(line: 4378, column: 15, scope: !3543)
!3553 = !DILocation(line: 4378, column: 7, scope: !3543)
!3554 = !DILocation(line: 4379, column: 8, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3201, file: !2, line: 4379, column: 7)
!3556 = !DILocation(line: 4379, column: 16, scope: !3555)
!3557 = !DILocation(line: 4379, column: 25, scope: !3555)
!3558 = !DILocation(line: 4379, column: 29, scope: !3555)
!3559 = !DILocation(line: 4379, column: 37, scope: !3555)
!3560 = !DILocation(line: 4379, column: 46, scope: !3555)
!3561 = !DILocation(line: 4379, column: 35, scope: !3555)
!3562 = !DILocation(line: 4379, column: 7, scope: !3201)
!3563 = !DILocation(line: 4380, column: 11, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !2, line: 4380, column: 11)
!3565 = distinct !DILexicalBlock(scope: !3555, file: !2, line: 4379, column: 52)
!3566 = !DILocation(line: 4380, column: 17, scope: !3564)
!3567 = !DILocation(line: 4380, column: 11, scope: !3565)
!3568 = !DILocation(line: 4381, column: 31, scope: !3564)
!3569 = !DILocation(line: 4381, column: 37, scope: !3564)
!3570 = !{!2160, !1528, i64 32}
!3571 = !DILocation(line: 4381, column: 4, scope: !3564)
!3572 = !DILocation(line: 4381, column: 13, scope: !3564)
!3573 = !DILocation(line: 4381, column: 17, scope: !3564)
!3574 = !DILocation(line: 4383, column: 31, scope: !3564)
!3575 = !DILocation(line: 4383, column: 37, scope: !3564)
!3576 = !DILocation(line: 4383, column: 4, scope: !3564)
!3577 = !DILocation(line: 4383, column: 13, scope: !3564)
!3578 = !DILocation(line: 4383, column: 17, scope: !3564)
!3579 = !DILocation(line: 4384, column: 9, scope: !3565)
!3580 = !DILocation(line: 4384, column: 15, scope: !3565)
!3581 = !DILocation(line: 4385, column: 3, scope: !3565)
!3582 = !DILocation(line: 4386, column: 6, scope: !3202)
!3583 = !DILocation(line: 4386, column: 6, scope: !3201)
!3584 = !DILocation(line: 4387, column: 22, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3586, file: !2, line: 4387, column: 21)
!3586 = distinct !DILexicalBlock(scope: !3202, file: !2, line: 4386, column: 13)
!3587 = !DILocation(line: 4387, column: 28, scope: !3585)
!3588 = !DILocation(line: 4387, column: 33, scope: !3585)
!3589 = !DILocation(line: 4387, column: 42, scope: !3585)
!3590 = !DILocation(line: 4387, column: 46, scope: !3585)
!3591 = !DILocation(line: 4387, column: 52, scope: !3585)
!3592 = !DILocation(line: 4387, column: 58, scope: !3585)
!3593 = !DILocation(line: 4387, column: 65, scope: !3585)
!3594 = !DILocation(line: 4387, column: 72, scope: !3585)
!3595 = !DILocation(line: 4387, column: 76, scope: !3585)
!3596 = !DILocation(line: 4387, column: 85, scope: !3585)
!3597 = !DILocation(line: 4388, column: 8, scope: !3585)
!3598 = !DILocation(line: 4388, column: 14, scope: !3585)
!3599 = !DILocation(line: 4388, column: 20, scope: !3585)
!3600 = !DILocation(line: 4388, column: 27, scope: !3585)
!3601 = !DILocation(line: 4388, column: 34, scope: !3585)
!3602 = !DILocation(line: 4388, column: 39, scope: !3585)
!3603 = !DILocation(line: 4388, column: 44, scope: !3585)
!3604 = !DILocation(line: 4387, column: 21, scope: !3586)
!3605 = !DILocation(line: 4390, column: 11, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !2, line: 4390, column: 11)
!3607 = distinct !DILexicalBlock(scope: !3585, file: !2, line: 4389, column: 32)
!3608 = !DILocation(line: 4390, column: 17, scope: !3606)
!3609 = !DILocation(line: 4390, column: 11, scope: !3607)
!3610 = !DILocation(line: 4391, column: 31, scope: !3606)
!3611 = !DILocation(line: 4391, column: 37, scope: !3606)
!3612 = !DILocation(line: 4391, column: 4, scope: !3606)
!3613 = !DILocation(line: 4391, column: 13, scope: !3606)
!3614 = !DILocation(line: 4391, column: 17, scope: !3606)
!3615 = !DILocation(line: 4393, column: 31, scope: !3606)
!3616 = !DILocation(line: 4393, column: 37, scope: !3606)
!3617 = !DILocation(line: 4393, column: 4, scope: !3606)
!3618 = !DILocation(line: 4393, column: 13, scope: !3606)
!3619 = !DILocation(line: 4393, column: 17, scope: !3606)
!3620 = !DILocation(line: 4394, column: 9, scope: !3607)
!3621 = !DILocation(line: 4394, column: 15, scope: !3607)
!3622 = !DILocation(line: 4395, column: 3, scope: !3607)
!3623 = !DILocation(line: 4397, column: 2, scope: !3205)
!3624 = !DILocation(line: 4356, column: 14, scope: !3206)
!3625 = !DILocation(line: 4354, column: 2, scope: !3206)
!3626 = distinct !{!3626, !3483, !3627, !1794}
!3627 = !DILocation(line: 4397, column: 2, scope: !3207)
!3628 = !DILocation(line: 4398, column: 15, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3196, file: !2, line: 4398, column: 2)
!3630 = !DILocation(line: 4398, column: 7, scope: !3629)
!3631 = !DILocation(line: 4399, column: 8, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3629, file: !2, line: 4398, column: 2)
!3633 = !DILocation(line: 4399, column: 18, scope: !3632)
!3634 = !DILocation(line: 4399, column: 25, scope: !3632)
!3635 = !DILocation(line: 4399, column: 16, scope: !3632)
!3636 = !DILocation(line: 4399, column: 34, scope: !3632)
!3637 = !DILocation(line: 4399, column: 38, scope: !3632)
!3638 = !DILocation(line: 4399, column: 43, scope: !3632)
!3639 = !DILocation(line: 4399, column: 41, scope: !3632)
!3640 = !DILocation(line: 0, scope: !3632)
!3641 = !DILocation(line: 4398, column: 2, scope: !3629)
!3642 = !DILocation(line: 4401, column: 15, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3632, file: !2, line: 4400, column: 18)
!3644 = !DILocation(line: 4401, column: 22, scope: !3643)
!3645 = !DILocation(line: 4401, column: 28, scope: !3643)
!3646 = !DILocation(line: 4401, column: 12, scope: !3643)
!3647 = !DILocation(line: 4402, column: 10, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3643, file: !2, line: 4402, column: 10)
!3649 = !DILocation(line: 4402, column: 17, scope: !3648)
!3650 = !DILocation(line: 4402, column: 20, scope: !3648)
!3651 = !DILocation(line: 4402, column: 10, scope: !3643)
!3652 = !DILocation(line: 4403, column: 3, scope: !3648)
!3653 = !DILocation(line: 4404, column: 13, scope: !3643)
!3654 = !DILocation(line: 4404, column: 20, scope: !3643)
!3655 = !DILocation(line: 4404, column: 11, scope: !3643)
!3656 = !DILocation(line: 4405, column: 11, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3643, file: !2, line: 4405, column: 10)
!3658 = !DILocation(line: 4405, column: 16, scope: !3657)
!3659 = !DILocation(line: 4405, column: 25, scope: !3657)
!3660 = !DILocation(line: 4405, column: 29, scope: !3657)
!3661 = !DILocation(line: 4405, column: 35, scope: !3657)
!3662 = !DILocation(line: 4405, column: 42, scope: !3657)
!3663 = !DILocation(line: 4405, column: 10, scope: !3643)
!3664 = !DILocation(line: 4406, column: 3, scope: !3657)
!3665 = !DILocation(line: 4407, column: 10, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3643, file: !2, line: 4407, column: 10)
!3667 = !DILocation(line: 4407, column: 17, scope: !3666)
!3668 = !DILocation(line: 4407, column: 23, scope: !3666)
!3669 = !DILocation(line: 4407, column: 10, scope: !3643)
!3670 = !DILocation(line: 4408, column: 10, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3666, file: !2, line: 4407, column: 50)
!3672 = !DILocation(line: 4409, column: 17, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3666, file: !2, line: 4409, column: 17)
!3674 = !DILocation(line: 4409, column: 24, scope: !3673)
!3675 = !DILocation(line: 4409, column: 30, scope: !3673)
!3676 = !DILocation(line: 4409, column: 17, scope: !3666)
!3677 = !DILocation(line: 4410, column: 10, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3673, file: !2, line: 4409, column: 53)
!3679 = !DILocation(line: 4411, column: 17, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3673, file: !2, line: 4411, column: 17)
!3681 = !DILocation(line: 4411, column: 24, scope: !3680)
!3682 = !DILocation(line: 4411, column: 32, scope: !3680)
!3683 = !DILocation(line: 4411, column: 17, scope: !3673)
!3684 = !DILocation(line: 4412, column: 10, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3680, file: !2, line: 4411, column: 38)
!3686 = !DILocation(line: 4414, column: 22, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3688, file: !2, line: 4414, column: 21)
!3688 = distinct !DILexicalBlock(scope: !3680, file: !2, line: 4413, column: 13)
!3689 = !DILocation(line: 4414, column: 28, scope: !3687)
!3690 = !DILocation(line: 4414, column: 34, scope: !3687)
!3691 = !DILocation(line: 4414, column: 41, scope: !3687)
!3692 = !DILocation(line: 4414, column: 48, scope: !3687)
!3693 = !DILocation(line: 4414, column: 52, scope: !3687)
!3694 = !DILocation(line: 4414, column: 61, scope: !3687)
!3695 = !DILocation(line: 4415, column: 8, scope: !3687)
!3696 = !DILocation(line: 4415, column: 14, scope: !3687)
!3697 = !DILocation(line: 4415, column: 20, scope: !3687)
!3698 = !DILocation(line: 4415, column: 27, scope: !3687)
!3699 = !DILocation(line: 4415, column: 34, scope: !3687)
!3700 = !DILocation(line: 4415, column: 39, scope: !3687)
!3701 = !DILocation(line: 4415, column: 44, scope: !3687)
!3702 = !DILocation(line: 4414, column: 21, scope: !3688)
!3703 = !DILocation(line: 4417, column: 11, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3705, file: !2, line: 4417, column: 11)
!3705 = distinct !DILexicalBlock(scope: !3687, file: !2, line: 4416, column: 32)
!3706 = !DILocation(line: 4417, column: 17, scope: !3704)
!3707 = !DILocation(line: 4417, column: 11, scope: !3705)
!3708 = !DILocation(line: 4418, column: 31, scope: !3704)
!3709 = !DILocation(line: 4418, column: 37, scope: !3704)
!3710 = !DILocation(line: 4418, column: 4, scope: !3704)
!3711 = !DILocation(line: 4418, column: 13, scope: !3704)
!3712 = !DILocation(line: 4418, column: 17, scope: !3704)
!3713 = !DILocation(line: 4420, column: 31, scope: !3704)
!3714 = !DILocation(line: 4420, column: 37, scope: !3704)
!3715 = !DILocation(line: 4420, column: 4, scope: !3704)
!3716 = !DILocation(line: 4420, column: 13, scope: !3704)
!3717 = !DILocation(line: 4420, column: 17, scope: !3704)
!3718 = !DILocation(line: 4421, column: 9, scope: !3705)
!3719 = !DILocation(line: 4421, column: 15, scope: !3705)
!3720 = !DILocation(line: 4422, column: 3, scope: !3705)
!3721 = !DILocation(line: 4424, column: 2, scope: !3643)
!3722 = !DILocation(line: 4400, column: 14, scope: !3632)
!3723 = !DILocation(line: 4398, column: 2, scope: !3632)
!3724 = distinct !{!3724, !3641, !3725, !1794}
!3725 = !DILocation(line: 4424, column: 2, scope: !3629)
!3726 = !DILocation(line: 4425, column: 5, scope: !3191)
!3727 = !DILocation(line: 4426, column: 5, scope: !3177)
!3728 = !DILocation(line: 4427, column: 1, scope: !3177)
!3729 = distinct !DISubprogram(name: "xmlRegExecErrInfo", scope: !2, file: !2, line: 4472, type: !3730, scopeLine: 4473, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !3733)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!1306, !1336, !3732, !1419, !1419, !1439, !1419}
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!3733 = !{!3734, !3735, !3736, !3737, !3738, !3739}
!3734 = !DILocalVariable(name: "exec", arg: 1, scope: !3729, file: !2, line: 4472, type: !1336)
!3735 = !DILocalVariable(name: "string", arg: 2, scope: !3729, file: !2, line: 4472, type: !3732)
!3736 = !DILocalVariable(name: "nbval", arg: 3, scope: !3729, file: !2, line: 4473, type: !1419)
!3737 = !DILocalVariable(name: "nbneg", arg: 4, scope: !3729, file: !2, line: 4473, type: !1419)
!3738 = !DILocalVariable(name: "values", arg: 5, scope: !3729, file: !2, line: 4473, type: !1439)
!3739 = !DILocalVariable(name: "terminal", arg: 6, scope: !3729, file: !2, line: 4473, type: !1419)
!3740 = !DILocation(line: 4472, column: 37, scope: !3729)
!3741 = !DILocation(line: 4472, column: 59, scope: !3729)
!3742 = !DILocation(line: 4473, column: 24, scope: !3729)
!3743 = !DILocation(line: 4473, column: 36, scope: !3729)
!3744 = !DILocation(line: 4473, column: 53, scope: !3729)
!3745 = !DILocation(line: 4473, column: 66, scope: !3729)
!3746 = !DILocation(line: 4474, column: 9, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3729, file: !2, line: 4474, column: 9)
!3748 = !DILocation(line: 4474, column: 14, scope: !3747)
!3749 = !DILocation(line: 4474, column: 9, scope: !3729)
!3750 = !DILocation(line: 4475, column: 9, scope: !3747)
!3751 = !DILocation(line: 4476, column: 9, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3729, file: !2, line: 4476, column: 9)
!3753 = !DILocation(line: 4476, column: 16, scope: !3752)
!3754 = !DILocation(line: 4476, column: 9, scope: !3729)
!3755 = !DILocation(line: 4477, column: 13, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3757, file: !2, line: 4477, column: 13)
!3757 = distinct !DILexicalBlock(scope: !3752, file: !2, line: 4476, column: 25)
!3758 = !DILocation(line: 4477, column: 19, scope: !3756)
!3759 = !DILocation(line: 4477, column: 26, scope: !3756)
!3760 = !DILocation(line: 4477, column: 13, scope: !3757)
!3761 = !DILocation(line: 4478, column: 16, scope: !3756)
!3762 = !DILocation(line: 4478, column: 22, scope: !3756)
!3763 = !DILocation(line: 4478, column: 7, scope: !3756)
!3764 = !DILocation(line: 4478, column: 14, scope: !3756)
!3765 = !DILocation(line: 4478, column: 6, scope: !3756)
!3766 = !DILocation(line: 4480, column: 7, scope: !3756)
!3767 = !DILocation(line: 4480, column: 14, scope: !3756)
!3768 = !DILocation(line: 4481, column: 5, scope: !3757)
!3769 = !DILocation(line: 4482, column: 32, scope: !3729)
!3770 = !DILocation(line: 4482, column: 41, scope: !3729)
!3771 = !DILocation(line: 4482, column: 48, scope: !3729)
!3772 = !DILocation(line: 4482, column: 55, scope: !3729)
!3773 = !DILocation(line: 4482, column: 63, scope: !3729)
!3774 = !DILocation(line: 4482, column: 12, scope: !3729)
!3775 = !DILocation(line: 4482, column: 5, scope: !3729)
!3776 = !DILocation(line: 4483, column: 1, scope: !3729)
!3777 = distinct !DISubprogram(name: "xmlRegexpPrint", scope: !2, file: !2, line: 5574, type: !3778, scopeLine: 5574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !3834)
!3778 = !DISubroutineType(types: !3779)
!3779 = !{null, !3780, !1345}
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3782, line: 7, baseType: !3783)
!3782 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "571f9fb6223c42439075fdde11a0de5d")
!3783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3784, line: 49, size: 1728, elements: !3785)
!3784 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "1bad07471b7974df4ecc1d1c2ca207e6")
!3785 = !{!3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3801, !3803, !3804, !3805, !3809, !3811, !3813, !3817, !3820, !3822, !3825, !3828, !3829, !3830, !3831, !3832}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3783, file: !3784, line: 51, baseType: !1306, size: 32)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3783, file: !3784, line: 54, baseType: !1481, size: 64, offset: 64)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3783, file: !3784, line: 55, baseType: !1481, size: 64, offset: 128)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3783, file: !3784, line: 56, baseType: !1481, size: 64, offset: 192)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3783, file: !3784, line: 57, baseType: !1481, size: 64, offset: 256)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3783, file: !3784, line: 58, baseType: !1481, size: 64, offset: 320)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3783, file: !3784, line: 59, baseType: !1481, size: 64, offset: 384)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3783, file: !3784, line: 60, baseType: !1481, size: 64, offset: 448)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3783, file: !3784, line: 61, baseType: !1481, size: 64, offset: 512)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3783, file: !3784, line: 64, baseType: !1481, size: 64, offset: 576)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3783, file: !3784, line: 65, baseType: !1481, size: 64, offset: 640)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3783, file: !3784, line: 66, baseType: !1481, size: 64, offset: 704)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3783, file: !3784, line: 68, baseType: !3799, size: 64, offset: 768)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3784, line: 36, flags: DIFlagFwdDecl)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3783, file: !3784, line: 70, baseType: !3802, size: 64, offset: 832)
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 64)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3783, file: !3784, line: 72, baseType: !1306, size: 32, offset: 896)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3783, file: !3784, line: 73, baseType: !1306, size: 32, offset: 928)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3783, file: !3784, line: 74, baseType: !3806, size: 64, offset: 960)
!3806 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !3807, line: 152, baseType: !3808)
!3807 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!3808 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3783, file: !3784, line: 77, baseType: !3810, size: 16, offset: 1024)
!3810 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3783, file: !3784, line: 78, baseType: !3812, size: 8, offset: 1040)
!3812 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3783, file: !3784, line: 79, baseType: !3814, size: 8, offset: 1048)
!3814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 8, elements: !3815)
!3815 = !{!3816}
!3816 = !DISubrange(count: 1)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3783, file: !3784, line: 81, baseType: !3818, size: 64, offset: 1088)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3784, line: 43, baseType: null)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3783, file: !3784, line: 89, baseType: !3821, size: 64, offset: 1152)
!3821 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !3807, line: 153, baseType: !3808)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3783, file: !3784, line: 91, baseType: !3823, size: 64, offset: 1216)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3784, line: 37, flags: DIFlagFwdDecl)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3783, file: !3784, line: 92, baseType: !3826, size: 64, offset: 1280)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3784, line: 38, flags: DIFlagFwdDecl)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3783, file: !3784, line: 93, baseType: !3802, size: 64, offset: 1344)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3783, file: !3784, line: 94, baseType: !1335, size: 64, offset: 1408)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3783, file: !3784, line: 95, baseType: !1509, size: 64, offset: 1472)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3783, file: !3784, line: 96, baseType: !1306, size: 32, offset: 1536)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3783, file: !3784, line: 98, baseType: !3833, size: 160, offset: 1568)
!3833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 160, elements: !45)
!3834 = !{!3835, !3836, !3837}
!3835 = !DILocalVariable(name: "output", arg: 1, scope: !3777, file: !2, line: 5574, type: !3780)
!3836 = !DILocalVariable(name: "regexp", arg: 2, scope: !3777, file: !2, line: 5574, type: !1345)
!3837 = !DILocalVariable(name: "i", scope: !3777, file: !2, line: 5575, type: !1306)
!3838 = !DILocation(line: 5574, column: 22, scope: !3777)
!3839 = !DILocation(line: 5574, column: 43, scope: !3777)
!3840 = !DILocation(line: 5575, column: 5, scope: !3777)
!3841 = !DILocation(line: 5575, column: 9, scope: !3777)
!3842 = !DILocation(line: 5577, column: 9, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3777, file: !2, line: 5577, column: 9)
!3844 = !DILocation(line: 5577, column: 16, scope: !3843)
!3845 = !DILocation(line: 5577, column: 9, scope: !3777)
!3846 = !DILocation(line: 5578, column: 9, scope: !3843)
!3847 = !DILocation(line: 5579, column: 13, scope: !3777)
!3848 = !DILocation(line: 5579, column: 5, scope: !3777)
!3849 = !DILocation(line: 5580, column: 9, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3777, file: !2, line: 5580, column: 9)
!3851 = !DILocation(line: 5580, column: 16, scope: !3850)
!3852 = !DILocation(line: 5580, column: 9, scope: !3777)
!3853 = !DILocation(line: 5581, column: 10, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3850, file: !2, line: 5580, column: 25)
!3855 = !DILocation(line: 5581, column: 2, scope: !3854)
!3856 = !DILocation(line: 5582, column: 2, scope: !3854)
!3857 = !DILocation(line: 5584, column: 13, scope: !3777)
!3858 = !DILocation(line: 5584, column: 30, scope: !3777)
!3859 = !DILocation(line: 5584, column: 38, scope: !3777)
!3860 = !{!1545, !1528, i64 0}
!3861 = !DILocation(line: 5584, column: 5, scope: !3777)
!3862 = !DILocation(line: 5585, column: 13, scope: !3777)
!3863 = !DILocation(line: 5585, column: 5, scope: !3777)
!3864 = !DILocation(line: 5586, column: 13, scope: !3777)
!3865 = !DILocation(line: 5586, column: 36, scope: !3777)
!3866 = !DILocation(line: 5586, column: 44, scope: !3777)
!3867 = !{!1545, !1546, i64 24}
!3868 = !DILocation(line: 5586, column: 5, scope: !3777)
!3869 = !DILocation(line: 5587, column: 12, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3777, file: !2, line: 5587, column: 5)
!3871 = !DILocation(line: 5587, column: 10, scope: !3870)
!3872 = !DILocation(line: 5587, column: 16, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3870, file: !2, line: 5587, column: 5)
!3874 = !DILocation(line: 5587, column: 20, scope: !3873)
!3875 = !DILocation(line: 5587, column: 28, scope: !3873)
!3876 = !DILocation(line: 5587, column: 18, scope: !3873)
!3877 = !DILocation(line: 5587, column: 5, scope: !3870)
!3878 = !DILocation(line: 5588, column: 10, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3873, file: !2, line: 5587, column: 42)
!3880 = !DILocation(line: 5588, column: 28, scope: !3879)
!3881 = !DILocation(line: 5588, column: 2, scope: !3879)
!3882 = !DILocation(line: 5589, column: 18, scope: !3879)
!3883 = !DILocation(line: 5589, column: 26, scope: !3879)
!3884 = !DILocation(line: 5589, column: 34, scope: !3879)
!3885 = !{!1545, !1528, i64 32}
!3886 = !DILocation(line: 5589, column: 40, scope: !3879)
!3887 = !DILocation(line: 5589, column: 2, scope: !3879)
!3888 = !DILocation(line: 5590, column: 5, scope: !3879)
!3889 = !DILocation(line: 5587, column: 38, scope: !3873)
!3890 = !DILocation(line: 5587, column: 5, scope: !3873)
!3891 = distinct !{!3891, !3877, !3892, !1794}
!3892 = !DILocation(line: 5590, column: 5, scope: !3870)
!3893 = !DILocation(line: 5591, column: 13, scope: !3777)
!3894 = !DILocation(line: 5591, column: 35, scope: !3777)
!3895 = !DILocation(line: 5591, column: 43, scope: !3777)
!3896 = !{!1545, !1546, i64 8}
!3897 = !DILocation(line: 5591, column: 5, scope: !3777)
!3898 = !DILocation(line: 5592, column: 13, scope: !3777)
!3899 = !DILocation(line: 5592, column: 5, scope: !3777)
!3900 = !DILocation(line: 5593, column: 12, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3777, file: !2, line: 5593, column: 5)
!3902 = !DILocation(line: 5593, column: 10, scope: !3901)
!3903 = !DILocation(line: 5593, column: 16, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3901, file: !2, line: 5593, column: 5)
!3905 = !DILocation(line: 5593, column: 20, scope: !3904)
!3906 = !DILocation(line: 5593, column: 28, scope: !3904)
!3907 = !DILocation(line: 5593, column: 18, scope: !3904)
!3908 = !DILocation(line: 5593, column: 5, scope: !3901)
!3909 = !DILocation(line: 5594, column: 19, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3904, file: !2, line: 5593, column: 43)
!3911 = !DILocation(line: 5594, column: 27, scope: !3910)
!3912 = !DILocation(line: 5594, column: 35, scope: !3910)
!3913 = !DILocation(line: 5594, column: 42, scope: !3910)
!3914 = !DILocation(line: 5594, column: 2, scope: !3910)
!3915 = !DILocation(line: 5595, column: 5, scope: !3910)
!3916 = !DILocation(line: 5593, column: 39, scope: !3904)
!3917 = !DILocation(line: 5593, column: 5, scope: !3904)
!3918 = distinct !{!3918, !3908, !3919, !1794}
!3919 = !DILocation(line: 5595, column: 5, scope: !3901)
!3920 = !DILocation(line: 5596, column: 13, scope: !3777)
!3921 = !DILocation(line: 5596, column: 39, scope: !3777)
!3922 = !DILocation(line: 5596, column: 47, scope: !3777)
!3923 = !DILocation(line: 5596, column: 5, scope: !3777)
!3924 = !DILocation(line: 5597, column: 12, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3777, file: !2, line: 5597, column: 5)
!3926 = !DILocation(line: 5597, column: 10, scope: !3925)
!3927 = !DILocation(line: 5597, column: 16, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3925, file: !2, line: 5597, column: 5)
!3929 = !DILocation(line: 5597, column: 20, scope: !3928)
!3930 = !DILocation(line: 5597, column: 28, scope: !3928)
!3931 = !DILocation(line: 5597, column: 18, scope: !3928)
!3932 = !DILocation(line: 5597, column: 5, scope: !3925)
!3933 = !DILocation(line: 5598, column: 10, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3928, file: !2, line: 5597, column: 45)
!3935 = !DILocation(line: 5598, column: 42, scope: !3934)
!3936 = !DILocation(line: 5598, column: 45, scope: !3934)
!3937 = !DILocation(line: 5598, column: 53, scope: !3934)
!3938 = !DILocation(line: 5598, column: 62, scope: !3934)
!3939 = !DILocation(line: 5598, column: 65, scope: !3934)
!3940 = !DILocation(line: 5599, column: 35, scope: !3934)
!3941 = !DILocation(line: 5599, column: 43, scope: !3934)
!3942 = !DILocation(line: 5599, column: 52, scope: !3934)
!3943 = !DILocation(line: 5599, column: 55, scope: !3934)
!3944 = !DILocation(line: 5598, column: 2, scope: !3934)
!3945 = !DILocation(line: 5600, column: 5, scope: !3934)
!3946 = !DILocation(line: 5597, column: 41, scope: !3928)
!3947 = !DILocation(line: 5597, column: 5, scope: !3928)
!3948 = distinct !{!3948, !3932, !3949, !1794}
!3949 = !DILocation(line: 5600, column: 5, scope: !3925)
!3950 = !DILocation(line: 5601, column: 1, scope: !3777)
!3951 = !DISubprogram(name: "fprintf", scope: !3952, file: !3952, line: 350, type: !3953, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3952 = !DIFile(filename: "/usr/include/stdio.h", directory: "", checksumkind: CSK_MD5, checksum: "f31eefcc3f15835fc5a4023a625cf609")
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!1306, !3955, !3956, null}
!3955 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3780)
!3956 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1482)
!3957 = distinct !DISubprogram(name: "xmlRegPrintAtom", scope: !2, file: !2, line: 1110, type: !3958, scopeLine: 1110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !3960)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{null, !3780, !1378}
!3960 = !{!3961, !3962, !3963}
!3961 = !DILocalVariable(name: "output", arg: 1, scope: !3957, file: !2, line: 1110, type: !3780)
!3962 = !DILocalVariable(name: "atom", arg: 2, scope: !3957, file: !2, line: 1110, type: !1378)
!3963 = !DILocalVariable(name: "i", scope: !3964, file: !2, line: 1127, type: !1306)
!3964 = distinct !DILexicalBlock(scope: !3965, file: !2, line: 1126, column: 47)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !2, line: 1126, column: 14)
!3966 = distinct !DILexicalBlock(scope: !3957, file: !2, line: 1124, column: 9)
!3967 = !DILocation(line: 1110, column: 23, scope: !3957)
!3968 = !DILocation(line: 1110, column: 45, scope: !3957)
!3969 = !DILocation(line: 1111, column: 13, scope: !3957)
!3970 = !DILocation(line: 1111, column: 5, scope: !3957)
!3971 = !DILocation(line: 1112, column: 9, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3957, file: !2, line: 1112, column: 9)
!3973 = !DILocation(line: 1112, column: 14, scope: !3972)
!3974 = !DILocation(line: 1112, column: 9, scope: !3957)
!3975 = !DILocation(line: 1113, column: 10, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3972, file: !2, line: 1112, column: 23)
!3977 = !DILocation(line: 1113, column: 2, scope: !3976)
!3978 = !DILocation(line: 1114, column: 2, scope: !3976)
!3979 = !DILocation(line: 1116, column: 9, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3957, file: !2, line: 1116, column: 9)
!3981 = !DILocation(line: 1116, column: 15, scope: !3980)
!3982 = !DILocation(line: 1116, column: 9, scope: !3957)
!3983 = !DILocation(line: 1117, column: 17, scope: !3980)
!3984 = !DILocation(line: 1117, column: 9, scope: !3980)
!3985 = !DILocation(line: 1118, column: 25, scope: !3957)
!3986 = !DILocation(line: 1118, column: 33, scope: !3957)
!3987 = !DILocation(line: 1118, column: 39, scope: !3957)
!3988 = !{!2160, !1529, i64 4}
!3989 = !DILocation(line: 1118, column: 5, scope: !3957)
!3990 = !DILocation(line: 1119, column: 26, scope: !3957)
!3991 = !DILocation(line: 1119, column: 34, scope: !3957)
!3992 = !DILocation(line: 1119, column: 40, scope: !3957)
!3993 = !{!2160, !1529, i64 8}
!3994 = !DILocation(line: 1119, column: 5, scope: !3957)
!3995 = !DILocation(line: 1120, column: 9, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3957, file: !2, line: 1120, column: 9)
!3997 = !DILocation(line: 1120, column: 15, scope: !3996)
!3998 = !DILocation(line: 1120, column: 21, scope: !3996)
!3999 = !DILocation(line: 1120, column: 9, scope: !3957)
!4000 = !DILocation(line: 1121, column: 10, scope: !3996)
!4001 = !DILocation(line: 1121, column: 28, scope: !3996)
!4002 = !DILocation(line: 1121, column: 34, scope: !3996)
!4003 = !DILocation(line: 1121, column: 39, scope: !3996)
!4004 = !DILocation(line: 1121, column: 45, scope: !3996)
!4005 = !DILocation(line: 1121, column: 2, scope: !3996)
!4006 = !DILocation(line: 1122, column: 9, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3957, file: !2, line: 1122, column: 9)
!4008 = !DILocation(line: 1122, column: 15, scope: !4007)
!4009 = !DILocation(line: 1122, column: 20, scope: !4007)
!4010 = !DILocation(line: 1122, column: 9, scope: !3957)
!4011 = !DILocation(line: 1123, column: 10, scope: !4007)
!4012 = !DILocation(line: 1123, column: 36, scope: !4007)
!4013 = !DILocation(line: 1123, column: 42, scope: !4007)
!4014 = !DILocation(line: 1123, column: 2, scope: !4007)
!4015 = !DILocation(line: 1124, column: 9, scope: !3966)
!4016 = !DILocation(line: 1124, column: 15, scope: !3966)
!4017 = !DILocation(line: 1124, column: 20, scope: !3966)
!4018 = !DILocation(line: 1124, column: 9, scope: !3957)
!4019 = !DILocation(line: 1125, column: 10, scope: !3966)
!4020 = !DILocation(line: 1125, column: 31, scope: !3966)
!4021 = !DILocation(line: 1125, column: 37, scope: !3966)
!4022 = !{!2160, !1546, i64 44}
!4023 = !DILocation(line: 1125, column: 2, scope: !3966)
!4024 = !DILocation(line: 1126, column: 14, scope: !3965)
!4025 = !DILocation(line: 1126, column: 20, scope: !3965)
!4026 = !DILocation(line: 1126, column: 25, scope: !3965)
!4027 = !DILocation(line: 1126, column: 14, scope: !3966)
!4028 = !DILocation(line: 1127, column: 2, scope: !3964)
!4029 = !DILocation(line: 1127, column: 6, scope: !3964)
!4030 = !DILocation(line: 1128, column: 10, scope: !3964)
!4031 = !DILocation(line: 1128, column: 34, scope: !3964)
!4032 = !DILocation(line: 1128, column: 40, scope: !3964)
!4033 = !{!2160, !1546, i64 76}
!4034 = !DILocation(line: 1128, column: 2, scope: !3964)
!4035 = !DILocation(line: 1129, column: 9, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !3964, file: !2, line: 1129, column: 2)
!4037 = !DILocation(line: 1129, column: 7, scope: !4036)
!4038 = !DILocation(line: 1129, column: 14, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4036, file: !2, line: 1129, column: 2)
!4040 = !DILocation(line: 1129, column: 18, scope: !4039)
!4041 = !DILocation(line: 1129, column: 24, scope: !4039)
!4042 = !DILocation(line: 1129, column: 16, scope: !4039)
!4043 = !DILocation(line: 1129, column: 2, scope: !4036)
!4044 = !DILocation(line: 1130, column: 23, scope: !4039)
!4045 = !DILocation(line: 1130, column: 31, scope: !4039)
!4046 = !DILocation(line: 1130, column: 37, scope: !4039)
!4047 = !{!2160, !1528, i64 80}
!4048 = !DILocation(line: 1130, column: 44, scope: !4039)
!4049 = !DILocation(line: 1130, column: 6, scope: !4039)
!4050 = !DILocation(line: 1129, column: 34, scope: !4039)
!4051 = !DILocation(line: 1129, column: 2, scope: !4039)
!4052 = distinct !{!4052, !4043, !4053, !1794}
!4053 = !DILocation(line: 1130, column: 46, scope: !4036)
!4054 = !DILocation(line: 1131, column: 5, scope: !3965)
!4055 = !DILocation(line: 1131, column: 5, scope: !3964)
!4056 = !DILocation(line: 1131, column: 16, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !3965, file: !2, line: 1131, column: 16)
!4058 = !DILocation(line: 1131, column: 22, scope: !4057)
!4059 = !DILocation(line: 1131, column: 27, scope: !4057)
!4060 = !DILocation(line: 1131, column: 16, scope: !3965)
!4061 = !DILocation(line: 1132, column: 10, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4057, file: !2, line: 1131, column: 49)
!4063 = !DILocation(line: 1132, column: 39, scope: !4062)
!4064 = !DILocation(line: 1132, column: 45, scope: !4062)
!4065 = !{!2160, !1528, i64 48}
!4066 = !DILocation(line: 1132, column: 52, scope: !4062)
!4067 = !{!1985, !1546, i64 16}
!4068 = !DILocation(line: 1132, column: 56, scope: !4062)
!4069 = !DILocation(line: 1132, column: 62, scope: !4062)
!4070 = !{!2160, !1528, i64 64}
!4071 = !DILocation(line: 1132, column: 68, scope: !4062)
!4072 = !DILocation(line: 1132, column: 2, scope: !4062)
!4073 = !DILocation(line: 1133, column: 5, scope: !4062)
!4074 = !DILocation(line: 1134, column: 10, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4057, file: !2, line: 1133, column: 12)
!4076 = !DILocation(line: 1134, column: 2, scope: !4075)
!4077 = !DILocation(line: 1136, column: 1, scope: !3957)
!4078 = distinct !DISubprogram(name: "xmlRegPrintState", scope: !2, file: !2, line: 1173, type: !4079, scopeLine: 1173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4081)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{null, !3780, !1358}
!4081 = !{!4082, !4083, !4084}
!4082 = !DILocalVariable(name: "output", arg: 1, scope: !4078, file: !2, line: 1173, type: !3780)
!4083 = !DILocalVariable(name: "state", arg: 2, scope: !4078, file: !2, line: 1173, type: !1358)
!4084 = !DILocalVariable(name: "i", scope: !4078, file: !2, line: 1174, type: !1306)
!4085 = !DILocation(line: 1173, column: 24, scope: !4078)
!4086 = !DILocation(line: 1173, column: 47, scope: !4078)
!4087 = !DILocation(line: 1174, column: 5, scope: !4078)
!4088 = !DILocation(line: 1174, column: 9, scope: !4078)
!4089 = !DILocation(line: 1176, column: 13, scope: !4078)
!4090 = !DILocation(line: 1176, column: 5, scope: !4078)
!4091 = !DILocation(line: 1177, column: 9, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4078, file: !2, line: 1177, column: 9)
!4093 = !DILocation(line: 1177, column: 15, scope: !4092)
!4094 = !DILocation(line: 1177, column: 9, scope: !4078)
!4095 = !DILocation(line: 1178, column: 10, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4092, file: !2, line: 1177, column: 24)
!4097 = !DILocation(line: 1178, column: 2, scope: !4096)
!4098 = !DILocation(line: 1179, column: 2, scope: !4096)
!4099 = !DILocation(line: 1181, column: 9, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4078, file: !2, line: 1181, column: 9)
!4101 = !DILocation(line: 1181, column: 16, scope: !4100)
!4102 = !DILocation(line: 1181, column: 21, scope: !4100)
!4103 = !DILocation(line: 1181, column: 9, scope: !4078)
!4104 = !DILocation(line: 1182, column: 10, scope: !4100)
!4105 = !DILocation(line: 1182, column: 2, scope: !4100)
!4106 = !DILocation(line: 1183, column: 9, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4078, file: !2, line: 1183, column: 9)
!4108 = !DILocation(line: 1183, column: 16, scope: !4107)
!4109 = !DILocation(line: 1183, column: 21, scope: !4107)
!4110 = !DILocation(line: 1183, column: 9, scope: !4078)
!4111 = !DILocation(line: 1184, column: 10, scope: !4107)
!4112 = !DILocation(line: 1184, column: 2, scope: !4107)
!4113 = !DILocation(line: 1186, column: 13, scope: !4078)
!4114 = !DILocation(line: 1186, column: 46, scope: !4078)
!4115 = !DILocation(line: 1186, column: 53, scope: !4078)
!4116 = !DILocation(line: 1186, column: 57, scope: !4078)
!4117 = !DILocation(line: 1186, column: 64, scope: !4078)
!4118 = !DILocation(line: 1186, column: 5, scope: !4078)
!4119 = !DILocation(line: 1187, column: 12, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4078, file: !2, line: 1187, column: 5)
!4121 = !DILocation(line: 1187, column: 10, scope: !4120)
!4122 = !DILocation(line: 1187, column: 16, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4120, file: !2, line: 1187, column: 5)
!4124 = !DILocation(line: 1187, column: 20, scope: !4123)
!4125 = !DILocation(line: 1187, column: 27, scope: !4123)
!4126 = !DILocation(line: 1187, column: 18, scope: !4123)
!4127 = !DILocation(line: 1187, column: 5, scope: !4120)
!4128 = !DILocation(line: 1188, column: 19, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4123, file: !2, line: 1187, column: 41)
!4130 = !DILocation(line: 1188, column: 29, scope: !4129)
!4131 = !DILocation(line: 1188, column: 36, scope: !4129)
!4132 = !DILocation(line: 1188, column: 42, scope: !4129)
!4133 = !DILocation(line: 1188, column: 2, scope: !4129)
!4134 = !DILocation(line: 1189, column: 5, scope: !4129)
!4135 = !DILocation(line: 1187, column: 37, scope: !4123)
!4136 = !DILocation(line: 1187, column: 5, scope: !4123)
!4137 = distinct !{!4137, !4127, !4138, !1794}
!4138 = !DILocation(line: 1189, column: 5, scope: !4120)
!4139 = !DILocation(line: 1190, column: 1, scope: !4078)
!4140 = distinct !DISubprogram(name: "xmlRegexpCompile", scope: !2, file: !2, line: 5614, type: !4141, scopeLine: 5614, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4143)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{!1345, !1445}
!4143 = !{!4144, !4145, !4146}
!4144 = !DILocalVariable(name: "regexp", arg: 1, scope: !4140, file: !2, line: 5614, type: !1445)
!4145 = !DILocalVariable(name: "ret", scope: !4140, file: !2, line: 5615, type: !1345)
!4146 = !DILocalVariable(name: "ctxt", scope: !4140, file: !2, line: 5616, type: !1483)
!4147 = !DILocation(line: 5614, column: 33, scope: !4140)
!4148 = !DILocation(line: 5615, column: 5, scope: !4140)
!4149 = !DILocation(line: 5615, column: 18, scope: !4140)
!4150 = !DILocation(line: 5616, column: 5, scope: !4140)
!4151 = !DILocation(line: 5616, column: 25, scope: !4140)
!4152 = !DILocation(line: 5618, column: 32, scope: !4140)
!4153 = !DILocation(line: 5618, column: 12, scope: !4140)
!4154 = !DILocation(line: 5618, column: 10, scope: !4140)
!4155 = !DILocation(line: 5619, column: 9, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4140, file: !2, line: 5619, column: 9)
!4157 = !DILocation(line: 5619, column: 14, scope: !4156)
!4158 = !DILocation(line: 5619, column: 9, scope: !4140)
!4159 = !DILocation(line: 5620, column: 2, scope: !4156)
!4160 = !DILocation(line: 5623, column: 5, scope: !4140)
!4161 = !DILocation(line: 5623, column: 11, scope: !4140)
!4162 = !DILocation(line: 5623, column: 15, scope: !4140)
!4163 = !{!1724, !1528, i64 32}
!4164 = !DILocation(line: 5624, column: 48, scope: !4140)
!4165 = !DILocation(line: 5624, column: 33, scope: !4140)
!4166 = !DILocation(line: 5624, column: 19, scope: !4140)
!4167 = !DILocation(line: 5624, column: 25, scope: !4140)
!4168 = !DILocation(line: 5624, column: 31, scope: !4140)
!4169 = !{!1724, !1528, i64 40}
!4170 = !DILocation(line: 5624, column: 5, scope: !4140)
!4171 = !DILocation(line: 5624, column: 11, scope: !4140)
!4172 = !DILocation(line: 5624, column: 17, scope: !4140)
!4173 = !{!1724, !1528, i64 24}
!4174 = !DILocation(line: 5625, column: 21, scope: !4140)
!4175 = !DILocation(line: 5625, column: 27, scope: !4140)
!4176 = !DILocation(line: 5625, column: 33, scope: !4140)
!4177 = !DILocation(line: 5625, column: 5, scope: !4140)
!4178 = !DILocation(line: 5628, column: 22, scope: !4140)
!4179 = !DILocation(line: 5628, column: 5, scope: !4140)
!4180 = !DILocation(line: 5629, column: 9, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4140, file: !2, line: 5629, column: 9)
!4182 = !{!1724, !1528, i64 8}
!4183 = !DILocation(line: 5629, column: 13, scope: !4181)
!4184 = !DILocation(line: 5629, column: 9, scope: !4140)
!4185 = !DILocation(line: 5630, column: 2, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4181, file: !2, line: 5629, column: 19)
!4187 = !DILocation(line: 5631, column: 5, scope: !4186)
!4188 = !DILocation(line: 5632, column: 9, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4140, file: !2, line: 5632, column: 9)
!4190 = !DILocation(line: 5632, column: 15, scope: !4189)
!4191 = !DILocation(line: 5632, column: 21, scope: !4189)
!4192 = !DILocation(line: 5632, column: 9, scope: !4140)
!4193 = !DILocation(line: 5633, column: 23, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4189, file: !2, line: 5632, column: 27)
!4195 = !DILocation(line: 5633, column: 2, scope: !4194)
!4196 = !DILocation(line: 5634, column: 2, scope: !4194)
!4197 = !DILocation(line: 5636, column: 17, scope: !4140)
!4198 = !DILocation(line: 5636, column: 23, scope: !4140)
!4199 = !DILocation(line: 5636, column: 5, scope: !4140)
!4200 = !DILocation(line: 5636, column: 11, scope: !4140)
!4201 = !DILocation(line: 5636, column: 15, scope: !4140)
!4202 = !DILocation(line: 5637, column: 5, scope: !4140)
!4203 = !DILocation(line: 5637, column: 11, scope: !4140)
!4204 = !DILocation(line: 5637, column: 18, scope: !4140)
!4205 = !DILocation(line: 5637, column: 23, scope: !4140)
!4206 = !DILocation(line: 5638, column: 5, scope: !4140)
!4207 = !DILocation(line: 5638, column: 11, scope: !4140)
!4208 = !DILocation(line: 5638, column: 16, scope: !4140)
!4209 = !DILocation(line: 5638, column: 21, scope: !4140)
!4210 = !DILocation(line: 5641, column: 38, scope: !4140)
!4211 = !DILocation(line: 5641, column: 5, scope: !4140)
!4212 = !DILocation(line: 5644, column: 9, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4140, file: !2, line: 5644, column: 9)
!4214 = !DILocation(line: 5644, column: 15, scope: !4213)
!4215 = !DILocation(line: 5644, column: 21, scope: !4213)
!4216 = !DILocation(line: 5644, column: 9, scope: !4140)
!4217 = !DILocation(line: 5645, column: 23, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4213, file: !2, line: 5644, column: 27)
!4219 = !DILocation(line: 5645, column: 2, scope: !4218)
!4220 = !DILocation(line: 5646, column: 2, scope: !4218)
!4221 = !DILocation(line: 5648, column: 30, scope: !4140)
!4222 = !DILocation(line: 5648, column: 11, scope: !4140)
!4223 = !DILocation(line: 5648, column: 9, scope: !4140)
!4224 = !DILocation(line: 5649, column: 26, scope: !4140)
!4225 = !DILocation(line: 5649, column: 5, scope: !4140)
!4226 = !DILocation(line: 5650, column: 12, scope: !4140)
!4227 = !DILocation(line: 5650, column: 5, scope: !4140)
!4228 = !DILocation(line: 5651, column: 1, scope: !4140)
!4229 = distinct !DISubprogram(name: "xmlRegNewParserCtxt", scope: !2, file: !2, line: 709, type: !4230, scopeLine: 709, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4232)
!4230 = !DISubroutineType(types: !4231)
!4231 = !{!1483, !1445}
!4232 = !{!4233, !4234}
!4233 = !DILocalVariable(name: "string", arg: 1, scope: !4229, file: !2, line: 709, type: !1445)
!4234 = !DILocalVariable(name: "ret", scope: !4229, file: !2, line: 710, type: !1483)
!4235 = !DILocation(line: 709, column: 36, scope: !4229)
!4236 = !DILocation(line: 710, column: 5, scope: !4229)
!4237 = !DILocation(line: 710, column: 25, scope: !4229)
!4238 = !DILocation(line: 712, column: 33, scope: !4229)
!4239 = !DILocation(line: 712, column: 9, scope: !4229)
!4240 = !DILocation(line: 713, column: 9, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4229, file: !2, line: 713, column: 9)
!4242 = !DILocation(line: 713, column: 13, scope: !4241)
!4243 = !DILocation(line: 713, column: 9, scope: !4229)
!4244 = !DILocation(line: 714, column: 2, scope: !4241)
!4245 = !DILocation(line: 715, column: 12, scope: !4229)
!4246 = !DILocation(line: 715, column: 5, scope: !4229)
!4247 = !DILocation(line: 716, column: 9, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4229, file: !2, line: 716, column: 9)
!4249 = !DILocation(line: 716, column: 16, scope: !4248)
!4250 = !DILocation(line: 716, column: 9, scope: !4229)
!4251 = !DILocation(line: 717, column: 26, scope: !4248)
!4252 = !DILocation(line: 717, column: 16, scope: !4248)
!4253 = !DILocation(line: 717, column: 2, scope: !4248)
!4254 = !DILocation(line: 717, column: 7, scope: !4248)
!4255 = !DILocation(line: 717, column: 14, scope: !4248)
!4256 = !DILocation(line: 718, column: 16, scope: !4229)
!4257 = !DILocation(line: 718, column: 21, scope: !4229)
!4258 = !DILocation(line: 718, column: 5, scope: !4229)
!4259 = !DILocation(line: 718, column: 10, scope: !4229)
!4260 = !DILocation(line: 718, column: 14, scope: !4229)
!4261 = !DILocation(line: 719, column: 5, scope: !4229)
!4262 = !DILocation(line: 719, column: 10, scope: !4229)
!4263 = !DILocation(line: 719, column: 14, scope: !4229)
!4264 = !{!1724, !1546, i64 20}
!4265 = !DILocation(line: 720, column: 5, scope: !4229)
!4266 = !DILocation(line: 720, column: 10, scope: !4229)
!4267 = !DILocation(line: 720, column: 15, scope: !4229)
!4268 = !{!1724, !1546, i64 108}
!4269 = !DILocation(line: 721, column: 5, scope: !4229)
!4270 = !DILocation(line: 721, column: 10, scope: !4229)
!4271 = !DILocation(line: 721, column: 16, scope: !4229)
!4272 = !DILocation(line: 722, column: 5, scope: !4229)
!4273 = !DILocation(line: 722, column: 10, scope: !4229)
!4274 = !DILocation(line: 722, column: 22, scope: !4229)
!4275 = !{!1724, !1546, i64 104}
!4276 = !DILocation(line: 723, column: 12, scope: !4229)
!4277 = !DILocation(line: 723, column: 5, scope: !4229)
!4278 = !DILocation(line: 724, column: 1, scope: !4229)
!4279 = distinct !DISubprogram(name: "xmlRegNewState", scope: !2, file: !2, line: 900, type: !4280, scopeLine: 900, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4282)
!4280 = !DISubroutineType(types: !4281)
!4281 = !{!1358, !1483}
!4282 = !{!4283, !4284}
!4283 = !DILocalVariable(name: "ctxt", arg: 1, scope: !4279, file: !2, line: 900, type: !1483)
!4284 = !DILocalVariable(name: "ret", scope: !4279, file: !2, line: 901, type: !1358)
!4285 = !DILocation(line: 900, column: 36, scope: !4279)
!4286 = !DILocation(line: 901, column: 5, scope: !4279)
!4287 = !DILocation(line: 901, column: 20, scope: !4279)
!4288 = !DILocation(line: 903, column: 28, scope: !4279)
!4289 = !DILocation(line: 903, column: 9, scope: !4279)
!4290 = !DILocation(line: 904, column: 9, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4279, file: !2, line: 904, column: 9)
!4292 = !DILocation(line: 904, column: 13, scope: !4291)
!4293 = !DILocation(line: 904, column: 9, scope: !4279)
!4294 = !DILocation(line: 905, column: 21, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4291, file: !2, line: 904, column: 22)
!4296 = !DILocation(line: 905, column: 2, scope: !4295)
!4297 = !DILocation(line: 906, column: 2, scope: !4295)
!4298 = !DILocation(line: 908, column: 12, scope: !4279)
!4299 = !DILocation(line: 908, column: 5, scope: !4279)
!4300 = !DILocation(line: 909, column: 5, scope: !4279)
!4301 = !DILocation(line: 909, column: 10, scope: !4279)
!4302 = !DILocation(line: 909, column: 15, scope: !4279)
!4303 = !DILocation(line: 910, column: 5, scope: !4279)
!4304 = !DILocation(line: 910, column: 10, scope: !4279)
!4305 = !DILocation(line: 910, column: 15, scope: !4279)
!4306 = !{!1985, !1529, i64 4}
!4307 = !DILocation(line: 911, column: 12, scope: !4279)
!4308 = !DILocation(line: 911, column: 5, scope: !4279)
!4309 = !DILocation(line: 912, column: 1, scope: !4279)
!4310 = distinct !DISubprogram(name: "xmlRegStatePush", scope: !2, file: !2, line: 1451, type: !4311, scopeLine: 1451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4313)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{!1306, !1483, !1358}
!4313 = !{!4314, !4315, !4316}
!4314 = !DILocalVariable(name: "ctxt", arg: 1, scope: !4310, file: !2, line: 1451, type: !1483)
!4315 = !DILocalVariable(name: "state", arg: 2, scope: !4310, file: !2, line: 1451, type: !1358)
!4316 = !DILocalVariable(name: "tmp", scope: !4317, file: !2, line: 1463, type: !1357)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !2, line: 1462, column: 51)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !2, line: 1462, column: 16)
!4319 = distinct !DILexicalBlock(scope: !4310, file: !2, line: 1453, column: 9)
!4320 = !DILocation(line: 1451, column: 37, scope: !4310)
!4321 = !DILocation(line: 1451, column: 58, scope: !4310)
!4322 = !DILocation(line: 1452, column: 9, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4310, file: !2, line: 1452, column: 9)
!4324 = !DILocation(line: 1452, column: 15, scope: !4323)
!4325 = !DILocation(line: 1452, column: 9, scope: !4310)
!4326 = !DILocation(line: 1452, column: 24, scope: !4323)
!4327 = !DILocation(line: 1453, column: 9, scope: !4319)
!4328 = !DILocation(line: 1453, column: 15, scope: !4319)
!4329 = !{!1724, !1546, i64 72}
!4330 = !DILocation(line: 1453, column: 25, scope: !4319)
!4331 = !DILocation(line: 1453, column: 9, scope: !4310)
!4332 = !DILocation(line: 1454, column: 2, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4319, file: !2, line: 1453, column: 31)
!4334 = !DILocation(line: 1454, column: 8, scope: !4333)
!4335 = !DILocation(line: 1454, column: 18, scope: !4333)
!4336 = !DILocation(line: 1455, column: 36, scope: !4333)
!4337 = !DILocation(line: 1455, column: 46, scope: !4333)
!4338 = !DILocation(line: 1455, column: 52, scope: !4333)
!4339 = !DILocation(line: 1455, column: 62, scope: !4333)
!4340 = !DILocation(line: 1455, column: 2, scope: !4333)
!4341 = !DILocation(line: 1455, column: 8, scope: !4333)
!4342 = !DILocation(line: 1455, column: 15, scope: !4333)
!4343 = !{!1724, !1528, i64 80}
!4344 = !DILocation(line: 1457, column: 6, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4333, file: !2, line: 1457, column: 6)
!4346 = !DILocation(line: 1457, column: 12, scope: !4345)
!4347 = !DILocation(line: 1457, column: 19, scope: !4345)
!4348 = !DILocation(line: 1457, column: 6, scope: !4333)
!4349 = !DILocation(line: 1458, column: 25, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4345, file: !2, line: 1457, column: 28)
!4351 = !DILocation(line: 1458, column: 6, scope: !4350)
!4352 = !DILocation(line: 1459, column: 6, scope: !4350)
!4353 = !DILocation(line: 1459, column: 12, scope: !4350)
!4354 = !DILocation(line: 1459, column: 22, scope: !4350)
!4355 = !DILocation(line: 1460, column: 6, scope: !4350)
!4356 = !DILocation(line: 1462, column: 5, scope: !4333)
!4357 = !DILocation(line: 1462, column: 16, scope: !4318)
!4358 = !DILocation(line: 1462, column: 22, scope: !4318)
!4359 = !{!1724, !1546, i64 76}
!4360 = !DILocation(line: 1462, column: 34, scope: !4318)
!4361 = !DILocation(line: 1462, column: 40, scope: !4318)
!4362 = !DILocation(line: 1462, column: 31, scope: !4318)
!4363 = !DILocation(line: 1462, column: 16, scope: !4319)
!4364 = !DILocation(line: 1463, column: 2, scope: !4317)
!4365 = !DILocation(line: 1463, column: 18, scope: !4317)
!4366 = !DILocation(line: 1464, column: 2, scope: !4317)
!4367 = !DILocation(line: 1464, column: 8, scope: !4317)
!4368 = !DILocation(line: 1464, column: 18, scope: !4317)
!4369 = !DILocation(line: 1465, column: 27, scope: !4317)
!4370 = !DILocation(line: 1465, column: 38, scope: !4317)
!4371 = !DILocation(line: 1465, column: 44, scope: !4317)
!4372 = !DILocation(line: 1465, column: 52, scope: !4317)
!4373 = !DILocation(line: 1465, column: 58, scope: !4317)
!4374 = !DILocation(line: 1465, column: 68, scope: !4317)
!4375 = !DILocation(line: 1465, column: 6, scope: !4317)
!4376 = !DILocation(line: 1467, column: 6, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4317, file: !2, line: 1467, column: 6)
!4378 = !DILocation(line: 1467, column: 10, scope: !4377)
!4379 = !DILocation(line: 1467, column: 6, scope: !4317)
!4380 = !DILocation(line: 1468, column: 25, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4377, file: !2, line: 1467, column: 19)
!4382 = !DILocation(line: 1468, column: 6, scope: !4381)
!4383 = !DILocation(line: 1469, column: 6, scope: !4381)
!4384 = !DILocation(line: 1469, column: 12, scope: !4381)
!4385 = !DILocation(line: 1469, column: 22, scope: !4381)
!4386 = !DILocation(line: 1470, column: 6, scope: !4381)
!4387 = !DILocation(line: 1472, column: 17, scope: !4317)
!4388 = !DILocation(line: 1472, column: 2, scope: !4317)
!4389 = !DILocation(line: 1472, column: 8, scope: !4317)
!4390 = !DILocation(line: 1472, column: 15, scope: !4317)
!4391 = !DILocation(line: 1473, column: 5, scope: !4318)
!4392 = !DILocation(line: 1473, column: 5, scope: !4317)
!4393 = !DILocation(line: 1474, column: 17, scope: !4310)
!4394 = !DILocation(line: 1474, column: 23, scope: !4310)
!4395 = !DILocation(line: 1474, column: 5, scope: !4310)
!4396 = !DILocation(line: 1474, column: 12, scope: !4310)
!4397 = !DILocation(line: 1474, column: 15, scope: !4310)
!4398 = !DILocation(line: 1475, column: 38, scope: !4310)
!4399 = !DILocation(line: 1475, column: 5, scope: !4310)
!4400 = !DILocation(line: 1475, column: 11, scope: !4310)
!4401 = !DILocation(line: 1475, column: 18, scope: !4310)
!4402 = !DILocation(line: 1475, column: 24, scope: !4310)
!4403 = !DILocation(line: 1475, column: 32, scope: !4310)
!4404 = !DILocation(line: 1475, column: 36, scope: !4310)
!4405 = !DILocation(line: 1476, column: 5, scope: !4310)
!4406 = !DILocation(line: 1477, column: 1, scope: !4310)
!4407 = distinct !DISubprogram(name: "xmlFAParseRegExp", scope: !2, file: !2, line: 5530, type: !4408, scopeLine: 5530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4410)
!4408 = !DISubroutineType(types: !4409)
!4409 = !{null, !1483, !1306}
!4410 = !{!4411, !4412, !4413, !4414}
!4411 = !DILocalVariable(name: "ctxt", arg: 1, scope: !4407, file: !2, line: 5530, type: !1483)
!4412 = !DILocalVariable(name: "top", arg: 2, scope: !4407, file: !2, line: 5530, type: !1306)
!4413 = !DILocalVariable(name: "start", scope: !4407, file: !2, line: 5531, type: !1358)
!4414 = !DILocalVariable(name: "end", scope: !4407, file: !2, line: 5531, type: !1358)
!4415 = !DILocation(line: 5530, column: 38, scope: !4407)
!4416 = !DILocation(line: 5530, column: 48, scope: !4407)
!4417 = !DILocation(line: 5531, column: 5, scope: !4407)
!4418 = !DILocation(line: 5531, column: 20, scope: !4407)
!4419 = !DILocation(line: 5531, column: 27, scope: !4407)
!4420 = !DILocation(line: 5534, column: 13, scope: !4407)
!4421 = !DILocation(line: 5534, column: 19, scope: !4407)
!4422 = !DILocation(line: 5534, column: 11, scope: !4407)
!4423 = !DILocation(line: 5535, column: 5, scope: !4407)
!4424 = !DILocation(line: 5535, column: 11, scope: !4407)
!4425 = !DILocation(line: 5535, column: 15, scope: !4407)
!4426 = !DILocation(line: 5536, column: 22, scope: !4407)
!4427 = !DILocation(line: 5536, column: 5, scope: !4407)
!4428 = !DILocation(line: 5537, column: 9, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4407, file: !2, line: 5537, column: 9)
!4430 = !DILocation(line: 5537, column: 9, scope: !4407)
!4431 = !DILocation(line: 5541, column: 2, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4429, file: !2, line: 5537, column: 14)
!4433 = !DILocation(line: 5541, column: 8, scope: !4432)
!4434 = !DILocation(line: 5541, column: 15, scope: !4432)
!4435 = !DILocation(line: 5541, column: 20, scope: !4432)
!4436 = !DILocation(line: 5542, column: 5, scope: !4432)
!4437 = !DILocation(line: 5543, column: 9, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4407, file: !2, line: 5543, column: 9)
!4439 = !DILocation(line: 5543, column: 13, scope: !4438)
!4440 = !DILocation(line: 5543, column: 9, scope: !4407)
!4441 = !DILocation(line: 5544, column: 14, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4438, file: !2, line: 5543, column: 21)
!4443 = !DILocation(line: 5544, column: 20, scope: !4442)
!4444 = !DILocation(line: 5544, column: 2, scope: !4442)
!4445 = !DILocation(line: 5544, column: 8, scope: !4442)
!4446 = !DILocation(line: 5544, column: 12, scope: !4442)
!4447 = !DILocation(line: 5545, column: 2, scope: !4442)
!4448 = !DILocation(line: 5547, column: 11, scope: !4407)
!4449 = !DILocation(line: 5547, column: 17, scope: !4407)
!4450 = !DILocation(line: 5547, column: 9, scope: !4407)
!4451 = !DILocation(line: 5548, column: 5, scope: !4407)
!4452 = !DILocation(line: 5548, column: 13, scope: !4407)
!4453 = !DILocation(line: 5548, column: 17, scope: !4407)
!4454 = !DILocation(line: 5548, column: 25, scope: !4407)
!4455 = !DILocation(line: 5548, column: 29, scope: !4407)
!4456 = !DILocation(line: 5548, column: 35, scope: !4407)
!4457 = !DILocation(line: 5548, column: 41, scope: !4407)
!4458 = !DILocation(line: 0, scope: !4407)
!4459 = !DILocation(line: 5549, column: 2, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4407, file: !2, line: 5548, column: 48)
!4461 = !DILocation(line: 5550, column: 16, scope: !4460)
!4462 = !DILocation(line: 5550, column: 2, scope: !4460)
!4463 = !DILocation(line: 5550, column: 8, scope: !4460)
!4464 = !DILocation(line: 5550, column: 14, scope: !4460)
!4465 = !DILocation(line: 5551, column: 2, scope: !4460)
!4466 = !DILocation(line: 5551, column: 8, scope: !4460)
!4467 = !DILocation(line: 5551, column: 12, scope: !4460)
!4468 = !DILocation(line: 5552, column: 19, scope: !4460)
!4469 = !DILocation(line: 5552, column: 25, scope: !4460)
!4470 = !DILocation(line: 5552, column: 2, scope: !4460)
!4471 = distinct !{!4471, !4451, !4472, !1794}
!4472 = !DILocation(line: 5553, column: 5, scope: !4407)
!4473 = !DILocation(line: 5554, column: 10, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4407, file: !2, line: 5554, column: 9)
!4475 = !DILocation(line: 5554, column: 9, scope: !4407)
!4476 = !DILocation(line: 5555, column: 16, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4474, file: !2, line: 5554, column: 15)
!4478 = !DILocation(line: 5555, column: 2, scope: !4477)
!4479 = !DILocation(line: 5555, column: 8, scope: !4477)
!4480 = !DILocation(line: 5555, column: 14, scope: !4477)
!4481 = !DILocation(line: 5556, column: 14, scope: !4477)
!4482 = !DILocation(line: 5556, column: 2, scope: !4477)
!4483 = !DILocation(line: 5556, column: 8, scope: !4477)
!4484 = !DILocation(line: 5556, column: 12, scope: !4477)
!4485 = !DILocation(line: 5557, column: 5, scope: !4477)
!4486 = !DILocation(line: 5558, column: 1, scope: !4407)
!4487 = distinct !DISubprogram(name: "xmlRegexpErrCompile", scope: !2, file: !2, line: 398, type: !1706, scopeLine: 399, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4488)
!4488 = !{!4489, !4490, !4491, !4492}
!4489 = !DILocalVariable(name: "ctxt", arg: 1, scope: !4487, file: !2, line: 398, type: !1483)
!4490 = !DILocalVariable(name: "extra", arg: 2, scope: !4487, file: !2, line: 398, type: !1482)
!4491 = !DILocalVariable(name: "regexp", scope: !4487, file: !2, line: 400, type: !1482)
!4492 = !DILocalVariable(name: "idx", scope: !4487, file: !2, line: 401, type: !1306)
!4493 = !DILocation(line: 398, column: 41, scope: !4487)
!4494 = !DILocation(line: 398, column: 59, scope: !4487)
!4495 = !DILocation(line: 400, column: 5, scope: !4487)
!4496 = !DILocation(line: 400, column: 17, scope: !4487)
!4497 = !DILocation(line: 401, column: 5, scope: !4487)
!4498 = !DILocation(line: 401, column: 9, scope: !4487)
!4499 = !DILocation(line: 403, column: 9, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4487, file: !2, line: 403, column: 9)
!4501 = !DILocation(line: 403, column: 14, scope: !4500)
!4502 = !DILocation(line: 403, column: 9, scope: !4487)
!4503 = !DILocation(line: 404, column: 33, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4500, file: !2, line: 403, column: 23)
!4505 = !DILocation(line: 404, column: 39, scope: !4504)
!4506 = !DILocation(line: 404, column: 16, scope: !4504)
!4507 = !DILocation(line: 405, column: 8, scope: !4504)
!4508 = !DILocation(line: 405, column: 14, scope: !4504)
!4509 = !DILocation(line: 405, column: 20, scope: !4504)
!4510 = !DILocation(line: 405, column: 26, scope: !4504)
!4511 = !DILocation(line: 405, column: 18, scope: !4504)
!4512 = !DILocation(line: 405, column: 6, scope: !4504)
!4513 = !DILocation(line: 406, column: 2, scope: !4504)
!4514 = !DILocation(line: 406, column: 8, scope: !4504)
!4515 = !DILocation(line: 406, column: 14, scope: !4504)
!4516 = !DILocation(line: 407, column: 5, scope: !4504)
!4517 = !DILocation(line: 409, column: 57, scope: !4487)
!4518 = !DILocation(line: 410, column: 7, scope: !4487)
!4519 = !DILocation(line: 410, column: 21, scope: !4487)
!4520 = !DILocation(line: 411, column: 34, scope: !4487)
!4521 = !DILocation(line: 408, column: 5, scope: !4487)
!4522 = !DILocation(line: 412, column: 1, scope: !4487)
!4523 = distinct !DISubprogram(name: "xmlRegFreeParserCtxt", scope: !2, file: !2, line: 939, type: !4524, scopeLine: 939, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4526)
!4524 = !DISubroutineType(types: !4525)
!4525 = !{null, !1483}
!4526 = !{!4527, !4528}
!4527 = !DILocalVariable(name: "ctxt", arg: 1, scope: !4523, file: !2, line: 939, type: !1483)
!4528 = !DILocalVariable(name: "i", scope: !4523, file: !2, line: 940, type: !1306)
!4529 = !DILocation(line: 939, column: 42, scope: !4523)
!4530 = !DILocation(line: 940, column: 5, scope: !4523)
!4531 = !DILocation(line: 940, column: 9, scope: !4523)
!4532 = !DILocation(line: 941, column: 9, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4523, file: !2, line: 941, column: 9)
!4534 = !DILocation(line: 941, column: 14, scope: !4533)
!4535 = !DILocation(line: 941, column: 9, scope: !4523)
!4536 = !DILocation(line: 942, column: 2, scope: !4533)
!4537 = !DILocation(line: 944, column: 9, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4523, file: !2, line: 944, column: 9)
!4539 = !DILocation(line: 944, column: 15, scope: !4538)
!4540 = !DILocation(line: 944, column: 22, scope: !4538)
!4541 = !DILocation(line: 944, column: 9, scope: !4523)
!4542 = !DILocation(line: 945, column: 2, scope: !4538)
!4543 = !DILocation(line: 945, column: 10, scope: !4538)
!4544 = !DILocation(line: 945, column: 16, scope: !4538)
!4545 = !DILocation(line: 946, column: 9, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4523, file: !2, line: 946, column: 9)
!4547 = !DILocation(line: 946, column: 15, scope: !4546)
!4548 = !DILocation(line: 946, column: 22, scope: !4546)
!4549 = !DILocation(line: 946, column: 9, scope: !4523)
!4550 = !DILocation(line: 947, column: 9, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4552, file: !2, line: 947, column: 2)
!4552 = distinct !DILexicalBlock(scope: !4546, file: !2, line: 946, column: 31)
!4553 = !DILocation(line: 947, column: 7, scope: !4551)
!4554 = !DILocation(line: 947, column: 13, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4551, file: !2, line: 947, column: 2)
!4556 = !DILocation(line: 947, column: 17, scope: !4555)
!4557 = !DILocation(line: 947, column: 23, scope: !4555)
!4558 = !DILocation(line: 947, column: 15, scope: !4555)
!4559 = !DILocation(line: 947, column: 2, scope: !4551)
!4560 = !DILocation(line: 948, column: 22, scope: !4555)
!4561 = !DILocation(line: 948, column: 28, scope: !4555)
!4562 = !DILocation(line: 948, column: 35, scope: !4555)
!4563 = !DILocation(line: 948, column: 6, scope: !4555)
!4564 = !DILocation(line: 947, column: 33, scope: !4555)
!4565 = !DILocation(line: 947, column: 2, scope: !4555)
!4566 = distinct !{!4566, !4559, !4567, !1794}
!4567 = !DILocation(line: 948, column: 37, scope: !4551)
!4568 = !DILocation(line: 949, column: 2, scope: !4552)
!4569 = !DILocation(line: 949, column: 10, scope: !4552)
!4570 = !DILocation(line: 949, column: 16, scope: !4552)
!4571 = !DILocation(line: 950, column: 5, scope: !4552)
!4572 = !DILocation(line: 951, column: 9, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4523, file: !2, line: 951, column: 9)
!4574 = !DILocation(line: 951, column: 15, scope: !4573)
!4575 = !{!1724, !1528, i64 64}
!4576 = !DILocation(line: 951, column: 21, scope: !4573)
!4577 = !DILocation(line: 951, column: 9, scope: !4523)
!4578 = !DILocation(line: 952, column: 9, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !2, line: 952, column: 2)
!4580 = distinct !DILexicalBlock(scope: !4573, file: !2, line: 951, column: 30)
!4581 = !DILocation(line: 952, column: 7, scope: !4579)
!4582 = !DILocation(line: 952, column: 13, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4579, file: !2, line: 952, column: 2)
!4584 = !DILocation(line: 952, column: 17, scope: !4583)
!4585 = !DILocation(line: 952, column: 23, scope: !4583)
!4586 = !{!1724, !1546, i64 60}
!4587 = !DILocation(line: 952, column: 15, scope: !4583)
!4588 = !DILocation(line: 952, column: 2, scope: !4579)
!4589 = !DILocation(line: 953, column: 21, scope: !4583)
!4590 = !DILocation(line: 953, column: 27, scope: !4583)
!4591 = !DILocation(line: 953, column: 33, scope: !4583)
!4592 = !DILocation(line: 953, column: 6, scope: !4583)
!4593 = !DILocation(line: 952, column: 32, scope: !4583)
!4594 = !DILocation(line: 952, column: 2, scope: !4583)
!4595 = distinct !{!4595, !4588, !4596, !1794}
!4596 = !DILocation(line: 953, column: 35, scope: !4579)
!4597 = !DILocation(line: 954, column: 2, scope: !4580)
!4598 = !DILocation(line: 954, column: 10, scope: !4580)
!4599 = !DILocation(line: 954, column: 16, scope: !4580)
!4600 = !DILocation(line: 955, column: 5, scope: !4580)
!4601 = !DILocation(line: 956, column: 9, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4523, file: !2, line: 956, column: 9)
!4603 = !DILocation(line: 956, column: 15, scope: !4602)
!4604 = !{!1724, !1528, i64 96}
!4605 = !DILocation(line: 956, column: 24, scope: !4602)
!4606 = !DILocation(line: 956, column: 9, scope: !4523)
!4607 = !DILocation(line: 957, column: 2, scope: !4602)
!4608 = !DILocation(line: 957, column: 10, scope: !4602)
!4609 = !DILocation(line: 957, column: 16, scope: !4602)
!4610 = !DILocation(line: 958, column: 5, scope: !4523)
!4611 = !DILocation(line: 958, column: 13, scope: !4523)
!4612 = !DILocation(line: 959, column: 1, scope: !4523)
!4613 = distinct !DISubprogram(name: "xmlFAEliminateEpsilonTransitions", scope: !2, file: !2, line: 1960, type: !4524, scopeLine: 1960, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !4614)
!4614 = !{!4615, !4616, !4617, !4618, !4619, !4620, !4632, !4641, !4643}
!4615 = !DILocalVariable(name: "ctxt", arg: 1, scope: !4613, file: !2, line: 1960, type: !1483)
!4616 = !DILocalVariable(name: "statenr", scope: !4613, file: !2, line: 1961, type: !1306)
!4617 = !DILocalVariable(name: "transnr", scope: !4613, file: !2, line: 1961, type: !1306)
!4618 = !DILocalVariable(name: "state", scope: !4613, file: !2, line: 1962, type: !1358)
!4619 = !DILocalVariable(name: "has_epsilon", scope: !4613, file: !2, line: 1963, type: !1306)
!4620 = !DILocalVariable(name: "newto", scope: !4621, file: !2, line: 2011, type: !1306)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !2, line: 2010, column: 47)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !2, line: 2010, column: 14)
!4623 = distinct !DILexicalBlock(scope: !4624, file: !2, line: 2004, column: 7)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !2, line: 2003, column: 36)
!4625 = distinct !DILexicalBlock(scope: !4626, file: !2, line: 2002, column: 10)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2, line: 2001, column: 55)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !2, line: 2001, column: 2)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !2, line: 2001, column: 2)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !2, line: 1993, column: 63)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !2, line: 1993, column: 5)
!4631 = distinct !DILexicalBlock(scope: !4613, file: !2, line: 1993, column: 5)
!4632 = !DILocalVariable(name: "trans", scope: !4633, file: !2, line: 2041, type: !1884)
!4633 = distinct !DILexicalBlock(scope: !4634, file: !2, line: 2040, column: 59)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !2, line: 2040, column: 6)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !2, line: 2040, column: 6)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !2, line: 2036, column: 55)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !2, line: 2036, column: 2)
!4638 = distinct !DILexicalBlock(scope: !4639, file: !2, line: 2036, column: 2)
!4639 = distinct !DILexicalBlock(scope: !4640, file: !2, line: 2035, column: 22)
!4640 = distinct !DILexicalBlock(scope: !4613, file: !2, line: 2035, column: 9)
!4641 = !DILocalVariable(name: "target", scope: !4642, file: !2, line: 2063, type: !1358)
!4642 = distinct !DILexicalBlock(scope: !4613, file: !2, line: 2062, column: 27)
!4643 = !DILocalVariable(name: "newto", scope: !4644, file: !2, line: 2072, type: !1306)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !2, line: 2071, column: 41)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !2, line: 2069, column: 10)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !2, line: 2068, column: 55)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !2, line: 2068, column: 2)
!4648 = distinct !DILexicalBlock(scope: !4642, file: !2, line: 2068, column: 2)
!4649 = !DILocation(line: 1960, column: 54, scope: !4613)
!4650 = !DILocation(line: 1961, column: 5, scope: !4613)
!4651 = !DILocation(line: 1961, column: 9, scope: !4613)
!4652 = !DILocation(line: 1961, column: 18, scope: !4613)
!4653 = !DILocation(line: 1962, column: 5, scope: !4613)
!4654 = !DILocation(line: 1962, column: 20, scope: !4613)
!4655 = !DILocation(line: 1963, column: 5, scope: !4613)
!4656 = !DILocation(line: 1963, column: 9, scope: !4613)
!4657 = !DILocation(line: 1965, column: 9, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4613, file: !2, line: 1965, column: 9)
!4659 = !DILocation(line: 1965, column: 15, scope: !4658)
!4660 = !DILocation(line: 1965, column: 22, scope: !4658)
!4661 = !DILocation(line: 1965, column: 9, scope: !4613)
!4662 = !DILocation(line: 1965, column: 31, scope: !4658)
!4663 = !DILocation(line: 1971, column: 44, scope: !4613)
!4664 = !DILocation(line: 1971, column: 5, scope: !4613)
!4665 = !DILocation(line: 1972, column: 18, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4613, file: !2, line: 1972, column: 5)
!4667 = !DILocation(line: 1972, column: 10, scope: !4666)
!4668 = !DILocation(line: 1972, column: 22, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4666, file: !2, line: 1972, column: 5)
!4670 = !DILocation(line: 1972, column: 32, scope: !4669)
!4671 = !DILocation(line: 1972, column: 38, scope: !4669)
!4672 = !DILocation(line: 1972, column: 30, scope: !4669)
!4673 = !DILocation(line: 1972, column: 5, scope: !4666)
!4674 = !DILocation(line: 1973, column: 10, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4669, file: !2, line: 1972, column: 58)
!4676 = !DILocation(line: 1973, column: 16, scope: !4675)
!4677 = !DILocation(line: 1973, column: 23, scope: !4675)
!4678 = !DILocation(line: 1973, column: 8, scope: !4675)
!4679 = !DILocation(line: 1974, column: 7, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4675, file: !2, line: 1974, column: 6)
!4681 = !DILocation(line: 1974, column: 13, scope: !4680)
!4682 = !DILocation(line: 1974, column: 22, scope: !4680)
!4683 = !DILocation(line: 1974, column: 26, scope: !4680)
!4684 = !DILocation(line: 1974, column: 33, scope: !4680)
!4685 = !DILocation(line: 1974, column: 38, scope: !4680)
!4686 = !DILocation(line: 1974, column: 6, scope: !4675)
!4687 = !DILocation(line: 1978, column: 22, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4680, file: !2, line: 1974, column: 68)
!4689 = !DILocation(line: 1978, column: 6, scope: !4688)
!4690 = !DILocation(line: 1979, column: 6, scope: !4688)
!4691 = !DILocation(line: 1979, column: 12, scope: !4688)
!4692 = !DILocation(line: 1979, column: 19, scope: !4688)
!4693 = !DILocation(line: 1979, column: 28, scope: !4688)
!4694 = !DILocation(line: 1980, column: 2, scope: !4688)
!4695 = !DILocation(line: 1981, column: 5, scope: !4675)
!4696 = !DILocation(line: 1972, column: 54, scope: !4669)
!4697 = !DILocation(line: 1972, column: 5, scope: !4669)
!4698 = distinct !{!4698, !4673, !4699, !1794}
!4699 = !DILocation(line: 1981, column: 5, scope: !4666)
!4700 = !DILocation(line: 1983, column: 17, scope: !4613)
!4701 = !DILocation(line: 1993, column: 20, scope: !4631)
!4702 = !DILocation(line: 1993, column: 26, scope: !4631)
!4703 = !DILocation(line: 1993, column: 35, scope: !4631)
!4704 = !DILocation(line: 1993, column: 18, scope: !4631)
!4705 = !DILocation(line: 1993, column: 10, scope: !4631)
!4706 = !DILocation(line: 1993, column: 39, scope: !4630)
!4707 = !DILocation(line: 1993, column: 47, scope: !4630)
!4708 = !DILocation(line: 1993, column: 5, scope: !4631)
!4709 = !DILocation(line: 1994, column: 10, scope: !4629)
!4710 = !DILocation(line: 1994, column: 16, scope: !4629)
!4711 = !DILocation(line: 1994, column: 23, scope: !4629)
!4712 = !DILocation(line: 1994, column: 8, scope: !4629)
!4713 = !DILocation(line: 1995, column: 6, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4629, file: !2, line: 1995, column: 6)
!4715 = !DILocation(line: 1995, column: 12, scope: !4714)
!4716 = !DILocation(line: 1995, column: 6, scope: !4629)
!4717 = !DILocation(line: 1996, column: 6, scope: !4714)
!4718 = !DILocation(line: 1997, column: 7, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4629, file: !2, line: 1997, column: 6)
!4720 = !DILocation(line: 1997, column: 14, scope: !4719)
!4721 = !DILocation(line: 1997, column: 22, scope: !4719)
!4722 = !DILocation(line: 1997, column: 28, scope: !4719)
!4723 = !DILocation(line: 1998, column: 7, scope: !4719)
!4724 = !DILocation(line: 1998, column: 14, scope: !4719)
!4725 = !DILocation(line: 1998, column: 19, scope: !4719)
!4726 = !DILocation(line: 1997, column: 6, scope: !4629)
!4727 = !DILocation(line: 1999, column: 6, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4719, file: !2, line: 1998, column: 47)
!4729 = !DILocation(line: 1999, column: 13, scope: !4728)
!4730 = !DILocation(line: 1999, column: 18, scope: !4728)
!4731 = !DILocation(line: 2000, column: 2, scope: !4728)
!4732 = !DILocation(line: 2001, column: 15, scope: !4628)
!4733 = !DILocation(line: 2001, column: 7, scope: !4628)
!4734 = !DILocation(line: 2001, column: 19, scope: !4627)
!4735 = !DILocation(line: 2001, column: 29, scope: !4627)
!4736 = !DILocation(line: 2001, column: 36, scope: !4627)
!4737 = !DILocation(line: 2001, column: 27, scope: !4627)
!4738 = !DILocation(line: 2001, column: 2, scope: !4628)
!4739 = !DILocation(line: 2002, column: 11, scope: !4625)
!4740 = !DILocation(line: 2002, column: 18, scope: !4625)
!4741 = !DILocation(line: 2002, column: 24, scope: !4625)
!4742 = !DILocation(line: 2002, column: 33, scope: !4625)
!4743 = !DILocation(line: 2002, column: 38, scope: !4625)
!4744 = !DILocation(line: 2002, column: 47, scope: !4625)
!4745 = !DILocation(line: 2003, column: 4, scope: !4625)
!4746 = !DILocation(line: 2003, column: 11, scope: !4625)
!4747 = !DILocation(line: 2003, column: 17, scope: !4625)
!4748 = !DILocation(line: 2003, column: 26, scope: !4625)
!4749 = !DILocation(line: 2003, column: 29, scope: !4625)
!4750 = !DILocation(line: 2002, column: 10, scope: !4626)
!4751 = !DILocation(line: 2004, column: 7, scope: !4623)
!4752 = !DILocation(line: 2004, column: 14, scope: !4623)
!4753 = !DILocation(line: 2004, column: 20, scope: !4623)
!4754 = !DILocation(line: 2004, column: 29, scope: !4623)
!4755 = !DILocation(line: 2004, column: 35, scope: !4623)
!4756 = !DILocation(line: 2004, column: 32, scope: !4623)
!4757 = !DILocation(line: 2004, column: 7, scope: !4624)
!4758 = !DILocation(line: 2005, column: 7, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4623, file: !2, line: 2004, column: 44)
!4760 = !DILocation(line: 2005, column: 14, scope: !4759)
!4761 = !DILocation(line: 2005, column: 20, scope: !4759)
!4762 = !DILocation(line: 2005, column: 29, scope: !4759)
!4763 = !DILocation(line: 2005, column: 32, scope: !4759)
!4764 = !DILocation(line: 2010, column: 3, scope: !4759)
!4765 = !DILocation(line: 2010, column: 14, scope: !4622)
!4766 = !DILocation(line: 2010, column: 21, scope: !4622)
!4767 = !DILocation(line: 2010, column: 27, scope: !4622)
!4768 = !DILocation(line: 2010, column: 36, scope: !4622)
!4769 = !DILocation(line: 2010, column: 42, scope: !4622)
!4770 = !DILocation(line: 2010, column: 14, scope: !4623)
!4771 = !DILocation(line: 2011, column: 7, scope: !4621)
!4772 = !DILocation(line: 2011, column: 11, scope: !4621)
!4773 = !DILocation(line: 2011, column: 19, scope: !4621)
!4774 = !DILocation(line: 2011, column: 26, scope: !4621)
!4775 = !DILocation(line: 2011, column: 32, scope: !4621)
!4776 = !DILocation(line: 2011, column: 41, scope: !4621)
!4777 = !DILocation(line: 2017, column: 19, scope: !4621)
!4778 = !DILocation(line: 2018, column: 7, scope: !4621)
!4779 = !DILocation(line: 2018, column: 14, scope: !4621)
!4780 = !DILocation(line: 2018, column: 20, scope: !4621)
!4781 = !DILocation(line: 2018, column: 29, scope: !4621)
!4782 = !DILocation(line: 2018, column: 32, scope: !4621)
!4783 = !DILocation(line: 2019, column: 7, scope: !4621)
!4784 = !DILocation(line: 2019, column: 14, scope: !4621)
!4785 = !DILocation(line: 2019, column: 19, scope: !4621)
!4786 = !DILocation(line: 2020, column: 37, scope: !4621)
!4787 = !DILocation(line: 2020, column: 43, scope: !4621)
!4788 = !DILocation(line: 2021, column: 11, scope: !4621)
!4789 = !DILocation(line: 2021, column: 18, scope: !4621)
!4790 = !DILocation(line: 2021, column: 25, scope: !4621)
!4791 = !DILocation(line: 2021, column: 31, scope: !4621)
!4792 = !DILocation(line: 2021, column: 40, scope: !4621)
!4793 = !DILocation(line: 2020, column: 7, scope: !4621)
!4794 = !DILocation(line: 2022, column: 7, scope: !4621)
!4795 = !DILocation(line: 2022, column: 14, scope: !4621)
!4796 = !DILocation(line: 2022, column: 19, scope: !4621)
!4797 = !DILocation(line: 2028, column: 10, scope: !4622)
!4798 = !DILocation(line: 2028, column: 10, scope: !4621)
!4799 = !DILocation(line: 2029, column: 6, scope: !4624)
!4800 = !DILocation(line: 2030, column: 2, scope: !4626)
!4801 = !DILocation(line: 2001, column: 51, scope: !4627)
!4802 = !DILocation(line: 2001, column: 2, scope: !4627)
!4803 = distinct !{!4803, !4738, !4804, !1794}
!4804 = !DILocation(line: 2030, column: 2, scope: !4628)
!4805 = !DILocation(line: 2031, column: 5, scope: !4629)
!4806 = !DILocation(line: 1993, column: 59, scope: !4630)
!4807 = !DILocation(line: 1993, column: 5, scope: !4630)
!4808 = distinct !{!4808, !4708, !4809, !1794}
!4809 = !DILocation(line: 2031, column: 5, scope: !4631)
!4810 = !DILocation(line: 2035, column: 9, scope: !4640)
!4811 = !DILocation(line: 2035, column: 9, scope: !4613)
!4812 = !DILocation(line: 2036, column: 15, scope: !4638)
!4813 = !DILocation(line: 2036, column: 7, scope: !4638)
!4814 = !DILocation(line: 2036, column: 19, scope: !4637)
!4815 = !DILocation(line: 2036, column: 29, scope: !4637)
!4816 = !DILocation(line: 2036, column: 35, scope: !4637)
!4817 = !DILocation(line: 2036, column: 27, scope: !4637)
!4818 = !DILocation(line: 2036, column: 2, scope: !4638)
!4819 = !DILocation(line: 2037, column: 14, scope: !4636)
!4820 = !DILocation(line: 2037, column: 20, scope: !4636)
!4821 = !DILocation(line: 2037, column: 27, scope: !4636)
!4822 = !DILocation(line: 2037, column: 12, scope: !4636)
!4823 = !DILocation(line: 2038, column: 10, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4636, file: !2, line: 2038, column: 10)
!4825 = !DILocation(line: 2038, column: 16, scope: !4824)
!4826 = !DILocation(line: 2038, column: 10, scope: !4636)
!4827 = !DILocation(line: 2039, column: 3, scope: !4824)
!4828 = !DILocation(line: 2040, column: 19, scope: !4635)
!4829 = !DILocation(line: 2040, column: 11, scope: !4635)
!4830 = !DILocation(line: 2040, column: 23, scope: !4634)
!4831 = !DILocation(line: 2040, column: 33, scope: !4634)
!4832 = !DILocation(line: 2040, column: 40, scope: !4634)
!4833 = !DILocation(line: 2040, column: 31, scope: !4634)
!4834 = !DILocation(line: 2040, column: 6, scope: !4635)
!4835 = !DILocation(line: 2041, column: 3, scope: !4633)
!4836 = !DILocation(line: 2041, column: 18, scope: !4633)
!4837 = !DILocation(line: 2041, column: 28, scope: !4633)
!4838 = !DILocation(line: 2041, column: 35, scope: !4633)
!4839 = !DILocation(line: 2041, column: 41, scope: !4633)
!4840 = !DILocation(line: 2042, column: 8, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4633, file: !2, line: 2042, column: 7)
!4842 = !DILocation(line: 2042, column: 15, scope: !4841)
!4843 = !DILocation(line: 2042, column: 20, scope: !4841)
!4844 = !DILocation(line: 2042, column: 29, scope: !4841)
!4845 = !DILocation(line: 2043, column: 8, scope: !4841)
!4846 = !DILocation(line: 2043, column: 15, scope: !4841)
!4847 = !DILocation(line: 2043, column: 21, scope: !4841)
!4848 = !DILocation(line: 2043, column: 26, scope: !4841)
!4849 = !DILocation(line: 2044, column: 8, scope: !4841)
!4850 = !DILocation(line: 2044, column: 15, scope: !4841)
!4851 = !DILocation(line: 2044, column: 18, scope: !4841)
!4852 = !DILocation(line: 2042, column: 7, scope: !4633)
!4853 = !DILocation(line: 2045, column: 7, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4841, file: !2, line: 2044, column: 25)
!4855 = !DILocation(line: 2045, column: 14, scope: !4854)
!4856 = !DILocation(line: 2045, column: 17, scope: !4854)
!4857 = !DILocation(line: 2046, column: 3, scope: !4854)
!4858 = !DILocation(line: 2047, column: 6, scope: !4634)
!4859 = !DILocation(line: 2047, column: 6, scope: !4633)
!4860 = !DILocation(line: 2040, column: 55, scope: !4634)
!4861 = !DILocation(line: 2040, column: 6, scope: !4634)
!4862 = distinct !{!4862, !4834, !4863, !1794}
!4863 = !DILocation(line: 2047, column: 6, scope: !4635)
!4864 = !DILocation(line: 2048, column: 2, scope: !4636)
!4865 = !DILocation(line: 2036, column: 51, scope: !4637)
!4866 = !DILocation(line: 2036, column: 2, scope: !4637)
!4867 = distinct !{!4867, !4818, !4868, !1794}
!4868 = !DILocation(line: 2048, column: 2, scope: !4638)
!4869 = !DILocation(line: 2049, column: 5, scope: !4639)
!4870 = !DILocation(line: 2054, column: 18, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4613, file: !2, line: 2054, column: 5)
!4872 = !DILocation(line: 2054, column: 10, scope: !4871)
!4873 = !DILocation(line: 2054, column: 22, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4871, file: !2, line: 2054, column: 5)
!4875 = !DILocation(line: 2054, column: 32, scope: !4874)
!4876 = !DILocation(line: 2054, column: 38, scope: !4874)
!4877 = !DILocation(line: 2054, column: 30, scope: !4874)
!4878 = !DILocation(line: 2054, column: 5, scope: !4871)
!4879 = !DILocation(line: 2055, column: 10, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4874, file: !2, line: 2054, column: 58)
!4881 = !DILocation(line: 2055, column: 16, scope: !4880)
!4882 = !DILocation(line: 2055, column: 23, scope: !4880)
!4883 = !DILocation(line: 2055, column: 8, scope: !4880)
!4884 = !DILocation(line: 2056, column: 6, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4880, file: !2, line: 2056, column: 6)
!4886 = !DILocation(line: 2056, column: 12, scope: !4885)
!4887 = !DILocation(line: 2056, column: 6, scope: !4880)
!4888 = !DILocation(line: 2057, column: 6, scope: !4885)
!4889 = !DILocation(line: 2057, column: 13, scope: !4885)
!4890 = !DILocation(line: 2057, column: 21, scope: !4885)
!4891 = !{!1985, !1529, i64 12}
!4892 = !DILocation(line: 2058, column: 5, scope: !4880)
!4893 = !DILocation(line: 2054, column: 54, scope: !4874)
!4894 = !DILocation(line: 2054, column: 5, scope: !4874)
!4895 = distinct !{!4895, !4878, !4896, !1794}
!4896 = !DILocation(line: 2058, column: 5, scope: !4871)
!4897 = !DILocation(line: 2059, column: 13, scope: !4613)
!4898 = !DILocation(line: 2059, column: 19, scope: !4613)
!4899 = !DILocation(line: 2059, column: 11, scope: !4613)
!4900 = !DILocation(line: 2060, column: 9, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4613, file: !2, line: 2060, column: 9)
!4902 = !DILocation(line: 2060, column: 15, scope: !4901)
!4903 = !DILocation(line: 2060, column: 9, scope: !4613)
!4904 = !DILocation(line: 2061, column: 2, scope: !4901)
!4905 = !DILocation(line: 2061, column: 9, scope: !4901)
!4906 = !DILocation(line: 2061, column: 17, scope: !4901)
!4907 = !DILocation(line: 2062, column: 5, scope: !4613)
!4908 = !DILocation(line: 2062, column: 12, scope: !4613)
!4909 = !DILocation(line: 2062, column: 18, scope: !4613)
!4910 = !DILocation(line: 2063, column: 2, scope: !4642)
!4911 = !DILocation(line: 2063, column: 17, scope: !4642)
!4912 = !DILocation(line: 2064, column: 2, scope: !4642)
!4913 = !DILocation(line: 2064, column: 9, scope: !4642)
!4914 = !DILocation(line: 2064, column: 17, scope: !4642)
!4915 = !DILocation(line: 2068, column: 15, scope: !4648)
!4916 = !DILocation(line: 2068, column: 7, scope: !4648)
!4917 = !DILocation(line: 2068, column: 19, scope: !4647)
!4918 = !DILocation(line: 2068, column: 29, scope: !4647)
!4919 = !DILocation(line: 2068, column: 36, scope: !4647)
!4920 = !DILocation(line: 2068, column: 27, scope: !4647)
!4921 = !DILocation(line: 2068, column: 2, scope: !4648)
!4922 = !DILocation(line: 2069, column: 11, scope: !4645)
!4923 = !DILocation(line: 2069, column: 18, scope: !4645)
!4924 = !DILocation(line: 2069, column: 24, scope: !4645)
!4925 = !DILocation(line: 2069, column: 33, scope: !4645)
!4926 = !DILocation(line: 2069, column: 36, scope: !4645)
!4927 = !DILocation(line: 2069, column: 42, scope: !4645)
!4928 = !DILocation(line: 2070, column: 5, scope: !4645)
!4929 = !DILocation(line: 2070, column: 12, scope: !4645)
!4930 = !DILocation(line: 2070, column: 18, scope: !4645)
!4931 = !DILocation(line: 2070, column: 27, scope: !4645)
!4932 = !DILocation(line: 2070, column: 32, scope: !4645)
!4933 = !DILocation(line: 2070, column: 41, scope: !4645)
!4934 = !DILocation(line: 2071, column: 5, scope: !4645)
!4935 = !DILocation(line: 2071, column: 12, scope: !4645)
!4936 = !DILocation(line: 2071, column: 18, scope: !4645)
!4937 = !DILocation(line: 2071, column: 27, scope: !4645)
!4938 = !DILocation(line: 2071, column: 33, scope: !4645)
!4939 = !DILocation(line: 2069, column: 10, scope: !4646)
!4940 = !DILocation(line: 2072, column: 3, scope: !4644)
!4941 = !DILocation(line: 2072, column: 7, scope: !4644)
!4942 = !DILocation(line: 2072, column: 15, scope: !4644)
!4943 = !DILocation(line: 2072, column: 22, scope: !4644)
!4944 = !DILocation(line: 2072, column: 28, scope: !4644)
!4945 = !DILocation(line: 2072, column: 37, scope: !4644)
!4946 = !DILocation(line: 2074, column: 7, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4644, file: !2, line: 2074, column: 7)
!4948 = !DILocation(line: 2074, column: 13, scope: !4947)
!4949 = !DILocation(line: 2074, column: 20, scope: !4947)
!4950 = !DILocation(line: 2074, column: 27, scope: !4947)
!4951 = !DILocation(line: 2074, column: 7, scope: !4644)
!4952 = !DILocation(line: 2075, column: 7, scope: !4947)
!4953 = !DILocation(line: 2076, column: 7, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4644, file: !2, line: 2076, column: 7)
!4955 = !DILocation(line: 2076, column: 13, scope: !4954)
!4956 = !DILocation(line: 2076, column: 20, scope: !4954)
!4957 = !DILocation(line: 2076, column: 28, scope: !4954)
!4958 = !DILocation(line: 2076, column: 36, scope: !4954)
!4959 = !DILocation(line: 2076, column: 7, scope: !4644)
!4960 = !DILocation(line: 2077, column: 7, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4954, file: !2, line: 2076, column: 63)
!4962 = !DILocation(line: 2077, column: 13, scope: !4961)
!4963 = !DILocation(line: 2077, column: 20, scope: !4961)
!4964 = !DILocation(line: 2077, column: 28, scope: !4961)
!4965 = !DILocation(line: 2077, column: 36, scope: !4961)
!4966 = !DILocation(line: 2078, column: 16, scope: !4961)
!4967 = !DILocation(line: 2078, column: 22, scope: !4961)
!4968 = !DILocation(line: 2078, column: 29, scope: !4961)
!4969 = !DILocation(line: 2078, column: 14, scope: !4961)
!4970 = !DILocation(line: 2079, column: 3, scope: !4961)
!4971 = !DILocation(line: 2080, column: 6, scope: !4645)
!4972 = !DILocation(line: 2080, column: 6, scope: !4644)
!4973 = !DILocation(line: 2081, column: 2, scope: !4646)
!4974 = !DILocation(line: 2068, column: 51, scope: !4647)
!4975 = !DILocation(line: 2068, column: 2, scope: !4647)
!4976 = distinct !{!4976, !4921, !4977, !1794}
!4977 = !DILocation(line: 2081, column: 2, scope: !4648)
!4978 = !DILocation(line: 2086, column: 6, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4642, file: !2, line: 2086, column: 6)
!4980 = !DILocation(line: 2086, column: 13, scope: !4979)
!4981 = !DILocation(line: 2086, column: 6, scope: !4642)
!4982 = !DILocation(line: 2087, column: 19, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4984, file: !2, line: 2087, column: 6)
!4984 = distinct !DILexicalBlock(scope: !4979, file: !2, line: 2086, column: 22)
!4985 = !DILocation(line: 2087, column: 11, scope: !4983)
!4986 = !DILocation(line: 2087, column: 23, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4983, file: !2, line: 2087, column: 6)
!4988 = !DILocation(line: 2087, column: 33, scope: !4987)
!4989 = !DILocation(line: 2087, column: 39, scope: !4987)
!4990 = !DILocation(line: 2087, column: 31, scope: !4987)
!4991 = !DILocation(line: 2087, column: 6, scope: !4983)
!4992 = !DILocation(line: 2088, column: 11, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4987, file: !2, line: 2087, column: 59)
!4994 = !DILocation(line: 2088, column: 17, scope: !4993)
!4995 = !DILocation(line: 2088, column: 24, scope: !4993)
!4996 = !DILocation(line: 2088, column: 9, scope: !4993)
!4997 = !DILocation(line: 2089, column: 8, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4993, file: !2, line: 2089, column: 7)
!4999 = !DILocation(line: 2089, column: 14, scope: !4998)
!5000 = !DILocation(line: 2089, column: 23, scope: !4998)
!5001 = !DILocation(line: 2089, column: 27, scope: !4998)
!5002 = !DILocation(line: 2089, column: 34, scope: !4998)
!5003 = !DILocation(line: 2089, column: 42, scope: !4998)
!5004 = !DILocation(line: 2089, column: 7, scope: !4993)
!5005 = !DILocation(line: 2091, column: 16, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4998, file: !2, line: 2090, column: 28)
!5007 = !DILocation(line: 2091, column: 14, scope: !5006)
!5008 = !DILocation(line: 2092, column: 7, scope: !5006)
!5009 = !DILocation(line: 2094, column: 6, scope: !4993)
!5010 = !DILocation(line: 2087, column: 55, scope: !4987)
!5011 = !DILocation(line: 2087, column: 6, scope: !4987)
!5012 = distinct !{!5012, !4991, !5013, !1794}
!5013 = !DILocation(line: 2094, column: 6, scope: !4983)
!5014 = !DILocation(line: 2095, column: 2, scope: !4984)
!5015 = !DILocation(line: 2096, column: 10, scope: !4642)
!5016 = !DILocation(line: 2096, column: 8, scope: !4642)
!5017 = !DILocation(line: 2097, column: 5, scope: !4613)
!5018 = distinct !{!5018, !4907, !5017, !1794}
!5019 = !DILocation(line: 2098, column: 18, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !4613, file: !2, line: 2098, column: 5)
!5021 = !DILocation(line: 2098, column: 10, scope: !5020)
!5022 = !DILocation(line: 2098, column: 22, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5020, file: !2, line: 2098, column: 5)
!5024 = !DILocation(line: 2098, column: 32, scope: !5023)
!5025 = !DILocation(line: 2098, column: 38, scope: !5023)
!5026 = !DILocation(line: 2098, column: 30, scope: !5023)
!5027 = !DILocation(line: 2098, column: 5, scope: !5020)
!5028 = !DILocation(line: 2099, column: 10, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5023, file: !2, line: 2098, column: 58)
!5030 = !DILocation(line: 2099, column: 16, scope: !5029)
!5031 = !DILocation(line: 2099, column: 23, scope: !5029)
!5032 = !DILocation(line: 2099, column: 8, scope: !5029)
!5033 = !DILocation(line: 2100, column: 7, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5029, file: !2, line: 2100, column: 6)
!5035 = !DILocation(line: 2100, column: 13, scope: !5034)
!5036 = !DILocation(line: 2100, column: 22, scope: !5034)
!5037 = !DILocation(line: 2100, column: 26, scope: !5034)
!5038 = !DILocation(line: 2100, column: 33, scope: !5034)
!5039 = !DILocation(line: 2100, column: 41, scope: !5034)
!5040 = !DILocation(line: 2100, column: 6, scope: !5029)
!5041 = !DILocation(line: 2104, column: 22, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5034, file: !2, line: 2100, column: 69)
!5043 = !DILocation(line: 2104, column: 6, scope: !5042)
!5044 = !DILocation(line: 2105, column: 6, scope: !5042)
!5045 = !DILocation(line: 2105, column: 12, scope: !5042)
!5046 = !DILocation(line: 2105, column: 19, scope: !5042)
!5047 = !DILocation(line: 2105, column: 28, scope: !5042)
!5048 = !DILocation(line: 2106, column: 2, scope: !5042)
!5049 = !DILocation(line: 2107, column: 5, scope: !5029)
!5050 = !DILocation(line: 2098, column: 54, scope: !5023)
!5051 = !DILocation(line: 2098, column: 5, scope: !5023)
!5052 = distinct !{!5052, !5027, !5053, !1794}
!5053 = !DILocation(line: 2107, column: 5, scope: !5020)
!5054 = !DILocation(line: 2109, column: 1, scope: !4613)
!5055 = distinct !DISubprogram(name: "xmlRegEpxFromParse", scope: !2, file: !2, line: 456, type: !5056, scopeLine: 456, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !5058)
!5056 = !DISubroutineType(types: !5057)
!5057 = !{!1345, !1483}
!5058 = !{!5059, !5060, !5061, !5064, !5065, !5066, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5077, !5078, !5079, !5080, !5081, !5082}
!5059 = !DILocalVariable(name: "ctxt", arg: 1, scope: !5055, file: !2, line: 456, type: !1483)
!5060 = !DILocalVariable(name: "ret", scope: !5055, file: !2, line: 457, type: !1345)
!5061 = !DILocalVariable(name: "i", scope: !5062, file: !2, line: 484, type: !1306)
!5062 = distinct !DILexicalBlock(scope: !5063, file: !2, line: 483, column: 46)
!5063 = distinct !DILexicalBlock(scope: !5055, file: !2, line: 478, column: 9)
!5064 = !DILocalVariable(name: "j", scope: !5062, file: !2, line: 484, type: !1306)
!5065 = !DILocalVariable(name: "nbstates", scope: !5062, file: !2, line: 484, type: !1306)
!5066 = !DILocalVariable(name: "nbatoms", scope: !5062, file: !2, line: 484, type: !1306)
!5067 = !DILocalVariable(name: "stateRemap", scope: !5062, file: !2, line: 485, type: !1419)
!5068 = !DILocalVariable(name: "stringRemap", scope: !5062, file: !2, line: 486, type: !1419)
!5069 = !DILocalVariable(name: "transitions", scope: !5062, file: !2, line: 487, type: !1419)
!5070 = !DILocalVariable(name: "transdata", scope: !5062, file: !2, line: 488, type: !1436)
!5071 = !DILocalVariable(name: "stringMap", scope: !5062, file: !2, line: 489, type: !1439)
!5072 = !DILocalVariable(name: "value", scope: !5062, file: !2, line: 490, type: !1351)
!5073 = !DILocalVariable(name: "stateno", scope: !5074, file: !2, line: 588, type: !1306)
!5074 = distinct !DILexicalBlock(scope: !5075, file: !2, line: 587, column: 36)
!5075 = distinct !DILexicalBlock(scope: !5076, file: !2, line: 587, column: 2)
!5076 = distinct !DILexicalBlock(scope: !5062, file: !2, line: 587, column: 2)
!5077 = !DILocalVariable(name: "atomno", scope: !5074, file: !2, line: 588, type: !1306)
!5078 = !DILocalVariable(name: "targetno", scope: !5074, file: !2, line: 588, type: !1306)
!5079 = !DILocalVariable(name: "prev", scope: !5074, file: !2, line: 588, type: !1306)
!5080 = !DILocalVariable(name: "state", scope: !5074, file: !2, line: 589, type: !1358)
!5081 = !DILocalVariable(name: "trans", scope: !5074, file: !2, line: 590, type: !1884)
!5082 = !DILabel(scope: !5055, name: "not_determ", file: !2, line: 689)
!5083 = !DILocation(line: 456, column: 40, scope: !5055)
!5084 = !DILocation(line: 457, column: 5, scope: !5055)
!5085 = !DILocation(line: 457, column: 18, scope: !5055)
!5086 = !DILocation(line: 459, column: 26, scope: !5055)
!5087 = !DILocation(line: 459, column: 9, scope: !5055)
!5088 = !DILocation(line: 460, column: 9, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5055, file: !2, line: 460, column: 9)
!5090 = !DILocation(line: 460, column: 13, scope: !5089)
!5091 = !DILocation(line: 460, column: 9, scope: !5055)
!5092 = !DILocation(line: 461, column: 21, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5089, file: !2, line: 460, column: 22)
!5094 = !DILocation(line: 461, column: 2, scope: !5093)
!5095 = !DILocation(line: 462, column: 2, scope: !5093)
!5096 = !DILocation(line: 464, column: 12, scope: !5055)
!5097 = !DILocation(line: 464, column: 5, scope: !5055)
!5098 = !DILocation(line: 465, column: 19, scope: !5055)
!5099 = !DILocation(line: 465, column: 25, scope: !5055)
!5100 = !DILocation(line: 465, column: 5, scope: !5055)
!5101 = !DILocation(line: 465, column: 10, scope: !5055)
!5102 = !DILocation(line: 465, column: 17, scope: !5055)
!5103 = !DILocation(line: 466, column: 21, scope: !5055)
!5104 = !DILocation(line: 466, column: 27, scope: !5055)
!5105 = !DILocation(line: 466, column: 5, scope: !5055)
!5106 = !DILocation(line: 466, column: 10, scope: !5055)
!5107 = !DILocation(line: 466, column: 19, scope: !5055)
!5108 = !DILocation(line: 467, column: 19, scope: !5055)
!5109 = !DILocation(line: 467, column: 25, scope: !5055)
!5110 = !DILocation(line: 467, column: 5, scope: !5055)
!5111 = !DILocation(line: 467, column: 10, scope: !5055)
!5112 = !DILocation(line: 467, column: 17, scope: !5055)
!5113 = !DILocation(line: 468, column: 20, scope: !5055)
!5114 = !DILocation(line: 468, column: 26, scope: !5055)
!5115 = !DILocation(line: 468, column: 5, scope: !5055)
!5116 = !DILocation(line: 468, column: 10, scope: !5055)
!5117 = !DILocation(line: 468, column: 18, scope: !5055)
!5118 = !DILocation(line: 469, column: 18, scope: !5055)
!5119 = !DILocation(line: 469, column: 24, scope: !5055)
!5120 = !DILocation(line: 469, column: 5, scope: !5055)
!5121 = !DILocation(line: 469, column: 10, scope: !5055)
!5122 = !DILocation(line: 469, column: 16, scope: !5055)
!5123 = !DILocation(line: 470, column: 23, scope: !5055)
!5124 = !DILocation(line: 470, column: 29, scope: !5055)
!5125 = !{!1724, !1546, i64 92}
!5126 = !DILocation(line: 470, column: 5, scope: !5055)
!5127 = !DILocation(line: 470, column: 10, scope: !5055)
!5128 = !DILocation(line: 470, column: 21, scope: !5055)
!5129 = !DILocation(line: 471, column: 21, scope: !5055)
!5130 = !DILocation(line: 471, column: 27, scope: !5055)
!5131 = !DILocation(line: 471, column: 5, scope: !5055)
!5132 = !DILocation(line: 471, column: 10, scope: !5055)
!5133 = !DILocation(line: 471, column: 19, scope: !5055)
!5134 = !DILocation(line: 472, column: 24, scope: !5055)
!5135 = !DILocation(line: 472, column: 30, scope: !5055)
!5136 = !DILocation(line: 472, column: 5, scope: !5055)
!5137 = !DILocation(line: 472, column: 10, scope: !5055)
!5138 = !DILocation(line: 472, column: 22, scope: !5055)
!5139 = !{!1545, !1546, i64 56}
!5140 = !DILocation(line: 473, column: 18, scope: !5055)
!5141 = !DILocation(line: 473, column: 24, scope: !5055)
!5142 = !{!1724, !1546, i64 112}
!5143 = !DILocation(line: 473, column: 5, scope: !5055)
!5144 = !DILocation(line: 473, column: 10, scope: !5055)
!5145 = !DILocation(line: 473, column: 16, scope: !5055)
!5146 = !{!1545, !1546, i64 60}
!5147 = !DILocation(line: 474, column: 9, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5055, file: !2, line: 474, column: 9)
!5149 = !DILocation(line: 474, column: 14, scope: !5148)
!5150 = !DILocation(line: 474, column: 26, scope: !5148)
!5151 = !DILocation(line: 474, column: 9, scope: !5055)
!5152 = !DILocation(line: 475, column: 32, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5148, file: !2, line: 474, column: 33)
!5154 = !DILocation(line: 475, column: 9, scope: !5153)
!5155 = !DILocation(line: 476, column: 5, scope: !5153)
!5156 = !DILocation(line: 478, column: 10, scope: !5063)
!5157 = !DILocation(line: 478, column: 15, scope: !5063)
!5158 = !DILocation(line: 478, column: 27, scope: !5063)
!5159 = !DILocation(line: 478, column: 33, scope: !5063)
!5160 = !DILocation(line: 479, column: 3, scope: !5063)
!5161 = !DILocation(line: 479, column: 8, scope: !5063)
!5162 = !DILocation(line: 479, column: 19, scope: !5063)
!5163 = !DILocation(line: 479, column: 25, scope: !5063)
!5164 = !DILocation(line: 480, column: 3, scope: !5063)
!5165 = !DILocation(line: 480, column: 9, scope: !5063)
!5166 = !DILocation(line: 480, column: 14, scope: !5063)
!5167 = !DILocation(line: 480, column: 20, scope: !5063)
!5168 = !DILocation(line: 481, column: 3, scope: !5063)
!5169 = !DILocation(line: 481, column: 8, scope: !5063)
!5170 = !DILocation(line: 481, column: 14, scope: !5063)
!5171 = !DILocation(line: 481, column: 23, scope: !5063)
!5172 = !DILocation(line: 482, column: 3, scope: !5063)
!5173 = !DILocation(line: 482, column: 8, scope: !5063)
!5174 = !DILocation(line: 482, column: 17, scope: !5063)
!5175 = !DILocation(line: 482, column: 26, scope: !5063)
!5176 = !DILocation(line: 483, column: 3, scope: !5063)
!5177 = !DILocation(line: 483, column: 8, scope: !5063)
!5178 = !DILocation(line: 483, column: 18, scope: !5063)
!5179 = !DILocation(line: 483, column: 23, scope: !5063)
!5180 = !DILocation(line: 478, column: 9, scope: !5055)
!5181 = !DILocation(line: 484, column: 2, scope: !5062)
!5182 = !DILocation(line: 484, column: 6, scope: !5062)
!5183 = !DILocation(line: 484, column: 9, scope: !5062)
!5184 = !DILocation(line: 484, column: 12, scope: !5062)
!5185 = !DILocation(line: 484, column: 26, scope: !5062)
!5186 = !DILocation(line: 485, column: 2, scope: !5062)
!5187 = !DILocation(line: 485, column: 7, scope: !5062)
!5188 = !DILocation(line: 486, column: 2, scope: !5062)
!5189 = !DILocation(line: 486, column: 7, scope: !5062)
!5190 = !DILocation(line: 487, column: 2, scope: !5062)
!5191 = !DILocation(line: 487, column: 7, scope: !5062)
!5192 = !DILocation(line: 488, column: 2, scope: !5062)
!5193 = !DILocation(line: 488, column: 9, scope: !5062)
!5194 = !DILocation(line: 489, column: 2, scope: !5062)
!5195 = !DILocation(line: 489, column: 12, scope: !5062)
!5196 = !DILocation(line: 490, column: 9, scope: !5062)
!5197 = !DILocation(line: 490, column: 18, scope: !5062)
!5198 = !DILocation(line: 500, column: 15, scope: !5062)
!5199 = !DILocation(line: 500, column: 25, scope: !5062)
!5200 = !DILocation(line: 500, column: 30, scope: !5062)
!5201 = !DILocation(line: 500, column: 39, scope: !5062)
!5202 = !DILocation(line: 500, column: 13, scope: !5062)
!5203 = !DILocation(line: 501, column: 6, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5062, file: !2, line: 501, column: 6)
!5205 = !DILocation(line: 501, column: 17, scope: !5204)
!5206 = !DILocation(line: 501, column: 6, scope: !5062)
!5207 = !DILocation(line: 502, column: 25, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5204, file: !2, line: 501, column: 26)
!5209 = !DILocation(line: 502, column: 6, scope: !5208)
!5210 = !DILocation(line: 503, column: 6, scope: !5208)
!5211 = !DILocation(line: 503, column: 14, scope: !5208)
!5212 = !DILocation(line: 504, column: 6, scope: !5208)
!5213 = !DILocation(line: 506, column: 9, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5062, file: !2, line: 506, column: 2)
!5215 = !DILocation(line: 506, column: 7, scope: !5214)
!5216 = !DILocation(line: 506, column: 13, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5214, file: !2, line: 506, column: 2)
!5218 = !DILocation(line: 506, column: 17, scope: !5217)
!5219 = !DILocation(line: 506, column: 22, scope: !5217)
!5220 = !DILocation(line: 506, column: 15, scope: !5217)
!5221 = !DILocation(line: 506, column: 2, scope: !5214)
!5222 = !DILocation(line: 507, column: 10, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5224, file: !2, line: 507, column: 10)
!5224 = distinct !DILexicalBlock(scope: !5217, file: !2, line: 506, column: 36)
!5225 = !DILocation(line: 507, column: 15, scope: !5223)
!5226 = !DILocation(line: 507, column: 22, scope: !5223)
!5227 = !DILocation(line: 507, column: 25, scope: !5223)
!5228 = !DILocation(line: 507, column: 10, scope: !5224)
!5229 = !DILocation(line: 508, column: 19, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5223, file: !2, line: 507, column: 34)
!5231 = !DILocation(line: 508, column: 3, scope: !5230)
!5232 = !DILocation(line: 508, column: 14, scope: !5230)
!5233 = !DILocation(line: 508, column: 17, scope: !5230)
!5234 = !DILocation(line: 509, column: 11, scope: !5230)
!5235 = !DILocation(line: 510, column: 6, scope: !5230)
!5236 = !DILocation(line: 511, column: 3, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5223, file: !2, line: 510, column: 13)
!5238 = !DILocation(line: 511, column: 14, scope: !5237)
!5239 = !DILocation(line: 511, column: 17, scope: !5237)
!5240 = !DILocation(line: 513, column: 2, scope: !5224)
!5241 = !DILocation(line: 506, column: 32, scope: !5217)
!5242 = !DILocation(line: 506, column: 2, scope: !5217)
!5243 = distinct !{!5243, !5221, !5244, !1794}
!5244 = !DILocation(line: 513, column: 2, scope: !5214)
!5245 = !DILocation(line: 517, column: 14, scope: !5062)
!5246 = !DILocation(line: 517, column: 24, scope: !5062)
!5247 = !DILocation(line: 517, column: 29, scope: !5062)
!5248 = !DILocation(line: 517, column: 37, scope: !5062)
!5249 = !DILocation(line: 517, column: 12, scope: !5062)
!5250 = !DILocation(line: 518, column: 6, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5062, file: !2, line: 518, column: 6)
!5252 = !DILocation(line: 518, column: 16, scope: !5251)
!5253 = !DILocation(line: 518, column: 6, scope: !5062)
!5254 = !DILocation(line: 519, column: 25, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5251, file: !2, line: 518, column: 25)
!5256 = !DILocation(line: 519, column: 6, scope: !5255)
!5257 = !DILocation(line: 520, column: 6, scope: !5255)
!5258 = !DILocation(line: 520, column: 14, scope: !5255)
!5259 = !DILocation(line: 521, column: 6, scope: !5255)
!5260 = !DILocation(line: 521, column: 14, scope: !5255)
!5261 = !DILocation(line: 522, column: 6, scope: !5255)
!5262 = !DILocation(line: 524, column: 16, scope: !5062)
!5263 = !DILocation(line: 524, column: 26, scope: !5062)
!5264 = !DILocation(line: 524, column: 31, scope: !5062)
!5265 = !DILocation(line: 524, column: 39, scope: !5062)
!5266 = !DILocation(line: 524, column: 14, scope: !5062)
!5267 = !DILocation(line: 525, column: 6, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5062, file: !2, line: 525, column: 6)
!5269 = !DILocation(line: 525, column: 18, scope: !5268)
!5270 = !DILocation(line: 525, column: 6, scope: !5062)
!5271 = !DILocation(line: 526, column: 25, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5268, file: !2, line: 525, column: 27)
!5273 = !DILocation(line: 526, column: 6, scope: !5272)
!5274 = !DILocation(line: 527, column: 6, scope: !5272)
!5275 = !DILocation(line: 527, column: 14, scope: !5272)
!5276 = !DILocation(line: 528, column: 6, scope: !5272)
!5277 = !DILocation(line: 528, column: 14, scope: !5272)
!5278 = !DILocation(line: 529, column: 6, scope: !5272)
!5279 = !DILocation(line: 529, column: 14, scope: !5272)
!5280 = !DILocation(line: 530, column: 6, scope: !5272)
!5281 = !DILocation(line: 532, column: 9, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5062, file: !2, line: 532, column: 2)
!5283 = !DILocation(line: 532, column: 7, scope: !5282)
!5284 = !DILocation(line: 532, column: 13, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5282, file: !2, line: 532, column: 2)
!5286 = !DILocation(line: 532, column: 17, scope: !5285)
!5287 = !DILocation(line: 532, column: 22, scope: !5285)
!5288 = !DILocation(line: 532, column: 15, scope: !5285)
!5289 = !DILocation(line: 532, column: 2, scope: !5282)
!5290 = !DILocation(line: 533, column: 11, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5292, file: !2, line: 533, column: 10)
!5292 = distinct !DILexicalBlock(scope: !5285, file: !2, line: 532, column: 35)
!5293 = !DILocation(line: 533, column: 16, scope: !5291)
!5294 = !DILocation(line: 533, column: 22, scope: !5291)
!5295 = !DILocation(line: 533, column: 26, scope: !5291)
!5296 = !DILocation(line: 533, column: 31, scope: !5291)
!5297 = !DILocation(line: 533, column: 53, scope: !5291)
!5298 = !DILocation(line: 534, column: 4, scope: !5291)
!5299 = !DILocation(line: 534, column: 9, scope: !5291)
!5300 = !DILocation(line: 534, column: 15, scope: !5291)
!5301 = !DILocation(line: 534, column: 19, scope: !5291)
!5302 = !DILocation(line: 534, column: 25, scope: !5291)
!5303 = !DILocation(line: 533, column: 10, scope: !5292)
!5304 = !DILocation(line: 535, column: 11, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5291, file: !2, line: 534, column: 52)
!5306 = !DILocation(line: 535, column: 16, scope: !5305)
!5307 = !DILocation(line: 535, column: 22, scope: !5305)
!5308 = !DILocation(line: 535, column: 26, scope: !5305)
!5309 = !DILocation(line: 535, column: 9, scope: !5305)
!5310 = !DILocation(line: 536, column: 24, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5305, file: !2, line: 536, column: 17)
!5312 = !DILocation(line: 536, column: 22, scope: !5311)
!5313 = !DILocation(line: 536, column: 28, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5311, file: !2, line: 536, column: 17)
!5315 = !DILocation(line: 536, column: 32, scope: !5314)
!5316 = !DILocation(line: 536, column: 30, scope: !5314)
!5317 = !DILocation(line: 536, column: 17, scope: !5311)
!5318 = !DILocation(line: 537, column: 23, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5320, file: !2, line: 537, column: 11)
!5320 = distinct !DILexicalBlock(scope: !5314, file: !2, line: 536, column: 45)
!5321 = !DILocation(line: 537, column: 33, scope: !5319)
!5322 = !DILocation(line: 537, column: 37, scope: !5319)
!5323 = !DILocation(line: 537, column: 11, scope: !5319)
!5324 = !DILocation(line: 537, column: 11, scope: !5320)
!5325 = !DILocation(line: 538, column: 21, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5319, file: !2, line: 537, column: 45)
!5327 = !DILocation(line: 538, column: 4, scope: !5326)
!5328 = !DILocation(line: 538, column: 16, scope: !5326)
!5329 = !DILocation(line: 538, column: 19, scope: !5326)
!5330 = !DILocation(line: 539, column: 4, scope: !5326)
!5331 = !DILocation(line: 541, column: 3, scope: !5320)
!5332 = !DILocation(line: 536, column: 41, scope: !5314)
!5333 = !DILocation(line: 536, column: 17, scope: !5314)
!5334 = distinct !{!5334, !5317, !5335, !1794}
!5335 = !DILocation(line: 541, column: 3, scope: !5311)
!5336 = !DILocation(line: 542, column: 7, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5305, file: !2, line: 542, column: 7)
!5338 = !DILocation(line: 542, column: 12, scope: !5337)
!5339 = !DILocation(line: 542, column: 9, scope: !5337)
!5340 = !DILocation(line: 542, column: 7, scope: !5305)
!5341 = !DILocation(line: 543, column: 24, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5337, file: !2, line: 542, column: 21)
!5343 = !DILocation(line: 543, column: 7, scope: !5342)
!5344 = !DILocation(line: 543, column: 19, scope: !5342)
!5345 = !DILocation(line: 543, column: 22, scope: !5342)
!5346 = !DILocation(line: 544, column: 38, scope: !5342)
!5347 = !DILocation(line: 544, column: 28, scope: !5342)
!5348 = !DILocation(line: 544, column: 7, scope: !5342)
!5349 = !DILocation(line: 544, column: 17, scope: !5342)
!5350 = !DILocation(line: 544, column: 26, scope: !5342)
!5351 = !DILocation(line: 545, column: 11, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5342, file: !2, line: 545, column: 11)
!5353 = !DILocation(line: 545, column: 21, scope: !5352)
!5354 = !DILocation(line: 545, column: 30, scope: !5352)
!5355 = !DILocation(line: 545, column: 11, scope: !5342)
!5356 = !DILocation(line: 546, column: 11, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5358, file: !2, line: 546, column: 4)
!5358 = distinct !DILexicalBlock(scope: !5352, file: !2, line: 545, column: 39)
!5359 = !DILocation(line: 546, column: 9, scope: !5357)
!5360 = !DILocation(line: 546, column: 15, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5357, file: !2, line: 546, column: 4)
!5362 = !DILocation(line: 546, column: 19, scope: !5361)
!5363 = !DILocation(line: 546, column: 17, scope: !5361)
!5364 = !DILocation(line: 546, column: 4, scope: !5357)
!5365 = !DILocation(line: 547, column: 8, scope: !5361)
!5366 = !DILocation(line: 547, column: 16, scope: !5361)
!5367 = !DILocation(line: 547, column: 26, scope: !5361)
!5368 = !DILocation(line: 546, column: 28, scope: !5361)
!5369 = !DILocation(line: 546, column: 4, scope: !5361)
!5370 = distinct !{!5370, !5364, !5371, !1794}
!5371 = !DILocation(line: 547, column: 28, scope: !5357)
!5372 = !DILocation(line: 548, column: 4, scope: !5358)
!5373 = !DILocation(line: 548, column: 12, scope: !5358)
!5374 = !DILocation(line: 549, column: 4, scope: !5358)
!5375 = !DILocation(line: 549, column: 12, scope: !5358)
!5376 = !DILocation(line: 550, column: 4, scope: !5358)
!5377 = !DILocation(line: 550, column: 12, scope: !5358)
!5378 = !DILocation(line: 551, column: 4, scope: !5358)
!5379 = !DILocation(line: 551, column: 12, scope: !5358)
!5380 = !DILocation(line: 552, column: 4, scope: !5358)
!5381 = !DILocation(line: 554, column: 14, scope: !5342)
!5382 = !DILocation(line: 555, column: 3, scope: !5342)
!5383 = !DILocation(line: 556, column: 6, scope: !5305)
!5384 = !DILocation(line: 557, column: 3, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5291, file: !2, line: 556, column: 13)
!5386 = !DILocation(line: 557, column: 11, scope: !5385)
!5387 = !DILocation(line: 558, column: 3, scope: !5385)
!5388 = !DILocation(line: 558, column: 11, scope: !5385)
!5389 = !DILocation(line: 559, column: 10, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5385, file: !2, line: 559, column: 3)
!5391 = !DILocation(line: 559, column: 8, scope: !5390)
!5392 = !DILocation(line: 559, column: 14, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5390, file: !2, line: 559, column: 3)
!5394 = !DILocation(line: 559, column: 18, scope: !5393)
!5395 = !DILocation(line: 559, column: 16, scope: !5393)
!5396 = !DILocation(line: 559, column: 3, scope: !5390)
!5397 = !DILocation(line: 560, column: 7, scope: !5393)
!5398 = !DILocation(line: 560, column: 15, scope: !5393)
!5399 = !DILocation(line: 560, column: 25, scope: !5393)
!5400 = !DILocation(line: 559, column: 27, scope: !5393)
!5401 = !DILocation(line: 559, column: 3, scope: !5393)
!5402 = distinct !{!5402, !5396, !5403, !1794}
!5403 = !DILocation(line: 560, column: 27, scope: !5390)
!5404 = !DILocation(line: 561, column: 3, scope: !5385)
!5405 = !DILocation(line: 561, column: 11, scope: !5385)
!5406 = !DILocation(line: 562, column: 3, scope: !5385)
!5407 = !DILocation(line: 562, column: 11, scope: !5385)
!5408 = !DILocation(line: 563, column: 3, scope: !5385)
!5409 = !DILocation(line: 565, column: 2, scope: !5292)
!5410 = !DILocation(line: 532, column: 31, scope: !5285)
!5411 = !DILocation(line: 532, column: 2, scope: !5285)
!5412 = distinct !{!5412, !5289, !5413, !1794}
!5413 = !DILocation(line: 565, column: 2, scope: !5282)
!5414 = !DILocation(line: 569, column: 38, scope: !5062)
!5415 = !DILocation(line: 569, column: 47, scope: !5062)
!5416 = !DILocation(line: 569, column: 52, scope: !5062)
!5417 = !DILocation(line: 569, column: 60, scope: !5062)
!5418 = !DILocation(line: 569, column: 24, scope: !5062)
!5419 = !DILocation(line: 569, column: 14, scope: !5062)
!5420 = !DILocation(line: 571, column: 6, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5062, file: !2, line: 571, column: 6)
!5422 = !DILocation(line: 571, column: 18, scope: !5421)
!5423 = !DILocation(line: 571, column: 6, scope: !5062)
!5424 = !DILocation(line: 572, column: 6, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5421, file: !2, line: 571, column: 27)
!5426 = !DILocation(line: 572, column: 14, scope: !5425)
!5427 = !DILocation(line: 573, column: 6, scope: !5425)
!5428 = !DILocation(line: 573, column: 14, scope: !5425)
!5429 = !DILocation(line: 574, column: 20, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5425, file: !2, line: 574, column: 13)
!5431 = !DILocation(line: 574, column: 18, scope: !5430)
!5432 = !DILocation(line: 574, column: 24, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5430, file: !2, line: 574, column: 13)
!5434 = !DILocation(line: 574, column: 28, scope: !5433)
!5435 = !DILocation(line: 574, column: 26, scope: !5433)
!5436 = !DILocation(line: 574, column: 13, scope: !5430)
!5437 = !DILocation(line: 575, column: 3, scope: !5433)
!5438 = !DILocation(line: 575, column: 11, scope: !5433)
!5439 = !DILocation(line: 575, column: 21, scope: !5433)
!5440 = !DILocation(line: 574, column: 37, scope: !5433)
!5441 = !DILocation(line: 574, column: 13, scope: !5433)
!5442 = distinct !{!5442, !5436, !5443, !1794}
!5443 = !DILocation(line: 575, column: 23, scope: !5430)
!5444 = !DILocation(line: 576, column: 6, scope: !5425)
!5445 = !DILocation(line: 576, column: 14, scope: !5425)
!5446 = !DILocation(line: 577, column: 6, scope: !5425)
!5447 = !DILocation(line: 577, column: 14, scope: !5425)
!5448 = !DILocation(line: 578, column: 6, scope: !5425)
!5449 = !DILocation(line: 585, column: 12, scope: !5062)
!5450 = !DILocation(line: 587, column: 9, scope: !5076)
!5451 = !DILocation(line: 587, column: 7, scope: !5076)
!5452 = !DILocation(line: 587, column: 13, scope: !5075)
!5453 = !DILocation(line: 587, column: 17, scope: !5075)
!5454 = !DILocation(line: 587, column: 22, scope: !5075)
!5455 = !DILocation(line: 587, column: 15, scope: !5075)
!5456 = !DILocation(line: 587, column: 2, scope: !5076)
!5457 = !DILocation(line: 588, column: 6, scope: !5074)
!5458 = !DILocation(line: 588, column: 10, scope: !5074)
!5459 = !DILocation(line: 588, column: 19, scope: !5074)
!5460 = !DILocation(line: 588, column: 27, scope: !5074)
!5461 = !DILocation(line: 588, column: 37, scope: !5074)
!5462 = !DILocation(line: 589, column: 6, scope: !5074)
!5463 = !DILocation(line: 589, column: 21, scope: !5074)
!5464 = !DILocation(line: 590, column: 6, scope: !5074)
!5465 = !DILocation(line: 590, column: 21, scope: !5074)
!5466 = !DILocation(line: 592, column: 16, scope: !5074)
!5467 = !DILocation(line: 592, column: 27, scope: !5074)
!5468 = !DILocation(line: 592, column: 14, scope: !5074)
!5469 = !DILocation(line: 593, column: 10, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5074, file: !2, line: 593, column: 10)
!5471 = !DILocation(line: 593, column: 18, scope: !5470)
!5472 = !DILocation(line: 593, column: 10, scope: !5074)
!5473 = !DILocation(line: 594, column: 3, scope: !5470)
!5474 = !DILocation(line: 595, column: 14, scope: !5074)
!5475 = !DILocation(line: 595, column: 19, scope: !5074)
!5476 = !DILocation(line: 595, column: 26, scope: !5074)
!5477 = !DILocation(line: 595, column: 12, scope: !5074)
!5478 = !DILocation(line: 597, column: 45, scope: !5074)
!5479 = !DILocation(line: 597, column: 52, scope: !5074)
!5480 = !DILocation(line: 597, column: 6, scope: !5074)
!5481 = !DILocation(line: 597, column: 18, scope: !5074)
!5482 = !DILocation(line: 597, column: 29, scope: !5074)
!5483 = !DILocation(line: 597, column: 37, scope: !5074)
!5484 = !DILocation(line: 597, column: 26, scope: !5074)
!5485 = !DILocation(line: 597, column: 43, scope: !5074)
!5486 = !DILocation(line: 599, column: 13, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5074, file: !2, line: 599, column: 6)
!5488 = !DILocation(line: 599, column: 11, scope: !5487)
!5489 = !DILocation(line: 599, column: 17, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5487, file: !2, line: 599, column: 6)
!5491 = !DILocation(line: 599, column: 21, scope: !5490)
!5492 = !DILocation(line: 599, column: 28, scope: !5490)
!5493 = !DILocation(line: 599, column: 19, scope: !5490)
!5494 = !DILocation(line: 599, column: 6, scope: !5487)
!5495 = !DILocation(line: 600, column: 13, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5490, file: !2, line: 599, column: 41)
!5497 = !DILocation(line: 600, column: 20, scope: !5496)
!5498 = !DILocation(line: 600, column: 26, scope: !5496)
!5499 = !DILocation(line: 600, column: 9, scope: !5496)
!5500 = !DILocation(line: 601, column: 8, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5496, file: !2, line: 601, column: 7)
!5502 = !DILocation(line: 601, column: 15, scope: !5501)
!5503 = !DILocation(line: 601, column: 18, scope: !5501)
!5504 = !DILocation(line: 601, column: 25, scope: !5501)
!5505 = !DILocation(line: 601, column: 29, scope: !5501)
!5506 = !DILocation(line: 601, column: 36, scope: !5501)
!5507 = !DILocation(line: 601, column: 41, scope: !5501)
!5508 = !DILocation(line: 601, column: 7, scope: !5496)
!5509 = !DILocation(line: 602, column: 7, scope: !5501)
!5510 = !DILocation(line: 603, column: 26, scope: !5496)
!5511 = !DILocation(line: 603, column: 38, scope: !5496)
!5512 = !DILocation(line: 603, column: 45, scope: !5496)
!5513 = !DILocation(line: 603, column: 51, scope: !5496)
!5514 = !{!2160, !1546, i64 0}
!5515 = !DILocation(line: 603, column: 24, scope: !5496)
!5516 = !DILocation(line: 604, column: 8, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5496, file: !2, line: 604, column: 7)
!5518 = !DILocation(line: 604, column: 15, scope: !5517)
!5519 = !DILocation(line: 604, column: 21, scope: !5517)
!5520 = !DILocation(line: 604, column: 26, scope: !5517)
!5521 = !DILocation(line: 604, column: 35, scope: !5517)
!5522 = !DILocation(line: 604, column: 39, scope: !5517)
!5523 = !DILocation(line: 604, column: 49, scope: !5517)
!5524 = !DILocation(line: 604, column: 7, scope: !5496)
!5525 = !DILocation(line: 605, column: 43, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5517, file: !2, line: 604, column: 59)
!5527 = !DILocation(line: 605, column: 53, scope: !5526)
!5528 = !DILocation(line: 605, column: 29, scope: !5526)
!5529 = !DILocation(line: 605, column: 17, scope: !5526)
!5530 = !DILocation(line: 607, column: 11, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5526, file: !2, line: 607, column: 11)
!5532 = !DILocation(line: 607, column: 21, scope: !5531)
!5533 = !DILocation(line: 607, column: 11, scope: !5526)
!5534 = !DILocation(line: 608, column: 23, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5531, file: !2, line: 607, column: 30)
!5536 = !DILocation(line: 608, column: 4, scope: !5535)
!5537 = !DILocation(line: 609, column: 4, scope: !5535)
!5538 = !DILocation(line: 611, column: 3, scope: !5526)
!5539 = !DILocation(line: 612, column: 14, scope: !5496)
!5540 = !DILocation(line: 612, column: 25, scope: !5496)
!5541 = !DILocation(line: 612, column: 32, scope: !5496)
!5542 = !DILocation(line: 612, column: 12, scope: !5496)
!5543 = !DILocation(line: 618, column: 10, scope: !5496)
!5544 = !DILocation(line: 618, column: 22, scope: !5496)
!5545 = !DILocation(line: 618, column: 33, scope: !5496)
!5546 = !DILocation(line: 618, column: 41, scope: !5496)
!5547 = !DILocation(line: 618, column: 30, scope: !5496)
!5548 = !DILocation(line: 618, column: 48, scope: !5496)
!5549 = !DILocation(line: 618, column: 46, scope: !5496)
!5550 = !DILocation(line: 618, column: 55, scope: !5496)
!5551 = !DILocation(line: 618, column: 8, scope: !5496)
!5552 = !DILocation(line: 619, column: 7, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5496, file: !2, line: 619, column: 7)
!5554 = !DILocation(line: 619, column: 12, scope: !5553)
!5555 = !DILocation(line: 619, column: 7, scope: !5496)
!5556 = !DILocation(line: 620, column: 11, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5558, file: !2, line: 620, column: 11)
!5558 = distinct !DILexicalBlock(scope: !5553, file: !2, line: 619, column: 18)
!5559 = !DILocation(line: 620, column: 19, scope: !5557)
!5560 = !DILocation(line: 620, column: 28, scope: !5557)
!5561 = !DILocation(line: 620, column: 16, scope: !5557)
!5562 = !DILocation(line: 620, column: 11, scope: !5558)
!5563 = !DILocation(line: 621, column: 4, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5557, file: !2, line: 620, column: 33)
!5565 = !DILocation(line: 621, column: 9, scope: !5564)
!5566 = !DILocation(line: 621, column: 21, scope: !5564)
!5567 = !DILocation(line: 627, column: 8, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5564, file: !2, line: 627, column: 8)
!5569 = !DILocation(line: 627, column: 18, scope: !5568)
!5570 = !DILocation(line: 627, column: 8, scope: !5564)
!5571 = !DILocation(line: 628, column: 8, scope: !5568)
!5572 = !DILocation(line: 628, column: 16, scope: !5568)
!5573 = !DILocation(line: 629, column: 4, scope: !5564)
!5574 = !DILocation(line: 629, column: 12, scope: !5564)
!5575 = !DILocation(line: 630, column: 4, scope: !5564)
!5576 = !DILocation(line: 630, column: 12, scope: !5564)
!5577 = !DILocation(line: 631, column: 4, scope: !5564)
!5578 = !DILocation(line: 631, column: 12, scope: !5564)
!5579 = !DILocation(line: 632, column: 11, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5564, file: !2, line: 632, column: 4)
!5581 = !DILocation(line: 632, column: 9, scope: !5580)
!5582 = !DILocation(line: 632, column: 15, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5580, file: !2, line: 632, column: 4)
!5584 = !DILocation(line: 632, column: 19, scope: !5583)
!5585 = !DILocation(line: 632, column: 17, scope: !5583)
!5586 = !DILocation(line: 632, column: 4, scope: !5580)
!5587 = !DILocation(line: 633, column: 8, scope: !5583)
!5588 = !DILocation(line: 633, column: 16, scope: !5583)
!5589 = !DILocation(line: 633, column: 26, scope: !5583)
!5590 = !DILocation(line: 632, column: 28, scope: !5583)
!5591 = !DILocation(line: 632, column: 4, scope: !5583)
!5592 = distinct !{!5592, !5586, !5593, !1794}
!5593 = !DILocation(line: 633, column: 28, scope: !5580)
!5594 = !DILocation(line: 634, column: 4, scope: !5564)
!5595 = !DILocation(line: 634, column: 12, scope: !5564)
!5596 = !DILocation(line: 635, column: 4, scope: !5564)
!5597 = !DILocation(line: 637, column: 3, scope: !5558)
!5598 = !DILocation(line: 643, column: 4, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5553, file: !2, line: 637, column: 10)
!5600 = !DILocation(line: 643, column: 13, scope: !5599)
!5601 = !DILocation(line: 642, column: 7, scope: !5599)
!5602 = !DILocation(line: 642, column: 19, scope: !5599)
!5603 = !DILocation(line: 642, column: 30, scope: !5599)
!5604 = !DILocation(line: 642, column: 38, scope: !5599)
!5605 = !DILocation(line: 642, column: 27, scope: !5599)
!5606 = !DILocation(line: 642, column: 45, scope: !5599)
!5607 = !DILocation(line: 642, column: 43, scope: !5599)
!5608 = !DILocation(line: 642, column: 52, scope: !5599)
!5609 = !DILocation(line: 642, column: 57, scope: !5599)
!5610 = !DILocation(line: 644, column: 11, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5599, file: !2, line: 644, column: 11)
!5612 = !DILocation(line: 644, column: 21, scope: !5611)
!5613 = !DILocation(line: 644, column: 11, scope: !5599)
!5614 = !DILocation(line: 646, column: 8, scope: !5611)
!5615 = !DILocation(line: 646, column: 15, scope: !5611)
!5616 = !DILocation(line: 646, column: 21, scope: !5611)
!5617 = !DILocation(line: 645, column: 4, scope: !5611)
!5618 = !DILocation(line: 645, column: 14, scope: !5611)
!5619 = !DILocation(line: 645, column: 24, scope: !5611)
!5620 = !DILocation(line: 645, column: 22, scope: !5611)
!5621 = !DILocation(line: 645, column: 34, scope: !5611)
!5622 = !DILocation(line: 645, column: 32, scope: !5611)
!5623 = !DILocation(line: 645, column: 42, scope: !5611)
!5624 = !DILocation(line: 648, column: 6, scope: !5496)
!5625 = !DILocation(line: 599, column: 37, scope: !5490)
!5626 = !DILocation(line: 599, column: 6, scope: !5490)
!5627 = distinct !{!5627, !5494, !5628, !1794}
!5628 = !DILocation(line: 648, column: 6, scope: !5487)
!5629 = !DILocation(line: 649, column: 2, scope: !5075)
!5630 = !DILocation(line: 649, column: 2, scope: !5074)
!5631 = !DILocation(line: 587, column: 32, scope: !5075)
!5632 = !DILocation(line: 587, column: 2, scope: !5075)
!5633 = distinct !{!5633, !5456, !5634, !1794}
!5634 = !DILocation(line: 649, column: 2, scope: !5076)
!5635 = !DILocation(line: 650, column: 2, scope: !5062)
!5636 = !DILocation(line: 650, column: 7, scope: !5062)
!5637 = !DILocation(line: 650, column: 19, scope: !5062)
!5638 = !DILocation(line: 666, column: 6, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5062, file: !2, line: 666, column: 6)
!5640 = !DILocation(line: 666, column: 11, scope: !5639)
!5641 = !DILocation(line: 666, column: 18, scope: !5639)
!5642 = !DILocation(line: 666, column: 6, scope: !5062)
!5643 = !DILocation(line: 667, column: 13, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !2, line: 667, column: 6)
!5645 = distinct !DILexicalBlock(scope: !5639, file: !2, line: 666, column: 27)
!5646 = !DILocation(line: 667, column: 11, scope: !5644)
!5647 = !DILocation(line: 667, column: 17, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5644, file: !2, line: 667, column: 6)
!5649 = !DILocation(line: 667, column: 21, scope: !5648)
!5650 = !DILocation(line: 667, column: 26, scope: !5648)
!5651 = !DILocation(line: 667, column: 19, scope: !5648)
!5652 = !DILocation(line: 667, column: 6, scope: !5644)
!5653 = !DILocation(line: 668, column: 19, scope: !5648)
!5654 = !DILocation(line: 668, column: 24, scope: !5648)
!5655 = !DILocation(line: 668, column: 31, scope: !5648)
!5656 = !DILocation(line: 668, column: 3, scope: !5648)
!5657 = !DILocation(line: 667, column: 36, scope: !5648)
!5658 = !DILocation(line: 667, column: 6, scope: !5648)
!5659 = distinct !{!5659, !5652, !5660, !1794}
!5660 = !DILocation(line: 668, column: 33, scope: !5644)
!5661 = !DILocation(line: 669, column: 6, scope: !5645)
!5662 = !DILocation(line: 669, column: 14, scope: !5645)
!5663 = !DILocation(line: 669, column: 19, scope: !5645)
!5664 = !DILocation(line: 670, column: 2, scope: !5645)
!5665 = !DILocation(line: 671, column: 2, scope: !5062)
!5666 = !DILocation(line: 671, column: 7, scope: !5062)
!5667 = !DILocation(line: 671, column: 14, scope: !5062)
!5668 = !DILocation(line: 672, column: 2, scope: !5062)
!5669 = !DILocation(line: 672, column: 7, scope: !5062)
!5670 = !DILocation(line: 672, column: 16, scope: !5062)
!5671 = !DILocation(line: 673, column: 6, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5062, file: !2, line: 673, column: 6)
!5673 = !DILocation(line: 673, column: 11, scope: !5672)
!5674 = !DILocation(line: 673, column: 17, scope: !5672)
!5675 = !DILocation(line: 673, column: 6, scope: !5062)
!5676 = !DILocation(line: 674, column: 13, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5678, file: !2, line: 674, column: 6)
!5678 = distinct !DILexicalBlock(scope: !5672, file: !2, line: 673, column: 26)
!5679 = !DILocation(line: 674, column: 11, scope: !5677)
!5680 = !DILocation(line: 674, column: 17, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5677, file: !2, line: 674, column: 6)
!5682 = !DILocation(line: 674, column: 21, scope: !5681)
!5683 = !DILocation(line: 674, column: 26, scope: !5681)
!5684 = !DILocation(line: 674, column: 19, scope: !5681)
!5685 = !DILocation(line: 674, column: 6, scope: !5677)
!5686 = !DILocation(line: 675, column: 18, scope: !5681)
!5687 = !DILocation(line: 675, column: 23, scope: !5681)
!5688 = !DILocation(line: 675, column: 29, scope: !5681)
!5689 = !DILocation(line: 675, column: 3, scope: !5681)
!5690 = !DILocation(line: 674, column: 35, scope: !5681)
!5691 = !DILocation(line: 674, column: 6, scope: !5681)
!5692 = distinct !{!5692, !5685, !5693, !1794}
!5693 = !DILocation(line: 675, column: 31, scope: !5677)
!5694 = !DILocation(line: 676, column: 6, scope: !5678)
!5695 = !DILocation(line: 676, column: 14, scope: !5678)
!5696 = !DILocation(line: 676, column: 19, scope: !5678)
!5697 = !DILocation(line: 677, column: 2, scope: !5678)
!5698 = !DILocation(line: 678, column: 2, scope: !5062)
!5699 = !DILocation(line: 678, column: 7, scope: !5062)
!5700 = !DILocation(line: 678, column: 13, scope: !5062)
!5701 = !DILocation(line: 679, column: 2, scope: !5062)
!5702 = !DILocation(line: 679, column: 7, scope: !5062)
!5703 = !DILocation(line: 679, column: 15, scope: !5062)
!5704 = !DILocation(line: 681, column: 17, scope: !5062)
!5705 = !DILocation(line: 681, column: 2, scope: !5062)
!5706 = !DILocation(line: 681, column: 7, scope: !5062)
!5707 = !DILocation(line: 681, column: 15, scope: !5062)
!5708 = !DILocation(line: 682, column: 19, scope: !5062)
!5709 = !DILocation(line: 682, column: 2, scope: !5062)
!5710 = !DILocation(line: 682, column: 7, scope: !5062)
!5711 = !DILocation(line: 682, column: 17, scope: !5062)
!5712 = !DILocation(line: 683, column: 19, scope: !5062)
!5713 = !DILocation(line: 683, column: 2, scope: !5062)
!5714 = !DILocation(line: 683, column: 7, scope: !5062)
!5715 = !DILocation(line: 683, column: 17, scope: !5062)
!5716 = !DILocation(line: 684, column: 19, scope: !5062)
!5717 = !DILocation(line: 684, column: 2, scope: !5062)
!5718 = !DILocation(line: 684, column: 7, scope: !5062)
!5719 = !DILocation(line: 684, column: 17, scope: !5062)
!5720 = !DILocation(line: 685, column: 18, scope: !5062)
!5721 = !DILocation(line: 685, column: 2, scope: !5062)
!5722 = !DILocation(line: 685, column: 7, scope: !5062)
!5723 = !DILocation(line: 685, column: 16, scope: !5062)
!5724 = !DILocation(line: 686, column: 2, scope: !5062)
!5725 = !DILocation(line: 686, column: 10, scope: !5062)
!5726 = !DILocation(line: 687, column: 2, scope: !5062)
!5727 = !DILocation(line: 687, column: 10, scope: !5062)
!5728 = !DILocation(line: 688, column: 5, scope: !5063)
!5729 = !DILocation(line: 688, column: 5, scope: !5062)
!5730 = !DILocation(line: 483, column: 43, scope: !5063)
!5731 = !DILocation(line: 689, column: 1, scope: !5055)
!5732 = !DILocation(line: 690, column: 5, scope: !5055)
!5733 = !DILocation(line: 690, column: 11, scope: !5055)
!5734 = !DILocation(line: 690, column: 18, scope: !5055)
!5735 = !DILocation(line: 691, column: 5, scope: !5055)
!5736 = !DILocation(line: 691, column: 11, scope: !5055)
!5737 = !DILocation(line: 691, column: 20, scope: !5055)
!5738 = !DILocation(line: 692, column: 5, scope: !5055)
!5739 = !DILocation(line: 692, column: 11, scope: !5055)
!5740 = !DILocation(line: 692, column: 18, scope: !5055)
!5741 = !DILocation(line: 693, column: 5, scope: !5055)
!5742 = !DILocation(line: 693, column: 11, scope: !5055)
!5743 = !DILocation(line: 693, column: 19, scope: !5055)
!5744 = !DILocation(line: 694, column: 5, scope: !5055)
!5745 = !DILocation(line: 694, column: 11, scope: !5055)
!5746 = !DILocation(line: 694, column: 17, scope: !5055)
!5747 = !DILocation(line: 695, column: 5, scope: !5055)
!5748 = !DILocation(line: 695, column: 11, scope: !5055)
!5749 = !DILocation(line: 695, column: 22, scope: !5055)
!5750 = !DILocation(line: 696, column: 5, scope: !5055)
!5751 = !DILocation(line: 696, column: 11, scope: !5055)
!5752 = !DILocation(line: 696, column: 20, scope: !5055)
!5753 = !DILocation(line: 697, column: 12, scope: !5055)
!5754 = !DILocation(line: 697, column: 5, scope: !5055)
!5755 = !DILocation(line: 698, column: 1, scope: !5055)
!5756 = distinct !DISubprogram(name: "xmlRegexpExec", scope: !2, file: !2, line: 5663, type: !5757, scopeLine: 5663, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !5759)
!5757 = !DISubroutineType(types: !5758)
!5758 = !{!1306, !1345, !1445}
!5759 = !{!5760, !5761}
!5760 = !DILocalVariable(name: "comp", arg: 1, scope: !5756, file: !2, line: 5663, type: !1345)
!5761 = !DILocalVariable(name: "content", arg: 2, scope: !5756, file: !2, line: 5663, type: !1445)
!5762 = !DILocation(line: 5663, column: 28, scope: !5756)
!5763 = !DILocation(line: 5663, column: 49, scope: !5756)
!5764 = !DILocation(line: 5664, column: 10, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5756, file: !2, line: 5664, column: 9)
!5766 = !DILocation(line: 5664, column: 15, scope: !5765)
!5767 = !DILocation(line: 5664, column: 24, scope: !5765)
!5768 = !DILocation(line: 5664, column: 28, scope: !5765)
!5769 = !DILocation(line: 5664, column: 36, scope: !5765)
!5770 = !DILocation(line: 5664, column: 9, scope: !5756)
!5771 = !DILocation(line: 5665, column: 2, scope: !5765)
!5772 = !DILocation(line: 5666, column: 25, scope: !5756)
!5773 = !DILocation(line: 5666, column: 31, scope: !5756)
!5774 = !DILocation(line: 5666, column: 12, scope: !5756)
!5775 = !DILocation(line: 5666, column: 5, scope: !5756)
!5776 = !DILocation(line: 5667, column: 1, scope: !5756)
!5777 = distinct !DISubprogram(name: "xmlFARegExec", scope: !2, file: !2, line: 3258, type: !5757, scopeLine: 3258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !5778)
!5778 = !{!5779, !5780, !5781, !5782, !5783, !5784, !5785, !5786, !5787, !5789, !5790, !5796, !5797, !5803, !5806, !5810, !5811, !5816, !5819, !5820, !5821}
!5779 = !DILocalVariable(name: "comp", arg: 1, scope: !5777, file: !2, line: 3258, type: !1345)
!5780 = !DILocalVariable(name: "content", arg: 2, scope: !5777, file: !2, line: 3258, type: !1445)
!5781 = !DILocalVariable(name: "execval", scope: !5777, file: !2, line: 3259, type: !1339)
!5782 = !DILocalVariable(name: "exec", scope: !5777, file: !2, line: 3260, type: !1336)
!5783 = !DILocalVariable(name: "ret", scope: !5777, file: !2, line: 3261, type: !1306)
!5784 = !DILocalVariable(name: "codepoint", scope: !5777, file: !2, line: 3261, type: !1306)
!5785 = !DILocalVariable(name: "len", scope: !5777, file: !2, line: 3261, type: !1306)
!5786 = !DILocalVariable(name: "deter", scope: !5777, file: !2, line: 3261, type: !1306)
!5787 = !DILocalVariable(name: "trans", scope: !5788, file: !2, line: 3290, type: !1884)
!5788 = distinct !DILexicalBlock(scope: !5777, file: !2, line: 3289, column: 56)
!5789 = !DILocalVariable(name: "atom", scope: !5788, file: !2, line: 3291, type: !1378)
!5790 = !DILocalVariable(name: "count", scope: !5791, file: !2, line: 3326, type: !1306)
!5791 = distinct !DILexicalBlock(scope: !5792, file: !2, line: 3325, column: 29)
!5792 = distinct !DILexicalBlock(scope: !5793, file: !2, line: 3325, column: 10)
!5793 = distinct !DILexicalBlock(scope: !5794, file: !2, line: 3318, column: 62)
!5794 = distinct !DILexicalBlock(scope: !5795, file: !2, line: 3318, column: 2)
!5795 = distinct !DILexicalBlock(scope: !5788, file: !2, line: 3318, column: 2)
!5796 = !DILocalVariable(name: "counter", scope: !5791, file: !2, line: 3327, type: !1899)
!5797 = !DILocalVariable(name: "to", scope: !5798, file: !2, line: 3354, type: !1358)
!5798 = distinct !DILexicalBlock(scope: !5799, file: !2, line: 3353, column: 58)
!5799 = distinct !DILexicalBlock(scope: !5800, file: !2, line: 3353, column: 7)
!5800 = distinct !DILexicalBlock(scope: !5801, file: !2, line: 3350, column: 54)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !2, line: 3350, column: 17)
!5802 = distinct !DILexicalBlock(scope: !5792, file: !2, line: 3346, column: 17)
!5803 = !DILocalVariable(name: "counter", scope: !5804, file: !2, line: 3363, type: !1899)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !2, line: 3362, column: 32)
!5805 = distinct !DILexicalBlock(scope: !5798, file: !2, line: 3362, column: 11)
!5806 = !DILocalVariable(name: "transno", scope: !5807, file: !2, line: 3402, type: !1306)
!5807 = distinct !DILexicalBlock(scope: !5808, file: !2, line: 3401, column: 39)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !2, line: 3401, column: 8)
!5809 = distinct !DILexicalBlock(scope: !5798, file: !2, line: 3386, column: 10)
!5810 = !DILocalVariable(name: "state", scope: !5807, file: !2, line: 3403, type: !1358)
!5811 = !DILocalVariable(name: "counter", scope: !5812, file: !2, line: 3472, type: !1899)
!5812 = distinct !DILexicalBlock(scope: !5813, file: !2, line: 3471, column: 28)
!5813 = distinct !DILexicalBlock(scope: !5814, file: !2, line: 3471, column: 7)
!5814 = distinct !DILexicalBlock(scope: !5815, file: !2, line: 3457, column: 20)
!5815 = distinct !DILexicalBlock(scope: !5793, file: !2, line: 3457, column: 10)
!5816 = !DILabel(scope: !5817, name: "rollback", file: !2, line: 3516)
!5817 = distinct !DILexicalBlock(scope: !5818, file: !2, line: 3515, column: 59)
!5818 = distinct !DILexicalBlock(scope: !5788, file: !2, line: 3515, column: 6)
!5819 = !DILabel(scope: !5788, name: "progress", file: !2, line: 3527)
!5820 = !DILabel(scope: !5777, name: "error", file: !2, line: 3530)
!5821 = !DILocalVariable(name: "i", scope: !5822, file: !2, line: 3533, type: !1306)
!5822 = distinct !DILexicalBlock(scope: !5823, file: !2, line: 3532, column: 28)
!5823 = distinct !DILexicalBlock(scope: !5824, file: !2, line: 3532, column: 6)
!5824 = distinct !DILexicalBlock(scope: !5825, file: !2, line: 3531, column: 34)
!5825 = distinct !DILexicalBlock(scope: !5777, file: !2, line: 3531, column: 9)
!5826 = !DILocation(line: 3258, column: 27, scope: !5777)
!5827 = !DILocation(line: 3258, column: 48, scope: !5777)
!5828 = !DILocation(line: 3259, column: 5, scope: !5777)
!5829 = !DILocation(line: 3259, column: 20, scope: !5777)
!5830 = !DILocation(line: 3260, column: 5, scope: !5777)
!5831 = !DILocation(line: 3260, column: 23, scope: !5777)
!5832 = !DILocation(line: 3261, column: 5, scope: !5777)
!5833 = !DILocation(line: 3261, column: 9, scope: !5777)
!5834 = !DILocation(line: 3261, column: 14, scope: !5777)
!5835 = !DILocation(line: 3261, column: 29, scope: !5777)
!5836 = !DILocation(line: 3261, column: 34, scope: !5777)
!5837 = !DILocation(line: 3263, column: 25, scope: !5777)
!5838 = !DILocation(line: 3263, column: 5, scope: !5777)
!5839 = !DILocation(line: 3263, column: 11, scope: !5777)
!5840 = !DILocation(line: 3263, column: 23, scope: !5777)
!5841 = !DILocation(line: 3264, column: 5, scope: !5777)
!5842 = !DILocation(line: 3264, column: 11, scope: !5777)
!5843 = !DILocation(line: 3264, column: 17, scope: !5777)
!5844 = !DILocation(line: 3265, column: 5, scope: !5777)
!5845 = !DILocation(line: 3265, column: 11, scope: !5777)
!5846 = !DILocation(line: 3265, column: 18, scope: !5777)
!5847 = !DILocation(line: 3266, column: 5, scope: !5777)
!5848 = !DILocation(line: 3266, column: 11, scope: !5777)
!5849 = !DILocation(line: 3266, column: 23, scope: !5777)
!5850 = !DILocation(line: 3267, column: 5, scope: !5777)
!5851 = !DILocation(line: 3267, column: 11, scope: !5777)
!5852 = !DILocation(line: 3267, column: 24, scope: !5777)
!5853 = !DILocation(line: 3268, column: 5, scope: !5777)
!5854 = !DILocation(line: 3268, column: 11, scope: !5777)
!5855 = !DILocation(line: 3268, column: 23, scope: !5777)
!5856 = !DILocation(line: 3269, column: 5, scope: !5777)
!5857 = !DILocation(line: 3269, column: 11, scope: !5777)
!5858 = !DILocation(line: 3269, column: 21, scope: !5777)
!5859 = !DILocation(line: 3270, column: 5, scope: !5777)
!5860 = !DILocation(line: 3270, column: 11, scope: !5777)
!5861 = !DILocation(line: 3270, column: 18, scope: !5777)
!5862 = !DILocation(line: 3271, column: 18, scope: !5777)
!5863 = !DILocation(line: 3271, column: 5, scope: !5777)
!5864 = !DILocation(line: 3271, column: 11, scope: !5777)
!5865 = !DILocation(line: 3271, column: 16, scope: !5777)
!5866 = !DILocation(line: 3272, column: 19, scope: !5777)
!5867 = !DILocation(line: 3272, column: 25, scope: !5777)
!5868 = !DILocation(line: 3272, column: 5, scope: !5777)
!5869 = !DILocation(line: 3272, column: 11, scope: !5777)
!5870 = !DILocation(line: 3272, column: 17, scope: !5777)
!5871 = !DILocation(line: 3273, column: 5, scope: !5777)
!5872 = !DILocation(line: 3273, column: 11, scope: !5777)
!5873 = !DILocation(line: 3273, column: 19, scope: !5777)
!5874 = !DILocation(line: 3274, column: 5, scope: !5777)
!5875 = !DILocation(line: 3274, column: 11, scope: !5777)
!5876 = !DILocation(line: 3274, column: 22, scope: !5777)
!5877 = !DILocation(line: 3275, column: 5, scope: !5777)
!5878 = !DILocation(line: 3275, column: 11, scope: !5777)
!5879 = !DILocation(line: 3275, column: 22, scope: !5777)
!5880 = !DILocation(line: 3276, column: 5, scope: !5777)
!5881 = !DILocation(line: 3276, column: 11, scope: !5777)
!5882 = !DILocation(line: 3276, column: 25, scope: !5777)
!5883 = !DILocation(line: 3277, column: 9, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5777, file: !2, line: 3277, column: 9)
!5885 = !DILocation(line: 3277, column: 15, scope: !5884)
!5886 = !DILocation(line: 3277, column: 26, scope: !5884)
!5887 = !DILocation(line: 3277, column: 9, scope: !5777)
!5888 = !DILocation(line: 3278, column: 25, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5884, file: !2, line: 3277, column: 31)
!5890 = !DILocation(line: 3278, column: 35, scope: !5889)
!5891 = !DILocation(line: 3278, column: 41, scope: !5889)
!5892 = !DILocation(line: 3278, column: 52, scope: !5889)
!5893 = !DILocation(line: 3278, column: 2, scope: !5889)
!5894 = !DILocation(line: 3278, column: 8, scope: !5889)
!5895 = !DILocation(line: 3278, column: 15, scope: !5889)
!5896 = !DILocation(line: 3279, column: 6, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5889, file: !2, line: 3279, column: 6)
!5898 = !DILocation(line: 3279, column: 12, scope: !5897)
!5899 = !DILocation(line: 3279, column: 19, scope: !5897)
!5900 = !DILocation(line: 3279, column: 6, scope: !5889)
!5901 = !DILocation(line: 3280, column: 6, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5897, file: !2, line: 3279, column: 28)
!5903 = !DILocation(line: 3281, column: 6, scope: !5902)
!5904 = !DILocation(line: 3283, column: 16, scope: !5889)
!5905 = !DILocation(line: 3283, column: 22, scope: !5889)
!5906 = !DILocation(line: 3283, column: 33, scope: !5889)
!5907 = !DILocation(line: 3283, column: 39, scope: !5889)
!5908 = !DILocation(line: 3283, column: 50, scope: !5889)
!5909 = !DILocation(line: 3283, column: 9, scope: !5889)
!5910 = !DILocation(line: 3284, column: 5, scope: !5889)
!5911 = !DILocation(line: 3285, column: 2, scope: !5884)
!5912 = !DILocation(line: 3285, column: 8, scope: !5884)
!5913 = !DILocation(line: 3285, column: 15, scope: !5884)
!5914 = !DILocation(line: 3286, column: 5, scope: !5777)
!5915 = !DILocation(line: 3286, column: 13, scope: !5777)
!5916 = !DILocation(line: 3286, column: 19, scope: !5777)
!5917 = !DILocation(line: 3286, column: 26, scope: !5777)
!5918 = !DILocation(line: 3286, column: 32, scope: !5777)
!5919 = !DILocation(line: 3286, column: 36, scope: !5777)
!5920 = !DILocation(line: 3286, column: 42, scope: !5777)
!5921 = !DILocation(line: 3286, column: 48, scope: !5777)
!5922 = !DILocation(line: 3286, column: 57, scope: !5777)
!5923 = !DILocation(line: 3287, column: 7, scope: !5777)
!5924 = !DILocation(line: 3287, column: 13, scope: !5777)
!5925 = !DILocation(line: 3287, column: 25, scope: !5777)
!5926 = !DILocation(line: 3287, column: 31, scope: !5777)
!5927 = !DILocation(line: 3287, column: 38, scope: !5777)
!5928 = !DILocation(line: 3287, column: 44, scope: !5777)
!5929 = !DILocation(line: 3288, column: 8, scope: !5777)
!5930 = !DILocation(line: 3288, column: 14, scope: !5777)
!5931 = !DILocation(line: 3288, column: 20, scope: !5777)
!5932 = !DILocation(line: 3288, column: 29, scope: !5777)
!5933 = !DILocation(line: 3289, column: 8, scope: !5777)
!5934 = !DILocation(line: 3289, column: 14, scope: !5777)
!5935 = !DILocation(line: 3289, column: 21, scope: !5777)
!5936 = !DILocation(line: 3289, column: 26, scope: !5777)
!5937 = !DILocation(line: 0, scope: !5777)
!5938 = !DILocation(line: 3290, column: 2, scope: !5788)
!5939 = !DILocation(line: 3290, column: 17, scope: !5788)
!5940 = !DILocation(line: 3291, column: 2, scope: !5788)
!5941 = !DILocation(line: 3291, column: 16, scope: !5788)
!5942 = !DILocation(line: 3300, column: 6, scope: !5788)
!5943 = !DILocation(line: 3301, column: 7, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5788, file: !2, line: 3301, column: 6)
!5945 = !DILocation(line: 3301, column: 13, scope: !5944)
!5946 = !DILocation(line: 3301, column: 25, scope: !5944)
!5947 = !DILocation(line: 3301, column: 31, scope: !5944)
!5948 = !DILocation(line: 3301, column: 38, scope: !5944)
!5949 = !DILocation(line: 3301, column: 44, scope: !5944)
!5950 = !DILocation(line: 3301, column: 48, scope: !5944)
!5951 = !DILocation(line: 3301, column: 54, scope: !5944)
!5952 = !DILocation(line: 3301, column: 61, scope: !5944)
!5953 = !DILocation(line: 3301, column: 6, scope: !5788)
!5954 = !DILocation(line: 3306, column: 10, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5956, file: !2, line: 3306, column: 10)
!5956 = distinct !DILexicalBlock(scope: !5944, file: !2, line: 3301, column: 71)
!5957 = !DILocation(line: 3306, column: 16, scope: !5955)
!5958 = !DILocation(line: 3306, column: 26, scope: !5955)
!5959 = !DILocation(line: 3306, column: 32, scope: !5955)
!5960 = !DILocation(line: 3306, column: 39, scope: !5955)
!5961 = !DILocation(line: 3306, column: 24, scope: !5955)
!5962 = !DILocation(line: 3306, column: 10, scope: !5956)
!5963 = !DILocation(line: 3307, column: 19, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5955, file: !2, line: 3306, column: 48)
!5965 = !DILocation(line: 3307, column: 25, scope: !5964)
!5966 = !DILocation(line: 3307, column: 32, scope: !5964)
!5967 = !DILocation(line: 3307, column: 38, scope: !5964)
!5968 = !DILocation(line: 3307, column: 44, scope: !5964)
!5969 = !DILocation(line: 3307, column: 16, scope: !5964)
!5970 = !DILocation(line: 3308, column: 7, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5964, file: !2, line: 3308, column: 7)
!5972 = !DILocation(line: 3308, column: 14, scope: !5971)
!5973 = !DILocation(line: 3308, column: 17, scope: !5971)
!5974 = !DILocation(line: 3308, column: 7, scope: !5964)
!5975 = !DILocation(line: 3309, column: 14, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5971, file: !2, line: 3308, column: 22)
!5977 = !DILocation(line: 3309, column: 21, scope: !5976)
!5978 = !DILocation(line: 3309, column: 12, scope: !5976)
!5979 = !DILocation(line: 3310, column: 14, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5976, file: !2, line: 3310, column: 11)
!5981 = !DILocation(line: 3310, column: 20, scope: !5980)
!5982 = !DILocation(line: 3310, column: 24, scope: !5980)
!5983 = !DILocation(line: 3310, column: 30, scope: !5980)
!5984 = !DILocation(line: 3310, column: 34, scope: !5980)
!5985 = !DILocation(line: 3310, column: 40, scope: !5980)
!5986 = !DILocation(line: 3310, column: 44, scope: !5980)
!5987 = !DILocation(line: 3310, column: 11, scope: !5976)
!5988 = !DILocation(line: 3311, column: 11, scope: !5980)
!5989 = !DILocation(line: 3312, column: 3, scope: !5976)
!5990 = !DILocation(line: 3313, column: 6, scope: !5964)
!5991 = !DILocation(line: 3314, column: 10, scope: !5955)
!5992 = !DILocation(line: 3315, column: 2, scope: !5956)
!5993 = !DILocation(line: 3317, column: 2, scope: !5788)
!5994 = !DILocation(line: 3317, column: 8, scope: !5788)
!5995 = !DILocation(line: 3317, column: 19, scope: !5788)
!5996 = !DILocation(line: 3318, column: 2, scope: !5788)
!5997 = !DILocation(line: 3318, column: 8, scope: !5794)
!5998 = !DILocation(line: 3318, column: 14, scope: !5794)
!5999 = !DILocation(line: 3318, column: 24, scope: !5794)
!6000 = !DILocation(line: 3318, column: 30, scope: !5794)
!6001 = !DILocation(line: 3318, column: 37, scope: !5794)
!6002 = !DILocation(line: 3318, column: 22, scope: !5794)
!6003 = !DILocation(line: 3318, column: 2, scope: !5795)
!6004 = !DILocation(line: 3319, column: 15, scope: !5793)
!6005 = !DILocation(line: 3319, column: 21, scope: !5793)
!6006 = !DILocation(line: 3319, column: 28, scope: !5793)
!6007 = !DILocation(line: 3319, column: 34, scope: !5793)
!6008 = !DILocation(line: 3319, column: 40, scope: !5793)
!6009 = !DILocation(line: 3319, column: 12, scope: !5793)
!6010 = !DILocation(line: 3320, column: 10, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5793, file: !2, line: 3320, column: 10)
!6012 = !DILocation(line: 3320, column: 17, scope: !6011)
!6013 = !DILocation(line: 3320, column: 20, scope: !6011)
!6014 = !DILocation(line: 3320, column: 10, scope: !5793)
!6015 = !DILocation(line: 3321, column: 3, scope: !6011)
!6016 = !DILocation(line: 3322, column: 13, scope: !5793)
!6017 = !DILocation(line: 3322, column: 20, scope: !5793)
!6018 = !DILocation(line: 3322, column: 11, scope: !5793)
!6019 = !DILocation(line: 3323, column: 10, scope: !5793)
!6020 = !DILocation(line: 3324, column: 12, scope: !5793)
!6021 = !DILocation(line: 3325, column: 10, scope: !5792)
!6022 = !DILocation(line: 3325, column: 17, scope: !5792)
!6023 = !DILocation(line: 3325, column: 23, scope: !5792)
!6024 = !DILocation(line: 3325, column: 10, scope: !5793)
!6025 = !DILocation(line: 3326, column: 3, scope: !5791)
!6026 = !DILocation(line: 3326, column: 7, scope: !5791)
!6027 = !DILocation(line: 3327, column: 3, scope: !5791)
!6028 = !DILocation(line: 3327, column: 20, scope: !5791)
!6029 = !DILocation(line: 3329, column: 7, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !5791, file: !2, line: 3329, column: 7)
!6031 = !DILocation(line: 3329, column: 13, scope: !6030)
!6032 = !DILocation(line: 3329, column: 20, scope: !6030)
!6033 = !DILocation(line: 3329, column: 7, scope: !5791)
!6034 = !DILocation(line: 3330, column: 7, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6030, file: !2, line: 3329, column: 29)
!6036 = !DILocation(line: 3330, column: 13, scope: !6035)
!6037 = !DILocation(line: 3330, column: 20, scope: !6035)
!6038 = !DILocation(line: 3331, column: 7, scope: !6035)
!6039 = !DILocation(line: 3337, column: 11, scope: !5791)
!6040 = !DILocation(line: 3337, column: 17, scope: !5791)
!6041 = !DILocation(line: 3337, column: 24, scope: !5791)
!6042 = !DILocation(line: 3337, column: 31, scope: !5791)
!6043 = !DILocation(line: 3337, column: 9, scope: !5791)
!6044 = !DILocation(line: 3338, column: 14, scope: !5791)
!6045 = !DILocation(line: 3338, column: 20, scope: !5791)
!6046 = !DILocation(line: 3338, column: 26, scope: !5791)
!6047 = !DILocation(line: 3338, column: 35, scope: !5791)
!6048 = !DILocation(line: 3338, column: 42, scope: !5791)
!6049 = !DILocation(line: 3338, column: 11, scope: !5791)
!6050 = !DILocation(line: 3343, column: 11, scope: !5791)
!6051 = !DILocation(line: 3343, column: 20, scope: !5791)
!6052 = !DILocation(line: 3343, column: 29, scope: !5791)
!6053 = !DILocation(line: 3343, column: 17, scope: !5791)
!6054 = !DILocation(line: 3343, column: 34, scope: !5791)
!6055 = !DILocation(line: 3343, column: 38, scope: !5791)
!6056 = !DILocation(line: 3343, column: 47, scope: !5791)
!6057 = !DILocation(line: 3343, column: 56, scope: !5791)
!6058 = !DILocation(line: 3343, column: 44, scope: !5791)
!6059 = !DILocation(line: 0, scope: !5791)
!6060 = !DILocation(line: 3343, column: 7, scope: !5791)
!6061 = !DILocation(line: 3344, column: 8, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !5791, file: !2, line: 3344, column: 7)
!6063 = !DILocation(line: 3344, column: 7, scope: !6062)
!6064 = !DILocation(line: 3344, column: 13, scope: !6062)
!6065 = !DILocation(line: 3344, column: 17, scope: !6062)
!6066 = !DILocation(line: 3344, column: 26, scope: !6062)
!6067 = !DILocation(line: 3344, column: 33, scope: !6062)
!6068 = !DILocation(line: 3344, column: 42, scope: !6062)
!6069 = !DILocation(line: 3344, column: 30, scope: !6062)
!6070 = !DILocation(line: 3344, column: 7, scope: !5791)
!6071 = !DILocation(line: 3345, column: 13, scope: !6062)
!6072 = !DILocation(line: 3345, column: 7, scope: !6062)
!6073 = !DILocation(line: 3346, column: 6, scope: !5792)
!6074 = !DILocation(line: 3346, column: 6, scope: !5791)
!6075 = !DILocation(line: 3346, column: 17, scope: !5802)
!6076 = !DILocation(line: 3346, column: 22, scope: !5802)
!6077 = !DILocation(line: 3346, column: 17, scope: !5792)
!6078 = !DILocation(line: 3347, column: 11, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !5802, file: !2, line: 3346, column: 31)
!6080 = !DILocation(line: 3347, column: 3, scope: !6079)
!6081 = !DILocation(line: 3348, column: 3, scope: !6079)
!6082 = !DILocation(line: 3348, column: 9, scope: !6079)
!6083 = !DILocation(line: 3348, column: 16, scope: !6079)
!6084 = !DILocation(line: 3349, column: 3, scope: !6079)
!6085 = !DILocation(line: 3350, column: 17, scope: !5801)
!6086 = !DILocation(line: 3350, column: 23, scope: !5801)
!6087 = !DILocation(line: 3350, column: 35, scope: !5801)
!6088 = !DILocation(line: 3350, column: 41, scope: !5801)
!6089 = !DILocation(line: 3350, column: 48, scope: !5801)
!6090 = !DILocation(line: 3350, column: 17, scope: !5802)
!6091 = !DILocation(line: 3351, column: 29, scope: !5800)
!6092 = !DILocation(line: 3351, column: 27, scope: !5800)
!6093 = !DILocation(line: 3352, column: 30, scope: !5800)
!6094 = !DILocation(line: 3352, column: 36, scope: !5800)
!6095 = !DILocation(line: 3352, column: 9, scope: !5800)
!6096 = !DILocation(line: 3352, column: 7, scope: !5800)
!6097 = !DILocation(line: 3353, column: 8, scope: !5799)
!6098 = !DILocation(line: 3353, column: 12, scope: !5799)
!6099 = !DILocation(line: 3353, column: 18, scope: !5799)
!6100 = !DILocation(line: 3353, column: 22, scope: !5799)
!6101 = !DILocation(line: 3353, column: 28, scope: !5799)
!6102 = !DILocation(line: 3353, column: 32, scope: !5799)
!6103 = !DILocation(line: 3353, column: 38, scope: !5799)
!6104 = !DILocation(line: 3353, column: 42, scope: !5799)
!6105 = !DILocation(line: 3353, column: 48, scope: !5799)
!6106 = !DILocation(line: 3353, column: 52, scope: !5799)
!6107 = !DILocation(line: 3353, column: 7, scope: !5800)
!6108 = !DILocation(line: 3354, column: 7, scope: !5798)
!6109 = !DILocation(line: 3354, column: 22, scope: !5798)
!6110 = !DILocation(line: 3354, column: 27, scope: !5798)
!6111 = !DILocation(line: 3354, column: 33, scope: !5798)
!6112 = !DILocation(line: 3354, column: 40, scope: !5798)
!6113 = !DILocation(line: 3354, column: 47, scope: !5798)
!6114 = !DILocation(line: 3362, column: 11, scope: !5805)
!6115 = !DILocation(line: 3362, column: 18, scope: !5805)
!6116 = !DILocation(line: 3362, column: 26, scope: !5805)
!6117 = !DILocation(line: 3362, column: 11, scope: !5798)
!6118 = !DILocation(line: 3363, column: 4, scope: !5804)
!6119 = !DILocation(line: 3363, column: 21, scope: !5804)
!6120 = !DILocation(line: 3365, column: 9, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !5804, file: !2, line: 3365, column: 8)
!6122 = !DILocation(line: 3365, column: 15, scope: !6121)
!6123 = !DILocation(line: 3365, column: 22, scope: !6121)
!6124 = !DILocation(line: 3365, column: 31, scope: !6121)
!6125 = !DILocation(line: 3366, column: 9, scope: !6121)
!6126 = !DILocation(line: 3366, column: 15, scope: !6121)
!6127 = !DILocation(line: 3366, column: 20, scope: !6121)
!6128 = !DILocation(line: 3366, column: 29, scope: !6121)
!6129 = !DILocation(line: 3367, column: 9, scope: !6121)
!6130 = !DILocation(line: 3367, column: 15, scope: !6121)
!6131 = !DILocation(line: 3367, column: 21, scope: !6121)
!6132 = !DILocation(line: 3367, column: 30, scope: !6121)
!6133 = !DILocation(line: 3365, column: 8, scope: !5804)
!6134 = !DILocation(line: 3368, column: 8, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6121, file: !2, line: 3367, column: 40)
!6136 = !DILocation(line: 3368, column: 14, scope: !6135)
!6137 = !DILocation(line: 3368, column: 21, scope: !6135)
!6138 = !DILocation(line: 3369, column: 8, scope: !6135)
!6139 = !DILocation(line: 3371, column: 15, scope: !5804)
!6140 = !DILocation(line: 3371, column: 21, scope: !5804)
!6141 = !DILocation(line: 3371, column: 27, scope: !5804)
!6142 = !DILocation(line: 3371, column: 36, scope: !5804)
!6143 = !DILocation(line: 3371, column: 43, scope: !5804)
!6144 = !DILocation(line: 3371, column: 12, scope: !5804)
!6145 = !DILocation(line: 3372, column: 8, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !5804, file: !2, line: 3372, column: 8)
!6147 = !DILocation(line: 3372, column: 14, scope: !6146)
!6148 = !DILocation(line: 3372, column: 21, scope: !6146)
!6149 = !DILocation(line: 3372, column: 28, scope: !6146)
!6150 = !DILocation(line: 3372, column: 40, scope: !6146)
!6151 = !DILocation(line: 3372, column: 49, scope: !6146)
!6152 = !DILocation(line: 3372, column: 37, scope: !6146)
!6153 = !DILocation(line: 3372, column: 8, scope: !5804)
!6154 = !DILocation(line: 3373, column: 8, scope: !6146)
!6155 = !DILocation(line: 3374, column: 21, scope: !5805)
!6156 = !DILocation(line: 3374, column: 21, scope: !5804)
!6157 = !DILocation(line: 3376, column: 11, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !5798, file: !2, line: 3376, column: 11)
!6159 = !DILocation(line: 3376, column: 17, scope: !6158)
!6160 = !DILocation(line: 3376, column: 24, scope: !6158)
!6161 = !DILocation(line: 3376, column: 34, scope: !6158)
!6162 = !DILocation(line: 3376, column: 40, scope: !6158)
!6163 = !DILocation(line: 3376, column: 48, scope: !6158)
!6164 = !DILocation(line: 3376, column: 32, scope: !6158)
!6165 = !DILocation(line: 3376, column: 11, scope: !5798)
!6166 = !DILocation(line: 3377, column: 21, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6158, file: !2, line: 3376, column: 53)
!6168 = !DILocation(line: 3377, column: 4, scope: !6167)
!6169 = !DILocation(line: 3378, column: 7, scope: !6167)
!6170 = !DILocation(line: 3379, column: 11, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !5798, file: !2, line: 3379, column: 11)
!6172 = !DILocation(line: 3379, column: 18, scope: !6171)
!6173 = !DILocation(line: 3379, column: 26, scope: !6171)
!6174 = !DILocation(line: 3379, column: 11, scope: !5798)
!6175 = !DILocation(line: 3383, column: 4, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6171, file: !2, line: 3379, column: 32)
!6177 = !DILocation(line: 3383, column: 10, scope: !6176)
!6178 = !DILocation(line: 3383, column: 17, scope: !6176)
!6179 = !DILocation(line: 3383, column: 24, scope: !6176)
!6180 = !DILocation(line: 3383, column: 32, scope: !6176)
!6181 = !DILocation(line: 3384, column: 7, scope: !6176)
!6182 = !DILocation(line: 3385, column: 7, scope: !5798)
!6183 = !DILocation(line: 3385, column: 13, scope: !5798)
!6184 = !DILocation(line: 3385, column: 24, scope: !5798)
!6185 = !DILocation(line: 3386, column: 7, scope: !5798)
!6186 = !DILocation(line: 3390, column: 8, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !5809, file: !2, line: 3390, column: 8)
!6188 = !DILocation(line: 3390, column: 14, scope: !6187)
!6189 = !DILocation(line: 3390, column: 28, scope: !6187)
!6190 = !DILocation(line: 3390, column: 34, scope: !6187)
!6191 = !DILocation(line: 3390, column: 25, scope: !6187)
!6192 = !DILocation(line: 3390, column: 8, scope: !5809)
!6193 = !DILocation(line: 3391, column: 8, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6187, file: !2, line: 3390, column: 39)
!6195 = !DILocation(line: 3393, column: 19, scope: !5809)
!6196 = !DILocation(line: 3393, column: 4, scope: !5809)
!6197 = !DILocation(line: 3393, column: 10, scope: !5809)
!6198 = !DILocation(line: 3393, column: 16, scope: !5809)
!6199 = !DILocation(line: 3397, column: 8, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !5809, file: !2, line: 3397, column: 8)
!6201 = !DILocation(line: 3397, column: 14, scope: !6200)
!6202 = !DILocation(line: 3397, column: 26, scope: !6200)
!6203 = !DILocation(line: 3397, column: 32, scope: !6200)
!6204 = !DILocation(line: 3397, column: 39, scope: !6200)
!6205 = !DILocation(line: 3397, column: 8, scope: !5809)
!6206 = !DILocation(line: 3398, column: 23, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6200, file: !2, line: 3397, column: 45)
!6208 = !DILocation(line: 3398, column: 8, scope: !6207)
!6209 = !DILocation(line: 3398, column: 14, scope: !6207)
!6210 = !DILocation(line: 3398, column: 20, scope: !6207)
!6211 = !DILocation(line: 3399, column: 8, scope: !6207)
!6212 = !DILocation(line: 3401, column: 8, scope: !5808)
!6213 = !DILocation(line: 3401, column: 14, scope: !5808)
!6214 = !DILocation(line: 3401, column: 28, scope: !5808)
!6215 = !DILocation(line: 3401, column: 34, scope: !5808)
!6216 = !DILocation(line: 3401, column: 25, scope: !5808)
!6217 = !DILocation(line: 3401, column: 8, scope: !5809)
!6218 = !DILocation(line: 3402, column: 8, scope: !5807)
!6219 = !DILocation(line: 3402, column: 12, scope: !5807)
!6220 = !DILocation(line: 3402, column: 22, scope: !5807)
!6221 = !DILocation(line: 3402, column: 28, scope: !5807)
!6222 = !DILocation(line: 3403, column: 8, scope: !5807)
!6223 = !DILocation(line: 3403, column: 23, scope: !5807)
!6224 = !DILocation(line: 3403, column: 31, scope: !5807)
!6225 = !DILocation(line: 3403, column: 37, scope: !5807)
!6226 = !DILocation(line: 3408, column: 8, scope: !5807)
!6227 = !DILocation(line: 3408, column: 14, scope: !5807)
!6228 = !DILocation(line: 3408, column: 22, scope: !5807)
!6229 = !DILocation(line: 3409, column: 22, scope: !5807)
!6230 = !DILocation(line: 3409, column: 8, scope: !5807)
!6231 = !DILocation(line: 3409, column: 14, scope: !5807)
!6232 = !DILocation(line: 3409, column: 20, scope: !5807)
!6233 = !DILocation(line: 3410, column: 25, scope: !5807)
!6234 = !DILocation(line: 3410, column: 8, scope: !5807)
!6235 = !DILocation(line: 3411, column: 24, scope: !5807)
!6236 = !DILocation(line: 3411, column: 8, scope: !5807)
!6237 = !DILocation(line: 3411, column: 14, scope: !5807)
!6238 = !DILocation(line: 3411, column: 22, scope: !5807)
!6239 = !DILocation(line: 3412, column: 22, scope: !5807)
!6240 = !DILocation(line: 3412, column: 8, scope: !5807)
!6241 = !DILocation(line: 3412, column: 14, scope: !5807)
!6242 = !DILocation(line: 3412, column: 20, scope: !5807)
!6243 = !DILocation(line: 3413, column: 4, scope: !5808)
!6244 = !DILocation(line: 3413, column: 4, scope: !5807)
!6245 = !DILocation(line: 3414, column: 16, scope: !5809)
!6246 = !DILocation(line: 3414, column: 14, scope: !5809)
!6247 = !DILocation(line: 3416, column: 31, scope: !5809)
!6248 = !DILocation(line: 3416, column: 37, scope: !5809)
!6249 = !DILocation(line: 3416, column: 10, scope: !5809)
!6250 = !DILocation(line: 3416, column: 8, scope: !5809)
!6251 = !DILocation(line: 3417, column: 4, scope: !5809)
!6252 = !DILocation(line: 3417, column: 10, scope: !5809)
!6253 = !DILocation(line: 3417, column: 20, scope: !5809)
!6254 = !DILocation(line: 3418, column: 7, scope: !5809)
!6255 = !DILocation(line: 3418, column: 16, scope: !5798)
!6256 = !DILocation(line: 3418, column: 20, scope: !5798)
!6257 = distinct !{!6257, !6185, !6258, !1794}
!6258 = !DILocation(line: 3418, column: 24, scope: !5798)
!6259 = !DILocation(line: 3419, column: 11, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !5798, file: !2, line: 3419, column: 11)
!6261 = !DILocation(line: 3419, column: 17, scope: !6260)
!6262 = !DILocation(line: 3419, column: 30, scope: !6260)
!6263 = !DILocation(line: 3419, column: 36, scope: !6260)
!6264 = !DILocation(line: 3419, column: 28, scope: !6260)
!6265 = !DILocation(line: 3419, column: 11, scope: !5798)
!6266 = !DILocation(line: 3420, column: 8, scope: !6260)
!6267 = !DILocation(line: 3420, column: 4, scope: !6260)
!6268 = !DILocation(line: 3426, column: 11, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !5798, file: !2, line: 3426, column: 11)
!6270 = !DILocation(line: 3426, column: 15, scope: !6269)
!6271 = !DILocation(line: 3426, column: 11, scope: !5798)
!6272 = !DILocation(line: 3427, column: 8, scope: !6269)
!6273 = !DILocation(line: 3427, column: 4, scope: !6269)
!6274 = !DILocation(line: 3428, column: 11, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !5798, file: !2, line: 3428, column: 11)
!6276 = !DILocation(line: 3428, column: 15, scope: !6275)
!6277 = !DILocation(line: 3428, column: 11, scope: !5798)
!6278 = !DILocation(line: 3429, column: 4, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6275, file: !2, line: 3428, column: 21)
!6280 = !DILocation(line: 3431, column: 11, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !5798, file: !2, line: 3431, column: 11)
!6282 = !DILocation(line: 3431, column: 18, scope: !6281)
!6283 = !DILocation(line: 3431, column: 26, scope: !6281)
!6284 = !DILocation(line: 3431, column: 11, scope: !5798)
!6285 = !DILocation(line: 3432, column: 8, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !2, line: 3432, column: 8)
!6287 = distinct !DILexicalBlock(scope: !6281, file: !2, line: 3431, column: 32)
!6288 = !DILocation(line: 3432, column: 14, scope: !6286)
!6289 = !DILocation(line: 3432, column: 21, scope: !6286)
!6290 = !DILocation(line: 3432, column: 8, scope: !6287)
!6291 = !DILocation(line: 3433, column: 8, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6286, file: !2, line: 3432, column: 30)
!6293 = !DILocation(line: 3433, column: 14, scope: !6292)
!6294 = !DILocation(line: 3433, column: 21, scope: !6292)
!6295 = !DILocation(line: 3434, column: 8, scope: !6292)
!6296 = !DILocation(line: 3439, column: 4, scope: !6287)
!6297 = !DILocation(line: 3439, column: 10, scope: !6287)
!6298 = !DILocation(line: 3439, column: 17, scope: !6287)
!6299 = !DILocation(line: 3439, column: 24, scope: !6287)
!6300 = !DILocation(line: 3439, column: 32, scope: !6287)
!6301 = !DILocation(line: 3440, column: 7, scope: !6287)
!6302 = !DILocation(line: 3441, column: 3, scope: !5799)
!6303 = !DILocation(line: 3441, column: 3, scope: !5798)
!6304 = !DILocation(line: 3441, column: 15, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !5799, file: !2, line: 3441, column: 14)
!6306 = !DILocation(line: 3441, column: 19, scope: !6305)
!6307 = !DILocation(line: 3441, column: 25, scope: !6305)
!6308 = !DILocation(line: 3441, column: 29, scope: !6305)
!6309 = !DILocation(line: 3441, column: 35, scope: !6305)
!6310 = !DILocation(line: 3441, column: 39, scope: !6305)
!6311 = !DILocation(line: 3441, column: 45, scope: !6305)
!6312 = !DILocation(line: 3441, column: 49, scope: !6305)
!6313 = !DILocation(line: 3441, column: 55, scope: !6305)
!6314 = !DILocation(line: 3441, column: 59, scope: !6305)
!6315 = !DILocation(line: 3441, column: 14, scope: !5799)
!6316 = !DILocation(line: 3447, column: 7, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6305, file: !2, line: 3441, column: 65)
!6318 = !DILocation(line: 3447, column: 13, scope: !6317)
!6319 = !DILocation(line: 3447, column: 24, scope: !6317)
!6320 = !DILocation(line: 3448, column: 11, scope: !6317)
!6321 = !DILocation(line: 3449, column: 11, scope: !6317)
!6322 = !DILocation(line: 3450, column: 3, scope: !6317)
!6323 = !DILocation(line: 3451, column: 6, scope: !5800)
!6324 = !DILocation(line: 3451, column: 18, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !5801, file: !2, line: 3451, column: 17)
!6326 = !DILocation(line: 3451, column: 24, scope: !6325)
!6327 = !DILocation(line: 3451, column: 28, scope: !6325)
!6328 = !DILocation(line: 3451, column: 34, scope: !6325)
!6329 = !DILocation(line: 3451, column: 38, scope: !6325)
!6330 = !DILocation(line: 3451, column: 44, scope: !6325)
!6331 = !DILocation(line: 3451, column: 48, scope: !6325)
!6332 = !DILocation(line: 3451, column: 17, scope: !5801)
!6333 = !DILocation(line: 3453, column: 3, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6325, file: !2, line: 3451, column: 54)
!6335 = !DILocation(line: 3453, column: 9, scope: !6334)
!6336 = !DILocation(line: 3453, column: 20, scope: !6334)
!6337 = !DILocation(line: 3454, column: 7, scope: !6334)
!6338 = !DILocation(line: 3455, column: 7, scope: !6334)
!6339 = !DILocation(line: 3456, column: 6, scope: !6334)
!6340 = !DILocation(line: 3457, column: 10, scope: !5815)
!6341 = !DILocation(line: 3457, column: 14, scope: !5815)
!6342 = !DILocation(line: 3457, column: 10, scope: !5793)
!6343 = !DILocation(line: 3458, column: 8, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !5814, file: !2, line: 3458, column: 7)
!6345 = !DILocation(line: 3458, column: 15, scope: !6344)
!6346 = !{!2066, !1546, i64 20}
!6347 = !DILocation(line: 3458, column: 18, scope: !6344)
!6348 = !DILocation(line: 3458, column: 24, scope: !6344)
!6349 = !DILocation(line: 3459, column: 9, scope: !6344)
!6350 = !DILocation(line: 3459, column: 16, scope: !6344)
!6351 = !DILocation(line: 3459, column: 22, scope: !6344)
!6352 = !DILocation(line: 3459, column: 28, scope: !6344)
!6353 = !DILocation(line: 3459, column: 32, scope: !6344)
!6354 = !DILocation(line: 3459, column: 38, scope: !6344)
!6355 = !DILocation(line: 3459, column: 44, scope: !6344)
!6356 = !DILocation(line: 3460, column: 9, scope: !6344)
!6357 = !DILocation(line: 3460, column: 15, scope: !6344)
!6358 = !DILocation(line: 3460, column: 22, scope: !6344)
!6359 = !DILocation(line: 3460, column: 32, scope: !6344)
!6360 = !DILocation(line: 3460, column: 38, scope: !6344)
!6361 = !DILocation(line: 3460, column: 46, scope: !6344)
!6362 = !DILocation(line: 3460, column: 30, scope: !6344)
!6363 = !DILocation(line: 3458, column: 7, scope: !5814)
!6364 = !DILocation(line: 3469, column: 24, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6344, file: !2, line: 3460, column: 53)
!6366 = !DILocation(line: 3469, column: 7, scope: !6365)
!6367 = !DILocation(line: 3470, column: 3, scope: !6365)
!6368 = !DILocation(line: 3471, column: 7, scope: !5813)
!6369 = !DILocation(line: 3471, column: 14, scope: !5813)
!6370 = !DILocation(line: 3471, column: 22, scope: !5813)
!6371 = !DILocation(line: 3471, column: 7, scope: !5814)
!6372 = !DILocation(line: 3472, column: 7, scope: !5812)
!6373 = !DILocation(line: 3472, column: 24, scope: !5812)
!6374 = !DILocation(line: 3475, column: 12, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !5812, file: !2, line: 3475, column: 11)
!6376 = !DILocation(line: 3475, column: 18, scope: !6375)
!6377 = !DILocation(line: 3475, column: 25, scope: !6375)
!6378 = !DILocation(line: 3475, column: 34, scope: !6375)
!6379 = !DILocation(line: 3476, column: 5, scope: !6375)
!6380 = !DILocation(line: 3476, column: 11, scope: !6375)
!6381 = !DILocation(line: 3476, column: 16, scope: !6375)
!6382 = !DILocation(line: 3476, column: 25, scope: !6375)
!6383 = !DILocation(line: 3477, column: 5, scope: !6375)
!6384 = !DILocation(line: 3477, column: 11, scope: !6375)
!6385 = !DILocation(line: 3477, column: 17, scope: !6375)
!6386 = !DILocation(line: 3477, column: 26, scope: !6375)
!6387 = !DILocation(line: 3475, column: 11, scope: !5812)
!6388 = !DILocation(line: 3478, column: 4, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6375, file: !2, line: 3477, column: 36)
!6390 = !DILocation(line: 3478, column: 10, scope: !6389)
!6391 = !DILocation(line: 3478, column: 17, scope: !6389)
!6392 = !DILocation(line: 3479, column: 4, scope: !6389)
!6393 = !DILocation(line: 3481, column: 18, scope: !5812)
!6394 = !DILocation(line: 3481, column: 24, scope: !5812)
!6395 = !DILocation(line: 3481, column: 30, scope: !5812)
!6396 = !DILocation(line: 3481, column: 39, scope: !5812)
!6397 = !DILocation(line: 3481, column: 46, scope: !5812)
!6398 = !DILocation(line: 3481, column: 15, scope: !5812)
!6399 = !DILocation(line: 3482, column: 11, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !5812, file: !2, line: 3482, column: 11)
!6401 = !DILocation(line: 3482, column: 17, scope: !6400)
!6402 = !DILocation(line: 3482, column: 24, scope: !6400)
!6403 = !DILocation(line: 3482, column: 31, scope: !6400)
!6404 = !DILocation(line: 3482, column: 43, scope: !6400)
!6405 = !DILocation(line: 3482, column: 52, scope: !6400)
!6406 = !DILocation(line: 3482, column: 40, scope: !6400)
!6407 = !DILocation(line: 3482, column: 11, scope: !5812)
!6408 = !DILocation(line: 3483, column: 4, scope: !6400)
!6409 = !DILocation(line: 3487, column: 7, scope: !5812)
!6410 = !DILocation(line: 3487, column: 13, scope: !5812)
!6411 = !DILocation(line: 3487, column: 20, scope: !5812)
!6412 = !DILocation(line: 3487, column: 27, scope: !5812)
!6413 = !DILocation(line: 3487, column: 35, scope: !5812)
!6414 = !DILocation(line: 3488, column: 3, scope: !5813)
!6415 = !DILocation(line: 3488, column: 3, scope: !5812)
!6416 = !DILocation(line: 3489, column: 8, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !5814, file: !2, line: 3489, column: 7)
!6418 = !DILocation(line: 3489, column: 15, scope: !6417)
!6419 = !DILocation(line: 3489, column: 21, scope: !6417)
!6420 = !DILocation(line: 3489, column: 27, scope: !6417)
!6421 = !DILocation(line: 3490, column: 8, scope: !6417)
!6422 = !DILocation(line: 3490, column: 15, scope: !6417)
!6423 = !DILocation(line: 3490, column: 21, scope: !6417)
!6424 = !DILocation(line: 3489, column: 7, scope: !5814)
!6425 = !DILocation(line: 3491, column: 11, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6427, file: !2, line: 3491, column: 11)
!6427 = distinct !DILexicalBlock(scope: !6417, file: !2, line: 3490, column: 44)
!6428 = !DILocation(line: 3491, column: 17, scope: !6426)
!6429 = !DILocation(line: 3491, column: 24, scope: !6426)
!6430 = !DILocation(line: 3491, column: 11, scope: !6427)
!6431 = !DILocation(line: 3492, column: 11, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6426, file: !2, line: 3491, column: 33)
!6433 = !DILocation(line: 3492, column: 17, scope: !6432)
!6434 = !DILocation(line: 3492, column: 24, scope: !6432)
!6435 = !DILocation(line: 3493, column: 4, scope: !6432)
!6436 = !DILocation(line: 3499, column: 7, scope: !6427)
!6437 = !DILocation(line: 3499, column: 13, scope: !6427)
!6438 = !DILocation(line: 3499, column: 20, scope: !6427)
!6439 = !DILocation(line: 3499, column: 27, scope: !6427)
!6440 = !DILocation(line: 3499, column: 34, scope: !6427)
!6441 = !DILocation(line: 3500, column: 3, scope: !6427)
!6442 = !DILocation(line: 3504, column: 17, scope: !5814)
!6443 = !DILocation(line: 3504, column: 23, scope: !5814)
!6444 = !DILocation(line: 3504, column: 30, scope: !5814)
!6445 = !DILocation(line: 3504, column: 37, scope: !5814)
!6446 = !DILocation(line: 3504, column: 3, scope: !5814)
!6447 = !DILocation(line: 3504, column: 9, scope: !5814)
!6448 = !DILocation(line: 3504, column: 15, scope: !5814)
!6449 = !DILocation(line: 3505, column: 3, scope: !5814)
!6450 = !DILocation(line: 3505, column: 9, scope: !5814)
!6451 = !DILocation(line: 3505, column: 17, scope: !5814)
!6452 = !DILocation(line: 3506, column: 7, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !5814, file: !2, line: 3506, column: 7)
!6454 = !DILocation(line: 3506, column: 14, scope: !6453)
!6455 = !DILocation(line: 3506, column: 19, scope: !6453)
!6456 = !DILocation(line: 3506, column: 7, scope: !5814)
!6457 = !DILocation(line: 3507, column: 22, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6453, file: !2, line: 3506, column: 28)
!6459 = !DILocation(line: 3507, column: 7, scope: !6458)
!6460 = !DILocation(line: 3507, column: 13, scope: !6458)
!6461 = !DILocation(line: 3507, column: 19, scope: !6458)
!6462 = !DILocation(line: 3508, column: 3, scope: !6458)
!6463 = !DILocation(line: 3509, column: 3, scope: !5814)
!6464 = !DILocation(line: 3510, column: 17, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !5815, file: !2, line: 3510, column: 17)
!6466 = !DILocation(line: 3510, column: 21, scope: !6465)
!6467 = !DILocation(line: 3510, column: 17, scope: !5815)
!6468 = !DILocation(line: 3511, column: 3, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6465, file: !2, line: 3510, column: 26)
!6470 = !DILocation(line: 3511, column: 9, scope: !6469)
!6471 = !DILocation(line: 3511, column: 16, scope: !6469)
!6472 = !DILocation(line: 3512, column: 3, scope: !6469)
!6473 = !DILocation(line: 3514, column: 2, scope: !5793)
!6474 = !DILocation(line: 3318, column: 45, scope: !5794)
!6475 = !DILocation(line: 3318, column: 51, scope: !5794)
!6476 = !DILocation(line: 3318, column: 58, scope: !5794)
!6477 = !DILocation(line: 3318, column: 2, scope: !5794)
!6478 = distinct !{!6478, !6003, !6479, !1794}
!6479 = !DILocation(line: 3514, column: 2, scope: !5795)
!6480 = !DILocation(line: 3515, column: 7, scope: !5818)
!6481 = !DILocation(line: 3515, column: 13, scope: !5818)
!6482 = !DILocation(line: 3515, column: 21, scope: !5818)
!6483 = !DILocation(line: 3515, column: 27, scope: !5818)
!6484 = !DILocation(line: 3515, column: 31, scope: !5818)
!6485 = !DILocation(line: 3515, column: 37, scope: !5818)
!6486 = !DILocation(line: 3515, column: 44, scope: !5818)
!6487 = !DILocation(line: 3515, column: 52, scope: !5818)
!6488 = !DILocation(line: 3515, column: 6, scope: !5788)
!6489 = !DILocation(line: 3515, column: 59, scope: !5818)
!6490 = !DILocation(line: 3516, column: 1, scope: !5817)
!6491 = !DILocation(line: 3520, column: 6, scope: !5817)
!6492 = !DILocation(line: 3520, column: 12, scope: !5817)
!6493 = !DILocation(line: 3520, column: 24, scope: !5817)
!6494 = !DILocation(line: 3525, column: 27, scope: !5817)
!6495 = !DILocation(line: 3525, column: 6, scope: !5817)
!6496 = !DILocation(line: 3526, column: 2, scope: !5817)
!6497 = !DILocation(line: 3515, column: 56, scope: !5818)
!6498 = !DILocation(line: 3527, column: 1, scope: !5788)
!6499 = !DILocation(line: 3528, column: 2, scope: !5788)
!6500 = distinct !{!6500, !5914, !6501, !1794}
!6501 = !DILocation(line: 3529, column: 5, scope: !5777)
!6502 = !DILocation(line: 3530, column: 1, scope: !5777)
!6503 = !DILocation(line: 3531, column: 9, scope: !5825)
!6504 = !DILocation(line: 3531, column: 15, scope: !5825)
!6505 = !DILocation(line: 3531, column: 25, scope: !5825)
!6506 = !DILocation(line: 3531, column: 9, scope: !5777)
!6507 = !DILocation(line: 3532, column: 6, scope: !5823)
!6508 = !DILocation(line: 3532, column: 12, scope: !5823)
!6509 = !DILocation(line: 3532, column: 19, scope: !5823)
!6510 = !DILocation(line: 3532, column: 6, scope: !5824)
!6511 = !DILocation(line: 3533, column: 6, scope: !5822)
!6512 = !DILocation(line: 3533, column: 10, scope: !5822)
!6513 = !DILocation(line: 3535, column: 13, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !5822, file: !2, line: 3535, column: 6)
!6515 = !DILocation(line: 3535, column: 11, scope: !6514)
!6516 = !DILocation(line: 3535, column: 17, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6514, file: !2, line: 3535, column: 6)
!6518 = !DILocation(line: 3535, column: 21, scope: !6517)
!6519 = !DILocation(line: 3535, column: 27, scope: !6517)
!6520 = !DILocation(line: 3535, column: 19, scope: !6517)
!6521 = !DILocation(line: 3535, column: 6, scope: !6514)
!6522 = !DILocation(line: 3536, column: 7, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6517, file: !2, line: 3536, column: 7)
!6524 = !DILocation(line: 3536, column: 13, scope: !6523)
!6525 = !DILocation(line: 3536, column: 23, scope: !6523)
!6526 = !DILocation(line: 3536, column: 26, scope: !6523)
!6527 = !DILocation(line: 3536, column: 33, scope: !6523)
!6528 = !DILocation(line: 3536, column: 7, scope: !6517)
!6529 = !DILocation(line: 3537, column: 7, scope: !6523)
!6530 = !DILocation(line: 3537, column: 15, scope: !6523)
!6531 = !DILocation(line: 3537, column: 21, scope: !6523)
!6532 = !DILocation(line: 3537, column: 31, scope: !6523)
!6533 = !DILocation(line: 3537, column: 34, scope: !6523)
!6534 = !DILocation(line: 3536, column: 36, scope: !6523)
!6535 = !DILocation(line: 3535, column: 41, scope: !6517)
!6536 = !DILocation(line: 3535, column: 6, scope: !6517)
!6537 = distinct !{!6537, !6521, !6538, !1794}
!6538 = !DILocation(line: 3537, column: 40, scope: !6514)
!6539 = !DILocation(line: 3538, column: 2, scope: !5823)
!6540 = !DILocation(line: 3538, column: 2, scope: !5822)
!6541 = !DILocation(line: 3539, column: 2, scope: !5824)
!6542 = !DILocation(line: 3539, column: 10, scope: !5824)
!6543 = !DILocation(line: 3539, column: 16, scope: !5824)
!6544 = !DILocation(line: 3540, column: 5, scope: !5824)
!6545 = !DILocation(line: 3541, column: 9, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !5777, file: !2, line: 3541, column: 9)
!6547 = !DILocation(line: 3541, column: 15, scope: !6546)
!6548 = !DILocation(line: 3541, column: 21, scope: !6546)
!6549 = !DILocation(line: 3541, column: 9, scope: !5777)
!6550 = !DILocation(line: 3542, column: 9, scope: !6546)
!6551 = !DILocation(line: 3543, column: 9, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !5777, file: !2, line: 3543, column: 9)
!6553 = !DILocation(line: 3543, column: 15, scope: !6552)
!6554 = !DILocation(line: 3543, column: 22, scope: !6552)
!6555 = !DILocation(line: 3543, column: 9, scope: !5777)
!6556 = !DILocation(line: 3544, column: 2, scope: !6552)
!6557 = !DILocation(line: 3544, column: 10, scope: !6552)
!6558 = !DILocation(line: 3544, column: 16, scope: !6552)
!6559 = !DILocation(line: 3545, column: 9, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !5777, file: !2, line: 3545, column: 9)
!6561 = !DILocation(line: 3545, column: 15, scope: !6560)
!6562 = !DILocation(line: 3545, column: 22, scope: !6560)
!6563 = !DILocation(line: 3545, column: 9, scope: !5777)
!6564 = !DILocation(line: 3546, column: 2, scope: !6560)
!6565 = !DILocation(line: 3547, column: 9, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !5777, file: !2, line: 3547, column: 9)
!6567 = !DILocation(line: 3547, column: 15, scope: !6566)
!6568 = !DILocation(line: 3547, column: 22, scope: !6566)
!6569 = !DILocation(line: 3547, column: 9, scope: !5777)
!6570 = !DILocation(line: 3548, column: 6, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6572, file: !2, line: 3548, column: 6)
!6572 = distinct !DILexicalBlock(scope: !6566, file: !2, line: 3547, column: 29)
!6573 = !DILocation(line: 3548, column: 12, scope: !6571)
!6574 = !DILocation(line: 3548, column: 19, scope: !6571)
!6575 = !DILocation(line: 3548, column: 6, scope: !6572)
!6576 = !DILocation(line: 3549, column: 6, scope: !6571)
!6577 = !DILocation(line: 3550, column: 2, scope: !6572)
!6578 = !DILocation(line: 3552, column: 12, scope: !5777)
!6579 = !DILocation(line: 3552, column: 18, scope: !5777)
!6580 = !DILocation(line: 3552, column: 5, scope: !5777)
!6581 = !DILocation(line: 3553, column: 1, scope: !5777)
!6582 = distinct !DISubprogram(name: "xmlRegexpIsDeterminist", scope: !2, file: !2, line: 5678, type: !6583, scopeLine: 5678, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !6585)
!6583 = !DISubroutineType(types: !6584)
!6584 = !{!1306, !1345}
!6585 = !{!6586, !6587, !6592, !6593}
!6586 = !DILocalVariable(name: "comp", arg: 1, scope: !6582, file: !2, line: 5678, type: !1345)
!6587 = !DILocalVariable(name: "am", scope: !6582, file: !2, line: 5679, type: !6588)
!6588 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAutomataPtr", file: !6589, line: 30, baseType: !6590)
!6589 = !DIFile(filename: "./include/libxml/xmlautomata.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "3c3c0a7d353bacfbede7c2decf27e62a")
!6590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6591, size: 64)
!6591 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAutomata", file: !6589, line: 29, baseType: !1486)
!6592 = !DILocalVariable(name: "ret", scope: !6582, file: !2, line: 5680, type: !1306)
!6593 = !DILocalVariable(name: "i", scope: !6594, file: !2, line: 5691, type: !1306)
!6594 = distinct !DILexicalBlock(scope: !6595, file: !2, line: 5690, column: 29)
!6595 = distinct !DILexicalBlock(scope: !6582, file: !2, line: 5690, column: 9)
!6596 = !DILocation(line: 5678, column: 37, scope: !6582)
!6597 = !DILocation(line: 5679, column: 5, scope: !6582)
!6598 = !DILocation(line: 5679, column: 20, scope: !6582)
!6599 = !DILocation(line: 5680, column: 5, scope: !6582)
!6600 = !DILocation(line: 5680, column: 9, scope: !6582)
!6601 = !DILocation(line: 5682, column: 9, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6582, file: !2, line: 5682, column: 9)
!6603 = !DILocation(line: 5682, column: 14, scope: !6602)
!6604 = !DILocation(line: 5682, column: 9, scope: !6582)
!6605 = !DILocation(line: 5683, column: 2, scope: !6602)
!6606 = !DILocation(line: 5684, column: 9, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6582, file: !2, line: 5684, column: 9)
!6608 = !DILocation(line: 5684, column: 15, scope: !6607)
!6609 = !DILocation(line: 5684, column: 27, scope: !6607)
!6610 = !DILocation(line: 5684, column: 9, scope: !6582)
!6611 = !DILocation(line: 5685, column: 9, scope: !6607)
!6612 = !DILocation(line: 5685, column: 15, scope: !6607)
!6613 = !DILocation(line: 5685, column: 2, scope: !6607)
!6614 = !DILocation(line: 5687, column: 10, scope: !6582)
!6615 = !DILocation(line: 5687, column: 8, scope: !6582)
!6616 = !DILocation(line: 5688, column: 9, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6582, file: !2, line: 5688, column: 9)
!6618 = !DILocation(line: 5688, column: 12, scope: !6617)
!6619 = !DILocation(line: 5688, column: 9, scope: !6582)
!6620 = !DILocation(line: 5689, column: 9, scope: !6617)
!6621 = !DILocation(line: 5690, column: 9, scope: !6595)
!6622 = !DILocation(line: 5690, column: 13, scope: !6595)
!6623 = !DILocation(line: 5690, column: 20, scope: !6595)
!6624 = !DILocation(line: 5690, column: 9, scope: !6582)
!6625 = !DILocation(line: 5691, column: 2, scope: !6594)
!6626 = !DILocation(line: 5691, column: 6, scope: !6594)
!6627 = !DILocation(line: 5693, column: 9, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6594, file: !2, line: 5693, column: 2)
!6629 = !DILocation(line: 5693, column: 7, scope: !6628)
!6630 = !DILocation(line: 5693, column: 13, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6628, file: !2, line: 5693, column: 2)
!6632 = !DILocation(line: 5693, column: 17, scope: !6631)
!6633 = !DILocation(line: 5693, column: 21, scope: !6631)
!6634 = !DILocation(line: 5693, column: 15, scope: !6631)
!6635 = !DILocation(line: 5693, column: 2, scope: !6628)
!6636 = !DILocation(line: 5694, column: 22, scope: !6631)
!6637 = !DILocation(line: 5694, column: 26, scope: !6631)
!6638 = !DILocation(line: 5694, column: 33, scope: !6631)
!6639 = !DILocation(line: 5694, column: 6, scope: !6631)
!6640 = !DILocation(line: 5693, column: 31, scope: !6631)
!6641 = !DILocation(line: 5693, column: 2, scope: !6631)
!6642 = distinct !{!6642, !6635, !6643, !1794}
!6643 = !DILocation(line: 5694, column: 35, scope: !6628)
!6644 = !DILocation(line: 5695, column: 2, scope: !6594)
!6645 = !DILocation(line: 5695, column: 10, scope: !6594)
!6646 = !DILocation(line: 5695, column: 14, scope: !6594)
!6647 = !DILocation(line: 5696, column: 5, scope: !6595)
!6648 = !DILocation(line: 5696, column: 5, scope: !6594)
!6649 = !DILocation(line: 5697, column: 19, scope: !6582)
!6650 = !DILocation(line: 5697, column: 25, scope: !6582)
!6651 = !DILocation(line: 5697, column: 5, scope: !6582)
!6652 = !DILocation(line: 5697, column: 9, scope: !6582)
!6653 = !DILocation(line: 5697, column: 17, scope: !6582)
!6654 = !DILocation(line: 5698, column: 17, scope: !6582)
!6655 = !DILocation(line: 5698, column: 23, scope: !6582)
!6656 = !DILocation(line: 5698, column: 5, scope: !6582)
!6657 = !DILocation(line: 5698, column: 9, scope: !6582)
!6658 = !DILocation(line: 5698, column: 15, scope: !6582)
!6659 = !DILocation(line: 5699, column: 20, scope: !6582)
!6660 = !DILocation(line: 5699, column: 26, scope: !6582)
!6661 = !DILocation(line: 5699, column: 5, scope: !6582)
!6662 = !DILocation(line: 5699, column: 9, scope: !6582)
!6663 = !DILocation(line: 5699, column: 18, scope: !6582)
!6664 = !DILocation(line: 5700, column: 18, scope: !6582)
!6665 = !DILocation(line: 5700, column: 24, scope: !6582)
!6666 = !DILocation(line: 5700, column: 5, scope: !6582)
!6667 = !DILocation(line: 5700, column: 9, scope: !6582)
!6668 = !DILocation(line: 5700, column: 16, scope: !6582)
!6669 = !DILocation(line: 5701, column: 5, scope: !6582)
!6670 = !DILocation(line: 5701, column: 9, scope: !6582)
!6671 = !DILocation(line: 5701, column: 21, scope: !6582)
!6672 = !DILocation(line: 5702, column: 17, scope: !6582)
!6673 = !DILocation(line: 5702, column: 23, scope: !6582)
!6674 = !DILocation(line: 5702, column: 5, scope: !6582)
!6675 = !DILocation(line: 5702, column: 9, scope: !6582)
!6676 = !DILocation(line: 5702, column: 15, scope: !6582)
!6677 = !DILocation(line: 5703, column: 36, scope: !6582)
!6678 = !DILocation(line: 5703, column: 11, scope: !6582)
!6679 = !DILocation(line: 5703, column: 9, scope: !6582)
!6680 = !DILocation(line: 5704, column: 5, scope: !6582)
!6681 = !DILocation(line: 5704, column: 9, scope: !6582)
!6682 = !DILocation(line: 5704, column: 15, scope: !6582)
!6683 = !DILocation(line: 5705, column: 5, scope: !6582)
!6684 = !DILocation(line: 5705, column: 9, scope: !6582)
!6685 = !DILocation(line: 5705, column: 16, scope: !6582)
!6686 = !DILocation(line: 5706, column: 21, scope: !6582)
!6687 = !DILocation(line: 5706, column: 5, scope: !6582)
!6688 = !DILocation(line: 5707, column: 25, scope: !6582)
!6689 = !DILocation(line: 5707, column: 5, scope: !6582)
!6690 = !DILocation(line: 5707, column: 11, scope: !6582)
!6691 = !DILocation(line: 5707, column: 23, scope: !6582)
!6692 = !DILocation(line: 5708, column: 12, scope: !6582)
!6693 = !DILocation(line: 5708, column: 5, scope: !6582)
!6694 = !DILocation(line: 5709, column: 1, scope: !6582)
!6695 = distinct !DISubprogram(name: "xmlNewAutomata", scope: !2, file: !2, line: 5765, type: !6696, scopeLine: 5765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !6698)
!6696 = !DISubroutineType(types: !6697)
!6697 = !{!6588}
!6698 = !{!6699}
!6699 = !DILocalVariable(name: "ctxt", scope: !6695, file: !2, line: 5766, type: !6588)
!6700 = !DILocation(line: 5766, column: 5, scope: !6695)
!6701 = !DILocation(line: 5766, column: 20, scope: !6695)
!6702 = !DILocation(line: 5768, column: 12, scope: !6695)
!6703 = !DILocation(line: 5768, column: 10, scope: !6695)
!6704 = !DILocation(line: 5769, column: 9, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6695, file: !2, line: 5769, column: 9)
!6706 = !DILocation(line: 5769, column: 14, scope: !6705)
!6707 = !DILocation(line: 5769, column: 9, scope: !6695)
!6708 = !DILocation(line: 5770, column: 2, scope: !6705)
!6709 = !DILocation(line: 5773, column: 5, scope: !6695)
!6710 = !DILocation(line: 5773, column: 11, scope: !6695)
!6711 = !DILocation(line: 5773, column: 15, scope: !6695)
!6712 = !DILocation(line: 5774, column: 48, scope: !6695)
!6713 = !DILocation(line: 5774, column: 33, scope: !6695)
!6714 = !DILocation(line: 5774, column: 19, scope: !6695)
!6715 = !DILocation(line: 5774, column: 25, scope: !6695)
!6716 = !DILocation(line: 5774, column: 31, scope: !6695)
!6717 = !DILocation(line: 5774, column: 5, scope: !6695)
!6718 = !DILocation(line: 5774, column: 11, scope: !6695)
!6719 = !DILocation(line: 5774, column: 17, scope: !6695)
!6720 = !DILocation(line: 5775, column: 9, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6695, file: !2, line: 5775, column: 9)
!6722 = !DILocation(line: 5775, column: 15, scope: !6721)
!6723 = !DILocation(line: 5775, column: 21, scope: !6721)
!6724 = !DILocation(line: 5775, column: 9, scope: !6695)
!6725 = !DILocation(line: 5776, column: 18, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6721, file: !2, line: 5775, column: 30)
!6727 = !DILocation(line: 5776, column: 2, scope: !6726)
!6728 = !DILocation(line: 5777, column: 2, scope: !6726)
!6729 = !DILocation(line: 5779, column: 5, scope: !6695)
!6730 = !DILocation(line: 5779, column: 11, scope: !6695)
!6731 = !DILocation(line: 5779, column: 18, scope: !6695)
!6732 = !DILocation(line: 5779, column: 23, scope: !6695)
!6733 = !DILocation(line: 5780, column: 25, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6695, file: !2, line: 5780, column: 9)
!6735 = !DILocation(line: 5780, column: 31, scope: !6734)
!6736 = !DILocation(line: 5780, column: 37, scope: !6734)
!6737 = !DILocation(line: 5780, column: 9, scope: !6734)
!6738 = !DILocation(line: 5780, column: 44, scope: !6734)
!6739 = !DILocation(line: 5780, column: 9, scope: !6695)
!6740 = !DILocation(line: 5781, column: 25, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6734, file: !2, line: 5780, column: 49)
!6742 = !DILocation(line: 5781, column: 31, scope: !6741)
!6743 = !DILocation(line: 5781, column: 9, scope: !6741)
!6744 = !DILocation(line: 5782, column: 18, scope: !6741)
!6745 = !DILocation(line: 5782, column: 2, scope: !6741)
!6746 = !DILocation(line: 5783, column: 2, scope: !6741)
!6747 = !DILocation(line: 5785, column: 5, scope: !6695)
!6748 = !DILocation(line: 5785, column: 11, scope: !6695)
!6749 = !DILocation(line: 5785, column: 17, scope: !6695)
!6750 = !DILocation(line: 5787, column: 12, scope: !6695)
!6751 = !DILocation(line: 5787, column: 5, scope: !6695)
!6752 = !DILocation(line: 5788, column: 1, scope: !6695)
!6753 = distinct !DISubprogram(name: "xmlRegFreeState", scope: !2, file: !2, line: 921, type: !6754, scopeLine: 921, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !6756)
!6754 = !DISubroutineType(types: !6755)
!6755 = !{null, !1358}
!6756 = !{!6757}
!6757 = !DILocalVariable(name: "state", arg: 1, scope: !6753, file: !2, line: 921, type: !1358)
!6758 = !DILocation(line: 921, column: 32, scope: !6753)
!6759 = !DILocation(line: 922, column: 9, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6753, file: !2, line: 922, column: 9)
!6761 = !DILocation(line: 922, column: 15, scope: !6760)
!6762 = !DILocation(line: 922, column: 9, scope: !6753)
!6763 = !DILocation(line: 923, column: 2, scope: !6760)
!6764 = !DILocation(line: 925, column: 9, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6753, file: !2, line: 925, column: 9)
!6766 = !DILocation(line: 925, column: 16, scope: !6765)
!6767 = !DILocation(line: 925, column: 22, scope: !6765)
!6768 = !DILocation(line: 925, column: 9, scope: !6753)
!6769 = !DILocation(line: 926, column: 2, scope: !6765)
!6770 = !DILocation(line: 926, column: 10, scope: !6765)
!6771 = !DILocation(line: 926, column: 17, scope: !6765)
!6772 = !DILocation(line: 927, column: 9, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6753, file: !2, line: 927, column: 9)
!6774 = !DILocation(line: 927, column: 16, scope: !6773)
!6775 = !{!1985, !1528, i64 48}
!6776 = !DILocation(line: 927, column: 24, scope: !6773)
!6777 = !DILocation(line: 927, column: 9, scope: !6753)
!6778 = !DILocation(line: 928, column: 2, scope: !6773)
!6779 = !DILocation(line: 928, column: 10, scope: !6773)
!6780 = !DILocation(line: 928, column: 17, scope: !6773)
!6781 = !DILocation(line: 929, column: 5, scope: !6753)
!6782 = !DILocation(line: 929, column: 13, scope: !6753)
!6783 = !DILocation(line: 930, column: 1, scope: !6753)
!6784 = distinct !DISubprogram(name: "xmlFAComputesDeterminism", scope: !2, file: !2, line: 2710, type: !6785, scopeLine: 2710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !6787)
!6785 = !DISubroutineType(types: !6786)
!6786 = !{!1306, !1483}
!6787 = !{!6788, !6789, !6790, !6791, !6792, !6793, !6794, !6795, !6796, !6797}
!6788 = !DILocalVariable(name: "ctxt", arg: 1, scope: !6784, file: !2, line: 2710, type: !1483)
!6789 = !DILocalVariable(name: "statenr", scope: !6784, file: !2, line: 2711, type: !1306)
!6790 = !DILocalVariable(name: "transnr", scope: !6784, file: !2, line: 2711, type: !1306)
!6791 = !DILocalVariable(name: "state", scope: !6784, file: !2, line: 2712, type: !1358)
!6792 = !DILocalVariable(name: "t1", scope: !6784, file: !2, line: 2713, type: !1884)
!6793 = !DILocalVariable(name: "t2", scope: !6784, file: !2, line: 2713, type: !1884)
!6794 = !DILocalVariable(name: "last", scope: !6784, file: !2, line: 2713, type: !1884)
!6795 = !DILocalVariable(name: "i", scope: !6784, file: !2, line: 2714, type: !1306)
!6796 = !DILocalVariable(name: "ret", scope: !6784, file: !2, line: 2715, type: !1306)
!6797 = !DILocalVariable(name: "deep", scope: !6784, file: !2, line: 2716, type: !1306)
!6798 = !DILocation(line: 2710, column: 46, scope: !6784)
!6799 = !DILocation(line: 2711, column: 5, scope: !6784)
!6800 = !DILocation(line: 2711, column: 9, scope: !6784)
!6801 = !DILocation(line: 2711, column: 18, scope: !6784)
!6802 = !DILocation(line: 2712, column: 5, scope: !6784)
!6803 = !DILocation(line: 2712, column: 20, scope: !6784)
!6804 = !DILocation(line: 2713, column: 5, scope: !6784)
!6805 = !DILocation(line: 2713, column: 20, scope: !6784)
!6806 = !DILocation(line: 2713, column: 24, scope: !6784)
!6807 = !DILocation(line: 2713, column: 28, scope: !6784)
!6808 = !DILocation(line: 2714, column: 5, scope: !6784)
!6809 = !DILocation(line: 2714, column: 9, scope: !6784)
!6810 = !DILocation(line: 2715, column: 5, scope: !6784)
!6811 = !DILocation(line: 2715, column: 9, scope: !6784)
!6812 = !DILocation(line: 2716, column: 5, scope: !6784)
!6813 = !DILocation(line: 2716, column: 9, scope: !6784)
!6814 = !DILocation(line: 2722, column: 9, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6784, file: !2, line: 2722, column: 9)
!6816 = !DILocation(line: 2722, column: 15, scope: !6815)
!6817 = !DILocation(line: 2722, column: 27, scope: !6815)
!6818 = !DILocation(line: 2722, column: 9, scope: !6784)
!6819 = !DILocation(line: 2723, column: 9, scope: !6815)
!6820 = !DILocation(line: 2723, column: 15, scope: !6815)
!6821 = !DILocation(line: 2723, column: 2, scope: !6815)
!6822 = !DILocation(line: 2725, column: 9, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6784, file: !2, line: 2725, column: 9)
!6824 = !DILocation(line: 2725, column: 15, scope: !6823)
!6825 = !DILocation(line: 2725, column: 21, scope: !6823)
!6826 = !DILocation(line: 2725, column: 9, scope: !6784)
!6827 = !DILocation(line: 2726, column: 14, scope: !6823)
!6828 = !DILocation(line: 2726, column: 9, scope: !6823)
!6829 = !DILocation(line: 2731, column: 18, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6784, file: !2, line: 2731, column: 5)
!6831 = !DILocation(line: 2731, column: 10, scope: !6830)
!6832 = !DILocation(line: 2731, column: 22, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6830, file: !2, line: 2731, column: 5)
!6834 = !DILocation(line: 2731, column: 32, scope: !6833)
!6835 = !DILocation(line: 2731, column: 38, scope: !6833)
!6836 = !DILocation(line: 2731, column: 30, scope: !6833)
!6837 = !DILocation(line: 2731, column: 5, scope: !6830)
!6838 = !DILocation(line: 2732, column: 10, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6833, file: !2, line: 2731, column: 58)
!6840 = !DILocation(line: 2732, column: 16, scope: !6839)
!6841 = !DILocation(line: 2732, column: 23, scope: !6839)
!6842 = !DILocation(line: 2732, column: 8, scope: !6839)
!6843 = !DILocation(line: 2733, column: 6, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6839, file: !2, line: 2733, column: 6)
!6845 = !DILocation(line: 2733, column: 12, scope: !6844)
!6846 = !DILocation(line: 2733, column: 6, scope: !6839)
!6847 = !DILocation(line: 2734, column: 6, scope: !6844)
!6848 = !DILocation(line: 2735, column: 6, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6839, file: !2, line: 2735, column: 6)
!6850 = !DILocation(line: 2735, column: 13, scope: !6849)
!6851 = !DILocation(line: 2735, column: 21, scope: !6849)
!6852 = !DILocation(line: 2735, column: 6, scope: !6839)
!6853 = !DILocation(line: 2736, column: 6, scope: !6849)
!6854 = !DILocation(line: 2737, column: 15, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6839, file: !2, line: 2737, column: 2)
!6856 = !DILocation(line: 2737, column: 7, scope: !6855)
!6857 = !DILocation(line: 2737, column: 19, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6855, file: !2, line: 2737, column: 2)
!6859 = !DILocation(line: 2737, column: 29, scope: !6858)
!6860 = !DILocation(line: 2737, column: 36, scope: !6858)
!6861 = !DILocation(line: 2737, column: 27, scope: !6858)
!6862 = !DILocation(line: 2737, column: 2, scope: !6855)
!6863 = !DILocation(line: 2738, column: 13, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6858, file: !2, line: 2737, column: 55)
!6865 = !DILocation(line: 2738, column: 20, scope: !6864)
!6866 = !DILocation(line: 2738, column: 26, scope: !6864)
!6867 = !DILocation(line: 2738, column: 9, scope: !6864)
!6868 = !DILocation(line: 2743, column: 10, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6864, file: !2, line: 2743, column: 10)
!6870 = !DILocation(line: 2743, column: 14, scope: !6869)
!6871 = !DILocation(line: 2743, column: 19, scope: !6869)
!6872 = !DILocation(line: 2743, column: 10, scope: !6864)
!6873 = !DILocation(line: 2745, column: 3, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6869, file: !2, line: 2743, column: 28)
!6875 = !DILocation(line: 2747, column: 10, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6864, file: !2, line: 2747, column: 10)
!6877 = !DILocation(line: 2747, column: 14, scope: !6876)
!6878 = !DILocation(line: 2747, column: 17, scope: !6876)
!6879 = !DILocation(line: 2747, column: 10, scope: !6864)
!6880 = !DILocation(line: 2748, column: 3, scope: !6876)
!6881 = !DILocation(line: 2749, column: 13, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6864, file: !2, line: 2749, column: 6)
!6883 = !DILocation(line: 2749, column: 11, scope: !6882)
!6884 = !DILocation(line: 2749, column: 17, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6882, file: !2, line: 2749, column: 6)
!6886 = !DILocation(line: 2749, column: 21, scope: !6885)
!6887 = !DILocation(line: 2749, column: 19, scope: !6885)
!6888 = !DILocation(line: 2749, column: 6, scope: !6882)
!6889 = !DILocation(line: 2750, column: 10, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6885, file: !2, line: 2749, column: 34)
!6891 = !DILocation(line: 2750, column: 17, scope: !6890)
!6892 = !DILocation(line: 2750, column: 23, scope: !6890)
!6893 = !DILocation(line: 2750, column: 6, scope: !6890)
!6894 = !DILocation(line: 2751, column: 7, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6890, file: !2, line: 2751, column: 7)
!6896 = !DILocation(line: 2751, column: 11, scope: !6895)
!6897 = !DILocation(line: 2751, column: 14, scope: !6895)
!6898 = !DILocation(line: 2751, column: 7, scope: !6890)
!6899 = !DILocation(line: 2752, column: 7, scope: !6895)
!6900 = !DILocation(line: 2753, column: 7, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6890, file: !2, line: 2753, column: 7)
!6902 = !DILocation(line: 2753, column: 11, scope: !6901)
!6903 = !DILocation(line: 2753, column: 16, scope: !6901)
!6904 = !DILocation(line: 2753, column: 7, scope: !6890)
!6905 = !DILocation(line: 2754, column: 11, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !2, line: 2754, column: 11)
!6907 = distinct !DILexicalBlock(scope: !6901, file: !2, line: 2753, column: 25)
!6908 = !DILocation(line: 2754, column: 15, scope: !6906)
!6909 = !DILocation(line: 2754, column: 21, scope: !6906)
!6910 = !DILocation(line: 2754, column: 25, scope: !6906)
!6911 = !DILocation(line: 2754, column: 18, scope: !6906)
!6912 = !DILocation(line: 2754, column: 11, scope: !6907)
!6913 = !DILocation(line: 2759, column: 24, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !2, line: 2759, column: 8)
!6915 = distinct !DILexicalBlock(scope: !6906, file: !2, line: 2754, column: 29)
!6916 = !DILocation(line: 2759, column: 28, scope: !6914)
!6917 = !DILocation(line: 2759, column: 34, scope: !6914)
!6918 = !DILocation(line: 2759, column: 38, scope: !6914)
!6919 = !DILocation(line: 2759, column: 44, scope: !6914)
!6920 = !DILocation(line: 2759, column: 8, scope: !6914)
!6921 = !DILocation(line: 2759, column: 50, scope: !6914)
!6922 = !DILocation(line: 2760, column: 30, scope: !6914)
!6923 = !DILocation(line: 2760, column: 34, scope: !6914)
!6924 = !DILocation(line: 2760, column: 45, scope: !6914)
!6925 = !DILocation(line: 2760, column: 49, scope: !6914)
!6926 = !DILocation(line: 2760, column: 42, scope: !6914)
!6927 = !DILocation(line: 2760, column: 58, scope: !6914)
!6928 = !DILocation(line: 2761, column: 30, scope: !6914)
!6929 = !DILocation(line: 2761, column: 34, scope: !6914)
!6930 = !DILocation(line: 2761, column: 43, scope: !6914)
!6931 = !DILocation(line: 2761, column: 47, scope: !6914)
!6932 = !DILocation(line: 2761, column: 40, scope: !6914)
!6933 = !DILocation(line: 2759, column: 8, scope: !6915)
!6934 = !DILocation(line: 2762, column: 8, scope: !6914)
!6935 = !DILocation(line: 2762, column: 12, scope: !6914)
!6936 = !DILocation(line: 2762, column: 15, scope: !6914)
!6937 = !DILocation(line: 2763, column: 7, scope: !6915)
!6938 = !DILocation(line: 2764, column: 3, scope: !6907)
!6939 = !DILocation(line: 2765, column: 6, scope: !6890)
!6940 = !DILocation(line: 2749, column: 30, scope: !6885)
!6941 = !DILocation(line: 2749, column: 6, scope: !6885)
!6942 = distinct !{!6942, !6888, !6943, !1794}
!6943 = !DILocation(line: 2765, column: 6, scope: !6882)
!6944 = !DILocation(line: 2766, column: 2, scope: !6864)
!6945 = !DILocation(line: 2737, column: 51, scope: !6858)
!6946 = !DILocation(line: 2737, column: 2, scope: !6858)
!6947 = distinct !{!6947, !6862, !6948, !1794}
!6948 = !DILocation(line: 2766, column: 2, scope: !6855)
!6949 = !DILocation(line: 2767, column: 5, scope: !6839)
!6950 = !DILocation(line: 2731, column: 54, scope: !6833)
!6951 = !DILocation(line: 2731, column: 5, scope: !6833)
!6952 = distinct !{!6952, !6837, !6953, !1794}
!6953 = !DILocation(line: 2767, column: 5, scope: !6830)
!6954 = !DILocation(line: 2773, column: 18, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6784, file: !2, line: 2773, column: 5)
!6956 = !DILocation(line: 2773, column: 10, scope: !6955)
!6957 = !DILocation(line: 2773, column: 22, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6955, file: !2, line: 2773, column: 5)
!6959 = !DILocation(line: 2773, column: 32, scope: !6958)
!6960 = !DILocation(line: 2773, column: 38, scope: !6958)
!6961 = !DILocation(line: 2773, column: 30, scope: !6958)
!6962 = !DILocation(line: 2773, column: 5, scope: !6955)
!6963 = !DILocation(line: 2774, column: 10, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6958, file: !2, line: 2773, column: 58)
!6965 = !DILocation(line: 2774, column: 16, scope: !6964)
!6966 = !DILocation(line: 2774, column: 23, scope: !6964)
!6967 = !DILocation(line: 2774, column: 8, scope: !6964)
!6968 = !DILocation(line: 2775, column: 6, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6964, file: !2, line: 2775, column: 6)
!6970 = !DILocation(line: 2775, column: 12, scope: !6969)
!6971 = !DILocation(line: 2775, column: 6, scope: !6964)
!6972 = !DILocation(line: 2776, column: 6, scope: !6969)
!6973 = !DILocation(line: 2777, column: 6, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6964, file: !2, line: 2777, column: 6)
!6975 = !DILocation(line: 2777, column: 13, scope: !6974)
!6976 = !DILocation(line: 2777, column: 21, scope: !6974)
!6977 = !DILocation(line: 2777, column: 6, scope: !6964)
!6978 = !DILocation(line: 2778, column: 6, scope: !6974)
!6979 = !DILocation(line: 2779, column: 7, scope: !6964)
!6980 = !DILocation(line: 2780, column: 15, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6964, file: !2, line: 2780, column: 2)
!6982 = !DILocation(line: 2780, column: 7, scope: !6981)
!6983 = !DILocation(line: 2780, column: 19, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6981, file: !2, line: 2780, column: 2)
!6985 = !DILocation(line: 2780, column: 29, scope: !6984)
!6986 = !DILocation(line: 2780, column: 36, scope: !6984)
!6987 = !DILocation(line: 2780, column: 27, scope: !6984)
!6988 = !DILocation(line: 2780, column: 2, scope: !6981)
!6989 = !DILocation(line: 2781, column: 13, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6984, file: !2, line: 2780, column: 55)
!6991 = !DILocation(line: 2781, column: 20, scope: !6990)
!6992 = !DILocation(line: 2781, column: 26, scope: !6990)
!6993 = !DILocation(line: 2781, column: 9, scope: !6990)
!6994 = !DILocation(line: 2786, column: 10, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6990, file: !2, line: 2786, column: 10)
!6996 = !DILocation(line: 2786, column: 14, scope: !6995)
!6997 = !DILocation(line: 2786, column: 19, scope: !6995)
!6998 = !DILocation(line: 2786, column: 10, scope: !6990)
!6999 = !DILocation(line: 2787, column: 3, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6995, file: !2, line: 2786, column: 28)
!7001 = !DILocation(line: 2789, column: 10, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6990, file: !2, line: 2789, column: 10)
!7003 = !DILocation(line: 2789, column: 14, scope: !7002)
!7004 = !DILocation(line: 2789, column: 17, scope: !7002)
!7005 = !DILocation(line: 2789, column: 10, scope: !6990)
!7006 = !DILocation(line: 2790, column: 3, scope: !7002)
!7007 = !DILocation(line: 2791, column: 13, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6990, file: !2, line: 2791, column: 6)
!7009 = !DILocation(line: 2791, column: 11, scope: !7008)
!7010 = !DILocation(line: 2791, column: 17, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7008, file: !2, line: 2791, column: 6)
!7012 = !DILocation(line: 2791, column: 21, scope: !7011)
!7013 = !DILocation(line: 2791, column: 19, scope: !7011)
!7014 = !DILocation(line: 2791, column: 6, scope: !7008)
!7015 = !DILocation(line: 2792, column: 10, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7011, file: !2, line: 2791, column: 34)
!7017 = !DILocation(line: 2792, column: 17, scope: !7016)
!7018 = !DILocation(line: 2792, column: 23, scope: !7016)
!7019 = !DILocation(line: 2792, column: 6, scope: !7016)
!7020 = !DILocation(line: 2793, column: 7, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7016, file: !2, line: 2793, column: 7)
!7022 = !DILocation(line: 2793, column: 11, scope: !7021)
!7023 = !DILocation(line: 2793, column: 14, scope: !7021)
!7024 = !DILocation(line: 2793, column: 7, scope: !7016)
!7025 = !DILocation(line: 2794, column: 7, scope: !7021)
!7026 = !DILocation(line: 2795, column: 7, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7016, file: !2, line: 2795, column: 7)
!7028 = !DILocation(line: 2795, column: 11, scope: !7027)
!7029 = !DILocation(line: 2795, column: 16, scope: !7027)
!7030 = !DILocation(line: 2795, column: 7, scope: !7016)
!7031 = !DILocation(line: 2800, column: 29, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !2, line: 2800, column: 11)
!7033 = distinct !DILexicalBlock(scope: !7027, file: !2, line: 2795, column: 25)
!7034 = !DILocation(line: 2800, column: 33, scope: !7032)
!7035 = !DILocation(line: 2800, column: 39, scope: !7032)
!7036 = !DILocation(line: 2800, column: 43, scope: !7032)
!7037 = !DILocation(line: 2800, column: 11, scope: !7032)
!7038 = !DILocation(line: 2800, column: 11, scope: !7033)
!7039 = !DILocation(line: 2801, column: 8, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7032, file: !2, line: 2800, column: 53)
!7041 = !DILocation(line: 2803, column: 4, scope: !7040)
!7042 = !DILocation(line: 2803, column: 8, scope: !7040)
!7043 = !DILocation(line: 2803, column: 11, scope: !7040)
!7044 = !DILocation(line: 2804, column: 4, scope: !7040)
!7045 = !DILocation(line: 2804, column: 8, scope: !7040)
!7046 = !DILocation(line: 2804, column: 11, scope: !7040)
!7047 = !DILocation(line: 2805, column: 11, scope: !7040)
!7048 = !DILocation(line: 2805, column: 9, scope: !7040)
!7049 = !DILocation(line: 2806, column: 7, scope: !7040)
!7050 = !DILocation(line: 2807, column: 3, scope: !7033)
!7051 = !DILocation(line: 2807, column: 14, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7027, file: !2, line: 2807, column: 14)
!7053 = !DILocation(line: 2807, column: 18, scope: !7052)
!7054 = !DILocation(line: 2807, column: 21, scope: !7052)
!7055 = !DILocation(line: 2807, column: 14, scope: !7027)
!7056 = !DILocation(line: 2812, column: 37, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7052, file: !2, line: 2807, column: 28)
!7058 = !DILocation(line: 2812, column: 43, scope: !7057)
!7059 = !DILocation(line: 2812, column: 49, scope: !7057)
!7060 = !DILocation(line: 2812, column: 56, scope: !7057)
!7061 = !DILocation(line: 2812, column: 60, scope: !7057)
!7062 = !DILocation(line: 2813, column: 10, scope: !7057)
!7063 = !DILocation(line: 2813, column: 14, scope: !7057)
!7064 = !DILocation(line: 2813, column: 18, scope: !7057)
!7065 = !DILocation(line: 2813, column: 22, scope: !7057)
!7066 = !DILocation(line: 2812, column: 13, scope: !7057)
!7067 = !DILocation(line: 2812, column: 11, scope: !7057)
!7068 = !DILocation(line: 2814, column: 51, scope: !7057)
!7069 = !DILocation(line: 2814, column: 57, scope: !7057)
!7070 = !DILocation(line: 2814, column: 63, scope: !7057)
!7071 = !DILocation(line: 2814, column: 70, scope: !7057)
!7072 = !DILocation(line: 2814, column: 74, scope: !7057)
!7073 = !DILocation(line: 2814, column: 21, scope: !7057)
!7074 = !DILocation(line: 2820, column: 11, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7057, file: !2, line: 2820, column: 11)
!7076 = !DILocation(line: 2820, column: 15, scope: !7075)
!7077 = !DILocation(line: 2820, column: 11, scope: !7057)
!7078 = !DILocation(line: 2821, column: 4, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7075, file: !2, line: 2820, column: 21)
!7080 = !DILocation(line: 2821, column: 8, scope: !7079)
!7081 = !DILocation(line: 2821, column: 11, scope: !7079)
!7082 = !DILocation(line: 2823, column: 11, scope: !7079)
!7083 = !DILocation(line: 2823, column: 9, scope: !7079)
!7084 = !DILocation(line: 2824, column: 7, scope: !7079)
!7085 = !DILocation(line: 2825, column: 3, scope: !7057)
!7086 = !DILocation(line: 2826, column: 6, scope: !7016)
!7087 = !DILocation(line: 2791, column: 30, scope: !7011)
!7088 = !DILocation(line: 2791, column: 6, scope: !7011)
!7089 = distinct !{!7089, !7014, !7090, !1794}
!7090 = !DILocation(line: 2826, column: 6, scope: !7008)
!7091 = !DILocation(line: 2831, column: 2, scope: !6990)
!7092 = !DILocation(line: 2780, column: 51, scope: !6984)
!7093 = !DILocation(line: 2780, column: 2, scope: !6984)
!7094 = distinct !{!7094, !6988, !7095, !1794}
!7095 = !DILocation(line: 2831, column: 2, scope: !6981)
!7096 = !DILocation(line: 2838, column: 6, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !6964, file: !2, line: 2838, column: 6)
!7098 = !DILocation(line: 2838, column: 11, scope: !7097)
!7099 = !DILocation(line: 2838, column: 6, scope: !6964)
!7100 = !DILocation(line: 2839, column: 6, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7097, file: !2, line: 2838, column: 20)
!7102 = !DILocation(line: 2839, column: 12, scope: !7101)
!7103 = !DILocation(line: 2839, column: 15, scope: !7101)
!7104 = !DILocation(line: 2840, column: 2, scope: !7101)
!7105 = !DILocation(line: 2846, column: 5, scope: !6964)
!7106 = !DILocation(line: 2773, column: 54, scope: !6958)
!7107 = !DILocation(line: 2773, column: 5, scope: !6958)
!7108 = distinct !{!7108, !6962, !7109, !1794}
!7109 = !DILocation(line: 2846, column: 5, scope: !6955)
!7110 = !DILocation(line: 2848, column: 25, scope: !6784)
!7111 = !DILocation(line: 2848, column: 5, scope: !6784)
!7112 = !DILocation(line: 2848, column: 11, scope: !6784)
!7113 = !DILocation(line: 2848, column: 23, scope: !6784)
!7114 = !DILocation(line: 2849, column: 12, scope: !6784)
!7115 = !DILocation(line: 2849, column: 5, scope: !6784)
!7116 = !DILocation(line: 2850, column: 1, scope: !6784)
!7117 = distinct !DISubprogram(name: "xmlFreeAutomata", scope: !2, file: !2, line: 5797, type: !7118, scopeLine: 5797, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !7120)
!7118 = !DISubroutineType(types: !7119)
!7119 = !{null, !6588}
!7120 = !{!7121}
!7121 = !DILocalVariable(name: "am", arg: 1, scope: !7117, file: !2, line: 5797, type: !6588)
!7122 = !DILocation(line: 5797, column: 32, scope: !7117)
!7123 = !DILocation(line: 5798, column: 9, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7117, file: !2, line: 5798, column: 9)
!7125 = !DILocation(line: 5798, column: 12, scope: !7124)
!7126 = !DILocation(line: 5798, column: 9, scope: !7117)
!7127 = !DILocation(line: 5799, column: 2, scope: !7124)
!7128 = !DILocation(line: 5800, column: 26, scope: !7117)
!7129 = !DILocation(line: 5800, column: 5, scope: !7117)
!7130 = !DILocation(line: 5801, column: 1, scope: !7117)
!7131 = distinct !DISubprogram(name: "xmlRegFreeRegexp", scope: !2, file: !2, line: 5718, type: !7132, scopeLine: 5718, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !7134)
!7132 = !DISubroutineType(types: !7133)
!7133 = !{null, !1345}
!7134 = !{!7135, !7136}
!7135 = !DILocalVariable(name: "regexp", arg: 1, scope: !7131, file: !2, line: 5718, type: !1345)
!7136 = !DILocalVariable(name: "i", scope: !7131, file: !2, line: 5719, type: !1306)
!7137 = !DILocation(line: 5718, column: 31, scope: !7131)
!7138 = !DILocation(line: 5719, column: 5, scope: !7131)
!7139 = !DILocation(line: 5719, column: 9, scope: !7131)
!7140 = !DILocation(line: 5720, column: 9, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7131, file: !2, line: 5720, column: 9)
!7142 = !DILocation(line: 5720, column: 16, scope: !7141)
!7143 = !DILocation(line: 5720, column: 9, scope: !7131)
!7144 = !DILocation(line: 5721, column: 2, scope: !7141)
!7145 = !DILocation(line: 5723, column: 9, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7131, file: !2, line: 5723, column: 9)
!7147 = !DILocation(line: 5723, column: 17, scope: !7146)
!7148 = !DILocation(line: 5723, column: 24, scope: !7146)
!7149 = !DILocation(line: 5723, column: 9, scope: !7131)
!7150 = !DILocation(line: 5724, column: 2, scope: !7146)
!7151 = !DILocation(line: 5724, column: 10, scope: !7146)
!7152 = !DILocation(line: 5724, column: 18, scope: !7146)
!7153 = !DILocation(line: 5725, column: 9, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7131, file: !2, line: 5725, column: 9)
!7155 = !DILocation(line: 5725, column: 17, scope: !7154)
!7156 = !DILocation(line: 5725, column: 24, scope: !7154)
!7157 = !DILocation(line: 5725, column: 9, scope: !7131)
!7158 = !DILocation(line: 5726, column: 9, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !2, line: 5726, column: 2)
!7160 = distinct !DILexicalBlock(scope: !7154, file: !2, line: 5725, column: 33)
!7161 = !DILocation(line: 5726, column: 7, scope: !7159)
!7162 = !DILocation(line: 5726, column: 13, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7159, file: !2, line: 5726, column: 2)
!7164 = !DILocation(line: 5726, column: 17, scope: !7163)
!7165 = !DILocation(line: 5726, column: 25, scope: !7163)
!7166 = !DILocation(line: 5726, column: 15, scope: !7163)
!7167 = !DILocation(line: 5726, column: 2, scope: !7159)
!7168 = !DILocation(line: 5727, column: 22, scope: !7163)
!7169 = !DILocation(line: 5727, column: 30, scope: !7163)
!7170 = !DILocation(line: 5727, column: 37, scope: !7163)
!7171 = !DILocation(line: 5727, column: 6, scope: !7163)
!7172 = !DILocation(line: 5726, column: 35, scope: !7163)
!7173 = !DILocation(line: 5726, column: 2, scope: !7163)
!7174 = distinct !{!7174, !7167, !7175, !1794}
!7175 = !DILocation(line: 5727, column: 39, scope: !7159)
!7176 = !DILocation(line: 5728, column: 2, scope: !7160)
!7177 = !DILocation(line: 5728, column: 10, scope: !7160)
!7178 = !DILocation(line: 5728, column: 18, scope: !7160)
!7179 = !DILocation(line: 5729, column: 5, scope: !7160)
!7180 = !DILocation(line: 5730, column: 9, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7131, file: !2, line: 5730, column: 9)
!7182 = !DILocation(line: 5730, column: 17, scope: !7181)
!7183 = !DILocation(line: 5730, column: 23, scope: !7181)
!7184 = !DILocation(line: 5730, column: 9, scope: !7131)
!7185 = !DILocation(line: 5731, column: 9, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7187, file: !2, line: 5731, column: 2)
!7187 = distinct !DILexicalBlock(scope: !7181, file: !2, line: 5730, column: 32)
!7188 = !DILocation(line: 5731, column: 7, scope: !7186)
!7189 = !DILocation(line: 5731, column: 13, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7186, file: !2, line: 5731, column: 2)
!7191 = !DILocation(line: 5731, column: 17, scope: !7190)
!7192 = !DILocation(line: 5731, column: 25, scope: !7190)
!7193 = !DILocation(line: 5731, column: 15, scope: !7190)
!7194 = !DILocation(line: 5731, column: 2, scope: !7186)
!7195 = !DILocation(line: 5732, column: 21, scope: !7190)
!7196 = !DILocation(line: 5732, column: 29, scope: !7190)
!7197 = !DILocation(line: 5732, column: 35, scope: !7190)
!7198 = !DILocation(line: 5732, column: 6, scope: !7190)
!7199 = !DILocation(line: 5731, column: 34, scope: !7190)
!7200 = !DILocation(line: 5731, column: 2, scope: !7190)
!7201 = distinct !{!7201, !7194, !7202, !1794}
!7202 = !DILocation(line: 5732, column: 37, scope: !7186)
!7203 = !DILocation(line: 5733, column: 2, scope: !7187)
!7204 = !DILocation(line: 5733, column: 10, scope: !7187)
!7205 = !DILocation(line: 5733, column: 18, scope: !7187)
!7206 = !DILocation(line: 5734, column: 5, scope: !7187)
!7207 = !DILocation(line: 5735, column: 9, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7131, file: !2, line: 5735, column: 9)
!7209 = !DILocation(line: 5735, column: 17, scope: !7208)
!7210 = !DILocation(line: 5735, column: 26, scope: !7208)
!7211 = !DILocation(line: 5735, column: 9, scope: !7131)
!7212 = !DILocation(line: 5736, column: 2, scope: !7208)
!7213 = !DILocation(line: 5736, column: 10, scope: !7208)
!7214 = !DILocation(line: 5736, column: 18, scope: !7208)
!7215 = !DILocation(line: 5737, column: 9, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7131, file: !2, line: 5737, column: 9)
!7217 = !DILocation(line: 5737, column: 17, scope: !7216)
!7218 = !DILocation(line: 5737, column: 25, scope: !7216)
!7219 = !DILocation(line: 5737, column: 9, scope: !7131)
!7220 = !DILocation(line: 5738, column: 2, scope: !7216)
!7221 = !DILocation(line: 5738, column: 10, scope: !7216)
!7222 = !DILocation(line: 5738, column: 18, scope: !7216)
!7223 = !DILocation(line: 5739, column: 9, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7131, file: !2, line: 5739, column: 9)
!7225 = !DILocation(line: 5739, column: 17, scope: !7224)
!7226 = !DILocation(line: 5739, column: 27, scope: !7224)
!7227 = !DILocation(line: 5739, column: 9, scope: !7131)
!7228 = !DILocation(line: 5740, column: 2, scope: !7224)
!7229 = !DILocation(line: 5740, column: 10, scope: !7224)
!7230 = !DILocation(line: 5740, column: 18, scope: !7224)
!7231 = !DILocation(line: 5741, column: 9, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7131, file: !2, line: 5741, column: 9)
!7233 = !DILocation(line: 5741, column: 17, scope: !7232)
!7234 = !DILocation(line: 5741, column: 27, scope: !7232)
!7235 = !DILocation(line: 5741, column: 9, scope: !7131)
!7236 = !DILocation(line: 5742, column: 9, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !2, line: 5742, column: 2)
!7238 = distinct !DILexicalBlock(scope: !7232, file: !2, line: 5741, column: 36)
!7239 = !DILocation(line: 5742, column: 7, scope: !7237)
!7240 = !DILocation(line: 5742, column: 14, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7237, file: !2, line: 5742, column: 2)
!7242 = !DILocation(line: 5742, column: 18, scope: !7241)
!7243 = !DILocation(line: 5742, column: 26, scope: !7241)
!7244 = !DILocation(line: 5742, column: 16, scope: !7241)
!7245 = !DILocation(line: 5742, column: 2, scope: !7237)
!7246 = !DILocation(line: 5743, column: 6, scope: !7241)
!7247 = !DILocation(line: 5743, column: 14, scope: !7241)
!7248 = !DILocation(line: 5743, column: 22, scope: !7241)
!7249 = !DILocation(line: 5743, column: 32, scope: !7241)
!7250 = !DILocation(line: 5742, column: 37, scope: !7241)
!7251 = !DILocation(line: 5742, column: 2, scope: !7241)
!7252 = distinct !{!7252, !7245, !7253, !1794}
!7253 = !DILocation(line: 5743, column: 34, scope: !7237)
!7254 = !DILocation(line: 5744, column: 2, scope: !7238)
!7255 = !DILocation(line: 5744, column: 10, scope: !7238)
!7256 = !DILocation(line: 5744, column: 18, scope: !7238)
!7257 = !DILocation(line: 5745, column: 5, scope: !7238)
!7258 = !DILocation(line: 5747, column: 5, scope: !7131)
!7259 = !DILocation(line: 5747, column: 13, scope: !7131)
!7260 = !DILocation(line: 5748, column: 1, scope: !7131)
!7261 = distinct !DISubprogram(name: "xmlRegFreeAtom", scope: !2, file: !2, line: 834, type: !7262, scopeLine: 834, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !7264)
!7262 = !DISubroutineType(types: !7263)
!7263 = !{null, !1378}
!7264 = !{!7265, !7266}
!7265 = !DILocalVariable(name: "atom", arg: 1, scope: !7261, file: !2, line: 834, type: !1378)
!7266 = !DILocalVariable(name: "i", scope: !7261, file: !2, line: 835, type: !1306)
!7267 = !DILocation(line: 834, column: 30, scope: !7261)
!7268 = !DILocation(line: 835, column: 5, scope: !7261)
!7269 = !DILocation(line: 835, column: 9, scope: !7261)
!7270 = !DILocation(line: 837, column: 9, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7261, file: !2, line: 837, column: 9)
!7272 = !DILocation(line: 837, column: 14, scope: !7271)
!7273 = !DILocation(line: 837, column: 9, scope: !7261)
!7274 = !DILocation(line: 838, column: 2, scope: !7271)
!7275 = !DILocation(line: 840, column: 12, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7261, file: !2, line: 840, column: 5)
!7277 = !DILocation(line: 840, column: 10, scope: !7276)
!7278 = !DILocation(line: 840, column: 16, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7276, file: !2, line: 840, column: 5)
!7280 = !DILocation(line: 840, column: 20, scope: !7279)
!7281 = !DILocation(line: 840, column: 26, scope: !7279)
!7282 = !DILocation(line: 840, column: 18, scope: !7279)
!7283 = !DILocation(line: 840, column: 5, scope: !7276)
!7284 = !DILocation(line: 841, column: 18, scope: !7279)
!7285 = !DILocation(line: 841, column: 24, scope: !7279)
!7286 = !DILocation(line: 841, column: 31, scope: !7279)
!7287 = !DILocation(line: 841, column: 2, scope: !7279)
!7288 = !DILocation(line: 840, column: 36, scope: !7279)
!7289 = !DILocation(line: 840, column: 5, scope: !7279)
!7290 = distinct !{!7290, !7283, !7291, !1794}
!7291 = !DILocation(line: 841, column: 33, scope: !7276)
!7292 = !DILocation(line: 842, column: 9, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7261, file: !2, line: 842, column: 9)
!7294 = !DILocation(line: 842, column: 15, scope: !7293)
!7295 = !DILocation(line: 842, column: 22, scope: !7293)
!7296 = !DILocation(line: 842, column: 9, scope: !7261)
!7297 = !DILocation(line: 843, column: 2, scope: !7293)
!7298 = !DILocation(line: 843, column: 10, scope: !7293)
!7299 = !DILocation(line: 843, column: 16, scope: !7293)
!7300 = !DILocation(line: 844, column: 10, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7261, file: !2, line: 844, column: 9)
!7302 = !DILocation(line: 844, column: 16, scope: !7301)
!7303 = !DILocation(line: 844, column: 21, scope: !7301)
!7304 = !DILocation(line: 844, column: 43, scope: !7301)
!7305 = !DILocation(line: 844, column: 47, scope: !7301)
!7306 = !DILocation(line: 844, column: 53, scope: !7301)
!7307 = !DILocation(line: 844, column: 60, scope: !7301)
!7308 = !DILocation(line: 844, column: 9, scope: !7261)
!7309 = !DILocation(line: 845, column: 2, scope: !7301)
!7310 = !DILocation(line: 845, column: 10, scope: !7301)
!7311 = !DILocation(line: 845, column: 16, scope: !7301)
!7312 = !DILocation(line: 846, column: 10, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7261, file: !2, line: 846, column: 9)
!7314 = !DILocation(line: 846, column: 16, scope: !7313)
!7315 = !DILocation(line: 846, column: 21, scope: !7313)
!7316 = !DILocation(line: 846, column: 43, scope: !7313)
!7317 = !DILocation(line: 846, column: 47, scope: !7313)
!7318 = !DILocation(line: 846, column: 53, scope: !7313)
!7319 = !DILocation(line: 846, column: 61, scope: !7313)
!7320 = !DILocation(line: 846, column: 9, scope: !7261)
!7321 = !DILocation(line: 847, column: 2, scope: !7313)
!7322 = !DILocation(line: 847, column: 10, scope: !7313)
!7323 = !DILocation(line: 847, column: 16, scope: !7313)
!7324 = !DILocation(line: 848, column: 10, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7261, file: !2, line: 848, column: 9)
!7326 = !DILocation(line: 848, column: 16, scope: !7325)
!7327 = !DILocation(line: 848, column: 21, scope: !7325)
!7328 = !DILocation(line: 848, column: 47, scope: !7325)
!7329 = !DILocation(line: 848, column: 51, scope: !7325)
!7330 = !DILocation(line: 848, column: 57, scope: !7325)
!7331 = !DILocation(line: 848, column: 64, scope: !7325)
!7332 = !DILocation(line: 848, column: 9, scope: !7261)
!7333 = !DILocation(line: 849, column: 2, scope: !7325)
!7334 = !DILocation(line: 849, column: 10, scope: !7325)
!7335 = !DILocation(line: 849, column: 16, scope: !7325)
!7336 = !DILocation(line: 850, column: 5, scope: !7261)
!7337 = !DILocation(line: 850, column: 13, scope: !7261)
!7338 = !DILocation(line: 851, column: 1, scope: !7261)
!7339 = distinct !DISubprogram(name: "xmlAutomataSetFlags", scope: !2, file: !2, line: 5811, type: !7340, scopeLine: 5811, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !7342)
!7340 = !DISubroutineType(types: !7341)
!7341 = !{null, !6588, !1306}
!7342 = !{!7343, !7344}
!7343 = !DILocalVariable(name: "am", arg: 1, scope: !7339, file: !2, line: 5811, type: !6588)
!7344 = !DILocalVariable(name: "flags", arg: 2, scope: !7339, file: !2, line: 5811, type: !1306)
!7345 = !DILocation(line: 5811, column: 36, scope: !7339)
!7346 = !DILocation(line: 5811, column: 44, scope: !7339)
!7347 = !DILocation(line: 5812, column: 9, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7339, file: !2, line: 5812, column: 9)
!7349 = !DILocation(line: 5812, column: 12, scope: !7348)
!7350 = !DILocation(line: 5812, column: 9, scope: !7339)
!7351 = !DILocation(line: 5813, column: 2, scope: !7348)
!7352 = !DILocation(line: 5814, column: 18, scope: !7339)
!7353 = !DILocation(line: 5814, column: 5, scope: !7339)
!7354 = !DILocation(line: 5814, column: 9, scope: !7339)
!7355 = !DILocation(line: 5814, column: 15, scope: !7339)
!7356 = !DILocation(line: 5815, column: 1, scope: !7339)
!7357 = distinct !DISubprogram(name: "xmlAutomataGetInitState", scope: !2, file: !2, line: 5826, type: !7358, scopeLine: 5826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !7363)
!7358 = !DISubroutineType(types: !7359)
!7359 = !{!7360, !6588}
!7360 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAutomataStatePtr", file: !6589, line: 38, baseType: !7361)
!7361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7362, size: 64)
!7362 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAutomataState", file: !6589, line: 37, baseType: !1361)
!7363 = !{!7364}
!7364 = !DILocalVariable(name: "am", arg: 1, scope: !7357, file: !2, line: 5826, type: !6588)
!7365 = !DILocation(line: 5826, column: 40, scope: !7357)
!7366 = !DILocation(line: 5827, column: 9, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7357, file: !2, line: 5827, column: 9)
!7368 = !DILocation(line: 5827, column: 12, scope: !7367)
!7369 = !DILocation(line: 5827, column: 9, scope: !7357)
!7370 = !DILocation(line: 5828, column: 2, scope: !7367)
!7371 = !DILocation(line: 5829, column: 12, scope: !7357)
!7372 = !DILocation(line: 5829, column: 16, scope: !7357)
!7373 = !DILocation(line: 5829, column: 5, scope: !7357)
!7374 = !DILocation(line: 5830, column: 1, scope: !7357)
!7375 = distinct !DISubprogram(name: "xmlAutomataSetFinalState", scope: !2, file: !2, line: 5842, type: !7376, scopeLine: 5842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !7378)
!7376 = !DISubroutineType(types: !7377)
!7377 = !{!1306, !6588, !7360}
!7378 = !{!7379, !7380}
!7379 = !DILocalVariable(name: "am", arg: 1, scope: !7375, file: !2, line: 5842, type: !6588)
!7380 = !DILocalVariable(name: "state", arg: 2, scope: !7375, file: !2, line: 5842, type: !7360)
!7381 = !DILocation(line: 5842, column: 41, scope: !7375)
!7382 = !DILocation(line: 5842, column: 65, scope: !7375)
!7383 = !DILocation(line: 5843, column: 10, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7375, file: !2, line: 5843, column: 9)
!7385 = !DILocation(line: 5843, column: 13, scope: !7384)
!7386 = !DILocation(line: 5843, column: 22, scope: !7384)
!7387 = !DILocation(line: 5843, column: 26, scope: !7384)
!7388 = !DILocation(line: 5843, column: 32, scope: !7384)
!7389 = !DILocation(line: 5843, column: 9, scope: !7375)
!7390 = !DILocation(line: 5844, column: 2, scope: !7384)
!7391 = !DILocation(line: 5845, column: 5, scope: !7375)
!7392 = !DILocation(line: 5845, column: 12, scope: !7375)
!7393 = !DILocation(line: 5845, column: 17, scope: !7375)
!7394 = !DILocation(line: 5846, column: 5, scope: !7375)
!7395 = !DILocation(line: 5847, column: 1, scope: !7375)
!7396 = distinct !DISubprogram(name: "xmlAutomataNewTransition", scope: !2, file: !2, line: 5864, type: !7397, scopeLine: 5866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !7399)
!7397 = !DISubroutineType(types: !7398)
!7398 = !{!7360, !6588, !7360, !7360, !1445, !1335}
!7399 = !{!7400, !7401, !7402, !7403, !7404, !7405}
!7400 = !DILocalVariable(name: "am", arg: 1, scope: !7396, file: !2, line: 5864, type: !6588)
!7401 = !DILocalVariable(name: "from", arg: 2, scope: !7396, file: !2, line: 5864, type: !7360)
!7402 = !DILocalVariable(name: "to", arg: 3, scope: !7396, file: !2, line: 5865, type: !7360)
!7403 = !DILocalVariable(name: "token", arg: 4, scope: !7396, file: !2, line: 5865, type: !1445)
!7404 = !DILocalVariable(name: "data", arg: 5, scope: !7396, file: !2, line: 5866, type: !1335)
!7405 = !DILocalVariable(name: "atom", scope: !7396, file: !2, line: 5867, type: !1378)
!7406 = !DILocation(line: 5864, column: 41, scope: !7396)
!7407 = !DILocation(line: 5864, column: 65, scope: !7396)
!7408 = !DILocation(line: 5865, column: 25, scope: !7396)
!7409 = !DILocation(line: 5865, column: 44, scope: !7396)
!7410 = !DILocation(line: 5866, column: 11, scope: !7396)
!7411 = !DILocation(line: 5867, column: 5, scope: !7396)
!7412 = !DILocation(line: 5867, column: 19, scope: !7396)
!7413 = !DILocation(line: 5869, column: 10, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7396, file: !2, line: 5869, column: 9)
!7415 = !DILocation(line: 5869, column: 13, scope: !7414)
!7416 = !DILocation(line: 5869, column: 22, scope: !7414)
!7417 = !DILocation(line: 5869, column: 26, scope: !7414)
!7418 = !DILocation(line: 5869, column: 31, scope: !7414)
!7419 = !DILocation(line: 5869, column: 40, scope: !7414)
!7420 = !DILocation(line: 5869, column: 44, scope: !7414)
!7421 = !DILocation(line: 5869, column: 50, scope: !7414)
!7422 = !DILocation(line: 5869, column: 9, scope: !7396)
!7423 = !DILocation(line: 5870, column: 2, scope: !7414)
!7424 = !DILocation(line: 5871, column: 26, scope: !7396)
!7425 = !DILocation(line: 5871, column: 12, scope: !7396)
!7426 = !DILocation(line: 5871, column: 10, scope: !7396)
!7427 = !DILocation(line: 5872, column: 9, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7396, file: !2, line: 5872, column: 9)
!7429 = !DILocation(line: 5872, column: 14, scope: !7428)
!7430 = !DILocation(line: 5872, column: 9, scope: !7396)
!7431 = !DILocation(line: 5873, column: 9, scope: !7428)
!7432 = !DILocation(line: 5874, column: 18, scope: !7396)
!7433 = !DILocation(line: 5874, column: 5, scope: !7396)
!7434 = !DILocation(line: 5874, column: 11, scope: !7396)
!7435 = !DILocation(line: 5874, column: 16, scope: !7396)
!7436 = !DILocation(line: 5875, column: 30, scope: !7396)
!7437 = !DILocation(line: 5875, column: 20, scope: !7396)
!7438 = !DILocation(line: 5875, column: 5, scope: !7396)
!7439 = !DILocation(line: 5875, column: 11, scope: !7396)
!7440 = !DILocation(line: 5875, column: 18, scope: !7396)
!7441 = !DILocation(line: 5877, column: 34, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7396, file: !2, line: 5877, column: 9)
!7443 = !DILocation(line: 5877, column: 38, scope: !7442)
!7444 = !DILocation(line: 5877, column: 44, scope: !7442)
!7445 = !DILocation(line: 5877, column: 48, scope: !7442)
!7446 = !DILocation(line: 5877, column: 9, scope: !7442)
!7447 = !DILocation(line: 5877, column: 54, scope: !7442)
!7448 = !DILocation(line: 5877, column: 9, scope: !7396)
!7449 = !DILocation(line: 5878, column: 24, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7442, file: !2, line: 5877, column: 59)
!7451 = !DILocation(line: 5878, column: 9, scope: !7450)
!7452 = !DILocation(line: 5879, column: 2, scope: !7450)
!7453 = !DILocation(line: 5881, column: 9, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7396, file: !2, line: 5881, column: 9)
!7455 = !DILocation(line: 5881, column: 12, scope: !7454)
!7456 = !DILocation(line: 5881, column: 9, scope: !7396)
!7457 = !DILocation(line: 5882, column: 9, scope: !7454)
!7458 = !DILocation(line: 5882, column: 13, scope: !7454)
!7459 = !DILocation(line: 5882, column: 2, scope: !7454)
!7460 = !DILocation(line: 5883, column: 12, scope: !7396)
!7461 = !DILocation(line: 5883, column: 5, scope: !7396)
!7462 = !DILocation(line: 5884, column: 1, scope: !7396)
!7463 = distinct !DISubprogram(name: "xmlRegNewAtom", scope: !2, file: !2, line: 811, type: !7464, scopeLine: 811, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !7466)
!7464 = !DISubroutineType(types: !7465)
!7465 = !{!1378, !1483, !1385}
!7466 = !{!7467, !7468, !7469}
!7467 = !DILocalVariable(name: "ctxt", arg: 1, scope: !7463, file: !2, line: 811, type: !1483)
!7468 = !DILocalVariable(name: "type", arg: 2, scope: !7463, file: !2, line: 811, type: !1385)
!7469 = !DILocalVariable(name: "ret", scope: !7463, file: !2, line: 812, type: !1378)
!7470 = !DILocation(line: 811, column: 35, scope: !7463)
!7471 = !DILocation(line: 811, column: 56, scope: !7463)
!7472 = !DILocation(line: 812, column: 5, scope: !7463)
!7473 = !DILocation(line: 812, column: 19, scope: !7463)
!7474 = !DILocation(line: 814, column: 27, scope: !7463)
!7475 = !DILocation(line: 814, column: 9, scope: !7463)
!7476 = !DILocation(line: 815, column: 9, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7463, file: !2, line: 815, column: 9)
!7478 = !DILocation(line: 815, column: 13, scope: !7477)
!7479 = !DILocation(line: 815, column: 9, scope: !7463)
!7480 = !DILocation(line: 816, column: 21, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7477, file: !2, line: 815, column: 22)
!7482 = !DILocation(line: 816, column: 2, scope: !7481)
!7483 = !DILocation(line: 817, column: 2, scope: !7481)
!7484 = !DILocation(line: 819, column: 12, scope: !7463)
!7485 = !DILocation(line: 819, column: 5, scope: !7463)
!7486 = !DILocation(line: 820, column: 17, scope: !7463)
!7487 = !DILocation(line: 820, column: 5, scope: !7463)
!7488 = !DILocation(line: 820, column: 10, scope: !7463)
!7489 = !DILocation(line: 820, column: 15, scope: !7463)
!7490 = !DILocation(line: 821, column: 5, scope: !7463)
!7491 = !DILocation(line: 821, column: 10, scope: !7463)
!7492 = !DILocation(line: 821, column: 16, scope: !7463)
!7493 = !DILocation(line: 822, column: 5, scope: !7463)
!7494 = !DILocation(line: 822, column: 10, scope: !7463)
!7495 = !DILocation(line: 822, column: 14, scope: !7463)
!7496 = !DILocation(line: 823, column: 5, scope: !7463)
!7497 = !DILocation(line: 823, column: 10, scope: !7463)
!7498 = !DILocation(line: 823, column: 14, scope: !7463)
!7499 = !DILocation(line: 824, column: 12, scope: !7463)
!7500 = !DILocation(line: 824, column: 5, scope: !7463)
!7501 = !DILocation(line: 825, column: 1, scope: !7463)
!7502 = !DISubprogram(name: "xmlStrdup", scope: !1353, file: !1353, line: 41, type: !7503, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7503 = !DISubroutineType(types: !7504)
!7504 = !{!1351, !1445}
!7505 = distinct !DISubprogram(name: "xmlFAGenerateTransitions", scope: !2, file: !2, line: 1568, type: !7506, scopeLine: 1569, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !7508)
!7506 = !DISubroutineType(types: !7507)
!7507 = !{!1306, !1483, !1358, !1358, !1378}
!7508 = !{!7509, !7510, !7511, !7512, !7513, !7514, !7515, !7520, !7521, !7522, !7525}
!7509 = !DILocalVariable(name: "ctxt", arg: 1, scope: !7505, file: !2, line: 1568, type: !1483)
!7510 = !DILocalVariable(name: "from", arg: 2, scope: !7505, file: !2, line: 1568, type: !1358)
!7511 = !DILocalVariable(name: "to", arg: 3, scope: !7505, file: !2, line: 1569, type: !1358)
!7512 = !DILocalVariable(name: "atom", arg: 4, scope: !7505, file: !2, line: 1569, type: !1378)
!7513 = !DILocalVariable(name: "end", scope: !7505, file: !2, line: 1570, type: !1358)
!7514 = !DILocalVariable(name: "nullable", scope: !7505, file: !2, line: 1571, type: !1306)
!7515 = !DILocalVariable(name: "counter", scope: !7516, file: !2, line: 1626, type: !1306)
!7516 = distinct !DILexicalBlock(scope: !7517, file: !2, line: 1625, column: 35)
!7517 = distinct !DILexicalBlock(scope: !7518, file: !2, line: 1600, column: 23)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !2, line: 1577, column: 42)
!7519 = distinct !DILexicalBlock(scope: !7505, file: !2, line: 1577, column: 9)
!7520 = !DILocalVariable(name: "inter", scope: !7516, file: !2, line: 1627, type: !1358)
!7521 = !DILocalVariable(name: "newstate", scope: !7516, file: !2, line: 1627, type: !1358)
!7522 = !DILocalVariable(name: "copy", scope: !7523, file: !2, line: 1646, type: !1378)
!7523 = distinct !DILexicalBlock(scope: !7524, file: !2, line: 1645, column: 51)
!7524 = distinct !DILexicalBlock(scope: !7516, file: !2, line: 1645, column: 7)
!7525 = !DILocalVariable(name: "tmp", scope: !7526, file: !2, line: 1744, type: !1358)
!7526 = distinct !DILexicalBlock(scope: !7527, file: !2, line: 1738, column: 49)
!7527 = distinct !DILexicalBlock(scope: !7505, file: !2, line: 1737, column: 9)
!7528 = !DILocation(line: 1568, column: 46, scope: !7505)
!7529 = !DILocation(line: 1568, column: 67, scope: !7505)
!7530 = !DILocation(line: 1569, column: 34, scope: !7505)
!7531 = !DILocation(line: 1569, column: 52, scope: !7505)
!7532 = !DILocation(line: 1570, column: 5, scope: !7505)
!7533 = !DILocation(line: 1570, column: 20, scope: !7505)
!7534 = !DILocation(line: 1571, column: 5, scope: !7505)
!7535 = !DILocation(line: 1571, column: 9, scope: !7505)
!7536 = !DILocation(line: 1573, column: 9, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7505, file: !2, line: 1573, column: 9)
!7538 = !DILocation(line: 1573, column: 14, scope: !7537)
!7539 = !DILocation(line: 1573, column: 9, scope: !7505)
!7540 = !DILocation(line: 1574, column: 2, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7537, file: !2, line: 1573, column: 23)
!7542 = !DILocation(line: 1575, column: 2, scope: !7541)
!7543 = !DILocation(line: 1577, column: 9, scope: !7519)
!7544 = !DILocation(line: 1577, column: 15, scope: !7519)
!7545 = !DILocation(line: 1577, column: 20, scope: !7519)
!7546 = !DILocation(line: 1577, column: 9, scope: !7505)
!7547 = !DILocation(line: 1582, column: 21, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7518, file: !2, line: 1582, column: 6)
!7549 = !DILocation(line: 1582, column: 27, scope: !7548)
!7550 = !DILocation(line: 1582, column: 6, scope: !7548)
!7551 = !DILocation(line: 1582, column: 33, scope: !7548)
!7552 = !DILocation(line: 1582, column: 6, scope: !7518)
!7553 = !DILocation(line: 1583, column: 6, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7548, file: !2, line: 1582, column: 38)
!7555 = !DILocation(line: 1585, column: 7, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7518, file: !2, line: 1585, column: 6)
!7557 = !DILocation(line: 1585, column: 10, scope: !7556)
!7558 = !DILocation(line: 1585, column: 19, scope: !7556)
!7559 = !DILocation(line: 1585, column: 23, scope: !7556)
!7560 = !DILocation(line: 1585, column: 29, scope: !7556)
!7561 = !DILocation(line: 1585, column: 37, scope: !7556)
!7562 = !DILocation(line: 1585, column: 34, scope: !7556)
!7563 = !DILocation(line: 1585, column: 41, scope: !7556)
!7564 = !DILocation(line: 1586, column: 7, scope: !7556)
!7565 = !DILocation(line: 1586, column: 13, scope: !7556)
!7566 = !DILocation(line: 1586, column: 19, scope: !7556)
!7567 = !DILocation(line: 1585, column: 6, scope: !7518)
!7568 = !DILocation(line: 1590, column: 37, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7556, file: !2, line: 1586, column: 47)
!7570 = !DILocation(line: 1590, column: 43, scope: !7569)
!7571 = !DILocation(line: 1590, column: 49, scope: !7569)
!7572 = !DILocation(line: 1590, column: 55, scope: !7569)
!7573 = !DILocation(line: 1590, column: 6, scope: !7569)
!7574 = !DILocation(line: 1599, column: 2, scope: !7569)
!7575 = !DILocation(line: 1600, column: 10, scope: !7518)
!7576 = !DILocation(line: 1600, column: 16, scope: !7518)
!7577 = !DILocation(line: 1600, column: 2, scope: !7518)
!7578 = !DILocation(line: 1602, column: 3, scope: !7517)
!7579 = !DILocation(line: 1602, column: 9, scope: !7517)
!7580 = !DILocation(line: 1602, column: 15, scope: !7517)
!7581 = !DILocation(line: 1608, column: 21, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7517, file: !2, line: 1608, column: 21)
!7583 = !DILocation(line: 1608, column: 24, scope: !7582)
!7584 = !DILocation(line: 1608, column: 21, scope: !7517)
!7585 = !DILocation(line: 1609, column: 52, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7582, file: !2, line: 1608, column: 33)
!7587 = !DILocation(line: 1609, column: 58, scope: !7586)
!7588 = !DILocation(line: 1609, column: 64, scope: !7586)
!7589 = !DILocation(line: 1609, column: 21, scope: !7586)
!7590 = !DILocation(line: 1610, column: 52, scope: !7586)
!7591 = !DILocation(line: 1610, column: 58, scope: !7586)
!7592 = !DILocation(line: 1610, column: 64, scope: !7586)
!7593 = !DILocation(line: 1611, column: 52, scope: !7586)
!7594 = !DILocation(line: 1611, column: 58, scope: !7586)
!7595 = !DILocation(line: 1610, column: 21, scope: !7586)
!7596 = !DILocation(line: 1612, column: 17, scope: !7586)
!7597 = !DILocation(line: 1613, column: 52, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7582, file: !2, line: 1612, column: 24)
!7599 = !DILocation(line: 1613, column: 58, scope: !7598)
!7600 = !DILocation(line: 1613, column: 64, scope: !7598)
!7601 = !DILocation(line: 1613, column: 71, scope: !7598)
!7602 = !DILocation(line: 1613, column: 21, scope: !7598)
!7603 = !DILocation(line: 1615, column: 3, scope: !7517)
!7604 = !DILocation(line: 1617, column: 3, scope: !7517)
!7605 = !DILocation(line: 1617, column: 9, scope: !7517)
!7606 = !DILocation(line: 1617, column: 15, scope: !7517)
!7607 = !DILocation(line: 1618, column: 34, scope: !7517)
!7608 = !DILocation(line: 1618, column: 40, scope: !7517)
!7609 = !DILocation(line: 1618, column: 46, scope: !7517)
!7610 = !DILocation(line: 1618, column: 53, scope: !7517)
!7611 = !DILocation(line: 1618, column: 59, scope: !7517)
!7612 = !DILocation(line: 1618, column: 3, scope: !7517)
!7613 = !DILocation(line: 1619, column: 34, scope: !7517)
!7614 = !DILocation(line: 1619, column: 40, scope: !7517)
!7615 = !DILocation(line: 1619, column: 46, scope: !7517)
!7616 = !DILocation(line: 1619, column: 52, scope: !7517)
!7617 = !DILocation(line: 1619, column: 58, scope: !7517)
!7618 = !DILocation(line: 1619, column: 3, scope: !7517)
!7619 = !DILocation(line: 1620, column: 3, scope: !7517)
!7620 = !DILocation(line: 1622, column: 3, scope: !7517)
!7621 = !DILocation(line: 1622, column: 9, scope: !7517)
!7622 = !DILocation(line: 1622, column: 15, scope: !7517)
!7623 = !DILocation(line: 1623, column: 34, scope: !7517)
!7624 = !DILocation(line: 1623, column: 40, scope: !7517)
!7625 = !DILocation(line: 1623, column: 46, scope: !7517)
!7626 = !DILocation(line: 1623, column: 52, scope: !7517)
!7627 = !DILocation(line: 1623, column: 58, scope: !7517)
!7628 = !DILocation(line: 1623, column: 3, scope: !7517)
!7629 = !DILocation(line: 1624, column: 3, scope: !7517)
!7630 = !DILocation(line: 1626, column: 3, scope: !7516)
!7631 = !DILocation(line: 1626, column: 7, scope: !7516)
!7632 = !DILocation(line: 1627, column: 3, scope: !7516)
!7633 = !DILocation(line: 1627, column: 18, scope: !7516)
!7634 = !DILocation(line: 1627, column: 25, scope: !7516)
!7635 = !DILocation(line: 1632, column: 7, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7516, file: !2, line: 1632, column: 7)
!7637 = !DILocation(line: 1632, column: 10, scope: !7636)
!7638 = !DILocation(line: 1632, column: 7, scope: !7516)
!7639 = !DILocation(line: 1633, column: 18, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7636, file: !2, line: 1632, column: 19)
!7641 = !DILocation(line: 1633, column: 16, scope: !7640)
!7642 = !DILocation(line: 1634, column: 3, scope: !7640)
!7643 = !DILocation(line: 1635, column: 33, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7636, file: !2, line: 1634, column: 10)
!7645 = !DILocation(line: 1635, column: 18, scope: !7644)
!7646 = !DILocation(line: 1635, column: 16, scope: !7644)
!7647 = !DILocation(line: 1636, column: 23, scope: !7644)
!7648 = !DILocation(line: 1636, column: 29, scope: !7644)
!7649 = !DILocation(line: 1636, column: 7, scope: !7644)
!7650 = !DILocation(line: 1645, column: 8, scope: !7524)
!7651 = !DILocation(line: 1645, column: 14, scope: !7524)
!7652 = !DILocation(line: 1645, column: 18, scope: !7524)
!7653 = !DILocation(line: 1645, column: 24, scope: !7524)
!7654 = !DILocation(line: 1645, column: 28, scope: !7524)
!7655 = !DILocation(line: 1645, column: 34, scope: !7524)
!7656 = !{!2160, !1528, i64 56}
!7657 = !DILocation(line: 1645, column: 41, scope: !7524)
!7658 = !DILocation(line: 1645, column: 7, scope: !7516)
!7659 = !DILocation(line: 1646, column: 7, scope: !7523)
!7660 = !DILocation(line: 1646, column: 21, scope: !7523)
!7661 = !DILocation(line: 1656, column: 29, scope: !7523)
!7662 = !DILocation(line: 1656, column: 35, scope: !7523)
!7663 = !DILocation(line: 1656, column: 14, scope: !7523)
!7664 = !DILocation(line: 1656, column: 12, scope: !7523)
!7665 = !DILocation(line: 1657, column: 11, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7523, file: !2, line: 1657, column: 11)
!7667 = !DILocation(line: 1657, column: 16, scope: !7666)
!7668 = !DILocation(line: 1657, column: 11, scope: !7523)
!7669 = !DILocation(line: 1658, column: 11, scope: !7666)
!7670 = !DILocation(line: 1659, column: 7, scope: !7523)
!7671 = !DILocation(line: 1659, column: 13, scope: !7523)
!7672 = !DILocation(line: 1659, column: 19, scope: !7523)
!7673 = !DILocation(line: 1660, column: 7, scope: !7523)
!7674 = !DILocation(line: 1660, column: 13, scope: !7523)
!7675 = !DILocation(line: 1660, column: 17, scope: !7523)
!7676 = !DILocation(line: 1661, column: 7, scope: !7523)
!7677 = !DILocation(line: 1661, column: 13, scope: !7523)
!7678 = !DILocation(line: 1661, column: 17, scope: !7523)
!7679 = !DILocation(line: 1663, column: 36, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7523, file: !2, line: 1663, column: 11)
!7681 = !DILocation(line: 1663, column: 42, scope: !7680)
!7682 = !DILocation(line: 1663, column: 48, scope: !7680)
!7683 = !DILocation(line: 1663, column: 61, scope: !7680)
!7684 = !DILocation(line: 1663, column: 11, scope: !7680)
!7685 = !DILocation(line: 1664, column: 11, scope: !7680)
!7686 = !DILocation(line: 1663, column: 11, scope: !7523)
!7687 = !DILocation(line: 1665, column: 4, scope: !7680)
!7688 = !DILocation(line: 1666, column: 15, scope: !7523)
!7689 = !DILocation(line: 1666, column: 21, scope: !7523)
!7690 = !DILocation(line: 1666, column: 13, scope: !7523)
!7691 = !DILocation(line: 1667, column: 34, scope: !7523)
!7692 = !DILocation(line: 1667, column: 17, scope: !7523)
!7693 = !DILocation(line: 1667, column: 15, scope: !7523)
!7694 = !DILocation(line: 1668, column: 37, scope: !7523)
!7695 = !DILocation(line: 1668, column: 43, scope: !7523)
!7696 = !DILocation(line: 1668, column: 47, scope: !7523)
!7697 = !DILocation(line: 1668, column: 7, scope: !7523)
!7698 = !DILocation(line: 1668, column: 13, scope: !7523)
!7699 = !DILocation(line: 1668, column: 22, scope: !7523)
!7700 = !DILocation(line: 1668, column: 31, scope: !7523)
!7701 = !DILocation(line: 1668, column: 35, scope: !7523)
!7702 = !DILocation(line: 1669, column: 37, scope: !7523)
!7703 = !DILocation(line: 1669, column: 43, scope: !7523)
!7704 = !DILocation(line: 1669, column: 47, scope: !7523)
!7705 = !DILocation(line: 1669, column: 7, scope: !7523)
!7706 = !DILocation(line: 1669, column: 13, scope: !7523)
!7707 = !DILocation(line: 1669, column: 22, scope: !7523)
!7708 = !DILocation(line: 1669, column: 31, scope: !7523)
!7709 = !DILocation(line: 1669, column: 35, scope: !7523)
!7710 = !DILocation(line: 1671, column: 45, scope: !7523)
!7711 = !DILocation(line: 1671, column: 51, scope: !7523)
!7712 = !DILocation(line: 1672, column: 10, scope: !7523)
!7713 = !DILocation(line: 1672, column: 16, scope: !7523)
!7714 = !DILocation(line: 1672, column: 22, scope: !7523)
!7715 = !DILocation(line: 1671, column: 7, scope: !7523)
!7716 = !DILocation(line: 1674, column: 38, scope: !7523)
!7717 = !DILocation(line: 1674, column: 44, scope: !7523)
!7718 = !DILocation(line: 1675, column: 31, scope: !7523)
!7719 = !DILocation(line: 1675, column: 41, scope: !7523)
!7720 = !DILocation(line: 1674, column: 7, scope: !7523)
!7721 = !DILocation(line: 1677, column: 38, scope: !7523)
!7722 = !DILocation(line: 1677, column: 44, scope: !7523)
!7723 = !DILocation(line: 1677, column: 50, scope: !7523)
!7724 = !DILocation(line: 1678, column: 38, scope: !7523)
!7725 = !DILocation(line: 1677, column: 7, scope: !7523)
!7726 = !DILocation(line: 1679, column: 3, scope: !7524)
!7727 = !DILocation(line: 1679, column: 3, scope: !7523)
!7728 = !DILocation(line: 1685, column: 34, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7524, file: !2, line: 1679, column: 10)
!7730 = !DILocation(line: 1685, column: 17, scope: !7729)
!7731 = !DILocation(line: 1685, column: 15, scope: !7729)
!7732 = !DILocation(line: 1686, column: 37, scope: !7729)
!7733 = !DILocation(line: 1686, column: 43, scope: !7729)
!7734 = !DILocation(line: 1686, column: 47, scope: !7729)
!7735 = !DILocation(line: 1686, column: 7, scope: !7729)
!7736 = !DILocation(line: 1686, column: 13, scope: !7729)
!7737 = !DILocation(line: 1686, column: 22, scope: !7729)
!7738 = !DILocation(line: 1686, column: 31, scope: !7729)
!7739 = !DILocation(line: 1686, column: 35, scope: !7729)
!7740 = !DILocation(line: 1687, column: 37, scope: !7729)
!7741 = !DILocation(line: 1687, column: 43, scope: !7729)
!7742 = !DILocation(line: 1687, column: 47, scope: !7729)
!7743 = !DILocation(line: 1687, column: 7, scope: !7729)
!7744 = !DILocation(line: 1687, column: 13, scope: !7729)
!7745 = !DILocation(line: 1687, column: 22, scope: !7729)
!7746 = !DILocation(line: 1687, column: 31, scope: !7729)
!7747 = !DILocation(line: 1687, column: 35, scope: !7729)
!7748 = !DILocation(line: 1689, column: 38, scope: !7729)
!7749 = !DILocation(line: 1689, column: 44, scope: !7729)
!7750 = !DILocation(line: 1689, column: 50, scope: !7729)
!7751 = !DILocation(line: 1690, column: 31, scope: !7729)
!7752 = !DILocation(line: 1690, column: 41, scope: !7729)
!7753 = !DILocation(line: 1689, column: 7, scope: !7729)
!7754 = !DILocation(line: 1692, column: 45, scope: !7729)
!7755 = !DILocation(line: 1692, column: 51, scope: !7729)
!7756 = !DILocation(line: 1692, column: 57, scope: !7729)
!7757 = !DILocation(line: 1693, column: 10, scope: !7729)
!7758 = !DILocation(line: 1693, column: 16, scope: !7729)
!7759 = !DILocation(line: 1693, column: 23, scope: !7729)
!7760 = !DILocation(line: 1692, column: 7, scope: !7729)
!7761 = !DILocation(line: 1695, column: 11, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7729, file: !2, line: 1695, column: 11)
!7763 = !DILocation(line: 1695, column: 17, scope: !7762)
!7764 = !DILocation(line: 1695, column: 21, scope: !7762)
!7765 = !DILocation(line: 1695, column: 11, scope: !7729)
!7766 = !DILocation(line: 1696, column: 35, scope: !7762)
!7767 = !DILocation(line: 1696, column: 41, scope: !7762)
!7768 = !DILocation(line: 1696, column: 47, scope: !7762)
!7769 = !DILocation(line: 1697, column: 14, scope: !7762)
!7770 = !DILocation(line: 1696, column: 4, scope: !7762)
!7771 = !DILocation(line: 1700, column: 3, scope: !7516)
!7772 = !DILocation(line: 1700, column: 9, scope: !7516)
!7773 = !DILocation(line: 1700, column: 13, scope: !7516)
!7774 = !DILocation(line: 1701, column: 3, scope: !7516)
!7775 = !DILocation(line: 1701, column: 9, scope: !7516)
!7776 = !DILocation(line: 1701, column: 13, scope: !7516)
!7777 = !DILocation(line: 1702, column: 3, scope: !7516)
!7778 = !DILocation(line: 1702, column: 9, scope: !7516)
!7779 = !DILocation(line: 1702, column: 15, scope: !7516)
!7780 = !DILocation(line: 1703, column: 17, scope: !7516)
!7781 = !DILocation(line: 1703, column: 3, scope: !7516)
!7782 = !DILocation(line: 1703, column: 9, scope: !7516)
!7783 = !DILocation(line: 1703, column: 15, scope: !7516)
!7784 = !DILocation(line: 1704, column: 6, scope: !7517)
!7785 = !DILocation(line: 1704, column: 6, scope: !7516)
!7786 = !DILocation(line: 1706, column: 3, scope: !7517)
!7787 = !DILocation(line: 1708, column: 2, scope: !7518)
!7788 = !DILocation(line: 1710, column: 10, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7505, file: !2, line: 1710, column: 9)
!7790 = !DILocation(line: 1710, column: 16, scope: !7789)
!7791 = !DILocation(line: 1710, column: 20, scope: !7789)
!7792 = !DILocation(line: 1710, column: 26, scope: !7789)
!7793 = !DILocation(line: 1710, column: 30, scope: !7789)
!7794 = !DILocation(line: 1710, column: 36, scope: !7789)
!7795 = !DILocation(line: 1710, column: 40, scope: !7789)
!7796 = !DILocation(line: 1710, column: 46, scope: !7789)
!7797 = !DILocation(line: 1711, column: 17, scope: !7789)
!7798 = !DILocation(line: 1711, column: 23, scope: !7789)
!7799 = !DILocation(line: 1711, column: 29, scope: !7789)
!7800 = !DILocation(line: 1710, column: 9, scope: !7505)
!7801 = !DILocation(line: 1715, column: 6, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !2, line: 1715, column: 6)
!7803 = distinct !DILexicalBlock(scope: !7789, file: !2, line: 1711, column: 57)
!7804 = !DILocation(line: 1715, column: 9, scope: !7802)
!7805 = !DILocation(line: 1715, column: 6, scope: !7803)
!7806 = !DILocation(line: 1716, column: 26, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7802, file: !2, line: 1715, column: 18)
!7808 = !DILocation(line: 1716, column: 11, scope: !7807)
!7809 = !DILocation(line: 1716, column: 9, scope: !7807)
!7810 = !DILocation(line: 1717, column: 10, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7807, file: !2, line: 1717, column: 10)
!7812 = !DILocation(line: 1717, column: 13, scope: !7811)
!7813 = !DILocation(line: 1717, column: 10, scope: !7807)
!7814 = !DILocation(line: 1718, column: 19, scope: !7811)
!7815 = !DILocation(line: 1718, column: 25, scope: !7811)
!7816 = !DILocation(line: 1718, column: 3, scope: !7811)
!7817 = !DILocation(line: 1720, column: 3, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7811, file: !2, line: 1719, column: 11)
!7819 = !DILocation(line: 1722, column: 2, scope: !7807)
!7820 = !DILocation(line: 1723, column: 33, scope: !7803)
!7821 = !DILocation(line: 1723, column: 39, scope: !7803)
!7822 = !DILocation(line: 1723, column: 45, scope: !7803)
!7823 = !DILocation(line: 1723, column: 2, scope: !7803)
!7824 = !DILocation(line: 1724, column: 16, scope: !7803)
!7825 = !DILocation(line: 1724, column: 2, scope: !7803)
!7826 = !DILocation(line: 1724, column: 8, scope: !7803)
!7827 = !DILocation(line: 1724, column: 14, scope: !7803)
!7828 = !DILocation(line: 1725, column: 17, scope: !7803)
!7829 = !DILocation(line: 1725, column: 2, scope: !7803)
!7830 = !DILocation(line: 1726, column: 2, scope: !7803)
!7831 = !DILocation(line: 1728, column: 9, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7505, file: !2, line: 1728, column: 9)
!7833 = !DILocation(line: 1728, column: 12, scope: !7832)
!7834 = !DILocation(line: 1728, column: 9, scope: !7505)
!7835 = !DILocation(line: 1729, column: 22, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7832, file: !2, line: 1728, column: 21)
!7837 = !DILocation(line: 1729, column: 7, scope: !7836)
!7838 = !DILocation(line: 1729, column: 5, scope: !7836)
!7839 = !DILocation(line: 1730, column: 6, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7836, file: !2, line: 1730, column: 6)
!7841 = !DILocation(line: 1730, column: 9, scope: !7840)
!7842 = !DILocation(line: 1730, column: 6, scope: !7836)
!7843 = !DILocation(line: 1731, column: 22, scope: !7840)
!7844 = !DILocation(line: 1731, column: 28, scope: !7840)
!7845 = !DILocation(line: 1731, column: 6, scope: !7840)
!7846 = !DILocation(line: 1733, column: 6, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7840, file: !2, line: 1732, column: 7)
!7848 = !DILocation(line: 1735, column: 5, scope: !7836)
!7849 = !DILocation(line: 1736, column: 11, scope: !7505)
!7850 = !DILocation(line: 1736, column: 9, scope: !7505)
!7851 = !DILocation(line: 1737, column: 10, scope: !7527)
!7852 = !DILocation(line: 1737, column: 16, scope: !7527)
!7853 = !DILocation(line: 1737, column: 22, scope: !7527)
!7854 = !DILocation(line: 1737, column: 48, scope: !7527)
!7855 = !DILocation(line: 1738, column: 10, scope: !7527)
!7856 = !DILocation(line: 1738, column: 16, scope: !7527)
!7857 = !DILocation(line: 1738, column: 22, scope: !7527)
!7858 = !DILocation(line: 1737, column: 9, scope: !7505)
!7859 = !DILocation(line: 1744, column: 9, scope: !7526)
!7860 = !DILocation(line: 1744, column: 24, scope: !7526)
!7861 = !DILocation(line: 1746, column: 23, scope: !7526)
!7862 = !DILocation(line: 1746, column: 8, scope: !7526)
!7863 = !DILocation(line: 1746, column: 6, scope: !7526)
!7864 = !DILocation(line: 1747, column: 6, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7526, file: !2, line: 1747, column: 6)
!7866 = !DILocation(line: 1747, column: 10, scope: !7865)
!7867 = !DILocation(line: 1747, column: 6, scope: !7526)
!7868 = !DILocation(line: 1748, column: 22, scope: !7865)
!7869 = !DILocation(line: 1748, column: 28, scope: !7865)
!7870 = !DILocation(line: 1748, column: 6, scope: !7865)
!7871 = !DILocation(line: 1750, column: 6, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7865, file: !2, line: 1749, column: 7)
!7873 = !DILocation(line: 1752, column: 33, scope: !7526)
!7874 = !DILocation(line: 1752, column: 39, scope: !7526)
!7875 = !DILocation(line: 1752, column: 44, scope: !7526)
!7876 = !DILocation(line: 1752, column: 2, scope: !7526)
!7877 = !DILocation(line: 1753, column: 7, scope: !7526)
!7878 = !DILocation(line: 1753, column: 5, scope: !7526)
!7879 = !DILocation(line: 1754, column: 5, scope: !7527)
!7880 = !DILocation(line: 1754, column: 5, scope: !7526)
!7881 = !DILocation(line: 1755, column: 24, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7505, file: !2, line: 1755, column: 9)
!7883 = !DILocation(line: 1755, column: 30, scope: !7882)
!7884 = !DILocation(line: 1755, column: 9, scope: !7882)
!7885 = !DILocation(line: 1755, column: 36, scope: !7882)
!7886 = !DILocation(line: 1755, column: 9, scope: !7505)
!7887 = !DILocation(line: 1756, column: 2, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7882, file: !2, line: 1755, column: 41)
!7889 = !DILocation(line: 1758, column: 10, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7505, file: !2, line: 1758, column: 9)
!7891 = !DILocation(line: 1758, column: 16, scope: !7890)
!7892 = !DILocation(line: 1758, column: 22, scope: !7890)
!7893 = !DILocation(line: 1758, column: 49, scope: !7890)
!7894 = !DILocation(line: 1759, column: 10, scope: !7890)
!7895 = !DILocation(line: 1759, column: 16, scope: !7890)
!7896 = !DILocation(line: 1759, column: 20, scope: !7890)
!7897 = !DILocation(line: 1759, column: 26, scope: !7890)
!7898 = !DILocation(line: 1759, column: 30, scope: !7890)
!7899 = !DILocation(line: 1759, column: 36, scope: !7890)
!7900 = !DILocation(line: 1759, column: 40, scope: !7890)
!7901 = !DILocation(line: 1758, column: 9, scope: !7505)
!7902 = !DILocation(line: 1760, column: 11, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7890, file: !2, line: 1759, column: 46)
!7904 = !DILocation(line: 1761, column: 2, scope: !7903)
!7905 = !DILocation(line: 1761, column: 8, scope: !7903)
!7906 = !DILocation(line: 1761, column: 12, scope: !7903)
!7907 = !DILocation(line: 1762, column: 13, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7903, file: !2, line: 1762, column: 13)
!7909 = !DILocation(line: 1762, column: 19, scope: !7908)
!7910 = !DILocation(line: 1762, column: 23, scope: !7908)
!7911 = !DILocation(line: 1762, column: 13, scope: !7903)
!7912 = !DILocation(line: 1763, column: 6, scope: !7908)
!7913 = !DILocation(line: 1763, column: 12, scope: !7908)
!7914 = !DILocation(line: 1763, column: 18, scope: !7908)
!7915 = !DILocation(line: 1764, column: 5, scope: !7903)
!7916 = !DILocation(line: 1765, column: 25, scope: !7505)
!7917 = !DILocation(line: 1765, column: 31, scope: !7505)
!7918 = !DILocation(line: 1765, column: 37, scope: !7505)
!7919 = !DILocation(line: 1765, column: 43, scope: !7505)
!7920 = !DILocation(line: 1765, column: 5, scope: !7505)
!7921 = !DILocation(line: 1766, column: 19, scope: !7505)
!7922 = !DILocation(line: 1766, column: 5, scope: !7505)
!7923 = !DILocation(line: 1766, column: 11, scope: !7505)
!7924 = !DILocation(line: 1766, column: 17, scope: !7505)
!7925 = !DILocation(line: 1767, column: 13, scope: !7505)
!7926 = !DILocation(line: 1767, column: 19, scope: !7505)
!7927 = !DILocation(line: 1767, column: 5, scope: !7505)
!7928 = !DILocation(line: 1769, column: 6, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7505, file: !2, line: 1767, column: 26)
!7930 = !DILocation(line: 1769, column: 12, scope: !7929)
!7931 = !DILocation(line: 1769, column: 18, scope: !7929)
!7932 = !DILocation(line: 1770, column: 37, scope: !7929)
!7933 = !DILocation(line: 1770, column: 43, scope: !7929)
!7934 = !DILocation(line: 1770, column: 49, scope: !7929)
!7935 = !DILocation(line: 1770, column: 6, scope: !7929)
!7936 = !DILocation(line: 1771, column: 6, scope: !7929)
!7937 = !DILocation(line: 1773, column: 6, scope: !7929)
!7938 = !DILocation(line: 1773, column: 12, scope: !7929)
!7939 = !DILocation(line: 1773, column: 18, scope: !7929)
!7940 = !DILocation(line: 1774, column: 37, scope: !7929)
!7941 = !DILocation(line: 1774, column: 43, scope: !7929)
!7942 = !DILocation(line: 1774, column: 49, scope: !7929)
!7943 = !DILocation(line: 1774, column: 6, scope: !7929)
!7944 = !DILocation(line: 1775, column: 26, scope: !7929)
!7945 = !DILocation(line: 1775, column: 32, scope: !7929)
!7946 = !DILocation(line: 1775, column: 36, scope: !7929)
!7947 = !DILocation(line: 1775, column: 42, scope: !7929)
!7948 = !DILocation(line: 1775, column: 6, scope: !7929)
!7949 = !DILocation(line: 1776, column: 6, scope: !7929)
!7950 = !DILocation(line: 1778, column: 6, scope: !7929)
!7951 = !DILocation(line: 1778, column: 12, scope: !7929)
!7952 = !DILocation(line: 1778, column: 18, scope: !7929)
!7953 = !DILocation(line: 1779, column: 26, scope: !7929)
!7954 = !DILocation(line: 1779, column: 32, scope: !7929)
!7955 = !DILocation(line: 1779, column: 36, scope: !7929)
!7956 = !DILocation(line: 1779, column: 42, scope: !7929)
!7957 = !DILocation(line: 1779, column: 6, scope: !7929)
!7958 = !DILocation(line: 1780, column: 6, scope: !7929)
!7959 = !DILocation(line: 1782, column: 10, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7929, file: !2, line: 1782, column: 10)
!7961 = !DILocation(line: 1782, column: 10, scope: !7929)
!7962 = !DILocation(line: 1783, column: 34, scope: !7960)
!7963 = !DILocation(line: 1783, column: 40, scope: !7960)
!7964 = !DILocation(line: 1783, column: 46, scope: !7960)
!7965 = !DILocation(line: 1783, column: 3, scope: !7960)
!7966 = !DILocation(line: 1784, column: 6, scope: !7929)
!7967 = !DILocation(line: 1786, column: 6, scope: !7929)
!7968 = !DILocation(line: 1788, column: 5, scope: !7505)
!7969 = !DILocation(line: 1789, column: 1, scope: !7505)
!7970 = distinct !DISubprogram(name: "xmlAutomataNewTransition2", scope: !2, file: !2, line: 5902, type: !7971, scopeLine: 5904, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !7973)
!7971 = !DISubroutineType(types: !7972)
!7972 = !{!7360, !6588, !7360, !7360, !1445, !1445, !1335}
!7973 = !{!7974, !7975, !7976, !7977, !7978, !7979, !7980, !7981, !7984, !7985}
!7974 = !DILocalVariable(name: "am", arg: 1, scope: !7970, file: !2, line: 5902, type: !6588)
!7975 = !DILocalVariable(name: "from", arg: 2, scope: !7970, file: !2, line: 5902, type: !7360)
!7976 = !DILocalVariable(name: "to", arg: 3, scope: !7970, file: !2, line: 5903, type: !7360)
!7977 = !DILocalVariable(name: "token", arg: 4, scope: !7970, file: !2, line: 5903, type: !1445)
!7978 = !DILocalVariable(name: "token2", arg: 5, scope: !7970, file: !2, line: 5904, type: !1445)
!7979 = !DILocalVariable(name: "data", arg: 6, scope: !7970, file: !2, line: 5904, type: !1335)
!7980 = !DILocalVariable(name: "atom", scope: !7970, file: !2, line: 5905, type: !1378)
!7981 = !DILocalVariable(name: "lenn", scope: !7982, file: !2, line: 5916, type: !1306)
!7982 = distinct !DILexicalBlock(scope: !7983, file: !2, line: 5915, column: 12)
!7983 = distinct !DILexicalBlock(scope: !7970, file: !2, line: 5913, column: 9)
!7984 = !DILocalVariable(name: "lenp", scope: !7982, file: !2, line: 5916, type: !1306)
!7985 = !DILocalVariable(name: "str", scope: !7982, file: !2, line: 5917, type: !1351)
!7986 = !DILocation(line: 5902, column: 42, scope: !7970)
!7987 = !DILocation(line: 5902, column: 66, scope: !7970)
!7988 = !DILocation(line: 5903, column: 26, scope: !7970)
!7989 = !DILocation(line: 5903, column: 45, scope: !7970)
!7990 = !DILocation(line: 5904, column: 21, scope: !7970)
!7991 = !DILocation(line: 5904, column: 35, scope: !7970)
!7992 = !DILocation(line: 5905, column: 5, scope: !7970)
!7993 = !DILocation(line: 5905, column: 19, scope: !7970)
!7994 = !DILocation(line: 5907, column: 10, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7970, file: !2, line: 5907, column: 9)
!7996 = !DILocation(line: 5907, column: 13, scope: !7995)
!7997 = !DILocation(line: 5907, column: 22, scope: !7995)
!7998 = !DILocation(line: 5907, column: 26, scope: !7995)
!7999 = !DILocation(line: 5907, column: 31, scope: !7995)
!8000 = !DILocation(line: 5907, column: 40, scope: !7995)
!8001 = !DILocation(line: 5907, column: 44, scope: !7995)
!8002 = !DILocation(line: 5907, column: 50, scope: !7995)
!8003 = !DILocation(line: 5907, column: 9, scope: !7970)
!8004 = !DILocation(line: 5908, column: 2, scope: !7995)
!8005 = !DILocation(line: 5909, column: 26, scope: !7970)
!8006 = !DILocation(line: 5909, column: 12, scope: !7970)
!8007 = !DILocation(line: 5909, column: 10, scope: !7970)
!8008 = !DILocation(line: 5910, column: 9, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !7970, file: !2, line: 5910, column: 9)
!8010 = !DILocation(line: 5910, column: 14, scope: !8009)
!8011 = !DILocation(line: 5910, column: 9, scope: !7970)
!8012 = !DILocation(line: 5911, column: 2, scope: !8009)
!8013 = !DILocation(line: 5912, column: 18, scope: !7970)
!8014 = !DILocation(line: 5912, column: 5, scope: !7970)
!8015 = !DILocation(line: 5912, column: 11, scope: !7970)
!8016 = !DILocation(line: 5912, column: 16, scope: !7970)
!8017 = !DILocation(line: 5913, column: 10, scope: !7983)
!8018 = !DILocation(line: 5913, column: 17, scope: !7983)
!8019 = !DILocation(line: 5913, column: 26, scope: !7983)
!8020 = !DILocation(line: 5913, column: 31, scope: !7983)
!8021 = !DILocation(line: 5913, column: 30, scope: !7983)
!8022 = !DILocation(line: 5913, column: 38, scope: !7983)
!8023 = !DILocation(line: 5913, column: 9, scope: !7970)
!8024 = !DILocation(line: 5914, column: 27, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !7983, file: !2, line: 5913, column: 45)
!8026 = !DILocation(line: 5914, column: 17, scope: !8025)
!8027 = !DILocation(line: 5914, column: 2, scope: !8025)
!8028 = !DILocation(line: 5914, column: 8, scope: !8025)
!8029 = !DILocation(line: 5914, column: 15, scope: !8025)
!8030 = !DILocation(line: 5915, column: 5, scope: !8025)
!8031 = !DILocation(line: 5916, column: 2, scope: !7982)
!8032 = !DILocation(line: 5916, column: 6, scope: !7982)
!8033 = !DILocation(line: 5916, column: 12, scope: !7982)
!8034 = !DILocation(line: 5917, column: 2, scope: !7982)
!8035 = !DILocation(line: 5917, column: 11, scope: !7982)
!8036 = !DILocation(line: 5919, column: 25, scope: !7982)
!8037 = !DILocation(line: 5919, column: 9, scope: !7982)
!8038 = !DILocation(line: 5919, column: 7, scope: !7982)
!8039 = !DILocation(line: 5920, column: 25, scope: !7982)
!8040 = !DILocation(line: 5920, column: 9, scope: !7982)
!8041 = !DILocation(line: 5920, column: 7, scope: !7982)
!8042 = !DILocation(line: 5922, column: 20, scope: !7982)
!8043 = !DILocation(line: 5922, column: 36, scope: !7982)
!8044 = !DILocation(line: 5922, column: 43, scope: !7982)
!8045 = !DILocation(line: 5922, column: 41, scope: !7982)
!8046 = !DILocation(line: 5922, column: 48, scope: !7982)
!8047 = !DILocation(line: 5922, column: 6, scope: !7982)
!8048 = !DILocation(line: 5923, column: 6, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !7982, file: !2, line: 5923, column: 6)
!8050 = !DILocation(line: 5923, column: 10, scope: !8049)
!8051 = !DILocation(line: 5923, column: 6, scope: !7982)
!8052 = !DILocation(line: 5924, column: 21, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8049, file: !2, line: 5923, column: 19)
!8054 = !DILocation(line: 5924, column: 6, scope: !8053)
!8055 = !DILocation(line: 5925, column: 6, scope: !8053)
!8056 = !DILocation(line: 5927, column: 10, scope: !7982)
!8057 = !DILocation(line: 5927, column: 18, scope: !7982)
!8058 = !DILocation(line: 5927, column: 25, scope: !7982)
!8059 = !DILocation(line: 5927, column: 2, scope: !7982)
!8060 = !DILocation(line: 5928, column: 2, scope: !7982)
!8061 = !DILocation(line: 5928, column: 6, scope: !7982)
!8062 = !DILocation(line: 5928, column: 12, scope: !7982)
!8063 = !DILocation(line: 5929, column: 10, scope: !7982)
!8064 = !DILocation(line: 5929, column: 14, scope: !7982)
!8065 = !DILocation(line: 5929, column: 19, scope: !7982)
!8066 = !DILocation(line: 5929, column: 25, scope: !7982)
!8067 = !DILocation(line: 5929, column: 33, scope: !7982)
!8068 = !DILocation(line: 5929, column: 2, scope: !7982)
!8069 = !DILocation(line: 5930, column: 2, scope: !7982)
!8070 = !DILocation(line: 5930, column: 6, scope: !7982)
!8071 = !DILocation(line: 5930, column: 13, scope: !7982)
!8072 = !DILocation(line: 5930, column: 11, scope: !7982)
!8073 = !DILocation(line: 5930, column: 18, scope: !7982)
!8074 = !DILocation(line: 5930, column: 23, scope: !7982)
!8075 = !DILocation(line: 5932, column: 17, scope: !7982)
!8076 = !DILocation(line: 5932, column: 2, scope: !7982)
!8077 = !DILocation(line: 5932, column: 8, scope: !7982)
!8078 = !DILocation(line: 5932, column: 15, scope: !7982)
!8079 = !DILocation(line: 5933, column: 5, scope: !7983)
!8080 = !DILocation(line: 5935, column: 34, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !7970, file: !2, line: 5935, column: 9)
!8082 = !DILocation(line: 5935, column: 38, scope: !8081)
!8083 = !DILocation(line: 5935, column: 44, scope: !8081)
!8084 = !DILocation(line: 5935, column: 48, scope: !8081)
!8085 = !DILocation(line: 5935, column: 9, scope: !8081)
!8086 = !DILocation(line: 5935, column: 54, scope: !8081)
!8087 = !DILocation(line: 5935, column: 9, scope: !7970)
!8088 = !DILocation(line: 5936, column: 24, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8081, file: !2, line: 5935, column: 59)
!8090 = !DILocation(line: 5936, column: 9, scope: !8089)
!8091 = !DILocation(line: 5937, column: 2, scope: !8089)
!8092 = !DILocation(line: 5939, column: 9, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !7970, file: !2, line: 5939, column: 9)
!8094 = !DILocation(line: 5939, column: 12, scope: !8093)
!8095 = !DILocation(line: 5939, column: 9, scope: !7970)
!8096 = !DILocation(line: 5940, column: 9, scope: !8093)
!8097 = !DILocation(line: 5940, column: 13, scope: !8093)
!8098 = !DILocation(line: 5940, column: 2, scope: !8093)
!8099 = !DILocation(line: 5941, column: 12, scope: !7970)
!8100 = !DILocation(line: 5941, column: 5, scope: !7970)
!8101 = !DILocation(line: 5942, column: 1, scope: !7970)
!8102 = distinct !DISubprogram(name: "xmlAutomataNewNegTrans", scope: !2, file: !2, line: 5962, type: !7971, scopeLine: 5964, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !8103)
!8103 = !{!8104, !8105, !8106, !8107, !8108, !8109, !8110, !8111, !8115, !8118, !8119}
!8104 = !DILocalVariable(name: "am", arg: 1, scope: !8102, file: !2, line: 5962, type: !6588)
!8105 = !DILocalVariable(name: "from", arg: 2, scope: !8102, file: !2, line: 5962, type: !7360)
!8106 = !DILocalVariable(name: "to", arg: 3, scope: !8102, file: !2, line: 5963, type: !7360)
!8107 = !DILocalVariable(name: "token", arg: 4, scope: !8102, file: !2, line: 5963, type: !1445)
!8108 = !DILocalVariable(name: "token2", arg: 5, scope: !8102, file: !2, line: 5964, type: !1445)
!8109 = !DILocalVariable(name: "data", arg: 6, scope: !8102, file: !2, line: 5964, type: !1335)
!8110 = !DILocalVariable(name: "atom", scope: !8102, file: !2, line: 5965, type: !1378)
!8111 = !DILocalVariable(name: "err_msg", scope: !8102, file: !2, line: 5966, type: !8112)
!8112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1352, size: 1600, elements: !8113)
!8113 = !{!8114}
!8114 = !DISubrange(count: 200)
!8115 = !DILocalVariable(name: "lenn", scope: !8116, file: !2, line: 5978, type: !1306)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !2, line: 5977, column: 12)
!8117 = distinct !DILexicalBlock(scope: !8102, file: !2, line: 5975, column: 9)
!8118 = !DILocalVariable(name: "lenp", scope: !8116, file: !2, line: 5978, type: !1306)
!8119 = !DILocalVariable(name: "str", scope: !8116, file: !2, line: 5979, type: !1351)
!8120 = !DILocation(line: 5962, column: 39, scope: !8102)
!8121 = !DILocation(line: 5962, column: 63, scope: !8102)
!8122 = !DILocation(line: 5963, column: 30, scope: !8102)
!8123 = !DILocation(line: 5963, column: 49, scope: !8102)
!8124 = !DILocation(line: 5964, column: 25, scope: !8102)
!8125 = !DILocation(line: 5964, column: 39, scope: !8102)
!8126 = !DILocation(line: 5965, column: 5, scope: !8102)
!8127 = !DILocation(line: 5965, column: 19, scope: !8102)
!8128 = !DILocation(line: 5966, column: 5, scope: !8102)
!8129 = !DILocation(line: 5966, column: 13, scope: !8102)
!8130 = !DILocation(line: 5968, column: 10, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8102, file: !2, line: 5968, column: 9)
!8132 = !DILocation(line: 5968, column: 13, scope: !8131)
!8133 = !DILocation(line: 5968, column: 22, scope: !8131)
!8134 = !DILocation(line: 5968, column: 26, scope: !8131)
!8135 = !DILocation(line: 5968, column: 31, scope: !8131)
!8136 = !DILocation(line: 5968, column: 40, scope: !8131)
!8137 = !DILocation(line: 5968, column: 44, scope: !8131)
!8138 = !DILocation(line: 5968, column: 50, scope: !8131)
!8139 = !DILocation(line: 5968, column: 9, scope: !8102)
!8140 = !DILocation(line: 5969, column: 2, scope: !8131)
!8141 = !DILocation(line: 5970, column: 26, scope: !8102)
!8142 = !DILocation(line: 5970, column: 12, scope: !8102)
!8143 = !DILocation(line: 5970, column: 10, scope: !8102)
!8144 = !DILocation(line: 5971, column: 9, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8102, file: !2, line: 5971, column: 9)
!8146 = !DILocation(line: 5971, column: 14, scope: !8145)
!8147 = !DILocation(line: 5971, column: 9, scope: !8102)
!8148 = !DILocation(line: 5972, column: 2, scope: !8145)
!8149 = !DILocation(line: 5973, column: 18, scope: !8102)
!8150 = !DILocation(line: 5973, column: 5, scope: !8102)
!8151 = !DILocation(line: 5973, column: 11, scope: !8102)
!8152 = !DILocation(line: 5973, column: 16, scope: !8102)
!8153 = !DILocation(line: 5974, column: 5, scope: !8102)
!8154 = !DILocation(line: 5974, column: 11, scope: !8102)
!8155 = !DILocation(line: 5974, column: 15, scope: !8102)
!8156 = !DILocation(line: 5975, column: 10, scope: !8117)
!8157 = !DILocation(line: 5975, column: 17, scope: !8117)
!8158 = !DILocation(line: 5975, column: 26, scope: !8117)
!8159 = !DILocation(line: 5975, column: 31, scope: !8117)
!8160 = !DILocation(line: 5975, column: 30, scope: !8117)
!8161 = !DILocation(line: 5975, column: 38, scope: !8117)
!8162 = !DILocation(line: 5975, column: 9, scope: !8102)
!8163 = !DILocation(line: 5976, column: 27, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8117, file: !2, line: 5975, column: 45)
!8165 = !DILocation(line: 5976, column: 17, scope: !8164)
!8166 = !DILocation(line: 5976, column: 2, scope: !8164)
!8167 = !DILocation(line: 5976, column: 8, scope: !8164)
!8168 = !DILocation(line: 5976, column: 15, scope: !8164)
!8169 = !DILocation(line: 5977, column: 5, scope: !8164)
!8170 = !DILocation(line: 5978, column: 2, scope: !8116)
!8171 = !DILocation(line: 5978, column: 6, scope: !8116)
!8172 = !DILocation(line: 5978, column: 12, scope: !8116)
!8173 = !DILocation(line: 5979, column: 2, scope: !8116)
!8174 = !DILocation(line: 5979, column: 11, scope: !8116)
!8175 = !DILocation(line: 5981, column: 25, scope: !8116)
!8176 = !DILocation(line: 5981, column: 9, scope: !8116)
!8177 = !DILocation(line: 5981, column: 7, scope: !8116)
!8178 = !DILocation(line: 5982, column: 25, scope: !8116)
!8179 = !DILocation(line: 5982, column: 9, scope: !8116)
!8180 = !DILocation(line: 5982, column: 7, scope: !8116)
!8181 = !DILocation(line: 5984, column: 20, scope: !8116)
!8182 = !DILocation(line: 5984, column: 36, scope: !8116)
!8183 = !DILocation(line: 5984, column: 43, scope: !8116)
!8184 = !DILocation(line: 5984, column: 41, scope: !8116)
!8185 = !DILocation(line: 5984, column: 48, scope: !8116)
!8186 = !DILocation(line: 5984, column: 6, scope: !8116)
!8187 = !DILocation(line: 5985, column: 6, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8116, file: !2, line: 5985, column: 6)
!8189 = !DILocation(line: 5985, column: 10, scope: !8188)
!8190 = !DILocation(line: 5985, column: 6, scope: !8116)
!8191 = !DILocation(line: 5986, column: 21, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8188, file: !2, line: 5985, column: 19)
!8193 = !DILocation(line: 5986, column: 6, scope: !8192)
!8194 = !DILocation(line: 5987, column: 6, scope: !8192)
!8195 = !DILocation(line: 5989, column: 10, scope: !8116)
!8196 = !DILocation(line: 5989, column: 18, scope: !8116)
!8197 = !DILocation(line: 5989, column: 25, scope: !8116)
!8198 = !DILocation(line: 5989, column: 2, scope: !8116)
!8199 = !DILocation(line: 5990, column: 2, scope: !8116)
!8200 = !DILocation(line: 5990, column: 6, scope: !8116)
!8201 = !DILocation(line: 5990, column: 12, scope: !8116)
!8202 = !DILocation(line: 5991, column: 10, scope: !8116)
!8203 = !DILocation(line: 5991, column: 14, scope: !8116)
!8204 = !DILocation(line: 5991, column: 19, scope: !8116)
!8205 = !DILocation(line: 5991, column: 25, scope: !8116)
!8206 = !DILocation(line: 5991, column: 33, scope: !8116)
!8207 = !DILocation(line: 5991, column: 2, scope: !8116)
!8208 = !DILocation(line: 5992, column: 2, scope: !8116)
!8209 = !DILocation(line: 5992, column: 6, scope: !8116)
!8210 = !DILocation(line: 5992, column: 13, scope: !8116)
!8211 = !DILocation(line: 5992, column: 11, scope: !8116)
!8212 = !DILocation(line: 5992, column: 18, scope: !8116)
!8213 = !DILocation(line: 5992, column: 23, scope: !8116)
!8214 = !DILocation(line: 5994, column: 17, scope: !8116)
!8215 = !DILocation(line: 5994, column: 2, scope: !8116)
!8216 = !DILocation(line: 5994, column: 8, scope: !8116)
!8217 = !DILocation(line: 5994, column: 15, scope: !8116)
!8218 = !DILocation(line: 5995, column: 5, scope: !8117)
!8219 = !DILocation(line: 5996, column: 23, scope: !8102)
!8220 = !DILocation(line: 5996, column: 62, scope: !8102)
!8221 = !DILocation(line: 5996, column: 68, scope: !8102)
!8222 = !DILocation(line: 5996, column: 5, scope: !8102)
!8223 = !DILocation(line: 5997, column: 5, scope: !8102)
!8224 = !DILocation(line: 5997, column: 18, scope: !8102)
!8225 = !DILocation(line: 5998, column: 31, scope: !8102)
!8226 = !DILocation(line: 5998, column: 21, scope: !8102)
!8227 = !DILocation(line: 5998, column: 5, scope: !8102)
!8228 = !DILocation(line: 5998, column: 11, scope: !8102)
!8229 = !DILocation(line: 5998, column: 19, scope: !8102)
!8230 = !DILocation(line: 6000, column: 34, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8102, file: !2, line: 6000, column: 9)
!8232 = !DILocation(line: 6000, column: 38, scope: !8231)
!8233 = !DILocation(line: 6000, column: 44, scope: !8231)
!8234 = !DILocation(line: 6000, column: 48, scope: !8231)
!8235 = !DILocation(line: 6000, column: 9, scope: !8231)
!8236 = !DILocation(line: 6000, column: 54, scope: !8231)
!8237 = !DILocation(line: 6000, column: 9, scope: !8102)
!8238 = !DILocation(line: 6001, column: 24, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8231, file: !2, line: 6000, column: 59)
!8240 = !DILocation(line: 6001, column: 9, scope: !8239)
!8241 = !DILocation(line: 6002, column: 2, scope: !8239)
!8242 = !DILocation(line: 6004, column: 5, scope: !8102)
!8243 = !DILocation(line: 6004, column: 9, scope: !8102)
!8244 = !DILocation(line: 6004, column: 13, scope: !8102)
!8245 = !DILocation(line: 6005, column: 9, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8102, file: !2, line: 6005, column: 9)
!8247 = !DILocation(line: 6005, column: 12, scope: !8246)
!8248 = !DILocation(line: 6005, column: 9, scope: !8102)
!8249 = !DILocation(line: 6006, column: 9, scope: !8246)
!8250 = !DILocation(line: 6006, column: 13, scope: !8246)
!8251 = !DILocation(line: 6006, column: 2, scope: !8246)
!8252 = !DILocation(line: 6007, column: 12, scope: !8102)
!8253 = !DILocation(line: 6007, column: 5, scope: !8102)
!8254 = !DILocation(line: 6008, column: 1, scope: !8102)
!8255 = !DISubprogram(name: "snprintf", scope: !3952, file: !3952, line: 378, type: !8256, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!8256 = !DISubroutineType(types: !8257)
!8257 = !{!1306, !8258, !1509, !3956, null}
!8258 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1481)
!8259 = distinct !DISubprogram(name: "xmlAutomataNewCountTrans2", scope: !2, file: !2, line: 6029, type: !8260, scopeLine: 6032, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !8262)
!8260 = !DISubroutineType(types: !8261)
!8261 = !{!7360, !6588, !7360, !7360, !1445, !1445, !1306, !1306, !1335}
!8262 = !{!8263, !8264, !8265, !8266, !8267, !8268, !8269, !8270, !8271, !8272, !8273, !8276, !8277}
!8263 = !DILocalVariable(name: "am", arg: 1, scope: !8259, file: !2, line: 6029, type: !6588)
!8264 = !DILocalVariable(name: "from", arg: 2, scope: !8259, file: !2, line: 6029, type: !7360)
!8265 = !DILocalVariable(name: "to", arg: 3, scope: !8259, file: !2, line: 6030, type: !7360)
!8266 = !DILocalVariable(name: "token", arg: 4, scope: !8259, file: !2, line: 6030, type: !1445)
!8267 = !DILocalVariable(name: "token2", arg: 5, scope: !8259, file: !2, line: 6031, type: !1445)
!8268 = !DILocalVariable(name: "min", arg: 6, scope: !8259, file: !2, line: 6032, type: !1306)
!8269 = !DILocalVariable(name: "max", arg: 7, scope: !8259, file: !2, line: 6032, type: !1306)
!8270 = !DILocalVariable(name: "data", arg: 8, scope: !8259, file: !2, line: 6032, type: !1335)
!8271 = !DILocalVariable(name: "atom", scope: !8259, file: !2, line: 6033, type: !1378)
!8272 = !DILocalVariable(name: "counter", scope: !8259, file: !2, line: 6034, type: !1306)
!8273 = !DILocalVariable(name: "lenn", scope: !8274, file: !2, line: 6048, type: !1306)
!8274 = distinct !DILexicalBlock(scope: !8275, file: !2, line: 6047, column: 12)
!8275 = distinct !DILexicalBlock(scope: !8259, file: !2, line: 6045, column: 9)
!8276 = !DILocalVariable(name: "lenp", scope: !8274, file: !2, line: 6048, type: !1306)
!8277 = !DILocalVariable(name: "str", scope: !8274, file: !2, line: 6049, type: !1351)
!8278 = !DILocation(line: 6029, column: 42, scope: !8259)
!8279 = !DILocation(line: 6029, column: 66, scope: !8259)
!8280 = !DILocation(line: 6030, column: 25, scope: !8259)
!8281 = !DILocation(line: 6030, column: 44, scope: !8259)
!8282 = !DILocation(line: 6031, column: 20, scope: !8259)
!8283 = !DILocation(line: 6032, column: 9, scope: !8259)
!8284 = !DILocation(line: 6032, column: 18, scope: !8259)
!8285 = !DILocation(line: 6032, column: 29, scope: !8259)
!8286 = !DILocation(line: 6033, column: 5, scope: !8259)
!8287 = !DILocation(line: 6033, column: 19, scope: !8259)
!8288 = !DILocation(line: 6034, column: 5, scope: !8259)
!8289 = !DILocation(line: 6034, column: 9, scope: !8259)
!8290 = !DILocation(line: 6036, column: 10, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8259, file: !2, line: 6036, column: 9)
!8292 = !DILocation(line: 6036, column: 13, scope: !8291)
!8293 = !DILocation(line: 6036, column: 22, scope: !8291)
!8294 = !DILocation(line: 6036, column: 26, scope: !8291)
!8295 = !DILocation(line: 6036, column: 31, scope: !8291)
!8296 = !DILocation(line: 6036, column: 40, scope: !8291)
!8297 = !DILocation(line: 6036, column: 44, scope: !8291)
!8298 = !DILocation(line: 6036, column: 50, scope: !8291)
!8299 = !DILocation(line: 6036, column: 9, scope: !8259)
!8300 = !DILocation(line: 6037, column: 2, scope: !8291)
!8301 = !DILocation(line: 6038, column: 9, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8259, file: !2, line: 6038, column: 9)
!8303 = !DILocation(line: 6038, column: 13, scope: !8302)
!8304 = !DILocation(line: 6038, column: 9, scope: !8259)
!8305 = !DILocation(line: 6039, column: 2, scope: !8302)
!8306 = !DILocation(line: 6040, column: 10, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8259, file: !2, line: 6040, column: 9)
!8308 = !DILocation(line: 6040, column: 16, scope: !8307)
!8309 = !DILocation(line: 6040, column: 14, scope: !8307)
!8310 = !DILocation(line: 6040, column: 21, scope: !8307)
!8311 = !DILocation(line: 6040, column: 25, scope: !8307)
!8312 = !DILocation(line: 6040, column: 29, scope: !8307)
!8313 = !DILocation(line: 6040, column: 9, scope: !8259)
!8314 = !DILocation(line: 6041, column: 2, scope: !8307)
!8315 = !DILocation(line: 6042, column: 26, scope: !8259)
!8316 = !DILocation(line: 6042, column: 12, scope: !8259)
!8317 = !DILocation(line: 6042, column: 10, scope: !8259)
!8318 = !DILocation(line: 6043, column: 9, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8259, file: !2, line: 6043, column: 9)
!8320 = !DILocation(line: 6043, column: 14, scope: !8319)
!8321 = !DILocation(line: 6043, column: 9, scope: !8259)
!8322 = !DILocation(line: 6044, column: 2, scope: !8319)
!8323 = !DILocation(line: 6045, column: 10, scope: !8275)
!8324 = !DILocation(line: 6045, column: 17, scope: !8275)
!8325 = !DILocation(line: 6045, column: 26, scope: !8275)
!8326 = !DILocation(line: 6045, column: 31, scope: !8275)
!8327 = !DILocation(line: 6045, column: 30, scope: !8275)
!8328 = !DILocation(line: 6045, column: 38, scope: !8275)
!8329 = !DILocation(line: 6045, column: 9, scope: !8259)
!8330 = !DILocation(line: 6046, column: 27, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8275, file: !2, line: 6045, column: 45)
!8332 = !DILocation(line: 6046, column: 17, scope: !8331)
!8333 = !DILocation(line: 6046, column: 2, scope: !8331)
!8334 = !DILocation(line: 6046, column: 8, scope: !8331)
!8335 = !DILocation(line: 6046, column: 15, scope: !8331)
!8336 = !DILocation(line: 6047, column: 5, scope: !8331)
!8337 = !DILocation(line: 6048, column: 2, scope: !8274)
!8338 = !DILocation(line: 6048, column: 6, scope: !8274)
!8339 = !DILocation(line: 6048, column: 12, scope: !8274)
!8340 = !DILocation(line: 6049, column: 2, scope: !8274)
!8341 = !DILocation(line: 6049, column: 11, scope: !8274)
!8342 = !DILocation(line: 6051, column: 25, scope: !8274)
!8343 = !DILocation(line: 6051, column: 9, scope: !8274)
!8344 = !DILocation(line: 6051, column: 7, scope: !8274)
!8345 = !DILocation(line: 6052, column: 25, scope: !8274)
!8346 = !DILocation(line: 6052, column: 9, scope: !8274)
!8347 = !DILocation(line: 6052, column: 7, scope: !8274)
!8348 = !DILocation(line: 6054, column: 20, scope: !8274)
!8349 = !DILocation(line: 6054, column: 36, scope: !8274)
!8350 = !DILocation(line: 6054, column: 43, scope: !8274)
!8351 = !DILocation(line: 6054, column: 41, scope: !8274)
!8352 = !DILocation(line: 6054, column: 48, scope: !8274)
!8353 = !DILocation(line: 6054, column: 6, scope: !8274)
!8354 = !DILocation(line: 6055, column: 6, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8274, file: !2, line: 6055, column: 6)
!8356 = !DILocation(line: 6055, column: 10, scope: !8355)
!8357 = !DILocation(line: 6055, column: 6, scope: !8274)
!8358 = !DILocation(line: 6056, column: 21, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8355, file: !2, line: 6055, column: 19)
!8360 = !DILocation(line: 6056, column: 6, scope: !8359)
!8361 = !DILocation(line: 6057, column: 6, scope: !8359)
!8362 = !DILocation(line: 6059, column: 10, scope: !8274)
!8363 = !DILocation(line: 6059, column: 18, scope: !8274)
!8364 = !DILocation(line: 6059, column: 25, scope: !8274)
!8365 = !DILocation(line: 6059, column: 2, scope: !8274)
!8366 = !DILocation(line: 6060, column: 2, scope: !8274)
!8367 = !DILocation(line: 6060, column: 6, scope: !8274)
!8368 = !DILocation(line: 6060, column: 12, scope: !8274)
!8369 = !DILocation(line: 6061, column: 10, scope: !8274)
!8370 = !DILocation(line: 6061, column: 14, scope: !8274)
!8371 = !DILocation(line: 6061, column: 19, scope: !8274)
!8372 = !DILocation(line: 6061, column: 25, scope: !8274)
!8373 = !DILocation(line: 6061, column: 33, scope: !8274)
!8374 = !DILocation(line: 6061, column: 2, scope: !8274)
!8375 = !DILocation(line: 6062, column: 2, scope: !8274)
!8376 = !DILocation(line: 6062, column: 6, scope: !8274)
!8377 = !DILocation(line: 6062, column: 13, scope: !8274)
!8378 = !DILocation(line: 6062, column: 11, scope: !8274)
!8379 = !DILocation(line: 6062, column: 18, scope: !8274)
!8380 = !DILocation(line: 6062, column: 23, scope: !8274)
!8381 = !DILocation(line: 6064, column: 17, scope: !8274)
!8382 = !DILocation(line: 6064, column: 2, scope: !8274)
!8383 = !DILocation(line: 6064, column: 8, scope: !8274)
!8384 = !DILocation(line: 6064, column: 15, scope: !8274)
!8385 = !DILocation(line: 6065, column: 5, scope: !8275)
!8386 = !DILocation(line: 6066, column: 18, scope: !8259)
!8387 = !DILocation(line: 6066, column: 5, scope: !8259)
!8388 = !DILocation(line: 6066, column: 11, scope: !8259)
!8389 = !DILocation(line: 6066, column: 16, scope: !8259)
!8390 = !DILocation(line: 6067, column: 9, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8259, file: !2, line: 6067, column: 9)
!8392 = !DILocation(line: 6067, column: 13, scope: !8391)
!8393 = !DILocation(line: 6067, column: 9, scope: !8259)
!8394 = !DILocation(line: 6068, column: 2, scope: !8391)
!8395 = !DILocation(line: 6068, column: 8, scope: !8391)
!8396 = !DILocation(line: 6068, column: 12, scope: !8391)
!8397 = !DILocation(line: 6070, column: 14, scope: !8391)
!8398 = !DILocation(line: 6070, column: 2, scope: !8391)
!8399 = !DILocation(line: 6070, column: 8, scope: !8391)
!8400 = !DILocation(line: 6070, column: 12, scope: !8391)
!8401 = !DILocation(line: 6071, column: 17, scope: !8259)
!8402 = !DILocation(line: 6071, column: 5, scope: !8259)
!8403 = !DILocation(line: 6071, column: 11, scope: !8259)
!8404 = !DILocation(line: 6071, column: 15, scope: !8259)
!8405 = !DILocation(line: 6076, column: 32, scope: !8259)
!8406 = !DILocation(line: 6076, column: 15, scope: !8259)
!8407 = !DILocation(line: 6076, column: 13, scope: !8259)
!8408 = !DILocation(line: 6077, column: 33, scope: !8259)
!8409 = !DILocation(line: 6077, column: 5, scope: !8259)
!8410 = !DILocation(line: 6077, column: 9, scope: !8259)
!8411 = !DILocation(line: 6077, column: 18, scope: !8259)
!8412 = !DILocation(line: 6077, column: 27, scope: !8259)
!8413 = !DILocation(line: 6077, column: 31, scope: !8259)
!8414 = !DILocation(line: 6078, column: 33, scope: !8259)
!8415 = !DILocation(line: 6078, column: 5, scope: !8259)
!8416 = !DILocation(line: 6078, column: 9, scope: !8259)
!8417 = !DILocation(line: 6078, column: 18, scope: !8259)
!8418 = !DILocation(line: 6078, column: 27, scope: !8259)
!8419 = !DILocation(line: 6078, column: 31, scope: !8259)
!8420 = !DILocation(line: 6081, column: 9, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8259, file: !2, line: 6081, column: 9)
!8422 = !DILocation(line: 6081, column: 12, scope: !8421)
!8423 = !DILocation(line: 6081, column: 9, scope: !8259)
!8424 = !DILocation(line: 6082, column: 29, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8421, file: !2, line: 6081, column: 21)
!8426 = !DILocation(line: 6082, column: 14, scope: !8425)
!8427 = !DILocation(line: 6082, column: 12, scope: !8425)
!8428 = !DILocation(line: 6083, column: 18, scope: !8425)
!8429 = !DILocation(line: 6083, column: 22, scope: !8425)
!8430 = !DILocation(line: 6083, column: 2, scope: !8425)
!8431 = !DILocation(line: 6084, column: 5, scope: !8425)
!8432 = !DILocation(line: 6085, column: 25, scope: !8259)
!8433 = !DILocation(line: 6085, column: 29, scope: !8259)
!8434 = !DILocation(line: 6085, column: 35, scope: !8259)
!8435 = !DILocation(line: 6085, column: 41, scope: !8259)
!8436 = !DILocation(line: 6085, column: 45, scope: !8259)
!8437 = !DILocation(line: 6085, column: 5, scope: !8259)
!8438 = !DILocation(line: 6086, column: 20, scope: !8259)
!8439 = !DILocation(line: 6086, column: 24, scope: !8259)
!8440 = !DILocation(line: 6086, column: 5, scope: !8259)
!8441 = !DILocation(line: 6087, column: 17, scope: !8259)
!8442 = !DILocation(line: 6087, column: 5, scope: !8259)
!8443 = !DILocation(line: 6087, column: 9, scope: !8259)
!8444 = !DILocation(line: 6087, column: 15, scope: !8259)
!8445 = !DILocation(line: 6089, column: 9, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8259, file: !2, line: 6089, column: 9)
!8447 = !DILocation(line: 6089, column: 12, scope: !8446)
!8448 = !DILocation(line: 6089, column: 9, scope: !8259)
!8449 = !DILocation(line: 6090, column: 7, scope: !8446)
!8450 = !DILocation(line: 6090, column: 11, scope: !8446)
!8451 = !DILocation(line: 6090, column: 5, scope: !8446)
!8452 = !DILocation(line: 6090, column: 2, scope: !8446)
!8453 = !DILocation(line: 6091, column: 9, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8259, file: !2, line: 6091, column: 9)
!8455 = !DILocation(line: 6091, column: 12, scope: !8454)
!8456 = !DILocation(line: 6091, column: 9, scope: !8259)
!8457 = !DILocation(line: 6092, column: 2, scope: !8454)
!8458 = !DILocation(line: 6093, column: 9, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8259, file: !2, line: 6093, column: 9)
!8460 = !DILocation(line: 6093, column: 13, scope: !8459)
!8461 = !DILocation(line: 6093, column: 9, scope: !8259)
!8462 = !DILocation(line: 6094, column: 33, scope: !8459)
!8463 = !DILocation(line: 6094, column: 37, scope: !8459)
!8464 = !DILocation(line: 6094, column: 43, scope: !8459)
!8465 = !DILocation(line: 6094, column: 2, scope: !8459)
!8466 = !DILocation(line: 6095, column: 12, scope: !8259)
!8467 = !DILocation(line: 6095, column: 5, scope: !8259)
!8468 = !DILocation(line: 6096, column: 1, scope: !8259)
!8469 = distinct !DISubprogram(name: "xmlRegGetCounter", scope: !2, file: !2, line: 1284, type: !6785, scopeLine: 1284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !8470)
!8470 = !{!8471, !8472}
!8471 = !DILocalVariable(name: "ctxt", arg: 1, scope: !8469, file: !2, line: 1284, type: !1483)
!8472 = !DILocalVariable(name: "tmp", scope: !8473, file: !2, line: 1295, type: !1425)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !2, line: 1294, column: 55)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !2, line: 1294, column: 16)
!8475 = distinct !DILexicalBlock(scope: !8469, file: !2, line: 1285, column: 9)
!8476 = !DILocation(line: 1284, column: 38, scope: !8469)
!8477 = !DILocation(line: 1285, column: 9, scope: !8475)
!8478 = !DILocation(line: 1285, column: 15, scope: !8475)
!8479 = !{!1724, !1546, i64 88}
!8480 = !DILocation(line: 1285, column: 27, scope: !8475)
!8481 = !DILocation(line: 1285, column: 9, scope: !8469)
!8482 = !DILocation(line: 1286, column: 2, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8475, file: !2, line: 1285, column: 33)
!8484 = !DILocation(line: 1286, column: 8, scope: !8483)
!8485 = !DILocation(line: 1286, column: 20, scope: !8483)
!8486 = !DILocation(line: 1287, column: 37, scope: !8483)
!8487 = !DILocation(line: 1287, column: 47, scope: !8483)
!8488 = !DILocation(line: 1287, column: 53, scope: !8483)
!8489 = !DILocation(line: 1287, column: 65, scope: !8483)
!8490 = !DILocation(line: 1287, column: 2, scope: !8483)
!8491 = !DILocation(line: 1287, column: 8, scope: !8483)
!8492 = !DILocation(line: 1287, column: 17, scope: !8483)
!8493 = !DILocation(line: 1289, column: 6, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8483, file: !2, line: 1289, column: 6)
!8495 = !DILocation(line: 1289, column: 12, scope: !8494)
!8496 = !DILocation(line: 1289, column: 21, scope: !8494)
!8497 = !DILocation(line: 1289, column: 6, scope: !8483)
!8498 = !DILocation(line: 1290, column: 25, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8494, file: !2, line: 1289, column: 30)
!8500 = !DILocation(line: 1290, column: 6, scope: !8499)
!8501 = !DILocation(line: 1291, column: 6, scope: !8499)
!8502 = !DILocation(line: 1291, column: 12, scope: !8499)
!8503 = !DILocation(line: 1291, column: 24, scope: !8499)
!8504 = !DILocation(line: 1292, column: 6, scope: !8499)
!8505 = !DILocation(line: 1294, column: 5, scope: !8483)
!8506 = !DILocation(line: 1294, column: 16, scope: !8474)
!8507 = !DILocation(line: 1294, column: 22, scope: !8474)
!8508 = !DILocation(line: 1294, column: 36, scope: !8474)
!8509 = !DILocation(line: 1294, column: 42, scope: !8474)
!8510 = !DILocation(line: 1294, column: 33, scope: !8474)
!8511 = !DILocation(line: 1294, column: 16, scope: !8475)
!8512 = !DILocation(line: 1295, column: 2, scope: !8473)
!8513 = !DILocation(line: 1295, column: 17, scope: !8473)
!8514 = !DILocation(line: 1296, column: 2, scope: !8473)
!8515 = !DILocation(line: 1296, column: 8, scope: !8473)
!8516 = !DILocation(line: 1296, column: 20, scope: !8473)
!8517 = !DILocation(line: 1297, column: 26, scope: !8473)
!8518 = !DILocation(line: 1297, column: 37, scope: !8473)
!8519 = !DILocation(line: 1297, column: 43, scope: !8473)
!8520 = !DILocation(line: 1297, column: 53, scope: !8473)
!8521 = !DILocation(line: 1297, column: 59, scope: !8473)
!8522 = !DILocation(line: 1297, column: 71, scope: !8473)
!8523 = !DILocation(line: 1297, column: 6, scope: !8473)
!8524 = !DILocation(line: 1299, column: 6, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8473, file: !2, line: 1299, column: 6)
!8526 = !DILocation(line: 1299, column: 10, scope: !8525)
!8527 = !DILocation(line: 1299, column: 6, scope: !8473)
!8528 = !DILocation(line: 1300, column: 25, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8525, file: !2, line: 1299, column: 19)
!8530 = !DILocation(line: 1300, column: 6, scope: !8529)
!8531 = !DILocation(line: 1301, column: 6, scope: !8529)
!8532 = !DILocation(line: 1301, column: 12, scope: !8529)
!8533 = !DILocation(line: 1301, column: 24, scope: !8529)
!8534 = !DILocation(line: 1302, column: 6, scope: !8529)
!8535 = !DILocation(line: 1304, column: 19, scope: !8473)
!8536 = !DILocation(line: 1304, column: 2, scope: !8473)
!8537 = !DILocation(line: 1304, column: 8, scope: !8473)
!8538 = !DILocation(line: 1304, column: 17, scope: !8473)
!8539 = !DILocation(line: 1305, column: 5, scope: !8474)
!8540 = !DILocation(line: 1305, column: 5, scope: !8473)
!8541 = !DILocation(line: 1306, column: 5, scope: !8469)
!8542 = !DILocation(line: 1306, column: 11, scope: !8469)
!8543 = !DILocation(line: 1306, column: 20, scope: !8469)
!8544 = !DILocation(line: 1306, column: 26, scope: !8469)
!8545 = !DILocation(line: 1306, column: 38, scope: !8469)
!8546 = !DILocation(line: 1306, column: 42, scope: !8469)
!8547 = !DILocation(line: 1307, column: 5, scope: !8469)
!8548 = !DILocation(line: 1307, column: 11, scope: !8469)
!8549 = !DILocation(line: 1307, column: 20, scope: !8469)
!8550 = !DILocation(line: 1307, column: 26, scope: !8469)
!8551 = !DILocation(line: 1307, column: 38, scope: !8469)
!8552 = !DILocation(line: 1307, column: 42, scope: !8469)
!8553 = !DILocation(line: 1308, column: 12, scope: !8469)
!8554 = !DILocation(line: 1308, column: 18, scope: !8469)
!8555 = !DILocation(line: 1308, column: 28, scope: !8469)
!8556 = !DILocation(line: 1308, column: 5, scope: !8469)
!8557 = !DILocation(line: 1309, column: 1, scope: !8469)
!8558 = distinct !DISubprogram(name: "xmlRegStateAddTrans", scope: !2, file: !2, line: 1372, type: !8559, scopeLine: 1374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !8561)
!8559 = !DISubroutineType(types: !8560)
!8560 = !{null, !1483, !1358, !1378, !1358, !1306, !1306}
!8561 = !{!8562, !8563, !8564, !8565, !8566, !8567, !8568, !8569, !8573}
!8562 = !DILocalVariable(name: "ctxt", arg: 1, scope: !8558, file: !2, line: 1372, type: !1483)
!8563 = !DILocalVariable(name: "state", arg: 2, scope: !8558, file: !2, line: 1372, type: !1358)
!8564 = !DILocalVariable(name: "atom", arg: 3, scope: !8558, file: !2, line: 1373, type: !1378)
!8565 = !DILocalVariable(name: "target", arg: 4, scope: !8558, file: !2, line: 1373, type: !1358)
!8566 = !DILocalVariable(name: "counter", arg: 5, scope: !8558, file: !2, line: 1374, type: !1306)
!8567 = !DILocalVariable(name: "count", arg: 6, scope: !8558, file: !2, line: 1374, type: !1306)
!8568 = !DILocalVariable(name: "nrtrans", scope: !8558, file: !2, line: 1376, type: !1306)
!8569 = !DILocalVariable(name: "trans", scope: !8570, file: !2, line: 1393, type: !1884)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !2, line: 1392, column: 65)
!8571 = distinct !DILexicalBlock(scope: !8572, file: !2, line: 1392, column: 5)
!8572 = distinct !DILexicalBlock(scope: !8558, file: !2, line: 1392, column: 5)
!8573 = !DILocalVariable(name: "tmp", scope: !8574, file: !2, line: 1416, type: !1373)
!8574 = distinct !DILexicalBlock(scope: !8575, file: !2, line: 1415, column: 51)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !2, line: 1415, column: 16)
!8576 = distinct !DILexicalBlock(scope: !8558, file: !2, line: 1406, column: 9)
!8577 = !DILocation(line: 1372, column: 41, scope: !8558)
!8578 = !DILocation(line: 1372, column: 62, scope: !8558)
!8579 = !DILocation(line: 1373, column: 28, scope: !8558)
!8580 = !DILocation(line: 1373, column: 49, scope: !8558)
!8581 = !DILocation(line: 1374, column: 11, scope: !8558)
!8582 = !DILocation(line: 1374, column: 24, scope: !8558)
!8583 = !DILocation(line: 1376, column: 5, scope: !8558)
!8584 = !DILocation(line: 1376, column: 9, scope: !8558)
!8585 = !DILocation(line: 1378, column: 9, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8558, file: !2, line: 1378, column: 9)
!8587 = !DILocation(line: 1378, column: 15, scope: !8586)
!8588 = !DILocation(line: 1378, column: 9, scope: !8558)
!8589 = !DILocation(line: 1379, column: 2, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8586, file: !2, line: 1378, column: 24)
!8591 = !DILocation(line: 1380, column: 2, scope: !8590)
!8592 = !DILocation(line: 1382, column: 9, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8558, file: !2, line: 1382, column: 9)
!8594 = !DILocation(line: 1382, column: 16, scope: !8593)
!8595 = !DILocation(line: 1382, column: 9, scope: !8558)
!8596 = !DILocation(line: 1383, column: 2, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8593, file: !2, line: 1382, column: 25)
!8598 = !DILocation(line: 1384, column: 2, scope: !8597)
!8599 = !DILocation(line: 1392, column: 20, scope: !8572)
!8600 = !DILocation(line: 1392, column: 27, scope: !8572)
!8601 = !DILocation(line: 1392, column: 35, scope: !8572)
!8602 = !DILocation(line: 1392, column: 18, scope: !8572)
!8603 = !DILocation(line: 1392, column: 10, scope: !8572)
!8604 = !DILocation(line: 1392, column: 40, scope: !8571)
!8605 = !DILocation(line: 1392, column: 48, scope: !8571)
!8606 = !DILocation(line: 1392, column: 5, scope: !8572)
!8607 = !DILocation(line: 1393, column: 2, scope: !8570)
!8608 = !DILocation(line: 1393, column: 17, scope: !8570)
!8609 = !DILocation(line: 1393, column: 27, scope: !8570)
!8610 = !DILocation(line: 1393, column: 34, scope: !8570)
!8611 = !DILocation(line: 1393, column: 40, scope: !8570)
!8612 = !DILocation(line: 1394, column: 7, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8570, file: !2, line: 1394, column: 6)
!8614 = !DILocation(line: 1394, column: 14, scope: !8613)
!8615 = !DILocation(line: 1394, column: 22, scope: !8613)
!8616 = !DILocation(line: 1394, column: 19, scope: !8613)
!8617 = !DILocation(line: 1394, column: 28, scope: !8613)
!8618 = !DILocation(line: 1395, column: 7, scope: !8613)
!8619 = !DILocation(line: 1395, column: 14, scope: !8613)
!8620 = !DILocation(line: 1395, column: 20, scope: !8613)
!8621 = !DILocation(line: 1395, column: 28, scope: !8613)
!8622 = !DILocation(line: 1395, column: 17, scope: !8613)
!8623 = !DILocation(line: 1395, column: 32, scope: !8613)
!8624 = !DILocation(line: 1396, column: 7, scope: !8613)
!8625 = !DILocation(line: 1396, column: 14, scope: !8613)
!8626 = !DILocation(line: 1396, column: 25, scope: !8613)
!8627 = !DILocation(line: 1396, column: 22, scope: !8613)
!8628 = !DILocation(line: 1396, column: 34, scope: !8613)
!8629 = !DILocation(line: 1397, column: 7, scope: !8613)
!8630 = !DILocation(line: 1397, column: 14, scope: !8613)
!8631 = !DILocation(line: 1397, column: 23, scope: !8613)
!8632 = !DILocation(line: 1397, column: 20, scope: !8613)
!8633 = !DILocation(line: 1394, column: 6, scope: !8570)
!8634 = !DILocation(line: 1402, column: 6, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8613, file: !2, line: 1397, column: 31)
!8636 = !DILocation(line: 1404, column: 5, scope: !8571)
!8637 = !DILocation(line: 1404, column: 5, scope: !8570)
!8638 = !DILocation(line: 1392, column: 61, scope: !8571)
!8639 = !DILocation(line: 1392, column: 5, scope: !8571)
!8640 = distinct !{!8640, !8606, !8641, !1794}
!8641 = !DILocation(line: 1404, column: 5, scope: !8572)
!8642 = !DILocation(line: 1406, column: 9, scope: !8576)
!8643 = !DILocation(line: 1406, column: 16, scope: !8576)
!8644 = !{!1985, !1546, i64 20}
!8645 = !DILocation(line: 1406, column: 25, scope: !8576)
!8646 = !DILocation(line: 1406, column: 9, scope: !8558)
!8647 = !DILocation(line: 1407, column: 2, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8576, file: !2, line: 1406, column: 31)
!8649 = !DILocation(line: 1407, column: 9, scope: !8648)
!8650 = !DILocation(line: 1407, column: 18, scope: !8648)
!8651 = !DILocation(line: 1408, column: 33, scope: !8648)
!8652 = !DILocation(line: 1408, column: 43, scope: !8648)
!8653 = !DILocation(line: 1408, column: 50, scope: !8648)
!8654 = !DILocation(line: 1408, column: 59, scope: !8648)
!8655 = !DILocation(line: 1408, column: 2, scope: !8648)
!8656 = !DILocation(line: 1408, column: 9, scope: !8648)
!8657 = !DILocation(line: 1408, column: 15, scope: !8648)
!8658 = !DILocation(line: 1410, column: 6, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8648, file: !2, line: 1410, column: 6)
!8660 = !DILocation(line: 1410, column: 13, scope: !8659)
!8661 = !DILocation(line: 1410, column: 19, scope: !8659)
!8662 = !DILocation(line: 1410, column: 6, scope: !8648)
!8663 = !DILocation(line: 1411, column: 25, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8659, file: !2, line: 1410, column: 28)
!8665 = !DILocation(line: 1411, column: 6, scope: !8664)
!8666 = !DILocation(line: 1412, column: 6, scope: !8664)
!8667 = !DILocation(line: 1412, column: 13, scope: !8664)
!8668 = !DILocation(line: 1412, column: 22, scope: !8664)
!8669 = !DILocation(line: 1413, column: 6, scope: !8664)
!8670 = !DILocation(line: 1415, column: 5, scope: !8648)
!8671 = !DILocation(line: 1415, column: 16, scope: !8575)
!8672 = !DILocation(line: 1415, column: 23, scope: !8575)
!8673 = !DILocation(line: 1415, column: 34, scope: !8575)
!8674 = !DILocation(line: 1415, column: 41, scope: !8575)
!8675 = !DILocation(line: 1415, column: 31, scope: !8575)
!8676 = !DILocation(line: 1415, column: 16, scope: !8576)
!8677 = !DILocation(line: 1416, column: 2, scope: !8574)
!8678 = !DILocation(line: 1416, column: 15, scope: !8574)
!8679 = !DILocation(line: 1417, column: 2, scope: !8574)
!8680 = !DILocation(line: 1417, column: 9, scope: !8574)
!8681 = !DILocation(line: 1417, column: 18, scope: !8574)
!8682 = !DILocation(line: 1418, column: 24, scope: !8574)
!8683 = !DILocation(line: 1418, column: 35, scope: !8574)
!8684 = !DILocation(line: 1418, column: 42, scope: !8574)
!8685 = !DILocation(line: 1418, column: 49, scope: !8574)
!8686 = !DILocation(line: 1418, column: 56, scope: !8574)
!8687 = !DILocation(line: 1418, column: 65, scope: !8574)
!8688 = !DILocation(line: 1418, column: 6, scope: !8574)
!8689 = !DILocation(line: 1420, column: 6, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8574, file: !2, line: 1420, column: 6)
!8691 = !DILocation(line: 1420, column: 10, scope: !8690)
!8692 = !DILocation(line: 1420, column: 6, scope: !8574)
!8693 = !DILocation(line: 1421, column: 25, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8690, file: !2, line: 1420, column: 19)
!8695 = !DILocation(line: 1421, column: 6, scope: !8694)
!8696 = !DILocation(line: 1422, column: 6, scope: !8694)
!8697 = !DILocation(line: 1422, column: 13, scope: !8694)
!8698 = !DILocation(line: 1422, column: 22, scope: !8694)
!8699 = !DILocation(line: 1423, column: 6, scope: !8694)
!8700 = !DILocation(line: 1425, column: 17, scope: !8574)
!8701 = !DILocation(line: 1425, column: 2, scope: !8574)
!8702 = !DILocation(line: 1425, column: 9, scope: !8574)
!8703 = !DILocation(line: 1425, column: 15, scope: !8574)
!8704 = !DILocation(line: 1426, column: 5, scope: !8575)
!8705 = !DILocation(line: 1426, column: 5, scope: !8574)
!8706 = !DILocation(line: 1441, column: 41, scope: !8558)
!8707 = !DILocation(line: 1441, column: 5, scope: !8558)
!8708 = !DILocation(line: 1441, column: 12, scope: !8558)
!8709 = !DILocation(line: 1441, column: 18, scope: !8558)
!8710 = !DILocation(line: 1441, column: 25, scope: !8558)
!8711 = !DILocation(line: 1441, column: 34, scope: !8558)
!8712 = !DILocation(line: 1441, column: 39, scope: !8558)
!8713 = !DILocation(line: 1442, column: 39, scope: !8558)
!8714 = !DILocation(line: 1442, column: 47, scope: !8558)
!8715 = !DILocation(line: 1442, column: 5, scope: !8558)
!8716 = !DILocation(line: 1442, column: 12, scope: !8558)
!8717 = !DILocation(line: 1442, column: 18, scope: !8558)
!8718 = !DILocation(line: 1442, column: 25, scope: !8558)
!8719 = !DILocation(line: 1442, column: 34, scope: !8558)
!8720 = !DILocation(line: 1442, column: 37, scope: !8558)
!8721 = !DILocation(line: 1443, column: 44, scope: !8558)
!8722 = !DILocation(line: 1443, column: 5, scope: !8558)
!8723 = !DILocation(line: 1443, column: 12, scope: !8558)
!8724 = !DILocation(line: 1443, column: 18, scope: !8558)
!8725 = !DILocation(line: 1443, column: 25, scope: !8558)
!8726 = !DILocation(line: 1443, column: 34, scope: !8558)
!8727 = !DILocation(line: 1443, column: 42, scope: !8558)
!8728 = !DILocation(line: 1444, column: 42, scope: !8558)
!8729 = !DILocation(line: 1444, column: 5, scope: !8558)
!8730 = !DILocation(line: 1444, column: 12, scope: !8558)
!8731 = !DILocation(line: 1444, column: 18, scope: !8558)
!8732 = !DILocation(line: 1444, column: 25, scope: !8558)
!8733 = !DILocation(line: 1444, column: 34, scope: !8558)
!8734 = !DILocation(line: 1444, column: 40, scope: !8558)
!8735 = !DILocation(line: 1445, column: 5, scope: !8558)
!8736 = !DILocation(line: 1445, column: 12, scope: !8558)
!8737 = !DILocation(line: 1445, column: 18, scope: !8558)
!8738 = !DILocation(line: 1445, column: 25, scope: !8558)
!8739 = !DILocation(line: 1445, column: 34, scope: !8558)
!8740 = !DILocation(line: 1445, column: 37, scope: !8558)
!8741 = !DILocation(line: 1446, column: 5, scope: !8558)
!8742 = !DILocation(line: 1446, column: 12, scope: !8558)
!8743 = !DILocation(line: 1446, column: 19, scope: !8558)
!8744 = !DILocation(line: 1447, column: 27, scope: !8558)
!8745 = !DILocation(line: 1447, column: 33, scope: !8558)
!8746 = !DILocation(line: 1447, column: 41, scope: !8558)
!8747 = !DILocation(line: 1447, column: 48, scope: !8558)
!8748 = !DILocation(line: 1447, column: 5, scope: !8558)
!8749 = !DILocation(line: 1448, column: 1, scope: !8558)
!8750 = distinct !DISubprogram(name: "xmlRegAtomPush", scope: !2, file: !2, line: 1312, type: !8751, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !8753)
!8751 = !DISubroutineType(types: !8752)
!8752 = !{!1306, !1483, !1378}
!8753 = !{!8754, !8755, !8756}
!8754 = !DILocalVariable(name: "ctxt", arg: 1, scope: !8750, file: !2, line: 1312, type: !1483)
!8755 = !DILocalVariable(name: "atom", arg: 2, scope: !8750, file: !2, line: 1312, type: !1378)
!8756 = !DILocalVariable(name: "tmp", scope: !8757, file: !2, line: 1327, type: !1422)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !2, line: 1326, column: 49)
!8758 = distinct !DILexicalBlock(scope: !8759, file: !2, line: 1326, column: 16)
!8759 = distinct !DILexicalBlock(scope: !8750, file: !2, line: 1317, column: 9)
!8760 = !DILocation(line: 1312, column: 36, scope: !8750)
!8761 = !DILocation(line: 1312, column: 56, scope: !8750)
!8762 = !DILocation(line: 1313, column: 9, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8750, file: !2, line: 1313, column: 9)
!8764 = !DILocation(line: 1313, column: 14, scope: !8763)
!8765 = !DILocation(line: 1313, column: 9, scope: !8750)
!8766 = !DILocation(line: 1314, column: 2, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8763, file: !2, line: 1313, column: 23)
!8768 = !DILocation(line: 1315, column: 2, scope: !8767)
!8769 = !DILocation(line: 1317, column: 9, scope: !8759)
!8770 = !DILocation(line: 1317, column: 15, scope: !8759)
!8771 = !{!1724, !1546, i64 56}
!8772 = !DILocation(line: 1317, column: 24, scope: !8759)
!8773 = !DILocation(line: 1317, column: 9, scope: !8750)
!8774 = !DILocation(line: 1318, column: 2, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8759, file: !2, line: 1317, column: 30)
!8776 = !DILocation(line: 1318, column: 8, scope: !8775)
!8777 = !DILocation(line: 1318, column: 17, scope: !8775)
!8778 = !DILocation(line: 1319, column: 34, scope: !8775)
!8779 = !DILocation(line: 1319, column: 44, scope: !8775)
!8780 = !DILocation(line: 1319, column: 50, scope: !8775)
!8781 = !DILocation(line: 1319, column: 59, scope: !8775)
!8782 = !DILocation(line: 1319, column: 2, scope: !8775)
!8783 = !DILocation(line: 1319, column: 8, scope: !8775)
!8784 = !DILocation(line: 1319, column: 14, scope: !8775)
!8785 = !DILocation(line: 1321, column: 6, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8775, file: !2, line: 1321, column: 6)
!8787 = !DILocation(line: 1321, column: 12, scope: !8786)
!8788 = !DILocation(line: 1321, column: 18, scope: !8786)
!8789 = !DILocation(line: 1321, column: 6, scope: !8775)
!8790 = !DILocation(line: 1322, column: 25, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8786, file: !2, line: 1321, column: 27)
!8792 = !DILocation(line: 1322, column: 6, scope: !8791)
!8793 = !DILocation(line: 1323, column: 6, scope: !8791)
!8794 = !DILocation(line: 1323, column: 12, scope: !8791)
!8795 = !DILocation(line: 1323, column: 21, scope: !8791)
!8796 = !DILocation(line: 1324, column: 6, scope: !8791)
!8797 = !DILocation(line: 1326, column: 5, scope: !8775)
!8798 = !DILocation(line: 1326, column: 16, scope: !8758)
!8799 = !DILocation(line: 1326, column: 22, scope: !8758)
!8800 = !DILocation(line: 1326, column: 33, scope: !8758)
!8801 = !DILocation(line: 1326, column: 39, scope: !8758)
!8802 = !DILocation(line: 1326, column: 30, scope: !8758)
!8803 = !DILocation(line: 1326, column: 16, scope: !8759)
!8804 = !DILocation(line: 1327, column: 2, scope: !8757)
!8805 = !DILocation(line: 1327, column: 17, scope: !8757)
!8806 = !DILocation(line: 1328, column: 2, scope: !8757)
!8807 = !DILocation(line: 1328, column: 8, scope: !8757)
!8808 = !DILocation(line: 1328, column: 17, scope: !8757)
!8809 = !DILocation(line: 1329, column: 26, scope: !8757)
!8810 = !DILocation(line: 1329, column: 37, scope: !8757)
!8811 = !DILocation(line: 1329, column: 43, scope: !8757)
!8812 = !DILocation(line: 1329, column: 50, scope: !8757)
!8813 = !DILocation(line: 1329, column: 56, scope: !8757)
!8814 = !DILocation(line: 1329, column: 65, scope: !8757)
!8815 = !DILocation(line: 1329, column: 6, scope: !8757)
!8816 = !DILocation(line: 1331, column: 6, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8757, file: !2, line: 1331, column: 6)
!8818 = !DILocation(line: 1331, column: 10, scope: !8817)
!8819 = !DILocation(line: 1331, column: 6, scope: !8757)
!8820 = !DILocation(line: 1332, column: 25, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8817, file: !2, line: 1331, column: 19)
!8822 = !DILocation(line: 1332, column: 6, scope: !8821)
!8823 = !DILocation(line: 1333, column: 6, scope: !8821)
!8824 = !DILocation(line: 1333, column: 12, scope: !8821)
!8825 = !DILocation(line: 1333, column: 21, scope: !8821)
!8826 = !DILocation(line: 1334, column: 6, scope: !8821)
!8827 = !DILocation(line: 1336, column: 16, scope: !8757)
!8828 = !DILocation(line: 1336, column: 2, scope: !8757)
!8829 = !DILocation(line: 1336, column: 8, scope: !8757)
!8830 = !DILocation(line: 1336, column: 14, scope: !8757)
!8831 = !DILocation(line: 1337, column: 5, scope: !8758)
!8832 = !DILocation(line: 1337, column: 5, scope: !8757)
!8833 = !DILocation(line: 1338, column: 16, scope: !8750)
!8834 = !DILocation(line: 1338, column: 22, scope: !8750)
!8835 = !DILocation(line: 1338, column: 5, scope: !8750)
!8836 = !DILocation(line: 1338, column: 11, scope: !8750)
!8837 = !DILocation(line: 1338, column: 14, scope: !8750)
!8838 = !DILocation(line: 1339, column: 36, scope: !8750)
!8839 = !DILocation(line: 1339, column: 5, scope: !8750)
!8840 = !DILocation(line: 1339, column: 11, scope: !8750)
!8841 = !DILocation(line: 1339, column: 17, scope: !8750)
!8842 = !DILocation(line: 1339, column: 23, scope: !8750)
!8843 = !DILocation(line: 1339, column: 30, scope: !8750)
!8844 = !DILocation(line: 1339, column: 34, scope: !8750)
!8845 = !DILocation(line: 1340, column: 5, scope: !8750)
!8846 = !DILocation(line: 1341, column: 1, scope: !8750)
!8847 = distinct !DISubprogram(name: "xmlFAGenerateEpsilonTransition", scope: !2, file: !2, line: 1510, type: !8848, scopeLine: 1511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !8850)
!8848 = !DISubroutineType(types: !8849)
!8849 = !{null, !1483, !1358, !1358}
!8850 = !{!8851, !8852, !8853}
!8851 = !DILocalVariable(name: "ctxt", arg: 1, scope: !8847, file: !2, line: 1510, type: !1483)
!8852 = !DILocalVariable(name: "from", arg: 2, scope: !8847, file: !2, line: 1511, type: !1358)
!8853 = !DILocalVariable(name: "to", arg: 3, scope: !8847, file: !2, line: 1511, type: !1358)
!8854 = !DILocation(line: 1510, column: 52, scope: !8847)
!8855 = !DILocation(line: 1511, column: 26, scope: !8847)
!8856 = !DILocation(line: 1511, column: 47, scope: !8847)
!8857 = !DILocation(line: 1512, column: 9, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8847, file: !2, line: 1512, column: 9)
!8859 = !DILocation(line: 1512, column: 12, scope: !8858)
!8860 = !DILocation(line: 1512, column: 9, scope: !8847)
!8861 = !DILocation(line: 1513, column: 22, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8858, file: !2, line: 1512, column: 21)
!8863 = !DILocation(line: 1513, column: 7, scope: !8862)
!8864 = !DILocation(line: 1513, column: 5, scope: !8862)
!8865 = !DILocation(line: 1514, column: 18, scope: !8862)
!8866 = !DILocation(line: 1514, column: 24, scope: !8862)
!8867 = !DILocation(line: 1514, column: 2, scope: !8862)
!8868 = !DILocation(line: 1515, column: 16, scope: !8862)
!8869 = !DILocation(line: 1515, column: 2, scope: !8862)
!8870 = !DILocation(line: 1515, column: 8, scope: !8862)
!8871 = !DILocation(line: 1515, column: 14, scope: !8862)
!8872 = !DILocation(line: 1516, column: 5, scope: !8862)
!8873 = !DILocation(line: 1517, column: 25, scope: !8847)
!8874 = !DILocation(line: 1517, column: 31, scope: !8847)
!8875 = !DILocation(line: 1517, column: 43, scope: !8847)
!8876 = !DILocation(line: 1517, column: 5, scope: !8847)
!8877 = !DILocation(line: 1518, column: 1, scope: !8847)
!8878 = distinct !DISubprogram(name: "xmlAutomataNewCountTrans", scope: !2, file: !2, line: 6116, type: !8879, scopeLine: 6118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !8881)
!8879 = !DISubroutineType(types: !8880)
!8880 = !{!7360, !6588, !7360, !7360, !1445, !1306, !1306, !1335}
!8881 = !{!8882, !8883, !8884, !8885, !8886, !8887, !8888, !8889, !8890}
!8882 = !DILocalVariable(name: "am", arg: 1, scope: !8878, file: !2, line: 6116, type: !6588)
!8883 = !DILocalVariable(name: "from", arg: 2, scope: !8878, file: !2, line: 6116, type: !7360)
!8884 = !DILocalVariable(name: "to", arg: 3, scope: !8878, file: !2, line: 6117, type: !7360)
!8885 = !DILocalVariable(name: "token", arg: 4, scope: !8878, file: !2, line: 6117, type: !1445)
!8886 = !DILocalVariable(name: "min", arg: 5, scope: !8878, file: !2, line: 6118, type: !1306)
!8887 = !DILocalVariable(name: "max", arg: 6, scope: !8878, file: !2, line: 6118, type: !1306)
!8888 = !DILocalVariable(name: "data", arg: 7, scope: !8878, file: !2, line: 6118, type: !1335)
!8889 = !DILocalVariable(name: "atom", scope: !8878, file: !2, line: 6119, type: !1378)
!8890 = !DILocalVariable(name: "counter", scope: !8878, file: !2, line: 6120, type: !1306)
!8891 = !DILocation(line: 6116, column: 41, scope: !8878)
!8892 = !DILocation(line: 6116, column: 65, scope: !8878)
!8893 = !DILocation(line: 6117, column: 25, scope: !8878)
!8894 = !DILocation(line: 6117, column: 44, scope: !8878)
!8895 = !DILocation(line: 6118, column: 9, scope: !8878)
!8896 = !DILocation(line: 6118, column: 18, scope: !8878)
!8897 = !DILocation(line: 6118, column: 29, scope: !8878)
!8898 = !DILocation(line: 6119, column: 5, scope: !8878)
!8899 = !DILocation(line: 6119, column: 19, scope: !8878)
!8900 = !DILocation(line: 6120, column: 5, scope: !8878)
!8901 = !DILocation(line: 6120, column: 9, scope: !8878)
!8902 = !DILocation(line: 6122, column: 10, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8878, file: !2, line: 6122, column: 9)
!8904 = !DILocation(line: 6122, column: 13, scope: !8903)
!8905 = !DILocation(line: 6122, column: 22, scope: !8903)
!8906 = !DILocation(line: 6122, column: 26, scope: !8903)
!8907 = !DILocation(line: 6122, column: 31, scope: !8903)
!8908 = !DILocation(line: 6122, column: 40, scope: !8903)
!8909 = !DILocation(line: 6122, column: 44, scope: !8903)
!8910 = !DILocation(line: 6122, column: 50, scope: !8903)
!8911 = !DILocation(line: 6122, column: 9, scope: !8878)
!8912 = !DILocation(line: 6123, column: 2, scope: !8903)
!8913 = !DILocation(line: 6124, column: 9, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8878, file: !2, line: 6124, column: 9)
!8915 = !DILocation(line: 6124, column: 13, scope: !8914)
!8916 = !DILocation(line: 6124, column: 9, scope: !8878)
!8917 = !DILocation(line: 6125, column: 2, scope: !8914)
!8918 = !DILocation(line: 6126, column: 10, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8878, file: !2, line: 6126, column: 9)
!8920 = !DILocation(line: 6126, column: 16, scope: !8919)
!8921 = !DILocation(line: 6126, column: 14, scope: !8919)
!8922 = !DILocation(line: 6126, column: 21, scope: !8919)
!8923 = !DILocation(line: 6126, column: 25, scope: !8919)
!8924 = !DILocation(line: 6126, column: 29, scope: !8919)
!8925 = !DILocation(line: 6126, column: 9, scope: !8878)
!8926 = !DILocation(line: 6127, column: 2, scope: !8919)
!8927 = !DILocation(line: 6128, column: 26, scope: !8878)
!8928 = !DILocation(line: 6128, column: 12, scope: !8878)
!8929 = !DILocation(line: 6128, column: 10, scope: !8878)
!8930 = !DILocation(line: 6129, column: 9, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8878, file: !2, line: 6129, column: 9)
!8932 = !DILocation(line: 6129, column: 14, scope: !8931)
!8933 = !DILocation(line: 6129, column: 9, scope: !8878)
!8934 = !DILocation(line: 6130, column: 2, scope: !8931)
!8935 = !DILocation(line: 6131, column: 30, scope: !8878)
!8936 = !DILocation(line: 6131, column: 20, scope: !8878)
!8937 = !DILocation(line: 6131, column: 5, scope: !8878)
!8938 = !DILocation(line: 6131, column: 11, scope: !8878)
!8939 = !DILocation(line: 6131, column: 18, scope: !8878)
!8940 = !DILocation(line: 6132, column: 18, scope: !8878)
!8941 = !DILocation(line: 6132, column: 5, scope: !8878)
!8942 = !DILocation(line: 6132, column: 11, scope: !8878)
!8943 = !DILocation(line: 6132, column: 16, scope: !8878)
!8944 = !DILocation(line: 6133, column: 9, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8878, file: !2, line: 6133, column: 9)
!8946 = !DILocation(line: 6133, column: 13, scope: !8945)
!8947 = !DILocation(line: 6133, column: 9, scope: !8878)
!8948 = !DILocation(line: 6134, column: 2, scope: !8945)
!8949 = !DILocation(line: 6134, column: 8, scope: !8945)
!8950 = !DILocation(line: 6134, column: 12, scope: !8945)
!8951 = !DILocation(line: 6136, column: 14, scope: !8945)
!8952 = !DILocation(line: 6136, column: 2, scope: !8945)
!8953 = !DILocation(line: 6136, column: 8, scope: !8945)
!8954 = !DILocation(line: 6136, column: 12, scope: !8945)
!8955 = !DILocation(line: 6137, column: 17, scope: !8878)
!8956 = !DILocation(line: 6137, column: 5, scope: !8878)
!8957 = !DILocation(line: 6137, column: 11, scope: !8878)
!8958 = !DILocation(line: 6137, column: 15, scope: !8878)
!8959 = !DILocation(line: 6142, column: 32, scope: !8878)
!8960 = !DILocation(line: 6142, column: 15, scope: !8878)
!8961 = !DILocation(line: 6142, column: 13, scope: !8878)
!8962 = !DILocation(line: 6143, column: 33, scope: !8878)
!8963 = !DILocation(line: 6143, column: 5, scope: !8878)
!8964 = !DILocation(line: 6143, column: 9, scope: !8878)
!8965 = !DILocation(line: 6143, column: 18, scope: !8878)
!8966 = !DILocation(line: 6143, column: 27, scope: !8878)
!8967 = !DILocation(line: 6143, column: 31, scope: !8878)
!8968 = !DILocation(line: 6144, column: 33, scope: !8878)
!8969 = !DILocation(line: 6144, column: 5, scope: !8878)
!8970 = !DILocation(line: 6144, column: 9, scope: !8878)
!8971 = !DILocation(line: 6144, column: 18, scope: !8878)
!8972 = !DILocation(line: 6144, column: 27, scope: !8878)
!8973 = !DILocation(line: 6144, column: 31, scope: !8878)
!8974 = !DILocation(line: 6147, column: 9, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8878, file: !2, line: 6147, column: 9)
!8976 = !DILocation(line: 6147, column: 12, scope: !8975)
!8977 = !DILocation(line: 6147, column: 9, scope: !8878)
!8978 = !DILocation(line: 6148, column: 29, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8975, file: !2, line: 6147, column: 21)
!8980 = !DILocation(line: 6148, column: 14, scope: !8979)
!8981 = !DILocation(line: 6148, column: 12, scope: !8979)
!8982 = !DILocation(line: 6149, column: 18, scope: !8979)
!8983 = !DILocation(line: 6149, column: 22, scope: !8979)
!8984 = !DILocation(line: 6149, column: 2, scope: !8979)
!8985 = !DILocation(line: 6150, column: 5, scope: !8979)
!8986 = !DILocation(line: 6151, column: 25, scope: !8878)
!8987 = !DILocation(line: 6151, column: 29, scope: !8878)
!8988 = !DILocation(line: 6151, column: 35, scope: !8878)
!8989 = !DILocation(line: 6151, column: 41, scope: !8878)
!8990 = !DILocation(line: 6151, column: 45, scope: !8878)
!8991 = !DILocation(line: 6151, column: 5, scope: !8878)
!8992 = !DILocation(line: 6152, column: 20, scope: !8878)
!8993 = !DILocation(line: 6152, column: 24, scope: !8878)
!8994 = !DILocation(line: 6152, column: 5, scope: !8878)
!8995 = !DILocation(line: 6153, column: 17, scope: !8878)
!8996 = !DILocation(line: 6153, column: 5, scope: !8878)
!8997 = !DILocation(line: 6153, column: 9, scope: !8878)
!8998 = !DILocation(line: 6153, column: 15, scope: !8878)
!8999 = !DILocation(line: 6155, column: 9, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8878, file: !2, line: 6155, column: 9)
!9001 = !DILocation(line: 6155, column: 12, scope: !9000)
!9002 = !DILocation(line: 6155, column: 9, scope: !8878)
!9003 = !DILocation(line: 6156, column: 7, scope: !9000)
!9004 = !DILocation(line: 6156, column: 11, scope: !9000)
!9005 = !DILocation(line: 6156, column: 5, scope: !9000)
!9006 = !DILocation(line: 6156, column: 2, scope: !9000)
!9007 = !DILocation(line: 6157, column: 9, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !8878, file: !2, line: 6157, column: 9)
!9009 = !DILocation(line: 6157, column: 12, scope: !9008)
!9010 = !DILocation(line: 6157, column: 9, scope: !8878)
!9011 = !DILocation(line: 6158, column: 2, scope: !9008)
!9012 = !DILocation(line: 6159, column: 9, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !8878, file: !2, line: 6159, column: 9)
!9014 = !DILocation(line: 6159, column: 13, scope: !9013)
!9015 = !DILocation(line: 6159, column: 9, scope: !8878)
!9016 = !DILocation(line: 6160, column: 33, scope: !9013)
!9017 = !DILocation(line: 6160, column: 37, scope: !9013)
!9018 = !DILocation(line: 6160, column: 43, scope: !9013)
!9019 = !DILocation(line: 6160, column: 2, scope: !9013)
!9020 = !DILocation(line: 6161, column: 12, scope: !8878)
!9021 = !DILocation(line: 6161, column: 5, scope: !8878)
!9022 = !DILocation(line: 6162, column: 1, scope: !8878)
!9023 = distinct !DISubprogram(name: "xmlAutomataNewOnceTrans2", scope: !2, file: !2, line: 6184, type: !8260, scopeLine: 6187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9024)
!9024 = !{!9025, !9026, !9027, !9028, !9029, !9030, !9031, !9032, !9033, !9034, !9035, !9038, !9039}
!9025 = !DILocalVariable(name: "am", arg: 1, scope: !9023, file: !2, line: 6184, type: !6588)
!9026 = !DILocalVariable(name: "from", arg: 2, scope: !9023, file: !2, line: 6184, type: !7360)
!9027 = !DILocalVariable(name: "to", arg: 3, scope: !9023, file: !2, line: 6185, type: !7360)
!9028 = !DILocalVariable(name: "token", arg: 4, scope: !9023, file: !2, line: 6185, type: !1445)
!9029 = !DILocalVariable(name: "token2", arg: 5, scope: !9023, file: !2, line: 6186, type: !1445)
!9030 = !DILocalVariable(name: "min", arg: 6, scope: !9023, file: !2, line: 6187, type: !1306)
!9031 = !DILocalVariable(name: "max", arg: 7, scope: !9023, file: !2, line: 6187, type: !1306)
!9032 = !DILocalVariable(name: "data", arg: 8, scope: !9023, file: !2, line: 6187, type: !1335)
!9033 = !DILocalVariable(name: "atom", scope: !9023, file: !2, line: 6188, type: !1378)
!9034 = !DILocalVariable(name: "counter", scope: !9023, file: !2, line: 6189, type: !1306)
!9035 = !DILocalVariable(name: "lenn", scope: !9036, file: !2, line: 6203, type: !1306)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !2, line: 6202, column: 12)
!9037 = distinct !DILexicalBlock(scope: !9023, file: !2, line: 6200, column: 9)
!9038 = !DILocalVariable(name: "lenp", scope: !9036, file: !2, line: 6203, type: !1306)
!9039 = !DILocalVariable(name: "str", scope: !9036, file: !2, line: 6204, type: !1351)
!9040 = !DILocation(line: 6184, column: 41, scope: !9023)
!9041 = !DILocation(line: 6184, column: 65, scope: !9023)
!9042 = !DILocation(line: 6185, column: 25, scope: !9023)
!9043 = !DILocation(line: 6185, column: 44, scope: !9023)
!9044 = !DILocation(line: 6186, column: 20, scope: !9023)
!9045 = !DILocation(line: 6187, column: 9, scope: !9023)
!9046 = !DILocation(line: 6187, column: 18, scope: !9023)
!9047 = !DILocation(line: 6187, column: 29, scope: !9023)
!9048 = !DILocation(line: 6188, column: 5, scope: !9023)
!9049 = !DILocation(line: 6188, column: 19, scope: !9023)
!9050 = !DILocation(line: 6189, column: 5, scope: !9023)
!9051 = !DILocation(line: 6189, column: 9, scope: !9023)
!9052 = !DILocation(line: 6191, column: 10, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9023, file: !2, line: 6191, column: 9)
!9054 = !DILocation(line: 6191, column: 13, scope: !9053)
!9055 = !DILocation(line: 6191, column: 22, scope: !9053)
!9056 = !DILocation(line: 6191, column: 26, scope: !9053)
!9057 = !DILocation(line: 6191, column: 31, scope: !9053)
!9058 = !DILocation(line: 6191, column: 40, scope: !9053)
!9059 = !DILocation(line: 6191, column: 44, scope: !9053)
!9060 = !DILocation(line: 6191, column: 50, scope: !9053)
!9061 = !DILocation(line: 6191, column: 9, scope: !9023)
!9062 = !DILocation(line: 6192, column: 2, scope: !9053)
!9063 = !DILocation(line: 6193, column: 9, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9023, file: !2, line: 6193, column: 9)
!9065 = !DILocation(line: 6193, column: 13, scope: !9064)
!9066 = !DILocation(line: 6193, column: 9, scope: !9023)
!9067 = !DILocation(line: 6194, column: 2, scope: !9064)
!9068 = !DILocation(line: 6195, column: 9, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9023, file: !2, line: 6195, column: 9)
!9070 = !DILocation(line: 6195, column: 15, scope: !9069)
!9071 = !DILocation(line: 6195, column: 13, scope: !9069)
!9072 = !DILocation(line: 6195, column: 9, scope: !9023)
!9073 = !DILocation(line: 6196, column: 2, scope: !9069)
!9074 = !DILocation(line: 6197, column: 26, scope: !9023)
!9075 = !DILocation(line: 6197, column: 12, scope: !9023)
!9076 = !DILocation(line: 6197, column: 10, scope: !9023)
!9077 = !DILocation(line: 6198, column: 9, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9023, file: !2, line: 6198, column: 9)
!9079 = !DILocation(line: 6198, column: 14, scope: !9078)
!9080 = !DILocation(line: 6198, column: 9, scope: !9023)
!9081 = !DILocation(line: 6199, column: 2, scope: !9078)
!9082 = !DILocation(line: 6200, column: 10, scope: !9037)
!9083 = !DILocation(line: 6200, column: 17, scope: !9037)
!9084 = !DILocation(line: 6200, column: 26, scope: !9037)
!9085 = !DILocation(line: 6200, column: 31, scope: !9037)
!9086 = !DILocation(line: 6200, column: 30, scope: !9037)
!9087 = !DILocation(line: 6200, column: 38, scope: !9037)
!9088 = !DILocation(line: 6200, column: 9, scope: !9023)
!9089 = !DILocation(line: 6201, column: 27, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9037, file: !2, line: 6200, column: 45)
!9091 = !DILocation(line: 6201, column: 17, scope: !9090)
!9092 = !DILocation(line: 6201, column: 2, scope: !9090)
!9093 = !DILocation(line: 6201, column: 8, scope: !9090)
!9094 = !DILocation(line: 6201, column: 15, scope: !9090)
!9095 = !DILocation(line: 6202, column: 5, scope: !9090)
!9096 = !DILocation(line: 6203, column: 2, scope: !9036)
!9097 = !DILocation(line: 6203, column: 6, scope: !9036)
!9098 = !DILocation(line: 6203, column: 12, scope: !9036)
!9099 = !DILocation(line: 6204, column: 2, scope: !9036)
!9100 = !DILocation(line: 6204, column: 11, scope: !9036)
!9101 = !DILocation(line: 6206, column: 25, scope: !9036)
!9102 = !DILocation(line: 6206, column: 9, scope: !9036)
!9103 = !DILocation(line: 6206, column: 7, scope: !9036)
!9104 = !DILocation(line: 6207, column: 25, scope: !9036)
!9105 = !DILocation(line: 6207, column: 9, scope: !9036)
!9106 = !DILocation(line: 6207, column: 7, scope: !9036)
!9107 = !DILocation(line: 6209, column: 20, scope: !9036)
!9108 = !DILocation(line: 6209, column: 36, scope: !9036)
!9109 = !DILocation(line: 6209, column: 43, scope: !9036)
!9110 = !DILocation(line: 6209, column: 41, scope: !9036)
!9111 = !DILocation(line: 6209, column: 48, scope: !9036)
!9112 = !DILocation(line: 6209, column: 6, scope: !9036)
!9113 = !DILocation(line: 6210, column: 6, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9036, file: !2, line: 6210, column: 6)
!9115 = !DILocation(line: 6210, column: 10, scope: !9114)
!9116 = !DILocation(line: 6210, column: 6, scope: !9036)
!9117 = !DILocation(line: 6211, column: 21, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9114, file: !2, line: 6210, column: 19)
!9119 = !DILocation(line: 6211, column: 6, scope: !9118)
!9120 = !DILocation(line: 6212, column: 6, scope: !9118)
!9121 = !DILocation(line: 6214, column: 10, scope: !9036)
!9122 = !DILocation(line: 6214, column: 18, scope: !9036)
!9123 = !DILocation(line: 6214, column: 25, scope: !9036)
!9124 = !DILocation(line: 6214, column: 2, scope: !9036)
!9125 = !DILocation(line: 6215, column: 2, scope: !9036)
!9126 = !DILocation(line: 6215, column: 6, scope: !9036)
!9127 = !DILocation(line: 6215, column: 12, scope: !9036)
!9128 = !DILocation(line: 6216, column: 10, scope: !9036)
!9129 = !DILocation(line: 6216, column: 14, scope: !9036)
!9130 = !DILocation(line: 6216, column: 19, scope: !9036)
!9131 = !DILocation(line: 6216, column: 25, scope: !9036)
!9132 = !DILocation(line: 6216, column: 33, scope: !9036)
!9133 = !DILocation(line: 6216, column: 2, scope: !9036)
!9134 = !DILocation(line: 6217, column: 2, scope: !9036)
!9135 = !DILocation(line: 6217, column: 6, scope: !9036)
!9136 = !DILocation(line: 6217, column: 13, scope: !9036)
!9137 = !DILocation(line: 6217, column: 11, scope: !9036)
!9138 = !DILocation(line: 6217, column: 18, scope: !9036)
!9139 = !DILocation(line: 6217, column: 23, scope: !9036)
!9140 = !DILocation(line: 6219, column: 17, scope: !9036)
!9141 = !DILocation(line: 6219, column: 2, scope: !9036)
!9142 = !DILocation(line: 6219, column: 8, scope: !9036)
!9143 = !DILocation(line: 6219, column: 15, scope: !9036)
!9144 = !DILocation(line: 6220, column: 5, scope: !9037)
!9145 = !DILocation(line: 6221, column: 18, scope: !9023)
!9146 = !DILocation(line: 6221, column: 5, scope: !9023)
!9147 = !DILocation(line: 6221, column: 11, scope: !9023)
!9148 = !DILocation(line: 6221, column: 16, scope: !9023)
!9149 = !DILocation(line: 6222, column: 5, scope: !9023)
!9150 = !DILocation(line: 6222, column: 11, scope: !9023)
!9151 = !DILocation(line: 6222, column: 17, scope: !9023)
!9152 = !DILocation(line: 6223, column: 17, scope: !9023)
!9153 = !DILocation(line: 6223, column: 5, scope: !9023)
!9154 = !DILocation(line: 6223, column: 11, scope: !9023)
!9155 = !DILocation(line: 6223, column: 15, scope: !9023)
!9156 = !DILocation(line: 6224, column: 17, scope: !9023)
!9157 = !DILocation(line: 6224, column: 5, scope: !9023)
!9158 = !DILocation(line: 6224, column: 11, scope: !9023)
!9159 = !DILocation(line: 6224, column: 15, scope: !9023)
!9160 = !DILocation(line: 6228, column: 32, scope: !9023)
!9161 = !DILocation(line: 6228, column: 15, scope: !9023)
!9162 = !DILocation(line: 6228, column: 13, scope: !9023)
!9163 = !DILocation(line: 6229, column: 5, scope: !9023)
!9164 = !DILocation(line: 6229, column: 9, scope: !9023)
!9165 = !DILocation(line: 6229, column: 18, scope: !9023)
!9166 = !DILocation(line: 6229, column: 27, scope: !9023)
!9167 = !DILocation(line: 6229, column: 31, scope: !9023)
!9168 = !DILocation(line: 6230, column: 5, scope: !9023)
!9169 = !DILocation(line: 6230, column: 9, scope: !9023)
!9170 = !DILocation(line: 6230, column: 18, scope: !9023)
!9171 = !DILocation(line: 6230, column: 27, scope: !9023)
!9172 = !DILocation(line: 6230, column: 31, scope: !9023)
!9173 = !DILocation(line: 6233, column: 9, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9023, file: !2, line: 6233, column: 9)
!9175 = !DILocation(line: 6233, column: 12, scope: !9174)
!9176 = !DILocation(line: 6233, column: 9, scope: !9023)
!9177 = !DILocation(line: 6234, column: 22, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9174, file: !2, line: 6233, column: 21)
!9179 = !DILocation(line: 6234, column: 7, scope: !9178)
!9180 = !DILocation(line: 6234, column: 5, scope: !9178)
!9181 = !DILocation(line: 6235, column: 18, scope: !9178)
!9182 = !DILocation(line: 6235, column: 22, scope: !9178)
!9183 = !DILocation(line: 6235, column: 2, scope: !9178)
!9184 = !DILocation(line: 6236, column: 5, scope: !9178)
!9185 = !DILocation(line: 6237, column: 25, scope: !9023)
!9186 = !DILocation(line: 6237, column: 29, scope: !9023)
!9187 = !DILocation(line: 6237, column: 35, scope: !9023)
!9188 = !DILocation(line: 6237, column: 41, scope: !9023)
!9189 = !DILocation(line: 6237, column: 45, scope: !9023)
!9190 = !DILocation(line: 6237, column: 5, scope: !9023)
!9191 = !DILocation(line: 6238, column: 20, scope: !9023)
!9192 = !DILocation(line: 6238, column: 24, scope: !9023)
!9193 = !DILocation(line: 6238, column: 5, scope: !9023)
!9194 = !DILocation(line: 6239, column: 17, scope: !9023)
!9195 = !DILocation(line: 6239, column: 5, scope: !9023)
!9196 = !DILocation(line: 6239, column: 9, scope: !9023)
!9197 = !DILocation(line: 6239, column: 15, scope: !9023)
!9198 = !DILocation(line: 6240, column: 12, scope: !9023)
!9199 = !DILocation(line: 6240, column: 5, scope: !9023)
!9200 = !DILocation(line: 6241, column: 1, scope: !9023)
!9201 = distinct !DISubprogram(name: "xmlAutomataNewOnceTrans", scope: !2, file: !2, line: 6264, type: !8879, scopeLine: 6266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9202)
!9202 = !{!9203, !9204, !9205, !9206, !9207, !9208, !9209, !9210, !9211}
!9203 = !DILocalVariable(name: "am", arg: 1, scope: !9201, file: !2, line: 6264, type: !6588)
!9204 = !DILocalVariable(name: "from", arg: 2, scope: !9201, file: !2, line: 6264, type: !7360)
!9205 = !DILocalVariable(name: "to", arg: 3, scope: !9201, file: !2, line: 6265, type: !7360)
!9206 = !DILocalVariable(name: "token", arg: 4, scope: !9201, file: !2, line: 6265, type: !1445)
!9207 = !DILocalVariable(name: "min", arg: 5, scope: !9201, file: !2, line: 6266, type: !1306)
!9208 = !DILocalVariable(name: "max", arg: 6, scope: !9201, file: !2, line: 6266, type: !1306)
!9209 = !DILocalVariable(name: "data", arg: 7, scope: !9201, file: !2, line: 6266, type: !1335)
!9210 = !DILocalVariable(name: "atom", scope: !9201, file: !2, line: 6267, type: !1378)
!9211 = !DILocalVariable(name: "counter", scope: !9201, file: !2, line: 6268, type: !1306)
!9212 = !DILocation(line: 6264, column: 40, scope: !9201)
!9213 = !DILocation(line: 6264, column: 64, scope: !9201)
!9214 = !DILocation(line: 6265, column: 25, scope: !9201)
!9215 = !DILocation(line: 6265, column: 44, scope: !9201)
!9216 = !DILocation(line: 6266, column: 9, scope: !9201)
!9217 = !DILocation(line: 6266, column: 18, scope: !9201)
!9218 = !DILocation(line: 6266, column: 29, scope: !9201)
!9219 = !DILocation(line: 6267, column: 5, scope: !9201)
!9220 = !DILocation(line: 6267, column: 19, scope: !9201)
!9221 = !DILocation(line: 6268, column: 5, scope: !9201)
!9222 = !DILocation(line: 6268, column: 9, scope: !9201)
!9223 = !DILocation(line: 6270, column: 10, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9201, file: !2, line: 6270, column: 9)
!9225 = !DILocation(line: 6270, column: 13, scope: !9224)
!9226 = !DILocation(line: 6270, column: 22, scope: !9224)
!9227 = !DILocation(line: 6270, column: 26, scope: !9224)
!9228 = !DILocation(line: 6270, column: 31, scope: !9224)
!9229 = !DILocation(line: 6270, column: 40, scope: !9224)
!9230 = !DILocation(line: 6270, column: 44, scope: !9224)
!9231 = !DILocation(line: 6270, column: 50, scope: !9224)
!9232 = !DILocation(line: 6270, column: 9, scope: !9201)
!9233 = !DILocation(line: 6271, column: 2, scope: !9224)
!9234 = !DILocation(line: 6272, column: 9, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9201, file: !2, line: 6272, column: 9)
!9236 = !DILocation(line: 6272, column: 13, scope: !9235)
!9237 = !DILocation(line: 6272, column: 9, scope: !9201)
!9238 = !DILocation(line: 6273, column: 2, scope: !9235)
!9239 = !DILocation(line: 6274, column: 9, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9201, file: !2, line: 6274, column: 9)
!9241 = !DILocation(line: 6274, column: 15, scope: !9240)
!9242 = !DILocation(line: 6274, column: 13, scope: !9240)
!9243 = !DILocation(line: 6274, column: 9, scope: !9201)
!9244 = !DILocation(line: 6275, column: 2, scope: !9240)
!9245 = !DILocation(line: 6276, column: 26, scope: !9201)
!9246 = !DILocation(line: 6276, column: 12, scope: !9201)
!9247 = !DILocation(line: 6276, column: 10, scope: !9201)
!9248 = !DILocation(line: 6277, column: 9, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9201, file: !2, line: 6277, column: 9)
!9250 = !DILocation(line: 6277, column: 14, scope: !9249)
!9251 = !DILocation(line: 6277, column: 9, scope: !9201)
!9252 = !DILocation(line: 6278, column: 2, scope: !9249)
!9253 = !DILocation(line: 6279, column: 30, scope: !9201)
!9254 = !DILocation(line: 6279, column: 20, scope: !9201)
!9255 = !DILocation(line: 6279, column: 5, scope: !9201)
!9256 = !DILocation(line: 6279, column: 11, scope: !9201)
!9257 = !DILocation(line: 6279, column: 18, scope: !9201)
!9258 = !DILocation(line: 6280, column: 18, scope: !9201)
!9259 = !DILocation(line: 6280, column: 5, scope: !9201)
!9260 = !DILocation(line: 6280, column: 11, scope: !9201)
!9261 = !DILocation(line: 6280, column: 16, scope: !9201)
!9262 = !DILocation(line: 6281, column: 5, scope: !9201)
!9263 = !DILocation(line: 6281, column: 11, scope: !9201)
!9264 = !DILocation(line: 6281, column: 17, scope: !9201)
!9265 = !DILocation(line: 6282, column: 17, scope: !9201)
!9266 = !DILocation(line: 6282, column: 5, scope: !9201)
!9267 = !DILocation(line: 6282, column: 11, scope: !9201)
!9268 = !DILocation(line: 6282, column: 15, scope: !9201)
!9269 = !DILocation(line: 6283, column: 17, scope: !9201)
!9270 = !DILocation(line: 6283, column: 5, scope: !9201)
!9271 = !DILocation(line: 6283, column: 11, scope: !9201)
!9272 = !DILocation(line: 6283, column: 15, scope: !9201)
!9273 = !DILocation(line: 6287, column: 32, scope: !9201)
!9274 = !DILocation(line: 6287, column: 15, scope: !9201)
!9275 = !DILocation(line: 6287, column: 13, scope: !9201)
!9276 = !DILocation(line: 6288, column: 5, scope: !9201)
!9277 = !DILocation(line: 6288, column: 9, scope: !9201)
!9278 = !DILocation(line: 6288, column: 18, scope: !9201)
!9279 = !DILocation(line: 6288, column: 27, scope: !9201)
!9280 = !DILocation(line: 6288, column: 31, scope: !9201)
!9281 = !DILocation(line: 6289, column: 5, scope: !9201)
!9282 = !DILocation(line: 6289, column: 9, scope: !9201)
!9283 = !DILocation(line: 6289, column: 18, scope: !9201)
!9284 = !DILocation(line: 6289, column: 27, scope: !9201)
!9285 = !DILocation(line: 6289, column: 31, scope: !9201)
!9286 = !DILocation(line: 6292, column: 9, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9201, file: !2, line: 6292, column: 9)
!9288 = !DILocation(line: 6292, column: 12, scope: !9287)
!9289 = !DILocation(line: 6292, column: 9, scope: !9201)
!9290 = !DILocation(line: 6293, column: 22, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9287, file: !2, line: 6292, column: 21)
!9292 = !DILocation(line: 6293, column: 7, scope: !9291)
!9293 = !DILocation(line: 6293, column: 5, scope: !9291)
!9294 = !DILocation(line: 6294, column: 18, scope: !9291)
!9295 = !DILocation(line: 6294, column: 22, scope: !9291)
!9296 = !DILocation(line: 6294, column: 2, scope: !9291)
!9297 = !DILocation(line: 6295, column: 5, scope: !9291)
!9298 = !DILocation(line: 6296, column: 25, scope: !9201)
!9299 = !DILocation(line: 6296, column: 29, scope: !9201)
!9300 = !DILocation(line: 6296, column: 35, scope: !9201)
!9301 = !DILocation(line: 6296, column: 41, scope: !9201)
!9302 = !DILocation(line: 6296, column: 45, scope: !9201)
!9303 = !DILocation(line: 6296, column: 5, scope: !9201)
!9304 = !DILocation(line: 6297, column: 20, scope: !9201)
!9305 = !DILocation(line: 6297, column: 24, scope: !9201)
!9306 = !DILocation(line: 6297, column: 5, scope: !9201)
!9307 = !DILocation(line: 6298, column: 17, scope: !9201)
!9308 = !DILocation(line: 6298, column: 5, scope: !9201)
!9309 = !DILocation(line: 6298, column: 9, scope: !9201)
!9310 = !DILocation(line: 6298, column: 15, scope: !9201)
!9311 = !DILocation(line: 6299, column: 12, scope: !9201)
!9312 = !DILocation(line: 6299, column: 5, scope: !9201)
!9313 = !DILocation(line: 6300, column: 1, scope: !9201)
!9314 = distinct !DISubprogram(name: "xmlAutomataNewState", scope: !2, file: !2, line: 6311, type: !7358, scopeLine: 6311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9315)
!9315 = !{!9316, !9317}
!9316 = !DILocalVariable(name: "am", arg: 1, scope: !9314, file: !2, line: 6311, type: !6588)
!9317 = !DILocalVariable(name: "to", scope: !9314, file: !2, line: 6312, type: !7360)
!9318 = !DILocation(line: 6311, column: 36, scope: !9314)
!9319 = !DILocation(line: 6312, column: 5, scope: !9314)
!9320 = !DILocation(line: 6312, column: 25, scope: !9314)
!9321 = !DILocation(line: 6314, column: 9, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9314, file: !2, line: 6314, column: 9)
!9323 = !DILocation(line: 6314, column: 12, scope: !9322)
!9324 = !DILocation(line: 6314, column: 9, scope: !9314)
!9325 = !DILocation(line: 6315, column: 2, scope: !9322)
!9326 = !DILocation(line: 6316, column: 25, scope: !9314)
!9327 = !DILocation(line: 6316, column: 10, scope: !9314)
!9328 = !DILocation(line: 6316, column: 8, scope: !9314)
!9329 = !DILocation(line: 6317, column: 21, scope: !9314)
!9330 = !DILocation(line: 6317, column: 25, scope: !9314)
!9331 = !DILocation(line: 6317, column: 5, scope: !9314)
!9332 = !DILocation(line: 6318, column: 12, scope: !9314)
!9333 = !DILocation(line: 6318, column: 5, scope: !9314)
!9334 = !DILocation(line: 6319, column: 1, scope: !9314)
!9335 = distinct !DISubprogram(name: "xmlAutomataNewEpsilon", scope: !2, file: !2, line: 6334, type: !9336, scopeLine: 6335, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9338)
!9336 = !DISubroutineType(types: !9337)
!9337 = !{!7360, !6588, !7360, !7360}
!9338 = !{!9339, !9340, !9341}
!9339 = !DILocalVariable(name: "am", arg: 1, scope: !9335, file: !2, line: 6334, type: !6588)
!9340 = !DILocalVariable(name: "from", arg: 2, scope: !9335, file: !2, line: 6334, type: !7360)
!9341 = !DILocalVariable(name: "to", arg: 3, scope: !9335, file: !2, line: 6335, type: !7360)
!9342 = !DILocation(line: 6334, column: 38, scope: !9335)
!9343 = !DILocation(line: 6334, column: 62, scope: !9335)
!9344 = !DILocation(line: 6335, column: 29, scope: !9335)
!9345 = !DILocation(line: 6336, column: 10, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9335, file: !2, line: 6336, column: 9)
!9347 = !DILocation(line: 6336, column: 13, scope: !9346)
!9348 = !DILocation(line: 6336, column: 22, scope: !9346)
!9349 = !DILocation(line: 6336, column: 26, scope: !9346)
!9350 = !DILocation(line: 6336, column: 31, scope: !9346)
!9351 = !DILocation(line: 6336, column: 9, scope: !9335)
!9352 = !DILocation(line: 6337, column: 2, scope: !9346)
!9353 = !DILocation(line: 6338, column: 36, scope: !9335)
!9354 = !DILocation(line: 6338, column: 40, scope: !9335)
!9355 = !DILocation(line: 6338, column: 46, scope: !9335)
!9356 = !DILocation(line: 6338, column: 5, scope: !9335)
!9357 = !DILocation(line: 6339, column: 9, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9335, file: !2, line: 6339, column: 9)
!9359 = !DILocation(line: 6339, column: 12, scope: !9358)
!9360 = !DILocation(line: 6339, column: 9, scope: !9335)
!9361 = !DILocation(line: 6340, column: 9, scope: !9358)
!9362 = !DILocation(line: 6340, column: 13, scope: !9358)
!9363 = !DILocation(line: 6340, column: 2, scope: !9358)
!9364 = !DILocation(line: 6341, column: 12, scope: !9335)
!9365 = !DILocation(line: 6341, column: 5, scope: !9335)
!9366 = !DILocation(line: 6342, column: 1, scope: !9335)
!9367 = distinct !DISubprogram(name: "xmlAutomataNewAllTrans", scope: !2, file: !2, line: 6359, type: !9368, scopeLine: 6360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9370)
!9368 = !DISubroutineType(types: !9369)
!9369 = !{!7360, !6588, !7360, !7360, !1306}
!9370 = !{!9371, !9372, !9373, !9374}
!9371 = !DILocalVariable(name: "am", arg: 1, scope: !9367, file: !2, line: 6359, type: !6588)
!9372 = !DILocalVariable(name: "from", arg: 2, scope: !9367, file: !2, line: 6359, type: !7360)
!9373 = !DILocalVariable(name: "to", arg: 3, scope: !9367, file: !2, line: 6360, type: !7360)
!9374 = !DILocalVariable(name: "lax", arg: 4, scope: !9367, file: !2, line: 6360, type: !1306)
!9375 = !DILocation(line: 6359, column: 39, scope: !9367)
!9376 = !DILocation(line: 6359, column: 63, scope: !9367)
!9377 = !DILocation(line: 6360, column: 30, scope: !9367)
!9378 = !DILocation(line: 6360, column: 38, scope: !9367)
!9379 = !DILocation(line: 6361, column: 10, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9367, file: !2, line: 6361, column: 9)
!9381 = !DILocation(line: 6361, column: 13, scope: !9380)
!9382 = !DILocation(line: 6361, column: 22, scope: !9380)
!9383 = !DILocation(line: 6361, column: 26, scope: !9380)
!9384 = !DILocation(line: 6361, column: 31, scope: !9380)
!9385 = !DILocation(line: 6361, column: 9, scope: !9367)
!9386 = !DILocation(line: 6362, column: 2, scope: !9380)
!9387 = !DILocation(line: 6363, column: 32, scope: !9367)
!9388 = !DILocation(line: 6363, column: 36, scope: !9367)
!9389 = !DILocation(line: 6363, column: 42, scope: !9367)
!9390 = !DILocation(line: 6363, column: 46, scope: !9367)
!9391 = !DILocation(line: 6363, column: 5, scope: !9367)
!9392 = !DILocation(line: 6364, column: 9, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9367, file: !2, line: 6364, column: 9)
!9394 = !DILocation(line: 6364, column: 12, scope: !9393)
!9395 = !DILocation(line: 6364, column: 9, scope: !9367)
!9396 = !DILocation(line: 6365, column: 9, scope: !9393)
!9397 = !DILocation(line: 6365, column: 13, scope: !9393)
!9398 = !DILocation(line: 6365, column: 2, scope: !9393)
!9399 = !DILocation(line: 6366, column: 12, scope: !9367)
!9400 = !DILocation(line: 6366, column: 5, scope: !9367)
!9401 = !DILocation(line: 6367, column: 1, scope: !9367)
!9402 = distinct !DISubprogram(name: "xmlFAGenerateAllTransition", scope: !2, file: !2, line: 1488, type: !9403, scopeLine: 1490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9405)
!9403 = !DISubroutineType(types: !9404)
!9404 = !{null, !1483, !1358, !1358, !1306}
!9405 = !{!9406, !9407, !9408, !9409}
!9406 = !DILocalVariable(name: "ctxt", arg: 1, scope: !9402, file: !2, line: 1488, type: !1483)
!9407 = !DILocalVariable(name: "from", arg: 2, scope: !9402, file: !2, line: 1489, type: !1358)
!9408 = !DILocalVariable(name: "to", arg: 3, scope: !9402, file: !2, line: 1489, type: !1358)
!9409 = !DILocalVariable(name: "lax", arg: 4, scope: !9402, file: !2, line: 1490, type: !1306)
!9410 = !DILocation(line: 1488, column: 48, scope: !9402)
!9411 = !DILocation(line: 1489, column: 22, scope: !9402)
!9412 = !DILocation(line: 1489, column: 43, scope: !9402)
!9413 = !DILocation(line: 1490, column: 11, scope: !9402)
!9414 = !DILocation(line: 1491, column: 9, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9402, file: !2, line: 1491, column: 9)
!9416 = !DILocation(line: 1491, column: 12, scope: !9415)
!9417 = !DILocation(line: 1491, column: 9, scope: !9402)
!9418 = !DILocation(line: 1492, column: 22, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9415, file: !2, line: 1491, column: 21)
!9420 = !DILocation(line: 1492, column: 7, scope: !9419)
!9421 = !DILocation(line: 1492, column: 5, scope: !9419)
!9422 = !DILocation(line: 1493, column: 18, scope: !9419)
!9423 = !DILocation(line: 1493, column: 24, scope: !9419)
!9424 = !DILocation(line: 1493, column: 2, scope: !9419)
!9425 = !DILocation(line: 1494, column: 16, scope: !9419)
!9426 = !DILocation(line: 1494, column: 2, scope: !9419)
!9427 = !DILocation(line: 1494, column: 8, scope: !9419)
!9428 = !DILocation(line: 1494, column: 14, scope: !9419)
!9429 = !DILocation(line: 1495, column: 5, scope: !9419)
!9430 = !DILocation(line: 1496, column: 9, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9402, file: !2, line: 1496, column: 9)
!9432 = !DILocation(line: 1496, column: 9, scope: !9402)
!9433 = !DILocation(line: 1497, column: 22, scope: !9431)
!9434 = !DILocation(line: 1497, column: 28, scope: !9431)
!9435 = !DILocation(line: 1497, column: 40, scope: !9431)
!9436 = !DILocation(line: 1497, column: 2, scope: !9431)
!9437 = !DILocation(line: 1499, column: 22, scope: !9431)
!9438 = !DILocation(line: 1499, column: 28, scope: !9431)
!9439 = !DILocation(line: 1499, column: 40, scope: !9431)
!9440 = !DILocation(line: 1499, column: 2, scope: !9431)
!9441 = !DILocation(line: 1500, column: 1, scope: !9402)
!9442 = distinct !DISubprogram(name: "xmlAutomataNewCounter", scope: !2, file: !2, line: 6380, type: !9443, scopeLine: 6380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9445)
!9443 = !DISubroutineType(types: !9444)
!9444 = !{!1306, !6588, !1306, !1306}
!9445 = !{!9446, !9447, !9448, !9449}
!9446 = !DILocalVariable(name: "am", arg: 1, scope: !9442, file: !2, line: 6380, type: !6588)
!9447 = !DILocalVariable(name: "min", arg: 2, scope: !9442, file: !2, line: 6380, type: !1306)
!9448 = !DILocalVariable(name: "max", arg: 3, scope: !9442, file: !2, line: 6380, type: !1306)
!9449 = !DILocalVariable(name: "ret", scope: !9442, file: !2, line: 6381, type: !1306)
!9450 = !DILocation(line: 6380, column: 38, scope: !9442)
!9451 = !DILocation(line: 6380, column: 46, scope: !9442)
!9452 = !DILocation(line: 6380, column: 55, scope: !9442)
!9453 = !DILocation(line: 6381, column: 5, scope: !9442)
!9454 = !DILocation(line: 6381, column: 9, scope: !9442)
!9455 = !DILocation(line: 6383, column: 9, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9442, file: !2, line: 6383, column: 9)
!9457 = !DILocation(line: 6383, column: 12, scope: !9456)
!9458 = !DILocation(line: 6383, column: 9, scope: !9442)
!9459 = !DILocation(line: 6384, column: 2, scope: !9456)
!9460 = !DILocation(line: 6386, column: 28, scope: !9442)
!9461 = !DILocation(line: 6386, column: 11, scope: !9442)
!9462 = !DILocation(line: 6386, column: 9, scope: !9442)
!9463 = !DILocation(line: 6387, column: 9, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9442, file: !2, line: 6387, column: 9)
!9465 = !DILocation(line: 6387, column: 13, scope: !9464)
!9466 = !DILocation(line: 6387, column: 9, scope: !9442)
!9467 = !DILocation(line: 6388, column: 2, scope: !9464)
!9468 = !DILocation(line: 6389, column: 29, scope: !9442)
!9469 = !DILocation(line: 6389, column: 5, scope: !9442)
!9470 = !DILocation(line: 6389, column: 9, scope: !9442)
!9471 = !DILocation(line: 6389, column: 18, scope: !9442)
!9472 = !DILocation(line: 6389, column: 23, scope: !9442)
!9473 = !DILocation(line: 6389, column: 27, scope: !9442)
!9474 = !DILocation(line: 6390, column: 29, scope: !9442)
!9475 = !DILocation(line: 6390, column: 5, scope: !9442)
!9476 = !DILocation(line: 6390, column: 9, scope: !9442)
!9477 = !DILocation(line: 6390, column: 18, scope: !9442)
!9478 = !DILocation(line: 6390, column: 23, scope: !9442)
!9479 = !DILocation(line: 6390, column: 27, scope: !9442)
!9480 = !DILocation(line: 6391, column: 12, scope: !9442)
!9481 = !DILocation(line: 6391, column: 5, scope: !9442)
!9482 = !DILocation(line: 6392, column: 1, scope: !9442)
!9483 = distinct !DISubprogram(name: "xmlAutomataNewCountedTrans", scope: !2, file: !2, line: 6408, type: !9368, scopeLine: 6409, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9484)
!9484 = !{!9485, !9486, !9487, !9488}
!9485 = !DILocalVariable(name: "am", arg: 1, scope: !9483, file: !2, line: 6408, type: !6588)
!9486 = !DILocalVariable(name: "from", arg: 2, scope: !9483, file: !2, line: 6408, type: !7360)
!9487 = !DILocalVariable(name: "to", arg: 3, scope: !9483, file: !2, line: 6409, type: !7360)
!9488 = !DILocalVariable(name: "counter", arg: 4, scope: !9483, file: !2, line: 6409, type: !1306)
!9489 = !DILocation(line: 6408, column: 43, scope: !9483)
!9490 = !DILocation(line: 6408, column: 67, scope: !9483)
!9491 = !DILocation(line: 6409, column: 23, scope: !9483)
!9492 = !DILocation(line: 6409, column: 31, scope: !9483)
!9493 = !DILocation(line: 6410, column: 10, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9483, file: !2, line: 6410, column: 9)
!9495 = !DILocation(line: 6410, column: 13, scope: !9494)
!9496 = !DILocation(line: 6410, column: 22, scope: !9494)
!9497 = !DILocation(line: 6410, column: 26, scope: !9494)
!9498 = !DILocation(line: 6410, column: 31, scope: !9494)
!9499 = !DILocation(line: 6410, column: 40, scope: !9494)
!9500 = !DILocation(line: 6410, column: 44, scope: !9494)
!9501 = !DILocation(line: 6410, column: 52, scope: !9494)
!9502 = !DILocation(line: 6410, column: 9, scope: !9483)
!9503 = !DILocation(line: 6411, column: 2, scope: !9494)
!9504 = !DILocation(line: 6412, column: 43, scope: !9483)
!9505 = !DILocation(line: 6412, column: 47, scope: !9483)
!9506 = !DILocation(line: 6412, column: 53, scope: !9483)
!9507 = !DILocation(line: 6412, column: 57, scope: !9483)
!9508 = !DILocation(line: 6412, column: 5, scope: !9483)
!9509 = !DILocation(line: 6413, column: 9, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9483, file: !2, line: 6413, column: 9)
!9511 = !DILocation(line: 6413, column: 12, scope: !9510)
!9512 = !DILocation(line: 6413, column: 9, scope: !9483)
!9513 = !DILocation(line: 6414, column: 9, scope: !9510)
!9514 = !DILocation(line: 6414, column: 13, scope: !9510)
!9515 = !DILocation(line: 6414, column: 2, scope: !9510)
!9516 = !DILocation(line: 6415, column: 12, scope: !9483)
!9517 = !DILocation(line: 6415, column: 5, scope: !9483)
!9518 = !DILocation(line: 6416, column: 1, scope: !9483)
!9519 = distinct !DISubprogram(name: "xmlFAGenerateCountedEpsilonTransition", scope: !2, file: !2, line: 1529, type: !9403, scopeLine: 1530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9520)
!9520 = !{!9521, !9522, !9523, !9524}
!9521 = !DILocalVariable(name: "ctxt", arg: 1, scope: !9519, file: !2, line: 1529, type: !1483)
!9522 = !DILocalVariable(name: "from", arg: 2, scope: !9519, file: !2, line: 1530, type: !1358)
!9523 = !DILocalVariable(name: "to", arg: 3, scope: !9519, file: !2, line: 1530, type: !1358)
!9524 = !DILocalVariable(name: "counter", arg: 4, scope: !9519, file: !2, line: 1530, type: !1306)
!9525 = !DILocation(line: 1529, column: 59, scope: !9519)
!9526 = !DILocation(line: 1530, column: 21, scope: !9519)
!9527 = !DILocation(line: 1530, column: 42, scope: !9519)
!9528 = !DILocation(line: 1530, column: 50, scope: !9519)
!9529 = !DILocation(line: 1531, column: 9, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9519, file: !2, line: 1531, column: 9)
!9531 = !DILocation(line: 1531, column: 12, scope: !9530)
!9532 = !DILocation(line: 1531, column: 9, scope: !9519)
!9533 = !DILocation(line: 1532, column: 22, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9530, file: !2, line: 1531, column: 21)
!9535 = !DILocation(line: 1532, column: 7, scope: !9534)
!9536 = !DILocation(line: 1532, column: 5, scope: !9534)
!9537 = !DILocation(line: 1533, column: 18, scope: !9534)
!9538 = !DILocation(line: 1533, column: 24, scope: !9534)
!9539 = !DILocation(line: 1533, column: 2, scope: !9534)
!9540 = !DILocation(line: 1534, column: 16, scope: !9534)
!9541 = !DILocation(line: 1534, column: 2, scope: !9534)
!9542 = !DILocation(line: 1534, column: 8, scope: !9534)
!9543 = !DILocation(line: 1534, column: 14, scope: !9534)
!9544 = !DILocation(line: 1535, column: 5, scope: !9534)
!9545 = !DILocation(line: 1536, column: 25, scope: !9519)
!9546 = !DILocation(line: 1536, column: 31, scope: !9519)
!9547 = !DILocation(line: 1536, column: 43, scope: !9519)
!9548 = !DILocation(line: 1536, column: 47, scope: !9519)
!9549 = !DILocation(line: 1536, column: 5, scope: !9519)
!9550 = !DILocation(line: 1537, column: 1, scope: !9519)
!9551 = distinct !DISubprogram(name: "xmlAutomataNewCounterTrans", scope: !2, file: !2, line: 6432, type: !9368, scopeLine: 6433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9552)
!9552 = !{!9553, !9554, !9555, !9556}
!9553 = !DILocalVariable(name: "am", arg: 1, scope: !9551, file: !2, line: 6432, type: !6588)
!9554 = !DILocalVariable(name: "from", arg: 2, scope: !9551, file: !2, line: 6432, type: !7360)
!9555 = !DILocalVariable(name: "to", arg: 3, scope: !9551, file: !2, line: 6433, type: !7360)
!9556 = !DILocalVariable(name: "counter", arg: 4, scope: !9551, file: !2, line: 6433, type: !1306)
!9557 = !DILocation(line: 6432, column: 43, scope: !9551)
!9558 = !DILocation(line: 6432, column: 67, scope: !9551)
!9559 = !DILocation(line: 6433, column: 23, scope: !9551)
!9560 = !DILocation(line: 6433, column: 31, scope: !9551)
!9561 = !DILocation(line: 6434, column: 10, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9551, file: !2, line: 6434, column: 9)
!9563 = !DILocation(line: 6434, column: 13, scope: !9562)
!9564 = !DILocation(line: 6434, column: 22, scope: !9562)
!9565 = !DILocation(line: 6434, column: 26, scope: !9562)
!9566 = !DILocation(line: 6434, column: 31, scope: !9562)
!9567 = !DILocation(line: 6434, column: 40, scope: !9562)
!9568 = !DILocation(line: 6434, column: 44, scope: !9562)
!9569 = !DILocation(line: 6434, column: 52, scope: !9562)
!9570 = !DILocation(line: 6434, column: 9, scope: !9551)
!9571 = !DILocation(line: 6435, column: 2, scope: !9562)
!9572 = !DILocation(line: 6436, column: 36, scope: !9551)
!9573 = !DILocation(line: 6436, column: 40, scope: !9551)
!9574 = !DILocation(line: 6436, column: 46, scope: !9551)
!9575 = !DILocation(line: 6436, column: 50, scope: !9551)
!9576 = !DILocation(line: 6436, column: 5, scope: !9551)
!9577 = !DILocation(line: 6437, column: 9, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9551, file: !2, line: 6437, column: 9)
!9579 = !DILocation(line: 6437, column: 12, scope: !9578)
!9580 = !DILocation(line: 6437, column: 9, scope: !9551)
!9581 = !DILocation(line: 6438, column: 9, scope: !9578)
!9582 = !DILocation(line: 6438, column: 13, scope: !9578)
!9583 = !DILocation(line: 6438, column: 2, scope: !9578)
!9584 = !DILocation(line: 6439, column: 12, scope: !9551)
!9585 = !DILocation(line: 6439, column: 5, scope: !9551)
!9586 = !DILocation(line: 6440, column: 1, scope: !9551)
!9587 = distinct !DISubprogram(name: "xmlFAGenerateCountedTransition", scope: !2, file: !2, line: 1548, type: !9403, scopeLine: 1549, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9588)
!9588 = !{!9589, !9590, !9591, !9592}
!9589 = !DILocalVariable(name: "ctxt", arg: 1, scope: !9587, file: !2, line: 1548, type: !1483)
!9590 = !DILocalVariable(name: "from", arg: 2, scope: !9587, file: !2, line: 1549, type: !1358)
!9591 = !DILocalVariable(name: "to", arg: 3, scope: !9587, file: !2, line: 1549, type: !1358)
!9592 = !DILocalVariable(name: "counter", arg: 4, scope: !9587, file: !2, line: 1549, type: !1306)
!9593 = !DILocation(line: 1548, column: 52, scope: !9587)
!9594 = !DILocation(line: 1549, column: 21, scope: !9587)
!9595 = !DILocation(line: 1549, column: 42, scope: !9587)
!9596 = !DILocation(line: 1549, column: 50, scope: !9587)
!9597 = !DILocation(line: 1550, column: 9, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9587, file: !2, line: 1550, column: 9)
!9599 = !DILocation(line: 1550, column: 12, scope: !9598)
!9600 = !DILocation(line: 1550, column: 9, scope: !9587)
!9601 = !DILocation(line: 1551, column: 22, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9598, file: !2, line: 1550, column: 21)
!9603 = !DILocation(line: 1551, column: 7, scope: !9602)
!9604 = !DILocation(line: 1551, column: 5, scope: !9602)
!9605 = !DILocation(line: 1552, column: 18, scope: !9602)
!9606 = !DILocation(line: 1552, column: 24, scope: !9602)
!9607 = !DILocation(line: 1552, column: 2, scope: !9602)
!9608 = !DILocation(line: 1553, column: 16, scope: !9602)
!9609 = !DILocation(line: 1553, column: 2, scope: !9602)
!9610 = !DILocation(line: 1553, column: 8, scope: !9602)
!9611 = !DILocation(line: 1553, column: 14, scope: !9602)
!9612 = !DILocation(line: 1554, column: 5, scope: !9602)
!9613 = !DILocation(line: 1555, column: 25, scope: !9587)
!9614 = !DILocation(line: 1555, column: 31, scope: !9587)
!9615 = !DILocation(line: 1555, column: 43, scope: !9587)
!9616 = !DILocation(line: 1555, column: 51, scope: !9587)
!9617 = !DILocation(line: 1555, column: 5, scope: !9587)
!9618 = !DILocation(line: 1556, column: 1, scope: !9587)
!9619 = distinct !DISubprogram(name: "xmlAutomataCompile", scope: !2, file: !2, line: 6452, type: !9620, scopeLine: 6452, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9622)
!9620 = !DISubroutineType(types: !9621)
!9621 = !{!1345, !6588}
!9622 = !{!9623, !9624}
!9623 = !DILocalVariable(name: "am", arg: 1, scope: !9619, file: !2, line: 6452, type: !6588)
!9624 = !DILocalVariable(name: "ret", scope: !9619, file: !2, line: 6453, type: !1345)
!9625 = !DILocation(line: 6452, column: 35, scope: !9619)
!9626 = !DILocation(line: 6453, column: 5, scope: !9619)
!9627 = !DILocation(line: 6453, column: 18, scope: !9619)
!9628 = !DILocation(line: 6455, column: 10, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9619, file: !2, line: 6455, column: 9)
!9630 = !DILocation(line: 6455, column: 13, scope: !9629)
!9631 = !DILocation(line: 6455, column: 22, scope: !9629)
!9632 = !DILocation(line: 6455, column: 26, scope: !9629)
!9633 = !DILocation(line: 6455, column: 30, scope: !9629)
!9634 = !DILocation(line: 6455, column: 36, scope: !9629)
!9635 = !DILocation(line: 6455, column: 9, scope: !9619)
!9636 = !DILocation(line: 6455, column: 43, scope: !9629)
!9637 = !DILocation(line: 6456, column: 38, scope: !9619)
!9638 = !DILocation(line: 6456, column: 5, scope: !9619)
!9639 = !DILocation(line: 6458, column: 30, scope: !9619)
!9640 = !DILocation(line: 6458, column: 11, scope: !9619)
!9641 = !DILocation(line: 6458, column: 9, scope: !9619)
!9642 = !DILocation(line: 6460, column: 12, scope: !9619)
!9643 = !DILocation(line: 6460, column: 5, scope: !9619)
!9644 = !DILocation(line: 6461, column: 1, scope: !9619)
!9645 = distinct !DISubprogram(name: "xmlAutomataIsDeterminist", scope: !2, file: !2, line: 6472, type: !9646, scopeLine: 6472, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9648)
!9646 = !DISubroutineType(types: !9647)
!9647 = !{!1306, !6588}
!9648 = !{!9649, !9650}
!9649 = !DILocalVariable(name: "am", arg: 1, scope: !9645, file: !2, line: 6472, type: !6588)
!9650 = !DILocalVariable(name: "ret", scope: !9645, file: !2, line: 6473, type: !1306)
!9651 = !DILocation(line: 6472, column: 41, scope: !9645)
!9652 = !DILocation(line: 6473, column: 5, scope: !9645)
!9653 = !DILocation(line: 6473, column: 9, scope: !9645)
!9654 = !DILocation(line: 6475, column: 9, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9645, file: !2, line: 6475, column: 9)
!9656 = !DILocation(line: 6475, column: 12, scope: !9655)
!9657 = !DILocation(line: 6475, column: 9, scope: !9645)
!9658 = !DILocation(line: 6476, column: 2, scope: !9655)
!9659 = !DILocation(line: 6478, column: 36, scope: !9645)
!9660 = !DILocation(line: 6478, column: 11, scope: !9645)
!9661 = !DILocation(line: 6478, column: 9, scope: !9645)
!9662 = !DILocation(line: 6479, column: 12, scope: !9645)
!9663 = !DILocation(line: 6479, column: 5, scope: !9645)
!9664 = !DILocation(line: 6480, column: 1, scope: !9645)
!9665 = !DISubprogram(name: "__xmlRaiseError", scope: !471, file: !471, line: 920, type: !9666, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9666 = !DISubroutineType(types: !9667)
!9667 = !{null, !9668, !9691, !1335, !1335, !1335, !1306, !1306, !9681, !1482, !1306, !1482, !1482, !1482, !1306, !1306, !1482, null}
!9668 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlStructuredErrorFunc", file: !471, line: 858, baseType: !9669)
!9669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9670, size: 64)
!9670 = !DISubroutineType(types: !9671)
!9671 = !{null, !1335, !9672}
!9672 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlErrorPtr", file: !471, line: 77, baseType: !9673)
!9673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9674, size: 64)
!9674 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlError", file: !471, line: 76, baseType: !9675)
!9675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlError", file: !471, line: 78, size: 704, elements: !9676)
!9676 = !{!9677, !9678, !9679, !9680, !9682, !9683, !9684, !9685, !9686, !9687, !9688, !9689, !9690}
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !9675, file: !471, line: 79, baseType: !1306, size: 32)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !9675, file: !471, line: 80, baseType: !1306, size: 32, offset: 32)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9675, file: !471, line: 81, baseType: !1481, size: 64, offset: 64)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !9675, file: !471, line: 82, baseType: !9681, size: 32, offset: 128)
!9681 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlErrorLevel", file: !471, line: 29, baseType: !1242)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !9675, file: !471, line: 83, baseType: !1481, size: 64, offset: 192)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !9675, file: !471, line: 84, baseType: !1306, size: 32, offset: 256)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "str1", scope: !9675, file: !471, line: 85, baseType: !1481, size: 64, offset: 320)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "str2", scope: !9675, file: !471, line: 86, baseType: !1481, size: 64, offset: 384)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "str3", scope: !9675, file: !471, line: 87, baseType: !1481, size: 64, offset: 448)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "int1", scope: !9675, file: !471, line: 88, baseType: !1306, size: 32, offset: 512)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "int2", scope: !9675, file: !471, line: 89, baseType: !1306, size: 32, offset: 544)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "ctxt", scope: !9675, file: !471, line: 90, baseType: !1335, size: 64, offset: 576)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9675, file: !471, line: 91, baseType: !1335, size: 64, offset: 640)
!9691 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlGenericErrorFunc", file: !471, line: 847, baseType: !9692)
!9692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9693, size: 64)
!9693 = !DISubroutineType(types: !9694)
!9694 = !{null, !1335, !1482, null}
!9695 = distinct !DISubprogram(name: "xmlFARegExecSaveInputString", scope: !2, file: !2, line: 3668, type: !9696, scopeLine: 3669, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9698)
!9696 = !DISubroutineType(types: !9697)
!9697 = !{null, !1336, !1445, !1335}
!9698 = !{!9699, !9700, !9701, !9702}
!9699 = !DILocalVariable(name: "exec", arg: 1, scope: !9695, file: !2, line: 3668, type: !1336)
!9700 = !DILocalVariable(name: "value", arg: 2, scope: !9695, file: !2, line: 3668, type: !1445)
!9701 = !DILocalVariable(name: "data", arg: 3, scope: !9695, file: !2, line: 3669, type: !1335)
!9702 = !DILocalVariable(name: "tmp", scope: !9703, file: !2, line: 3683, type: !1469)
!9703 = distinct !DILexicalBlock(scope: !9704, file: !2, line: 3682, column: 63)
!9704 = distinct !DILexicalBlock(scope: !9705, file: !2, line: 3682, column: 16)
!9705 = distinct !DILexicalBlock(scope: !9695, file: !2, line: 3673, column: 9)
!9706 = !DILocation(line: 3668, column: 47, scope: !9695)
!9707 = !DILocation(line: 3668, column: 68, scope: !9695)
!9708 = !DILocation(line: 3669, column: 28, scope: !9695)
!9709 = !DILocation(line: 3673, column: 9, scope: !9705)
!9710 = !DILocation(line: 3673, column: 15, scope: !9705)
!9711 = !DILocation(line: 3673, column: 29, scope: !9705)
!9712 = !DILocation(line: 3673, column: 9, scope: !9695)
!9713 = !DILocation(line: 3674, column: 2, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9705, file: !2, line: 3673, column: 35)
!9715 = !DILocation(line: 3674, column: 8, scope: !9714)
!9716 = !DILocation(line: 3674, column: 22, scope: !9714)
!9717 = !DILocation(line: 3676, column: 6, scope: !9714)
!9718 = !DILocation(line: 3676, column: 16, scope: !9714)
!9719 = !DILocation(line: 3676, column: 22, scope: !9714)
!9720 = !DILocation(line: 3676, column: 36, scope: !9714)
!9721 = !DILocation(line: 3675, column: 2, scope: !9714)
!9722 = !DILocation(line: 3675, column: 8, scope: !9714)
!9723 = !DILocation(line: 3675, column: 19, scope: !9714)
!9724 = !DILocation(line: 3677, column: 6, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9714, file: !2, line: 3677, column: 6)
!9726 = !DILocation(line: 3677, column: 12, scope: !9725)
!9727 = !DILocation(line: 3677, column: 23, scope: !9725)
!9728 = !DILocation(line: 3677, column: 6, scope: !9714)
!9729 = !DILocation(line: 3678, column: 6, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9725, file: !2, line: 3677, column: 32)
!9731 = !DILocation(line: 3679, column: 6, scope: !9730)
!9732 = !DILocation(line: 3679, column: 12, scope: !9730)
!9733 = !DILocation(line: 3679, column: 26, scope: !9730)
!9734 = !DILocation(line: 3680, column: 6, scope: !9730)
!9735 = !DILocation(line: 3682, column: 5, scope: !9714)
!9736 = !DILocation(line: 3682, column: 16, scope: !9704)
!9737 = !DILocation(line: 3682, column: 22, scope: !9704)
!9738 = !DILocation(line: 3682, column: 35, scope: !9704)
!9739 = !DILocation(line: 3682, column: 42, scope: !9704)
!9740 = !DILocation(line: 3682, column: 48, scope: !9704)
!9741 = !DILocation(line: 3682, column: 39, scope: !9704)
!9742 = !DILocation(line: 3682, column: 16, scope: !9705)
!9743 = !DILocation(line: 3683, column: 2, scope: !9703)
!9744 = !DILocation(line: 3683, column: 22, scope: !9703)
!9745 = !DILocation(line: 3685, column: 2, scope: !9703)
!9746 = !DILocation(line: 3685, column: 8, scope: !9703)
!9747 = !DILocation(line: 3685, column: 22, scope: !9703)
!9748 = !DILocation(line: 3686, column: 30, scope: !9703)
!9749 = !DILocation(line: 3686, column: 41, scope: !9703)
!9750 = !DILocation(line: 3686, column: 47, scope: !9703)
!9751 = !DILocation(line: 3687, column: 4, scope: !9703)
!9752 = !DILocation(line: 3687, column: 10, scope: !9703)
!9753 = !DILocation(line: 3687, column: 24, scope: !9703)
!9754 = !DILocation(line: 3686, column: 6, scope: !9703)
!9755 = !DILocation(line: 3688, column: 6, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9703, file: !2, line: 3688, column: 6)
!9757 = !DILocation(line: 3688, column: 10, scope: !9756)
!9758 = !DILocation(line: 3688, column: 6, scope: !9703)
!9759 = !DILocation(line: 3689, column: 6, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9756, file: !2, line: 3688, column: 19)
!9761 = !DILocation(line: 3690, column: 6, scope: !9760)
!9762 = !DILocation(line: 3690, column: 12, scope: !9760)
!9763 = !DILocation(line: 3690, column: 26, scope: !9760)
!9764 = !DILocation(line: 3691, column: 6, scope: !9760)
!9765 = !DILocation(line: 3693, column: 21, scope: !9703)
!9766 = !DILocation(line: 3693, column: 2, scope: !9703)
!9767 = !DILocation(line: 3693, column: 8, scope: !9703)
!9768 = !DILocation(line: 3693, column: 19, scope: !9703)
!9769 = !DILocation(line: 3694, column: 5, scope: !9704)
!9770 = !DILocation(line: 3694, column: 5, scope: !9703)
!9771 = !DILocation(line: 3695, column: 60, scope: !9695)
!9772 = !DILocation(line: 3695, column: 50, scope: !9695)
!9773 = !DILocation(line: 3695, column: 5, scope: !9695)
!9774 = !DILocation(line: 3695, column: 11, scope: !9695)
!9775 = !DILocation(line: 3695, column: 22, scope: !9695)
!9776 = !DILocation(line: 3695, column: 28, scope: !9695)
!9777 = !DILocation(line: 3695, column: 42, scope: !9695)
!9778 = !DILocation(line: 3695, column: 48, scope: !9695)
!9779 = !DILocation(line: 3696, column: 49, scope: !9695)
!9780 = !DILocation(line: 3696, column: 5, scope: !9695)
!9781 = !DILocation(line: 3696, column: 11, scope: !9695)
!9782 = !DILocation(line: 3696, column: 22, scope: !9695)
!9783 = !DILocation(line: 3696, column: 28, scope: !9695)
!9784 = !DILocation(line: 3696, column: 42, scope: !9695)
!9785 = !DILocation(line: 3696, column: 47, scope: !9695)
!9786 = !DILocation(line: 3697, column: 5, scope: !9695)
!9787 = !DILocation(line: 3697, column: 11, scope: !9695)
!9788 = !DILocation(line: 3697, column: 23, scope: !9695)
!9789 = !DILocation(line: 3698, column: 5, scope: !9695)
!9790 = !DILocation(line: 3698, column: 11, scope: !9695)
!9791 = !DILocation(line: 3698, column: 22, scope: !9695)
!9792 = !DILocation(line: 3698, column: 28, scope: !9695)
!9793 = !DILocation(line: 3698, column: 42, scope: !9695)
!9794 = !DILocation(line: 3698, column: 48, scope: !9695)
!9795 = !DILocation(line: 3699, column: 5, scope: !9695)
!9796 = !DILocation(line: 3699, column: 11, scope: !9695)
!9797 = !DILocation(line: 3699, column: 22, scope: !9695)
!9798 = !DILocation(line: 3699, column: 28, scope: !9695)
!9799 = !DILocation(line: 3699, column: 42, scope: !9695)
!9800 = !DILocation(line: 3699, column: 47, scope: !9695)
!9801 = !DILocation(line: 3700, column: 1, scope: !9695)
!9802 = !DISubprogram(name: "xmlStrEqual", scope: !1353, file: !1353, line: 78, type: !9803, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!9803 = !DISubroutineType(types: !9804)
!9804 = !{!1306, !1445, !1445}
!9805 = distinct !DISubprogram(name: "xmlRegStrEqualWildcard", scope: !2, file: !2, line: 3716, type: !9803, scopeLine: 3716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9806)
!9806 = !{!9807, !9808, !9809}
!9807 = !DILocalVariable(name: "expStr", arg: 1, scope: !9805, file: !2, line: 3716, type: !1445)
!9808 = !DILocalVariable(name: "valStr", arg: 2, scope: !9805, file: !2, line: 3716, type: !1445)
!9809 = !DILocalVariable(name: "tmp", scope: !9810, file: !2, line: 3727, type: !1445)
!9810 = distinct !DILexicalBlock(scope: !9811, file: !2, line: 3726, column: 26)
!9811 = distinct !DILexicalBlock(scope: !9812, file: !2, line: 3726, column: 10)
!9812 = distinct !DILexicalBlock(scope: !9813, file: !2, line: 3724, column: 33)
!9813 = distinct !DILexicalBlock(scope: !9814, file: !2, line: 3724, column: 13)
!9814 = distinct !DILexicalBlock(scope: !9805, file: !2, line: 3720, column: 8)
!9815 = !DILocation(line: 3716, column: 39, scope: !9805)
!9816 = !DILocation(line: 3716, column: 62, scope: !9805)
!9817 = !DILocation(line: 3717, column: 9, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9805, file: !2, line: 3717, column: 9)
!9819 = !DILocation(line: 3717, column: 19, scope: !9818)
!9820 = !DILocation(line: 3717, column: 16, scope: !9818)
!9821 = !DILocation(line: 3717, column: 9, scope: !9805)
!9822 = !DILocation(line: 3717, column: 27, scope: !9818)
!9823 = !DILocation(line: 3718, column: 9, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9805, file: !2, line: 3718, column: 9)
!9825 = !DILocation(line: 3718, column: 16, scope: !9824)
!9826 = !DILocation(line: 3718, column: 9, scope: !9805)
!9827 = !DILocation(line: 3718, column: 25, scope: !9824)
!9828 = !DILocation(line: 3719, column: 9, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9805, file: !2, line: 3719, column: 9)
!9830 = !DILocation(line: 3719, column: 16, scope: !9829)
!9831 = !DILocation(line: 3719, column: 9, scope: !9805)
!9832 = !DILocation(line: 3719, column: 25, scope: !9829)
!9833 = !DILocation(line: 3720, column: 5, scope: !9805)
!9834 = !DILocation(line: 3724, column: 14, scope: !9813)
!9835 = !DILocation(line: 3724, column: 13, scope: !9813)
!9836 = !DILocation(line: 3724, column: 25, scope: !9813)
!9837 = !DILocation(line: 3724, column: 24, scope: !9813)
!9838 = !DILocation(line: 3724, column: 21, scope: !9813)
!9839 = !DILocation(line: 3724, column: 13, scope: !9814)
!9840 = !DILocation(line: 3726, column: 11, scope: !9811)
!9841 = !DILocation(line: 3726, column: 10, scope: !9811)
!9842 = !DILocation(line: 3726, column: 18, scope: !9811)
!9843 = !DILocation(line: 3726, column: 10, scope: !9812)
!9844 = !DILocation(line: 3727, column: 10, scope: !9810)
!9845 = !DILocation(line: 3727, column: 25, scope: !9810)
!9846 = !DILocation(line: 3729, column: 9, scope: !9810)
!9847 = !DILocation(line: 3729, column: 7, scope: !9810)
!9848 = !DILocation(line: 3730, column: 12, scope: !9810)
!9849 = !DILocation(line: 3730, column: 10, scope: !9810)
!9850 = !DILocation(line: 3731, column: 12, scope: !9810)
!9851 = !DILocation(line: 3731, column: 10, scope: !9810)
!9852 = !DILocation(line: 3732, column: 6, scope: !9811)
!9853 = !DILocation(line: 3732, column: 6, scope: !9810)
!9854 = !DILocation(line: 3733, column: 12, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9812, file: !2, line: 3733, column: 10)
!9856 = !DILocation(line: 3733, column: 11, scope: !9855)
!9857 = !DILocation(line: 3733, column: 19, scope: !9855)
!9858 = !DILocation(line: 3733, column: 25, scope: !9855)
!9859 = !DILocation(line: 3733, column: 30, scope: !9855)
!9860 = !DILocation(line: 3733, column: 29, scope: !9855)
!9861 = !DILocation(line: 3733, column: 37, scope: !9855)
!9862 = !DILocation(line: 3733, column: 43, scope: !9855)
!9863 = !DILocation(line: 3733, column: 54, scope: !9855)
!9864 = !DILocation(line: 3733, column: 47, scope: !9855)
!9865 = !DILocation(line: 3733, column: 57, scope: !9855)
!9866 = !DILocation(line: 3733, column: 10, scope: !9812)
!9867 = !DILocation(line: 3734, column: 3, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9855, file: !2, line: 3733, column: 66)
!9869 = !DILocation(line: 3735, column: 12, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9871, file: !2, line: 3735, column: 11)
!9871 = distinct !DILexicalBlock(scope: !9868, file: !2, line: 3734, column: 6)
!9872 = !DILocation(line: 3735, column: 11, scope: !9870)
!9873 = !DILocation(line: 3735, column: 19, scope: !9870)
!9874 = !DILocation(line: 3735, column: 11, scope: !9871)
!9875 = !DILocation(line: 3736, column: 4, scope: !9870)
!9876 = !DILocation(line: 3737, column: 13, scope: !9871)
!9877 = !DILocation(line: 3738, column: 3, scope: !9871)
!9878 = !DILocation(line: 3738, column: 13, scope: !9868)
!9879 = !DILocation(line: 3738, column: 12, scope: !9868)
!9880 = !DILocation(line: 3738, column: 20, scope: !9868)
!9881 = distinct !{!9881, !9867, !9882, !1794}
!9882 = !DILocation(line: 3738, column: 24, scope: !9868)
!9883 = !DILocation(line: 3739, column: 3, scope: !9868)
!9884 = !DILocation(line: 3741, column: 3, scope: !9855)
!9885 = !DILocation(line: 3743, column: 8, scope: !9814)
!9886 = !DILocation(line: 3744, column: 8, scope: !9814)
!9887 = !DILocation(line: 3745, column: 5, scope: !9814)
!9888 = !DILocation(line: 3745, column: 15, scope: !9805)
!9889 = !DILocation(line: 3745, column: 14, scope: !9805)
!9890 = !DILocation(line: 3745, column: 22, scope: !9805)
!9891 = distinct !{!9891, !9833, !9892, !1794}
!9892 = !DILocation(line: 3745, column: 26, scope: !9805)
!9893 = !DILocation(line: 3746, column: 10, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9805, file: !2, line: 3746, column: 9)
!9895 = !DILocation(line: 3746, column: 9, scope: !9894)
!9896 = !DILocation(line: 3746, column: 17, scope: !9894)
!9897 = !DILocation(line: 3746, column: 9, scope: !9805)
!9898 = !DILocation(line: 3747, column: 2, scope: !9894)
!9899 = !DILocation(line: 3749, column: 2, scope: !9894)
!9900 = !DILocation(line: 3750, column: 1, scope: !9805)
!9901 = distinct !DISubprogram(name: "xmlFARegExecSave", scope: !2, file: !2, line: 3160, type: !1737, scopeLine: 3160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !9902)
!9902 = !{!9903, !9904, !9908}
!9903 = !DILocalVariable(name: "exec", arg: 1, scope: !9901, file: !2, line: 3160, type: !1336)
!9904 = !DILocalVariable(name: "tmp", scope: !9905, file: !2, line: 3186, type: !1454)
!9905 = distinct !DILexicalBlock(scope: !9906, file: !2, line: 3185, column: 57)
!9906 = distinct !DILexicalBlock(scope: !9907, file: !2, line: 3185, column: 16)
!9907 = distinct !DILexicalBlock(scope: !9901, file: !2, line: 3174, column: 9)
!9908 = !DILocalVariable(name: "len", scope: !9905, file: !2, line: 3187, type: !1306)
!9909 = !DILocation(line: 3160, column: 36, scope: !9901)
!9910 = !DILocation(line: 3168, column: 9, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9901, file: !2, line: 3168, column: 9)
!9912 = !DILocation(line: 3168, column: 15, scope: !9911)
!9913 = !DILocation(line: 3168, column: 22, scope: !9911)
!9914 = !DILocation(line: 3168, column: 9, scope: !9901)
!9915 = !DILocation(line: 3169, column: 9, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9911, file: !2, line: 3168, column: 34)
!9917 = !DILocation(line: 3171, column: 5, scope: !9901)
!9918 = !DILocation(line: 3171, column: 11, scope: !9901)
!9919 = !DILocation(line: 3171, column: 17, scope: !9901)
!9920 = !DILocation(line: 3174, column: 9, scope: !9907)
!9921 = !DILocation(line: 3174, column: 15, scope: !9907)
!9922 = !DILocation(line: 3174, column: 28, scope: !9907)
!9923 = !DILocation(line: 3174, column: 9, scope: !9901)
!9924 = !DILocation(line: 3175, column: 2, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9907, file: !2, line: 3174, column: 34)
!9926 = !DILocation(line: 3175, column: 8, scope: !9925)
!9927 = !DILocation(line: 3175, column: 21, scope: !9925)
!9928 = !DILocation(line: 3176, column: 43, scope: !9925)
!9929 = !DILocation(line: 3176, column: 53, scope: !9925)
!9930 = !DILocation(line: 3176, column: 59, scope: !9925)
!9931 = !DILocation(line: 3176, column: 72, scope: !9925)
!9932 = !DILocation(line: 3176, column: 2, scope: !9925)
!9933 = !DILocation(line: 3176, column: 8, scope: !9925)
!9934 = !DILocation(line: 3176, column: 18, scope: !9925)
!9935 = !DILocation(line: 3178, column: 6, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9925, file: !2, line: 3178, column: 6)
!9937 = !DILocation(line: 3178, column: 12, scope: !9936)
!9938 = !DILocation(line: 3178, column: 22, scope: !9936)
!9939 = !DILocation(line: 3178, column: 6, scope: !9925)
!9940 = !DILocation(line: 3179, column: 6, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9936, file: !2, line: 3178, column: 31)
!9942 = !DILocation(line: 3180, column: 6, scope: !9941)
!9943 = !DILocation(line: 3180, column: 12, scope: !9941)
!9944 = !DILocation(line: 3180, column: 25, scope: !9941)
!9945 = !DILocation(line: 3181, column: 6, scope: !9941)
!9946 = !DILocation(line: 3183, column: 9, scope: !9925)
!9947 = !DILocation(line: 3183, column: 15, scope: !9925)
!9948 = !DILocation(line: 3184, column: 9, scope: !9925)
!9949 = !DILocation(line: 3184, column: 15, scope: !9925)
!9950 = !DILocation(line: 3184, column: 28, scope: !9925)
!9951 = !DILocation(line: 3183, column: 2, scope: !9925)
!9952 = !DILocation(line: 3185, column: 5, scope: !9925)
!9953 = !DILocation(line: 3185, column: 16, scope: !9906)
!9954 = !DILocation(line: 3185, column: 22, scope: !9906)
!9955 = !DILocation(line: 3185, column: 37, scope: !9906)
!9956 = !DILocation(line: 3185, column: 43, scope: !9906)
!9957 = !DILocation(line: 3185, column: 34, scope: !9906)
!9958 = !DILocation(line: 3185, column: 16, scope: !9907)
!9959 = !DILocation(line: 3186, column: 2, scope: !9905)
!9960 = !DILocation(line: 3186, column: 22, scope: !9905)
!9961 = !DILocation(line: 3187, column: 2, scope: !9905)
!9962 = !DILocation(line: 3187, column: 6, scope: !9905)
!9963 = !DILocation(line: 3187, column: 12, scope: !9905)
!9964 = !DILocation(line: 3187, column: 18, scope: !9905)
!9965 = !DILocation(line: 3189, column: 2, scope: !9905)
!9966 = !DILocation(line: 3189, column: 8, scope: !9905)
!9967 = !DILocation(line: 3189, column: 21, scope: !9905)
!9968 = !DILocation(line: 3190, column: 31, scope: !9905)
!9969 = !DILocation(line: 3190, column: 42, scope: !9905)
!9970 = !DILocation(line: 3190, column: 48, scope: !9905)
!9971 = !DILocation(line: 3191, column: 4, scope: !9905)
!9972 = !DILocation(line: 3191, column: 10, scope: !9905)
!9973 = !DILocation(line: 3191, column: 23, scope: !9905)
!9974 = !DILocation(line: 3190, column: 6, scope: !9905)
!9975 = !DILocation(line: 3192, column: 6, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9905, file: !2, line: 3192, column: 6)
!9977 = !DILocation(line: 3192, column: 10, scope: !9976)
!9978 = !DILocation(line: 3192, column: 6, scope: !9905)
!9979 = !DILocation(line: 3193, column: 6, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9976, file: !2, line: 3192, column: 19)
!9981 = !DILocation(line: 3194, column: 6, scope: !9980)
!9982 = !DILocation(line: 3194, column: 12, scope: !9980)
!9983 = !DILocation(line: 3194, column: 25, scope: !9980)
!9984 = !DILocation(line: 3195, column: 6, scope: !9980)
!9985 = !DILocation(line: 3197, column: 20, scope: !9905)
!9986 = !DILocation(line: 3197, column: 2, scope: !9905)
!9987 = !DILocation(line: 3197, column: 8, scope: !9905)
!9988 = !DILocation(line: 3197, column: 18, scope: !9905)
!9989 = !DILocation(line: 3198, column: 9, scope: !9905)
!9990 = !DILocation(line: 3198, column: 15, scope: !9905)
!9991 = !DILocation(line: 3198, column: 25, scope: !9905)
!9992 = !DILocation(line: 3198, column: 6, scope: !9905)
!9993 = !DILocation(line: 3199, column: 9, scope: !9905)
!9994 = !DILocation(line: 3199, column: 18, scope: !9905)
!9995 = !DILocation(line: 3199, column: 24, scope: !9905)
!9996 = !DILocation(line: 3199, column: 39, scope: !9905)
!9997 = !DILocation(line: 3199, column: 37, scope: !9905)
!9998 = !DILocation(line: 3199, column: 17, scope: !9905)
!9999 = !DILocation(line: 3199, column: 44, scope: !9905)
!10000 = !DILocation(line: 3199, column: 2, scope: !9905)
!10001 = !DILocation(line: 3200, column: 5, scope: !9906)
!10002 = !DILocation(line: 3200, column: 5, scope: !9905)
!10003 = !DILocation(line: 3201, column: 48, scope: !9901)
!10004 = !DILocation(line: 3201, column: 54, scope: !9901)
!10005 = !DILocation(line: 3201, column: 5, scope: !9901)
!10006 = !DILocation(line: 3201, column: 11, scope: !9901)
!10007 = !DILocation(line: 3201, column: 21, scope: !9901)
!10008 = !DILocation(line: 3201, column: 27, scope: !9901)
!10009 = !DILocation(line: 3201, column: 40, scope: !9901)
!10010 = !DILocation(line: 3201, column: 46, scope: !9901)
!10011 = !{!1781, !1528, i64 0}
!10012 = !DILocation(line: 3202, column: 48, scope: !9901)
!10013 = !DILocation(line: 3202, column: 54, scope: !9901)
!10014 = !DILocation(line: 3202, column: 5, scope: !9901)
!10015 = !DILocation(line: 3202, column: 11, scope: !9901)
!10016 = !DILocation(line: 3202, column: 21, scope: !9901)
!10017 = !DILocation(line: 3202, column: 27, scope: !9901)
!10018 = !DILocation(line: 3202, column: 40, scope: !9901)
!10019 = !DILocation(line: 3202, column: 46, scope: !9901)
!10020 = !{!1781, !1546, i64 8}
!10021 = !DILocation(line: 3203, column: 53, scope: !9901)
!10022 = !DILocation(line: 3203, column: 59, scope: !9901)
!10023 = !DILocation(line: 3203, column: 67, scope: !9901)
!10024 = !DILocation(line: 3203, column: 5, scope: !9901)
!10025 = !DILocation(line: 3203, column: 11, scope: !9901)
!10026 = !DILocation(line: 3203, column: 21, scope: !9901)
!10027 = !DILocation(line: 3203, column: 27, scope: !9901)
!10028 = !DILocation(line: 3203, column: 40, scope: !9901)
!10029 = !DILocation(line: 3203, column: 51, scope: !9901)
!10030 = !{!1781, !1546, i64 12}
!10031 = !DILocation(line: 3204, column: 9, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !9901, file: !2, line: 3204, column: 9)
!10033 = !DILocation(line: 3204, column: 15, scope: !10032)
!10034 = !DILocation(line: 3204, column: 21, scope: !10032)
!10035 = !DILocation(line: 3204, column: 32, scope: !10032)
!10036 = !DILocation(line: 3204, column: 9, scope: !9901)
!10037 = !DILocation(line: 3205, column: 6, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10039, file: !2, line: 3205, column: 6)
!10039 = distinct !DILexicalBlock(scope: !10032, file: !2, line: 3204, column: 37)
!10040 = !DILocation(line: 3205, column: 12, scope: !10038)
!10041 = !DILocation(line: 3205, column: 22, scope: !10038)
!10042 = !DILocation(line: 3205, column: 28, scope: !10038)
!10043 = !DILocation(line: 3205, column: 41, scope: !10038)
!10044 = !DILocation(line: 3205, column: 48, scope: !10038)
!10045 = !DILocation(line: 3205, column: 6, scope: !10039)
!10046 = !DILocation(line: 3207, column: 3, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10038, file: !2, line: 3205, column: 57)
!10048 = !DILocation(line: 3207, column: 13, scope: !10047)
!10049 = !DILocation(line: 3207, column: 19, scope: !10047)
!10050 = !DILocation(line: 3207, column: 25, scope: !10047)
!10051 = !DILocation(line: 3207, column: 36, scope: !10047)
!10052 = !DILocation(line: 3206, column: 6, scope: !10047)
!10053 = !DILocation(line: 3206, column: 12, scope: !10047)
!10054 = !DILocation(line: 3206, column: 22, scope: !10047)
!10055 = !DILocation(line: 3206, column: 28, scope: !10047)
!10056 = !DILocation(line: 3206, column: 41, scope: !10047)
!10057 = !DILocation(line: 3206, column: 48, scope: !10047)
!10058 = !DILocation(line: 3208, column: 10, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10047, file: !2, line: 3208, column: 10)
!10060 = !DILocation(line: 3208, column: 16, scope: !10059)
!10061 = !DILocation(line: 3208, column: 26, scope: !10059)
!10062 = !DILocation(line: 3208, column: 32, scope: !10059)
!10063 = !DILocation(line: 3208, column: 45, scope: !10059)
!10064 = !DILocation(line: 3208, column: 52, scope: !10059)
!10065 = !DILocation(line: 3208, column: 10, scope: !10047)
!10066 = !DILocation(line: 3209, column: 3, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10059, file: !2, line: 3208, column: 61)
!10068 = !DILocation(line: 3210, column: 3, scope: !10067)
!10069 = !DILocation(line: 3210, column: 9, scope: !10067)
!10070 = !DILocation(line: 3210, column: 16, scope: !10067)
!10071 = !DILocation(line: 3211, column: 3, scope: !10067)
!10072 = !DILocation(line: 3213, column: 2, scope: !10047)
!10073 = !DILocation(line: 3214, column: 9, scope: !10039)
!10074 = !DILocation(line: 3214, column: 15, scope: !10039)
!10075 = !DILocation(line: 3214, column: 25, scope: !10039)
!10076 = !DILocation(line: 3214, column: 31, scope: !10039)
!10077 = !DILocation(line: 3214, column: 44, scope: !10039)
!10078 = !DILocation(line: 3214, column: 52, scope: !10039)
!10079 = !DILocation(line: 3214, column: 58, scope: !10039)
!10080 = !DILocation(line: 3215, column: 9, scope: !10039)
!10081 = !DILocation(line: 3215, column: 15, scope: !10039)
!10082 = !DILocation(line: 3215, column: 21, scope: !10039)
!10083 = !DILocation(line: 3215, column: 32, scope: !10039)
!10084 = !DILocation(line: 3214, column: 2, scope: !10039)
!10085 = !DILocation(line: 3216, column: 5, scope: !10039)
!10086 = !DILocation(line: 3217, column: 5, scope: !9901)
!10087 = !DILocation(line: 3217, column: 11, scope: !9901)
!10088 = !DILocation(line: 3217, column: 22, scope: !9901)
!10089 = !DILocation(line: 3218, column: 1, scope: !9901)
!10090 = distinct !DISubprogram(name: "xmlFARegExecRollBack", scope: !2, file: !2, line: 3221, type: !1737, scopeLine: 3221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !10091)
!10091 = !{!10092}
!10092 = !DILocalVariable(name: "exec", arg: 1, scope: !10090, file: !2, line: 3221, type: !1336)
!10093 = !DILocation(line: 3221, column: 40, scope: !10090)
!10094 = !DILocation(line: 3222, column: 9, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10090, file: !2, line: 3222, column: 9)
!10096 = !DILocation(line: 3222, column: 15, scope: !10095)
!10097 = !DILocation(line: 3222, column: 27, scope: !10095)
!10098 = !DILocation(line: 3222, column: 9, scope: !10090)
!10099 = !DILocation(line: 3223, column: 2, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10095, file: !2, line: 3222, column: 33)
!10101 = !DILocation(line: 3223, column: 8, scope: !10100)
!10102 = !DILocation(line: 3223, column: 15, scope: !10100)
!10103 = !DILocation(line: 3227, column: 2, scope: !10100)
!10104 = !DILocation(line: 3229, column: 5, scope: !10090)
!10105 = !DILocation(line: 3229, column: 11, scope: !10090)
!10106 = !DILocation(line: 3229, column: 22, scope: !10090)
!10107 = !DILocation(line: 3230, column: 19, scope: !10090)
!10108 = !DILocation(line: 3230, column: 25, scope: !10090)
!10109 = !DILocation(line: 3230, column: 35, scope: !10090)
!10110 = !DILocation(line: 3230, column: 41, scope: !10090)
!10111 = !DILocation(line: 3230, column: 54, scope: !10090)
!10112 = !DILocation(line: 3230, column: 5, scope: !10090)
!10113 = !DILocation(line: 3230, column: 11, scope: !10090)
!10114 = !DILocation(line: 3230, column: 17, scope: !10090)
!10115 = !DILocation(line: 3231, column: 19, scope: !10090)
!10116 = !DILocation(line: 3231, column: 25, scope: !10090)
!10117 = !DILocation(line: 3231, column: 35, scope: !10090)
!10118 = !DILocation(line: 3231, column: 41, scope: !10090)
!10119 = !DILocation(line: 3231, column: 54, scope: !10090)
!10120 = !DILocation(line: 3231, column: 5, scope: !10090)
!10121 = !DILocation(line: 3231, column: 11, scope: !10090)
!10122 = !DILocation(line: 3231, column: 17, scope: !10090)
!10123 = !DILocation(line: 3232, column: 21, scope: !10090)
!10124 = !DILocation(line: 3232, column: 27, scope: !10090)
!10125 = !DILocation(line: 3232, column: 37, scope: !10090)
!10126 = !DILocation(line: 3232, column: 43, scope: !10090)
!10127 = !DILocation(line: 3232, column: 56, scope: !10090)
!10128 = !DILocation(line: 3232, column: 5, scope: !10090)
!10129 = !DILocation(line: 3232, column: 11, scope: !10090)
!10130 = !DILocation(line: 3232, column: 19, scope: !10090)
!10131 = !DILocation(line: 3233, column: 9, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10090, file: !2, line: 3233, column: 9)
!10133 = !DILocation(line: 3233, column: 15, scope: !10132)
!10134 = !DILocation(line: 3233, column: 21, scope: !10132)
!10135 = !DILocation(line: 3233, column: 32, scope: !10132)
!10136 = !DILocation(line: 3233, column: 9, scope: !10090)
!10137 = !DILocation(line: 3234, column: 6, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10139, file: !2, line: 3234, column: 6)
!10139 = distinct !DILexicalBlock(scope: !10132, file: !2, line: 3233, column: 37)
!10140 = !DILocation(line: 3234, column: 12, scope: !10138)
!10141 = !DILocation(line: 3234, column: 22, scope: !10138)
!10142 = !DILocation(line: 3234, column: 28, scope: !10138)
!10143 = !DILocation(line: 3234, column: 41, scope: !10138)
!10144 = !DILocation(line: 3234, column: 48, scope: !10138)
!10145 = !DILocation(line: 3234, column: 6, scope: !10139)
!10146 = !DILocation(line: 3235, column: 14, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10138, file: !2, line: 3234, column: 57)
!10148 = !DILocation(line: 3235, column: 6, scope: !10147)
!10149 = !DILocation(line: 3236, column: 6, scope: !10147)
!10150 = !DILocation(line: 3236, column: 12, scope: !10147)
!10151 = !DILocation(line: 3236, column: 19, scope: !10147)
!10152 = !DILocation(line: 3237, column: 6, scope: !10147)
!10153 = !DILocation(line: 3239, column: 6, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10139, file: !2, line: 3239, column: 6)
!10155 = !DILocation(line: 3239, column: 12, scope: !10154)
!10156 = !DILocation(line: 3239, column: 6, scope: !10139)
!10157 = !DILocation(line: 3240, column: 13, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10154, file: !2, line: 3239, column: 20)
!10159 = !DILocation(line: 3240, column: 19, scope: !10158)
!10160 = !DILocation(line: 3240, column: 27, scope: !10158)
!10161 = !DILocation(line: 3240, column: 33, scope: !10158)
!10162 = !DILocation(line: 3240, column: 43, scope: !10158)
!10163 = !DILocation(line: 3240, column: 49, scope: !10158)
!10164 = !DILocation(line: 3240, column: 62, scope: !10158)
!10165 = !DILocation(line: 3241, column: 9, scope: !10158)
!10166 = !DILocation(line: 3241, column: 15, scope: !10158)
!10167 = !DILocation(line: 3241, column: 21, scope: !10158)
!10168 = !DILocation(line: 3241, column: 32, scope: !10158)
!10169 = !DILocation(line: 3240, column: 6, scope: !10158)
!10170 = !DILocation(line: 3242, column: 2, scope: !10158)
!10171 = !DILocation(line: 3243, column: 5, scope: !10139)
!10172 = !DILocation(line: 3249, column: 1, scope: !10090)
!10173 = !DISubprogram(name: "__xmlGenericError", scope: !10174, file: !10174, line: 332, type: !10175, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10174 = !DIFile(filename: "./include/libxml/globals.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "7f015ed635e5788f2301bae7c8384545")
!10175 = !DISubroutineType(types: !10176)
!10176 = !{!10177}
!10177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9691, size: 64)
!10178 = !DISubprogram(name: "__xmlGenericErrorContext", scope: !10174, file: !10174, line: 348, type: !10179, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!10179 = !DISubroutineType(types: !10180)
!10180 = !{!1436}
!10181 = distinct !DISubprogram(name: "xmlRegPrintAtomType", scope: !2, file: !2, line: 968, type: !10182, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !10184)
!10182 = !DISubroutineType(types: !10183)
!10183 = !{null, !3780, !1385}
!10184 = !{!10185, !10186}
!10185 = !DILocalVariable(name: "output", arg: 1, scope: !10181, file: !2, line: 968, type: !3780)
!10186 = !DILocalVariable(name: "type", arg: 2, scope: !10181, file: !2, line: 968, type: !1385)
!10187 = !DILocation(line: 968, column: 27, scope: !10181)
!10188 = !DILocation(line: 968, column: 50, scope: !10181)
!10189 = !DILocation(line: 969, column: 13, scope: !10181)
!10190 = !DILocation(line: 969, column: 5, scope: !10181)
!10191 = !DILocation(line: 971, column: 14, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10181, file: !2, line: 969, column: 19)
!10193 = !DILocation(line: 971, column: 6, scope: !10192)
!10194 = !DILocation(line: 971, column: 35, scope: !10192)
!10195 = !DILocation(line: 973, column: 14, scope: !10192)
!10196 = !DILocation(line: 973, column: 6, scope: !10192)
!10197 = !DILocation(line: 973, column: 35, scope: !10192)
!10198 = !DILocation(line: 975, column: 14, scope: !10192)
!10199 = !DILocation(line: 975, column: 6, scope: !10192)
!10200 = !DILocation(line: 975, column: 34, scope: !10192)
!10201 = !DILocation(line: 977, column: 14, scope: !10192)
!10202 = !DILocation(line: 977, column: 6, scope: !10192)
!10203 = !DILocation(line: 977, column: 35, scope: !10192)
!10204 = !DILocation(line: 979, column: 14, scope: !10192)
!10205 = !DILocation(line: 979, column: 6, scope: !10192)
!10206 = !DILocation(line: 979, column: 34, scope: !10192)
!10207 = !DILocation(line: 981, column: 14, scope: !10192)
!10208 = !DILocation(line: 981, column: 6, scope: !10192)
!10209 = !DILocation(line: 981, column: 35, scope: !10192)
!10210 = !DILocation(line: 983, column: 14, scope: !10192)
!10211 = !DILocation(line: 983, column: 6, scope: !10192)
!10212 = !DILocation(line: 983, column: 36, scope: !10192)
!10213 = !DILocation(line: 985, column: 14, scope: !10192)
!10214 = !DILocation(line: 985, column: 6, scope: !10192)
!10215 = !DILocation(line: 985, column: 36, scope: !10192)
!10216 = !DILocation(line: 987, column: 14, scope: !10192)
!10217 = !DILocation(line: 987, column: 6, scope: !10192)
!10218 = !DILocation(line: 987, column: 36, scope: !10192)
!10219 = !DILocation(line: 989, column: 14, scope: !10192)
!10220 = !DILocation(line: 989, column: 6, scope: !10192)
!10221 = !DILocation(line: 989, column: 39, scope: !10192)
!10222 = !DILocation(line: 991, column: 14, scope: !10192)
!10223 = !DILocation(line: 991, column: 6, scope: !10192)
!10224 = !DILocation(line: 991, column: 36, scope: !10192)
!10225 = !DILocation(line: 993, column: 14, scope: !10192)
!10226 = !DILocation(line: 993, column: 6, scope: !10192)
!10227 = !DILocation(line: 993, column: 39, scope: !10192)
!10228 = !DILocation(line: 995, column: 14, scope: !10192)
!10229 = !DILocation(line: 995, column: 6, scope: !10192)
!10230 = !DILocation(line: 995, column: 35, scope: !10192)
!10231 = !DILocation(line: 997, column: 14, scope: !10192)
!10232 = !DILocation(line: 997, column: 6, scope: !10192)
!10233 = !DILocation(line: 997, column: 38, scope: !10192)
!10234 = !DILocation(line: 999, column: 14, scope: !10192)
!10235 = !DILocation(line: 999, column: 6, scope: !10192)
!10236 = !DILocation(line: 999, column: 36, scope: !10192)
!10237 = !DILocation(line: 1001, column: 14, scope: !10192)
!10238 = !DILocation(line: 1001, column: 6, scope: !10192)
!10239 = !DILocation(line: 1001, column: 39, scope: !10192)
!10240 = !DILocation(line: 1003, column: 21, scope: !10192)
!10241 = !DILocation(line: 1003, column: 13, scope: !10192)
!10242 = !DILocation(line: 1003, column: 41, scope: !10192)
!10243 = !DILocation(line: 1005, column: 21, scope: !10192)
!10244 = !DILocation(line: 1005, column: 13, scope: !10192)
!10245 = !DILocation(line: 1005, column: 51, scope: !10192)
!10246 = !DILocation(line: 1007, column: 21, scope: !10192)
!10247 = !DILocation(line: 1007, column: 13, scope: !10192)
!10248 = !DILocation(line: 1007, column: 51, scope: !10192)
!10249 = !DILocation(line: 1009, column: 21, scope: !10192)
!10250 = !DILocation(line: 1009, column: 13, scope: !10192)
!10251 = !DILocation(line: 1009, column: 51, scope: !10192)
!10252 = !DILocation(line: 1011, column: 21, scope: !10192)
!10253 = !DILocation(line: 1011, column: 13, scope: !10192)
!10254 = !DILocation(line: 1011, column: 50, scope: !10192)
!10255 = !DILocation(line: 1013, column: 21, scope: !10192)
!10256 = !DILocation(line: 1013, column: 13, scope: !10192)
!10257 = !DILocation(line: 1013, column: 48, scope: !10192)
!10258 = !DILocation(line: 1015, column: 21, scope: !10192)
!10259 = !DILocation(line: 1015, column: 13, scope: !10192)
!10260 = !DILocation(line: 1015, column: 39, scope: !10192)
!10261 = !DILocation(line: 1017, column: 21, scope: !10192)
!10262 = !DILocation(line: 1017, column: 13, scope: !10192)
!10263 = !DILocation(line: 1017, column: 50, scope: !10192)
!10264 = !DILocation(line: 1019, column: 21, scope: !10192)
!10265 = !DILocation(line: 1019, column: 13, scope: !10192)
!10266 = !DILocation(line: 1019, column: 54, scope: !10192)
!10267 = !DILocation(line: 1021, column: 21, scope: !10192)
!10268 = !DILocation(line: 1021, column: 13, scope: !10192)
!10269 = !DILocation(line: 1021, column: 49, scope: !10192)
!10270 = !DILocation(line: 1023, column: 21, scope: !10192)
!10271 = !DILocation(line: 1023, column: 13, scope: !10192)
!10272 = !DILocation(line: 1023, column: 41, scope: !10192)
!10273 = !DILocation(line: 1025, column: 21, scope: !10192)
!10274 = !DILocation(line: 1025, column: 13, scope: !10192)
!10275 = !DILocation(line: 1025, column: 49, scope: !10192)
!10276 = !DILocation(line: 1027, column: 21, scope: !10192)
!10277 = !DILocation(line: 1027, column: 13, scope: !10192)
!10278 = !DILocation(line: 1027, column: 48, scope: !10192)
!10279 = !DILocation(line: 1029, column: 21, scope: !10192)
!10280 = !DILocation(line: 1029, column: 13, scope: !10192)
!10281 = !DILocation(line: 1029, column: 48, scope: !10192)
!10282 = !DILocation(line: 1031, column: 21, scope: !10192)
!10283 = !DILocation(line: 1031, column: 13, scope: !10192)
!10284 = !DILocation(line: 1031, column: 40, scope: !10192)
!10285 = !DILocation(line: 1033, column: 21, scope: !10192)
!10286 = !DILocation(line: 1033, column: 13, scope: !10192)
!10287 = !DILocation(line: 1033, column: 50, scope: !10192)
!10288 = !DILocation(line: 1035, column: 21, scope: !10192)
!10289 = !DILocation(line: 1035, column: 13, scope: !10192)
!10290 = !DILocation(line: 1035, column: 45, scope: !10192)
!10291 = !DILocation(line: 1037, column: 21, scope: !10192)
!10292 = !DILocation(line: 1037, column: 13, scope: !10192)
!10293 = !DILocation(line: 1037, column: 45, scope: !10192)
!10294 = !DILocation(line: 1039, column: 21, scope: !10192)
!10295 = !DILocation(line: 1039, column: 13, scope: !10192)
!10296 = !DILocation(line: 1039, column: 46, scope: !10192)
!10297 = !DILocation(line: 1041, column: 21, scope: !10192)
!10298 = !DILocation(line: 1041, column: 13, scope: !10192)
!10299 = !DILocation(line: 1041, column: 50, scope: !10192)
!10300 = !DILocation(line: 1043, column: 21, scope: !10192)
!10301 = !DILocation(line: 1043, column: 13, scope: !10192)
!10302 = !DILocation(line: 1043, column: 49, scope: !10192)
!10303 = !DILocation(line: 1045, column: 21, scope: !10192)
!10304 = !DILocation(line: 1045, column: 13, scope: !10192)
!10305 = !DILocation(line: 1045, column: 47, scope: !10192)
!10306 = !DILocation(line: 1047, column: 21, scope: !10192)
!10307 = !DILocation(line: 1047, column: 13, scope: !10192)
!10308 = !DILocation(line: 1047, column: 40, scope: !10192)
!10309 = !DILocation(line: 1049, column: 21, scope: !10192)
!10310 = !DILocation(line: 1049, column: 13, scope: !10192)
!10311 = !DILocation(line: 1049, column: 46, scope: !10192)
!10312 = !DILocation(line: 1051, column: 21, scope: !10192)
!10313 = !DILocation(line: 1051, column: 13, scope: !10192)
!10314 = !DILocation(line: 1051, column: 45, scope: !10192)
!10315 = !DILocation(line: 1053, column: 21, scope: !10192)
!10316 = !DILocation(line: 1053, column: 13, scope: !10192)
!10317 = !DILocation(line: 1053, column: 45, scope: !10192)
!10318 = !DILocation(line: 1055, column: 21, scope: !10192)
!10319 = !DILocation(line: 1055, column: 13, scope: !10192)
!10320 = !DILocation(line: 1055, column: 41, scope: !10192)
!10321 = !DILocation(line: 1057, column: 21, scope: !10192)
!10322 = !DILocation(line: 1057, column: 13, scope: !10192)
!10323 = !DILocation(line: 1057, column: 46, scope: !10192)
!10324 = !DILocation(line: 1059, column: 21, scope: !10192)
!10325 = !DILocation(line: 1059, column: 13, scope: !10192)
!10326 = !DILocation(line: 1059, column: 50, scope: !10192)
!10327 = !DILocation(line: 1061, column: 21, scope: !10192)
!10328 = !DILocation(line: 1061, column: 13, scope: !10192)
!10329 = !DILocation(line: 1061, column: 50, scope: !10192)
!10330 = !DILocation(line: 1063, column: 21, scope: !10192)
!10331 = !DILocation(line: 1063, column: 13, scope: !10192)
!10332 = !DILocation(line: 1063, column: 48, scope: !10192)
!10333 = !DILocation(line: 1065, column: 21, scope: !10192)
!10334 = !DILocation(line: 1065, column: 13, scope: !10192)
!10335 = !DILocation(line: 1065, column: 40, scope: !10192)
!10336 = !DILocation(line: 1067, column: 21, scope: !10192)
!10337 = !DILocation(line: 1067, column: 13, scope: !10192)
!10338 = !DILocation(line: 1067, column: 48, scope: !10192)
!10339 = !DILocation(line: 1069, column: 21, scope: !10192)
!10340 = !DILocation(line: 1069, column: 13, scope: !10192)
!10341 = !DILocation(line: 1069, column: 47, scope: !10192)
!10342 = !DILocation(line: 1071, column: 21, scope: !10192)
!10343 = !DILocation(line: 1071, column: 13, scope: !10192)
!10344 = !DILocation(line: 1071, column: 48, scope: !10192)
!10345 = !DILocation(line: 1073, column: 21, scope: !10192)
!10346 = !DILocation(line: 1073, column: 13, scope: !10192)
!10347 = !DILocation(line: 1073, column: 43, scope: !10192)
!10348 = !DILocation(line: 1075, column: 14, scope: !10192)
!10349 = !DILocation(line: 1075, column: 6, scope: !10192)
!10350 = !DILocation(line: 1075, column: 33, scope: !10192)
!10351 = !DILocation(line: 1077, column: 1, scope: !10181)
!10352 = distinct !DISubprogram(name: "xmlRegPrintQuantType", scope: !2, file: !2, line: 1080, type: !10353, scopeLine: 1080, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !10355)
!10353 = !DISubroutineType(types: !10354)
!10354 = !{null, !3780, !1387}
!10355 = !{!10356, !10357}
!10356 = !DILocalVariable(name: "output", arg: 1, scope: !10352, file: !2, line: 1080, type: !3780)
!10357 = !DILocalVariable(name: "type", arg: 2, scope: !10352, file: !2, line: 1080, type: !1387)
!10358 = !DILocation(line: 1080, column: 28, scope: !10352)
!10359 = !DILocation(line: 1080, column: 52, scope: !10352)
!10360 = !DILocation(line: 1081, column: 13, scope: !10352)
!10361 = !DILocation(line: 1081, column: 5, scope: !10352)
!10362 = !DILocation(line: 1083, column: 14, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10352, file: !2, line: 1081, column: 19)
!10364 = !DILocation(line: 1083, column: 6, scope: !10363)
!10365 = !DILocation(line: 1083, column: 35, scope: !10363)
!10366 = !DILocation(line: 1085, column: 14, scope: !10363)
!10367 = !DILocation(line: 1085, column: 6, scope: !10363)
!10368 = !DILocation(line: 1085, column: 32, scope: !10363)
!10369 = !DILocation(line: 1087, column: 14, scope: !10363)
!10370 = !DILocation(line: 1087, column: 6, scope: !10363)
!10371 = !DILocation(line: 1087, column: 29, scope: !10363)
!10372 = !DILocation(line: 1089, column: 14, scope: !10363)
!10373 = !DILocation(line: 1089, column: 6, scope: !10363)
!10374 = !DILocation(line: 1089, column: 29, scope: !10363)
!10375 = !DILocation(line: 1091, column: 14, scope: !10363)
!10376 = !DILocation(line: 1091, column: 6, scope: !10363)
!10377 = !DILocation(line: 1091, column: 29, scope: !10363)
!10378 = !DILocation(line: 1093, column: 14, scope: !10363)
!10379 = !DILocation(line: 1093, column: 6, scope: !10363)
!10380 = !DILocation(line: 1093, column: 33, scope: !10363)
!10381 = !DILocation(line: 1095, column: 14, scope: !10363)
!10382 = !DILocation(line: 1095, column: 6, scope: !10363)
!10383 = !DILocation(line: 1095, column: 36, scope: !10363)
!10384 = !DILocation(line: 1097, column: 14, scope: !10363)
!10385 = !DILocation(line: 1097, column: 6, scope: !10363)
!10386 = !DILocation(line: 1097, column: 31, scope: !10363)
!10387 = !DILocation(line: 1099, column: 1, scope: !10352)
!10388 = distinct !DISubprogram(name: "xmlRegPrintRange", scope: !2, file: !2, line: 1101, type: !10389, scopeLine: 1101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !10391)
!10389 = !DISubroutineType(types: !10390)
!10390 = !{null, !3780, !1401}
!10391 = !{!10392, !10393}
!10392 = !DILocalVariable(name: "output", arg: 1, scope: !10388, file: !2, line: 1101, type: !3780)
!10393 = !DILocalVariable(name: "range", arg: 2, scope: !10388, file: !2, line: 1101, type: !1401)
!10394 = !DILocation(line: 1101, column: 24, scope: !10388)
!10395 = !DILocation(line: 1101, column: 47, scope: !10388)
!10396 = !DILocation(line: 1102, column: 13, scope: !10388)
!10397 = !DILocation(line: 1102, column: 5, scope: !10388)
!10398 = !DILocation(line: 1103, column: 9, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10388, file: !2, line: 1103, column: 9)
!10400 = !DILocation(line: 1103, column: 16, scope: !10399)
!10401 = !{!10402, !1546, i64 0}
!10402 = !{!"_xmlRegRange", !1546, i64 0, !1529, i64 4, !1546, i64 8, !1546, i64 12, !1528, i64 16}
!10403 = !DILocation(line: 1103, column: 9, scope: !10388)
!10404 = !DILocation(line: 1104, column: 10, scope: !10399)
!10405 = !DILocation(line: 1104, column: 2, scope: !10399)
!10406 = !DILocation(line: 1105, column: 25, scope: !10388)
!10407 = !DILocation(line: 1105, column: 33, scope: !10388)
!10408 = !DILocation(line: 1105, column: 40, scope: !10388)
!10409 = !{!10402, !1529, i64 4}
!10410 = !DILocation(line: 1105, column: 5, scope: !10388)
!10411 = !DILocation(line: 1106, column: 13, scope: !10388)
!10412 = !DILocation(line: 1106, column: 34, scope: !10388)
!10413 = !DILocation(line: 1106, column: 41, scope: !10388)
!10414 = !{!10402, !1546, i64 8}
!10415 = !DILocation(line: 1106, column: 48, scope: !10388)
!10416 = !DILocation(line: 1106, column: 55, scope: !10388)
!10417 = !{!10402, !1546, i64 12}
!10418 = !DILocation(line: 1106, column: 5, scope: !10388)
!10419 = !DILocation(line: 1107, column: 1, scope: !10388)
!10420 = distinct !DISubprogram(name: "xmlRegPrintTrans", scope: !2, file: !2, line: 1139, type: !10421, scopeLine: 1139, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !10423)
!10421 = !DISubroutineType(types: !10422)
!10422 = !{null, !3780, !1884}
!10423 = !{!10424, !10425}
!10424 = !DILocalVariable(name: "output", arg: 1, scope: !10420, file: !2, line: 1139, type: !3780)
!10425 = !DILocalVariable(name: "trans", arg: 2, scope: !10420, file: !2, line: 1139, type: !1884)
!10426 = !DILocation(line: 1139, column: 24, scope: !10420)
!10427 = !DILocation(line: 1139, column: 47, scope: !10420)
!10428 = !DILocation(line: 1140, column: 13, scope: !10420)
!10429 = !DILocation(line: 1140, column: 5, scope: !10420)
!10430 = !DILocation(line: 1141, column: 9, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10420, file: !2, line: 1141, column: 9)
!10432 = !DILocation(line: 1141, column: 15, scope: !10431)
!10433 = !DILocation(line: 1141, column: 9, scope: !10420)
!10434 = !DILocation(line: 1142, column: 10, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10431, file: !2, line: 1141, column: 24)
!10436 = !DILocation(line: 1142, column: 2, scope: !10435)
!10437 = !DILocation(line: 1143, column: 2, scope: !10435)
!10438 = !DILocation(line: 1145, column: 9, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10420, file: !2, line: 1145, column: 9)
!10440 = !DILocation(line: 1145, column: 16, scope: !10439)
!10441 = !DILocation(line: 1145, column: 19, scope: !10439)
!10442 = !DILocation(line: 1145, column: 9, scope: !10420)
!10443 = !DILocation(line: 1146, column: 10, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10439, file: !2, line: 1145, column: 24)
!10445 = !DILocation(line: 1146, column: 2, scope: !10444)
!10446 = !DILocation(line: 1147, column: 2, scope: !10444)
!10447 = !DILocation(line: 1149, column: 9, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10420, file: !2, line: 1149, column: 9)
!10449 = !DILocation(line: 1149, column: 16, scope: !10448)
!10450 = !DILocation(line: 1149, column: 19, scope: !10448)
!10451 = !DILocation(line: 1149, column: 9, scope: !10420)
!10452 = !DILocation(line: 1150, column: 6, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10454, file: !2, line: 1150, column: 6)
!10454 = distinct !DILexicalBlock(scope: !10448, file: !2, line: 1149, column: 25)
!10455 = !DILocation(line: 1150, column: 13, scope: !10453)
!10456 = !DILocation(line: 1150, column: 16, scope: !10453)
!10457 = !DILocation(line: 1150, column: 6, scope: !10454)
!10458 = !DILocation(line: 1151, column: 14, scope: !10453)
!10459 = !DILocation(line: 1151, column: 6, scope: !10453)
!10460 = !DILocation(line: 1153, column: 14, scope: !10453)
!10461 = !DILocation(line: 1153, column: 6, scope: !10453)
!10462 = !DILocation(line: 1154, column: 5, scope: !10454)
!10463 = !DILocation(line: 1155, column: 9, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10420, file: !2, line: 1155, column: 9)
!10465 = !DILocation(line: 1155, column: 16, scope: !10464)
!10466 = !DILocation(line: 1155, column: 24, scope: !10464)
!10467 = !DILocation(line: 1155, column: 9, scope: !10420)
!10468 = !DILocation(line: 1156, column: 10, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10464, file: !2, line: 1155, column: 30)
!10470 = !DILocation(line: 1156, column: 34, scope: !10469)
!10471 = !DILocation(line: 1156, column: 41, scope: !10469)
!10472 = !DILocation(line: 1156, column: 2, scope: !10469)
!10473 = !DILocation(line: 1157, column: 5, scope: !10469)
!10474 = !DILocation(line: 1158, column: 9, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10420, file: !2, line: 1158, column: 9)
!10476 = !DILocation(line: 1158, column: 16, scope: !10475)
!10477 = !DILocation(line: 1158, column: 22, scope: !10475)
!10478 = !DILocation(line: 1158, column: 9, scope: !10420)
!10479 = !DILocation(line: 1159, column: 10, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10475, file: !2, line: 1158, column: 45)
!10481 = !DILocation(line: 1159, column: 2, scope: !10480)
!10482 = !DILocation(line: 1160, column: 5, scope: !10480)
!10483 = !DILocation(line: 1160, column: 16, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10475, file: !2, line: 1160, column: 16)
!10485 = !DILocation(line: 1160, column: 23, scope: !10484)
!10486 = !DILocation(line: 1160, column: 29, scope: !10484)
!10487 = !DILocation(line: 1160, column: 16, scope: !10475)
!10488 = !DILocation(line: 1161, column: 10, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10484, file: !2, line: 1160, column: 35)
!10490 = !DILocation(line: 1161, column: 38, scope: !10489)
!10491 = !DILocation(line: 1161, column: 45, scope: !10489)
!10492 = !DILocation(line: 1161, column: 2, scope: !10489)
!10493 = !DILocation(line: 1162, column: 5, scope: !10489)
!10494 = !DILocation(line: 1163, column: 9, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10420, file: !2, line: 1163, column: 9)
!10496 = !DILocation(line: 1163, column: 16, scope: !10495)
!10497 = !DILocation(line: 1163, column: 21, scope: !10495)
!10498 = !DILocation(line: 1163, column: 9, scope: !10420)
!10499 = !DILocation(line: 1164, column: 10, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10495, file: !2, line: 1163, column: 30)
!10501 = !DILocation(line: 1164, column: 37, scope: !10500)
!10502 = !DILocation(line: 1164, column: 44, scope: !10500)
!10503 = !DILocation(line: 1164, column: 2, scope: !10500)
!10504 = !DILocation(line: 1165, column: 2, scope: !10500)
!10505 = !DILocation(line: 1167, column: 9, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10420, file: !2, line: 1167, column: 9)
!10507 = !DILocation(line: 1167, column: 16, scope: !10506)
!10508 = !DILocation(line: 1167, column: 22, scope: !10506)
!10509 = !DILocation(line: 1167, column: 27, scope: !10506)
!10510 = !DILocation(line: 1167, column: 9, scope: !10420)
!10511 = !DILocation(line: 1168, column: 10, scope: !10506)
!10512 = !DILocation(line: 1168, column: 30, scope: !10506)
!10513 = !DILocation(line: 1168, column: 37, scope: !10506)
!10514 = !DILocation(line: 1168, column: 43, scope: !10506)
!10515 = !DILocation(line: 1168, column: 2, scope: !10506)
!10516 = !DILocation(line: 1169, column: 13, scope: !10420)
!10517 = !DILocation(line: 1169, column: 41, scope: !10420)
!10518 = !DILocation(line: 1169, column: 48, scope: !10420)
!10519 = !DILocation(line: 1169, column: 54, scope: !10420)
!10520 = !DILocation(line: 1169, column: 58, scope: !10420)
!10521 = !DILocation(line: 1169, column: 65, scope: !10420)
!10522 = !DILocation(line: 1169, column: 5, scope: !10420)
!10523 = !DILocation(line: 1170, column: 1, scope: !10420)
!10524 = distinct !DISubprogram(name: "xmlFAParseBranch", scope: !2, file: !2, line: 5492, type: !4311, scopeLine: 5492, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !10525)
!10525 = !{!10526, !10527, !10528, !10529}
!10526 = !DILocalVariable(name: "ctxt", arg: 1, scope: !10524, file: !2, line: 5492, type: !1483)
!10527 = !DILocalVariable(name: "to", arg: 2, scope: !10524, file: !2, line: 5492, type: !1358)
!10528 = !DILocalVariable(name: "previous", scope: !10524, file: !2, line: 5493, type: !1358)
!10529 = !DILocalVariable(name: "ret", scope: !10524, file: !2, line: 5494, type: !1306)
!10530 = !DILocation(line: 5492, column: 38, scope: !10524)
!10531 = !DILocation(line: 5492, column: 59, scope: !10524)
!10532 = !DILocation(line: 5493, column: 5, scope: !10524)
!10533 = !DILocation(line: 5493, column: 20, scope: !10524)
!10534 = !DILocation(line: 5494, column: 5, scope: !10524)
!10535 = !DILocation(line: 5494, column: 9, scope: !10524)
!10536 = !DILocation(line: 5496, column: 16, scope: !10524)
!10537 = !DILocation(line: 5496, column: 22, scope: !10524)
!10538 = !DILocation(line: 5496, column: 14, scope: !10524)
!10539 = !DILocation(line: 5497, column: 27, scope: !10524)
!10540 = !DILocation(line: 5497, column: 11, scope: !10524)
!10541 = !DILocation(line: 5497, column: 9, scope: !10524)
!10542 = !DILocation(line: 5498, column: 9, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10524, file: !2, line: 5498, column: 9)
!10544 = !DILocation(line: 5498, column: 13, scope: !10543)
!10545 = !DILocation(line: 5498, column: 9, scope: !10524)
!10546 = !DILocation(line: 5500, column: 33, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10543, file: !2, line: 5498, column: 19)
!10548 = !DILocation(line: 5500, column: 39, scope: !10547)
!10549 = !DILocation(line: 5500, column: 49, scope: !10547)
!10550 = !DILocation(line: 5500, column: 2, scope: !10547)
!10551 = !DILocation(line: 5501, column: 5, scope: !10547)
!10552 = !DILocation(line: 5502, column: 31, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10554, file: !2, line: 5502, column: 6)
!10554 = distinct !DILexicalBlock(scope: !10543, file: !2, line: 5501, column: 12)
!10555 = !DILocation(line: 5502, column: 37, scope: !10553)
!10556 = !DILocation(line: 5503, column: 11, scope: !10553)
!10557 = !DILocation(line: 5503, column: 14, scope: !10553)
!10558 = !DILocation(line: 5503, column: 20, scope: !10553)
!10559 = !DILocation(line: 5503, column: 23, scope: !10553)
!10560 = !DILocation(line: 5503, column: 26, scope: !10553)
!10561 = !DILocation(line: 5503, column: 32, scope: !10553)
!10562 = !DILocation(line: 5503, column: 35, scope: !10553)
!10563 = !DILocation(line: 5503, column: 38, scope: !10553)
!10564 = !DILocation(line: 5503, column: 10, scope: !10553)
!10565 = !DILocation(line: 5503, column: 45, scope: !10553)
!10566 = !DILocation(line: 5503, column: 56, scope: !10553)
!10567 = !DILocation(line: 5503, column: 62, scope: !10553)
!10568 = !{!1724, !1528, i64 48}
!10569 = !DILocation(line: 5502, column: 6, scope: !10553)
!10570 = !DILocation(line: 5503, column: 68, scope: !10553)
!10571 = !DILocation(line: 5502, column: 6, scope: !10554)
!10572 = !DILocation(line: 5504, column: 6, scope: !10553)
!10573 = !DILocation(line: 5505, column: 13, scope: !10554)
!10574 = !DILocation(line: 5505, column: 19, scope: !10554)
!10575 = !DILocation(line: 5505, column: 11, scope: !10554)
!10576 = !DILocation(line: 5506, column: 2, scope: !10554)
!10577 = !DILocation(line: 5506, column: 8, scope: !10554)
!10578 = !DILocation(line: 5506, column: 13, scope: !10554)
!10579 = !DILocation(line: 5508, column: 5, scope: !10524)
!10580 = !DILocation(line: 5508, column: 13, scope: !10524)
!10581 = !DILocation(line: 5508, column: 17, scope: !10524)
!10582 = !DILocation(line: 5508, column: 23, scope: !10524)
!10583 = !DILocation(line: 5508, column: 27, scope: !10524)
!10584 = !DILocation(line: 5508, column: 33, scope: !10524)
!10585 = !DILocation(line: 5508, column: 39, scope: !10524)
!10586 = !DILocation(line: 0, scope: !10524)
!10587 = !DILocation(line: 5509, column: 24, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10524, file: !2, line: 5508, column: 46)
!10589 = !DILocation(line: 5509, column: 8, scope: !10588)
!10590 = !DILocation(line: 5509, column: 6, scope: !10588)
!10591 = !DILocation(line: 5510, column: 6, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10588, file: !2, line: 5510, column: 6)
!10593 = !DILocation(line: 5510, column: 10, scope: !10592)
!10594 = !DILocation(line: 5510, column: 6, scope: !10588)
!10595 = !DILocation(line: 5511, column: 35, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10597, file: !2, line: 5511, column: 10)
!10597 = distinct !DILexicalBlock(scope: !10592, file: !2, line: 5510, column: 16)
!10598 = !DILocation(line: 5511, column: 41, scope: !10596)
!10599 = !DILocation(line: 5512, column: 15, scope: !10596)
!10600 = !DILocation(line: 5512, column: 18, scope: !10596)
!10601 = !DILocation(line: 5512, column: 24, scope: !10596)
!10602 = !DILocation(line: 5512, column: 27, scope: !10596)
!10603 = !DILocation(line: 5512, column: 30, scope: !10596)
!10604 = !DILocation(line: 5512, column: 36, scope: !10596)
!10605 = !DILocation(line: 5512, column: 39, scope: !10596)
!10606 = !DILocation(line: 5512, column: 42, scope: !10596)
!10607 = !DILocation(line: 5512, column: 14, scope: !10596)
!10608 = !DILocation(line: 5512, column: 49, scope: !10596)
!10609 = !DILocation(line: 5513, column: 21, scope: !10596)
!10610 = !DILocation(line: 5513, column: 27, scope: !10596)
!10611 = !DILocation(line: 5511, column: 10, scope: !10596)
!10612 = !DILocation(line: 5513, column: 33, scope: !10596)
!10613 = !DILocation(line: 5511, column: 10, scope: !10597)
!10614 = !DILocation(line: 5514, column: 7, scope: !10596)
!10615 = !DILocation(line: 5515, column: 17, scope: !10597)
!10616 = !DILocation(line: 5515, column: 23, scope: !10597)
!10617 = !DILocation(line: 5515, column: 15, scope: !10597)
!10618 = !DILocation(line: 5516, column: 6, scope: !10597)
!10619 = !DILocation(line: 5516, column: 12, scope: !10597)
!10620 = !DILocation(line: 5516, column: 17, scope: !10597)
!10621 = !DILocation(line: 5517, column: 2, scope: !10597)
!10622 = distinct !{!10622, !10579, !10623, !1794}
!10623 = !DILocation(line: 5518, column: 5, scope: !10524)
!10624 = !DILocation(line: 5519, column: 5, scope: !10524)
!10625 = !DILocation(line: 5520, column: 1, scope: !10524)
!10626 = distinct !DISubprogram(name: "xmlFAParsePiece", scope: !2, file: !2, line: 5467, type: !6785, scopeLine: 5467, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !10627)
!10627 = !{!10628, !10629}
!10628 = !DILocalVariable(name: "ctxt", arg: 1, scope: !10626, file: !2, line: 5467, type: !1483)
!10629 = !DILocalVariable(name: "ret", scope: !10626, file: !2, line: 5468, type: !1306)
!10630 = !DILocation(line: 5467, column: 37, scope: !10626)
!10631 = !DILocation(line: 5468, column: 5, scope: !10626)
!10632 = !DILocation(line: 5468, column: 9, scope: !10626)
!10633 = !DILocation(line: 5470, column: 5, scope: !10626)
!10634 = !DILocation(line: 5470, column: 11, scope: !10626)
!10635 = !DILocation(line: 5470, column: 16, scope: !10626)
!10636 = !DILocation(line: 5471, column: 26, scope: !10626)
!10637 = !DILocation(line: 5471, column: 11, scope: !10626)
!10638 = !DILocation(line: 5471, column: 9, scope: !10626)
!10639 = !DILocation(line: 5472, column: 9, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10626, file: !2, line: 5472, column: 9)
!10641 = !DILocation(line: 5472, column: 13, scope: !10640)
!10642 = !DILocation(line: 5472, column: 9, scope: !10626)
!10643 = !DILocation(line: 5473, column: 2, scope: !10640)
!10644 = !DILocation(line: 5474, column: 9, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10626, file: !2, line: 5474, column: 9)
!10646 = !DILocation(line: 5474, column: 15, scope: !10645)
!10647 = !DILocation(line: 5474, column: 20, scope: !10645)
!10648 = !DILocation(line: 5474, column: 9, scope: !10626)
!10649 = !DILocation(line: 5475, column: 2, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10645, file: !2, line: 5474, column: 29)
!10651 = !DILocation(line: 5476, column: 5, scope: !10650)
!10652 = !DILocation(line: 5477, column: 26, scope: !10626)
!10653 = !DILocation(line: 5477, column: 5, scope: !10626)
!10654 = !DILocation(line: 5478, column: 5, scope: !10626)
!10655 = !DILocation(line: 5479, column: 1, scope: !10626)
!10656 = distinct !DISubprogram(name: "xmlFAParseAtom", scope: !2, file: !2, line: 5400, type: !6785, scopeLine: 5400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !10657)
!10657 = !{!10658, !10659, !10660, !10661, !10668, !10669}
!10658 = !DILocalVariable(name: "ctxt", arg: 1, scope: !10656, file: !2, line: 5400, type: !1483)
!10659 = !DILocalVariable(name: "codepoint", scope: !10656, file: !2, line: 5401, type: !1306)
!10660 = !DILocalVariable(name: "len", scope: !10656, file: !2, line: 5401, type: !1306)
!10661 = !DILocalVariable(name: "start", scope: !10662, file: !2, line: 5419, type: !1358)
!10662 = distinct !DILexicalBlock(scope: !10663, file: !2, line: 5418, column: 28)
!10663 = distinct !DILexicalBlock(scope: !10664, file: !2, line: 5418, column: 16)
!10664 = distinct !DILexicalBlock(scope: !10665, file: !2, line: 5416, column: 16)
!10665 = distinct !DILexicalBlock(scope: !10666, file: !2, line: 5414, column: 16)
!10666 = distinct !DILexicalBlock(scope: !10667, file: !2, line: 5412, column: 16)
!10667 = distinct !DILexicalBlock(scope: !10656, file: !2, line: 5404, column: 9)
!10668 = !DILocalVariable(name: "oldend", scope: !10662, file: !2, line: 5419, type: !1358)
!10669 = !DILocalVariable(name: "start0", scope: !10662, file: !2, line: 5419, type: !1358)
!10670 = !DILocation(line: 5400, column: 36, scope: !10656)
!10671 = !DILocation(line: 5401, column: 5, scope: !10656)
!10672 = !DILocation(line: 5401, column: 9, scope: !10656)
!10673 = !DILocation(line: 5401, column: 20, scope: !10656)
!10674 = !DILocation(line: 5403, column: 29, scope: !10656)
!10675 = !DILocation(line: 5403, column: 17, scope: !10656)
!10676 = !DILocation(line: 5403, column: 15, scope: !10656)
!10677 = !DILocation(line: 5404, column: 9, scope: !10667)
!10678 = !DILocation(line: 5404, column: 19, scope: !10667)
!10679 = !DILocation(line: 5404, column: 9, scope: !10656)
!10680 = !DILocation(line: 5405, column: 29, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10667, file: !2, line: 5404, column: 24)
!10682 = !DILocation(line: 5405, column: 15, scope: !10681)
!10683 = !DILocation(line: 5405, column: 2, scope: !10681)
!10684 = !DILocation(line: 5405, column: 8, scope: !10681)
!10685 = !DILocation(line: 5405, column: 13, scope: !10681)
!10686 = !DILocation(line: 5406, column: 6, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10681, file: !2, line: 5406, column: 6)
!10688 = !DILocation(line: 5406, column: 12, scope: !10687)
!10689 = !DILocation(line: 5406, column: 17, scope: !10687)
!10690 = !DILocation(line: 5406, column: 6, scope: !10681)
!10691 = !DILocation(line: 5407, column: 6, scope: !10687)
!10692 = !DILocation(line: 5408, column: 14, scope: !10681)
!10693 = !DILocation(line: 5408, column: 12, scope: !10681)
!10694 = !DILocation(line: 5409, column: 26, scope: !10681)
!10695 = !DILocation(line: 5409, column: 2, scope: !10681)
!10696 = !DILocation(line: 5409, column: 8, scope: !10681)
!10697 = !DILocation(line: 5409, column: 14, scope: !10681)
!10698 = !DILocation(line: 5409, column: 24, scope: !10681)
!10699 = !DILocation(line: 5410, column: 2, scope: !10681)
!10700 = !DILocation(line: 5411, column: 2, scope: !10681)
!10701 = !DILocation(line: 5412, column: 16, scope: !10666)
!10702 = !DILocation(line: 5412, column: 20, scope: !10666)
!10703 = !DILocation(line: 5412, column: 16, scope: !10667)
!10704 = !DILocation(line: 5413, column: 2, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10666, file: !2, line: 5412, column: 28)
!10706 = !DILocation(line: 5414, column: 16, scope: !10665)
!10707 = !DILocation(line: 5414, column: 20, scope: !10665)
!10708 = !DILocation(line: 5414, column: 16, scope: !10666)
!10709 = !DILocation(line: 5415, column: 2, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10665, file: !2, line: 5414, column: 26)
!10711 = !DILocation(line: 5416, column: 16, scope: !10664)
!10712 = !DILocation(line: 5416, column: 20, scope: !10664)
!10713 = !DILocation(line: 5416, column: 16, scope: !10665)
!10714 = !DILocation(line: 5417, column: 2, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10664, file: !2, line: 5416, column: 28)
!10716 = !DILocation(line: 5418, column: 16, scope: !10663)
!10717 = !DILocation(line: 5418, column: 20, scope: !10663)
!10718 = !DILocation(line: 5418, column: 16, scope: !10664)
!10719 = !DILocation(line: 5419, column: 2, scope: !10662)
!10720 = !DILocation(line: 5419, column: 17, scope: !10662)
!10721 = !DILocation(line: 5419, column: 24, scope: !10662)
!10722 = !DILocation(line: 5419, column: 32, scope: !10662)
!10723 = !DILocation(line: 5421, column: 2, scope: !10662)
!10724 = !DILocation(line: 5422, column: 13, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10662, file: !2, line: 5422, column: 13)
!10726 = !DILocation(line: 5422, column: 19, scope: !10725)
!10727 = !{!1724, !1546, i64 116}
!10728 = !DILocation(line: 5422, column: 25, scope: !10725)
!10729 = !DILocation(line: 5422, column: 13, scope: !10662)
!10730 = !DILocation(line: 5423, column: 6, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10725, file: !2, line: 5422, column: 32)
!10732 = !DILocation(line: 5424, column: 13, scope: !10731)
!10733 = !DILocation(line: 5430, column: 33, scope: !10662)
!10734 = !DILocation(line: 5430, column: 39, scope: !10662)
!10735 = !DILocation(line: 5430, column: 45, scope: !10662)
!10736 = !DILocation(line: 5430, column: 2, scope: !10662)
!10737 = !DILocation(line: 5431, column: 11, scope: !10662)
!10738 = !DILocation(line: 5431, column: 17, scope: !10662)
!10739 = !DILocation(line: 5431, column: 9, scope: !10662)
!10740 = !DILocation(line: 5432, column: 33, scope: !10662)
!10741 = !DILocation(line: 5432, column: 39, scope: !10662)
!10742 = !DILocation(line: 5432, column: 45, scope: !10662)
!10743 = !DILocation(line: 5432, column: 2, scope: !10662)
!10744 = !DILocation(line: 5433, column: 10, scope: !10662)
!10745 = !DILocation(line: 5433, column: 16, scope: !10662)
!10746 = !DILocation(line: 5433, column: 8, scope: !10662)
!10747 = !DILocation(line: 5434, column: 11, scope: !10662)
!10748 = !DILocation(line: 5434, column: 17, scope: !10662)
!10749 = !DILocation(line: 5434, column: 9, scope: !10662)
!10750 = !DILocation(line: 5435, column: 2, scope: !10662)
!10751 = !DILocation(line: 5435, column: 8, scope: !10662)
!10752 = !DILocation(line: 5435, column: 12, scope: !10662)
!10753 = !DILocation(line: 5436, column: 2, scope: !10662)
!10754 = !DILocation(line: 5436, column: 8, scope: !10662)
!10755 = !DILocation(line: 5436, column: 13, scope: !10662)
!10756 = !DILocation(line: 5437, column: 9, scope: !10662)
!10757 = !DILocation(line: 5437, column: 15, scope: !10662)
!10758 = !DILocation(line: 5437, column: 20, scope: !10662)
!10759 = !DILocation(line: 5438, column: 19, scope: !10662)
!10760 = !DILocation(line: 5438, column: 2, scope: !10662)
!10761 = !DILocation(line: 5439, column: 9, scope: !10662)
!10762 = !DILocation(line: 5439, column: 15, scope: !10662)
!10763 = !DILocation(line: 5439, column: 20, scope: !10662)
!10764 = !DILocation(line: 5440, column: 6, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10662, file: !2, line: 5440, column: 6)
!10766 = !DILocation(line: 5440, column: 10, scope: !10765)
!10767 = !DILocation(line: 5440, column: 6, scope: !10662)
!10768 = !DILocation(line: 5441, column: 6, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10765, file: !2, line: 5440, column: 18)
!10770 = !DILocation(line: 5442, column: 2, scope: !10769)
!10771 = !DILocation(line: 5443, column: 6, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10765, file: !2, line: 5442, column: 9)
!10773 = !DILocation(line: 5445, column: 29, scope: !10662)
!10774 = !DILocation(line: 5445, column: 15, scope: !10662)
!10775 = !DILocation(line: 5445, column: 2, scope: !10662)
!10776 = !DILocation(line: 5445, column: 8, scope: !10662)
!10777 = !DILocation(line: 5445, column: 13, scope: !10662)
!10778 = !DILocation(line: 5446, column: 6, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10662, file: !2, line: 5446, column: 6)
!10780 = !DILocation(line: 5446, column: 12, scope: !10779)
!10781 = !DILocation(line: 5446, column: 17, scope: !10779)
!10782 = !DILocation(line: 5446, column: 6, scope: !10662)
!10783 = !DILocation(line: 5447, column: 6, scope: !10779)
!10784 = !DILocation(line: 5448, column: 22, scope: !10662)
!10785 = !DILocation(line: 5448, column: 2, scope: !10662)
!10786 = !DILocation(line: 5448, column: 8, scope: !10662)
!10787 = !DILocation(line: 5448, column: 14, scope: !10662)
!10788 = !DILocation(line: 5448, column: 20, scope: !10662)
!10789 = !DILocation(line: 5449, column: 23, scope: !10662)
!10790 = !DILocation(line: 5449, column: 2, scope: !10662)
!10791 = !DILocation(line: 5449, column: 8, scope: !10662)
!10792 = !DILocation(line: 5449, column: 14, scope: !10662)
!10793 = !DILocation(line: 5449, column: 21, scope: !10662)
!10794 = !DILocation(line: 5450, column: 21, scope: !10662)
!10795 = !DILocation(line: 5450, column: 27, scope: !10662)
!10796 = !DILocation(line: 5450, column: 2, scope: !10662)
!10797 = !DILocation(line: 5450, column: 8, scope: !10662)
!10798 = !DILocation(line: 5450, column: 14, scope: !10662)
!10799 = !DILocation(line: 5450, column: 19, scope: !10662)
!10800 = !DILocation(line: 5451, column: 14, scope: !10662)
!10801 = !DILocation(line: 5451, column: 2, scope: !10662)
!10802 = !DILocation(line: 5451, column: 8, scope: !10662)
!10803 = !DILocation(line: 5451, column: 12, scope: !10662)
!10804 = !DILocation(line: 5452, column: 2, scope: !10662)
!10805 = !DILocation(line: 5453, column: 5, scope: !10663)
!10806 = !DILocation(line: 5453, column: 17, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10663, file: !2, line: 5453, column: 16)
!10808 = !DILocation(line: 5453, column: 21, scope: !10807)
!10809 = !DILocation(line: 5453, column: 29, scope: !10807)
!10810 = !DILocation(line: 5453, column: 33, scope: !10807)
!10811 = !DILocation(line: 5453, column: 37, scope: !10807)
!10812 = !DILocation(line: 5453, column: 46, scope: !10807)
!10813 = !DILocation(line: 5453, column: 50, scope: !10807)
!10814 = !DILocation(line: 5453, column: 54, scope: !10807)
!10815 = !DILocation(line: 5453, column: 16, scope: !10663)
!10816 = !DILocation(line: 5454, column: 22, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10807, file: !2, line: 5453, column: 63)
!10818 = !DILocation(line: 5454, column: 2, scope: !10817)
!10819 = !DILocation(line: 5455, column: 2, scope: !10817)
!10820 = !DILocation(line: 5457, column: 5, scope: !10656)
!10821 = !DILocation(line: 5458, column: 1, scope: !10656)
!10822 = distinct !DISubprogram(name: "xmlFAParseQuantifier", scope: !2, file: !2, line: 5337, type: !6785, scopeLine: 5337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !10823)
!10823 = !{!10824, !10825, !10826, !10829}
!10824 = !DILocalVariable(name: "ctxt", arg: 1, scope: !10822, file: !2, line: 5337, type: !1483)
!10825 = !DILocalVariable(name: "cur", scope: !10822, file: !2, line: 5338, type: !1306)
!10826 = !DILocalVariable(name: "min", scope: !10827, file: !2, line: 5354, type: !1306)
!10827 = distinct !DILexicalBlock(scope: !10828, file: !2, line: 5353, column: 21)
!10828 = distinct !DILexicalBlock(scope: !10822, file: !2, line: 5353, column: 9)
!10829 = !DILocalVariable(name: "max", scope: !10827, file: !2, line: 5354, type: !1306)
!10830 = !DILocation(line: 5337, column: 42, scope: !10822)
!10831 = !DILocation(line: 5338, column: 5, scope: !10822)
!10832 = !DILocation(line: 5338, column: 9, scope: !10822)
!10833 = !DILocation(line: 5340, column: 11, scope: !10822)
!10834 = !DILocation(line: 5340, column: 9, scope: !10822)
!10835 = !DILocation(line: 5341, column: 10, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10822, file: !2, line: 5341, column: 9)
!10837 = !DILocation(line: 5341, column: 14, scope: !10836)
!10838 = !DILocation(line: 5341, column: 22, scope: !10836)
!10839 = !DILocation(line: 5341, column: 26, scope: !10836)
!10840 = !DILocation(line: 5341, column: 30, scope: !10836)
!10841 = !DILocation(line: 5341, column: 38, scope: !10836)
!10842 = !DILocation(line: 5341, column: 42, scope: !10836)
!10843 = !DILocation(line: 5341, column: 46, scope: !10836)
!10844 = !DILocation(line: 5341, column: 9, scope: !10822)
!10845 = !DILocation(line: 5342, column: 6, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10847, file: !2, line: 5342, column: 6)
!10847 = distinct !DILexicalBlock(scope: !10836, file: !2, line: 5341, column: 55)
!10848 = !DILocation(line: 5342, column: 12, scope: !10846)
!10849 = !DILocation(line: 5342, column: 17, scope: !10846)
!10850 = !DILocation(line: 5342, column: 6, scope: !10847)
!10851 = !DILocation(line: 5343, column: 10, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10853, file: !2, line: 5343, column: 10)
!10853 = distinct !DILexicalBlock(scope: !10846, file: !2, line: 5342, column: 26)
!10854 = !DILocation(line: 5343, column: 14, scope: !10852)
!10855 = !DILocation(line: 5343, column: 10, scope: !10853)
!10856 = !DILocation(line: 5344, column: 3, scope: !10852)
!10857 = !DILocation(line: 5344, column: 9, scope: !10852)
!10858 = !DILocation(line: 5344, column: 15, scope: !10852)
!10859 = !DILocation(line: 5344, column: 21, scope: !10852)
!10860 = !DILocation(line: 5345, column: 15, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10852, file: !2, line: 5345, column: 15)
!10862 = !DILocation(line: 5345, column: 19, scope: !10861)
!10863 = !DILocation(line: 5345, column: 15, scope: !10852)
!10864 = !DILocation(line: 5346, column: 3, scope: !10861)
!10865 = !DILocation(line: 5346, column: 9, scope: !10861)
!10866 = !DILocation(line: 5346, column: 15, scope: !10861)
!10867 = !DILocation(line: 5346, column: 21, scope: !10861)
!10868 = !DILocation(line: 5347, column: 15, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10861, file: !2, line: 5347, column: 15)
!10870 = !DILocation(line: 5347, column: 19, scope: !10869)
!10871 = !DILocation(line: 5347, column: 15, scope: !10861)
!10872 = !DILocation(line: 5348, column: 3, scope: !10869)
!10873 = !DILocation(line: 5348, column: 9, scope: !10869)
!10874 = !DILocation(line: 5348, column: 15, scope: !10869)
!10875 = !DILocation(line: 5348, column: 21, scope: !10869)
!10876 = !DILocation(line: 5349, column: 2, scope: !10853)
!10877 = !DILocation(line: 5350, column: 2, scope: !10847)
!10878 = !DILocation(line: 5351, column: 2, scope: !10847)
!10879 = !DILocation(line: 5353, column: 9, scope: !10828)
!10880 = !DILocation(line: 5353, column: 13, scope: !10828)
!10881 = !DILocation(line: 5353, column: 9, scope: !10822)
!10882 = !DILocation(line: 5354, column: 2, scope: !10827)
!10883 = !DILocation(line: 5354, column: 6, scope: !10827)
!10884 = !DILocation(line: 5354, column: 15, scope: !10827)
!10885 = !DILocation(line: 5356, column: 2, scope: !10827)
!10886 = !DILocation(line: 5357, column: 29, scope: !10827)
!10887 = !DILocation(line: 5357, column: 8, scope: !10827)
!10888 = !DILocation(line: 5357, column: 6, scope: !10827)
!10889 = !DILocation(line: 5358, column: 6, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10827, file: !2, line: 5358, column: 6)
!10891 = !DILocation(line: 5358, column: 10, scope: !10890)
!10892 = !DILocation(line: 5358, column: 6, scope: !10827)
!10893 = !DILocation(line: 5359, column: 12, scope: !10890)
!10894 = !DILocation(line: 5359, column: 10, scope: !10890)
!10895 = !DILocation(line: 5359, column: 6, scope: !10890)
!10896 = !DILocation(line: 5361, column: 13, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10890, file: !2, line: 5360, column: 14)
!10898 = !DILocation(line: 5363, column: 6, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10827, file: !2, line: 5363, column: 6)
!10900 = !DILocation(line: 5363, column: 10, scope: !10899)
!10901 = !DILocation(line: 5363, column: 6, scope: !10827)
!10902 = !DILocation(line: 5364, column: 6, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10899, file: !2, line: 5363, column: 18)
!10904 = !DILocation(line: 5365, column: 10, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10903, file: !2, line: 5365, column: 10)
!10906 = !DILocation(line: 5365, column: 14, scope: !10905)
!10907 = !DILocation(line: 5365, column: 10, scope: !10903)
!10908 = !DILocation(line: 5366, column: 14, scope: !10905)
!10909 = !DILocation(line: 5366, column: 10, scope: !10905)
!10910 = !DILocation(line: 5368, column: 37, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10905, file: !2, line: 5367, column: 11)
!10912 = !DILocation(line: 5368, column: 16, scope: !10911)
!10913 = !DILocation(line: 5368, column: 14, scope: !10911)
!10914 = !DILocation(line: 5369, column: 14, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10911, file: !2, line: 5369, column: 14)
!10916 = !DILocation(line: 5369, column: 18, scope: !10915)
!10917 = !DILocation(line: 5369, column: 14, scope: !10911)
!10918 = !DILocation(line: 5370, column: 13, scope: !10915)
!10919 = !DILocation(line: 5370, column: 11, scope: !10915)
!10920 = !DILocation(line: 5370, column: 7, scope: !10915)
!10921 = !DILocation(line: 5372, column: 7, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10915, file: !2, line: 5371, column: 8)
!10923 = !DILocation(line: 5375, column: 2, scope: !10903)
!10924 = !DILocation(line: 5376, column: 6, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10827, file: !2, line: 5376, column: 6)
!10926 = !DILocation(line: 5376, column: 10, scope: !10925)
!10927 = !DILocation(line: 5376, column: 6, scope: !10827)
!10928 = !DILocation(line: 5377, column: 6, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10925, file: !2, line: 5376, column: 18)
!10930 = !DILocation(line: 5378, column: 2, scope: !10929)
!10931 = !DILocation(line: 5379, column: 6, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10925, file: !2, line: 5378, column: 9)
!10933 = !DILocation(line: 5381, column: 6, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10827, file: !2, line: 5381, column: 6)
!10935 = !DILocation(line: 5381, column: 10, scope: !10934)
!10936 = !DILocation(line: 5381, column: 6, scope: !10827)
!10937 = !DILocation(line: 5382, column: 12, scope: !10934)
!10938 = !DILocation(line: 5382, column: 10, scope: !10934)
!10939 = !DILocation(line: 5382, column: 6, scope: !10934)
!10940 = !DILocation(line: 5383, column: 6, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10827, file: !2, line: 5383, column: 6)
!10942 = !DILocation(line: 5383, column: 12, scope: !10941)
!10943 = !DILocation(line: 5383, column: 17, scope: !10941)
!10944 = !DILocation(line: 5383, column: 6, scope: !10827)
!10945 = !DILocation(line: 5384, column: 6, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10941, file: !2, line: 5383, column: 26)
!10947 = !DILocation(line: 5384, column: 12, scope: !10946)
!10948 = !DILocation(line: 5384, column: 18, scope: !10946)
!10949 = !DILocation(line: 5384, column: 24, scope: !10946)
!10950 = !DILocation(line: 5385, column: 24, scope: !10946)
!10951 = !DILocation(line: 5385, column: 6, scope: !10946)
!10952 = !DILocation(line: 5385, column: 12, scope: !10946)
!10953 = !DILocation(line: 5385, column: 18, scope: !10946)
!10954 = !DILocation(line: 5385, column: 22, scope: !10946)
!10955 = !DILocation(line: 5386, column: 24, scope: !10946)
!10956 = !DILocation(line: 5386, column: 6, scope: !10946)
!10957 = !DILocation(line: 5386, column: 12, scope: !10946)
!10958 = !DILocation(line: 5386, column: 18, scope: !10946)
!10959 = !DILocation(line: 5386, column: 22, scope: !10946)
!10960 = !DILocation(line: 5387, column: 2, scope: !10946)
!10961 = !DILocation(line: 5388, column: 2, scope: !10827)
!10962 = !DILocation(line: 5389, column: 5, scope: !10828)
!10963 = !DILocation(line: 5390, column: 5, scope: !10822)
!10964 = !DILocation(line: 5391, column: 1, scope: !10822)
!10965 = distinct !DISubprogram(name: "xmlFAIsChar", scope: !2, file: !2, line: 4667, type: !6785, scopeLine: 4667, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !10966)
!10966 = !{!10967, !10968, !10969}
!10967 = !DILocalVariable(name: "ctxt", arg: 1, scope: !10965, file: !2, line: 4667, type: !1483)
!10968 = !DILocalVariable(name: "cur", scope: !10965, file: !2, line: 4668, type: !1306)
!10969 = !DILocalVariable(name: "len", scope: !10965, file: !2, line: 4669, type: !1306)
!10970 = !DILocation(line: 4667, column: 33, scope: !10965)
!10971 = !DILocation(line: 4668, column: 5, scope: !10965)
!10972 = !DILocation(line: 4668, column: 9, scope: !10965)
!10973 = !DILocation(line: 4669, column: 5, scope: !10965)
!10974 = !DILocation(line: 4669, column: 9, scope: !10965)
!10975 = !DILocation(line: 4671, column: 11, scope: !10965)
!10976 = !DILocation(line: 4671, column: 9, scope: !10965)
!10977 = !DILocation(line: 4672, column: 10, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10965, file: !2, line: 4672, column: 9)
!10979 = !DILocation(line: 4672, column: 14, scope: !10978)
!10980 = !DILocation(line: 4672, column: 22, scope: !10978)
!10981 = !DILocation(line: 4672, column: 26, scope: !10978)
!10982 = !DILocation(line: 4672, column: 30, scope: !10978)
!10983 = !DILocation(line: 4672, column: 39, scope: !10978)
!10984 = !DILocation(line: 4672, column: 43, scope: !10978)
!10985 = !DILocation(line: 4672, column: 47, scope: !10978)
!10986 = !DILocation(line: 4672, column: 55, scope: !10978)
!10987 = !DILocation(line: 4673, column: 3, scope: !10978)
!10988 = !DILocation(line: 4673, column: 7, scope: !10978)
!10989 = !DILocation(line: 4673, column: 15, scope: !10978)
!10990 = !DILocation(line: 4673, column: 19, scope: !10978)
!10991 = !DILocation(line: 4673, column: 23, scope: !10978)
!10992 = !DILocation(line: 4673, column: 31, scope: !10978)
!10993 = !DILocation(line: 4673, column: 35, scope: !10978)
!10994 = !DILocation(line: 4673, column: 39, scope: !10978)
!10995 = !DILocation(line: 4673, column: 47, scope: !10978)
!10996 = !DILocation(line: 4674, column: 3, scope: !10978)
!10997 = !DILocation(line: 4674, column: 7, scope: !10978)
!10998 = !DILocation(line: 4674, column: 15, scope: !10978)
!10999 = !DILocation(line: 4674, column: 19, scope: !10978)
!11000 = !DILocation(line: 4674, column: 23, scope: !10978)
!11001 = !DILocation(line: 4674, column: 31, scope: !10978)
!11002 = !DILocation(line: 4674, column: 35, scope: !10978)
!11003 = !DILocation(line: 4674, column: 39, scope: !10978)
!11004 = !DILocation(line: 4674, column: 48, scope: !10978)
!11005 = !DILocation(line: 4675, column: 3, scope: !10978)
!11006 = !DILocation(line: 4675, column: 7, scope: !10978)
!11007 = !DILocation(line: 4675, column: 16, scope: !10978)
!11008 = !DILocation(line: 4675, column: 20, scope: !10978)
!11009 = !DILocation(line: 4675, column: 24, scope: !10978)
!11010 = !DILocation(line: 4672, column: 9, scope: !10965)
!11011 = !DILocation(line: 4676, column: 2, scope: !10978)
!11012 = !DILocation(line: 4677, column: 12, scope: !10965)
!11013 = !DILocation(line: 4677, column: 5, scope: !10965)
!11014 = !DILocation(line: 4678, column: 1, scope: !10965)
!11015 = !DISubprogram(name: "xmlStringCurrentChar", scope: !11016, file: !11016, line: 555, type: !11017, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!11016 = !DIFile(filename: "./include/libxml/parserInternals.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "3882fb64fe73ff93c2fc01d00d6a6a44")
!11017 = !DISubroutineType(types: !11018)
!11018 = !{!1306, !11019, !1445, !1419}
!11019 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlParserCtxtPtr", file: !1249, line: 39, baseType: !11020)
!11020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11021, size: 64)
!11021 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlParserCtxt", file: !1249, line: 38, baseType: !11022)
!11022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlParserCtxt", file: !1305, line: 184, size: 6016, elements: !11023)
!11023 = !{!11024, !11361, !11362, !11366, !11367, !11368, !11369, !11370, !11371, !11372, !11373, !11374, !11375, !11377, !11381, !11382, !11383, !11385, !11386, !11404, !11405, !11406, !11407, !11408, !11409, !11410, !11436, !11438, !11439, !11440, !11441, !11442, !11443, !11444, !11445, !11446, !11447, !11448, !11449, !11450, !11451, !11452, !11453, !11454, !11455, !11456, !11457, !11458, !11459, !11460, !11461, !11462, !11463, !11464, !11465, !11466, !11467, !11468, !11472, !11473, !11474, !11475, !11476, !11477, !11478, !11479, !11480, !11481, !11482, !11483, !11487, !11493, !11494, !11495, !11496, !11497, !11498, !11499, !11500, !11504, !11505, !11507, !11508, !11509, !11510, !11511, !11512, !11513, !11514}
!11024 = !DIDerivedType(tag: DW_TAG_member, name: "sax", scope: !11022, file: !1305, line: 185, baseType: !11025, size: 64)
!11025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11026, size: 64)
!11026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlSAXHandler", file: !1305, line: 719, size: 2048, elements: !11027)
!11027 = !{!11028, !11033, !11038, !11040, !11042, !11116, !11244, !11249, !11251, !11264, !11284, !11289, !11306, !11311, !11313, !11318, !11323, !11325, !11330, !11332, !11337, !11339, !11341, !11343, !11345, !11347, !11349, !11351, !11352, !11353, !11358, !11360}
!11028 = !DIDerivedType(tag: DW_TAG_member, name: "internalSubset", scope: !11026, file: !1305, line: 720, baseType: !11029, size: 64)
!11029 = !DIDerivedType(tag: DW_TAG_typedef, name: "internalSubsetSAXFunc", file: !1305, line: 362, baseType: !11030)
!11030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11031, size: 64)
!11031 = !DISubroutineType(types: !11032)
!11032 = !{null, !1335, !1445, !1445, !1445}
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "isStandalone", scope: !11026, file: !1305, line: 721, baseType: !11034, size: 64, offset: 64)
!11034 = !DIDerivedType(tag: DW_TAG_typedef, name: "isStandaloneSAXFunc", file: !1305, line: 640, baseType: !11035)
!11035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11036, size: 64)
!11036 = !DISubroutineType(types: !11037)
!11037 = !{!1306, !1335}
!11038 = !DIDerivedType(tag: DW_TAG_member, name: "hasInternalSubset", scope: !11026, file: !1305, line: 722, baseType: !11039, size: 64, offset: 128)
!11039 = !DIDerivedType(tag: DW_TAG_typedef, name: "hasInternalSubsetSAXFunc", file: !1305, line: 649, baseType: !11035)
!11040 = !DIDerivedType(tag: DW_TAG_member, name: "hasExternalSubset", scope: !11026, file: !1305, line: 723, baseType: !11041, size: 64, offset: 192)
!11041 = !DIDerivedType(tag: DW_TAG_typedef, name: "hasExternalSubsetSAXFunc", file: !1305, line: 659, baseType: !11035)
!11042 = !DIDerivedType(tag: DW_TAG_member, name: "resolveEntity", scope: !11026, file: !1305, line: 724, baseType: !11043, size: 64, offset: 256)
!11043 = !DIDerivedType(tag: DW_TAG_typedef, name: "resolveEntitySAXFunc", file: !1305, line: 350, baseType: !11044)
!11044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11045, size: 64)
!11045 = !DISubroutineType(types: !11046)
!11046 = !{!11047, !1335, !1445, !1445}
!11047 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlParserInputPtr", file: !1249, line: 36, baseType: !11048)
!11048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11049, size: 64)
!11049 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlParserInput", file: !1249, line: 35, baseType: !11050)
!11050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlParserInput", file: !1305, line: 52, size: 832, elements: !11051)
!11051 = !{!11052, !11098, !11099, !11100, !11101, !11102, !11103, !11104, !11105, !11106, !11107, !11112, !11113, !11114, !11115}
!11052 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !11050, file: !1305, line: 54, baseType: !11053, size: 64)
!11053 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlParserInputBufferPtr", file: !1249, line: 29, baseType: !11054)
!11054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11055, size: 64)
!11055 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlParserInputBuffer", file: !1249, line: 28, baseType: !11056)
!11056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlParserInputBuffer", file: !11057, line: 125, size: 512, elements: !11058)
!11057 = !DIFile(filename: "./include/libxml/xmlIO.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "a868e7a396360b2f16d10eac4a34669c")
!11058 = !{!11059, !11060, !11065, !11067, !11089, !11094, !11095, !11096, !11097}
!11059 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !11056, file: !11057, line: 126, baseType: !1335, size: 64)
!11060 = !DIDerivedType(tag: DW_TAG_member, name: "readcallback", scope: !11056, file: !11057, line: 127, baseType: !11061, size: 64, offset: 64)
!11061 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlInputReadCallback", file: !11057, line: 54, baseType: !11062)
!11062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11063, size: 64)
!11063 = !DISubroutineType(types: !11064)
!11064 = !{!1306, !1335, !1481, !1306}
!11065 = !DIDerivedType(tag: DW_TAG_member, name: "closecallback", scope: !11056, file: !11057, line: 128, baseType: !11066, size: 64, offset: 128)
!11066 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlInputCloseCallback", file: !11057, line: 63, baseType: !11035)
!11067 = !DIDerivedType(tag: DW_TAG_member, name: "encoder", scope: !11056, file: !11057, line: 130, baseType: !11068, size: 64, offset: 192)
!11068 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlCharEncodingHandlerPtr", file: !11069, line: 130, baseType: !11070)
!11069 = !DIFile(filename: "./include/libxml/encoding.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "3f36e3b337230a6185e6c519d000e037")
!11070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11071, size: 64)
!11071 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlCharEncodingHandler", file: !11069, line: 129, baseType: !11072)
!11072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlCharEncodingHandler", file: !11069, line: 131, size: 320, elements: !11073)
!11073 = !{!11074, !11075, !11083, !11085, !11088}
!11074 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11072, file: !11069, line: 132, baseType: !1481, size: 64)
!11075 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !11072, file: !11069, line: 133, baseType: !11076, size: 64, offset: 64)
!11076 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlCharEncodingInputFunc", file: !11069, line: 99, baseType: !11077)
!11077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11078, size: 64)
!11078 = !DISubroutineType(types: !11079)
!11079 = !{!1306, !11080, !1419, !11081, !1419}
!11080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!11081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11082, size: 64)
!11082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1354)
!11083 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !11072, file: !11069, line: 134, baseType: !11084, size: 64, offset: 128)
!11084 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlCharEncodingOutputFunc", file: !11069, line: 121, baseType: !11077)
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "iconv_in", scope: !11072, file: !11069, line: 136, baseType: !11086, size: 64, offset: 192)
!11086 = !DIDerivedType(tag: DW_TAG_typedef, name: "libiconv_t", file: !11087, line: 46, baseType: !1335)
!11087 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack/linux-ubuntu22.04-zen2/clang-18.0.0/libiconv-1.17-yjxuwwhaestsjkdrfxfvtlovzccan2px/include/iconv.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build", checksumkind: CSK_MD5, checksum: "b2fc3eb69b19b470f76aa362172c4039")
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "iconv_out", scope: !11072, file: !11069, line: 137, baseType: !11086, size: 64, offset: 256)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !11056, file: !11057, line: 132, baseType: !11090, size: 64, offset: 256)
!11090 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlBufPtr", file: !1249, line: 114, baseType: !11091)
!11091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11092, size: 64)
!11092 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlBuf", file: !1249, line: 105, baseType: !11093)
!11093 = !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlBuf", file: !1249, line: 105, flags: DIFlagFwdDecl)
!11094 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !11056, file: !11057, line: 133, baseType: !11090, size: 64, offset: 320)
!11095 = !DIDerivedType(tag: DW_TAG_member, name: "compressed", scope: !11056, file: !11057, line: 134, baseType: !1306, size: 32, offset: 384)
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !11056, file: !11057, line: 135, baseType: !1306, size: 32, offset: 416)
!11097 = !DIDerivedType(tag: DW_TAG_member, name: "rawconsumed", scope: !11056, file: !11057, line: 136, baseType: !1511, size: 64, offset: 448)
!11098 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !11050, file: !1305, line: 56, baseType: !1482, size: 64, offset: 64)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !11050, file: !1305, line: 57, baseType: !1482, size: 64, offset: 128)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11050, file: !1305, line: 58, baseType: !1445, size: 64, offset: 192)
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !11050, file: !1305, line: 59, baseType: !1445, size: 64, offset: 256)
!11102 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !11050, file: !1305, line: 60, baseType: !1445, size: 64, offset: 320)
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11050, file: !1305, line: 61, baseType: !1306, size: 32, offset: 384)
!11104 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !11050, file: !1305, line: 62, baseType: !1306, size: 32, offset: 416)
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !11050, file: !1305, line: 63, baseType: !1306, size: 32, offset: 448)
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "consumed", scope: !11050, file: !1305, line: 69, baseType: !1511, size: 64, offset: 512)
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !11050, file: !1305, line: 70, baseType: !11108, size: 64, offset: 576)
!11108 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlParserInputDeallocate", file: !1305, line: 50, baseType: !11109)
!11109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11110, size: 64)
!11110 = !DISubroutineType(types: !11111)
!11111 = !{null, !1351}
!11112 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !11050, file: !1305, line: 71, baseType: !1445, size: 64, offset: 640)
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !11050, file: !1305, line: 72, baseType: !1445, size: 64, offset: 704)
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "standalone", scope: !11050, file: !1305, line: 73, baseType: !1306, size: 32, offset: 768)
!11115 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11050, file: !1305, line: 74, baseType: !1306, size: 32, offset: 800)
!11116 = !DIDerivedType(tag: DW_TAG_member, name: "getEntity", scope: !11026, file: !1305, line: 725, baseType: !11117, size: 64, offset: 320)
!11117 = !DIDerivedType(tag: DW_TAG_typedef, name: "getEntitySAXFunc", file: !1305, line: 388, baseType: !11118)
!11118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11119, size: 64)
!11119 = !DISubroutineType(types: !11120)
!11120 = !{!11121, !1335, !1445}
!11121 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlEntityPtr", file: !1249, line: 49, baseType: !11122)
!11122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11123, size: 64)
!11123 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlEntity", file: !1249, line: 48, baseType: !11124)
!11124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlEntity", file: !1284, line: 38, size: 1088, elements: !11125)
!11125 = !{!11126, !11127, !11129, !11130, !11227, !11228, !11229, !11230, !11231, !11232, !11233, !11234, !11235, !11237, !11238, !11239, !11241, !11242, !11243}
!11126 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !11124, file: !1284, line: 39, baseType: !1335, size: 64)
!11127 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11124, file: !1284, line: 40, baseType: !11128, size: 32, offset: 64)
!11128 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElementType", file: !1249, line: 181, baseType: !1248)
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11124, file: !1284, line: 41, baseType: !1445, size: 64, offset: 128)
!11130 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11124, file: !1284, line: 42, baseType: !11131, size: 64, offset: 192)
!11131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11132, size: 64)
!11132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlNode", file: !1249, line: 489, size: 960, elements: !11133)
!11133 = !{!11134, !11135, !11136, !11137, !11138, !11139, !11140, !11141, !11142, !11202, !11205, !11206, !11223, !11224, !11225, !11226}
!11134 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !11132, file: !1249, line: 490, baseType: !1335, size: 64)
!11135 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11132, file: !1249, line: 491, baseType: !11128, size: 32, offset: 64)
!11136 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11132, file: !1249, line: 492, baseType: !1445, size: 64, offset: 128)
!11137 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11132, file: !1249, line: 493, baseType: !11131, size: 64, offset: 192)
!11138 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !11132, file: !1249, line: 494, baseType: !11131, size: 64, offset: 256)
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !11132, file: !1249, line: 495, baseType: !11131, size: 64, offset: 320)
!11140 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11132, file: !1249, line: 496, baseType: !11131, size: 64, offset: 384)
!11141 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11132, file: !1249, line: 497, baseType: !11131, size: 64, offset: 448)
!11142 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !11132, file: !1249, line: 498, baseType: !11143, size: 64, offset: 512)
!11143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11144, size: 64)
!11144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlDoc", file: !1249, line: 551, size: 1408, elements: !11145)
!11145 = !{!11146, !11147, !11148, !11149, !11150, !11151, !11152, !11153, !11154, !11155, !11156, !11157, !11177, !11178, !11189, !11190, !11191, !11192, !11193, !11194, !11195, !11199, !11200, !11201}
!11146 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !11144, file: !1249, line: 552, baseType: !1335, size: 64)
!11147 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11144, file: !1249, line: 553, baseType: !11128, size: 32, offset: 64)
!11148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11144, file: !1249, line: 554, baseType: !1481, size: 64, offset: 128)
!11149 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11144, file: !1249, line: 555, baseType: !11131, size: 64, offset: 192)
!11150 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !11144, file: !1249, line: 556, baseType: !11131, size: 64, offset: 256)
!11151 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !11144, file: !1249, line: 557, baseType: !11131, size: 64, offset: 320)
!11152 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11144, file: !1249, line: 558, baseType: !11131, size: 64, offset: 384)
!11153 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11144, file: !1249, line: 559, baseType: !11131, size: 64, offset: 448)
!11154 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !11144, file: !1249, line: 560, baseType: !11143, size: 64, offset: 512)
!11155 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !11144, file: !1249, line: 563, baseType: !1306, size: 32, offset: 576)
!11156 = !DIDerivedType(tag: DW_TAG_member, name: "standalone", scope: !11144, file: !1249, line: 564, baseType: !1306, size: 32, offset: 608)
!11157 = !DIDerivedType(tag: DW_TAG_member, name: "intSubset", scope: !11144, file: !1249, line: 570, baseType: !11158, size: 64, offset: 640)
!11158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11159, size: 64)
!11159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlDtd", file: !1249, line: 406, size: 1024, elements: !11160)
!11160 = !{!11161, !11162, !11163, !11164, !11165, !11166, !11167, !11168, !11169, !11170, !11171, !11172, !11173, !11174, !11175, !11176}
!11161 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !11159, file: !1249, line: 407, baseType: !1335, size: 64)
!11162 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11159, file: !1249, line: 408, baseType: !11128, size: 32, offset: 64)
!11163 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11159, file: !1249, line: 409, baseType: !1445, size: 64, offset: 128)
!11164 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11159, file: !1249, line: 410, baseType: !11131, size: 64, offset: 192)
!11165 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !11159, file: !1249, line: 411, baseType: !11131, size: 64, offset: 256)
!11166 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !11159, file: !1249, line: 412, baseType: !11143, size: 64, offset: 320)
!11167 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11159, file: !1249, line: 413, baseType: !11131, size: 64, offset: 384)
!11168 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11159, file: !1249, line: 414, baseType: !11131, size: 64, offset: 448)
!11169 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !11159, file: !1249, line: 415, baseType: !11143, size: 64, offset: 512)
!11170 = !DIDerivedType(tag: DW_TAG_member, name: "notations", scope: !11159, file: !1249, line: 418, baseType: !1335, size: 64, offset: 576)
!11171 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !11159, file: !1249, line: 419, baseType: !1335, size: 64, offset: 640)
!11172 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !11159, file: !1249, line: 420, baseType: !1335, size: 64, offset: 704)
!11173 = !DIDerivedType(tag: DW_TAG_member, name: "entities", scope: !11159, file: !1249, line: 421, baseType: !1335, size: 64, offset: 768)
!11174 = !DIDerivedType(tag: DW_TAG_member, name: "ExternalID", scope: !11159, file: !1249, line: 422, baseType: !1445, size: 64, offset: 832)
!11175 = !DIDerivedType(tag: DW_TAG_member, name: "SystemID", scope: !11159, file: !1249, line: 423, baseType: !1445, size: 64, offset: 896)
!11176 = !DIDerivedType(tag: DW_TAG_member, name: "pentities", scope: !11159, file: !1249, line: 424, baseType: !1335, size: 64, offset: 960)
!11177 = !DIDerivedType(tag: DW_TAG_member, name: "extSubset", scope: !11144, file: !1249, line: 571, baseType: !11158, size: 64, offset: 704)
!11178 = !DIDerivedType(tag: DW_TAG_member, name: "oldNs", scope: !11144, file: !1249, line: 572, baseType: !11179, size: 64, offset: 768)
!11179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11180, size: 64)
!11180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlNs", file: !1249, line: 389, size: 384, elements: !11181)
!11181 = !{!11182, !11183, !11185, !11186, !11187, !11188}
!11182 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11180, file: !1249, line: 390, baseType: !11179, size: 64)
!11183 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11180, file: !1249, line: 391, baseType: !11184, size: 32, offset: 64)
!11184 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlNsType", file: !1249, line: 375, baseType: !11128)
!11185 = !DIDerivedType(tag: DW_TAG_member, name: "href", scope: !11180, file: !1249, line: 392, baseType: !1445, size: 64, offset: 128)
!11186 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !11180, file: !1249, line: 393, baseType: !1445, size: 64, offset: 192)
!11187 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !11180, file: !1249, line: 394, baseType: !1335, size: 64, offset: 256)
!11188 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !11180, file: !1249, line: 395, baseType: !11143, size: 64, offset: 320)
!11189 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !11144, file: !1249, line: 573, baseType: !1445, size: 64, offset: 832)
!11190 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !11144, file: !1249, line: 574, baseType: !1445, size: 64, offset: 896)
!11191 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !11144, file: !1249, line: 575, baseType: !1335, size: 64, offset: 960)
!11192 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !11144, file: !1249, line: 576, baseType: !1335, size: 64, offset: 1024)
!11193 = !DIDerivedType(tag: DW_TAG_member, name: "URL", scope: !11144, file: !1249, line: 577, baseType: !1445, size: 64, offset: 1088)
!11194 = !DIDerivedType(tag: DW_TAG_member, name: "charset", scope: !11144, file: !1249, line: 578, baseType: !1306, size: 32, offset: 1152)
!11195 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !11144, file: !1249, line: 580, baseType: !11196, size: 64, offset: 1216)
!11196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11197, size: 64)
!11197 = !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlDict", file: !11198, line: 24, flags: DIFlagFwdDecl)
!11198 = !DIFile(filename: "./include/libxml/dict.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "34f358f6d1debb908632b95b68e9484e")
!11199 = !DIDerivedType(tag: DW_TAG_member, name: "psvi", scope: !11144, file: !1249, line: 581, baseType: !1335, size: 64, offset: 1280)
!11200 = !DIDerivedType(tag: DW_TAG_member, name: "parseFlags", scope: !11144, file: !1249, line: 582, baseType: !1306, size: 32, offset: 1344)
!11201 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !11144, file: !1249, line: 584, baseType: !1306, size: 32, offset: 1376)
!11202 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !11132, file: !1249, line: 501, baseType: !11203, size: 64, offset: 576)
!11203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11204, size: 64)
!11204 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlNs", file: !1249, line: 387, baseType: !11180)
!11205 = !DIDerivedType(tag: DW_TAG_member, name: "content", scope: !11132, file: !1249, line: 502, baseType: !1351, size: 64, offset: 640)
!11206 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !11132, file: !1249, line: 503, baseType: !11207, size: 64, offset: 704)
!11207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11208, size: 64)
!11208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlAttr", file: !1249, line: 434, size: 768, elements: !11209)
!11209 = !{!11210, !11211, !11212, !11213, !11214, !11215, !11216, !11217, !11218, !11219, !11220, !11222}
!11210 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !11208, file: !1249, line: 435, baseType: !1335, size: 64)
!11211 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11208, file: !1249, line: 436, baseType: !11128, size: 32, offset: 64)
!11212 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11208, file: !1249, line: 437, baseType: !1445, size: 64, offset: 128)
!11213 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11208, file: !1249, line: 438, baseType: !11131, size: 64, offset: 192)
!11214 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !11208, file: !1249, line: 439, baseType: !11131, size: 64, offset: 256)
!11215 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !11208, file: !1249, line: 440, baseType: !11131, size: 64, offset: 320)
!11216 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11208, file: !1249, line: 441, baseType: !11207, size: 64, offset: 384)
!11217 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11208, file: !1249, line: 442, baseType: !11207, size: 64, offset: 448)
!11218 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !11208, file: !1249, line: 443, baseType: !11143, size: 64, offset: 512)
!11219 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !11208, file: !1249, line: 444, baseType: !11203, size: 64, offset: 576)
!11220 = !DIDerivedType(tag: DW_TAG_member, name: "atype", scope: !11208, file: !1249, line: 445, baseType: !11221, size: 32, offset: 640)
!11221 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAttributeType", file: !1249, line: 217, baseType: !1271)
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "psvi", scope: !11208, file: !1249, line: 446, baseType: !1335, size: 64, offset: 704)
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "nsDef", scope: !11132, file: !1249, line: 504, baseType: !11203, size: 64, offset: 768)
!11224 = !DIDerivedType(tag: DW_TAG_member, name: "psvi", scope: !11132, file: !1249, line: 505, baseType: !1335, size: 64, offset: 832)
!11225 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !11132, file: !1249, line: 506, baseType: !3810, size: 16, offset: 896)
!11226 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !11132, file: !1249, line: 507, baseType: !3810, size: 16, offset: 912)
!11227 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !11124, file: !1284, line: 43, baseType: !11131, size: 64, offset: 256)
!11228 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !11124, file: !1284, line: 44, baseType: !11158, size: 64, offset: 320)
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11124, file: !1284, line: 45, baseType: !11131, size: 64, offset: 384)
!11230 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11124, file: !1284, line: 46, baseType: !11131, size: 64, offset: 448)
!11231 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !11124, file: !1284, line: 47, baseType: !11143, size: 64, offset: 512)
!11232 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !11124, file: !1284, line: 49, baseType: !1351, size: 64, offset: 576)
!11233 = !DIDerivedType(tag: DW_TAG_member, name: "content", scope: !11124, file: !1284, line: 50, baseType: !1351, size: 64, offset: 640)
!11234 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11124, file: !1284, line: 51, baseType: !1306, size: 32, offset: 704)
!11235 = !DIDerivedType(tag: DW_TAG_member, name: "etype", scope: !11124, file: !1284, line: 52, baseType: !11236, size: 32, offset: 736)
!11236 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlEntityType", file: !1284, line: 31, baseType: !1283)
!11237 = !DIDerivedType(tag: DW_TAG_member, name: "ExternalID", scope: !11124, file: !1284, line: 53, baseType: !1445, size: 64, offset: 768)
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "SystemID", scope: !11124, file: !1284, line: 54, baseType: !1445, size: 64, offset: 832)
!11239 = !DIDerivedType(tag: DW_TAG_member, name: "nexte", scope: !11124, file: !1284, line: 56, baseType: !11240, size: 64, offset: 896)
!11240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11124, size: 64)
!11241 = !DIDerivedType(tag: DW_TAG_member, name: "URI", scope: !11124, file: !1284, line: 57, baseType: !1445, size: 64, offset: 960)
!11242 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !11124, file: !1284, line: 58, baseType: !1306, size: 32, offset: 1024)
!11243 = !DIDerivedType(tag: DW_TAG_member, name: "checked", scope: !11124, file: !1284, line: 59, baseType: !1306, size: 32, offset: 1056)
!11244 = !DIDerivedType(tag: DW_TAG_member, name: "entityDecl", scope: !11026, file: !1305, line: 726, baseType: !11245, size: 64, offset: 384)
!11245 = !DIDerivedType(tag: DW_TAG_typedef, name: "entityDeclSAXFunc", file: !1305, line: 412, baseType: !11246)
!11246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11247, size: 64)
!11247 = !DISubroutineType(types: !11248)
!11248 = !{null, !1335, !1445, !1306, !1445, !1445, !1351}
!11249 = !DIDerivedType(tag: DW_TAG_member, name: "notationDecl", scope: !11026, file: !1305, line: 727, baseType: !11250, size: 64, offset: 448)
!11250 = !DIDerivedType(tag: DW_TAG_typedef, name: "notationDeclSAXFunc", file: !1305, line: 427, baseType: !11030)
!11251 = !DIDerivedType(tag: DW_TAG_member, name: "attributeDecl", scope: !11026, file: !1305, line: 728, baseType: !11252, size: 64, offset: 512)
!11252 = !DIDerivedType(tag: DW_TAG_typedef, name: "attributeDeclSAXFunc", file: !1305, line: 443, baseType: !11253)
!11253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11254, size: 64)
!11254 = !DISubroutineType(types: !11255)
!11255 = !{null, !1335, !1445, !1445, !1306, !1306, !1445, !11256}
!11256 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlEnumerationPtr", file: !1249, line: 239, baseType: !11257)
!11257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11258, size: 64)
!11258 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlEnumeration", file: !1249, line: 238, baseType: !11259)
!11259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlEnumeration", file: !1249, line: 240, size: 128, elements: !11260)
!11260 = !{!11261, !11263}
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11259, file: !1249, line: 241, baseType: !11262, size: 64)
!11262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11259, size: 64)
!11263 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11259, file: !1249, line: 242, baseType: !1445, size: 64, offset: 64)
!11264 = !DIDerivedType(tag: DW_TAG_member, name: "elementDecl", scope: !11026, file: !1305, line: 729, baseType: !11265, size: 64, offset: 576)
!11265 = !DIDerivedType(tag: DW_TAG_typedef, name: "elementDeclSAXFunc", file: !1305, line: 459, baseType: !11266)
!11266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11267, size: 64)
!11267 = !DISubroutineType(types: !11268)
!11268 = !{null, !1335, !1445, !1306, !11269}
!11269 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElementContentPtr", file: !1249, line: 305, baseType: !11270)
!11270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11271, size: 64)
!11271 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElementContent", file: !1249, line: 304, baseType: !11272)
!11272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlElementContent", file: !1249, line: 306, size: 384, elements: !11273)
!11273 = !{!11274, !11276, !11278, !11279, !11281, !11282, !11283}
!11274 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11272, file: !1249, line: 307, baseType: !11275, size: 32)
!11275 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElementContentType", file: !1249, line: 283, baseType: !1292)
!11276 = !DIDerivedType(tag: DW_TAG_member, name: "ocur", scope: !11272, file: !1249, line: 308, baseType: !11277, size: 32, offset: 32)
!11277 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlElementContentOccur", file: !1249, line: 295, baseType: !1298)
!11278 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11272, file: !1249, line: 309, baseType: !1445, size: 64, offset: 64)
!11279 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !11272, file: !1249, line: 310, baseType: !11280, size: 64, offset: 128)
!11280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11272, size: 64)
!11281 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !11272, file: !1249, line: 311, baseType: !11280, size: 64, offset: 192)
!11282 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !11272, file: !1249, line: 312, baseType: !11280, size: 64, offset: 256)
!11283 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !11272, file: !1249, line: 313, baseType: !1445, size: 64, offset: 320)
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "unparsedEntityDecl", scope: !11026, file: !1305, line: 730, baseType: !11285, size: 64, offset: 640)
!11285 = !DIDerivedType(tag: DW_TAG_typedef, name: "unparsedEntityDeclSAXFunc", file: !1305, line: 473, baseType: !11286)
!11286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11287, size: 64)
!11287 = !DISubroutineType(types: !11288)
!11288 = !{null, !1335, !1445, !1445, !1445, !1445}
!11289 = !DIDerivedType(tag: DW_TAG_member, name: "setDocumentLocator", scope: !11026, file: !1305, line: 731, baseType: !11290, size: 64, offset: 704)
!11290 = !DIDerivedType(tag: DW_TAG_typedef, name: "setDocumentLocatorSAXFunc", file: !1305, line: 486, baseType: !11291)
!11291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11292, size: 64)
!11292 = !DISubroutineType(types: !11293)
!11293 = !{null, !1335, !11294}
!11294 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlSAXLocatorPtr", file: !1249, line: 42, baseType: !11295)
!11295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11296, size: 64)
!11296 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlSAXLocator", file: !1249, line: 41, baseType: !11297)
!11297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlSAXLocator", file: !1305, line: 321, size: 256, elements: !11298)
!11298 = !{!11299, !11303, !11304, !11305}
!11299 = !DIDerivedType(tag: DW_TAG_member, name: "getPublicId", scope: !11297, file: !1305, line: 322, baseType: !11300, size: 64)
!11300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11301, size: 64)
!11301 = !DISubroutineType(types: !11302)
!11302 = !{!1445, !1335}
!11303 = !DIDerivedType(tag: DW_TAG_member, name: "getSystemId", scope: !11297, file: !1305, line: 323, baseType: !11300, size: 64, offset: 64)
!11304 = !DIDerivedType(tag: DW_TAG_member, name: "getLineNumber", scope: !11297, file: !1305, line: 324, baseType: !11035, size: 64, offset: 128)
!11305 = !DIDerivedType(tag: DW_TAG_member, name: "getColumnNumber", scope: !11297, file: !1305, line: 325, baseType: !11035, size: 64, offset: 192)
!11306 = !DIDerivedType(tag: DW_TAG_member, name: "startDocument", scope: !11026, file: !1305, line: 732, baseType: !11307, size: 64, offset: 768)
!11307 = !DIDerivedType(tag: DW_TAG_typedef, name: "startDocumentSAXFunc", file: !1305, line: 494, baseType: !11308)
!11308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11309, size: 64)
!11309 = !DISubroutineType(types: !11310)
!11310 = !{null, !1335}
!11311 = !DIDerivedType(tag: DW_TAG_member, name: "endDocument", scope: !11026, file: !1305, line: 733, baseType: !11312, size: 64, offset: 832)
!11312 = !DIDerivedType(tag: DW_TAG_typedef, name: "endDocumentSAXFunc", file: !1305, line: 501, baseType: !11308)
!11313 = !DIDerivedType(tag: DW_TAG_member, name: "startElement", scope: !11026, file: !1305, line: 734, baseType: !11314, size: 64, offset: 896)
!11314 = !DIDerivedType(tag: DW_TAG_typedef, name: "startElementSAXFunc", file: !1305, line: 510, baseType: !11315)
!11315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11316, size: 64)
!11316 = !DISubroutineType(types: !11317)
!11317 = !{null, !1335, !1445, !3732}
!11318 = !DIDerivedType(tag: DW_TAG_member, name: "endElement", scope: !11026, file: !1305, line: 735, baseType: !11319, size: 64, offset: 960)
!11319 = !DIDerivedType(tag: DW_TAG_typedef, name: "endElementSAXFunc", file: !1305, line: 520, baseType: !11320)
!11320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11321, size: 64)
!11321 = !DISubroutineType(types: !11322)
!11322 = !{null, !1335, !1445}
!11323 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !11026, file: !1305, line: 736, baseType: !11324, size: 64, offset: 1024)
!11324 = !DIDerivedType(tag: DW_TAG_typedef, name: "referenceSAXFunc", file: !1305, line: 543, baseType: !11320)
!11325 = !DIDerivedType(tag: DW_TAG_member, name: "characters", scope: !11026, file: !1305, line: 737, baseType: !11326, size: 64, offset: 1088)
!11326 = !DIDerivedType(tag: DW_TAG_typedef, name: "charactersSAXFunc", file: !1305, line: 553, baseType: !11327)
!11327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11328, size: 64)
!11328 = !DISubroutineType(types: !11329)
!11329 = !{null, !1335, !1445, !1306}
!11330 = !DIDerivedType(tag: DW_TAG_member, name: "ignorableWhitespace", scope: !11026, file: !1305, line: 738, baseType: !11331, size: 64, offset: 1152)
!11331 = !DIDerivedType(tag: DW_TAG_typedef, name: "ignorableWhitespaceSAXFunc", file: !1305, line: 565, baseType: !11327)
!11332 = !DIDerivedType(tag: DW_TAG_member, name: "processingInstruction", scope: !11026, file: !1305, line: 739, baseType: !11333, size: 64, offset: 1216)
!11333 = !DIDerivedType(tag: DW_TAG_typedef, name: "processingInstructionSAXFunc", file: !1305, line: 576, baseType: !11334)
!11334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11335, size: 64)
!11335 = !DISubroutineType(types: !11336)
!11336 = !{null, !1335, !1445, !1445}
!11337 = !DIDerivedType(tag: DW_TAG_member, name: "comment", scope: !11026, file: !1305, line: 740, baseType: !11338, size: 64, offset: 1280)
!11338 = !DIDerivedType(tag: DW_TAG_typedef, name: "commentSAXFunc", file: !1305, line: 586, baseType: !11320)
!11339 = !DIDerivedType(tag: DW_TAG_member, name: "warning", scope: !11026, file: !1305, line: 741, baseType: !11340, size: 64, offset: 1344)
!11340 = !DIDerivedType(tag: DW_TAG_typedef, name: "warningSAXFunc", file: !1305, line: 608, baseType: !9692)
!11341 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !11026, file: !1305, line: 742, baseType: !11342, size: 64, offset: 1408)
!11342 = !DIDerivedType(tag: DW_TAG_typedef, name: "errorSAXFunc", file: !1305, line: 618, baseType: !9692)
!11343 = !DIDerivedType(tag: DW_TAG_member, name: "fatalError", scope: !11026, file: !1305, line: 743, baseType: !11344, size: 64, offset: 1472)
!11344 = !DIDerivedType(tag: DW_TAG_typedef, name: "fatalErrorSAXFunc", file: !1305, line: 630, baseType: !9692)
!11345 = !DIDerivedType(tag: DW_TAG_member, name: "getParameterEntity", scope: !11026, file: !1305, line: 744, baseType: !11346, size: 64, offset: 1536)
!11346 = !DIDerivedType(tag: DW_TAG_typedef, name: "getParameterEntitySAXFunc", file: !1305, line: 399, baseType: !11118)
!11347 = !DIDerivedType(tag: DW_TAG_member, name: "cdataBlock", scope: !11026, file: !1305, line: 745, baseType: !11348, size: 64, offset: 1600)
!11348 = !DIDerivedType(tag: DW_TAG_typedef, name: "cdataBlockSAXFunc", file: !1305, line: 596, baseType: !11327)
!11349 = !DIDerivedType(tag: DW_TAG_member, name: "externalSubset", scope: !11026, file: !1305, line: 746, baseType: !11350, size: 64, offset: 1664)
!11350 = !DIDerivedType(tag: DW_TAG_typedef, name: "externalSubsetSAXFunc", file: !1305, line: 375, baseType: !11030)
!11351 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11026, file: !1305, line: 747, baseType: !393, size: 32, offset: 1728)
!11352 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !11026, file: !1305, line: 749, baseType: !1335, size: 64, offset: 1792)
!11353 = !DIDerivedType(tag: DW_TAG_member, name: "startElementNs", scope: !11026, file: !1305, line: 750, baseType: !11354, size: 64, offset: 1856)
!11354 = !DIDerivedType(tag: DW_TAG_typedef, name: "startElementNsSAX2Func", file: !1305, line: 692, baseType: !11355)
!11355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11356, size: 64)
!11356 = !DISubroutineType(types: !11357)
!11357 = !{null, !1335, !1445, !1445, !1445, !1306, !3732, !1306, !1306, !3732}
!11358 = !DIDerivedType(tag: DW_TAG_member, name: "endElementNs", scope: !11026, file: !1305, line: 751, baseType: !11359, size: 64, offset: 1920)
!11359 = !DIDerivedType(tag: DW_TAG_typedef, name: "endElementNsSAX2Func", file: !1305, line: 713, baseType: !11030)
!11360 = !DIDerivedType(tag: DW_TAG_member, name: "serror", scope: !11026, file: !1305, line: 752, baseType: !9668, size: 64, offset: 1984)
!11361 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !11022, file: !1305, line: 186, baseType: !1335, size: 64, offset: 64)
!11362 = !DIDerivedType(tag: DW_TAG_member, name: "myDoc", scope: !11022, file: !1305, line: 187, baseType: !11363, size: 64, offset: 128)
!11363 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlDocPtr", file: !1249, line: 550, baseType: !11364)
!11364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11365, size: 64)
!11365 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlDoc", file: !1249, line: 549, baseType: !11144)
!11366 = !DIDerivedType(tag: DW_TAG_member, name: "wellFormed", scope: !11022, file: !1305, line: 188, baseType: !1306, size: 32, offset: 192)
!11367 = !DIDerivedType(tag: DW_TAG_member, name: "replaceEntities", scope: !11022, file: !1305, line: 189, baseType: !1306, size: 32, offset: 224)
!11368 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !11022, file: !1305, line: 190, baseType: !1445, size: 64, offset: 256)
!11369 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !11022, file: !1305, line: 191, baseType: !1445, size: 64, offset: 320)
!11370 = !DIDerivedType(tag: DW_TAG_member, name: "standalone", scope: !11022, file: !1305, line: 192, baseType: !1306, size: 32, offset: 384)
!11371 = !DIDerivedType(tag: DW_TAG_member, name: "html", scope: !11022, file: !1305, line: 193, baseType: !1306, size: 32, offset: 416)
!11372 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !11022, file: !1305, line: 199, baseType: !11047, size: 64, offset: 448)
!11373 = !DIDerivedType(tag: DW_TAG_member, name: "inputNr", scope: !11022, file: !1305, line: 200, baseType: !1306, size: 32, offset: 512)
!11374 = !DIDerivedType(tag: DW_TAG_member, name: "inputMax", scope: !11022, file: !1305, line: 201, baseType: !1306, size: 32, offset: 544)
!11375 = !DIDerivedType(tag: DW_TAG_member, name: "inputTab", scope: !11022, file: !1305, line: 202, baseType: !11376, size: 64, offset: 576)
!11376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11047, size: 64)
!11377 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11022, file: !1305, line: 205, baseType: !11378, size: 64, offset: 640)
!11378 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlNodePtr", file: !1249, line: 488, baseType: !11379)
!11379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11380, size: 64)
!11380 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlNode", file: !1249, line: 487, baseType: !11132)
!11381 = !DIDerivedType(tag: DW_TAG_member, name: "nodeNr", scope: !11022, file: !1305, line: 206, baseType: !1306, size: 32, offset: 704)
!11382 = !DIDerivedType(tag: DW_TAG_member, name: "nodeMax", scope: !11022, file: !1305, line: 207, baseType: !1306, size: 32, offset: 736)
!11383 = !DIDerivedType(tag: DW_TAG_member, name: "nodeTab", scope: !11022, file: !1305, line: 208, baseType: !11384, size: 64, offset: 768)
!11384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11378, size: 64)
!11385 = !DIDerivedType(tag: DW_TAG_member, name: "record_info", scope: !11022, file: !1305, line: 210, baseType: !1306, size: 32, offset: 832)
!11386 = !DIDerivedType(tag: DW_TAG_member, name: "node_seq", scope: !11022, file: !1305, line: 211, baseType: !11387, size: 192, offset: 896)
!11387 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlParserNodeInfoSeq", file: !1305, line: 96, baseType: !11388)
!11388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlParserNodeInfoSeq", file: !1305, line: 98, size: 192, elements: !11389)
!11389 = !{!11390, !11391, !11392}
!11390 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !11388, file: !1305, line: 99, baseType: !1511, size: 64)
!11391 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !11388, file: !1305, line: 100, baseType: !1511, size: 64, offset: 64)
!11392 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !11388, file: !1305, line: 101, baseType: !11393, size: 64, offset: 128)
!11393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11394, size: 64)
!11394 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlParserNodeInfo", file: !1305, line: 84, baseType: !11395)
!11395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlParserNodeInfo", file: !1305, line: 87, size: 320, elements: !11396)
!11396 = !{!11397, !11400, !11401, !11402, !11403}
!11397 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11395, file: !1305, line: 88, baseType: !11398, size: 64)
!11398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11399, size: 64)
!11399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11132)
!11400 = !DIDerivedType(tag: DW_TAG_member, name: "begin_pos", scope: !11395, file: !1305, line: 90, baseType: !1511, size: 64, offset: 64)
!11401 = !DIDerivedType(tag: DW_TAG_member, name: "begin_line", scope: !11395, file: !1305, line: 91, baseType: !1511, size: 64, offset: 128)
!11402 = !DIDerivedType(tag: DW_TAG_member, name: "end_pos", scope: !11395, file: !1305, line: 92, baseType: !1511, size: 64, offset: 192)
!11403 = !DIDerivedType(tag: DW_TAG_member, name: "end_line", scope: !11395, file: !1305, line: 93, baseType: !1511, size: 64, offset: 256)
!11404 = !DIDerivedType(tag: DW_TAG_member, name: "errNo", scope: !11022, file: !1305, line: 213, baseType: !1306, size: 32, offset: 1088)
!11405 = !DIDerivedType(tag: DW_TAG_member, name: "hasExternalSubset", scope: !11022, file: !1305, line: 215, baseType: !1306, size: 32, offset: 1120)
!11406 = !DIDerivedType(tag: DW_TAG_member, name: "hasPErefs", scope: !11022, file: !1305, line: 216, baseType: !1306, size: 32, offset: 1152)
!11407 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !11022, file: !1305, line: 217, baseType: !1306, size: 32, offset: 1184)
!11408 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !11022, file: !1305, line: 219, baseType: !1306, size: 32, offset: 1216)
!11409 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !11022, file: !1305, line: 220, baseType: !1306, size: 32, offset: 1248)
!11410 = !DIDerivedType(tag: DW_TAG_member, name: "vctxt", scope: !11022, file: !1305, line: 221, baseType: !11411, size: 896, offset: 1280)
!11411 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlValidCtxt", file: !11412, line: 80, baseType: !11413)
!11412 = !DIFile(filename: "./include/libxml/valid.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "99e0ed94c052ced44daebcf2fa21e4d1")
!11413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlValidCtxt", file: !11412, line: 82, size: 896, elements: !11414)
!11414 = !{!11415, !11416, !11418, !11420, !11421, !11422, !11423, !11424, !11425, !11426, !11427, !11431, !11432, !11433, !11434, !11435}
!11415 = !DIDerivedType(tag: DW_TAG_member, name: "userData", scope: !11413, file: !11412, line: 83, baseType: !1335, size: 64)
!11416 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !11413, file: !11412, line: 84, baseType: !11417, size: 64, offset: 64)
!11417 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlValidityErrorFunc", file: !11412, line: 42, baseType: !9692)
!11418 = !DIDerivedType(tag: DW_TAG_member, name: "warning", scope: !11413, file: !11412, line: 85, baseType: !11419, size: 64, offset: 128)
!11419 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlValidityWarningFunc", file: !11412, line: 57, baseType: !9692)
!11420 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11413, file: !11412, line: 88, baseType: !11378, size: 64, offset: 192)
!11421 = !DIDerivedType(tag: DW_TAG_member, name: "nodeNr", scope: !11413, file: !11412, line: 89, baseType: !1306, size: 32, offset: 256)
!11422 = !DIDerivedType(tag: DW_TAG_member, name: "nodeMax", scope: !11413, file: !11412, line: 90, baseType: !1306, size: 32, offset: 288)
!11423 = !DIDerivedType(tag: DW_TAG_member, name: "nodeTab", scope: !11413, file: !11412, line: 91, baseType: !11384, size: 64, offset: 320)
!11424 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11413, file: !11412, line: 93, baseType: !393, size: 32, offset: 384)
!11425 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !11413, file: !11412, line: 94, baseType: !11363, size: 64, offset: 448)
!11426 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !11413, file: !11412, line: 95, baseType: !1306, size: 32, offset: 512)
!11427 = !DIDerivedType(tag: DW_TAG_member, name: "vstate", scope: !11413, file: !11412, line: 98, baseType: !11428, size: 64, offset: 576)
!11428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11429, size: 64)
!11429 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlValidState", file: !11412, line: 28, baseType: !11430)
!11430 = !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlValidState", file: !11412, line: 28, flags: DIFlagFwdDecl)
!11431 = !DIDerivedType(tag: DW_TAG_member, name: "vstateNr", scope: !11413, file: !11412, line: 99, baseType: !1306, size: 32, offset: 640)
!11432 = !DIDerivedType(tag: DW_TAG_member, name: "vstateMax", scope: !11413, file: !11412, line: 100, baseType: !1306, size: 32, offset: 672)
!11433 = !DIDerivedType(tag: DW_TAG_member, name: "vstateTab", scope: !11413, file: !11412, line: 101, baseType: !11428, size: 64, offset: 704)
!11434 = !DIDerivedType(tag: DW_TAG_member, name: "am", scope: !11413, file: !11412, line: 104, baseType: !6588, size: 64, offset: 768)
!11435 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11413, file: !11412, line: 105, baseType: !7360, size: 64, offset: 832)
!11436 = !DIDerivedType(tag: DW_TAG_member, name: "instate", scope: !11022, file: !1305, line: 223, baseType: !11437, size: 32, offset: 2176)
!11437 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlParserInputState", file: !1305, line: 129, baseType: !1304)
!11438 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !11022, file: !1305, line: 224, baseType: !1306, size: 32, offset: 2208)
!11439 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !11022, file: !1305, line: 226, baseType: !1481, size: 64, offset: 2240)
!11440 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11022, file: !1305, line: 229, baseType: !1445, size: 64, offset: 2304)
!11441 = !DIDerivedType(tag: DW_TAG_member, name: "nameNr", scope: !11022, file: !1305, line: 230, baseType: !1306, size: 32, offset: 2368)
!11442 = !DIDerivedType(tag: DW_TAG_member, name: "nameMax", scope: !11022, file: !1305, line: 231, baseType: !1306, size: 32, offset: 2400)
!11443 = !DIDerivedType(tag: DW_TAG_member, name: "nameTab", scope: !11022, file: !1305, line: 232, baseType: !3732, size: 64, offset: 2432)
!11444 = !DIDerivedType(tag: DW_TAG_member, name: "nbChars", scope: !11022, file: !1305, line: 234, baseType: !3808, size: 64, offset: 2496)
!11445 = !DIDerivedType(tag: DW_TAG_member, name: "checkIndex", scope: !11022, file: !1305, line: 235, baseType: !3808, size: 64, offset: 2560)
!11446 = !DIDerivedType(tag: DW_TAG_member, name: "keepBlanks", scope: !11022, file: !1305, line: 236, baseType: !1306, size: 32, offset: 2624)
!11447 = !DIDerivedType(tag: DW_TAG_member, name: "disableSAX", scope: !11022, file: !1305, line: 237, baseType: !1306, size: 32, offset: 2656)
!11448 = !DIDerivedType(tag: DW_TAG_member, name: "inSubset", scope: !11022, file: !1305, line: 238, baseType: !1306, size: 32, offset: 2688)
!11449 = !DIDerivedType(tag: DW_TAG_member, name: "intSubName", scope: !11022, file: !1305, line: 239, baseType: !1445, size: 64, offset: 2752)
!11450 = !DIDerivedType(tag: DW_TAG_member, name: "extSubURI", scope: !11022, file: !1305, line: 240, baseType: !1351, size: 64, offset: 2816)
!11451 = !DIDerivedType(tag: DW_TAG_member, name: "extSubSystem", scope: !11022, file: !1305, line: 241, baseType: !1351, size: 64, offset: 2880)
!11452 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !11022, file: !1305, line: 244, baseType: !1419, size: 64, offset: 2944)
!11453 = !DIDerivedType(tag: DW_TAG_member, name: "spaceNr", scope: !11022, file: !1305, line: 245, baseType: !1306, size: 32, offset: 3008)
!11454 = !DIDerivedType(tag: DW_TAG_member, name: "spaceMax", scope: !11022, file: !1305, line: 246, baseType: !1306, size: 32, offset: 3040)
!11455 = !DIDerivedType(tag: DW_TAG_member, name: "spaceTab", scope: !11022, file: !1305, line: 247, baseType: !1419, size: 64, offset: 3072)
!11456 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !11022, file: !1305, line: 249, baseType: !1306, size: 32, offset: 3136)
!11457 = !DIDerivedType(tag: DW_TAG_member, name: "entity", scope: !11022, file: !1305, line: 250, baseType: !11047, size: 64, offset: 3200)
!11458 = !DIDerivedType(tag: DW_TAG_member, name: "charset", scope: !11022, file: !1305, line: 251, baseType: !1306, size: 32, offset: 3264)
!11459 = !DIDerivedType(tag: DW_TAG_member, name: "nodelen", scope: !11022, file: !1305, line: 253, baseType: !1306, size: 32, offset: 3296)
!11460 = !DIDerivedType(tag: DW_TAG_member, name: "nodemem", scope: !11022, file: !1305, line: 254, baseType: !1306, size: 32, offset: 3328)
!11461 = !DIDerivedType(tag: DW_TAG_member, name: "pedantic", scope: !11022, file: !1305, line: 255, baseType: !1306, size: 32, offset: 3360)
!11462 = !DIDerivedType(tag: DW_TAG_member, name: "_private", scope: !11022, file: !1305, line: 256, baseType: !1335, size: 64, offset: 3392)
!11463 = !DIDerivedType(tag: DW_TAG_member, name: "loadsubset", scope: !11022, file: !1305, line: 258, baseType: !1306, size: 32, offset: 3456)
!11464 = !DIDerivedType(tag: DW_TAG_member, name: "linenumbers", scope: !11022, file: !1305, line: 259, baseType: !1306, size: 32, offset: 3488)
!11465 = !DIDerivedType(tag: DW_TAG_member, name: "catalogs", scope: !11022, file: !1305, line: 260, baseType: !1335, size: 64, offset: 3520)
!11466 = !DIDerivedType(tag: DW_TAG_member, name: "recovery", scope: !11022, file: !1305, line: 261, baseType: !1306, size: 32, offset: 3584)
!11467 = !DIDerivedType(tag: DW_TAG_member, name: "progressive", scope: !11022, file: !1305, line: 262, baseType: !1306, size: 32, offset: 3616)
!11468 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !11022, file: !1305, line: 263, baseType: !11469, size: 64, offset: 3648)
!11469 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlDictPtr", file: !11198, line: 25, baseType: !11470)
!11470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11471, size: 64)
!11471 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlDict", file: !11198, line: 24, baseType: !11197)
!11472 = !DIDerivedType(tag: DW_TAG_member, name: "atts", scope: !11022, file: !1305, line: 264, baseType: !3732, size: 64, offset: 3712)
!11473 = !DIDerivedType(tag: DW_TAG_member, name: "maxatts", scope: !11022, file: !1305, line: 265, baseType: !1306, size: 32, offset: 3776)
!11474 = !DIDerivedType(tag: DW_TAG_member, name: "docdict", scope: !11022, file: !1305, line: 266, baseType: !1306, size: 32, offset: 3808)
!11475 = !DIDerivedType(tag: DW_TAG_member, name: "str_xml", scope: !11022, file: !1305, line: 271, baseType: !1445, size: 64, offset: 3840)
!11476 = !DIDerivedType(tag: DW_TAG_member, name: "str_xmlns", scope: !11022, file: !1305, line: 272, baseType: !1445, size: 64, offset: 3904)
!11477 = !DIDerivedType(tag: DW_TAG_member, name: "str_xml_ns", scope: !11022, file: !1305, line: 273, baseType: !1445, size: 64, offset: 3968)
!11478 = !DIDerivedType(tag: DW_TAG_member, name: "sax2", scope: !11022, file: !1305, line: 278, baseType: !1306, size: 32, offset: 4032)
!11479 = !DIDerivedType(tag: DW_TAG_member, name: "nsNr", scope: !11022, file: !1305, line: 279, baseType: !1306, size: 32, offset: 4064)
!11480 = !DIDerivedType(tag: DW_TAG_member, name: "nsMax", scope: !11022, file: !1305, line: 280, baseType: !1306, size: 32, offset: 4096)
!11481 = !DIDerivedType(tag: DW_TAG_member, name: "nsTab", scope: !11022, file: !1305, line: 281, baseType: !3732, size: 64, offset: 4160)
!11482 = !DIDerivedType(tag: DW_TAG_member, name: "attallocs", scope: !11022, file: !1305, line: 282, baseType: !1419, size: 64, offset: 4224)
!11483 = !DIDerivedType(tag: DW_TAG_member, name: "pushTab", scope: !11022, file: !1305, line: 283, baseType: !11484, size: 64, offset: 4288)
!11484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11485, size: 64)
!11485 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlStartTag", file: !1305, line: 170, baseType: !11486)
!11486 = !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlStartTag", file: !1305, line: 170, flags: DIFlagFwdDecl)
!11487 = !DIDerivedType(tag: DW_TAG_member, name: "attsDefault", scope: !11022, file: !1305, line: 284, baseType: !11488, size: 64, offset: 4352)
!11488 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlHashTablePtr", file: !11489, line: 22, baseType: !11490)
!11489 = !DIFile(filename: "./include/libxml/hash.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "af6927d60ab5a971b68a65626d903bb2")
!11490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11491, size: 64)
!11491 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlHashTable", file: !11489, line: 21, baseType: !11492)
!11492 = !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlHashTable", file: !11489, line: 21, flags: DIFlagFwdDecl)
!11493 = !DIDerivedType(tag: DW_TAG_member, name: "attsSpecial", scope: !11022, file: !1305, line: 285, baseType: !11488, size: 64, offset: 4416)
!11494 = !DIDerivedType(tag: DW_TAG_member, name: "nsWellFormed", scope: !11022, file: !1305, line: 286, baseType: !1306, size: 32, offset: 4480)
!11495 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !11022, file: !1305, line: 287, baseType: !1306, size: 32, offset: 4512)
!11496 = !DIDerivedType(tag: DW_TAG_member, name: "dictNames", scope: !11022, file: !1305, line: 292, baseType: !1306, size: 32, offset: 4544)
!11497 = !DIDerivedType(tag: DW_TAG_member, name: "freeElemsNr", scope: !11022, file: !1305, line: 293, baseType: !1306, size: 32, offset: 4576)
!11498 = !DIDerivedType(tag: DW_TAG_member, name: "freeElems", scope: !11022, file: !1305, line: 294, baseType: !11378, size: 64, offset: 4608)
!11499 = !DIDerivedType(tag: DW_TAG_member, name: "freeAttrsNr", scope: !11022, file: !1305, line: 295, baseType: !1306, size: 32, offset: 4672)
!11500 = !DIDerivedType(tag: DW_TAG_member, name: "freeAttrs", scope: !11022, file: !1305, line: 296, baseType: !11501, size: 64, offset: 4736)
!11501 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAttrPtr", file: !1249, line: 433, baseType: !11502)
!11502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11503, size: 64)
!11503 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlAttr", file: !1249, line: 432, baseType: !11208)
!11504 = !DIDerivedType(tag: DW_TAG_member, name: "lastError", scope: !11022, file: !1305, line: 301, baseType: !9674, size: 704, offset: 4800)
!11505 = !DIDerivedType(tag: DW_TAG_member, name: "parseMode", scope: !11022, file: !1305, line: 302, baseType: !11506, size: 32, offset: 5504)
!11506 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlParserMode", file: !1305, line: 168, baseType: !1326)
!11507 = !DIDerivedType(tag: DW_TAG_member, name: "nbentities", scope: !11022, file: !1305, line: 303, baseType: !1511, size: 64, offset: 5568)
!11508 = !DIDerivedType(tag: DW_TAG_member, name: "sizeentities", scope: !11022, file: !1305, line: 304, baseType: !1511, size: 64, offset: 5632)
!11509 = !DIDerivedType(tag: DW_TAG_member, name: "nodeInfo", scope: !11022, file: !1305, line: 307, baseType: !11393, size: 64, offset: 5696)
!11510 = !DIDerivedType(tag: DW_TAG_member, name: "nodeInfoNr", scope: !11022, file: !1305, line: 308, baseType: !1306, size: 32, offset: 5760)
!11511 = !DIDerivedType(tag: DW_TAG_member, name: "nodeInfoMax", scope: !11022, file: !1305, line: 309, baseType: !1306, size: 32, offset: 5792)
!11512 = !DIDerivedType(tag: DW_TAG_member, name: "nodeInfoTab", scope: !11022, file: !1305, line: 310, baseType: !11393, size: 64, offset: 5824)
!11513 = !DIDerivedType(tag: DW_TAG_member, name: "input_id", scope: !11022, file: !1305, line: 312, baseType: !1306, size: 32, offset: 5888)
!11514 = !DIDerivedType(tag: DW_TAG_member, name: "sizeentcopy", scope: !11022, file: !1305, line: 313, baseType: !1511, size: 64, offset: 5952)
!11515 = distinct !DISubprogram(name: "xmlFAParseCharClass", scope: !2, file: !2, line: 5274, type: !4524, scopeLine: 5274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !11516)
!11516 = !{!11517}
!11517 = !DILocalVariable(name: "ctxt", arg: 1, scope: !11515, file: !2, line: 5274, type: !1483)
!11518 = !DILocation(line: 5274, column: 41, scope: !11515)
!11519 = !DILocation(line: 5275, column: 9, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11515, file: !2, line: 5275, column: 9)
!11521 = !DILocation(line: 5275, column: 13, scope: !11520)
!11522 = !DILocation(line: 5275, column: 9, scope: !11515)
!11523 = !DILocation(line: 5276, column: 2, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11520, file: !2, line: 5275, column: 21)
!11525 = !DILocation(line: 5277, column: 29, scope: !11524)
!11526 = !DILocation(line: 5277, column: 15, scope: !11524)
!11527 = !DILocation(line: 5277, column: 2, scope: !11524)
!11528 = !DILocation(line: 5277, column: 8, scope: !11524)
!11529 = !DILocation(line: 5277, column: 13, scope: !11524)
!11530 = !DILocation(line: 5278, column: 6, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11524, file: !2, line: 5278, column: 6)
!11532 = !DILocation(line: 5278, column: 12, scope: !11531)
!11533 = !DILocation(line: 5278, column: 17, scope: !11531)
!11534 = !DILocation(line: 5278, column: 6, scope: !11524)
!11535 = !DILocation(line: 5279, column: 6, scope: !11531)
!11536 = !DILocation(line: 5280, column: 22, scope: !11524)
!11537 = !DILocation(line: 5280, column: 2, scope: !11524)
!11538 = !DILocation(line: 5281, column: 6, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11524, file: !2, line: 5281, column: 6)
!11540 = !DILocation(line: 5281, column: 10, scope: !11539)
!11541 = !DILocation(line: 5281, column: 6, scope: !11524)
!11542 = !DILocation(line: 5282, column: 6, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11539, file: !2, line: 5281, column: 18)
!11544 = !DILocation(line: 5283, column: 2, scope: !11543)
!11545 = !DILocation(line: 5284, column: 6, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11539, file: !2, line: 5283, column: 9)
!11547 = !DILocation(line: 5286, column: 5, scope: !11524)
!11548 = !DILocation(line: 5287, column: 25, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11520, file: !2, line: 5286, column: 12)
!11550 = !DILocation(line: 5287, column: 2, scope: !11549)
!11551 = !DILocation(line: 5289, column: 1, scope: !11515)
!11552 = distinct !DISubprogram(name: "xmlFAParseCharGroup", scope: !2, file: !2, line: 5238, type: !4524, scopeLine: 5238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !11553)
!11553 = !{!11554, !11555}
!11554 = !DILocalVariable(name: "ctxt", arg: 1, scope: !11552, file: !2, line: 5238, type: !1483)
!11555 = !DILocalVariable(name: "neg", scope: !11552, file: !2, line: 5239, type: !1306)
!11556 = !DILocation(line: 5238, column: 41, scope: !11552)
!11557 = !DILocation(line: 5239, column: 5, scope: !11552)
!11558 = !DILocation(line: 5239, column: 9, scope: !11552)
!11559 = !DILocation(line: 5239, column: 15, scope: !11552)
!11560 = !DILocation(line: 5239, column: 21, scope: !11552)
!11561 = !DILocation(line: 5241, column: 9, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11552, file: !2, line: 5241, column: 9)
!11563 = !DILocation(line: 5241, column: 13, scope: !11562)
!11564 = !DILocation(line: 5241, column: 9, scope: !11552)
!11565 = !DILocation(line: 5242, column: 2, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11562, file: !2, line: 5241, column: 21)
!11567 = !DILocation(line: 5243, column: 15, scope: !11566)
!11568 = !DILocation(line: 5243, column: 21, scope: !11566)
!11569 = !DILocation(line: 5243, column: 14, scope: !11566)
!11570 = !DILocation(line: 5243, column: 2, scope: !11566)
!11571 = !DILocation(line: 5243, column: 8, scope: !11566)
!11572 = !DILocation(line: 5243, column: 12, scope: !11566)
!11573 = !DILocation(line: 5244, column: 25, scope: !11566)
!11574 = !DILocation(line: 5244, column: 2, scope: !11566)
!11575 = !DILocation(line: 5245, column: 14, scope: !11566)
!11576 = !DILocation(line: 5245, column: 2, scope: !11566)
!11577 = !DILocation(line: 5245, column: 8, scope: !11566)
!11578 = !DILocation(line: 5245, column: 12, scope: !11566)
!11579 = !DILocation(line: 5246, column: 5, scope: !11566)
!11580 = !DILocation(line: 5247, column: 5, scope: !11552)
!11581 = !DILocation(line: 5247, column: 13, scope: !11552)
!11582 = !DILocation(line: 5247, column: 17, scope: !11552)
!11583 = !DILocation(line: 5247, column: 25, scope: !11552)
!11584 = !DILocation(line: 5247, column: 29, scope: !11552)
!11585 = !DILocation(line: 5247, column: 35, scope: !11552)
!11586 = !DILocation(line: 5247, column: 41, scope: !11552)
!11587 = !DILocation(line: 0, scope: !11552)
!11588 = !DILocation(line: 5248, column: 7, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11590, file: !2, line: 5248, column: 6)
!11590 = distinct !DILexicalBlock(scope: !11552, file: !2, line: 5247, column: 48)
!11591 = !DILocation(line: 5248, column: 11, scope: !11589)
!11592 = !DILocation(line: 5248, column: 19, scope: !11589)
!11593 = !DILocation(line: 5248, column: 23, scope: !11589)
!11594 = !DILocation(line: 5248, column: 30, scope: !11589)
!11595 = !DILocation(line: 5248, column: 6, scope: !11590)
!11596 = !DILocation(line: 5249, column: 6, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11589, file: !2, line: 5248, column: 39)
!11598 = !DILocation(line: 5250, column: 6, scope: !11597)
!11599 = !DILocation(line: 5251, column: 6, scope: !11597)
!11600 = !DILocation(line: 5251, column: 12, scope: !11597)
!11601 = !DILocation(line: 5251, column: 16, scope: !11597)
!11602 = !DILocation(line: 5252, column: 26, scope: !11597)
!11603 = !DILocation(line: 5252, column: 6, scope: !11597)
!11604 = !DILocation(line: 5253, column: 18, scope: !11597)
!11605 = !DILocation(line: 5253, column: 6, scope: !11597)
!11606 = !DILocation(line: 5253, column: 12, scope: !11597)
!11607 = !DILocation(line: 5253, column: 16, scope: !11597)
!11608 = !DILocation(line: 5254, column: 10, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11597, file: !2, line: 5254, column: 10)
!11610 = !DILocation(line: 5254, column: 14, scope: !11609)
!11611 = !DILocation(line: 5254, column: 10, scope: !11597)
!11612 = !DILocation(line: 5255, column: 3, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11609, file: !2, line: 5254, column: 22)
!11614 = !DILocation(line: 5256, column: 6, scope: !11613)
!11615 = !DILocation(line: 5257, column: 3, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11609, file: !2, line: 5256, column: 13)
!11617 = !DILocation(line: 5259, column: 6, scope: !11597)
!11618 = !DILocation(line: 5261, column: 29, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11589, file: !2, line: 5260, column: 9)
!11620 = !DILocation(line: 5261, column: 6, scope: !11619)
!11621 = distinct !{!11621, !11580, !11622, !1794}
!11622 = !DILocation(line: 5263, column: 5, scope: !11552)
!11623 = !DILocation(line: 5264, column: 1, scope: !11552)
!11624 = distinct !DISubprogram(name: "xmlFAParseCharClassEsc", scope: !2, file: !2, line: 4955, type: !4524, scopeLine: 4955, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !11625)
!11625 = !{!11626, !11627, !11628}
!11626 = !DILocalVariable(name: "ctxt", arg: 1, scope: !11624, file: !2, line: 4955, type: !1483)
!11627 = !DILocalVariable(name: "cur", scope: !11624, file: !2, line: 4956, type: !1306)
!11628 = !DILocalVariable(name: "type", scope: !11629, file: !2, line: 5068, type: !1385)
!11629 = distinct !DILexicalBlock(scope: !11630, file: !2, line: 5067, column: 32)
!11630 = distinct !DILexicalBlock(scope: !11631, file: !2, line: 5065, column: 16)
!11631 = distinct !DILexicalBlock(scope: !11632, file: !2, line: 5002, column: 16)
!11632 = distinct !DILexicalBlock(scope: !11633, file: !2, line: 4987, column: 16)
!11633 = distinct !DILexicalBlock(scope: !11624, file: !2, line: 4974, column: 9)
!11634 = !DILocation(line: 4955, column: 44, scope: !11624)
!11635 = !DILocation(line: 4956, column: 5, scope: !11624)
!11636 = !DILocation(line: 4956, column: 9, scope: !11624)
!11637 = !DILocation(line: 4958, column: 9, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11624, file: !2, line: 4958, column: 9)
!11639 = !DILocation(line: 4958, column: 13, scope: !11638)
!11640 = !DILocation(line: 4958, column: 9, scope: !11624)
!11641 = !DILocation(line: 4959, column: 6, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11643, file: !2, line: 4959, column: 6)
!11643 = distinct !DILexicalBlock(scope: !11638, file: !2, line: 4958, column: 21)
!11644 = !DILocation(line: 4959, column: 12, scope: !11642)
!11645 = !DILocation(line: 4959, column: 17, scope: !11642)
!11646 = !DILocation(line: 4959, column: 6, scope: !11643)
!11647 = !DILocation(line: 4960, column: 33, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11642, file: !2, line: 4959, column: 26)
!11649 = !DILocation(line: 4960, column: 19, scope: !11648)
!11650 = !DILocation(line: 4960, column: 6, scope: !11648)
!11651 = !DILocation(line: 4960, column: 12, scope: !11648)
!11652 = !DILocation(line: 4960, column: 17, scope: !11648)
!11653 = !DILocation(line: 4961, column: 2, scope: !11648)
!11654 = !DILocation(line: 4961, column: 13, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11642, file: !2, line: 4961, column: 13)
!11656 = !DILocation(line: 4961, column: 19, scope: !11655)
!11657 = !DILocation(line: 4961, column: 25, scope: !11655)
!11658 = !DILocation(line: 4961, column: 30, scope: !11655)
!11659 = !DILocation(line: 4961, column: 13, scope: !11642)
!11660 = !DILocation(line: 4962, column: 25, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11655, file: !2, line: 4961, column: 52)
!11662 = !DILocation(line: 4962, column: 31, scope: !11661)
!11663 = !DILocation(line: 4962, column: 37, scope: !11661)
!11664 = !DILocation(line: 4962, column: 43, scope: !11661)
!11665 = !DILocation(line: 4962, column: 49, scope: !11661)
!11666 = !DILocation(line: 4962, column: 6, scope: !11661)
!11667 = !DILocation(line: 4964, column: 2, scope: !11661)
!11668 = !DILocation(line: 4965, column: 2, scope: !11643)
!11669 = !DILocation(line: 4966, column: 2, scope: !11643)
!11670 = !DILocation(line: 4968, column: 9, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11624, file: !2, line: 4968, column: 9)
!11672 = !DILocation(line: 4968, column: 13, scope: !11671)
!11673 = !DILocation(line: 4968, column: 9, scope: !11624)
!11674 = !DILocation(line: 4969, column: 2, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11671, file: !2, line: 4968, column: 22)
!11676 = !DILocation(line: 4970, column: 2, scope: !11675)
!11677 = !DILocation(line: 4972, column: 5, scope: !11624)
!11678 = !DILocation(line: 4973, column: 11, scope: !11624)
!11679 = !DILocation(line: 4973, column: 9, scope: !11624)
!11680 = !DILocation(line: 4974, column: 9, scope: !11633)
!11681 = !DILocation(line: 4974, column: 13, scope: !11633)
!11682 = !DILocation(line: 4974, column: 9, scope: !11624)
!11683 = !DILocation(line: 4975, column: 2, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11633, file: !2, line: 4974, column: 21)
!11685 = !DILocation(line: 4976, column: 6, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11684, file: !2, line: 4976, column: 6)
!11687 = !DILocation(line: 4976, column: 10, scope: !11686)
!11688 = !DILocation(line: 4976, column: 6, scope: !11684)
!11689 = !DILocation(line: 4977, column: 6, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11686, file: !2, line: 4976, column: 18)
!11691 = !DILocation(line: 4978, column: 6, scope: !11690)
!11692 = !DILocation(line: 4980, column: 2, scope: !11684)
!11693 = !DILocation(line: 4981, column: 21, scope: !11684)
!11694 = !DILocation(line: 4981, column: 2, scope: !11684)
!11695 = !DILocation(line: 4982, column: 6, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11684, file: !2, line: 4982, column: 6)
!11697 = !DILocation(line: 4982, column: 10, scope: !11696)
!11698 = !DILocation(line: 4982, column: 6, scope: !11684)
!11699 = !DILocation(line: 4983, column: 6, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11696, file: !2, line: 4982, column: 18)
!11701 = !DILocation(line: 4984, column: 6, scope: !11700)
!11702 = !DILocation(line: 4986, column: 2, scope: !11684)
!11703 = !DILocation(line: 4987, column: 5, scope: !11684)
!11704 = !DILocation(line: 4987, column: 16, scope: !11632)
!11705 = !DILocation(line: 4987, column: 20, scope: !11632)
!11706 = !DILocation(line: 4987, column: 16, scope: !11633)
!11707 = !DILocation(line: 4988, column: 2, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11632, file: !2, line: 4987, column: 28)
!11709 = !DILocation(line: 4989, column: 6, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11708, file: !2, line: 4989, column: 6)
!11711 = !DILocation(line: 4989, column: 10, scope: !11710)
!11712 = !DILocation(line: 4989, column: 6, scope: !11708)
!11713 = !DILocation(line: 4990, column: 6, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11710, file: !2, line: 4989, column: 18)
!11715 = !DILocation(line: 4991, column: 6, scope: !11714)
!11716 = !DILocation(line: 4993, column: 2, scope: !11708)
!11717 = !DILocation(line: 4994, column: 21, scope: !11708)
!11718 = !DILocation(line: 4994, column: 2, scope: !11708)
!11719 = !DILocation(line: 4995, column: 13, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11708, file: !2, line: 4995, column: 13)
!11721 = !DILocation(line: 4995, column: 19, scope: !11720)
!11722 = !DILocation(line: 4995, column: 24, scope: !11720)
!11723 = !DILocation(line: 4995, column: 13, scope: !11708)
!11724 = !DILocation(line: 4996, column: 6, scope: !11720)
!11725 = !DILocation(line: 4996, column: 12, scope: !11720)
!11726 = !DILocation(line: 4996, column: 18, scope: !11720)
!11727 = !DILocation(line: 4996, column: 22, scope: !11720)
!11728 = !DILocation(line: 4997, column: 6, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11708, file: !2, line: 4997, column: 6)
!11730 = !DILocation(line: 4997, column: 10, scope: !11729)
!11731 = !DILocation(line: 4997, column: 6, scope: !11708)
!11732 = !DILocation(line: 4998, column: 6, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11729, file: !2, line: 4997, column: 18)
!11734 = !DILocation(line: 4999, column: 6, scope: !11733)
!11735 = !DILocation(line: 5001, column: 2, scope: !11708)
!11736 = !DILocation(line: 5002, column: 5, scope: !11708)
!11737 = !DILocation(line: 5002, column: 17, scope: !11631)
!11738 = !DILocation(line: 5002, column: 21, scope: !11631)
!11739 = !DILocation(line: 5002, column: 29, scope: !11631)
!11740 = !DILocation(line: 5002, column: 33, scope: !11631)
!11741 = !DILocation(line: 5002, column: 37, scope: !11631)
!11742 = !DILocation(line: 5002, column: 45, scope: !11631)
!11743 = !DILocation(line: 5002, column: 49, scope: !11631)
!11744 = !DILocation(line: 5002, column: 53, scope: !11631)
!11745 = !DILocation(line: 5002, column: 61, scope: !11631)
!11746 = !DILocation(line: 5002, column: 65, scope: !11631)
!11747 = !DILocation(line: 5002, column: 69, scope: !11631)
!11748 = !DILocation(line: 5002, column: 78, scope: !11631)
!11749 = !DILocation(line: 5003, column: 3, scope: !11631)
!11750 = !DILocation(line: 5003, column: 7, scope: !11631)
!11751 = !DILocation(line: 5003, column: 15, scope: !11631)
!11752 = !DILocation(line: 5003, column: 19, scope: !11631)
!11753 = !DILocation(line: 5003, column: 23, scope: !11631)
!11754 = !DILocation(line: 5003, column: 31, scope: !11631)
!11755 = !DILocation(line: 5003, column: 35, scope: !11631)
!11756 = !DILocation(line: 5003, column: 39, scope: !11631)
!11757 = !DILocation(line: 5003, column: 47, scope: !11631)
!11758 = !DILocation(line: 5003, column: 51, scope: !11631)
!11759 = !DILocation(line: 5003, column: 55, scope: !11631)
!11760 = !DILocation(line: 5003, column: 63, scope: !11631)
!11761 = !DILocation(line: 5004, column: 3, scope: !11631)
!11762 = !DILocation(line: 5004, column: 7, scope: !11631)
!11763 = !DILocation(line: 5004, column: 15, scope: !11631)
!11764 = !DILocation(line: 5004, column: 19, scope: !11631)
!11765 = !DILocation(line: 5004, column: 23, scope: !11631)
!11766 = !DILocation(line: 5004, column: 31, scope: !11631)
!11767 = !DILocation(line: 5004, column: 35, scope: !11631)
!11768 = !DILocation(line: 5004, column: 39, scope: !11631)
!11769 = !DILocation(line: 5004, column: 47, scope: !11631)
!11770 = !DILocation(line: 5004, column: 51, scope: !11631)
!11771 = !DILocation(line: 5004, column: 55, scope: !11631)
!11772 = !DILocation(line: 5004, column: 63, scope: !11631)
!11773 = !DILocation(line: 5005, column: 3, scope: !11631)
!11774 = !DILocation(line: 5005, column: 7, scope: !11631)
!11775 = !DILocation(line: 5005, column: 15, scope: !11631)
!11776 = !DILocation(line: 5005, column: 19, scope: !11631)
!11777 = !DILocation(line: 5005, column: 23, scope: !11631)
!11778 = !DILocation(line: 5005, column: 32, scope: !11631)
!11779 = !DILocation(line: 5005, column: 36, scope: !11631)
!11780 = !DILocation(line: 5005, column: 40, scope: !11631)
!11781 = !DILocation(line: 5005, column: 49, scope: !11631)
!11782 = !DILocation(line: 5005, column: 53, scope: !11631)
!11783 = !DILocation(line: 5005, column: 57, scope: !11631)
!11784 = !DILocation(line: 5005, column: 66, scope: !11631)
!11785 = !DILocation(line: 5006, column: 3, scope: !11631)
!11786 = !DILocation(line: 5006, column: 7, scope: !11631)
!11787 = !DILocation(line: 5006, column: 16, scope: !11631)
!11788 = !DILocation(line: 5010, column: 3, scope: !11631)
!11789 = !DILocation(line: 5010, column: 7, scope: !11631)
!11790 = !DILocation(line: 5010, column: 15, scope: !11631)
!11791 = !DILocation(line: 5011, column: 3, scope: !11631)
!11792 = !DILocation(line: 5011, column: 7, scope: !11631)
!11793 = !DILocation(line: 5011, column: 15, scope: !11631)
!11794 = !DILocation(line: 5012, column: 3, scope: !11631)
!11795 = !DILocation(line: 5012, column: 7, scope: !11631)
!11796 = !DILocation(line: 5012, column: 15, scope: !11631)
!11797 = !DILocation(line: 5013, column: 3, scope: !11631)
!11798 = !DILocation(line: 5013, column: 7, scope: !11631)
!11799 = !DILocation(line: 5013, column: 15, scope: !11631)
!11800 = !DILocation(line: 5014, column: 3, scope: !11631)
!11801 = !DILocation(line: 5014, column: 7, scope: !11631)
!11802 = !DILocation(line: 5014, column: 15, scope: !11631)
!11803 = !DILocation(line: 5015, column: 3, scope: !11631)
!11804 = !DILocation(line: 5015, column: 7, scope: !11631)
!11805 = !DILocation(line: 5015, column: 15, scope: !11631)
!11806 = !DILocation(line: 5016, column: 3, scope: !11631)
!11807 = !DILocation(line: 5016, column: 7, scope: !11631)
!11808 = !DILocation(line: 5016, column: 15, scope: !11631)
!11809 = !DILocation(line: 5017, column: 3, scope: !11631)
!11810 = !DILocation(line: 5017, column: 7, scope: !11631)
!11811 = !DILocation(line: 5017, column: 15, scope: !11631)
!11812 = !DILocation(line: 5018, column: 3, scope: !11631)
!11813 = !DILocation(line: 5018, column: 7, scope: !11631)
!11814 = !DILocation(line: 5018, column: 15, scope: !11631)
!11815 = !DILocation(line: 5019, column: 3, scope: !11631)
!11816 = !DILocation(line: 5019, column: 7, scope: !11631)
!11817 = !DILocation(line: 5019, column: 15, scope: !11631)
!11818 = !DILocation(line: 5020, column: 3, scope: !11631)
!11819 = !DILocation(line: 5020, column: 7, scope: !11631)
!11820 = !DILocation(line: 5020, column: 15, scope: !11631)
!11821 = !DILocation(line: 5021, column: 3, scope: !11631)
!11822 = !DILocation(line: 5021, column: 7, scope: !11631)
!11823 = !DILocation(line: 5021, column: 15, scope: !11631)
!11824 = !DILocation(line: 5022, column: 3, scope: !11631)
!11825 = !DILocation(line: 5022, column: 7, scope: !11631)
!11826 = !DILocation(line: 5022, column: 15, scope: !11631)
!11827 = !DILocation(line: 5023, column: 3, scope: !11631)
!11828 = !DILocation(line: 5023, column: 7, scope: !11631)
!11829 = !DILocation(line: 5023, column: 15, scope: !11631)
!11830 = !DILocation(line: 5024, column: 3, scope: !11631)
!11831 = !DILocation(line: 5024, column: 7, scope: !11631)
!11832 = !DILocation(line: 5002, column: 16, scope: !11632)
!11833 = !DILocation(line: 5025, column: 6, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11835, file: !2, line: 5025, column: 6)
!11835 = distinct !DILexicalBlock(scope: !11631, file: !2, line: 5024, column: 16)
!11836 = !DILocation(line: 5025, column: 12, scope: !11834)
!11837 = !DILocation(line: 5025, column: 17, scope: !11834)
!11838 = !DILocation(line: 5025, column: 6, scope: !11835)
!11839 = !DILocation(line: 5026, column: 33, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11834, file: !2, line: 5025, column: 26)
!11841 = !DILocation(line: 5026, column: 19, scope: !11840)
!11842 = !DILocation(line: 5026, column: 6, scope: !11840)
!11843 = !DILocation(line: 5026, column: 12, scope: !11840)
!11844 = !DILocation(line: 5026, column: 17, scope: !11840)
!11845 = !DILocation(line: 5027, column: 10, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11840, file: !2, line: 5027, column: 10)
!11847 = !DILocation(line: 5027, column: 16, scope: !11846)
!11848 = !DILocation(line: 5027, column: 21, scope: !11846)
!11849 = !DILocation(line: 5027, column: 10, scope: !11840)
!11850 = !DILocation(line: 5028, column: 18, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11846, file: !2, line: 5027, column: 30)
!11852 = !DILocation(line: 5028, column: 10, scope: !11851)
!11853 = !DILocation(line: 5030, column: 11, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11851, file: !2, line: 5028, column: 23)
!11855 = !DILocation(line: 5030, column: 17, scope: !11854)
!11856 = !DILocation(line: 5030, column: 23, scope: !11854)
!11857 = !DILocation(line: 5030, column: 33, scope: !11854)
!11858 = !DILocation(line: 5031, column: 4, scope: !11854)
!11859 = !DILocation(line: 5033, column: 11, scope: !11854)
!11860 = !DILocation(line: 5033, column: 17, scope: !11854)
!11861 = !DILocation(line: 5033, column: 23, scope: !11854)
!11862 = !DILocation(line: 5033, column: 33, scope: !11854)
!11863 = !DILocation(line: 5034, column: 4, scope: !11854)
!11864 = !DILocation(line: 5036, column: 11, scope: !11854)
!11865 = !DILocation(line: 5036, column: 17, scope: !11854)
!11866 = !DILocation(line: 5036, column: 23, scope: !11854)
!11867 = !DILocation(line: 5036, column: 33, scope: !11854)
!11868 = !DILocation(line: 5037, column: 4, scope: !11854)
!11869 = !DILocation(line: 5039, column: 34, scope: !11854)
!11870 = !DILocation(line: 5039, column: 10, scope: !11854)
!11871 = !DILocation(line: 5039, column: 8, scope: !11854)
!11872 = !DILocation(line: 5040, column: 8, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11854, file: !2, line: 5040, column: 8)
!11874 = !DILocation(line: 5040, column: 12, scope: !11873)
!11875 = !DILocation(line: 5040, column: 8, scope: !11854)
!11876 = !DILocation(line: 5041, column: 8, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11873, file: !2, line: 5040, column: 17)
!11878 = !DILocation(line: 5043, column: 28, scope: !11854)
!11879 = !DILocation(line: 5043, column: 4, scope: !11854)
!11880 = !DILocation(line: 5043, column: 10, scope: !11854)
!11881 = !DILocation(line: 5043, column: 16, scope: !11854)
!11882 = !DILocation(line: 5043, column: 26, scope: !11854)
!11883 = !DILocation(line: 5044, column: 4, scope: !11854)
!11884 = !DILocation(line: 5046, column: 28, scope: !11854)
!11885 = !DILocation(line: 5046, column: 4, scope: !11854)
!11886 = !DILocation(line: 5046, column: 10, scope: !11854)
!11887 = !DILocation(line: 5046, column: 16, scope: !11854)
!11888 = !DILocation(line: 5046, column: 26, scope: !11854)
!11889 = !DILocation(line: 5047, column: 3, scope: !11854)
!11890 = !DILocation(line: 5048, column: 6, scope: !11851)
!11891 = !DILocation(line: 5049, column: 2, scope: !11840)
!11892 = !DILocation(line: 5049, column: 13, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11834, file: !2, line: 5049, column: 13)
!11894 = !DILocation(line: 5049, column: 19, scope: !11893)
!11895 = !DILocation(line: 5049, column: 25, scope: !11893)
!11896 = !DILocation(line: 5049, column: 30, scope: !11893)
!11897 = !DILocation(line: 5049, column: 13, scope: !11834)
!11898 = !DILocation(line: 5050, column: 21, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11893, file: !2, line: 5049, column: 52)
!11900 = !DILocation(line: 5050, column: 13, scope: !11899)
!11901 = !DILocation(line: 5052, column: 25, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11899, file: !2, line: 5050, column: 26)
!11903 = !DILocation(line: 5053, column: 21, scope: !11902)
!11904 = !DILocation(line: 5055, column: 25, scope: !11902)
!11905 = !DILocation(line: 5056, column: 21, scope: !11902)
!11906 = !DILocation(line: 5058, column: 25, scope: !11902)
!11907 = !DILocation(line: 5059, column: 21, scope: !11902)
!11908 = !DILocation(line: 5061, column: 25, scope: !11899)
!11909 = !DILocation(line: 5061, column: 31, scope: !11899)
!11910 = !DILocation(line: 5061, column: 37, scope: !11899)
!11911 = !DILocation(line: 5061, column: 43, scope: !11899)
!11912 = !DILocation(line: 5061, column: 49, scope: !11899)
!11913 = !DILocation(line: 5062, column: 31, scope: !11899)
!11914 = !DILocation(line: 5062, column: 36, scope: !11899)
!11915 = !DILocation(line: 5061, column: 6, scope: !11899)
!11916 = !DILocation(line: 5063, column: 2, scope: !11899)
!11917 = !DILocation(line: 5064, column: 2, scope: !11835)
!11918 = !DILocation(line: 5065, column: 5, scope: !11835)
!11919 = !DILocation(line: 5065, column: 17, scope: !11630)
!11920 = !DILocation(line: 5065, column: 21, scope: !11630)
!11921 = !DILocation(line: 5065, column: 29, scope: !11630)
!11922 = !DILocation(line: 5065, column: 33, scope: !11630)
!11923 = !DILocation(line: 5065, column: 37, scope: !11630)
!11924 = !DILocation(line: 5065, column: 45, scope: !11630)
!11925 = !DILocation(line: 5065, column: 49, scope: !11630)
!11926 = !DILocation(line: 5065, column: 53, scope: !11630)
!11927 = !DILocation(line: 5065, column: 61, scope: !11630)
!11928 = !DILocation(line: 5065, column: 65, scope: !11630)
!11929 = !DILocation(line: 5065, column: 69, scope: !11630)
!11930 = !DILocation(line: 5065, column: 77, scope: !11630)
!11931 = !DILocation(line: 5066, column: 3, scope: !11630)
!11932 = !DILocation(line: 5066, column: 7, scope: !11630)
!11933 = !DILocation(line: 5066, column: 15, scope: !11630)
!11934 = !DILocation(line: 5066, column: 19, scope: !11630)
!11935 = !DILocation(line: 5066, column: 23, scope: !11630)
!11936 = !DILocation(line: 5066, column: 31, scope: !11630)
!11937 = !DILocation(line: 5066, column: 35, scope: !11630)
!11938 = !DILocation(line: 5066, column: 39, scope: !11630)
!11939 = !DILocation(line: 5066, column: 47, scope: !11630)
!11940 = !DILocation(line: 5066, column: 51, scope: !11630)
!11941 = !DILocation(line: 5066, column: 55, scope: !11630)
!11942 = !DILocation(line: 5066, column: 63, scope: !11630)
!11943 = !DILocation(line: 5067, column: 3, scope: !11630)
!11944 = !DILocation(line: 5067, column: 7, scope: !11630)
!11945 = !DILocation(line: 5067, column: 15, scope: !11630)
!11946 = !DILocation(line: 5067, column: 19, scope: !11630)
!11947 = !DILocation(line: 5067, column: 23, scope: !11630)
!11948 = !DILocation(line: 5065, column: 16, scope: !11631)
!11949 = !DILocation(line: 5068, column: 2, scope: !11629)
!11950 = !DILocation(line: 5068, column: 17, scope: !11629)
!11951 = !DILocation(line: 5070, column: 10, scope: !11629)
!11952 = !DILocation(line: 5070, column: 2, scope: !11629)
!11953 = !DILocation(line: 5072, column: 8, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11629, file: !2, line: 5070, column: 15)
!11955 = !DILocation(line: 5073, column: 3, scope: !11954)
!11956 = !DILocation(line: 5075, column: 8, scope: !11954)
!11957 = !DILocation(line: 5076, column: 3, scope: !11954)
!11958 = !DILocation(line: 5078, column: 8, scope: !11954)
!11959 = !DILocation(line: 5079, column: 3, scope: !11954)
!11960 = !DILocation(line: 5081, column: 8, scope: !11954)
!11961 = !DILocation(line: 5082, column: 3, scope: !11954)
!11962 = !DILocation(line: 5084, column: 8, scope: !11954)
!11963 = !DILocation(line: 5085, column: 3, scope: !11954)
!11964 = !DILocation(line: 5087, column: 8, scope: !11954)
!11965 = !DILocation(line: 5088, column: 3, scope: !11954)
!11966 = !DILocation(line: 5090, column: 8, scope: !11954)
!11967 = !DILocation(line: 5091, column: 3, scope: !11954)
!11968 = !DILocation(line: 5093, column: 8, scope: !11954)
!11969 = !DILocation(line: 5094, column: 3, scope: !11954)
!11970 = !DILocation(line: 5096, column: 8, scope: !11954)
!11971 = !DILocation(line: 5097, column: 3, scope: !11954)
!11972 = !DILocation(line: 5099, column: 8, scope: !11954)
!11973 = !DILocation(line: 5100, column: 3, scope: !11954)
!11974 = !DILocation(line: 5102, column: 2, scope: !11629)
!11975 = !DILocation(line: 5103, column: 6, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11629, file: !2, line: 5103, column: 6)
!11977 = !DILocation(line: 5103, column: 12, scope: !11976)
!11978 = !DILocation(line: 5103, column: 17, scope: !11976)
!11979 = !DILocation(line: 5103, column: 6, scope: !11629)
!11980 = !DILocation(line: 5104, column: 33, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11976, file: !2, line: 5103, column: 26)
!11982 = !DILocation(line: 5104, column: 39, scope: !11981)
!11983 = !DILocation(line: 5104, column: 19, scope: !11981)
!11984 = !DILocation(line: 5104, column: 6, scope: !11981)
!11985 = !DILocation(line: 5104, column: 12, scope: !11981)
!11986 = !DILocation(line: 5104, column: 17, scope: !11981)
!11987 = !DILocation(line: 5105, column: 2, scope: !11981)
!11988 = !DILocation(line: 5105, column: 13, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11976, file: !2, line: 5105, column: 13)
!11990 = !DILocation(line: 5105, column: 19, scope: !11989)
!11991 = !DILocation(line: 5105, column: 25, scope: !11989)
!11992 = !DILocation(line: 5105, column: 30, scope: !11989)
!11993 = !DILocation(line: 5105, column: 13, scope: !11976)
!11994 = !DILocation(line: 5106, column: 25, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11989, file: !2, line: 5105, column: 52)
!11996 = !DILocation(line: 5106, column: 31, scope: !11995)
!11997 = !DILocation(line: 5106, column: 37, scope: !11995)
!11998 = !DILocation(line: 5106, column: 43, scope: !11995)
!11999 = !DILocation(line: 5106, column: 49, scope: !11995)
!12000 = !DILocation(line: 5107, column: 11, scope: !11995)
!12001 = !DILocation(line: 5106, column: 6, scope: !11995)
!12002 = !DILocation(line: 5108, column: 2, scope: !11995)
!12003 = !DILocation(line: 5109, column: 5, scope: !11630)
!12004 = !DILocation(line: 5109, column: 5, scope: !11629)
!12005 = !DILocation(line: 5110, column: 2, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !11630, file: !2, line: 5109, column: 12)
!12007 = !DILocation(line: 5112, column: 1, scope: !11624)
!12008 = distinct !DISubprogram(name: "xmlFAParsePosCharGroup", scope: !2, file: !2, line: 5217, type: !4524, scopeLine: 5217, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !12009)
!12009 = !{!12010}
!12010 = !DILocalVariable(name: "ctxt", arg: 1, scope: !12008, file: !2, line: 5217, type: !1483)
!12011 = !DILocation(line: 5217, column: 44, scope: !12008)
!12012 = !DILocation(line: 5218, column: 5, scope: !12008)
!12013 = !DILocation(line: 5219, column: 6, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12015, file: !2, line: 5219, column: 6)
!12015 = distinct !DILexicalBlock(scope: !12008, file: !2, line: 5218, column: 8)
!12016 = !DILocation(line: 5219, column: 10, scope: !12014)
!12017 = !DILocation(line: 5219, column: 6, scope: !12015)
!12018 = !DILocation(line: 5220, column: 29, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12014, file: !2, line: 5219, column: 19)
!12020 = !DILocation(line: 5220, column: 6, scope: !12019)
!12021 = !DILocation(line: 5221, column: 2, scope: !12019)
!12022 = !DILocation(line: 5222, column: 26, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12014, file: !2, line: 5221, column: 9)
!12024 = !DILocation(line: 5222, column: 6, scope: !12023)
!12025 = !DILocation(line: 5224, column: 5, scope: !12015)
!12026 = !DILocation(line: 5224, column: 15, scope: !12008)
!12027 = !DILocation(line: 5224, column: 19, scope: !12008)
!12028 = !DILocation(line: 5224, column: 27, scope: !12008)
!12029 = !DILocation(line: 5224, column: 31, scope: !12008)
!12030 = !DILocation(line: 5224, column: 35, scope: !12008)
!12031 = !DILocation(line: 5224, column: 43, scope: !12008)
!12032 = !DILocation(line: 5225, column: 15, scope: !12008)
!12033 = !DILocation(line: 5225, column: 19, scope: !12008)
!12034 = !DILocation(line: 5225, column: 25, scope: !12008)
!12035 = !DILocation(line: 5225, column: 29, scope: !12008)
!12036 = !DILocation(line: 5225, column: 35, scope: !12008)
!12037 = !DILocation(line: 5225, column: 41, scope: !12008)
!12038 = !DILocation(line: 0, scope: !12008)
!12039 = distinct !{!12039, !12012, !12040, !1794}
!12040 = !DILocation(line: 5225, column: 46, scope: !12008)
!12041 = !DILocation(line: 5226, column: 1, scope: !12008)
!12042 = distinct !DISubprogram(name: "xmlFAParseCharRange", scope: !2, file: !2, line: 5125, type: !4524, scopeLine: 5125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !12043)
!12043 = !{!12044, !12045, !12046, !12047, !12048}
!12044 = !DILocalVariable(name: "ctxt", arg: 1, scope: !12042, file: !2, line: 5125, type: !1483)
!12045 = !DILocalVariable(name: "cur", scope: !12042, file: !2, line: 5126, type: !1306)
!12046 = !DILocalVariable(name: "len", scope: !12042, file: !2, line: 5126, type: !1306)
!12047 = !DILocalVariable(name: "start", scope: !12042, file: !2, line: 5127, type: !1306)
!12048 = !DILocalVariable(name: "end", scope: !12042, file: !2, line: 5128, type: !1306)
!12049 = !DILocation(line: 5125, column: 41, scope: !12042)
!12050 = !DILocation(line: 5126, column: 5, scope: !12042)
!12051 = !DILocation(line: 5126, column: 9, scope: !12042)
!12052 = !DILocation(line: 5126, column: 14, scope: !12042)
!12053 = !DILocation(line: 5127, column: 5, scope: !12042)
!12054 = !DILocation(line: 5127, column: 9, scope: !12042)
!12055 = !DILocation(line: 5128, column: 5, scope: !12042)
!12056 = !DILocation(line: 5128, column: 9, scope: !12042)
!12057 = !DILocation(line: 5130, column: 9, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12042, file: !2, line: 5130, column: 9)
!12059 = !DILocation(line: 5130, column: 13, scope: !12058)
!12060 = !DILocation(line: 5130, column: 9, scope: !12042)
!12061 = !DILocation(line: 5131, column: 9, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12058, file: !2, line: 5130, column: 22)
!12063 = !DILocation(line: 5132, column: 2, scope: !12062)
!12064 = !DILocation(line: 5135, column: 11, scope: !12042)
!12065 = !DILocation(line: 5135, column: 9, scope: !12042)
!12066 = !DILocation(line: 5136, column: 9, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12042, file: !2, line: 5136, column: 9)
!12068 = !DILocation(line: 5136, column: 13, scope: !12067)
!12069 = !DILocation(line: 5136, column: 9, scope: !12042)
!12070 = !DILocation(line: 5137, column: 2, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12067, file: !2, line: 5136, column: 22)
!12072 = !DILocation(line: 5138, column: 8, scope: !12071)
!12073 = !DILocation(line: 5138, column: 6, scope: !12071)
!12074 = !DILocation(line: 5139, column: 10, scope: !12071)
!12075 = !DILocation(line: 5139, column: 2, scope: !12071)
!12076 = !DILocation(line: 5140, column: 22, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12071, file: !2, line: 5139, column: 15)
!12078 = !DILocation(line: 5140, column: 29, scope: !12077)
!12079 = !DILocation(line: 5141, column: 22, scope: !12077)
!12080 = !DILocation(line: 5141, column: 29, scope: !12077)
!12081 = !DILocation(line: 5142, column: 22, scope: !12077)
!12082 = !DILocation(line: 5142, column: 29, scope: !12077)
!12083 = !DILocation(line: 5146, column: 11, scope: !12077)
!12084 = !DILocation(line: 5146, column: 9, scope: !12077)
!12085 = !DILocation(line: 5146, column: 16, scope: !12077)
!12086 = !DILocation(line: 5148, column: 3, scope: !12077)
!12087 = !DILocation(line: 5149, column: 3, scope: !12077)
!12088 = !DILocation(line: 5151, column: 8, scope: !12071)
!12089 = !DILocation(line: 5151, column: 6, scope: !12071)
!12090 = !DILocation(line: 5152, column: 13, scope: !12071)
!12091 = !DILocation(line: 5153, column: 5, scope: !12071)
!12092 = !DILocation(line: 5153, column: 17, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12067, file: !2, line: 5153, column: 16)
!12094 = !DILocation(line: 5153, column: 21, scope: !12093)
!12095 = !DILocation(line: 5153, column: 30, scope: !12093)
!12096 = !DILocation(line: 5153, column: 34, scope: !12093)
!12097 = !DILocation(line: 5153, column: 38, scope: !12093)
!12098 = !DILocation(line: 5153, column: 16, scope: !12067)
!12099 = !DILocation(line: 5154, column: 23, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12093, file: !2, line: 5153, column: 48)
!12101 = !DILocation(line: 5154, column: 21, scope: !12100)
!12102 = !DILocation(line: 5154, column: 13, scope: !12100)
!12103 = !DILocation(line: 5155, column: 5, scope: !12100)
!12104 = !DILocation(line: 5156, column: 2, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12093, file: !2, line: 5155, column: 12)
!12106 = !DILocation(line: 5157, column: 2, scope: !12105)
!12107 = !DILocation(line: 5163, column: 10, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12042, file: !2, line: 5163, column: 9)
!12109 = !DILocation(line: 5163, column: 16, scope: !12108)
!12110 = !DILocation(line: 5163, column: 24, scope: !12108)
!12111 = !DILocation(line: 5163, column: 28, scope: !12108)
!12112 = !DILocation(line: 5163, column: 35, scope: !12108)
!12113 = !DILocation(line: 5163, column: 43, scope: !12108)
!12114 = !DILocation(line: 5163, column: 47, scope: !12108)
!12115 = !DILocation(line: 5163, column: 52, scope: !12108)
!12116 = !DILocation(line: 5163, column: 60, scope: !12108)
!12117 = !DILocation(line: 5163, column: 64, scope: !12108)
!12118 = !DILocation(line: 5163, column: 69, scope: !12108)
!12119 = !DILocation(line: 5163, column: 9, scope: !12042)
!12120 = !DILocation(line: 5164, column: 2, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12108, file: !2, line: 5163, column: 78)
!12122 = !DILocation(line: 5165, column: 2, scope: !12121)
!12123 = !DILocation(line: 5167, column: 5, scope: !12042)
!12124 = !DILocation(line: 5168, column: 11, scope: !12042)
!12125 = !DILocation(line: 5168, column: 9, scope: !12042)
!12126 = !DILocation(line: 5169, column: 10, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12042, file: !2, line: 5169, column: 9)
!12128 = !DILocation(line: 5169, column: 14, scope: !12127)
!12129 = !DILocation(line: 5169, column: 22, scope: !12127)
!12130 = !DILocation(line: 5169, column: 26, scope: !12127)
!12131 = !DILocation(line: 5169, column: 33, scope: !12127)
!12132 = !DILocation(line: 5169, column: 41, scope: !12127)
!12133 = !DILocation(line: 5169, column: 45, scope: !12127)
!12134 = !DILocation(line: 5169, column: 52, scope: !12127)
!12135 = !DILocation(line: 5169, column: 9, scope: !12042)
!12136 = !DILocation(line: 5170, column: 28, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12127, file: !2, line: 5169, column: 61)
!12138 = !DILocation(line: 5170, column: 34, scope: !12137)
!12139 = !DILocation(line: 5170, column: 40, scope: !12137)
!12140 = !DILocation(line: 5170, column: 46, scope: !12137)
!12141 = !DILocation(line: 5170, column: 52, scope: !12137)
!12142 = !DILocation(line: 5171, column: 37, scope: !12137)
!12143 = !DILocation(line: 5171, column: 44, scope: !12137)
!12144 = !DILocation(line: 5170, column: 9, scope: !12137)
!12145 = !DILocation(line: 5172, column: 2, scope: !12137)
!12146 = !DILocation(line: 5174, column: 5, scope: !12042)
!12147 = !DILocation(line: 5175, column: 11, scope: !12042)
!12148 = !DILocation(line: 5175, column: 9, scope: !12042)
!12149 = !DILocation(line: 5176, column: 9, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12042, file: !2, line: 5176, column: 9)
!12151 = !DILocation(line: 5176, column: 13, scope: !12150)
!12152 = !DILocation(line: 5176, column: 9, scope: !12042)
!12153 = !DILocation(line: 5177, column: 2, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12150, file: !2, line: 5176, column: 22)
!12155 = !DILocation(line: 5178, column: 8, scope: !12154)
!12156 = !DILocation(line: 5178, column: 6, scope: !12154)
!12157 = !DILocation(line: 5179, column: 10, scope: !12154)
!12158 = !DILocation(line: 5179, column: 2, scope: !12154)
!12159 = !DILocation(line: 5180, column: 20, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12154, file: !2, line: 5179, column: 15)
!12161 = !DILocation(line: 5180, column: 27, scope: !12160)
!12162 = !DILocation(line: 5181, column: 20, scope: !12160)
!12163 = !DILocation(line: 5181, column: 27, scope: !12160)
!12164 = !DILocation(line: 5182, column: 20, scope: !12160)
!12165 = !DILocation(line: 5182, column: 27, scope: !12160)
!12166 = !DILocation(line: 5186, column: 9, scope: !12160)
!12167 = !DILocation(line: 5186, column: 7, scope: !12160)
!12168 = !DILocation(line: 5186, column: 14, scope: !12160)
!12169 = !DILocation(line: 5188, column: 3, scope: !12160)
!12170 = !DILocation(line: 5189, column: 3, scope: !12160)
!12171 = !DILocation(line: 5191, column: 13, scope: !12154)
!12172 = !DILocation(line: 5192, column: 5, scope: !12154)
!12173 = !DILocation(line: 5192, column: 17, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12150, file: !2, line: 5192, column: 16)
!12175 = !DILocation(line: 5192, column: 21, scope: !12174)
!12176 = !DILocation(line: 5192, column: 30, scope: !12174)
!12177 = !DILocation(line: 5192, column: 34, scope: !12174)
!12178 = !DILocation(line: 5192, column: 38, scope: !12174)
!12179 = !DILocation(line: 5192, column: 47, scope: !12174)
!12180 = !DILocation(line: 5192, column: 51, scope: !12174)
!12181 = !DILocation(line: 5192, column: 55, scope: !12174)
!12182 = !DILocation(line: 5192, column: 16, scope: !12150)
!12183 = !DILocation(line: 5193, column: 15, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12174, file: !2, line: 5192, column: 65)
!12185 = !DILocation(line: 5193, column: 13, scope: !12184)
!12186 = !DILocation(line: 5194, column: 5, scope: !12184)
!12187 = !DILocation(line: 5195, column: 2, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12174, file: !2, line: 5194, column: 12)
!12189 = !DILocation(line: 5196, column: 2, scope: !12188)
!12190 = !DILocation(line: 5200, column: 9, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12042, file: !2, line: 5200, column: 9)
!12192 = !DILocation(line: 5200, column: 15, scope: !12191)
!12193 = !DILocation(line: 5200, column: 13, scope: !12191)
!12194 = !DILocation(line: 5200, column: 9, scope: !12042)
!12195 = !DILocation(line: 5201, column: 2, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12191, file: !2, line: 5200, column: 22)
!12197 = !DILocation(line: 5202, column: 5, scope: !12196)
!12198 = !DILocation(line: 5203, column: 9, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12191, file: !2, line: 5202, column: 12)
!12200 = !DILocation(line: 5204, column: 28, scope: !12199)
!12201 = !DILocation(line: 5204, column: 34, scope: !12199)
!12202 = !DILocation(line: 5204, column: 40, scope: !12199)
!12203 = !DILocation(line: 5204, column: 46, scope: !12199)
!12204 = !DILocation(line: 5204, column: 52, scope: !12199)
!12205 = !DILocation(line: 5205, column: 34, scope: !12199)
!12206 = !DILocation(line: 5205, column: 41, scope: !12199)
!12207 = !DILocation(line: 5204, column: 9, scope: !12199)
!12208 = !DILocation(line: 5207, column: 5, scope: !12042)
!12209 = !DILocation(line: 5208, column: 1, scope: !12042)
!12210 = distinct !DISubprogram(name: "xmlRegAtomAddRange", scope: !2, file: !2, line: 1241, type: !12211, scopeLine: 1243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !12213)
!12211 = !DISubroutineType(types: !12212)
!12212 = !{null, !1483, !1378, !1306, !1385, !1306, !1306, !1351}
!12213 = !{!12214, !12215, !12216, !12217, !12218, !12219, !12220, !12221, !12222}
!12214 = !DILocalVariable(name: "ctxt", arg: 1, scope: !12210, file: !2, line: 1241, type: !1483)
!12215 = !DILocalVariable(name: "atom", arg: 2, scope: !12210, file: !2, line: 1241, type: !1378)
!12216 = !DILocalVariable(name: "neg", arg: 3, scope: !12210, file: !2, line: 1242, type: !1306)
!12217 = !DILocalVariable(name: "type", arg: 4, scope: !12210, file: !2, line: 1242, type: !1385)
!12218 = !DILocalVariable(name: "start", arg: 5, scope: !12210, file: !2, line: 1242, type: !1306)
!12219 = !DILocalVariable(name: "end", arg: 6, scope: !12210, file: !2, line: 1242, type: !1306)
!12220 = !DILocalVariable(name: "blockName", arg: 7, scope: !12210, file: !2, line: 1243, type: !1351)
!12221 = !DILocalVariable(name: "range", scope: !12210, file: !2, line: 1244, type: !1401)
!12222 = !DILocalVariable(name: "tmp", scope: !12223, file: !2, line: 1264, type: !1400)
!12223 = distinct !DILexicalBlock(scope: !12224, file: !2, line: 1263, column: 51)
!12224 = distinct !DILexicalBlock(scope: !12225, file: !2, line: 1263, column: 16)
!12225 = distinct !DILexicalBlock(scope: !12210, file: !2, line: 1254, column: 9)
!12226 = !DILocation(line: 1241, column: 40, scope: !12210)
!12227 = !DILocation(line: 1241, column: 60, scope: !12210)
!12228 = !DILocation(line: 1242, column: 17, scope: !12210)
!12229 = !DILocation(line: 1242, column: 37, scope: !12210)
!12230 = !DILocation(line: 1242, column: 47, scope: !12210)
!12231 = !DILocation(line: 1242, column: 58, scope: !12210)
!12232 = !DILocation(line: 1243, column: 15, scope: !12210)
!12233 = !DILocation(line: 1244, column: 5, scope: !12210)
!12234 = !DILocation(line: 1244, column: 20, scope: !12210)
!12235 = !DILocation(line: 1246, column: 9, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12210, file: !2, line: 1246, column: 9)
!12237 = !DILocation(line: 1246, column: 14, scope: !12236)
!12238 = !DILocation(line: 1246, column: 9, scope: !12210)
!12239 = !DILocation(line: 1247, column: 2, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12236, file: !2, line: 1246, column: 23)
!12241 = !DILocation(line: 1248, column: 2, scope: !12240)
!12242 = !DILocation(line: 1250, column: 9, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12210, file: !2, line: 1250, column: 9)
!12244 = !DILocation(line: 1250, column: 15, scope: !12243)
!12245 = !DILocation(line: 1250, column: 20, scope: !12243)
!12246 = !DILocation(line: 1250, column: 9, scope: !12210)
!12247 = !DILocation(line: 1251, column: 2, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12243, file: !2, line: 1250, column: 42)
!12249 = !DILocation(line: 1252, column: 2, scope: !12248)
!12250 = !DILocation(line: 1254, column: 9, scope: !12225)
!12251 = !DILocation(line: 1254, column: 15, scope: !12225)
!12252 = !{!2160, !1546, i64 72}
!12253 = !DILocation(line: 1254, column: 25, scope: !12225)
!12254 = !DILocation(line: 1254, column: 9, scope: !12210)
!12255 = !DILocation(line: 1255, column: 2, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12225, file: !2, line: 1254, column: 31)
!12257 = !DILocation(line: 1255, column: 8, scope: !12256)
!12258 = !DILocation(line: 1255, column: 18, scope: !12256)
!12259 = !DILocation(line: 1256, column: 36, scope: !12256)
!12260 = !DILocation(line: 1256, column: 46, scope: !12256)
!12261 = !DILocation(line: 1256, column: 52, scope: !12256)
!12262 = !DILocation(line: 1256, column: 62, scope: !12256)
!12263 = !DILocation(line: 1256, column: 2, scope: !12256)
!12264 = !DILocation(line: 1256, column: 8, scope: !12256)
!12265 = !DILocation(line: 1256, column: 15, scope: !12256)
!12266 = !DILocation(line: 1258, column: 6, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12256, file: !2, line: 1258, column: 6)
!12268 = !DILocation(line: 1258, column: 12, scope: !12267)
!12269 = !DILocation(line: 1258, column: 19, scope: !12267)
!12270 = !DILocation(line: 1258, column: 6, scope: !12256)
!12271 = !DILocation(line: 1259, column: 25, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12267, file: !2, line: 1258, column: 28)
!12273 = !DILocation(line: 1259, column: 6, scope: !12272)
!12274 = !DILocation(line: 1260, column: 6, scope: !12272)
!12275 = !DILocation(line: 1260, column: 12, scope: !12272)
!12276 = !DILocation(line: 1260, column: 22, scope: !12272)
!12277 = !DILocation(line: 1261, column: 6, scope: !12272)
!12278 = !DILocation(line: 1263, column: 5, scope: !12256)
!12279 = !DILocation(line: 1263, column: 16, scope: !12224)
!12280 = !DILocation(line: 1263, column: 22, scope: !12224)
!12281 = !DILocation(line: 1263, column: 34, scope: !12224)
!12282 = !DILocation(line: 1263, column: 40, scope: !12224)
!12283 = !DILocation(line: 1263, column: 31, scope: !12224)
!12284 = !DILocation(line: 1263, column: 16, scope: !12225)
!12285 = !DILocation(line: 1264, column: 2, scope: !12223)
!12286 = !DILocation(line: 1264, column: 18, scope: !12223)
!12287 = !DILocation(line: 1265, column: 2, scope: !12223)
!12288 = !DILocation(line: 1265, column: 8, scope: !12223)
!12289 = !DILocation(line: 1265, column: 18, scope: !12223)
!12290 = !DILocation(line: 1266, column: 27, scope: !12223)
!12291 = !DILocation(line: 1266, column: 38, scope: !12223)
!12292 = !DILocation(line: 1266, column: 44, scope: !12223)
!12293 = !DILocation(line: 1266, column: 52, scope: !12223)
!12294 = !DILocation(line: 1266, column: 58, scope: !12223)
!12295 = !DILocation(line: 1266, column: 68, scope: !12223)
!12296 = !DILocation(line: 1266, column: 6, scope: !12223)
!12297 = !DILocation(line: 1268, column: 6, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12223, file: !2, line: 1268, column: 6)
!12299 = !DILocation(line: 1268, column: 10, scope: !12298)
!12300 = !DILocation(line: 1268, column: 6, scope: !12223)
!12301 = !DILocation(line: 1269, column: 25, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12298, file: !2, line: 1268, column: 19)
!12303 = !DILocation(line: 1269, column: 6, scope: !12302)
!12304 = !DILocation(line: 1270, column: 6, scope: !12302)
!12305 = !DILocation(line: 1270, column: 12, scope: !12302)
!12306 = !DILocation(line: 1270, column: 22, scope: !12302)
!12307 = !DILocation(line: 1271, column: 6, scope: !12302)
!12308 = !DILocation(line: 1273, column: 17, scope: !12223)
!12309 = !DILocation(line: 1273, column: 2, scope: !12223)
!12310 = !DILocation(line: 1273, column: 8, scope: !12223)
!12311 = !DILocation(line: 1273, column: 15, scope: !12223)
!12312 = !DILocation(line: 1274, column: 5, scope: !12224)
!12313 = !DILocation(line: 1274, column: 5, scope: !12223)
!12314 = !DILocation(line: 1275, column: 28, scope: !12210)
!12315 = !DILocation(line: 1275, column: 34, scope: !12210)
!12316 = !DILocation(line: 1275, column: 39, scope: !12210)
!12317 = !DILocation(line: 1275, column: 45, scope: !12210)
!12318 = !DILocation(line: 1275, column: 52, scope: !12210)
!12319 = !DILocation(line: 1275, column: 13, scope: !12210)
!12320 = !DILocation(line: 1275, column: 11, scope: !12210)
!12321 = !DILocation(line: 1276, column: 9, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12210, file: !2, line: 1276, column: 9)
!12323 = !DILocation(line: 1276, column: 15, scope: !12322)
!12324 = !DILocation(line: 1276, column: 9, scope: !12210)
!12325 = !DILocation(line: 1277, column: 2, scope: !12322)
!12326 = !DILocation(line: 1278, column: 24, scope: !12210)
!12327 = !DILocation(line: 1278, column: 5, scope: !12210)
!12328 = !DILocation(line: 1278, column: 12, scope: !12210)
!12329 = !DILocation(line: 1278, column: 22, scope: !12210)
!12330 = !{!10402, !1528, i64 16}
!12331 = !DILocation(line: 1279, column: 38, scope: !12210)
!12332 = !DILocation(line: 1279, column: 5, scope: !12210)
!12333 = !DILocation(line: 1279, column: 11, scope: !12210)
!12334 = !DILocation(line: 1279, column: 18, scope: !12210)
!12335 = !DILocation(line: 1279, column: 24, scope: !12210)
!12336 = !DILocation(line: 1279, column: 32, scope: !12210)
!12337 = !DILocation(line: 1279, column: 36, scope: !12210)
!12338 = !DILocation(line: 1281, column: 1, scope: !12210)
!12339 = distinct !DISubprogram(name: "xmlRegNewRange", scope: !2, file: !2, line: 739, type: !12340, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !12342)
!12340 = !DISubroutineType(types: !12341)
!12341 = !{!1401, !1483, !1306, !1385, !1306, !1306}
!12342 = !{!12343, !12344, !12345, !12346, !12347, !12348}
!12343 = !DILocalVariable(name: "ctxt", arg: 1, scope: !12339, file: !2, line: 739, type: !1483)
!12344 = !DILocalVariable(name: "neg", arg: 2, scope: !12339, file: !2, line: 740, type: !1306)
!12345 = !DILocalVariable(name: "type", arg: 3, scope: !12339, file: !2, line: 740, type: !1385)
!12346 = !DILocalVariable(name: "start", arg: 4, scope: !12339, file: !2, line: 740, type: !1306)
!12347 = !DILocalVariable(name: "end", arg: 5, scope: !12339, file: !2, line: 740, type: !1306)
!12348 = !DILocalVariable(name: "ret", scope: !12339, file: !2, line: 741, type: !1401)
!12349 = !DILocation(line: 739, column: 36, scope: !12339)
!12350 = !DILocation(line: 740, column: 13, scope: !12339)
!12351 = !DILocation(line: 740, column: 33, scope: !12339)
!12352 = !DILocation(line: 740, column: 43, scope: !12339)
!12353 = !DILocation(line: 740, column: 54, scope: !12339)
!12354 = !DILocation(line: 741, column: 5, scope: !12339)
!12355 = !DILocation(line: 741, column: 20, scope: !12339)
!12356 = !DILocation(line: 743, column: 28, scope: !12339)
!12357 = !DILocation(line: 743, column: 9, scope: !12339)
!12358 = !DILocation(line: 744, column: 9, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12339, file: !2, line: 744, column: 9)
!12360 = !DILocation(line: 744, column: 13, scope: !12359)
!12361 = !DILocation(line: 744, column: 9, scope: !12339)
!12362 = !DILocation(line: 745, column: 21, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12359, file: !2, line: 744, column: 22)
!12364 = !DILocation(line: 745, column: 2, scope: !12363)
!12365 = !DILocation(line: 746, column: 2, scope: !12363)
!12366 = !DILocation(line: 748, column: 16, scope: !12339)
!12367 = !DILocation(line: 748, column: 5, scope: !12339)
!12368 = !DILocation(line: 748, column: 10, scope: !12339)
!12369 = !DILocation(line: 748, column: 14, scope: !12339)
!12370 = !DILocation(line: 749, column: 17, scope: !12339)
!12371 = !DILocation(line: 749, column: 5, scope: !12339)
!12372 = !DILocation(line: 749, column: 10, scope: !12339)
!12373 = !DILocation(line: 749, column: 15, scope: !12339)
!12374 = !DILocation(line: 750, column: 18, scope: !12339)
!12375 = !DILocation(line: 750, column: 5, scope: !12339)
!12376 = !DILocation(line: 750, column: 10, scope: !12339)
!12377 = !DILocation(line: 750, column: 16, scope: !12339)
!12378 = !DILocation(line: 751, column: 16, scope: !12339)
!12379 = !DILocation(line: 751, column: 5, scope: !12339)
!12380 = !DILocation(line: 751, column: 10, scope: !12339)
!12381 = !DILocation(line: 751, column: 14, scope: !12339)
!12382 = !DILocation(line: 752, column: 12, scope: !12339)
!12383 = !DILocation(line: 752, column: 5, scope: !12339)
!12384 = !DILocation(line: 753, column: 1, scope: !12339)
!12385 = distinct !DISubprogram(name: "xmlFAParseCharProp", scope: !2, file: !2, line: 4697, type: !4524, scopeLine: 4697, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !12386)
!12386 = !{!12387, !12388, !12389, !12390, !12391}
!12387 = !DILocalVariable(name: "ctxt", arg: 1, scope: !12385, file: !2, line: 4697, type: !1483)
!12388 = !DILocalVariable(name: "cur", scope: !12385, file: !2, line: 4698, type: !1306)
!12389 = !DILocalVariable(name: "type", scope: !12385, file: !2, line: 4699, type: !1385)
!12390 = !DILocalVariable(name: "blockName", scope: !12385, file: !2, line: 4700, type: !1351)
!12391 = !DILocalVariable(name: "start", scope: !12392, file: !2, line: 4863, type: !1445)
!12392 = distinct !DILexicalBlock(scope: !12393, file: !2, line: 4862, column: 28)
!12393 = distinct !DILexicalBlock(scope: !12394, file: !2, line: 4862, column: 16)
!12394 = distinct !DILexicalBlock(scope: !12395, file: !2, line: 4839, column: 16)
!12395 = distinct !DILexicalBlock(scope: !12396, file: !2, line: 4816, column: 16)
!12396 = distinct !DILexicalBlock(scope: !12397, file: !2, line: 4797, column: 16)
!12397 = distinct !DILexicalBlock(scope: !12398, file: !2, line: 4762, column: 16)
!12398 = distinct !DILexicalBlock(scope: !12399, file: !2, line: 4743, column: 16)
!12399 = distinct !DILexicalBlock(scope: !12400, file: !2, line: 4724, column: 16)
!12400 = distinct !DILexicalBlock(scope: !12385, file: !2, line: 4703, column: 9)
!12401 = !DILocation(line: 4697, column: 40, scope: !12385)
!12402 = !DILocation(line: 4698, column: 5, scope: !12385)
!12403 = !DILocation(line: 4698, column: 9, scope: !12385)
!12404 = !DILocation(line: 4699, column: 5, scope: !12385)
!12405 = !DILocation(line: 4699, column: 20, scope: !12385)
!12406 = !DILocation(line: 4700, column: 5, scope: !12385)
!12407 = !DILocation(line: 4700, column: 14, scope: !12385)
!12408 = !DILocation(line: 4702, column: 11, scope: !12385)
!12409 = !DILocation(line: 4702, column: 9, scope: !12385)
!12410 = !DILocation(line: 4703, column: 9, scope: !12400)
!12411 = !DILocation(line: 4703, column: 13, scope: !12400)
!12412 = !DILocation(line: 4703, column: 9, scope: !12385)
!12413 = !DILocation(line: 4704, column: 2, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12400, file: !2, line: 4703, column: 21)
!12415 = !DILocation(line: 4705, column: 8, scope: !12414)
!12416 = !DILocation(line: 4705, column: 6, scope: !12414)
!12417 = !DILocation(line: 4706, column: 6, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12414, file: !2, line: 4706, column: 6)
!12419 = !DILocation(line: 4706, column: 10, scope: !12418)
!12420 = !DILocation(line: 4706, column: 6, scope: !12414)
!12421 = !DILocation(line: 4707, column: 6, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12418, file: !2, line: 4706, column: 18)
!12423 = !DILocation(line: 4708, column: 11, scope: !12422)
!12424 = !DILocation(line: 4709, column: 2, scope: !12422)
!12425 = !DILocation(line: 4709, column: 13, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12418, file: !2, line: 4709, column: 13)
!12427 = !DILocation(line: 4709, column: 17, scope: !12426)
!12428 = !DILocation(line: 4709, column: 13, scope: !12418)
!12429 = !DILocation(line: 4710, column: 6, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12426, file: !2, line: 4709, column: 25)
!12431 = !DILocation(line: 4711, column: 11, scope: !12430)
!12432 = !DILocation(line: 4712, column: 2, scope: !12430)
!12433 = !DILocation(line: 4712, column: 13, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12426, file: !2, line: 4712, column: 13)
!12435 = !DILocation(line: 4712, column: 17, scope: !12434)
!12436 = !DILocation(line: 4712, column: 13, scope: !12426)
!12437 = !DILocation(line: 4713, column: 6, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12434, file: !2, line: 4712, column: 25)
!12439 = !DILocation(line: 4714, column: 11, scope: !12438)
!12440 = !DILocation(line: 4715, column: 2, scope: !12438)
!12441 = !DILocation(line: 4715, column: 13, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12434, file: !2, line: 4715, column: 13)
!12443 = !DILocation(line: 4715, column: 17, scope: !12442)
!12444 = !DILocation(line: 4715, column: 13, scope: !12434)
!12445 = !DILocation(line: 4716, column: 6, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12442, file: !2, line: 4715, column: 25)
!12447 = !DILocation(line: 4717, column: 11, scope: !12446)
!12448 = !DILocation(line: 4718, column: 2, scope: !12446)
!12449 = !DILocation(line: 4718, column: 13, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12442, file: !2, line: 4718, column: 13)
!12451 = !DILocation(line: 4718, column: 17, scope: !12450)
!12452 = !DILocation(line: 4718, column: 13, scope: !12442)
!12453 = !DILocation(line: 4719, column: 6, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12450, file: !2, line: 4718, column: 25)
!12455 = !DILocation(line: 4720, column: 11, scope: !12454)
!12456 = !DILocation(line: 4721, column: 2, scope: !12454)
!12457 = !DILocation(line: 4722, column: 11, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12450, file: !2, line: 4721, column: 9)
!12459 = !DILocation(line: 4724, column: 5, scope: !12414)
!12460 = !DILocation(line: 4724, column: 16, scope: !12399)
!12461 = !DILocation(line: 4724, column: 20, scope: !12399)
!12462 = !DILocation(line: 4724, column: 16, scope: !12400)
!12463 = !DILocation(line: 4725, column: 2, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12399, file: !2, line: 4724, column: 28)
!12465 = !DILocation(line: 4726, column: 8, scope: !12464)
!12466 = !DILocation(line: 4726, column: 6, scope: !12464)
!12467 = !DILocation(line: 4727, column: 6, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12464, file: !2, line: 4727, column: 6)
!12469 = !DILocation(line: 4727, column: 10, scope: !12468)
!12470 = !DILocation(line: 4727, column: 6, scope: !12464)
!12471 = !DILocation(line: 4728, column: 6, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12468, file: !2, line: 4727, column: 18)
!12473 = !DILocation(line: 4730, column: 11, scope: !12472)
!12474 = !DILocation(line: 4731, column: 2, scope: !12472)
!12475 = !DILocation(line: 4731, column: 13, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12468, file: !2, line: 4731, column: 13)
!12477 = !DILocation(line: 4731, column: 17, scope: !12476)
!12478 = !DILocation(line: 4731, column: 13, scope: !12468)
!12479 = !DILocation(line: 4732, column: 6, scope: !12480)
!12480 = distinct !DILexicalBlock(scope: !12476, file: !2, line: 4731, column: 25)
!12481 = !DILocation(line: 4734, column: 11, scope: !12480)
!12482 = !DILocation(line: 4735, column: 2, scope: !12480)
!12483 = !DILocation(line: 4735, column: 13, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12476, file: !2, line: 4735, column: 13)
!12485 = !DILocation(line: 4735, column: 17, scope: !12484)
!12486 = !DILocation(line: 4735, column: 13, scope: !12476)
!12487 = !DILocation(line: 4736, column: 6, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12484, file: !2, line: 4735, column: 25)
!12489 = !DILocation(line: 4738, column: 11, scope: !12488)
!12490 = !DILocation(line: 4739, column: 2, scope: !12488)
!12491 = !DILocation(line: 4741, column: 11, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12484, file: !2, line: 4739, column: 9)
!12493 = !DILocation(line: 4743, column: 5, scope: !12464)
!12494 = !DILocation(line: 4743, column: 16, scope: !12398)
!12495 = !DILocation(line: 4743, column: 20, scope: !12398)
!12496 = !DILocation(line: 4743, column: 16, scope: !12399)
!12497 = !DILocation(line: 4744, column: 2, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12398, file: !2, line: 4743, column: 28)
!12499 = !DILocation(line: 4745, column: 8, scope: !12498)
!12500 = !DILocation(line: 4745, column: 6, scope: !12498)
!12501 = !DILocation(line: 4746, column: 6, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12498, file: !2, line: 4746, column: 6)
!12503 = !DILocation(line: 4746, column: 10, scope: !12502)
!12504 = !DILocation(line: 4746, column: 6, scope: !12498)
!12505 = !DILocation(line: 4747, column: 6, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12502, file: !2, line: 4746, column: 18)
!12507 = !DILocation(line: 4749, column: 11, scope: !12506)
!12508 = !DILocation(line: 4750, column: 2, scope: !12506)
!12509 = !DILocation(line: 4750, column: 13, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12502, file: !2, line: 4750, column: 13)
!12511 = !DILocation(line: 4750, column: 17, scope: !12510)
!12512 = !DILocation(line: 4750, column: 13, scope: !12502)
!12513 = !DILocation(line: 4751, column: 6, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12510, file: !2, line: 4750, column: 25)
!12515 = !DILocation(line: 4753, column: 11, scope: !12514)
!12516 = !DILocation(line: 4754, column: 2, scope: !12514)
!12517 = !DILocation(line: 4754, column: 13, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12510, file: !2, line: 4754, column: 13)
!12519 = !DILocation(line: 4754, column: 17, scope: !12518)
!12520 = !DILocation(line: 4754, column: 13, scope: !12510)
!12521 = !DILocation(line: 4755, column: 6, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12518, file: !2, line: 4754, column: 25)
!12523 = !DILocation(line: 4757, column: 11, scope: !12522)
!12524 = !DILocation(line: 4758, column: 2, scope: !12522)
!12525 = !DILocation(line: 4760, column: 11, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12518, file: !2, line: 4758, column: 9)
!12527 = !DILocation(line: 4762, column: 5, scope: !12498)
!12528 = !DILocation(line: 4762, column: 16, scope: !12397)
!12529 = !DILocation(line: 4762, column: 20, scope: !12397)
!12530 = !DILocation(line: 4762, column: 16, scope: !12398)
!12531 = !DILocation(line: 4763, column: 2, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12397, file: !2, line: 4762, column: 28)
!12533 = !DILocation(line: 4764, column: 8, scope: !12532)
!12534 = !DILocation(line: 4764, column: 6, scope: !12532)
!12535 = !DILocation(line: 4765, column: 6, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12532, file: !2, line: 4765, column: 6)
!12537 = !DILocation(line: 4765, column: 10, scope: !12536)
!12538 = !DILocation(line: 4765, column: 6, scope: !12532)
!12539 = !DILocation(line: 4766, column: 6, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12536, file: !2, line: 4765, column: 18)
!12541 = !DILocation(line: 4768, column: 11, scope: !12540)
!12542 = !DILocation(line: 4769, column: 2, scope: !12540)
!12543 = !DILocation(line: 4769, column: 13, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12536, file: !2, line: 4769, column: 13)
!12545 = !DILocation(line: 4769, column: 17, scope: !12544)
!12546 = !DILocation(line: 4769, column: 13, scope: !12536)
!12547 = !DILocation(line: 4770, column: 6, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12544, file: !2, line: 4769, column: 25)
!12549 = !DILocation(line: 4772, column: 11, scope: !12548)
!12550 = !DILocation(line: 4773, column: 2, scope: !12548)
!12551 = !DILocation(line: 4773, column: 13, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12544, file: !2, line: 4773, column: 13)
!12553 = !DILocation(line: 4773, column: 17, scope: !12552)
!12554 = !DILocation(line: 4773, column: 13, scope: !12544)
!12555 = !DILocation(line: 4774, column: 6, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12552, file: !2, line: 4773, column: 25)
!12557 = !DILocation(line: 4776, column: 11, scope: !12556)
!12558 = !DILocation(line: 4777, column: 2, scope: !12556)
!12559 = !DILocation(line: 4777, column: 13, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12552, file: !2, line: 4777, column: 13)
!12561 = !DILocation(line: 4777, column: 17, scope: !12560)
!12562 = !DILocation(line: 4777, column: 13, scope: !12552)
!12563 = !DILocation(line: 4778, column: 6, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12560, file: !2, line: 4777, column: 25)
!12565 = !DILocation(line: 4780, column: 11, scope: !12564)
!12566 = !DILocation(line: 4781, column: 2, scope: !12564)
!12567 = !DILocation(line: 4781, column: 13, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12560, file: !2, line: 4781, column: 13)
!12569 = !DILocation(line: 4781, column: 17, scope: !12568)
!12570 = !DILocation(line: 4781, column: 13, scope: !12560)
!12571 = !DILocation(line: 4782, column: 6, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12568, file: !2, line: 4781, column: 25)
!12573 = !DILocation(line: 4784, column: 11, scope: !12572)
!12574 = !DILocation(line: 4785, column: 2, scope: !12572)
!12575 = !DILocation(line: 4785, column: 13, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12568, file: !2, line: 4785, column: 13)
!12577 = !DILocation(line: 4785, column: 17, scope: !12576)
!12578 = !DILocation(line: 4785, column: 13, scope: !12568)
!12579 = !DILocation(line: 4786, column: 6, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12576, file: !2, line: 4785, column: 25)
!12581 = !DILocation(line: 4788, column: 11, scope: !12580)
!12582 = !DILocation(line: 4789, column: 2, scope: !12580)
!12583 = !DILocation(line: 4789, column: 13, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12576, file: !2, line: 4789, column: 13)
!12585 = !DILocation(line: 4789, column: 17, scope: !12584)
!12586 = !DILocation(line: 4789, column: 13, scope: !12576)
!12587 = !DILocation(line: 4790, column: 6, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12584, file: !2, line: 4789, column: 25)
!12589 = !DILocation(line: 4792, column: 11, scope: !12588)
!12590 = !DILocation(line: 4793, column: 2, scope: !12588)
!12591 = !DILocation(line: 4795, column: 11, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12584, file: !2, line: 4793, column: 9)
!12593 = !DILocation(line: 4797, column: 5, scope: !12532)
!12594 = !DILocation(line: 4797, column: 16, scope: !12396)
!12595 = !DILocation(line: 4797, column: 20, scope: !12396)
!12596 = !DILocation(line: 4797, column: 16, scope: !12397)
!12597 = !DILocation(line: 4798, column: 2, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !12396, file: !2, line: 4797, column: 28)
!12599 = !DILocation(line: 4799, column: 8, scope: !12598)
!12600 = !DILocation(line: 4799, column: 6, scope: !12598)
!12601 = !DILocation(line: 4800, column: 6, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12598, file: !2, line: 4800, column: 6)
!12603 = !DILocation(line: 4800, column: 10, scope: !12602)
!12604 = !DILocation(line: 4800, column: 6, scope: !12598)
!12605 = !DILocation(line: 4801, column: 6, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12602, file: !2, line: 4800, column: 18)
!12607 = !DILocation(line: 4803, column: 11, scope: !12606)
!12608 = !DILocation(line: 4804, column: 2, scope: !12606)
!12609 = !DILocation(line: 4804, column: 13, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12602, file: !2, line: 4804, column: 13)
!12611 = !DILocation(line: 4804, column: 17, scope: !12610)
!12612 = !DILocation(line: 4804, column: 13, scope: !12602)
!12613 = !DILocation(line: 4805, column: 6, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12610, file: !2, line: 4804, column: 25)
!12615 = !DILocation(line: 4807, column: 11, scope: !12614)
!12616 = !DILocation(line: 4808, column: 2, scope: !12614)
!12617 = !DILocation(line: 4808, column: 13, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12610, file: !2, line: 4808, column: 13)
!12619 = !DILocation(line: 4808, column: 17, scope: !12618)
!12620 = !DILocation(line: 4808, column: 13, scope: !12610)
!12621 = !DILocation(line: 4809, column: 6, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12618, file: !2, line: 4808, column: 25)
!12623 = !DILocation(line: 4811, column: 11, scope: !12622)
!12624 = !DILocation(line: 4812, column: 2, scope: !12622)
!12625 = !DILocation(line: 4814, column: 11, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12618, file: !2, line: 4812, column: 9)
!12627 = !DILocation(line: 4816, column: 5, scope: !12598)
!12628 = !DILocation(line: 4816, column: 16, scope: !12395)
!12629 = !DILocation(line: 4816, column: 20, scope: !12395)
!12630 = !DILocation(line: 4816, column: 16, scope: !12396)
!12631 = !DILocation(line: 4817, column: 2, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12395, file: !2, line: 4816, column: 28)
!12633 = !DILocation(line: 4818, column: 8, scope: !12632)
!12634 = !DILocation(line: 4818, column: 6, scope: !12632)
!12635 = !DILocation(line: 4819, column: 6, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12632, file: !2, line: 4819, column: 6)
!12637 = !DILocation(line: 4819, column: 10, scope: !12636)
!12638 = !DILocation(line: 4819, column: 6, scope: !12632)
!12639 = !DILocation(line: 4820, column: 6, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12636, file: !2, line: 4819, column: 18)
!12641 = !DILocation(line: 4821, column: 11, scope: !12640)
!12642 = !DILocation(line: 4823, column: 2, scope: !12640)
!12643 = !DILocation(line: 4823, column: 13, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12636, file: !2, line: 4823, column: 13)
!12645 = !DILocation(line: 4823, column: 17, scope: !12644)
!12646 = !DILocation(line: 4823, column: 13, scope: !12636)
!12647 = !DILocation(line: 4824, column: 6, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12644, file: !2, line: 4823, column: 25)
!12649 = !DILocation(line: 4825, column: 11, scope: !12648)
!12650 = !DILocation(line: 4827, column: 2, scope: !12648)
!12651 = !DILocation(line: 4827, column: 13, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12644, file: !2, line: 4827, column: 13)
!12653 = !DILocation(line: 4827, column: 17, scope: !12652)
!12654 = !DILocation(line: 4827, column: 13, scope: !12644)
!12655 = !DILocation(line: 4828, column: 6, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12652, file: !2, line: 4827, column: 25)
!12657 = !DILocation(line: 4829, column: 11, scope: !12656)
!12658 = !DILocation(line: 4831, column: 2, scope: !12656)
!12659 = !DILocation(line: 4831, column: 13, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12652, file: !2, line: 4831, column: 13)
!12661 = !DILocation(line: 4831, column: 17, scope: !12660)
!12662 = !DILocation(line: 4831, column: 13, scope: !12652)
!12663 = !DILocation(line: 4832, column: 6, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12660, file: !2, line: 4831, column: 25)
!12665 = !DILocation(line: 4833, column: 11, scope: !12664)
!12666 = !DILocation(line: 4835, column: 2, scope: !12664)
!12667 = !DILocation(line: 4837, column: 11, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12660, file: !2, line: 4835, column: 9)
!12669 = !DILocation(line: 4839, column: 5, scope: !12632)
!12670 = !DILocation(line: 4839, column: 16, scope: !12394)
!12671 = !DILocation(line: 4839, column: 20, scope: !12394)
!12672 = !DILocation(line: 4839, column: 16, scope: !12395)
!12673 = !DILocation(line: 4840, column: 2, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12394, file: !2, line: 4839, column: 28)
!12675 = !DILocation(line: 4841, column: 8, scope: !12674)
!12676 = !DILocation(line: 4841, column: 6, scope: !12674)
!12677 = !DILocation(line: 4842, column: 6, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12674, file: !2, line: 4842, column: 6)
!12679 = !DILocation(line: 4842, column: 10, scope: !12678)
!12680 = !DILocation(line: 4842, column: 6, scope: !12674)
!12681 = !DILocation(line: 4843, column: 6, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12678, file: !2, line: 4842, column: 18)
!12683 = !DILocation(line: 4845, column: 11, scope: !12682)
!12684 = !DILocation(line: 4846, column: 2, scope: !12682)
!12685 = !DILocation(line: 4846, column: 13, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12678, file: !2, line: 4846, column: 13)
!12687 = !DILocation(line: 4846, column: 17, scope: !12686)
!12688 = !DILocation(line: 4846, column: 13, scope: !12678)
!12689 = !DILocation(line: 4847, column: 6, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12686, file: !2, line: 4846, column: 25)
!12691 = !DILocation(line: 4849, column: 11, scope: !12690)
!12692 = !DILocation(line: 4850, column: 2, scope: !12690)
!12693 = !DILocation(line: 4850, column: 13, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12686, file: !2, line: 4850, column: 13)
!12695 = !DILocation(line: 4850, column: 17, scope: !12694)
!12696 = !DILocation(line: 4850, column: 13, scope: !12686)
!12697 = !DILocation(line: 4851, column: 6, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12694, file: !2, line: 4850, column: 25)
!12699 = !DILocation(line: 4853, column: 11, scope: !12698)
!12700 = !DILocation(line: 4854, column: 2, scope: !12698)
!12701 = !DILocation(line: 4854, column: 13, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12694, file: !2, line: 4854, column: 13)
!12703 = !DILocation(line: 4854, column: 17, scope: !12702)
!12704 = !DILocation(line: 4854, column: 13, scope: !12694)
!12705 = !DILocation(line: 4855, column: 6, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12702, file: !2, line: 4854, column: 25)
!12707 = !DILocation(line: 4857, column: 11, scope: !12706)
!12708 = !DILocation(line: 4858, column: 2, scope: !12706)
!12709 = !DILocation(line: 4860, column: 11, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12702, file: !2, line: 4858, column: 9)
!12711 = !DILocation(line: 4862, column: 5, scope: !12674)
!12712 = !DILocation(line: 4862, column: 16, scope: !12393)
!12713 = !DILocation(line: 4862, column: 20, scope: !12393)
!12714 = !DILocation(line: 4862, column: 16, scope: !12394)
!12715 = !DILocation(line: 4863, column: 2, scope: !12392)
!12716 = !DILocation(line: 4863, column: 17, scope: !12392)
!12717 = !DILocation(line: 4864, column: 2, scope: !12392)
!12718 = !DILocation(line: 4865, column: 8, scope: !12392)
!12719 = !DILocation(line: 4865, column: 6, scope: !12392)
!12720 = !DILocation(line: 4866, column: 6, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12392, file: !2, line: 4866, column: 6)
!12722 = !DILocation(line: 4866, column: 10, scope: !12721)
!12723 = !DILocation(line: 4866, column: 6, scope: !12392)
!12724 = !DILocation(line: 4867, column: 6, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12721, file: !2, line: 4866, column: 18)
!12726 = !DILocation(line: 4868, column: 6, scope: !12725)
!12727 = !DILocation(line: 4870, column: 2, scope: !12392)
!12728 = !DILocation(line: 4871, column: 10, scope: !12392)
!12729 = !DILocation(line: 4871, column: 16, scope: !12392)
!12730 = !DILocation(line: 4871, column: 8, scope: !12392)
!12731 = !DILocation(line: 4872, column: 8, scope: !12392)
!12732 = !DILocation(line: 4872, column: 6, scope: !12392)
!12733 = !DILocation(line: 4873, column: 8, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12392, file: !2, line: 4873, column: 6)
!12735 = !DILocation(line: 4873, column: 12, scope: !12734)
!12736 = !DILocation(line: 4873, column: 20, scope: !12734)
!12737 = !DILocation(line: 4873, column: 24, scope: !12734)
!12738 = !DILocation(line: 4873, column: 28, scope: !12734)
!12739 = !DILocation(line: 4873, column: 37, scope: !12734)
!12740 = !DILocation(line: 4874, column: 8, scope: !12734)
!12741 = !DILocation(line: 4874, column: 12, scope: !12734)
!12742 = !DILocation(line: 4874, column: 20, scope: !12734)
!12743 = !DILocation(line: 4874, column: 24, scope: !12734)
!12744 = !DILocation(line: 4874, column: 28, scope: !12734)
!12745 = !DILocation(line: 4874, column: 37, scope: !12734)
!12746 = !DILocation(line: 4875, column: 8, scope: !12734)
!12747 = !DILocation(line: 4875, column: 12, scope: !12734)
!12748 = !DILocation(line: 4875, column: 20, scope: !12734)
!12749 = !DILocation(line: 4875, column: 24, scope: !12734)
!12750 = !DILocation(line: 4875, column: 28, scope: !12734)
!12751 = !DILocation(line: 4875, column: 37, scope: !12734)
!12752 = !DILocation(line: 4876, column: 7, scope: !12734)
!12753 = !DILocation(line: 4876, column: 11, scope: !12734)
!12754 = !DILocation(line: 4873, column: 6, scope: !12392)
!12755 = !DILocation(line: 4877, column: 6, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12734, file: !2, line: 4876, column: 21)
!12757 = !DILocation(line: 4878, column: 12, scope: !12756)
!12758 = !DILocation(line: 4878, column: 10, scope: !12756)
!12759 = !DILocation(line: 4879, column: 6, scope: !12756)
!12760 = !DILocation(line: 4879, column: 15, scope: !12756)
!12761 = !DILocation(line: 4879, column: 19, scope: !12756)
!12762 = !DILocation(line: 4879, column: 27, scope: !12756)
!12763 = !DILocation(line: 4879, column: 31, scope: !12756)
!12764 = !DILocation(line: 4879, column: 35, scope: !12756)
!12765 = !DILocation(line: 4879, column: 44, scope: !12756)
!12766 = !DILocation(line: 4880, column: 5, scope: !12756)
!12767 = !DILocation(line: 4880, column: 9, scope: !12756)
!12768 = !DILocation(line: 4880, column: 17, scope: !12756)
!12769 = !DILocation(line: 4880, column: 21, scope: !12756)
!12770 = !DILocation(line: 4880, column: 25, scope: !12756)
!12771 = !DILocation(line: 4880, column: 34, scope: !12756)
!12772 = !DILocation(line: 4881, column: 5, scope: !12756)
!12773 = !DILocation(line: 4881, column: 9, scope: !12756)
!12774 = !DILocation(line: 4881, column: 17, scope: !12756)
!12775 = !DILocation(line: 4881, column: 21, scope: !12756)
!12776 = !DILocation(line: 4881, column: 25, scope: !12756)
!12777 = !DILocation(line: 4881, column: 34, scope: !12756)
!12778 = !DILocation(line: 4882, column: 4, scope: !12756)
!12779 = !DILocation(line: 4882, column: 8, scope: !12756)
!12780 = !DILocation(line: 4883, column: 3, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12756, file: !2, line: 4882, column: 18)
!12782 = !DILocation(line: 4884, column: 9, scope: !12781)
!12783 = !DILocation(line: 4884, column: 7, scope: !12781)
!12784 = distinct !{!12784, !12759, !12785, !1794}
!12785 = !DILocation(line: 4885, column: 6, scope: !12756)
!12786 = !DILocation(line: 4886, column: 2, scope: !12756)
!12787 = !DILocation(line: 4887, column: 7, scope: !12392)
!12788 = !DILocation(line: 4888, column: 25, scope: !12392)
!12789 = !DILocation(line: 4888, column: 32, scope: !12392)
!12790 = !DILocation(line: 4888, column: 38, scope: !12392)
!12791 = !DILocation(line: 4888, column: 44, scope: !12392)
!12792 = !DILocation(line: 4888, column: 42, scope: !12392)
!12793 = !DILocation(line: 4888, column: 14, scope: !12392)
!12794 = !DILocation(line: 4888, column: 12, scope: !12392)
!12795 = !DILocation(line: 4889, column: 5, scope: !12393)
!12796 = !DILocation(line: 4889, column: 5, scope: !12392)
!12797 = !DILocation(line: 4890, column: 2, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12393, file: !2, line: 4889, column: 12)
!12799 = !DILocation(line: 4891, column: 2, scope: !12798)
!12800 = !DILocation(line: 4893, column: 9, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12385, file: !2, line: 4893, column: 9)
!12802 = !DILocation(line: 4893, column: 15, scope: !12801)
!12803 = !DILocation(line: 4893, column: 20, scope: !12801)
!12804 = !DILocation(line: 4893, column: 9, scope: !12385)
!12805 = !DILocation(line: 4894, column: 29, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12801, file: !2, line: 4893, column: 29)
!12807 = !DILocation(line: 4894, column: 35, scope: !12806)
!12808 = !DILocation(line: 4894, column: 15, scope: !12806)
!12809 = !DILocation(line: 4894, column: 2, scope: !12806)
!12810 = !DILocation(line: 4894, column: 8, scope: !12806)
!12811 = !DILocation(line: 4894, column: 13, scope: !12806)
!12812 = !DILocation(line: 4895, column: 6, scope: !12813)
!12813 = distinct !DILexicalBlock(scope: !12806, file: !2, line: 4895, column: 6)
!12814 = !DILocation(line: 4895, column: 12, scope: !12813)
!12815 = !DILocation(line: 4895, column: 17, scope: !12813)
!12816 = !DILocation(line: 4895, column: 6, scope: !12806)
!12817 = !DILocation(line: 4896, column: 27, scope: !12813)
!12818 = !DILocation(line: 4896, column: 6, scope: !12813)
!12819 = !DILocation(line: 4896, column: 12, scope: !12813)
!12820 = !DILocation(line: 4896, column: 18, scope: !12813)
!12821 = !DILocation(line: 4896, column: 25, scope: !12813)
!12822 = !DILocation(line: 4897, column: 5, scope: !12806)
!12823 = !DILocation(line: 4897, column: 16, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12801, file: !2, line: 4897, column: 16)
!12825 = !DILocation(line: 4897, column: 22, scope: !12824)
!12826 = !DILocation(line: 4897, column: 28, scope: !12824)
!12827 = !DILocation(line: 4897, column: 33, scope: !12824)
!12828 = !DILocation(line: 4897, column: 16, scope: !12801)
!12829 = !DILocation(line: 4898, column: 28, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12824, file: !2, line: 4897, column: 55)
!12831 = !DILocation(line: 4898, column: 34, scope: !12830)
!12832 = !DILocation(line: 4898, column: 40, scope: !12830)
!12833 = !DILocation(line: 4898, column: 46, scope: !12830)
!12834 = !DILocation(line: 4898, column: 52, scope: !12830)
!12835 = !DILocation(line: 4899, column: 14, scope: !12830)
!12836 = !DILocation(line: 4899, column: 26, scope: !12830)
!12837 = !DILocation(line: 4898, column: 9, scope: !12830)
!12838 = !DILocation(line: 4900, column: 5, scope: !12830)
!12839 = !DILocation(line: 4901, column: 1, scope: !12385)
!12840 = distinct !DISubprogram(name: "parse_escaped_codepoint", scope: !2, file: !2, line: 4924, type: !6785, scopeLine: 4925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !12841)
!12841 = !{!12842, !12843, !12844}
!12842 = !DILocalVariable(name: "ctxt", arg: 1, scope: !12840, file: !2, line: 4924, type: !1483)
!12843 = !DILocalVariable(name: "val", scope: !12840, file: !2, line: 4926, type: !1306)
!12844 = !DILocalVariable(name: "low", scope: !12845, file: !2, line: 4932, type: !1306)
!12845 = distinct !DILexicalBlock(scope: !12846, file: !2, line: 4931, column: 22)
!12846 = distinct !DILexicalBlock(scope: !12847, file: !2, line: 4931, column: 10)
!12847 = distinct !DILexicalBlock(scope: !12848, file: !2, line: 4929, column: 19)
!12848 = distinct !DILexicalBlock(scope: !12849, file: !2, line: 4929, column: 6)
!12849 = distinct !DILexicalBlock(scope: !12850, file: !2, line: 4927, column: 41)
!12850 = distinct !DILexicalBlock(scope: !12840, file: !2, line: 4927, column: 9)
!12851 = !DILocation(line: 4924, column: 56, scope: !12840)
!12852 = !DILocation(line: 4926, column: 5, scope: !12840)
!12853 = !DILocation(line: 4926, column: 9, scope: !12840)
!12854 = !DILocation(line: 4926, column: 38, scope: !12840)
!12855 = !DILocation(line: 4926, column: 15, scope: !12840)
!12856 = !DILocation(line: 4927, column: 19, scope: !12850)
!12857 = !DILocation(line: 4927, column: 16, scope: !12850)
!12858 = !DILocation(line: 4927, column: 23, scope: !12850)
!12859 = !DILocation(line: 4927, column: 26, scope: !12850)
!12860 = !DILocation(line: 4927, column: 30, scope: !12850)
!12861 = !DILocation(line: 4927, column: 9, scope: !12840)
!12862 = !DILocation(line: 4928, column: 2, scope: !12849)
!12863 = !DILocation(line: 4929, column: 6, scope: !12848)
!12864 = !DILocation(line: 4929, column: 10, scope: !12848)
!12865 = !DILocation(line: 4929, column: 6, scope: !12849)
!12866 = !DILocation(line: 4930, column: 6, scope: !12847)
!12867 = !DILocation(line: 4931, column: 10, scope: !12846)
!12868 = !DILocation(line: 4931, column: 14, scope: !12846)
!12869 = !DILocation(line: 4931, column: 10, scope: !12847)
!12870 = !DILocation(line: 4932, column: 3, scope: !12845)
!12871 = !DILocation(line: 4932, column: 7, scope: !12845)
!12872 = !DILocation(line: 4932, column: 36, scope: !12845)
!12873 = !DILocation(line: 4932, column: 13, scope: !12845)
!12874 = !DILocation(line: 4933, column: 17, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12845, file: !2, line: 4933, column: 7)
!12876 = !DILocation(line: 4933, column: 14, scope: !12875)
!12877 = !DILocation(line: 4933, column: 21, scope: !12875)
!12878 = !DILocation(line: 4933, column: 24, scope: !12875)
!12879 = !DILocation(line: 4933, column: 28, scope: !12875)
!12880 = !DILocation(line: 4933, column: 7, scope: !12845)
!12881 = !DILocation(line: 4934, column: 15, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12875, file: !2, line: 4933, column: 39)
!12883 = !DILocation(line: 4934, column: 19, scope: !12882)
!12884 = !DILocation(line: 4934, column: 29, scope: !12882)
!12885 = !DILocation(line: 4934, column: 40, scope: !12882)
!12886 = !DILocation(line: 4934, column: 44, scope: !12882)
!12887 = !DILocation(line: 4934, column: 37, scope: !12882)
!12888 = !DILocation(line: 4934, column: 54, scope: !12882)
!12889 = !DILocation(line: 4934, column: 7, scope: !12882)
!12890 = !DILocation(line: 4936, column: 6, scope: !12846)
!12891 = !DILocation(line: 4936, column: 6, scope: !12845)
!12892 = !DILocation(line: 4937, column: 2, scope: !12847)
!12893 = !DILocation(line: 4938, column: 2, scope: !12849)
!12894 = !DILocation(line: 4939, column: 6, scope: !12849)
!12895 = !DILocation(line: 4940, column: 5, scope: !12849)
!12896 = !DILocation(line: 4941, column: 12, scope: !12840)
!12897 = !DILocation(line: 4941, column: 5, scope: !12840)
!12898 = !DILocation(line: 4942, column: 1, scope: !12840)
!12899 = !DISubprogram(name: "xmlStrndup", scope: !1353, file: !1353, line: 43, type: !12900, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!12900 = !DISubroutineType(types: !12901)
!12901 = !{!1351, !1445, !1306}
!12902 = distinct !DISubprogram(name: "parse_escaped_codeunit", scope: !2, file: !2, line: 4903, type: !6785, scopeLine: 4904, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !12903)
!12903 = !{!12904, !12905, !12906, !12907}
!12904 = !DILocalVariable(name: "ctxt", arg: 1, scope: !12902, file: !2, line: 4903, type: !1483)
!12905 = !DILocalVariable(name: "val", scope: !12902, file: !2, line: 4905, type: !1306)
!12906 = !DILocalVariable(name: "i", scope: !12902, file: !2, line: 4905, type: !1306)
!12907 = !DILocalVariable(name: "cur", scope: !12902, file: !2, line: 4905, type: !1306)
!12908 = !DILocation(line: 4903, column: 55, scope: !12902)
!12909 = !DILocation(line: 4905, column: 5, scope: !12902)
!12910 = !DILocation(line: 4905, column: 9, scope: !12902)
!12911 = !DILocation(line: 4905, column: 18, scope: !12902)
!12912 = !DILocation(line: 4905, column: 21, scope: !12902)
!12913 = !DILocation(line: 4906, column: 12, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12902, file: !2, line: 4906, column: 5)
!12915 = !DILocation(line: 4906, column: 10, scope: !12914)
!12916 = !DILocation(line: 4906, column: 17, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12914, file: !2, line: 4906, column: 5)
!12918 = !DILocation(line: 4906, column: 19, scope: !12917)
!12919 = !DILocation(line: 4906, column: 5, scope: !12914)
!12920 = !DILocation(line: 4907, column: 2, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12917, file: !2, line: 4906, column: 29)
!12922 = !DILocation(line: 4908, column: 6, scope: !12921)
!12923 = !DILocation(line: 4909, column: 8, scope: !12921)
!12924 = !DILocation(line: 4909, column: 6, scope: !12921)
!12925 = !DILocation(line: 4910, column: 6, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12921, file: !2, line: 4910, column: 6)
!12927 = !DILocation(line: 4910, column: 10, scope: !12926)
!12928 = !DILocation(line: 4910, column: 17, scope: !12926)
!12929 = !DILocation(line: 4910, column: 20, scope: !12926)
!12930 = !DILocation(line: 4910, column: 24, scope: !12926)
!12931 = !DILocation(line: 4910, column: 6, scope: !12921)
!12932 = !DILocation(line: 4911, column: 13, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12926, file: !2, line: 4910, column: 32)
!12934 = !DILocation(line: 4911, column: 17, scope: !12933)
!12935 = !DILocation(line: 4911, column: 10, scope: !12933)
!12936 = !DILocation(line: 4912, column: 2, scope: !12933)
!12937 = !DILocation(line: 4912, column: 13, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12926, file: !2, line: 4912, column: 13)
!12939 = !DILocation(line: 4912, column: 17, scope: !12938)
!12940 = !DILocation(line: 4912, column: 24, scope: !12938)
!12941 = !DILocation(line: 4912, column: 27, scope: !12938)
!12942 = !DILocation(line: 4912, column: 31, scope: !12938)
!12943 = !DILocation(line: 4912, column: 13, scope: !12926)
!12944 = !DILocation(line: 4913, column: 13, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12938, file: !2, line: 4912, column: 39)
!12946 = !DILocation(line: 4913, column: 17, scope: !12945)
!12947 = !DILocation(line: 4913, column: 23, scope: !12945)
!12948 = !DILocation(line: 4913, column: 10, scope: !12945)
!12949 = !DILocation(line: 4914, column: 2, scope: !12945)
!12950 = !DILocation(line: 4914, column: 13, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12938, file: !2, line: 4914, column: 13)
!12952 = !DILocation(line: 4914, column: 17, scope: !12951)
!12953 = !DILocation(line: 4914, column: 24, scope: !12951)
!12954 = !DILocation(line: 4914, column: 27, scope: !12951)
!12955 = !DILocation(line: 4914, column: 31, scope: !12951)
!12956 = !DILocation(line: 4914, column: 13, scope: !12938)
!12957 = !DILocation(line: 4915, column: 13, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12951, file: !2, line: 4914, column: 39)
!12959 = !DILocation(line: 4915, column: 17, scope: !12958)
!12960 = !DILocation(line: 4915, column: 23, scope: !12958)
!12961 = !DILocation(line: 4915, column: 10, scope: !12958)
!12962 = !DILocation(line: 4916, column: 2, scope: !12958)
!12963 = !DILocation(line: 4917, column: 6, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12951, file: !2, line: 4916, column: 9)
!12965 = !DILocation(line: 4918, column: 6, scope: !12964)
!12966 = !DILocation(line: 4920, column: 5, scope: !12921)
!12967 = !DILocation(line: 4906, column: 25, scope: !12917)
!12968 = !DILocation(line: 4906, column: 5, scope: !12917)
!12969 = distinct !{!12969, !12919, !12970, !1794}
!12970 = !DILocation(line: 4920, column: 5, scope: !12914)
!12971 = !DILocation(line: 4921, column: 12, scope: !12902)
!12972 = !DILocation(line: 4921, column: 5, scope: !12902)
!12973 = !DILocation(line: 4922, column: 1, scope: !12902)
!12974 = distinct !DISubprogram(name: "xmlFAParseQuantExact", scope: !2, file: !2, line: 5300, type: !6785, scopeLine: 5300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !12975)
!12975 = !{!12976, !12977, !12978, !12979, !12980}
!12976 = !DILocalVariable(name: "ctxt", arg: 1, scope: !12974, file: !2, line: 5300, type: !1483)
!12977 = !DILocalVariable(name: "ret", scope: !12974, file: !2, line: 5301, type: !1306)
!12978 = !DILocalVariable(name: "ok", scope: !12974, file: !2, line: 5302, type: !1306)
!12979 = !DILocalVariable(name: "overflow", scope: !12974, file: !2, line: 5303, type: !1306)
!12980 = !DILocalVariable(name: "digit", scope: !12981, file: !2, line: 5309, type: !1306)
!12981 = distinct !DILexicalBlock(scope: !12982, file: !2, line: 5308, column: 16)
!12982 = distinct !DILexicalBlock(scope: !12983, file: !2, line: 5306, column: 13)
!12983 = distinct !DILexicalBlock(scope: !12974, file: !2, line: 5305, column: 42)
!12984 = !DILocation(line: 5300, column: 42, scope: !12974)
!12985 = !DILocation(line: 5301, column: 5, scope: !12974)
!12986 = !DILocation(line: 5301, column: 9, scope: !12974)
!12987 = !DILocation(line: 5302, column: 5, scope: !12974)
!12988 = !DILocation(line: 5302, column: 9, scope: !12974)
!12989 = !DILocation(line: 5303, column: 5, scope: !12974)
!12990 = !DILocation(line: 5303, column: 9, scope: !12974)
!12991 = !DILocation(line: 5305, column: 5, scope: !12974)
!12992 = !DILocation(line: 5305, column: 13, scope: !12974)
!12993 = !DILocation(line: 5305, column: 17, scope: !12974)
!12994 = !DILocation(line: 5305, column: 25, scope: !12974)
!12995 = !DILocation(line: 5305, column: 29, scope: !12974)
!12996 = !DILocation(line: 5305, column: 33, scope: !12974)
!12997 = !DILocation(line: 0, scope: !12974)
!12998 = !DILocation(line: 5306, column: 13, scope: !12982)
!12999 = !DILocation(line: 5306, column: 17, scope: !12982)
!13000 = !DILocation(line: 5306, column: 13, scope: !12983)
!13001 = !DILocation(line: 5307, column: 22, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12982, file: !2, line: 5306, column: 33)
!13003 = !DILocation(line: 5308, column: 9, scope: !13002)
!13004 = !DILocation(line: 5309, column: 13, scope: !12981)
!13005 = !DILocation(line: 5309, column: 17, scope: !12981)
!13006 = !DILocation(line: 5309, column: 25, scope: !12981)
!13007 = !DILocation(line: 5309, column: 29, scope: !12981)
!13008 = !DILocation(line: 5311, column: 17, scope: !12981)
!13009 = !DILocation(line: 5312, column: 17, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !12981, file: !2, line: 5312, column: 17)
!13011 = !DILocation(line: 5312, column: 33, scope: !13010)
!13012 = !DILocation(line: 5312, column: 31, scope: !13010)
!13013 = !DILocation(line: 5312, column: 21, scope: !13010)
!13014 = !DILocation(line: 5312, column: 17, scope: !12981)
!13015 = !DILocation(line: 5313, column: 26, scope: !13010)
!13016 = !DILocation(line: 5313, column: 17, scope: !13010)
!13017 = !DILocation(line: 5315, column: 24, scope: !13010)
!13018 = !DILocation(line: 5315, column: 21, scope: !13010)
!13019 = !DILocation(line: 5316, column: 9, scope: !12982)
!13020 = !DILocation(line: 5317, column: 5, scope: !12983)
!13021 = !DILocation(line: 5318, column: 2, scope: !12983)
!13022 = distinct !{!13022, !12991, !13023, !1794}
!13023 = !DILocation(line: 5319, column: 5, scope: !12974)
!13024 = !DILocation(line: 5320, column: 10, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !12974, file: !2, line: 5320, column: 9)
!13026 = !DILocation(line: 5320, column: 13, scope: !13025)
!13027 = !DILocation(line: 5320, column: 19, scope: !13025)
!13028 = !DILocation(line: 5320, column: 23, scope: !13025)
!13029 = !DILocation(line: 5320, column: 32, scope: !13025)
!13030 = !DILocation(line: 5320, column: 9, scope: !12974)
!13031 = !DILocation(line: 5321, column: 2, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13025, file: !2, line: 5320, column: 39)
!13033 = !DILocation(line: 5323, column: 12, scope: !12974)
!13034 = !DILocation(line: 5323, column: 5, scope: !12974)
!13035 = !DILocation(line: 5324, column: 1, scope: !12974)
!13036 = distinct !DISubprogram(name: "xmlFAEliminateSimpleEpsilonTransitions", scope: !2, file: !2, line: 1895, type: !4524, scopeLine: 1895, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !13037)
!13037 = !{!13038, !13039, !13040, !13041, !13042, !13043, !13044}
!13038 = !DILocalVariable(name: "ctxt", arg: 1, scope: !13036, file: !2, line: 1895, type: !1483)
!13039 = !DILocalVariable(name: "statenr", scope: !13036, file: !2, line: 1896, type: !1306)
!13040 = !DILocalVariable(name: "i", scope: !13036, file: !2, line: 1896, type: !1306)
!13041 = !DILocalVariable(name: "j", scope: !13036, file: !2, line: 1896, type: !1306)
!13042 = !DILocalVariable(name: "newto", scope: !13036, file: !2, line: 1896, type: !1306)
!13043 = !DILocalVariable(name: "state", scope: !13036, file: !2, line: 1897, type: !1358)
!13044 = !DILocalVariable(name: "tmp", scope: !13036, file: !2, line: 1897, type: !1358)
!13045 = !DILocation(line: 1895, column: 60, scope: !13036)
!13046 = !DILocation(line: 1896, column: 5, scope: !13036)
!13047 = !DILocation(line: 1896, column: 9, scope: !13036)
!13048 = !DILocation(line: 1896, column: 18, scope: !13036)
!13049 = !DILocation(line: 1896, column: 21, scope: !13036)
!13050 = !DILocation(line: 1896, column: 24, scope: !13036)
!13051 = !DILocation(line: 1897, column: 5, scope: !13036)
!13052 = !DILocation(line: 1897, column: 20, scope: !13036)
!13053 = !DILocation(line: 1897, column: 27, scope: !13036)
!13054 = !DILocation(line: 1899, column: 18, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13036, file: !2, line: 1899, column: 5)
!13056 = !DILocation(line: 1899, column: 10, scope: !13055)
!13057 = !DILocation(line: 1899, column: 22, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13055, file: !2, line: 1899, column: 5)
!13059 = !DILocation(line: 1899, column: 32, scope: !13058)
!13060 = !DILocation(line: 1899, column: 38, scope: !13058)
!13061 = !DILocation(line: 1899, column: 30, scope: !13058)
!13062 = !DILocation(line: 1899, column: 5, scope: !13055)
!13063 = !DILocation(line: 1900, column: 10, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13058, file: !2, line: 1899, column: 58)
!13065 = !DILocation(line: 1900, column: 16, scope: !13064)
!13066 = !DILocation(line: 1900, column: 23, scope: !13064)
!13067 = !DILocation(line: 1900, column: 8, scope: !13064)
!13068 = !DILocation(line: 1901, column: 6, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13064, file: !2, line: 1901, column: 6)
!13070 = !DILocation(line: 1901, column: 12, scope: !13069)
!13071 = !DILocation(line: 1901, column: 6, scope: !13064)
!13072 = !DILocation(line: 1902, column: 6, scope: !13069)
!13073 = !DILocation(line: 1903, column: 6, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13064, file: !2, line: 1903, column: 6)
!13075 = !DILocation(line: 1903, column: 13, scope: !13074)
!13076 = !DILocation(line: 1903, column: 21, scope: !13074)
!13077 = !DILocation(line: 1903, column: 6, scope: !13064)
!13078 = !DILocation(line: 1904, column: 6, scope: !13074)
!13079 = !DILocation(line: 1905, column: 12, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13064, file: !2, line: 1905, column: 12)
!13081 = !DILocation(line: 1905, column: 19, scope: !13080)
!13082 = !DILocation(line: 1905, column: 24, scope: !13080)
!13083 = !DILocation(line: 1905, column: 52, scope: !13080)
!13084 = !DILocation(line: 1906, column: 12, scope: !13080)
!13085 = !DILocation(line: 1906, column: 19, scope: !13080)
!13086 = !DILocation(line: 1906, column: 24, scope: !13080)
!13087 = !DILocation(line: 1905, column: 12, scope: !13064)
!13088 = !DILocation(line: 1907, column: 6, scope: !13080)
!13089 = !DILocation(line: 1909, column: 7, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13064, file: !2, line: 1909, column: 6)
!13091 = !DILocation(line: 1909, column: 14, scope: !13090)
!13092 = !DILocation(line: 1909, column: 23, scope: !13090)
!13093 = !DILocation(line: 1909, column: 28, scope: !13090)
!13094 = !DILocation(line: 1909, column: 37, scope: !13090)
!13095 = !DILocation(line: 1910, column: 7, scope: !13090)
!13096 = !DILocation(line: 1910, column: 14, scope: !13090)
!13097 = !DILocation(line: 1910, column: 23, scope: !13090)
!13098 = !DILocation(line: 1910, column: 26, scope: !13090)
!13099 = !DILocation(line: 1910, column: 32, scope: !13090)
!13100 = !DILocation(line: 1911, column: 7, scope: !13090)
!13101 = !DILocation(line: 1911, column: 14, scope: !13090)
!13102 = !DILocation(line: 1911, column: 23, scope: !13090)
!13103 = !DILocation(line: 1911, column: 29, scope: !13090)
!13104 = !DILocation(line: 1911, column: 26, scope: !13090)
!13105 = !DILocation(line: 1911, column: 38, scope: !13090)
!13106 = !DILocation(line: 1912, column: 7, scope: !13090)
!13107 = !DILocation(line: 1912, column: 14, scope: !13090)
!13108 = !DILocation(line: 1912, column: 23, scope: !13090)
!13109 = !DILocation(line: 1912, column: 31, scope: !13090)
!13110 = !DILocation(line: 1912, column: 36, scope: !13090)
!13111 = !DILocation(line: 1913, column: 7, scope: !13090)
!13112 = !DILocation(line: 1913, column: 14, scope: !13090)
!13113 = !DILocation(line: 1913, column: 23, scope: !13090)
!13114 = !DILocation(line: 1913, column: 29, scope: !13090)
!13115 = !DILocation(line: 1909, column: 6, scope: !13064)
!13116 = !DILocation(line: 1914, column: 14, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13090, file: !2, line: 1913, column: 35)
!13118 = !DILocation(line: 1914, column: 21, scope: !13117)
!13119 = !DILocation(line: 1914, column: 30, scope: !13117)
!13120 = !DILocation(line: 1914, column: 12, scope: !13117)
!13121 = !DILocation(line: 1916, column: 17, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13117, file: !2, line: 1916, column: 17)
!13123 = !DILocation(line: 1916, column: 24, scope: !13122)
!13124 = !DILocation(line: 1916, column: 29, scope: !13122)
!13125 = !DILocation(line: 1916, column: 17, scope: !13117)
!13126 = !DILocation(line: 1921, column: 13, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13122, file: !2, line: 1916, column: 56)
!13128 = !DILocation(line: 1926, column: 17, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13130, file: !2, line: 1926, column: 10)
!13130 = distinct !DILexicalBlock(scope: !13122, file: !2, line: 1921, column: 20)
!13131 = !DILocation(line: 1926, column: 15, scope: !13129)
!13132 = !DILocation(line: 1926, column: 21, scope: !13133)
!13133 = distinct !DILexicalBlock(scope: !13129, file: !2, line: 1926, column: 10)
!13134 = !DILocation(line: 1926, column: 25, scope: !13133)
!13135 = !DILocation(line: 1926, column: 32, scope: !13133)
!13136 = !{!1985, !1546, i64 44}
!13137 = !DILocation(line: 1926, column: 23, scope: !13133)
!13138 = !DILocation(line: 1926, column: 10, scope: !13129)
!13139 = !DILocation(line: 1927, column: 13, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13133, file: !2, line: 1926, column: 47)
!13141 = !DILocation(line: 1927, column: 19, scope: !13140)
!13142 = !DILocation(line: 1927, column: 26, scope: !13140)
!13143 = !DILocation(line: 1927, column: 33, scope: !13140)
!13144 = !DILocation(line: 1927, column: 41, scope: !13140)
!13145 = !DILocation(line: 1927, column: 11, scope: !13140)
!13146 = !DILocation(line: 1928, column: 14, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13140, file: !2, line: 1928, column: 7)
!13148 = !DILocation(line: 1928, column: 12, scope: !13147)
!13149 = !DILocation(line: 1928, column: 18, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13147, file: !2, line: 1928, column: 7)
!13151 = !DILocation(line: 1928, column: 22, scope: !13150)
!13152 = !DILocation(line: 1928, column: 27, scope: !13150)
!13153 = !DILocation(line: 1928, column: 20, scope: !13150)
!13154 = !DILocation(line: 1928, column: 7, scope: !13147)
!13155 = !DILocation(line: 1929, column: 8, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13157, file: !2, line: 1929, column: 8)
!13157 = distinct !DILexicalBlock(scope: !13150, file: !2, line: 1928, column: 40)
!13158 = !DILocation(line: 1929, column: 13, scope: !13156)
!13159 = !DILocation(line: 1929, column: 19, scope: !13156)
!13160 = !DILocation(line: 1929, column: 22, scope: !13156)
!13161 = !DILocation(line: 1929, column: 28, scope: !13156)
!13162 = !DILocation(line: 1929, column: 25, scope: !13156)
!13163 = !DILocation(line: 1929, column: 8, scope: !13157)
!13164 = !DILocation(line: 1934, column: 8, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13156, file: !2, line: 1929, column: 37)
!13166 = !DILocation(line: 1934, column: 13, scope: !13165)
!13167 = !DILocation(line: 1934, column: 19, scope: !13165)
!13168 = !DILocation(line: 1934, column: 22, scope: !13165)
!13169 = !DILocation(line: 1934, column: 25, scope: !13165)
!13170 = !DILocation(line: 1935, column: 28, scope: !13165)
!13171 = !DILocation(line: 1935, column: 34, scope: !13165)
!13172 = !DILocation(line: 1935, column: 39, scope: !13165)
!13173 = !DILocation(line: 1935, column: 44, scope: !13165)
!13174 = !DILocation(line: 1935, column: 50, scope: !13165)
!13175 = !DILocation(line: 1935, column: 53, scope: !13165)
!13176 = !DILocation(line: 1936, column: 7, scope: !13165)
!13177 = !DILocation(line: 1936, column: 13, scope: !13165)
!13178 = !DILocation(line: 1936, column: 20, scope: !13165)
!13179 = !DILocation(line: 1937, column: 14, scope: !13165)
!13180 = !DILocation(line: 1937, column: 19, scope: !13165)
!13181 = !DILocation(line: 1937, column: 25, scope: !13165)
!13182 = !DILocation(line: 1937, column: 28, scope: !13165)
!13183 = !DILocation(line: 1938, column: 7, scope: !13165)
!13184 = !DILocation(line: 1938, column: 12, scope: !13165)
!13185 = !DILocation(line: 1938, column: 18, scope: !13165)
!13186 = !DILocation(line: 1938, column: 21, scope: !13165)
!13187 = !DILocation(line: 1935, column: 8, scope: !13165)
!13188 = !DILocation(line: 1939, column: 4, scope: !13165)
!13189 = !DILocation(line: 1940, column: 7, scope: !13157)
!13190 = !DILocation(line: 1928, column: 36, scope: !13150)
!13191 = !DILocation(line: 1928, column: 7, scope: !13150)
!13192 = distinct !{!13192, !13154, !13193, !1794}
!13193 = !DILocation(line: 1940, column: 7, scope: !13147)
!13194 = !DILocation(line: 1941, column: 3, scope: !13140)
!13195 = !DILocation(line: 1926, column: 43, scope: !13133)
!13196 = !DILocation(line: 1926, column: 10, scope: !13133)
!13197 = distinct !{!13197, !13138, !13198, !1794}
!13198 = !DILocation(line: 1941, column: 3, scope: !13129)
!13199 = !DILocation(line: 1942, column: 7, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13130, file: !2, line: 1942, column: 7)
!13201 = !DILocation(line: 1942, column: 14, scope: !13200)
!13202 = !DILocation(line: 1942, column: 19, scope: !13200)
!13203 = !DILocation(line: 1942, column: 7, scope: !13130)
!13204 = !DILocation(line: 1943, column: 7, scope: !13200)
!13205 = !DILocation(line: 1943, column: 13, scope: !13200)
!13206 = !DILocation(line: 1943, column: 20, scope: !13200)
!13207 = !DILocation(line: 1943, column: 28, scope: !13200)
!13208 = !DILocation(line: 1943, column: 33, scope: !13200)
!13209 = !DILocation(line: 1945, column: 3, scope: !13130)
!13210 = !DILocation(line: 1945, column: 10, scope: !13130)
!13211 = !DILocation(line: 1945, column: 18, scope: !13130)
!13212 = !DILocation(line: 1947, column: 17, scope: !13130)
!13213 = !DILocation(line: 1947, column: 24, scope: !13130)
!13214 = !DILocation(line: 1947, column: 29, scope: !13130)
!13215 = !DILocation(line: 1951, column: 2, scope: !13117)
!13216 = !DILocation(line: 1952, column: 5, scope: !13064)
!13217 = !DILocation(line: 1899, column: 54, scope: !13058)
!13218 = !DILocation(line: 1899, column: 5, scope: !13058)
!13219 = distinct !{!13219, !13062, !13220, !1794}
!13220 = !DILocation(line: 1952, column: 5, scope: !13055)
!13221 = !DILocation(line: 1953, column: 1, scope: !13036)
!13222 = distinct !DISubprogram(name: "xmlFAReduceEpsilonTransitions", scope: !2, file: !2, line: 1800, type: !13223, scopeLine: 1801, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !13225)
!13223 = !DISubroutineType(types: !13224)
!13224 = !{null, !1483, !1306, !1306, !1306}
!13225 = !{!13226, !13227, !13228, !13229, !13230, !13231, !13232, !13233, !13243}
!13226 = !DILocalVariable(name: "ctxt", arg: 1, scope: !13222, file: !2, line: 1800, type: !1483)
!13227 = !DILocalVariable(name: "fromnr", arg: 2, scope: !13222, file: !2, line: 1800, type: !1306)
!13228 = !DILocalVariable(name: "tonr", arg: 3, scope: !13222, file: !2, line: 1801, type: !1306)
!13229 = !DILocalVariable(name: "counter", arg: 4, scope: !13222, file: !2, line: 1801, type: !1306)
!13230 = !DILocalVariable(name: "transnr", scope: !13222, file: !2, line: 1802, type: !1306)
!13231 = !DILocalVariable(name: "from", scope: !13222, file: !2, line: 1803, type: !1358)
!13232 = !DILocalVariable(name: "to", scope: !13222, file: !2, line: 1804, type: !1358)
!13233 = !DILocalVariable(name: "newto", scope: !13234, file: !2, line: 1836, type: !1306)
!13234 = distinct !DILexicalBlock(scope: !13235, file: !2, line: 1835, column: 38)
!13235 = distinct !DILexicalBlock(scope: !13236, file: !2, line: 1835, column: 7)
!13236 = distinct !DILexicalBlock(scope: !13237, file: !2, line: 1834, column: 43)
!13237 = distinct !DILexicalBlock(scope: !13238, file: !2, line: 1834, column: 10)
!13238 = distinct !DILexicalBlock(scope: !13239, file: !2, line: 1829, column: 39)
!13239 = distinct !DILexicalBlock(scope: !13240, file: !2, line: 1829, column: 6)
!13240 = distinct !DILexicalBlock(scope: !13241, file: !2, line: 1826, column: 55)
!13241 = distinct !DILexicalBlock(scope: !13242, file: !2, line: 1826, column: 5)
!13242 = distinct !DILexicalBlock(scope: !13222, file: !2, line: 1826, column: 5)
!13243 = !DILocalVariable(name: "newto", scope: !13244, file: !2, line: 1858, type: !1306)
!13244 = distinct !DILexicalBlock(scope: !13239, file: !2, line: 1857, column: 9)
!13245 = !DILocation(line: 1800, column: 51, scope: !13222)
!13246 = !DILocation(line: 1800, column: 61, scope: !13222)
!13247 = !DILocation(line: 1801, column: 28, scope: !13222)
!13248 = !DILocation(line: 1801, column: 38, scope: !13222)
!13249 = !DILocation(line: 1802, column: 5, scope: !13222)
!13250 = !DILocation(line: 1802, column: 9, scope: !13222)
!13251 = !DILocation(line: 1803, column: 5, scope: !13222)
!13252 = !DILocation(line: 1803, column: 20, scope: !13222)
!13253 = !DILocation(line: 1804, column: 5, scope: !13222)
!13254 = !DILocation(line: 1804, column: 20, scope: !13222)
!13255 = !DILocation(line: 1809, column: 12, scope: !13222)
!13256 = !DILocation(line: 1809, column: 18, scope: !13222)
!13257 = !DILocation(line: 1809, column: 25, scope: !13222)
!13258 = !DILocation(line: 1809, column: 10, scope: !13222)
!13259 = !DILocation(line: 1810, column: 9, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13222, file: !2, line: 1810, column: 9)
!13261 = !DILocation(line: 1810, column: 14, scope: !13260)
!13262 = !DILocation(line: 1810, column: 9, scope: !13222)
!13263 = !DILocation(line: 1811, column: 2, scope: !13260)
!13264 = !DILocation(line: 1812, column: 10, scope: !13222)
!13265 = !DILocation(line: 1812, column: 16, scope: !13222)
!13266 = !DILocation(line: 1812, column: 23, scope: !13222)
!13267 = !DILocation(line: 1812, column: 8, scope: !13222)
!13268 = !DILocation(line: 1813, column: 9, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13222, file: !2, line: 1813, column: 9)
!13270 = !DILocation(line: 1813, column: 12, scope: !13269)
!13271 = !DILocation(line: 1813, column: 9, scope: !13222)
!13272 = !DILocation(line: 1814, column: 2, scope: !13269)
!13273 = !DILocation(line: 1815, column: 10, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13222, file: !2, line: 1815, column: 9)
!13275 = !DILocation(line: 1815, column: 14, scope: !13274)
!13276 = !DILocation(line: 1815, column: 19, scope: !13274)
!13277 = !DILocation(line: 1815, column: 45, scope: !13274)
!13278 = !DILocation(line: 1816, column: 3, scope: !13274)
!13279 = !DILocation(line: 1816, column: 7, scope: !13274)
!13280 = !DILocation(line: 1816, column: 12, scope: !13274)
!13281 = !DILocation(line: 1815, column: 9, scope: !13222)
!13282 = !DILocation(line: 1817, column: 2, scope: !13274)
!13283 = !DILocation(line: 1819, column: 5, scope: !13222)
!13284 = !DILocation(line: 1819, column: 9, scope: !13222)
!13285 = !DILocation(line: 1819, column: 14, scope: !13222)
!13286 = !DILocation(line: 1820, column: 9, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13222, file: !2, line: 1820, column: 9)
!13288 = !DILocation(line: 1820, column: 13, scope: !13287)
!13289 = !DILocation(line: 1820, column: 18, scope: !13287)
!13290 = !DILocation(line: 1820, column: 9, scope: !13222)
!13291 = !DILocation(line: 1824, column: 2, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13287, file: !2, line: 1820, column: 45)
!13293 = !DILocation(line: 1824, column: 8, scope: !13292)
!13294 = !DILocation(line: 1824, column: 13, scope: !13292)
!13295 = !DILocation(line: 1825, column: 5, scope: !13292)
!13296 = !DILocation(line: 1826, column: 18, scope: !13242)
!13297 = !DILocation(line: 1826, column: 10, scope: !13242)
!13298 = !DILocation(line: 1826, column: 22, scope: !13241)
!13299 = !DILocation(line: 1826, column: 32, scope: !13241)
!13300 = !DILocation(line: 1826, column: 36, scope: !13241)
!13301 = !DILocation(line: 1826, column: 30, scope: !13241)
!13302 = !DILocation(line: 1826, column: 5, scope: !13242)
!13303 = !DILocation(line: 1827, column: 13, scope: !13304)
!13304 = distinct !DILexicalBlock(scope: !13240, file: !2, line: 1827, column: 13)
!13305 = !DILocation(line: 1827, column: 17, scope: !13304)
!13306 = !DILocation(line: 1827, column: 23, scope: !13304)
!13307 = !DILocation(line: 1827, column: 32, scope: !13304)
!13308 = !DILocation(line: 1827, column: 35, scope: !13304)
!13309 = !DILocation(line: 1827, column: 13, scope: !13240)
!13310 = !DILocation(line: 1828, column: 6, scope: !13304)
!13311 = !DILocation(line: 1829, column: 6, scope: !13239)
!13312 = !DILocation(line: 1829, column: 10, scope: !13239)
!13313 = !DILocation(line: 1829, column: 16, scope: !13239)
!13314 = !DILocation(line: 1829, column: 25, scope: !13239)
!13315 = !DILocation(line: 1829, column: 30, scope: !13239)
!13316 = !DILocation(line: 1829, column: 6, scope: !13240)
!13317 = !DILocation(line: 1834, column: 10, scope: !13237)
!13318 = !DILocation(line: 1834, column: 14, scope: !13237)
!13319 = !DILocation(line: 1834, column: 20, scope: !13237)
!13320 = !DILocation(line: 1834, column: 29, scope: !13237)
!13321 = !DILocation(line: 1834, column: 35, scope: !13237)
!13322 = !DILocation(line: 1834, column: 32, scope: !13237)
!13323 = !DILocation(line: 1834, column: 10, scope: !13238)
!13324 = !DILocation(line: 1835, column: 7, scope: !13235)
!13325 = !DILocation(line: 1835, column: 11, scope: !13235)
!13326 = !DILocation(line: 1835, column: 17, scope: !13235)
!13327 = !DILocation(line: 1835, column: 26, scope: !13235)
!13328 = !DILocation(line: 1835, column: 32, scope: !13235)
!13329 = !DILocation(line: 1835, column: 7, scope: !13236)
!13330 = !DILocation(line: 1836, column: 7, scope: !13234)
!13331 = !DILocation(line: 1836, column: 11, scope: !13234)
!13332 = !DILocation(line: 1836, column: 19, scope: !13234)
!13333 = !DILocation(line: 1836, column: 23, scope: !13234)
!13334 = !DILocation(line: 1836, column: 29, scope: !13234)
!13335 = !DILocation(line: 1836, column: 38, scope: !13234)
!13336 = !DILocation(line: 1838, column: 27, scope: !13234)
!13337 = !DILocation(line: 1838, column: 33, scope: !13234)
!13338 = !DILocation(line: 1839, column: 6, scope: !13234)
!13339 = !DILocation(line: 1839, column: 12, scope: !13234)
!13340 = !DILocation(line: 1839, column: 19, scope: !13234)
!13341 = !DILocation(line: 1840, column: 10, scope: !13234)
!13342 = !DILocation(line: 1840, column: 14, scope: !13234)
!13343 = !DILocation(line: 1840, column: 20, scope: !13234)
!13344 = !DILocation(line: 1840, column: 29, scope: !13234)
!13345 = !DILocation(line: 1838, column: 7, scope: !13234)
!13346 = !DILocation(line: 1841, column: 3, scope: !13235)
!13347 = !DILocation(line: 1841, column: 3, scope: !13234)
!13348 = !DILocation(line: 1846, column: 11, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13350, file: !2, line: 1846, column: 11)
!13350 = distinct !DILexicalBlock(scope: !13235, file: !2, line: 1841, column: 10)
!13351 = !DILocation(line: 1846, column: 15, scope: !13349)
!13352 = !DILocation(line: 1846, column: 21, scope: !13349)
!13353 = !DILocation(line: 1846, column: 30, scope: !13349)
!13354 = !DILocation(line: 1846, column: 38, scope: !13349)
!13355 = !DILocation(line: 1846, column: 11, scope: !13350)
!13356 = !DILocation(line: 1847, column: 34, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13349, file: !2, line: 1846, column: 44)
!13358 = !DILocation(line: 1847, column: 40, scope: !13357)
!13359 = !DILocation(line: 1848, column: 12, scope: !13357)
!13360 = !DILocation(line: 1848, column: 16, scope: !13357)
!13361 = !DILocation(line: 1848, column: 22, scope: !13357)
!13362 = !DILocation(line: 1848, column: 31, scope: !13357)
!13363 = !DILocation(line: 1849, column: 12, scope: !13357)
!13364 = !DILocation(line: 1849, column: 16, scope: !13357)
!13365 = !DILocation(line: 1849, column: 22, scope: !13357)
!13366 = !DILocation(line: 1849, column: 31, scope: !13357)
!13367 = !DILocation(line: 1847, column: 4, scope: !13357)
!13368 = !DILocation(line: 1850, column: 7, scope: !13357)
!13369 = !DILocation(line: 1851, column: 34, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13349, file: !2, line: 1850, column: 14)
!13371 = !DILocation(line: 1851, column: 40, scope: !13370)
!13372 = !DILocation(line: 1852, column: 12, scope: !13370)
!13373 = !DILocation(line: 1852, column: 16, scope: !13370)
!13374 = !DILocation(line: 1852, column: 22, scope: !13370)
!13375 = !DILocation(line: 1852, column: 31, scope: !13370)
!13376 = !DILocation(line: 1853, column: 12, scope: !13370)
!13377 = !DILocation(line: 1851, column: 4, scope: !13370)
!13378 = !DILocation(line: 1856, column: 6, scope: !13236)
!13379 = !DILocation(line: 1857, column: 2, scope: !13238)
!13380 = !DILocation(line: 1858, column: 6, scope: !13244)
!13381 = !DILocation(line: 1858, column: 10, scope: !13244)
!13382 = !DILocation(line: 1858, column: 18, scope: !13244)
!13383 = !DILocation(line: 1858, column: 22, scope: !13244)
!13384 = !DILocation(line: 1858, column: 28, scope: !13244)
!13385 = !DILocation(line: 1858, column: 37, scope: !13244)
!13386 = !DILocation(line: 1860, column: 10, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13244, file: !2, line: 1860, column: 10)
!13388 = !DILocation(line: 1860, column: 14, scope: !13387)
!13389 = !DILocation(line: 1860, column: 20, scope: !13387)
!13390 = !DILocation(line: 1860, column: 29, scope: !13387)
!13391 = !DILocation(line: 1860, column: 37, scope: !13387)
!13392 = !DILocation(line: 1860, column: 10, scope: !13244)
!13393 = !DILocation(line: 1861, column: 23, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13387, file: !2, line: 1860, column: 43)
!13395 = !DILocation(line: 1861, column: 29, scope: !13394)
!13396 = !DILocation(line: 1861, column: 35, scope: !13394)
!13397 = !DILocation(line: 1861, column: 39, scope: !13394)
!13398 = !DILocation(line: 1861, column: 45, scope: !13394)
!13399 = !DILocation(line: 1861, column: 54, scope: !13394)
!13400 = !DILocation(line: 1862, column: 9, scope: !13394)
!13401 = !DILocation(line: 1862, column: 15, scope: !13394)
!13402 = !DILocation(line: 1862, column: 22, scope: !13394)
!13403 = !DILocation(line: 1863, column: 9, scope: !13394)
!13404 = !DILocation(line: 1863, column: 13, scope: !13394)
!13405 = !DILocation(line: 1863, column: 19, scope: !13394)
!13406 = !DILocation(line: 1863, column: 28, scope: !13394)
!13407 = !DILocation(line: 1861, column: 3, scope: !13394)
!13408 = !DILocation(line: 1864, column: 6, scope: !13394)
!13409 = !DILocation(line: 1865, column: 23, scope: !13410)
!13410 = distinct !DILexicalBlock(scope: !13387, file: !2, line: 1864, column: 13)
!13411 = !DILocation(line: 1865, column: 29, scope: !13410)
!13412 = !DILocation(line: 1865, column: 35, scope: !13410)
!13413 = !DILocation(line: 1865, column: 39, scope: !13410)
!13414 = !DILocation(line: 1865, column: 45, scope: !13410)
!13415 = !DILocation(line: 1865, column: 54, scope: !13410)
!13416 = !DILocation(line: 1866, column: 9, scope: !13410)
!13417 = !DILocation(line: 1866, column: 15, scope: !13410)
!13418 = !DILocation(line: 1866, column: 22, scope: !13410)
!13419 = !DILocation(line: 1866, column: 30, scope: !13410)
!13420 = !DILocation(line: 1865, column: 3, scope: !13410)
!13421 = !DILocation(line: 1868, column: 2, scope: !13239)
!13422 = !DILocation(line: 1869, column: 5, scope: !13240)
!13423 = !DILocation(line: 1826, column: 51, scope: !13241)
!13424 = !DILocation(line: 1826, column: 5, scope: !13241)
!13425 = distinct !{!13425, !13302, !13426, !1794}
!13426 = !DILocation(line: 1869, column: 5, scope: !13242)
!13427 = !DILocation(line: 1870, column: 5, scope: !13222)
!13428 = !DILocation(line: 1870, column: 9, scope: !13222)
!13429 = !DILocation(line: 1870, column: 14, scope: !13222)
!13430 = !DILocation(line: 1871, column: 1, scope: !13222)
!13431 = distinct !DISubprogram(name: "xmlRegCalloc2", scope: !2, file: !2, line: 433, type: !13432, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !13434)
!13432 = !DISubroutineType(types: !13433)
!13433 = !{!1335, !1509, !1509, !1509}
!13434 = !{!13435, !13436, !13437, !13438, !13439}
!13435 = !DILocalVariable(name: "dim1", arg: 1, scope: !13431, file: !2, line: 433, type: !1509)
!13436 = !DILocalVariable(name: "dim2", arg: 2, scope: !13431, file: !2, line: 433, type: !1509)
!13437 = !DILocalVariable(name: "elemSize", arg: 3, scope: !13431, file: !2, line: 433, type: !1509)
!13438 = !DILocalVariable(name: "totalSize", scope: !13431, file: !2, line: 434, type: !1509)
!13439 = !DILocalVariable(name: "ret", scope: !13431, file: !2, line: 435, type: !1335)
!13440 = !{!13441, !13441, i64 0}
!13441 = !{!"long", !1529, i64 0}
!13442 = !DILocation(line: 433, column: 22, scope: !13431)
!13443 = !DILocation(line: 433, column: 35, scope: !13431)
!13444 = !DILocation(line: 433, column: 48, scope: !13431)
!13445 = !DILocation(line: 434, column: 5, scope: !13431)
!13446 = !DILocation(line: 434, column: 12, scope: !13431)
!13447 = !DILocation(line: 435, column: 5, scope: !13431)
!13448 = !DILocation(line: 435, column: 11, scope: !13431)
!13449 = !DILocation(line: 438, column: 9, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13431, file: !2, line: 438, column: 9)
!13451 = !DILocation(line: 438, column: 27, scope: !13450)
!13452 = !DILocation(line: 438, column: 25, scope: !13450)
!13453 = !DILocation(line: 438, column: 34, scope: !13450)
!13454 = !DILocation(line: 438, column: 32, scope: !13450)
!13455 = !DILocation(line: 438, column: 14, scope: !13450)
!13456 = !DILocation(line: 438, column: 9, scope: !13431)
!13457 = !DILocation(line: 439, column: 9, scope: !13450)
!13458 = !DILocation(line: 440, column: 17, scope: !13431)
!13459 = !DILocation(line: 440, column: 24, scope: !13431)
!13460 = !DILocation(line: 440, column: 22, scope: !13431)
!13461 = !DILocation(line: 440, column: 31, scope: !13431)
!13462 = !DILocation(line: 440, column: 29, scope: !13431)
!13463 = !DILocation(line: 440, column: 15, scope: !13431)
!13464 = !DILocation(line: 441, column: 11, scope: !13431)
!13465 = !DILocation(line: 441, column: 21, scope: !13431)
!13466 = !DILocation(line: 441, column: 9, scope: !13431)
!13467 = !DILocation(line: 442, column: 9, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13431, file: !2, line: 442, column: 9)
!13469 = !DILocation(line: 442, column: 13, scope: !13468)
!13470 = !DILocation(line: 442, column: 9, scope: !13431)
!13471 = !DILocation(line: 443, column: 16, scope: !13468)
!13472 = !DILocation(line: 443, column: 24, scope: !13468)
!13473 = !DILocation(line: 443, column: 9, scope: !13468)
!13474 = !DILocation(line: 444, column: 13, scope: !13431)
!13475 = !DILocation(line: 444, column: 5, scope: !13431)
!13476 = !DILocation(line: 445, column: 1, scope: !13431)
!13477 = distinct !DISubprogram(name: "xmlRegCheckCharacter", scope: !2, file: !2, line: 3034, type: !13478, scopeLine: 3034, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !13480)
!13478 = !DISubroutineType(types: !13479)
!13479 = !{!1306, !1378, !1306}
!13480 = !{!13481, !13482, !13483, !13484, !13485, !13486}
!13481 = !DILocalVariable(name: "atom", arg: 1, scope: !13477, file: !2, line: 3034, type: !1378)
!13482 = !DILocalVariable(name: "codepoint", arg: 2, scope: !13477, file: !2, line: 3034, type: !1306)
!13483 = !DILocalVariable(name: "i", scope: !13477, file: !2, line: 3035, type: !1306)
!13484 = !DILocalVariable(name: "ret", scope: !13477, file: !2, line: 3035, type: !1306)
!13485 = !DILocalVariable(name: "range", scope: !13477, file: !2, line: 3036, type: !1401)
!13486 = !DILocalVariable(name: "accept", scope: !13487, file: !2, line: 3048, type: !1306)
!13487 = distinct !DILexicalBlock(scope: !13488, file: !2, line: 3047, column: 33)
!13488 = distinct !DILexicalBlock(scope: !13477, file: !2, line: 3041, column: 25)
!13489 = !DILocation(line: 3034, column: 36, scope: !13477)
!13490 = !DILocation(line: 3034, column: 46, scope: !13477)
!13491 = !DILocation(line: 3035, column: 5, scope: !13477)
!13492 = !DILocation(line: 3035, column: 9, scope: !13477)
!13493 = !DILocation(line: 3035, column: 12, scope: !13477)
!13494 = !DILocation(line: 3036, column: 5, scope: !13477)
!13495 = !DILocation(line: 3036, column: 20, scope: !13477)
!13496 = !DILocation(line: 3038, column: 10, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13477, file: !2, line: 3038, column: 9)
!13498 = !DILocation(line: 3038, column: 15, scope: !13497)
!13499 = !DILocation(line: 3038, column: 24, scope: !13497)
!13500 = !DILocation(line: 3038, column: 29, scope: !13497)
!13501 = !DILocation(line: 3038, column: 9, scope: !13477)
!13502 = !DILocation(line: 3039, column: 2, scope: !13497)
!13503 = !DILocation(line: 3041, column: 13, scope: !13477)
!13504 = !DILocation(line: 3041, column: 19, scope: !13477)
!13505 = !DILocation(line: 3041, column: 5, scope: !13477)
!13506 = !DILocation(line: 3044, column: 6, scope: !13488)
!13507 = !DILocation(line: 3046, column: 20, scope: !13488)
!13508 = !DILocation(line: 3046, column: 33, scope: !13488)
!13509 = !DILocation(line: 3046, column: 39, scope: !13488)
!13510 = !DILocation(line: 3046, column: 30, scope: !13488)
!13511 = !DILocation(line: 3046, column: 13, scope: !13488)
!13512 = !DILocation(line: 3048, column: 6, scope: !13487)
!13513 = !DILocation(line: 3048, column: 10, scope: !13487)
!13514 = !DILocation(line: 3050, column: 13, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13487, file: !2, line: 3050, column: 6)
!13516 = !DILocation(line: 3050, column: 11, scope: !13515)
!13517 = !DILocation(line: 3050, column: 17, scope: !13518)
!13518 = distinct !DILexicalBlock(scope: !13515, file: !2, line: 3050, column: 6)
!13519 = !DILocation(line: 3050, column: 21, scope: !13518)
!13520 = !DILocation(line: 3050, column: 27, scope: !13518)
!13521 = !DILocation(line: 3050, column: 19, scope: !13518)
!13522 = !DILocation(line: 3050, column: 6, scope: !13515)
!13523 = !DILocation(line: 3051, column: 11, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13518, file: !2, line: 3050, column: 41)
!13525 = !DILocation(line: 3051, column: 17, scope: !13524)
!13526 = !DILocation(line: 3051, column: 24, scope: !13524)
!13527 = !DILocation(line: 3051, column: 9, scope: !13524)
!13528 = !DILocation(line: 3052, column: 7, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13524, file: !2, line: 3052, column: 7)
!13530 = !DILocation(line: 3052, column: 14, scope: !13529)
!13531 = !DILocation(line: 3052, column: 18, scope: !13529)
!13532 = !DILocation(line: 3052, column: 7, scope: !13524)
!13533 = !DILocation(line: 3053, column: 39, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13529, file: !2, line: 3052, column: 24)
!13535 = !DILocation(line: 3053, column: 46, scope: !13534)
!13536 = !DILocation(line: 3053, column: 52, scope: !13534)
!13537 = !DILocation(line: 3054, column: 10, scope: !13534)
!13538 = !DILocation(line: 3054, column: 17, scope: !13534)
!13539 = !DILocation(line: 3054, column: 24, scope: !13534)
!13540 = !DILocation(line: 3054, column: 31, scope: !13534)
!13541 = !DILocation(line: 3055, column: 7, scope: !13534)
!13542 = !DILocation(line: 3055, column: 14, scope: !13534)
!13543 = !DILocation(line: 3053, column: 13, scope: !13534)
!13544 = !DILocation(line: 3053, column: 11, scope: !13534)
!13545 = !DILocation(line: 3056, column: 11, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13534, file: !2, line: 3056, column: 11)
!13547 = !DILocation(line: 3056, column: 15, scope: !13546)
!13548 = !DILocation(line: 3056, column: 11, scope: !13534)
!13549 = !DILocation(line: 3057, column: 4, scope: !13546)
!13550 = !DILocation(line: 3058, column: 3, scope: !13534)
!13551 = !DILocation(line: 3058, column: 14, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13529, file: !2, line: 3058, column: 14)
!13553 = !DILocation(line: 3058, column: 21, scope: !13552)
!13554 = !DILocation(line: 3058, column: 14, scope: !13529)
!13555 = !DILocation(line: 3059, column: 39, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13552, file: !2, line: 3058, column: 26)
!13557 = !DILocation(line: 3059, column: 46, scope: !13556)
!13558 = !DILocation(line: 3059, column: 52, scope: !13556)
!13559 = !DILocation(line: 3060, column: 10, scope: !13556)
!13560 = !DILocation(line: 3060, column: 17, scope: !13556)
!13561 = !DILocation(line: 3060, column: 24, scope: !13556)
!13562 = !DILocation(line: 3060, column: 31, scope: !13556)
!13563 = !DILocation(line: 3061, column: 7, scope: !13556)
!13564 = !DILocation(line: 3061, column: 14, scope: !13556)
!13565 = !DILocation(line: 3059, column: 13, scope: !13556)
!13566 = !DILocation(line: 3059, column: 11, scope: !13556)
!13567 = !DILocation(line: 3062, column: 11, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13556, file: !2, line: 3062, column: 11)
!13569 = !DILocation(line: 3062, column: 15, scope: !13568)
!13570 = !DILocation(line: 3062, column: 11, scope: !13556)
!13571 = !DILocation(line: 3063, column: 18, scope: !13568)
!13572 = !DILocation(line: 3063, column: 11, scope: !13568)
!13573 = !DILocation(line: 3065, column: 11, scope: !13568)
!13574 = !DILocation(line: 3066, column: 3, scope: !13556)
!13575 = !DILocation(line: 3067, column: 39, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13552, file: !2, line: 3066, column: 10)
!13577 = !DILocation(line: 3067, column: 46, scope: !13576)
!13578 = !DILocation(line: 3067, column: 52, scope: !13576)
!13579 = !DILocation(line: 3068, column: 10, scope: !13576)
!13580 = !DILocation(line: 3068, column: 17, scope: !13576)
!13581 = !DILocation(line: 3068, column: 24, scope: !13576)
!13582 = !DILocation(line: 3068, column: 31, scope: !13576)
!13583 = !DILocation(line: 3069, column: 7, scope: !13576)
!13584 = !DILocation(line: 3069, column: 14, scope: !13576)
!13585 = !DILocation(line: 3067, column: 13, scope: !13576)
!13586 = !DILocation(line: 3067, column: 11, scope: !13576)
!13587 = !DILocation(line: 3070, column: 11, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13576, file: !2, line: 3070, column: 11)
!13589 = !DILocation(line: 3070, column: 15, scope: !13588)
!13590 = !DILocation(line: 3070, column: 11, scope: !13576)
!13591 = !DILocation(line: 3071, column: 11, scope: !13588)
!13592 = !DILocation(line: 3071, column: 4, scope: !13588)
!13593 = !DILocation(line: 3073, column: 6, scope: !13524)
!13594 = !DILocation(line: 3050, column: 37, scope: !13518)
!13595 = !DILocation(line: 3050, column: 6, scope: !13518)
!13596 = distinct !{!13596, !13522, !13597, !1794}
!13597 = !DILocation(line: 3073, column: 6, scope: !13515)
!13598 = !DILocation(line: 3074, column: 13, scope: !13487)
!13599 = !DILocation(line: 3074, column: 6, scope: !13487)
!13600 = !DILocation(line: 3075, column: 2, scope: !13488)
!13601 = !DILocation(line: 3077, column: 6, scope: !13488)
!13602 = !DILocation(line: 3078, column: 6, scope: !13488)
!13603 = !DILocation(line: 3127, column: 38, scope: !13488)
!13604 = !DILocation(line: 3127, column: 44, scope: !13488)
!13605 = !DILocation(line: 3127, column: 50, scope: !13488)
!13606 = !DILocation(line: 3128, column: 48, scope: !13488)
!13607 = !DILocation(line: 3128, column: 54, scope: !13488)
!13608 = !DILocation(line: 3127, column: 12, scope: !13488)
!13609 = !DILocation(line: 3127, column: 10, scope: !13488)
!13610 = !DILocation(line: 3129, column: 10, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13488, file: !2, line: 3129, column: 10)
!13612 = !DILocation(line: 3129, column: 16, scope: !13611)
!13613 = !DILocation(line: 3129, column: 10, scope: !13488)
!13614 = !DILocation(line: 3130, column: 10, scope: !13611)
!13615 = !DILocation(line: 3130, column: 9, scope: !13611)
!13616 = !DILocation(line: 3130, column: 7, scope: !13611)
!13617 = !DILocation(line: 3130, column: 3, scope: !13611)
!13618 = !DILocation(line: 3131, column: 6, scope: !13488)
!13619 = !DILocation(line: 3133, column: 12, scope: !13477)
!13620 = !DILocation(line: 3133, column: 5, scope: !13477)
!13621 = !DILocation(line: 3134, column: 1, scope: !13477)
!13622 = distinct !DISubprogram(name: "xmlRegCheckCharacterRange", scope: !2, file: !2, line: 2859, type: !13623, scopeLine: 2860, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !13625)
!13623 = !DISubroutineType(types: !13624)
!13624 = !{!1306, !1385, !1306, !1306, !1306, !1306, !1445}
!13625 = !{!13626, !13627, !13628, !13629, !13630, !13631, !13632}
!13626 = !DILocalVariable(name: "type", arg: 1, scope: !13622, file: !2, line: 2859, type: !1385)
!13627 = !DILocalVariable(name: "codepoint", arg: 2, scope: !13622, file: !2, line: 2859, type: !1306)
!13628 = !DILocalVariable(name: "neg", arg: 3, scope: !13622, file: !2, line: 2859, type: !1306)
!13629 = !DILocalVariable(name: "start", arg: 4, scope: !13622, file: !2, line: 2860, type: !1306)
!13630 = !DILocalVariable(name: "end", arg: 5, scope: !13622, file: !2, line: 2860, type: !1306)
!13631 = !DILocalVariable(name: "blockName", arg: 6, scope: !13622, file: !2, line: 2860, type: !1445)
!13632 = !DILocalVariable(name: "ret", scope: !13622, file: !2, line: 2861, type: !1306)
!13633 = !DILocation(line: 2859, column: 42, scope: !13622)
!13634 = !DILocation(line: 2859, column: 52, scope: !13622)
!13635 = !DILocation(line: 2859, column: 67, scope: !13622)
!13636 = !DILocation(line: 2860, column: 24, scope: !13622)
!13637 = !DILocation(line: 2860, column: 35, scope: !13622)
!13638 = !DILocation(line: 2860, column: 55, scope: !13622)
!13639 = !DILocation(line: 2861, column: 5, scope: !13622)
!13640 = !DILocation(line: 2861, column: 9, scope: !13622)
!13641 = !DILocation(line: 2863, column: 13, scope: !13622)
!13642 = !DILocation(line: 2863, column: 5, scope: !13622)
!13643 = !DILocation(line: 2868, column: 6, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13622, file: !2, line: 2863, column: 19)
!13645 = !DILocation(line: 2870, column: 14, scope: !13644)
!13646 = !DILocation(line: 2870, column: 24, scope: !13644)
!13647 = !DILocation(line: 2870, column: 33, scope: !13644)
!13648 = !DILocation(line: 2870, column: 37, scope: !13644)
!13649 = !DILocation(line: 2870, column: 47, scope: !13644)
!13650 = !DILocation(line: 0, scope: !13644)
!13651 = !DILocation(line: 2870, column: 10, scope: !13644)
!13652 = !DILocation(line: 2871, column: 6, scope: !13644)
!13653 = !DILocation(line: 2873, column: 14, scope: !13644)
!13654 = !DILocation(line: 2873, column: 27, scope: !13644)
!13655 = !DILocation(line: 2873, column: 24, scope: !13644)
!13656 = !DILocation(line: 2873, column: 34, scope: !13644)
!13657 = !DILocation(line: 2873, column: 38, scope: !13644)
!13658 = !DILocation(line: 2873, column: 51, scope: !13644)
!13659 = !DILocation(line: 2873, column: 48, scope: !13644)
!13660 = !DILocation(line: 2873, column: 10, scope: !13644)
!13661 = !DILocation(line: 2874, column: 6, scope: !13644)
!13662 = !DILocation(line: 2876, column: 13, scope: !13644)
!13663 = !DILocation(line: 2876, column: 12, scope: !13644)
!13664 = !DILocation(line: 2876, column: 10, scope: !13644)
!13665 = !DILocation(line: 2876, column: 6, scope: !13644)
!13666 = !DILocation(line: 2879, column: 14, scope: !13644)
!13667 = !DILocation(line: 2879, column: 24, scope: !13644)
!13668 = !DILocation(line: 2879, column: 33, scope: !13644)
!13669 = !DILocation(line: 2879, column: 37, scope: !13644)
!13670 = !DILocation(line: 2879, column: 47, scope: !13644)
!13671 = !DILocation(line: 2879, column: 56, scope: !13644)
!13672 = !DILocation(line: 2880, column: 7, scope: !13644)
!13673 = !DILocation(line: 2880, column: 17, scope: !13644)
!13674 = !DILocation(line: 2880, column: 26, scope: !13644)
!13675 = !DILocation(line: 2880, column: 30, scope: !13644)
!13676 = !DILocation(line: 2880, column: 40, scope: !13644)
!13677 = !DILocation(line: 2879, column: 10, scope: !13644)
!13678 = !DILocation(line: 2881, column: 6, scope: !13644)
!13679 = !DILocation(line: 2883, column: 13, scope: !13644)
!13680 = !DILocation(line: 2883, column: 12, scope: !13644)
!13681 = !DILocation(line: 2883, column: 10, scope: !13644)
!13682 = !DILocation(line: 2883, column: 6, scope: !13644)
!13683 = !DILocation(line: 2886, column: 13, scope: !13644)
!13684 = !DILocation(line: 2886, column: 34, scope: !13644)
!13685 = !DILocation(line: 2887, column: 7, scope: !13644)
!13686 = !DILocation(line: 2887, column: 17, scope: !13644)
!13687 = !DILocation(line: 2887, column: 25, scope: !13644)
!13688 = !DILocation(line: 2887, column: 29, scope: !13644)
!13689 = !DILocation(line: 2887, column: 39, scope: !13644)
!13690 = !DILocation(line: 2886, column: 10, scope: !13644)
!13691 = !DILocation(line: 2888, column: 6, scope: !13644)
!13692 = !DILocation(line: 2890, column: 13, scope: !13644)
!13693 = !DILocation(line: 2890, column: 12, scope: !13644)
!13694 = !DILocation(line: 2890, column: 10, scope: !13644)
!13695 = !DILocation(line: 2890, column: 6, scope: !13644)
!13696 = !DILocation(line: 2893, column: 13, scope: !13644)
!13697 = !DILocation(line: 2893, column: 34, scope: !13644)
!13698 = !DILocation(line: 2893, column: 37, scope: !13644)
!13699 = !DILocation(line: 2893, column: 57, scope: !13644)
!13700 = !DILocation(line: 2894, column: 7, scope: !13644)
!13701 = !DILocation(line: 2894, column: 17, scope: !13644)
!13702 = !DILocation(line: 2894, column: 25, scope: !13644)
!13703 = !DILocation(line: 2894, column: 29, scope: !13644)
!13704 = !DILocation(line: 2894, column: 39, scope: !13644)
!13705 = !DILocation(line: 2894, column: 47, scope: !13644)
!13706 = !DILocation(line: 2895, column: 7, scope: !13644)
!13707 = !DILocation(line: 2895, column: 17, scope: !13644)
!13708 = !DILocation(line: 2895, column: 25, scope: !13644)
!13709 = !DILocation(line: 2895, column: 29, scope: !13644)
!13710 = !DILocation(line: 2895, column: 39, scope: !13644)
!13711 = !DILocation(line: 2895, column: 47, scope: !13644)
!13712 = !DILocation(line: 2896, column: 6, scope: !13644)
!13713 = !DILocation(line: 2896, column: 30, scope: !13644)
!13714 = !DILocation(line: 2896, column: 33, scope: !13644)
!13715 = !DILocation(line: 2893, column: 10, scope: !13644)
!13716 = !DILocation(line: 2897, column: 6, scope: !13644)
!13717 = !DILocation(line: 2899, column: 13, scope: !13644)
!13718 = !DILocation(line: 2899, column: 12, scope: !13644)
!13719 = !DILocation(line: 2899, column: 10, scope: !13644)
!13720 = !DILocation(line: 2899, column: 6, scope: !13644)
!13721 = !DILocation(line: 2902, column: 26, scope: !13644)
!13722 = !DILocation(line: 2902, column: 12, scope: !13644)
!13723 = !DILocation(line: 2902, column: 10, scope: !13644)
!13724 = !DILocation(line: 2903, column: 6, scope: !13644)
!13725 = !DILocation(line: 2905, column: 13, scope: !13644)
!13726 = !DILocation(line: 2905, column: 12, scope: !13644)
!13727 = !DILocation(line: 2905, column: 10, scope: !13644)
!13728 = !DILocation(line: 2905, column: 6, scope: !13644)
!13729 = !DILocation(line: 2908, column: 25, scope: !13644)
!13730 = !DILocation(line: 2908, column: 12, scope: !13644)
!13731 = !DILocation(line: 2908, column: 10, scope: !13644)
!13732 = !DILocation(line: 2909, column: 10, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13644, file: !2, line: 2909, column: 10)
!13734 = !DILocation(line: 2909, column: 14, scope: !13733)
!13735 = !DILocation(line: 2909, column: 10, scope: !13644)
!13736 = !DILocation(line: 2910, column: 22, scope: !13733)
!13737 = !DILocation(line: 2910, column: 9, scope: !13733)
!13738 = !DILocation(line: 2910, column: 7, scope: !13733)
!13739 = !DILocation(line: 2910, column: 3, scope: !13733)
!13740 = !DILocation(line: 2911, column: 10, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13644, file: !2, line: 2911, column: 10)
!13742 = !DILocation(line: 2911, column: 14, scope: !13741)
!13743 = !DILocation(line: 2911, column: 10, scope: !13644)
!13744 = !DILocation(line: 2912, column: 22, scope: !13741)
!13745 = !DILocation(line: 2912, column: 9, scope: !13741)
!13746 = !DILocation(line: 2912, column: 7, scope: !13741)
!13747 = !DILocation(line: 2912, column: 3, scope: !13741)
!13748 = !DILocation(line: 2913, column: 6, scope: !13644)
!13749 = !DILocation(line: 2915, column: 25, scope: !13644)
!13750 = !DILocation(line: 2915, column: 12, scope: !13644)
!13751 = !DILocation(line: 2915, column: 10, scope: !13644)
!13752 = !DILocation(line: 2916, column: 6, scope: !13644)
!13753 = !DILocation(line: 2918, column: 26, scope: !13644)
!13754 = !DILocation(line: 2918, column: 12, scope: !13644)
!13755 = !DILocation(line: 2918, column: 10, scope: !13644)
!13756 = !DILocation(line: 2919, column: 6, scope: !13644)
!13757 = !DILocation(line: 2921, column: 26, scope: !13644)
!13758 = !DILocation(line: 2921, column: 12, scope: !13644)
!13759 = !DILocation(line: 2921, column: 10, scope: !13644)
!13760 = !DILocation(line: 2922, column: 6, scope: !13644)
!13761 = !DILocation(line: 2924, column: 26, scope: !13644)
!13762 = !DILocation(line: 2924, column: 12, scope: !13644)
!13763 = !DILocation(line: 2924, column: 10, scope: !13644)
!13764 = !DILocation(line: 2925, column: 6, scope: !13644)
!13765 = !DILocation(line: 2927, column: 26, scope: !13644)
!13766 = !DILocation(line: 2927, column: 12, scope: !13644)
!13767 = !DILocation(line: 2927, column: 10, scope: !13644)
!13768 = !DILocation(line: 2928, column: 6, scope: !13644)
!13769 = !DILocation(line: 2930, column: 26, scope: !13644)
!13770 = !DILocation(line: 2930, column: 12, scope: !13644)
!13771 = !DILocation(line: 2930, column: 10, scope: !13644)
!13772 = !DILocation(line: 2931, column: 6, scope: !13644)
!13773 = !DILocation(line: 2933, column: 25, scope: !13644)
!13774 = !DILocation(line: 2933, column: 12, scope: !13644)
!13775 = !DILocation(line: 2933, column: 10, scope: !13644)
!13776 = !DILocation(line: 2934, column: 6, scope: !13644)
!13777 = !DILocation(line: 2936, column: 26, scope: !13644)
!13778 = !DILocation(line: 2936, column: 12, scope: !13644)
!13779 = !DILocation(line: 2936, column: 10, scope: !13644)
!13780 = !DILocation(line: 2937, column: 6, scope: !13644)
!13781 = !DILocation(line: 2939, column: 26, scope: !13644)
!13782 = !DILocation(line: 2939, column: 12, scope: !13644)
!13783 = !DILocation(line: 2939, column: 10, scope: !13644)
!13784 = !DILocation(line: 2940, column: 6, scope: !13644)
!13785 = !DILocation(line: 2942, column: 26, scope: !13644)
!13786 = !DILocation(line: 2942, column: 12, scope: !13644)
!13787 = !DILocation(line: 2942, column: 10, scope: !13644)
!13788 = !DILocation(line: 2943, column: 6, scope: !13644)
!13789 = !DILocation(line: 2945, column: 25, scope: !13644)
!13790 = !DILocation(line: 2945, column: 12, scope: !13644)
!13791 = !DILocation(line: 2945, column: 10, scope: !13644)
!13792 = !DILocation(line: 2946, column: 6, scope: !13644)
!13793 = !DILocation(line: 2948, column: 26, scope: !13644)
!13794 = !DILocation(line: 2948, column: 12, scope: !13644)
!13795 = !DILocation(line: 2948, column: 10, scope: !13644)
!13796 = !DILocation(line: 2949, column: 6, scope: !13644)
!13797 = !DILocation(line: 2951, column: 26, scope: !13644)
!13798 = !DILocation(line: 2951, column: 12, scope: !13644)
!13799 = !DILocation(line: 2951, column: 10, scope: !13644)
!13800 = !DILocation(line: 2952, column: 6, scope: !13644)
!13801 = !DILocation(line: 2954, column: 26, scope: !13644)
!13802 = !DILocation(line: 2954, column: 12, scope: !13644)
!13803 = !DILocation(line: 2954, column: 10, scope: !13644)
!13804 = !DILocation(line: 2955, column: 6, scope: !13644)
!13805 = !DILocation(line: 2957, column: 25, scope: !13644)
!13806 = !DILocation(line: 2957, column: 12, scope: !13644)
!13807 = !DILocation(line: 2957, column: 10, scope: !13644)
!13808 = !DILocation(line: 2958, column: 6, scope: !13644)
!13809 = !DILocation(line: 2960, column: 26, scope: !13644)
!13810 = !DILocation(line: 2960, column: 12, scope: !13644)
!13811 = !DILocation(line: 2960, column: 10, scope: !13644)
!13812 = !DILocation(line: 2961, column: 6, scope: !13644)
!13813 = !DILocation(line: 2963, column: 26, scope: !13644)
!13814 = !DILocation(line: 2963, column: 12, scope: !13644)
!13815 = !DILocation(line: 2963, column: 10, scope: !13644)
!13816 = !DILocation(line: 2964, column: 6, scope: !13644)
!13817 = !DILocation(line: 2966, column: 26, scope: !13644)
!13818 = !DILocation(line: 2966, column: 12, scope: !13644)
!13819 = !DILocation(line: 2966, column: 10, scope: !13644)
!13820 = !DILocation(line: 2967, column: 6, scope: !13644)
!13821 = !DILocation(line: 2969, column: 26, scope: !13644)
!13822 = !DILocation(line: 2969, column: 12, scope: !13644)
!13823 = !DILocation(line: 2969, column: 10, scope: !13644)
!13824 = !DILocation(line: 2970, column: 6, scope: !13644)
!13825 = !DILocation(line: 2972, column: 26, scope: !13644)
!13826 = !DILocation(line: 2972, column: 12, scope: !13644)
!13827 = !DILocation(line: 2972, column: 10, scope: !13644)
!13828 = !DILocation(line: 2973, column: 6, scope: !13644)
!13829 = !DILocation(line: 2975, column: 26, scope: !13644)
!13830 = !DILocation(line: 2975, column: 12, scope: !13644)
!13831 = !DILocation(line: 2975, column: 10, scope: !13644)
!13832 = !DILocation(line: 2976, column: 6, scope: !13644)
!13833 = !DILocation(line: 2978, column: 26, scope: !13644)
!13834 = !DILocation(line: 2978, column: 12, scope: !13644)
!13835 = !DILocation(line: 2978, column: 10, scope: !13644)
!13836 = !DILocation(line: 2979, column: 6, scope: !13644)
!13837 = !DILocation(line: 2981, column: 25, scope: !13644)
!13838 = !DILocation(line: 2981, column: 12, scope: !13644)
!13839 = !DILocation(line: 2981, column: 10, scope: !13644)
!13840 = !DILocation(line: 2982, column: 6, scope: !13644)
!13841 = !DILocation(line: 2984, column: 26, scope: !13644)
!13842 = !DILocation(line: 2984, column: 12, scope: !13644)
!13843 = !DILocation(line: 2984, column: 10, scope: !13644)
!13844 = !DILocation(line: 2985, column: 6, scope: !13644)
!13845 = !DILocation(line: 2987, column: 26, scope: !13644)
!13846 = !DILocation(line: 2987, column: 12, scope: !13644)
!13847 = !DILocation(line: 2987, column: 10, scope: !13644)
!13848 = !DILocation(line: 2988, column: 6, scope: !13644)
!13849 = !DILocation(line: 2990, column: 26, scope: !13644)
!13850 = !DILocation(line: 2990, column: 12, scope: !13644)
!13851 = !DILocation(line: 2990, column: 10, scope: !13644)
!13852 = !DILocation(line: 2991, column: 6, scope: !13644)
!13853 = !DILocation(line: 2993, column: 25, scope: !13644)
!13854 = !DILocation(line: 2993, column: 12, scope: !13644)
!13855 = !DILocation(line: 2993, column: 10, scope: !13644)
!13856 = !DILocation(line: 2994, column: 6, scope: !13644)
!13857 = !DILocation(line: 2996, column: 26, scope: !13644)
!13858 = !DILocation(line: 2996, column: 12, scope: !13644)
!13859 = !DILocation(line: 2996, column: 10, scope: !13644)
!13860 = !DILocation(line: 2997, column: 6, scope: !13644)
!13861 = !DILocation(line: 2999, column: 26, scope: !13644)
!13862 = !DILocation(line: 2999, column: 12, scope: !13644)
!13863 = !DILocation(line: 2999, column: 10, scope: !13644)
!13864 = !DILocation(line: 3000, column: 6, scope: !13644)
!13865 = !DILocation(line: 3002, column: 26, scope: !13644)
!13866 = !DILocation(line: 3002, column: 12, scope: !13644)
!13867 = !DILocation(line: 3002, column: 10, scope: !13644)
!13868 = !DILocation(line: 3003, column: 6, scope: !13644)
!13869 = !DILocation(line: 3005, column: 26, scope: !13644)
!13870 = !DILocation(line: 3005, column: 12, scope: !13644)
!13871 = !DILocation(line: 3005, column: 10, scope: !13644)
!13872 = !DILocation(line: 3006, column: 6, scope: !13644)
!13873 = !DILocation(line: 3008, column: 25, scope: !13644)
!13874 = !DILocation(line: 3008, column: 12, scope: !13644)
!13875 = !DILocation(line: 3008, column: 10, scope: !13644)
!13876 = !DILocation(line: 3009, column: 6, scope: !13644)
!13877 = !DILocation(line: 3011, column: 26, scope: !13644)
!13878 = !DILocation(line: 3011, column: 12, scope: !13644)
!13879 = !DILocation(line: 3011, column: 10, scope: !13644)
!13880 = !DILocation(line: 3012, column: 6, scope: !13644)
!13881 = !DILocation(line: 3014, column: 26, scope: !13644)
!13882 = !DILocation(line: 3014, column: 12, scope: !13644)
!13883 = !DILocation(line: 3014, column: 10, scope: !13644)
!13884 = !DILocation(line: 3015, column: 6, scope: !13644)
!13885 = !DILocation(line: 3017, column: 26, scope: !13644)
!13886 = !DILocation(line: 3017, column: 12, scope: !13644)
!13887 = !DILocation(line: 3017, column: 10, scope: !13644)
!13888 = !DILocation(line: 3018, column: 6, scope: !13644)
!13889 = !DILocation(line: 3022, column: 10, scope: !13644)
!13890 = !DILocation(line: 3023, column: 6, scope: !13644)
!13891 = !DILocation(line: 3025, column: 26, scope: !13644)
!13892 = !DILocation(line: 3025, column: 52, scope: !13644)
!13893 = !DILocation(line: 3025, column: 12, scope: !13644)
!13894 = !DILocation(line: 3025, column: 10, scope: !13644)
!13895 = !DILocation(line: 3026, column: 6, scope: !13644)
!13896 = !DILocation(line: 3028, column: 9, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13622, file: !2, line: 3028, column: 9)
!13898 = !DILocation(line: 3028, column: 9, scope: !13622)
!13899 = !DILocation(line: 3029, column: 10, scope: !13897)
!13900 = !DILocation(line: 3029, column: 9, scope: !13897)
!13901 = !DILocation(line: 3029, column: 2, scope: !13897)
!13902 = !DILocation(line: 3030, column: 12, scope: !13622)
!13903 = !DILocation(line: 3030, column: 5, scope: !13622)
!13904 = !DILocation(line: 3031, column: 1, scope: !13622)
!13905 = !DISubprogram(name: "printf", scope: !3952, file: !3952, line: 356, type: !13906, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13906 = !DISubroutineType(types: !13907)
!13907 = !{!1306, !3956, null}
!13908 = !DISubprogram(name: "xmlCharInRange", scope: !13909, file: !13909, line: 55, type: !13910, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13909 = !DIFile(filename: "./include/libxml/chvalid.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "4e1ca6554b98687e75d03662cd92d14e")
!13910 = !DISubroutineType(types: !13911)
!13911 = !{!1306, !393, !13912}
!13912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13913, size: 64)
!13913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13914)
!13914 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlChRangeGroup", file: !13909, line: 42, baseType: !13915)
!13915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlChRangeGroup", file: !13909, line: 44, size: 192, elements: !13916)
!13916 = !{!13917, !13918, !13919, !13927}
!13917 = !DIDerivedType(tag: DW_TAG_member, name: "nbShortRange", scope: !13915, file: !13909, line: 45, baseType: !1306, size: 32)
!13918 = !DIDerivedType(tag: DW_TAG_member, name: "nbLongRange", scope: !13915, file: !13909, line: 46, baseType: !1306, size: 32, offset: 32)
!13919 = !DIDerivedType(tag: DW_TAG_member, name: "shortRange", scope: !13915, file: !13909, line: 47, baseType: !13920, size: 64, offset: 64)
!13920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13921, size: 64)
!13921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13922)
!13922 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlChSRange", file: !13909, line: 28, baseType: !13923)
!13923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlChSRange", file: !13909, line: 30, size: 32, elements: !13924)
!13924 = !{!13925, !13926}
!13925 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !13923, file: !13909, line: 31, baseType: !3810, size: 16)
!13926 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !13923, file: !13909, line: 32, baseType: !3810, size: 16, offset: 16)
!13927 = !DIDerivedType(tag: DW_TAG_member, name: "longRange", scope: !13915, file: !13909, line: 48, baseType: !13928, size: 64, offset: 128)
!13928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13929, size: 64)
!13929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13930)
!13930 = !DIDerivedType(tag: DW_TAG_typedef, name: "xmlChLRange", file: !13909, line: 35, baseType: !13931)
!13931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_xmlChLRange", file: !13909, line: 37, size: 64, elements: !13932)
!13932 = !{!13933, !13934}
!13933 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !13931, file: !13909, line: 38, baseType: !393, size: 32)
!13934 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !13931, file: !13909, line: 39, baseType: !393, size: 32, offset: 32)
!13935 = !DISubprogram(name: "xmlUCSIsCatNd", scope: !13936, file: !13936, line: 173, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13936 = !DIFile(filename: "./include/libxml/xmlunicode.h", directory: "/local-ssd/libxml2-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y-build/aidengro/spack-stage-libxml2-2.10.3-xsvwup3iyubmj2kq4vl5tr75uyk5mi6y/spack-src", checksumkind: CSK_MD5, checksum: "b9f0b8acddfee9b620ea822978a51d29")
!13937 = !DISubroutineType(types: !13938)
!13938 = !{!1306, !1306}
!13939 = !DISubprogram(name: "xmlUCSIsCatP", scope: !13936, file: !13936, line: 176, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13940 = !DISubprogram(name: "xmlUCSIsCatZ", scope: !13936, file: !13936, line: 189, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13941 = !DISubprogram(name: "xmlUCSIsCatC", scope: !13936, file: !13936, line: 157, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13942 = !DISubprogram(name: "xmlUCSIsCatL", scope: !13936, file: !13936, line: 162, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13943 = !DISubprogram(name: "xmlUCSIsCatLu", scope: !13936, file: !13936, line: 167, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13944 = !DISubprogram(name: "xmlUCSIsCatLl", scope: !13936, file: !13936, line: 163, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13945 = !DISubprogram(name: "xmlUCSIsCatLt", scope: !13936, file: !13936, line: 166, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13946 = !DISubprogram(name: "xmlUCSIsCatLm", scope: !13936, file: !13936, line: 164, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13947 = !DISubprogram(name: "xmlUCSIsCatLo", scope: !13936, file: !13936, line: 165, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13948 = !DISubprogram(name: "xmlUCSIsCatM", scope: !13936, file: !13936, line: 168, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13949 = !DISubprogram(name: "xmlUCSIsCatMn", scope: !13936, file: !13936, line: 171, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13950 = !DISubprogram(name: "xmlUCSIsCatMc", scope: !13936, file: !13936, line: 169, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13951 = !DISubprogram(name: "xmlUCSIsCatMe", scope: !13936, file: !13936, line: 170, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13952 = !DISubprogram(name: "xmlUCSIsCatN", scope: !13936, file: !13936, line: 172, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13953 = !DISubprogram(name: "xmlUCSIsCatNl", scope: !13936, file: !13936, line: 174, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13954 = !DISubprogram(name: "xmlUCSIsCatNo", scope: !13936, file: !13936, line: 175, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13955 = !DISubprogram(name: "xmlUCSIsCatPc", scope: !13936, file: !13936, line: 177, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13956 = !DISubprogram(name: "xmlUCSIsCatPd", scope: !13936, file: !13936, line: 178, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13957 = !DISubprogram(name: "xmlUCSIsCatPs", scope: !13936, file: !13936, line: 183, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13958 = !DISubprogram(name: "xmlUCSIsCatPe", scope: !13936, file: !13936, line: 179, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13959 = !DISubprogram(name: "xmlUCSIsCatPi", scope: !13936, file: !13936, line: 181, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13960 = !DISubprogram(name: "xmlUCSIsCatPf", scope: !13936, file: !13936, line: 180, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13961 = !DISubprogram(name: "xmlUCSIsCatPo", scope: !13936, file: !13936, line: 182, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13962 = !DISubprogram(name: "xmlUCSIsCatZs", scope: !13936, file: !13936, line: 192, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13963 = !DISubprogram(name: "xmlUCSIsCatZl", scope: !13936, file: !13936, line: 190, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13964 = !DISubprogram(name: "xmlUCSIsCatZp", scope: !13936, file: !13936, line: 191, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13965 = !DISubprogram(name: "xmlUCSIsCatS", scope: !13936, file: !13936, line: 184, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13966 = !DISubprogram(name: "xmlUCSIsCatSm", scope: !13936, file: !13936, line: 187, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13967 = !DISubprogram(name: "xmlUCSIsCatSc", scope: !13936, file: !13936, line: 185, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13968 = !DISubprogram(name: "xmlUCSIsCatSk", scope: !13936, file: !13936, line: 186, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13969 = !DISubprogram(name: "xmlUCSIsCatSo", scope: !13936, file: !13936, line: 188, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13970 = !DISubprogram(name: "xmlUCSIsCatCc", scope: !13936, file: !13936, line: 158, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13971 = !DISubprogram(name: "xmlUCSIsCatCf", scope: !13936, file: !13936, line: 159, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13972 = !DISubprogram(name: "xmlUCSIsCatCo", scope: !13936, file: !13936, line: 160, type: !13937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13973 = !DISubprogram(name: "xmlUCSIsBlock", scope: !13936, file: !13936, line: 155, type: !13974, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!13974 = !DISubroutineType(types: !13975)
!13975 = !{!1306, !1306, !1482}
!13976 = distinct !DISubprogram(name: "xmlFAEqualAtoms", scope: !2, file: !2, line: 2487, type: !13977, scopeLine: 2487, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !13979)
!13977 = !DISubroutineType(types: !13978)
!13978 = !{!1306, !1378, !1378, !1306}
!13979 = !{!13980, !13981, !13982, !13983}
!13980 = !DILocalVariable(name: "atom1", arg: 1, scope: !13976, file: !2, line: 2487, type: !1378)
!13981 = !DILocalVariable(name: "atom2", arg: 2, scope: !13976, file: !2, line: 2487, type: !1378)
!13982 = !DILocalVariable(name: "deep", arg: 3, scope: !13976, file: !2, line: 2487, type: !1306)
!13983 = !DILocalVariable(name: "ret", scope: !13976, file: !2, line: 2488, type: !1306)
!13984 = !DILocation(line: 2487, column: 31, scope: !13976)
!13985 = !DILocation(line: 2487, column: 52, scope: !13976)
!13986 = !DILocation(line: 2487, column: 63, scope: !13976)
!13987 = !DILocation(line: 2488, column: 5, scope: !13976)
!13988 = !DILocation(line: 2488, column: 9, scope: !13976)
!13989 = !DILocation(line: 2490, column: 9, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13976, file: !2, line: 2490, column: 9)
!13991 = !DILocation(line: 2490, column: 18, scope: !13990)
!13992 = !DILocation(line: 2490, column: 15, scope: !13990)
!13993 = !DILocation(line: 2490, column: 9, scope: !13976)
!13994 = !DILocation(line: 2491, column: 2, scope: !13990)
!13995 = !DILocation(line: 2492, column: 10, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13976, file: !2, line: 2492, column: 9)
!13997 = !DILocation(line: 2492, column: 16, scope: !13996)
!13998 = !DILocation(line: 2492, column: 25, scope: !13996)
!13999 = !DILocation(line: 2492, column: 29, scope: !13996)
!14000 = !DILocation(line: 2492, column: 35, scope: !13996)
!14001 = !DILocation(line: 2492, column: 9, scope: !13976)
!14002 = !DILocation(line: 2493, column: 2, scope: !13996)
!14003 = !DILocation(line: 2495, column: 9, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !13976, file: !2, line: 2495, column: 9)
!14005 = !DILocation(line: 2495, column: 16, scope: !14004)
!14006 = !DILocation(line: 2495, column: 24, scope: !14004)
!14007 = !DILocation(line: 2495, column: 31, scope: !14004)
!14008 = !DILocation(line: 2495, column: 21, scope: !14004)
!14009 = !DILocation(line: 2495, column: 9, scope: !13976)
!14010 = !DILocation(line: 2496, column: 9, scope: !14004)
!14011 = !DILocation(line: 2497, column: 13, scope: !13976)
!14012 = !DILocation(line: 2497, column: 20, scope: !13976)
!14013 = !DILocation(line: 2497, column: 5, scope: !13976)
!14014 = !DILocation(line: 2499, column: 10, scope: !14015)
!14015 = distinct !DILexicalBlock(scope: !13976, file: !2, line: 2497, column: 26)
!14016 = !DILocation(line: 2500, column: 6, scope: !14015)
!14017 = !DILocation(line: 2502, column: 18, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14015, file: !2, line: 2502, column: 17)
!14019 = !DILocation(line: 2502, column: 17, scope: !14015)
!14020 = !DILocation(line: 2503, column: 24, scope: !14018)
!14021 = !DILocation(line: 2503, column: 31, scope: !14018)
!14022 = !DILocation(line: 2503, column: 41, scope: !14018)
!14023 = !DILocation(line: 2503, column: 48, scope: !14018)
!14024 = !DILocation(line: 2503, column: 38, scope: !14018)
!14025 = !DILocation(line: 2503, column: 21, scope: !14018)
!14026 = !DILocation(line: 2503, column: 17, scope: !14018)
!14027 = !DILocation(line: 2505, column: 46, scope: !14018)
!14028 = !DILocation(line: 2505, column: 53, scope: !14018)
!14029 = !DILocation(line: 2506, column: 46, scope: !14018)
!14030 = !DILocation(line: 2506, column: 53, scope: !14018)
!14031 = !DILocation(line: 2505, column: 23, scope: !14018)
!14032 = !DILocation(line: 2505, column: 21, scope: !14018)
!14033 = !DILocation(line: 2507, column: 6, scope: !14015)
!14034 = !DILocation(line: 2509, column: 13, scope: !14015)
!14035 = !DILocation(line: 2509, column: 20, scope: !14015)
!14036 = !DILocation(line: 2509, column: 33, scope: !14015)
!14037 = !DILocation(line: 2509, column: 40, scope: !14015)
!14038 = !DILocation(line: 2509, column: 30, scope: !14015)
!14039 = !DILocation(line: 2509, column: 10, scope: !14015)
!14040 = !DILocation(line: 2510, column: 6, scope: !14015)
!14041 = !DILocation(line: 2513, column: 10, scope: !14015)
!14042 = !DILocation(line: 2513, column: 6, scope: !14015)
!14043 = !DILocation(line: 2515, column: 6, scope: !14015)
!14044 = !DILocation(line: 2517, column: 12, scope: !13976)
!14045 = !DILocation(line: 2517, column: 5, scope: !13976)
!14046 = !DILocation(line: 2518, column: 1, scope: !13976)
!14047 = distinct !DISubprogram(name: "xmlFACompareAtoms", scope: !2, file: !2, line: 2532, type: !13977, scopeLine: 2532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !14048)
!14048 = !{!14049, !14050, !14051, !14052, !14053, !14056, !14060, !14061, !14062, !14063, !14066, !14067, !14068, !14069, !14070, !14071}
!14049 = !DILocalVariable(name: "atom1", arg: 1, scope: !14047, file: !2, line: 2532, type: !1378)
!14050 = !DILocalVariable(name: "atom2", arg: 2, scope: !14047, file: !2, line: 2532, type: !1378)
!14051 = !DILocalVariable(name: "deep", arg: 3, scope: !14047, file: !2, line: 2532, type: !1306)
!14052 = !DILocalVariable(name: "ret", scope: !14047, file: !2, line: 2533, type: !1306)
!14053 = !DILocalVariable(name: "tmp", scope: !14054, file: !2, line: 2545, type: !1378)
!14054 = distinct !DILexicalBlock(scope: !14055, file: !2, line: 2544, column: 36)
!14055 = distinct !DILexicalBlock(scope: !14047, file: !2, line: 2544, column: 9)
!14056 = !DILocalVariable(name: "val1", scope: !14057, file: !2, line: 2561, type: !1351)
!14057 = distinct !DILexicalBlock(scope: !14058, file: !2, line: 2560, column: 18)
!14058 = distinct !DILexicalBlock(scope: !14059, file: !2, line: 2558, column: 17)
!14059 = distinct !DILexicalBlock(scope: !14047, file: !2, line: 2556, column: 26)
!14060 = !DILocalVariable(name: "val2", scope: !14057, file: !2, line: 2562, type: !1351)
!14061 = !DILocalVariable(name: "compound1", scope: !14057, file: !2, line: 2563, type: !1306)
!14062 = !DILocalVariable(name: "compound2", scope: !14057, file: !2, line: 2564, type: !1306)
!14063 = !DILocalVariable(name: "i", scope: !14064, file: !2, line: 2586, type: !1306)
!14064 = distinct !DILexicalBlock(scope: !14065, file: !2, line: 2585, column: 44)
!14065 = distinct !DILexicalBlock(scope: !14059, file: !2, line: 2585, column: 10)
!14066 = !DILocalVariable(name: "j", scope: !14064, file: !2, line: 2586, type: !1306)
!14067 = !DILocalVariable(name: "res", scope: !14064, file: !2, line: 2586, type: !1306)
!14068 = !DILocalVariable(name: "r1", scope: !14064, file: !2, line: 2587, type: !1401)
!14069 = !DILocalVariable(name: "r2", scope: !14064, file: !2, line: 2587, type: !1401)
!14070 = !DILabel(scope: !14047, name: "done", file: !2, line: 2609)
!14071 = !DILabel(scope: !14047, name: "not_determinist", file: !2, line: 2615)
!14072 = !DILocation(line: 2532, column: 33, scope: !14047)
!14073 = !DILocation(line: 2532, column: 54, scope: !14047)
!14074 = !DILocation(line: 2532, column: 65, scope: !14047)
!14075 = !DILocation(line: 2533, column: 5, scope: !14047)
!14076 = !DILocation(line: 2533, column: 9, scope: !14047)
!14077 = !DILocation(line: 2535, column: 9, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14047, file: !2, line: 2535, column: 9)
!14079 = !DILocation(line: 2535, column: 18, scope: !14078)
!14080 = !DILocation(line: 2535, column: 15, scope: !14078)
!14081 = !DILocation(line: 2535, column: 9, scope: !14047)
!14082 = !DILocation(line: 2536, column: 2, scope: !14078)
!14083 = !DILocation(line: 2537, column: 10, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14047, file: !2, line: 2537, column: 9)
!14085 = !DILocation(line: 2537, column: 16, scope: !14084)
!14086 = !DILocation(line: 2537, column: 25, scope: !14084)
!14087 = !DILocation(line: 2537, column: 29, scope: !14084)
!14088 = !DILocation(line: 2537, column: 35, scope: !14084)
!14089 = !DILocation(line: 2537, column: 9, scope: !14047)
!14090 = !DILocation(line: 2538, column: 2, scope: !14084)
!14091 = !DILocation(line: 2540, column: 10, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14047, file: !2, line: 2540, column: 9)
!14093 = !DILocation(line: 2540, column: 17, scope: !14092)
!14094 = !DILocation(line: 2540, column: 22, scope: !14092)
!14095 = !DILocation(line: 2540, column: 45, scope: !14092)
!14096 = !DILocation(line: 2541, column: 10, scope: !14092)
!14097 = !DILocation(line: 2541, column: 17, scope: !14092)
!14098 = !DILocation(line: 2541, column: 22, scope: !14092)
!14099 = !DILocation(line: 2540, column: 9, scope: !14047)
!14100 = !DILocation(line: 2542, column: 2, scope: !14092)
!14101 = !DILocation(line: 2544, column: 9, scope: !14055)
!14102 = !DILocation(line: 2544, column: 16, scope: !14055)
!14103 = !DILocation(line: 2544, column: 23, scope: !14055)
!14104 = !DILocation(line: 2544, column: 30, scope: !14055)
!14105 = !DILocation(line: 2544, column: 21, scope: !14055)
!14106 = !DILocation(line: 2544, column: 9, scope: !14047)
!14107 = !DILocation(line: 2545, column: 2, scope: !14054)
!14108 = !DILocation(line: 2545, column: 16, scope: !14054)
!14109 = !DILocation(line: 2546, column: 8, scope: !14054)
!14110 = !DILocation(line: 2546, column: 6, scope: !14054)
!14111 = !DILocation(line: 2547, column: 10, scope: !14054)
!14112 = !DILocation(line: 2547, column: 8, scope: !14054)
!14113 = !DILocation(line: 2548, column: 10, scope: !14054)
!14114 = !DILocation(line: 2548, column: 8, scope: !14054)
!14115 = !DILocation(line: 2549, column: 5, scope: !14055)
!14116 = !DILocation(line: 2549, column: 5, scope: !14054)
!14117 = !DILocation(line: 2550, column: 9, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14047, file: !2, line: 2550, column: 9)
!14119 = !DILocation(line: 2550, column: 16, scope: !14118)
!14120 = !DILocation(line: 2550, column: 24, scope: !14118)
!14121 = !DILocation(line: 2550, column: 31, scope: !14118)
!14122 = !DILocation(line: 2550, column: 21, scope: !14118)
!14123 = !DILocation(line: 2550, column: 9, scope: !14047)
!14124 = !DILocation(line: 2551, column: 37, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14118, file: !2, line: 2550, column: 37)
!14126 = !DILocation(line: 2551, column: 44, scope: !14125)
!14127 = !DILocation(line: 2551, column: 50, scope: !14125)
!14128 = !DILocation(line: 2551, column: 57, scope: !14125)
!14129 = !DILocation(line: 2551, column: 15, scope: !14125)
!14130 = !DILocation(line: 2551, column: 13, scope: !14125)
!14131 = !DILocation(line: 2553, column: 6, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14125, file: !2, line: 2553, column: 6)
!14133 = !DILocation(line: 2553, column: 10, scope: !14132)
!14134 = !DILocation(line: 2553, column: 6, scope: !14125)
!14135 = !DILocation(line: 2554, column: 6, scope: !14132)
!14136 = !DILocation(line: 2555, column: 5, scope: !14125)
!14137 = !DILocation(line: 2556, column: 13, scope: !14047)
!14138 = !DILocation(line: 2556, column: 20, scope: !14047)
!14139 = !DILocation(line: 2556, column: 5, scope: !14047)
!14140 = !DILocation(line: 2558, column: 18, scope: !14058)
!14141 = !DILocation(line: 2558, column: 17, scope: !14059)
!14142 = !DILocation(line: 2559, column: 24, scope: !14058)
!14143 = !DILocation(line: 2559, column: 31, scope: !14058)
!14144 = !DILocation(line: 2559, column: 41, scope: !14058)
!14145 = !DILocation(line: 2559, column: 48, scope: !14058)
!14146 = !DILocation(line: 2559, column: 38, scope: !14058)
!14147 = !DILocation(line: 2559, column: 21, scope: !14058)
!14148 = !DILocation(line: 2559, column: 17, scope: !14058)
!14149 = !DILocation(line: 2561, column: 17, scope: !14057)
!14150 = !DILocation(line: 2561, column: 26, scope: !14057)
!14151 = !DILocation(line: 2561, column: 44, scope: !14057)
!14152 = !DILocation(line: 2561, column: 51, scope: !14057)
!14153 = !DILocation(line: 2562, column: 17, scope: !14057)
!14154 = !DILocation(line: 2562, column: 26, scope: !14057)
!14155 = !DILocation(line: 2562, column: 44, scope: !14057)
!14156 = !DILocation(line: 2562, column: 51, scope: !14057)
!14157 = !DILocation(line: 2563, column: 17, scope: !14057)
!14158 = !DILocation(line: 2563, column: 21, scope: !14057)
!14159 = !DILocation(line: 2563, column: 44, scope: !14057)
!14160 = !DILocation(line: 2563, column: 34, scope: !14057)
!14161 = !DILocation(line: 2563, column: 55, scope: !14057)
!14162 = !DILocation(line: 2564, column: 17, scope: !14057)
!14163 = !DILocation(line: 2564, column: 21, scope: !14057)
!14164 = !DILocation(line: 2564, column: 44, scope: !14057)
!14165 = !DILocation(line: 2564, column: 34, scope: !14057)
!14166 = !DILocation(line: 2564, column: 55, scope: !14057)
!14167 = !DILocation(line: 2567, column: 21, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14057, file: !2, line: 2567, column: 21)
!14169 = !DILocation(line: 2567, column: 34, scope: !14168)
!14170 = !DILocation(line: 2567, column: 31, scope: !14168)
!14171 = !DILocation(line: 2567, column: 21, scope: !14057)
!14172 = !DILocation(line: 2568, column: 21, scope: !14168)
!14173 = !DILocation(line: 2570, column: 46, scope: !14057)
!14174 = !DILocation(line: 2570, column: 52, scope: !14057)
!14175 = !DILocation(line: 2570, column: 23, scope: !14057)
!14176 = !DILocation(line: 2570, column: 21, scope: !14057)
!14177 = !DILocation(line: 2571, column: 13, scope: !14058)
!14178 = !DILocation(line: 2572, column: 6, scope: !14059)
!14179 = !DILocation(line: 2574, column: 6, scope: !14059)
!14180 = !DILocation(line: 2576, column: 10, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14059, file: !2, line: 2576, column: 10)
!14182 = !DILocation(line: 2576, column: 17, scope: !14181)
!14183 = !DILocation(line: 2576, column: 22, scope: !14181)
!14184 = !DILocation(line: 2576, column: 10, scope: !14059)
!14185 = !DILocation(line: 2577, column: 10, scope: !14186)
!14186 = distinct !DILexicalBlock(scope: !14181, file: !2, line: 2576, column: 45)
!14187 = !DILocation(line: 2577, column: 17, scope: !14186)
!14188 = !DILocation(line: 2577, column: 30, scope: !14186)
!14189 = !DILocation(line: 2577, column: 37, scope: !14186)
!14190 = !DILocation(line: 2577, column: 27, scope: !14186)
!14191 = !DILocation(line: 2577, column: 7, scope: !14186)
!14192 = !DILocation(line: 2578, column: 6, scope: !14186)
!14193 = !DILocation(line: 2579, column: 37, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14181, file: !2, line: 2578, column: 13)
!14195 = !DILocation(line: 2579, column: 44, scope: !14194)
!14196 = !DILocation(line: 2579, column: 51, scope: !14194)
!14197 = !DILocation(line: 2579, column: 16, scope: !14194)
!14198 = !DILocation(line: 2579, column: 14, scope: !14194)
!14199 = !DILocation(line: 2580, column: 7, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14194, file: !2, line: 2580, column: 7)
!14201 = !DILocation(line: 2580, column: 11, scope: !14200)
!14202 = !DILocation(line: 2580, column: 7, scope: !14194)
!14203 = !DILocation(line: 2581, column: 11, scope: !14200)
!14204 = !DILocation(line: 2581, column: 7, scope: !14200)
!14205 = !DILocation(line: 2583, column: 6, scope: !14059)
!14206 = !DILocation(line: 2585, column: 10, scope: !14065)
!14207 = !DILocation(line: 2585, column: 17, scope: !14065)
!14208 = !DILocation(line: 2585, column: 22, scope: !14065)
!14209 = !DILocation(line: 2585, column: 10, scope: !14059)
!14210 = !DILocation(line: 2586, column: 10, scope: !14064)
!14211 = !DILocation(line: 2586, column: 14, scope: !14064)
!14212 = !DILocation(line: 2586, column: 17, scope: !14064)
!14213 = !DILocation(line: 2586, column: 20, scope: !14064)
!14214 = !DILocation(line: 2587, column: 3, scope: !14064)
!14215 = !DILocation(line: 2587, column: 18, scope: !14064)
!14216 = !DILocation(line: 2587, column: 22, scope: !14064)
!14217 = !DILocation(line: 2592, column: 10, scope: !14218)
!14218 = distinct !DILexicalBlock(scope: !14064, file: !2, line: 2592, column: 3)
!14219 = !DILocation(line: 2592, column: 8, scope: !14218)
!14220 = !DILocation(line: 2592, column: 14, scope: !14221)
!14221 = distinct !DILexicalBlock(scope: !14218, file: !2, line: 2592, column: 3)
!14222 = !DILocation(line: 2592, column: 18, scope: !14221)
!14223 = !DILocation(line: 2592, column: 25, scope: !14221)
!14224 = !DILocation(line: 2592, column: 16, scope: !14221)
!14225 = !DILocation(line: 2592, column: 3, scope: !14218)
!14226 = !DILocation(line: 2593, column: 14, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14228, file: !2, line: 2593, column: 7)
!14228 = distinct !DILexicalBlock(scope: !14221, file: !2, line: 2592, column: 39)
!14229 = !DILocation(line: 2593, column: 12, scope: !14227)
!14230 = !DILocation(line: 2593, column: 18, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14227, file: !2, line: 2593, column: 7)
!14232 = !DILocation(line: 2593, column: 22, scope: !14231)
!14233 = !DILocation(line: 2593, column: 29, scope: !14231)
!14234 = !DILocation(line: 2593, column: 20, scope: !14231)
!14235 = !DILocation(line: 2593, column: 7, scope: !14227)
!14236 = !DILocation(line: 2594, column: 9, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14231, file: !2, line: 2593, column: 43)
!14238 = !DILocation(line: 2594, column: 16, scope: !14237)
!14239 = !DILocation(line: 2594, column: 23, scope: !14237)
!14240 = !DILocation(line: 2594, column: 7, scope: !14237)
!14241 = !DILocation(line: 2595, column: 9, scope: !14237)
!14242 = !DILocation(line: 2595, column: 16, scope: !14237)
!14243 = !DILocation(line: 2595, column: 23, scope: !14237)
!14244 = !DILocation(line: 2595, column: 7, scope: !14237)
!14245 = !DILocation(line: 2596, column: 29, scope: !14237)
!14246 = !DILocation(line: 2596, column: 33, scope: !14237)
!14247 = !DILocation(line: 2596, column: 10, scope: !14237)
!14248 = !DILocation(line: 2596, column: 8, scope: !14237)
!14249 = !DILocation(line: 2597, column: 8, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14237, file: !2, line: 2597, column: 8)
!14251 = !DILocation(line: 2597, column: 12, scope: !14250)
!14252 = !DILocation(line: 2597, column: 8, scope: !14237)
!14253 = !DILocation(line: 2598, column: 12, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14250, file: !2, line: 2597, column: 18)
!14255 = !DILocation(line: 2599, column: 8, scope: !14254)
!14256 = !DILocation(line: 2601, column: 7, scope: !14237)
!14257 = !DILocation(line: 2593, column: 39, scope: !14231)
!14258 = !DILocation(line: 2593, column: 7, scope: !14231)
!14259 = distinct !{!14259, !14235, !14260, !1794}
!14260 = !DILocation(line: 2601, column: 7, scope: !14227)
!14261 = !DILocation(line: 2602, column: 3, scope: !14228)
!14262 = !DILocation(line: 2592, column: 35, scope: !14221)
!14263 = !DILocation(line: 2592, column: 3, scope: !14221)
!14264 = distinct !{!14264, !14225, !14265, !1794}
!14265 = !DILocation(line: 2602, column: 3, scope: !14218)
!14266 = !DILocation(line: 2603, column: 7, scope: !14064)
!14267 = !DILocation(line: 2604, column: 6, scope: !14065)
!14268 = !DILocation(line: 2604, column: 6, scope: !14064)
!14269 = !DILocation(line: 2605, column: 6, scope: !14059)
!14270 = !DILocation(line: 2607, column: 6, scope: !14059)
!14271 = !DILocation(line: 2608, column: 5, scope: !14059)
!14272 = !DILocation(line: 2609, column: 1, scope: !14047)
!14273 = !DILocation(line: 2610, column: 9, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14047, file: !2, line: 2610, column: 9)
!14275 = !DILocation(line: 2610, column: 16, scope: !14274)
!14276 = !DILocation(line: 2610, column: 23, scope: !14274)
!14277 = !DILocation(line: 2610, column: 30, scope: !14274)
!14278 = !DILocation(line: 2610, column: 20, scope: !14274)
!14279 = !DILocation(line: 2610, column: 9, scope: !14047)
!14280 = !DILocation(line: 2611, column: 16, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14274, file: !2, line: 2610, column: 35)
!14282 = !DILocation(line: 2611, column: 15, scope: !14281)
!14283 = !DILocation(line: 2611, column: 13, scope: !14281)
!14284 = !DILocation(line: 2612, column: 5, scope: !14281)
!14285 = !DILocation(line: 2613, column: 9, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14047, file: !2, line: 2613, column: 9)
!14287 = !DILocation(line: 2613, column: 13, scope: !14286)
!14288 = !DILocation(line: 2613, column: 9, scope: !14047)
!14289 = !DILocation(line: 2614, column: 9, scope: !14286)
!14290 = !DILocation(line: 2613, column: 16, scope: !14286)
!14291 = !DILocation(line: 2615, column: 1, scope: !14047)
!14292 = !DILocation(line: 2616, column: 5, scope: !14047)
!14293 = !DILocation(line: 2617, column: 1, scope: !14047)
!14294 = distinct !DISubprogram(name: "xmlFARecurseDeterminism", scope: !2, file: !2, line: 2628, type: !14295, scopeLine: 2629, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !14297)
!14295 = !DISubroutineType(types: !14296)
!14296 = !{!1306, !1483, !1358, !1306, !1378}
!14297 = !{!14298, !14299, !14300, !14301, !14302, !14303, !14304, !14305, !14306, !14307}
!14298 = !DILocalVariable(name: "ctxt", arg: 1, scope: !14294, file: !2, line: 2628, type: !1483)
!14299 = !DILocalVariable(name: "state", arg: 2, scope: !14294, file: !2, line: 2628, type: !1358)
!14300 = !DILocalVariable(name: "to", arg: 3, scope: !14294, file: !2, line: 2629, type: !1306)
!14301 = !DILocalVariable(name: "atom", arg: 4, scope: !14294, file: !2, line: 2629, type: !1378)
!14302 = !DILocalVariable(name: "ret", scope: !14294, file: !2, line: 2630, type: !1306)
!14303 = !DILocalVariable(name: "res", scope: !14294, file: !2, line: 2631, type: !1306)
!14304 = !DILocalVariable(name: "transnr", scope: !14294, file: !2, line: 2632, type: !1306)
!14305 = !DILocalVariable(name: "nbTrans", scope: !14294, file: !2, line: 2632, type: !1306)
!14306 = !DILocalVariable(name: "t1", scope: !14294, file: !2, line: 2633, type: !1884)
!14307 = !DILocalVariable(name: "deep", scope: !14294, file: !2, line: 2634, type: !1306)
!14308 = !DILocation(line: 2628, column: 45, scope: !14294)
!14309 = !DILocation(line: 2628, column: 66, scope: !14294)
!14310 = !DILocation(line: 2629, column: 23, scope: !14294)
!14311 = !DILocation(line: 2629, column: 41, scope: !14294)
!14312 = !DILocation(line: 2630, column: 5, scope: !14294)
!14313 = !DILocation(line: 2630, column: 9, scope: !14294)
!14314 = !DILocation(line: 2631, column: 5, scope: !14294)
!14315 = !DILocation(line: 2631, column: 9, scope: !14294)
!14316 = !DILocation(line: 2632, column: 5, scope: !14294)
!14317 = !DILocation(line: 2632, column: 9, scope: !14294)
!14318 = !DILocation(line: 2632, column: 18, scope: !14294)
!14319 = !DILocation(line: 2633, column: 5, scope: !14294)
!14320 = !DILocation(line: 2633, column: 20, scope: !14294)
!14321 = !DILocation(line: 2634, column: 5, scope: !14294)
!14322 = !DILocation(line: 2634, column: 9, scope: !14294)
!14323 = !DILocation(line: 2636, column: 9, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14294, file: !2, line: 2636, column: 9)
!14325 = !DILocation(line: 2636, column: 15, scope: !14324)
!14326 = !DILocation(line: 2636, column: 9, scope: !14294)
!14327 = !DILocation(line: 2637, column: 9, scope: !14324)
!14328 = !DILocation(line: 2637, column: 2, scope: !14324)
!14329 = !DILocation(line: 2638, column: 9, scope: !14330)
!14330 = distinct !DILexicalBlock(scope: !14294, file: !2, line: 2638, column: 9)
!14331 = !DILocation(line: 2638, column: 16, scope: !14330)
!14332 = !{!1985, !1529, i64 8}
!14333 = !DILocation(line: 2638, column: 22, scope: !14330)
!14334 = !DILocation(line: 2638, column: 9, scope: !14294)
!14335 = !DILocation(line: 2639, column: 9, scope: !14330)
!14336 = !DILocation(line: 2639, column: 2, scope: !14330)
!14337 = !DILocation(line: 2641, column: 9, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !14294, file: !2, line: 2641, column: 9)
!14339 = !DILocation(line: 2641, column: 15, scope: !14338)
!14340 = !DILocation(line: 2641, column: 21, scope: !14338)
!14341 = !DILocation(line: 2641, column: 9, scope: !14294)
!14342 = !DILocation(line: 2642, column: 14, scope: !14338)
!14343 = !DILocation(line: 2642, column: 9, scope: !14338)
!14344 = !DILocation(line: 2648, column: 15, scope: !14294)
!14345 = !DILocation(line: 2648, column: 22, scope: !14294)
!14346 = !DILocation(line: 2648, column: 13, scope: !14294)
!14347 = !DILocation(line: 2649, column: 18, scope: !14348)
!14348 = distinct !DILexicalBlock(scope: !14294, file: !2, line: 2649, column: 5)
!14349 = !DILocation(line: 2649, column: 10, scope: !14348)
!14350 = !DILocation(line: 2649, column: 22, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14348, file: !2, line: 2649, column: 5)
!14352 = !DILocation(line: 2649, column: 32, scope: !14351)
!14353 = !DILocation(line: 2649, column: 30, scope: !14351)
!14354 = !DILocation(line: 2649, column: 5, scope: !14348)
!14355 = !DILocation(line: 2650, column: 9, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14351, file: !2, line: 2649, column: 51)
!14357 = !DILocation(line: 2650, column: 16, scope: !14356)
!14358 = !DILocation(line: 2650, column: 22, scope: !14356)
!14359 = !DILocation(line: 2650, column: 5, scope: !14356)
!14360 = !DILocation(line: 2654, column: 6, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14356, file: !2, line: 2654, column: 6)
!14362 = !DILocation(line: 2654, column: 10, scope: !14361)
!14363 = !DILocation(line: 2654, column: 15, scope: !14361)
!14364 = !DILocation(line: 2654, column: 6, scope: !14356)
!14365 = !DILocation(line: 2655, column: 10, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14367, file: !2, line: 2655, column: 10)
!14367 = distinct !DILexicalBlock(scope: !14361, file: !2, line: 2654, column: 24)
!14368 = !DILocation(line: 2655, column: 14, scope: !14366)
!14369 = !DILocation(line: 2655, column: 17, scope: !14366)
!14370 = !DILocation(line: 2655, column: 10, scope: !14367)
!14371 = !DILocation(line: 2656, column: 3, scope: !14366)
!14372 = !DILocation(line: 2657, column: 6, scope: !14367)
!14373 = !DILocation(line: 2657, column: 13, scope: !14367)
!14374 = !DILocation(line: 2657, column: 19, scope: !14367)
!14375 = !DILocation(line: 2658, column: 36, scope: !14367)
!14376 = !DILocation(line: 2658, column: 42, scope: !14367)
!14377 = !DILocation(line: 2658, column: 48, scope: !14367)
!14378 = !DILocation(line: 2658, column: 55, scope: !14367)
!14379 = !DILocation(line: 2658, column: 59, scope: !14367)
!14380 = !DILocation(line: 2659, column: 30, scope: !14367)
!14381 = !DILocation(line: 2659, column: 34, scope: !14367)
!14382 = !DILocation(line: 2658, column: 12, scope: !14367)
!14383 = !DILocation(line: 2658, column: 10, scope: !14367)
!14384 = !DILocation(line: 2660, column: 10, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14367, file: !2, line: 2660, column: 10)
!14386 = !DILocation(line: 2660, column: 14, scope: !14385)
!14387 = !DILocation(line: 2660, column: 10, scope: !14367)
!14388 = !DILocation(line: 2661, column: 14, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14385, file: !2, line: 2660, column: 20)
!14390 = !DILocation(line: 2663, column: 6, scope: !14389)
!14391 = !DILocation(line: 2664, column: 6, scope: !14367)
!14392 = !DILocation(line: 2666, column: 6, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14356, file: !2, line: 2666, column: 6)
!14394 = !DILocation(line: 2666, column: 10, scope: !14393)
!14395 = !DILocation(line: 2666, column: 16, scope: !14393)
!14396 = !DILocation(line: 2666, column: 13, scope: !14393)
!14397 = !DILocation(line: 2666, column: 6, scope: !14356)
!14398 = !DILocation(line: 2667, column: 6, scope: !14393)
!14399 = !DILocation(line: 2668, column: 24, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14356, file: !2, line: 2668, column: 6)
!14401 = !DILocation(line: 2668, column: 28, scope: !14400)
!14402 = !DILocation(line: 2668, column: 34, scope: !14400)
!14403 = !DILocation(line: 2668, column: 40, scope: !14400)
!14404 = !DILocation(line: 2668, column: 6, scope: !14400)
!14405 = !DILocation(line: 2668, column: 6, scope: !14356)
!14406 = !DILocation(line: 2669, column: 10, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14400, file: !2, line: 2668, column: 47)
!14408 = !DILocation(line: 2671, column: 6, scope: !14407)
!14409 = !DILocation(line: 2671, column: 10, scope: !14407)
!14410 = !DILocation(line: 2671, column: 13, scope: !14407)
!14411 = !DILocation(line: 2672, column: 2, scope: !14407)
!14412 = !DILocation(line: 2673, column: 5, scope: !14356)
!14413 = !DILocation(line: 2649, column: 47, scope: !14351)
!14414 = !DILocation(line: 2649, column: 5, scope: !14351)
!14415 = distinct !{!14415, !14354, !14416, !1794}
!14416 = !DILocation(line: 2673, column: 5, scope: !14348)
!14417 = !DILocation(line: 2674, column: 12, scope: !14294)
!14418 = !DILocation(line: 2674, column: 5, scope: !14294)
!14419 = !DILocation(line: 2675, column: 1, scope: !14294)
!14420 = distinct !DISubprogram(name: "xmlFAFinishRecurseDeterminism", scope: !2, file: !2, line: 2684, type: !14421, scopeLine: 2684, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !14423)
!14421 = !DISubroutineType(types: !14422)
!14422 = !{null, !1483, !1358}
!14423 = !{!14424, !14425, !14426, !14427, !14428}
!14424 = !DILocalVariable(name: "ctxt", arg: 1, scope: !14420, file: !2, line: 2684, type: !1483)
!14425 = !DILocalVariable(name: "state", arg: 2, scope: !14420, file: !2, line: 2684, type: !1358)
!14426 = !DILocalVariable(name: "transnr", scope: !14420, file: !2, line: 2685, type: !1306)
!14427 = !DILocalVariable(name: "nbTrans", scope: !14420, file: !2, line: 2685, type: !1306)
!14428 = !DILocalVariable(name: "t1", scope: !14429, file: !2, line: 2695, type: !1884)
!14429 = distinct !DILexicalBlock(scope: !14430, file: !2, line: 2694, column: 53)
!14430 = distinct !DILexicalBlock(scope: !14431, file: !2, line: 2694, column: 5)
!14431 = distinct !DILexicalBlock(scope: !14420, file: !2, line: 2694, column: 5)
!14432 = !DILocation(line: 2684, column: 51, scope: !14420)
!14433 = !DILocation(line: 2684, column: 72, scope: !14420)
!14434 = !DILocation(line: 2685, column: 5, scope: !14420)
!14435 = !DILocation(line: 2685, column: 9, scope: !14420)
!14436 = !DILocation(line: 2685, column: 18, scope: !14420)
!14437 = !DILocation(line: 2687, column: 9, scope: !14438)
!14438 = distinct !DILexicalBlock(scope: !14420, file: !2, line: 2687, column: 9)
!14439 = !DILocation(line: 2687, column: 15, scope: !14438)
!14440 = !DILocation(line: 2687, column: 9, scope: !14420)
!14441 = !DILocation(line: 2688, column: 2, scope: !14438)
!14442 = !DILocation(line: 2689, column: 9, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14420, file: !2, line: 2689, column: 9)
!14444 = !DILocation(line: 2689, column: 16, scope: !14443)
!14445 = !DILocation(line: 2689, column: 22, scope: !14443)
!14446 = !DILocation(line: 2689, column: 9, scope: !14420)
!14447 = !DILocation(line: 2690, column: 2, scope: !14443)
!14448 = !DILocation(line: 2691, column: 5, scope: !14420)
!14449 = !DILocation(line: 2691, column: 12, scope: !14420)
!14450 = !DILocation(line: 2691, column: 18, scope: !14420)
!14451 = !DILocation(line: 2693, column: 15, scope: !14420)
!14452 = !DILocation(line: 2693, column: 22, scope: !14420)
!14453 = !DILocation(line: 2693, column: 13, scope: !14420)
!14454 = !DILocation(line: 2694, column: 18, scope: !14431)
!14455 = !DILocation(line: 2694, column: 10, scope: !14431)
!14456 = !DILocation(line: 2694, column: 23, scope: !14430)
!14457 = !DILocation(line: 2694, column: 33, scope: !14430)
!14458 = !DILocation(line: 2694, column: 31, scope: !14430)
!14459 = !DILocation(line: 2694, column: 5, scope: !14431)
!14460 = !DILocation(line: 2695, column: 2, scope: !14429)
!14461 = !DILocation(line: 2695, column: 17, scope: !14429)
!14462 = !DILocation(line: 2695, column: 23, scope: !14429)
!14463 = !DILocation(line: 2695, column: 30, scope: !14429)
!14464 = !DILocation(line: 2695, column: 36, scope: !14429)
!14465 = !DILocation(line: 2696, column: 7, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14429, file: !2, line: 2696, column: 6)
!14467 = !DILocation(line: 2696, column: 11, scope: !14466)
!14468 = !DILocation(line: 2696, column: 16, scope: !14466)
!14469 = !DILocation(line: 2696, column: 25, scope: !14466)
!14470 = !DILocation(line: 2696, column: 29, scope: !14466)
!14471 = !DILocation(line: 2696, column: 33, scope: !14466)
!14472 = !DILocation(line: 2696, column: 36, scope: !14466)
!14473 = !DILocation(line: 2696, column: 6, scope: !14429)
!14474 = !DILocation(line: 2697, column: 36, scope: !14466)
!14475 = !DILocation(line: 2697, column: 42, scope: !14466)
!14476 = !DILocation(line: 2697, column: 48, scope: !14466)
!14477 = !DILocation(line: 2697, column: 55, scope: !14466)
!14478 = !DILocation(line: 2697, column: 59, scope: !14466)
!14479 = !DILocation(line: 2697, column: 6, scope: !14466)
!14480 = !DILocation(line: 2698, column: 5, scope: !14430)
!14481 = !DILocation(line: 2698, column: 5, scope: !14429)
!14482 = !DILocation(line: 2694, column: 49, scope: !14430)
!14483 = !DILocation(line: 2694, column: 5, scope: !14430)
!14484 = distinct !{!14484, !14459, !14485, !1794}
!14485 = !DILocation(line: 2698, column: 5, scope: !14431)
!14486 = !DILocation(line: 2699, column: 1, scope: !14420)
!14487 = distinct !DISubprogram(name: "xmlFACompareAtomTypes", scope: !2, file: !2, line: 2285, type: !14488, scopeLine: 2285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !14490)
!14488 = !DISubroutineType(types: !14489)
!14489 = !{!1306, !1385, !1385}
!14490 = !{!14491, !14492, !14493}
!14491 = !DILocalVariable(name: "type1", arg: 1, scope: !14487, file: !2, line: 2285, type: !1385)
!14492 = !DILocalVariable(name: "type2", arg: 2, scope: !14487, file: !2, line: 2285, type: !1385)
!14493 = !DILocalVariable(name: "tmp", scope: !14494, file: !2, line: 2305, type: !1385)
!14494 = distinct !DILexicalBlock(scope: !14495, file: !2, line: 2304, column: 24)
!14495 = distinct !DILexicalBlock(scope: !14487, file: !2, line: 2304, column: 9)
!14496 = !DILocation(line: 2285, column: 38, scope: !14487)
!14497 = !DILocation(line: 2285, column: 60, scope: !14487)
!14498 = !DILocation(line: 2286, column: 10, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14487, file: !2, line: 2286, column: 9)
!14500 = !DILocation(line: 2286, column: 16, scope: !14499)
!14501 = !DILocation(line: 2286, column: 39, scope: !14499)
!14502 = !DILocation(line: 2287, column: 10, scope: !14499)
!14503 = !DILocation(line: 2287, column: 16, scope: !14499)
!14504 = !DILocation(line: 2287, column: 39, scope: !14499)
!14505 = !DILocation(line: 2288, column: 3, scope: !14499)
!14506 = !DILocation(line: 2288, column: 9, scope: !14499)
!14507 = !DILocation(line: 2288, column: 31, scope: !14499)
!14508 = !DILocation(line: 2289, column: 3, scope: !14499)
!14509 = !DILocation(line: 2289, column: 9, scope: !14499)
!14510 = !DILocation(line: 2289, column: 31, scope: !14499)
!14511 = !DILocation(line: 2290, column: 3, scope: !14499)
!14512 = !DILocation(line: 2290, column: 9, scope: !14499)
!14513 = !DILocation(line: 2290, column: 31, scope: !14499)
!14514 = !DILocation(line: 2291, column: 3, scope: !14499)
!14515 = !DILocation(line: 2291, column: 9, scope: !14499)
!14516 = !DILocation(line: 2286, column: 9, scope: !14487)
!14517 = !DILocation(line: 2292, column: 2, scope: !14499)
!14518 = !DILocation(line: 2293, column: 10, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14487, file: !2, line: 2293, column: 9)
!14520 = !DILocation(line: 2293, column: 16, scope: !14519)
!14521 = !DILocation(line: 2293, column: 39, scope: !14519)
!14522 = !DILocation(line: 2294, column: 10, scope: !14519)
!14523 = !DILocation(line: 2294, column: 16, scope: !14519)
!14524 = !DILocation(line: 2294, column: 39, scope: !14519)
!14525 = !DILocation(line: 2295, column: 3, scope: !14519)
!14526 = !DILocation(line: 2295, column: 9, scope: !14519)
!14527 = !DILocation(line: 2295, column: 31, scope: !14519)
!14528 = !DILocation(line: 2296, column: 3, scope: !14519)
!14529 = !DILocation(line: 2296, column: 9, scope: !14519)
!14530 = !DILocation(line: 2296, column: 31, scope: !14519)
!14531 = !DILocation(line: 2297, column: 3, scope: !14519)
!14532 = !DILocation(line: 2297, column: 9, scope: !14519)
!14533 = !DILocation(line: 2297, column: 31, scope: !14519)
!14534 = !DILocation(line: 2298, column: 3, scope: !14519)
!14535 = !DILocation(line: 2298, column: 9, scope: !14519)
!14536 = !DILocation(line: 2293, column: 9, scope: !14487)
!14537 = !DILocation(line: 2299, column: 2, scope: !14519)
!14538 = !DILocation(line: 2301, column: 9, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14487, file: !2, line: 2301, column: 9)
!14540 = !DILocation(line: 2301, column: 18, scope: !14539)
!14541 = !DILocation(line: 2301, column: 15, scope: !14539)
!14542 = !DILocation(line: 2301, column: 9, scope: !14487)
!14543 = !DILocation(line: 2301, column: 25, scope: !14539)
!14544 = !DILocation(line: 2304, column: 9, scope: !14495)
!14545 = !DILocation(line: 2304, column: 17, scope: !14495)
!14546 = !DILocation(line: 2304, column: 15, scope: !14495)
!14547 = !DILocation(line: 2304, column: 9, scope: !14487)
!14548 = !DILocation(line: 2305, column: 9, scope: !14494)
!14549 = !DILocation(line: 2305, column: 24, scope: !14494)
!14550 = !DILocation(line: 2305, column: 30, scope: !14494)
!14551 = !DILocation(line: 2306, column: 10, scope: !14494)
!14552 = !DILocation(line: 2306, column: 8, scope: !14494)
!14553 = !DILocation(line: 2307, column: 10, scope: !14494)
!14554 = !DILocation(line: 2307, column: 8, scope: !14494)
!14555 = !DILocation(line: 2308, column: 5, scope: !14495)
!14556 = !DILocation(line: 2308, column: 5, scope: !14494)
!14557 = !DILocation(line: 2309, column: 13, scope: !14487)
!14558 = !DILocation(line: 2309, column: 5, scope: !14487)
!14559 = !DILocation(line: 2312, column: 11, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14561, file: !2, line: 2312, column: 10)
!14561 = distinct !DILexicalBlock(scope: !14487, file: !2, line: 2309, column: 20)
!14562 = !DILocation(line: 2312, column: 17, scope: !14560)
!14563 = !DILocation(line: 2312, column: 41, scope: !14560)
!14564 = !DILocation(line: 2313, column: 5, scope: !14560)
!14565 = !DILocation(line: 2313, column: 11, scope: !14560)
!14566 = !DILocation(line: 2313, column: 33, scope: !14560)
!14567 = !DILocation(line: 2314, column: 5, scope: !14560)
!14568 = !DILocation(line: 2314, column: 11, scope: !14560)
!14569 = !DILocation(line: 2314, column: 41, scope: !14560)
!14570 = !DILocation(line: 2315, column: 12, scope: !14560)
!14571 = !DILocation(line: 2315, column: 18, scope: !14560)
!14572 = !DILocation(line: 2315, column: 40, scope: !14560)
!14573 = !DILocation(line: 2316, column: 5, scope: !14560)
!14574 = !DILocation(line: 2316, column: 11, scope: !14560)
!14575 = !DILocation(line: 2316, column: 41, scope: !14560)
!14576 = !DILocation(line: 2317, column: 12, scope: !14560)
!14577 = !DILocation(line: 2317, column: 18, scope: !14560)
!14578 = !DILocation(line: 2317, column: 38, scope: !14560)
!14579 = !DILocation(line: 2318, column: 5, scope: !14560)
!14580 = !DILocation(line: 2318, column: 11, scope: !14560)
!14581 = !DILocation(line: 2318, column: 42, scope: !14560)
!14582 = !DILocation(line: 2319, column: 12, scope: !14560)
!14583 = !DILocation(line: 2319, column: 18, scope: !14560)
!14584 = !DILocation(line: 2319, column: 39, scope: !14560)
!14585 = !DILocation(line: 2320, column: 5, scope: !14560)
!14586 = !DILocation(line: 2320, column: 11, scope: !14560)
!14587 = !DILocation(line: 2320, column: 40, scope: !14560)
!14588 = !DILocation(line: 2321, column: 12, scope: !14560)
!14589 = !DILocation(line: 2321, column: 18, scope: !14560)
!14590 = !DILocation(line: 2321, column: 40, scope: !14560)
!14591 = !DILocation(line: 2322, column: 5, scope: !14560)
!14592 = !DILocation(line: 2322, column: 11, scope: !14560)
!14593 = !DILocation(line: 2312, column: 10, scope: !14561)
!14594 = !DILocation(line: 2323, column: 12, scope: !14560)
!14595 = !DILocation(line: 2324, column: 6, scope: !14561)
!14596 = !DILocation(line: 2329, column: 11, scope: !14597)
!14597 = distinct !DILexicalBlock(scope: !14561, file: !2, line: 2329, column: 10)
!14598 = !DILocation(line: 2329, column: 17, scope: !14597)
!14599 = !DILocation(line: 2329, column: 44, scope: !14597)
!14600 = !DILocation(line: 2330, column: 12, scope: !14597)
!14601 = !DILocation(line: 2330, column: 18, scope: !14597)
!14602 = !DILocation(line: 2330, column: 40, scope: !14597)
!14603 = !DILocation(line: 2331, column: 5, scope: !14597)
!14604 = !DILocation(line: 2331, column: 11, scope: !14597)
!14605 = !DILocation(line: 2331, column: 41, scope: !14597)
!14606 = !DILocation(line: 2332, column: 12, scope: !14597)
!14607 = !DILocation(line: 2332, column: 18, scope: !14597)
!14608 = !DILocation(line: 2332, column: 38, scope: !14597)
!14609 = !DILocation(line: 2333, column: 5, scope: !14597)
!14610 = !DILocation(line: 2333, column: 11, scope: !14597)
!14611 = !DILocation(line: 2333, column: 42, scope: !14597)
!14612 = !DILocation(line: 2334, column: 12, scope: !14597)
!14613 = !DILocation(line: 2334, column: 18, scope: !14597)
!14614 = !DILocation(line: 2334, column: 39, scope: !14597)
!14615 = !DILocation(line: 2335, column: 5, scope: !14597)
!14616 = !DILocation(line: 2335, column: 11, scope: !14597)
!14617 = !DILocation(line: 2335, column: 38, scope: !14597)
!14618 = !DILocation(line: 2336, column: 12, scope: !14597)
!14619 = !DILocation(line: 2336, column: 18, scope: !14597)
!14620 = !DILocation(line: 2336, column: 39, scope: !14597)
!14621 = !DILocation(line: 2337, column: 5, scope: !14597)
!14622 = !DILocation(line: 2337, column: 11, scope: !14597)
!14623 = !DILocation(line: 2337, column: 40, scope: !14597)
!14624 = !DILocation(line: 2338, column: 12, scope: !14597)
!14625 = !DILocation(line: 2338, column: 18, scope: !14597)
!14626 = !DILocation(line: 2338, column: 40, scope: !14597)
!14627 = !DILocation(line: 2339, column: 5, scope: !14597)
!14628 = !DILocation(line: 2339, column: 11, scope: !14597)
!14629 = !DILocation(line: 2339, column: 41, scope: !14597)
!14630 = !DILocation(line: 2340, column: 12, scope: !14597)
!14631 = !DILocation(line: 2340, column: 18, scope: !14597)
!14632 = !DILocation(line: 2340, column: 39, scope: !14597)
!14633 = !DILocation(line: 2341, column: 5, scope: !14597)
!14634 = !DILocation(line: 2341, column: 11, scope: !14597)
!14635 = !DILocation(line: 2329, column: 10, scope: !14561)
!14636 = !DILocation(line: 2342, column: 5, scope: !14597)
!14637 = !DILocation(line: 2343, column: 6, scope: !14561)
!14638 = !DILocation(line: 2348, column: 11, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14561, file: !2, line: 2348, column: 10)
!14640 = !DILocation(line: 2348, column: 17, scope: !14639)
!14641 = !DILocation(line: 2348, column: 44, scope: !14639)
!14642 = !DILocation(line: 2349, column: 12, scope: !14639)
!14643 = !DILocation(line: 2349, column: 18, scope: !14639)
!14644 = !DILocation(line: 2349, column: 38, scope: !14639)
!14645 = !DILocation(line: 2350, column: 5, scope: !14639)
!14646 = !DILocation(line: 2350, column: 11, scope: !14639)
!14647 = !DILocation(line: 2350, column: 42, scope: !14639)
!14648 = !DILocation(line: 2351, column: 12, scope: !14639)
!14649 = !DILocation(line: 2351, column: 18, scope: !14639)
!14650 = !DILocation(line: 2351, column: 39, scope: !14639)
!14651 = !DILocation(line: 2352, column: 5, scope: !14639)
!14652 = !DILocation(line: 2352, column: 11, scope: !14639)
!14653 = !DILocation(line: 2352, column: 40, scope: !14639)
!14654 = !DILocation(line: 2353, column: 12, scope: !14639)
!14655 = !DILocation(line: 2353, column: 18, scope: !14639)
!14656 = !DILocation(line: 2353, column: 39, scope: !14639)
!14657 = !DILocation(line: 2354, column: 5, scope: !14639)
!14658 = !DILocation(line: 2354, column: 11, scope: !14639)
!14659 = !DILocation(line: 2354, column: 38, scope: !14639)
!14660 = !DILocation(line: 2355, column: 12, scope: !14639)
!14661 = !DILocation(line: 2355, column: 18, scope: !14639)
!14662 = !DILocation(line: 2355, column: 40, scope: !14639)
!14663 = !DILocation(line: 2356, column: 5, scope: !14639)
!14664 = !DILocation(line: 2356, column: 11, scope: !14639)
!14665 = !DILocation(line: 2356, column: 41, scope: !14639)
!14666 = !DILocation(line: 2357, column: 12, scope: !14639)
!14667 = !DILocation(line: 2357, column: 18, scope: !14639)
!14668 = !DILocation(line: 2357, column: 39, scope: !14639)
!14669 = !DILocation(line: 2358, column: 5, scope: !14639)
!14670 = !DILocation(line: 2358, column: 11, scope: !14639)
!14671 = !DILocation(line: 2348, column: 10, scope: !14561)
!14672 = !DILocation(line: 2359, column: 5, scope: !14639)
!14673 = !DILocation(line: 2360, column: 6, scope: !14561)
!14674 = !DILocation(line: 2365, column: 11, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14561, file: !2, line: 2365, column: 10)
!14676 = !DILocation(line: 2365, column: 17, scope: !14675)
!14677 = !DILocation(line: 2365, column: 43, scope: !14675)
!14678 = !DILocation(line: 2366, column: 11, scope: !14675)
!14679 = !DILocation(line: 2366, column: 17, scope: !14675)
!14680 = !DILocation(line: 2366, column: 41, scope: !14675)
!14681 = !DILocation(line: 2367, column: 5, scope: !14675)
!14682 = !DILocation(line: 2367, column: 11, scope: !14675)
!14683 = !DILocation(line: 2367, column: 33, scope: !14675)
!14684 = !DILocation(line: 2368, column: 5, scope: !14675)
!14685 = !DILocation(line: 2368, column: 11, scope: !14675)
!14686 = !DILocation(line: 2368, column: 41, scope: !14675)
!14687 = !DILocation(line: 2369, column: 12, scope: !14675)
!14688 = !DILocation(line: 2369, column: 18, scope: !14675)
!14689 = !DILocation(line: 2369, column: 38, scope: !14675)
!14690 = !DILocation(line: 2370, column: 5, scope: !14675)
!14691 = !DILocation(line: 2370, column: 11, scope: !14675)
!14692 = !DILocation(line: 2370, column: 42, scope: !14675)
!14693 = !DILocation(line: 2371, column: 12, scope: !14675)
!14694 = !DILocation(line: 2371, column: 18, scope: !14675)
!14695 = !DILocation(line: 2371, column: 39, scope: !14675)
!14696 = !DILocation(line: 2372, column: 5, scope: !14675)
!14697 = !DILocation(line: 2372, column: 11, scope: !14675)
!14698 = !DILocation(line: 2372, column: 40, scope: !14675)
!14699 = !DILocation(line: 2373, column: 12, scope: !14675)
!14700 = !DILocation(line: 2373, column: 18, scope: !14675)
!14701 = !DILocation(line: 2373, column: 39, scope: !14675)
!14702 = !DILocation(line: 2374, column: 5, scope: !14675)
!14703 = !DILocation(line: 2374, column: 11, scope: !14675)
!14704 = !DILocation(line: 2374, column: 38, scope: !14675)
!14705 = !DILocation(line: 2375, column: 12, scope: !14675)
!14706 = !DILocation(line: 2375, column: 18, scope: !14675)
!14707 = !DILocation(line: 2375, column: 40, scope: !14675)
!14708 = !DILocation(line: 2376, column: 5, scope: !14675)
!14709 = !DILocation(line: 2376, column: 11, scope: !14675)
!14710 = !DILocation(line: 2376, column: 41, scope: !14675)
!14711 = !DILocation(line: 2377, column: 12, scope: !14675)
!14712 = !DILocation(line: 2377, column: 18, scope: !14675)
!14713 = !DILocation(line: 2377, column: 39, scope: !14675)
!14714 = !DILocation(line: 2378, column: 5, scope: !14675)
!14715 = !DILocation(line: 2378, column: 11, scope: !14675)
!14716 = !DILocation(line: 2365, column: 10, scope: !14561)
!14717 = !DILocation(line: 2379, column: 4, scope: !14675)
!14718 = !DILocation(line: 2380, column: 6, scope: !14561)
!14719 = !DILocation(line: 2385, column: 11, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14561, file: !2, line: 2385, column: 10)
!14721 = !DILocation(line: 2385, column: 17, scope: !14720)
!14722 = !DILocation(line: 2385, column: 43, scope: !14720)
!14723 = !DILocation(line: 2386, column: 12, scope: !14720)
!14724 = !DILocation(line: 2386, column: 18, scope: !14720)
!14725 = !DILocation(line: 2386, column: 38, scope: !14720)
!14726 = !DILocation(line: 2387, column: 5, scope: !14720)
!14727 = !DILocation(line: 2387, column: 11, scope: !14720)
!14728 = !DILocation(line: 2387, column: 42, scope: !14720)
!14729 = !DILocation(line: 2388, column: 12, scope: !14720)
!14730 = !DILocation(line: 2388, column: 18, scope: !14720)
!14731 = !DILocation(line: 2388, column: 39, scope: !14720)
!14732 = !DILocation(line: 2389, column: 5, scope: !14720)
!14733 = !DILocation(line: 2389, column: 11, scope: !14720)
!14734 = !DILocation(line: 2389, column: 40, scope: !14720)
!14735 = !DILocation(line: 2390, column: 12, scope: !14720)
!14736 = !DILocation(line: 2390, column: 18, scope: !14720)
!14737 = !DILocation(line: 2390, column: 39, scope: !14720)
!14738 = !DILocation(line: 2391, column: 5, scope: !14720)
!14739 = !DILocation(line: 2391, column: 11, scope: !14720)
!14740 = !DILocation(line: 2391, column: 38, scope: !14720)
!14741 = !DILocation(line: 2392, column: 12, scope: !14720)
!14742 = !DILocation(line: 2392, column: 18, scope: !14720)
!14743 = !DILocation(line: 2392, column: 40, scope: !14720)
!14744 = !DILocation(line: 2393, column: 5, scope: !14720)
!14745 = !DILocation(line: 2393, column: 11, scope: !14720)
!14746 = !DILocation(line: 2393, column: 41, scope: !14720)
!14747 = !DILocation(line: 2394, column: 12, scope: !14720)
!14748 = !DILocation(line: 2394, column: 18, scope: !14720)
!14749 = !DILocation(line: 2394, column: 39, scope: !14720)
!14750 = !DILocation(line: 2395, column: 5, scope: !14720)
!14751 = !DILocation(line: 2395, column: 11, scope: !14720)
!14752 = !DILocation(line: 2385, column: 10, scope: !14561)
!14753 = !DILocation(line: 2396, column: 4, scope: !14720)
!14754 = !DILocation(line: 2397, column: 6, scope: !14561)
!14755 = !DILocation(line: 2406, column: 10, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14561, file: !2, line: 2406, column: 10)
!14757 = !DILocation(line: 2406, column: 16, scope: !14756)
!14758 = !DILocation(line: 2406, column: 10, scope: !14561)
!14759 = !DILocation(line: 2407, column: 10, scope: !14756)
!14760 = !DILocation(line: 2408, column: 6, scope: !14561)
!14761 = !DILocation(line: 2414, column: 6, scope: !14561)
!14762 = !DILocation(line: 2416, column: 10, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14561, file: !2, line: 2416, column: 10)
!14764 = !DILocation(line: 2416, column: 16, scope: !14763)
!14765 = !DILocation(line: 2416, column: 10, scope: !14561)
!14766 = !DILocation(line: 2417, column: 10, scope: !14763)
!14767 = !DILocation(line: 2418, column: 6, scope: !14561)
!14768 = !DILocation(line: 2422, column: 6, scope: !14561)
!14769 = !DILocation(line: 2424, column: 10, scope: !14770)
!14770 = distinct !DILexicalBlock(scope: !14561, file: !2, line: 2424, column: 10)
!14771 = !DILocation(line: 2424, column: 16, scope: !14770)
!14772 = !DILocation(line: 2424, column: 10, scope: !14561)
!14773 = !DILocation(line: 2425, column: 10, scope: !14770)
!14774 = !DILocation(line: 2426, column: 6, scope: !14561)
!14775 = !DILocation(line: 2430, column: 6, scope: !14561)
!14776 = !DILocation(line: 2432, column: 10, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14561, file: !2, line: 2432, column: 10)
!14778 = !DILocation(line: 2432, column: 16, scope: !14777)
!14779 = !DILocation(line: 2432, column: 10, scope: !14561)
!14780 = !DILocation(line: 2433, column: 10, scope: !14777)
!14781 = !DILocation(line: 2434, column: 6, scope: !14561)
!14782 = !DILocation(line: 2442, column: 6, scope: !14561)
!14783 = !DILocation(line: 2444, column: 10, scope: !14784)
!14784 = distinct !DILexicalBlock(scope: !14561, file: !2, line: 2444, column: 10)
!14785 = !DILocation(line: 2444, column: 16, scope: !14784)
!14786 = !DILocation(line: 2444, column: 10, scope: !14561)
!14787 = !DILocation(line: 2445, column: 10, scope: !14784)
!14788 = !DILocation(line: 2446, column: 6, scope: !14561)
!14789 = !DILocation(line: 2450, column: 6, scope: !14561)
!14790 = !DILocation(line: 2452, column: 10, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14561, file: !2, line: 2452, column: 10)
!14792 = !DILocation(line: 2452, column: 16, scope: !14791)
!14793 = !DILocation(line: 2452, column: 10, scope: !14561)
!14794 = !DILocation(line: 2453, column: 10, scope: !14791)
!14795 = !DILocation(line: 2454, column: 6, scope: !14561)
!14796 = !DILocation(line: 2459, column: 6, scope: !14561)
!14797 = !DILocation(line: 2461, column: 10, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14561, file: !2, line: 2461, column: 10)
!14799 = !DILocation(line: 2461, column: 16, scope: !14798)
!14800 = !DILocation(line: 2461, column: 10, scope: !14561)
!14801 = !DILocation(line: 2462, column: 10, scope: !14798)
!14802 = !DILocation(line: 2463, column: 6, scope: !14561)
!14803 = !DILocation(line: 2468, column: 6, scope: !14561)
!14804 = !DILocation(line: 2470, column: 6, scope: !14561)
!14805 = !DILocation(line: 2472, column: 5, scope: !14487)
!14806 = !DILocation(line: 2473, column: 1, scope: !14487)
!14807 = !DISubprogram(name: "xmlStrchr", scope: !1353, file: !1353, line: 55, type: !14808, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!14808 = !DISubroutineType(types: !14809)
!14809 = !{!1445, !1445, !1352}
!14810 = distinct !DISubprogram(name: "xmlFACompareRanges", scope: !2, file: !2, line: 2112, type: !14811, scopeLine: 2112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !14813)
!14811 = !DISubroutineType(types: !14812)
!14812 = !{!1306, !1401, !1401}
!14813 = !{!14814, !14815, !14816, !14817, !14820, !14826}
!14814 = !DILocalVariable(name: "range1", arg: 1, scope: !14810, file: !2, line: 2112, type: !1401)
!14815 = !DILocalVariable(name: "range2", arg: 2, scope: !14810, file: !2, line: 2112, type: !1401)
!14816 = !DILocalVariable(name: "ret", scope: !14810, file: !2, line: 2113, type: !1306)
!14817 = !DILocalVariable(name: "tmp", scope: !14818, file: !2, line: 2125, type: !1401)
!14818 = distinct !DILexicalBlock(scope: !14819, file: !2, line: 2124, column: 38)
!14819 = distinct !DILexicalBlock(scope: !14810, file: !2, line: 2124, column: 9)
!14820 = !DILocalVariable(name: "codepoint", scope: !14821, file: !2, line: 2146, type: !1306)
!14821 = distinct !DILexicalBlock(scope: !14822, file: !2, line: 2145, column: 52)
!14822 = distinct !DILexicalBlock(scope: !14823, file: !2, line: 2145, column: 16)
!14823 = distinct !DILexicalBlock(scope: !14824, file: !2, line: 2137, column: 16)
!14824 = distinct !DILexicalBlock(scope: !14825, file: !2, line: 2134, column: 16)
!14825 = distinct !DILexicalBlock(scope: !14810, file: !2, line: 2131, column: 9)
!14826 = !DILocalVariable(name: "neg", scope: !14821, file: !2, line: 2147, type: !1306)
!14827 = !DILocation(line: 2112, column: 35, scope: !14810)
!14828 = !DILocation(line: 2112, column: 58, scope: !14810)
!14829 = !DILocation(line: 2113, column: 5, scope: !14810)
!14830 = !DILocation(line: 2113, column: 9, scope: !14810)
!14831 = !DILocation(line: 2115, column: 10, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !14810, file: !2, line: 2115, column: 9)
!14833 = !DILocation(line: 2115, column: 18, scope: !14832)
!14834 = !DILocation(line: 2115, column: 23, scope: !14832)
!14835 = !DILocation(line: 2115, column: 45, scope: !14832)
!14836 = !DILocation(line: 2116, column: 10, scope: !14832)
!14837 = !DILocation(line: 2116, column: 18, scope: !14832)
!14838 = !DILocation(line: 2116, column: 23, scope: !14832)
!14839 = !DILocation(line: 2116, column: 45, scope: !14832)
!14840 = !DILocation(line: 2117, column: 10, scope: !14832)
!14841 = !DILocation(line: 2117, column: 18, scope: !14832)
!14842 = !DILocation(line: 2117, column: 23, scope: !14832)
!14843 = !DILocation(line: 2117, column: 45, scope: !14832)
!14844 = !DILocation(line: 2118, column: 10, scope: !14832)
!14845 = !DILocation(line: 2118, column: 18, scope: !14832)
!14846 = !DILocation(line: 2118, column: 23, scope: !14832)
!14847 = !DILocation(line: 2118, column: 45, scope: !14832)
!14848 = !DILocation(line: 2119, column: 10, scope: !14832)
!14849 = !DILocation(line: 2119, column: 18, scope: !14832)
!14850 = !DILocation(line: 2119, column: 23, scope: !14832)
!14851 = !DILocation(line: 2119, column: 45, scope: !14832)
!14852 = !DILocation(line: 2120, column: 10, scope: !14832)
!14853 = !DILocation(line: 2120, column: 18, scope: !14832)
!14854 = !DILocation(line: 2120, column: 23, scope: !14832)
!14855 = !DILocation(line: 2115, column: 9, scope: !14810)
!14856 = !DILocation(line: 2121, column: 2, scope: !14832)
!14857 = !DILocation(line: 2124, column: 9, scope: !14819)
!14858 = !DILocation(line: 2124, column: 17, scope: !14819)
!14859 = !DILocation(line: 2124, column: 24, scope: !14819)
!14860 = !DILocation(line: 2124, column: 32, scope: !14819)
!14861 = !DILocation(line: 2124, column: 22, scope: !14819)
!14862 = !DILocation(line: 2124, column: 9, scope: !14810)
!14863 = !DILocation(line: 2125, column: 9, scope: !14818)
!14864 = !DILocation(line: 2125, column: 24, scope: !14818)
!14865 = !DILocation(line: 2127, column: 8, scope: !14818)
!14866 = !DILocation(line: 2127, column: 6, scope: !14818)
!14867 = !DILocation(line: 2128, column: 11, scope: !14818)
!14868 = !DILocation(line: 2128, column: 9, scope: !14818)
!14869 = !DILocation(line: 2129, column: 11, scope: !14818)
!14870 = !DILocation(line: 2129, column: 9, scope: !14818)
!14871 = !DILocation(line: 2130, column: 5, scope: !14819)
!14872 = !DILocation(line: 2130, column: 5, scope: !14818)
!14873 = !DILocation(line: 2131, column: 10, scope: !14825)
!14874 = !DILocation(line: 2131, column: 18, scope: !14825)
!14875 = !DILocation(line: 2131, column: 23, scope: !14825)
!14876 = !DILocation(line: 2131, column: 46, scope: !14825)
!14877 = !DILocation(line: 2132, column: 10, scope: !14825)
!14878 = !DILocation(line: 2132, column: 18, scope: !14825)
!14879 = !DILocation(line: 2132, column: 23, scope: !14825)
!14880 = !DILocation(line: 2131, column: 9, scope: !14810)
!14881 = !DILocation(line: 2133, column: 6, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14825, file: !2, line: 2132, column: 47)
!14883 = !DILocation(line: 2134, column: 5, scope: !14882)
!14884 = !DILocation(line: 2134, column: 17, scope: !14824)
!14885 = !DILocation(line: 2134, column: 25, scope: !14824)
!14886 = !DILocation(line: 2134, column: 30, scope: !14824)
!14887 = !DILocation(line: 2134, column: 53, scope: !14824)
!14888 = !DILocation(line: 2135, column: 17, scope: !14824)
!14889 = !DILocation(line: 2135, column: 25, scope: !14824)
!14890 = !DILocation(line: 2135, column: 30, scope: !14824)
!14891 = !DILocation(line: 2134, column: 16, scope: !14825)
!14892 = !DILocation(line: 2136, column: 2, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14824, file: !2, line: 2135, column: 54)
!14894 = !DILocation(line: 2137, column: 16, scope: !14823)
!14895 = !DILocation(line: 2137, column: 24, scope: !14823)
!14896 = !DILocation(line: 2137, column: 32, scope: !14823)
!14897 = !DILocation(line: 2137, column: 40, scope: !14823)
!14898 = !DILocation(line: 2137, column: 29, scope: !14823)
!14899 = !DILocation(line: 2137, column: 16, scope: !14824)
!14900 = !DILocation(line: 2138, column: 13, scope: !14901)
!14901 = distinct !DILexicalBlock(scope: !14902, file: !2, line: 2138, column: 13)
!14902 = distinct !DILexicalBlock(scope: !14823, file: !2, line: 2137, column: 46)
!14903 = !DILocation(line: 2138, column: 21, scope: !14901)
!14904 = !DILocation(line: 2138, column: 26, scope: !14901)
!14905 = !DILocation(line: 2138, column: 13, scope: !14902)
!14906 = !DILocation(line: 2139, column: 17, scope: !14901)
!14907 = !DILocation(line: 2139, column: 13, scope: !14901)
!14908 = !DILocation(line: 2140, column: 19, scope: !14909)
!14909 = distinct !DILexicalBlock(scope: !14901, file: !2, line: 2140, column: 18)
!14910 = !DILocation(line: 2140, column: 27, scope: !14909)
!14911 = !DILocation(line: 2140, column: 33, scope: !14909)
!14912 = !DILocation(line: 2140, column: 41, scope: !14909)
!14913 = !DILocation(line: 2140, column: 31, scope: !14909)
!14914 = !DILocation(line: 2140, column: 48, scope: !14909)
!14915 = !DILocation(line: 2141, column: 12, scope: !14909)
!14916 = !DILocation(line: 2141, column: 20, scope: !14909)
!14917 = !DILocation(line: 2141, column: 26, scope: !14909)
!14918 = !DILocation(line: 2141, column: 34, scope: !14909)
!14919 = !DILocation(line: 2141, column: 24, scope: !14909)
!14920 = !DILocation(line: 2140, column: 18, scope: !14901)
!14921 = !DILocation(line: 2142, column: 10, scope: !14909)
!14922 = !DILocation(line: 2142, column: 6, scope: !14909)
!14923 = !DILocation(line: 2144, column: 10, scope: !14909)
!14924 = !DILocation(line: 2145, column: 5, scope: !14902)
!14925 = !DILocation(line: 2145, column: 16, scope: !14822)
!14926 = !DILocation(line: 2145, column: 24, scope: !14822)
!14927 = !DILocation(line: 2145, column: 29, scope: !14822)
!14928 = !DILocation(line: 2145, column: 16, scope: !14823)
!14929 = !DILocation(line: 2146, column: 9, scope: !14821)
!14930 = !DILocation(line: 2146, column: 13, scope: !14821)
!14931 = !DILocation(line: 2147, column: 2, scope: !14821)
!14932 = !DILocation(line: 2147, column: 6, scope: !14821)
!14933 = !DILocation(line: 2155, column: 8, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14821, file: !2, line: 2155, column: 6)
!14935 = !DILocation(line: 2155, column: 16, scope: !14934)
!14936 = !DILocation(line: 2155, column: 20, scope: !14934)
!14937 = !DILocation(line: 2155, column: 26, scope: !14934)
!14938 = !DILocation(line: 2155, column: 30, scope: !14934)
!14939 = !DILocation(line: 2155, column: 38, scope: !14934)
!14940 = !DILocation(line: 2155, column: 42, scope: !14934)
!14941 = !DILocation(line: 2155, column: 49, scope: !14934)
!14942 = !DILocation(line: 2156, column: 8, scope: !14934)
!14943 = !DILocation(line: 2156, column: 16, scope: !14934)
!14944 = !DILocation(line: 2156, column: 20, scope: !14934)
!14945 = !DILocation(line: 2156, column: 26, scope: !14934)
!14946 = !DILocation(line: 2156, column: 30, scope: !14934)
!14947 = !DILocation(line: 2156, column: 38, scope: !14934)
!14948 = !DILocation(line: 2156, column: 42, scope: !14934)
!14949 = !DILocation(line: 2155, column: 6, scope: !14821)
!14950 = !DILocation(line: 2157, column: 10, scope: !14934)
!14951 = !DILocation(line: 2157, column: 6, scope: !14934)
!14952 = !DILocation(line: 2159, column: 19, scope: !14953)
!14953 = distinct !DILexicalBlock(scope: !14821, file: !2, line: 2159, column: 2)
!14954 = !DILocation(line: 2159, column: 27, scope: !14953)
!14955 = !DILocation(line: 2159, column: 17, scope: !14953)
!14956 = !DILocation(line: 2159, column: 7, scope: !14953)
!14957 = !DILocation(line: 2159, column: 33, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14953, file: !2, line: 2159, column: 2)
!14959 = !DILocation(line: 2159, column: 46, scope: !14958)
!14960 = !DILocation(line: 2159, column: 54, scope: !14958)
!14961 = !DILocation(line: 2159, column: 43, scope: !14958)
!14962 = !DILocation(line: 2159, column: 2, scope: !14953)
!14963 = !DILocation(line: 2160, column: 38, scope: !14964)
!14964 = distinct !DILexicalBlock(scope: !14958, file: !2, line: 2159, column: 72)
!14965 = !DILocation(line: 2160, column: 46, scope: !14964)
!14966 = !DILocation(line: 2160, column: 52, scope: !14964)
!14967 = !DILocation(line: 2161, column: 13, scope: !14964)
!14968 = !DILocation(line: 2161, column: 21, scope: !14964)
!14969 = !DILocation(line: 2161, column: 28, scope: !14964)
!14970 = !DILocation(line: 2161, column: 36, scope: !14964)
!14971 = !DILocation(line: 2162, column: 10, scope: !14964)
!14972 = !DILocation(line: 2162, column: 18, scope: !14964)
!14973 = !DILocation(line: 2160, column: 12, scope: !14964)
!14974 = !DILocation(line: 2160, column: 10, scope: !14964)
!14975 = !DILocation(line: 2163, column: 10, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14964, file: !2, line: 2163, column: 10)
!14977 = !DILocation(line: 2163, column: 14, scope: !14976)
!14978 = !DILocation(line: 2163, column: 10, scope: !14964)
!14979 = !DILocation(line: 2164, column: 10, scope: !14976)
!14980 = !DILocation(line: 2165, column: 12, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14964, file: !2, line: 2165, column: 10)
!14982 = !DILocation(line: 2165, column: 16, scope: !14981)
!14983 = !DILocation(line: 2165, column: 22, scope: !14981)
!14984 = !DILocation(line: 2165, column: 26, scope: !14981)
!14985 = !DILocation(line: 2165, column: 30, scope: !14981)
!14986 = !DILocation(line: 2165, column: 37, scope: !14981)
!14987 = !DILocation(line: 2166, column: 12, scope: !14981)
!14988 = !DILocation(line: 2166, column: 16, scope: !14981)
!14989 = !DILocation(line: 2166, column: 22, scope: !14981)
!14990 = !DILocation(line: 2166, column: 26, scope: !14981)
!14991 = !DILocation(line: 2166, column: 30, scope: !14981)
!14992 = !DILocation(line: 2165, column: 10, scope: !14964)
!14993 = !DILocation(line: 2167, column: 3, scope: !14981)
!14994 = !DILocation(line: 2168, column: 2, scope: !14964)
!14995 = !DILocation(line: 2159, column: 68, scope: !14958)
!14996 = !DILocation(line: 2159, column: 2, scope: !14958)
!14997 = distinct !{!14997, !14962, !14998, !1794}
!14998 = !DILocation(line: 2168, column: 2, scope: !14953)
!14999 = !DILocation(line: 2169, column: 2, scope: !14821)
!15000 = !DILocation(line: 2170, column: 5, scope: !14822)
!15001 = !DILocation(line: 2170, column: 17, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !14822, file: !2, line: 2170, column: 16)
!15003 = !DILocation(line: 2170, column: 25, scope: !15002)
!15004 = !DILocation(line: 2170, column: 30, scope: !15002)
!15005 = !DILocation(line: 2170, column: 56, scope: !15002)
!15006 = !DILocation(line: 2171, column: 17, scope: !15002)
!15007 = !DILocation(line: 2171, column: 25, scope: !15002)
!15008 = !DILocation(line: 2171, column: 30, scope: !15002)
!15009 = !DILocation(line: 2170, column: 16, scope: !14822)
!15010 = !DILocation(line: 2172, column: 6, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !15012, file: !2, line: 2172, column: 6)
!15012 = distinct !DILexicalBlock(scope: !15002, file: !2, line: 2171, column: 57)
!15013 = !DILocation(line: 2172, column: 14, scope: !15011)
!15014 = !DILocation(line: 2172, column: 22, scope: !15011)
!15015 = !DILocation(line: 2172, column: 30, scope: !15011)
!15016 = !DILocation(line: 2172, column: 19, scope: !15011)
!15017 = !DILocation(line: 2172, column: 6, scope: !15012)
!15018 = !DILocation(line: 2173, column: 24, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !15011, file: !2, line: 2172, column: 36)
!15020 = !DILocation(line: 2173, column: 32, scope: !15019)
!15021 = !DILocation(line: 2173, column: 43, scope: !15019)
!15022 = !DILocation(line: 2173, column: 51, scope: !15019)
!15023 = !DILocation(line: 2173, column: 12, scope: !15019)
!15024 = !DILocation(line: 2173, column: 10, scope: !15019)
!15025 = !DILocation(line: 2174, column: 2, scope: !15019)
!15026 = !DILocation(line: 2181, column: 6, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !15011, file: !2, line: 2174, column: 9)
!15028 = !DILocation(line: 2183, column: 5, scope: !15012)
!15029 = !DILocation(line: 2183, column: 17, scope: !15030)
!15030 = distinct !DILexicalBlock(scope: !15002, file: !2, line: 2183, column: 16)
!15031 = !DILocation(line: 2183, column: 25, scope: !15030)
!15032 = !DILocation(line: 2183, column: 30, scope: !15030)
!15033 = !DILocation(line: 2183, column: 51, scope: !15030)
!15034 = !DILocation(line: 2184, column: 17, scope: !15030)
!15035 = !DILocation(line: 2184, column: 25, scope: !15030)
!15036 = !DILocation(line: 2184, column: 30, scope: !15030)
!15037 = !DILocation(line: 2183, column: 16, scope: !15002)
!15038 = !DILocation(line: 2185, column: 7, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !15040, file: !2, line: 2185, column: 6)
!15040 = distinct !DILexicalBlock(scope: !15030, file: !2, line: 2184, column: 52)
!15041 = !DILocation(line: 2185, column: 15, scope: !15039)
!15042 = !DILocation(line: 2185, column: 20, scope: !15039)
!15043 = !DILocation(line: 2185, column: 44, scope: !15039)
!15044 = !DILocation(line: 2186, column: 7, scope: !15039)
!15045 = !DILocation(line: 2186, column: 15, scope: !15039)
!15046 = !DILocation(line: 2186, column: 20, scope: !15039)
!15047 = !DILocation(line: 2185, column: 6, scope: !15040)
!15048 = !DILocation(line: 2187, column: 10, scope: !15039)
!15049 = !DILocation(line: 2187, column: 6, scope: !15039)
!15050 = !DILocation(line: 2188, column: 12, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15039, file: !2, line: 2188, column: 11)
!15052 = !DILocation(line: 2188, column: 20, scope: !15051)
!15053 = !DILocation(line: 2188, column: 25, scope: !15051)
!15054 = !DILocation(line: 2188, column: 49, scope: !15051)
!15055 = !DILocation(line: 2189, column: 12, scope: !15051)
!15056 = !DILocation(line: 2189, column: 20, scope: !15051)
!15057 = !DILocation(line: 2189, column: 25, scope: !15051)
!15058 = !DILocation(line: 2188, column: 11, scope: !15039)
!15059 = !DILocation(line: 2190, column: 10, scope: !15051)
!15060 = !DILocation(line: 2190, column: 6, scope: !15051)
!15061 = !DILocation(line: 2191, column: 12, scope: !15062)
!15062 = distinct !DILexicalBlock(scope: !15051, file: !2, line: 2191, column: 11)
!15063 = !DILocation(line: 2191, column: 20, scope: !15062)
!15064 = !DILocation(line: 2191, column: 25, scope: !15062)
!15065 = !DILocation(line: 2191, column: 49, scope: !15062)
!15066 = !DILocation(line: 2192, column: 12, scope: !15062)
!15067 = !DILocation(line: 2192, column: 20, scope: !15062)
!15068 = !DILocation(line: 2192, column: 25, scope: !15062)
!15069 = !DILocation(line: 2191, column: 11, scope: !15051)
!15070 = !DILocation(line: 2193, column: 10, scope: !15062)
!15071 = !DILocation(line: 2193, column: 6, scope: !15062)
!15072 = !DILocation(line: 2194, column: 12, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15062, file: !2, line: 2194, column: 11)
!15074 = !DILocation(line: 2194, column: 20, scope: !15073)
!15075 = !DILocation(line: 2194, column: 25, scope: !15073)
!15076 = !DILocation(line: 2194, column: 48, scope: !15073)
!15077 = !DILocation(line: 2195, column: 12, scope: !15073)
!15078 = !DILocation(line: 2195, column: 20, scope: !15073)
!15079 = !DILocation(line: 2195, column: 25, scope: !15073)
!15080 = !DILocation(line: 2194, column: 11, scope: !15062)
!15081 = !DILocation(line: 2196, column: 10, scope: !15073)
!15082 = !DILocation(line: 2196, column: 6, scope: !15073)
!15083 = !DILocation(line: 2197, column: 12, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15073, file: !2, line: 2197, column: 11)
!15085 = !DILocation(line: 2197, column: 20, scope: !15084)
!15086 = !DILocation(line: 2197, column: 25, scope: !15084)
!15087 = !DILocation(line: 2197, column: 49, scope: !15084)
!15088 = !DILocation(line: 2198, column: 12, scope: !15084)
!15089 = !DILocation(line: 2198, column: 20, scope: !15084)
!15090 = !DILocation(line: 2198, column: 25, scope: !15084)
!15091 = !DILocation(line: 2197, column: 11, scope: !15073)
!15092 = !DILocation(line: 2199, column: 10, scope: !15084)
!15093 = !DILocation(line: 2199, column: 6, scope: !15084)
!15094 = !DILocation(line: 2202, column: 6, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !15084, file: !2, line: 2200, column: 7)
!15096 = !DILocation(line: 2204, column: 5, scope: !15040)
!15097 = !DILocation(line: 2205, column: 13, scope: !15098)
!15098 = distinct !DILexicalBlock(scope: !15030, file: !2, line: 2204, column: 12)
!15099 = !DILocation(line: 2207, column: 17, scope: !15098)
!15100 = !DILocation(line: 2207, column: 25, scope: !15098)
!15101 = !DILocation(line: 2207, column: 9, scope: !15098)
!15102 = !DILocation(line: 2210, column: 16, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15104, file: !2, line: 2210, column: 15)
!15104 = distinct !DILexicalBlock(scope: !15098, file: !2, line: 2207, column: 31)
!15105 = !DILocation(line: 2210, column: 24, scope: !15103)
!15106 = !DILocation(line: 2210, column: 29, scope: !15103)
!15107 = !DILocation(line: 2210, column: 61, scope: !15103)
!15108 = !DILocation(line: 2211, column: 9, scope: !15103)
!15109 = !DILocation(line: 2211, column: 17, scope: !15103)
!15110 = !DILocation(line: 2211, column: 22, scope: !15103)
!15111 = !DILocation(line: 2211, column: 54, scope: !15103)
!15112 = !DILocation(line: 2212, column: 9, scope: !15103)
!15113 = !DILocation(line: 2212, column: 17, scope: !15103)
!15114 = !DILocation(line: 2212, column: 22, scope: !15103)
!15115 = !DILocation(line: 2212, column: 54, scope: !15103)
!15116 = !DILocation(line: 2213, column: 9, scope: !15103)
!15117 = !DILocation(line: 2213, column: 17, scope: !15103)
!15118 = !DILocation(line: 2213, column: 22, scope: !15103)
!15119 = !DILocation(line: 2213, column: 53, scope: !15103)
!15120 = !DILocation(line: 2214, column: 9, scope: !15103)
!15121 = !DILocation(line: 2214, column: 17, scope: !15103)
!15122 = !DILocation(line: 2214, column: 22, scope: !15103)
!15123 = !DILocation(line: 2210, column: 15, scope: !15104)
!15124 = !DILocation(line: 2215, column: 12, scope: !15103)
!15125 = !DILocation(line: 2215, column: 8, scope: !15103)
!15126 = !DILocation(line: 2216, column: 4, scope: !15104)
!15127 = !DILocation(line: 2218, column: 16, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !15104, file: !2, line: 2218, column: 15)
!15129 = !DILocation(line: 2218, column: 24, scope: !15128)
!15130 = !DILocation(line: 2218, column: 29, scope: !15128)
!15131 = !DILocation(line: 2218, column: 60, scope: !15128)
!15132 = !DILocation(line: 2219, column: 9, scope: !15128)
!15133 = !DILocation(line: 2219, column: 17, scope: !15128)
!15134 = !DILocation(line: 2219, column: 22, scope: !15128)
!15135 = !DILocation(line: 2219, column: 57, scope: !15128)
!15136 = !DILocation(line: 2220, column: 9, scope: !15128)
!15137 = !DILocation(line: 2220, column: 17, scope: !15128)
!15138 = !DILocation(line: 2220, column: 22, scope: !15128)
!15139 = !DILocation(line: 2218, column: 15, scope: !15104)
!15140 = !DILocation(line: 2221, column: 12, scope: !15128)
!15141 = !DILocation(line: 2221, column: 8, scope: !15128)
!15142 = !DILocation(line: 2222, column: 4, scope: !15104)
!15143 = !DILocation(line: 2224, column: 16, scope: !15144)
!15144 = distinct !DILexicalBlock(scope: !15104, file: !2, line: 2224, column: 15)
!15145 = !DILocation(line: 2224, column: 24, scope: !15144)
!15146 = !DILocation(line: 2224, column: 29, scope: !15144)
!15147 = !DILocation(line: 2224, column: 59, scope: !15144)
!15148 = !DILocation(line: 2225, column: 9, scope: !15144)
!15149 = !DILocation(line: 2225, column: 17, scope: !15144)
!15150 = !DILocation(line: 2225, column: 22, scope: !15144)
!15151 = !DILocation(line: 2225, column: 51, scope: !15144)
!15152 = !DILocation(line: 2226, column: 9, scope: !15144)
!15153 = !DILocation(line: 2226, column: 17, scope: !15144)
!15154 = !DILocation(line: 2226, column: 22, scope: !15144)
!15155 = !DILocation(line: 2224, column: 15, scope: !15104)
!15156 = !DILocation(line: 2227, column: 12, scope: !15144)
!15157 = !DILocation(line: 2227, column: 8, scope: !15144)
!15158 = !DILocation(line: 2228, column: 4, scope: !15104)
!15159 = !DILocation(line: 2230, column: 16, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15104, file: !2, line: 2230, column: 15)
!15161 = !DILocation(line: 2230, column: 24, scope: !15160)
!15162 = !DILocation(line: 2230, column: 29, scope: !15160)
!15163 = !DILocation(line: 2230, column: 60, scope: !15160)
!15164 = !DILocation(line: 2231, column: 9, scope: !15160)
!15165 = !DILocation(line: 2231, column: 17, scope: !15160)
!15166 = !DILocation(line: 2231, column: 22, scope: !15160)
!15167 = !DILocation(line: 2231, column: 48, scope: !15160)
!15168 = !DILocation(line: 2232, column: 9, scope: !15160)
!15169 = !DILocation(line: 2232, column: 17, scope: !15160)
!15170 = !DILocation(line: 2232, column: 22, scope: !15160)
!15171 = !DILocation(line: 2232, column: 48, scope: !15160)
!15172 = !DILocation(line: 2233, column: 9, scope: !15160)
!15173 = !DILocation(line: 2233, column: 17, scope: !15160)
!15174 = !DILocation(line: 2233, column: 22, scope: !15160)
!15175 = !DILocation(line: 2233, column: 49, scope: !15160)
!15176 = !DILocation(line: 2234, column: 9, scope: !15160)
!15177 = !DILocation(line: 2234, column: 17, scope: !15160)
!15178 = !DILocation(line: 2234, column: 22, scope: !15160)
!15179 = !DILocation(line: 2234, column: 53, scope: !15160)
!15180 = !DILocation(line: 2235, column: 9, scope: !15160)
!15181 = !DILocation(line: 2235, column: 17, scope: !15160)
!15182 = !DILocation(line: 2235, column: 22, scope: !15160)
!15183 = !DILocation(line: 2235, column: 52, scope: !15160)
!15184 = !DILocation(line: 2236, column: 9, scope: !15160)
!15185 = !DILocation(line: 2236, column: 17, scope: !15160)
!15186 = !DILocation(line: 2236, column: 22, scope: !15160)
!15187 = !DILocation(line: 2230, column: 15, scope: !15104)
!15188 = !DILocation(line: 2237, column: 12, scope: !15160)
!15189 = !DILocation(line: 2237, column: 8, scope: !15160)
!15190 = !DILocation(line: 2238, column: 4, scope: !15104)
!15191 = !DILocation(line: 2240, column: 16, scope: !15192)
!15192 = distinct !DILexicalBlock(scope: !15104, file: !2, line: 2240, column: 15)
!15193 = !DILocation(line: 2240, column: 24, scope: !15192)
!15194 = !DILocation(line: 2240, column: 29, scope: !15192)
!15195 = !DILocation(line: 2240, column: 56, scope: !15192)
!15196 = !DILocation(line: 2241, column: 9, scope: !15192)
!15197 = !DILocation(line: 2241, column: 17, scope: !15192)
!15198 = !DILocation(line: 2241, column: 22, scope: !15192)
!15199 = !DILocation(line: 2241, column: 48, scope: !15192)
!15200 = !DILocation(line: 2242, column: 9, scope: !15192)
!15201 = !DILocation(line: 2242, column: 17, scope: !15192)
!15202 = !DILocation(line: 2242, column: 22, scope: !15192)
!15203 = !DILocation(line: 2240, column: 15, scope: !15104)
!15204 = !DILocation(line: 2243, column: 12, scope: !15192)
!15205 = !DILocation(line: 2243, column: 8, scope: !15192)
!15206 = !DILocation(line: 2244, column: 4, scope: !15104)
!15207 = !DILocation(line: 2246, column: 16, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15104, file: !2, line: 2246, column: 15)
!15209 = !DILocation(line: 2246, column: 24, scope: !15208)
!15210 = !DILocation(line: 2246, column: 29, scope: !15208)
!15211 = !DILocation(line: 2246, column: 56, scope: !15208)
!15212 = !DILocation(line: 2247, column: 9, scope: !15208)
!15213 = !DILocation(line: 2247, column: 17, scope: !15208)
!15214 = !DILocation(line: 2247, column: 22, scope: !15208)
!15215 = !DILocation(line: 2247, column: 53, scope: !15208)
!15216 = !DILocation(line: 2248, column: 9, scope: !15208)
!15217 = !DILocation(line: 2248, column: 17, scope: !15208)
!15218 = !DILocation(line: 2248, column: 22, scope: !15208)
!15219 = !DILocation(line: 2248, column: 53, scope: !15208)
!15220 = !DILocation(line: 2249, column: 9, scope: !15208)
!15221 = !DILocation(line: 2249, column: 17, scope: !15208)
!15222 = !DILocation(line: 2249, column: 22, scope: !15208)
!15223 = !DILocation(line: 2246, column: 15, scope: !15104)
!15224 = !DILocation(line: 2250, column: 12, scope: !15208)
!15225 = !DILocation(line: 2250, column: 8, scope: !15208)
!15226 = !DILocation(line: 2251, column: 4, scope: !15104)
!15227 = !DILocation(line: 2253, column: 16, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15104, file: !2, line: 2253, column: 15)
!15229 = !DILocation(line: 2253, column: 24, scope: !15228)
!15230 = !DILocation(line: 2253, column: 29, scope: !15228)
!15231 = !DILocation(line: 2253, column: 58, scope: !15228)
!15232 = !DILocation(line: 2254, column: 9, scope: !15228)
!15233 = !DILocation(line: 2254, column: 17, scope: !15228)
!15234 = !DILocation(line: 2254, column: 22, scope: !15228)
!15235 = !DILocation(line: 2254, column: 50, scope: !15228)
!15236 = !DILocation(line: 2255, column: 9, scope: !15228)
!15237 = !DILocation(line: 2255, column: 17, scope: !15228)
!15238 = !DILocation(line: 2255, column: 22, scope: !15228)
!15239 = !DILocation(line: 2253, column: 15, scope: !15104)
!15240 = !DILocation(line: 2256, column: 12, scope: !15228)
!15241 = !DILocation(line: 2256, column: 8, scope: !15228)
!15242 = !DILocation(line: 2257, column: 4, scope: !15104)
!15243 = !DILocation(line: 2259, column: 16, scope: !15244)
!15244 = distinct !DILexicalBlock(scope: !15104, file: !2, line: 2259, column: 15)
!15245 = !DILocation(line: 2259, column: 24, scope: !15244)
!15246 = !DILocation(line: 2259, column: 29, scope: !15244)
!15247 = !DILocation(line: 2259, column: 51, scope: !15244)
!15248 = !DILocation(line: 2260, column: 9, scope: !15244)
!15249 = !DILocation(line: 2260, column: 17, scope: !15244)
!15250 = !DILocation(line: 2260, column: 22, scope: !15244)
!15251 = !DILocation(line: 2259, column: 15, scope: !15104)
!15252 = !DILocation(line: 2261, column: 12, scope: !15244)
!15253 = !DILocation(line: 2261, column: 8, scope: !15244)
!15254 = !DILocation(line: 2264, column: 8, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15244, file: !2, line: 2262, column: 9)
!15256 = !DILocation(line: 2266, column: 2, scope: !15104)
!15257 = !DILocation(line: 2268, column: 11, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !14810, file: !2, line: 2268, column: 9)
!15259 = !DILocation(line: 2268, column: 19, scope: !15258)
!15260 = !DILocation(line: 2268, column: 23, scope: !15258)
!15261 = !DILocation(line: 2268, column: 29, scope: !15258)
!15262 = !DILocation(line: 2268, column: 33, scope: !15258)
!15263 = !DILocation(line: 2268, column: 41, scope: !15258)
!15264 = !DILocation(line: 2268, column: 45, scope: !15258)
!15265 = !DILocation(line: 2268, column: 52, scope: !15258)
!15266 = !DILocation(line: 2269, column: 11, scope: !15258)
!15267 = !DILocation(line: 2269, column: 19, scope: !15258)
!15268 = !DILocation(line: 2269, column: 23, scope: !15258)
!15269 = !DILocation(line: 2269, column: 29, scope: !15258)
!15270 = !DILocation(line: 2269, column: 33, scope: !15258)
!15271 = !DILocation(line: 2269, column: 41, scope: !15258)
!15272 = !DILocation(line: 2269, column: 45, scope: !15258)
!15273 = !DILocation(line: 2268, column: 9, scope: !14810)
!15274 = !DILocation(line: 2270, column: 9, scope: !15258)
!15275 = !DILocation(line: 2270, column: 8, scope: !15258)
!15276 = !DILocation(line: 2270, column: 6, scope: !15258)
!15277 = !DILocation(line: 2270, column: 2, scope: !15258)
!15278 = !DILocation(line: 2271, column: 12, scope: !14810)
!15279 = !DILocation(line: 2271, column: 5, scope: !14810)
!15280 = !DILocation(line: 2272, column: 1, scope: !14810)
!15281 = distinct !DISubprogram(name: "xmlRegFreeRange", scope: !2, file: !2, line: 762, type: !15282, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !15284)
!15282 = !DISubroutineType(types: !15283)
!15283 = !{null, !1401}
!15284 = !{!15285}
!15285 = !DILocalVariable(name: "range", arg: 1, scope: !15281, file: !2, line: 762, type: !1401)
!15286 = !DILocation(line: 762, column: 32, scope: !15281)
!15287 = !DILocation(line: 763, column: 9, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15281, file: !2, line: 763, column: 9)
!15289 = !DILocation(line: 763, column: 15, scope: !15288)
!15290 = !DILocation(line: 763, column: 9, scope: !15281)
!15291 = !DILocation(line: 764, column: 2, scope: !15288)
!15292 = !DILocation(line: 766, column: 9, scope: !15293)
!15293 = distinct !DILexicalBlock(scope: !15281, file: !2, line: 766, column: 9)
!15294 = !DILocation(line: 766, column: 16, scope: !15293)
!15295 = !DILocation(line: 766, column: 26, scope: !15293)
!15296 = !DILocation(line: 766, column: 9, scope: !15281)
!15297 = !DILocation(line: 767, column: 2, scope: !15293)
!15298 = !DILocation(line: 767, column: 10, scope: !15293)
!15299 = !DILocation(line: 767, column: 17, scope: !15293)
!15300 = !DILocation(line: 768, column: 5, scope: !15281)
!15301 = !DILocation(line: 768, column: 13, scope: !15281)
!15302 = !DILocation(line: 769, column: 1, scope: !15281)
!15303 = distinct !DISubprogram(name: "xmlRegCopyAtom", scope: !2, file: !2, line: 863, type: !15304, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !15306)
!15304 = !DISubroutineType(types: !15305)
!15305 = !{!1378, !1483, !1378}
!15306 = !{!15307, !15308, !15309, !15310, !15313}
!15307 = !DILocalVariable(name: "ctxt", arg: 1, scope: !15303, file: !2, line: 863, type: !1483)
!15308 = !DILocalVariable(name: "atom", arg: 2, scope: !15303, file: !2, line: 863, type: !1378)
!15309 = !DILocalVariable(name: "ret", scope: !15303, file: !2, line: 864, type: !1378)
!15310 = !DILocalVariable(name: "i", scope: !15311, file: !2, line: 877, type: !1306)
!15311 = distinct !DILexicalBlock(scope: !15312, file: !2, line: 876, column: 29)
!15312 = distinct !DILexicalBlock(scope: !15303, file: !2, line: 876, column: 9)
!15313 = !DILabel(scope: !15303, name: "error", file: !2, line: 894)
!15314 = !DILocation(line: 863, column: 36, scope: !15303)
!15315 = !DILocation(line: 863, column: 56, scope: !15303)
!15316 = !DILocation(line: 864, column: 5, scope: !15303)
!15317 = !DILocation(line: 864, column: 19, scope: !15303)
!15318 = !DILocation(line: 866, column: 27, scope: !15303)
!15319 = !DILocation(line: 866, column: 9, scope: !15303)
!15320 = !DILocation(line: 867, column: 9, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15303, file: !2, line: 867, column: 9)
!15322 = !DILocation(line: 867, column: 13, scope: !15321)
!15323 = !DILocation(line: 867, column: 9, scope: !15303)
!15324 = !DILocation(line: 868, column: 21, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15321, file: !2, line: 867, column: 22)
!15326 = !DILocation(line: 868, column: 2, scope: !15325)
!15327 = !DILocation(line: 869, column: 2, scope: !15325)
!15328 = !DILocation(line: 871, column: 12, scope: !15303)
!15329 = !DILocation(line: 871, column: 5, scope: !15303)
!15330 = !DILocation(line: 872, column: 17, scope: !15303)
!15331 = !DILocation(line: 872, column: 23, scope: !15303)
!15332 = !DILocation(line: 872, column: 5, scope: !15303)
!15333 = !DILocation(line: 872, column: 10, scope: !15303)
!15334 = !DILocation(line: 872, column: 15, scope: !15303)
!15335 = !DILocation(line: 873, column: 18, scope: !15303)
!15336 = !DILocation(line: 873, column: 24, scope: !15303)
!15337 = !DILocation(line: 873, column: 5, scope: !15303)
!15338 = !DILocation(line: 873, column: 10, scope: !15303)
!15339 = !DILocation(line: 873, column: 16, scope: !15303)
!15340 = !DILocation(line: 874, column: 16, scope: !15303)
!15341 = !DILocation(line: 874, column: 22, scope: !15303)
!15342 = !DILocation(line: 874, column: 5, scope: !15303)
!15343 = !DILocation(line: 874, column: 10, scope: !15303)
!15344 = !DILocation(line: 874, column: 14, scope: !15303)
!15345 = !DILocation(line: 875, column: 16, scope: !15303)
!15346 = !DILocation(line: 875, column: 22, scope: !15303)
!15347 = !DILocation(line: 875, column: 5, scope: !15303)
!15348 = !DILocation(line: 875, column: 10, scope: !15303)
!15349 = !DILocation(line: 875, column: 14, scope: !15303)
!15350 = !DILocation(line: 876, column: 9, scope: !15312)
!15351 = !DILocation(line: 876, column: 15, scope: !15312)
!15352 = !DILocation(line: 876, column: 24, scope: !15312)
!15353 = !DILocation(line: 876, column: 9, scope: !15303)
!15354 = !DILocation(line: 877, column: 9, scope: !15311)
!15355 = !DILocation(line: 877, column: 13, scope: !15311)
!15356 = !DILocation(line: 879, column: 42, scope: !15311)
!15357 = !DILocation(line: 880, column: 45, scope: !15311)
!15358 = !DILocation(line: 880, column: 51, scope: !15311)
!15359 = !DILocation(line: 879, column: 75, scope: !15311)
!15360 = !DILocation(line: 879, column: 9, scope: !15311)
!15361 = !DILocation(line: 879, column: 14, scope: !15311)
!15362 = !DILocation(line: 879, column: 21, scope: !15311)
!15363 = !DILocation(line: 881, column: 6, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15311, file: !2, line: 881, column: 6)
!15365 = !DILocation(line: 881, column: 11, scope: !15364)
!15366 = !DILocation(line: 881, column: 18, scope: !15364)
!15367 = !DILocation(line: 881, column: 6, scope: !15311)
!15368 = !DILocation(line: 882, column: 25, scope: !15369)
!15369 = distinct !DILexicalBlock(scope: !15364, file: !2, line: 881, column: 27)
!15370 = !DILocation(line: 882, column: 6, scope: !15369)
!15371 = !DILocation(line: 883, column: 6, scope: !15369)
!15372 = !DILocation(line: 885, column: 9, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15311, file: !2, line: 885, column: 2)
!15374 = !DILocation(line: 885, column: 7, scope: !15373)
!15375 = !DILocation(line: 885, column: 13, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15373, file: !2, line: 885, column: 2)
!15377 = !DILocation(line: 885, column: 17, scope: !15376)
!15378 = !DILocation(line: 885, column: 23, scope: !15376)
!15379 = !DILocation(line: 885, column: 15, scope: !15376)
!15380 = !DILocation(line: 885, column: 2, scope: !15373)
!15381 = !DILocation(line: 886, column: 39, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15376, file: !2, line: 885, column: 37)
!15383 = !DILocation(line: 886, column: 45, scope: !15382)
!15384 = !DILocation(line: 886, column: 51, scope: !15382)
!15385 = !DILocation(line: 886, column: 58, scope: !15382)
!15386 = !DILocation(line: 886, column: 23, scope: !15382)
!15387 = !DILocation(line: 886, column: 6, scope: !15382)
!15388 = !DILocation(line: 886, column: 11, scope: !15382)
!15389 = !DILocation(line: 886, column: 18, scope: !15382)
!15390 = !DILocation(line: 886, column: 21, scope: !15382)
!15391 = !DILocation(line: 887, column: 10, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15382, file: !2, line: 887, column: 10)
!15393 = !DILocation(line: 887, column: 15, scope: !15392)
!15394 = !DILocation(line: 887, column: 22, scope: !15392)
!15395 = !DILocation(line: 887, column: 25, scope: !15392)
!15396 = !DILocation(line: 887, column: 10, scope: !15382)
!15397 = !DILocation(line: 888, column: 10, scope: !15392)
!15398 = !DILocation(line: 889, column: 22, scope: !15382)
!15399 = !DILocation(line: 889, column: 24, scope: !15382)
!15400 = !DILocation(line: 889, column: 6, scope: !15382)
!15401 = !DILocation(line: 889, column: 11, scope: !15382)
!15402 = !DILocation(line: 889, column: 20, scope: !15382)
!15403 = !DILocation(line: 890, column: 2, scope: !15382)
!15404 = !DILocation(line: 885, column: 33, scope: !15376)
!15405 = !DILocation(line: 885, column: 2, scope: !15376)
!15406 = distinct !{!15406, !15380, !15407, !1794}
!15407 = !DILocation(line: 890, column: 2, scope: !15373)
!15408 = !DILocation(line: 891, column: 5, scope: !15312)
!15409 = !DILocation(line: 891, column: 5, scope: !15311)
!15410 = !DILocation(line: 892, column: 12, scope: !15303)
!15411 = !DILocation(line: 892, column: 5, scope: !15303)
!15412 = !DILocation(line: 894, column: 1, scope: !15303)
!15413 = !DILocation(line: 895, column: 20, scope: !15303)
!15414 = !DILocation(line: 895, column: 5, scope: !15303)
!15415 = !DILocation(line: 896, column: 5, scope: !15303)
!15416 = !DILocation(line: 897, column: 1, scope: !15303)
!15417 = distinct !DISubprogram(name: "xmlRegCopyRange", scope: !2, file: !2, line: 780, type: !15418, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !15420)
!15418 = !DISubroutineType(types: !15419)
!15419 = !{!1401, !1483, !1401}
!15420 = !{!15421, !15422, !15423}
!15421 = !DILocalVariable(name: "ctxt", arg: 1, scope: !15417, file: !2, line: 780, type: !1483)
!15422 = !DILocalVariable(name: "range", arg: 2, scope: !15417, file: !2, line: 780, type: !1401)
!15423 = !DILocalVariable(name: "ret", scope: !15417, file: !2, line: 781, type: !1401)
!15424 = !DILocation(line: 780, column: 37, scope: !15417)
!15425 = !DILocation(line: 780, column: 58, scope: !15417)
!15426 = !DILocation(line: 781, column: 5, scope: !15417)
!15427 = !DILocation(line: 781, column: 20, scope: !15417)
!15428 = !DILocation(line: 783, column: 9, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15417, file: !2, line: 783, column: 9)
!15430 = !DILocation(line: 783, column: 15, scope: !15429)
!15431 = !DILocation(line: 783, column: 9, scope: !15417)
!15432 = !DILocation(line: 784, column: 2, scope: !15429)
!15433 = !DILocation(line: 786, column: 26, scope: !15417)
!15434 = !DILocation(line: 786, column: 32, scope: !15417)
!15435 = !DILocation(line: 786, column: 39, scope: !15417)
!15436 = !DILocation(line: 786, column: 44, scope: !15417)
!15437 = !DILocation(line: 786, column: 51, scope: !15417)
!15438 = !DILocation(line: 786, column: 57, scope: !15417)
!15439 = !DILocation(line: 786, column: 64, scope: !15417)
!15440 = !DILocation(line: 787, column: 26, scope: !15417)
!15441 = !DILocation(line: 787, column: 33, scope: !15417)
!15442 = !DILocation(line: 786, column: 11, scope: !15417)
!15443 = !DILocation(line: 786, column: 9, scope: !15417)
!15444 = !DILocation(line: 788, column: 9, scope: !15445)
!15445 = distinct !DILexicalBlock(scope: !15417, file: !2, line: 788, column: 9)
!15446 = !DILocation(line: 788, column: 13, scope: !15445)
!15447 = !DILocation(line: 788, column: 9, scope: !15417)
!15448 = !DILocation(line: 789, column: 9, scope: !15445)
!15449 = !DILocation(line: 790, column: 9, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15417, file: !2, line: 790, column: 9)
!15451 = !DILocation(line: 790, column: 16, scope: !15450)
!15452 = !DILocation(line: 790, column: 26, scope: !15450)
!15453 = !DILocation(line: 790, column: 9, scope: !15417)
!15454 = !DILocation(line: 791, column: 29, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15450, file: !2, line: 790, column: 35)
!15456 = !DILocation(line: 791, column: 36, scope: !15455)
!15457 = !DILocation(line: 791, column: 19, scope: !15455)
!15458 = !DILocation(line: 791, column: 2, scope: !15455)
!15459 = !DILocation(line: 791, column: 7, scope: !15455)
!15460 = !DILocation(line: 791, column: 17, scope: !15455)
!15461 = !DILocation(line: 792, column: 6, scope: !15462)
!15462 = distinct !DILexicalBlock(scope: !15455, file: !2, line: 792, column: 6)
!15463 = !DILocation(line: 792, column: 11, scope: !15462)
!15464 = !DILocation(line: 792, column: 21, scope: !15462)
!15465 = !DILocation(line: 792, column: 6, scope: !15455)
!15466 = !DILocation(line: 793, column: 25, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15462, file: !2, line: 792, column: 30)
!15468 = !DILocation(line: 793, column: 6, scope: !15467)
!15469 = !DILocation(line: 794, column: 22, scope: !15467)
!15470 = !DILocation(line: 794, column: 6, scope: !15467)
!15471 = !DILocation(line: 795, column: 6, scope: !15467)
!15472 = !DILocation(line: 797, column: 5, scope: !15455)
!15473 = !DILocation(line: 798, column: 12, scope: !15417)
!15474 = !DILocation(line: 798, column: 5, scope: !15417)
!15475 = !DILocation(line: 799, column: 1, scope: !15417)
!15476 = distinct !DISubprogram(name: "xmlRegStateAddTransTo", scope: !2, file: !2, line: 1344, type: !15477, scopeLine: 1345, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !390, retainedNodes: !15479)
!15477 = !DISubroutineType(types: !15478)
!15478 = !{null, !1483, !1358, !1306}
!15479 = !{!15480, !15481, !15482, !15483}
!15480 = !DILocalVariable(name: "ctxt", arg: 1, scope: !15476, file: !2, line: 1344, type: !1483)
!15481 = !DILocalVariable(name: "target", arg: 2, scope: !15476, file: !2, line: 1344, type: !1358)
!15482 = !DILocalVariable(name: "from", arg: 3, scope: !15476, file: !2, line: 1345, type: !1306)
!15483 = !DILocalVariable(name: "tmp", scope: !15484, file: !2, line: 1356, type: !1419)
!15484 = distinct !DILexicalBlock(scope: !15485, file: !2, line: 1355, column: 57)
!15485 = distinct !DILexicalBlock(scope: !15486, file: !2, line: 1355, column: 16)
!15486 = distinct !DILexicalBlock(scope: !15476, file: !2, line: 1346, column: 9)
!15487 = !DILocation(line: 1344, column: 43, scope: !15476)
!15488 = !DILocation(line: 1344, column: 64, scope: !15476)
!15489 = !DILocation(line: 1345, column: 27, scope: !15476)
!15490 = !DILocation(line: 1346, column: 9, scope: !15486)
!15491 = !DILocation(line: 1346, column: 17, scope: !15486)
!15492 = !{!1985, !1546, i64 40}
!15493 = !DILocation(line: 1346, column: 28, scope: !15486)
!15494 = !DILocation(line: 1346, column: 9, scope: !15476)
!15495 = !DILocation(line: 1347, column: 2, scope: !15496)
!15496 = distinct !DILexicalBlock(scope: !15486, file: !2, line: 1346, column: 34)
!15497 = !DILocation(line: 1347, column: 10, scope: !15496)
!15498 = !DILocation(line: 1347, column: 21, scope: !15496)
!15499 = !DILocation(line: 1348, column: 28, scope: !15496)
!15500 = !DILocation(line: 1348, column: 38, scope: !15496)
!15501 = !DILocation(line: 1348, column: 46, scope: !15496)
!15502 = !DILocation(line: 1348, column: 57, scope: !15496)
!15503 = !DILocation(line: 1348, column: 2, scope: !15496)
!15504 = !DILocation(line: 1348, column: 10, scope: !15496)
!15505 = !DILocation(line: 1348, column: 18, scope: !15496)
!15506 = !DILocation(line: 1350, column: 6, scope: !15507)
!15507 = distinct !DILexicalBlock(scope: !15496, file: !2, line: 1350, column: 6)
!15508 = !DILocation(line: 1350, column: 14, scope: !15507)
!15509 = !DILocation(line: 1350, column: 22, scope: !15507)
!15510 = !DILocation(line: 1350, column: 6, scope: !15496)
!15511 = !DILocation(line: 1351, column: 25, scope: !15512)
!15512 = distinct !DILexicalBlock(scope: !15507, file: !2, line: 1350, column: 31)
!15513 = !DILocation(line: 1351, column: 6, scope: !15512)
!15514 = !DILocation(line: 1352, column: 6, scope: !15512)
!15515 = !DILocation(line: 1352, column: 14, scope: !15512)
!15516 = !DILocation(line: 1352, column: 25, scope: !15512)
!15517 = !DILocation(line: 1353, column: 6, scope: !15512)
!15518 = !DILocation(line: 1355, column: 5, scope: !15496)
!15519 = !DILocation(line: 1355, column: 16, scope: !15485)
!15520 = !DILocation(line: 1355, column: 24, scope: !15485)
!15521 = !DILocation(line: 1355, column: 37, scope: !15485)
!15522 = !DILocation(line: 1355, column: 45, scope: !15485)
!15523 = !DILocation(line: 1355, column: 34, scope: !15485)
!15524 = !DILocation(line: 1355, column: 16, scope: !15486)
!15525 = !DILocation(line: 1356, column: 2, scope: !15484)
!15526 = !DILocation(line: 1356, column: 7, scope: !15484)
!15527 = !DILocation(line: 1357, column: 2, scope: !15484)
!15528 = !DILocation(line: 1357, column: 10, scope: !15484)
!15529 = !DILocation(line: 1357, column: 21, scope: !15484)
!15530 = !DILocation(line: 1358, column: 16, scope: !15484)
!15531 = !DILocation(line: 1358, column: 27, scope: !15484)
!15532 = !DILocation(line: 1358, column: 35, scope: !15484)
!15533 = !DILocation(line: 1358, column: 44, scope: !15484)
!15534 = !DILocation(line: 1358, column: 52, scope: !15484)
!15535 = !DILocation(line: 1358, column: 63, scope: !15484)
!15536 = !DILocation(line: 1358, column: 6, scope: !15484)
!15537 = !DILocation(line: 1360, column: 6, scope: !15538)
!15538 = distinct !DILexicalBlock(scope: !15484, file: !2, line: 1360, column: 6)
!15539 = !DILocation(line: 1360, column: 10, scope: !15538)
!15540 = !DILocation(line: 1360, column: 6, scope: !15484)
!15541 = !DILocation(line: 1361, column: 25, scope: !15542)
!15542 = distinct !DILexicalBlock(scope: !15538, file: !2, line: 1360, column: 19)
!15543 = !DILocation(line: 1361, column: 6, scope: !15542)
!15544 = !DILocation(line: 1362, column: 6, scope: !15542)
!15545 = !DILocation(line: 1362, column: 14, scope: !15542)
!15546 = !DILocation(line: 1362, column: 25, scope: !15542)
!15547 = !DILocation(line: 1363, column: 6, scope: !15542)
!15548 = !DILocation(line: 1365, column: 20, scope: !15484)
!15549 = !DILocation(line: 1365, column: 2, scope: !15484)
!15550 = !DILocation(line: 1365, column: 10, scope: !15484)
!15551 = !DILocation(line: 1365, column: 18, scope: !15484)
!15552 = !DILocation(line: 1366, column: 5, scope: !15485)
!15553 = !DILocation(line: 1366, column: 5, scope: !15484)
!15554 = !DILocation(line: 1367, column: 42, scope: !15476)
!15555 = !DILocation(line: 1367, column: 5, scope: !15476)
!15556 = !DILocation(line: 1367, column: 13, scope: !15476)
!15557 = !DILocation(line: 1367, column: 21, scope: !15476)
!15558 = !DILocation(line: 1367, column: 29, scope: !15476)
!15559 = !DILocation(line: 1367, column: 40, scope: !15476)
!15560 = !DILocation(line: 1368, column: 5, scope: !15476)
!15561 = !DILocation(line: 1368, column: 13, scope: !15476)
!15562 = !DILocation(line: 1368, column: 22, scope: !15476)
!15563 = !DILocation(line: 1369, column: 1, scope: !15476)

; ModuleID = 'samples/812.bc'
source_filename = "sklearn/cluster/_k_means_minibatch.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PyModuleDef = type { %struct.PyModuleDef_Base, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr }
%struct.PyModuleDef_Base = type { %struct._object, ptr, i64, ptr }
%struct._object = type { i64, ptr }
%struct.PyMethodDef = type { ptr, ptr, i32, ptr }
%struct.PyModuleDef_Slot = type { i32, ptr }
%struct._typeobject = type { %struct.PyVarObject, ptr, i64, i64, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr }
%struct.PyVarObject = type { %struct._object, i64 }
%struct.PyMemberDef = type { ptr, i32, i64, i32, ptr }
%struct.PyGetSetDef = type { ptr, ptr, ptr, ptr, ptr }
%struct.PyMappingMethods = type { ptr, ptr, ptr }
%struct.__Pyx_StringTabEntry = type { ptr, ptr, i64, ptr, i8, i8, i8 }
%struct.__pyx_vtabstruct_array = type { ptr }
%struct.__pyx_vtabstruct_memoryview = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.__pyx_vtabstruct__memoryviewslice = type { %struct.__pyx_vtabstruct_memoryview }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct.PySequenceMethods = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.PyBufferProcs = type { ptr, ptr }
%struct.__Pyx_TypeInfo = type { ptr, ptr, i64, [8 x i64], i32, i8, i8, i32 }
%struct.ident_t = type { i32, i32, i32, i32, ptr }
%struct.__Pyx_CodeObjectCache = type { i32, i32, ptr }
%struct.__pyx_FusedFunctionObject = type { %struct.__pyx_CyFunctionObject, ptr, ptr, ptr }
%struct.__pyx_CyFunctionObject = type { %struct.PyCFunctionObject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i64, i32, ptr, ptr, ptr, ptr }
%struct.PyCFunctionObject = type { %struct._object, ptr, ptr, ptr, ptr, ptr }
%struct._ts = type { ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, i64, i64, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, i64, i64, %struct.PyTraceInfo, ptr, ptr, ptr, %struct._err_stackitem, %struct._PyCFrame }
%struct.PyTraceInfo = type { ptr, %struct._line_offsets }
%struct._line_offsets = type { i32, i32, i32, %struct._opaque }
%struct._opaque = type { i32, ptr, ptr }
%struct._err_stackitem = type { ptr, ptr }
%struct._PyCFrame = type { i8, ptr, ptr }
%struct._frame = type { %struct._object, ptr, ptr, ptr, i32, i8, i8, i8, [1 x ptr] }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x ptr] }
%struct.PyConfig = type { i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, ptr, i32, ptr, ptr, ptr, i32, %struct.PyWideStringList, %struct.PyWideStringList, %struct.PyWideStringList, %struct.PyWideStringList, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, i32, %struct.PyWideStringList, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.PyWideStringList = type { i64, ptr }
%struct.__pyx_array_obj = type { %struct._object, ptr, ptr, i64, ptr, i32, ptr, ptr, i64, ptr, ptr, ptr, i32, i32 }
%struct.__pyx_memoryview_obj = type { %struct._object, ptr, ptr, ptr, ptr, ptr, [2 x i32], ptr, %struct.Py_buffer, i32, i32, ptr }
%struct.Py_buffer = type { ptr, ptr, i64, i64, i32, i32, ptr, ptr, ptr, ptr, ptr }
%struct.PyListObject = type { %struct.PyVarObject, ptr, i64 }
%struct.__Pyx_memviewslice = type { ptr, ptr, [8 x i64], [8 x i64], [8 x i64] }
%struct.PyMethodObject = type { %struct._object, ptr, ptr, ptr, ptr }
%struct.__pyx_memoryviewslice_obj = type { %struct.__pyx_memoryview_obj, %struct.__Pyx_memviewslice, ptr, ptr, ptr }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, ptr }
%struct.anon = type { i32 }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }
%struct.PyCompactUnicodeObject = type { %struct.PyASCIIObject, i64, ptr, i64 }
%struct.PyUnicodeObject = type { %struct.PyCompactUnicodeObject, %union.anon }
%union.anon = type { ptr }
%struct.__pyx_MemviewEnum_obj = type { %struct._object, ptr }
%struct.PyDictObject = type { %struct._object, i64, i64, ptr, ptr }
%struct.PyNumberMethods = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.PyFloatObject = type { %struct._object, double }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }
%struct.__Pyx_BufFmt_StackElem = type { ptr, i64 }
%struct.__Pyx_BufFmt_Context = type { %struct.__Pyx_StructField_, ptr, i64, i64, i64, i64, i32, i8, i8, i8, i8 }
%struct.__Pyx_StructField_ = type { ptr, ptr, i64 }
%union.anon.0 = type { i32 }
%struct.PyByteArrayObject = type { %struct.PyVarObject, i64, ptr, ptr, i64 }
%struct.__Pyx_CodeObjectCacheEntry = type { ptr, i32 }

@__pyx_module_is_main_sklearn__cluster___k_means_minibatch = global i32 0, align 4
@__pyx_moduledef = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, ptr null }, ptr null, i64 0, ptr null }, ptr @.str, ptr null, i64 0, ptr @__pyx_methods, ptr @__pyx_moduledef_slots, ptr null, ptr null, ptr null }, align 8
@.str = private unnamed_addr constant [19 x i8] c"_k_means_minibatch\00", align 1
@__pyx_methods = internal global [1 x %struct.PyMethodDef] zeroinitializer, align 16
@__pyx_moduledef_slots = internal global [3 x %struct.PyModuleDef_Slot] [%struct.PyModuleDef_Slot { i32 1, ptr @__pyx_pymod_create }, %struct.PyModuleDef_Slot { i32 2, ptr @__pyx_pymod_exec__k_means_minibatch }, %struct.PyModuleDef_Slot zeroinitializer], align 16
@__pyx_m = internal global ptr null, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"loader\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"__loader__\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"__file__\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"__package__\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"submodule_search_locations\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"__path__\00", align 1
@__Pyx_check_single_interpreter.main_interpreter_id = internal global i64 -1, align 8
@PyExc_ImportError = external global ptr, align 8
@.str.10 = private unnamed_addr constant [95 x i8] c"Interpreter change detected - this module can only be loaded into one interpreter per process.\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@PyExc_AttributeError = external global ptr, align 8
@__pyx_pymod_exec__k_means_minibatch.__pyx_t_3 = internal global [8 x ptr] zeroinitializer, align 16
@PyExc_RuntimeError = external global ptr, align 8
@.str.11 = private unnamed_addr constant [91 x i8] c"Module '_k_means_minibatch' has already been imported. Re-initialisation is not supported.\00", align 1
@__pyx_f = internal global [2 x ptr] [ptr @.str.21, ptr @.str.22], align 16
@__pyx_empty_tuple = internal global ptr null, align 8
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__pyx_empty_bytes = internal global ptr null, align 8
@__pyx_empty_unicode = internal global ptr null, align 8
@__pyx_d = internal global ptr null, align 8
@.str.13 = private unnamed_addr constant [9 x i8] c"builtins\00", align 1
@__pyx_b = internal global ptr null, align 8
@.str.14 = private unnamed_addr constant [15 x i8] c"cython_runtime\00", align 1
@__pyx_cython_runtime = internal global ptr null, align 8
@.str.15 = private unnamed_addr constant [13 x i8] c"__builtins__\00", align 1
@__pyx_n_s_name_2 = internal global ptr null, align 8
@__pyx_n_s_main = internal global ptr null, align 8
@.str.16 = private unnamed_addr constant [35 x i8] c"sklearn.cluster._k_means_minibatch\00", align 1
@__pyx_fuse_0__pyx_mdef_7sklearn_7cluster_18_k_means_minibatch_5_minibatch_update_dense = internal global %struct.PyMethodDef { ptr @.str.222, ptr @__pyx_fuse_0__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_5_minibatch_update_dense, i32 3, ptr @__pyx_doc_7sklearn_7cluster_18_k_means_minibatch__minibatch_update_dense }, align 8
@__pyx_n_s_minibatch_update_dense = internal global ptr null, align 8
@__pyx_n_s_sklearn_cluster__k_means_minibat_2 = internal global ptr null, align 8
@__pyx_codeobj__25 = internal global ptr null, align 8
@__pyx_n_s_float = internal global ptr null, align 8
@__pyx_fuse_1__pyx_mdef_7sklearn_7cluster_18_k_means_minibatch_7_minibatch_update_dense = internal global %struct.PyMethodDef { ptr @.str.281, ptr @__pyx_fuse_1__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_7_minibatch_update_dense, i32 3, ptr @__pyx_doc_7sklearn_7cluster_18_k_means_minibatch__minibatch_update_dense }, align 8
@__pyx_n_s_double = internal global ptr null, align 8
@__pyx_mdef_7sklearn_7cluster_18_k_means_minibatch_1_minibatch_update_dense = internal global %struct.PyMethodDef { ptr @.str.223, ptr @__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_1_minibatch_update_dense, i32 3, ptr @__pyx_doc_7sklearn_7cluster_18_k_means_minibatch__minibatch_update_dense }, align 8
@__pyx_fuse_0__pyx_mdef_7sklearn_7cluster_18_k_means_minibatch_11_minibatch_update_sparse = internal global %struct.PyMethodDef { ptr @.str.292, ptr @__pyx_fuse_0__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_11_minibatch_update_sparse, i32 3, ptr @__pyx_doc_7sklearn_7cluster_18_k_means_minibatch_2_minibatch_update_sparse }, align 8
@__pyx_n_s_minibatch_update_sparse = internal global ptr null, align 8
@__pyx_codeobj__27 = internal global ptr null, align 8
@__pyx_fuse_1__pyx_mdef_7sklearn_7cluster_18_k_means_minibatch_13_minibatch_update_sparse = internal global %struct.PyMethodDef { ptr @.str.295, ptr @__pyx_fuse_1__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_13_minibatch_update_sparse, i32 3, ptr @__pyx_doc_7sklearn_7cluster_18_k_means_minibatch_2_minibatch_update_sparse }, align 8
@__pyx_mdef_7sklearn_7cluster_18_k_means_minibatch_3_minibatch_update_sparse = internal global %struct.PyMethodDef { ptr @.str.293, ptr @__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_3_minibatch_update_sparse, i32 3, ptr @__pyx_doc_7sklearn_7cluster_18_k_means_minibatch_2_minibatch_update_sparse }, align 8
@__pyx_n_s_test = internal global ptr null, align 8
@.str.17 = private unnamed_addr constant [28 x i8] c"getbuffer(obj, view, flags)\00", align 1
@__pyx_array_type = internal global ptr null, align 8
@__pyx_n_s_pyx_getbuffer = internal global ptr null, align 8
@__pyx_MemviewEnum_type = internal global ptr null, align 8
@__pyx_tuple__28 = internal global ptr null, align 8
@generic = internal global ptr null, align 8
@__pyx_tuple__29 = internal global ptr null, align 8
@strided = internal global ptr null, align 8
@__pyx_tuple__30 = internal global ptr null, align 8
@indirect = internal global ptr null, align 8
@__pyx_tuple__31 = internal global ptr null, align 8
@contiguous = internal global ptr null, align 8
@__pyx_tuple__32 = internal global ptr null, align 8
@indirect_contiguous = internal global ptr null, align 8
@__pyx_memoryview_thread_locks_used = internal global i32 0, align 4
@__pyx_memoryview_thread_locks = internal global [8 x ptr] zeroinitializer, align 16
@__pyx_memoryview_type = internal global ptr null, align 8
@__pyx_memoryviewslice_type = internal global ptr null, align 8
@__pyx_mdef_15View_dot_MemoryView_1__pyx_unpickle_Enum = internal global %struct.PyMethodDef { ptr @.str.299, ptr @__pyx_pw_15View_dot_MemoryView_1__pyx_unpickle_Enum, i32 3, ptr null }, align 8
@__pyx_n_s_View_MemoryView = internal global ptr null, align 8
@__pyx_n_s_pyx_unpickle_Enum = internal global ptr null, align 8
@.str.18 = private unnamed_addr constant [40 x i8] c"init sklearn.cluster._k_means_minibatch\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"%d.%d\00", align 1
@.str.20 = private unnamed_addr constant [76 x i8] c"compiletime version %s of module '%.100s' does not match runtime version %s\00", align 1
@.str.21 = private unnamed_addr constant [39 x i8] c"sklearn/cluster/_k_means_minibatch.pyx\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"stringsource\00", align 1
@__pyx_CyFunctionType_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, ptr null }, i64 0 }, ptr @.str.26, i64 184, i64 0, ptr @__Pyx_CyFunction_dealloc, i64 0, ptr null, ptr null, ptr null, ptr @__Pyx_CyFunction_repr, ptr null, ptr null, ptr null, ptr null, ptr @__Pyx_CyFunction_CallAsMethod, ptr null, ptr null, ptr null, ptr null, i64 16384, ptr null, ptr @__Pyx_CyFunction_traverse, ptr @__Pyx_CyFunction_clear, ptr null, i64 40, ptr null, ptr null, ptr @__pyx_CyFunction_methods, ptr @__pyx_CyFunction_members, ptr @__pyx_CyFunction_getsets, ptr null, ptr null, ptr @__Pyx_CyFunction_descr_get, ptr null, i64 56, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null }, align 8
@__pyx_CyFunctionType = internal global ptr null, align 8
@.str.23 = private unnamed_addr constant [16 x i8] c"_cython_0_29_36\00", align 1
@PyExc_TypeError = external global ptr, align 8
@.str.24 = private unnamed_addr constant [47 x i8] c"Shared Cython type %.200s is not a type object\00", align 1
@.str.25 = private unnamed_addr constant [62 x i8] c"Shared Cython type %.200s has the wrong size, try recompiling\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"cython_function_or_method\00", align 1
@__pyx_CyFunction_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { ptr @.str.33, ptr @__Pyx_CyFunction_reduce, i32 1, ptr null }, %struct.PyMethodDef zeroinitializer], align 16
@__pyx_CyFunction_members = internal global [2 x %struct.PyMemberDef] [%struct.PyMemberDef { ptr @.str.34, i32 6, i64 32, i32 4, ptr null }, %struct.PyMemberDef zeroinitializer], align 16
@__pyx_CyFunction_getsets = internal global [19 x %struct.PyGetSetDef] [%struct.PyGetSetDef { ptr @.str.35, ptr @__Pyx_CyFunction_get_doc, ptr @__Pyx_CyFunction_set_doc, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.36, ptr @__Pyx_CyFunction_get_doc, ptr @__Pyx_CyFunction_set_doc, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.37, ptr @__Pyx_CyFunction_get_name, ptr @__Pyx_CyFunction_set_name, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.38, ptr @__Pyx_CyFunction_get_name, ptr @__Pyx_CyFunction_set_name, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.39, ptr @__Pyx_CyFunction_get_qualname, ptr @__Pyx_CyFunction_set_qualname, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.40, ptr @__Pyx_CyFunction_get_self, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.41, ptr @__Pyx_CyFunction_get_dict, ptr @__Pyx_CyFunction_set_dict, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.42, ptr @__Pyx_CyFunction_get_dict, ptr @__Pyx_CyFunction_set_dict, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.43, ptr @__Pyx_CyFunction_get_globals, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.44, ptr @__Pyx_CyFunction_get_globals, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.45, ptr @__Pyx_CyFunction_get_closure, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.46, ptr @__Pyx_CyFunction_get_closure, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.47, ptr @__Pyx_CyFunction_get_code, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.48, ptr @__Pyx_CyFunction_get_code, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.49, ptr @__Pyx_CyFunction_get_defaults, ptr @__Pyx_CyFunction_set_defaults, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.50, ptr @__Pyx_CyFunction_get_defaults, ptr @__Pyx_CyFunction_set_defaults, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.51, ptr @__Pyx_CyFunction_get_kwdefaults, ptr @__Pyx_CyFunction_set_kwdefaults, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.52, ptr @__Pyx_CyFunction_get_annotations, ptr @__Pyx_CyFunction_set_annotations, ptr null, ptr null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.27 = private unnamed_addr constant [22 x i8] c"<cyfunction %U at %p>\00", align 1
@.str.28 = private unnamed_addr constant [42 x i8] c"unbound method %.200S() needs an argument\00", align 1
@.str.29 = private unnamed_addr constant [40 x i8] c"%.200s() takes no arguments (%zd given)\00", align 1
@.str.30 = private unnamed_addr constant [48 x i8] c"%.200s() takes exactly one argument (%zd given)\00", align 1
@PyExc_SystemError = external global ptr, align 8
@.str.31 = private unnamed_addr constant [78 x i8] c"Bad call flags in __Pyx_CyFunction_Call. METH_OLDARGS is no longer supported!\00", align 1
@.str.32 = private unnamed_addr constant [36 x i8] c"%.200s() takes no keyword arguments\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"__reduce__\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"__module__\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"func_doc\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"__doc__\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"func_name\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"__name__\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"__qualname__\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"__self__\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"func_dict\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"__dict__\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"func_globals\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"__globals__\00", align 1
@.str.45 = private unnamed_addr constant [13 x i8] c"func_closure\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"__closure__\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"func_code\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"__code__\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"func_defaults\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"__defaults__\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"__kwdefaults__\00", align 1
@.str.52 = private unnamed_addr constant [16 x i8] c"__annotations__\00", align 1
@.str.53 = private unnamed_addr constant [40 x i8] c"__name__ must be set to a string object\00", align 1
@.str.54 = private unnamed_addr constant [44 x i8] c"__qualname__ must be set to a string object\00", align 1
@.str.55 = private unnamed_addr constant [41 x i8] c"function's dictionary may not be deleted\00", align 1
@.str.56 = private unnamed_addr constant [44 x i8] c"setting function's dictionary to a non-dict\00", align 1
@.str.57 = private unnamed_addr constant [43 x i8] c"__defaults__ must be set to a tuple object\00", align 1
@.str.58 = private unnamed_addr constant [44 x i8] c"__kwdefaults__ must be set to a dict object\00", align 1
@.str.59 = private unnamed_addr constant [45 x i8] c"__annotations__ must be set to a dict object\00", align 1
@__pyx_FusedFunctionType_type = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, ptr null }, i64 0 }, ptr @.str.60, i64 208, i64 0, ptr @__pyx_FusedFunction_dealloc, i64 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @__pyx_FusedFunction_mapping_methods, ptr null, ptr @__pyx_FusedFunction_call, ptr null, ptr null, ptr null, ptr null, i64 17408, ptr null, ptr @__pyx_FusedFunction_traverse, ptr @__pyx_FusedFunction_clear, ptr null, i64 0, ptr null, ptr null, ptr null, ptr @__pyx_FusedFunction_members, ptr @__pyx_CyFunction_getsets, ptr @__pyx_CyFunctionType_type, ptr null, ptr @__pyx_FusedFunction_descr_get, ptr null, i64 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null }, align 8
@__pyx_FusedFunctionType = internal global ptr null, align 8
@.str.60 = private unnamed_addr constant [22 x i8] c"fused_cython_function\00", align 1
@__pyx_FusedFunction_mapping_methods = internal global %struct.PyMappingMethods { ptr null, ptr @__pyx_FusedFunction_getitem, ptr null }, align 8
@__pyx_FusedFunction_members = internal global [2 x %struct.PyMemberDef] [%struct.PyMemberDef { ptr @.str.65, i32 6, i64 184, i32 1, ptr null }, %struct.PyMemberDef zeroinitializer], align 16
@.str.61 = private unnamed_addr constant [22 x i8] c"Function is not fused\00", align 1
@.str.62 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.63 = private unnamed_addr constant [37 x i8] c"Need at least one argument, 0 given.\00", align 1
@.str.64 = private unnamed_addr constant [53 x i8] c"First argument should be of type %.200s, got %.200s.\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"__signatures__\00", align 1
@__pyx_filename = internal global ptr null, align 8
@__pyx_lineno = internal global i32 0, align 4
@__pyx_clineno = internal global i32 0, align 4
@__pyx_string_tab = internal global [124 x %struct.__Pyx_StringTabEntry] [%struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_, ptr @__pyx_k_, i64 3, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_ASCII, ptr @__pyx_k_ASCII, i64 6, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Buffer_view_does_not_expose_stri, ptr @__pyx_k_Buffer_view_does_not_expose_stri, i64 36, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Can_only_create_a_buffer_that_is, ptr @__pyx_k_Can_only_create_a_buffer_that_is, i64 55, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Cannot_assign_to_read_only_memor, ptr @__pyx_k_Cannot_assign_to_read_only_memor, i64 38, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Cannot_create_writable_memory_vi, ptr @__pyx_k_Cannot_create_writable_memory_vi, i64 61, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Cannot_index_with_type_s, ptr @__pyx_k_Cannot_index_with_type_s, i64 28, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_Ellipsis, ptr @__pyx_k_Ellipsis, i64 9, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Empty_shape_tuple_for_cython_arr, ptr @__pyx_k_Empty_shape_tuple_for_cython_arr, i64 35, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Expected_at_least_d_argument_s_g, ptr @__pyx_k_Expected_at_least_d_argument_s_g, i64 40, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Function_call_with_ambiguous_arg, ptr @__pyx_k_Function_call_with_ambiguous_arg, i64 44, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, ptr @__pyx_k_Incompatible_checksums_0x_x_vs_0, i64 76, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_IndexError, ptr @__pyx_k_IndexError, i64 11, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Indirect_dimensions_not_supporte, ptr @__pyx_k_Indirect_dimensions_not_supporte, i64 34, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Invalid_mode_expected_c_or_fortr, ptr @__pyx_k_Invalid_mode_expected_c_or_fortr, i64 48, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Invalid_shape_in_axis_d_d, ptr @__pyx_k_Invalid_shape_in_axis_d_d, i64 30, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_MemoryError, ptr @__pyx_k_MemoryError, i64 12, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_MemoryView_of_r_at_0x_x, ptr @__pyx_k_MemoryView_of_r_at_0x_x, i64 27, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_MemoryView_of_r_object, ptr @__pyx_k_MemoryView_of_r_object, i64 26, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_No_matching_signature_found, ptr @__pyx_k_No_matching_signature_found, i64 28, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_b_O, ptr @__pyx_k_O, i64 2, ptr null, i8 0, i8 0, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Out_of_bounds_on_buffer_access_a, ptr @__pyx_k_Out_of_bounds_on_buffer_access_a, i64 41, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_PickleError, ptr @__pyx_k_PickleError, i64 12, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_TypeError, ptr @__pyx_k_TypeError, i64 10, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Unable_to_convert_item_to_object, ptr @__pyx_k_Unable_to_convert_item_to_object, i64 33, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_ValueError, ptr @__pyx_k_ValueError, i64 11, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_View_MemoryView, ptr @__pyx_k_View_MemoryView, i64 16, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_X, ptr @__pyx_k_X, i64 2, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_X_data, ptr @__pyx_k_X_data, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_X_indices, ptr @__pyx_k_X_indices, i64 10, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_X_indptr, ptr @__pyx_k_X_indptr, i64 9, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s__2, ptr @__pyx_k__2, i64 2, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_allocate_buffer, ptr @__pyx_k_allocate_buffer, i64 16, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_args, ptr @__pyx_k_args, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_base, ptr @__pyx_k_base, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_c, ptr @__pyx_k_c, i64 2, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_u_c, ptr @__pyx_k_c, i64 2, ptr null, i8 1, i8 0, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_centers_new, ptr @__pyx_k_centers_new, i64 12, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_centers_old, ptr @__pyx_k_centers_old, i64 12, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_class, ptr @__pyx_k_class, i64 10, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_cline_in_traceback, ptr @__pyx_k_cline_in_traceback, i64 19, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_cluster_idx, ptr @__pyx_k_cluster_idx, i64 12, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_contiguous_and_direct, ptr @__pyx_k_contiguous_and_direct, i64 24, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_contiguous_and_indirect, ptr @__pyx_k_contiguous_and_indirect, i64 26, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_data, ptr @__pyx_k_data, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_defaults, ptr @__pyx_k_defaults, i64 9, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_dict, ptr @__pyx_k_dict, i64 9, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_double, ptr @__pyx_k_double, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_dtype, ptr @__pyx_k_dtype, i64 6, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_dtype_is_object, ptr @__pyx_k_dtype_is_object, i64 16, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_encode, ptr @__pyx_k_encode, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_enumerate, ptr @__pyx_k_enumerate, i64 10, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_error, ptr @__pyx_k_error, i64 6, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_flags, ptr @__pyx_k_flags, i64 6, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_float, ptr @__pyx_k_float, i64 6, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_format, ptr @__pyx_k_format, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_fortran, ptr @__pyx_k_fortran, i64 8, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_u_fortran, ptr @__pyx_k_fortran, i64 8, ptr null, i8 1, i8 0, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_getstate, ptr @__pyx_k_getstate, i64 13, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_got_differing_extents_in_dimensi, ptr @__pyx_k_got_differing_extents_in_dimensi, i64 54, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_id, ptr @__pyx_k_id, i64 3, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_import, ptr @__pyx_k_import, i64 11, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_indices, ptr @__pyx_k_indices, i64 8, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_indptr, ptr @__pyx_k_indptr, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_itemsize, ptr @__pyx_k_itemsize, i64 9, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_itemsize_0_for_cython_array, ptr @__pyx_k_itemsize_0_for_cython_array, i64 31, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_kind, ptr @__pyx_k_kind, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_kwargs, ptr @__pyx_k_kwargs, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_labels, ptr @__pyx_k_labels, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_main, ptr @__pyx_k_main, i64 9, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_memview, ptr @__pyx_k_memview, i64 8, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_minibatch_update_dense, ptr @__pyx_k_minibatch_update_dense, i64 24, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_minibatch_update_sparse, ptr @__pyx_k_minibatch_update_sparse, i64 25, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_mode, ptr @__pyx_k_mode, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_n_clusters, ptr @__pyx_k_n_clusters, i64 11, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_n_samples, ptr @__pyx_k_n_samples, i64 10, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_n_threads, ptr @__pyx_k_n_threads, i64 10, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_name, ptr @__pyx_k_name, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_name_2, ptr @__pyx_k_name_2, i64 9, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_ndim, ptr @__pyx_k_ndim, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_new, ptr @__pyx_k_new, i64 8, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_no_default___reduce___due_to_non, ptr @__pyx_k_no_default___reduce___due_to_non, i64 51, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_numpy, ptr @__pyx_k_numpy, i64 6, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_obj, ptr @__pyx_k_obj, i64 4, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pack, ptr @__pyx_k_pack, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pickle, ptr @__pyx_k_pickle, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_PickleError, ptr @__pyx_k_pyx_PickleError, i64 18, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_checksum, ptr @__pyx_k_pyx_checksum, i64 15, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_getbuffer, ptr @__pyx_k_pyx_getbuffer, i64 16, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_result, ptr @__pyx_k_pyx_result, i64 13, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_state, ptr @__pyx_k_pyx_state, i64 12, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_type, ptr @__pyx_k_pyx_type, i64 11, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_unpickle_Enum, ptr @__pyx_k_pyx_unpickle_Enum, i64 20, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_vtable, ptr @__pyx_k_pyx_vtable, i64 15, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_range, ptr @__pyx_k_range, i64 6, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_reduce, ptr @__pyx_k_reduce, i64 11, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_reduce_cython, ptr @__pyx_k_reduce_cython, i64 18, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_reduce_ex, ptr @__pyx_k_reduce_ex, i64 14, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_s, ptr @__pyx_k_s, i64 2, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_sample_weight, ptr @__pyx_k_sample_weight, i64 14, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_setstate, ptr @__pyx_k_setstate, i64 13, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_setstate_cython, ptr @__pyx_k_setstate_cython, i64 20, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_shape, ptr @__pyx_k_shape, i64 6, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_signatures, ptr @__pyx_k_signatures, i64 11, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_size, ptr @__pyx_k_size, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_sklearn_cluster__k_means_minibat, ptr @__pyx_k_sklearn_cluster__k_means_minibat, i64 39, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_sklearn_cluster__k_means_minibat_2, ptr @__pyx_k_sklearn_cluster__k_means_minibat_2, i64 35, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_split, ptr @__pyx_k_split, i64 6, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_start, ptr @__pyx_k_start, i64 6, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_step, ptr @__pyx_k_step, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_stop, ptr @__pyx_k_stop, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_strided_and_direct, ptr @__pyx_k_strided_and_direct, i64 21, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_strided_and_direct_or_indirect, ptr @__pyx_k_strided_and_direct_or_indirect, i64 33, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_strided_and_indirect, ptr @__pyx_k_strided_and_indirect, i64 23, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_stringsource, ptr @__pyx_k_stringsource, i64 13, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_strip, ptr @__pyx_k_strip, i64 6, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_struct, ptr @__pyx_k_struct, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_test, ptr @__pyx_k_test, i64 9, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_unable_to_allocate_array_data, ptr @__pyx_k_unable_to_allocate_array_data, i64 31, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_unable_to_allocate_shape_and_str, ptr @__pyx_k_unable_to_allocate_shape_and_str, i64 38, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_unpack, ptr @__pyx_k_unpack, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_update, ptr @__pyx_k_update, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_weight_sums, ptr @__pyx_k_weight_sums, i64 12, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry zeroinitializer], align 16
@__pyx_int_0 = internal global ptr null, align 8
@__pyx_int_1 = internal global ptr null, align 8
@__pyx_int_7 = internal global ptr null, align 8
@__pyx_int_112105877 = internal global ptr null, align 8
@__pyx_int_136983863 = internal global ptr null, align 8
@__pyx_int_184977713 = internal global ptr null, align 8
@__pyx_int_neg_1 = internal global ptr null, align 8
@__pyx_assertions_enabled_flag = internal global i32 0, align 4
@__pyx_kp_s_ = internal global ptr null, align 8
@__pyx_k_ = internal constant [3 x i8] c"()\00", align 1
@__pyx_n_s_ASCII = internal global ptr null, align 8
@__pyx_k_ASCII = internal constant [6 x i8] c"ASCII\00", align 1
@__pyx_kp_s_Buffer_view_does_not_expose_stri = internal global ptr null, align 8
@__pyx_k_Buffer_view_does_not_expose_stri = internal constant [36 x i8] c"Buffer view does not expose strides\00", align 16
@__pyx_kp_s_Can_only_create_a_buffer_that_is = internal global ptr null, align 8
@__pyx_k_Can_only_create_a_buffer_that_is = internal constant [55 x i8] c"Can only create a buffer that is contiguous in memory.\00", align 16
@__pyx_kp_s_Cannot_assign_to_read_only_memor = internal global ptr null, align 8
@__pyx_k_Cannot_assign_to_read_only_memor = internal constant [38 x i8] c"Cannot assign to read-only memoryview\00", align 16
@__pyx_kp_s_Cannot_create_writable_memory_vi = internal global ptr null, align 8
@__pyx_k_Cannot_create_writable_memory_vi = internal constant [61 x i8] c"Cannot create writable memory view from read-only memoryview\00", align 16
@__pyx_kp_s_Cannot_index_with_type_s = internal global ptr null, align 8
@__pyx_k_Cannot_index_with_type_s = internal constant [28 x i8] c"Cannot index with type '%s'\00", align 16
@__pyx_n_s_Ellipsis = internal global ptr null, align 8
@__pyx_k_Ellipsis = internal constant [9 x i8] c"Ellipsis\00", align 1
@__pyx_kp_s_Empty_shape_tuple_for_cython_arr = internal global ptr null, align 8
@__pyx_k_Empty_shape_tuple_for_cython_arr = internal constant [35 x i8] c"Empty shape tuple for cython.array\00", align 16
@__pyx_kp_s_Expected_at_least_d_argument_s_g = internal global ptr null, align 8
@__pyx_k_Expected_at_least_d_argument_s_g = internal constant [40 x i8] c"Expected at least %d argument%s, got %d\00", align 16
@__pyx_kp_s_Function_call_with_ambiguous_arg = internal global ptr null, align 8
@__pyx_k_Function_call_with_ambiguous_arg = internal constant [44 x i8] c"Function call with ambiguous argument types\00", align 16
@__pyx_kp_s_Incompatible_checksums_0x_x_vs_0 = internal global ptr null, align 8
@__pyx_k_Incompatible_checksums_0x_x_vs_0 = internal constant [76 x i8] c"Incompatible checksums (0x%x vs (0xb068931, 0x82a3537, 0x6ae9995) = (name))\00", align 16
@__pyx_n_s_IndexError = internal global ptr null, align 8
@__pyx_k_IndexError = internal constant [11 x i8] c"IndexError\00", align 1
@__pyx_kp_s_Indirect_dimensions_not_supporte = internal global ptr null, align 8
@__pyx_k_Indirect_dimensions_not_supporte = internal constant [34 x i8] c"Indirect dimensions not supported\00", align 16
@__pyx_kp_s_Invalid_mode_expected_c_or_fortr = internal global ptr null, align 8
@__pyx_k_Invalid_mode_expected_c_or_fortr = internal constant [48 x i8] c"Invalid mode, expected 'c' or 'fortran', got %s\00", align 16
@__pyx_kp_s_Invalid_shape_in_axis_d_d = internal global ptr null, align 8
@__pyx_k_Invalid_shape_in_axis_d_d = internal constant [30 x i8] c"Invalid shape in axis %d: %d.\00", align 16
@__pyx_n_s_MemoryError = internal global ptr null, align 8
@__pyx_k_MemoryError = internal constant [12 x i8] c"MemoryError\00", align 1
@__pyx_kp_s_MemoryView_of_r_at_0x_x = internal global ptr null, align 8
@__pyx_k_MemoryView_of_r_at_0x_x = internal constant [27 x i8] c"<MemoryView of %r at 0x%x>\00", align 16
@__pyx_kp_s_MemoryView_of_r_object = internal global ptr null, align 8
@__pyx_k_MemoryView_of_r_object = internal constant [26 x i8] c"<MemoryView of %r object>\00", align 16
@__pyx_kp_s_No_matching_signature_found = internal global ptr null, align 8
@__pyx_k_No_matching_signature_found = internal constant [28 x i8] c"No matching signature found\00", align 16
@__pyx_n_b_O = internal global ptr null, align 8
@__pyx_k_O = internal constant [2 x i8] c"O\00", align 1
@__pyx_kp_s_Out_of_bounds_on_buffer_access_a = internal global ptr null, align 8
@__pyx_k_Out_of_bounds_on_buffer_access_a = internal constant [41 x i8] c"Out of bounds on buffer access (axis %d)\00", align 16
@__pyx_n_s_PickleError = internal global ptr null, align 8
@__pyx_k_PickleError = internal constant [12 x i8] c"PickleError\00", align 1
@__pyx_n_s_TypeError = internal global ptr null, align 8
@__pyx_k_TypeError = internal constant [10 x i8] c"TypeError\00", align 1
@__pyx_kp_s_Unable_to_convert_item_to_object = internal global ptr null, align 8
@__pyx_k_Unable_to_convert_item_to_object = internal constant [33 x i8] c"Unable to convert item to object\00", align 16
@__pyx_n_s_ValueError = internal global ptr null, align 8
@__pyx_k_ValueError = internal constant [11 x i8] c"ValueError\00", align 1
@__pyx_k_View_MemoryView = internal constant [16 x i8] c"View.MemoryView\00", align 16
@__pyx_n_s_X = internal global ptr null, align 8
@__pyx_k_X = internal constant [2 x i8] c"X\00", align 1
@__pyx_n_s_X_data = internal global ptr null, align 8
@__pyx_k_X_data = internal constant [7 x i8] c"X_data\00", align 1
@__pyx_n_s_X_indices = internal global ptr null, align 8
@__pyx_k_X_indices = internal constant [10 x i8] c"X_indices\00", align 1
@__pyx_n_s_X_indptr = internal global ptr null, align 8
@__pyx_k_X_indptr = internal constant [9 x i8] c"X_indptr\00", align 1
@__pyx_kp_s__2 = internal global ptr null, align 8
@__pyx_k__2 = internal constant [2 x i8] c"|\00", align 1
@__pyx_n_s_allocate_buffer = internal global ptr null, align 8
@__pyx_k_allocate_buffer = internal constant [16 x i8] c"allocate_buffer\00", align 16
@__pyx_n_s_args = internal global ptr null, align 8
@__pyx_k_args = internal constant [5 x i8] c"args\00", align 1
@__pyx_n_s_base = internal global ptr null, align 8
@__pyx_k_base = internal constant [5 x i8] c"base\00", align 1
@__pyx_n_s_c = internal global ptr null, align 8
@__pyx_k_c = internal constant [2 x i8] c"c\00", align 1
@__pyx_n_u_c = internal global ptr null, align 8
@__pyx_n_s_centers_new = internal global ptr null, align 8
@__pyx_k_centers_new = internal constant [12 x i8] c"centers_new\00", align 1
@__pyx_n_s_centers_old = internal global ptr null, align 8
@__pyx_k_centers_old = internal constant [12 x i8] c"centers_old\00", align 1
@__pyx_n_s_class = internal global ptr null, align 8
@__pyx_k_class = internal constant [10 x i8] c"__class__\00", align 1
@__pyx_n_s_cline_in_traceback = internal global ptr null, align 8
@__pyx_k_cline_in_traceback = internal constant [19 x i8] c"cline_in_traceback\00", align 16
@__pyx_n_s_cluster_idx = internal global ptr null, align 8
@__pyx_k_cluster_idx = internal constant [12 x i8] c"cluster_idx\00", align 1
@__pyx_kp_s_contiguous_and_direct = internal global ptr null, align 8
@__pyx_k_contiguous_and_direct = internal constant [24 x i8] c"<contiguous and direct>\00", align 16
@__pyx_kp_s_contiguous_and_indirect = internal global ptr null, align 8
@__pyx_k_contiguous_and_indirect = internal constant [26 x i8] c"<contiguous and indirect>\00", align 16
@__pyx_n_s_data = internal global ptr null, align 8
@__pyx_k_data = internal constant [5 x i8] c"data\00", align 1
@__pyx_n_s_defaults = internal global ptr null, align 8
@__pyx_k_defaults = internal constant [9 x i8] c"defaults\00", align 1
@__pyx_n_s_dict = internal global ptr null, align 8
@__pyx_k_dict = internal constant [9 x i8] c"__dict__\00", align 1
@__pyx_k_double = internal constant [7 x i8] c"double\00", align 1
@__pyx_n_s_dtype = internal global ptr null, align 8
@__pyx_k_dtype = internal constant [6 x i8] c"dtype\00", align 1
@__pyx_n_s_dtype_is_object = internal global ptr null, align 8
@__pyx_k_dtype_is_object = internal constant [16 x i8] c"dtype_is_object\00", align 16
@__pyx_n_s_encode = internal global ptr null, align 8
@__pyx_k_encode = internal constant [7 x i8] c"encode\00", align 1
@__pyx_n_s_enumerate = internal global ptr null, align 8
@__pyx_k_enumerate = internal constant [10 x i8] c"enumerate\00", align 1
@__pyx_n_s_error = internal global ptr null, align 8
@__pyx_k_error = internal constant [6 x i8] c"error\00", align 1
@__pyx_n_s_flags = internal global ptr null, align 8
@__pyx_k_flags = internal constant [6 x i8] c"flags\00", align 1
@__pyx_k_float = internal constant [6 x i8] c"float\00", align 1
@__pyx_n_s_format = internal global ptr null, align 8
@__pyx_k_format = internal constant [7 x i8] c"format\00", align 1
@__pyx_n_s_fortran = internal global ptr null, align 8
@__pyx_k_fortran = internal constant [8 x i8] c"fortran\00", align 1
@__pyx_n_u_fortran = internal global ptr null, align 8
@__pyx_n_s_getstate = internal global ptr null, align 8
@__pyx_k_getstate = internal constant [13 x i8] c"__getstate__\00", align 1
@__pyx_kp_s_got_differing_extents_in_dimensi = internal global ptr null, align 8
@__pyx_k_got_differing_extents_in_dimensi = internal constant [54 x i8] c"got differing extents in dimension %d (got %d and %d)\00", align 16
@__pyx_n_s_id = internal global ptr null, align 8
@__pyx_k_id = internal constant [3 x i8] c"id\00", align 1
@__pyx_n_s_import = internal global ptr null, align 8
@__pyx_k_import = internal constant [11 x i8] c"__import__\00", align 1
@__pyx_n_s_indices = internal global ptr null, align 8
@__pyx_k_indices = internal constant [8 x i8] c"indices\00", align 1
@__pyx_n_s_indptr = internal global ptr null, align 8
@__pyx_k_indptr = internal constant [7 x i8] c"indptr\00", align 1
@__pyx_n_s_itemsize = internal global ptr null, align 8
@__pyx_k_itemsize = internal constant [9 x i8] c"itemsize\00", align 1
@__pyx_kp_s_itemsize_0_for_cython_array = internal global ptr null, align 8
@__pyx_k_itemsize_0_for_cython_array = internal constant [31 x i8] c"itemsize <= 0 for cython.array\00", align 16
@__pyx_n_s_kind = internal global ptr null, align 8
@__pyx_k_kind = internal constant [5 x i8] c"kind\00", align 1
@__pyx_n_s_kwargs = internal global ptr null, align 8
@__pyx_k_kwargs = internal constant [7 x i8] c"kwargs\00", align 1
@__pyx_n_s_labels = internal global ptr null, align 8
@__pyx_k_labels = internal constant [7 x i8] c"labels\00", align 1
@__pyx_k_main = internal constant [9 x i8] c"__main__\00", align 1
@__pyx_n_s_memview = internal global ptr null, align 8
@__pyx_k_memview = internal constant [8 x i8] c"memview\00", align 1
@__pyx_k_minibatch_update_dense = internal constant [24 x i8] c"_minibatch_update_dense\00", align 16
@__pyx_k_minibatch_update_sparse = internal constant [25 x i8] c"_minibatch_update_sparse\00", align 16
@__pyx_n_s_mode = internal global ptr null, align 8
@__pyx_k_mode = internal constant [5 x i8] c"mode\00", align 1
@__pyx_n_s_n_clusters = internal global ptr null, align 8
@__pyx_k_n_clusters = internal constant [11 x i8] c"n_clusters\00", align 1
@__pyx_n_s_n_samples = internal global ptr null, align 8
@__pyx_k_n_samples = internal constant [10 x i8] c"n_samples\00", align 1
@__pyx_n_s_n_threads = internal global ptr null, align 8
@__pyx_k_n_threads = internal constant [10 x i8] c"n_threads\00", align 1
@__pyx_n_s_name = internal global ptr null, align 8
@__pyx_k_name = internal constant [5 x i8] c"name\00", align 1
@__pyx_k_name_2 = internal constant [9 x i8] c"__name__\00", align 1
@__pyx_n_s_ndim = internal global ptr null, align 8
@__pyx_k_ndim = internal constant [5 x i8] c"ndim\00", align 1
@__pyx_n_s_new = internal global ptr null, align 8
@__pyx_k_new = internal constant [8 x i8] c"__new__\00", align 1
@__pyx_kp_s_no_default___reduce___due_to_non = internal global ptr null, align 8
@__pyx_k_no_default___reduce___due_to_non = internal constant [51 x i8] c"no default __reduce__ due to non-trivial __cinit__\00", align 16
@__pyx_n_s_numpy = internal global ptr null, align 8
@__pyx_k_numpy = internal constant [6 x i8] c"numpy\00", align 1
@__pyx_n_s_obj = internal global ptr null, align 8
@__pyx_k_obj = internal constant [4 x i8] c"obj\00", align 1
@__pyx_n_s_pack = internal global ptr null, align 8
@__pyx_k_pack = internal constant [5 x i8] c"pack\00", align 1
@__pyx_n_s_pickle = internal global ptr null, align 8
@__pyx_k_pickle = internal constant [7 x i8] c"pickle\00", align 1
@__pyx_n_s_pyx_PickleError = internal global ptr null, align 8
@__pyx_k_pyx_PickleError = internal constant [18 x i8] c"__pyx_PickleError\00", align 16
@__pyx_n_s_pyx_checksum = internal global ptr null, align 8
@__pyx_k_pyx_checksum = internal constant [15 x i8] c"__pyx_checksum\00", align 1
@__pyx_k_pyx_getbuffer = internal constant [16 x i8] c"__pyx_getbuffer\00", align 16
@__pyx_n_s_pyx_result = internal global ptr null, align 8
@__pyx_k_pyx_result = internal constant [13 x i8] c"__pyx_result\00", align 1
@__pyx_n_s_pyx_state = internal global ptr null, align 8
@__pyx_k_pyx_state = internal constant [12 x i8] c"__pyx_state\00", align 1
@__pyx_n_s_pyx_type = internal global ptr null, align 8
@__pyx_k_pyx_type = internal constant [11 x i8] c"__pyx_type\00", align 1
@__pyx_k_pyx_unpickle_Enum = internal constant [20 x i8] c"__pyx_unpickle_Enum\00", align 16
@__pyx_n_s_pyx_vtable = internal global ptr null, align 8
@__pyx_k_pyx_vtable = internal constant [15 x i8] c"__pyx_vtable__\00", align 1
@__pyx_n_s_range = internal global ptr null, align 8
@__pyx_k_range = internal constant [6 x i8] c"range\00", align 1
@__pyx_n_s_reduce = internal global ptr null, align 8
@__pyx_k_reduce = internal constant [11 x i8] c"__reduce__\00", align 1
@__pyx_n_s_reduce_cython = internal global ptr null, align 8
@__pyx_k_reduce_cython = internal constant [18 x i8] c"__reduce_cython__\00", align 16
@__pyx_n_s_reduce_ex = internal global ptr null, align 8
@__pyx_k_reduce_ex = internal constant [14 x i8] c"__reduce_ex__\00", align 1
@__pyx_n_s_s = internal global ptr null, align 8
@__pyx_k_s = internal constant [2 x i8] c"s\00", align 1
@__pyx_n_s_sample_weight = internal global ptr null, align 8
@__pyx_k_sample_weight = internal constant [14 x i8] c"sample_weight\00", align 1
@__pyx_n_s_setstate = internal global ptr null, align 8
@__pyx_k_setstate = internal constant [13 x i8] c"__setstate__\00", align 1
@__pyx_n_s_setstate_cython = internal global ptr null, align 8
@__pyx_k_setstate_cython = internal constant [20 x i8] c"__setstate_cython__\00", align 16
@__pyx_n_s_shape = internal global ptr null, align 8
@__pyx_k_shape = internal constant [6 x i8] c"shape\00", align 1
@__pyx_n_s_signatures = internal global ptr null, align 8
@__pyx_k_signatures = internal constant [11 x i8] c"signatures\00", align 1
@__pyx_n_s_size = internal global ptr null, align 8
@__pyx_k_size = internal constant [5 x i8] c"size\00", align 1
@__pyx_kp_s_sklearn_cluster__k_means_minibat = internal global ptr null, align 8
@__pyx_k_sklearn_cluster__k_means_minibat = internal constant [39 x i8] c"sklearn/cluster/_k_means_minibatch.pyx\00", align 16
@__pyx_k_sklearn_cluster__k_means_minibat_2 = internal constant [35 x i8] c"sklearn.cluster._k_means_minibatch\00", align 16
@__pyx_n_s_split = internal global ptr null, align 8
@__pyx_k_split = internal constant [6 x i8] c"split\00", align 1
@__pyx_n_s_start = internal global ptr null, align 8
@__pyx_k_start = internal constant [6 x i8] c"start\00", align 1
@__pyx_n_s_step = internal global ptr null, align 8
@__pyx_k_step = internal constant [5 x i8] c"step\00", align 1
@__pyx_n_s_stop = internal global ptr null, align 8
@__pyx_k_stop = internal constant [5 x i8] c"stop\00", align 1
@__pyx_kp_s_strided_and_direct = internal global ptr null, align 8
@__pyx_k_strided_and_direct = internal constant [21 x i8] c"<strided and direct>\00", align 16
@__pyx_kp_s_strided_and_direct_or_indirect = internal global ptr null, align 8
@__pyx_k_strided_and_direct_or_indirect = internal constant [33 x i8] c"<strided and direct or indirect>\00", align 16
@__pyx_kp_s_strided_and_indirect = internal global ptr null, align 8
@__pyx_k_strided_and_indirect = internal constant [23 x i8] c"<strided and indirect>\00", align 16
@__pyx_kp_s_stringsource = internal global ptr null, align 8
@__pyx_k_stringsource = internal constant [13 x i8] c"stringsource\00", align 1
@__pyx_n_s_strip = internal global ptr null, align 8
@__pyx_k_strip = internal constant [6 x i8] c"strip\00", align 1
@__pyx_n_s_struct = internal global ptr null, align 8
@__pyx_k_struct = internal constant [7 x i8] c"struct\00", align 1
@__pyx_k_test = internal constant [9 x i8] c"__test__\00", align 1
@__pyx_kp_s_unable_to_allocate_array_data = internal global ptr null, align 8
@__pyx_k_unable_to_allocate_array_data = internal constant [31 x i8] c"unable to allocate array data.\00", align 16
@__pyx_kp_s_unable_to_allocate_shape_and_str = internal global ptr null, align 8
@__pyx_k_unable_to_allocate_shape_and_str = internal constant [38 x i8] c"unable to allocate shape and strides.\00", align 16
@__pyx_n_s_unpack = internal global ptr null, align 8
@__pyx_k_unpack = internal constant [7 x i8] c"unpack\00", align 1
@__pyx_n_s_update = internal global ptr null, align 8
@__pyx_k_update = internal constant [7 x i8] c"update\00", align 1
@__pyx_n_s_weight_sums = internal global ptr null, align 8
@__pyx_k_weight_sums = internal constant [12 x i8] c"weight_sums\00", align 1
@__pyx_builtin_TypeError = internal global ptr null, align 8
@__pyx_builtin_range = internal global ptr null, align 8
@__pyx_builtin_ValueError = internal global ptr null, align 8
@__pyx_builtin_MemoryError = internal global ptr null, align 8
@__pyx_builtin_enumerate = internal global ptr null, align 8
@__pyx_builtin_Ellipsis = internal global ptr null, align 8
@__pyx_builtin_id = internal global ptr null, align 8
@__pyx_builtin_IndexError = internal global ptr null, align 8
@PyExc_NameError = external global ptr, align 8
@.str.66 = private unnamed_addr constant [25 x i8] c"name '%U' is not defined\00", align 1
@__pyx_tuple__3 = internal global ptr null, align 8
@__pyx_tuple__4 = internal global ptr null, align 8
@__pyx_tuple__5 = internal global ptr null, align 8
@__pyx_tuple__6 = internal global ptr null, align 8
@__pyx_tuple__7 = internal global ptr null, align 8
@__pyx_tuple__8 = internal global ptr null, align 8
@__pyx_tuple__9 = internal global ptr null, align 8
@__pyx_tuple__10 = internal global ptr null, align 8
@__pyx_tuple__11 = internal global ptr null, align 8
@__pyx_tuple__12 = internal global ptr null, align 8
@__pyx_tuple__13 = internal global ptr null, align 8
@__pyx_tuple__14 = internal global ptr null, align 8
@__pyx_tuple__15 = internal global ptr null, align 8
@__pyx_tuple__16 = internal global ptr null, align 8
@__pyx_tuple__17 = internal global ptr null, align 8
@__pyx_tuple__18 = internal global ptr null, align 8
@__pyx_slice__19 = internal global ptr null, align 8
@__pyx_tuple__20 = internal global ptr null, align 8
@__pyx_tuple__21 = internal global ptr null, align 8
@__pyx_tuple__22 = internal global ptr null, align 8
@__pyx_tuple__23 = internal global ptr null, align 8
@__pyx_tuple__24 = internal global ptr null, align 8
@__pyx_tuple__26 = internal global ptr null, align 8
@__pyx_tuple__33 = internal global ptr null, align 8
@__pyx_codeobj__34 = internal global ptr null, align 8
@.str.67 = private unnamed_addr constant [12 x i8] c"co_argcount\00", align 1
@.str.68 = private unnamed_addr constant [19 x i8] c"co_posonlyargcount\00", align 1
@.str.69 = private unnamed_addr constant [18 x i8] c"co_kwonlyargcount\00", align 1
@.str.70 = private unnamed_addr constant [11 x i8] c"co_nlocals\00", align 1
@.str.71 = private unnamed_addr constant [13 x i8] c"co_stacksize\00", align 1
@.str.72 = private unnamed_addr constant [9 x i8] c"co_flags\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"co_code\00", align 1
@.str.74 = private unnamed_addr constant [10 x i8] c"co_consts\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"co_names\00", align 1
@.str.76 = private unnamed_addr constant [12 x i8] c"co_varnames\00", align 1
@.str.77 = private unnamed_addr constant [12 x i8] c"co_freevars\00", align 1
@.str.78 = private unnamed_addr constant [12 x i8] c"co_cellvars\00", align 1
@.str.79 = private unnamed_addr constant [13 x i8] c"co_linetable\00", align 1
@.str.80 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@__pyx_vtable_array = internal global %struct.__pyx_vtabstruct_array zeroinitializer, align 8
@__pyx_vtabptr_array = internal global ptr null, align 8
@__pyx_type___pyx_array = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, ptr null }, i64 0 }, ptr @.str.82, i64 112, i64 0, ptr @__pyx_tp_dealloc_array, i64 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @__pyx_tp_as_sequence_array, ptr @__pyx_tp_as_mapping_array, ptr null, ptr null, ptr null, ptr @__pyx_tp_getattro_array, ptr null, ptr @__pyx_tp_as_buffer_array, i64 263168, ptr null, ptr null, ptr null, ptr null, i64 0, ptr null, ptr null, ptr @__pyx_methods_array, ptr null, ptr @__pyx_getsets_array, ptr null, ptr null, ptr null, ptr null, i64 0, ptr null, ptr null, ptr @__pyx_tp_new_array, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null }, align 8
@__pyx_type___pyx_MemviewEnum = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, ptr null }, i64 0 }, ptr @.str.125, i64 24, i64 0, ptr @__pyx_tp_dealloc_Enum, i64 0, ptr null, ptr null, ptr null, ptr @__pyx_MemviewEnum___repr__, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i64 279552, ptr null, ptr @__pyx_tp_traverse_Enum, ptr @__pyx_tp_clear_Enum, ptr null, i64 0, ptr null, ptr null, ptr @__pyx_methods_Enum, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i64 0, ptr @__pyx_MemviewEnum___init__, ptr null, ptr @__pyx_tp_new_Enum, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null }, align 8
@__pyx_vtable_memoryview = internal global %struct.__pyx_vtabstruct_memoryview zeroinitializer, align 8
@__pyx_vtabptr_memoryview = internal global ptr null, align 8
@__pyx_type___pyx_memoryview = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, ptr null }, i64 0 }, ptr @.str.163, i64 168, i64 0, ptr @__pyx_tp_dealloc_memoryview, i64 0, ptr null, ptr null, ptr null, ptr @__pyx_memoryview___repr__, ptr null, ptr @__pyx_tp_as_sequence_memoryview, ptr @__pyx_tp_as_mapping_memoryview, ptr null, ptr null, ptr @__pyx_memoryview___str__, ptr null, ptr null, ptr @__pyx_tp_as_buffer_memoryview, i64 279552, ptr null, ptr @__pyx_tp_traverse_memoryview, ptr @__pyx_tp_clear_memoryview, ptr null, i64 0, ptr null, ptr null, ptr @__pyx_methods_memoryview, ptr null, ptr @__pyx_getsets_memoryview, ptr null, ptr null, ptr null, ptr null, i64 0, ptr null, ptr null, ptr @__pyx_tp_new_memoryview, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null }, align 8
@__pyx_vtable__memoryviewslice = internal global %struct.__pyx_vtabstruct__memoryviewslice zeroinitializer, align 8
@__pyx_vtabptr__memoryviewslice = internal global ptr null, align 8
@__pyx_type___pyx_memoryviewslice = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, ptr null }, i64 0 }, ptr @.str.218, i64 400, i64 0, ptr @__pyx_tp_dealloc__memoryviewslice, i64 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i64 279552, ptr @.str.219, ptr @__pyx_tp_traverse__memoryviewslice, ptr @__pyx_tp_clear__memoryviewslice, ptr null, i64 0, ptr null, ptr null, ptr @__pyx_methods__memoryviewslice, ptr null, ptr @__pyx_getsets__memoryviewslice, ptr null, ptr null, ptr null, ptr null, i64 0, ptr null, ptr null, ptr @__pyx_tp_new__memoryviewslice, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null }, align 8
@.str.81 = private unnamed_addr constant [34 x i8] c"View.MemoryView.array.get_memview\00", align 1
@_Py_TrueStruct = external global %struct._longobject, align 8
@_Py_FalseStruct = external global %struct._longobject, align 8
@.str.82 = private unnamed_addr constant [41 x i8] c"sklearn.cluster._k_means_minibatch.array\00", align 1
@__pyx_tp_as_sequence_array = internal global %struct.PySequenceMethods { ptr @__pyx_array___len__, ptr null, ptr null, ptr @__pyx_sq_item_array, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 8
@__pyx_tp_as_mapping_array = internal global %struct.PyMappingMethods { ptr @__pyx_array___len__, ptr @__pyx_array___getitem__, ptr @__pyx_mp_ass_subscript_array }, align 8
@__pyx_tp_as_buffer_array = internal global %struct.PyBufferProcs { ptr @__pyx_array_getbuffer, ptr null }, align 8
@__pyx_methods_array = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { ptr @.str.89, ptr @__pyx_array___getattr__, i32 72, ptr null }, %struct.PyMethodDef { ptr @.str.90, ptr @__pyx_pw___pyx_array_1__reduce_cython__, i32 4, ptr null }, %struct.PyMethodDef { ptr @.str.91, ptr @__pyx_pw___pyx_array_3__setstate_cython__, i32 8, ptr null }, %struct.PyMethodDef zeroinitializer], align 16
@__pyx_getsets_array = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { ptr @.str.99, ptr @__pyx_getprop___pyx_array_memview, ptr null, ptr null, ptr null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.83 = private unnamed_addr constant [34 x i8] c"View.MemoryView.array.__getitem__\00", align 1
@.str.84 = private unnamed_addr constant [37 x i8] c"'%.200s' object is not subscriptable\00", align 1
@PyExc_OverflowError = external global ptr, align 8
@PyExc_IndexError = external global ptr, align 8
@.str.85 = private unnamed_addr constant [48 x i8] c"cannot fit '%.200s' into an index-sized integer\00", align 1
@PyLong_Type = external global %struct._typeobject, align 8
@PyList_Type = external global %struct._typeobject, align 8
@PyTuple_Type = external global %struct._typeobject, align 8
@PyExc_NotImplementedError = external global ptr, align 8
@.str.86 = private unnamed_addr constant [43 x i8] c"Subscript deletion not supported by %.200s\00", align 1
@.str.87 = private unnamed_addr constant [34 x i8] c"View.MemoryView.array.__setitem__\00", align 1
@.str.88 = private unnamed_addr constant [34 x i8] c"View.MemoryView.array.__getattr__\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"__getattr__\00", align 1
@.str.90 = private unnamed_addr constant [18 x i8] c"__reduce_cython__\00", align 1
@.str.91 = private unnamed_addr constant [20 x i8] c"__setstate_cython__\00", align 1
@.str.92 = private unnamed_addr constant [40 x i8] c"View.MemoryView.array.__reduce_cython__\00", align 1
@PyTraceBack_Type = external global %struct._typeobject, align 8
@.str.93 = private unnamed_addr constant [41 x i8] c"raise: arg 3 must be a traceback or None\00", align 1
@.str.94 = private unnamed_addr constant [49 x i8] c"instance exception may not have a separate value\00", align 1
@.str.95 = private unnamed_addr constant [69 x i8] c"calling %R should have returned an instance of BaseException, not %R\00", align 1
@.str.96 = private unnamed_addr constant [59 x i8] c"raise: exception class must be a subclass of BaseException\00", align 1
@.str.97 = private unnamed_addr constant [48 x i8] c"exception causes must derive from BaseException\00", align 1
@.str.98 = private unnamed_addr constant [42 x i8] c"View.MemoryView.array.__setstate_cython__\00", align 1
@.str.99 = private unnamed_addr constant [8 x i8] c"memview\00", align 1
@.str.100 = private unnamed_addr constant [38 x i8] c"View.MemoryView.array.memview.__get__\00", align 1
@PyBaseObject_Type = external global %struct._typeobject, align 8
@__pyx_array___cinit__.__pyx_pyargnames = internal global [6 x ptr] [ptr @__pyx_n_s_shape, ptr @__pyx_n_s_itemsize, ptr @__pyx_n_s_format, ptr @__pyx_n_s_mode, ptr @__pyx_n_s_allocate_buffer, ptr null], align 16
@.str.101 = private unnamed_addr constant [10 x i8] c"__cinit__\00", align 1
@.str.102 = private unnamed_addr constant [32 x i8] c"View.MemoryView.array.__cinit__\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"shape\00", align 1
@.str.104 = private unnamed_addr constant [35 x i8] c"Argument '%.200s' must not be None\00", align 1
@.str.105 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.106 = private unnamed_addr constant [9 x i8] c"at least\00", align 1
@.str.107 = private unnamed_addr constant [8 x i8] c"at most\00", align 1
@.str.108 = private unnamed_addr constant [8 x i8] c"exactly\00", align 1
@.str.109 = private unnamed_addr constant [60 x i8] c"%.200s() takes %.8s %zd positional argument%.1s (%zd given)\00", align 1
@.str.110 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.111 = private unnamed_addr constant [34 x i8] c"%.200s() keywords must be strings\00", align 1
@.str.112 = private unnamed_addr constant [45 x i8] c"%s() got an unexpected keyword argument '%U'\00", align 1
@.str.113 = private unnamed_addr constant [51 x i8] c"%s() got multiple values for keyword argument '%U'\00", align 1
@.str.114 = private unnamed_addr constant [20 x i8] c"Missing type object\00", align 1
@.str.115 = private unnamed_addr constant [67 x i8] c"Argument '%.200s' has incorrect type (expected %.200s, got %.200s)\00", align 1
@.str.116 = private unnamed_addr constant [39 x i8] c"object of type 'NoneType' has no len()\00", align 1
@PyMethod_Type = external global %struct._typeobject, align 8
@PyBytes_Type = external global %struct._typeobject, align 8
@.str.117 = private unnamed_addr constant [27 x i8] c"Expected %.16s, got %.200s\00", align 1
@.str.118 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.119 = private unnamed_addr constant [31 x i8] c"expected bytes, NoneType found\00", align 1
@PyUnicode_Type = external global %struct._typeobject, align 8
@PyExc_ZeroDivisionError = external global ptr, align 8
@.str.120 = private unnamed_addr constant [35 x i8] c"integer division or modulo by zero\00", align 1
@.str.121 = private unnamed_addr constant [36 x i8] c"value too large to perform division\00", align 1
@PyCFunction_Type = external global %struct._typeobject, align 8
@.str.122 = private unnamed_addr constant [31 x i8] c" while calling a Python object\00", align 1
@.str.123 = private unnamed_addr constant [43 x i8] c"NULL result without error in PyObject_Call\00", align 1
@.str.124 = private unnamed_addr constant [37 x i8] c"Unable to initialize pickling for %s\00", align 1
@.str.125 = private unnamed_addr constant [40 x i8] c"sklearn.cluster._k_means_minibatch.Enum\00", align 1
@__pyx_methods_Enum = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { ptr @.str.90, ptr @__pyx_pw___pyx_MemviewEnum_1__reduce_cython__, i32 4, ptr null }, %struct.PyMethodDef { ptr @.str.91, ptr @__pyx_pw___pyx_MemviewEnum_3__setstate_cython__, i32 8, ptr null }, %struct.PyMethodDef zeroinitializer], align 16
@__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_version = internal global i64 0, align 8
@__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_cached_value = internal global ptr null, align 8
@__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_version.126 = internal global i64 0, align 8
@__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_cached_value.127 = internal global ptr null, align 8
@.str.128 = private unnamed_addr constant [39 x i8] c"View.MemoryView.Enum.__reduce_cython__\00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c"tuple\00", align 1
@.str.130 = private unnamed_addr constant [41 x i8] c"View.MemoryView.Enum.__setstate_cython__\00", align 1
@.str.131 = private unnamed_addr constant [39 x i8] c"'NoneType' object is not subscriptable\00", align 1
@.str.132 = private unnamed_addr constant [47 x i8] c"View.MemoryView.__pyx_unpickle_Enum__set_state\00", align 1
@.str.133 = private unnamed_addr constant [41 x i8] c"hasattr(): attribute name must be string\00", align 1
@__pyx_MemviewEnum___init__.__pyx_pyargnames = internal global [2 x ptr] [ptr @__pyx_n_s_name, ptr null], align 16
@.str.134 = private unnamed_addr constant [9 x i8] c"__init__\00", align 1
@.str.135 = private unnamed_addr constant [30 x i8] c"View.MemoryView.Enum.__init__\00", align 1
@PyExc_StopIteration = external global ptr, align 8
@.str.136 = private unnamed_addr constant [44 x i8] c"View.MemoryView.memoryview.get_item_pointer\00", align 1
@.str.137 = private unnamed_addr constant [31 x i8] c"View.MemoryView.pybuffer_index\00", align 1
@.str.138 = private unnamed_addr constant [36 x i8] c"View.MemoryView.memoryview.is_slice\00", align 1
@.str.139 = private unnamed_addr constant [52 x i8] c"View.MemoryView.memoryview.setitem_slice_assignment\00", align 1
@.str.140 = private unnamed_addr constant [32 x i8] c"Cannot convert %.200s to %.200s\00", align 1
@.str.141 = private unnamed_addr constant [39 x i8] c"View.MemoryView.get_slice_from_memview\00", align 1
@.str.142 = private unnamed_addr constant [34 x i8] c"value too large to convert to int\00", align 1
@.str.143 = private unnamed_addr constant [36 x i8] c"can't convert negative value to int\00", align 1
@.str.144 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.145 = private unnamed_addr constant [23 x i8] c"an integer is required\00", align 1
@PyExc_DeprecationWarning = external global ptr, align 8
@.str.146 = private unnamed_addr constant [168 x i8] c"__int__ returned non-int (type %.200s).  The ability to return an instance of a strict subclass of int is deprecated, and may be removed in a future version of Python.\00", align 1
@.str.147 = private unnamed_addr constant [41 x i8] c"__%.4s__ returned non-%.4s (type %.200s)\00", align 1
@.str.148 = private unnamed_addr constant [27 x i8] c"Dimension %d is not direct\00", align 1
@.str.149 = private unnamed_addr constant [41 x i8] c"View.MemoryView.memoryview_copy_contents\00", align 1
@.str.150 = private unnamed_addr constant [29 x i8] c"View.MemoryView._err_extents\00", align 1
@.str.151 = private unnamed_addr constant [25 x i8] c"View.MemoryView._err_dim\00", align 1
@.str.152 = private unnamed_addr constant [39 x i8] c"c-string too long to convert to Python\00", align 1
@.str.153 = private unnamed_addr constant [34 x i8] c"View.MemoryView.copy_data_to_temp\00", align 1
@.str.154 = private unnamed_addr constant [21 x i8] c"View.MemoryView._err\00", align 1
@.str.155 = private unnamed_addr constant [53 x i8] c"Cannot transpose memoryview with indirect dimensions\00", align 1
@.str.156 = private unnamed_addr constant [35 x i8] c"View.MemoryView.transpose_memslice\00", align 1
@.str.157 = private unnamed_addr constant [55 x i8] c"View.MemoryView.memoryview.setitem_slice_assign_scalar\00", align 1
@.str.158 = private unnamed_addr constant [41 x i8] c"View.MemoryView.assert_direct_dimensions\00", align 1
@.str.159 = private unnamed_addr constant [43 x i8] c"View.MemoryView.memoryview.setitem_indexed\00", align 1
@.str.160 = private unnamed_addr constant [50 x i8] c"View.MemoryView.memoryview.convert_item_to_object\00", align 1
@.str.161 = private unnamed_addr constant [27 x i8] c"'NoneType' is not iterable\00", align 1
@.str.162 = private unnamed_addr constant [51 x i8] c"View.MemoryView.memoryview.assign_item_from_object\00", align 1
@.str.163 = private unnamed_addr constant [46 x i8] c"sklearn.cluster._k_means_minibatch.memoryview\00", align 1
@__pyx_tp_as_sequence_memoryview = internal global %struct.PySequenceMethods { ptr @__pyx_memoryview___len__, ptr null, ptr null, ptr @__pyx_sq_item_memoryview, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 8
@__pyx_tp_as_mapping_memoryview = internal global %struct.PyMappingMethods { ptr @__pyx_memoryview___len__, ptr @__pyx_memoryview___getitem__, ptr @__pyx_mp_ass_subscript_memoryview }, align 8
@__pyx_tp_as_buffer_memoryview = internal global %struct.PyBufferProcs { ptr @__pyx_memoryview_getbuffer, ptr null }, align 8
@__pyx_methods_memoryview = internal global [7 x %struct.PyMethodDef] [%struct.PyMethodDef { ptr @.str.181, ptr @__pyx_memoryview_is_c_contig, i32 4, ptr null }, %struct.PyMethodDef { ptr @.str.182, ptr @__pyx_memoryview_is_f_contig, i32 4, ptr null }, %struct.PyMethodDef { ptr @.str.183, ptr @__pyx_memoryview_copy, i32 4, ptr null }, %struct.PyMethodDef { ptr @.str.184, ptr @__pyx_memoryview_copy_fortran, i32 4, ptr null }, %struct.PyMethodDef { ptr @.str.90, ptr @__pyx_pw___pyx_memoryview_1__reduce_cython__, i32 4, ptr null }, %struct.PyMethodDef { ptr @.str.91, ptr @__pyx_pw___pyx_memoryview_3__setstate_cython__, i32 8, ptr null }, %struct.PyMethodDef zeroinitializer], align 16
@__pyx_getsets_memoryview = internal global [10 x %struct.PyGetSetDef] [%struct.PyGetSetDef { ptr @.str.198, ptr @__pyx_getprop___pyx_memoryview_T, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.199, ptr @__pyx_getprop___pyx_memoryview_base, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.103, ptr @__pyx_getprop___pyx_memoryview_shape, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.200, ptr @__pyx_getprop___pyx_memoryview_strides, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.201, ptr @__pyx_getprop___pyx_memoryview_suboffsets, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.202, ptr @__pyx_getprop___pyx_memoryview_ndim, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.203, ptr @__pyx_getprop___pyx_memoryview_itemsize, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.204, ptr @__pyx_getprop___pyx_memoryview_nbytes, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.205, ptr @__pyx_getprop___pyx_memoryview_size, ptr null, ptr null, ptr null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.164 = private unnamed_addr constant [36 x i8] c"View.MemoryView.memoryview.__repr__\00", align 1
@.str.165 = private unnamed_addr constant [39 x i8] c"View.MemoryView.memoryview.__getitem__\00", align 1
@PySlice_Type = external global %struct._typeobject, align 8
@.str.166 = private unnamed_addr constant [29 x i8] c"View.MemoryView._unellipsify\00", align 1
@PyFloat_Type = external global %struct._typeobject, align 8
@PyExc_ValueError = external global ptr, align 8
@.str.167 = private unnamed_addr constant [41 x i8] c"too many values to unpack (expected %zd)\00", align 1
@.str.168 = private unnamed_addr constant [39 x i8] c"need more than %zd value%.1s to unpack\00", align 1
@.str.169 = private unnamed_addr constant [34 x i8] c"'NoneType' object is not iterable\00", align 1
@PyExc_AssertionError = external global ptr, align 8
@.str.170 = private unnamed_addr constant [16 x i8] c"memviewsliceobj\00", align 1
@.str.171 = private unnamed_addr constant [30 x i8] c"View.MemoryView.memview_slice\00", align 1
@.str.172 = private unnamed_addr constant [30 x i8] c"Index out of bounds (axis %d)\00", align 1
@.str.173 = private unnamed_addr constant [31 x i8] c"Step may not be zero (axis %d)\00", align 1
@.str.174 = private unnamed_addr constant [69 x i8] c"All dimensions preceding dimension %d must be indexed and not sliced\00", align 1
@.str.175 = private unnamed_addr constant [35 x i8] c"View.MemoryView.slice_memviewslice\00", align 1
@PyExc_UnboundLocalError = external global ptr, align 8
@.str.176 = private unnamed_addr constant [49 x i8] c"local variable '%s' referenced before assignment\00", align 1
@.str.177 = private unnamed_addr constant [37 x i8] c"View.MemoryView.memoryview_fromslice\00", align 1
@.str.178 = private unnamed_addr constant [34 x i8] c"Acquisition count is %d (line %d)\00", align 1
@__func__.__pyx_fatalerror = private unnamed_addr constant [17 x i8] c"__pyx_fatalerror\00", align 1
@.str.179 = private unnamed_addr constant [39 x i8] c"View.MemoryView.memoryview.__setitem__\00", align 1
@.str.180 = private unnamed_addr constant [35 x i8] c"View.MemoryView.memoryview.__str__\00", align 1
@.str.181 = private unnamed_addr constant [12 x i8] c"is_c_contig\00", align 1
@.str.182 = private unnamed_addr constant [12 x i8] c"is_f_contig\00", align 1
@.str.183 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.184 = private unnamed_addr constant [13 x i8] c"copy_fortran\00", align 1
@.str.185 = private unnamed_addr constant [39 x i8] c"View.MemoryView.memoryview.is_c_contig\00", align 1
@.str.186 = private unnamed_addr constant [39 x i8] c"View.MemoryView.memoryview.is_f_contig\00", align 1
@.str.187 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.188 = private unnamed_addr constant [32 x i8] c"View.MemoryView.memoryview.copy\00", align 1
@.str.189 = private unnamed_addr constant [64 x i8] c"Cannot copy memoryview slice with indirect dimensions (axis %d)\00", align 1
@.str.190 = private unnamed_addr constant [31 x i8] c"View.MemoryView.array_cwrapper\00", align 1
@.str.191 = private unnamed_addr constant [36 x i8] c"View.MemoryView.memoryview_cwrapper\00", align 1
@.str.192 = private unnamed_addr constant [37 x i8] c"memviewslice is already initialized!\00", align 1
@.str.193 = private unnamed_addr constant [43 x i8] c"View.MemoryView.memoryview_copy_from_slice\00", align 1
@.str.194 = private unnamed_addr constant [8 x i8] c"fortran\00", align 1
@.str.195 = private unnamed_addr constant [40 x i8] c"View.MemoryView.memoryview.copy_fortran\00", align 1
@.str.196 = private unnamed_addr constant [45 x i8] c"View.MemoryView.memoryview.__reduce_cython__\00", align 1
@.str.197 = private unnamed_addr constant [47 x i8] c"View.MemoryView.memoryview.__setstate_cython__\00", align 1
@.str.198 = private unnamed_addr constant [2 x i8] c"T\00", align 1
@.str.199 = private unnamed_addr constant [5 x i8] c"base\00", align 1
@.str.200 = private unnamed_addr constant [8 x i8] c"strides\00", align 1
@.str.201 = private unnamed_addr constant [11 x i8] c"suboffsets\00", align 1
@.str.202 = private unnamed_addr constant [5 x i8] c"ndim\00", align 1
@.str.203 = private unnamed_addr constant [9 x i8] c"itemsize\00", align 1
@.str.204 = private unnamed_addr constant [7 x i8] c"nbytes\00", align 1
@.str.205 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.206 = private unnamed_addr constant [37 x i8] c"View.MemoryView.memoryview.T.__get__\00", align 1
@.str.207 = private unnamed_addr constant [32 x i8] c"View.MemoryView.memoryview_copy\00", align 1
@.str.208 = private unnamed_addr constant [41 x i8] c"View.MemoryView.memoryview.shape.__get__\00", align 1
@.str.209 = private unnamed_addr constant [43 x i8] c"View.MemoryView.memoryview.strides.__get__\00", align 1
@.str.210 = private unnamed_addr constant [46 x i8] c"View.MemoryView.memoryview.suboffsets.__get__\00", align 1
@.str.211 = private unnamed_addr constant [40 x i8] c"View.MemoryView.memoryview.ndim.__get__\00", align 1
@.str.212 = private unnamed_addr constant [44 x i8] c"View.MemoryView.memoryview.itemsize.__get__\00", align 1
@.str.213 = private unnamed_addr constant [42 x i8] c"View.MemoryView.memoryview.nbytes.__get__\00", align 1
@.str.214 = private unnamed_addr constant [40 x i8] c"View.MemoryView.memoryview.size.__get__\00", align 1
@__pyx_memoryview___cinit__.__pyx_pyargnames = internal global [4 x ptr] [ptr @__pyx_n_s_obj, ptr @__pyx_n_s_flags, ptr @__pyx_n_s_dtype_is_object, ptr null], align 16
@.str.215 = private unnamed_addr constant [37 x i8] c"View.MemoryView.memoryview.__cinit__\00", align 1
@.str.216 = private unnamed_addr constant [56 x i8] c"View.MemoryView._memoryviewslice.convert_item_to_object\00", align 1
@.str.217 = private unnamed_addr constant [57 x i8] c"View.MemoryView._memoryviewslice.assign_item_from_object\00", align 1
@.str.218 = private unnamed_addr constant [52 x i8] c"sklearn.cluster._k_means_minibatch._memoryviewslice\00", align 1
@.str.219 = private unnamed_addr constant [55 x i8] c"Internal class for passing memoryview slices to Python\00", align 1
@__pyx_methods__memoryviewslice = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { ptr @.str.90, ptr @__pyx_pw___pyx_memoryviewslice_1__reduce_cython__, i32 4, ptr null }, %struct.PyMethodDef { ptr @.str.91, ptr @__pyx_pw___pyx_memoryviewslice_3__setstate_cython__, i32 8, ptr null }, %struct.PyMethodDef zeroinitializer], align 16
@__pyx_getsets__memoryviewslice = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { ptr @.str.199, ptr @__pyx_getprop___pyx_memoryviewslice_base, ptr null, ptr null, ptr null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.220 = private unnamed_addr constant [51 x i8] c"View.MemoryView._memoryviewslice.__reduce_cython__\00", align 1
@.str.221 = private unnamed_addr constant [53 x i8] c"View.MemoryView._memoryviewslice.__setstate_cython__\00", align 1
@.str.222 = private unnamed_addr constant [36 x i8] c"__pyx_fuse_0_minibatch_update_dense\00", align 1
@__pyx_doc_7sklearn_7cluster_18_k_means_minibatch__minibatch_update_dense = internal global [960 x i8] c"Update of the centers for dense MiniBatchKMeans.\0A\0A    Parameters\0A    ----------\0A    X : ndarray of shape (n_samples, n_features), dtype=floating\0A        The observations to cluster.\0A\0A    sample_weight : ndarray of shape (n_samples,), dtype=floating\0A        The weights for each observation in X.\0A\0A    centers_old : ndarray of shape (n_clusters, n_features), dtype=floating\0A        Centers before previous iteration, placeholder for the centers after\0A        previous iteration.\0A\0A    centers_new : ndarray of shape (n_clusters, n_features), dtype=floating\0A        Centers after previous iteration, placeholder for the new centers\0A        computed during this iteration.\0A\0A    weight_sums : ndarray of shape (n_clusters,), dtype=floating\0A        Current sums of the accumulated weights for each center.\0A\0A    labels : ndarray of shape (n_samples,), dtype=int\0A        labels assignment.\0A\0A    n_threads : int\0A        The number of threads to be used by openmp.\0A    \00", align 16
@__pyx_fuse_0__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_5_minibatch_update_dense.__pyx_pyargnames = internal global [8 x ptr] [ptr @__pyx_n_s_X, ptr @__pyx_n_s_sample_weight, ptr @__pyx_n_s_centers_old, ptr @__pyx_n_s_centers_new, ptr @__pyx_n_s_weight_sums, ptr @__pyx_n_s_labels, ptr @__pyx_n_s_n_threads, ptr null], align 16
@.str.223 = private unnamed_addr constant [24 x i8] c"_minibatch_update_dense\00", align 1
@.str.224 = private unnamed_addr constant [59 x i8] c"sklearn.cluster._k_means_minibatch._minibatch_update_dense\00", align 1
@__const.__Pyx_PyObject_to_MemoryviewSlice_d_dc_float__const__.axes_specs = private unnamed_addr constant [2 x i32] [i32 33, i32 9], align 4
@__Pyx_TypeInfo_float__const__ = internal global %struct.__Pyx_TypeInfo { ptr @.str.278, ptr null, i64 4, [8 x i64] zeroinitializer, i32 0, i8 82, i8 0, i32 0 }, align 8
@.str.225 = private unnamed_addr constant [60 x i8] c"Buffer has wrong number of dimensions (expected %d, got %d)\00", align 1
@.str.226 = private unnamed_addr constant [74 x i8] c"Item size of buffer (%zu byte%s) does not match size of '%s' (%zu byte%s)\00", align 1
@.str.227 = private unnamed_addr constant [13 x i8] c"buffer dtype\00", align 1
@.str.228 = private unnamed_addr constant [58 x i8] c"Little-endian buffer not supported on big-endian compiler\00", align 1
@.str.229 = private unnamed_addr constant [58 x i8] c"Big-endian buffer not supported on little-endian compiler\00", align 1
@.str.230 = private unnamed_addr constant [43 x i8] c"Buffer acquisition: Expected '{' after 'T'\00", align 1
@.str.231 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.232 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.233 = private unnamed_addr constant [50 x i8] c"Buffer dtype mismatch, expected %s%s%s but got %s\00", align 1
@.str.234 = private unnamed_addr constant [59 x i8] c"Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'\00", align 1
@.str.235 = private unnamed_addr constant [7 x i8] c"'bool'\00", align 1
@.str.236 = private unnamed_addr constant [7 x i8] c"'char'\00", align 1
@.str.237 = private unnamed_addr constant [14 x i8] c"'signed char'\00", align 1
@.str.238 = private unnamed_addr constant [16 x i8] c"'unsigned char'\00", align 1
@.str.239 = private unnamed_addr constant [8 x i8] c"'short'\00", align 1
@.str.240 = private unnamed_addr constant [17 x i8] c"'unsigned short'\00", align 1
@.str.241 = private unnamed_addr constant [6 x i8] c"'int'\00", align 1
@.str.242 = private unnamed_addr constant [15 x i8] c"'unsigned int'\00", align 1
@.str.243 = private unnamed_addr constant [7 x i8] c"'long'\00", align 1
@.str.244 = private unnamed_addr constant [16 x i8] c"'unsigned long'\00", align 1
@.str.245 = private unnamed_addr constant [12 x i8] c"'long long'\00", align 1
@.str.246 = private unnamed_addr constant [21 x i8] c"'unsigned long long'\00", align 1
@.str.247 = private unnamed_addr constant [16 x i8] c"'complex float'\00", align 1
@.str.248 = private unnamed_addr constant [8 x i8] c"'float'\00", align 1
@.str.249 = private unnamed_addr constant [17 x i8] c"'complex double'\00", align 1
@.str.250 = private unnamed_addr constant [9 x i8] c"'double'\00", align 1
@.str.251 = private unnamed_addr constant [22 x i8] c"'complex long double'\00", align 1
@.str.252 = private unnamed_addr constant [14 x i8] c"'long double'\00", align 1
@.str.253 = private unnamed_addr constant [9 x i8] c"a struct\00", align 1
@.str.254 = private unnamed_addr constant [14 x i8] c"Python object\00", align 1
@.str.255 = private unnamed_addr constant [10 x i8] c"a pointer\00", align 1
@.str.256 = private unnamed_addr constant [9 x i8] c"a string\00", align 1
@.str.257 = private unnamed_addr constant [26 x i8] c"unparseable format string\00", align 1
@.str.258 = private unnamed_addr constant [42 x i8] c"Expected a dimension of size %zu, got %zu\00", align 1
@.str.259 = private unnamed_addr constant [31 x i8] c"Expected %d dimensions, got %d\00", align 1
@.str.260 = private unnamed_addr constant [68 x i8] c"Buffer dtype mismatch; next field is at offset %zd but %zd expected\00", align 1
@.str.261 = private unnamed_addr constant [77 x i8] c"Python does not define a standard format string size for long double ('g')..\00", align 1
@.str.262 = private unnamed_addr constant [41 x i8] c"Unexpected format string character: '%c'\00", align 1
@.str.263 = private unnamed_addr constant [47 x i8] c"Cannot handle repeated arrays in format string\00", align 1
@.str.264 = private unnamed_addr constant [41 x i8] c"Expected a dimension of size %zu, got %d\00", align 1
@.str.265 = private unnamed_addr constant [44 x i8] c"Expected a comma in format string, got '%c'\00", align 1
@.str.266 = private unnamed_addr constant [33 x i8] c"Expected %d dimension(s), got %d\00", align 1
@.str.267 = private unnamed_addr constant [46 x i8] c"Unexpected end of format string, expected ')'\00", align 1
@.str.268 = private unnamed_addr constant [64 x i8] c"Does not understand character buffer dtype format string ('%c')\00", align 1
@.str.269 = private unnamed_addr constant [53 x i8] c"Buffer is not indirectly contiguous in dimension %d.\00", align 1
@.str.270 = private unnamed_addr constant [64 x i8] c"Buffer and memoryview are not contiguous in the same dimension.\00", align 1
@.str.271 = private unnamed_addr constant [54 x i8] c"C-contiguous buffer is not contiguous in dimension %d\00", align 1
@.str.272 = private unnamed_addr constant [52 x i8] c"C-contiguous buffer is not indirect in dimension %d\00", align 1
@.str.273 = private unnamed_addr constant [41 x i8] c"Buffer exposes suboffsets but no strides\00", align 1
@.str.274 = private unnamed_addr constant [58 x i8] c"Buffer not compatible with direct access in dimension %d.\00", align 1
@.str.275 = private unnamed_addr constant [53 x i8] c"Buffer is not indirectly accessible in dimension %d.\00", align 1
@.str.276 = private unnamed_addr constant [31 x i8] c"Buffer not fortran contiguous.\00", align 1
@.str.277 = private unnamed_addr constant [25 x i8] c"Buffer not C contiguous.\00", align 1
@.str.278 = private unnamed_addr constant [12 x i8] c"const float\00", align 1
@__const.__Pyx_PyObject_to_MemoryviewSlice_dc_float__const__.axes_specs = private unnamed_addr constant [1 x i32] [i32 9], align 4
@__const.__Pyx_PyObject_to_MemoryviewSlice_d_dc_float.axes_specs = private unnamed_addr constant [2 x i32] [i32 33, i32 9], align 4
@__Pyx_TypeInfo_float = internal global %struct.__Pyx_TypeInfo { ptr @.str.279, ptr null, i64 4, [8 x i64] zeroinitializer, i32 0, i8 82, i8 0, i32 0 }, align 8
@.str.279 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@__const.__Pyx_PyObject_to_MemoryviewSlice_dc_float.axes_specs = private unnamed_addr constant [1 x i32] [i32 9], align 4
@__const.__Pyx_PyObject_to_MemoryviewSlice_dc_int__const__.axes_specs = private unnamed_addr constant [1 x i32] [i32 9], align 4
@__Pyx_TypeInfo_int__const__ = internal global %struct.__Pyx_TypeInfo { ptr @.str.280, ptr null, i64 4, [8 x i64] zeroinitializer, i32 0, i8 73, i8 0, i32 0 }, align 8
@.str.280 = private unnamed_addr constant [10 x i8] c"const int\00", align 1
@0 = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
@1 = private unnamed_addr constant %struct.ident_t { i32 0, i32 66, i32 0, i32 22, ptr @0 }, align 8
@2 = private unnamed_addr constant %struct.ident_t { i32 0, i32 514, i32 0, i32 22, ptr @0 }, align 8
@3 = private unnamed_addr constant %struct.ident_t { i32 0, i32 2, i32 0, i32 22, ptr @0 }, align 8
@.str.281 = private unnamed_addr constant [36 x i8] c"__pyx_fuse_1_minibatch_update_dense\00", align 1
@__pyx_fuse_1__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_7_minibatch_update_dense.__pyx_pyargnames = internal global [8 x ptr] [ptr @__pyx_n_s_X, ptr @__pyx_n_s_sample_weight, ptr @__pyx_n_s_centers_old, ptr @__pyx_n_s_centers_new, ptr @__pyx_n_s_weight_sums, ptr @__pyx_n_s_labels, ptr @__pyx_n_s_n_threads, ptr null], align 16
@__const.__Pyx_PyObject_to_MemoryviewSlice_d_dc_double__const__.axes_specs = private unnamed_addr constant [2 x i32] [i32 33, i32 9], align 4
@__Pyx_TypeInfo_double__const__ = internal global %struct.__Pyx_TypeInfo { ptr @.str.282, ptr null, i64 8, [8 x i64] zeroinitializer, i32 0, i8 82, i8 0, i32 0 }, align 8
@.str.282 = private unnamed_addr constant [13 x i8] c"const double\00", align 1
@__const.__Pyx_PyObject_to_MemoryviewSlice_dc_double__const__.axes_specs = private unnamed_addr constant [1 x i32] [i32 9], align 4
@__const.__Pyx_PyObject_to_MemoryviewSlice_d_dc_double.axes_specs = private unnamed_addr constant [2 x i32] [i32 33, i32 9], align 4
@__Pyx_TypeInfo_double = internal global %struct.__Pyx_TypeInfo { ptr @.str.283, ptr null, i64 8, [8 x i64] zeroinitializer, i32 0, i8 82, i8 0, i32 0 }, align 8
@.str.283 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@__const.__Pyx_PyObject_to_MemoryviewSlice_dc_double.axes_specs = private unnamed_addr constant [1 x i32] [i32 9], align 4
@__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_1_minibatch_update_dense.__pyx_pyargnames = internal global [5 x ptr] [ptr @__pyx_n_s_signatures, ptr @__pyx_n_s_args, ptr @__pyx_n_s_kwargs, ptr @__pyx_n_s_defaults, ptr null], align 16
@.str.284 = private unnamed_addr constant [18 x i8] c"__pyx_fused_cpdef\00", align 1
@.str.285 = private unnamed_addr constant [53 x i8] c"sklearn.cluster._k_means_minibatch.__pyx_fused_cpdef\00", align 1
@__pyx_numpy_ndarray = internal global ptr null, align 8
@.str.286 = private unnamed_addr constant [8 x i8] c"ndarray\00", align 1
@PyType_Type = external global %struct._typeobject, align 8
@PyExc_KeyError = external global ptr, align 8
@.str.287 = private unnamed_addr constant [82 x i8] c"only single character unicode strings can be converted to Py_UCS4, got length %zd\00", align 1
@PyByteArray_Type = external global %struct._typeobject, align 8
@.str.288 = private unnamed_addr constant [52 x i8] c"ord() expected string of length 1, but %.200s found\00", align 1
@.str.289 = private unnamed_addr constant [59 x i8] c"ord() expected a character, but string of length %zd found\00", align 1
@_PyByteArray_empty_string = external global [0 x i8], align 1
@PyDict_Type = external global %struct._typeobject, align 8
@PyFunction_Type = external global %struct._typeobject, align 8
@PyMethodDescr_Type = external global %struct._typeobject, align 8
@.str.290 = private unnamed_addr constant [37 x i8] c"'%.50s' object has no attribute '%U'\00", align 1
@.str.291 = private unnamed_addr constant [41 x i8] c"dictionary changed size during iteration\00", align 1
@.str.292 = private unnamed_addr constant [37 x i8] c"__pyx_fuse_0_minibatch_update_sparse\00", align 1
@__pyx_doc_7sklearn_7cluster_18_k_means_minibatch_2_minibatch_update_sparse = internal global [990 x i8] c"Update of the centers for sparse MiniBatchKMeans.\0A\0A    Parameters\0A    ----------\0A    X : sparse matrix of shape (n_samples, n_features), dtype=floating\0A        The observations to cluster. Must be in CSR format.\0A\0A    sample_weight : ndarray of shape (n_samples,), dtype=floating\0A        The weights for each observation in X.\0A\0A    centers_old : ndarray of shape (n_clusters, n_features), dtype=floating\0A        Centers before previous iteration, placeholder for the centers after\0A        previous iteration.\0A\0A    centers_new : ndarray of shape (n_clusters, n_features), dtype=floating\0A        Centers after previous iteration, placeholder for the new centers\0A        computed during this iteration.\0A\0A    weight_sums : ndarray of shape (n_clusters,), dtype=floating\0A        Current sums of the accumulated weights for each center.\0A\0A    labels : ndarray of shape (n_samples,), dtype=int\0A        labels assignment.\0A\0A    n_threads : int\0A        The number of threads to be used by openmp.\0A    \00", align 16
@__pyx_fuse_0__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_11_minibatch_update_sparse.__pyx_pyargnames = internal global [8 x ptr] [ptr @__pyx_n_s_X, ptr @__pyx_n_s_sample_weight, ptr @__pyx_n_s_centers_old, ptr @__pyx_n_s_centers_new, ptr @__pyx_n_s_weight_sums, ptr @__pyx_n_s_labels, ptr @__pyx_n_s_n_threads, ptr null], align 16
@.str.293 = private unnamed_addr constant [25 x i8] c"_minibatch_update_sparse\00", align 1
@.str.294 = private unnamed_addr constant [60 x i8] c"sklearn.cluster._k_means_minibatch._minibatch_update_sparse\00", align 1
@__const.__Pyx_PyObject_to_MemoryviewSlice_dc_int.axes_specs = private unnamed_addr constant [1 x i32] [i32 9], align 4
@__Pyx_TypeInfo_int = internal global %struct.__Pyx_TypeInfo { ptr @.str.144, ptr null, i64 4, [8 x i64] zeroinitializer, i32 0, i8 73, i8 0, i32 0 }, align 8
@.str.295 = private unnamed_addr constant [37 x i8] c"__pyx_fuse_1_minibatch_update_sparse\00", align 1
@__pyx_fuse_1__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_13_minibatch_update_sparse.__pyx_pyargnames = internal global [8 x ptr] [ptr @__pyx_n_s_X, ptr @__pyx_n_s_sample_weight, ptr @__pyx_n_s_centers_old, ptr @__pyx_n_s_centers_new, ptr @__pyx_n_s_weight_sums, ptr @__pyx_n_s_labels, ptr @__pyx_n_s_n_threads, ptr null], align 16
@__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_3_minibatch_update_sparse.__pyx_pyargnames = internal global [5 x ptr] [ptr @__pyx_n_s_signatures, ptr @__pyx_n_s_args, ptr @__pyx_n_s_kwargs, ptr @__pyx_n_s_defaults, ptr null], align 16
@PyExc_BufferError = external global ptr, align 8
@.str.296 = private unnamed_addr constant [52 x i8] c"PyObject_GetBuffer: view==NULL argument is obsolete\00", align 1
@.str.297 = private unnamed_addr constant [36 x i8] c"View.MemoryView.array.__getbuffer__\00", align 1
@.str.298 = private unnamed_addr constant [41 x i8] c"View.MemoryView.memoryview.__getbuffer__\00", align 1
@.str.299 = private unnamed_addr constant [20 x i8] c"__pyx_unpickle_Enum\00", align 1
@__pyx_pw_15View_dot_MemoryView_1__pyx_unpickle_Enum.__pyx_pyargnames = internal global [4 x ptr] [ptr @__pyx_n_s_pyx_type, ptr @__pyx_n_s_pyx_checksum, ptr @__pyx_n_s_pyx_state, ptr null], align 16
@.str.300 = private unnamed_addr constant [36 x i8] c"View.MemoryView.__pyx_unpickle_Enum\00", align 1
@.str.301 = private unnamed_addr constant [35 x i8] c"value too large to convert to long\00", align 1
@.str.302 = private unnamed_addr constant [37 x i8] c"can't convert negative value to long\00", align 1
@.str.303 = private unnamed_addr constant [22 x i8] c"cannot import name %S\00", align 1
@__Pyx_CLineForTraceback.__pyx_dict_version = internal global i64 0, align 8
@__Pyx_CLineForTraceback.__pyx_dict_cached_value = internal global ptr null, align 8
@__pyx_code_cache = internal global %struct.__Pyx_CodeObjectCache zeroinitializer, align 8
@.str.304 = private unnamed_addr constant [11 x i8] c"%s (%s:%d)\00", align 1
@__pyx_cfilenm = internal global ptr @.str.305, align 8
@.str.305 = private unnamed_addr constant [37 x i8] c"sklearn/cluster/_k_means_minibatch.c\00", align 1

; Function Attrs: nounwind uwtable
define ptr @PyInit__k_means_minibatch() #0 {
entry:
  %call = call ptr @PyModuleDef_Init(ptr noundef @__pyx_moduledef)
  ret ptr %call
}

declare ptr @PyModuleDef_Init(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pymod_create(ptr noundef %spec, ptr noundef %def) #0 {
entry:
  %retval = alloca ptr, align 8
  %spec.addr = alloca ptr, align 8
  %def.addr = alloca ptr, align 8
  %module = alloca ptr, align 8
  %moddict = alloca ptr, align 8
  %modname = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %spec, ptr %spec.addr, align 8, !tbaa !5
  store ptr %def, ptr %def.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %module) #13
  store ptr null, ptr %module, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %moddict) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %modname) #13
  %call = call i32 @__Pyx_check_single_interpreter()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  %tobool1 = icmp ne ptr %0, null
  br i1 %tobool1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %1 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %1)
  %2 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  store ptr %2, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %3 = load ptr, ptr %spec.addr, align 8, !tbaa !5
  %call4 = call ptr @PyObject_GetAttrString(ptr noundef %3, ptr noundef @.str.1)
  store ptr %call4, ptr %modname, align 8, !tbaa !5
  %4 = load ptr, ptr %modname, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %4, null
  %lnot = xor i1 %tobool5, true
  %lnot6 = xor i1 %lnot, true
  %lnot7 = xor i1 %lnot6, true
  %lnot.ext = zext i1 %lnot7 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool8 = icmp ne i64 %expval, 0
  br i1 %tobool8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end3
  br label %bad

if.end10:                                         ; preds = %if.end3
  %5 = load ptr, ptr %modname, align 8, !tbaa !5
  %call11 = call ptr @PyModule_NewObject(ptr noundef %5)
  store ptr %call11, ptr %module, align 8, !tbaa !5
  %6 = load ptr, ptr %modname, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %6)
  %7 = load ptr, ptr %module, align 8, !tbaa !5
  %tobool12 = icmp ne ptr %7, null
  %lnot13 = xor i1 %tobool12, true
  %lnot15 = xor i1 %lnot13, true
  %lnot17 = xor i1 %lnot15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %conv19 = sext i32 %lnot.ext18 to i64
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0)
  %tobool21 = icmp ne i64 %expval20, 0
  br i1 %tobool21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end10
  br label %bad

if.end23:                                         ; preds = %if.end10
  %8 = load ptr, ptr %module, align 8, !tbaa !5
  %call24 = call ptr @PyModule_GetDict(ptr noundef %8)
  store ptr %call24, ptr %moddict, align 8, !tbaa !5
  %9 = load ptr, ptr %moddict, align 8, !tbaa !5
  %tobool25 = icmp ne ptr %9, null
  %lnot26 = xor i1 %tobool25, true
  %lnot28 = xor i1 %lnot26, true
  %lnot30 = xor i1 %lnot28, true
  %lnot.ext31 = zext i1 %lnot30 to i32
  %conv32 = sext i32 %lnot.ext31 to i64
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 0)
  %tobool34 = icmp ne i64 %expval33, 0
  br i1 %tobool34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end23
  br label %bad

if.end36:                                         ; preds = %if.end23
  %10 = load ptr, ptr %spec.addr, align 8, !tbaa !5
  %11 = load ptr, ptr %moddict, align 8, !tbaa !5
  %call37 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %10, ptr noundef %11, ptr noundef @.str.2, ptr noundef @.str.3, i32 noundef 1)
  %cmp = icmp slt i32 %call37, 0
  %lnot39 = xor i1 %cmp, true
  %lnot41 = xor i1 %lnot39, true
  %lnot.ext42 = zext i1 %lnot41 to i32
  %conv43 = sext i32 %lnot.ext42 to i64
  %expval44 = call i64 @llvm.expect.i64(i64 %conv43, i64 0)
  %tobool45 = icmp ne i64 %expval44, 0
  br i1 %tobool45, label %if.then46, label %if.end47

if.then46:                                        ; preds = %if.end36
  br label %bad

if.end47:                                         ; preds = %if.end36
  %12 = load ptr, ptr %spec.addr, align 8, !tbaa !5
  %13 = load ptr, ptr %moddict, align 8, !tbaa !5
  %call48 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %12, ptr noundef %13, ptr noundef @.str.4, ptr noundef @.str.5, i32 noundef 1)
  %cmp49 = icmp slt i32 %call48, 0
  %lnot51 = xor i1 %cmp49, true
  %lnot53 = xor i1 %lnot51, true
  %lnot.ext54 = zext i1 %lnot53 to i32
  %conv55 = sext i32 %lnot.ext54 to i64
  %expval56 = call i64 @llvm.expect.i64(i64 %conv55, i64 0)
  %tobool57 = icmp ne i64 %expval56, 0
  br i1 %tobool57, label %if.then58, label %if.end59

if.then58:                                        ; preds = %if.end47
  br label %bad

if.end59:                                         ; preds = %if.end47
  %14 = load ptr, ptr %spec.addr, align 8, !tbaa !5
  %15 = load ptr, ptr %moddict, align 8, !tbaa !5
  %call60 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %14, ptr noundef %15, ptr noundef @.str.6, ptr noundef @.str.7, i32 noundef 1)
  %cmp61 = icmp slt i32 %call60, 0
  %lnot63 = xor i1 %cmp61, true
  %lnot65 = xor i1 %lnot63, true
  %lnot.ext66 = zext i1 %lnot65 to i32
  %conv67 = sext i32 %lnot.ext66 to i64
  %expval68 = call i64 @llvm.expect.i64(i64 %conv67, i64 0)
  %tobool69 = icmp ne i64 %expval68, 0
  br i1 %tobool69, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.end59
  br label %bad

if.end71:                                         ; preds = %if.end59
  %16 = load ptr, ptr %spec.addr, align 8, !tbaa !5
  %17 = load ptr, ptr %moddict, align 8, !tbaa !5
  %call72 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %16, ptr noundef %17, ptr noundef @.str.8, ptr noundef @.str.9, i32 noundef 0)
  %cmp73 = icmp slt i32 %call72, 0
  %lnot75 = xor i1 %cmp73, true
  %lnot77 = xor i1 %lnot75, true
  %lnot.ext78 = zext i1 %lnot77 to i32
  %conv79 = sext i32 %lnot.ext78 to i64
  %expval80 = call i64 @llvm.expect.i64(i64 %conv79, i64 0)
  %tobool81 = icmp ne i64 %expval80, 0
  br i1 %tobool81, label %if.then82, label %if.end83

if.then82:                                        ; preds = %if.end71
  br label %bad

if.end83:                                         ; preds = %if.end71
  %18 = load ptr, ptr %module, align 8, !tbaa !5
  store ptr %18, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

bad:                                              ; preds = %if.then82, %if.then70, %if.then58, %if.then46, %if.then35, %if.then22, %if.then9
  %19 = load ptr, ptr %module, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %19)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %bad, %if.end83, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %modname) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %moddict) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %module) #13
  %20 = load ptr, ptr %retval, align 8
  ret ptr %20
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pymod_exec__k_means_minibatch(ptr noundef %__pyx_pyinit_module) #0 {
entry:
  %retval = alloca i32, align 4
  %__pyx_pyinit_module.addr = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %modules = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %tmp361 = alloca ptr, align 8
  %tmp378 = alloca ptr, align 8
  %tmp395 = alloca ptr, align 8
  %tmp412 = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  store ptr %__pyx_pyinit_module, ptr %__pyx_pyinit_module.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.then, label %if.end2

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_pyinit_module.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %1, %2
  br i1 %cmp, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup498

if.end:                                           ; preds = %if.then
  %3 = load ptr, ptr @PyExc_RuntimeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.11)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup498

if.end2:                                          ; preds = %entry
  %call = call i32 @__Pyx_check_binary_version()
  %cmp3 = icmp slt i32 %call, 0
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end2
  %4 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20587, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end5:                                          ; preds = %if.end2
  %call6 = call ptr @PyTuple_New(i64 noundef 0)
  store ptr %call6, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %8 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %tobool7 = icmp ne ptr %8, null
  %lnot = xor i1 %tobool7, true
  %lnot8 = xor i1 %lnot, true
  %lnot9 = xor i1 %lnot8, true
  %lnot.ext = zext i1 %lnot9 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool10 = icmp ne i64 %expval, 0
  br i1 %tobool10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end5
  %9 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %9, ptr %__pyx_filename, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20591, ptr %__pyx_clineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end12:                                         ; preds = %if.end5
  %call13 = call ptr @PyBytes_FromStringAndSize(ptr noundef @.str.12, i64 noundef 0)
  store ptr %call13, ptr @__pyx_empty_bytes, align 8, !tbaa !5
  %13 = load ptr, ptr @__pyx_empty_bytes, align 8, !tbaa !5
  %tobool14 = icmp ne ptr %13, null
  %lnot15 = xor i1 %tobool14, true
  %lnot17 = xor i1 %lnot15, true
  %lnot19 = xor i1 %lnot17, true
  %lnot.ext20 = zext i1 %lnot19 to i32
  %conv21 = sext i32 %lnot.ext20 to i64
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 0)
  %tobool23 = icmp ne i64 %expval22, 0
  br i1 %tobool23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end12
  %14 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %14, ptr %__pyx_filename, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20592, ptr %__pyx_clineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end25:                                         ; preds = %if.end12
  %call26 = call ptr @PyUnicode_FromStringAndSize(ptr noundef @.str.12, i64 noundef 0)
  store ptr %call26, ptr @__pyx_empty_unicode, align 8, !tbaa !5
  %18 = load ptr, ptr @__pyx_empty_unicode, align 8, !tbaa !5
  %tobool27 = icmp ne ptr %18, null
  %lnot28 = xor i1 %tobool27, true
  %lnot30 = xor i1 %lnot28, true
  %lnot32 = xor i1 %lnot30, true
  %lnot.ext33 = zext i1 %lnot32 to i32
  %conv34 = sext i32 %lnot.ext33 to i64
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 0)
  %tobool36 = icmp ne i64 %expval35, 0
  br i1 %tobool36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.end25
  %19 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %19, ptr %__pyx_filename, align 8, !tbaa !5
  %20 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20593, ptr %__pyx_clineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end38:                                         ; preds = %if.end25
  %call39 = call i32 @__pyx_CyFunction_init()
  %cmp40 = icmp slt i32 %call39, 0
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end38
  %23 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %23, ptr %__pyx_filename, align 8, !tbaa !5
  %24 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20595, ptr %__pyx_clineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end43:                                         ; preds = %if.end38
  %call44 = call i32 @__pyx_FusedFunction_init()
  %cmp45 = icmp slt i32 %call44, 0
  br i1 %cmp45, label %if.then47, label %if.end48

if.then47:                                        ; preds = %if.end43
  %27 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %27, ptr %__pyx_filename, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20598, ptr %__pyx_clineno, align 4, !tbaa !9
  %30 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end48:                                         ; preds = %if.end43
  %31 = load ptr, ptr %__pyx_pyinit_module.addr, align 8, !tbaa !5
  store ptr %31, ptr @__pyx_m, align 8, !tbaa !5
  %32 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %32)
  %33 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  %call49 = call ptr @PyModule_GetDict(ptr noundef %33)
  store ptr %call49, ptr @__pyx_d, align 8, !tbaa !5
  %34 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %tobool50 = icmp ne ptr %34, null
  %lnot51 = xor i1 %tobool50, true
  %lnot53 = xor i1 %lnot51, true
  %lnot55 = xor i1 %lnot53, true
  %lnot.ext56 = zext i1 %lnot55 to i32
  %conv57 = sext i32 %lnot.ext56 to i64
  %expval58 = call i64 @llvm.expect.i64(i64 %conv57, i64 0)
  %tobool59 = icmp ne i64 %expval58, 0
  br i1 %tobool59, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.end48
  %35 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %35, ptr %__pyx_filename, align 8, !tbaa !5
  %36 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %37 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20629, ptr %__pyx_clineno, align 4, !tbaa !9
  %38 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end61:                                         ; preds = %if.end48
  %39 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %39)
  %call62 = call ptr @PyImport_AddModule(ptr noundef @.str.13)
  store ptr %call62, ptr @__pyx_b, align 8, !tbaa !5
  %40 = load ptr, ptr @__pyx_b, align 8, !tbaa !5
  %tobool63 = icmp ne ptr %40, null
  %lnot64 = xor i1 %tobool63, true
  %lnot66 = xor i1 %lnot64, true
  %lnot68 = xor i1 %lnot66, true
  %lnot.ext69 = zext i1 %lnot68 to i32
  %conv70 = sext i32 %lnot.ext69 to i64
  %expval71 = call i64 @llvm.expect.i64(i64 %conv70, i64 0)
  %tobool72 = icmp ne i64 %expval71, 0
  br i1 %tobool72, label %if.then73, label %if.end74

if.then73:                                        ; preds = %if.end61
  %41 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %41, ptr %__pyx_filename, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %43 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20631, ptr %__pyx_clineno, align 4, !tbaa !9
  %44 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end74:                                         ; preds = %if.end61
  %45 = load ptr, ptr @__pyx_b, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %45)
  %call75 = call ptr @PyImport_AddModule(ptr noundef @.str.14)
  store ptr %call75, ptr @__pyx_cython_runtime, align 8, !tbaa !5
  %46 = load ptr, ptr @__pyx_cython_runtime, align 8, !tbaa !5
  %tobool76 = icmp ne ptr %46, null
  %lnot77 = xor i1 %tobool76, true
  %lnot79 = xor i1 %lnot77, true
  %lnot81 = xor i1 %lnot79, true
  %lnot.ext82 = zext i1 %lnot81 to i32
  %conv83 = sext i32 %lnot.ext82 to i64
  %expval84 = call i64 @llvm.expect.i64(i64 %conv83, i64 0)
  %tobool85 = icmp ne i64 %expval84, 0
  br i1 %tobool85, label %if.then86, label %if.end87

if.then86:                                        ; preds = %if.end74
  %47 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %47, ptr %__pyx_filename, align 8, !tbaa !5
  %48 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20633, ptr %__pyx_clineno, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end87:                                         ; preds = %if.end74
  %51 = load ptr, ptr @__pyx_cython_runtime, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %51)
  %52 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  %53 = load ptr, ptr @__pyx_b, align 8, !tbaa !5
  %call88 = call i32 @PyObject_SetAttrString(ptr noundef %52, ptr noundef @.str.15, ptr noundef %53)
  %cmp89 = icmp slt i32 %call88, 0
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end87
  %54 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %54, ptr %__pyx_filename, align 8, !tbaa !5
  %55 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %56 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20635, ptr %__pyx_clineno, align 4, !tbaa !9
  %57 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end92:                                         ; preds = %if.end87
  %call93 = call i32 @__Pyx_InitGlobals()
  %cmp94 = icmp slt i32 %call93, 0
  br i1 %cmp94, label %if.then96, label %if.end97

if.then96:                                        ; preds = %if.end92
  %58 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %58, ptr %__pyx_filename, align 8, !tbaa !5
  %59 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %60 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20637, ptr %__pyx_clineno, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end97:                                         ; preds = %if.end92
  %62 = load i32, ptr @__pyx_module_is_main_sklearn__cluster___k_means_minibatch, align 4, !tbaa !9
  %tobool98 = icmp ne i32 %62, 0
  br i1 %tobool98, label %if.then99, label %if.end105

if.then99:                                        ; preds = %if.end97
  %63 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  %64 = load ptr, ptr @__pyx_n_s_name_2, align 8, !tbaa !5
  %65 = load ptr, ptr @__pyx_n_s_main, align 8, !tbaa !5
  %call100 = call i32 @PyObject_SetAttr(ptr noundef %63, ptr noundef %64, ptr noundef %65)
  %cmp101 = icmp slt i32 %call100, 0
  br i1 %cmp101, label %if.then103, label %if.end104

if.then103:                                       ; preds = %if.then99
  %66 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %66, ptr %__pyx_filename, align 8, !tbaa !5
  %67 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %68 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20642, ptr %__pyx_clineno, align 4, !tbaa !9
  %69 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end104:                                        ; preds = %if.then99
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end97
  call void @llvm.lifetime.start.p0(i64 8, ptr %modules) #13
  %call106 = call ptr @PyImport_GetModuleDict()
  store ptr %call106, ptr %modules, align 8, !tbaa !5
  %70 = load ptr, ptr %modules, align 8, !tbaa !5
  %tobool107 = icmp ne ptr %70, null
  %lnot108 = xor i1 %tobool107, true
  %lnot110 = xor i1 %lnot108, true
  %lnot112 = xor i1 %lnot110, true
  %lnot.ext113 = zext i1 %lnot112 to i32
  %conv114 = sext i32 %lnot.ext113 to i64
  %expval115 = call i64 @llvm.expect.i64(i64 %conv114, i64 0)
  %tobool116 = icmp ne i64 %expval115, 0
  br i1 %tobool116, label %if.then117, label %if.end118

if.then117:                                       ; preds = %if.end105
  %71 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %71, ptr %__pyx_filename, align 8, !tbaa !5
  %72 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %73 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20646, ptr %__pyx_clineno, align 4, !tbaa !9
  %74 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end118:                                        ; preds = %if.end105
  %75 = load ptr, ptr %modules, align 8, !tbaa !5
  %call119 = call ptr @PyDict_GetItemString(ptr noundef %75, ptr noundef @.str.16)
  %tobool120 = icmp ne ptr %call119, null
  br i1 %tobool120, label %if.end134, label %if.then121

if.then121:                                       ; preds = %if.end118
  %76 = load ptr, ptr %modules, align 8, !tbaa !5
  %77 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  %call122 = call i32 @PyDict_SetItemString(ptr noundef %76, ptr noundef @.str.16, ptr noundef %77)
  %cmp123 = icmp slt i32 %call122, 0
  %lnot125 = xor i1 %cmp123, true
  %lnot127 = xor i1 %lnot125, true
  %lnot.ext128 = zext i1 %lnot127 to i32
  %conv129 = sext i32 %lnot.ext128 to i64
  %expval130 = call i64 @llvm.expect.i64(i64 %conv129, i64 0)
  %tobool131 = icmp ne i64 %expval130, 0
  br i1 %tobool131, label %if.then132, label %if.end133

if.then132:                                       ; preds = %if.then121
  %78 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %78, ptr %__pyx_filename, align 8, !tbaa !5
  %79 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %80 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20648, ptr %__pyx_clineno, align 4, !tbaa !9
  %81 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end133:                                        ; preds = %if.then121
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.end118
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then132, %if.then117, %if.end134
  call void @llvm.lifetime.end.p0(i64 8, ptr %modules) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup498 [
    i32 0, label %cleanup.cont
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %call135 = call i32 @__Pyx_InitCachedBuiltins()
  %cmp136 = icmp slt i32 %call135, 0
  br i1 %cmp136, label %if.then138, label %if.end139

if.then138:                                       ; preds = %cleanup.cont
  %82 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %82, ptr %__pyx_filename, align 8, !tbaa !5
  %83 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %84 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20653, ptr %__pyx_clineno, align 4, !tbaa !9
  %85 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end139:                                        ; preds = %cleanup.cont
  %call140 = call i32 @__Pyx_InitCachedConstants()
  %cmp141 = icmp slt i32 %call140, 0
  br i1 %cmp141, label %if.then143, label %if.end144

if.then143:                                       ; preds = %if.end139
  %86 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %86, ptr %__pyx_filename, align 8, !tbaa !5
  %87 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %88 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20655, ptr %__pyx_clineno, align 4, !tbaa !9
  %89 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end144:                                        ; preds = %if.end139
  %call145 = call i32 @__Pyx_modinit_global_init_code()
  %call146 = call i32 @__Pyx_modinit_variable_export_code()
  %call147 = call i32 @__Pyx_modinit_function_export_code()
  %call148 = call i32 @__Pyx_modinit_type_init_code()
  %cmp149 = icmp slt i32 %call148, 0
  %lnot151 = xor i1 %cmp149, true
  %lnot153 = xor i1 %lnot151, true
  %lnot.ext154 = zext i1 %lnot153 to i32
  %conv155 = sext i32 %lnot.ext154 to i64
  %expval156 = call i64 @llvm.expect.i64(i64 %conv155, i64 0)
  %tobool157 = icmp ne i64 %expval156, 0
  br i1 %tobool157, label %if.then158, label %if.end159

if.then158:                                       ; preds = %if.end144
  %90 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %90, ptr %__pyx_filename, align 8, !tbaa !5
  %91 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %92 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20660, ptr %__pyx_clineno, align 4, !tbaa !9
  %93 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end159:                                        ; preds = %if.end144
  %call160 = call i32 @__Pyx_modinit_type_import_code()
  %call161 = call i32 @__Pyx_modinit_variable_import_code()
  %call162 = call i32 @__Pyx_modinit_function_import_code()
  %call163 = call ptr @PyDict_New()
  store ptr %call163, ptr %__pyx_t_1, align 8, !tbaa !5
  %94 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool164 = icmp ne ptr %94, null
  %lnot165 = xor i1 %tobool164, true
  %lnot167 = xor i1 %lnot165, true
  %lnot169 = xor i1 %lnot167, true
  %lnot.ext170 = zext i1 %lnot169 to i32
  %conv171 = sext i32 %lnot.ext170 to i64
  %expval172 = call i64 @llvm.expect.i64(i64 %conv171, i64 0)
  %tobool173 = icmp ne i64 %expval172, 0
  br i1 %tobool173, label %if.then174, label %if.end175

if.then174:                                       ; preds = %if.end159
  %95 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %95, ptr %__pyx_filename, align 8, !tbaa !5
  %96 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %97 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20676, ptr %__pyx_clineno, align 4, !tbaa !9
  %98 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end175:                                        ; preds = %if.end159
  %99 = load ptr, ptr @__pyx_n_s_minibatch_update_dense, align 8, !tbaa !5
  %100 = load ptr, ptr @__pyx_n_s_sklearn_cluster__k_means_minibat_2, align 8, !tbaa !5
  %101 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %102 = load ptr, ptr @__pyx_codeobj__25, align 8, !tbaa !5
  %call176 = call ptr @__pyx_FusedFunction_New(ptr noundef @__pyx_fuse_0__pyx_mdef_7sklearn_7cluster_18_k_means_minibatch_5_minibatch_update_dense, i32 noundef 0, ptr noundef %99, ptr noundef null, ptr noundef %100, ptr noundef %101, ptr noundef %102)
  store ptr %call176, ptr %__pyx_t_2, align 8, !tbaa !5
  %103 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool177 = icmp ne ptr %103, null
  %lnot178 = xor i1 %tobool177, true
  %lnot180 = xor i1 %lnot178, true
  %lnot182 = xor i1 %lnot180, true
  %lnot.ext183 = zext i1 %lnot182 to i32
  %conv184 = sext i32 %lnot.ext183 to i64
  %expval185 = call i64 @llvm.expect.i64(i64 %conv184, i64 0)
  %tobool186 = icmp ne i64 %expval185, 0
  br i1 %tobool186, label %if.then187, label %if.end188

if.then187:                                       ; preds = %if.end175
  %104 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %104, ptr %__pyx_filename, align 8, !tbaa !5
  %105 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %106 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20678, ptr %__pyx_clineno, align 4, !tbaa !9
  %107 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end188:                                        ; preds = %if.end175
  %108 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %109 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  call void @__Pyx_CyFunction_SetDefaultsTuple(ptr noundef %108, ptr noundef %109)
  %110 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %111 = load ptr, ptr @__pyx_n_s_float, align 8, !tbaa !5
  %112 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call189 = call i32 @PyDict_SetItem(ptr noundef %110, ptr noundef %111, ptr noundef %112)
  %cmp190 = icmp slt i32 %call189, 0
  br i1 %cmp190, label %if.then192, label %if.end193

if.then192:                                       ; preds = %if.end188
  %113 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %113, ptr %__pyx_filename, align 8, !tbaa !5
  %114 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %115 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20681, ptr %__pyx_clineno, align 4, !tbaa !9
  %116 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end193:                                        ; preds = %if.end188
  %117 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %117)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %118 = load ptr, ptr @__pyx_n_s_minibatch_update_dense, align 8, !tbaa !5
  %119 = load ptr, ptr @__pyx_n_s_sklearn_cluster__k_means_minibat_2, align 8, !tbaa !5
  %120 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %121 = load ptr, ptr @__pyx_codeobj__25, align 8, !tbaa !5
  %call194 = call ptr @__pyx_FusedFunction_New(ptr noundef @__pyx_fuse_1__pyx_mdef_7sklearn_7cluster_18_k_means_minibatch_7_minibatch_update_dense, i32 noundef 0, ptr noundef %118, ptr noundef null, ptr noundef %119, ptr noundef %120, ptr noundef %121)
  store ptr %call194, ptr %__pyx_t_2, align 8, !tbaa !5
  %122 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool195 = icmp ne ptr %122, null
  %lnot196 = xor i1 %tobool195, true
  %lnot198 = xor i1 %lnot196, true
  %lnot200 = xor i1 %lnot198, true
  %lnot.ext201 = zext i1 %lnot200 to i32
  %conv202 = sext i32 %lnot.ext201 to i64
  %expval203 = call i64 @llvm.expect.i64(i64 %conv202, i64 0)
  %tobool204 = icmp ne i64 %expval203, 0
  br i1 %tobool204, label %if.then205, label %if.end206

if.then205:                                       ; preds = %if.end193
  %123 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %123, ptr %__pyx_filename, align 8, !tbaa !5
  %124 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %125 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20683, ptr %__pyx_clineno, align 4, !tbaa !9
  %126 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end206:                                        ; preds = %if.end193
  %127 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %128 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  call void @__Pyx_CyFunction_SetDefaultsTuple(ptr noundef %127, ptr noundef %128)
  %129 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %130 = load ptr, ptr @__pyx_n_s_double, align 8, !tbaa !5
  %131 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call207 = call i32 @PyDict_SetItem(ptr noundef %129, ptr noundef %130, ptr noundef %131)
  %cmp208 = icmp slt i32 %call207, 0
  br i1 %cmp208, label %if.then210, label %if.end211

if.then210:                                       ; preds = %if.end206
  %132 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %132, ptr %__pyx_filename, align 8, !tbaa !5
  %133 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %134 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20686, ptr %__pyx_clineno, align 4, !tbaa !9
  %135 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end211:                                        ; preds = %if.end206
  %136 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %136)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %137 = load ptr, ptr @__pyx_n_s_minibatch_update_dense, align 8, !tbaa !5
  %138 = load ptr, ptr @__pyx_n_s_sklearn_cluster__k_means_minibat_2, align 8, !tbaa !5
  %139 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %140 = load ptr, ptr @__pyx_codeobj__25, align 8, !tbaa !5
  %call212 = call ptr @__pyx_FusedFunction_New(ptr noundef @__pyx_mdef_7sklearn_7cluster_18_k_means_minibatch_1_minibatch_update_dense, i32 noundef 0, ptr noundef %137, ptr noundef null, ptr noundef %138, ptr noundef %139, ptr noundef %140)
  store ptr %call212, ptr %__pyx_t_2, align 8, !tbaa !5
  %141 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool213 = icmp ne ptr %141, null
  %lnot214 = xor i1 %tobool213, true
  %lnot216 = xor i1 %lnot214, true
  %lnot218 = xor i1 %lnot216, true
  %lnot.ext219 = zext i1 %lnot218 to i32
  %conv220 = sext i32 %lnot.ext219 to i64
  %expval221 = call i64 @llvm.expect.i64(i64 %conv220, i64 0)
  %tobool222 = icmp ne i64 %expval221, 0
  br i1 %tobool222, label %if.then223, label %if.end224

if.then223:                                       ; preds = %if.end211
  %142 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %142, ptr %__pyx_filename, align 8, !tbaa !5
  %143 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %144 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20688, ptr %__pyx_clineno, align 4, !tbaa !9
  %145 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end224:                                        ; preds = %if.end211
  %146 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %147 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  call void @__Pyx_CyFunction_SetDefaultsTuple(ptr noundef %146, ptr noundef %147)
  %148 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %149 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %__signatures__ = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %149, i32 0, i32 1
  store ptr %148, ptr %__signatures__, align 8, !tbaa !11
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %150 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %151 = load ptr, ptr @__pyx_n_s_minibatch_update_dense, align 8, !tbaa !5
  %152 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call225 = call i32 @PyDict_SetItem(ptr noundef %150, ptr noundef %151, ptr noundef %152)
  %cmp226 = icmp slt i32 %call225, 0
  br i1 %cmp226, label %if.then228, label %if.end229

if.then228:                                       ; preds = %if.end224
  %153 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %153, ptr %__pyx_filename, align 8, !tbaa !5
  %154 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %155 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20694, ptr %__pyx_clineno, align 4, !tbaa !9
  %156 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end229:                                        ; preds = %if.end224
  %157 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %157)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %call230 = call ptr @PyDict_New()
  store ptr %call230, ptr %__pyx_t_2, align 8, !tbaa !5
  %158 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool231 = icmp ne ptr %158, null
  %lnot232 = xor i1 %tobool231, true
  %lnot234 = xor i1 %lnot232, true
  %lnot236 = xor i1 %lnot234, true
  %lnot.ext237 = zext i1 %lnot236 to i32
  %conv238 = sext i32 %lnot.ext237 to i64
  %expval239 = call i64 @llvm.expect.i64(i64 %conv238, i64 0)
  %tobool240 = icmp ne i64 %expval239, 0
  br i1 %tobool240, label %if.then241, label %if.end242

if.then241:                                       ; preds = %if.end229
  %159 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %159, ptr %__pyx_filename, align 8, !tbaa !5
  %160 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %161 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20704, ptr %__pyx_clineno, align 4, !tbaa !9
  %162 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end242:                                        ; preds = %if.end229
  %163 = load ptr, ptr @__pyx_n_s_minibatch_update_sparse, align 8, !tbaa !5
  %164 = load ptr, ptr @__pyx_n_s_sklearn_cluster__k_means_minibat_2, align 8, !tbaa !5
  %165 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %166 = load ptr, ptr @__pyx_codeobj__27, align 8, !tbaa !5
  %call243 = call ptr @__pyx_FusedFunction_New(ptr noundef @__pyx_fuse_0__pyx_mdef_7sklearn_7cluster_18_k_means_minibatch_11_minibatch_update_sparse, i32 noundef 0, ptr noundef %163, ptr noundef null, ptr noundef %164, ptr noundef %165, ptr noundef %166)
  store ptr %call243, ptr %__pyx_t_1, align 8, !tbaa !5
  %167 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool244 = icmp ne ptr %167, null
  %lnot245 = xor i1 %tobool244, true
  %lnot247 = xor i1 %lnot245, true
  %lnot249 = xor i1 %lnot247, true
  %lnot.ext250 = zext i1 %lnot249 to i32
  %conv251 = sext i32 %lnot.ext250 to i64
  %expval252 = call i64 @llvm.expect.i64(i64 %conv251, i64 0)
  %tobool253 = icmp ne i64 %expval252, 0
  br i1 %tobool253, label %if.then254, label %if.end255

if.then254:                                       ; preds = %if.end242
  %168 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %168, ptr %__pyx_filename, align 8, !tbaa !5
  %169 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %170 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20706, ptr %__pyx_clineno, align 4, !tbaa !9
  %171 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end255:                                        ; preds = %if.end242
  %172 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %173 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  call void @__Pyx_CyFunction_SetDefaultsTuple(ptr noundef %172, ptr noundef %173)
  %174 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %175 = load ptr, ptr @__pyx_n_s_float, align 8, !tbaa !5
  %176 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call256 = call i32 @PyDict_SetItem(ptr noundef %174, ptr noundef %175, ptr noundef %176)
  %cmp257 = icmp slt i32 %call256, 0
  br i1 %cmp257, label %if.then259, label %if.end260

if.then259:                                       ; preds = %if.end255
  %177 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %177, ptr %__pyx_filename, align 8, !tbaa !5
  %178 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %179 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20709, ptr %__pyx_clineno, align 4, !tbaa !9
  %180 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end260:                                        ; preds = %if.end255
  %181 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %181)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %182 = load ptr, ptr @__pyx_n_s_minibatch_update_sparse, align 8, !tbaa !5
  %183 = load ptr, ptr @__pyx_n_s_sklearn_cluster__k_means_minibat_2, align 8, !tbaa !5
  %184 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %185 = load ptr, ptr @__pyx_codeobj__27, align 8, !tbaa !5
  %call261 = call ptr @__pyx_FusedFunction_New(ptr noundef @__pyx_fuse_1__pyx_mdef_7sklearn_7cluster_18_k_means_minibatch_13_minibatch_update_sparse, i32 noundef 0, ptr noundef %182, ptr noundef null, ptr noundef %183, ptr noundef %184, ptr noundef %185)
  store ptr %call261, ptr %__pyx_t_1, align 8, !tbaa !5
  %186 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool262 = icmp ne ptr %186, null
  %lnot263 = xor i1 %tobool262, true
  %lnot265 = xor i1 %lnot263, true
  %lnot267 = xor i1 %lnot265, true
  %lnot.ext268 = zext i1 %lnot267 to i32
  %conv269 = sext i32 %lnot.ext268 to i64
  %expval270 = call i64 @llvm.expect.i64(i64 %conv269, i64 0)
  %tobool271 = icmp ne i64 %expval270, 0
  br i1 %tobool271, label %if.then272, label %if.end273

if.then272:                                       ; preds = %if.end260
  %187 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %187, ptr %__pyx_filename, align 8, !tbaa !5
  %188 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %189 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20711, ptr %__pyx_clineno, align 4, !tbaa !9
  %190 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end273:                                        ; preds = %if.end260
  %191 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %192 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  call void @__Pyx_CyFunction_SetDefaultsTuple(ptr noundef %191, ptr noundef %192)
  %193 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %194 = load ptr, ptr @__pyx_n_s_double, align 8, !tbaa !5
  %195 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call274 = call i32 @PyDict_SetItem(ptr noundef %193, ptr noundef %194, ptr noundef %195)
  %cmp275 = icmp slt i32 %call274, 0
  br i1 %cmp275, label %if.then277, label %if.end278

if.then277:                                       ; preds = %if.end273
  %196 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %196, ptr %__pyx_filename, align 8, !tbaa !5
  %197 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %198 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20714, ptr %__pyx_clineno, align 4, !tbaa !9
  %199 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end278:                                        ; preds = %if.end273
  %200 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %200)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %201 = load ptr, ptr @__pyx_n_s_minibatch_update_sparse, align 8, !tbaa !5
  %202 = load ptr, ptr @__pyx_n_s_sklearn_cluster__k_means_minibat_2, align 8, !tbaa !5
  %203 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %204 = load ptr, ptr @__pyx_codeobj__27, align 8, !tbaa !5
  %call279 = call ptr @__pyx_FusedFunction_New(ptr noundef @__pyx_mdef_7sklearn_7cluster_18_k_means_minibatch_3_minibatch_update_sparse, i32 noundef 0, ptr noundef %201, ptr noundef null, ptr noundef %202, ptr noundef %203, ptr noundef %204)
  store ptr %call279, ptr %__pyx_t_1, align 8, !tbaa !5
  %205 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool280 = icmp ne ptr %205, null
  %lnot281 = xor i1 %tobool280, true
  %lnot283 = xor i1 %lnot281, true
  %lnot285 = xor i1 %lnot283, true
  %lnot.ext286 = zext i1 %lnot285 to i32
  %conv287 = sext i32 %lnot.ext286 to i64
  %expval288 = call i64 @llvm.expect.i64(i64 %conv287, i64 0)
  %tobool289 = icmp ne i64 %expval288, 0
  br i1 %tobool289, label %if.then290, label %if.end291

if.then290:                                       ; preds = %if.end278
  %206 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %206, ptr %__pyx_filename, align 8, !tbaa !5
  %207 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %208 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20716, ptr %__pyx_clineno, align 4, !tbaa !9
  %209 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end291:                                        ; preds = %if.end278
  %210 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %211 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  call void @__Pyx_CyFunction_SetDefaultsTuple(ptr noundef %210, ptr noundef %211)
  %212 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %213 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %__signatures__292 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %213, i32 0, i32 1
  store ptr %212, ptr %__signatures__292, align 8, !tbaa !11
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %214 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %215 = load ptr, ptr @__pyx_n_s_minibatch_update_sparse, align 8, !tbaa !5
  %216 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call293 = call i32 @PyDict_SetItem(ptr noundef %214, ptr noundef %215, ptr noundef %216)
  %cmp294 = icmp slt i32 %call293, 0
  br i1 %cmp294, label %if.then296, label %if.end297

if.then296:                                       ; preds = %if.end291
  %217 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %217, ptr %__pyx_filename, align 8, !tbaa !5
  %218 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %219 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20722, ptr %__pyx_clineno, align 4, !tbaa !9
  %220 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end297:                                        ; preds = %if.end291
  %221 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %221)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %call298 = call ptr @PyDict_New()
  store ptr %call298, ptr %__pyx_t_1, align 8, !tbaa !5
  %222 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool299 = icmp ne ptr %222, null
  %lnot300 = xor i1 %tobool299, true
  %lnot302 = xor i1 %lnot300, true
  %lnot304 = xor i1 %lnot302, true
  %lnot.ext305 = zext i1 %lnot304 to i32
  %conv306 = sext i32 %lnot.ext305 to i64
  %expval307 = call i64 @llvm.expect.i64(i64 %conv306, i64 0)
  %tobool308 = icmp ne i64 %expval307, 0
  br i1 %tobool308, label %if.then309, label %if.end310

if.then309:                                       ; preds = %if.end297
  %223 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %223, ptr %__pyx_filename, align 8, !tbaa !5
  %224 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %225 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20730, ptr %__pyx_clineno, align 4, !tbaa !9
  %226 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end310:                                        ; preds = %if.end297
  %227 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %228 = load ptr, ptr @__pyx_n_s_test, align 8, !tbaa !5
  %229 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call311 = call i32 @PyDict_SetItem(ptr noundef %227, ptr noundef %228, ptr noundef %229)
  %cmp312 = icmp slt i32 %call311, 0
  br i1 %cmp312, label %if.then314, label %if.end315

if.then314:                                       ; preds = %if.end310
  %230 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %230, ptr %__pyx_filename, align 8, !tbaa !5
  %231 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %232 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20732, ptr %__pyx_clineno, align 4, !tbaa !9
  %233 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end315:                                        ; preds = %if.end310
  %234 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %234)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %call316 = call ptr @__pyx_capsule_create(ptr noundef @__pyx_array_getbuffer, ptr noundef @.str.17)
  store ptr %call316, ptr %__pyx_t_1, align 8, !tbaa !5
  %235 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool317 = icmp ne ptr %235, null
  %lnot318 = xor i1 %tobool317, true
  %lnot320 = xor i1 %lnot318, true
  %lnot322 = xor i1 %lnot320, true
  %lnot.ext323 = zext i1 %lnot322 to i32
  %conv324 = sext i32 %lnot.ext323 to i64
  %expval325 = call i64 @llvm.expect.i64(i64 %conv324, i64 0)
  %tobool326 = icmp ne i64 %expval325, 0
  br i1 %tobool326, label %if.then327, label %if.end328

if.then327:                                       ; preds = %if.end315
  %236 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %236, ptr %__pyx_filename, align 8, !tbaa !5
  %237 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 210, ptr %__pyx_lineno, align 4, !tbaa !9
  %238 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20742, ptr %__pyx_clineno, align 4, !tbaa !9
  %239 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end328:                                        ; preds = %if.end315
  %240 = load ptr, ptr @__pyx_array_type, align 8, !tbaa !5
  %tp_dict = getelementptr inbounds %struct._typeobject, ptr %240, i32 0, i32 31
  %241 = load ptr, ptr %tp_dict, align 8, !tbaa !17
  %242 = load ptr, ptr @__pyx_n_s_pyx_getbuffer, align 8, !tbaa !5
  %243 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call329 = call i32 @PyDict_SetItem(ptr noundef %241, ptr noundef %242, ptr noundef %243)
  %cmp330 = icmp slt i32 %call329, 0
  br i1 %cmp330, label %if.then332, label %if.end333

if.then332:                                       ; preds = %if.end328
  %244 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %244, ptr %__pyx_filename, align 8, !tbaa !5
  %245 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 210, ptr %__pyx_lineno, align 4, !tbaa !9
  %246 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20744, ptr %__pyx_clineno, align 4, !tbaa !9
  %247 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end333:                                        ; preds = %if.end328
  %248 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %248)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %249 = load ptr, ptr @__pyx_array_type, align 8, !tbaa !5
  call void @PyType_Modified(ptr noundef %249)
  %250 = load ptr, ptr @__pyx_MemviewEnum_type, align 8, !tbaa !5
  %251 = load ptr, ptr @__pyx_tuple__28, align 8, !tbaa !5
  %call334 = call ptr @__Pyx_PyObject_Call(ptr noundef %250, ptr noundef %251, ptr noundef null)
  store ptr %call334, ptr %__pyx_t_1, align 8, !tbaa !5
  %252 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool335 = icmp ne ptr %252, null
  %lnot336 = xor i1 %tobool335, true
  %lnot338 = xor i1 %lnot336, true
  %lnot340 = xor i1 %lnot338, true
  %lnot.ext341 = zext i1 %lnot340 to i32
  %conv342 = sext i32 %lnot.ext341 to i64
  %expval343 = call i64 @llvm.expect.i64(i64 %conv342, i64 0)
  %tobool344 = icmp ne i64 %expval343, 0
  br i1 %tobool344, label %if.then345, label %if.end346

if.then345:                                       ; preds = %if.end333
  %253 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %253, ptr %__pyx_filename, align 8, !tbaa !5
  %254 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 287, ptr %__pyx_lineno, align 4, !tbaa !9
  %255 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20755, ptr %__pyx_clineno, align 4, !tbaa !9
  %256 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end346:                                        ; preds = %if.end333
  br label %do.body

do.body:                                          ; preds = %if.end346
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %257 = load ptr, ptr @generic, align 8, !tbaa !5
  store ptr %257, ptr %tmp, align 8, !tbaa !5
  %258 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %258, ptr @generic, align 8, !tbaa !5
  %259 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %259)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %260 = load ptr, ptr @__pyx_MemviewEnum_type, align 8, !tbaa !5
  %261 = load ptr, ptr @__pyx_tuple__29, align 8, !tbaa !5
  %call347 = call ptr @__Pyx_PyObject_Call(ptr noundef %260, ptr noundef %261, ptr noundef null)
  store ptr %call347, ptr %__pyx_t_1, align 8, !tbaa !5
  %262 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool348 = icmp ne ptr %262, null
  %lnot349 = xor i1 %tobool348, true
  %lnot351 = xor i1 %lnot349, true
  %lnot353 = xor i1 %lnot351, true
  %lnot.ext354 = zext i1 %lnot353 to i32
  %conv355 = sext i32 %lnot.ext354 to i64
  %expval356 = call i64 @llvm.expect.i64(i64 %conv355, i64 0)
  %tobool357 = icmp ne i64 %expval356, 0
  br i1 %tobool357, label %if.then358, label %if.end359

if.then358:                                       ; preds = %do.end
  %263 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %263, ptr %__pyx_filename, align 8, !tbaa !5
  %264 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 288, ptr %__pyx_lineno, align 4, !tbaa !9
  %265 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20769, ptr %__pyx_clineno, align 4, !tbaa !9
  %266 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end359:                                        ; preds = %do.end
  br label %do.body360

do.body360:                                       ; preds = %if.end359
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp361) #13
  %267 = load ptr, ptr @strided, align 8, !tbaa !5
  store ptr %267, ptr %tmp361, align 8, !tbaa !5
  %268 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %268, ptr @strided, align 8, !tbaa !5
  %269 = load ptr, ptr %tmp361, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %269)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp361) #13
  br label %do.cond362

do.cond362:                                       ; preds = %do.body360
  br label %do.end363

do.end363:                                        ; preds = %do.cond362
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %270 = load ptr, ptr @__pyx_MemviewEnum_type, align 8, !tbaa !5
  %271 = load ptr, ptr @__pyx_tuple__30, align 8, !tbaa !5
  %call364 = call ptr @__Pyx_PyObject_Call(ptr noundef %270, ptr noundef %271, ptr noundef null)
  store ptr %call364, ptr %__pyx_t_1, align 8, !tbaa !5
  %272 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool365 = icmp ne ptr %272, null
  %lnot366 = xor i1 %tobool365, true
  %lnot368 = xor i1 %lnot366, true
  %lnot370 = xor i1 %lnot368, true
  %lnot.ext371 = zext i1 %lnot370 to i32
  %conv372 = sext i32 %lnot.ext371 to i64
  %expval373 = call i64 @llvm.expect.i64(i64 %conv372, i64 0)
  %tobool374 = icmp ne i64 %expval373, 0
  br i1 %tobool374, label %if.then375, label %if.end376

if.then375:                                       ; preds = %do.end363
  %273 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %273, ptr %__pyx_filename, align 8, !tbaa !5
  %274 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 289, ptr %__pyx_lineno, align 4, !tbaa !9
  %275 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20783, ptr %__pyx_clineno, align 4, !tbaa !9
  %276 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end376:                                        ; preds = %do.end363
  br label %do.body377

do.body377:                                       ; preds = %if.end376
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp378) #13
  %277 = load ptr, ptr @indirect, align 8, !tbaa !5
  store ptr %277, ptr %tmp378, align 8, !tbaa !5
  %278 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %278, ptr @indirect, align 8, !tbaa !5
  %279 = load ptr, ptr %tmp378, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %279)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp378) #13
  br label %do.cond379

do.cond379:                                       ; preds = %do.body377
  br label %do.end380

do.end380:                                        ; preds = %do.cond379
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %280 = load ptr, ptr @__pyx_MemviewEnum_type, align 8, !tbaa !5
  %281 = load ptr, ptr @__pyx_tuple__31, align 8, !tbaa !5
  %call381 = call ptr @__Pyx_PyObject_Call(ptr noundef %280, ptr noundef %281, ptr noundef null)
  store ptr %call381, ptr %__pyx_t_1, align 8, !tbaa !5
  %282 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool382 = icmp ne ptr %282, null
  %lnot383 = xor i1 %tobool382, true
  %lnot385 = xor i1 %lnot383, true
  %lnot387 = xor i1 %lnot385, true
  %lnot.ext388 = zext i1 %lnot387 to i32
  %conv389 = sext i32 %lnot.ext388 to i64
  %expval390 = call i64 @llvm.expect.i64(i64 %conv389, i64 0)
  %tobool391 = icmp ne i64 %expval390, 0
  br i1 %tobool391, label %if.then392, label %if.end393

if.then392:                                       ; preds = %do.end380
  %283 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %283, ptr %__pyx_filename, align 8, !tbaa !5
  %284 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 292, ptr %__pyx_lineno, align 4, !tbaa !9
  %285 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20797, ptr %__pyx_clineno, align 4, !tbaa !9
  %286 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end393:                                        ; preds = %do.end380
  br label %do.body394

do.body394:                                       ; preds = %if.end393
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp395) #13
  %287 = load ptr, ptr @contiguous, align 8, !tbaa !5
  store ptr %287, ptr %tmp395, align 8, !tbaa !5
  %288 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %288, ptr @contiguous, align 8, !tbaa !5
  %289 = load ptr, ptr %tmp395, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %289)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp395) #13
  br label %do.cond396

do.cond396:                                       ; preds = %do.body394
  br label %do.end397

do.end397:                                        ; preds = %do.cond396
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %290 = load ptr, ptr @__pyx_MemviewEnum_type, align 8, !tbaa !5
  %291 = load ptr, ptr @__pyx_tuple__32, align 8, !tbaa !5
  %call398 = call ptr @__Pyx_PyObject_Call(ptr noundef %290, ptr noundef %291, ptr noundef null)
  store ptr %call398, ptr %__pyx_t_1, align 8, !tbaa !5
  %292 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool399 = icmp ne ptr %292, null
  %lnot400 = xor i1 %tobool399, true
  %lnot402 = xor i1 %lnot400, true
  %lnot404 = xor i1 %lnot402, true
  %lnot.ext405 = zext i1 %lnot404 to i32
  %conv406 = sext i32 %lnot.ext405 to i64
  %expval407 = call i64 @llvm.expect.i64(i64 %conv406, i64 0)
  %tobool408 = icmp ne i64 %expval407, 0
  br i1 %tobool408, label %if.then409, label %if.end410

if.then409:                                       ; preds = %do.end397
  %293 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %293, ptr %__pyx_filename, align 8, !tbaa !5
  %294 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 293, ptr %__pyx_lineno, align 4, !tbaa !9
  %295 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20811, ptr %__pyx_clineno, align 4, !tbaa !9
  %296 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end410:                                        ; preds = %do.end397
  br label %do.body411

do.body411:                                       ; preds = %if.end410
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp412) #13
  %297 = load ptr, ptr @indirect_contiguous, align 8, !tbaa !5
  store ptr %297, ptr %tmp412, align 8, !tbaa !5
  %298 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %298, ptr @indirect_contiguous, align 8, !tbaa !5
  %299 = load ptr, ptr %tmp412, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %299)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp412) #13
  br label %do.cond413

do.cond413:                                       ; preds = %do.body411
  br label %do.end414

do.end414:                                        ; preds = %do.cond413
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  store i32 0, ptr @__pyx_memoryview_thread_locks_used, align 4, !tbaa !9
  %call415 = call ptr @PyThread_allocate_lock()
  store ptr %call415, ptr @__pyx_pymod_exec__k_means_minibatch.__pyx_t_3, align 16, !tbaa !5
  %call416 = call ptr @PyThread_allocate_lock()
  store ptr %call416, ptr getelementptr inbounds ([8 x ptr], ptr @__pyx_pymod_exec__k_means_minibatch.__pyx_t_3, i64 0, i64 1), align 8, !tbaa !5
  %call417 = call ptr @PyThread_allocate_lock()
  store ptr %call417, ptr getelementptr inbounds ([8 x ptr], ptr @__pyx_pymod_exec__k_means_minibatch.__pyx_t_3, i64 0, i64 2), align 16, !tbaa !5
  %call418 = call ptr @PyThread_allocate_lock()
  store ptr %call418, ptr getelementptr inbounds ([8 x ptr], ptr @__pyx_pymod_exec__k_means_minibatch.__pyx_t_3, i64 0, i64 3), align 8, !tbaa !5
  %call419 = call ptr @PyThread_allocate_lock()
  store ptr %call419, ptr getelementptr inbounds ([8 x ptr], ptr @__pyx_pymod_exec__k_means_minibatch.__pyx_t_3, i64 0, i64 4), align 16, !tbaa !5
  %call420 = call ptr @PyThread_allocate_lock()
  store ptr %call420, ptr getelementptr inbounds ([8 x ptr], ptr @__pyx_pymod_exec__k_means_minibatch.__pyx_t_3, i64 0, i64 5), align 8, !tbaa !5
  %call421 = call ptr @PyThread_allocate_lock()
  store ptr %call421, ptr getelementptr inbounds ([8 x ptr], ptr @__pyx_pymod_exec__k_means_minibatch.__pyx_t_3, i64 0, i64 6), align 16, !tbaa !5
  %call422 = call ptr @PyThread_allocate_lock()
  store ptr %call422, ptr getelementptr inbounds ([8 x ptr], ptr @__pyx_pymod_exec__k_means_minibatch.__pyx_t_3, i64 0, i64 7), align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 @__pyx_memoryview_thread_locks, ptr align 16 @__pyx_pymod_exec__k_means_minibatch.__pyx_t_3, i64 64, i1 false)
  %call423 = call ptr @__pyx_capsule_create(ptr noundef @__pyx_memoryview_getbuffer, ptr noundef @.str.17)
  store ptr %call423, ptr %__pyx_t_1, align 8, !tbaa !5
  %300 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool424 = icmp ne ptr %300, null
  %lnot425 = xor i1 %tobool424, true
  %lnot427 = xor i1 %lnot425, true
  %lnot429 = xor i1 %lnot427, true
  %lnot.ext430 = zext i1 %lnot429 to i32
  %conv431 = sext i32 %lnot.ext430 to i64
  %expval432 = call i64 @llvm.expect.i64(i64 %conv431, i64 0)
  %tobool433 = icmp ne i64 %expval432, 0
  br i1 %tobool433, label %if.then434, label %if.end435

if.then434:                                       ; preds = %do.end414
  %301 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %301, ptr %__pyx_filename, align 8, !tbaa !5
  %302 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 551, ptr %__pyx_lineno, align 4, !tbaa !9
  %303 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20851, ptr %__pyx_clineno, align 4, !tbaa !9
  %304 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end435:                                        ; preds = %do.end414
  %305 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  %tp_dict436 = getelementptr inbounds %struct._typeobject, ptr %305, i32 0, i32 31
  %306 = load ptr, ptr %tp_dict436, align 8, !tbaa !17
  %307 = load ptr, ptr @__pyx_n_s_pyx_getbuffer, align 8, !tbaa !5
  %308 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call437 = call i32 @PyDict_SetItem(ptr noundef %306, ptr noundef %307, ptr noundef %308)
  %cmp438 = icmp slt i32 %call437, 0
  br i1 %cmp438, label %if.then440, label %if.end441

if.then440:                                       ; preds = %if.end435
  %309 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %309, ptr %__pyx_filename, align 8, !tbaa !5
  %310 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 551, ptr %__pyx_lineno, align 4, !tbaa !9
  %311 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20853, ptr %__pyx_clineno, align 4, !tbaa !9
  %312 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end441:                                        ; preds = %if.end435
  %313 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %313)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %314 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  call void @PyType_Modified(ptr noundef %314)
  %call442 = call ptr @__pyx_capsule_create(ptr noundef @__pyx_memoryview_getbuffer, ptr noundef @.str.17)
  store ptr %call442, ptr %__pyx_t_1, align 8, !tbaa !5
  %315 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool443 = icmp ne ptr %315, null
  %lnot444 = xor i1 %tobool443, true
  %lnot446 = xor i1 %lnot444, true
  %lnot448 = xor i1 %lnot446, true
  %lnot.ext449 = zext i1 %lnot448 to i32
  %conv450 = sext i32 %lnot.ext449 to i64
  %expval451 = call i64 @llvm.expect.i64(i64 %conv450, i64 0)
  %tobool452 = icmp ne i64 %expval451, 0
  br i1 %tobool452, label %if.then453, label %if.end454

if.then453:                                       ; preds = %if.end441
  %316 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %316, ptr %__pyx_filename, align 8, !tbaa !5
  %317 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 997, ptr %__pyx_lineno, align 4, !tbaa !9
  %318 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20864, ptr %__pyx_clineno, align 4, !tbaa !9
  %319 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end454:                                        ; preds = %if.end441
  %320 = load ptr, ptr @__pyx_memoryviewslice_type, align 8, !tbaa !5
  %tp_dict455 = getelementptr inbounds %struct._typeobject, ptr %320, i32 0, i32 31
  %321 = load ptr, ptr %tp_dict455, align 8, !tbaa !17
  %322 = load ptr, ptr @__pyx_n_s_pyx_getbuffer, align 8, !tbaa !5
  %323 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call456 = call i32 @PyDict_SetItem(ptr noundef %321, ptr noundef %322, ptr noundef %323)
  %cmp457 = icmp slt i32 %call456, 0
  br i1 %cmp457, label %if.then459, label %if.end460

if.then459:                                       ; preds = %if.end454
  %324 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %324, ptr %__pyx_filename, align 8, !tbaa !5
  %325 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 997, ptr %__pyx_lineno, align 4, !tbaa !9
  %326 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20866, ptr %__pyx_clineno, align 4, !tbaa !9
  %327 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end460:                                        ; preds = %if.end454
  %328 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %328)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %329 = load ptr, ptr @__pyx_memoryviewslice_type, align 8, !tbaa !5
  call void @PyType_Modified(ptr noundef %329)
  %330 = load ptr, ptr @__pyx_n_s_View_MemoryView, align 8, !tbaa !5
  %call461 = call ptr @PyCMethod_New(ptr noundef @__pyx_mdef_15View_dot_MemoryView_1__pyx_unpickle_Enum, ptr noundef null, ptr noundef %330, ptr noundef null)
  store ptr %call461, ptr %__pyx_t_1, align 8, !tbaa !5
  %331 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool462 = icmp ne ptr %331, null
  %lnot463 = xor i1 %tobool462, true
  %lnot465 = xor i1 %lnot463, true
  %lnot467 = xor i1 %lnot465, true
  %lnot.ext468 = zext i1 %lnot467 to i32
  %conv469 = sext i32 %lnot.ext468 to i64
  %expval470 = call i64 @llvm.expect.i64(i64 %conv469, i64 0)
  %tobool471 = icmp ne i64 %expval470, 0
  br i1 %tobool471, label %if.then472, label %if.end473

if.then472:                                       ; preds = %if.end460
  %332 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %332, ptr %__pyx_filename, align 8, !tbaa !5
  %333 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %334 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20875, ptr %__pyx_clineno, align 4, !tbaa !9
  %335 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end473:                                        ; preds = %if.end460
  %336 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %337 = load ptr, ptr @__pyx_n_s_pyx_unpickle_Enum, align 8, !tbaa !5
  %338 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call474 = call i32 @PyDict_SetItem(ptr noundef %336, ptr noundef %337, ptr noundef %338)
  %cmp475 = icmp slt i32 %call474, 0
  br i1 %cmp475, label %if.then477, label %if.end478

if.then477:                                       ; preds = %if.end473
  %339 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %339, ptr %__pyx_filename, align 8, !tbaa !5
  %340 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %341 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20877, ptr %__pyx_clineno, align 4, !tbaa !9
  %342 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end478:                                        ; preds = %if.end473
  %343 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %343)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %cleanup, %if.then477, %if.then472, %if.then459, %if.then453, %if.then440, %if.then434, %if.then409, %if.then392, %if.then375, %if.then358, %if.then345, %if.then332, %if.then327, %if.then314, %if.then309, %if.then296, %if.then290, %if.then277, %if.then272, %if.then259, %if.then254, %if.then241, %if.then228, %if.then223, %if.then210, %if.then205, %if.then192, %if.then187, %if.then174, %if.then158, %if.then143, %if.then138, %if.then103, %if.then96, %if.then91, %if.then86, %if.then73, %if.then60, %if.then47, %if.then42, %if.then37, %if.then24, %if.then11, %if.then4
  %344 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %344)
  %345 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %345)
  %346 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  %tobool479 = icmp ne ptr %346, null
  br i1 %tobool479, label %if.then480, label %if.else

if.then480:                                       ; preds = %__pyx_L1_error
  %347 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %tobool481 = icmp ne ptr %347, null
  br i1 %tobool481, label %if.then482, label %if.end483

if.then482:                                       ; preds = %if.then480
  %348 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %349 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %350 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.18, i32 noundef %348, i32 noundef %349, ptr noundef %350)
  br label %if.end483

if.end483:                                        ; preds = %if.then482, %if.then480
  br label %do.body484

do.body484:                                       ; preds = %if.end483
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #13
  %351 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  store ptr %351, ptr %_py_tmp, align 8, !tbaa !5
  %352 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  %cmp485 = icmp ne ptr %352, null
  br i1 %cmp485, label %if.then487, label %if.end488

if.then487:                                       ; preds = %do.body484
  store ptr null, ptr @__pyx_m, align 8, !tbaa !5
  %353 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %353)
  br label %if.end488

if.end488:                                        ; preds = %if.then487, %do.body484
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #13
  br label %do.cond489

do.cond489:                                       ; preds = %if.end488
  br label %do.end490

do.end490:                                        ; preds = %do.cond489
  br label %if.end495

if.else:                                          ; preds = %__pyx_L1_error
  %call491 = call ptr @PyErr_Occurred()
  %tobool492 = icmp ne ptr %call491, null
  br i1 %tobool492, label %if.end494, label %if.then493

if.then493:                                       ; preds = %if.else
  %354 = load ptr, ptr @PyExc_ImportError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %354, ptr noundef @.str.18)
  br label %if.end494

if.end494:                                        ; preds = %if.then493, %if.else
  br label %if.end495

if.end495:                                        ; preds = %if.end494, %do.end490
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %if.end495, %if.end478
  %355 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  %cmp496 = icmp ne ptr %355, null
  %356 = zext i1 %cmp496 to i64
  %cond = select i1 %cmp496, i32 0, i32 -1
  store i32 %cond, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup498

cleanup498:                                       ; preds = %__pyx_L0, %cleanup, %if.end, %if.then1
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  %357 = load i32, ptr %retval, align 4
  ret i32 %357
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_check_single_interpreter() #0 {
entry:
  %retval = alloca i32, align 4
  %current_id = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %current_id) #13
  %call = call ptr @PyThreadState_Get()
  %interp = getelementptr inbounds %struct._ts, ptr %call, i32 0, i32 2
  %0 = load ptr, ptr %interp, align 8, !tbaa !20
  %call1 = call i64 @PyInterpreterState_GetID(ptr noundef %0)
  store i64 %call1, ptr %current_id, align 8, !tbaa !27
  %1 = load i64, ptr @__Pyx_check_single_interpreter.main_interpreter_id, align 8, !tbaa !27
  %cmp = icmp eq i64 %1, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %current_id, align 8, !tbaa !27
  store i64 %2, ptr @__Pyx_check_single_interpreter.main_interpreter_id, align 8, !tbaa !27
  %3 = load i64, ptr %current_id, align 8, !tbaa !27
  %cmp2 = icmp eq i64 %3, -1
  %lnot = xor i1 %cmp2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  %4 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 -1, i32 0
  store i32 %cond, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.else:                                          ; preds = %entry
  %5 = load i64, ptr @__Pyx_check_single_interpreter.main_interpreter_id, align 8, !tbaa !27
  %6 = load i64, ptr %current_id, align 8, !tbaa !27
  %cmp4 = icmp ne i64 %5, %6
  %lnot6 = xor i1 %cmp4, true
  %lnot8 = xor i1 %lnot6, true
  %lnot.ext9 = zext i1 %lnot8 to i32
  %conv10 = sext i32 %lnot.ext9 to i64
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0)
  %tobool12 = icmp ne i64 %expval11, 0
  br i1 %tobool12, label %if.then13, label %if.end

if.then13:                                        ; preds = %if.else
  %7 = load ptr, ptr @PyExc_ImportError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %7, ptr noundef @.str.10)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then13, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %current_id) #13
  %8 = load i32, ptr %retval, align 4
  ret i32 %8
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_INCREF(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %ob_refcnt = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 0
  %1 = load i64, ptr %ob_refcnt, align 8, !tbaa !28
  %inc = add i64 %1, 1
  store i64 %inc, ptr %ob_refcnt, align 8, !tbaa !28
  ret void
}

declare ptr @PyObject_GetAttrString(ptr noundef, ptr noundef) #1

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i64 @llvm.expect.i64(i64, i64) #4

declare ptr @PyModule_NewObject(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_DECREF(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %ob_refcnt = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 0
  %1 = load i64, ptr %ob_refcnt, align 8, !tbaa !28
  %dec = add i64 %1, -1
  store i64 %dec, ptr %ob_refcnt, align 8, !tbaa !28
  %cmp = icmp eq i64 %dec, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !tbaa !5
  call void @_Py_Dealloc(ptr noundef %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare ptr @PyModule_GetDict(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_copy_spec_to_module(ptr noundef %spec, ptr noundef %moddict, ptr noundef %from_name, ptr noundef %to_name, i32 noundef %allow_none) #0 {
entry:
  %spec.addr = alloca ptr, align 8
  %moddict.addr = alloca ptr, align 8
  %from_name.addr = alloca ptr, align 8
  %to_name.addr = alloca ptr, align 8
  %allow_none.addr = alloca i32, align 4
  %value = alloca ptr, align 8
  %result = alloca i32, align 4
  store ptr %spec, ptr %spec.addr, align 8, !tbaa !5
  store ptr %moddict, ptr %moddict.addr, align 8, !tbaa !5
  store ptr %from_name, ptr %from_name.addr, align 8, !tbaa !5
  store ptr %to_name, ptr %to_name.addr, align 8, !tbaa !5
  store i32 %allow_none, ptr %allow_none.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #13
  %0 = load ptr, ptr %spec.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %from_name.addr, align 8, !tbaa !5
  %call = call ptr @PyObject_GetAttrString(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %value, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #13
  store i32 0, ptr %result, align 4, !tbaa !9
  %2 = load ptr, ptr %value, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load i32, ptr %allow_none.addr, align 4, !tbaa !9
  %tobool3 = icmp ne i32 %3, 0
  br i1 %tobool3, label %if.then5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %4 = load ptr, ptr %value, align 8, !tbaa !5
  %cmp = icmp ne ptr %4, @_Py_NoneStruct
  br i1 %cmp, label %if.then5, label %if.end

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %5 = load ptr, ptr %moddict.addr, align 8, !tbaa !5
  %6 = load ptr, ptr %to_name.addr, align 8, !tbaa !5
  %7 = load ptr, ptr %value, align 8, !tbaa !5
  %call6 = call i32 @PyDict_SetItemString(ptr noundef %5, ptr noundef %6, ptr noundef %7)
  store i32 %call6, ptr %result, align 4, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %if.then5, %lor.lhs.false
  %8 = load ptr, ptr %value, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %8)
  br label %if.end12

if.else:                                          ; preds = %entry
  %9 = load ptr, ptr @PyExc_AttributeError, align 8, !tbaa !5
  %call7 = call i32 @PyErr_ExceptionMatches(ptr noundef %9)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.then9, label %if.else10

if.then9:                                         ; preds = %if.else
  call void @PyErr_Clear()
  br label %if.end11

if.else10:                                        ; preds = %if.else
  store i32 -1, ptr %result, align 4, !tbaa !9
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.then9
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end
  %10 = load i32, ptr %result, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #13
  ret i32 %10
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_XDECREF(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %cmp = icmp ne ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

declare i64 @PyInterpreterState_GetID(ptr noundef) #1

declare ptr @PyThreadState_Get() #1

declare void @PyErr_SetString(ptr noundef, ptr noundef) #1

declare void @_Py_Dealloc(ptr noundef) #1

declare i32 @PyDict_SetItemString(ptr noundef, ptr noundef, ptr noundef) #1

declare i32 @PyErr_ExceptionMatches(ptr noundef) #1

declare void @PyErr_Clear() #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_check_binary_version() #0 {
entry:
  %retval = alloca i32, align 4
  %ctversion = alloca [5 x i8], align 1
  %same = alloca i32, align 4
  %i = alloca i32, align 4
  %found_dot = alloca i32, align 4
  %rt_from_call = alloca ptr, align 8
  %rtversion = alloca [5 x i8], align 1
  %message = alloca [200 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 5, ptr %ctversion) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %same) #13
  store i32 1, ptr %same, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %found_dot) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %rt_from_call) #13
  %call = call ptr @Py_GetVersion()
  store ptr %call, ptr %rt_from_call, align 8, !tbaa !5
  %arraydecay = getelementptr inbounds [5 x i8], ptr %ctversion, i64 0, i64 0
  %call1 = call i32 (ptr, i64, ptr, ...) @PyOS_snprintf(ptr noundef %arraydecay, i64 noundef 5, ptr noundef @.str.19, i32 noundef 3, i32 noundef 11)
  store i32 0, ptr %found_dot, align 4, !tbaa !9
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, ptr %i, align 4, !tbaa !9
  %cmp = icmp slt i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr [5 x i8], ptr %ctversion, i64 0, i64 %idxprom
  %2 = load i8, ptr %arrayidx, align 1, !tbaa !29
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %3 = load ptr, ptr %rt_from_call, align 8, !tbaa !5
  %4 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr i8, ptr %3, i64 %idxprom2
  %5 = load i8, ptr %arrayidx3, align 1, !tbaa !29
  %conv = sext i8 %5 to i32
  %cmp4 = icmp slt i32 %conv, 48
  br i1 %cmp4, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then
  %6 = load ptr, ptr %rt_from_call, align 8, !tbaa !5
  %7 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom6 = sext i32 %7 to i64
  %arrayidx7 = getelementptr i8, ptr %6, i64 %idxprom6
  %8 = load i8, ptr %arrayidx7, align 1, !tbaa !29
  %conv8 = sext i8 %8 to i32
  %cmp9 = icmp sgt i32 %conv8, 57
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then
  %9 = phi i1 [ true, %if.then ], [ %cmp9, %lor.rhs ]
  %lor.ext = zext i1 %9 to i32
  store i32 %lor.ext, ptr %same, align 4, !tbaa !9
  br label %for.end

if.end:                                           ; preds = %for.body
  %10 = load ptr, ptr %rt_from_call, align 8, !tbaa !5
  %11 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom11 = sext i32 %11 to i64
  %arrayidx12 = getelementptr i8, ptr %10, i64 %idxprom11
  %12 = load i8, ptr %arrayidx12, align 1, !tbaa !29
  %conv13 = sext i8 %12 to i32
  %13 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom14 = sext i32 %13 to i64
  %arrayidx15 = getelementptr [5 x i8], ptr %ctversion, i64 0, i64 %idxprom14
  %14 = load i8, ptr %arrayidx15, align 1, !tbaa !29
  %conv16 = sext i8 %14 to i32
  %cmp17 = icmp ne i32 %conv13, %conv16
  br i1 %cmp17, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end
  store i32 0, ptr %same, align 4, !tbaa !9
  br label %for.end

if.end20:                                         ; preds = %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end20
  %15 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %15, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !30

for.end:                                          ; preds = %if.then19, %lor.end, %for.cond
  %16 = load i32, ptr %same, align 4, !tbaa !9
  %tobool21 = icmp ne i32 %16, 0
  br i1 %tobool21, label %if.end62, label %if.then22

if.then22:                                        ; preds = %for.end
  call void @llvm.lifetime.start.p0(i64 5, ptr %rtversion) #13
  call void @llvm.memset.p0.i64(ptr align 1 %rtversion, i8 0, i64 5, i1 false)
  call void @llvm.lifetime.start.p0(i64 200, ptr %message) #13
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc53, %if.then22
  %17 = load i32, ptr %i, align 4, !tbaa !9
  %cmp24 = icmp slt i32 %17, 4
  br i1 %cmp24, label %for.body26, label %for.end55

for.body26:                                       ; preds = %for.cond23
  %18 = load ptr, ptr %rt_from_call, align 8, !tbaa !5
  %19 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom27 = sext i32 %19 to i64
  %arrayidx28 = getelementptr i8, ptr %18, i64 %idxprom27
  %20 = load i8, ptr %arrayidx28, align 1, !tbaa !29
  %conv29 = sext i8 %20 to i32
  %cmp30 = icmp eq i32 %conv29, 46
  br i1 %cmp30, label %if.then32, label %if.else

if.then32:                                        ; preds = %for.body26
  %21 = load i32, ptr %found_dot, align 4, !tbaa !9
  %tobool33 = icmp ne i32 %21, 0
  br i1 %tobool33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.then32
  br label %for.end55

if.end35:                                         ; preds = %if.then32
  store i32 1, ptr %found_dot, align 4, !tbaa !9
  br label %if.end48

if.else:                                          ; preds = %for.body26
  %22 = load ptr, ptr %rt_from_call, align 8, !tbaa !5
  %23 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom36 = sext i32 %23 to i64
  %arrayidx37 = getelementptr i8, ptr %22, i64 %idxprom36
  %24 = load i8, ptr %arrayidx37, align 1, !tbaa !29
  %conv38 = sext i8 %24 to i32
  %cmp39 = icmp slt i32 %conv38, 48
  br i1 %cmp39, label %if.then46, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %25 = load ptr, ptr %rt_from_call, align 8, !tbaa !5
  %26 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom41 = sext i32 %26 to i64
  %arrayidx42 = getelementptr i8, ptr %25, i64 %idxprom41
  %27 = load i8, ptr %arrayidx42, align 1, !tbaa !29
  %conv43 = sext i8 %27 to i32
  %cmp44 = icmp sgt i32 %conv43, 57
  br i1 %cmp44, label %if.then46, label %if.end47

if.then46:                                        ; preds = %lor.lhs.false, %if.else
  br label %for.end55

if.end47:                                         ; preds = %lor.lhs.false
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end35
  %28 = load ptr, ptr %rt_from_call, align 8, !tbaa !5
  %29 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom49 = sext i32 %29 to i64
  %arrayidx50 = getelementptr i8, ptr %28, i64 %idxprom49
  %30 = load i8, ptr %arrayidx50, align 1, !tbaa !29
  %31 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom51 = sext i32 %31 to i64
  %arrayidx52 = getelementptr [5 x i8], ptr %rtversion, i64 0, i64 %idxprom51
  store i8 %30, ptr %arrayidx52, align 1, !tbaa !29
  br label %for.inc53

for.inc53:                                        ; preds = %if.end48
  %32 = load i32, ptr %i, align 4, !tbaa !9
  %inc54 = add i32 %32, 1
  store i32 %inc54, ptr %i, align 4, !tbaa !9
  br label %for.cond23, !llvm.loop !32

for.end55:                                        ; preds = %if.then46, %if.then34, %for.cond23
  %arraydecay56 = getelementptr inbounds [200 x i8], ptr %message, i64 0, i64 0
  %arraydecay57 = getelementptr inbounds [5 x i8], ptr %ctversion, i64 0, i64 0
  %arraydecay58 = getelementptr inbounds [5 x i8], ptr %rtversion, i64 0, i64 0
  %call59 = call i32 (ptr, i64, ptr, ...) @PyOS_snprintf(ptr noundef %arraydecay56, i64 noundef 200, ptr noundef @.str.20, ptr noundef %arraydecay57, ptr noundef @.str.16, ptr noundef %arraydecay58)
  %arraydecay60 = getelementptr inbounds [200 x i8], ptr %message, i64 0, i64 0
  %call61 = call i32 @PyErr_WarnEx(ptr noundef null, ptr noundef %arraydecay60, i64 noundef 1)
  store i32 %call61, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 200, ptr %message) #13
  call void @llvm.lifetime.end.p0(i64 5, ptr %rtversion) #13
  br label %cleanup

if.end62:                                         ; preds = %for.end
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end62, %for.end55
  call void @llvm.lifetime.end.p0(i64 8, ptr %rt_from_call) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %found_dot) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %same) #13
  call void @llvm.lifetime.end.p0(i64 5, ptr %ctversion) #13
  %33 = load i32, ptr %retval, align 4
  ret i32 %33
}

declare ptr @PyTuple_New(i64 noundef) #1

declare ptr @PyBytes_FromStringAndSize(ptr noundef, i64 noundef) #1

declare ptr @PyUnicode_FromStringAndSize(ptr noundef, i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_CyFunction_init() #0 {
entry:
  %retval = alloca i32, align 4
  %call = call ptr @__Pyx_FetchCommonType(ptr noundef @__pyx_CyFunctionType_type)
  store ptr %call, ptr @__pyx_CyFunctionType, align 8, !tbaa !5
  %0 = load ptr, ptr @__pyx_CyFunctionType, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, ptr %retval, align 4
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_FusedFunction_init() #0 {
entry:
  %retval = alloca i32, align 4
  %0 = load ptr, ptr @__pyx_CyFunctionType, align 8, !tbaa !5
  store ptr %0, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_FusedFunctionType_type, i32 0, i32 30), align 8, !tbaa !33
  %call = call ptr @__Pyx_FetchCommonType(ptr noundef @__pyx_FusedFunctionType_type)
  store ptr %call, ptr @__pyx_FusedFunctionType, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_FusedFunctionType, align 8, !tbaa !5
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, ptr %retval, align 4
  ret i32 %2
}

declare ptr @PyImport_AddModule(ptr noundef) #1

declare i32 @PyObject_SetAttrString(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitGlobals() #0 {
entry:
  %retval = alloca i32, align 4
  call void @__Pyx_init_assertions_enabled()
  %call = call ptr @PyErr_Occurred()
  %tobool = icmp ne ptr %call, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %0, ptr @__pyx_filename, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr @__pyx_lineno, align 4, !tbaa !9
  %2 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20319, ptr @__pyx_clineno, align 4, !tbaa !9
  %3 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %call3 = call ptr @PyErr_Occurred()
  %tobool4 = icmp ne ptr %call3, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0)
  %tobool11 = icmp ne i64 %expval10, 0
  br i1 %tobool11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end
  %4 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %4, ptr @__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr @__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20326, ptr @__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end13:                                         ; preds = %if.end
  %call14 = call i32 @__Pyx_InitStrings(ptr noundef @__pyx_string_tab)
  %cmp = icmp slt i32 %call14, 0
  br i1 %cmp, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end13
  %8 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %8, ptr @__pyx_filename, align 8, !tbaa !5
  %9 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr @__pyx_lineno, align 4, !tbaa !9
  %10 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20328, ptr @__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end17:                                         ; preds = %if.end13
  %call18 = call ptr @PyLong_FromLong(i64 noundef 0)
  store ptr %call18, ptr @__pyx_int_0, align 8, !tbaa !5
  %12 = load ptr, ptr @__pyx_int_0, align 8, !tbaa !5
  %tobool19 = icmp ne ptr %12, null
  %lnot20 = xor i1 %tobool19, true
  %lnot22 = xor i1 %lnot20, true
  %lnot24 = xor i1 %lnot22, true
  %lnot.ext25 = zext i1 %lnot24 to i32
  %conv26 = sext i32 %lnot.ext25 to i64
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 0)
  %tobool28 = icmp ne i64 %expval27, 0
  br i1 %tobool28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end17
  %13 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %13, ptr @__pyx_filename, align 8, !tbaa !5
  %14 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr @__pyx_lineno, align 4, !tbaa !9
  %15 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20329, ptr @__pyx_clineno, align 4, !tbaa !9
  %16 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end30:                                         ; preds = %if.end17
  %call31 = call ptr @PyLong_FromLong(i64 noundef 1)
  store ptr %call31, ptr @__pyx_int_1, align 8, !tbaa !5
  %17 = load ptr, ptr @__pyx_int_1, align 8, !tbaa !5
  %tobool32 = icmp ne ptr %17, null
  %lnot33 = xor i1 %tobool32, true
  %lnot35 = xor i1 %lnot33, true
  %lnot37 = xor i1 %lnot35, true
  %lnot.ext38 = zext i1 %lnot37 to i32
  %conv39 = sext i32 %lnot.ext38 to i64
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0)
  %tobool41 = icmp ne i64 %expval40, 0
  br i1 %tobool41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end30
  %18 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %18, ptr @__pyx_filename, align 8, !tbaa !5
  %19 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr @__pyx_lineno, align 4, !tbaa !9
  %20 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20330, ptr @__pyx_clineno, align 4, !tbaa !9
  %21 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end43:                                         ; preds = %if.end30
  %call44 = call ptr @PyLong_FromLong(i64 noundef 7)
  store ptr %call44, ptr @__pyx_int_7, align 8, !tbaa !5
  %22 = load ptr, ptr @__pyx_int_7, align 8, !tbaa !5
  %tobool45 = icmp ne ptr %22, null
  %lnot46 = xor i1 %tobool45, true
  %lnot48 = xor i1 %lnot46, true
  %lnot50 = xor i1 %lnot48, true
  %lnot.ext51 = zext i1 %lnot50 to i32
  %conv52 = sext i32 %lnot.ext51 to i64
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0)
  %tobool54 = icmp ne i64 %expval53, 0
  br i1 %tobool54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.end43
  %23 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %23, ptr @__pyx_filename, align 8, !tbaa !5
  %24 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr @__pyx_lineno, align 4, !tbaa !9
  %25 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20331, ptr @__pyx_clineno, align 4, !tbaa !9
  %26 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end56:                                         ; preds = %if.end43
  %call57 = call ptr @PyLong_FromLong(i64 noundef 112105877)
  store ptr %call57, ptr @__pyx_int_112105877, align 8, !tbaa !5
  %27 = load ptr, ptr @__pyx_int_112105877, align 8, !tbaa !5
  %tobool58 = icmp ne ptr %27, null
  %lnot59 = xor i1 %tobool58, true
  %lnot61 = xor i1 %lnot59, true
  %lnot63 = xor i1 %lnot61, true
  %lnot.ext64 = zext i1 %lnot63 to i32
  %conv65 = sext i32 %lnot.ext64 to i64
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 0)
  %tobool67 = icmp ne i64 %expval66, 0
  br i1 %tobool67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %if.end56
  %28 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %28, ptr @__pyx_filename, align 8, !tbaa !5
  %29 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr @__pyx_lineno, align 4, !tbaa !9
  %30 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20332, ptr @__pyx_clineno, align 4, !tbaa !9
  %31 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end69:                                         ; preds = %if.end56
  %call70 = call ptr @PyLong_FromLong(i64 noundef 136983863)
  store ptr %call70, ptr @__pyx_int_136983863, align 8, !tbaa !5
  %32 = load ptr, ptr @__pyx_int_136983863, align 8, !tbaa !5
  %tobool71 = icmp ne ptr %32, null
  %lnot72 = xor i1 %tobool71, true
  %lnot74 = xor i1 %lnot72, true
  %lnot76 = xor i1 %lnot74, true
  %lnot.ext77 = zext i1 %lnot76 to i32
  %conv78 = sext i32 %lnot.ext77 to i64
  %expval79 = call i64 @llvm.expect.i64(i64 %conv78, i64 0)
  %tobool80 = icmp ne i64 %expval79, 0
  br i1 %tobool80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.end69
  %33 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %33, ptr @__pyx_filename, align 8, !tbaa !5
  %34 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr @__pyx_lineno, align 4, !tbaa !9
  %35 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20333, ptr @__pyx_clineno, align 4, !tbaa !9
  %36 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end82:                                         ; preds = %if.end69
  %call83 = call ptr @PyLong_FromLong(i64 noundef 184977713)
  store ptr %call83, ptr @__pyx_int_184977713, align 8, !tbaa !5
  %37 = load ptr, ptr @__pyx_int_184977713, align 8, !tbaa !5
  %tobool84 = icmp ne ptr %37, null
  %lnot85 = xor i1 %tobool84, true
  %lnot87 = xor i1 %lnot85, true
  %lnot89 = xor i1 %lnot87, true
  %lnot.ext90 = zext i1 %lnot89 to i32
  %conv91 = sext i32 %lnot.ext90 to i64
  %expval92 = call i64 @llvm.expect.i64(i64 %conv91, i64 0)
  %tobool93 = icmp ne i64 %expval92, 0
  br i1 %tobool93, label %if.then94, label %if.end95

if.then94:                                        ; preds = %if.end82
  %38 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %38, ptr @__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr @__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20334, ptr @__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end95:                                         ; preds = %if.end82
  %call96 = call ptr @PyLong_FromLong(i64 noundef -1)
  store ptr %call96, ptr @__pyx_int_neg_1, align 8, !tbaa !5
  %42 = load ptr, ptr @__pyx_int_neg_1, align 8, !tbaa !5
  %tobool97 = icmp ne ptr %42, null
  %lnot98 = xor i1 %tobool97, true
  %lnot100 = xor i1 %lnot98, true
  %lnot102 = xor i1 %lnot100, true
  %lnot.ext103 = zext i1 %lnot102 to i32
  %conv104 = sext i32 %lnot.ext103 to i64
  %expval105 = call i64 @llvm.expect.i64(i64 %conv104, i64 0)
  %tobool106 = icmp ne i64 %expval105, 0
  br i1 %tobool106, label %if.then107, label %if.end108

if.then107:                                       ; preds = %if.end95
  %43 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %43, ptr @__pyx_filename, align 8, !tbaa !5
  %44 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr @__pyx_lineno, align 4, !tbaa !9
  %45 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20335, ptr @__pyx_clineno, align 4, !tbaa !9
  %46 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end108:                                        ; preds = %if.end95
  store i32 0, ptr %retval, align 4
  br label %return

__pyx_L1_error:                                   ; preds = %if.then107, %if.then94, %if.then81, %if.then68, %if.then55, %if.then42, %if.then29, %if.then16, %if.then12, %if.then
  store i32 -1, ptr %retval, align 4
  br label %return

return:                                           ; preds = %__pyx_L1_error, %if.end108
  %47 = load i32, ptr %retval, align 4
  ret i32 %47
}

declare i32 @PyObject_SetAttr(ptr noundef, ptr noundef, ptr noundef) #1

declare ptr @PyImport_GetModuleDict() #1

declare ptr @PyDict_GetItemString(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitCachedBuiltins() #0 {
entry:
  %retval = alloca i32, align 4
  %0 = load ptr, ptr @__pyx_n_s_TypeError, align 8, !tbaa !5
  %call = call ptr @__Pyx_GetBuiltinName(ptr noundef %0)
  store ptr %call, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %2, ptr @__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr @__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 19994, ptr @__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr @__pyx_n_s_range, align 8, !tbaa !5
  %call1 = call ptr @__Pyx_GetBuiltinName(ptr noundef %6)
  store ptr %call1, ptr @__pyx_builtin_range, align 8, !tbaa !5
  %7 = load ptr, ptr @__pyx_builtin_range, align 8, !tbaa !5
  %tobool2 = icmp ne ptr %7, null
  br i1 %tobool2, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  %8 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %8, ptr @__pyx_filename, align 8, !tbaa !5
  %9 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr @__pyx_lineno, align 4, !tbaa !9
  %10 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 19995, ptr @__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end4:                                          ; preds = %if.end
  %12 = load ptr, ptr @__pyx_n_s_ValueError, align 8, !tbaa !5
  %call5 = call ptr @__Pyx_GetBuiltinName(ptr noundef %12)
  store ptr %call5, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %13 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %tobool6 = icmp ne ptr %13, null
  br i1 %tobool6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end4
  %14 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %14, ptr @__pyx_filename, align 8, !tbaa !5
  %15 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 134, ptr @__pyx_lineno, align 4, !tbaa !9
  %16 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 19996, ptr @__pyx_clineno, align 4, !tbaa !9
  %17 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end8:                                          ; preds = %if.end4
  %18 = load ptr, ptr @__pyx_n_s_MemoryError, align 8, !tbaa !5
  %call9 = call ptr @__Pyx_GetBuiltinName(ptr noundef %18)
  store ptr %call9, ptr @__pyx_builtin_MemoryError, align 8, !tbaa !5
  %19 = load ptr, ptr @__pyx_builtin_MemoryError, align 8, !tbaa !5
  %tobool10 = icmp ne ptr %19, null
  br i1 %tobool10, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.end8
  %20 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %20, ptr @__pyx_filename, align 8, !tbaa !5
  %21 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 149, ptr @__pyx_lineno, align 4, !tbaa !9
  %22 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 19997, ptr @__pyx_clineno, align 4, !tbaa !9
  %23 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end12:                                         ; preds = %if.end8
  %24 = load ptr, ptr @__pyx_n_s_enumerate, align 8, !tbaa !5
  %call13 = call ptr @__Pyx_GetBuiltinName(ptr noundef %24)
  store ptr %call13, ptr @__pyx_builtin_enumerate, align 8, !tbaa !5
  %25 = load ptr, ptr @__pyx_builtin_enumerate, align 8, !tbaa !5
  %tobool14 = icmp ne ptr %25, null
  br i1 %tobool14, label %if.end16, label %if.then15

if.then15:                                        ; preds = %if.end12
  %26 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %26, ptr @__pyx_filename, align 8, !tbaa !5
  %27 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 152, ptr @__pyx_lineno, align 4, !tbaa !9
  %28 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 19998, ptr @__pyx_clineno, align 4, !tbaa !9
  %29 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end16:                                         ; preds = %if.end12
  %30 = load ptr, ptr @__pyx_n_s_Ellipsis, align 8, !tbaa !5
  %call17 = call ptr @__Pyx_GetBuiltinName(ptr noundef %30)
  store ptr %call17, ptr @__pyx_builtin_Ellipsis, align 8, !tbaa !5
  %31 = load ptr, ptr @__pyx_builtin_Ellipsis, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %31, null
  br i1 %tobool18, label %if.end20, label %if.then19

if.then19:                                        ; preds = %if.end16
  %32 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %32, ptr @__pyx_filename, align 8, !tbaa !5
  %33 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 406, ptr @__pyx_lineno, align 4, !tbaa !9
  %34 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 19999, ptr @__pyx_clineno, align 4, !tbaa !9
  %35 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end20:                                         ; preds = %if.end16
  %36 = load ptr, ptr @__pyx_n_s_id, align 8, !tbaa !5
  %call21 = call ptr @__Pyx_GetBuiltinName(ptr noundef %36)
  store ptr %call21, ptr @__pyx_builtin_id, align 8, !tbaa !5
  %37 = load ptr, ptr @__pyx_builtin_id, align 8, !tbaa !5
  %tobool22 = icmp ne ptr %37, null
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %if.end20
  %38 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %38, ptr @__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 615, ptr @__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20000, ptr @__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end24:                                         ; preds = %if.end20
  %42 = load ptr, ptr @__pyx_n_s_IndexError, align 8, !tbaa !5
  %call25 = call ptr @__Pyx_GetBuiltinName(ptr noundef %42)
  store ptr %call25, ptr @__pyx_builtin_IndexError, align 8, !tbaa !5
  %43 = load ptr, ptr @__pyx_builtin_IndexError, align 8, !tbaa !5
  %tobool26 = icmp ne ptr %43, null
  br i1 %tobool26, label %if.end28, label %if.then27

if.then27:                                        ; preds = %if.end24
  %44 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %44, ptr @__pyx_filename, align 8, !tbaa !5
  %45 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 834, ptr @__pyx_lineno, align 4, !tbaa !9
  %46 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20001, ptr @__pyx_clineno, align 4, !tbaa !9
  %47 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end28:                                         ; preds = %if.end24
  store i32 0, ptr %retval, align 4
  br label %return

__pyx_L1_error:                                   ; preds = %if.then27, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  store i32 -1, ptr %retval, align 4
  br label %return

return:                                           ; preds = %__pyx_L1_error, %if.end28
  %48 = load i32, ptr %retval, align 4
  ret i32 %48
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitCachedConstants() #0 {
entry:
  %retval = alloca i32, align 4
  %0 = load ptr, ptr @__pyx_kp_s_No_matching_signature_found, align 8, !tbaa !5
  %call = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %0)
  store ptr %call, ptr @__pyx_tuple__3, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_tuple__3, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %2, ptr @__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr @__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20018, ptr @__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr @__pyx_kp_s_Function_call_with_ambiguous_arg, align 8, !tbaa !5
  %call4 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %6)
  store ptr %call4, ptr @__pyx_tuple__4, align 8, !tbaa !5
  %7 = load ptr, ptr @__pyx_tuple__4, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %7, null
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  %8 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %8, ptr @__pyx_filename, align 8, !tbaa !5
  %9 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr @__pyx_lineno, align 4, !tbaa !9
  %10 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20021, ptr @__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end16:                                         ; preds = %if.end
  %12 = load ptr, ptr @__pyx_kp_s_Empty_shape_tuple_for_cython_arr, align 8, !tbaa !5
  %call17 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %12)
  store ptr %call17, ptr @__pyx_tuple__5, align 8, !tbaa !5
  %13 = load ptr, ptr @__pyx_tuple__5, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %13, null
  %lnot19 = xor i1 %tobool18, true
  %lnot21 = xor i1 %lnot19, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end16
  %14 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %14, ptr @__pyx_filename, align 8, !tbaa !5
  %15 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 134, ptr @__pyx_lineno, align 4, !tbaa !9
  %16 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20032, ptr @__pyx_clineno, align 4, !tbaa !9
  %17 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end29:                                         ; preds = %if.end16
  %18 = load ptr, ptr @__pyx_kp_s_itemsize_0_for_cython_array, align 8, !tbaa !5
  %call30 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %18)
  store ptr %call30, ptr @__pyx_tuple__6, align 8, !tbaa !5
  %19 = load ptr, ptr @__pyx_tuple__6, align 8, !tbaa !5
  %tobool31 = icmp ne ptr %19, null
  %lnot32 = xor i1 %tobool31, true
  %lnot34 = xor i1 %lnot32, true
  %lnot36 = xor i1 %lnot34, true
  %lnot.ext37 = zext i1 %lnot36 to i32
  %conv38 = sext i32 %lnot.ext37 to i64
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0)
  %tobool40 = icmp ne i64 %expval39, 0
  br i1 %tobool40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.end29
  %20 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %20, ptr @__pyx_filename, align 8, !tbaa !5
  %21 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 137, ptr @__pyx_lineno, align 4, !tbaa !9
  %22 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20043, ptr @__pyx_clineno, align 4, !tbaa !9
  %23 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end42:                                         ; preds = %if.end29
  %24 = load ptr, ptr @__pyx_kp_s_unable_to_allocate_shape_and_str, align 8, !tbaa !5
  %call43 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %24)
  store ptr %call43, ptr @__pyx_tuple__7, align 8, !tbaa !5
  %25 = load ptr, ptr @__pyx_tuple__7, align 8, !tbaa !5
  %tobool44 = icmp ne ptr %25, null
  %lnot45 = xor i1 %tobool44, true
  %lnot47 = xor i1 %lnot45, true
  %lnot49 = xor i1 %lnot47, true
  %lnot.ext50 = zext i1 %lnot49 to i32
  %conv51 = sext i32 %lnot.ext50 to i64
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 0)
  %tobool53 = icmp ne i64 %expval52, 0
  br i1 %tobool53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end42
  %26 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %26, ptr @__pyx_filename, align 8, !tbaa !5
  %27 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 149, ptr @__pyx_lineno, align 4, !tbaa !9
  %28 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20054, ptr @__pyx_clineno, align 4, !tbaa !9
  %29 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end55:                                         ; preds = %if.end42
  %30 = load ptr, ptr @__pyx_kp_s_unable_to_allocate_array_data, align 8, !tbaa !5
  %call56 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %30)
  store ptr %call56, ptr @__pyx_tuple__8, align 8, !tbaa !5
  %31 = load ptr, ptr @__pyx_tuple__8, align 8, !tbaa !5
  %tobool57 = icmp ne ptr %31, null
  %lnot58 = xor i1 %tobool57, true
  %lnot60 = xor i1 %lnot58, true
  %lnot62 = xor i1 %lnot60, true
  %lnot.ext63 = zext i1 %lnot62 to i32
  %conv64 = sext i32 %lnot.ext63 to i64
  %expval65 = call i64 @llvm.expect.i64(i64 %conv64, i64 0)
  %tobool66 = icmp ne i64 %expval65, 0
  br i1 %tobool66, label %if.then67, label %if.end68

if.then67:                                        ; preds = %if.end55
  %32 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %32, ptr @__pyx_filename, align 8, !tbaa !5
  %33 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 177, ptr @__pyx_lineno, align 4, !tbaa !9
  %34 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20065, ptr @__pyx_clineno, align 4, !tbaa !9
  %35 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end68:                                         ; preds = %if.end55
  %36 = load ptr, ptr @__pyx_kp_s_Can_only_create_a_buffer_that_is, align 8, !tbaa !5
  %call69 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %36)
  store ptr %call69, ptr @__pyx_tuple__9, align 8, !tbaa !5
  %37 = load ptr, ptr @__pyx_tuple__9, align 8, !tbaa !5
  %tobool70 = icmp ne ptr %37, null
  %lnot71 = xor i1 %tobool70, true
  %lnot73 = xor i1 %lnot71, true
  %lnot75 = xor i1 %lnot73, true
  %lnot.ext76 = zext i1 %lnot75 to i32
  %conv77 = sext i32 %lnot.ext76 to i64
  %expval78 = call i64 @llvm.expect.i64(i64 %conv77, i64 0)
  %tobool79 = icmp ne i64 %expval78, 0
  br i1 %tobool79, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end68
  %38 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %38, ptr @__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 193, ptr @__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20076, ptr @__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end81:                                         ; preds = %if.end68
  %42 = load ptr, ptr @__pyx_kp_s_no_default___reduce___due_to_non, align 8, !tbaa !5
  %call82 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %42)
  store ptr %call82, ptr @__pyx_tuple__10, align 8, !tbaa !5
  %43 = load ptr, ptr @__pyx_tuple__10, align 8, !tbaa !5
  %tobool83 = icmp ne ptr %43, null
  %lnot84 = xor i1 %tobool83, true
  %lnot86 = xor i1 %lnot84, true
  %lnot88 = xor i1 %lnot86, true
  %lnot.ext89 = zext i1 %lnot88 to i32
  %conv90 = sext i32 %lnot.ext89 to i64
  %expval91 = call i64 @llvm.expect.i64(i64 %conv90, i64 0)
  %tobool92 = icmp ne i64 %expval91, 0
  br i1 %tobool92, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end81
  %44 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %44, ptr @__pyx_filename, align 8, !tbaa !5
  %45 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 2, ptr @__pyx_lineno, align 4, !tbaa !9
  %46 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20086, ptr @__pyx_clineno, align 4, !tbaa !9
  %47 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end94:                                         ; preds = %if.end81
  %48 = load ptr, ptr @__pyx_kp_s_no_default___reduce___due_to_non, align 8, !tbaa !5
  %call95 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %48)
  store ptr %call95, ptr @__pyx_tuple__11, align 8, !tbaa !5
  %49 = load ptr, ptr @__pyx_tuple__11, align 8, !tbaa !5
  %tobool96 = icmp ne ptr %49, null
  %lnot97 = xor i1 %tobool96, true
  %lnot99 = xor i1 %lnot97, true
  %lnot101 = xor i1 %lnot99, true
  %lnot.ext102 = zext i1 %lnot101 to i32
  %conv103 = sext i32 %lnot.ext102 to i64
  %expval104 = call i64 @llvm.expect.i64(i64 %conv103, i64 0)
  %tobool105 = icmp ne i64 %expval104, 0
  br i1 %tobool105, label %if.then106, label %if.end107

if.then106:                                       ; preds = %if.end94
  %50 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %50, ptr @__pyx_filename, align 8, !tbaa !5
  %51 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 4, ptr @__pyx_lineno, align 4, !tbaa !9
  %52 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20095, ptr @__pyx_clineno, align 4, !tbaa !9
  %53 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end107:                                        ; preds = %if.end94
  %54 = load ptr, ptr @__pyx_kp_s_Cannot_assign_to_read_only_memor, align 8, !tbaa !5
  %call108 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %54)
  store ptr %call108, ptr @__pyx_tuple__12, align 8, !tbaa !5
  %55 = load ptr, ptr @__pyx_tuple__12, align 8, !tbaa !5
  %tobool109 = icmp ne ptr %55, null
  %lnot110 = xor i1 %tobool109, true
  %lnot112 = xor i1 %lnot110, true
  %lnot114 = xor i1 %lnot112, true
  %lnot.ext115 = zext i1 %lnot114 to i32
  %conv116 = sext i32 %lnot.ext115 to i64
  %expval117 = call i64 @llvm.expect.i64(i64 %conv116, i64 0)
  %tobool118 = icmp ne i64 %expval117, 0
  br i1 %tobool118, label %if.then119, label %if.end120

if.then119:                                       ; preds = %if.end107
  %56 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %56, ptr @__pyx_filename, align 8, !tbaa !5
  %57 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 420, ptr @__pyx_lineno, align 4, !tbaa !9
  %58 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20106, ptr @__pyx_clineno, align 4, !tbaa !9
  %59 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end120:                                        ; preds = %if.end107
  %60 = load ptr, ptr @__pyx_kp_s_Unable_to_convert_item_to_object, align 8, !tbaa !5
  %call121 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %60)
  store ptr %call121, ptr @__pyx_tuple__13, align 8, !tbaa !5
  %61 = load ptr, ptr @__pyx_tuple__13, align 8, !tbaa !5
  %tobool122 = icmp ne ptr %61, null
  %lnot123 = xor i1 %tobool122, true
  %lnot125 = xor i1 %lnot123, true
  %lnot127 = xor i1 %lnot125, true
  %lnot.ext128 = zext i1 %lnot127 to i32
  %conv129 = sext i32 %lnot.ext128 to i64
  %expval130 = call i64 @llvm.expect.i64(i64 %conv129, i64 0)
  %tobool131 = icmp ne i64 %expval130, 0
  br i1 %tobool131, label %if.then132, label %if.end133

if.then132:                                       ; preds = %if.end120
  %62 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %62, ptr @__pyx_filename, align 8, !tbaa !5
  %63 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 497, ptr @__pyx_lineno, align 4, !tbaa !9
  %64 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20117, ptr @__pyx_clineno, align 4, !tbaa !9
  %65 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end133:                                        ; preds = %if.end120
  %66 = load ptr, ptr @__pyx_kp_s_Cannot_create_writable_memory_vi, align 8, !tbaa !5
  %call134 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %66)
  store ptr %call134, ptr @__pyx_tuple__14, align 8, !tbaa !5
  %67 = load ptr, ptr @__pyx_tuple__14, align 8, !tbaa !5
  %tobool135 = icmp ne ptr %67, null
  %lnot136 = xor i1 %tobool135, true
  %lnot138 = xor i1 %lnot136, true
  %lnot140 = xor i1 %lnot138, true
  %lnot.ext141 = zext i1 %lnot140 to i32
  %conv142 = sext i32 %lnot.ext141 to i64
  %expval143 = call i64 @llvm.expect.i64(i64 %conv142, i64 0)
  %tobool144 = icmp ne i64 %expval143, 0
  br i1 %tobool144, label %if.then145, label %if.end146

if.then145:                                       ; preds = %if.end133
  %68 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %68, ptr @__pyx_filename, align 8, !tbaa !5
  %69 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 522, ptr @__pyx_lineno, align 4, !tbaa !9
  %70 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20128, ptr @__pyx_clineno, align 4, !tbaa !9
  %71 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end146:                                        ; preds = %if.end133
  %72 = load ptr, ptr @__pyx_kp_s_Buffer_view_does_not_expose_stri, align 8, !tbaa !5
  %call147 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %72)
  store ptr %call147, ptr @__pyx_tuple__15, align 8, !tbaa !5
  %73 = load ptr, ptr @__pyx_tuple__15, align 8, !tbaa !5
  %tobool148 = icmp ne ptr %73, null
  %lnot149 = xor i1 %tobool148, true
  %lnot151 = xor i1 %lnot149, true
  %lnot153 = xor i1 %lnot151, true
  %lnot.ext154 = zext i1 %lnot153 to i32
  %conv155 = sext i32 %lnot.ext154 to i64
  %expval156 = call i64 @llvm.expect.i64(i64 %conv155, i64 0)
  %tobool157 = icmp ne i64 %expval156, 0
  br i1 %tobool157, label %if.then158, label %if.end159

if.then158:                                       ; preds = %if.end146
  %74 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %74, ptr @__pyx_filename, align 8, !tbaa !5
  %75 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 572, ptr @__pyx_lineno, align 4, !tbaa !9
  %76 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20139, ptr @__pyx_clineno, align 4, !tbaa !9
  %77 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end159:                                        ; preds = %if.end146
  %call160 = call ptr @PyTuple_New(i64 noundef 1)
  store ptr %call160, ptr @__pyx_tuple__16, align 8, !tbaa !5
  %78 = load ptr, ptr @__pyx_tuple__16, align 8, !tbaa !5
  %tobool161 = icmp ne ptr %78, null
  %lnot162 = xor i1 %tobool161, true
  %lnot164 = xor i1 %lnot162, true
  %lnot166 = xor i1 %lnot164, true
  %lnot.ext167 = zext i1 %lnot166 to i32
  %conv168 = sext i32 %lnot.ext167 to i64
  %expval169 = call i64 @llvm.expect.i64(i64 %conv168, i64 0)
  %tobool170 = icmp ne i64 %expval169, 0
  br i1 %tobool170, label %if.then171, label %if.end172

if.then171:                                       ; preds = %if.end159
  %79 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %79, ptr @__pyx_filename, align 8, !tbaa !5
  %80 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 579, ptr @__pyx_lineno, align 4, !tbaa !9
  %81 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20150, ptr @__pyx_clineno, align 4, !tbaa !9
  %82 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end172:                                        ; preds = %if.end159
  %83 = load ptr, ptr @__pyx_int_neg_1, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %83)
  %84 = load ptr, ptr @__pyx_tuple__16, align 8, !tbaa !5
  %85 = load ptr, ptr @__pyx_int_neg_1, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %84, i64 noundef 0, ptr noundef %85)
  %86 = load ptr, ptr @__pyx_kp_s_no_default___reduce___due_to_non, align 8, !tbaa !5
  %call173 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %86)
  store ptr %call173, ptr @__pyx_tuple__17, align 8, !tbaa !5
  %87 = load ptr, ptr @__pyx_tuple__17, align 8, !tbaa !5
  %tobool174 = icmp ne ptr %87, null
  %lnot175 = xor i1 %tobool174, true
  %lnot177 = xor i1 %lnot175, true
  %lnot179 = xor i1 %lnot177, true
  %lnot.ext180 = zext i1 %lnot179 to i32
  %conv181 = sext i32 %lnot.ext180 to i64
  %expval182 = call i64 @llvm.expect.i64(i64 %conv181, i64 0)
  %tobool183 = icmp ne i64 %expval182, 0
  br i1 %tobool183, label %if.then184, label %if.end185

if.then184:                                       ; preds = %if.end172
  %88 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %88, ptr @__pyx_filename, align 8, !tbaa !5
  %89 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 2, ptr @__pyx_lineno, align 4, !tbaa !9
  %90 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20163, ptr @__pyx_clineno, align 4, !tbaa !9
  %91 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end185:                                        ; preds = %if.end172
  %92 = load ptr, ptr @__pyx_kp_s_no_default___reduce___due_to_non, align 8, !tbaa !5
  %call186 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %92)
  store ptr %call186, ptr @__pyx_tuple__18, align 8, !tbaa !5
  %93 = load ptr, ptr @__pyx_tuple__18, align 8, !tbaa !5
  %tobool187 = icmp ne ptr %93, null
  %lnot188 = xor i1 %tobool187, true
  %lnot190 = xor i1 %lnot188, true
  %lnot192 = xor i1 %lnot190, true
  %lnot.ext193 = zext i1 %lnot192 to i32
  %conv194 = sext i32 %lnot.ext193 to i64
  %expval195 = call i64 @llvm.expect.i64(i64 %conv194, i64 0)
  %tobool196 = icmp ne i64 %expval195, 0
  br i1 %tobool196, label %if.then197, label %if.end198

if.then197:                                       ; preds = %if.end185
  %94 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %94, ptr @__pyx_filename, align 8, !tbaa !5
  %95 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 4, ptr @__pyx_lineno, align 4, !tbaa !9
  %96 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20172, ptr @__pyx_clineno, align 4, !tbaa !9
  %97 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end198:                                        ; preds = %if.end185
  %call199 = call ptr @PySlice_New(ptr noundef @_Py_NoneStruct, ptr noundef @_Py_NoneStruct, ptr noundef @_Py_NoneStruct)
  store ptr %call199, ptr @__pyx_slice__19, align 8, !tbaa !5
  %98 = load ptr, ptr @__pyx_slice__19, align 8, !tbaa !5
  %tobool200 = icmp ne ptr %98, null
  %lnot201 = xor i1 %tobool200, true
  %lnot203 = xor i1 %lnot201, true
  %lnot205 = xor i1 %lnot203, true
  %lnot.ext206 = zext i1 %lnot205 to i32
  %conv207 = sext i32 %lnot.ext206 to i64
  %expval208 = call i64 @llvm.expect.i64(i64 %conv207, i64 0)
  %tobool209 = icmp ne i64 %expval208, 0
  br i1 %tobool209, label %if.then210, label %if.end211

if.then210:                                       ; preds = %if.end198
  %99 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %99, ptr @__pyx_filename, align 8, !tbaa !5
  %100 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 684, ptr @__pyx_lineno, align 4, !tbaa !9
  %101 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20183, ptr @__pyx_clineno, align 4, !tbaa !9
  %102 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end211:                                        ; preds = %if.end198
  %103 = load ptr, ptr @__pyx_kp_s_Indirect_dimensions_not_supporte, align 8, !tbaa !5
  %call212 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %103)
  store ptr %call212, ptr @__pyx_tuple__20, align 8, !tbaa !5
  %104 = load ptr, ptr @__pyx_tuple__20, align 8, !tbaa !5
  %tobool213 = icmp ne ptr %104, null
  %lnot214 = xor i1 %tobool213, true
  %lnot216 = xor i1 %lnot214, true
  %lnot218 = xor i1 %lnot216, true
  %lnot.ext219 = zext i1 %lnot218 to i32
  %conv220 = sext i32 %lnot.ext219 to i64
  %expval221 = call i64 @llvm.expect.i64(i64 %conv220, i64 0)
  %tobool222 = icmp ne i64 %expval221, 0
  br i1 %tobool222, label %if.then223, label %if.end224

if.then223:                                       ; preds = %if.end211
  %105 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %105, ptr @__pyx_filename, align 8, !tbaa !5
  %106 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 705, ptr @__pyx_lineno, align 4, !tbaa !9
  %107 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20194, ptr @__pyx_clineno, align 4, !tbaa !9
  %108 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end224:                                        ; preds = %if.end211
  %109 = load ptr, ptr @__pyx_kp_s_no_default___reduce___due_to_non, align 8, !tbaa !5
  %call225 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %109)
  store ptr %call225, ptr @__pyx_tuple__21, align 8, !tbaa !5
  %110 = load ptr, ptr @__pyx_tuple__21, align 8, !tbaa !5
  %tobool226 = icmp ne ptr %110, null
  %lnot227 = xor i1 %tobool226, true
  %lnot229 = xor i1 %lnot227, true
  %lnot231 = xor i1 %lnot229, true
  %lnot.ext232 = zext i1 %lnot231 to i32
  %conv233 = sext i32 %lnot.ext232 to i64
  %expval234 = call i64 @llvm.expect.i64(i64 %conv233, i64 0)
  %tobool235 = icmp ne i64 %expval234, 0
  br i1 %tobool235, label %if.then236, label %if.end237

if.then236:                                       ; preds = %if.end224
  %111 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %111, ptr @__pyx_filename, align 8, !tbaa !5
  %112 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 2, ptr @__pyx_lineno, align 4, !tbaa !9
  %113 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20204, ptr @__pyx_clineno, align 4, !tbaa !9
  %114 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end237:                                        ; preds = %if.end224
  %115 = load ptr, ptr @__pyx_kp_s_no_default___reduce___due_to_non, align 8, !tbaa !5
  %call238 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %115)
  store ptr %call238, ptr @__pyx_tuple__22, align 8, !tbaa !5
  %116 = load ptr, ptr @__pyx_tuple__22, align 8, !tbaa !5
  %tobool239 = icmp ne ptr %116, null
  %lnot240 = xor i1 %tobool239, true
  %lnot242 = xor i1 %lnot240, true
  %lnot244 = xor i1 %lnot242, true
  %lnot.ext245 = zext i1 %lnot244 to i32
  %conv246 = sext i32 %lnot.ext245 to i64
  %expval247 = call i64 @llvm.expect.i64(i64 %conv246, i64 0)
  %tobool248 = icmp ne i64 %expval247, 0
  br i1 %tobool248, label %if.then249, label %if.end250

if.then249:                                       ; preds = %if.end237
  %117 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %117, ptr @__pyx_filename, align 8, !tbaa !5
  %118 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 4, ptr @__pyx_lineno, align 4, !tbaa !9
  %119 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20213, ptr @__pyx_clineno, align 4, !tbaa !9
  %120 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end250:                                        ; preds = %if.end237
  %121 = load ptr, ptr @__pyx_int_184977713, align 8, !tbaa !5
  %122 = load ptr, ptr @__pyx_int_136983863, align 8, !tbaa !5
  %123 = load ptr, ptr @__pyx_int_112105877, align 8, !tbaa !5
  %call251 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 3, ptr noundef %121, ptr noundef %122, ptr noundef %123)
  store ptr %call251, ptr @__pyx_tuple__23, align 8, !tbaa !5
  %124 = load ptr, ptr @__pyx_tuple__23, align 8, !tbaa !5
  %tobool252 = icmp ne ptr %124, null
  %lnot253 = xor i1 %tobool252, true
  %lnot255 = xor i1 %lnot253, true
  %lnot257 = xor i1 %lnot255, true
  %lnot.ext258 = zext i1 %lnot257 to i32
  %conv259 = sext i32 %lnot.ext258 to i64
  %expval260 = call i64 @llvm.expect.i64(i64 %conv259, i64 0)
  %tobool261 = icmp ne i64 %expval260, 0
  br i1 %tobool261, label %if.then262, label %if.end263

if.then262:                                       ; preds = %if.end250
  %125 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %125, ptr @__pyx_filename, align 8, !tbaa !5
  %126 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 4, ptr @__pyx_lineno, align 4, !tbaa !9
  %127 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20216, ptr @__pyx_clineno, align 4, !tbaa !9
  %128 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end263:                                        ; preds = %if.end250
  %129 = load ptr, ptr @__pyx_n_s_X, align 8, !tbaa !5
  %130 = load ptr, ptr @__pyx_n_s_sample_weight, align 8, !tbaa !5
  %131 = load ptr, ptr @__pyx_n_s_centers_old, align 8, !tbaa !5
  %132 = load ptr, ptr @__pyx_n_s_centers_new, align 8, !tbaa !5
  %133 = load ptr, ptr @__pyx_n_s_weight_sums, align 8, !tbaa !5
  %134 = load ptr, ptr @__pyx_n_s_labels, align 8, !tbaa !5
  %135 = load ptr, ptr @__pyx_n_s_n_threads, align 8, !tbaa !5
  %136 = load ptr, ptr @__pyx_n_s_n_samples, align 8, !tbaa !5
  %137 = load ptr, ptr @__pyx_n_s_n_clusters, align 8, !tbaa !5
  %138 = load ptr, ptr @__pyx_n_s_cluster_idx, align 8, !tbaa !5
  %139 = load ptr, ptr @__pyx_n_s_indices, align 8, !tbaa !5
  %call264 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 11, ptr noundef %129, ptr noundef %130, ptr noundef %131, ptr noundef %132, ptr noundef %133, ptr noundef %134, ptr noundef %135, ptr noundef %136, ptr noundef %137, ptr noundef %138, ptr noundef %139)
  store ptr %call264, ptr @__pyx_tuple__24, align 8, !tbaa !5
  %140 = load ptr, ptr @__pyx_tuple__24, align 8, !tbaa !5
  %tobool265 = icmp ne ptr %140, null
  %lnot266 = xor i1 %tobool265, true
  %lnot268 = xor i1 %lnot266, true
  %lnot270 = xor i1 %lnot268, true
  %lnot.ext271 = zext i1 %lnot270 to i32
  %conv272 = sext i32 %lnot.ext271 to i64
  %expval273 = call i64 @llvm.expect.i64(i64 %conv272, i64 0)
  %tobool274 = icmp ne i64 %expval273, 0
  br i1 %tobool274, label %if.then275, label %if.end276

if.then275:                                       ; preds = %if.end263
  %141 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %141, ptr @__pyx_filename, align 8, !tbaa !5
  %142 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr @__pyx_lineno, align 4, !tbaa !9
  %143 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20227, ptr @__pyx_clineno, align 4, !tbaa !9
  %144 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end276:                                        ; preds = %if.end263
  %145 = load ptr, ptr @__pyx_empty_bytes, align 8, !tbaa !5
  %146 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %147 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %148 = load ptr, ptr @__pyx_tuple__24, align 8, !tbaa !5
  %149 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %150 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %151 = load ptr, ptr @__pyx_kp_s_sklearn_cluster__k_means_minibat, align 8, !tbaa !5
  %152 = load ptr, ptr @__pyx_n_s_minibatch_update_dense, align 8, !tbaa !5
  %153 = load ptr, ptr @__pyx_empty_bytes, align 8, !tbaa !5
  %call277 = call ptr @__Pyx_PyCode_New(i32 noundef 7, i32 noundef 0, i32 noundef 11, i32 noundef 0, i32 noundef 3, ptr noundef %145, ptr noundef %146, ptr noundef %147, ptr noundef %148, ptr noundef %149, ptr noundef %150, ptr noundef %151, ptr noundef %152, i32 noundef 6, ptr noundef %153)
  store ptr %call277, ptr @__pyx_codeobj__25, align 8, !tbaa !5
  %154 = load ptr, ptr @__pyx_codeobj__25, align 8, !tbaa !5
  %tobool278 = icmp ne ptr %154, null
  %lnot279 = xor i1 %tobool278, true
  %lnot281 = xor i1 %lnot279, true
  %lnot283 = xor i1 %lnot281, true
  %lnot.ext284 = zext i1 %lnot283 to i32
  %conv285 = sext i32 %lnot.ext284 to i64
  %expval286 = call i64 @llvm.expect.i64(i64 %conv285, i64 0)
  %tobool287 = icmp ne i64 %expval286, 0
  br i1 %tobool287, label %if.then288, label %if.end289

if.then288:                                       ; preds = %if.end276
  %155 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %155, ptr @__pyx_filename, align 8, !tbaa !5
  %156 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr @__pyx_lineno, align 4, !tbaa !9
  %157 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20230, ptr @__pyx_clineno, align 4, !tbaa !9
  %158 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end289:                                        ; preds = %if.end276
  %159 = load ptr, ptr @__pyx_n_s_X, align 8, !tbaa !5
  %160 = load ptr, ptr @__pyx_n_s_sample_weight, align 8, !tbaa !5
  %161 = load ptr, ptr @__pyx_n_s_centers_old, align 8, !tbaa !5
  %162 = load ptr, ptr @__pyx_n_s_centers_new, align 8, !tbaa !5
  %163 = load ptr, ptr @__pyx_n_s_weight_sums, align 8, !tbaa !5
  %164 = load ptr, ptr @__pyx_n_s_labels, align 8, !tbaa !5
  %165 = load ptr, ptr @__pyx_n_s_n_threads, align 8, !tbaa !5
  %166 = load ptr, ptr @__pyx_n_s_X_data, align 8, !tbaa !5
  %167 = load ptr, ptr @__pyx_n_s_X_indices, align 8, !tbaa !5
  %168 = load ptr, ptr @__pyx_n_s_X_indptr, align 8, !tbaa !5
  %169 = load ptr, ptr @__pyx_n_s_n_samples, align 8, !tbaa !5
  %170 = load ptr, ptr @__pyx_n_s_n_clusters, align 8, !tbaa !5
  %171 = load ptr, ptr @__pyx_n_s_cluster_idx, align 8, !tbaa !5
  %172 = load ptr, ptr @__pyx_n_s_indices, align 8, !tbaa !5
  %call290 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 14, ptr noundef %159, ptr noundef %160, ptr noundef %161, ptr noundef %162, ptr noundef %163, ptr noundef %164, ptr noundef %165, ptr noundef %166, ptr noundef %167, ptr noundef %168, ptr noundef %169, ptr noundef %170, ptr noundef %171, ptr noundef %172)
  store ptr %call290, ptr @__pyx_tuple__26, align 8, !tbaa !5
  %173 = load ptr, ptr @__pyx_tuple__26, align 8, !tbaa !5
  %tobool291 = icmp ne ptr %173, null
  %lnot292 = xor i1 %tobool291, true
  %lnot294 = xor i1 %lnot292, true
  %lnot296 = xor i1 %lnot294, true
  %lnot.ext297 = zext i1 %lnot296 to i32
  %conv298 = sext i32 %lnot.ext297 to i64
  %expval299 = call i64 @llvm.expect.i64(i64 %conv298, i64 0)
  %tobool300 = icmp ne i64 %expval299, 0
  br i1 %tobool300, label %if.then301, label %if.end302

if.then301:                                       ; preds = %if.end289
  %174 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %174, ptr @__pyx_filename, align 8, !tbaa !5
  %175 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr @__pyx_lineno, align 4, !tbaa !9
  %176 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20239, ptr @__pyx_clineno, align 4, !tbaa !9
  %177 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end302:                                        ; preds = %if.end289
  %178 = load ptr, ptr @__pyx_empty_bytes, align 8, !tbaa !5
  %179 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %180 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %181 = load ptr, ptr @__pyx_tuple__26, align 8, !tbaa !5
  %182 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %183 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %184 = load ptr, ptr @__pyx_kp_s_sklearn_cluster__k_means_minibat, align 8, !tbaa !5
  %185 = load ptr, ptr @__pyx_n_s_minibatch_update_sparse, align 8, !tbaa !5
  %186 = load ptr, ptr @__pyx_empty_bytes, align 8, !tbaa !5
  %call303 = call ptr @__Pyx_PyCode_New(i32 noundef 7, i32 noundef 0, i32 noundef 14, i32 noundef 0, i32 noundef 3, ptr noundef %178, ptr noundef %179, ptr noundef %180, ptr noundef %181, ptr noundef %182, ptr noundef %183, ptr noundef %184, ptr noundef %185, i32 noundef 111, ptr noundef %186)
  store ptr %call303, ptr @__pyx_codeobj__27, align 8, !tbaa !5
  %187 = load ptr, ptr @__pyx_codeobj__27, align 8, !tbaa !5
  %tobool304 = icmp ne ptr %187, null
  %lnot305 = xor i1 %tobool304, true
  %lnot307 = xor i1 %lnot305, true
  %lnot309 = xor i1 %lnot307, true
  %lnot.ext310 = zext i1 %lnot309 to i32
  %conv311 = sext i32 %lnot.ext310 to i64
  %expval312 = call i64 @llvm.expect.i64(i64 %conv311, i64 0)
  %tobool313 = icmp ne i64 %expval312, 0
  br i1 %tobool313, label %if.then314, label %if.end315

if.then314:                                       ; preds = %if.end302
  %188 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %188, ptr @__pyx_filename, align 8, !tbaa !5
  %189 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr @__pyx_lineno, align 4, !tbaa !9
  %190 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20242, ptr @__pyx_clineno, align 4, !tbaa !9
  %191 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end315:                                        ; preds = %if.end302
  %192 = load ptr, ptr @__pyx_kp_s_strided_and_direct_or_indirect, align 8, !tbaa !5
  %call316 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %192)
  store ptr %call316, ptr @__pyx_tuple__28, align 8, !tbaa !5
  %193 = load ptr, ptr @__pyx_tuple__28, align 8, !tbaa !5
  %tobool317 = icmp ne ptr %193, null
  %lnot318 = xor i1 %tobool317, true
  %lnot320 = xor i1 %lnot318, true
  %lnot322 = xor i1 %lnot320, true
  %lnot.ext323 = zext i1 %lnot322 to i32
  %conv324 = sext i32 %lnot.ext323 to i64
  %expval325 = call i64 @llvm.expect.i64(i64 %conv324, i64 0)
  %tobool326 = icmp ne i64 %expval325, 0
  br i1 %tobool326, label %if.then327, label %if.end328

if.then327:                                       ; preds = %if.end315
  %194 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %194, ptr @__pyx_filename, align 8, !tbaa !5
  %195 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 287, ptr @__pyx_lineno, align 4, !tbaa !9
  %196 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20251, ptr @__pyx_clineno, align 4, !tbaa !9
  %197 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end328:                                        ; preds = %if.end315
  %198 = load ptr, ptr @__pyx_kp_s_strided_and_direct, align 8, !tbaa !5
  %call329 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %198)
  store ptr %call329, ptr @__pyx_tuple__29, align 8, !tbaa !5
  %199 = load ptr, ptr @__pyx_tuple__29, align 8, !tbaa !5
  %tobool330 = icmp ne ptr %199, null
  %lnot331 = xor i1 %tobool330, true
  %lnot333 = xor i1 %lnot331, true
  %lnot335 = xor i1 %lnot333, true
  %lnot.ext336 = zext i1 %lnot335 to i32
  %conv337 = sext i32 %lnot.ext336 to i64
  %expval338 = call i64 @llvm.expect.i64(i64 %conv337, i64 0)
  %tobool339 = icmp ne i64 %expval338, 0
  br i1 %tobool339, label %if.then340, label %if.end341

if.then340:                                       ; preds = %if.end328
  %200 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %200, ptr @__pyx_filename, align 8, !tbaa !5
  %201 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 288, ptr @__pyx_lineno, align 4, !tbaa !9
  %202 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20262, ptr @__pyx_clineno, align 4, !tbaa !9
  %203 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end341:                                        ; preds = %if.end328
  %204 = load ptr, ptr @__pyx_kp_s_strided_and_indirect, align 8, !tbaa !5
  %call342 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %204)
  store ptr %call342, ptr @__pyx_tuple__30, align 8, !tbaa !5
  %205 = load ptr, ptr @__pyx_tuple__30, align 8, !tbaa !5
  %tobool343 = icmp ne ptr %205, null
  %lnot344 = xor i1 %tobool343, true
  %lnot346 = xor i1 %lnot344, true
  %lnot348 = xor i1 %lnot346, true
  %lnot.ext349 = zext i1 %lnot348 to i32
  %conv350 = sext i32 %lnot.ext349 to i64
  %expval351 = call i64 @llvm.expect.i64(i64 %conv350, i64 0)
  %tobool352 = icmp ne i64 %expval351, 0
  br i1 %tobool352, label %if.then353, label %if.end354

if.then353:                                       ; preds = %if.end341
  %206 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %206, ptr @__pyx_filename, align 8, !tbaa !5
  %207 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 289, ptr @__pyx_lineno, align 4, !tbaa !9
  %208 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20273, ptr @__pyx_clineno, align 4, !tbaa !9
  %209 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end354:                                        ; preds = %if.end341
  %210 = load ptr, ptr @__pyx_kp_s_contiguous_and_direct, align 8, !tbaa !5
  %call355 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %210)
  store ptr %call355, ptr @__pyx_tuple__31, align 8, !tbaa !5
  %211 = load ptr, ptr @__pyx_tuple__31, align 8, !tbaa !5
  %tobool356 = icmp ne ptr %211, null
  %lnot357 = xor i1 %tobool356, true
  %lnot359 = xor i1 %lnot357, true
  %lnot361 = xor i1 %lnot359, true
  %lnot.ext362 = zext i1 %lnot361 to i32
  %conv363 = sext i32 %lnot.ext362 to i64
  %expval364 = call i64 @llvm.expect.i64(i64 %conv363, i64 0)
  %tobool365 = icmp ne i64 %expval364, 0
  br i1 %tobool365, label %if.then366, label %if.end367

if.then366:                                       ; preds = %if.end354
  %212 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %212, ptr @__pyx_filename, align 8, !tbaa !5
  %213 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 292, ptr @__pyx_lineno, align 4, !tbaa !9
  %214 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20284, ptr @__pyx_clineno, align 4, !tbaa !9
  %215 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end367:                                        ; preds = %if.end354
  %216 = load ptr, ptr @__pyx_kp_s_contiguous_and_indirect, align 8, !tbaa !5
  %call368 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %216)
  store ptr %call368, ptr @__pyx_tuple__32, align 8, !tbaa !5
  %217 = load ptr, ptr @__pyx_tuple__32, align 8, !tbaa !5
  %tobool369 = icmp ne ptr %217, null
  %lnot370 = xor i1 %tobool369, true
  %lnot372 = xor i1 %lnot370, true
  %lnot374 = xor i1 %lnot372, true
  %lnot.ext375 = zext i1 %lnot374 to i32
  %conv376 = sext i32 %lnot.ext375 to i64
  %expval377 = call i64 @llvm.expect.i64(i64 %conv376, i64 0)
  %tobool378 = icmp ne i64 %expval377, 0
  br i1 %tobool378, label %if.then379, label %if.end380

if.then379:                                       ; preds = %if.end367
  %218 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %218, ptr @__pyx_filename, align 8, !tbaa !5
  %219 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 293, ptr @__pyx_lineno, align 4, !tbaa !9
  %220 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20295, ptr @__pyx_clineno, align 4, !tbaa !9
  %221 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end380:                                        ; preds = %if.end367
  %222 = load ptr, ptr @__pyx_n_s_pyx_type, align 8, !tbaa !5
  %223 = load ptr, ptr @__pyx_n_s_pyx_checksum, align 8, !tbaa !5
  %224 = load ptr, ptr @__pyx_n_s_pyx_state, align 8, !tbaa !5
  %225 = load ptr, ptr @__pyx_n_s_pyx_PickleError, align 8, !tbaa !5
  %226 = load ptr, ptr @__pyx_n_s_pyx_result, align 8, !tbaa !5
  %call381 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 5, ptr noundef %222, ptr noundef %223, ptr noundef %224, ptr noundef %225, ptr noundef %226)
  store ptr %call381, ptr @__pyx_tuple__33, align 8, !tbaa !5
  %227 = load ptr, ptr @__pyx_tuple__33, align 8, !tbaa !5
  %tobool382 = icmp ne ptr %227, null
  %lnot383 = xor i1 %tobool382, true
  %lnot385 = xor i1 %lnot383, true
  %lnot387 = xor i1 %lnot385, true
  %lnot.ext388 = zext i1 %lnot387 to i32
  %conv389 = sext i32 %lnot.ext388 to i64
  %expval390 = call i64 @llvm.expect.i64(i64 %conv389, i64 0)
  %tobool391 = icmp ne i64 %expval390, 0
  br i1 %tobool391, label %if.then392, label %if.end393

if.then392:                                       ; preds = %if.end380
  %228 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %228, ptr @__pyx_filename, align 8, !tbaa !5
  %229 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr @__pyx_lineno, align 4, !tbaa !9
  %230 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20304, ptr @__pyx_clineno, align 4, !tbaa !9
  %231 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end393:                                        ; preds = %if.end380
  %232 = load ptr, ptr @__pyx_empty_bytes, align 8, !tbaa !5
  %233 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %234 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %235 = load ptr, ptr @__pyx_tuple__33, align 8, !tbaa !5
  %236 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %237 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %238 = load ptr, ptr @__pyx_kp_s_stringsource, align 8, !tbaa !5
  %239 = load ptr, ptr @__pyx_n_s_pyx_unpickle_Enum, align 8, !tbaa !5
  %240 = load ptr, ptr @__pyx_empty_bytes, align 8, !tbaa !5
  %call394 = call ptr @__Pyx_PyCode_New(i32 noundef 3, i32 noundef 0, i32 noundef 5, i32 noundef 0, i32 noundef 3, ptr noundef %232, ptr noundef %233, ptr noundef %234, ptr noundef %235, ptr noundef %236, ptr noundef %237, ptr noundef %238, ptr noundef %239, i32 noundef 1, ptr noundef %240)
  store ptr %call394, ptr @__pyx_codeobj__34, align 8, !tbaa !5
  %241 = load ptr, ptr @__pyx_codeobj__34, align 8, !tbaa !5
  %tobool395 = icmp ne ptr %241, null
  %lnot396 = xor i1 %tobool395, true
  %lnot398 = xor i1 %lnot396, true
  %lnot400 = xor i1 %lnot398, true
  %lnot.ext401 = zext i1 %lnot400 to i32
  %conv402 = sext i32 %lnot.ext401 to i64
  %expval403 = call i64 @llvm.expect.i64(i64 %conv402, i64 0)
  %tobool404 = icmp ne i64 %expval403, 0
  br i1 %tobool404, label %if.then405, label %if.end406

if.then405:                                       ; preds = %if.end393
  %242 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %242, ptr @__pyx_filename, align 8, !tbaa !5
  %243 = load ptr, ptr @__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr @__pyx_lineno, align 4, !tbaa !9
  %244 = load i32, ptr @__pyx_lineno, align 4, !tbaa !9
  store i32 20307, ptr @__pyx_clineno, align 4, !tbaa !9
  %245 = load i32, ptr @__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end406:                                        ; preds = %if.end393
  store i32 0, ptr %retval, align 4
  br label %return

__pyx_L1_error:                                   ; preds = %if.then405, %if.then392, %if.then379, %if.then366, %if.then353, %if.then340, %if.then327, %if.then314, %if.then301, %if.then288, %if.then275, %if.then262, %if.then249, %if.then236, %if.then223, %if.then210, %if.then197, %if.then184, %if.then171, %if.then158, %if.then145, %if.then132, %if.then119, %if.then106, %if.then93, %if.then80, %if.then67, %if.then54, %if.then41, %if.then28, %if.then15, %if.then
  store i32 -1, ptr %retval, align 4
  br label %return

return:                                           ; preds = %__pyx_L1_error, %if.end406
  %246 = load i32, ptr %retval, align 4
  ret i32 %246
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_global_init_code() #0 {
entry:
  store ptr @_Py_NoneStruct, ptr @generic, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  store ptr @_Py_NoneStruct, ptr @strided, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  store ptr @_Py_NoneStruct, ptr @indirect, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  store ptr @_Py_NoneStruct, ptr @contiguous, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  store ptr @_Py_NoneStruct, ptr @indirect_contiguous, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_variable_export_code() #0 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_function_export_code() #0 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_type_init_code() #0 {
entry:
  %retval = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  store ptr @__pyx_vtable_array, ptr @__pyx_vtabptr_array, align 8, !tbaa !5
  store ptr @__pyx_array_get_memview, ptr @__pyx_vtable_array, align 8, !tbaa !34
  %call = call i32 @PyType_Ready(ptr noundef @__pyx_type___pyx_array)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %0, ptr %__pyx_filename, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 106, ptr %__pyx_lineno, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20387, ptr %__pyx_clineno, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_array, i32 0, i32 31), align 8, !tbaa !17
  %5 = load ptr, ptr @__pyx_vtabptr_array, align 8, !tbaa !5
  %call1 = call i32 @__Pyx_SetVtable(ptr noundef %4, ptr noundef %5)
  %cmp2 = icmp slt i32 %call1, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %6 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %6, ptr %__pyx_filename, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 106, ptr %__pyx_lineno, align 4, !tbaa !9
  %8 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20391, ptr %__pyx_clineno, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end4:                                          ; preds = %if.end
  %call5 = call i32 @__Pyx_setup_reduce(ptr noundef @__pyx_type___pyx_array)
  %cmp6 = icmp slt i32 %call5, 0
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end4
  %10 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %10, ptr %__pyx_filename, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 106, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20392, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end8:                                          ; preds = %if.end4
  store ptr @__pyx_type___pyx_array, ptr @__pyx_array_type, align 8, !tbaa !5
  %call9 = call i32 @PyType_Ready(ptr noundef @__pyx_type___pyx_MemviewEnum)
  %cmp10 = icmp slt i32 %call9, 0
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end8
  %14 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %14, ptr %__pyx_filename, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 280, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20394, ptr %__pyx_clineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end12:                                         ; preds = %if.end8
  %18 = load i64, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_MemviewEnum, i32 0, i32 34), align 8, !tbaa !36
  %tobool = icmp ne i64 %18, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end12
  %19 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_MemviewEnum, i32 0, i32 16), align 8, !tbaa !37
  %cmp13 = icmp eq ptr %19, @PyObject_GenericGetAttr
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end12
  %20 = phi i1 [ false, %if.end12 ], [ %cmp13, %land.rhs ]
  %lnot = xor i1 %20, true
  %lnot14 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot14 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool15 = icmp ne i64 %expval, 0
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %land.end
  store ptr @PyObject_GenericGetAttr, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_MemviewEnum, i32 0, i32 16), align 8, !tbaa !37
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %land.end
  %call18 = call i32 @__Pyx_setup_reduce(ptr noundef @__pyx_type___pyx_MemviewEnum)
  %cmp19 = icmp slt i32 %call18, 0
  br i1 %cmp19, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end17
  %21 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %21, ptr %__pyx_filename, align 8, !tbaa !5
  %22 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 280, ptr %__pyx_lineno, align 4, !tbaa !9
  %23 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20401, ptr %__pyx_clineno, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end22:                                         ; preds = %if.end17
  store ptr @__pyx_type___pyx_MemviewEnum, ptr @__pyx_MemviewEnum_type, align 8, !tbaa !5
  store ptr @__pyx_vtable_memoryview, ptr @__pyx_vtabptr_memoryview, align 8, !tbaa !5
  store ptr @__pyx_memoryview_get_item_pointer, ptr @__pyx_vtable_memoryview, align 8, !tbaa !38
  store ptr @__pyx_memoryview_is_slice, ptr getelementptr inbounds (%struct.__pyx_vtabstruct_memoryview, ptr @__pyx_vtable_memoryview, i32 0, i32 1), align 8, !tbaa !40
  store ptr @__pyx_memoryview_setitem_slice_assignment, ptr getelementptr inbounds (%struct.__pyx_vtabstruct_memoryview, ptr @__pyx_vtable_memoryview, i32 0, i32 2), align 8, !tbaa !41
  store ptr @__pyx_memoryview_setitem_slice_assign_scalar, ptr getelementptr inbounds (%struct.__pyx_vtabstruct_memoryview, ptr @__pyx_vtable_memoryview, i32 0, i32 3), align 8, !tbaa !42
  store ptr @__pyx_memoryview_setitem_indexed, ptr getelementptr inbounds (%struct.__pyx_vtabstruct_memoryview, ptr @__pyx_vtable_memoryview, i32 0, i32 4), align 8, !tbaa !43
  store ptr @__pyx_memoryview_convert_item_to_object, ptr getelementptr inbounds (%struct.__pyx_vtabstruct_memoryview, ptr @__pyx_vtable_memoryview, i32 0, i32 5), align 8, !tbaa !44
  store ptr @__pyx_memoryview_assign_item_from_object, ptr getelementptr inbounds (%struct.__pyx_vtabstruct_memoryview, ptr @__pyx_vtable_memoryview, i32 0, i32 6), align 8, !tbaa !45
  %call23 = call i32 @PyType_Ready(ptr noundef @__pyx_type___pyx_memoryview)
  %cmp24 = icmp slt i32 %call23, 0
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end22
  %25 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %25, ptr %__pyx_filename, align 8, !tbaa !5
  %26 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 331, ptr %__pyx_lineno, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20411, ptr %__pyx_clineno, align 4, !tbaa !9
  %28 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end27:                                         ; preds = %if.end22
  %29 = load i64, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_memoryview, i32 0, i32 34), align 8, !tbaa !36
  %tobool28 = icmp ne i64 %29, 0
  br i1 %tobool28, label %land.end32, label %land.rhs29

land.rhs29:                                       ; preds = %if.end27
  %30 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_memoryview, i32 0, i32 16), align 8, !tbaa !37
  %cmp30 = icmp eq ptr %30, @PyObject_GenericGetAttr
  br label %land.end32

land.end32:                                       ; preds = %land.rhs29, %if.end27
  %31 = phi i1 [ false, %if.end27 ], [ %cmp30, %land.rhs29 ]
  %lnot33 = xor i1 %31, true
  %lnot35 = xor i1 %lnot33, true
  %lnot.ext36 = zext i1 %lnot35 to i32
  %conv37 = sext i32 %lnot.ext36 to i64
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 1)
  %tobool39 = icmp ne i64 %expval38, 0
  br i1 %tobool39, label %if.then40, label %if.end41

if.then40:                                        ; preds = %land.end32
  store ptr @PyObject_GenericGetAttr, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_memoryview, i32 0, i32 16), align 8, !tbaa !37
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %land.end32
  %32 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_memoryview, i32 0, i32 31), align 8, !tbaa !17
  %33 = load ptr, ptr @__pyx_vtabptr_memoryview, align 8, !tbaa !5
  %call42 = call i32 @__Pyx_SetVtable(ptr noundef %32, ptr noundef %33)
  %cmp43 = icmp slt i32 %call42, 0
  br i1 %cmp43, label %if.then45, label %if.end46

if.then45:                                        ; preds = %if.end41
  %34 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %34, ptr %__pyx_filename, align 8, !tbaa !5
  %35 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 331, ptr %__pyx_lineno, align 4, !tbaa !9
  %36 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20418, ptr %__pyx_clineno, align 4, !tbaa !9
  %37 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end46:                                         ; preds = %if.end41
  %call47 = call i32 @__Pyx_setup_reduce(ptr noundef @__pyx_type___pyx_memoryview)
  %cmp48 = icmp slt i32 %call47, 0
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.end46
  %38 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %38, ptr %__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 331, ptr %__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20419, ptr %__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end51:                                         ; preds = %if.end46
  store ptr @__pyx_type___pyx_memoryview, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  store ptr @__pyx_vtable__memoryviewslice, ptr @__pyx_vtabptr__memoryviewslice, align 8, !tbaa !5
  %42 = load ptr, ptr @__pyx_vtabptr_memoryview, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 @__pyx_vtable__memoryviewslice, ptr align 8 %42, i64 56, i1 false), !tbaa.struct !46
  store ptr @__pyx_memoryviewslice_convert_item_to_object, ptr getelementptr inbounds (%struct.__pyx_vtabstruct_memoryview, ptr @__pyx_vtable__memoryviewslice, i32 0, i32 5), align 8, !tbaa !47
  store ptr @__pyx_memoryviewslice_assign_item_from_object, ptr getelementptr inbounds (%struct.__pyx_vtabstruct_memoryview, ptr @__pyx_vtable__memoryviewslice, i32 0, i32 6), align 8, !tbaa !49
  %43 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  store ptr %43, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_memoryviewslice, i32 0, i32 30), align 8, !tbaa !33
  %call52 = call i32 @PyType_Ready(ptr noundef @__pyx_type___pyx_memoryviewslice)
  %cmp53 = icmp slt i32 %call52, 0
  br i1 %cmp53, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.end51
  %44 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %44, ptr %__pyx_filename, align 8, !tbaa !5
  %45 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 967, ptr %__pyx_lineno, align 4, !tbaa !9
  %46 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20426, ptr %__pyx_clineno, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end56:                                         ; preds = %if.end51
  %48 = load i64, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_memoryviewslice, i32 0, i32 34), align 8, !tbaa !36
  %tobool57 = icmp ne i64 %48, 0
  br i1 %tobool57, label %land.end61, label %land.rhs58

land.rhs58:                                       ; preds = %if.end56
  %49 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_memoryviewslice, i32 0, i32 16), align 8, !tbaa !37
  %cmp59 = icmp eq ptr %49, @PyObject_GenericGetAttr
  br label %land.end61

land.end61:                                       ; preds = %land.rhs58, %if.end56
  %50 = phi i1 [ false, %if.end56 ], [ %cmp59, %land.rhs58 ]
  %lnot62 = xor i1 %50, true
  %lnot64 = xor i1 %lnot62, true
  %lnot.ext65 = zext i1 %lnot64 to i32
  %conv66 = sext i32 %lnot.ext65 to i64
  %expval67 = call i64 @llvm.expect.i64(i64 %conv66, i64 1)
  %tobool68 = icmp ne i64 %expval67, 0
  br i1 %tobool68, label %if.then69, label %if.end70

if.then69:                                        ; preds = %land.end61
  store ptr @PyObject_GenericGetAttr, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_memoryviewslice, i32 0, i32 16), align 8, !tbaa !37
  br label %if.end70

if.end70:                                         ; preds = %if.then69, %land.end61
  %51 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type___pyx_memoryviewslice, i32 0, i32 31), align 8, !tbaa !17
  %52 = load ptr, ptr @__pyx_vtabptr__memoryviewslice, align 8, !tbaa !5
  %call71 = call i32 @__Pyx_SetVtable(ptr noundef %51, ptr noundef %52)
  %cmp72 = icmp slt i32 %call71, 0
  br i1 %cmp72, label %if.then74, label %if.end75

if.then74:                                        ; preds = %if.end70
  %53 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %53, ptr %__pyx_filename, align 8, !tbaa !5
  %54 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 967, ptr %__pyx_lineno, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20433, ptr %__pyx_clineno, align 4, !tbaa !9
  %56 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end75:                                         ; preds = %if.end70
  %call76 = call i32 @__Pyx_setup_reduce(ptr noundef @__pyx_type___pyx_memoryviewslice)
  %cmp77 = icmp slt i32 %call76, 0
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %if.end75
  %57 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %57, ptr %__pyx_filename, align 8, !tbaa !5
  %58 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 967, ptr %__pyx_lineno, align 4, !tbaa !9
  %59 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 20434, ptr %__pyx_clineno, align 4, !tbaa !9
  %60 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end80:                                         ; preds = %if.end75
  store ptr @__pyx_type___pyx_memoryviewslice, ptr @__pyx_memoryviewslice_type, align 8, !tbaa !5
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

__pyx_L1_error:                                   ; preds = %if.then79, %if.then74, %if.then55, %if.then50, %if.then45, %if.then26, %if.then21, %if.then11, %if.then7, %if.then3, %if.then
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_L1_error, %if.end80
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  %61 = load i32, ptr %retval, align 4
  ret i32 %61
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_type_import_code() #0 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_variable_import_code() #0 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_function_import_code() #0 {
entry:
  ret i32 0
}

declare ptr @PyDict_New() #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_FusedFunction_New(ptr noundef %ml, i32 noundef %flags, ptr noundef %qualname, ptr noundef %closure, ptr noundef %module, ptr noundef %globals, ptr noundef %code) #0 {
entry:
  %ml.addr = alloca ptr, align 8
  %flags.addr = alloca i32, align 4
  %qualname.addr = alloca ptr, align 8
  %closure.addr = alloca ptr, align 8
  %module.addr = alloca ptr, align 8
  %globals.addr = alloca ptr, align 8
  %code.addr = alloca ptr, align 8
  %op = alloca ptr, align 8
  %fusedfunc = alloca ptr, align 8
  store ptr %ml, ptr %ml.addr, align 8, !tbaa !5
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !9
  store ptr %qualname, ptr %qualname.addr, align 8, !tbaa !5
  store ptr %closure, ptr %closure.addr, align 8, !tbaa !5
  store ptr %module, ptr %module.addr, align 8, !tbaa !5
  store ptr %globals, ptr %globals.addr, align 8, !tbaa !5
  store ptr %code, ptr %code.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %op) #13
  %0 = load ptr, ptr @__pyx_FusedFunctionType, align 8, !tbaa !5
  %call = call ptr @_PyObject_GC_New(ptr noundef %0)
  %1 = load ptr, ptr %ml.addr, align 8, !tbaa !5
  %2 = load i32, ptr %flags.addr, align 4, !tbaa !9
  %3 = load ptr, ptr %qualname.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %closure.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %module.addr, align 8, !tbaa !5
  %6 = load ptr, ptr %globals.addr, align 8, !tbaa !5
  %7 = load ptr, ptr %code.addr, align 8, !tbaa !5
  %call1 = call ptr @__Pyx_CyFunction_Init(ptr noundef %call, ptr noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %6, ptr noundef %7)
  store ptr %call1, ptr %op, align 8, !tbaa !5
  %8 = load ptr, ptr %op, align 8, !tbaa !5
  %tobool = icmp ne ptr %8, null
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %fusedfunc) #13
  %9 = load ptr, ptr %op, align 8, !tbaa !5
  store ptr %9, ptr %fusedfunc, align 8, !tbaa !5
  %10 = load ptr, ptr %fusedfunc, align 8, !tbaa !5
  %__signatures__ = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %10, i32 0, i32 1
  store ptr null, ptr %__signatures__, align 8, !tbaa !11
  %11 = load ptr, ptr %fusedfunc, align 8, !tbaa !5
  %type = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %11, i32 0, i32 2
  store ptr null, ptr %type, align 8, !tbaa !50
  %12 = load ptr, ptr %fusedfunc, align 8, !tbaa !5
  %self = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %12, i32 0, i32 3
  store ptr null, ptr %self, align 8, !tbaa !51
  %13 = load ptr, ptr %op, align 8, !tbaa !5
  call void @PyObject_GC_Track(ptr noundef %13)
  call void @llvm.lifetime.end.p0(i64 8, ptr %fusedfunc) #13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %14 = load ptr, ptr %op, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %op) #13
  ret ptr %14
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_CyFunction_SetDefaultsTuple(ptr noundef %func, ptr noundef %tuple) #3 {
entry:
  %func.addr = alloca ptr, align 8
  %tuple.addr = alloca ptr, align 8
  %m = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %m) #13
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  store ptr %0, ptr %m, align 8, !tbaa !5
  %1 = load ptr, ptr %tuple.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %m, align 8, !tbaa !5
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 13
  store ptr %1, ptr %defaults_tuple, align 8, !tbaa !52
  %3 = load ptr, ptr %tuple.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %3)
  call void @llvm.lifetime.end.p0(i64 8, ptr %m) #13
  ret void
}

declare i32 @PyDict_SetItem(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__pyx_capsule_create(ptr noundef %p, ptr noundef %sig) #3 {
entry:
  %p.addr = alloca ptr, align 8
  %sig.addr = alloca ptr, align 8
  %cobj = alloca ptr, align 8
  store ptr %p, ptr %p.addr, align 8, !tbaa !5
  store ptr %sig, ptr %sig.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %cobj) #13
  %0 = load ptr, ptr %p.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %sig.addr, align 8, !tbaa !5
  %call = call ptr @PyCapsule_New(ptr noundef %0, ptr noundef %1, ptr noundef null)
  store ptr %call, ptr %cobj, align 8, !tbaa !5
  %2 = load ptr, ptr %cobj, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %cobj) #13
  ret ptr %2
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_array_getbuffer(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_info, i32 noundef %__pyx_v_flags) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_info.addr = alloca ptr, align 8
  %__pyx_v_flags.addr = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_info, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  store i32 %__pyx_v_flags, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %2 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %call = call i32 @__pyx_array___pyx_pf_15View_dot_MemoryView_5array_2__getbuffer__(ptr noundef %0, ptr noundef %1, i32 noundef %2)
  store i32 %call, ptr %__pyx_r, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  ret i32 %3
}

declare void @PyType_Modified(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_Call(ptr noundef %func, ptr noundef %arg, ptr noundef %kw) #3 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %kw.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %call = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !5
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %call) #13
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %call1 = call ptr @Py_TYPE(ptr noundef %0)
  %tp_call = getelementptr inbounds %struct._typeobject, ptr %call1, i32 0, i32 14
  %1 = load ptr, ptr %tp_call, align 8, !tbaa !53
  store ptr %1, ptr %call, align 8, !tbaa !5
  %2 = load ptr, ptr %call, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %call5 = call ptr @PyObject_Call(ptr noundef %3, ptr noundef %4, ptr noundef %5)
  store ptr %call5, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %call6 = call i32 @Py_EnterRecursiveCall(ptr noundef @.str.122)
  %tobool7 = icmp ne i32 %call6, 0
  %lnot8 = xor i1 %tobool7, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %6 = load ptr, ptr %call, align 8, !tbaa !5
  %7 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %call17 = call ptr %6(ptr noundef %7, ptr noundef %8, ptr noundef %9)
  store ptr %call17, ptr %result, align 8, !tbaa !5
  call void @Py_LeaveRecursiveCall()
  %10 = load ptr, ptr %result, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %10, null
  %lnot19 = xor i1 %tobool18, true
  %lnot21 = xor i1 %lnot19, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %land.lhs.true, label %if.end40

land.lhs.true:                                    ; preds = %if.end16
  %call28 = call ptr @PyErr_Occurred()
  %tobool29 = icmp ne ptr %call28, null
  %lnot30 = xor i1 %tobool29, true
  %lnot32 = xor i1 %lnot30, true
  %lnot34 = xor i1 %lnot32, true
  %lnot.ext35 = zext i1 %lnot34 to i32
  %conv36 = sext i32 %lnot.ext35 to i64
  %expval37 = call i64 @llvm.expect.i64(i64 %conv36, i64 0)
  %tobool38 = icmp ne i64 %expval37, 0
  br i1 %tobool38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %land.lhs.true
  %11 = load ptr, ptr @PyExc_SystemError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %11, ptr noundef @.str.123)
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %land.lhs.true, %if.end16
  %12 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %12, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end40, %if.then15, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %call) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  %13 = load ptr, ptr %retval, align 8
  ret ptr %13
}

declare ptr @PyThread_allocate_lock() #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memoryview_getbuffer(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_info, i32 noundef %__pyx_v_flags) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_info.addr = alloca ptr, align 8
  %__pyx_v_flags.addr = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_info, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  store i32 %__pyx_v_flags, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %2 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %call = call i32 @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_8__getbuffer__(ptr noundef %0, ptr noundef %1, i32 noundef %2)
  store i32 %call, ptr %__pyx_r, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  ret i32 %3
}

declare ptr @PyCMethod_New(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_AddTraceback(ptr noundef %funcname, i32 noundef %c_line, i32 noundef %py_line, ptr noundef %filename) #0 {
entry:
  %funcname.addr = alloca ptr, align 8
  %c_line.addr = alloca i32, align 4
  %py_line.addr = alloca i32, align 4
  %filename.addr = alloca ptr, align 8
  %py_code = alloca ptr, align 8
  %py_frame = alloca ptr, align 8
  %tstate = alloca ptr, align 8
  %ptype = alloca ptr, align 8
  %pvalue = alloca ptr, align 8
  %ptraceback = alloca ptr, align 8
  store ptr %funcname, ptr %funcname.addr, align 8, !tbaa !5
  store i32 %c_line, ptr %c_line.addr, align 4, !tbaa !9
  store i32 %py_line, ptr %py_line.addr, align 4, !tbaa !9
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_code) #13
  store ptr null, ptr %py_code, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_frame) #13
  store ptr null, ptr %py_frame, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tstate) #13
  %call = call ptr @PyThreadState_Get()
  store ptr %call, ptr %tstate, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptype) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %pvalue) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptraceback) #13
  %0 = load i32, ptr %c_line.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %tstate, align 8, !tbaa !5
  %2 = load i32, ptr %c_line.addr, align 4, !tbaa !9
  %call1 = call i32 @__Pyx_CLineForTraceback(ptr noundef %1, i32 noundef %2)
  store i32 %call1, ptr %c_line.addr, align 4, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, ptr %c_line.addr, align 4, !tbaa !9
  %tobool2 = icmp ne i32 %3, 0
  br i1 %tobool2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %4 = load i32, ptr %c_line.addr, align 4, !tbaa !9
  %sub = sub i32 0, %4
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %5 = load i32, ptr %py_line.addr, align 4, !tbaa !9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %5, %cond.false ]
  %call3 = call ptr @__pyx_find_code_object(i32 noundef %cond)
  store ptr %call3, ptr %py_code, align 8, !tbaa !5
  %6 = load ptr, ptr %py_code, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %6, null
  br i1 %tobool4, label %if.end16, label %if.then5

if.then5:                                         ; preds = %cond.end
  call void @PyErr_Fetch(ptr noundef %ptype, ptr noundef %pvalue, ptr noundef %ptraceback)
  %7 = load ptr, ptr %funcname.addr, align 8, !tbaa !5
  %8 = load i32, ptr %c_line.addr, align 4, !tbaa !9
  %9 = load i32, ptr %py_line.addr, align 4, !tbaa !9
  %10 = load ptr, ptr %filename.addr, align 8, !tbaa !5
  %call6 = call ptr @__Pyx_CreateCodeObjectForTraceback(ptr noundef %7, i32 noundef %8, i32 noundef %9, ptr noundef %10)
  store ptr %call6, ptr %py_code, align 8, !tbaa !5
  %11 = load ptr, ptr %py_code, align 8, !tbaa !5
  %tobool7 = icmp ne ptr %11, null
  br i1 %tobool7, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.then5
  %12 = load ptr, ptr %ptype, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %12)
  %13 = load ptr, ptr %pvalue, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %13)
  %14 = load ptr, ptr %ptraceback, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %14)
  br label %bad

if.end9:                                          ; preds = %if.then5
  %15 = load ptr, ptr %ptype, align 8, !tbaa !5
  %16 = load ptr, ptr %pvalue, align 8, !tbaa !5
  %17 = load ptr, ptr %ptraceback, align 8, !tbaa !5
  call void @PyErr_Restore(ptr noundef %15, ptr noundef %16, ptr noundef %17)
  %18 = load i32, ptr %c_line.addr, align 4, !tbaa !9
  %tobool10 = icmp ne i32 %18, 0
  br i1 %tobool10, label %cond.true11, label %cond.false13

cond.true11:                                      ; preds = %if.end9
  %19 = load i32, ptr %c_line.addr, align 4, !tbaa !9
  %sub12 = sub i32 0, %19
  br label %cond.end14

cond.false13:                                     ; preds = %if.end9
  %20 = load i32, ptr %py_line.addr, align 4, !tbaa !9
  br label %cond.end14

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi i32 [ %sub12, %cond.true11 ], [ %20, %cond.false13 ]
  %21 = load ptr, ptr %py_code, align 8, !tbaa !5
  call void @__pyx_insert_code_object(i32 noundef %cond15, ptr noundef %21)
  br label %if.end16

if.end16:                                         ; preds = %cond.end14, %cond.end
  %22 = load ptr, ptr %tstate, align 8, !tbaa !5
  %23 = load ptr, ptr %py_code, align 8, !tbaa !5
  %24 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %call17 = call ptr @PyFrame_New(ptr noundef %22, ptr noundef %23, ptr noundef %24, ptr noundef null)
  store ptr %call17, ptr %py_frame, align 8, !tbaa !5
  %25 = load ptr, ptr %py_frame, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %25, null
  br i1 %tobool18, label %if.end20, label %if.then19

if.then19:                                        ; preds = %if.end16
  br label %bad

if.end20:                                         ; preds = %if.end16
  %26 = load i32, ptr %py_line.addr, align 4, !tbaa !9
  %27 = load ptr, ptr %py_frame, align 8, !tbaa !5
  %f_lineno = getelementptr inbounds %struct._frame, ptr %27, i32 0, i32 4
  store i32 %26, ptr %f_lineno, align 8, !tbaa !54
  %28 = load ptr, ptr %py_frame, align 8, !tbaa !5
  %call21 = call i32 @PyTraceBack_Here(ptr noundef %28)
  br label %bad

bad:                                              ; preds = %if.end20, %if.then19, %if.then8
  %29 = load ptr, ptr %py_code, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %29)
  %30 = load ptr, ptr %py_frame, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %30)
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptraceback) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %pvalue) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptype) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %tstate) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_frame) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_code) #13
  ret void
}

declare ptr @PyErr_Occurred() #1

declare ptr @Py_GetVersion() #1

declare i32 @PyOS_snprintf(ptr noundef, i64 noundef, ptr noundef, ...) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #6

declare i32 @PyErr_WarnEx(ptr noundef, ptr noundef, i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_FetchCommonType(ptr noundef %type) #0 {
entry:
  %retval = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %fake_module = alloca ptr, align 8
  %cached_type = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %type, ptr %type.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %fake_module) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %cached_type) #13
  store ptr null, ptr %cached_type, align 8, !tbaa !5
  %call = call ptr @PyImport_AddModule(ptr noundef @.str.23)
  store ptr %call, ptr %fake_module, align 8, !tbaa !5
  %0 = load ptr, ptr %fake_module, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %fake_module, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %1)
  %2 = load ptr, ptr %fake_module, align 8, !tbaa !5
  %3 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %3, i32 0, i32 1
  %4 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %call1 = call ptr @PyObject_GetAttrString(ptr noundef %2, ptr noundef %4)
  store ptr %call1, ptr %cached_type, align 8, !tbaa !5
  %5 = load ptr, ptr %cached_type, align 8, !tbaa !5
  %tobool2 = icmp ne ptr %5, null
  br i1 %tobool2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %6 = load ptr, ptr %cached_type, align 8, !tbaa !5
  %call4 = call i32 @PyType_Check(ptr noundef %6)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end9, label %if.then6

if.then6:                                         ; preds = %if.then3
  %7 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %8 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %tp_name7 = getelementptr inbounds %struct._typeobject, ptr %8, i32 0, i32 1
  %9 = load ptr, ptr %tp_name7, align 8, !tbaa !56
  %call8 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %7, ptr noundef @.str.24, ptr noundef %9)
  br label %bad

if.end9:                                          ; preds = %if.then3
  %10 = load ptr, ptr %cached_type, align 8, !tbaa !5
  %tp_basicsize = getelementptr inbounds %struct._typeobject, ptr %10, i32 0, i32 2
  %11 = load i64, ptr %tp_basicsize, align 8, !tbaa !57
  %12 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %tp_basicsize10 = getelementptr inbounds %struct._typeobject, ptr %12, i32 0, i32 2
  %13 = load i64, ptr %tp_basicsize10, align 8, !tbaa !57
  %cmp = icmp ne i64 %11, %13
  br i1 %cmp, label %if.then11, label %if.end14

if.then11:                                        ; preds = %if.end9
  %14 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %15 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %tp_name12 = getelementptr inbounds %struct._typeobject, ptr %15, i32 0, i32 1
  %16 = load ptr, ptr %tp_name12, align 8, !tbaa !56
  %call13 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %14, ptr noundef @.str.25, ptr noundef %16)
  br label %bad

if.end14:                                         ; preds = %if.end9
  br label %if.end28

if.else:                                          ; preds = %if.end
  %17 = load ptr, ptr @PyExc_AttributeError, align 8, !tbaa !5
  %call15 = call i32 @PyErr_ExceptionMatches(ptr noundef %17)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.end18, label %if.then17

if.then17:                                        ; preds = %if.else
  br label %bad

if.end18:                                         ; preds = %if.else
  call void @PyErr_Clear()
  %18 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %call19 = call i32 @PyType_Ready(ptr noundef %18)
  %cmp20 = icmp slt i32 %call19, 0
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end18
  br label %bad

if.end22:                                         ; preds = %if.end18
  %19 = load ptr, ptr %fake_module, align 8, !tbaa !5
  %20 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %tp_name23 = getelementptr inbounds %struct._typeobject, ptr %20, i32 0, i32 1
  %21 = load ptr, ptr %tp_name23, align 8, !tbaa !56
  %22 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %call24 = call i32 @PyObject_SetAttrString(ptr noundef %19, ptr noundef %21, ptr noundef %22)
  %cmp25 = icmp slt i32 %call24, 0
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end22
  br label %bad

if.end27:                                         ; preds = %if.end22
  %23 = load ptr, ptr %type.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %23)
  %24 = load ptr, ptr %type.addr, align 8, !tbaa !5
  store ptr %24, ptr %cached_type, align 8, !tbaa !5
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.end14
  br label %done

done:                                             ; preds = %bad, %if.end28
  %25 = load ptr, ptr %fake_module, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %25)
  %26 = load ptr, ptr %cached_type, align 8, !tbaa !5
  store ptr %26, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

bad:                                              ; preds = %if.then26, %if.then21, %if.then17, %if.then11, %if.then6
  %27 = load ptr, ptr %cached_type, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %27)
  store ptr null, ptr %cached_type, align 8, !tbaa !5
  br label %done

cleanup:                                          ; preds = %done, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cached_type) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %fake_module) #13
  %28 = load ptr, ptr %retval, align 8
  ret ptr %28
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyType_Check(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 2147483648)
  ret i32 %call1
}

declare ptr @PyErr_Format(ptr noundef, ptr noundef, ...) #1

declare i32 @PyType_Ready(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyType_HasFeature(ptr noundef %type, i64 noundef %feature) #3 {
entry:
  %type.addr = alloca ptr, align 8
  %feature.addr = alloca i64, align 8
  %flags = alloca i64, align 8
  store ptr %type, ptr %type.addr, align 8, !tbaa !5
  store i64 %feature, ptr %feature.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %flags) #13
  %0 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 19
  %1 = load i64, ptr %tp_flags, align 8, !tbaa !58
  store i64 %1, ptr %flags, align 8, !tbaa !27
  %2 = load i64, ptr %flags, align 8, !tbaa !27
  %3 = load i64, ptr %feature.addr, align 8, !tbaa !27
  %and = and i64 %2, %3
  %cmp = icmp ne i64 %and, 0
  %conv = zext i1 %cmp to i32
  call void @llvm.lifetime.end.p0(i64 8, ptr %flags) #13
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @Py_TYPE(ptr noundef %ob) #3 {
entry:
  %ob.addr = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %ob.addr, align 8, !tbaa !5
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1
  %1 = load ptr, ptr %ob_type, align 8, !tbaa !59
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_CyFunction_dealloc(ptr noundef %m) #0 {
entry:
  %m.addr = alloca ptr, align 8
  store ptr %m, ptr %m.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %m.addr, align 8, !tbaa !5
  call void @PyObject_GC_UnTrack(ptr noundef %0)
  %1 = load ptr, ptr %m.addr, align 8, !tbaa !5
  call void @__Pyx__CyFunction_dealloc(ptr noundef %1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_repr(ptr noundef %op) #0 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 3
  %1 = load ptr, ptr %func_qualname, align 8, !tbaa !60
  %2 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %call = call ptr (ptr, ...) @PyUnicode_FromFormat(ptr noundef @.str.27, ptr noundef %1, ptr noundef %2)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_CallAsMethod(ptr noundef %func, ptr noundef %args, ptr noundef %kw) #0 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %kw.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cyfunc = alloca ptr, align 8
  %argc = alloca i64, align 8
  %new_args = alloca ptr, align 8
  %self = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  store ptr %args, ptr %args.addr, align 8, !tbaa !5
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %cyfunc) #13
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  store ptr %0, ptr %cyfunc, align 8, !tbaa !5
  %1 = load ptr, ptr %cyfunc, align 8, !tbaa !5
  %flags = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %1, i32 0, i32 12
  %2 = load i32, ptr %flags, align 8, !tbaa !61
  %and = and i32 %2, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %3 = load ptr, ptr %cyfunc, align 8, !tbaa !5
  %flags1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 12
  %4 = load i32, ptr %flags1, align 8, !tbaa !61
  %and2 = and i32 %4, 1
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %argc) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_args) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #13
  %5 = load ptr, ptr %args.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %5)
  store i64 %call, ptr %argc, align 8, !tbaa !27
  %6 = load ptr, ptr %args.addr, align 8, !tbaa !5
  %7 = load i64, ptr %argc, align 8, !tbaa !27
  %call4 = call ptr @PyTuple_GetSlice(ptr noundef %6, i64 noundef 1, i64 noundef %7)
  store ptr %call4, ptr %new_args, align 8, !tbaa !5
  %8 = load ptr, ptr %new_args, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %8, null
  %lnot = xor i1 %tobool5, true
  %lnot6 = xor i1 %lnot, true
  %lnot7 = xor i1 %lnot6, true
  %lnot.ext = zext i1 %lnot7 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool8 = icmp ne i64 %expval, 0
  br i1 %tobool8, label %if.then9, label %if.end

if.then9:                                         ; preds = %if.then
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  %9 = load ptr, ptr %args.addr, align 8, !tbaa !5
  %call10 = call ptr @PyTuple_GetItem(ptr noundef %9, i64 noundef 0)
  store ptr %call10, ptr %self, align 8, !tbaa !5
  %10 = load ptr, ptr %self, align 8, !tbaa !5
  %tobool11 = icmp ne ptr %10, null
  %lnot12 = xor i1 %tobool11, true
  %lnot14 = xor i1 %lnot12, true
  %lnot16 = xor i1 %lnot14, true
  %lnot.ext17 = zext i1 %lnot16 to i32
  %conv18 = sext i32 %lnot.ext17 to i64
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 0)
  %tobool20 = icmp ne i64 %expval19, 0
  br i1 %tobool20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.end
  %11 = load ptr, ptr %new_args, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %11)
  %12 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %13 = load ptr, ptr %cyfunc, align 8, !tbaa !5
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %13, i32 0, i32 3
  %14 = load ptr, ptr %func_qualname, align 8, !tbaa !60
  %call22 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %12, ptr noundef @.str.28, ptr noundef %14)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end23:                                         ; preds = %if.end
  %15 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %16 = load ptr, ptr %self, align 8, !tbaa !5
  %17 = load ptr, ptr %new_args, align 8, !tbaa !5
  %18 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %call24 = call ptr @__Pyx_CyFunction_CallMethod(ptr noundef %15, ptr noundef %16, ptr noundef %17, ptr noundef %18)
  store ptr %call24, ptr %result, align 8, !tbaa !5
  %19 = load ptr, ptr %new_args, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %19)
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.then21, %if.then9
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %argc) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup29 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end28

if.else:                                          ; preds = %land.lhs.true, %entry
  %20 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %21 = load ptr, ptr %args.addr, align 8, !tbaa !5
  %22 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %call27 = call ptr @__Pyx_CyFunction_Call(ptr noundef %20, ptr noundef %21, ptr noundef %22)
  store ptr %call27, ptr %result, align 8, !tbaa !5
  br label %if.end28

if.end28:                                         ; preds = %if.else, %cleanup.cont
  %23 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %23, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup29

cleanup29:                                        ; preds = %if.end28, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %cyfunc) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  %24 = load ptr, ptr %retval, align 8
  ret ptr %24
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_traverse(ptr noundef %m, ptr noundef %visit, ptr noundef %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %m.addr = alloca ptr, align 8
  %visit.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %vret8 = alloca i32, align 4
  %vret23 = alloca i32, align 4
  %vret37 = alloca i32, align 4
  %vret51 = alloca i32, align 4
  %vret65 = alloca i32, align 4
  %vret79 = alloca i32, align 4
  %vret93 = alloca i32, align 4
  %vret107 = alloca i32, align 4
  %vret121 = alloca i32, align 4
  %vret135 = alloca i32, align 4
  %pydefaults = alloca ptr, align 8
  %i = alloca i32, align 4
  %vret152 = alloca i32, align 4
  store ptr %m, ptr %m.addr, align 8, !tbaa !5
  store ptr %visit, ptr %visit.addr, align 8, !tbaa !5
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_closure = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 7
  %1 = load ptr, ptr %func_closure, align 8, !tbaa !62
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.then, label %if.end4

if.then:                                          ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret) #13
  %2 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_closure1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 7
  %4 = load ptr, ptr %func_closure1, align 8, !tbaa !62
  %5 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call = call i32 %2(ptr noundef %4, ptr noundef %5)
  store i32 %call, ptr %vret, align 4, !tbaa !9
  %6 = load i32, ptr %vret, align 4, !tbaa !9
  %tobool2 = icmp ne i32 %6, 0
  br i1 %tobool2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %7 = load i32, ptr %vret, align 4, !tbaa !9
  store i32 %7, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then3
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end4

if.end4:                                          ; preds = %cleanup.cont, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end4
  br label %do.body5

do.body5:                                         ; preds = %do.end
  %8 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 0
  %m_module = getelementptr inbounds %struct.PyCFunctionObject, ptr %func, i32 0, i32 3
  %9 = load ptr, ptr %m_module, align 8, !tbaa !63
  %tobool6 = icmp ne ptr %9, null
  br i1 %tobool6, label %if.then7, label %if.end18

if.then7:                                         ; preds = %do.body5
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret8) #13
  %10 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %11 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func9 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %11, i32 0, i32 0
  %m_module10 = getelementptr inbounds %struct.PyCFunctionObject, ptr %func9, i32 0, i32 3
  %12 = load ptr, ptr %m_module10, align 8, !tbaa !63
  %13 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call11 = call i32 %10(ptr noundef %12, ptr noundef %13)
  store i32 %call11, ptr %vret8, align 4, !tbaa !9
  %14 = load i32, ptr %vret8, align 4, !tbaa !9
  %tobool12 = icmp ne i32 %14, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.then7
  %15 = load i32, ptr %vret8, align 4, !tbaa !9
  store i32 %15, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup15

if.end14:                                         ; preds = %if.then7
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup15

cleanup15:                                        ; preds = %if.end14, %if.then13
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret8) #13
  %cleanup.dest16 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest16, label %unreachable [
    i32 0, label %cleanup.cont17
    i32 1, label %return
  ]

cleanup.cont17:                                   ; preds = %cleanup15
  br label %if.end18

if.end18:                                         ; preds = %cleanup.cont17, %do.body5
  br label %do.end19

do.end19:                                         ; preds = %if.end18
  br label %do.body20

do.body20:                                        ; preds = %do.end19
  %16 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_dict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %16, i32 0, i32 1
  %17 = load ptr, ptr %func_dict, align 8, !tbaa !64
  %tobool21 = icmp ne ptr %17, null
  br i1 %tobool21, label %if.then22, label %if.end32

if.then22:                                        ; preds = %do.body20
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret23) #13
  %18 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %19 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_dict24 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %19, i32 0, i32 1
  %20 = load ptr, ptr %func_dict24, align 8, !tbaa !64
  %21 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call25 = call i32 %18(ptr noundef %20, ptr noundef %21)
  store i32 %call25, ptr %vret23, align 4, !tbaa !9
  %22 = load i32, ptr %vret23, align 4, !tbaa !9
  %tobool26 = icmp ne i32 %22, 0
  br i1 %tobool26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.then22
  %23 = load i32, ptr %vret23, align 4, !tbaa !9
  store i32 %23, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup29

if.end28:                                         ; preds = %if.then22
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup29

cleanup29:                                        ; preds = %if.end28, %if.then27
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret23) #13
  %cleanup.dest30 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest30, label %unreachable [
    i32 0, label %cleanup.cont31
    i32 1, label %return
  ]

cleanup.cont31:                                   ; preds = %cleanup29
  br label %if.end32

if.end32:                                         ; preds = %cleanup.cont31, %do.body20
  br label %do.end33

do.end33:                                         ; preds = %if.end32
  br label %do.body34

do.body34:                                        ; preds = %do.end33
  %24 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_name = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %24, i32 0, i32 2
  %25 = load ptr, ptr %func_name, align 8, !tbaa !65
  %tobool35 = icmp ne ptr %25, null
  br i1 %tobool35, label %if.then36, label %if.end46

if.then36:                                        ; preds = %do.body34
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret37) #13
  %26 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %27 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_name38 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %27, i32 0, i32 2
  %28 = load ptr, ptr %func_name38, align 8, !tbaa !65
  %29 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call39 = call i32 %26(ptr noundef %28, ptr noundef %29)
  store i32 %call39, ptr %vret37, align 4, !tbaa !9
  %30 = load i32, ptr %vret37, align 4, !tbaa !9
  %tobool40 = icmp ne i32 %30, 0
  br i1 %tobool40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.then36
  %31 = load i32, ptr %vret37, align 4, !tbaa !9
  store i32 %31, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup43

if.end42:                                         ; preds = %if.then36
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup43

cleanup43:                                        ; preds = %if.end42, %if.then41
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret37) #13
  %cleanup.dest44 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest44, label %unreachable [
    i32 0, label %cleanup.cont45
    i32 1, label %return
  ]

cleanup.cont45:                                   ; preds = %cleanup43
  br label %if.end46

if.end46:                                         ; preds = %cleanup.cont45, %do.body34
  br label %do.end47

do.end47:                                         ; preds = %if.end46
  br label %do.body48

do.body48:                                        ; preds = %do.end47
  %32 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %32, i32 0, i32 3
  %33 = load ptr, ptr %func_qualname, align 8, !tbaa !60
  %tobool49 = icmp ne ptr %33, null
  br i1 %tobool49, label %if.then50, label %if.end60

if.then50:                                        ; preds = %do.body48
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret51) #13
  %34 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %35 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_qualname52 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %35, i32 0, i32 3
  %36 = load ptr, ptr %func_qualname52, align 8, !tbaa !60
  %37 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call53 = call i32 %34(ptr noundef %36, ptr noundef %37)
  store i32 %call53, ptr %vret51, align 4, !tbaa !9
  %38 = load i32, ptr %vret51, align 4, !tbaa !9
  %tobool54 = icmp ne i32 %38, 0
  br i1 %tobool54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.then50
  %39 = load i32, ptr %vret51, align 4, !tbaa !9
  store i32 %39, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup57

if.end56:                                         ; preds = %if.then50
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup57

cleanup57:                                        ; preds = %if.end56, %if.then55
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret51) #13
  %cleanup.dest58 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest58, label %unreachable [
    i32 0, label %cleanup.cont59
    i32 1, label %return
  ]

cleanup.cont59:                                   ; preds = %cleanup57
  br label %if.end60

if.end60:                                         ; preds = %cleanup.cont59, %do.body48
  br label %do.end61

do.end61:                                         ; preds = %if.end60
  br label %do.body62

do.body62:                                        ; preds = %do.end61
  %40 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_doc = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %40, i32 0, i32 4
  %41 = load ptr, ptr %func_doc, align 8, !tbaa !66
  %tobool63 = icmp ne ptr %41, null
  br i1 %tobool63, label %if.then64, label %if.end74

if.then64:                                        ; preds = %do.body62
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret65) #13
  %42 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %43 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_doc66 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %43, i32 0, i32 4
  %44 = load ptr, ptr %func_doc66, align 8, !tbaa !66
  %45 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call67 = call i32 %42(ptr noundef %44, ptr noundef %45)
  store i32 %call67, ptr %vret65, align 4, !tbaa !9
  %46 = load i32, ptr %vret65, align 4, !tbaa !9
  %tobool68 = icmp ne i32 %46, 0
  br i1 %tobool68, label %if.then69, label %if.end70

if.then69:                                        ; preds = %if.then64
  %47 = load i32, ptr %vret65, align 4, !tbaa !9
  store i32 %47, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup71

if.end70:                                         ; preds = %if.then64
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup71

cleanup71:                                        ; preds = %if.end70, %if.then69
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret65) #13
  %cleanup.dest72 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest72, label %unreachable [
    i32 0, label %cleanup.cont73
    i32 1, label %return
  ]

cleanup.cont73:                                   ; preds = %cleanup71
  br label %if.end74

if.end74:                                         ; preds = %cleanup.cont73, %do.body62
  br label %do.end75

do.end75:                                         ; preds = %if.end74
  br label %do.body76

do.body76:                                        ; preds = %do.end75
  %48 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_globals = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %48, i32 0, i32 5
  %49 = load ptr, ptr %func_globals, align 8, !tbaa !67
  %tobool77 = icmp ne ptr %49, null
  br i1 %tobool77, label %if.then78, label %if.end88

if.then78:                                        ; preds = %do.body76
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret79) #13
  %50 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %51 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_globals80 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %51, i32 0, i32 5
  %52 = load ptr, ptr %func_globals80, align 8, !tbaa !67
  %53 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call81 = call i32 %50(ptr noundef %52, ptr noundef %53)
  store i32 %call81, ptr %vret79, align 4, !tbaa !9
  %54 = load i32, ptr %vret79, align 4, !tbaa !9
  %tobool82 = icmp ne i32 %54, 0
  br i1 %tobool82, label %if.then83, label %if.end84

if.then83:                                        ; preds = %if.then78
  %55 = load i32, ptr %vret79, align 4, !tbaa !9
  store i32 %55, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup85

if.end84:                                         ; preds = %if.then78
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup85

cleanup85:                                        ; preds = %if.end84, %if.then83
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret79) #13
  %cleanup.dest86 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest86, label %unreachable [
    i32 0, label %cleanup.cont87
    i32 1, label %return
  ]

cleanup.cont87:                                   ; preds = %cleanup85
  br label %if.end88

if.end88:                                         ; preds = %cleanup.cont87, %do.body76
  br label %do.end89

do.end89:                                         ; preds = %if.end88
  br label %do.body90

do.body90:                                        ; preds = %do.end89
  %56 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_code = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %56, i32 0, i32 6
  %57 = load ptr, ptr %func_code, align 8, !tbaa !68
  %tobool91 = icmp ne ptr %57, null
  br i1 %tobool91, label %if.then92, label %if.end102

if.then92:                                        ; preds = %do.body90
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret93) #13
  %58 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %59 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_code94 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %59, i32 0, i32 6
  %60 = load ptr, ptr %func_code94, align 8, !tbaa !68
  %61 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call95 = call i32 %58(ptr noundef %60, ptr noundef %61)
  store i32 %call95, ptr %vret93, align 4, !tbaa !9
  %62 = load i32, ptr %vret93, align 4, !tbaa !9
  %tobool96 = icmp ne i32 %62, 0
  br i1 %tobool96, label %if.then97, label %if.end98

if.then97:                                        ; preds = %if.then92
  %63 = load i32, ptr %vret93, align 4, !tbaa !9
  store i32 %63, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup99

if.end98:                                         ; preds = %if.then92
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup99

cleanup99:                                        ; preds = %if.end98, %if.then97
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret93) #13
  %cleanup.dest100 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest100, label %unreachable [
    i32 0, label %cleanup.cont101
    i32 1, label %return
  ]

cleanup.cont101:                                  ; preds = %cleanup99
  br label %if.end102

if.end102:                                        ; preds = %cleanup.cont101, %do.body90
  br label %do.end103

do.end103:                                        ; preds = %if.end102
  br label %do.body104

do.body104:                                       ; preds = %do.end103
  %64 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_classobj = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %64, i32 0, i32 8
  %65 = load ptr, ptr %func_classobj, align 8, !tbaa !69
  %tobool105 = icmp ne ptr %65, null
  br i1 %tobool105, label %if.then106, label %if.end116

if.then106:                                       ; preds = %do.body104
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret107) #13
  %66 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %67 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_classobj108 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %67, i32 0, i32 8
  %68 = load ptr, ptr %func_classobj108, align 8, !tbaa !69
  %69 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call109 = call i32 %66(ptr noundef %68, ptr noundef %69)
  store i32 %call109, ptr %vret107, align 4, !tbaa !9
  %70 = load i32, ptr %vret107, align 4, !tbaa !9
  %tobool110 = icmp ne i32 %70, 0
  br i1 %tobool110, label %if.then111, label %if.end112

if.then111:                                       ; preds = %if.then106
  %71 = load i32, ptr %vret107, align 4, !tbaa !9
  store i32 %71, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup113

if.end112:                                        ; preds = %if.then106
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup113

cleanup113:                                       ; preds = %if.end112, %if.then111
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret107) #13
  %cleanup.dest114 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest114, label %unreachable [
    i32 0, label %cleanup.cont115
    i32 1, label %return
  ]

cleanup.cont115:                                  ; preds = %cleanup113
  br label %if.end116

if.end116:                                        ; preds = %cleanup.cont115, %do.body104
  br label %do.end117

do.end117:                                        ; preds = %if.end116
  br label %do.body118

do.body118:                                       ; preds = %do.end117
  %72 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %72, i32 0, i32 13
  %73 = load ptr, ptr %defaults_tuple, align 8, !tbaa !52
  %tobool119 = icmp ne ptr %73, null
  br i1 %tobool119, label %if.then120, label %if.end130

if.then120:                                       ; preds = %do.body118
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret121) #13
  %74 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %75 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults_tuple122 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %75, i32 0, i32 13
  %76 = load ptr, ptr %defaults_tuple122, align 8, !tbaa !52
  %77 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call123 = call i32 %74(ptr noundef %76, ptr noundef %77)
  store i32 %call123, ptr %vret121, align 4, !tbaa !9
  %78 = load i32, ptr %vret121, align 4, !tbaa !9
  %tobool124 = icmp ne i32 %78, 0
  br i1 %tobool124, label %if.then125, label %if.end126

if.then125:                                       ; preds = %if.then120
  %79 = load i32, ptr %vret121, align 4, !tbaa !9
  store i32 %79, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup127

if.end126:                                        ; preds = %if.then120
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup127

cleanup127:                                       ; preds = %if.end126, %if.then125
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret121) #13
  %cleanup.dest128 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest128, label %unreachable [
    i32 0, label %cleanup.cont129
    i32 1, label %return
  ]

cleanup.cont129:                                  ; preds = %cleanup127
  br label %if.end130

if.end130:                                        ; preds = %cleanup.cont129, %do.body118
  br label %do.end131

do.end131:                                        ; preds = %if.end130
  br label %do.body132

do.body132:                                       ; preds = %do.end131
  %80 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults_kwdict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %80, i32 0, i32 14
  %81 = load ptr, ptr %defaults_kwdict, align 8, !tbaa !70
  %tobool133 = icmp ne ptr %81, null
  br i1 %tobool133, label %if.then134, label %if.end144

if.then134:                                       ; preds = %do.body132
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret135) #13
  %82 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %83 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults_kwdict136 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %83, i32 0, i32 14
  %84 = load ptr, ptr %defaults_kwdict136, align 8, !tbaa !70
  %85 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call137 = call i32 %82(ptr noundef %84, ptr noundef %85)
  store i32 %call137, ptr %vret135, align 4, !tbaa !9
  %86 = load i32, ptr %vret135, align 4, !tbaa !9
  %tobool138 = icmp ne i32 %86, 0
  br i1 %tobool138, label %if.then139, label %if.end140

if.then139:                                       ; preds = %if.then134
  %87 = load i32, ptr %vret135, align 4, !tbaa !9
  store i32 %87, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup141

if.end140:                                        ; preds = %if.then134
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup141

cleanup141:                                       ; preds = %if.end140, %if.then139
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret135) #13
  %cleanup.dest142 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest142, label %unreachable [
    i32 0, label %cleanup.cont143
    i32 1, label %return
  ]

cleanup.cont143:                                  ; preds = %cleanup141
  br label %if.end144

if.end144:                                        ; preds = %cleanup.cont143, %do.body132
  br label %do.end145

do.end145:                                        ; preds = %if.end144
  %88 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %88, i32 0, i32 9
  %89 = load ptr, ptr %defaults, align 8, !tbaa !71
  %tobool146 = icmp ne ptr %89, null
  br i1 %tobool146, label %if.then147, label %if.end168

if.then147:                                       ; preds = %do.end145
  call void @llvm.lifetime.start.p0(i64 8, ptr %pydefaults) #13
  %90 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults148 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %90, i32 0, i32 9
  %91 = load ptr, ptr %defaults148, align 8, !tbaa !71
  store ptr %91, ptr %pydefaults, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then147
  %92 = load i32, ptr %i, align 4, !tbaa !9
  %93 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults_pyobjects = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %93, i32 0, i32 10
  %94 = load i32, ptr %defaults_pyobjects, align 8, !tbaa !72
  %cmp = icmp slt i32 %92, %94
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %do.body149

do.body149:                                       ; preds = %for.body
  %95 = load ptr, ptr %pydefaults, align 8, !tbaa !5
  %96 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %96 to i64
  %arrayidx = getelementptr ptr, ptr %95, i64 %idxprom
  %97 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %tobool150 = icmp ne ptr %97, null
  br i1 %tobool150, label %if.then151, label %if.end162

if.then151:                                       ; preds = %do.body149
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret152) #13
  %98 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %99 = load ptr, ptr %pydefaults, align 8, !tbaa !5
  %100 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom153 = sext i32 %100 to i64
  %arrayidx154 = getelementptr ptr, ptr %99, i64 %idxprom153
  %101 = load ptr, ptr %arrayidx154, align 8, !tbaa !5
  %102 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call155 = call i32 %98(ptr noundef %101, ptr noundef %102)
  store i32 %call155, ptr %vret152, align 4, !tbaa !9
  %103 = load i32, ptr %vret152, align 4, !tbaa !9
  %tobool156 = icmp ne i32 %103, 0
  br i1 %tobool156, label %if.then157, label %if.end158

if.then157:                                       ; preds = %if.then151
  %104 = load i32, ptr %vret152, align 4, !tbaa !9
  store i32 %104, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup159

if.end158:                                        ; preds = %if.then151
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup159

cleanup159:                                       ; preds = %if.end158, %if.then157
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret152) #13
  %cleanup.dest160 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest160, label %cleanup164 [
    i32 0, label %cleanup.cont161
  ]

cleanup.cont161:                                  ; preds = %cleanup159
  br label %if.end162

if.end162:                                        ; preds = %cleanup.cont161, %do.body149
  br label %do.cond

do.cond:                                          ; preds = %if.end162
  br label %do.end163

do.end163:                                        ; preds = %do.cond
  br label %for.inc

for.inc:                                          ; preds = %do.end163
  %105 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %105, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !73

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup164

cleanup164:                                       ; preds = %for.end, %cleanup159
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %pydefaults) #13
  %cleanup.dest166 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest166, label %unreachable [
    i32 0, label %cleanup.cont167
    i32 1, label %return
  ]

cleanup.cont167:                                  ; preds = %cleanup164
  br label %if.end168

if.end168:                                        ; preds = %cleanup.cont167, %do.end145
  store i32 0, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.end168, %cleanup164, %cleanup141, %cleanup127, %cleanup113, %cleanup99, %cleanup85, %cleanup71, %cleanup57, %cleanup43, %cleanup29, %cleanup15, %cleanup
  %106 = load i32, ptr %retval, align 4
  ret i32 %106

unreachable:                                      ; preds = %cleanup164, %cleanup141, %cleanup127, %cleanup113, %cleanup99, %cleanup85, %cleanup71, %cleanup57, %cleanup43, %cleanup29, %cleanup15, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_clear(ptr noundef %m) #0 {
entry:
  %m.addr = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  %_py_tmp3 = alloca ptr, align 8
  %_py_tmp11 = alloca ptr, align 8
  %_py_tmp18 = alloca ptr, align 8
  %_py_tmp25 = alloca ptr, align 8
  %_py_tmp32 = alloca ptr, align 8
  %_py_tmp39 = alloca ptr, align 8
  %_py_tmp46 = alloca ptr, align 8
  %_py_tmp53 = alloca ptr, align 8
  %_py_tmp60 = alloca ptr, align 8
  %_py_tmp67 = alloca ptr, align 8
  %_py_tmp74 = alloca ptr, align 8
  %pydefaults = alloca ptr, align 8
  %i = alloca i32, align 4
  store ptr %m, ptr %m.addr, align 8, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #13
  %0 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_closure = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 7
  %1 = load ptr, ptr %func_closure, align 8, !tbaa !62
  store ptr %1, ptr %_py_tmp, align 8, !tbaa !5
  %2 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  %cmp = icmp ne ptr %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %3 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_closure1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 7
  store ptr null, ptr %func_closure1, align 8, !tbaa !62
  %4 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #13
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %do.body2

do.body2:                                         ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp3) #13
  %5 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %5, i32 0, i32 0
  %m_module = getelementptr inbounds %struct.PyCFunctionObject, ptr %func, i32 0, i32 3
  %6 = load ptr, ptr %m_module, align 8, !tbaa !63
  store ptr %6, ptr %_py_tmp3, align 8, !tbaa !5
  %7 = load ptr, ptr %_py_tmp3, align 8, !tbaa !5
  %cmp4 = icmp ne ptr %7, null
  br i1 %cmp4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %do.body2
  %8 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func6 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 0
  %m_module7 = getelementptr inbounds %struct.PyCFunctionObject, ptr %func6, i32 0, i32 3
  store ptr null, ptr %m_module7, align 8, !tbaa !63
  %9 = load ptr, ptr %_py_tmp3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %9)
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %do.body2
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp3) #13
  br label %do.end9

do.end9:                                          ; preds = %if.end8
  br label %do.body10

do.body10:                                        ; preds = %do.end9
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp11) #13
  %10 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_dict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %10, i32 0, i32 1
  %11 = load ptr, ptr %func_dict, align 8, !tbaa !64
  store ptr %11, ptr %_py_tmp11, align 8, !tbaa !5
  %12 = load ptr, ptr %_py_tmp11, align 8, !tbaa !5
  %cmp12 = icmp ne ptr %12, null
  br i1 %cmp12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %do.body10
  %13 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_dict14 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %13, i32 0, i32 1
  store ptr null, ptr %func_dict14, align 8, !tbaa !64
  %14 = load ptr, ptr %_py_tmp11, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %14)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %do.body10
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp11) #13
  br label %do.end16

do.end16:                                         ; preds = %if.end15
  br label %do.body17

do.body17:                                        ; preds = %do.end16
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp18) #13
  %15 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_name = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %15, i32 0, i32 2
  %16 = load ptr, ptr %func_name, align 8, !tbaa !65
  store ptr %16, ptr %_py_tmp18, align 8, !tbaa !5
  %17 = load ptr, ptr %_py_tmp18, align 8, !tbaa !5
  %cmp19 = icmp ne ptr %17, null
  br i1 %cmp19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %do.body17
  %18 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_name21 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %18, i32 0, i32 2
  store ptr null, ptr %func_name21, align 8, !tbaa !65
  %19 = load ptr, ptr %_py_tmp18, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %19)
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %do.body17
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp18) #13
  br label %do.end23

do.end23:                                         ; preds = %if.end22
  br label %do.body24

do.body24:                                        ; preds = %do.end23
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp25) #13
  %20 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %20, i32 0, i32 3
  %21 = load ptr, ptr %func_qualname, align 8, !tbaa !60
  store ptr %21, ptr %_py_tmp25, align 8, !tbaa !5
  %22 = load ptr, ptr %_py_tmp25, align 8, !tbaa !5
  %cmp26 = icmp ne ptr %22, null
  br i1 %cmp26, label %if.then27, label %if.end29

if.then27:                                        ; preds = %do.body24
  %23 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_qualname28 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %23, i32 0, i32 3
  store ptr null, ptr %func_qualname28, align 8, !tbaa !60
  %24 = load ptr, ptr %_py_tmp25, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %24)
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %do.body24
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp25) #13
  br label %do.end30

do.end30:                                         ; preds = %if.end29
  br label %do.body31

do.body31:                                        ; preds = %do.end30
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp32) #13
  %25 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_doc = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %25, i32 0, i32 4
  %26 = load ptr, ptr %func_doc, align 8, !tbaa !66
  store ptr %26, ptr %_py_tmp32, align 8, !tbaa !5
  %27 = load ptr, ptr %_py_tmp32, align 8, !tbaa !5
  %cmp33 = icmp ne ptr %27, null
  br i1 %cmp33, label %if.then34, label %if.end36

if.then34:                                        ; preds = %do.body31
  %28 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_doc35 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %28, i32 0, i32 4
  store ptr null, ptr %func_doc35, align 8, !tbaa !66
  %29 = load ptr, ptr %_py_tmp32, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %29)
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %do.body31
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp32) #13
  br label %do.end37

do.end37:                                         ; preds = %if.end36
  br label %do.body38

do.body38:                                        ; preds = %do.end37
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp39) #13
  %30 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_globals = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %30, i32 0, i32 5
  %31 = load ptr, ptr %func_globals, align 8, !tbaa !67
  store ptr %31, ptr %_py_tmp39, align 8, !tbaa !5
  %32 = load ptr, ptr %_py_tmp39, align 8, !tbaa !5
  %cmp40 = icmp ne ptr %32, null
  br i1 %cmp40, label %if.then41, label %if.end43

if.then41:                                        ; preds = %do.body38
  %33 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_globals42 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %33, i32 0, i32 5
  store ptr null, ptr %func_globals42, align 8, !tbaa !67
  %34 = load ptr, ptr %_py_tmp39, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %34)
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %do.body38
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp39) #13
  br label %do.end44

do.end44:                                         ; preds = %if.end43
  br label %do.body45

do.body45:                                        ; preds = %do.end44
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp46) #13
  %35 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_code = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %35, i32 0, i32 6
  %36 = load ptr, ptr %func_code, align 8, !tbaa !68
  store ptr %36, ptr %_py_tmp46, align 8, !tbaa !5
  %37 = load ptr, ptr %_py_tmp46, align 8, !tbaa !5
  %cmp47 = icmp ne ptr %37, null
  br i1 %cmp47, label %if.then48, label %if.end50

if.then48:                                        ; preds = %do.body45
  %38 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_code49 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %38, i32 0, i32 6
  store ptr null, ptr %func_code49, align 8, !tbaa !68
  %39 = load ptr, ptr %_py_tmp46, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %39)
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %do.body45
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp46) #13
  br label %do.end51

do.end51:                                         ; preds = %if.end50
  br label %do.body52

do.body52:                                        ; preds = %do.end51
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp53) #13
  %40 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_classobj = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %40, i32 0, i32 8
  %41 = load ptr, ptr %func_classobj, align 8, !tbaa !69
  store ptr %41, ptr %_py_tmp53, align 8, !tbaa !5
  %42 = load ptr, ptr %_py_tmp53, align 8, !tbaa !5
  %cmp54 = icmp ne ptr %42, null
  br i1 %cmp54, label %if.then55, label %if.end57

if.then55:                                        ; preds = %do.body52
  %43 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_classobj56 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %43, i32 0, i32 8
  store ptr null, ptr %func_classobj56, align 8, !tbaa !69
  %44 = load ptr, ptr %_py_tmp53, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %44)
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %do.body52
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp53) #13
  br label %do.end58

do.end58:                                         ; preds = %if.end57
  br label %do.body59

do.body59:                                        ; preds = %do.end58
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp60) #13
  %45 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %45, i32 0, i32 13
  %46 = load ptr, ptr %defaults_tuple, align 8, !tbaa !52
  store ptr %46, ptr %_py_tmp60, align 8, !tbaa !5
  %47 = load ptr, ptr %_py_tmp60, align 8, !tbaa !5
  %cmp61 = icmp ne ptr %47, null
  br i1 %cmp61, label %if.then62, label %if.end64

if.then62:                                        ; preds = %do.body59
  %48 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults_tuple63 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %48, i32 0, i32 13
  store ptr null, ptr %defaults_tuple63, align 8, !tbaa !52
  %49 = load ptr, ptr %_py_tmp60, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %49)
  br label %if.end64

if.end64:                                         ; preds = %if.then62, %do.body59
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp60) #13
  br label %do.end65

do.end65:                                         ; preds = %if.end64
  br label %do.body66

do.body66:                                        ; preds = %do.end65
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp67) #13
  %50 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults_kwdict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %50, i32 0, i32 14
  %51 = load ptr, ptr %defaults_kwdict, align 8, !tbaa !70
  store ptr %51, ptr %_py_tmp67, align 8, !tbaa !5
  %52 = load ptr, ptr %_py_tmp67, align 8, !tbaa !5
  %cmp68 = icmp ne ptr %52, null
  br i1 %cmp68, label %if.then69, label %if.end71

if.then69:                                        ; preds = %do.body66
  %53 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults_kwdict70 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %53, i32 0, i32 14
  store ptr null, ptr %defaults_kwdict70, align 8, !tbaa !70
  %54 = load ptr, ptr %_py_tmp67, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %54)
  br label %if.end71

if.end71:                                         ; preds = %if.then69, %do.body66
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp67) #13
  br label %do.end72

do.end72:                                         ; preds = %if.end71
  br label %do.body73

do.body73:                                        ; preds = %do.end72
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp74) #13
  %55 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_annotations = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %55, i32 0, i32 16
  %56 = load ptr, ptr %func_annotations, align 8, !tbaa !74
  store ptr %56, ptr %_py_tmp74, align 8, !tbaa !5
  %57 = load ptr, ptr %_py_tmp74, align 8, !tbaa !5
  %cmp75 = icmp ne ptr %57, null
  br i1 %cmp75, label %if.then76, label %if.end78

if.then76:                                        ; preds = %do.body73
  %58 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_annotations77 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %58, i32 0, i32 16
  store ptr null, ptr %func_annotations77, align 8, !tbaa !74
  %59 = load ptr, ptr %_py_tmp74, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %59)
  br label %if.end78

if.end78:                                         ; preds = %if.then76, %do.body73
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp74) #13
  br label %do.end79

do.end79:                                         ; preds = %if.end78
  %60 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %60, i32 0, i32 9
  %61 = load ptr, ptr %defaults, align 8, !tbaa !71
  %tobool = icmp ne ptr %61, null
  br i1 %tobool, label %if.then80, label %if.end85

if.then80:                                        ; preds = %do.end79
  call void @llvm.lifetime.start.p0(i64 8, ptr %pydefaults) #13
  %62 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults81 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %62, i32 0, i32 9
  %63 = load ptr, ptr %defaults81, align 8, !tbaa !71
  store ptr %63, ptr %pydefaults, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then80
  %64 = load i32, ptr %i, align 4, !tbaa !9
  %65 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults_pyobjects = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %65, i32 0, i32 10
  %66 = load i32, ptr %defaults_pyobjects, align 8, !tbaa !72
  %cmp82 = icmp slt i32 %64, %66
  br i1 %cmp82, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %67 = load ptr, ptr %pydefaults, align 8, !tbaa !5
  %68 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %68 to i64
  %arrayidx = getelementptr ptr, ptr %67, i64 %idxprom
  %69 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %69)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %70 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %70, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !75

for.end:                                          ; preds = %for.cond
  %71 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults83 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %71, i32 0, i32 9
  %72 = load ptr, ptr %defaults83, align 8, !tbaa !71
  call void @PyObject_Free(ptr noundef %72)
  %73 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %defaults84 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %73, i32 0, i32 9
  store ptr null, ptr %defaults84, align 8, !tbaa !71
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %pydefaults) #13
  br label %if.end85

if.end85:                                         ; preds = %for.end, %do.end79
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_descr_get(ptr noundef %func, ptr noundef %obj, ptr noundef %type) #0 {
entry:
  %func.addr = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store ptr %type, ptr %type.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call ptr @PyMethod_New(ptr noundef %2, ptr noundef %3)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %4 = load ptr, ptr %func.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %4)
  %5 = load ptr, ptr %func.addr, align 8, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call, %cond.true ], [ %5, %cond.false ]
  ret ptr %cond
}

declare void @PyObject_GC_UnTrack(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx__CyFunction_dealloc(ptr noundef %m) #0 {
entry:
  %m.addr = alloca ptr, align 8
  store ptr %m, ptr %m.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 0
  %m_weakreflist = getelementptr inbounds %struct.PyCFunctionObject, ptr %func, i32 0, i32 4
  %1 = load ptr, ptr %m_weakreflist, align 8, !tbaa !76
  %cmp = icmp ne ptr %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %m.addr, align 8, !tbaa !5
  call void @PyObject_ClearWeakRefs(ptr noundef %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_CyFunction_clear(ptr noundef %3)
  %4 = load ptr, ptr %m.addr, align 8, !tbaa !5
  call void @PyObject_GC_Del(ptr noundef %4)
  ret void
}

declare void @PyObject_ClearWeakRefs(ptr noundef) #1

declare void @PyObject_GC_Del(ptr noundef) #1

declare ptr @PyUnicode_FromFormat(ptr noundef, ...) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyTuple_GET_SIZE(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  %tuple = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tuple) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  store ptr %0, ptr %tuple, align 8, !tbaa !5
  %1 = load ptr, ptr %tuple, align 8, !tbaa !5
  %call = call i64 @Py_SIZE(ptr noundef %1)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tuple) #13
  ret i64 %call
}

declare ptr @PyTuple_GetSlice(ptr noundef, i64 noundef, i64 noundef) #1

declare ptr @PyTuple_GetItem(ptr noundef, i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_CallMethod(ptr noundef %func, ptr noundef %self, ptr noundef %arg, ptr noundef %kw) #0 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %self.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %kw.addr = alloca ptr, align 8
  %f = alloca ptr, align 8
  %meth = alloca ptr, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %result = alloca ptr, align 8
  %arg0 = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  store ptr %self, ptr %self.addr, align 8, !tbaa !5
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !5
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %f) #13
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  store ptr %0, ptr %f, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %meth) #13
  %1 = load ptr, ptr %f, align 8, !tbaa !5
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %1, i32 0, i32 1
  %2 = load ptr, ptr %m_ml, align 8, !tbaa !77
  %ml_meth = getelementptr inbounds %struct.PyMethodDef, ptr %2, i32 0, i32 1
  %3 = load ptr, ptr %ml_meth, align 8, !tbaa !78
  store ptr %3, ptr %meth, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #13
  %4 = load ptr, ptr %f, align 8, !tbaa !5
  %m_ml1 = getelementptr inbounds %struct.PyCFunctionObject, ptr %4, i32 0, i32 1
  %5 = load ptr, ptr %m_ml1, align 8, !tbaa !77
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %5, i32 0, i32 2
  %6 = load i32, ptr %ml_flags, align 8, !tbaa !80
  %and = and i32 %6, 15
  switch i32 %and, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb5
    i32 4, label %sw.bb7
    i32 8, label %sw.bb39
  ]

sw.bb:                                            ; preds = %entry
  %7 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %7, null
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %sw.bb
  %8 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %call = call i64 @PyDict_Size(ptr noundef %8)
  %cmp2 = icmp eq i64 %call, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %sw.bb
  %9 = phi i1 [ true, %sw.bb ], [ %cmp2, %lor.rhs ]
  %lnot = xor i1 %9, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.end
  %10 = load ptr, ptr %meth, align 8, !tbaa !5
  %11 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %12 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call4 = call ptr %10(ptr noundef %11, ptr noundef %12)
  store ptr %call4, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %lor.end
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %13 = load ptr, ptr %meth, align 8, !tbaa !5
  %14 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %15 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %16 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %call6 = call ptr %13(ptr noundef %14, ptr noundef %15, ptr noundef %16)
  store ptr %call6, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.bb7:                                           ; preds = %entry
  %17 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %cmp8 = icmp eq ptr %17, null
  br i1 %cmp8, label %lor.end14, label %lor.rhs10

lor.rhs10:                                        ; preds = %sw.bb7
  %18 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %call11 = call i64 @PyDict_Size(ptr noundef %18)
  %cmp12 = icmp eq i64 %call11, 0
  br label %lor.end14

lor.end14:                                        ; preds = %lor.rhs10, %sw.bb7
  %19 = phi i1 [ true, %sw.bb7 ], [ %cmp12, %lor.rhs10 ]
  %lnot15 = xor i1 %19, true
  %lnot17 = xor i1 %lnot15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %conv19 = sext i32 %lnot.ext18 to i64
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 1)
  %tobool21 = icmp ne i64 %expval20, 0
  br i1 %tobool21, label %if.then22, label %if.end38

if.then22:                                        ; preds = %lor.end14
  %20 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call23 = call i64 @PyTuple_GET_SIZE(ptr noundef %20)
  store i64 %call23, ptr %size, align 8, !tbaa !27
  %21 = load i64, ptr %size, align 8, !tbaa !27
  %cmp24 = icmp eq i64 %21, 0
  %lnot26 = xor i1 %cmp24, true
  %lnot28 = xor i1 %lnot26, true
  %lnot.ext29 = zext i1 %lnot28 to i32
  %conv30 = sext i32 %lnot.ext29 to i64
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 1)
  %tobool32 = icmp ne i64 %expval31, 0
  br i1 %tobool32, label %if.then33, label %if.end35

if.then33:                                        ; preds = %if.then22
  %22 = load ptr, ptr %meth, align 8, !tbaa !5
  %23 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %call34 = call ptr %22(ptr noundef %23, ptr noundef null)
  store ptr %call34, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end35:                                         ; preds = %if.then22
  %24 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %25 = load ptr, ptr %f, align 8, !tbaa !5
  %m_ml36 = getelementptr inbounds %struct.PyCFunctionObject, ptr %25, i32 0, i32 1
  %26 = load ptr, ptr %m_ml36, align 8, !tbaa !77
  %ml_name = getelementptr inbounds %struct.PyMethodDef, ptr %26, i32 0, i32 0
  %27 = load ptr, ptr %ml_name, align 8, !tbaa !81
  %28 = load i64, ptr %size, align 8, !tbaa !27
  %call37 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %24, ptr noundef @.str.29, ptr noundef %27, i64 noundef %28)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end38:                                         ; preds = %lor.end14
  br label %sw.epilog

sw.bb39:                                          ; preds = %entry
  %29 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %cmp40 = icmp eq ptr %29, null
  br i1 %cmp40, label %lor.end46, label %lor.rhs42

lor.rhs42:                                        ; preds = %sw.bb39
  %30 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %call43 = call i64 @PyDict_Size(ptr noundef %30)
  %cmp44 = icmp eq i64 %call43, 0
  br label %lor.end46

lor.end46:                                        ; preds = %lor.rhs42, %sw.bb39
  %31 = phi i1 [ true, %sw.bb39 ], [ %cmp44, %lor.rhs42 ]
  %lnot47 = xor i1 %31, true
  %lnot49 = xor i1 %lnot47, true
  %lnot.ext50 = zext i1 %lnot49 to i32
  %conv51 = sext i32 %lnot.ext50 to i64
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 1)
  %tobool53 = icmp ne i64 %expval52, 0
  br i1 %tobool53, label %if.then54, label %if.end71

if.then54:                                        ; preds = %lor.end46
  %32 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call55 = call i64 @PyTuple_GET_SIZE(ptr noundef %32)
  store i64 %call55, ptr %size, align 8, !tbaa !27
  %33 = load i64, ptr %size, align 8, !tbaa !27
  %cmp56 = icmp eq i64 %33, 1
  %lnot58 = xor i1 %cmp56, true
  %lnot60 = xor i1 %lnot58, true
  %lnot.ext61 = zext i1 %lnot60 to i32
  %conv62 = sext i32 %lnot.ext61 to i64
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 1)
  %tobool64 = icmp ne i64 %expval63, 0
  br i1 %tobool64, label %if.then65, label %if.end67

if.then65:                                        ; preds = %if.then54
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %arg0) #13
  %34 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %34, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0
  %35 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %35, ptr %arg0, align 8, !tbaa !5
  %36 = load ptr, ptr %meth, align 8, !tbaa !5
  %37 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %38 = load ptr, ptr %arg0, align 8, !tbaa !5
  %call66 = call ptr %36(ptr noundef %37, ptr noundef %38)
  store ptr %call66, ptr %result, align 8, !tbaa !5
  %39 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %39, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %arg0) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  br label %cleanup

if.end67:                                         ; preds = %if.then54
  %40 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %41 = load ptr, ptr %f, align 8, !tbaa !5
  %m_ml68 = getelementptr inbounds %struct.PyCFunctionObject, ptr %41, i32 0, i32 1
  %42 = load ptr, ptr %m_ml68, align 8, !tbaa !77
  %ml_name69 = getelementptr inbounds %struct.PyMethodDef, ptr %42, i32 0, i32 0
  %43 = load ptr, ptr %ml_name69, align 8, !tbaa !81
  %44 = load i64, ptr %size, align 8, !tbaa !27
  %call70 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %40, ptr noundef @.str.30, ptr noundef %43, i64 noundef %44)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end71:                                         ; preds = %lor.end46
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %45 = load ptr, ptr @PyExc_SystemError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %45, ptr noundef @.str.31)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %if.end71, %if.end38, %if.end
  %46 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %47 = load ptr, ptr %f, align 8, !tbaa !5
  %m_ml72 = getelementptr inbounds %struct.PyCFunctionObject, ptr %47, i32 0, i32 1
  %48 = load ptr, ptr %m_ml72, align 8, !tbaa !77
  %ml_name73 = getelementptr inbounds %struct.PyMethodDef, ptr %48, i32 0, i32 0
  %49 = load ptr, ptr %ml_name73, align 8, !tbaa !81
  %call74 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %46, ptr noundef @.str.32, ptr noundef %49)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.default, %if.end67, %if.then65, %if.end35, %if.then33, %sw.bb5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %meth) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %f) #13
  %50 = load ptr, ptr %retval, align 8
  ret ptr %50
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_CyFunction_Call(ptr noundef %func, ptr noundef %arg, ptr noundef %kw) #3 {
entry:
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %kw.addr = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !5
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %1, i32 0, i32 2
  %2 = load ptr, ptr %m_self, align 8, !tbaa !82
  %3 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %call = call ptr @__Pyx_CyFunction_CallMethod(ptr noundef %0, ptr noundef %2, ptr noundef %3, ptr noundef %4)
  ret ptr %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @Py_SIZE(ptr noundef %ob) #3 {
entry:
  %ob.addr = alloca ptr, align 8
  %var_ob = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %var_ob) #13
  %0 = load ptr, ptr %ob.addr, align 8, !tbaa !5
  store ptr %0, ptr %var_ob, align 8, !tbaa !5
  %1 = load ptr, ptr %var_ob, align 8, !tbaa !5
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %1, i32 0, i32 1
  %2 = load i64, ptr %ob_size, align 8, !tbaa !83
  call void @llvm.lifetime.end.p0(i64 8, ptr %var_ob) #13
  ret i64 %2
}

declare i64 @PyDict_Size(ptr noundef) #1

declare void @PyObject_Free(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_reduce(ptr noundef %m, ptr noundef %args) #0 {
entry:
  %m.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  store ptr %m, ptr %m.addr, align 8, !tbaa !5
  store ptr %args, ptr %args.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 3
  %1 = load ptr, ptr %func_qualname, align 8, !tbaa !60
  call void @Py_INCREF(ptr noundef %1)
  %2 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_qualname1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 3
  %3 = load ptr, ptr %func_qualname1, align 8, !tbaa !60
  ret ptr %3
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_doc(ptr noundef %op, ptr noundef %closure) #0 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %closure.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %closure, ptr %closure.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_doc = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 4
  %1 = load ptr, ptr %func_doc, align 8, !tbaa !66
  %cmp = icmp eq ptr %1, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end20

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 0
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %func, i32 0, i32 1
  %3 = load ptr, ptr %m_ml, align 8, !tbaa !84
  %ml_doc = getelementptr inbounds %struct.PyMethodDef, ptr %3, i32 0, i32 3
  %4 = load ptr, ptr %ml_doc, align 8, !tbaa !85
  %tobool2 = icmp ne ptr %4, null
  br i1 %tobool2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  %5 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func4 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %5, i32 0, i32 0
  %m_ml5 = getelementptr inbounds %struct.PyCFunctionObject, ptr %func4, i32 0, i32 1
  %6 = load ptr, ptr %m_ml5, align 8, !tbaa !84
  %ml_doc6 = getelementptr inbounds %struct.PyMethodDef, ptr %6, i32 0, i32 3
  %7 = load ptr, ptr %ml_doc6, align 8, !tbaa !85
  %call = call ptr @PyUnicode_FromString(ptr noundef %7)
  %8 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_doc7 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 4
  store ptr %call, ptr %func_doc7, align 8, !tbaa !66
  %9 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_doc8 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %9, i32 0, i32 4
  %10 = load ptr, ptr %func_doc8, align 8, !tbaa !66
  %cmp9 = icmp eq ptr %10, null
  %lnot11 = xor i1 %cmp9, true
  %lnot13 = xor i1 %lnot11, true
  %lnot.ext14 = zext i1 %lnot13 to i32
  %conv15 = sext i32 %lnot.ext14 to i64
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 0)
  %tobool17 = icmp ne i64 %expval16, 0
  br i1 %tobool17, label %if.then18, label %if.end

if.then18:                                        ; preds = %if.then3
  store ptr null, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then3
  br label %if.end19

if.else:                                          ; preds = %if.then
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  store ptr @_Py_NoneStruct, ptr %retval, align 8
  br label %return

if.end19:                                         ; preds = %if.end
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %entry
  %11 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_doc21 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %11, i32 0, i32 4
  %12 = load ptr, ptr %func_doc21, align 8, !tbaa !66
  call void @Py_INCREF(ptr noundef %12)
  %13 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_doc22 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %13, i32 0, i32 4
  %14 = load ptr, ptr %func_doc22, align 8, !tbaa !66
  store ptr %14, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end20, %if.else, %if.then18
  %15 = load ptr, ptr %retval, align 8
  ret ptr %15
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_doc(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 {
entry:
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %value, ptr %value.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_doc = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 4
  %1 = load ptr, ptr %func_doc, align 8, !tbaa !66
  store ptr %1, ptr %tmp, align 8, !tbaa !5
  %2 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store ptr @_Py_NoneStruct, ptr %value.addr, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load ptr, ptr %value.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %3)
  %4 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_doc1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %5, i32 0, i32 4
  store ptr %4, ptr %func_doc1, align 8, !tbaa !66
  %6 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %6)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_name(ptr noundef %op, ptr noundef %context) #0 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_name = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 2
  %1 = load ptr, ptr %func_name, align 8, !tbaa !65
  %cmp = icmp eq ptr %1, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end14

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 0
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %func, i32 0, i32 1
  %3 = load ptr, ptr %m_ml, align 8, !tbaa !84
  %ml_name = getelementptr inbounds %struct.PyMethodDef, ptr %3, i32 0, i32 0
  %4 = load ptr, ptr %ml_name, align 8, !tbaa !81
  %call = call ptr @PyUnicode_InternFromString(ptr noundef %4)
  %5 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_name2 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %5, i32 0, i32 2
  store ptr %call, ptr %func_name2, align 8, !tbaa !65
  %6 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_name3 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 2
  %7 = load ptr, ptr %func_name3, align 8, !tbaa !65
  %cmp4 = icmp eq ptr %7, null
  %lnot6 = xor i1 %cmp4, true
  %lnot8 = xor i1 %lnot6, true
  %lnot.ext9 = zext i1 %lnot8 to i32
  %conv10 = sext i32 %lnot.ext9 to i64
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0)
  %tobool12 = icmp ne i64 %expval11, 0
  br i1 %tobool12, label %if.then13, label %if.end

if.then13:                                        ; preds = %if.then
  store ptr null, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end14

if.end14:                                         ; preds = %if.end, %entry
  %8 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_name15 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 2
  %9 = load ptr, ptr %func_name15, align 8, !tbaa !65
  call void @Py_INCREF(ptr noundef %9)
  %10 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_name16 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %10, i32 0, i32 2
  %11 = load ptr, ptr %func_name16, align 8, !tbaa !65
  store ptr %11, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end14, %if.then13
  %12 = load ptr, ptr %retval, align 8
  ret ptr %12
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_name(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %value, ptr %value.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %0 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, null
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %1 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %1)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 268435456)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %2, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.end
  %3 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.53)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %lor.end
  %4 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_name = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %4, i32 0, i32 2
  %5 = load ptr, ptr %func_name, align 8, !tbaa !65
  store ptr %5, ptr %tmp, align 8, !tbaa !5
  %6 = load ptr, ptr %value.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %6)
  %7 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_name5 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 2
  store ptr %7, ptr %func_name5, align 8, !tbaa !65
  %9 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %9)
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  %10 = load i32, ptr %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_qualname(ptr noundef %op, ptr noundef %context) #0 {
entry:
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 3
  %1 = load ptr, ptr %func_qualname, align 8, !tbaa !60
  call void @Py_INCREF(ptr noundef %1)
  %2 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_qualname1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 3
  %3 = load ptr, ptr %func_qualname1, align 8, !tbaa !60
  ret ptr %3
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_qualname(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %value, ptr %value.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %0 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, null
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %1 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %1)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 268435456)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %2, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.end
  %3 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.54)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %lor.end
  %4 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %4, i32 0, i32 3
  %5 = load ptr, ptr %func_qualname, align 8, !tbaa !60
  store ptr %5, ptr %tmp, align 8, !tbaa !5
  %6 = load ptr, ptr %value.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %6)
  %7 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_qualname5 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 3
  store ptr %7, ptr %func_qualname5, align 8, !tbaa !60
  %9 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %9)
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  %10 = load i32, ptr %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_self(ptr noundef %m, ptr noundef %closure) #0 {
entry:
  %m.addr = alloca ptr, align 8
  %closure.addr = alloca ptr, align 8
  %self = alloca ptr, align 8
  store ptr %m, ptr %m.addr, align 8, !tbaa !5
  store ptr %closure, ptr %closure.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #13
  %0 = load ptr, ptr %m.addr, align 8, !tbaa !5
  %func_closure = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 7
  %1 = load ptr, ptr %func_closure, align 8, !tbaa !62
  store ptr %1, ptr %self, align 8, !tbaa !5
  %2 = load ptr, ptr %self, align 8, !tbaa !5
  %cmp = icmp eq ptr %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store ptr @_Py_NoneStruct, ptr %self, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load ptr, ptr %self, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %3)
  %4 = load ptr, ptr %self, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #13
  ret ptr %4
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_dict(ptr noundef %op, ptr noundef %context) #0 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_dict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 1
  %1 = load ptr, ptr %func_dict, align 8, !tbaa !64
  %cmp = icmp eq ptr %1, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end14

if.then:                                          ; preds = %entry
  %call = call ptr @PyDict_New()
  %2 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_dict2 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 1
  store ptr %call, ptr %func_dict2, align 8, !tbaa !64
  %3 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_dict3 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 1
  %4 = load ptr, ptr %func_dict3, align 8, !tbaa !64
  %cmp4 = icmp eq ptr %4, null
  %lnot6 = xor i1 %cmp4, true
  %lnot8 = xor i1 %lnot6, true
  %lnot.ext9 = zext i1 %lnot8 to i32
  %conv10 = sext i32 %lnot.ext9 to i64
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0)
  %tobool12 = icmp ne i64 %expval11, 0
  br i1 %tobool12, label %if.then13, label %if.end

if.then13:                                        ; preds = %if.then
  store ptr null, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end14

if.end14:                                         ; preds = %if.end, %entry
  %5 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_dict15 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %5, i32 0, i32 1
  %6 = load ptr, ptr %func_dict15, align 8, !tbaa !64
  call void @Py_INCREF(ptr noundef %6)
  %7 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_dict16 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %7, i32 0, i32 1
  %8 = load ptr, ptr %func_dict16, align 8, !tbaa !64
  store ptr %8, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end14, %if.then13
  %9 = load ptr, ptr %retval, align 8
  ret ptr %9
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_dict(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %value, ptr %value.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %0 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.55)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %2)
  %call2 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 536870912)
  %tobool3 = icmp ne i32 %call2, 0
  %lnot4 = xor i1 %tobool3, true
  %lnot6 = xor i1 %lnot4, true
  %lnot8 = xor i1 %lnot6, true
  %lnot.ext9 = zext i1 %lnot8 to i32
  %conv10 = sext i32 %lnot.ext9 to i64
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0)
  %tobool12 = icmp ne i64 %expval11, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end
  %3 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.56)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end14:                                         ; preds = %if.end
  %4 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_dict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %4, i32 0, i32 1
  %5 = load ptr, ptr %func_dict, align 8, !tbaa !64
  store ptr %5, ptr %tmp, align 8, !tbaa !5
  %6 = load ptr, ptr %value.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %6)
  %7 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_dict15 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 1
  store ptr %7, ptr %func_dict15, align 8, !tbaa !64
  %9 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %9)
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then13, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  %10 = load i32, ptr %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_globals(ptr noundef %op, ptr noundef %context) #0 {
entry:
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_globals = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 5
  %1 = load ptr, ptr %func_globals, align 8, !tbaa !67
  call void @Py_INCREF(ptr noundef %1)
  %2 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_globals1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 5
  %3 = load ptr, ptr %func_globals1, align 8, !tbaa !67
  ret ptr %3
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_closure(ptr noundef %op, ptr noundef %context) #0 {
entry:
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  ret ptr @_Py_NoneStruct
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_code(ptr noundef %op, ptr noundef %context) #0 {
entry:
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_code = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 6
  %1 = load ptr, ptr %func_code, align 8, !tbaa !68
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_code1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 6
  %3 = load ptr, ptr %func_code1, align 8, !tbaa !68
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %3, %cond.true ], [ @_Py_NoneStruct, %cond.false ]
  store ptr %cond, ptr %result, align 8, !tbaa !5
  %4 = load ptr, ptr %result, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %4)
  %5 = load ptr, ptr %result, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  ret ptr %5
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_defaults(ptr noundef %op, ptr noundef %context) #0 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 13
  %1 = load ptr, ptr %defaults_tuple, align 8, !tbaa !52
  store ptr %1, ptr %result, align 8, !tbaa !5
  %2 = load ptr, ptr %result, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end10

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_getter = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 15
  %4 = load ptr, ptr %defaults_getter, align 8, !tbaa !86
  %tobool4 = icmp ne ptr %4, null
  br i1 %tobool4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then
  %5 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_CyFunction_init_defaults(ptr noundef %5)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then5
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then5
  %6 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_tuple8 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 13
  %7 = load ptr, ptr %defaults_tuple8, align 8, !tbaa !52
  store ptr %7, ptr %result, align 8, !tbaa !5
  br label %if.end9

if.else:                                          ; preds = %if.then
  store ptr @_Py_NoneStruct, ptr %result, align 8, !tbaa !5
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.end
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %entry
  %8 = load ptr, ptr %result, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %8)
  %9 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %9, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.then7
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  %10 = load ptr, ptr %retval, align 8
  ret ptr %10
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_defaults(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %value, ptr %value.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %0 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  store ptr @_Py_NoneStruct, ptr %value.addr, align 8, !tbaa !5
  br label %if.end4

if.else:                                          ; preds = %entry
  %1 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %cmp = icmp ne ptr %1, @_Py_NoneStruct
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.else
  %2 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %2)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 67108864)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end, label %if.then3

if.then3:                                         ; preds = %land.lhs.true
  %3 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.57)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %4 = load ptr, ptr %value.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %4)
  %5 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %5, i32 0, i32 13
  %6 = load ptr, ptr %defaults_tuple, align 8, !tbaa !52
  store ptr %6, ptr %tmp, align 8, !tbaa !5
  %7 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_tuple5 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 13
  store ptr %7, ptr %defaults_tuple5, align 8, !tbaa !52
  %9 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %9)
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  %10 = load i32, ptr %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_kwdefaults(ptr noundef %op, ptr noundef %context) #0 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_kwdict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 14
  %1 = load ptr, ptr %defaults_kwdict, align 8, !tbaa !70
  store ptr %1, ptr %result, align 8, !tbaa !5
  %2 = load ptr, ptr %result, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end10

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_getter = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 15
  %4 = load ptr, ptr %defaults_getter, align 8, !tbaa !86
  %tobool4 = icmp ne ptr %4, null
  br i1 %tobool4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then
  %5 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_CyFunction_init_defaults(ptr noundef %5)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then5
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then5
  %6 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_kwdict8 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 14
  %7 = load ptr, ptr %defaults_kwdict8, align 8, !tbaa !70
  store ptr %7, ptr %result, align 8, !tbaa !5
  br label %if.end9

if.else:                                          ; preds = %if.then
  store ptr @_Py_NoneStruct, ptr %result, align 8, !tbaa !5
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.end
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %entry
  %8 = load ptr, ptr %result, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %8)
  %9 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %9, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.then7
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  %10 = load ptr, ptr %retval, align 8
  ret ptr %10
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_kwdefaults(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %value, ptr %value.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %0 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  store ptr @_Py_NoneStruct, ptr %value.addr, align 8, !tbaa !5
  br label %if.end4

if.else:                                          ; preds = %entry
  %1 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %cmp = icmp ne ptr %1, @_Py_NoneStruct
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.else
  %2 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %2)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 536870912)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end, label %if.then3

if.then3:                                         ; preds = %land.lhs.true
  %3 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.58)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %4 = load ptr, ptr %value.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %4)
  %5 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_kwdict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %5, i32 0, i32 14
  %6 = load ptr, ptr %defaults_kwdict, align 8, !tbaa !70
  store ptr %6, ptr %tmp, align 8, !tbaa !5
  %7 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_kwdict5 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 14
  store ptr %7, ptr %defaults_kwdict5, align 8, !tbaa !70
  %9 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %9)
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  %10 = load i32, ptr %retval, align 4
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_get_annotations(ptr noundef %op, ptr noundef %context) #0 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_annotations = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 16
  %1 = load ptr, ptr %func_annotations, align 8, !tbaa !74
  store ptr %1, ptr %result, align 8, !tbaa !5
  %2 = load ptr, ptr %result, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end16

if.then:                                          ; preds = %entry
  %call = call ptr @PyDict_New()
  store ptr %call, ptr %result, align 8, !tbaa !5
  %3 = load ptr, ptr %result, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %3, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then14, label %if.end

if.then14:                                        ; preds = %if.then
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  %4 = load ptr, ptr %result, align 8, !tbaa !5
  %5 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_annotations15 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %5, i32 0, i32 16
  store ptr %4, ptr %func_annotations15, align 8, !tbaa !74
  br label %if.end16

if.end16:                                         ; preds = %if.end, %entry
  %6 = load ptr, ptr %result, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %6)
  %7 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %7, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.then14
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  %8 = load ptr, ptr %retval, align 8
  ret ptr %8
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_set_annotations(ptr noundef %op, ptr noundef %value, ptr noundef %context) #0 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %context.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %value, ptr %value.addr, align 8, !tbaa !5
  store ptr %context, ptr %context.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %0 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %1, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  store ptr null, ptr %value.addr, align 8, !tbaa !5
  br label %if.end4

if.else:                                          ; preds = %lor.lhs.false
  %2 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %2)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 536870912)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end, label %if.then3

if.then3:                                         ; preds = %if.else
  %3 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.59)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %4 = load ptr, ptr %value.addr, align 8, !tbaa !5
  call void @Py_XINCREF(ptr noundef %4)
  %5 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_annotations = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %5, i32 0, i32 16
  %6 = load ptr, ptr %func_annotations, align 8, !tbaa !74
  store ptr %6, ptr %tmp, align 8, !tbaa !5
  %7 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_annotations5 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %8, i32 0, i32 16
  store ptr %7, ptr %func_annotations5, align 8, !tbaa !74
  %9 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %9)
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  %10 = load i32, ptr %retval, align 4
  ret i32 %10
}

declare ptr @PyUnicode_FromString(ptr noundef) #1

declare ptr @PyUnicode_InternFromString(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CyFunction_init_defaults(ptr noundef %op) #0 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca ptr, align 8
  %result = alloca i32, align 4
  %res = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #13
  store i32 0, ptr %result, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_getter = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %0, i32 0, i32 15
  %1 = load ptr, ptr %defaults_getter, align 8, !tbaa !86
  %2 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %call = call ptr %1(ptr noundef %2)
  store ptr %call, ptr %res, align 8, !tbaa !5
  %3 = load ptr, ptr %res, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %res, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %4, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0
  %5 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %6 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 13
  store ptr %5, ptr %defaults_tuple, align 8, !tbaa !52
  %7 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_tuple4 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %7, i32 0, i32 13
  %8 = load ptr, ptr %defaults_tuple4, align 8, !tbaa !52
  call void @Py_INCREF(ptr noundef %8)
  %9 = load ptr, ptr %res, align 8, !tbaa !5
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %9, i32 0, i32 1
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 1
  %10 = load ptr, ptr %arrayidx6, align 8, !tbaa !5
  %11 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_kwdict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %11, i32 0, i32 14
  store ptr %10, ptr %defaults_kwdict, align 8, !tbaa !70
  %12 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_kwdict7 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %12, i32 0, i32 14
  %13 = load ptr, ptr %defaults_kwdict7, align 8, !tbaa !70
  call void @Py_INCREF(ptr noundef %13)
  %14 = load ptr, ptr %res, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %14)
  %15 = load i32, ptr %result, align 4, !tbaa !9
  store i32 %15, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #13
  %16 = load i32, ptr %retval, align 4
  ret i32 %16
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_XINCREF(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %cmp = icmp ne ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare ptr @PyMethod_New(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__pyx_FusedFunction_dealloc(ptr noundef %self) #0 {
entry:
  %self.addr = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  %_py_tmp4 = alloca ptr, align 8
  %_py_tmp11 = alloca ptr, align 8
  store ptr %self, ptr %self.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %self.addr, align 8, !tbaa !5
  call void @PyObject_GC_UnTrack(ptr noundef %0)
  br label %do.body

do.body:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #13
  %1 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %self1 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %1, i32 0, i32 3
  %2 = load ptr, ptr %self1, align 8, !tbaa !51
  store ptr %2, ptr %_py_tmp, align 8, !tbaa !5
  %3 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  %cmp = icmp ne ptr %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %4 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %self2 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %4, i32 0, i32 3
  store ptr null, ptr %self2, align 8, !tbaa !51
  %5 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %5)
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #13
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %do.body3

do.body3:                                         ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp4) #13
  %6 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %type = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %6, i32 0, i32 2
  %7 = load ptr, ptr %type, align 8, !tbaa !50
  store ptr %7, ptr %_py_tmp4, align 8, !tbaa !5
  %8 = load ptr, ptr %_py_tmp4, align 8, !tbaa !5
  %cmp5 = icmp ne ptr %8, null
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %do.body3
  %9 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %type7 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %9, i32 0, i32 2
  store ptr null, ptr %type7, align 8, !tbaa !50
  %10 = load ptr, ptr %_py_tmp4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %10)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %do.body3
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp4) #13
  br label %do.end9

do.end9:                                          ; preds = %if.end8
  br label %do.body10

do.body10:                                        ; preds = %do.end9
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp11) #13
  %11 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %__signatures__ = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %11, i32 0, i32 1
  %12 = load ptr, ptr %__signatures__, align 8, !tbaa !11
  store ptr %12, ptr %_py_tmp11, align 8, !tbaa !5
  %13 = load ptr, ptr %_py_tmp11, align 8, !tbaa !5
  %cmp12 = icmp ne ptr %13, null
  br i1 %cmp12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %do.body10
  %14 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %__signatures__14 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %14, i32 0, i32 1
  store ptr null, ptr %__signatures__14, align 8, !tbaa !11
  %15 = load ptr, ptr %_py_tmp11, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %15)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %do.body10
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp11) #13
  br label %do.end16

do.end16:                                         ; preds = %if.end15
  %16 = load ptr, ptr %self.addr, align 8, !tbaa !5
  call void @__Pyx__CyFunction_dealloc(ptr noundef %16)
  ret void
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_FusedFunction_call(ptr noundef %func, ptr noundef %args, ptr noundef %kw) #0 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %kw.addr = alloca ptr, align 8
  %binding_func = alloca ptr, align 8
  %argc = alloca i64, align 8
  %new_args = alloca ptr, align 8
  %new_func = alloca ptr, align 8
  %result = alloca ptr, align 8
  %self = alloca ptr, align 8
  %is_staticmethod = alloca i32, align 4
  %is_classmethod = alloca i32, align 4
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %item = alloca ptr, align 8
  %is_instance = alloca i32, align 4
  %tup = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  store ptr %args, ptr %args.addr, align 8, !tbaa !5
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %binding_func) #13
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  store ptr %0, ptr %binding_func, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %argc) #13
  %1 = load ptr, ptr %args.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1)
  store i64 %call, ptr %argc, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_args) #13
  store ptr null, ptr %new_args, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_func) #13
  store ptr null, ptr %new_func, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  store ptr null, ptr %result, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #13
  store ptr null, ptr %self, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_staticmethod) #13
  %2 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %func1 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %2, i32 0, i32 0
  %flags = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func1, i32 0, i32 12
  %3 = load i32, ptr %flags, align 8, !tbaa !87
  %and = and i32 %3, 1
  store i32 %and, ptr %is_staticmethod, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_classmethod) #13
  %4 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %func2 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %4, i32 0, i32 0
  %flags3 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func2, i32 0, i32 12
  %5 = load i32, ptr %flags3, align 8, !tbaa !87
  %and4 = and i32 %5, 2
  store i32 %and4, ptr %is_classmethod, align 4, !tbaa !9
  %6 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %self5 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %6, i32 0, i32 3
  %7 = load ptr, ptr %self5, align 8, !tbaa !51
  %tobool = icmp ne ptr %7, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #13
  %8 = load i64, ptr %argc, align 8, !tbaa !27
  %add = add i64 %8, 1
  %call6 = call ptr @PyTuple_New(i64 noundef %add)
  store ptr %call6, ptr %new_args, align 8, !tbaa !5
  %9 = load ptr, ptr %new_args, align 8, !tbaa !5
  %tobool7 = icmp ne ptr %9, null
  br i1 %tobool7, label %if.end, label %if.then8

if.then8:                                         ; preds = %if.then
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  %10 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %self9 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %10, i32 0, i32 3
  %11 = load ptr, ptr %self9, align 8, !tbaa !51
  store ptr %11, ptr %self, align 8, !tbaa !5
  %12 = load ptr, ptr %self, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %12)
  %13 = load ptr, ptr %new_args, align 8, !tbaa !5
  %14 = load ptr, ptr %self, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %13, i64 noundef 0, ptr noundef %14)
  store i64 0, ptr %i, align 8, !tbaa !27
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i64, ptr %i, align 8, !tbaa !27
  %16 = load i64, ptr %argc, align 8, !tbaa !27
  %cmp = icmp slt i64 %15, %16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %item) #13
  %17 = load ptr, ptr %args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %17, i32 0, i32 1
  %18 = load i64, ptr %i, align 8, !tbaa !27
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %18
  %19 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %19, ptr %item, align 8, !tbaa !5
  %20 = load ptr, ptr %item, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %20)
  %21 = load ptr, ptr %new_args, align 8, !tbaa !5
  %22 = load i64, ptr %i, align 8, !tbaa !27
  %add10 = add i64 %22, 1
  %23 = load ptr, ptr %item, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %21, i64 noundef %add10, ptr noundef %23)
  call void @llvm.lifetime.end.p0(i64 8, ptr %item) #13
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %24 = load i64, ptr %i, align 8, !tbaa !27
  %inc = add i64 %24, 1
  store i64 %inc, ptr %i, align 8, !tbaa !27
  br label %for.cond, !llvm.loop !88

for.end:                                          ; preds = %for.cond
  %25 = load ptr, ptr %new_args, align 8, !tbaa !5
  store ptr %25, ptr %args.addr, align 8, !tbaa !5
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then8
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup135 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end19

if.else:                                          ; preds = %entry
  %26 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %type = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %26, i32 0, i32 2
  %27 = load ptr, ptr %type, align 8, !tbaa !50
  %tobool11 = icmp ne ptr %27, null
  br i1 %tobool11, label %if.then12, label %if.end18

if.then12:                                        ; preds = %if.else
  %28 = load i64, ptr %argc, align 8, !tbaa !27
  %cmp13 = icmp slt i64 %28, 1
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.then12
  %29 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %29, ptr noundef @.str.63)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup135

if.end15:                                         ; preds = %if.then12
  %30 = load ptr, ptr %args.addr, align 8, !tbaa !5
  %ob_item16 = getelementptr inbounds %struct.PyTupleObject, ptr %30, i32 0, i32 1
  %arrayidx17 = getelementptr [1 x ptr], ptr %ob_item16, i64 0, i64 0
  %31 = load ptr, ptr %arrayidx17, align 8, !tbaa !5
  store ptr %31, ptr %self, align 8, !tbaa !5
  br label %if.end18

if.end18:                                         ; preds = %if.end15, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %cleanup.cont
  %32 = load ptr, ptr %self, align 8, !tbaa !5
  %tobool20 = icmp ne ptr %32, null
  br i1 %tobool20, label %land.lhs.true, label %if.end52

land.lhs.true:                                    ; preds = %if.end19
  %33 = load i32, ptr %is_classmethod, align 4, !tbaa !9
  %tobool21 = icmp ne i32 %33, 0
  br i1 %tobool21, label %if.end52, label %land.lhs.true22

land.lhs.true22:                                  ; preds = %land.lhs.true
  %34 = load i32, ptr %is_staticmethod, align 4, !tbaa !9
  %tobool23 = icmp ne i32 %34, 0
  br i1 %tobool23, label %if.end52, label %if.then24

if.then24:                                        ; preds = %land.lhs.true22
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_instance) #13
  %35 = load ptr, ptr %self, align 8, !tbaa !5
  %36 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %type25 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %36, i32 0, i32 2
  %37 = load ptr, ptr %type25, align 8, !tbaa !50
  %call26 = call i32 @PyObject_IsInstance(ptr noundef %35, ptr noundef %37)
  store i32 %call26, ptr %is_instance, align 4, !tbaa !9
  %38 = load i32, ptr %is_instance, align 4, !tbaa !9
  %tobool27 = icmp ne i32 %38, 0
  %lnot = xor i1 %tobool27, true
  %lnot28 = xor i1 %lnot, true
  %lnot29 = xor i1 %lnot28, true
  %lnot.ext = zext i1 %lnot29 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool30 = icmp ne i64 %expval, 0
  br i1 %tobool30, label %if.then31, label %if.else36

if.then31:                                        ; preds = %if.then24
  %39 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %40 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %type32 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %40, i32 0, i32 2
  %41 = load ptr, ptr %type32, align 8, !tbaa !50
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %41, i32 0, i32 1
  %42 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %43 = load ptr, ptr %self, align 8, !tbaa !5
  %call33 = call ptr @Py_TYPE(ptr noundef %43)
  %tp_name34 = getelementptr inbounds %struct._typeobject, ptr %call33, i32 0, i32 1
  %44 = load ptr, ptr %tp_name34, align 8, !tbaa !56
  %call35 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %39, ptr noundef @.str.64, ptr noundef %42, ptr noundef %44)
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup49

if.else36:                                        ; preds = %if.then24
  %45 = load i32, ptr %is_instance, align 4, !tbaa !9
  %cmp37 = icmp eq i32 %45, -1
  %lnot39 = xor i1 %cmp37, true
  %lnot41 = xor i1 %lnot39, true
  %lnot.ext42 = zext i1 %lnot41 to i32
  %conv43 = sext i32 %lnot.ext42 to i64
  %expval44 = call i64 @llvm.expect.i64(i64 %conv43, i64 0)
  %tobool45 = icmp ne i64 %expval44, 0
  br i1 %tobool45, label %if.then46, label %if.end47

if.then46:                                        ; preds = %if.else36
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup49

if.end47:                                         ; preds = %if.else36
  br label %if.end48

if.end48:                                         ; preds = %if.end47
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup49

cleanup49:                                        ; preds = %if.then46, %if.then31, %if.end48
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_instance) #13
  %cleanup.dest50 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest50, label %cleanup135 [
    i32 0, label %cleanup.cont51
    i32 5, label %bad
  ]

cleanup.cont51:                                   ; preds = %cleanup49
  br label %if.end52

if.end52:                                         ; preds = %cleanup.cont51, %land.lhs.true22, %land.lhs.true, %if.end19
  %46 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %__signatures__ = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %46, i32 0, i32 1
  %47 = load ptr, ptr %__signatures__, align 8, !tbaa !11
  %tobool53 = icmp ne ptr %47, null
  br i1 %tobool53, label %if.then54, label %if.end133

if.then54:                                        ; preds = %if.end52
  call void @llvm.lifetime.start.p0(i64 8, ptr %tup) #13
  %48 = load i32, ptr %is_staticmethod, align 4, !tbaa !9
  %tobool55 = icmp ne i32 %48, 0
  br i1 %tobool55, label %land.lhs.true56, label %if.else80

land.lhs.true56:                                  ; preds = %if.then54
  %49 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %func57 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %49, i32 0, i32 0
  %flags58 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func57, i32 0, i32 12
  %50 = load i32, ptr %flags58, align 8, !tbaa !87
  %and59 = and i32 %50, 4
  %tobool60 = icmp ne i32 %and59, 0
  br i1 %tobool60, label %if.then61, label %if.else80

if.then61:                                        ; preds = %land.lhs.true56
  %51 = load ptr, ptr %args.addr, align 8, !tbaa !5
  %52 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %cmp62 = icmp eq ptr %52, null
  br i1 %cmp62, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then61
  br label %cond.end

cond.false:                                       ; preds = %if.then61
  %53 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ @_Py_NoneStruct, %cond.true ], [ %53, %cond.false ]
  %54 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %func64 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %54, i32 0, i32 0
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func64, i32 0, i32 13
  %55 = load ptr, ptr %defaults_tuple, align 8, !tbaa !89
  %call65 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 3, ptr noundef %51, ptr noundef %cond, ptr noundef %55)
  store ptr %call65, ptr %tup, align 8, !tbaa !5
  %56 = load ptr, ptr %tup, align 8, !tbaa !5
  %tobool66 = icmp ne ptr %56, null
  %lnot67 = xor i1 %tobool66, true
  %lnot69 = xor i1 %lnot67, true
  %lnot71 = xor i1 %lnot69, true
  %lnot.ext72 = zext i1 %lnot71 to i32
  %conv73 = sext i32 %lnot.ext72 to i64
  %expval74 = call i64 @llvm.expect.i64(i64 %conv73, i64 0)
  %tobool75 = icmp ne i64 %expval74, 0
  br i1 %tobool75, label %if.then76, label %if.end77

if.then76:                                        ; preds = %cond.end
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup130

if.end77:                                         ; preds = %cond.end
  %57 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %58 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %__signatures__78 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %58, i32 0, i32 1
  %59 = load ptr, ptr %__signatures__78, align 8, !tbaa !11
  %60 = load ptr, ptr %tup, align 8, !tbaa !5
  %call79 = call ptr @__Pyx_CyFunction_CallMethod(ptr noundef %57, ptr noundef %59, ptr noundef %60, ptr noundef null)
  store ptr %call79, ptr %new_func, align 8, !tbaa !5
  br label %if.end104

if.else80:                                        ; preds = %land.lhs.true56, %if.then54
  %61 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %__signatures__81 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %61, i32 0, i32 1
  %62 = load ptr, ptr %__signatures__81, align 8, !tbaa !11
  %63 = load ptr, ptr %args.addr, align 8, !tbaa !5
  %64 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %cmp82 = icmp eq ptr %64, null
  br i1 %cmp82, label %cond.true84, label %cond.false85

cond.true84:                                      ; preds = %if.else80
  br label %cond.end86

cond.false85:                                     ; preds = %if.else80
  %65 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  br label %cond.end86

cond.end86:                                       ; preds = %cond.false85, %cond.true84
  %cond87 = phi ptr [ @_Py_NoneStruct, %cond.true84 ], [ %65, %cond.false85 ]
  %66 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %func88 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %66, i32 0, i32 0
  %defaults_tuple89 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func88, i32 0, i32 13
  %67 = load ptr, ptr %defaults_tuple89, align 8, !tbaa !89
  %call90 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 4, ptr noundef %62, ptr noundef %63, ptr noundef %cond87, ptr noundef %67)
  store ptr %call90, ptr %tup, align 8, !tbaa !5
  %68 = load ptr, ptr %tup, align 8, !tbaa !5
  %tobool91 = icmp ne ptr %68, null
  %lnot92 = xor i1 %tobool91, true
  %lnot94 = xor i1 %lnot92, true
  %lnot96 = xor i1 %lnot94, true
  %lnot.ext97 = zext i1 %lnot96 to i32
  %conv98 = sext i32 %lnot.ext97 to i64
  %expval99 = call i64 @llvm.expect.i64(i64 %conv98, i64 0)
  %tobool100 = icmp ne i64 %expval99, 0
  br i1 %tobool100, label %if.then101, label %if.end102

if.then101:                                       ; preds = %cond.end86
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup130

if.end102:                                        ; preds = %cond.end86
  %69 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %70 = load ptr, ptr %tup, align 8, !tbaa !5
  %call103 = call ptr @__pyx_FusedFunction_callfunction(ptr noundef %69, ptr noundef %70, ptr noundef null)
  store ptr %call103, ptr %new_func, align 8, !tbaa !5
  br label %if.end104

if.end104:                                        ; preds = %if.end102, %if.end77
  %71 = load ptr, ptr %tup, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %71)
  %72 = load ptr, ptr %new_func, align 8, !tbaa !5
  %tobool105 = icmp ne ptr %72, null
  %lnot106 = xor i1 %tobool105, true
  %lnot108 = xor i1 %lnot106, true
  %lnot110 = xor i1 %lnot108, true
  %lnot.ext111 = zext i1 %lnot110 to i32
  %conv112 = sext i32 %lnot.ext111 to i64
  %expval113 = call i64 @llvm.expect.i64(i64 %conv112, i64 0)
  %tobool114 = icmp ne i64 %expval113, 0
  br i1 %tobool114, label %if.then115, label %if.end116

if.then115:                                       ; preds = %if.end104
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup130

if.end116:                                        ; preds = %if.end104
  %73 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %func117 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %73, i32 0, i32 0
  %func_classobj = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func117, i32 0, i32 8
  %74 = load ptr, ptr %func_classobj, align 8, !tbaa !90
  call void @Py_XINCREF(ptr noundef %74)
  br label %do.body

do.body:                                          ; preds = %if.end116
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #13
  %75 = load ptr, ptr %new_func, align 8, !tbaa !5
  %func118 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %75, i32 0, i32 0
  %func_classobj119 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func118, i32 0, i32 8
  %76 = load ptr, ptr %func_classobj119, align 8, !tbaa !90
  store ptr %76, ptr %_py_tmp, align 8, !tbaa !5
  %77 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  %cmp120 = icmp ne ptr %77, null
  br i1 %cmp120, label %if.then122, label %if.end125

if.then122:                                       ; preds = %do.body
  %78 = load ptr, ptr %new_func, align 8, !tbaa !5
  %func123 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %78, i32 0, i32 0
  %func_classobj124 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func123, i32 0, i32 8
  store ptr null, ptr %func_classobj124, align 8, !tbaa !90
  %79 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %79)
  br label %if.end125

if.end125:                                        ; preds = %if.then122, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %if.end125
  br label %do.end

do.end:                                           ; preds = %do.cond
  %80 = load ptr, ptr %binding_func, align 8, !tbaa !5
  %func126 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %80, i32 0, i32 0
  %func_classobj127 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func126, i32 0, i32 8
  %81 = load ptr, ptr %func_classobj127, align 8, !tbaa !90
  %82 = load ptr, ptr %new_func, align 8, !tbaa !5
  %func128 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %82, i32 0, i32 0
  %func_classobj129 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func128, i32 0, i32 8
  store ptr %81, ptr %func_classobj129, align 8, !tbaa !90
  %83 = load ptr, ptr %new_func, align 8, !tbaa !5
  store ptr %83, ptr %func.addr, align 8, !tbaa !5
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup130

cleanup130:                                       ; preds = %if.then115, %if.then101, %if.then76, %do.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %tup) #13
  %cleanup.dest131 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest131, label %cleanup135 [
    i32 0, label %cleanup.cont132
    i32 5, label %bad
  ]

cleanup.cont132:                                  ; preds = %cleanup130
  br label %if.end133

if.end133:                                        ; preds = %cleanup.cont132, %if.end52
  %84 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %85 = load ptr, ptr %args.addr, align 8, !tbaa !5
  %86 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %call134 = call ptr @__pyx_FusedFunction_callfunction(ptr noundef %84, ptr noundef %85, ptr noundef %86)
  store ptr %call134, ptr %result, align 8, !tbaa !5
  br label %bad

bad:                                              ; preds = %if.end133, %cleanup130, %cleanup49
  %87 = load ptr, ptr %new_args, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %87)
  %88 = load ptr, ptr %new_func, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %88)
  %89 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %89, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup135

cleanup135:                                       ; preds = %bad, %cleanup130, %cleanup49, %if.then14, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_classmethod) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_staticmethod) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_func) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %argc) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %binding_func) #13
  %90 = load ptr, ptr %retval, align 8
  ret ptr %90
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_FusedFunction_traverse(ptr noundef %self, ptr noundef %visit, ptr noundef %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca ptr, align 8
  %visit.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %vret9 = alloca i32, align 4
  %vret23 = alloca i32, align 4
  store ptr %self, ptr %self.addr, align 8, !tbaa !5
  store ptr %visit, ptr %visit.addr, align 8, !tbaa !5
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %self1 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %0, i32 0, i32 3
  %1 = load ptr, ptr %self1, align 8, !tbaa !51
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.then, label %if.end5

if.then:                                          ; preds = %do.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret) #13
  %2 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %self2 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %3, i32 0, i32 3
  %4 = load ptr, ptr %self2, align 8, !tbaa !51
  %5 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call = call i32 %2(ptr noundef %4, ptr noundef %5)
  store i32 %call, ptr %vret, align 4, !tbaa !9
  %6 = load i32, ptr %vret, align 4, !tbaa !9
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  %7 = load i32, ptr %vret, align 4, !tbaa !9
  store i32 %7, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then4
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end5

if.end5:                                          ; preds = %cleanup.cont, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end5
  br label %do.body6

do.body6:                                         ; preds = %do.end
  %8 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %type = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %8, i32 0, i32 2
  %9 = load ptr, ptr %type, align 8, !tbaa !50
  %tobool7 = icmp ne ptr %9, null
  br i1 %tobool7, label %if.then8, label %if.end18

if.then8:                                         ; preds = %do.body6
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret9) #13
  %10 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %11 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %type10 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %11, i32 0, i32 2
  %12 = load ptr, ptr %type10, align 8, !tbaa !50
  %13 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call11 = call i32 %10(ptr noundef %12, ptr noundef %13)
  store i32 %call11, ptr %vret9, align 4, !tbaa !9
  %14 = load i32, ptr %vret9, align 4, !tbaa !9
  %tobool12 = icmp ne i32 %14, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.then8
  %15 = load i32, ptr %vret9, align 4, !tbaa !9
  store i32 %15, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup15

if.end14:                                         ; preds = %if.then8
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup15

cleanup15:                                        ; preds = %if.end14, %if.then13
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret9) #13
  %cleanup.dest16 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest16, label %unreachable [
    i32 0, label %cleanup.cont17
    i32 1, label %return
  ]

cleanup.cont17:                                   ; preds = %cleanup15
  br label %if.end18

if.end18:                                         ; preds = %cleanup.cont17, %do.body6
  br label %do.end19

do.end19:                                         ; preds = %if.end18
  br label %do.body20

do.body20:                                        ; preds = %do.end19
  %16 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %__signatures__ = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %16, i32 0, i32 1
  %17 = load ptr, ptr %__signatures__, align 8, !tbaa !11
  %tobool21 = icmp ne ptr %17, null
  br i1 %tobool21, label %if.then22, label %if.end32

if.then22:                                        ; preds = %do.body20
  call void @llvm.lifetime.start.p0(i64 4, ptr %vret23) #13
  %18 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %19 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %__signatures__24 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %19, i32 0, i32 1
  %20 = load ptr, ptr %__signatures__24, align 8, !tbaa !11
  %21 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call25 = call i32 %18(ptr noundef %20, ptr noundef %21)
  store i32 %call25, ptr %vret23, align 4, !tbaa !9
  %22 = load i32, ptr %vret23, align 4, !tbaa !9
  %tobool26 = icmp ne i32 %22, 0
  br i1 %tobool26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.then22
  %23 = load i32, ptr %vret23, align 4, !tbaa !9
  store i32 %23, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup29

if.end28:                                         ; preds = %if.then22
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup29

cleanup29:                                        ; preds = %if.end28, %if.then27
  call void @llvm.lifetime.end.p0(i64 4, ptr %vret23) #13
  %cleanup.dest30 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest30, label %unreachable [
    i32 0, label %cleanup.cont31
    i32 1, label %return
  ]

cleanup.cont31:                                   ; preds = %cleanup29
  br label %if.end32

if.end32:                                         ; preds = %cleanup.cont31, %do.body20
  br label %do.end33

do.end33:                                         ; preds = %if.end32
  %24 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %25 = load ptr, ptr %visit.addr, align 8, !tbaa !5
  %26 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call34 = call i32 @__Pyx_CyFunction_traverse(ptr noundef %24, ptr noundef %25, ptr noundef %26)
  store i32 %call34, ptr %retval, align 4
  br label %return

return:                                           ; preds = %do.end33, %cleanup29, %cleanup15, %cleanup
  %27 = load i32, ptr %retval, align 4
  ret i32 %27

unreachable:                                      ; preds = %cleanup29, %cleanup15, %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_FusedFunction_clear(ptr noundef %self) #0 {
entry:
  %self.addr = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  %_py_tmp4 = alloca ptr, align 8
  %_py_tmp11 = alloca ptr, align 8
  store ptr %self, ptr %self.addr, align 8, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #13
  %0 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %self1 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %0, i32 0, i32 3
  %1 = load ptr, ptr %self1, align 8, !tbaa !51
  store ptr %1, ptr %_py_tmp, align 8, !tbaa !5
  %2 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  %cmp = icmp ne ptr %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %3 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %self2 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %3, i32 0, i32 3
  store ptr null, ptr %self2, align 8, !tbaa !51
  %4 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #13
  br label %do.end

do.end:                                           ; preds = %if.end
  br label %do.body3

do.body3:                                         ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp4) #13
  %5 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %type = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %5, i32 0, i32 2
  %6 = load ptr, ptr %type, align 8, !tbaa !50
  store ptr %6, ptr %_py_tmp4, align 8, !tbaa !5
  %7 = load ptr, ptr %_py_tmp4, align 8, !tbaa !5
  %cmp5 = icmp ne ptr %7, null
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %do.body3
  %8 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %type7 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %8, i32 0, i32 2
  store ptr null, ptr %type7, align 8, !tbaa !50
  %9 = load ptr, ptr %_py_tmp4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %9)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %do.body3
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp4) #13
  br label %do.end9

do.end9:                                          ; preds = %if.end8
  br label %do.body10

do.body10:                                        ; preds = %do.end9
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp11) #13
  %10 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %__signatures__ = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %10, i32 0, i32 1
  %11 = load ptr, ptr %__signatures__, align 8, !tbaa !11
  store ptr %11, ptr %_py_tmp11, align 8, !tbaa !5
  %12 = load ptr, ptr %_py_tmp11, align 8, !tbaa !5
  %cmp12 = icmp ne ptr %12, null
  br i1 %cmp12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %do.body10
  %13 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %__signatures__14 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %13, i32 0, i32 1
  store ptr null, ptr %__signatures__14, align 8, !tbaa !11
  %14 = load ptr, ptr %_py_tmp11, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %14)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %do.body10
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp11) #13
  br label %do.end16

do.end16:                                         ; preds = %if.end15
  %15 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_CyFunction_clear(ptr noundef %15)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_FusedFunction_descr_get(ptr noundef %self, ptr noundef %obj, ptr noundef %type) #0 {
entry:
  %retval = alloca ptr, align 8
  %self.addr = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %func = alloca ptr, align 8
  %meth = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %pydefaults = alloca ptr, align 8
  %i = alloca i32, align 4
  store ptr %self, ptr %self.addr, align 8, !tbaa !5
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store ptr %type, ptr %type.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %func) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %meth) #13
  %0 = load ptr, ptr %self.addr, align 8, !tbaa !5
  store ptr %0, ptr %func, align 8, !tbaa !5
  %1 = load ptr, ptr %func, align 8, !tbaa !5
  %self1 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %1, i32 0, i32 3
  %2 = load ptr, ptr %self1, align 8, !tbaa !51
  %tobool = icmp ne ptr %2, null
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load ptr, ptr %func, align 8, !tbaa !5
  %func2 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %3, i32 0, i32 0
  %flags = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func2, i32 0, i32 12
  %4 = load i32, ptr %flags, align 8, !tbaa !87
  %and = and i32 %4, 1
  %tobool3 = icmp ne i32 %and, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load ptr, ptr %self.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %5)
  %6 = load ptr, ptr %self.addr, align 8, !tbaa !5
  store ptr %6, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup51

if.end:                                           ; preds = %lor.lhs.false
  %7 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %7, @_Py_NoneStruct
  br i1 %cmp, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  store ptr null, ptr %obj.addr, align 8, !tbaa !5
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  %8 = load ptr, ptr %func, align 8, !tbaa !5
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %8, i32 0, i32 1
  %9 = load ptr, ptr %m_ml, align 8, !tbaa !77
  %10 = load ptr, ptr %func, align 8, !tbaa !5
  %flags6 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %10, i32 0, i32 12
  %11 = load i32, ptr %flags6, align 8, !tbaa !61
  %12 = load ptr, ptr %func, align 8, !tbaa !5
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %12, i32 0, i32 3
  %13 = load ptr, ptr %func_qualname, align 8, !tbaa !60
  %14 = load ptr, ptr %func, align 8, !tbaa !5
  %func_closure = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %14, i32 0, i32 7
  %15 = load ptr, ptr %func_closure, align 8, !tbaa !62
  %16 = load ptr, ptr %func, align 8, !tbaa !5
  %m_module = getelementptr inbounds %struct.PyCFunctionObject, ptr %16, i32 0, i32 3
  %17 = load ptr, ptr %m_module, align 8, !tbaa !91
  %18 = load ptr, ptr %func, align 8, !tbaa !5
  %func_globals = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %18, i32 0, i32 5
  %19 = load ptr, ptr %func_globals, align 8, !tbaa !67
  %20 = load ptr, ptr %func, align 8, !tbaa !5
  %func_code = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %20, i32 0, i32 6
  %21 = load ptr, ptr %func_code, align 8, !tbaa !68
  %call = call ptr @__pyx_FusedFunction_New(ptr noundef %9, i32 noundef %11, ptr noundef %13, ptr noundef %15, ptr noundef %17, ptr noundef %19, ptr noundef %21)
  store ptr %call, ptr %meth, align 8, !tbaa !5
  %22 = load ptr, ptr %meth, align 8, !tbaa !5
  %tobool7 = icmp ne ptr %22, null
  br i1 %tobool7, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.end5
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup51

if.end9:                                          ; preds = %if.end5
  %23 = load ptr, ptr %func, align 8, !tbaa !5
  %func10 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %23, i32 0, i32 0
  %defaults = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func10, i32 0, i32 9
  %24 = load ptr, ptr %defaults, align 8, !tbaa !92
  %tobool11 = icmp ne ptr %24, null
  br i1 %tobool11, label %if.then12, label %if.end30

if.then12:                                        ; preds = %if.end9
  call void @llvm.lifetime.start.p0(i64 8, ptr %pydefaults) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  %25 = load ptr, ptr %meth, align 8, !tbaa !5
  %26 = load ptr, ptr %func, align 8, !tbaa !5
  %func13 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %26, i32 0, i32 0
  %defaults_size = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func13, i32 0, i32 11
  %27 = load i64, ptr %defaults_size, align 8, !tbaa !93
  %28 = load ptr, ptr %func, align 8, !tbaa !5
  %func14 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %28, i32 0, i32 0
  %defaults_pyobjects = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func14, i32 0, i32 10
  %29 = load i32, ptr %defaults_pyobjects, align 8, !tbaa !94
  %call15 = call ptr @__Pyx_CyFunction_InitDefaults(ptr noundef %25, i64 noundef %27, i32 noundef %29)
  %tobool16 = icmp ne ptr %call15, null
  br i1 %tobool16, label %if.end18, label %if.then17

if.then17:                                        ; preds = %if.then12
  %30 = load ptr, ptr %meth, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %30)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end18:                                         ; preds = %if.then12
  %31 = load ptr, ptr %meth, align 8, !tbaa !5
  %func19 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %31, i32 0, i32 0
  %defaults20 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func19, i32 0, i32 9
  %32 = load ptr, ptr %defaults20, align 8, !tbaa !92
  %33 = load ptr, ptr %func, align 8, !tbaa !5
  %func21 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %33, i32 0, i32 0
  %defaults22 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func21, i32 0, i32 9
  %34 = load ptr, ptr %defaults22, align 8, !tbaa !92
  %35 = load ptr, ptr %func, align 8, !tbaa !5
  %func23 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %35, i32 0, i32 0
  %defaults_size24 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func23, i32 0, i32 11
  %36 = load i64, ptr %defaults_size24, align 8, !tbaa !93
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %32, ptr align 1 %34, i64 %36, i1 false)
  %37 = load ptr, ptr %meth, align 8, !tbaa !5
  %defaults25 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %37, i32 0, i32 9
  %38 = load ptr, ptr %defaults25, align 8, !tbaa !71
  store ptr %38, ptr %pydefaults, align 8, !tbaa !5
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end18
  %39 = load i32, ptr %i, align 4, !tbaa !9
  %40 = load ptr, ptr %meth, align 8, !tbaa !5
  %func26 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %40, i32 0, i32 0
  %defaults_pyobjects27 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func26, i32 0, i32 10
  %41 = load i32, ptr %defaults_pyobjects27, align 8, !tbaa !94
  %cmp28 = icmp slt i32 %39, %41
  br i1 %cmp28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %42 = load ptr, ptr %pydefaults, align 8, !tbaa !5
  %43 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %43 to i64
  %arrayidx = getelementptr ptr, ptr %42, i64 %idxprom
  %44 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  call void @Py_XINCREF(ptr noundef %44)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %45 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %45, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !95

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then17
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %pydefaults) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup51 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end30

if.end30:                                         ; preds = %cleanup.cont, %if.end9
  %46 = load ptr, ptr %func, align 8, !tbaa !5
  %func31 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %46, i32 0, i32 0
  %func_classobj = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func31, i32 0, i32 8
  %47 = load ptr, ptr %func_classobj, align 8, !tbaa !90
  call void @Py_XINCREF(ptr noundef %47)
  %48 = load ptr, ptr %func, align 8, !tbaa !5
  %func32 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %48, i32 0, i32 0
  %func_classobj33 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func32, i32 0, i32 8
  %49 = load ptr, ptr %func_classobj33, align 8, !tbaa !90
  %50 = load ptr, ptr %meth, align 8, !tbaa !5
  %func34 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %50, i32 0, i32 0
  %func_classobj35 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func34, i32 0, i32 8
  store ptr %49, ptr %func_classobj35, align 8, !tbaa !90
  %51 = load ptr, ptr %func, align 8, !tbaa !5
  %__signatures__ = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %51, i32 0, i32 1
  %52 = load ptr, ptr %__signatures__, align 8, !tbaa !11
  call void @Py_XINCREF(ptr noundef %52)
  %53 = load ptr, ptr %func, align 8, !tbaa !5
  %__signatures__36 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %53, i32 0, i32 1
  %54 = load ptr, ptr %__signatures__36, align 8, !tbaa !11
  %55 = load ptr, ptr %meth, align 8, !tbaa !5
  %__signatures__37 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %55, i32 0, i32 1
  store ptr %54, ptr %__signatures__37, align 8, !tbaa !11
  %56 = load ptr, ptr %type.addr, align 8, !tbaa !5
  call void @Py_XINCREF(ptr noundef %56)
  %57 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %58 = load ptr, ptr %meth, align 8, !tbaa !5
  %type38 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %58, i32 0, i32 2
  store ptr %57, ptr %type38, align 8, !tbaa !50
  %59 = load ptr, ptr %func, align 8, !tbaa !5
  %func39 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %59, i32 0, i32 0
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func39, i32 0, i32 13
  %60 = load ptr, ptr %defaults_tuple, align 8, !tbaa !89
  call void @Py_XINCREF(ptr noundef %60)
  %61 = load ptr, ptr %func, align 8, !tbaa !5
  %func40 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %61, i32 0, i32 0
  %defaults_tuple41 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func40, i32 0, i32 13
  %62 = load ptr, ptr %defaults_tuple41, align 8, !tbaa !89
  %63 = load ptr, ptr %meth, align 8, !tbaa !5
  %func42 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %63, i32 0, i32 0
  %defaults_tuple43 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func42, i32 0, i32 13
  store ptr %62, ptr %defaults_tuple43, align 8, !tbaa !89
  %64 = load ptr, ptr %func, align 8, !tbaa !5
  %func44 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %64, i32 0, i32 0
  %flags45 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func44, i32 0, i32 12
  %65 = load i32, ptr %flags45, align 8, !tbaa !87
  %and46 = and i32 %65, 2
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end30
  %66 = load ptr, ptr %type.addr, align 8, !tbaa !5
  store ptr %66, ptr %obj.addr, align 8, !tbaa !5
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end30
  %67 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  call void @Py_XINCREF(ptr noundef %67)
  %68 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %69 = load ptr, ptr %meth, align 8, !tbaa !5
  %self50 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %69, i32 0, i32 3
  store ptr %68, ptr %self50, align 8, !tbaa !51
  %70 = load ptr, ptr %meth, align 8, !tbaa !5
  store ptr %70, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup51

cleanup51:                                        ; preds = %if.end49, %cleanup, %if.then8, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %meth) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %func) #13
  %71 = load ptr, ptr %retval, align 8
  ret ptr %71
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_FusedFunction_getitem(ptr noundef %self, ptr noundef %idx) #0 {
entry:
  %retval = alloca ptr, align 8
  %self.addr = alloca ptr, align 8
  %idx.addr = alloca ptr, align 8
  %signature = alloca ptr, align 8
  %unbound_result_func = alloca ptr, align 8
  %result_func = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %list = alloca ptr, align 8
  %n = alloca i64, align 8
  %sep = alloca ptr, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %string = alloca ptr, align 8
  %item = alloca ptr, align 8
  %unbound = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  store ptr %self, ptr %self.addr, align 8, !tbaa !5
  store ptr %idx, ptr %idx.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %signature) #13
  store ptr null, ptr %signature, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %unbound_result_func) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %result_func) #13
  store ptr null, ptr %result_func, align 8, !tbaa !5
  %0 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %__signatures__ = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %0, i32 0, i32 1
  %1 = load ptr, ptr %__signatures__, align 8, !tbaa !11
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %2, ptr noundef @.str.61)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup90

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %idx.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %3)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 67108864)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %list) #13
  %call3 = call ptr @PyList_New(i64 noundef 0)
  store ptr %call3, ptr %list, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #13
  %4 = load ptr, ptr %idx.addr, align 8, !tbaa !5
  %call4 = call i64 @PyTuple_GET_SIZE(ptr noundef %4)
  store i64 %call4, ptr %n, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %sep) #13
  store ptr null, ptr %sep, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  %5 = load ptr, ptr %list, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %5, null
  %lnot = xor i1 %tobool5, true
  %lnot6 = xor i1 %lnot, true
  %lnot7 = xor i1 %lnot6, true
  %lnot.ext = zext i1 %lnot7 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool8 = icmp ne i64 %expval, 0
  br i1 %tobool8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.then2
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup53

if.end10:                                         ; preds = %if.then2
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end10
  %6 = load i32, ptr %i, align 4, !tbaa !9
  %conv11 = sext i32 %6 to i64
  %7 = load i64, ptr %n, align 8, !tbaa !27
  %cmp12 = icmp slt i64 %conv11, %7
  br i1 %cmp12, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %string) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %item) #13
  %8 = load ptr, ptr %idx.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %8, i32 0, i32 1
  %9 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %idxprom
  %10 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %10, ptr %item, align 8, !tbaa !5
  %11 = load ptr, ptr %item, align 8, !tbaa !5
  %call14 = call ptr @_obj_to_str(ptr noundef %11)
  store ptr %call14, ptr %string, align 8, !tbaa !5
  %12 = load ptr, ptr %string, align 8, !tbaa !5
  %tobool15 = icmp ne ptr %12, null
  %lnot16 = xor i1 %tobool15, true
  %lnot18 = xor i1 %lnot16, true
  %lnot20 = xor i1 %lnot18, true
  %lnot.ext21 = zext i1 %lnot20 to i32
  %conv22 = sext i32 %lnot.ext21 to i64
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 0)
  %tobool24 = icmp ne i64 %expval23, 0
  br i1 %tobool24, label %if.then25, label %if.end26

if.then25:                                        ; preds = %for.body
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end26:                                         ; preds = %for.body
  %13 = load ptr, ptr %list, align 8, !tbaa !5
  %14 = load ptr, ptr %string, align 8, !tbaa !5
  %call27 = call i32 @PyList_Append(ptr noundef %13, ptr noundef %14)
  store i32 %call27, ptr %ret, align 4, !tbaa !9
  %15 = load ptr, ptr %string, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %15)
  %16 = load i32, ptr %ret, align 4, !tbaa !9
  %cmp28 = icmp slt i32 %16, 0
  %lnot30 = xor i1 %cmp28, true
  %lnot32 = xor i1 %lnot30, true
  %lnot.ext33 = zext i1 %lnot32 to i32
  %conv34 = sext i32 %lnot.ext33 to i64
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 0)
  %tobool36 = icmp ne i64 %expval35, 0
  br i1 %tobool36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.end26
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end38:                                         ; preds = %if.end26
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then37, %if.then25, %if.end38
  call void @llvm.lifetime.end.p0(i64 8, ptr %item) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %string) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup53 [
    i32 0, label %cleanup.cont
    i32 5, label %__pyx_err
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %17 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %17, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !96

for.end:                                          ; preds = %for.cond
  %call41 = call ptr @PyUnicode_FromString(ptr noundef @.str.62)
  store ptr %call41, ptr %sep, align 8, !tbaa !5
  %18 = load ptr, ptr %sep, align 8, !tbaa !5
  %tobool42 = icmp ne ptr %18, null
  %lnot43 = xor i1 %tobool42, true
  %lnot45 = xor i1 %lnot43, true
  %lnot.ext46 = zext i1 %lnot45 to i32
  %conv47 = sext i32 %lnot.ext46 to i64
  %expval48 = call i64 @llvm.expect.i64(i64 %conv47, i64 1)
  %tobool49 = icmp ne i64 %expval48, 0
  br i1 %tobool49, label %if.then50, label %if.end52

if.then50:                                        ; preds = %for.end
  %19 = load ptr, ptr %sep, align 8, !tbaa !5
  %20 = load ptr, ptr %list, align 8, !tbaa !5
  %call51 = call ptr @PyUnicode_Join(ptr noundef %19, ptr noundef %20)
  store ptr %call51, ptr %signature, align 8, !tbaa !5
  br label %if.end52

if.end52:                                         ; preds = %if.then50, %for.end
  br label %__pyx_err

__pyx_err:                                        ; preds = %if.end52, %cleanup
  %21 = load ptr, ptr %list, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %21)
  %22 = load ptr, ptr %sep, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %22)
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup53

cleanup53:                                        ; preds = %__pyx_err, %cleanup, %if.then9
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %sep) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %list) #13
  %cleanup.dest57 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest57, label %cleanup90 [
    i32 0, label %cleanup.cont58
  ]

cleanup.cont58:                                   ; preds = %cleanup53
  br label %if.end60

if.else:                                          ; preds = %if.end
  %23 = load ptr, ptr %idx.addr, align 8, !tbaa !5
  %call59 = call ptr @_obj_to_str(ptr noundef %23)
  store ptr %call59, ptr %signature, align 8, !tbaa !5
  br label %if.end60

if.end60:                                         ; preds = %if.else, %cleanup.cont58
  %24 = load ptr, ptr %signature, align 8, !tbaa !5
  %tobool61 = icmp ne ptr %24, null
  br i1 %tobool61, label %if.end63, label %if.then62

if.then62:                                        ; preds = %if.end60
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup90

if.end63:                                         ; preds = %if.end60
  %25 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %__signatures__64 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %25, i32 0, i32 1
  %26 = load ptr, ptr %__signatures__64, align 8, !tbaa !11
  %27 = load ptr, ptr %signature, align 8, !tbaa !5
  %call65 = call ptr @PyObject_GetItem(ptr noundef %26, ptr noundef %27)
  store ptr %call65, ptr %unbound_result_func, align 8, !tbaa !5
  %28 = load ptr, ptr %unbound_result_func, align 8, !tbaa !5
  %tobool66 = icmp ne ptr %28, null
  br i1 %tobool66, label %if.then67, label %if.end89

if.then67:                                        ; preds = %if.end63
  %29 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %self68 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %29, i32 0, i32 3
  %30 = load ptr, ptr %self68, align 8, !tbaa !51
  %tobool69 = icmp ne ptr %30, null
  br i1 %tobool69, label %if.then71, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then67
  %31 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %type = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %31, i32 0, i32 2
  %32 = load ptr, ptr %type, align 8, !tbaa !50
  %tobool70 = icmp ne ptr %32, null
  br i1 %tobool70, label %if.then71, label %if.else87

if.then71:                                        ; preds = %lor.lhs.false, %if.then67
  call void @llvm.lifetime.start.p0(i64 8, ptr %unbound) #13
  %33 = load ptr, ptr %unbound_result_func, align 8, !tbaa !5
  store ptr %33, ptr %unbound, align 8, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %if.then71
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #13
  %34 = load ptr, ptr %unbound, align 8, !tbaa !5
  %func = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %34, i32 0, i32 0
  %func_classobj = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func, i32 0, i32 8
  %35 = load ptr, ptr %func_classobj, align 8, !tbaa !90
  store ptr %35, ptr %_py_tmp, align 8, !tbaa !5
  %36 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  %cmp72 = icmp ne ptr %36, null
  br i1 %cmp72, label %if.then74, label %if.end77

if.then74:                                        ; preds = %do.body
  %37 = load ptr, ptr %unbound, align 8, !tbaa !5
  %func75 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %37, i32 0, i32 0
  %func_classobj76 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func75, i32 0, i32 8
  store ptr null, ptr %func_classobj76, align 8, !tbaa !90
  %38 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %38)
  br label %if.end77

if.end77:                                         ; preds = %if.then74, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %if.end77
  br label %do.end

do.end:                                           ; preds = %do.cond
  %39 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %func78 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %39, i32 0, i32 0
  %func_classobj79 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func78, i32 0, i32 8
  %40 = load ptr, ptr %func_classobj79, align 8, !tbaa !90
  call void @Py_XINCREF(ptr noundef %40)
  %41 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %func80 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %41, i32 0, i32 0
  %func_classobj81 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func80, i32 0, i32 8
  %42 = load ptr, ptr %func_classobj81, align 8, !tbaa !90
  %43 = load ptr, ptr %unbound, align 8, !tbaa !5
  %func82 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %43, i32 0, i32 0
  %func_classobj83 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %func82, i32 0, i32 8
  store ptr %42, ptr %func_classobj83, align 8, !tbaa !90
  %44 = load ptr, ptr %unbound_result_func, align 8, !tbaa !5
  %45 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %self84 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %45, i32 0, i32 3
  %46 = load ptr, ptr %self84, align 8, !tbaa !51
  %47 = load ptr, ptr %self.addr, align 8, !tbaa !5
  %type85 = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %47, i32 0, i32 2
  %48 = load ptr, ptr %type85, align 8, !tbaa !50
  %call86 = call ptr @__pyx_FusedFunction_descr_get(ptr noundef %44, ptr noundef %46, ptr noundef %48)
  store ptr %call86, ptr %result_func, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %unbound) #13
  br label %if.end88

if.else87:                                        ; preds = %lor.lhs.false
  %49 = load ptr, ptr %unbound_result_func, align 8, !tbaa !5
  store ptr %49, ptr %result_func, align 8, !tbaa !5
  %50 = load ptr, ptr %result_func, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %50)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %do.end
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end63
  %51 = load ptr, ptr %signature, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %51)
  %52 = load ptr, ptr %unbound_result_func, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %52)
  %53 = load ptr, ptr %result_func, align 8, !tbaa !5
  store ptr %53, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup90

cleanup90:                                        ; preds = %if.end89, %if.then62, %cleanup53, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %result_func) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %unbound_result_func) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %signature) #13
  %54 = load ptr, ptr %retval, align 8
  ret ptr %54
}

declare ptr @PyList_New(i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @_obj_to_str(ptr noundef %obj) #0 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call i32 @PyType_Check(ptr noundef %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %2 = load ptr, ptr @__pyx_n_s_name_2, align 8, !tbaa !5
  %call1 = call ptr @PyObject_GetAttr(ptr noundef %1, ptr noundef %2)
  store ptr %call1, ptr %retval, align 8
  br label %return

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call2 = call ptr @PyObject_Str(ptr noundef %3)
  store ptr %call2, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.else, %if.then
  %4 = load ptr, ptr %retval, align 8
  ret ptr %4
}

declare i32 @PyList_Append(ptr noundef, ptr noundef) #1

declare ptr @PyUnicode_Join(ptr noundef, ptr noundef) #1

declare ptr @PyObject_GetItem(ptr noundef, ptr noundef) #1

declare ptr @PyObject_GetAttr(ptr noundef, ptr noundef) #1

declare ptr @PyObject_Str(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @PyTuple_SET_ITEM(ptr noundef %op, i64 noundef %index, ptr noundef %value) #3 {
entry:
  %op.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  %value.addr = alloca ptr, align 8
  %tuple = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store i64 %index, ptr %index.addr, align 8, !tbaa !27
  store ptr %value, ptr %value.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tuple) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  store ptr %0, ptr %tuple, align 8, !tbaa !5
  %1 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %tuple, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %2, i32 0, i32 1
  %3 = load i64, ptr %index.addr, align 8, !tbaa !27
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %3
  store ptr %1, ptr %arrayidx, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %tuple) #13
  ret void
}

declare i32 @PyObject_IsInstance(ptr noundef, ptr noundef) #1

declare ptr @PyTuple_Pack(i64 noundef, ...) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_FusedFunction_callfunction(ptr noundef %func, ptr noundef %args, ptr noundef %kw) #0 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %kw.addr = alloca ptr, align 8
  %cyfunc = alloca ptr, align 8
  %static_specialized = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  store ptr %args, ptr %args.addr, align 8, !tbaa !5
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %cyfunc) #13
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  store ptr %0, ptr %cyfunc, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %static_specialized) #13
  %1 = load ptr, ptr %cyfunc, align 8, !tbaa !5
  %flags = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %1, i32 0, i32 12
  %2 = load i32, ptr %flags, align 8, !tbaa !61
  %and = and i32 %2, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %3 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %__signatures__ = getelementptr inbounds %struct.__pyx_FusedFunctionObject, ptr %3, i32 0, i32 1
  %4 = load ptr, ptr %__signatures__, align 8, !tbaa !11
  %tobool1 = icmp ne ptr %4, null
  %lnot = xor i1 %tobool1, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %5 to i32
  store i32 %land.ext, ptr %static_specialized, align 4, !tbaa !9
  %6 = load ptr, ptr %cyfunc, align 8, !tbaa !5
  %flags2 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %6, i32 0, i32 12
  %7 = load i32, ptr %flags2, align 8, !tbaa !61
  %and3 = and i32 %7, 4
  %tobool4 = icmp ne i32 %and3, 0
  br i1 %tobool4, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %land.end
  %8 = load i32, ptr %static_specialized, align 4, !tbaa !9
  %tobool5 = icmp ne i32 %8, 0
  br i1 %tobool5, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %9 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %10 = load ptr, ptr %args.addr, align 8, !tbaa !5
  %11 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %call = call ptr @__Pyx_CyFunction_CallAsMethod(ptr noundef %9, ptr noundef %10, ptr noundef %11)
  store ptr %call, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.else:                                          ; preds = %land.lhs.true, %land.end
  %12 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %13 = load ptr, ptr %args.addr, align 8, !tbaa !5
  %14 = load ptr, ptr %kw.addr, align 8, !tbaa !5
  %call6 = call ptr @__Pyx_CyFunction_Call(ptr noundef %12, ptr noundef %13, ptr noundef %14)
  store ptr %call6, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %static_specialized) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %cyfunc) #13
  %15 = load ptr, ptr %retval, align 8
  ret ptr %15
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_CyFunction_InitDefaults(ptr noundef %func, i64 noundef %size, i32 noundef %pyobjects) #3 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  %pyobjects.addr = alloca i32, align 4
  %m = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  store i64 %size, ptr %size.addr, align 8, !tbaa !27
  store i32 %pyobjects, ptr %pyobjects.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %m) #13
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  store ptr %0, ptr %m, align 8, !tbaa !5
  %1 = load i64, ptr %size.addr, align 8, !tbaa !27
  %call = call ptr @PyObject_Malloc(i64 noundef %1)
  %2 = load ptr, ptr %m, align 8, !tbaa !5
  %defaults = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 9
  store ptr %call, ptr %defaults, align 8, !tbaa !71
  %3 = load ptr, ptr %m, align 8, !tbaa !5
  %defaults1 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 9
  %4 = load ptr, ptr %defaults1, align 8, !tbaa !71
  %tobool = icmp ne ptr %4, null
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call5 = call ptr @PyErr_NoMemory()
  store ptr %call5, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %m, align 8, !tbaa !5
  %defaults6 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %5, i32 0, i32 9
  %6 = load ptr, ptr %defaults6, align 8, !tbaa !71
  %7 = load i64, ptr %size.addr, align 8, !tbaa !27
  call void @llvm.memset.p0.i64(ptr align 1 %6, i8 0, i64 %7, i1 false)
  %8 = load i32, ptr %pyobjects.addr, align 4, !tbaa !9
  %9 = load ptr, ptr %m, align 8, !tbaa !5
  %defaults_pyobjects = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %9, i32 0, i32 10
  store i32 %8, ptr %defaults_pyobjects, align 8, !tbaa !72
  %10 = load i64, ptr %size.addr, align 8, !tbaa !27
  %11 = load ptr, ptr %m, align 8, !tbaa !5
  %defaults_size = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %11, i32 0, i32 11
  store i64 %10, ptr %defaults_size, align 8, !tbaa !97
  %12 = load ptr, ptr %m, align 8, !tbaa !5
  %defaults7 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %12, i32 0, i32 9
  %13 = load ptr, ptr %defaults7, align 8, !tbaa !71
  store ptr %13, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %m) #13
  %14 = load ptr, ptr %retval, align 8
  ret ptr %14
}

declare ptr @PyObject_Malloc(i64 noundef) #1

declare ptr @PyErr_NoMemory() #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_init_assertions_enabled() #0 {
entry:
  %call = call ptr @PyThreadState_Get()
  %interp = getelementptr inbounds %struct._ts, ptr %call, i32 0, i32 2
  %0 = load ptr, ptr %interp, align 8, !tbaa !20
  %call1 = call ptr @_PyInterpreterState_GetConfig(ptr noundef %0)
  %optimization_level = getelementptr inbounds %struct.PyConfig, ptr %call1, i32 0, i32 28
  %1 = load i32, ptr %optimization_level, align 4, !tbaa !98
  %tobool = icmp ne i32 %1, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, ptr @__pyx_assertions_enabled_flag, align 4, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitStrings(ptr noundef %t) #0 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca ptr, align 8
  store ptr %t, ptr %t.addr, align 8, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %if.end34, %entry
  %0 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %p = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %p, align 8, !tbaa !101
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %is_unicode = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %2, i32 0, i32 4
  %3 = load i8, ptr %is_unicode, align 8, !tbaa !103
  %conv = sext i8 %3 to i32
  %4 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %is_str = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %4, i32 0, i32 5
  %5 = load i8, ptr %is_str, align 1, !tbaa !104
  %conv1 = sext i8 %5 to i32
  %or = or i32 %conv, %conv1
  %tobool2 = icmp ne i32 %or, 0
  br i1 %tobool2, label %if.then, label %if.else19

if.then:                                          ; preds = %while.body
  %6 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %intern = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %6, i32 0, i32 6
  %7 = load i8, ptr %intern, align 2, !tbaa !105
  %tobool3 = icmp ne i8 %7, 0
  br i1 %tobool3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  %8 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %s = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %8, i32 0, i32 1
  %9 = load ptr, ptr %s, align 8, !tbaa !106
  %call = call ptr @PyUnicode_InternFromString(ptr noundef %9)
  %10 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %p5 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %10, i32 0, i32 0
  %11 = load ptr, ptr %p5, align 8, !tbaa !101
  store ptr %call, ptr %11, align 8, !tbaa !5
  br label %if.end18

if.else:                                          ; preds = %if.then
  %12 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %encoding = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %12, i32 0, i32 3
  %13 = load ptr, ptr %encoding, align 8, !tbaa !107
  %tobool6 = icmp ne ptr %13, null
  br i1 %tobool6, label %if.then7, label %if.else12

if.then7:                                         ; preds = %if.else
  %14 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %s8 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %14, i32 0, i32 1
  %15 = load ptr, ptr %s8, align 8, !tbaa !106
  %16 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %n = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %16, i32 0, i32 2
  %17 = load i64, ptr %n, align 8, !tbaa !108
  %sub = sub i64 %17, 1
  %18 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %encoding9 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %18, i32 0, i32 3
  %19 = load ptr, ptr %encoding9, align 8, !tbaa !107
  %call10 = call ptr @PyUnicode_Decode(ptr noundef %15, i64 noundef %sub, ptr noundef %19, ptr noundef null)
  %20 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %p11 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %20, i32 0, i32 0
  %21 = load ptr, ptr %p11, align 8, !tbaa !101
  store ptr %call10, ptr %21, align 8, !tbaa !5
  br label %if.end

if.else12:                                        ; preds = %if.else
  %22 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %s13 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %22, i32 0, i32 1
  %23 = load ptr, ptr %s13, align 8, !tbaa !106
  %24 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %n14 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %24, i32 0, i32 2
  %25 = load i64, ptr %n14, align 8, !tbaa !108
  %sub15 = sub i64 %25, 1
  %call16 = call ptr @PyUnicode_FromStringAndSize(ptr noundef %23, i64 noundef %sub15)
  %26 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %p17 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %26, i32 0, i32 0
  %27 = load ptr, ptr %p17, align 8, !tbaa !101
  store ptr %call16, ptr %27, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else12, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then4
  br label %if.end25

if.else19:                                        ; preds = %while.body
  %28 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %s20 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %28, i32 0, i32 1
  %29 = load ptr, ptr %s20, align 8, !tbaa !106
  %30 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %n21 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %30, i32 0, i32 2
  %31 = load i64, ptr %n21, align 8, !tbaa !108
  %sub22 = sub i64 %31, 1
  %call23 = call ptr @PyBytes_FromStringAndSize(ptr noundef %29, i64 noundef %sub22)
  %32 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %p24 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %32, i32 0, i32 0
  %33 = load ptr, ptr %p24, align 8, !tbaa !101
  store ptr %call23, ptr %33, align 8, !tbaa !5
  br label %if.end25

if.end25:                                         ; preds = %if.else19, %if.end18
  %34 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %p26 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %34, i32 0, i32 0
  %35 = load ptr, ptr %p26, align 8, !tbaa !101
  %36 = load ptr, ptr %35, align 8, !tbaa !5
  %tobool27 = icmp ne ptr %36, null
  br i1 %tobool27, label %if.end29, label %if.then28

if.then28:                                        ; preds = %if.end25
  store i32 -1, ptr %retval, align 4
  br label %return

if.end29:                                         ; preds = %if.end25
  %37 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %p30 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %37, i32 0, i32 0
  %38 = load ptr, ptr %p30, align 8, !tbaa !101
  %39 = load ptr, ptr %38, align 8, !tbaa !5
  %call31 = call i64 @PyObject_Hash(ptr noundef %39)
  %cmp = icmp eq i64 %call31, -1
  br i1 %cmp, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.end29
  store i32 -1, ptr %retval, align 4
  br label %return

if.end34:                                         ; preds = %if.end29
  %40 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %incdec.ptr = getelementptr %struct.__Pyx_StringTabEntry, ptr %40, i32 1
  store ptr %incdec.ptr, ptr %t.addr, align 8, !tbaa !5
  br label %while.cond, !llvm.loop !109

while.end:                                        ; preds = %while.cond
  store i32 0, ptr %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then33, %if.then28
  %41 = load i32, ptr %retval, align 4
  ret i32 %41
}

declare ptr @PyLong_FromLong(i64 noundef) #1

declare ptr @_PyInterpreterState_GetConfig(ptr noundef) #1

declare ptr @PyUnicode_Decode(ptr noundef, i64 noundef, ptr noundef, ptr noundef) #1

declare i64 @PyObject_Hash(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetBuiltinName(ptr noundef %name) #0 {
entry:
  %name.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  store ptr %name, ptr %name.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  %0 = load ptr, ptr @__pyx_b, align 8, !tbaa !5
  %1 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %result, align 8, !tbaa !5
  %2 = load ptr, ptr %result, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @PyExc_NameError, align 8, !tbaa !5
  %4 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %call4 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %3, ptr noundef @.str.66, ptr noundef %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load ptr, ptr %result, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  ret ptr %5
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %obj, ptr noundef %attr_name) #3 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %attr_name.addr = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store ptr %attr_name, ptr %attr_name.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  store ptr %call, ptr %tp, align 8, !tbaa !5
  %1 = load ptr, ptr %tp, align 8, !tbaa !5
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 16
  %2 = load ptr, ptr %tp_getattro, align 8, !tbaa !37
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %tp, align 8, !tbaa !5
  %tp_getattro3 = getelementptr inbounds %struct._typeobject, ptr %3, i32 0, i32 16
  %4 = load ptr, ptr %tp_getattro3, align 8, !tbaa !37
  %5 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %6 = load ptr, ptr %attr_name.addr, align 8, !tbaa !5
  %call4 = call ptr %4(ptr noundef %5, ptr noundef %6)
  store ptr %call4, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %attr_name.addr, align 8, !tbaa !5
  %call5 = call ptr @PyObject_GetAttr(ptr noundef %7, ptr noundef %8)
  store ptr %call5, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #13
  %9 = load ptr, ptr %retval, align 8
  ret ptr %9
}

declare ptr @PySlice_New(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyCode_New(i32 noundef %a, i32 noundef %k, i32 noundef %l, i32 noundef %s, i32 noundef %f, ptr noundef %code, ptr noundef %c, ptr noundef %n, ptr noundef %v, ptr noundef %fv, ptr noundef %cell, ptr noundef %fn, ptr noundef %name, i32 noundef %fline, ptr noundef %lnos) #3 {
entry:
  %a.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %l.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %f.addr = alloca i32, align 4
  %code.addr = alloca ptr, align 8
  %c.addr = alloca ptr, align 8
  %n.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  %fv.addr = alloca ptr, align 8
  %cell.addr = alloca ptr, align 8
  %fn.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %fline.addr = alloca i32, align 4
  %lnos.addr = alloca ptr, align 8
  %kwds = alloca ptr, align 8
  %argcount = alloca ptr, align 8
  %posonlyargcount = alloca ptr, align 8
  %kwonlyargcount = alloca ptr, align 8
  %nlocals = alloca ptr, align 8
  %stacksize = alloca ptr, align 8
  %flags = alloca ptr, align 8
  %replace = alloca ptr, align 8
  %call_result = alloca ptr, align 8
  %empty = alloca ptr, align 8
  %fn_cstr = alloca ptr, align 8
  %name_cstr = alloca ptr, align 8
  %co = alloca ptr, align 8
  %type = alloca ptr, align 8
  %value = alloca ptr, align 8
  %traceback = alloca ptr, align 8
  store i32 %a, ptr %a.addr, align 4, !tbaa !9
  store i32 %k, ptr %k.addr, align 4, !tbaa !9
  store i32 %l, ptr %l.addr, align 4, !tbaa !9
  store i32 %s, ptr %s.addr, align 4, !tbaa !9
  store i32 %f, ptr %f.addr, align 4, !tbaa !9
  store ptr %code, ptr %code.addr, align 8, !tbaa !5
  store ptr %c, ptr %c.addr, align 8, !tbaa !5
  store ptr %n, ptr %n.addr, align 8, !tbaa !5
  store ptr %v, ptr %v.addr, align 8, !tbaa !5
  store ptr %fv, ptr %fv.addr, align 8, !tbaa !5
  store ptr %cell, ptr %cell.addr, align 8, !tbaa !5
  store ptr %fn, ptr %fn.addr, align 8, !tbaa !5
  store ptr %name, ptr %name.addr, align 8, !tbaa !5
  store i32 %fline, ptr %fline.addr, align 4, !tbaa !9
  store ptr %lnos, ptr %lnos.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %kwds) #13
  store ptr null, ptr %kwds, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %argcount) #13
  store ptr null, ptr %argcount, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %posonlyargcount) #13
  store ptr null, ptr %posonlyargcount, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %kwonlyargcount) #13
  store ptr null, ptr %kwonlyargcount, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %nlocals) #13
  store ptr null, ptr %nlocals, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %stacksize) #13
  store ptr null, ptr %stacksize, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %flags) #13
  store ptr null, ptr %flags, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %replace) #13
  store ptr null, ptr %replace, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %call_result) #13
  store ptr null, ptr %call_result, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty) #13
  store ptr null, ptr %empty, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %fn_cstr) #13
  store ptr null, ptr %fn_cstr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %name_cstr) #13
  store ptr null, ptr %name_cstr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %co) #13
  store ptr null, ptr %co, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %type) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %traceback) #13
  call void @PyErr_Fetch(ptr noundef %type, ptr noundef %value, ptr noundef %traceback)
  %call = call ptr @PyDict_New()
  store ptr %call, ptr %kwds, align 8, !tbaa !5
  %tobool = icmp ne ptr %call, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %end

if.end:                                           ; preds = %entry
  %0 = load i32, ptr %a.addr, align 4, !tbaa !9
  %conv = sext i32 %0 to i64
  %call1 = call ptr @PyLong_FromLong(i64 noundef %conv)
  store ptr %call1, ptr %argcount, align 8, !tbaa !5
  %tobool2 = icmp ne ptr %call1, null
  br i1 %tobool2, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  br label %end

if.end4:                                          ; preds = %if.end
  %1 = load ptr, ptr %kwds, align 8, !tbaa !5
  %2 = load ptr, ptr %argcount, align 8, !tbaa !5
  %call5 = call i32 @PyDict_SetItemString(ptr noundef %1, ptr noundef @.str.67, ptr noundef %2)
  %cmp = icmp ne i32 %call5, 0
  br i1 %cmp, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end4
  br label %end

if.end8:                                          ; preds = %if.end4
  %call9 = call ptr @PyLong_FromLong(i64 noundef 0)
  store ptr %call9, ptr %posonlyargcount, align 8, !tbaa !5
  %tobool10 = icmp ne ptr %call9, null
  br i1 %tobool10, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.end8
  br label %end

if.end12:                                         ; preds = %if.end8
  %3 = load ptr, ptr %kwds, align 8, !tbaa !5
  %4 = load ptr, ptr %posonlyargcount, align 8, !tbaa !5
  %call13 = call i32 @PyDict_SetItemString(ptr noundef %3, ptr noundef @.str.68, ptr noundef %4)
  %cmp14 = icmp ne i32 %call13, 0
  br i1 %cmp14, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end12
  br label %end

if.end17:                                         ; preds = %if.end12
  %5 = load i32, ptr %k.addr, align 4, !tbaa !9
  %conv18 = sext i32 %5 to i64
  %call19 = call ptr @PyLong_FromLong(i64 noundef %conv18)
  store ptr %call19, ptr %kwonlyargcount, align 8, !tbaa !5
  %tobool20 = icmp ne ptr %call19, null
  br i1 %tobool20, label %if.end22, label %if.then21

if.then21:                                        ; preds = %if.end17
  br label %end

if.end22:                                         ; preds = %if.end17
  %6 = load ptr, ptr %kwds, align 8, !tbaa !5
  %7 = load ptr, ptr %kwonlyargcount, align 8, !tbaa !5
  %call23 = call i32 @PyDict_SetItemString(ptr noundef %6, ptr noundef @.str.69, ptr noundef %7)
  %cmp24 = icmp ne i32 %call23, 0
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end22
  br label %end

if.end27:                                         ; preds = %if.end22
  %8 = load i32, ptr %l.addr, align 4, !tbaa !9
  %conv28 = sext i32 %8 to i64
  %call29 = call ptr @PyLong_FromLong(i64 noundef %conv28)
  store ptr %call29, ptr %nlocals, align 8, !tbaa !5
  %tobool30 = icmp ne ptr %call29, null
  br i1 %tobool30, label %if.end32, label %if.then31

if.then31:                                        ; preds = %if.end27
  br label %end

if.end32:                                         ; preds = %if.end27
  %9 = load ptr, ptr %kwds, align 8, !tbaa !5
  %10 = load ptr, ptr %nlocals, align 8, !tbaa !5
  %call33 = call i32 @PyDict_SetItemString(ptr noundef %9, ptr noundef @.str.70, ptr noundef %10)
  %cmp34 = icmp ne i32 %call33, 0
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end32
  br label %end

if.end37:                                         ; preds = %if.end32
  %11 = load i32, ptr %s.addr, align 4, !tbaa !9
  %conv38 = sext i32 %11 to i64
  %call39 = call ptr @PyLong_FromLong(i64 noundef %conv38)
  store ptr %call39, ptr %stacksize, align 8, !tbaa !5
  %tobool40 = icmp ne ptr %call39, null
  br i1 %tobool40, label %if.end42, label %if.then41

if.then41:                                        ; preds = %if.end37
  br label %end

if.end42:                                         ; preds = %if.end37
  %12 = load ptr, ptr %kwds, align 8, !tbaa !5
  %13 = load ptr, ptr %stacksize, align 8, !tbaa !5
  %call43 = call i32 @PyDict_SetItemString(ptr noundef %12, ptr noundef @.str.71, ptr noundef %13)
  %cmp44 = icmp ne i32 %call43, 0
  br i1 %cmp44, label %if.then46, label %if.end47

if.then46:                                        ; preds = %if.end42
  br label %end

if.end47:                                         ; preds = %if.end42
  %14 = load i32, ptr %f.addr, align 4, !tbaa !9
  %conv48 = sext i32 %14 to i64
  %call49 = call ptr @PyLong_FromLong(i64 noundef %conv48)
  store ptr %call49, ptr %flags, align 8, !tbaa !5
  %tobool50 = icmp ne ptr %call49, null
  br i1 %tobool50, label %if.end52, label %if.then51

if.then51:                                        ; preds = %if.end47
  br label %end

if.end52:                                         ; preds = %if.end47
  %15 = load ptr, ptr %kwds, align 8, !tbaa !5
  %16 = load ptr, ptr %flags, align 8, !tbaa !5
  %call53 = call i32 @PyDict_SetItemString(ptr noundef %15, ptr noundef @.str.72, ptr noundef %16)
  %cmp54 = icmp ne i32 %call53, 0
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end52
  br label %end

if.end57:                                         ; preds = %if.end52
  %17 = load ptr, ptr %kwds, align 8, !tbaa !5
  %18 = load ptr, ptr %code.addr, align 8, !tbaa !5
  %call58 = call i32 @PyDict_SetItemString(ptr noundef %17, ptr noundef @.str.73, ptr noundef %18)
  %cmp59 = icmp ne i32 %call58, 0
  br i1 %cmp59, label %if.then61, label %if.end62

if.then61:                                        ; preds = %if.end57
  br label %end

if.end62:                                         ; preds = %if.end57
  %19 = load ptr, ptr %kwds, align 8, !tbaa !5
  %20 = load ptr, ptr %c.addr, align 8, !tbaa !5
  %call63 = call i32 @PyDict_SetItemString(ptr noundef %19, ptr noundef @.str.74, ptr noundef %20)
  %cmp64 = icmp ne i32 %call63, 0
  br i1 %cmp64, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.end62
  br label %end

if.end67:                                         ; preds = %if.end62
  %21 = load ptr, ptr %kwds, align 8, !tbaa !5
  %22 = load ptr, ptr %n.addr, align 8, !tbaa !5
  %call68 = call i32 @PyDict_SetItemString(ptr noundef %21, ptr noundef @.str.75, ptr noundef %22)
  %cmp69 = icmp ne i32 %call68, 0
  br i1 %cmp69, label %if.then71, label %if.end72

if.then71:                                        ; preds = %if.end67
  br label %end

if.end72:                                         ; preds = %if.end67
  %23 = load ptr, ptr %kwds, align 8, !tbaa !5
  %24 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %call73 = call i32 @PyDict_SetItemString(ptr noundef %23, ptr noundef @.str.76, ptr noundef %24)
  %cmp74 = icmp ne i32 %call73, 0
  br i1 %cmp74, label %if.then76, label %if.end77

if.then76:                                        ; preds = %if.end72
  br label %end

if.end77:                                         ; preds = %if.end72
  %25 = load ptr, ptr %kwds, align 8, !tbaa !5
  %26 = load ptr, ptr %fv.addr, align 8, !tbaa !5
  %call78 = call i32 @PyDict_SetItemString(ptr noundef %25, ptr noundef @.str.77, ptr noundef %26)
  %cmp79 = icmp ne i32 %call78, 0
  br i1 %cmp79, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.end77
  br label %end

if.end82:                                         ; preds = %if.end77
  %27 = load ptr, ptr %kwds, align 8, !tbaa !5
  %28 = load ptr, ptr %cell.addr, align 8, !tbaa !5
  %call83 = call i32 @PyDict_SetItemString(ptr noundef %27, ptr noundef @.str.78, ptr noundef %28)
  %cmp84 = icmp ne i32 %call83, 0
  br i1 %cmp84, label %if.then86, label %if.end87

if.then86:                                        ; preds = %if.end82
  br label %end

if.end87:                                         ; preds = %if.end82
  %29 = load ptr, ptr %kwds, align 8, !tbaa !5
  %30 = load ptr, ptr %lnos.addr, align 8, !tbaa !5
  %call88 = call i32 @PyDict_SetItemString(ptr noundef %29, ptr noundef @.str.79, ptr noundef %30)
  %cmp89 = icmp ne i32 %call88, 0
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end87
  br label %end

if.end92:                                         ; preds = %if.end87
  %31 = load ptr, ptr %fn.addr, align 8, !tbaa !5
  %call93 = call ptr @PyUnicode_AsUTF8AndSize(ptr noundef %31, ptr noundef null)
  store ptr %call93, ptr %fn_cstr, align 8, !tbaa !5
  %tobool94 = icmp ne ptr %call93, null
  br i1 %tobool94, label %if.end96, label %if.then95

if.then95:                                        ; preds = %if.end92
  br label %end

if.end96:                                         ; preds = %if.end92
  %32 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %call97 = call ptr @PyUnicode_AsUTF8AndSize(ptr noundef %32, ptr noundef null)
  store ptr %call97, ptr %name_cstr, align 8, !tbaa !5
  %tobool98 = icmp ne ptr %call97, null
  br i1 %tobool98, label %if.end100, label %if.then99

if.then99:                                        ; preds = %if.end96
  br label %end

if.end100:                                        ; preds = %if.end96
  %33 = load ptr, ptr %fn_cstr, align 8, !tbaa !5
  %34 = load ptr, ptr %name_cstr, align 8, !tbaa !5
  %35 = load i32, ptr %fline.addr, align 4, !tbaa !9
  %call101 = call ptr @PyCode_NewEmpty(ptr noundef %33, ptr noundef %34, i32 noundef %35)
  store ptr %call101, ptr %co, align 8, !tbaa !5
  %tobool102 = icmp ne ptr %call101, null
  br i1 %tobool102, label %if.end104, label %if.then103

if.then103:                                       ; preds = %if.end100
  br label %end

if.end104:                                        ; preds = %if.end100
  %36 = load ptr, ptr %co, align 8, !tbaa !5
  %call105 = call ptr @PyObject_GetAttrString(ptr noundef %36, ptr noundef @.str.80)
  store ptr %call105, ptr %replace, align 8, !tbaa !5
  %tobool106 = icmp ne ptr %call105, null
  br i1 %tobool106, label %if.end108, label %if.then107

if.then107:                                       ; preds = %if.end104
  br label %cleanup_code_too

if.end108:                                        ; preds = %if.end104
  %call109 = call ptr @PyTuple_New(i64 noundef 0)
  store ptr %call109, ptr %empty, align 8, !tbaa !5
  %tobool110 = icmp ne ptr %call109, null
  br i1 %tobool110, label %if.end112, label %if.then111

if.then111:                                       ; preds = %if.end108
  br label %cleanup_code_too

if.end112:                                        ; preds = %if.end108
  %37 = load ptr, ptr %replace, align 8, !tbaa !5
  %38 = load ptr, ptr %empty, align 8, !tbaa !5
  %39 = load ptr, ptr %kwds, align 8, !tbaa !5
  %call113 = call ptr @PyObject_Call(ptr noundef %37, ptr noundef %38, ptr noundef %39)
  store ptr %call113, ptr %call_result, align 8, !tbaa !5
  %tobool114 = icmp ne ptr %call113, null
  br i1 %tobool114, label %if.end116, label %if.then115

if.then115:                                       ; preds = %if.end112
  br label %cleanup_code_too

if.end116:                                        ; preds = %if.end112
  %40 = load ptr, ptr %co, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %40)
  %41 = load ptr, ptr %call_result, align 8, !tbaa !5
  store ptr %41, ptr %co, align 8, !tbaa !5
  store ptr null, ptr %call_result, align 8, !tbaa !5
  br i1 false, label %if.then117, label %if.end118

if.then117:                                       ; preds = %if.end116
  br label %cleanup_code_too

cleanup_code_too:                                 ; preds = %if.then117, %if.then115, %if.then111, %if.then107
  %42 = load ptr, ptr %co, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %42)
  store ptr null, ptr %co, align 8, !tbaa !5
  br label %if.end118

if.end118:                                        ; preds = %cleanup_code_too, %if.end116
  br label %end

end:                                              ; preds = %if.end118, %if.then103, %if.then99, %if.then95, %if.then91, %if.then86, %if.then81, %if.then76, %if.then71, %if.then66, %if.then61, %if.then56, %if.then51, %if.then46, %if.then41, %if.then36, %if.then31, %if.then26, %if.then21, %if.then16, %if.then11, %if.then7, %if.then3, %if.then
  %43 = load ptr, ptr %kwds, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %43)
  %44 = load ptr, ptr %argcount, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %44)
  %45 = load ptr, ptr %posonlyargcount, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %45)
  %46 = load ptr, ptr %kwonlyargcount, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %46)
  %47 = load ptr, ptr %nlocals, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %47)
  %48 = load ptr, ptr %stacksize, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %48)
  %49 = load ptr, ptr %replace, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %49)
  %50 = load ptr, ptr %call_result, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %50)
  %51 = load ptr, ptr %empty, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %51)
  %52 = load ptr, ptr %type, align 8, !tbaa !5
  %tobool119 = icmp ne ptr %52, null
  br i1 %tobool119, label %if.then120, label %if.end121

if.then120:                                       ; preds = %end
  %53 = load ptr, ptr %type, align 8, !tbaa !5
  %54 = load ptr, ptr %value, align 8, !tbaa !5
  %55 = load ptr, ptr %traceback, align 8, !tbaa !5
  call void @PyErr_Restore(ptr noundef %53, ptr noundef %54, ptr noundef %55)
  br label %if.end121

if.end121:                                        ; preds = %if.then120, %end
  %56 = load ptr, ptr %co, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %traceback) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %type) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %co) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %name_cstr) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %fn_cstr) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %call_result) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %replace) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %flags) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %stacksize) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %nlocals) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %kwonlyargcount) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %posonlyargcount) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %argcount) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %kwds) #13
  ret ptr %56
}

declare void @PyErr_Fetch(ptr noundef, ptr noundef, ptr noundef) #1

declare ptr @PyUnicode_AsUTF8AndSize(ptr noundef, ptr noundef) #1

declare ptr @PyCode_NewEmpty(ptr noundef, ptr noundef, i32 noundef) #1

declare ptr @PyObject_Call(ptr noundef, ptr noundef, ptr noundef) #1

declare void @PyErr_Restore(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_array_get_memview(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_flags = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_flags) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 157, ptr %__pyx_v_flags, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %1 = load i32, ptr %__pyx_v_flags, align 4, !tbaa !9
  %call = call ptr @__Pyx_PyInt_From_int(i32 noundef %1)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %3, ptr %__pyx_filename, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 229, ptr %__pyx_lineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7343, ptr %__pyx_clineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %dtype_is_object = getelementptr inbounds %struct.__pyx_array_obj, ptr %7, i32 0, i32 13
  %8 = load i32, ptr %dtype_is_object, align 4, !tbaa !110
  %conv4 = sext i32 %8 to i64
  %call5 = call ptr @__Pyx_PyBool_FromLong(i64 noundef %conv4)
  store ptr %call5, ptr %__pyx_t_2, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool6 = icmp ne ptr %9, null
  %lnot7 = xor i1 %tobool6, true
  %lnot9 = xor i1 %lnot7, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %10, ptr %__pyx_filename, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 229, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7345, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end17:                                         ; preds = %if.end
  %call18 = call ptr @PyTuple_New(i64 noundef 3)
  store ptr %call18, ptr %__pyx_t_3, align 8, !tbaa !5
  %14 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool19 = icmp ne ptr %14, null
  %lnot20 = xor i1 %tobool19, true
  %lnot22 = xor i1 %lnot20, true
  %lnot24 = xor i1 %lnot22, true
  %lnot.ext25 = zext i1 %lnot24 to i32
  %conv26 = sext i32 %lnot.ext25 to i64
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 0)
  %tobool28 = icmp ne i64 %expval27, 0
  br i1 %tobool28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end17
  %15 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %15, ptr %__pyx_filename, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 229, ptr %__pyx_lineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7347, ptr %__pyx_clineno, align 4, !tbaa !9
  %18 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end30:                                         ; preds = %if.end17
  %19 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %19)
  %20 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %21 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %20, i64 noundef 0, ptr noundef %21)
  %22 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %22, i64 noundef 1, ptr noundef %23)
  %24 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %24, i64 noundef 2, ptr noundef %25)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %26 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  %27 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call31 = call ptr @__Pyx_PyObject_Call(ptr noundef %26, ptr noundef %27, ptr noundef null)
  store ptr %call31, ptr %__pyx_t_2, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool32 = icmp ne ptr %28, null
  %lnot33 = xor i1 %tobool32, true
  %lnot35 = xor i1 %lnot33, true
  %lnot37 = xor i1 %lnot35, true
  %lnot.ext38 = zext i1 %lnot37 to i32
  %conv39 = sext i32 %lnot.ext38 to i64
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0)
  %tobool41 = icmp ne i64 %expval40, 0
  br i1 %tobool41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end30
  %29 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %29, ptr %__pyx_filename, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 229, ptr %__pyx_lineno, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7358, ptr %__pyx_clineno, align 4, !tbaa !9
  %32 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end43:                                         ; preds = %if.end30
  %33 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %33)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %34, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then42, %if.then29, %if.then16, %if.then
  %35 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %35)
  %36 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %36)
  %37 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %37)
  %38 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %39 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %40 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.81, i32 noundef %38, i32 noundef %39, ptr noundef %40)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end43
  %41 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_flags) #13
  ret ptr %41
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_SetVtable(ptr noundef %dict, ptr noundef %vtable) #0 {
entry:
  %retval = alloca i32, align 4
  %dict.addr = alloca ptr, align 8
  %vtable.addr = alloca ptr, align 8
  %ob = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %dict, ptr %dict.addr, align 8, !tbaa !5
  store ptr %vtable, ptr %vtable.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %ob) #13
  %0 = load ptr, ptr %vtable.addr, align 8, !tbaa !5
  %call = call ptr @PyCapsule_New(ptr noundef %0, ptr noundef null, ptr noundef null)
  store ptr %call, ptr %ob, align 8, !tbaa !5
  %1 = load ptr, ptr %ob, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %bad

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %dict.addr, align 8, !tbaa !5
  %3 = load ptr, ptr @__pyx_n_s_pyx_vtable, align 8, !tbaa !5
  %4 = load ptr, ptr %ob, align 8, !tbaa !5
  %call1 = call i32 @PyDict_SetItem(ptr noundef %2, ptr noundef %3, ptr noundef %4)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  br label %bad

if.end3:                                          ; preds = %if.end
  %5 = load ptr, ptr %ob, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %5)
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

bad:                                              ; preds = %if.then2, %if.then
  %6 = load ptr, ptr %ob, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %6)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %bad, %if.end3
  call void @llvm.lifetime.end.p0(i64 8, ptr %ob) #13
  %7 = load i32, ptr %retval, align 4
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_setup_reduce(ptr noundef %type_obj) #0 {
entry:
  %type_obj.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %object_reduce = alloca ptr, align 8
  %object_getstate = alloca ptr, align 8
  %object_reduce_ex = alloca ptr, align 8
  %reduce = alloca ptr, align 8
  %reduce_ex = alloca ptr, align 8
  %reduce_cython = alloca ptr, align 8
  %setstate = alloca ptr, align 8
  %setstate_cython = alloca ptr, align 8
  %getstate = alloca ptr, align 8
  store ptr %type_obj, ptr %type_obj.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #13
  store i32 0, ptr %ret, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %object_reduce) #13
  store ptr null, ptr %object_reduce, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %object_getstate) #13
  store ptr null, ptr %object_getstate, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %object_reduce_ex) #13
  store ptr null, ptr %object_reduce_ex, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %reduce) #13
  store ptr null, ptr %reduce, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %reduce_ex) #13
  store ptr null, ptr %reduce_ex, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %reduce_cython) #13
  store ptr null, ptr %reduce_cython, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %setstate) #13
  store ptr null, ptr %setstate, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %setstate_cython) #13
  store ptr null, ptr %setstate_cython, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %getstate) #13
  store ptr null, ptr %getstate, align 8, !tbaa !5
  %0 = load ptr, ptr %type_obj.addr, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_n_s_getstate, align 8, !tbaa !5
  %call = call ptr @_PyType_Lookup(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %getstate, align 8, !tbaa !5
  %2 = load ptr, ptr %getstate, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  br i1 %tobool, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @__pyx_n_s_getstate, align 8, !tbaa !5
  %call1 = call ptr @_PyType_Lookup(ptr noundef @PyBaseObject_Type, ptr noundef %3)
  store ptr %call1, ptr %object_getstate, align 8, !tbaa !5
  %4 = load ptr, ptr %object_getstate, align 8, !tbaa !5
  %5 = load ptr, ptr %getstate, align 8, !tbaa !5
  %cmp = icmp ne ptr %4, %5
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  br label %__PYX_GOOD

if.end:                                           ; preds = %if.then
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  %6 = load ptr, ptr @__pyx_n_s_reduce_ex, align 8, !tbaa !5
  %call4 = call ptr @_PyType_Lookup(ptr noundef @PyBaseObject_Type, ptr noundef %6)
  store ptr %call4, ptr %object_reduce_ex, align 8, !tbaa !5
  %7 = load ptr, ptr %object_reduce_ex, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %7, null
  br i1 %tobool5, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end3
  br label %__PYX_BAD

if.end7:                                          ; preds = %if.end3
  %8 = load ptr, ptr %type_obj.addr, align 8, !tbaa !5
  %9 = load ptr, ptr @__pyx_n_s_reduce_ex, align 8, !tbaa !5
  %call8 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %8, ptr noundef %9)
  store ptr %call8, ptr %reduce_ex, align 8, !tbaa !5
  %10 = load ptr, ptr %reduce_ex, align 8, !tbaa !5
  %tobool9 = icmp ne ptr %10, null
  %lnot = xor i1 %tobool9, true
  %lnot10 = xor i1 %lnot, true
  %lnot11 = xor i1 %lnot10, true
  %lnot.ext = zext i1 %lnot11 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool12 = icmp ne i64 %expval, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end7
  br label %__PYX_BAD

if.end14:                                         ; preds = %if.end7
  %11 = load ptr, ptr %reduce_ex, align 8, !tbaa !5
  %12 = load ptr, ptr %object_reduce_ex, align 8, !tbaa !5
  %cmp15 = icmp eq ptr %11, %12
  br i1 %cmp15, label %if.then17, label %if.end138

if.then17:                                        ; preds = %if.end14
  %13 = load ptr, ptr @__pyx_n_s_reduce, align 8, !tbaa !5
  %call18 = call ptr @_PyType_Lookup(ptr noundef @PyBaseObject_Type, ptr noundef %13)
  store ptr %call18, ptr %object_reduce, align 8, !tbaa !5
  %14 = load ptr, ptr %object_reduce, align 8, !tbaa !5
  %tobool19 = icmp ne ptr %14, null
  br i1 %tobool19, label %if.end21, label %if.then20

if.then20:                                        ; preds = %if.then17
  br label %__PYX_BAD

if.end21:                                         ; preds = %if.then17
  %15 = load ptr, ptr %type_obj.addr, align 8, !tbaa !5
  %16 = load ptr, ptr @__pyx_n_s_reduce, align 8, !tbaa !5
  %call22 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %15, ptr noundef %16)
  store ptr %call22, ptr %reduce, align 8, !tbaa !5
  %17 = load ptr, ptr %reduce, align 8, !tbaa !5
  %tobool23 = icmp ne ptr %17, null
  %lnot24 = xor i1 %tobool23, true
  %lnot26 = xor i1 %lnot24, true
  %lnot28 = xor i1 %lnot26, true
  %lnot.ext29 = zext i1 %lnot28 to i32
  %conv30 = sext i32 %lnot.ext29 to i64
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 0)
  %tobool32 = icmp ne i64 %expval31, 0
  br i1 %tobool32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.end21
  br label %__PYX_BAD

if.end34:                                         ; preds = %if.end21
  %18 = load ptr, ptr %reduce, align 8, !tbaa !5
  %19 = load ptr, ptr %object_reduce, align 8, !tbaa !5
  %cmp35 = icmp eq ptr %18, %19
  br i1 %cmp35, label %if.then39, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end34
  %20 = load ptr, ptr %reduce, align 8, !tbaa !5
  %21 = load ptr, ptr @__pyx_n_s_reduce_cython, align 8, !tbaa !5
  %call37 = call i32 @__Pyx_setup_reduce_is_named(ptr noundef %20, ptr noundef %21)
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.then39, label %if.end137

if.then39:                                        ; preds = %lor.lhs.false, %if.end34
  %22 = load ptr, ptr %type_obj.addr, align 8, !tbaa !5
  %23 = load ptr, ptr @__pyx_n_s_reduce_cython, align 8, !tbaa !5
  %call40 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %22, ptr noundef %23)
  store ptr %call40, ptr %reduce_cython, align 8, !tbaa !5
  %24 = load ptr, ptr %reduce_cython, align 8, !tbaa !5
  %tobool41 = icmp ne ptr %24, null
  %lnot42 = xor i1 %tobool41, true
  %lnot44 = xor i1 %lnot42, true
  %lnot.ext45 = zext i1 %lnot44 to i32
  %conv46 = sext i32 %lnot.ext45 to i64
  %expval47 = call i64 @llvm.expect.i64(i64 %conv46, i64 1)
  %tobool48 = icmp ne i64 %expval47, 0
  br i1 %tobool48, label %if.then49, label %if.else

if.then49:                                        ; preds = %if.then39
  %25 = load ptr, ptr %type_obj.addr, align 8, !tbaa !5
  %tp_dict = getelementptr inbounds %struct._typeobject, ptr %25, i32 0, i32 31
  %26 = load ptr, ptr %tp_dict, align 8, !tbaa !17
  %27 = load ptr, ptr @__pyx_n_s_reduce, align 8, !tbaa !5
  %28 = load ptr, ptr %reduce_cython, align 8, !tbaa !5
  %call50 = call i32 @PyDict_SetItem(ptr noundef %26, ptr noundef %27, ptr noundef %28)
  store i32 %call50, ptr %ret, align 4, !tbaa !9
  %29 = load i32, ptr %ret, align 4, !tbaa !9
  %cmp51 = icmp slt i32 %29, 0
  %lnot53 = xor i1 %cmp51, true
  %lnot55 = xor i1 %lnot53, true
  %lnot.ext56 = zext i1 %lnot55 to i32
  %conv57 = sext i32 %lnot.ext56 to i64
  %expval58 = call i64 @llvm.expect.i64(i64 %conv57, i64 0)
  %tobool59 = icmp ne i64 %expval58, 0
  br i1 %tobool59, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.then49
  br label %__PYX_BAD

if.end61:                                         ; preds = %if.then49
  %30 = load ptr, ptr %type_obj.addr, align 8, !tbaa !5
  %tp_dict62 = getelementptr inbounds %struct._typeobject, ptr %30, i32 0, i32 31
  %31 = load ptr, ptr %tp_dict62, align 8, !tbaa !17
  %32 = load ptr, ptr @__pyx_n_s_reduce_cython, align 8, !tbaa !5
  %call63 = call i32 @PyDict_DelItem(ptr noundef %31, ptr noundef %32)
  store i32 %call63, ptr %ret, align 4, !tbaa !9
  %33 = load i32, ptr %ret, align 4, !tbaa !9
  %cmp64 = icmp slt i32 %33, 0
  %lnot66 = xor i1 %cmp64, true
  %lnot68 = xor i1 %lnot66, true
  %lnot.ext69 = zext i1 %lnot68 to i32
  %conv70 = sext i32 %lnot.ext69 to i64
  %expval71 = call i64 @llvm.expect.i64(i64 %conv70, i64 0)
  %tobool72 = icmp ne i64 %expval71, 0
  br i1 %tobool72, label %if.then73, label %if.end74

if.then73:                                        ; preds = %if.end61
  br label %__PYX_BAD

if.end74:                                         ; preds = %if.end61
  br label %if.end82

if.else:                                          ; preds = %if.then39
  %34 = load ptr, ptr %reduce, align 8, !tbaa !5
  %35 = load ptr, ptr %object_reduce, align 8, !tbaa !5
  %cmp75 = icmp eq ptr %34, %35
  br i1 %cmp75, label %if.then80, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %if.else
  %call78 = call ptr @PyErr_Occurred()
  %tobool79 = icmp ne ptr %call78, null
  br i1 %tobool79, label %if.then80, label %if.end81

if.then80:                                        ; preds = %lor.lhs.false77, %if.else
  br label %__PYX_BAD

if.end81:                                         ; preds = %lor.lhs.false77
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.end74
  %36 = load ptr, ptr %type_obj.addr, align 8, !tbaa !5
  %37 = load ptr, ptr @__pyx_n_s_setstate, align 8, !tbaa !5
  %call83 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %36, ptr noundef %37)
  store ptr %call83, ptr %setstate, align 8, !tbaa !5
  %38 = load ptr, ptr %setstate, align 8, !tbaa !5
  %tobool84 = icmp ne ptr %38, null
  br i1 %tobool84, label %if.end86, label %if.then85

if.then85:                                        ; preds = %if.end82
  call void @PyErr_Clear()
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %if.end82
  %39 = load ptr, ptr %setstate, align 8, !tbaa !5
  %tobool87 = icmp ne ptr %39, null
  br i1 %tobool87, label %lor.lhs.false88, label %if.then91

lor.lhs.false88:                                  ; preds = %if.end86
  %40 = load ptr, ptr %setstate, align 8, !tbaa !5
  %41 = load ptr, ptr @__pyx_n_s_setstate_cython, align 8, !tbaa !5
  %call89 = call i32 @__Pyx_setup_reduce_is_named(ptr noundef %40, ptr noundef %41)
  %tobool90 = icmp ne i32 %call89, 0
  br i1 %tobool90, label %if.then91, label %if.end136

if.then91:                                        ; preds = %lor.lhs.false88, %if.end86
  %42 = load ptr, ptr %type_obj.addr, align 8, !tbaa !5
  %43 = load ptr, ptr @__pyx_n_s_setstate_cython, align 8, !tbaa !5
  %call92 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %42, ptr noundef %43)
  store ptr %call92, ptr %setstate_cython, align 8, !tbaa !5
  %44 = load ptr, ptr %setstate_cython, align 8, !tbaa !5
  %tobool93 = icmp ne ptr %44, null
  %lnot94 = xor i1 %tobool93, true
  %lnot96 = xor i1 %lnot94, true
  %lnot.ext97 = zext i1 %lnot96 to i32
  %conv98 = sext i32 %lnot.ext97 to i64
  %expval99 = call i64 @llvm.expect.i64(i64 %conv98, i64 1)
  %tobool100 = icmp ne i64 %expval99, 0
  br i1 %tobool100, label %if.then101, label %if.else128

if.then101:                                       ; preds = %if.then91
  %45 = load ptr, ptr %type_obj.addr, align 8, !tbaa !5
  %tp_dict102 = getelementptr inbounds %struct._typeobject, ptr %45, i32 0, i32 31
  %46 = load ptr, ptr %tp_dict102, align 8, !tbaa !17
  %47 = load ptr, ptr @__pyx_n_s_setstate, align 8, !tbaa !5
  %48 = load ptr, ptr %setstate_cython, align 8, !tbaa !5
  %call103 = call i32 @PyDict_SetItem(ptr noundef %46, ptr noundef %47, ptr noundef %48)
  store i32 %call103, ptr %ret, align 4, !tbaa !9
  %49 = load i32, ptr %ret, align 4, !tbaa !9
  %cmp104 = icmp slt i32 %49, 0
  %lnot106 = xor i1 %cmp104, true
  %lnot108 = xor i1 %lnot106, true
  %lnot.ext109 = zext i1 %lnot108 to i32
  %conv110 = sext i32 %lnot.ext109 to i64
  %expval111 = call i64 @llvm.expect.i64(i64 %conv110, i64 0)
  %tobool112 = icmp ne i64 %expval111, 0
  br i1 %tobool112, label %if.then113, label %if.end114

if.then113:                                       ; preds = %if.then101
  br label %__PYX_BAD

if.end114:                                        ; preds = %if.then101
  %50 = load ptr, ptr %type_obj.addr, align 8, !tbaa !5
  %tp_dict115 = getelementptr inbounds %struct._typeobject, ptr %50, i32 0, i32 31
  %51 = load ptr, ptr %tp_dict115, align 8, !tbaa !17
  %52 = load ptr, ptr @__pyx_n_s_setstate_cython, align 8, !tbaa !5
  %call116 = call i32 @PyDict_DelItem(ptr noundef %51, ptr noundef %52)
  store i32 %call116, ptr %ret, align 4, !tbaa !9
  %53 = load i32, ptr %ret, align 4, !tbaa !9
  %cmp117 = icmp slt i32 %53, 0
  %lnot119 = xor i1 %cmp117, true
  %lnot121 = xor i1 %lnot119, true
  %lnot.ext122 = zext i1 %lnot121 to i32
  %conv123 = sext i32 %lnot.ext122 to i64
  %expval124 = call i64 @llvm.expect.i64(i64 %conv123, i64 0)
  %tobool125 = icmp ne i64 %expval124, 0
  br i1 %tobool125, label %if.then126, label %if.end127

if.then126:                                       ; preds = %if.end114
  br label %__PYX_BAD

if.end127:                                        ; preds = %if.end114
  br label %if.end135

if.else128:                                       ; preds = %if.then91
  %54 = load ptr, ptr %setstate, align 8, !tbaa !5
  %tobool129 = icmp ne ptr %54, null
  br i1 %tobool129, label %lor.lhs.false130, label %if.then133

lor.lhs.false130:                                 ; preds = %if.else128
  %call131 = call ptr @PyErr_Occurred()
  %tobool132 = icmp ne ptr %call131, null
  br i1 %tobool132, label %if.then133, label %if.end134

if.then133:                                       ; preds = %lor.lhs.false130, %if.else128
  br label %__PYX_BAD

if.end134:                                        ; preds = %lor.lhs.false130
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.end127
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %lor.lhs.false88
  %55 = load ptr, ptr %type_obj.addr, align 8, !tbaa !5
  call void @PyType_Modified(ptr noundef %55)
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %lor.lhs.false
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end14
  br label %__PYX_GOOD

__PYX_BAD:                                        ; preds = %if.then133, %if.then126, %if.then113, %if.then80, %if.then73, %if.then60, %if.then33, %if.then20, %if.then13, %if.then6
  %call139 = call ptr @PyErr_Occurred()
  %tobool140 = icmp ne ptr %call139, null
  br i1 %tobool140, label %if.end143, label %if.then141

if.then141:                                       ; preds = %__PYX_BAD
  %56 = load ptr, ptr @PyExc_RuntimeError, align 8, !tbaa !5
  %57 = load ptr, ptr %type_obj.addr, align 8, !tbaa !5
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %57, i32 0, i32 1
  %58 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %call142 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %56, ptr noundef @.str.124, ptr noundef %58)
  br label %if.end143

if.end143:                                        ; preds = %if.then141, %__PYX_BAD
  store i32 -1, ptr %ret, align 4, !tbaa !9
  br label %__PYX_GOOD

__PYX_GOOD:                                       ; preds = %if.end143, %if.end138, %if.then2
  %59 = load ptr, ptr %reduce, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %59)
  %60 = load ptr, ptr %reduce_ex, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %60)
  %61 = load ptr, ptr %reduce_cython, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %61)
  %62 = load ptr, ptr %setstate, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %62)
  %63 = load ptr, ptr %setstate_cython, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %63)
  %64 = load i32, ptr %ret, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 8, ptr %getstate) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %setstate_cython) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %setstate) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %reduce_cython) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %reduce_ex) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %reduce) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %object_reduce_ex) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %object_getstate) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %object_reduce) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #13
  ret i32 %64
}

declare ptr @PyObject_GenericGetAttr(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_get_item_pointer(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_index) #0 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_index.addr = alloca ptr, align 8
  %__pyx_v_dim = alloca i64, align 8
  %__pyx_v_itemp = alloca ptr, align 8
  %__pyx_v_idx = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i64, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca i64, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca i64, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %exc_type = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_index, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_dim) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_itemp) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_idx) #13
  store ptr null, ptr %__pyx_v_idx, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 8
  %buf = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 0
  %1 = load ptr, ptr %buf, align 8, !tbaa !112
  store ptr %1, ptr %__pyx_v_itemp, align 8, !tbaa !5
  store i64 0, ptr %__pyx_t_1, align 8, !tbaa !27
  %2 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %call = call i32 @Py_IS_TYPE(ptr noundef %2, ptr noundef @PyList_Type)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %call3 = call i32 @Py_IS_TYPE(ptr noundef %3, ptr noundef @PyTuple_Type)
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  store ptr %4, ptr %__pyx_t_2, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %5)
  store i64 0, ptr %__pyx_t_3, align 8, !tbaa !27
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %if.end30

if.else:                                          ; preds = %lor.lhs.false
  store i64 -1, ptr %__pyx_t_3, align 8, !tbaa !27
  %6 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %call5 = call ptr @PyObject_GetIter(ptr noundef %6)
  store ptr %call5, ptr %__pyx_t_2, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool6 = icmp ne ptr %7, null
  %lnot7 = xor i1 %tobool6, true
  %lnot9 = xor i1 %lnot7, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %if.then16, label %if.end

if.then16:                                        ; preds = %if.else
  %8 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %8, ptr %__pyx_filename, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 399, ptr %__pyx_lineno, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9120, ptr %__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %if.else
  %12 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call17 = call ptr @Py_TYPE(ptr noundef %12)
  %tp_iternext = getelementptr inbounds %struct._typeobject, ptr %call17, i32 0, i32 26
  %13 = load ptr, ptr %tp_iternext, align 8, !tbaa !115
  store ptr %13, ptr %__pyx_t_4, align 8, !tbaa !5
  %14 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %14, null
  %lnot19 = xor i1 %tobool18, true
  %lnot21 = xor i1 %lnot19, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end
  %15 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %15, ptr %__pyx_filename, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 399, ptr %__pyx_lineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9122, ptr %__pyx_clineno, align 4, !tbaa !9
  %18 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end29:                                         ; preds = %if.end
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then
  br label %for.cond

for.cond:                                         ; preds = %if.end123, %if.end30
  %19 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool31 = icmp ne ptr %19, null
  %lnot32 = xor i1 %tobool31, true
  %lnot34 = xor i1 %lnot32, true
  %lnot36 = xor i1 %lnot34, true
  %lnot.ext37 = zext i1 %lnot36 to i32
  %conv38 = sext i32 %lnot.ext37 to i64
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 1)
  %tobool40 = icmp ne i64 %expval39, 0
  br i1 %tobool40, label %if.then41, label %if.else66

if.then41:                                        ; preds = %for.cond
  %20 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call42 = call i32 @Py_IS_TYPE(ptr noundef %20, ptr noundef @PyList_Type)
  %tobool43 = icmp ne i32 %call42, 0
  %lnot44 = xor i1 %tobool43, true
  %lnot46 = xor i1 %lnot44, true
  %lnot.ext47 = zext i1 %lnot46 to i32
  %conv48 = sext i32 %lnot.ext47 to i64
  %expval49 = call i64 @llvm.expect.i64(i64 %conv48, i64 1)
  %tobool50 = icmp ne i64 %expval49, 0
  br i1 %tobool50, label %if.then51, label %if.else56

if.then51:                                        ; preds = %if.then41
  %21 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  %22 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call52 = call i64 @PyList_GET_SIZE(ptr noundef %22)
  %cmp = icmp sge i64 %21, %call52
  br i1 %cmp, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.then51
  br label %for.end

if.end55:                                         ; preds = %if.then51
  %23 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyListObject, ptr %23, i32 0, i32 1
  %24 = load ptr, ptr %ob_item, align 8, !tbaa !116
  %25 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  %arrayidx = getelementptr ptr, ptr %24, i64 %25
  %26 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %26, ptr %__pyx_t_5, align 8, !tbaa !5
  %27 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %27)
  %28 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  %inc = add i64 %28, 1
  store i64 %inc, ptr %__pyx_t_3, align 8, !tbaa !27
  br label %if.end65

if.else56:                                        ; preds = %if.then41
  %29 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  %30 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call57 = call i64 @PyTuple_GET_SIZE(ptr noundef %30)
  %cmp58 = icmp sge i64 %29, %call57
  br i1 %cmp58, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.else56
  br label %for.end

if.end61:                                         ; preds = %if.else56
  %31 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %ob_item62 = getelementptr inbounds %struct.PyTupleObject, ptr %31, i32 0, i32 1
  %32 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  %arrayidx63 = getelementptr [1 x ptr], ptr %ob_item62, i64 0, i64 %32
  %33 = load ptr, ptr %arrayidx63, align 8, !tbaa !5
  store ptr %33, ptr %__pyx_t_5, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %34)
  %35 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  %inc64 = add i64 %35, 1
  store i64 %inc64, ptr %__pyx_t_3, align 8, !tbaa !27
  br label %if.end65

if.end65:                                         ; preds = %if.end61, %if.end55
  br label %if.end96

if.else66:                                        ; preds = %for.cond
  %36 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %37 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call67 = call ptr %36(ptr noundef %37)
  store ptr %call67, ptr %__pyx_t_5, align 8, !tbaa !5
  %38 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool68 = icmp ne ptr %38, null
  %lnot69 = xor i1 %tobool68, true
  %lnot71 = xor i1 %lnot69, true
  %lnot73 = xor i1 %lnot71, true
  %lnot.ext74 = zext i1 %lnot73 to i32
  %conv75 = sext i32 %lnot.ext74 to i64
  %expval76 = call i64 @llvm.expect.i64(i64 %conv75, i64 0)
  %tobool77 = icmp ne i64 %expval76, 0
  br i1 %tobool77, label %if.then78, label %if.end95

if.then78:                                        ; preds = %if.else66
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_type) #13
  %call79 = call ptr @PyErr_Occurred()
  store ptr %call79, ptr %exc_type, align 8, !tbaa !5
  %39 = load ptr, ptr %exc_type, align 8, !tbaa !5
  %tobool80 = icmp ne ptr %39, null
  br i1 %tobool80, label %if.then81, label %if.end94

if.then81:                                        ; preds = %if.then78
  %40 = load ptr, ptr %exc_type, align 8, !tbaa !5
  %41 = load ptr, ptr @PyExc_StopIteration, align 8, !tbaa !5
  %call82 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %40, ptr noundef %41)
  %tobool83 = icmp ne i32 %call82, 0
  %lnot84 = xor i1 %tobool83, true
  %lnot86 = xor i1 %lnot84, true
  %lnot.ext87 = zext i1 %lnot86 to i32
  %conv88 = sext i32 %lnot.ext87 to i64
  %expval89 = call i64 @llvm.expect.i64(i64 %conv88, i64 1)
  %tobool90 = icmp ne i64 %expval89, 0
  br i1 %tobool90, label %if.then91, label %if.else92

if.then91:                                        ; preds = %if.then81
  call void @PyErr_Clear()
  br label %if.end93

if.else92:                                        ; preds = %if.then81
  %42 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %42, ptr %__pyx_filename, align 8, !tbaa !5
  %43 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 399, ptr %__pyx_lineno, align 4, !tbaa !9
  %44 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9149, ptr %__pyx_clineno, align 4, !tbaa !9
  %45 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end93:                                         ; preds = %if.then91
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then78
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else92, %if.end94
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_type) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup124 [
    i32 3, label %for.end
    i32 2, label %__pyx_L1_error
  ]

if.end95:                                         ; preds = %if.else66
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.end65
  br label %do.body

do.body:                                          ; preds = %if.end96
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %46 = load ptr, ptr %__pyx_v_idx, align 8, !tbaa !5
  store ptr %46, ptr %tmp, align 8, !tbaa !5
  %47 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr %47, ptr %__pyx_v_idx, align 8, !tbaa !5
  %48 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %48)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %49 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  store i64 %49, ptr %__pyx_v_dim, align 8, !tbaa !27
  %50 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  %add = add i64 %50, 1
  store i64 %add, ptr %__pyx_t_1, align 8, !tbaa !27
  %51 = load ptr, ptr %__pyx_v_idx, align 8, !tbaa !5
  %call97 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %51)
  store i64 %call97, ptr %__pyx_t_6, align 8, !tbaa !27
  %52 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %cmp98 = icmp eq i64 %52, -1
  br i1 %cmp98, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %do.end
  %call100 = call ptr @PyErr_Occurred()
  %tobool101 = icmp ne ptr %call100, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.end
  %53 = phi i1 [ false, %do.end ], [ %tobool101, %land.rhs ]
  %lnot102 = xor i1 %53, true
  %lnot104 = xor i1 %lnot102, true
  %lnot.ext105 = zext i1 %lnot104 to i32
  %conv106 = sext i32 %lnot.ext105 to i64
  %expval107 = call i64 @llvm.expect.i64(i64 %conv106, i64 0)
  %tobool108 = icmp ne i64 %expval107, 0
  br i1 %tobool108, label %if.then109, label %if.end110

if.then109:                                       ; preds = %land.end
  %54 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %54, ptr %__pyx_filename, align 8, !tbaa !5
  %55 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 400, ptr %__pyx_lineno, align 4, !tbaa !9
  %56 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9167, ptr %__pyx_clineno, align 4, !tbaa !9
  %57 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end110:                                        ; preds = %land.end
  %58 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view111 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %58, i32 0, i32 8
  %59 = load ptr, ptr %__pyx_v_itemp, align 8, !tbaa !5
  %60 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %61 = load i64, ptr %__pyx_v_dim, align 8, !tbaa !27
  %call112 = call ptr @__pyx_pybuffer_index(ptr noundef %view111, ptr noundef %59, i64 noundef %60, i64 noundef %61)
  store ptr %call112, ptr %__pyx_t_7, align 8, !tbaa !5
  %62 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %cmp113 = icmp eq ptr %62, null
  %lnot115 = xor i1 %cmp113, true
  %lnot117 = xor i1 %lnot115, true
  %lnot.ext118 = zext i1 %lnot117 to i32
  %conv119 = sext i32 %lnot.ext118 to i64
  %expval120 = call i64 @llvm.expect.i64(i64 %conv119, i64 0)
  %tobool121 = icmp ne i64 %expval120, 0
  br i1 %tobool121, label %if.then122, label %if.end123

if.then122:                                       ; preds = %if.end110
  %63 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %63, ptr %__pyx_filename, align 8, !tbaa !5
  %64 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 400, ptr %__pyx_lineno, align 4, !tbaa !9
  %65 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9168, ptr %__pyx_clineno, align 4, !tbaa !9
  %66 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end123:                                        ; preds = %if.end110
  %67 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  store ptr %67, ptr %__pyx_v_itemp, align 8, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %cleanup, %if.then60, %if.then54
  %68 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %68)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %69 = load ptr, ptr %__pyx_v_itemp, align 8, !tbaa !5
  store ptr %69, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %cleanup, %if.then122, %if.then109, %if.then28, %if.then16
  %70 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %70)
  %71 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %71)
  %72 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %73 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %74 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.136, i32 noundef %72, i32 noundef %73, ptr noundef %74)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %for.end
  %75 = load ptr, ptr %__pyx_v_idx, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %75)
  %76 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  store ptr %76, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup124

cleanup124:                                       ; preds = %__pyx_L0, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_idx) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_itemp) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_dim) #13
  %77 = load ptr, ptr %retval, align 8
  ret ptr %77
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_is_slice(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_obj) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_obj.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_t_9 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_obj, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #13
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %1)
  %2 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  %call1 = call i32 @__Pyx_IsSubtype(ptr noundef %call, ptr noundef %2)
  store i32 %call1, ptr %__pyx_t_1, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp = icmp ne i32 %3, 0
  %lnot = xor i1 %cmp, true
  %lnot.ext = zext i1 %lnot to i32
  %cmp2 = icmp ne i32 %lnot.ext, 0
  %conv = zext i1 %cmp2 to i32
  store i32 %conv, ptr %__pyx_t_2, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end63

if.then:                                          ; preds = %entry
  call void @PyErr_GetExcInfo(ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_4, ptr noundef %__pyx_t_5)
  %5 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %flags = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %5, i32 0, i32 9
  %6 = load i32, ptr %flags, align 8, !tbaa !118
  %and = and i32 %6, -2
  %or = or i32 %and, 152
  %call3 = call ptr @__Pyx_PyInt_From_int(i32 noundef %or)
  store ptr %call3, ptr %__pyx_t_6, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %7, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool12 = icmp ne i64 %expval, 0
  br i1 %tobool12, label %if.then13, label %if.end

if.then13:                                        ; preds = %if.then
  %8 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %8, ptr %__pyx_filename, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 436, ptr %__pyx_lineno, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9688, ptr %__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L4_error

if.end:                                           ; preds = %if.then
  %12 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %dtype_is_object = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %12, i32 0, i32 10
  %13 = load i32, ptr %dtype_is_object, align 4, !tbaa !119
  %conv14 = sext i32 %13 to i64
  %call15 = call ptr @__Pyx_PyBool_FromLong(i64 noundef %conv14)
  store ptr %call15, ptr %__pyx_t_7, align 8, !tbaa !5
  %14 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %tobool16 = icmp ne ptr %14, null
  %lnot17 = xor i1 %tobool16, true
  %lnot19 = xor i1 %lnot17, true
  %lnot21 = xor i1 %lnot19, true
  %lnot.ext22 = zext i1 %lnot21 to i32
  %conv23 = sext i32 %lnot.ext22 to i64
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0)
  %tobool25 = icmp ne i64 %expval24, 0
  br i1 %tobool25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end
  %15 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %15, ptr %__pyx_filename, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 437, ptr %__pyx_lineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9698, ptr %__pyx_clineno, align 4, !tbaa !9
  %18 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L4_error

if.end27:                                         ; preds = %if.end
  %call28 = call ptr @PyTuple_New(i64 noundef 3)
  store ptr %call28, ptr %__pyx_t_8, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %tobool29 = icmp ne ptr %19, null
  %lnot30 = xor i1 %tobool29, true
  %lnot32 = xor i1 %lnot30, true
  %lnot34 = xor i1 %lnot32, true
  %lnot.ext35 = zext i1 %lnot34 to i32
  %conv36 = sext i32 %lnot.ext35 to i64
  %expval37 = call i64 @llvm.expect.i64(i64 %conv36, i64 0)
  %tobool38 = icmp ne i64 %expval37, 0
  br i1 %tobool38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.end27
  %20 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %20, ptr %__pyx_filename, align 8, !tbaa !5
  %21 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 436, ptr %__pyx_lineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9708, ptr %__pyx_clineno, align 4, !tbaa !9
  %23 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L4_error

if.end40:                                         ; preds = %if.end27
  %24 = load ptr, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %24)
  %25 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %26 = load ptr, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %25, i64 noundef 0, ptr noundef %26)
  %27 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %27, i64 noundef 1, ptr noundef %28)
  %29 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %29, i64 noundef 2, ptr noundef %30)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  %31 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %call41 = call ptr @__Pyx_PyObject_Call(ptr noundef %31, ptr noundef %32, ptr noundef null)
  store ptr %call41, ptr %__pyx_t_7, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %tobool42 = icmp ne ptr %33, null
  %lnot43 = xor i1 %tobool42, true
  %lnot45 = xor i1 %lnot43, true
  %lnot47 = xor i1 %lnot45, true
  %lnot.ext48 = zext i1 %lnot47 to i32
  %conv49 = sext i32 %lnot.ext48 to i64
  %expval50 = call i64 @llvm.expect.i64(i64 %conv49, i64 0)
  %tobool51 = icmp ne i64 %expval50, 0
  br i1 %tobool51, label %if.then52, label %if.end53

if.then52:                                        ; preds = %if.end40
  %34 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %34, ptr %__pyx_filename, align 8, !tbaa !5
  %35 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 436, ptr %__pyx_lineno, align 4, !tbaa !9
  %36 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9719, ptr %__pyx_clineno, align 4, !tbaa !9
  %37 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L4_error

if.end53:                                         ; preds = %if.end40
  %38 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %38)
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %if.end53
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %39 = load ptr, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  store ptr %39, ptr %tmp, align 8, !tbaa !5
  %40 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  store ptr %40, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  %41 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %41)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %42)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %43 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %43)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %44 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %44)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  br label %__pyx_L9_try_end

__pyx_L4_error:                                   ; preds = %if.then52, %if.then39, %if.then26, %if.then13
  %45 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %45)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %46 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %46)
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  %47 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %47)
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  %48 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %call54 = call i32 @PyErr_ExceptionMatches(ptr noundef %48)
  store i32 %call54, ptr %__pyx_t_9, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_t_9, align 4, !tbaa !9
  %tobool55 = icmp ne i32 %49, 0
  br i1 %tobool55, label %if.then56, label %if.end62

if.then56:                                        ; preds = %__pyx_L4_error
  %50 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %51 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %52 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.138, i32 noundef %50, i32 noundef %51, ptr noundef %52)
  %call57 = call i32 @__Pyx_GetException(ptr noundef %__pyx_t_7, ptr noundef %__pyx_t_8, ptr noundef %__pyx_t_6)
  %cmp58 = icmp slt i32 %call57, 0
  br i1 %cmp58, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.then56
  %53 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %53, ptr %__pyx_filename, align 8, !tbaa !5
  %54 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 438, ptr %__pyx_lineno, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9752, ptr %__pyx_clineno, align 4, !tbaa !9
  %56 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L6_except_error

if.end61:                                         ; preds = %if.then56
  %57 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %57)
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %58 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %58)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %59 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %59)
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  %60 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %60)
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  br label %__pyx_L7_except_return

if.end62:                                         ; preds = %__pyx_L4_error
  br label %__pyx_L6_except_error

__pyx_L6_except_error:                            ; preds = %if.end62, %if.then60
  %61 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %62 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %63 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @PyErr_SetExcInfo(ptr noundef %61, ptr noundef %62, ptr noundef %63)
  br label %__pyx_L1_error

__pyx_L7_except_return:                           ; preds = %if.end61
  %64 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %65 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %66 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @PyErr_SetExcInfo(ptr noundef %64, ptr noundef %65, ptr noundef %66)
  br label %__pyx_L0

__pyx_L9_try_end:                                 ; preds = %do.end
  br label %if.end63

if.end63:                                         ; preds = %__pyx_L9_try_end, %entry
  %67 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %67)
  %68 = load ptr, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %68)
  %69 = load ptr, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  store ptr %69, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %__pyx_L6_except_error
  %70 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %70)
  %71 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %71)
  %72 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %72)
  %73 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %74 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %75 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.138, i32 noundef %73, i32 noundef %74, ptr noundef %75)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end63, %__pyx_L7_except_return
  %76 = load ptr, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %76)
  %77 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %77
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_setitem_slice_assignment(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_dst, ptr noundef %__pyx_v_src) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_dst.addr = alloca ptr, align 8
  %__pyx_v_src.addr = alloca ptr, align 8
  %__pyx_v_dst_slice = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_src_slice = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_dst, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  store ptr %__pyx_v_src, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_dst_slice) #13
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_src_slice) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %1 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %2 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  %call = call i32 @__Pyx_TypeTest(ptr noundef %1, ptr noundef %2)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %lnot3 = xor i1 %3, true
  %lnot5 = xor i1 %lnot3, true
  %lnot.ext6 = zext i1 %lnot5 to i32
  %conv7 = sext i32 %lnot.ext6 to i64
  %expval8 = call i64 @llvm.expect.i64(i64 %conv7, i64 1)
  %tobool9 = icmp ne i64 %expval8, 0
  br i1 %tobool9, label %if.end, label %if.then

if.then:                                          ; preds = %lor.end
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 447, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9869, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %lor.end
  %8 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %call10 = call ptr @__pyx_memoryview_get_slice_from_memoryview(ptr noundef %8, ptr noundef %__pyx_v_src_slice)
  store ptr %call10, ptr %__pyx_t_1, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %cmp11 = icmp eq ptr %9, null
  %lnot13 = xor i1 %cmp11, true
  %lnot15 = xor i1 %lnot13, true
  %lnot.ext16 = zext i1 %lnot15 to i32
  %conv17 = sext i32 %lnot.ext16 to i64
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 0)
  %tobool19 = icmp ne i64 %expval18, 0
  br i1 %tobool19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %10, ptr %__pyx_filename, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 447, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9870, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end21:                                         ; preds = %if.end
  %14 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %cmp22 = icmp eq ptr %14, @_Py_NoneStruct
  br i1 %cmp22, label %lor.end34, label %lor.rhs24

lor.rhs24:                                        ; preds = %if.end21
  %15 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %16 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  %call25 = call i32 @__Pyx_TypeTest(ptr noundef %15, ptr noundef %16)
  %tobool26 = icmp ne i32 %call25, 0
  %lnot27 = xor i1 %tobool26, true
  %lnot29 = xor i1 %lnot27, true
  %lnot.ext30 = zext i1 %lnot29 to i32
  %conv31 = sext i32 %lnot.ext30 to i64
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 1)
  %tobool33 = icmp ne i64 %expval32, 0
  br label %lor.end34

lor.end34:                                        ; preds = %lor.rhs24, %if.end21
  %17 = phi i1 [ true, %if.end21 ], [ %tobool33, %lor.rhs24 ]
  %lnot35 = xor i1 %17, true
  %lnot37 = xor i1 %lnot35, true
  %lnot.ext38 = zext i1 %lnot37 to i32
  %conv39 = sext i32 %lnot.ext38 to i64
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 1)
  %tobool41 = icmp ne i64 %expval40, 0
  br i1 %tobool41, label %if.end43, label %if.then42

if.then42:                                        ; preds = %lor.end34
  %18 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %18, ptr %__pyx_filename, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 448, ptr %__pyx_lineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9879, ptr %__pyx_clineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end43:                                         ; preds = %lor.end34
  %22 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %call44 = call ptr @__pyx_memoryview_get_slice_from_memoryview(ptr noundef %22, ptr noundef %__pyx_v_dst_slice)
  store ptr %call44, ptr %__pyx_t_2, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %cmp45 = icmp eq ptr %23, null
  %lnot47 = xor i1 %cmp45, true
  %lnot49 = xor i1 %lnot47, true
  %lnot.ext50 = zext i1 %lnot49 to i32
  %conv51 = sext i32 %lnot.ext50 to i64
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 0)
  %tobool53 = icmp ne i64 %expval52, 0
  br i1 %tobool53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end43
  %24 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %24, ptr %__pyx_filename, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 448, ptr %__pyx_lineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9880, ptr %__pyx_clineno, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end55:                                         ; preds = %if.end43
  %28 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %29 = load ptr, ptr @__pyx_n_s_ndim, align 8, !tbaa !5
  %call56 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %28, ptr noundef %29)
  store ptr %call56, ptr %__pyx_t_3, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool57 = icmp ne ptr %30, null
  %lnot58 = xor i1 %tobool57, true
  %lnot60 = xor i1 %lnot58, true
  %lnot62 = xor i1 %lnot60, true
  %lnot.ext63 = zext i1 %lnot62 to i32
  %conv64 = sext i32 %lnot.ext63 to i64
  %expval65 = call i64 @llvm.expect.i64(i64 %conv64, i64 0)
  %tobool66 = icmp ne i64 %expval65, 0
  br i1 %tobool66, label %if.then67, label %if.end68

if.then67:                                        ; preds = %if.end55
  %31 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %31, ptr %__pyx_filename, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 449, ptr %__pyx_lineno, align 4, !tbaa !9
  %33 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9889, ptr %__pyx_clineno, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end68:                                         ; preds = %if.end55
  %35 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call69 = call i32 @__Pyx_PyInt_As_int(ptr noundef %35)
  store i32 %call69, ptr %__pyx_t_4, align 4, !tbaa !9
  %36 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp70 = icmp eq i32 %36, -1
  br i1 %cmp70, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end68
  %call72 = call ptr @PyErr_Occurred()
  %tobool73 = icmp ne ptr %call72, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end68
  %37 = phi i1 [ false, %if.end68 ], [ %tobool73, %land.rhs ]
  %lnot74 = xor i1 %37, true
  %lnot76 = xor i1 %lnot74, true
  %lnot.ext77 = zext i1 %lnot76 to i32
  %conv78 = sext i32 %lnot.ext77 to i64
  %expval79 = call i64 @llvm.expect.i64(i64 %conv78, i64 0)
  %tobool80 = icmp ne i64 %expval79, 0
  br i1 %tobool80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %land.end
  %38 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %38, ptr %__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 449, ptr %__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9891, ptr %__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end82:                                         ; preds = %land.end
  %42 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %42)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %43 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %44 = load ptr, ptr @__pyx_n_s_ndim, align 8, !tbaa !5
  %call83 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %43, ptr noundef %44)
  store ptr %call83, ptr %__pyx_t_3, align 8, !tbaa !5
  %45 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool84 = icmp ne ptr %45, null
  %lnot85 = xor i1 %tobool84, true
  %lnot87 = xor i1 %lnot85, true
  %lnot89 = xor i1 %lnot87, true
  %lnot.ext90 = zext i1 %lnot89 to i32
  %conv91 = sext i32 %lnot.ext90 to i64
  %expval92 = call i64 @llvm.expect.i64(i64 %conv91, i64 0)
  %tobool93 = icmp ne i64 %expval92, 0
  br i1 %tobool93, label %if.then94, label %if.end95

if.then94:                                        ; preds = %if.end82
  %46 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %46, ptr %__pyx_filename, align 8, !tbaa !5
  %47 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 449, ptr %__pyx_lineno, align 4, !tbaa !9
  %48 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9893, ptr %__pyx_clineno, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end95:                                         ; preds = %if.end82
  %50 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call96 = call i32 @__Pyx_PyInt_As_int(ptr noundef %50)
  store i32 %call96, ptr %__pyx_t_5, align 4, !tbaa !9
  %51 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %cmp97 = icmp eq i32 %51, -1
  br i1 %cmp97, label %land.rhs99, label %land.end102

land.rhs99:                                       ; preds = %if.end95
  %call100 = call ptr @PyErr_Occurred()
  %tobool101 = icmp ne ptr %call100, null
  br label %land.end102

land.end102:                                      ; preds = %land.rhs99, %if.end95
  %52 = phi i1 [ false, %if.end95 ], [ %tobool101, %land.rhs99 ]
  %lnot103 = xor i1 %52, true
  %lnot105 = xor i1 %lnot103, true
  %lnot.ext106 = zext i1 %lnot105 to i32
  %conv107 = sext i32 %lnot.ext106 to i64
  %expval108 = call i64 @llvm.expect.i64(i64 %conv107, i64 0)
  %tobool109 = icmp ne i64 %expval108, 0
  br i1 %tobool109, label %if.then110, label %if.end111

if.then110:                                       ; preds = %land.end102
  %53 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %53, ptr %__pyx_filename, align 8, !tbaa !5
  %54 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 449, ptr %__pyx_lineno, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9895, ptr %__pyx_clineno, align 4, !tbaa !9
  %56 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end111:                                        ; preds = %land.end102
  %57 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %57)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %58 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %arrayidx = getelementptr %struct.__Pyx_memviewslice, ptr %58, i64 0
  %59 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %arrayidx112 = getelementptr %struct.__Pyx_memviewslice, ptr %59, i64 0
  %60 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %62 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %dtype_is_object = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %62, i32 0, i32 10
  %63 = load i32, ptr %dtype_is_object, align 4, !tbaa !119
  %call113 = call i32 @__pyx_memoryview_copy_contents(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %arrayidx, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %arrayidx112, i32 noundef %60, i32 noundef %61, i32 noundef %63)
  store i32 %call113, ptr %__pyx_t_6, align 4, !tbaa !9
  %64 = load i32, ptr %__pyx_t_6, align 4, !tbaa !9
  %cmp114 = icmp eq i32 %64, -1
  %lnot116 = xor i1 %cmp114, true
  %lnot118 = xor i1 %lnot116, true
  %lnot.ext119 = zext i1 %lnot118 to i32
  %conv120 = sext i32 %lnot.ext119 to i64
  %expval121 = call i64 @llvm.expect.i64(i64 %conv120, i64 0)
  %tobool122 = icmp ne i64 %expval121, 0
  br i1 %tobool122, label %if.then123, label %if.end124

if.then123:                                       ; preds = %if.end111
  %65 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %65, ptr %__pyx_filename, align 8, !tbaa !5
  %66 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 447, ptr %__pyx_lineno, align 4, !tbaa !9
  %67 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9905, ptr %__pyx_clineno, align 4, !tbaa !9
  %68 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end124:                                        ; preds = %if.end111
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then123, %if.then110, %if.then94, %if.then81, %if.then67, %if.then54, %if.then42, %if.then20, %if.then
  %69 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %69)
  %70 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %71 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %72 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.139, i32 noundef %70, i32 noundef %71, ptr noundef %72)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end124
  %73 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_src_slice) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_dst_slice) #13
  ret ptr %73
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_setitem_slice_assign_scalar(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_dst, ptr noundef %__pyx_v_value) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_dst.addr = alloca ptr, align 8
  %__pyx_v_value.addr = alloca ptr, align 8
  %__pyx_v_array = alloca [128 x i32], align 16
  %__pyx_v_tmp = alloca ptr, align 8
  %__pyx_v_item = alloca ptr, align 8
  %__pyx_v_dst_slice = alloca ptr, align 8
  %__pyx_v_tmp_slice = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_t_9 = alloca ptr, align 8
  %__pyx_t_10 = alloca ptr, align 8
  %__pyx_t_11 = alloca ptr, align 8
  %__pyx_t_12 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_dst, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  store ptr %__pyx_v_value, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 512, ptr %__pyx_v_array) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_tmp) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_item) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_dst_slice) #13
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_tmp_slice) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #13
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #13
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #13
  store ptr null, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_11) #13
  store ptr null, ptr %__pyx_t_11, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_12) #13
  store ptr null, ptr %__pyx_t_12, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  store ptr null, ptr %__pyx_v_tmp, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_memoryview_get_slice_from_memoryview(ptr noundef %0, ptr noundef %__pyx_v_tmp_slice)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %cmp = icmp eq ptr %1, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 458, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9977, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %6, ptr %__pyx_v_dst_slice, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %7, i32 0, i32 8
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 3
  %8 = load i64, ptr %itemsize, align 8, !tbaa !120
  %cmp2 = icmp ugt i64 %8, 512
  %conv3 = zext i1 %cmp2 to i32
  %cmp4 = icmp ne i32 %conv3, 0
  %conv5 = zext i1 %cmp4 to i32
  store i32 %conv5, ptr %__pyx_t_2, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool6 = icmp ne i32 %9, 0
  br i1 %tobool6, label %if.then7, label %if.end26

if.then7:                                         ; preds = %if.end
  %10 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view8 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %10, i32 0, i32 8
  %itemsize9 = getelementptr inbounds %struct.Py_buffer, ptr %view8, i32 0, i32 3
  %11 = load i64, ptr %itemsize9, align 8, !tbaa !120
  %call10 = call ptr @PyMem_Malloc(i64 noundef %11)
  store ptr %call10, ptr %__pyx_v_tmp, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_v_tmp, align 8, !tbaa !5
  %cmp11 = icmp eq ptr %12, null
  %conv12 = zext i1 %cmp11 to i32
  %cmp13 = icmp ne i32 %conv12, 0
  %conv14 = zext i1 %cmp13 to i32
  store i32 %conv14, ptr %__pyx_t_2, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool15 = icmp ne i32 %13, 0
  %lnot16 = xor i1 %tobool15, true
  %lnot18 = xor i1 %lnot16, true
  %lnot.ext19 = zext i1 %lnot18 to i32
  %conv20 = sext i32 %lnot.ext19 to i64
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 0)
  %tobool22 = icmp ne i64 %expval21, 0
  br i1 %tobool22, label %if.then23, label %if.end25

if.then23:                                        ; preds = %if.then7
  %call24 = call ptr @PyErr_NoMemory()
  %14 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %14, ptr %__pyx_filename, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 463, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10016, ptr %__pyx_clineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end25:                                         ; preds = %if.then7
  %18 = load ptr, ptr %__pyx_v_tmp, align 8, !tbaa !5
  store ptr %18, ptr %__pyx_v_item, align 8, !tbaa !5
  br label %__pyx_L3

if.end26:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [128 x i32], ptr %__pyx_v_array, i64 0, i64 0
  store ptr %arraydecay, ptr %__pyx_v_item, align 8, !tbaa !5
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end26, %if.end25
  %19 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %dtype_is_object = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %19, i32 0, i32 10
  %20 = load i32, ptr %dtype_is_object, align 4, !tbaa !119
  %cmp27 = icmp ne i32 %20, 0
  %conv28 = zext i1 %cmp27 to i32
  store i32 %conv28, ptr %__pyx_t_2, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool29 = icmp ne i32 %21, 0
  br i1 %tobool29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %__pyx_L3
  %22 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  %arrayidx = getelementptr ptr, ptr %23, i64 0
  store ptr %22, ptr %arrayidx, align 8, !tbaa !5
  br label %__pyx_L8

if.end31:                                         ; preds = %__pyx_L3
  %24 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %__pyx_vtab = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %24, i32 0, i32 1
  %25 = load ptr, ptr %__pyx_vtab, align 8, !tbaa !121
  %assign_item_from_object = getelementptr inbounds %struct.__pyx_vtabstruct_memoryview, ptr %25, i32 0, i32 6
  %26 = load ptr, ptr %assign_item_from_object, align 8, !tbaa !45
  %27 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  %29 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call32 = call ptr %26(ptr noundef %27, ptr noundef %28, ptr noundef %29)
  store ptr %call32, ptr %__pyx_t_3, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool33 = icmp ne ptr %30, null
  %lnot34 = xor i1 %tobool33, true
  %lnot36 = xor i1 %lnot34, true
  %lnot38 = xor i1 %lnot36, true
  %lnot.ext39 = zext i1 %lnot38 to i32
  %conv40 = sext i32 %lnot.ext39 to i64
  %expval41 = call i64 @llvm.expect.i64(i64 %conv40, i64 0)
  %tobool42 = icmp ne i64 %expval41, 0
  br i1 %tobool42, label %if.then43, label %if.end44

if.then43:                                        ; preds = %if.end31
  %31 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %31, ptr %__pyx_filename, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 472, ptr %__pyx_lineno, align 4, !tbaa !9
  %33 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10104, ptr %__pyx_clineno, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L6_error

if.end44:                                         ; preds = %if.end31
  %35 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %35)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %__pyx_L8

__pyx_L8:                                         ; preds = %if.end44, %if.then30
  %36 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view45 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %36, i32 0, i32 8
  %suboffsets = getelementptr inbounds %struct.Py_buffer, ptr %view45, i32 0, i32 9
  %37 = load ptr, ptr %suboffsets, align 8, !tbaa !122
  %cmp46 = icmp ne ptr %37, null
  %conv47 = zext i1 %cmp46 to i32
  %cmp48 = icmp ne i32 %conv47, 0
  %conv49 = zext i1 %cmp48 to i32
  store i32 %conv49, ptr %__pyx_t_2, align 4, !tbaa !9
  %38 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool50 = icmp ne i32 %38, 0
  br i1 %tobool50, label %if.then51, label %if.end68

if.then51:                                        ; preds = %__pyx_L8
  %39 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view52 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %39, i32 0, i32 8
  %suboffsets53 = getelementptr inbounds %struct.Py_buffer, ptr %view52, i32 0, i32 9
  %40 = load ptr, ptr %suboffsets53, align 8, !tbaa !122
  %41 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view54 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %41, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view54, i32 0, i32 5
  %42 = load i32, ptr %ndim, align 4, !tbaa !123
  %call55 = call ptr @assert_direct_dimensions(ptr noundef %40, i32 noundef %42)
  store ptr %call55, ptr %__pyx_t_3, align 8, !tbaa !5
  %43 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool56 = icmp ne ptr %43, null
  %lnot57 = xor i1 %tobool56, true
  %lnot59 = xor i1 %lnot57, true
  %lnot61 = xor i1 %lnot59, true
  %lnot.ext62 = zext i1 %lnot61 to i32
  %conv63 = sext i32 %lnot.ext62 to i64
  %expval64 = call i64 @llvm.expect.i64(i64 %conv63, i64 0)
  %tobool65 = icmp ne i64 %expval64, 0
  br i1 %tobool65, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.then51
  %44 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %44, ptr %__pyx_filename, align 8, !tbaa !5
  %45 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 477, ptr %__pyx_lineno, align 4, !tbaa !9
  %46 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10127, ptr %__pyx_clineno, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L6_error

if.end67:                                         ; preds = %if.then51
  %48 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %48)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %__pyx_L8
  %49 = load ptr, ptr %__pyx_v_dst_slice, align 8, !tbaa !5
  %50 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %view69 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %50, i32 0, i32 8
  %ndim70 = getelementptr inbounds %struct.Py_buffer, ptr %view69, i32 0, i32 5
  %51 = load i32, ptr %ndim70, align 4, !tbaa !123
  %52 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view71 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %52, i32 0, i32 8
  %itemsize72 = getelementptr inbounds %struct.Py_buffer, ptr %view71, i32 0, i32 3
  %53 = load i64, ptr %itemsize72, align 8, !tbaa !120
  %54 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  %55 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %dtype_is_object73 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %55, i32 0, i32 10
  %56 = load i32, ptr %dtype_is_object73, align 4, !tbaa !119
  call void @__pyx_memoryview_slice_assign_scalar(ptr noundef %49, i32 noundef %51, i64 noundef %53, ptr noundef %54, i32 noundef %56)
  %57 = load ptr, ptr %__pyx_v_tmp, align 8, !tbaa !5
  call void @PyMem_Free(ptr noundef %57)
  br label %__pyx_L7

__pyx_L6_error:                                   ; preds = %if.then66, %if.then43
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_10, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_11, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_12, align 8, !tbaa !5
  %58 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %58)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @__Pyx_ExceptionSwap(ptr noundef %__pyx_t_10, ptr noundef %__pyx_t_11, ptr noundef %__pyx_t_12)
  %call74 = call i32 @__Pyx_GetException(ptr noundef %__pyx_t_7, ptr noundef %__pyx_t_8, ptr noundef %__pyx_t_9)
  %cmp75 = icmp slt i32 %call74, 0
  %lnot77 = xor i1 %cmp75, true
  %lnot79 = xor i1 %lnot77, true
  %lnot.ext80 = zext i1 %lnot79 to i32
  %conv81 = sext i32 %lnot.ext80 to i64
  %expval82 = call i64 @llvm.expect.i64(i64 %conv81, i64 0)
  %tobool83 = icmp ne i64 %expval82, 0
  br i1 %tobool83, label %if.then84, label %if.end85

if.then84:                                        ; preds = %__pyx_L6_error
  call void @PyErr_Fetch(ptr noundef %__pyx_t_7, ptr noundef %__pyx_t_8, ptr noundef %__pyx_t_9)
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %__pyx_L6_error
  %59 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 %59, ptr %__pyx_t_4, align 4, !tbaa !9
  %60 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 %60, ptr %__pyx_t_5, align 4, !tbaa !9
  %61 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store ptr %61, ptr %__pyx_t_6, align 8, !tbaa !5
  %62 = load ptr, ptr %__pyx_v_tmp, align 8, !tbaa !5
  call void @PyMem_Free(ptr noundef %62)
  %63 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  %64 = load ptr, ptr %__pyx_t_11, align 8, !tbaa !5
  %65 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  call void @PyErr_SetExcInfo(ptr noundef %63, ptr noundef %64, ptr noundef %65)
  %66 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %67 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %68 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @PyErr_Restore(ptr noundef %66, ptr noundef %67, ptr noundef %68)
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_10, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_11, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_12, align 8, !tbaa !5
  %69 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  store i32 %69, ptr %__pyx_lineno, align 4, !tbaa !9
  %70 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  store i32 %70, ptr %__pyx_clineno, align 4, !tbaa !9
  %71 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %71, ptr %__pyx_filename, align 8, !tbaa !5
  br label %__pyx_L1_error

__pyx_L7:                                         ; preds = %if.end68
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.end85, %if.then23, %if.then
  %72 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %72)
  %73 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %74 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %75 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.157, i32 noundef %73, i32 noundef %74, ptr noundef %75)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %__pyx_L7
  %76 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_tmp_slice) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_dst_slice) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_item) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_tmp) #13
  call void @llvm.lifetime.end.p0(i64 512, ptr %__pyx_v_array) #13
  ret ptr %76
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_setitem_indexed(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_index, ptr noundef %__pyx_v_value) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_index.addr = alloca ptr, align 8
  %__pyx_v_value.addr = alloca ptr, align 8
  %__pyx_v_itemp = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_index, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  store ptr %__pyx_v_value, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_itemp) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %__pyx_vtab = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 1
  %1 = load ptr, ptr %__pyx_vtab, align 8, !tbaa !121
  %get_item_pointer = getelementptr inbounds %struct.__pyx_vtabstruct_memoryview, ptr %1, i32 0, i32 0
  %2 = load ptr, ptr %get_item_pointer, align 8, !tbaa !38
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %call = call ptr %2(ptr noundef %3, ptr noundef %4)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %cmp = icmp eq ptr %5, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %6, ptr %__pyx_filename, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 484, ptr %__pyx_lineno, align 4, !tbaa !9
  %8 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10244, ptr %__pyx_clineno, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %10 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %10, ptr %__pyx_v_itemp, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %__pyx_vtab2 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %11, i32 0, i32 1
  %12 = load ptr, ptr %__pyx_vtab2, align 8, !tbaa !121
  %assign_item_from_object = getelementptr inbounds %struct.__pyx_vtabstruct_memoryview, ptr %12, i32 0, i32 6
  %13 = load ptr, ptr %assign_item_from_object, align 8, !tbaa !45
  %14 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_v_itemp, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call3 = call ptr %13(ptr noundef %14, ptr noundef %15, ptr noundef %16)
  store ptr %call3, ptr %__pyx_t_2, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %17, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end
  %18 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %18, ptr %__pyx_filename, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 485, ptr %__pyx_lineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10254, ptr %__pyx_clineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end15:                                         ; preds = %if.end
  %22 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %22)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then14, %if.then
  %23 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %23)
  %24 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %26 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.159, i32 noundef %24, i32 noundef %25, ptr noundef %26)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end15
  %27 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_itemp) #13
  ret ptr %27
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_convert_item_to_object(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_itemp) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_itemp.addr = alloca ptr, align 8
  %__pyx_v_struct = alloca ptr, align 8
  %__pyx_v_bytesitem = alloca ptr, align 8
  %__pyx_v_result = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca i32, align 4
  %__pyx_t_9 = alloca ptr, align 8
  %__pyx_t_10 = alloca i64, align 8
  %__pyx_t_11 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_itemp, ptr %__pyx_v_itemp.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_struct) #13
  store ptr null, ptr %__pyx_v_struct, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_bytesitem) #13
  store ptr null, ptr %__pyx_v_bytesitem, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_result) #13
  store ptr null, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #13
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr @__pyx_n_s_struct, align 8, !tbaa !5
  %call = call ptr @__Pyx_Import(ptr noundef %0, ptr noundef null, i32 noundef 0)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 490, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10316, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %6, ptr %__pyx_v_struct, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_v_itemp.addr, align 8, !tbaa !5
  %add.ptr = getelementptr i8, ptr %7, i64 0
  %8 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %8, i32 0, i32 8
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 3
  %9 = load i64, ptr %itemsize, align 8, !tbaa !120
  %sub = sub i64 %9, 0
  %call4 = call ptr @PyBytes_FromStringAndSize(ptr noundef %add.ptr, i64 noundef %sub)
  store ptr %call4, ptr %__pyx_t_1, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %10, null
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  %11 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %11, ptr %__pyx_filename, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 493, ptr %__pyx_lineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10328, ptr %__pyx_clineno, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end16:                                         ; preds = %if.end
  %15 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %15, ptr %__pyx_v_bytesitem, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyErr_GetExcInfo(ptr noundef %__pyx_t_2, ptr noundef %__pyx_t_3, ptr noundef %__pyx_t_4)
  %16 = load ptr, ptr %__pyx_v_struct, align 8, !tbaa !5
  %17 = load ptr, ptr @__pyx_n_s_unpack, align 8, !tbaa !5
  %call17 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %16, ptr noundef %17)
  store ptr %call17, ptr %__pyx_t_5, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %18, null
  %lnot19 = xor i1 %tobool18, true
  %lnot21 = xor i1 %lnot19, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end16
  %19 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %19, ptr %__pyx_filename, align 8, !tbaa !5
  %20 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 495, ptr %__pyx_lineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10356, ptr %__pyx_clineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

if.end29:                                         ; preds = %if.end16
  %23 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view30 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %23, i32 0, i32 8
  %format = getelementptr inbounds %struct.Py_buffer, ptr %view30, i32 0, i32 6
  %24 = load ptr, ptr %format, align 8, !tbaa !124
  %call31 = call ptr @PyBytes_FromString(ptr noundef %24)
  store ptr %call31, ptr %__pyx_t_6, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool32 = icmp ne ptr %25, null
  %lnot33 = xor i1 %tobool32, true
  %lnot35 = xor i1 %lnot33, true
  %lnot37 = xor i1 %lnot35, true
  %lnot.ext38 = zext i1 %lnot37 to i32
  %conv39 = sext i32 %lnot.ext38 to i64
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0)
  %tobool41 = icmp ne i64 %expval40, 0
  br i1 %tobool41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end29
  %26 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %26, ptr %__pyx_filename, align 8, !tbaa !5
  %27 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 495, ptr %__pyx_lineno, align 4, !tbaa !9
  %28 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10358, ptr %__pyx_clineno, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

if.end43:                                         ; preds = %if.end29
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  store i32 0, ptr %__pyx_t_8, align 4, !tbaa !9
  %30 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %call44 = call i32 @Py_IS_TYPE(ptr noundef %30, ptr noundef @PyMethod_Type)
  %tobool45 = icmp ne i32 %call44, 0
  %lnot46 = xor i1 %tobool45, true
  %lnot48 = xor i1 %lnot46, true
  %lnot.ext49 = zext i1 %lnot48 to i32
  %conv50 = sext i32 %lnot.ext49 to i64
  %expval51 = call i64 @llvm.expect.i64(i64 %conv50, i64 1)
  %tobool52 = icmp ne i64 %expval51, 0
  br i1 %tobool52, label %if.then53, label %if.end64

if.then53:                                        ; preds = %if.end43
  %31 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %31, i32 0, i32 2
  %32 = load ptr, ptr %im_self, align 8, !tbaa !125
  store ptr %32, ptr %__pyx_t_7, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %tobool54 = icmp ne ptr %33, null
  %lnot55 = xor i1 %tobool54, true
  %lnot57 = xor i1 %lnot55, true
  %lnot.ext58 = zext i1 %lnot57 to i32
  %conv59 = sext i32 %lnot.ext58 to i64
  %expval60 = call i64 @llvm.expect.i64(i64 %conv59, i64 1)
  %tobool61 = icmp ne i64 %expval60, 0
  br i1 %tobool61, label %if.then62, label %if.end63

if.then62:                                        ; preds = %if.then53
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #13
  %34 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %34, i32 0, i32 1
  %35 = load ptr, ptr %im_func, align 8, !tbaa !127
  store ptr %35, ptr %function, align 8, !tbaa !5
  %36 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %36)
  %37 = load ptr, ptr %function, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %37)
  br label %do.body

do.body:                                          ; preds = %if.then62
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %38 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr %38, ptr %tmp, align 8, !tbaa !5
  %39 = load ptr, ptr %function, align 8, !tbaa !5
  store ptr %39, ptr %__pyx_t_5, align 8, !tbaa !5
  %40 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %40)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store i32 1, ptr %__pyx_t_8, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #13
  br label %if.end63

if.end63:                                         ; preds = %do.end, %if.then53
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end43
  %41 = load i32, ptr %__pyx_t_8, align 4, !tbaa !9
  %add = add i32 2, %41
  %conv65 = sext i32 %add to i64
  %call66 = call ptr @PyTuple_New(i64 noundef %conv65)
  store ptr %call66, ptr %__pyx_t_9, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %tobool67 = icmp ne ptr %42, null
  %lnot68 = xor i1 %tobool67, true
  %lnot70 = xor i1 %lnot68, true
  %lnot72 = xor i1 %lnot70, true
  %lnot.ext73 = zext i1 %lnot72 to i32
  %conv74 = sext i32 %lnot.ext73 to i64
  %expval75 = call i64 @llvm.expect.i64(i64 %conv74, i64 0)
  %tobool76 = icmp ne i64 %expval75, 0
  br i1 %tobool76, label %if.then77, label %if.end78

if.then77:                                        ; preds = %if.end64
  %43 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %43, ptr %__pyx_filename, align 8, !tbaa !5
  %44 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 495, ptr %__pyx_lineno, align 4, !tbaa !9
  %45 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10391, ptr %__pyx_clineno, align 4, !tbaa !9
  %46 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

if.end78:                                         ; preds = %if.end64
  %47 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %tobool79 = icmp ne ptr %47, null
  br i1 %tobool79, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end78
  %48 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %49 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %48, i64 noundef 0, ptr noundef %49)
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %if.end78
  %50 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %51 = load i32, ptr %__pyx_t_8, align 4, !tbaa !9
  %add82 = add i32 0, %51
  %conv83 = sext i32 %add82 to i64
  %52 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %50, i64 noundef %conv83, ptr noundef %52)
  %53 = load ptr, ptr %__pyx_v_bytesitem, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %53)
  %54 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %55 = load i32, ptr %__pyx_t_8, align 4, !tbaa !9
  %add84 = add i32 1, %55
  %conv85 = sext i32 %add84 to i64
  %56 = load ptr, ptr %__pyx_v_bytesitem, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %54, i64 noundef %conv85, ptr noundef %56)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %58 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %call86 = call ptr @__Pyx_PyObject_Call(ptr noundef %57, ptr noundef %58, ptr noundef null)
  store ptr %call86, ptr %__pyx_t_1, align 8, !tbaa !5
  %59 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool87 = icmp ne ptr %59, null
  %lnot88 = xor i1 %tobool87, true
  %lnot90 = xor i1 %lnot88, true
  %lnot92 = xor i1 %lnot90, true
  %lnot.ext93 = zext i1 %lnot92 to i32
  %conv94 = sext i32 %lnot.ext93 to i64
  %expval95 = call i64 @llvm.expect.i64(i64 %conv94, i64 0)
  %tobool96 = icmp ne i64 %expval95, 0
  br i1 %tobool96, label %if.then97, label %if.end98

if.then97:                                        ; preds = %if.end81
  %60 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %60, ptr %__pyx_filename, align 8, !tbaa !5
  %61 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 495, ptr %__pyx_lineno, align 4, !tbaa !9
  %62 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10402, ptr %__pyx_clineno, align 4, !tbaa !9
  %63 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

if.end98:                                         ; preds = %if.end81
  %64 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %64)
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  %65 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %65)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %66 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %66, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %67 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view99 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %67, i32 0, i32 8
  %format100 = getelementptr inbounds %struct.Py_buffer, ptr %view99, i32 0, i32 6
  %68 = load ptr, ptr %format100, align 8, !tbaa !124
  %call101 = call i64 @strlen(ptr noundef %68) #16
  store i64 %call101, ptr %__pyx_t_10, align 8, !tbaa !27
  %69 = load i64, ptr %__pyx_t_10, align 8, !tbaa !27
  %cmp = icmp eq i64 %69, 1
  %conv102 = zext i1 %cmp to i32
  %cmp103 = icmp ne i32 %conv102, 0
  %conv104 = zext i1 %cmp103 to i32
  store i32 %conv104, ptr %__pyx_t_11, align 4, !tbaa !9
  %70 = load i32, ptr %__pyx_t_11, align 4, !tbaa !9
  %tobool105 = icmp ne i32 %70, 0
  br i1 %tobool105, label %if.then106, label %if.end120

if.then106:                                       ; preds = %if.end98
  %71 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %71)
  %72 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %call107 = call ptr @__Pyx_GetItemInt_Fast(ptr noundef %72, i64 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  store ptr %call107, ptr %__pyx_t_1, align 8, !tbaa !5
  %73 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool108 = icmp ne ptr %73, null
  %lnot109 = xor i1 %tobool108, true
  %lnot111 = xor i1 %lnot109, true
  %lnot113 = xor i1 %lnot111, true
  %lnot.ext114 = zext i1 %lnot113 to i32
  %conv115 = sext i32 %lnot.ext114 to i64
  %expval116 = call i64 @llvm.expect.i64(i64 %conv115, i64 0)
  %tobool117 = icmp ne i64 %expval116, 0
  br i1 %tobool117, label %if.then118, label %if.end119

if.then118:                                       ; preds = %if.then106
  %74 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %74, ptr %__pyx_filename, align 8, !tbaa !5
  %75 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 500, ptr %__pyx_lineno, align 4, !tbaa !9
  %76 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10439, ptr %__pyx_clineno, align 4, !tbaa !9
  %77 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L5_except_error

if.end119:                                        ; preds = %if.then106
  %78 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %78, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %__pyx_L6_except_return

if.end120:                                        ; preds = %if.end98
  %79 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %79)
  %80 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %80)
  %81 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr %81, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L6_except_return

__pyx_L3_error:                                   ; preds = %if.then97, %if.then77, %if.then42, %if.then28
  %82 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %82)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %83 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %83)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %84 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %84)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %85 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %85)
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  %86 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %86)
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @PyErr_Fetch(ptr noundef %__pyx_t_1, ptr noundef %__pyx_t_5, ptr noundef %__pyx_t_9)
  %87 = load ptr, ptr %__pyx_v_struct, align 8, !tbaa !5
  %88 = load ptr, ptr @__pyx_n_s_error, align 8, !tbaa !5
  %call121 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %87, ptr noundef %88)
  store ptr %call121, ptr %__pyx_t_6, align 8, !tbaa !5
  %89 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool122 = icmp ne ptr %89, null
  %lnot123 = xor i1 %tobool122, true
  %lnot125 = xor i1 %lnot123, true
  %lnot127 = xor i1 %lnot125, true
  %lnot.ext128 = zext i1 %lnot127 to i32
  %conv129 = sext i32 %lnot.ext128 to i64
  %expval130 = call i64 @llvm.expect.i64(i64 %conv129, i64 0)
  %tobool131 = icmp ne i64 %expval130, 0
  br i1 %tobool131, label %if.then132, label %if.end133

if.then132:                                       ; preds = %__pyx_L3_error
  %90 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %90, ptr %__pyx_filename, align 8, !tbaa !5
  %91 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 496, ptr %__pyx_lineno, align 4, !tbaa !9
  %92 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10481, ptr %__pyx_clineno, align 4, !tbaa !9
  %93 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L5_except_error

if.end133:                                        ; preds = %__pyx_L3_error
  %94 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %95 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call134 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %94, ptr noundef %95)
  store i32 %call134, ptr %__pyx_t_8, align 4, !tbaa !9
  %96 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %96)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %97 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %98 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %99 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @PyErr_Restore(ptr noundef %97, ptr noundef %98, ptr noundef %99)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  %100 = load i32, ptr %__pyx_t_8, align 4, !tbaa !9
  %tobool135 = icmp ne i32 %100, 0
  br i1 %tobool135, label %if.then136, label %if.end155

if.then136:                                       ; preds = %if.end133
  %101 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %102 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %103 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.160, i32 noundef %101, i32 noundef %102, ptr noundef %103)
  %call137 = call i32 @__Pyx_GetException(ptr noundef %__pyx_t_9, ptr noundef %__pyx_t_5, ptr noundef %__pyx_t_1)
  %cmp138 = icmp slt i32 %call137, 0
  br i1 %cmp138, label %if.then140, label %if.end141

if.then140:                                       ; preds = %if.then136
  %104 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %104, ptr %__pyx_filename, align 8, !tbaa !5
  %105 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 496, ptr %__pyx_lineno, align 4, !tbaa !9
  %106 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10489, ptr %__pyx_clineno, align 4, !tbaa !9
  %107 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L5_except_error

if.end141:                                        ; preds = %if.then136
  %108 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %109 = load ptr, ptr @__pyx_tuple__13, align 8, !tbaa !5
  %call142 = call ptr @__Pyx_PyObject_Call(ptr noundef %108, ptr noundef %109, ptr noundef null)
  store ptr %call142, ptr %__pyx_t_6, align 8, !tbaa !5
  %110 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool143 = icmp ne ptr %110, null
  %lnot144 = xor i1 %tobool143, true
  %lnot146 = xor i1 %lnot144, true
  %lnot148 = xor i1 %lnot146, true
  %lnot.ext149 = zext i1 %lnot148 to i32
  %conv150 = sext i32 %lnot.ext149 to i64
  %expval151 = call i64 @llvm.expect.i64(i64 %conv150, i64 0)
  %tobool152 = icmp ne i64 %expval151, 0
  br i1 %tobool152, label %if.then153, label %if.end154

if.then153:                                       ; preds = %if.end141
  %111 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %111, ptr %__pyx_filename, align 8, !tbaa !5
  %112 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 497, ptr %__pyx_lineno, align 4, !tbaa !9
  %113 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10501, ptr %__pyx_clineno, align 4, !tbaa !9
  %114 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L5_except_error

if.end154:                                        ; preds = %if.end141
  %115 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %115, ptr noundef null, ptr noundef null, ptr noundef null)
  %116 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %116)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %117 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %117, ptr %__pyx_filename, align 8, !tbaa !5
  %118 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 497, ptr %__pyx_lineno, align 4, !tbaa !9
  %119 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10505, ptr %__pyx_clineno, align 4, !tbaa !9
  %120 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L5_except_error

if.end155:                                        ; preds = %if.end133
  br label %__pyx_L5_except_error

__pyx_L5_except_error:                            ; preds = %if.end155, %if.end154, %if.then153, %if.then140, %if.then132, %if.then118
  %121 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %122 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %123 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @PyErr_SetExcInfo(ptr noundef %121, ptr noundef %122, ptr noundef %123)
  br label %__pyx_L1_error

__pyx_L6_except_return:                           ; preds = %if.end120, %if.end119
  %124 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %125 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %126 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @PyErr_SetExcInfo(ptr noundef %124, ptr noundef %125, ptr noundef %126)
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %__pyx_L5_except_error, %if.then15, %if.then
  %127 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %127)
  %128 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %128)
  %129 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %129)
  %130 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %130)
  %131 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %131)
  %132 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %133 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %134 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.160, i32 noundef %132, i32 noundef %133, ptr noundef %134)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %__pyx_L6_except_return
  %135 = load ptr, ptr %__pyx_v_struct, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %135)
  %136 = load ptr, ptr %__pyx_v_bytesitem, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %136)
  %137 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %137)
  %138 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_result) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_bytesitem) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_struct) #13
  ret ptr %138
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_assign_item_from_object(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_itemp, ptr noundef %__pyx_v_value) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_itemp.addr = alloca ptr, align 8
  %__pyx_v_value.addr = alloca ptr, align 8
  %__pyx_v_struct = alloca ptr, align 8
  %__pyx_v_c = alloca i8, align 1
  %__pyx_v_bytesvalue = alloca ptr, align 8
  %__pyx_v_i = alloca i64, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca i32, align 4
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_t_9 = alloca i64, align 8
  %__pyx_t_10 = alloca ptr, align 8
  %__pyx_t_11 = alloca ptr, align 8
  %__pyx_t_12 = alloca ptr, align 8
  %__pyx_t_13 = alloca ptr, align 8
  %__pyx_t_14 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_itemp, ptr %__pyx_v_itemp.addr, align 8, !tbaa !5
  store ptr %__pyx_v_value, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_struct) #13
  store ptr null, ptr %__pyx_v_struct, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 1, ptr %__pyx_v_c) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_bytesvalue) #13
  store ptr null, ptr %__pyx_v_bytesvalue, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #13
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #13
  store ptr null, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_13) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_14) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr @__pyx_n_s_struct, align 8, !tbaa !5
  %call = call ptr @__Pyx_Import(ptr noundef %0, ptr noundef null, i32 noundef 0)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 506, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10597, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %6, ptr %__pyx_v_struct, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call4 = call ptr @Py_TYPE(ptr noundef %7)
  %call5 = call i32 @PyType_HasFeature(ptr noundef %call4, i64 noundef 67108864)
  store i32 %call5, ptr %__pyx_t_2, align 4, !tbaa !9
  %8 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp = icmp ne i32 %8, 0
  %conv6 = zext i1 %cmp to i32
  store i32 %conv6, ptr %__pyx_t_3, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool7 = icmp ne i32 %9, 0
  br i1 %tobool7, label %if.then8, label %if.end112

if.then8:                                         ; preds = %if.end
  %10 = load ptr, ptr %__pyx_v_struct, align 8, !tbaa !5
  %11 = load ptr, ptr @__pyx_n_s_pack, align 8, !tbaa !5
  %call9 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %10, ptr noundef %11)
  store ptr %call9, ptr %__pyx_t_1, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool10 = icmp ne ptr %12, null
  %lnot11 = xor i1 %tobool10, true
  %lnot13 = xor i1 %lnot11, true
  %lnot15 = xor i1 %lnot13, true
  %lnot.ext16 = zext i1 %lnot15 to i32
  %conv17 = sext i32 %lnot.ext16 to i64
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 0)
  %tobool19 = icmp ne i64 %expval18, 0
  br i1 %tobool19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.then8
  %13 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %13, ptr %__pyx_filename, align 8, !tbaa !5
  %14 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 512, ptr %__pyx_lineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10620, ptr %__pyx_clineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end21:                                         ; preds = %if.then8
  %17 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %17, i32 0, i32 8
  %format = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 6
  %18 = load ptr, ptr %format, align 8, !tbaa !124
  %call22 = call ptr @PyBytes_FromString(ptr noundef %18)
  store ptr %call22, ptr %__pyx_t_4, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool23 = icmp ne ptr %19, null
  %lnot24 = xor i1 %tobool23, true
  %lnot26 = xor i1 %lnot24, true
  %lnot28 = xor i1 %lnot26, true
  %lnot.ext29 = zext i1 %lnot28 to i32
  %conv30 = sext i32 %lnot.ext29 to i64
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 0)
  %tobool32 = icmp ne i64 %expval31, 0
  br i1 %tobool32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.end21
  %20 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %20, ptr %__pyx_filename, align 8, !tbaa !5
  %21 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 512, ptr %__pyx_lineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10622, ptr %__pyx_clineno, align 4, !tbaa !9
  %23 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end34:                                         ; preds = %if.end21
  %call35 = call ptr @PyTuple_New(i64 noundef 1)
  store ptr %call35, ptr %__pyx_t_5, align 8, !tbaa !5
  %24 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool36 = icmp ne ptr %24, null
  %lnot37 = xor i1 %tobool36, true
  %lnot39 = xor i1 %lnot37, true
  %lnot41 = xor i1 %lnot39, true
  %lnot.ext42 = zext i1 %lnot41 to i32
  %conv43 = sext i32 %lnot.ext42 to i64
  %expval44 = call i64 @llvm.expect.i64(i64 %conv43, i64 0)
  %tobool45 = icmp ne i64 %expval44, 0
  br i1 %tobool45, label %if.then46, label %if.end47

if.then46:                                        ; preds = %if.end34
  %25 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %25, ptr %__pyx_filename, align 8, !tbaa !5
  %26 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 512, ptr %__pyx_lineno, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10624, ptr %__pyx_clineno, align 4, !tbaa !9
  %28 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end47:                                         ; preds = %if.end34
  %29 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %29, i64 noundef 0, ptr noundef %30)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %31 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call48 = call i32 @Py_IS_TYPE(ptr noundef %31, ptr noundef @PyTuple_Type)
  %tobool49 = icmp ne i32 %call48, 0
  %lnot50 = xor i1 %tobool49, true
  %lnot52 = xor i1 %lnot50, true
  %lnot.ext53 = zext i1 %lnot52 to i32
  %conv54 = sext i32 %lnot.ext53 to i64
  %expval55 = call i64 @llvm.expect.i64(i64 %conv54, i64 1)
  %tobool56 = icmp ne i64 %expval55, 0
  br i1 %tobool56, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end47
  %32 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %32)
  %33 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %if.end47
  %34 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call57 = call ptr @PySequence_Tuple(ptr noundef %34)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %33, %cond.true ], [ %call57, %cond.false ]
  store ptr %cond, ptr %__pyx_t_4, align 8, !tbaa !5
  %35 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool58 = icmp ne ptr %35, null
  %lnot59 = xor i1 %tobool58, true
  %lnot61 = xor i1 %lnot59, true
  %lnot63 = xor i1 %lnot61, true
  %lnot.ext64 = zext i1 %lnot63 to i32
  %conv65 = sext i32 %lnot.ext64 to i64
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 0)
  %tobool67 = icmp ne i64 %expval66, 0
  br i1 %tobool67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %cond.end
  %36 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %36, ptr %__pyx_filename, align 8, !tbaa !5
  %37 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 512, ptr %__pyx_lineno, align 4, !tbaa !9
  %38 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10629, ptr %__pyx_clineno, align 4, !tbaa !9
  %39 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end69:                                         ; preds = %cond.end
  %40 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %41 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call70 = call ptr @PyNumber_Add(ptr noundef %40, ptr noundef %41)
  store ptr %call70, ptr %__pyx_t_6, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool71 = icmp ne ptr %42, null
  %lnot72 = xor i1 %tobool71, true
  %lnot74 = xor i1 %lnot72, true
  %lnot76 = xor i1 %lnot74, true
  %lnot.ext77 = zext i1 %lnot76 to i32
  %conv78 = sext i32 %lnot.ext77 to i64
  %expval79 = call i64 @llvm.expect.i64(i64 %conv78, i64 0)
  %tobool80 = icmp ne i64 %expval79, 0
  br i1 %tobool80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.end69
  %43 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %43, ptr %__pyx_filename, align 8, !tbaa !5
  %44 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 512, ptr %__pyx_lineno, align 4, !tbaa !9
  %45 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10631, ptr %__pyx_clineno, align 4, !tbaa !9
  %46 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end82:                                         ; preds = %if.end69
  %47 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %47)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %48 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %48)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %49 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %50 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call83 = call ptr @__Pyx_PyObject_Call(ptr noundef %49, ptr noundef %50, ptr noundef null)
  store ptr %call83, ptr %__pyx_t_4, align 8, !tbaa !5
  %51 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool84 = icmp ne ptr %51, null
  %lnot85 = xor i1 %tobool84, true
  %lnot87 = xor i1 %lnot85, true
  %lnot89 = xor i1 %lnot87, true
  %lnot.ext90 = zext i1 %lnot89 to i32
  %conv91 = sext i32 %lnot.ext90 to i64
  %expval92 = call i64 @llvm.expect.i64(i64 %conv91, i64 0)
  %tobool93 = icmp ne i64 %expval92, 0
  br i1 %tobool93, label %if.then94, label %if.end95

if.then94:                                        ; preds = %if.end82
  %52 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %52, ptr %__pyx_filename, align 8, !tbaa !5
  %53 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 512, ptr %__pyx_lineno, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10635, ptr %__pyx_clineno, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end95:                                         ; preds = %if.end82
  %56 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %56)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %57)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %58 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call96 = call i32 @Py_IS_TYPE(ptr noundef %58, ptr noundef @PyBytes_Type)
  %tobool97 = icmp ne i32 %call96, 0
  %lnot98 = xor i1 %tobool97, true
  %lnot100 = xor i1 %lnot98, true
  %lnot.ext101 = zext i1 %lnot100 to i32
  %conv102 = sext i32 %lnot.ext101 to i64
  %expval103 = call i64 @llvm.expect.i64(i64 %conv102, i64 1)
  %tobool104 = icmp ne i64 %expval103, 0
  br i1 %tobool104, label %if.end111, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end95
  %59 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %cmp105 = icmp eq ptr %59, @_Py_NoneStruct
  br i1 %cmp105, label %if.end111, label %lor.lhs.false107

lor.lhs.false107:                                 ; preds = %lor.lhs.false
  %60 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %61 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call108 = call ptr @Py_TYPE(ptr noundef %61)
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call108, i32 0, i32 1
  %62 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %call109 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %60, ptr noundef @.str.117, ptr noundef @.str.118, ptr noundef %62)
  br i1 false, label %if.end111, label %if.then110

if.then110:                                       ; preds = %lor.lhs.false107
  %63 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %63, ptr %__pyx_filename, align 8, !tbaa !5
  %64 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 512, ptr %__pyx_lineno, align 4, !tbaa !9
  %65 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10639, ptr %__pyx_clineno, align 4, !tbaa !9
  %66 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end111:                                        ; preds = %lor.lhs.false107, %lor.lhs.false, %if.end95
  %67 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %67, ptr %__pyx_v_bytesvalue, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %__pyx_L3

if.end112:                                        ; preds = %if.end
  %68 = load ptr, ptr %__pyx_v_struct, align 8, !tbaa !5
  %69 = load ptr, ptr @__pyx_n_s_pack, align 8, !tbaa !5
  %call113 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %68, ptr noundef %69)
  store ptr %call113, ptr %__pyx_t_6, align 8, !tbaa !5
  %70 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool114 = icmp ne ptr %70, null
  %lnot115 = xor i1 %tobool114, true
  %lnot117 = xor i1 %lnot115, true
  %lnot119 = xor i1 %lnot117, true
  %lnot.ext120 = zext i1 %lnot119 to i32
  %conv121 = sext i32 %lnot.ext120 to i64
  %expval122 = call i64 @llvm.expect.i64(i64 %conv121, i64 0)
  %tobool123 = icmp ne i64 %expval122, 0
  br i1 %tobool123, label %if.then124, label %if.end125

if.then124:                                       ; preds = %if.end112
  %71 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %71, ptr %__pyx_filename, align 8, !tbaa !5
  %72 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 514, ptr %__pyx_lineno, align 4, !tbaa !9
  %73 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10661, ptr %__pyx_clineno, align 4, !tbaa !9
  %74 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end125:                                        ; preds = %if.end112
  %75 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view126 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %75, i32 0, i32 8
  %format127 = getelementptr inbounds %struct.Py_buffer, ptr %view126, i32 0, i32 6
  %76 = load ptr, ptr %format127, align 8, !tbaa !124
  %call128 = call ptr @PyBytes_FromString(ptr noundef %76)
  store ptr %call128, ptr %__pyx_t_1, align 8, !tbaa !5
  %77 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool129 = icmp ne ptr %77, null
  %lnot130 = xor i1 %tobool129, true
  %lnot132 = xor i1 %lnot130, true
  %lnot134 = xor i1 %lnot132, true
  %lnot.ext135 = zext i1 %lnot134 to i32
  %conv136 = sext i32 %lnot.ext135 to i64
  %expval137 = call i64 @llvm.expect.i64(i64 %conv136, i64 0)
  %tobool138 = icmp ne i64 %expval137, 0
  br i1 %tobool138, label %if.then139, label %if.end140

if.then139:                                       ; preds = %if.end125
  %78 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %78, ptr %__pyx_filename, align 8, !tbaa !5
  %79 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 514, ptr %__pyx_lineno, align 4, !tbaa !9
  %80 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10663, ptr %__pyx_clineno, align 4, !tbaa !9
  %81 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end140:                                        ; preds = %if.end125
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  store i32 0, ptr %__pyx_t_7, align 4, !tbaa !9
  %82 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call141 = call i32 @Py_IS_TYPE(ptr noundef %82, ptr noundef @PyMethod_Type)
  %tobool142 = icmp ne i32 %call141, 0
  %lnot143 = xor i1 %tobool142, true
  %lnot145 = xor i1 %lnot143, true
  %lnot.ext146 = zext i1 %lnot145 to i32
  %conv147 = sext i32 %lnot.ext146 to i64
  %expval148 = call i64 @llvm.expect.i64(i64 %conv147, i64 1)
  %tobool149 = icmp ne i64 %expval148, 0
  br i1 %tobool149, label %if.then150, label %if.end161

if.then150:                                       ; preds = %if.end140
  %83 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %83, i32 0, i32 2
  %84 = load ptr, ptr %im_self, align 8, !tbaa !125
  store ptr %84, ptr %__pyx_t_5, align 8, !tbaa !5
  %85 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool151 = icmp ne ptr %85, null
  %lnot152 = xor i1 %tobool151, true
  %lnot154 = xor i1 %lnot152, true
  %lnot.ext155 = zext i1 %lnot154 to i32
  %conv156 = sext i32 %lnot.ext155 to i64
  %expval157 = call i64 @llvm.expect.i64(i64 %conv156, i64 1)
  %tobool158 = icmp ne i64 %expval157, 0
  br i1 %tobool158, label %if.then159, label %if.end160

if.then159:                                       ; preds = %if.then150
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #13
  %86 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %86, i32 0, i32 1
  %87 = load ptr, ptr %im_func, align 8, !tbaa !127
  store ptr %87, ptr %function, align 8, !tbaa !5
  %88 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %88)
  %89 = load ptr, ptr %function, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %89)
  br label %do.body

do.body:                                          ; preds = %if.then159
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %90 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %90, ptr %tmp, align 8, !tbaa !5
  %91 = load ptr, ptr %function, align 8, !tbaa !5
  store ptr %91, ptr %__pyx_t_6, align 8, !tbaa !5
  %92 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %92)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store i32 1, ptr %__pyx_t_7, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #13
  br label %if.end160

if.end160:                                        ; preds = %do.end, %if.then150
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.end140
  %93 = load i32, ptr %__pyx_t_7, align 4, !tbaa !9
  %add = add i32 2, %93
  %conv162 = sext i32 %add to i64
  %call163 = call ptr @PyTuple_New(i64 noundef %conv162)
  store ptr %call163, ptr %__pyx_t_8, align 8, !tbaa !5
  %94 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %tobool164 = icmp ne ptr %94, null
  %lnot165 = xor i1 %tobool164, true
  %lnot167 = xor i1 %lnot165, true
  %lnot169 = xor i1 %lnot167, true
  %lnot.ext170 = zext i1 %lnot169 to i32
  %conv171 = sext i32 %lnot.ext170 to i64
  %expval172 = call i64 @llvm.expect.i64(i64 %conv171, i64 0)
  %tobool173 = icmp ne i64 %expval172, 0
  br i1 %tobool173, label %if.then174, label %if.end175

if.then174:                                       ; preds = %if.end161
  %95 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %95, ptr %__pyx_filename, align 8, !tbaa !5
  %96 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 514, ptr %__pyx_lineno, align 4, !tbaa !9
  %97 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10696, ptr %__pyx_clineno, align 4, !tbaa !9
  %98 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end175:                                        ; preds = %if.end161
  %99 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool176 = icmp ne ptr %99, null
  br i1 %tobool176, label %if.then177, label %if.end178

if.then177:                                       ; preds = %if.end175
  %100 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %101 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %100, i64 noundef 0, ptr noundef %101)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  br label %if.end178

if.end178:                                        ; preds = %if.then177, %if.end175
  %102 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %103 = load i32, ptr %__pyx_t_7, align 4, !tbaa !9
  %add179 = add i32 0, %103
  %conv180 = sext i32 %add179 to i64
  %104 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %102, i64 noundef %conv180, ptr noundef %104)
  %105 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %105)
  %106 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %107 = load i32, ptr %__pyx_t_7, align 4, !tbaa !9
  %add181 = add i32 1, %107
  %conv182 = sext i32 %add181 to i64
  %108 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %106, i64 noundef %conv182, ptr noundef %108)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %109 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %110 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %call183 = call ptr @__Pyx_PyObject_Call(ptr noundef %109, ptr noundef %110, ptr noundef null)
  store ptr %call183, ptr %__pyx_t_4, align 8, !tbaa !5
  %111 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool184 = icmp ne ptr %111, null
  %lnot185 = xor i1 %tobool184, true
  %lnot187 = xor i1 %lnot185, true
  %lnot189 = xor i1 %lnot187, true
  %lnot.ext190 = zext i1 %lnot189 to i32
  %conv191 = sext i32 %lnot.ext190 to i64
  %expval192 = call i64 @llvm.expect.i64(i64 %conv191, i64 0)
  %tobool193 = icmp ne i64 %expval192, 0
  br i1 %tobool193, label %if.then194, label %if.end195

if.then194:                                       ; preds = %if.end178
  %112 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %112, ptr %__pyx_filename, align 8, !tbaa !5
  %113 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 514, ptr %__pyx_lineno, align 4, !tbaa !9
  %114 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10707, ptr %__pyx_clineno, align 4, !tbaa !9
  %115 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end195:                                        ; preds = %if.end178
  %116 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %116)
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  %117 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %117)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %118 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call196 = call i32 @Py_IS_TYPE(ptr noundef %118, ptr noundef @PyBytes_Type)
  %tobool197 = icmp ne i32 %call196, 0
  %lnot198 = xor i1 %tobool197, true
  %lnot200 = xor i1 %lnot198, true
  %lnot.ext201 = zext i1 %lnot200 to i32
  %conv202 = sext i32 %lnot.ext201 to i64
  %expval203 = call i64 @llvm.expect.i64(i64 %conv202, i64 1)
  %tobool204 = icmp ne i64 %expval203, 0
  br i1 %tobool204, label %if.end213, label %lor.lhs.false205

lor.lhs.false205:                                 ; preds = %if.end195
  %119 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %cmp206 = icmp eq ptr %119, @_Py_NoneStruct
  br i1 %cmp206, label %if.end213, label %lor.lhs.false208

lor.lhs.false208:                                 ; preds = %lor.lhs.false205
  %120 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %121 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call209 = call ptr @Py_TYPE(ptr noundef %121)
  %tp_name210 = getelementptr inbounds %struct._typeobject, ptr %call209, i32 0, i32 1
  %122 = load ptr, ptr %tp_name210, align 8, !tbaa !56
  %call211 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %120, ptr noundef @.str.117, ptr noundef @.str.118, ptr noundef %122)
  br i1 false, label %if.end213, label %if.then212

if.then212:                                       ; preds = %lor.lhs.false208
  %123 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %123, ptr %__pyx_filename, align 8, !tbaa !5
  %124 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 514, ptr %__pyx_lineno, align 4, !tbaa !9
  %125 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10712, ptr %__pyx_clineno, align 4, !tbaa !9
  %126 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end213:                                        ; preds = %lor.lhs.false208, %lor.lhs.false205, %if.end195
  %127 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %127, ptr %__pyx_v_bytesvalue, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end213, %if.end111
  store i64 0, ptr %__pyx_t_9, align 8, !tbaa !27
  %128 = load ptr, ptr %__pyx_v_bytesvalue, align 8, !tbaa !5
  %cmp214 = icmp eq ptr %128, @_Py_NoneStruct
  %lnot216 = xor i1 %cmp214, true
  %lnot218 = xor i1 %lnot216, true
  %lnot.ext219 = zext i1 %lnot218 to i32
  %conv220 = sext i32 %lnot.ext219 to i64
  %expval221 = call i64 @llvm.expect.i64(i64 %conv220, i64 0)
  %tobool222 = icmp ne i64 %expval221, 0
  br i1 %tobool222, label %if.then223, label %if.end224

if.then223:                                       ; preds = %__pyx_L3
  %129 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %129, ptr noundef @.str.161)
  %130 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %130, ptr %__pyx_filename, align 8, !tbaa !5
  %131 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 516, ptr %__pyx_lineno, align 4, !tbaa !9
  %132 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10728, ptr %__pyx_clineno, align 4, !tbaa !9
  %133 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end224:                                        ; preds = %__pyx_L3
  %134 = load ptr, ptr %__pyx_v_bytesvalue, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %134)
  %135 = load ptr, ptr %__pyx_v_bytesvalue, align 8, !tbaa !5
  store ptr %135, ptr %__pyx_t_10, align 8, !tbaa !5
  %136 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  %call225 = call ptr @PyBytes_AS_STRING(ptr noundef %136)
  store ptr %call225, ptr %__pyx_t_12, align 8, !tbaa !5
  %137 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  %138 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  %call226 = call i64 @PyBytes_GET_SIZE(ptr noundef %138)
  %add.ptr = getelementptr i8, ptr %137, i64 %call226
  store ptr %add.ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %139 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  store ptr %139, ptr %__pyx_t_14, align 8, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end224
  %140 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  %141 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %cmp227 = icmp ult ptr %140, %141
  br i1 %cmp227, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %142 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  store ptr %142, ptr %__pyx_t_11, align 8, !tbaa !5
  %143 = load ptr, ptr %__pyx_t_11, align 8, !tbaa !5
  %arrayidx = getelementptr i8, ptr %143, i64 0
  %144 = load i8, ptr %arrayidx, align 1, !tbaa !29
  store i8 %144, ptr %__pyx_v_c, align 1, !tbaa !29
  %145 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  store i64 %145, ptr %__pyx_v_i, align 8, !tbaa !27
  %146 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %add229 = add i64 %146, 1
  store i64 %add229, ptr %__pyx_t_9, align 8, !tbaa !27
  %147 = load i8, ptr %__pyx_v_c, align 1, !tbaa !29
  %148 = load ptr, ptr %__pyx_v_itemp.addr, align 8, !tbaa !5
  %149 = load i64, ptr %__pyx_v_i, align 8, !tbaa !27
  %arrayidx230 = getelementptr i8, ptr %148, i64 %149
  store i8 %147, ptr %arrayidx230, align 1, !tbaa !29
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %150 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  %incdec.ptr = getelementptr i8, ptr %150, i32 1
  store ptr %incdec.ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  br label %for.cond, !llvm.loop !128

for.end:                                          ; preds = %for.cond
  %151 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %151)
  store ptr null, ptr %__pyx_t_10, align 8, !tbaa !5
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then223, %if.then212, %if.then194, %if.then174, %if.then139, %if.then124, %if.then110, %if.then94, %if.then81, %if.then68, %if.then46, %if.then33, %if.then20, %if.then
  %152 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %152)
  %153 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %153)
  %154 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %154)
  %155 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %155)
  %156 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %156)
  %157 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %157)
  %158 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %159 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %160 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.162, i32 noundef %158, i32 noundef %159, ptr noundef %160)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %for.end
  %161 = load ptr, ptr %__pyx_v_struct, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %161)
  %162 = load ptr, ptr %__pyx_v_bytesvalue, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %162)
  %163 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_14) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_13) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_bytesvalue) #13
  call void @llvm.lifetime.end.p0(i64 1, ptr %__pyx_v_c) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_struct) #13
  ret ptr %163
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryviewslice_convert_item_to_object(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_itemp) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_itemp.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_itemp, ptr %__pyx_v_itemp.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %to_object_func = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %0, i32 0, i32 3
  %1 = load ptr, ptr %to_object_func, align 8, !tbaa !129
  %cmp = icmp ne ptr %1, null
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end10

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %3)
  %4 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %to_object_func3 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %4, i32 0, i32 3
  %5 = load ptr, ptr %to_object_func3, align 8, !tbaa !129
  %6 = load ptr, ptr %__pyx_v_itemp.addr, align 8, !tbaa !5
  %call = call ptr %5(ptr noundef %6)
  store ptr %call, ptr %__pyx_t_2, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %7, null
  %lnot = xor i1 %tobool4, true
  %lnot5 = xor i1 %lnot, true
  %lnot6 = xor i1 %lnot5, true
  %lnot.ext = zext i1 %lnot6 to i32
  %conv7 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv7, i64 0)
  %tobool8 = icmp ne i64 %expval, 0
  br i1 %tobool8, label %if.then9, label %if.end

if.then9:                                         ; preds = %if.then
  %8 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %8, ptr %__pyx_filename, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 983, ptr %__pyx_lineno, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15248, ptr %__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %if.then
  %12 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %12, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L0

if.end10:                                         ; preds = %entry
  %13 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %13)
  %14 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_v_itemp.addr, align 8, !tbaa !5
  %call11 = call ptr @__pyx_memoryview_convert_item_to_object(ptr noundef %14, ptr noundef %15)
  store ptr %call11, ptr %__pyx_t_2, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool12 = icmp ne ptr %16, null
  %lnot13 = xor i1 %tobool12, true
  %lnot15 = xor i1 %lnot13, true
  %lnot17 = xor i1 %lnot15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %conv19 = sext i32 %lnot.ext18 to i64
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0)
  %tobool21 = icmp ne i64 %expval20, 0
  br i1 %tobool21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end10
  %17 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %17, ptr %__pyx_filename, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 985, ptr %__pyx_lineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15272, ptr %__pyx_clineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end23:                                         ; preds = %if.end10
  %21 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %21, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then22, %if.then9
  %22 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %22)
  %23 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %25 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.216, i32 noundef %23, i32 noundef %24, ptr noundef %25)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end23, %if.end
  %26 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %26
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryviewslice_assign_item_from_object(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_itemp, ptr noundef %__pyx_v_value) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_itemp.addr = alloca ptr, align 8
  %__pyx_v_value.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_itemp, ptr %__pyx_v_itemp.addr, align 8, !tbaa !5
  store ptr %__pyx_v_value, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %to_dtype_func = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %0, i32 0, i32 4
  %1 = load ptr, ptr %to_dtype_func, align 8, !tbaa !132
  %cmp = icmp ne ptr %1, null
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end10

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %to_dtype_func3 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %3, i32 0, i32 4
  %4 = load ptr, ptr %to_dtype_func3, align 8, !tbaa !132
  %5 = load ptr, ptr %__pyx_v_itemp.addr, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call = call i32 %4(ptr noundef %5, ptr noundef %6)
  store i32 %call, ptr %__pyx_t_2, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp4 = icmp eq i32 %7, 0
  %lnot = xor i1 %cmp4, true
  %lnot6 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot6 to i32
  %conv7 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv7, i64 0)
  %tobool8 = icmp ne i64 %expval, 0
  br i1 %tobool8, label %if.then9, label %if.end

if.then9:                                         ; preds = %if.then
  %8 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %8, ptr %__pyx_filename, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 989, ptr %__pyx_lineno, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15334, ptr %__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %if.then
  br label %__pyx_L3

if.end10:                                         ; preds = %entry
  %12 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %13 = load ptr, ptr %__pyx_v_itemp.addr, align 8, !tbaa !5
  %14 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call11 = call ptr @__pyx_memoryview_assign_item_from_object(ptr noundef %12, ptr noundef %13, ptr noundef %14)
  store ptr %call11, ptr %__pyx_t_3, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool12 = icmp ne ptr %15, null
  %lnot13 = xor i1 %tobool12, true
  %lnot15 = xor i1 %lnot13, true
  %lnot17 = xor i1 %lnot15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %conv19 = sext i32 %lnot.ext18 to i64
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0)
  %tobool21 = icmp ne i64 %expval20, 0
  br i1 %tobool21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end10
  %16 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %16, ptr %__pyx_filename, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 991, ptr %__pyx_lineno, align 4, !tbaa !9
  %18 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15354, ptr %__pyx_clineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end23:                                         ; preds = %if.end10
  %20 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %20)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end23, %if.end
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then22, %if.then9
  %21 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %21)
  %22 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %23 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %24 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.217, i32 noundef %22, i32 noundef %23, ptr noundef %24)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %__pyx_L3
  %25 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %25
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyInt_From_int(i32 noundef %value) #3 {
entry:
  %value.addr = alloca i32, align 4
  %neg_one = alloca i32, align 4
  %const_zero = alloca i32, align 4
  %is_unsigned = alloca i32, align 4
  %one = alloca i32, align 4
  %little = alloca i32, align 4
  %bytes = alloca ptr, align 8
  store i32 %value, ptr %value.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %neg_one) #13
  store i32 -1, ptr %neg_one, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %const_zero) #13
  store i32 0, ptr %const_zero, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_unsigned) #13
  store i32 0, ptr %is_unsigned, align 4, !tbaa !9
  %0 = load i32, ptr %value.addr, align 4, !tbaa !9
  %conv = sext i32 %0 to i64
  %call = call ptr @PyLong_FromLong(i64 noundef %conv)
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_unsigned) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %const_zero) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %neg_one) #13
  ret ptr %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyBool_FromLong(i64 noundef %b) #3 {
entry:
  %b.addr = alloca i64, align 8
  store i64 %b, ptr %b.addr, align 8, !tbaa !27
  %0 = load i64, ptr %b.addr, align 8, !tbaa !27
  %tobool = icmp ne i64 %0, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  call void @Py_INCREF(ptr noundef @_Py_TrueStruct)
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @Py_INCREF(ptr noundef @_Py_FalseStruct)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ @_Py_TrueStruct, %cond.true ], [ @_Py_FalseStruct, %cond.false ]
  ret ptr %cond
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_tp_dealloc_array(ptr noundef %o) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %etype = alloca ptr, align 8
  %eval = alloca ptr, align 8
  %etb = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  %_py_tmp22 = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  store ptr %0, ptr %p, align 8, !tbaa !5
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %1)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 1)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call2 = call ptr @Py_TYPE(ptr noundef %2)
  %tp_finalize = getelementptr inbounds %struct._typeobject, ptr %call2, i32 0, i32 47
  %3 = load ptr, ptr %tp_finalize, align 8, !tbaa !133
  %tobool3 = icmp ne ptr %3, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool3, %land.rhs ]
  %lnot = xor i1 %4, true
  %lnot4 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot4 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %land.lhs.true, label %if.end14

land.lhs.true:                                    ; preds = %land.end
  %5 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call6 = call ptr @Py_TYPE(ptr noundef %5)
  %call7 = call i32 @PyType_HasFeature(ptr noundef %call6, i64 noundef 16384)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call9 = call i32 @PyObject_GC_IsFinalized(ptr noundef %6)
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.end14, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %7 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call11 = call i32 @PyObject_CallFinalizerFromDealloc(ptr noundef %7)
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.then13, label %if.end

if.then13:                                        ; preds = %if.then
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  br label %if.end14

if.end14:                                         ; preds = %if.end, %lor.lhs.false, %land.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %etype) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %eval) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %etb) #13
  call void @PyErr_Fetch(ptr noundef %etype, ptr noundef %eval, ptr noundef %etb)
  %8 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call15 = call i64 @Py_REFCNT(ptr noundef %9)
  %add = add i64 %call15, 1
  call void @Py_SET_REFCNT(ptr noundef %8, i64 noundef %add)
  %10 = load ptr, ptr %o.addr, align 8, !tbaa !5
  call void @__pyx_array___dealloc__(ptr noundef %10)
  %11 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %12 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call16 = call i64 @Py_REFCNT(ptr noundef %12)
  %sub = sub i64 %call16, 1
  call void @Py_SET_REFCNT(ptr noundef %11, i64 noundef %sub)
  %13 = load ptr, ptr %etype, align 8, !tbaa !5
  %14 = load ptr, ptr %eval, align 8, !tbaa !5
  %15 = load ptr, ptr %etb, align 8, !tbaa !5
  call void @PyErr_Restore(ptr noundef %13, ptr noundef %14, ptr noundef %15)
  call void @llvm.lifetime.end.p0(i64 8, ptr %etb) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %eval) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %etype) #13
  br label %do.body

do.body:                                          ; preds = %if.end14
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #13
  %16 = load ptr, ptr %p, align 8, !tbaa !5
  %mode = getelementptr inbounds %struct.__pyx_array_obj, ptr %16, i32 0, i32 9
  %17 = load ptr, ptr %mode, align 8, !tbaa !134
  store ptr %17, ptr %_py_tmp, align 8, !tbaa !5
  %18 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  %cmp = icmp ne ptr %18, null
  br i1 %cmp, label %if.then18, label %if.end20

if.then18:                                        ; preds = %do.body
  %19 = load ptr, ptr %p, align 8, !tbaa !5
  %mode19 = getelementptr inbounds %struct.__pyx_array_obj, ptr %19, i32 0, i32 9
  store ptr null, ptr %mode19, align 8, !tbaa !134
  %20 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %20)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %if.end20
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %do.body21

do.body21:                                        ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp22) #13
  %21 = load ptr, ptr %p, align 8, !tbaa !5
  %_format = getelementptr inbounds %struct.__pyx_array_obj, ptr %21, i32 0, i32 10
  %22 = load ptr, ptr %_format, align 8, !tbaa !135
  store ptr %22, ptr %_py_tmp22, align 8, !tbaa !5
  %23 = load ptr, ptr %_py_tmp22, align 8, !tbaa !5
  %cmp23 = icmp ne ptr %23, null
  br i1 %cmp23, label %if.then25, label %if.end27

if.then25:                                        ; preds = %do.body21
  %24 = load ptr, ptr %p, align 8, !tbaa !5
  %_format26 = getelementptr inbounds %struct.__pyx_array_obj, ptr %24, i32 0, i32 10
  store ptr null, ptr %_format26, align 8, !tbaa !135
  %25 = load ptr, ptr %_py_tmp22, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %25)
  br label %if.end27

if.end27:                                         ; preds = %if.then25, %do.body21
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp22) #13
  br label %do.cond28

do.cond28:                                        ; preds = %if.end27
  br label %do.end29

do.end29:                                         ; preds = %do.cond28
  %26 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call30 = call ptr @Py_TYPE(ptr noundef %26)
  %tp_free = getelementptr inbounds %struct._typeobject, ptr %call30, i32 0, i32 38
  %27 = load ptr, ptr %tp_free, align 8, !tbaa !136
  %28 = load ptr, ptr %o.addr, align 8, !tbaa !5
  call void %27(ptr noundef %28)
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.end29, %if.then13
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_tp_getattro_array(ptr noundef %o, ptr noundef %n) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %n.addr = alloca ptr, align 8
  %v = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %n, ptr %n.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %v) #13
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %n.addr, align 8, !tbaa !5
  %call = call ptr @PyObject_GenericGetAttr(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %v, align 8, !tbaa !5
  %2 = load ptr, ptr %v, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %3 = load ptr, ptr @PyExc_AttributeError, align 8, !tbaa !5
  %call1 = call i32 @PyErr_ExceptionMatches(ptr noundef %3)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @PyErr_Clear()
  %4 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %n.addr, align 8, !tbaa !5
  %call3 = call ptr @__pyx_array___getattr__(ptr noundef %4, ptr noundef %5)
  store ptr %call3, ptr %v, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load ptr, ptr %v, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %v) #13
  ret ptr %6
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_tp_new_array(ptr noundef %t, ptr noundef %a, ptr noundef %k) #0 {
entry:
  %retval = alloca ptr, align 8
  %t.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %k.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %o = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %t, ptr %t.addr, align 8, !tbaa !5
  store ptr %a, ptr %a.addr, align 8, !tbaa !5
  store ptr %k, ptr %k.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %o) #13
  %0 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 19
  %1 = load i64, ptr %tp_flags, align 8, !tbaa !58
  %and = and i64 %1, 1048576
  %cmp = icmp eq i64 %and, 0
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %tp_alloc = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 36
  %3 = load ptr, ptr %tp_alloc, align 8, !tbaa !137
  %4 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %call = call ptr %3(ptr noundef %4, i64 noundef 0)
  store ptr %call, ptr %o, align 8, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyBaseObject_Type, i32 0, i32 37), align 8, !tbaa !138
  %6 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %7 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %call2 = call ptr %5(ptr noundef %6, ptr noundef %7, ptr noundef null)
  store ptr %call2, ptr %o, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load ptr, ptr %o, align 8, !tbaa !5
  %tobool3 = icmp ne ptr %8, null
  %lnot4 = xor i1 %tobool3, true
  %lnot6 = xor i1 %lnot4, true
  %lnot8 = xor i1 %lnot6, true
  %lnot.ext9 = zext i1 %lnot8 to i32
  %conv10 = sext i32 %lnot.ext9 to i64
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0)
  %tobool12 = icmp ne i64 %expval11, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end14:                                         ; preds = %if.end
  %9 = load ptr, ptr %o, align 8, !tbaa !5
  store ptr %9, ptr %p, align 8, !tbaa !5
  %10 = load ptr, ptr @__pyx_vtabptr_array, align 8, !tbaa !5
  %11 = load ptr, ptr %p, align 8, !tbaa !5
  %__pyx_vtab = getelementptr inbounds %struct.__pyx_array_obj, ptr %11, i32 0, i32 1
  store ptr %10, ptr %__pyx_vtab, align 8, !tbaa !139
  %12 = load ptr, ptr %p, align 8, !tbaa !5
  %mode = getelementptr inbounds %struct.__pyx_array_obj, ptr %12, i32 0, i32 9
  store ptr @_Py_NoneStruct, ptr %mode, align 8, !tbaa !134
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %13 = load ptr, ptr %p, align 8, !tbaa !5
  %_format = getelementptr inbounds %struct.__pyx_array_obj, ptr %13, i32 0, i32 10
  store ptr @_Py_NoneStruct, ptr %_format, align 8, !tbaa !135
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %14 = load ptr, ptr %o, align 8, !tbaa !5
  %15 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %16 = load ptr, ptr %k.addr, align 8, !tbaa !5
  %call15 = call i32 @__pyx_array___cinit__(ptr noundef %14, ptr noundef %15, ptr noundef %16)
  %cmp16 = icmp slt i32 %call15, 0
  %lnot18 = xor i1 %cmp16, true
  %lnot20 = xor i1 %lnot18, true
  %lnot.ext21 = zext i1 %lnot20 to i32
  %conv22 = sext i32 %lnot.ext21 to i64
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 0)
  %tobool24 = icmp ne i64 %expval23, 0
  br i1 %tobool24, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.end14
  br label %bad

if.end26:                                         ; preds = %if.end14
  %17 = load ptr, ptr %o, align 8, !tbaa !5
  store ptr %17, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

bad:                                              ; preds = %if.then25
  %18 = load ptr, ptr %o, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %18)
  store ptr null, ptr %o, align 8, !tbaa !5
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %bad, %if.end26, %if.then13
  call void @llvm.lifetime.end.p0(i64 8, ptr %o) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  %19 = load ptr, ptr %retval, align 8
  ret ptr %19
}

declare i32 @PyObject_GC_IsFinalized(ptr noundef) #1

declare i32 @PyObject_CallFinalizerFromDealloc(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_SET_REFCNT(ptr noundef %ob, i64 noundef %refcnt) #3 {
entry:
  %ob.addr = alloca ptr, align 8
  %refcnt.addr = alloca i64, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !5
  store i64 %refcnt, ptr %refcnt.addr, align 8, !tbaa !27
  %0 = load i64, ptr %refcnt.addr, align 8, !tbaa !27
  %1 = load ptr, ptr %ob.addr, align 8, !tbaa !5
  %ob_refcnt = getelementptr inbounds %struct._object, ptr %1, i32 0, i32 0
  store i64 %0, ptr %ob_refcnt, align 8, !tbaa !28
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @Py_REFCNT(ptr noundef %ob) #3 {
entry:
  %ob.addr = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %ob.addr, align 8, !tbaa !5
  %ob_refcnt = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 0
  %1 = load i64, ptr %ob_refcnt, align 8, !tbaa !28
  ret i64 %1
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_array___dealloc__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @__pyx_array___pyx_pf_15View_dot_MemoryView_5array_4__dealloc__(ptr noundef %0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_array___pyx_pf_15View_dot_MemoryView_5array_4__dealloc__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %callback_free_data = getelementptr inbounds %struct.__pyx_array_obj, ptr %0, i32 0, i32 11
  %1 = load ptr, ptr %callback_free_data, align 8, !tbaa !140
  %cmp = icmp ne ptr %1, null
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %callback_free_data3 = getelementptr inbounds %struct.__pyx_array_obj, ptr %3, i32 0, i32 11
  %4 = load ptr, ptr %callback_free_data3, align 8, !tbaa !140
  %5 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__pyx_array_obj, ptr %5, i32 0, i32 2
  %6 = load ptr, ptr %data, align 8, !tbaa !141
  call void %4(ptr noundef %6)
  br label %__pyx_L3

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %free_data = getelementptr inbounds %struct.__pyx_array_obj, ptr %7, i32 0, i32 12
  %8 = load i32, ptr %free_data, align 8, !tbaa !142
  %cmp4 = icmp ne i32 %8, 0
  %conv5 = zext i1 %cmp4 to i32
  store i32 %conv5, ptr %__pyx_t_1, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool6 = icmp ne i32 %9, 0
  br i1 %tobool6, label %if.then7, label %if.end15

if.then7:                                         ; preds = %if.end
  %10 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %dtype_is_object = getelementptr inbounds %struct.__pyx_array_obj, ptr %10, i32 0, i32 13
  %11 = load i32, ptr %dtype_is_object, align 4, !tbaa !110
  %cmp8 = icmp ne i32 %11, 0
  %conv9 = zext i1 %cmp8 to i32
  store i32 %conv9, ptr %__pyx_t_1, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool10 = icmp ne i32 %12, 0
  br i1 %tobool10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %if.then7
  %13 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %data12 = getelementptr inbounds %struct.__pyx_array_obj, ptr %13, i32 0, i32 2
  %14 = load ptr, ptr %data12, align 8, !tbaa !141
  %15 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_shape = getelementptr inbounds %struct.__pyx_array_obj, ptr %15, i32 0, i32 6
  %16 = load ptr, ptr %_shape, align 8, !tbaa !143
  %17 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_strides = getelementptr inbounds %struct.__pyx_array_obj, ptr %17, i32 0, i32 7
  %18 = load ptr, ptr %_strides, align 8, !tbaa !144
  %19 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %ndim = getelementptr inbounds %struct.__pyx_array_obj, ptr %19, i32 0, i32 5
  %20 = load i32, ptr %ndim, align 8, !tbaa !145
  call void @__pyx_memoryview_refcount_objects_in_slice(ptr noundef %14, ptr noundef %16, ptr noundef %18, i32 noundef %20, i32 noundef 0)
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.then7
  %21 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %data14 = getelementptr inbounds %struct.__pyx_array_obj, ptr %21, i32 0, i32 2
  %22 = load ptr, ptr %data14, align 8, !tbaa !141
  call void @free(ptr noundef %22) #13
  br label %if.end15

if.end15:                                         ; preds = %if.end13, %if.end
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end15, %if.then
  %23 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_shape16 = getelementptr inbounds %struct.__pyx_array_obj, ptr %23, i32 0, i32 6
  %24 = load ptr, ptr %_shape16, align 8, !tbaa !143
  call void @PyObject_Free(ptr noundef %24)
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_memoryview_refcount_objects_in_slice(ptr noundef %__pyx_v_data, ptr noundef %__pyx_v_shape, ptr noundef %__pyx_v_strides, i32 noundef %__pyx_v_ndim, i32 noundef %__pyx_v_inc) #0 {
entry:
  %__pyx_v_data.addr = alloca ptr, align 8
  %__pyx_v_shape.addr = alloca ptr, align 8
  %__pyx_v_strides.addr = alloca ptr, align 8
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_inc.addr = alloca i32, align 4
  %__pyx_v_i = alloca i64, align 8
  %__pyx_t_1 = alloca i64, align 8
  %__pyx_t_2 = alloca i64, align 8
  %__pyx_t_3 = alloca i64, align 8
  %__pyx_t_4 = alloca i32, align 4
  store ptr %__pyx_v_data, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  store ptr %__pyx_v_shape, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  store ptr %__pyx_v_strides, ptr %__pyx_v_strides.addr, align 8, !tbaa !5
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i32 %__pyx_v_inc, ptr %__pyx_v_inc.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  %0 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  %arrayidx = getelementptr i64, ptr %0, i64 0
  %1 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %1, ptr %__pyx_t_1, align 8, !tbaa !27
  %2 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  store i64 %2, ptr %__pyx_t_2, align 8, !tbaa !27
  store i64 0, ptr %__pyx_t_3, align 8, !tbaa !27
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  %4 = load i64, ptr %__pyx_t_2, align 8, !tbaa !27
  %cmp = icmp slt i64 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  store i64 %5, ptr %__pyx_v_i, align 8, !tbaa !27
  %6 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %cmp1 = icmp eq i32 %6, 1
  %conv = zext i1 %cmp1 to i32
  %cmp2 = icmp ne i32 %conv, 0
  %conv3 = zext i1 %cmp2 to i32
  store i32 %conv3, ptr %__pyx_t_4, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.then, label %if.end10

if.then:                                          ; preds = %for.body
  %8 = load i32, ptr %__pyx_v_inc.addr, align 4, !tbaa !9
  %cmp4 = icmp ne i32 %8, 0
  %conv5 = zext i1 %cmp4 to i32
  store i32 %conv5, ptr %__pyx_t_4, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool6 = icmp ne i32 %9, 0
  br i1 %tobool6, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then
  %10 = load ptr, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  %arrayidx8 = getelementptr ptr, ptr %10, i64 0
  %11 = load ptr, ptr %arrayidx8, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %11)
  br label %__pyx_L6

if.end:                                           ; preds = %if.then
  %12 = load ptr, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  %arrayidx9 = getelementptr ptr, ptr %12, i64 0
  %13 = load ptr, ptr %arrayidx9, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %13)
  br label %__pyx_L6

__pyx_L6:                                         ; preds = %if.end, %if.then7
  br label %__pyx_L5

if.end10:                                         ; preds = %for.body
  %14 = load ptr, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  %add.ptr = getelementptr i64, ptr %15, i64 1
  %16 = load ptr, ptr %__pyx_v_strides.addr, align 8, !tbaa !5
  %add.ptr11 = getelementptr i64, ptr %16, i64 1
  %17 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %sub = sub i32 %17, 1
  %18 = load i32, ptr %__pyx_v_inc.addr, align 4, !tbaa !9
  call void @__pyx_memoryview_refcount_objects_in_slice(ptr noundef %14, ptr noundef %add.ptr, ptr noundef %add.ptr11, i32 noundef %sub, i32 noundef %18)
  br label %__pyx_L5

__pyx_L5:                                         ; preds = %if.end10, %__pyx_L6
  %19 = load ptr, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  %20 = load ptr, ptr %__pyx_v_strides.addr, align 8, !tbaa !5
  %arrayidx12 = getelementptr i64, ptr %20, i64 0
  %21 = load i64, ptr %arrayidx12, align 8, !tbaa !27
  %add.ptr13 = getelementptr i8, ptr %19, i64 %21
  store ptr %add.ptr13, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %__pyx_L5
  %22 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  %add = add i64 %22, 1
  store i64 %add, ptr %__pyx_t_3, align 8, !tbaa !27
  br label %for.cond, !llvm.loop !146

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_i) #13
  ret void
}

; Function Attrs: nounwind
declare void @free(ptr noundef) #7

; Function Attrs: nounwind uwtable
define internal i64 @__pyx_array___len__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca i64, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call i64 @__pyx_array___pyx_pf_15View_dot_MemoryView_5array_6__len__(ptr noundef %0)
  store i64 %call, ptr %__pyx_r, align 8, !tbaa !27
  %1 = load i64, ptr %__pyx_r, align 8, !tbaa !27
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret i64 %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_sq_item_array(ptr noundef %o, i64 noundef %i) #0 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %i.addr = alloca i64, align 8
  %r = alloca ptr, align 8
  %x = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store i64 %i, ptr %i.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #13
  %0 = load i64, ptr %i.addr, align 8, !tbaa !27
  %call = call ptr @PyLong_FromSsize_t(i64 noundef %0)
  store ptr %call, ptr %x, align 8, !tbaa !5
  %1 = load ptr, ptr %x, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call1 = call ptr @Py_TYPE(ptr noundef %2)
  %tp_as_mapping = getelementptr inbounds %struct._typeobject, ptr %call1, i32 0, i32 12
  %3 = load ptr, ptr %tp_as_mapping, align 8, !tbaa !147
  %mp_subscript = getelementptr inbounds %struct.PyMappingMethods, ptr %3, i32 0, i32 1
  %4 = load ptr, ptr %mp_subscript, align 8, !tbaa !148
  %5 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %6 = load ptr, ptr %x, align 8, !tbaa !5
  %call2 = call ptr %4(ptr noundef %5, ptr noundef %6)
  store ptr %call2, ptr %r, align 8, !tbaa !5
  %7 = load ptr, ptr %x, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %7)
  %8 = load ptr, ptr %r, align 8, !tbaa !5
  store ptr %8, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #13
  %9 = load ptr, ptr %retval, align 8
  ret ptr %9
}

; Function Attrs: nounwind uwtable
define internal i64 @__pyx_array___pyx_pf_15View_dot_MemoryView_5array_6__len__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca i64, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_shape = getelementptr inbounds %struct.__pyx_array_obj, ptr %0, i32 0, i32 6
  %1 = load ptr, ptr %_shape, align 8, !tbaa !143
  %arrayidx = getelementptr i64, ptr %1, i64 0
  %2 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %2, ptr %__pyx_r, align 8, !tbaa !27
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %entry
  %3 = load i64, ptr %__pyx_r, align 8, !tbaa !27
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret i64 %3
}

declare ptr @PyLong_FromSsize_t(i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_array___getitem__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_item) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_item.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_item, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_array___pyx_pf_15View_dot_MemoryView_5array_10__getitem__(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %2
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_mp_ass_subscript_array(ptr noundef %o, ptr noundef %i, ptr noundef %v) #0 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %i.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %i, ptr %i.addr, align 8, !tbaa !5
  store ptr %v, ptr %v.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %i.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %call = call i32 @__pyx_array___setitem__(ptr noundef %1, ptr noundef %2, ptr noundef %3)
  store i32 %call, ptr %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %4 = load ptr, ptr @PyExc_NotImplementedError, align 8, !tbaa !5
  %5 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call1 = call ptr @Py_TYPE(ptr noundef %5)
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call1, i32 0, i32 1
  %6 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %call2 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %4, ptr noundef @.str.86, ptr noundef %6)
  store i32 -1, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, ptr %retval, align 4
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_array___pyx_pf_15View_dot_MemoryView_5array_10__getitem__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_item) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_item.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_item, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %2 = load ptr, ptr @__pyx_n_s_memview, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %1, ptr noundef %2)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 238, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7543, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  %call4 = call ptr @__Pyx_PyObject_GetItem(ptr noundef %8, ptr noundef %9)
  store ptr %call4, ptr %__pyx_t_2, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %10, null
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  %11 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %11, ptr %__pyx_filename, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 238, ptr %__pyx_lineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7545, ptr %__pyx_clineno, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end16:                                         ; preds = %if.end
  %15 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %15)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %16, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then15, %if.then
  %17 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %17)
  %18 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %18)
  %19 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %21 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.83, i32 noundef %19, i32 noundef %20, ptr noundef %21)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end16
  %22 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %22
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_GetItem(ptr noundef %obj, ptr noundef %key) #3 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %key.addr = alloca ptr, align 8
  %m = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store ptr %key, ptr %key.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %m) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %tp_as_mapping = getelementptr inbounds %struct._typeobject, ptr %call, i32 0, i32 12
  %1 = load ptr, ptr %tp_as_mapping, align 8, !tbaa !147
  store ptr %1, ptr %m, align 8, !tbaa !5
  %2 = load ptr, ptr %m, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %3 = load ptr, ptr %m, align 8, !tbaa !5
  %mp_subscript = getelementptr inbounds %struct.PyMappingMethods, ptr %3, i32 0, i32 1
  %4 = load ptr, ptr %mp_subscript, align 8, !tbaa !148
  %tobool1 = icmp ne ptr %4, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ]
  %lnot = xor i1 %5, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %land.end
  %6 = load ptr, ptr %m, align 8, !tbaa !5
  %mp_subscript4 = getelementptr inbounds %struct.PyMappingMethods, ptr %6, i32 0, i32 1
  %7 = load ptr, ptr %mp_subscript4, align 8, !tbaa !148
  %8 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %key.addr, align 8, !tbaa !5
  %call5 = call ptr %7(ptr noundef %8, ptr noundef %9)
  store ptr %call5, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %land.end
  %10 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %11 = load ptr, ptr %key.addr, align 8, !tbaa !5
  %call6 = call ptr @__Pyx_PyObject_GetIndex(ptr noundef %10, ptr noundef %11)
  store ptr %call6, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %m) #13
  %12 = load ptr, ptr %retval, align 8
  ret ptr %12
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyObject_GetIndex(ptr noundef %obj, ptr noundef %index) #0 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %index.addr = alloca ptr, align 8
  %runerr = alloca ptr, align 8
  %key_value = alloca i64, align 8
  %m = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store ptr %index, ptr %index.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %runerr) #13
  store ptr null, ptr %runerr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %key_value) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %m) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %tp_as_sequence = getelementptr inbounds %struct._typeobject, ptr %call, i32 0, i32 11
  %1 = load ptr, ptr %tp_as_sequence, align 8, !tbaa !150
  store ptr %1, ptr %m, align 8, !tbaa !5
  %2 = load ptr, ptr %m, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %3 = load ptr, ptr %m, align 8, !tbaa !5
  %sq_item = getelementptr inbounds %struct.PySequenceMethods, ptr %3, i32 0, i32 3
  %4 = load ptr, ptr %sq_item, align 8, !tbaa !151
  %tobool1 = icmp ne ptr %4, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ]
  %lnot = xor i1 %5, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %land.end
  %6 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %7 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call5 = call ptr @Py_TYPE(ptr noundef %7)
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call5, i32 0, i32 1
  %8 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %call6 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %6, ptr noundef @.str.84, ptr noundef %8)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %land.end
  %9 = load ptr, ptr %index.addr, align 8, !tbaa !5
  %call7 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %9)
  store i64 %call7, ptr %key_value, align 8, !tbaa !27
  %10 = load i64, ptr %key_value, align 8, !tbaa !27
  %cmp = icmp ne i64 %10, -1
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end
  %call9 = call ptr @PyErr_Occurred()
  store ptr %call9, ptr %runerr, align 8, !tbaa !5
  %tobool10 = icmp ne ptr %call9, null
  %lnot11 = xor i1 %tobool10, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end
  %11 = phi i1 [ true, %if.end ], [ %lnot11, %lor.rhs ]
  %lnot13 = xor i1 %11, true
  %lnot15 = xor i1 %lnot13, true
  %lnot.ext16 = zext i1 %lnot15 to i32
  %conv17 = sext i32 %lnot.ext16 to i64
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 1)
  %tobool19 = icmp ne i64 %expval18, 0
  br i1 %tobool19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %lor.end
  %12 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %13 = load i64, ptr %key_value, align 8, !tbaa !27
  %call21 = call ptr @__Pyx_GetItemInt_Fast(ptr noundef %12, i64 noundef %13, i32 noundef 0, i32 noundef 1, i32 noundef 1)
  store ptr %call21, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end22:                                         ; preds = %lor.end
  %14 = load ptr, ptr %runerr, align 8, !tbaa !5
  %15 = load ptr, ptr @PyExc_OverflowError, align 8, !tbaa !5
  %call23 = call i32 @PyErr_GivenExceptionMatches(ptr noundef %14, ptr noundef %15)
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.then25, label %if.end29

if.then25:                                        ; preds = %if.end22
  call void @PyErr_Clear()
  %16 = load ptr, ptr @PyExc_IndexError, align 8, !tbaa !5
  %17 = load ptr, ptr %index.addr, align 8, !tbaa !5
  %call26 = call ptr @Py_TYPE(ptr noundef %17)
  %tp_name27 = getelementptr inbounds %struct._typeobject, ptr %call26, i32 0, i32 1
  %18 = load ptr, ptr %tp_name27, align 8, !tbaa !56
  %call28 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %16, ptr noundef @.str.85, ptr noundef %18)
  br label %if.end29

if.end29:                                         ; preds = %if.then25, %if.end22
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end29, %if.then20, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %m) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %key_value) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %runerr) #13
  %19 = load ptr, ptr %retval, align 8
  ret ptr %19
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %b) #3 {
entry:
  %retval = alloca i64, align 8
  %b.addr = alloca ptr, align 8
  %ival = alloca i64, align 8
  %x = alloca ptr, align 8
  %digits = alloca ptr, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %b, ptr %b.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %ival) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #13
  %0 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %call = call i32 @Py_IS_TYPE(ptr noundef %0, ptr noundef @PyLong_Type)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end44

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %digits) #13
  %1 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %ob_digit = getelementptr inbounds %struct._longobject, ptr %1, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], ptr %ob_digit, i64 0, i64 0
  store ptr %arraydecay, ptr %digits, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #13
  %2 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %call3 = call i64 @Py_SIZE(ptr noundef %2)
  store i64 %call3, ptr %size, align 8, !tbaa !27
  %3 = load i64, ptr %size, align 8, !tbaa !27
  %neg = sub i64 0, %3
  %abscond = icmp slt i64 %3, 0
  %abs = select i1 %abscond, i64 %neg, i64 %3
  %cmp = icmp sle i64 %abs, 1
  %lnot5 = xor i1 %cmp, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1)
  %tobool11 = icmp ne i64 %expval10, 0
  br i1 %tobool11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.then
  %4 = load i64, ptr %size, align 8, !tbaa !27
  %tobool13 = icmp ne i64 %4, 0
  %lnot14 = xor i1 %tobool13, true
  %lnot16 = xor i1 %lnot14, true
  %lnot.ext17 = zext i1 %lnot16 to i32
  %conv18 = sext i32 %lnot.ext17 to i64
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 1)
  %tobool20 = icmp ne i64 %expval19, 0
  br i1 %tobool20, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then12
  %5 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx = getelementptr i32, ptr %5, i64 0
  %6 = load i32, ptr %arrayidx, align 4, !tbaa !9
  br label %cond.end

cond.false:                                       ; preds = %if.then12
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ 0, %cond.false ]
  %conv21 = zext i32 %cond to i64
  store i64 %conv21, ptr %ival, align 8, !tbaa !27
  %7 = load i64, ptr %size, align 8, !tbaa !27
  %cmp22 = icmp eq i64 %7, -1
  br i1 %cmp22, label %if.then24, label %if.end

if.then24:                                        ; preds = %cond.end
  %8 = load i64, ptr %ival, align 8, !tbaa !27
  %sub = sub i64 0, %8
  store i64 %sub, ptr %ival, align 8, !tbaa !27
  br label %if.end

if.end:                                           ; preds = %if.then24, %cond.end
  %9 = load i64, ptr %ival, align 8, !tbaa !27
  store i64 %9, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.else:                                          ; preds = %if.then
  %10 = load i64, ptr %size, align 8, !tbaa !27
  switch i64 %10, label %sw.epilog [
    i64 2, label %sw.bb
    i64 -2, label %sw.bb29
    i64 3, label %sw.bb37
    i64 -3, label %sw.bb38
    i64 4, label %sw.bb39
    i64 -4, label %sw.bb40
  ]

sw.bb:                                            ; preds = %if.else
  %11 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx25 = getelementptr i32, ptr %11, i64 1
  %12 = load i32, ptr %arrayidx25, align 4, !tbaa !9
  %conv26 = zext i32 %12 to i64
  %shl = shl i64 %conv26, 30
  %13 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx27 = getelementptr i32, ptr %13, i64 0
  %14 = load i32, ptr %arrayidx27, align 4, !tbaa !9
  %conv28 = zext i32 %14 to i64
  %or = or i64 %shl, %conv28
  store i64 %or, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.bb29:                                          ; preds = %if.else
  %15 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx30 = getelementptr i32, ptr %15, i64 1
  %16 = load i32, ptr %arrayidx30, align 4, !tbaa !9
  %conv31 = zext i32 %16 to i64
  %shl32 = shl i64 %conv31, 30
  %17 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx33 = getelementptr i32, ptr %17, i64 0
  %18 = load i32, ptr %arrayidx33, align 4, !tbaa !9
  %conv34 = zext i32 %18 to i64
  %or35 = or i64 %shl32, %conv34
  %sub36 = sub i64 0, %or35
  store i64 %sub36, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.bb37:                                          ; preds = %if.else
  br label %sw.epilog

sw.bb38:                                          ; preds = %if.else
  br label %sw.epilog

sw.bb39:                                          ; preds = %if.else
  br label %sw.epilog

sw.bb40:                                          ; preds = %if.else
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.else, %sw.bb40, %sw.bb39, %sw.bb38, %sw.bb37
  br label %if.end41

if.end41:                                         ; preds = %sw.epilog
  %19 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %call42 = call i64 @PyLong_AsSsize_t(ptr noundef %19)
  store i64 %call42, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end41, %sw.bb29, %sw.bb, %if.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %digits) #13
  br label %cleanup50

if.end44:                                         ; preds = %entry
  %20 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %call45 = call ptr @PyNumber_Index(ptr noundef %20)
  store ptr %call45, ptr %x, align 8, !tbaa !5
  %21 = load ptr, ptr %x, align 8, !tbaa !5
  %tobool46 = icmp ne ptr %21, null
  br i1 %tobool46, label %if.end48, label %if.then47

if.then47:                                        ; preds = %if.end44
  store i64 -1, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup50

if.end48:                                         ; preds = %if.end44
  %22 = load ptr, ptr %x, align 8, !tbaa !5
  %call49 = call i64 @PyLong_AsSsize_t(ptr noundef %22)
  store i64 %call49, ptr %ival, align 8, !tbaa !27
  %23 = load ptr, ptr %x, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %23)
  %24 = load i64, ptr %ival, align 8, !tbaa !27
  store i64 %24, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup50

cleanup50:                                        ; preds = %if.end48, %if.then47, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %ival) #13
  %25 = load i64, ptr %retval, align 8
  ret i64 %25
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_GetItemInt_Fast(ptr noundef %o, i64 noundef %i, i32 noundef %is_list, i32 noundef %wraparound, i32 noundef %boundscheck) #3 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %i.addr = alloca i64, align 8
  %is_list.addr = alloca i32, align 4
  %wraparound.addr = alloca i32, align 4
  %boundscheck.addr = alloca i32, align 4
  %n = alloca i64, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %n27 = alloca i64, align 8
  %r61 = alloca ptr, align 8
  %m = alloca ptr, align 8
  %l = alloca i64, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store i64 %i, ptr %i.addr, align 8, !tbaa !27
  store i32 %is_list, ptr %is_list.addr, align 4, !tbaa !9
  store i32 %wraparound, ptr %wraparound.addr, align 4, !tbaa !9
  store i32 %boundscheck, ptr %boundscheck.addr, align 4, !tbaa !9
  %0 = load i32, ptr %is_list.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call i32 @Py_IS_TYPE(ptr noundef %1, ptr noundef @PyList_Type)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #13
  %2 = load i32, ptr %wraparound.addr, align 4, !tbaa !9
  %tobool2 = icmp ne i32 %2, 0
  %lnot = xor i1 %tobool2, true
  %lnot.ext = zext i1 %lnot to i32
  %conv = sext i32 %lnot.ext to i64
  %3 = load i64, ptr %i.addr, align 8, !tbaa !27
  %cmp = icmp sge i64 %3, 0
  %lnot4 = xor i1 %cmp, true
  %lnot6 = xor i1 %lnot4, true
  %lnot.ext7 = zext i1 %lnot6 to i32
  %conv8 = sext i32 %lnot.ext7 to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv8, i64 1)
  %or = or i64 %conv, %expval
  %tobool9 = icmp ne i64 %or, 0
  br i1 %tobool9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %4 = load i64, ptr %i.addr, align 8, !tbaa !27
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %5 = load i64, ptr %i.addr, align 8, !tbaa !27
  %6 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call10 = call i64 @PyList_GET_SIZE(ptr noundef %6)
  %add = add i64 %5, %call10
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %add, %cond.false ]
  store i64 %cond, ptr %n, align 8, !tbaa !27
  %7 = load i32, ptr %boundscheck.addr, align 4, !tbaa !9
  %tobool11 = icmp ne i32 %7, 0
  br i1 %tobool11, label %lor.lhs.false12, label %if.then23

lor.lhs.false12:                                  ; preds = %cond.end
  %8 = load i64, ptr %n, align 8, !tbaa !27
  %9 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call13 = call i64 @PyList_GET_SIZE(ptr noundef %9)
  %call14 = call i32 @__Pyx_is_valid_index(i64 noundef %8, i64 noundef %call13)
  %tobool15 = icmp ne i32 %call14, 0
  %lnot16 = xor i1 %tobool15, true
  %lnot18 = xor i1 %lnot16, true
  %lnot.ext19 = zext i1 %lnot18 to i32
  %conv20 = sext i32 %lnot.ext19 to i64
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 1)
  %tobool22 = icmp ne i64 %expval21, 0
  br i1 %tobool22, label %if.then23, label %if.end

if.then23:                                        ; preds = %lor.lhs.false12, %cond.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #13
  %10 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyListObject, ptr %10, i32 0, i32 1
  %11 = load ptr, ptr %ob_item, align 8, !tbaa !116
  %12 = load i64, ptr %n, align 8, !tbaa !27
  %arrayidx = getelementptr ptr, ptr %11, i64 %12
  %13 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %13, ptr %r, align 8, !tbaa !5
  %14 = load ptr, ptr %r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %14)
  %15 = load ptr, ptr %r, align 8, !tbaa !5
  store ptr %15, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #13
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false12
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then23
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end131

if.else:                                          ; preds = %lor.lhs.false
  %16 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call24 = call i32 @Py_IS_TYPE(ptr noundef %16, ptr noundef @PyTuple_Type)
  %tobool25 = icmp ne i32 %call24, 0
  br i1 %tobool25, label %if.then26, label %if.else69

if.then26:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %n27) #13
  %17 = load i32, ptr %wraparound.addr, align 4, !tbaa !9
  %tobool28 = icmp ne i32 %17, 0
  %lnot29 = xor i1 %tobool28, true
  %lnot.ext30 = zext i1 %lnot29 to i32
  %conv31 = sext i32 %lnot.ext30 to i64
  %18 = load i64, ptr %i.addr, align 8, !tbaa !27
  %cmp32 = icmp sge i64 %18, 0
  %lnot34 = xor i1 %cmp32, true
  %lnot36 = xor i1 %lnot34, true
  %lnot.ext37 = zext i1 %lnot36 to i32
  %conv38 = sext i32 %lnot.ext37 to i64
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 1)
  %or40 = or i64 %conv31, %expval39
  %tobool41 = icmp ne i64 %or40, 0
  br i1 %tobool41, label %cond.true42, label %cond.false43

cond.true42:                                      ; preds = %if.then26
  %19 = load i64, ptr %i.addr, align 8, !tbaa !27
  br label %cond.end46

cond.false43:                                     ; preds = %if.then26
  %20 = load i64, ptr %i.addr, align 8, !tbaa !27
  %21 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call44 = call i64 @PyTuple_GET_SIZE(ptr noundef %21)
  %add45 = add i64 %20, %call44
  br label %cond.end46

cond.end46:                                       ; preds = %cond.false43, %cond.true42
  %cond47 = phi i64 [ %19, %cond.true42 ], [ %add45, %cond.false43 ]
  store i64 %cond47, ptr %n27, align 8, !tbaa !27
  %22 = load i32, ptr %boundscheck.addr, align 4, !tbaa !9
  %tobool48 = icmp ne i32 %22, 0
  br i1 %tobool48, label %lor.lhs.false49, label %if.then60

lor.lhs.false49:                                  ; preds = %cond.end46
  %23 = load i64, ptr %n27, align 8, !tbaa !27
  %24 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call50 = call i64 @PyTuple_GET_SIZE(ptr noundef %24)
  %call51 = call i32 @__Pyx_is_valid_index(i64 noundef %23, i64 noundef %call50)
  %tobool52 = icmp ne i32 %call51, 0
  %lnot53 = xor i1 %tobool52, true
  %lnot55 = xor i1 %lnot53, true
  %lnot.ext56 = zext i1 %lnot55 to i32
  %conv57 = sext i32 %lnot.ext56 to i64
  %expval58 = call i64 @llvm.expect.i64(i64 %conv57, i64 1)
  %tobool59 = icmp ne i64 %expval58, 0
  br i1 %tobool59, label %if.then60, label %if.end65

if.then60:                                        ; preds = %lor.lhs.false49, %cond.end46
  call void @llvm.lifetime.start.p0(i64 8, ptr %r61) #13
  %25 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %ob_item62 = getelementptr inbounds %struct.PyTupleObject, ptr %25, i32 0, i32 1
  %26 = load i64, ptr %n27, align 8, !tbaa !27
  %arrayidx63 = getelementptr [1 x ptr], ptr %ob_item62, i64 0, i64 %26
  %27 = load ptr, ptr %arrayidx63, align 8, !tbaa !5
  store ptr %27, ptr %r61, align 8, !tbaa !5
  %28 = load ptr, ptr %r61, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %28)
  %29 = load ptr, ptr %r61, align 8, !tbaa !5
  store ptr %29, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %r61) #13
  br label %cleanup66

if.end65:                                         ; preds = %lor.lhs.false49
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup66

cleanup66:                                        ; preds = %if.end65, %if.then60
  call void @llvm.lifetime.end.p0(i64 8, ptr %n27) #13
  %cleanup.dest67 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest67, label %unreachable [
    i32 0, label %cleanup.cont68
    i32 1, label %return
  ]

cleanup.cont68:                                   ; preds = %cleanup66
  br label %if.end130

if.else69:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %m) #13
  %30 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call70 = call ptr @Py_TYPE(ptr noundef %30)
  %tp_as_sequence = getelementptr inbounds %struct._typeobject, ptr %call70, i32 0, i32 11
  %31 = load ptr, ptr %tp_as_sequence, align 8, !tbaa !150
  store ptr %31, ptr %m, align 8, !tbaa !5
  %32 = load ptr, ptr %m, align 8, !tbaa !5
  %tobool71 = icmp ne ptr %32, null
  br i1 %tobool71, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.else69
  %33 = load ptr, ptr %m, align 8, !tbaa !5
  %sq_item = getelementptr inbounds %struct.PySequenceMethods, ptr %33, i32 0, i32 3
  %34 = load ptr, ptr %sq_item, align 8, !tbaa !151
  %tobool72 = icmp ne ptr %34, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else69
  %35 = phi i1 [ false, %if.else69 ], [ %tobool72, %land.rhs ]
  %lnot73 = xor i1 %35, true
  %lnot75 = xor i1 %lnot73, true
  %lnot.ext76 = zext i1 %lnot75 to i32
  %conv77 = sext i32 %lnot.ext76 to i64
  %expval78 = call i64 @llvm.expect.i64(i64 %conv77, i64 1)
  %tobool79 = icmp ne i64 %expval78, 0
  br i1 %tobool79, label %if.then80, label %if.end126

if.then80:                                        ; preds = %land.end
  %36 = load i32, ptr %wraparound.addr, align 4, !tbaa !9
  %tobool81 = icmp ne i32 %36, 0
  br i1 %tobool81, label %land.lhs.true, label %if.end123

land.lhs.true:                                    ; preds = %if.then80
  %37 = load i64, ptr %i.addr, align 8, !tbaa !27
  %cmp82 = icmp slt i64 %37, 0
  %lnot84 = xor i1 %cmp82, true
  %lnot86 = xor i1 %lnot84, true
  %lnot.ext87 = zext i1 %lnot86 to i32
  %conv88 = sext i32 %lnot.ext87 to i64
  %expval89 = call i64 @llvm.expect.i64(i64 %conv88, i64 0)
  %tobool90 = icmp ne i64 %expval89, 0
  br i1 %tobool90, label %land.lhs.true91, label %if.end123

land.lhs.true91:                                  ; preds = %land.lhs.true
  %38 = load ptr, ptr %m, align 8, !tbaa !5
  %sq_length = getelementptr inbounds %struct.PySequenceMethods, ptr %38, i32 0, i32 0
  %39 = load ptr, ptr %sq_length, align 8, !tbaa !153
  %tobool92 = icmp ne ptr %39, null
  %lnot93 = xor i1 %tobool92, true
  %lnot95 = xor i1 %lnot93, true
  %lnot.ext96 = zext i1 %lnot95 to i32
  %conv97 = sext i32 %lnot.ext96 to i64
  %expval98 = call i64 @llvm.expect.i64(i64 %conv97, i64 1)
  %tobool99 = icmp ne i64 %expval98, 0
  br i1 %tobool99, label %if.then100, label %if.end123

if.then100:                                       ; preds = %land.lhs.true91
  call void @llvm.lifetime.start.p0(i64 8, ptr %l) #13
  %40 = load ptr, ptr %m, align 8, !tbaa !5
  %sq_length101 = getelementptr inbounds %struct.PySequenceMethods, ptr %40, i32 0, i32 0
  %41 = load ptr, ptr %sq_length101, align 8, !tbaa !153
  %42 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call102 = call i64 %41(ptr noundef %42)
  store i64 %call102, ptr %l, align 8, !tbaa !27
  %43 = load i64, ptr %l, align 8, !tbaa !27
  %cmp103 = icmp sge i64 %43, 0
  %lnot105 = xor i1 %cmp103, true
  %lnot107 = xor i1 %lnot105, true
  %lnot.ext108 = zext i1 %lnot107 to i32
  %conv109 = sext i32 %lnot.ext108 to i64
  %expval110 = call i64 @llvm.expect.i64(i64 %conv109, i64 1)
  %tobool111 = icmp ne i64 %expval110, 0
  br i1 %tobool111, label %if.then112, label %if.else114

if.then112:                                       ; preds = %if.then100
  %44 = load i64, ptr %l, align 8, !tbaa !27
  %45 = load i64, ptr %i.addr, align 8, !tbaa !27
  %add113 = add i64 %45, %44
  store i64 %add113, ptr %i.addr, align 8, !tbaa !27
  br label %if.end119

if.else114:                                       ; preds = %if.then100
  %46 = load ptr, ptr @PyExc_OverflowError, align 8, !tbaa !5
  %call115 = call i32 @PyErr_ExceptionMatches(ptr noundef %46)
  %tobool116 = icmp ne i32 %call115, 0
  br i1 %tobool116, label %if.end118, label %if.then117

if.then117:                                       ; preds = %if.else114
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup120

if.end118:                                        ; preds = %if.else114
  call void @PyErr_Clear()
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.then112
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup120

cleanup120:                                       ; preds = %if.end119, %if.then117
  call void @llvm.lifetime.end.p0(i64 8, ptr %l) #13
  %cleanup.dest121 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest121, label %cleanup127 [
    i32 0, label %cleanup.cont122
  ]

cleanup.cont122:                                  ; preds = %cleanup120
  br label %if.end123

if.end123:                                        ; preds = %cleanup.cont122, %land.lhs.true91, %land.lhs.true, %if.then80
  %47 = load ptr, ptr %m, align 8, !tbaa !5
  %sq_item124 = getelementptr inbounds %struct.PySequenceMethods, ptr %47, i32 0, i32 3
  %48 = load ptr, ptr %sq_item124, align 8, !tbaa !151
  %49 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %50 = load i64, ptr %i.addr, align 8, !tbaa !27
  %call125 = call ptr %48(ptr noundef %49, i64 noundef %50)
  store ptr %call125, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup127

if.end126:                                        ; preds = %land.end
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup127

cleanup127:                                       ; preds = %if.end126, %if.end123, %cleanup120
  call void @llvm.lifetime.end.p0(i64 8, ptr %m) #13
  %cleanup.dest128 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest128, label %unreachable [
    i32 0, label %cleanup.cont129
    i32 1, label %return
  ]

cleanup.cont129:                                  ; preds = %cleanup127
  br label %if.end130

if.end130:                                        ; preds = %cleanup.cont129, %cleanup.cont68
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %cleanup.cont
  %51 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %52 = load i64, ptr %i.addr, align 8, !tbaa !27
  %call132 = call ptr @PyLong_FromSsize_t(i64 noundef %52)
  %call133 = call ptr @__Pyx_GetItemInt_Generic(ptr noundef %51, ptr noundef %call132)
  store ptr %call133, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end131, %cleanup127, %cleanup66, %cleanup
  %53 = load ptr, ptr %retval, align 8
  ret ptr %53

unreachable:                                      ; preds = %cleanup127, %cleanup66, %cleanup
  unreachable
}

declare i32 @PyErr_GivenExceptionMatches(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @Py_IS_TYPE(ptr noundef %ob, ptr noundef %type) #3 {
entry:
  %ob.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !5
  store ptr %type, ptr %type.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %ob.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %1 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %call, %1
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

declare i64 @PyLong_AsSsize_t(ptr noundef) #1

declare ptr @PyNumber_Index(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyList_GET_SIZE(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  %list = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %list) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  store ptr %0, ptr %list, align 8, !tbaa !5
  %1 = load ptr, ptr %list, align 8, !tbaa !5
  %call = call i64 @Py_SIZE(ptr noundef %1)
  call void @llvm.lifetime.end.p0(i64 8, ptr %list) #13
  ret i64 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_is_valid_index(i64 noundef %i, i64 noundef %limit) #3 {
entry:
  %i.addr = alloca i64, align 8
  %limit.addr = alloca i64, align 8
  store i64 %i, ptr %i.addr, align 8, !tbaa !27
  store i64 %limit, ptr %limit.addr, align 8, !tbaa !27
  %0 = load i64, ptr %i.addr, align 8, !tbaa !27
  %1 = load i64, ptr %limit.addr, align 8, !tbaa !27
  %cmp = icmp ult i64 %0, %1
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetItemInt_Generic(ptr noundef %o, ptr noundef %j) #0 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %j.addr = alloca ptr, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %j, ptr %j.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #13
  %0 = load ptr, ptr %j.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %j.addr, align 8, !tbaa !5
  %call = call ptr @PyObject_GetItem(ptr noundef %1, ptr noundef %2)
  store ptr %call, ptr %r, align 8, !tbaa !5
  %3 = load ptr, ptr %j.addr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %3)
  %4 = load ptr, ptr %r, align 8, !tbaa !5
  store ptr %4, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #13
  %5 = load ptr, ptr %retval, align 8
  ret ptr %5
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_array___setitem__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_item, ptr noundef %__pyx_v_value) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_item.addr = alloca ptr, align 8
  %__pyx_v_value.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_item, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  store ptr %__pyx_v_value, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call = call i32 @__pyx_array___pyx_pf_15View_dot_MemoryView_5array_12__setitem__(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  store i32 %call, ptr %__pyx_r, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_array___pyx_pf_15View_dot_MemoryView_5array_12__setitem__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_item, ptr noundef %__pyx_v_value) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_item.addr = alloca ptr, align 8
  %__pyx_v_value.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_item, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  store ptr %__pyx_v_value, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_n_s_memview, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %3, ptr %__pyx_filename, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 241, ptr %__pyx_lineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7609, ptr %__pyx_clineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call4 = call i32 @PyObject_SetItem(ptr noundef %7, ptr noundef %8, ptr noundef %9)
  %cmp = icmp slt i32 %call4, 0
  %lnot6 = xor i1 %cmp, true
  %lnot8 = xor i1 %lnot6, true
  %lnot.ext9 = zext i1 %lnot8 to i32
  %conv10 = sext i32 %lnot.ext9 to i64
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0)
  %tobool12 = icmp ne i64 %expval11, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %10, ptr %__pyx_filename, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 241, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7611, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end14:                                         ; preds = %if.end
  %14 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %14)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  store i32 0, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then13, %if.then
  %15 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %15)
  %16 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %18 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.87, i32 noundef %16, i32 noundef %17, ptr noundef %18)
  store i32 -1, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end14
  %19 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  ret i32 %19
}

declare i32 @PyObject_SetItem(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_array___getattr__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_attr) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_attr.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_attr, ptr %__pyx_v_attr.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v_attr.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_array___pyx_pf_15View_dot_MemoryView_5array_8__getattr__(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %2
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_array___pyx_pf_15View_dot_MemoryView_5array_8__getattr__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_attr) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_attr.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_attr, ptr %__pyx_v_attr.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %2 = load ptr, ptr @__pyx_n_s_memview, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %1, ptr noundef %2)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 235, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7475, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_v_attr.addr, align 8, !tbaa !5
  %call4 = call ptr @__Pyx_GetAttr(ptr noundef %8, ptr noundef %9)
  store ptr %call4, ptr %__pyx_t_2, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %10, null
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  %11 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %11, ptr %__pyx_filename, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 235, ptr %__pyx_lineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7477, ptr %__pyx_clineno, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end16:                                         ; preds = %if.end
  %15 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %15)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %16, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then15, %if.then
  %17 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %17)
  %18 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %18)
  %19 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %21 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.88, i32 noundef %19, i32 noundef %20, ptr noundef %21)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end16
  %22 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %22
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_GetAttr(ptr noundef %o, ptr noundef %n) #3 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %n.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %n, ptr %n.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %n.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 268435456)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %n.addr, align 8, !tbaa !5
  %call4 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %1, ptr noundef %2)
  store ptr %call4, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %n.addr, align 8, !tbaa !5
  %call5 = call ptr @PyObject_GetAttr(ptr noundef %3, ptr noundef %4)
  store ptr %call5, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %5 = load ptr, ptr %retval, align 8
  ret ptr %5
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw___pyx_array_1__reduce_cython__(ptr noundef %__pyx_v_self, ptr noundef %unused) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %unused.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %unused, ptr %unused.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf___pyx_array___reduce_cython__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw___pyx_array_3__setstate_cython__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v___pyx_state) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf___pyx_array_2__setstate_cython__(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %2
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf___pyx_array___reduce_cython__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_tuple__10, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_Call(ptr noundef %0, ptr noundef %1, ptr noundef null)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %3, ptr %__pyx_filename, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 2, ptr %__pyx_lineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7668, ptr %__pyx_clineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %7, ptr noundef null, ptr noundef null, ptr noundef null)
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %8)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %9 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %9, ptr %__pyx_filename, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 2, ptr %__pyx_lineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7672, ptr %__pyx_clineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

__pyx_L1_error:                                   ; preds = %if.end, %if.then
  %13 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %13)
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.92, i32 noundef %14, i32 noundef %15, ptr noundef %16)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %17
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_Raise(ptr noundef %type, ptr noundef %value, ptr noundef %tb, ptr noundef %cause) #0 {
entry:
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  %cause.addr = alloca ptr, align 8
  %owned_instance = alloca ptr, align 8
  %instance_class = alloca ptr, align 8
  %is_subclass = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %args = alloca ptr, align 8
  %fixed_cause = alloca ptr, align 8
  %tmp_type = alloca ptr, align 8
  %tmp_value = alloca ptr, align 8
  %tmp_tb = alloca ptr, align 8
  store ptr %type, ptr %type.addr, align 8, !tbaa !5
  store ptr %value, ptr %value.addr, align 8, !tbaa !5
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !5
  store ptr %cause, ptr %cause.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %owned_instance) #13
  store ptr null, ptr %owned_instance, align 8, !tbaa !5
  %0 = load ptr, ptr %tb.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store ptr null, ptr %tb.addr, align 8, !tbaa !5
  br label %if.end3

if.else:                                          ; preds = %entry
  %1 = load ptr, ptr %tb.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.else
  %2 = load ptr, ptr %tb.addr, align 8, !tbaa !5
  %call = call i32 @Py_IS_TYPE(ptr noundef %2, ptr noundef @PyTraceBack_Type)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.end, label %if.then2

if.then2:                                         ; preds = %land.lhs.true
  %3 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.93)
  br label %bad

if.end:                                           ; preds = %land.lhs.true, %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %4 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %cmp4 = icmp eq ptr %4, @_Py_NoneStruct
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  store ptr null, ptr %value.addr, align 8, !tbaa !5
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end3
  %5 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %call7 = call ptr @Py_TYPE(ptr noundef %5)
  %call8 = call i32 @PyType_HasFeature(ptr noundef %call7, i64 noundef 1073741824)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then10, label %if.else15

if.then10:                                        ; preds = %if.end6
  %6 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %tobool11 = icmp ne ptr %6, null
  br i1 %tobool11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.then10
  %7 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %7, ptr noundef @.str.94)
  br label %bad

if.end13:                                         ; preds = %if.then10
  %8 = load ptr, ptr %type.addr, align 8, !tbaa !5
  store ptr %8, ptr %value.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call14 = call ptr @Py_TYPE(ptr noundef %9)
  store ptr %call14, ptr %type.addr, align 8, !tbaa !5
  br label %if.end81

if.else15:                                        ; preds = %if.end6
  %10 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %call16 = call i32 @PyType_Check(ptr noundef %10)
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %land.lhs.true18, label %if.else79

land.lhs.true18:                                  ; preds = %if.else15
  %11 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %call19 = call i32 @PyType_HasFeature(ptr noundef %11, i64 noundef 1073741824)
  %tobool20 = icmp ne i32 %call19, 0
  br i1 %tobool20, label %if.then21, label %if.else79

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.lifetime.start.p0(i64 8, ptr %instance_class) #13
  store ptr null, ptr %instance_class, align 8, !tbaa !5
  %12 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %tobool22 = icmp ne ptr %12, null
  br i1 %tobool22, label %land.lhs.true23, label %if.end43

land.lhs.true23:                                  ; preds = %if.then21
  %13 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call24 = call ptr @Py_TYPE(ptr noundef %13)
  %call25 = call i32 @PyType_HasFeature(ptr noundef %call24, i64 noundef 1073741824)
  %tobool26 = icmp ne i32 %call25, 0
  br i1 %tobool26, label %if.then27, label %if.end43

if.then27:                                        ; preds = %land.lhs.true23
  %14 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call28 = call ptr @Py_TYPE(ptr noundef %14)
  store ptr %call28, ptr %instance_class, align 8, !tbaa !5
  %15 = load ptr, ptr %instance_class, align 8, !tbaa !5
  %16 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %cmp29 = icmp ne ptr %15, %16
  br i1 %cmp29, label %if.then30, label %if.end42

if.then30:                                        ; preds = %if.then27
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_subclass) #13
  %17 = load ptr, ptr %instance_class, align 8, !tbaa !5
  %18 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %call31 = call i32 @PyObject_IsSubclass(ptr noundef %17, ptr noundef %18)
  store i32 %call31, ptr %is_subclass, align 4, !tbaa !9
  %19 = load i32, ptr %is_subclass, align 4, !tbaa !9
  %tobool32 = icmp ne i32 %19, 0
  br i1 %tobool32, label %if.else34, label %if.then33

if.then33:                                        ; preds = %if.then30
  store ptr null, ptr %instance_class, align 8, !tbaa !5
  br label %if.end41

if.else34:                                        ; preds = %if.then30
  %20 = load i32, ptr %is_subclass, align 4, !tbaa !9
  %cmp35 = icmp eq i32 %20, -1
  %lnot = xor i1 %cmp35, true
  %lnot36 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot36 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool37 = icmp ne i64 %expval, 0
  br i1 %tobool37, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else34
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.else39:                                        ; preds = %if.else34
  %21 = load ptr, ptr %instance_class, align 8, !tbaa !5
  store ptr %21, ptr %type.addr, align 8, !tbaa !5
  br label %if.end40

if.end40:                                         ; preds = %if.else39
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then33
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then38, %if.end41
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_subclass) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup76 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end42

if.end42:                                         ; preds = %cleanup.cont, %if.then27
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %land.lhs.true23, %if.then21
  %22 = load ptr, ptr %instance_class, align 8, !tbaa !5
  %tobool44 = icmp ne ptr %22, null
  br i1 %tobool44, label %if.end75, label %if.then45

if.then45:                                        ; preds = %if.end43
  call void @llvm.lifetime.start.p0(i64 8, ptr %args) #13
  %23 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %tobool46 = icmp ne ptr %23, null
  br i1 %tobool46, label %if.else49, label %if.then47

if.then47:                                        ; preds = %if.then45
  %call48 = call ptr @PyTuple_New(i64 noundef 0)
  store ptr %call48, ptr %args, align 8, !tbaa !5
  br label %if.end57

if.else49:                                        ; preds = %if.then45
  %24 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call50 = call ptr @Py_TYPE(ptr noundef %24)
  %call51 = call i32 @PyType_HasFeature(ptr noundef %call50, i64 noundef 67108864)
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.else54

if.then53:                                        ; preds = %if.else49
  %25 = load ptr, ptr %value.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %25)
  %26 = load ptr, ptr %value.addr, align 8, !tbaa !5
  store ptr %26, ptr %args, align 8, !tbaa !5
  br label %if.end56

if.else54:                                        ; preds = %if.else49
  %27 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call55 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %27)
  store ptr %call55, ptr %args, align 8, !tbaa !5
  br label %if.end56

if.end56:                                         ; preds = %if.else54, %if.then53
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then47
  %28 = load ptr, ptr %args, align 8, !tbaa !5
  %tobool58 = icmp ne ptr %28, null
  br i1 %tobool58, label %if.end60, label %if.then59

if.then59:                                        ; preds = %if.end57
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup72

if.end60:                                         ; preds = %if.end57
  %29 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %30 = load ptr, ptr %args, align 8, !tbaa !5
  %call61 = call ptr @PyObject_Call(ptr noundef %29, ptr noundef %30, ptr noundef null)
  store ptr %call61, ptr %owned_instance, align 8, !tbaa !5
  %31 = load ptr, ptr %args, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %31)
  %32 = load ptr, ptr %owned_instance, align 8, !tbaa !5
  %tobool62 = icmp ne ptr %32, null
  br i1 %tobool62, label %if.end64, label %if.then63

if.then63:                                        ; preds = %if.end60
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup72

if.end64:                                         ; preds = %if.end60
  %33 = load ptr, ptr %owned_instance, align 8, !tbaa !5
  store ptr %33, ptr %value.addr, align 8, !tbaa !5
  %34 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call65 = call ptr @Py_TYPE(ptr noundef %34)
  %call66 = call i32 @PyType_HasFeature(ptr noundef %call65, i64 noundef 1073741824)
  %tobool67 = icmp ne i32 %call66, 0
  br i1 %tobool67, label %if.end71, label %if.then68

if.then68:                                        ; preds = %if.end64
  %35 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %36 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %37 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %call69 = call ptr @Py_TYPE(ptr noundef %37)
  %call70 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %35, ptr noundef @.str.95, ptr noundef %36, ptr noundef %call69)
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup72

if.end71:                                         ; preds = %if.end64
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup72

cleanup72:                                        ; preds = %if.then68, %if.then63, %if.then59, %if.end71
  call void @llvm.lifetime.end.p0(i64 8, ptr %args) #13
  %cleanup.dest73 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest73, label %cleanup76 [
    i32 0, label %cleanup.cont74
  ]

cleanup.cont74:                                   ; preds = %cleanup72
  br label %if.end75

if.end75:                                         ; preds = %cleanup.cont74, %if.end43
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup76

cleanup76:                                        ; preds = %if.end75, %cleanup72, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %instance_class) #13
  %cleanup.dest77 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest77, label %cleanup115 [
    i32 0, label %cleanup.cont78
    i32 2, label %bad
  ]

cleanup.cont78:                                   ; preds = %cleanup76
  br label %if.end80

if.else79:                                        ; preds = %land.lhs.true18, %if.else15
  %38 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %38, ptr noundef @.str.96)
  br label %bad

if.end80:                                         ; preds = %cleanup.cont78
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end13
  %39 = load ptr, ptr %cause.addr, align 8, !tbaa !5
  %tobool82 = icmp ne ptr %39, null
  br i1 %tobool82, label %if.then83, label %if.end111

if.then83:                                        ; preds = %if.end81
  call void @llvm.lifetime.start.p0(i64 8, ptr %fixed_cause) #13
  %40 = load ptr, ptr %cause.addr, align 8, !tbaa !5
  %cmp84 = icmp eq ptr %40, @_Py_NoneStruct
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then83
  store ptr null, ptr %fixed_cause, align 8, !tbaa !5
  br label %if.end107

if.else87:                                        ; preds = %if.then83
  %41 = load ptr, ptr %cause.addr, align 8, !tbaa !5
  %call88 = call i32 @PyType_Check(ptr noundef %41)
  %tobool89 = icmp ne i32 %call88, 0
  br i1 %tobool89, label %land.lhs.true90, label %if.else99

land.lhs.true90:                                  ; preds = %if.else87
  %42 = load ptr, ptr %cause.addr, align 8, !tbaa !5
  %call91 = call i32 @PyType_HasFeature(ptr noundef %42, i64 noundef 1073741824)
  %tobool92 = icmp ne i32 %call91, 0
  br i1 %tobool92, label %if.then93, label %if.else99

if.then93:                                        ; preds = %land.lhs.true90
  %43 = load ptr, ptr %cause.addr, align 8, !tbaa !5
  %call94 = call ptr @PyObject_CallObject(ptr noundef %43, ptr noundef null)
  store ptr %call94, ptr %fixed_cause, align 8, !tbaa !5
  %44 = load ptr, ptr %fixed_cause, align 8, !tbaa !5
  %cmp95 = icmp eq ptr %44, null
  br i1 %cmp95, label %if.then97, label %if.end98

if.then97:                                        ; preds = %if.then93
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup108

if.end98:                                         ; preds = %if.then93
  br label %if.end106

if.else99:                                        ; preds = %land.lhs.true90, %if.else87
  %45 = load ptr, ptr %cause.addr, align 8, !tbaa !5
  %call100 = call ptr @Py_TYPE(ptr noundef %45)
  %call101 = call i32 @PyType_HasFeature(ptr noundef %call100, i64 noundef 1073741824)
  %tobool102 = icmp ne i32 %call101, 0
  br i1 %tobool102, label %if.then103, label %if.else104

if.then103:                                       ; preds = %if.else99
  %46 = load ptr, ptr %cause.addr, align 8, !tbaa !5
  store ptr %46, ptr %fixed_cause, align 8, !tbaa !5
  %47 = load ptr, ptr %fixed_cause, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %47)
  br label %if.end105

if.else104:                                       ; preds = %if.else99
  %48 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %48, ptr noundef @.str.97)
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup108

if.end105:                                        ; preds = %if.then103
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.end98
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then86
  %49 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %50 = load ptr, ptr %fixed_cause, align 8, !tbaa !5
  call void @PyException_SetCause(ptr noundef %49, ptr noundef %50)
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup108

cleanup108:                                       ; preds = %if.else104, %if.then97, %if.end107
  call void @llvm.lifetime.end.p0(i64 8, ptr %fixed_cause) #13
  %cleanup.dest109 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest109, label %cleanup115 [
    i32 0, label %cleanup.cont110
    i32 2, label %bad
  ]

cleanup.cont110:                                  ; preds = %cleanup108
  br label %if.end111

if.end111:                                        ; preds = %cleanup.cont110, %if.end81
  %51 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %52 = load ptr, ptr %value.addr, align 8, !tbaa !5
  call void @PyErr_SetObject(ptr noundef %51, ptr noundef %52)
  %53 = load ptr, ptr %tb.addr, align 8, !tbaa !5
  %tobool112 = icmp ne ptr %53, null
  br i1 %tobool112, label %if.then113, label %if.end114

if.then113:                                       ; preds = %if.end111
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_type) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_value) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_tb) #13
  call void @PyErr_Fetch(ptr noundef %tmp_type, ptr noundef %tmp_value, ptr noundef %tmp_tb)
  %54 = load ptr, ptr %tb.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %54)
  %55 = load ptr, ptr %tmp_type, align 8, !tbaa !5
  %56 = load ptr, ptr %tmp_value, align 8, !tbaa !5
  %57 = load ptr, ptr %tb.addr, align 8, !tbaa !5
  call void @PyErr_Restore(ptr noundef %55, ptr noundef %56, ptr noundef %57)
  %58 = load ptr, ptr %tmp_tb, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %58)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_tb) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_value) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_type) #13
  br label %if.end114

if.end114:                                        ; preds = %if.then113, %if.end111
  br label %bad

bad:                                              ; preds = %if.end114, %cleanup108, %cleanup76, %if.else79, %if.then12, %if.then2
  %59 = load ptr, ptr %owned_instance, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %59)
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup115

cleanup115:                                       ; preds = %bad, %cleanup108, %cleanup76
  call void @llvm.lifetime.end.p0(i64 8, ptr %owned_instance) #13
  ret void
}

declare i32 @PyObject_IsSubclass(ptr noundef, ptr noundef) #1

declare ptr @PyObject_CallObject(ptr noundef, ptr noundef) #1

declare void @PyException_SetCause(ptr noundef, ptr noundef) #1

declare void @PyErr_SetObject(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf___pyx_array_2__setstate_cython__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v___pyx_state) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_tuple__11, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_Call(ptr noundef %0, ptr noundef %1, ptr noundef null)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %3, ptr %__pyx_filename, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 4, ptr %__pyx_lineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7724, ptr %__pyx_clineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %7, ptr noundef null, ptr noundef null, ptr noundef null)
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %8)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %9 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %9, ptr %__pyx_filename, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 4, ptr %__pyx_lineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7728, ptr %__pyx_clineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

__pyx_L1_error:                                   ; preds = %if.end, %if.then
  %13 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %13)
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.98, i32 noundef %14, i32 noundef %15, ptr noundef %16)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %17
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop___pyx_array_memview(ptr noundef %o, ptr noundef %x) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pw_15View_dot_MemoryView_5array_7memview_1__get__(ptr noundef %0)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_15View_dot_MemoryView_5array_7memview_1__get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf_15View_dot_MemoryView_5array_7memview___get__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_15View_dot_MemoryView_5array_7memview___get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %__pyx_vtab = getelementptr inbounds %struct.__pyx_array_obj, ptr %1, i32 0, i32 1
  %2 = load ptr, ptr %__pyx_vtab, align 8, !tbaa !139
  %get_memview = getelementptr inbounds %struct.__pyx_vtabstruct_array, ptr %2, i32 0, i32 0
  %3 = load ptr, ptr %get_memview, align 8, !tbaa !34
  %4 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr %3(ptr noundef %4)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %5, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %6, ptr %__pyx_filename, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 224, ptr %__pyx_lineno, align 4, !tbaa !9
  %8 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7281, ptr %__pyx_clineno, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %10 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %10, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then
  %11 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %11)
  %12 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %14 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.100, i32 noundef %12, i32 noundef %13, ptr noundef %14)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end
  %15 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %15
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_array___cinit__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_shape = alloca ptr, align 8
  %__pyx_v_itemsize = alloca i64, align 8
  %__pyx_v_format = alloca ptr, align 8
  %__pyx_v_mode = alloca ptr, align 8
  %__pyx_v_allocate_buffer = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %values = alloca [5 x ptr], align 16
  %kw_args = alloca i64, align 8
  %pos_args = alloca i64, align 8
  %value = alloca ptr, align 8
  %value84 = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !5
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_shape) #13
  store ptr null, ptr %__pyx_v_shape, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_itemsize) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_format) #13
  store ptr null, ptr %__pyx_v_format, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_mode) #13
  store ptr null, ptr %__pyx_v_mode, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_allocate_buffer) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 40, ptr %values) #13
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 40, i1 false)
  %0 = load ptr, ptr @__pyx_n_s_c, align 8, !tbaa !5
  %arrayidx = getelementptr [5 x ptr], ptr %values, i64 0, i64 3
  store ptr %0, ptr %arrayidx, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else118

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos_args) #13
  %2 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %2)
  store i64 %call, ptr %pos_args, align 8, !tbaa !27
  %3 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %3, label %sw.default [
    i64 5, label %sw.bb
    i64 4, label %sw.bb5
    i64 3, label %sw.bb9
    i64 2, label %sw.bb13
    i64 1, label %sw.bb17
    i64 0, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.then
  %4 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %4, i32 0, i32 1
  %arrayidx3 = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 4
  %5 = load ptr, ptr %arrayidx3, align 8, !tbaa !5
  %arrayidx4 = getelementptr [5 x ptr], ptr %values, i64 0, i64 4
  store ptr %5, ptr %arrayidx4, align 16, !tbaa !5
  br label %sw.bb5

sw.bb5:                                           ; preds = %if.then, %sw.bb
  %6 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item6 = getelementptr inbounds %struct.PyTupleObject, ptr %6, i32 0, i32 1
  %arrayidx7 = getelementptr [1 x ptr], ptr %ob_item6, i64 0, i64 3
  %7 = load ptr, ptr %arrayidx7, align 8, !tbaa !5
  %arrayidx8 = getelementptr [5 x ptr], ptr %values, i64 0, i64 3
  store ptr %7, ptr %arrayidx8, align 8, !tbaa !5
  br label %sw.bb9

sw.bb9:                                           ; preds = %if.then, %sw.bb5
  %8 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item10 = getelementptr inbounds %struct.PyTupleObject, ptr %8, i32 0, i32 1
  %arrayidx11 = getelementptr [1 x ptr], ptr %ob_item10, i64 0, i64 2
  %9 = load ptr, ptr %arrayidx11, align 8, !tbaa !5
  %arrayidx12 = getelementptr [5 x ptr], ptr %values, i64 0, i64 2
  store ptr %9, ptr %arrayidx12, align 16, !tbaa !5
  br label %sw.bb13

sw.bb13:                                          ; preds = %if.then, %sw.bb9
  %10 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item14 = getelementptr inbounds %struct.PyTupleObject, ptr %10, i32 0, i32 1
  %arrayidx15 = getelementptr [1 x ptr], ptr %ob_item14, i64 0, i64 1
  %11 = load ptr, ptr %arrayidx15, align 8, !tbaa !5
  %arrayidx16 = getelementptr [5 x ptr], ptr %values, i64 0, i64 1
  store ptr %11, ptr %arrayidx16, align 8, !tbaa !5
  br label %sw.bb17

sw.bb17:                                          ; preds = %if.then, %sw.bb13
  %12 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item18 = getelementptr inbounds %struct.PyTupleObject, ptr %12, i32 0, i32 1
  %arrayidx19 = getelementptr [1 x ptr], ptr %ob_item18, i64 0, i64 0
  %13 = load ptr, ptr %arrayidx19, align 8, !tbaa !5
  %arrayidx20 = getelementptr [5 x ptr], ptr %values, i64 0, i64 0
  store ptr %13, ptr %arrayidx20, align 16, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb17, %if.then
  %14 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %call21 = call i64 @PyDict_Size(ptr noundef %14)
  store i64 %call21, ptr %kw_args, align 8, !tbaa !27
  %15 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %15, label %sw.epilog93 [
    i64 0, label %sw.bb22
    i64 1, label %sw.bb34
    i64 2, label %sw.bb51
    i64 3, label %sw.bb68
    i64 4, label %sw.bb80
  ]

sw.bb22:                                          ; preds = %sw.epilog
  %16 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %17 = load ptr, ptr @__pyx_n_s_shape, align 8, !tbaa !5
  %18 = load ptr, ptr @__pyx_n_s_shape, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %18, i32 0, i32 2
  %19 = load i64, ptr %hash, align 8, !tbaa !154
  %call23 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %16, ptr noundef %17, i64 noundef %19)
  %arrayidx24 = getelementptr [5 x ptr], ptr %values, i64 0, i64 0
  store ptr %call23, ptr %arrayidx24, align 16, !tbaa !5
  %cmp = icmp ne ptr %call23, null
  %lnot26 = xor i1 %cmp, true
  %lnot28 = xor i1 %lnot26, true
  %lnot.ext29 = zext i1 %lnot28 to i32
  %conv30 = sext i32 %lnot.ext29 to i64
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 1)
  %tobool32 = icmp ne i64 %expval31, 0
  br i1 %tobool32, label %if.then33, label %if.else

if.then33:                                        ; preds = %sw.bb22
  %20 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec = add i64 %20, -1
  store i64 %dec, ptr %kw_args, align 8, !tbaa !27
  br label %if.end

if.else:                                          ; preds = %sw.bb22
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then33
  br label %sw.bb34

sw.bb34:                                          ; preds = %sw.epilog, %if.end
  %21 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %22 = load ptr, ptr @__pyx_n_s_itemsize, align 8, !tbaa !5
  %23 = load ptr, ptr @__pyx_n_s_itemsize, align 8, !tbaa !5
  %hash35 = getelementptr inbounds %struct.PyASCIIObject, ptr %23, i32 0, i32 2
  %24 = load i64, ptr %hash35, align 8, !tbaa !154
  %call36 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %21, ptr noundef %22, i64 noundef %24)
  %arrayidx37 = getelementptr [5 x ptr], ptr %values, i64 0, i64 1
  store ptr %call36, ptr %arrayidx37, align 8, !tbaa !5
  %cmp38 = icmp ne ptr %call36, null
  %lnot40 = xor i1 %cmp38, true
  %lnot42 = xor i1 %lnot40, true
  %lnot.ext43 = zext i1 %lnot42 to i32
  %conv44 = sext i32 %lnot.ext43 to i64
  %expval45 = call i64 @llvm.expect.i64(i64 %conv44, i64 1)
  %tobool46 = icmp ne i64 %expval45, 0
  br i1 %tobool46, label %if.then47, label %if.else49

if.then47:                                        ; preds = %sw.bb34
  %25 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec48 = add i64 %25, -1
  store i64 %dec48, ptr %kw_args, align 8, !tbaa !27
  br label %if.end50

if.else49:                                        ; preds = %sw.bb34
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.101, i32 noundef 0, i64 noundef 3, i64 noundef 5, i64 noundef 1)
  %26 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %26, ptr %__pyx_filename, align 8, !tbaa !5
  %27 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 123, ptr %__pyx_lineno, align 4, !tbaa !9
  %28 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6106, ptr %__pyx_clineno, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end50:                                         ; preds = %if.then47
  br label %sw.bb51

sw.bb51:                                          ; preds = %sw.epilog, %if.end50
  %30 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %31 = load ptr, ptr @__pyx_n_s_format, align 8, !tbaa !5
  %32 = load ptr, ptr @__pyx_n_s_format, align 8, !tbaa !5
  %hash52 = getelementptr inbounds %struct.PyASCIIObject, ptr %32, i32 0, i32 2
  %33 = load i64, ptr %hash52, align 8, !tbaa !154
  %call53 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %30, ptr noundef %31, i64 noundef %33)
  %arrayidx54 = getelementptr [5 x ptr], ptr %values, i64 0, i64 2
  store ptr %call53, ptr %arrayidx54, align 16, !tbaa !5
  %cmp55 = icmp ne ptr %call53, null
  %lnot57 = xor i1 %cmp55, true
  %lnot59 = xor i1 %lnot57, true
  %lnot.ext60 = zext i1 %lnot59 to i32
  %conv61 = sext i32 %lnot.ext60 to i64
  %expval62 = call i64 @llvm.expect.i64(i64 %conv61, i64 1)
  %tobool63 = icmp ne i64 %expval62, 0
  br i1 %tobool63, label %if.then64, label %if.else66

if.then64:                                        ; preds = %sw.bb51
  %34 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec65 = add i64 %34, -1
  store i64 %dec65, ptr %kw_args, align 8, !tbaa !27
  br label %if.end67

if.else66:                                        ; preds = %sw.bb51
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.101, i32 noundef 0, i64 noundef 3, i64 noundef 5, i64 noundef 2)
  %35 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %35, ptr %__pyx_filename, align 8, !tbaa !5
  %36 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 123, ptr %__pyx_lineno, align 4, !tbaa !9
  %37 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6112, ptr %__pyx_clineno, align 4, !tbaa !9
  %38 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end67:                                         ; preds = %if.then64
  br label %sw.bb68

sw.bb68:                                          ; preds = %sw.epilog, %if.end67
  %39 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp69 = icmp sgt i64 %39, 0
  br i1 %cmp69, label %if.then71, label %if.end79

if.then71:                                        ; preds = %sw.bb68
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #13
  %40 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %41 = load ptr, ptr @__pyx_n_s_mode, align 8, !tbaa !5
  %42 = load ptr, ptr @__pyx_n_s_mode, align 8, !tbaa !5
  %hash72 = getelementptr inbounds %struct.PyASCIIObject, ptr %42, i32 0, i32 2
  %43 = load i64, ptr %hash72, align 8, !tbaa !154
  %call73 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %40, ptr noundef %41, i64 noundef %43)
  store ptr %call73, ptr %value, align 8, !tbaa !5
  %44 = load ptr, ptr %value, align 8, !tbaa !5
  %tobool74 = icmp ne ptr %44, null
  br i1 %tobool74, label %if.then75, label %if.end78

if.then75:                                        ; preds = %if.then71
  %45 = load ptr, ptr %value, align 8, !tbaa !5
  %arrayidx76 = getelementptr [5 x ptr], ptr %values, i64 0, i64 3
  store ptr %45, ptr %arrayidx76, align 8, !tbaa !5
  %46 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec77 = add i64 %46, -1
  store i64 %dec77, ptr %kw_args, align 8, !tbaa !27
  br label %if.end78

if.end78:                                         ; preds = %if.then75, %if.then71
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #13
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %sw.bb68
  br label %sw.bb80

sw.bb80:                                          ; preds = %sw.epilog, %if.end79
  %47 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp81 = icmp sgt i64 %47, 0
  br i1 %cmp81, label %if.then83, label %if.end92

if.then83:                                        ; preds = %sw.bb80
  call void @llvm.lifetime.start.p0(i64 8, ptr %value84) #13
  %48 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %49 = load ptr, ptr @__pyx_n_s_allocate_buffer, align 8, !tbaa !5
  %50 = load ptr, ptr @__pyx_n_s_allocate_buffer, align 8, !tbaa !5
  %hash85 = getelementptr inbounds %struct.PyASCIIObject, ptr %50, i32 0, i32 2
  %51 = load i64, ptr %hash85, align 8, !tbaa !154
  %call86 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %48, ptr noundef %49, i64 noundef %51)
  store ptr %call86, ptr %value84, align 8, !tbaa !5
  %52 = load ptr, ptr %value84, align 8, !tbaa !5
  %tobool87 = icmp ne ptr %52, null
  br i1 %tobool87, label %if.then88, label %if.end91

if.then88:                                        ; preds = %if.then83
  %53 = load ptr, ptr %value84, align 8, !tbaa !5
  %arrayidx89 = getelementptr [5 x ptr], ptr %values, i64 0, i64 4
  store ptr %53, ptr %arrayidx89, align 16, !tbaa !5
  %54 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec90 = add i64 %54, -1
  store i64 %dec90, ptr %kw_args, align 8, !tbaa !27
  br label %if.end91

if.end91:                                         ; preds = %if.then88, %if.then83
  call void @llvm.lifetime.end.p0(i64 8, ptr %value84) #13
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %sw.bb80
  br label %sw.epilog93

sw.epilog93:                                      ; preds = %if.end92, %sw.epilog
  %55 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp94 = icmp sgt i64 %55, 0
  %lnot96 = xor i1 %cmp94, true
  %lnot98 = xor i1 %lnot96, true
  %lnot.ext99 = zext i1 %lnot98 to i32
  %conv100 = sext i32 %lnot.ext99 to i64
  %expval101 = call i64 @llvm.expect.i64(i64 %conv100, i64 0)
  %tobool102 = icmp ne i64 %expval101, 0
  br i1 %tobool102, label %if.then103, label %if.end116

if.then103:                                       ; preds = %sw.epilog93
  %56 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %arraydecay = getelementptr inbounds [5 x ptr], ptr %values, i64 0, i64 0
  %57 = load i64, ptr %pos_args, align 8, !tbaa !27
  %call104 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %56, ptr noundef @__pyx_array___cinit__.__pyx_pyargnames, ptr noundef null, ptr noundef %arraydecay, i64 noundef %57, ptr noundef @.str.101)
  %cmp105 = icmp slt i32 %call104, 0
  %lnot107 = xor i1 %cmp105, true
  %lnot109 = xor i1 %lnot107, true
  %lnot.ext110 = zext i1 %lnot109 to i32
  %conv111 = sext i32 %lnot.ext110 to i64
  %expval112 = call i64 @llvm.expect.i64(i64 %conv111, i64 0)
  %tobool113 = icmp ne i64 %expval112, 0
  br i1 %tobool113, label %if.then114, label %if.end115

if.then114:                                       ; preds = %if.then103
  %58 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %58, ptr %__pyx_filename, align 8, !tbaa !5
  %59 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 123, ptr %__pyx_lineno, align 4, !tbaa !9
  %60 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6128, ptr %__pyx_clineno, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end115:                                        ; preds = %if.then103
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %sw.epilog93
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then114, %if.else66, %if.else49, %if.else, %sw.default, %if.end116
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup181 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end140

if.else118:                                       ; preds = %entry
  %62 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call119 = call i64 @PyTuple_GET_SIZE(ptr noundef %62)
  switch i64 %call119, label %sw.default138 [
    i64 5, label %sw.bb120
    i64 4, label %sw.bb124
    i64 3, label %sw.bb128
  ]

sw.bb120:                                         ; preds = %if.else118
  %63 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item121 = getelementptr inbounds %struct.PyTupleObject, ptr %63, i32 0, i32 1
  %arrayidx122 = getelementptr [1 x ptr], ptr %ob_item121, i64 0, i64 4
  %64 = load ptr, ptr %arrayidx122, align 8, !tbaa !5
  %arrayidx123 = getelementptr [5 x ptr], ptr %values, i64 0, i64 4
  store ptr %64, ptr %arrayidx123, align 16, !tbaa !5
  br label %sw.bb124

sw.bb124:                                         ; preds = %if.else118, %sw.bb120
  %65 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item125 = getelementptr inbounds %struct.PyTupleObject, ptr %65, i32 0, i32 1
  %arrayidx126 = getelementptr [1 x ptr], ptr %ob_item125, i64 0, i64 3
  %66 = load ptr, ptr %arrayidx126, align 8, !tbaa !5
  %arrayidx127 = getelementptr [5 x ptr], ptr %values, i64 0, i64 3
  store ptr %66, ptr %arrayidx127, align 8, !tbaa !5
  br label %sw.bb128

sw.bb128:                                         ; preds = %if.else118, %sw.bb124
  %67 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item129 = getelementptr inbounds %struct.PyTupleObject, ptr %67, i32 0, i32 1
  %arrayidx130 = getelementptr [1 x ptr], ptr %ob_item129, i64 0, i64 2
  %68 = load ptr, ptr %arrayidx130, align 8, !tbaa !5
  %arrayidx131 = getelementptr [5 x ptr], ptr %values, i64 0, i64 2
  store ptr %68, ptr %arrayidx131, align 16, !tbaa !5
  %69 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item132 = getelementptr inbounds %struct.PyTupleObject, ptr %69, i32 0, i32 1
  %arrayidx133 = getelementptr [1 x ptr], ptr %ob_item132, i64 0, i64 1
  %70 = load ptr, ptr %arrayidx133, align 8, !tbaa !5
  %arrayidx134 = getelementptr [5 x ptr], ptr %values, i64 0, i64 1
  store ptr %70, ptr %arrayidx134, align 8, !tbaa !5
  %71 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item135 = getelementptr inbounds %struct.PyTupleObject, ptr %71, i32 0, i32 1
  %arrayidx136 = getelementptr [1 x ptr], ptr %ob_item135, i64 0, i64 0
  %72 = load ptr, ptr %arrayidx136, align 8, !tbaa !5
  %arrayidx137 = getelementptr [5 x ptr], ptr %values, i64 0, i64 0
  store ptr %72, ptr %arrayidx137, align 16, !tbaa !5
  br label %sw.epilog139

sw.default138:                                    ; preds = %if.else118
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup181

sw.epilog139:                                     ; preds = %sw.bb128
  br label %if.end140

if.end140:                                        ; preds = %sw.epilog139, %cleanup.cont
  %arrayidx141 = getelementptr [5 x ptr], ptr %values, i64 0, i64 0
  %73 = load ptr, ptr %arrayidx141, align 16, !tbaa !5
  store ptr %73, ptr %__pyx_v_shape, align 8, !tbaa !5
  %arrayidx142 = getelementptr [5 x ptr], ptr %values, i64 0, i64 1
  %74 = load ptr, ptr %arrayidx142, align 8, !tbaa !5
  %call143 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %74)
  store i64 %call143, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %75 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp144 = icmp eq i64 %75, -1
  br i1 %cmp144, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end140
  %call146 = call ptr @PyErr_Occurred()
  %tobool147 = icmp ne ptr %call146, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end140
  %76 = phi i1 [ false, %if.end140 ], [ %tobool147, %land.rhs ]
  %lnot148 = xor i1 %76, true
  %lnot150 = xor i1 %lnot148, true
  %lnot.ext151 = zext i1 %lnot150 to i32
  %conv152 = sext i32 %lnot.ext151 to i64
  %expval153 = call i64 @llvm.expect.i64(i64 %conv152, i64 0)
  %tobool154 = icmp ne i64 %expval153, 0
  br i1 %tobool154, label %if.then155, label %if.end156

if.then155:                                       ; preds = %land.end
  %77 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %77, ptr %__pyx_filename, align 8, !tbaa !5
  %78 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 123, ptr %__pyx_lineno, align 4, !tbaa !9
  %79 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6144, ptr %__pyx_clineno, align 4, !tbaa !9
  %80 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup181

if.end156:                                        ; preds = %land.end
  %arrayidx157 = getelementptr [5 x ptr], ptr %values, i64 0, i64 2
  %81 = load ptr, ptr %arrayidx157, align 16, !tbaa !5
  store ptr %81, ptr %__pyx_v_format, align 8, !tbaa !5
  %arrayidx158 = getelementptr [5 x ptr], ptr %values, i64 0, i64 3
  %82 = load ptr, ptr %arrayidx158, align 8, !tbaa !5
  store ptr %82, ptr %__pyx_v_mode, align 8, !tbaa !5
  %arrayidx159 = getelementptr [5 x ptr], ptr %values, i64 0, i64 4
  %83 = load ptr, ptr %arrayidx159, align 16, !tbaa !5
  %tobool160 = icmp ne ptr %83, null
  br i1 %tobool160, label %if.then161, label %if.else179

if.then161:                                       ; preds = %if.end156
  %arrayidx162 = getelementptr [5 x ptr], ptr %values, i64 0, i64 4
  %84 = load ptr, ptr %arrayidx162, align 16, !tbaa !5
  %call163 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %84)
  store i32 %call163, ptr %__pyx_v_allocate_buffer, align 4, !tbaa !9
  %85 = load i32, ptr %__pyx_v_allocate_buffer, align 4, !tbaa !9
  %cmp164 = icmp eq i32 %85, -1
  br i1 %cmp164, label %land.rhs166, label %land.end169

land.rhs166:                                      ; preds = %if.then161
  %call167 = call ptr @PyErr_Occurred()
  %tobool168 = icmp ne ptr %call167, null
  br label %land.end169

land.end169:                                      ; preds = %land.rhs166, %if.then161
  %86 = phi i1 [ false, %if.then161 ], [ %tobool168, %land.rhs166 ]
  %lnot170 = xor i1 %86, true
  %lnot172 = xor i1 %lnot170, true
  %lnot.ext173 = zext i1 %lnot172 to i32
  %conv174 = sext i32 %lnot.ext173 to i64
  %expval175 = call i64 @llvm.expect.i64(i64 %conv174, i64 0)
  %tobool176 = icmp ne i64 %expval175, 0
  br i1 %tobool176, label %if.then177, label %if.end178

if.then177:                                       ; preds = %land.end169
  %87 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %87, ptr %__pyx_filename, align 8, !tbaa !5
  %88 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 124, ptr %__pyx_lineno, align 4, !tbaa !9
  %89 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6148, ptr %__pyx_clineno, align 4, !tbaa !9
  %90 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup181

if.end178:                                        ; preds = %land.end169
  br label %if.end180

if.else179:                                       ; preds = %if.end156
  store i32 1, ptr %__pyx_v_allocate_buffer, align 4, !tbaa !9
  br label %if.end180

if.end180:                                        ; preds = %if.else179, %if.end178
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup181

cleanup181:                                       ; preds = %if.then177, %if.then155, %sw.default138, %if.end180, %cleanup
  call void @llvm.lifetime.end.p0(i64 40, ptr %values) #13
  %cleanup.dest182 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest182, label %cleanup224 [
    i32 0, label %cleanup.cont183
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont183:                                  ; preds = %cleanup181
  br label %__pyx_L4_argument_unpacking_done

__pyx_L5_argtuple_error:                          ; preds = %cleanup181
  %91 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call184 = call i64 @PyTuple_GET_SIZE(ptr noundef %91)
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.101, i32 noundef 0, i64 noundef 3, i64 noundef 5, i64 noundef %call184)
  %92 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %92, ptr %__pyx_filename, align 8, !tbaa !5
  %93 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 123, ptr %__pyx_lineno, align 4, !tbaa !9
  %94 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6163, ptr %__pyx_clineno, align 4, !tbaa !9
  %95 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

__pyx_L3_error:                                   ; preds = %cleanup181, %__pyx_L5_argtuple_error
  %96 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %97 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %98 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.102, i32 noundef %96, i32 noundef %97, ptr noundef %98)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup224

__pyx_L4_argument_unpacking_done:                 ; preds = %cleanup.cont183
  %99 = load ptr, ptr %__pyx_v_shape, align 8, !tbaa !5
  %call185 = call ptr @Py_TYPE(ptr noundef %99)
  %cmp186 = icmp eq ptr %call185, @PyTuple_Type
  %conv187 = zext i1 %cmp186 to i32
  %100 = load ptr, ptr %__pyx_v_shape, align 8, !tbaa !5
  %cmp188 = icmp eq ptr %100, @_Py_NoneStruct
  %land.ext = zext i1 %cmp188 to i32
  %or = or i32 %conv187, %land.ext
  %tobool190 = icmp ne i32 %or, 0
  %lnot191 = xor i1 %tobool190, true
  %lnot193 = xor i1 %lnot191, true
  %lnot.ext194 = zext i1 %lnot193 to i32
  %conv195 = sext i32 %lnot.ext194 to i64
  %expval196 = call i64 @llvm.expect.i64(i64 %conv195, i64 1)
  %tobool197 = icmp ne i64 %expval196, 0
  br i1 %tobool197, label %cond.true, label %cond.false

cond.true:                                        ; preds = %__pyx_L4_argument_unpacking_done
  br label %cond.end

cond.false:                                       ; preds = %__pyx_L4_argument_unpacking_done
  %101 = load ptr, ptr %__pyx_v_shape, align 8, !tbaa !5
  %call198 = call i32 @__Pyx__ArgTypeTest(ptr noundef %101, ptr noundef @PyTuple_Type, ptr noundef @.str.103, i32 noundef 1)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %call198, %cond.false ]
  %tobool199 = icmp ne i32 %cond, 0
  %lnot200 = xor i1 %tobool199, true
  %lnot202 = xor i1 %lnot200, true
  %lnot204 = xor i1 %lnot202, true
  %lnot.ext205 = zext i1 %lnot204 to i32
  %conv206 = sext i32 %lnot.ext205 to i64
  %expval207 = call i64 @llvm.expect.i64(i64 %conv206, i64 0)
  %tobool208 = icmp ne i64 %expval207, 0
  br i1 %tobool208, label %if.then209, label %if.end210

if.then209:                                       ; preds = %cond.end
  %102 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %102, ptr %__pyx_filename, align 8, !tbaa !5
  %103 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 123, ptr %__pyx_lineno, align 4, !tbaa !9
  %104 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6169, ptr %__pyx_clineno, align 4, !tbaa !9
  %105 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end210:                                        ; preds = %cond.end
  %106 = load ptr, ptr %__pyx_v_format, align 8, !tbaa !5
  %cmp211 = icmp eq ptr %106, @_Py_NoneStruct
  %lnot213 = xor i1 %cmp211, true
  %lnot215 = xor i1 %lnot213, true
  %lnot.ext216 = zext i1 %lnot215 to i32
  %conv217 = sext i32 %lnot.ext216 to i64
  %expval218 = call i64 @llvm.expect.i64(i64 %conv217, i64 0)
  %tobool219 = icmp ne i64 %expval218, 0
  br i1 %tobool219, label %if.then220, label %if.end222

if.then220:                                       ; preds = %if.end210
  %107 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %call221 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %107, ptr noundef @.str.104, ptr noundef @.str.105)
  %108 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %108, ptr %__pyx_filename, align 8, !tbaa !5
  %109 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 123, ptr %__pyx_lineno, align 4, !tbaa !9
  %110 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6171, ptr %__pyx_clineno, align 4, !tbaa !9
  %111 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end222:                                        ; preds = %if.end210
  %112 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %113 = load ptr, ptr %__pyx_v_shape, align 8, !tbaa !5
  %114 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %115 = load ptr, ptr %__pyx_v_format, align 8, !tbaa !5
  %116 = load ptr, ptr %__pyx_v_mode, align 8, !tbaa !5
  %117 = load i32, ptr %__pyx_v_allocate_buffer, align 4, !tbaa !9
  %call223 = call i32 @__pyx_array___pyx_pf_15View_dot_MemoryView_5array___cinit__(ptr noundef %112, ptr noundef %113, i64 noundef %114, ptr noundef %115, ptr noundef %116, i32 noundef %117)
  store i32 %call223, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then220, %if.then209
  store i32 -1, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end222
  %118 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  store i32 %118, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup224

cleanup224:                                       ; preds = %__pyx_L0, %__pyx_L3_error, %cleanup181
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_allocate_buffer) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_mode) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_format) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_itemsize) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_shape) #13
  %119 = load i32, ptr %retval, align 4
  ret i32 %119
}

declare ptr @_PyDict_GetItem_KnownHash(ptr noundef, ptr noundef, i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_RaiseArgtupleInvalid(ptr noundef %func_name, i32 noundef %exact, i64 noundef %num_min, i64 noundef %num_max, i64 noundef %num_found) #0 {
entry:
  %func_name.addr = alloca ptr, align 8
  %exact.addr = alloca i32, align 4
  %num_min.addr = alloca i64, align 8
  %num_max.addr = alloca i64, align 8
  %num_found.addr = alloca i64, align 8
  %num_expected = alloca i64, align 8
  %more_or_less = alloca ptr, align 8
  store ptr %func_name, ptr %func_name.addr, align 8, !tbaa !5
  store i32 %exact, ptr %exact.addr, align 4, !tbaa !9
  store i64 %num_min, ptr %num_min.addr, align 8, !tbaa !27
  store i64 %num_max, ptr %num_max.addr, align 8, !tbaa !27
  store i64 %num_found, ptr %num_found.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %num_expected) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %more_or_less) #13
  %0 = load i64, ptr %num_found.addr, align 8, !tbaa !27
  %1 = load i64, ptr %num_min.addr, align 8, !tbaa !27
  %cmp = icmp slt i64 %0, %1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %num_min.addr, align 8, !tbaa !27
  store i64 %2, ptr %num_expected, align 8, !tbaa !27
  store ptr @.str.106, ptr %more_or_less, align 8, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load i64, ptr %num_max.addr, align 8, !tbaa !27
  store i64 %3, ptr %num_expected, align 8, !tbaa !27
  store ptr @.str.107, ptr %more_or_less, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i32, ptr %exact.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  store ptr @.str.108, ptr %more_or_less, align 8, !tbaa !5
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end
  %5 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %6 = load ptr, ptr %func_name.addr, align 8, !tbaa !5
  %7 = load ptr, ptr %more_or_less, align 8, !tbaa !5
  %8 = load i64, ptr %num_expected, align 8, !tbaa !27
  %9 = load i64, ptr %num_expected, align 8, !tbaa !27
  %cmp3 = icmp eq i64 %9, 1
  %10 = zext i1 %cmp3 to i64
  %cond = select i1 %cmp3, ptr @.str.12, ptr @.str.110
  %11 = load i64, ptr %num_found.addr, align 8, !tbaa !27
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %5, ptr noundef @.str.109, ptr noundef %6, ptr noundef %7, i64 noundef %8, ptr noundef %cond, i64 noundef %11)
  call void @llvm.lifetime.end.p0(i64 8, ptr %more_or_less) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %num_expected) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_ParseOptionalKeywords(ptr noundef %kwds, ptr noundef %argnames, ptr noundef %kwds2, ptr noundef %values, i64 noundef %num_pos_args, ptr noundef %function_name) #0 {
entry:
  %retval = alloca i32, align 4
  %kwds.addr = alloca ptr, align 8
  %argnames.addr = alloca ptr, align 8
  %kwds2.addr = alloca ptr, align 8
  %values.addr = alloca ptr, align 8
  %num_pos_args.addr = alloca i64, align 8
  %function_name.addr = alloca ptr, align 8
  %key = alloca ptr, align 8
  %value = alloca ptr, align 8
  %pos = alloca i64, align 8
  %name = alloca ptr, align 8
  %first_kw_arg = alloca ptr, align 8
  %cmp14 = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %argname = alloca ptr, align 8
  %cmp56 = alloca i32, align 4
  store ptr %kwds, ptr %kwds.addr, align 8, !tbaa !5
  store ptr %argnames, ptr %argnames.addr, align 8, !tbaa !5
  store ptr %kwds2, ptr %kwds2.addr, align 8, !tbaa !5
  store ptr %values, ptr %values.addr, align 8, !tbaa !5
  store i64 %num_pos_args, ptr %num_pos_args.addr, align 8, !tbaa !27
  store ptr %function_name, ptr %function_name.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %key) #13
  store ptr null, ptr %key, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #13
  store ptr null, ptr %value, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos) #13
  store i64 0, ptr %pos, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %name) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %first_kw_arg) #13
  %0 = load ptr, ptr %argnames.addr, align 8, !tbaa !5
  %1 = load i64, ptr %num_pos_args.addr, align 8, !tbaa !27
  %add.ptr = getelementptr ptr, ptr %0, i64 %1
  store ptr %add.ptr, ptr %first_kw_arg, align 8, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %if.end115, %if.then51, %if.then, %entry
  %2 = load ptr, ptr %kwds.addr, align 8, !tbaa !5
  %call = call i32 @PyDict_Next(ptr noundef %2, ptr noundef %pos, ptr noundef %key, ptr noundef %value)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %while.body, label %while.end116

while.body:                                       ; preds = %while.cond
  %3 = load ptr, ptr %first_kw_arg, align 8, !tbaa !5
  store ptr %3, ptr %name, align 8, !tbaa !5
  br label %while.cond1

while.cond1:                                      ; preds = %while.body3, %while.body
  %4 = load ptr, ptr %name, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  %tobool2 = icmp ne ptr %5, null
  br i1 %tobool2, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond1
  %6 = load ptr, ptr %name, align 8, !tbaa !5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = load ptr, ptr %key, align 8, !tbaa !5
  %cmp = icmp ne ptr %8, %9
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond1
  %10 = phi i1 [ false, %while.cond1 ], [ %cmp, %land.rhs ]
  br i1 %10, label %while.body3, label %while.end

while.body3:                                      ; preds = %land.end
  %11 = load ptr, ptr %name, align 8, !tbaa !5
  %incdec.ptr = getelementptr ptr, ptr %11, i32 1
  store ptr %incdec.ptr, ptr %name, align 8, !tbaa !5
  br label %while.cond1, !llvm.loop !157

while.end:                                        ; preds = %land.end
  %12 = load ptr, ptr %name, align 8, !tbaa !5
  %13 = load ptr, ptr %12, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %13, null
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %while.end
  %14 = load ptr, ptr %value, align 8, !tbaa !5
  %15 = load ptr, ptr %values.addr, align 8, !tbaa !5
  %16 = load ptr, ptr %name, align 8, !tbaa !5
  %17 = load ptr, ptr %argnames.addr, align 8, !tbaa !5
  %sub.ptr.lhs.cast = ptrtoint ptr %16 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %17 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %arrayidx = getelementptr ptr, ptr %15, i64 %sub.ptr.div
  store ptr %14, ptr %arrayidx, align 8, !tbaa !5
  br label %while.cond, !llvm.loop !158

if.end:                                           ; preds = %while.end
  %18 = load ptr, ptr %first_kw_arg, align 8, !tbaa !5
  store ptr %18, ptr %name, align 8, !tbaa !5
  %19 = load ptr, ptr %key, align 8, !tbaa !5
  %call5 = call ptr @Py_TYPE(ptr noundef %19)
  %call6 = call i32 @PyType_HasFeature(ptr noundef %call5, i64 noundef 268435456)
  %tobool7 = icmp ne i32 %call6, 0
  %lnot = xor i1 %tobool7, true
  %lnot8 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot8 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool9 = icmp ne i64 %expval, 0
  br i1 %tobool9, label %if.then10, label %if.else99

if.then10:                                        ; preds = %if.end
  br label %while.cond11

while.cond11:                                     ; preds = %cleanup.cont, %if.then10
  %20 = load ptr, ptr %name, align 8, !tbaa !5
  %21 = load ptr, ptr %20, align 8, !tbaa !5
  %tobool12 = icmp ne ptr %21, null
  br i1 %tobool12, label %while.body13, label %while.end49

while.body13:                                     ; preds = %while.cond11
  call void @llvm.lifetime.start.p0(i64 4, ptr %cmp14) #13
  %22 = load ptr, ptr %name, align 8, !tbaa !5
  %23 = load ptr, ptr %22, align 8, !tbaa !5
  %24 = load ptr, ptr %23, align 8, !tbaa !5
  %25 = load ptr, ptr %key, align 8, !tbaa !5
  %cmp15 = icmp eq ptr %24, %25
  br i1 %cmp15, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.body13
  br label %cond.end24

cond.false:                                       ; preds = %while.body13
  %26 = load ptr, ptr %name, align 8, !tbaa !5
  %27 = load ptr, ptr %26, align 8, !tbaa !5
  %28 = load ptr, ptr %27, align 8, !tbaa !5
  %call17 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %28)
  %29 = load ptr, ptr %key, align 8, !tbaa !5
  %call18 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %29)
  %cmp19 = icmp ne i64 %call17, %call18
  br i1 %cmp19, label %cond.true21, label %cond.false22

cond.true21:                                      ; preds = %cond.false
  br label %cond.end

cond.false22:                                     ; preds = %cond.false
  %30 = load ptr, ptr %name, align 8, !tbaa !5
  %31 = load ptr, ptr %30, align 8, !tbaa !5
  %32 = load ptr, ptr %31, align 8, !tbaa !5
  %33 = load ptr, ptr %key, align 8, !tbaa !5
  %call23 = call i32 @PyUnicode_Compare(ptr noundef %32, ptr noundef %33)
  br label %cond.end

cond.end:                                         ; preds = %cond.false22, %cond.true21
  %cond = phi i32 [ 1, %cond.true21 ], [ %call23, %cond.false22 ]
  br label %cond.end24

cond.end24:                                       ; preds = %cond.end, %cond.true
  %cond25 = phi i32 [ 0, %cond.true ], [ %cond, %cond.end ]
  store i32 %cond25, ptr %cmp14, align 4, !tbaa !9
  %34 = load i32, ptr %cmp14, align 4, !tbaa !9
  %cmp26 = icmp slt i32 %34, 0
  br i1 %cmp26, label %land.lhs.true, label %if.end38

land.lhs.true:                                    ; preds = %cond.end24
  %call28 = call ptr @PyErr_Occurred()
  %tobool29 = icmp ne ptr %call28, null
  %lnot30 = xor i1 %tobool29, true
  %lnot32 = xor i1 %lnot30, true
  %lnot.ext33 = zext i1 %lnot32 to i32
  %conv34 = sext i32 %lnot.ext33 to i64
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 0)
  %tobool36 = icmp ne i64 %expval35, 0
  br i1 %tobool36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %land.lhs.true
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end38:                                         ; preds = %land.lhs.true, %cond.end24
  %35 = load i32, ptr %cmp14, align 4, !tbaa !9
  %cmp39 = icmp eq i32 %35, 0
  br i1 %cmp39, label %if.then41, label %if.end47

if.then41:                                        ; preds = %if.end38
  %36 = load ptr, ptr %value, align 8, !tbaa !5
  %37 = load ptr, ptr %values.addr, align 8, !tbaa !5
  %38 = load ptr, ptr %name, align 8, !tbaa !5
  %39 = load ptr, ptr %argnames.addr, align 8, !tbaa !5
  %sub.ptr.lhs.cast42 = ptrtoint ptr %38 to i64
  %sub.ptr.rhs.cast43 = ptrtoint ptr %39 to i64
  %sub.ptr.sub44 = sub i64 %sub.ptr.lhs.cast42, %sub.ptr.rhs.cast43
  %sub.ptr.div45 = sdiv exact i64 %sub.ptr.sub44, 8
  %arrayidx46 = getelementptr ptr, ptr %37, i64 %sub.ptr.div45
  store ptr %36, ptr %arrayidx46, align 8, !tbaa !5
  store i32 7, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end47:                                         ; preds = %if.end38
  %40 = load ptr, ptr %name, align 8, !tbaa !5
  %incdec.ptr48 = getelementptr ptr, ptr %40, i32 1
  store ptr %incdec.ptr48, ptr %name, align 8, !tbaa !5
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then37, %if.end47, %if.then41
  call void @llvm.lifetime.end.p0(i64 4, ptr %cmp14) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup119 [
    i32 0, label %cleanup.cont
    i32 7, label %while.end49
    i32 8, label %bad
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond11, !llvm.loop !159

while.end49:                                      ; preds = %cleanup, %while.cond11
  %41 = load ptr, ptr %name, align 8, !tbaa !5
  %42 = load ptr, ptr %41, align 8, !tbaa !5
  %tobool50 = icmp ne ptr %42, null
  br i1 %tobool50, label %if.then51, label %if.else

if.then51:                                        ; preds = %while.end49
  br label %while.cond, !llvm.loop !158

if.else:                                          ; preds = %while.end49
  call void @llvm.lifetime.start.p0(i64 8, ptr %argname) #13
  %43 = load ptr, ptr %argnames.addr, align 8, !tbaa !5
  store ptr %43, ptr %argname, align 8, !tbaa !5
  br label %while.cond52

while.cond52:                                     ; preds = %cleanup.cont93, %if.else
  %44 = load ptr, ptr %argname, align 8, !tbaa !5
  %45 = load ptr, ptr %first_kw_arg, align 8, !tbaa !5
  %cmp53 = icmp ne ptr %44, %45
  br i1 %cmp53, label %while.body55, label %while.end94

while.body55:                                     ; preds = %while.cond52
  call void @llvm.lifetime.start.p0(i64 4, ptr %cmp56) #13
  %46 = load ptr, ptr %argname, align 8, !tbaa !5
  %47 = load ptr, ptr %46, align 8, !tbaa !5
  %48 = load ptr, ptr %47, align 8, !tbaa !5
  %49 = load ptr, ptr %key, align 8, !tbaa !5
  %cmp57 = icmp eq ptr %48, %49
  br i1 %cmp57, label %cond.true59, label %cond.false60

cond.true59:                                      ; preds = %while.body55
  br label %cond.end70

cond.false60:                                     ; preds = %while.body55
  %50 = load ptr, ptr %argname, align 8, !tbaa !5
  %51 = load ptr, ptr %50, align 8, !tbaa !5
  %52 = load ptr, ptr %51, align 8, !tbaa !5
  %call61 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %52)
  %53 = load ptr, ptr %key, align 8, !tbaa !5
  %call62 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %53)
  %cmp63 = icmp ne i64 %call61, %call62
  br i1 %cmp63, label %cond.true65, label %cond.false66

cond.true65:                                      ; preds = %cond.false60
  br label %cond.end68

cond.false66:                                     ; preds = %cond.false60
  %54 = load ptr, ptr %argname, align 8, !tbaa !5
  %55 = load ptr, ptr %54, align 8, !tbaa !5
  %56 = load ptr, ptr %55, align 8, !tbaa !5
  %57 = load ptr, ptr %key, align 8, !tbaa !5
  %call67 = call i32 @PyUnicode_Compare(ptr noundef %56, ptr noundef %57)
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false66, %cond.true65
  %cond69 = phi i32 [ 1, %cond.true65 ], [ %call67, %cond.false66 ]
  br label %cond.end70

cond.end70:                                       ; preds = %cond.end68, %cond.true59
  %cond71 = phi i32 [ 0, %cond.true59 ], [ %cond69, %cond.end68 ]
  store i32 %cond71, ptr %cmp56, align 4, !tbaa !9
  %58 = load i32, ptr %cmp56, align 4, !tbaa !9
  %cmp72 = icmp slt i32 %58, 0
  br i1 %cmp72, label %land.lhs.true74, label %if.end85

land.lhs.true74:                                  ; preds = %cond.end70
  %call75 = call ptr @PyErr_Occurred()
  %tobool76 = icmp ne ptr %call75, null
  %lnot77 = xor i1 %tobool76, true
  %lnot79 = xor i1 %lnot77, true
  %lnot.ext80 = zext i1 %lnot79 to i32
  %conv81 = sext i32 %lnot.ext80 to i64
  %expval82 = call i64 @llvm.expect.i64(i64 %conv81, i64 0)
  %tobool83 = icmp ne i64 %expval82, 0
  br i1 %tobool83, label %if.then84, label %if.end85

if.then84:                                        ; preds = %land.lhs.true74
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup91

if.end85:                                         ; preds = %land.lhs.true74, %cond.end70
  %59 = load i32, ptr %cmp56, align 4, !tbaa !9
  %cmp86 = icmp eq i32 %59, 0
  br i1 %cmp86, label %if.then88, label %if.end89

if.then88:                                        ; preds = %if.end85
  store i32 11, ptr %cleanup.dest.slot, align 4
  br label %cleanup91

if.end89:                                         ; preds = %if.end85
  %60 = load ptr, ptr %argname, align 8, !tbaa !5
  %incdec.ptr90 = getelementptr ptr, ptr %60, i32 1
  store ptr %incdec.ptr90, ptr %argname, align 8, !tbaa !5
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup91

cleanup91:                                        ; preds = %if.then88, %if.then84, %if.end89
  call void @llvm.lifetime.end.p0(i64 4, ptr %cmp56) #13
  %cleanup.dest92 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest92, label %cleanup95 [
    i32 0, label %cleanup.cont93
  ]

cleanup.cont93:                                   ; preds = %cleanup91
  br label %while.cond52, !llvm.loop !160

while.end94:                                      ; preds = %while.cond52
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup95

cleanup95:                                        ; preds = %while.end94, %cleanup91
  call void @llvm.lifetime.end.p0(i64 8, ptr %argname) #13
  %cleanup.dest96 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest96, label %cleanup119 [
    i32 0, label %cleanup.cont97
    i32 11, label %arg_passed_twice
    i32 8, label %bad
  ]

cleanup.cont97:                                   ; preds = %cleanup95
  br label %if.end98

if.end98:                                         ; preds = %cleanup.cont97
  br label %if.end100

if.else99:                                        ; preds = %if.end
  br label %invalid_keyword_type

if.end100:                                        ; preds = %if.end98
  %61 = load ptr, ptr %kwds2.addr, align 8, !tbaa !5
  %tobool101 = icmp ne ptr %61, null
  br i1 %tobool101, label %if.then102, label %if.else114

if.then102:                                       ; preds = %if.end100
  %62 = load ptr, ptr %kwds2.addr, align 8, !tbaa !5
  %63 = load ptr, ptr %key, align 8, !tbaa !5
  %64 = load ptr, ptr %value, align 8, !tbaa !5
  %call103 = call i32 @PyDict_SetItem(ptr noundef %62, ptr noundef %63, ptr noundef %64)
  %tobool104 = icmp ne i32 %call103, 0
  %lnot105 = xor i1 %tobool104, true
  %lnot107 = xor i1 %lnot105, true
  %lnot.ext108 = zext i1 %lnot107 to i32
  %conv109 = sext i32 %lnot.ext108 to i64
  %expval110 = call i64 @llvm.expect.i64(i64 %conv109, i64 0)
  %tobool111 = icmp ne i64 %expval110, 0
  br i1 %tobool111, label %if.then112, label %if.end113

if.then112:                                       ; preds = %if.then102
  br label %bad

if.end113:                                        ; preds = %if.then102
  br label %if.end115

if.else114:                                       ; preds = %if.end100
  br label %invalid_keyword

if.end115:                                        ; preds = %if.end113
  br label %while.cond, !llvm.loop !158

while.end116:                                     ; preds = %while.cond
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup119

arg_passed_twice:                                 ; preds = %cleanup95
  %65 = load ptr, ptr %function_name.addr, align 8, !tbaa !5
  %66 = load ptr, ptr %key, align 8, !tbaa !5
  call void @__Pyx_RaiseDoubleKeywordsError(ptr noundef %65, ptr noundef %66)
  br label %bad

invalid_keyword_type:                             ; preds = %if.else99
  %67 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %68 = load ptr, ptr %function_name.addr, align 8, !tbaa !5
  %call117 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %67, ptr noundef @.str.111, ptr noundef %68)
  br label %bad

invalid_keyword:                                  ; preds = %if.else114
  %69 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %70 = load ptr, ptr %function_name.addr, align 8, !tbaa !5
  %71 = load ptr, ptr %key, align 8, !tbaa !5
  %call118 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %69, ptr noundef @.str.112, ptr noundef %70, ptr noundef %71)
  br label %bad

bad:                                              ; preds = %invalid_keyword, %cleanup95, %cleanup, %invalid_keyword_type, %arg_passed_twice, %if.then112
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup119

cleanup119:                                       ; preds = %bad, %while.end116, %cleanup95, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %first_kw_arg) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %name) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %key) #13
  %72 = load i32, ptr %retval, align 4
  ret i32 %72
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyObject_IsTrue(ptr noundef %x) #3 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca ptr, align 8
  %is_true = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_true) #13
  %0 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_TrueStruct
  %conv = zext i1 %cmp to i32
  store i32 %conv, ptr %is_true, align 4, !tbaa !9
  %1 = load i32, ptr %is_true, align 4, !tbaa !9
  %2 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp1 = icmp eq ptr %2, @_Py_FalseStruct
  %conv2 = zext i1 %cmp1 to i32
  %or = or i32 %1, %conv2
  %3 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %cmp3 = icmp eq ptr %3, @_Py_NoneStruct
  %conv4 = zext i1 %cmp3 to i32
  %or5 = or i32 %or, %conv4
  %tobool = icmp ne i32 %or5, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32, ptr %is_true, align 4, !tbaa !9
  store i32 %4, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call = call i32 @PyObject_IsTrue(ptr noundef %5)
  store i32 %call, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_true) #13
  %6 = load i32, ptr %retval, align 4
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx__ArgTypeTest(ptr noundef %obj, ptr noundef %type, ptr noundef %name, i32 noundef %exact) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %exact.addr = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store ptr %type, ptr %type.addr, align 8, !tbaa !5
  store ptr %name, ptr %name.addr, align 8, !tbaa !5
  store i32 %exact, ptr %exact.addr, align 4, !tbaa !9
  %0 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_SystemError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.114)
  store i32 0, ptr %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %2 = load i32, ptr %exact.addr, align 4, !tbaa !9
  %tobool4 = icmp ne i32 %2, 0
  br i1 %tobool4, label %if.then5, label %if.else6

if.then5:                                         ; preds = %if.else
  br label %if.end17

if.else6:                                         ; preds = %if.else
  %3 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %3)
  %4 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %call7 = call i32 @__Pyx_IsSubtype(ptr noundef %call, ptr noundef %4)
  %tobool8 = icmp ne i32 %call7, 0
  %lnot9 = xor i1 %tobool8, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 1)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %if.then16, label %if.end

if.then16:                                        ; preds = %if.else6
  store i32 1, ptr %retval, align 4
  br label %return

if.end:                                           ; preds = %if.else6
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then5
  br label %if.end18

if.end18:                                         ; preds = %if.end17
  %5 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %6 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %7 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %7, i32 0, i32 1
  %8 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %9 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call19 = call ptr @Py_TYPE(ptr noundef %9)
  %tp_name20 = getelementptr inbounds %struct._typeobject, ptr %call19, i32 0, i32 1
  %10 = load ptr, ptr %tp_name20, align 8, !tbaa !56
  %call21 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %5, ptr noundef @.str.115, ptr noundef %6, ptr noundef %8, ptr noundef %10)
  store i32 0, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.end18, %if.then16, %if.then
  %11 = load i32, ptr %retval, align 4
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_array___pyx_pf_15View_dot_MemoryView_5array___cinit__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_shape, i64 noundef %__pyx_v_itemsize, ptr noundef %__pyx_v_format, ptr noundef %__pyx_v_mode, i32 noundef %__pyx_v_allocate_buffer) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_shape.addr = alloca ptr, align 8
  %__pyx_v_itemsize.addr = alloca i64, align 8
  %__pyx_v_format.addr = alloca ptr, align 8
  %__pyx_v_mode.addr = alloca ptr, align 8
  %__pyx_v_allocate_buffer.addr = alloca i32, align 4
  %__pyx_v_idx = alloca i32, align 4
  %__pyx_v_i = alloca i64, align 8
  %__pyx_v_dim = alloca i64, align 8
  %__pyx_v_p = alloca ptr, align 8
  %__pyx_v_order = alloca i8, align 1
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca i64, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca i32, align 4
  %__pyx_t_9 = alloca i64, align 8
  %__pyx_t_10 = alloca ptr, align 8
  %__pyx_t_11 = alloca i64, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %tmp131 = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_shape, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  store i64 %__pyx_v_itemsize, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  store ptr %__pyx_v_format, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  store ptr %__pyx_v_mode, ptr %__pyx_v_mode.addr, align 8, !tbaa !5
  store i32 %__pyx_v_allocate_buffer, ptr %__pyx_v_allocate_buffer.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_idx) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_dim) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_p) #13
  call void @llvm.lifetime.start.p0(i64 1, ptr %__pyx_v_order) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #13
  store ptr null, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %1, @_Py_NoneStruct
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %2, ptr noundef @.str.116)
  %3 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %3, ptr %__pyx_filename, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 130, ptr %__pyx_lineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6226, ptr %__pyx_clineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %7)
  store i64 %call, ptr %__pyx_t_1, align 8, !tbaa !27
  %8 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  %cmp2 = icmp eq i64 %8, -1
  %lnot4 = xor i1 %cmp2, true
  %lnot6 = xor i1 %lnot4, true
  %lnot.ext7 = zext i1 %lnot6 to i32
  %conv8 = sext i32 %lnot.ext7 to i64
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 0)
  %tobool10 = icmp ne i64 %expval9, 0
  br i1 %tobool10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end
  %9 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %9, ptr %__pyx_filename, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 130, ptr %__pyx_lineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6228, ptr %__pyx_clineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end12:                                         ; preds = %if.end
  %13 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  %conv13 = trunc i64 %13 to i32
  %14 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %ndim = getelementptr inbounds %struct.__pyx_array_obj, ptr %14, i32 0, i32 5
  store i32 %conv13, ptr %ndim, align 8, !tbaa !145
  %15 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %16 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %itemsize = getelementptr inbounds %struct.__pyx_array_obj, ptr %16, i32 0, i32 8
  store i64 %15, ptr %itemsize, align 8, !tbaa !161
  %17 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %ndim14 = getelementptr inbounds %struct.__pyx_array_obj, ptr %17, i32 0, i32 5
  %18 = load i32, ptr %ndim14, align 8, !tbaa !145
  %cmp15 = icmp ne i32 %18, 0
  %lnot17 = xor i1 %cmp15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %cmp19 = icmp ne i32 %lnot.ext18, 0
  %conv20 = zext i1 %cmp19 to i32
  store i32 %conv20, ptr %__pyx_t_2, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool21 = icmp ne i32 %19, 0
  %lnot22 = xor i1 %tobool21, true
  %lnot24 = xor i1 %lnot22, true
  %lnot.ext25 = zext i1 %lnot24 to i32
  %conv26 = sext i32 %lnot.ext25 to i64
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 0)
  %tobool28 = icmp ne i64 %expval27, 0
  br i1 %tobool28, label %if.then29, label %if.end43

if.then29:                                        ; preds = %if.end12
  %20 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %21 = load ptr, ptr @__pyx_tuple__5, align 8, !tbaa !5
  %call30 = call ptr @__Pyx_PyObject_Call(ptr noundef %20, ptr noundef %21, ptr noundef null)
  store ptr %call30, ptr %__pyx_t_3, align 8, !tbaa !5
  %22 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool31 = icmp ne ptr %22, null
  %lnot32 = xor i1 %tobool31, true
  %lnot34 = xor i1 %lnot32, true
  %lnot36 = xor i1 %lnot34, true
  %lnot.ext37 = zext i1 %lnot36 to i32
  %conv38 = sext i32 %lnot.ext37 to i64
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0)
  %tobool40 = icmp ne i64 %expval39, 0
  br i1 %tobool40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.then29
  %23 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %23, ptr %__pyx_filename, align 8, !tbaa !5
  %24 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 134, ptr %__pyx_lineno, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6257, ptr %__pyx_clineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end42:                                         ; preds = %if.then29
  %27 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %27, ptr noundef null, ptr noundef null, ptr noundef null)
  %28 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %28)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %29 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %29, ptr %__pyx_filename, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 134, ptr %__pyx_lineno, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6261, ptr %__pyx_clineno, align 4, !tbaa !9
  %32 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end43:                                         ; preds = %if.end12
  %33 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %cmp44 = icmp sle i64 %33, 0
  %conv45 = zext i1 %cmp44 to i32
  %cmp46 = icmp ne i32 %conv45, 0
  %conv47 = zext i1 %cmp46 to i32
  store i32 %conv47, ptr %__pyx_t_2, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool48 = icmp ne i32 %34, 0
  %lnot49 = xor i1 %tobool48, true
  %lnot51 = xor i1 %lnot49, true
  %lnot.ext52 = zext i1 %lnot51 to i32
  %conv53 = sext i32 %lnot.ext52 to i64
  %expval54 = call i64 @llvm.expect.i64(i64 %conv53, i64 0)
  %tobool55 = icmp ne i64 %expval54, 0
  br i1 %tobool55, label %if.then56, label %if.end70

if.then56:                                        ; preds = %if.end43
  %35 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %36 = load ptr, ptr @__pyx_tuple__6, align 8, !tbaa !5
  %call57 = call ptr @__Pyx_PyObject_Call(ptr noundef %35, ptr noundef %36, ptr noundef null)
  store ptr %call57, ptr %__pyx_t_3, align 8, !tbaa !5
  %37 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool58 = icmp ne ptr %37, null
  %lnot59 = xor i1 %tobool58, true
  %lnot61 = xor i1 %lnot59, true
  %lnot63 = xor i1 %lnot61, true
  %lnot.ext64 = zext i1 %lnot63 to i32
  %conv65 = sext i32 %lnot.ext64 to i64
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 0)
  %tobool67 = icmp ne i64 %expval66, 0
  br i1 %tobool67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %if.then56
  %38 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %38, ptr %__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 137, ptr %__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6289, ptr %__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end69:                                         ; preds = %if.then56
  %42 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %42, ptr noundef null, ptr noundef null, ptr noundef null)
  %43 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %43)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %44 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %44, ptr %__pyx_filename, align 8, !tbaa !5
  %45 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 137, ptr %__pyx_lineno, align 4, !tbaa !9
  %46 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6293, ptr %__pyx_clineno, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end70:                                         ; preds = %if.end43
  %48 = load ptr, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  %call71 = call ptr @Py_TYPE(ptr noundef %48)
  %call72 = call i32 @PyType_HasFeature(ptr noundef %call71, i64 noundef 134217728)
  store i32 %call72, ptr %__pyx_t_2, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp73 = icmp ne i32 %49, 0
  %lnot75 = xor i1 %cmp73, true
  %lnot.ext76 = zext i1 %lnot75 to i32
  %cmp77 = icmp ne i32 %lnot.ext76, 0
  %conv78 = zext i1 %cmp77 to i32
  store i32 %conv78, ptr %__pyx_t_4, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool79 = icmp ne i32 %50, 0
  br i1 %tobool79, label %if.then80, label %if.end134

if.then80:                                        ; preds = %if.end70
  %51 = load ptr, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  %52 = load ptr, ptr @__pyx_n_s_encode, align 8, !tbaa !5
  %call81 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %51, ptr noundef %52)
  store ptr %call81, ptr %__pyx_t_5, align 8, !tbaa !5
  %53 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool82 = icmp ne ptr %53, null
  %lnot83 = xor i1 %tobool82, true
  %lnot85 = xor i1 %lnot83, true
  %lnot87 = xor i1 %lnot85, true
  %lnot.ext88 = zext i1 %lnot87 to i32
  %conv89 = sext i32 %lnot.ext88 to i64
  %expval90 = call i64 @llvm.expect.i64(i64 %conv89, i64 0)
  %tobool91 = icmp ne i64 %expval90, 0
  br i1 %tobool91, label %if.then92, label %if.end93

if.then92:                                        ; preds = %if.then80
  %54 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %54, ptr %__pyx_filename, align 8, !tbaa !5
  %55 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 140, ptr %__pyx_lineno, align 4, !tbaa !9
  %56 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6322, ptr %__pyx_clineno, align 4, !tbaa !9
  %57 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end93:                                         ; preds = %if.then80
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %58 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %call94 = call i32 @Py_IS_TYPE(ptr noundef %58, ptr noundef @PyMethod_Type)
  %tobool95 = icmp ne i32 %call94, 0
  %lnot96 = xor i1 %tobool95, true
  %lnot98 = xor i1 %lnot96, true
  %lnot.ext99 = zext i1 %lnot98 to i32
  %conv100 = sext i32 %lnot.ext99 to i64
  %expval101 = call i64 @llvm.expect.i64(i64 %conv100, i64 1)
  %tobool102 = icmp ne i64 %expval101, 0
  br i1 %tobool102, label %if.then103, label %if.end114

if.then103:                                       ; preds = %if.end93
  %59 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %59, i32 0, i32 2
  %60 = load ptr, ptr %im_self, align 8, !tbaa !125
  store ptr %60, ptr %__pyx_t_6, align 8, !tbaa !5
  %61 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool104 = icmp ne ptr %61, null
  %lnot105 = xor i1 %tobool104, true
  %lnot107 = xor i1 %lnot105, true
  %lnot.ext108 = zext i1 %lnot107 to i32
  %conv109 = sext i32 %lnot.ext108 to i64
  %expval110 = call i64 @llvm.expect.i64(i64 %conv109, i64 1)
  %tobool111 = icmp ne i64 %expval110, 0
  br i1 %tobool111, label %if.then112, label %if.end113

if.then112:                                       ; preds = %if.then103
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #13
  %62 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %62, i32 0, i32 1
  %63 = load ptr, ptr %im_func, align 8, !tbaa !127
  store ptr %63, ptr %function, align 8, !tbaa !5
  %64 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %64)
  %65 = load ptr, ptr %function, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %65)
  br label %do.body

do.body:                                          ; preds = %if.then112
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %66 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr %66, ptr %tmp, align 8, !tbaa !5
  %67 = load ptr, ptr %function, align 8, !tbaa !5
  store ptr %67, ptr %__pyx_t_5, align 8, !tbaa !5
  %68 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %68)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #13
  br label %if.end113

if.end113:                                        ; preds = %do.end, %if.then103
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.end93
  %69 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool115 = icmp ne ptr %69, null
  br i1 %tobool115, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end114
  %70 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %71 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %72 = load ptr, ptr @__pyx_n_s_ASCII, align 8, !tbaa !5
  %call116 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %70, ptr noundef %71, ptr noundef %72)
  br label %cond.end

cond.false:                                       ; preds = %if.end114
  %73 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %74 = load ptr, ptr @__pyx_n_s_ASCII, align 8, !tbaa !5
  %call117 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %73, ptr noundef %74)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call116, %cond.true ], [ %call117, %cond.false ]
  store ptr %cond, ptr %__pyx_t_3, align 8, !tbaa !5
  %75 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %75)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %76 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool118 = icmp ne ptr %76, null
  %lnot119 = xor i1 %tobool118, true
  %lnot121 = xor i1 %lnot119, true
  %lnot123 = xor i1 %lnot121, true
  %lnot.ext124 = zext i1 %lnot123 to i32
  %conv125 = sext i32 %lnot.ext124 to i64
  %expval126 = call i64 @llvm.expect.i64(i64 %conv125, i64 0)
  %tobool127 = icmp ne i64 %expval126, 0
  br i1 %tobool127, label %if.then128, label %if.end129

if.then128:                                       ; preds = %cond.end
  %77 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %77, ptr %__pyx_filename, align 8, !tbaa !5
  %78 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 140, ptr %__pyx_lineno, align 4, !tbaa !9
  %79 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6336, ptr %__pyx_clineno, align 4, !tbaa !9
  %80 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end129:                                        ; preds = %cond.end
  %81 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %81)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  br label %do.body130

do.body130:                                       ; preds = %if.end129
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp131) #13
  %82 = load ptr, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  store ptr %82, ptr %tmp131, align 8, !tbaa !5
  %83 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %83, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  %84 = load ptr, ptr %tmp131, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %84)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp131) #13
  br label %do.cond132

do.cond132:                                       ; preds = %do.body130
  br label %do.end133

do.end133:                                        ; preds = %do.cond132
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %if.end134

if.end134:                                        ; preds = %do.end133, %if.end70
  %85 = load ptr, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  %call135 = call i32 @Py_IS_TYPE(ptr noundef %85, ptr noundef @PyBytes_Type)
  %tobool136 = icmp ne i32 %call135, 0
  %lnot137 = xor i1 %tobool136, true
  %lnot139 = xor i1 %lnot137, true
  %lnot.ext140 = zext i1 %lnot139 to i32
  %conv141 = sext i32 %lnot.ext140 to i64
  %expval142 = call i64 @llvm.expect.i64(i64 %conv141, i64 1)
  %tobool143 = icmp ne i64 %expval142, 0
  br i1 %tobool143, label %if.end150, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end134
  %86 = load ptr, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  %cmp144 = icmp eq ptr %86, @_Py_NoneStruct
  br i1 %cmp144, label %if.end150, label %lor.lhs.false146

lor.lhs.false146:                                 ; preds = %lor.lhs.false
  %87 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %88 = load ptr, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  %call147 = call ptr @Py_TYPE(ptr noundef %88)
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call147, i32 0, i32 1
  %89 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %call148 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %87, ptr noundef @.str.117, ptr noundef @.str.118, ptr noundef %89)
  br i1 false, label %if.end150, label %if.then149

if.then149:                                       ; preds = %lor.lhs.false146
  %90 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %90, ptr %__pyx_filename, align 8, !tbaa !5
  %91 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 141, ptr %__pyx_lineno, align 4, !tbaa !9
  %92 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6358, ptr %__pyx_clineno, align 4, !tbaa !9
  %93 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end150:                                        ; preds = %lor.lhs.false146, %lor.lhs.false, %if.end134
  %94 = load ptr, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  store ptr %94, ptr %__pyx_t_3, align 8, !tbaa !5
  %95 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %95)
  %96 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_format = getelementptr inbounds %struct.__pyx_array_obj, ptr %96, i32 0, i32 10
  %97 = load ptr, ptr %_format, align 8, !tbaa !135
  call void @Py_DECREF(ptr noundef %97)
  %98 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %99 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_format151 = getelementptr inbounds %struct.__pyx_array_obj, ptr %99, i32 0, i32 10
  store ptr %98, ptr %_format151, align 8, !tbaa !135
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %100 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_format152 = getelementptr inbounds %struct.__pyx_array_obj, ptr %100, i32 0, i32 10
  %101 = load ptr, ptr %_format152, align 8, !tbaa !135
  %cmp153 = icmp eq ptr %101, @_Py_NoneStruct
  %lnot155 = xor i1 %cmp153, true
  %lnot157 = xor i1 %lnot155, true
  %lnot.ext158 = zext i1 %lnot157 to i32
  %conv159 = sext i32 %lnot.ext158 to i64
  %expval160 = call i64 @llvm.expect.i64(i64 %conv159, i64 0)
  %tobool161 = icmp ne i64 %expval160, 0
  br i1 %tobool161, label %if.then162, label %if.end163

if.then162:                                       ; preds = %if.end150
  %102 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %102, ptr noundef @.str.119)
  %103 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %103, ptr %__pyx_filename, align 8, !tbaa !5
  %104 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 142, ptr %__pyx_lineno, align 4, !tbaa !9
  %105 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6376, ptr %__pyx_clineno, align 4, !tbaa !9
  %106 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end163:                                        ; preds = %if.end150
  %107 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_format164 = getelementptr inbounds %struct.__pyx_array_obj, ptr %107, i32 0, i32 10
  %108 = load ptr, ptr %_format164, align 8, !tbaa !135
  %call165 = call ptr @PyBytes_AS_STRING(ptr noundef %108)
  store ptr %call165, ptr %__pyx_t_7, align 8, !tbaa !5
  %109 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %tobool166 = icmp ne ptr %109, null
  br i1 %tobool166, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.end163
  %call167 = call ptr @PyErr_Occurred()
  %tobool168 = icmp ne ptr %call167, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end163
  %110 = phi i1 [ false, %if.end163 ], [ %tobool168, %land.rhs ]
  %lnot169 = xor i1 %110, true
  %lnot171 = xor i1 %lnot169, true
  %lnot.ext172 = zext i1 %lnot171 to i32
  %conv173 = sext i32 %lnot.ext172 to i64
  %expval174 = call i64 @llvm.expect.i64(i64 %conv173, i64 0)
  %tobool175 = icmp ne i64 %expval174, 0
  br i1 %tobool175, label %if.then176, label %if.end177

if.then176:                                       ; preds = %land.end
  %111 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %111, ptr %__pyx_filename, align 8, !tbaa !5
  %112 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 142, ptr %__pyx_lineno, align 4, !tbaa !9
  %113 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6378, ptr %__pyx_clineno, align 4, !tbaa !9
  %114 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end177:                                        ; preds = %land.end
  %115 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %116 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %format = getelementptr inbounds %struct.__pyx_array_obj, ptr %116, i32 0, i32 4
  store ptr %115, ptr %format, align 8, !tbaa !162
  %117 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %ndim178 = getelementptr inbounds %struct.__pyx_array_obj, ptr %117, i32 0, i32 5
  %118 = load i32, ptr %ndim178, align 8, !tbaa !145
  %conv179 = sext i32 %118 to i64
  %mul = mul i64 8, %conv179
  %mul180 = mul i64 %mul, 2
  %call181 = call ptr @PyObject_Malloc(i64 noundef %mul180)
  %119 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_shape = getelementptr inbounds %struct.__pyx_array_obj, ptr %119, i32 0, i32 6
  store ptr %call181, ptr %_shape, align 8, !tbaa !143
  %120 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_shape182 = getelementptr inbounds %struct.__pyx_array_obj, ptr %120, i32 0, i32 6
  %121 = load ptr, ptr %_shape182, align 8, !tbaa !143
  %122 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %ndim183 = getelementptr inbounds %struct.__pyx_array_obj, ptr %122, i32 0, i32 5
  %123 = load i32, ptr %ndim183, align 8, !tbaa !145
  %idx.ext = sext i32 %123 to i64
  %add.ptr = getelementptr i64, ptr %121, i64 %idx.ext
  %124 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_strides = getelementptr inbounds %struct.__pyx_array_obj, ptr %124, i32 0, i32 7
  store ptr %add.ptr, ptr %_strides, align 8, !tbaa !144
  %125 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_shape184 = getelementptr inbounds %struct.__pyx_array_obj, ptr %125, i32 0, i32 6
  %126 = load ptr, ptr %_shape184, align 8, !tbaa !143
  %cmp185 = icmp ne ptr %126, null
  %lnot187 = xor i1 %cmp185, true
  %lnot.ext188 = zext i1 %lnot187 to i32
  %cmp189 = icmp ne i32 %lnot.ext188, 0
  %conv190 = zext i1 %cmp189 to i32
  store i32 %conv190, ptr %__pyx_t_4, align 4, !tbaa !9
  %127 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool191 = icmp ne i32 %127, 0
  %lnot192 = xor i1 %tobool191, true
  %lnot194 = xor i1 %lnot192, true
  %lnot.ext195 = zext i1 %lnot194 to i32
  %conv196 = sext i32 %lnot.ext195 to i64
  %expval197 = call i64 @llvm.expect.i64(i64 %conv196, i64 0)
  %tobool198 = icmp ne i64 %expval197, 0
  br i1 %tobool198, label %if.then199, label %if.end213

if.then199:                                       ; preds = %if.end177
  %128 = load ptr, ptr @__pyx_builtin_MemoryError, align 8, !tbaa !5
  %129 = load ptr, ptr @__pyx_tuple__7, align 8, !tbaa !5
  %call200 = call ptr @__Pyx_PyObject_Call(ptr noundef %128, ptr noundef %129, ptr noundef null)
  store ptr %call200, ptr %__pyx_t_3, align 8, !tbaa !5
  %130 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool201 = icmp ne ptr %130, null
  %lnot202 = xor i1 %tobool201, true
  %lnot204 = xor i1 %lnot202, true
  %lnot206 = xor i1 %lnot204, true
  %lnot.ext207 = zext i1 %lnot206 to i32
  %conv208 = sext i32 %lnot.ext207 to i64
  %expval209 = call i64 @llvm.expect.i64(i64 %conv208, i64 0)
  %tobool210 = icmp ne i64 %expval209, 0
  br i1 %tobool210, label %if.then211, label %if.end212

if.then211:                                       ; preds = %if.then199
  %131 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %131, ptr %__pyx_filename, align 8, !tbaa !5
  %132 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 149, ptr %__pyx_lineno, align 4, !tbaa !9
  %133 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6416, ptr %__pyx_clineno, align 4, !tbaa !9
  %134 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end212:                                        ; preds = %if.then199
  %135 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %135, ptr noundef null, ptr noundef null, ptr noundef null)
  %136 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %136)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %137 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %137, ptr %__pyx_filename, align 8, !tbaa !5
  %138 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 149, ptr %__pyx_lineno, align 4, !tbaa !9
  %139 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6420, ptr %__pyx_clineno, align 4, !tbaa !9
  %140 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end213:                                        ; preds = %if.end177
  store i32 0, ptr %__pyx_t_8, align 4, !tbaa !9
  %141 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  store ptr %141, ptr %__pyx_t_3, align 8, !tbaa !5
  %142 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %142)
  store i64 0, ptr %__pyx_t_1, align 8, !tbaa !27
  br label %for.cond

for.cond:                                         ; preds = %if.end313, %if.end213
  %143 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  %144 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call214 = call i64 @PyTuple_GET_SIZE(ptr noundef %144)
  %cmp215 = icmp sge i64 %143, %call214
  br i1 %cmp215, label %if.then217, label %if.end218

if.then217:                                       ; preds = %for.cond
  br label %for.end

if.end218:                                        ; preds = %for.cond
  %145 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %145, i32 0, i32 1
  %146 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %146
  %147 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %147, ptr %__pyx_t_5, align 8, !tbaa !5
  %148 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %148)
  %149 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  %inc = add i64 %149, 1
  store i64 %inc, ptr %__pyx_t_1, align 8, !tbaa !27
  %150 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %call219 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %150)
  store i64 %call219, ptr %__pyx_t_9, align 8, !tbaa !27
  %151 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %cmp220 = icmp eq i64 %151, -1
  br i1 %cmp220, label %land.rhs222, label %land.end225

land.rhs222:                                      ; preds = %if.end218
  %call223 = call ptr @PyErr_Occurred()
  %tobool224 = icmp ne ptr %call223, null
  br label %land.end225

land.end225:                                      ; preds = %land.rhs222, %if.end218
  %152 = phi i1 [ false, %if.end218 ], [ %tobool224, %land.rhs222 ]
  %lnot226 = xor i1 %152, true
  %lnot228 = xor i1 %lnot226, true
  %lnot.ext229 = zext i1 %lnot228 to i32
  %conv230 = sext i32 %lnot.ext229 to i64
  %expval231 = call i64 @llvm.expect.i64(i64 %conv230, i64 0)
  %tobool232 = icmp ne i64 %expval231, 0
  br i1 %tobool232, label %if.then233, label %if.end234

if.then233:                                       ; preds = %land.end225
  %153 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %153, ptr %__pyx_filename, align 8, !tbaa !5
  %154 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 152, ptr %__pyx_lineno, align 4, !tbaa !9
  %155 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6448, ptr %__pyx_clineno, align 4, !tbaa !9
  %156 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end234:                                        ; preds = %land.end225
  %157 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %157)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %158 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  store i64 %158, ptr %__pyx_v_dim, align 8, !tbaa !27
  %159 = load i32, ptr %__pyx_t_8, align 4, !tbaa !9
  store i32 %159, ptr %__pyx_v_idx, align 4, !tbaa !9
  %160 = load i32, ptr %__pyx_t_8, align 4, !tbaa !9
  %add = add i32 %160, 1
  store i32 %add, ptr %__pyx_t_8, align 4, !tbaa !9
  %161 = load i64, ptr %__pyx_v_dim, align 8, !tbaa !27
  %cmp235 = icmp sle i64 %161, 0
  %conv236 = zext i1 %cmp235 to i32
  %cmp237 = icmp ne i32 %conv236, 0
  %conv238 = zext i1 %cmp237 to i32
  store i32 %conv238, ptr %__pyx_t_4, align 4, !tbaa !9
  %162 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool239 = icmp ne i32 %162, 0
  %lnot240 = xor i1 %tobool239, true
  %lnot242 = xor i1 %lnot240, true
  %lnot.ext243 = zext i1 %lnot242 to i32
  %conv244 = sext i32 %lnot.ext243 to i64
  %expval245 = call i64 @llvm.expect.i64(i64 %conv244, i64 0)
  %tobool246 = icmp ne i64 %expval245, 0
  br i1 %tobool246, label %if.then247, label %if.end313

if.then247:                                       ; preds = %if.end234
  %163 = load i32, ptr %__pyx_v_idx, align 4, !tbaa !9
  %call248 = call ptr @__Pyx_PyInt_From_int(i32 noundef %163)
  store ptr %call248, ptr %__pyx_t_5, align 8, !tbaa !5
  %164 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool249 = icmp ne ptr %164, null
  %lnot250 = xor i1 %tobool249, true
  %lnot252 = xor i1 %lnot250, true
  %lnot254 = xor i1 %lnot252, true
  %lnot.ext255 = zext i1 %lnot254 to i32
  %conv256 = sext i32 %lnot.ext255 to i64
  %expval257 = call i64 @llvm.expect.i64(i64 %conv256, i64 0)
  %tobool258 = icmp ne i64 %expval257, 0
  br i1 %tobool258, label %if.then259, label %if.end260

if.then259:                                       ; preds = %if.then247
  %165 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %165, ptr %__pyx_filename, align 8, !tbaa !5
  %166 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 154, ptr %__pyx_lineno, align 4, !tbaa !9
  %167 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6471, ptr %__pyx_clineno, align 4, !tbaa !9
  %168 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end260:                                        ; preds = %if.then247
  %169 = load i64, ptr %__pyx_v_dim, align 8, !tbaa !27
  %call261 = call ptr @PyLong_FromSsize_t(i64 noundef %169)
  store ptr %call261, ptr %__pyx_t_6, align 8, !tbaa !5
  %170 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool262 = icmp ne ptr %170, null
  %lnot263 = xor i1 %tobool262, true
  %lnot265 = xor i1 %lnot263, true
  %lnot267 = xor i1 %lnot265, true
  %lnot.ext268 = zext i1 %lnot267 to i32
  %conv269 = sext i32 %lnot.ext268 to i64
  %expval270 = call i64 @llvm.expect.i64(i64 %conv269, i64 0)
  %tobool271 = icmp ne i64 %expval270, 0
  br i1 %tobool271, label %if.then272, label %if.end273

if.then272:                                       ; preds = %if.end260
  %171 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %171, ptr %__pyx_filename, align 8, !tbaa !5
  %172 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 154, ptr %__pyx_lineno, align 4, !tbaa !9
  %173 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6473, ptr %__pyx_clineno, align 4, !tbaa !9
  %174 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end273:                                        ; preds = %if.end260
  %call274 = call ptr @PyTuple_New(i64 noundef 2)
  store ptr %call274, ptr %__pyx_t_10, align 8, !tbaa !5
  %175 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  %tobool275 = icmp ne ptr %175, null
  %lnot276 = xor i1 %tobool275, true
  %lnot278 = xor i1 %lnot276, true
  %lnot280 = xor i1 %lnot278, true
  %lnot.ext281 = zext i1 %lnot280 to i32
  %conv282 = sext i32 %lnot.ext281 to i64
  %expval283 = call i64 @llvm.expect.i64(i64 %conv282, i64 0)
  %tobool284 = icmp ne i64 %expval283, 0
  br i1 %tobool284, label %if.then285, label %if.end286

if.then285:                                       ; preds = %if.end273
  %176 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %176, ptr %__pyx_filename, align 8, !tbaa !5
  %177 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 154, ptr %__pyx_lineno, align 4, !tbaa !9
  %178 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6475, ptr %__pyx_clineno, align 4, !tbaa !9
  %179 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end286:                                        ; preds = %if.end273
  %180 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  %181 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %180, i64 noundef 0, ptr noundef %181)
  %182 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  %183 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %182, i64 noundef 1, ptr noundef %183)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %184 = load ptr, ptr @__pyx_kp_s_Invalid_shape_in_axis_d_d, align 8, !tbaa !5
  %185 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  %call287 = call ptr @PyUnicode_Format(ptr noundef %184, ptr noundef %185)
  store ptr %call287, ptr %__pyx_t_6, align 8, !tbaa !5
  %186 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool288 = icmp ne ptr %186, null
  %lnot289 = xor i1 %tobool288, true
  %lnot291 = xor i1 %lnot289, true
  %lnot293 = xor i1 %lnot291, true
  %lnot.ext294 = zext i1 %lnot293 to i32
  %conv295 = sext i32 %lnot.ext294 to i64
  %expval296 = call i64 @llvm.expect.i64(i64 %conv295, i64 0)
  %tobool297 = icmp ne i64 %expval296, 0
  br i1 %tobool297, label %if.then298, label %if.end299

if.then298:                                       ; preds = %if.end286
  %187 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %187, ptr %__pyx_filename, align 8, !tbaa !5
  %188 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 154, ptr %__pyx_lineno, align 4, !tbaa !9
  %189 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6483, ptr %__pyx_clineno, align 4, !tbaa !9
  %190 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end299:                                        ; preds = %if.end286
  %191 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %191)
  store ptr null, ptr %__pyx_t_10, align 8, !tbaa !5
  %192 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %193 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call300 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %192, ptr noundef %193)
  store ptr %call300, ptr %__pyx_t_10, align 8, !tbaa !5
  %194 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  %tobool301 = icmp ne ptr %194, null
  %lnot302 = xor i1 %tobool301, true
  %lnot304 = xor i1 %lnot302, true
  %lnot306 = xor i1 %lnot304, true
  %lnot.ext307 = zext i1 %lnot306 to i32
  %conv308 = sext i32 %lnot.ext307 to i64
  %expval309 = call i64 @llvm.expect.i64(i64 %conv308, i64 0)
  %tobool310 = icmp ne i64 %expval309, 0
  br i1 %tobool310, label %if.then311, label %if.end312

if.then311:                                       ; preds = %if.end299
  %195 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %195, ptr %__pyx_filename, align 8, !tbaa !5
  %196 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 154, ptr %__pyx_lineno, align 4, !tbaa !9
  %197 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6486, ptr %__pyx_clineno, align 4, !tbaa !9
  %198 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end312:                                        ; preds = %if.end299
  %199 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %199)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %200 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %200, ptr noundef null, ptr noundef null, ptr noundef null)
  %201 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %201)
  store ptr null, ptr %__pyx_t_10, align 8, !tbaa !5
  %202 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %202, ptr %__pyx_filename, align 8, !tbaa !5
  %203 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 154, ptr %__pyx_lineno, align 4, !tbaa !9
  %204 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6491, ptr %__pyx_clineno, align 4, !tbaa !9
  %205 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end313:                                        ; preds = %if.end234
  %206 = load i64, ptr %__pyx_v_dim, align 8, !tbaa !27
  %207 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_shape314 = getelementptr inbounds %struct.__pyx_array_obj, ptr %207, i32 0, i32 6
  %208 = load ptr, ptr %_shape314, align 8, !tbaa !143
  %209 = load i32, ptr %__pyx_v_idx, align 4, !tbaa !9
  %idxprom = sext i32 %209 to i64
  %arrayidx315 = getelementptr i64, ptr %208, i64 %idxprom
  store i64 %206, ptr %arrayidx315, align 8, !tbaa !27
  br label %for.cond

for.end:                                          ; preds = %if.then217
  %210 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %210)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %211 = load ptr, ptr %__pyx_v_mode.addr, align 8, !tbaa !5
  %212 = load ptr, ptr @__pyx_n_s_fortran, align 8, !tbaa !5
  %call316 = call i32 @__Pyx_PyUnicode_Equals(ptr noundef %211, ptr noundef %212, i32 noundef 2)
  store i32 %call316, ptr %__pyx_t_4, align 4, !tbaa !9
  %213 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp317 = icmp slt i32 %213, 0
  %lnot319 = xor i1 %cmp317, true
  %lnot321 = xor i1 %lnot319, true
  %lnot.ext322 = zext i1 %lnot321 to i32
  %conv323 = sext i32 %lnot.ext322 to i64
  %expval324 = call i64 @llvm.expect.i64(i64 %conv323, i64 0)
  %tobool325 = icmp ne i64 %expval324, 0
  br i1 %tobool325, label %if.then326, label %if.end327

if.then326:                                       ; preds = %for.end
  %214 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %214, ptr %__pyx_filename, align 8, !tbaa !5
  %215 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 158, ptr %__pyx_lineno, align 4, !tbaa !9
  %216 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6528, ptr %__pyx_clineno, align 4, !tbaa !9
  %217 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end327:                                        ; preds = %for.end
  %218 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool328 = icmp ne i32 %218, 0
  br i1 %tobool328, label %if.then329, label %if.end331

if.then329:                                       ; preds = %if.end327
  store i8 70, ptr %__pyx_v_order, align 1, !tbaa !29
  %219 = load ptr, ptr @__pyx_n_u_fortran, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %219)
  %220 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %mode = getelementptr inbounds %struct.__pyx_array_obj, ptr %220, i32 0, i32 9
  %221 = load ptr, ptr %mode, align 8, !tbaa !134
  call void @Py_DECREF(ptr noundef %221)
  %222 = load ptr, ptr @__pyx_n_u_fortran, align 8, !tbaa !5
  %223 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %mode330 = getelementptr inbounds %struct.__pyx_array_obj, ptr %223, i32 0, i32 9
  store ptr %222, ptr %mode330, align 8, !tbaa !134
  br label %__pyx_L10

if.end331:                                        ; preds = %if.end327
  %224 = load ptr, ptr %__pyx_v_mode.addr, align 8, !tbaa !5
  %225 = load ptr, ptr @__pyx_n_s_c, align 8, !tbaa !5
  %call332 = call i32 @__Pyx_PyUnicode_Equals(ptr noundef %224, ptr noundef %225, i32 noundef 2)
  store i32 %call332, ptr %__pyx_t_4, align 4, !tbaa !9
  %226 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp333 = icmp slt i32 %226, 0
  %lnot335 = xor i1 %cmp333, true
  %lnot337 = xor i1 %lnot335, true
  %lnot.ext338 = zext i1 %lnot337 to i32
  %conv339 = sext i32 %lnot.ext338 to i64
  %expval340 = call i64 @llvm.expect.i64(i64 %conv339, i64 0)
  %tobool341 = icmp ne i64 %expval340, 0
  br i1 %tobool341, label %if.then342, label %if.end343

if.then342:                                       ; preds = %if.end331
  %227 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %227, ptr %__pyx_filename, align 8, !tbaa !5
  %228 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 161, ptr %__pyx_lineno, align 4, !tbaa !9
  %229 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6570, ptr %__pyx_clineno, align 4, !tbaa !9
  %230 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end343:                                        ; preds = %if.end331
  %231 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool344 = icmp ne i32 %231, 0
  %lnot345 = xor i1 %tobool344, true
  %lnot347 = xor i1 %lnot345, true
  %lnot.ext348 = zext i1 %lnot347 to i32
  %conv349 = sext i32 %lnot.ext348 to i64
  %expval350 = call i64 @llvm.expect.i64(i64 %conv349, i64 1)
  %tobool351 = icmp ne i64 %expval350, 0
  br i1 %tobool351, label %if.then352, label %if.end355

if.then352:                                       ; preds = %if.end343
  store i8 67, ptr %__pyx_v_order, align 1, !tbaa !29
  %232 = load ptr, ptr @__pyx_n_u_c, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %232)
  %233 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %mode353 = getelementptr inbounds %struct.__pyx_array_obj, ptr %233, i32 0, i32 9
  %234 = load ptr, ptr %mode353, align 8, !tbaa !134
  call void @Py_DECREF(ptr noundef %234)
  %235 = load ptr, ptr @__pyx_n_u_c, align 8, !tbaa !5
  %236 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %mode354 = getelementptr inbounds %struct.__pyx_array_obj, ptr %236, i32 0, i32 9
  store ptr %235, ptr %mode354, align 8, !tbaa !134
  br label %__pyx_L10

if.end355:                                        ; preds = %if.end343
  %237 = load ptr, ptr @__pyx_kp_s_Invalid_mode_expected_c_or_fortr, align 8, !tbaa !5
  %cmp356 = icmp eq ptr %237, @_Py_NoneStruct
  br i1 %cmp356, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end355
  %238 = load ptr, ptr %__pyx_v_mode.addr, align 8, !tbaa !5
  %call358 = call ptr @Py_TYPE(ptr noundef %238)
  %call359 = call i32 @PyType_HasFeature(ptr noundef %call358, i64 noundef 268435456)
  %tobool360 = icmp ne i32 %call359, 0
  br i1 %tobool360, label %land.rhs361, label %land.end366

land.rhs361:                                      ; preds = %lor.rhs
  %239 = load ptr, ptr %__pyx_v_mode.addr, align 8, !tbaa !5
  %call362 = call i32 @Py_IS_TYPE(ptr noundef %239, ptr noundef @PyUnicode_Type)
  %tobool363 = icmp ne i32 %call362, 0
  %lnot364 = xor i1 %tobool363, true
  br label %land.end366

land.end366:                                      ; preds = %land.rhs361, %lor.rhs
  %240 = phi i1 [ false, %lor.rhs ], [ %lnot364, %land.rhs361 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end366, %if.end355
  %241 = phi i1 [ true, %if.end355 ], [ %240, %land.end366 ]
  %lnot367 = xor i1 %241, true
  %lnot369 = xor i1 %lnot367, true
  %lnot.ext370 = zext i1 %lnot369 to i32
  %conv371 = sext i32 %lnot.ext370 to i64
  %expval372 = call i64 @llvm.expect.i64(i64 %conv371, i64 0)
  %tobool373 = icmp ne i64 %expval372, 0
  br i1 %tobool373, label %cond.true374, label %cond.false376

cond.true374:                                     ; preds = %lor.end
  %242 = load ptr, ptr @__pyx_kp_s_Invalid_mode_expected_c_or_fortr, align 8, !tbaa !5
  %243 = load ptr, ptr %__pyx_v_mode.addr, align 8, !tbaa !5
  %call375 = call ptr @PyNumber_Remainder(ptr noundef %242, ptr noundef %243)
  br label %cond.end378

cond.false376:                                    ; preds = %lor.end
  %244 = load ptr, ptr @__pyx_kp_s_Invalid_mode_expected_c_or_fortr, align 8, !tbaa !5
  %245 = load ptr, ptr %__pyx_v_mode.addr, align 8, !tbaa !5
  %call377 = call ptr @PyUnicode_Format(ptr noundef %244, ptr noundef %245)
  br label %cond.end378

cond.end378:                                      ; preds = %cond.false376, %cond.true374
  %cond379 = phi ptr [ %call375, %cond.true374 ], [ %call377, %cond.false376 ]
  store ptr %cond379, ptr %__pyx_t_3, align 8, !tbaa !5
  %246 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool380 = icmp ne ptr %246, null
  %lnot381 = xor i1 %tobool380, true
  %lnot383 = xor i1 %lnot381, true
  %lnot385 = xor i1 %lnot383, true
  %lnot.ext386 = zext i1 %lnot385 to i32
  %conv387 = sext i32 %lnot.ext386 to i64
  %expval388 = call i64 @llvm.expect.i64(i64 %conv387, i64 0)
  %tobool389 = icmp ne i64 %expval388, 0
  br i1 %tobool389, label %if.then390, label %if.end391

if.then390:                                       ; preds = %cond.end378
  %247 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %247, ptr %__pyx_filename, align 8, !tbaa !5
  %248 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 165, ptr %__pyx_lineno, align 4, !tbaa !9
  %249 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6613, ptr %__pyx_clineno, align 4, !tbaa !9
  %250 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end391:                                        ; preds = %cond.end378
  %251 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %252 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call392 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %251, ptr noundef %252)
  store ptr %call392, ptr %__pyx_t_10, align 8, !tbaa !5
  %253 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  %tobool393 = icmp ne ptr %253, null
  %lnot394 = xor i1 %tobool393, true
  %lnot396 = xor i1 %lnot394, true
  %lnot398 = xor i1 %lnot396, true
  %lnot.ext399 = zext i1 %lnot398 to i32
  %conv400 = sext i32 %lnot.ext399 to i64
  %expval401 = call i64 @llvm.expect.i64(i64 %conv400, i64 0)
  %tobool402 = icmp ne i64 %expval401, 0
  br i1 %tobool402, label %if.then403, label %if.end404

if.then403:                                       ; preds = %if.end391
  %254 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %254, ptr %__pyx_filename, align 8, !tbaa !5
  %255 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 165, ptr %__pyx_lineno, align 4, !tbaa !9
  %256 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6615, ptr %__pyx_clineno, align 4, !tbaa !9
  %257 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end404:                                        ; preds = %if.end391
  %258 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %258)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %259 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %259, ptr noundef null, ptr noundef null, ptr noundef null)
  %260 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %260)
  store ptr null, ptr %__pyx_t_10, align 8, !tbaa !5
  %261 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %261, ptr %__pyx_filename, align 8, !tbaa !5
  %262 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 165, ptr %__pyx_lineno, align 4, !tbaa !9
  %263 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6620, ptr %__pyx_clineno, align 4, !tbaa !9
  %264 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

__pyx_L10:                                        ; preds = %if.then352, %if.then329
  %265 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_shape405 = getelementptr inbounds %struct.__pyx_array_obj, ptr %265, i32 0, i32 6
  %266 = load ptr, ptr %_shape405, align 8, !tbaa !143
  %267 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_strides406 = getelementptr inbounds %struct.__pyx_array_obj, ptr %267, i32 0, i32 7
  %268 = load ptr, ptr %_strides406, align 8, !tbaa !144
  %269 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %270 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %ndim407 = getelementptr inbounds %struct.__pyx_array_obj, ptr %270, i32 0, i32 5
  %271 = load i32, ptr %ndim407, align 8, !tbaa !145
  %272 = load i8, ptr %__pyx_v_order, align 1, !tbaa !29
  %call408 = call i64 @__pyx_fill_contig_strides_array(ptr noundef %266, ptr noundef %268, i64 noundef %269, i32 noundef %271, i8 noundef signext %272)
  %273 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %len = getelementptr inbounds %struct.__pyx_array_obj, ptr %273, i32 0, i32 3
  store i64 %call408, ptr %len, align 8, !tbaa !163
  %274 = load i32, ptr %__pyx_v_allocate_buffer.addr, align 4, !tbaa !9
  %275 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %free_data = getelementptr inbounds %struct.__pyx_array_obj, ptr %275, i32 0, i32 12
  store i32 %274, ptr %free_data, align 8, !tbaa !142
  %276 = load ptr, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  %277 = load ptr, ptr @__pyx_n_b_O, align 8, !tbaa !5
  %call409 = call ptr @PyObject_RichCompare(ptr noundef %276, ptr noundef %277, i32 noundef 2)
  store ptr %call409, ptr %__pyx_t_10, align 8, !tbaa !5
  %278 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  %tobool410 = icmp ne ptr %278, null
  %lnot411 = xor i1 %tobool410, true
  %lnot413 = xor i1 %lnot411, true
  %lnot415 = xor i1 %lnot413, true
  %lnot.ext416 = zext i1 %lnot415 to i32
  %conv417 = sext i32 %lnot.ext416 to i64
  %expval418 = call i64 @llvm.expect.i64(i64 %conv417, i64 0)
  %tobool419 = icmp ne i64 %expval418, 0
  br i1 %tobool419, label %if.then420, label %if.end421

if.then420:                                       ; preds = %__pyx_L10
  %279 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %279, ptr %__pyx_filename, align 8, !tbaa !5
  %280 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 171, ptr %__pyx_lineno, align 4, !tbaa !9
  %281 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6649, ptr %__pyx_clineno, align 4, !tbaa !9
  %282 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end421:                                        ; preds = %__pyx_L10
  %283 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  %call422 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %283)
  store i32 %call422, ptr %__pyx_t_4, align 4, !tbaa !9
  %284 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp423 = icmp eq i32 %284, -1
  br i1 %cmp423, label %land.rhs425, label %land.end428

land.rhs425:                                      ; preds = %if.end421
  %call426 = call ptr @PyErr_Occurred()
  %tobool427 = icmp ne ptr %call426, null
  br label %land.end428

land.end428:                                      ; preds = %land.rhs425, %if.end421
  %285 = phi i1 [ false, %if.end421 ], [ %tobool427, %land.rhs425 ]
  %lnot429 = xor i1 %285, true
  %lnot431 = xor i1 %lnot429, true
  %lnot.ext432 = zext i1 %lnot431 to i32
  %conv433 = sext i32 %lnot.ext432 to i64
  %expval434 = call i64 @llvm.expect.i64(i64 %conv433, i64 0)
  %tobool435 = icmp ne i64 %expval434, 0
  br i1 %tobool435, label %if.then436, label %if.end437

if.then436:                                       ; preds = %land.end428
  %286 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %286, ptr %__pyx_filename, align 8, !tbaa !5
  %287 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 171, ptr %__pyx_lineno, align 4, !tbaa !9
  %288 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6650, ptr %__pyx_clineno, align 4, !tbaa !9
  %289 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end437:                                        ; preds = %land.end428
  %290 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %290)
  store ptr null, ptr %__pyx_t_10, align 8, !tbaa !5
  %291 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %292 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %dtype_is_object = getelementptr inbounds %struct.__pyx_array_obj, ptr %292, i32 0, i32 13
  store i32 %291, ptr %dtype_is_object, align 4, !tbaa !110
  %293 = load i32, ptr %__pyx_v_allocate_buffer.addr, align 4, !tbaa !9
  %cmp438 = icmp ne i32 %293, 0
  %conv439 = zext i1 %cmp438 to i32
  store i32 %conv439, ptr %__pyx_t_4, align 4, !tbaa !9
  %294 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool440 = icmp ne i32 %294, 0
  br i1 %tobool440, label %if.then441, label %if.end525

if.then441:                                       ; preds = %if.end437
  %295 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %len442 = getelementptr inbounds %struct.__pyx_array_obj, ptr %295, i32 0, i32 3
  %296 = load i64, ptr %len442, align 8, !tbaa !163
  %call443 = call noalias ptr @malloc(i64 noundef %296) #17
  %297 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__pyx_array_obj, ptr %297, i32 0, i32 2
  store ptr %call443, ptr %data, align 8, !tbaa !141
  %298 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %data444 = getelementptr inbounds %struct.__pyx_array_obj, ptr %298, i32 0, i32 2
  %299 = load ptr, ptr %data444, align 8, !tbaa !141
  %cmp445 = icmp ne ptr %299, null
  %lnot447 = xor i1 %cmp445, true
  %lnot.ext448 = zext i1 %lnot447 to i32
  %cmp449 = icmp ne i32 %lnot.ext448, 0
  %conv450 = zext i1 %cmp449 to i32
  store i32 %conv450, ptr %__pyx_t_4, align 4, !tbaa !9
  %300 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool451 = icmp ne i32 %300, 0
  %lnot452 = xor i1 %tobool451, true
  %lnot454 = xor i1 %lnot452, true
  %lnot.ext455 = zext i1 %lnot454 to i32
  %conv456 = sext i32 %lnot.ext455 to i64
  %expval457 = call i64 @llvm.expect.i64(i64 %conv456, i64 0)
  %tobool458 = icmp ne i64 %expval457, 0
  br i1 %tobool458, label %if.then459, label %if.end473

if.then459:                                       ; preds = %if.then441
  %301 = load ptr, ptr @__pyx_builtin_MemoryError, align 8, !tbaa !5
  %302 = load ptr, ptr @__pyx_tuple__8, align 8, !tbaa !5
  %call460 = call ptr @__Pyx_PyObject_Call(ptr noundef %301, ptr noundef %302, ptr noundef null)
  store ptr %call460, ptr %__pyx_t_10, align 8, !tbaa !5
  %303 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  %tobool461 = icmp ne ptr %303, null
  %lnot462 = xor i1 %tobool461, true
  %lnot464 = xor i1 %lnot462, true
  %lnot466 = xor i1 %lnot464, true
  %lnot.ext467 = zext i1 %lnot466 to i32
  %conv468 = sext i32 %lnot.ext467 to i64
  %expval469 = call i64 @llvm.expect.i64(i64 %conv468, i64 0)
  %tobool470 = icmp ne i64 %expval469, 0
  br i1 %tobool470, label %if.then471, label %if.end472

if.then471:                                       ; preds = %if.then459
  %304 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %304, ptr %__pyx_filename, align 8, !tbaa !5
  %305 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 177, ptr %__pyx_lineno, align 4, !tbaa !9
  %306 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6690, ptr %__pyx_clineno, align 4, !tbaa !9
  %307 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end472:                                        ; preds = %if.then459
  %308 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %308, ptr noundef null, ptr noundef null, ptr noundef null)
  %309 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %309)
  store ptr null, ptr %__pyx_t_10, align 8, !tbaa !5
  %310 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %310, ptr %__pyx_filename, align 8, !tbaa !5
  %311 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 177, ptr %__pyx_lineno, align 4, !tbaa !9
  %312 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6694, ptr %__pyx_clineno, align 4, !tbaa !9
  %313 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end473:                                        ; preds = %if.then441
  %314 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %dtype_is_object474 = getelementptr inbounds %struct.__pyx_array_obj, ptr %314, i32 0, i32 13
  %315 = load i32, ptr %dtype_is_object474, align 4, !tbaa !110
  %cmp475 = icmp ne i32 %315, 0
  %conv476 = zext i1 %cmp475 to i32
  store i32 %conv476, ptr %__pyx_t_4, align 4, !tbaa !9
  %316 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool477 = icmp ne i32 %316, 0
  br i1 %tobool477, label %if.then478, label %if.end524

if.then478:                                       ; preds = %if.end473
  %317 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %data479 = getelementptr inbounds %struct.__pyx_array_obj, ptr %317, i32 0, i32 2
  %318 = load ptr, ptr %data479, align 8, !tbaa !141
  store ptr %318, ptr %__pyx_v_p, align 8, !tbaa !5
  %319 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %cmp480 = icmp eq i64 %319, 0
  %lnot482 = xor i1 %cmp480, true
  %lnot484 = xor i1 %lnot482, true
  %lnot.ext485 = zext i1 %lnot484 to i32
  %conv486 = sext i32 %lnot.ext485 to i64
  %expval487 = call i64 @llvm.expect.i64(i64 %conv486, i64 0)
  %tobool488 = icmp ne i64 %expval487, 0
  br i1 %tobool488, label %if.then489, label %if.else

if.then489:                                       ; preds = %if.then478
  %320 = load ptr, ptr @PyExc_ZeroDivisionError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %320, ptr noundef @.str.120)
  %321 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %321, ptr %__pyx_filename, align 8, !tbaa !5
  %322 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 181, ptr %__pyx_lineno, align 4, !tbaa !9
  %323 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6733, ptr %__pyx_clineno, align 4, !tbaa !9
  %324 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.else:                                          ; preds = %if.then478
  %325 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %cmp490 = icmp eq i64 %325, -1
  %lnot492 = xor i1 %cmp490, true
  %lnot494 = xor i1 %lnot492, true
  %lnot.ext495 = zext i1 %lnot494 to i32
  %conv496 = sext i32 %lnot.ext495 to i64
  %expval497 = call i64 @llvm.expect.i64(i64 %conv496, i64 0)
  %tobool498 = icmp ne i64 %expval497, 0
  br i1 %tobool498, label %land.lhs.true, label %if.end515

land.lhs.true:                                    ; preds = %if.else
  %326 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %len499 = getelementptr inbounds %struct.__pyx_array_obj, ptr %326, i32 0, i32 3
  %327 = load i64, ptr %len499, align 8, !tbaa !163
  %cmp500 = icmp slt i64 %327, 0
  %conv501 = zext i1 %cmp500 to i32
  %328 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %len502 = getelementptr inbounds %struct.__pyx_array_obj, ptr %328, i32 0, i32 3
  %329 = load i64, ptr %len502, align 8, !tbaa !163
  %330 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %len503 = getelementptr inbounds %struct.__pyx_array_obj, ptr %330, i32 0, i32 3
  %331 = load i64, ptr %len503, align 8, !tbaa !163
  %sub = sub i64 0, %331
  %cmp504 = icmp eq i64 %329, %sub
  %conv505 = zext i1 %cmp504 to i32
  %and = and i32 %conv501, %conv505
  %tobool506 = icmp ne i32 %and, 0
  %lnot507 = xor i1 %tobool506, true
  %lnot509 = xor i1 %lnot507, true
  %lnot.ext510 = zext i1 %lnot509 to i32
  %conv511 = sext i32 %lnot.ext510 to i64
  %expval512 = call i64 @llvm.expect.i64(i64 %conv511, i64 0)
  %tobool513 = icmp ne i64 %expval512, 0
  br i1 %tobool513, label %if.then514, label %if.end515

if.then514:                                       ; preds = %land.lhs.true
  %332 = load ptr, ptr @PyExc_OverflowError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %332, ptr noundef @.str.121)
  %333 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %333, ptr %__pyx_filename, align 8, !tbaa !5
  %334 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 181, ptr %__pyx_lineno, align 4, !tbaa !9
  %335 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6737, ptr %__pyx_clineno, align 4, !tbaa !9
  %336 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end515:                                        ; preds = %land.lhs.true, %if.else
  br label %if.end516

if.end516:                                        ; preds = %if.end515
  %337 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %len517 = getelementptr inbounds %struct.__pyx_array_obj, ptr %337, i32 0, i32 3
  %338 = load i64, ptr %len517, align 8, !tbaa !163
  %339 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %div = sdiv i64 %338, %339
  store i64 %div, ptr %__pyx_t_1, align 8, !tbaa !27
  %340 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  store i64 %340, ptr %__pyx_t_9, align 8, !tbaa !27
  store i64 0, ptr %__pyx_t_11, align 8, !tbaa !27
  br label %for.cond518

for.cond518:                                      ; preds = %for.inc, %if.end516
  %341 = load i64, ptr %__pyx_t_11, align 8, !tbaa !27
  %342 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %cmp519 = icmp slt i64 %341, %342
  br i1 %cmp519, label %for.body, label %for.end523

for.body:                                         ; preds = %for.cond518
  %343 = load i64, ptr %__pyx_t_11, align 8, !tbaa !27
  store i64 %343, ptr %__pyx_v_i, align 8, !tbaa !27
  %344 = load ptr, ptr %__pyx_v_p, align 8, !tbaa !5
  %345 = load i64, ptr %__pyx_v_i, align 8, !tbaa !27
  %arrayidx521 = getelementptr ptr, ptr %344, i64 %345
  store ptr @_Py_NoneStruct, ptr %arrayidx521, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %346 = load i64, ptr %__pyx_t_11, align 8, !tbaa !27
  %add522 = add i64 %346, 1
  store i64 %add522, ptr %__pyx_t_11, align 8, !tbaa !27
  br label %for.cond518, !llvm.loop !164

for.end523:                                       ; preds = %for.cond518
  br label %if.end524

if.end524:                                        ; preds = %for.end523, %if.end473
  br label %if.end525

if.end525:                                        ; preds = %if.end524, %if.end437
  store i32 0, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then514, %if.then489, %if.end472, %if.then471, %if.then436, %if.then420, %if.end404, %if.then403, %if.then390, %if.then342, %if.then326, %if.end312, %if.then311, %if.then298, %if.then285, %if.then272, %if.then259, %if.then233, %if.end212, %if.then211, %if.then176, %if.then162, %if.then149, %if.then128, %if.then92, %if.end69, %if.then68, %if.end42, %if.then41, %if.then11, %if.then
  %347 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %347)
  %348 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %348)
  %349 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %349)
  %350 = load ptr, ptr %__pyx_t_10, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %350)
  %351 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %352 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %353 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.102, i32 noundef %351, i32 noundef %352, ptr noundef %353)
  store i32 -1, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end525
  %354 = load ptr, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %354)
  %355 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 1, ptr %__pyx_v_order) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_p) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_dim) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_idx) #13
  ret i32 %355
}

declare i32 @PyDict_Next(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyUnicode_GET_LENGTH(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %length = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 1
  %1 = load i64, ptr %length, align 8, !tbaa !165
  ret i64 %1
}

declare i32 @PyUnicode_Compare(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_RaiseDoubleKeywordsError(ptr noundef %func_name, ptr noundef %kw_name) #0 {
entry:
  %func_name.addr = alloca ptr, align 8
  %kw_name.addr = alloca ptr, align 8
  store ptr %func_name, ptr %func_name.addr, align 8, !tbaa !5
  store ptr %kw_name, ptr %kw_name.addr, align 8, !tbaa !5
  %0 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %1 = load ptr, ptr %func_name.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %kw_name.addr, align 8, !tbaa !5
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.113, ptr noundef %1, ptr noundef %2)
  ret void
}

declare i32 @PyObject_IsTrue(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_IsSubtype(ptr noundef %a, ptr noundef %b) #3 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca ptr, align 8
  %b.addr = alloca ptr, align 8
  %mro = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !5
  store ptr %b, ptr %b.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %mro) #13
  %0 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup13

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %tp_mro = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 41
  %3 = load ptr, ptr %tp_mro, align 8, !tbaa !166
  store ptr %3, ptr %mro, align 8, !tbaa !5
  %4 = load ptr, ptr %mro, align 8, !tbaa !5
  %tobool = icmp ne ptr %4, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then3, label %if.end11

if.then3:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #13
  %5 = load ptr, ptr %mro, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %5)
  store i64 %call, ptr %n, align 8, !tbaa !27
  store i64 0, ptr %i, align 8, !tbaa !27
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, ptr %i, align 8, !tbaa !27
  %7 = load i64, ptr %n, align 8, !tbaa !27
  %cmp4 = icmp slt i64 %6, %7
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load ptr, ptr %mro, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %8, i32 0, i32 1
  %9 = load i64, ptr %i, align 8, !tbaa !27
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %9
  %10 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %11 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %cmp6 = icmp eq ptr %10, %11
  br i1 %cmp6, label %if.then8, label %if.end9

if.then8:                                         ; preds = %for.body
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end9:                                          ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end9
  %12 = load i64, ptr %i, align 8, !tbaa !27
  %inc = add i64 %12, 1
  store i64 %inc, ptr %i, align 8, !tbaa !27
  br label %for.cond, !llvm.loop !167

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then8
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #13
  br label %cleanup13

if.end11:                                         ; preds = %if.end
  %13 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %14 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %call12 = call i32 @__Pyx_InBases(ptr noundef %13, ptr noundef %14)
  store i32 %call12, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup13

cleanup13:                                        ; preds = %if.end11, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mro) #13
  %15 = load i32, ptr %retval, align 4
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InBases(ptr noundef %a, ptr noundef %b) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca ptr, align 8
  %b.addr = alloca ptr, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !5
  store ptr %b, ptr %b.addr, align 8, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %0 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %tp_base = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 30
  %2 = load ptr, ptr %tp_base, align 8, !tbaa !33
  store ptr %2, ptr %a.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %3, %4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  store i32 1, ptr %retval, align 4
  br label %return

if.end:                                           ; preds = %while.body
  br label %while.cond, !llvm.loop !168

while.end:                                        ; preds = %while.cond
  %5 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %cmp1 = icmp eq ptr %5, @PyBaseObject_Type
  %conv = zext i1 %cmp1 to i32
  store i32 %conv, ptr %retval, align 4
  br label %return

return:                                           ; preds = %while.end, %if.then
  %6 = load i32, ptr %retval, align 4
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyObject_Call2Args(ptr noundef %function, ptr noundef %arg1, ptr noundef %arg2) #0 {
entry:
  %function.addr = alloca ptr, align 8
  %arg1.addr = alloca ptr, align 8
  %arg2.addr = alloca ptr, align 8
  %args = alloca ptr, align 8
  %result = alloca ptr, align 8
  store ptr %function, ptr %function.addr, align 8, !tbaa !5
  store ptr %arg1, ptr %arg1.addr, align 8, !tbaa !5
  store ptr %arg2, ptr %arg2.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %args) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  store ptr null, ptr %result, align 8, !tbaa !5
  %call = call ptr @PyTuple_New(i64 noundef 2)
  store ptr %call, ptr %args, align 8, !tbaa !5
  %0 = load ptr, ptr %args, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %done

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %arg1.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %1)
  %2 = load ptr, ptr %args, align 8, !tbaa !5
  %3 = load ptr, ptr %arg1.addr, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %2, i64 noundef 0, ptr noundef %3)
  %4 = load ptr, ptr %arg2.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %4)
  %5 = load ptr, ptr %args, align 8, !tbaa !5
  %6 = load ptr, ptr %arg2.addr, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %5, i64 noundef 1, ptr noundef %6)
  %7 = load ptr, ptr %function.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %7)
  %8 = load ptr, ptr %function.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %args, align 8, !tbaa !5
  %call4 = call ptr @__Pyx_PyObject_Call(ptr noundef %8, ptr noundef %9, ptr noundef null)
  store ptr %call4, ptr %result, align 8, !tbaa !5
  %10 = load ptr, ptr %args, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %10)
  %11 = load ptr, ptr %function.addr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %11)
  br label %done

done:                                             ; preds = %if.end, %if.then
  %12 = load ptr, ptr %result, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %args) #13
  ret ptr %12
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_CallOneArg(ptr noundef %func, ptr noundef %arg) #3 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %call = call i32 @PyObject_TypeCheck(ptr noundef %0, ptr noundef @PyCFunction_Type)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end14

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %call3 = call i32 @PyCFunction_GET_FLAGS(ptr noundef %1)
  %and = and i32 %call3, 8
  %tobool4 = icmp ne i32 %and, 0
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1)
  %tobool11 = icmp ne i64 %expval10, 0
  br i1 %tobool11, label %if.then12, label %if.end

if.then12:                                        ; preds = %if.then
  %2 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call13 = call ptr @__Pyx_PyObject_CallMethO(ptr noundef %2, ptr noundef %3)
  store ptr %call13, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end14

if.end14:                                         ; preds = %if.end, %entry
  %4 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call15 = call ptr @__Pyx__PyObject_CallOneArg(ptr noundef %4, ptr noundef %5)
  store ptr %call15, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end14, %if.then12
  %6 = load ptr, ptr %retval, align 8
  ret ptr %6
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @PyBytes_AS_STRING(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, ptr %0, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], ptr %ob_sval, i64 0, i64 0
  ret ptr %arraydecay
}

declare ptr @PyUnicode_Format(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyUnicode_Equals(ptr noundef %s1, ptr noundef %s2, i32 noundef %equals) #3 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca ptr, align 8
  %s2.addr = alloca ptr, align 8
  %equals.addr = alloca i32, align 4
  %s1_is_unicode = alloca i32, align 4
  %s2_is_unicode = alloca i32, align 4
  %length = alloca i64, align 8
  %kind = alloca i32, align 4
  %data1 = alloca ptr, align 8
  %data2 = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %hash1 = alloca i64, align 8
  %hash2 = alloca i64, align 8
  %result = alloca i32, align 4
  %result108 = alloca i32, align 4
  %py_result = alloca ptr, align 8
  store ptr %s1, ptr %s1.addr, align 8, !tbaa !5
  store ptr %s2, ptr %s2.addr, align 8, !tbaa !5
  store i32 %equals, ptr %equals.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %s1_is_unicode) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %s2_is_unicode) #13
  %0 = load ptr, ptr %s1.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %s2.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return_eq

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %s1.addr, align 8, !tbaa !5
  %call = call i32 @Py_IS_TYPE(ptr noundef %2, ptr noundef @PyUnicode_Type)
  store i32 %call, ptr %s1_is_unicode, align 4, !tbaa !9
  %3 = load ptr, ptr %s2.addr, align 8, !tbaa !5
  %call1 = call i32 @Py_IS_TYPE(ptr noundef %3, ptr noundef @PyUnicode_Type)
  store i32 %call1, ptr %s2_is_unicode, align 4, !tbaa !9
  %4 = load i32, ptr %s1_is_unicode, align 4, !tbaa !9
  %5 = load i32, ptr %s2_is_unicode, align 4, !tbaa !9
  %and = and i32 %4, %5
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then2, label %if.else95

if.then2:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %length) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %kind) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %data1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %data2) #13
  %6 = load ptr, ptr %s1.addr, align 8, !tbaa !5
  %call3 = call i32 @PyUnicode_IS_READY(ptr noundef %6)
  %tobool4 = icmp ne i32 %call3, 0
  %lnot = xor i1 %tobool4, true
  %lnot5 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot5 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool6 = icmp ne i64 %expval, 0
  br i1 %tobool6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then2
  br label %cond.end

cond.false:                                       ; preds = %if.then2
  %7 = load ptr, ptr %s1.addr, align 8, !tbaa !5
  %call7 = call i32 @_PyUnicode_Ready(ptr noundef %7)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call7, %cond.false ]
  %cmp8 = icmp slt i32 %cond, 0
  %lnot10 = xor i1 %cmp8, true
  %lnot12 = xor i1 %lnot10, true
  %lnot.ext13 = zext i1 %lnot12 to i32
  %conv14 = sext i32 %lnot.ext13 to i64
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0)
  %tobool16 = icmp ne i64 %expval15, 0
  br i1 %tobool16, label %if.then40, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end
  %8 = load ptr, ptr %s2.addr, align 8, !tbaa !5
  %call17 = call i32 @PyUnicode_IS_READY(ptr noundef %8)
  %tobool18 = icmp ne i32 %call17, 0
  %lnot19 = xor i1 %tobool18, true
  %lnot21 = xor i1 %lnot19, true
  %lnot.ext22 = zext i1 %lnot21 to i32
  %conv23 = sext i32 %lnot.ext22 to i64
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1)
  %tobool25 = icmp ne i64 %expval24, 0
  br i1 %tobool25, label %cond.true26, label %cond.false27

cond.true26:                                      ; preds = %lor.lhs.false
  br label %cond.end29

cond.false27:                                     ; preds = %lor.lhs.false
  %9 = load ptr, ptr %s2.addr, align 8, !tbaa !5
  %call28 = call i32 @_PyUnicode_Ready(ptr noundef %9)
  br label %cond.end29

cond.end29:                                       ; preds = %cond.false27, %cond.true26
  %cond30 = phi i32 [ 0, %cond.true26 ], [ %call28, %cond.false27 ]
  %cmp31 = icmp slt i32 %cond30, 0
  %lnot33 = xor i1 %cmp31, true
  %lnot35 = xor i1 %lnot33, true
  %lnot.ext36 = zext i1 %lnot35 to i32
  %conv37 = sext i32 %lnot.ext36 to i64
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 0)
  %tobool39 = icmp ne i64 %expval38, 0
  br i1 %tobool39, label %if.then40, label %if.end41

if.then40:                                        ; preds = %cond.end29, %cond.end
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup91

if.end41:                                         ; preds = %cond.end29
  %10 = load ptr, ptr %s1.addr, align 8, !tbaa !5
  %call42 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %10)
  store i64 %call42, ptr %length, align 8, !tbaa !27
  %11 = load i64, ptr %length, align 8, !tbaa !27
  %12 = load ptr, ptr %s2.addr, align 8, !tbaa !5
  %call43 = call i64 @PyUnicode_GET_LENGTH(ptr noundef %12)
  %cmp44 = icmp ne i64 %11, %call43
  br i1 %cmp44, label %if.then46, label %if.end47

if.then46:                                        ; preds = %if.end41
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup91

if.end47:                                         ; preds = %if.end41
  call void @llvm.lifetime.start.p0(i64 8, ptr %hash1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %hash2) #13
  %13 = load ptr, ptr %s1.addr, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %13, i32 0, i32 2
  %14 = load i64, ptr %hash, align 8, !tbaa !154
  store i64 %14, ptr %hash1, align 8, !tbaa !27
  %15 = load ptr, ptr %s2.addr, align 8, !tbaa !5
  %hash48 = getelementptr inbounds %struct.PyASCIIObject, ptr %15, i32 0, i32 2
  %16 = load i64, ptr %hash48, align 8, !tbaa !154
  store i64 %16, ptr %hash2, align 8, !tbaa !27
  %17 = load i64, ptr %hash1, align 8, !tbaa !27
  %18 = load i64, ptr %hash2, align 8, !tbaa !27
  %cmp49 = icmp ne i64 %17, %18
  br i1 %cmp49, label %land.lhs.true, label %if.end57

land.lhs.true:                                    ; preds = %if.end47
  %19 = load i64, ptr %hash1, align 8, !tbaa !27
  %cmp51 = icmp ne i64 %19, -1
  br i1 %cmp51, label %land.lhs.true53, label %if.end57

land.lhs.true53:                                  ; preds = %land.lhs.true
  %20 = load i64, ptr %hash2, align 8, !tbaa !27
  %cmp54 = icmp ne i64 %20, -1
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %land.lhs.true53
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end57:                                         ; preds = %land.lhs.true53, %land.lhs.true, %if.end47
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then56, %if.end57
  call void @llvm.lifetime.end.p0(i64 8, ptr %hash2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %hash1) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup91 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  %21 = load ptr, ptr %s1.addr, align 8, !tbaa !5
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %21, i32 0, i32 3
  %bf.load = load i32, ptr %state, align 8
  %bf.lshr = lshr i32 %bf.load, 2
  %bf.clear = and i32 %bf.lshr, 7
  store i32 %bf.clear, ptr %kind, align 4, !tbaa !9
  %22 = load i32, ptr %kind, align 4, !tbaa !9
  %23 = load ptr, ptr %s2.addr, align 8, !tbaa !5
  %state59 = getelementptr inbounds %struct.PyASCIIObject, ptr %23, i32 0, i32 3
  %bf.load60 = load i32, ptr %state59, align 8
  %bf.lshr61 = lshr i32 %bf.load60, 2
  %bf.clear62 = and i32 %bf.lshr61, 7
  %cmp63 = icmp ne i32 %22, %bf.clear62
  br i1 %cmp63, label %if.then65, label %if.end66

if.then65:                                        ; preds = %cleanup.cont
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup91

if.end66:                                         ; preds = %cleanup.cont
  %24 = load ptr, ptr %s1.addr, align 8, !tbaa !5
  %call67 = call ptr @PyUnicode_DATA(ptr noundef %24)
  store ptr %call67, ptr %data1, align 8, !tbaa !5
  %25 = load ptr, ptr %s2.addr, align 8, !tbaa !5
  %call68 = call ptr @PyUnicode_DATA(ptr noundef %25)
  store ptr %call68, ptr %data2, align 8, !tbaa !5
  %26 = load i32, ptr %kind, align 4, !tbaa !9
  %27 = load ptr, ptr %data1, align 8, !tbaa !5
  %call69 = call i32 @PyUnicode_READ(i32 noundef %26, ptr noundef %27, i64 noundef 0)
  %28 = load i32, ptr %kind, align 4, !tbaa !9
  %29 = load ptr, ptr %data2, align 8, !tbaa !5
  %call70 = call i32 @PyUnicode_READ(i32 noundef %28, ptr noundef %29, i64 noundef 0)
  %cmp71 = icmp ne i32 %call69, %call70
  br i1 %cmp71, label %if.then73, label %if.else

if.then73:                                        ; preds = %if.end66
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup91

if.else:                                          ; preds = %if.end66
  %30 = load i64, ptr %length, align 8, !tbaa !27
  %cmp74 = icmp eq i64 %30, 1
  br i1 %cmp74, label %if.then76, label %if.else77

if.then76:                                        ; preds = %if.else
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup91

if.else77:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #13
  %31 = load ptr, ptr %data1, align 8, !tbaa !5
  %32 = load ptr, ptr %data2, align 8, !tbaa !5
  %33 = load i64, ptr %length, align 8, !tbaa !27
  %34 = load i32, ptr %kind, align 4, !tbaa !9
  %conv78 = sext i32 %34 to i64
  %mul = mul i64 %33, %conv78
  %call79 = call i32 @memcmp(ptr noundef %31, ptr noundef %32, i64 noundef %mul) #16
  store i32 %call79, ptr %result, align 4, !tbaa !9
  %35 = load i32, ptr %equals.addr, align 4, !tbaa !9
  %cmp80 = icmp eq i32 %35, 2
  br i1 %cmp80, label %cond.true82, label %cond.false85

cond.true82:                                      ; preds = %if.else77
  %36 = load i32, ptr %result, align 4, !tbaa !9
  %cmp83 = icmp eq i32 %36, 0
  %conv84 = zext i1 %cmp83 to i32
  br label %cond.end88

cond.false85:                                     ; preds = %if.else77
  %37 = load i32, ptr %result, align 4, !tbaa !9
  %cmp86 = icmp ne i32 %37, 0
  %conv87 = zext i1 %cmp86 to i32
  br label %cond.end88

cond.end88:                                       ; preds = %cond.false85, %cond.true82
  %cond89 = phi i32 [ %conv84, %cond.true82 ], [ %conv87, %cond.false85 ]
  store i32 %cond89, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #13
  br label %cleanup91

cleanup91:                                        ; preds = %if.then76, %if.then73, %if.then65, %if.then46, %cond.end88, %cleanup, %if.then40
  call void @llvm.lifetime.end.p0(i64 8, ptr %data2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %data1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %kind) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %length) #13
  %cleanup.dest116 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest116, label %cleanup121 [
    i32 2, label %return_eq
    i32 3, label %return_ne
  ]

if.else95:                                        ; preds = %if.end
  %38 = load ptr, ptr %s1.addr, align 8, !tbaa !5
  %cmp96 = icmp eq ptr %38, @_Py_NoneStruct
  %conv97 = zext i1 %cmp96 to i32
  %39 = load i32, ptr %s2_is_unicode, align 4, !tbaa !9
  %and98 = and i32 %conv97, %39
  %tobool99 = icmp ne i32 %and98, 0
  br i1 %tobool99, label %if.then100, label %if.else101

if.then100:                                       ; preds = %if.else95
  br label %return_ne

if.else101:                                       ; preds = %if.else95
  %40 = load ptr, ptr %s2.addr, align 8, !tbaa !5
  %cmp102 = icmp eq ptr %40, @_Py_NoneStruct
  %conv103 = zext i1 %cmp102 to i32
  %41 = load i32, ptr %s1_is_unicode, align 4, !tbaa !9
  %and104 = and i32 %conv103, %41
  %tobool105 = icmp ne i32 %and104, 0
  br i1 %tobool105, label %if.then106, label %if.else107

if.then106:                                       ; preds = %if.else101
  br label %return_ne

if.else107:                                       ; preds = %if.else101
  call void @llvm.lifetime.start.p0(i64 4, ptr %result108) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_result) #13
  %42 = load ptr, ptr %s1.addr, align 8, !tbaa !5
  %43 = load ptr, ptr %s2.addr, align 8, !tbaa !5
  %44 = load i32, ptr %equals.addr, align 4, !tbaa !9
  %call109 = call ptr @PyObject_RichCompare(ptr noundef %42, ptr noundef %43, i32 noundef %44)
  store ptr %call109, ptr %py_result, align 8, !tbaa !5
  %45 = load ptr, ptr %py_result, align 8, !tbaa !5
  %tobool110 = icmp ne ptr %45, null
  br i1 %tobool110, label %if.end112, label %if.then111

if.then111:                                       ; preds = %if.else107
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114

if.end112:                                        ; preds = %if.else107
  %46 = load ptr, ptr %py_result, align 8, !tbaa !5
  %call113 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %46)
  store i32 %call113, ptr %result108, align 4, !tbaa !9
  %47 = load ptr, ptr %py_result, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %47)
  %48 = load i32, ptr %result108, align 4, !tbaa !9
  store i32 %48, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114

cleanup114:                                       ; preds = %if.end112, %if.then111
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_result) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %result108) #13
  br label %cleanup121

return_eq:                                        ; preds = %cleanup91, %if.then
  %49 = load i32, ptr %equals.addr, align 4, !tbaa !9
  %cmp117 = icmp eq i32 %49, 2
  %conv118 = zext i1 %cmp117 to i32
  store i32 %conv118, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup121

return_ne:                                        ; preds = %cleanup91, %if.then106, %if.then100
  %50 = load i32, ptr %equals.addr, align 4, !tbaa !9
  %cmp119 = icmp eq i32 %50, 3
  %conv120 = zext i1 %cmp119 to i32
  store i32 %conv120, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup121

cleanup121:                                       ; preds = %return_ne, %return_eq, %cleanup91, %cleanup114
  call void @llvm.lifetime.end.p0(i64 4, ptr %s2_is_unicode) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %s1_is_unicode) #13
  %51 = load i32, ptr %retval, align 4
  ret i32 %51
}

declare ptr @PyNumber_Remainder(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i64 @__pyx_fill_contig_strides_array(ptr noundef %__pyx_v_shape, ptr noundef %__pyx_v_strides, i64 noundef %__pyx_v_stride, i32 noundef %__pyx_v_ndim, i8 noundef signext %__pyx_v_order) #0 {
entry:
  %__pyx_v_shape.addr = alloca ptr, align 8
  %__pyx_v_strides.addr = alloca ptr, align 8
  %__pyx_v_stride.addr = alloca i64, align 8
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_order.addr = alloca i8, align 1
  %__pyx_v_idx = alloca i32, align 4
  %__pyx_r = alloca i64, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i32, align 4
  store ptr %__pyx_v_shape, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  store ptr %__pyx_v_strides, ptr %__pyx_v_strides.addr, align 8, !tbaa !5
  store i64 %__pyx_v_stride, ptr %__pyx_v_stride.addr, align 8, !tbaa !27
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i8 %__pyx_v_order, ptr %__pyx_v_order.addr, align 1, !tbaa !29
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_idx) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  %0 = load i8, ptr %__pyx_v_order.addr, align 1, !tbaa !29
  %conv = sext i8 %0 to i32
  %cmp = icmp eq i32 %conv, 70
  %conv1 = zext i1 %cmp to i32
  %cmp2 = icmp ne i32 %conv1, 0
  %conv3 = zext i1 %cmp2 to i32
  store i32 %conv3, ptr %__pyx_t_1, align 4, !tbaa !9
  %1 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i32 %2, ptr %__pyx_t_2, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %3, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_4, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp4 = icmp slt i32 %4, %5
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  store i32 %6, ptr %__pyx_v_idx, align 4, !tbaa !9
  %7 = load i64, ptr %__pyx_v_stride.addr, align 8, !tbaa !27
  %8 = load ptr, ptr %__pyx_v_strides.addr, align 8, !tbaa !5
  %9 = load i32, ptr %__pyx_v_idx, align 4, !tbaa !9
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr i64, ptr %8, i64 %idxprom
  store i64 %7, ptr %arrayidx, align 8, !tbaa !27
  %10 = load i64, ptr %__pyx_v_stride.addr, align 8, !tbaa !27
  %11 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  %12 = load i32, ptr %__pyx_v_idx, align 4, !tbaa !9
  %idxprom6 = sext i32 %12 to i64
  %arrayidx7 = getelementptr i64, ptr %11, i64 %idxprom6
  %13 = load i64, ptr %arrayidx7, align 8, !tbaa !27
  %mul = mul i64 %10, %13
  store i64 %mul, ptr %__pyx_v_stride.addr, align 8, !tbaa !27
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %add = add i32 %14, 1
  store i32 %add, ptr %__pyx_t_4, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !169

for.end:                                          ; preds = %for.cond
  br label %__pyx_L3

if.end:                                           ; preds = %entry
  %15 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %sub = sub i32 %15, 1
  store i32 %sub, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc17, %if.end
  %16 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp9 = icmp sgt i32 %16, -1
  br i1 %cmp9, label %for.body11, label %for.end19

for.body11:                                       ; preds = %for.cond8
  %17 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %17, ptr %__pyx_v_idx, align 4, !tbaa !9
  %18 = load i64, ptr %__pyx_v_stride.addr, align 8, !tbaa !27
  %19 = load ptr, ptr %__pyx_v_strides.addr, align 8, !tbaa !5
  %20 = load i32, ptr %__pyx_v_idx, align 4, !tbaa !9
  %idxprom12 = sext i32 %20 to i64
  %arrayidx13 = getelementptr i64, ptr %19, i64 %idxprom12
  store i64 %18, ptr %arrayidx13, align 8, !tbaa !27
  %21 = load i64, ptr %__pyx_v_stride.addr, align 8, !tbaa !27
  %22 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  %23 = load i32, ptr %__pyx_v_idx, align 4, !tbaa !9
  %idxprom14 = sext i32 %23 to i64
  %arrayidx15 = getelementptr i64, ptr %22, i64 %idxprom14
  %24 = load i64, ptr %arrayidx15, align 8, !tbaa !27
  %mul16 = mul i64 %21, %24
  store i64 %mul16, ptr %__pyx_v_stride.addr, align 8, !tbaa !27
  br label %for.inc17

for.inc17:                                        ; preds = %for.body11
  %25 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %sub18 = sub i32 %25, 1
  store i32 %sub18, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %for.cond8, !llvm.loop !170

for.end19:                                        ; preds = %for.cond8
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %for.end19, %for.end
  %26 = load i64, ptr %__pyx_v_stride.addr, align 8, !tbaa !27
  store i64 %26, ptr %__pyx_r, align 8, !tbaa !27
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L3
  %27 = load i64, ptr %__pyx_r, align 8, !tbaa !27
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_idx) #13
  ret i64 %27
}

declare ptr @PyObject_RichCompare(ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: nounwind allocsize(0)
declare noalias ptr @malloc(i64 noundef) #8

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyObject_TypeCheck(ptr noundef %ob, ptr noundef %type) #3 {
entry:
  %ob.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !5
  store ptr %type, ptr %type.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %ob.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %call = call i32 @Py_IS_TYPE(ptr noundef %0, ptr noundef %1)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %2 = load ptr, ptr %ob.addr, align 8, !tbaa !5
  %call1 = call ptr @Py_TYPE(ptr noundef %2)
  %3 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %call2 = call i32 @PyType_IsSubtype(ptr noundef %call1, ptr noundef %3)
  %tobool3 = icmp ne i32 %call2, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool3, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32
  ret i32 %lor.ext
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyCFunction_GET_FLAGS(ptr noundef %func) #3 {
entry:
  %func.addr = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %0, i32 0, i32 1
  %1 = load ptr, ptr %m_ml, align 8, !tbaa !77
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %1, i32 0, i32 2
  %2 = load i32, ptr %ml_flags, align 8, !tbaa !80
  ret i32 %2
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_CallMethO(ptr noundef %func, ptr noundef %arg) #3 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %self = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cfunc = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %cfunc) #13
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %call = call ptr @PyCFunction_GET_FUNCTION(ptr noundef %0)
  store ptr %call, ptr %cfunc, align 8, !tbaa !5
  %1 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %call1 = call ptr @PyCFunction_GET_SELF(ptr noundef %1)
  store ptr %call1, ptr %self, align 8, !tbaa !5
  %call2 = call i32 @Py_EnterRecursiveCall(ptr noundef @.str.122)
  %tobool = icmp ne i32 %call2, 0
  %lnot = xor i1 %tobool, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %cfunc, align 8, !tbaa !5
  %3 = load ptr, ptr %self, align 8, !tbaa !5
  %4 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  %call5 = call ptr %2(ptr noundef %3, ptr noundef %4)
  store ptr %call5, ptr %result, align 8, !tbaa !5
  call void @Py_LeaveRecursiveCall()
  %5 = load ptr, ptr %result, align 8, !tbaa !5
  %tobool6 = icmp ne ptr %5, null
  %lnot7 = xor i1 %tobool6, true
  %lnot9 = xor i1 %lnot7, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %land.lhs.true, label %if.end28

land.lhs.true:                                    ; preds = %if.end
  %call16 = call ptr @PyErr_Occurred()
  %tobool17 = icmp ne ptr %call16, null
  %lnot18 = xor i1 %tobool17, true
  %lnot20 = xor i1 %lnot18, true
  %lnot22 = xor i1 %lnot20, true
  %lnot.ext23 = zext i1 %lnot22 to i32
  %conv24 = sext i32 %lnot.ext23 to i64
  %expval25 = call i64 @llvm.expect.i64(i64 %conv24, i64 0)
  %tobool26 = icmp ne i64 %expval25, 0
  br i1 %tobool26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %land.lhs.true
  %6 = load ptr, ptr @PyExc_SystemError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %6, ptr noundef @.str.123)
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %land.lhs.true, %if.end
  %7 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %7, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end28, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cfunc) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #13
  %8 = load ptr, ptr %retval, align 8
  ret ptr %8
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx__PyObject_CallOneArg(ptr noundef %func, ptr noundef %arg) #0 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %args = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %args) #13
  %call = call ptr @PyTuple_New(i64 noundef 1)
  store ptr %call, ptr %args, align 8, !tbaa !5
  %0 = load ptr, ptr %args, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %1)
  %2 = load ptr, ptr %args, align 8, !tbaa !5
  %3 = load ptr, ptr %arg.addr, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %2, i64 noundef 0, ptr noundef %3)
  %4 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %args, align 8, !tbaa !5
  %call4 = call ptr @__Pyx_PyObject_Call(ptr noundef %4, ptr noundef %5, ptr noundef null)
  store ptr %call4, ptr %result, align 8, !tbaa !5
  %6 = load ptr, ptr %args, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %6)
  %7 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %7, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  %8 = load ptr, ptr %retval, align 8
  ret ptr %8
}

declare i32 @PyType_IsSubtype(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @PyCFunction_GET_FUNCTION(ptr noundef %func) #3 {
entry:
  %func.addr = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %0, i32 0, i32 1
  %1 = load ptr, ptr %m_ml, align 8, !tbaa !77
  %ml_meth = getelementptr inbounds %struct.PyMethodDef, ptr %1, i32 0, i32 1
  %2 = load ptr, ptr %ml_meth, align 8, !tbaa !78
  ret ptr %2
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @PyCFunction_GET_SELF(ptr noundef %func_obj) #3 {
entry:
  %retval = alloca ptr, align 8
  %func_obj.addr = alloca ptr, align 8
  %func = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func_obj, ptr %func_obj.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %func) #13
  %0 = load ptr, ptr %func_obj.addr, align 8, !tbaa !5
  store ptr %0, ptr %func, align 8, !tbaa !5
  %1 = load ptr, ptr %func, align 8, !tbaa !5
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %1, i32 0, i32 1
  %2 = load ptr, ptr %m_ml, align 8, !tbaa !77
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %2, i32 0, i32 2
  %3 = load i32, ptr %ml_flags, align 8, !tbaa !80
  %and = and i32 %3, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %func, align 8, !tbaa !5
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %4, i32 0, i32 2
  %5 = load ptr, ptr %m_self, align 8, !tbaa !82
  store ptr %5, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %func) #13
  %6 = load ptr, ptr %retval, align 8
  ret ptr %6
}

declare i32 @Py_EnterRecursiveCall(ptr noundef) #1

declare void @Py_LeaveRecursiveCall() #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_IS_READY(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 3
  %bf.load = load i32, ptr %state, align 8
  %bf.lshr = lshr i32 %bf.load, 7
  %bf.clear = and i32 %bf.lshr, 1
  ret i32 %bf.clear
}

declare i32 @_PyUnicode_Ready(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @PyUnicode_DATA(ptr noundef %op) #3 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %call = call i32 @PyUnicode_IS_COMPACT(ptr noundef %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %call1 = call ptr @_PyUnicode_COMPACT_DATA(ptr noundef %1)
  store ptr %call1, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %call2 = call ptr @_PyUnicode_NONCOMPACT_DATA(ptr noundef %2)
  store ptr %call2, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %3 = load ptr, ptr %retval, align 8
  ret ptr %3
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_READ(i32 noundef %kind, ptr noundef %data, i64 noundef %index) #3 {
entry:
  %retval = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  %data.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  store i32 %kind, ptr %kind.addr, align 4, !tbaa !9
  store ptr %data, ptr %data.addr, align 8, !tbaa !5
  store i64 %index, ptr %index.addr, align 8, !tbaa !27
  %0 = load i32, ptr %kind.addr, align 4, !tbaa !9
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %data.addr, align 8, !tbaa !5
  %2 = load i64, ptr %index.addr, align 8, !tbaa !27
  %arrayidx = getelementptr i8, ptr %1, i64 %2
  %3 = load i8, ptr %arrayidx, align 1, !tbaa !29
  %conv = zext i8 %3 to i32
  store i32 %conv, ptr %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i32, ptr %kind.addr, align 4, !tbaa !9
  %cmp1 = icmp eq i32 %4, 2
  br i1 %cmp1, label %if.then3, label %if.end6

if.then3:                                         ; preds = %if.end
  %5 = load ptr, ptr %data.addr, align 8, !tbaa !5
  %6 = load i64, ptr %index.addr, align 8, !tbaa !27
  %arrayidx4 = getelementptr i16, ptr %5, i64 %6
  %7 = load i16, ptr %arrayidx4, align 2, !tbaa !171
  %conv5 = zext i16 %7 to i32
  store i32 %conv5, ptr %retval, align 4
  br label %return

if.end6:                                          ; preds = %if.end
  %8 = load ptr, ptr %data.addr, align 8, !tbaa !5
  %9 = load i64, ptr %index.addr, align 8, !tbaa !27
  %arrayidx7 = getelementptr i32, ptr %8, i64 %9
  %10 = load i32, ptr %arrayidx7, align 4, !tbaa !9
  store i32 %10, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.end6, %if.then3, %if.then
  %11 = load i32, ptr %retval, align 4
  ret i32 %11
}

; Function Attrs: nounwind willreturn memory(read)
declare i32 @memcmp(ptr noundef, ptr noundef, i64 noundef) #9

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_IS_COMPACT(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 3
  %bf.load = load i32, ptr %state, align 8
  %bf.lshr = lshr i32 %bf.load, 5
  %bf.clear = and i32 %bf.lshr, 1
  ret i32 %bf.clear
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @_PyUnicode_COMPACT_DATA(ptr noundef %op) #3 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %call = call i32 @PyUnicode_IS_ASCII(ptr noundef %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %add.ptr = getelementptr %struct.PyASCIIObject, ptr %1, i64 1
  store ptr %add.ptr, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %add.ptr1 = getelementptr %struct.PyCompactUnicodeObject, ptr %2, i64 1
  store ptr %add.ptr1, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %3 = load ptr, ptr %retval, align 8
  ret ptr %3
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @_PyUnicode_NONCOMPACT_DATA(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  %data = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %data) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %data1 = getelementptr inbounds %struct.PyUnicodeObject, ptr %0, i32 0, i32 1
  %1 = load ptr, ptr %data1, align 8, !tbaa !29
  store ptr %1, ptr %data, align 8, !tbaa !5
  %2 = load ptr, ptr %data, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %data) #13
  ret ptr %2
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_IS_ASCII(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 3
  %bf.load = load i32, ptr %state, align 8
  %bf.lshr = lshr i32 %bf.load, 6
  %bf.clear = and i32 %bf.lshr, 1
  ret i32 %bf.clear
}

declare ptr @PyCapsule_New(ptr noundef, ptr noundef, ptr noundef) #1

declare ptr @_PyType_Lookup(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_setup_reduce_is_named(ptr noundef %meth, ptr noundef %name) #0 {
entry:
  %meth.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %name_attr = alloca ptr, align 8
  store ptr %meth, ptr %meth.addr, align 8, !tbaa !5
  store ptr %name, ptr %name.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %name_attr) #13
  %0 = load ptr, ptr %meth.addr, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_n_s_name_2, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %name_attr, align 8, !tbaa !5
  %2 = load ptr, ptr %name_attr, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %name_attr, align 8, !tbaa !5
  %4 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %call3 = call i32 @PyObject_RichCompareBool(ptr noundef %3, ptr noundef %4, i32 noundef 2)
  store i32 %call3, ptr %ret, align 4, !tbaa !9
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 -1, ptr %ret, align 4, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i32, ptr %ret, align 4, !tbaa !9
  %cmp = icmp slt i32 %5, 0
  %lnot5 = xor i1 %cmp, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0)
  %tobool11 = icmp ne i64 %expval10, 0
  br i1 %tobool11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end
  call void @PyErr_Clear()
  store i32 0, ptr %ret, align 4, !tbaa !9
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.end
  %6 = load ptr, ptr %name_attr, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %6)
  %7 = load i32, ptr %ret, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 8, ptr %name_attr) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #13
  ret i32 %7
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %obj, ptr noundef %attr_name) #3 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %attr_name.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store ptr %attr_name, ptr %attr_name.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  store ptr %call, ptr %tp, align 8, !tbaa !5
  %1 = load ptr, ptr %tp, align 8, !tbaa !5
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 16
  %2 = load ptr, ptr %tp_getattro, align 8, !tbaa !37
  %cmp = icmp eq ptr %2, @PyObject_GenericGetAttr
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %attr_name.addr, align 8, !tbaa !5
  %call2 = call ptr @_PyObject_GenericGetAttrWithDict(ptr noundef %3, ptr noundef %4, ptr noundef null, i32 noundef 1)
  store ptr %call2, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %6 = load ptr, ptr %attr_name.addr, align 8, !tbaa !5
  %call3 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %5, ptr noundef %6)
  store ptr %call3, ptr %result, align 8, !tbaa !5
  %7 = load ptr, ptr %result, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %7, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end
  call void @__Pyx_PyObject_GetAttrStr_ClearAttributeError()
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.end
  %8 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %8, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  %9 = load ptr, ptr %retval, align 8
  ret ptr %9
}

declare i32 @PyDict_DelItem(ptr noundef, ptr noundef) #1

declare i32 @PyObject_RichCompareBool(ptr noundef, ptr noundef, i32 noundef) #1

declare ptr @_PyObject_GenericGetAttrWithDict(ptr noundef, ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_PyObject_GetAttrStr_ClearAttributeError() #0 {
entry:
  %0 = load ptr, ptr @PyExc_AttributeError, align 8, !tbaa !5
  %call = call i32 @PyErr_ExceptionMatches(ptr noundef %0)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @PyErr_Clear()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_tp_dealloc_Enum(ptr noundef %o) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %_py_tmp = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  store ptr %0, ptr %p, align 8, !tbaa !5
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %1)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 1)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call2 = call ptr @Py_TYPE(ptr noundef %2)
  %tp_finalize = getelementptr inbounds %struct._typeobject, ptr %call2, i32 0, i32 47
  %3 = load ptr, ptr %tp_finalize, align 8, !tbaa !133
  %tobool3 = icmp ne ptr %3, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool3, %land.rhs ]
  %lnot = xor i1 %4, true
  %lnot4 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot4 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %land.lhs.true, label %if.end11

land.lhs.true:                                    ; preds = %land.end
  %5 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call6 = call i32 @PyObject_GC_IsFinalized(ptr noundef %5)
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end11, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %6 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call8 = call i32 @PyObject_CallFinalizerFromDealloc(ptr noundef %6)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  br label %if.end11

if.end11:                                         ; preds = %if.end, %land.lhs.true, %land.end
  %7 = load ptr, ptr %o.addr, align 8, !tbaa !5
  call void @PyObject_GC_UnTrack(ptr noundef %7)
  br label %do.body

do.body:                                          ; preds = %if.end11
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #13
  %8 = load ptr, ptr %p, align 8, !tbaa !5
  %name = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %8, i32 0, i32 1
  %9 = load ptr, ptr %name, align 8, !tbaa !173
  store ptr %9, ptr %_py_tmp, align 8, !tbaa !5
  %10 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  %cmp = icmp ne ptr %10, null
  br i1 %cmp, label %if.then13, label %if.end15

if.then13:                                        ; preds = %do.body
  %11 = load ptr, ptr %p, align 8, !tbaa !5
  %name14 = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %11, i32 0, i32 1
  store ptr null, ptr %name14, align 8, !tbaa !173
  %12 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %12)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %if.end15
  br label %do.end

do.end:                                           ; preds = %do.cond
  %13 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call16 = call ptr @Py_TYPE(ptr noundef %13)
  %tp_free = getelementptr inbounds %struct._typeobject, ptr %call16, i32 0, i32 38
  %14 = load ptr, ptr %tp_free, align 8, !tbaa !136
  %15 = load ptr, ptr %o.addr, align 8, !tbaa !5
  call void %14(ptr noundef %15)
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then10
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_MemviewEnum___repr__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum_2__repr__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_tp_traverse_Enum(ptr noundef %o, ptr noundef %v, ptr noundef %a) #0 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %e = alloca i32, align 4
  %p = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %v, ptr %v.addr, align 8, !tbaa !5
  store ptr %a, ptr %a.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %e) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  store ptr %0, ptr %p, align 8, !tbaa !5
  %1 = load ptr, ptr %p, align 8, !tbaa !5
  %name = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %1, i32 0, i32 1
  %2 = load ptr, ptr %name, align 8, !tbaa !173
  %tobool = icmp ne ptr %2, null
  br i1 %tobool, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %p, align 8, !tbaa !5
  %name1 = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %4, i32 0, i32 1
  %5 = load ptr, ptr %name1, align 8, !tbaa !173
  %6 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %call = call i32 %3(ptr noundef %5, ptr noundef %6)
  store i32 %call, ptr %e, align 4, !tbaa !9
  %7 = load i32, ptr %e, align 4, !tbaa !9
  %tobool2 = icmp ne i32 %7, 0
  br i1 %tobool2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %8 = load i32, ptr %e, align 4, !tbaa !9
  store i32 %8, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %e) #13
  %9 = load i32, ptr %retval, align 4
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_tp_clear_Enum(ptr noundef %o) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %p = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  store ptr %0, ptr %p, align 8, !tbaa !5
  %1 = load ptr, ptr %p, align 8, !tbaa !5
  %name = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %1, i32 0, i32 1
  %2 = load ptr, ptr %name, align 8, !tbaa !173
  store ptr %2, ptr %tmp, align 8, !tbaa !5
  %3 = load ptr, ptr %p, align 8, !tbaa !5
  %name1 = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %3, i32 0, i32 1
  store ptr @_Py_NoneStruct, ptr %name1, align 8, !tbaa !173
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %4 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %4)
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_MemviewEnum___init__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_name = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %values = alloca [1 x ptr], align 8
  %kw_args = alloca i64, align 8
  %pos_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !5
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_name) #13
  store ptr null, ptr %__pyx_v_name, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %values) #13
  call void @llvm.memset.p0.i64(ptr align 8 %values, i8 0, i64 8, i1 false)
  %0 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else42

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos_args) #13
  %1 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1)
  store i64 %call, ptr %pos_args, align 8, !tbaa !27
  %2 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %2, label %sw.default [
    i64 1, label %sw.bb
    i64 0, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.then
  %3 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0
  %4 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %arrayidx3 = getelementptr [1 x ptr], ptr %values, i64 0, i64 0
  store ptr %4, ptr %arrayidx3, align 8, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb, %if.then
  %5 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %call4 = call i64 @PyDict_Size(ptr noundef %5)
  store i64 %call4, ptr %kw_args, align 8, !tbaa !27
  %6 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %6, label %sw.epilog17 [
    i64 0, label %sw.bb5
  ]

sw.bb5:                                           ; preds = %sw.epilog
  %7 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %8 = load ptr, ptr @__pyx_n_s_name, align 8, !tbaa !5
  %9 = load ptr, ptr @__pyx_n_s_name, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %9, i32 0, i32 2
  %10 = load i64, ptr %hash, align 8, !tbaa !154
  %call6 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %7, ptr noundef %8, i64 noundef %10)
  %arrayidx7 = getelementptr [1 x ptr], ptr %values, i64 0, i64 0
  store ptr %call6, ptr %arrayidx7, align 8, !tbaa !5
  %cmp = icmp ne ptr %call6, null
  %lnot9 = xor i1 %cmp, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 1)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %if.then16, label %if.else

if.then16:                                        ; preds = %sw.bb5
  %11 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec = add i64 %11, -1
  store i64 %dec, ptr %kw_args, align 8, !tbaa !27
  br label %if.end

if.else:                                          ; preds = %sw.bb5
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then16
  br label %sw.epilog17

sw.epilog17:                                      ; preds = %if.end, %sw.epilog
  %12 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp18 = icmp sgt i64 %12, 0
  %lnot20 = xor i1 %cmp18, true
  %lnot22 = xor i1 %lnot20, true
  %lnot.ext23 = zext i1 %lnot22 to i32
  %conv24 = sext i32 %lnot.ext23 to i64
  %expval25 = call i64 @llvm.expect.i64(i64 %conv24, i64 0)
  %tobool26 = icmp ne i64 %expval25, 0
  br i1 %tobool26, label %if.then27, label %if.end40

if.then27:                                        ; preds = %sw.epilog17
  %13 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %arraydecay = getelementptr inbounds [1 x ptr], ptr %values, i64 0, i64 0
  %14 = load i64, ptr %pos_args, align 8, !tbaa !27
  %call28 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %13, ptr noundef @__pyx_MemviewEnum___init__.__pyx_pyargnames, ptr noundef null, ptr noundef %arraydecay, i64 noundef %14, ptr noundef @.str.134)
  %cmp29 = icmp slt i32 %call28, 0
  %lnot31 = xor i1 %cmp29, true
  %lnot33 = xor i1 %lnot31, true
  %lnot.ext34 = zext i1 %lnot33 to i32
  %conv35 = sext i32 %lnot.ext34 to i64
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 0)
  %tobool37 = icmp ne i64 %expval36, 0
  br i1 %tobool37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.then27
  %15 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %15, ptr %__pyx_filename, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 282, ptr %__pyx_lineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7959, ptr %__pyx_clineno, align 4, !tbaa !9
  %18 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end39:                                         ; preds = %if.then27
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %sw.epilog17
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then38, %if.else, %sw.default, %if.end40
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup54 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end52

if.else42:                                        ; preds = %entry
  %19 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call43 = call i64 @PyTuple_GET_SIZE(ptr noundef %19)
  %cmp44 = icmp ne i64 %call43, 1
  br i1 %cmp44, label %if.then46, label %if.else47

if.then46:                                        ; preds = %if.else42
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup54

if.else47:                                        ; preds = %if.else42
  %20 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item48 = getelementptr inbounds %struct.PyTupleObject, ptr %20, i32 0, i32 1
  %arrayidx49 = getelementptr [1 x ptr], ptr %ob_item48, i64 0, i64 0
  %21 = load ptr, ptr %arrayidx49, align 8, !tbaa !5
  %arrayidx50 = getelementptr [1 x ptr], ptr %values, i64 0, i64 0
  store ptr %21, ptr %arrayidx50, align 8, !tbaa !5
  br label %if.end51

if.end51:                                         ; preds = %if.else47
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %cleanup.cont
  %arrayidx53 = getelementptr [1 x ptr], ptr %values, i64 0, i64 0
  %22 = load ptr, ptr %arrayidx53, align 8, !tbaa !5
  store ptr %22, ptr %__pyx_v_name, align 8, !tbaa !5
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup54

cleanup54:                                        ; preds = %if.then46, %if.end52, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %values) #13
  %cleanup.dest55 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest55, label %cleanup59 [
    i32 0, label %cleanup.cont56
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont56:                                   ; preds = %cleanup54
  br label %__pyx_L4_argument_unpacking_done

__pyx_L5_argtuple_error:                          ; preds = %cleanup54
  %23 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call57 = call i64 @PyTuple_GET_SIZE(ptr noundef %23)
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.134, i32 noundef 1, i64 noundef 1, i64 noundef 1, i64 noundef %call57)
  %24 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %24, ptr %__pyx_filename, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 282, ptr %__pyx_lineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7970, ptr %__pyx_clineno, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

__pyx_L3_error:                                   ; preds = %cleanup54, %__pyx_L5_argtuple_error
  %28 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %30 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.135, i32 noundef %28, i32 noundef %29, ptr noundef %30)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup59

__pyx_L4_argument_unpacking_done:                 ; preds = %cleanup.cont56
  %31 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_v_name, align 8, !tbaa !5
  %call58 = call i32 @__pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum___init__(ptr noundef %31, ptr noundef %32)
  store i32 %call58, ptr %__pyx_r, align 4, !tbaa !9
  %33 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  store i32 %33, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup59

cleanup59:                                        ; preds = %__pyx_L4_argument_unpacking_done, %__pyx_L3_error, %cleanup54
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_name) #13
  %34 = load i32, ptr %retval, align 4
  ret i32 %34
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_tp_new_Enum(ptr noundef %t, ptr noundef %a, ptr noundef %k) #0 {
entry:
  %retval = alloca ptr, align 8
  %t.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %k.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %o = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %t, ptr %t.addr, align 8, !tbaa !5
  store ptr %a, ptr %a.addr, align 8, !tbaa !5
  store ptr %k, ptr %k.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %o) #13
  %0 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 19
  %1 = load i64, ptr %tp_flags, align 8, !tbaa !58
  %and = and i64 %1, 1048576
  %cmp = icmp eq i64 %and, 0
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %tp_alloc = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 36
  %3 = load ptr, ptr %tp_alloc, align 8, !tbaa !137
  %4 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %call = call ptr %3(ptr noundef %4, i64 noundef 0)
  store ptr %call, ptr %o, align 8, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyBaseObject_Type, i32 0, i32 37), align 8, !tbaa !138
  %6 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %7 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %call2 = call ptr %5(ptr noundef %6, ptr noundef %7, ptr noundef null)
  store ptr %call2, ptr %o, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load ptr, ptr %o, align 8, !tbaa !5
  %tobool3 = icmp ne ptr %8, null
  %lnot4 = xor i1 %tobool3, true
  %lnot6 = xor i1 %lnot4, true
  %lnot8 = xor i1 %lnot6, true
  %lnot.ext9 = zext i1 %lnot8 to i32
  %conv10 = sext i32 %lnot.ext9 to i64
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0)
  %tobool12 = icmp ne i64 %expval11, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end14:                                         ; preds = %if.end
  %9 = load ptr, ptr %o, align 8, !tbaa !5
  store ptr %9, ptr %p, align 8, !tbaa !5
  %10 = load ptr, ptr %p, align 8, !tbaa !5
  %name = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %10, i32 0, i32 1
  store ptr @_Py_NoneStruct, ptr %name, align 8, !tbaa !173
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %11 = load ptr, ptr %o, align 8, !tbaa !5
  store ptr %11, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then13
  call void @llvm.lifetime.end.p0(i64 8, ptr %o) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  %12 = load ptr, ptr %retval, align 8
  ret ptr %12
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum_2__repr__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %name = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %1, i32 0, i32 1
  %2 = load ptr, ptr %name, align 8, !tbaa !173
  call void @Py_INCREF(ptr noundef %2)
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %name1 = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %3, i32 0, i32 1
  %4 = load ptr, ptr %name1, align 8, !tbaa !173
  store ptr %4, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %entry
  %5 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %5
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw___pyx_MemviewEnum_1__reduce_cython__(ptr noundef %__pyx_v_self, ptr noundef %unused) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %unused.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %unused, ptr %unused.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf___pyx_MemviewEnum___reduce_cython__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw___pyx_MemviewEnum_3__setstate_cython__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v___pyx_state) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf___pyx_MemviewEnum_2__setstate_cython__(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %2
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf___pyx_MemviewEnum___reduce_cython__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_state = alloca ptr, align 8
  %__pyx_v__dict = alloca ptr, align 8
  %__pyx_v_use_setstate = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_state) #13
  store ptr null, ptr %__pyx_v_state, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v__dict) #13
  store ptr null, ptr %__pyx_v__dict, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_use_setstate) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %call = call ptr @PyTuple_New(i64 noundef 1)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %1, ptr %__pyx_filename, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 5, ptr %__pyx_lineno, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8110, ptr %__pyx_clineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %name = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %5, i32 0, i32 1
  %6 = load ptr, ptr %name, align 8, !tbaa !173
  call void @Py_INCREF(ptr noundef %6)
  %7 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %name4 = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %8, i32 0, i32 1
  %9 = load ptr, ptr %name4, align 8, !tbaa !173
  call void @PyTuple_SET_ITEM(ptr noundef %7, i64 noundef 0, ptr noundef %9)
  %10 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %10, ptr %__pyx_v_state, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %12 = load ptr, ptr @__pyx_n_s_dict, align 8, !tbaa !5
  %call5 = call ptr @__Pyx_GetAttr3(ptr noundef %11, ptr noundef %12, ptr noundef @_Py_NoneStruct)
  store ptr %call5, ptr %__pyx_t_1, align 8, !tbaa !5
  %13 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool6 = icmp ne ptr %13, null
  %lnot7 = xor i1 %tobool6, true
  %lnot9 = xor i1 %lnot7, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end
  %14 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %14, ptr %__pyx_filename, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8125, ptr %__pyx_clineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end17:                                         ; preds = %if.end
  %18 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %18, ptr %__pyx_v__dict, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_v__dict, align 8, !tbaa !5
  %cmp = icmp ne ptr %19, @_Py_NoneStruct
  %conv18 = zext i1 %cmp to i32
  store i32 %conv18, ptr %__pyx_t_2, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp19 = icmp ne i32 %20, 0
  %conv20 = zext i1 %cmp19 to i32
  store i32 %conv20, ptr %__pyx_t_3, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool21 = icmp ne i32 %21, 0
  br i1 %tobool21, label %if.then22, label %if.end49

if.then22:                                        ; preds = %if.end17
  %call23 = call ptr @PyTuple_New(i64 noundef 1)
  store ptr %call23, ptr %__pyx_t_1, align 8, !tbaa !5
  %22 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool24 = icmp ne ptr %22, null
  %lnot25 = xor i1 %tobool24, true
  %lnot27 = xor i1 %lnot25, true
  %lnot29 = xor i1 %lnot27, true
  %lnot.ext30 = zext i1 %lnot29 to i32
  %conv31 = sext i32 %lnot.ext30 to i64
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 0)
  %tobool33 = icmp ne i64 %expval32, 0
  br i1 %tobool33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.then22
  %23 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %23, ptr %__pyx_filename, align 8, !tbaa !5
  %24 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 8, ptr %__pyx_lineno, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8148, ptr %__pyx_clineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end35:                                         ; preds = %if.then22
  %27 = load ptr, ptr %__pyx_v__dict, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %27)
  %28 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %29 = load ptr, ptr %__pyx_v__dict, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %28, i64 noundef 0, ptr noundef %29)
  %30 = load ptr, ptr %__pyx_v_state, align 8, !tbaa !5
  %31 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call36 = call ptr @PyNumber_InPlaceAdd(ptr noundef %30, ptr noundef %31)
  store ptr %call36, ptr %__pyx_t_4, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool37 = icmp ne ptr %32, null
  %lnot38 = xor i1 %tobool37, true
  %lnot40 = xor i1 %lnot38, true
  %lnot42 = xor i1 %lnot40, true
  %lnot.ext43 = zext i1 %lnot42 to i32
  %conv44 = sext i32 %lnot.ext43 to i64
  %expval45 = call i64 @llvm.expect.i64(i64 %conv44, i64 0)
  %tobool46 = icmp ne i64 %expval45, 0
  br i1 %tobool46, label %if.then47, label %if.end48

if.then47:                                        ; preds = %if.end35
  %33 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %33, ptr %__pyx_filename, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 8, ptr %__pyx_lineno, align 4, !tbaa !9
  %35 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8153, ptr %__pyx_clineno, align 4, !tbaa !9
  %36 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end48:                                         ; preds = %if.end35
  %37 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %37)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %if.end48
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %38 = load ptr, ptr %__pyx_v_state, align 8, !tbaa !5
  store ptr %38, ptr %tmp, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %39, ptr %__pyx_v_state, align 8, !tbaa !5
  %40 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %40)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  store i32 1, ptr %__pyx_v_use_setstate, align 4, !tbaa !9
  br label %__pyx_L3

if.end49:                                         ; preds = %if.end17
  %41 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %name50 = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %41, i32 0, i32 1
  %42 = load ptr, ptr %name50, align 8, !tbaa !173
  %cmp51 = icmp ne ptr %42, @_Py_NoneStruct
  %conv52 = zext i1 %cmp51 to i32
  store i32 %conv52, ptr %__pyx_t_3, align 4, !tbaa !9
  %43 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %43, ptr %__pyx_v_use_setstate, align 4, !tbaa !9
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end49, %do.end
  %44 = load i32, ptr %__pyx_v_use_setstate, align 4, !tbaa !9
  %cmp53 = icmp ne i32 %44, 0
  %conv54 = zext i1 %cmp53 to i32
  store i32 %conv54, ptr %__pyx_t_3, align 4, !tbaa !9
  %45 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool55 = icmp ne i32 %45, 0
  br i1 %tobool55, label %if.then56, label %if.end123

if.then56:                                        ; preds = %__pyx_L3
  %46 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %46)
  br label %do.body57

do.body57:                                        ; preds = %if.then56
  %47 = load i64, ptr @__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_version, align 8, !tbaa !27
  %48 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %48, i32 0, i32 2
  %49 = load i64, ptr %ma_version_tag, align 8, !tbaa !175
  %cmp58 = icmp eq i64 %47, %49
  %lnot60 = xor i1 %cmp58, true
  %lnot62 = xor i1 %lnot60, true
  %lnot.ext63 = zext i1 %lnot62 to i32
  %conv64 = sext i32 %lnot.ext63 to i64
  %expval65 = call i64 @llvm.expect.i64(i64 %conv64, i64 1)
  %tobool66 = icmp ne i64 %expval65, 0
  br i1 %tobool66, label %cond.true, label %cond.false77

cond.true:                                        ; preds = %do.body57
  %50 = load ptr, ptr @__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_cached_value, align 8, !tbaa !5
  %tobool67 = icmp ne ptr %50, null
  %lnot68 = xor i1 %tobool67, true
  %lnot70 = xor i1 %lnot68, true
  %lnot.ext71 = zext i1 %lnot70 to i32
  %conv72 = sext i32 %lnot.ext71 to i64
  %expval73 = call i64 @llvm.expect.i64(i64 %conv72, i64 1)
  %tobool74 = icmp ne i64 %expval73, 0
  br i1 %tobool74, label %cond.true75, label %cond.false

cond.true75:                                      ; preds = %cond.true
  %51 = load ptr, ptr @__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_cached_value, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %51)
  %52 = load ptr, ptr @__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_cached_value, align 8, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %53 = load ptr, ptr @__pyx_n_s_pyx_unpickle_Enum, align 8, !tbaa !5
  %call76 = call ptr @__Pyx_GetBuiltinName(ptr noundef %53)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true75
  %cond = phi ptr [ %52, %cond.true75 ], [ %call76, %cond.false ]
  br label %cond.end79

cond.false77:                                     ; preds = %do.body57
  %54 = load ptr, ptr @__pyx_n_s_pyx_unpickle_Enum, align 8, !tbaa !5
  %call78 = call ptr @__Pyx__GetModuleGlobalName(ptr noundef %54, ptr noundef @__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_version, ptr noundef @__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_cached_value)
  br label %cond.end79

cond.end79:                                       ; preds = %cond.false77, %cond.end
  %cond80 = phi ptr [ %cond, %cond.end ], [ %call78, %cond.false77 ]
  store ptr %cond80, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %do.cond81

do.cond81:                                        ; preds = %cond.end79
  br label %do.end82

do.end82:                                         ; preds = %do.cond81
  %55 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool83 = icmp ne ptr %55, null
  %lnot84 = xor i1 %tobool83, true
  %lnot86 = xor i1 %lnot84, true
  %lnot88 = xor i1 %lnot86, true
  %lnot.ext89 = zext i1 %lnot88 to i32
  %conv90 = sext i32 %lnot.ext89 to i64
  %expval91 = call i64 @llvm.expect.i64(i64 %conv90, i64 0)
  %tobool92 = icmp ne i64 %expval91, 0
  br i1 %tobool92, label %if.then93, label %if.end94

if.then93:                                        ; preds = %do.end82
  %56 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %56, ptr %__pyx_filename, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 13, ptr %__pyx_lineno, align 4, !tbaa !9
  %58 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8209, ptr %__pyx_clineno, align 4, !tbaa !9
  %59 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end94:                                         ; preds = %do.end82
  %call95 = call ptr @PyTuple_New(i64 noundef 3)
  store ptr %call95, ptr %__pyx_t_1, align 8, !tbaa !5
  %60 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool96 = icmp ne ptr %60, null
  %lnot97 = xor i1 %tobool96, true
  %lnot99 = xor i1 %lnot97, true
  %lnot101 = xor i1 %lnot99, true
  %lnot.ext102 = zext i1 %lnot101 to i32
  %conv103 = sext i32 %lnot.ext102 to i64
  %expval104 = call i64 @llvm.expect.i64(i64 %conv103, i64 0)
  %tobool105 = icmp ne i64 %expval104, 0
  br i1 %tobool105, label %if.then106, label %if.end107

if.then106:                                       ; preds = %if.end94
  %61 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %61, ptr %__pyx_filename, align 8, !tbaa !5
  %62 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 13, ptr %__pyx_lineno, align 4, !tbaa !9
  %63 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8211, ptr %__pyx_clineno, align 4, !tbaa !9
  %64 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end107:                                        ; preds = %if.end94
  %65 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call108 = call ptr @Py_TYPE(ptr noundef %65)
  call void @Py_INCREF(ptr noundef %call108)
  %66 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %67 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call109 = call ptr @Py_TYPE(ptr noundef %67)
  call void @PyTuple_SET_ITEM(ptr noundef %66, i64 noundef 0, ptr noundef %call109)
  %68 = load ptr, ptr @__pyx_int_184977713, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %68)
  %69 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %70 = load ptr, ptr @__pyx_int_184977713, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %69, i64 noundef 1, ptr noundef %70)
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %71 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %71, i64 noundef 2, ptr noundef @_Py_NoneStruct)
  %call110 = call ptr @PyTuple_New(i64 noundef 3)
  store ptr %call110, ptr %__pyx_t_5, align 8, !tbaa !5
  %72 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool111 = icmp ne ptr %72, null
  %lnot112 = xor i1 %tobool111, true
  %lnot114 = xor i1 %lnot112, true
  %lnot116 = xor i1 %lnot114, true
  %lnot.ext117 = zext i1 %lnot116 to i32
  %conv118 = sext i32 %lnot.ext117 to i64
  %expval119 = call i64 @llvm.expect.i64(i64 %conv118, i64 0)
  %tobool120 = icmp ne i64 %expval119, 0
  br i1 %tobool120, label %if.then121, label %if.end122

if.then121:                                       ; preds = %if.end107
  %73 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %73, ptr %__pyx_filename, align 8, !tbaa !5
  %74 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 13, ptr %__pyx_lineno, align 4, !tbaa !9
  %75 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8222, ptr %__pyx_clineno, align 4, !tbaa !9
  %76 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end122:                                        ; preds = %if.end107
  %77 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %78 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %77, i64 noundef 0, ptr noundef %78)
  %79 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %80 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %79, i64 noundef 1, ptr noundef %80)
  %81 = load ptr, ptr %__pyx_v_state, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %81)
  %82 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %83 = load ptr, ptr %__pyx_v_state, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %82, i64 noundef 2, ptr noundef %83)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %84 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr %84, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  br label %__pyx_L0

if.end123:                                        ; preds = %__pyx_L3
  %85 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %85)
  br label %do.body124

do.body124:                                       ; preds = %if.end123
  %86 = load i64, ptr @__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_version.126, align 8, !tbaa !27
  %87 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %ma_version_tag125 = getelementptr inbounds %struct.PyDictObject, ptr %87, i32 0, i32 2
  %88 = load i64, ptr %ma_version_tag125, align 8, !tbaa !175
  %cmp126 = icmp eq i64 %86, %88
  %lnot128 = xor i1 %cmp126, true
  %lnot130 = xor i1 %lnot128, true
  %lnot.ext131 = zext i1 %lnot130 to i32
  %conv132 = sext i32 %lnot.ext131 to i64
  %expval133 = call i64 @llvm.expect.i64(i64 %conv132, i64 1)
  %tobool134 = icmp ne i64 %expval133, 0
  br i1 %tobool134, label %cond.true135, label %cond.false149

cond.true135:                                     ; preds = %do.body124
  %89 = load ptr, ptr @__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_cached_value.127, align 8, !tbaa !5
  %tobool136 = icmp ne ptr %89, null
  %lnot137 = xor i1 %tobool136, true
  %lnot139 = xor i1 %lnot137, true
  %lnot.ext140 = zext i1 %lnot139 to i32
  %conv141 = sext i32 %lnot.ext140 to i64
  %expval142 = call i64 @llvm.expect.i64(i64 %conv141, i64 1)
  %tobool143 = icmp ne i64 %expval142, 0
  br i1 %tobool143, label %cond.true144, label %cond.false145

cond.true144:                                     ; preds = %cond.true135
  %90 = load ptr, ptr @__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_cached_value.127, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %90)
  %91 = load ptr, ptr @__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_cached_value.127, align 8, !tbaa !5
  br label %cond.end147

cond.false145:                                    ; preds = %cond.true135
  %92 = load ptr, ptr @__pyx_n_s_pyx_unpickle_Enum, align 8, !tbaa !5
  %call146 = call ptr @__Pyx_GetBuiltinName(ptr noundef %92)
  br label %cond.end147

cond.end147:                                      ; preds = %cond.false145, %cond.true144
  %cond148 = phi ptr [ %91, %cond.true144 ], [ %call146, %cond.false145 ]
  br label %cond.end151

cond.false149:                                    ; preds = %do.body124
  %93 = load ptr, ptr @__pyx_n_s_pyx_unpickle_Enum, align 8, !tbaa !5
  %call150 = call ptr @__Pyx__GetModuleGlobalName(ptr noundef %93, ptr noundef @__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_version.126, ptr noundef @__pyx_pf___pyx_MemviewEnum___reduce_cython__.__pyx_dict_cached_value.127)
  br label %cond.end151

cond.end151:                                      ; preds = %cond.false149, %cond.end147
  %cond152 = phi ptr [ %cond148, %cond.end147 ], [ %call150, %cond.false149 ]
  store ptr %cond152, ptr %__pyx_t_5, align 8, !tbaa !5
  br label %do.cond153

do.cond153:                                       ; preds = %cond.end151
  br label %do.end154

do.end154:                                        ; preds = %do.cond153
  %94 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool155 = icmp ne ptr %94, null
  %lnot156 = xor i1 %tobool155, true
  %lnot158 = xor i1 %lnot156, true
  %lnot160 = xor i1 %lnot158, true
  %lnot.ext161 = zext i1 %lnot160 to i32
  %conv162 = sext i32 %lnot.ext161 to i64
  %expval163 = call i64 @llvm.expect.i64(i64 %conv162, i64 0)
  %tobool164 = icmp ne i64 %expval163, 0
  br i1 %tobool164, label %if.then165, label %if.end166

if.then165:                                       ; preds = %do.end154
  %95 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %95, ptr %__pyx_filename, align 8, !tbaa !5
  %96 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 15, ptr %__pyx_lineno, align 4, !tbaa !9
  %97 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8255, ptr %__pyx_clineno, align 4, !tbaa !9
  %98 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end166:                                        ; preds = %do.end154
  %call167 = call ptr @PyTuple_New(i64 noundef 3)
  store ptr %call167, ptr %__pyx_t_1, align 8, !tbaa !5
  %99 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool168 = icmp ne ptr %99, null
  %lnot169 = xor i1 %tobool168, true
  %lnot171 = xor i1 %lnot169, true
  %lnot173 = xor i1 %lnot171, true
  %lnot.ext174 = zext i1 %lnot173 to i32
  %conv175 = sext i32 %lnot.ext174 to i64
  %expval176 = call i64 @llvm.expect.i64(i64 %conv175, i64 0)
  %tobool177 = icmp ne i64 %expval176, 0
  br i1 %tobool177, label %if.then178, label %if.end179

if.then178:                                       ; preds = %if.end166
  %100 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %100, ptr %__pyx_filename, align 8, !tbaa !5
  %101 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 15, ptr %__pyx_lineno, align 4, !tbaa !9
  %102 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8257, ptr %__pyx_clineno, align 4, !tbaa !9
  %103 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end179:                                        ; preds = %if.end166
  %104 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call180 = call ptr @Py_TYPE(ptr noundef %104)
  call void @Py_INCREF(ptr noundef %call180)
  %105 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %106 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call181 = call ptr @Py_TYPE(ptr noundef %106)
  call void @PyTuple_SET_ITEM(ptr noundef %105, i64 noundef 0, ptr noundef %call181)
  %107 = load ptr, ptr @__pyx_int_184977713, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %107)
  %108 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %109 = load ptr, ptr @__pyx_int_184977713, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %108, i64 noundef 1, ptr noundef %109)
  %110 = load ptr, ptr %__pyx_v_state, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %110)
  %111 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %112 = load ptr, ptr %__pyx_v_state, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %111, i64 noundef 2, ptr noundef %112)
  %call182 = call ptr @PyTuple_New(i64 noundef 2)
  store ptr %call182, ptr %__pyx_t_4, align 8, !tbaa !5
  %113 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool183 = icmp ne ptr %113, null
  %lnot184 = xor i1 %tobool183, true
  %lnot186 = xor i1 %lnot184, true
  %lnot188 = xor i1 %lnot186, true
  %lnot.ext189 = zext i1 %lnot188 to i32
  %conv190 = sext i32 %lnot.ext189 to i64
  %expval191 = call i64 @llvm.expect.i64(i64 %conv190, i64 0)
  %tobool192 = icmp ne i64 %expval191, 0
  br i1 %tobool192, label %if.then193, label %if.end194

if.then193:                                       ; preds = %if.end179
  %114 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %114, ptr %__pyx_filename, align 8, !tbaa !5
  %115 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 15, ptr %__pyx_lineno, align 4, !tbaa !9
  %116 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8268, ptr %__pyx_clineno, align 4, !tbaa !9
  %117 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end194:                                        ; preds = %if.end179
  %118 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %119 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %118, i64 noundef 0, ptr noundef %119)
  %120 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %121 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %120, i64 noundef 1, ptr noundef %121)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %122 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %122, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then193, %if.then178, %if.then165, %if.then121, %if.then106, %if.then93, %if.then47, %if.then34, %if.then16, %if.then
  %123 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %123)
  %124 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %124)
  %125 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %125)
  %126 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %127 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %128 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.128, i32 noundef %126, i32 noundef %127, ptr noundef %128)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end194, %if.end122
  %129 = load ptr, ptr %__pyx_v_state, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %129)
  %130 = load ptr, ptr %__pyx_v__dict, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %130)
  %131 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_use_setstate) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v__dict) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_state) #13
  ret ptr %131
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_GetAttr3(ptr noundef %o, ptr noundef %n, ptr noundef %d) #3 {
entry:
  %o.addr = alloca ptr, align 8
  %n.addr = alloca ptr, align 8
  %d.addr = alloca ptr, align 8
  %r = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %n, ptr %n.addr, align 8, !tbaa !5
  store ptr %d, ptr %d.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #13
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %n.addr, align 8, !tbaa !5
  %call = call ptr @__Pyx_GetAttr(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %r, align 8, !tbaa !5
  %2 = load ptr, ptr %r, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load ptr, ptr %r, align 8, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %4 = load ptr, ptr %d.addr, align 8, !tbaa !5
  %call3 = call ptr @__Pyx_GetAttr3Default(ptr noundef %4)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %3, %cond.true ], [ %call3, %cond.false ]
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #13
  ret ptr %cond
}

declare ptr @PyNumber_InPlaceAdd(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx__GetModuleGlobalName(ptr noundef %name, ptr noundef %dict_version, ptr noundef %dict_cached_value) #0 {
entry:
  %retval = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %dict_version.addr = alloca ptr, align 8
  %dict_cached_value.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %name, ptr %name.addr, align 8, !tbaa !5
  store ptr %dict_version, ptr %dict_version.addr, align 8, !tbaa !5
  store ptr %dict_cached_value, ptr %dict_cached_value.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  %0 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %1 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %2, i32 0, i32 2
  %3 = load i64, ptr %hash, align 8, !tbaa !154
  %call = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %0, ptr noundef %1, i64 noundef %3)
  store ptr %call, ptr %result, align 8, !tbaa !5
  %4 = load ptr, ptr @__pyx_d, align 8, !tbaa !5
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %4, i32 0, i32 2
  %5 = load i64, ptr %ma_version_tag, align 8, !tbaa !175
  %6 = load ptr, ptr %dict_version.addr, align 8, !tbaa !5
  store i64 %5, ptr %6, align 8, !tbaa !27
  %7 = load ptr, ptr %result, align 8, !tbaa !5
  %8 = load ptr, ptr %dict_cached_value.addr, align 8, !tbaa !5
  store ptr %7, ptr %8, align 8, !tbaa !5
  %9 = load ptr, ptr %result, align 8, !tbaa !5
  %tobool = icmp ne ptr %9, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %10 = load ptr, ptr %result, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %10)
  %11 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %11, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.else:                                          ; preds = %entry
  %call3 = call ptr @PyErr_Occurred()
  %tobool4 = icmp ne ptr %call3, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0)
  %tobool11 = icmp ne i64 %expval10, 0
  br i1 %tobool11, label %if.then12, label %if.end

if.then12:                                        ; preds = %if.else
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end
  %12 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %call14 = call ptr @__Pyx_GetBuiltinName(ptr noundef %12)
  store ptr %call14, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.then12, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  %13 = load ptr, ptr %retval, align 8
  ret ptr %13
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetAttr3Default(ptr noundef %d) #0 {
entry:
  %retval = alloca ptr, align 8
  %d.addr = alloca ptr, align 8
  store ptr %d, ptr %d.addr, align 8, !tbaa !5
  %0 = load ptr, ptr @PyExc_AttributeError, align 8, !tbaa !5
  %call = call i32 @PyErr_ExceptionMatches(ptr noundef %0)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  call void @PyErr_Clear()
  %1 = load ptr, ptr %d.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %1)
  %2 = load ptr, ptr %d.addr, align 8, !tbaa !5
  store ptr %2, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %3 = load ptr, ptr %retval, align 8
  ret ptr %3
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf___pyx_MemviewEnum_2__setstate_cython__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v___pyx_state) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call = call i32 @Py_IS_TYPE(ptr noundef %0, ptr noundef @PyTuple_Type)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %1, @_Py_NoneStruct
  br i1 %cmp, label %if.end, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %2 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call5 = call ptr @Py_TYPE(ptr noundef %3)
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call5, i32 0, i32 1
  %4 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %call6 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %2, ptr noundef @.str.117, ptr noundef @.str.129, ptr noundef %4)
  br i1 false, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false4
  %5 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %5, ptr %__pyx_filename, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 17, ptr %__pyx_lineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8336, ptr %__pyx_clineno, align 4, !tbaa !9
  %8 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  %9 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call7 = call ptr @__pyx_unpickle_Enum__set_state(ptr noundef %9, ptr noundef %10)
  store ptr %call7, ptr %__pyx_t_1, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool8 = icmp ne ptr %11, null
  %lnot9 = xor i1 %tobool8, true
  %lnot11 = xor i1 %lnot9, true
  %lnot13 = xor i1 %lnot11, true
  %lnot.ext14 = zext i1 %lnot13 to i32
  %conv15 = sext i32 %lnot.ext14 to i64
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 0)
  %tobool17 = icmp ne i64 %expval16, 0
  br i1 %tobool17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end
  %12 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %12, ptr %__pyx_filename, align 8, !tbaa !5
  %13 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 17, ptr %__pyx_lineno, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8337, ptr %__pyx_clineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end19:                                         ; preds = %if.end
  %16 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %16)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then18, %if.then
  %17 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %17)
  %18 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %20 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.130, i32 noundef %18, i32 noundef %19, ptr noundef %20)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end19
  %21 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %21
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_unpickle_Enum__set_state(ptr noundef %__pyx_v___pyx_result, ptr noundef %__pyx_v___pyx_state) #0 {
entry:
  %__pyx_v___pyx_result.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i64, align 8
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v___pyx_result, ptr %__pyx_v___pyx_result.addr, align 8, !tbaa !5
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #13
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.131)
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 12, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18996, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call = call ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %6, i64 noundef 0, i32 noundef 0, i32 noundef 0)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool2 = icmp ne ptr %7, null
  %lnot3 = xor i1 %tobool2, true
  %lnot5 = xor i1 %lnot3, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0)
  %tobool11 = icmp ne i64 %expval10, 0
  br i1 %tobool11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end
  %8 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %8, ptr %__pyx_filename, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 12, ptr %__pyx_lineno, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18998, ptr %__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end13:                                         ; preds = %if.end
  %12 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !tbaa !5
  %name = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %12, i32 0, i32 1
  %13 = load ptr, ptr %name, align 8, !tbaa !173
  call void @Py_DECREF(ptr noundef %13)
  %14 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !tbaa !5
  %name14 = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %15, i32 0, i32 1
  store ptr %14, ptr %name14, align 8, !tbaa !173
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %cmp15 = icmp eq ptr %16, @_Py_NoneStruct
  %lnot17 = xor i1 %cmp15, true
  %lnot19 = xor i1 %lnot17, true
  %lnot.ext20 = zext i1 %lnot19 to i32
  %conv21 = sext i32 %lnot.ext20 to i64
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 0)
  %tobool23 = icmp ne i64 %expval22, 0
  br i1 %tobool23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end13
  %17 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %17, ptr noundef @.str.116)
  %18 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %18, ptr %__pyx_filename, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 13, ptr %__pyx_lineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 19014, ptr %__pyx_clineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end25:                                         ; preds = %if.end13
  %22 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call26 = call i64 @PyTuple_GET_SIZE(ptr noundef %22)
  store i64 %call26, ptr %__pyx_t_3, align 8, !tbaa !27
  %23 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  %cmp27 = icmp eq i64 %23, -1
  %lnot29 = xor i1 %cmp27, true
  %lnot31 = xor i1 %lnot29, true
  %lnot.ext32 = zext i1 %lnot31 to i32
  %conv33 = sext i32 %lnot.ext32 to i64
  %expval34 = call i64 @llvm.expect.i64(i64 %conv33, i64 0)
  %tobool35 = icmp ne i64 %expval34, 0
  br i1 %tobool35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end25
  %24 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %24, ptr %__pyx_filename, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 13, ptr %__pyx_lineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 19016, ptr %__pyx_clineno, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end37:                                         ; preds = %if.end25
  %28 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  %cmp38 = icmp sgt i64 %28, 1
  %conv39 = zext i1 %cmp38 to i32
  %cmp40 = icmp ne i32 %conv39, 0
  %conv41 = zext i1 %cmp40 to i32
  store i32 %conv41, ptr %__pyx_t_4, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool42 = icmp ne i32 %29, 0
  br i1 %tobool42, label %if.then43, label %if.else

if.then43:                                        ; preds = %if.end37
  br label %if.end44

if.else:                                          ; preds = %if.end37
  %30 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  store i32 %30, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L4_bool_binop_done

if.end44:                                         ; preds = %if.then43
  %31 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !tbaa !5
  %32 = load ptr, ptr @__pyx_n_s_dict, align 8, !tbaa !5
  %call45 = call i32 @__Pyx_HasAttr(ptr noundef %31, ptr noundef %32)
  store i32 %call45, ptr %__pyx_t_4, align 4, !tbaa !9
  %33 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp46 = icmp eq i32 %33, -1
  %lnot48 = xor i1 %cmp46, true
  %lnot50 = xor i1 %lnot48, true
  %lnot.ext51 = zext i1 %lnot50 to i32
  %conv52 = sext i32 %lnot.ext51 to i64
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0)
  %tobool54 = icmp ne i64 %expval53, 0
  br i1 %tobool54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.end44
  %34 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %34, ptr %__pyx_filename, align 8, !tbaa !5
  %35 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 13, ptr %__pyx_lineno, align 4, !tbaa !9
  %36 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 19023, ptr %__pyx_clineno, align 4, !tbaa !9
  %37 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end56:                                         ; preds = %if.end44
  %38 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp57 = icmp ne i32 %38, 0
  %conv58 = zext i1 %cmp57 to i32
  store i32 %conv58, ptr %__pyx_t_5, align 4, !tbaa !9
  %39 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  store i32 %39, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L4_bool_binop_done

__pyx_L4_bool_binop_done:                         ; preds = %if.end56, %if.else
  %40 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool59 = icmp ne i32 %40, 0
  br i1 %tobool59, label %if.then60, label %if.end147

if.then60:                                        ; preds = %__pyx_L4_bool_binop_done
  %41 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !tbaa !5
  %42 = load ptr, ptr @__pyx_n_s_dict, align 8, !tbaa !5
  %call61 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %41, ptr noundef %42)
  store ptr %call61, ptr %__pyx_t_6, align 8, !tbaa !5
  %43 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool62 = icmp ne ptr %43, null
  %lnot63 = xor i1 %tobool62, true
  %lnot65 = xor i1 %lnot63, true
  %lnot67 = xor i1 %lnot65, true
  %lnot.ext68 = zext i1 %lnot67 to i32
  %conv69 = sext i32 %lnot.ext68 to i64
  %expval70 = call i64 @llvm.expect.i64(i64 %conv69, i64 0)
  %tobool71 = icmp ne i64 %expval70, 0
  br i1 %tobool71, label %if.then72, label %if.end73

if.then72:                                        ; preds = %if.then60
  %44 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %44, ptr %__pyx_filename, align 8, !tbaa !5
  %45 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 14, ptr %__pyx_lineno, align 4, !tbaa !9
  %46 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 19034, ptr %__pyx_clineno, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end73:                                         ; preds = %if.then60
  %48 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %49 = load ptr, ptr @__pyx_n_s_update, align 8, !tbaa !5
  %call74 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %48, ptr noundef %49)
  store ptr %call74, ptr %__pyx_t_7, align 8, !tbaa !5
  %50 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %tobool75 = icmp ne ptr %50, null
  %lnot76 = xor i1 %tobool75, true
  %lnot78 = xor i1 %lnot76, true
  %lnot80 = xor i1 %lnot78, true
  %lnot.ext81 = zext i1 %lnot80 to i32
  %conv82 = sext i32 %lnot.ext81 to i64
  %expval83 = call i64 @llvm.expect.i64(i64 %conv82, i64 0)
  %tobool84 = icmp ne i64 %expval83, 0
  br i1 %tobool84, label %if.then85, label %if.end86

if.then85:                                        ; preds = %if.end73
  %51 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %51, ptr %__pyx_filename, align 8, !tbaa !5
  %52 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 14, ptr %__pyx_lineno, align 4, !tbaa !9
  %53 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 19036, ptr %__pyx_clineno, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end86:                                         ; preds = %if.end73
  %55 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %55)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %56 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %cmp87 = icmp eq ptr %56, @_Py_NoneStruct
  %lnot89 = xor i1 %cmp87, true
  %lnot91 = xor i1 %lnot89, true
  %lnot.ext92 = zext i1 %lnot91 to i32
  %conv93 = sext i32 %lnot.ext92 to i64
  %expval94 = call i64 @llvm.expect.i64(i64 %conv93, i64 0)
  %tobool95 = icmp ne i64 %expval94, 0
  br i1 %tobool95, label %if.then96, label %if.end97

if.then96:                                        ; preds = %if.end86
  %57 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %57, ptr noundef @.str.131)
  %58 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %58, ptr %__pyx_filename, align 8, !tbaa !5
  %59 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 14, ptr %__pyx_lineno, align 4, !tbaa !9
  %60 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 19041, ptr %__pyx_clineno, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end97:                                         ; preds = %if.end86
  %62 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call98 = call ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %62, i64 noundef 1, i32 noundef 0, i32 noundef 0)
  store ptr %call98, ptr %__pyx_t_6, align 8, !tbaa !5
  %63 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool99 = icmp ne ptr %63, null
  %lnot100 = xor i1 %tobool99, true
  %lnot102 = xor i1 %lnot100, true
  %lnot104 = xor i1 %lnot102, true
  %lnot.ext105 = zext i1 %lnot104 to i32
  %conv106 = sext i32 %lnot.ext105 to i64
  %expval107 = call i64 @llvm.expect.i64(i64 %conv106, i64 0)
  %tobool108 = icmp ne i64 %expval107, 0
  br i1 %tobool108, label %if.then109, label %if.end110

if.then109:                                       ; preds = %if.end97
  %64 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %64, ptr %__pyx_filename, align 8, !tbaa !5
  %65 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 14, ptr %__pyx_lineno, align 4, !tbaa !9
  %66 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 19043, ptr %__pyx_clineno, align 4, !tbaa !9
  %67 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end110:                                        ; preds = %if.end97
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  %68 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %call111 = call i32 @Py_IS_TYPE(ptr noundef %68, ptr noundef @PyMethod_Type)
  %tobool112 = icmp ne i32 %call111, 0
  %lnot113 = xor i1 %tobool112, true
  %lnot115 = xor i1 %lnot113, true
  %lnot.ext116 = zext i1 %lnot115 to i32
  %conv117 = sext i32 %lnot.ext116 to i64
  %expval118 = call i64 @llvm.expect.i64(i64 %conv117, i64 1)
  %tobool119 = icmp ne i64 %expval118, 0
  br i1 %tobool119, label %if.then120, label %if.end131

if.then120:                                       ; preds = %if.end110
  %69 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %69, i32 0, i32 2
  %70 = load ptr, ptr %im_self, align 8, !tbaa !125
  store ptr %70, ptr %__pyx_t_8, align 8, !tbaa !5
  %71 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %tobool121 = icmp ne ptr %71, null
  %lnot122 = xor i1 %tobool121, true
  %lnot124 = xor i1 %lnot122, true
  %lnot.ext125 = zext i1 %lnot124 to i32
  %conv126 = sext i32 %lnot.ext125 to i64
  %expval127 = call i64 @llvm.expect.i64(i64 %conv126, i64 1)
  %tobool128 = icmp ne i64 %expval127, 0
  br i1 %tobool128, label %if.then129, label %if.end130

if.then129:                                       ; preds = %if.then120
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #13
  %72 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %72, i32 0, i32 1
  %73 = load ptr, ptr %im_func, align 8, !tbaa !127
  store ptr %73, ptr %function, align 8, !tbaa !5
  %74 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %74)
  %75 = load ptr, ptr %function, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %75)
  br label %do.body

do.body:                                          ; preds = %if.then129
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %76 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  store ptr %76, ptr %tmp, align 8, !tbaa !5
  %77 = load ptr, ptr %function, align 8, !tbaa !5
  store ptr %77, ptr %__pyx_t_7, align 8, !tbaa !5
  %78 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %78)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #13
  br label %if.end130

if.end130:                                        ; preds = %do.end, %if.then120
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.end110
  %79 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %tobool132 = icmp ne ptr %79, null
  br i1 %tobool132, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end131
  %80 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %81 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %82 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call133 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %80, ptr noundef %81, ptr noundef %82)
  br label %cond.end

cond.false:                                       ; preds = %if.end131
  %83 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %84 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call134 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %83, ptr noundef %84)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call133, %cond.true ], [ %call134, %cond.false ]
  store ptr %cond, ptr %__pyx_t_1, align 8, !tbaa !5
  %85 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %85)
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  %86 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %86)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %87 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool135 = icmp ne ptr %87, null
  %lnot136 = xor i1 %tobool135, true
  %lnot138 = xor i1 %lnot136, true
  %lnot140 = xor i1 %lnot138, true
  %lnot.ext141 = zext i1 %lnot140 to i32
  %conv142 = sext i32 %lnot.ext141 to i64
  %expval143 = call i64 @llvm.expect.i64(i64 %conv142, i64 0)
  %tobool144 = icmp ne i64 %expval143, 0
  br i1 %tobool144, label %if.then145, label %if.end146

if.then145:                                       ; preds = %cond.end
  %88 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %88, ptr %__pyx_filename, align 8, !tbaa !5
  %89 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 14, ptr %__pyx_lineno, align 4, !tbaa !9
  %90 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 19058, ptr %__pyx_clineno, align 4, !tbaa !9
  %91 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end146:                                        ; preds = %cond.end
  %92 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %92)
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  %93 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %93)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %__pyx_L4_bool_binop_done
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then145, %if.then109, %if.then96, %if.then85, %if.then72, %if.then55, %if.then36, %if.then24, %if.then12, %if.then
  %94 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %94)
  %95 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %95)
  %96 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %96)
  %97 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %97)
  %98 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %99 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %100 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.132, i32 noundef %98, i32 noundef %99, ptr noundef %100)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end147
  %101 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %101
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %o, i64 noundef %i, i32 noundef %wraparound, i32 noundef %boundscheck) #3 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %i.addr = alloca i64, align 8
  %wraparound.addr = alloca i32, align 4
  %boundscheck.addr = alloca i32, align 4
  %wrapped_i = alloca i64, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store i64 %i, ptr %i.addr, align 8, !tbaa !27
  store i32 %wraparound, ptr %wraparound.addr, align 4, !tbaa !9
  store i32 %boundscheck, ptr %boundscheck.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %wrapped_i) #13
  %0 = load i64, ptr %i.addr, align 8, !tbaa !27
  store i64 %0, ptr %wrapped_i, align 8, !tbaa !27
  %1 = load i32, ptr %wraparound.addr, align 4, !tbaa !9
  %conv = sext i32 %1 to i64
  %2 = load i64, ptr %i.addr, align 8, !tbaa !27
  %cmp = icmp slt i64 %2, 0
  %lnot = xor i1 %cmp, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv3 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv3, i64 0)
  %and = and i64 %conv, %expval
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %3)
  %4 = load i64, ptr %wrapped_i, align 8, !tbaa !27
  %add = add i64 %4, %call
  store i64 %add, ptr %wrapped_i, align 8, !tbaa !27
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, ptr %boundscheck.addr, align 4, !tbaa !9
  %tobool4 = icmp ne i32 %5, 0
  br i1 %tobool4, label %lor.lhs.false, label %if.then15

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i64, ptr %wrapped_i, align 8, !tbaa !27
  %7 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call5 = call i64 @PyTuple_GET_SIZE(ptr noundef %7)
  %call6 = call i32 @__Pyx_is_valid_index(i64 noundef %6, i64 noundef %call5)
  %tobool7 = icmp ne i32 %call6, 0
  %lnot8 = xor i1 %tobool7, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 1)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #13
  %8 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %8, i32 0, i32 1
  %9 = load i64, ptr %wrapped_i, align 8, !tbaa !27
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %9
  %10 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %10, ptr %r, align 8, !tbaa !5
  %11 = load ptr, ptr %r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %11)
  %12 = load ptr, ptr %r, align 8, !tbaa !5
  store ptr %12, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #13
  br label %cleanup

if.end16:                                         ; preds = %lor.lhs.false
  %13 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %14 = load i64, ptr %i.addr, align 8, !tbaa !27
  %call17 = call ptr @PyLong_FromSsize_t(i64 noundef %14)
  %call18 = call ptr @__Pyx_GetItemInt_Generic(ptr noundef %13, ptr noundef %call17)
  store ptr %call18, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.then15
  call void @llvm.lifetime.end.p0(i64 8, ptr %wrapped_i) #13
  %15 = load ptr, ptr %retval, align 8
  ret ptr %15
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_HasAttr(ptr noundef %o, ptr noundef %n) #3 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %n.addr = alloca ptr, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %n, ptr %n.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #13
  %0 = load ptr, ptr %n.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 268435456)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.133)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %n.addr, align 8, !tbaa !5
  %call5 = call ptr @__Pyx_GetAttr(ptr noundef %2, ptr noundef %3)
  store ptr %call5, ptr %r, align 8, !tbaa !5
  %4 = load ptr, ptr %r, align 8, !tbaa !5
  %tobool6 = icmp ne ptr %4, null
  %lnot7 = xor i1 %tobool6, true
  %lnot9 = xor i1 %lnot7, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.end
  call void @PyErr_Clear()
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.else:                                          ; preds = %if.end
  %5 = load ptr, ptr %r, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %5)
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then16, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #13
  %6 = load i32, ptr %retval, align 4
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum___init__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_name) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_name.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_name, ptr %__pyx_v_name.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  %0 = load ptr, ptr %__pyx_v_name.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %name = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %1, i32 0, i32 1
  %2 = load ptr, ptr %name, align 8, !tbaa !173
  call void @Py_DECREF(ptr noundef %2)
  %3 = load ptr, ptr %__pyx_v_name.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %name1 = getelementptr inbounds %struct.__pyx_MemviewEnum_obj, ptr %4, i32 0, i32 1
  store ptr %3, ptr %name1, align 8, !tbaa !173
  store i32 0, ptr %__pyx_r, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  ret i32 %5
}

declare ptr @PyObject_GetIter(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %err, ptr noundef %exc_type) #3 {
entry:
  %retval = alloca i32, align 4
  %err.addr = alloca ptr, align 8
  %exc_type.addr = alloca ptr, align 8
  store ptr %err, ptr %err.addr, align 8, !tbaa !5
  store ptr %exc_type, ptr %exc_type.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %err.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %exc_type.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, %1
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %err.addr, align 8, !tbaa !5
  %call = call i32 @PyType_Check(ptr noundef %2)
  %tobool2 = icmp ne i32 %call, 0
  br i1 %tobool2, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %3 = load ptr, ptr %err.addr, align 8, !tbaa !5
  %call3 = call i32 @PyType_HasFeature(ptr noundef %3, i64 noundef 1073741824)
  %tobool4 = icmp ne i32 %call3, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %4 = phi i1 [ false, %if.end ], [ %tobool4, %land.rhs ]
  %lnot5 = xor i1 %4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1)
  %tobool11 = icmp ne i64 %expval10, 0
  br i1 %tobool11, label %if.then12, label %if.end43

if.then12:                                        ; preds = %land.end
  %5 = load ptr, ptr %exc_type.addr, align 8, !tbaa !5
  %call13 = call i32 @PyType_Check(ptr noundef %5)
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %land.rhs15, label %land.end18

land.rhs15:                                       ; preds = %if.then12
  %6 = load ptr, ptr %exc_type.addr, align 8, !tbaa !5
  %call16 = call i32 @PyType_HasFeature(ptr noundef %6, i64 noundef 1073741824)
  %tobool17 = icmp ne i32 %call16, 0
  br label %land.end18

land.end18:                                       ; preds = %land.rhs15, %if.then12
  %7 = phi i1 [ false, %if.then12 ], [ %tobool17, %land.rhs15 ]
  %lnot19 = xor i1 %7, true
  %lnot21 = xor i1 %lnot19, true
  %lnot.ext22 = zext i1 %lnot21 to i32
  %conv23 = sext i32 %lnot.ext22 to i64
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1)
  %tobool25 = icmp ne i64 %expval24, 0
  br i1 %tobool25, label %if.then26, label %if.else

if.then26:                                        ; preds = %land.end18
  %8 = load ptr, ptr %err.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %exc_type.addr, align 8, !tbaa !5
  %call27 = call i32 @__Pyx_inner_PyErr_GivenExceptionMatches2(ptr noundef %8, ptr noundef null, ptr noundef %9)
  store i32 %call27, ptr %retval, align 4
  br label %return

if.else:                                          ; preds = %land.end18
  %10 = load ptr, ptr %exc_type.addr, align 8, !tbaa !5
  %call28 = call ptr @Py_TYPE(ptr noundef %10)
  %call29 = call i32 @PyType_HasFeature(ptr noundef %call28, i64 noundef 67108864)
  %tobool30 = icmp ne i32 %call29, 0
  %lnot31 = xor i1 %tobool30, true
  %lnot33 = xor i1 %lnot31, true
  %lnot.ext34 = zext i1 %lnot33 to i32
  %conv35 = sext i32 %lnot.ext34 to i64
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 1)
  %tobool37 = icmp ne i64 %expval36, 0
  br i1 %tobool37, label %if.then38, label %if.else40

if.then38:                                        ; preds = %if.else
  %11 = load ptr, ptr %err.addr, align 8, !tbaa !5
  %12 = load ptr, ptr %exc_type.addr, align 8, !tbaa !5
  %call39 = call i32 @__Pyx_PyErr_GivenExceptionMatchesTuple(ptr noundef %11, ptr noundef %12)
  store i32 %call39, ptr %retval, align 4
  br label %return

if.else40:                                        ; preds = %if.else
  br label %if.end41

if.end41:                                         ; preds = %if.else40
  br label %if.end42

if.end42:                                         ; preds = %if.end41
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %land.end
  %13 = load ptr, ptr %err.addr, align 8, !tbaa !5
  %14 = load ptr, ptr %exc_type.addr, align 8, !tbaa !5
  %call44 = call i32 @PyErr_GivenExceptionMatches(ptr noundef %13, ptr noundef %14)
  store i32 %call44, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.end43, %if.then38, %if.then26, %if.then
  %15 = load i32, ptr %retval, align 4
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pybuffer_index(ptr noundef %__pyx_v_view, ptr noundef %__pyx_v_bufp, i64 noundef %__pyx_v_index, i64 noundef %__pyx_v_dim) #0 {
entry:
  %__pyx_v_view.addr = alloca ptr, align 8
  %__pyx_v_bufp.addr = alloca ptr, align 8
  %__pyx_v_index.addr = alloca i64, align 8
  %__pyx_v_dim.addr = alloca i64, align 8
  %__pyx_v_shape = alloca i64, align 8
  %__pyx_v_stride = alloca i64, align 8
  %__pyx_v_suboffset = alloca i64, align 8
  %__pyx_v_itemsize = alloca i64, align 8
  %__pyx_v_resultp = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i64, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_view, ptr %__pyx_v_view.addr, align 8, !tbaa !5
  store ptr %__pyx_v_bufp, ptr %__pyx_v_bufp.addr, align 8, !tbaa !5
  store i64 %__pyx_v_index, ptr %__pyx_v_index.addr, align 8, !tbaa !27
  store i64 %__pyx_v_dim, ptr %__pyx_v_dim.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_shape) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_stride) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_suboffset) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_itemsize) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_resultp) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  store i64 -1, ptr %__pyx_v_suboffset, align 8, !tbaa !27
  %0 = load ptr, ptr %__pyx_v_view.addr, align 8, !tbaa !5
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %0, i32 0, i32 3
  %1 = load i64, ptr %itemsize, align 8, !tbaa !177
  store i64 %1, ptr %__pyx_t_1, align 8, !tbaa !27
  %2 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  store i64 %2, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %3 = load ptr, ptr %__pyx_v_view.addr, align 8, !tbaa !5
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %3, i32 0, i32 5
  %4 = load i32, ptr %ndim, align 4, !tbaa !178
  %cmp = icmp eq i32 %4, 0
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_2, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then, label %if.end35

if.then:                                          ; preds = %entry
  %6 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp3 = icmp eq i64 %6, 0
  %lnot = xor i1 %cmp3, true
  %lnot5 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot5 to i32
  %conv6 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv6, i64 0)
  %tobool7 = icmp ne i64 %expval, 0
  br i1 %tobool7, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.then
  %7 = load ptr, ptr @PyExc_ZeroDivisionError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %7, ptr noundef @.str.120)
  %8 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %8, ptr %__pyx_filename, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 919, ptr %__pyx_lineno, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 14748, ptr %__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.else:                                          ; preds = %if.then
  %12 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp9 = icmp eq i64 %12, -1
  %lnot11 = xor i1 %cmp9, true
  %lnot13 = xor i1 %lnot11, true
  %lnot.ext14 = zext i1 %lnot13 to i32
  %conv15 = sext i32 %lnot.ext14 to i64
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 0)
  %tobool17 = icmp ne i64 %expval16, 0
  br i1 %tobool17, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.else
  %13 = load ptr, ptr %__pyx_v_view.addr, align 8, !tbaa !5
  %len = getelementptr inbounds %struct.Py_buffer, ptr %13, i32 0, i32 2
  %14 = load i64, ptr %len, align 8, !tbaa !179
  %cmp18 = icmp slt i64 %14, 0
  %conv19 = zext i1 %cmp18 to i32
  %15 = load ptr, ptr %__pyx_v_view.addr, align 8, !tbaa !5
  %len20 = getelementptr inbounds %struct.Py_buffer, ptr %15, i32 0, i32 2
  %16 = load i64, ptr %len20, align 8, !tbaa !179
  %17 = load ptr, ptr %__pyx_v_view.addr, align 8, !tbaa !5
  %len21 = getelementptr inbounds %struct.Py_buffer, ptr %17, i32 0, i32 2
  %18 = load i64, ptr %len21, align 8, !tbaa !179
  %sub = sub i64 0, %18
  %cmp22 = icmp eq i64 %16, %sub
  %conv23 = zext i1 %cmp22 to i32
  %and = and i32 %conv19, %conv23
  %tobool24 = icmp ne i32 %and, 0
  %lnot25 = xor i1 %tobool24, true
  %lnot27 = xor i1 %lnot25, true
  %lnot.ext28 = zext i1 %lnot27 to i32
  %conv29 = sext i32 %lnot.ext28 to i64
  %expval30 = call i64 @llvm.expect.i64(i64 %conv29, i64 0)
  %tobool31 = icmp ne i64 %expval30, 0
  br i1 %tobool31, label %if.then32, label %if.end

if.then32:                                        ; preds = %land.lhs.true
  %19 = load ptr, ptr @PyExc_OverflowError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %19, ptr noundef @.str.121)
  %20 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %20, ptr %__pyx_filename, align 8, !tbaa !5
  %21 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 919, ptr %__pyx_lineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 14752, ptr %__pyx_clineno, align 4, !tbaa !9
  %23 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %land.lhs.true, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end
  %24 = load ptr, ptr %__pyx_v_view.addr, align 8, !tbaa !5
  %len34 = getelementptr inbounds %struct.Py_buffer, ptr %24, i32 0, i32 2
  %25 = load i64, ptr %len34, align 8, !tbaa !179
  %26 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %div = sdiv i64 %25, %26
  store i64 %div, ptr %__pyx_v_shape, align 8, !tbaa !27
  %27 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  store i64 %27, ptr %__pyx_v_stride, align 8, !tbaa !27
  br label %__pyx_L3

if.end35:                                         ; preds = %entry
  %28 = load ptr, ptr %__pyx_v_view.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.Py_buffer, ptr %28, i32 0, i32 7
  %29 = load ptr, ptr %shape, align 8, !tbaa !180
  %30 = load i64, ptr %__pyx_v_dim.addr, align 8, !tbaa !27
  %arrayidx = getelementptr i64, ptr %29, i64 %30
  %31 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %31, ptr %__pyx_v_shape, align 8, !tbaa !27
  %32 = load ptr, ptr %__pyx_v_view.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.Py_buffer, ptr %32, i32 0, i32 8
  %33 = load ptr, ptr %strides, align 8, !tbaa !181
  %34 = load i64, ptr %__pyx_v_dim.addr, align 8, !tbaa !27
  %arrayidx36 = getelementptr i64, ptr %33, i64 %34
  %35 = load i64, ptr %arrayidx36, align 8, !tbaa !27
  store i64 %35, ptr %__pyx_v_stride, align 8, !tbaa !27
  %36 = load ptr, ptr %__pyx_v_view.addr, align 8, !tbaa !5
  %suboffsets = getelementptr inbounds %struct.Py_buffer, ptr %36, i32 0, i32 9
  %37 = load ptr, ptr %suboffsets, align 8, !tbaa !182
  %cmp37 = icmp ne ptr %37, null
  %conv38 = zext i1 %cmp37 to i32
  %cmp39 = icmp ne i32 %conv38, 0
  %conv40 = zext i1 %cmp39 to i32
  store i32 %conv40, ptr %__pyx_t_2, align 4, !tbaa !9
  %38 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool41 = icmp ne i32 %38, 0
  br i1 %tobool41, label %if.then42, label %if.end45

if.then42:                                        ; preds = %if.end35
  %39 = load ptr, ptr %__pyx_v_view.addr, align 8, !tbaa !5
  %suboffsets43 = getelementptr inbounds %struct.Py_buffer, ptr %39, i32 0, i32 9
  %40 = load ptr, ptr %suboffsets43, align 8, !tbaa !182
  %41 = load i64, ptr %__pyx_v_dim.addr, align 8, !tbaa !27
  %arrayidx44 = getelementptr i64, ptr %40, i64 %41
  %42 = load i64, ptr %arrayidx44, align 8, !tbaa !27
  store i64 %42, ptr %__pyx_v_suboffset, align 8, !tbaa !27
  br label %if.end45

if.end45:                                         ; preds = %if.then42, %if.end35
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end45, %if.end33
  %43 = load i64, ptr %__pyx_v_index.addr, align 8, !tbaa !27
  %cmp46 = icmp slt i64 %43, 0
  %conv47 = zext i1 %cmp46 to i32
  %cmp48 = icmp ne i32 %conv47, 0
  %conv49 = zext i1 %cmp48 to i32
  store i32 %conv49, ptr %__pyx_t_2, align 4, !tbaa !9
  %44 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool50 = icmp ne i32 %44, 0
  br i1 %tobool50, label %if.then51, label %if.end106

if.then51:                                        ; preds = %__pyx_L3
  %45 = load i64, ptr %__pyx_v_index.addr, align 8, !tbaa !27
  %46 = load ptr, ptr %__pyx_v_view.addr, align 8, !tbaa !5
  %shape52 = getelementptr inbounds %struct.Py_buffer, ptr %46, i32 0, i32 7
  %47 = load ptr, ptr %shape52, align 8, !tbaa !180
  %48 = load i64, ptr %__pyx_v_dim.addr, align 8, !tbaa !27
  %arrayidx53 = getelementptr i64, ptr %47, i64 %48
  %49 = load i64, ptr %arrayidx53, align 8, !tbaa !27
  %add = add i64 %45, %49
  store i64 %add, ptr %__pyx_v_index.addr, align 8, !tbaa !27
  %50 = load i64, ptr %__pyx_v_index.addr, align 8, !tbaa !27
  %cmp54 = icmp slt i64 %50, 0
  %conv55 = zext i1 %cmp54 to i32
  %cmp56 = icmp ne i32 %conv55, 0
  %conv57 = zext i1 %cmp56 to i32
  store i32 %conv57, ptr %__pyx_t_2, align 4, !tbaa !9
  %51 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool58 = icmp ne i32 %51, 0
  %lnot59 = xor i1 %tobool58, true
  %lnot61 = xor i1 %lnot59, true
  %lnot.ext62 = zext i1 %lnot61 to i32
  %conv63 = sext i32 %lnot.ext62 to i64
  %expval64 = call i64 @llvm.expect.i64(i64 %conv63, i64 0)
  %tobool65 = icmp ne i64 %expval64, 0
  br i1 %tobool65, label %if.then66, label %if.end105

if.then66:                                        ; preds = %if.then51
  %52 = load i64, ptr %__pyx_v_dim.addr, align 8, !tbaa !27
  %call = call ptr @PyLong_FromSsize_t(i64 noundef %52)
  store ptr %call, ptr %__pyx_t_3, align 8, !tbaa !5
  %53 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool67 = icmp ne ptr %53, null
  %lnot68 = xor i1 %tobool67, true
  %lnot70 = xor i1 %lnot68, true
  %lnot72 = xor i1 %lnot70, true
  %lnot.ext73 = zext i1 %lnot72 to i32
  %conv74 = sext i32 %lnot.ext73 to i64
  %expval75 = call i64 @llvm.expect.i64(i64 %conv74, i64 0)
  %tobool76 = icmp ne i64 %expval75, 0
  br i1 %tobool76, label %if.then77, label %if.end78

if.then77:                                        ; preds = %if.then66
  %54 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %54, ptr %__pyx_filename, align 8, !tbaa !5
  %55 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 930, ptr %__pyx_lineno, align 4, !tbaa !9
  %56 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 14860, ptr %__pyx_clineno, align 4, !tbaa !9
  %57 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end78:                                         ; preds = %if.then66
  %58 = load ptr, ptr @__pyx_kp_s_Out_of_bounds_on_buffer_access_a, align 8, !tbaa !5
  %59 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call79 = call ptr @PyUnicode_Format(ptr noundef %58, ptr noundef %59)
  store ptr %call79, ptr %__pyx_t_4, align 8, !tbaa !5
  %60 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool80 = icmp ne ptr %60, null
  %lnot81 = xor i1 %tobool80, true
  %lnot83 = xor i1 %lnot81, true
  %lnot85 = xor i1 %lnot83, true
  %lnot.ext86 = zext i1 %lnot85 to i32
  %conv87 = sext i32 %lnot.ext86 to i64
  %expval88 = call i64 @llvm.expect.i64(i64 %conv87, i64 0)
  %tobool89 = icmp ne i64 %expval88, 0
  br i1 %tobool89, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end78
  %61 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %61, ptr %__pyx_filename, align 8, !tbaa !5
  %62 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 930, ptr %__pyx_lineno, align 4, !tbaa !9
  %63 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 14862, ptr %__pyx_clineno, align 4, !tbaa !9
  %64 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end91:                                         ; preds = %if.end78
  %65 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %65)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %66 = load ptr, ptr @__pyx_builtin_IndexError, align 8, !tbaa !5
  %67 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call92 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %66, ptr noundef %67)
  store ptr %call92, ptr %__pyx_t_3, align 8, !tbaa !5
  %68 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool93 = icmp ne ptr %68, null
  %lnot94 = xor i1 %tobool93, true
  %lnot96 = xor i1 %lnot94, true
  %lnot98 = xor i1 %lnot96, true
  %lnot.ext99 = zext i1 %lnot98 to i32
  %conv100 = sext i32 %lnot.ext99 to i64
  %expval101 = call i64 @llvm.expect.i64(i64 %conv100, i64 0)
  %tobool102 = icmp ne i64 %expval101, 0
  br i1 %tobool102, label %if.then103, label %if.end104

if.then103:                                       ; preds = %if.end91
  %69 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %69, ptr %__pyx_filename, align 8, !tbaa !5
  %70 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 930, ptr %__pyx_lineno, align 4, !tbaa !9
  %71 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 14865, ptr %__pyx_clineno, align 4, !tbaa !9
  %72 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end104:                                        ; preds = %if.end91
  %73 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %73)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %74 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %74, ptr noundef null, ptr noundef null, ptr noundef null)
  %75 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %75)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %76 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %76, ptr %__pyx_filename, align 8, !tbaa !5
  %77 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 930, ptr %__pyx_lineno, align 4, !tbaa !9
  %78 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 14870, ptr %__pyx_clineno, align 4, !tbaa !9
  %79 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end105:                                        ; preds = %if.then51
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %__pyx_L3
  %80 = load i64, ptr %__pyx_v_index.addr, align 8, !tbaa !27
  %81 = load i64, ptr %__pyx_v_shape, align 8, !tbaa !27
  %cmp107 = icmp sge i64 %80, %81
  %conv108 = zext i1 %cmp107 to i32
  %cmp109 = icmp ne i32 %conv108, 0
  %conv110 = zext i1 %cmp109 to i32
  store i32 %conv110, ptr %__pyx_t_2, align 4, !tbaa !9
  %82 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool111 = icmp ne i32 %82, 0
  %lnot112 = xor i1 %tobool111, true
  %lnot114 = xor i1 %lnot112, true
  %lnot.ext115 = zext i1 %lnot114 to i32
  %conv116 = sext i32 %lnot.ext115 to i64
  %expval117 = call i64 @llvm.expect.i64(i64 %conv116, i64 0)
  %tobool118 = icmp ne i64 %expval117, 0
  br i1 %tobool118, label %if.then119, label %if.end159

if.then119:                                       ; preds = %if.end106
  %83 = load i64, ptr %__pyx_v_dim.addr, align 8, !tbaa !27
  %call120 = call ptr @PyLong_FromSsize_t(i64 noundef %83)
  store ptr %call120, ptr %__pyx_t_3, align 8, !tbaa !5
  %84 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool121 = icmp ne ptr %84, null
  %lnot122 = xor i1 %tobool121, true
  %lnot124 = xor i1 %lnot122, true
  %lnot126 = xor i1 %lnot124, true
  %lnot.ext127 = zext i1 %lnot126 to i32
  %conv128 = sext i32 %lnot.ext127 to i64
  %expval129 = call i64 @llvm.expect.i64(i64 %conv128, i64 0)
  %tobool130 = icmp ne i64 %expval129, 0
  br i1 %tobool130, label %if.then131, label %if.end132

if.then131:                                       ; preds = %if.then119
  %85 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %85, ptr %__pyx_filename, align 8, !tbaa !5
  %86 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 933, ptr %__pyx_lineno, align 4, !tbaa !9
  %87 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 14907, ptr %__pyx_clineno, align 4, !tbaa !9
  %88 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end132:                                        ; preds = %if.then119
  %89 = load ptr, ptr @__pyx_kp_s_Out_of_bounds_on_buffer_access_a, align 8, !tbaa !5
  %90 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call133 = call ptr @PyUnicode_Format(ptr noundef %89, ptr noundef %90)
  store ptr %call133, ptr %__pyx_t_4, align 8, !tbaa !5
  %91 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool134 = icmp ne ptr %91, null
  %lnot135 = xor i1 %tobool134, true
  %lnot137 = xor i1 %lnot135, true
  %lnot139 = xor i1 %lnot137, true
  %lnot.ext140 = zext i1 %lnot139 to i32
  %conv141 = sext i32 %lnot.ext140 to i64
  %expval142 = call i64 @llvm.expect.i64(i64 %conv141, i64 0)
  %tobool143 = icmp ne i64 %expval142, 0
  br i1 %tobool143, label %if.then144, label %if.end145

if.then144:                                       ; preds = %if.end132
  %92 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %92, ptr %__pyx_filename, align 8, !tbaa !5
  %93 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 933, ptr %__pyx_lineno, align 4, !tbaa !9
  %94 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 14909, ptr %__pyx_clineno, align 4, !tbaa !9
  %95 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end145:                                        ; preds = %if.end132
  %96 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %96)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %97 = load ptr, ptr @__pyx_builtin_IndexError, align 8, !tbaa !5
  %98 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call146 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %97, ptr noundef %98)
  store ptr %call146, ptr %__pyx_t_3, align 8, !tbaa !5
  %99 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool147 = icmp ne ptr %99, null
  %lnot148 = xor i1 %tobool147, true
  %lnot150 = xor i1 %lnot148, true
  %lnot152 = xor i1 %lnot150, true
  %lnot.ext153 = zext i1 %lnot152 to i32
  %conv154 = sext i32 %lnot.ext153 to i64
  %expval155 = call i64 @llvm.expect.i64(i64 %conv154, i64 0)
  %tobool156 = icmp ne i64 %expval155, 0
  br i1 %tobool156, label %if.then157, label %if.end158

if.then157:                                       ; preds = %if.end145
  %100 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %100, ptr %__pyx_filename, align 8, !tbaa !5
  %101 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 933, ptr %__pyx_lineno, align 4, !tbaa !9
  %102 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 14912, ptr %__pyx_clineno, align 4, !tbaa !9
  %103 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end158:                                        ; preds = %if.end145
  %104 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %104)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %105 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %105, ptr noundef null, ptr noundef null, ptr noundef null)
  %106 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %106)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %107 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %107, ptr %__pyx_filename, align 8, !tbaa !5
  %108 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 933, ptr %__pyx_lineno, align 4, !tbaa !9
  %109 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 14917, ptr %__pyx_clineno, align 4, !tbaa !9
  %110 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end159:                                        ; preds = %if.end106
  %111 = load ptr, ptr %__pyx_v_bufp.addr, align 8, !tbaa !5
  %112 = load i64, ptr %__pyx_v_index.addr, align 8, !tbaa !27
  %113 = load i64, ptr %__pyx_v_stride, align 8, !tbaa !27
  %mul = mul i64 %112, %113
  %add.ptr = getelementptr i8, ptr %111, i64 %mul
  store ptr %add.ptr, ptr %__pyx_v_resultp, align 8, !tbaa !5
  %114 = load i64, ptr %__pyx_v_suboffset, align 8, !tbaa !27
  %cmp160 = icmp sge i64 %114, 0
  %conv161 = zext i1 %cmp160 to i32
  %cmp162 = icmp ne i32 %conv161, 0
  %conv163 = zext i1 %cmp162 to i32
  store i32 %conv163, ptr %__pyx_t_2, align 4, !tbaa !9
  %115 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool164 = icmp ne i32 %115, 0
  br i1 %tobool164, label %if.then165, label %if.end168

if.then165:                                       ; preds = %if.end159
  %116 = load ptr, ptr %__pyx_v_resultp, align 8, !tbaa !5
  %arrayidx166 = getelementptr ptr, ptr %116, i64 0
  %117 = load ptr, ptr %arrayidx166, align 8, !tbaa !5
  %118 = load i64, ptr %__pyx_v_suboffset, align 8, !tbaa !27
  %add.ptr167 = getelementptr i8, ptr %117, i64 %118
  store ptr %add.ptr167, ptr %__pyx_v_resultp, align 8, !tbaa !5
  br label %if.end168

if.end168:                                        ; preds = %if.then165, %if.end159
  %119 = load ptr, ptr %__pyx_v_resultp, align 8, !tbaa !5
  store ptr %119, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.end158, %if.then157, %if.then144, %if.then131, %if.end104, %if.then103, %if.then90, %if.then77, %if.then32, %if.then8
  %120 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %120)
  %121 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %121)
  %122 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %123 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %124 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.137, i32 noundef %122, i32 noundef %123, ptr noundef %124)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end168
  %125 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_resultp) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_itemsize) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_suboffset) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_stride) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_shape) #13
  ret ptr %125
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_inner_PyErr_GivenExceptionMatches2(ptr noundef %err, ptr noundef %exc_type1, ptr noundef %exc_type2) #3 {
entry:
  %err.addr = alloca ptr, align 8
  %exc_type1.addr = alloca ptr, align 8
  %exc_type2.addr = alloca ptr, align 8
  %res = alloca i32, align 4
  store ptr %err, ptr %err.addr, align 8, !tbaa !5
  store ptr %exc_type1, ptr %exc_type1.addr, align 8, !tbaa !5
  store ptr %exc_type2, ptr %exc_type2.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %res) #13
  %0 = load ptr, ptr %exc_type1.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load ptr, ptr %err.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %exc_type1.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_IsSubtype(ptr noundef %1, ptr noundef %2)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, ptr %res, align 4, !tbaa !9
  %3 = load i32, ptr %res, align 4, !tbaa !9
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  %4 = load ptr, ptr %err.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %exc_type2.addr, align 8, !tbaa !5
  %call2 = call i32 @__Pyx_IsSubtype(ptr noundef %4, ptr noundef %5)
  store i32 %call2, ptr %res, align 4, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %6 = load i32, ptr %res, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %res) #13
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_PyErr_GivenExceptionMatchesTuple(ptr noundef %exc_type, ptr noundef %tuple) #0 {
entry:
  %retval = alloca i32, align 4
  %exc_type.addr = alloca ptr, align 8
  %tuple.addr = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %t = alloca ptr, align 8
  store ptr %exc_type, ptr %exc_type.addr, align 8, !tbaa !5
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #13
  %0 = load ptr, ptr %tuple.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %0)
  store i64 %call, ptr %n, align 8, !tbaa !27
  store i64 0, ptr %i, align 8, !tbaa !27
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, ptr %i, align 8, !tbaa !27
  %2 = load i64, ptr %n, align 8, !tbaa !27
  %cmp = icmp slt i64 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %exc_type.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %tuple.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %4, i32 0, i32 1
  %5 = load i64, ptr %i, align 8, !tbaa !27
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %5
  %6 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %cmp1 = icmp eq ptr %3, %6
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i64, ptr %i, align 8, !tbaa !27
  %inc = add i64 %7, 1
  store i64 %inc, ptr %i, align 8, !tbaa !27
  br label %for.cond, !llvm.loop !183

for.end:                                          ; preds = %for.cond
  store i64 0, ptr %i, align 8, !tbaa !27
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc18, %for.end
  %8 = load i64, ptr %i, align 8, !tbaa !27
  %9 = load i64, ptr %n, align 8, !tbaa !27
  %cmp3 = icmp slt i64 %8, %9
  br i1 %cmp3, label %for.body4, label %for.end20

for.body4:                                        ; preds = %for.cond2
  call void @llvm.lifetime.start.p0(i64 8, ptr %t) #13
  %10 = load ptr, ptr %tuple.addr, align 8, !tbaa !5
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %10, i32 0, i32 1
  %11 = load i64, ptr %i, align 8, !tbaa !27
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 %11
  %12 = load ptr, ptr %arrayidx6, align 8, !tbaa !5
  store ptr %12, ptr %t, align 8, !tbaa !5
  %13 = load ptr, ptr %t, align 8, !tbaa !5
  %call7 = call i32 @PyType_Check(ptr noundef %13)
  %tobool = icmp ne i32 %call7, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.body4
  %14 = load ptr, ptr %t, align 8, !tbaa !5
  %call8 = call i32 @PyType_HasFeature(ptr noundef %14, i64 noundef 1073741824)
  %tobool9 = icmp ne i32 %call8, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body4
  %15 = phi i1 [ false, %for.body4 ], [ %tobool9, %land.rhs ]
  %lnot = xor i1 %15, true
  %lnot10 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot10 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool11 = icmp ne i64 %expval, 0
  br i1 %tobool11, label %if.then12, label %if.else

if.then12:                                        ; preds = %land.end
  %16 = load ptr, ptr %exc_type.addr, align 8, !tbaa !5
  %17 = load ptr, ptr %t, align 8, !tbaa !5
  %call13 = call i32 @__Pyx_inner_PyErr_GivenExceptionMatches2(ptr noundef %16, ptr noundef null, ptr noundef %17)
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.then12
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end16:                                         ; preds = %if.then12
  br label %if.end17

if.else:                                          ; preds = %land.end
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end16
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.then15
  call void @llvm.lifetime.end.p0(i64 8, ptr %t) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup21 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc18

for.inc18:                                        ; preds = %cleanup.cont
  %18 = load i64, ptr %i, align 8, !tbaa !27
  %inc19 = add i64 %18, 1
  store i64 %inc19, ptr %i, align 8, !tbaa !27
  br label %for.cond2, !llvm.loop !184

for.end20:                                        ; preds = %for.cond2
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup21

cleanup21:                                        ; preds = %for.end20, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #13
  %19 = load i32, ptr %retval, align 4
  ret i32 %19
}

declare void @PyErr_GetExcInfo(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_GetException(ptr noundef %type, ptr noundef %value, ptr noundef %tb) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  %local_type = alloca ptr, align 8
  %local_value = alloca ptr, align 8
  %local_tb = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %type, ptr %type.addr, align 8, !tbaa !5
  store ptr %value, ptr %value.addr, align 8, !tbaa !5
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %local_type) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %local_value) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %local_tb) #13
  call void @PyErr_Fetch(ptr noundef %local_type, ptr noundef %local_value, ptr noundef %local_tb)
  call void @PyErr_NormalizeException(ptr noundef %local_type, ptr noundef %local_value, ptr noundef %local_tb)
  %call = call ptr @PyErr_Occurred()
  %tobool = icmp ne ptr %call, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %bad

if.end:                                           ; preds = %entry
  %0 = load ptr, ptr %local_tb, align 8, !tbaa !5
  %tobool3 = icmp ne ptr %0, null
  br i1 %tobool3, label %if.then4, label %if.end16

if.then4:                                         ; preds = %if.end
  %1 = load ptr, ptr %local_value, align 8, !tbaa !5
  %2 = load ptr, ptr %local_tb, align 8, !tbaa !5
  %call5 = call i32 @PyException_SetTraceback(ptr noundef %1, ptr noundef %2)
  %cmp = icmp slt i32 %call5, 0
  %lnot7 = xor i1 %cmp, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.then4
  br label %bad

if.end15:                                         ; preds = %if.then4
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end
  %3 = load ptr, ptr %local_tb, align 8, !tbaa !5
  call void @Py_XINCREF(ptr noundef %3)
  %4 = load ptr, ptr %local_type, align 8, !tbaa !5
  call void @Py_XINCREF(ptr noundef %4)
  %5 = load ptr, ptr %local_value, align 8, !tbaa !5
  call void @Py_XINCREF(ptr noundef %5)
  %6 = load ptr, ptr %local_type, align 8, !tbaa !5
  %7 = load ptr, ptr %type.addr, align 8, !tbaa !5
  store ptr %6, ptr %7, align 8, !tbaa !5
  %8 = load ptr, ptr %local_value, align 8, !tbaa !5
  %9 = load ptr, ptr %value.addr, align 8, !tbaa !5
  store ptr %8, ptr %9, align 8, !tbaa !5
  %10 = load ptr, ptr %local_tb, align 8, !tbaa !5
  %11 = load ptr, ptr %tb.addr, align 8, !tbaa !5
  store ptr %10, ptr %11, align 8, !tbaa !5
  %12 = load ptr, ptr %local_type, align 8, !tbaa !5
  %13 = load ptr, ptr %local_value, align 8, !tbaa !5
  %14 = load ptr, ptr %local_tb, align 8, !tbaa !5
  call void @PyErr_SetExcInfo(ptr noundef %12, ptr noundef %13, ptr noundef %14)
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

bad:                                              ; preds = %if.then14, %if.then
  %15 = load ptr, ptr %type.addr, align 8, !tbaa !5
  store ptr null, ptr %15, align 8, !tbaa !5
  %16 = load ptr, ptr %value.addr, align 8, !tbaa !5
  store ptr null, ptr %16, align 8, !tbaa !5
  %17 = load ptr, ptr %tb.addr, align 8, !tbaa !5
  store ptr null, ptr %17, align 8, !tbaa !5
  %18 = load ptr, ptr %local_type, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %18)
  %19 = load ptr, ptr %local_value, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %19)
  %20 = load ptr, ptr %local_tb, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %20)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %bad, %if.end16
  call void @llvm.lifetime.end.p0(i64 8, ptr %local_tb) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %local_value) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %local_type) #13
  %21 = load i32, ptr %retval, align 4
  ret i32 %21
}

declare void @PyErr_SetExcInfo(ptr noundef, ptr noundef, ptr noundef) #1

declare void @PyErr_NormalizeException(ptr noundef, ptr noundef, ptr noundef) #1

declare i32 @PyException_SetTraceback(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_TypeTest(ptr noundef %obj, ptr noundef %type) #3 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store ptr %type, ptr %type.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_SystemError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.114)
  store i32 0, ptr %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %2)
  %3 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %call4 = call i32 @__Pyx_IsSubtype(ptr noundef %call, ptr noundef %3)
  %tobool5 = icmp ne i32 %call4, 0
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot.ext9 = zext i1 %lnot8 to i32
  %conv10 = sext i32 %lnot.ext9 to i64
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 1)
  %tobool12 = icmp ne i64 %expval11, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end
  store i32 1, ptr %retval, align 4
  br label %return

if.end14:                                         ; preds = %if.end
  %4 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %5 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call15 = call ptr @Py_TYPE(ptr noundef %5)
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call15, i32 0, i32 1
  %6 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %7 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %tp_name16 = getelementptr inbounds %struct._typeobject, ptr %7, i32 0, i32 1
  %8 = load ptr, ptr %tp_name16, align 8, !tbaa !56
  %call17 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %4, ptr noundef @.str.140, ptr noundef %6, ptr noundef %8)
  store i32 0, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.end14, %if.then13, %if.then
  %9 = load i32, ptr %retval, align 4
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_get_slice_from_memoryview(ptr noundef %__pyx_v_memview, ptr noundef %__pyx_v_mslice) #0 {
entry:
  %__pyx_v_memview.addr = alloca ptr, align 8
  %__pyx_v_mslice.addr = alloca ptr, align 8
  %__pyx_v_obj = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_memview, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  store ptr %__pyx_v_mslice, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_obj) #13
  store ptr null, ptr %__pyx_v_obj, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %1 = load ptr, ptr @__pyx_memoryviewslice_type, align 8, !tbaa !5
  %call1 = call i32 @__Pyx_IsSubtype(ptr noundef %call, ptr noundef %1)
  store i32 %call1, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp = icmp ne i32 %2, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, ptr %__pyx_t_2, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end17

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %cmp2 = icmp eq ptr %4, @_Py_NoneStruct
  br i1 %cmp2, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then
  %5 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %6 = load ptr, ptr @__pyx_memoryviewslice_type, align 8, !tbaa !5
  %call4 = call i32 @__Pyx_TypeTest(ptr noundef %5, ptr noundef %6)
  %tobool5 = icmp ne i32 %call4, 0
  %lnot = xor i1 %tobool5, true
  %lnot6 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot6 to i32
  %conv7 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv7, i64 1)
  %tobool8 = icmp ne i64 %expval, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then
  %7 = phi i1 [ true, %if.then ], [ %tobool8, %lor.rhs ]
  %lnot9 = xor i1 %7, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 1)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %if.end, label %if.then16

if.then16:                                        ; preds = %lor.end
  %8 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %8, ptr %__pyx_filename, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1058, ptr %__pyx_lineno, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15971, ptr %__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %lor.end
  %12 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  store ptr %12, ptr %__pyx_t_3, align 8, !tbaa !5
  %13 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %13)
  %14 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %14, ptr %__pyx_v_obj, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_v_obj, align 8, !tbaa !5
  %from_slice = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %15, i32 0, i32 1
  store ptr %from_slice, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

if.end17:                                         ; preds = %entry
  %16 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  call void @__pyx_memoryview_slice_copy(ptr noundef %16, ptr noundef %17)
  %18 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  store ptr %18, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then16
  %19 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %19)
  %20 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %22 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.141, i32 noundef %20, i32 noundef %21, ptr noundef %22)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end17, %if.end
  %23 = load ptr, ptr %__pyx_v_obj, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %23)
  %24 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_obj) #13
  ret ptr %24
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyInt_As_int(ptr noundef %x) #3 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca ptr, align 8
  %neg_one = alloca i32, align 4
  %const_zero = alloca i32, align 4
  %is_unsigned = alloca i32, align 4
  %digits = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %value = alloca i32, align 4
  %value7 = alloca i32, align 4
  %value10 = alloca i64, align 8
  %zero = alloca i64, align 8
  %value29 = alloca i64, align 8
  %zero48 = alloca i64, align 8
  %value57 = alloca i64, align 8
  %zero71 = alloca i64, align 8
  %val = alloca i32, align 4
  %v = alloca ptr, align 8
  %val90 = alloca i32, align 4
  %tmp = alloca ptr, align 8
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %neg_one) #13
  store i32 -1, ptr %neg_one, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %const_zero) #13
  store i32 0, ptr %const_zero, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_unsigned) #13
  store i32 0, ptr %is_unsigned, align 4, !tbaa !9
  %0 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 16777216)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %digits) #13
  %1 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %ob_digit = getelementptr inbounds %struct._longobject, ptr %1, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], ptr %ob_digit, i64 0, i64 0
  store ptr %arraydecay, ptr %digits, align 8, !tbaa !5
  %2 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call4 = call i64 @Py_SIZE(ptr noundef %2)
  switch i64 %call4, label %sw.epilog [
    i64 0, label %sw.bb
    i64 -1, label %sw.bb5
    i64 1, label %sw.bb6
    i64 -2, label %sw.bb9
    i64 2, label %sw.bb28
    i64 -3, label %sw.bb53
    i64 3, label %sw.bb54
    i64 -4, label %sw.bb55
    i64 4, label %sw.bb56
  ]

sw.bb:                                            ; preds = %if.then
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup89

sw.bb5:                                           ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %value) #13
  %3 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx = getelementptr i32, ptr %3, i64 0
  %4 = load i32, ptr %arrayidx, align 4, !tbaa !9
  %sub = sub i32 0, %4
  store i32 %sub, ptr %value, align 4, !tbaa !9
  %5 = load i32, ptr %value, align 4, !tbaa !9
  store i32 %5, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %value) #13
  br label %cleanup89

sw.bb6:                                           ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %value7) #13
  %6 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx8 = getelementptr i32, ptr %6, i64 0
  %7 = load i32, ptr %arrayidx8, align 4, !tbaa !9
  store i32 %7, ptr %value7, align 4, !tbaa !9
  %8 = load i32, ptr %value7, align 4, !tbaa !9
  store i32 %8, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %value7) #13
  br label %cleanup89

sw.bb9:                                           ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 8, ptr %value10) #13
  %9 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx11 = getelementptr i32, ptr %9, i64 1
  %10 = load i32, ptr %arrayidx11, align 4, !tbaa !9
  %conv12 = zext i32 %10 to i64
  %shl = shl i64 %conv12, 30
  %11 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx13 = getelementptr i32, ptr %11, i64 0
  %12 = load i32, ptr %arrayidx13, align 4, !tbaa !9
  %conv14 = zext i32 %12 to i64
  %or = or i64 %shl, %conv14
  %sub15 = sub i64 0, %or
  store i64 %sub15, ptr %value10, align 8, !tbaa !27
  %13 = load i64, ptr %value10, align 8, !tbaa !27
  %14 = load i64, ptr %value10, align 8, !tbaa !27
  %conv16 = trunc i64 %14 to i32
  %conv17 = sext i32 %conv16 to i64
  %cmp = icmp ne i64 %13, %conv17
  %lnot19 = xor i1 %cmp, true
  %lnot21 = xor i1 %lnot19, true
  %lnot.ext22 = zext i1 %lnot21 to i32
  %conv23 = sext i32 %lnot.ext22 to i64
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0)
  %tobool25 = icmp ne i64 %expval24, 0
  br i1 %tobool25, label %if.then26, label %if.end

if.then26:                                        ; preds = %sw.bb9
  call void @llvm.lifetime.start.p0(i64 8, ptr %zero) #13
  store i64 0, ptr %zero, align 8, !tbaa !27
  store i32 3, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %zero) #13
  br label %cleanup

if.end:                                           ; preds = %sw.bb9
  %15 = load i64, ptr %value10, align 8, !tbaa !27
  %conv27 = trunc i64 %15 to i32
  store i32 %conv27, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then26
  call void @llvm.lifetime.end.p0(i64 8, ptr %value10) #13
  br label %cleanup89

sw.bb28:                                          ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 8, ptr %value29) #13
  %16 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx30 = getelementptr i32, ptr %16, i64 1
  %17 = load i32, ptr %arrayidx30, align 4, !tbaa !9
  %conv31 = zext i32 %17 to i64
  %shl32 = shl i64 %conv31, 30
  %18 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx33 = getelementptr i32, ptr %18, i64 0
  %19 = load i32, ptr %arrayidx33, align 4, !tbaa !9
  %conv34 = zext i32 %19 to i64
  %or35 = or i64 %shl32, %conv34
  store i64 %or35, ptr %value29, align 8, !tbaa !27
  %20 = load i64, ptr %value29, align 8, !tbaa !27
  %21 = load i64, ptr %value29, align 8, !tbaa !27
  %conv36 = trunc i64 %21 to i32
  %conv37 = sext i32 %conv36 to i64
  %cmp38 = icmp ne i64 %20, %conv37
  %lnot40 = xor i1 %cmp38, true
  %lnot42 = xor i1 %lnot40, true
  %lnot.ext43 = zext i1 %lnot42 to i32
  %conv44 = sext i32 %lnot.ext43 to i64
  %expval45 = call i64 @llvm.expect.i64(i64 %conv44, i64 0)
  %tobool46 = icmp ne i64 %expval45, 0
  br i1 %tobool46, label %if.then47, label %if.end50

if.then47:                                        ; preds = %sw.bb28
  call void @llvm.lifetime.start.p0(i64 8, ptr %zero48) #13
  store i64 0, ptr %zero48, align 8, !tbaa !27
  store i32 3, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %zero48) #13
  br label %cleanup52

if.end50:                                         ; preds = %sw.bb28
  %22 = load i64, ptr %value29, align 8, !tbaa !27
  %conv51 = trunc i64 %22 to i32
  store i32 %conv51, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup52

cleanup52:                                        ; preds = %if.end50, %if.then47
  call void @llvm.lifetime.end.p0(i64 8, ptr %value29) #13
  br label %cleanup89

sw.bb53:                                          ; preds = %if.then
  br label %sw.epilog

sw.bb54:                                          ; preds = %if.then
  br label %sw.epilog

sw.bb55:                                          ; preds = %if.then
  br label %sw.epilog

sw.bb56:                                          ; preds = %if.then
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then, %sw.bb56, %sw.bb55, %sw.bb54, %sw.bb53
  call void @llvm.lifetime.start.p0(i64 8, ptr %value57) #13
  %23 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call58 = call i64 @PyLong_AsLong(ptr noundef %23)
  store i64 %call58, ptr %value57, align 8, !tbaa !27
  %24 = load i64, ptr %value57, align 8, !tbaa !27
  %25 = load i64, ptr %value57, align 8, !tbaa !27
  %conv59 = trunc i64 %25 to i32
  %conv60 = sext i32 %conv59 to i64
  %cmp61 = icmp ne i64 %24, %conv60
  %lnot63 = xor i1 %cmp61, true
  %lnot65 = xor i1 %lnot63, true
  %lnot.ext66 = zext i1 %lnot65 to i32
  %conv67 = sext i32 %lnot.ext66 to i64
  %expval68 = call i64 @llvm.expect.i64(i64 %conv67, i64 0)
  %tobool69 = icmp ne i64 %expval68, 0
  br i1 %tobool69, label %if.then70, label %if.end86

if.then70:                                        ; preds = %sw.epilog
  call void @llvm.lifetime.start.p0(i64 8, ptr %zero71) #13
  store i64 0, ptr %zero71, align 8, !tbaa !27
  %26 = load i64, ptr %value57, align 8, !tbaa !27
  %cmp72 = icmp eq i64 %26, -1
  br i1 %cmp72, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then70
  %call74 = call ptr @PyErr_Occurred()
  %tobool75 = icmp ne ptr %call74, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then70
  %27 = phi i1 [ false, %if.then70 ], [ %tobool75, %land.rhs ]
  %lnot76 = xor i1 %27, true
  %lnot78 = xor i1 %lnot76, true
  %lnot.ext79 = zext i1 %lnot78 to i32
  %conv80 = sext i32 %lnot.ext79 to i64
  %expval81 = call i64 @llvm.expect.i64(i64 %conv80, i64 0)
  %tobool82 = icmp ne i64 %expval81, 0
  br i1 %tobool82, label %if.then83, label %if.end84

if.then83:                                        ; preds = %land.end
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup85

if.end84:                                         ; preds = %land.end
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup85

cleanup85:                                        ; preds = %if.end84, %if.then83
  call void @llvm.lifetime.end.p0(i64 8, ptr %zero71) #13
  br label %cleanup88

if.end86:                                         ; preds = %sw.epilog
  %28 = load i64, ptr %value57, align 8, !tbaa !27
  %conv87 = trunc i64 %28 to i32
  store i32 %conv87, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup88

cleanup88:                                        ; preds = %if.end86, %cleanup85
  call void @llvm.lifetime.end.p0(i64 8, ptr %value57) #13
  br label %cleanup89

cleanup89:                                        ; preds = %cleanup88, %cleanup52, %cleanup, %sw.bb6, %sw.bb5, %sw.bb
  call void @llvm.lifetime.end.p0(i64 8, ptr %digits) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup98 [
    i32 3, label %raise_overflow
  ]

if.else:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr %val90) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %29 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call91 = call ptr @__Pyx_PyNumber_IntOrLong(ptr noundef %29)
  store ptr %call91, ptr %tmp, align 8, !tbaa !5
  %30 = load ptr, ptr %tmp, align 8, !tbaa !5
  %tobool92 = icmp ne ptr %30, null
  br i1 %tobool92, label %if.end94, label %if.then93

if.then93:                                        ; preds = %if.else
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup96

if.end94:                                         ; preds = %if.else
  %31 = load ptr, ptr %tmp, align 8, !tbaa !5
  %call95 = call i32 @__Pyx_PyInt_As_int(ptr noundef %31)
  store i32 %call95, ptr %val90, align 4, !tbaa !9
  %32 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %32)
  %33 = load i32, ptr %val90, align 4, !tbaa !9
  store i32 %33, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup96

cleanup96:                                        ; preds = %if.end94, %if.then93
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %val90) #13
  br label %cleanup98

raise_overflow:                                   ; preds = %cleanup89
  %34 = load ptr, ptr @PyExc_OverflowError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %34, ptr noundef @.str.142)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup98

raise_neg_overflow:                               ; No predecessors!
  %35 = load ptr, ptr @PyExc_OverflowError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %35, ptr noundef @.str.143)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup98

cleanup98:                                        ; preds = %raise_neg_overflow, %raise_overflow, %cleanup89, %cleanup96
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_unsigned) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %const_zero) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %neg_one) #13
  %36 = load i32, ptr %retval, align 4
  ret i32 %36
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memoryview_copy_contents(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_src, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_dst, i32 noundef %__pyx_v_src_ndim, i32 noundef %__pyx_v_dst_ndim, i32 noundef %__pyx_v_dtype_is_object) #0 {
entry:
  %__pyx_v_src_ndim.addr = alloca i32, align 4
  %__pyx_v_dst_ndim.addr = alloca i32, align 4
  %__pyx_v_dtype_is_object.addr = alloca i32, align 4
  %__pyx_v_tmpdata = alloca ptr, align 8
  %__pyx_v_itemsize = alloca i64, align 8
  %__pyx_v_i = alloca i32, align 4
  %__pyx_v_order = alloca i8, align 1
  %__pyx_v_broadcasting = alloca i32, align 4
  %__pyx_v_direct_copy = alloca i32, align 4
  %__pyx_v_tmp = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_ndim = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca i64, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_gilstate_save = alloca i32, align 4
  store i32 %__pyx_v_src_ndim, ptr %__pyx_v_src_ndim.addr, align 4, !tbaa !9
  store i32 %__pyx_v_dst_ndim, ptr %__pyx_v_dst_ndim.addr, align 4, !tbaa !9
  store i32 %__pyx_v_dtype_is_object, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_tmpdata) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_itemsize) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 1, ptr %__pyx_v_order) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_broadcasting) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_direct_copy) #13
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_tmp) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_ndim) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  store ptr null, ptr %__pyx_v_tmpdata, align 8, !tbaa !5
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_src, i32 0, i32 0
  %0 = load ptr, ptr %memview, align 8, !tbaa !185
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 8
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 3
  %1 = load i64, ptr %itemsize, align 8, !tbaa !120
  store i64 %1, ptr %__pyx_t_1, align 8, !tbaa !27
  %2 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  store i64 %2, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %3 = load i32, ptr %__pyx_v_src_ndim.addr, align 4, !tbaa !9
  %call = call signext i8 @__pyx_get_best_slice_order(ptr noundef %__pyx_v_src, i32 noundef %3)
  store i8 %call, ptr %__pyx_v_order, align 1, !tbaa !29
  store i32 0, ptr %__pyx_v_broadcasting, align 4, !tbaa !9
  store i32 0, ptr %__pyx_v_direct_copy, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_v_src_ndim.addr, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_v_dst_ndim.addr, align 4, !tbaa !9
  %cmp = icmp slt i32 %4, %5
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_2, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32, ptr %__pyx_v_src_ndim.addr, align 4, !tbaa !9
  %8 = load i32, ptr %__pyx_v_dst_ndim.addr, align 4, !tbaa !9
  call void @__pyx_memoryview_broadcast_leading(ptr noundef %__pyx_v_src, i32 noundef %7, i32 noundef %8)
  br label %__pyx_L3

if.end:                                           ; preds = %entry
  %9 = load i32, ptr %__pyx_v_dst_ndim.addr, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_v_src_ndim.addr, align 4, !tbaa !9
  %cmp3 = icmp slt i32 %9, %10
  %conv4 = zext i1 %cmp3 to i32
  %cmp5 = icmp ne i32 %conv4, 0
  %conv6 = zext i1 %cmp5 to i32
  store i32 %conv6, ptr %__pyx_t_2, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool7 = icmp ne i32 %11, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  %12 = load i32, ptr %__pyx_v_dst_ndim.addr, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_v_src_ndim.addr, align 4, !tbaa !9
  call void @__pyx_memoryview_broadcast_leading(ptr noundef %__pyx_v_dst, i32 noundef %12, i32 noundef %13)
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end9, %if.then
  %14 = load i32, ptr %__pyx_v_dst_ndim.addr, align 4, !tbaa !9
  store i32 %14, ptr %__pyx_t_3, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_v_src_ndim.addr, align 4, !tbaa !9
  store i32 %15, ptr %__pyx_t_4, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp10 = icmp sgt i32 %16, %17
  %conv11 = zext i1 %cmp10 to i32
  %cmp12 = icmp ne i32 %conv11, 0
  br i1 %cmp12, label %if.then14, label %if.else

if.then14:                                        ; preds = %__pyx_L3
  %18 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %18, ptr %__pyx_t_5, align 4, !tbaa !9
  br label %if.end15

if.else:                                          ; preds = %__pyx_L3
  %19 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  store i32 %19, ptr %__pyx_t_5, align 4, !tbaa !9
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then14
  %20 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  store i32 %20, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  store i32 %21, ptr %__pyx_t_5, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  store i32 %22, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_4, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end15
  %23 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp16 = icmp slt i32 %23, %24
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %25 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  store i32 %25, ptr %__pyx_v_i, align 4, !tbaa !9
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_src, i32 0, i32 2
  %26 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom = sext i32 %26 to i64
  %arrayidx = getelementptr [8 x i64], ptr %shape, i64 0, i64 %idxprom
  %27 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %shape18 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_dst, i32 0, i32 2
  %28 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom19 = sext i32 %28 to i64
  %arrayidx20 = getelementptr [8 x i64], ptr %shape18, i64 0, i64 %idxprom19
  %29 = load i64, ptr %arrayidx20, align 8, !tbaa !27
  %cmp21 = icmp ne i64 %27, %29
  %conv22 = zext i1 %cmp21 to i32
  %cmp23 = icmp ne i32 %conv22, 0
  %conv24 = zext i1 %cmp23 to i32
  store i32 %conv24, ptr %__pyx_t_2, align 4, !tbaa !9
  %30 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool25 = icmp ne i32 %30, 0
  br i1 %tobool25, label %if.then26, label %if.end53

if.then26:                                        ; preds = %for.body
  %shape27 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_src, i32 0, i32 2
  %31 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom28 = sext i32 %31 to i64
  %arrayidx29 = getelementptr [8 x i64], ptr %shape27, i64 0, i64 %idxprom28
  %32 = load i64, ptr %arrayidx29, align 8, !tbaa !27
  %cmp30 = icmp eq i64 %32, 1
  %conv31 = zext i1 %cmp30 to i32
  %cmp32 = icmp ne i32 %conv31, 0
  %conv33 = zext i1 %cmp32 to i32
  store i32 %conv33, ptr %__pyx_t_2, align 4, !tbaa !9
  %33 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool34 = icmp ne i32 %33, 0
  br i1 %tobool34, label %if.then35, label %if.end38

if.then35:                                        ; preds = %if.then26
  store i32 1, ptr %__pyx_v_broadcasting, align 4, !tbaa !9
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_src, i32 0, i32 3
  %34 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom36 = sext i32 %34 to i64
  %arrayidx37 = getelementptr [8 x i64], ptr %strides, i64 0, i64 %idxprom36
  store i64 0, ptr %arrayidx37, align 8, !tbaa !27
  br label %__pyx_L7

if.end38:                                         ; preds = %if.then26
  %35 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %shape39 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_dst, i32 0, i32 2
  %36 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom40 = sext i32 %36 to i64
  %arrayidx41 = getelementptr [8 x i64], ptr %shape39, i64 0, i64 %idxprom40
  %37 = load i64, ptr %arrayidx41, align 8, !tbaa !27
  %shape42 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_src, i32 0, i32 2
  %38 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom43 = sext i32 %38 to i64
  %arrayidx44 = getelementptr [8 x i64], ptr %shape42, i64 0, i64 %idxprom43
  %39 = load i64, ptr %arrayidx44, align 8, !tbaa !27
  %call45 = call i32 @__pyx_memoryview_err_extents(i32 noundef %35, i64 noundef %37, i64 noundef %39)
  store i32 %call45, ptr %__pyx_t_6, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_t_6, align 4, !tbaa !9
  %cmp46 = icmp eq i32 %40, -1
  %lnot = xor i1 %cmp46, true
  %lnot48 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot48 to i32
  %conv49 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv49, i64 0)
  %tobool50 = icmp ne i64 %expval, 0
  br i1 %tobool50, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.end38
  %41 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %41, ptr %__pyx_filename, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1299, ptr %__pyx_lineno, align 4, !tbaa !9
  %43 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17820, ptr %__pyx_clineno, align 4, !tbaa !9
  %44 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end52:                                         ; preds = %if.end38
  br label %__pyx_L7

__pyx_L7:                                         ; preds = %if.end52, %if.then35
  br label %if.end53

if.end53:                                         ; preds = %__pyx_L7, %for.body
  %suboffsets = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_src, i32 0, i32 4
  %45 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom54 = sext i32 %45 to i64
  %arrayidx55 = getelementptr [8 x i64], ptr %suboffsets, i64 0, i64 %idxprom54
  %46 = load i64, ptr %arrayidx55, align 8, !tbaa !27
  %cmp56 = icmp sge i64 %46, 0
  %conv57 = zext i1 %cmp56 to i32
  %cmp58 = icmp ne i32 %conv57, 0
  %conv59 = zext i1 %cmp58 to i32
  store i32 %conv59, ptr %__pyx_t_2, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool60 = icmp ne i32 %47, 0
  br i1 %tobool60, label %if.then61, label %if.end74

if.then61:                                        ; preds = %if.end53
  %48 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %49 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %call62 = call i32 @__pyx_memoryview_err_dim(ptr noundef %48, ptr noundef @.str.148, i32 noundef %49)
  store i32 %call62, ptr %__pyx_t_6, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_t_6, align 4, !tbaa !9
  %cmp63 = icmp eq i32 %50, -1
  %lnot65 = xor i1 %cmp63, true
  %lnot67 = xor i1 %lnot65, true
  %lnot.ext68 = zext i1 %lnot67 to i32
  %conv69 = sext i32 %lnot.ext68 to i64
  %expval70 = call i64 @llvm.expect.i64(i64 %conv69, i64 0)
  %tobool71 = icmp ne i64 %expval70, 0
  br i1 %tobool71, label %if.then72, label %if.end73

if.then72:                                        ; preds = %if.then61
  %51 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %51, ptr %__pyx_filename, align 8, !tbaa !5
  %52 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1302, ptr %__pyx_lineno, align 4, !tbaa !9
  %53 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17850, ptr %__pyx_clineno, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end73:                                         ; preds = %if.then61
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.end53
  br label %for.inc

for.inc:                                          ; preds = %if.end74
  %55 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %add = add i32 %55, 1
  store i32 %add, ptr %__pyx_t_4, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !186

for.end:                                          ; preds = %for.cond
  %56 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %57 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %call75 = call i32 @__pyx_slices_overlap(ptr noundef %__pyx_v_src, ptr noundef %__pyx_v_dst, i32 noundef %56, i64 noundef %57)
  %cmp76 = icmp ne i32 %call75, 0
  %conv77 = zext i1 %cmp76 to i32
  store i32 %conv77, ptr %__pyx_t_2, align 4, !tbaa !9
  %58 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool78 = icmp ne i32 %58, 0
  br i1 %tobool78, label %if.then79, label %if.end103

if.then79:                                        ; preds = %for.end
  %59 = load i8, ptr %__pyx_v_order, align 1, !tbaa !29
  %60 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %call80 = call i32 @__pyx_memviewslice_is_contig(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_src, i8 noundef signext %59, i32 noundef %60)
  %cmp81 = icmp ne i32 %call80, 0
  %lnot83 = xor i1 %cmp81, true
  %lnot.ext84 = zext i1 %lnot83 to i32
  %cmp85 = icmp ne i32 %lnot.ext84, 0
  %conv86 = zext i1 %cmp85 to i32
  store i32 %conv86, ptr %__pyx_t_2, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool87 = icmp ne i32 %61, 0
  br i1 %tobool87, label %if.then88, label %if.end90

if.then88:                                        ; preds = %if.then79
  %62 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %call89 = call signext i8 @__pyx_get_best_slice_order(ptr noundef %__pyx_v_dst, i32 noundef %62)
  store i8 %call89, ptr %__pyx_v_order, align 1, !tbaa !29
  br label %if.end90

if.end90:                                         ; preds = %if.then88, %if.then79
  %63 = load i8, ptr %__pyx_v_order, align 1, !tbaa !29
  %64 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %call91 = call ptr @__pyx_memoryview_copy_data_to_temp(ptr noundef %__pyx_v_src, ptr noundef %__pyx_v_tmp, i8 noundef signext %63, i32 noundef %64)
  store ptr %call91, ptr %__pyx_t_7, align 8, !tbaa !5
  %65 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %cmp92 = icmp eq ptr %65, null
  %lnot94 = xor i1 %cmp92, true
  %lnot96 = xor i1 %lnot94, true
  %lnot.ext97 = zext i1 %lnot96 to i32
  %conv98 = sext i32 %lnot.ext97 to i64
  %expval99 = call i64 @llvm.expect.i64(i64 %conv98, i64 0)
  %tobool100 = icmp ne i64 %expval99, 0
  br i1 %tobool100, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.end90
  %66 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %66, ptr %__pyx_filename, align 8, !tbaa !5
  %67 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1309, ptr %__pyx_lineno, align 4, !tbaa !9
  %68 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17907, ptr %__pyx_clineno, align 4, !tbaa !9
  %69 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end102:                                        ; preds = %if.end90
  %70 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  store ptr %70, ptr %__pyx_v_tmpdata, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_src, ptr align 8 %__pyx_v_tmp, i64 208, i1 false), !tbaa.struct !187
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %for.end
  %71 = load i32, ptr %__pyx_v_broadcasting, align 4, !tbaa !9
  %cmp104 = icmp ne i32 %71, 0
  %lnot106 = xor i1 %cmp104, true
  %lnot.ext107 = zext i1 %lnot106 to i32
  %cmp108 = icmp ne i32 %lnot.ext107, 0
  %conv109 = zext i1 %cmp108 to i32
  store i32 %conv109, ptr %__pyx_t_2, align 4, !tbaa !9
  %72 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool110 = icmp ne i32 %72, 0
  br i1 %tobool110, label %if.then111, label %if.end133

if.then111:                                       ; preds = %if.end103
  %73 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %call112 = call i32 @__pyx_memviewslice_is_contig(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_src, i8 noundef signext 67, i32 noundef %73)
  %cmp113 = icmp ne i32 %call112, 0
  %conv114 = zext i1 %cmp113 to i32
  store i32 %conv114, ptr %__pyx_t_2, align 4, !tbaa !9
  %74 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool115 = icmp ne i32 %74, 0
  br i1 %tobool115, label %if.then116, label %if.end118

if.then116:                                       ; preds = %if.then111
  %75 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %call117 = call i32 @__pyx_memviewslice_is_contig(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_dst, i8 noundef signext 67, i32 noundef %75)
  store i32 %call117, ptr %__pyx_v_direct_copy, align 4, !tbaa !9
  br label %__pyx_L12

if.end118:                                        ; preds = %if.then111
  %76 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %call119 = call i32 @__pyx_memviewslice_is_contig(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_src, i8 noundef signext 70, i32 noundef %76)
  %cmp120 = icmp ne i32 %call119, 0
  %conv121 = zext i1 %cmp120 to i32
  store i32 %conv121, ptr %__pyx_t_2, align 4, !tbaa !9
  %77 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool122 = icmp ne i32 %77, 0
  br i1 %tobool122, label %if.then123, label %if.end125

if.then123:                                       ; preds = %if.end118
  %78 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %call124 = call i32 @__pyx_memviewslice_is_contig(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_dst, i8 noundef signext 70, i32 noundef %78)
  store i32 %call124, ptr %__pyx_v_direct_copy, align 4, !tbaa !9
  br label %if.end125

if.end125:                                        ; preds = %if.then123, %if.end118
  br label %__pyx_L12

__pyx_L12:                                        ; preds = %if.end125, %if.then116
  %79 = load i32, ptr %__pyx_v_direct_copy, align 4, !tbaa !9
  %cmp126 = icmp ne i32 %79, 0
  %conv127 = zext i1 %cmp126 to i32
  store i32 %conv127, ptr %__pyx_t_2, align 4, !tbaa !9
  %80 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool128 = icmp ne i32 %80, 0
  br i1 %tobool128, label %if.then129, label %if.end132

if.then129:                                       ; preds = %__pyx_L12
  %81 = load i32, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  %82 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  call void @__pyx_memoryview_refcount_copying(ptr noundef %__pyx_v_dst, i32 noundef %81, i32 noundef %82, i32 noundef 0)
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_dst, i32 0, i32 1
  %83 = load ptr, ptr %data, align 8, !tbaa !188
  %data130 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_src, i32 0, i32 1
  %84 = load ptr, ptr %data130, align 8, !tbaa !188
  %85 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %call131 = call i64 @__pyx_memoryview_slice_get_size(ptr noundef %__pyx_v_src, i32 noundef %85)
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %83, ptr align 1 %84, i64 %call131, i1 false)
  %86 = load i32, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  %87 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  call void @__pyx_memoryview_refcount_copying(ptr noundef %__pyx_v_dst, i32 noundef %86, i32 noundef %87, i32 noundef 1)
  %88 = load ptr, ptr %__pyx_v_tmpdata, align 8, !tbaa !5
  call void @free(ptr noundef %88) #13
  store i32 0, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

if.end132:                                        ; preds = %__pyx_L12
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.end103
  %89 = load i8, ptr %__pyx_v_order, align 1, !tbaa !29
  %conv134 = sext i8 %89 to i32
  %cmp135 = icmp eq i32 %conv134, 70
  %conv136 = zext i1 %cmp135 to i32
  store i32 %conv136, ptr %__pyx_t_2, align 4, !tbaa !9
  %90 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool137 = icmp ne i32 %90, 0
  br i1 %tobool137, label %if.then138, label %if.end143

if.then138:                                       ; preds = %if.end133
  %91 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %call139 = call signext i8 @__pyx_get_best_slice_order(ptr noundef %__pyx_v_dst, i32 noundef %91)
  %conv140 = sext i8 %call139 to i32
  %cmp141 = icmp eq i32 70, %conv140
  %conv142 = zext i1 %cmp141 to i32
  store i32 %conv142, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %if.end143

if.end143:                                        ; preds = %if.then138, %if.end133
  %92 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp144 = icmp ne i32 %92, 0
  %conv145 = zext i1 %cmp144 to i32
  store i32 %conv145, ptr %__pyx_t_8, align 4, !tbaa !9
  %93 = load i32, ptr %__pyx_t_8, align 4, !tbaa !9
  %tobool146 = icmp ne i32 %93, 0
  br i1 %tobool146, label %if.then147, label %if.end172

if.then147:                                       ; preds = %if.end143
  %call148 = call i32 @__pyx_memslice_transpose(ptr noundef %__pyx_v_src)
  store i32 %call148, ptr %__pyx_t_5, align 4, !tbaa !9
  %94 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %cmp149 = icmp eq i32 %94, 0
  %lnot151 = xor i1 %cmp149, true
  %lnot153 = xor i1 %lnot151, true
  %lnot.ext154 = zext i1 %lnot153 to i32
  %conv155 = sext i32 %lnot.ext154 to i64
  %expval156 = call i64 @llvm.expect.i64(i64 %conv155, i64 0)
  %tobool157 = icmp ne i64 %expval156, 0
  br i1 %tobool157, label %if.then158, label %if.end159

if.then158:                                       ; preds = %if.then147
  %95 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %95, ptr %__pyx_filename, align 8, !tbaa !5
  %96 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1331, ptr %__pyx_lineno, align 4, !tbaa !9
  %97 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18091, ptr %__pyx_clineno, align 4, !tbaa !9
  %98 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end159:                                        ; preds = %if.then147
  %call160 = call i32 @__pyx_memslice_transpose(ptr noundef %__pyx_v_dst)
  store i32 %call160, ptr %__pyx_t_5, align 4, !tbaa !9
  %99 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %cmp161 = icmp eq i32 %99, 0
  %lnot163 = xor i1 %cmp161, true
  %lnot165 = xor i1 %lnot163, true
  %lnot.ext166 = zext i1 %lnot165 to i32
  %conv167 = sext i32 %lnot.ext166 to i64
  %expval168 = call i64 @llvm.expect.i64(i64 %conv167, i64 0)
  %tobool169 = icmp ne i64 %expval168, 0
  br i1 %tobool169, label %if.then170, label %if.end171

if.then170:                                       ; preds = %if.end159
  %100 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %100, ptr %__pyx_filename, align 8, !tbaa !5
  %101 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1332, ptr %__pyx_lineno, align 4, !tbaa !9
  %102 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18100, ptr %__pyx_clineno, align 4, !tbaa !9
  %103 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end171:                                        ; preds = %if.end159
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %if.end143
  %104 = load i32, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  %105 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  call void @__pyx_memoryview_refcount_copying(ptr noundef %__pyx_v_dst, i32 noundef %104, i32 noundef %105, i32 noundef 0)
  %106 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %107 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  call void @copy_strided_to_strided(ptr noundef %__pyx_v_src, ptr noundef %__pyx_v_dst, i32 noundef %106, i64 noundef %107)
  %108 = load i32, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  %109 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  call void @__pyx_memoryview_refcount_copying(ptr noundef %__pyx_v_dst, i32 noundef %108, i32 noundef %109, i32 noundef 1)
  %110 = load ptr, ptr %__pyx_v_tmpdata, align 8, !tbaa !5
  call void @free(ptr noundef %110) #13
  store i32 0, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then170, %if.then158, %if.then101, %if.then72, %if.then51
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_gilstate_save) #13
  %call173 = call i32 @PyGILState_Ensure()
  store i32 %call173, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  %111 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %112 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %113 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.149, i32 noundef %111, i32 noundef %112, ptr noundef %113)
  %114 = load i32, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  call void @PyGILState_Release(i32 noundef %114)
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_gilstate_save) #13
  store i32 -1, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end172, %if.then129
  %115 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_ndim) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_tmp) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_direct_copy) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_broadcasting) #13
  call void @llvm.lifetime.end.p0(i64 1, ptr %__pyx_v_order) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_itemsize) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_tmpdata) #13
  ret i32 %115
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_memoryview_slice_copy(ptr noundef %__pyx_v_memview, ptr noundef %__pyx_v_dst) #0 {
entry:
  %__pyx_v_memview.addr = alloca ptr, align 8
  %__pyx_v_dst.addr = alloca ptr, align 8
  %__pyx_v_dim = alloca i32, align 4
  %__pyx_v_shape = alloca ptr, align 8
  %__pyx_v_strides = alloca ptr, align 8
  %__pyx_v_suboffsets = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca i64, align 8
  store ptr %__pyx_v_memview, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  store ptr %__pyx_v_dst, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_dim) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_shape) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_strides) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_suboffsets) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  %0 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 8
  %shape = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 7
  %1 = load ptr, ptr %shape, align 8, !tbaa !189
  store ptr %1, ptr %__pyx_t_1, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %2, ptr %__pyx_v_shape, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %view1 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %3, i32 0, i32 8
  %strides = getelementptr inbounds %struct.Py_buffer, ptr %view1, i32 0, i32 8
  %4 = load ptr, ptr %strides, align 8, !tbaa !190
  store ptr %4, ptr %__pyx_t_1, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %5, ptr %__pyx_v_strides, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %view2 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %6, i32 0, i32 8
  %suboffsets = getelementptr inbounds %struct.Py_buffer, ptr %view2, i32 0, i32 9
  %7 = load ptr, ptr %suboffsets, align 8, !tbaa !122
  store ptr %7, ptr %__pyx_t_1, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %8, ptr %__pyx_v_suboffsets, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %10, i32 0, i32 0
  store ptr %9, ptr %memview, align 8, !tbaa !185
  %11 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %view3 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %11, i32 0, i32 8
  %buf = getelementptr inbounds %struct.Py_buffer, ptr %view3, i32 0, i32 0
  %12 = load ptr, ptr %buf, align 8, !tbaa !112
  %13 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %13, i32 0, i32 1
  store ptr %12, ptr %data, align 8, !tbaa !188
  %14 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %view4 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %14, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view4, i32 0, i32 5
  %15 = load i32, ptr %ndim, align 4, !tbaa !123
  store i32 %15, ptr %__pyx_t_2, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %16, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_4, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %18 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp = icmp slt i32 %17, %18
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %19 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  store i32 %19, ptr %__pyx_v_dim, align 4, !tbaa !9
  %20 = load ptr, ptr %__pyx_v_shape, align 8, !tbaa !5
  %21 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %idxprom = sext i32 %21 to i64
  %arrayidx = getelementptr i64, ptr %20, i64 %idxprom
  %22 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %23 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %shape5 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %23, i32 0, i32 2
  %24 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %idxprom6 = sext i32 %24 to i64
  %arrayidx7 = getelementptr [8 x i64], ptr %shape5, i64 0, i64 %idxprom6
  store i64 %22, ptr %arrayidx7, align 8, !tbaa !27
  %25 = load ptr, ptr %__pyx_v_strides, align 8, !tbaa !5
  %26 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %idxprom8 = sext i32 %26 to i64
  %arrayidx9 = getelementptr i64, ptr %25, i64 %idxprom8
  %27 = load i64, ptr %arrayidx9, align 8, !tbaa !27
  %28 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %strides10 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %28, i32 0, i32 3
  %29 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %idxprom11 = sext i32 %29 to i64
  %arrayidx12 = getelementptr [8 x i64], ptr %strides10, i64 0, i64 %idxprom11
  store i64 %27, ptr %arrayidx12, align 8, !tbaa !27
  %30 = load ptr, ptr %__pyx_v_suboffsets, align 8, !tbaa !5
  %cmp13 = icmp ne ptr %30, null
  br i1 %cmp13, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %31 = load ptr, ptr %__pyx_v_suboffsets, align 8, !tbaa !5
  %32 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %idxprom14 = sext i32 %32 to i64
  %arrayidx15 = getelementptr i64, ptr %31, i64 %idxprom14
  %33 = load i64, ptr %arrayidx15, align 8, !tbaa !27
  store i64 %33, ptr %__pyx_t_5, align 8, !tbaa !27
  br label %if.end

if.else:                                          ; preds = %for.body
  store i64 -1, ptr %__pyx_t_5, align 8, !tbaa !27
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %34 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %35 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %suboffsets16 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %35, i32 0, i32 4
  %36 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %idxprom17 = sext i32 %36 to i64
  %arrayidx18 = getelementptr [8 x i64], ptr %suboffsets16, i64 0, i64 %idxprom17
  store i64 %34, ptr %arrayidx18, align 8, !tbaa !27
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %37 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %add = add i32 %37, 1
  store i32 %add, ptr %__pyx_t_4, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !191

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_suboffsets) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_strides) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_shape) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_dim) #13
  ret void
}

declare i64 @PyLong_AsLong(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyNumber_IntOrLong(ptr noundef %x) #3 {
entry:
  %retval = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  %m = alloca ptr, align 8
  %name = alloca ptr, align 8
  %res = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %m) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %name) #13
  store ptr null, ptr %name, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #13
  store ptr null, ptr %res, align 8, !tbaa !5
  %0 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 16777216)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %x.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %1)
  %2 = load ptr, ptr %x.addr, align 8, !tbaa !5
  store ptr %2, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call4 = call ptr @Py_TYPE(ptr noundef %3)
  %tp_as_number = getelementptr inbounds %struct._typeobject, ptr %call4, i32 0, i32 10
  %4 = load ptr, ptr %tp_as_number, align 8, !tbaa !192
  store ptr %4, ptr %m, align 8, !tbaa !5
  %5 = load ptr, ptr %m, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %5, null
  br i1 %tobool5, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %6 = load ptr, ptr %m, align 8, !tbaa !5
  %nb_int = getelementptr inbounds %struct.PyNumberMethods, ptr %6, i32 0, i32 16
  %7 = load ptr, ptr %nb_int, align 8, !tbaa !193
  %tobool6 = icmp ne ptr %7, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %8 = phi i1 [ false, %if.end ], [ %tobool6, %land.rhs ]
  %lnot7 = xor i1 %8, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 1)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then14, label %if.end17

if.then14:                                        ; preds = %land.end
  store ptr @.str.144, ptr %name, align 8, !tbaa !5
  %9 = load ptr, ptr %m, align 8, !tbaa !5
  %nb_int15 = getelementptr inbounds %struct.PyNumberMethods, ptr %9, i32 0, i32 16
  %10 = load ptr, ptr %nb_int15, align 8, !tbaa !193
  %11 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call16 = call ptr %10(ptr noundef %11)
  store ptr %call16, ptr %res, align 8, !tbaa !5
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %land.end
  %12 = load ptr, ptr %res, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %12, null
  %lnot19 = xor i1 %tobool18, true
  %lnot21 = xor i1 %lnot19, true
  %lnot.ext22 = zext i1 %lnot21 to i32
  %conv23 = sext i32 %lnot.ext22 to i64
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1)
  %tobool25 = icmp ne i64 %expval24, 0
  br i1 %tobool25, label %if.then26, label %if.else

if.then26:                                        ; preds = %if.end17
  %13 = load ptr, ptr %res, align 8, !tbaa !5
  %call27 = call i32 @Py_IS_TYPE(ptr noundef %13, ptr noundef @PyLong_Type)
  %tobool28 = icmp ne i32 %call27, 0
  %lnot29 = xor i1 %tobool28, true
  %lnot31 = xor i1 %lnot29, true
  %lnot33 = xor i1 %lnot31, true
  %lnot.ext34 = zext i1 %lnot33 to i32
  %conv35 = sext i32 %lnot.ext34 to i64
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 0)
  %tobool37 = icmp ne i64 %expval36, 0
  br i1 %tobool37, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.then26
  %14 = load ptr, ptr %res, align 8, !tbaa !5
  %15 = load ptr, ptr %name, align 8, !tbaa !5
  %call39 = call ptr @__Pyx_PyNumber_IntOrLongWrongResultType(ptr noundef %14, ptr noundef %15)
  store ptr %call39, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end40:                                         ; preds = %if.then26
  br label %if.end45

if.else:                                          ; preds = %if.end17
  %call41 = call ptr @PyErr_Occurred()
  %tobool42 = icmp ne ptr %call41, null
  br i1 %tobool42, label %if.end44, label %if.then43

if.then43:                                        ; preds = %if.else
  %16 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %16, ptr noundef @.str.145)
  br label %if.end44

if.end44:                                         ; preds = %if.then43, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end40
  %17 = load ptr, ptr %res, align 8, !tbaa !5
  store ptr %17, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end45, %if.then38, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %name) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %m) #13
  %18 = load ptr, ptr %retval, align 8
  ret ptr %18
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyNumber_IntOrLongWrongResultType(ptr noundef %result, ptr noundef %type_name) #0 {
entry:
  %retval = alloca ptr, align 8
  %result.addr = alloca ptr, align 8
  %type_name.addr = alloca ptr, align 8
  store ptr %result, ptr %result.addr, align 8, !tbaa !5
  store ptr %type_name, ptr %type_name.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %result.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 16777216)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_DeprecationWarning, align 8, !tbaa !5
  %2 = load ptr, ptr %result.addr, align 8, !tbaa !5
  %call2 = call ptr @Py_TYPE(ptr noundef %2)
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call2, i32 0, i32 1
  %3 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %call3 = call i32 (ptr, i64, ptr, ...) @PyErr_WarnFormat(ptr noundef %1, i64 noundef 1, ptr noundef @.str.146, ptr noundef %3)
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then
  %4 = load ptr, ptr %result.addr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %4)
  store ptr null, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then
  %5 = load ptr, ptr %result.addr, align 8, !tbaa !5
  store ptr %5, ptr %retval, align 8
  br label %return

if.end6:                                          ; preds = %entry
  %6 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %7 = load ptr, ptr %type_name.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %type_name.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %result.addr, align 8, !tbaa !5
  %call7 = call ptr @Py_TYPE(ptr noundef %9)
  %tp_name8 = getelementptr inbounds %struct._typeobject, ptr %call7, i32 0, i32 1
  %10 = load ptr, ptr %tp_name8, align 8, !tbaa !56
  %call9 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %6, ptr noundef @.str.147, ptr noundef %7, ptr noundef %8, ptr noundef %10)
  %11 = load ptr, ptr %result.addr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %11)
  store ptr null, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end6, %if.end, %if.then5
  %12 = load ptr, ptr %retval, align 8
  ret ptr %12
}

declare i32 @PyErr_WarnFormat(ptr noundef, i64 noundef, ptr noundef, ...) #1

; Function Attrs: nounwind uwtable
define internal signext i8 @__pyx_get_best_slice_order(ptr noundef %__pyx_v_mslice, i32 noundef %__pyx_v_ndim) #0 {
entry:
  %__pyx_v_mslice.addr = alloca ptr, align 8
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_i = alloca i32, align 4
  %__pyx_v_c_stride = alloca i64, align 8
  %__pyx_v_f_stride = alloca i64, align 8
  %__pyx_r = alloca i8, align 1
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i32, align 4
  store ptr %__pyx_v_mslice, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_c_stride) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_f_stride) #13
  call void @llvm.lifetime.start.p0(i64 1, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  store i64 0, ptr %__pyx_v_c_stride, align 8, !tbaa !27
  store i64 0, ptr %__pyx_v_f_stride, align 8, !tbaa !27
  %0 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %sub = sub i32 %0, 1
  store i32 %sub, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp = icmp sgt i32 %1, -1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %2, ptr %__pyx_v_i, align 4, !tbaa !9
  %3 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %3, i32 0, i32 2
  %4 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr [8 x i64], ptr %shape, i64 0, i64 %idxprom
  %5 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %cmp1 = icmp sgt i64 %5, 1
  %conv = zext i1 %cmp1 to i32
  %cmp2 = icmp ne i32 %conv, 0
  %conv3 = zext i1 %cmp2 to i32
  store i32 %conv3, ptr %__pyx_t_2, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %7 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %7, i32 0, i32 3
  %8 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom4 = sext i32 %8 to i64
  %arrayidx5 = getelementptr [8 x i64], ptr %strides, i64 0, i64 %idxprom4
  %9 = load i64, ptr %arrayidx5, align 8, !tbaa !27
  store i64 %9, ptr %__pyx_v_c_stride, align 8, !tbaa !27
  br label %__pyx_L4_break

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %sub6 = sub i32 %10, 1
  store i32 %sub6, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !195

for.end:                                          ; preds = %for.cond
  br label %__pyx_L4_break

__pyx_L4_break:                                   ; preds = %for.end, %if.then
  %11 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i32 %11, ptr %__pyx_t_1, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %12, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_4, align 4, !tbaa !9
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc24, %__pyx_L4_break
  %13 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp8 = icmp slt i32 %13, %14
  br i1 %cmp8, label %for.body10, label %for.end25

for.body10:                                       ; preds = %for.cond7
  %15 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  store i32 %15, ptr %__pyx_v_i, align 4, !tbaa !9
  %16 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %shape11 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %16, i32 0, i32 2
  %17 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom12 = sext i32 %17 to i64
  %arrayidx13 = getelementptr [8 x i64], ptr %shape11, i64 0, i64 %idxprom12
  %18 = load i64, ptr %arrayidx13, align 8, !tbaa !27
  %cmp14 = icmp sgt i64 %18, 1
  %conv15 = zext i1 %cmp14 to i32
  %cmp16 = icmp ne i32 %conv15, 0
  %conv17 = zext i1 %cmp16 to i32
  store i32 %conv17, ptr %__pyx_t_2, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool18 = icmp ne i32 %19, 0
  br i1 %tobool18, label %if.then19, label %if.end23

if.then19:                                        ; preds = %for.body10
  %20 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %strides20 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %20, i32 0, i32 3
  %21 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom21 = sext i32 %21 to i64
  %arrayidx22 = getelementptr [8 x i64], ptr %strides20, i64 0, i64 %idxprom21
  %22 = load i64, ptr %arrayidx22, align 8, !tbaa !27
  store i64 %22, ptr %__pyx_v_f_stride, align 8, !tbaa !27
  br label %__pyx_L7_break

if.end23:                                         ; preds = %for.body10
  br label %for.inc24

for.inc24:                                        ; preds = %if.end23
  %23 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %add = add i32 %23, 1
  store i32 %add, ptr %__pyx_t_4, align 4, !tbaa !9
  br label %for.cond7, !llvm.loop !196

for.end25:                                        ; preds = %for.cond7
  br label %__pyx_L7_break

__pyx_L7_break:                                   ; preds = %for.end25, %if.then19
  %24 = load i64, ptr %__pyx_v_c_stride, align 8, !tbaa !27
  %call = call i64 @abs_py_ssize_t(i64 noundef %24)
  %25 = load i64, ptr %__pyx_v_f_stride, align 8, !tbaa !27
  %call26 = call i64 @abs_py_ssize_t(i64 noundef %25)
  %cmp27 = icmp sle i64 %call, %call26
  %conv28 = zext i1 %cmp27 to i32
  %cmp29 = icmp ne i32 %conv28, 0
  %conv30 = zext i1 %cmp29 to i32
  store i32 %conv30, ptr %__pyx_t_2, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool31 = icmp ne i32 %26, 0
  br i1 %tobool31, label %if.then32, label %if.end33

if.then32:                                        ; preds = %__pyx_L7_break
  store i8 67, ptr %__pyx_r, align 1, !tbaa !29
  br label %__pyx_L0

if.end33:                                         ; preds = %__pyx_L7_break
  store i8 70, ptr %__pyx_r, align 1, !tbaa !29
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %if.end33, %if.then32
  %27 = load i8, ptr %__pyx_r, align 1, !tbaa !29
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 1, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_f_stride) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_c_stride) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_i) #13
  ret i8 %27
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_memoryview_broadcast_leading(ptr noundef %__pyx_v_mslice, i32 noundef %__pyx_v_ndim, i32 noundef %__pyx_v_ndim_other) #0 {
entry:
  %__pyx_v_mslice.addr = alloca ptr, align 8
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_ndim_other.addr = alloca i32, align 4
  %__pyx_v_i = alloca i32, align 4
  %__pyx_v_offset = alloca i32, align 4
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  store ptr %__pyx_v_mslice, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i32 %__pyx_v_ndim_other, ptr %__pyx_v_ndim_other.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_offset) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  %0 = load i32, ptr %__pyx_v_ndim_other.addr, align 4, !tbaa !9
  %1 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %sub = sub i32 %0, %1
  store i32 %sub, ptr %__pyx_v_offset, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %sub1 = sub i32 %2, 1
  store i32 %sub1, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp = icmp sgt i32 %3, -1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %4, ptr %__pyx_v_i, align 4, !tbaa !9
  %5 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %5, i32 0, i32 2
  %6 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr [8 x i64], ptr %shape, i64 0, i64 %idxprom
  %7 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %8 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %shape2 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %8, i32 0, i32 2
  %9 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_v_offset, align 4, !tbaa !9
  %add = add i32 %9, %10
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr [8 x i64], ptr %shape2, i64 0, i64 %idxprom3
  store i64 %7, ptr %arrayidx4, align 8, !tbaa !27
  %11 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %11, i32 0, i32 3
  %12 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom5 = sext i32 %12 to i64
  %arrayidx6 = getelementptr [8 x i64], ptr %strides, i64 0, i64 %idxprom5
  %13 = load i64, ptr %arrayidx6, align 8, !tbaa !27
  %14 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %strides7 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %14, i32 0, i32 3
  %15 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_v_offset, align 4, !tbaa !9
  %add8 = add i32 %15, %16
  %idxprom9 = sext i32 %add8 to i64
  %arrayidx10 = getelementptr [8 x i64], ptr %strides7, i64 0, i64 %idxprom9
  store i64 %13, ptr %arrayidx10, align 8, !tbaa !27
  %17 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %suboffsets = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %17, i32 0, i32 4
  %18 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom11 = sext i32 %18 to i64
  %arrayidx12 = getelementptr [8 x i64], ptr %suboffsets, i64 0, i64 %idxprom11
  %19 = load i64, ptr %arrayidx12, align 8, !tbaa !27
  %20 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %suboffsets13 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %20, i32 0, i32 4
  %21 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_v_offset, align 4, !tbaa !9
  %add14 = add i32 %21, %22
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr [8 x i64], ptr %suboffsets13, i64 0, i64 %idxprom15
  store i64 %19, ptr %arrayidx16, align 8, !tbaa !27
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %23 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %sub17 = sub i32 %23, 1
  store i32 %sub17, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !197

for.end:                                          ; preds = %for.cond
  %24 = load i32, ptr %__pyx_v_offset, align 4, !tbaa !9
  store i32 %24, ptr %__pyx_t_1, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %25, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc32, %for.end
  %26 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp19 = icmp slt i32 %26, %27
  br i1 %cmp19, label %for.body20, label %for.end34

for.body20:                                       ; preds = %for.cond18
  %28 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %28, ptr %__pyx_v_i, align 4, !tbaa !9
  %29 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %shape21 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %29, i32 0, i32 2
  %30 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom22 = sext i32 %30 to i64
  %arrayidx23 = getelementptr [8 x i64], ptr %shape21, i64 0, i64 %idxprom22
  store i64 1, ptr %arrayidx23, align 8, !tbaa !27
  %31 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %strides24 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %31, i32 0, i32 3
  %arrayidx25 = getelementptr [8 x i64], ptr %strides24, i64 0, i64 0
  %32 = load i64, ptr %arrayidx25, align 8, !tbaa !27
  %33 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %strides26 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %33, i32 0, i32 3
  %34 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom27 = sext i32 %34 to i64
  %arrayidx28 = getelementptr [8 x i64], ptr %strides26, i64 0, i64 %idxprom27
  store i64 %32, ptr %arrayidx28, align 8, !tbaa !27
  %35 = load ptr, ptr %__pyx_v_mslice.addr, align 8, !tbaa !5
  %suboffsets29 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %35, i32 0, i32 4
  %36 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom30 = sext i32 %36 to i64
  %arrayidx31 = getelementptr [8 x i64], ptr %suboffsets29, i64 0, i64 %idxprom30
  store i64 -1, ptr %arrayidx31, align 8, !tbaa !27
  br label %for.inc32

for.inc32:                                        ; preds = %for.body20
  %37 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add33 = add i32 %37, 1
  store i32 %add33, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond18, !llvm.loop !198

for.end34:                                        ; preds = %for.cond18
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_offset) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_i) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memoryview_err_extents(i32 noundef %__pyx_v_i, i64 noundef %__pyx_v_extent1, i64 noundef %__pyx_v_extent2) #0 {
entry:
  %__pyx_v_i.addr = alloca i32, align 4
  %__pyx_v_extent1.addr = alloca i64, align 8
  %__pyx_v_extent2.addr = alloca i64, align 8
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_gilstate_save = alloca i32, align 4
  store i32 %__pyx_v_i, ptr %__pyx_v_i.addr, align 4, !tbaa !9
  store i64 %__pyx_v_extent1, ptr %__pyx_v_extent1.addr, align 8, !tbaa !27
  store i64 %__pyx_v_extent2, ptr %__pyx_v_extent2.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_gilstate_save) #13
  %call = call i32 @PyGILState_Ensure()
  store i32 %call, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  %0 = load i32, ptr %__pyx_v_i.addr, align 4, !tbaa !9
  %call1 = call ptr @__Pyx_PyInt_From_int(i32 noundef %0)
  store ptr %call1, ptr %__pyx_t_1, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1256, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17350, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load i64, ptr %__pyx_v_extent1.addr, align 8, !tbaa !27
  %call5 = call ptr @PyLong_FromSsize_t(i64 noundef %6)
  store ptr %call5, ptr %__pyx_t_2, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool6 = icmp ne ptr %7, null
  %lnot7 = xor i1 %tobool6, true
  %lnot9 = xor i1 %lnot7, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end
  %8 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %8, ptr %__pyx_filename, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1256, ptr %__pyx_lineno, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17352, ptr %__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end17:                                         ; preds = %if.end
  %12 = load i64, ptr %__pyx_v_extent2.addr, align 8, !tbaa !27
  %call18 = call ptr @PyLong_FromSsize_t(i64 noundef %12)
  store ptr %call18, ptr %__pyx_t_3, align 8, !tbaa !5
  %13 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool19 = icmp ne ptr %13, null
  %lnot20 = xor i1 %tobool19, true
  %lnot22 = xor i1 %lnot20, true
  %lnot24 = xor i1 %lnot22, true
  %lnot.ext25 = zext i1 %lnot24 to i32
  %conv26 = sext i32 %lnot.ext25 to i64
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 0)
  %tobool28 = icmp ne i64 %expval27, 0
  br i1 %tobool28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end17
  %14 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %14, ptr %__pyx_filename, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1256, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17354, ptr %__pyx_clineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end30:                                         ; preds = %if.end17
  %call31 = call ptr @PyTuple_New(i64 noundef 3)
  store ptr %call31, ptr %__pyx_t_4, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool32 = icmp ne ptr %18, null
  %lnot33 = xor i1 %tobool32, true
  %lnot35 = xor i1 %lnot33, true
  %lnot37 = xor i1 %lnot35, true
  %lnot.ext38 = zext i1 %lnot37 to i32
  %conv39 = sext i32 %lnot.ext38 to i64
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0)
  %tobool41 = icmp ne i64 %expval40, 0
  br i1 %tobool41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end30
  %19 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %19, ptr %__pyx_filename, align 8, !tbaa !5
  %20 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1256, ptr %__pyx_lineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17356, ptr %__pyx_clineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end43:                                         ; preds = %if.end30
  %23 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %24 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %23, i64 noundef 0, ptr noundef %24)
  %25 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %26 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %25, i64 noundef 1, ptr noundef %26)
  %27 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %27, i64 noundef 2, ptr noundef %28)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %29 = load ptr, ptr @__pyx_kp_s_got_differing_extents_in_dimensi, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call44 = call ptr @PyUnicode_Format(ptr noundef %29, ptr noundef %30)
  store ptr %call44, ptr %__pyx_t_3, align 8, !tbaa !5
  %31 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool45 = icmp ne ptr %31, null
  %lnot46 = xor i1 %tobool45, true
  %lnot48 = xor i1 %lnot46, true
  %lnot50 = xor i1 %lnot48, true
  %lnot.ext51 = zext i1 %lnot50 to i32
  %conv52 = sext i32 %lnot.ext51 to i64
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0)
  %tobool54 = icmp ne i64 %expval53, 0
  br i1 %tobool54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.end43
  %32 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %32, ptr %__pyx_filename, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1255, ptr %__pyx_lineno, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17375, ptr %__pyx_clineno, align 4, !tbaa !9
  %35 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end56:                                         ; preds = %if.end43
  %36 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %36)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %37 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %38 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call57 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %37, ptr noundef %38)
  store ptr %call57, ptr %__pyx_t_4, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool58 = icmp ne ptr %39, null
  %lnot59 = xor i1 %tobool58, true
  %lnot61 = xor i1 %lnot59, true
  %lnot63 = xor i1 %lnot61, true
  %lnot.ext64 = zext i1 %lnot63 to i32
  %conv65 = sext i32 %lnot.ext64 to i64
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 0)
  %tobool67 = icmp ne i64 %expval66, 0
  br i1 %tobool67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %if.end56
  %40 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %40, ptr %__pyx_filename, align 8, !tbaa !5
  %41 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1255, ptr %__pyx_lineno, align 4, !tbaa !9
  %42 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17378, ptr %__pyx_clineno, align 4, !tbaa !9
  %43 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end69:                                         ; preds = %if.end56
  %44 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %44)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %45 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %45, ptr noundef null, ptr noundef null, ptr noundef null)
  %46 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %46)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %47 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %47, ptr %__pyx_filename, align 8, !tbaa !5
  %48 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1255, ptr %__pyx_lineno, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17383, ptr %__pyx_clineno, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

__pyx_L1_error:                                   ; preds = %if.end69, %if.then68, %if.then55, %if.then42, %if.then29, %if.then16, %if.then
  %51 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %51)
  %52 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %52)
  %53 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %53)
  %54 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %54)
  %55 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %56 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %57 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.150, i32 noundef %55, i32 noundef %56, ptr noundef %57)
  store i32 -1, ptr %__pyx_r, align 4, !tbaa !9
  %58 = load i32, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  call void @PyGILState_Release(i32 noundef %58)
  %59 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_gilstate_save) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  ret i32 %59
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memoryview_err_dim(ptr noundef %__pyx_v_error, ptr noundef %__pyx_v_msg, i32 noundef %__pyx_v_dim) #0 {
entry:
  %__pyx_v_error.addr = alloca ptr, align 8
  %__pyx_v_msg.addr = alloca ptr, align 8
  %__pyx_v_dim.addr = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_gilstate_save = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_error, ptr %__pyx_v_error.addr, align 8, !tbaa !5
  store ptr %__pyx_v_msg, ptr %__pyx_v_msg.addr, align 8, !tbaa !5
  store i32 %__pyx_v_dim, ptr %__pyx_v_dim.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_gilstate_save) #13
  %call = call i32 @PyGILState_Ensure()
  store i32 %call, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  %0 = load ptr, ptr %__pyx_v_error.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_msg.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_v_msg.addr, align 8, !tbaa !5
  %call1 = call i64 @strlen(ptr noundef %2) #16
  %call2 = call ptr @__Pyx_decode_c_string(ptr noundef %1, i64 noundef 0, i64 noundef %call1, ptr noundef null, ptr noundef null, ptr noundef @PyUnicode_DecodeASCII)
  store ptr %call2, ptr %__pyx_t_2, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot3 = xor i1 %lnot, true
  %lnot4 = xor i1 %lnot3, true
  %lnot.ext = zext i1 %lnot4 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1260, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17439, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %8 = load i32, ptr %__pyx_v_dim.addr, align 4, !tbaa !9
  %call6 = call ptr @__Pyx_PyInt_From_int(i32 noundef %8)
  store ptr %call6, ptr %__pyx_t_3, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool7 = icmp ne ptr %9, null
  %lnot8 = xor i1 %tobool7, true
  %lnot10 = xor i1 %lnot8, true
  %lnot12 = xor i1 %lnot10, true
  %lnot.ext13 = zext i1 %lnot12 to i32
  %conv14 = sext i32 %lnot.ext13 to i64
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0)
  %tobool16 = icmp ne i64 %expval15, 0
  br i1 %tobool16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %10, ptr %__pyx_filename, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1260, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17441, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end18:                                         ; preds = %if.end
  %14 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call19 = call ptr @PyUnicode_Format(ptr noundef %14, ptr noundef %15)
  store ptr %call19, ptr %__pyx_t_4, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool20 = icmp ne ptr %16, null
  %lnot21 = xor i1 %tobool20, true
  %lnot23 = xor i1 %lnot21, true
  %lnot25 = xor i1 %lnot23, true
  %lnot.ext26 = zext i1 %lnot25 to i32
  %conv27 = sext i32 %lnot.ext26 to i64
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 0)
  %tobool29 = icmp ne i64 %expval28, 0
  br i1 %tobool29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end18
  %17 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %17, ptr %__pyx_filename, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1260, ptr %__pyx_lineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17443, ptr %__pyx_clineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end31:                                         ; preds = %if.end18
  %21 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %21)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %22 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %22)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_v_error.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %23)
  %24 = load ptr, ptr %__pyx_v_error.addr, align 8, !tbaa !5
  store ptr %24, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call32 = call i32 @Py_IS_TYPE(ptr noundef %25, ptr noundef @PyMethod_Type)
  %tobool33 = icmp ne i32 %call32, 0
  %lnot34 = xor i1 %tobool33, true
  %lnot36 = xor i1 %lnot34, true
  %lnot.ext37 = zext i1 %lnot36 to i32
  %conv38 = sext i32 %lnot.ext37 to i64
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0)
  %tobool40 = icmp ne i64 %expval39, 0
  br i1 %tobool40, label %if.then41, label %if.end52

if.then41:                                        ; preds = %if.end31
  %26 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %26, i32 0, i32 2
  %27 = load ptr, ptr %im_self, align 8, !tbaa !125
  store ptr %27, ptr %__pyx_t_2, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool42 = icmp ne ptr %28, null
  %lnot43 = xor i1 %tobool42, true
  %lnot45 = xor i1 %lnot43, true
  %lnot.ext46 = zext i1 %lnot45 to i32
  %conv47 = sext i32 %lnot.ext46 to i64
  %expval48 = call i64 @llvm.expect.i64(i64 %conv47, i64 1)
  %tobool49 = icmp ne i64 %expval48, 0
  br i1 %tobool49, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.then41
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #13
  %29 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %29, i32 0, i32 1
  %30 = load ptr, ptr %im_func, align 8, !tbaa !127
  store ptr %30, ptr %function, align 8, !tbaa !5
  %31 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %31)
  %32 = load ptr, ptr %function, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %32)
  br label %do.body

do.body:                                          ; preds = %if.then50
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %33 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %33, ptr %tmp, align 8, !tbaa !5
  %34 = load ptr, ptr %function, align 8, !tbaa !5
  store ptr %34, ptr %__pyx_t_3, align 8, !tbaa !5
  %35 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %35)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #13
  br label %if.end51

if.end51:                                         ; preds = %do.end, %if.then41
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end31
  %36 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool53 = icmp ne ptr %36, null
  br i1 %tobool53, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end52
  %37 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %38 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call54 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %37, ptr noundef %38, ptr noundef %39)
  br label %cond.end

cond.false:                                       ; preds = %if.end52
  %40 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %41 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call55 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %40, ptr noundef %41)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call54, %cond.true ], [ %call55, %cond.false ]
  store ptr %cond, ptr %__pyx_t_1, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %42)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %43 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %43)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %44 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool56 = icmp ne ptr %44, null
  %lnot57 = xor i1 %tobool56, true
  %lnot59 = xor i1 %lnot57, true
  %lnot61 = xor i1 %lnot59, true
  %lnot.ext62 = zext i1 %lnot61 to i32
  %conv63 = sext i32 %lnot.ext62 to i64
  %expval64 = call i64 @llvm.expect.i64(i64 %conv63, i64 0)
  %tobool65 = icmp ne i64 %expval64, 0
  br i1 %tobool65, label %if.then66, label %if.end67

if.then66:                                        ; preds = %cond.end
  %45 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %45, ptr %__pyx_filename, align 8, !tbaa !5
  %46 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1260, ptr %__pyx_lineno, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17461, ptr %__pyx_clineno, align 4, !tbaa !9
  %48 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end67:                                         ; preds = %cond.end
  %49 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %49)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %50 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %50, ptr noundef null, ptr noundef null, ptr noundef null)
  %51 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %51)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %52 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %52, ptr %__pyx_filename, align 8, !tbaa !5
  %53 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1260, ptr %__pyx_lineno, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17466, ptr %__pyx_clineno, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

__pyx_L1_error:                                   ; preds = %if.end67, %if.then66, %if.then30, %if.then17, %if.then
  %56 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %56)
  %57 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %57)
  %58 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %58)
  %59 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %59)
  %60 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %62 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.151, i32 noundef %60, i32 noundef %61, ptr noundef %62)
  store i32 -1, ptr %__pyx_r, align 4, !tbaa !9
  %63 = load ptr, ptr %__pyx_v_error.addr, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %63)
  %64 = load i32, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  call void @PyGILState_Release(i32 noundef %64)
  %65 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_gilstate_save) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  ret i32 %65
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_slices_overlap(ptr noundef %slice1, ptr noundef %slice2, i32 noundef %ndim, i64 noundef %itemsize) #0 {
entry:
  %slice1.addr = alloca ptr, align 8
  %slice2.addr = alloca ptr, align 8
  %ndim.addr = alloca i32, align 4
  %itemsize.addr = alloca i64, align 8
  %start1 = alloca ptr, align 8
  %end1 = alloca ptr, align 8
  %start2 = alloca ptr, align 8
  %end2 = alloca ptr, align 8
  store ptr %slice1, ptr %slice1.addr, align 8, !tbaa !5
  store ptr %slice2, ptr %slice2.addr, align 8, !tbaa !5
  store i32 %ndim, ptr %ndim.addr, align 4, !tbaa !9
  store i64 %itemsize, ptr %itemsize.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %start1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %end1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %start2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %end2) #13
  %0 = load ptr, ptr %slice1.addr, align 8, !tbaa !5
  %1 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %2 = load i64, ptr %itemsize.addr, align 8, !tbaa !27
  call void @__pyx_get_array_memory_extents(ptr noundef %0, ptr noundef %start1, ptr noundef %end1, i32 noundef %1, i64 noundef %2)
  %3 = load ptr, ptr %slice2.addr, align 8, !tbaa !5
  %4 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %5 = load i64, ptr %itemsize.addr, align 8, !tbaa !27
  call void @__pyx_get_array_memory_extents(ptr noundef %3, ptr noundef %start2, ptr noundef %end2, i32 noundef %4, i64 noundef %5)
  %6 = load ptr, ptr %start1, align 8, !tbaa !5
  %7 = load ptr, ptr %end2, align 8, !tbaa !5
  %cmp = icmp ult ptr %6, %7
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %8 = load ptr, ptr %start2, align 8, !tbaa !5
  %9 = load ptr, ptr %end1, align 8, !tbaa !5
  %cmp1 = icmp ult ptr %8, %9
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %10 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %10 to i32
  call void @llvm.lifetime.end.p0(i64 8, ptr %end2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %start2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %end1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %start1) #13
  ret i32 %land.ext
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memviewslice_is_contig(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %mvs, i8 noundef signext %order, i32 noundef %ndim) #0 {
entry:
  %retval = alloca i32, align 4
  %order.addr = alloca i8, align 1
  %ndim.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %step = alloca i32, align 4
  %start = alloca i32, align 4
  %itemsize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i8 %order, ptr %order.addr, align 1, !tbaa !29
  store i32 %ndim, ptr %ndim.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %index) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %step) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %start) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %itemsize) #13
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %mvs, i32 0, i32 0
  %0 = load ptr, ptr %memview, align 8, !tbaa !185
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 8
  %itemsize1 = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 3
  %1 = load i64, ptr %itemsize1, align 8, !tbaa !120
  store i64 %1, ptr %itemsize, align 8, !tbaa !27
  %2 = load i8, ptr %order.addr, align 1, !tbaa !29
  %conv = sext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 70
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 1, ptr %step, align 4, !tbaa !9
  store i32 0, ptr %start, align 4, !tbaa !9
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 -1, ptr %step, align 4, !tbaa !9
  %3 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %sub = sub i32 %3, 1
  store i32 %sub, ptr %start, align 4, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, ptr %i, align 4, !tbaa !9
  %5 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %cmp3 = icmp slt i32 %4, %5
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, ptr %start, align 4, !tbaa !9
  %7 = load i32, ptr %step, align 4, !tbaa !9
  %8 = load i32, ptr %i, align 4, !tbaa !9
  %mul = mul i32 %7, %8
  %add = add i32 %6, %mul
  store i32 %add, ptr %index, align 4, !tbaa !9
  %suboffsets = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %mvs, i32 0, i32 4
  %9 = load i32, ptr %index, align 4, !tbaa !9
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr [8 x i64], ptr %suboffsets, i64 0, i64 %idxprom
  %10 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %cmp5 = icmp sge i64 %10, 0
  br i1 %cmp5, label %if.then11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %mvs, i32 0, i32 3
  %11 = load i32, ptr %index, align 4, !tbaa !9
  %idxprom7 = sext i32 %11 to i64
  %arrayidx8 = getelementptr [8 x i64], ptr %strides, i64 0, i64 %idxprom7
  %12 = load i64, ptr %arrayidx8, align 8, !tbaa !27
  %13 = load i64, ptr %itemsize, align 8, !tbaa !27
  %cmp9 = icmp ne i64 %12, %13
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; preds = %lor.lhs.false, %for.body
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end12:                                         ; preds = %lor.lhs.false
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %mvs, i32 0, i32 2
  %14 = load i32, ptr %index, align 4, !tbaa !9
  %idxprom13 = sext i32 %14 to i64
  %arrayidx14 = getelementptr [8 x i64], ptr %shape, i64 0, i64 %idxprom13
  %15 = load i64, ptr %arrayidx14, align 8, !tbaa !27
  %16 = load i64, ptr %itemsize, align 8, !tbaa !27
  %mul15 = mul i64 %16, %15
  store i64 %mul15, ptr %itemsize, align 8, !tbaa !27
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %17 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %17, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !199

for.end:                                          ; preds = %for.cond
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then11
  call void @llvm.lifetime.end.p0(i64 8, ptr %itemsize) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %start) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %step) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %index) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  %18 = load i32, ptr %retval, align 4
  ret i32 %18
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_copy_data_to_temp(ptr noundef %__pyx_v_src, ptr noundef %__pyx_v_tmpslice, i8 noundef signext %__pyx_v_order, i32 noundef %__pyx_v_ndim) #0 {
entry:
  %__pyx_v_src.addr = alloca ptr, align 8
  %__pyx_v_tmpslice.addr = alloca ptr, align 8
  %__pyx_v_order.addr = alloca i8, align 1
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_i = alloca i32, align 4
  %__pyx_v_result = alloca ptr, align 8
  %__pyx_v_itemsize = alloca i64, align 8
  %__pyx_v_size = alloca i64, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i64, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_gilstate_save = alloca i32, align 4
  store ptr %__pyx_v_src, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  store ptr %__pyx_v_tmpslice, ptr %__pyx_v_tmpslice.addr, align 8, !tbaa !5
  store i8 %__pyx_v_order, ptr %__pyx_v_order.addr, align 1, !tbaa !29
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_result) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_itemsize) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_size) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %memview, align 8, !tbaa !185
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %1, i32 0, i32 8
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 3
  %2 = load i64, ptr %itemsize, align 8, !tbaa !120
  store i64 %2, ptr %__pyx_t_1, align 8, !tbaa !27
  %3 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  store i64 %3, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %4 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %5 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %call = call i64 @__pyx_memoryview_slice_get_size(ptr noundef %4, i32 noundef %5)
  store i64 %call, ptr %__pyx_v_size, align 8, !tbaa !27
  %6 = load i64, ptr %__pyx_v_size, align 8, !tbaa !27
  %call1 = call noalias ptr @malloc(i64 noundef %6) #17
  store ptr %call1, ptr %__pyx_v_result, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %cmp = icmp ne ptr %7, null
  %lnot = xor i1 %cmp, true
  %lnot.ext = zext i1 %lnot to i32
  %cmp2 = icmp ne i32 %lnot.ext, 0
  %conv = zext i1 %cmp2 to i32
  store i32 %conv, ptr %__pyx_t_2, align 4, !tbaa !9
  %8 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool = icmp ne i32 %8, 0
  br i1 %tobool, label %if.then, label %if.end13

if.then:                                          ; preds = %entry
  %9 = load ptr, ptr @__pyx_builtin_MemoryError, align 8, !tbaa !5
  %call3 = call i32 @__pyx_memoryview_err(ptr noundef %9, ptr noundef null)
  store i32 %call3, ptr %__pyx_t_3, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp4 = icmp eq i32 %10, -1
  %lnot6 = xor i1 %cmp4, true
  %lnot8 = xor i1 %lnot6, true
  %lnot.ext9 = zext i1 %lnot8 to i32
  %conv10 = sext i32 %lnot.ext9 to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv10, i64 0)
  %tobool11 = icmp ne i64 %expval, 0
  br i1 %tobool11, label %if.then12, label %if.end

if.then12:                                        ; preds = %if.then
  %11 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %11, ptr %__pyx_filename, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1226, ptr %__pyx_lineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17134, ptr %__pyx_clineno, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %if.then
  br label %if.end13

if.end13:                                         ; preds = %if.end, %entry
  %15 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_v_tmpslice.addr, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %16, i32 0, i32 1
  store ptr %15, ptr %data, align 8, !tbaa !188
  %17 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %memview14 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %17, i32 0, i32 0
  %18 = load ptr, ptr %memview14, align 8, !tbaa !185
  store ptr %18, ptr %__pyx_t_4, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %20 = load ptr, ptr %__pyx_v_tmpslice.addr, align 8, !tbaa !5
  %memview15 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %20, i32 0, i32 0
  store ptr %19, ptr %memview15, align 8, !tbaa !185
  %21 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i32 %21, ptr %__pyx_t_3, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %22, ptr %__pyx_t_5, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_6, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end13
  %23 = load i32, ptr %__pyx_t_6, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %cmp16 = icmp slt i32 %23, %24
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %25 = load i32, ptr %__pyx_t_6, align 4, !tbaa !9
  store i32 %25, ptr %__pyx_v_i, align 4, !tbaa !9
  %26 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %26, i32 0, i32 2
  %27 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom = sext i32 %27 to i64
  %arrayidx = getelementptr [8 x i64], ptr %shape, i64 0, i64 %idxprom
  %28 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %29 = load ptr, ptr %__pyx_v_tmpslice.addr, align 8, !tbaa !5
  %shape18 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %29, i32 0, i32 2
  %30 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom19 = sext i32 %30 to i64
  %arrayidx20 = getelementptr [8 x i64], ptr %shape18, i64 0, i64 %idxprom19
  store i64 %28, ptr %arrayidx20, align 8, !tbaa !27
  %31 = load ptr, ptr %__pyx_v_tmpslice.addr, align 8, !tbaa !5
  %suboffsets = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %31, i32 0, i32 4
  %32 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom21 = sext i32 %32 to i64
  %arrayidx22 = getelementptr [8 x i64], ptr %suboffsets, i64 0, i64 %idxprom21
  store i64 -1, ptr %arrayidx22, align 8, !tbaa !27
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %33 = load i32, ptr %__pyx_t_6, align 4, !tbaa !9
  %add = add i32 %33, 1
  store i32 %add, ptr %__pyx_t_6, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !200

for.end:                                          ; preds = %for.cond
  %34 = load ptr, ptr %__pyx_v_tmpslice.addr, align 8, !tbaa !5
  %shape23 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %34, i32 0, i32 2
  %arrayidx24 = getelementptr [8 x i64], ptr %shape23, i64 0, i64 0
  %35 = load ptr, ptr %__pyx_v_tmpslice.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %35, i32 0, i32 3
  %arrayidx25 = getelementptr [8 x i64], ptr %strides, i64 0, i64 0
  %36 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %37 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %38 = load i8, ptr %__pyx_v_order.addr, align 1, !tbaa !29
  %call26 = call i64 @__pyx_fill_contig_strides_array(ptr noundef %arrayidx24, ptr noundef %arrayidx25, i64 noundef %36, i32 noundef %37, i8 noundef signext %38)
  %39 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i32 %39, ptr %__pyx_t_3, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %40, ptr %__pyx_t_5, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_6, align 4, !tbaa !9
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc44, %for.end
  %41 = load i32, ptr %__pyx_t_6, align 4, !tbaa !9
  %42 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %cmp28 = icmp slt i32 %41, %42
  br i1 %cmp28, label %for.body30, label %for.end46

for.body30:                                       ; preds = %for.cond27
  %43 = load i32, ptr %__pyx_t_6, align 4, !tbaa !9
  store i32 %43, ptr %__pyx_v_i, align 4, !tbaa !9
  %44 = load ptr, ptr %__pyx_v_tmpslice.addr, align 8, !tbaa !5
  %shape31 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %44, i32 0, i32 2
  %45 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom32 = sext i32 %45 to i64
  %arrayidx33 = getelementptr [8 x i64], ptr %shape31, i64 0, i64 %idxprom32
  %46 = load i64, ptr %arrayidx33, align 8, !tbaa !27
  %cmp34 = icmp eq i64 %46, 1
  %conv35 = zext i1 %cmp34 to i32
  %cmp36 = icmp ne i32 %conv35, 0
  %conv37 = zext i1 %cmp36 to i32
  store i32 %conv37, ptr %__pyx_t_2, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool38 = icmp ne i32 %47, 0
  br i1 %tobool38, label %if.then39, label %if.end43

if.then39:                                        ; preds = %for.body30
  %48 = load ptr, ptr %__pyx_v_tmpslice.addr, align 8, !tbaa !5
  %strides40 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %48, i32 0, i32 3
  %49 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom41 = sext i32 %49 to i64
  %arrayidx42 = getelementptr [8 x i64], ptr %strides40, i64 0, i64 %idxprom41
  store i64 0, ptr %arrayidx42, align 8, !tbaa !27
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %for.body30
  br label %for.inc44

for.inc44:                                        ; preds = %if.end43
  %50 = load i32, ptr %__pyx_t_6, align 4, !tbaa !9
  %add45 = add i32 %50, 1
  store i32 %add45, ptr %__pyx_t_6, align 4, !tbaa !9
  br label %for.cond27, !llvm.loop !201

for.end46:                                        ; preds = %for.cond27
  %51 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %arrayidx47 = getelementptr %struct.__Pyx_memviewslice, ptr %51, i64 0
  %52 = load i8, ptr %__pyx_v_order.addr, align 1, !tbaa !29
  %53 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %call48 = call i32 @__pyx_memviewslice_is_contig(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %arrayidx47, i8 noundef signext %52, i32 noundef %53)
  %cmp49 = icmp ne i32 %call48, 0
  %conv50 = zext i1 %cmp49 to i32
  store i32 %conv50, ptr %__pyx_t_2, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool51 = icmp ne i32 %54, 0
  br i1 %tobool51, label %if.then52, label %if.end54

if.then52:                                        ; preds = %for.end46
  %55 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %56 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %data53 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %56, i32 0, i32 1
  %57 = load ptr, ptr %data53, align 8, !tbaa !188
  %58 = load i64, ptr %__pyx_v_size, align 8, !tbaa !27
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %55, ptr align 1 %57, i64 %58, i1 false)
  br label %__pyx_L9

if.end54:                                         ; preds = %for.end46
  %59 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %60 = load ptr, ptr %__pyx_v_tmpslice.addr, align 8, !tbaa !5
  %61 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %62 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  call void @copy_strided_to_strided(ptr noundef %59, ptr noundef %60, i32 noundef %61, i64 noundef %62)
  br label %__pyx_L9

__pyx_L9:                                         ; preds = %if.end54, %if.then52
  %63 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr %63, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then12
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_gilstate_save) #13
  %call55 = call i32 @PyGILState_Ensure()
  store i32 %call55, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  %64 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %65 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %66 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.153, i32 noundef %64, i32 noundef %65, ptr noundef %66)
  %67 = load i32, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  call void @PyGILState_Release(i32 noundef %67)
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_gilstate_save) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %__pyx_L9
  %68 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_size) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_itemsize) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_result) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_i) #13
  ret ptr %68
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_memoryview_refcount_copying(ptr noundef %__pyx_v_dst, i32 noundef %__pyx_v_dtype_is_object, i32 noundef %__pyx_v_ndim, i32 noundef %__pyx_v_inc) #0 {
entry:
  %__pyx_v_dst.addr = alloca ptr, align 8
  %__pyx_v_dtype_is_object.addr = alloca i32, align 4
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_inc.addr = alloca i32, align 4
  %__pyx_t_1 = alloca i32, align 4
  store ptr %__pyx_v_dst, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  store i32 %__pyx_v_dtype_is_object, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i32 %__pyx_v_inc, ptr %__pyx_v_inc.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  %0 = load i32, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  %cmp = icmp ne i32 %0, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, ptr %__pyx_t_1, align 4, !tbaa !9
  %1 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %2, i32 0, i32 1
  %3 = load ptr, ptr %data, align 8, !tbaa !188
  %4 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %4, i32 0, i32 2
  %arraydecay = getelementptr inbounds [8 x i64], ptr %shape, i64 0, i64 0
  %5 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %5, i32 0, i32 3
  %arraydecay1 = getelementptr inbounds [8 x i64], ptr %strides, i64 0, i64 0
  %6 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_v_inc.addr, align 4, !tbaa !9
  call void @__pyx_memoryview_refcount_objects_in_slice_with_gil(ptr noundef %3, ptr noundef %arraydecay, ptr noundef %arraydecay1, i32 noundef %6, i32 noundef %7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal i64 @__pyx_memoryview_slice_get_size(ptr noundef %__pyx_v_src, i32 noundef %__pyx_v_ndim) #0 {
entry:
  %__pyx_v_src.addr = alloca ptr, align 8
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_shape = alloca i64, align 8
  %__pyx_v_size = alloca i64, align 8
  %__pyx_r = alloca i64, align 8
  %__pyx_t_1 = alloca i64, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  store ptr %__pyx_v_src, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_shape) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_size) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  %0 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %memview, align 8, !tbaa !185
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %1, i32 0, i32 8
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 3
  %2 = load i64, ptr %itemsize, align 8, !tbaa !120
  store i64 %2, ptr %__pyx_t_1, align 8, !tbaa !27
  %3 = load i64, ptr %__pyx_t_1, align 8, !tbaa !27
  store i64 %3, ptr %__pyx_v_size, align 8, !tbaa !27
  %4 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %4, i32 0, i32 2
  %arraydecay = getelementptr inbounds [8 x i64], ptr %shape, i64 0, i64 0
  %5 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %idx.ext = sext i32 %5 to i64
  %add.ptr = getelementptr i64, ptr %arraydecay, i64 %idx.ext
  store ptr %add.ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %shape1 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %6, i32 0, i32 2
  %arraydecay2 = getelementptr inbounds [8 x i64], ptr %shape1, i64 0, i64 0
  store ptr %arraydecay2, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %cmp = icmp ult ptr %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %9, ptr %__pyx_t_2, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %arrayidx = getelementptr i64, ptr %10, i64 0
  %11 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %11, ptr %__pyx_v_shape, align 8, !tbaa !27
  %12 = load i64, ptr %__pyx_v_size, align 8, !tbaa !27
  %13 = load i64, ptr %__pyx_v_shape, align 8, !tbaa !27
  %mul = mul i64 %12, %13
  store i64 %mul, ptr %__pyx_v_size, align 8, !tbaa !27
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %incdec.ptr = getelementptr i64, ptr %14, i32 1
  store ptr %incdec.ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %for.cond, !llvm.loop !202

for.end:                                          ; preds = %for.cond
  %15 = load i64, ptr %__pyx_v_size, align 8, !tbaa !27
  store i64 %15, ptr %__pyx_r, align 8, !tbaa !27
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %for.end
  %16 = load i64, ptr %__pyx_r, align 8, !tbaa !27
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_size) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_shape) #13
  ret i64 %16
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memslice_transpose(ptr noundef %__pyx_v_memslice) #0 {
entry:
  %__pyx_v_memslice.addr = alloca ptr, align 8
  %__pyx_v_ndim = alloca i32, align 4
  %__pyx_v_shape = alloca ptr, align 8
  %__pyx_v_strides = alloca ptr, align 8
  %__pyx_v_i = alloca i32, align 4
  %__pyx_v_j = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca i64, align 8
  %__pyx_t_4 = alloca i64, align 8
  %__pyx_t_5 = alloca i64, align 8
  %__pyx_t_6 = alloca i64, align 8
  %__pyx_t_7 = alloca i32, align 4
  %__pyx_t_8 = alloca i32, align 4
  %__pyx_t_9 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_gilstate_save = alloca i32, align 4
  store ptr %__pyx_v_memslice, ptr %__pyx_v_memslice.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_ndim) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_shape) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_strides) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_j) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_memslice.addr, align 8, !tbaa !5
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %memview, align 8, !tbaa !185
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %1, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 5
  %2 = load i32, ptr %ndim, align 4, !tbaa !123
  store i32 %2, ptr %__pyx_t_1, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %3, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %4 = load ptr, ptr %__pyx_v_memslice.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %4, i32 0, i32 2
  %arraydecay = getelementptr inbounds [8 x i64], ptr %shape, i64 0, i64 0
  store ptr %arraydecay, ptr %__pyx_t_2, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %5, ptr %__pyx_v_shape, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_v_memslice.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %6, i32 0, i32 3
  %arraydecay1 = getelementptr inbounds [8 x i64], ptr %strides, i64 0, i64 0
  store ptr %arraydecay1, ptr %__pyx_t_2, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %7, ptr %__pyx_v_strides, align 8, !tbaa !5
  %8 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %div = sdiv i32 %8, 2
  %conv = sext i32 %div to i64
  store i64 %conv, ptr %__pyx_t_3, align 8, !tbaa !27
  %9 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  store i64 %9, ptr %__pyx_t_4, align 8, !tbaa !27
  store i32 0, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %conv2 = sext i32 %10 to i64
  %11 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %cmp = icmp slt i64 %conv2, %11
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %12, ptr %__pyx_v_i, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_v_ndim, align 4, !tbaa !9
  %sub = sub i32 %13, 1
  %14 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %sub4 = sub i32 %sub, %14
  store i32 %sub4, ptr %__pyx_v_j, align 4, !tbaa !9
  %15 = load ptr, ptr %__pyx_v_strides, align 8, !tbaa !5
  %16 = load i32, ptr %__pyx_v_j, align 4, !tbaa !9
  %idxprom = sext i32 %16 to i64
  %arrayidx = getelementptr i64, ptr %15, i64 %idxprom
  %17 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %17, ptr %__pyx_t_5, align 8, !tbaa !27
  %18 = load ptr, ptr %__pyx_v_strides, align 8, !tbaa !5
  %19 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom5 = sext i32 %19 to i64
  %arrayidx6 = getelementptr i64, ptr %18, i64 %idxprom5
  %20 = load i64, ptr %arrayidx6, align 8, !tbaa !27
  store i64 %20, ptr %__pyx_t_6, align 8, !tbaa !27
  %21 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %22 = load ptr, ptr %__pyx_v_strides, align 8, !tbaa !5
  %23 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom7 = sext i32 %23 to i64
  %arrayidx8 = getelementptr i64, ptr %22, i64 %idxprom7
  store i64 %21, ptr %arrayidx8, align 8, !tbaa !27
  %24 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %25 = load ptr, ptr %__pyx_v_strides, align 8, !tbaa !5
  %26 = load i32, ptr %__pyx_v_j, align 4, !tbaa !9
  %idxprom9 = sext i32 %26 to i64
  %arrayidx10 = getelementptr i64, ptr %25, i64 %idxprom9
  store i64 %24, ptr %arrayidx10, align 8, !tbaa !27
  %27 = load ptr, ptr %__pyx_v_shape, align 8, !tbaa !5
  %28 = load i32, ptr %__pyx_v_j, align 4, !tbaa !9
  %idxprom11 = sext i32 %28 to i64
  %arrayidx12 = getelementptr i64, ptr %27, i64 %idxprom11
  %29 = load i64, ptr %arrayidx12, align 8, !tbaa !27
  store i64 %29, ptr %__pyx_t_6, align 8, !tbaa !27
  %30 = load ptr, ptr %__pyx_v_shape, align 8, !tbaa !5
  %31 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom13 = sext i32 %31 to i64
  %arrayidx14 = getelementptr i64, ptr %30, i64 %idxprom13
  %32 = load i64, ptr %arrayidx14, align 8, !tbaa !27
  store i64 %32, ptr %__pyx_t_5, align 8, !tbaa !27
  %33 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %34 = load ptr, ptr %__pyx_v_shape, align 8, !tbaa !5
  %35 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom15 = sext i32 %35 to i64
  %arrayidx16 = getelementptr i64, ptr %34, i64 %idxprom15
  store i64 %33, ptr %arrayidx16, align 8, !tbaa !27
  %36 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %37 = load ptr, ptr %__pyx_v_shape, align 8, !tbaa !5
  %38 = load i32, ptr %__pyx_v_j, align 4, !tbaa !9
  %idxprom17 = sext i32 %38 to i64
  %arrayidx18 = getelementptr i64, ptr %37, i64 %idxprom17
  store i64 %36, ptr %arrayidx18, align 8, !tbaa !27
  %39 = load ptr, ptr %__pyx_v_memslice.addr, align 8, !tbaa !5
  %suboffsets = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %39, i32 0, i32 4
  %40 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom19 = sext i32 %40 to i64
  %arrayidx20 = getelementptr [8 x i64], ptr %suboffsets, i64 0, i64 %idxprom19
  %41 = load i64, ptr %arrayidx20, align 8, !tbaa !27
  %cmp21 = icmp sge i64 %41, 0
  %conv22 = zext i1 %cmp21 to i32
  %cmp23 = icmp ne i32 %conv22, 0
  %conv24 = zext i1 %cmp23 to i32
  store i32 %conv24, ptr %__pyx_t_8, align 4, !tbaa !9
  %42 = load i32, ptr %__pyx_t_8, align 4, !tbaa !9
  %tobool = icmp ne i32 %42, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  br label %if.end

if.else:                                          ; preds = %for.body
  %43 = load i32, ptr %__pyx_t_8, align 4, !tbaa !9
  store i32 %43, ptr %__pyx_t_7, align 4, !tbaa !9
  br label %__pyx_L6_bool_binop_done

if.end:                                           ; preds = %if.then
  %44 = load ptr, ptr %__pyx_v_memslice.addr, align 8, !tbaa !5
  %suboffsets25 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %44, i32 0, i32 4
  %45 = load i32, ptr %__pyx_v_j, align 4, !tbaa !9
  %idxprom26 = sext i32 %45 to i64
  %arrayidx27 = getelementptr [8 x i64], ptr %suboffsets25, i64 0, i64 %idxprom26
  %46 = load i64, ptr %arrayidx27, align 8, !tbaa !27
  %cmp28 = icmp sge i64 %46, 0
  %conv29 = zext i1 %cmp28 to i32
  %cmp30 = icmp ne i32 %conv29, 0
  %conv31 = zext i1 %cmp30 to i32
  store i32 %conv31, ptr %__pyx_t_8, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_t_8, align 4, !tbaa !9
  store i32 %47, ptr %__pyx_t_7, align 4, !tbaa !9
  br label %__pyx_L6_bool_binop_done

__pyx_L6_bool_binop_done:                         ; preds = %if.end, %if.else
  %48 = load i32, ptr %__pyx_t_7, align 4, !tbaa !9
  %tobool32 = icmp ne i32 %48, 0
  br i1 %tobool32, label %if.then33, label %if.end41

if.then33:                                        ; preds = %__pyx_L6_bool_binop_done
  %49 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %call = call i32 @__pyx_memoryview_err(ptr noundef %49, ptr noundef @.str.155)
  store i32 %call, ptr %__pyx_t_9, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_t_9, align 4, !tbaa !9
  %cmp34 = icmp eq i32 %50, -1
  %lnot = xor i1 %cmp34, true
  %lnot36 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot36 to i32
  %conv37 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv37, i64 0)
  %tobool38 = icmp ne i64 %expval, 0
  br i1 %tobool38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.then33
  %51 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %51, ptr %__pyx_filename, align 8, !tbaa !5
  %52 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 959, ptr %__pyx_lineno, align 4, !tbaa !9
  %53 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15122, ptr %__pyx_clineno, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end40:                                         ; preds = %if.then33
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %__pyx_L6_bool_binop_done
  br label %for.inc

for.inc:                                          ; preds = %if.end41
  %55 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %add = add i32 %55, 1
  store i32 %add, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !203

for.end:                                          ; preds = %for.cond
  store i32 1, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then39
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_gilstate_save) #13
  %call42 = call i32 @PyGILState_Ensure()
  store i32 %call42, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  %56 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %57 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %58 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.156, i32 noundef %56, i32 noundef %57, ptr noundef %58)
  %59 = load i32, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  call void @PyGILState_Release(i32 noundef %59)
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_gilstate_save) #13
  store i32 0, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %for.end
  %60 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_j) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_strides) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_shape) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_ndim) #13
  ret i32 %60
}

; Function Attrs: nounwind uwtable
define internal void @copy_strided_to_strided(ptr noundef %__pyx_v_src, ptr noundef %__pyx_v_dst, i32 noundef %__pyx_v_ndim, i64 noundef %__pyx_v_itemsize) #0 {
entry:
  %__pyx_v_src.addr = alloca ptr, align 8
  %__pyx_v_dst.addr = alloca ptr, align 8
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_itemsize.addr = alloca i64, align 8
  store ptr %__pyx_v_src, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  store ptr %__pyx_v_dst, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i64 %__pyx_v_itemsize, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %0 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %0, i32 0, i32 1
  %1 = load ptr, ptr %data, align 8, !tbaa !188
  %2 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %2, i32 0, i32 3
  %arraydecay = getelementptr inbounds [8 x i64], ptr %strides, i64 0, i64 0
  %3 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %data1 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %3, i32 0, i32 1
  %4 = load ptr, ptr %data1, align 8, !tbaa !188
  %5 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %strides2 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %5, i32 0, i32 3
  %arraydecay3 = getelementptr inbounds [8 x i64], ptr %strides2, i64 0, i64 0
  %6 = load ptr, ptr %__pyx_v_src.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %6, i32 0, i32 2
  %arraydecay4 = getelementptr inbounds [8 x i64], ptr %shape, i64 0, i64 0
  %7 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %shape5 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %7, i32 0, i32 2
  %arraydecay6 = getelementptr inbounds [8 x i64], ptr %shape5, i64 0, i64 0
  %8 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %9 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  call void @_copy_strided_to_strided(ptr noundef %1, ptr noundef %arraydecay, ptr noundef %4, ptr noundef %arraydecay3, ptr noundef %arraydecay4, ptr noundef %arraydecay6, i32 noundef %8, i64 noundef %9)
  ret void
}

declare i32 @PyGILState_Ensure() #1

declare void @PyGILState_Release(i32 noundef) #1

; Function Attrs: nounwind uwtable
define internal i64 @abs_py_ssize_t(i64 noundef %__pyx_v_arg) #0 {
entry:
  %__pyx_v_arg.addr = alloca i64, align 8
  %__pyx_r = alloca i64, align 8
  %__pyx_t_1 = alloca i32, align 4
  store i64 %__pyx_v_arg, ptr %__pyx_v_arg.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  %0 = load i64, ptr %__pyx_v_arg.addr, align 8, !tbaa !27
  %cmp = icmp slt i64 %0, 0
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_1, align 4, !tbaa !9
  %1 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %__pyx_v_arg.addr, align 8, !tbaa !27
  %sub = sub i64 0, %2
  store i64 %sub, ptr %__pyx_r, align 8, !tbaa !27
  br label %__pyx_L0

if.end:                                           ; preds = %entry
  %3 = load i64, ptr %__pyx_v_arg.addr, align 8, !tbaa !27
  store i64 %3, ptr %__pyx_r, align 8, !tbaa !27
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %if.end, %if.then
  %4 = load i64, ptr %__pyx_r, align 8, !tbaa !27
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret i64 %4
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_decode_c_string(ptr noundef %cstring, i64 noundef %start, i64 noundef %stop, ptr noundef %encoding, ptr noundef %errors, ptr noundef %decode_func) #3 {
entry:
  %retval = alloca ptr, align 8
  %cstring.addr = alloca ptr, align 8
  %start.addr = alloca i64, align 8
  %stop.addr = alloca i64, align 8
  %encoding.addr = alloca ptr, align 8
  %errors.addr = alloca ptr, align 8
  %decode_func.addr = alloca ptr, align 8
  %length = alloca i64, align 8
  %slen = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %cstring, ptr %cstring.addr, align 8, !tbaa !5
  store i64 %start, ptr %start.addr, align 8, !tbaa !27
  store i64 %stop, ptr %stop.addr, align 8, !tbaa !27
  store ptr %encoding, ptr %encoding.addr, align 8, !tbaa !5
  store ptr %errors, ptr %errors.addr, align 8, !tbaa !5
  store ptr %decode_func, ptr %decode_func.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %length) #13
  %0 = load i64, ptr %start.addr, align 8, !tbaa !27
  %cmp = icmp slt i64 %0, 0
  %conv = zext i1 %cmp to i32
  %1 = load i64, ptr %stop.addr, align 8, !tbaa !27
  %cmp1 = icmp slt i64 %1, 0
  %conv2 = zext i1 %cmp1 to i32
  %or = or i32 %conv, %conv2
  %tobool = icmp ne i32 %or, 0
  %lnot = xor i1 %tobool, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv4 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv4, i64 0)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %if.then, label %if.end29

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %slen) #13
  %2 = load ptr, ptr %cstring.addr, align 8, !tbaa !5
  %call = call i64 @strlen(ptr noundef %2) #16
  store i64 %call, ptr %slen, align 8, !tbaa !27
  %3 = load i64, ptr %slen, align 8, !tbaa !27
  %cmp6 = icmp ugt i64 %3, 9223372036854775807
  %lnot8 = xor i1 %cmp6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end

if.then15:                                        ; preds = %if.then
  %4 = load ptr, ptr @PyExc_OverflowError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %4, ptr noundef @.str.152)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  %5 = load i64, ptr %slen, align 8, !tbaa !27
  store i64 %5, ptr %length, align 8, !tbaa !27
  %6 = load i64, ptr %start.addr, align 8, !tbaa !27
  %cmp16 = icmp slt i64 %6, 0
  br i1 %cmp16, label %if.then18, label %if.end23

if.then18:                                        ; preds = %if.end
  %7 = load i64, ptr %length, align 8, !tbaa !27
  %8 = load i64, ptr %start.addr, align 8, !tbaa !27
  %add = add i64 %8, %7
  store i64 %add, ptr %start.addr, align 8, !tbaa !27
  %9 = load i64, ptr %start.addr, align 8, !tbaa !27
  %cmp19 = icmp slt i64 %9, 0
  br i1 %cmp19, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.then18
  store i64 0, ptr %start.addr, align 8, !tbaa !27
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %if.then18
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end
  %10 = load i64, ptr %stop.addr, align 8, !tbaa !27
  %cmp24 = icmp slt i64 %10, 0
  br i1 %cmp24, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.end23
  %11 = load i64, ptr %length, align 8, !tbaa !27
  %12 = load i64, ptr %stop.addr, align 8, !tbaa !27
  %add27 = add i64 %12, %11
  store i64 %add27, ptr %stop.addr, align 8, !tbaa !27
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.end23
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end28, %if.then15
  call void @llvm.lifetime.end.p0(i64 8, ptr %slen) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup45 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end29

if.end29:                                         ; preds = %cleanup.cont, %entry
  %13 = load i64, ptr %stop.addr, align 8, !tbaa !27
  %14 = load i64, ptr %start.addr, align 8, !tbaa !27
  %cmp30 = icmp sle i64 %13, %14
  %lnot32 = xor i1 %cmp30, true
  %lnot34 = xor i1 %lnot32, true
  %lnot.ext35 = zext i1 %lnot34 to i32
  %conv36 = sext i32 %lnot.ext35 to i64
  %expval37 = call i64 @llvm.expect.i64(i64 %conv36, i64 0)
  %tobool38 = icmp ne i64 %expval37, 0
  br i1 %tobool38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.end29
  %15 = load ptr, ptr @__pyx_empty_unicode, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %15)
  %16 = load ptr, ptr @__pyx_empty_unicode, align 8, !tbaa !5
  store ptr %16, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup45

if.end40:                                         ; preds = %if.end29
  %17 = load i64, ptr %stop.addr, align 8, !tbaa !27
  %18 = load i64, ptr %start.addr, align 8, !tbaa !27
  %sub = sub i64 %17, %18
  store i64 %sub, ptr %length, align 8, !tbaa !27
  %19 = load i64, ptr %start.addr, align 8, !tbaa !27
  %20 = load ptr, ptr %cstring.addr, align 8, !tbaa !5
  %add.ptr = getelementptr i8, ptr %20, i64 %19
  store ptr %add.ptr, ptr %cstring.addr, align 8, !tbaa !5
  %21 = load ptr, ptr %decode_func.addr, align 8, !tbaa !5
  %tobool41 = icmp ne ptr %21, null
  br i1 %tobool41, label %if.then42, label %if.else

if.then42:                                        ; preds = %if.end40
  %22 = load ptr, ptr %decode_func.addr, align 8, !tbaa !5
  %23 = load ptr, ptr %cstring.addr, align 8, !tbaa !5
  %24 = load i64, ptr %length, align 8, !tbaa !27
  %25 = load ptr, ptr %errors.addr, align 8, !tbaa !5
  %call43 = call ptr %22(ptr noundef %23, i64 noundef %24, ptr noundef %25)
  store ptr %call43, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup45

if.else:                                          ; preds = %if.end40
  %26 = load ptr, ptr %cstring.addr, align 8, !tbaa !5
  %27 = load i64, ptr %length, align 8, !tbaa !27
  %28 = load ptr, ptr %encoding.addr, align 8, !tbaa !5
  %29 = load ptr, ptr %errors.addr, align 8, !tbaa !5
  %call44 = call ptr @PyUnicode_Decode(ptr noundef %26, i64 noundef %27, ptr noundef %28, ptr noundef %29)
  store ptr %call44, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup45

cleanup45:                                        ; preds = %if.else, %if.then42, %if.then39, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %length) #13
  %30 = load ptr, ptr %retval, align 8
  ret ptr %30
}

; Function Attrs: nounwind willreturn memory(read)
declare i64 @strlen(ptr noundef) #9

declare ptr @PyUnicode_DecodeASCII(ptr noundef, i64 noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__pyx_get_array_memory_extents(ptr noundef %slice, ptr noundef %out_start, ptr noundef %out_end, i32 noundef %ndim, i64 noundef %itemsize) #0 {
entry:
  %slice.addr = alloca ptr, align 8
  %out_start.addr = alloca ptr, align 8
  %out_end.addr = alloca ptr, align 8
  %ndim.addr = alloca i32, align 4
  %itemsize.addr = alloca i64, align 8
  %start = alloca ptr, align 8
  %end = alloca ptr, align 8
  %i = alloca i32, align 4
  %stride = alloca i64, align 8
  %extent = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %slice, ptr %slice.addr, align 8, !tbaa !5
  store ptr %out_start, ptr %out_start.addr, align 8, !tbaa !5
  store ptr %out_end, ptr %out_end.addr, align 8, !tbaa !5
  store i32 %ndim, ptr %ndim.addr, align 4, !tbaa !9
  store i64 %itemsize, ptr %itemsize.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %start) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %end) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  %0 = load ptr, ptr %slice.addr, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %0, i32 0, i32 1
  %1 = load ptr, ptr %data, align 8, !tbaa !188
  store ptr %1, ptr %end, align 8, !tbaa !5
  store ptr %1, ptr %start, align 8, !tbaa !5
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, ptr %i, align 4, !tbaa !9
  %3 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 8, ptr %stride) #13
  %4 = load ptr, ptr %slice.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %4, i32 0, i32 3
  %5 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr [8 x i64], ptr %strides, i64 0, i64 %idxprom
  %6 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %6, ptr %stride, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %extent) #13
  %7 = load ptr, ptr %slice.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %7, i32 0, i32 2
  %8 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom1 = sext i32 %8 to i64
  %arrayidx2 = getelementptr [8 x i64], ptr %shape, i64 0, i64 %idxprom1
  %9 = load i64, ptr %arrayidx2, align 8, !tbaa !27
  store i64 %9, ptr %extent, align 8, !tbaa !27
  %10 = load i64, ptr %extent, align 8, !tbaa !27
  %cmp3 = icmp eq i64 %10, 0
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %11 = load ptr, ptr %start, align 8, !tbaa !5
  %12 = load ptr, ptr %out_end.addr, align 8, !tbaa !5
  store ptr %11, ptr %12, align 8, !tbaa !5
  %13 = load ptr, ptr %out_start.addr, align 8, !tbaa !5
  store ptr %11, ptr %13, align 8, !tbaa !5
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.else:                                          ; preds = %for.body
  %14 = load i64, ptr %stride, align 8, !tbaa !27
  %cmp4 = icmp sgt i64 %14, 0
  br i1 %cmp4, label %if.then5, label %if.else6

if.then5:                                         ; preds = %if.else
  %15 = load i64, ptr %stride, align 8, !tbaa !27
  %16 = load i64, ptr %extent, align 8, !tbaa !27
  %sub = sub i64 %16, 1
  %mul = mul i64 %15, %sub
  %17 = load ptr, ptr %end, align 8, !tbaa !5
  %add.ptr = getelementptr i8, ptr %17, i64 %mul
  store ptr %add.ptr, ptr %end, align 8, !tbaa !5
  br label %if.end

if.else6:                                         ; preds = %if.else
  %18 = load i64, ptr %stride, align 8, !tbaa !27
  %19 = load i64, ptr %extent, align 8, !tbaa !27
  %sub7 = sub i64 %19, 1
  %mul8 = mul i64 %18, %sub7
  %20 = load ptr, ptr %start, align 8, !tbaa !5
  %add.ptr9 = getelementptr i8, ptr %20, i64 %mul8
  store ptr %add.ptr9, ptr %start, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then5
  br label %if.end10

if.end10:                                         ; preds = %if.end
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %extent) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %stride) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup13 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %21 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %21, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !204

for.end:                                          ; preds = %for.cond
  %22 = load ptr, ptr %start, align 8, !tbaa !5
  %23 = load ptr, ptr %out_start.addr, align 8, !tbaa !5
  store ptr %22, ptr %23, align 8, !tbaa !5
  %24 = load ptr, ptr %end, align 8, !tbaa !5
  %25 = load i64, ptr %itemsize.addr, align 8, !tbaa !27
  %add.ptr12 = getelementptr i8, ptr %24, i64 %25
  %26 = load ptr, ptr %out_end.addr, align 8, !tbaa !5
  store ptr %add.ptr12, ptr %26, align 8, !tbaa !5
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup13

cleanup13:                                        ; preds = %for.end, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %end) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %start) #13
  %cleanup.dest16 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest16, label %unreachable [
    i32 0, label %cleanup.cont17
    i32 1, label %cleanup.cont17
  ]

cleanup.cont17:                                   ; preds = %cleanup13, %cleanup13
  ret void

unreachable:                                      ; preds = %cleanup13
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memoryview_err(ptr noundef %__pyx_v_error, ptr noundef %__pyx_v_msg) #0 {
entry:
  %__pyx_v_error.addr = alloca ptr, align 8
  %__pyx_v_msg.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_gilstate_save = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_error, ptr %__pyx_v_error.addr, align 8, !tbaa !5
  store ptr %__pyx_v_msg, ptr %__pyx_v_msg.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_gilstate_save) #13
  %call = call i32 @PyGILState_Ensure()
  store i32 %call, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  %0 = load ptr, ptr %__pyx_v_error.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_msg.addr, align 8, !tbaa !5
  %cmp = icmp ne ptr %1, null
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %2, 0
  %lnot = xor i1 %tobool, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv4 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv4, i64 0)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %if.then, label %if.end55

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__pyx_v_msg.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_v_msg.addr, align 8, !tbaa !5
  %call6 = call i64 @strlen(ptr noundef %4) #16
  %call7 = call ptr @__Pyx_decode_c_string(ptr noundef %3, i64 noundef 0, i64 noundef %call6, ptr noundef null, ptr noundef null, ptr noundef @PyUnicode_DecodeASCII)
  store ptr %call7, ptr %__pyx_t_3, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool8 = icmp ne ptr %5, null
  %lnot9 = xor i1 %tobool8, true
  %lnot11 = xor i1 %lnot9, true
  %lnot13 = xor i1 %lnot11, true
  %lnot.ext14 = zext i1 %lnot13 to i32
  %conv15 = sext i32 %lnot.ext14 to i64
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 0)
  %tobool17 = icmp ne i64 %expval16, 0
  br i1 %tobool17, label %if.then18, label %if.end

if.then18:                                        ; preds = %if.then
  %6 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %6, ptr %__pyx_filename, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1265, ptr %__pyx_lineno, align 4, !tbaa !9
  %8 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17534, ptr %__pyx_clineno, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %if.then
  %10 = load ptr, ptr %__pyx_v_error.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %10)
  %11 = load ptr, ptr %__pyx_v_error.addr, align 8, !tbaa !5
  store ptr %11, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call19 = call i32 @Py_IS_TYPE(ptr noundef %12, ptr noundef @PyMethod_Type)
  %tobool20 = icmp ne i32 %call19, 0
  %lnot21 = xor i1 %tobool20, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.end39

if.then28:                                        ; preds = %if.end
  %13 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %13, i32 0, i32 2
  %14 = load ptr, ptr %im_self, align 8, !tbaa !125
  store ptr %14, ptr %__pyx_t_5, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool29 = icmp ne ptr %15, null
  %lnot30 = xor i1 %tobool29, true
  %lnot32 = xor i1 %lnot30, true
  %lnot.ext33 = zext i1 %lnot32 to i32
  %conv34 = sext i32 %lnot.ext33 to i64
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 1)
  %tobool36 = icmp ne i64 %expval35, 0
  br i1 %tobool36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.then28
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #13
  %16 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %16, i32 0, i32 1
  %17 = load ptr, ptr %im_func, align 8, !tbaa !127
  store ptr %17, ptr %function, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %18)
  %19 = load ptr, ptr %function, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %19)
  br label %do.body

do.body:                                          ; preds = %if.then37
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %20 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %20, ptr %tmp, align 8, !tbaa !5
  %21 = load ptr, ptr %function, align 8, !tbaa !5
  store ptr %21, ptr %__pyx_t_4, align 8, !tbaa !5
  %22 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %22)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #13
  br label %if.end38

if.end38:                                         ; preds = %do.end, %if.then28
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end
  %23 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool40 = icmp ne ptr %23, null
  br i1 %tobool40, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end39
  %24 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %26 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call41 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %24, ptr noundef %25, ptr noundef %26)
  br label %cond.end

cond.false:                                       ; preds = %if.end39
  %27 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call42 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %27, ptr noundef %28)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call41, %cond.true ], [ %call42, %cond.false ]
  store ptr %cond, ptr %__pyx_t_2, align 8, !tbaa !5
  %29 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %29)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %30)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %31 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool43 = icmp ne ptr %31, null
  %lnot44 = xor i1 %tobool43, true
  %lnot46 = xor i1 %lnot44, true
  %lnot48 = xor i1 %lnot46, true
  %lnot.ext49 = zext i1 %lnot48 to i32
  %conv50 = sext i32 %lnot.ext49 to i64
  %expval51 = call i64 @llvm.expect.i64(i64 %conv50, i64 0)
  %tobool52 = icmp ne i64 %expval51, 0
  br i1 %tobool52, label %if.then53, label %if.end54

if.then53:                                        ; preds = %cond.end
  %32 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %32, ptr %__pyx_filename, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1265, ptr %__pyx_lineno, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17550, ptr %__pyx_clineno, align 4, !tbaa !9
  %35 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end54:                                         ; preds = %cond.end
  %36 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %36)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %37 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %37, ptr noundef null, ptr noundef null, ptr noundef null)
  %38 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %38)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %39 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %39, ptr %__pyx_filename, align 8, !tbaa !5
  %40 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1265, ptr %__pyx_lineno, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17555, ptr %__pyx_clineno, align 4, !tbaa !9
  %42 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end55:                                         ; preds = %entry
  %43 = load ptr, ptr %__pyx_v_error.addr, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %43, ptr noundef null, ptr noundef null, ptr noundef null)
  %44 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %44, ptr %__pyx_filename, align 8, !tbaa !5
  %45 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1267, ptr %__pyx_lineno, align 4, !tbaa !9
  %46 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 17575, ptr %__pyx_clineno, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

__pyx_L1_error:                                   ; preds = %if.end55, %if.end54, %if.then53, %if.then18
  %48 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %48)
  %49 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %49)
  %50 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %50)
  %51 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %51)
  %52 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %53 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %54 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.154, i32 noundef %52, i32 noundef %53, ptr noundef %54)
  store i32 -1, ptr %__pyx_r, align 4, !tbaa !9
  %55 = load ptr, ptr %__pyx_v_error.addr, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %55)
  %56 = load i32, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  call void @PyGILState_Release(i32 noundef %56)
  %57 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_gilstate_save) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  ret i32 %57
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_memoryview_refcount_objects_in_slice_with_gil(ptr noundef %__pyx_v_data, ptr noundef %__pyx_v_shape, ptr noundef %__pyx_v_strides, i32 noundef %__pyx_v_ndim, i32 noundef %__pyx_v_inc) #0 {
entry:
  %__pyx_v_data.addr = alloca ptr, align 8
  %__pyx_v_shape.addr = alloca ptr, align 8
  %__pyx_v_strides.addr = alloca ptr, align 8
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_inc.addr = alloca i32, align 4
  %__pyx_gilstate_save = alloca i32, align 4
  store ptr %__pyx_v_data, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  store ptr %__pyx_v_shape, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  store ptr %__pyx_v_strides, ptr %__pyx_v_strides.addr, align 8, !tbaa !5
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i32 %__pyx_v_inc, ptr %__pyx_v_inc.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_gilstate_save) #13
  %call = call i32 @PyGILState_Ensure()
  store i32 %call, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  %0 = load ptr, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_v_strides.addr, align 8, !tbaa !5
  %3 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_v_inc.addr, align 4, !tbaa !9
  call void @__pyx_memoryview_refcount_objects_in_slice(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4)
  %5 = load i32, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  call void @PyGILState_Release(i32 noundef %5)
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_gilstate_save) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @_copy_strided_to_strided(ptr noundef %__pyx_v_src_data, ptr noundef %__pyx_v_src_strides, ptr noundef %__pyx_v_dst_data, ptr noundef %__pyx_v_dst_strides, ptr noundef %__pyx_v_src_shape, ptr noundef %__pyx_v_dst_shape, i32 noundef %__pyx_v_ndim, i64 noundef %__pyx_v_itemsize) #0 {
entry:
  %__pyx_v_src_data.addr = alloca ptr, align 8
  %__pyx_v_src_strides.addr = alloca ptr, align 8
  %__pyx_v_dst_data.addr = alloca ptr, align 8
  %__pyx_v_dst_strides.addr = alloca ptr, align 8
  %__pyx_v_src_shape.addr = alloca ptr, align 8
  %__pyx_v_dst_shape.addr = alloca ptr, align 8
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_itemsize.addr = alloca i64, align 8
  %__pyx_v_i = alloca i64, align 8
  %__pyx_v_src_extent = alloca i64, align 8
  %__pyx_v_dst_extent = alloca i64, align 8
  %__pyx_v_src_stride = alloca i64, align 8
  %__pyx_v_dst_stride = alloca i64, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i64, align 8
  %__pyx_t_5 = alloca i64, align 8
  %__pyx_t_6 = alloca i64, align 8
  store ptr %__pyx_v_src_data, ptr %__pyx_v_src_data.addr, align 8, !tbaa !5
  store ptr %__pyx_v_src_strides, ptr %__pyx_v_src_strides.addr, align 8, !tbaa !5
  store ptr %__pyx_v_dst_data, ptr %__pyx_v_dst_data.addr, align 8, !tbaa !5
  store ptr %__pyx_v_dst_strides, ptr %__pyx_v_dst_strides.addr, align 8, !tbaa !5
  store ptr %__pyx_v_src_shape, ptr %__pyx_v_src_shape.addr, align 8, !tbaa !5
  store ptr %__pyx_v_dst_shape, ptr %__pyx_v_dst_shape.addr, align 8, !tbaa !5
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i64 %__pyx_v_itemsize, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_src_extent) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_dst_extent) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_src_stride) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_dst_stride) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  %0 = load ptr, ptr %__pyx_v_src_shape.addr, align 8, !tbaa !5
  %arrayidx = getelementptr i64, ptr %0, i64 0
  %1 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %1, ptr %__pyx_v_src_extent, align 8, !tbaa !27
  %2 = load ptr, ptr %__pyx_v_dst_shape.addr, align 8, !tbaa !5
  %arrayidx1 = getelementptr i64, ptr %2, i64 0
  %3 = load i64, ptr %arrayidx1, align 8, !tbaa !27
  store i64 %3, ptr %__pyx_v_dst_extent, align 8, !tbaa !27
  %4 = load ptr, ptr %__pyx_v_src_strides.addr, align 8, !tbaa !5
  %arrayidx2 = getelementptr i64, ptr %4, i64 0
  %5 = load i64, ptr %arrayidx2, align 8, !tbaa !27
  store i64 %5, ptr %__pyx_v_src_stride, align 8, !tbaa !27
  %6 = load ptr, ptr %__pyx_v_dst_strides.addr, align 8, !tbaa !5
  %arrayidx3 = getelementptr i64, ptr %6, i64 0
  %7 = load i64, ptr %arrayidx3, align 8, !tbaa !27
  store i64 %7, ptr %__pyx_v_dst_stride, align 8, !tbaa !27
  %8 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %cmp = icmp eq i32 %8, 1
  %conv = zext i1 %cmp to i32
  %cmp4 = icmp ne i32 %conv, 0
  %conv5 = zext i1 %cmp4 to i32
  store i32 %conv5, ptr %__pyx_t_1, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %if.then, label %if.end35

if.then:                                          ; preds = %entry
  %10 = load i64, ptr %__pyx_v_src_stride, align 8, !tbaa !27
  %cmp6 = icmp sgt i64 %10, 0
  %conv7 = zext i1 %cmp6 to i32
  %cmp8 = icmp ne i32 %conv7, 0
  %conv9 = zext i1 %cmp8 to i32
  store i32 %conv9, ptr %__pyx_t_2, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool10 = icmp ne i32 %11, 0
  br i1 %tobool10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.then
  br label %if.end

if.else:                                          ; preds = %if.then
  %12 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %12, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L5_bool_binop_done

if.end:                                           ; preds = %if.then11
  %13 = load i64, ptr %__pyx_v_dst_stride, align 8, !tbaa !27
  %cmp12 = icmp sgt i64 %13, 0
  %conv13 = zext i1 %cmp12 to i32
  %cmp14 = icmp ne i32 %conv13, 0
  %conv15 = zext i1 %cmp14 to i32
  store i32 %conv15, ptr %__pyx_t_2, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool16 = icmp ne i32 %14, 0
  br i1 %tobool16, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.end
  br label %if.end19

if.else18:                                        ; preds = %if.end
  %15 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %15, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L5_bool_binop_done

if.end19:                                         ; preds = %if.then17
  %16 = load i64, ptr %__pyx_v_src_stride, align 8, !tbaa !27
  %17 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %cmp20 = icmp eq i64 %16, %17
  %conv21 = zext i1 %cmp20 to i32
  store i32 %conv21, ptr %__pyx_t_2, align 4, !tbaa !9
  %18 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool22 = icmp ne i32 %18, 0
  br i1 %tobool22, label %if.then23, label %if.end26

if.then23:                                        ; preds = %if.end19
  %19 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %20 = load i64, ptr %__pyx_v_dst_stride, align 8, !tbaa !27
  %cmp24 = icmp eq i64 %19, %20
  %conv25 = zext i1 %cmp24 to i32
  store i32 %conv25, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %if.end26

if.end26:                                         ; preds = %if.then23, %if.end19
  %21 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp27 = icmp ne i32 %21, 0
  %conv28 = zext i1 %cmp27 to i32
  store i32 %conv28, ptr %__pyx_t_3, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %22, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L5_bool_binop_done

__pyx_L5_bool_binop_done:                         ; preds = %if.end26, %if.else18, %if.else
  %23 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool29 = icmp ne i32 %23, 0
  br i1 %tobool29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %__pyx_L5_bool_binop_done
  %24 = load ptr, ptr %__pyx_v_dst_data.addr, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_v_src_data.addr, align 8, !tbaa !5
  %26 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %27 = load i64, ptr %__pyx_v_dst_extent, align 8, !tbaa !27
  %mul = mul i64 %26, %27
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %24, ptr align 1 %25, i64 %mul, i1 false)
  br label %__pyx_L4

if.end31:                                         ; preds = %__pyx_L5_bool_binop_done
  %28 = load i64, ptr %__pyx_v_dst_extent, align 8, !tbaa !27
  store i64 %28, ptr %__pyx_t_4, align 8, !tbaa !27
  %29 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  store i64 %29, ptr %__pyx_t_5, align 8, !tbaa !27
  store i64 0, ptr %__pyx_t_6, align 8, !tbaa !27
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end31
  %30 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %31 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp32 = icmp slt i64 %30, %31
  br i1 %cmp32, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %32 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  store i64 %32, ptr %__pyx_v_i, align 8, !tbaa !27
  %33 = load ptr, ptr %__pyx_v_dst_data.addr, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_v_src_data.addr, align 8, !tbaa !5
  %35 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %33, ptr align 1 %34, i64 %35, i1 false)
  %36 = load ptr, ptr %__pyx_v_src_data.addr, align 8, !tbaa !5
  %37 = load i64, ptr %__pyx_v_src_stride, align 8, !tbaa !27
  %add.ptr = getelementptr i8, ptr %36, i64 %37
  store ptr %add.ptr, ptr %__pyx_v_src_data.addr, align 8, !tbaa !5
  %38 = load ptr, ptr %__pyx_v_dst_data.addr, align 8, !tbaa !5
  %39 = load i64, ptr %__pyx_v_dst_stride, align 8, !tbaa !27
  %add.ptr34 = getelementptr i8, ptr %38, i64 %39
  store ptr %add.ptr34, ptr %__pyx_v_dst_data.addr, align 8, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %40 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %add = add i64 %40, 1
  store i64 %add, ptr %__pyx_t_6, align 8, !tbaa !27
  br label %for.cond, !llvm.loop !205

for.end:                                          ; preds = %for.cond
  br label %__pyx_L4

__pyx_L4:                                         ; preds = %for.end, %if.then30
  br label %__pyx_L3

if.end35:                                         ; preds = %entry
  %41 = load i64, ptr %__pyx_v_dst_extent, align 8, !tbaa !27
  store i64 %41, ptr %__pyx_t_4, align 8, !tbaa !27
  %42 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  store i64 %42, ptr %__pyx_t_5, align 8, !tbaa !27
  store i64 0, ptr %__pyx_t_6, align 8, !tbaa !27
  br label %for.cond36

for.cond36:                                       ; preds = %for.inc46, %if.end35
  %43 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %44 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp37 = icmp slt i64 %43, %44
  br i1 %cmp37, label %for.body39, label %for.end48

for.body39:                                       ; preds = %for.cond36
  %45 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  store i64 %45, ptr %__pyx_v_i, align 8, !tbaa !27
  %46 = load ptr, ptr %__pyx_v_src_data.addr, align 8, !tbaa !5
  %47 = load ptr, ptr %__pyx_v_src_strides.addr, align 8, !tbaa !5
  %add.ptr40 = getelementptr i64, ptr %47, i64 1
  %48 = load ptr, ptr %__pyx_v_dst_data.addr, align 8, !tbaa !5
  %49 = load ptr, ptr %__pyx_v_dst_strides.addr, align 8, !tbaa !5
  %add.ptr41 = getelementptr i64, ptr %49, i64 1
  %50 = load ptr, ptr %__pyx_v_src_shape.addr, align 8, !tbaa !5
  %add.ptr42 = getelementptr i64, ptr %50, i64 1
  %51 = load ptr, ptr %__pyx_v_dst_shape.addr, align 8, !tbaa !5
  %add.ptr43 = getelementptr i64, ptr %51, i64 1
  %52 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %sub = sub i32 %52, 1
  %53 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  call void @_copy_strided_to_strided(ptr noundef %46, ptr noundef %add.ptr40, ptr noundef %48, ptr noundef %add.ptr41, ptr noundef %add.ptr42, ptr noundef %add.ptr43, i32 noundef %sub, i64 noundef %53)
  %54 = load ptr, ptr %__pyx_v_src_data.addr, align 8, !tbaa !5
  %55 = load i64, ptr %__pyx_v_src_stride, align 8, !tbaa !27
  %add.ptr44 = getelementptr i8, ptr %54, i64 %55
  store ptr %add.ptr44, ptr %__pyx_v_src_data.addr, align 8, !tbaa !5
  %56 = load ptr, ptr %__pyx_v_dst_data.addr, align 8, !tbaa !5
  %57 = load i64, ptr %__pyx_v_dst_stride, align 8, !tbaa !27
  %add.ptr45 = getelementptr i8, ptr %56, i64 %57
  store ptr %add.ptr45, ptr %__pyx_v_dst_data.addr, align 8, !tbaa !5
  br label %for.inc46

for.inc46:                                        ; preds = %for.body39
  %58 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %add47 = add i64 %58, 1
  store i64 %add47, ptr %__pyx_t_6, align 8, !tbaa !27
  br label %for.cond36, !llvm.loop !206

for.end48:                                        ; preds = %for.cond36
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %for.end48, %__pyx_L4
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_dst_stride) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_src_stride) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_dst_extent) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_src_extent) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_i) #13
  ret void
}

declare ptr @PyMem_Malloc(i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @assert_direct_dimensions(ptr noundef %__pyx_v_suboffsets, i32 noundef %__pyx_v_ndim) #0 {
entry:
  %__pyx_v_suboffsets.addr = alloca ptr, align 8
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_suboffset = alloca i64, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_suboffsets, ptr %__pyx_v_suboffsets.addr, align 8, !tbaa !5
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_suboffset) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_suboffsets.addr, align 8, !tbaa !5
  %1 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %idx.ext = sext i32 %1 to i64
  %add.ptr = getelementptr i64, ptr %0, i64 %idx.ext
  store ptr %add.ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_v_suboffsets.addr, align 8, !tbaa !5
  store ptr %2, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %cmp = icmp ult ptr %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %5, ptr %__pyx_t_1, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %arrayidx = getelementptr i64, ptr %6, i64 0
  %7 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %7, ptr %__pyx_v_suboffset, align 8, !tbaa !27
  %8 = load i64, ptr %__pyx_v_suboffset, align 8, !tbaa !27
  %cmp1 = icmp sge i64 %8, 0
  %conv = zext i1 %cmp1 to i32
  %cmp2 = icmp ne i32 %conv, 0
  %conv3 = zext i1 %cmp2 to i32
  store i32 %conv3, ptr %__pyx_t_4, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool = icmp ne i32 %9, 0
  %lnot = xor i1 %tobool, true
  %lnot4 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot4 to i32
  %conv5 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv5, i64 0)
  %tobool6 = icmp ne i64 %expval, 0
  br i1 %tobool6, label %if.then, label %if.end18

if.then:                                          ; preds = %for.body
  %10 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %11 = load ptr, ptr @__pyx_tuple__20, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_Call(ptr noundef %10, ptr noundef %11, ptr noundef null)
  store ptr %call, ptr %__pyx_t_5, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool7 = icmp ne ptr %12, null
  %lnot8 = xor i1 %tobool7, true
  %lnot10 = xor i1 %lnot8, true
  %lnot12 = xor i1 %lnot10, true
  %lnot.ext13 = zext i1 %lnot12 to i32
  %conv14 = sext i32 %lnot.ext13 to i64
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0)
  %tobool16 = icmp ne i64 %expval15, 0
  br i1 %tobool16, label %if.then17, label %if.end

if.then17:                                        ; preds = %if.then
  %13 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %13, ptr %__pyx_filename, align 8, !tbaa !5
  %14 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 705, ptr %__pyx_lineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13284, ptr %__pyx_clineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %if.then
  %17 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %17, ptr noundef null, ptr noundef null, ptr noundef null)
  %18 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %18)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %19 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %19, ptr %__pyx_filename, align 8, !tbaa !5
  %20 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 705, ptr %__pyx_lineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13288, ptr %__pyx_clineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end18:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end18
  %23 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %incdec.ptr = getelementptr i64, ptr %23, i32 1
  store ptr %incdec.ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %for.cond, !llvm.loop !207

for.end:                                          ; preds = %for.cond
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.end, %if.then17
  %24 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %24)
  %25 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %27 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.158, i32 noundef %25, i32 noundef %26, ptr noundef %27)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %for.end
  %28 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_suboffset) #13
  ret ptr %28
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_memoryview_slice_assign_scalar(ptr noundef %__pyx_v_dst, i32 noundef %__pyx_v_ndim, i64 noundef %__pyx_v_itemsize, ptr noundef %__pyx_v_item, i32 noundef %__pyx_v_dtype_is_object) #0 {
entry:
  %__pyx_v_dst.addr = alloca ptr, align 8
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_itemsize.addr = alloca i64, align 8
  %__pyx_v_item.addr = alloca ptr, align 8
  %__pyx_v_dtype_is_object.addr = alloca i32, align 4
  store ptr %__pyx_v_dst, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i64 %__pyx_v_itemsize, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  store ptr %__pyx_v_item, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  store i32 %__pyx_v_dtype_is_object, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %1 = load i32, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  call void @__pyx_memoryview_refcount_copying(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef 0)
  %3 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %3, i32 0, i32 1
  %4 = load ptr, ptr %data, align 8, !tbaa !188
  %5 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %5, i32 0, i32 2
  %arraydecay = getelementptr inbounds [8 x i64], ptr %shape, i64 0, i64 0
  %6 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %6, i32 0, i32 3
  %arraydecay1 = getelementptr inbounds [8 x i64], ptr %strides, i64 0, i64 0
  %7 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %8 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %9 = load ptr, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  call void @__pyx_memoryview__slice_assign_scalar(ptr noundef %4, ptr noundef %arraydecay, ptr noundef %arraydecay1, i32 noundef %7, i64 noundef %8, ptr noundef %9)
  %10 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %11 = load i32, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  call void @__pyx_memoryview_refcount_copying(ptr noundef %10, i32 noundef %11, i32 noundef %12, i32 noundef 1)
  ret void
}

declare void @PyMem_Free(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_ExceptionSwap(ptr noundef %type, ptr noundef %value, ptr noundef %tb) #3 {
entry:
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  %tmp_type = alloca ptr, align 8
  %tmp_value = alloca ptr, align 8
  %tmp_tb = alloca ptr, align 8
  store ptr %type, ptr %type.addr, align 8, !tbaa !5
  store ptr %value, ptr %value.addr, align 8, !tbaa !5
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_type) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_value) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_tb) #13
  call void @PyErr_GetExcInfo(ptr noundef %tmp_type, ptr noundef %tmp_value, ptr noundef %tmp_tb)
  %0 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %0, align 8, !tbaa !5
  %2 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %2, align 8, !tbaa !5
  %4 = load ptr, ptr %tb.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  call void @PyErr_SetExcInfo(ptr noundef %1, ptr noundef %3, ptr noundef %5)
  %6 = load ptr, ptr %tmp_type, align 8, !tbaa !5
  %7 = load ptr, ptr %type.addr, align 8, !tbaa !5
  store ptr %6, ptr %7, align 8, !tbaa !5
  %8 = load ptr, ptr %tmp_value, align 8, !tbaa !5
  %9 = load ptr, ptr %value.addr, align 8, !tbaa !5
  store ptr %8, ptr %9, align 8, !tbaa !5
  %10 = load ptr, ptr %tmp_tb, align 8, !tbaa !5
  %11 = load ptr, ptr %tb.addr, align 8, !tbaa !5
  store ptr %10, ptr %11, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_tb) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_value) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_type) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_memoryview__slice_assign_scalar(ptr noundef %__pyx_v_data, ptr noundef %__pyx_v_shape, ptr noundef %__pyx_v_strides, i32 noundef %__pyx_v_ndim, i64 noundef %__pyx_v_itemsize, ptr noundef %__pyx_v_item) #0 {
entry:
  %__pyx_v_data.addr = alloca ptr, align 8
  %__pyx_v_shape.addr = alloca ptr, align 8
  %__pyx_v_strides.addr = alloca ptr, align 8
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_itemsize.addr = alloca i64, align 8
  %__pyx_v_item.addr = alloca ptr, align 8
  %__pyx_v_i = alloca i64, align 8
  %__pyx_v_stride = alloca i64, align 8
  %__pyx_v_extent = alloca i64, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i64, align 8
  %__pyx_t_3 = alloca i64, align 8
  %__pyx_t_4 = alloca i64, align 8
  store ptr %__pyx_v_data, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  store ptr %__pyx_v_shape, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  store ptr %__pyx_v_strides, ptr %__pyx_v_strides.addr, align 8, !tbaa !5
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store i64 %__pyx_v_itemsize, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  store ptr %__pyx_v_item, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_stride) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_extent) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  %0 = load ptr, ptr %__pyx_v_strides.addr, align 8, !tbaa !5
  %arrayidx = getelementptr i64, ptr %0, i64 0
  %1 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %1, ptr %__pyx_v_stride, align 8, !tbaa !27
  %2 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  %arrayidx1 = getelementptr i64, ptr %2, i64 0
  %3 = load i64, ptr %arrayidx1, align 8, !tbaa !27
  store i64 %3, ptr %__pyx_v_extent, align 8, !tbaa !27
  %4 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %cmp = icmp eq i32 %4, 1
  %conv = zext i1 %cmp to i32
  %cmp2 = icmp ne i32 %conv, 0
  %conv3 = zext i1 %cmp2 to i32
  store i32 %conv3, ptr %__pyx_t_1, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i64, ptr %__pyx_v_extent, align 8, !tbaa !27
  store i64 %6, ptr %__pyx_t_2, align 8, !tbaa !27
  %7 = load i64, ptr %__pyx_t_2, align 8, !tbaa !27
  store i64 %7, ptr %__pyx_t_3, align 8, !tbaa !27
  store i64 0, ptr %__pyx_t_4, align 8, !tbaa !27
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %9 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  %cmp4 = icmp slt i64 %8, %9
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  store i64 %10, ptr %__pyx_v_i, align 8, !tbaa !27
  %11 = load ptr, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  %13 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %11, ptr align 1 %12, i64 %13, i1 false)
  %14 = load ptr, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  %15 = load i64, ptr %__pyx_v_stride, align 8, !tbaa !27
  %add.ptr = getelementptr i8, ptr %14, i64 %15
  store ptr %add.ptr, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %16 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add = add i64 %16, 1
  store i64 %add, ptr %__pyx_t_4, align 8, !tbaa !27
  br label %for.cond, !llvm.loop !208

for.end:                                          ; preds = %for.cond
  br label %__pyx_L3

if.end:                                           ; preds = %entry
  %17 = load i64, ptr %__pyx_v_extent, align 8, !tbaa !27
  store i64 %17, ptr %__pyx_t_2, align 8, !tbaa !27
  %18 = load i64, ptr %__pyx_t_2, align 8, !tbaa !27
  store i64 %18, ptr %__pyx_t_3, align 8, !tbaa !27
  store i64 0, ptr %__pyx_t_4, align 8, !tbaa !27
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc13, %if.end
  %19 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %20 = load i64, ptr %__pyx_t_3, align 8, !tbaa !27
  %cmp7 = icmp slt i64 %19, %20
  br i1 %cmp7, label %for.body9, label %for.end15

for.body9:                                        ; preds = %for.cond6
  %21 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  store i64 %21, ptr %__pyx_v_i, align 8, !tbaa !27
  %22 = load ptr, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  %add.ptr10 = getelementptr i64, ptr %23, i64 1
  %24 = load ptr, ptr %__pyx_v_strides.addr, align 8, !tbaa !5
  %add.ptr11 = getelementptr i64, ptr %24, i64 1
  %25 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %sub = sub i32 %25, 1
  %26 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %27 = load ptr, ptr %__pyx_v_item.addr, align 8, !tbaa !5
  call void @__pyx_memoryview__slice_assign_scalar(ptr noundef %22, ptr noundef %add.ptr10, ptr noundef %add.ptr11, i32 noundef %sub, i64 noundef %26, ptr noundef %27)
  %28 = load ptr, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  %29 = load i64, ptr %__pyx_v_stride, align 8, !tbaa !27
  %add.ptr12 = getelementptr i8, ptr %28, i64 %29
  store ptr %add.ptr12, ptr %__pyx_v_data.addr, align 8, !tbaa !5
  br label %for.inc13

for.inc13:                                        ; preds = %for.body9
  %30 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add14 = add i64 %30, 1
  store i64 %add14, ptr %__pyx_t_4, align 8, !tbaa !27
  br label %for.cond6, !llvm.loop !209

for.end15:                                        ; preds = %for.cond6
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %for.end15, %for.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_extent) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_stride) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_i) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_Import(ptr noundef %name, ptr noundef %from_list, i32 noundef %level) #0 {
entry:
  %name.addr = alloca ptr, align 8
  %from_list.addr = alloca ptr, align 8
  %level.addr = alloca i32, align 4
  %empty_list = alloca ptr, align 8
  %module = alloca ptr, align 8
  %global_dict = alloca ptr, align 8
  %empty_dict = alloca ptr, align 8
  %list = alloca ptr, align 8
  store ptr %name, ptr %name.addr, align 8, !tbaa !5
  store ptr %from_list, ptr %from_list.addr, align 8, !tbaa !5
  store i32 %level, ptr %level.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty_list) #13
  store ptr null, ptr %empty_list, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %module) #13
  store ptr null, ptr %module, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %global_dict) #13
  store ptr null, ptr %global_dict, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty_dict) #13
  store ptr null, ptr %empty_dict, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %list) #13
  %0 = load ptr, ptr %from_list.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %from_list.addr, align 8, !tbaa !5
  store ptr %1, ptr %list, align 8, !tbaa !5
  br label %if.end3

if.else:                                          ; preds = %entry
  %call = call ptr @PyList_New(i64 noundef 0)
  store ptr %call, ptr %empty_list, align 8, !tbaa !5
  %2 = load ptr, ptr %empty_list, align 8, !tbaa !5
  %tobool1 = icmp ne ptr %2, null
  br i1 %tobool1, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.else
  br label %bad

if.end:                                           ; preds = %if.else
  %3 = load ptr, ptr %empty_list, align 8, !tbaa !5
  store ptr %3, ptr %list, align 8, !tbaa !5
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %4 = load ptr, ptr @__pyx_m, align 8, !tbaa !5
  %call4 = call ptr @PyModule_GetDict(ptr noundef %4)
  store ptr %call4, ptr %global_dict, align 8, !tbaa !5
  %5 = load ptr, ptr %global_dict, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %5, null
  br i1 %tobool5, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end3
  br label %bad

if.end7:                                          ; preds = %if.end3
  %call8 = call ptr @PyDict_New()
  store ptr %call8, ptr %empty_dict, align 8, !tbaa !5
  %6 = load ptr, ptr %empty_dict, align 8, !tbaa !5
  %tobool9 = icmp ne ptr %6, null
  br i1 %tobool9, label %if.end11, label %if.then10

if.then10:                                        ; preds = %if.end7
  br label %bad

if.end11:                                         ; preds = %if.end7
  %7 = load i32, ptr %level.addr, align 4, !tbaa !9
  %cmp = icmp eq i32 %7, -1
  br i1 %cmp, label %if.then12, label %if.end21

if.then12:                                        ; preds = %if.end11
  %8 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %global_dict, align 8, !tbaa !5
  %10 = load ptr, ptr %empty_dict, align 8, !tbaa !5
  %11 = load ptr, ptr %list, align 8, !tbaa !5
  %call13 = call ptr @PyImport_ImportModuleLevelObject(ptr noundef %8, ptr noundef %9, ptr noundef %10, ptr noundef %11, i32 noundef 1)
  store ptr %call13, ptr %module, align 8, !tbaa !5
  %12 = load ptr, ptr %module, align 8, !tbaa !5
  %tobool14 = icmp ne ptr %12, null
  br i1 %tobool14, label %if.end20, label %if.then15

if.then15:                                        ; preds = %if.then12
  %13 = load ptr, ptr @PyExc_ImportError, align 8, !tbaa !5
  %call16 = call i32 @PyErr_ExceptionMatches(ptr noundef %13)
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.end19, label %if.then18

if.then18:                                        ; preds = %if.then15
  br label %bad

if.end19:                                         ; preds = %if.then15
  call void @PyErr_Clear()
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then12
  store i32 0, ptr %level.addr, align 4, !tbaa !9
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end11
  %14 = load ptr, ptr %module, align 8, !tbaa !5
  %tobool22 = icmp ne ptr %14, null
  br i1 %tobool22, label %if.end25, label %if.then23

if.then23:                                        ; preds = %if.end21
  %15 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %16 = load ptr, ptr %global_dict, align 8, !tbaa !5
  %17 = load ptr, ptr %empty_dict, align 8, !tbaa !5
  %18 = load ptr, ptr %list, align 8, !tbaa !5
  %19 = load i32, ptr %level.addr, align 4, !tbaa !9
  %call24 = call ptr @PyImport_ImportModuleLevelObject(ptr noundef %15, ptr noundef %16, ptr noundef %17, ptr noundef %18, i32 noundef %19)
  store ptr %call24, ptr %module, align 8, !tbaa !5
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.end21
  br label %bad

bad:                                              ; preds = %if.end25, %if.then18, %if.then10, %if.then6, %if.then2
  %20 = load ptr, ptr %empty_list, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %20)
  %21 = load ptr, ptr %empty_dict, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %21)
  %22 = load ptr, ptr %module, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %list) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty_dict) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %global_dict) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %module) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty_list) #13
  ret ptr %22
}

declare ptr @PyBytes_FromString(ptr noundef) #1

declare ptr @PyImport_ImportModuleLevelObject(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) #1

declare ptr @PySequence_Tuple(ptr noundef) #1

declare ptr @PyNumber_Add(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyBytes_GET_SIZE(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  %self = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  store ptr %0, ptr %self, align 8, !tbaa !5
  %1 = load ptr, ptr %self, align 8, !tbaa !5
  %call = call i64 @Py_SIZE(ptr noundef %1)
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #13
  ret i64 %call
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_tp_dealloc_memoryview(ptr noundef %o) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %etype = alloca ptr, align 8
  %eval = alloca ptr, align 8
  %etb = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  %_py_tmp19 = alloca ptr, align 8
  %_py_tmp28 = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  store ptr %0, ptr %p, align 8, !tbaa !5
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %1)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 1)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call2 = call ptr @Py_TYPE(ptr noundef %2)
  %tp_finalize = getelementptr inbounds %struct._typeobject, ptr %call2, i32 0, i32 47
  %3 = load ptr, ptr %tp_finalize, align 8, !tbaa !133
  %tobool3 = icmp ne ptr %3, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool3, %land.rhs ]
  %lnot = xor i1 %4, true
  %lnot4 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot4 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %land.lhs.true, label %if.end11

land.lhs.true:                                    ; preds = %land.end
  %5 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call6 = call i32 @PyObject_GC_IsFinalized(ptr noundef %5)
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end11, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %6 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call8 = call i32 @PyObject_CallFinalizerFromDealloc(ptr noundef %6)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  br label %if.end11

if.end11:                                         ; preds = %if.end, %land.lhs.true, %land.end
  %7 = load ptr, ptr %o.addr, align 8, !tbaa !5
  call void @PyObject_GC_UnTrack(ptr noundef %7)
  call void @llvm.lifetime.start.p0(i64 8, ptr %etype) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %eval) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %etb) #13
  call void @PyErr_Fetch(ptr noundef %etype, ptr noundef %eval, ptr noundef %etb)
  %8 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call12 = call i64 @Py_REFCNT(ptr noundef %9)
  %add = add i64 %call12, 1
  call void @Py_SET_REFCNT(ptr noundef %8, i64 noundef %add)
  %10 = load ptr, ptr %o.addr, align 8, !tbaa !5
  call void @__pyx_memoryview___dealloc__(ptr noundef %10)
  %11 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %12 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call13 = call i64 @Py_REFCNT(ptr noundef %12)
  %sub = sub i64 %call13, 1
  call void @Py_SET_REFCNT(ptr noundef %11, i64 noundef %sub)
  %13 = load ptr, ptr %etype, align 8, !tbaa !5
  %14 = load ptr, ptr %eval, align 8, !tbaa !5
  %15 = load ptr, ptr %etb, align 8, !tbaa !5
  call void @PyErr_Restore(ptr noundef %13, ptr noundef %14, ptr noundef %15)
  call void @llvm.lifetime.end.p0(i64 8, ptr %etb) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %eval) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %etype) #13
  br label %do.body

do.body:                                          ; preds = %if.end11
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #13
  %16 = load ptr, ptr %p, align 8, !tbaa !5
  %obj = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %16, i32 0, i32 2
  %17 = load ptr, ptr %obj, align 8, !tbaa !210
  store ptr %17, ptr %_py_tmp, align 8, !tbaa !5
  %18 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  %cmp = icmp ne ptr %18, null
  br i1 %cmp, label %if.then15, label %if.end17

if.then15:                                        ; preds = %do.body
  %19 = load ptr, ptr %p, align 8, !tbaa !5
  %obj16 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %19, i32 0, i32 2
  store ptr null, ptr %obj16, align 8, !tbaa !210
  %20 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %20)
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %if.end17
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %do.body18

do.body18:                                        ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp19) #13
  %21 = load ptr, ptr %p, align 8, !tbaa !5
  %_size = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %21, i32 0, i32 3
  %22 = load ptr, ptr %_size, align 8, !tbaa !211
  store ptr %22, ptr %_py_tmp19, align 8, !tbaa !5
  %23 = load ptr, ptr %_py_tmp19, align 8, !tbaa !5
  %cmp20 = icmp ne ptr %23, null
  br i1 %cmp20, label %if.then22, label %if.end24

if.then22:                                        ; preds = %do.body18
  %24 = load ptr, ptr %p, align 8, !tbaa !5
  %_size23 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %24, i32 0, i32 3
  store ptr null, ptr %_size23, align 8, !tbaa !211
  %25 = load ptr, ptr %_py_tmp19, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %25)
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %do.body18
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp19) #13
  br label %do.cond25

do.cond25:                                        ; preds = %if.end24
  br label %do.end26

do.end26:                                         ; preds = %do.cond25
  br label %do.body27

do.body27:                                        ; preds = %do.end26
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp28) #13
  %26 = load ptr, ptr %p, align 8, !tbaa !5
  %_array_interface = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %26, i32 0, i32 4
  %27 = load ptr, ptr %_array_interface, align 8, !tbaa !212
  store ptr %27, ptr %_py_tmp28, align 8, !tbaa !5
  %28 = load ptr, ptr %_py_tmp28, align 8, !tbaa !5
  %cmp29 = icmp ne ptr %28, null
  br i1 %cmp29, label %if.then31, label %if.end33

if.then31:                                        ; preds = %do.body27
  %29 = load ptr, ptr %p, align 8, !tbaa !5
  %_array_interface32 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %29, i32 0, i32 4
  store ptr null, ptr %_array_interface32, align 8, !tbaa !212
  %30 = load ptr, ptr %_py_tmp28, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %30)
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %do.body27
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp28) #13
  br label %do.cond34

do.cond34:                                        ; preds = %if.end33
  br label %do.end35

do.end35:                                         ; preds = %do.cond34
  %31 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call36 = call ptr @Py_TYPE(ptr noundef %31)
  %tp_free = getelementptr inbounds %struct._typeobject, ptr %call36, i32 0, i32 38
  %32 = load ptr, ptr %tp_free, align 8, !tbaa !136
  %33 = load ptr, ptr %o.addr, align 8, !tbaa !5
  call void %32(ptr noundef %33)
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.end35, %if.then10
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview___repr__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_12__repr__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview___str__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_14__str__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_tp_traverse_memoryview(ptr noundef %o, ptr noundef %v, ptr noundef %a) #0 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %e = alloca i32, align 4
  %p = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %v, ptr %v.addr, align 8, !tbaa !5
  store ptr %a, ptr %a.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %e) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  store ptr %0, ptr %p, align 8, !tbaa !5
  %1 = load ptr, ptr %p, align 8, !tbaa !5
  %obj = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %1, i32 0, i32 2
  %2 = load ptr, ptr %obj, align 8, !tbaa !210
  %tobool = icmp ne ptr %2, null
  br i1 %tobool, label %if.then, label %if.end4

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %p, align 8, !tbaa !5
  %obj1 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %4, i32 0, i32 2
  %5 = load ptr, ptr %obj1, align 8, !tbaa !210
  %6 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %call = call i32 %3(ptr noundef %5, ptr noundef %6)
  store i32 %call, ptr %e, align 4, !tbaa !9
  %7 = load i32, ptr %e, align 4, !tbaa !9
  %tobool2 = icmp ne i32 %7, 0
  br i1 %tobool2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %8 = load i32, ptr %e, align 4, !tbaa !9
  store i32 %8, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  %9 = load ptr, ptr %p, align 8, !tbaa !5
  %_size = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %9, i32 0, i32 3
  %10 = load ptr, ptr %_size, align 8, !tbaa !211
  %tobool5 = icmp ne ptr %10, null
  br i1 %tobool5, label %if.then6, label %if.end12

if.then6:                                         ; preds = %if.end4
  %11 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %12 = load ptr, ptr %p, align 8, !tbaa !5
  %_size7 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %12, i32 0, i32 3
  %13 = load ptr, ptr %_size7, align 8, !tbaa !211
  %14 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %call8 = call i32 %11(ptr noundef %13, ptr noundef %14)
  store i32 %call8, ptr %e, align 4, !tbaa !9
  %15 = load i32, ptr %e, align 4, !tbaa !9
  %tobool9 = icmp ne i32 %15, 0
  br i1 %tobool9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.then6
  %16 = load i32, ptr %e, align 4, !tbaa !9
  store i32 %16, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end11:                                         ; preds = %if.then6
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end4
  %17 = load ptr, ptr %p, align 8, !tbaa !5
  %_array_interface = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %17, i32 0, i32 4
  %18 = load ptr, ptr %_array_interface, align 8, !tbaa !212
  %tobool13 = icmp ne ptr %18, null
  br i1 %tobool13, label %if.then14, label %if.end20

if.then14:                                        ; preds = %if.end12
  %19 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %20 = load ptr, ptr %p, align 8, !tbaa !5
  %_array_interface15 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %20, i32 0, i32 4
  %21 = load ptr, ptr %_array_interface15, align 8, !tbaa !212
  %22 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %call16 = call i32 %19(ptr noundef %21, ptr noundef %22)
  store i32 %call16, ptr %e, align 4, !tbaa !9
  %23 = load i32, ptr %e, align 4, !tbaa !9
  %tobool17 = icmp ne i32 %23, 0
  br i1 %tobool17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.then14
  %24 = load i32, ptr %e, align 4, !tbaa !9
  store i32 %24, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end19:                                         ; preds = %if.then14
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end12
  %25 = load ptr, ptr %p, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %25, i32 0, i32 8
  %obj21 = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 1
  %26 = load ptr, ptr %obj21, align 8, !tbaa !213
  %tobool22 = icmp ne ptr %26, null
  br i1 %tobool22, label %if.then23, label %if.end30

if.then23:                                        ; preds = %if.end20
  %27 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %28 = load ptr, ptr %p, align 8, !tbaa !5
  %view24 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %28, i32 0, i32 8
  %obj25 = getelementptr inbounds %struct.Py_buffer, ptr %view24, i32 0, i32 1
  %29 = load ptr, ptr %obj25, align 8, !tbaa !213
  %30 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %call26 = call i32 %27(ptr noundef %29, ptr noundef %30)
  store i32 %call26, ptr %e, align 4, !tbaa !9
  %31 = load i32, ptr %e, align 4, !tbaa !9
  %tobool27 = icmp ne i32 %31, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.then23
  %32 = load i32, ptr %e, align 4, !tbaa !9
  store i32 %32, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end29:                                         ; preds = %if.then23
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end20
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end30, %if.then28, %if.then18, %if.then10, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %e) #13
  %33 = load i32, ptr %retval, align 4
  ret i32 %33
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_tp_clear_memoryview(ptr noundef %o) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %p = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  store ptr %0, ptr %p, align 8, !tbaa !5
  %1 = load ptr, ptr %p, align 8, !tbaa !5
  %obj = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %1, i32 0, i32 2
  %2 = load ptr, ptr %obj, align 8, !tbaa !210
  store ptr %2, ptr %tmp, align 8, !tbaa !5
  %3 = load ptr, ptr %p, align 8, !tbaa !5
  %obj1 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %3, i32 0, i32 2
  store ptr @_Py_NoneStruct, ptr %obj1, align 8, !tbaa !210
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %4 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %4)
  %5 = load ptr, ptr %p, align 8, !tbaa !5
  %_size = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %5, i32 0, i32 3
  %6 = load ptr, ptr %_size, align 8, !tbaa !211
  store ptr %6, ptr %tmp, align 8, !tbaa !5
  %7 = load ptr, ptr %p, align 8, !tbaa !5
  %_size2 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %7, i32 0, i32 3
  store ptr @_Py_NoneStruct, ptr %_size2, align 8, !tbaa !211
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %8 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %8)
  %9 = load ptr, ptr %p, align 8, !tbaa !5
  %_array_interface = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %9, i32 0, i32 4
  %10 = load ptr, ptr %_array_interface, align 8, !tbaa !212
  store ptr %10, ptr %tmp, align 8, !tbaa !5
  %11 = load ptr, ptr %p, align 8, !tbaa !5
  %_array_interface3 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %11, i32 0, i32 4
  store ptr @_Py_NoneStruct, ptr %_array_interface3, align 8, !tbaa !212
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %12 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %12)
  br label %do.body

do.body:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #13
  %13 = load ptr, ptr %p, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %13, i32 0, i32 8
  %obj4 = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 1
  %14 = load ptr, ptr %obj4, align 8, !tbaa !213
  store ptr %14, ptr %_py_tmp, align 8, !tbaa !5
  %15 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  %cmp = icmp ne ptr %15, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %16 = load ptr, ptr %p, align 8, !tbaa !5
  %view5 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %16, i32 0, i32 8
  %obj6 = getelementptr inbounds %struct.Py_buffer, ptr %view5, i32 0, i32 1
  store ptr null, ptr %obj6, align 8, !tbaa !213
  %17 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %17)
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_tp_new_memoryview(ptr noundef %t, ptr noundef %a, ptr noundef %k) #0 {
entry:
  %retval = alloca ptr, align 8
  %t.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %k.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %o = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %t, ptr %t.addr, align 8, !tbaa !5
  store ptr %a, ptr %a.addr, align 8, !tbaa !5
  store ptr %k, ptr %k.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %o) #13
  %0 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 19
  %1 = load i64, ptr %tp_flags, align 8, !tbaa !58
  %and = and i64 %1, 1048576
  %cmp = icmp eq i64 %and, 0
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %tp_alloc = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 36
  %3 = load ptr, ptr %tp_alloc, align 8, !tbaa !137
  %4 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %call = call ptr %3(ptr noundef %4, i64 noundef 0)
  store ptr %call, ptr %o, align 8, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyBaseObject_Type, i32 0, i32 37), align 8, !tbaa !138
  %6 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %7 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %call2 = call ptr %5(ptr noundef %6, ptr noundef %7, ptr noundef null)
  store ptr %call2, ptr %o, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load ptr, ptr %o, align 8, !tbaa !5
  %tobool3 = icmp ne ptr %8, null
  %lnot4 = xor i1 %tobool3, true
  %lnot6 = xor i1 %lnot4, true
  %lnot8 = xor i1 %lnot6, true
  %lnot.ext9 = zext i1 %lnot8 to i32
  %conv10 = sext i32 %lnot.ext9 to i64
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0)
  %tobool12 = icmp ne i64 %expval11, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end14:                                         ; preds = %if.end
  %9 = load ptr, ptr %o, align 8, !tbaa !5
  store ptr %9, ptr %p, align 8, !tbaa !5
  %10 = load ptr, ptr @__pyx_vtabptr_memoryview, align 8, !tbaa !5
  %11 = load ptr, ptr %p, align 8, !tbaa !5
  %__pyx_vtab = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %11, i32 0, i32 1
  store ptr %10, ptr %__pyx_vtab, align 8, !tbaa !121
  %12 = load ptr, ptr %p, align 8, !tbaa !5
  %obj = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %12, i32 0, i32 2
  store ptr @_Py_NoneStruct, ptr %obj, align 8, !tbaa !210
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %13 = load ptr, ptr %p, align 8, !tbaa !5
  %_size = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %13, i32 0, i32 3
  store ptr @_Py_NoneStruct, ptr %_size, align 8, !tbaa !211
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %14 = load ptr, ptr %p, align 8, !tbaa !5
  %_array_interface = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %14, i32 0, i32 4
  store ptr @_Py_NoneStruct, ptr %_array_interface, align 8, !tbaa !212
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %15 = load ptr, ptr %p, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %15, i32 0, i32 8
  %obj15 = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 1
  store ptr null, ptr %obj15, align 8, !tbaa !213
  %16 = load ptr, ptr %o, align 8, !tbaa !5
  %17 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %18 = load ptr, ptr %k.addr, align 8, !tbaa !5
  %call16 = call i32 @__pyx_memoryview___cinit__(ptr noundef %16, ptr noundef %17, ptr noundef %18)
  %cmp17 = icmp slt i32 %call16, 0
  %lnot19 = xor i1 %cmp17, true
  %lnot21 = xor i1 %lnot19, true
  %lnot.ext22 = zext i1 %lnot21 to i32
  %conv23 = sext i32 %lnot.ext22 to i64
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0)
  %tobool25 = icmp ne i64 %expval24, 0
  br i1 %tobool25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end14
  br label %bad

if.end27:                                         ; preds = %if.end14
  %19 = load ptr, ptr %o, align 8, !tbaa !5
  store ptr %19, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

bad:                                              ; preds = %if.then26
  %20 = load ptr, ptr %o, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %20)
  store ptr null, ptr %o, align 8, !tbaa !5
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %bad, %if.end27, %if.then13
  call void @llvm.lifetime.end.p0(i64 8, ptr %o) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  %21 = load ptr, ptr %retval, align 8
  ret ptr %21
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_memoryview___dealloc__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_2__dealloc__(ptr noundef %0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_2__dealloc__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_i = alloca i32, align 4
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %obj = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 2
  %1 = load ptr, ptr %obj, align 8, !tbaa !210
  %cmp = icmp ne ptr %1, @_Py_NoneStruct
  %conv = zext i1 %cmp to i32
  store i32 %conv, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp1 = icmp ne i32 %2, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_2, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %4, i32 0, i32 8
  call void @PyBuffer_Release(ptr noundef %view)
  br label %__pyx_L3

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view3 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %5, i32 0, i32 8
  %obj4 = getelementptr inbounds %struct.Py_buffer, ptr %view3, i32 0, i32 1
  %6 = load ptr, ptr %obj4, align 8, !tbaa !214
  %cmp5 = icmp eq ptr %6, @_Py_NoneStruct
  %conv6 = zext i1 %cmp5 to i32
  %cmp7 = icmp ne i32 %conv6, 0
  %conv8 = zext i1 %cmp7 to i32
  store i32 %conv8, ptr %__pyx_t_2, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool9 = icmp ne i32 %7, 0
  br i1 %tobool9, label %if.then10, label %if.end13

if.then10:                                        ; preds = %if.end
  %8 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view11 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %8, i32 0, i32 8
  %obj12 = getelementptr inbounds %struct.Py_buffer, ptr %view11, i32 0, i32 1
  store ptr null, ptr %obj12, align 8, !tbaa !214
  call void @Py_DECREF(ptr noundef @_Py_NoneStruct)
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %if.end
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end13, %if.then
  %9 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %lock = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %9, i32 0, i32 5
  %10 = load ptr, ptr %lock, align 8, !tbaa !215
  %cmp14 = icmp ne ptr %10, null
  %conv15 = zext i1 %cmp14 to i32
  %cmp16 = icmp ne i32 %conv15, 0
  %conv17 = zext i1 %cmp16 to i32
  store i32 %conv17, ptr %__pyx_t_2, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool18 = icmp ne i32 %11, 0
  br i1 %tobool18, label %if.then19, label %if.end46

if.then19:                                        ; preds = %__pyx_L3
  %12 = load i32, ptr @__pyx_memoryview_thread_locks_used, align 4, !tbaa !9
  store i32 %12, ptr %__pyx_t_3, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %13, ptr %__pyx_t_4, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_5, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then19
  %14 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp20 = icmp slt i32 %14, %15
  br i1 %cmp20, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %16 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  store i32 %16, ptr %__pyx_v_i, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom = sext i32 %17 to i64
  %arrayidx = getelementptr [8 x ptr], ptr @__pyx_memoryview_thread_locks, i64 0, i64 %idxprom
  %18 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %lock22 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %19, i32 0, i32 5
  %20 = load ptr, ptr %lock22, align 8, !tbaa !215
  %cmp23 = icmp eq ptr %18, %20
  %conv24 = zext i1 %cmp23 to i32
  %cmp25 = icmp ne i32 %conv24, 0
  %conv26 = zext i1 %cmp25 to i32
  store i32 %conv26, ptr %__pyx_t_2, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool27 = icmp ne i32 %21, 0
  br i1 %tobool27, label %if.then28, label %if.end44

if.then28:                                        ; preds = %for.body
  %22 = load i32, ptr @__pyx_memoryview_thread_locks_used, align 4, !tbaa !9
  %sub = sub i32 %22, 1
  store i32 %sub, ptr @__pyx_memoryview_thread_locks_used, align 4, !tbaa !9
  %23 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %24 = load i32, ptr @__pyx_memoryview_thread_locks_used, align 4, !tbaa !9
  %cmp29 = icmp ne i32 %23, %24
  %conv30 = zext i1 %cmp29 to i32
  %cmp31 = icmp ne i32 %conv30, 0
  %conv32 = zext i1 %cmp31 to i32
  store i32 %conv32, ptr %__pyx_t_2, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool33 = icmp ne i32 %25, 0
  br i1 %tobool33, label %if.then34, label %if.end43

if.then34:                                        ; preds = %if.then28
  %26 = load i32, ptr @__pyx_memoryview_thread_locks_used, align 4, !tbaa !9
  %idxprom35 = sext i32 %26 to i64
  %arrayidx36 = getelementptr [8 x ptr], ptr @__pyx_memoryview_thread_locks, i64 0, i64 %idxprom35
  %27 = load ptr, ptr %arrayidx36, align 8, !tbaa !5
  store ptr %27, ptr %__pyx_t_6, align 8, !tbaa !5
  %28 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom37 = sext i32 %28 to i64
  %arrayidx38 = getelementptr [8 x ptr], ptr @__pyx_memoryview_thread_locks, i64 0, i64 %idxprom37
  %29 = load ptr, ptr %arrayidx38, align 8, !tbaa !5
  store ptr %29, ptr %__pyx_t_7, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %31 = load i32, ptr %__pyx_v_i, align 4, !tbaa !9
  %idxprom39 = sext i32 %31 to i64
  %arrayidx40 = getelementptr [8 x ptr], ptr @__pyx_memoryview_thread_locks, i64 0, i64 %idxprom39
  store ptr %30, ptr %arrayidx40, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %33 = load i32, ptr @__pyx_memoryview_thread_locks_used, align 4, !tbaa !9
  %idxprom41 = sext i32 %33 to i64
  %arrayidx42 = getelementptr [8 x ptr], ptr @__pyx_memoryview_thread_locks, i64 0, i64 %idxprom41
  store ptr %32, ptr %arrayidx42, align 8, !tbaa !5
  br label %if.end43

if.end43:                                         ; preds = %if.then34, %if.then28
  br label %__pyx_L6_break

if.end44:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end44
  %34 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %add = add i32 %34, 1
  store i32 %add, ptr %__pyx_t_5, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !216

for.end:                                          ; preds = %for.cond
  %35 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %lock45 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %35, i32 0, i32 5
  %36 = load ptr, ptr %lock45, align 8, !tbaa !215
  call void @PyThread_free_lock(ptr noundef %36)
  br label %__pyx_L6_break

__pyx_L6_break:                                   ; preds = %for.end, %if.end43
  br label %if.end46

if.end46:                                         ; preds = %__pyx_L6_break, %__pyx_L3
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_i) #13
  ret void
}

declare void @PyBuffer_Release(ptr noundef) #1

declare void @PyThread_free_lock(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_12__repr__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %2 = load ptr, ptr @__pyx_n_s_base, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %1, ptr noundef %2)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 614, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12051, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %9 = load ptr, ptr @__pyx_n_s_class, align 8, !tbaa !5
  %call4 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %8, ptr noundef %9)
  store ptr %call4, ptr %__pyx_t_2, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %10, null
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  %11 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %11, ptr %__pyx_filename, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 614, ptr %__pyx_lineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12053, ptr %__pyx_clineno, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end16:                                         ; preds = %if.end
  %15 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %15)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %17 = load ptr, ptr @__pyx_n_s_name_2, align 8, !tbaa !5
  %call17 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %16, ptr noundef %17)
  store ptr %call17, ptr %__pyx_t_1, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %18, null
  %lnot19 = xor i1 %tobool18, true
  %lnot21 = xor i1 %lnot19, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end16
  %19 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %19, ptr %__pyx_filename, align 8, !tbaa !5
  %20 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 614, ptr %__pyx_lineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12056, ptr %__pyx_clineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end29:                                         ; preds = %if.end16
  %23 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %23)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %24 = load ptr, ptr @__pyx_builtin_id, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call30 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %24, ptr noundef %25)
  store ptr %call30, ptr %__pyx_t_2, align 8, !tbaa !5
  %26 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool31 = icmp ne ptr %26, null
  %lnot32 = xor i1 %tobool31, true
  %lnot34 = xor i1 %lnot32, true
  %lnot36 = xor i1 %lnot34, true
  %lnot.ext37 = zext i1 %lnot36 to i32
  %conv38 = sext i32 %lnot.ext37 to i64
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0)
  %tobool40 = icmp ne i64 %expval39, 0
  br i1 %tobool40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.end29
  %27 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %27, ptr %__pyx_filename, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 615, ptr %__pyx_lineno, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12067, ptr %__pyx_clineno, align 4, !tbaa !9
  %30 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end42:                                         ; preds = %if.end29
  %call43 = call ptr @PyTuple_New(i64 noundef 2)
  store ptr %call43, ptr %__pyx_t_3, align 8, !tbaa !5
  %31 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool44 = icmp ne ptr %31, null
  %lnot45 = xor i1 %tobool44, true
  %lnot47 = xor i1 %lnot45, true
  %lnot49 = xor i1 %lnot47, true
  %lnot.ext50 = zext i1 %lnot49 to i32
  %conv51 = sext i32 %lnot.ext50 to i64
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 0)
  %tobool53 = icmp ne i64 %expval52, 0
  br i1 %tobool53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end42
  %32 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %32, ptr %__pyx_filename, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 614, ptr %__pyx_lineno, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12077, ptr %__pyx_clineno, align 4, !tbaa !9
  %35 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end55:                                         ; preds = %if.end42
  %36 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %37 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %36, i64 noundef 0, ptr noundef %37)
  %38 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %38, i64 noundef 1, ptr noundef %39)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %40 = load ptr, ptr @__pyx_kp_s_MemoryView_of_r_at_0x_x, align 8, !tbaa !5
  %41 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call56 = call ptr @PyUnicode_Format(ptr noundef %40, ptr noundef %41)
  store ptr %call56, ptr %__pyx_t_2, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool57 = icmp ne ptr %42, null
  %lnot58 = xor i1 %tobool57, true
  %lnot60 = xor i1 %lnot58, true
  %lnot62 = xor i1 %lnot60, true
  %lnot.ext63 = zext i1 %lnot62 to i32
  %conv64 = sext i32 %lnot.ext63 to i64
  %expval65 = call i64 @llvm.expect.i64(i64 %conv64, i64 0)
  %tobool66 = icmp ne i64 %expval65, 0
  br i1 %tobool66, label %if.then67, label %if.end68

if.then67:                                        ; preds = %if.end55
  %43 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %43, ptr %__pyx_filename, align 8, !tbaa !5
  %44 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 614, ptr %__pyx_lineno, align 4, !tbaa !9
  %45 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12085, ptr %__pyx_clineno, align 4, !tbaa !9
  %46 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end68:                                         ; preds = %if.end55
  %47 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %47)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %48 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %48, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then67, %if.then54, %if.then41, %if.then28, %if.then15, %if.then
  %49 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %49)
  %50 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %50)
  %51 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %51)
  %52 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %53 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %54 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.164, i32 noundef %52, i32 noundef %53, ptr noundef %54)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end68
  %55 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %55
}

; Function Attrs: nounwind uwtable
define internal i64 @__pyx_memoryview___len__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca i64, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call i64 @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_10__len__(ptr noundef %0)
  store i64 %call, ptr %__pyx_r, align 8, !tbaa !27
  %1 = load i64, ptr %__pyx_r, align 8, !tbaa !27
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret i64 %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_sq_item_memoryview(ptr noundef %o, i64 noundef %i) #0 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %i.addr = alloca i64, align 8
  %r = alloca ptr, align 8
  %x = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store i64 %i, ptr %i.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #13
  %0 = load i64, ptr %i.addr, align 8, !tbaa !27
  %call = call ptr @PyLong_FromSsize_t(i64 noundef %0)
  store ptr %call, ptr %x, align 8, !tbaa !5
  %1 = load ptr, ptr %x, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call1 = call ptr @Py_TYPE(ptr noundef %2)
  %tp_as_mapping = getelementptr inbounds %struct._typeobject, ptr %call1, i32 0, i32 12
  %3 = load ptr, ptr %tp_as_mapping, align 8, !tbaa !147
  %mp_subscript = getelementptr inbounds %struct.PyMappingMethods, ptr %3, i32 0, i32 1
  %4 = load ptr, ptr %mp_subscript, align 8, !tbaa !148
  %5 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %6 = load ptr, ptr %x, align 8, !tbaa !5
  %call2 = call ptr %4(ptr noundef %5, ptr noundef %6)
  store ptr %call2, ptr %r, align 8, !tbaa !5
  %7 = load ptr, ptr %x, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %7)
  %8 = load ptr, ptr %r, align 8, !tbaa !5
  store ptr %8, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #13
  %9 = load ptr, ptr %retval, align 8
  ret ptr %9
}

; Function Attrs: nounwind uwtable
define internal i64 @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_10__len__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca i64, align 8
  %__pyx_t_1 = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 5
  %1 = load i32, ptr %ndim, align 4, !tbaa !123
  %cmp = icmp sge i32 %1, 1
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view3 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %3, i32 0, i32 8
  %shape = getelementptr inbounds %struct.Py_buffer, ptr %view3, i32 0, i32 7
  %4 = load ptr, ptr %shape, align 8, !tbaa !189
  %arrayidx = getelementptr i64, ptr %4, i64 0
  %5 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %5, ptr %__pyx_r, align 8, !tbaa !27
  br label %__pyx_L0

if.end:                                           ; preds = %entry
  store i64 0, ptr %__pyx_r, align 8, !tbaa !27
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %if.end, %if.then
  %6 = load i64, ptr %__pyx_r, align 8, !tbaa !27
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret i64 %6
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview___getitem__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_index) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_index.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_index, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_4__getitem__(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %2
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_mp_ass_subscript_memoryview(ptr noundef %o, ptr noundef %i, ptr noundef %v) #0 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %i.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %i, ptr %i.addr, align 8, !tbaa !5
  store ptr %v, ptr %v.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %i.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %call = call i32 @__pyx_memoryview___setitem__(ptr noundef %1, ptr noundef %2, ptr noundef %3)
  store i32 %call, ptr %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %4 = load ptr, ptr @PyExc_NotImplementedError, align 8, !tbaa !5
  %5 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call1 = call ptr @Py_TYPE(ptr noundef %5)
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call1, i32 0, i32 1
  %6 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %call2 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %4, ptr noundef @.str.86, ptr noundef %6)
  store i32 -1, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, ptr %retval, align 4
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_4__getitem__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_index) #0 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_index.addr = alloca ptr, align 8
  %__pyx_v_have_slices = alloca ptr, align 8
  %__pyx_v_indices = alloca ptr, align 8
  %__pyx_v_itemp = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %sequence = alloca ptr, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_index, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_have_slices) #13
  store ptr null, ptr %__pyx_v_have_slices, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_indices) #13
  store ptr null, ptr %__pyx_v_indices, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_itemp) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_builtin_Ellipsis, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, %1
  %conv = zext i1 %cmp to i32
  store i32 %conv, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp1 = icmp ne i32 %2, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_2, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %4)
  %5 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %5)
  %6 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %6, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %8, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 5
  %9 = load i32, ptr %ndim, align 4, !tbaa !123
  %call = call ptr @_unellipsify(ptr noundef %7, i32 noundef %9)
  store ptr %call, ptr %__pyx_t_3, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool3 = icmp ne ptr %10, null
  %lnot = xor i1 %tobool3, true
  %lnot4 = xor i1 %lnot, true
  %lnot5 = xor i1 %lnot4, true
  %lnot.ext = zext i1 %lnot5 to i32
  %conv6 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv6, i64 0)
  %tobool7 = icmp ne i64 %expval, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  %11 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %11, ptr %__pyx_filename, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 409, ptr %__pyx_lineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9288, ptr %__pyx_clineno, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end9:                                          ; preds = %if.end
  %15 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %cmp10 = icmp ne ptr %15, @_Py_NoneStruct
  %lnot12 = xor i1 %cmp10, true
  %lnot14 = xor i1 %lnot12, true
  %lnot.ext15 = zext i1 %lnot14 to i32
  %conv16 = sext i32 %lnot.ext15 to i64
  %expval17 = call i64 @llvm.expect.i64(i64 %conv16, i64 1)
  %tobool18 = icmp ne i64 %expval17, 0
  br i1 %tobool18, label %if.then19, label %if.else43

if.then19:                                        ; preds = %if.end9
  call void @llvm.lifetime.start.p0(i64 8, ptr %sequence) #13
  %16 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %16, ptr %sequence, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #13
  %17 = load ptr, ptr %sequence, align 8, !tbaa !5
  %call20 = call i64 @Py_SIZE(ptr noundef %17)
  store i64 %call20, ptr %size, align 8, !tbaa !27
  %18 = load i64, ptr %size, align 8, !tbaa !27
  %cmp21 = icmp ne i64 %18, 2
  %lnot23 = xor i1 %cmp21, true
  %lnot25 = xor i1 %lnot23, true
  %lnot.ext26 = zext i1 %lnot25 to i32
  %conv27 = sext i32 %lnot.ext26 to i64
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 0)
  %tobool29 = icmp ne i64 %expval28, 0
  br i1 %tobool29, label %if.then30, label %if.end39

if.then30:                                        ; preds = %if.then19
  %19 = load i64, ptr %size, align 8, !tbaa !27
  %cmp31 = icmp sgt i64 %19, 2
  br i1 %cmp31, label %if.then33, label %if.else

if.then33:                                        ; preds = %if.then30
  call void @__Pyx_RaiseTooManyValuesError(i64 noundef 2)
  br label %if.end38

if.else:                                          ; preds = %if.then30
  %20 = load i64, ptr %size, align 8, !tbaa !27
  %cmp34 = icmp sge i64 %20, 0
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.else
  %21 = load i64, ptr %size, align 8, !tbaa !27
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %21)
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then33
  %22 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %22, ptr %__pyx_filename, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 409, ptr %__pyx_lineno, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9296, ptr %__pyx_clineno, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end39:                                         ; preds = %if.then19
  %26 = load ptr, ptr %sequence, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %26, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0
  %27 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %27, ptr %__pyx_t_4, align 8, !tbaa !5
  %28 = load ptr, ptr %sequence, align 8, !tbaa !5
  %ob_item40 = getelementptr inbounds %struct.PyTupleObject, ptr %28, i32 0, i32 1
  %arrayidx41 = getelementptr [1 x ptr], ptr %ob_item40, i64 0, i64 1
  %29 = load ptr, ptr %arrayidx41, align 8, !tbaa !5
  store ptr %29, ptr %__pyx_t_5, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %30)
  %31 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %31)
  %32 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %32)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end38, %if.end39
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %sequence) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup99 [
    i32 0, label %cleanup.cont
    i32 3, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end44

if.else43:                                        ; preds = %if.end9
  call void @__Pyx_RaiseNoneNotIterableError()
  %33 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %33, ptr %__pyx_filename, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 409, ptr %__pyx_lineno, align 4, !tbaa !9
  %35 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9311, ptr %__pyx_clineno, align 4, !tbaa !9
  %36 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end44:                                         ; preds = %cleanup.cont
  %37 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %37, ptr %__pyx_v_have_slices, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %38 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr %38, ptr %__pyx_v_indices, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_v_have_slices, align 8, !tbaa !5
  %call45 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %39)
  store i32 %call45, ptr %__pyx_t_2, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp46 = icmp slt i32 %40, 0
  %lnot48 = xor i1 %cmp46, true
  %lnot50 = xor i1 %lnot48, true
  %lnot.ext51 = zext i1 %lnot50 to i32
  %conv52 = sext i32 %lnot.ext51 to i64
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0)
  %tobool54 = icmp ne i64 %expval53, 0
  br i1 %tobool54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.end44
  %41 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %41, ptr %__pyx_filename, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 412, ptr %__pyx_lineno, align 4, !tbaa !9
  %43 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9325, ptr %__pyx_clineno, align 4, !tbaa !9
  %44 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end56:                                         ; preds = %if.end44
  %45 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.then58, label %if.end72

if.then58:                                        ; preds = %if.end56
  %46 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %46)
  %47 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %48 = load ptr, ptr %__pyx_v_indices, align 8, !tbaa !5
  %call59 = call ptr @__pyx_memview_slice(ptr noundef %47, ptr noundef %48)
  store ptr %call59, ptr %__pyx_t_3, align 8, !tbaa !5
  %49 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool60 = icmp ne ptr %49, null
  %lnot61 = xor i1 %tobool60, true
  %lnot63 = xor i1 %lnot61, true
  %lnot65 = xor i1 %lnot63, true
  %lnot.ext66 = zext i1 %lnot65 to i32
  %conv67 = sext i32 %lnot.ext66 to i64
  %expval68 = call i64 @llvm.expect.i64(i64 %conv67, i64 0)
  %tobool69 = icmp ne i64 %expval68, 0
  br i1 %tobool69, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.then58
  %50 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %50, ptr %__pyx_filename, align 8, !tbaa !5
  %51 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 413, ptr %__pyx_lineno, align 4, !tbaa !9
  %52 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9336, ptr %__pyx_clineno, align 4, !tbaa !9
  %53 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end71:                                         ; preds = %if.then58
  %54 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %54, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %__pyx_L0

if.end72:                                         ; preds = %if.end56
  %55 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %__pyx_vtab = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %55, i32 0, i32 1
  %56 = load ptr, ptr %__pyx_vtab, align 8, !tbaa !121
  %get_item_pointer = getelementptr inbounds %struct.__pyx_vtabstruct_memoryview, ptr %56, i32 0, i32 0
  %57 = load ptr, ptr %get_item_pointer, align 8, !tbaa !38
  %58 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %59 = load ptr, ptr %__pyx_v_indices, align 8, !tbaa !5
  %call73 = call ptr %57(ptr noundef %58, ptr noundef %59)
  store ptr %call73, ptr %__pyx_t_6, align 8, !tbaa !5
  %60 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %cmp74 = icmp eq ptr %60, null
  %lnot76 = xor i1 %cmp74, true
  %lnot78 = xor i1 %lnot76, true
  %lnot.ext79 = zext i1 %lnot78 to i32
  %conv80 = sext i32 %lnot.ext79 to i64
  %expval81 = call i64 @llvm.expect.i64(i64 %conv80, i64 0)
  %tobool82 = icmp ne i64 %expval81, 0
  br i1 %tobool82, label %if.then83, label %if.end84

if.then83:                                        ; preds = %if.end72
  %61 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %61, ptr %__pyx_filename, align 8, !tbaa !5
  %62 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 415, ptr %__pyx_lineno, align 4, !tbaa !9
  %63 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9359, ptr %__pyx_clineno, align 4, !tbaa !9
  %64 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end84:                                         ; preds = %if.end72
  %65 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %65, ptr %__pyx_v_itemp, align 8, !tbaa !5
  %66 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %66)
  %67 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %__pyx_vtab85 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %67, i32 0, i32 1
  %68 = load ptr, ptr %__pyx_vtab85, align 8, !tbaa !121
  %convert_item_to_object = getelementptr inbounds %struct.__pyx_vtabstruct_memoryview, ptr %68, i32 0, i32 5
  %69 = load ptr, ptr %convert_item_to_object, align 8, !tbaa !44
  %70 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %71 = load ptr, ptr %__pyx_v_itemp, align 8, !tbaa !5
  %call86 = call ptr %69(ptr noundef %70, ptr noundef %71)
  store ptr %call86, ptr %__pyx_t_3, align 8, !tbaa !5
  %72 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool87 = icmp ne ptr %72, null
  %lnot88 = xor i1 %tobool87, true
  %lnot90 = xor i1 %lnot88, true
  %lnot92 = xor i1 %lnot90, true
  %lnot.ext93 = zext i1 %lnot92 to i32
  %conv94 = sext i32 %lnot.ext93 to i64
  %expval95 = call i64 @llvm.expect.i64(i64 %conv94, i64 0)
  %tobool96 = icmp ne i64 %expval95, 0
  br i1 %tobool96, label %if.then97, label %if.end98

if.then97:                                        ; preds = %if.end84
  %73 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %73, ptr %__pyx_filename, align 8, !tbaa !5
  %74 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 416, ptr %__pyx_lineno, align 4, !tbaa !9
  %75 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9370, ptr %__pyx_clineno, align 4, !tbaa !9
  %76 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end98:                                         ; preds = %if.end84
  %77 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %77, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %cleanup, %if.then97, %if.then83, %if.then70, %if.then55, %if.else43, %if.then8
  %78 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %78)
  %79 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %79)
  %80 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %80)
  %81 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %82 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %83 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.165, i32 noundef %81, i32 noundef %82, ptr noundef %83)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end98, %if.end71, %if.then
  %84 = load ptr, ptr %__pyx_v_have_slices, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %84)
  %85 = load ptr, ptr %__pyx_v_indices, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %85)
  %86 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  store ptr %86, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup99

cleanup99:                                        ; preds = %__pyx_L0, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_itemp) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_have_slices) #13
  %87 = load ptr, ptr %retval, align 8
  ret ptr %87
}

; Function Attrs: nounwind uwtable
define internal ptr @_unellipsify(ptr noundef %__pyx_v_index, i32 noundef %__pyx_v_ndim) #0 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_v_index.addr = alloca ptr, align 8
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_tup = alloca ptr, align 8
  %__pyx_v_result = alloca ptr, align 8
  %__pyx_v_have_slices = alloca i32, align 4
  %__pyx_v_seen_ellipsis = alloca i32, align 4
  %__pyx_v_idx = alloca ptr, align 8
  %__pyx_v_item = alloca ptr, align 8
  %__pyx_v_nslices = alloca i64, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca i64, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca i64, align 8
  %__pyx_t_9 = alloca i32, align 4
  %__pyx_t_10 = alloca i32, align 4
  %__pyx_t_11 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %exc_type = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %tmp135 = alloca ptr, align 8
  %__pyx_temp = alloca i64, align 8
  %__pyx_temp368 = alloca i64, align 8
  store ptr %__pyx_v_index, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_tup) #13
  store ptr null, ptr %__pyx_v_tup, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_result) #13
  store ptr null, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_have_slices) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_seen_ellipsis) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_idx) #13
  store ptr null, ptr %__pyx_v_idx, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_item) #13
  store ptr null, ptr %__pyx_v_item, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_nslices) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_11) #13
  store ptr null, ptr %__pyx_t_11, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 67108864)
  store i32 %call1, ptr %__pyx_t_1, align 4, !tbaa !9
  %1 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp = icmp ne i32 %1, 0
  %lnot = xor i1 %cmp, true
  %lnot.ext = zext i1 %lnot to i32
  %cmp2 = icmp ne i32 %lnot.ext, 0
  %conv = zext i1 %cmp2 to i32
  store i32 %conv, ptr %__pyx_t_2, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end14

if.then:                                          ; preds = %entry
  %call3 = call ptr @PyTuple_New(i64 noundef 1)
  store ptr %call3, ptr %__pyx_t_3, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %3, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool12 = icmp ne i64 %expval, 0
  br i1 %tobool12, label %if.then13, label %if.end

if.then13:                                        ; preds = %if.then
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 674, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12828, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %if.then
  %8 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %8)
  %9 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %9, i64 noundef 0, ptr noundef %10)
  %11 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %11, ptr %__pyx_v_tup, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %__pyx_L3

if.end14:                                         ; preds = %entry
  %12 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %12)
  %13 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  store ptr %13, ptr %__pyx_v_tup, align 8, !tbaa !5
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end14, %if.end
  %call15 = call ptr @PyList_New(i64 noundef 0)
  store ptr %call15, ptr %__pyx_t_3, align 8, !tbaa !5
  %14 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool16 = icmp ne ptr %14, null
  %lnot17 = xor i1 %tobool16, true
  %lnot19 = xor i1 %lnot17, true
  %lnot21 = xor i1 %lnot19, true
  %lnot.ext22 = zext i1 %lnot21 to i32
  %conv23 = sext i32 %lnot.ext22 to i64
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0)
  %tobool25 = icmp ne i64 %expval24, 0
  br i1 %tobool25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %__pyx_L3
  %15 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %15, ptr %__pyx_filename, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 678, ptr %__pyx_lineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12866, ptr %__pyx_clineno, align 4, !tbaa !9
  %18 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end27:                                         ; preds = %__pyx_L3
  %19 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %19, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  store i32 0, ptr %__pyx_v_have_slices, align 4, !tbaa !9
  store i32 0, ptr %__pyx_v_seen_ellipsis, align 4, !tbaa !9
  %20 = load ptr, ptr @__pyx_int_0, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %20)
  %21 = load ptr, ptr @__pyx_int_0, align 8, !tbaa !5
  store ptr %21, ptr %__pyx_t_3, align 8, !tbaa !5
  %22 = load ptr, ptr %__pyx_v_tup, align 8, !tbaa !5
  %call28 = call i32 @Py_IS_TYPE(ptr noundef %22, ptr noundef @PyList_Type)
  %tobool29 = icmp ne i32 %call28, 0
  %lnot30 = xor i1 %tobool29, true
  %lnot32 = xor i1 %lnot30, true
  %lnot.ext33 = zext i1 %lnot32 to i32
  %conv34 = sext i32 %lnot.ext33 to i64
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 1)
  %tobool36 = icmp ne i64 %expval35, 0
  br i1 %tobool36, label %if.then39, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end27
  %23 = load ptr, ptr %__pyx_v_tup, align 8, !tbaa !5
  %call37 = call i32 @Py_IS_TYPE(ptr noundef %23, ptr noundef @PyTuple_Type)
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.then39, label %if.else

if.then39:                                        ; preds = %lor.lhs.false, %if.end27
  %24 = load ptr, ptr %__pyx_v_tup, align 8, !tbaa !5
  store ptr %24, ptr %__pyx_t_4, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %25)
  store i64 0, ptr %__pyx_t_5, align 8, !tbaa !27
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  br label %if.end66

if.else:                                          ; preds = %lor.lhs.false
  store i64 -1, ptr %__pyx_t_5, align 8, !tbaa !27
  %26 = load ptr, ptr %__pyx_v_tup, align 8, !tbaa !5
  %call40 = call ptr @PyObject_GetIter(ptr noundef %26)
  store ptr %call40, ptr %__pyx_t_4, align 8, !tbaa !5
  %27 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool41 = icmp ne ptr %27, null
  %lnot42 = xor i1 %tobool41, true
  %lnot44 = xor i1 %lnot42, true
  %lnot46 = xor i1 %lnot44, true
  %lnot.ext47 = zext i1 %lnot46 to i32
  %conv48 = sext i32 %lnot.ext47 to i64
  %expval49 = call i64 @llvm.expect.i64(i64 %conv48, i64 0)
  %tobool50 = icmp ne i64 %expval49, 0
  br i1 %tobool50, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.else
  %28 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %28, ptr %__pyx_filename, align 8, !tbaa !5
  %29 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 681, ptr %__pyx_lineno, align 4, !tbaa !9
  %30 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12902, ptr %__pyx_clineno, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end52:                                         ; preds = %if.else
  %32 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call53 = call ptr @Py_TYPE(ptr noundef %32)
  %tp_iternext = getelementptr inbounds %struct._typeobject, ptr %call53, i32 0, i32 26
  %33 = load ptr, ptr %tp_iternext, align 8, !tbaa !115
  store ptr %33, ptr %__pyx_t_6, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool54 = icmp ne ptr %34, null
  %lnot55 = xor i1 %tobool54, true
  %lnot57 = xor i1 %lnot55, true
  %lnot59 = xor i1 %lnot57, true
  %lnot.ext60 = zext i1 %lnot59 to i32
  %conv61 = sext i32 %lnot.ext60 to i64
  %expval62 = call i64 @llvm.expect.i64(i64 %conv61, i64 0)
  %tobool63 = icmp ne i64 %expval62, 0
  br i1 %tobool63, label %if.then64, label %if.end65

if.then64:                                        ; preds = %if.end52
  %35 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %35, ptr %__pyx_filename, align 8, !tbaa !5
  %36 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 681, ptr %__pyx_lineno, align 4, !tbaa !9
  %37 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12904, ptr %__pyx_clineno, align 4, !tbaa !9
  %38 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end65:                                         ; preds = %if.end52
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then39
  br label %for.cond

for.cond:                                         ; preds = %__pyx_L6, %if.end66
  %39 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool67 = icmp ne ptr %39, null
  %lnot68 = xor i1 %tobool67, true
  %lnot70 = xor i1 %lnot68, true
  %lnot72 = xor i1 %lnot70, true
  %lnot.ext73 = zext i1 %lnot72 to i32
  %conv74 = sext i32 %lnot.ext73 to i64
  %expval75 = call i64 @llvm.expect.i64(i64 %conv74, i64 1)
  %tobool76 = icmp ne i64 %expval75, 0
  br i1 %tobool76, label %if.then77, label %if.else103

if.then77:                                        ; preds = %for.cond
  %40 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call78 = call i32 @Py_IS_TYPE(ptr noundef %40, ptr noundef @PyList_Type)
  %tobool79 = icmp ne i32 %call78, 0
  %lnot80 = xor i1 %tobool79, true
  %lnot82 = xor i1 %lnot80, true
  %lnot.ext83 = zext i1 %lnot82 to i32
  %conv84 = sext i32 %lnot.ext83 to i64
  %expval85 = call i64 @llvm.expect.i64(i64 %conv84, i64 1)
  %tobool86 = icmp ne i64 %expval85, 0
  br i1 %tobool86, label %if.then87, label %if.else93

if.then87:                                        ; preds = %if.then77
  %41 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %42 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call88 = call i64 @PyList_GET_SIZE(ptr noundef %42)
  %cmp89 = icmp sge i64 %41, %call88
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.then87
  br label %for.end329

if.end92:                                         ; preds = %if.then87
  %43 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyListObject, ptr %43, i32 0, i32 1
  %44 = load ptr, ptr %ob_item, align 8, !tbaa !116
  %45 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %arrayidx = getelementptr ptr, ptr %44, i64 %45
  %46 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %46, ptr %__pyx_t_7, align 8, !tbaa !5
  %47 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %47)
  %48 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %inc = add i64 %48, 1
  store i64 %inc, ptr %__pyx_t_5, align 8, !tbaa !27
  br label %if.end102

if.else93:                                        ; preds = %if.then77
  %49 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %50 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call94 = call i64 @PyTuple_GET_SIZE(ptr noundef %50)
  %cmp95 = icmp sge i64 %49, %call94
  br i1 %cmp95, label %if.then97, label %if.end98

if.then97:                                        ; preds = %if.else93
  br label %for.end329

if.end98:                                         ; preds = %if.else93
  %51 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %ob_item99 = getelementptr inbounds %struct.PyTupleObject, ptr %51, i32 0, i32 1
  %52 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %arrayidx100 = getelementptr [1 x ptr], ptr %ob_item99, i64 0, i64 %52
  %53 = load ptr, ptr %arrayidx100, align 8, !tbaa !5
  store ptr %53, ptr %__pyx_t_7, align 8, !tbaa !5
  %54 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %54)
  %55 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %inc101 = add i64 %55, 1
  store i64 %inc101, ptr %__pyx_t_5, align 8, !tbaa !27
  br label %if.end102

if.end102:                                        ; preds = %if.end98, %if.end92
  br label %if.end133

if.else103:                                       ; preds = %for.cond
  %56 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call104 = call ptr %56(ptr noundef %57)
  store ptr %call104, ptr %__pyx_t_7, align 8, !tbaa !5
  %58 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %tobool105 = icmp ne ptr %58, null
  %lnot106 = xor i1 %tobool105, true
  %lnot108 = xor i1 %lnot106, true
  %lnot110 = xor i1 %lnot108, true
  %lnot.ext111 = zext i1 %lnot110 to i32
  %conv112 = sext i32 %lnot.ext111 to i64
  %expval113 = call i64 @llvm.expect.i64(i64 %conv112, i64 0)
  %tobool114 = icmp ne i64 %expval113, 0
  br i1 %tobool114, label %if.then115, label %if.end132

if.then115:                                       ; preds = %if.else103
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_type) #13
  %call116 = call ptr @PyErr_Occurred()
  store ptr %call116, ptr %exc_type, align 8, !tbaa !5
  %59 = load ptr, ptr %exc_type, align 8, !tbaa !5
  %tobool117 = icmp ne ptr %59, null
  br i1 %tobool117, label %if.then118, label %if.end131

if.then118:                                       ; preds = %if.then115
  %60 = load ptr, ptr %exc_type, align 8, !tbaa !5
  %61 = load ptr, ptr @PyExc_StopIteration, align 8, !tbaa !5
  %call119 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %60, ptr noundef %61)
  %tobool120 = icmp ne i32 %call119, 0
  %lnot121 = xor i1 %tobool120, true
  %lnot123 = xor i1 %lnot121, true
  %lnot.ext124 = zext i1 %lnot123 to i32
  %conv125 = sext i32 %lnot.ext124 to i64
  %expval126 = call i64 @llvm.expect.i64(i64 %conv125, i64 1)
  %tobool127 = icmp ne i64 %expval126, 0
  br i1 %tobool127, label %if.then128, label %if.else129

if.then128:                                       ; preds = %if.then118
  call void @PyErr_Clear()
  br label %if.end130

if.else129:                                       ; preds = %if.then118
  %62 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %62, ptr %__pyx_filename, align 8, !tbaa !5
  %63 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 681, ptr %__pyx_lineno, align 4, !tbaa !9
  %64 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12931, ptr %__pyx_clineno, align 4, !tbaa !9
  %65 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end130:                                        ; preds = %if.then128
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then115
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else129, %if.end131
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_type) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup446 [
    i32 4, label %for.end329
    i32 2, label %__pyx_L1_error
  ]

if.end132:                                        ; preds = %if.else103
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.end102
  br label %do.body

do.body:                                          ; preds = %if.end133
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %66 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  store ptr %66, ptr %tmp, align 8, !tbaa !5
  %67 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  store ptr %67, ptr %__pyx_v_item, align 8, !tbaa !5
  %68 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %68)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  %69 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %69)
  br label %do.body134

do.body134:                                       ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp135) #13
  %70 = load ptr, ptr %__pyx_v_idx, align 8, !tbaa !5
  store ptr %70, ptr %tmp135, align 8, !tbaa !5
  %71 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %71, ptr %__pyx_v_idx, align 8, !tbaa !5
  %72 = load ptr, ptr %tmp135, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %72)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp135) #13
  br label %do.cond136

do.cond136:                                       ; preds = %do.body134
  br label %do.end137

do.end137:                                        ; preds = %do.cond136
  %73 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %74 = load ptr, ptr @__pyx_int_1, align 8, !tbaa !5
  %call138 = call ptr @__Pyx_PyInt_AddObjC(ptr noundef %73, ptr noundef %74, i64 noundef 1, i32 noundef 0, i32 noundef 0)
  store ptr %call138, ptr %__pyx_t_7, align 8, !tbaa !5
  %75 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %tobool139 = icmp ne ptr %75, null
  %lnot140 = xor i1 %tobool139, true
  %lnot142 = xor i1 %lnot140, true
  %lnot144 = xor i1 %lnot142, true
  %lnot.ext145 = zext i1 %lnot144 to i32
  %conv146 = sext i32 %lnot.ext145 to i64
  %expval147 = call i64 @llvm.expect.i64(i64 %conv146, i64 0)
  %tobool148 = icmp ne i64 %expval147, 0
  br i1 %tobool148, label %if.then149, label %if.end150

if.then149:                                       ; preds = %do.end137
  %76 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %76, ptr %__pyx_filename, align 8, !tbaa !5
  %77 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 681, ptr %__pyx_lineno, align 4, !tbaa !9
  %78 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12941, ptr %__pyx_clineno, align 4, !tbaa !9
  %79 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end150:                                        ; preds = %do.end137
  %80 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %80)
  %81 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  store ptr %81, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  %82 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  %83 = load ptr, ptr @__pyx_builtin_Ellipsis, align 8, !tbaa !5
  %cmp151 = icmp eq ptr %82, %83
  %conv152 = zext i1 %cmp151 to i32
  store i32 %conv152, ptr %__pyx_t_2, align 4, !tbaa !9
  %84 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp153 = icmp ne i32 %84, 0
  %conv154 = zext i1 %cmp153 to i32
  store i32 %conv154, ptr %__pyx_t_1, align 4, !tbaa !9
  %85 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool155 = icmp ne i32 %85, 0
  br i1 %tobool155, label %if.then156, label %if.end228

if.then156:                                       ; preds = %if.end150
  %86 = load i32, ptr %__pyx_v_seen_ellipsis, align 4, !tbaa !9
  %cmp157 = icmp ne i32 %86, 0
  %lnot159 = xor i1 %cmp157, true
  %lnot.ext160 = zext i1 %lnot159 to i32
  %cmp161 = icmp ne i32 %lnot.ext160, 0
  %conv162 = zext i1 %cmp161 to i32
  store i32 %conv162, ptr %__pyx_t_1, align 4, !tbaa !9
  %87 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool163 = icmp ne i32 %87, 0
  br i1 %tobool163, label %if.then164, label %if.end215

if.then164:                                       ; preds = %if.then156
  %88 = load ptr, ptr %__pyx_v_tup, align 8, !tbaa !5
  %call165 = call i64 @PyObject_Size(ptr noundef %88)
  store i64 %call165, ptr %__pyx_t_8, align 8, !tbaa !27
  %89 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %cmp166 = icmp eq i64 %89, -1
  %lnot168 = xor i1 %cmp166, true
  %lnot170 = xor i1 %lnot168, true
  %lnot.ext171 = zext i1 %lnot170 to i32
  %conv172 = sext i32 %lnot.ext171 to i64
  %expval173 = call i64 @llvm.expect.i64(i64 %conv172, i64 0)
  %tobool174 = icmp ne i64 %expval173, 0
  br i1 %tobool174, label %if.then175, label %if.end176

if.then175:                                       ; preds = %if.then164
  %90 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %90, ptr %__pyx_filename, align 8, !tbaa !5
  %91 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 684, ptr %__pyx_lineno, align 4, !tbaa !9
  %92 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12975, ptr %__pyx_clineno, align 4, !tbaa !9
  %93 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end176:                                        ; preds = %if.then164
  %94 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %conv177 = sext i32 %94 to i64
  %95 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %sub = sub i64 %conv177, %95
  %add = add i64 %sub, 1
  %cmp178 = icmp slt i64 %add, 0
  br i1 %cmp178, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end176
  br label %cond.end

cond.false:                                       ; preds = %if.end176
  %96 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %conv180 = sext i32 %96 to i64
  %97 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %sub181 = sub i64 %conv180, %97
  %add182 = add i64 %sub181, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %add182, %cond.false ]
  %mul = mul i64 1, %cond
  %call183 = call ptr @PyList_New(i64 noundef %mul)
  store ptr %call183, ptr %__pyx_t_7, align 8, !tbaa !5
  %98 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %tobool184 = icmp ne ptr %98, null
  %lnot185 = xor i1 %tobool184, true
  %lnot187 = xor i1 %lnot185, true
  %lnot189 = xor i1 %lnot187, true
  %lnot.ext190 = zext i1 %lnot189 to i32
  %conv191 = sext i32 %lnot.ext190 to i64
  %expval192 = call i64 @llvm.expect.i64(i64 %conv191, i64 0)
  %tobool193 = icmp ne i64 %expval192, 0
  br i1 %tobool193, label %if.then194, label %if.end195

if.then194:                                       ; preds = %cond.end
  %99 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %99, ptr %__pyx_filename, align 8, !tbaa !5
  %100 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 684, ptr %__pyx_lineno, align 4, !tbaa !9
  %101 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12976, ptr %__pyx_clineno, align 4, !tbaa !9
  %102 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end195:                                        ; preds = %cond.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp) #13
  store i64 0, ptr %__pyx_temp, align 8, !tbaa !27
  br label %for.cond196

for.cond196:                                      ; preds = %for.inc, %if.end195
  %103 = load i64, ptr %__pyx_temp, align 8, !tbaa !27
  %104 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %conv197 = sext i32 %104 to i64
  %105 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %sub198 = sub i64 %conv197, %105
  %add199 = add i64 %sub198, 1
  %cmp200 = icmp slt i64 %103, %add199
  br i1 %cmp200, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond196
  %106 = load ptr, ptr @__pyx_slice__19, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %106)
  %107 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %108 = load i64, ptr %__pyx_temp, align 8, !tbaa !27
  %109 = load ptr, ptr @__pyx_slice__19, align 8, !tbaa !5
  call void @PyList_SET_ITEM(ptr noundef %107, i64 noundef %108, ptr noundef %109)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %110 = load i64, ptr %__pyx_temp, align 8, !tbaa !27
  %inc202 = add i64 %110, 1
  store i64 %inc202, ptr %__pyx_temp, align 8, !tbaa !27
  br label %for.cond196, !llvm.loop !217

for.end:                                          ; preds = %for.cond196
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp) #13
  %111 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %112 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %call203 = call i32 @__Pyx_PyList_Extend(ptr noundef %111, ptr noundef %112)
  store i32 %call203, ptr %__pyx_t_9, align 4, !tbaa !9
  %113 = load i32, ptr %__pyx_t_9, align 4, !tbaa !9
  %cmp204 = icmp eq i32 %113, -1
  %lnot206 = xor i1 %cmp204, true
  %lnot208 = xor i1 %lnot206, true
  %lnot.ext209 = zext i1 %lnot208 to i32
  %conv210 = sext i32 %lnot.ext209 to i64
  %expval211 = call i64 @llvm.expect.i64(i64 %conv210, i64 0)
  %tobool212 = icmp ne i64 %expval211, 0
  br i1 %tobool212, label %if.then213, label %if.end214

if.then213:                                       ; preds = %for.end
  %114 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %114, ptr %__pyx_filename, align 8, !tbaa !5
  %115 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 684, ptr %__pyx_lineno, align 4, !tbaa !9
  %116 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12985, ptr %__pyx_clineno, align 4, !tbaa !9
  %117 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end214:                                        ; preds = %for.end
  %118 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %118)
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  store i32 1, ptr %__pyx_v_seen_ellipsis, align 4, !tbaa !9
  br label %__pyx_L7

if.end215:                                        ; preds = %if.then156
  %119 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %120 = load ptr, ptr @__pyx_slice__19, align 8, !tbaa !5
  %call216 = call i32 @__Pyx_PyList_Append(ptr noundef %119, ptr noundef %120)
  store i32 %call216, ptr %__pyx_t_9, align 4, !tbaa !9
  %121 = load i32, ptr %__pyx_t_9, align 4, !tbaa !9
  %cmp217 = icmp eq i32 %121, -1
  %lnot219 = xor i1 %cmp217, true
  %lnot221 = xor i1 %lnot219, true
  %lnot.ext222 = zext i1 %lnot221 to i32
  %conv223 = sext i32 %lnot.ext222 to i64
  %expval224 = call i64 @llvm.expect.i64(i64 %conv223, i64 0)
  %tobool225 = icmp ne i64 %expval224, 0
  br i1 %tobool225, label %if.then226, label %if.end227

if.then226:                                       ; preds = %if.end215
  %122 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %122, ptr %__pyx_filename, align 8, !tbaa !5
  %123 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 687, ptr %__pyx_lineno, align 4, !tbaa !9
  %124 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13015, ptr %__pyx_clineno, align 4, !tbaa !9
  %125 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end227:                                        ; preds = %if.end215
  br label %__pyx_L7

__pyx_L7:                                         ; preds = %if.end227, %if.end214
  store i32 1, ptr %__pyx_v_have_slices, align 4, !tbaa !9
  br label %__pyx_L6

if.end228:                                        ; preds = %if.end150
  %126 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  %call229 = call i32 @Py_IS_TYPE(ptr noundef %126, ptr noundef @PySlice_Type)
  store i32 %call229, ptr %__pyx_t_2, align 4, !tbaa !9
  %127 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp230 = icmp ne i32 %127, 0
  %lnot232 = xor i1 %cmp230, true
  %lnot.ext233 = zext i1 %lnot232 to i32
  %cmp234 = icmp ne i32 %lnot.ext233, 0
  %conv235 = zext i1 %cmp234 to i32
  store i32 %conv235, ptr %__pyx_t_10, align 4, !tbaa !9
  %128 = load i32, ptr %__pyx_t_10, align 4, !tbaa !9
  %tobool236 = icmp ne i32 %128, 0
  br i1 %tobool236, label %if.then237, label %if.else238

if.then237:                                       ; preds = %if.end228
  br label %if.end239

if.else238:                                       ; preds = %if.end228
  %129 = load i32, ptr %__pyx_t_10, align 4, !tbaa !9
  store i32 %129, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L9_bool_binop_done

if.end239:                                        ; preds = %if.then237
  %130 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  %call240 = call i32 @PyIndex_Check(ptr noundef %130)
  %cmp241 = icmp ne i32 %call240, 0
  %lnot243 = xor i1 %cmp241, true
  %lnot.ext244 = zext i1 %lnot243 to i32
  %cmp245 = icmp ne i32 %lnot.ext244, 0
  %conv246 = zext i1 %cmp245 to i32
  store i32 %conv246, ptr %__pyx_t_10, align 4, !tbaa !9
  %131 = load i32, ptr %__pyx_t_10, align 4, !tbaa !9
  store i32 %131, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L9_bool_binop_done

__pyx_L9_bool_binop_done:                         ; preds = %if.end239, %if.else238
  %132 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool247 = icmp ne i32 %132, 0
  %lnot248 = xor i1 %tobool247, true
  %lnot250 = xor i1 %lnot248, true
  %lnot.ext251 = zext i1 %lnot250 to i32
  %conv252 = sext i32 %lnot.ext251 to i64
  %expval253 = call i64 @llvm.expect.i64(i64 %conv252, i64 0)
  %tobool254 = icmp ne i64 %expval253, 0
  br i1 %tobool254, label %if.then255, label %if.end307

if.then255:                                       ; preds = %__pyx_L9_bool_binop_done
  %133 = load ptr, ptr @__pyx_kp_s_Cannot_index_with_type_s, align 8, !tbaa !5
  %cmp256 = icmp eq ptr %133, @_Py_NoneStruct
  br i1 %cmp256, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then255
  %134 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  %call258 = call ptr @Py_TYPE(ptr noundef %134)
  %call259 = call ptr @Py_TYPE(ptr noundef %call258)
  %call260 = call i32 @PyType_HasFeature(ptr noundef %call259, i64 noundef 268435456)
  %tobool261 = icmp ne i32 %call260, 0
  br i1 %tobool261, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %135 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  %call262 = call ptr @Py_TYPE(ptr noundef %135)
  %call263 = call i32 @Py_IS_TYPE(ptr noundef %call262, ptr noundef @PyUnicode_Type)
  %tobool264 = icmp ne i32 %call263, 0
  %lnot265 = xor i1 %tobool264, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %136 = phi i1 [ false, %lor.rhs ], [ %lnot265, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %if.then255
  %137 = phi i1 [ true, %if.then255 ], [ %136, %land.end ]
  %lnot267 = xor i1 %137, true
  %lnot269 = xor i1 %lnot267, true
  %lnot.ext270 = zext i1 %lnot269 to i32
  %conv271 = sext i32 %lnot.ext270 to i64
  %expval272 = call i64 @llvm.expect.i64(i64 %conv271, i64 0)
  %tobool273 = icmp ne i64 %expval272, 0
  br i1 %tobool273, label %cond.true274, label %cond.false277

cond.true274:                                     ; preds = %lor.end
  %138 = load ptr, ptr @__pyx_kp_s_Cannot_index_with_type_s, align 8, !tbaa !5
  %139 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  %call275 = call ptr @Py_TYPE(ptr noundef %139)
  %call276 = call ptr @PyNumber_Remainder(ptr noundef %138, ptr noundef %call275)
  br label %cond.end280

cond.false277:                                    ; preds = %lor.end
  %140 = load ptr, ptr @__pyx_kp_s_Cannot_index_with_type_s, align 8, !tbaa !5
  %141 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  %call278 = call ptr @Py_TYPE(ptr noundef %141)
  %call279 = call ptr @PyUnicode_Format(ptr noundef %140, ptr noundef %call278)
  br label %cond.end280

cond.end280:                                      ; preds = %cond.false277, %cond.true274
  %cond281 = phi ptr [ %call276, %cond.true274 ], [ %call279, %cond.false277 ]
  store ptr %cond281, ptr %__pyx_t_7, align 8, !tbaa !5
  %142 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %tobool282 = icmp ne ptr %142, null
  %lnot283 = xor i1 %tobool282, true
  %lnot285 = xor i1 %lnot283, true
  %lnot287 = xor i1 %lnot285, true
  %lnot.ext288 = zext i1 %lnot287 to i32
  %conv289 = sext i32 %lnot.ext288 to i64
  %expval290 = call i64 @llvm.expect.i64(i64 %conv289, i64 0)
  %tobool291 = icmp ne i64 %expval290, 0
  br i1 %tobool291, label %if.then292, label %if.end293

if.then292:                                       ; preds = %cond.end280
  %143 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %143, ptr %__pyx_filename, align 8, !tbaa !5
  %144 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 691, ptr %__pyx_lineno, align 4, !tbaa !9
  %145 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13065, ptr %__pyx_clineno, align 4, !tbaa !9
  %146 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end293:                                        ; preds = %cond.end280
  %147 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %148 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %call294 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %147, ptr noundef %148)
  store ptr %call294, ptr %__pyx_t_11, align 8, !tbaa !5
  %149 = load ptr, ptr %__pyx_t_11, align 8, !tbaa !5
  %tobool295 = icmp ne ptr %149, null
  %lnot296 = xor i1 %tobool295, true
  %lnot298 = xor i1 %lnot296, true
  %lnot300 = xor i1 %lnot298, true
  %lnot.ext301 = zext i1 %lnot300 to i32
  %conv302 = sext i32 %lnot.ext301 to i64
  %expval303 = call i64 @llvm.expect.i64(i64 %conv302, i64 0)
  %tobool304 = icmp ne i64 %expval303, 0
  br i1 %tobool304, label %if.then305, label %if.end306

if.then305:                                       ; preds = %if.end293
  %150 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %150, ptr %__pyx_filename, align 8, !tbaa !5
  %151 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 691, ptr %__pyx_lineno, align 4, !tbaa !9
  %152 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13067, ptr %__pyx_clineno, align 4, !tbaa !9
  %153 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end306:                                        ; preds = %if.end293
  %154 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %154)
  store ptr null, ptr %__pyx_t_7, align 8, !tbaa !5
  %155 = load ptr, ptr %__pyx_t_11, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %155, ptr noundef null, ptr noundef null, ptr noundef null)
  %156 = load ptr, ptr %__pyx_t_11, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %156)
  store ptr null, ptr %__pyx_t_11, align 8, !tbaa !5
  %157 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %157, ptr %__pyx_filename, align 8, !tbaa !5
  %158 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 691, ptr %__pyx_lineno, align 4, !tbaa !9
  %159 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13072, ptr %__pyx_clineno, align 4, !tbaa !9
  %160 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end307:                                        ; preds = %__pyx_L9_bool_binop_done
  %161 = load i32, ptr %__pyx_v_have_slices, align 4, !tbaa !9
  %cmp308 = icmp ne i32 %161, 0
  %conv309 = zext i1 %cmp308 to i32
  store i32 %conv309, ptr %__pyx_t_10, align 4, !tbaa !9
  %162 = load i32, ptr %__pyx_t_10, align 4, !tbaa !9
  %tobool310 = icmp ne i32 %162, 0
  br i1 %tobool310, label %if.else312, label %if.then311

if.then311:                                       ; preds = %if.end307
  br label %if.end313

if.else312:                                       ; preds = %if.end307
  %163 = load i32, ptr %__pyx_t_10, align 4, !tbaa !9
  store i32 %163, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L11_bool_binop_done

if.end313:                                        ; preds = %if.then311
  %164 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  %call314 = call i32 @Py_IS_TYPE(ptr noundef %164, ptr noundef @PySlice_Type)
  store i32 %call314, ptr %__pyx_t_10, align 4, !tbaa !9
  %165 = load i32, ptr %__pyx_t_10, align 4, !tbaa !9
  %cmp315 = icmp ne i32 %165, 0
  %conv316 = zext i1 %cmp315 to i32
  store i32 %conv316, ptr %__pyx_t_2, align 4, !tbaa !9
  %166 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %166, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L11_bool_binop_done

__pyx_L11_bool_binop_done:                        ; preds = %if.end313, %if.else312
  %167 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %167, ptr %__pyx_v_have_slices, align 4, !tbaa !9
  %168 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %169 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  %call317 = call i32 @__Pyx_PyList_Append(ptr noundef %168, ptr noundef %169)
  store i32 %call317, ptr %__pyx_t_9, align 4, !tbaa !9
  %170 = load i32, ptr %__pyx_t_9, align 4, !tbaa !9
  %cmp318 = icmp eq i32 %170, -1
  %lnot320 = xor i1 %cmp318, true
  %lnot322 = xor i1 %lnot320, true
  %lnot.ext323 = zext i1 %lnot322 to i32
  %conv324 = sext i32 %lnot.ext323 to i64
  %expval325 = call i64 @llvm.expect.i64(i64 %conv324, i64 0)
  %tobool326 = icmp ne i64 %expval325, 0
  br i1 %tobool326, label %if.then327, label %if.end328

if.then327:                                       ; preds = %__pyx_L11_bool_binop_done
  %171 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %171, ptr %__pyx_filename, align 8, !tbaa !5
  %172 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 694, ptr %__pyx_lineno, align 4, !tbaa !9
  %173 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13109, ptr %__pyx_clineno, align 4, !tbaa !9
  %174 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end328:                                        ; preds = %__pyx_L11_bool_binop_done
  br label %__pyx_L6

__pyx_L6:                                         ; preds = %if.end328, %__pyx_L7
  br label %for.cond

for.end329:                                       ; preds = %cleanup, %if.then97, %if.then91
  %175 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %175)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %176 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %176)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %177 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %call330 = call i64 @PyList_GET_SIZE(ptr noundef %177)
  store i64 %call330, ptr %__pyx_t_5, align 8, !tbaa !27
  %178 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp331 = icmp eq i64 %178, -1
  %lnot333 = xor i1 %cmp331, true
  %lnot335 = xor i1 %lnot333, true
  %lnot.ext336 = zext i1 %lnot335 to i32
  %conv337 = sext i32 %lnot.ext336 to i64
  %expval338 = call i64 @llvm.expect.i64(i64 %conv337, i64 0)
  %tobool339 = icmp ne i64 %expval338, 0
  br i1 %tobool339, label %if.then340, label %if.end341

if.then340:                                       ; preds = %for.end329
  %179 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %179, ptr %__pyx_filename, align 8, !tbaa !5
  %180 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 696, ptr %__pyx_lineno, align 4, !tbaa !9
  %181 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13131, ptr %__pyx_clineno, align 4, !tbaa !9
  %182 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end341:                                        ; preds = %for.end329
  %183 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %conv342 = sext i32 %183 to i64
  %184 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %sub343 = sub i64 %conv342, %184
  store i64 %sub343, ptr %__pyx_v_nslices, align 8, !tbaa !27
  %185 = load i64, ptr %__pyx_v_nslices, align 8, !tbaa !27
  %cmp344 = icmp ne i64 %185, 0
  %conv345 = zext i1 %cmp344 to i32
  store i32 %conv345, ptr %__pyx_t_1, align 4, !tbaa !9
  %186 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool346 = icmp ne i32 %186, 0
  br i1 %tobool346, label %if.then347, label %if.end388

if.then347:                                       ; preds = %if.end341
  %187 = load i64, ptr %__pyx_v_nslices, align 8, !tbaa !27
  %cmp348 = icmp slt i64 %187, 0
  br i1 %cmp348, label %cond.true350, label %cond.false351

cond.true350:                                     ; preds = %if.then347
  br label %cond.end352

cond.false351:                                    ; preds = %if.then347
  %188 = load i64, ptr %__pyx_v_nslices, align 8, !tbaa !27
  br label %cond.end352

cond.end352:                                      ; preds = %cond.false351, %cond.true350
  %cond353 = phi i64 [ 0, %cond.true350 ], [ %188, %cond.false351 ]
  %mul354 = mul i64 1, %cond353
  %call355 = call ptr @PyList_New(i64 noundef %mul354)
  store ptr %call355, ptr %__pyx_t_3, align 8, !tbaa !5
  %189 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool356 = icmp ne ptr %189, null
  %lnot357 = xor i1 %tobool356, true
  %lnot359 = xor i1 %lnot357, true
  %lnot361 = xor i1 %lnot359, true
  %lnot.ext362 = zext i1 %lnot361 to i32
  %conv363 = sext i32 %lnot.ext362 to i64
  %expval364 = call i64 @llvm.expect.i64(i64 %conv363, i64 0)
  %tobool365 = icmp ne i64 %expval364, 0
  br i1 %tobool365, label %if.then366, label %if.end367

if.then366:                                       ; preds = %cond.end352
  %190 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %190, ptr %__pyx_filename, align 8, !tbaa !5
  %191 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 698, ptr %__pyx_lineno, align 4, !tbaa !9
  %192 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13151, ptr %__pyx_clineno, align 4, !tbaa !9
  %193 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end367:                                        ; preds = %cond.end352
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_temp368) #13
  store i64 0, ptr %__pyx_temp368, align 8, !tbaa !27
  br label %for.cond369

for.cond369:                                      ; preds = %for.inc373, %if.end367
  %194 = load i64, ptr %__pyx_temp368, align 8, !tbaa !27
  %195 = load i64, ptr %__pyx_v_nslices, align 8, !tbaa !27
  %cmp370 = icmp slt i64 %194, %195
  br i1 %cmp370, label %for.body372, label %for.end375

for.body372:                                      ; preds = %for.cond369
  %196 = load ptr, ptr @__pyx_slice__19, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %196)
  %197 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %198 = load i64, ptr %__pyx_temp368, align 8, !tbaa !27
  %199 = load ptr, ptr @__pyx_slice__19, align 8, !tbaa !5
  call void @PyList_SET_ITEM(ptr noundef %197, i64 noundef %198, ptr noundef %199)
  br label %for.inc373

for.inc373:                                       ; preds = %for.body372
  %200 = load i64, ptr %__pyx_temp368, align 8, !tbaa !27
  %inc374 = add i64 %200, 1
  store i64 %inc374, ptr %__pyx_temp368, align 8, !tbaa !27
  br label %for.cond369, !llvm.loop !218

for.end375:                                       ; preds = %for.cond369
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_temp368) #13
  %201 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %202 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call376 = call i32 @__Pyx_PyList_Extend(ptr noundef %201, ptr noundef %202)
  store i32 %call376, ptr %__pyx_t_9, align 4, !tbaa !9
  %203 = load i32, ptr %__pyx_t_9, align 4, !tbaa !9
  %cmp377 = icmp eq i32 %203, -1
  %lnot379 = xor i1 %cmp377, true
  %lnot381 = xor i1 %lnot379, true
  %lnot.ext382 = zext i1 %lnot381 to i32
  %conv383 = sext i32 %lnot.ext382 to i64
  %expval384 = call i64 @llvm.expect.i64(i64 %conv383, i64 0)
  %tobool385 = icmp ne i64 %expval384, 0
  br i1 %tobool385, label %if.then386, label %if.end387

if.then386:                                       ; preds = %for.end375
  %204 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %204, ptr %__pyx_filename, align 8, !tbaa !5
  %205 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 698, ptr %__pyx_lineno, align 4, !tbaa !9
  %206 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13160, ptr %__pyx_clineno, align 4, !tbaa !9
  %207 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end387:                                        ; preds = %for.end375
  %208 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %208)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %if.end388

if.end388:                                        ; preds = %if.end387, %if.end341
  %209 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %209)
  %210 = load i32, ptr %__pyx_v_have_slices, align 4, !tbaa !9
  %tobool389 = icmp ne i32 %210, 0
  br i1 %tobool389, label %if.else391, label %if.then390

if.then390:                                       ; preds = %if.end388
  br label %if.end406

if.else391:                                       ; preds = %if.end388
  %211 = load i32, ptr %__pyx_v_have_slices, align 4, !tbaa !9
  %conv392 = sext i32 %211 to i64
  %call393 = call ptr @__Pyx_PyBool_FromLong(i64 noundef %conv392)
  store ptr %call393, ptr %__pyx_t_4, align 8, !tbaa !5
  %212 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool394 = icmp ne ptr %212, null
  %lnot395 = xor i1 %tobool394, true
  %lnot397 = xor i1 %lnot395, true
  %lnot399 = xor i1 %lnot397, true
  %lnot.ext400 = zext i1 %lnot399 to i32
  %conv401 = sext i32 %lnot.ext400 to i64
  %expval402 = call i64 @llvm.expect.i64(i64 %conv401, i64 0)
  %tobool403 = icmp ne i64 %expval402, 0
  br i1 %tobool403, label %if.then404, label %if.end405

if.then404:                                       ; preds = %if.else391
  %213 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %213, ptr %__pyx_filename, align 8, !tbaa !5
  %214 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 700, ptr %__pyx_lineno, align 4, !tbaa !9
  %215 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13182, ptr %__pyx_clineno, align 4, !tbaa !9
  %216 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end405:                                        ; preds = %if.else391
  %217 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %217, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %__pyx_L14_bool_binop_done

if.end406:                                        ; preds = %if.then390
  %218 = load i64, ptr %__pyx_v_nslices, align 8, !tbaa !27
  %call407 = call ptr @PyLong_FromSsize_t(i64 noundef %218)
  store ptr %call407, ptr %__pyx_t_4, align 8, !tbaa !5
  %219 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool408 = icmp ne ptr %219, null
  %lnot409 = xor i1 %tobool408, true
  %lnot411 = xor i1 %lnot409, true
  %lnot413 = xor i1 %lnot411, true
  %lnot.ext414 = zext i1 %lnot413 to i32
  %conv415 = sext i32 %lnot.ext414 to i64
  %expval416 = call i64 @llvm.expect.i64(i64 %conv415, i64 0)
  %tobool417 = icmp ne i64 %expval416, 0
  br i1 %tobool417, label %if.then418, label %if.end419

if.then418:                                       ; preds = %if.end406
  %220 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %220, ptr %__pyx_filename, align 8, !tbaa !5
  %221 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 700, ptr %__pyx_lineno, align 4, !tbaa !9
  %222 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13188, ptr %__pyx_clineno, align 4, !tbaa !9
  %223 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end419:                                        ; preds = %if.end406
  %224 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %224, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %__pyx_L14_bool_binop_done

__pyx_L14_bool_binop_done:                        ; preds = %if.end419, %if.end405
  %225 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %call420 = call ptr @PyList_AsTuple(ptr noundef %225)
  store ptr %call420, ptr %__pyx_t_4, align 8, !tbaa !5
  %226 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool421 = icmp ne ptr %226, null
  %lnot422 = xor i1 %tobool421, true
  %lnot424 = xor i1 %lnot422, true
  %lnot426 = xor i1 %lnot424, true
  %lnot.ext427 = zext i1 %lnot426 to i32
  %conv428 = sext i32 %lnot.ext427 to i64
  %expval429 = call i64 @llvm.expect.i64(i64 %conv428, i64 0)
  %tobool430 = icmp ne i64 %expval429, 0
  br i1 %tobool430, label %if.then431, label %if.end432

if.then431:                                       ; preds = %__pyx_L14_bool_binop_done
  %227 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %227, ptr %__pyx_filename, align 8, !tbaa !5
  %228 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 700, ptr %__pyx_lineno, align 4, !tbaa !9
  %229 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13193, ptr %__pyx_clineno, align 4, !tbaa !9
  %230 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end432:                                        ; preds = %__pyx_L14_bool_binop_done
  %call433 = call ptr @PyTuple_New(i64 noundef 2)
  store ptr %call433, ptr %__pyx_t_11, align 8, !tbaa !5
  %231 = load ptr, ptr %__pyx_t_11, align 8, !tbaa !5
  %tobool434 = icmp ne ptr %231, null
  %lnot435 = xor i1 %tobool434, true
  %lnot437 = xor i1 %lnot435, true
  %lnot439 = xor i1 %lnot437, true
  %lnot.ext440 = zext i1 %lnot439 to i32
  %conv441 = sext i32 %lnot.ext440 to i64
  %expval442 = call i64 @llvm.expect.i64(i64 %conv441, i64 0)
  %tobool443 = icmp ne i64 %expval442, 0
  br i1 %tobool443, label %if.then444, label %if.end445

if.then444:                                       ; preds = %if.end432
  %232 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %232, ptr %__pyx_filename, align 8, !tbaa !5
  %233 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 700, ptr %__pyx_lineno, align 4, !tbaa !9
  %234 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13195, ptr %__pyx_clineno, align 4, !tbaa !9
  %235 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end445:                                        ; preds = %if.end432
  %236 = load ptr, ptr %__pyx_t_11, align 8, !tbaa !5
  %237 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %236, i64 noundef 0, ptr noundef %237)
  %238 = load ptr, ptr %__pyx_t_11, align 8, !tbaa !5
  %239 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %238, i64 noundef 1, ptr noundef %239)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %240 = load ptr, ptr %__pyx_t_11, align 8, !tbaa !5
  store ptr %240, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_11, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %cleanup, %if.then444, %if.then431, %if.then418, %if.then404, %if.then386, %if.then366, %if.then340, %if.then327, %if.end306, %if.then305, %if.then292, %if.then226, %if.then213, %if.then194, %if.then175, %if.then149, %if.then64, %if.then51, %if.then26, %if.then13
  %241 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %241)
  %242 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %242)
  %243 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %243)
  %244 = load ptr, ptr %__pyx_t_11, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %244)
  %245 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %246 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %247 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.166, i32 noundef %245, i32 noundef %246, ptr noundef %247)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end445
  %248 = load ptr, ptr %__pyx_v_tup, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %248)
  %249 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %249)
  %250 = load ptr, ptr %__pyx_v_idx, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %250)
  %251 = load ptr, ptr %__pyx_v_item, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %251)
  %252 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  store ptr %252, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup446

cleanup446:                                       ; preds = %__pyx_L0, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_nslices) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_item) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_seen_ellipsis) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_have_slices) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_result) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_tup) #13
  %253 = load ptr, ptr %retval, align 8
  ret ptr %253
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_RaiseTooManyValuesError(i64 noundef %expected) #3 {
entry:
  %expected.addr = alloca i64, align 8
  store i64 %expected, ptr %expected.addr, align 8, !tbaa !27
  %0 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %1 = load i64, ptr %expected.addr, align 8, !tbaa !27
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.167, i64 noundef %1)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %index) #3 {
entry:
  %index.addr = alloca i64, align 8
  store i64 %index, ptr %index.addr, align 8, !tbaa !27
  %0 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %1 = load i64, ptr %index.addr, align 8, !tbaa !27
  %2 = load i64, ptr %index.addr, align 8, !tbaa !27
  %cmp = icmp eq i64 %2, 1
  %3 = zext i1 %cmp to i64
  %cond = select i1 %cmp, ptr @.str.12, ptr @.str.110
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.168, i64 noundef %1, ptr noundef %cond)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_RaiseNoneNotIterableError() #3 {
entry:
  %0 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %0, ptr noundef @.str.169)
  ret void
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memview_slice(ptr noundef %__pyx_v_memview, ptr noundef %__pyx_v_indices) #0 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_v_memview.addr = alloca ptr, align 8
  %__pyx_v_indices.addr = alloca ptr, align 8
  %__pyx_v_new_ndim = alloca i32, align 4
  %__pyx_v_suboffset_dim = alloca i32, align 4
  %__pyx_v_dim = alloca i32, align 4
  %__pyx_v_src = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_dst = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_p_src = alloca ptr, align 8
  %__pyx_v_memviewsliceobj = alloca ptr, align 8
  %__pyx_v_p_dst = alloca ptr, align 8
  %__pyx_v_p_suboffset_dim = alloca ptr, align 8
  %__pyx_v_start = alloca i64, align 8
  %__pyx_v_stop = alloca i64, align 8
  %__pyx_v_step = alloca i64, align 8
  %__pyx_v_have_start = alloca i32, align 4
  %__pyx_v_have_stop = alloca i32, align 4
  %__pyx_v_have_step = alloca i32, align 4
  %__pyx_v_index = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_t_7 = alloca i64, align 8
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_t_9 = alloca ptr, align 8
  %__pyx_t_10 = alloca i64, align 8
  %__pyx_t_11 = alloca i32, align 4
  %__pyx_t_12 = alloca i64, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %exc_type = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_memview, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  store ptr %__pyx_v_indices, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_new_ndim) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_suboffset_dim) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_dim) #13
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_src) #13
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_dst) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_p_src) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_memviewsliceobj) #13
  store ptr null, ptr %__pyx_v_memviewsliceobj, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_p_dst) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_p_suboffset_dim) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_start) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_stop) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_step) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_have_start) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_have_stop) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_have_step) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_index) #13
  store ptr null, ptr %__pyx_v_index, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #13
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 0, ptr %__pyx_v_new_ndim, align 4, !tbaa !9
  store i32 -1, ptr %__pyx_v_suboffset_dim, align 4, !tbaa !9
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_dst, i8 0, i64 208, i1 false)
  %0 = load i32, ptr @__pyx_assertions_enabled_flag, align 4, !tbaa !9
  %tobool = icmp ne i32 %0, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end16

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %1, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 5
  %2 = load i32, ptr %ndim, align 4, !tbaa !123
  %cmp = icmp sgt i32 %2, 0
  %conv3 = zext i1 %cmp to i32
  %cmp4 = icmp ne i32 %conv3, 0
  %lnot6 = xor i1 %cmp4, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end

if.then15:                                        ; preds = %if.then
  %3 = load ptr, ptr @PyExc_AssertionError, align 8, !tbaa !5
  call void @PyErr_SetNone(ptr noundef %3)
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 724, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13395, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %if.then
  br label %if.end16

if.end16:                                         ; preds = %if.end, %entry
  %8 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %8)
  %9 = load ptr, ptr @__pyx_memoryviewslice_type, align 8, !tbaa !5
  %call17 = call i32 @__Pyx_IsSubtype(ptr noundef %call, ptr noundef %9)
  store i32 %call17, ptr %__pyx_t_1, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp18 = icmp ne i32 %10, 0
  %conv19 = zext i1 %cmp18 to i32
  store i32 %conv19, ptr %__pyx_t_2, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool20 = icmp ne i32 %11, 0
  br i1 %tobool20, label %if.then21, label %if.end42

if.then21:                                        ; preds = %if.end16
  %12 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %cmp22 = icmp eq ptr %12, @_Py_NoneStruct
  br i1 %cmp22, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then21
  %13 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %14 = load ptr, ptr @__pyx_memoryviewslice_type, align 8, !tbaa !5
  %call24 = call i32 @__Pyx_TypeTest(ptr noundef %13, ptr noundef %14)
  %tobool25 = icmp ne i32 %call24, 0
  %lnot26 = xor i1 %tobool25, true
  %lnot28 = xor i1 %lnot26, true
  %lnot.ext29 = zext i1 %lnot28 to i32
  %conv30 = sext i32 %lnot.ext29 to i64
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 1)
  %tobool32 = icmp ne i64 %expval31, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then21
  %15 = phi i1 [ true, %if.then21 ], [ %tobool32, %lor.rhs ]
  %lnot33 = xor i1 %15, true
  %lnot35 = xor i1 %lnot33, true
  %lnot.ext36 = zext i1 %lnot35 to i32
  %conv37 = sext i32 %lnot.ext36 to i64
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 1)
  %tobool39 = icmp ne i64 %expval38, 0
  br i1 %tobool39, label %if.end41, label %if.then40

if.then40:                                        ; preds = %lor.end
  %16 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %16, ptr %__pyx_filename, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 727, ptr %__pyx_lineno, align 4, !tbaa !9
  %18 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13418, ptr %__pyx_clineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end41:                                         ; preds = %lor.end
  %20 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  store ptr %20, ptr %__pyx_t_3, align 8, !tbaa !5
  %21 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %21)
  %22 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %22, ptr %__pyx_v_memviewsliceobj, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_v_memviewsliceobj, align 8, !tbaa !5
  %from_slice = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %23, i32 0, i32 1
  store ptr %from_slice, ptr %__pyx_v_p_src, align 8, !tbaa !5
  br label %__pyx_L3

if.end42:                                         ; preds = %if.end16
  %24 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  call void @__pyx_memoryview_slice_copy(ptr noundef %24, ptr noundef %__pyx_v_src)
  store ptr %__pyx_v_src, ptr %__pyx_v_p_src, align 8, !tbaa !5
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end42, %if.end41
  %25 = load ptr, ptr %__pyx_v_p_src, align 8, !tbaa !5
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %25, i32 0, i32 0
  %26 = load ptr, ptr %memview, align 8, !tbaa !185
  store ptr %26, ptr %__pyx_t_4, align 8, !tbaa !5
  %27 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %memview43 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_dst, i32 0, i32 0
  store ptr %27, ptr %memview43, align 8, !tbaa !185
  %28 = load ptr, ptr %__pyx_v_p_src, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %28, i32 0, i32 1
  %29 = load ptr, ptr %data, align 8, !tbaa !188
  store ptr %29, ptr %__pyx_t_5, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %data44 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_dst, i32 0, i32 1
  store ptr %30, ptr %data44, align 8, !tbaa !188
  store ptr %__pyx_v_dst, ptr %__pyx_v_p_dst, align 8, !tbaa !5
  store ptr %__pyx_v_suboffset_dim, ptr %__pyx_v_p_suboffset_dim, align 8, !tbaa !5
  store i32 0, ptr %__pyx_t_6, align 4, !tbaa !9
  %31 = load ptr, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  %call45 = call i32 @Py_IS_TYPE(ptr noundef %31, ptr noundef @PyList_Type)
  %tobool46 = icmp ne i32 %call45, 0
  %lnot47 = xor i1 %tobool46, true
  %lnot49 = xor i1 %lnot47, true
  %lnot.ext50 = zext i1 %lnot49 to i32
  %conv51 = sext i32 %lnot.ext50 to i64
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 1)
  %tobool53 = icmp ne i64 %expval52, 0
  br i1 %tobool53, label %if.then56, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %__pyx_L3
  %32 = load ptr, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  %call54 = call i32 @Py_IS_TYPE(ptr noundef %32, ptr noundef @PyTuple_Type)
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %if.then56, label %if.else

if.then56:                                        ; preds = %lor.lhs.false, %__pyx_L3
  %33 = load ptr, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  store ptr %33, ptr %__pyx_t_3, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %34)
  store i64 0, ptr %__pyx_t_7, align 8, !tbaa !27
  store ptr null, ptr %__pyx_t_8, align 8, !tbaa !5
  br label %if.end83

if.else:                                          ; preds = %lor.lhs.false
  store i64 -1, ptr %__pyx_t_7, align 8, !tbaa !27
  %35 = load ptr, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  %call57 = call ptr @PyObject_GetIter(ptr noundef %35)
  store ptr %call57, ptr %__pyx_t_3, align 8, !tbaa !5
  %36 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool58 = icmp ne ptr %36, null
  %lnot59 = xor i1 %tobool58, true
  %lnot61 = xor i1 %lnot59, true
  %lnot63 = xor i1 %lnot61, true
  %lnot.ext64 = zext i1 %lnot63 to i32
  %conv65 = sext i32 %lnot.ext64 to i64
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 0)
  %tobool67 = icmp ne i64 %expval66, 0
  br i1 %tobool67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %if.else
  %37 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %37, ptr %__pyx_filename, align 8, !tbaa !5
  %38 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 748, ptr %__pyx_lineno, align 4, !tbaa !9
  %39 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13514, ptr %__pyx_clineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end69:                                         ; preds = %if.else
  %41 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call70 = call ptr @Py_TYPE(ptr noundef %41)
  %tp_iternext = getelementptr inbounds %struct._typeobject, ptr %call70, i32 0, i32 26
  %42 = load ptr, ptr %tp_iternext, align 8, !tbaa !115
  store ptr %42, ptr %__pyx_t_8, align 8, !tbaa !5
  %43 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %tobool71 = icmp ne ptr %43, null
  %lnot72 = xor i1 %tobool71, true
  %lnot74 = xor i1 %lnot72, true
  %lnot76 = xor i1 %lnot74, true
  %lnot.ext77 = zext i1 %lnot76 to i32
  %conv78 = sext i32 %lnot.ext77 to i64
  %expval79 = call i64 @llvm.expect.i64(i64 %conv78, i64 0)
  %tobool80 = icmp ne i64 %expval79, 0
  br i1 %tobool80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.end69
  %44 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %44, ptr %__pyx_filename, align 8, !tbaa !5
  %45 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 748, ptr %__pyx_lineno, align 4, !tbaa !9
  %46 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13516, ptr %__pyx_clineno, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end82:                                         ; preds = %if.end69
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then56
  br label %for.cond

for.cond:                                         ; preds = %__pyx_L6, %if.end83
  %48 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %tobool84 = icmp ne ptr %48, null
  %lnot85 = xor i1 %tobool84, true
  %lnot87 = xor i1 %lnot85, true
  %lnot89 = xor i1 %lnot87, true
  %lnot.ext90 = zext i1 %lnot89 to i32
  %conv91 = sext i32 %lnot.ext90 to i64
  %expval92 = call i64 @llvm.expect.i64(i64 %conv91, i64 1)
  %tobool93 = icmp ne i64 %expval92, 0
  br i1 %tobool93, label %if.then94, label %if.else120

if.then94:                                        ; preds = %for.cond
  %49 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call95 = call i32 @Py_IS_TYPE(ptr noundef %49, ptr noundef @PyList_Type)
  %tobool96 = icmp ne i32 %call95, 0
  %lnot97 = xor i1 %tobool96, true
  %lnot99 = xor i1 %lnot97, true
  %lnot.ext100 = zext i1 %lnot99 to i32
  %conv101 = sext i32 %lnot.ext100 to i64
  %expval102 = call i64 @llvm.expect.i64(i64 %conv101, i64 1)
  %tobool103 = icmp ne i64 %expval102, 0
  br i1 %tobool103, label %if.then104, label %if.else110

if.then104:                                       ; preds = %if.then94
  %50 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %51 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call105 = call i64 @PyList_GET_SIZE(ptr noundef %51)
  %cmp106 = icmp sge i64 %50, %call105
  br i1 %cmp106, label %if.then108, label %if.end109

if.then108:                                       ; preds = %if.then104
  br label %for.end

if.end109:                                        ; preds = %if.then104
  %52 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyListObject, ptr %52, i32 0, i32 1
  %53 = load ptr, ptr %ob_item, align 8, !tbaa !116
  %54 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %arrayidx = getelementptr ptr, ptr %53, i64 %54
  %55 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %55, ptr %__pyx_t_9, align 8, !tbaa !5
  %56 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %56)
  %57 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %inc = add i64 %57, 1
  store i64 %inc, ptr %__pyx_t_7, align 8, !tbaa !27
  br label %if.end119

if.else110:                                       ; preds = %if.then94
  %58 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %59 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call111 = call i64 @PyTuple_GET_SIZE(ptr noundef %59)
  %cmp112 = icmp sge i64 %58, %call111
  br i1 %cmp112, label %if.then114, label %if.end115

if.then114:                                       ; preds = %if.else110
  br label %for.end

if.end115:                                        ; preds = %if.else110
  %60 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %ob_item116 = getelementptr inbounds %struct.PyTupleObject, ptr %60, i32 0, i32 1
  %61 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %arrayidx117 = getelementptr [1 x ptr], ptr %ob_item116, i64 0, i64 %61
  %62 = load ptr, ptr %arrayidx117, align 8, !tbaa !5
  store ptr %62, ptr %__pyx_t_9, align 8, !tbaa !5
  %63 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %63)
  %64 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %inc118 = add i64 %64, 1
  store i64 %inc118, ptr %__pyx_t_7, align 8, !tbaa !27
  br label %if.end119

if.end119:                                        ; preds = %if.end115, %if.end109
  br label %if.end150

if.else120:                                       ; preds = %for.cond
  %65 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %66 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call121 = call ptr %65(ptr noundef %66)
  store ptr %call121, ptr %__pyx_t_9, align 8, !tbaa !5
  %67 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %tobool122 = icmp ne ptr %67, null
  %lnot123 = xor i1 %tobool122, true
  %lnot125 = xor i1 %lnot123, true
  %lnot127 = xor i1 %lnot125, true
  %lnot.ext128 = zext i1 %lnot127 to i32
  %conv129 = sext i32 %lnot.ext128 to i64
  %expval130 = call i64 @llvm.expect.i64(i64 %conv129, i64 0)
  %tobool131 = icmp ne i64 %expval130, 0
  br i1 %tobool131, label %if.then132, label %if.end149

if.then132:                                       ; preds = %if.else120
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_type) #13
  %call133 = call ptr @PyErr_Occurred()
  store ptr %call133, ptr %exc_type, align 8, !tbaa !5
  %68 = load ptr, ptr %exc_type, align 8, !tbaa !5
  %tobool134 = icmp ne ptr %68, null
  br i1 %tobool134, label %if.then135, label %if.end148

if.then135:                                       ; preds = %if.then132
  %69 = load ptr, ptr %exc_type, align 8, !tbaa !5
  %70 = load ptr, ptr @PyExc_StopIteration, align 8, !tbaa !5
  %call136 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %69, ptr noundef %70)
  %tobool137 = icmp ne i32 %call136, 0
  %lnot138 = xor i1 %tobool137, true
  %lnot140 = xor i1 %lnot138, true
  %lnot.ext141 = zext i1 %lnot140 to i32
  %conv142 = sext i32 %lnot.ext141 to i64
  %expval143 = call i64 @llvm.expect.i64(i64 %conv142, i64 1)
  %tobool144 = icmp ne i64 %expval143, 0
  br i1 %tobool144, label %if.then145, label %if.else146

if.then145:                                       ; preds = %if.then135
  call void @PyErr_Clear()
  br label %if.end147

if.else146:                                       ; preds = %if.then135
  %71 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %71, ptr %__pyx_filename, align 8, !tbaa !5
  %72 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 748, ptr %__pyx_lineno, align 4, !tbaa !9
  %73 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13543, ptr %__pyx_clineno, align 4, !tbaa !9
  %74 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end147:                                        ; preds = %if.then145
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.then132
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else146, %if.end148
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_type) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup509 [
    i32 4, label %for.end
    i32 2, label %__pyx_L1_error
  ]

if.end149:                                        ; preds = %if.else120
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.end119
  br label %do.body

do.body:                                          ; preds = %if.end150
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %75 = load ptr, ptr %__pyx_v_index, align 8, !tbaa !5
  store ptr %75, ptr %tmp, align 8, !tbaa !5
  %76 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  store ptr %76, ptr %__pyx_v_index, align 8, !tbaa !5
  %77 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %77)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  %78 = load i32, ptr %__pyx_t_6, align 4, !tbaa !9
  store i32 %78, ptr %__pyx_v_dim, align 4, !tbaa !9
  %79 = load i32, ptr %__pyx_t_6, align 4, !tbaa !9
  %add = add i32 %79, 1
  store i32 %add, ptr %__pyx_t_6, align 4, !tbaa !9
  %80 = load ptr, ptr %__pyx_v_index, align 8, !tbaa !5
  %call151 = call i32 @PyIndex_Check(ptr noundef %80)
  %cmp152 = icmp ne i32 %call151, 0
  %conv153 = zext i1 %cmp152 to i32
  store i32 %conv153, ptr %__pyx_t_2, align 4, !tbaa !9
  %81 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool154 = icmp ne i32 %81, 0
  br i1 %tobool154, label %if.then155, label %if.end187

if.then155:                                       ; preds = %do.end
  %82 = load ptr, ptr %__pyx_v_index, align 8, !tbaa !5
  %call156 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %82)
  store i64 %call156, ptr %__pyx_t_10, align 8, !tbaa !27
  %83 = load i64, ptr %__pyx_t_10, align 8, !tbaa !27
  %cmp157 = icmp eq i64 %83, -1
  br i1 %cmp157, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then155
  %call159 = call ptr @PyErr_Occurred()
  %tobool160 = icmp ne ptr %call159, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then155
  %84 = phi i1 [ false, %if.then155 ], [ %tobool160, %land.rhs ]
  %lnot161 = xor i1 %84, true
  %lnot163 = xor i1 %lnot161, true
  %lnot.ext164 = zext i1 %lnot163 to i32
  %conv165 = sext i32 %lnot.ext164 to i64
  %expval166 = call i64 @llvm.expect.i64(i64 %conv165, i64 0)
  %tobool167 = icmp ne i64 %expval166, 0
  br i1 %tobool167, label %if.then168, label %if.end169

if.then168:                                       ; preds = %land.end
  %85 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %85, ptr %__pyx_filename, align 8, !tbaa !5
  %86 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 753, ptr %__pyx_lineno, align 4, !tbaa !9
  %87 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13571, ptr %__pyx_clineno, align 4, !tbaa !9
  %88 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end169:                                        ; preds = %land.end
  %89 = load ptr, ptr %__pyx_v_p_dst, align 8, !tbaa !5
  %90 = load ptr, ptr %__pyx_v_p_src, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %90, i32 0, i32 2
  %91 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %idxprom = sext i32 %91 to i64
  %arrayidx170 = getelementptr [8 x i64], ptr %shape, i64 0, i64 %idxprom
  %92 = load i64, ptr %arrayidx170, align 8, !tbaa !27
  %93 = load ptr, ptr %__pyx_v_p_src, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %93, i32 0, i32 3
  %94 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %idxprom171 = sext i32 %94 to i64
  %arrayidx172 = getelementptr [8 x i64], ptr %strides, i64 0, i64 %idxprom171
  %95 = load i64, ptr %arrayidx172, align 8, !tbaa !27
  %96 = load ptr, ptr %__pyx_v_p_src, align 8, !tbaa !5
  %suboffsets = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %96, i32 0, i32 4
  %97 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %idxprom173 = sext i32 %97 to i64
  %arrayidx174 = getelementptr [8 x i64], ptr %suboffsets, i64 0, i64 %idxprom173
  %98 = load i64, ptr %arrayidx174, align 8, !tbaa !27
  %99 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %100 = load i32, ptr %__pyx_v_new_ndim, align 4, !tbaa !9
  %101 = load ptr, ptr %__pyx_v_p_suboffset_dim, align 8, !tbaa !5
  %102 = load i64, ptr %__pyx_t_10, align 8, !tbaa !27
  %call175 = call i32 @__pyx_memoryview_slice_memviewslice(ptr noundef %89, i64 noundef %92, i64 noundef %95, i64 noundef %98, i32 noundef %99, i32 noundef %100, ptr noundef %101, i64 noundef %102, i64 noundef 0, i64 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  store i32 %call175, ptr %__pyx_t_11, align 4, !tbaa !9
  %103 = load i32, ptr %__pyx_t_11, align 4, !tbaa !9
  %cmp176 = icmp eq i32 %103, -1
  %lnot178 = xor i1 %cmp176, true
  %lnot180 = xor i1 %lnot178, true
  %lnot.ext181 = zext i1 %lnot180 to i32
  %conv182 = sext i32 %lnot.ext181 to i64
  %expval183 = call i64 @llvm.expect.i64(i64 %conv182, i64 0)
  %tobool184 = icmp ne i64 %expval183, 0
  br i1 %tobool184, label %if.then185, label %if.end186

if.then185:                                       ; preds = %if.end169
  %104 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %104, ptr %__pyx_filename, align 8, !tbaa !5
  %105 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 750, ptr %__pyx_lineno, align 4, !tbaa !9
  %106 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13580, ptr %__pyx_clineno, align 4, !tbaa !9
  %107 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end186:                                        ; preds = %if.end169
  br label %__pyx_L6

if.end187:                                        ; preds = %do.end
  %108 = load ptr, ptr %__pyx_v_index, align 8, !tbaa !5
  %cmp188 = icmp eq ptr %108, @_Py_NoneStruct
  %conv189 = zext i1 %cmp188 to i32
  store i32 %conv189, ptr %__pyx_t_2, align 4, !tbaa !9
  %109 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp190 = icmp ne i32 %109, 0
  %conv191 = zext i1 %cmp190 to i32
  store i32 %conv191, ptr %__pyx_t_1, align 4, !tbaa !9
  %110 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool192 = icmp ne i32 %110, 0
  br i1 %tobool192, label %if.then193, label %if.end204

if.then193:                                       ; preds = %if.end187
  %111 = load ptr, ptr %__pyx_v_p_dst, align 8, !tbaa !5
  %shape194 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %111, i32 0, i32 2
  %112 = load i32, ptr %__pyx_v_new_ndim, align 4, !tbaa !9
  %idxprom195 = sext i32 %112 to i64
  %arrayidx196 = getelementptr [8 x i64], ptr %shape194, i64 0, i64 %idxprom195
  store i64 1, ptr %arrayidx196, align 8, !tbaa !27
  %113 = load ptr, ptr %__pyx_v_p_dst, align 8, !tbaa !5
  %strides197 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %113, i32 0, i32 3
  %114 = load i32, ptr %__pyx_v_new_ndim, align 4, !tbaa !9
  %idxprom198 = sext i32 %114 to i64
  %arrayidx199 = getelementptr [8 x i64], ptr %strides197, i64 0, i64 %idxprom198
  store i64 0, ptr %arrayidx199, align 8, !tbaa !27
  %115 = load ptr, ptr %__pyx_v_p_dst, align 8, !tbaa !5
  %suboffsets200 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %115, i32 0, i32 4
  %116 = load i32, ptr %__pyx_v_new_ndim, align 4, !tbaa !9
  %idxprom201 = sext i32 %116 to i64
  %arrayidx202 = getelementptr [8 x i64], ptr %suboffsets200, i64 0, i64 %idxprom201
  store i64 -1, ptr %arrayidx202, align 8, !tbaa !27
  %117 = load i32, ptr %__pyx_v_new_ndim, align 4, !tbaa !9
  %add203 = add i32 %117, 1
  store i32 %add203, ptr %__pyx_v_new_ndim, align 4, !tbaa !9
  br label %__pyx_L6

if.end204:                                        ; preds = %if.end187
  %118 = load ptr, ptr %__pyx_v_index, align 8, !tbaa !5
  %119 = load ptr, ptr @__pyx_n_s_start, align 8, !tbaa !5
  %call205 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %118, ptr noundef %119)
  store ptr %call205, ptr %__pyx_t_9, align 8, !tbaa !5
  %120 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %tobool206 = icmp ne ptr %120, null
  %lnot207 = xor i1 %tobool206, true
  %lnot209 = xor i1 %lnot207, true
  %lnot211 = xor i1 %lnot209, true
  %lnot.ext212 = zext i1 %lnot211 to i32
  %conv213 = sext i32 %lnot.ext212 to i64
  %expval214 = call i64 @llvm.expect.i64(i64 %conv213, i64 0)
  %tobool215 = icmp ne i64 %expval214, 0
  br i1 %tobool215, label %if.then216, label %if.end217

if.then216:                                       ; preds = %if.end204
  %121 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %121, ptr %__pyx_filename, align 8, !tbaa !5
  %122 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 762, ptr %__pyx_lineno, align 4, !tbaa !9
  %123 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13657, ptr %__pyx_clineno, align 4, !tbaa !9
  %124 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end217:                                        ; preds = %if.end204
  %125 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %call218 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %125)
  store i32 %call218, ptr %__pyx_t_1, align 4, !tbaa !9
  %126 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp219 = icmp slt i32 %126, 0
  %lnot221 = xor i1 %cmp219, true
  %lnot223 = xor i1 %lnot221, true
  %lnot.ext224 = zext i1 %lnot223 to i32
  %conv225 = sext i32 %lnot.ext224 to i64
  %expval226 = call i64 @llvm.expect.i64(i64 %conv225, i64 0)
  %tobool227 = icmp ne i64 %expval226, 0
  br i1 %tobool227, label %if.then228, label %if.end229

if.then228:                                       ; preds = %if.end217
  %127 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %127, ptr %__pyx_filename, align 8, !tbaa !5
  %128 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 762, ptr %__pyx_lineno, align 4, !tbaa !9
  %129 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13659, ptr %__pyx_clineno, align 4, !tbaa !9
  %130 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end229:                                        ; preds = %if.end217
  %131 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool230 = icmp ne i32 %131, 0
  br i1 %tobool230, label %if.else232, label %if.then231

if.then231:                                       ; preds = %if.end229
  %132 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %132)
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  br label %if.end249

if.else232:                                       ; preds = %if.end229
  %133 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %call233 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %133)
  store i64 %call233, ptr %__pyx_t_12, align 8, !tbaa !27
  %134 = load i64, ptr %__pyx_t_12, align 8, !tbaa !27
  %cmp234 = icmp eq i64 %134, -1
  br i1 %cmp234, label %land.rhs236, label %land.end239

land.rhs236:                                      ; preds = %if.else232
  %call237 = call ptr @PyErr_Occurred()
  %tobool238 = icmp ne ptr %call237, null
  br label %land.end239

land.end239:                                      ; preds = %land.rhs236, %if.else232
  %135 = phi i1 [ false, %if.else232 ], [ %tobool238, %land.rhs236 ]
  %lnot240 = xor i1 %135, true
  %lnot242 = xor i1 %lnot240, true
  %lnot.ext243 = zext i1 %lnot242 to i32
  %conv244 = sext i32 %lnot.ext243 to i64
  %expval245 = call i64 @llvm.expect.i64(i64 %conv244, i64 0)
  %tobool246 = icmp ne i64 %expval245, 0
  br i1 %tobool246, label %if.then247, label %if.end248

if.then247:                                       ; preds = %land.end239
  %136 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %136, ptr %__pyx_filename, align 8, !tbaa !5
  %137 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 762, ptr %__pyx_lineno, align 4, !tbaa !9
  %138 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13663, ptr %__pyx_clineno, align 4, !tbaa !9
  %139 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end248:                                        ; preds = %land.end239
  %140 = load i64, ptr %__pyx_t_12, align 8, !tbaa !27
  store i64 %140, ptr %__pyx_t_10, align 8, !tbaa !27
  %141 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %141)
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  br label %__pyx_L7_bool_binop_done

if.end249:                                        ; preds = %if.then231
  store i64 0, ptr %__pyx_t_10, align 8, !tbaa !27
  br label %__pyx_L7_bool_binop_done

__pyx_L7_bool_binop_done:                         ; preds = %if.end249, %if.end248
  %142 = load i64, ptr %__pyx_t_10, align 8, !tbaa !27
  store i64 %142, ptr %__pyx_v_start, align 8, !tbaa !27
  %143 = load ptr, ptr %__pyx_v_index, align 8, !tbaa !5
  %144 = load ptr, ptr @__pyx_n_s_stop, align 8, !tbaa !5
  %call250 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %143, ptr noundef %144)
  store ptr %call250, ptr %__pyx_t_9, align 8, !tbaa !5
  %145 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %tobool251 = icmp ne ptr %145, null
  %lnot252 = xor i1 %tobool251, true
  %lnot254 = xor i1 %lnot252, true
  %lnot256 = xor i1 %lnot254, true
  %lnot.ext257 = zext i1 %lnot256 to i32
  %conv258 = sext i32 %lnot.ext257 to i64
  %expval259 = call i64 @llvm.expect.i64(i64 %conv258, i64 0)
  %tobool260 = icmp ne i64 %expval259, 0
  br i1 %tobool260, label %if.then261, label %if.end262

if.then261:                                       ; preds = %__pyx_L7_bool_binop_done
  %146 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %146, ptr %__pyx_filename, align 8, !tbaa !5
  %147 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 763, ptr %__pyx_lineno, align 4, !tbaa !9
  %148 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13679, ptr %__pyx_clineno, align 4, !tbaa !9
  %149 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end262:                                        ; preds = %__pyx_L7_bool_binop_done
  %150 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %call263 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %150)
  store i32 %call263, ptr %__pyx_t_1, align 4, !tbaa !9
  %151 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp264 = icmp slt i32 %151, 0
  %lnot266 = xor i1 %cmp264, true
  %lnot268 = xor i1 %lnot266, true
  %lnot.ext269 = zext i1 %lnot268 to i32
  %conv270 = sext i32 %lnot.ext269 to i64
  %expval271 = call i64 @llvm.expect.i64(i64 %conv270, i64 0)
  %tobool272 = icmp ne i64 %expval271, 0
  br i1 %tobool272, label %if.then273, label %if.end274

if.then273:                                       ; preds = %if.end262
  %152 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %152, ptr %__pyx_filename, align 8, !tbaa !5
  %153 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 763, ptr %__pyx_lineno, align 4, !tbaa !9
  %154 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13681, ptr %__pyx_clineno, align 4, !tbaa !9
  %155 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end274:                                        ; preds = %if.end262
  %156 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool275 = icmp ne i32 %156, 0
  br i1 %tobool275, label %if.else277, label %if.then276

if.then276:                                       ; preds = %if.end274
  %157 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %157)
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  br label %if.end294

if.else277:                                       ; preds = %if.end274
  %158 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %call278 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %158)
  store i64 %call278, ptr %__pyx_t_12, align 8, !tbaa !27
  %159 = load i64, ptr %__pyx_t_12, align 8, !tbaa !27
  %cmp279 = icmp eq i64 %159, -1
  br i1 %cmp279, label %land.rhs281, label %land.end284

land.rhs281:                                      ; preds = %if.else277
  %call282 = call ptr @PyErr_Occurred()
  %tobool283 = icmp ne ptr %call282, null
  br label %land.end284

land.end284:                                      ; preds = %land.rhs281, %if.else277
  %160 = phi i1 [ false, %if.else277 ], [ %tobool283, %land.rhs281 ]
  %lnot285 = xor i1 %160, true
  %lnot287 = xor i1 %lnot285, true
  %lnot.ext288 = zext i1 %lnot287 to i32
  %conv289 = sext i32 %lnot.ext288 to i64
  %expval290 = call i64 @llvm.expect.i64(i64 %conv289, i64 0)
  %tobool291 = icmp ne i64 %expval290, 0
  br i1 %tobool291, label %if.then292, label %if.end293

if.then292:                                       ; preds = %land.end284
  %161 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %161, ptr %__pyx_filename, align 8, !tbaa !5
  %162 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 763, ptr %__pyx_lineno, align 4, !tbaa !9
  %163 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13685, ptr %__pyx_clineno, align 4, !tbaa !9
  %164 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end293:                                        ; preds = %land.end284
  %165 = load i64, ptr %__pyx_t_12, align 8, !tbaa !27
  store i64 %165, ptr %__pyx_t_10, align 8, !tbaa !27
  %166 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %166)
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  br label %__pyx_L9_bool_binop_done

if.end294:                                        ; preds = %if.then276
  store i64 0, ptr %__pyx_t_10, align 8, !tbaa !27
  br label %__pyx_L9_bool_binop_done

__pyx_L9_bool_binop_done:                         ; preds = %if.end294, %if.end293
  %167 = load i64, ptr %__pyx_t_10, align 8, !tbaa !27
  store i64 %167, ptr %__pyx_v_stop, align 8, !tbaa !27
  %168 = load ptr, ptr %__pyx_v_index, align 8, !tbaa !5
  %169 = load ptr, ptr @__pyx_n_s_step, align 8, !tbaa !5
  %call295 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %168, ptr noundef %169)
  store ptr %call295, ptr %__pyx_t_9, align 8, !tbaa !5
  %170 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %tobool296 = icmp ne ptr %170, null
  %lnot297 = xor i1 %tobool296, true
  %lnot299 = xor i1 %lnot297, true
  %lnot301 = xor i1 %lnot299, true
  %lnot.ext302 = zext i1 %lnot301 to i32
  %conv303 = sext i32 %lnot.ext302 to i64
  %expval304 = call i64 @llvm.expect.i64(i64 %conv303, i64 0)
  %tobool305 = icmp ne i64 %expval304, 0
  br i1 %tobool305, label %if.then306, label %if.end307

if.then306:                                       ; preds = %__pyx_L9_bool_binop_done
  %171 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %171, ptr %__pyx_filename, align 8, !tbaa !5
  %172 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 764, ptr %__pyx_lineno, align 4, !tbaa !9
  %173 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13701, ptr %__pyx_clineno, align 4, !tbaa !9
  %174 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end307:                                        ; preds = %__pyx_L9_bool_binop_done
  %175 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %call308 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %175)
  store i32 %call308, ptr %__pyx_t_1, align 4, !tbaa !9
  %176 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp309 = icmp slt i32 %176, 0
  %lnot311 = xor i1 %cmp309, true
  %lnot313 = xor i1 %lnot311, true
  %lnot.ext314 = zext i1 %lnot313 to i32
  %conv315 = sext i32 %lnot.ext314 to i64
  %expval316 = call i64 @llvm.expect.i64(i64 %conv315, i64 0)
  %tobool317 = icmp ne i64 %expval316, 0
  br i1 %tobool317, label %if.then318, label %if.end319

if.then318:                                       ; preds = %if.end307
  %177 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %177, ptr %__pyx_filename, align 8, !tbaa !5
  %178 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 764, ptr %__pyx_lineno, align 4, !tbaa !9
  %179 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13703, ptr %__pyx_clineno, align 4, !tbaa !9
  %180 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end319:                                        ; preds = %if.end307
  %181 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool320 = icmp ne i32 %181, 0
  br i1 %tobool320, label %if.else322, label %if.then321

if.then321:                                       ; preds = %if.end319
  %182 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %182)
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  br label %if.end339

if.else322:                                       ; preds = %if.end319
  %183 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %call323 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %183)
  store i64 %call323, ptr %__pyx_t_12, align 8, !tbaa !27
  %184 = load i64, ptr %__pyx_t_12, align 8, !tbaa !27
  %cmp324 = icmp eq i64 %184, -1
  br i1 %cmp324, label %land.rhs326, label %land.end329

land.rhs326:                                      ; preds = %if.else322
  %call327 = call ptr @PyErr_Occurred()
  %tobool328 = icmp ne ptr %call327, null
  br label %land.end329

land.end329:                                      ; preds = %land.rhs326, %if.else322
  %185 = phi i1 [ false, %if.else322 ], [ %tobool328, %land.rhs326 ]
  %lnot330 = xor i1 %185, true
  %lnot332 = xor i1 %lnot330, true
  %lnot.ext333 = zext i1 %lnot332 to i32
  %conv334 = sext i32 %lnot.ext333 to i64
  %expval335 = call i64 @llvm.expect.i64(i64 %conv334, i64 0)
  %tobool336 = icmp ne i64 %expval335, 0
  br i1 %tobool336, label %if.then337, label %if.end338

if.then337:                                       ; preds = %land.end329
  %186 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %186, ptr %__pyx_filename, align 8, !tbaa !5
  %187 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 764, ptr %__pyx_lineno, align 4, !tbaa !9
  %188 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13707, ptr %__pyx_clineno, align 4, !tbaa !9
  %189 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end338:                                        ; preds = %land.end329
  %190 = load i64, ptr %__pyx_t_12, align 8, !tbaa !27
  store i64 %190, ptr %__pyx_t_10, align 8, !tbaa !27
  %191 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %191)
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  br label %__pyx_L11_bool_binop_done

if.end339:                                        ; preds = %if.then321
  store i64 0, ptr %__pyx_t_10, align 8, !tbaa !27
  br label %__pyx_L11_bool_binop_done

__pyx_L11_bool_binop_done:                        ; preds = %if.end339, %if.end338
  %192 = load i64, ptr %__pyx_t_10, align 8, !tbaa !27
  store i64 %192, ptr %__pyx_v_step, align 8, !tbaa !27
  %193 = load ptr, ptr %__pyx_v_index, align 8, !tbaa !5
  %194 = load ptr, ptr @__pyx_n_s_start, align 8, !tbaa !5
  %call340 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %193, ptr noundef %194)
  store ptr %call340, ptr %__pyx_t_9, align 8, !tbaa !5
  %195 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %tobool341 = icmp ne ptr %195, null
  %lnot342 = xor i1 %tobool341, true
  %lnot344 = xor i1 %lnot342, true
  %lnot346 = xor i1 %lnot344, true
  %lnot.ext347 = zext i1 %lnot346 to i32
  %conv348 = sext i32 %lnot.ext347 to i64
  %expval349 = call i64 @llvm.expect.i64(i64 %conv348, i64 0)
  %tobool350 = icmp ne i64 %expval349, 0
  br i1 %tobool350, label %if.then351, label %if.end352

if.then351:                                       ; preds = %__pyx_L11_bool_binop_done
  %196 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %196, ptr %__pyx_filename, align 8, !tbaa !5
  %197 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 766, ptr %__pyx_lineno, align 4, !tbaa !9
  %198 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13723, ptr %__pyx_clineno, align 4, !tbaa !9
  %199 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end352:                                        ; preds = %__pyx_L11_bool_binop_done
  %200 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %cmp353 = icmp ne ptr %200, @_Py_NoneStruct
  %conv354 = zext i1 %cmp353 to i32
  store i32 %conv354, ptr %__pyx_t_1, align 4, !tbaa !9
  %201 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %201)
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  %202 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %202, ptr %__pyx_v_have_start, align 4, !tbaa !9
  %203 = load ptr, ptr %__pyx_v_index, align 8, !tbaa !5
  %204 = load ptr, ptr @__pyx_n_s_stop, align 8, !tbaa !5
  %call355 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %203, ptr noundef %204)
  store ptr %call355, ptr %__pyx_t_9, align 8, !tbaa !5
  %205 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %tobool356 = icmp ne ptr %205, null
  %lnot357 = xor i1 %tobool356, true
  %lnot359 = xor i1 %lnot357, true
  %lnot361 = xor i1 %lnot359, true
  %lnot.ext362 = zext i1 %lnot361 to i32
  %conv363 = sext i32 %lnot.ext362 to i64
  %expval364 = call i64 @llvm.expect.i64(i64 %conv363, i64 0)
  %tobool365 = icmp ne i64 %expval364, 0
  br i1 %tobool365, label %if.then366, label %if.end367

if.then366:                                       ; preds = %if.end352
  %206 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %206, ptr %__pyx_filename, align 8, !tbaa !5
  %207 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 767, ptr %__pyx_lineno, align 4, !tbaa !9
  %208 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13736, ptr %__pyx_clineno, align 4, !tbaa !9
  %209 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end367:                                        ; preds = %if.end352
  %210 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %cmp368 = icmp ne ptr %210, @_Py_NoneStruct
  %conv369 = zext i1 %cmp368 to i32
  store i32 %conv369, ptr %__pyx_t_1, align 4, !tbaa !9
  %211 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %211)
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  %212 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %212, ptr %__pyx_v_have_stop, align 4, !tbaa !9
  %213 = load ptr, ptr %__pyx_v_index, align 8, !tbaa !5
  %214 = load ptr, ptr @__pyx_n_s_step, align 8, !tbaa !5
  %call370 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %213, ptr noundef %214)
  store ptr %call370, ptr %__pyx_t_9, align 8, !tbaa !5
  %215 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %tobool371 = icmp ne ptr %215, null
  %lnot372 = xor i1 %tobool371, true
  %lnot374 = xor i1 %lnot372, true
  %lnot376 = xor i1 %lnot374, true
  %lnot.ext377 = zext i1 %lnot376 to i32
  %conv378 = sext i32 %lnot.ext377 to i64
  %expval379 = call i64 @llvm.expect.i64(i64 %conv378, i64 0)
  %tobool380 = icmp ne i64 %expval379, 0
  br i1 %tobool380, label %if.then381, label %if.end382

if.then381:                                       ; preds = %if.end367
  %216 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %216, ptr %__pyx_filename, align 8, !tbaa !5
  %217 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 768, ptr %__pyx_lineno, align 4, !tbaa !9
  %218 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13749, ptr %__pyx_clineno, align 4, !tbaa !9
  %219 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end382:                                        ; preds = %if.end367
  %220 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  %cmp383 = icmp ne ptr %220, @_Py_NoneStruct
  %conv384 = zext i1 %cmp383 to i32
  store i32 %conv384, ptr %__pyx_t_1, align 4, !tbaa !9
  %221 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %221)
  store ptr null, ptr %__pyx_t_9, align 8, !tbaa !5
  %222 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %222, ptr %__pyx_v_have_step, align 4, !tbaa !9
  %223 = load ptr, ptr %__pyx_v_p_dst, align 8, !tbaa !5
  %224 = load ptr, ptr %__pyx_v_p_src, align 8, !tbaa !5
  %shape385 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %224, i32 0, i32 2
  %225 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %idxprom386 = sext i32 %225 to i64
  %arrayidx387 = getelementptr [8 x i64], ptr %shape385, i64 0, i64 %idxprom386
  %226 = load i64, ptr %arrayidx387, align 8, !tbaa !27
  %227 = load ptr, ptr %__pyx_v_p_src, align 8, !tbaa !5
  %strides388 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %227, i32 0, i32 3
  %228 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %idxprom389 = sext i32 %228 to i64
  %arrayidx390 = getelementptr [8 x i64], ptr %strides388, i64 0, i64 %idxprom389
  %229 = load i64, ptr %arrayidx390, align 8, !tbaa !27
  %230 = load ptr, ptr %__pyx_v_p_src, align 8, !tbaa !5
  %suboffsets391 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %230, i32 0, i32 4
  %231 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %idxprom392 = sext i32 %231 to i64
  %arrayidx393 = getelementptr [8 x i64], ptr %suboffsets391, i64 0, i64 %idxprom392
  %232 = load i64, ptr %arrayidx393, align 8, !tbaa !27
  %233 = load i32, ptr %__pyx_v_dim, align 4, !tbaa !9
  %234 = load i32, ptr %__pyx_v_new_ndim, align 4, !tbaa !9
  %235 = load ptr, ptr %__pyx_v_p_suboffset_dim, align 8, !tbaa !5
  %236 = load i64, ptr %__pyx_v_start, align 8, !tbaa !27
  %237 = load i64, ptr %__pyx_v_stop, align 8, !tbaa !27
  %238 = load i64, ptr %__pyx_v_step, align 8, !tbaa !27
  %239 = load i32, ptr %__pyx_v_have_start, align 4, !tbaa !9
  %240 = load i32, ptr %__pyx_v_have_stop, align 4, !tbaa !9
  %241 = load i32, ptr %__pyx_v_have_step, align 4, !tbaa !9
  %call394 = call i32 @__pyx_memoryview_slice_memviewslice(ptr noundef %223, i64 noundef %226, i64 noundef %229, i64 noundef %232, i32 noundef %233, i32 noundef %234, ptr noundef %235, i64 noundef %236, i64 noundef %237, i64 noundef %238, i32 noundef %239, i32 noundef %240, i32 noundef %241, i32 noundef 1)
  store i32 %call394, ptr %__pyx_t_11, align 4, !tbaa !9
  %242 = load i32, ptr %__pyx_t_11, align 4, !tbaa !9
  %cmp395 = icmp eq i32 %242, -1
  %lnot397 = xor i1 %cmp395, true
  %lnot399 = xor i1 %lnot397, true
  %lnot.ext400 = zext i1 %lnot399 to i32
  %conv401 = sext i32 %lnot.ext400 to i64
  %expval402 = call i64 @llvm.expect.i64(i64 %conv401, i64 0)
  %tobool403 = icmp ne i64 %expval402, 0
  br i1 %tobool403, label %if.then404, label %if.end405

if.then404:                                       ; preds = %if.end382
  %243 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %243, ptr %__pyx_filename, align 8, !tbaa !5
  %244 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 770, ptr %__pyx_lineno, align 4, !tbaa !9
  %245 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13762, ptr %__pyx_clineno, align 4, !tbaa !9
  %246 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end405:                                        ; preds = %if.end382
  %247 = load i32, ptr %__pyx_v_new_ndim, align 4, !tbaa !9
  %add406 = add i32 %247, 1
  store i32 %add406, ptr %__pyx_v_new_ndim, align 4, !tbaa !9
  br label %__pyx_L6

__pyx_L6:                                         ; preds = %if.end405, %if.then193, %if.end186
  br label %for.cond

for.end:                                          ; preds = %cleanup, %if.then114, %if.then108
  %248 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %248)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %249 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %call407 = call ptr @Py_TYPE(ptr noundef %249)
  %250 = load ptr, ptr @__pyx_memoryviewslice_type, align 8, !tbaa !5
  %call408 = call i32 @__Pyx_IsSubtype(ptr noundef %call407, ptr noundef %250)
  store i32 %call408, ptr %__pyx_t_1, align 4, !tbaa !9
  %251 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp409 = icmp ne i32 %251, 0
  %conv410 = zext i1 %cmp409 to i32
  store i32 %conv410, ptr %__pyx_t_2, align 4, !tbaa !9
  %252 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool411 = icmp ne i32 %252, 0
  br i1 %tobool411, label %if.then412, label %if.end472

if.then412:                                       ; preds = %for.end
  %253 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %253)
  %254 = load ptr, ptr %__pyx_v_memviewsliceobj, align 8, !tbaa !5
  %tobool413 = icmp ne ptr %254, null
  %lnot414 = xor i1 %tobool413, true
  %lnot416 = xor i1 %lnot414, true
  %lnot418 = xor i1 %lnot416, true
  %lnot.ext419 = zext i1 %lnot418 to i32
  %conv420 = sext i32 %lnot.ext419 to i64
  %expval421 = call i64 @llvm.expect.i64(i64 %conv420, i64 0)
  %tobool422 = icmp ne i64 %expval421, 0
  br i1 %tobool422, label %if.then423, label %if.end424

if.then423:                                       ; preds = %if.then412
  call void @__Pyx_RaiseUnboundLocalError(ptr noundef @.str.170)
  %255 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %255, ptr %__pyx_filename, align 8, !tbaa !5
  %256 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 780, ptr %__pyx_lineno, align 4, !tbaa !9
  %257 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13812, ptr %__pyx_clineno, align 4, !tbaa !9
  %258 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end424:                                        ; preds = %if.then412
  %259 = load ptr, ptr %__pyx_v_memviewsliceobj, align 8, !tbaa !5
  %tobool425 = icmp ne ptr %259, null
  %lnot426 = xor i1 %tobool425, true
  %lnot428 = xor i1 %lnot426, true
  %lnot430 = xor i1 %lnot428, true
  %lnot.ext431 = zext i1 %lnot430 to i32
  %conv432 = sext i32 %lnot.ext431 to i64
  %expval433 = call i64 @llvm.expect.i64(i64 %conv432, i64 0)
  %tobool434 = icmp ne i64 %expval433, 0
  br i1 %tobool434, label %if.then435, label %if.end436

if.then435:                                       ; preds = %if.end424
  call void @__Pyx_RaiseUnboundLocalError(ptr noundef @.str.170)
  %260 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %260, ptr %__pyx_filename, align 8, !tbaa !5
  %261 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 781, ptr %__pyx_lineno, align 4, !tbaa !9
  %262 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13821, ptr %__pyx_clineno, align 4, !tbaa !9
  %263 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end436:                                        ; preds = %if.end424
  %264 = load i32, ptr %__pyx_v_new_ndim, align 4, !tbaa !9
  %265 = load ptr, ptr %__pyx_v_memviewsliceobj, align 8, !tbaa !5
  %to_object_func = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %265, i32 0, i32 3
  %266 = load ptr, ptr %to_object_func, align 8, !tbaa !129
  %267 = load ptr, ptr %__pyx_v_memviewsliceobj, align 8, !tbaa !5
  %to_dtype_func = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %267, i32 0, i32 4
  %268 = load ptr, ptr %to_dtype_func, align 8, !tbaa !132
  %269 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %dtype_is_object = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %269, i32 0, i32 10
  %270 = load i32, ptr %dtype_is_object, align 4, !tbaa !119
  %call437 = call ptr @__pyx_memoryview_fromslice(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_dst, i32 noundef %264, ptr noundef %266, ptr noundef %268, i32 noundef %270)
  store ptr %call437, ptr %__pyx_t_3, align 8, !tbaa !5
  %271 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool438 = icmp ne ptr %271, null
  %lnot439 = xor i1 %tobool438, true
  %lnot441 = xor i1 %lnot439, true
  %lnot443 = xor i1 %lnot441, true
  %lnot.ext444 = zext i1 %lnot443 to i32
  %conv445 = sext i32 %lnot.ext444 to i64
  %expval446 = call i64 @llvm.expect.i64(i64 %conv445, i64 0)
  %tobool447 = icmp ne i64 %expval446, 0
  br i1 %tobool447, label %if.then448, label %if.end449

if.then448:                                       ; preds = %if.end436
  %272 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %272, ptr %__pyx_filename, align 8, !tbaa !5
  %273 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 779, ptr %__pyx_lineno, align 4, !tbaa !9
  %274 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13830, ptr %__pyx_clineno, align 4, !tbaa !9
  %275 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end449:                                        ; preds = %if.end436
  %276 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %cmp450 = icmp eq ptr %276, @_Py_NoneStruct
  br i1 %cmp450, label %lor.end462, label %lor.rhs452

lor.rhs452:                                       ; preds = %if.end449
  %277 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %278 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  %call453 = call i32 @__Pyx_TypeTest(ptr noundef %277, ptr noundef %278)
  %tobool454 = icmp ne i32 %call453, 0
  %lnot455 = xor i1 %tobool454, true
  %lnot457 = xor i1 %lnot455, true
  %lnot.ext458 = zext i1 %lnot457 to i32
  %conv459 = sext i32 %lnot.ext458 to i64
  %expval460 = call i64 @llvm.expect.i64(i64 %conv459, i64 1)
  %tobool461 = icmp ne i64 %expval460, 0
  br label %lor.end462

lor.end462:                                       ; preds = %lor.rhs452, %if.end449
  %279 = phi i1 [ true, %if.end449 ], [ %tobool461, %lor.rhs452 ]
  %lnot463 = xor i1 %279, true
  %lnot465 = xor i1 %lnot463, true
  %lnot.ext466 = zext i1 %lnot465 to i32
  %conv467 = sext i32 %lnot.ext466 to i64
  %expval468 = call i64 @llvm.expect.i64(i64 %conv467, i64 1)
  %tobool469 = icmp ne i64 %expval468, 0
  br i1 %tobool469, label %if.end471, label %if.then470

if.then470:                                       ; preds = %lor.end462
  %280 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %280, ptr %__pyx_filename, align 8, !tbaa !5
  %281 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 779, ptr %__pyx_lineno, align 4, !tbaa !9
  %282 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13832, ptr %__pyx_clineno, align 4, !tbaa !9
  %283 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end471:                                        ; preds = %lor.end462
  %284 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %284, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %__pyx_L0

if.end472:                                        ; preds = %for.end
  %285 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %285)
  %286 = load i32, ptr %__pyx_v_new_ndim, align 4, !tbaa !9
  %287 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %dtype_is_object473 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %287, i32 0, i32 10
  %288 = load i32, ptr %dtype_is_object473, align 4, !tbaa !119
  %call474 = call ptr @__pyx_memoryview_fromslice(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_dst, i32 noundef %286, ptr noundef null, ptr noundef null, i32 noundef %288)
  store ptr %call474, ptr %__pyx_t_3, align 8, !tbaa !5
  %289 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool475 = icmp ne ptr %289, null
  %lnot476 = xor i1 %tobool475, true
  %lnot478 = xor i1 %lnot476, true
  %lnot480 = xor i1 %lnot478, true
  %lnot.ext481 = zext i1 %lnot480 to i32
  %conv482 = sext i32 %lnot.ext481 to i64
  %expval483 = call i64 @llvm.expect.i64(i64 %conv482, i64 0)
  %tobool484 = icmp ne i64 %expval483, 0
  br i1 %tobool484, label %if.then485, label %if.end486

if.then485:                                       ; preds = %if.end472
  %290 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %290, ptr %__pyx_filename, align 8, !tbaa !5
  %291 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 784, ptr %__pyx_lineno, align 4, !tbaa !9
  %292 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13863, ptr %__pyx_clineno, align 4, !tbaa !9
  %293 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end486:                                        ; preds = %if.end472
  %294 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %cmp487 = icmp eq ptr %294, @_Py_NoneStruct
  br i1 %cmp487, label %lor.end499, label %lor.rhs489

lor.rhs489:                                       ; preds = %if.end486
  %295 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %296 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  %call490 = call i32 @__Pyx_TypeTest(ptr noundef %295, ptr noundef %296)
  %tobool491 = icmp ne i32 %call490, 0
  %lnot492 = xor i1 %tobool491, true
  %lnot494 = xor i1 %lnot492, true
  %lnot.ext495 = zext i1 %lnot494 to i32
  %conv496 = sext i32 %lnot.ext495 to i64
  %expval497 = call i64 @llvm.expect.i64(i64 %conv496, i64 1)
  %tobool498 = icmp ne i64 %expval497, 0
  br label %lor.end499

lor.end499:                                       ; preds = %lor.rhs489, %if.end486
  %297 = phi i1 [ true, %if.end486 ], [ %tobool498, %lor.rhs489 ]
  %lnot500 = xor i1 %297, true
  %lnot502 = xor i1 %lnot500, true
  %lnot.ext503 = zext i1 %lnot502 to i32
  %conv504 = sext i32 %lnot.ext503 to i64
  %expval505 = call i64 @llvm.expect.i64(i64 %conv504, i64 1)
  %tobool506 = icmp ne i64 %expval505, 0
  br i1 %tobool506, label %if.end508, label %if.then507

if.then507:                                       ; preds = %lor.end499
  %298 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %298, ptr %__pyx_filename, align 8, !tbaa !5
  %299 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 784, ptr %__pyx_lineno, align 4, !tbaa !9
  %300 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13873, ptr %__pyx_clineno, align 4, !tbaa !9
  %301 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end508:                                        ; preds = %lor.end499
  %302 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %302, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %cleanup, %if.then507, %if.then485, %if.then470, %if.then448, %if.then435, %if.then423, %if.then404, %if.then381, %if.then366, %if.then351, %if.then337, %if.then318, %if.then306, %if.then292, %if.then273, %if.then261, %if.then247, %if.then228, %if.then216, %if.then185, %if.then168, %if.then81, %if.then68, %if.then40, %if.then15
  %303 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %303)
  %304 = load ptr, ptr %__pyx_t_9, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %304)
  %305 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %306 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %307 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.171, i32 noundef %305, i32 noundef %306, ptr noundef %307)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end508, %if.end471
  %308 = load ptr, ptr %__pyx_v_memviewsliceobj, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %308)
  %309 = load ptr, ptr %__pyx_v_index, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %309)
  %310 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  store ptr %310, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup509

cleanup509:                                       ; preds = %__pyx_L0, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_index) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_have_step) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_have_stop) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_have_start) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_step) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_stop) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_start) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_p_suboffset_dim) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_p_dst) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_memviewsliceobj) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_p_src) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_dst) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_src) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_dim) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_suboffset_dim) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_new_ndim) #13
  %311 = load ptr, ptr %retval, align 8
  ret ptr %311
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyInt_AddObjC(ptr noundef %op1, ptr noundef %op2, i64 noundef %intval, i32 noundef %inplace, i32 noundef %zerodivision_check) #0 {
entry:
  %retval = alloca ptr, align 8
  %op1.addr = alloca ptr, align 8
  %op2.addr = alloca ptr, align 8
  %intval.addr = alloca i64, align 8
  %inplace.addr = alloca i32, align 4
  %zerodivision_check.addr = alloca i32, align 4
  %b = alloca i64, align 8
  %a = alloca i64, align 8
  %x = alloca i64, align 8
  %llb = alloca i64, align 8
  %lla = alloca i64, align 8
  %llx = alloca i64, align 8
  %digits = alloca ptr, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %b57 = alloca i64, align 8
  %a58 = alloca double, align 8
  %result = alloca double, align 8
  store ptr %op1, ptr %op1.addr, align 8, !tbaa !5
  store ptr %op2, ptr %op2.addr, align 8, !tbaa !5
  store i64 %intval, ptr %intval.addr, align 8, !tbaa !27
  store i32 %inplace, ptr %inplace.addr, align 4, !tbaa !9
  store i32 %zerodivision_check, ptr %zerodivision_check.addr, align 4, !tbaa !9
  %0 = load i32, ptr %inplace.addr, align 4, !tbaa !9
  %1 = load i32, ptr %zerodivision_check.addr, align 4, !tbaa !9
  %2 = load ptr, ptr %op1.addr, align 8, !tbaa !5
  %call = call i32 @Py_IS_TYPE(ptr noundef %2, ptr noundef @PyLong_Type)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end53

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #13
  %3 = load i64, ptr %intval.addr, align 8, !tbaa !27
  store i64 %3, ptr %b, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %a) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %llb) #13
  %4 = load i64, ptr %intval.addr, align 8, !tbaa !27
  store i64 %4, ptr %llb, align 8, !tbaa !219
  call void @llvm.lifetime.start.p0(i64 8, ptr %lla) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %llx) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %digits) #13
  %5 = load ptr, ptr %op1.addr, align 8, !tbaa !5
  %ob_digit = getelementptr inbounds %struct._longobject, ptr %5, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], ptr %ob_digit, i64 0, i64 0
  store ptr %arraydecay, ptr %digits, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #13
  %6 = load ptr, ptr %op1.addr, align 8, !tbaa !5
  %call3 = call i64 @Py_SIZE(ptr noundef %6)
  store i64 %call3, ptr %size, align 8, !tbaa !27
  %7 = load i64, ptr %size, align 8, !tbaa !27
  %neg = sub i64 0, %7
  %abscond = icmp slt i64 %7, 0
  %abs = select i1 %abscond, i64 %neg, i64 %7
  %cmp = icmp sle i64 %abs, 1
  %lnot5 = xor i1 %cmp, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1)
  %tobool11 = icmp ne i64 %expval10, 0
  br i1 %tobool11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.then
  %8 = load i64, ptr %size, align 8, !tbaa !27
  %tobool13 = icmp ne i64 %8, 0
  %lnot14 = xor i1 %tobool13, true
  %lnot16 = xor i1 %lnot14, true
  %lnot.ext17 = zext i1 %lnot16 to i32
  %conv18 = sext i32 %lnot.ext17 to i64
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 1)
  %tobool20 = icmp ne i64 %expval19, 0
  br i1 %tobool20, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then12
  %9 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx = getelementptr i32, ptr %9, i64 0
  %10 = load i32, ptr %arrayidx, align 4, !tbaa !9
  br label %cond.end

cond.false:                                       ; preds = %if.then12
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ 0, %cond.false ]
  %conv21 = zext i32 %cond to i64
  store i64 %conv21, ptr %a, align 8, !tbaa !27
  %11 = load i64, ptr %size, align 8, !tbaa !27
  %cmp22 = icmp eq i64 %11, -1
  br i1 %cmp22, label %if.then24, label %if.end

if.then24:                                        ; preds = %cond.end
  %12 = load i64, ptr %a, align 8, !tbaa !27
  %sub = sub i64 0, %12
  store i64 %sub, ptr %a, align 8, !tbaa !27
  br label %if.end

if.end:                                           ; preds = %if.then24, %cond.end
  br label %if.end42

if.else:                                          ; preds = %if.then
  %13 = load i64, ptr %size, align 8, !tbaa !27
  switch i64 %13, label %sw.default [
    i64 -2, label %sw.bb
    i64 2, label %sw.bb30
    i64 -3, label %sw.bb37
    i64 3, label %sw.bb38
    i64 -4, label %sw.bb39
    i64 4, label %sw.bb40
  ]

sw.bb:                                            ; preds = %if.else
  %14 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx25 = getelementptr i32, ptr %14, i64 1
  %15 = load i32, ptr %arrayidx25, align 4, !tbaa !9
  %conv26 = zext i32 %15 to i64
  %shl = shl i64 %conv26, 30
  %16 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx27 = getelementptr i32, ptr %16, i64 0
  %17 = load i32, ptr %arrayidx27, align 4, !tbaa !9
  %conv28 = zext i32 %17 to i64
  %or = or i64 %shl, %conv28
  %sub29 = sub i64 0, %or
  store i64 %sub29, ptr %a, align 8, !tbaa !27
  br label %sw.epilog

sw.bb30:                                          ; preds = %if.else
  %18 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx31 = getelementptr i32, ptr %18, i64 1
  %19 = load i32, ptr %arrayidx31, align 4, !tbaa !9
  %conv32 = zext i32 %19 to i64
  %shl33 = shl i64 %conv32, 30
  %20 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx34 = getelementptr i32, ptr %20, i64 0
  %21 = load i32, ptr %arrayidx34, align 4, !tbaa !9
  %conv35 = zext i32 %21 to i64
  %or36 = or i64 %shl33, %conv35
  store i64 %or36, ptr %a, align 8, !tbaa !27
  br label %sw.epilog

sw.bb37:                                          ; preds = %if.else
  br label %sw.bb38

sw.bb38:                                          ; preds = %if.else, %sw.bb37
  br label %sw.bb39

sw.bb39:                                          ; preds = %if.else, %sw.bb38
  br label %sw.bb40

sw.bb40:                                          ; preds = %if.else, %sw.bb39
  br label %sw.default

sw.default:                                       ; preds = %if.else, %sw.bb40
  %22 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyLong_Type, i32 0, i32 10), align 8, !tbaa !192
  %nb_add = getelementptr inbounds %struct.PyNumberMethods, ptr %22, i32 0, i32 0
  %23 = load ptr, ptr %nb_add, align 8, !tbaa !221
  %24 = load ptr, ptr %op1.addr, align 8, !tbaa !5
  %25 = load ptr, ptr %op2.addr, align 8, !tbaa !5
  %call41 = call ptr %23(ptr noundef %24, ptr noundef %25)
  store ptr %call41, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb30, %sw.bb
  br label %if.end42

if.end42:                                         ; preds = %sw.epilog, %if.end
  %26 = load i64, ptr %a, align 8, !tbaa !27
  %27 = load i64, ptr %b, align 8, !tbaa !27
  %add = add i64 %26, %27
  store i64 %add, ptr %x, align 8, !tbaa !27
  %28 = load i64, ptr %x, align 8, !tbaa !27
  %call43 = call ptr @PyLong_FromLong(i64 noundef %28)
  store ptr %call43, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

long_long:                                        ; No predecessors!
  %29 = load i64, ptr %lla, align 8, !tbaa !219
  %30 = load i64, ptr %llb, align 8, !tbaa !219
  %add44 = add i64 %29, %30
  store i64 %add44, ptr %llx, align 8, !tbaa !219
  %31 = load i64, ptr %llx, align 8, !tbaa !219
  %call45 = call ptr @PyLong_FromLongLong(i64 noundef %31)
  store ptr %call45, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %long_long, %if.end42, %sw.default
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %digits) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %llx) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %lla) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %llb) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %a) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #13
  br label %return

if.end53:                                         ; preds = %entry
  %32 = load ptr, ptr %op1.addr, align 8, !tbaa !5
  %call54 = call i32 @Py_IS_TYPE(ptr noundef %32, ptr noundef @PyFloat_Type)
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %if.then56, label %if.end65

if.then56:                                        ; preds = %if.end53
  call void @llvm.lifetime.start.p0(i64 8, ptr %b57) #13
  %33 = load i64, ptr %intval.addr, align 8, !tbaa !27
  store i64 %33, ptr %b57, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %a58) #13
  %34 = load ptr, ptr %op1.addr, align 8, !tbaa !5
  %ob_fval = getelementptr inbounds %struct.PyFloatObject, ptr %34, i32 0, i32 1
  %35 = load double, ptr %ob_fval, align 8, !tbaa !222
  store double %35, ptr %a58, align 8, !tbaa !225
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  %36 = load double, ptr %a58, align 8, !tbaa !225
  %37 = load i64, ptr %b57, align 8, !tbaa !27
  %conv59 = sitofp i64 %37 to double
  %add60 = fadd double %36, %conv59
  store double %add60, ptr %result, align 8, !tbaa !225
  %38 = load double, ptr %result, align 8, !tbaa !225
  %call61 = call ptr @PyFloat_FromDouble(double noundef %38)
  store ptr %call61, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %a58) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %b57) #13
  br label %return

if.end65:                                         ; preds = %if.end53
  %39 = load i32, ptr %inplace.addr, align 4, !tbaa !9
  %tobool66 = icmp ne i32 %39, 0
  %40 = zext i1 %tobool66 to i64
  %cond67 = select i1 %tobool66, ptr @PyNumber_InPlaceAdd, ptr @PyNumber_Add
  %41 = load ptr, ptr %op1.addr, align 8, !tbaa !5
  %42 = load ptr, ptr %op2.addr, align 8, !tbaa !5
  %call68 = call ptr %cond67(ptr noundef %41, ptr noundef %42)
  store ptr %call68, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end65, %if.then56, %cleanup
  %43 = load ptr, ptr %retval, align 8
  ret ptr %43
}

declare i64 @PyObject_Size(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @PyList_SET_ITEM(ptr noundef %op, i64 noundef %index, ptr noundef %value) #3 {
entry:
  %op.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  %value.addr = alloca ptr, align 8
  %list = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store i64 %index, ptr %index.addr, align 8, !tbaa !27
  store ptr %value, ptr %value.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %list) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  store ptr %0, ptr %list, align 8, !tbaa !5
  %1 = load ptr, ptr %value.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %list, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyListObject, ptr %2, i32 0, i32 1
  %3 = load ptr, ptr %ob_item, align 8, !tbaa !116
  %4 = load i64, ptr %index.addr, align 8, !tbaa !27
  %arrayidx = getelementptr ptr, ptr %3, i64 %4
  store ptr %1, ptr %arrayidx, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %list) #13
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyList_Extend(ptr noundef %L, ptr noundef %v) #3 {
entry:
  %retval = alloca i32, align 4
  %L.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  %none = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %L, ptr %L.addr, align 8, !tbaa !5
  store ptr %v, ptr %v.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %none) #13
  %0 = load ptr, ptr %L.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %call = call ptr @_PyList_Extend(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %none, align 8, !tbaa !5
  %2 = load ptr, ptr %none, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %none, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %3)
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %none) #13
  %4 = load i32, ptr %retval, align 4
  ret i32 %4
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyList_Append(ptr noundef %list, ptr noundef %x) #3 {
entry:
  %retval = alloca i32, align 4
  %list.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  %L = alloca ptr, align 8
  %len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %list, ptr %list.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %L) #13
  %0 = load ptr, ptr %list.addr, align 8, !tbaa !5
  store ptr %0, ptr %L, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %len) #13
  %1 = load ptr, ptr %list.addr, align 8, !tbaa !5
  %call = call i64 @Py_SIZE(ptr noundef %1)
  store i64 %call, ptr %len, align 8, !tbaa !27
  %2 = load ptr, ptr %L, align 8, !tbaa !5
  %allocated = getelementptr inbounds %struct.PyListObject, ptr %2, i32 0, i32 2
  %3 = load i64, ptr %allocated, align 8, !tbaa !226
  %4 = load i64, ptr %len, align 8, !tbaa !27
  %cmp = icmp sgt i64 %3, %4
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %5 = load i64, ptr %len, align 8, !tbaa !27
  %6 = load ptr, ptr %L, align 8, !tbaa !5
  %allocated2 = getelementptr inbounds %struct.PyListObject, ptr %6, i32 0, i32 2
  %7 = load i64, ptr %allocated2, align 8, !tbaa !226
  %shr = ashr i64 %7, 1
  %cmp3 = icmp sgt i64 %5, %shr
  %lnot5 = xor i1 %cmp3, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1)
  %and = and i64 %expval, %expval10
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load ptr, ptr %x.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %8)
  %9 = load ptr, ptr %list.addr, align 8, !tbaa !5
  %10 = load i64, ptr %len, align 8, !tbaa !27
  %11 = load ptr, ptr %x.addr, align 8, !tbaa !5
  call void @PyList_SET_ITEM(ptr noundef %9, i64 noundef %10, ptr noundef %11)
  %12 = load ptr, ptr %list.addr, align 8, !tbaa !5
  %13 = load i64, ptr %len, align 8, !tbaa !27
  %add = add i64 %13, 1
  call void @Py_SET_SIZE(ptr noundef %12, i64 noundef %add)
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %14 = load ptr, ptr %list.addr, align 8, !tbaa !5
  %15 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call11 = call i32 @PyList_Append(ptr noundef %14, ptr noundef %15)
  store i32 %call11, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %len) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %L) #13
  %16 = load i32, ptr %retval, align 4
  ret i32 %16
}

declare i32 @PyIndex_Check(ptr noundef) #1

declare ptr @PyList_AsTuple(ptr noundef) #1

declare ptr @PyLong_FromLongLong(i64 noundef) #1

declare ptr @PyFloat_FromDouble(double noundef) #1

declare ptr @_PyList_Extend(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @Py_SET_SIZE(ptr noundef %ob, i64 noundef %size) #3 {
entry:
  %ob.addr = alloca ptr, align 8
  %size.addr = alloca i64, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !5
  store i64 %size, ptr %size.addr, align 8, !tbaa !27
  %0 = load i64, ptr %size.addr, align 8, !tbaa !27
  %1 = load ptr, ptr %ob.addr, align 8, !tbaa !5
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %1, i32 0, i32 1
  store i64 %0, ptr %ob_size, align 8, !tbaa !83
  ret void
}

declare void @PyErr_SetNone(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memoryview_slice_memviewslice(ptr noundef %__pyx_v_dst, i64 noundef %__pyx_v_shape, i64 noundef %__pyx_v_stride, i64 noundef %__pyx_v_suboffset, i32 noundef %__pyx_v_dim, i32 noundef %__pyx_v_new_ndim, ptr noundef %__pyx_v_suboffset_dim, i64 noundef %__pyx_v_start, i64 noundef %__pyx_v_stop, i64 noundef %__pyx_v_step, i32 noundef %__pyx_v_have_start, i32 noundef %__pyx_v_have_stop, i32 noundef %__pyx_v_have_step, i32 noundef %__pyx_v_is_slice) #0 {
entry:
  %__pyx_v_dst.addr = alloca ptr, align 8
  %__pyx_v_shape.addr = alloca i64, align 8
  %__pyx_v_stride.addr = alloca i64, align 8
  %__pyx_v_suboffset.addr = alloca i64, align 8
  %__pyx_v_dim.addr = alloca i32, align 4
  %__pyx_v_new_ndim.addr = alloca i32, align 4
  %__pyx_v_suboffset_dim.addr = alloca ptr, align 8
  %__pyx_v_start.addr = alloca i64, align 8
  %__pyx_v_stop.addr = alloca i64, align 8
  %__pyx_v_step.addr = alloca i64, align 8
  %__pyx_v_have_start.addr = alloca i32, align 4
  %__pyx_v_have_stop.addr = alloca i32, align 4
  %__pyx_v_have_step.addr = alloca i32, align 4
  %__pyx_v_is_slice.addr = alloca i32, align 4
  %__pyx_v_new_shape = alloca i64, align 8
  %__pyx_v_negative_step = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_gilstate_save = alloca i32, align 4
  store ptr %__pyx_v_dst, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  store i64 %__pyx_v_shape, ptr %__pyx_v_shape.addr, align 8, !tbaa !27
  store i64 %__pyx_v_stride, ptr %__pyx_v_stride.addr, align 8, !tbaa !27
  store i64 %__pyx_v_suboffset, ptr %__pyx_v_suboffset.addr, align 8, !tbaa !27
  store i32 %__pyx_v_dim, ptr %__pyx_v_dim.addr, align 4, !tbaa !9
  store i32 %__pyx_v_new_ndim, ptr %__pyx_v_new_ndim.addr, align 4, !tbaa !9
  store ptr %__pyx_v_suboffset_dim, ptr %__pyx_v_suboffset_dim.addr, align 8, !tbaa !5
  store i64 %__pyx_v_start, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  store i64 %__pyx_v_stop, ptr %__pyx_v_stop.addr, align 8, !tbaa !27
  store i64 %__pyx_v_step, ptr %__pyx_v_step.addr, align 8, !tbaa !27
  store i32 %__pyx_v_have_start, ptr %__pyx_v_have_start.addr, align 4, !tbaa !9
  store i32 %__pyx_v_have_stop, ptr %__pyx_v_have_stop.addr, align 4, !tbaa !9
  store i32 %__pyx_v_have_step, ptr %__pyx_v_have_step.addr, align 4, !tbaa !9
  store i32 %__pyx_v_is_slice, ptr %__pyx_v_is_slice.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_new_shape) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_negative_step) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load i32, ptr %__pyx_v_is_slice.addr, align 4, !tbaa !9
  %cmp = icmp ne i32 %0, 0
  %lnot = xor i1 %cmp, true
  %lnot.ext = zext i1 %lnot to i32
  %cmp1 = icmp ne i32 %lnot.ext, 0
  %conv = zext i1 %cmp1 to i32
  store i32 %conv, ptr %__pyx_t_1, align 4, !tbaa !9
  %1 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end34

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %cmp2 = icmp slt i64 %2, 0
  %conv3 = zext i1 %cmp2 to i32
  %cmp4 = icmp ne i32 %conv3, 0
  %conv5 = zext i1 %cmp4 to i32
  store i32 %conv5, ptr %__pyx_t_1, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool6 = icmp ne i32 %3, 0
  br i1 %tobool6, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then
  %4 = load i64, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %5 = load i64, ptr %__pyx_v_shape.addr, align 8, !tbaa !27
  %add = add i64 %4, %5
  store i64 %add, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  br label %if.end

if.end:                                           ; preds = %if.then7, %if.then
  %6 = load i64, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %cmp8 = icmp sle i64 0, %6
  %conv9 = zext i1 %cmp8 to i32
  store i32 %conv9, ptr %__pyx_t_1, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool10 = icmp ne i32 %7, 0
  br i1 %tobool10, label %if.then11, label %if.end14

if.then11:                                        ; preds = %if.end
  %8 = load i64, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %9 = load i64, ptr %__pyx_v_shape.addr, align 8, !tbaa !27
  %cmp12 = icmp slt i64 %8, %9
  %conv13 = zext i1 %cmp12 to i32
  store i32 %conv13, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %if.end14

if.end14:                                         ; preds = %if.then11, %if.end
  %10 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp15 = icmp ne i32 %10, 0
  %lnot17 = xor i1 %cmp15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %cmp19 = icmp ne i32 %lnot.ext18, 0
  %conv20 = zext i1 %cmp19 to i32
  store i32 %conv20, ptr %__pyx_t_2, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool21 = icmp ne i32 %11, 0
  br i1 %tobool21, label %if.then22, label %if.end33

if.then22:                                        ; preds = %if.end14
  %12 = load ptr, ptr @__pyx_builtin_IndexError, align 8, !tbaa !5
  %13 = load i32, ptr %__pyx_v_dim.addr, align 4, !tbaa !9
  %call = call i32 @__pyx_memoryview_err_dim(ptr noundef %12, ptr noundef @.str.172, i32 noundef %13)
  store i32 %call, ptr %__pyx_t_3, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp23 = icmp eq i32 %14, -1
  %lnot25 = xor i1 %cmp23, true
  %lnot27 = xor i1 %lnot25, true
  %lnot.ext28 = zext i1 %lnot27 to i32
  %conv29 = sext i32 %lnot.ext28 to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv29, i64 0)
  %tobool30 = icmp ne i64 %expval, 0
  br i1 %tobool30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %if.then22
  %15 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %15, ptr %__pyx_filename, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 834, ptr %__pyx_lineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 13979, ptr %__pyx_clineno, align 4, !tbaa !9
  %18 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end32:                                         ; preds = %if.then22
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end14
  br label %__pyx_L3

if.end34:                                         ; preds = %entry
  %19 = load i32, ptr %__pyx_v_have_step.addr, align 4, !tbaa !9
  %cmp35 = icmp ne i32 %19, 0
  %conv36 = zext i1 %cmp35 to i32
  %cmp37 = icmp ne i32 %conv36, 0
  %conv38 = zext i1 %cmp37 to i32
  store i32 %conv38, ptr %__pyx_t_1, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool39 = icmp ne i32 %20, 0
  br i1 %tobool39, label %if.then40, label %if.else

if.then40:                                        ; preds = %if.end34
  br label %if.end41

if.else:                                          ; preds = %if.end34
  %21 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %21, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L6_bool_binop_done

if.end41:                                         ; preds = %if.then40
  %22 = load i64, ptr %__pyx_v_step.addr, align 8, !tbaa !27
  %cmp42 = icmp slt i64 %22, 0
  %conv43 = zext i1 %cmp42 to i32
  %cmp44 = icmp ne i32 %conv43, 0
  %conv45 = zext i1 %cmp44 to i32
  store i32 %conv45, ptr %__pyx_t_1, align 4, !tbaa !9
  %23 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %23, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L6_bool_binop_done

__pyx_L6_bool_binop_done:                         ; preds = %if.end41, %if.else
  %24 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %24, ptr %__pyx_v_negative_step, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_v_have_step.addr, align 4, !tbaa !9
  %cmp46 = icmp ne i32 %25, 0
  %conv47 = zext i1 %cmp46 to i32
  store i32 %conv47, ptr %__pyx_t_1, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool48 = icmp ne i32 %26, 0
  br i1 %tobool48, label %if.then49, label %if.else50

if.then49:                                        ; preds = %__pyx_L6_bool_binop_done
  br label %if.end51

if.else50:                                        ; preds = %__pyx_L6_bool_binop_done
  %27 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %27, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L9_bool_binop_done

if.end51:                                         ; preds = %if.then49
  %28 = load i64, ptr %__pyx_v_step.addr, align 8, !tbaa !27
  %cmp52 = icmp eq i64 %28, 0
  %conv53 = zext i1 %cmp52 to i32
  %cmp54 = icmp ne i32 %conv53, 0
  %conv55 = zext i1 %cmp54 to i32
  store i32 %conv55, ptr %__pyx_t_1, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %29, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L9_bool_binop_done

__pyx_L9_bool_binop_done:                         ; preds = %if.end51, %if.else50
  %30 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool56 = icmp ne i32 %30, 0
  br i1 %tobool56, label %if.then57, label %if.end70

if.then57:                                        ; preds = %__pyx_L9_bool_binop_done
  %31 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %32 = load i32, ptr %__pyx_v_dim.addr, align 4, !tbaa !9
  %call58 = call i32 @__pyx_memoryview_err_dim(ptr noundef %31, ptr noundef @.str.173, i32 noundef %32)
  store i32 %call58, ptr %__pyx_t_3, align 4, !tbaa !9
  %33 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp59 = icmp eq i32 %33, -1
  %lnot61 = xor i1 %cmp59, true
  %lnot63 = xor i1 %lnot61, true
  %lnot.ext64 = zext i1 %lnot63 to i32
  %conv65 = sext i32 %lnot.ext64 to i64
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 0)
  %tobool67 = icmp ne i64 %expval66, 0
  br i1 %tobool67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %if.then57
  %34 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %34, ptr %__pyx_filename, align 8, !tbaa !5
  %35 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 840, ptr %__pyx_lineno, align 4, !tbaa !9
  %36 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 14044, ptr %__pyx_clineno, align 4, !tbaa !9
  %37 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end69:                                         ; preds = %if.then57
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %__pyx_L9_bool_binop_done
  %38 = load i32, ptr %__pyx_v_have_start.addr, align 4, !tbaa !9
  %cmp71 = icmp ne i32 %38, 0
  %conv72 = zext i1 %cmp71 to i32
  store i32 %conv72, ptr %__pyx_t_2, align 4, !tbaa !9
  %39 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool73 = icmp ne i32 %39, 0
  br i1 %tobool73, label %if.then74, label %if.end102

if.then74:                                        ; preds = %if.end70
  %40 = load i64, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %cmp75 = icmp slt i64 %40, 0
  %conv76 = zext i1 %cmp75 to i32
  %cmp77 = icmp ne i32 %conv76, 0
  %conv78 = zext i1 %cmp77 to i32
  store i32 %conv78, ptr %__pyx_t_2, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool79 = icmp ne i32 %41, 0
  br i1 %tobool79, label %if.then80, label %if.end89

if.then80:                                        ; preds = %if.then74
  %42 = load i64, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %43 = load i64, ptr %__pyx_v_shape.addr, align 8, !tbaa !27
  %add81 = add i64 %42, %43
  store i64 %add81, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %44 = load i64, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %cmp82 = icmp slt i64 %44, 0
  %conv83 = zext i1 %cmp82 to i32
  %cmp84 = icmp ne i32 %conv83, 0
  %conv85 = zext i1 %cmp84 to i32
  store i32 %conv85, ptr %__pyx_t_2, align 4, !tbaa !9
  %45 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool86 = icmp ne i32 %45, 0
  br i1 %tobool86, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.then80
  store i64 0, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  br label %if.end88

if.end88:                                         ; preds = %if.then87, %if.then80
  br label %__pyx_L12

if.end89:                                         ; preds = %if.then74
  %46 = load i64, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %47 = load i64, ptr %__pyx_v_shape.addr, align 8, !tbaa !27
  %cmp90 = icmp sge i64 %46, %47
  %conv91 = zext i1 %cmp90 to i32
  %cmp92 = icmp ne i32 %conv91, 0
  %conv93 = zext i1 %cmp92 to i32
  store i32 %conv93, ptr %__pyx_t_2, align 4, !tbaa !9
  %48 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool94 = icmp ne i32 %48, 0
  br i1 %tobool94, label %if.then95, label %if.end101

if.then95:                                        ; preds = %if.end89
  %49 = load i32, ptr %__pyx_v_negative_step, align 4, !tbaa !9
  %cmp96 = icmp ne i32 %49, 0
  %conv97 = zext i1 %cmp96 to i32
  store i32 %conv97, ptr %__pyx_t_2, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool98 = icmp ne i32 %50, 0
  br i1 %tobool98, label %if.then99, label %if.end100

if.then99:                                        ; preds = %if.then95
  %51 = load i64, ptr %__pyx_v_shape.addr, align 8, !tbaa !27
  %sub = sub i64 %51, 1
  store i64 %sub, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  br label %__pyx_L14

if.end100:                                        ; preds = %if.then95
  %52 = load i64, ptr %__pyx_v_shape.addr, align 8, !tbaa !27
  store i64 %52, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  br label %__pyx_L14

__pyx_L14:                                        ; preds = %if.end100, %if.then99
  br label %if.end101

if.end101:                                        ; preds = %__pyx_L14, %if.end89
  br label %__pyx_L12

__pyx_L12:                                        ; preds = %if.end101, %if.end88
  br label %__pyx_L11

if.end102:                                        ; preds = %if.end70
  %53 = load i32, ptr %__pyx_v_negative_step, align 4, !tbaa !9
  %cmp103 = icmp ne i32 %53, 0
  %conv104 = zext i1 %cmp103 to i32
  store i32 %conv104, ptr %__pyx_t_2, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool105 = icmp ne i32 %54, 0
  br i1 %tobool105, label %if.then106, label %if.end108

if.then106:                                       ; preds = %if.end102
  %55 = load i64, ptr %__pyx_v_shape.addr, align 8, !tbaa !27
  %sub107 = sub i64 %55, 1
  store i64 %sub107, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  br label %__pyx_L15

if.end108:                                        ; preds = %if.end102
  store i64 0, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  br label %__pyx_L15

__pyx_L15:                                        ; preds = %if.end108, %if.then106
  br label %__pyx_L11

__pyx_L11:                                        ; preds = %__pyx_L15, %__pyx_L12
  %56 = load i32, ptr %__pyx_v_have_stop.addr, align 4, !tbaa !9
  %cmp109 = icmp ne i32 %56, 0
  %conv110 = zext i1 %cmp109 to i32
  store i32 %conv110, ptr %__pyx_t_2, align 4, !tbaa !9
  %57 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool111 = icmp ne i32 %57, 0
  br i1 %tobool111, label %if.then112, label %if.end135

if.then112:                                       ; preds = %__pyx_L11
  %58 = load i64, ptr %__pyx_v_stop.addr, align 8, !tbaa !27
  %cmp113 = icmp slt i64 %58, 0
  %conv114 = zext i1 %cmp113 to i32
  %cmp115 = icmp ne i32 %conv114, 0
  %conv116 = zext i1 %cmp115 to i32
  store i32 %conv116, ptr %__pyx_t_2, align 4, !tbaa !9
  %59 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool117 = icmp ne i32 %59, 0
  br i1 %tobool117, label %if.then118, label %if.end127

if.then118:                                       ; preds = %if.then112
  %60 = load i64, ptr %__pyx_v_stop.addr, align 8, !tbaa !27
  %61 = load i64, ptr %__pyx_v_shape.addr, align 8, !tbaa !27
  %add119 = add i64 %60, %61
  store i64 %add119, ptr %__pyx_v_stop.addr, align 8, !tbaa !27
  %62 = load i64, ptr %__pyx_v_stop.addr, align 8, !tbaa !27
  %cmp120 = icmp slt i64 %62, 0
  %conv121 = zext i1 %cmp120 to i32
  %cmp122 = icmp ne i32 %conv121, 0
  %conv123 = zext i1 %cmp122 to i32
  store i32 %conv123, ptr %__pyx_t_2, align 4, !tbaa !9
  %63 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool124 = icmp ne i32 %63, 0
  br i1 %tobool124, label %if.then125, label %if.end126

if.then125:                                       ; preds = %if.then118
  store i64 0, ptr %__pyx_v_stop.addr, align 8, !tbaa !27
  br label %if.end126

if.end126:                                        ; preds = %if.then125, %if.then118
  br label %__pyx_L17

if.end127:                                        ; preds = %if.then112
  %64 = load i64, ptr %__pyx_v_stop.addr, align 8, !tbaa !27
  %65 = load i64, ptr %__pyx_v_shape.addr, align 8, !tbaa !27
  %cmp128 = icmp sgt i64 %64, %65
  %conv129 = zext i1 %cmp128 to i32
  %cmp130 = icmp ne i32 %conv129, 0
  %conv131 = zext i1 %cmp130 to i32
  store i32 %conv131, ptr %__pyx_t_2, align 4, !tbaa !9
  %66 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool132 = icmp ne i32 %66, 0
  br i1 %tobool132, label %if.then133, label %if.end134

if.then133:                                       ; preds = %if.end127
  %67 = load i64, ptr %__pyx_v_shape.addr, align 8, !tbaa !27
  store i64 %67, ptr %__pyx_v_stop.addr, align 8, !tbaa !27
  br label %if.end134

if.end134:                                        ; preds = %if.then133, %if.end127
  br label %__pyx_L17

__pyx_L17:                                        ; preds = %if.end134, %if.end126
  br label %__pyx_L16

if.end135:                                        ; preds = %__pyx_L11
  %68 = load i32, ptr %__pyx_v_negative_step, align 4, !tbaa !9
  %cmp136 = icmp ne i32 %68, 0
  %conv137 = zext i1 %cmp136 to i32
  store i32 %conv137, ptr %__pyx_t_2, align 4, !tbaa !9
  %69 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool138 = icmp ne i32 %69, 0
  br i1 %tobool138, label %if.then139, label %if.end140

if.then139:                                       ; preds = %if.end135
  store i64 -1, ptr %__pyx_v_stop.addr, align 8, !tbaa !27
  br label %__pyx_L19

if.end140:                                        ; preds = %if.end135
  %70 = load i64, ptr %__pyx_v_shape.addr, align 8, !tbaa !27
  store i64 %70, ptr %__pyx_v_stop.addr, align 8, !tbaa !27
  br label %__pyx_L19

__pyx_L19:                                        ; preds = %if.end140, %if.then139
  br label %__pyx_L16

__pyx_L16:                                        ; preds = %__pyx_L19, %__pyx_L17
  %71 = load i32, ptr %__pyx_v_have_step.addr, align 4, !tbaa !9
  %cmp141 = icmp ne i32 %71, 0
  %lnot143 = xor i1 %cmp141, true
  %lnot.ext144 = zext i1 %lnot143 to i32
  %cmp145 = icmp ne i32 %lnot.ext144, 0
  %conv146 = zext i1 %cmp145 to i32
  store i32 %conv146, ptr %__pyx_t_2, align 4, !tbaa !9
  %72 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool147 = icmp ne i32 %72, 0
  br i1 %tobool147, label %if.then148, label %if.end149

if.then148:                                       ; preds = %__pyx_L16
  store i64 1, ptr %__pyx_v_step.addr, align 8, !tbaa !27
  br label %if.end149

if.end149:                                        ; preds = %if.then148, %__pyx_L16
  %73 = load i64, ptr %__pyx_v_stop.addr, align 8, !tbaa !27
  %74 = load i64, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %sub150 = sub i64 %73, %74
  %75 = load i64, ptr %__pyx_v_step.addr, align 8, !tbaa !27
  %div = sdiv i64 %sub150, %75
  store i64 %div, ptr %__pyx_v_new_shape, align 8, !tbaa !27
  %76 = load i64, ptr %__pyx_v_stop.addr, align 8, !tbaa !27
  %77 = load i64, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %sub151 = sub i64 %76, %77
  %78 = load i64, ptr %__pyx_v_step.addr, align 8, !tbaa !27
  %79 = load i64, ptr %__pyx_v_new_shape, align 8, !tbaa !27
  %mul = mul i64 %78, %79
  %sub152 = sub i64 %sub151, %mul
  %cmp153 = icmp ne i64 %sub152, 0
  %conv154 = zext i1 %cmp153 to i32
  store i32 %conv154, ptr %__pyx_t_2, align 4, !tbaa !9
  %80 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool155 = icmp ne i32 %80, 0
  br i1 %tobool155, label %if.then156, label %if.end158

if.then156:                                       ; preds = %if.end149
  %81 = load i64, ptr %__pyx_v_new_shape, align 8, !tbaa !27
  %add157 = add i64 %81, 1
  store i64 %add157, ptr %__pyx_v_new_shape, align 8, !tbaa !27
  br label %if.end158

if.end158:                                        ; preds = %if.then156, %if.end149
  %82 = load i64, ptr %__pyx_v_new_shape, align 8, !tbaa !27
  %cmp159 = icmp slt i64 %82, 0
  %conv160 = zext i1 %cmp159 to i32
  %cmp161 = icmp ne i32 %conv160, 0
  %conv162 = zext i1 %cmp161 to i32
  store i32 %conv162, ptr %__pyx_t_2, align 4, !tbaa !9
  %83 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool163 = icmp ne i32 %83, 0
  br i1 %tobool163, label %if.then164, label %if.end165

if.then164:                                       ; preds = %if.end158
  store i64 0, ptr %__pyx_v_new_shape, align 8, !tbaa !27
  br label %if.end165

if.end165:                                        ; preds = %if.then164, %if.end158
  %84 = load i64, ptr %__pyx_v_stride.addr, align 8, !tbaa !27
  %85 = load i64, ptr %__pyx_v_step.addr, align 8, !tbaa !27
  %mul166 = mul i64 %84, %85
  %86 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %86, i32 0, i32 3
  %87 = load i32, ptr %__pyx_v_new_ndim.addr, align 4, !tbaa !9
  %idxprom = sext i32 %87 to i64
  %arrayidx = getelementptr [8 x i64], ptr %strides, i64 0, i64 %idxprom
  store i64 %mul166, ptr %arrayidx, align 8, !tbaa !27
  %88 = load i64, ptr %__pyx_v_new_shape, align 8, !tbaa !27
  %89 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %89, i32 0, i32 2
  %90 = load i32, ptr %__pyx_v_new_ndim.addr, align 4, !tbaa !9
  %idxprom167 = sext i32 %90 to i64
  %arrayidx168 = getelementptr [8 x i64], ptr %shape, i64 0, i64 %idxprom167
  store i64 %88, ptr %arrayidx168, align 8, !tbaa !27
  %91 = load i64, ptr %__pyx_v_suboffset.addr, align 8, !tbaa !27
  %92 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %suboffsets = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %92, i32 0, i32 4
  %93 = load i32, ptr %__pyx_v_new_ndim.addr, align 4, !tbaa !9
  %idxprom169 = sext i32 %93 to i64
  %arrayidx170 = getelementptr [8 x i64], ptr %suboffsets, i64 0, i64 %idxprom169
  store i64 %91, ptr %arrayidx170, align 8, !tbaa !27
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end165, %if.end33
  %94 = load ptr, ptr %__pyx_v_suboffset_dim.addr, align 8, !tbaa !5
  %arrayidx171 = getelementptr i32, ptr %94, i64 0
  %95 = load i32, ptr %arrayidx171, align 4, !tbaa !9
  %cmp172 = icmp slt i32 %95, 0
  %conv173 = zext i1 %cmp172 to i32
  %cmp174 = icmp ne i32 %conv173, 0
  %conv175 = zext i1 %cmp174 to i32
  store i32 %conv175, ptr %__pyx_t_2, align 4, !tbaa !9
  %96 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool176 = icmp ne i32 %96, 0
  br i1 %tobool176, label %if.then177, label %if.end180

if.then177:                                       ; preds = %__pyx_L3
  %97 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %97, i32 0, i32 1
  %98 = load ptr, ptr %data, align 8, !tbaa !188
  %99 = load i64, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %100 = load i64, ptr %__pyx_v_stride.addr, align 8, !tbaa !27
  %mul178 = mul i64 %99, %100
  %add.ptr = getelementptr i8, ptr %98, i64 %mul178
  %101 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %data179 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %101, i32 0, i32 1
  store ptr %add.ptr, ptr %data179, align 8, !tbaa !188
  br label %__pyx_L23

if.end180:                                        ; preds = %__pyx_L3
  %102 = load ptr, ptr %__pyx_v_suboffset_dim.addr, align 8, !tbaa !5
  %arrayidx181 = getelementptr i32, ptr %102, i64 0
  %103 = load i32, ptr %arrayidx181, align 4, !tbaa !9
  store i32 %103, ptr %__pyx_t_3, align 4, !tbaa !9
  %104 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %suboffsets182 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %104, i32 0, i32 4
  %105 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %idxprom183 = sext i32 %105 to i64
  %arrayidx184 = getelementptr [8 x i64], ptr %suboffsets182, i64 0, i64 %idxprom183
  %106 = load i64, ptr %arrayidx184, align 8, !tbaa !27
  %107 = load i64, ptr %__pyx_v_start.addr, align 8, !tbaa !27
  %108 = load i64, ptr %__pyx_v_stride.addr, align 8, !tbaa !27
  %mul185 = mul i64 %107, %108
  %add186 = add i64 %106, %mul185
  %109 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %suboffsets187 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %109, i32 0, i32 4
  %110 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %idxprom188 = sext i32 %110 to i64
  %arrayidx189 = getelementptr [8 x i64], ptr %suboffsets187, i64 0, i64 %idxprom188
  store i64 %add186, ptr %arrayidx189, align 8, !tbaa !27
  br label %__pyx_L23

__pyx_L23:                                        ; preds = %if.end180, %if.then177
  %111 = load i64, ptr %__pyx_v_suboffset.addr, align 8, !tbaa !27
  %cmp190 = icmp sge i64 %111, 0
  %conv191 = zext i1 %cmp190 to i32
  %cmp192 = icmp ne i32 %conv191, 0
  %conv193 = zext i1 %cmp192 to i32
  store i32 %conv193, ptr %__pyx_t_2, align 4, !tbaa !9
  %112 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool194 = icmp ne i32 %112, 0
  br i1 %tobool194, label %if.then195, label %if.end229

if.then195:                                       ; preds = %__pyx_L23
  %113 = load i32, ptr %__pyx_v_is_slice.addr, align 4, !tbaa !9
  %cmp196 = icmp ne i32 %113, 0
  %lnot198 = xor i1 %cmp196, true
  %lnot.ext199 = zext i1 %lnot198 to i32
  %cmp200 = icmp ne i32 %lnot.ext199, 0
  %conv201 = zext i1 %cmp200 to i32
  store i32 %conv201, ptr %__pyx_t_2, align 4, !tbaa !9
  %114 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool202 = icmp ne i32 %114, 0
  br i1 %tobool202, label %if.then203, label %if.end227

if.then203:                                       ; preds = %if.then195
  %115 = load i32, ptr %__pyx_v_new_ndim.addr, align 4, !tbaa !9
  %cmp204 = icmp eq i32 %115, 0
  %conv205 = zext i1 %cmp204 to i32
  %cmp206 = icmp ne i32 %conv205, 0
  %conv207 = zext i1 %cmp206 to i32
  store i32 %conv207, ptr %__pyx_t_2, align 4, !tbaa !9
  %116 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool208 = icmp ne i32 %116, 0
  br i1 %tobool208, label %if.then209, label %if.end214

if.then209:                                       ; preds = %if.then203
  %117 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %data210 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %117, i32 0, i32 1
  %118 = load ptr, ptr %data210, align 8, !tbaa !188
  %arrayidx211 = getelementptr ptr, ptr %118, i64 0
  %119 = load ptr, ptr %arrayidx211, align 8, !tbaa !5
  %120 = load i64, ptr %__pyx_v_suboffset.addr, align 8, !tbaa !27
  %add.ptr212 = getelementptr i8, ptr %119, i64 %120
  %121 = load ptr, ptr %__pyx_v_dst.addr, align 8, !tbaa !5
  %data213 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %121, i32 0, i32 1
  store ptr %add.ptr212, ptr %data213, align 8, !tbaa !188
  br label %__pyx_L26

if.end214:                                        ; preds = %if.then203
  %122 = load ptr, ptr @__pyx_builtin_IndexError, align 8, !tbaa !5
  %123 = load i32, ptr %__pyx_v_dim.addr, align 4, !tbaa !9
  %call215 = call i32 @__pyx_memoryview_err_dim(ptr noundef %122, ptr noundef @.str.174, i32 noundef %123)
  store i32 %call215, ptr %__pyx_t_3, align 4, !tbaa !9
  %124 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp216 = icmp eq i32 %124, -1
  %lnot218 = xor i1 %cmp216, true
  %lnot220 = xor i1 %lnot218, true
  %lnot.ext221 = zext i1 %lnot220 to i32
  %conv222 = sext i32 %lnot.ext221 to i64
  %expval223 = call i64 @llvm.expect.i64(i64 %conv222, i64 0)
  %tobool224 = icmp ne i64 %expval223, 0
  br i1 %tobool224, label %if.then225, label %if.end226

if.then225:                                       ; preds = %if.end214
  %125 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %125, ptr %__pyx_filename, align 8, !tbaa !5
  %126 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 901, ptr %__pyx_lineno, align 4, !tbaa !9
  %127 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 14616, ptr %__pyx_clineno, align 4, !tbaa !9
  %128 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end226:                                        ; preds = %if.end214
  br label %__pyx_L26

__pyx_L26:                                        ; preds = %if.end226, %if.then209
  br label %__pyx_L25

if.end227:                                        ; preds = %if.then195
  %129 = load i32, ptr %__pyx_v_new_ndim.addr, align 4, !tbaa !9
  %130 = load ptr, ptr %__pyx_v_suboffset_dim.addr, align 8, !tbaa !5
  %arrayidx228 = getelementptr i32, ptr %130, i64 0
  store i32 %129, ptr %arrayidx228, align 4, !tbaa !9
  br label %__pyx_L25

__pyx_L25:                                        ; preds = %if.end227, %__pyx_L26
  br label %if.end229

if.end229:                                        ; preds = %__pyx_L25, %__pyx_L23
  store i32 0, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then225, %if.then68, %if.then31
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_gilstate_save) #13
  %call230 = call i32 @PyGILState_Ensure()
  store i32 %call230, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  %131 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %132 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %133 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.175, i32 noundef %131, i32 noundef %132, ptr noundef %133)
  %134 = load i32, ptr %__pyx_gilstate_save, align 4, !tbaa !29
  call void @PyGILState_Release(i32 noundef %134)
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_gilstate_save) #13
  store i32 -1, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end229
  %135 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_negative_step) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_new_shape) #13
  ret i32 %135
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_RaiseUnboundLocalError(ptr noundef %varname) #3 {
entry:
  %varname.addr = alloca ptr, align 8
  store ptr %varname, ptr %varname.addr, align 8, !tbaa !5
  %0 = load ptr, ptr @PyExc_UnboundLocalError, align 8, !tbaa !5
  %1 = load ptr, ptr %varname.addr, align 8, !tbaa !5
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.176, ptr noundef %1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_fromslice(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_memviewslice, i32 noundef %__pyx_v_ndim, ptr noundef %__pyx_v_to_object_func, ptr noundef %__pyx_v_to_dtype_func, i32 noundef %__pyx_v_dtype_is_object) #0 {
entry:
  %__pyx_v_ndim.addr = alloca i32, align 4
  %__pyx_v_to_object_func.addr = alloca ptr, align 8
  %__pyx_v_to_dtype_func.addr = alloca ptr, align 8
  %__pyx_v_dtype_is_object.addr = alloca i32, align 4
  %__pyx_v_result = alloca ptr, align 8
  %__pyx_v_suboffset = alloca i64, align 8
  %__pyx_v_length = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca %struct.Py_buffer, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_t_9 = alloca i64, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  store i32 %__pyx_v_ndim, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  store ptr %__pyx_v_to_object_func, ptr %__pyx_v_to_object_func.addr, align 8, !tbaa !5
  store ptr %__pyx_v_to_dtype_func, ptr %__pyx_v_to_dtype_func.addr, align 8, !tbaa !5
  store i32 %__pyx_v_dtype_is_object, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_result) #13
  store ptr null, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_suboffset) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_length) #13
  store ptr null, ptr %__pyx_v_length, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 80, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_memviewslice, i32 0, i32 0
  %0 = load ptr, ptr %memview, align 8, !tbaa !185
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_1, align 4, !tbaa !9
  %1 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %2)
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %__pyx_L0

if.end:                                           ; preds = %entry
  %3 = load i32, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  %conv3 = sext i32 %3 to i64
  %call = call ptr @__Pyx_PyBool_FromLong(i64 noundef %conv3)
  store ptr %call, ptr %__pyx_t_2, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %4, null
  %lnot = xor i1 %tobool4, true
  %lnot5 = xor i1 %lnot, true
  %lnot6 = xor i1 %lnot5, true
  %lnot.ext = zext i1 %lnot6 to i32
  %conv7 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv7, i64 0)
  %tobool8 = icmp ne i64 %expval, 0
  br i1 %tobool8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  %5 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %5, ptr %__pyx_filename, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1015, ptr %__pyx_lineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15612, ptr %__pyx_clineno, align 4, !tbaa !9
  %8 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end10:                                         ; preds = %if.end
  %call11 = call ptr @PyTuple_New(i64 noundef 3)
  store ptr %call11, ptr %__pyx_t_3, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool12 = icmp ne ptr %9, null
  %lnot13 = xor i1 %tobool12, true
  %lnot15 = xor i1 %lnot13, true
  %lnot17 = xor i1 %lnot15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %conv19 = sext i32 %lnot.ext18 to i64
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0)
  %tobool21 = icmp ne i64 %expval20, 0
  br i1 %tobool21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end10
  %10 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %10, ptr %__pyx_filename, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1015, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15614, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end23:                                         ; preds = %if.end10
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %14 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %14, i64 noundef 0, ptr noundef @_Py_NoneStruct)
  %15 = load ptr, ptr @__pyx_int_0, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %15)
  %16 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %17 = load ptr, ptr @__pyx_int_0, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %16, i64 noundef 1, ptr noundef %17)
  %18 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %18, i64 noundef 2, ptr noundef %19)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %20 = load ptr, ptr @__pyx_memoryviewslice_type, align 8, !tbaa !5
  %21 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call24 = call ptr @__Pyx_PyObject_Call(ptr noundef %20, ptr noundef %21, ptr noundef null)
  store ptr %call24, ptr %__pyx_t_2, align 8, !tbaa !5
  %22 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool25 = icmp ne ptr %22, null
  %lnot26 = xor i1 %tobool25, true
  %lnot28 = xor i1 %lnot26, true
  %lnot30 = xor i1 %lnot28, true
  %lnot.ext31 = zext i1 %lnot30 to i32
  %conv32 = sext i32 %lnot.ext31 to i64
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 0)
  %tobool34 = icmp ne i64 %expval33, 0
  br i1 %tobool34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end23
  %23 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %23, ptr %__pyx_filename, align 8, !tbaa !5
  %24 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1015, ptr %__pyx_lineno, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15625, ptr %__pyx_clineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end36:                                         ; preds = %if.end23
  %27 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %27)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %28, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %29 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %from_slice = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %29, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %from_slice, ptr align 8 %__pyx_v_memviewslice, i64 208, i1 false), !tbaa.struct !187
  call void @__Pyx_INC_MEMVIEW(ptr noundef %__pyx_v_memviewslice, i32 noundef 1, i32 noundef 15647)
  %memview37 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_memviewslice, i32 0, i32 0
  %30 = load ptr, ptr %memview37, align 8, !tbaa !185
  %31 = load ptr, ptr @__pyx_n_s_base, align 8, !tbaa !5
  %call38 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %30, ptr noundef %31)
  store ptr %call38, ptr %__pyx_t_2, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool39 = icmp ne ptr %32, null
  %lnot40 = xor i1 %tobool39, true
  %lnot42 = xor i1 %lnot40, true
  %lnot44 = xor i1 %lnot42, true
  %lnot.ext45 = zext i1 %lnot44 to i32
  %conv46 = sext i32 %lnot.ext45 to i64
  %expval47 = call i64 @llvm.expect.i64(i64 %conv46, i64 0)
  %tobool48 = icmp ne i64 %expval47, 0
  br i1 %tobool48, label %if.then49, label %if.end50

if.then49:                                        ; preds = %if.end36
  %33 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %33, ptr %__pyx_filename, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1020, ptr %__pyx_lineno, align 4, !tbaa !9
  %35 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15656, ptr %__pyx_clineno, align 4, !tbaa !9
  %36 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end50:                                         ; preds = %if.end36
  %37 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %from_object = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %37, i32 0, i32 2
  %38 = load ptr, ptr %from_object, align 8, !tbaa !227
  call void @Py_DECREF(ptr noundef %38)
  %39 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %40 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %from_object51 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %40, i32 0, i32 2
  store ptr %39, ptr %from_object51, align 8, !tbaa !227
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %memview52 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_memviewslice, i32 0, i32 0
  %41 = load ptr, ptr %memview52, align 8, !tbaa !185
  %typeinfo = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %41, i32 0, i32 11
  %42 = load ptr, ptr %typeinfo, align 8, !tbaa !228
  store ptr %42, ptr %__pyx_t_4, align 8, !tbaa !5
  %43 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %44 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %44, i32 0, i32 0
  %typeinfo53 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base, i32 0, i32 11
  store ptr %43, ptr %typeinfo53, align 8, !tbaa !229
  %memview54 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_memviewslice, i32 0, i32 0
  %45 = load ptr, ptr %memview54, align 8, !tbaa !185
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %45, i32 0, i32 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_5, ptr align 8 %view, i64 80, i1 false), !tbaa.struct !230
  %46 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base55 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %46, i32 0, i32 0
  %view56 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base55, i32 0, i32 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %view56, ptr align 8 %__pyx_t_5, i64 80, i1 false), !tbaa.struct !230
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_memviewslice, i32 0, i32 1
  %47 = load ptr, ptr %data, align 8, !tbaa !188
  %48 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base57 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %48, i32 0, i32 0
  %view58 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base57, i32 0, i32 8
  %buf = getelementptr inbounds %struct.Py_buffer, ptr %view58, i32 0, i32 0
  store ptr %47, ptr %buf, align 8, !tbaa !231
  %49 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %50 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base59 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %50, i32 0, i32 0
  %view60 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base59, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view60, i32 0, i32 5
  store i32 %49, ptr %ndim, align 4, !tbaa !232
  %51 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base61 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %51, i32 0, i32 0
  %view62 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base61, i32 0, i32 8
  %obj = getelementptr inbounds %struct.Py_buffer, ptr %view62, i32 0, i32 1
  store ptr @_Py_NoneStruct, ptr %obj, align 8, !tbaa !214
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %memview63 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_memviewslice, i32 0, i32 0
  %52 = load ptr, ptr %memview63, align 8, !tbaa !185
  %flags = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %52, i32 0, i32 9
  %53 = load i32, ptr %flags, align 8, !tbaa !118
  %and = and i32 %53, 1
  %cmp64 = icmp ne i32 %and, 0
  %conv65 = zext i1 %cmp64 to i32
  store i32 %conv65, ptr %__pyx_t_1, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool66 = icmp ne i32 %54, 0
  br i1 %tobool66, label %if.then67, label %if.end70

if.then67:                                        ; preds = %if.end50
  %55 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base68 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %55, i32 0, i32 0
  %flags69 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base68, i32 0, i32 9
  store i32 29, ptr %flags69, align 8, !tbaa !233
  br label %__pyx_L4

if.end70:                                         ; preds = %if.end50
  %56 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base71 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %56, i32 0, i32 0
  %flags72 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base71, i32 0, i32 9
  store i32 28, ptr %flags72, align 8, !tbaa !233
  br label %__pyx_L4

__pyx_L4:                                         ; preds = %if.end70, %if.then67
  %57 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %from_slice73 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %57, i32 0, i32 1
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %from_slice73, i32 0, i32 2
  %arraydecay = getelementptr inbounds [8 x i64], ptr %shape, i64 0, i64 0
  %58 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base74 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %58, i32 0, i32 0
  %view75 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base74, i32 0, i32 8
  %shape76 = getelementptr inbounds %struct.Py_buffer, ptr %view75, i32 0, i32 7
  store ptr %arraydecay, ptr %shape76, align 8, !tbaa !234
  %59 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %from_slice77 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %59, i32 0, i32 1
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %from_slice77, i32 0, i32 3
  %arraydecay78 = getelementptr inbounds [8 x i64], ptr %strides, i64 0, i64 0
  %60 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base79 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %60, i32 0, i32 0
  %view80 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base79, i32 0, i32 8
  %strides81 = getelementptr inbounds %struct.Py_buffer, ptr %view80, i32 0, i32 8
  store ptr %arraydecay78, ptr %strides81, align 8, !tbaa !235
  %61 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base82 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %61, i32 0, i32 0
  %view83 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base82, i32 0, i32 8
  %suboffsets = getelementptr inbounds %struct.Py_buffer, ptr %view83, i32 0, i32 9
  store ptr null, ptr %suboffsets, align 8, !tbaa !236
  %62 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %from_slice84 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %62, i32 0, i32 1
  %suboffsets85 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %from_slice84, i32 0, i32 4
  %arraydecay86 = getelementptr inbounds [8 x i64], ptr %suboffsets85, i64 0, i64 0
  %63 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %idx.ext = sext i32 %63 to i64
  %add.ptr = getelementptr i64, ptr %arraydecay86, i64 %idx.ext
  store ptr %add.ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %64 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %from_slice87 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %64, i32 0, i32 1
  %suboffsets88 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %from_slice87, i32 0, i32 4
  %arraydecay89 = getelementptr inbounds [8 x i64], ptr %suboffsets88, i64 0, i64 0
  store ptr %arraydecay89, ptr %__pyx_t_8, align 8, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %__pyx_L4
  %65 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %66 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %cmp90 = icmp ult ptr %65, %66
  br i1 %cmp90, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %67 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  store ptr %67, ptr %__pyx_t_6, align 8, !tbaa !5
  %68 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %arrayidx = getelementptr i64, ptr %68, i64 0
  %69 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %69, ptr %__pyx_v_suboffset, align 8, !tbaa !27
  %70 = load i64, ptr %__pyx_v_suboffset, align 8, !tbaa !27
  %cmp92 = icmp sge i64 %70, 0
  %conv93 = zext i1 %cmp92 to i32
  %cmp94 = icmp ne i32 %conv93, 0
  %conv95 = zext i1 %cmp94 to i32
  store i32 %conv95, ptr %__pyx_t_1, align 4, !tbaa !9
  %71 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool96 = icmp ne i32 %71, 0
  br i1 %tobool96, label %if.then97, label %if.end104

if.then97:                                        ; preds = %for.body
  %72 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %from_slice98 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %72, i32 0, i32 1
  %suboffsets99 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %from_slice98, i32 0, i32 4
  %arraydecay100 = getelementptr inbounds [8 x i64], ptr %suboffsets99, i64 0, i64 0
  %73 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base101 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %73, i32 0, i32 0
  %view102 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base101, i32 0, i32 8
  %suboffsets103 = getelementptr inbounds %struct.Py_buffer, ptr %view102, i32 0, i32 9
  store ptr %arraydecay100, ptr %suboffsets103, align 8, !tbaa !236
  br label %__pyx_L6_break

if.end104:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end104
  %74 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %incdec.ptr = getelementptr i64, ptr %74, i32 1
  store ptr %incdec.ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  br label %for.cond, !llvm.loop !237

for.end:                                          ; preds = %for.cond
  br label %__pyx_L6_break

__pyx_L6_break:                                   ; preds = %for.end, %if.then97
  %75 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base105 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %75, i32 0, i32 0
  %view106 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base105, i32 0, i32 8
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %view106, i32 0, i32 3
  %76 = load i64, ptr %itemsize, align 8, !tbaa !238
  store i64 %76, ptr %__pyx_t_9, align 8, !tbaa !27
  %77 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %78 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base107 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %78, i32 0, i32 0
  %view108 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base107, i32 0, i32 8
  %len = getelementptr inbounds %struct.Py_buffer, ptr %view108, i32 0, i32 2
  store i64 %77, ptr %len, align 8, !tbaa !239
  %79 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base109 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %79, i32 0, i32 0
  %view110 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base109, i32 0, i32 8
  %shape111 = getelementptr inbounds %struct.Py_buffer, ptr %view110, i32 0, i32 7
  %80 = load ptr, ptr %shape111, align 8, !tbaa !234
  %81 = load i32, ptr %__pyx_v_ndim.addr, align 4, !tbaa !9
  %idx.ext112 = sext i32 %81 to i64
  %add.ptr113 = getelementptr i64, ptr %80, i64 %idx.ext112
  store ptr %add.ptr113, ptr %__pyx_t_7, align 8, !tbaa !5
  %82 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base114 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %82, i32 0, i32 0
  %view115 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base114, i32 0, i32 8
  %shape116 = getelementptr inbounds %struct.Py_buffer, ptr %view115, i32 0, i32 7
  %83 = load ptr, ptr %shape116, align 8, !tbaa !234
  store ptr %83, ptr %__pyx_t_8, align 8, !tbaa !5
  br label %for.cond117

for.cond117:                                      ; preds = %for.inc181, %__pyx_L6_break
  %84 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %85 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %cmp118 = icmp ult ptr %84, %85
  br i1 %cmp118, label %for.body120, label %for.end183

for.body120:                                      ; preds = %for.cond117
  %86 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  store ptr %86, ptr %__pyx_t_6, align 8, !tbaa !5
  %87 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %arrayidx121 = getelementptr i64, ptr %87, i64 0
  %88 = load i64, ptr %arrayidx121, align 8, !tbaa !27
  %call122 = call ptr @PyLong_FromSsize_t(i64 noundef %88)
  store ptr %call122, ptr %__pyx_t_2, align 8, !tbaa !5
  %89 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool123 = icmp ne ptr %89, null
  %lnot124 = xor i1 %tobool123, true
  %lnot126 = xor i1 %lnot124, true
  %lnot128 = xor i1 %lnot126, true
  %lnot.ext129 = zext i1 %lnot128 to i32
  %conv130 = sext i32 %lnot.ext129 to i64
  %expval131 = call i64 @llvm.expect.i64(i64 %conv130, i64 0)
  %tobool132 = icmp ne i64 %expval131, 0
  br i1 %tobool132, label %if.then133, label %if.end134

if.then133:                                       ; preds = %for.body120
  %90 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %90, ptr %__pyx_filename, align 8, !tbaa !5
  %91 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1045, ptr %__pyx_lineno, align 4, !tbaa !9
  %92 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15859, ptr %__pyx_clineno, align 4, !tbaa !9
  %93 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end134:                                        ; preds = %for.body120
  br label %do.body

do.body:                                          ; preds = %if.end134
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %94 = load ptr, ptr %__pyx_v_length, align 8, !tbaa !5
  store ptr %94, ptr %tmp, align 8, !tbaa !5
  %95 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %95, ptr %__pyx_v_length, align 8, !tbaa !5
  %96 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %96)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %97 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base135 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %97, i32 0, i32 0
  %view136 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base135, i32 0, i32 8
  %len137 = getelementptr inbounds %struct.Py_buffer, ptr %view136, i32 0, i32 2
  %98 = load i64, ptr %len137, align 8, !tbaa !239
  %call138 = call ptr @PyLong_FromSsize_t(i64 noundef %98)
  store ptr %call138, ptr %__pyx_t_2, align 8, !tbaa !5
  %99 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool139 = icmp ne ptr %99, null
  %lnot140 = xor i1 %tobool139, true
  %lnot142 = xor i1 %lnot140, true
  %lnot144 = xor i1 %lnot142, true
  %lnot.ext145 = zext i1 %lnot144 to i32
  %conv146 = sext i32 %lnot.ext145 to i64
  %expval147 = call i64 @llvm.expect.i64(i64 %conv146, i64 0)
  %tobool148 = icmp ne i64 %expval147, 0
  br i1 %tobool148, label %if.then149, label %if.end150

if.then149:                                       ; preds = %do.end
  %100 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %100, ptr %__pyx_filename, align 8, !tbaa !5
  %101 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1046, ptr %__pyx_lineno, align 4, !tbaa !9
  %102 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15871, ptr %__pyx_clineno, align 4, !tbaa !9
  %103 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end150:                                        ; preds = %do.end
  %104 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %105 = load ptr, ptr %__pyx_v_length, align 8, !tbaa !5
  %call151 = call ptr @PyNumber_InPlaceMultiply(ptr noundef %104, ptr noundef %105)
  store ptr %call151, ptr %__pyx_t_3, align 8, !tbaa !5
  %106 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool152 = icmp ne ptr %106, null
  %lnot153 = xor i1 %tobool152, true
  %lnot155 = xor i1 %lnot153, true
  %lnot157 = xor i1 %lnot155, true
  %lnot.ext158 = zext i1 %lnot157 to i32
  %conv159 = sext i32 %lnot.ext158 to i64
  %expval160 = call i64 @llvm.expect.i64(i64 %conv159, i64 0)
  %tobool161 = icmp ne i64 %expval160, 0
  br i1 %tobool161, label %if.then162, label %if.end163

if.then162:                                       ; preds = %if.end150
  %107 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %107, ptr %__pyx_filename, align 8, !tbaa !5
  %108 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1046, ptr %__pyx_lineno, align 4, !tbaa !9
  %109 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15873, ptr %__pyx_clineno, align 4, !tbaa !9
  %110 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end163:                                        ; preds = %if.end150
  %111 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %111)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %112 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call164 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %112)
  store i64 %call164, ptr %__pyx_t_9, align 8, !tbaa !27
  %113 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %cmp165 = icmp eq i64 %113, -1
  br i1 %cmp165, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end163
  %call167 = call ptr @PyErr_Occurred()
  %tobool168 = icmp ne ptr %call167, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end163
  %114 = phi i1 [ false, %if.end163 ], [ %tobool168, %land.rhs ]
  %lnot169 = xor i1 %114, true
  %lnot171 = xor i1 %lnot169, true
  %lnot.ext172 = zext i1 %lnot171 to i32
  %conv173 = sext i32 %lnot.ext172 to i64
  %expval174 = call i64 @llvm.expect.i64(i64 %conv173, i64 0)
  %tobool175 = icmp ne i64 %expval174, 0
  br i1 %tobool175, label %if.then176, label %if.end177

if.then176:                                       ; preds = %land.end
  %115 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %115, ptr %__pyx_filename, align 8, !tbaa !5
  %116 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1046, ptr %__pyx_lineno, align 4, !tbaa !9
  %117 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15876, ptr %__pyx_clineno, align 4, !tbaa !9
  %118 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end177:                                        ; preds = %land.end
  %119 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %119)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %120 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %121 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %__pyx_base178 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %121, i32 0, i32 0
  %view179 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base178, i32 0, i32 8
  %len180 = getelementptr inbounds %struct.Py_buffer, ptr %view179, i32 0, i32 2
  store i64 %120, ptr %len180, align 8, !tbaa !239
  br label %for.inc181

for.inc181:                                       ; preds = %if.end177
  %122 = load ptr, ptr %__pyx_t_8, align 8, !tbaa !5
  %incdec.ptr182 = getelementptr i64, ptr %122, i32 1
  store ptr %incdec.ptr182, ptr %__pyx_t_8, align 8, !tbaa !5
  br label %for.cond117, !llvm.loop !240

for.end183:                                       ; preds = %for.cond117
  %123 = load ptr, ptr %__pyx_v_to_object_func.addr, align 8, !tbaa !5
  %124 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %to_object_func = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %124, i32 0, i32 3
  store ptr %123, ptr %to_object_func, align 8, !tbaa !129
  %125 = load ptr, ptr %__pyx_v_to_dtype_func.addr, align 8, !tbaa !5
  %126 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %to_dtype_func = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %126, i32 0, i32 4
  store ptr %125, ptr %to_dtype_func, align 8, !tbaa !132
  %127 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %127)
  %128 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %128)
  %129 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr %129, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then176, %if.then162, %if.then149, %if.then133, %if.then49, %if.then35, %if.then22, %if.then9
  %130 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %130)
  %131 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %131)
  %132 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %133 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %134 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.177, i32 noundef %132, i32 noundef %133, ptr noundef %134)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %for.end183, %if.then
  %135 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %135)
  %136 = load ptr, ptr %__pyx_v_length, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %136)
  %137 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 80, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_length) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_suboffset) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_result) #13
  ret ptr %137
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_INC_MEMVIEW(ptr noundef %memslice, i32 noundef %have_gil, i32 noundef %lineno) #3 {
entry:
  %memslice.addr = alloca ptr, align 8
  %have_gil.addr = alloca i32, align 4
  %lineno.addr = alloca i32, align 4
  %first_time = alloca i32, align 4
  %memview = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %_gilstate = alloca i32, align 4
  store ptr %memslice, ptr %memslice.addr, align 8, !tbaa !5
  store i32 %have_gil, ptr %have_gil.addr, align 4, !tbaa !9
  store i32 %lineno, ptr %lineno.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %first_time) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %memview) #13
  %0 = load ptr, ptr %memslice.addr, align 8, !tbaa !5
  %memview1 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %memview1, align 8, !tbaa !185
  store ptr %1, ptr %memview, align 8, !tbaa !5
  %2 = load ptr, ptr %memview, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  br i1 %tobool, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %entry
  %3 = load ptr, ptr %memview, align 8, !tbaa !5
  %cmp = icmp eq ptr %3, @_Py_NoneStruct
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp, %lor.rhs ]
  %lnot = xor i1 %4, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %lor.end
  %5 = load ptr, ptr %memview, align 8, !tbaa !5
  %acquisition_count_aligned_p = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %5, i32 0, i32 7
  %6 = load ptr, ptr %acquisition_count_aligned_p, align 8, !tbaa !241
  %7 = load volatile i32, ptr %6, align 4, !tbaa !9
  %cmp4 = icmp slt i32 %7, 0
  %lnot6 = xor i1 %cmp4, true
  %lnot8 = xor i1 %lnot6, true
  %lnot.ext9 = zext i1 %lnot8 to i32
  %conv10 = sext i32 %lnot.ext9 to i64
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0)
  %tobool12 = icmp ne i64 %expval11, 0
  br i1 %tobool12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.end
  %8 = load ptr, ptr %memview, align 8, !tbaa !5
  %acquisition_count_aligned_p14 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %8, i32 0, i32 7
  %9 = load ptr, ptr %acquisition_count_aligned_p14, align 8, !tbaa !241
  %10 = load volatile i32, ptr %9, align 4, !tbaa !9
  %11 = load i32, ptr %lineno.addr, align 4, !tbaa !9
  call void (ptr, ...) @__pyx_fatalerror(ptr noundef @.str.178, i32 noundef %10, i32 noundef %11)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.end
  %12 = load ptr, ptr %memview, align 8, !tbaa !5
  %acquisition_count_aligned_p16 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %12, i32 0, i32 7
  %13 = load ptr, ptr %acquisition_count_aligned_p16, align 8, !tbaa !241
  %14 = atomicrmw add ptr %13, i32 1 seq_cst, align 4
  %cmp17 = icmp eq i32 %14, 0
  %conv18 = zext i1 %cmp17 to i32
  store i32 %conv18, ptr %first_time, align 4, !tbaa !9
  %15 = load i32, ptr %first_time, align 4, !tbaa !9
  %tobool19 = icmp ne i32 %15, 0
  %lnot20 = xor i1 %tobool19, true
  %lnot22 = xor i1 %lnot20, true
  %lnot.ext23 = zext i1 %lnot22 to i32
  %conv24 = sext i32 %lnot.ext23 to i64
  %expval25 = call i64 @llvm.expect.i64(i64 %conv24, i64 0)
  %tobool26 = icmp ne i64 %expval25, 0
  br i1 %tobool26, label %if.then27, label %if.end31

if.then27:                                        ; preds = %if.end15
  %16 = load i32, ptr %have_gil.addr, align 4, !tbaa !9
  %tobool28 = icmp ne i32 %16, 0
  br i1 %tobool28, label %if.then29, label %if.else

if.then29:                                        ; preds = %if.then27
  %17 = load ptr, ptr %memview, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %17)
  br label %if.end30

if.else:                                          ; preds = %if.then27
  call void @llvm.lifetime.start.p0(i64 4, ptr %_gilstate) #13
  %call = call i32 @PyGILState_Ensure()
  store i32 %call, ptr %_gilstate, align 4, !tbaa !29
  %18 = load ptr, ptr %memview, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %18)
  %19 = load i32, ptr %_gilstate, align 4, !tbaa !29
  call void @PyGILState_Release(i32 noundef %19)
  call void @llvm.lifetime.end.p0(i64 4, ptr %_gilstate) #13
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then29
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end15
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end31, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %memview) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %first_time) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare ptr @PyNumber_InPlaceMultiply(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__pyx_fatalerror(ptr noundef %fmt, ...) #0 {
entry:
  %fmt.addr = alloca ptr, align 8
  %vargs = alloca [1 x %struct.__va_list_tag], align 16
  %msg = alloca [200 x i8], align 16
  store ptr %fmt, ptr %fmt.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr %vargs) #13
  call void @llvm.lifetime.start.p0(i64 200, ptr %msg) #13
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %vargs, i64 0, i64 0
  call void @llvm.va_start.p0(ptr %arraydecay)
  %arraydecay1 = getelementptr inbounds [200 x i8], ptr %msg, i64 0, i64 0
  %0 = load ptr, ptr %fmt.addr, align 8, !tbaa !5
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %vargs, i64 0, i64 0
  %call = call i32 @vsnprintf(ptr noundef %arraydecay1, i64 noundef 200, ptr noundef %0, ptr noundef %arraydecay2) #13
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], ptr %vargs, i64 0, i64 0
  call void @llvm.va_end.p0(ptr %arraydecay3)
  %arraydecay4 = getelementptr inbounds [200 x i8], ptr %msg, i64 0, i64 0
  call void @_Py_FatalErrorFunc(ptr noundef @__func__.__pyx_fatalerror, ptr noundef %arraydecay4) #18
  unreachable
}

; Function Attrs: nounwind
declare i32 @vsnprintf(ptr noundef, i64 noundef, ptr noundef, ptr noundef) #7

; Function Attrs: noreturn
declare void @_Py_FatalErrorFunc(ptr noundef, ptr noundef) #10

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memoryview___setitem__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_index, ptr noundef %__pyx_v_value) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_index.addr = alloca ptr, align 8
  %__pyx_v_value.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_index, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  store ptr %__pyx_v_value, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call = call i32 @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_6__setitem__(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  store i32 %call, ptr %__pyx_r, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_6__setitem__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_index, ptr noundef %__pyx_v_value) #0 {
entry:
  %retval = alloca i32, align 4
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_index.addr = alloca ptr, align 8
  %__pyx_v_value.addr = alloca ptr, align 8
  %__pyx_v_have_slices = alloca ptr, align 8
  %__pyx_v_obj = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %sequence = alloca ptr, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_index, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  store ptr %__pyx_v_value, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_have_slices) #13
  store ptr null, ptr %__pyx_v_have_slices, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_obj) #13
  store ptr null, ptr %__pyx_v_obj, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %1, i32 0, i32 8
  %readonly = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 4
  %2 = load i32, ptr %readonly, align 8, !tbaa !242
  %cmp = icmp ne i32 %2, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, ptr %__pyx_t_1, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %3, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv2 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv2, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end15

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %5 = load ptr, ptr @__pyx_tuple__12, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_Call(ptr noundef %4, ptr noundef %5, ptr noundef null)
  store ptr %call, ptr %__pyx_t_2, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %6, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then14, label %if.end

if.then14:                                        ; preds = %if.then
  %7 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %7, ptr %__pyx_filename, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 420, ptr %__pyx_lineno, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9453, ptr %__pyx_clineno, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %if.then
  %11 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %11, ptr noundef null, ptr noundef null, ptr noundef null)
  %12 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %12)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %13 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %13, ptr %__pyx_filename, align 8, !tbaa !5
  %14 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 420, ptr %__pyx_lineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9457, ptr %__pyx_clineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end15:                                         ; preds = %entry
  %17 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view16 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %18, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view16, i32 0, i32 5
  %19 = load i32, ptr %ndim, align 4, !tbaa !123
  %call17 = call ptr @_unellipsify(ptr noundef %17, i32 noundef %19)
  store ptr %call17, ptr %__pyx_t_2, align 8, !tbaa !5
  %20 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %20, null
  %lnot19 = xor i1 %tobool18, true
  %lnot21 = xor i1 %lnot19, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end15
  %21 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %21, ptr %__pyx_filename, align 8, !tbaa !5
  %22 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 422, ptr %__pyx_lineno, align 4, !tbaa !9
  %23 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9475, ptr %__pyx_clineno, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end29:                                         ; preds = %if.end15
  %25 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %cmp30 = icmp ne ptr %25, @_Py_NoneStruct
  %lnot32 = xor i1 %cmp30, true
  %lnot34 = xor i1 %lnot32, true
  %lnot.ext35 = zext i1 %lnot34 to i32
  %conv36 = sext i32 %lnot.ext35 to i64
  %expval37 = call i64 @llvm.expect.i64(i64 %conv36, i64 1)
  %tobool38 = icmp ne i64 %expval37, 0
  br i1 %tobool38, label %if.then39, label %if.else63

if.then39:                                        ; preds = %if.end29
  call void @llvm.lifetime.start.p0(i64 8, ptr %sequence) #13
  %26 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %26, ptr %sequence, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #13
  %27 = load ptr, ptr %sequence, align 8, !tbaa !5
  %call40 = call i64 @Py_SIZE(ptr noundef %27)
  store i64 %call40, ptr %size, align 8, !tbaa !27
  %28 = load i64, ptr %size, align 8, !tbaa !27
  %cmp41 = icmp ne i64 %28, 2
  %lnot43 = xor i1 %cmp41, true
  %lnot45 = xor i1 %lnot43, true
  %lnot.ext46 = zext i1 %lnot45 to i32
  %conv47 = sext i32 %lnot.ext46 to i64
  %expval48 = call i64 @llvm.expect.i64(i64 %conv47, i64 0)
  %tobool49 = icmp ne i64 %expval48, 0
  br i1 %tobool49, label %if.then50, label %if.end59

if.then50:                                        ; preds = %if.then39
  %29 = load i64, ptr %size, align 8, !tbaa !27
  %cmp51 = icmp sgt i64 %29, 2
  br i1 %cmp51, label %if.then53, label %if.else

if.then53:                                        ; preds = %if.then50
  call void @__Pyx_RaiseTooManyValuesError(i64 noundef 2)
  br label %if.end58

if.else:                                          ; preds = %if.then50
  %30 = load i64, ptr %size, align 8, !tbaa !27
  %cmp54 = icmp sge i64 %30, 0
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.else
  %31 = load i64, ptr %size, align 8, !tbaa !27
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %31)
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then53
  %32 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %32, ptr %__pyx_filename, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 422, ptr %__pyx_lineno, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9483, ptr %__pyx_clineno, align 4, !tbaa !9
  %35 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end59:                                         ; preds = %if.then39
  %36 = load ptr, ptr %sequence, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %36, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0
  %37 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %37, ptr %__pyx_t_3, align 8, !tbaa !5
  %38 = load ptr, ptr %sequence, align 8, !tbaa !5
  %ob_item60 = getelementptr inbounds %struct.PyTupleObject, ptr %38, i32 0, i32 1
  %arrayidx61 = getelementptr [1 x ptr], ptr %ob_item60, i64 0, i64 1
  %39 = load ptr, ptr %arrayidx61, align 8, !tbaa !5
  store ptr %39, ptr %__pyx_t_4, align 8, !tbaa !5
  %40 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %40)
  %41 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %41)
  %42 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %42)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end58, %if.end59
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %sequence) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup196 [
    i32 0, label %cleanup.cont
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end64

if.else63:                                        ; preds = %if.end29
  call void @__Pyx_RaiseNoneNotIterableError()
  %43 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %43, ptr %__pyx_filename, align 8, !tbaa !5
  %44 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 422, ptr %__pyx_lineno, align 4, !tbaa !9
  %45 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9498, ptr %__pyx_clineno, align 4, !tbaa !9
  %46 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end64:                                         ; preds = %cleanup.cont
  %47 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %47, ptr %__pyx_v_have_slices, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %if.end64
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %48 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  store ptr %48, ptr %tmp, align 8, !tbaa !5
  %49 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %49, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %50 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %50)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %51 = load ptr, ptr %__pyx_v_have_slices, align 8, !tbaa !5
  %call65 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %51)
  store i32 %call65, ptr %__pyx_t_1, align 4, !tbaa !9
  %52 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp66 = icmp slt i32 %52, 0
  %lnot68 = xor i1 %cmp66, true
  %lnot70 = xor i1 %lnot68, true
  %lnot.ext71 = zext i1 %lnot70 to i32
  %conv72 = sext i32 %lnot.ext71 to i64
  %expval73 = call i64 @llvm.expect.i64(i64 %conv72, i64 0)
  %tobool74 = icmp ne i64 %expval73, 0
  br i1 %tobool74, label %if.then75, label %if.end76

if.then75:                                        ; preds = %do.end
  %53 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %53, ptr %__pyx_filename, align 8, !tbaa !5
  %54 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 424, ptr %__pyx_lineno, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9512, ptr %__pyx_clineno, align 4, !tbaa !9
  %56 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end76:                                         ; preds = %do.end
  %57 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool77 = icmp ne i32 %57, 0
  br i1 %tobool77, label %if.then78, label %if.end181

if.then78:                                        ; preds = %if.end76
  %58 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %__pyx_vtab = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %58, i32 0, i32 1
  %59 = load ptr, ptr %__pyx_vtab, align 8, !tbaa !121
  %is_slice = getelementptr inbounds %struct.__pyx_vtabstruct_memoryview, ptr %59, i32 0, i32 1
  %60 = load ptr, ptr %is_slice, align 8, !tbaa !40
  %61 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %62 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call79 = call ptr %60(ptr noundef %61, ptr noundef %62)
  store ptr %call79, ptr %__pyx_t_2, align 8, !tbaa !5
  %63 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool80 = icmp ne ptr %63, null
  %lnot81 = xor i1 %tobool80, true
  %lnot83 = xor i1 %lnot81, true
  %lnot85 = xor i1 %lnot83, true
  %lnot.ext86 = zext i1 %lnot85 to i32
  %conv87 = sext i32 %lnot.ext86 to i64
  %expval88 = call i64 @llvm.expect.i64(i64 %conv87, i64 0)
  %tobool89 = icmp ne i64 %expval88, 0
  br i1 %tobool89, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.then78
  %64 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %64, ptr %__pyx_filename, align 8, !tbaa !5
  %65 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 425, ptr %__pyx_lineno, align 4, !tbaa !9
  %66 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9522, ptr %__pyx_clineno, align 4, !tbaa !9
  %67 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end91:                                         ; preds = %if.then78
  %68 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %68, ptr %__pyx_v_obj, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %69 = load ptr, ptr %__pyx_v_obj, align 8, !tbaa !5
  %call92 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %69)
  store i32 %call92, ptr %__pyx_t_1, align 4, !tbaa !9
  %70 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp93 = icmp slt i32 %70, 0
  %lnot95 = xor i1 %cmp93, true
  %lnot97 = xor i1 %lnot95, true
  %lnot.ext98 = zext i1 %lnot97 to i32
  %conv99 = sext i32 %lnot.ext98 to i64
  %expval100 = call i64 @llvm.expect.i64(i64 %conv99, i64 0)
  %tobool101 = icmp ne i64 %expval100, 0
  br i1 %tobool101, label %if.then102, label %if.end103

if.then102:                                       ; preds = %if.end91
  %71 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %71, ptr %__pyx_filename, align 8, !tbaa !5
  %72 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 426, ptr %__pyx_lineno, align 4, !tbaa !9
  %73 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9534, ptr %__pyx_clineno, align 4, !tbaa !9
  %74 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end103:                                        ; preds = %if.end91
  %75 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool104 = icmp ne i32 %75, 0
  br i1 %tobool104, label %if.then105, label %if.end133

if.then105:                                       ; preds = %if.end103
  %76 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %77 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %call106 = call ptr @__Pyx_PyObject_GetItem(ptr noundef %76, ptr noundef %77)
  store ptr %call106, ptr %__pyx_t_2, align 8, !tbaa !5
  %78 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool107 = icmp ne ptr %78, null
  %lnot108 = xor i1 %tobool107, true
  %lnot110 = xor i1 %lnot108, true
  %lnot112 = xor i1 %lnot110, true
  %lnot.ext113 = zext i1 %lnot112 to i32
  %conv114 = sext i32 %lnot.ext113 to i64
  %expval115 = call i64 @llvm.expect.i64(i64 %conv114, i64 0)
  %tobool116 = icmp ne i64 %expval115, 0
  br i1 %tobool116, label %if.then117, label %if.end118

if.then117:                                       ; preds = %if.then105
  %79 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %79, ptr %__pyx_filename, align 8, !tbaa !5
  %80 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 427, ptr %__pyx_lineno, align 4, !tbaa !9
  %81 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9544, ptr %__pyx_clineno, align 4, !tbaa !9
  %82 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end118:                                        ; preds = %if.then105
  %83 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %__pyx_vtab119 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %83, i32 0, i32 1
  %84 = load ptr, ptr %__pyx_vtab119, align 8, !tbaa !121
  %setitem_slice_assignment = getelementptr inbounds %struct.__pyx_vtabstruct_memoryview, ptr %84, i32 0, i32 2
  %85 = load ptr, ptr %setitem_slice_assignment, align 8, !tbaa !41
  %86 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %87 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %88 = load ptr, ptr %__pyx_v_obj, align 8, !tbaa !5
  %call120 = call ptr %85(ptr noundef %86, ptr noundef %87, ptr noundef %88)
  store ptr %call120, ptr %__pyx_t_4, align 8, !tbaa !5
  %89 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool121 = icmp ne ptr %89, null
  %lnot122 = xor i1 %tobool121, true
  %lnot124 = xor i1 %lnot122, true
  %lnot126 = xor i1 %lnot124, true
  %lnot.ext127 = zext i1 %lnot126 to i32
  %conv128 = sext i32 %lnot.ext127 to i64
  %expval129 = call i64 @llvm.expect.i64(i64 %conv128, i64 0)
  %tobool130 = icmp ne i64 %expval129, 0
  br i1 %tobool130, label %if.then131, label %if.end132

if.then131:                                       ; preds = %if.end118
  %90 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %90, ptr %__pyx_filename, align 8, !tbaa !5
  %91 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 427, ptr %__pyx_lineno, align 4, !tbaa !9
  %92 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9546, ptr %__pyx_clineno, align 4, !tbaa !9
  %93 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end132:                                        ; preds = %if.end118
  %94 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %94)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %95 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %95)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %__pyx_L5

if.end133:                                        ; preds = %if.end103
  %96 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %97 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %call134 = call ptr @__Pyx_PyObject_GetItem(ptr noundef %96, ptr noundef %97)
  store ptr %call134, ptr %__pyx_t_4, align 8, !tbaa !5
  %98 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool135 = icmp ne ptr %98, null
  %lnot136 = xor i1 %tobool135, true
  %lnot138 = xor i1 %lnot136, true
  %lnot140 = xor i1 %lnot138, true
  %lnot.ext141 = zext i1 %lnot140 to i32
  %conv142 = sext i32 %lnot.ext141 to i64
  %expval143 = call i64 @llvm.expect.i64(i64 %conv142, i64 0)
  %tobool144 = icmp ne i64 %expval143, 0
  br i1 %tobool144, label %if.then145, label %if.end146

if.then145:                                       ; preds = %if.end133
  %99 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %99, ptr %__pyx_filename, align 8, !tbaa !5
  %100 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 429, ptr %__pyx_lineno, align 4, !tbaa !9
  %101 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9569, ptr %__pyx_clineno, align 4, !tbaa !9
  %102 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end146:                                        ; preds = %if.end133
  %103 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %cmp147 = icmp eq ptr %103, @_Py_NoneStruct
  br i1 %cmp147, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end146
  %104 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %105 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  %call149 = call i32 @__Pyx_TypeTest(ptr noundef %104, ptr noundef %105)
  %tobool150 = icmp ne i32 %call149, 0
  %lnot151 = xor i1 %tobool150, true
  %lnot153 = xor i1 %lnot151, true
  %lnot.ext154 = zext i1 %lnot153 to i32
  %conv155 = sext i32 %lnot.ext154 to i64
  %expval156 = call i64 @llvm.expect.i64(i64 %conv155, i64 1)
  %tobool157 = icmp ne i64 %expval156, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end146
  %106 = phi i1 [ true, %if.end146 ], [ %tobool157, %lor.rhs ]
  %lnot158 = xor i1 %106, true
  %lnot160 = xor i1 %lnot158, true
  %lnot.ext161 = zext i1 %lnot160 to i32
  %conv162 = sext i32 %lnot.ext161 to i64
  %expval163 = call i64 @llvm.expect.i64(i64 %conv162, i64 1)
  %tobool164 = icmp ne i64 %expval163, 0
  br i1 %tobool164, label %if.end166, label %if.then165

if.then165:                                       ; preds = %lor.end
  %107 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %107, ptr %__pyx_filename, align 8, !tbaa !5
  %108 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 429, ptr %__pyx_lineno, align 4, !tbaa !9
  %109 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9571, ptr %__pyx_clineno, align 4, !tbaa !9
  %110 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end166:                                        ; preds = %lor.end
  %111 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %__pyx_vtab167 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %111, i32 0, i32 1
  %112 = load ptr, ptr %__pyx_vtab167, align 8, !tbaa !121
  %setitem_slice_assign_scalar = getelementptr inbounds %struct.__pyx_vtabstruct_memoryview, ptr %112, i32 0, i32 3
  %113 = load ptr, ptr %setitem_slice_assign_scalar, align 8, !tbaa !42
  %114 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %115 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %116 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call168 = call ptr %113(ptr noundef %114, ptr noundef %115, ptr noundef %116)
  store ptr %call168, ptr %__pyx_t_2, align 8, !tbaa !5
  %117 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool169 = icmp ne ptr %117, null
  %lnot170 = xor i1 %tobool169, true
  %lnot172 = xor i1 %lnot170, true
  %lnot174 = xor i1 %lnot172, true
  %lnot.ext175 = zext i1 %lnot174 to i32
  %conv176 = sext i32 %lnot.ext175 to i64
  %expval177 = call i64 @llvm.expect.i64(i64 %conv176, i64 0)
  %tobool178 = icmp ne i64 %expval177, 0
  br i1 %tobool178, label %if.then179, label %if.end180

if.then179:                                       ; preds = %if.end166
  %118 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %118, ptr %__pyx_filename, align 8, !tbaa !5
  %119 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 429, ptr %__pyx_lineno, align 4, !tbaa !9
  %120 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9572, ptr %__pyx_clineno, align 4, !tbaa !9
  %121 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end180:                                        ; preds = %if.end166
  %122 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %122)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %123 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %123)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L5

__pyx_L5:                                         ; preds = %if.end180, %if.end132
  br label %__pyx_L4

if.end181:                                        ; preds = %if.end76
  %124 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %__pyx_vtab182 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %124, i32 0, i32 1
  %125 = load ptr, ptr %__pyx_vtab182, align 8, !tbaa !121
  %setitem_indexed = getelementptr inbounds %struct.__pyx_vtabstruct_memoryview, ptr %125, i32 0, i32 4
  %126 = load ptr, ptr %setitem_indexed, align 8, !tbaa !43
  %127 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %128 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  %129 = load ptr, ptr %__pyx_v_value.addr, align 8, !tbaa !5
  %call183 = call ptr %126(ptr noundef %127, ptr noundef %128, ptr noundef %129)
  store ptr %call183, ptr %__pyx_t_2, align 8, !tbaa !5
  %130 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool184 = icmp ne ptr %130, null
  %lnot185 = xor i1 %tobool184, true
  %lnot187 = xor i1 %lnot185, true
  %lnot189 = xor i1 %lnot187, true
  %lnot.ext190 = zext i1 %lnot189 to i32
  %conv191 = sext i32 %lnot.ext190 to i64
  %expval192 = call i64 @llvm.expect.i64(i64 %conv191, i64 0)
  %tobool193 = icmp ne i64 %expval192, 0
  br i1 %tobool193, label %if.then194, label %if.end195

if.then194:                                       ; preds = %if.end181
  %131 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %131, ptr %__pyx_filename, align 8, !tbaa !5
  %132 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 431, ptr %__pyx_lineno, align 4, !tbaa !9
  %133 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 9597, ptr %__pyx_clineno, align 4, !tbaa !9
  %134 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end195:                                        ; preds = %if.end181
  %135 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %135)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L4

__pyx_L4:                                         ; preds = %if.end195, %__pyx_L5
  store i32 0, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %cleanup, %if.then194, %if.then179, %if.then165, %if.then145, %if.then131, %if.then117, %if.then102, %if.then90, %if.then75, %if.else63, %if.then28, %if.end, %if.then14
  %136 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %136)
  %137 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %137)
  %138 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %138)
  %139 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %140 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %141 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.179, i32 noundef %139, i32 noundef %140, ptr noundef %141)
  store i32 -1, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %__pyx_L4
  %142 = load ptr, ptr %__pyx_v_have_slices, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %142)
  %143 = load ptr, ptr %__pyx_v_obj, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %143)
  %144 = load ptr, ptr %__pyx_v_index.addr, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %144)
  %145 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  store i32 %145, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup196

cleanup196:                                       ; preds = %__pyx_L0, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_obj) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_have_slices) #13
  %146 = load i32, ptr %retval, align 4
  ret i32 %146
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_14__str__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %2 = load ptr, ptr @__pyx_n_s_base, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %1, ptr noundef %2)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 618, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12152, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %9 = load ptr, ptr @__pyx_n_s_class, align 8, !tbaa !5
  %call4 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %8, ptr noundef %9)
  store ptr %call4, ptr %__pyx_t_2, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %10, null
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  %11 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %11, ptr %__pyx_filename, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 618, ptr %__pyx_lineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12154, ptr %__pyx_clineno, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end16:                                         ; preds = %if.end
  %15 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %15)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %17 = load ptr, ptr @__pyx_n_s_name_2, align 8, !tbaa !5
  %call17 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %16, ptr noundef %17)
  store ptr %call17, ptr %__pyx_t_1, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %18, null
  %lnot19 = xor i1 %tobool18, true
  %lnot21 = xor i1 %lnot19, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end16
  %19 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %19, ptr %__pyx_filename, align 8, !tbaa !5
  %20 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 618, ptr %__pyx_lineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12157, ptr %__pyx_clineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end29:                                         ; preds = %if.end16
  %23 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %23)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %call30 = call ptr @PyTuple_New(i64 noundef 1)
  store ptr %call30, ptr %__pyx_t_2, align 8, !tbaa !5
  %24 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool31 = icmp ne ptr %24, null
  %lnot32 = xor i1 %tobool31, true
  %lnot34 = xor i1 %lnot32, true
  %lnot36 = xor i1 %lnot34, true
  %lnot.ext37 = zext i1 %lnot36 to i32
  %conv38 = sext i32 %lnot.ext37 to i64
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0)
  %tobool40 = icmp ne i64 %expval39, 0
  br i1 %tobool40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.end29
  %25 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %25, ptr %__pyx_filename, align 8, !tbaa !5
  %26 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 618, ptr %__pyx_lineno, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12160, ptr %__pyx_clineno, align 4, !tbaa !9
  %28 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end42:                                         ; preds = %if.end29
  %29 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %29, i64 noundef 0, ptr noundef %30)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %31 = load ptr, ptr @__pyx_kp_s_MemoryView_of_r_object, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call43 = call ptr @PyUnicode_Format(ptr noundef %31, ptr noundef %32)
  store ptr %call43, ptr %__pyx_t_1, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool44 = icmp ne ptr %33, null
  %lnot45 = xor i1 %tobool44, true
  %lnot47 = xor i1 %lnot45, true
  %lnot49 = xor i1 %lnot47, true
  %lnot.ext50 = zext i1 %lnot49 to i32
  %conv51 = sext i32 %lnot.ext50 to i64
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 0)
  %tobool53 = icmp ne i64 %expval52, 0
  br i1 %tobool53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end42
  %34 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %34, ptr %__pyx_filename, align 8, !tbaa !5
  %35 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 618, ptr %__pyx_lineno, align 4, !tbaa !9
  %36 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12165, ptr %__pyx_clineno, align 4, !tbaa !9
  %37 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end55:                                         ; preds = %if.end42
  %38 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %38)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %39, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then54, %if.then41, %if.then28, %if.then15, %if.then
  %40 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %40)
  %41 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %41)
  %42 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %43 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %44 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.180, i32 noundef %42, i32 noundef %43, ptr noundef %44)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end55
  %45 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %45
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_is_c_contig(ptr noundef %__pyx_v_self, ptr noundef %unused) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %unused.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %unused, ptr %unused.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_16is_c_contig(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_is_f_contig(ptr noundef %__pyx_v_self, ptr noundef %unused) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %unused.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %unused, ptr %unused.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_18is_f_contig(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_copy(ptr noundef %__pyx_v_self, ptr noundef %unused) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %unused.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %unused, ptr %unused.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_20copy(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_copy_fortran(ptr noundef %__pyx_v_self, ptr noundef %unused) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %unused.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %unused, ptr %unused.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_22copy_fortran(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw___pyx_memoryview_1__reduce_cython__(ptr noundef %__pyx_v_self, ptr noundef %unused) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %unused.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %unused, ptr %unused.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf___pyx_memoryview___reduce_cython__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw___pyx_memoryview_3__setstate_cython__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v___pyx_state) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf___pyx_memoryview_2__setstate_cython__(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %2
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_16is_c_contig(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_mslice = alloca ptr, align 8
  %__pyx_v_tmp = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_mslice) #13
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_tmp) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_memoryview_get_slice_from_memoryview(ptr noundef %0, ptr noundef %__pyx_v_tmp)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %cmp = icmp eq ptr %1, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 624, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12232, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %6, ptr %__pyx_v_mslice, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %7)
  %8 = load ptr, ptr %__pyx_v_mslice, align 8, !tbaa !5
  %arrayidx = getelementptr %struct.__Pyx_memviewslice, ptr %8, i64 0
  %9 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %9, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 5
  %10 = load i32, ptr %ndim, align 4, !tbaa !123
  %call2 = call i32 @__pyx_memviewslice_is_contig(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %arrayidx, i8 noundef signext 67, i32 noundef %10)
  %conv3 = sext i32 %call2 to i64
  %call4 = call ptr @__Pyx_PyBool_FromLong(i64 noundef %conv3)
  store ptr %call4, ptr %__pyx_t_2, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %11, null
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  %12 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %12, ptr %__pyx_filename, align 8, !tbaa !5
  %13 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 625, ptr %__pyx_lineno, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12243, ptr %__pyx_clineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end16:                                         ; preds = %if.end
  %16 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %16, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then15, %if.then
  %17 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %17)
  %18 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %20 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.185, i32 noundef %18, i32 noundef %19, ptr noundef %20)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end16
  %21 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_tmp) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_mslice) #13
  ret ptr %21
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_18is_f_contig(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_mslice = alloca ptr, align 8
  %__pyx_v_tmp = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_mslice) #13
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_tmp) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_memoryview_get_slice_from_memoryview(ptr noundef %0, ptr noundef %__pyx_v_tmp)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %cmp = icmp eq ptr %1, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 630, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12308, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %6, ptr %__pyx_v_mslice, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %7)
  %8 = load ptr, ptr %__pyx_v_mslice, align 8, !tbaa !5
  %arrayidx = getelementptr %struct.__Pyx_memviewslice, ptr %8, i64 0
  %9 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %9, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 5
  %10 = load i32, ptr %ndim, align 4, !tbaa !123
  %call2 = call i32 @__pyx_memviewslice_is_contig(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %arrayidx, i8 noundef signext 70, i32 noundef %10)
  %conv3 = sext i32 %call2 to i64
  %call4 = call ptr @__Pyx_PyBool_FromLong(i64 noundef %conv3)
  store ptr %call4, ptr %__pyx_t_2, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %11, null
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  %12 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %12, ptr %__pyx_filename, align 8, !tbaa !5
  %13 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 631, ptr %__pyx_lineno, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12319, ptr %__pyx_clineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end16:                                         ; preds = %if.end
  %16 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %16, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then15, %if.then
  %17 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %17)
  %18 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %20 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.186, i32 noundef %18, i32 noundef %19, ptr noundef %20)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end16
  %21 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_tmp) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_mslice) #13
  ret ptr %21
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_20copy(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_mslice = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_flags = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca %struct.__Pyx_memviewslice, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_mslice) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_flags) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %flags = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 9
  %1 = load i32, ptr %flags, align 8, !tbaa !118
  %and = and i32 %1, -89
  store i32 %and, ptr %__pyx_v_flags, align 4, !tbaa !9
  %2 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @__pyx_memoryview_slice_copy(ptr noundef %2, ptr noundef %__pyx_v_mslice)
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp) #13
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %3, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 5
  %4 = load i32, ptr %ndim, align 4, !tbaa !123
  %5 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view1 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %5, i32 0, i32 8
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %view1, i32 0, i32 3
  %6 = load i64, ptr %itemsize, align 8, !tbaa !120
  %7 = load i32, ptr %__pyx_v_flags, align 4, !tbaa !9
  %or = or i32 %7, 56
  %8 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %dtype_is_object = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %8, i32 0, i32 10
  %9 = load i32, ptr %dtype_is_object, align 4, !tbaa !119
  call void @__pyx_memoryview_copy_new_contig(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp, ptr noundef %__pyx_v_mslice, ptr noundef @.str.187, i32 noundef %4, i64 noundef %6, i32 noundef %or, i32 noundef %9)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_1, ptr align 8 %tmp, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp) #13
  %call = call ptr @PyErr_Occurred()
  %tobool = icmp ne ptr %call, null
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %10, ptr %__pyx_filename, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 638, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12402, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_mslice, ptr align 8 %__pyx_t_1, i64 208, i1 false), !tbaa.struct !187
  %14 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %14)
  %15 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call4 = call ptr @__pyx_memoryview_copy_object_from_slice(ptr noundef %15, ptr noundef %__pyx_v_mslice)
  store ptr %call4, ptr %__pyx_t_2, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %16, null
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  %17 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %17, ptr %__pyx_filename, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 643, ptr %__pyx_lineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12413, ptr %__pyx_clineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end16:                                         ; preds = %if.end
  %21 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %21, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then15, %if.then
  %22 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %22)
  %23 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %25 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.188, i32 noundef %23, i32 noundef %24, ptr noundef %25)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end16
  %26 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_flags) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_mslice) #13
  ret ptr %26
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_memoryview_copy_new_contig(ptr noalias sret(%struct.__Pyx_memviewslice) align 8 %agg.result, ptr noundef %from_mvs, ptr noundef %mode, i32 noundef %ndim, i64 noundef %sizeof_dtype, i32 noundef %contig_flag, i32 noundef %dtype_is_object) #0 {
entry:
  %from_mvs.addr = alloca ptr, align 8
  %mode.addr = alloca ptr, align 8
  %ndim.addr = alloca i32, align 4
  %sizeof_dtype.addr = alloca i64, align 8
  %contig_flag.addr = alloca i32, align 4
  %dtype_is_object.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %from_memview = alloca ptr, align 8
  %buf = alloca ptr, align 8
  %shape_tuple = alloca ptr, align 8
  %temp_int = alloca ptr, align 8
  %array_obj = alloca ptr, align 8
  %memview_obj = alloca ptr, align 8
  store ptr %from_mvs, ptr %from_mvs.addr, align 8, !tbaa !5
  store ptr %mode, ptr %mode.addr, align 8, !tbaa !5
  store i32 %ndim, ptr %ndim.addr, align 4, !tbaa !9
  store i64 %sizeof_dtype, ptr %sizeof_dtype.addr, align 8, !tbaa !27
  store i32 %contig_flag, ptr %contig_flag.addr, align 4, !tbaa !9
  store i32 %dtype_is_object, ptr %dtype_is_object.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  call void @llvm.memset.p0.i64(ptr align 8 %agg.result, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 8, ptr %from_memview) #13
  %0 = load ptr, ptr %from_mvs.addr, align 8, !tbaa !5
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %memview, align 8, !tbaa !185
  store ptr %1, ptr %from_memview, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #13
  %2 = load ptr, ptr %from_memview, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %2, i32 0, i32 8
  store ptr %view, ptr %buf, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %shape_tuple) #13
  store ptr null, ptr %shape_tuple, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %temp_int) #13
  store ptr null, ptr %temp_int, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %array_obj) #13
  store ptr null, ptr %array_obj, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %memview_obj) #13
  store ptr null, ptr %memview_obj, align 8, !tbaa !5
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, ptr %i, align 4, !tbaa !9
  %4 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load ptr, ptr %from_mvs.addr, align 8, !tbaa !5
  %suboffsets = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %5, i32 0, i32 4
  %6 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr [8 x i64], ptr %suboffsets, i64 0, i64 %idxprom
  %7 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %cmp1 = icmp sge i64 %7, 0
  %lnot = xor i1 %cmp1, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %8 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %9 = load i32, ptr %i, align 4, !tbaa !9
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %8, ptr noundef @.str.189, i32 noundef %9)
  br label %fail

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %10, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !243

for.end:                                          ; preds = %for.cond
  %11 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %conv3 = sext i32 %11 to i64
  %call4 = call ptr @PyTuple_New(i64 noundef %conv3)
  store ptr %call4, ptr %shape_tuple, align 8, !tbaa !5
  %12 = load ptr, ptr %shape_tuple, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %12, null
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %for.end
  br label %fail

if.end16:                                         ; preds = %for.end
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc37, %if.end16
  %13 = load i32, ptr %i, align 4, !tbaa !9
  %14 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %cmp18 = icmp slt i32 %13, %14
  br i1 %cmp18, label %for.body20, label %for.end39

for.body20:                                       ; preds = %for.cond17
  %15 = load ptr, ptr %from_mvs.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %15, i32 0, i32 2
  %16 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom21 = sext i32 %16 to i64
  %arrayidx22 = getelementptr [8 x i64], ptr %shape, i64 0, i64 %idxprom21
  %17 = load i64, ptr %arrayidx22, align 8, !tbaa !27
  %call23 = call ptr @PyLong_FromSsize_t(i64 noundef %17)
  store ptr %call23, ptr %temp_int, align 8, !tbaa !5
  %18 = load ptr, ptr %temp_int, align 8, !tbaa !5
  %tobool24 = icmp ne ptr %18, null
  %lnot25 = xor i1 %tobool24, true
  %lnot27 = xor i1 %lnot25, true
  %lnot29 = xor i1 %lnot27, true
  %lnot.ext30 = zext i1 %lnot29 to i32
  %conv31 = sext i32 %lnot.ext30 to i64
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 0)
  %tobool33 = icmp ne i64 %expval32, 0
  br i1 %tobool33, label %if.then34, label %if.else

if.then34:                                        ; preds = %for.body20
  br label %fail

if.else:                                          ; preds = %for.body20
  %19 = load ptr, ptr %shape_tuple, align 8, !tbaa !5
  %20 = load i32, ptr %i, align 4, !tbaa !9
  %conv35 = sext i32 %20 to i64
  %21 = load ptr, ptr %temp_int, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %19, i64 noundef %conv35, ptr noundef %21)
  store ptr null, ptr %temp_int, align 8, !tbaa !5
  br label %if.end36

if.end36:                                         ; preds = %if.else
  br label %for.inc37

for.inc37:                                        ; preds = %if.end36
  %22 = load i32, ptr %i, align 4, !tbaa !9
  %inc38 = add i32 %22, 1
  store i32 %inc38, ptr %i, align 4, !tbaa !9
  br label %for.cond17, !llvm.loop !244

for.end39:                                        ; preds = %for.cond17
  %23 = load ptr, ptr %shape_tuple, align 8, !tbaa !5
  %24 = load i64, ptr %sizeof_dtype.addr, align 8, !tbaa !27
  %25 = load ptr, ptr %buf, align 8, !tbaa !5
  %format = getelementptr inbounds %struct.Py_buffer, ptr %25, i32 0, i32 6
  %26 = load ptr, ptr %format, align 8, !tbaa !245
  %27 = load ptr, ptr %mode.addr, align 8, !tbaa !5
  %call40 = call ptr @__pyx_array_new(ptr noundef %23, i64 noundef %24, ptr noundef %26, ptr noundef %27, ptr noundef null)
  store ptr %call40, ptr %array_obj, align 8, !tbaa !5
  %28 = load ptr, ptr %array_obj, align 8, !tbaa !5
  %tobool41 = icmp ne ptr %28, null
  %lnot42 = xor i1 %tobool41, true
  %lnot44 = xor i1 %lnot42, true
  %lnot46 = xor i1 %lnot44, true
  %lnot.ext47 = zext i1 %lnot46 to i32
  %conv48 = sext i32 %lnot.ext47 to i64
  %expval49 = call i64 @llvm.expect.i64(i64 %conv48, i64 0)
  %tobool50 = icmp ne i64 %expval49, 0
  br i1 %tobool50, label %if.then51, label %if.end52

if.then51:                                        ; preds = %for.end39
  br label %fail

if.end52:                                         ; preds = %for.end39
  %29 = load ptr, ptr %array_obj, align 8, !tbaa !5
  %30 = load i32, ptr %contig_flag.addr, align 4, !tbaa !9
  %31 = load i32, ptr %dtype_is_object.addr, align 4, !tbaa !9
  %32 = load ptr, ptr %from_mvs.addr, align 8, !tbaa !5
  %memview53 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %32, i32 0, i32 0
  %33 = load ptr, ptr %memview53, align 8, !tbaa !185
  %typeinfo = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %33, i32 0, i32 11
  %34 = load ptr, ptr %typeinfo, align 8, !tbaa !228
  %call54 = call ptr @__pyx_memoryview_new(ptr noundef %29, i32 noundef %30, i32 noundef %31, ptr noundef %34)
  store ptr %call54, ptr %memview_obj, align 8, !tbaa !5
  %35 = load ptr, ptr %memview_obj, align 8, !tbaa !5
  %tobool55 = icmp ne ptr %35, null
  %lnot56 = xor i1 %tobool55, true
  %lnot58 = xor i1 %lnot56, true
  %lnot60 = xor i1 %lnot58, true
  %lnot.ext61 = zext i1 %lnot60 to i32
  %conv62 = sext i32 %lnot.ext61 to i64
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 0)
  %tobool64 = icmp ne i64 %expval63, 0
  br i1 %tobool64, label %if.then65, label %if.end66

if.then65:                                        ; preds = %if.end52
  br label %fail

if.end66:                                         ; preds = %if.end52
  %36 = load ptr, ptr %memview_obj, align 8, !tbaa !5
  %37 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %call67 = call i32 @__Pyx_init_memviewslice(ptr noundef %36, i32 noundef %37, ptr noundef %agg.result, i32 noundef 1)
  %cmp68 = icmp slt i32 %call67, 0
  %lnot70 = xor i1 %cmp68, true
  %lnot72 = xor i1 %lnot70, true
  %lnot.ext73 = zext i1 %lnot72 to i32
  %conv74 = sext i32 %lnot.ext73 to i64
  %expval75 = call i64 @llvm.expect.i64(i64 %conv74, i64 0)
  %tobool76 = icmp ne i64 %expval75, 0
  br i1 %tobool76, label %if.then77, label %if.end78

if.then77:                                        ; preds = %if.end66
  br label %fail

if.end78:                                         ; preds = %if.end66
  %38 = load ptr, ptr %from_mvs.addr, align 8, !tbaa !5
  %39 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %40 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %41 = load i32, ptr %dtype_is_object.addr, align 4, !tbaa !9
  %call79 = call i32 @__pyx_memoryview_copy_contents(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %38, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %agg.result, i32 noundef %39, i32 noundef %40, i32 noundef %41)
  %cmp80 = icmp slt i32 %call79, 0
  %lnot82 = xor i1 %cmp80, true
  %lnot84 = xor i1 %lnot82, true
  %lnot.ext85 = zext i1 %lnot84 to i32
  %conv86 = sext i32 %lnot.ext85 to i64
  %expval87 = call i64 @llvm.expect.i64(i64 %conv86, i64 0)
  %tobool88 = icmp ne i64 %expval87, 0
  br i1 %tobool88, label %if.then89, label %if.end90

if.then89:                                        ; preds = %if.end78
  br label %fail

if.end90:                                         ; preds = %if.end78
  br label %no_fail

fail:                                             ; preds = %if.then89, %if.then77, %if.then65, %if.then51, %if.then34, %if.then15, %if.then
  %memview91 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  %42 = load ptr, ptr %memview91, align 8, !tbaa !185
  call void @Py_XDECREF(ptr noundef %42)
  %memview92 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr null, ptr %memview92, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  br label %no_fail

no_fail:                                          ; preds = %fail, %if.end90
  %43 = load ptr, ptr %shape_tuple, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %43)
  %44 = load ptr, ptr %temp_int, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %44)
  %45 = load ptr, ptr %array_obj, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %45)
  call void @llvm.lifetime.end.p0(i64 8, ptr %memview_obj) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %array_obj) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %temp_int) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %shape_tuple) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %from_memview) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_copy_object_from_slice(ptr noundef %__pyx_v_memview, ptr noundef %__pyx_v_memviewslice) #0 {
entry:
  %__pyx_v_memview.addr = alloca ptr, align 8
  %__pyx_v_memviewslice.addr = alloca ptr, align 8
  %__pyx_v_to_object_func = alloca ptr, align 8
  %__pyx_v_to_dtype_func = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_memview, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  store ptr %__pyx_v_memviewslice, ptr %__pyx_v_memviewslice.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_to_object_func) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_to_dtype_func) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %1 = load ptr, ptr @__pyx_memoryviewslice_type, align 8, !tbaa !5
  %call1 = call i32 @__Pyx_IsSubtype(ptr noundef %call, ptr noundef %1)
  store i32 %call1, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp = icmp ne i32 %2, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, ptr %__pyx_t_2, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %to_object_func = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %4, i32 0, i32 3
  %5 = load ptr, ptr %to_object_func, align 8, !tbaa !129
  store ptr %5, ptr %__pyx_t_3, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %6, ptr %__pyx_v_to_object_func, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %to_dtype_func = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %7, i32 0, i32 4
  %8 = load ptr, ptr %to_dtype_func, align 8, !tbaa !132
  store ptr %8, ptr %__pyx_t_4, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %9, ptr %__pyx_v_to_dtype_func, align 8, !tbaa !5
  br label %__pyx_L3

if.end:                                           ; preds = %entry
  store ptr null, ptr %__pyx_v_to_object_func, align 8, !tbaa !5
  store ptr null, ptr %__pyx_v_to_dtype_func, align 8, !tbaa !5
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end, %if.then
  %10 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %10)
  %11 = load ptr, ptr %__pyx_v_memviewslice.addr, align 8, !tbaa !5
  %arrayidx = getelementptr %struct.__Pyx_memviewslice, ptr %11, i64 0
  %12 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %12, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 5
  %13 = load i32, ptr %ndim, align 4, !tbaa !123
  %14 = load ptr, ptr %__pyx_v_to_object_func, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_v_to_dtype_func, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %dtype_is_object = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %16, i32 0, i32 10
  %17 = load i32, ptr %dtype_is_object, align 4, !tbaa !119
  %call2 = call ptr @__pyx_memoryview_fromslice(ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %arrayidx, i32 noundef %13, ptr noundef %14, ptr noundef %15, i32 noundef %17)
  store ptr %call2, ptr %__pyx_t_5, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool3 = icmp ne ptr %18, null
  %lnot = xor i1 %tobool3, true
  %lnot4 = xor i1 %lnot, true
  %lnot5 = xor i1 %lnot4, true
  %lnot.ext = zext i1 %lnot5 to i32
  %conv6 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv6, i64 0)
  %tobool7 = icmp ne i64 %expval, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %__pyx_L3
  %19 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %19, ptr %__pyx_filename, align 8, !tbaa !5
  %20 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1103, ptr %__pyx_lineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 16323, ptr %__pyx_clineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end9:                                          ; preds = %__pyx_L3
  %23 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr %23, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then8
  %24 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %24)
  %25 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %27 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.193, i32 noundef %25, i32 noundef %26, ptr noundef %27)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end9
  %28 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_to_dtype_func) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_to_object_func) #13
  ret ptr %28
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_array_new(ptr noundef %__pyx_v_shape, i64 noundef %__pyx_v_itemsize, ptr noundef %__pyx_v_format, ptr noundef %__pyx_v_mode, ptr noundef %__pyx_v_buf) #0 {
entry:
  %__pyx_v_shape.addr = alloca ptr, align 8
  %__pyx_v_itemsize.addr = alloca i64, align 8
  %__pyx_v_format.addr = alloca ptr, align 8
  %__pyx_v_mode.addr = alloca ptr, align 8
  %__pyx_v_buf.addr = alloca ptr, align 8
  %__pyx_v_result = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_shape, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  store i64 %__pyx_v_itemsize, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  store ptr %__pyx_v_format, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  store ptr %__pyx_v_mode, ptr %__pyx_v_mode.addr, align 8, !tbaa !5
  store ptr %__pyx_v_buf, ptr %__pyx_v_buf.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_result) #13
  store ptr null, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_buf.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, null
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_1, align 4, !tbaa !9
  %1 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end62

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %call = call ptr @PyLong_FromSsize_t(i64 noundef %2)
  store ptr %call, ptr %__pyx_t_2, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool3 = icmp ne ptr %3, null
  %lnot = xor i1 %tobool3, true
  %lnot4 = xor i1 %lnot, true
  %lnot5 = xor i1 %lnot4, true
  %lnot.ext = zext i1 %lnot5 to i32
  %conv6 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv6, i64 0)
  %tobool7 = icmp ne i64 %expval, 0
  br i1 %tobool7, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.then
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 250, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7786, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %if.then
  %8 = load ptr, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  %call9 = call ptr @PyBytes_FromString(ptr noundef %8)
  store ptr %call9, ptr %__pyx_t_3, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool10 = icmp ne ptr %9, null
  %lnot11 = xor i1 %tobool10, true
  %lnot13 = xor i1 %lnot11, true
  %lnot15 = xor i1 %lnot13, true
  %lnot.ext16 = zext i1 %lnot15 to i32
  %conv17 = sext i32 %lnot.ext16 to i64
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 0)
  %tobool19 = icmp ne i64 %expval18, 0
  br i1 %tobool19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %10, ptr %__pyx_filename, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 250, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7788, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end21:                                         ; preds = %if.end
  %14 = load ptr, ptr %__pyx_v_mode.addr, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_v_mode.addr, align 8, !tbaa !5
  %call22 = call i64 @strlen(ptr noundef %15) #16
  %call23 = call ptr @__Pyx_decode_c_string(ptr noundef %14, i64 noundef 0, i64 noundef %call22, ptr noundef null, ptr noundef null, ptr noundef @PyUnicode_DecodeASCII)
  store ptr %call23, ptr %__pyx_t_4, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool24 = icmp ne ptr %16, null
  %lnot25 = xor i1 %tobool24, true
  %lnot27 = xor i1 %lnot25, true
  %lnot29 = xor i1 %lnot27, true
  %lnot.ext30 = zext i1 %lnot29 to i32
  %conv31 = sext i32 %lnot.ext30 to i64
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 0)
  %tobool33 = icmp ne i64 %expval32, 0
  br i1 %tobool33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %if.end21
  %17 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %17, ptr %__pyx_filename, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 250, ptr %__pyx_lineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7790, ptr %__pyx_clineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end35:                                         ; preds = %if.end21
  %call36 = call ptr @PyTuple_New(i64 noundef 4)
  store ptr %call36, ptr %__pyx_t_5, align 8, !tbaa !5
  %21 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool37 = icmp ne ptr %21, null
  %lnot38 = xor i1 %tobool37, true
  %lnot40 = xor i1 %lnot38, true
  %lnot42 = xor i1 %lnot40, true
  %lnot.ext43 = zext i1 %lnot42 to i32
  %conv44 = sext i32 %lnot.ext43 to i64
  %expval45 = call i64 @llvm.expect.i64(i64 %conv44, i64 0)
  %tobool46 = icmp ne i64 %expval45, 0
  br i1 %tobool46, label %if.then47, label %if.end48

if.then47:                                        ; preds = %if.end35
  %22 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %22, ptr %__pyx_filename, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 250, ptr %__pyx_lineno, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7792, ptr %__pyx_clineno, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end48:                                         ; preds = %if.end35
  %26 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %26)
  %27 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %27, i64 noundef 0, ptr noundef %28)
  %29 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %29, i64 noundef 1, ptr noundef %30)
  %31 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %31, i64 noundef 2, ptr noundef %32)
  %33 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %33, i64 noundef 3, ptr noundef %34)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %35 = load ptr, ptr @__pyx_array_type, align 8, !tbaa !5
  %36 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %call49 = call ptr @__Pyx_PyObject_Call(ptr noundef %35, ptr noundef %36, ptr noundef null)
  store ptr %call49, ptr %__pyx_t_4, align 8, !tbaa !5
  %37 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool50 = icmp ne ptr %37, null
  %lnot51 = xor i1 %tobool50, true
  %lnot53 = xor i1 %lnot51, true
  %lnot55 = xor i1 %lnot53, true
  %lnot.ext56 = zext i1 %lnot55 to i32
  %conv57 = sext i32 %lnot.ext56 to i64
  %expval58 = call i64 @llvm.expect.i64(i64 %conv57, i64 0)
  %tobool59 = icmp ne i64 %expval58, 0
  br i1 %tobool59, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.end48
  %38 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %38, ptr %__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 250, ptr %__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7806, ptr %__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end61:                                         ; preds = %if.end48
  %42 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %42)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %43 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %43, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %__pyx_L3

if.end62:                                         ; preds = %entry
  %44 = load i64, ptr %__pyx_v_itemsize.addr, align 8, !tbaa !27
  %call63 = call ptr @PyLong_FromSsize_t(i64 noundef %44)
  store ptr %call63, ptr %__pyx_t_4, align 8, !tbaa !5
  %45 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool64 = icmp ne ptr %45, null
  %lnot65 = xor i1 %tobool64, true
  %lnot67 = xor i1 %lnot65, true
  %lnot69 = xor i1 %lnot67, true
  %lnot.ext70 = zext i1 %lnot69 to i32
  %conv71 = sext i32 %lnot.ext70 to i64
  %expval72 = call i64 @llvm.expect.i64(i64 %conv71, i64 0)
  %tobool73 = icmp ne i64 %expval72, 0
  br i1 %tobool73, label %if.then74, label %if.end75

if.then74:                                        ; preds = %if.end62
  %46 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %46, ptr %__pyx_filename, align 8, !tbaa !5
  %47 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 252, ptr %__pyx_lineno, align 4, !tbaa !9
  %48 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7830, ptr %__pyx_clineno, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end75:                                         ; preds = %if.end62
  %50 = load ptr, ptr %__pyx_v_format.addr, align 8, !tbaa !5
  %call76 = call ptr @PyBytes_FromString(ptr noundef %50)
  store ptr %call76, ptr %__pyx_t_5, align 8, !tbaa !5
  %51 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool77 = icmp ne ptr %51, null
  %lnot78 = xor i1 %tobool77, true
  %lnot80 = xor i1 %lnot78, true
  %lnot82 = xor i1 %lnot80, true
  %lnot.ext83 = zext i1 %lnot82 to i32
  %conv84 = sext i32 %lnot.ext83 to i64
  %expval85 = call i64 @llvm.expect.i64(i64 %conv84, i64 0)
  %tobool86 = icmp ne i64 %expval85, 0
  br i1 %tobool86, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.end75
  %52 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %52, ptr %__pyx_filename, align 8, !tbaa !5
  %53 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 252, ptr %__pyx_lineno, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7832, ptr %__pyx_clineno, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end88:                                         ; preds = %if.end75
  %56 = load ptr, ptr %__pyx_v_mode.addr, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_v_mode.addr, align 8, !tbaa !5
  %call89 = call i64 @strlen(ptr noundef %57) #16
  %call90 = call ptr @__Pyx_decode_c_string(ptr noundef %56, i64 noundef 0, i64 noundef %call89, ptr noundef null, ptr noundef null, ptr noundef @PyUnicode_DecodeASCII)
  store ptr %call90, ptr %__pyx_t_3, align 8, !tbaa !5
  %58 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool91 = icmp ne ptr %58, null
  %lnot92 = xor i1 %tobool91, true
  %lnot94 = xor i1 %lnot92, true
  %lnot96 = xor i1 %lnot94, true
  %lnot.ext97 = zext i1 %lnot96 to i32
  %conv98 = sext i32 %lnot.ext97 to i64
  %expval99 = call i64 @llvm.expect.i64(i64 %conv98, i64 0)
  %tobool100 = icmp ne i64 %expval99, 0
  br i1 %tobool100, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.end88
  %59 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %59, ptr %__pyx_filename, align 8, !tbaa !5
  %60 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 252, ptr %__pyx_lineno, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7834, ptr %__pyx_clineno, align 4, !tbaa !9
  %62 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end102:                                        ; preds = %if.end88
  %call103 = call ptr @PyTuple_New(i64 noundef 4)
  store ptr %call103, ptr %__pyx_t_2, align 8, !tbaa !5
  %63 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool104 = icmp ne ptr %63, null
  %lnot105 = xor i1 %tobool104, true
  %lnot107 = xor i1 %lnot105, true
  %lnot109 = xor i1 %lnot107, true
  %lnot.ext110 = zext i1 %lnot109 to i32
  %conv111 = sext i32 %lnot.ext110 to i64
  %expval112 = call i64 @llvm.expect.i64(i64 %conv111, i64 0)
  %tobool113 = icmp ne i64 %expval112, 0
  br i1 %tobool113, label %if.then114, label %if.end115

if.then114:                                       ; preds = %if.end102
  %64 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %64, ptr %__pyx_filename, align 8, !tbaa !5
  %65 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 252, ptr %__pyx_lineno, align 4, !tbaa !9
  %66 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7836, ptr %__pyx_clineno, align 4, !tbaa !9
  %67 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end115:                                        ; preds = %if.end102
  %68 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %68)
  %69 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %70 = load ptr, ptr %__pyx_v_shape.addr, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %69, i64 noundef 0, ptr noundef %70)
  %71 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %72 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %71, i64 noundef 1, ptr noundef %72)
  %73 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %74 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %73, i64 noundef 2, ptr noundef %74)
  %75 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %76 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %75, i64 noundef 3, ptr noundef %76)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %call116 = call ptr @PyDict_New()
  store ptr %call116, ptr %__pyx_t_3, align 8, !tbaa !5
  %77 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool117 = icmp ne ptr %77, null
  %lnot118 = xor i1 %tobool117, true
  %lnot120 = xor i1 %lnot118, true
  %lnot122 = xor i1 %lnot120, true
  %lnot.ext123 = zext i1 %lnot122 to i32
  %conv124 = sext i32 %lnot.ext123 to i64
  %expval125 = call i64 @llvm.expect.i64(i64 %conv124, i64 0)
  %tobool126 = icmp ne i64 %expval125, 0
  br i1 %tobool126, label %if.then127, label %if.end128

if.then127:                                       ; preds = %if.end115
  %78 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %78, ptr %__pyx_filename, align 8, !tbaa !5
  %79 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 253, ptr %__pyx_lineno, align 4, !tbaa !9
  %80 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7858, ptr %__pyx_clineno, align 4, !tbaa !9
  %81 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end128:                                        ; preds = %if.end115
  %82 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %83 = load ptr, ptr @__pyx_n_s_allocate_buffer, align 8, !tbaa !5
  %call129 = call i32 @PyDict_SetItem(ptr noundef %82, ptr noundef %83, ptr noundef @_Py_FalseStruct)
  %cmp130 = icmp slt i32 %call129, 0
  br i1 %cmp130, label %if.then132, label %if.end133

if.then132:                                       ; preds = %if.end128
  %84 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %84, ptr %__pyx_filename, align 8, !tbaa !5
  %85 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 253, ptr %__pyx_lineno, align 4, !tbaa !9
  %86 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7860, ptr %__pyx_clineno, align 4, !tbaa !9
  %87 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end133:                                        ; preds = %if.end128
  %88 = load ptr, ptr @__pyx_array_type, align 8, !tbaa !5
  %89 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %90 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call134 = call ptr @__Pyx_PyObject_Call(ptr noundef %88, ptr noundef %89, ptr noundef %90)
  store ptr %call134, ptr %__pyx_t_5, align 8, !tbaa !5
  %91 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool135 = icmp ne ptr %91, null
  %lnot136 = xor i1 %tobool135, true
  %lnot138 = xor i1 %lnot136, true
  %lnot140 = xor i1 %lnot138, true
  %lnot.ext141 = zext i1 %lnot140 to i32
  %conv142 = sext i32 %lnot.ext141 to i64
  %expval143 = call i64 @llvm.expect.i64(i64 %conv142, i64 0)
  %tobool144 = icmp ne i64 %expval143, 0
  br i1 %tobool144, label %if.then145, label %if.end146

if.then145:                                       ; preds = %if.end133
  %92 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %92, ptr %__pyx_filename, align 8, !tbaa !5
  %93 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 252, ptr %__pyx_lineno, align 4, !tbaa !9
  %94 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 7869, ptr %__pyx_clineno, align 4, !tbaa !9
  %95 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end146:                                        ; preds = %if.end133
  %96 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %96)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %97 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %97)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %98 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr %98, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %99 = load ptr, ptr %__pyx_v_buf.addr, align 8, !tbaa !5
  %100 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__pyx_array_obj, ptr %100, i32 0, i32 2
  store ptr %99, ptr %data, align 8, !tbaa !141
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end146, %if.end61
  %101 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %101)
  %102 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %102)
  %103 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr %103, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then145, %if.then132, %if.then127, %if.then114, %if.then101, %if.then87, %if.then74, %if.then60, %if.then47, %if.then34, %if.then20, %if.then8
  %104 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %104)
  %105 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %105)
  %106 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %106)
  %107 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %107)
  %108 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %109 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %110 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.190, i32 noundef %108, i32 noundef %109, ptr noundef %110)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %__pyx_L3
  %111 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %111)
  %112 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_result) #13
  ret ptr %112
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_new(ptr noundef %__pyx_v_o, i32 noundef %__pyx_v_flags, i32 noundef %__pyx_v_dtype_is_object, ptr noundef %__pyx_v_typeinfo) #0 {
entry:
  %__pyx_v_o.addr = alloca ptr, align 8
  %__pyx_v_flags.addr = alloca i32, align 4
  %__pyx_v_dtype_is_object.addr = alloca i32, align 4
  %__pyx_v_typeinfo.addr = alloca ptr, align 8
  %__pyx_v_result = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_o, ptr %__pyx_v_o.addr, align 8, !tbaa !5
  store i32 %__pyx_v_flags, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  store i32 %__pyx_v_dtype_is_object, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  store ptr %__pyx_v_typeinfo, ptr %__pyx_v_typeinfo.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_result) #13
  store ptr null, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %call = call ptr @__Pyx_PyInt_From_int(i32 noundef %0)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 660, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12673, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load i32, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  %conv4 = sext i32 %6 to i64
  %call5 = call ptr @__Pyx_PyBool_FromLong(i64 noundef %conv4)
  store ptr %call5, ptr %__pyx_t_2, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool6 = icmp ne ptr %7, null
  %lnot7 = xor i1 %tobool6, true
  %lnot9 = xor i1 %lnot7, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end
  %8 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %8, ptr %__pyx_filename, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 660, ptr %__pyx_lineno, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12675, ptr %__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end17:                                         ; preds = %if.end
  %call18 = call ptr @PyTuple_New(i64 noundef 3)
  store ptr %call18, ptr %__pyx_t_3, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool19 = icmp ne ptr %12, null
  %lnot20 = xor i1 %tobool19, true
  %lnot22 = xor i1 %lnot20, true
  %lnot24 = xor i1 %lnot22, true
  %lnot.ext25 = zext i1 %lnot24 to i32
  %conv26 = sext i32 %lnot.ext25 to i64
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 0)
  %tobool28 = icmp ne i64 %expval27, 0
  br i1 %tobool28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end17
  %13 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %13, ptr %__pyx_filename, align 8, !tbaa !5
  %14 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 660, ptr %__pyx_lineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12677, ptr %__pyx_clineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end30:                                         ; preds = %if.end17
  %17 = load ptr, ptr %__pyx_v_o.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %17)
  %18 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_v_o.addr, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %18, i64 noundef 0, ptr noundef %19)
  %20 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %21 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %20, i64 noundef 1, ptr noundef %21)
  %22 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %22, i64 noundef 2, ptr noundef %23)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %24 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call31 = call ptr @__Pyx_PyObject_Call(ptr noundef %24, ptr noundef %25, ptr noundef null)
  store ptr %call31, ptr %__pyx_t_2, align 8, !tbaa !5
  %26 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool32 = icmp ne ptr %26, null
  %lnot33 = xor i1 %tobool32, true
  %lnot35 = xor i1 %lnot33, true
  %lnot37 = xor i1 %lnot35, true
  %lnot.ext38 = zext i1 %lnot37 to i32
  %conv39 = sext i32 %lnot.ext38 to i64
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0)
  %tobool41 = icmp ne i64 %expval40, 0
  br i1 %tobool41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end30
  %27 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %27, ptr %__pyx_filename, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 660, ptr %__pyx_lineno, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12688, ptr %__pyx_clineno, align 4, !tbaa !9
  %30 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end43:                                         ; preds = %if.end30
  %31 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %31)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %32, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_v_typeinfo.addr, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %typeinfo = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %34, i32 0, i32 11
  store ptr %33, ptr %typeinfo, align 8, !tbaa !228
  %35 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %35)
  %36 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %36)
  %37 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr %37, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then42, %if.then29, %if.then16, %if.then
  %38 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %38)
  %39 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %39)
  %40 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %40)
  %41 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %42 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %43 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.191, i32 noundef %41, i32 noundef %42, ptr noundef %43)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end43
  %44 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %44)
  %45 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_result) #13
  ret ptr %45
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_init_memviewslice(ptr noundef %memview, i32 noundef %ndim, ptr noundef %memviewslice, i32 noundef %memview_is_new_reference) #0 {
entry:
  %memview.addr = alloca ptr, align 8
  %ndim.addr = alloca i32, align 4
  %memviewslice.addr = alloca ptr, align 8
  %memview_is_new_reference.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %buf = alloca ptr, align 8
  %stride = alloca i64, align 8
  store ptr %memview, ptr %memview.addr, align 8, !tbaa !5
  store i32 %ndim, ptr %ndim.addr, align 4, !tbaa !9
  store ptr %memviewslice, ptr %memviewslice.addr, align 8, !tbaa !5
  store i32 %memview_is_new_reference, ptr %memview_is_new_reference.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %retval1) #13
  store i32 -1, ptr %retval1, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #13
  %0 = load ptr, ptr %memview.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 8
  store ptr %view, ptr %buf, align 8, !tbaa !5
  %1 = load ptr, ptr %memviewslice.addr, align 8, !tbaa !5
  %memview2 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %1, i32 0, i32 0
  %2 = load ptr, ptr %memview2, align 8, !tbaa !185
  %tobool = icmp ne ptr %2, null
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %3 = load ptr, ptr %memviewslice.addr, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %3, i32 0, i32 1
  %4 = load ptr, ptr %data, align 8, !tbaa !188
  %tobool3 = icmp ne ptr %4, null
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool3, %lor.rhs ]
  %lnot = xor i1 %5, true
  %lnot4 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot4 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %if.then, label %if.end

if.then:                                          ; preds = %lor.end
  %6 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %6, ptr noundef @.str.192)
  br label %fail

if.end:                                           ; preds = %lor.end
  %7 = load ptr, ptr %buf, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.Py_buffer, ptr %7, i32 0, i32 8
  %8 = load ptr, ptr %strides, align 8, !tbaa !181
  %tobool6 = icmp ne ptr %8, null
  br i1 %tobool6, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then7
  %9 = load i32, ptr %i, align 4, !tbaa !9
  %10 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %cmp = icmp slt i32 %9, %10
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load ptr, ptr %buf, align 8, !tbaa !5
  %strides9 = getelementptr inbounds %struct.Py_buffer, ptr %11, i32 0, i32 8
  %12 = load ptr, ptr %strides9, align 8, !tbaa !181
  %13 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %13 to i64
  %arrayidx = getelementptr i64, ptr %12, i64 %idxprom
  %14 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %15 = load ptr, ptr %memviewslice.addr, align 8, !tbaa !5
  %strides10 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %15, i32 0, i32 3
  %16 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom11 = sext i32 %16 to i64
  %arrayidx12 = getelementptr [8 x i64], ptr %strides10, i64 0, i64 %idxprom11
  store i64 %14, ptr %arrayidx12, align 8, !tbaa !27
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %17 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %17, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !246

for.end:                                          ; preds = %for.cond
  br label %if.end24

if.else:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %stride) #13
  %18 = load ptr, ptr %buf, align 8, !tbaa !5
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %18, i32 0, i32 3
  %19 = load i64, ptr %itemsize, align 8, !tbaa !177
  store i64 %19, ptr %stride, align 8, !tbaa !27
  %20 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %sub = sub i32 %20, 1
  store i32 %sub, ptr %i, align 4, !tbaa !9
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc22, %if.else
  %21 = load i32, ptr %i, align 4, !tbaa !9
  %cmp14 = icmp sge i32 %21, 0
  br i1 %cmp14, label %for.body16, label %for.end23

for.body16:                                       ; preds = %for.cond13
  %22 = load i64, ptr %stride, align 8, !tbaa !27
  %23 = load ptr, ptr %memviewslice.addr, align 8, !tbaa !5
  %strides17 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %23, i32 0, i32 3
  %24 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom18 = sext i32 %24 to i64
  %arrayidx19 = getelementptr [8 x i64], ptr %strides17, i64 0, i64 %idxprom18
  store i64 %22, ptr %arrayidx19, align 8, !tbaa !27
  %25 = load ptr, ptr %buf, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.Py_buffer, ptr %25, i32 0, i32 7
  %26 = load ptr, ptr %shape, align 8, !tbaa !180
  %27 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom20 = sext i32 %27 to i64
  %arrayidx21 = getelementptr i64, ptr %26, i64 %idxprom20
  %28 = load i64, ptr %arrayidx21, align 8, !tbaa !27
  %29 = load i64, ptr %stride, align 8, !tbaa !27
  %mul = mul i64 %29, %28
  store i64 %mul, ptr %stride, align 8, !tbaa !27
  br label %for.inc22

for.inc22:                                        ; preds = %for.body16
  %30 = load i32, ptr %i, align 4, !tbaa !9
  %dec = add i32 %30, -1
  store i32 %dec, ptr %i, align 4, !tbaa !9
  br label %for.cond13, !llvm.loop !247

for.end23:                                        ; preds = %for.cond13
  call void @llvm.lifetime.end.p0(i64 8, ptr %stride) #13
  br label %if.end24

if.end24:                                         ; preds = %for.end23, %for.end
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc48, %if.end24
  %31 = load i32, ptr %i, align 4, !tbaa !9
  %32 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %cmp26 = icmp slt i32 %31, %32
  br i1 %cmp26, label %for.body28, label %for.end50

for.body28:                                       ; preds = %for.cond25
  %33 = load ptr, ptr %buf, align 8, !tbaa !5
  %shape29 = getelementptr inbounds %struct.Py_buffer, ptr %33, i32 0, i32 7
  %34 = load ptr, ptr %shape29, align 8, !tbaa !180
  %35 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom30 = sext i32 %35 to i64
  %arrayidx31 = getelementptr i64, ptr %34, i64 %idxprom30
  %36 = load i64, ptr %arrayidx31, align 8, !tbaa !27
  %37 = load ptr, ptr %memviewslice.addr, align 8, !tbaa !5
  %shape32 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %37, i32 0, i32 2
  %38 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom33 = sext i32 %38 to i64
  %arrayidx34 = getelementptr [8 x i64], ptr %shape32, i64 0, i64 %idxprom33
  store i64 %36, ptr %arrayidx34, align 8, !tbaa !27
  %39 = load ptr, ptr %buf, align 8, !tbaa !5
  %suboffsets = getelementptr inbounds %struct.Py_buffer, ptr %39, i32 0, i32 9
  %40 = load ptr, ptr %suboffsets, align 8, !tbaa !182
  %tobool35 = icmp ne ptr %40, null
  br i1 %tobool35, label %if.then36, label %if.else43

if.then36:                                        ; preds = %for.body28
  %41 = load ptr, ptr %buf, align 8, !tbaa !5
  %suboffsets37 = getelementptr inbounds %struct.Py_buffer, ptr %41, i32 0, i32 9
  %42 = load ptr, ptr %suboffsets37, align 8, !tbaa !182
  %43 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom38 = sext i32 %43 to i64
  %arrayidx39 = getelementptr i64, ptr %42, i64 %idxprom38
  %44 = load i64, ptr %arrayidx39, align 8, !tbaa !27
  %45 = load ptr, ptr %memviewslice.addr, align 8, !tbaa !5
  %suboffsets40 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %45, i32 0, i32 4
  %46 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom41 = sext i32 %46 to i64
  %arrayidx42 = getelementptr [8 x i64], ptr %suboffsets40, i64 0, i64 %idxprom41
  store i64 %44, ptr %arrayidx42, align 8, !tbaa !27
  br label %if.end47

if.else43:                                        ; preds = %for.body28
  %47 = load ptr, ptr %memviewslice.addr, align 8, !tbaa !5
  %suboffsets44 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %47, i32 0, i32 4
  %48 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom45 = sext i32 %48 to i64
  %arrayidx46 = getelementptr [8 x i64], ptr %suboffsets44, i64 0, i64 %idxprom45
  store i64 -1, ptr %arrayidx46, align 8, !tbaa !27
  br label %if.end47

if.end47:                                         ; preds = %if.else43, %if.then36
  br label %for.inc48

for.inc48:                                        ; preds = %if.end47
  %49 = load i32, ptr %i, align 4, !tbaa !9
  %inc49 = add i32 %49, 1
  store i32 %inc49, ptr %i, align 4, !tbaa !9
  br label %for.cond25, !llvm.loop !248

for.end50:                                        ; preds = %for.cond25
  %50 = load ptr, ptr %memview.addr, align 8, !tbaa !5
  %51 = load ptr, ptr %memviewslice.addr, align 8, !tbaa !5
  %memview51 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %51, i32 0, i32 0
  store ptr %50, ptr %memview51, align 8, !tbaa !185
  %52 = load ptr, ptr %buf, align 8, !tbaa !5
  %buf52 = getelementptr inbounds %struct.Py_buffer, ptr %52, i32 0, i32 0
  %53 = load ptr, ptr %buf52, align 8, !tbaa !249
  %54 = load ptr, ptr %memviewslice.addr, align 8, !tbaa !5
  %data53 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %54, i32 0, i32 1
  store ptr %53, ptr %data53, align 8, !tbaa !188
  %55 = load ptr, ptr %memview.addr, align 8, !tbaa !5
  %acquisition_count_aligned_p = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %55, i32 0, i32 7
  %56 = load ptr, ptr %acquisition_count_aligned_p, align 8, !tbaa !241
  %57 = atomicrmw add ptr %56, i32 1 seq_cst, align 4
  %cmp54 = icmp eq i32 %57, 0
  br i1 %cmp54, label %land.lhs.true, label %if.end58

land.lhs.true:                                    ; preds = %for.end50
  %58 = load i32, ptr %memview_is_new_reference.addr, align 4, !tbaa !9
  %tobool56 = icmp ne i32 %58, 0
  br i1 %tobool56, label %if.end58, label %if.then57

if.then57:                                        ; preds = %land.lhs.true
  %59 = load ptr, ptr %memview.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %59)
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %land.lhs.true, %for.end50
  store i32 0, ptr %retval1, align 4, !tbaa !9
  br label %no_fail

fail:                                             ; preds = %if.then
  %60 = load ptr, ptr %memviewslice.addr, align 8, !tbaa !5
  %memview59 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %60, i32 0, i32 0
  store ptr null, ptr %memview59, align 8, !tbaa !185
  %61 = load ptr, ptr %memviewslice.addr, align 8, !tbaa !5
  %data60 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %61, i32 0, i32 1
  store ptr null, ptr %data60, align 8, !tbaa !188
  store i32 -1, ptr %retval1, align 4, !tbaa !9
  br label %no_fail

no_fail:                                          ; preds = %fail, %if.end58
  %62 = load i32, ptr %retval1, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %retval1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  ret i32 %62
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_22copy_fortran(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_src = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_dst = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_flags = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca %struct.__Pyx_memviewslice, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_src) #13
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_dst) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_flags) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %flags = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 9
  %1 = load i32, ptr %flags, align 8, !tbaa !118
  %and = and i32 %1, -57
  store i32 %and, ptr %__pyx_v_flags, align 4, !tbaa !9
  %2 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @__pyx_memoryview_slice_copy(ptr noundef %2, ptr noundef %__pyx_v_src)
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp) #13
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %3, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 5
  %4 = load i32, ptr %ndim, align 4, !tbaa !123
  %5 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view1 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %5, i32 0, i32 8
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %view1, i32 0, i32 3
  %6 = load i64, ptr %itemsize, align 8, !tbaa !120
  %7 = load i32, ptr %__pyx_v_flags, align 4, !tbaa !9
  %or = or i32 %7, 88
  %8 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %dtype_is_object = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %8, i32 0, i32 10
  %9 = load i32, ptr %dtype_is_object, align 4, !tbaa !119
  call void @__pyx_memoryview_copy_new_contig(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp, ptr noundef %__pyx_v_src, ptr noundef @.str.194, i32 noundef %4, i64 noundef %6, i32 noundef %or, i32 noundef %9)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_1, ptr align 8 %tmp, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp) #13
  %call = call ptr @PyErr_Occurred()
  %tobool = icmp ne ptr %call, null
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %10, ptr %__pyx_filename, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 650, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12497, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_dst, ptr align 8 %__pyx_t_1, i64 208, i1 false), !tbaa.struct !187
  %14 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %14)
  %15 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call4 = call ptr @__pyx_memoryview_copy_object_from_slice(ptr noundef %15, ptr noundef %__pyx_v_dst)
  store ptr %call4, ptr %__pyx_t_2, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %16, null
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  %17 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %17, ptr %__pyx_filename, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 655, ptr %__pyx_lineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12508, ptr %__pyx_clineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end16:                                         ; preds = %if.end
  %21 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %21, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then15, %if.then
  %22 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %22)
  %23 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %25 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.195, i32 noundef %23, i32 noundef %24, ptr noundef %25)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end16
  %26 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_flags) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_dst) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_src) #13
  ret ptr %26
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf___pyx_memoryview___reduce_cython__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_tuple__17, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_Call(ptr noundef %0, ptr noundef %1, ptr noundef null)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %3, ptr %__pyx_filename, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 2, ptr %__pyx_lineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12567, ptr %__pyx_clineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %7, ptr noundef null, ptr noundef null, ptr noundef null)
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %8)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %9 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %9, ptr %__pyx_filename, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 2, ptr %__pyx_lineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12571, ptr %__pyx_clineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

__pyx_L1_error:                                   ; preds = %if.end, %if.then
  %13 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %13)
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.196, i32 noundef %14, i32 noundef %15, ptr noundef %16)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %17
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf___pyx_memoryview_2__setstate_cython__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v___pyx_state) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_tuple__18, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_Call(ptr noundef %0, ptr noundef %1, ptr noundef null)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %3, ptr %__pyx_filename, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 4, ptr %__pyx_lineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12623, ptr %__pyx_clineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %7, ptr noundef null, ptr noundef null, ptr noundef null)
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %8)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %9 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %9, ptr %__pyx_filename, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 4, ptr %__pyx_lineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 12627, ptr %__pyx_clineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

__pyx_L1_error:                                   ; preds = %if.end, %if.then
  %13 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %13)
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.197, i32 noundef %14, i32 noundef %15, ptr noundef %16)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %17
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop___pyx_memoryview_T(ptr noundef %o, ptr noundef %x) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_1T_1__get__(ptr noundef %0)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop___pyx_memoryview_base(ptr noundef %o, ptr noundef %x) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_4base_1__get__(ptr noundef %0)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop___pyx_memoryview_shape(ptr noundef %o, ptr noundef %x) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_5shape_1__get__(ptr noundef %0)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop___pyx_memoryview_strides(ptr noundef %o, ptr noundef %x) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_7strides_1__get__(ptr noundef %0)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop___pyx_memoryview_suboffsets(ptr noundef %o, ptr noundef %x) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_10suboffsets_1__get__(ptr noundef %0)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop___pyx_memoryview_ndim(ptr noundef %o, ptr noundef %x) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_4ndim_1__get__(ptr noundef %0)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop___pyx_memoryview_itemsize(ptr noundef %o, ptr noundef %x) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_8itemsize_1__get__(ptr noundef %0)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop___pyx_memoryview_nbytes(ptr noundef %o, ptr noundef %x) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_6nbytes_1__get__(ptr noundef %0)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop___pyx_memoryview_size(ptr noundef %o, ptr noundef %x) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_4size_1__get__(ptr noundef %0)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_1T_1__get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_result = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_result) #13
  store ptr null, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_memoryview_copy_object(ptr noundef %0)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 556, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11178, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %cmp = icmp eq ptr %6, @_Py_NoneStruct
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end
  %7 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %8 = load ptr, ptr @__pyx_memoryviewslice_type, align 8, !tbaa !5
  %call5 = call i32 @__Pyx_TypeTest(ptr noundef %7, ptr noundef %8)
  %tobool6 = icmp ne i32 %call5, 0
  %lnot7 = xor i1 %tobool6, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 1)
  %tobool13 = icmp ne i64 %expval12, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end
  %9 = phi i1 [ true, %if.end ], [ %tobool13, %lor.rhs ]
  %lnot14 = xor i1 %9, true
  %lnot16 = xor i1 %lnot14, true
  %lnot.ext17 = zext i1 %lnot16 to i32
  %conv18 = sext i32 %lnot.ext17 to i64
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 1)
  %tobool20 = icmp ne i64 %expval19, 0
  br i1 %tobool20, label %if.end22, label %if.then21

if.then21:                                        ; preds = %lor.end
  %10 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %10, ptr %__pyx_filename, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 556, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11180, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end22:                                         ; preds = %lor.end
  %14 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %14, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %from_slice = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %15, i32 0, i32 1
  %call23 = call i32 @__pyx_memslice_transpose(ptr noundef %from_slice)
  store i32 %call23, ptr %__pyx_t_2, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp24 = icmp eq i32 %16, 0
  %lnot26 = xor i1 %cmp24, true
  %lnot28 = xor i1 %lnot26, true
  %lnot.ext29 = zext i1 %lnot28 to i32
  %conv30 = sext i32 %lnot.ext29 to i64
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 0)
  %tobool32 = icmp ne i64 %expval31, 0
  br i1 %tobool32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.end22
  %17 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %17, ptr %__pyx_filename, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 557, ptr %__pyx_lineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11191, ptr %__pyx_clineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end34:                                         ; preds = %if.end22
  %21 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %21)
  %22 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %22)
  %23 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr %23, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then33, %if.then21, %if.then
  %24 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %24)
  %25 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %27 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.206, i32 noundef %25, i32 noundef %26, ptr noundef %27)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end34
  %28 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %28)
  %29 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_result) #13
  ret ptr %29
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_memoryview_copy_object(ptr noundef %__pyx_v_memview) #0 {
entry:
  %__pyx_v_memview.addr = alloca ptr, align 8
  %__pyx_v_memviewslice = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_memview, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_memviewslice) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  call void @__pyx_memoryview_slice_copy(ptr noundef %0, ptr noundef %__pyx_v_memviewslice)
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %1)
  %2 = load ptr, ptr %__pyx_v_memview.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_memoryview_copy_object_from_slice(ptr noundef %2, ptr noundef %__pyx_v_memviewslice)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1086, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 16197, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %8, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then
  %9 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %9)
  %10 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.207, i32 noundef %10, i32 noundef %11, ptr noundef %12)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end
  %13 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_memviewslice) #13
  ret ptr %13
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_4base_1__get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_4base___get__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_4base___get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %obj = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %1, i32 0, i32 2
  %2 = load ptr, ptr %obj, align 8, !tbaa !210
  call void @Py_INCREF(ptr noundef %2)
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %obj1 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %3, i32 0, i32 2
  %4 = load ptr, ptr %obj1, align 8, !tbaa !210
  store ptr %4, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %entry
  %5 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %5
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_5shape_1__get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_5shape___get__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_5shape___get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_length = alloca i64, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_length) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %call = call ptr @PyList_New(i64 noundef 0)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 566, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11321, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %6, i32 0, i32 8
  %shape = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 7
  %7 = load ptr, ptr %shape, align 8, !tbaa !189
  %8 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view4 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %8, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view4, i32 0, i32 5
  %9 = load i32, ptr %ndim, align 4, !tbaa !123
  %idx.ext = sext i32 %9 to i64
  %add.ptr = getelementptr i64, ptr %7, i64 %idx.ext
  store ptr %add.ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view5 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %10, i32 0, i32 8
  %shape6 = getelementptr inbounds %struct.Py_buffer, ptr %view5, i32 0, i32 7
  %11 = load ptr, ptr %shape6, align 8, !tbaa !189
  store ptr %11, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %13 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %cmp = icmp ult ptr %12, %13
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %14, ptr %__pyx_t_2, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %arrayidx = getelementptr i64, ptr %15, i64 0
  %16 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %16, ptr %__pyx_v_length, align 8, !tbaa !27
  %17 = load i64, ptr %__pyx_v_length, align 8, !tbaa !27
  %call8 = call ptr @PyLong_FromSsize_t(i64 noundef %17)
  store ptr %call8, ptr %__pyx_t_5, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool9 = icmp ne ptr %18, null
  %lnot10 = xor i1 %tobool9, true
  %lnot12 = xor i1 %lnot10, true
  %lnot14 = xor i1 %lnot12, true
  %lnot.ext15 = zext i1 %lnot14 to i32
  %conv16 = sext i32 %lnot.ext15 to i64
  %expval17 = call i64 @llvm.expect.i64(i64 %conv16, i64 0)
  %tobool18 = icmp ne i64 %expval17, 0
  br i1 %tobool18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %for.body
  %19 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %19, ptr %__pyx_filename, align 8, !tbaa !5
  %20 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 566, ptr %__pyx_lineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11327, ptr %__pyx_clineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end20:                                         ; preds = %for.body
  %23 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %24 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %call21 = call i32 @__Pyx_ListComp_Append(ptr noundef %23, ptr noundef %24)
  %tobool22 = icmp ne i32 %call21, 0
  %lnot23 = xor i1 %tobool22, true
  %lnot25 = xor i1 %lnot23, true
  %lnot.ext26 = zext i1 %lnot25 to i32
  %conv27 = sext i32 %lnot.ext26 to i64
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 0)
  %tobool29 = icmp ne i64 %expval28, 0
  br i1 %tobool29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end20
  %25 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %25, ptr %__pyx_filename, align 8, !tbaa !5
  %26 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 566, ptr %__pyx_lineno, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11329, ptr %__pyx_clineno, align 4, !tbaa !9
  %28 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end31:                                         ; preds = %if.end20
  %29 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %29)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %if.end31
  %30 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %incdec.ptr = getelementptr i64, ptr %30, i32 1
  store ptr %incdec.ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %for.cond, !llvm.loop !250

for.end:                                          ; preds = %for.cond
  %31 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call32 = call ptr @PyList_AsTuple(ptr noundef %31)
  store ptr %call32, ptr %__pyx_t_5, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool33 = icmp ne ptr %32, null
  %lnot34 = xor i1 %tobool33, true
  %lnot36 = xor i1 %lnot34, true
  %lnot38 = xor i1 %lnot36, true
  %lnot.ext39 = zext i1 %lnot38 to i32
  %conv40 = sext i32 %lnot.ext39 to i64
  %expval41 = call i64 @llvm.expect.i64(i64 %conv40, i64 0)
  %tobool42 = icmp ne i64 %expval41, 0
  br i1 %tobool42, label %if.then43, label %if.end44

if.then43:                                        ; preds = %for.end
  %33 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %33, ptr %__pyx_filename, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 566, ptr %__pyx_lineno, align 4, !tbaa !9
  %35 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11332, ptr %__pyx_clineno, align 4, !tbaa !9
  %36 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end44:                                         ; preds = %for.end
  %37 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %37)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %38 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr %38, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then43, %if.then30, %if.then19, %if.then
  %39 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %39)
  %40 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %40)
  %41 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %42 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %43 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.208, i32 noundef %41, i32 noundef %42, ptr noundef %43)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end44
  %44 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_length) #13
  ret ptr %44
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_ListComp_Append(ptr noundef %list, ptr noundef %x) #3 {
entry:
  %retval = alloca i32, align 4
  %list.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  %L = alloca ptr, align 8
  %len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %list, ptr %list.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %L) #13
  %0 = load ptr, ptr %list.addr, align 8, !tbaa !5
  store ptr %0, ptr %L, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %len) #13
  %1 = load ptr, ptr %list.addr, align 8, !tbaa !5
  %call = call i64 @Py_SIZE(ptr noundef %1)
  store i64 %call, ptr %len, align 8, !tbaa !27
  %2 = load ptr, ptr %L, align 8, !tbaa !5
  %allocated = getelementptr inbounds %struct.PyListObject, ptr %2, i32 0, i32 2
  %3 = load i64, ptr %allocated, align 8, !tbaa !226
  %4 = load i64, ptr %len, align 8, !tbaa !27
  %cmp = icmp sgt i64 %3, %4
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %x.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %5)
  %6 = load ptr, ptr %list.addr, align 8, !tbaa !5
  %7 = load i64, ptr %len, align 8, !tbaa !27
  %8 = load ptr, ptr %x.addr, align 8, !tbaa !5
  call void @PyList_SET_ITEM(ptr noundef %6, i64 noundef %7, ptr noundef %8)
  %9 = load ptr, ptr %list.addr, align 8, !tbaa !5
  %10 = load i64, ptr %len, align 8, !tbaa !27
  %add = add i64 %10, 1
  call void @Py_SET_SIZE(ptr noundef %9, i64 noundef %add)
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load ptr, ptr %list.addr, align 8, !tbaa !5
  %12 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call2 = call i32 @PyList_Append(ptr noundef %11, ptr noundef %12)
  store i32 %call2, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %len) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %L) #13
  %13 = load i32, ptr %retval, align 4
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_7strides_1__get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_7strides___get__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_7strides___get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_stride = alloca i64, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_stride) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 8
  %strides = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 8
  %1 = load ptr, ptr %strides, align 8, !tbaa !190
  %cmp = icmp eq ptr %1, null
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %2, 0
  %lnot = xor i1 %tobool, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv4 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv4, i64 0)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %if.then, label %if.end17

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %4 = load ptr, ptr @__pyx_tuple__15, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_Call(ptr noundef %3, ptr noundef %4, ptr noundef null)
  store ptr %call, ptr %__pyx_t_2, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool6 = icmp ne ptr %5, null
  %lnot7 = xor i1 %tobool6, true
  %lnot9 = xor i1 %lnot7, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %if.then16, label %if.end

if.then16:                                        ; preds = %if.then
  %6 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %6, ptr %__pyx_filename, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 572, ptr %__pyx_lineno, align 4, !tbaa !9
  %8 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11412, ptr %__pyx_clineno, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %if.then
  %10 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %10, ptr noundef null, ptr noundef null, ptr noundef null)
  %11 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %11)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %12 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %12, ptr %__pyx_filename, align 8, !tbaa !5
  %13 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 572, ptr %__pyx_lineno, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11416, ptr %__pyx_clineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end17:                                         ; preds = %entry
  %16 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %16)
  %call18 = call ptr @PyList_New(i64 noundef 0)
  store ptr %call18, ptr %__pyx_t_2, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool19 = icmp ne ptr %17, null
  %lnot20 = xor i1 %tobool19, true
  %lnot22 = xor i1 %lnot20, true
  %lnot24 = xor i1 %lnot22, true
  %lnot.ext25 = zext i1 %lnot24 to i32
  %conv26 = sext i32 %lnot.ext25 to i64
  %expval27 = call i64 @llvm.expect.i64(i64 %conv26, i64 0)
  %tobool28 = icmp ne i64 %expval27, 0
  br i1 %tobool28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end17
  %18 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %18, ptr %__pyx_filename, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 574, ptr %__pyx_lineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11435, ptr %__pyx_clineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end30:                                         ; preds = %if.end17
  %22 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view31 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %22, i32 0, i32 8
  %strides32 = getelementptr inbounds %struct.Py_buffer, ptr %view31, i32 0, i32 8
  %23 = load ptr, ptr %strides32, align 8, !tbaa !190
  %24 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view33 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %24, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view33, i32 0, i32 5
  %25 = load i32, ptr %ndim, align 4, !tbaa !123
  %idx.ext = sext i32 %25 to i64
  %add.ptr = getelementptr i64, ptr %23, i64 %idx.ext
  store ptr %add.ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %26 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view34 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %26, i32 0, i32 8
  %strides35 = getelementptr inbounds %struct.Py_buffer, ptr %view34, i32 0, i32 8
  %27 = load ptr, ptr %strides35, align 8, !tbaa !190
  store ptr %27, ptr %__pyx_t_5, align 8, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end30
  %28 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %29 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %cmp36 = icmp ult ptr %28, %29
  br i1 %cmp36, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %30 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr %30, ptr %__pyx_t_3, align 8, !tbaa !5
  %31 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %arrayidx = getelementptr i64, ptr %31, i64 0
  %32 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %32, ptr %__pyx_v_stride, align 8, !tbaa !27
  %33 = load i64, ptr %__pyx_v_stride, align 8, !tbaa !27
  %call38 = call ptr @PyLong_FromSsize_t(i64 noundef %33)
  store ptr %call38, ptr %__pyx_t_6, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool39 = icmp ne ptr %34, null
  %lnot40 = xor i1 %tobool39, true
  %lnot42 = xor i1 %lnot40, true
  %lnot44 = xor i1 %lnot42, true
  %lnot.ext45 = zext i1 %lnot44 to i32
  %conv46 = sext i32 %lnot.ext45 to i64
  %expval47 = call i64 @llvm.expect.i64(i64 %conv46, i64 0)
  %tobool48 = icmp ne i64 %expval47, 0
  br i1 %tobool48, label %if.then49, label %if.end50

if.then49:                                        ; preds = %for.body
  %35 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %35, ptr %__pyx_filename, align 8, !tbaa !5
  %36 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 574, ptr %__pyx_lineno, align 4, !tbaa !9
  %37 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11441, ptr %__pyx_clineno, align 4, !tbaa !9
  %38 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end50:                                         ; preds = %for.body
  %39 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %40 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call51 = call i32 @__Pyx_ListComp_Append(ptr noundef %39, ptr noundef %40)
  %tobool52 = icmp ne i32 %call51, 0
  %lnot53 = xor i1 %tobool52, true
  %lnot55 = xor i1 %lnot53, true
  %lnot.ext56 = zext i1 %lnot55 to i32
  %conv57 = sext i32 %lnot.ext56 to i64
  %expval58 = call i64 @llvm.expect.i64(i64 %conv57, i64 0)
  %tobool59 = icmp ne i64 %expval58, 0
  br i1 %tobool59, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.end50
  %41 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %41, ptr %__pyx_filename, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 574, ptr %__pyx_lineno, align 4, !tbaa !9
  %43 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11443, ptr %__pyx_clineno, align 4, !tbaa !9
  %44 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end61:                                         ; preds = %if.end50
  %45 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %45)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %if.end61
  %46 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %incdec.ptr = getelementptr i64, ptr %46, i32 1
  store ptr %incdec.ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  br label %for.cond, !llvm.loop !251

for.end:                                          ; preds = %for.cond
  %47 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call62 = call ptr @PyList_AsTuple(ptr noundef %47)
  store ptr %call62, ptr %__pyx_t_6, align 8, !tbaa !5
  %48 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool63 = icmp ne ptr %48, null
  %lnot64 = xor i1 %tobool63, true
  %lnot66 = xor i1 %lnot64, true
  %lnot68 = xor i1 %lnot66, true
  %lnot.ext69 = zext i1 %lnot68 to i32
  %conv70 = sext i32 %lnot.ext69 to i64
  %expval71 = call i64 @llvm.expect.i64(i64 %conv70, i64 0)
  %tobool72 = icmp ne i64 %expval71, 0
  br i1 %tobool72, label %if.then73, label %if.end74

if.then73:                                        ; preds = %for.end
  %49 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %49, ptr %__pyx_filename, align 8, !tbaa !5
  %50 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 574, ptr %__pyx_lineno, align 4, !tbaa !9
  %51 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11446, ptr %__pyx_clineno, align 4, !tbaa !9
  %52 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end74:                                         ; preds = %for.end
  %53 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %53)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %54 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %54, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then73, %if.then60, %if.then49, %if.then29, %if.end, %if.then16
  %55 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %55)
  %56 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %56)
  %57 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %58 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %59 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.209, i32 noundef %57, i32 noundef %58, ptr noundef %59)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end74
  %60 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_stride) #13
  ret ptr %60
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_10suboffsets_1__get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_10suboffsets___get__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_10suboffsets___get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_suboffset = alloca i64, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_suboffset) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 8
  %suboffsets = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 9
  %1 = load ptr, ptr %suboffsets, align 8, !tbaa !122
  %cmp = icmp eq ptr %1, null
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end23

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %3)
  %4 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view3 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %4, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view3, i32 0, i32 5
  %5 = load i32, ptr %ndim, align 4, !tbaa !123
  %call = call ptr @__Pyx_PyInt_From_int(i32 noundef %5)
  store ptr %call, ptr %__pyx_t_2, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %6, null
  %lnot = xor i1 %tobool4, true
  %lnot5 = xor i1 %lnot, true
  %lnot6 = xor i1 %lnot5, true
  %lnot.ext = zext i1 %lnot6 to i32
  %conv7 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv7, i64 0)
  %tobool8 = icmp ne i64 %expval, 0
  br i1 %tobool8, label %if.then9, label %if.end

if.then9:                                         ; preds = %if.then
  %7 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %7, ptr %__pyx_filename, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 579, ptr %__pyx_lineno, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11527, ptr %__pyx_clineno, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %if.then
  %11 = load ptr, ptr @__pyx_tuple__16, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call10 = call ptr @PyNumber_Multiply(ptr noundef %11, ptr noundef %12)
  store ptr %call10, ptr %__pyx_t_3, align 8, !tbaa !5
  %13 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool11 = icmp ne ptr %13, null
  %lnot12 = xor i1 %tobool11, true
  %lnot14 = xor i1 %lnot12, true
  %lnot16 = xor i1 %lnot14, true
  %lnot.ext17 = zext i1 %lnot16 to i32
  %conv18 = sext i32 %lnot.ext17 to i64
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 0)
  %tobool20 = icmp ne i64 %expval19, 0
  br i1 %tobool20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end
  %14 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %14, ptr %__pyx_filename, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 579, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11529, ptr %__pyx_clineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end22:                                         ; preds = %if.end
  %18 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %18)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %19, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %__pyx_L0

if.end23:                                         ; preds = %entry
  %20 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %20)
  %call24 = call ptr @PyList_New(i64 noundef 0)
  store ptr %call24, ptr %__pyx_t_3, align 8, !tbaa !5
  %21 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool25 = icmp ne ptr %21, null
  %lnot26 = xor i1 %tobool25, true
  %lnot28 = xor i1 %lnot26, true
  %lnot30 = xor i1 %lnot28, true
  %lnot.ext31 = zext i1 %lnot30 to i32
  %conv32 = sext i32 %lnot.ext31 to i64
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 0)
  %tobool34 = icmp ne i64 %expval33, 0
  br i1 %tobool34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end23
  %22 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %22, ptr %__pyx_filename, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 581, ptr %__pyx_lineno, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11553, ptr %__pyx_clineno, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end36:                                         ; preds = %if.end23
  %26 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view37 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %26, i32 0, i32 8
  %suboffsets38 = getelementptr inbounds %struct.Py_buffer, ptr %view37, i32 0, i32 9
  %27 = load ptr, ptr %suboffsets38, align 8, !tbaa !122
  %28 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view39 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %28, i32 0, i32 8
  %ndim40 = getelementptr inbounds %struct.Py_buffer, ptr %view39, i32 0, i32 5
  %29 = load i32, ptr %ndim40, align 4, !tbaa !123
  %idx.ext = sext i32 %29 to i64
  %add.ptr = getelementptr i64, ptr %27, i64 %idx.ext
  store ptr %add.ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view41 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %30, i32 0, i32 8
  %suboffsets42 = getelementptr inbounds %struct.Py_buffer, ptr %view41, i32 0, i32 9
  %31 = load ptr, ptr %suboffsets42, align 8, !tbaa !122
  store ptr %31, ptr %__pyx_t_6, align 8, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end36
  %32 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %cmp43 = icmp ult ptr %32, %33
  br i1 %cmp43, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %34 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %34, ptr %__pyx_t_4, align 8, !tbaa !5
  %35 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %arrayidx = getelementptr i64, ptr %35, i64 0
  %36 = load i64, ptr %arrayidx, align 8, !tbaa !27
  store i64 %36, ptr %__pyx_v_suboffset, align 8, !tbaa !27
  %37 = load i64, ptr %__pyx_v_suboffset, align 8, !tbaa !27
  %call45 = call ptr @PyLong_FromSsize_t(i64 noundef %37)
  store ptr %call45, ptr %__pyx_t_2, align 8, !tbaa !5
  %38 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool46 = icmp ne ptr %38, null
  %lnot47 = xor i1 %tobool46, true
  %lnot49 = xor i1 %lnot47, true
  %lnot51 = xor i1 %lnot49, true
  %lnot.ext52 = zext i1 %lnot51 to i32
  %conv53 = sext i32 %lnot.ext52 to i64
  %expval54 = call i64 @llvm.expect.i64(i64 %conv53, i64 0)
  %tobool55 = icmp ne i64 %expval54, 0
  br i1 %tobool55, label %if.then56, label %if.end57

if.then56:                                        ; preds = %for.body
  %39 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %39, ptr %__pyx_filename, align 8, !tbaa !5
  %40 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 581, ptr %__pyx_lineno, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11559, ptr %__pyx_clineno, align 4, !tbaa !9
  %42 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end57:                                         ; preds = %for.body
  %43 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %44 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call58 = call i32 @__Pyx_ListComp_Append(ptr noundef %43, ptr noundef %44)
  %tobool59 = icmp ne i32 %call58, 0
  %lnot60 = xor i1 %tobool59, true
  %lnot62 = xor i1 %lnot60, true
  %lnot.ext63 = zext i1 %lnot62 to i32
  %conv64 = sext i32 %lnot.ext63 to i64
  %expval65 = call i64 @llvm.expect.i64(i64 %conv64, i64 0)
  %tobool66 = icmp ne i64 %expval65, 0
  br i1 %tobool66, label %if.then67, label %if.end68

if.then67:                                        ; preds = %if.end57
  %45 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %45, ptr %__pyx_filename, align 8, !tbaa !5
  %46 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 581, ptr %__pyx_lineno, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11561, ptr %__pyx_clineno, align 4, !tbaa !9
  %48 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end68:                                         ; preds = %if.end57
  %49 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %49)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %if.end68
  %50 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %incdec.ptr = getelementptr i64, ptr %50, i32 1
  store ptr %incdec.ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  br label %for.cond, !llvm.loop !252

for.end:                                          ; preds = %for.cond
  %51 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %call69 = call ptr @PyList_AsTuple(ptr noundef %51)
  store ptr %call69, ptr %__pyx_t_2, align 8, !tbaa !5
  %52 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool70 = icmp ne ptr %52, null
  %lnot71 = xor i1 %tobool70, true
  %lnot73 = xor i1 %lnot71, true
  %lnot75 = xor i1 %lnot73, true
  %lnot.ext76 = zext i1 %lnot75 to i32
  %conv77 = sext i32 %lnot.ext76 to i64
  %expval78 = call i64 @llvm.expect.i64(i64 %conv77, i64 0)
  %tobool79 = icmp ne i64 %expval78, 0
  br i1 %tobool79, label %if.then80, label %if.end81

if.then80:                                        ; preds = %for.end
  %53 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %53, ptr %__pyx_filename, align 8, !tbaa !5
  %54 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 581, ptr %__pyx_lineno, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11564, ptr %__pyx_clineno, align 4, !tbaa !9
  %56 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end81:                                         ; preds = %for.end
  %57 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %57)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %58 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  store ptr %58, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then80, %if.then67, %if.then56, %if.then35, %if.then21, %if.then9
  %59 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %59)
  %60 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %60)
  %61 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %62 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %63 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.210, i32 noundef %61, i32 noundef %62, ptr noundef %63)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end81, %if.end22
  %64 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_suboffset) #13
  ret ptr %64
}

declare ptr @PyNumber_Multiply(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_4ndim_1__get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_4ndim___get__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_4ndim___get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %1, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 5
  %2 = load i32, ptr %ndim, align 4, !tbaa !123
  %call = call ptr @__Pyx_PyInt_From_int(i32 noundef %2)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 585, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11629, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %8, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then
  %9 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %9)
  %10 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.211, i32 noundef %10, i32 noundef %11, ptr noundef %12)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end
  %13 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %13
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_8itemsize_1__get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_8itemsize___get__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_8itemsize___get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %1, i32 0, i32 8
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 3
  %2 = load i64, ptr %itemsize, align 8, !tbaa !120
  %call = call ptr @PyLong_FromSsize_t(i64 noundef %2)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 589, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11692, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %8, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then
  %9 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %9)
  %10 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.212, i32 noundef %10, i32 noundef %11, ptr noundef %12)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end
  %13 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %13
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_6nbytes_1__get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_6nbytes___get__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_6nbytes___get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #13
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %2 = load ptr, ptr @__pyx_n_s_size, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %1, ptr noundef %2)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 593, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11757, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %8, i32 0, i32 8
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 3
  %9 = load i64, ptr %itemsize, align 8, !tbaa !120
  %call4 = call ptr @PyLong_FromSsize_t(i64 noundef %9)
  store ptr %call4, ptr %__pyx_t_2, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %10, null
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  %11 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %11, ptr %__pyx_filename, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 593, ptr %__pyx_lineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11759, ptr %__pyx_clineno, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end16:                                         ; preds = %if.end
  %15 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  %call17 = call ptr @PyNumber_Multiply(ptr noundef %15, ptr noundef %16)
  store ptr %call17, ptr %__pyx_t_3, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %17, null
  %lnot19 = xor i1 %tobool18, true
  %lnot21 = xor i1 %lnot19, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end16
  %18 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %18, ptr %__pyx_filename, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 593, ptr %__pyx_lineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11761, ptr %__pyx_clineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end29:                                         ; preds = %if.end16
  %22 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %22)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %23)
  store ptr null, ptr %__pyx_t_2, align 8, !tbaa !5
  %24 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  store ptr %24, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then28, %if.then15, %if.then
  %25 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %25)
  %26 = load ptr, ptr %__pyx_t_2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %26)
  %27 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %27)
  %28 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %30 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.213, i32 noundef %28, i32 noundef %29, ptr noundef %30)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end29
  %31 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %31
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_15View_dot_MemoryView_10memoryview_4size_1__get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_4size___get__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_15View_dot_MemoryView_10memoryview_4size___get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_result = alloca ptr, align 8
  %__pyx_v_length = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %tmp28 = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_result) #13
  store ptr null, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_length) #13
  store ptr null, ptr %__pyx_v_length, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_size = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %0, i32 0, i32 3
  %1 = load ptr, ptr %_size, align 8, !tbaa !211
  %cmp = icmp eq ptr %1, @_Py_NoneStruct
  %conv = zext i1 %cmp to i32
  store i32 %conv, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp1 = icmp ne i32 %2, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_2, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end33

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr @__pyx_int_1, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %4)
  %5 = load ptr, ptr @__pyx_int_1, align 8, !tbaa !5
  store ptr %5, ptr %__pyx_v_result, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %6, i32 0, i32 8
  %shape = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 7
  %7 = load ptr, ptr %shape, align 8, !tbaa !189
  %8 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view3 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %8, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view3, i32 0, i32 5
  %9 = load i32, ptr %ndim, align 4, !tbaa !123
  %idx.ext = sext i32 %9 to i64
  %add.ptr = getelementptr i64, ptr %7, i64 %idx.ext
  store ptr %add.ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view4 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %10, i32 0, i32 8
  %shape5 = getelementptr inbounds %struct.Py_buffer, ptr %view4, i32 0, i32 7
  %11 = load ptr, ptr %shape5, align 8, !tbaa !189
  store ptr %11, ptr %__pyx_t_5, align 8, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %13 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %cmp6 = icmp ult ptr %12, %13
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  store ptr %14, ptr %__pyx_t_3, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %arrayidx = getelementptr i64, ptr %15, i64 0
  %16 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %call = call ptr @PyLong_FromSsize_t(i64 noundef %16)
  store ptr %call, ptr %__pyx_t_6, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool8 = icmp ne ptr %17, null
  %lnot = xor i1 %tobool8, true
  %lnot9 = xor i1 %lnot, true
  %lnot10 = xor i1 %lnot9, true
  %lnot.ext = zext i1 %lnot10 to i32
  %conv11 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool12 = icmp ne i64 %expval, 0
  br i1 %tobool12, label %if.then13, label %if.end

if.then13:                                        ; preds = %for.body
  %18 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %18, ptr %__pyx_filename, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 600, ptr %__pyx_lineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11858, ptr %__pyx_clineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %22 = load ptr, ptr %__pyx_v_length, align 8, !tbaa !5
  store ptr %22, ptr %tmp, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %23, ptr %__pyx_v_length, align 8, !tbaa !5
  %24 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %24)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %26 = load ptr, ptr %__pyx_v_length, align 8, !tbaa !5
  %call14 = call ptr @PyNumber_InPlaceMultiply(ptr noundef %25, ptr noundef %26)
  store ptr %call14, ptr %__pyx_t_6, align 8, !tbaa !5
  %27 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool15 = icmp ne ptr %27, null
  %lnot16 = xor i1 %tobool15, true
  %lnot18 = xor i1 %lnot16, true
  %lnot20 = xor i1 %lnot18, true
  %lnot.ext21 = zext i1 %lnot20 to i32
  %conv22 = sext i32 %lnot.ext21 to i64
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 0)
  %tobool24 = icmp ne i64 %expval23, 0
  br i1 %tobool24, label %if.then25, label %if.end26

if.then25:                                        ; preds = %do.end
  %28 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %28, ptr %__pyx_filename, align 8, !tbaa !5
  %29 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 601, ptr %__pyx_lineno, align 4, !tbaa !9
  %30 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 11870, ptr %__pyx_clineno, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end26:                                         ; preds = %do.end
  br label %do.body27

do.body27:                                        ; preds = %if.end26
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp28) #13
  %32 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  store ptr %32, ptr %tmp28, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %33, ptr %__pyx_v_result, align 8, !tbaa !5
  %34 = load ptr, ptr %tmp28, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %34)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp28) #13
  br label %do.cond29

do.cond29:                                        ; preds = %do.body27
  br label %do.end30

do.end30:                                         ; preds = %do.cond29
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %do.end30
  %35 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %incdec.ptr = getelementptr i64, ptr %35, i32 1
  store ptr %incdec.ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  br label %for.cond, !llvm.loop !253

for.end:                                          ; preds = %for.cond
  %36 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %36)
  %37 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_size31 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %37, i32 0, i32 3
  %38 = load ptr, ptr %_size31, align 8, !tbaa !211
  call void @Py_DECREF(ptr noundef %38)
  %39 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  %40 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_size32 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %40, i32 0, i32 3
  store ptr %39, ptr %_size32, align 8, !tbaa !211
  br label %if.end33

if.end33:                                         ; preds = %for.end, %entry
  %41 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %41)
  %42 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_size34 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %42, i32 0, i32 3
  %43 = load ptr, ptr %_size34, align 8, !tbaa !211
  call void @Py_INCREF(ptr noundef %43)
  %44 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_size35 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %44, i32 0, i32 3
  %45 = load ptr, ptr %_size35, align 8, !tbaa !211
  store ptr %45, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then25, %if.then13
  %46 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %46)
  %47 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %48 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %49 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.214, i32 noundef %47, i32 noundef %48, ptr noundef %49)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end33
  %50 = load ptr, ptr %__pyx_v_result, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %50)
  %51 = load ptr, ptr %__pyx_v_length, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %51)
  %52 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_length) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_result) #13
  ret ptr %52
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memoryview___cinit__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_obj = alloca ptr, align 8
  %__pyx_v_flags = alloca i32, align 4
  %__pyx_v_dtype_is_object = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %values = alloca [3 x ptr], align 16
  %kw_args = alloca i64, align 8
  %pos_args = alloca i64, align 8
  %value = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !5
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_obj) #13
  store ptr null, ptr %__pyx_v_obj, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_flags) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_dtype_is_object) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 24, ptr %values) #13
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 24, i1 false)
  %0 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else79

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos_args) #13
  %1 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1)
  store i64 %call, ptr %pos_args, align 8, !tbaa !27
  %2 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %2, label %sw.default [
    i64 3, label %sw.bb
    i64 2, label %sw.bb4
    i64 1, label %sw.bb8
    i64 0, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.then
  %3 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 2
  %4 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %arrayidx3 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2
  store ptr %4, ptr %arrayidx3, align 16, !tbaa !5
  br label %sw.bb4

sw.bb4:                                           ; preds = %if.then, %sw.bb
  %5 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %5, i32 0, i32 1
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 1
  %6 = load ptr, ptr %arrayidx6, align 8, !tbaa !5
  %arrayidx7 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1
  store ptr %6, ptr %arrayidx7, align 8, !tbaa !5
  br label %sw.bb8

sw.bb8:                                           ; preds = %if.then, %sw.bb4
  %7 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item9 = getelementptr inbounds %struct.PyTupleObject, ptr %7, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x ptr], ptr %ob_item9, i64 0, i64 0
  %8 = load ptr, ptr %arrayidx10, align 8, !tbaa !5
  %arrayidx11 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0
  store ptr %8, ptr %arrayidx11, align 16, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb8, %if.then
  %9 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %call12 = call i64 @PyDict_Size(ptr noundef %9)
  store i64 %call12, ptr %kw_args, align 8, !tbaa !27
  %10 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %10, label %sw.epilog54 [
    i64 0, label %sw.bb13
    i64 1, label %sw.bb25
    i64 2, label %sw.bb42
  ]

sw.bb13:                                          ; preds = %sw.epilog
  %11 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %12 = load ptr, ptr @__pyx_n_s_obj, align 8, !tbaa !5
  %13 = load ptr, ptr @__pyx_n_s_obj, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %13, i32 0, i32 2
  %14 = load i64, ptr %hash, align 8, !tbaa !154
  %call14 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %11, ptr noundef %12, i64 noundef %14)
  %arrayidx15 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0
  store ptr %call14, ptr %arrayidx15, align 16, !tbaa !5
  %cmp = icmp ne ptr %call14, null
  %lnot17 = xor i1 %cmp, true
  %lnot19 = xor i1 %lnot17, true
  %lnot.ext20 = zext i1 %lnot19 to i32
  %conv21 = sext i32 %lnot.ext20 to i64
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 1)
  %tobool23 = icmp ne i64 %expval22, 0
  br i1 %tobool23, label %if.then24, label %if.else

if.then24:                                        ; preds = %sw.bb13
  %15 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec = add i64 %15, -1
  store i64 %dec, ptr %kw_args, align 8, !tbaa !27
  br label %if.end

if.else:                                          ; preds = %sw.bb13
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then24
  br label %sw.bb25

sw.bb25:                                          ; preds = %sw.epilog, %if.end
  %16 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %17 = load ptr, ptr @__pyx_n_s_flags, align 8, !tbaa !5
  %18 = load ptr, ptr @__pyx_n_s_flags, align 8, !tbaa !5
  %hash26 = getelementptr inbounds %struct.PyASCIIObject, ptr %18, i32 0, i32 2
  %19 = load i64, ptr %hash26, align 8, !tbaa !154
  %call27 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %16, ptr noundef %17, i64 noundef %19)
  %arrayidx28 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1
  store ptr %call27, ptr %arrayidx28, align 8, !tbaa !5
  %cmp29 = icmp ne ptr %call27, null
  %lnot31 = xor i1 %cmp29, true
  %lnot33 = xor i1 %lnot31, true
  %lnot.ext34 = zext i1 %lnot33 to i32
  %conv35 = sext i32 %lnot.ext34 to i64
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 1)
  %tobool37 = icmp ne i64 %expval36, 0
  br i1 %tobool37, label %if.then38, label %if.else40

if.then38:                                        ; preds = %sw.bb25
  %20 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec39 = add i64 %20, -1
  store i64 %dec39, ptr %kw_args, align 8, !tbaa !27
  br label %if.end41

if.else40:                                        ; preds = %sw.bb25
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.101, i32 noundef 0, i64 noundef 2, i64 noundef 3, i64 noundef 1)
  %21 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %21, ptr %__pyx_filename, align 8, !tbaa !5
  %22 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 346, ptr %__pyx_lineno, align 4, !tbaa !9
  %23 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8489, ptr %__pyx_clineno, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end41:                                         ; preds = %if.then38
  br label %sw.bb42

sw.bb42:                                          ; preds = %sw.epilog, %if.end41
  %25 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp43 = icmp sgt i64 %25, 0
  br i1 %cmp43, label %if.then45, label %if.end53

if.then45:                                        ; preds = %sw.bb42
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #13
  %26 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %27 = load ptr, ptr @__pyx_n_s_dtype_is_object, align 8, !tbaa !5
  %28 = load ptr, ptr @__pyx_n_s_dtype_is_object, align 8, !tbaa !5
  %hash46 = getelementptr inbounds %struct.PyASCIIObject, ptr %28, i32 0, i32 2
  %29 = load i64, ptr %hash46, align 8, !tbaa !154
  %call47 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %26, ptr noundef %27, i64 noundef %29)
  store ptr %call47, ptr %value, align 8, !tbaa !5
  %30 = load ptr, ptr %value, align 8, !tbaa !5
  %tobool48 = icmp ne ptr %30, null
  br i1 %tobool48, label %if.then49, label %if.end52

if.then49:                                        ; preds = %if.then45
  %31 = load ptr, ptr %value, align 8, !tbaa !5
  %arrayidx50 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2
  store ptr %31, ptr %arrayidx50, align 16, !tbaa !5
  %32 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec51 = add i64 %32, -1
  store i64 %dec51, ptr %kw_args, align 8, !tbaa !27
  br label %if.end52

if.end52:                                         ; preds = %if.then49, %if.then45
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #13
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %sw.bb42
  br label %sw.epilog54

sw.epilog54:                                      ; preds = %if.end53, %sw.epilog
  %33 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp55 = icmp sgt i64 %33, 0
  %lnot57 = xor i1 %cmp55, true
  %lnot59 = xor i1 %lnot57, true
  %lnot.ext60 = zext i1 %lnot59 to i32
  %conv61 = sext i32 %lnot.ext60 to i64
  %expval62 = call i64 @llvm.expect.i64(i64 %conv61, i64 0)
  %tobool63 = icmp ne i64 %expval62, 0
  br i1 %tobool63, label %if.then64, label %if.end77

if.then64:                                        ; preds = %sw.epilog54
  %34 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %arraydecay = getelementptr inbounds [3 x ptr], ptr %values, i64 0, i64 0
  %35 = load i64, ptr %pos_args, align 8, !tbaa !27
  %call65 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %34, ptr noundef @__pyx_memoryview___cinit__.__pyx_pyargnames, ptr noundef null, ptr noundef %arraydecay, i64 noundef %35, ptr noundef @.str.101)
  %cmp66 = icmp slt i32 %call65, 0
  %lnot68 = xor i1 %cmp66, true
  %lnot70 = xor i1 %lnot68, true
  %lnot.ext71 = zext i1 %lnot70 to i32
  %conv72 = sext i32 %lnot.ext71 to i64
  %expval73 = call i64 @llvm.expect.i64(i64 %conv72, i64 0)
  %tobool74 = icmp ne i64 %expval73, 0
  br i1 %tobool74, label %if.then75, label %if.end76

if.then75:                                        ; preds = %if.then64
  %36 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %36, ptr %__pyx_filename, align 8, !tbaa !5
  %37 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 346, ptr %__pyx_lineno, align 4, !tbaa !9
  %38 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8499, ptr %__pyx_clineno, align 4, !tbaa !9
  %39 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end76:                                         ; preds = %if.then64
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %sw.epilog54
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then75, %if.else40, %if.else, %sw.default, %if.end77
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup133 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end94

if.else79:                                        ; preds = %entry
  %40 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call80 = call i64 @PyTuple_GET_SIZE(ptr noundef %40)
  switch i64 %call80, label %sw.default92 [
    i64 3, label %sw.bb81
    i64 2, label %sw.bb85
  ]

sw.bb81:                                          ; preds = %if.else79
  %41 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item82 = getelementptr inbounds %struct.PyTupleObject, ptr %41, i32 0, i32 1
  %arrayidx83 = getelementptr [1 x ptr], ptr %ob_item82, i64 0, i64 2
  %42 = load ptr, ptr %arrayidx83, align 8, !tbaa !5
  %arrayidx84 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2
  store ptr %42, ptr %arrayidx84, align 16, !tbaa !5
  br label %sw.bb85

sw.bb85:                                          ; preds = %if.else79, %sw.bb81
  %43 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item86 = getelementptr inbounds %struct.PyTupleObject, ptr %43, i32 0, i32 1
  %arrayidx87 = getelementptr [1 x ptr], ptr %ob_item86, i64 0, i64 1
  %44 = load ptr, ptr %arrayidx87, align 8, !tbaa !5
  %arrayidx88 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1
  store ptr %44, ptr %arrayidx88, align 8, !tbaa !5
  %45 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item89 = getelementptr inbounds %struct.PyTupleObject, ptr %45, i32 0, i32 1
  %arrayidx90 = getelementptr [1 x ptr], ptr %ob_item89, i64 0, i64 0
  %46 = load ptr, ptr %arrayidx90, align 8, !tbaa !5
  %arrayidx91 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0
  store ptr %46, ptr %arrayidx91, align 16, !tbaa !5
  br label %sw.epilog93

sw.default92:                                     ; preds = %if.else79
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup133

sw.epilog93:                                      ; preds = %sw.bb85
  br label %if.end94

if.end94:                                         ; preds = %sw.epilog93, %cleanup.cont
  %arrayidx95 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0
  %47 = load ptr, ptr %arrayidx95, align 16, !tbaa !5
  store ptr %47, ptr %__pyx_v_obj, align 8, !tbaa !5
  %arrayidx96 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1
  %48 = load ptr, ptr %arrayidx96, align 8, !tbaa !5
  %call97 = call i32 @__Pyx_PyInt_As_int(ptr noundef %48)
  store i32 %call97, ptr %__pyx_v_flags, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_v_flags, align 4, !tbaa !9
  %cmp98 = icmp eq i32 %49, -1
  br i1 %cmp98, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end94
  %call100 = call ptr @PyErr_Occurred()
  %tobool101 = icmp ne ptr %call100, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end94
  %50 = phi i1 [ false, %if.end94 ], [ %tobool101, %land.rhs ]
  %lnot102 = xor i1 %50, true
  %lnot104 = xor i1 %lnot102, true
  %lnot.ext105 = zext i1 %lnot104 to i32
  %conv106 = sext i32 %lnot.ext105 to i64
  %expval107 = call i64 @llvm.expect.i64(i64 %conv106, i64 0)
  %tobool108 = icmp ne i64 %expval107, 0
  br i1 %tobool108, label %if.then109, label %if.end110

if.then109:                                       ; preds = %land.end
  %51 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %51, ptr %__pyx_filename, align 8, !tbaa !5
  %52 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 346, ptr %__pyx_lineno, align 4, !tbaa !9
  %53 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8512, ptr %__pyx_clineno, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup133

if.end110:                                        ; preds = %land.end
  %arrayidx111 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2
  %55 = load ptr, ptr %arrayidx111, align 16, !tbaa !5
  %tobool112 = icmp ne ptr %55, null
  br i1 %tobool112, label %if.then113, label %if.else131

if.then113:                                       ; preds = %if.end110
  %arrayidx114 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2
  %56 = load ptr, ptr %arrayidx114, align 16, !tbaa !5
  %call115 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %56)
  store i32 %call115, ptr %__pyx_v_dtype_is_object, align 4, !tbaa !9
  %57 = load i32, ptr %__pyx_v_dtype_is_object, align 4, !tbaa !9
  %cmp116 = icmp eq i32 %57, -1
  br i1 %cmp116, label %land.rhs118, label %land.end121

land.rhs118:                                      ; preds = %if.then113
  %call119 = call ptr @PyErr_Occurred()
  %tobool120 = icmp ne ptr %call119, null
  br label %land.end121

land.end121:                                      ; preds = %land.rhs118, %if.then113
  %58 = phi i1 [ false, %if.then113 ], [ %tobool120, %land.rhs118 ]
  %lnot122 = xor i1 %58, true
  %lnot124 = xor i1 %lnot122, true
  %lnot.ext125 = zext i1 %lnot124 to i32
  %conv126 = sext i32 %lnot.ext125 to i64
  %expval127 = call i64 @llvm.expect.i64(i64 %conv126, i64 0)
  %tobool128 = icmp ne i64 %expval127, 0
  br i1 %tobool128, label %if.then129, label %if.end130

if.then129:                                       ; preds = %land.end121
  %59 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %59, ptr %__pyx_filename, align 8, !tbaa !5
  %60 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 346, ptr %__pyx_lineno, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8514, ptr %__pyx_clineno, align 4, !tbaa !9
  %62 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup133

if.end130:                                        ; preds = %land.end121
  br label %if.end132

if.else131:                                       ; preds = %if.end110
  store i32 0, ptr %__pyx_v_dtype_is_object, align 4, !tbaa !9
  br label %if.end132

if.end132:                                        ; preds = %if.else131, %if.end130
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup133

cleanup133:                                       ; preds = %if.then129, %if.then109, %sw.default92, %if.end132, %cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr %values) #13
  %cleanup.dest134 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest134, label %cleanup138 [
    i32 0, label %cleanup.cont135
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont135:                                  ; preds = %cleanup133
  br label %__pyx_L4_argument_unpacking_done

__pyx_L5_argtuple_error:                          ; preds = %cleanup133
  %63 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call136 = call i64 @PyTuple_GET_SIZE(ptr noundef %63)
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.101, i32 noundef 0, i64 noundef 2, i64 noundef 3, i64 noundef %call136)
  %64 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %64, ptr %__pyx_filename, align 8, !tbaa !5
  %65 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 346, ptr %__pyx_lineno, align 4, !tbaa !9
  %66 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8521, ptr %__pyx_clineno, align 4, !tbaa !9
  %67 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

__pyx_L3_error:                                   ; preds = %cleanup133, %__pyx_L5_argtuple_error
  %68 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %69 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %70 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.215, i32 noundef %68, i32 noundef %69, ptr noundef %70)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup138

__pyx_L4_argument_unpacking_done:                 ; preds = %cleanup.cont135
  %71 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %72 = load ptr, ptr %__pyx_v_obj, align 8, !tbaa !5
  %73 = load i32, ptr %__pyx_v_flags, align 4, !tbaa !9
  %74 = load i32, ptr %__pyx_v_dtype_is_object, align 4, !tbaa !9
  %call137 = call i32 @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview___cinit__(ptr noundef %71, ptr noundef %72, i32 noundef %73, i32 noundef %74)
  store i32 %call137, ptr %__pyx_r, align 4, !tbaa !9
  %75 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  store i32 %75, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup138

cleanup138:                                       ; preds = %__pyx_L4_argument_unpacking_done, %__pyx_L3_error, %cleanup133
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_dtype_is_object) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_flags) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_obj) #13
  %76 = load i32, ptr %retval, align 4
  ret i32 %76
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview___cinit__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_obj, i32 noundef %__pyx_v_flags, i32 noundef %__pyx_v_dtype_is_object) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_obj.addr = alloca ptr, align 8
  %__pyx_v_flags.addr = alloca i32, align 4
  %__pyx_v_dtype_is_object.addr = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_obj, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  store i32 %__pyx_v_flags, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  store i32 %__pyx_v_dtype_is_object, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %obj = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %1, i32 0, i32 2
  %2 = load ptr, ptr %obj, align 8, !tbaa !210
  call void @Py_DECREF(ptr noundef %2)
  %3 = load ptr, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %obj1 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %4, i32 0, i32 2
  store ptr %3, ptr %obj1, align 8, !tbaa !210
  %5 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %6 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %flags = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %6, i32 0, i32 9
  store i32 %5, ptr %flags, align 8, !tbaa !118
  %7 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %7)
  %8 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  %cmp = icmp eq ptr %call, %8
  %conv = zext i1 %cmp to i32
  store i32 %conv, ptr %__pyx_t_2, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp2 = icmp ne i32 %9, 0
  %conv3 = zext i1 %cmp2 to i32
  store i32 %conv3, ptr %__pyx_t_3, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  br label %if.end

if.else:                                          ; preds = %entry
  %11 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %11, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L4_bool_binop_done

if.end:                                           ; preds = %if.then
  %12 = load ptr, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  %cmp4 = icmp ne ptr %12, @_Py_NoneStruct
  %conv5 = zext i1 %cmp4 to i32
  store i32 %conv5, ptr %__pyx_t_3, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp6 = icmp ne i32 %13, 0
  %conv7 = zext i1 %cmp6 to i32
  store i32 %conv7, ptr %__pyx_t_2, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %14, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L4_bool_binop_done

__pyx_L4_bool_binop_done:                         ; preds = %if.end, %if.else
  %15 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool8 = icmp ne i32 %15, 0
  br i1 %tobool8, label %if.then9, label %if.end29

if.then9:                                         ; preds = %__pyx_L4_bool_binop_done
  %16 = load ptr, ptr %__pyx_v_obj.addr, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %17, i32 0, i32 8
  %18 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %call10 = call i32 @PyObject_GetBuffer(ptr noundef %16, ptr noundef %view, i32 noundef %18)
  store i32 %call10, ptr %__pyx_t_4, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp11 = icmp eq i32 %19, -1
  %lnot = xor i1 %cmp11, true
  %lnot13 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot13 to i32
  %conv14 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv14, i64 0)
  %tobool15 = icmp ne i64 %expval, 0
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.then9
  %20 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %20, ptr %__pyx_filename, align 8, !tbaa !5
  %21 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 350, ptr %__pyx_lineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8595, ptr %__pyx_clineno, align 4, !tbaa !9
  %23 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end17:                                         ; preds = %if.then9
  %24 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view18 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %24, i32 0, i32 8
  %obj19 = getelementptr inbounds %struct.Py_buffer, ptr %view18, i32 0, i32 1
  %25 = load ptr, ptr %obj19, align 8, !tbaa !213
  %cmp20 = icmp eq ptr %25, null
  %conv21 = zext i1 %cmp20 to i32
  %cmp22 = icmp ne i32 %conv21, 0
  %conv23 = zext i1 %cmp22 to i32
  store i32 %conv23, ptr %__pyx_t_1, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool24 = icmp ne i32 %26, 0
  br i1 %tobool24, label %if.then25, label %if.end28

if.then25:                                        ; preds = %if.end17
  %27 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view26 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %27, i32 0, i32 8
  %obj27 = getelementptr inbounds %struct.Py_buffer, ptr %view26, i32 0, i32 1
  store ptr @_Py_NoneStruct, ptr %obj27, align 8, !tbaa !214
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %if.end28

if.end28:                                         ; preds = %if.then25, %if.end17
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %__pyx_L4_bool_binop_done
  store i32 0, ptr %__pyx_t_1, align 4, !tbaa !9
  %28 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool30 = icmp ne i32 %28, 0
  br i1 %tobool30, label %if.then31, label %if.end65

if.then31:                                        ; preds = %if.end29
  %29 = load i32, ptr @__pyx_memoryview_thread_locks_used, align 4, !tbaa !9
  %cmp32 = icmp slt i32 %29, 8
  %conv33 = zext i1 %cmp32 to i32
  %cmp34 = icmp ne i32 %conv33, 0
  %conv35 = zext i1 %cmp34 to i32
  store i32 %conv35, ptr %__pyx_t_1, align 4, !tbaa !9
  %30 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool36 = icmp ne i32 %30, 0
  br i1 %tobool36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.then31
  %31 = load i32, ptr @__pyx_memoryview_thread_locks_used, align 4, !tbaa !9
  %idxprom = sext i32 %31 to i64
  %arrayidx = getelementptr [8 x ptr], ptr @__pyx_memoryview_thread_locks, i64 0, i64 %idxprom
  %32 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %lock = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %33, i32 0, i32 5
  store ptr %32, ptr %lock, align 8, !tbaa !215
  %34 = load i32, ptr @__pyx_memoryview_thread_locks_used, align 4, !tbaa !9
  %add = add i32 %34, 1
  store i32 %add, ptr @__pyx_memoryview_thread_locks_used, align 4, !tbaa !9
  br label %if.end38

if.end38:                                         ; preds = %if.then37, %if.then31
  %35 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %lock39 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %35, i32 0, i32 5
  %36 = load ptr, ptr %lock39, align 8, !tbaa !215
  %cmp40 = icmp eq ptr %36, null
  %conv41 = zext i1 %cmp40 to i32
  %cmp42 = icmp ne i32 %conv41, 0
  %conv43 = zext i1 %cmp42 to i32
  store i32 %conv43, ptr %__pyx_t_1, align 4, !tbaa !9
  %37 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool44 = icmp ne i32 %37, 0
  br i1 %tobool44, label %if.then45, label %if.end64

if.then45:                                        ; preds = %if.end38
  %call46 = call ptr @PyThread_allocate_lock()
  %38 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %lock47 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %38, i32 0, i32 5
  store ptr %call46, ptr %lock47, align 8, !tbaa !215
  %39 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %lock48 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %39, i32 0, i32 5
  %40 = load ptr, ptr %lock48, align 8, !tbaa !215
  %cmp49 = icmp eq ptr %40, null
  %conv50 = zext i1 %cmp49 to i32
  %cmp51 = icmp ne i32 %conv50, 0
  %conv52 = zext i1 %cmp51 to i32
  store i32 %conv52, ptr %__pyx_t_1, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool53 = icmp ne i32 %41, 0
  %lnot54 = xor i1 %tobool53, true
  %lnot56 = xor i1 %lnot54, true
  %lnot.ext57 = zext i1 %lnot56 to i32
  %conv58 = sext i32 %lnot.ext57 to i64
  %expval59 = call i64 @llvm.expect.i64(i64 %conv58, i64 0)
  %tobool60 = icmp ne i64 %expval59, 0
  br i1 %tobool60, label %if.then61, label %if.end63

if.then61:                                        ; preds = %if.then45
  %call62 = call ptr @PyErr_NoMemory()
  %42 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %42, ptr %__pyx_filename, align 8, !tbaa !5
  %43 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 363, ptr %__pyx_lineno, align 4, !tbaa !9
  %44 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 8726, ptr %__pyx_clineno, align 4, !tbaa !9
  %45 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end63:                                         ; preds = %if.then45
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end38
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end29
  %46 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %and = and i32 %46, 4
  %cmp66 = icmp ne i32 %and, 0
  %conv67 = zext i1 %cmp66 to i32
  store i32 %conv67, ptr %__pyx_t_1, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool68 = icmp ne i32 %47, 0
  br i1 %tobool68, label %if.then69, label %if.end89

if.then69:                                        ; preds = %if.end65
  %48 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view70 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %48, i32 0, i32 8
  %format = getelementptr inbounds %struct.Py_buffer, ptr %view70, i32 0, i32 6
  %49 = load ptr, ptr %format, align 8, !tbaa !124
  %arrayidx71 = getelementptr i8, ptr %49, i64 0
  %50 = load i8, ptr %arrayidx71, align 1, !tbaa !29
  %conv72 = sext i8 %50 to i32
  %cmp73 = icmp eq i32 %conv72, 79
  %conv74 = zext i1 %cmp73 to i32
  %cmp75 = icmp ne i32 %conv74, 0
  %conv76 = zext i1 %cmp75 to i32
  store i32 %conv76, ptr %__pyx_t_2, align 4, !tbaa !9
  %51 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool77 = icmp ne i32 %51, 0
  br i1 %tobool77, label %if.then78, label %if.else79

if.then78:                                        ; preds = %if.then69
  br label %if.end80

if.else79:                                        ; preds = %if.then69
  %52 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %52, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L12_bool_binop_done

if.end80:                                         ; preds = %if.then78
  %53 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view81 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %53, i32 0, i32 8
  %format82 = getelementptr inbounds %struct.Py_buffer, ptr %view81, i32 0, i32 6
  %54 = load ptr, ptr %format82, align 8, !tbaa !124
  %arrayidx83 = getelementptr i8, ptr %54, i64 1
  %55 = load i8, ptr %arrayidx83, align 1, !tbaa !29
  %conv84 = sext i8 %55 to i32
  %cmp85 = icmp eq i32 %conv84, 0
  %conv86 = zext i1 %cmp85 to i32
  %cmp87 = icmp ne i32 %conv86, 0
  %conv88 = zext i1 %cmp87 to i32
  store i32 %conv88, ptr %__pyx_t_2, align 4, !tbaa !9
  %56 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %56, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L12_bool_binop_done

__pyx_L12_bool_binop_done:                        ; preds = %if.end80, %if.else79
  %57 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %58 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %dtype_is_object = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %58, i32 0, i32 10
  store i32 %57, ptr %dtype_is_object, align 4, !tbaa !119
  br label %__pyx_L11

if.end89:                                         ; preds = %if.end65
  %59 = load i32, ptr %__pyx_v_dtype_is_object.addr, align 4, !tbaa !9
  %60 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %dtype_is_object90 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %60, i32 0, i32 10
  store i32 %59, ptr %dtype_is_object90, align 4, !tbaa !119
  br label %__pyx_L11

__pyx_L11:                                        ; preds = %if.end89, %__pyx_L12_bool_binop_done
  %61 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %acquisition_count = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %61, i32 0, i32 6
  %arrayidx91 = getelementptr [2 x i32], ptr %acquisition_count, i64 0, i64 0
  %call92 = call ptr @__pyx_align_pointer(ptr noundef %arrayidx91, i64 noundef 4)
  %62 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %acquisition_count_aligned_p = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %62, i32 0, i32 7
  store ptr %call92, ptr %acquisition_count_aligned_p, align 8, !tbaa !241
  %63 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %typeinfo = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %63, i32 0, i32 11
  store ptr null, ptr %typeinfo, align 8, !tbaa !228
  store i32 0, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then61, %if.then16
  %64 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %65 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %66 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.215, i32 noundef %64, i32 noundef %65, ptr noundef %66)
  store i32 -1, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %__pyx_L11
  %67 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  ret i32 %67
}

declare i32 @PyObject_GetBuffer(ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_align_pointer(ptr noundef %__pyx_v_memory, i64 noundef %__pyx_v_alignment) #0 {
entry:
  %__pyx_v_memory.addr = alloca ptr, align 8
  %__pyx_v_alignment.addr = alloca i64, align 8
  %__pyx_v_aligned_p = alloca i64, align 8
  %__pyx_v_offset = alloca i64, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  store ptr %__pyx_v_memory, ptr %__pyx_v_memory.addr, align 8, !tbaa !5
  store i64 %__pyx_v_alignment, ptr %__pyx_v_alignment.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_aligned_p) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_offset) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  %0 = load ptr, ptr %__pyx_v_memory.addr, align 8, !tbaa !5
  %1 = ptrtoint ptr %0 to i64
  store i64 %1, ptr %__pyx_v_aligned_p, align 8, !tbaa !27
  %2 = load i64, ptr %__pyx_v_aligned_p, align 8, !tbaa !27
  %3 = load i64, ptr %__pyx_v_alignment.addr, align 8, !tbaa !27
  %rem = urem i64 %2, %3
  store i64 %rem, ptr %__pyx_v_offset, align 8, !tbaa !27
  %4 = load i64, ptr %__pyx_v_offset, align 8, !tbaa !27
  %cmp = icmp ugt i64 %4, 0
  %conv = zext i1 %cmp to i32
  %cmp1 = icmp ne i32 %conv, 0
  %conv2 = zext i1 %cmp1 to i32
  store i32 %conv2, ptr %__pyx_t_1, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i64, ptr %__pyx_v_aligned_p, align 8, !tbaa !27
  %7 = load i64, ptr %__pyx_v_alignment.addr, align 8, !tbaa !27
  %8 = load i64, ptr %__pyx_v_offset, align 8, !tbaa !27
  %sub = sub i64 %7, %8
  %add = add i64 %6, %sub
  store i64 %add, ptr %__pyx_v_aligned_p, align 8, !tbaa !27
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i64, ptr %__pyx_v_aligned_p, align 8, !tbaa !27
  %10 = inttoptr i64 %9 to ptr
  store ptr %10, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %if.end
  %11 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_offset) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_aligned_p) #13
  ret ptr %11
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_tp_dealloc__memoryviewslice(ptr noundef %o) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %etype = alloca ptr, align 8
  %eval = alloca ptr, align 8
  %etb = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  store ptr %0, ptr %p, align 8, !tbaa !5
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %1)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 1)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %2 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call2 = call ptr @Py_TYPE(ptr noundef %2)
  %tp_finalize = getelementptr inbounds %struct._typeobject, ptr %call2, i32 0, i32 47
  %3 = load ptr, ptr %tp_finalize, align 8, !tbaa !133
  %tobool3 = icmp ne ptr %3, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool3, %land.rhs ]
  %lnot = xor i1 %4, true
  %lnot4 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot4 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %land.lhs.true, label %if.end11

land.lhs.true:                                    ; preds = %land.end
  %5 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call6 = call i32 @PyObject_GC_IsFinalized(ptr noundef %5)
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end11, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %6 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call8 = call i32 @PyObject_CallFinalizerFromDealloc(ptr noundef %6)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  br label %if.end11

if.end11:                                         ; preds = %if.end, %land.lhs.true, %land.end
  %7 = load ptr, ptr %o.addr, align 8, !tbaa !5
  call void @PyObject_GC_UnTrack(ptr noundef %7)
  call void @llvm.lifetime.start.p0(i64 8, ptr %etype) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %eval) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %etb) #13
  call void @PyErr_Fetch(ptr noundef %etype, ptr noundef %eval, ptr noundef %etb)
  %8 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call12 = call i64 @Py_REFCNT(ptr noundef %9)
  %add = add i64 %call12, 1
  call void @Py_SET_REFCNT(ptr noundef %8, i64 noundef %add)
  %10 = load ptr, ptr %o.addr, align 8, !tbaa !5
  call void @__pyx_memoryviewslice___dealloc__(ptr noundef %10)
  %11 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %12 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call13 = call i64 @Py_REFCNT(ptr noundef %12)
  %sub = sub i64 %call13, 1
  call void @Py_SET_REFCNT(ptr noundef %11, i64 noundef %sub)
  %13 = load ptr, ptr %etype, align 8, !tbaa !5
  %14 = load ptr, ptr %eval, align 8, !tbaa !5
  %15 = load ptr, ptr %etb, align 8, !tbaa !5
  call void @PyErr_Restore(ptr noundef %13, ptr noundef %14, ptr noundef %15)
  call void @llvm.lifetime.end.p0(i64 8, ptr %etb) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %eval) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %etype) #13
  br label %do.body

do.body:                                          ; preds = %if.end11
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #13
  %16 = load ptr, ptr %p, align 8, !tbaa !5
  %from_object = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %16, i32 0, i32 2
  %17 = load ptr, ptr %from_object, align 8, !tbaa !227
  store ptr %17, ptr %_py_tmp, align 8, !tbaa !5
  %18 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  %cmp = icmp ne ptr %18, null
  br i1 %cmp, label %if.then15, label %if.end17

if.then15:                                        ; preds = %do.body
  %19 = load ptr, ptr %p, align 8, !tbaa !5
  %from_object16 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %19, i32 0, i32 2
  store ptr null, ptr %from_object16, align 8, !tbaa !227
  %20 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %20)
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %if.end17
  br label %do.end

do.end:                                           ; preds = %do.cond
  %21 = load ptr, ptr %o.addr, align 8, !tbaa !5
  call void @PyObject_GC_Track(ptr noundef %21)
  %22 = load ptr, ptr %o.addr, align 8, !tbaa !5
  call void @__pyx_tp_dealloc_memoryview(ptr noundef %22)
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then10
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_tp_traverse__memoryviewslice(ptr noundef %o, ptr noundef %v, ptr noundef %a) #0 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %e = alloca i32, align 4
  %p = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %v, ptr %v.addr, align 8, !tbaa !5
  store ptr %a, ptr %a.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %e) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  store ptr %0, ptr %p, align 8, !tbaa !5
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %call = call i32 @__pyx_tp_traverse_memoryview(ptr noundef %1, ptr noundef %2, ptr noundef %3)
  store i32 %call, ptr %e, align 4, !tbaa !9
  %4 = load i32, ptr %e, align 4, !tbaa !9
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load i32, ptr %e, align 4, !tbaa !9
  store i32 %5, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %p, align 8, !tbaa !5
  %from_object = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %6, i32 0, i32 2
  %7 = load ptr, ptr %from_object, align 8, !tbaa !227
  %tobool1 = icmp ne ptr %7, null
  br i1 %tobool1, label %if.then2, label %if.end8

if.then2:                                         ; preds = %if.end
  %8 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %p, align 8, !tbaa !5
  %from_object3 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %9, i32 0, i32 2
  %10 = load ptr, ptr %from_object3, align 8, !tbaa !227
  %11 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %call4 = call i32 %8(ptr noundef %10, ptr noundef %11)
  store i32 %call4, ptr %e, align 4, !tbaa !9
  %12 = load i32, ptr %e, align 4, !tbaa !9
  %tobool5 = icmp ne i32 %12, 0
  br i1 %tobool5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.then2
  %13 = load i32, ptr %e, align 4, !tbaa !9
  store i32 %13, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end7:                                          ; preds = %if.then2
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then6, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %e) #13
  %14 = load i32, ptr %retval, align 4
  ret i32 %14
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_tp_clear__memoryviewslice(ptr noundef %o) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %p = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  store ptr %0, ptr %p, align 8, !tbaa !5
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call i32 @__pyx_tp_clear_memoryview(ptr noundef %1)
  %2 = load ptr, ptr %p, align 8, !tbaa !5
  %from_object = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %2, i32 0, i32 2
  %3 = load ptr, ptr %from_object, align 8, !tbaa !227
  store ptr %3, ptr %tmp, align 8, !tbaa !5
  %4 = load ptr, ptr %p, align 8, !tbaa !5
  %from_object1 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %4, i32 0, i32 2
  store ptr @_Py_NoneStruct, ptr %from_object1, align 8, !tbaa !227
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %5 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %5)
  %6 = load ptr, ptr %p, align 8, !tbaa !5
  %from_slice = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %6, i32 0, i32 1
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %from_slice, i32 noundef 1, i32 noundef 19723)
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_tp_new__memoryviewslice(ptr noundef %t, ptr noundef %a, ptr noundef %k) #0 {
entry:
  %retval = alloca ptr, align 8
  %t.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %k.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %o = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %t, ptr %t.addr, align 8, !tbaa !5
  store ptr %a, ptr %a.addr, align 8, !tbaa !5
  store ptr %k, ptr %k.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %o) #13
  %0 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %k.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_tp_new_memoryview(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  store ptr %call, ptr %o, align 8, !tbaa !5
  %3 = load ptr, ptr %o, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %o, align 8, !tbaa !5
  store ptr %4, ptr %p, align 8, !tbaa !5
  %5 = load ptr, ptr @__pyx_vtabptr__memoryviewslice, align 8, !tbaa !5
  %6 = load ptr, ptr %p, align 8, !tbaa !5
  %__pyx_base = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %6, i32 0, i32 0
  %__pyx_vtab = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %__pyx_base, i32 0, i32 1
  store ptr %5, ptr %__pyx_vtab, align 8, !tbaa !254
  %7 = load ptr, ptr %p, align 8, !tbaa !5
  %from_object = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %7, i32 0, i32 2
  store ptr @_Py_NoneStruct, ptr %from_object, align 8, !tbaa !227
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %8 = load ptr, ptr %p, align 8, !tbaa !5
  %from_slice = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %8, i32 0, i32 1
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %from_slice, i32 0, i32 0
  store ptr null, ptr %memview, align 8, !tbaa !255
  %9 = load ptr, ptr %o, align 8, !tbaa !5
  store ptr %9, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %o) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #13
  %10 = load ptr, ptr %retval, align 8
  ret ptr %10
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_memoryviewslice___dealloc__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @__pyx_memoryviewslice___pyx_pf_15View_dot_MemoryView_16_memoryviewslice___dealloc__(ptr noundef %0)
  ret void
}

declare void @PyObject_GC_Track(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__pyx_memoryviewslice___pyx_pf_15View_dot_MemoryView_16_memoryviewslice___dealloc__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %from_slice = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %0, i32 0, i32 1
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %from_slice, i32 noundef 1, i32 noundef 15198)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_XDEC_MEMVIEW(ptr noundef %memslice, i32 noundef %have_gil, i32 noundef %lineno) #3 {
entry:
  %memslice.addr = alloca ptr, align 8
  %have_gil.addr = alloca i32, align 4
  %lineno.addr = alloca i32, align 4
  %last_time = alloca i32, align 4
  %memview = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %_py_tmp = alloca ptr, align 8
  %_gilstate = alloca i32, align 4
  %_py_tmp38 = alloca ptr, align 8
  store ptr %memslice, ptr %memslice.addr, align 8, !tbaa !5
  store i32 %have_gil, ptr %have_gil.addr, align 4, !tbaa !9
  store i32 %lineno, ptr %lineno.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %last_time) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %memview) #13
  %0 = load ptr, ptr %memslice.addr, align 8, !tbaa !5
  %memview1 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %memview1, align 8, !tbaa !185
  store ptr %1, ptr %memview, align 8, !tbaa !5
  %2 = load ptr, ptr %memview, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  br i1 %tobool, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %entry
  %3 = load ptr, ptr %memview, align 8, !tbaa !5
  %cmp = icmp eq ptr %3, @_Py_NoneStruct
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp, %lor.rhs ]
  %lnot = xor i1 %4, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.end
  %5 = load ptr, ptr %memslice.addr, align 8, !tbaa !5
  %memview4 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %5, i32 0, i32 0
  store ptr null, ptr %memview4, align 8, !tbaa !185
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %lor.end
  %6 = load ptr, ptr %memview, align 8, !tbaa !5
  %acquisition_count_aligned_p = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %6, i32 0, i32 7
  %7 = load ptr, ptr %acquisition_count_aligned_p, align 8, !tbaa !241
  %8 = load volatile i32, ptr %7, align 4, !tbaa !9
  %cmp5 = icmp sle i32 %8, 0
  %lnot7 = xor i1 %cmp5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end
  %9 = load ptr, ptr %memview, align 8, !tbaa !5
  %acquisition_count_aligned_p15 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %9, i32 0, i32 7
  %10 = load ptr, ptr %acquisition_count_aligned_p15, align 8, !tbaa !241
  %11 = load volatile i32, ptr %10, align 4, !tbaa !9
  %12 = load i32, ptr %lineno.addr, align 4, !tbaa !9
  call void (ptr, ...) @__pyx_fatalerror(ptr noundef @.str.178, i32 noundef %11, i32 noundef %12)
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end
  %13 = load ptr, ptr %memview, align 8, !tbaa !5
  %acquisition_count_aligned_p17 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %13, i32 0, i32 7
  %14 = load ptr, ptr %acquisition_count_aligned_p17, align 8, !tbaa !241
  %15 = atomicrmw sub ptr %14, i32 1 seq_cst, align 4
  %cmp18 = icmp eq i32 %15, 1
  %conv19 = zext i1 %cmp18 to i32
  store i32 %conv19, ptr %last_time, align 4, !tbaa !9
  %16 = load ptr, ptr %memslice.addr, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %16, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  %17 = load i32, ptr %last_time, align 4, !tbaa !9
  %tobool20 = icmp ne i32 %17, 0
  %lnot21 = xor i1 %tobool20, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.else48

if.then28:                                        ; preds = %if.end16
  %18 = load i32, ptr %have_gil.addr, align 4, !tbaa !9
  %tobool29 = icmp ne i32 %18, 0
  br i1 %tobool29, label %if.then30, label %if.else

if.then30:                                        ; preds = %if.then28
  br label %do.body

do.body:                                          ; preds = %if.then30
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #13
  %19 = load ptr, ptr %memslice.addr, align 8, !tbaa !5
  %memview31 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %19, i32 0, i32 0
  %20 = load ptr, ptr %memview31, align 8, !tbaa !185
  store ptr %20, ptr %_py_tmp, align 8, !tbaa !5
  %21 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  %cmp32 = icmp ne ptr %21, null
  br i1 %cmp32, label %if.then34, label %if.end36

if.then34:                                        ; preds = %do.body
  %22 = load ptr, ptr %memslice.addr, align 8, !tbaa !5
  %memview35 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %22, i32 0, i32 0
  store ptr null, ptr %memview35, align 8, !tbaa !185
  %23 = load ptr, ptr %_py_tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %23)
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %if.end36
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end47

if.else:                                          ; preds = %if.then28
  call void @llvm.lifetime.start.p0(i64 4, ptr %_gilstate) #13
  %call = call i32 @PyGILState_Ensure()
  store i32 %call, ptr %_gilstate, align 4, !tbaa !29
  br label %do.body37

do.body37:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp38) #13
  %24 = load ptr, ptr %memslice.addr, align 8, !tbaa !5
  %memview39 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %24, i32 0, i32 0
  %25 = load ptr, ptr %memview39, align 8, !tbaa !185
  store ptr %25, ptr %_py_tmp38, align 8, !tbaa !5
  %26 = load ptr, ptr %_py_tmp38, align 8, !tbaa !5
  %cmp40 = icmp ne ptr %26, null
  br i1 %cmp40, label %if.then42, label %if.end44

if.then42:                                        ; preds = %do.body37
  %27 = load ptr, ptr %memslice.addr, align 8, !tbaa !5
  %memview43 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %27, i32 0, i32 0
  store ptr null, ptr %memview43, align 8, !tbaa !185
  %28 = load ptr, ptr %_py_tmp38, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %28)
  br label %if.end44

if.end44:                                         ; preds = %if.then42, %do.body37
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp38) #13
  br label %do.cond45

do.cond45:                                        ; preds = %if.end44
  br label %do.end46

do.end46:                                         ; preds = %do.cond45
  %29 = load i32, ptr %_gilstate, align 4, !tbaa !29
  call void @PyGILState_Release(i32 noundef %29)
  call void @llvm.lifetime.end.p0(i64 4, ptr %_gilstate) #13
  br label %if.end47

if.end47:                                         ; preds = %do.end46, %do.end
  br label %if.end50

if.else48:                                        ; preds = %if.end16
  %30 = load ptr, ptr %memslice.addr, align 8, !tbaa !5
  %memview49 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %30, i32 0, i32 0
  store ptr null, ptr %memview49, align 8, !tbaa !185
  br label %if.end50

if.end50:                                         ; preds = %if.else48, %if.end47
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end50, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %memview) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %last_time) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw___pyx_memoryviewslice_1__reduce_cython__(ptr noundef %__pyx_v_self, ptr noundef %unused) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %unused.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %unused, ptr %unused.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf___pyx_memoryviewslice___reduce_cython__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw___pyx_memoryviewslice_3__setstate_cython__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v___pyx_state) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf___pyx_memoryviewslice_2__setstate_cython__(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %2
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf___pyx_memoryviewslice___reduce_cython__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_tuple__21, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_Call(ptr noundef %0, ptr noundef %1, ptr noundef null)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %3, ptr %__pyx_filename, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 2, ptr %__pyx_lineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15468, ptr %__pyx_clineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %7, ptr noundef null, ptr noundef null, ptr noundef null)
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %8)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %9 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %9, ptr %__pyx_filename, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 2, ptr %__pyx_lineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15472, ptr %__pyx_clineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

__pyx_L1_error:                                   ; preds = %if.end, %if.then
  %13 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %13)
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.220, i32 noundef %14, i32 noundef %15, ptr noundef %16)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %17
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf___pyx_memoryviewslice_2__setstate_cython__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v___pyx_state) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %1 = load ptr, ptr @__pyx_tuple__22, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_Call(ptr noundef %0, ptr noundef %1, ptr noundef null)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %3, ptr %__pyx_filename, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 4, ptr %__pyx_lineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15524, ptr %__pyx_clineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %7, ptr noundef null, ptr noundef null, ptr noundef null)
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %8)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %9 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %9, ptr %__pyx_filename, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 4, ptr %__pyx_lineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 15528, ptr %__pyx_clineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

__pyx_L1_error:                                   ; preds = %if.end, %if.then
  %13 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %13)
  %14 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.221, i32 noundef %14, i32 noundef %15, ptr noundef %16)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %17
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop___pyx_memoryviewslice_base(ptr noundef %o, ptr noundef %x) #0 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pw_15View_dot_MemoryView_16_memoryviewslice_4base_1__get__(ptr noundef %0)
  ret ptr %call
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_15View_dot_MemoryView_16_memoryviewslice_4base_1__get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %call = call ptr @__pyx_pf_15View_dot_MemoryView_16_memoryviewslice_4base___get__(ptr noundef %0)
  store ptr %call, ptr %__pyx_r, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %1
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_15View_dot_MemoryView_16_memoryviewslice_4base___get__(ptr noundef %__pyx_v_self) #0 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %0)
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %from_object = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %1, i32 0, i32 2
  %2 = load ptr, ptr %from_object, align 8, !tbaa !227
  call void @Py_INCREF(ptr noundef %2)
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %from_object1 = getelementptr inbounds %struct.__pyx_memoryviewslice_obj, ptr %3, i32 0, i32 2
  %4 = load ptr, ptr %from_object1, align 8, !tbaa !227
  store ptr %4, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %entry
  %5 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  ret ptr %5
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CyFunction_Init(ptr noundef %op, ptr noundef %ml, i32 noundef %flags, ptr noundef %qualname, ptr noundef %closure, ptr noundef %module, ptr noundef %globals, ptr noundef %code) #0 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %ml.addr = alloca ptr, align 8
  %flags.addr = alloca i32, align 4
  %qualname.addr = alloca ptr, align 8
  %closure.addr = alloca ptr, align 8
  %module.addr = alloca ptr, align 8
  %globals.addr = alloca ptr, align 8
  %code.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  store ptr %ml, ptr %ml.addr, align 8, !tbaa !5
  store i32 %flags, ptr %flags.addr, align 4, !tbaa !9
  store ptr %qualname, ptr %qualname.addr, align 8, !tbaa !5
  store ptr %closure, ptr %closure.addr, align 8, !tbaa !5
  store ptr %module, ptr %module.addr, align 8, !tbaa !5
  store ptr %globals, ptr %globals.addr, align 8, !tbaa !5
  store ptr %code, ptr %code.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, ptr %flags.addr, align 4, !tbaa !9
  %2 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %flags2 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %2, i32 0, i32 12
  store i32 %1, ptr %flags2, align 8, !tbaa !61
  %3 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %3, i32 0, i32 0
  %m_weakreflist = getelementptr inbounds %struct.PyCFunctionObject, ptr %func, i32 0, i32 4
  store ptr null, ptr %m_weakreflist, align 8, !tbaa !76
  %4 = load ptr, ptr %ml.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func3 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %5, i32 0, i32 0
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %func3, i32 0, i32 1
  store ptr %4, ptr %m_ml, align 8, !tbaa !84
  %6 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %7 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func4 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %7, i32 0, i32 0
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %func4, i32 0, i32 2
  store ptr %6, ptr %m_self, align 8, !tbaa !256
  %8 = load ptr, ptr %closure.addr, align 8, !tbaa !5
  call void @Py_XINCREF(ptr noundef %8)
  %9 = load ptr, ptr %closure.addr, align 8, !tbaa !5
  %10 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_closure = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %10, i32 0, i32 7
  store ptr %9, ptr %func_closure, align 8, !tbaa !62
  %11 = load ptr, ptr %module.addr, align 8, !tbaa !5
  call void @Py_XINCREF(ptr noundef %11)
  %12 = load ptr, ptr %module.addr, align 8, !tbaa !5
  %13 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func5 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %13, i32 0, i32 0
  %m_module = getelementptr inbounds %struct.PyCFunctionObject, ptr %func5, i32 0, i32 3
  store ptr %12, ptr %m_module, align 8, !tbaa !63
  %14 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_dict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %14, i32 0, i32 1
  store ptr null, ptr %func_dict, align 8, !tbaa !64
  %15 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_name = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %15, i32 0, i32 2
  store ptr null, ptr %func_name, align 8, !tbaa !65
  %16 = load ptr, ptr %qualname.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %16)
  %17 = load ptr, ptr %qualname.addr, align 8, !tbaa !5
  %18 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_qualname = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %18, i32 0, i32 3
  store ptr %17, ptr %func_qualname, align 8, !tbaa !60
  %19 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_doc = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %19, i32 0, i32 4
  store ptr null, ptr %func_doc, align 8, !tbaa !66
  %20 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_classobj = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %20, i32 0, i32 8
  store ptr null, ptr %func_classobj, align 8, !tbaa !69
  %21 = load ptr, ptr %globals.addr, align 8, !tbaa !5
  %22 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_globals = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %22, i32 0, i32 5
  store ptr %21, ptr %func_globals, align 8, !tbaa !67
  %23 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_globals6 = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %23, i32 0, i32 5
  %24 = load ptr, ptr %func_globals6, align 8, !tbaa !67
  call void @Py_INCREF(ptr noundef %24)
  %25 = load ptr, ptr %code.addr, align 8, !tbaa !5
  call void @Py_XINCREF(ptr noundef %25)
  %26 = load ptr, ptr %code.addr, align 8, !tbaa !5
  %27 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_code = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %27, i32 0, i32 6
  store ptr %26, ptr %func_code, align 8, !tbaa !68
  %28 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_pyobjects = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %28, i32 0, i32 10
  store i32 0, ptr %defaults_pyobjects, align 8, !tbaa !72
  %29 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_size = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %29, i32 0, i32 11
  store i64 0, ptr %defaults_size, align 8, !tbaa !97
  %30 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %30, i32 0, i32 9
  store ptr null, ptr %defaults, align 8, !tbaa !71
  %31 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_tuple = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %31, i32 0, i32 13
  store ptr null, ptr %defaults_tuple, align 8, !tbaa !52
  %32 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_kwdict = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %32, i32 0, i32 14
  store ptr null, ptr %defaults_kwdict, align 8, !tbaa !70
  %33 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %defaults_getter = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %33, i32 0, i32 15
  store ptr null, ptr %defaults_getter, align 8, !tbaa !86
  %34 = load ptr, ptr %op.addr, align 8, !tbaa !5
  %func_annotations = getelementptr inbounds %struct.__pyx_CyFunctionObject, ptr %34, i32 0, i32 16
  store ptr null, ptr %func_annotations, align 8, !tbaa !74
  %35 = load ptr, ptr %op.addr, align 8, !tbaa !5
  store ptr %35, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %36 = load ptr, ptr %retval, align 8
  ret ptr %36
}

declare ptr @_PyObject_GC_New(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_fuse_0__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_5_minibatch_update_dense(ptr noundef %__pyx_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_X = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_sample_weight = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_centers_old = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_centers_new = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_weight_sums = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_labels = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_n_threads = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %values = alloca [7 x ptr], align 16
  %kw_args = alloca i64, align 8
  %pos_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca %struct.__Pyx_memviewslice, align 8
  %tmp210 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp225 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp240 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp255 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp270 = alloca %struct.__Pyx_memviewslice, align 8
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !5
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_X) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_X, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_sample_weight) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_sample_weight, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_centers_old) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_centers_old, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_centers_new) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_centers_new, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_weight_sums) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_weight_sums, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_labels) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_labels, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_threads) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 56, ptr %values) #13
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 56, i1 false)
  %0 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else168

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos_args) #13
  %1 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1)
  store i64 %call, ptr %pos_args, align 8, !tbaa !27
  %2 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %2, label %sw.default [
    i64 7, label %sw.bb
    i64 6, label %sw.bb4
    i64 5, label %sw.bb8
    i64 4, label %sw.bb12
    i64 3, label %sw.bb16
    i64 2, label %sw.bb20
    i64 1, label %sw.bb24
    i64 0, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.then
  %3 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 6
  %4 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %arrayidx3 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  store ptr %4, ptr %arrayidx3, align 16, !tbaa !5
  br label %sw.bb4

sw.bb4:                                           ; preds = %if.then, %sw.bb
  %5 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %5, i32 0, i32 1
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 5
  %6 = load ptr, ptr %arrayidx6, align 8, !tbaa !5
  %arrayidx7 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  store ptr %6, ptr %arrayidx7, align 8, !tbaa !5
  br label %sw.bb8

sw.bb8:                                           ; preds = %if.then, %sw.bb4
  %7 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item9 = getelementptr inbounds %struct.PyTupleObject, ptr %7, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x ptr], ptr %ob_item9, i64 0, i64 4
  %8 = load ptr, ptr %arrayidx10, align 8, !tbaa !5
  %arrayidx11 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  store ptr %8, ptr %arrayidx11, align 16, !tbaa !5
  br label %sw.bb12

sw.bb12:                                          ; preds = %if.then, %sw.bb8
  %9 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item13 = getelementptr inbounds %struct.PyTupleObject, ptr %9, i32 0, i32 1
  %arrayidx14 = getelementptr [1 x ptr], ptr %ob_item13, i64 0, i64 3
  %10 = load ptr, ptr %arrayidx14, align 8, !tbaa !5
  %arrayidx15 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  store ptr %10, ptr %arrayidx15, align 8, !tbaa !5
  br label %sw.bb16

sw.bb16:                                          ; preds = %if.then, %sw.bb12
  %11 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item17 = getelementptr inbounds %struct.PyTupleObject, ptr %11, i32 0, i32 1
  %arrayidx18 = getelementptr [1 x ptr], ptr %ob_item17, i64 0, i64 2
  %12 = load ptr, ptr %arrayidx18, align 8, !tbaa !5
  %arrayidx19 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  store ptr %12, ptr %arrayidx19, align 16, !tbaa !5
  br label %sw.bb20

sw.bb20:                                          ; preds = %if.then, %sw.bb16
  %13 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item21 = getelementptr inbounds %struct.PyTupleObject, ptr %13, i32 0, i32 1
  %arrayidx22 = getelementptr [1 x ptr], ptr %ob_item21, i64 0, i64 1
  %14 = load ptr, ptr %arrayidx22, align 8, !tbaa !5
  %arrayidx23 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  store ptr %14, ptr %arrayidx23, align 8, !tbaa !5
  br label %sw.bb24

sw.bb24:                                          ; preds = %if.then, %sw.bb20
  %15 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item25 = getelementptr inbounds %struct.PyTupleObject, ptr %15, i32 0, i32 1
  %arrayidx26 = getelementptr [1 x ptr], ptr %ob_item25, i64 0, i64 0
  %16 = load ptr, ptr %arrayidx26, align 8, !tbaa !5
  %arrayidx27 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  store ptr %16, ptr %arrayidx27, align 16, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb24, %if.then
  %17 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %call28 = call i64 @PyDict_Size(ptr noundef %17)
  store i64 %call28, ptr %kw_args, align 8, !tbaa !27
  %18 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %18, label %sw.epilog143 [
    i64 0, label %sw.bb29
    i64 1, label %sw.bb41
    i64 2, label %sw.bb58
    i64 3, label %sw.bb75
    i64 4, label %sw.bb92
    i64 5, label %sw.bb109
    i64 6, label %sw.bb126
  ]

sw.bb29:                                          ; preds = %sw.epilog
  %19 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %20 = load ptr, ptr @__pyx_n_s_X, align 8, !tbaa !5
  %21 = load ptr, ptr @__pyx_n_s_X, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %21, i32 0, i32 2
  %22 = load i64, ptr %hash, align 8, !tbaa !154
  %call30 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %19, ptr noundef %20, i64 noundef %22)
  %arrayidx31 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  store ptr %call30, ptr %arrayidx31, align 16, !tbaa !5
  %cmp = icmp ne ptr %call30, null
  %lnot33 = xor i1 %cmp, true
  %lnot35 = xor i1 %lnot33, true
  %lnot.ext36 = zext i1 %lnot35 to i32
  %conv37 = sext i32 %lnot.ext36 to i64
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 1)
  %tobool39 = icmp ne i64 %expval38, 0
  br i1 %tobool39, label %if.then40, label %if.else

if.then40:                                        ; preds = %sw.bb29
  %23 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec = add i64 %23, -1
  store i64 %dec, ptr %kw_args, align 8, !tbaa !27
  br label %if.end

if.else:                                          ; preds = %sw.bb29
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then40
  br label %sw.bb41

sw.bb41:                                          ; preds = %sw.epilog, %if.end
  %24 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %25 = load ptr, ptr @__pyx_n_s_sample_weight, align 8, !tbaa !5
  %26 = load ptr, ptr @__pyx_n_s_sample_weight, align 8, !tbaa !5
  %hash42 = getelementptr inbounds %struct.PyASCIIObject, ptr %26, i32 0, i32 2
  %27 = load i64, ptr %hash42, align 8, !tbaa !154
  %call43 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %24, ptr noundef %25, i64 noundef %27)
  %arrayidx44 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  store ptr %call43, ptr %arrayidx44, align 8, !tbaa !5
  %cmp45 = icmp ne ptr %call43, null
  %lnot47 = xor i1 %cmp45, true
  %lnot49 = xor i1 %lnot47, true
  %lnot.ext50 = zext i1 %lnot49 to i32
  %conv51 = sext i32 %lnot.ext50 to i64
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 1)
  %tobool53 = icmp ne i64 %expval52, 0
  br i1 %tobool53, label %if.then54, label %if.else56

if.then54:                                        ; preds = %sw.bb41
  %28 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec55 = add i64 %28, -1
  store i64 %dec55, ptr %kw_args, align 8, !tbaa !27
  br label %if.end57

if.else56:                                        ; preds = %sw.bb41
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 1)
  %29 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %29, ptr %__pyx_filename, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3059, ptr %__pyx_clineno, align 4, !tbaa !9
  %32 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end57:                                         ; preds = %if.then54
  br label %sw.bb58

sw.bb58:                                          ; preds = %sw.epilog, %if.end57
  %33 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %34 = load ptr, ptr @__pyx_n_s_centers_old, align 8, !tbaa !5
  %35 = load ptr, ptr @__pyx_n_s_centers_old, align 8, !tbaa !5
  %hash59 = getelementptr inbounds %struct.PyASCIIObject, ptr %35, i32 0, i32 2
  %36 = load i64, ptr %hash59, align 8, !tbaa !154
  %call60 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %33, ptr noundef %34, i64 noundef %36)
  %arrayidx61 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  store ptr %call60, ptr %arrayidx61, align 16, !tbaa !5
  %cmp62 = icmp ne ptr %call60, null
  %lnot64 = xor i1 %cmp62, true
  %lnot66 = xor i1 %lnot64, true
  %lnot.ext67 = zext i1 %lnot66 to i32
  %conv68 = sext i32 %lnot.ext67 to i64
  %expval69 = call i64 @llvm.expect.i64(i64 %conv68, i64 1)
  %tobool70 = icmp ne i64 %expval69, 0
  br i1 %tobool70, label %if.then71, label %if.else73

if.then71:                                        ; preds = %sw.bb58
  %37 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec72 = add i64 %37, -1
  store i64 %dec72, ptr %kw_args, align 8, !tbaa !27
  br label %if.end74

if.else73:                                        ; preds = %sw.bb58
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 2)
  %38 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %38, ptr %__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3065, ptr %__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end74:                                         ; preds = %if.then71
  br label %sw.bb75

sw.bb75:                                          ; preds = %sw.epilog, %if.end74
  %42 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %43 = load ptr, ptr @__pyx_n_s_centers_new, align 8, !tbaa !5
  %44 = load ptr, ptr @__pyx_n_s_centers_new, align 8, !tbaa !5
  %hash76 = getelementptr inbounds %struct.PyASCIIObject, ptr %44, i32 0, i32 2
  %45 = load i64, ptr %hash76, align 8, !tbaa !154
  %call77 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %42, ptr noundef %43, i64 noundef %45)
  %arrayidx78 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  store ptr %call77, ptr %arrayidx78, align 8, !tbaa !5
  %cmp79 = icmp ne ptr %call77, null
  %lnot81 = xor i1 %cmp79, true
  %lnot83 = xor i1 %lnot81, true
  %lnot.ext84 = zext i1 %lnot83 to i32
  %conv85 = sext i32 %lnot.ext84 to i64
  %expval86 = call i64 @llvm.expect.i64(i64 %conv85, i64 1)
  %tobool87 = icmp ne i64 %expval86, 0
  br i1 %tobool87, label %if.then88, label %if.else90

if.then88:                                        ; preds = %sw.bb75
  %46 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec89 = add i64 %46, -1
  store i64 %dec89, ptr %kw_args, align 8, !tbaa !27
  br label %if.end91

if.else90:                                        ; preds = %sw.bb75
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 3)
  %47 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %47, ptr %__pyx_filename, align 8, !tbaa !5
  %48 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3071, ptr %__pyx_clineno, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end91:                                         ; preds = %if.then88
  br label %sw.bb92

sw.bb92:                                          ; preds = %sw.epilog, %if.end91
  %51 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %52 = load ptr, ptr @__pyx_n_s_weight_sums, align 8, !tbaa !5
  %53 = load ptr, ptr @__pyx_n_s_weight_sums, align 8, !tbaa !5
  %hash93 = getelementptr inbounds %struct.PyASCIIObject, ptr %53, i32 0, i32 2
  %54 = load i64, ptr %hash93, align 8, !tbaa !154
  %call94 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %51, ptr noundef %52, i64 noundef %54)
  %arrayidx95 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  store ptr %call94, ptr %arrayidx95, align 16, !tbaa !5
  %cmp96 = icmp ne ptr %call94, null
  %lnot98 = xor i1 %cmp96, true
  %lnot100 = xor i1 %lnot98, true
  %lnot.ext101 = zext i1 %lnot100 to i32
  %conv102 = sext i32 %lnot.ext101 to i64
  %expval103 = call i64 @llvm.expect.i64(i64 %conv102, i64 1)
  %tobool104 = icmp ne i64 %expval103, 0
  br i1 %tobool104, label %if.then105, label %if.else107

if.then105:                                       ; preds = %sw.bb92
  %55 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec106 = add i64 %55, -1
  store i64 %dec106, ptr %kw_args, align 8, !tbaa !27
  br label %if.end108

if.else107:                                       ; preds = %sw.bb92
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 4)
  %56 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %56, ptr %__pyx_filename, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %58 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3077, ptr %__pyx_clineno, align 4, !tbaa !9
  %59 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end108:                                        ; preds = %if.then105
  br label %sw.bb109

sw.bb109:                                         ; preds = %sw.epilog, %if.end108
  %60 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %61 = load ptr, ptr @__pyx_n_s_labels, align 8, !tbaa !5
  %62 = load ptr, ptr @__pyx_n_s_labels, align 8, !tbaa !5
  %hash110 = getelementptr inbounds %struct.PyASCIIObject, ptr %62, i32 0, i32 2
  %63 = load i64, ptr %hash110, align 8, !tbaa !154
  %call111 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %60, ptr noundef %61, i64 noundef %63)
  %arrayidx112 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  store ptr %call111, ptr %arrayidx112, align 8, !tbaa !5
  %cmp113 = icmp ne ptr %call111, null
  %lnot115 = xor i1 %cmp113, true
  %lnot117 = xor i1 %lnot115, true
  %lnot.ext118 = zext i1 %lnot117 to i32
  %conv119 = sext i32 %lnot.ext118 to i64
  %expval120 = call i64 @llvm.expect.i64(i64 %conv119, i64 1)
  %tobool121 = icmp ne i64 %expval120, 0
  br i1 %tobool121, label %if.then122, label %if.else124

if.then122:                                       ; preds = %sw.bb109
  %64 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec123 = add i64 %64, -1
  store i64 %dec123, ptr %kw_args, align 8, !tbaa !27
  br label %if.end125

if.else124:                                       ; preds = %sw.bb109
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 5)
  %65 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %65, ptr %__pyx_filename, align 8, !tbaa !5
  %66 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %67 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3083, ptr %__pyx_clineno, align 4, !tbaa !9
  %68 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end125:                                        ; preds = %if.then122
  br label %sw.bb126

sw.bb126:                                         ; preds = %sw.epilog, %if.end125
  %69 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %70 = load ptr, ptr @__pyx_n_s_n_threads, align 8, !tbaa !5
  %71 = load ptr, ptr @__pyx_n_s_n_threads, align 8, !tbaa !5
  %hash127 = getelementptr inbounds %struct.PyASCIIObject, ptr %71, i32 0, i32 2
  %72 = load i64, ptr %hash127, align 8, !tbaa !154
  %call128 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %69, ptr noundef %70, i64 noundef %72)
  %arrayidx129 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  store ptr %call128, ptr %arrayidx129, align 16, !tbaa !5
  %cmp130 = icmp ne ptr %call128, null
  %lnot132 = xor i1 %cmp130, true
  %lnot134 = xor i1 %lnot132, true
  %lnot.ext135 = zext i1 %lnot134 to i32
  %conv136 = sext i32 %lnot.ext135 to i64
  %expval137 = call i64 @llvm.expect.i64(i64 %conv136, i64 1)
  %tobool138 = icmp ne i64 %expval137, 0
  br i1 %tobool138, label %if.then139, label %if.else141

if.then139:                                       ; preds = %sw.bb126
  %73 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec140 = add i64 %73, -1
  store i64 %dec140, ptr %kw_args, align 8, !tbaa !27
  br label %if.end142

if.else141:                                       ; preds = %sw.bb126
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 6)
  %74 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %74, ptr %__pyx_filename, align 8, !tbaa !5
  %75 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %76 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3089, ptr %__pyx_clineno, align 4, !tbaa !9
  %77 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end142:                                        ; preds = %if.then139
  br label %sw.epilog143

sw.epilog143:                                     ; preds = %if.end142, %sw.epilog
  %78 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp144 = icmp sgt i64 %78, 0
  %lnot146 = xor i1 %cmp144, true
  %lnot148 = xor i1 %lnot146, true
  %lnot.ext149 = zext i1 %lnot148 to i32
  %conv150 = sext i32 %lnot.ext149 to i64
  %expval151 = call i64 @llvm.expect.i64(i64 %conv150, i64 0)
  %tobool152 = icmp ne i64 %expval151, 0
  br i1 %tobool152, label %if.then153, label %if.end166

if.then153:                                       ; preds = %sw.epilog143
  %79 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %arraydecay = getelementptr inbounds [7 x ptr], ptr %values, i64 0, i64 0
  %80 = load i64, ptr %pos_args, align 8, !tbaa !27
  %call154 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %79, ptr noundef @__pyx_fuse_0__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_5_minibatch_update_dense.__pyx_pyargnames, ptr noundef null, ptr noundef %arraydecay, i64 noundef %80, ptr noundef @.str.223)
  %cmp155 = icmp slt i32 %call154, 0
  %lnot157 = xor i1 %cmp155, true
  %lnot159 = xor i1 %lnot157, true
  %lnot.ext160 = zext i1 %lnot159 to i32
  %conv161 = sext i32 %lnot.ext160 to i64
  %expval162 = call i64 @llvm.expect.i64(i64 %conv161, i64 0)
  %tobool163 = icmp ne i64 %expval162, 0
  br i1 %tobool163, label %if.then164, label %if.end165

if.then164:                                       ; preds = %if.then153
  %81 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %81, ptr %__pyx_filename, align 8, !tbaa !5
  %82 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %83 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3093, ptr %__pyx_clineno, align 4, !tbaa !9
  %84 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end165:                                        ; preds = %if.then153
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %sw.epilog143
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then164, %if.else141, %if.else124, %if.else107, %if.else90, %if.else73, %if.else56, %if.else, %sw.default, %if.end166
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup300 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end196

if.else168:                                       ; preds = %entry
  %85 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call169 = call i64 @PyTuple_GET_SIZE(ptr noundef %85)
  %cmp170 = icmp ne i64 %call169, 7
  br i1 %cmp170, label %if.then172, label %if.else173

if.then172:                                       ; preds = %if.else168
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.else173:                                       ; preds = %if.else168
  %86 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item174 = getelementptr inbounds %struct.PyTupleObject, ptr %86, i32 0, i32 1
  %arrayidx175 = getelementptr [1 x ptr], ptr %ob_item174, i64 0, i64 0
  %87 = load ptr, ptr %arrayidx175, align 8, !tbaa !5
  %arrayidx176 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  store ptr %87, ptr %arrayidx176, align 16, !tbaa !5
  %88 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item177 = getelementptr inbounds %struct.PyTupleObject, ptr %88, i32 0, i32 1
  %arrayidx178 = getelementptr [1 x ptr], ptr %ob_item177, i64 0, i64 1
  %89 = load ptr, ptr %arrayidx178, align 8, !tbaa !5
  %arrayidx179 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  store ptr %89, ptr %arrayidx179, align 8, !tbaa !5
  %90 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item180 = getelementptr inbounds %struct.PyTupleObject, ptr %90, i32 0, i32 1
  %arrayidx181 = getelementptr [1 x ptr], ptr %ob_item180, i64 0, i64 2
  %91 = load ptr, ptr %arrayidx181, align 8, !tbaa !5
  %arrayidx182 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  store ptr %91, ptr %arrayidx182, align 16, !tbaa !5
  %92 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item183 = getelementptr inbounds %struct.PyTupleObject, ptr %92, i32 0, i32 1
  %arrayidx184 = getelementptr [1 x ptr], ptr %ob_item183, i64 0, i64 3
  %93 = load ptr, ptr %arrayidx184, align 8, !tbaa !5
  %arrayidx185 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  store ptr %93, ptr %arrayidx185, align 8, !tbaa !5
  %94 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item186 = getelementptr inbounds %struct.PyTupleObject, ptr %94, i32 0, i32 1
  %arrayidx187 = getelementptr [1 x ptr], ptr %ob_item186, i64 0, i64 4
  %95 = load ptr, ptr %arrayidx187, align 8, !tbaa !5
  %arrayidx188 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  store ptr %95, ptr %arrayidx188, align 16, !tbaa !5
  %96 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item189 = getelementptr inbounds %struct.PyTupleObject, ptr %96, i32 0, i32 1
  %arrayidx190 = getelementptr [1 x ptr], ptr %ob_item189, i64 0, i64 5
  %97 = load ptr, ptr %arrayidx190, align 8, !tbaa !5
  %arrayidx191 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  store ptr %97, ptr %arrayidx191, align 8, !tbaa !5
  %98 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item192 = getelementptr inbounds %struct.PyTupleObject, ptr %98, i32 0, i32 1
  %arrayidx193 = getelementptr [1 x ptr], ptr %ob_item192, i64 0, i64 6
  %99 = load ptr, ptr %arrayidx193, align 8, !tbaa !5
  %arrayidx194 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  store ptr %99, ptr %arrayidx194, align 16, !tbaa !5
  br label %if.end195

if.end195:                                        ; preds = %if.else173
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %cleanup.cont
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp) #13
  %arrayidx197 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  %100 = load ptr, ptr %arrayidx197, align 16, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_float__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp, ptr noundef %100, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_X, ptr align 8 %tmp, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp) #13
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X, i32 0, i32 0
  %101 = load ptr, ptr %memview, align 8, !tbaa !185
  %tobool198 = icmp ne ptr %101, null
  %lnot199 = xor i1 %tobool198, true
  %lnot201 = xor i1 %lnot199, true
  %lnot203 = xor i1 %lnot201, true
  %lnot.ext204 = zext i1 %lnot203 to i32
  %conv205 = sext i32 %lnot.ext204 to i64
  %expval206 = call i64 @llvm.expect.i64(i64 %conv205, i64 0)
  %tobool207 = icmp ne i64 %expval206, 0
  br i1 %tobool207, label %if.then208, label %if.end209

if.then208:                                       ; preds = %if.end196
  %102 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %102, ptr %__pyx_filename, align 8, !tbaa !5
  %103 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 7, ptr %__pyx_lineno, align 4, !tbaa !9
  %104 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3106, ptr %__pyx_clineno, align 4, !tbaa !9
  %105 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end209:                                        ; preds = %if.end196
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp210) #13
  %arrayidx211 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  %106 = load ptr, ptr %arrayidx211, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_float__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp210, ptr noundef %106, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_sample_weight, ptr align 8 %tmp210, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp210) #13
  %memview212 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 0
  %107 = load ptr, ptr %memview212, align 8, !tbaa !185
  %tobool213 = icmp ne ptr %107, null
  %lnot214 = xor i1 %tobool213, true
  %lnot216 = xor i1 %lnot214, true
  %lnot218 = xor i1 %lnot216, true
  %lnot.ext219 = zext i1 %lnot218 to i32
  %conv220 = sext i32 %lnot.ext219 to i64
  %expval221 = call i64 @llvm.expect.i64(i64 %conv220, i64 0)
  %tobool222 = icmp ne i64 %expval221, 0
  br i1 %tobool222, label %if.then223, label %if.end224

if.then223:                                       ; preds = %if.end209
  %108 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %108, ptr %__pyx_filename, align 8, !tbaa !5
  %109 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 8, ptr %__pyx_lineno, align 4, !tbaa !9
  %110 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3107, ptr %__pyx_clineno, align 4, !tbaa !9
  %111 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end224:                                        ; preds = %if.end209
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp225) #13
  %arrayidx226 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  %112 = load ptr, ptr %arrayidx226, align 16, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_float__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp225, ptr noundef %112, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_centers_old, ptr align 8 %tmp225, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp225) #13
  %memview227 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 0
  %113 = load ptr, ptr %memview227, align 8, !tbaa !185
  %tobool228 = icmp ne ptr %113, null
  %lnot229 = xor i1 %tobool228, true
  %lnot231 = xor i1 %lnot229, true
  %lnot233 = xor i1 %lnot231, true
  %lnot.ext234 = zext i1 %lnot233 to i32
  %conv235 = sext i32 %lnot.ext234 to i64
  %expval236 = call i64 @llvm.expect.i64(i64 %conv235, i64 0)
  %tobool237 = icmp ne i64 %expval236, 0
  br i1 %tobool237, label %if.then238, label %if.end239

if.then238:                                       ; preds = %if.end224
  %114 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %114, ptr %__pyx_filename, align 8, !tbaa !5
  %115 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 9, ptr %__pyx_lineno, align 4, !tbaa !9
  %116 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3108, ptr %__pyx_clineno, align 4, !tbaa !9
  %117 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end239:                                        ; preds = %if.end224
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp240) #13
  %arrayidx241 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  %118 = load ptr, ptr %arrayidx241, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_float(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp240, ptr noundef %118, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_centers_new, ptr align 8 %tmp240, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp240) #13
  %memview242 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 0
  %119 = load ptr, ptr %memview242, align 8, !tbaa !185
  %tobool243 = icmp ne ptr %119, null
  %lnot244 = xor i1 %tobool243, true
  %lnot246 = xor i1 %lnot244, true
  %lnot248 = xor i1 %lnot246, true
  %lnot.ext249 = zext i1 %lnot248 to i32
  %conv250 = sext i32 %lnot.ext249 to i64
  %expval251 = call i64 @llvm.expect.i64(i64 %conv250, i64 0)
  %tobool252 = icmp ne i64 %expval251, 0
  br i1 %tobool252, label %if.then253, label %if.end254

if.then253:                                       ; preds = %if.end239
  %120 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %120, ptr %__pyx_filename, align 8, !tbaa !5
  %121 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 10, ptr %__pyx_lineno, align 4, !tbaa !9
  %122 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3109, ptr %__pyx_clineno, align 4, !tbaa !9
  %123 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end254:                                        ; preds = %if.end239
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp255) #13
  %arrayidx256 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  %124 = load ptr, ptr %arrayidx256, align 16, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_float(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp255, ptr noundef %124, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_weight_sums, ptr align 8 %tmp255, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp255) #13
  %memview257 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 0
  %125 = load ptr, ptr %memview257, align 8, !tbaa !185
  %tobool258 = icmp ne ptr %125, null
  %lnot259 = xor i1 %tobool258, true
  %lnot261 = xor i1 %lnot259, true
  %lnot263 = xor i1 %lnot261, true
  %lnot.ext264 = zext i1 %lnot263 to i32
  %conv265 = sext i32 %lnot.ext264 to i64
  %expval266 = call i64 @llvm.expect.i64(i64 %conv265, i64 0)
  %tobool267 = icmp ne i64 %expval266, 0
  br i1 %tobool267, label %if.then268, label %if.end269

if.then268:                                       ; preds = %if.end254
  %126 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %126, ptr %__pyx_filename, align 8, !tbaa !5
  %127 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 11, ptr %__pyx_lineno, align 4, !tbaa !9
  %128 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3110, ptr %__pyx_clineno, align 4, !tbaa !9
  %129 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end269:                                        ; preds = %if.end254
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp270) #13
  %arrayidx271 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  %130 = load ptr, ptr %arrayidx271, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_int__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp270, ptr noundef %130, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_labels, ptr align 8 %tmp270, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp270) #13
  %memview272 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_labels, i32 0, i32 0
  %131 = load ptr, ptr %memview272, align 8, !tbaa !185
  %tobool273 = icmp ne ptr %131, null
  %lnot274 = xor i1 %tobool273, true
  %lnot276 = xor i1 %lnot274, true
  %lnot278 = xor i1 %lnot276, true
  %lnot.ext279 = zext i1 %lnot278 to i32
  %conv280 = sext i32 %lnot.ext279 to i64
  %expval281 = call i64 @llvm.expect.i64(i64 %conv280, i64 0)
  %tobool282 = icmp ne i64 %expval281, 0
  br i1 %tobool282, label %if.then283, label %if.end284

if.then283:                                       ; preds = %if.end269
  %132 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %132, ptr %__pyx_filename, align 8, !tbaa !5
  %133 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 12, ptr %__pyx_lineno, align 4, !tbaa !9
  %134 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3111, ptr %__pyx_clineno, align 4, !tbaa !9
  %135 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end284:                                        ; preds = %if.end269
  %arrayidx285 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  %136 = load ptr, ptr %arrayidx285, align 16, !tbaa !5
  %call286 = call i32 @__Pyx_PyInt_As_int(ptr noundef %136)
  store i32 %call286, ptr %__pyx_v_n_threads, align 4, !tbaa !9
  %137 = load i32, ptr %__pyx_v_n_threads, align 4, !tbaa !9
  %cmp287 = icmp eq i32 %137, -1
  br i1 %cmp287, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end284
  %call289 = call ptr @PyErr_Occurred()
  %tobool290 = icmp ne ptr %call289, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end284
  %138 = phi i1 [ false, %if.end284 ], [ %tobool290, %land.rhs ]
  %lnot291 = xor i1 %138, true
  %lnot293 = xor i1 %lnot291, true
  %lnot.ext294 = zext i1 %lnot293 to i32
  %conv295 = sext i32 %lnot.ext294 to i64
  %expval296 = call i64 @llvm.expect.i64(i64 %conv295, i64 0)
  %tobool297 = icmp ne i64 %expval296, 0
  br i1 %tobool297, label %if.then298, label %if.end299

if.then298:                                       ; preds = %land.end
  %139 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %139, ptr %__pyx_filename, align 8, !tbaa !5
  %140 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 13, ptr %__pyx_lineno, align 4, !tbaa !9
  %141 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3112, ptr %__pyx_clineno, align 4, !tbaa !9
  %142 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end299:                                        ; preds = %land.end
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

cleanup300:                                       ; preds = %if.then298, %if.then283, %if.then268, %if.then253, %if.then238, %if.then223, %if.then208, %if.then172, %if.end299, %cleanup
  call void @llvm.lifetime.end.p0(i64 56, ptr %values) #13
  %cleanup.dest301 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest301, label %cleanup305 [
    i32 0, label %cleanup.cont302
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont302:                                  ; preds = %cleanup300
  br label %__pyx_L4_argument_unpacking_done

__pyx_L5_argtuple_error:                          ; preds = %cleanup300
  %143 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call303 = call i64 @PyTuple_GET_SIZE(ptr noundef %143)
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef %call303)
  %144 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %144, ptr %__pyx_filename, align 8, !tbaa !5
  %145 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %146 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3116, ptr %__pyx_clineno, align 4, !tbaa !9
  %147 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

__pyx_L3_error:                                   ; preds = %cleanup300, %__pyx_L5_argtuple_error
  %148 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %149 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %150 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.224, i32 noundef %148, i32 noundef %149, ptr noundef %150)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup305

__pyx_L4_argument_unpacking_done:                 ; preds = %cleanup.cont302
  %151 = load ptr, ptr %__pyx_self.addr, align 8, !tbaa !5
  %152 = load i32, ptr %__pyx_v_n_threads, align 4, !tbaa !9
  %call304 = call ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_4_minibatch_update_dense(ptr noundef %151, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_X, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_sample_weight, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_old, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_new, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_weight_sums, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_labels, i32 noundef %152)
  store ptr %call304, ptr %__pyx_r, align 8, !tbaa !5
  %153 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  store ptr %153, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup305

cleanup305:                                       ; preds = %__pyx_L4_argument_unpacking_done, %__pyx_L3_error, %cleanup300
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_threads) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_labels) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_weight_sums) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_centers_new) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_centers_old) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_sample_weight) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_X) #13
  %154 = load ptr, ptr %retval, align 8
  ret ptr %154
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_float__const__(ptr noalias sret(%struct.__Pyx_memviewslice) align 8 %agg.result, ptr noundef %obj, i32 noundef %writable_flag) #3 {
entry:
  %obj.addr = alloca ptr, align 8
  %writable_flag.addr = alloca i32, align 4
  %stack = alloca [1 x %struct.__Pyx_BufFmt_StackElem], align 16
  %axes_specs = alloca [2 x i32], align 4
  %retcode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store i32 %writable_flag, ptr %writable_flag.addr, align 4, !tbaa !9
  call void @llvm.memset.p0.i64(ptr align 8 %agg.result, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr %stack) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %axes_specs) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %axes_specs, ptr align 4 @__const.__Pyx_PyObject_to_MemoryviewSlice_d_dc_float__const__.axes_specs, i64 8, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %retcode) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr @_Py_NoneStruct, ptr %memview, align 8, !tbaa !185
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x i32], ptr %axes_specs, i64 0, i64 0
  %1 = load i32, ptr %writable_flag.addr, align 4, !tbaa !9
  %or = or i32 60, %1
  %arraydecay1 = getelementptr inbounds [1 x %struct.__Pyx_BufFmt_StackElem], ptr %stack, i64 0, i64 0
  %2 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_ValidateAndInit_memviewslice(ptr noundef %arraydecay, i32 noundef 1, i32 noundef %or, i32 noundef 2, ptr noundef @__Pyx_TypeInfo_float__const__, ptr noundef %arraydecay1, ptr noundef %agg.result, ptr noundef %2)
  store i32 %call, ptr %retcode, align 4, !tbaa !9
  %3 = load i32, ptr %retcode, align 4, !tbaa !9
  %cmp2 = icmp eq i32 %3, -1
  %lnot = xor i1 %cmp2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %__pyx_fail

if.end5:                                          ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

__pyx_fail:                                       ; preds = %if.then4
  %memview6 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr null, ptr %memview6, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_fail, %if.end5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %retcode) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %axes_specs) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr %stack) #13
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_PyObject_to_MemoryviewSlice_dc_float__const__(ptr noalias sret(%struct.__Pyx_memviewslice) align 8 %agg.result, ptr noundef %obj, i32 noundef %writable_flag) #3 {
entry:
  %obj.addr = alloca ptr, align 8
  %writable_flag.addr = alloca i32, align 4
  %stack = alloca [1 x %struct.__Pyx_BufFmt_StackElem], align 16
  %axes_specs = alloca [1 x i32], align 4
  %retcode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store i32 %writable_flag, ptr %writable_flag.addr, align 4, !tbaa !9
  call void @llvm.memset.p0.i64(ptr align 8 %agg.result, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr %stack) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %axes_specs) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %axes_specs, ptr align 4 @__const.__Pyx_PyObject_to_MemoryviewSlice_dc_float__const__.axes_specs, i64 4, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %retcode) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr @_Py_NoneStruct, ptr %memview, align 8, !tbaa !185
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [1 x i32], ptr %axes_specs, i64 0, i64 0
  %1 = load i32, ptr %writable_flag.addr, align 4, !tbaa !9
  %or = or i32 60, %1
  %arraydecay1 = getelementptr inbounds [1 x %struct.__Pyx_BufFmt_StackElem], ptr %stack, i64 0, i64 0
  %2 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_ValidateAndInit_memviewslice(ptr noundef %arraydecay, i32 noundef 1, i32 noundef %or, i32 noundef 1, ptr noundef @__Pyx_TypeInfo_float__const__, ptr noundef %arraydecay1, ptr noundef %agg.result, ptr noundef %2)
  store i32 %call, ptr %retcode, align 4, !tbaa !9
  %3 = load i32, ptr %retcode, align 4, !tbaa !9
  %cmp2 = icmp eq i32 %3, -1
  %lnot = xor i1 %cmp2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %__pyx_fail

if.end5:                                          ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

__pyx_fail:                                       ; preds = %if.then4
  %memview6 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr null, ptr %memview6, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_fail, %if.end5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %retcode) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %axes_specs) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr %stack) #13
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_float(ptr noalias sret(%struct.__Pyx_memviewslice) align 8 %agg.result, ptr noundef %obj, i32 noundef %writable_flag) #3 {
entry:
  %obj.addr = alloca ptr, align 8
  %writable_flag.addr = alloca i32, align 4
  %stack = alloca [1 x %struct.__Pyx_BufFmt_StackElem], align 16
  %axes_specs = alloca [2 x i32], align 4
  %retcode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store i32 %writable_flag, ptr %writable_flag.addr, align 4, !tbaa !9
  call void @llvm.memset.p0.i64(ptr align 8 %agg.result, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr %stack) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %axes_specs) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %axes_specs, ptr align 4 @__const.__Pyx_PyObject_to_MemoryviewSlice_d_dc_float.axes_specs, i64 8, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %retcode) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr @_Py_NoneStruct, ptr %memview, align 8, !tbaa !185
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x i32], ptr %axes_specs, i64 0, i64 0
  %1 = load i32, ptr %writable_flag.addr, align 4, !tbaa !9
  %or = or i32 60, %1
  %arraydecay1 = getelementptr inbounds [1 x %struct.__Pyx_BufFmt_StackElem], ptr %stack, i64 0, i64 0
  %2 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_ValidateAndInit_memviewslice(ptr noundef %arraydecay, i32 noundef 1, i32 noundef %or, i32 noundef 2, ptr noundef @__Pyx_TypeInfo_float, ptr noundef %arraydecay1, ptr noundef %agg.result, ptr noundef %2)
  store i32 %call, ptr %retcode, align 4, !tbaa !9
  %3 = load i32, ptr %retcode, align 4, !tbaa !9
  %cmp2 = icmp eq i32 %3, -1
  %lnot = xor i1 %cmp2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %__pyx_fail

if.end5:                                          ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

__pyx_fail:                                       ; preds = %if.then4
  %memview6 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr null, ptr %memview6, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_fail, %if.end5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %retcode) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %axes_specs) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr %stack) #13
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_PyObject_to_MemoryviewSlice_dc_float(ptr noalias sret(%struct.__Pyx_memviewslice) align 8 %agg.result, ptr noundef %obj, i32 noundef %writable_flag) #3 {
entry:
  %obj.addr = alloca ptr, align 8
  %writable_flag.addr = alloca i32, align 4
  %stack = alloca [1 x %struct.__Pyx_BufFmt_StackElem], align 16
  %axes_specs = alloca [1 x i32], align 4
  %retcode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store i32 %writable_flag, ptr %writable_flag.addr, align 4, !tbaa !9
  call void @llvm.memset.p0.i64(ptr align 8 %agg.result, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr %stack) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %axes_specs) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %axes_specs, ptr align 4 @__const.__Pyx_PyObject_to_MemoryviewSlice_dc_float.axes_specs, i64 4, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %retcode) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr @_Py_NoneStruct, ptr %memview, align 8, !tbaa !185
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [1 x i32], ptr %axes_specs, i64 0, i64 0
  %1 = load i32, ptr %writable_flag.addr, align 4, !tbaa !9
  %or = or i32 60, %1
  %arraydecay1 = getelementptr inbounds [1 x %struct.__Pyx_BufFmt_StackElem], ptr %stack, i64 0, i64 0
  %2 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_ValidateAndInit_memviewslice(ptr noundef %arraydecay, i32 noundef 1, i32 noundef %or, i32 noundef 1, ptr noundef @__Pyx_TypeInfo_float, ptr noundef %arraydecay1, ptr noundef %agg.result, ptr noundef %2)
  store i32 %call, ptr %retcode, align 4, !tbaa !9
  %3 = load i32, ptr %retcode, align 4, !tbaa !9
  %cmp2 = icmp eq i32 %3, -1
  %lnot = xor i1 %cmp2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %__pyx_fail

if.end5:                                          ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

__pyx_fail:                                       ; preds = %if.then4
  %memview6 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr null, ptr %memview6, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_fail, %if.end5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %retcode) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %axes_specs) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr %stack) #13
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_PyObject_to_MemoryviewSlice_dc_int__const__(ptr noalias sret(%struct.__Pyx_memviewslice) align 8 %agg.result, ptr noundef %obj, i32 noundef %writable_flag) #3 {
entry:
  %obj.addr = alloca ptr, align 8
  %writable_flag.addr = alloca i32, align 4
  %stack = alloca [1 x %struct.__Pyx_BufFmt_StackElem], align 16
  %axes_specs = alloca [1 x i32], align 4
  %retcode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store i32 %writable_flag, ptr %writable_flag.addr, align 4, !tbaa !9
  call void @llvm.memset.p0.i64(ptr align 8 %agg.result, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr %stack) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %axes_specs) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %axes_specs, ptr align 4 @__const.__Pyx_PyObject_to_MemoryviewSlice_dc_int__const__.axes_specs, i64 4, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %retcode) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr @_Py_NoneStruct, ptr %memview, align 8, !tbaa !185
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [1 x i32], ptr %axes_specs, i64 0, i64 0
  %1 = load i32, ptr %writable_flag.addr, align 4, !tbaa !9
  %or = or i32 60, %1
  %arraydecay1 = getelementptr inbounds [1 x %struct.__Pyx_BufFmt_StackElem], ptr %stack, i64 0, i64 0
  %2 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_ValidateAndInit_memviewslice(ptr noundef %arraydecay, i32 noundef 1, i32 noundef %or, i32 noundef 1, ptr noundef @__Pyx_TypeInfo_int__const__, ptr noundef %arraydecay1, ptr noundef %agg.result, ptr noundef %2)
  store i32 %call, ptr %retcode, align 4, !tbaa !9
  %3 = load i32, ptr %retcode, align 4, !tbaa !9
  %cmp2 = icmp eq i32 %3, -1
  %lnot = xor i1 %cmp2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %__pyx_fail

if.end5:                                          ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

__pyx_fail:                                       ; preds = %if.then4
  %memview6 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr null, ptr %memview6, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_fail, %if.end5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %retcode) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %axes_specs) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr %stack) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_4_minibatch_update_dense(ptr noundef %__pyx_self, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_X, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_sample_weight, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_old, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_new, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_weight_sums, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_labels, i32 noundef %__pyx_v_n_threads) #0 {
entry:
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_v_n_threads.addr = alloca i32, align 4
  %__pyx_v_n_samples = alloca i32, align 4
  %__pyx_v_n_clusters = alloca i32, align 4
  %__pyx_v_cluster_idx = alloca i32, align 4
  %__pyx_v_indices = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %_save = alloca ptr, align 8
  %0 = call i32 @__kmpc_global_thread_num(ptr @3)
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store i32 %__pyx_v_n_threads, ptr %__pyx_v_n_threads.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_samples) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_clusters) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_cluster_idx) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X, i32 0, i32 2
  %arrayidx = getelementptr [8 x i64], ptr %shape, i64 0, i64 0
  %1 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %conv = trunc i64 %1 to i32
  store i32 %conv, ptr %__pyx_v_n_samples, align 4, !tbaa !9
  %shape1 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 2
  %arrayidx2 = getelementptr [8 x i64], ptr %shape1, i64 0, i64 0
  %2 = load i64, ptr %arrayidx2, align 8, !tbaa !27
  %conv3 = trunc i64 %2 to i32
  store i32 %conv3, ptr %__pyx_v_n_clusters, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %_save) #13
  %call = call ptr @PyEval_SaveThread()
  store ptr %call, ptr %_save, align 8, !tbaa !5
  %3 = load i32, ptr %__pyx_v_n_threads.addr, align 4, !tbaa !9
  call void @__kmpc_push_num_threads(ptr @3, i32 %0, i32 %3)
  call void (ptr, i32, ptr, ...) @__kmpc_fork_call(ptr @3, i32 9, ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_4_minibatch_update_dense.omp_outlined, ptr %__pyx_v_n_samples, ptr %__pyx_v_n_clusters, ptr %__pyx_v_cluster_idx, ptr %__pyx_v_X, ptr %__pyx_v_sample_weight, ptr %__pyx_v_centers_old, ptr %__pyx_v_centers_new, ptr %__pyx_v_weight_sums, ptr %__pyx_v_labels)
  %4 = load ptr, ptr %_save, align 8, !tbaa !5
  call void @PyEval_RestoreThread(ptr noundef %4)
  br label %__pyx_L5

__pyx_L5:                                         ; preds = %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %_save) #13
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_X, i32 noundef 1, i32 noundef 3276)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_sample_weight, i32 noundef 1, i32 noundef 3277)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_centers_old, i32 noundef 1, i32 noundef 3278)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_centers_new, i32 noundef 1, i32 noundef 3279)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_weight_sums, i32 noundef 1, i32 noundef 3280)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_labels, i32 noundef 1, i32 noundef 3281)
  %5 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_cluster_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_clusters) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_samples) #13
  ret ptr %5
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_ValidateAndInit_memviewslice(ptr noundef %axes_specs, i32 noundef %c_or_f_flag, i32 noundef %buf_flags, i32 noundef %ndim, ptr noundef %dtype, ptr noundef %stack, ptr noundef %memviewslice, ptr noundef %original_obj) #0 {
entry:
  %axes_specs.addr = alloca ptr, align 8
  %c_or_f_flag.addr = alloca i32, align 4
  %buf_flags.addr = alloca i32, align 4
  %ndim.addr = alloca i32, align 4
  %dtype.addr = alloca ptr, align 8
  %stack.addr = alloca ptr, align 8
  %memviewslice.addr = alloca ptr, align 8
  %original_obj.addr = alloca ptr, align 8
  %memview = alloca ptr, align 8
  %new_memview = alloca ptr, align 8
  %buf = alloca ptr, align 8
  %i = alloca i32, align 4
  %spec = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %ctx = alloca %struct.__Pyx_BufFmt_Context, align 8
  %from_memoryview = alloca i32, align 4
  store ptr %axes_specs, ptr %axes_specs.addr, align 8, !tbaa !5
  store i32 %c_or_f_flag, ptr %c_or_f_flag.addr, align 4, !tbaa !9
  store i32 %buf_flags, ptr %buf_flags.addr, align 4, !tbaa !9
  store i32 %ndim, ptr %ndim.addr, align 4, !tbaa !9
  store ptr %dtype, ptr %dtype.addr, align 8, !tbaa !5
  store ptr %stack, ptr %stack.addr, align 8, !tbaa !5
  store ptr %memviewslice, ptr %memviewslice.addr, align 8, !tbaa !5
  store ptr %original_obj, ptr %original_obj.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %memview) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %new_memview) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %spec) #13
  store i32 0, ptr %spec, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %retval1) #13
  store i32 -1, ptr %retval1, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 72, ptr %ctx) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %from_memoryview) #13
  %0 = load ptr, ptr %original_obj.addr, align 8, !tbaa !5
  %call = call i32 @__pyx_memoryview_check(ptr noundef %0)
  store i32 %call, ptr %from_memoryview, align 4, !tbaa !9
  %1 = load i32, ptr %from_memoryview, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %2 = load ptr, ptr %dtype.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %original_obj.addr, align 8, !tbaa !5
  %typeinfo = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %3, i32 0, i32 11
  %4 = load ptr, ptr %typeinfo, align 8, !tbaa !228
  %call2 = call i32 @__pyx_typeinfo_cmp(ptr noundef %2, ptr noundef %4)
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %5 = load ptr, ptr %original_obj.addr, align 8, !tbaa !5
  store ptr %5, ptr %memview, align 8, !tbaa !5
  store ptr null, ptr %new_memview, align 8, !tbaa !5
  br label %if.end10

if.else:                                          ; preds = %land.lhs.true, %entry
  %6 = load ptr, ptr %original_obj.addr, align 8, !tbaa !5
  %7 = load i32, ptr %buf_flags.addr, align 4, !tbaa !9
  %8 = load ptr, ptr %dtype.addr, align 8, !tbaa !5
  %call4 = call ptr @__pyx_memoryview_new(ptr noundef %6, i32 noundef %7, i32 noundef 0, ptr noundef %8)
  store ptr %call4, ptr %memview, align 8, !tbaa !5
  %9 = load ptr, ptr %memview, align 8, !tbaa !5
  store ptr %9, ptr %new_memview, align 8, !tbaa !5
  %10 = load ptr, ptr %memview, align 8, !tbaa !5
  %tobool5 = icmp ne ptr %10, null
  %lnot = xor i1 %tobool5, true
  %lnot6 = xor i1 %lnot, true
  %lnot7 = xor i1 %lnot6, true
  %lnot.ext = zext i1 %lnot7 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool8 = icmp ne i64 %expval, 0
  br i1 %tobool8, label %if.then9, label %if.end

if.then9:                                         ; preds = %if.else
  br label %fail

if.end:                                           ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %11 = load ptr, ptr %memview, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %11, i32 0, i32 8
  store ptr %view, ptr %buf, align 8, !tbaa !5
  %12 = load ptr, ptr %buf, align 8, !tbaa !5
  %ndim11 = getelementptr inbounds %struct.Py_buffer, ptr %12, i32 0, i32 5
  %13 = load i32, ptr %ndim11, align 4, !tbaa !178
  %14 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %cmp = icmp ne i32 %13, %14
  %lnot13 = xor i1 %cmp, true
  %lnot15 = xor i1 %lnot13, true
  %lnot.ext16 = zext i1 %lnot15 to i32
  %conv17 = sext i32 %lnot.ext16 to i64
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 0)
  %tobool19 = icmp ne i64 %expval18, 0
  br i1 %tobool19, label %if.then20, label %if.end23

if.then20:                                        ; preds = %if.end10
  %15 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %16 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %17 = load ptr, ptr %buf, align 8, !tbaa !5
  %ndim21 = getelementptr inbounds %struct.Py_buffer, ptr %17, i32 0, i32 5
  %18 = load i32, ptr %ndim21, align 4, !tbaa !178
  %call22 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %15, ptr noundef @.str.225, i32 noundef %16, i32 noundef %18)
  br label %fail

if.end23:                                         ; preds = %if.end10
  %19 = load ptr, ptr %new_memview, align 8, !tbaa !5
  %tobool24 = icmp ne ptr %19, null
  br i1 %tobool24, label %if.then25, label %if.end39

if.then25:                                        ; preds = %if.end23
  %20 = load ptr, ptr %stack.addr, align 8, !tbaa !5
  %21 = load ptr, ptr %dtype.addr, align 8, !tbaa !5
  call void @__Pyx_BufFmt_Init(ptr noundef %ctx, ptr noundef %20, ptr noundef %21)
  %22 = load ptr, ptr %buf, align 8, !tbaa !5
  %format = getelementptr inbounds %struct.Py_buffer, ptr %22, i32 0, i32 6
  %23 = load ptr, ptr %format, align 8, !tbaa !245
  %call26 = call ptr @__Pyx_BufFmt_CheckString(ptr noundef %ctx, ptr noundef %23)
  %tobool27 = icmp ne ptr %call26, null
  %lnot28 = xor i1 %tobool27, true
  %lnot30 = xor i1 %lnot28, true
  %lnot32 = xor i1 %lnot30, true
  %lnot.ext33 = zext i1 %lnot32 to i32
  %conv34 = sext i32 %lnot.ext33 to i64
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 0)
  %tobool36 = icmp ne i64 %expval35, 0
  br i1 %tobool36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.then25
  br label %fail

if.end38:                                         ; preds = %if.then25
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end23
  %24 = load ptr, ptr %buf, align 8, !tbaa !5
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %24, i32 0, i32 3
  %25 = load i64, ptr %itemsize, align 8, !tbaa !177
  %conv40 = trunc i64 %25 to i32
  %conv41 = zext i32 %conv40 to i64
  %26 = load ptr, ptr %dtype.addr, align 8, !tbaa !5
  %size = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %26, i32 0, i32 2
  %27 = load i64, ptr %size, align 8, !tbaa !257
  %cmp42 = icmp ne i64 %conv41, %27
  %lnot44 = xor i1 %cmp42, true
  %lnot46 = xor i1 %lnot44, true
  %lnot.ext47 = zext i1 %lnot46 to i32
  %conv48 = sext i32 %lnot.ext47 to i64
  %expval49 = call i64 @llvm.expect.i64(i64 %conv48, i64 0)
  %tobool50 = icmp ne i64 %expval49, 0
  br i1 %tobool50, label %if.then51, label %if.end62

if.then51:                                        ; preds = %if.end39
  %28 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %29 = load ptr, ptr %buf, align 8, !tbaa !5
  %itemsize52 = getelementptr inbounds %struct.Py_buffer, ptr %29, i32 0, i32 3
  %30 = load i64, ptr %itemsize52, align 8, !tbaa !177
  %31 = load ptr, ptr %buf, align 8, !tbaa !5
  %itemsize53 = getelementptr inbounds %struct.Py_buffer, ptr %31, i32 0, i32 3
  %32 = load i64, ptr %itemsize53, align 8, !tbaa !177
  %cmp54 = icmp sgt i64 %32, 1
  %33 = zext i1 %cmp54 to i64
  %cond = select i1 %cmp54, ptr @.str.110, ptr @.str.12
  %34 = load ptr, ptr %dtype.addr, align 8, !tbaa !5
  %name = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %34, i32 0, i32 0
  %35 = load ptr, ptr %name, align 8, !tbaa !259
  %36 = load ptr, ptr %dtype.addr, align 8, !tbaa !5
  %size56 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %36, i32 0, i32 2
  %37 = load i64, ptr %size56, align 8, !tbaa !257
  %38 = load ptr, ptr %dtype.addr, align 8, !tbaa !5
  %size57 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %38, i32 0, i32 2
  %39 = load i64, ptr %size57, align 8, !tbaa !257
  %cmp58 = icmp ugt i64 %39, 1
  %40 = zext i1 %cmp58 to i64
  %cond60 = select i1 %cmp58, ptr @.str.110, ptr @.str.12
  %call61 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %28, ptr noundef @.str.226, i64 noundef %30, ptr noundef %cond, ptr noundef %35, i64 noundef %37, ptr noundef %cond60)
  br label %fail

if.end62:                                         ; preds = %if.end39
  %41 = load ptr, ptr %buf, align 8, !tbaa !5
  %len = getelementptr inbounds %struct.Py_buffer, ptr %41, i32 0, i32 2
  %42 = load i64, ptr %len, align 8, !tbaa !179
  %cmp63 = icmp sgt i64 %42, 0
  br i1 %cmp63, label %if.then65, label %if.end108

if.then65:                                        ; preds = %if.end62
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then65
  %43 = load i32, ptr %i, align 4, !tbaa !9
  %44 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %cmp66 = icmp slt i32 %43, %44
  br i1 %cmp66, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %45 = load ptr, ptr %axes_specs.addr, align 8, !tbaa !5
  %46 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %46 to i64
  %arrayidx = getelementptr i32, ptr %45, i64 %idxprom
  %47 = load i32, ptr %arrayidx, align 4, !tbaa !9
  store i32 %47, ptr %spec, align 4, !tbaa !9
  %48 = load ptr, ptr %buf, align 8, !tbaa !5
  %49 = load i32, ptr %i, align 4, !tbaa !9
  %50 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %51 = load i32, ptr %spec, align 4, !tbaa !9
  %call68 = call i32 @__pyx_check_strides(ptr noundef %48, i32 noundef %49, i32 noundef %50, i32 noundef %51)
  %tobool69 = icmp ne i32 %call68, 0
  %lnot70 = xor i1 %tobool69, true
  %lnot72 = xor i1 %lnot70, true
  %lnot74 = xor i1 %lnot72, true
  %lnot.ext75 = zext i1 %lnot74 to i32
  %conv76 = sext i32 %lnot.ext75 to i64
  %expval77 = call i64 @llvm.expect.i64(i64 %conv76, i64 0)
  %tobool78 = icmp ne i64 %expval77, 0
  br i1 %tobool78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %for.body
  br label %fail

if.end80:                                         ; preds = %for.body
  %52 = load ptr, ptr %buf, align 8, !tbaa !5
  %53 = load i32, ptr %i, align 4, !tbaa !9
  %54 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %55 = load i32, ptr %spec, align 4, !tbaa !9
  %call81 = call i32 @__pyx_check_suboffsets(ptr noundef %52, i32 noundef %53, i32 noundef %54, i32 noundef %55)
  %tobool82 = icmp ne i32 %call81, 0
  %lnot83 = xor i1 %tobool82, true
  %lnot85 = xor i1 %lnot83, true
  %lnot87 = xor i1 %lnot85, true
  %lnot.ext88 = zext i1 %lnot87 to i32
  %conv89 = sext i32 %lnot.ext88 to i64
  %expval90 = call i64 @llvm.expect.i64(i64 %conv89, i64 0)
  %tobool91 = icmp ne i64 %expval90, 0
  br i1 %tobool91, label %if.then92, label %if.end93

if.then92:                                        ; preds = %if.end80
  br label %fail

if.end93:                                         ; preds = %if.end80
  br label %for.inc

for.inc:                                          ; preds = %if.end93
  %56 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %56, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !260

for.end:                                          ; preds = %for.cond
  %57 = load ptr, ptr %buf, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.Py_buffer, ptr %57, i32 0, i32 8
  %58 = load ptr, ptr %strides, align 8, !tbaa !181
  %tobool94 = icmp ne ptr %58, null
  br i1 %tobool94, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.end
  %59 = load ptr, ptr %buf, align 8, !tbaa !5
  %60 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %61 = load i32, ptr %c_or_f_flag.addr, align 4, !tbaa !9
  %call95 = call i32 @__pyx_verify_contig(ptr noundef %59, i32 noundef %60, i32 noundef %61)
  %tobool96 = icmp ne i32 %call95, 0
  %lnot97 = xor i1 %tobool96, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end
  %62 = phi i1 [ false, %for.end ], [ %lnot97, %land.rhs ]
  %lnot99 = xor i1 %62, true
  %lnot101 = xor i1 %lnot99, true
  %lnot.ext102 = zext i1 %lnot101 to i32
  %conv103 = sext i32 %lnot.ext102 to i64
  %expval104 = call i64 @llvm.expect.i64(i64 %conv103, i64 0)
  %tobool105 = icmp ne i64 %expval104, 0
  br i1 %tobool105, label %if.then106, label %if.end107

if.then106:                                       ; preds = %land.end
  br label %fail

if.end107:                                        ; preds = %land.end
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end62
  %63 = load ptr, ptr %memview, align 8, !tbaa !5
  %64 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %65 = load ptr, ptr %memviewslice.addr, align 8, !tbaa !5
  %66 = load ptr, ptr %new_memview, align 8, !tbaa !5
  %cmp109 = icmp ne ptr %66, null
  %conv110 = zext i1 %cmp109 to i32
  %call111 = call i32 @__Pyx_init_memviewslice(ptr noundef %63, i32 noundef %64, ptr noundef %65, i32 noundef %conv110)
  %cmp112 = icmp eq i32 %call111, -1
  %lnot114 = xor i1 %cmp112, true
  %lnot116 = xor i1 %lnot114, true
  %lnot.ext117 = zext i1 %lnot116 to i32
  %conv118 = sext i32 %lnot.ext117 to i64
  %expval119 = call i64 @llvm.expect.i64(i64 %conv118, i64 0)
  %tobool120 = icmp ne i64 %expval119, 0
  br i1 %tobool120, label %if.then121, label %if.end122

if.then121:                                       ; preds = %if.end108
  br label %fail

if.end122:                                        ; preds = %if.end108
  store i32 0, ptr %retval1, align 4, !tbaa !9
  br label %no_fail

fail:                                             ; preds = %if.then121, %if.then106, %if.then92, %if.then79, %if.then51, %if.then37, %if.then20, %if.then9
  %67 = load ptr, ptr %new_memview, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %67)
  store i32 -1, ptr %retval1, align 4, !tbaa !9
  br label %no_fail

no_fail:                                          ; preds = %fail, %if.end122
  %68 = load i32, ptr %retval1, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %from_memoryview) #13
  call void @llvm.lifetime.end.p0(i64 72, ptr %ctx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %retval1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %spec) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %new_memview) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %memview) #13
  ret i32 %68
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__pyx_memoryview_check(ptr noundef %__pyx_v_o) #3 {
entry:
  %__pyx_v_o.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca i32, align 4
  store ptr %__pyx_v_o, ptr %__pyx_v_o.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  %0 = load ptr, ptr %__pyx_v_o.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %1 = load ptr, ptr @__pyx_memoryview_type, align 8, !tbaa !5
  %call1 = call i32 @__Pyx_IsSubtype(ptr noundef %call, ptr noundef %1)
  store i32 %call1, ptr %__pyx_t_1, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %2, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %entry
  %3 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_typeinfo_cmp(ptr noundef %a, ptr noundef %b) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca ptr, align 8
  %b.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %field_a = alloca ptr, align 8
  %field_b = alloca ptr, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !5
  store ptr %b, ptr %b.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  %0 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %tobool1 = icmp ne ptr %1, null
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %2, %3
  br i1 %cmp, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114

if.end3:                                          ; preds = %if.end
  %4 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %size = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %4, i32 0, i32 2
  %5 = load i64, ptr %size, align 8, !tbaa !257
  %6 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %size4 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %6, i32 0, i32 2
  %7 = load i64, ptr %size4, align 8, !tbaa !257
  %cmp5 = icmp ne i64 %5, %7
  br i1 %cmp5, label %if.then21, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %if.end3
  %8 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %typegroup = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %8, i32 0, i32 5
  %9 = load i8, ptr %typegroup, align 4, !tbaa !261
  %conv = sext i8 %9 to i32
  %10 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %typegroup7 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %10, i32 0, i32 5
  %11 = load i8, ptr %typegroup7, align 4, !tbaa !261
  %conv8 = sext i8 %11 to i32
  %cmp9 = icmp ne i32 %conv, %conv8
  br i1 %cmp9, label %if.then21, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false6
  %12 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %is_unsigned = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %12, i32 0, i32 6
  %13 = load i8, ptr %is_unsigned, align 1, !tbaa !262
  %conv12 = sext i8 %13 to i32
  %14 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %is_unsigned13 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %14, i32 0, i32 6
  %15 = load i8, ptr %is_unsigned13, align 1, !tbaa !262
  %conv14 = sext i8 %15 to i32
  %cmp15 = icmp ne i32 %conv12, %conv14
  br i1 %cmp15, label %if.then21, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %lor.lhs.false11
  %16 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %ndim = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %16, i32 0, i32 4
  %17 = load i32, ptr %ndim, align 8, !tbaa !263
  %18 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %ndim18 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %18, i32 0, i32 4
  %19 = load i32, ptr %ndim18, align 8, !tbaa !263
  %cmp19 = icmp ne i32 %17, %19
  br i1 %cmp19, label %if.then21, label %if.end36

if.then21:                                        ; preds = %lor.lhs.false17, %lor.lhs.false11, %lor.lhs.false6, %if.end3
  %20 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %typegroup22 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %20, i32 0, i32 5
  %21 = load i8, ptr %typegroup22, align 4, !tbaa !261
  %conv23 = sext i8 %21 to i32
  %cmp24 = icmp eq i32 %conv23, 72
  br i1 %cmp24, label %if.then31, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %if.then21
  %22 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %typegroup27 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %22, i32 0, i32 5
  %23 = load i8, ptr %typegroup27, align 4, !tbaa !261
  %conv28 = sext i8 %23 to i32
  %cmp29 = icmp eq i32 %conv28, 72
  br i1 %cmp29, label %if.then31, label %if.else

if.then31:                                        ; preds = %lor.lhs.false26, %if.then21
  %24 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %size32 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %24, i32 0, i32 2
  %25 = load i64, ptr %size32, align 8, !tbaa !257
  %26 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %size33 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %26, i32 0, i32 2
  %27 = load i64, ptr %size33, align 8, !tbaa !257
  %cmp34 = icmp eq i64 %25, %27
  %conv35 = zext i1 %cmp34 to i32
  store i32 %conv35, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114

if.else:                                          ; preds = %lor.lhs.false26
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114

if.end36:                                         ; preds = %lor.lhs.false17
  %28 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %ndim37 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %28, i32 0, i32 4
  %29 = load i32, ptr %ndim37, align 8, !tbaa !263
  %tobool38 = icmp ne i32 %29, 0
  br i1 %tobool38, label %if.then39, label %if.end50

if.then39:                                        ; preds = %if.end36
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then39
  %30 = load i32, ptr %i, align 4, !tbaa !9
  %31 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %ndim40 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %31, i32 0, i32 4
  %32 = load i32, ptr %ndim40, align 8, !tbaa !263
  %cmp41 = icmp slt i32 %30, %32
  br i1 %cmp41, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %33 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %arraysize = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %33, i32 0, i32 3
  %34 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %34 to i64
  %arrayidx = getelementptr [8 x i64], ptr %arraysize, i64 0, i64 %idxprom
  %35 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %36 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %arraysize43 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %36, i32 0, i32 3
  %37 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom44 = sext i32 %37 to i64
  %arrayidx45 = getelementptr [8 x i64], ptr %arraysize43, i64 0, i64 %idxprom44
  %38 = load i64, ptr %arrayidx45, align 8, !tbaa !27
  %cmp46 = icmp ne i64 %35, %38
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %for.body
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114

if.end49:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end49
  %39 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %39, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !264

for.end:                                          ; preds = %for.cond
  br label %if.end50

if.end50:                                         ; preds = %for.end, %if.end36
  %40 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %typegroup51 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %40, i32 0, i32 5
  %41 = load i8, ptr %typegroup51, align 4, !tbaa !261
  %conv52 = sext i8 %41 to i32
  %cmp53 = icmp eq i32 %conv52, 83
  br i1 %cmp53, label %if.then55, label %if.end113

if.then55:                                        ; preds = %if.end50
  %42 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %flags = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %42, i32 0, i32 7
  %43 = load i32, ptr %flags, align 8, !tbaa !265
  %44 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %flags56 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %44, i32 0, i32 7
  %45 = load i32, ptr %flags56, align 8, !tbaa !265
  %cmp57 = icmp ne i32 %43, %45
  br i1 %cmp57, label %if.then59, label %if.end60

if.then59:                                        ; preds = %if.then55
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114

if.end60:                                         ; preds = %if.then55
  %46 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %fields = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %46, i32 0, i32 1
  %47 = load ptr, ptr %fields, align 8, !tbaa !266
  %tobool61 = icmp ne ptr %47, null
  br i1 %tobool61, label %if.then65, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %if.end60
  %48 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %fields63 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %48, i32 0, i32 1
  %49 = load ptr, ptr %fields63, align 8, !tbaa !266
  %tobool64 = icmp ne ptr %49, null
  br i1 %tobool64, label %if.then65, label %if.end112

if.then65:                                        ; preds = %lor.lhs.false62, %if.end60
  %50 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %fields66 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %50, i32 0, i32 1
  %51 = load ptr, ptr %fields66, align 8, !tbaa !266
  %tobool67 = icmp ne ptr %51, null
  br i1 %tobool67, label %land.lhs.true, label %if.then70

land.lhs.true:                                    ; preds = %if.then65
  %52 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %fields68 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %52, i32 0, i32 1
  %53 = load ptr, ptr %fields68, align 8, !tbaa !266
  %tobool69 = icmp ne ptr %53, null
  br i1 %tobool69, label %if.end71, label %if.then70

if.then70:                                        ; preds = %land.lhs.true, %if.then65
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114

if.end71:                                         ; preds = %land.lhs.true
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond72

for.cond72:                                       ; preds = %for.inc97, %if.end71
  %54 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %fields73 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %54, i32 0, i32 1
  %55 = load ptr, ptr %fields73, align 8, !tbaa !266
  %56 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom74 = sext i32 %56 to i64
  %arrayidx75 = getelementptr %struct.__Pyx_StructField_, ptr %55, i64 %idxprom74
  %type = getelementptr inbounds %struct.__Pyx_StructField_, ptr %arrayidx75, i32 0, i32 0
  %57 = load ptr, ptr %type, align 8, !tbaa !267
  %tobool76 = icmp ne ptr %57, null
  br i1 %tobool76, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond72
  %58 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %fields77 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %58, i32 0, i32 1
  %59 = load ptr, ptr %fields77, align 8, !tbaa !266
  %60 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom78 = sext i32 %60 to i64
  %arrayidx79 = getelementptr %struct.__Pyx_StructField_, ptr %59, i64 %idxprom78
  %type80 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %arrayidx79, i32 0, i32 0
  %61 = load ptr, ptr %type80, align 8, !tbaa !267
  %tobool81 = icmp ne ptr %61, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond72
  %62 = phi i1 [ false, %for.cond72 ], [ %tobool81, %land.rhs ]
  br i1 %62, label %for.body82, label %for.end99

for.body82:                                       ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %field_a) #13
  %63 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %fields83 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %63, i32 0, i32 1
  %64 = load ptr, ptr %fields83, align 8, !tbaa !266
  %65 = load i32, ptr %i, align 4, !tbaa !9
  %idx.ext = sext i32 %65 to i64
  %add.ptr = getelementptr %struct.__Pyx_StructField_, ptr %64, i64 %idx.ext
  store ptr %add.ptr, ptr %field_a, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %field_b) #13
  %66 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %fields84 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %66, i32 0, i32 1
  %67 = load ptr, ptr %fields84, align 8, !tbaa !266
  %68 = load i32, ptr %i, align 4, !tbaa !9
  %idx.ext85 = sext i32 %68 to i64
  %add.ptr86 = getelementptr %struct.__Pyx_StructField_, ptr %67, i64 %idx.ext85
  store ptr %add.ptr86, ptr %field_b, align 8, !tbaa !5
  %69 = load ptr, ptr %field_a, align 8, !tbaa !5
  %offset = getelementptr inbounds %struct.__Pyx_StructField_, ptr %69, i32 0, i32 2
  %70 = load i64, ptr %offset, align 8, !tbaa !269
  %71 = load ptr, ptr %field_b, align 8, !tbaa !5
  %offset87 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %71, i32 0, i32 2
  %72 = load i64, ptr %offset87, align 8, !tbaa !269
  %cmp88 = icmp ne i64 %70, %72
  br i1 %cmp88, label %if.then94, label %lor.lhs.false90

lor.lhs.false90:                                  ; preds = %for.body82
  %73 = load ptr, ptr %field_a, align 8, !tbaa !5
  %type91 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %73, i32 0, i32 0
  %74 = load ptr, ptr %type91, align 8, !tbaa !267
  %75 = load ptr, ptr %field_b, align 8, !tbaa !5
  %type92 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %75, i32 0, i32 0
  %76 = load ptr, ptr %type92, align 8, !tbaa !267
  %call = call i32 @__pyx_typeinfo_cmp(ptr noundef %74, ptr noundef %76)
  %tobool93 = icmp ne i32 %call, 0
  br i1 %tobool93, label %if.end95, label %if.then94

if.then94:                                        ; preds = %lor.lhs.false90, %for.body82
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end95:                                         ; preds = %lor.lhs.false90
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end95, %if.then94
  call void @llvm.lifetime.end.p0(i64 8, ptr %field_b) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %field_a) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup114 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc97

for.inc97:                                        ; preds = %cleanup.cont
  %77 = load i32, ptr %i, align 4, !tbaa !9
  %inc98 = add i32 %77, 1
  store i32 %inc98, ptr %i, align 4, !tbaa !9
  br label %for.cond72, !llvm.loop !270

for.end99:                                        ; preds = %land.end
  %78 = load ptr, ptr %a.addr, align 8, !tbaa !5
  %fields100 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %78, i32 0, i32 1
  %79 = load ptr, ptr %fields100, align 8, !tbaa !266
  %80 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom101 = sext i32 %80 to i64
  %arrayidx102 = getelementptr %struct.__Pyx_StructField_, ptr %79, i64 %idxprom101
  %type103 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %arrayidx102, i32 0, i32 0
  %81 = load ptr, ptr %type103, align 8, !tbaa !267
  %tobool104 = icmp ne ptr %81, null
  br i1 %tobool104, label %land.end111, label %land.rhs105

land.rhs105:                                      ; preds = %for.end99
  %82 = load ptr, ptr %b.addr, align 8, !tbaa !5
  %fields106 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %82, i32 0, i32 1
  %83 = load ptr, ptr %fields106, align 8, !tbaa !266
  %84 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom107 = sext i32 %84 to i64
  %arrayidx108 = getelementptr %struct.__Pyx_StructField_, ptr %83, i64 %idxprom107
  %type109 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %arrayidx108, i32 0, i32 0
  %85 = load ptr, ptr %type109, align 8, !tbaa !267
  %tobool110 = icmp ne ptr %85, null
  %lnot = xor i1 %tobool110, true
  br label %land.end111

land.end111:                                      ; preds = %land.rhs105, %for.end99
  %86 = phi i1 [ false, %for.end99 ], [ %lnot, %land.rhs105 ]
  %land.ext = zext i1 %86 to i32
  store i32 %land.ext, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114

if.end112:                                        ; preds = %lor.lhs.false62
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.end50
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup114

cleanup114:                                       ; preds = %if.end113, %land.end111, %cleanup, %if.then70, %if.then59, %if.then48, %if.else, %if.then31, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  %87 = load i32, ptr %retval, align 4
  ret i32 %87
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_BufFmt_Init(ptr noundef %ctx, ptr noundef %stack, ptr noundef %type) #0 {
entry:
  %ctx.addr = alloca ptr, align 8
  %stack.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  store ptr %ctx, ptr %ctx.addr, align 8, !tbaa !5
  store ptr %stack, ptr %stack.addr, align 8, !tbaa !5
  store ptr %type, ptr %type.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %root = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %0, i32 0, i32 0
  %1 = load ptr, ptr %stack.addr, align 8, !tbaa !5
  %arrayidx = getelementptr %struct.__Pyx_BufFmt_StackElem, ptr %1, i64 0
  %field = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %arrayidx, i32 0, i32 0
  store ptr %root, ptr %field, align 8, !tbaa !271
  %2 = load ptr, ptr %stack.addr, align 8, !tbaa !5
  %arrayidx1 = getelementptr %struct.__Pyx_BufFmt_StackElem, ptr %2, i64 0
  %parent_offset = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %arrayidx1, i32 0, i32 1
  store i64 0, ptr %parent_offset, align 8, !tbaa !273
  %3 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %root2 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %4, i32 0, i32 0
  %type3 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %root2, i32 0, i32 0
  store ptr %3, ptr %type3, align 8, !tbaa !274
  %5 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %root4 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %5, i32 0, i32 0
  %name = getelementptr inbounds %struct.__Pyx_StructField_, ptr %root4, i32 0, i32 1
  store ptr @.str.227, ptr %name, align 8, !tbaa !276
  %6 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %root5 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %6, i32 0, i32 0
  %offset = getelementptr inbounds %struct.__Pyx_StructField_, ptr %root5, i32 0, i32 2
  store i64 0, ptr %offset, align 8, !tbaa !277
  %7 = load ptr, ptr %stack.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %8, i32 0, i32 1
  store ptr %7, ptr %head, align 8, !tbaa !278
  %9 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %root6 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %9, i32 0, i32 0
  %10 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head7 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %10, i32 0, i32 1
  %11 = load ptr, ptr %head7, align 8, !tbaa !278
  %field8 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %11, i32 0, i32 0
  store ptr %root6, ptr %field8, align 8, !tbaa !271
  %12 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %fmt_offset = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %12, i32 0, i32 2
  store i64 0, ptr %fmt_offset, align 8, !tbaa !279
  %13 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head9 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %13, i32 0, i32 1
  %14 = load ptr, ptr %head9, align 8, !tbaa !278
  %parent_offset10 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %14, i32 0, i32 1
  store i64 0, ptr %parent_offset10, align 8, !tbaa !273
  %15 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_packmode = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %15, i32 0, i32 8
  store i8 64, ptr %new_packmode, align 1, !tbaa !280
  %16 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_packmode = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %16, i32 0, i32 9
  store i8 64, ptr %enc_packmode, align 2, !tbaa !281
  %17 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_count = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %17, i32 0, i32 3
  store i64 1, ptr %new_count, align 8, !tbaa !282
  %18 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_count = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %18, i32 0, i32 4
  store i64 0, ptr %enc_count, align 8, !tbaa !283
  %19 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %19, i32 0, i32 7
  store i8 0, ptr %enc_type, align 4, !tbaa !284
  %20 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_complex = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %20, i32 0, i32 6
  store i32 0, ptr %is_complex, align 8, !tbaa !285
  %21 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_valid_array = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %21, i32 0, i32 10
  store i8 0, ptr %is_valid_array, align 1, !tbaa !286
  %22 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %struct_alignment = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %22, i32 0, i32 5
  store i64 0, ptr %struct_alignment, align 8, !tbaa !287
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %23 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %typegroup = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %23, i32 0, i32 5
  %24 = load i8, ptr %typegroup, align 4, !tbaa !261
  %conv = sext i8 %24 to i32
  %cmp = icmp eq i32 %conv, 83
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %25 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head12 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %25, i32 0, i32 1
  %26 = load ptr, ptr %head12, align 8, !tbaa !278
  %incdec.ptr = getelementptr %struct.__Pyx_BufFmt_StackElem, ptr %26, i32 1
  store ptr %incdec.ptr, ptr %head12, align 8, !tbaa !278
  %27 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %fields = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %27, i32 0, i32 1
  %28 = load ptr, ptr %fields, align 8, !tbaa !266
  %29 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head13 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %29, i32 0, i32 1
  %30 = load ptr, ptr %head13, align 8, !tbaa !278
  %field14 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %30, i32 0, i32 0
  store ptr %28, ptr %field14, align 8, !tbaa !271
  %31 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head15 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %31, i32 0, i32 1
  %32 = load ptr, ptr %head15, align 8, !tbaa !278
  %parent_offset16 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %32, i32 0, i32 1
  store i64 0, ptr %parent_offset16, align 8, !tbaa !273
  %33 = load ptr, ptr %type.addr, align 8, !tbaa !5
  %fields17 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %33, i32 0, i32 1
  %34 = load ptr, ptr %fields17, align 8, !tbaa !266
  %type18 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %34, i32 0, i32 0
  %35 = load ptr, ptr %type18, align 8, !tbaa !267
  store ptr %35, ptr %type.addr, align 8, !tbaa !5
  br label %while.cond, !llvm.loop !288

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_BufFmt_CheckString(ptr noundef %ctx, ptr noundef %ts) #0 {
entry:
  %retval = alloca ptr, align 8
  %ctx.addr = alloca ptr, align 8
  %ts.addr = alloca ptr, align 8
  %got_Z = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %ts_after_sub = alloca ptr, align 8
  %i = alloca i64, align 8
  %struct_count = alloca i64, align 8
  %struct_alignment = alloca i64, align 8
  %alignment = alloca i64, align 8
  %number = alloca i32, align 4
  store ptr %ctx, ptr %ctx.addr, align 8, !tbaa !5
  store ptr %ts, ptr %ts.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %got_Z) #13
  store i32 0, ptr %got_Z, align 4, !tbaa !9
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  br label %while.body

while.body:                                       ; preds = %while.cond
  %0 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %1 = load i8, ptr %0, align 1, !tbaa !29
  %conv = sext i8 %1 to i32
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 32, label %sw.bb14
    i32 13, label %sw.bb14
    i32 10, label %sw.bb14
    i32 60, label %sw.bb15
    i32 62, label %sw.bb20
    i32 33, label %sw.bb20
    i32 61, label %sw.bb27
    i32 64, label %sw.bb27
    i32 94, label %sw.bb27
    i32 84, label %sw.bb30
    i32 125, label %sw.bb60
    i32 120, label %sw.bb80
    i32 90, label %sw.bb94
    i32 63, label %sw.bb109
    i32 99, label %sw.bb109
    i32 98, label %sw.bb109
    i32 66, label %sw.bb109
    i32 104, label %sw.bb109
    i32 72, label %sw.bb109
    i32 105, label %sw.bb109
    i32 73, label %sw.bb109
    i32 108, label %sw.bb109
    i32 76, label %sw.bb109
    i32 113, label %sw.bb109
    i32 81, label %sw.bb109
    i32 102, label %sw.bb109
    i32 100, label %sw.bb109
    i32 103, label %sw.bb109
    i32 79, label %sw.bb109
    i32 112, label %sw.bb109
    i32 115, label %sw.bb134
    i32 58, label %sw.bb148
    i32 40, label %sw.bb157
  ]

sw.bb:                                            ; preds = %while.body
  %2 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %2, i32 0, i32 7
  %3 = load i8, ptr %enc_type, align 4, !tbaa !284
  %conv1 = sext i8 %3 to i32
  %cmp = icmp ne i32 %conv1, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %sw.bb
  %4 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %4, i32 0, i32 1
  %5 = load ptr, ptr %head, align 8, !tbaa !278
  %cmp3 = icmp eq ptr %5, null
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %6 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  call void @__Pyx_BufFmt_RaiseExpected(ptr noundef %6)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172

if.end:                                           ; preds = %land.lhs.true, %sw.bb
  %7 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_BufFmt_ProcessTypeChunk(ptr noundef %7)
  %cmp5 = icmp eq i32 %call, -1
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172

if.end8:                                          ; preds = %if.end
  %8 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head9 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %8, i32 0, i32 1
  %9 = load ptr, ptr %head9, align 8, !tbaa !278
  %cmp10 = icmp ne ptr %9, null
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end8
  %10 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  call void @__Pyx_BufFmt_RaiseExpected(ptr noundef %10)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172

if.end13:                                         ; preds = %if.end8
  %11 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  store ptr %11, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172

sw.bb14:                                          ; preds = %while.body, %while.body, %while.body
  %12 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr = getelementptr i8, ptr %12, i32 1
  store ptr %incdec.ptr, ptr %ts.addr, align 8, !tbaa !5
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %call16 = call i32 @__Pyx_Is_Little_Endian()
  %tobool = icmp ne i32 %call16, 0
  br i1 %tobool, label %if.end18, label %if.then17

if.then17:                                        ; preds = %sw.bb15
  %13 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %13, ptr noundef @.str.228)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172

if.end18:                                         ; preds = %sw.bb15
  %14 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_packmode = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %14, i32 0, i32 8
  store i8 61, ptr %new_packmode, align 1, !tbaa !280
  %15 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr19 = getelementptr i8, ptr %15, i32 1
  store ptr %incdec.ptr19, ptr %ts.addr, align 8, !tbaa !5
  br label %sw.epilog

sw.bb20:                                          ; preds = %while.body, %while.body
  %call21 = call i32 @__Pyx_Is_Little_Endian()
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %sw.bb20
  %16 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %16, ptr noundef @.str.229)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172

if.end24:                                         ; preds = %sw.bb20
  %17 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_packmode25 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %17, i32 0, i32 8
  store i8 61, ptr %new_packmode25, align 1, !tbaa !280
  %18 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr26 = getelementptr i8, ptr %18, i32 1
  store ptr %incdec.ptr26, ptr %ts.addr, align 8, !tbaa !5
  br label %sw.epilog

sw.bb27:                                          ; preds = %while.body, %while.body, %while.body
  %19 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr28 = getelementptr i8, ptr %19, i32 1
  store ptr %incdec.ptr28, ptr %ts.addr, align 8, !tbaa !5
  %20 = load i8, ptr %19, align 1, !tbaa !29
  %21 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_packmode29 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %21, i32 0, i32 8
  store i8 %20, ptr %new_packmode29, align 1, !tbaa !280
  br label %sw.epilog

sw.bb30:                                          ; preds = %while.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %ts_after_sub) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %struct_count) #13
  %22 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_count = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %22, i32 0, i32 3
  %23 = load i64, ptr %new_count, align 8, !tbaa !282
  store i64 %23, ptr %struct_count, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %struct_alignment) #13
  %24 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %struct_alignment31 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %24, i32 0, i32 5
  %25 = load i64, ptr %struct_alignment31, align 8, !tbaa !287
  store i64 %25, ptr %struct_alignment, align 8, !tbaa !27
  %26 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_count32 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %26, i32 0, i32 3
  store i64 1, ptr %new_count32, align 8, !tbaa !282
  %27 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr33 = getelementptr i8, ptr %27, i32 1
  store ptr %incdec.ptr33, ptr %ts.addr, align 8, !tbaa !5
  %28 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %29 = load i8, ptr %28, align 1, !tbaa !29
  %conv34 = sext i8 %29 to i32
  %cmp35 = icmp ne i32 %conv34, 123
  br i1 %cmp35, label %if.then37, label %if.end38

if.then37:                                        ; preds = %sw.bb30
  %30 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %30, ptr noundef @.str.230)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end38:                                         ; preds = %sw.bb30
  %31 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %call39 = call i32 @__Pyx_BufFmt_ProcessTypeChunk(ptr noundef %31)
  %cmp40 = icmp eq i32 %call39, -1
  br i1 %cmp40, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end38
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end43:                                         ; preds = %if.end38
  %32 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type44 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %32, i32 0, i32 7
  store i8 0, ptr %enc_type44, align 4, !tbaa !284
  %33 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_count = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %33, i32 0, i32 4
  store i64 0, ptr %enc_count, align 8, !tbaa !283
  %34 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %struct_alignment45 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %34, i32 0, i32 5
  store i64 0, ptr %struct_alignment45, align 8, !tbaa !287
  %35 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr46 = getelementptr i8, ptr %35, i32 1
  store ptr %incdec.ptr46, ptr %ts.addr, align 8, !tbaa !5
  %36 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  store ptr %36, ptr %ts_after_sub, align 8, !tbaa !5
  store i64 0, ptr %i, align 8, !tbaa !27
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end43
  %37 = load i64, ptr %i, align 8, !tbaa !27
  %38 = load i64, ptr %struct_count, align 8, !tbaa !27
  %cmp47 = icmp ne i64 %37, %38
  br i1 %cmp47, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %40 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %call49 = call ptr @__Pyx_BufFmt_CheckString(ptr noundef %39, ptr noundef %40)
  store ptr %call49, ptr %ts_after_sub, align 8, !tbaa !5
  %41 = load ptr, ptr %ts_after_sub, align 8, !tbaa !5
  %tobool50 = icmp ne ptr %41, null
  br i1 %tobool50, label %if.end52, label %if.then51

if.then51:                                        ; preds = %for.body
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end52:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end52
  %42 = load i64, ptr %i, align 8, !tbaa !27
  %inc = add i64 %42, 1
  store i64 %inc, ptr %i, align 8, !tbaa !27
  br label %for.cond, !llvm.loop !289

for.end:                                          ; preds = %for.cond
  %43 = load ptr, ptr %ts_after_sub, align 8, !tbaa !5
  store ptr %43, ptr %ts.addr, align 8, !tbaa !5
  %44 = load i64, ptr %struct_alignment, align 8, !tbaa !27
  %tobool53 = icmp ne i64 %44, 0
  br i1 %tobool53, label %if.then54, label %if.end56

if.then54:                                        ; preds = %for.end
  %45 = load i64, ptr %struct_alignment, align 8, !tbaa !27
  %46 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %struct_alignment55 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %46, i32 0, i32 5
  store i64 %45, ptr %struct_alignment55, align 8, !tbaa !287
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %for.end
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end56, %if.then51, %if.then42, %if.then37
  call void @llvm.lifetime.end.p0(i64 8, ptr %struct_alignment) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %struct_count) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %ts_after_sub) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup172 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %sw.epilog

sw.bb60:                                          ; preds = %while.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %alignment) #13
  %47 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %struct_alignment61 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %47, i32 0, i32 5
  %48 = load i64, ptr %struct_alignment61, align 8, !tbaa !287
  store i64 %48, ptr %alignment, align 8, !tbaa !27
  %49 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr62 = getelementptr i8, ptr %49, i32 1
  store ptr %incdec.ptr62, ptr %ts.addr, align 8, !tbaa !5
  %50 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %call63 = call i32 @__Pyx_BufFmt_ProcessTypeChunk(ptr noundef %50)
  %cmp64 = icmp eq i32 %call63, -1
  br i1 %cmp64, label %if.then66, label %if.end67

if.then66:                                        ; preds = %sw.bb60
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup77

if.end67:                                         ; preds = %sw.bb60
  %51 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type68 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %51, i32 0, i32 7
  store i8 0, ptr %enc_type68, align 4, !tbaa !284
  %52 = load i64, ptr %alignment, align 8, !tbaa !27
  %tobool69 = icmp ne i64 %52, 0
  br i1 %tobool69, label %land.lhs.true70, label %if.end76

land.lhs.true70:                                  ; preds = %if.end67
  %53 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %fmt_offset = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %53, i32 0, i32 2
  %54 = load i64, ptr %fmt_offset, align 8, !tbaa !279
  %55 = load i64, ptr %alignment, align 8, !tbaa !27
  %rem = urem i64 %54, %55
  %tobool71 = icmp ne i64 %rem, 0
  br i1 %tobool71, label %if.then72, label %if.end76

if.then72:                                        ; preds = %land.lhs.true70
  %56 = load i64, ptr %alignment, align 8, !tbaa !27
  %57 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %fmt_offset73 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %57, i32 0, i32 2
  %58 = load i64, ptr %fmt_offset73, align 8, !tbaa !279
  %59 = load i64, ptr %alignment, align 8, !tbaa !27
  %rem74 = urem i64 %58, %59
  %sub = sub i64 %56, %rem74
  %60 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %fmt_offset75 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %60, i32 0, i32 2
  %61 = load i64, ptr %fmt_offset75, align 8, !tbaa !279
  %add = add i64 %61, %sub
  store i64 %add, ptr %fmt_offset75, align 8, !tbaa !279
  br label %if.end76

if.end76:                                         ; preds = %if.then72, %land.lhs.true70, %if.end67
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup77

cleanup77:                                        ; preds = %if.end76, %if.then66
  call void @llvm.lifetime.end.p0(i64 8, ptr %alignment) #13
  %cleanup.dest78 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest78, label %cleanup172 [
    i32 0, label %cleanup.cont79
  ]

cleanup.cont79:                                   ; preds = %cleanup77
  %62 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  store ptr %62, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172

sw.bb80:                                          ; preds = %while.body
  %63 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %call81 = call i32 @__Pyx_BufFmt_ProcessTypeChunk(ptr noundef %63)
  %cmp82 = icmp eq i32 %call81, -1
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %sw.bb80
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172

if.end85:                                         ; preds = %sw.bb80
  %64 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_count86 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %64, i32 0, i32 3
  %65 = load i64, ptr %new_count86, align 8, !tbaa !282
  %66 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %fmt_offset87 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %66, i32 0, i32 2
  %67 = load i64, ptr %fmt_offset87, align 8, !tbaa !279
  %add88 = add i64 %67, %65
  store i64 %add88, ptr %fmt_offset87, align 8, !tbaa !279
  %68 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_count89 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %68, i32 0, i32 3
  store i64 1, ptr %new_count89, align 8, !tbaa !282
  %69 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_count90 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %69, i32 0, i32 4
  store i64 0, ptr %enc_count90, align 8, !tbaa !283
  %70 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type91 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %70, i32 0, i32 7
  store i8 0, ptr %enc_type91, align 4, !tbaa !284
  %71 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_packmode92 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %71, i32 0, i32 8
  %72 = load i8, ptr %new_packmode92, align 1, !tbaa !280
  %73 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_packmode = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %73, i32 0, i32 9
  store i8 %72, ptr %enc_packmode, align 2, !tbaa !281
  %74 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr93 = getelementptr i8, ptr %74, i32 1
  store ptr %incdec.ptr93, ptr %ts.addr, align 8, !tbaa !5
  br label %sw.epilog

sw.bb94:                                          ; preds = %while.body
  store i32 1, ptr %got_Z, align 4, !tbaa !9
  %75 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr95 = getelementptr i8, ptr %75, i32 1
  store ptr %incdec.ptr95, ptr %ts.addr, align 8, !tbaa !5
  %76 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %77 = load i8, ptr %76, align 1, !tbaa !29
  %conv96 = sext i8 %77 to i32
  %cmp97 = icmp ne i32 %conv96, 102
  br i1 %cmp97, label %land.lhs.true99, label %if.end108

land.lhs.true99:                                  ; preds = %sw.bb94
  %78 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %79 = load i8, ptr %78, align 1, !tbaa !29
  %conv100 = sext i8 %79 to i32
  %cmp101 = icmp ne i32 %conv100, 100
  br i1 %cmp101, label %land.lhs.true103, label %if.end108

land.lhs.true103:                                 ; preds = %land.lhs.true99
  %80 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %81 = load i8, ptr %80, align 1, !tbaa !29
  %conv104 = sext i8 %81 to i32
  %cmp105 = icmp ne i32 %conv104, 103
  br i1 %cmp105, label %if.then107, label %if.end108

if.then107:                                       ; preds = %land.lhs.true103
  call void @__Pyx_BufFmt_RaiseUnexpectedChar(i8 noundef signext 90)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172

if.end108:                                        ; preds = %land.lhs.true103, %land.lhs.true99, %sw.bb94
  br label %sw.bb109

sw.bb109:                                         ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %if.end108
  %82 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type110 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %82, i32 0, i32 7
  %83 = load i8, ptr %enc_type110, align 4, !tbaa !284
  %conv111 = sext i8 %83 to i32
  %84 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %85 = load i8, ptr %84, align 1, !tbaa !29
  %conv112 = sext i8 %85 to i32
  %cmp113 = icmp eq i32 %conv111, %conv112
  br i1 %cmp113, label %land.lhs.true115, label %if.end133

land.lhs.true115:                                 ; preds = %sw.bb109
  %86 = load i32, ptr %got_Z, align 4, !tbaa !9
  %87 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_complex = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %87, i32 0, i32 6
  %88 = load i32, ptr %is_complex, align 8, !tbaa !285
  %cmp116 = icmp eq i32 %86, %88
  br i1 %cmp116, label %land.lhs.true118, label %if.end133

land.lhs.true118:                                 ; preds = %land.lhs.true115
  %89 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_packmode119 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %89, i32 0, i32 9
  %90 = load i8, ptr %enc_packmode119, align 2, !tbaa !281
  %conv120 = sext i8 %90 to i32
  %91 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_packmode121 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %91, i32 0, i32 8
  %92 = load i8, ptr %new_packmode121, align 1, !tbaa !280
  %conv122 = sext i8 %92 to i32
  %cmp123 = icmp eq i32 %conv120, %conv122
  br i1 %cmp123, label %land.lhs.true125, label %if.end133

land.lhs.true125:                                 ; preds = %land.lhs.true118
  %93 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_valid_array = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %93, i32 0, i32 10
  %94 = load i8, ptr %is_valid_array, align 1, !tbaa !286
  %tobool126 = icmp ne i8 %94, 0
  br i1 %tobool126, label %if.end133, label %if.then127

if.then127:                                       ; preds = %land.lhs.true125
  %95 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_count128 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %95, i32 0, i32 3
  %96 = load i64, ptr %new_count128, align 8, !tbaa !282
  %97 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_count129 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %97, i32 0, i32 4
  %98 = load i64, ptr %enc_count129, align 8, !tbaa !283
  %add130 = add i64 %98, %96
  store i64 %add130, ptr %enc_count129, align 8, !tbaa !283
  %99 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_count131 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %99, i32 0, i32 3
  store i64 1, ptr %new_count131, align 8, !tbaa !282
  store i32 0, ptr %got_Z, align 4, !tbaa !9
  %100 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr132 = getelementptr i8, ptr %100, i32 1
  store ptr %incdec.ptr132, ptr %ts.addr, align 8, !tbaa !5
  br label %sw.epilog

if.end133:                                        ; preds = %land.lhs.true125, %land.lhs.true118, %land.lhs.true115, %sw.bb109
  br label %sw.bb134

sw.bb134:                                         ; preds = %while.body, %if.end133
  %101 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %call135 = call i32 @__Pyx_BufFmt_ProcessTypeChunk(ptr noundef %101)
  %cmp136 = icmp eq i32 %call135, -1
  br i1 %cmp136, label %if.then138, label %if.end139

if.then138:                                       ; preds = %sw.bb134
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172

if.end139:                                        ; preds = %sw.bb134
  %102 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_count140 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %102, i32 0, i32 3
  %103 = load i64, ptr %new_count140, align 8, !tbaa !282
  %104 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_count141 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %104, i32 0, i32 4
  store i64 %103, ptr %enc_count141, align 8, !tbaa !283
  %105 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_packmode142 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %105, i32 0, i32 8
  %106 = load i8, ptr %new_packmode142, align 1, !tbaa !280
  %107 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_packmode143 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %107, i32 0, i32 9
  store i8 %106, ptr %enc_packmode143, align 2, !tbaa !281
  %108 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %109 = load i8, ptr %108, align 1, !tbaa !29
  %110 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type144 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %110, i32 0, i32 7
  store i8 %109, ptr %enc_type144, align 4, !tbaa !284
  %111 = load i32, ptr %got_Z, align 4, !tbaa !9
  %112 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_complex145 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %112, i32 0, i32 6
  store i32 %111, ptr %is_complex145, align 8, !tbaa !285
  %113 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr146 = getelementptr i8, ptr %113, i32 1
  store ptr %incdec.ptr146, ptr %ts.addr, align 8, !tbaa !5
  %114 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_count147 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %114, i32 0, i32 3
  store i64 1, ptr %new_count147, align 8, !tbaa !282
  store i32 0, ptr %got_Z, align 4, !tbaa !9
  br label %sw.epilog

sw.bb148:                                         ; preds = %while.body
  %115 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr149 = getelementptr i8, ptr %115, i32 1
  store ptr %incdec.ptr149, ptr %ts.addr, align 8, !tbaa !5
  br label %while.cond150

while.cond150:                                    ; preds = %while.body154, %sw.bb148
  %116 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %117 = load i8, ptr %116, align 1, !tbaa !29
  %conv151 = sext i8 %117 to i32
  %cmp152 = icmp ne i32 %conv151, 58
  br i1 %cmp152, label %while.body154, label %while.end

while.body154:                                    ; preds = %while.cond150
  %118 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr155 = getelementptr i8, ptr %118, i32 1
  store ptr %incdec.ptr155, ptr %ts.addr, align 8, !tbaa !5
  br label %while.cond150, !llvm.loop !290

while.end:                                        ; preds = %while.cond150
  %119 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %incdec.ptr156 = getelementptr i8, ptr %119, i32 1
  store ptr %incdec.ptr156, ptr %ts.addr, align 8, !tbaa !5
  br label %sw.epilog

sw.bb157:                                         ; preds = %while.body
  %120 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %call158 = call ptr @__pyx_buffmt_parse_array(ptr noundef %120, ptr noundef %ts.addr)
  %tobool159 = icmp ne ptr %call158, null
  br i1 %tobool159, label %if.end161, label %if.then160

if.then160:                                       ; preds = %sw.bb157
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup172

if.end161:                                        ; preds = %sw.bb157
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %number) #13
  %call162 = call i32 @__Pyx_BufFmt_ExpectNumber(ptr noundef %ts.addr)
  store i32 %call162, ptr %number, align 4, !tbaa !9
  %121 = load i32, ptr %number, align 4, !tbaa !9
  %cmp163 = icmp eq i32 %121, -1
  br i1 %cmp163, label %if.then165, label %if.end166

if.then165:                                       ; preds = %sw.default
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup169

if.end166:                                        ; preds = %sw.default
  %122 = load i32, ptr %number, align 4, !tbaa !9
  %conv167 = sext i32 %122 to i64
  %123 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_count168 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %123, i32 0, i32 3
  store i64 %conv167, ptr %new_count168, align 8, !tbaa !282
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup169

cleanup169:                                       ; preds = %if.end166, %if.then165
  call void @llvm.lifetime.end.p0(i64 4, ptr %number) #13
  %cleanup.dest170 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest170, label %cleanup172 [
    i32 0, label %cleanup.cont171
  ]

cleanup.cont171:                                  ; preds = %cleanup169
  br label %sw.epilog

sw.epilog:                                        ; preds = %cleanup.cont171, %if.end161, %while.end, %if.end139, %if.then127, %if.end85, %cleanup.cont, %sw.bb27, %if.end24, %if.end18, %sw.bb14
  br label %while.cond

cleanup172:                                       ; preds = %cleanup169, %if.then160, %if.then138, %if.then107, %if.then84, %cleanup.cont79, %cleanup77, %cleanup, %if.then23, %if.then17, %if.end13, %if.then12, %if.then7, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %got_Z) #13
  %124 = load ptr, ptr %retval, align 8
  ret ptr %124
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_check_strides(ptr noundef %buf, i32 noundef %dim, i32 noundef %ndim, i32 noundef %spec) #0 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca ptr, align 8
  %dim.addr = alloca i32, align 4
  %ndim.addr = alloca i32, align 4
  %spec.addr = alloca i32, align 4
  %stride = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !5
  store i32 %dim, ptr %dim.addr, align 4, !tbaa !9
  store i32 %ndim, ptr %ndim.addr, align 4, !tbaa !9
  store i32 %spec, ptr %spec.addr, align 4, !tbaa !9
  %0 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.Py_buffer, ptr %0, i32 0, i32 7
  %1 = load ptr, ptr %shape, align 8, !tbaa !180
  %2 = load i32, ptr %dim.addr, align 4, !tbaa !9
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr i64, ptr %1, i64 %idxprom
  %3 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %cmp = icmp sle i64 %3, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.Py_buffer, ptr %4, i32 0, i32 8
  %5 = load ptr, ptr %strides, align 8, !tbaa !181
  %tobool = icmp ne ptr %5, null
  br i1 %tobool, label %if.then1, label %if.else54

if.then1:                                         ; preds = %if.end
  %6 = load i32, ptr %spec.addr, align 4, !tbaa !9
  %and = and i32 %6, 8
  %tobool2 = icmp ne i32 %and, 0
  br i1 %tobool2, label %if.then3, label %if.end30

if.then3:                                         ; preds = %if.then1
  %7 = load i32, ptr %spec.addr, align 4, !tbaa !9
  %and4 = and i32 %7, 6
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then3
  %8 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %strides7 = getelementptr inbounds %struct.Py_buffer, ptr %8, i32 0, i32 8
  %9 = load ptr, ptr %strides7, align 8, !tbaa !181
  %10 = load i32, ptr %dim.addr, align 4, !tbaa !9
  %idxprom8 = sext i32 %10 to i64
  %arrayidx9 = getelementptr i64, ptr %9, i64 %idxprom8
  %11 = load i64, ptr %arrayidx9, align 8, !tbaa !27
  %cmp10 = icmp ne i64 %11, 8
  %lnot = xor i1 %cmp10, true
  %lnot11 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot11 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool12 = icmp ne i64 %expval, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.then6
  %12 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %13 = load i32, ptr %dim.addr, align 4, !tbaa !9
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %12, ptr noundef @.str.269, i32 noundef %13)
  br label %fail

if.end14:                                         ; preds = %if.then6
  br label %if.end29

if.else:                                          ; preds = %if.then3
  %14 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %strides15 = getelementptr inbounds %struct.Py_buffer, ptr %14, i32 0, i32 8
  %15 = load ptr, ptr %strides15, align 8, !tbaa !181
  %16 = load i32, ptr %dim.addr, align 4, !tbaa !9
  %idxprom16 = sext i32 %16 to i64
  %arrayidx17 = getelementptr i64, ptr %15, i64 %idxprom16
  %17 = load i64, ptr %arrayidx17, align 8, !tbaa !27
  %18 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %18, i32 0, i32 3
  %19 = load i64, ptr %itemsize, align 8, !tbaa !177
  %cmp18 = icmp ne i64 %17, %19
  %lnot20 = xor i1 %cmp18, true
  %lnot22 = xor i1 %lnot20, true
  %lnot.ext23 = zext i1 %lnot22 to i32
  %conv24 = sext i32 %lnot.ext23 to i64
  %expval25 = call i64 @llvm.expect.i64(i64 %conv24, i64 0)
  %tobool26 = icmp ne i64 %expval25, 0
  br i1 %tobool26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.else
  %20 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %20, ptr noundef @.str.270)
  br label %fail

if.end28:                                         ; preds = %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end14
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then1
  %21 = load i32, ptr %spec.addr, align 4, !tbaa !9
  %and31 = and i32 %21, 32
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %if.then33, label %if.end53

if.then33:                                        ; preds = %if.end30
  call void @llvm.lifetime.start.p0(i64 8, ptr %stride) #13
  %22 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %strides34 = getelementptr inbounds %struct.Py_buffer, ptr %22, i32 0, i32 8
  %23 = load ptr, ptr %strides34, align 8, !tbaa !181
  %24 = load i32, ptr %dim.addr, align 4, !tbaa !9
  %idxprom35 = sext i32 %24 to i64
  %arrayidx36 = getelementptr i64, ptr %23, i64 %idxprom35
  %25 = load i64, ptr %arrayidx36, align 8, !tbaa !27
  store i64 %25, ptr %stride, align 8, !tbaa !27
  %26 = load i64, ptr %stride, align 8, !tbaa !27
  %cmp37 = icmp slt i64 %26, 0
  br i1 %cmp37, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.then33
  %27 = load i64, ptr %stride, align 8, !tbaa !27
  %sub = sub i64 0, %27
  store i64 %sub, ptr %stride, align 8, !tbaa !27
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.then33
  %28 = load i64, ptr %stride, align 8, !tbaa !27
  %29 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %itemsize41 = getelementptr inbounds %struct.Py_buffer, ptr %29, i32 0, i32 3
  %30 = load i64, ptr %itemsize41, align 8, !tbaa !177
  %cmp42 = icmp slt i64 %28, %30
  %lnot44 = xor i1 %cmp42, true
  %lnot46 = xor i1 %lnot44, true
  %lnot.ext47 = zext i1 %lnot46 to i32
  %conv48 = sext i32 %lnot.ext47 to i64
  %expval49 = call i64 @llvm.expect.i64(i64 %conv48, i64 0)
  %tobool50 = icmp ne i64 %expval49, 0
  br i1 %tobool50, label %if.then51, label %if.end52

if.then51:                                        ; preds = %if.end40
  %31 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %31, ptr noundef @.str.270)
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end52:                                         ; preds = %if.end40
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then51, %if.end52
  call void @llvm.lifetime.end.p0(i64 8, ptr %stride) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 2, label %fail
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end53

if.end53:                                         ; preds = %cleanup.cont, %if.end30
  br label %if.end94

if.else54:                                        ; preds = %if.end
  %32 = load i32, ptr %spec.addr, align 4, !tbaa !9
  %and55 = and i32 %32, 8
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.else54
  %33 = load i32, ptr %dim.addr, align 4, !tbaa !9
  %34 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %sub57 = sub i32 %34, 1
  %cmp58 = icmp ne i32 %33, %sub57
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else54
  %35 = phi i1 [ false, %if.else54 ], [ %cmp58, %land.rhs ]
  %lnot60 = xor i1 %35, true
  %lnot62 = xor i1 %lnot60, true
  %lnot.ext63 = zext i1 %lnot62 to i32
  %conv64 = sext i32 %lnot.ext63 to i64
  %expval65 = call i64 @llvm.expect.i64(i64 %conv64, i64 0)
  %tobool66 = icmp ne i64 %expval65, 0
  br i1 %tobool66, label %if.then67, label %if.else69

if.then67:                                        ; preds = %land.end
  %36 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %37 = load i32, ptr %dim.addr, align 4, !tbaa !9
  %call68 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %36, ptr noundef @.str.271, i32 noundef %37)
  br label %fail

if.else69:                                        ; preds = %land.end
  %38 = load i32, ptr %spec.addr, align 4, !tbaa !9
  %and70 = and i32 %38, 2
  %tobool71 = icmp ne i32 %and70, 0
  %lnot72 = xor i1 %tobool71, true
  %lnot74 = xor i1 %lnot72, true
  %lnot.ext75 = zext i1 %lnot74 to i32
  %conv76 = sext i32 %lnot.ext75 to i64
  %expval77 = call i64 @llvm.expect.i64(i64 %conv76, i64 0)
  %tobool78 = icmp ne i64 %expval77, 0
  br i1 %tobool78, label %if.then79, label %if.else81

if.then79:                                        ; preds = %if.else69
  %39 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %40 = load i32, ptr %dim.addr, align 4, !tbaa !9
  %call80 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %39, ptr noundef @.str.272, i32 noundef %40)
  br label %fail

if.else81:                                        ; preds = %if.else69
  %41 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %suboffsets = getelementptr inbounds %struct.Py_buffer, ptr %41, i32 0, i32 9
  %42 = load ptr, ptr %suboffsets, align 8, !tbaa !182
  %tobool82 = icmp ne ptr %42, null
  %lnot83 = xor i1 %tobool82, true
  %lnot85 = xor i1 %lnot83, true
  %lnot.ext86 = zext i1 %lnot85 to i32
  %conv87 = sext i32 %lnot.ext86 to i64
  %expval88 = call i64 @llvm.expect.i64(i64 %conv87, i64 0)
  %tobool89 = icmp ne i64 %expval88, 0
  br i1 %tobool89, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.else81
  %43 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %43, ptr noundef @.str.273)
  br label %fail

if.end91:                                         ; preds = %if.else81
  br label %if.end92

if.end92:                                         ; preds = %if.end91
  br label %if.end93

if.end93:                                         ; preds = %if.end92
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.end53
  store i32 1, ptr %retval, align 4
  br label %return

fail:                                             ; preds = %if.then90, %if.then79, %if.then67, %cleanup, %if.then27, %if.then13
  store i32 0, ptr %retval, align 4
  br label %return

return:                                           ; preds = %fail, %if.end94, %if.then
  %44 = load i32, ptr %retval, align 4
  ret i32 %44

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_check_suboffsets(ptr noundef %buf, i32 noundef %dim, i32 noundef %ndim, i32 noundef %spec) #0 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca ptr, align 8
  %dim.addr = alloca i32, align 4
  %ndim.addr = alloca i32, align 4
  %spec.addr = alloca i32, align 4
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !5
  store i32 %dim, ptr %dim.addr, align 4, !tbaa !9
  store i32 %ndim, ptr %ndim.addr, align 4, !tbaa !9
  store i32 %spec, ptr %spec.addr, align 4, !tbaa !9
  %0 = load i32, ptr %spec.addr, align 4, !tbaa !9
  %and = and i32 %0, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %suboffsets = getelementptr inbounds %struct.Py_buffer, ptr %1, i32 0, i32 9
  %2 = load ptr, ptr %suboffsets, align 8, !tbaa !182
  %tobool1 = icmp ne ptr %2, null
  br i1 %tobool1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then
  %3 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %suboffsets2 = getelementptr inbounds %struct.Py_buffer, ptr %3, i32 0, i32 9
  %4 = load ptr, ptr %suboffsets2, align 8, !tbaa !182
  %5 = load i32, ptr %dim.addr, align 4, !tbaa !9
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr i64, ptr %4, i64 %idxprom
  %6 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %cmp = icmp sge i64 %6, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %7 = phi i1 [ false, %if.then ], [ %cmp, %land.rhs ]
  %lnot = xor i1 %7, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %if.then5, label %if.end

if.then5:                                         ; preds = %land.end
  %8 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %9 = load i32, ptr %dim.addr, align 4, !tbaa !9
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %8, ptr noundef @.str.274, i32 noundef %9)
  br label %fail

if.end:                                           ; preds = %land.end
  br label %if.end6

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i32, ptr %spec.addr, align 4, !tbaa !9
  %and7 = and i32 %10, 2
  %tobool8 = icmp ne i32 %and7, 0
  br i1 %tobool8, label %if.then9, label %if.end27

if.then9:                                         ; preds = %if.end6
  %11 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %suboffsets10 = getelementptr inbounds %struct.Py_buffer, ptr %11, i32 0, i32 9
  %12 = load ptr, ptr %suboffsets10, align 8, !tbaa !182
  %tobool11 = icmp ne ptr %12, null
  br i1 %tobool11, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %if.then9
  %13 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %suboffsets12 = getelementptr inbounds %struct.Py_buffer, ptr %13, i32 0, i32 9
  %14 = load ptr, ptr %suboffsets12, align 8, !tbaa !182
  %15 = load i32, ptr %dim.addr, align 4, !tbaa !9
  %idxprom13 = sext i32 %15 to i64
  %arrayidx14 = getelementptr i64, ptr %14, i64 %idxprom13
  %16 = load i64, ptr %arrayidx14, align 8, !tbaa !27
  %cmp15 = icmp slt i64 %16, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then9
  %17 = phi i1 [ true, %if.then9 ], [ %cmp15, %lor.rhs ]
  %lnot17 = xor i1 %17, true
  %lnot19 = xor i1 %lnot17, true
  %lnot.ext20 = zext i1 %lnot19 to i32
  %conv21 = sext i32 %lnot.ext20 to i64
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 0)
  %tobool23 = icmp ne i64 %expval22, 0
  br i1 %tobool23, label %if.then24, label %if.end26

if.then24:                                        ; preds = %lor.end
  %18 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %19 = load i32, ptr %dim.addr, align 4, !tbaa !9
  %call25 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %18, ptr noundef @.str.275, i32 noundef %19)
  br label %fail

if.end26:                                         ; preds = %lor.end
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end6
  store i32 1, ptr %retval, align 4
  br label %return

fail:                                             ; preds = %if.then24, %if.then5
  store i32 0, ptr %retval, align 4
  br label %return

return:                                           ; preds = %fail, %if.end27
  %20 = load i32, ptr %retval, align 4
  ret i32 %20
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_verify_contig(ptr noundef %buf, i32 noundef %ndim, i32 noundef %c_or_f_flag) #0 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca ptr, align 8
  %ndim.addr = alloca i32, align 4
  %c_or_f_flag.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %stride = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %stride15 = alloca i64, align 8
  store ptr %buf, ptr %buf.addr, align 8, !tbaa !5
  store i32 %ndim, ptr %ndim.addr, align 4, !tbaa !9
  store i32 %c_or_f_flag, ptr %c_or_f_flag.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  %0 = load i32, ptr %c_or_f_flag.addr, align 4, !tbaa !9
  %and = and i32 %0, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %stride) #13
  store i64 1, ptr %stride, align 8, !tbaa !27
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, ptr %i, align 4, !tbaa !9
  %2 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i64, ptr %stride, align 8, !tbaa !27
  %4 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %4, i32 0, i32 3
  %5 = load i64, ptr %itemsize, align 8, !tbaa !177
  %mul = mul i64 %3, %5
  %6 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.Py_buffer, ptr %6, i32 0, i32 8
  %7 = load ptr, ptr %strides, align 8, !tbaa !181
  %8 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr i64, ptr %7, i64 %idxprom
  %9 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %cmp1 = icmp ne i64 %mul, %9
  br i1 %cmp1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.body
  %10 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.Py_buffer, ptr %10, i32 0, i32 7
  %11 = load ptr, ptr %shape, align 8, !tbaa !180
  %12 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom2 = sext i32 %12 to i64
  %arrayidx3 = getelementptr i64, ptr %11, i64 %idxprom2
  %13 = load i64, ptr %arrayidx3, align 8, !tbaa !27
  %cmp4 = icmp sgt i64 %13, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %14 = phi i1 [ false, %for.body ], [ %cmp4, %land.rhs ]
  %lnot = xor i1 %14, true
  %lnot5 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot5 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool6 = icmp ne i64 %expval, 0
  br i1 %tobool6, label %if.then7, label %if.end

if.then7:                                         ; preds = %land.end
  %15 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %15, ptr noundef @.str.276)
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %land.end
  %16 = load i64, ptr %stride, align 8, !tbaa !27
  %17 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %shape8 = getelementptr inbounds %struct.Py_buffer, ptr %17, i32 0, i32 7
  %18 = load ptr, ptr %shape8, align 8, !tbaa !180
  %19 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom9 = sext i32 %19 to i64
  %arrayidx10 = getelementptr i64, ptr %18, i64 %idxprom9
  %20 = load i64, ptr %arrayidx10, align 8, !tbaa !27
  %mul11 = mul i64 %16, %20
  store i64 %mul11, ptr %stride, align 8, !tbaa !27
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %21 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %21, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !291

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then7, %for.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %stride) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup54 [
    i32 0, label %cleanup.cont
    i32 5, label %fail
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end53

if.else:                                          ; preds = %entry
  %22 = load i32, ptr %c_or_f_flag.addr, align 4, !tbaa !9
  %and12 = and i32 %22, 1
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %if.then14, label %if.end52

if.then14:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr %stride15) #13
  store i64 1, ptr %stride15, align 8, !tbaa !27
  %23 = load i32, ptr %ndim.addr, align 4, !tbaa !9
  %sub = sub i32 %23, 1
  store i32 %sub, ptr %i, align 4, !tbaa !9
  br label %for.cond16

for.cond16:                                       ; preds = %for.inc47, %if.then14
  %24 = load i32, ptr %i, align 4, !tbaa !9
  %cmp17 = icmp sgt i32 %24, -1
  br i1 %cmp17, label %for.body19, label %for.end48

for.body19:                                       ; preds = %for.cond16
  %25 = load i64, ptr %stride15, align 8, !tbaa !27
  %26 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %itemsize20 = getelementptr inbounds %struct.Py_buffer, ptr %26, i32 0, i32 3
  %27 = load i64, ptr %itemsize20, align 8, !tbaa !177
  %mul21 = mul i64 %25, %27
  %28 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %strides22 = getelementptr inbounds %struct.Py_buffer, ptr %28, i32 0, i32 8
  %29 = load ptr, ptr %strides22, align 8, !tbaa !181
  %30 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom23 = sext i32 %30 to i64
  %arrayidx24 = getelementptr i64, ptr %29, i64 %idxprom23
  %31 = load i64, ptr %arrayidx24, align 8, !tbaa !27
  %cmp25 = icmp ne i64 %mul21, %31
  br i1 %cmp25, label %land.rhs27, label %land.end33

land.rhs27:                                       ; preds = %for.body19
  %32 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %shape28 = getelementptr inbounds %struct.Py_buffer, ptr %32, i32 0, i32 7
  %33 = load ptr, ptr %shape28, align 8, !tbaa !180
  %34 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom29 = sext i32 %34 to i64
  %arrayidx30 = getelementptr i64, ptr %33, i64 %idxprom29
  %35 = load i64, ptr %arrayidx30, align 8, !tbaa !27
  %cmp31 = icmp sgt i64 %35, 1
  br label %land.end33

land.end33:                                       ; preds = %land.rhs27, %for.body19
  %36 = phi i1 [ false, %for.body19 ], [ %cmp31, %land.rhs27 ]
  %lnot34 = xor i1 %36, true
  %lnot36 = xor i1 %lnot34, true
  %lnot.ext37 = zext i1 %lnot36 to i32
  %conv38 = sext i32 %lnot.ext37 to i64
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0)
  %tobool40 = icmp ne i64 %expval39, 0
  br i1 %tobool40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %land.end33
  %37 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %37, ptr noundef @.str.277)
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup49

if.end42:                                         ; preds = %land.end33
  %38 = load i64, ptr %stride15, align 8, !tbaa !27
  %39 = load ptr, ptr %buf.addr, align 8, !tbaa !5
  %shape43 = getelementptr inbounds %struct.Py_buffer, ptr %39, i32 0, i32 7
  %40 = load ptr, ptr %shape43, align 8, !tbaa !180
  %41 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom44 = sext i32 %41 to i64
  %arrayidx45 = getelementptr i64, ptr %40, i64 %idxprom44
  %42 = load i64, ptr %arrayidx45, align 8, !tbaa !27
  %mul46 = mul i64 %38, %42
  store i64 %mul46, ptr %stride15, align 8, !tbaa !27
  br label %for.inc47

for.inc47:                                        ; preds = %if.end42
  %43 = load i32, ptr %i, align 4, !tbaa !9
  %dec = add i32 %43, -1
  store i32 %dec, ptr %i, align 4, !tbaa !9
  br label %for.cond16, !llvm.loop !292

for.end48:                                        ; preds = %for.cond16
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup49

cleanup49:                                        ; preds = %if.then41, %for.end48
  call void @llvm.lifetime.end.p0(i64 8, ptr %stride15) #13
  %cleanup.dest50 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest50, label %cleanup54 [
    i32 0, label %cleanup.cont51
    i32 5, label %fail
  ]

cleanup.cont51:                                   ; preds = %cleanup49
  br label %if.end52

if.end52:                                         ; preds = %cleanup.cont51, %if.else
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %cleanup.cont
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup54

fail:                                             ; preds = %cleanup49, %cleanup
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup54

cleanup54:                                        ; preds = %fail, %if.end53, %cleanup49, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  %44 = load i32, ptr %retval, align 4
  ret i32 %44
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_BufFmt_RaiseExpected(ptr noundef %ctx) #0 {
entry:
  %ctx.addr = alloca ptr, align 8
  %expected = alloca ptr, align 8
  %quote = alloca ptr, align 8
  %field10 = alloca ptr, align 8
  %parent = alloca ptr, align 8
  store ptr %ctx, ptr %ctx.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %0, i32 0, i32 1
  %1 = load ptr, ptr %head, align 8, !tbaa !278
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head1 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %2, i32 0, i32 1
  %3 = load ptr, ptr %head1, align 8, !tbaa !278
  %field = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %3, i32 0, i32 0
  %4 = load ptr, ptr %field, align 8, !tbaa !271
  %5 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %root = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %5, i32 0, i32 0
  %cmp2 = icmp eq ptr %4, %root
  br i1 %cmp2, label %if.then, label %if.else9

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %expected) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %quote) #13
  %6 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head3 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %6, i32 0, i32 1
  %7 = load ptr, ptr %head3, align 8, !tbaa !278
  %cmp4 = icmp eq ptr %7, null
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then
  store ptr @.str.231, ptr %expected, align 8, !tbaa !5
  store ptr @.str.12, ptr %quote, align 8, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head6 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %8, i32 0, i32 1
  %9 = load ptr, ptr %head6, align 8, !tbaa !278
  %field7 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %9, i32 0, i32 0
  %10 = load ptr, ptr %field7, align 8, !tbaa !271
  %type = getelementptr inbounds %struct.__Pyx_StructField_, ptr %10, i32 0, i32 0
  %11 = load ptr, ptr %type, align 8, !tbaa !267
  %name = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %11, i32 0, i32 0
  %12 = load ptr, ptr %name, align 8, !tbaa !259
  store ptr %12, ptr %expected, align 8, !tbaa !5
  store ptr @.str.232, ptr %quote, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %13 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %14 = load ptr, ptr %quote, align 8, !tbaa !5
  %15 = load ptr, ptr %expected, align 8, !tbaa !5
  %16 = load ptr, ptr %quote, align 8, !tbaa !5
  %17 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %17, i32 0, i32 7
  %18 = load i8, ptr %enc_type, align 4, !tbaa !284
  %19 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_complex = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %19, i32 0, i32 6
  %20 = load i32, ptr %is_complex, align 8, !tbaa !285
  %call = call ptr @__Pyx_BufFmt_DescribeTypeChar(i8 noundef signext %18, i32 noundef %20)
  %call8 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %13, ptr noundef @.str.233, ptr noundef %14, ptr noundef %15, ptr noundef %16, ptr noundef %call)
  call void @llvm.lifetime.end.p0(i64 8, ptr %quote) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %expected) #13
  br label %if.end24

if.else9:                                         ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0(i64 8, ptr %field10) #13
  %21 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head11 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %21, i32 0, i32 1
  %22 = load ptr, ptr %head11, align 8, !tbaa !278
  %field12 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %22, i32 0, i32 0
  %23 = load ptr, ptr %field12, align 8, !tbaa !271
  store ptr %23, ptr %field10, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %parent) #13
  %24 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head13 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %24, i32 0, i32 1
  %25 = load ptr, ptr %head13, align 8, !tbaa !278
  %add.ptr = getelementptr %struct.__Pyx_BufFmt_StackElem, ptr %25, i64 -1
  %field14 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %add.ptr, i32 0, i32 0
  %26 = load ptr, ptr %field14, align 8, !tbaa !271
  store ptr %26, ptr %parent, align 8, !tbaa !5
  %27 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %28 = load ptr, ptr %field10, align 8, !tbaa !5
  %type15 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %28, i32 0, i32 0
  %29 = load ptr, ptr %type15, align 8, !tbaa !267
  %name16 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %29, i32 0, i32 0
  %30 = load ptr, ptr %name16, align 8, !tbaa !259
  %31 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type17 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %31, i32 0, i32 7
  %32 = load i8, ptr %enc_type17, align 4, !tbaa !284
  %33 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_complex18 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %33, i32 0, i32 6
  %34 = load i32, ptr %is_complex18, align 8, !tbaa !285
  %call19 = call ptr @__Pyx_BufFmt_DescribeTypeChar(i8 noundef signext %32, i32 noundef %34)
  %35 = load ptr, ptr %parent, align 8, !tbaa !5
  %type20 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %35, i32 0, i32 0
  %36 = load ptr, ptr %type20, align 8, !tbaa !267
  %name21 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %36, i32 0, i32 0
  %37 = load ptr, ptr %name21, align 8, !tbaa !259
  %38 = load ptr, ptr %field10, align 8, !tbaa !5
  %name22 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %38, i32 0, i32 1
  %39 = load ptr, ptr %name22, align 8, !tbaa !293
  %call23 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %27, ptr noundef @.str.234, ptr noundef %30, ptr noundef %call19, ptr noundef %37, ptr noundef %39)
  call void @llvm.lifetime.end.p0(i64 8, ptr %parent) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %field10) #13
  br label %if.end24

if.end24:                                         ; preds = %if.else9, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_BufFmt_ProcessTypeChunk(ptr noundef %ctx) #0 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca ptr, align 8
  %group = alloca i8, align 1
  %size = alloca i64, align 8
  %offset = alloca i64, align 8
  %arraysize = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i32, align 4
  %ndim = alloca i32, align 4
  %field62 = alloca ptr, align 8
  %type65 = alloca ptr, align 8
  %align_at = alloca i64, align 8
  %align_mod_offset = alloca i64, align 8
  %parent_offset = alloca i64, align 8
  %parent_offset206 = alloca i64, align 8
  store ptr %ctx, ptr %ctx.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 1, ptr %group) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %offset) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %arraysize) #13
  store i64 1, ptr %arraysize, align 8, !tbaa !27
  %0 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %0, i32 0, i32 7
  %1 = load i8, ptr %enc_type, align 4, !tbaa !284
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup237

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %2, i32 0, i32 1
  %3 = load ptr, ptr %head, align 8, !tbaa !278
  %field = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %3, i32 0, i32 0
  %4 = load ptr, ptr %field, align 8, !tbaa !271
  %type = getelementptr inbounds %struct.__Pyx_StructField_, ptr %4, i32 0, i32 0
  %5 = load ptr, ptr %type, align 8, !tbaa !267
  %arraysize2 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %5, i32 0, i32 3
  %arrayidx = getelementptr [8 x i64], ptr %arraysize2, i64 0, i64 0
  %6 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %tobool = icmp ne i64 %6, 0
  br i1 %tobool, label %if.then3, label %if.end59

if.then3:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %ndim) #13
  store i32 0, ptr %ndim, align 4, !tbaa !9
  %7 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type4 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %7, i32 0, i32 7
  %8 = load i8, ptr %enc_type4, align 4, !tbaa !284
  %conv5 = sext i8 %8 to i32
  %cmp6 = icmp eq i32 %conv5, 115
  br i1 %cmp6, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then3
  %9 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type8 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %9, i32 0, i32 7
  %10 = load i8, ptr %enc_type8, align 4, !tbaa !284
  %conv9 = sext i8 %10 to i32
  %cmp10 = icmp eq i32 %conv9, 112
  br i1 %cmp10, label %if.then12, label %if.end35

if.then12:                                        ; preds = %lor.lhs.false, %if.then3
  %11 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head13 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %11, i32 0, i32 1
  %12 = load ptr, ptr %head13, align 8, !tbaa !278
  %field14 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %12, i32 0, i32 0
  %13 = load ptr, ptr %field14, align 8, !tbaa !271
  %type15 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %13, i32 0, i32 0
  %14 = load ptr, ptr %type15, align 8, !tbaa !267
  %ndim16 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %14, i32 0, i32 4
  %15 = load i32, ptr %ndim16, align 8, !tbaa !263
  %cmp17 = icmp eq i32 %15, 1
  %conv18 = zext i1 %cmp17 to i32
  %conv19 = trunc i32 %conv18 to i8
  %16 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_valid_array = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %16, i32 0, i32 10
  store i8 %conv19, ptr %is_valid_array, align 1, !tbaa !286
  store i32 1, ptr %ndim, align 4, !tbaa !9
  %17 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_count = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %17, i32 0, i32 4
  %18 = load i64, ptr %enc_count, align 8, !tbaa !283
  %19 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head20 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %19, i32 0, i32 1
  %20 = load ptr, ptr %head20, align 8, !tbaa !278
  %field21 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %20, i32 0, i32 0
  %21 = load ptr, ptr %field21, align 8, !tbaa !271
  %type22 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %21, i32 0, i32 0
  %22 = load ptr, ptr %type22, align 8, !tbaa !267
  %arraysize23 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %22, i32 0, i32 3
  %arrayidx24 = getelementptr [8 x i64], ptr %arraysize23, i64 0, i64 0
  %23 = load i64, ptr %arrayidx24, align 8, !tbaa !27
  %cmp25 = icmp ne i64 %18, %23
  br i1 %cmp25, label %if.then27, label %if.end34

if.then27:                                        ; preds = %if.then12
  %24 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %25 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head28 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %25, i32 0, i32 1
  %26 = load ptr, ptr %head28, align 8, !tbaa !278
  %field29 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %26, i32 0, i32 0
  %27 = load ptr, ptr %field29, align 8, !tbaa !271
  %type30 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %27, i32 0, i32 0
  %28 = load ptr, ptr %type30, align 8, !tbaa !267
  %arraysize31 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %28, i32 0, i32 3
  %arrayidx32 = getelementptr [8 x i64], ptr %arraysize31, i64 0, i64 0
  %29 = load i64, ptr %arrayidx32, align 8, !tbaa !27
  %30 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_count33 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %30, i32 0, i32 4
  %31 = load i64, ptr %enc_count33, align 8, !tbaa !283
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %24, ptr noundef @.str.258, i64 noundef %29, i64 noundef %31)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end34:                                         ; preds = %if.then12
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %lor.lhs.false
  %32 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_valid_array36 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %32, i32 0, i32 10
  %33 = load i8, ptr %is_valid_array36, align 1, !tbaa !286
  %tobool37 = icmp ne i8 %33, 0
  br i1 %tobool37, label %if.end44, label %if.then38

if.then38:                                        ; preds = %if.end35
  %34 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %35 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head39 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %35, i32 0, i32 1
  %36 = load ptr, ptr %head39, align 8, !tbaa !278
  %field40 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %36, i32 0, i32 0
  %37 = load ptr, ptr %field40, align 8, !tbaa !271
  %type41 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %37, i32 0, i32 0
  %38 = load ptr, ptr %type41, align 8, !tbaa !267
  %ndim42 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %38, i32 0, i32 4
  %39 = load i32, ptr %ndim42, align 8, !tbaa !263
  %40 = load i32, ptr %ndim, align 4, !tbaa !9
  %call43 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %34, ptr noundef @.str.259, i32 noundef %39, i32 noundef %40)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end44:                                         ; preds = %if.end35
  store i32 0, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end44
  %41 = load i32, ptr %i, align 4, !tbaa !9
  %42 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head45 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %42, i32 0, i32 1
  %43 = load ptr, ptr %head45, align 8, !tbaa !278
  %field46 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %43, i32 0, i32 0
  %44 = load ptr, ptr %field46, align 8, !tbaa !271
  %type47 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %44, i32 0, i32 0
  %45 = load ptr, ptr %type47, align 8, !tbaa !267
  %ndim48 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %45, i32 0, i32 4
  %46 = load i32, ptr %ndim48, align 8, !tbaa !263
  %cmp49 = icmp slt i32 %41, %46
  br i1 %cmp49, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %47 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head51 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %47, i32 0, i32 1
  %48 = load ptr, ptr %head51, align 8, !tbaa !278
  %field52 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %48, i32 0, i32 0
  %49 = load ptr, ptr %field52, align 8, !tbaa !271
  %type53 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %49, i32 0, i32 0
  %50 = load ptr, ptr %type53, align 8, !tbaa !267
  %arraysize54 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %50, i32 0, i32 3
  %51 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %51 to i64
  %arrayidx55 = getelementptr [8 x i64], ptr %arraysize54, i64 0, i64 %idxprom
  %52 = load i64, ptr %arrayidx55, align 8, !tbaa !27
  %53 = load i64, ptr %arraysize, align 8, !tbaa !27
  %mul = mul i64 %53, %52
  store i64 %mul, ptr %arraysize, align 8, !tbaa !27
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %54 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %54, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !294

for.end:                                          ; preds = %for.cond
  %55 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_valid_array56 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %55, i32 0, i32 10
  store i8 0, ptr %is_valid_array56, align 1, !tbaa !286
  %56 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_count57 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %56, i32 0, i32 4
  store i64 1, ptr %enc_count57, align 8, !tbaa !283
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then38, %if.then27
  call void @llvm.lifetime.end.p0(i64 4, ptr %ndim) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup237 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end59

if.end59:                                         ; preds = %cleanup.cont, %if.end
  %57 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type60 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %57, i32 0, i32 7
  %58 = load i8, ptr %enc_type60, align 4, !tbaa !284
  %59 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_complex = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %59, i32 0, i32 6
  %60 = load i32, ptr %is_complex, align 8, !tbaa !285
  %call61 = call signext i8 @__Pyx_BufFmt_TypeCharToGroup(i8 noundef signext %58, i32 noundef %60)
  store i8 %call61, ptr %group, align 1, !tbaa !29
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end59
  call void @llvm.lifetime.start.p0(i64 8, ptr %field62) #13
  %61 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head63 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %61, i32 0, i32 1
  %62 = load ptr, ptr %head63, align 8, !tbaa !278
  %field64 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %62, i32 0, i32 0
  %63 = load ptr, ptr %field64, align 8, !tbaa !271
  store ptr %63, ptr %field62, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %type65) #13
  %64 = load ptr, ptr %field62, align 8, !tbaa !5
  %type66 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %64, i32 0, i32 0
  %65 = load ptr, ptr %type66, align 8, !tbaa !267
  store ptr %65, ptr %type65, align 8, !tbaa !5
  %66 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_packmode = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %66, i32 0, i32 9
  %67 = load i8, ptr %enc_packmode, align 2, !tbaa !281
  %conv67 = sext i8 %67 to i32
  %cmp68 = icmp eq i32 %conv67, 64
  br i1 %cmp68, label %if.then75, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %do.body
  %68 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_packmode71 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %68, i32 0, i32 9
  %69 = load i8, ptr %enc_packmode71, align 2, !tbaa !281
  %conv72 = sext i8 %69 to i32
  %cmp73 = icmp eq i32 %conv72, 94
  br i1 %cmp73, label %if.then75, label %if.else

if.then75:                                        ; preds = %lor.lhs.false70, %do.body
  %70 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type76 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %70, i32 0, i32 7
  %71 = load i8, ptr %enc_type76, align 4, !tbaa !284
  %72 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_complex77 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %72, i32 0, i32 6
  %73 = load i32, ptr %is_complex77, align 8, !tbaa !285
  %call78 = call i64 @__Pyx_BufFmt_TypeCharToNativeSize(i8 noundef signext %71, i32 noundef %73)
  store i64 %call78, ptr %size, align 8, !tbaa !27
  br label %if.end82

if.else:                                          ; preds = %lor.lhs.false70
  %74 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type79 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %74, i32 0, i32 7
  %75 = load i8, ptr %enc_type79, align 4, !tbaa !284
  %76 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_complex80 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %76, i32 0, i32 6
  %77 = load i32, ptr %is_complex80, align 8, !tbaa !285
  %call81 = call i64 @__Pyx_BufFmt_TypeCharToStandardSize(i8 noundef signext %75, i32 noundef %77)
  store i64 %call81, ptr %size, align 8, !tbaa !27
  br label %if.end82

if.end82:                                         ; preds = %if.else, %if.then75
  %78 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_packmode83 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %78, i32 0, i32 9
  %79 = load i8, ptr %enc_packmode83, align 2, !tbaa !281
  %conv84 = sext i8 %79 to i32
  %cmp85 = icmp eq i32 %conv84, 64
  br i1 %cmp85, label %if.then87, label %if.end112

if.then87:                                        ; preds = %if.end82
  call void @llvm.lifetime.start.p0(i64 8, ptr %align_at) #13
  %80 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type88 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %80, i32 0, i32 7
  %81 = load i8, ptr %enc_type88, align 4, !tbaa !284
  %82 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_complex89 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %82, i32 0, i32 6
  %83 = load i32, ptr %is_complex89, align 8, !tbaa !285
  %call90 = call i64 @__Pyx_BufFmt_TypeCharToAlignment(i8 noundef signext %81, i32 noundef %83)
  store i64 %call90, ptr %align_at, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %align_mod_offset) #13
  %84 = load i64, ptr %align_at, align 8, !tbaa !27
  %cmp91 = icmp eq i64 %84, 0
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.then87
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup108

if.end94:                                         ; preds = %if.then87
  %85 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %fmt_offset = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %85, i32 0, i32 2
  %86 = load i64, ptr %fmt_offset, align 8, !tbaa !279
  %87 = load i64, ptr %align_at, align 8, !tbaa !27
  %rem = urem i64 %86, %87
  store i64 %rem, ptr %align_mod_offset, align 8, !tbaa !27
  %88 = load i64, ptr %align_mod_offset, align 8, !tbaa !27
  %cmp95 = icmp ugt i64 %88, 0
  br i1 %cmp95, label %if.then97, label %if.end99

if.then97:                                        ; preds = %if.end94
  %89 = load i64, ptr %align_at, align 8, !tbaa !27
  %90 = load i64, ptr %align_mod_offset, align 8, !tbaa !27
  %sub = sub i64 %89, %90
  %91 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %fmt_offset98 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %91, i32 0, i32 2
  %92 = load i64, ptr %fmt_offset98, align 8, !tbaa !279
  %add = add i64 %92, %sub
  store i64 %add, ptr %fmt_offset98, align 8, !tbaa !279
  br label %if.end99

if.end99:                                         ; preds = %if.then97, %if.end94
  %93 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %struct_alignment = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %93, i32 0, i32 5
  %94 = load i64, ptr %struct_alignment, align 8, !tbaa !287
  %cmp100 = icmp eq i64 %94, 0
  br i1 %cmp100, label %if.then102, label %if.end107

if.then102:                                       ; preds = %if.end99
  %95 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type103 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %95, i32 0, i32 7
  %96 = load i8, ptr %enc_type103, align 4, !tbaa !284
  %97 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_complex104 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %97, i32 0, i32 6
  %98 = load i32, ptr %is_complex104, align 8, !tbaa !285
  %call105 = call i64 @__Pyx_BufFmt_TypeCharToPadding(i8 noundef signext %96, i32 noundef %98)
  %99 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %struct_alignment106 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %99, i32 0, i32 5
  store i64 %call105, ptr %struct_alignment106, align 8, !tbaa !287
  br label %if.end107

if.end107:                                        ; preds = %if.then102, %if.end99
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup108

cleanup108:                                       ; preds = %if.end107, %if.then93
  call void @llvm.lifetime.end.p0(i64 8, ptr %align_mod_offset) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %align_at) #13
  %cleanup.dest110 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest110, label %cleanup229 [
    i32 0, label %cleanup.cont111
  ]

cleanup.cont111:                                  ; preds = %cleanup108
  br label %if.end112

if.end112:                                        ; preds = %cleanup.cont111, %if.end82
  %100 = load ptr, ptr %type65, align 8, !tbaa !5
  %size113 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %100, i32 0, i32 2
  %101 = load i64, ptr %size113, align 8, !tbaa !257
  %102 = load i64, ptr %size, align 8, !tbaa !27
  %cmp114 = icmp ne i64 %101, %102
  br i1 %cmp114, label %if.then121, label %lor.lhs.false116

lor.lhs.false116:                                 ; preds = %if.end112
  %103 = load ptr, ptr %type65, align 8, !tbaa !5
  %typegroup = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %103, i32 0, i32 5
  %104 = load i8, ptr %typegroup, align 4, !tbaa !261
  %conv117 = sext i8 %104 to i32
  %105 = load i8, ptr %group, align 1, !tbaa !29
  %conv118 = sext i8 %105 to i32
  %cmp119 = icmp ne i32 %conv117, %conv118
  br i1 %cmp119, label %if.then121, label %if.end156

if.then121:                                       ; preds = %lor.lhs.false116, %if.end112
  %106 = load ptr, ptr %type65, align 8, !tbaa !5
  %typegroup122 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %106, i32 0, i32 5
  %107 = load i8, ptr %typegroup122, align 4, !tbaa !261
  %conv123 = sext i8 %107 to i32
  %cmp124 = icmp eq i32 %conv123, 67
  br i1 %cmp124, label %land.lhs.true, label %if.end140

land.lhs.true:                                    ; preds = %if.then121
  %108 = load ptr, ptr %type65, align 8, !tbaa !5
  %fields = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %108, i32 0, i32 1
  %109 = load ptr, ptr %fields, align 8, !tbaa !266
  %cmp126 = icmp ne ptr %109, null
  br i1 %cmp126, label %if.then128, label %if.end140

if.then128:                                       ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %parent_offset) #13
  %110 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head129 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %110, i32 0, i32 1
  %111 = load ptr, ptr %head129, align 8, !tbaa !278
  %parent_offset130 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %111, i32 0, i32 1
  %112 = load i64, ptr %parent_offset130, align 8, !tbaa !273
  %113 = load ptr, ptr %field62, align 8, !tbaa !5
  %offset131 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %113, i32 0, i32 2
  %114 = load i64, ptr %offset131, align 8, !tbaa !269
  %add132 = add i64 %112, %114
  store i64 %add132, ptr %parent_offset, align 8, !tbaa !27
  %115 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head133 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %115, i32 0, i32 1
  %116 = load ptr, ptr %head133, align 8, !tbaa !278
  %incdec.ptr = getelementptr %struct.__Pyx_BufFmt_StackElem, ptr %116, i32 1
  store ptr %incdec.ptr, ptr %head133, align 8, !tbaa !278
  %117 = load ptr, ptr %type65, align 8, !tbaa !5
  %fields134 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %117, i32 0, i32 1
  %118 = load ptr, ptr %fields134, align 8, !tbaa !266
  %119 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head135 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %119, i32 0, i32 1
  %120 = load ptr, ptr %head135, align 8, !tbaa !278
  %field136 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %120, i32 0, i32 0
  store ptr %118, ptr %field136, align 8, !tbaa !271
  %121 = load i64, ptr %parent_offset, align 8, !tbaa !27
  %122 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head137 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %122, i32 0, i32 1
  %123 = load ptr, ptr %head137, align 8, !tbaa !278
  %parent_offset138 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %123, i32 0, i32 1
  store i64 %121, ptr %parent_offset138, align 8, !tbaa !273
  store i32 6, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %parent_offset) #13
  br label %cleanup229

if.end140:                                        ; preds = %land.lhs.true, %if.then121
  %124 = load ptr, ptr %type65, align 8, !tbaa !5
  %typegroup141 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %124, i32 0, i32 5
  %125 = load i8, ptr %typegroup141, align 4, !tbaa !261
  %conv142 = sext i8 %125 to i32
  %cmp143 = icmp eq i32 %conv142, 72
  br i1 %cmp143, label %land.lhs.true149, label %lor.lhs.false145

lor.lhs.false145:                                 ; preds = %if.end140
  %126 = load i8, ptr %group, align 1, !tbaa !29
  %conv146 = sext i8 %126 to i32
  %cmp147 = icmp eq i32 %conv146, 72
  br i1 %cmp147, label %land.lhs.true149, label %if.else154

land.lhs.true149:                                 ; preds = %lor.lhs.false145, %if.end140
  %127 = load ptr, ptr %type65, align 8, !tbaa !5
  %size150 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %127, i32 0, i32 2
  %128 = load i64, ptr %size150, align 8, !tbaa !257
  %129 = load i64, ptr %size, align 8, !tbaa !27
  %cmp151 = icmp eq i64 %128, %129
  br i1 %cmp151, label %if.then153, label %if.else154

if.then153:                                       ; preds = %land.lhs.true149
  br label %if.end155

if.else154:                                       ; preds = %land.lhs.true149, %lor.lhs.false145
  %130 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  call void @__Pyx_BufFmt_RaiseExpected(ptr noundef %130)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup229

if.end155:                                        ; preds = %if.then153
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %lor.lhs.false116
  %131 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head157 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %131, i32 0, i32 1
  %132 = load ptr, ptr %head157, align 8, !tbaa !278
  %parent_offset158 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %132, i32 0, i32 1
  %133 = load i64, ptr %parent_offset158, align 8, !tbaa !273
  %134 = load ptr, ptr %field62, align 8, !tbaa !5
  %offset159 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %134, i32 0, i32 2
  %135 = load i64, ptr %offset159, align 8, !tbaa !269
  %add160 = add i64 %133, %135
  store i64 %add160, ptr %offset, align 8, !tbaa !27
  %136 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %fmt_offset161 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %136, i32 0, i32 2
  %137 = load i64, ptr %fmt_offset161, align 8, !tbaa !279
  %138 = load i64, ptr %offset, align 8, !tbaa !27
  %cmp162 = icmp ne i64 %137, %138
  br i1 %cmp162, label %if.then164, label %if.end167

if.then164:                                       ; preds = %if.end156
  %139 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %140 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %fmt_offset165 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %140, i32 0, i32 2
  %141 = load i64, ptr %fmt_offset165, align 8, !tbaa !279
  %142 = load i64, ptr %offset, align 8, !tbaa !27
  %call166 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %139, ptr noundef @.str.260, i64 noundef %141, i64 noundef %142)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup229

if.end167:                                        ; preds = %if.end156
  %143 = load i64, ptr %size, align 8, !tbaa !27
  %144 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %fmt_offset168 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %144, i32 0, i32 2
  %145 = load i64, ptr %fmt_offset168, align 8, !tbaa !279
  %add169 = add i64 %145, %143
  store i64 %add169, ptr %fmt_offset168, align 8, !tbaa !279
  %146 = load i64, ptr %arraysize, align 8, !tbaa !27
  %tobool170 = icmp ne i64 %146, 0
  br i1 %tobool170, label %if.then171, label %if.end176

if.then171:                                       ; preds = %if.end167
  %147 = load i64, ptr %arraysize, align 8, !tbaa !27
  %sub172 = sub i64 %147, 1
  %148 = load i64, ptr %size, align 8, !tbaa !27
  %mul173 = mul i64 %sub172, %148
  %149 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %fmt_offset174 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %149, i32 0, i32 2
  %150 = load i64, ptr %fmt_offset174, align 8, !tbaa !279
  %add175 = add i64 %150, %mul173
  store i64 %add175, ptr %fmt_offset174, align 8, !tbaa !279
  br label %if.end176

if.end176:                                        ; preds = %if.then171, %if.end167
  %151 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_count177 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %151, i32 0, i32 4
  %152 = load i64, ptr %enc_count177, align 8, !tbaa !283
  %dec = add i64 %152, -1
  store i64 %dec, ptr %enc_count177, align 8, !tbaa !283
  br label %while.cond

while.cond:                                       ; preds = %cleanup226, %if.then194, %if.end176
  br label %while.body

while.body:                                       ; preds = %while.cond
  %153 = load ptr, ptr %field62, align 8, !tbaa !5
  %154 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %root = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %154, i32 0, i32 0
  %cmp178 = icmp eq ptr %153, %root
  br i1 %cmp178, label %if.then180, label %if.end187

if.then180:                                       ; preds = %while.body
  %155 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head181 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %155, i32 0, i32 1
  store ptr null, ptr %head181, align 8, !tbaa !278
  %156 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_count182 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %156, i32 0, i32 4
  %157 = load i64, ptr %enc_count182, align 8, !tbaa !283
  %cmp183 = icmp ne i64 %157, 0
  br i1 %cmp183, label %if.then185, label %if.end186

if.then185:                                       ; preds = %if.then180
  %158 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  call void @__Pyx_BufFmt_RaiseExpected(ptr noundef %158)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup229

if.end186:                                        ; preds = %if.then180
  br label %while.end

if.end187:                                        ; preds = %while.body
  %159 = load ptr, ptr %field62, align 8, !tbaa !5
  %incdec.ptr188 = getelementptr %struct.__Pyx_StructField_, ptr %159, i32 1
  store ptr %incdec.ptr188, ptr %field62, align 8, !tbaa !5
  %160 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head189 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %160, i32 0, i32 1
  %161 = load ptr, ptr %head189, align 8, !tbaa !278
  %field190 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %161, i32 0, i32 0
  store ptr %incdec.ptr188, ptr %field190, align 8, !tbaa !271
  %162 = load ptr, ptr %field62, align 8, !tbaa !5
  %type191 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %162, i32 0, i32 0
  %163 = load ptr, ptr %type191, align 8, !tbaa !267
  %cmp192 = icmp eq ptr %163, null
  br i1 %cmp192, label %if.then194, label %if.else199

if.then194:                                       ; preds = %if.end187
  %164 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head195 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %164, i32 0, i32 1
  %165 = load ptr, ptr %head195, align 8, !tbaa !278
  %incdec.ptr196 = getelementptr %struct.__Pyx_BufFmt_StackElem, ptr %165, i32 -1
  store ptr %incdec.ptr196, ptr %head195, align 8, !tbaa !278
  %166 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head197 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %166, i32 0, i32 1
  %167 = load ptr, ptr %head197, align 8, !tbaa !278
  %field198 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %167, i32 0, i32 0
  %168 = load ptr, ptr %field198, align 8, !tbaa !271
  store ptr %168, ptr %field62, align 8, !tbaa !5
  br label %while.cond

if.else199:                                       ; preds = %if.end187
  %169 = load ptr, ptr %field62, align 8, !tbaa !5
  %type200 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %169, i32 0, i32 0
  %170 = load ptr, ptr %type200, align 8, !tbaa !267
  %typegroup201 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %170, i32 0, i32 5
  %171 = load i8, ptr %typegroup201, align 4, !tbaa !261
  %conv202 = sext i8 %171 to i32
  %cmp203 = icmp eq i32 %conv202, 83
  br i1 %cmp203, label %if.then205, label %if.else228

if.then205:                                       ; preds = %if.else199
  call void @llvm.lifetime.start.p0(i64 8, ptr %parent_offset206) #13
  %172 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head207 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %172, i32 0, i32 1
  %173 = load ptr, ptr %head207, align 8, !tbaa !278
  %parent_offset208 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %173, i32 0, i32 1
  %174 = load i64, ptr %parent_offset208, align 8, !tbaa !273
  %175 = load ptr, ptr %field62, align 8, !tbaa !5
  %offset209 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %175, i32 0, i32 2
  %176 = load i64, ptr %offset209, align 8, !tbaa !269
  %add210 = add i64 %174, %176
  store i64 %add210, ptr %parent_offset206, align 8, !tbaa !27
  %177 = load ptr, ptr %field62, align 8, !tbaa !5
  %type211 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %177, i32 0, i32 0
  %178 = load ptr, ptr %type211, align 8, !tbaa !267
  %fields212 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %178, i32 0, i32 1
  %179 = load ptr, ptr %fields212, align 8, !tbaa !266
  %type213 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %179, i32 0, i32 0
  %180 = load ptr, ptr %type213, align 8, !tbaa !267
  %cmp214 = icmp eq ptr %180, null
  br i1 %cmp214, label %if.then216, label %if.end217

if.then216:                                       ; preds = %if.then205
  store i32 7, ptr %cleanup.dest.slot, align 4
  br label %cleanup226

if.end217:                                        ; preds = %if.then205
  %181 = load ptr, ptr %field62, align 8, !tbaa !5
  %type218 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %181, i32 0, i32 0
  %182 = load ptr, ptr %type218, align 8, !tbaa !267
  %fields219 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %182, i32 0, i32 1
  %183 = load ptr, ptr %fields219, align 8, !tbaa !266
  store ptr %183, ptr %field62, align 8, !tbaa !5
  %184 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head220 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %184, i32 0, i32 1
  %185 = load ptr, ptr %head220, align 8, !tbaa !278
  %incdec.ptr221 = getelementptr %struct.__Pyx_BufFmt_StackElem, ptr %185, i32 1
  store ptr %incdec.ptr221, ptr %head220, align 8, !tbaa !278
  %186 = load ptr, ptr %field62, align 8, !tbaa !5
  %187 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head222 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %187, i32 0, i32 1
  %188 = load ptr, ptr %head222, align 8, !tbaa !278
  %field223 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %188, i32 0, i32 0
  store ptr %186, ptr %field223, align 8, !tbaa !271
  %189 = load i64, ptr %parent_offset206, align 8, !tbaa !27
  %190 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head224 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %190, i32 0, i32 1
  %191 = load ptr, ptr %head224, align 8, !tbaa !278
  %parent_offset225 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %191, i32 0, i32 1
  store i64 %189, ptr %parent_offset225, align 8, !tbaa !273
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup226

cleanup226:                                       ; preds = %if.end217, %if.then216
  call void @llvm.lifetime.end.p0(i64 8, ptr %parent_offset206) #13
  %cleanup.dest227 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest227, label %unreachable [
    i32 7, label %while.cond
    i32 8, label %while.end
  ]

if.else228:                                       ; preds = %if.else199
  br label %while.end

while.end:                                        ; preds = %if.else228, %cleanup226, %if.end186
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup229

cleanup229:                                       ; preds = %while.end, %if.then185, %if.then164, %if.else154, %if.then128, %cleanup108
  call void @llvm.lifetime.end.p0(i64 8, ptr %type65) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %field62) #13
  %cleanup.dest231 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest231, label %cleanup237 [
    i32 0, label %cleanup.cont232
    i32 6, label %do.cond
  ]

cleanup.cont232:                                  ; preds = %cleanup229
  br label %do.cond

do.cond:                                          ; preds = %cleanup.cont232, %cleanup229
  %192 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_count233 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %192, i32 0, i32 4
  %193 = load i64, ptr %enc_count233, align 8, !tbaa !283
  %tobool234 = icmp ne i64 %193, 0
  br i1 %tobool234, label %do.body, label %do.end, !llvm.loop !295

do.end:                                           ; preds = %do.cond
  %194 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %enc_type235 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %194, i32 0, i32 7
  store i8 0, ptr %enc_type235, align 4, !tbaa !284
  %195 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_complex236 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %195, i32 0, i32 6
  store i32 0, ptr %is_complex236, align 8, !tbaa !285
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup237

cleanup237:                                       ; preds = %do.end, %cleanup229, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %arraysize) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %offset) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #13
  call void @llvm.lifetime.end.p0(i64 1, ptr %group) #13
  %196 = load i32, ptr %retval, align 4
  ret i32 %196

unreachable:                                      ; preds = %cleanup226
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_Is_Little_Endian() #3 {
entry:
  %S = alloca %union.anon.0, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr %S) #13
  store i32 16909060, ptr %S, align 4, !tbaa !29
  %arrayidx = getelementptr [4 x i8], ptr %S, i64 0, i64 0
  %0 = load i8, ptr %arrayidx, align 4, !tbaa !29
  %conv = zext i8 %0 to i32
  %cmp = icmp eq i32 %conv, 4
  %conv1 = zext i1 %cmp to i32
  call void @llvm.lifetime.end.p0(i64 4, ptr %S) #13
  ret i32 %conv1
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_BufFmt_RaiseUnexpectedChar(i8 noundef signext %ch) #0 {
entry:
  %ch.addr = alloca i8, align 1
  store i8 %ch, ptr %ch.addr, align 1, !tbaa !29
  %0 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %1 = load i8, ptr %ch.addr, align 1, !tbaa !29
  %conv = sext i8 %1 to i32
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.262, i32 noundef %conv)
  ret void
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_buffmt_parse_array(ptr noundef %ctx, ptr noundef %tsp) #0 {
entry:
  %retval = alloca ptr, align 8
  %ctx.addr = alloca ptr, align 8
  %tsp.addr = alloca ptr, align 8
  %ts = alloca ptr, align 8
  %i = alloca i32, align 4
  %number = alloca i32, align 4
  %ndim = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ctx, ptr %ctx.addr, align 8, !tbaa !5
  store ptr %tsp, ptr %tsp.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %ts) #13
  %0 = load ptr, ptr %tsp.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %0, align 8, !tbaa !5
  store ptr %1, ptr %ts, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  store i32 0, ptr %i, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %number) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %ndim) #13
  %2 = load ptr, ptr %ts, align 8, !tbaa !5
  %incdec.ptr = getelementptr i8, ptr %2, i32 1
  store ptr %incdec.ptr, ptr %ts, align 8, !tbaa !5
  %3 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_count = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %3, i32 0, i32 3
  %4 = load i64, ptr %new_count, align 8, !tbaa !282
  %cmp = icmp ne i64 %4, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %5, ptr noundef @.str.263)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_BufFmt_ProcessTypeChunk(ptr noundef %6)
  %cmp1 = icmp eq i32 %call, -1
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %7 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %7, i32 0, i32 1
  %8 = load ptr, ptr %head, align 8, !tbaa !278
  %field = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %8, i32 0, i32 0
  %9 = load ptr, ptr %field, align 8, !tbaa !271
  %type = getelementptr inbounds %struct.__Pyx_StructField_, ptr %9, i32 0, i32 0
  %10 = load ptr, ptr %type, align 8, !tbaa !267
  %ndim4 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %10, i32 0, i32 4
  %11 = load i32, ptr %ndim4, align 8, !tbaa !263
  store i32 %11, ptr %ndim, align 4, !tbaa !9
  br label %while.cond

while.cond:                                       ; preds = %if.end47, %sw.bb, %if.end3
  %12 = load ptr, ptr %ts, align 8, !tbaa !5
  %13 = load i8, ptr %12, align 1, !tbaa !29
  %conv = sext i8 %13 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %14 = load ptr, ptr %ts, align 8, !tbaa !5
  %15 = load i8, ptr %14, align 1, !tbaa !29
  %conv5 = sext i8 %15 to i32
  %cmp6 = icmp ne i32 %conv5, 41
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %16 = phi i1 [ false, %while.cond ], [ %cmp6, %land.rhs ]
  br i1 %16, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %17 = load ptr, ptr %ts, align 8, !tbaa !5
  %18 = load i8, ptr %17, align 1, !tbaa !29
  %conv8 = sext i8 %18 to i32
  switch i32 %conv8, label %sw.default [
    i32 32, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
    i32 10, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
  ]

sw.bb:                                            ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  br label %while.cond, !llvm.loop !296

sw.default:                                       ; preds = %while.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  %call9 = call i32 @__Pyx_BufFmt_ExpectNumber(ptr noundef %ts)
  store i32 %call9, ptr %number, align 4, !tbaa !9
  %19 = load i32, ptr %number, align 4, !tbaa !9
  %cmp10 = icmp eq i32 %19, -1
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %sw.epilog
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end13:                                         ; preds = %sw.epilog
  %20 = load i32, ptr %i, align 4, !tbaa !9
  %21 = load i32, ptr %ndim, align 4, !tbaa !9
  %cmp14 = icmp slt i32 %20, %21
  br i1 %cmp14, label %land.lhs.true, label %if.end30

land.lhs.true:                                    ; preds = %if.end13
  %22 = load i32, ptr %number, align 4, !tbaa !9
  %conv16 = sext i32 %22 to i64
  %23 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head17 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %23, i32 0, i32 1
  %24 = load ptr, ptr %head17, align 8, !tbaa !278
  %field18 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %24, i32 0, i32 0
  %25 = load ptr, ptr %field18, align 8, !tbaa !271
  %type19 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %25, i32 0, i32 0
  %26 = load ptr, ptr %type19, align 8, !tbaa !267
  %arraysize = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %26, i32 0, i32 3
  %27 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom = sext i32 %27 to i64
  %arrayidx = getelementptr [8 x i64], ptr %arraysize, i64 0, i64 %idxprom
  %28 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %cmp20 = icmp ne i64 %conv16, %28
  br i1 %cmp20, label %if.then22, label %if.end30

if.then22:                                        ; preds = %land.lhs.true
  %29 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %30 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head23 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %30, i32 0, i32 1
  %31 = load ptr, ptr %head23, align 8, !tbaa !278
  %field24 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %31, i32 0, i32 0
  %32 = load ptr, ptr %field24, align 8, !tbaa !271
  %type25 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %32, i32 0, i32 0
  %33 = load ptr, ptr %type25, align 8, !tbaa !267
  %arraysize26 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %33, i32 0, i32 3
  %34 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom27 = sext i32 %34 to i64
  %arrayidx28 = getelementptr [8 x i64], ptr %arraysize26, i64 0, i64 %idxprom27
  %35 = load i64, ptr %arrayidx28, align 8, !tbaa !27
  %36 = load i32, ptr %number, align 4, !tbaa !9
  %call29 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %29, ptr noundef @.str.264, i64 noundef %35, i32 noundef %36)
  store ptr %call29, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end30:                                         ; preds = %land.lhs.true, %if.end13
  %37 = load ptr, ptr %ts, align 8, !tbaa !5
  %38 = load i8, ptr %37, align 1, !tbaa !29
  %conv31 = sext i8 %38 to i32
  %cmp32 = icmp ne i32 %conv31, 44
  br i1 %cmp32, label %land.lhs.true34, label %if.end41

land.lhs.true34:                                  ; preds = %if.end30
  %39 = load ptr, ptr %ts, align 8, !tbaa !5
  %40 = load i8, ptr %39, align 1, !tbaa !29
  %conv35 = sext i8 %40 to i32
  %cmp36 = icmp ne i32 %conv35, 41
  br i1 %cmp36, label %if.then38, label %if.end41

if.then38:                                        ; preds = %land.lhs.true34
  %41 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %42 = load ptr, ptr %ts, align 8, !tbaa !5
  %43 = load i8, ptr %42, align 1, !tbaa !29
  %conv39 = sext i8 %43 to i32
  %call40 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %41, ptr noundef @.str.265, i32 noundef %conv39)
  store ptr %call40, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end41:                                         ; preds = %land.lhs.true34, %if.end30
  %44 = load ptr, ptr %ts, align 8, !tbaa !5
  %45 = load i8, ptr %44, align 1, !tbaa !29
  %conv42 = sext i8 %45 to i32
  %cmp43 = icmp eq i32 %conv42, 44
  br i1 %cmp43, label %if.then45, label %if.end47

if.then45:                                        ; preds = %if.end41
  %46 = load ptr, ptr %ts, align 8, !tbaa !5
  %incdec.ptr46 = getelementptr i8, ptr %46, i32 1
  store ptr %incdec.ptr46, ptr %ts, align 8, !tbaa !5
  br label %if.end47

if.end47:                                         ; preds = %if.then45, %if.end41
  %47 = load i32, ptr %i, align 4, !tbaa !9
  %inc = add i32 %47, 1
  store i32 %inc, ptr %i, align 4, !tbaa !9
  br label %while.cond, !llvm.loop !296

while.end:                                        ; preds = %land.end
  %48 = load i32, ptr %i, align 4, !tbaa !9
  %49 = load i32, ptr %ndim, align 4, !tbaa !9
  %cmp48 = icmp ne i32 %48, %49
  br i1 %cmp48, label %if.then50, label %if.end56

if.then50:                                        ; preds = %while.end
  %50 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %51 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %head51 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %51, i32 0, i32 1
  %52 = load ptr, ptr %head51, align 8, !tbaa !278
  %field52 = getelementptr inbounds %struct.__Pyx_BufFmt_StackElem, ptr %52, i32 0, i32 0
  %53 = load ptr, ptr %field52, align 8, !tbaa !271
  %type53 = getelementptr inbounds %struct.__Pyx_StructField_, ptr %53, i32 0, i32 0
  %54 = load ptr, ptr %type53, align 8, !tbaa !267
  %ndim54 = getelementptr inbounds %struct.__Pyx_TypeInfo, ptr %54, i32 0, i32 4
  %55 = load i32, ptr %ndim54, align 8, !tbaa !263
  %56 = load i32, ptr %i, align 4, !tbaa !9
  %call55 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %50, ptr noundef @.str.266, i32 noundef %55, i32 noundef %56)
  store ptr %call55, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end56:                                         ; preds = %while.end
  %57 = load ptr, ptr %ts, align 8, !tbaa !5
  %58 = load i8, ptr %57, align 1, !tbaa !29
  %tobool57 = icmp ne i8 %58, 0
  br i1 %tobool57, label %if.end59, label %if.then58

if.then58:                                        ; preds = %if.end56
  %59 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %59, ptr noundef @.str.267)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end59:                                         ; preds = %if.end56
  %60 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %is_valid_array = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %60, i32 0, i32 10
  store i8 1, ptr %is_valid_array, align 1, !tbaa !286
  %61 = load ptr, ptr %ctx.addr, align 8, !tbaa !5
  %new_count60 = getelementptr inbounds %struct.__Pyx_BufFmt_Context, ptr %61, i32 0, i32 3
  store i64 1, ptr %new_count60, align 8, !tbaa !282
  %62 = load ptr, ptr %ts, align 8, !tbaa !5
  %incdec.ptr61 = getelementptr i8, ptr %62, i32 1
  store ptr %incdec.ptr61, ptr %ts, align 8, !tbaa !5
  %63 = load ptr, ptr %tsp.addr, align 8, !tbaa !5
  store ptr %incdec.ptr61, ptr %63, align 8, !tbaa !5
  store ptr @_Py_NoneStruct, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end59, %if.then58, %if.then50, %if.then38, %if.then22, %if.then12, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %ndim) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %number) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %ts) #13
  %64 = load ptr, ptr %retval, align 8
  ret ptr %64
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_BufFmt_ExpectNumber(ptr noundef %ts) #0 {
entry:
  %ts.addr = alloca ptr, align 8
  %number = alloca i32, align 4
  store ptr %ts, ptr %ts.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %number) #13
  %0 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_BufFmt_ParseNumber(ptr noundef %0)
  store i32 %call, ptr %number, align 4, !tbaa !9
  %1 = load i32, ptr %number, align 4, !tbaa !9
  %cmp = icmp eq i32 %1, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %3 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %3, align 8, !tbaa !5
  %5 = load i8, ptr %4, align 1, !tbaa !29
  %conv = sext i8 %5 to i32
  %call1 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %2, ptr noundef @.str.268, i32 noundef %conv)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, ptr %number, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %number) #13
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_BufFmt_DescribeTypeChar(i8 noundef signext %ch, i32 noundef %is_complex) #0 {
entry:
  %retval = alloca ptr, align 8
  %ch.addr = alloca i8, align 1
  %is_complex.addr = alloca i32, align 4
  store i8 %ch, ptr %ch.addr, align 1, !tbaa !29
  store i32 %is_complex, ptr %is_complex.addr, align 4, !tbaa !9
  %0 = load i8, ptr %ch.addr, align 1, !tbaa !29
  %conv = sext i8 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 63, label %sw.bb
    i32 99, label %sw.bb1
    i32 98, label %sw.bb2
    i32 66, label %sw.bb3
    i32 104, label %sw.bb4
    i32 72, label %sw.bb5
    i32 105, label %sw.bb6
    i32 73, label %sw.bb7
    i32 108, label %sw.bb8
    i32 76, label %sw.bb9
    i32 113, label %sw.bb10
    i32 81, label %sw.bb11
    i32 102, label %sw.bb12
    i32 100, label %sw.bb13
    i32 103, label %sw.bb16
    i32 84, label %sw.bb19
    i32 79, label %sw.bb20
    i32 80, label %sw.bb21
    i32 115, label %sw.bb22
    i32 112, label %sw.bb22
    i32 0, label %sw.bb23
  ]

sw.bb:                                            ; preds = %entry
  store ptr @.str.235, ptr %retval, align 8
  br label %return

sw.bb1:                                           ; preds = %entry
  store ptr @.str.236, ptr %retval, align 8
  br label %return

sw.bb2:                                           ; preds = %entry
  store ptr @.str.237, ptr %retval, align 8
  br label %return

sw.bb3:                                           ; preds = %entry
  store ptr @.str.238, ptr %retval, align 8
  br label %return

sw.bb4:                                           ; preds = %entry
  store ptr @.str.239, ptr %retval, align 8
  br label %return

sw.bb5:                                           ; preds = %entry
  store ptr @.str.240, ptr %retval, align 8
  br label %return

sw.bb6:                                           ; preds = %entry
  store ptr @.str.241, ptr %retval, align 8
  br label %return

sw.bb7:                                           ; preds = %entry
  store ptr @.str.242, ptr %retval, align 8
  br label %return

sw.bb8:                                           ; preds = %entry
  store ptr @.str.243, ptr %retval, align 8
  br label %return

sw.bb9:                                           ; preds = %entry
  store ptr @.str.244, ptr %retval, align 8
  br label %return

sw.bb10:                                          ; preds = %entry
  store ptr @.str.245, ptr %retval, align 8
  br label %return

sw.bb11:                                          ; preds = %entry
  store ptr @.str.246, ptr %retval, align 8
  br label %return

sw.bb12:                                          ; preds = %entry
  %1 = load i32, ptr %is_complex.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  %2 = zext i1 %tobool to i64
  %cond = select i1 %tobool, ptr @.str.247, ptr @.str.248
  store ptr %cond, ptr %retval, align 8
  br label %return

sw.bb13:                                          ; preds = %entry
  %3 = load i32, ptr %is_complex.addr, align 4, !tbaa !9
  %tobool14 = icmp ne i32 %3, 0
  %4 = zext i1 %tobool14 to i64
  %cond15 = select i1 %tobool14, ptr @.str.249, ptr @.str.250
  store ptr %cond15, ptr %retval, align 8
  br label %return

sw.bb16:                                          ; preds = %entry
  %5 = load i32, ptr %is_complex.addr, align 4, !tbaa !9
  %tobool17 = icmp ne i32 %5, 0
  %6 = zext i1 %tobool17 to i64
  %cond18 = select i1 %tobool17, ptr @.str.251, ptr @.str.252
  store ptr %cond18, ptr %retval, align 8
  br label %return

sw.bb19:                                          ; preds = %entry
  store ptr @.str.253, ptr %retval, align 8
  br label %return

sw.bb20:                                          ; preds = %entry
  store ptr @.str.254, ptr %retval, align 8
  br label %return

sw.bb21:                                          ; preds = %entry
  store ptr @.str.255, ptr %retval, align 8
  br label %return

sw.bb22:                                          ; preds = %entry, %entry
  store ptr @.str.256, ptr %retval, align 8
  br label %return

sw.bb23:                                          ; preds = %entry
  store ptr @.str.231, ptr %retval, align 8
  br label %return

sw.default:                                       ; preds = %entry
  store ptr @.str.257, ptr %retval, align 8
  br label %return

return:                                           ; preds = %sw.default, %sw.bb23, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb16, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %7 = load ptr, ptr %retval, align 8
  ret ptr %7
}

; Function Attrs: nounwind uwtable
define internal signext i8 @__Pyx_BufFmt_TypeCharToGroup(i8 noundef signext %ch, i32 noundef %is_complex) #0 {
entry:
  %retval = alloca i8, align 1
  %ch.addr = alloca i8, align 1
  %is_complex.addr = alloca i32, align 4
  store i8 %ch, ptr %ch.addr, align 1, !tbaa !29
  store i32 %is_complex, ptr %is_complex.addr, align 4, !tbaa !9
  %0 = load i8, ptr %ch.addr, align 1, !tbaa !29
  %conv = sext i8 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 99, label %sw.bb
    i32 98, label %sw.bb1
    i32 104, label %sw.bb1
    i32 105, label %sw.bb1
    i32 108, label %sw.bb1
    i32 113, label %sw.bb1
    i32 115, label %sw.bb1
    i32 112, label %sw.bb1
    i32 63, label %sw.bb2
    i32 66, label %sw.bb2
    i32 72, label %sw.bb2
    i32 73, label %sw.bb2
    i32 76, label %sw.bb2
    i32 81, label %sw.bb2
    i32 102, label %sw.bb3
    i32 100, label %sw.bb3
    i32 103, label %sw.bb3
    i32 79, label %sw.bb5
    i32 80, label %sw.bb6
  ]

sw.bb:                                            ; preds = %entry
  store i8 72, ptr %retval, align 1
  br label %return

sw.bb1:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i8 73, ptr %retval, align 1
  br label %return

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i8 85, ptr %retval, align 1
  br label %return

sw.bb3:                                           ; preds = %entry, %entry, %entry
  %1 = load i32, ptr %is_complex.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  %2 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 67, i32 82
  %conv4 = trunc i32 %cond to i8
  store i8 %conv4, ptr %retval, align 1
  br label %return

sw.bb5:                                           ; preds = %entry
  store i8 79, ptr %retval, align 1
  br label %return

sw.bb6:                                           ; preds = %entry
  store i8 80, ptr %retval, align 1
  br label %return

sw.default:                                       ; preds = %entry
  %3 = load i8, ptr %ch.addr, align 1, !tbaa !29
  call void @__Pyx_BufFmt_RaiseUnexpectedChar(i8 noundef signext %3)
  store i8 0, ptr %retval, align 1
  br label %return

return:                                           ; preds = %sw.default, %sw.bb6, %sw.bb5, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %4 = load i8, ptr %retval, align 1
  ret i8 %4
}

; Function Attrs: nounwind uwtable
define internal i64 @__Pyx_BufFmt_TypeCharToNativeSize(i8 noundef signext %ch, i32 noundef %is_complex) #0 {
entry:
  %retval = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %is_complex.addr = alloca i32, align 4
  store i8 %ch, ptr %ch.addr, align 1, !tbaa !29
  store i32 %is_complex, ptr %is_complex.addr, align 4, !tbaa !9
  %0 = load i8, ptr %ch.addr, align 1, !tbaa !29
  %conv = sext i8 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 63, label %sw.bb
    i32 99, label %sw.bb
    i32 98, label %sw.bb
    i32 66, label %sw.bb
    i32 115, label %sw.bb
    i32 112, label %sw.bb
    i32 104, label %sw.bb1
    i32 72, label %sw.bb1
    i32 105, label %sw.bb2
    i32 73, label %sw.bb2
    i32 108, label %sw.bb3
    i32 76, label %sw.bb3
    i32 113, label %sw.bb4
    i32 81, label %sw.bb4
    i32 102, label %sw.bb5
    i32 100, label %sw.bb7
    i32 103, label %sw.bb12
    i32 79, label %sw.bb17
    i32 80, label %sw.bb17
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i64 1, ptr %retval, align 8
  br label %return

sw.bb1:                                           ; preds = %entry, %entry
  store i64 2, ptr %retval, align 8
  br label %return

sw.bb2:                                           ; preds = %entry, %entry
  store i64 4, ptr %retval, align 8
  br label %return

sw.bb3:                                           ; preds = %entry, %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.bb4:                                           ; preds = %entry, %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.bb5:                                           ; preds = %entry
  %1 = load i32, ptr %is_complex.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  %2 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 2, i32 1
  %conv6 = sext i32 %cond to i64
  %mul = mul i64 4, %conv6
  store i64 %mul, ptr %retval, align 8
  br label %return

sw.bb7:                                           ; preds = %entry
  %3 = load i32, ptr %is_complex.addr, align 4, !tbaa !9
  %tobool8 = icmp ne i32 %3, 0
  %4 = zext i1 %tobool8 to i64
  %cond9 = select i1 %tobool8, i32 2, i32 1
  %conv10 = sext i32 %cond9 to i64
  %mul11 = mul i64 8, %conv10
  store i64 %mul11, ptr %retval, align 8
  br label %return

sw.bb12:                                          ; preds = %entry
  %5 = load i32, ptr %is_complex.addr, align 4, !tbaa !9
  %tobool13 = icmp ne i32 %5, 0
  %6 = zext i1 %tobool13 to i64
  %cond14 = select i1 %tobool13, i32 2, i32 1
  %conv15 = sext i32 %cond14 to i64
  %mul16 = mul i64 16, %conv15
  store i64 %mul16, ptr %retval, align 8
  br label %return

sw.bb17:                                          ; preds = %entry, %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.default:                                       ; preds = %entry
  %7 = load i8, ptr %ch.addr, align 1, !tbaa !29
  call void @__Pyx_BufFmt_RaiseUnexpectedChar(i8 noundef signext %7)
  store i64 0, ptr %retval, align 8
  br label %return

return:                                           ; preds = %sw.default, %sw.bb17, %sw.bb12, %sw.bb7, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %8 = load i64, ptr %retval, align 8
  ret i64 %8
}

; Function Attrs: nounwind uwtable
define internal i64 @__Pyx_BufFmt_TypeCharToStandardSize(i8 noundef signext %ch, i32 noundef %is_complex) #0 {
entry:
  %retval = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %is_complex.addr = alloca i32, align 4
  store i8 %ch, ptr %ch.addr, align 1, !tbaa !29
  store i32 %is_complex, ptr %is_complex.addr, align 4, !tbaa !9
  %0 = load i8, ptr %ch.addr, align 1, !tbaa !29
  %conv = sext i8 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 63, label %sw.bb
    i32 99, label %sw.bb
    i32 98, label %sw.bb
    i32 66, label %sw.bb
    i32 115, label %sw.bb
    i32 112, label %sw.bb
    i32 104, label %sw.bb1
    i32 72, label %sw.bb1
    i32 105, label %sw.bb2
    i32 73, label %sw.bb2
    i32 108, label %sw.bb2
    i32 76, label %sw.bb2
    i32 113, label %sw.bb3
    i32 81, label %sw.bb3
    i32 102, label %sw.bb4
    i32 100, label %sw.bb6
    i32 103, label %sw.bb10
    i32 79, label %sw.bb11
    i32 80, label %sw.bb11
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i64 1, ptr %retval, align 8
  br label %return

sw.bb1:                                           ; preds = %entry, %entry
  store i64 2, ptr %retval, align 8
  br label %return

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry
  store i64 4, ptr %retval, align 8
  br label %return

sw.bb3:                                           ; preds = %entry, %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.bb4:                                           ; preds = %entry
  %1 = load i32, ptr %is_complex.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  %2 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 8, i32 4
  %conv5 = sext i32 %cond to i64
  store i64 %conv5, ptr %retval, align 8
  br label %return

sw.bb6:                                           ; preds = %entry
  %3 = load i32, ptr %is_complex.addr, align 4, !tbaa !9
  %tobool7 = icmp ne i32 %3, 0
  %4 = zext i1 %tobool7 to i64
  %cond8 = select i1 %tobool7, i32 16, i32 8
  %conv9 = sext i32 %cond8 to i64
  store i64 %conv9, ptr %retval, align 8
  br label %return

sw.bb10:                                          ; preds = %entry
  %5 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %5, ptr noundef @.str.261)
  store i64 0, ptr %retval, align 8
  br label %return

sw.bb11:                                          ; preds = %entry, %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.default:                                       ; preds = %entry
  %6 = load i8, ptr %ch.addr, align 1, !tbaa !29
  call void @__Pyx_BufFmt_RaiseUnexpectedChar(i8 noundef signext %6)
  store i64 0, ptr %retval, align 8
  br label %return

return:                                           ; preds = %sw.default, %sw.bb11, %sw.bb10, %sw.bb6, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %7 = load i64, ptr %retval, align 8
  ret i64 %7
}

; Function Attrs: nounwind uwtable
define internal i64 @__Pyx_BufFmt_TypeCharToAlignment(i8 noundef signext %ch, i32 noundef %is_complex) #0 {
entry:
  %retval = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %is_complex.addr = alloca i32, align 4
  store i8 %ch, ptr %ch.addr, align 1, !tbaa !29
  store i32 %is_complex, ptr %is_complex.addr, align 4, !tbaa !9
  %0 = load i8, ptr %ch.addr, align 1, !tbaa !29
  %conv = sext i8 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 63, label %sw.bb
    i32 99, label %sw.bb
    i32 98, label %sw.bb
    i32 66, label %sw.bb
    i32 115, label %sw.bb
    i32 112, label %sw.bb
    i32 104, label %sw.bb1
    i32 72, label %sw.bb1
    i32 105, label %sw.bb2
    i32 73, label %sw.bb2
    i32 108, label %sw.bb3
    i32 76, label %sw.bb3
    i32 113, label %sw.bb4
    i32 81, label %sw.bb4
    i32 102, label %sw.bb5
    i32 100, label %sw.bb6
    i32 103, label %sw.bb7
    i32 80, label %sw.bb8
    i32 79, label %sw.bb8
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i64 1, ptr %retval, align 8
  br label %return

sw.bb1:                                           ; preds = %entry, %entry
  store i64 2, ptr %retval, align 8
  br label %return

sw.bb2:                                           ; preds = %entry, %entry
  store i64 4, ptr %retval, align 8
  br label %return

sw.bb3:                                           ; preds = %entry, %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.bb4:                                           ; preds = %entry, %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.bb5:                                           ; preds = %entry
  store i64 4, ptr %retval, align 8
  br label %return

sw.bb6:                                           ; preds = %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.bb7:                                           ; preds = %entry
  store i64 16, ptr %retval, align 8
  br label %return

sw.bb8:                                           ; preds = %entry, %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.default:                                       ; preds = %entry
  %1 = load i8, ptr %ch.addr, align 1, !tbaa !29
  call void @__Pyx_BufFmt_RaiseUnexpectedChar(i8 noundef signext %1)
  store i64 0, ptr %retval, align 8
  br label %return

return:                                           ; preds = %sw.default, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %2 = load i64, ptr %retval, align 8
  ret i64 %2
}

; Function Attrs: nounwind uwtable
define internal i64 @__Pyx_BufFmt_TypeCharToPadding(i8 noundef signext %ch, i32 noundef %is_complex) #0 {
entry:
  %retval = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %is_complex.addr = alloca i32, align 4
  store i8 %ch, ptr %ch.addr, align 1, !tbaa !29
  store i32 %is_complex, ptr %is_complex.addr, align 4, !tbaa !9
  %0 = load i8, ptr %ch.addr, align 1, !tbaa !29
  %conv = sext i8 %0 to i32
  switch i32 %conv, label %sw.default [
    i32 63, label %sw.bb
    i32 99, label %sw.bb
    i32 98, label %sw.bb
    i32 66, label %sw.bb
    i32 115, label %sw.bb
    i32 112, label %sw.bb
    i32 104, label %sw.bb1
    i32 72, label %sw.bb1
    i32 105, label %sw.bb2
    i32 73, label %sw.bb2
    i32 108, label %sw.bb3
    i32 76, label %sw.bb3
    i32 113, label %sw.bb4
    i32 81, label %sw.bb4
    i32 102, label %sw.bb5
    i32 100, label %sw.bb6
    i32 103, label %sw.bb7
    i32 80, label %sw.bb8
    i32 79, label %sw.bb8
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i64 1, ptr %retval, align 8
  br label %return

sw.bb1:                                           ; preds = %entry, %entry
  store i64 2, ptr %retval, align 8
  br label %return

sw.bb2:                                           ; preds = %entry, %entry
  store i64 4, ptr %retval, align 8
  br label %return

sw.bb3:                                           ; preds = %entry, %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.bb4:                                           ; preds = %entry, %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.bb5:                                           ; preds = %entry
  store i64 4, ptr %retval, align 8
  br label %return

sw.bb6:                                           ; preds = %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.bb7:                                           ; preds = %entry
  store i64 16, ptr %retval, align 8
  br label %return

sw.bb8:                                           ; preds = %entry, %entry
  store i64 8, ptr %retval, align 8
  br label %return

sw.default:                                       ; preds = %entry
  %1 = load i8, ptr %ch.addr, align 1, !tbaa !29
  call void @__Pyx_BufFmt_RaiseUnexpectedChar(i8 noundef signext %1)
  store i64 0, ptr %retval, align 8
  br label %return

return:                                           ; preds = %sw.default, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %2 = load i64, ptr %retval, align 8
  ret i64 %2
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_BufFmt_ParseNumber(ptr noundef %ts) #0 {
entry:
  %retval = alloca i32, align 4
  %ts.addr = alloca ptr, align 8
  %count = alloca i32, align 4
  %t = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %ts, ptr %ts.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %count) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %t) #13
  %0 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %0, align 8, !tbaa !5
  store ptr %1, ptr %t, align 8, !tbaa !5
  %2 = load ptr, ptr %t, align 8, !tbaa !5
  %3 = load i8, ptr %2, align 1, !tbaa !29
  %conv = sext i8 %3 to i32
  %cmp = icmp slt i32 %conv, 48
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load ptr, ptr %t, align 8, !tbaa !5
  %5 = load i8, ptr %4, align 1, !tbaa !29
  %conv2 = sext i8 %5 to i32
  %cmp3 = icmp sgt i32 %conv2, 57
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.else:                                          ; preds = %lor.lhs.false
  %6 = load ptr, ptr %t, align 8, !tbaa !5
  %incdec.ptr = getelementptr i8, ptr %6, i32 1
  store ptr %incdec.ptr, ptr %t, align 8, !tbaa !5
  %7 = load i8, ptr %6, align 1, !tbaa !29
  %conv5 = sext i8 %7 to i32
  %sub = sub i32 %conv5, 48
  store i32 %sub, ptr %count, align 4, !tbaa !9
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.else
  %8 = load ptr, ptr %t, align 8, !tbaa !5
  %9 = load i8, ptr %8, align 1, !tbaa !29
  %conv6 = sext i8 %9 to i32
  %cmp7 = icmp sge i32 %conv6, 48
  br i1 %cmp7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %10 = load ptr, ptr %t, align 8, !tbaa !5
  %11 = load i8, ptr %10, align 1, !tbaa !29
  %conv9 = sext i8 %11 to i32
  %cmp10 = icmp sle i32 %conv9, 57
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %cmp10, %land.rhs ]
  br i1 %12, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %13 = load i32, ptr %count, align 4, !tbaa !9
  %mul = mul i32 %13, 10
  store i32 %mul, ptr %count, align 4, !tbaa !9
  %14 = load ptr, ptr %t, align 8, !tbaa !5
  %incdec.ptr12 = getelementptr i8, ptr %14, i32 1
  store ptr %incdec.ptr12, ptr %t, align 8, !tbaa !5
  %15 = load i8, ptr %14, align 1, !tbaa !29
  %conv13 = sext i8 %15 to i32
  %sub14 = sub i32 %conv13, 48
  %16 = load i32, ptr %count, align 4, !tbaa !9
  %add = add i32 %16, %sub14
  store i32 %add, ptr %count, align 4, !tbaa !9
  br label %while.cond, !llvm.loop !297

while.end:                                        ; preds = %land.end
  br label %if.end

if.end:                                           ; preds = %while.end
  %17 = load ptr, ptr %t, align 8, !tbaa !5
  %18 = load ptr, ptr %ts.addr, align 8, !tbaa !5
  store ptr %17, ptr %18, align 8, !tbaa !5
  %19 = load i32, ptr %count, align 4, !tbaa !9
  store i32 %19, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %t) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %count) #13
  %20 = load i32, ptr %retval, align 4
  ret i32 %20
}

declare ptr @PyEval_SaveThread() #1

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_4_minibatch_update_dense.omp_outlined(ptr noalias noundef %.global_tid., ptr noalias noundef %.bound_tid., ptr noundef nonnull align 4 dereferenceable(4) %__pyx_v_n_samples, ptr noundef nonnull align 4 dereferenceable(4) %__pyx_v_n_clusters, ptr noundef nonnull align 4 dereferenceable(4) %__pyx_v_cluster_idx, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_X, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_sample_weight, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_centers_old, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_centers_new, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_weight_sums, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_labels) #11 {
entry:
  %.global_tid..addr = alloca ptr, align 8
  %.bound_tid..addr = alloca ptr, align 8
  %__pyx_v_n_samples.addr = alloca ptr, align 8
  %__pyx_v_n_clusters.addr = alloca ptr, align 8
  %__pyx_v_cluster_idx.addr = alloca ptr, align 8
  %__pyx_v_X.addr = alloca ptr, align 8
  %__pyx_v_sample_weight.addr = alloca ptr, align 8
  %__pyx_v_centers_old.addr = alloca ptr, align 8
  %__pyx_v_centers_new.addr = alloca ptr, align 8
  %__pyx_v_weight_sums.addr = alloca ptr, align 8
  %__pyx_v_labels.addr = alloca ptr, align 8
  %__pyx_v_indices = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %.omp.iv = alloca i32, align 4
  %tmp = alloca i32, align 4
  %.capture_expr. = alloca i32, align 4
  %.capture_expr.3 = alloca i32, align 4
  %__pyx_t_27 = alloca i32, align 4
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %__pyx_v_cluster_idx10 = alloca i32, align 4
  %__pyx_t_211 = alloca i32, align 4
  store ptr %.global_tid., ptr %.global_tid..addr, align 8, !tbaa !5
  store ptr %.bound_tid., ptr %.bound_tid..addr, align 8, !tbaa !5
  store ptr %__pyx_v_n_samples, ptr %__pyx_v_n_samples.addr, align 8, !tbaa !5
  store ptr %__pyx_v_n_clusters, ptr %__pyx_v_n_clusters.addr, align 8, !tbaa !5
  store ptr %__pyx_v_cluster_idx, ptr %__pyx_v_cluster_idx.addr, align 8, !tbaa !5
  store ptr %__pyx_v_X, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  store ptr %__pyx_v_sample_weight, ptr %__pyx_v_sample_weight.addr, align 8, !tbaa !5
  store ptr %__pyx_v_centers_old, ptr %__pyx_v_centers_old.addr, align 8, !tbaa !5
  store ptr %__pyx_v_centers_new, ptr %__pyx_v_centers_new.addr, align 8, !tbaa !5
  store ptr %__pyx_v_weight_sums, ptr %__pyx_v_weight_sums.addr, align 8, !tbaa !5
  store ptr %__pyx_v_labels, ptr %__pyx_v_labels.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_n_samples.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v_n_clusters.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_v_cluster_idx.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_v_sample_weight.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_v_centers_old.addr, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_v_centers_new.addr, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_v_weight_sums.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_v_labels.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  store ptr inttoptr (i64 1 to ptr), ptr %__pyx_v_indices, align 8, !tbaa !5
  %9 = load i32, ptr %0, align 4, !tbaa !9
  %conv = sext i32 %9 to i64
  %mul = mul i64 %conv, 4
  %call = call noalias ptr @malloc(i64 noundef %mul) #17
  store ptr %call, ptr %__pyx_v_indices, align 8, !tbaa !5
  %10 = load i32, ptr %1, align 4, !tbaa !9
  store i32 %10, ptr %__pyx_t_1, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %sub = sub i32 %11, 0
  %add = add i32 %sub, 1
  %sub1 = sub i32 %add, 1
  %div = sdiv i32 %sub1, 1
  store i32 %div, ptr %__pyx_t_3, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp = icmp sgt i32 %12, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.iv) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %.capture_expr.) #13
  %13 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %13, ptr %.capture_expr., align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.capture_expr.3) #13
  %14 = load i32, ptr %.capture_expr., align 4, !tbaa !9
  %sub4 = sub i32 %14, 0
  %div5 = sdiv i32 %sub4, 1
  %sub6 = sub i32 %div5, 1
  store i32 %sub6, ptr %.capture_expr.3, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_27) #13
  store i32 0, ptr %__pyx_t_27, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_27) #13
  %15 = load i32, ptr %.capture_expr., align 4, !tbaa !9
  %cmp8 = icmp slt i32 0, %15
  br i1 %cmp8, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.lb) #13
  store i32 0, ptr %.omp.lb, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.ub) #13
  %16 = load i32, ptr %.capture_expr.3, align 4, !tbaa !9
  store i32 %16, ptr %.omp.ub, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.stride) #13
  store i32 1, ptr %.omp.stride, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.is_last) #13
  store i32 0, ptr %.omp.is_last, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_cluster_idx10) #13
  %17 = load i32, ptr %2, align 4, !tbaa !9
  store i32 %17, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  %18 = load ptr, ptr %.global_tid..addr, align 8
  %19 = load i32, ptr %18, align 4, !tbaa !9
  call void @__kmpc_barrier(ptr @1, i32 %19)
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_211) #13
  %20 = load ptr, ptr %.global_tid..addr, align 8
  %21 = load i32, ptr %20, align 4, !tbaa !9
  call void @__kmpc_for_static_init_4(ptr @2, i32 %21, i32 34, ptr %.omp.is_last, ptr %.omp.lb, ptr %.omp.ub, ptr %.omp.stride, i32 1, i32 1)
  %22 = load i32, ptr %.omp.ub, align 4, !tbaa !9
  %23 = load i32, ptr %.capture_expr.3, align 4, !tbaa !9
  %cmp12 = icmp sgt i32 %22, %23
  br i1 %cmp12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %omp.precond.then
  %24 = load i32, ptr %.capture_expr.3, align 4, !tbaa !9
  br label %cond.end

cond.false:                                       ; preds = %omp.precond.then
  %25 = load i32, ptr %.omp.ub, align 4, !tbaa !9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %24, %cond.true ], [ %25, %cond.false ]
  store i32 %cond, ptr %.omp.ub, align 4, !tbaa !9
  %26 = load i32, ptr %.omp.lb, align 4, !tbaa !9
  store i32 %26, ptr %.omp.iv, align 4, !tbaa !9
  br label %omp.inner.for.cond

omp.inner.for.cond:                               ; preds = %omp.inner.for.inc, %cond.end
  %27 = load i32, ptr %.omp.iv, align 4, !tbaa !9
  %28 = load i32, ptr %.omp.ub, align 4, !tbaa !9
  %cmp14 = icmp sle i32 %27, %28
  br i1 %cmp14, label %omp.inner.for.body, label %omp.inner.for.cond.cleanup

omp.inner.for.cond.cleanup:                       ; preds = %omp.inner.for.cond
  br label %omp.inner.for.end

omp.inner.for.body:                               ; preds = %omp.inner.for.cond
  %29 = load i32, ptr %.omp.iv, align 4, !tbaa !9
  %mul16 = mul i32 %29, 1
  %add17 = add i32 0, %mul16
  store i32 %add17, ptr %__pyx_t_211, align 4, !tbaa !9
  %30 = load i32, ptr %__pyx_t_211, align 4, !tbaa !9
  %mul18 = mul i32 1, %30
  %add19 = add i32 0, %mul18
  store i32 %add19, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  %32 = load ptr, ptr %__pyx_v_indices, align 8, !tbaa !5
  call void @__pyx_fuse_0__pyx_f_7sklearn_7cluster_18_k_means_minibatch_update_center_dense(i32 noundef %31, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %3, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %4, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %5, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %6, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %7, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %8, ptr noundef %32)
  br label %omp.body.continue

omp.body.continue:                                ; preds = %omp.inner.for.body
  br label %omp.inner.for.inc

omp.inner.for.inc:                                ; preds = %omp.body.continue
  %33 = load i32, ptr %.omp.iv, align 4, !tbaa !9
  %add20 = add i32 %33, 1
  store i32 %add20, ptr %.omp.iv, align 4, !tbaa !9
  br label %omp.inner.for.cond

omp.inner.for.end:                                ; preds = %omp.inner.for.cond.cleanup
  br label %omp.loop.exit

omp.loop.exit:                                    ; preds = %omp.inner.for.end
  %34 = load ptr, ptr %.global_tid..addr, align 8
  %35 = load i32, ptr %34, align 4, !tbaa !9
  call void @__kmpc_for_static_fini(ptr @2, i32 %35)
  %36 = load i32, ptr %.omp.is_last, align 4, !tbaa !9
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %.omp.lastprivate.then, label %.omp.lastprivate.done

.omp.lastprivate.then:                            ; preds = %omp.loop.exit
  %38 = load i32, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  store i32 %38, ptr %2, align 4, !tbaa !9
  br label %.omp.lastprivate.done

.omp.lastprivate.done:                            ; preds = %.omp.lastprivate.then, %omp.loop.exit
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_211) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_cluster_idx10) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.is_last) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.stride) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.ub) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.lb) #13
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %.omp.lastprivate.done, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %.capture_expr.3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.capture_expr.) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.iv) #13
  %39 = load ptr, ptr %.global_tid..addr, align 8
  %40 = load i32, ptr %39, align 4, !tbaa !9
  call void @__kmpc_barrier(ptr @1, i32 %40)
  br label %if.end

if.end:                                           ; preds = %omp.precond.end, %entry
  %41 = load ptr, ptr %__pyx_v_indices, align 8, !tbaa !5
  call void @free(ptr noundef %41) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_indices) #13
  ret void
}

; Function Attrs: convergent nounwind
declare void @__kmpc_barrier(ptr, i32) #12

; Function Attrs: nounwind
declare void @__kmpc_for_static_init_4(ptr, i32, i32, ptr, ptr, ptr, ptr, i32, i32) #13

; Function Attrs: nounwind uwtable
define internal void @__pyx_fuse_0__pyx_f_7sklearn_7cluster_18_k_means_minibatch_update_center_dense(i32 noundef %__pyx_v_cluster_idx, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_X, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_sample_weight, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_old, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_new, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_weight_sums, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_labels, ptr noundef %__pyx_v_indices) #0 {
entry:
  %__pyx_v_cluster_idx.addr = alloca i32, align 4
  %__pyx_v_indices.addr = alloca ptr, align 8
  %__pyx_v_n_samples = alloca i32, align 4
  %__pyx_v_n_features = alloca i32, align 4
  %__pyx_v_alpha = alloca float, align 4
  %__pyx_v_n_indices = alloca i32, align 4
  %__pyx_v_k = alloca i32, align 4
  %__pyx_v_sample_idx = alloca i32, align 4
  %__pyx_v_feature_idx = alloca i32, align 4
  %__pyx_v_wsum = alloca float, align 4
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i64, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca i64, align 8
  %__pyx_t_7 = alloca i64, align 8
  %__pyx_t_8 = alloca i64, align 8
  %__pyx_t_9 = alloca i64, align 8
  %__pyx_t_10 = alloca i32, align 4
  %__pyx_t_11 = alloca i32, align 4
  %__pyx_t_12 = alloca i32, align 4
  store i32 %__pyx_v_cluster_idx, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  store ptr %__pyx_v_indices, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_samples) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_features) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_alpha) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_indices) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_k) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_sample_idx) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_feature_idx) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_wsum) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_12) #13
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 2
  %arrayidx = getelementptr [8 x i64], ptr %shape, i64 0, i64 0
  %0 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %conv = trunc i64 %0 to i32
  store i32 %conv, ptr %__pyx_v_n_samples, align 4, !tbaa !9
  %shape1 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 2
  %arrayidx2 = getelementptr [8 x i64], ptr %shape1, i64 0, i64 1
  %1 = load i64, ptr %arrayidx2, align 8, !tbaa !27
  %conv3 = trunc i64 %1 to i32
  store i32 %conv3, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store float 0.000000e+00, ptr %__pyx_v_wsum, align 4, !tbaa !298
  store i32 0, ptr %__pyx_v_k, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_v_n_samples, align 4, !tbaa !9
  store i32 %2, ptr %__pyx_t_1, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %3, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %6, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv5 = sext i32 %7 to i64
  store i64 %conv5, ptr %__pyx_t_4, align 8, !tbaa !27
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_labels, i32 0, i32 1
  %8 = load ptr, ptr %data, align 8, !tbaa !188
  %9 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr = getelementptr i32, ptr %8, i64 %9
  %10 = load i32, ptr %add.ptr, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %cmp6 = icmp eq i32 %10, %11
  %conv7 = zext i1 %cmp6 to i32
  %cmp8 = icmp ne i32 %conv7, 0
  %conv9 = zext i1 %cmp8 to i32
  store i32 %conv9, ptr %__pyx_t_5, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %13 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %14 = load ptr, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  %15 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  %idxprom = sext i32 %15 to i64
  %arrayidx10 = getelementptr i32, ptr %14, i64 %idxprom
  store i32 %13, ptr %arrayidx10, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv11 = sext i32 %16 to i64
  store i64 %conv11, ptr %__pyx_t_4, align 8, !tbaa !27
  %17 = load float, ptr %__pyx_v_wsum, align 4, !tbaa !298
  %data12 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 1
  %18 = load ptr, ptr %data12, align 8, !tbaa !188
  %19 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr13 = getelementptr float, ptr %18, i64 %19
  %20 = load float, ptr %add.ptr13, align 4, !tbaa !298
  %add = fadd float %17, %20
  store float %add, ptr %__pyx_v_wsum, align 4, !tbaa !298
  %21 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  %add14 = add i32 %21, 1
  store i32 %add14, ptr %__pyx_v_k, align 4, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %22 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add15 = add i32 %22, 1
  store i32 %add15, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !300

for.end:                                          ; preds = %for.cond
  %23 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  store i32 %23, ptr %__pyx_v_n_indices, align 4, !tbaa !9
  %24 = load float, ptr %__pyx_v_wsum, align 4, !tbaa !298
  %conv16 = fpext float %24 to double
  %cmp17 = fcmp ogt double %conv16, 0.000000e+00
  %conv18 = zext i1 %cmp17 to i32
  %cmp19 = icmp ne i32 %conv18, 0
  %conv20 = zext i1 %cmp19 to i32
  store i32 %conv20, ptr %__pyx_t_5, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %tobool21 = icmp ne i32 %25, 0
  br i1 %tobool21, label %if.then22, label %if.end109

if.then22:                                        ; preds = %for.end
  %26 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %26, ptr %__pyx_t_1, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %27, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc45, %if.then22
  %28 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp24 = icmp slt i32 %28, %29
  br i1 %cmp24, label %for.body26, label %for.end47

for.body26:                                       ; preds = %for.cond23
  %30 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %30, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv27 = sext i32 %31 to i64
  store i64 %conv27, ptr %__pyx_t_4, align 8, !tbaa !27
  %32 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv28 = sext i32 %32 to i64
  store i64 %conv28, ptr %__pyx_t_6, align 8, !tbaa !27
  %33 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv29 = sext i32 %33 to i64
  store i64 %conv29, ptr %__pyx_t_7, align 8, !tbaa !27
  %34 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv30 = sext i32 %34 to i64
  store i64 %conv30, ptr %__pyx_t_8, align 8, !tbaa !27
  %35 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv31 = sext i32 %35 to i64
  store i64 %conv31, ptr %__pyx_t_9, align 8, !tbaa !27
  %data32 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 1
  %36 = load ptr, ptr %data32, align 8, !tbaa !188
  %37 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 3
  %arrayidx33 = getelementptr [8 x i64], ptr %strides, i64 0, i64 0
  %38 = load i64, ptr %arrayidx33, align 8, !tbaa !27
  %mul = mul i64 %37, %38
  %add.ptr34 = getelementptr i8, ptr %36, i64 %mul
  %39 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %add.ptr35 = getelementptr float, ptr %add.ptr34, i64 %39
  %40 = load float, ptr %add.ptr35, align 4, !tbaa !298
  %data36 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 1
  %41 = load ptr, ptr %data36, align 8, !tbaa !188
  %42 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr37 = getelementptr float, ptr %41, i64 %42
  %43 = load float, ptr %add.ptr37, align 4, !tbaa !298
  %mul38 = fmul float %40, %43
  %data39 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %44 = load ptr, ptr %data39, align 8, !tbaa !188
  %45 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %strides40 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx41 = getelementptr [8 x i64], ptr %strides40, i64 0, i64 0
  %46 = load i64, ptr %arrayidx41, align 8, !tbaa !27
  %mul42 = mul i64 %45, %46
  %add.ptr43 = getelementptr i8, ptr %44, i64 %mul42
  %47 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %add.ptr44 = getelementptr float, ptr %add.ptr43, i64 %47
  store float %mul38, ptr %add.ptr44, align 4, !tbaa !298
  br label %for.inc45

for.inc45:                                        ; preds = %for.body26
  %48 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add46 = add i32 %48, 1
  store i32 %add46, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond23, !llvm.loop !301

for.end47:                                        ; preds = %for.cond23
  %49 = load i32, ptr %__pyx_v_n_indices, align 4, !tbaa !9
  store i32 %49, ptr %__pyx_t_1, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %50, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond48

for.cond48:                                       ; preds = %for.inc81, %for.end47
  %51 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %52 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp49 = icmp slt i32 %51, %52
  br i1 %cmp49, label %for.body51, label %for.end83

for.body51:                                       ; preds = %for.cond48
  %53 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %53, ptr %__pyx_v_k, align 4, !tbaa !9
  %54 = load ptr, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  %55 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  %idxprom52 = sext i32 %55 to i64
  %arrayidx53 = getelementptr i32, ptr %54, i64 %idxprom52
  %56 = load i32, ptr %arrayidx53, align 4, !tbaa !9
  store i32 %56, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %57 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %57, ptr %__pyx_t_10, align 4, !tbaa !9
  %58 = load i32, ptr %__pyx_t_10, align 4, !tbaa !9
  store i32 %58, ptr %__pyx_t_11, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_12, align 4, !tbaa !9
  br label %for.cond54

for.cond54:                                       ; preds = %for.inc78, %for.body51
  %59 = load i32, ptr %__pyx_t_12, align 4, !tbaa !9
  %60 = load i32, ptr %__pyx_t_11, align 4, !tbaa !9
  %cmp55 = icmp slt i32 %59, %60
  br i1 %cmp55, label %for.body57, label %for.end80

for.body57:                                       ; preds = %for.cond54
  %61 = load i32, ptr %__pyx_t_12, align 4, !tbaa !9
  store i32 %61, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %62 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv58 = sext i32 %62 to i64
  store i64 %conv58, ptr %__pyx_t_7, align 8, !tbaa !27
  %63 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv59 = sext i32 %63 to i64
  store i64 %conv59, ptr %__pyx_t_6, align 8, !tbaa !27
  %64 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv60 = sext i32 %64 to i64
  store i64 %conv60, ptr %__pyx_t_4, align 8, !tbaa !27
  %65 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv61 = sext i32 %65 to i64
  store i64 %conv61, ptr %__pyx_t_9, align 8, !tbaa !27
  %66 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv62 = sext i32 %66 to i64
  store i64 %conv62, ptr %__pyx_t_8, align 8, !tbaa !27
  %data63 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X, i32 0, i32 1
  %67 = load ptr, ptr %data63, align 8, !tbaa !188
  %68 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %strides64 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X, i32 0, i32 3
  %arrayidx65 = getelementptr [8 x i64], ptr %strides64, i64 0, i64 0
  %69 = load i64, ptr %arrayidx65, align 8, !tbaa !27
  %mul66 = mul i64 %68, %69
  %add.ptr67 = getelementptr i8, ptr %67, i64 %mul66
  %70 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %add.ptr68 = getelementptr float, ptr %add.ptr67, i64 %70
  %71 = load float, ptr %add.ptr68, align 4, !tbaa !298
  %data69 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 1
  %72 = load ptr, ptr %data69, align 8, !tbaa !188
  %73 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr70 = getelementptr float, ptr %72, i64 %73
  %74 = load float, ptr %add.ptr70, align 4, !tbaa !298
  %data72 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %75 = load ptr, ptr %data72, align 8, !tbaa !188
  %76 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %strides73 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx74 = getelementptr [8 x i64], ptr %strides73, i64 0, i64 0
  %77 = load i64, ptr %arrayidx74, align 8, !tbaa !27
  %mul75 = mul i64 %76, %77
  %add.ptr76 = getelementptr i8, ptr %75, i64 %mul75
  %78 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %add.ptr77 = getelementptr float, ptr %add.ptr76, i64 %78
  %79 = load float, ptr %add.ptr77, align 4, !tbaa !298
  %80 = call float @llvm.fmuladd.f32(float %71, float %74, float %79)
  store float %80, ptr %add.ptr77, align 4, !tbaa !298
  br label %for.inc78

for.inc78:                                        ; preds = %for.body57
  %81 = load i32, ptr %__pyx_t_12, align 4, !tbaa !9
  %add79 = add i32 %81, 1
  store i32 %add79, ptr %__pyx_t_12, align 4, !tbaa !9
  br label %for.cond54, !llvm.loop !302

for.end80:                                        ; preds = %for.cond54
  br label %for.inc81

for.inc81:                                        ; preds = %for.end80
  %82 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add82 = add i32 %82, 1
  store i32 %add82, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond48, !llvm.loop !303

for.end83:                                        ; preds = %for.cond48
  %83 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv84 = sext i32 %83 to i64
  store i64 %conv84, ptr %__pyx_t_4, align 8, !tbaa !27
  %84 = load float, ptr %__pyx_v_wsum, align 4, !tbaa !298
  %data85 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 1
  %85 = load ptr, ptr %data85, align 8, !tbaa !188
  %86 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr86 = getelementptr float, ptr %85, i64 %86
  %87 = load float, ptr %add.ptr86, align 4, !tbaa !298
  %add87 = fadd float %87, %84
  store float %add87, ptr %add.ptr86, align 4, !tbaa !298
  %88 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv88 = sext i32 %88 to i64
  store i64 %conv88, ptr %__pyx_t_4, align 8, !tbaa !27
  %data89 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 1
  %89 = load ptr, ptr %data89, align 8, !tbaa !188
  %90 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr90 = getelementptr float, ptr %89, i64 %90
  %91 = load float, ptr %add.ptr90, align 4, !tbaa !298
  %conv91 = fpext float %91 to double
  %div = fdiv double 1.000000e+00, %conv91
  %conv92 = fptrunc double %div to float
  store float %conv92, ptr %__pyx_v_alpha, align 4, !tbaa !298
  %92 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %92, ptr %__pyx_t_1, align 4, !tbaa !9
  %93 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %93, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc106, %for.end83
  %94 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %95 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp94 = icmp slt i32 %94, %95
  br i1 %cmp94, label %for.body96, label %for.end108

for.body96:                                       ; preds = %for.cond93
  %96 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %96, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %97 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv97 = sext i32 %97 to i64
  store i64 %conv97, ptr %__pyx_t_4, align 8, !tbaa !27
  %98 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv98 = sext i32 %98 to i64
  store i64 %conv98, ptr %__pyx_t_6, align 8, !tbaa !27
  %99 = load float, ptr %__pyx_v_alpha, align 4, !tbaa !298
  %data99 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %100 = load ptr, ptr %data99, align 8, !tbaa !188
  %101 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %strides100 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx101 = getelementptr [8 x i64], ptr %strides100, i64 0, i64 0
  %102 = load i64, ptr %arrayidx101, align 8, !tbaa !27
  %mul102 = mul i64 %101, %102
  %add.ptr103 = getelementptr i8, ptr %100, i64 %mul102
  %103 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %add.ptr104 = getelementptr float, ptr %add.ptr103, i64 %103
  %104 = load float, ptr %add.ptr104, align 4, !tbaa !298
  %mul105 = fmul float %104, %99
  store float %mul105, ptr %add.ptr104, align 4, !tbaa !298
  br label %for.inc106

for.inc106:                                       ; preds = %for.body96
  %105 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add107 = add i32 %105, 1
  store i32 %add107, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond93, !llvm.loop !304

for.end108:                                       ; preds = %for.cond93
  br label %__pyx_L6

if.end109:                                        ; preds = %for.end
  %106 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %106, ptr %__pyx_t_1, align 4, !tbaa !9
  %107 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %107, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond110

for.cond110:                                      ; preds = %for.inc130, %if.end109
  %108 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %109 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp111 = icmp slt i32 %108, %109
  br i1 %cmp111, label %for.body113, label %for.end132

for.body113:                                      ; preds = %for.cond110
  %110 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %110, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %111 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv114 = sext i32 %111 to i64
  store i64 %conv114, ptr %__pyx_t_6, align 8, !tbaa !27
  %112 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv115 = sext i32 %112 to i64
  store i64 %conv115, ptr %__pyx_t_4, align 8, !tbaa !27
  %113 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv116 = sext i32 %113 to i64
  store i64 %conv116, ptr %__pyx_t_7, align 8, !tbaa !27
  %114 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv117 = sext i32 %114 to i64
  store i64 %conv117, ptr %__pyx_t_8, align 8, !tbaa !27
  %data118 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 1
  %115 = load ptr, ptr %data118, align 8, !tbaa !188
  %116 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %strides119 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 3
  %arrayidx120 = getelementptr [8 x i64], ptr %strides119, i64 0, i64 0
  %117 = load i64, ptr %arrayidx120, align 8, !tbaa !27
  %mul121 = mul i64 %116, %117
  %add.ptr122 = getelementptr i8, ptr %115, i64 %mul121
  %118 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr123 = getelementptr float, ptr %add.ptr122, i64 %118
  %119 = load float, ptr %add.ptr123, align 4, !tbaa !298
  %data124 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %120 = load ptr, ptr %data124, align 8, !tbaa !188
  %121 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %strides125 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx126 = getelementptr [8 x i64], ptr %strides125, i64 0, i64 0
  %122 = load i64, ptr %arrayidx126, align 8, !tbaa !27
  %mul127 = mul i64 %121, %122
  %add.ptr128 = getelementptr i8, ptr %120, i64 %mul127
  %123 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %add.ptr129 = getelementptr float, ptr %add.ptr128, i64 %123
  store float %119, ptr %add.ptr129, align 4, !tbaa !298
  br label %for.inc130

for.inc130:                                       ; preds = %for.body113
  %124 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add131 = add i32 %124, 1
  store i32 %add131, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond110, !llvm.loop !305

for.end132:                                       ; preds = %for.cond110
  br label %__pyx_L6

__pyx_L6:                                         ; preds = %for.end132, %for.end108
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_wsum) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_feature_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_sample_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_k) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_indices) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_alpha) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_features) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_samples) #13
  ret void
}

; Function Attrs: nounwind
declare void @__kmpc_for_static_fini(ptr, i32) #13

; Function Attrs: nounwind
declare i32 @__kmpc_global_thread_num(ptr) #13

; Function Attrs: nounwind
declare void @__kmpc_push_num_threads(ptr, i32, i32) #13

; Function Attrs: nounwind
declare !callback !306 void @__kmpc_fork_call(ptr, i32, ptr, ...) #13

declare void @PyEval_RestoreThread(ptr noundef) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fmuladd.f32(float, float, float) #14

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_fuse_1__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_7_minibatch_update_dense(ptr noundef %__pyx_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_X = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_sample_weight = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_centers_old = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_centers_new = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_weight_sums = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_labels = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_n_threads = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %values = alloca [7 x ptr], align 16
  %kw_args = alloca i64, align 8
  %pos_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca %struct.__Pyx_memviewslice, align 8
  %tmp210 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp225 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp240 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp255 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp270 = alloca %struct.__Pyx_memviewslice, align 8
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !5
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_X) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_X, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_sample_weight) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_sample_weight, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_centers_old) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_centers_old, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_centers_new) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_centers_new, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_weight_sums) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_weight_sums, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_labels) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_labels, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_threads) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 56, ptr %values) #13
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 56, i1 false)
  %0 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else168

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos_args) #13
  %1 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1)
  store i64 %call, ptr %pos_args, align 8, !tbaa !27
  %2 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %2, label %sw.default [
    i64 7, label %sw.bb
    i64 6, label %sw.bb4
    i64 5, label %sw.bb8
    i64 4, label %sw.bb12
    i64 3, label %sw.bb16
    i64 2, label %sw.bb20
    i64 1, label %sw.bb24
    i64 0, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.then
  %3 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 6
  %4 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %arrayidx3 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  store ptr %4, ptr %arrayidx3, align 16, !tbaa !5
  br label %sw.bb4

sw.bb4:                                           ; preds = %if.then, %sw.bb
  %5 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %5, i32 0, i32 1
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 5
  %6 = load ptr, ptr %arrayidx6, align 8, !tbaa !5
  %arrayidx7 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  store ptr %6, ptr %arrayidx7, align 8, !tbaa !5
  br label %sw.bb8

sw.bb8:                                           ; preds = %if.then, %sw.bb4
  %7 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item9 = getelementptr inbounds %struct.PyTupleObject, ptr %7, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x ptr], ptr %ob_item9, i64 0, i64 4
  %8 = load ptr, ptr %arrayidx10, align 8, !tbaa !5
  %arrayidx11 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  store ptr %8, ptr %arrayidx11, align 16, !tbaa !5
  br label %sw.bb12

sw.bb12:                                          ; preds = %if.then, %sw.bb8
  %9 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item13 = getelementptr inbounds %struct.PyTupleObject, ptr %9, i32 0, i32 1
  %arrayidx14 = getelementptr [1 x ptr], ptr %ob_item13, i64 0, i64 3
  %10 = load ptr, ptr %arrayidx14, align 8, !tbaa !5
  %arrayidx15 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  store ptr %10, ptr %arrayidx15, align 8, !tbaa !5
  br label %sw.bb16

sw.bb16:                                          ; preds = %if.then, %sw.bb12
  %11 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item17 = getelementptr inbounds %struct.PyTupleObject, ptr %11, i32 0, i32 1
  %arrayidx18 = getelementptr [1 x ptr], ptr %ob_item17, i64 0, i64 2
  %12 = load ptr, ptr %arrayidx18, align 8, !tbaa !5
  %arrayidx19 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  store ptr %12, ptr %arrayidx19, align 16, !tbaa !5
  br label %sw.bb20

sw.bb20:                                          ; preds = %if.then, %sw.bb16
  %13 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item21 = getelementptr inbounds %struct.PyTupleObject, ptr %13, i32 0, i32 1
  %arrayidx22 = getelementptr [1 x ptr], ptr %ob_item21, i64 0, i64 1
  %14 = load ptr, ptr %arrayidx22, align 8, !tbaa !5
  %arrayidx23 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  store ptr %14, ptr %arrayidx23, align 8, !tbaa !5
  br label %sw.bb24

sw.bb24:                                          ; preds = %if.then, %sw.bb20
  %15 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item25 = getelementptr inbounds %struct.PyTupleObject, ptr %15, i32 0, i32 1
  %arrayidx26 = getelementptr [1 x ptr], ptr %ob_item25, i64 0, i64 0
  %16 = load ptr, ptr %arrayidx26, align 8, !tbaa !5
  %arrayidx27 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  store ptr %16, ptr %arrayidx27, align 16, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb24, %if.then
  %17 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %call28 = call i64 @PyDict_Size(ptr noundef %17)
  store i64 %call28, ptr %kw_args, align 8, !tbaa !27
  %18 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %18, label %sw.epilog143 [
    i64 0, label %sw.bb29
    i64 1, label %sw.bb41
    i64 2, label %sw.bb58
    i64 3, label %sw.bb75
    i64 4, label %sw.bb92
    i64 5, label %sw.bb109
    i64 6, label %sw.bb126
  ]

sw.bb29:                                          ; preds = %sw.epilog
  %19 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %20 = load ptr, ptr @__pyx_n_s_X, align 8, !tbaa !5
  %21 = load ptr, ptr @__pyx_n_s_X, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %21, i32 0, i32 2
  %22 = load i64, ptr %hash, align 8, !tbaa !154
  %call30 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %19, ptr noundef %20, i64 noundef %22)
  %arrayidx31 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  store ptr %call30, ptr %arrayidx31, align 16, !tbaa !5
  %cmp = icmp ne ptr %call30, null
  %lnot33 = xor i1 %cmp, true
  %lnot35 = xor i1 %lnot33, true
  %lnot.ext36 = zext i1 %lnot35 to i32
  %conv37 = sext i32 %lnot.ext36 to i64
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 1)
  %tobool39 = icmp ne i64 %expval38, 0
  br i1 %tobool39, label %if.then40, label %if.else

if.then40:                                        ; preds = %sw.bb29
  %23 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec = add i64 %23, -1
  store i64 %dec, ptr %kw_args, align 8, !tbaa !27
  br label %if.end

if.else:                                          ; preds = %sw.bb29
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then40
  br label %sw.bb41

sw.bb41:                                          ; preds = %sw.epilog, %if.end
  %24 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %25 = load ptr, ptr @__pyx_n_s_sample_weight, align 8, !tbaa !5
  %26 = load ptr, ptr @__pyx_n_s_sample_weight, align 8, !tbaa !5
  %hash42 = getelementptr inbounds %struct.PyASCIIObject, ptr %26, i32 0, i32 2
  %27 = load i64, ptr %hash42, align 8, !tbaa !154
  %call43 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %24, ptr noundef %25, i64 noundef %27)
  %arrayidx44 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  store ptr %call43, ptr %arrayidx44, align 8, !tbaa !5
  %cmp45 = icmp ne ptr %call43, null
  %lnot47 = xor i1 %cmp45, true
  %lnot49 = xor i1 %lnot47, true
  %lnot.ext50 = zext i1 %lnot49 to i32
  %conv51 = sext i32 %lnot.ext50 to i64
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 1)
  %tobool53 = icmp ne i64 %expval52, 0
  br i1 %tobool53, label %if.then54, label %if.else56

if.then54:                                        ; preds = %sw.bb41
  %28 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec55 = add i64 %28, -1
  store i64 %dec55, ptr %kw_args, align 8, !tbaa !27
  br label %if.end57

if.else56:                                        ; preds = %sw.bb41
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 1)
  %29 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %29, ptr %__pyx_filename, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3337, ptr %__pyx_clineno, align 4, !tbaa !9
  %32 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end57:                                         ; preds = %if.then54
  br label %sw.bb58

sw.bb58:                                          ; preds = %sw.epilog, %if.end57
  %33 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %34 = load ptr, ptr @__pyx_n_s_centers_old, align 8, !tbaa !5
  %35 = load ptr, ptr @__pyx_n_s_centers_old, align 8, !tbaa !5
  %hash59 = getelementptr inbounds %struct.PyASCIIObject, ptr %35, i32 0, i32 2
  %36 = load i64, ptr %hash59, align 8, !tbaa !154
  %call60 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %33, ptr noundef %34, i64 noundef %36)
  %arrayidx61 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  store ptr %call60, ptr %arrayidx61, align 16, !tbaa !5
  %cmp62 = icmp ne ptr %call60, null
  %lnot64 = xor i1 %cmp62, true
  %lnot66 = xor i1 %lnot64, true
  %lnot.ext67 = zext i1 %lnot66 to i32
  %conv68 = sext i32 %lnot.ext67 to i64
  %expval69 = call i64 @llvm.expect.i64(i64 %conv68, i64 1)
  %tobool70 = icmp ne i64 %expval69, 0
  br i1 %tobool70, label %if.then71, label %if.else73

if.then71:                                        ; preds = %sw.bb58
  %37 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec72 = add i64 %37, -1
  store i64 %dec72, ptr %kw_args, align 8, !tbaa !27
  br label %if.end74

if.else73:                                        ; preds = %sw.bb58
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 2)
  %38 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %38, ptr %__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3343, ptr %__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end74:                                         ; preds = %if.then71
  br label %sw.bb75

sw.bb75:                                          ; preds = %sw.epilog, %if.end74
  %42 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %43 = load ptr, ptr @__pyx_n_s_centers_new, align 8, !tbaa !5
  %44 = load ptr, ptr @__pyx_n_s_centers_new, align 8, !tbaa !5
  %hash76 = getelementptr inbounds %struct.PyASCIIObject, ptr %44, i32 0, i32 2
  %45 = load i64, ptr %hash76, align 8, !tbaa !154
  %call77 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %42, ptr noundef %43, i64 noundef %45)
  %arrayidx78 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  store ptr %call77, ptr %arrayidx78, align 8, !tbaa !5
  %cmp79 = icmp ne ptr %call77, null
  %lnot81 = xor i1 %cmp79, true
  %lnot83 = xor i1 %lnot81, true
  %lnot.ext84 = zext i1 %lnot83 to i32
  %conv85 = sext i32 %lnot.ext84 to i64
  %expval86 = call i64 @llvm.expect.i64(i64 %conv85, i64 1)
  %tobool87 = icmp ne i64 %expval86, 0
  br i1 %tobool87, label %if.then88, label %if.else90

if.then88:                                        ; preds = %sw.bb75
  %46 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec89 = add i64 %46, -1
  store i64 %dec89, ptr %kw_args, align 8, !tbaa !27
  br label %if.end91

if.else90:                                        ; preds = %sw.bb75
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 3)
  %47 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %47, ptr %__pyx_filename, align 8, !tbaa !5
  %48 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3349, ptr %__pyx_clineno, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end91:                                         ; preds = %if.then88
  br label %sw.bb92

sw.bb92:                                          ; preds = %sw.epilog, %if.end91
  %51 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %52 = load ptr, ptr @__pyx_n_s_weight_sums, align 8, !tbaa !5
  %53 = load ptr, ptr @__pyx_n_s_weight_sums, align 8, !tbaa !5
  %hash93 = getelementptr inbounds %struct.PyASCIIObject, ptr %53, i32 0, i32 2
  %54 = load i64, ptr %hash93, align 8, !tbaa !154
  %call94 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %51, ptr noundef %52, i64 noundef %54)
  %arrayidx95 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  store ptr %call94, ptr %arrayidx95, align 16, !tbaa !5
  %cmp96 = icmp ne ptr %call94, null
  %lnot98 = xor i1 %cmp96, true
  %lnot100 = xor i1 %lnot98, true
  %lnot.ext101 = zext i1 %lnot100 to i32
  %conv102 = sext i32 %lnot.ext101 to i64
  %expval103 = call i64 @llvm.expect.i64(i64 %conv102, i64 1)
  %tobool104 = icmp ne i64 %expval103, 0
  br i1 %tobool104, label %if.then105, label %if.else107

if.then105:                                       ; preds = %sw.bb92
  %55 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec106 = add i64 %55, -1
  store i64 %dec106, ptr %kw_args, align 8, !tbaa !27
  br label %if.end108

if.else107:                                       ; preds = %sw.bb92
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 4)
  %56 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %56, ptr %__pyx_filename, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %58 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3355, ptr %__pyx_clineno, align 4, !tbaa !9
  %59 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end108:                                        ; preds = %if.then105
  br label %sw.bb109

sw.bb109:                                         ; preds = %sw.epilog, %if.end108
  %60 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %61 = load ptr, ptr @__pyx_n_s_labels, align 8, !tbaa !5
  %62 = load ptr, ptr @__pyx_n_s_labels, align 8, !tbaa !5
  %hash110 = getelementptr inbounds %struct.PyASCIIObject, ptr %62, i32 0, i32 2
  %63 = load i64, ptr %hash110, align 8, !tbaa !154
  %call111 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %60, ptr noundef %61, i64 noundef %63)
  %arrayidx112 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  store ptr %call111, ptr %arrayidx112, align 8, !tbaa !5
  %cmp113 = icmp ne ptr %call111, null
  %lnot115 = xor i1 %cmp113, true
  %lnot117 = xor i1 %lnot115, true
  %lnot.ext118 = zext i1 %lnot117 to i32
  %conv119 = sext i32 %lnot.ext118 to i64
  %expval120 = call i64 @llvm.expect.i64(i64 %conv119, i64 1)
  %tobool121 = icmp ne i64 %expval120, 0
  br i1 %tobool121, label %if.then122, label %if.else124

if.then122:                                       ; preds = %sw.bb109
  %64 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec123 = add i64 %64, -1
  store i64 %dec123, ptr %kw_args, align 8, !tbaa !27
  br label %if.end125

if.else124:                                       ; preds = %sw.bb109
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 5)
  %65 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %65, ptr %__pyx_filename, align 8, !tbaa !5
  %66 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %67 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3361, ptr %__pyx_clineno, align 4, !tbaa !9
  %68 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end125:                                        ; preds = %if.then122
  br label %sw.bb126

sw.bb126:                                         ; preds = %sw.epilog, %if.end125
  %69 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %70 = load ptr, ptr @__pyx_n_s_n_threads, align 8, !tbaa !5
  %71 = load ptr, ptr @__pyx_n_s_n_threads, align 8, !tbaa !5
  %hash127 = getelementptr inbounds %struct.PyASCIIObject, ptr %71, i32 0, i32 2
  %72 = load i64, ptr %hash127, align 8, !tbaa !154
  %call128 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %69, ptr noundef %70, i64 noundef %72)
  %arrayidx129 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  store ptr %call128, ptr %arrayidx129, align 16, !tbaa !5
  %cmp130 = icmp ne ptr %call128, null
  %lnot132 = xor i1 %cmp130, true
  %lnot134 = xor i1 %lnot132, true
  %lnot.ext135 = zext i1 %lnot134 to i32
  %conv136 = sext i32 %lnot.ext135 to i64
  %expval137 = call i64 @llvm.expect.i64(i64 %conv136, i64 1)
  %tobool138 = icmp ne i64 %expval137, 0
  br i1 %tobool138, label %if.then139, label %if.else141

if.then139:                                       ; preds = %sw.bb126
  %73 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec140 = add i64 %73, -1
  store i64 %dec140, ptr %kw_args, align 8, !tbaa !27
  br label %if.end142

if.else141:                                       ; preds = %sw.bb126
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 6)
  %74 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %74, ptr %__pyx_filename, align 8, !tbaa !5
  %75 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %76 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3367, ptr %__pyx_clineno, align 4, !tbaa !9
  %77 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end142:                                        ; preds = %if.then139
  br label %sw.epilog143

sw.epilog143:                                     ; preds = %if.end142, %sw.epilog
  %78 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp144 = icmp sgt i64 %78, 0
  %lnot146 = xor i1 %cmp144, true
  %lnot148 = xor i1 %lnot146, true
  %lnot.ext149 = zext i1 %lnot148 to i32
  %conv150 = sext i32 %lnot.ext149 to i64
  %expval151 = call i64 @llvm.expect.i64(i64 %conv150, i64 0)
  %tobool152 = icmp ne i64 %expval151, 0
  br i1 %tobool152, label %if.then153, label %if.end166

if.then153:                                       ; preds = %sw.epilog143
  %79 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %arraydecay = getelementptr inbounds [7 x ptr], ptr %values, i64 0, i64 0
  %80 = load i64, ptr %pos_args, align 8, !tbaa !27
  %call154 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %79, ptr noundef @__pyx_fuse_1__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_7_minibatch_update_dense.__pyx_pyargnames, ptr noundef null, ptr noundef %arraydecay, i64 noundef %80, ptr noundef @.str.223)
  %cmp155 = icmp slt i32 %call154, 0
  %lnot157 = xor i1 %cmp155, true
  %lnot159 = xor i1 %lnot157, true
  %lnot.ext160 = zext i1 %lnot159 to i32
  %conv161 = sext i32 %lnot.ext160 to i64
  %expval162 = call i64 @llvm.expect.i64(i64 %conv161, i64 0)
  %tobool163 = icmp ne i64 %expval162, 0
  br i1 %tobool163, label %if.then164, label %if.end165

if.then164:                                       ; preds = %if.then153
  %81 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %81, ptr %__pyx_filename, align 8, !tbaa !5
  %82 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %83 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3371, ptr %__pyx_clineno, align 4, !tbaa !9
  %84 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end165:                                        ; preds = %if.then153
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %sw.epilog143
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then164, %if.else141, %if.else124, %if.else107, %if.else90, %if.else73, %if.else56, %if.else, %sw.default, %if.end166
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup300 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end196

if.else168:                                       ; preds = %entry
  %85 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call169 = call i64 @PyTuple_GET_SIZE(ptr noundef %85)
  %cmp170 = icmp ne i64 %call169, 7
  br i1 %cmp170, label %if.then172, label %if.else173

if.then172:                                       ; preds = %if.else168
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.else173:                                       ; preds = %if.else168
  %86 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item174 = getelementptr inbounds %struct.PyTupleObject, ptr %86, i32 0, i32 1
  %arrayidx175 = getelementptr [1 x ptr], ptr %ob_item174, i64 0, i64 0
  %87 = load ptr, ptr %arrayidx175, align 8, !tbaa !5
  %arrayidx176 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  store ptr %87, ptr %arrayidx176, align 16, !tbaa !5
  %88 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item177 = getelementptr inbounds %struct.PyTupleObject, ptr %88, i32 0, i32 1
  %arrayidx178 = getelementptr [1 x ptr], ptr %ob_item177, i64 0, i64 1
  %89 = load ptr, ptr %arrayidx178, align 8, !tbaa !5
  %arrayidx179 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  store ptr %89, ptr %arrayidx179, align 8, !tbaa !5
  %90 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item180 = getelementptr inbounds %struct.PyTupleObject, ptr %90, i32 0, i32 1
  %arrayidx181 = getelementptr [1 x ptr], ptr %ob_item180, i64 0, i64 2
  %91 = load ptr, ptr %arrayidx181, align 8, !tbaa !5
  %arrayidx182 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  store ptr %91, ptr %arrayidx182, align 16, !tbaa !5
  %92 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item183 = getelementptr inbounds %struct.PyTupleObject, ptr %92, i32 0, i32 1
  %arrayidx184 = getelementptr [1 x ptr], ptr %ob_item183, i64 0, i64 3
  %93 = load ptr, ptr %arrayidx184, align 8, !tbaa !5
  %arrayidx185 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  store ptr %93, ptr %arrayidx185, align 8, !tbaa !5
  %94 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item186 = getelementptr inbounds %struct.PyTupleObject, ptr %94, i32 0, i32 1
  %arrayidx187 = getelementptr [1 x ptr], ptr %ob_item186, i64 0, i64 4
  %95 = load ptr, ptr %arrayidx187, align 8, !tbaa !5
  %arrayidx188 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  store ptr %95, ptr %arrayidx188, align 16, !tbaa !5
  %96 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item189 = getelementptr inbounds %struct.PyTupleObject, ptr %96, i32 0, i32 1
  %arrayidx190 = getelementptr [1 x ptr], ptr %ob_item189, i64 0, i64 5
  %97 = load ptr, ptr %arrayidx190, align 8, !tbaa !5
  %arrayidx191 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  store ptr %97, ptr %arrayidx191, align 8, !tbaa !5
  %98 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item192 = getelementptr inbounds %struct.PyTupleObject, ptr %98, i32 0, i32 1
  %arrayidx193 = getelementptr [1 x ptr], ptr %ob_item192, i64 0, i64 6
  %99 = load ptr, ptr %arrayidx193, align 8, !tbaa !5
  %arrayidx194 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  store ptr %99, ptr %arrayidx194, align 16, !tbaa !5
  br label %if.end195

if.end195:                                        ; preds = %if.else173
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %cleanup.cont
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp) #13
  %arrayidx197 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  %100 = load ptr, ptr %arrayidx197, align 16, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_double__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp, ptr noundef %100, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_X, ptr align 8 %tmp, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp) #13
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X, i32 0, i32 0
  %101 = load ptr, ptr %memview, align 8, !tbaa !185
  %tobool198 = icmp ne ptr %101, null
  %lnot199 = xor i1 %tobool198, true
  %lnot201 = xor i1 %lnot199, true
  %lnot203 = xor i1 %lnot201, true
  %lnot.ext204 = zext i1 %lnot203 to i32
  %conv205 = sext i32 %lnot.ext204 to i64
  %expval206 = call i64 @llvm.expect.i64(i64 %conv205, i64 0)
  %tobool207 = icmp ne i64 %expval206, 0
  br i1 %tobool207, label %if.then208, label %if.end209

if.then208:                                       ; preds = %if.end196
  %102 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %102, ptr %__pyx_filename, align 8, !tbaa !5
  %103 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 7, ptr %__pyx_lineno, align 4, !tbaa !9
  %104 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3384, ptr %__pyx_clineno, align 4, !tbaa !9
  %105 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end209:                                        ; preds = %if.end196
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp210) #13
  %arrayidx211 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  %106 = load ptr, ptr %arrayidx211, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_double__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp210, ptr noundef %106, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_sample_weight, ptr align 8 %tmp210, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp210) #13
  %memview212 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 0
  %107 = load ptr, ptr %memview212, align 8, !tbaa !185
  %tobool213 = icmp ne ptr %107, null
  %lnot214 = xor i1 %tobool213, true
  %lnot216 = xor i1 %lnot214, true
  %lnot218 = xor i1 %lnot216, true
  %lnot.ext219 = zext i1 %lnot218 to i32
  %conv220 = sext i32 %lnot.ext219 to i64
  %expval221 = call i64 @llvm.expect.i64(i64 %conv220, i64 0)
  %tobool222 = icmp ne i64 %expval221, 0
  br i1 %tobool222, label %if.then223, label %if.end224

if.then223:                                       ; preds = %if.end209
  %108 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %108, ptr %__pyx_filename, align 8, !tbaa !5
  %109 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 8, ptr %__pyx_lineno, align 4, !tbaa !9
  %110 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3385, ptr %__pyx_clineno, align 4, !tbaa !9
  %111 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end224:                                        ; preds = %if.end209
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp225) #13
  %arrayidx226 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  %112 = load ptr, ptr %arrayidx226, align 16, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_double__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp225, ptr noundef %112, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_centers_old, ptr align 8 %tmp225, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp225) #13
  %memview227 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 0
  %113 = load ptr, ptr %memview227, align 8, !tbaa !185
  %tobool228 = icmp ne ptr %113, null
  %lnot229 = xor i1 %tobool228, true
  %lnot231 = xor i1 %lnot229, true
  %lnot233 = xor i1 %lnot231, true
  %lnot.ext234 = zext i1 %lnot233 to i32
  %conv235 = sext i32 %lnot.ext234 to i64
  %expval236 = call i64 @llvm.expect.i64(i64 %conv235, i64 0)
  %tobool237 = icmp ne i64 %expval236, 0
  br i1 %tobool237, label %if.then238, label %if.end239

if.then238:                                       ; preds = %if.end224
  %114 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %114, ptr %__pyx_filename, align 8, !tbaa !5
  %115 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 9, ptr %__pyx_lineno, align 4, !tbaa !9
  %116 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3386, ptr %__pyx_clineno, align 4, !tbaa !9
  %117 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end239:                                        ; preds = %if.end224
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp240) #13
  %arrayidx241 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  %118 = load ptr, ptr %arrayidx241, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_double(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp240, ptr noundef %118, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_centers_new, ptr align 8 %tmp240, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp240) #13
  %memview242 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 0
  %119 = load ptr, ptr %memview242, align 8, !tbaa !185
  %tobool243 = icmp ne ptr %119, null
  %lnot244 = xor i1 %tobool243, true
  %lnot246 = xor i1 %lnot244, true
  %lnot248 = xor i1 %lnot246, true
  %lnot.ext249 = zext i1 %lnot248 to i32
  %conv250 = sext i32 %lnot.ext249 to i64
  %expval251 = call i64 @llvm.expect.i64(i64 %conv250, i64 0)
  %tobool252 = icmp ne i64 %expval251, 0
  br i1 %tobool252, label %if.then253, label %if.end254

if.then253:                                       ; preds = %if.end239
  %120 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %120, ptr %__pyx_filename, align 8, !tbaa !5
  %121 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 10, ptr %__pyx_lineno, align 4, !tbaa !9
  %122 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3387, ptr %__pyx_clineno, align 4, !tbaa !9
  %123 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end254:                                        ; preds = %if.end239
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp255) #13
  %arrayidx256 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  %124 = load ptr, ptr %arrayidx256, align 16, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_double(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp255, ptr noundef %124, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_weight_sums, ptr align 8 %tmp255, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp255) #13
  %memview257 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 0
  %125 = load ptr, ptr %memview257, align 8, !tbaa !185
  %tobool258 = icmp ne ptr %125, null
  %lnot259 = xor i1 %tobool258, true
  %lnot261 = xor i1 %lnot259, true
  %lnot263 = xor i1 %lnot261, true
  %lnot.ext264 = zext i1 %lnot263 to i32
  %conv265 = sext i32 %lnot.ext264 to i64
  %expval266 = call i64 @llvm.expect.i64(i64 %conv265, i64 0)
  %tobool267 = icmp ne i64 %expval266, 0
  br i1 %tobool267, label %if.then268, label %if.end269

if.then268:                                       ; preds = %if.end254
  %126 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %126, ptr %__pyx_filename, align 8, !tbaa !5
  %127 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 11, ptr %__pyx_lineno, align 4, !tbaa !9
  %128 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3388, ptr %__pyx_clineno, align 4, !tbaa !9
  %129 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end269:                                        ; preds = %if.end254
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp270) #13
  %arrayidx271 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  %130 = load ptr, ptr %arrayidx271, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_int__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp270, ptr noundef %130, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_labels, ptr align 8 %tmp270, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp270) #13
  %memview272 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_labels, i32 0, i32 0
  %131 = load ptr, ptr %memview272, align 8, !tbaa !185
  %tobool273 = icmp ne ptr %131, null
  %lnot274 = xor i1 %tobool273, true
  %lnot276 = xor i1 %lnot274, true
  %lnot278 = xor i1 %lnot276, true
  %lnot.ext279 = zext i1 %lnot278 to i32
  %conv280 = sext i32 %lnot.ext279 to i64
  %expval281 = call i64 @llvm.expect.i64(i64 %conv280, i64 0)
  %tobool282 = icmp ne i64 %expval281, 0
  br i1 %tobool282, label %if.then283, label %if.end284

if.then283:                                       ; preds = %if.end269
  %132 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %132, ptr %__pyx_filename, align 8, !tbaa !5
  %133 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 12, ptr %__pyx_lineno, align 4, !tbaa !9
  %134 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3389, ptr %__pyx_clineno, align 4, !tbaa !9
  %135 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end284:                                        ; preds = %if.end269
  %arrayidx285 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  %136 = load ptr, ptr %arrayidx285, align 16, !tbaa !5
  %call286 = call i32 @__Pyx_PyInt_As_int(ptr noundef %136)
  store i32 %call286, ptr %__pyx_v_n_threads, align 4, !tbaa !9
  %137 = load i32, ptr %__pyx_v_n_threads, align 4, !tbaa !9
  %cmp287 = icmp eq i32 %137, -1
  br i1 %cmp287, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end284
  %call289 = call ptr @PyErr_Occurred()
  %tobool290 = icmp ne ptr %call289, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end284
  %138 = phi i1 [ false, %if.end284 ], [ %tobool290, %land.rhs ]
  %lnot291 = xor i1 %138, true
  %lnot293 = xor i1 %lnot291, true
  %lnot.ext294 = zext i1 %lnot293 to i32
  %conv295 = sext i32 %lnot.ext294 to i64
  %expval296 = call i64 @llvm.expect.i64(i64 %conv295, i64 0)
  %tobool297 = icmp ne i64 %expval296, 0
  br i1 %tobool297, label %if.then298, label %if.end299

if.then298:                                       ; preds = %land.end
  %139 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %139, ptr %__pyx_filename, align 8, !tbaa !5
  %140 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 13, ptr %__pyx_lineno, align 4, !tbaa !9
  %141 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3390, ptr %__pyx_clineno, align 4, !tbaa !9
  %142 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

if.end299:                                        ; preds = %land.end
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup300

cleanup300:                                       ; preds = %if.then298, %if.then283, %if.then268, %if.then253, %if.then238, %if.then223, %if.then208, %if.then172, %if.end299, %cleanup
  call void @llvm.lifetime.end.p0(i64 56, ptr %values) #13
  %cleanup.dest301 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest301, label %cleanup305 [
    i32 0, label %cleanup.cont302
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont302:                                  ; preds = %cleanup300
  br label %__pyx_L4_argument_unpacking_done

__pyx_L5_argtuple_error:                          ; preds = %cleanup300
  %143 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call303 = call i64 @PyTuple_GET_SIZE(ptr noundef %143)
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.223, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef %call303)
  %144 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %144, ptr %__pyx_filename, align 8, !tbaa !5
  %145 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %146 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 3394, ptr %__pyx_clineno, align 4, !tbaa !9
  %147 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

__pyx_L3_error:                                   ; preds = %cleanup300, %__pyx_L5_argtuple_error
  %148 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %149 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %150 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.224, i32 noundef %148, i32 noundef %149, ptr noundef %150)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup305

__pyx_L4_argument_unpacking_done:                 ; preds = %cleanup.cont302
  %151 = load ptr, ptr %__pyx_self.addr, align 8, !tbaa !5
  %152 = load i32, ptr %__pyx_v_n_threads, align 4, !tbaa !9
  %call304 = call ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_6_minibatch_update_dense(ptr noundef %151, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_X, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_sample_weight, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_old, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_new, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_weight_sums, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_labels, i32 noundef %152)
  store ptr %call304, ptr %__pyx_r, align 8, !tbaa !5
  %153 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  store ptr %153, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup305

cleanup305:                                       ; preds = %__pyx_L4_argument_unpacking_done, %__pyx_L3_error, %cleanup300
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_threads) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_labels) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_weight_sums) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_centers_new) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_centers_old) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_sample_weight) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_X) #13
  %154 = load ptr, ptr %retval, align 8
  ret ptr %154
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_double__const__(ptr noalias sret(%struct.__Pyx_memviewslice) align 8 %agg.result, ptr noundef %obj, i32 noundef %writable_flag) #3 {
entry:
  %obj.addr = alloca ptr, align 8
  %writable_flag.addr = alloca i32, align 4
  %stack = alloca [1 x %struct.__Pyx_BufFmt_StackElem], align 16
  %axes_specs = alloca [2 x i32], align 4
  %retcode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store i32 %writable_flag, ptr %writable_flag.addr, align 4, !tbaa !9
  call void @llvm.memset.p0.i64(ptr align 8 %agg.result, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr %stack) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %axes_specs) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %axes_specs, ptr align 4 @__const.__Pyx_PyObject_to_MemoryviewSlice_d_dc_double__const__.axes_specs, i64 8, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %retcode) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr @_Py_NoneStruct, ptr %memview, align 8, !tbaa !185
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x i32], ptr %axes_specs, i64 0, i64 0
  %1 = load i32, ptr %writable_flag.addr, align 4, !tbaa !9
  %or = or i32 60, %1
  %arraydecay1 = getelementptr inbounds [1 x %struct.__Pyx_BufFmt_StackElem], ptr %stack, i64 0, i64 0
  %2 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_ValidateAndInit_memviewslice(ptr noundef %arraydecay, i32 noundef 1, i32 noundef %or, i32 noundef 2, ptr noundef @__Pyx_TypeInfo_double__const__, ptr noundef %arraydecay1, ptr noundef %agg.result, ptr noundef %2)
  store i32 %call, ptr %retcode, align 4, !tbaa !9
  %3 = load i32, ptr %retcode, align 4, !tbaa !9
  %cmp2 = icmp eq i32 %3, -1
  %lnot = xor i1 %cmp2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %__pyx_fail

if.end5:                                          ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

__pyx_fail:                                       ; preds = %if.then4
  %memview6 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr null, ptr %memview6, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_fail, %if.end5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %retcode) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %axes_specs) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr %stack) #13
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_PyObject_to_MemoryviewSlice_dc_double__const__(ptr noalias sret(%struct.__Pyx_memviewslice) align 8 %agg.result, ptr noundef %obj, i32 noundef %writable_flag) #3 {
entry:
  %obj.addr = alloca ptr, align 8
  %writable_flag.addr = alloca i32, align 4
  %stack = alloca [1 x %struct.__Pyx_BufFmt_StackElem], align 16
  %axes_specs = alloca [1 x i32], align 4
  %retcode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store i32 %writable_flag, ptr %writable_flag.addr, align 4, !tbaa !9
  call void @llvm.memset.p0.i64(ptr align 8 %agg.result, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr %stack) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %axes_specs) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %axes_specs, ptr align 4 @__const.__Pyx_PyObject_to_MemoryviewSlice_dc_double__const__.axes_specs, i64 4, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %retcode) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr @_Py_NoneStruct, ptr %memview, align 8, !tbaa !185
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [1 x i32], ptr %axes_specs, i64 0, i64 0
  %1 = load i32, ptr %writable_flag.addr, align 4, !tbaa !9
  %or = or i32 60, %1
  %arraydecay1 = getelementptr inbounds [1 x %struct.__Pyx_BufFmt_StackElem], ptr %stack, i64 0, i64 0
  %2 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_ValidateAndInit_memviewslice(ptr noundef %arraydecay, i32 noundef 1, i32 noundef %or, i32 noundef 1, ptr noundef @__Pyx_TypeInfo_double__const__, ptr noundef %arraydecay1, ptr noundef %agg.result, ptr noundef %2)
  store i32 %call, ptr %retcode, align 4, !tbaa !9
  %3 = load i32, ptr %retcode, align 4, !tbaa !9
  %cmp2 = icmp eq i32 %3, -1
  %lnot = xor i1 %cmp2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %__pyx_fail

if.end5:                                          ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

__pyx_fail:                                       ; preds = %if.then4
  %memview6 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr null, ptr %memview6, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_fail, %if.end5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %retcode) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %axes_specs) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr %stack) #13
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_double(ptr noalias sret(%struct.__Pyx_memviewslice) align 8 %agg.result, ptr noundef %obj, i32 noundef %writable_flag) #3 {
entry:
  %obj.addr = alloca ptr, align 8
  %writable_flag.addr = alloca i32, align 4
  %stack = alloca [1 x %struct.__Pyx_BufFmt_StackElem], align 16
  %axes_specs = alloca [2 x i32], align 4
  %retcode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store i32 %writable_flag, ptr %writable_flag.addr, align 4, !tbaa !9
  call void @llvm.memset.p0.i64(ptr align 8 %agg.result, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr %stack) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %axes_specs) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %axes_specs, ptr align 4 @__const.__Pyx_PyObject_to_MemoryviewSlice_d_dc_double.axes_specs, i64 8, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %retcode) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr @_Py_NoneStruct, ptr %memview, align 8, !tbaa !185
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x i32], ptr %axes_specs, i64 0, i64 0
  %1 = load i32, ptr %writable_flag.addr, align 4, !tbaa !9
  %or = or i32 60, %1
  %arraydecay1 = getelementptr inbounds [1 x %struct.__Pyx_BufFmt_StackElem], ptr %stack, i64 0, i64 0
  %2 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_ValidateAndInit_memviewslice(ptr noundef %arraydecay, i32 noundef 1, i32 noundef %or, i32 noundef 2, ptr noundef @__Pyx_TypeInfo_double, ptr noundef %arraydecay1, ptr noundef %agg.result, ptr noundef %2)
  store i32 %call, ptr %retcode, align 4, !tbaa !9
  %3 = load i32, ptr %retcode, align 4, !tbaa !9
  %cmp2 = icmp eq i32 %3, -1
  %lnot = xor i1 %cmp2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %__pyx_fail

if.end5:                                          ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

__pyx_fail:                                       ; preds = %if.then4
  %memview6 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr null, ptr %memview6, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_fail, %if.end5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %retcode) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %axes_specs) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr %stack) #13
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_PyObject_to_MemoryviewSlice_dc_double(ptr noalias sret(%struct.__Pyx_memviewslice) align 8 %agg.result, ptr noundef %obj, i32 noundef %writable_flag) #3 {
entry:
  %obj.addr = alloca ptr, align 8
  %writable_flag.addr = alloca i32, align 4
  %stack = alloca [1 x %struct.__Pyx_BufFmt_StackElem], align 16
  %axes_specs = alloca [1 x i32], align 4
  %retcode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store i32 %writable_flag, ptr %writable_flag.addr, align 4, !tbaa !9
  call void @llvm.memset.p0.i64(ptr align 8 %agg.result, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr %stack) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %axes_specs) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %axes_specs, ptr align 4 @__const.__Pyx_PyObject_to_MemoryviewSlice_dc_double.axes_specs, i64 4, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %retcode) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr @_Py_NoneStruct, ptr %memview, align 8, !tbaa !185
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [1 x i32], ptr %axes_specs, i64 0, i64 0
  %1 = load i32, ptr %writable_flag.addr, align 4, !tbaa !9
  %or = or i32 60, %1
  %arraydecay1 = getelementptr inbounds [1 x %struct.__Pyx_BufFmt_StackElem], ptr %stack, i64 0, i64 0
  %2 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_ValidateAndInit_memviewslice(ptr noundef %arraydecay, i32 noundef 1, i32 noundef %or, i32 noundef 1, ptr noundef @__Pyx_TypeInfo_double, ptr noundef %arraydecay1, ptr noundef %agg.result, ptr noundef %2)
  store i32 %call, ptr %retcode, align 4, !tbaa !9
  %3 = load i32, ptr %retcode, align 4, !tbaa !9
  %cmp2 = icmp eq i32 %3, -1
  %lnot = xor i1 %cmp2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %__pyx_fail

if.end5:                                          ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

__pyx_fail:                                       ; preds = %if.then4
  %memview6 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr null, ptr %memview6, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_fail, %if.end5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %retcode) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %axes_specs) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr %stack) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_6_minibatch_update_dense(ptr noundef %__pyx_self, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_X, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_sample_weight, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_old, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_new, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_weight_sums, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_labels, i32 noundef %__pyx_v_n_threads) #0 {
entry:
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_v_n_threads.addr = alloca i32, align 4
  %__pyx_v_n_samples = alloca i32, align 4
  %__pyx_v_n_clusters = alloca i32, align 4
  %__pyx_v_cluster_idx = alloca i32, align 4
  %__pyx_v_indices = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %_save = alloca ptr, align 8
  %0 = call i32 @__kmpc_global_thread_num(ptr @3)
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store i32 %__pyx_v_n_threads, ptr %__pyx_v_n_threads.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_samples) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_clusters) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_cluster_idx) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X, i32 0, i32 2
  %arrayidx = getelementptr [8 x i64], ptr %shape, i64 0, i64 0
  %1 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %conv = trunc i64 %1 to i32
  store i32 %conv, ptr %__pyx_v_n_samples, align 4, !tbaa !9
  %shape1 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 2
  %arrayidx2 = getelementptr [8 x i64], ptr %shape1, i64 0, i64 0
  %2 = load i64, ptr %arrayidx2, align 8, !tbaa !27
  %conv3 = trunc i64 %2 to i32
  store i32 %conv3, ptr %__pyx_v_n_clusters, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %_save) #13
  %call = call ptr @PyEval_SaveThread()
  store ptr %call, ptr %_save, align 8, !tbaa !5
  %3 = load i32, ptr %__pyx_v_n_threads.addr, align 4, !tbaa !9
  call void @__kmpc_push_num_threads(ptr @3, i32 %0, i32 %3)
  call void (ptr, i32, ptr, ...) @__kmpc_fork_call(ptr @3, i32 9, ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_6_minibatch_update_dense.omp_outlined, ptr %__pyx_v_n_samples, ptr %__pyx_v_n_clusters, ptr %__pyx_v_cluster_idx, ptr %__pyx_v_X, ptr %__pyx_v_sample_weight, ptr %__pyx_v_centers_old, ptr %__pyx_v_centers_new, ptr %__pyx_v_weight_sums, ptr %__pyx_v_labels)
  %4 = load ptr, ptr %_save, align 8, !tbaa !5
  call void @PyEval_RestoreThread(ptr noundef %4)
  br label %__pyx_L5

__pyx_L5:                                         ; preds = %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %_save) #13
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_X, i32 noundef 1, i32 noundef 3554)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_sample_weight, i32 noundef 1, i32 noundef 3555)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_centers_old, i32 noundef 1, i32 noundef 3556)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_centers_new, i32 noundef 1, i32 noundef 3557)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_weight_sums, i32 noundef 1, i32 noundef 3558)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_labels, i32 noundef 1, i32 noundef 3559)
  %5 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_cluster_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_clusters) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_samples) #13
  ret ptr %5
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_6_minibatch_update_dense.omp_outlined(ptr noalias noundef %.global_tid., ptr noalias noundef %.bound_tid., ptr noundef nonnull align 4 dereferenceable(4) %__pyx_v_n_samples, ptr noundef nonnull align 4 dereferenceable(4) %__pyx_v_n_clusters, ptr noundef nonnull align 4 dereferenceable(4) %__pyx_v_cluster_idx, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_X, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_sample_weight, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_centers_old, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_centers_new, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_weight_sums, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_labels) #11 {
entry:
  %.global_tid..addr = alloca ptr, align 8
  %.bound_tid..addr = alloca ptr, align 8
  %__pyx_v_n_samples.addr = alloca ptr, align 8
  %__pyx_v_n_clusters.addr = alloca ptr, align 8
  %__pyx_v_cluster_idx.addr = alloca ptr, align 8
  %__pyx_v_X.addr = alloca ptr, align 8
  %__pyx_v_sample_weight.addr = alloca ptr, align 8
  %__pyx_v_centers_old.addr = alloca ptr, align 8
  %__pyx_v_centers_new.addr = alloca ptr, align 8
  %__pyx_v_weight_sums.addr = alloca ptr, align 8
  %__pyx_v_labels.addr = alloca ptr, align 8
  %__pyx_v_indices = alloca ptr, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %.omp.iv = alloca i32, align 4
  %tmp = alloca i32, align 4
  %.capture_expr. = alloca i32, align 4
  %.capture_expr.3 = alloca i32, align 4
  %__pyx_t_27 = alloca i32, align 4
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %__pyx_v_cluster_idx10 = alloca i32, align 4
  %__pyx_t_211 = alloca i32, align 4
  store ptr %.global_tid., ptr %.global_tid..addr, align 8, !tbaa !5
  store ptr %.bound_tid., ptr %.bound_tid..addr, align 8, !tbaa !5
  store ptr %__pyx_v_n_samples, ptr %__pyx_v_n_samples.addr, align 8, !tbaa !5
  store ptr %__pyx_v_n_clusters, ptr %__pyx_v_n_clusters.addr, align 8, !tbaa !5
  store ptr %__pyx_v_cluster_idx, ptr %__pyx_v_cluster_idx.addr, align 8, !tbaa !5
  store ptr %__pyx_v_X, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  store ptr %__pyx_v_sample_weight, ptr %__pyx_v_sample_weight.addr, align 8, !tbaa !5
  store ptr %__pyx_v_centers_old, ptr %__pyx_v_centers_old.addr, align 8, !tbaa !5
  store ptr %__pyx_v_centers_new, ptr %__pyx_v_centers_new.addr, align 8, !tbaa !5
  store ptr %__pyx_v_weight_sums, ptr %__pyx_v_weight_sums.addr, align 8, !tbaa !5
  store ptr %__pyx_v_labels, ptr %__pyx_v_labels.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_n_samples.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v_n_clusters.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_v_cluster_idx.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_v_sample_weight.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_v_centers_old.addr, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_v_centers_new.addr, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_v_weight_sums.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_v_labels.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  store ptr inttoptr (i64 1 to ptr), ptr %__pyx_v_indices, align 8, !tbaa !5
  %9 = load i32, ptr %0, align 4, !tbaa !9
  %conv = sext i32 %9 to i64
  %mul = mul i64 %conv, 4
  %call = call noalias ptr @malloc(i64 noundef %mul) #17
  store ptr %call, ptr %__pyx_v_indices, align 8, !tbaa !5
  %10 = load i32, ptr %1, align 4, !tbaa !9
  store i32 %10, ptr %__pyx_t_1, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %sub = sub i32 %11, 0
  %add = add i32 %sub, 1
  %sub1 = sub i32 %add, 1
  %div = sdiv i32 %sub1, 1
  store i32 %div, ptr %__pyx_t_3, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp = icmp sgt i32 %12, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.iv) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %.capture_expr.) #13
  %13 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %13, ptr %.capture_expr., align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.capture_expr.3) #13
  %14 = load i32, ptr %.capture_expr., align 4, !tbaa !9
  %sub4 = sub i32 %14, 0
  %div5 = sdiv i32 %sub4, 1
  %sub6 = sub i32 %div5, 1
  store i32 %sub6, ptr %.capture_expr.3, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_27) #13
  store i32 0, ptr %__pyx_t_27, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_27) #13
  %15 = load i32, ptr %.capture_expr., align 4, !tbaa !9
  %cmp8 = icmp slt i32 0, %15
  br i1 %cmp8, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.lb) #13
  store i32 0, ptr %.omp.lb, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.ub) #13
  %16 = load i32, ptr %.capture_expr.3, align 4, !tbaa !9
  store i32 %16, ptr %.omp.ub, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.stride) #13
  store i32 1, ptr %.omp.stride, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.is_last) #13
  store i32 0, ptr %.omp.is_last, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_cluster_idx10) #13
  %17 = load i32, ptr %2, align 4, !tbaa !9
  store i32 %17, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  %18 = load ptr, ptr %.global_tid..addr, align 8
  %19 = load i32, ptr %18, align 4, !tbaa !9
  call void @__kmpc_barrier(ptr @1, i32 %19)
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_211) #13
  %20 = load ptr, ptr %.global_tid..addr, align 8
  %21 = load i32, ptr %20, align 4, !tbaa !9
  call void @__kmpc_for_static_init_4(ptr @2, i32 %21, i32 34, ptr %.omp.is_last, ptr %.omp.lb, ptr %.omp.ub, ptr %.omp.stride, i32 1, i32 1)
  %22 = load i32, ptr %.omp.ub, align 4, !tbaa !9
  %23 = load i32, ptr %.capture_expr.3, align 4, !tbaa !9
  %cmp12 = icmp sgt i32 %22, %23
  br i1 %cmp12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %omp.precond.then
  %24 = load i32, ptr %.capture_expr.3, align 4, !tbaa !9
  br label %cond.end

cond.false:                                       ; preds = %omp.precond.then
  %25 = load i32, ptr %.omp.ub, align 4, !tbaa !9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %24, %cond.true ], [ %25, %cond.false ]
  store i32 %cond, ptr %.omp.ub, align 4, !tbaa !9
  %26 = load i32, ptr %.omp.lb, align 4, !tbaa !9
  store i32 %26, ptr %.omp.iv, align 4, !tbaa !9
  br label %omp.inner.for.cond

omp.inner.for.cond:                               ; preds = %omp.inner.for.inc, %cond.end
  %27 = load i32, ptr %.omp.iv, align 4, !tbaa !9
  %28 = load i32, ptr %.omp.ub, align 4, !tbaa !9
  %cmp14 = icmp sle i32 %27, %28
  br i1 %cmp14, label %omp.inner.for.body, label %omp.inner.for.cond.cleanup

omp.inner.for.cond.cleanup:                       ; preds = %omp.inner.for.cond
  br label %omp.inner.for.end

omp.inner.for.body:                               ; preds = %omp.inner.for.cond
  %29 = load i32, ptr %.omp.iv, align 4, !tbaa !9
  %mul16 = mul i32 %29, 1
  %add17 = add i32 0, %mul16
  store i32 %add17, ptr %__pyx_t_211, align 4, !tbaa !9
  %30 = load i32, ptr %__pyx_t_211, align 4, !tbaa !9
  %mul18 = mul i32 1, %30
  %add19 = add i32 0, %mul18
  store i32 %add19, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  %32 = load ptr, ptr %__pyx_v_indices, align 8, !tbaa !5
  call void @__pyx_fuse_1__pyx_f_7sklearn_7cluster_18_k_means_minibatch_update_center_dense(i32 noundef %31, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %3, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %4, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %5, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %6, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %7, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %8, ptr noundef %32)
  br label %omp.body.continue

omp.body.continue:                                ; preds = %omp.inner.for.body
  br label %omp.inner.for.inc

omp.inner.for.inc:                                ; preds = %omp.body.continue
  %33 = load i32, ptr %.omp.iv, align 4, !tbaa !9
  %add20 = add i32 %33, 1
  store i32 %add20, ptr %.omp.iv, align 4, !tbaa !9
  br label %omp.inner.for.cond

omp.inner.for.end:                                ; preds = %omp.inner.for.cond.cleanup
  br label %omp.loop.exit

omp.loop.exit:                                    ; preds = %omp.inner.for.end
  %34 = load ptr, ptr %.global_tid..addr, align 8
  %35 = load i32, ptr %34, align 4, !tbaa !9
  call void @__kmpc_for_static_fini(ptr @2, i32 %35)
  %36 = load i32, ptr %.omp.is_last, align 4, !tbaa !9
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %.omp.lastprivate.then, label %.omp.lastprivate.done

.omp.lastprivate.then:                            ; preds = %omp.loop.exit
  %38 = load i32, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  store i32 %38, ptr %2, align 4, !tbaa !9
  br label %.omp.lastprivate.done

.omp.lastprivate.done:                            ; preds = %.omp.lastprivate.then, %omp.loop.exit
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_211) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_cluster_idx10) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.is_last) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.stride) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.ub) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.lb) #13
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %.omp.lastprivate.done, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %.capture_expr.3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.capture_expr.) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.iv) #13
  %39 = load ptr, ptr %.global_tid..addr, align 8
  %40 = load i32, ptr %39, align 4, !tbaa !9
  call void @__kmpc_barrier(ptr @1, i32 %40)
  br label %if.end

if.end:                                           ; preds = %omp.precond.end, %entry
  %41 = load ptr, ptr %__pyx_v_indices, align 8, !tbaa !5
  call void @free(ptr noundef %41) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_indices) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_fuse_1__pyx_f_7sklearn_7cluster_18_k_means_minibatch_update_center_dense(i32 noundef %__pyx_v_cluster_idx, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_X, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_sample_weight, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_old, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_new, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_weight_sums, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_labels, ptr noundef %__pyx_v_indices) #0 {
entry:
  %__pyx_v_cluster_idx.addr = alloca i32, align 4
  %__pyx_v_indices.addr = alloca ptr, align 8
  %__pyx_v_n_samples = alloca i32, align 4
  %__pyx_v_n_features = alloca i32, align 4
  %__pyx_v_alpha = alloca double, align 8
  %__pyx_v_n_indices = alloca i32, align 4
  %__pyx_v_k = alloca i32, align 4
  %__pyx_v_sample_idx = alloca i32, align 4
  %__pyx_v_feature_idx = alloca i32, align 4
  %__pyx_v_wsum = alloca double, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i64, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca i64, align 8
  %__pyx_t_7 = alloca i64, align 8
  %__pyx_t_8 = alloca i64, align 8
  %__pyx_t_9 = alloca i64, align 8
  %__pyx_t_10 = alloca i32, align 4
  %__pyx_t_11 = alloca i32, align 4
  %__pyx_t_12 = alloca i32, align 4
  store i32 %__pyx_v_cluster_idx, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  store ptr %__pyx_v_indices, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_samples) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_features) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_alpha) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_indices) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_k) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_sample_idx) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_feature_idx) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_wsum) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_12) #13
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 2
  %arrayidx = getelementptr [8 x i64], ptr %shape, i64 0, i64 0
  %0 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %conv = trunc i64 %0 to i32
  store i32 %conv, ptr %__pyx_v_n_samples, align 4, !tbaa !9
  %shape1 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 2
  %arrayidx2 = getelementptr [8 x i64], ptr %shape1, i64 0, i64 1
  %1 = load i64, ptr %arrayidx2, align 8, !tbaa !27
  %conv3 = trunc i64 %1 to i32
  store i32 %conv3, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store double 0.000000e+00, ptr %__pyx_v_wsum, align 8, !tbaa !225
  store i32 0, ptr %__pyx_v_k, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_v_n_samples, align 4, !tbaa !9
  store i32 %2, ptr %__pyx_t_1, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %3, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %6, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv5 = sext i32 %7 to i64
  store i64 %conv5, ptr %__pyx_t_4, align 8, !tbaa !27
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_labels, i32 0, i32 1
  %8 = load ptr, ptr %data, align 8, !tbaa !188
  %9 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr = getelementptr i32, ptr %8, i64 %9
  %10 = load i32, ptr %add.ptr, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %cmp6 = icmp eq i32 %10, %11
  %conv7 = zext i1 %cmp6 to i32
  %cmp8 = icmp ne i32 %conv7, 0
  %conv9 = zext i1 %cmp8 to i32
  store i32 %conv9, ptr %__pyx_t_5, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %13 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %14 = load ptr, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  %15 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  %idxprom = sext i32 %15 to i64
  %arrayidx10 = getelementptr i32, ptr %14, i64 %idxprom
  store i32 %13, ptr %arrayidx10, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv11 = sext i32 %16 to i64
  store i64 %conv11, ptr %__pyx_t_4, align 8, !tbaa !27
  %17 = load double, ptr %__pyx_v_wsum, align 8, !tbaa !225
  %data12 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 1
  %18 = load ptr, ptr %data12, align 8, !tbaa !188
  %19 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr13 = getelementptr double, ptr %18, i64 %19
  %20 = load double, ptr %add.ptr13, align 8, !tbaa !225
  %add = fadd double %17, %20
  store double %add, ptr %__pyx_v_wsum, align 8, !tbaa !225
  %21 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  %add14 = add i32 %21, 1
  store i32 %add14, ptr %__pyx_v_k, align 4, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %22 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add15 = add i32 %22, 1
  store i32 %add15, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !308

for.end:                                          ; preds = %for.cond
  %23 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  store i32 %23, ptr %__pyx_v_n_indices, align 4, !tbaa !9
  %24 = load double, ptr %__pyx_v_wsum, align 8, !tbaa !225
  %cmp16 = fcmp ogt double %24, 0.000000e+00
  %conv17 = zext i1 %cmp16 to i32
  %cmp18 = icmp ne i32 %conv17, 0
  %conv19 = zext i1 %cmp18 to i32
  store i32 %conv19, ptr %__pyx_t_5, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %tobool20 = icmp ne i32 %25, 0
  br i1 %tobool20, label %if.then21, label %if.end106

if.then21:                                        ; preds = %for.end
  %26 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %26, ptr %__pyx_t_1, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %27, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc44, %if.then21
  %28 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp23 = icmp slt i32 %28, %29
  br i1 %cmp23, label %for.body25, label %for.end46

for.body25:                                       ; preds = %for.cond22
  %30 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %30, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv26 = sext i32 %31 to i64
  store i64 %conv26, ptr %__pyx_t_4, align 8, !tbaa !27
  %32 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv27 = sext i32 %32 to i64
  store i64 %conv27, ptr %__pyx_t_6, align 8, !tbaa !27
  %33 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv28 = sext i32 %33 to i64
  store i64 %conv28, ptr %__pyx_t_7, align 8, !tbaa !27
  %34 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv29 = sext i32 %34 to i64
  store i64 %conv29, ptr %__pyx_t_8, align 8, !tbaa !27
  %35 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv30 = sext i32 %35 to i64
  store i64 %conv30, ptr %__pyx_t_9, align 8, !tbaa !27
  %data31 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 1
  %36 = load ptr, ptr %data31, align 8, !tbaa !188
  %37 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 3
  %arrayidx32 = getelementptr [8 x i64], ptr %strides, i64 0, i64 0
  %38 = load i64, ptr %arrayidx32, align 8, !tbaa !27
  %mul = mul i64 %37, %38
  %add.ptr33 = getelementptr i8, ptr %36, i64 %mul
  %39 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %add.ptr34 = getelementptr double, ptr %add.ptr33, i64 %39
  %40 = load double, ptr %add.ptr34, align 8, !tbaa !225
  %data35 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 1
  %41 = load ptr, ptr %data35, align 8, !tbaa !188
  %42 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr36 = getelementptr double, ptr %41, i64 %42
  %43 = load double, ptr %add.ptr36, align 8, !tbaa !225
  %mul37 = fmul double %40, %43
  %data38 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %44 = load ptr, ptr %data38, align 8, !tbaa !188
  %45 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %strides39 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx40 = getelementptr [8 x i64], ptr %strides39, i64 0, i64 0
  %46 = load i64, ptr %arrayidx40, align 8, !tbaa !27
  %mul41 = mul i64 %45, %46
  %add.ptr42 = getelementptr i8, ptr %44, i64 %mul41
  %47 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %add.ptr43 = getelementptr double, ptr %add.ptr42, i64 %47
  store double %mul37, ptr %add.ptr43, align 8, !tbaa !225
  br label %for.inc44

for.inc44:                                        ; preds = %for.body25
  %48 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add45 = add i32 %48, 1
  store i32 %add45, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond22, !llvm.loop !309

for.end46:                                        ; preds = %for.cond22
  %49 = load i32, ptr %__pyx_v_n_indices, align 4, !tbaa !9
  store i32 %49, ptr %__pyx_t_1, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %50, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond47

for.cond47:                                       ; preds = %for.inc80, %for.end46
  %51 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %52 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp48 = icmp slt i32 %51, %52
  br i1 %cmp48, label %for.body50, label %for.end82

for.body50:                                       ; preds = %for.cond47
  %53 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %53, ptr %__pyx_v_k, align 4, !tbaa !9
  %54 = load ptr, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  %55 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  %idxprom51 = sext i32 %55 to i64
  %arrayidx52 = getelementptr i32, ptr %54, i64 %idxprom51
  %56 = load i32, ptr %arrayidx52, align 4, !tbaa !9
  store i32 %56, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %57 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %57, ptr %__pyx_t_10, align 4, !tbaa !9
  %58 = load i32, ptr %__pyx_t_10, align 4, !tbaa !9
  store i32 %58, ptr %__pyx_t_11, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_12, align 4, !tbaa !9
  br label %for.cond53

for.cond53:                                       ; preds = %for.inc77, %for.body50
  %59 = load i32, ptr %__pyx_t_12, align 4, !tbaa !9
  %60 = load i32, ptr %__pyx_t_11, align 4, !tbaa !9
  %cmp54 = icmp slt i32 %59, %60
  br i1 %cmp54, label %for.body56, label %for.end79

for.body56:                                       ; preds = %for.cond53
  %61 = load i32, ptr %__pyx_t_12, align 4, !tbaa !9
  store i32 %61, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %62 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv57 = sext i32 %62 to i64
  store i64 %conv57, ptr %__pyx_t_7, align 8, !tbaa !27
  %63 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv58 = sext i32 %63 to i64
  store i64 %conv58, ptr %__pyx_t_6, align 8, !tbaa !27
  %64 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv59 = sext i32 %64 to i64
  store i64 %conv59, ptr %__pyx_t_4, align 8, !tbaa !27
  %65 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv60 = sext i32 %65 to i64
  store i64 %conv60, ptr %__pyx_t_9, align 8, !tbaa !27
  %66 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv61 = sext i32 %66 to i64
  store i64 %conv61, ptr %__pyx_t_8, align 8, !tbaa !27
  %data62 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X, i32 0, i32 1
  %67 = load ptr, ptr %data62, align 8, !tbaa !188
  %68 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %strides63 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X, i32 0, i32 3
  %arrayidx64 = getelementptr [8 x i64], ptr %strides63, i64 0, i64 0
  %69 = load i64, ptr %arrayidx64, align 8, !tbaa !27
  %mul65 = mul i64 %68, %69
  %add.ptr66 = getelementptr i8, ptr %67, i64 %mul65
  %70 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %add.ptr67 = getelementptr double, ptr %add.ptr66, i64 %70
  %71 = load double, ptr %add.ptr67, align 8, !tbaa !225
  %data68 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 1
  %72 = load ptr, ptr %data68, align 8, !tbaa !188
  %73 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr69 = getelementptr double, ptr %72, i64 %73
  %74 = load double, ptr %add.ptr69, align 8, !tbaa !225
  %data71 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %75 = load ptr, ptr %data71, align 8, !tbaa !188
  %76 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %strides72 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx73 = getelementptr [8 x i64], ptr %strides72, i64 0, i64 0
  %77 = load i64, ptr %arrayidx73, align 8, !tbaa !27
  %mul74 = mul i64 %76, %77
  %add.ptr75 = getelementptr i8, ptr %75, i64 %mul74
  %78 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %add.ptr76 = getelementptr double, ptr %add.ptr75, i64 %78
  %79 = load double, ptr %add.ptr76, align 8, !tbaa !225
  %80 = call double @llvm.fmuladd.f64(double %71, double %74, double %79)
  store double %80, ptr %add.ptr76, align 8, !tbaa !225
  br label %for.inc77

for.inc77:                                        ; preds = %for.body56
  %81 = load i32, ptr %__pyx_t_12, align 4, !tbaa !9
  %add78 = add i32 %81, 1
  store i32 %add78, ptr %__pyx_t_12, align 4, !tbaa !9
  br label %for.cond53, !llvm.loop !310

for.end79:                                        ; preds = %for.cond53
  br label %for.inc80

for.inc80:                                        ; preds = %for.end79
  %82 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add81 = add i32 %82, 1
  store i32 %add81, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond47, !llvm.loop !311

for.end82:                                        ; preds = %for.cond47
  %83 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv83 = sext i32 %83 to i64
  store i64 %conv83, ptr %__pyx_t_4, align 8, !tbaa !27
  %84 = load double, ptr %__pyx_v_wsum, align 8, !tbaa !225
  %data84 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 1
  %85 = load ptr, ptr %data84, align 8, !tbaa !188
  %86 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr85 = getelementptr double, ptr %85, i64 %86
  %87 = load double, ptr %add.ptr85, align 8, !tbaa !225
  %add86 = fadd double %87, %84
  store double %add86, ptr %add.ptr85, align 8, !tbaa !225
  %88 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv87 = sext i32 %88 to i64
  store i64 %conv87, ptr %__pyx_t_4, align 8, !tbaa !27
  %data88 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 1
  %89 = load ptr, ptr %data88, align 8, !tbaa !188
  %90 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr89 = getelementptr double, ptr %89, i64 %90
  %91 = load double, ptr %add.ptr89, align 8, !tbaa !225
  %div = fdiv double 1.000000e+00, %91
  store double %div, ptr %__pyx_v_alpha, align 8, !tbaa !225
  %92 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %92, ptr %__pyx_t_1, align 4, !tbaa !9
  %93 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %93, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond90

for.cond90:                                       ; preds = %for.inc103, %for.end82
  %94 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %95 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp91 = icmp slt i32 %94, %95
  br i1 %cmp91, label %for.body93, label %for.end105

for.body93:                                       ; preds = %for.cond90
  %96 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %96, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %97 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv94 = sext i32 %97 to i64
  store i64 %conv94, ptr %__pyx_t_4, align 8, !tbaa !27
  %98 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv95 = sext i32 %98 to i64
  store i64 %conv95, ptr %__pyx_t_6, align 8, !tbaa !27
  %99 = load double, ptr %__pyx_v_alpha, align 8, !tbaa !225
  %data96 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %100 = load ptr, ptr %data96, align 8, !tbaa !188
  %101 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %strides97 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx98 = getelementptr [8 x i64], ptr %strides97, i64 0, i64 0
  %102 = load i64, ptr %arrayidx98, align 8, !tbaa !27
  %mul99 = mul i64 %101, %102
  %add.ptr100 = getelementptr i8, ptr %100, i64 %mul99
  %103 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %add.ptr101 = getelementptr double, ptr %add.ptr100, i64 %103
  %104 = load double, ptr %add.ptr101, align 8, !tbaa !225
  %mul102 = fmul double %104, %99
  store double %mul102, ptr %add.ptr101, align 8, !tbaa !225
  br label %for.inc103

for.inc103:                                       ; preds = %for.body93
  %105 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add104 = add i32 %105, 1
  store i32 %add104, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond90, !llvm.loop !312

for.end105:                                       ; preds = %for.cond90
  br label %__pyx_L6

if.end106:                                        ; preds = %for.end
  %106 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %106, ptr %__pyx_t_1, align 4, !tbaa !9
  %107 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %107, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond107

for.cond107:                                      ; preds = %for.inc127, %if.end106
  %108 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %109 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp108 = icmp slt i32 %108, %109
  br i1 %cmp108, label %for.body110, label %for.end129

for.body110:                                      ; preds = %for.cond107
  %110 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %110, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %111 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv111 = sext i32 %111 to i64
  store i64 %conv111, ptr %__pyx_t_6, align 8, !tbaa !27
  %112 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv112 = sext i32 %112 to i64
  store i64 %conv112, ptr %__pyx_t_4, align 8, !tbaa !27
  %113 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv113 = sext i32 %113 to i64
  store i64 %conv113, ptr %__pyx_t_7, align 8, !tbaa !27
  %114 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv114 = sext i32 %114 to i64
  store i64 %conv114, ptr %__pyx_t_8, align 8, !tbaa !27
  %data115 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 1
  %115 = load ptr, ptr %data115, align 8, !tbaa !188
  %116 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %strides116 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 3
  %arrayidx117 = getelementptr [8 x i64], ptr %strides116, i64 0, i64 0
  %117 = load i64, ptr %arrayidx117, align 8, !tbaa !27
  %mul118 = mul i64 %116, %117
  %add.ptr119 = getelementptr i8, ptr %115, i64 %mul118
  %118 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr120 = getelementptr double, ptr %add.ptr119, i64 %118
  %119 = load double, ptr %add.ptr120, align 8, !tbaa !225
  %data121 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %120 = load ptr, ptr %data121, align 8, !tbaa !188
  %121 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %strides122 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx123 = getelementptr [8 x i64], ptr %strides122, i64 0, i64 0
  %122 = load i64, ptr %arrayidx123, align 8, !tbaa !27
  %mul124 = mul i64 %121, %122
  %add.ptr125 = getelementptr i8, ptr %120, i64 %mul124
  %123 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %add.ptr126 = getelementptr double, ptr %add.ptr125, i64 %123
  store double %119, ptr %add.ptr126, align 8, !tbaa !225
  br label %for.inc127

for.inc127:                                       ; preds = %for.body110
  %124 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add128 = add i32 %124, 1
  store i32 %add128, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond107, !llvm.loop !313

for.end129:                                       ; preds = %for.cond107
  br label %__pyx_L6

__pyx_L6:                                         ; preds = %for.end129, %for.end105
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_wsum) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_feature_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_sample_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_k) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_indices) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_alpha) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_features) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_samples) #13
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #14

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_1_minibatch_update_dense(ptr noundef %__pyx_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_signatures = alloca ptr, align 8
  %__pyx_v_args = alloca ptr, align 8
  %__pyx_v_kwargs = alloca ptr, align 8
  %__pyx_v_defaults = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %values = alloca [4 x ptr], align 16
  %kw_args = alloca i64, align 8
  %pos_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !5
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_signatures) #13
  store ptr null, ptr %__pyx_v_signatures, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_args) #13
  store ptr null, ptr %__pyx_v_args, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_kwargs) #13
  store ptr null, ptr %__pyx_v_kwargs, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_defaults) #13
  store ptr null, ptr %__pyx_v_defaults, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 32, ptr %values) #13
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 32, i1 false)
  %0 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else105

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos_args) #13
  %1 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1)
  store i64 %call, ptr %pos_args, align 8, !tbaa !27
  %2 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %2, label %sw.default [
    i64 4, label %sw.bb
    i64 3, label %sw.bb4
    i64 2, label %sw.bb8
    i64 1, label %sw.bb12
    i64 0, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.then
  %3 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 3
  %4 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %arrayidx3 = getelementptr [4 x ptr], ptr %values, i64 0, i64 3
  store ptr %4, ptr %arrayidx3, align 8, !tbaa !5
  br label %sw.bb4

sw.bb4:                                           ; preds = %if.then, %sw.bb
  %5 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %5, i32 0, i32 1
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 2
  %6 = load ptr, ptr %arrayidx6, align 8, !tbaa !5
  %arrayidx7 = getelementptr [4 x ptr], ptr %values, i64 0, i64 2
  store ptr %6, ptr %arrayidx7, align 16, !tbaa !5
  br label %sw.bb8

sw.bb8:                                           ; preds = %if.then, %sw.bb4
  %7 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item9 = getelementptr inbounds %struct.PyTupleObject, ptr %7, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x ptr], ptr %ob_item9, i64 0, i64 1
  %8 = load ptr, ptr %arrayidx10, align 8, !tbaa !5
  %arrayidx11 = getelementptr [4 x ptr], ptr %values, i64 0, i64 1
  store ptr %8, ptr %arrayidx11, align 8, !tbaa !5
  br label %sw.bb12

sw.bb12:                                          ; preds = %if.then, %sw.bb8
  %9 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item13 = getelementptr inbounds %struct.PyTupleObject, ptr %9, i32 0, i32 1
  %arrayidx14 = getelementptr [1 x ptr], ptr %ob_item13, i64 0, i64 0
  %10 = load ptr, ptr %arrayidx14, align 8, !tbaa !5
  %arrayidx15 = getelementptr [4 x ptr], ptr %values, i64 0, i64 0
  store ptr %10, ptr %arrayidx15, align 16, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb12, %if.then
  %11 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %call16 = call i64 @PyDict_Size(ptr noundef %11)
  store i64 %call16, ptr %kw_args, align 8, !tbaa !27
  %12 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %12, label %sw.epilog80 [
    i64 0, label %sw.bb17
    i64 1, label %sw.bb29
    i64 2, label %sw.bb46
    i64 3, label %sw.bb63
  ]

sw.bb17:                                          ; preds = %sw.epilog
  %13 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %14 = load ptr, ptr @__pyx_n_s_signatures, align 8, !tbaa !5
  %15 = load ptr, ptr @__pyx_n_s_signatures, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %15, i32 0, i32 2
  %16 = load i64, ptr %hash, align 8, !tbaa !154
  %call18 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %13, ptr noundef %14, i64 noundef %16)
  %arrayidx19 = getelementptr [4 x ptr], ptr %values, i64 0, i64 0
  store ptr %call18, ptr %arrayidx19, align 16, !tbaa !5
  %cmp = icmp ne ptr %call18, null
  %lnot21 = xor i1 %cmp, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 1)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.else

if.then28:                                        ; preds = %sw.bb17
  %17 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec = add i64 %17, -1
  store i64 %dec, ptr %kw_args, align 8, !tbaa !27
  br label %if.end

if.else:                                          ; preds = %sw.bb17
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then28
  br label %sw.bb29

sw.bb29:                                          ; preds = %sw.epilog, %if.end
  %18 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %19 = load ptr, ptr @__pyx_n_s_args, align 8, !tbaa !5
  %20 = load ptr, ptr @__pyx_n_s_args, align 8, !tbaa !5
  %hash30 = getelementptr inbounds %struct.PyASCIIObject, ptr %20, i32 0, i32 2
  %21 = load i64, ptr %hash30, align 8, !tbaa !154
  %call31 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %18, ptr noundef %19, i64 noundef %21)
  %arrayidx32 = getelementptr [4 x ptr], ptr %values, i64 0, i64 1
  store ptr %call31, ptr %arrayidx32, align 8, !tbaa !5
  %cmp33 = icmp ne ptr %call31, null
  %lnot35 = xor i1 %cmp33, true
  %lnot37 = xor i1 %lnot35, true
  %lnot.ext38 = zext i1 %lnot37 to i32
  %conv39 = sext i32 %lnot.ext38 to i64
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 1)
  %tobool41 = icmp ne i64 %expval40, 0
  br i1 %tobool41, label %if.then42, label %if.else44

if.then42:                                        ; preds = %sw.bb29
  %22 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec43 = add i64 %22, -1
  store i64 %dec43, ptr %kw_args, align 8, !tbaa !27
  br label %if.end45

if.else44:                                        ; preds = %sw.bb29
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.284, i32 noundef 1, i64 noundef 4, i64 noundef 4, i64 noundef 1)
  %23 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %23, ptr %__pyx_filename, align 8, !tbaa !5
  %24 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2520, ptr %__pyx_clineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end45:                                         ; preds = %if.then42
  br label %sw.bb46

sw.bb46:                                          ; preds = %sw.epilog, %if.end45
  %27 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %28 = load ptr, ptr @__pyx_n_s_kwargs, align 8, !tbaa !5
  %29 = load ptr, ptr @__pyx_n_s_kwargs, align 8, !tbaa !5
  %hash47 = getelementptr inbounds %struct.PyASCIIObject, ptr %29, i32 0, i32 2
  %30 = load i64, ptr %hash47, align 8, !tbaa !154
  %call48 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %27, ptr noundef %28, i64 noundef %30)
  %arrayidx49 = getelementptr [4 x ptr], ptr %values, i64 0, i64 2
  store ptr %call48, ptr %arrayidx49, align 16, !tbaa !5
  %cmp50 = icmp ne ptr %call48, null
  %lnot52 = xor i1 %cmp50, true
  %lnot54 = xor i1 %lnot52, true
  %lnot.ext55 = zext i1 %lnot54 to i32
  %conv56 = sext i32 %lnot.ext55 to i64
  %expval57 = call i64 @llvm.expect.i64(i64 %conv56, i64 1)
  %tobool58 = icmp ne i64 %expval57, 0
  br i1 %tobool58, label %if.then59, label %if.else61

if.then59:                                        ; preds = %sw.bb46
  %31 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec60 = add i64 %31, -1
  store i64 %dec60, ptr %kw_args, align 8, !tbaa !27
  br label %if.end62

if.else61:                                        ; preds = %sw.bb46
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.284, i32 noundef 1, i64 noundef 4, i64 noundef 4, i64 noundef 2)
  %32 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %32, ptr %__pyx_filename, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2526, ptr %__pyx_clineno, align 4, !tbaa !9
  %35 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end62:                                         ; preds = %if.then59
  br label %sw.bb63

sw.bb63:                                          ; preds = %sw.epilog, %if.end62
  %36 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %37 = load ptr, ptr @__pyx_n_s_defaults, align 8, !tbaa !5
  %38 = load ptr, ptr @__pyx_n_s_defaults, align 8, !tbaa !5
  %hash64 = getelementptr inbounds %struct.PyASCIIObject, ptr %38, i32 0, i32 2
  %39 = load i64, ptr %hash64, align 8, !tbaa !154
  %call65 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %36, ptr noundef %37, i64 noundef %39)
  %arrayidx66 = getelementptr [4 x ptr], ptr %values, i64 0, i64 3
  store ptr %call65, ptr %arrayidx66, align 8, !tbaa !5
  %cmp67 = icmp ne ptr %call65, null
  %lnot69 = xor i1 %cmp67, true
  %lnot71 = xor i1 %lnot69, true
  %lnot.ext72 = zext i1 %lnot71 to i32
  %conv73 = sext i32 %lnot.ext72 to i64
  %expval74 = call i64 @llvm.expect.i64(i64 %conv73, i64 1)
  %tobool75 = icmp ne i64 %expval74, 0
  br i1 %tobool75, label %if.then76, label %if.else78

if.then76:                                        ; preds = %sw.bb63
  %40 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec77 = add i64 %40, -1
  store i64 %dec77, ptr %kw_args, align 8, !tbaa !27
  br label %if.end79

if.else78:                                        ; preds = %sw.bb63
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.284, i32 noundef 1, i64 noundef 4, i64 noundef 4, i64 noundef 3)
  %41 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %41, ptr %__pyx_filename, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %43 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2532, ptr %__pyx_clineno, align 4, !tbaa !9
  %44 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end79:                                         ; preds = %if.then76
  br label %sw.epilog80

sw.epilog80:                                      ; preds = %if.end79, %sw.epilog
  %45 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp81 = icmp sgt i64 %45, 0
  %lnot83 = xor i1 %cmp81, true
  %lnot85 = xor i1 %lnot83, true
  %lnot.ext86 = zext i1 %lnot85 to i32
  %conv87 = sext i32 %lnot.ext86 to i64
  %expval88 = call i64 @llvm.expect.i64(i64 %conv87, i64 0)
  %tobool89 = icmp ne i64 %expval88, 0
  br i1 %tobool89, label %if.then90, label %if.end103

if.then90:                                        ; preds = %sw.epilog80
  %46 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %arraydecay = getelementptr inbounds [4 x ptr], ptr %values, i64 0, i64 0
  %47 = load i64, ptr %pos_args, align 8, !tbaa !27
  %call91 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %46, ptr noundef @__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_1_minibatch_update_dense.__pyx_pyargnames, ptr noundef null, ptr noundef %arraydecay, i64 noundef %47, ptr noundef @.str.284)
  %cmp92 = icmp slt i32 %call91, 0
  %lnot94 = xor i1 %cmp92, true
  %lnot96 = xor i1 %lnot94, true
  %lnot.ext97 = zext i1 %lnot96 to i32
  %conv98 = sext i32 %lnot.ext97 to i64
  %expval99 = call i64 @llvm.expect.i64(i64 %conv98, i64 0)
  %tobool100 = icmp ne i64 %expval99, 0
  br i1 %tobool100, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.then90
  %48 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %48, ptr %__pyx_filename, align 8, !tbaa !5
  %49 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2536, ptr %__pyx_clineno, align 4, !tbaa !9
  %51 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end102:                                        ; preds = %if.then90
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %sw.epilog80
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then101, %if.else78, %if.else61, %if.else44, %if.else, %sw.default, %if.end103
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup129 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end124

if.else105:                                       ; preds = %entry
  %52 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call106 = call i64 @PyTuple_GET_SIZE(ptr noundef %52)
  %cmp107 = icmp ne i64 %call106, 4
  br i1 %cmp107, label %if.then109, label %if.else110

if.then109:                                       ; preds = %if.else105
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup129

if.else110:                                       ; preds = %if.else105
  %53 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item111 = getelementptr inbounds %struct.PyTupleObject, ptr %53, i32 0, i32 1
  %arrayidx112 = getelementptr [1 x ptr], ptr %ob_item111, i64 0, i64 0
  %54 = load ptr, ptr %arrayidx112, align 8, !tbaa !5
  %arrayidx113 = getelementptr [4 x ptr], ptr %values, i64 0, i64 0
  store ptr %54, ptr %arrayidx113, align 16, !tbaa !5
  %55 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item114 = getelementptr inbounds %struct.PyTupleObject, ptr %55, i32 0, i32 1
  %arrayidx115 = getelementptr [1 x ptr], ptr %ob_item114, i64 0, i64 1
  %56 = load ptr, ptr %arrayidx115, align 8, !tbaa !5
  %arrayidx116 = getelementptr [4 x ptr], ptr %values, i64 0, i64 1
  store ptr %56, ptr %arrayidx116, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item117 = getelementptr inbounds %struct.PyTupleObject, ptr %57, i32 0, i32 1
  %arrayidx118 = getelementptr [1 x ptr], ptr %ob_item117, i64 0, i64 2
  %58 = load ptr, ptr %arrayidx118, align 8, !tbaa !5
  %arrayidx119 = getelementptr [4 x ptr], ptr %values, i64 0, i64 2
  store ptr %58, ptr %arrayidx119, align 16, !tbaa !5
  %59 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item120 = getelementptr inbounds %struct.PyTupleObject, ptr %59, i32 0, i32 1
  %arrayidx121 = getelementptr [1 x ptr], ptr %ob_item120, i64 0, i64 3
  %60 = load ptr, ptr %arrayidx121, align 8, !tbaa !5
  %arrayidx122 = getelementptr [4 x ptr], ptr %values, i64 0, i64 3
  store ptr %60, ptr %arrayidx122, align 8, !tbaa !5
  br label %if.end123

if.end123:                                        ; preds = %if.else110
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %cleanup.cont
  %arrayidx125 = getelementptr [4 x ptr], ptr %values, i64 0, i64 0
  %61 = load ptr, ptr %arrayidx125, align 16, !tbaa !5
  store ptr %61, ptr %__pyx_v_signatures, align 8, !tbaa !5
  %arrayidx126 = getelementptr [4 x ptr], ptr %values, i64 0, i64 1
  %62 = load ptr, ptr %arrayidx126, align 8, !tbaa !5
  store ptr %62, ptr %__pyx_v_args, align 8, !tbaa !5
  %arrayidx127 = getelementptr [4 x ptr], ptr %values, i64 0, i64 2
  %63 = load ptr, ptr %arrayidx127, align 16, !tbaa !5
  store ptr %63, ptr %__pyx_v_kwargs, align 8, !tbaa !5
  %arrayidx128 = getelementptr [4 x ptr], ptr %values, i64 0, i64 3
  %64 = load ptr, ptr %arrayidx128, align 8, !tbaa !5
  store ptr %64, ptr %__pyx_v_defaults, align 8, !tbaa !5
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup129

cleanup129:                                       ; preds = %if.then109, %if.end124, %cleanup
  call void @llvm.lifetime.end.p0(i64 32, ptr %values) #13
  %cleanup.dest130 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest130, label %cleanup134 [
    i32 0, label %cleanup.cont131
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont131:                                  ; preds = %cleanup129
  br label %__pyx_L4_argument_unpacking_done

__pyx_L5_argtuple_error:                          ; preds = %cleanup129
  %65 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call132 = call i64 @PyTuple_GET_SIZE(ptr noundef %65)
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.284, i32 noundef 1, i64 noundef 4, i64 noundef 4, i64 noundef %call132)
  %66 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %66, ptr %__pyx_filename, align 8, !tbaa !5
  %67 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %68 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2553, ptr %__pyx_clineno, align 4, !tbaa !9
  %69 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

__pyx_L3_error:                                   ; preds = %cleanup129, %__pyx_L5_argtuple_error
  %70 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %71 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %72 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.285, i32 noundef %70, i32 noundef %71, ptr noundef %72)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup134

__pyx_L4_argument_unpacking_done:                 ; preds = %cleanup.cont131
  %73 = load ptr, ptr %__pyx_self.addr, align 8, !tbaa !5
  %74 = load ptr, ptr %__pyx_v_signatures, align 8, !tbaa !5
  %75 = load ptr, ptr %__pyx_v_args, align 8, !tbaa !5
  %76 = load ptr, ptr %__pyx_v_kwargs, align 8, !tbaa !5
  %77 = load ptr, ptr %__pyx_v_defaults, align 8, !tbaa !5
  %call133 = call ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch__minibatch_update_dense(ptr noundef %73, ptr noundef %74, ptr noundef %75, ptr noundef %76, ptr noundef %77)
  store ptr %call133, ptr %__pyx_r, align 8, !tbaa !5
  %78 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  store ptr %78, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup134

cleanup134:                                       ; preds = %__pyx_L4_argument_unpacking_done, %__pyx_L3_error, %cleanup129
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_defaults) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_kwargs) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_signatures) #13
  %79 = load ptr, ptr %retval, align 8
  ret ptr %79
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch__minibatch_update_dense(ptr noundef %__pyx_self, ptr noundef %__pyx_v_signatures, ptr noundef %__pyx_v_args, ptr noundef %__pyx_v_kwargs, ptr noundef %__pyx_v_defaults) #0 {
entry:
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_v_signatures.addr = alloca ptr, align 8
  %__pyx_v_args.addr = alloca ptr, align 8
  %__pyx_v_kwargs.addr = alloca ptr, align 8
  %__pyx_v_defaults.addr = alloca ptr, align 8
  %__pyx_v_dest_sig = alloca ptr, align 8
  %__pyx_v_i = alloca i64, align 8
  %__pyx_v_ndarray = alloca ptr, align 8
  %__pyx_v_memslice = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_itemsize = alloca i64, align 8
  %__pyx_v_dtype_signed = alloca i32, align 4
  %__pyx_v_kind = alloca i8, align 1
  %__pyx_v_arg = alloca ptr, align 8
  %__pyx_v_dtype = alloca ptr, align 8
  %__pyx_v_arg_base = alloca ptr, align 8
  %__pyx_v_candidates = alloca ptr, align 8
  %__pyx_v_sig = alloca ptr, align 8
  %__pyx_v_match_found = alloca i32, align 4
  %__pyx_v_src_sig = alloca ptr, align 8
  %__pyx_v_dst_type = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca i64, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca i64, align 8
  %__pyx_t_8 = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_t_9 = alloca i64, align 8
  %__pyx_t_10 = alloca i32, align 4
  %__pyx_t_11 = alloca i32, align 4
  %__pyx_t_12 = alloca ptr, align 8
  %__pyx_t_13 = alloca ptr, align 8
  %__pyx_t_14 = alloca ptr, align 8
  %__pyx_t_15 = alloca i64, align 8
  %__pyx_t_16 = alloca i64, align 8
  %__pyx_t_17 = alloca i64, align 8
  %__pyx_t_18 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %tmp488 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp521 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp616 = alloca ptr, align 8
  %function = alloca ptr, align 8
  %tmp652 = alloca ptr, align 8
  %function709 = alloca ptr, align 8
  %tmp712 = alloca ptr, align 8
  %tmp737 = alloca ptr, align 8
  %tmp757 = alloca ptr, align 8
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_signatures, ptr %__pyx_v_signatures.addr, align 8, !tbaa !5
  store ptr %__pyx_v_args, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  store ptr %__pyx_v_kwargs, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  store ptr %__pyx_v_defaults, ptr %__pyx_v_defaults.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_dest_sig) #13
  store ptr null, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_ndarray) #13
  store ptr null, ptr %__pyx_v_ndarray, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_memslice) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_itemsize) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_dtype_signed) #13
  call void @llvm.lifetime.start.p0(i64 1, ptr %__pyx_v_kind) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_arg) #13
  store ptr null, ptr %__pyx_v_arg, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_dtype) #13
  store ptr null, ptr %__pyx_v_dtype, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_arg_base) #13
  store ptr null, ptr %__pyx_v_arg_base, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_candidates) #13
  store ptr null, ptr %__pyx_v_candidates, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_sig) #13
  store ptr null, ptr %__pyx_v_sig, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_match_found) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_src_sig) #13
  store ptr null, ptr %__pyx_v_src_sig, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_dst_type) #13
  store ptr null, ptr %__pyx_v_dst_type, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_12) #13
  store ptr null, ptr %__pyx_t_12, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_13) #13
  store ptr null, ptr %__pyx_t_13, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_14) #13
  store ptr null, ptr %__pyx_t_14, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_15) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_16) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_17) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_18) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %0)
  %call = call ptr @PyList_New(i64 noundef 1)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2607, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %6 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyList_SET_ITEM(ptr noundef %6, i64 noundef 0, ptr noundef @_Py_NoneStruct)
  %7 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %7, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %cmp = icmp ne ptr %8, @_Py_NoneStruct
  %conv4 = zext i1 %cmp to i32
  store i32 %conv4, ptr %__pyx_t_3, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp5 = icmp ne i32 %9, 0
  %conv6 = zext i1 %cmp5 to i32
  store i32 %conv6, ptr %__pyx_t_4, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool7 = icmp ne i32 %10, 0
  br i1 %tobool7, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.end
  br label %if.end9

if.else:                                          ; preds = %if.end
  %11 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  store i32 %11, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L4_bool_binop_done

if.end9:                                          ; preds = %if.then8
  %12 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %call10 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %12)
  store i32 %call10, ptr %__pyx_t_4, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp11 = icmp slt i32 %13, 0
  %lnot13 = xor i1 %cmp11, true
  %lnot15 = xor i1 %lnot13, true
  %lnot.ext16 = zext i1 %lnot15 to i32
  %conv17 = sext i32 %lnot.ext16 to i64
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 0)
  %tobool19 = icmp ne i64 %expval18, 0
  br i1 %tobool19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end9
  %14 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %14, ptr %__pyx_filename, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2621, ptr %__pyx_clineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end21:                                         ; preds = %if.end9
  %18 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool22 = icmp ne i32 %18, 0
  %lnot23 = xor i1 %tobool22, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %cmp25 = icmp ne i32 %lnot.ext24, 0
  %conv26 = zext i1 %cmp25 to i32
  store i32 %conv26, ptr %__pyx_t_3, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %19, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L4_bool_binop_done

__pyx_L4_bool_binop_done:                         ; preds = %if.end21, %if.else
  %20 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool27 = icmp ne i32 %20, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %__pyx_L4_bool_binop_done
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %do.body

do.body:                                          ; preds = %if.then28
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %21 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  store ptr %21, ptr %tmp, align 8, !tbaa !5
  store ptr @_Py_NoneStruct, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %22 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %22)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end29

if.end29:                                         ; preds = %do.end, %__pyx_L4_bool_binop_done
  %call30 = call ptr @__Pyx_ImportNumPyArrayTypeIfAvailable()
  store ptr %call30, ptr %__pyx_t_1, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool31 = icmp ne ptr %23, null
  %lnot32 = xor i1 %tobool31, true
  %lnot34 = xor i1 %lnot32, true
  %lnot36 = xor i1 %lnot34, true
  %lnot.ext37 = zext i1 %lnot36 to i32
  %conv38 = sext i32 %lnot.ext37 to i64
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0)
  %tobool40 = icmp ne i64 %expval39, 0
  br i1 %tobool40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.end29
  %24 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %24, ptr %__pyx_filename, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2629, ptr %__pyx_clineno, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end42:                                         ; preds = %if.end29
  %28 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %28, ptr %__pyx_v_ndarray, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  store i64 -1, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %29 = load ptr, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  %cmp43 = icmp eq ptr %29, @_Py_NoneStruct
  %lnot45 = xor i1 %cmp43, true
  %lnot47 = xor i1 %lnot45, true
  %lnot.ext48 = zext i1 %lnot47 to i32
  %conv49 = sext i32 %lnot.ext48 to i64
  %expval50 = call i64 @llvm.expect.i64(i64 %conv49, i64 0)
  %tobool51 = icmp ne i64 %expval50, 0
  br i1 %tobool51, label %if.then52, label %if.end53

if.then52:                                        ; preds = %if.end42
  %30 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %30, ptr noundef @.str.116)
  %31 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %31, ptr %__pyx_filename, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %33 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2636, ptr %__pyx_clineno, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end53:                                         ; preds = %if.end42
  %35 = load ptr, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  %call54 = call i64 @PyTuple_GET_SIZE(ptr noundef %35)
  store i64 %call54, ptr %__pyx_t_5, align 8, !tbaa !27
  %36 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp55 = icmp eq i64 %36, -1
  %lnot57 = xor i1 %cmp55, true
  %lnot59 = xor i1 %lnot57, true
  %lnot.ext60 = zext i1 %lnot59 to i32
  %conv61 = sext i32 %lnot.ext60 to i64
  %expval62 = call i64 @llvm.expect.i64(i64 %conv61, i64 0)
  %tobool63 = icmp ne i64 %expval62, 0
  br i1 %tobool63, label %if.then64, label %if.end65

if.then64:                                        ; preds = %if.end53
  %37 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %37, ptr %__pyx_filename, align 8, !tbaa !5
  %38 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %39 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2638, ptr %__pyx_clineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end65:                                         ; preds = %if.end53
  %41 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp66 = icmp slt i64 0, %41
  %conv67 = zext i1 %cmp66 to i32
  %cmp68 = icmp ne i32 %conv67, 0
  %conv69 = zext i1 %cmp68 to i32
  store i32 %conv69, ptr %__pyx_t_2, align 4, !tbaa !9
  %42 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool70 = icmp ne i32 %42, 0
  br i1 %tobool70, label %if.then71, label %if.end83

if.then71:                                        ; preds = %if.end65
  %43 = load ptr, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  %cmp72 = icmp eq ptr %43, @_Py_NoneStruct
  %lnot74 = xor i1 %cmp72, true
  %lnot76 = xor i1 %lnot74, true
  %lnot.ext77 = zext i1 %lnot76 to i32
  %conv78 = sext i32 %lnot.ext77 to i64
  %expval79 = call i64 @llvm.expect.i64(i64 %conv78, i64 0)
  %tobool80 = icmp ne i64 %expval79, 0
  br i1 %tobool80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.then71
  %44 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %44, ptr noundef @.str.131)
  %45 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %45, ptr %__pyx_filename, align 8, !tbaa !5
  %46 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2643, ptr %__pyx_clineno, align 4, !tbaa !9
  %48 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end82:                                         ; preds = %if.then71
  %49 = load ptr, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %49, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0
  %50 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %50, ptr %__pyx_t_1, align 8, !tbaa !5
  %51 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %51)
  %52 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %52, ptr %__pyx_v_arg, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %__pyx_L6

if.end83:                                         ; preds = %if.end65
  %53 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %cmp84 = icmp ne ptr %53, @_Py_NoneStruct
  %conv85 = zext i1 %cmp84 to i32
  store i32 %conv85, ptr %__pyx_t_3, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp86 = icmp ne i32 %54, 0
  %conv87 = zext i1 %cmp86 to i32
  store i32 %conv87, ptr %__pyx_t_4, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool88 = icmp ne i32 %55, 0
  br i1 %tobool88, label %if.then89, label %if.else90

if.then89:                                        ; preds = %if.end83
  br label %if.end91

if.else90:                                        ; preds = %if.end83
  %56 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  store i32 %56, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L7_bool_binop_done

if.end91:                                         ; preds = %if.then89
  %57 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %cmp92 = icmp eq ptr %57, @_Py_NoneStruct
  %lnot94 = xor i1 %cmp92, true
  %lnot96 = xor i1 %lnot94, true
  %lnot.ext97 = zext i1 %lnot96 to i32
  %conv98 = sext i32 %lnot.ext97 to i64
  %expval99 = call i64 @llvm.expect.i64(i64 %conv98, i64 0)
  %tobool100 = icmp ne i64 %expval99, 0
  br i1 %tobool100, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.end91
  %58 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %58, ptr noundef @.str.169)
  %59 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %59, ptr %__pyx_filename, align 8, !tbaa !5
  %60 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2660, ptr %__pyx_clineno, align 4, !tbaa !9
  %62 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end102:                                        ; preds = %if.end91
  %63 = load ptr, ptr @__pyx_n_s_X, align 8, !tbaa !5
  %64 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %call103 = call i32 @__Pyx_PyDict_ContainsTF(ptr noundef %63, ptr noundef %64, i32 noundef 2)
  store i32 %call103, ptr %__pyx_t_4, align 4, !tbaa !9
  %65 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp104 = icmp slt i32 %65, 0
  %lnot106 = xor i1 %cmp104, true
  %lnot108 = xor i1 %lnot106, true
  %lnot.ext109 = zext i1 %lnot108 to i32
  %conv110 = sext i32 %lnot.ext109 to i64
  %expval111 = call i64 @llvm.expect.i64(i64 %conv110, i64 0)
  %tobool112 = icmp ne i64 %expval111, 0
  br i1 %tobool112, label %if.then113, label %if.end114

if.then113:                                       ; preds = %if.end102
  %66 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %66, ptr %__pyx_filename, align 8, !tbaa !5
  %67 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %68 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2662, ptr %__pyx_clineno, align 4, !tbaa !9
  %69 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end114:                                        ; preds = %if.end102
  %70 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp115 = icmp ne i32 %70, 0
  %conv116 = zext i1 %cmp115 to i32
  store i32 %conv116, ptr %__pyx_t_3, align 4, !tbaa !9
  %71 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %71, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L7_bool_binop_done

__pyx_L7_bool_binop_done:                         ; preds = %if.end114, %if.else90
  %72 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool117 = icmp ne i32 %72, 0
  br i1 %tobool117, label %if.then118, label %if.end143

if.then118:                                       ; preds = %__pyx_L7_bool_binop_done
  %73 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %cmp119 = icmp eq ptr %73, @_Py_NoneStruct
  %lnot121 = xor i1 %cmp119, true
  %lnot123 = xor i1 %lnot121, true
  %lnot.ext124 = zext i1 %lnot123 to i32
  %conv125 = sext i32 %lnot.ext124 to i64
  %expval126 = call i64 @llvm.expect.i64(i64 %conv125, i64 0)
  %tobool127 = icmp ne i64 %expval126, 0
  br i1 %tobool127, label %if.then128, label %if.end129

if.then128:                                       ; preds = %if.then118
  %74 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %74, ptr noundef @.str.131)
  %75 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %75, ptr %__pyx_filename, align 8, !tbaa !5
  %76 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %77 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2669, ptr %__pyx_clineno, align 4, !tbaa !9
  %78 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end129:                                        ; preds = %if.then118
  %79 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %80 = load ptr, ptr @__pyx_n_s_X, align 8, !tbaa !5
  %call130 = call ptr @__Pyx_PyDict_GetItem(ptr noundef %79, ptr noundef %80)
  store ptr %call130, ptr %__pyx_t_1, align 8, !tbaa !5
  %81 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool131 = icmp ne ptr %81, null
  %lnot132 = xor i1 %tobool131, true
  %lnot134 = xor i1 %lnot132, true
  %lnot136 = xor i1 %lnot134, true
  %lnot.ext137 = zext i1 %lnot136 to i32
  %conv138 = sext i32 %lnot.ext137 to i64
  %expval139 = call i64 @llvm.expect.i64(i64 %conv138, i64 0)
  %tobool140 = icmp ne i64 %expval139, 0
  br i1 %tobool140, label %if.then141, label %if.end142

if.then141:                                       ; preds = %if.end129
  %82 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %82, ptr %__pyx_filename, align 8, !tbaa !5
  %83 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %84 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2671, ptr %__pyx_clineno, align 4, !tbaa !9
  %85 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end142:                                        ; preds = %if.end129
  %86 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %86, ptr %__pyx_v_arg, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %__pyx_L6

if.end143:                                        ; preds = %__pyx_L7_bool_binop_done
  %87 = load ptr, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  %cmp144 = icmp eq ptr %87, @_Py_NoneStruct
  %lnot146 = xor i1 %cmp144, true
  %lnot148 = xor i1 %lnot146, true
  %lnot.ext149 = zext i1 %lnot148 to i32
  %conv150 = sext i32 %lnot.ext149 to i64
  %expval151 = call i64 @llvm.expect.i64(i64 %conv150, i64 0)
  %tobool152 = icmp ne i64 %expval151, 0
  br i1 %tobool152, label %if.then153, label %if.end154

if.then153:                                       ; preds = %if.end143
  %88 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %88, ptr noundef @.str.116)
  %89 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %89, ptr %__pyx_filename, align 8, !tbaa !5
  %90 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %91 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2680, ptr %__pyx_clineno, align 4, !tbaa !9
  %92 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end154:                                        ; preds = %if.end143
  %93 = load ptr, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  %call155 = call i64 @PyTuple_GET_SIZE(ptr noundef %93)
  store i64 %call155, ptr %__pyx_t_5, align 8, !tbaa !27
  %94 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp156 = icmp eq i64 %94, -1
  %lnot158 = xor i1 %cmp156, true
  %lnot160 = xor i1 %lnot158, true
  %lnot.ext161 = zext i1 %lnot160 to i32
  %conv162 = sext i32 %lnot.ext161 to i64
  %expval163 = call i64 @llvm.expect.i64(i64 %conv162, i64 0)
  %tobool164 = icmp ne i64 %expval163, 0
  br i1 %tobool164, label %if.then165, label %if.end166

if.then165:                                       ; preds = %if.end154
  %95 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %95, ptr %__pyx_filename, align 8, !tbaa !5
  %96 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %97 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2682, ptr %__pyx_clineno, align 4, !tbaa !9
  %98 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end166:                                        ; preds = %if.end154
  %99 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %call167 = call ptr @PyLong_FromSsize_t(i64 noundef %99)
  store ptr %call167, ptr %__pyx_t_1, align 8, !tbaa !5
  %100 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool168 = icmp ne ptr %100, null
  %lnot169 = xor i1 %tobool168, true
  %lnot171 = xor i1 %lnot169, true
  %lnot173 = xor i1 %lnot171, true
  %lnot.ext174 = zext i1 %lnot173 to i32
  %conv175 = sext i32 %lnot.ext174 to i64
  %expval176 = call i64 @llvm.expect.i64(i64 %conv175, i64 0)
  %tobool177 = icmp ne i64 %expval176, 0
  br i1 %tobool177, label %if.then178, label %if.end179

if.then178:                                       ; preds = %if.end166
  %101 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %101, ptr %__pyx_filename, align 8, !tbaa !5
  %102 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %103 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2683, ptr %__pyx_clineno, align 4, !tbaa !9
  %104 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end179:                                        ; preds = %if.end166
  %call180 = call ptr @PyTuple_New(i64 noundef 3)
  store ptr %call180, ptr %__pyx_t_6, align 8, !tbaa !5
  %105 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool181 = icmp ne ptr %105, null
  %lnot182 = xor i1 %tobool181, true
  %lnot184 = xor i1 %lnot182, true
  %lnot186 = xor i1 %lnot184, true
  %lnot.ext187 = zext i1 %lnot186 to i32
  %conv188 = sext i32 %lnot.ext187 to i64
  %expval189 = call i64 @llvm.expect.i64(i64 %conv188, i64 0)
  %tobool190 = icmp ne i64 %expval189, 0
  br i1 %tobool190, label %if.then191, label %if.end192

if.then191:                                       ; preds = %if.end179
  %106 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %106, ptr %__pyx_filename, align 8, !tbaa !5
  %107 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %108 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2685, ptr %__pyx_clineno, align 4, !tbaa !9
  %109 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end192:                                        ; preds = %if.end179
  %110 = load ptr, ptr @__pyx_int_7, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %110)
  %111 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %112 = load ptr, ptr @__pyx_int_7, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %111, i64 noundef 0, ptr noundef %112)
  %113 = load ptr, ptr @__pyx_n_s_s, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %113)
  %114 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %115 = load ptr, ptr @__pyx_n_s_s, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %114, i64 noundef 1, ptr noundef %115)
  %116 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %117 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %116, i64 noundef 2, ptr noundef %117)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %118 = load ptr, ptr @__pyx_kp_s_Expected_at_least_d_argument_s_g, align 8, !tbaa !5
  %119 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call193 = call ptr @PyUnicode_Format(ptr noundef %118, ptr noundef %119)
  store ptr %call193, ptr %__pyx_t_1, align 8, !tbaa !5
  %120 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool194 = icmp ne ptr %120, null
  %lnot195 = xor i1 %tobool194, true
  %lnot197 = xor i1 %lnot195, true
  %lnot199 = xor i1 %lnot197, true
  %lnot.ext200 = zext i1 %lnot199 to i32
  %conv201 = sext i32 %lnot.ext200 to i64
  %expval202 = call i64 @llvm.expect.i64(i64 %conv201, i64 0)
  %tobool203 = icmp ne i64 %expval202, 0
  br i1 %tobool203, label %if.then204, label %if.end205

if.then204:                                       ; preds = %if.end192
  %121 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %121, ptr %__pyx_filename, align 8, !tbaa !5
  %122 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %123 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2696, ptr %__pyx_clineno, align 4, !tbaa !9
  %124 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end205:                                        ; preds = %if.end192
  %125 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %125)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %126 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %127 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call206 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %126, ptr noundef %127)
  store ptr %call206, ptr %__pyx_t_6, align 8, !tbaa !5
  %128 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool207 = icmp ne ptr %128, null
  %lnot208 = xor i1 %tobool207, true
  %lnot210 = xor i1 %lnot208, true
  %lnot212 = xor i1 %lnot210, true
  %lnot.ext213 = zext i1 %lnot212 to i32
  %conv214 = sext i32 %lnot.ext213 to i64
  %expval215 = call i64 @llvm.expect.i64(i64 %conv214, i64 0)
  %tobool216 = icmp ne i64 %expval215, 0
  br i1 %tobool216, label %if.then217, label %if.end218

if.then217:                                       ; preds = %if.end205
  %129 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %129, ptr %__pyx_filename, align 8, !tbaa !5
  %130 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %131 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2699, ptr %__pyx_clineno, align 4, !tbaa !9
  %132 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end218:                                        ; preds = %if.end205
  %133 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %133)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %134 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %134, ptr noundef null, ptr noundef null, ptr noundef null)
  %135 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %135)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %136 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %136, ptr %__pyx_filename, align 8, !tbaa !5
  %137 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %138 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2704, ptr %__pyx_clineno, align 4, !tbaa !9
  %139 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

__pyx_L6:                                         ; preds = %if.end142, %if.end82
  br label %while.cond

while.cond:                                       ; preds = %__pyx_L6
  br label %while.body

while.body:                                       ; preds = %while.cond
  %140 = load ptr, ptr %__pyx_v_ndarray, align 8, !tbaa !5
  %cmp219 = icmp ne ptr %140, @_Py_NoneStruct
  %conv220 = zext i1 %cmp219 to i32
  store i32 %conv220, ptr %__pyx_t_2, align 4, !tbaa !9
  %141 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp221 = icmp ne i32 %141, 0
  %conv222 = zext i1 %cmp221 to i32
  store i32 %conv222, ptr %__pyx_t_3, align 4, !tbaa !9
  %142 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool223 = icmp ne i32 %142, 0
  br i1 %tobool223, label %if.then224, label %if.end473

if.then224:                                       ; preds = %while.body
  %143 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  %call225 = call ptr @Py_TYPE(ptr noundef %143)
  %144 = load ptr, ptr %__pyx_v_ndarray, align 8, !tbaa !5
  %call226 = call i32 @__Pyx_IsSubtype(ptr noundef %call225, ptr noundef %144)
  store i32 %call226, ptr %__pyx_t_3, align 4, !tbaa !9
  %145 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp227 = icmp ne i32 %145, 0
  %conv228 = zext i1 %cmp227 to i32
  store i32 %conv228, ptr %__pyx_t_2, align 4, !tbaa !9
  %146 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool229 = icmp ne i32 %146, 0
  br i1 %tobool229, label %if.then230, label %if.end244

if.then230:                                       ; preds = %if.then224
  %147 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  %148 = load ptr, ptr @__pyx_n_s_dtype, align 8, !tbaa !5
  %call231 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %147, ptr noundef %148)
  store ptr %call231, ptr %__pyx_t_6, align 8, !tbaa !5
  %149 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool232 = icmp ne ptr %149, null
  %lnot233 = xor i1 %tobool232, true
  %lnot235 = xor i1 %lnot233, true
  %lnot237 = xor i1 %lnot235, true
  %lnot.ext238 = zext i1 %lnot237 to i32
  %conv239 = sext i32 %lnot.ext238 to i64
  %expval240 = call i64 @llvm.expect.i64(i64 %conv239, i64 0)
  %tobool241 = icmp ne i64 %expval240, 0
  br i1 %tobool241, label %if.then242, label %if.end243

if.then242:                                       ; preds = %if.then230
  %150 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %150, ptr %__pyx_filename, align 8, !tbaa !5
  %151 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %152 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2714, ptr %__pyx_clineno, align 4, !tbaa !9
  %153 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end243:                                        ; preds = %if.then230
  %154 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %154, ptr %__pyx_v_dtype, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  br label %__pyx_L12

if.end244:                                        ; preds = %if.then224
  %155 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  %call245 = call i32 @__pyx_memoryview_check(ptr noundef %155)
  store i32 %call245, ptr %__pyx_t_2, align 4, !tbaa !9
  %156 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp246 = icmp ne i32 %156, 0
  %conv247 = zext i1 %cmp246 to i32
  store i32 %conv247, ptr %__pyx_t_3, align 4, !tbaa !9
  %157 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool248 = icmp ne i32 %157, 0
  br i1 %tobool248, label %if.then249, label %if.end283

if.then249:                                       ; preds = %if.end244
  %158 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  %159 = load ptr, ptr @__pyx_n_s_base, align 8, !tbaa !5
  %call250 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %158, ptr noundef %159)
  store ptr %call250, ptr %__pyx_t_6, align 8, !tbaa !5
  %160 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool251 = icmp ne ptr %160, null
  %lnot252 = xor i1 %tobool251, true
  %lnot254 = xor i1 %lnot252, true
  %lnot256 = xor i1 %lnot254, true
  %lnot.ext257 = zext i1 %lnot256 to i32
  %conv258 = sext i32 %lnot.ext257 to i64
  %expval259 = call i64 @llvm.expect.i64(i64 %conv258, i64 0)
  %tobool260 = icmp ne i64 %expval259, 0
  br i1 %tobool260, label %if.then261, label %if.end262

if.then261:                                       ; preds = %if.then249
  %161 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %161, ptr %__pyx_filename, align 8, !tbaa !5
  %162 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %163 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2723, ptr %__pyx_clineno, align 4, !tbaa !9
  %164 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end262:                                        ; preds = %if.then249
  %165 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %165, ptr %__pyx_v_arg_base, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %166 = load ptr, ptr %__pyx_v_arg_base, align 8, !tbaa !5
  %call263 = call ptr @Py_TYPE(ptr noundef %166)
  %167 = load ptr, ptr %__pyx_v_ndarray, align 8, !tbaa !5
  %call264 = call i32 @__Pyx_IsSubtype(ptr noundef %call263, ptr noundef %167)
  store i32 %call264, ptr %__pyx_t_3, align 4, !tbaa !9
  %168 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp265 = icmp ne i32 %168, 0
  %conv266 = zext i1 %cmp265 to i32
  store i32 %conv266, ptr %__pyx_t_2, align 4, !tbaa !9
  %169 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool267 = icmp ne i32 %169, 0
  br i1 %tobool267, label %if.then268, label %if.end282

if.then268:                                       ; preds = %if.end262
  %170 = load ptr, ptr %__pyx_v_arg_base, align 8, !tbaa !5
  %171 = load ptr, ptr @__pyx_n_s_dtype, align 8, !tbaa !5
  %call269 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %170, ptr noundef %171)
  store ptr %call269, ptr %__pyx_t_6, align 8, !tbaa !5
  %172 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool270 = icmp ne ptr %172, null
  %lnot271 = xor i1 %tobool270, true
  %lnot273 = xor i1 %lnot271, true
  %lnot275 = xor i1 %lnot273, true
  %lnot.ext276 = zext i1 %lnot275 to i32
  %conv277 = sext i32 %lnot.ext276 to i64
  %expval278 = call i64 @llvm.expect.i64(i64 %conv277, i64 0)
  %tobool279 = icmp ne i64 %expval278, 0
  br i1 %tobool279, label %if.then280, label %if.end281

if.then280:                                       ; preds = %if.then268
  %173 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %173, ptr %__pyx_filename, align 8, !tbaa !5
  %174 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %175 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2730, ptr %__pyx_clineno, align 4, !tbaa !9
  %176 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end281:                                        ; preds = %if.then268
  %177 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %177, ptr %__pyx_v_dtype, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  br label %__pyx_L13

if.end282:                                        ; preds = %if.end262
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  store ptr @_Py_NoneStruct, ptr %__pyx_v_dtype, align 8, !tbaa !5
  br label %__pyx_L13

__pyx_L13:                                        ; preds = %if.end282, %if.end281
  br label %__pyx_L12

if.end283:                                        ; preds = %if.end244
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  store ptr @_Py_NoneStruct, ptr %__pyx_v_dtype, align 8, !tbaa !5
  br label %__pyx_L12

__pyx_L12:                                        ; preds = %if.end283, %__pyx_L13, %if.end243
  store i64 -1, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %178 = load ptr, ptr %__pyx_v_dtype, align 8, !tbaa !5
  %cmp284 = icmp ne ptr %178, @_Py_NoneStruct
  %conv285 = zext i1 %cmp284 to i32
  store i32 %conv285, ptr %__pyx_t_2, align 4, !tbaa !9
  %179 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp286 = icmp ne i32 %179, 0
  %conv287 = zext i1 %cmp286 to i32
  store i32 %conv287, ptr %__pyx_t_3, align 4, !tbaa !9
  %180 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool288 = icmp ne i32 %180, 0
  br i1 %tobool288, label %if.then289, label %if.end472

if.then289:                                       ; preds = %__pyx_L12
  %181 = load ptr, ptr %__pyx_v_dtype, align 8, !tbaa !5
  %182 = load ptr, ptr @__pyx_n_s_itemsize, align 8, !tbaa !5
  %call290 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %181, ptr noundef %182)
  store ptr %call290, ptr %__pyx_t_6, align 8, !tbaa !5
  %183 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool291 = icmp ne ptr %183, null
  %lnot292 = xor i1 %tobool291, true
  %lnot294 = xor i1 %lnot292, true
  %lnot296 = xor i1 %lnot294, true
  %lnot.ext297 = zext i1 %lnot296 to i32
  %conv298 = sext i32 %lnot.ext297 to i64
  %expval299 = call i64 @llvm.expect.i64(i64 %conv298, i64 0)
  %tobool300 = icmp ne i64 %expval299, 0
  br i1 %tobool300, label %if.then301, label %if.end302

if.then301:                                       ; preds = %if.then289
  %184 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %184, ptr %__pyx_filename, align 8, !tbaa !5
  %185 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %186 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2752, ptr %__pyx_clineno, align 4, !tbaa !9
  %187 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end302:                                        ; preds = %if.then289
  %188 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call303 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %188)
  store i64 %call303, ptr %__pyx_t_5, align 8, !tbaa !27
  %189 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp304 = icmp eq i64 %189, -1
  br i1 %cmp304, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end302
  %call306 = call ptr @PyErr_Occurred()
  %tobool307 = icmp ne ptr %call306, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end302
  %190 = phi i1 [ false, %if.end302 ], [ %tobool307, %land.rhs ]
  %lnot308 = xor i1 %190, true
  %lnot310 = xor i1 %lnot308, true
  %lnot.ext311 = zext i1 %lnot310 to i32
  %conv312 = sext i32 %lnot.ext311 to i64
  %expval313 = call i64 @llvm.expect.i64(i64 %conv312, i64 0)
  %tobool314 = icmp ne i64 %expval313, 0
  br i1 %tobool314, label %if.then315, label %if.end316

if.then315:                                       ; preds = %land.end
  %191 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %191, ptr %__pyx_filename, align 8, !tbaa !5
  %192 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %193 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2754, ptr %__pyx_clineno, align 4, !tbaa !9
  %194 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end316:                                        ; preds = %land.end
  %195 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %195)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %196 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  store i64 %196, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %197 = load ptr, ptr %__pyx_v_dtype, align 8, !tbaa !5
  %198 = load ptr, ptr @__pyx_n_s_kind, align 8, !tbaa !5
  %call317 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %197, ptr noundef %198)
  store ptr %call317, ptr %__pyx_t_6, align 8, !tbaa !5
  %199 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool318 = icmp ne ptr %199, null
  %lnot319 = xor i1 %tobool318, true
  %lnot321 = xor i1 %lnot319, true
  %lnot323 = xor i1 %lnot321, true
  %lnot.ext324 = zext i1 %lnot323 to i32
  %conv325 = sext i32 %lnot.ext324 to i64
  %expval326 = call i64 @llvm.expect.i64(i64 %conv325, i64 0)
  %tobool327 = icmp ne i64 %expval326, 0
  br i1 %tobool327, label %if.then328, label %if.end329

if.then328:                                       ; preds = %if.end316
  %200 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %200, ptr %__pyx_filename, align 8, !tbaa !5
  %201 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %202 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2757, ptr %__pyx_clineno, align 4, !tbaa !9
  %203 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end329:                                        ; preds = %if.end316
  %204 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call330 = call ptr @Py_TYPE(ptr noundef %204)
  %call331 = call i32 @PyType_HasFeature(ptr noundef %call330, i64 noundef 268435456)
  %tobool332 = icmp ne i32 %call331, 0
  %lnot333 = xor i1 %tobool332, true
  %lnot335 = xor i1 %lnot333, true
  %lnot.ext336 = zext i1 %lnot335 to i32
  %conv337 = sext i32 %lnot.ext336 to i64
  %expval338 = call i64 @llvm.expect.i64(i64 %conv337, i64 1)
  %tobool339 = icmp ne i64 %expval338, 0
  br i1 %tobool339, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end329
  %205 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call340 = call i32 @__Pyx_PyUnicode_AsPy_UCS4(ptr noundef %205)
  %conv341 = zext i32 %call340 to i64
  br label %cond.end

cond.false:                                       ; preds = %if.end329
  %206 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call342 = call i64 @__Pyx__PyObject_Ord(ptr noundef %206)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv341, %cond.true ], [ %call342, %cond.false ]
  store i64 %cond, ptr %__pyx_t_7, align 8, !tbaa !27
  %207 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %cmp343 = icmp eq i64 %207, 4294967295
  %lnot345 = xor i1 %cmp343, true
  %lnot347 = xor i1 %lnot345, true
  %lnot.ext348 = zext i1 %lnot347 to i32
  %conv349 = sext i32 %lnot.ext348 to i64
  %expval350 = call i64 @llvm.expect.i64(i64 %conv349, i64 0)
  %tobool351 = icmp ne i64 %expval350, 0
  br i1 %tobool351, label %if.then352, label %if.end353

if.then352:                                       ; preds = %cond.end
  %208 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %208, ptr %__pyx_filename, align 8, !tbaa !5
  %209 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %210 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2759, ptr %__pyx_clineno, align 4, !tbaa !9
  %211 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end353:                                        ; preds = %cond.end
  %212 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %212)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %213 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %conv354 = trunc i64 %213 to i8
  store i8 %conv354, ptr %__pyx_v_kind, align 1, !tbaa !29
  %214 = load i8, ptr %__pyx_v_kind, align 1, !tbaa !29
  %conv355 = sext i8 %214 to i32
  %cmp356 = icmp eq i32 %conv355, 105
  %conv357 = zext i1 %cmp356 to i32
  store i32 %conv357, ptr %__pyx_v_dtype_signed, align 4, !tbaa !9
  %215 = load i8, ptr %__pyx_v_kind, align 1, !tbaa !29
  %conv358 = sext i8 %215 to i32
  switch i32 %conv358, label %sw.default [
    i32 105, label %sw.bb
    i32 117, label %sw.bb
    i32 102, label %sw.bb359
    i32 99, label %sw.epilog
    i32 79, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.end353, %if.end353
  br label %sw.epilog

sw.bb359:                                         ; preds = %if.end353
  %216 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp360 = icmp eq i64 4, %216
  %conv361 = zext i1 %cmp360 to i32
  %cmp362 = icmp ne i32 %conv361, 0
  %conv363 = zext i1 %cmp362 to i32
  store i32 %conv363, ptr %__pyx_t_2, align 4, !tbaa !9
  %217 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool364 = icmp ne i32 %217, 0
  br i1 %tobool364, label %if.then365, label %if.else366

if.then365:                                       ; preds = %sw.bb359
  br label %if.end367

if.else366:                                       ; preds = %sw.bb359
  %218 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %218, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L16_bool_binop_done

if.end367:                                        ; preds = %if.then365
  %219 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  %220 = load ptr, ptr @__pyx_n_s_ndim, align 8, !tbaa !5
  %call368 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %219, ptr noundef %220)
  store ptr %call368, ptr %__pyx_t_6, align 8, !tbaa !5
  %221 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool369 = icmp ne ptr %221, null
  %lnot370 = xor i1 %tobool369, true
  %lnot372 = xor i1 %lnot370, true
  %lnot374 = xor i1 %lnot372, true
  %lnot.ext375 = zext i1 %lnot374 to i32
  %conv376 = sext i32 %lnot.ext375 to i64
  %expval377 = call i64 @llvm.expect.i64(i64 %conv376, i64 0)
  %tobool378 = icmp ne i64 %expval377, 0
  br i1 %tobool378, label %if.then379, label %if.end380

if.then379:                                       ; preds = %if.end367
  %222 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %222, ptr %__pyx_filename, align 8, !tbaa !5
  %223 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %224 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2774, ptr %__pyx_clineno, align 4, !tbaa !9
  %225 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end380:                                        ; preds = %if.end367
  %226 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call381 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %226)
  store i64 %call381, ptr %__pyx_t_5, align 8, !tbaa !27
  %227 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp382 = icmp eq i64 %227, -1
  br i1 %cmp382, label %land.rhs384, label %land.end387

land.rhs384:                                      ; preds = %if.end380
  %call385 = call ptr @PyErr_Occurred()
  %tobool386 = icmp ne ptr %call385, null
  br label %land.end387

land.end387:                                      ; preds = %land.rhs384, %if.end380
  %228 = phi i1 [ false, %if.end380 ], [ %tobool386, %land.rhs384 ]
  %lnot388 = xor i1 %228, true
  %lnot390 = xor i1 %lnot388, true
  %lnot.ext391 = zext i1 %lnot390 to i32
  %conv392 = sext i32 %lnot.ext391 to i64
  %expval393 = call i64 @llvm.expect.i64(i64 %conv392, i64 0)
  %tobool394 = icmp ne i64 %expval393, 0
  br i1 %tobool394, label %if.then395, label %if.end396

if.then395:                                       ; preds = %land.end387
  %229 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %229, ptr %__pyx_filename, align 8, !tbaa !5
  %230 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %231 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2776, ptr %__pyx_clineno, align 4, !tbaa !9
  %232 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end396:                                        ; preds = %land.end387
  %233 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %233)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %234 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp397 = icmp eq i64 %234, 2
  %conv398 = zext i1 %cmp397 to i32
  %cmp399 = icmp ne i32 %conv398, 0
  %conv400 = zext i1 %cmp399 to i32
  store i32 %conv400, ptr %__pyx_t_2, align 4, !tbaa !9
  %235 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %235, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L16_bool_binop_done

__pyx_L16_bool_binop_done:                        ; preds = %if.end396, %if.else366
  %236 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool401 = icmp ne i32 %236, 0
  br i1 %tobool401, label %if.then402, label %if.end415

if.then402:                                       ; preds = %__pyx_L16_bool_binop_done
  %237 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %238 = load ptr, ptr @__pyx_n_s_float, align 8, !tbaa !5
  %call403 = call i32 @__Pyx_SetItemInt_Fast(ptr noundef %237, i64 noundef 0, ptr noundef %238, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  %cmp404 = icmp slt i32 %call403, 0
  %lnot406 = xor i1 %cmp404, true
  %lnot408 = xor i1 %lnot406, true
  %lnot.ext409 = zext i1 %lnot408 to i32
  %conv410 = sext i32 %lnot.ext409 to i64
  %expval411 = call i64 @llvm.expect.i64(i64 %conv410, i64 0)
  %tobool412 = icmp ne i64 %expval411, 0
  br i1 %tobool412, label %if.then413, label %if.end414

if.then413:                                       ; preds = %if.then402
  %239 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %239, ptr %__pyx_filename, align 8, !tbaa !5
  %240 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %241 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2782, ptr %__pyx_clineno, align 4, !tbaa !9
  %242 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end414:                                        ; preds = %if.then402
  br label %__pyx_L10_break

if.end415:                                        ; preds = %__pyx_L16_bool_binop_done
  %243 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp416 = icmp eq i64 8, %243
  %conv417 = zext i1 %cmp416 to i32
  %cmp418 = icmp ne i32 %conv417, 0
  %conv419 = zext i1 %cmp418 to i32
  store i32 %conv419, ptr %__pyx_t_2, align 4, !tbaa !9
  %244 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool420 = icmp ne i32 %244, 0
  br i1 %tobool420, label %if.then421, label %if.else422

if.then421:                                       ; preds = %if.end415
  br label %if.end423

if.else422:                                       ; preds = %if.end415
  %245 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %245, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L19_bool_binop_done

if.end423:                                        ; preds = %if.then421
  %246 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  %247 = load ptr, ptr @__pyx_n_s_ndim, align 8, !tbaa !5
  %call424 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %246, ptr noundef %247)
  store ptr %call424, ptr %__pyx_t_6, align 8, !tbaa !5
  %248 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool425 = icmp ne ptr %248, null
  %lnot426 = xor i1 %tobool425, true
  %lnot428 = xor i1 %lnot426, true
  %lnot430 = xor i1 %lnot428, true
  %lnot.ext431 = zext i1 %lnot430 to i32
  %conv432 = sext i32 %lnot.ext431 to i64
  %expval433 = call i64 @llvm.expect.i64(i64 %conv432, i64 0)
  %tobool434 = icmp ne i64 %expval433, 0
  br i1 %tobool434, label %if.then435, label %if.end436

if.then435:                                       ; preds = %if.end423
  %249 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %249, ptr %__pyx_filename, align 8, !tbaa !5
  %250 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %251 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2791, ptr %__pyx_clineno, align 4, !tbaa !9
  %252 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end436:                                        ; preds = %if.end423
  %253 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call437 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %253)
  store i64 %call437, ptr %__pyx_t_5, align 8, !tbaa !27
  %254 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp438 = icmp eq i64 %254, -1
  br i1 %cmp438, label %land.rhs440, label %land.end443

land.rhs440:                                      ; preds = %if.end436
  %call441 = call ptr @PyErr_Occurred()
  %tobool442 = icmp ne ptr %call441, null
  br label %land.end443

land.end443:                                      ; preds = %land.rhs440, %if.end436
  %255 = phi i1 [ false, %if.end436 ], [ %tobool442, %land.rhs440 ]
  %lnot444 = xor i1 %255, true
  %lnot446 = xor i1 %lnot444, true
  %lnot.ext447 = zext i1 %lnot446 to i32
  %conv448 = sext i32 %lnot.ext447 to i64
  %expval449 = call i64 @llvm.expect.i64(i64 %conv448, i64 0)
  %tobool450 = icmp ne i64 %expval449, 0
  br i1 %tobool450, label %if.then451, label %if.end452

if.then451:                                       ; preds = %land.end443
  %256 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %256, ptr %__pyx_filename, align 8, !tbaa !5
  %257 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %258 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2793, ptr %__pyx_clineno, align 4, !tbaa !9
  %259 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end452:                                        ; preds = %land.end443
  %260 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %260)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %261 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp453 = icmp eq i64 %261, 2
  %conv454 = zext i1 %cmp453 to i32
  %cmp455 = icmp ne i32 %conv454, 0
  %conv456 = zext i1 %cmp455 to i32
  store i32 %conv456, ptr %__pyx_t_2, align 4, !tbaa !9
  %262 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %262, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L19_bool_binop_done

__pyx_L19_bool_binop_done:                        ; preds = %if.end452, %if.else422
  %263 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool457 = icmp ne i32 %263, 0
  br i1 %tobool457, label %if.then458, label %if.end471

if.then458:                                       ; preds = %__pyx_L19_bool_binop_done
  %264 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %265 = load ptr, ptr @__pyx_n_s_double, align 8, !tbaa !5
  %call459 = call i32 @__Pyx_SetItemInt_Fast(ptr noundef %264, i64 noundef 0, ptr noundef %265, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  %cmp460 = icmp slt i32 %call459, 0
  %lnot462 = xor i1 %cmp460, true
  %lnot464 = xor i1 %lnot462, true
  %lnot.ext465 = zext i1 %lnot464 to i32
  %conv466 = sext i32 %lnot.ext465 to i64
  %expval467 = call i64 @llvm.expect.i64(i64 %conv466, i64 0)
  %tobool468 = icmp ne i64 %expval467, 0
  br i1 %tobool468, label %if.then469, label %if.end470

if.then469:                                       ; preds = %if.then458
  %266 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %266, ptr %__pyx_filename, align 8, !tbaa !5
  %267 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %268 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2799, ptr %__pyx_clineno, align 4, !tbaa !9
  %269 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end470:                                        ; preds = %if.then458
  br label %__pyx_L10_break

if.end471:                                        ; preds = %__pyx_L19_bool_binop_done
  br label %sw.epilog

sw.default:                                       ; preds = %if.end353
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end353, %if.end353, %if.end471, %sw.bb
  br label %if.end472

if.end472:                                        ; preds = %sw.epilog, %__pyx_L12
  br label %if.end473

if.end473:                                        ; preds = %if.end472, %while.body
  %270 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp474 = icmp eq i64 %270, -1
  %conv475 = zext i1 %cmp474 to i32
  %cmp476 = icmp ne i32 %conv475, 0
  %conv477 = zext i1 %cmp476 to i32
  store i32 %conv477, ptr %__pyx_t_2, align 4, !tbaa !9
  %271 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool478 = icmp ne i32 %271, 0
  br i1 %tobool478, label %if.else480, label %if.then479

if.then479:                                       ; preds = %if.end473
  br label %if.end481

if.else480:                                       ; preds = %if.end473
  %272 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %272, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L22_bool_binop_done

if.end481:                                        ; preds = %if.then479
  %273 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp482 = icmp eq i64 %273, 4
  %conv483 = zext i1 %cmp482 to i32
  %cmp484 = icmp ne i32 %conv483, 0
  %conv485 = zext i1 %cmp484 to i32
  store i32 %conv485, ptr %__pyx_t_2, align 4, !tbaa !9
  %274 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %274, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L22_bool_binop_done

__pyx_L22_bool_binop_done:                        ; preds = %if.end481, %if.else480
  %275 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool486 = icmp ne i32 %275, 0
  br i1 %tobool486, label %if.then487, label %if.end506

if.then487:                                       ; preds = %__pyx_L22_bool_binop_done
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp488) #13
  %276 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_float__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp488, ptr noundef %276, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_8, ptr align 8 %tmp488, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp488) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_memslice, ptr align 8 %__pyx_t_8, i64 208, i1 false), !tbaa.struct !187
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_memslice, i32 0, i32 0
  %277 = load ptr, ptr %memview, align 8, !tbaa !185
  %cmp489 = icmp ne ptr %277, null
  %conv490 = zext i1 %cmp489 to i32
  store i32 %conv490, ptr %__pyx_t_3, align 4, !tbaa !9
  %278 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool491 = icmp ne i32 %278, 0
  br i1 %tobool491, label %if.then492, label %if.end505

if.then492:                                       ; preds = %if.then487
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_memslice, i32 noundef 1, i32 noundef 2825)
  %279 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %280 = load ptr, ptr @__pyx_n_s_float, align 8, !tbaa !5
  %call493 = call i32 @__Pyx_SetItemInt_Fast(ptr noundef %279, i64 noundef 0, ptr noundef %280, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  %cmp494 = icmp slt i32 %call493, 0
  %lnot496 = xor i1 %cmp494, true
  %lnot498 = xor i1 %lnot496, true
  %lnot.ext499 = zext i1 %lnot498 to i32
  %conv500 = sext i32 %lnot.ext499 to i64
  %expval501 = call i64 @llvm.expect.i64(i64 %conv500, i64 0)
  %tobool502 = icmp ne i64 %expval501, 0
  br i1 %tobool502, label %if.then503, label %if.end504

if.then503:                                       ; preds = %if.then492
  %281 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %281, ptr %__pyx_filename, align 8, !tbaa !5
  %282 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %283 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2826, ptr %__pyx_clineno, align 4, !tbaa !9
  %284 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end504:                                        ; preds = %if.then492
  br label %__pyx_L10_break

if.end505:                                        ; preds = %if.then487
  call void @PyErr_Clear()
  br label %if.end506

if.end506:                                        ; preds = %if.end505, %__pyx_L22_bool_binop_done
  %285 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp507 = icmp eq i64 %285, -1
  %conv508 = zext i1 %cmp507 to i32
  %cmp509 = icmp ne i32 %conv508, 0
  %conv510 = zext i1 %cmp509 to i32
  store i32 %conv510, ptr %__pyx_t_2, align 4, !tbaa !9
  %286 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool511 = icmp ne i32 %286, 0
  br i1 %tobool511, label %if.else513, label %if.then512

if.then512:                                       ; preds = %if.end506
  br label %if.end514

if.else513:                                       ; preds = %if.end506
  %287 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %287, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L26_bool_binop_done

if.end514:                                        ; preds = %if.then512
  %288 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp515 = icmp eq i64 %288, 8
  %conv516 = zext i1 %cmp515 to i32
  %cmp517 = icmp ne i32 %conv516, 0
  %conv518 = zext i1 %cmp517 to i32
  store i32 %conv518, ptr %__pyx_t_2, align 4, !tbaa !9
  %289 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %289, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L26_bool_binop_done

__pyx_L26_bool_binop_done:                        ; preds = %if.end514, %if.else513
  %290 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool519 = icmp ne i32 %290, 0
  br i1 %tobool519, label %if.then520, label %if.end540

if.then520:                                       ; preds = %__pyx_L26_bool_binop_done
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp521) #13
  %291 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_double__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp521, ptr noundef %291, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_8, ptr align 8 %tmp521, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp521) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_memslice, ptr align 8 %__pyx_t_8, i64 208, i1 false), !tbaa.struct !187
  %memview522 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_memslice, i32 0, i32 0
  %292 = load ptr, ptr %memview522, align 8, !tbaa !185
  %cmp523 = icmp ne ptr %292, null
  %conv524 = zext i1 %cmp523 to i32
  store i32 %conv524, ptr %__pyx_t_3, align 4, !tbaa !9
  %293 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool525 = icmp ne i32 %293, 0
  br i1 %tobool525, label %if.then526, label %if.end539

if.then526:                                       ; preds = %if.then520
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_memslice, i32 noundef 1, i32 noundef 2847)
  %294 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %295 = load ptr, ptr @__pyx_n_s_double, align 8, !tbaa !5
  %call527 = call i32 @__Pyx_SetItemInt_Fast(ptr noundef %294, i64 noundef 0, ptr noundef %295, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  %cmp528 = icmp slt i32 %call527, 0
  %lnot530 = xor i1 %cmp528, true
  %lnot532 = xor i1 %lnot530, true
  %lnot.ext533 = zext i1 %lnot532 to i32
  %conv534 = sext i32 %lnot.ext533 to i64
  %expval535 = call i64 @llvm.expect.i64(i64 %conv534, i64 0)
  %tobool536 = icmp ne i64 %expval535, 0
  br i1 %tobool536, label %if.then537, label %if.end538

if.then537:                                       ; preds = %if.then526
  %296 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %296, ptr %__pyx_filename, align 8, !tbaa !5
  %297 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %298 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2848, ptr %__pyx_clineno, align 4, !tbaa !9
  %299 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end538:                                        ; preds = %if.then526
  br label %__pyx_L10_break

if.end539:                                        ; preds = %if.then520
  call void @PyErr_Clear()
  br label %if.end540

if.end540:                                        ; preds = %if.end539, %__pyx_L26_bool_binop_done
  %300 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %call541 = call i32 @__Pyx_SetItemInt_Fast(ptr noundef %300, i64 noundef 0, ptr noundef @_Py_NoneStruct, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  %cmp542 = icmp slt i32 %call541, 0
  %lnot544 = xor i1 %cmp542, true
  %lnot546 = xor i1 %lnot544, true
  %lnot.ext547 = zext i1 %lnot546 to i32
  %conv548 = sext i32 %lnot.ext547 to i64
  %expval549 = call i64 @llvm.expect.i64(i64 %conv548, i64 0)
  %tobool550 = icmp ne i64 %expval549, 0
  br i1 %tobool550, label %if.then551, label %if.end552

if.then551:                                       ; preds = %if.end540
  %301 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %301, ptr %__pyx_filename, align 8, !tbaa !5
  %302 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %303 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2855, ptr %__pyx_clineno, align 4, !tbaa !9
  %304 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end552:                                        ; preds = %if.end540
  br label %__pyx_L10_break

__pyx_L10_break:                                  ; preds = %if.end552, %if.end538, %if.end504, %if.end470, %if.end414
  %call553 = call ptr @PyList_New(i64 noundef 0)
  store ptr %call553, ptr %__pyx_t_6, align 8, !tbaa !5
  %305 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool554 = icmp ne ptr %305, null
  %lnot555 = xor i1 %tobool554, true
  %lnot557 = xor i1 %lnot555, true
  %lnot559 = xor i1 %lnot557, true
  %lnot.ext560 = zext i1 %lnot559 to i32
  %conv561 = sext i32 %lnot.ext560 to i64
  %expval562 = call i64 @llvm.expect.i64(i64 %conv561, i64 0)
  %tobool563 = icmp ne i64 %expval562, 0
  br i1 %tobool563, label %if.then564, label %if.end565

if.then564:                                       ; preds = %__pyx_L10_break
  %306 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %306, ptr %__pyx_filename, align 8, !tbaa !5
  %307 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %308 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2859, ptr %__pyx_clineno, align 4, !tbaa !9
  %309 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end565:                                        ; preds = %__pyx_L10_break
  %310 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %310, ptr %__pyx_v_candidates, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  store i64 0, ptr %__pyx_t_5, align 8, !tbaa !27
  %311 = load ptr, ptr %__pyx_v_signatures.addr, align 8, !tbaa !5
  %cmp566 = icmp eq ptr %311, @_Py_NoneStruct
  %lnot568 = xor i1 %cmp566, true
  %lnot570 = xor i1 %lnot568, true
  %lnot.ext571 = zext i1 %lnot570 to i32
  %conv572 = sext i32 %lnot.ext571 to i64
  %expval573 = call i64 @llvm.expect.i64(i64 %conv572, i64 0)
  %tobool574 = icmp ne i64 %expval573, 0
  br i1 %tobool574, label %if.then575, label %if.end576

if.then575:                                       ; preds = %if.end565
  %312 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %312, ptr noundef @.str.169)
  %313 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %313, ptr %__pyx_filename, align 8, !tbaa !5
  %314 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %315 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2866, ptr %__pyx_clineno, align 4, !tbaa !9
  %316 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end576:                                        ; preds = %if.end565
  %317 = load ptr, ptr %__pyx_v_signatures.addr, align 8, !tbaa !5
  %call577 = call ptr @__Pyx_dict_iterator(ptr noundef %317, i32 noundef 1, ptr noundef null, ptr noundef %__pyx_t_9, ptr noundef %__pyx_t_10)
  store ptr %call577, ptr %__pyx_t_1, align 8, !tbaa !5
  %318 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool578 = icmp ne ptr %318, null
  %lnot579 = xor i1 %tobool578, true
  %lnot581 = xor i1 %lnot579, true
  %lnot583 = xor i1 %lnot581, true
  %lnot.ext584 = zext i1 %lnot583 to i32
  %conv585 = sext i32 %lnot.ext584 to i64
  %expval586 = call i64 @llvm.expect.i64(i64 %conv585, i64 0)
  %tobool587 = icmp ne i64 %expval586, 0
  br i1 %tobool587, label %if.then588, label %if.end589

if.then588:                                       ; preds = %if.end576
  %319 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %319, ptr %__pyx_filename, align 8, !tbaa !5
  %320 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %321 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2868, ptr %__pyx_clineno, align 4, !tbaa !9
  %322 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end589:                                        ; preds = %if.end576
  %323 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %323)
  %324 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %324, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %while.cond590

while.cond590:                                    ; preds = %if.end824, %if.end589
  br label %while.body591

while.body591:                                    ; preds = %while.cond590
  %325 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %326 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %327 = load i32, ptr %__pyx_t_10, align 4, !tbaa !9
  %call592 = call i32 @__Pyx_dict_iter_next(ptr noundef %325, i64 noundef %326, ptr noundef %__pyx_t_5, ptr noundef %__pyx_t_1, ptr noundef null, ptr noundef null, i32 noundef %327)
  store i32 %call592, ptr %__pyx_t_11, align 4, !tbaa !9
  %328 = load i32, ptr %__pyx_t_11, align 4, !tbaa !9
  %cmp593 = icmp eq i32 %328, 0
  %lnot595 = xor i1 %cmp593, true
  %lnot597 = xor i1 %lnot595, true
  %lnot.ext598 = zext i1 %lnot597 to i32
  %conv599 = sext i32 %lnot.ext598 to i64
  %expval600 = call i64 @llvm.expect.i64(i64 %conv599, i64 0)
  %tobool601 = icmp ne i64 %expval600, 0
  br i1 %tobool601, label %if.then602, label %if.end603

if.then602:                                       ; preds = %while.body591
  br label %while.end

if.end603:                                        ; preds = %while.body591
  %329 = load i32, ptr %__pyx_t_11, align 4, !tbaa !9
  %cmp604 = icmp eq i32 %329, -1
  %lnot606 = xor i1 %cmp604, true
  %lnot608 = xor i1 %lnot606, true
  %lnot.ext609 = zext i1 %lnot608 to i32
  %conv610 = sext i32 %lnot.ext609 to i64
  %expval611 = call i64 @llvm.expect.i64(i64 %conv610, i64 0)
  %tobool612 = icmp ne i64 %expval611, 0
  br i1 %tobool612, label %if.then613, label %if.end614

if.then613:                                       ; preds = %if.end603
  %330 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %330, ptr %__pyx_filename, align 8, !tbaa !5
  %331 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %332 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2876, ptr %__pyx_clineno, align 4, !tbaa !9
  %333 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end614:                                        ; preds = %if.end603
  br label %do.body615

do.body615:                                       ; preds = %if.end614
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp616) #13
  %334 = load ptr, ptr %__pyx_v_sig, align 8, !tbaa !5
  store ptr %334, ptr %tmp616, align 8, !tbaa !5
  %335 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %335, ptr %__pyx_v_sig, align 8, !tbaa !5
  %336 = load ptr, ptr %tmp616, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %336)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp616) #13
  br label %do.cond617

do.cond617:                                       ; preds = %do.body615
  br label %do.end618

do.end618:                                        ; preds = %do.cond617
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  store i32 0, ptr %__pyx_v_match_found, align 4, !tbaa !9
  %337 = load ptr, ptr %__pyx_v_sig, align 8, !tbaa !5
  %338 = load ptr, ptr @__pyx_n_s_strip, align 8, !tbaa !5
  %call619 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %337, ptr noundef %338)
  store ptr %call619, ptr %__pyx_t_13, align 8, !tbaa !5
  %339 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %tobool620 = icmp ne ptr %339, null
  %lnot621 = xor i1 %tobool620, true
  %lnot623 = xor i1 %lnot621, true
  %lnot625 = xor i1 %lnot623, true
  %lnot.ext626 = zext i1 %lnot625 to i32
  %conv627 = sext i32 %lnot.ext626 to i64
  %expval628 = call i64 @llvm.expect.i64(i64 %conv627, i64 0)
  %tobool629 = icmp ne i64 %expval628, 0
  br i1 %tobool629, label %if.then630, label %if.end631

if.then630:                                       ; preds = %do.end618
  %340 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %340, ptr %__pyx_filename, align 8, !tbaa !5
  %341 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %342 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2881, ptr %__pyx_clineno, align 4, !tbaa !9
  %343 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end631:                                        ; preds = %do.end618
  store ptr null, ptr %__pyx_t_14, align 8, !tbaa !5
  %344 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %call632 = call i32 @Py_IS_TYPE(ptr noundef %344, ptr noundef @PyMethod_Type)
  %tobool633 = icmp ne i32 %call632, 0
  %lnot634 = xor i1 %tobool633, true
  %lnot636 = xor i1 %lnot634, true
  %lnot.ext637 = zext i1 %lnot636 to i32
  %conv638 = sext i32 %lnot.ext637 to i64
  %expval639 = call i64 @llvm.expect.i64(i64 %conv638, i64 1)
  %tobool640 = icmp ne i64 %expval639, 0
  br i1 %tobool640, label %if.then641, label %if.end656

if.then641:                                       ; preds = %if.end631
  %345 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %345, i32 0, i32 2
  %346 = load ptr, ptr %im_self, align 8, !tbaa !125
  store ptr %346, ptr %__pyx_t_14, align 8, !tbaa !5
  %347 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  %tobool642 = icmp ne ptr %347, null
  %lnot643 = xor i1 %tobool642, true
  %lnot645 = xor i1 %lnot643, true
  %lnot.ext646 = zext i1 %lnot645 to i32
  %conv647 = sext i32 %lnot.ext646 to i64
  %expval648 = call i64 @llvm.expect.i64(i64 %conv647, i64 1)
  %tobool649 = icmp ne i64 %expval648, 0
  br i1 %tobool649, label %if.then650, label %if.end655

if.then650:                                       ; preds = %if.then641
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #13
  %348 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %348, i32 0, i32 1
  %349 = load ptr, ptr %im_func, align 8, !tbaa !127
  store ptr %349, ptr %function, align 8, !tbaa !5
  %350 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %350)
  %351 = load ptr, ptr %function, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %351)
  br label %do.body651

do.body651:                                       ; preds = %if.then650
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp652) #13
  %352 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  store ptr %352, ptr %tmp652, align 8, !tbaa !5
  %353 = load ptr, ptr %function, align 8, !tbaa !5
  store ptr %353, ptr %__pyx_t_13, align 8, !tbaa !5
  %354 = load ptr, ptr %tmp652, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %354)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp652) #13
  br label %do.cond653

do.cond653:                                       ; preds = %do.body651
  br label %do.end654

do.end654:                                        ; preds = %do.cond653
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #13
  br label %if.end655

if.end655:                                        ; preds = %do.end654, %if.then641
  br label %if.end656

if.end656:                                        ; preds = %if.end655, %if.end631
  %355 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  %tobool657 = icmp ne ptr %355, null
  br i1 %tobool657, label %cond.true658, label %cond.false660

cond.true658:                                     ; preds = %if.end656
  %356 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %357 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  %358 = load ptr, ptr @__pyx_kp_s_, align 8, !tbaa !5
  %call659 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %356, ptr noundef %357, ptr noundef %358)
  br label %cond.end662

cond.false660:                                    ; preds = %if.end656
  %359 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %360 = load ptr, ptr @__pyx_kp_s_, align 8, !tbaa !5
  %call661 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %359, ptr noundef %360)
  br label %cond.end662

cond.end662:                                      ; preds = %cond.false660, %cond.true658
  %cond663 = phi ptr [ %call659, %cond.true658 ], [ %call661, %cond.false660 ]
  store ptr %cond663, ptr %__pyx_t_12, align 8, !tbaa !5
  %361 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %361)
  store ptr null, ptr %__pyx_t_14, align 8, !tbaa !5
  %362 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  %tobool664 = icmp ne ptr %362, null
  %lnot665 = xor i1 %tobool664, true
  %lnot667 = xor i1 %lnot665, true
  %lnot669 = xor i1 %lnot667, true
  %lnot.ext670 = zext i1 %lnot669 to i32
  %conv671 = sext i32 %lnot.ext670 to i64
  %expval672 = call i64 @llvm.expect.i64(i64 %conv671, i64 0)
  %tobool673 = icmp ne i64 %expval672, 0
  br i1 %tobool673, label %if.then674, label %if.end675

if.then674:                                       ; preds = %cond.end662
  %363 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %363, ptr %__pyx_filename, align 8, !tbaa !5
  %364 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %365 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2895, ptr %__pyx_clineno, align 4, !tbaa !9
  %366 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end675:                                        ; preds = %cond.end662
  %367 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %367)
  store ptr null, ptr %__pyx_t_13, align 8, !tbaa !5
  %368 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  %369 = load ptr, ptr @__pyx_n_s_split, align 8, !tbaa !5
  %call676 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %368, ptr noundef %369)
  store ptr %call676, ptr %__pyx_t_13, align 8, !tbaa !5
  %370 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %tobool677 = icmp ne ptr %370, null
  %lnot678 = xor i1 %tobool677, true
  %lnot680 = xor i1 %lnot678, true
  %lnot682 = xor i1 %lnot680, true
  %lnot.ext683 = zext i1 %lnot682 to i32
  %conv684 = sext i32 %lnot.ext683 to i64
  %expval685 = call i64 @llvm.expect.i64(i64 %conv684, i64 0)
  %tobool686 = icmp ne i64 %expval685, 0
  br i1 %tobool686, label %if.then687, label %if.end688

if.then687:                                       ; preds = %if.end675
  %371 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %371, ptr %__pyx_filename, align 8, !tbaa !5
  %372 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %373 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2898, ptr %__pyx_clineno, align 4, !tbaa !9
  %374 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end688:                                        ; preds = %if.end675
  %375 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %375)
  store ptr null, ptr %__pyx_t_12, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_12, align 8, !tbaa !5
  %376 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %call689 = call i32 @Py_IS_TYPE(ptr noundef %376, ptr noundef @PyMethod_Type)
  %tobool690 = icmp ne i32 %call689, 0
  %lnot691 = xor i1 %tobool690, true
  %lnot693 = xor i1 %lnot691, true
  %lnot.ext694 = zext i1 %lnot693 to i32
  %conv695 = sext i32 %lnot.ext694 to i64
  %expval696 = call i64 @llvm.expect.i64(i64 %conv695, i64 1)
  %tobool697 = icmp ne i64 %expval696, 0
  br i1 %tobool697, label %if.then698, label %if.end716

if.then698:                                       ; preds = %if.end688
  %377 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %im_self699 = getelementptr inbounds %struct.PyMethodObject, ptr %377, i32 0, i32 2
  %378 = load ptr, ptr %im_self699, align 8, !tbaa !125
  store ptr %378, ptr %__pyx_t_12, align 8, !tbaa !5
  %379 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  %tobool700 = icmp ne ptr %379, null
  %lnot701 = xor i1 %tobool700, true
  %lnot703 = xor i1 %lnot701, true
  %lnot.ext704 = zext i1 %lnot703 to i32
  %conv705 = sext i32 %lnot.ext704 to i64
  %expval706 = call i64 @llvm.expect.i64(i64 %conv705, i64 1)
  %tobool707 = icmp ne i64 %expval706, 0
  br i1 %tobool707, label %if.then708, label %if.end715

if.then708:                                       ; preds = %if.then698
  call void @llvm.lifetime.start.p0(i64 8, ptr %function709) #13
  %380 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %im_func710 = getelementptr inbounds %struct.PyMethodObject, ptr %380, i32 0, i32 1
  %381 = load ptr, ptr %im_func710, align 8, !tbaa !127
  store ptr %381, ptr %function709, align 8, !tbaa !5
  %382 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %382)
  %383 = load ptr, ptr %function709, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %383)
  br label %do.body711

do.body711:                                       ; preds = %if.then708
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp712) #13
  %384 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  store ptr %384, ptr %tmp712, align 8, !tbaa !5
  %385 = load ptr, ptr %function709, align 8, !tbaa !5
  store ptr %385, ptr %__pyx_t_13, align 8, !tbaa !5
  %386 = load ptr, ptr %tmp712, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %386)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp712) #13
  br label %do.cond713

do.cond713:                                       ; preds = %do.body711
  br label %do.end714

do.end714:                                        ; preds = %do.cond713
  call void @llvm.lifetime.end.p0(i64 8, ptr %function709) #13
  br label %if.end715

if.end715:                                        ; preds = %do.end714, %if.then698
  br label %if.end716

if.end716:                                        ; preds = %if.end715, %if.end688
  %387 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  %tobool717 = icmp ne ptr %387, null
  br i1 %tobool717, label %cond.true718, label %cond.false720

cond.true718:                                     ; preds = %if.end716
  %388 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %389 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  %390 = load ptr, ptr @__pyx_kp_s__2, align 8, !tbaa !5
  %call719 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %388, ptr noundef %389, ptr noundef %390)
  br label %cond.end722

cond.false720:                                    ; preds = %if.end716
  %391 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %392 = load ptr, ptr @__pyx_kp_s__2, align 8, !tbaa !5
  %call721 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %391, ptr noundef %392)
  br label %cond.end722

cond.end722:                                      ; preds = %cond.false720, %cond.true718
  %cond723 = phi ptr [ %call719, %cond.true718 ], [ %call721, %cond.false720 ]
  store ptr %cond723, ptr %__pyx_t_1, align 8, !tbaa !5
  %393 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %393)
  store ptr null, ptr %__pyx_t_12, align 8, !tbaa !5
  %394 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool724 = icmp ne ptr %394, null
  %lnot725 = xor i1 %tobool724, true
  %lnot727 = xor i1 %lnot725, true
  %lnot729 = xor i1 %lnot727, true
  %lnot.ext730 = zext i1 %lnot729 to i32
  %conv731 = sext i32 %lnot.ext730 to i64
  %expval732 = call i64 @llvm.expect.i64(i64 %conv731, i64 0)
  %tobool733 = icmp ne i64 %expval732, 0
  br i1 %tobool733, label %if.then734, label %if.end735

if.then734:                                       ; preds = %cond.end722
  %395 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %395, ptr %__pyx_filename, align 8, !tbaa !5
  %396 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %397 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2913, ptr %__pyx_clineno, align 4, !tbaa !9
  %398 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end735:                                        ; preds = %cond.end722
  %399 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %399)
  store ptr null, ptr %__pyx_t_13, align 8, !tbaa !5
  br label %do.body736

do.body736:                                       ; preds = %if.end735
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp737) #13
  %400 = load ptr, ptr %__pyx_v_src_sig, align 8, !tbaa !5
  store ptr %400, ptr %tmp737, align 8, !tbaa !5
  %401 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %401, ptr %__pyx_v_src_sig, align 8, !tbaa !5
  %402 = load ptr, ptr %tmp737, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %402)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp737) #13
  br label %do.cond738

do.cond738:                                       ; preds = %do.body736
  br label %do.end739

do.end739:                                        ; preds = %do.cond738
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %403 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %call740 = call i64 @PyList_GET_SIZE(ptr noundef %403)
  store i64 %call740, ptr %__pyx_t_15, align 8, !tbaa !27
  %404 = load i64, ptr %__pyx_t_15, align 8, !tbaa !27
  %cmp741 = icmp eq i64 %404, -1
  %lnot743 = xor i1 %cmp741, true
  %lnot745 = xor i1 %lnot743, true
  %lnot.ext746 = zext i1 %lnot745 to i32
  %conv747 = sext i32 %lnot.ext746 to i64
  %expval748 = call i64 @llvm.expect.i64(i64 %conv747, i64 0)
  %tobool749 = icmp ne i64 %expval748, 0
  br i1 %tobool749, label %if.then750, label %if.end751

if.then750:                                       ; preds = %do.end739
  %405 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %405, ptr %__pyx_filename, align 8, !tbaa !5
  %406 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %407 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2918, ptr %__pyx_clineno, align 4, !tbaa !9
  %408 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end751:                                        ; preds = %do.end739
  %409 = load i64, ptr %__pyx_t_15, align 8, !tbaa !27
  store i64 %409, ptr %__pyx_t_16, align 8, !tbaa !27
  store i64 0, ptr %__pyx_t_17, align 8, !tbaa !27
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end751
  %410 = load i64, ptr %__pyx_t_17, align 8, !tbaa !27
  %411 = load i64, ptr %__pyx_t_16, align 8, !tbaa !27
  %cmp752 = icmp slt i64 %410, %411
  br i1 %cmp752, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %412 = load i64, ptr %__pyx_t_17, align 8, !tbaa !27
  store i64 %412, ptr %__pyx_v_i, align 8, !tbaa !27
  %413 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %ob_item754 = getelementptr inbounds %struct.PyListObject, ptr %413, i32 0, i32 1
  %414 = load ptr, ptr %ob_item754, align 8, !tbaa !116
  %415 = load i64, ptr %__pyx_v_i, align 8, !tbaa !27
  %arrayidx755 = getelementptr ptr, ptr %414, i64 %415
  %416 = load ptr, ptr %arrayidx755, align 8, !tbaa !5
  store ptr %416, ptr %__pyx_t_1, align 8, !tbaa !5
  %417 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %417)
  br label %do.body756

do.body756:                                       ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp757) #13
  %418 = load ptr, ptr %__pyx_v_dst_type, align 8, !tbaa !5
  store ptr %418, ptr %tmp757, align 8, !tbaa !5
  %419 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %419, ptr %__pyx_v_dst_type, align 8, !tbaa !5
  %420 = load ptr, ptr %tmp757, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %420)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp757) #13
  br label %do.cond758

do.cond758:                                       ; preds = %do.body756
  br label %do.end759

do.end759:                                        ; preds = %do.cond758
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %421 = load ptr, ptr %__pyx_v_dst_type, align 8, !tbaa !5
  %cmp760 = icmp ne ptr %421, @_Py_NoneStruct
  %conv761 = zext i1 %cmp760 to i32
  store i32 %conv761, ptr %__pyx_t_3, align 4, !tbaa !9
  %422 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp762 = icmp ne i32 %422, 0
  %conv763 = zext i1 %cmp762 to i32
  store i32 %conv763, ptr %__pyx_t_2, align 4, !tbaa !9
  %423 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool764 = icmp ne i32 %423, 0
  br i1 %tobool764, label %if.then765, label %if.end807

if.then765:                                       ; preds = %do.end759
  %424 = load ptr, ptr %__pyx_v_src_sig, align 8, !tbaa !5
  %425 = load i64, ptr %__pyx_v_i, align 8, !tbaa !27
  %call766 = call ptr @__Pyx_GetItemInt_Fast(ptr noundef %424, i64 noundef %425, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  store ptr %call766, ptr %__pyx_t_1, align 8, !tbaa !5
  %426 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool767 = icmp ne ptr %426, null
  %lnot768 = xor i1 %tobool767, true
  %lnot770 = xor i1 %lnot768, true
  %lnot772 = xor i1 %lnot770, true
  %lnot.ext773 = zext i1 %lnot772 to i32
  %conv774 = sext i32 %lnot.ext773 to i64
  %expval775 = call i64 @llvm.expect.i64(i64 %conv774, i64 0)
  %tobool776 = icmp ne i64 %expval775, 0
  br i1 %tobool776, label %if.then777, label %if.end778

if.then777:                                       ; preds = %if.then765
  %427 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %427, ptr %__pyx_filename, align 8, !tbaa !5
  %428 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %429 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2929, ptr %__pyx_clineno, align 4, !tbaa !9
  %430 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end778:                                        ; preds = %if.then765
  %431 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %432 = load ptr, ptr %__pyx_v_dst_type, align 8, !tbaa !5
  %call779 = call ptr @PyObject_RichCompare(ptr noundef %431, ptr noundef %432, i32 noundef 2)
  store ptr %call779, ptr %__pyx_t_13, align 8, !tbaa !5
  %433 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %tobool780 = icmp ne ptr %433, null
  %lnot781 = xor i1 %tobool780, true
  %lnot783 = xor i1 %lnot781, true
  %lnot785 = xor i1 %lnot783, true
  %lnot.ext786 = zext i1 %lnot785 to i32
  %conv787 = sext i32 %lnot.ext786 to i64
  %expval788 = call i64 @llvm.expect.i64(i64 %conv787, i64 0)
  %tobool789 = icmp ne i64 %expval788, 0
  br i1 %tobool789, label %if.then790, label %if.end791

if.then790:                                       ; preds = %if.end778
  %434 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %434, ptr %__pyx_filename, align 8, !tbaa !5
  %435 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %436 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2931, ptr %__pyx_clineno, align 4, !tbaa !9
  %437 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end791:                                        ; preds = %if.end778
  %438 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %438)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %439 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %call792 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %439)
  store i32 %call792, ptr %__pyx_t_2, align 4, !tbaa !9
  %440 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp793 = icmp slt i32 %440, 0
  %lnot795 = xor i1 %cmp793, true
  %lnot797 = xor i1 %lnot795, true
  %lnot.ext798 = zext i1 %lnot797 to i32
  %conv799 = sext i32 %lnot.ext798 to i64
  %expval800 = call i64 @llvm.expect.i64(i64 %conv799, i64 0)
  %tobool801 = icmp ne i64 %expval800, 0
  br i1 %tobool801, label %if.then802, label %if.end803

if.then802:                                       ; preds = %if.end791
  %441 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %441, ptr %__pyx_filename, align 8, !tbaa !5
  %442 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %443 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2933, ptr %__pyx_clineno, align 4, !tbaa !9
  %444 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end803:                                        ; preds = %if.end791
  %445 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %445)
  store ptr null, ptr %__pyx_t_13, align 8, !tbaa !5
  %446 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool804 = icmp ne i32 %446, 0
  br i1 %tobool804, label %if.then805, label %if.end806

if.then805:                                       ; preds = %if.end803
  store i32 1, ptr %__pyx_v_match_found, align 4, !tbaa !9
  br label %__pyx_L34

if.end806:                                        ; preds = %if.end803
  store i32 0, ptr %__pyx_v_match_found, align 4, !tbaa !9
  br label %__pyx_L32_break

__pyx_L34:                                        ; preds = %if.then805
  br label %if.end807

if.end807:                                        ; preds = %__pyx_L34, %do.end759
  br label %for.inc

for.inc:                                          ; preds = %if.end807
  %447 = load i64, ptr %__pyx_t_17, align 8, !tbaa !27
  %add = add i64 %447, 1
  store i64 %add, ptr %__pyx_t_17, align 8, !tbaa !27
  br label %for.cond, !llvm.loop !314

for.end:                                          ; preds = %for.cond
  br label %__pyx_L32_break

__pyx_L32_break:                                  ; preds = %for.end, %if.end806
  %448 = load i32, ptr %__pyx_v_match_found, align 4, !tbaa !9
  %cmp808 = icmp ne i32 %448, 0
  %conv809 = zext i1 %cmp808 to i32
  store i32 %conv809, ptr %__pyx_t_2, align 4, !tbaa !9
  %449 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool810 = icmp ne i32 %449, 0
  br i1 %tobool810, label %if.then811, label %if.end824

if.then811:                                       ; preds = %__pyx_L32_break
  %450 = load ptr, ptr %__pyx_v_candidates, align 8, !tbaa !5
  %451 = load ptr, ptr %__pyx_v_sig, align 8, !tbaa !5
  %call812 = call i32 @__Pyx_PyList_Append(ptr noundef %450, ptr noundef %451)
  store i32 %call812, ptr %__pyx_t_18, align 4, !tbaa !9
  %452 = load i32, ptr %__pyx_t_18, align 4, !tbaa !9
  %cmp813 = icmp eq i32 %452, -1
  %lnot815 = xor i1 %cmp813, true
  %lnot817 = xor i1 %lnot815, true
  %lnot.ext818 = zext i1 %lnot817 to i32
  %conv819 = sext i32 %lnot.ext818 to i64
  %expval820 = call i64 @llvm.expect.i64(i64 %conv819, i64 0)
  %tobool821 = icmp ne i64 %expval820, 0
  br i1 %tobool821, label %if.then822, label %if.end823

if.then822:                                       ; preds = %if.then811
  %453 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %453, ptr %__pyx_filename, align 8, !tbaa !5
  %454 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %455 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2949, ptr %__pyx_clineno, align 4, !tbaa !9
  %456 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end823:                                        ; preds = %if.then811
  br label %if.end824

if.end824:                                        ; preds = %if.end823, %__pyx_L32_break
  br label %while.cond590

while.end:                                        ; preds = %if.then602
  %457 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %457)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %458 = load ptr, ptr %__pyx_v_candidates, align 8, !tbaa !5
  %call825 = call i64 @PyList_GET_SIZE(ptr noundef %458)
  %cmp826 = icmp ne i64 %call825, 0
  %conv827 = zext i1 %cmp826 to i32
  store i32 %conv827, ptr %__pyx_t_2, align 4, !tbaa !9
  %459 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool828 = icmp ne i32 %459, 0
  %lnot829 = xor i1 %tobool828, true
  %lnot.ext830 = zext i1 %lnot829 to i32
  %cmp831 = icmp ne i32 %lnot.ext830, 0
  %conv832 = zext i1 %cmp831 to i32
  store i32 %conv832, ptr %__pyx_t_3, align 4, !tbaa !9
  %460 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool833 = icmp ne i32 %460, 0
  br i1 %tobool833, label %if.then834, label %if.end848

if.then834:                                       ; preds = %while.end
  %461 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %462 = load ptr, ptr @__pyx_tuple__3, align 8, !tbaa !5
  %call835 = call ptr @__Pyx_PyObject_Call(ptr noundef %461, ptr noundef %462, ptr noundef null)
  store ptr %call835, ptr %__pyx_t_6, align 8, !tbaa !5
  %463 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool836 = icmp ne ptr %463, null
  %lnot837 = xor i1 %tobool836, true
  %lnot839 = xor i1 %lnot837, true
  %lnot841 = xor i1 %lnot839, true
  %lnot.ext842 = zext i1 %lnot841 to i32
  %conv843 = sext i32 %lnot.ext842 to i64
  %expval844 = call i64 @llvm.expect.i64(i64 %conv843, i64 0)
  %tobool845 = icmp ne i64 %expval844, 0
  br i1 %tobool845, label %if.then846, label %if.end847

if.then846:                                       ; preds = %if.then834
  %464 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %464, ptr %__pyx_filename, align 8, !tbaa !5
  %465 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %466 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2956, ptr %__pyx_clineno, align 4, !tbaa !9
  %467 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end847:                                        ; preds = %if.then834
  %468 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %468, ptr noundef null, ptr noundef null, ptr noundef null)
  %469 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %469)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %470 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %470, ptr %__pyx_filename, align 8, !tbaa !5
  %471 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %472 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2960, ptr %__pyx_clineno, align 4, !tbaa !9
  %473 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end848:                                        ; preds = %while.end
  %474 = load ptr, ptr %__pyx_v_candidates, align 8, !tbaa !5
  %call849 = call i64 @PyList_GET_SIZE(ptr noundef %474)
  store i64 %call849, ptr %__pyx_t_9, align 8, !tbaa !27
  %475 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %cmp850 = icmp eq i64 %475, -1
  %lnot852 = xor i1 %cmp850, true
  %lnot854 = xor i1 %lnot852, true
  %lnot.ext855 = zext i1 %lnot854 to i32
  %conv856 = sext i32 %lnot.ext855 to i64
  %expval857 = call i64 @llvm.expect.i64(i64 %conv856, i64 0)
  %tobool858 = icmp ne i64 %expval857, 0
  br i1 %tobool858, label %if.then859, label %if.end860

if.then859:                                       ; preds = %if.end848
  %476 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %476, ptr %__pyx_filename, align 8, !tbaa !5
  %477 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %478 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2962, ptr %__pyx_clineno, align 4, !tbaa !9
  %479 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end860:                                        ; preds = %if.end848
  %480 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %cmp861 = icmp sgt i64 %480, 1
  %conv862 = zext i1 %cmp861 to i32
  %cmp863 = icmp ne i32 %conv862, 0
  %conv864 = zext i1 %cmp863 to i32
  store i32 %conv864, ptr %__pyx_t_3, align 4, !tbaa !9
  %481 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool865 = icmp ne i32 %481, 0
  br i1 %tobool865, label %if.then866, label %if.end880

if.then866:                                       ; preds = %if.end860
  %482 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %483 = load ptr, ptr @__pyx_tuple__4, align 8, !tbaa !5
  %call867 = call ptr @__Pyx_PyObject_Call(ptr noundef %482, ptr noundef %483, ptr noundef null)
  store ptr %call867, ptr %__pyx_t_6, align 8, !tbaa !5
  %484 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool868 = icmp ne ptr %484, null
  %lnot869 = xor i1 %tobool868, true
  %lnot871 = xor i1 %lnot869, true
  %lnot873 = xor i1 %lnot871, true
  %lnot.ext874 = zext i1 %lnot873 to i32
  %conv875 = sext i32 %lnot.ext874 to i64
  %expval876 = call i64 @llvm.expect.i64(i64 %conv875, i64 0)
  %tobool877 = icmp ne i64 %expval876, 0
  br i1 %tobool877, label %if.then878, label %if.end879

if.then878:                                       ; preds = %if.then866
  %485 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %485, ptr %__pyx_filename, align 8, !tbaa !5
  %486 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %487 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2965, ptr %__pyx_clineno, align 4, !tbaa !9
  %488 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end879:                                        ; preds = %if.then866
  %489 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %489, ptr noundef null, ptr noundef null, ptr noundef null)
  %490 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %490)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %491 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %491, ptr %__pyx_filename, align 8, !tbaa !5
  %492 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %493 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2969, ptr %__pyx_clineno, align 4, !tbaa !9
  %494 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end880:                                        ; preds = %if.end860
  %495 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %495)
  %496 = load ptr, ptr %__pyx_v_signatures.addr, align 8, !tbaa !5
  %cmp881 = icmp eq ptr %496, @_Py_NoneStruct
  %lnot883 = xor i1 %cmp881, true
  %lnot885 = xor i1 %lnot883, true
  %lnot.ext886 = zext i1 %lnot885 to i32
  %conv887 = sext i32 %lnot.ext886 to i64
  %expval888 = call i64 @llvm.expect.i64(i64 %conv887, i64 0)
  %tobool889 = icmp ne i64 %expval888, 0
  br i1 %tobool889, label %if.then890, label %if.end891

if.then890:                                       ; preds = %if.end880
  %497 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %497, ptr noundef @.str.131)
  %498 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %498, ptr %__pyx_filename, align 8, !tbaa !5
  %499 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %500 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2975, ptr %__pyx_clineno, align 4, !tbaa !9
  %501 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end891:                                        ; preds = %if.end880
  %502 = load ptr, ptr %__pyx_v_signatures.addr, align 8, !tbaa !5
  %503 = load ptr, ptr %__pyx_v_candidates, align 8, !tbaa !5
  %ob_item892 = getelementptr inbounds %struct.PyListObject, ptr %503, i32 0, i32 1
  %504 = load ptr, ptr %ob_item892, align 8, !tbaa !116
  %arrayidx893 = getelementptr ptr, ptr %504, i64 0
  %505 = load ptr, ptr %arrayidx893, align 8, !tbaa !5
  %call894 = call ptr @__Pyx_PyDict_GetItem(ptr noundef %502, ptr noundef %505)
  store ptr %call894, ptr %__pyx_t_6, align 8, !tbaa !5
  %506 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool895 = icmp ne ptr %506, null
  %lnot896 = xor i1 %tobool895, true
  %lnot898 = xor i1 %lnot896, true
  %lnot900 = xor i1 %lnot898, true
  %lnot.ext901 = zext i1 %lnot900 to i32
  %conv902 = sext i32 %lnot.ext901 to i64
  %expval903 = call i64 @llvm.expect.i64(i64 %conv902, i64 0)
  %tobool904 = icmp ne i64 %expval903, 0
  br i1 %tobool904, label %if.then905, label %if.end906

if.then905:                                       ; preds = %if.end891
  %507 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %507, ptr %__pyx_filename, align 8, !tbaa !5
  %508 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %509 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 2977, ptr %__pyx_clineno, align 4, !tbaa !9
  %510 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end906:                                        ; preds = %if.end891
  %511 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %511, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then905, %if.then890, %if.end879, %if.then878, %if.then859, %if.end847, %if.then846, %if.then822, %if.then802, %if.then790, %if.then777, %if.then750, %if.then734, %if.then687, %if.then674, %if.then630, %if.then613, %if.then588, %if.then575, %if.then564, %if.then551, %if.then537, %if.then503, %if.then469, %if.then451, %if.then435, %if.then413, %if.then395, %if.then379, %if.then352, %if.then328, %if.then315, %if.then301, %if.then280, %if.then261, %if.then242, %if.end218, %if.then217, %if.then204, %if.then191, %if.then178, %if.then165, %if.then153, %if.then141, %if.then128, %if.then113, %if.then101, %if.then81, %if.then64, %if.then52, %if.then41, %if.then20, %if.then
  %512 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %512)
  %513 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %513)
  %514 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %514)
  %515 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %515)
  %516 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %516)
  %517 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %518 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %519 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.285, i32 noundef %517, i32 noundef %518, ptr noundef %519)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end906
  %520 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %520)
  %521 = load ptr, ptr %__pyx_v_ndarray, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %521)
  %522 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %522)
  %523 = load ptr, ptr %__pyx_v_dtype, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %523)
  %524 = load ptr, ptr %__pyx_v_arg_base, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %524)
  %525 = load ptr, ptr %__pyx_v_candidates, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %525)
  %526 = load ptr, ptr %__pyx_v_sig, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %526)
  %527 = load ptr, ptr %__pyx_v_src_sig, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %527)
  %528 = load ptr, ptr %__pyx_v_dst_type, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %528)
  %529 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %529)
  %530 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_18) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_17) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_16) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_15) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_14) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_13) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_dst_type) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_src_sig) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_match_found) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_sig) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_candidates) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_arg_base) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_dtype) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_arg) #13
  call void @llvm.lifetime.end.p0(i64 1, ptr %__pyx_v_kind) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_dtype_signed) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_itemsize) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_memslice) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_ndarray) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_dest_sig) #13
  ret ptr %530
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_ImportNumPyArrayTypeIfAvailable() #3 {
entry:
  %0 = load ptr, ptr @__pyx_numpy_ndarray, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call ptr @__Pyx__ImportNumPyArray()
  store ptr %call, ptr @__pyx_numpy_ndarray, align 8, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load ptr, ptr @__pyx_numpy_ndarray, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %1)
  %2 = load ptr, ptr @__pyx_numpy_ndarray, align 8, !tbaa !5
  ret ptr %2
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyDict_ContainsTF(ptr noundef %item, ptr noundef %dict, i32 noundef %eq) #3 {
entry:
  %item.addr = alloca ptr, align 8
  %dict.addr = alloca ptr, align 8
  %eq.addr = alloca i32, align 4
  %result = alloca i32, align 4
  store ptr %item, ptr %item.addr, align 8, !tbaa !5
  store ptr %dict, ptr %dict.addr, align 8, !tbaa !5
  store i32 %eq, ptr %eq.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #13
  %0 = load ptr, ptr %dict.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %item.addr, align 8, !tbaa !5
  %call = call i32 @PyDict_Contains(ptr noundef %0, ptr noundef %1)
  store i32 %call, ptr %result, align 4, !tbaa !9
  %2 = load i32, ptr %result, align 4, !tbaa !9
  %cmp = icmp slt i32 %2, 0
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i32, ptr %result, align 4, !tbaa !9
  br label %cond.end

cond.false:                                       ; preds = %entry
  %4 = load i32, ptr %result, align 4, !tbaa !9
  %5 = load i32, ptr %eq.addr, align 4, !tbaa !9
  %cmp2 = icmp eq i32 %5, 2
  %conv3 = zext i1 %cmp2 to i32
  %cmp4 = icmp eq i32 %4, %conv3
  %conv5 = zext i1 %cmp4 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ %conv5, %cond.false ]
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #13
  ret i32 %cond
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyDict_GetItem(ptr noundef %d, ptr noundef %key) #0 {
entry:
  %retval = alloca ptr, align 8
  %d.addr = alloca ptr, align 8
  %key.addr = alloca ptr, align 8
  %value = alloca ptr, align 8
  %args = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %d, ptr %d.addr, align 8, !tbaa !5
  store ptr %key, ptr %key.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #13
  %0 = load ptr, ptr %d.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %key.addr, align 8, !tbaa !5
  %call = call ptr @PyDict_GetItemWithError(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %value, align 8, !tbaa !5
  %2 = load ptr, ptr %value, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end30

if.then:                                          ; preds = %entry
  %call4 = call ptr @PyErr_Occurred()
  %tobool5 = icmp ne ptr %call4, null
  br i1 %tobool5, label %if.end29, label %if.then6

if.then6:                                         ; preds = %if.then
  %3 = load ptr, ptr %key.addr, align 8, !tbaa !5
  %call7 = call ptr @Py_TYPE(ptr noundef %3)
  %call8 = call i32 @PyType_HasFeature(ptr noundef %call7, i64 noundef 67108864)
  %tobool9 = icmp ne i32 %call8, 0
  %lnot10 = xor i1 %tobool9, true
  %lnot12 = xor i1 %lnot10, true
  %lnot.ext13 = zext i1 %lnot12 to i32
  %conv14 = sext i32 %lnot.ext13 to i64
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0)
  %tobool16 = icmp ne i64 %expval15, 0
  br i1 %tobool16, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.then6
  call void @llvm.lifetime.start.p0(i64 8, ptr %args) #13
  %4 = load ptr, ptr %key.addr, align 8, !tbaa !5
  %call18 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %4)
  store ptr %call18, ptr %args, align 8, !tbaa !5
  %5 = load ptr, ptr %args, align 8, !tbaa !5
  %tobool19 = icmp ne ptr %5, null
  %lnot20 = xor i1 %tobool19, true
  %lnot22 = xor i1 %lnot20, true
  %lnot.ext23 = zext i1 %lnot22 to i32
  %conv24 = sext i32 %lnot.ext23 to i64
  %expval25 = call i64 @llvm.expect.i64(i64 %conv24, i64 1)
  %tobool26 = icmp ne i64 %expval25, 0
  br i1 %tobool26, label %if.then27, label %if.end

if.then27:                                        ; preds = %if.then17
  %6 = load ptr, ptr @PyExc_KeyError, align 8, !tbaa !5
  %7 = load ptr, ptr %args, align 8, !tbaa !5
  call void @PyErr_SetObject(ptr noundef %6, ptr noundef %7)
  %8 = load ptr, ptr %args, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %8)
  br label %if.end

if.end:                                           ; preds = %if.then27, %if.then17
  call void @llvm.lifetime.end.p0(i64 8, ptr %args) #13
  br label %if.end28

if.else:                                          ; preds = %if.then6
  %9 = load ptr, ptr @PyExc_KeyError, align 8, !tbaa !5
  %10 = load ptr, ptr %key.addr, align 8, !tbaa !5
  call void @PyErr_SetObject(ptr noundef %9, ptr noundef %10)
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.end
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end30:                                         ; preds = %entry
  %11 = load ptr, ptr %value, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %11)
  %12 = load ptr, ptr %value, align 8, !tbaa !5
  store ptr %12, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end30, %if.end29
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #13
  %13 = load ptr, ptr %retval, align 8
  ret ptr %13
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyUnicode_AsPy_UCS4(ptr noundef %x) #3 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca ptr, align 8
  %length = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %length) #13
  %0 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call = call i64 @PyUnicode_GET_LENGTH(ptr noundef %0)
  store i64 %call, ptr %length, align 8, !tbaa !27
  %1 = load i64, ptr %length, align 8, !tbaa !27
  %cmp = icmp eq i64 %1, 1
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call2 = call i32 @PyUnicode_READ_CHAR(ptr noundef %2, i64 noundef 0)
  store i32 %call2, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr @PyExc_ValueError, align 8, !tbaa !5
  %4 = load i64, ptr %length, align 8, !tbaa !27
  %call3 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %3, ptr noundef @.str.287, i64 noundef %4)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %length) #13
  %5 = load i32, ptr %retval, align 4
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define internal i64 @__Pyx__PyObject_Ord(ptr noundef %c) #0 {
entry:
  %retval = alloca i64, align 8
  %c.addr = alloca ptr, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %c, ptr %c.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #13
  %0 = load ptr, ptr %c.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 134217728)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %c.addr, align 8, !tbaa !5
  %call2 = call i64 @PyBytes_GET_SIZE(ptr noundef %1)
  store i64 %call2, ptr %size, align 8, !tbaa !27
  %2 = load i64, ptr %size, align 8, !tbaa !27
  %cmp = icmp eq i64 %2, 1
  %lnot = xor i1 %cmp, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then
  %3 = load ptr, ptr %c.addr, align 8, !tbaa !5
  %call6 = call ptr @PyBytes_AS_STRING(ptr noundef %3)
  %arrayidx = getelementptr i8, ptr %call6, i64 0
  %4 = load i8, ptr %arrayidx, align 1, !tbaa !29
  %conv7 = zext i8 %4 to i64
  store i64 %conv7, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  br label %if.end30

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr %c.addr, align 8, !tbaa !5
  %call8 = call i32 @PyObject_TypeCheck(ptr noundef %5, ptr noundef @PyByteArray_Type)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then10, label %if.else26

if.then10:                                        ; preds = %if.else
  %6 = load ptr, ptr %c.addr, align 8, !tbaa !5
  %call11 = call i64 @PyByteArray_GET_SIZE(ptr noundef %6)
  store i64 %call11, ptr %size, align 8, !tbaa !27
  %7 = load i64, ptr %size, align 8, !tbaa !27
  %cmp12 = icmp eq i64 %7, 1
  %lnot14 = xor i1 %cmp12, true
  %lnot16 = xor i1 %lnot14, true
  %lnot.ext17 = zext i1 %lnot16 to i32
  %conv18 = sext i32 %lnot.ext17 to i64
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 1)
  %tobool20 = icmp ne i64 %expval19, 0
  br i1 %tobool20, label %if.then21, label %if.end25

if.then21:                                        ; preds = %if.then10
  %8 = load ptr, ptr %c.addr, align 8, !tbaa !5
  %call22 = call ptr @PyByteArray_AS_STRING(ptr noundef %8)
  %arrayidx23 = getelementptr i8, ptr %call22, i64 0
  %9 = load i8, ptr %arrayidx23, align 1, !tbaa !29
  %conv24 = zext i8 %9 to i64
  store i64 %conv24, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end25:                                         ; preds = %if.then10
  br label %if.end29

if.else26:                                        ; preds = %if.else
  %10 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %11 = load ptr, ptr %c.addr, align 8, !tbaa !5
  %call27 = call ptr @Py_TYPE(ptr noundef %11)
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call27, i32 0, i32 1
  %12 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %call28 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %10, ptr noundef @.str.288, ptr noundef %12)
  store i64 4294967295, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end29:                                         ; preds = %if.end25
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end
  %13 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %14 = load i64, ptr %size, align 8, !tbaa !27
  %call31 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %13, ptr noundef @.str.289, i64 noundef %14)
  store i64 4294967295, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end30, %if.else26, %if.then21, %if.then5
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #13
  %15 = load i64, ptr %retval, align 8
  ret i64 %15
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_SetItemInt_Fast(ptr noundef %o, i64 noundef %i, ptr noundef %v, i32 noundef %is_list, i32 noundef %wraparound, i32 noundef %boundscheck) #3 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %i.addr = alloca i64, align 8
  %v.addr = alloca ptr, align 8
  %is_list.addr = alloca i32, align 4
  %wraparound.addr = alloca i32, align 4
  %boundscheck.addr = alloca i32, align 4
  %n = alloca i64, align 8
  %old = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %m = alloca ptr, align 8
  %l = alloca i64, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store i64 %i, ptr %i.addr, align 8, !tbaa !27
  store ptr %v, ptr %v.addr, align 8, !tbaa !5
  store i32 %is_list, ptr %is_list.addr, align 4, !tbaa !9
  store i32 %wraparound, ptr %wraparound.addr, align 4, !tbaa !9
  store i32 %boundscheck, ptr %boundscheck.addr, align 4, !tbaa !9
  %0 = load i32, ptr %is_list.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call = call i32 @Py_IS_TYPE(ptr noundef %1, ptr noundef @PyList_Type)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #13
  %2 = load i32, ptr %wraparound.addr, align 4, !tbaa !9
  %tobool2 = icmp ne i32 %2, 0
  br i1 %tobool2, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then
  %3 = load i64, ptr %i.addr, align 8, !tbaa !27
  br label %cond.end8

cond.false:                                       ; preds = %if.then
  %4 = load i64, ptr %i.addr, align 8, !tbaa !27
  %cmp = icmp sge i64 %4, 0
  %lnot = xor i1 %cmp, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %cond.true5, label %cond.false6

cond.true5:                                       ; preds = %cond.false
  %5 = load i64, ptr %i.addr, align 8, !tbaa !27
  br label %cond.end

cond.false6:                                      ; preds = %cond.false
  %6 = load i64, ptr %i.addr, align 8, !tbaa !27
  %7 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call7 = call i64 @PyList_GET_SIZE(ptr noundef %7)
  %add = add i64 %6, %call7
  br label %cond.end

cond.end:                                         ; preds = %cond.false6, %cond.true5
  %cond = phi i64 [ %5, %cond.true5 ], [ %add, %cond.false6 ]
  br label %cond.end8

cond.end8:                                        ; preds = %cond.end, %cond.true
  %cond9 = phi i64 [ %3, %cond.true ], [ %cond, %cond.end ]
  store i64 %cond9, ptr %n, align 8, !tbaa !27
  %8 = load i32, ptr %boundscheck.addr, align 4, !tbaa !9
  %tobool10 = icmp ne i32 %8, 0
  br i1 %tobool10, label %lor.lhs.false11, label %if.then22

lor.lhs.false11:                                  ; preds = %cond.end8
  %9 = load i64, ptr %n, align 8, !tbaa !27
  %10 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call12 = call i64 @PyList_GET_SIZE(ptr noundef %10)
  %call13 = call i32 @__Pyx_is_valid_index(i64 noundef %9, i64 noundef %call12)
  %tobool14 = icmp ne i32 %call13, 0
  %lnot15 = xor i1 %tobool14, true
  %lnot17 = xor i1 %lnot15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %conv19 = sext i32 %lnot.ext18 to i64
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 1)
  %tobool21 = icmp ne i64 %expval20, 0
  br i1 %tobool21, label %if.then22, label %if.end

if.then22:                                        ; preds = %lor.lhs.false11, %cond.end8
  call void @llvm.lifetime.start.p0(i64 8, ptr %old) #13
  %11 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyListObject, ptr %11, i32 0, i32 1
  %12 = load ptr, ptr %ob_item, align 8, !tbaa !116
  %13 = load i64, ptr %n, align 8, !tbaa !27
  %arrayidx = getelementptr ptr, ptr %12, i64 %13
  %14 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %14, ptr %old, align 8, !tbaa !5
  %15 = load ptr, ptr %v.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %15)
  %16 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %17 = load i64, ptr %n, align 8, !tbaa !27
  %18 = load ptr, ptr %v.addr, align 8, !tbaa !5
  call void @PyList_SET_ITEM(ptr noundef %16, i64 noundef %17, ptr noundef %18)
  %19 = load ptr, ptr %old, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %19)
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %old) #13
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false11
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then22
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end83

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0(i64 8, ptr %m) #13
  %20 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call23 = call ptr @Py_TYPE(ptr noundef %20)
  %tp_as_sequence = getelementptr inbounds %struct._typeobject, ptr %call23, i32 0, i32 11
  %21 = load ptr, ptr %tp_as_sequence, align 8, !tbaa !150
  store ptr %21, ptr %m, align 8, !tbaa !5
  %22 = load ptr, ptr %m, align 8, !tbaa !5
  %tobool24 = icmp ne ptr %22, null
  br i1 %tobool24, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.else
  %23 = load ptr, ptr %m, align 8, !tbaa !5
  %sq_ass_item = getelementptr inbounds %struct.PySequenceMethods, ptr %23, i32 0, i32 5
  %24 = load ptr, ptr %sq_ass_item, align 8, !tbaa !315
  %tobool25 = icmp ne ptr %24, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %25 = phi i1 [ false, %if.else ], [ %tobool25, %land.rhs ]
  %lnot26 = xor i1 %25, true
  %lnot28 = xor i1 %lnot26, true
  %lnot.ext29 = zext i1 %lnot28 to i32
  %conv30 = sext i32 %lnot.ext29 to i64
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 1)
  %tobool32 = icmp ne i64 %expval31, 0
  br i1 %tobool32, label %if.then33, label %if.end79

if.then33:                                        ; preds = %land.end
  %26 = load i32, ptr %wraparound.addr, align 4, !tbaa !9
  %tobool34 = icmp ne i32 %26, 0
  br i1 %tobool34, label %land.lhs.true, label %if.end76

land.lhs.true:                                    ; preds = %if.then33
  %27 = load i64, ptr %i.addr, align 8, !tbaa !27
  %cmp35 = icmp slt i64 %27, 0
  %lnot37 = xor i1 %cmp35, true
  %lnot39 = xor i1 %lnot37, true
  %lnot.ext40 = zext i1 %lnot39 to i32
  %conv41 = sext i32 %lnot.ext40 to i64
  %expval42 = call i64 @llvm.expect.i64(i64 %conv41, i64 0)
  %tobool43 = icmp ne i64 %expval42, 0
  br i1 %tobool43, label %land.lhs.true44, label %if.end76

land.lhs.true44:                                  ; preds = %land.lhs.true
  %28 = load ptr, ptr %m, align 8, !tbaa !5
  %sq_length = getelementptr inbounds %struct.PySequenceMethods, ptr %28, i32 0, i32 0
  %29 = load ptr, ptr %sq_length, align 8, !tbaa !153
  %tobool45 = icmp ne ptr %29, null
  %lnot46 = xor i1 %tobool45, true
  %lnot48 = xor i1 %lnot46, true
  %lnot.ext49 = zext i1 %lnot48 to i32
  %conv50 = sext i32 %lnot.ext49 to i64
  %expval51 = call i64 @llvm.expect.i64(i64 %conv50, i64 1)
  %tobool52 = icmp ne i64 %expval51, 0
  br i1 %tobool52, label %if.then53, label %if.end76

if.then53:                                        ; preds = %land.lhs.true44
  call void @llvm.lifetime.start.p0(i64 8, ptr %l) #13
  %30 = load ptr, ptr %m, align 8, !tbaa !5
  %sq_length54 = getelementptr inbounds %struct.PySequenceMethods, ptr %30, i32 0, i32 0
  %31 = load ptr, ptr %sq_length54, align 8, !tbaa !153
  %32 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %call55 = call i64 %31(ptr noundef %32)
  store i64 %call55, ptr %l, align 8, !tbaa !27
  %33 = load i64, ptr %l, align 8, !tbaa !27
  %cmp56 = icmp sge i64 %33, 0
  %lnot58 = xor i1 %cmp56, true
  %lnot60 = xor i1 %lnot58, true
  %lnot.ext61 = zext i1 %lnot60 to i32
  %conv62 = sext i32 %lnot.ext61 to i64
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 1)
  %tobool64 = icmp ne i64 %expval63, 0
  br i1 %tobool64, label %if.then65, label %if.else67

if.then65:                                        ; preds = %if.then53
  %34 = load i64, ptr %l, align 8, !tbaa !27
  %35 = load i64, ptr %i.addr, align 8, !tbaa !27
  %add66 = add i64 %35, %34
  store i64 %add66, ptr %i.addr, align 8, !tbaa !27
  br label %if.end72

if.else67:                                        ; preds = %if.then53
  %36 = load ptr, ptr @PyExc_OverflowError, align 8, !tbaa !5
  %call68 = call i32 @PyErr_ExceptionMatches(ptr noundef %36)
  %tobool69 = icmp ne i32 %call68, 0
  br i1 %tobool69, label %if.end71, label %if.then70

if.then70:                                        ; preds = %if.else67
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup73

if.end71:                                         ; preds = %if.else67
  call void @PyErr_Clear()
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then65
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup73

cleanup73:                                        ; preds = %if.end72, %if.then70
  call void @llvm.lifetime.end.p0(i64 8, ptr %l) #13
  %cleanup.dest74 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest74, label %cleanup80 [
    i32 0, label %cleanup.cont75
  ]

cleanup.cont75:                                   ; preds = %cleanup73
  br label %if.end76

if.end76:                                         ; preds = %cleanup.cont75, %land.lhs.true44, %land.lhs.true, %if.then33
  %37 = load ptr, ptr %m, align 8, !tbaa !5
  %sq_ass_item77 = getelementptr inbounds %struct.PySequenceMethods, ptr %37, i32 0, i32 5
  %38 = load ptr, ptr %sq_ass_item77, align 8, !tbaa !315
  %39 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %40 = load i64, ptr %i.addr, align 8, !tbaa !27
  %41 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %call78 = call i32 %38(ptr noundef %39, i64 noundef %40, ptr noundef %41)
  store i32 %call78, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80

if.end79:                                         ; preds = %land.end
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup80

cleanup80:                                        ; preds = %if.end79, %if.end76, %cleanup73
  call void @llvm.lifetime.end.p0(i64 8, ptr %m) #13
  %cleanup.dest81 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest81, label %unreachable [
    i32 0, label %cleanup.cont82
    i32 1, label %return
  ]

cleanup.cont82:                                   ; preds = %cleanup80
  br label %if.end83

if.end83:                                         ; preds = %cleanup.cont82, %cleanup.cont
  %42 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %43 = load i64, ptr %i.addr, align 8, !tbaa !27
  %call84 = call ptr @PyLong_FromSsize_t(i64 noundef %43)
  %44 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %call85 = call i32 @__Pyx_SetItemInt_Generic(ptr noundef %42, ptr noundef %call84, ptr noundef %44)
  store i32 %call85, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.end83, %cleanup80, %cleanup
  %45 = load i32, ptr %retval, align 4
  ret i32 %45

unreachable:                                      ; preds = %cleanup80, %cleanup
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_dict_iterator(ptr noundef %iterable, i32 noundef %is_dict, ptr noundef %method_name, ptr noundef %p_orig_length, ptr noundef %p_source_is_dict) #3 {
entry:
  %retval = alloca ptr, align 8
  %iterable.addr = alloca ptr, align 8
  %is_dict.addr = alloca i32, align 4
  %method_name.addr = alloca ptr, align 8
  %p_orig_length.addr = alloca ptr, align 8
  %p_source_is_dict.addr = alloca ptr, align 8
  %iter = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %iterable, ptr %iterable.addr, align 8, !tbaa !5
  store i32 %is_dict, ptr %is_dict.addr, align 4, !tbaa !9
  store ptr %method_name, ptr %method_name.addr, align 8, !tbaa !5
  store ptr %p_orig_length, ptr %p_orig_length.addr, align 8, !tbaa !5
  store ptr %p_source_is_dict, ptr %p_source_is_dict.addr, align 8, !tbaa !5
  %0 = load i32, ptr %is_dict.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %1 = load ptr, ptr %iterable.addr, align 8, !tbaa !5
  %call = call i32 @Py_IS_TYPE(ptr noundef %1, ptr noundef @PyDict_Type)
  %tobool1 = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool1, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool3 = icmp ne i64 %expval, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %tobool3, %lor.rhs ]
  %lor.ext = zext i1 %2 to i32
  store i32 %lor.ext, ptr %is_dict.addr, align 4, !tbaa !9
  %3 = load i32, ptr %is_dict.addr, align 4, !tbaa !9
  %4 = load ptr, ptr %p_source_is_dict.addr, align 8, !tbaa !5
  store i32 %3, ptr %4, align 4, !tbaa !9
  %5 = load i32, ptr %is_dict.addr, align 4, !tbaa !9
  %tobool4 = icmp ne i32 %5, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.end
  %6 = load ptr, ptr %iterable.addr, align 8, !tbaa !5
  %call5 = call i64 @PyDict_Size(ptr noundef %6)
  %7 = load ptr, ptr %p_orig_length.addr, align 8, !tbaa !5
  store i64 %call5, ptr %7, align 8, !tbaa !27
  %8 = load ptr, ptr %iterable.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %8)
  %9 = load ptr, ptr %iterable.addr, align 8, !tbaa !5
  store ptr %9, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %lor.end
  %10 = load ptr, ptr %p_orig_length.addr, align 8, !tbaa !5
  store i64 0, ptr %10, align 8, !tbaa !27
  %11 = load ptr, ptr %method_name.addr, align 8, !tbaa !5
  %tobool6 = icmp ne ptr %11, null
  br i1 %tobool6, label %if.then7, label %if.end19

if.then7:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %iter) #13
  %12 = load ptr, ptr %iterable.addr, align 8, !tbaa !5
  %13 = load ptr, ptr %method_name.addr, align 8, !tbaa !5
  %call8 = call ptr @__Pyx_PyObject_CallMethod0(ptr noundef %12, ptr noundef %13)
  store ptr %call8, ptr %iterable.addr, align 8, !tbaa !5
  %14 = load ptr, ptr %iterable.addr, align 8, !tbaa !5
  %tobool9 = icmp ne ptr %14, null
  br i1 %tobool9, label %if.end11, label %if.then10

if.then10:                                        ; preds = %if.then7
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end11:                                         ; preds = %if.then7
  %15 = load ptr, ptr %iterable.addr, align 8, !tbaa !5
  %call12 = call i32 @Py_IS_TYPE(ptr noundef %15, ptr noundef @PyTuple_Type)
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.then16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end11
  %16 = load ptr, ptr %iterable.addr, align 8, !tbaa !5
  %call14 = call i32 @Py_IS_TYPE(ptr noundef %16, ptr noundef @PyList_Type)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %lor.lhs.false, %if.end11
  %17 = load ptr, ptr %iterable.addr, align 8, !tbaa !5
  store ptr %17, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end17:                                         ; preds = %lor.lhs.false
  %18 = load ptr, ptr %iterable.addr, align 8, !tbaa !5
  %call18 = call ptr @PyObject_GetIter(ptr noundef %18)
  store ptr %call18, ptr %iter, align 8, !tbaa !5
  %19 = load ptr, ptr %iterable.addr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %19)
  %20 = load ptr, ptr %iter, align 8, !tbaa !5
  store ptr %20, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.then16, %if.then10
  call void @llvm.lifetime.end.p0(i64 8, ptr %iter) #13
  br label %return

if.end19:                                         ; preds = %if.end
  %21 = load ptr, ptr %iterable.addr, align 8, !tbaa !5
  %call20 = call ptr @PyObject_GetIter(ptr noundef %21)
  store ptr %call20, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end19, %cleanup, %if.then
  %22 = load ptr, ptr %retval, align 8
  ret ptr %22
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_dict_iter_next(ptr noundef %iter_obj, i64 noundef %orig_length, ptr noundef %ppos, ptr noundef %pkey, ptr noundef %pvalue, ptr noundef %pitem, i32 noundef %source_is_dict) #3 {
entry:
  %retval = alloca i32, align 4
  %iter_obj.addr = alloca ptr, align 8
  %orig_length.addr = alloca i64, align 8
  %ppos.addr = alloca ptr, align 8
  %pkey.addr = alloca ptr, align 8
  %pvalue.addr = alloca ptr, align 8
  %pitem.addr = alloca ptr, align 8
  %source_is_dict.addr = alloca i32, align 4
  %next_item = alloca ptr, align 8
  %key = alloca ptr, align 8
  %value = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tuple = alloca ptr, align 8
  %pos = alloca i64, align 8
  %pos64 = alloca i64, align 8
  store ptr %iter_obj, ptr %iter_obj.addr, align 8, !tbaa !5
  store i64 %orig_length, ptr %orig_length.addr, align 8, !tbaa !27
  store ptr %ppos, ptr %ppos.addr, align 8, !tbaa !5
  store ptr %pkey, ptr %pkey.addr, align 8, !tbaa !5
  store ptr %pvalue, ptr %pvalue.addr, align 8, !tbaa !5
  store ptr %pitem, ptr %pitem.addr, align 8, !tbaa !5
  store i32 %source_is_dict, ptr %source_is_dict.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %next_item) #13
  %0 = load i32, ptr %source_is_dict.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else41

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %key) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #13
  %1 = load i64, ptr %orig_length.addr, align 8, !tbaa !27
  %2 = load ptr, ptr %iter_obj.addr, align 8, !tbaa !5
  %call = call i64 @PyDict_Size(ptr noundef %2)
  %cmp = icmp ne i64 %1, %call
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %3 = load ptr, ptr @PyExc_RuntimeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.291)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup39

if.end:                                           ; preds = %if.then
  %4 = load ptr, ptr %iter_obj.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %ppos.addr, align 8, !tbaa !5
  %call4 = call i32 @PyDict_Next(ptr noundef %4, ptr noundef %5, ptr noundef %key, ptr noundef %value)
  %tobool5 = icmp ne i32 %call4, 0
  %lnot6 = xor i1 %tobool5, true
  %lnot8 = xor i1 %lnot6, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup39

if.end16:                                         ; preds = %if.end
  %6 = load ptr, ptr %pitem.addr, align 8, !tbaa !5
  %tobool17 = icmp ne ptr %6, null
  br i1 %tobool17, label %if.then18, label %if.else

if.then18:                                        ; preds = %if.end16
  call void @llvm.lifetime.start.p0(i64 8, ptr %tuple) #13
  %call19 = call ptr @PyTuple_New(i64 noundef 2)
  store ptr %call19, ptr %tuple, align 8, !tbaa !5
  %7 = load ptr, ptr %tuple, align 8, !tbaa !5
  %tobool20 = icmp ne ptr %7, null
  %lnot21 = xor i1 %tobool20, true
  %lnot23 = xor i1 %lnot21, true
  %lnot25 = xor i1 %lnot23, true
  %lnot.ext26 = zext i1 %lnot25 to i32
  %conv27 = sext i32 %lnot.ext26 to i64
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 0)
  %tobool29 = icmp ne i64 %expval28, 0
  br i1 %tobool29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.then18
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end31:                                         ; preds = %if.then18
  %8 = load ptr, ptr %key, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %8)
  %9 = load ptr, ptr %value, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %9)
  %10 = load ptr, ptr %tuple, align 8, !tbaa !5
  %11 = load ptr, ptr %key, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %10, i64 noundef 0, ptr noundef %11)
  %12 = load ptr, ptr %tuple, align 8, !tbaa !5
  %13 = load ptr, ptr %value, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %12, i64 noundef 1, ptr noundef %13)
  %14 = load ptr, ptr %tuple, align 8, !tbaa !5
  %15 = load ptr, ptr %pitem.addr, align 8, !tbaa !5
  store ptr %14, ptr %15, align 8, !tbaa !5
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end31, %if.then30
  call void @llvm.lifetime.end.p0(i64 8, ptr %tuple) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup39 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end38

if.else:                                          ; preds = %if.end16
  %16 = load ptr, ptr %pkey.addr, align 8, !tbaa !5
  %tobool32 = icmp ne ptr %16, null
  br i1 %tobool32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %if.else
  %17 = load ptr, ptr %key, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %17)
  %18 = load ptr, ptr %key, align 8, !tbaa !5
  %19 = load ptr, ptr %pkey.addr, align 8, !tbaa !5
  store ptr %18, ptr %19, align 8, !tbaa !5
  br label %if.end34

if.end34:                                         ; preds = %if.then33, %if.else
  %20 = load ptr, ptr %pvalue.addr, align 8, !tbaa !5
  %tobool35 = icmp ne ptr %20, null
  br i1 %tobool35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end34
  %21 = load ptr, ptr %value, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %21)
  %22 = load ptr, ptr %value, align 8, !tbaa !5
  %23 = load ptr, ptr %pvalue.addr, align 8, !tbaa !5
  store ptr %22, ptr %23, align 8, !tbaa !5
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %if.end34
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %cleanup.cont
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup39

cleanup39:                                        ; preds = %if.end38, %cleanup, %if.then15, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %key) #13
  br label %cleanup146

if.else41:                                        ; preds = %entry
  %24 = load ptr, ptr %iter_obj.addr, align 8, !tbaa !5
  %call42 = call i32 @Py_IS_TYPE(ptr noundef %24, ptr noundef @PyTuple_Type)
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.then44, label %if.else60

if.then44:                                        ; preds = %if.else41
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos) #13
  %25 = load ptr, ptr %ppos.addr, align 8, !tbaa !5
  %26 = load i64, ptr %25, align 8, !tbaa !27
  store i64 %26, ptr %pos, align 8, !tbaa !27
  %27 = load i64, ptr %pos, align 8, !tbaa !27
  %28 = load ptr, ptr %iter_obj.addr, align 8, !tbaa !5
  %call45 = call i64 @PyTuple_GET_SIZE(ptr noundef %28)
  %cmp46 = icmp sge i64 %27, %call45
  %lnot48 = xor i1 %cmp46, true
  %lnot50 = xor i1 %lnot48, true
  %lnot.ext51 = zext i1 %lnot50 to i32
  %conv52 = sext i32 %lnot.ext51 to i64
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0)
  %tobool54 = icmp ne i64 %expval53, 0
  br i1 %tobool54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.then44
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup57

if.end56:                                         ; preds = %if.then44
  %29 = load i64, ptr %pos, align 8, !tbaa !27
  %add = add i64 %29, 1
  %30 = load ptr, ptr %ppos.addr, align 8, !tbaa !5
  store i64 %add, ptr %30, align 8, !tbaa !27
  %31 = load ptr, ptr %iter_obj.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %31, i32 0, i32 1
  %32 = load i64, ptr %pos, align 8, !tbaa !27
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %32
  %33 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %33, ptr %next_item, align 8, !tbaa !5
  %34 = load ptr, ptr %next_item, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %34)
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup57

cleanup57:                                        ; preds = %if.end56, %if.then55
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos) #13
  %cleanup.dest58 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest58, label %cleanup146 [
    i32 0, label %cleanup.cont59
  ]

cleanup.cont59:                                   ; preds = %cleanup57
  br label %if.end99

if.else60:                                        ; preds = %if.else41
  %35 = load ptr, ptr %iter_obj.addr, align 8, !tbaa !5
  %call61 = call i32 @Py_IS_TYPE(ptr noundef %35, ptr noundef @PyList_Type)
  %tobool62 = icmp ne i32 %call61, 0
  br i1 %tobool62, label %if.then63, label %if.else83

if.then63:                                        ; preds = %if.else60
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos64) #13
  %36 = load ptr, ptr %ppos.addr, align 8, !tbaa !5
  %37 = load i64, ptr %36, align 8, !tbaa !27
  store i64 %37, ptr %pos64, align 8, !tbaa !27
  %38 = load i64, ptr %pos64, align 8, !tbaa !27
  %39 = load ptr, ptr %iter_obj.addr, align 8, !tbaa !5
  %call65 = call i64 @PyList_GET_SIZE(ptr noundef %39)
  %cmp66 = icmp sge i64 %38, %call65
  %lnot68 = xor i1 %cmp66, true
  %lnot70 = xor i1 %lnot68, true
  %lnot.ext71 = zext i1 %lnot70 to i32
  %conv72 = sext i32 %lnot.ext71 to i64
  %expval73 = call i64 @llvm.expect.i64(i64 %conv72, i64 0)
  %tobool74 = icmp ne i64 %expval73, 0
  br i1 %tobool74, label %if.then75, label %if.end76

if.then75:                                        ; preds = %if.then63
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80

if.end76:                                         ; preds = %if.then63
  %40 = load i64, ptr %pos64, align 8, !tbaa !27
  %add77 = add i64 %40, 1
  %41 = load ptr, ptr %ppos.addr, align 8, !tbaa !5
  store i64 %add77, ptr %41, align 8, !tbaa !27
  %42 = load ptr, ptr %iter_obj.addr, align 8, !tbaa !5
  %ob_item78 = getelementptr inbounds %struct.PyListObject, ptr %42, i32 0, i32 1
  %43 = load ptr, ptr %ob_item78, align 8, !tbaa !116
  %44 = load i64, ptr %pos64, align 8, !tbaa !27
  %arrayidx79 = getelementptr ptr, ptr %43, i64 %44
  %45 = load ptr, ptr %arrayidx79, align 8, !tbaa !5
  store ptr %45, ptr %next_item, align 8, !tbaa !5
  %46 = load ptr, ptr %next_item, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %46)
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup80

cleanup80:                                        ; preds = %if.end76, %if.then75
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos64) #13
  %cleanup.dest81 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest81, label %cleanup146 [
    i32 0, label %cleanup.cont82
  ]

cleanup.cont82:                                   ; preds = %cleanup80
  br label %if.end98

if.else83:                                        ; preds = %if.else60
  %47 = load ptr, ptr %iter_obj.addr, align 8, !tbaa !5
  %call84 = call ptr @PyIter_Next(ptr noundef %47)
  store ptr %call84, ptr %next_item, align 8, !tbaa !5
  %48 = load ptr, ptr %next_item, align 8, !tbaa !5
  %tobool85 = icmp ne ptr %48, null
  %lnot86 = xor i1 %tobool85, true
  %lnot88 = xor i1 %lnot86, true
  %lnot90 = xor i1 %lnot88, true
  %lnot.ext91 = zext i1 %lnot90 to i32
  %conv92 = sext i32 %lnot.ext91 to i64
  %expval93 = call i64 @llvm.expect.i64(i64 %conv92, i64 0)
  %tobool94 = icmp ne i64 %expval93, 0
  br i1 %tobool94, label %if.then95, label %if.end97

if.then95:                                        ; preds = %if.else83
  %call96 = call i32 @__Pyx_IterFinish()
  store i32 %call96, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup146

if.end97:                                         ; preds = %if.else83
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %cleanup.cont82
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %cleanup.cont59
  br label %if.end100

if.end100:                                        ; preds = %if.end99
  %49 = load ptr, ptr %pitem.addr, align 8, !tbaa !5
  %tobool101 = icmp ne ptr %49, null
  br i1 %tobool101, label %if.then102, label %if.else103

if.then102:                                       ; preds = %if.end100
  %50 = load ptr, ptr %next_item, align 8, !tbaa !5
  %51 = load ptr, ptr %pitem.addr, align 8, !tbaa !5
  store ptr %50, ptr %51, align 8, !tbaa !5
  br label %if.end145

if.else103:                                       ; preds = %if.end100
  %52 = load ptr, ptr %pkey.addr, align 8, !tbaa !5
  %tobool104 = icmp ne ptr %52, null
  br i1 %tobool104, label %land.lhs.true, label %if.else139

land.lhs.true:                                    ; preds = %if.else103
  %53 = load ptr, ptr %pvalue.addr, align 8, !tbaa !5
  %tobool105 = icmp ne ptr %53, null
  br i1 %tobool105, label %if.then106, label %if.else139

if.then106:                                       ; preds = %land.lhs.true
  %54 = load i32, ptr %source_is_dict.addr, align 4, !tbaa !9
  %tobool107 = icmp ne i32 %54, 0
  br i1 %tobool107, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then106
  %55 = load ptr, ptr %next_item, align 8, !tbaa !5
  %call108 = call ptr @Py_TYPE(ptr noundef %55)
  %call109 = call i32 @PyType_HasFeature(ptr noundef %call108, i64 noundef 67108864)
  %tobool110 = icmp ne i32 %call109, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.then106
  %56 = phi i1 [ true, %if.then106 ], [ %tobool110, %lor.rhs ]
  %lnot111 = xor i1 %56, true
  %lnot113 = xor i1 %lnot111, true
  %lnot.ext114 = zext i1 %lnot113 to i32
  %conv115 = sext i32 %lnot.ext114 to i64
  %expval116 = call i64 @llvm.expect.i64(i64 %conv115, i64 1)
  %tobool117 = icmp ne i64 %expval116, 0
  br i1 %tobool117, label %cond.true, label %cond.false134

cond.true:                                        ; preds = %lor.end
  %57 = load i32, ptr %source_is_dict.addr, align 4, !tbaa !9
  %tobool118 = icmp ne i32 %57, 0
  br i1 %tobool118, label %lor.end123, label %lor.rhs119

lor.rhs119:                                       ; preds = %cond.true
  %58 = load ptr, ptr %next_item, align 8, !tbaa !5
  %call120 = call i64 @PyTuple_GET_SIZE(ptr noundef %58)
  %cmp121 = icmp eq i64 %call120, 2
  br label %lor.end123

lor.end123:                                       ; preds = %lor.rhs119, %cond.true
  %59 = phi i1 [ true, %cond.true ], [ %cmp121, %lor.rhs119 ]
  %lnot124 = xor i1 %59, true
  %lnot126 = xor i1 %lnot124, true
  %lnot.ext127 = zext i1 %lnot126 to i32
  %conv128 = sext i32 %lnot.ext127 to i64
  %expval129 = call i64 @llvm.expect.i64(i64 %conv128, i64 1)
  %tobool130 = icmp ne i64 %expval129, 0
  br i1 %tobool130, label %cond.true131, label %cond.false

cond.true131:                                     ; preds = %lor.end123
  %60 = load ptr, ptr %next_item, align 8, !tbaa !5
  %61 = load ptr, ptr %pkey.addr, align 8, !tbaa !5
  %62 = load ptr, ptr %pvalue.addr, align 8, !tbaa !5
  %call132 = call i32 @__Pyx_unpack_tuple2_exact(ptr noundef %60, ptr noundef %61, ptr noundef %62, i32 noundef 1)
  %tobool133 = icmp ne i32 %call132, 0
  br i1 %tobool133, label %if.then137, label %if.end138

cond.false:                                       ; preds = %lor.end123
  %63 = load ptr, ptr %next_item, align 8, !tbaa !5
  call void @__Pyx_UnpackTupleError(ptr noundef %63, i64 noundef 2)
  br i1 true, label %if.then137, label %if.end138

cond.false134:                                    ; preds = %lor.end
  %64 = load ptr, ptr %next_item, align 8, !tbaa !5
  %65 = load ptr, ptr %pkey.addr, align 8, !tbaa !5
  %66 = load ptr, ptr %pvalue.addr, align 8, !tbaa !5
  %67 = load i32, ptr %source_is_dict.addr, align 4, !tbaa !9
  %call135 = call i32 @__Pyx_unpack_tuple2_generic(ptr noundef %64, ptr noundef %65, ptr noundef %66, i32 noundef %67, i32 noundef 1)
  %tobool136 = icmp ne i32 %call135, 0
  br i1 %tobool136, label %if.then137, label %if.end138

if.then137:                                       ; preds = %cond.false134, %cond.false, %cond.true131
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup146

if.end138:                                        ; preds = %cond.false134, %cond.false, %cond.true131
  br label %if.end144

if.else139:                                       ; preds = %land.lhs.true, %if.else103
  %68 = load ptr, ptr %pkey.addr, align 8, !tbaa !5
  %tobool140 = icmp ne ptr %68, null
  br i1 %tobool140, label %if.then141, label %if.else142

if.then141:                                       ; preds = %if.else139
  %69 = load ptr, ptr %next_item, align 8, !tbaa !5
  %70 = load ptr, ptr %pkey.addr, align 8, !tbaa !5
  store ptr %69, ptr %70, align 8, !tbaa !5
  br label %if.end143

if.else142:                                       ; preds = %if.else139
  %71 = load ptr, ptr %next_item, align 8, !tbaa !5
  %72 = load ptr, ptr %pvalue.addr, align 8, !tbaa !5
  store ptr %71, ptr %72, align 8, !tbaa !5
  br label %if.end143

if.end143:                                        ; preds = %if.else142, %if.then141
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.end138
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.then102
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup146

cleanup146:                                       ; preds = %if.end145, %if.then137, %if.then95, %cleanup80, %cleanup57, %cleanup39
  call void @llvm.lifetime.end.p0(i64 8, ptr %next_item) #13
  %73 = load i32, ptr %retval, align 4
  ret i32 %73
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx__ImportNumPyArray() #0 {
entry:
  %numpy_module = alloca ptr, align 8
  %ndarray_object = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %numpy_module) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %ndarray_object) #13
  store ptr null, ptr %ndarray_object, align 8, !tbaa !5
  %0 = load ptr, ptr @__pyx_n_s_numpy, align 8, !tbaa !5
  %call = call ptr @__Pyx_Import(ptr noundef %0, ptr noundef null, i32 noundef 0)
  store ptr %call, ptr %numpy_module, align 8, !tbaa !5
  %1 = load ptr, ptr %numpy_module, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %numpy_module, align 8, !tbaa !5
  %call3 = call ptr @PyObject_GetAttrString(ptr noundef %2, ptr noundef @.str.286)
  store ptr %call3, ptr %ndarray_object, align 8, !tbaa !5
  %3 = load ptr, ptr %numpy_module, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load ptr, ptr %ndarray_object, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %4, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end
  call void @PyErr_Clear()
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.end
  %5 = load ptr, ptr %ndarray_object, align 8, !tbaa !5
  %tobool16 = icmp ne ptr %5, null
  br i1 %tobool16, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %if.end15
  %6 = load ptr, ptr %ndarray_object, align 8, !tbaa !5
  %call17 = call i32 @PyObject_TypeCheck(ptr noundef %6, ptr noundef @PyType_Type)
  %tobool18 = icmp ne i32 %call17, 0
  %lnot19 = xor i1 %tobool18, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end15
  %7 = phi i1 [ true, %if.end15 ], [ %lnot19, %lor.rhs ]
  %lnot21 = xor i1 %7, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %lor.end
  %8 = load ptr, ptr %ndarray_object, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %8)
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  store ptr @_Py_NoneStruct, ptr %ndarray_object, align 8, !tbaa !5
  br label %if.end29

if.end29:                                         ; preds = %if.then28, %lor.end
  %9 = load ptr, ptr %ndarray_object, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %ndarray_object) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %numpy_module) #13
  ret ptr %9
}

declare i32 @PyDict_Contains(ptr noundef, ptr noundef) #1

declare ptr @PyDict_GetItemWithError(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyUnicode_READ_CHAR(ptr noundef %unicode, i64 noundef %index) #3 {
entry:
  %retval = alloca i32, align 4
  %unicode.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  %kind = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %unicode, ptr %unicode.addr, align 8, !tbaa !5
  store i64 %index, ptr %index.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 4, ptr %kind) #13
  %0 = load ptr, ptr %unicode.addr, align 8, !tbaa !5
  %state = getelementptr inbounds %struct.PyASCIIObject, ptr %0, i32 0, i32 3
  %bf.load = load i32, ptr %state, align 8
  %bf.lshr = lshr i32 %bf.load, 2
  %bf.clear = and i32 %bf.lshr, 7
  store i32 %bf.clear, ptr %kind, align 4, !tbaa !9
  %1 = load i32, ptr %kind, align 4, !tbaa !9
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %unicode.addr, align 8, !tbaa !5
  %call = call ptr @PyUnicode_DATA(ptr noundef %2)
  %3 = load i64, ptr %index.addr, align 8, !tbaa !27
  %arrayidx = getelementptr i8, ptr %call, i64 %3
  %4 = load i8, ptr %arrayidx, align 1, !tbaa !29
  %conv = zext i8 %4 to i32
  store i32 %conv, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load i32, ptr %kind, align 4, !tbaa !9
  %cmp1 = icmp eq i32 %5, 2
  br i1 %cmp1, label %if.then3, label %if.end7

if.then3:                                         ; preds = %if.end
  %6 = load ptr, ptr %unicode.addr, align 8, !tbaa !5
  %call4 = call ptr @PyUnicode_DATA(ptr noundef %6)
  %7 = load i64, ptr %index.addr, align 8, !tbaa !27
  %arrayidx5 = getelementptr i16, ptr %call4, i64 %7
  %8 = load i16, ptr %arrayidx5, align 2, !tbaa !171
  %conv6 = zext i16 %8 to i32
  store i32 %conv6, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %9 = load ptr, ptr %unicode.addr, align 8, !tbaa !5
  %call8 = call ptr @PyUnicode_DATA(ptr noundef %9)
  %10 = load i64, ptr %index.addr, align 8, !tbaa !27
  %arrayidx9 = getelementptr i32, ptr %call8, i64 %10
  %11 = load i32, ptr %arrayidx9, align 4, !tbaa !9
  store i32 %11, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then3, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %kind) #13
  %12 = load i32, ptr %retval, align 4
  ret i32 %12
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PyByteArray_GET_SIZE(ptr noundef %op) #3 {
entry:
  %op.addr = alloca ptr, align 8
  %self = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  store ptr %0, ptr %self, align 8, !tbaa !5
  %1 = load ptr, ptr %self, align 8, !tbaa !5
  %call = call i64 @Py_SIZE(ptr noundef %1)
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #13
  ret i64 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @PyByteArray_AS_STRING(ptr noundef %op) #3 {
entry:
  %retval = alloca ptr, align 8
  %op.addr = alloca ptr, align 8
  %self = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %op, ptr %op.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #13
  %0 = load ptr, ptr %op.addr, align 8, !tbaa !5
  store ptr %0, ptr %self, align 8, !tbaa !5
  %1 = load ptr, ptr %self, align 8, !tbaa !5
  %call = call i64 @Py_SIZE(ptr noundef %1)
  %tobool = icmp ne i64 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %self, align 8, !tbaa !5
  %ob_start = getelementptr inbounds %struct.PyByteArrayObject, ptr %2, i32 0, i32 3
  %3 = load ptr, ptr %ob_start, align 8, !tbaa !316
  store ptr %3, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  store ptr @_PyByteArray_empty_string, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #13
  %4 = load ptr, ptr %retval, align 8
  ret ptr %4
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_SetItemInt_Generic(ptr noundef %o, ptr noundef %j, ptr noundef %v) #0 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %j.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  %r = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !5
  store ptr %j, ptr %j.addr, align 8, !tbaa !5
  store ptr %v, ptr %v.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %r) #13
  %0 = load ptr, ptr %j.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %j.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %v.addr, align 8, !tbaa !5
  %call = call i32 @PyObject_SetItem(ptr noundef %1, ptr noundef %2, ptr noundef %3)
  store i32 %call, ptr %r, align 4, !tbaa !9
  %4 = load ptr, ptr %j.addr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %4)
  %5 = load i32, ptr %r, align 4, !tbaa !9
  store i32 %5, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %r) #13
  %6 = load i32, ptr %retval, align 4
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyObject_CallMethod0(ptr noundef %obj, ptr noundef %method_name) #0 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %method_name.addr = alloca ptr, align 8
  %method = alloca ptr, align 8
  %result = alloca ptr, align 8
  %is_method = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store ptr %method_name, ptr %method_name.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %method) #13
  store ptr null, ptr %method, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #13
  store ptr null, ptr %result, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_method) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %method_name.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_PyObject_GetMethod(ptr noundef %0, ptr noundef %1, ptr noundef %method)
  store i32 %call, ptr %is_method, align 4, !tbaa !9
  %2 = load i32, ptr %is_method, align 4, !tbaa !9
  %tobool = icmp ne i32 %2, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %method, align 8, !tbaa !5
  %4 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call3 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %3, ptr noundef %4)
  store ptr %call3, ptr %result, align 8, !tbaa !5
  %5 = load ptr, ptr %method, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %5)
  %6 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %6, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %method, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %7, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end
  br label %bad

if.end15:                                         ; preds = %if.end
  %8 = load ptr, ptr %method, align 8, !tbaa !5
  %call16 = call ptr @__Pyx_PyObject_CallNoArg(ptr noundef %8)
  store ptr %call16, ptr %result, align 8, !tbaa !5
  %9 = load ptr, ptr %method, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %9)
  br label %bad

bad:                                              ; preds = %if.end15, %if.then14
  %10 = load ptr, ptr %result, align 8, !tbaa !5
  store ptr %10, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %bad, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_method) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %method) #13
  %11 = load ptr, ptr %retval, align 8
  ret ptr %11
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_PyObject_GetMethod(ptr noundef %obj, ptr noundef %name, ptr noundef %method) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %method.addr = alloca ptr, align 8
  %attr = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %descr = alloca ptr, align 8
  %f = alloca ptr, align 8
  %dictptr = alloca ptr, align 8
  %dict = alloca ptr, align 8
  %meth_found = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %function = alloca ptr, align 8
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store ptr %name, ptr %name.addr, align 8, !tbaa !5
  store ptr %method, ptr %method.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %attr) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  store ptr %call, ptr %tp, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %descr) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %f) #13
  store ptr null, ptr %f, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %dictptr) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %dict) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %meth_found) #13
  store i32 0, ptr %meth_found, align 4, !tbaa !9
  %1 = load ptr, ptr %tp, align 8, !tbaa !5
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 16
  %2 = load ptr, ptr %tp_getattro, align 8, !tbaa !37
  %cmp = icmp ne ptr %2, @PyObject_GenericGetAttr
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %call2 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %3, ptr noundef %4)
  store ptr %call2, ptr %attr, align 8, !tbaa !5
  br label %try_unpack

if.end:                                           ; preds = %entry
  %5 = load ptr, ptr %tp, align 8, !tbaa !5
  %tp_dict = getelementptr inbounds %struct._typeobject, ptr %5, i32 0, i32 31
  %6 = load ptr, ptr %tp_dict, align 8, !tbaa !17
  %cmp3 = icmp eq ptr %6, null
  %lnot5 = xor i1 %cmp3, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0)
  %tobool11 = icmp ne i64 %expval10, 0
  br i1 %tobool11, label %land.lhs.true, label %if.end23

land.lhs.true:                                    ; preds = %if.end
  %7 = load ptr, ptr %tp, align 8, !tbaa !5
  %call12 = call i32 @PyType_Ready(ptr noundef %7)
  %cmp13 = icmp slt i32 %call12, 0
  %lnot15 = xor i1 %cmp13, true
  %lnot17 = xor i1 %lnot15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %conv19 = sext i32 %lnot.ext18 to i64
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0)
  %tobool21 = icmp ne i64 %expval20, 0
  br i1 %tobool21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %land.lhs.true
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end23:                                         ; preds = %land.lhs.true, %if.end
  %8 = load ptr, ptr %tp, align 8, !tbaa !5
  %9 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %call24 = call ptr @_PyType_Lookup(ptr noundef %8, ptr noundef %9)
  store ptr %call24, ptr %descr, align 8, !tbaa !5
  %10 = load ptr, ptr %descr, align 8, !tbaa !5
  %cmp25 = icmp ne ptr %10, null
  %lnot27 = xor i1 %cmp25, true
  %lnot29 = xor i1 %lnot27, true
  %lnot.ext30 = zext i1 %lnot29 to i32
  %conv31 = sext i32 %lnot.ext30 to i64
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 1)
  %tobool33 = icmp ne i64 %expval32, 0
  br i1 %tobool33, label %if.then34, label %if.end62

if.then34:                                        ; preds = %if.end23
  %11 = load ptr, ptr %descr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %11)
  %12 = load ptr, ptr %descr, align 8, !tbaa !5
  %call35 = call i32 @Py_IS_TYPE(ptr noundef %12, ptr noundef @PyFunction_Type)
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then34
  %13 = load ptr, ptr %descr, align 8, !tbaa !5
  %call37 = call ptr @Py_TYPE(ptr noundef %13)
  %cmp38 = icmp eq ptr %call37, @PyMethodDescr_Type
  br i1 %cmp38, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false
  %14 = load ptr, ptr %descr, align 8, !tbaa !5
  %call40 = call ptr @Py_TYPE(ptr noundef %14)
  %15 = load ptr, ptr @__pyx_CyFunctionType, align 8, !tbaa !5
  %call41 = call i32 @__Pyx_IsSubtype(ptr noundef %call40, ptr noundef %15)
  %tobool42 = icmp ne i32 %call41, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.then34
  %16 = phi i1 [ true, %lor.lhs.false ], [ true, %if.then34 ], [ %tobool42, %lor.rhs ]
  %lnot43 = xor i1 %16, true
  %lnot45 = xor i1 %lnot43, true
  %lnot.ext46 = zext i1 %lnot45 to i32
  %conv47 = sext i32 %lnot.ext46 to i64
  %expval48 = call i64 @llvm.expect.i64(i64 %conv47, i64 1)
  %tobool49 = icmp ne i64 %expval48, 0
  br i1 %tobool49, label %if.then50, label %if.else

if.then50:                                        ; preds = %lor.end
  store i32 1, ptr %meth_found, align 4, !tbaa !9
  br label %if.end61

if.else:                                          ; preds = %lor.end
  %17 = load ptr, ptr %descr, align 8, !tbaa !5
  %call51 = call ptr @Py_TYPE(ptr noundef %17)
  %tp_descr_get = getelementptr inbounds %struct._typeobject, ptr %call51, i32 0, i32 32
  %18 = load ptr, ptr %tp_descr_get, align 8, !tbaa !318
  store ptr %18, ptr %f, align 8, !tbaa !5
  %19 = load ptr, ptr %f, align 8, !tbaa !5
  %cmp52 = icmp ne ptr %19, null
  br i1 %cmp52, label %land.lhs.true54, label %if.end60

land.lhs.true54:                                  ; preds = %if.else
  %20 = load ptr, ptr %descr, align 8, !tbaa !5
  %call55 = call i32 @PyDescr_IsData(ptr noundef %20)
  %tobool56 = icmp ne i32 %call55, 0
  br i1 %tobool56, label %if.then57, label %if.end60

if.then57:                                        ; preds = %land.lhs.true54
  %21 = load ptr, ptr %f, align 8, !tbaa !5
  %22 = load ptr, ptr %descr, align 8, !tbaa !5
  %23 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %24 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call58 = call ptr @Py_TYPE(ptr noundef %24)
  %call59 = call ptr %21(ptr noundef %22, ptr noundef %23, ptr noundef %call58)
  store ptr %call59, ptr %attr, align 8, !tbaa !5
  %25 = load ptr, ptr %descr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %25)
  br label %try_unpack

if.end60:                                         ; preds = %land.lhs.true54, %if.else
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then50
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end23
  %26 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call63 = call ptr @_PyObject_GetDictPtr(ptr noundef %26)
  store ptr %call63, ptr %dictptr, align 8, !tbaa !5
  %27 = load ptr, ptr %dictptr, align 8, !tbaa !5
  %cmp64 = icmp ne ptr %27, null
  br i1 %cmp64, label %land.lhs.true66, label %if.end75

land.lhs.true66:                                  ; preds = %if.end62
  %28 = load ptr, ptr %dictptr, align 8, !tbaa !5
  %29 = load ptr, ptr %28, align 8, !tbaa !5
  store ptr %29, ptr %dict, align 8, !tbaa !5
  %cmp67 = icmp ne ptr %29, null
  br i1 %cmp67, label %if.then69, label %if.end75

if.then69:                                        ; preds = %land.lhs.true66
  %30 = load ptr, ptr %dict, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %30)
  %31 = load ptr, ptr %dict, align 8, !tbaa !5
  %32 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %33 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %33, i32 0, i32 2
  %34 = load i64, ptr %hash, align 8, !tbaa !154
  %call70 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %31, ptr noundef %32, i64 noundef %34)
  store ptr %call70, ptr %attr, align 8, !tbaa !5
  %35 = load ptr, ptr %attr, align 8, !tbaa !5
  %cmp71 = icmp ne ptr %35, null
  br i1 %cmp71, label %if.then73, label %if.end74

if.then73:                                        ; preds = %if.then69
  %36 = load ptr, ptr %attr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %36)
  %37 = load ptr, ptr %dict, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %37)
  %38 = load ptr, ptr %descr, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %38)
  br label %try_unpack

if.end74:                                         ; preds = %if.then69
  %39 = load ptr, ptr %dict, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %39)
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %land.lhs.true66, %if.end62
  %40 = load i32, ptr %meth_found, align 4, !tbaa !9
  %tobool76 = icmp ne i32 %40, 0
  br i1 %tobool76, label %if.then77, label %if.end78

if.then77:                                        ; preds = %if.end75
  %41 = load ptr, ptr %descr, align 8, !tbaa !5
  %42 = load ptr, ptr %method.addr, align 8, !tbaa !5
  store ptr %41, ptr %42, align 8, !tbaa !5
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end78:                                         ; preds = %if.end75
  %43 = load ptr, ptr %f, align 8, !tbaa !5
  %cmp79 = icmp ne ptr %43, null
  br i1 %cmp79, label %if.then81, label %if.end84

if.then81:                                        ; preds = %if.end78
  %44 = load ptr, ptr %f, align 8, !tbaa !5
  %45 = load ptr, ptr %descr, align 8, !tbaa !5
  %46 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %47 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call82 = call ptr @Py_TYPE(ptr noundef %47)
  %call83 = call ptr %44(ptr noundef %45, ptr noundef %46, ptr noundef %call82)
  store ptr %call83, ptr %attr, align 8, !tbaa !5
  %48 = load ptr, ptr %descr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %48)
  br label %try_unpack

if.end84:                                         ; preds = %if.end78
  %49 = load ptr, ptr %descr, align 8, !tbaa !5
  %cmp85 = icmp ne ptr %49, null
  br i1 %cmp85, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.end84
  %50 = load ptr, ptr %descr, align 8, !tbaa !5
  %51 = load ptr, ptr %method.addr, align 8, !tbaa !5
  store ptr %50, ptr %51, align 8, !tbaa !5
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end88:                                         ; preds = %if.end84
  %52 = load ptr, ptr @PyExc_AttributeError, align 8, !tbaa !5
  %53 = load ptr, ptr %tp, align 8, !tbaa !5
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %53, i32 0, i32 1
  %54 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %55 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %call89 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %52, ptr noundef @.str.290, ptr noundef %54, ptr noundef %55)
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

try_unpack:                                       ; preds = %if.then81, %if.then73, %if.then57, %if.then
  %56 = load ptr, ptr %attr, align 8, !tbaa !5
  %tobool90 = icmp ne ptr %56, null
  %lnot91 = xor i1 %tobool90, true
  %lnot93 = xor i1 %lnot91, true
  %lnot.ext94 = zext i1 %lnot93 to i32
  %conv95 = sext i32 %lnot.ext94 to i64
  %expval96 = call i64 @llvm.expect.i64(i64 %conv95, i64 1)
  %tobool97 = icmp ne i64 %expval96, 0
  br i1 %tobool97, label %land.lhs.true98, label %if.end112

land.lhs.true98:                                  ; preds = %try_unpack
  %57 = load ptr, ptr %attr, align 8, !tbaa !5
  %call99 = call i32 @Py_IS_TYPE(ptr noundef %57, ptr noundef @PyMethod_Type)
  %tobool100 = icmp ne i32 %call99, 0
  br i1 %tobool100, label %land.lhs.true101, label %if.end112

land.lhs.true101:                                 ; preds = %land.lhs.true98
  %58 = load ptr, ptr %attr, align 8, !tbaa !5
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %58, i32 0, i32 2
  %59 = load ptr, ptr %im_self, align 8, !tbaa !125
  %60 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %cmp102 = icmp eq ptr %59, %60
  %lnot104 = xor i1 %cmp102, true
  %lnot106 = xor i1 %lnot104, true
  %lnot.ext107 = zext i1 %lnot106 to i32
  %conv108 = sext i32 %lnot.ext107 to i64
  %expval109 = call i64 @llvm.expect.i64(i64 %conv108, i64 1)
  %tobool110 = icmp ne i64 %expval109, 0
  br i1 %tobool110, label %if.then111, label %if.end112

if.then111:                                       ; preds = %land.lhs.true101
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #13
  %61 = load ptr, ptr %attr, align 8, !tbaa !5
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %61, i32 0, i32 1
  %62 = load ptr, ptr %im_func, align 8, !tbaa !127
  store ptr %62, ptr %function, align 8, !tbaa !5
  %63 = load ptr, ptr %function, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %63)
  %64 = load ptr, ptr %attr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %64)
  %65 = load ptr, ptr %function, align 8, !tbaa !5
  %66 = load ptr, ptr %method.addr, align 8, !tbaa !5
  store ptr %65, ptr %66, align 8, !tbaa !5
  store i32 1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #13
  br label %cleanup

if.end112:                                        ; preds = %land.lhs.true101, %land.lhs.true98, %try_unpack
  %67 = load ptr, ptr %attr, align 8, !tbaa !5
  %68 = load ptr, ptr %method.addr, align 8, !tbaa !5
  store ptr %67, ptr %68, align 8, !tbaa !5
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end112, %if.then111, %if.end88, %if.then87, %if.then77, %if.then22
  call void @llvm.lifetime.end.p0(i64 4, ptr %meth_found) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %dict) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %dictptr) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %f) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %descr) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %attr) #13
  %69 = load i32, ptr %retval, align 4
  ret i32 %69
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_CallNoArg(ptr noundef %func) #3 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %call = call i32 @PyObject_TypeCheck(ptr noundef %0, ptr noundef @PyCFunction_Type)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %1 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %call1 = call ptr @Py_TYPE(ptr noundef %1)
  %2 = load ptr, ptr @__pyx_CyFunctionType, align 8, !tbaa !5
  %call2 = call i32 @__Pyx_IsSubtype(ptr noundef %call1, ptr noundef %2)
  %tobool3 = icmp ne i32 %call2, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %tobool3, %lor.rhs ]
  %lnot = xor i1 %3, true
  %lnot4 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot4 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %if.then, label %if.end17

if.then:                                          ; preds = %lor.end
  %4 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %call6 = call i32 @PyCFunction_GET_FLAGS(ptr noundef %4)
  %and = and i32 %call6, 4
  %tobool7 = icmp ne i32 %and, 0
  %lnot8 = xor i1 %tobool7, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 1)
  %tobool14 = icmp ne i64 %expval13, 0
  br i1 %tobool14, label %if.then15, label %if.end

if.then15:                                        ; preds = %if.then
  %5 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %call16 = call ptr @__Pyx_PyObject_CallMethO(ptr noundef %5, ptr noundef null)
  store ptr %call16, ptr %retval, align 8
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end17

if.end17:                                         ; preds = %if.end, %lor.end
  %6 = load ptr, ptr %func.addr, align 8, !tbaa !5
  %7 = load ptr, ptr @__pyx_empty_tuple, align 8, !tbaa !5
  %call18 = call ptr @__Pyx_PyObject_Call(ptr noundef %6, ptr noundef %7, ptr noundef null)
  store ptr %call18, ptr %retval, align 8
  br label %return

return:                                           ; preds = %if.end17, %if.then15
  %8 = load ptr, ptr %retval, align 8
  ret ptr %8
}

declare i32 @PyDescr_IsData(ptr noundef) #1

declare ptr @_PyObject_GetDictPtr(ptr noundef) #1

declare ptr @PyIter_Next(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_IterFinish() #3 {
entry:
  %retval = alloca i32, align 4
  %call = call ptr @PyErr_Occurred()
  %tobool = icmp ne ptr %call, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @PyExc_StopIteration, align 8, !tbaa !5
  %call3 = call i32 @PyErr_ExceptionMatches(ptr noundef %0)
  %tobool4 = icmp ne i32 %call3, 0
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1)
  %tobool11 = icmp ne i64 %expval10, 0
  br i1 %tobool11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.then
  call void @PyErr_Clear()
  store i32 0, ptr %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then
  store i32 -1, ptr %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.else, %if.then12
  %1 = load i32, ptr %retval, align 4
  ret i32 %1
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_unpack_tuple2_exact(ptr noundef %tuple, ptr noundef %pvalue1, ptr noundef %pvalue2, i32 noundef %decref_tuple) #3 {
entry:
  %tuple.addr = alloca ptr, align 8
  %pvalue1.addr = alloca ptr, align 8
  %pvalue2.addr = alloca ptr, align 8
  %decref_tuple.addr = alloca i32, align 4
  %value1 = alloca ptr, align 8
  %value2 = alloca ptr, align 8
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !5
  store ptr %pvalue1, ptr %pvalue1.addr, align 8, !tbaa !5
  store ptr %pvalue2, ptr %pvalue2.addr, align 8, !tbaa !5
  store i32 %decref_tuple, ptr %decref_tuple.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %value1) #13
  store ptr null, ptr %value1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %value2) #13
  store ptr null, ptr %value2, align 8, !tbaa !5
  %0 = load ptr, ptr %tuple.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %0, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0
  %1 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %1, ptr %value1, align 8, !tbaa !5
  %2 = load ptr, ptr %value1, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %2)
  %3 = load ptr, ptr %tuple.addr, align 8, !tbaa !5
  %ob_item1 = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1
  %arrayidx2 = getelementptr [1 x ptr], ptr %ob_item1, i64 0, i64 1
  %4 = load ptr, ptr %arrayidx2, align 8, !tbaa !5
  store ptr %4, ptr %value2, align 8, !tbaa !5
  %5 = load ptr, ptr %value2, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %5)
  %6 = load i32, ptr %decref_tuple.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load ptr, ptr %tuple.addr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load ptr, ptr %value1, align 8, !tbaa !5
  %9 = load ptr, ptr %pvalue1.addr, align 8, !tbaa !5
  store ptr %8, ptr %9, align 8, !tbaa !5
  %10 = load ptr, ptr %value2, align 8, !tbaa !5
  %11 = load ptr, ptr %pvalue2.addr, align 8, !tbaa !5
  store ptr %10, ptr %11, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %value2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %value1) #13
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_UnpackTupleError(ptr noundef %t, i64 noundef %index) #0 {
entry:
  %t.addr = alloca ptr, align 8
  %index.addr = alloca i64, align 8
  store ptr %t, ptr %t.addr, align 8, !tbaa !5
  store i64 %index, ptr %index.addr, align 8, !tbaa !27
  %0 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__Pyx_RaiseNoneNotIterableError()
  br label %if.end5

if.else:                                          ; preds = %entry
  %1 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1)
  %2 = load i64, ptr %index.addr, align 8, !tbaa !27
  %cmp1 = icmp slt i64 %call, %2
  br i1 %cmp1, label %if.then2, label %if.else4

if.then2:                                         ; preds = %if.else
  %3 = load ptr, ptr %t.addr, align 8, !tbaa !5
  %call3 = call i64 @PyTuple_GET_SIZE(ptr noundef %3)
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %call3)
  br label %if.end

if.else4:                                         ; preds = %if.else
  %4 = load i64, ptr %index.addr, align 8, !tbaa !27
  call void @__Pyx_RaiseTooManyValuesError(i64 noundef %4)
  br label %if.end

if.end:                                           ; preds = %if.else4, %if.then2
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_unpack_tuple2_generic(ptr noundef %tuple, ptr noundef %pvalue1, ptr noundef %pvalue2, i32 noundef %has_known_size, i32 noundef %decref_tuple) #0 {
entry:
  %retval = alloca i32, align 4
  %tuple.addr = alloca ptr, align 8
  %pvalue1.addr = alloca ptr, align 8
  %pvalue2.addr = alloca ptr, align 8
  %has_known_size.addr = alloca i32, align 4
  %decref_tuple.addr = alloca i32, align 4
  %index = alloca i64, align 8
  %value1 = alloca ptr, align 8
  %value2 = alloca ptr, align 8
  %iter = alloca ptr, align 8
  %iternext = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !5
  store ptr %pvalue1, ptr %pvalue1.addr, align 8, !tbaa !5
  store ptr %pvalue2, ptr %pvalue2.addr, align 8, !tbaa !5
  store i32 %has_known_size, ptr %has_known_size.addr, align 4, !tbaa !9
  store i32 %decref_tuple, ptr %decref_tuple.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %index) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %value1) #13
  store ptr null, ptr %value1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %value2) #13
  store ptr null, ptr %value2, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %iter) #13
  store ptr null, ptr %iter, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %iternext) #13
  %0 = load ptr, ptr %tuple.addr, align 8, !tbaa !5
  %call = call ptr @PyObject_GetIter(ptr noundef %0)
  store ptr %call, ptr %iter, align 8, !tbaa !5
  %1 = load ptr, ptr %iter, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %bad

if.end:                                           ; preds = %entry
  %2 = load i32, ptr %decref_tuple.addr, align 4, !tbaa !9
  %tobool4 = icmp ne i32 %2, 0
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  %3 = load ptr, ptr %tuple.addr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %3)
  store ptr null, ptr %tuple.addr, align 8, !tbaa !5
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end
  %4 = load ptr, ptr %iter, align 8, !tbaa !5
  %call7 = call ptr @Py_TYPE(ptr noundef %4)
  %tp_iternext = getelementptr inbounds %struct._typeobject, ptr %call7, i32 0, i32 26
  %5 = load ptr, ptr %tp_iternext, align 8, !tbaa !115
  store ptr %5, ptr %iternext, align 8, !tbaa !5
  %6 = load ptr, ptr %iternext, align 8, !tbaa !5
  %7 = load ptr, ptr %iter, align 8, !tbaa !5
  %call8 = call ptr %6(ptr noundef %7)
  store ptr %call8, ptr %value1, align 8, !tbaa !5
  %8 = load ptr, ptr %value1, align 8, !tbaa !5
  %tobool9 = icmp ne ptr %8, null
  %lnot10 = xor i1 %tobool9, true
  %lnot12 = xor i1 %lnot10, true
  %lnot14 = xor i1 %lnot12, true
  %lnot.ext15 = zext i1 %lnot14 to i32
  %conv16 = sext i32 %lnot.ext15 to i64
  %expval17 = call i64 @llvm.expect.i64(i64 %conv16, i64 0)
  %tobool18 = icmp ne i64 %expval17, 0
  br i1 %tobool18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end6
  store i64 0, ptr %index, align 8, !tbaa !27
  br label %unpacking_failed

if.end20:                                         ; preds = %if.end6
  %9 = load ptr, ptr %iternext, align 8, !tbaa !5
  %10 = load ptr, ptr %iter, align 8, !tbaa !5
  %call21 = call ptr %9(ptr noundef %10)
  store ptr %call21, ptr %value2, align 8, !tbaa !5
  %11 = load ptr, ptr %value2, align 8, !tbaa !5
  %tobool22 = icmp ne ptr %11, null
  %lnot23 = xor i1 %tobool22, true
  %lnot25 = xor i1 %lnot23, true
  %lnot27 = xor i1 %lnot25, true
  %lnot.ext28 = zext i1 %lnot27 to i32
  %conv29 = sext i32 %lnot.ext28 to i64
  %expval30 = call i64 @llvm.expect.i64(i64 %conv29, i64 0)
  %tobool31 = icmp ne i64 %expval30, 0
  br i1 %tobool31, label %if.then32, label %if.end33

if.then32:                                        ; preds = %if.end20
  store i64 1, ptr %index, align 8, !tbaa !27
  br label %unpacking_failed

if.end33:                                         ; preds = %if.end20
  %12 = load i32, ptr %has_known_size.addr, align 4, !tbaa !9
  %tobool34 = icmp ne i32 %12, 0
  br i1 %tobool34, label %if.end46, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end33
  %13 = load ptr, ptr %iternext, align 8, !tbaa !5
  %14 = load ptr, ptr %iter, align 8, !tbaa !5
  %call35 = call ptr %13(ptr noundef %14)
  %call36 = call i32 @__Pyx_IternextUnpackEndCheck(ptr noundef %call35, i64 noundef 2)
  %tobool37 = icmp ne i32 %call36, 0
  %lnot38 = xor i1 %tobool37, true
  %lnot40 = xor i1 %lnot38, true
  %lnot.ext41 = zext i1 %lnot40 to i32
  %conv42 = sext i32 %lnot.ext41 to i64
  %expval43 = call i64 @llvm.expect.i64(i64 %conv42, i64 0)
  %tobool44 = icmp ne i64 %expval43, 0
  br i1 %tobool44, label %if.then45, label %if.end46

if.then45:                                        ; preds = %land.lhs.true
  br label %bad

if.end46:                                         ; preds = %land.lhs.true, %if.end33
  %15 = load ptr, ptr %iter, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %15)
  %16 = load ptr, ptr %value1, align 8, !tbaa !5
  %17 = load ptr, ptr %pvalue1.addr, align 8, !tbaa !5
  store ptr %16, ptr %17, align 8, !tbaa !5
  %18 = load ptr, ptr %value2, align 8, !tbaa !5
  %19 = load ptr, ptr %pvalue2.addr, align 8, !tbaa !5
  store ptr %18, ptr %19, align 8, !tbaa !5
  store i32 0, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

unpacking_failed:                                 ; preds = %if.then32, %if.then19
  %20 = load i32, ptr %has_known_size.addr, align 4, !tbaa !9
  %tobool47 = icmp ne i32 %20, 0
  br i1 %tobool47, label %if.end52, label %land.lhs.true48

land.lhs.true48:                                  ; preds = %unpacking_failed
  %call49 = call i32 @__Pyx_IterFinish()
  %cmp = icmp eq i32 %call49, 0
  br i1 %cmp, label %if.then51, label %if.end52

if.then51:                                        ; preds = %land.lhs.true48
  %21 = load i64, ptr %index, align 8, !tbaa !27
  call void @__Pyx_RaiseNeedMoreValuesError(i64 noundef %21)
  br label %if.end52

if.end52:                                         ; preds = %if.then51, %land.lhs.true48, %unpacking_failed
  br label %bad

bad:                                              ; preds = %if.end52, %if.then45, %if.then
  %22 = load ptr, ptr %iter, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %22)
  %23 = load ptr, ptr %value1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %23)
  %24 = load ptr, ptr %value2, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %24)
  %25 = load i32, ptr %decref_tuple.addr, align 4, !tbaa !9
  %tobool53 = icmp ne i32 %25, 0
  br i1 %tobool53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %bad
  %26 = load ptr, ptr %tuple.addr, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %26)
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %bad
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end55, %if.end46
  call void @llvm.lifetime.end.p0(i64 8, ptr %iternext) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %iter) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %value2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %value1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %index) #13
  %27 = load i32, ptr %retval, align 4
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_IternextUnpackEndCheck(ptr noundef %retval1, i64 noundef %expected) #0 {
entry:
  %retval = alloca i32, align 4
  %retval.addr = alloca ptr, align 8
  %expected.addr = alloca i64, align 8
  store ptr %retval1, ptr %retval.addr, align 8, !tbaa !5
  store i64 %expected, ptr %expected.addr, align 8, !tbaa !27
  %0 = load ptr, ptr %retval.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %retval.addr, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %1)
  %2 = load i64, ptr %expected.addr, align 8, !tbaa !27
  call void @__Pyx_RaiseTooManyValuesError(i64 noundef %2)
  store i32 -1, ptr %retval, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call = call i32 @__Pyx_IterFinish()
  store i32 %call, ptr %retval, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, ptr %retval, align 4
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_fuse_0__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_11_minibatch_update_sparse(ptr noundef %__pyx_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_X = alloca ptr, align 8
  %__pyx_v_sample_weight = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_centers_old = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_centers_new = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_weight_sums = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_labels = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_n_threads = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %values = alloca [7 x ptr], align 16
  %kw_args = alloca i64, align 8
  %pos_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca %struct.__Pyx_memviewslice, align 8
  %tmp211 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp226 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp241 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp256 = alloca %struct.__Pyx_memviewslice, align 8
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !5
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_X) #13
  store ptr null, ptr %__pyx_v_X, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_sample_weight) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_sample_weight, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_centers_old) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_centers_old, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_centers_new) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_centers_new, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_weight_sums) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_weight_sums, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_labels) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_labels, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_threads) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 56, ptr %values) #13
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 56, i1 false)
  %0 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else168

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos_args) #13
  %1 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1)
  store i64 %call, ptr %pos_args, align 8, !tbaa !27
  %2 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %2, label %sw.default [
    i64 7, label %sw.bb
    i64 6, label %sw.bb4
    i64 5, label %sw.bb8
    i64 4, label %sw.bb12
    i64 3, label %sw.bb16
    i64 2, label %sw.bb20
    i64 1, label %sw.bb24
    i64 0, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.then
  %3 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 6
  %4 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %arrayidx3 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  store ptr %4, ptr %arrayidx3, align 16, !tbaa !5
  br label %sw.bb4

sw.bb4:                                           ; preds = %if.then, %sw.bb
  %5 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %5, i32 0, i32 1
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 5
  %6 = load ptr, ptr %arrayidx6, align 8, !tbaa !5
  %arrayidx7 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  store ptr %6, ptr %arrayidx7, align 8, !tbaa !5
  br label %sw.bb8

sw.bb8:                                           ; preds = %if.then, %sw.bb4
  %7 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item9 = getelementptr inbounds %struct.PyTupleObject, ptr %7, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x ptr], ptr %ob_item9, i64 0, i64 4
  %8 = load ptr, ptr %arrayidx10, align 8, !tbaa !5
  %arrayidx11 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  store ptr %8, ptr %arrayidx11, align 16, !tbaa !5
  br label %sw.bb12

sw.bb12:                                          ; preds = %if.then, %sw.bb8
  %9 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item13 = getelementptr inbounds %struct.PyTupleObject, ptr %9, i32 0, i32 1
  %arrayidx14 = getelementptr [1 x ptr], ptr %ob_item13, i64 0, i64 3
  %10 = load ptr, ptr %arrayidx14, align 8, !tbaa !5
  %arrayidx15 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  store ptr %10, ptr %arrayidx15, align 8, !tbaa !5
  br label %sw.bb16

sw.bb16:                                          ; preds = %if.then, %sw.bb12
  %11 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item17 = getelementptr inbounds %struct.PyTupleObject, ptr %11, i32 0, i32 1
  %arrayidx18 = getelementptr [1 x ptr], ptr %ob_item17, i64 0, i64 2
  %12 = load ptr, ptr %arrayidx18, align 8, !tbaa !5
  %arrayidx19 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  store ptr %12, ptr %arrayidx19, align 16, !tbaa !5
  br label %sw.bb20

sw.bb20:                                          ; preds = %if.then, %sw.bb16
  %13 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item21 = getelementptr inbounds %struct.PyTupleObject, ptr %13, i32 0, i32 1
  %arrayidx22 = getelementptr [1 x ptr], ptr %ob_item21, i64 0, i64 1
  %14 = load ptr, ptr %arrayidx22, align 8, !tbaa !5
  %arrayidx23 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  store ptr %14, ptr %arrayidx23, align 8, !tbaa !5
  br label %sw.bb24

sw.bb24:                                          ; preds = %if.then, %sw.bb20
  %15 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item25 = getelementptr inbounds %struct.PyTupleObject, ptr %15, i32 0, i32 1
  %arrayidx26 = getelementptr [1 x ptr], ptr %ob_item25, i64 0, i64 0
  %16 = load ptr, ptr %arrayidx26, align 8, !tbaa !5
  %arrayidx27 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  store ptr %16, ptr %arrayidx27, align 16, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb24, %if.then
  %17 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %call28 = call i64 @PyDict_Size(ptr noundef %17)
  store i64 %call28, ptr %kw_args, align 8, !tbaa !27
  %18 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %18, label %sw.epilog143 [
    i64 0, label %sw.bb29
    i64 1, label %sw.bb41
    i64 2, label %sw.bb58
    i64 3, label %sw.bb75
    i64 4, label %sw.bb92
    i64 5, label %sw.bb109
    i64 6, label %sw.bb126
  ]

sw.bb29:                                          ; preds = %sw.epilog
  %19 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %20 = load ptr, ptr @__pyx_n_s_X, align 8, !tbaa !5
  %21 = load ptr, ptr @__pyx_n_s_X, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %21, i32 0, i32 2
  %22 = load i64, ptr %hash, align 8, !tbaa !154
  %call30 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %19, ptr noundef %20, i64 noundef %22)
  %arrayidx31 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  store ptr %call30, ptr %arrayidx31, align 16, !tbaa !5
  %cmp = icmp ne ptr %call30, null
  %lnot33 = xor i1 %cmp, true
  %lnot35 = xor i1 %lnot33, true
  %lnot.ext36 = zext i1 %lnot35 to i32
  %conv37 = sext i32 %lnot.ext36 to i64
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 1)
  %tobool39 = icmp ne i64 %expval38, 0
  br i1 %tobool39, label %if.then40, label %if.else

if.then40:                                        ; preds = %sw.bb29
  %23 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec = add i64 %23, -1
  store i64 %dec, ptr %kw_args, align 8, !tbaa !27
  br label %if.end

if.else:                                          ; preds = %sw.bb29
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then40
  br label %sw.bb41

sw.bb41:                                          ; preds = %sw.epilog, %if.end
  %24 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %25 = load ptr, ptr @__pyx_n_s_sample_weight, align 8, !tbaa !5
  %26 = load ptr, ptr @__pyx_n_s_sample_weight, align 8, !tbaa !5
  %hash42 = getelementptr inbounds %struct.PyASCIIObject, ptr %26, i32 0, i32 2
  %27 = load i64, ptr %hash42, align 8, !tbaa !154
  %call43 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %24, ptr noundef %25, i64 noundef %27)
  %arrayidx44 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  store ptr %call43, ptr %arrayidx44, align 8, !tbaa !5
  %cmp45 = icmp ne ptr %call43, null
  %lnot47 = xor i1 %cmp45, true
  %lnot49 = xor i1 %lnot47, true
  %lnot.ext50 = zext i1 %lnot49 to i32
  %conv51 = sext i32 %lnot.ext50 to i64
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 1)
  %tobool53 = icmp ne i64 %expval52, 0
  br i1 %tobool53, label %if.then54, label %if.else56

if.then54:                                        ; preds = %sw.bb41
  %28 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec55 = add i64 %28, -1
  store i64 %dec55, ptr %kw_args, align 8, !tbaa !27
  br label %if.end57

if.else56:                                        ; preds = %sw.bb41
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 1)
  %29 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %29, ptr %__pyx_filename, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4778, ptr %__pyx_clineno, align 4, !tbaa !9
  %32 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end57:                                         ; preds = %if.then54
  br label %sw.bb58

sw.bb58:                                          ; preds = %sw.epilog, %if.end57
  %33 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %34 = load ptr, ptr @__pyx_n_s_centers_old, align 8, !tbaa !5
  %35 = load ptr, ptr @__pyx_n_s_centers_old, align 8, !tbaa !5
  %hash59 = getelementptr inbounds %struct.PyASCIIObject, ptr %35, i32 0, i32 2
  %36 = load i64, ptr %hash59, align 8, !tbaa !154
  %call60 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %33, ptr noundef %34, i64 noundef %36)
  %arrayidx61 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  store ptr %call60, ptr %arrayidx61, align 16, !tbaa !5
  %cmp62 = icmp ne ptr %call60, null
  %lnot64 = xor i1 %cmp62, true
  %lnot66 = xor i1 %lnot64, true
  %lnot.ext67 = zext i1 %lnot66 to i32
  %conv68 = sext i32 %lnot.ext67 to i64
  %expval69 = call i64 @llvm.expect.i64(i64 %conv68, i64 1)
  %tobool70 = icmp ne i64 %expval69, 0
  br i1 %tobool70, label %if.then71, label %if.else73

if.then71:                                        ; preds = %sw.bb58
  %37 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec72 = add i64 %37, -1
  store i64 %dec72, ptr %kw_args, align 8, !tbaa !27
  br label %if.end74

if.else73:                                        ; preds = %sw.bb58
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 2)
  %38 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %38, ptr %__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4784, ptr %__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end74:                                         ; preds = %if.then71
  br label %sw.bb75

sw.bb75:                                          ; preds = %sw.epilog, %if.end74
  %42 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %43 = load ptr, ptr @__pyx_n_s_centers_new, align 8, !tbaa !5
  %44 = load ptr, ptr @__pyx_n_s_centers_new, align 8, !tbaa !5
  %hash76 = getelementptr inbounds %struct.PyASCIIObject, ptr %44, i32 0, i32 2
  %45 = load i64, ptr %hash76, align 8, !tbaa !154
  %call77 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %42, ptr noundef %43, i64 noundef %45)
  %arrayidx78 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  store ptr %call77, ptr %arrayidx78, align 8, !tbaa !5
  %cmp79 = icmp ne ptr %call77, null
  %lnot81 = xor i1 %cmp79, true
  %lnot83 = xor i1 %lnot81, true
  %lnot.ext84 = zext i1 %lnot83 to i32
  %conv85 = sext i32 %lnot.ext84 to i64
  %expval86 = call i64 @llvm.expect.i64(i64 %conv85, i64 1)
  %tobool87 = icmp ne i64 %expval86, 0
  br i1 %tobool87, label %if.then88, label %if.else90

if.then88:                                        ; preds = %sw.bb75
  %46 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec89 = add i64 %46, -1
  store i64 %dec89, ptr %kw_args, align 8, !tbaa !27
  br label %if.end91

if.else90:                                        ; preds = %sw.bb75
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 3)
  %47 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %47, ptr %__pyx_filename, align 8, !tbaa !5
  %48 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4790, ptr %__pyx_clineno, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end91:                                         ; preds = %if.then88
  br label %sw.bb92

sw.bb92:                                          ; preds = %sw.epilog, %if.end91
  %51 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %52 = load ptr, ptr @__pyx_n_s_weight_sums, align 8, !tbaa !5
  %53 = load ptr, ptr @__pyx_n_s_weight_sums, align 8, !tbaa !5
  %hash93 = getelementptr inbounds %struct.PyASCIIObject, ptr %53, i32 0, i32 2
  %54 = load i64, ptr %hash93, align 8, !tbaa !154
  %call94 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %51, ptr noundef %52, i64 noundef %54)
  %arrayidx95 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  store ptr %call94, ptr %arrayidx95, align 16, !tbaa !5
  %cmp96 = icmp ne ptr %call94, null
  %lnot98 = xor i1 %cmp96, true
  %lnot100 = xor i1 %lnot98, true
  %lnot.ext101 = zext i1 %lnot100 to i32
  %conv102 = sext i32 %lnot.ext101 to i64
  %expval103 = call i64 @llvm.expect.i64(i64 %conv102, i64 1)
  %tobool104 = icmp ne i64 %expval103, 0
  br i1 %tobool104, label %if.then105, label %if.else107

if.then105:                                       ; preds = %sw.bb92
  %55 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec106 = add i64 %55, -1
  store i64 %dec106, ptr %kw_args, align 8, !tbaa !27
  br label %if.end108

if.else107:                                       ; preds = %sw.bb92
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 4)
  %56 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %56, ptr %__pyx_filename, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %58 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4796, ptr %__pyx_clineno, align 4, !tbaa !9
  %59 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end108:                                        ; preds = %if.then105
  br label %sw.bb109

sw.bb109:                                         ; preds = %sw.epilog, %if.end108
  %60 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %61 = load ptr, ptr @__pyx_n_s_labels, align 8, !tbaa !5
  %62 = load ptr, ptr @__pyx_n_s_labels, align 8, !tbaa !5
  %hash110 = getelementptr inbounds %struct.PyASCIIObject, ptr %62, i32 0, i32 2
  %63 = load i64, ptr %hash110, align 8, !tbaa !154
  %call111 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %60, ptr noundef %61, i64 noundef %63)
  %arrayidx112 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  store ptr %call111, ptr %arrayidx112, align 8, !tbaa !5
  %cmp113 = icmp ne ptr %call111, null
  %lnot115 = xor i1 %cmp113, true
  %lnot117 = xor i1 %lnot115, true
  %lnot.ext118 = zext i1 %lnot117 to i32
  %conv119 = sext i32 %lnot.ext118 to i64
  %expval120 = call i64 @llvm.expect.i64(i64 %conv119, i64 1)
  %tobool121 = icmp ne i64 %expval120, 0
  br i1 %tobool121, label %if.then122, label %if.else124

if.then122:                                       ; preds = %sw.bb109
  %64 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec123 = add i64 %64, -1
  store i64 %dec123, ptr %kw_args, align 8, !tbaa !27
  br label %if.end125

if.else124:                                       ; preds = %sw.bb109
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 5)
  %65 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %65, ptr %__pyx_filename, align 8, !tbaa !5
  %66 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %67 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4802, ptr %__pyx_clineno, align 4, !tbaa !9
  %68 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end125:                                        ; preds = %if.then122
  br label %sw.bb126

sw.bb126:                                         ; preds = %sw.epilog, %if.end125
  %69 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %70 = load ptr, ptr @__pyx_n_s_n_threads, align 8, !tbaa !5
  %71 = load ptr, ptr @__pyx_n_s_n_threads, align 8, !tbaa !5
  %hash127 = getelementptr inbounds %struct.PyASCIIObject, ptr %71, i32 0, i32 2
  %72 = load i64, ptr %hash127, align 8, !tbaa !154
  %call128 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %69, ptr noundef %70, i64 noundef %72)
  %arrayidx129 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  store ptr %call128, ptr %arrayidx129, align 16, !tbaa !5
  %cmp130 = icmp ne ptr %call128, null
  %lnot132 = xor i1 %cmp130, true
  %lnot134 = xor i1 %lnot132, true
  %lnot.ext135 = zext i1 %lnot134 to i32
  %conv136 = sext i32 %lnot.ext135 to i64
  %expval137 = call i64 @llvm.expect.i64(i64 %conv136, i64 1)
  %tobool138 = icmp ne i64 %expval137, 0
  br i1 %tobool138, label %if.then139, label %if.else141

if.then139:                                       ; preds = %sw.bb126
  %73 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec140 = add i64 %73, -1
  store i64 %dec140, ptr %kw_args, align 8, !tbaa !27
  br label %if.end142

if.else141:                                       ; preds = %sw.bb126
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 6)
  %74 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %74, ptr %__pyx_filename, align 8, !tbaa !5
  %75 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %76 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4808, ptr %__pyx_clineno, align 4, !tbaa !9
  %77 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end142:                                        ; preds = %if.then139
  br label %sw.epilog143

sw.epilog143:                                     ; preds = %if.end142, %sw.epilog
  %78 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp144 = icmp sgt i64 %78, 0
  %lnot146 = xor i1 %cmp144, true
  %lnot148 = xor i1 %lnot146, true
  %lnot.ext149 = zext i1 %lnot148 to i32
  %conv150 = sext i32 %lnot.ext149 to i64
  %expval151 = call i64 @llvm.expect.i64(i64 %conv150, i64 0)
  %tobool152 = icmp ne i64 %expval151, 0
  br i1 %tobool152, label %if.then153, label %if.end166

if.then153:                                       ; preds = %sw.epilog143
  %79 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %arraydecay = getelementptr inbounds [7 x ptr], ptr %values, i64 0, i64 0
  %80 = load i64, ptr %pos_args, align 8, !tbaa !27
  %call154 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %79, ptr noundef @__pyx_fuse_0__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_11_minibatch_update_sparse.__pyx_pyargnames, ptr noundef null, ptr noundef %arraydecay, i64 noundef %80, ptr noundef @.str.293)
  %cmp155 = icmp slt i32 %call154, 0
  %lnot157 = xor i1 %cmp155, true
  %lnot159 = xor i1 %lnot157, true
  %lnot.ext160 = zext i1 %lnot159 to i32
  %conv161 = sext i32 %lnot.ext160 to i64
  %expval162 = call i64 @llvm.expect.i64(i64 %conv161, i64 0)
  %tobool163 = icmp ne i64 %expval162, 0
  br i1 %tobool163, label %if.then164, label %if.end165

if.then164:                                       ; preds = %if.then153
  %81 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %81, ptr %__pyx_filename, align 8, !tbaa !5
  %82 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %83 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4812, ptr %__pyx_clineno, align 4, !tbaa !9
  %84 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end165:                                        ; preds = %if.then153
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %sw.epilog143
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then164, %if.else141, %if.else124, %if.else107, %if.else90, %if.else73, %if.else56, %if.else, %sw.default, %if.end166
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup286 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end196

if.else168:                                       ; preds = %entry
  %85 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call169 = call i64 @PyTuple_GET_SIZE(ptr noundef %85)
  %cmp170 = icmp ne i64 %call169, 7
  br i1 %cmp170, label %if.then172, label %if.else173

if.then172:                                       ; preds = %if.else168
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.else173:                                       ; preds = %if.else168
  %86 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item174 = getelementptr inbounds %struct.PyTupleObject, ptr %86, i32 0, i32 1
  %arrayidx175 = getelementptr [1 x ptr], ptr %ob_item174, i64 0, i64 0
  %87 = load ptr, ptr %arrayidx175, align 8, !tbaa !5
  %arrayidx176 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  store ptr %87, ptr %arrayidx176, align 16, !tbaa !5
  %88 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item177 = getelementptr inbounds %struct.PyTupleObject, ptr %88, i32 0, i32 1
  %arrayidx178 = getelementptr [1 x ptr], ptr %ob_item177, i64 0, i64 1
  %89 = load ptr, ptr %arrayidx178, align 8, !tbaa !5
  %arrayidx179 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  store ptr %89, ptr %arrayidx179, align 8, !tbaa !5
  %90 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item180 = getelementptr inbounds %struct.PyTupleObject, ptr %90, i32 0, i32 1
  %arrayidx181 = getelementptr [1 x ptr], ptr %ob_item180, i64 0, i64 2
  %91 = load ptr, ptr %arrayidx181, align 8, !tbaa !5
  %arrayidx182 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  store ptr %91, ptr %arrayidx182, align 16, !tbaa !5
  %92 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item183 = getelementptr inbounds %struct.PyTupleObject, ptr %92, i32 0, i32 1
  %arrayidx184 = getelementptr [1 x ptr], ptr %ob_item183, i64 0, i64 3
  %93 = load ptr, ptr %arrayidx184, align 8, !tbaa !5
  %arrayidx185 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  store ptr %93, ptr %arrayidx185, align 8, !tbaa !5
  %94 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item186 = getelementptr inbounds %struct.PyTupleObject, ptr %94, i32 0, i32 1
  %arrayidx187 = getelementptr [1 x ptr], ptr %ob_item186, i64 0, i64 4
  %95 = load ptr, ptr %arrayidx187, align 8, !tbaa !5
  %arrayidx188 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  store ptr %95, ptr %arrayidx188, align 16, !tbaa !5
  %96 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item189 = getelementptr inbounds %struct.PyTupleObject, ptr %96, i32 0, i32 1
  %arrayidx190 = getelementptr [1 x ptr], ptr %ob_item189, i64 0, i64 5
  %97 = load ptr, ptr %arrayidx190, align 8, !tbaa !5
  %arrayidx191 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  store ptr %97, ptr %arrayidx191, align 8, !tbaa !5
  %98 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item192 = getelementptr inbounds %struct.PyTupleObject, ptr %98, i32 0, i32 1
  %arrayidx193 = getelementptr [1 x ptr], ptr %ob_item192, i64 0, i64 6
  %99 = load ptr, ptr %arrayidx193, align 8, !tbaa !5
  %arrayidx194 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  store ptr %99, ptr %arrayidx194, align 16, !tbaa !5
  br label %if.end195

if.end195:                                        ; preds = %if.else173
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %cleanup.cont
  %arrayidx197 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  %100 = load ptr, ptr %arrayidx197, align 16, !tbaa !5
  store ptr %100, ptr %__pyx_v_X, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp) #13
  %arrayidx198 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  %101 = load ptr, ptr %arrayidx198, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_float__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp, ptr noundef %101, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_sample_weight, ptr align 8 %tmp, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp) #13
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 0
  %102 = load ptr, ptr %memview, align 8, !tbaa !185
  %tobool199 = icmp ne ptr %102, null
  %lnot200 = xor i1 %tobool199, true
  %lnot202 = xor i1 %lnot200, true
  %lnot204 = xor i1 %lnot202, true
  %lnot.ext205 = zext i1 %lnot204 to i32
  %conv206 = sext i32 %lnot.ext205 to i64
  %expval207 = call i64 @llvm.expect.i64(i64 %conv206, i64 0)
  %tobool208 = icmp ne i64 %expval207, 0
  br i1 %tobool208, label %if.then209, label %if.end210

if.then209:                                       ; preds = %if.end196
  %103 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %103, ptr %__pyx_filename, align 8, !tbaa !5
  %104 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 113, ptr %__pyx_lineno, align 4, !tbaa !9
  %105 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4826, ptr %__pyx_clineno, align 4, !tbaa !9
  %106 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.end210:                                        ; preds = %if.end196
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp211) #13
  %arrayidx212 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  %107 = load ptr, ptr %arrayidx212, align 16, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_float__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp211, ptr noundef %107, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_centers_old, ptr align 8 %tmp211, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp211) #13
  %memview213 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 0
  %108 = load ptr, ptr %memview213, align 8, !tbaa !185
  %tobool214 = icmp ne ptr %108, null
  %lnot215 = xor i1 %tobool214, true
  %lnot217 = xor i1 %lnot215, true
  %lnot219 = xor i1 %lnot217, true
  %lnot.ext220 = zext i1 %lnot219 to i32
  %conv221 = sext i32 %lnot.ext220 to i64
  %expval222 = call i64 @llvm.expect.i64(i64 %conv221, i64 0)
  %tobool223 = icmp ne i64 %expval222, 0
  br i1 %tobool223, label %if.then224, label %if.end225

if.then224:                                       ; preds = %if.end210
  %109 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %109, ptr %__pyx_filename, align 8, !tbaa !5
  %110 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 114, ptr %__pyx_lineno, align 4, !tbaa !9
  %111 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4827, ptr %__pyx_clineno, align 4, !tbaa !9
  %112 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.end225:                                        ; preds = %if.end210
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp226) #13
  %arrayidx227 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  %113 = load ptr, ptr %arrayidx227, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_float(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp226, ptr noundef %113, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_centers_new, ptr align 8 %tmp226, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp226) #13
  %memview228 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 0
  %114 = load ptr, ptr %memview228, align 8, !tbaa !185
  %tobool229 = icmp ne ptr %114, null
  %lnot230 = xor i1 %tobool229, true
  %lnot232 = xor i1 %lnot230, true
  %lnot234 = xor i1 %lnot232, true
  %lnot.ext235 = zext i1 %lnot234 to i32
  %conv236 = sext i32 %lnot.ext235 to i64
  %expval237 = call i64 @llvm.expect.i64(i64 %conv236, i64 0)
  %tobool238 = icmp ne i64 %expval237, 0
  br i1 %tobool238, label %if.then239, label %if.end240

if.then239:                                       ; preds = %if.end225
  %115 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %115, ptr %__pyx_filename, align 8, !tbaa !5
  %116 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 115, ptr %__pyx_lineno, align 4, !tbaa !9
  %117 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4828, ptr %__pyx_clineno, align 4, !tbaa !9
  %118 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.end240:                                        ; preds = %if.end225
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp241) #13
  %arrayidx242 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  %119 = load ptr, ptr %arrayidx242, align 16, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_float(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp241, ptr noundef %119, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_weight_sums, ptr align 8 %tmp241, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp241) #13
  %memview243 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 0
  %120 = load ptr, ptr %memview243, align 8, !tbaa !185
  %tobool244 = icmp ne ptr %120, null
  %lnot245 = xor i1 %tobool244, true
  %lnot247 = xor i1 %lnot245, true
  %lnot249 = xor i1 %lnot247, true
  %lnot.ext250 = zext i1 %lnot249 to i32
  %conv251 = sext i32 %lnot.ext250 to i64
  %expval252 = call i64 @llvm.expect.i64(i64 %conv251, i64 0)
  %tobool253 = icmp ne i64 %expval252, 0
  br i1 %tobool253, label %if.then254, label %if.end255

if.then254:                                       ; preds = %if.end240
  %121 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %121, ptr %__pyx_filename, align 8, !tbaa !5
  %122 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 116, ptr %__pyx_lineno, align 4, !tbaa !9
  %123 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4829, ptr %__pyx_clineno, align 4, !tbaa !9
  %124 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.end255:                                        ; preds = %if.end240
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp256) #13
  %arrayidx257 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  %125 = load ptr, ptr %arrayidx257, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_int__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp256, ptr noundef %125, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_labels, ptr align 8 %tmp256, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp256) #13
  %memview258 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_labels, i32 0, i32 0
  %126 = load ptr, ptr %memview258, align 8, !tbaa !185
  %tobool259 = icmp ne ptr %126, null
  %lnot260 = xor i1 %tobool259, true
  %lnot262 = xor i1 %lnot260, true
  %lnot264 = xor i1 %lnot262, true
  %lnot.ext265 = zext i1 %lnot264 to i32
  %conv266 = sext i32 %lnot.ext265 to i64
  %expval267 = call i64 @llvm.expect.i64(i64 %conv266, i64 0)
  %tobool268 = icmp ne i64 %expval267, 0
  br i1 %tobool268, label %if.then269, label %if.end270

if.then269:                                       ; preds = %if.end255
  %127 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %127, ptr %__pyx_filename, align 8, !tbaa !5
  %128 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 117, ptr %__pyx_lineno, align 4, !tbaa !9
  %129 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4830, ptr %__pyx_clineno, align 4, !tbaa !9
  %130 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.end270:                                        ; preds = %if.end255
  %arrayidx271 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  %131 = load ptr, ptr %arrayidx271, align 16, !tbaa !5
  %call272 = call i32 @__Pyx_PyInt_As_int(ptr noundef %131)
  store i32 %call272, ptr %__pyx_v_n_threads, align 4, !tbaa !9
  %132 = load i32, ptr %__pyx_v_n_threads, align 4, !tbaa !9
  %cmp273 = icmp eq i32 %132, -1
  br i1 %cmp273, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end270
  %call275 = call ptr @PyErr_Occurred()
  %tobool276 = icmp ne ptr %call275, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end270
  %133 = phi i1 [ false, %if.end270 ], [ %tobool276, %land.rhs ]
  %lnot277 = xor i1 %133, true
  %lnot279 = xor i1 %lnot277, true
  %lnot.ext280 = zext i1 %lnot279 to i32
  %conv281 = sext i32 %lnot.ext280 to i64
  %expval282 = call i64 @llvm.expect.i64(i64 %conv281, i64 0)
  %tobool283 = icmp ne i64 %expval282, 0
  br i1 %tobool283, label %if.then284, label %if.end285

if.then284:                                       ; preds = %land.end
  %134 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %134, ptr %__pyx_filename, align 8, !tbaa !5
  %135 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 118, ptr %__pyx_lineno, align 4, !tbaa !9
  %136 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4831, ptr %__pyx_clineno, align 4, !tbaa !9
  %137 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.end285:                                        ; preds = %land.end
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

cleanup286:                                       ; preds = %if.then284, %if.then269, %if.then254, %if.then239, %if.then224, %if.then209, %if.then172, %if.end285, %cleanup
  call void @llvm.lifetime.end.p0(i64 56, ptr %values) #13
  %cleanup.dest287 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest287, label %cleanup291 [
    i32 0, label %cleanup.cont288
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont288:                                  ; preds = %cleanup286
  br label %__pyx_L4_argument_unpacking_done

__pyx_L5_argtuple_error:                          ; preds = %cleanup286
  %138 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call289 = call i64 @PyTuple_GET_SIZE(ptr noundef %138)
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef %call289)
  %139 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %139, ptr %__pyx_filename, align 8, !tbaa !5
  %140 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %141 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4835, ptr %__pyx_clineno, align 4, !tbaa !9
  %142 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

__pyx_L3_error:                                   ; preds = %cleanup286, %__pyx_L5_argtuple_error
  %143 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %144 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %145 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.294, i32 noundef %143, i32 noundef %144, ptr noundef %145)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup291

__pyx_L4_argument_unpacking_done:                 ; preds = %cleanup.cont288
  %146 = load ptr, ptr %__pyx_self.addr, align 8, !tbaa !5
  %147 = load ptr, ptr %__pyx_v_X, align 8, !tbaa !5
  %148 = load i32, ptr %__pyx_v_n_threads, align 4, !tbaa !9
  %call290 = call ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_10_minibatch_update_sparse(ptr noundef %146, ptr noundef %147, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_sample_weight, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_old, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_new, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_weight_sums, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_labels, i32 noundef %148)
  store ptr %call290, ptr %__pyx_r, align 8, !tbaa !5
  %149 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  store ptr %149, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup291

cleanup291:                                       ; preds = %__pyx_L4_argument_unpacking_done, %__pyx_L3_error, %cleanup286
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_threads) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_labels) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_weight_sums) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_centers_new) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_centers_old) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_sample_weight) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_X) #13
  %150 = load ptr, ptr %retval, align 8
  ret ptr %150
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_10_minibatch_update_sparse(ptr noundef %__pyx_self, ptr noundef %__pyx_v_X, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_sample_weight, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_old, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_new, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_weight_sums, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_labels, i32 noundef %__pyx_v_n_threads) #0 {
entry:
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_v_X.addr = alloca ptr, align 8
  %__pyx_v_n_threads.addr = alloca i32, align 4
  %__pyx_v_X_data = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_X_indices = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_X_indptr = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_n_samples = alloca i32, align 4
  %__pyx_v_n_clusters = alloca i32, align 4
  %__pyx_v_cluster_idx = alloca i32, align 4
  %__pyx_v_indices = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_t_3 = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_t_7 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca %struct.__Pyx_memviewslice, align 8
  %tmp30 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp59 = alloca %struct.__Pyx_memviewslice, align 8
  %_save = alloca ptr, align 8
  %0 = call i32 @__kmpc_global_thread_num(ptr @3)
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_X, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  store i32 %__pyx_v_n_threads, ptr %__pyx_v_n_threads.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_X_data) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_X_data, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_X_indices) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_X_indices, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_X_indptr) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_X_indptr, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_samples) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_clusters) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_cluster_idx) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_t_2) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_t_2, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_t_3) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_t_3, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %1 = load ptr, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  %2 = load ptr, ptr @__pyx_n_s_data, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %1, ptr noundef %2)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 147, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4877, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp) #13
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_float(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp, ptr noundef %8, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_2, ptr align 8 %tmp, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp) #13
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_2, i32 0, i32 0
  %9 = load ptr, ptr %memview, align 8, !tbaa !185
  %tobool4 = icmp ne ptr %9, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end
  %10 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %10, ptr %__pyx_filename, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 147, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4879, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end15:                                         ; preds = %if.end
  %14 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %14)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_X_data, ptr align 8 %__pyx_t_2, i64 208, i1 false), !tbaa.struct !187
  %memview16 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_2, i32 0, i32 0
  store ptr null, ptr %memview16, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_2, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  %15 = load ptr, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  %16 = load ptr, ptr @__pyx_n_s_indices, align 8, !tbaa !5
  %call17 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %15, ptr noundef %16)
  store ptr %call17, ptr %__pyx_t_1, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %17, null
  %lnot19 = xor i1 %tobool18, true
  %lnot21 = xor i1 %lnot19, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end15
  %18 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %18, ptr %__pyx_filename, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 148, ptr %__pyx_lineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4892, ptr %__pyx_clineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end29:                                         ; preds = %if.end15
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp30) #13
  %22 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_int(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp30, ptr noundef %22, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_3, ptr align 8 %tmp30, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp30) #13
  %memview31 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_3, i32 0, i32 0
  %23 = load ptr, ptr %memview31, align 8, !tbaa !185
  %tobool32 = icmp ne ptr %23, null
  %lnot33 = xor i1 %tobool32, true
  %lnot35 = xor i1 %lnot33, true
  %lnot37 = xor i1 %lnot35, true
  %lnot.ext38 = zext i1 %lnot37 to i32
  %conv39 = sext i32 %lnot.ext38 to i64
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0)
  %tobool41 = icmp ne i64 %expval40, 0
  br i1 %tobool41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end29
  %24 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %24, ptr %__pyx_filename, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 148, ptr %__pyx_lineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4894, ptr %__pyx_clineno, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end43:                                         ; preds = %if.end29
  %28 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %28)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_X_indices, ptr align 8 %__pyx_t_3, i64 208, i1 false), !tbaa.struct !187
  %memview44 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_3, i32 0, i32 0
  store ptr null, ptr %memview44, align 8, !tbaa !185
  %data45 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_3, i32 0, i32 1
  store ptr null, ptr %data45, align 8, !tbaa !188
  %29 = load ptr, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  %30 = load ptr, ptr @__pyx_n_s_indptr, align 8, !tbaa !5
  %call46 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %29, ptr noundef %30)
  store ptr %call46, ptr %__pyx_t_1, align 8, !tbaa !5
  %31 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool47 = icmp ne ptr %31, null
  %lnot48 = xor i1 %tobool47, true
  %lnot50 = xor i1 %lnot48, true
  %lnot52 = xor i1 %lnot50, true
  %lnot.ext53 = zext i1 %lnot52 to i32
  %conv54 = sext i32 %lnot.ext53 to i64
  %expval55 = call i64 @llvm.expect.i64(i64 %conv54, i64 0)
  %tobool56 = icmp ne i64 %expval55, 0
  br i1 %tobool56, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.end43
  %32 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %32, ptr %__pyx_filename, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 149, ptr %__pyx_lineno, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4907, ptr %__pyx_clineno, align 4, !tbaa !9
  %35 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end58:                                         ; preds = %if.end43
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp59) #13
  %36 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_int(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp59, ptr noundef %36, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_3, ptr align 8 %tmp59, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp59) #13
  %memview60 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_3, i32 0, i32 0
  %37 = load ptr, ptr %memview60, align 8, !tbaa !185
  %tobool61 = icmp ne ptr %37, null
  %lnot62 = xor i1 %tobool61, true
  %lnot64 = xor i1 %lnot62, true
  %lnot66 = xor i1 %lnot64, true
  %lnot.ext67 = zext i1 %lnot66 to i32
  %conv68 = sext i32 %lnot.ext67 to i64
  %expval69 = call i64 @llvm.expect.i64(i64 %conv68, i64 0)
  %tobool70 = icmp ne i64 %expval69, 0
  br i1 %tobool70, label %if.then71, label %if.end72

if.then71:                                        ; preds = %if.end58
  %38 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %38, ptr %__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 149, ptr %__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4909, ptr %__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end72:                                         ; preds = %if.end58
  %42 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %42)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_X_indptr, ptr align 8 %__pyx_t_3, i64 208, i1 false), !tbaa.struct !187
  %memview73 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_3, i32 0, i32 0
  store ptr null, ptr %memview73, align 8, !tbaa !185
  %data74 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_3, i32 0, i32 1
  store ptr null, ptr %data74, align 8, !tbaa !188
  %43 = load ptr, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  %44 = load ptr, ptr @__pyx_n_s_shape, align 8, !tbaa !5
  %call75 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %43, ptr noundef %44)
  store ptr %call75, ptr %__pyx_t_1, align 8, !tbaa !5
  %45 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool76 = icmp ne ptr %45, null
  %lnot77 = xor i1 %tobool76, true
  %lnot79 = xor i1 %lnot77, true
  %lnot81 = xor i1 %lnot79, true
  %lnot.ext82 = zext i1 %lnot81 to i32
  %conv83 = sext i32 %lnot.ext82 to i64
  %expval84 = call i64 @llvm.expect.i64(i64 %conv83, i64 0)
  %tobool85 = icmp ne i64 %expval84, 0
  br i1 %tobool85, label %if.then86, label %if.end87

if.then86:                                        ; preds = %if.end72
  %46 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %46, ptr %__pyx_filename, align 8, !tbaa !5
  %47 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 150, ptr %__pyx_lineno, align 4, !tbaa !9
  %48 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4922, ptr %__pyx_clineno, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end87:                                         ; preds = %if.end72
  %50 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call88 = call ptr @__Pyx_GetItemInt_Fast(ptr noundef %50, i64 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  store ptr %call88, ptr %__pyx_t_4, align 8, !tbaa !5
  %51 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool89 = icmp ne ptr %51, null
  %lnot90 = xor i1 %tobool89, true
  %lnot92 = xor i1 %lnot90, true
  %lnot94 = xor i1 %lnot92, true
  %lnot.ext95 = zext i1 %lnot94 to i32
  %conv96 = sext i32 %lnot.ext95 to i64
  %expval97 = call i64 @llvm.expect.i64(i64 %conv96, i64 0)
  %tobool98 = icmp ne i64 %expval97, 0
  br i1 %tobool98, label %if.then99, label %if.end100

if.then99:                                        ; preds = %if.end87
  %52 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %52, ptr %__pyx_filename, align 8, !tbaa !5
  %53 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 150, ptr %__pyx_lineno, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4924, ptr %__pyx_clineno, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end100:                                        ; preds = %if.end87
  %56 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %56)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call101 = call i32 @__Pyx_PyInt_As_int(ptr noundef %57)
  store i32 %call101, ptr %__pyx_t_5, align 4, !tbaa !9
  %58 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %cmp = icmp eq i32 %58, -1
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end100
  %call103 = call ptr @PyErr_Occurred()
  %tobool104 = icmp ne ptr %call103, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end100
  %59 = phi i1 [ false, %if.end100 ], [ %tobool104, %land.rhs ]
  %lnot105 = xor i1 %59, true
  %lnot107 = xor i1 %lnot105, true
  %lnot.ext108 = zext i1 %lnot107 to i32
  %conv109 = sext i32 %lnot.ext108 to i64
  %expval110 = call i64 @llvm.expect.i64(i64 %conv109, i64 0)
  %tobool111 = icmp ne i64 %expval110, 0
  br i1 %tobool111, label %if.then112, label %if.end113

if.then112:                                       ; preds = %land.end
  %60 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %60, ptr %__pyx_filename, align 8, !tbaa !5
  %61 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 150, ptr %__pyx_lineno, align 4, !tbaa !9
  %62 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4927, ptr %__pyx_clineno, align 4, !tbaa !9
  %63 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end113:                                        ; preds = %land.end
  %64 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %64)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %65 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  store i32 %65, ptr %__pyx_v_n_samples, align 4, !tbaa !9
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 2
  %arrayidx = getelementptr [8 x i64], ptr %shape, i64 0, i64 0
  %66 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %conv114 = trunc i64 %66 to i32
  store i32 %conv114, ptr %__pyx_v_n_clusters, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %_save) #13
  %call115 = call ptr @PyEval_SaveThread()
  store ptr %call115, ptr %_save, align 8, !tbaa !5
  %67 = load i32, ptr %__pyx_v_n_threads.addr, align 4, !tbaa !9
  call void @__kmpc_push_num_threads(ptr @3, i32 %0, i32 %67)
  call void (ptr, i32, ptr, ...) @__kmpc_fork_call(ptr @3, i32 11, ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_10_minibatch_update_sparse.omp_outlined, ptr %__pyx_v_n_samples, ptr %__pyx_v_n_clusters, ptr %__pyx_v_cluster_idx, ptr %__pyx_v_X_data, ptr %__pyx_v_X_indices, ptr %__pyx_v_X_indptr, ptr %__pyx_v_sample_weight, ptr %__pyx_v_centers_old, ptr %__pyx_v_centers_new, ptr %__pyx_v_weight_sums, ptr %__pyx_v_labels)
  %68 = load ptr, ptr %_save, align 8, !tbaa !5
  call void @PyEval_RestoreThread(ptr noundef %68)
  br label %__pyx_L5

__pyx_L5:                                         ; preds = %if.end113
  call void @llvm.lifetime.end.p0(i64 8, ptr %_save) #13
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then112, %if.then99, %if.then86, %if.then71, %if.then57, %if.then42, %if.then28, %if.then14, %if.then
  %69 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %69)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_t_2, i32 noundef 1, i32 noundef 5060)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_t_3, i32 noundef 1, i32 noundef 5061)
  %70 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %70)
  %71 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %72 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %73 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.294, i32 noundef %71, i32 noundef %72, ptr noundef %73)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %__pyx_L5
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_X_data, i32 noundef 1, i32 noundef 5066)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_X_indices, i32 noundef 1, i32 noundef 5067)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_X_indptr, i32 noundef 1, i32 noundef 5068)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_sample_weight, i32 noundef 1, i32 noundef 5069)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_centers_old, i32 noundef 1, i32 noundef 5070)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_centers_new, i32 noundef 1, i32 noundef 5071)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_weight_sums, i32 noundef 1, i32 noundef 5072)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_labels, i32 noundef 1, i32 noundef 5073)
  %74 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_cluster_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_clusters) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_samples) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_X_indptr) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_X_indices) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_X_data) #13
  ret ptr %74
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_PyObject_to_MemoryviewSlice_dc_int(ptr noalias sret(%struct.__Pyx_memviewslice) align 8 %agg.result, ptr noundef %obj, i32 noundef %writable_flag) #3 {
entry:
  %obj.addr = alloca ptr, align 8
  %writable_flag.addr = alloca i32, align 4
  %stack = alloca [1 x %struct.__Pyx_BufFmt_StackElem], align 16
  %axes_specs = alloca [1 x i32], align 4
  %retcode = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !5
  store i32 %writable_flag, ptr %writable_flag.addr, align 4, !tbaa !9
  call void @llvm.memset.p0.i64(ptr align 8 %agg.result, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr %stack) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %axes_specs) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %axes_specs, ptr align 4 @__const.__Pyx_PyObject_to_MemoryviewSlice_dc_int.axes_specs, i64 4, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %retcode) #13
  %0 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, @_Py_NoneStruct
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr @_Py_NoneStruct, ptr %memview, align 8, !tbaa !185
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [1 x i32], ptr %axes_specs, i64 0, i64 0
  %1 = load i32, ptr %writable_flag.addr, align 4, !tbaa !9
  %or = or i32 60, %1
  %arraydecay1 = getelementptr inbounds [1 x %struct.__Pyx_BufFmt_StackElem], ptr %stack, i64 0, i64 0
  %2 = load ptr, ptr %obj.addr, align 8, !tbaa !5
  %call = call i32 @__Pyx_ValidateAndInit_memviewslice(ptr noundef %arraydecay, i32 noundef 1, i32 noundef %or, i32 noundef 1, ptr noundef @__Pyx_TypeInfo_int, ptr noundef %arraydecay1, ptr noundef %agg.result, ptr noundef %2)
  store i32 %call, ptr %retcode, align 4, !tbaa !9
  %3 = load i32, ptr %retcode, align 4, !tbaa !9
  %cmp2 = icmp eq i32 %3, -1
  %lnot = xor i1 %cmp2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %__pyx_fail

if.end5:                                          ; preds = %if.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

__pyx_fail:                                       ; preds = %if.then4
  %memview6 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 0
  store ptr null, ptr %memview6, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %agg.result, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_fail, %if.end5, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %retcode) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %axes_specs) #13
  call void @llvm.lifetime.end.p0(i64 16, ptr %stack) #13
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_10_minibatch_update_sparse.omp_outlined(ptr noalias noundef %.global_tid., ptr noalias noundef %.bound_tid., ptr noundef nonnull align 4 dereferenceable(4) %__pyx_v_n_samples, ptr noundef nonnull align 4 dereferenceable(4) %__pyx_v_n_clusters, ptr noundef nonnull align 4 dereferenceable(4) %__pyx_v_cluster_idx, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_X_data, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_X_indices, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_X_indptr, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_sample_weight, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_centers_old, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_centers_new, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_weight_sums, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_labels) #11 {
entry:
  %.global_tid..addr = alloca ptr, align 8
  %.bound_tid..addr = alloca ptr, align 8
  %__pyx_v_n_samples.addr = alloca ptr, align 8
  %__pyx_v_n_clusters.addr = alloca ptr, align 8
  %__pyx_v_cluster_idx.addr = alloca ptr, align 8
  %__pyx_v_X_data.addr = alloca ptr, align 8
  %__pyx_v_X_indices.addr = alloca ptr, align 8
  %__pyx_v_X_indptr.addr = alloca ptr, align 8
  %__pyx_v_sample_weight.addr = alloca ptr, align 8
  %__pyx_v_centers_old.addr = alloca ptr, align 8
  %__pyx_v_centers_new.addr = alloca ptr, align 8
  %__pyx_v_weight_sums.addr = alloca ptr, align 8
  %__pyx_v_labels.addr = alloca ptr, align 8
  %__pyx_v_indices = alloca ptr, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_t_7 = alloca i32, align 4
  %.omp.iv = alloca i32, align 4
  %tmp = alloca i32, align 4
  %.capture_expr. = alloca i32, align 4
  %.capture_expr.3 = alloca i32, align 4
  %__pyx_t_67 = alloca i32, align 4
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %__pyx_v_cluster_idx10 = alloca i32, align 4
  %__pyx_t_611 = alloca i32, align 4
  store ptr %.global_tid., ptr %.global_tid..addr, align 8, !tbaa !5
  store ptr %.bound_tid., ptr %.bound_tid..addr, align 8, !tbaa !5
  store ptr %__pyx_v_n_samples, ptr %__pyx_v_n_samples.addr, align 8, !tbaa !5
  store ptr %__pyx_v_n_clusters, ptr %__pyx_v_n_clusters.addr, align 8, !tbaa !5
  store ptr %__pyx_v_cluster_idx, ptr %__pyx_v_cluster_idx.addr, align 8, !tbaa !5
  store ptr %__pyx_v_X_data, ptr %__pyx_v_X_data.addr, align 8, !tbaa !5
  store ptr %__pyx_v_X_indices, ptr %__pyx_v_X_indices.addr, align 8, !tbaa !5
  store ptr %__pyx_v_X_indptr, ptr %__pyx_v_X_indptr.addr, align 8, !tbaa !5
  store ptr %__pyx_v_sample_weight, ptr %__pyx_v_sample_weight.addr, align 8, !tbaa !5
  store ptr %__pyx_v_centers_old, ptr %__pyx_v_centers_old.addr, align 8, !tbaa !5
  store ptr %__pyx_v_centers_new, ptr %__pyx_v_centers_new.addr, align 8, !tbaa !5
  store ptr %__pyx_v_weight_sums, ptr %__pyx_v_weight_sums.addr, align 8, !tbaa !5
  store ptr %__pyx_v_labels, ptr %__pyx_v_labels.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_n_samples.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v_n_clusters.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_v_cluster_idx.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_v_X_data.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_v_X_indices.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_v_X_indptr.addr, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_v_sample_weight.addr, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_v_centers_old.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_v_centers_new.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_v_weight_sums.addr, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_v_labels.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_7) #13
  store ptr inttoptr (i64 1 to ptr), ptr %__pyx_v_indices, align 8, !tbaa !5
  %11 = load i32, ptr %0, align 4, !tbaa !9
  %conv = sext i32 %11 to i64
  %mul = mul i64 %conv, 4
  %call = call noalias ptr @malloc(i64 noundef %mul) #17
  store ptr %call, ptr %__pyx_v_indices, align 8, !tbaa !5
  %12 = load i32, ptr %1, align 4, !tbaa !9
  store i32 %12, ptr %__pyx_t_5, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %sub = sub i32 %13, 0
  %add = add i32 %sub, 1
  %sub1 = sub i32 %add, 1
  %div = sdiv i32 %sub1, 1
  store i32 %div, ptr %__pyx_t_7, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_t_7, align 4, !tbaa !9
  %cmp = icmp sgt i32 %14, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.iv) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %.capture_expr.) #13
  %15 = load i32, ptr %__pyx_t_7, align 4, !tbaa !9
  store i32 %15, ptr %.capture_expr., align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.capture_expr.3) #13
  %16 = load i32, ptr %.capture_expr., align 4, !tbaa !9
  %sub4 = sub i32 %16, 0
  %div5 = sdiv i32 %sub4, 1
  %sub6 = sub i32 %div5, 1
  store i32 %sub6, ptr %.capture_expr.3, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_67) #13
  store i32 0, ptr %__pyx_t_67, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_67) #13
  %17 = load i32, ptr %.capture_expr., align 4, !tbaa !9
  %cmp8 = icmp slt i32 0, %17
  br i1 %cmp8, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.lb) #13
  store i32 0, ptr %.omp.lb, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.ub) #13
  %18 = load i32, ptr %.capture_expr.3, align 4, !tbaa !9
  store i32 %18, ptr %.omp.ub, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.stride) #13
  store i32 1, ptr %.omp.stride, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.is_last) #13
  store i32 0, ptr %.omp.is_last, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_cluster_idx10) #13
  %19 = load i32, ptr %2, align 4, !tbaa !9
  store i32 %19, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  %20 = load ptr, ptr %.global_tid..addr, align 8
  %21 = load i32, ptr %20, align 4, !tbaa !9
  call void @__kmpc_barrier(ptr @1, i32 %21)
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_611) #13
  %22 = load ptr, ptr %.global_tid..addr, align 8
  %23 = load i32, ptr %22, align 4, !tbaa !9
  call void @__kmpc_for_static_init_4(ptr @2, i32 %23, i32 34, ptr %.omp.is_last, ptr %.omp.lb, ptr %.omp.ub, ptr %.omp.stride, i32 1, i32 1)
  %24 = load i32, ptr %.omp.ub, align 4, !tbaa !9
  %25 = load i32, ptr %.capture_expr.3, align 4, !tbaa !9
  %cmp12 = icmp sgt i32 %24, %25
  br i1 %cmp12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %omp.precond.then
  %26 = load i32, ptr %.capture_expr.3, align 4, !tbaa !9
  br label %cond.end

cond.false:                                       ; preds = %omp.precond.then
  %27 = load i32, ptr %.omp.ub, align 4, !tbaa !9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %26, %cond.true ], [ %27, %cond.false ]
  store i32 %cond, ptr %.omp.ub, align 4, !tbaa !9
  %28 = load i32, ptr %.omp.lb, align 4, !tbaa !9
  store i32 %28, ptr %.omp.iv, align 4, !tbaa !9
  br label %omp.inner.for.cond

omp.inner.for.cond:                               ; preds = %omp.inner.for.inc, %cond.end
  %29 = load i32, ptr %.omp.iv, align 4, !tbaa !9
  %30 = load i32, ptr %.omp.ub, align 4, !tbaa !9
  %cmp14 = icmp sle i32 %29, %30
  br i1 %cmp14, label %omp.inner.for.body, label %omp.inner.for.cond.cleanup

omp.inner.for.cond.cleanup:                       ; preds = %omp.inner.for.cond
  br label %omp.inner.for.end

omp.inner.for.body:                               ; preds = %omp.inner.for.cond
  %31 = load i32, ptr %.omp.iv, align 4, !tbaa !9
  %mul16 = mul i32 %31, 1
  %add17 = add i32 0, %mul16
  store i32 %add17, ptr %__pyx_t_611, align 4, !tbaa !9
  %32 = load i32, ptr %__pyx_t_611, align 4, !tbaa !9
  %mul18 = mul i32 1, %32
  %add19 = add i32 0, %mul18
  store i32 %add19, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  %33 = load i32, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  %34 = load ptr, ptr %__pyx_v_indices, align 8, !tbaa !5
  call void @__pyx_fuse_0__pyx_f_7sklearn_7cluster_18_k_means_minibatch_update_center_sparse(i32 noundef %33, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %3, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %4, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %5, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %6, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %7, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %8, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %9, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %10, ptr noundef %34)
  br label %omp.body.continue

omp.body.continue:                                ; preds = %omp.inner.for.body
  br label %omp.inner.for.inc

omp.inner.for.inc:                                ; preds = %omp.body.continue
  %35 = load i32, ptr %.omp.iv, align 4, !tbaa !9
  %add20 = add i32 %35, 1
  store i32 %add20, ptr %.omp.iv, align 4, !tbaa !9
  br label %omp.inner.for.cond

omp.inner.for.end:                                ; preds = %omp.inner.for.cond.cleanup
  br label %omp.loop.exit

omp.loop.exit:                                    ; preds = %omp.inner.for.end
  %36 = load ptr, ptr %.global_tid..addr, align 8
  %37 = load i32, ptr %36, align 4, !tbaa !9
  call void @__kmpc_for_static_fini(ptr @2, i32 %37)
  %38 = load i32, ptr %.omp.is_last, align 4, !tbaa !9
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %.omp.lastprivate.then, label %.omp.lastprivate.done

.omp.lastprivate.then:                            ; preds = %omp.loop.exit
  %40 = load i32, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  store i32 %40, ptr %2, align 4, !tbaa !9
  br label %.omp.lastprivate.done

.omp.lastprivate.done:                            ; preds = %.omp.lastprivate.then, %omp.loop.exit
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_611) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_cluster_idx10) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.is_last) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.stride) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.ub) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.lb) #13
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %.omp.lastprivate.done, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %.capture_expr.3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.capture_expr.) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.iv) #13
  %41 = load ptr, ptr %.global_tid..addr, align 8
  %42 = load i32, ptr %41, align 4, !tbaa !9
  call void @__kmpc_barrier(ptr @1, i32 %42)
  br label %if.end

if.end:                                           ; preds = %omp.precond.end, %entry
  %43 = load ptr, ptr %__pyx_v_indices, align 8, !tbaa !5
  call void @free(ptr noundef %43) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_indices) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_fuse_0__pyx_f_7sklearn_7cluster_18_k_means_minibatch_update_center_sparse(i32 noundef %__pyx_v_cluster_idx, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_X_data, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_X_indices, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_X_indptr, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_sample_weight, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_old, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_new, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_weight_sums, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_labels, ptr noundef %__pyx_v_indices) #0 {
entry:
  %__pyx_v_cluster_idx.addr = alloca i32, align 4
  %__pyx_v_indices.addr = alloca ptr, align 8
  %__pyx_v_n_samples = alloca i32, align 4
  %__pyx_v_n_features = alloca i32, align 4
  %__pyx_v_alpha = alloca float, align 4
  %__pyx_v_n_indices = alloca i32, align 4
  %__pyx_v_k = alloca i32, align 4
  %__pyx_v_sample_idx = alloca i32, align 4
  %__pyx_v_feature_idx = alloca i32, align 4
  %__pyx_v_wsum = alloca float, align 4
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i64, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca i64, align 8
  %__pyx_t_7 = alloca i64, align 8
  %__pyx_t_8 = alloca i64, align 8
  %__pyx_t_9 = alloca i64, align 8
  %__pyx_t_10 = alloca i32, align 4
  %__pyx_t_11 = alloca i32, align 4
  %__pyx_t_12 = alloca i32, align 4
  %__pyx_t_13 = alloca i64, align 8
  store i32 %__pyx_v_cluster_idx, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  store ptr %__pyx_v_indices, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_samples) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_features) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_alpha) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_indices) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_k) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_sample_idx) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_feature_idx) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_wsum) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_13) #13
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 2
  %arrayidx = getelementptr [8 x i64], ptr %shape, i64 0, i64 0
  %0 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %conv = trunc i64 %0 to i32
  store i32 %conv, ptr %__pyx_v_n_samples, align 4, !tbaa !9
  %shape1 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 2
  %arrayidx2 = getelementptr [8 x i64], ptr %shape1, i64 0, i64 1
  %1 = load i64, ptr %arrayidx2, align 8, !tbaa !27
  %conv3 = trunc i64 %1 to i32
  store i32 %conv3, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store float 0.000000e+00, ptr %__pyx_v_wsum, align 4, !tbaa !298
  store i32 0, ptr %__pyx_v_k, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_v_n_samples, align 4, !tbaa !9
  store i32 %2, ptr %__pyx_t_1, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %3, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %6, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv5 = sext i32 %7 to i64
  store i64 %conv5, ptr %__pyx_t_4, align 8, !tbaa !27
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_labels, i32 0, i32 1
  %8 = load ptr, ptr %data, align 8, !tbaa !188
  %9 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr = getelementptr i32, ptr %8, i64 %9
  %10 = load i32, ptr %add.ptr, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %cmp6 = icmp eq i32 %10, %11
  %conv7 = zext i1 %cmp6 to i32
  %cmp8 = icmp ne i32 %conv7, 0
  %conv9 = zext i1 %cmp8 to i32
  store i32 %conv9, ptr %__pyx_t_5, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %13 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %14 = load ptr, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  %15 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  %idxprom = sext i32 %15 to i64
  %arrayidx10 = getelementptr i32, ptr %14, i64 %idxprom
  store i32 %13, ptr %arrayidx10, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv11 = sext i32 %16 to i64
  store i64 %conv11, ptr %__pyx_t_4, align 8, !tbaa !27
  %17 = load float, ptr %__pyx_v_wsum, align 4, !tbaa !298
  %data12 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 1
  %18 = load ptr, ptr %data12, align 8, !tbaa !188
  %19 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr13 = getelementptr float, ptr %18, i64 %19
  %20 = load float, ptr %add.ptr13, align 4, !tbaa !298
  %add = fadd float %17, %20
  store float %add, ptr %__pyx_v_wsum, align 4, !tbaa !298
  %21 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  %add14 = add i32 %21, 1
  store i32 %add14, ptr %__pyx_v_k, align 4, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %22 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add15 = add i32 %22, 1
  store i32 %add15, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !319

for.end:                                          ; preds = %for.cond
  %23 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  store i32 %23, ptr %__pyx_v_n_indices, align 4, !tbaa !9
  %24 = load float, ptr %__pyx_v_wsum, align 4, !tbaa !298
  %conv16 = fpext float %24 to double
  %cmp17 = fcmp ogt double %conv16, 0.000000e+00
  %conv18 = zext i1 %cmp17 to i32
  %cmp19 = icmp ne i32 %conv18, 0
  %conv20 = zext i1 %cmp19 to i32
  store i32 %conv20, ptr %__pyx_t_5, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %tobool21 = icmp ne i32 %25, 0
  br i1 %tobool21, label %if.then22, label %if.end114

if.then22:                                        ; preds = %for.end
  %26 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %26, ptr %__pyx_t_1, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %27, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc45, %if.then22
  %28 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp24 = icmp slt i32 %28, %29
  br i1 %cmp24, label %for.body26, label %for.end47

for.body26:                                       ; preds = %for.cond23
  %30 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %30, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv27 = sext i32 %31 to i64
  store i64 %conv27, ptr %__pyx_t_4, align 8, !tbaa !27
  %32 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv28 = sext i32 %32 to i64
  store i64 %conv28, ptr %__pyx_t_6, align 8, !tbaa !27
  %33 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv29 = sext i32 %33 to i64
  store i64 %conv29, ptr %__pyx_t_7, align 8, !tbaa !27
  %34 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv30 = sext i32 %34 to i64
  store i64 %conv30, ptr %__pyx_t_8, align 8, !tbaa !27
  %35 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv31 = sext i32 %35 to i64
  store i64 %conv31, ptr %__pyx_t_9, align 8, !tbaa !27
  %data32 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 1
  %36 = load ptr, ptr %data32, align 8, !tbaa !188
  %37 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 3
  %arrayidx33 = getelementptr [8 x i64], ptr %strides, i64 0, i64 0
  %38 = load i64, ptr %arrayidx33, align 8, !tbaa !27
  %mul = mul i64 %37, %38
  %add.ptr34 = getelementptr i8, ptr %36, i64 %mul
  %39 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %add.ptr35 = getelementptr float, ptr %add.ptr34, i64 %39
  %40 = load float, ptr %add.ptr35, align 4, !tbaa !298
  %data36 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 1
  %41 = load ptr, ptr %data36, align 8, !tbaa !188
  %42 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr37 = getelementptr float, ptr %41, i64 %42
  %43 = load float, ptr %add.ptr37, align 4, !tbaa !298
  %mul38 = fmul float %40, %43
  %data39 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %44 = load ptr, ptr %data39, align 8, !tbaa !188
  %45 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %strides40 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx41 = getelementptr [8 x i64], ptr %strides40, i64 0, i64 0
  %46 = load i64, ptr %arrayidx41, align 8, !tbaa !27
  %mul42 = mul i64 %45, %46
  %add.ptr43 = getelementptr i8, ptr %44, i64 %mul42
  %47 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %add.ptr44 = getelementptr float, ptr %add.ptr43, i64 %47
  store float %mul38, ptr %add.ptr44, align 4, !tbaa !298
  br label %for.inc45

for.inc45:                                        ; preds = %for.body26
  %48 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add46 = add i32 %48, 1
  store i32 %add46, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond23, !llvm.loop !320

for.end47:                                        ; preds = %for.cond23
  %49 = load i32, ptr %__pyx_v_n_indices, align 4, !tbaa !9
  store i32 %49, ptr %__pyx_t_1, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %50, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond48

for.cond48:                                       ; preds = %for.inc86, %for.end47
  %51 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %52 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp49 = icmp slt i32 %51, %52
  br i1 %cmp49, label %for.body51, label %for.end88

for.body51:                                       ; preds = %for.cond48
  %53 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %53, ptr %__pyx_v_k, align 4, !tbaa !9
  %54 = load ptr, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  %55 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  %idxprom52 = sext i32 %55 to i64
  %arrayidx53 = getelementptr i32, ptr %54, i64 %idxprom52
  %56 = load i32, ptr %arrayidx53, align 4, !tbaa !9
  store i32 %56, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %57 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %add54 = add i32 %57, 1
  %conv55 = sext i32 %add54 to i64
  store i64 %conv55, ptr %__pyx_t_7, align 8, !tbaa !27
  %data56 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X_indptr, i32 0, i32 1
  %58 = load ptr, ptr %data56, align 8, !tbaa !188
  %59 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr57 = getelementptr i32, ptr %58, i64 %59
  %60 = load i32, ptr %add.ptr57, align 4, !tbaa !9
  store i32 %60, ptr %__pyx_t_10, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv58 = sext i32 %61 to i64
  store i64 %conv58, ptr %__pyx_t_7, align 8, !tbaa !27
  %62 = load i32, ptr %__pyx_t_10, align 4, !tbaa !9
  store i32 %62, ptr %__pyx_t_11, align 4, !tbaa !9
  %data59 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X_indptr, i32 0, i32 1
  %63 = load ptr, ptr %data59, align 8, !tbaa !188
  %64 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr60 = getelementptr i32, ptr %63, i64 %64
  %65 = load i32, ptr %add.ptr60, align 4, !tbaa !9
  store i32 %65, ptr %__pyx_t_12, align 4, !tbaa !9
  br label %for.cond61

for.cond61:                                       ; preds = %for.inc83, %for.body51
  %66 = load i32, ptr %__pyx_t_12, align 4, !tbaa !9
  %67 = load i32, ptr %__pyx_t_11, align 4, !tbaa !9
  %cmp62 = icmp slt i32 %66, %67
  br i1 %cmp62, label %for.body64, label %for.end85

for.body64:                                       ; preds = %for.cond61
  %68 = load i32, ptr %__pyx_t_12, align 4, !tbaa !9
  store i32 %68, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %69 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv65 = sext i32 %69 to i64
  store i64 %conv65, ptr %__pyx_t_6, align 8, !tbaa !27
  %70 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv66 = sext i32 %70 to i64
  store i64 %conv66, ptr %__pyx_t_4, align 8, !tbaa !27
  %71 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv67 = sext i32 %71 to i64
  store i64 %conv67, ptr %__pyx_t_9, align 8, !tbaa !27
  %72 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv68 = sext i32 %72 to i64
  store i64 %conv68, ptr %__pyx_t_8, align 8, !tbaa !27
  %data69 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X_indices, i32 0, i32 1
  %73 = load ptr, ptr %data69, align 8, !tbaa !188
  %74 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %add.ptr70 = getelementptr i32, ptr %73, i64 %74
  %75 = load i32, ptr %add.ptr70, align 4, !tbaa !9
  %conv71 = sext i32 %75 to i64
  store i64 %conv71, ptr %__pyx_t_13, align 8, !tbaa !27
  %data72 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X_data, i32 0, i32 1
  %76 = load ptr, ptr %data72, align 8, !tbaa !188
  %77 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %add.ptr73 = getelementptr float, ptr %76, i64 %77
  %78 = load float, ptr %add.ptr73, align 4, !tbaa !298
  %data74 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 1
  %79 = load ptr, ptr %data74, align 8, !tbaa !188
  %80 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr75 = getelementptr float, ptr %79, i64 %80
  %81 = load float, ptr %add.ptr75, align 4, !tbaa !298
  %data77 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %82 = load ptr, ptr %data77, align 8, !tbaa !188
  %83 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %strides78 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx79 = getelementptr [8 x i64], ptr %strides78, i64 0, i64 0
  %84 = load i64, ptr %arrayidx79, align 8, !tbaa !27
  %mul80 = mul i64 %83, %84
  %add.ptr81 = getelementptr i8, ptr %82, i64 %mul80
  %85 = load i64, ptr %__pyx_t_13, align 8, !tbaa !27
  %add.ptr82 = getelementptr float, ptr %add.ptr81, i64 %85
  %86 = load float, ptr %add.ptr82, align 4, !tbaa !298
  %87 = call float @llvm.fmuladd.f32(float %78, float %81, float %86)
  store float %87, ptr %add.ptr82, align 4, !tbaa !298
  br label %for.inc83

for.inc83:                                        ; preds = %for.body64
  %88 = load i32, ptr %__pyx_t_12, align 4, !tbaa !9
  %add84 = add i32 %88, 1
  store i32 %add84, ptr %__pyx_t_12, align 4, !tbaa !9
  br label %for.cond61, !llvm.loop !321

for.end85:                                        ; preds = %for.cond61
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %89 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add87 = add i32 %89, 1
  store i32 %add87, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond48, !llvm.loop !322

for.end88:                                        ; preds = %for.cond48
  %90 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv89 = sext i32 %90 to i64
  store i64 %conv89, ptr %__pyx_t_7, align 8, !tbaa !27
  %91 = load float, ptr %__pyx_v_wsum, align 4, !tbaa !298
  %data90 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 1
  %92 = load ptr, ptr %data90, align 8, !tbaa !188
  %93 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr91 = getelementptr float, ptr %92, i64 %93
  %94 = load float, ptr %add.ptr91, align 4, !tbaa !298
  %add92 = fadd float %94, %91
  store float %add92, ptr %add.ptr91, align 4, !tbaa !298
  %95 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv93 = sext i32 %95 to i64
  store i64 %conv93, ptr %__pyx_t_7, align 8, !tbaa !27
  %data94 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 1
  %96 = load ptr, ptr %data94, align 8, !tbaa !188
  %97 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr95 = getelementptr float, ptr %96, i64 %97
  %98 = load float, ptr %add.ptr95, align 4, !tbaa !298
  %conv96 = fpext float %98 to double
  %div = fdiv double 1.000000e+00, %conv96
  %conv97 = fptrunc double %div to float
  store float %conv97, ptr %__pyx_v_alpha, align 4, !tbaa !298
  %99 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %99, ptr %__pyx_t_1, align 4, !tbaa !9
  %100 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %100, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond98

for.cond98:                                       ; preds = %for.inc111, %for.end88
  %101 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %102 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp99 = icmp slt i32 %101, %102
  br i1 %cmp99, label %for.body101, label %for.end113

for.body101:                                      ; preds = %for.cond98
  %103 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %103, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %104 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv102 = sext i32 %104 to i64
  store i64 %conv102, ptr %__pyx_t_7, align 8, !tbaa !27
  %105 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv103 = sext i32 %105 to i64
  store i64 %conv103, ptr %__pyx_t_4, align 8, !tbaa !27
  %106 = load float, ptr %__pyx_v_alpha, align 4, !tbaa !298
  %data104 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %107 = load ptr, ptr %data104, align 8, !tbaa !188
  %108 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %strides105 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx106 = getelementptr [8 x i64], ptr %strides105, i64 0, i64 0
  %109 = load i64, ptr %arrayidx106, align 8, !tbaa !27
  %mul107 = mul i64 %108, %109
  %add.ptr108 = getelementptr i8, ptr %107, i64 %mul107
  %110 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr109 = getelementptr float, ptr %add.ptr108, i64 %110
  %111 = load float, ptr %add.ptr109, align 4, !tbaa !298
  %mul110 = fmul float %111, %106
  store float %mul110, ptr %add.ptr109, align 4, !tbaa !298
  br label %for.inc111

for.inc111:                                       ; preds = %for.body101
  %112 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add112 = add i32 %112, 1
  store i32 %add112, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond98, !llvm.loop !323

for.end113:                                       ; preds = %for.cond98
  br label %__pyx_L6

if.end114:                                        ; preds = %for.end
  %113 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %113, ptr %__pyx_t_1, align 4, !tbaa !9
  %114 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %114, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond115

for.cond115:                                      ; preds = %for.inc135, %if.end114
  %115 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %116 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp116 = icmp slt i32 %115, %116
  br i1 %cmp116, label %for.body118, label %for.end137

for.body118:                                      ; preds = %for.cond115
  %117 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %117, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %118 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv119 = sext i32 %118 to i64
  store i64 %conv119, ptr %__pyx_t_4, align 8, !tbaa !27
  %119 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv120 = sext i32 %119 to i64
  store i64 %conv120, ptr %__pyx_t_7, align 8, !tbaa !27
  %120 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv121 = sext i32 %120 to i64
  store i64 %conv121, ptr %__pyx_t_6, align 8, !tbaa !27
  %121 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv122 = sext i32 %121 to i64
  store i64 %conv122, ptr %__pyx_t_9, align 8, !tbaa !27
  %data123 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 1
  %122 = load ptr, ptr %data123, align 8, !tbaa !188
  %123 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %strides124 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 3
  %arrayidx125 = getelementptr [8 x i64], ptr %strides124, i64 0, i64 0
  %124 = load i64, ptr %arrayidx125, align 8, !tbaa !27
  %mul126 = mul i64 %123, %124
  %add.ptr127 = getelementptr i8, ptr %122, i64 %mul126
  %125 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr128 = getelementptr float, ptr %add.ptr127, i64 %125
  %126 = load float, ptr %add.ptr128, align 4, !tbaa !298
  %data129 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %127 = load ptr, ptr %data129, align 8, !tbaa !188
  %128 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %strides130 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx131 = getelementptr [8 x i64], ptr %strides130, i64 0, i64 0
  %129 = load i64, ptr %arrayidx131, align 8, !tbaa !27
  %mul132 = mul i64 %128, %129
  %add.ptr133 = getelementptr i8, ptr %127, i64 %mul132
  %130 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %add.ptr134 = getelementptr float, ptr %add.ptr133, i64 %130
  store float %126, ptr %add.ptr134, align 4, !tbaa !298
  br label %for.inc135

for.inc135:                                       ; preds = %for.body118
  %131 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add136 = add i32 %131, 1
  store i32 %add136, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond115, !llvm.loop !324

for.end137:                                       ; preds = %for.cond115
  br label %__pyx_L6

__pyx_L6:                                         ; preds = %for.end137, %for.end113
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_13) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_wsum) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_feature_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_sample_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_k) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_indices) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_alpha) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_features) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_samples) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_fuse_1__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_13_minibatch_update_sparse(ptr noundef %__pyx_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_X = alloca ptr, align 8
  %__pyx_v_sample_weight = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_centers_old = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_centers_new = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_weight_sums = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_labels = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_n_threads = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %values = alloca [7 x ptr], align 16
  %kw_args = alloca i64, align 8
  %pos_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca %struct.__Pyx_memviewslice, align 8
  %tmp211 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp226 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp241 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp256 = alloca %struct.__Pyx_memviewslice, align 8
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !5
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_X) #13
  store ptr null, ptr %__pyx_v_X, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_sample_weight) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_sample_weight, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_centers_old) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_centers_old, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_centers_new) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_centers_new, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_weight_sums) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_weight_sums, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_labels) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_labels, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_threads) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 56, ptr %values) #13
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 56, i1 false)
  %0 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else168

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos_args) #13
  %1 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1)
  store i64 %call, ptr %pos_args, align 8, !tbaa !27
  %2 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %2, label %sw.default [
    i64 7, label %sw.bb
    i64 6, label %sw.bb4
    i64 5, label %sw.bb8
    i64 4, label %sw.bb12
    i64 3, label %sw.bb16
    i64 2, label %sw.bb20
    i64 1, label %sw.bb24
    i64 0, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.then
  %3 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 6
  %4 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %arrayidx3 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  store ptr %4, ptr %arrayidx3, align 16, !tbaa !5
  br label %sw.bb4

sw.bb4:                                           ; preds = %if.then, %sw.bb
  %5 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %5, i32 0, i32 1
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 5
  %6 = load ptr, ptr %arrayidx6, align 8, !tbaa !5
  %arrayidx7 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  store ptr %6, ptr %arrayidx7, align 8, !tbaa !5
  br label %sw.bb8

sw.bb8:                                           ; preds = %if.then, %sw.bb4
  %7 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item9 = getelementptr inbounds %struct.PyTupleObject, ptr %7, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x ptr], ptr %ob_item9, i64 0, i64 4
  %8 = load ptr, ptr %arrayidx10, align 8, !tbaa !5
  %arrayidx11 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  store ptr %8, ptr %arrayidx11, align 16, !tbaa !5
  br label %sw.bb12

sw.bb12:                                          ; preds = %if.then, %sw.bb8
  %9 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item13 = getelementptr inbounds %struct.PyTupleObject, ptr %9, i32 0, i32 1
  %arrayidx14 = getelementptr [1 x ptr], ptr %ob_item13, i64 0, i64 3
  %10 = load ptr, ptr %arrayidx14, align 8, !tbaa !5
  %arrayidx15 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  store ptr %10, ptr %arrayidx15, align 8, !tbaa !5
  br label %sw.bb16

sw.bb16:                                          ; preds = %if.then, %sw.bb12
  %11 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item17 = getelementptr inbounds %struct.PyTupleObject, ptr %11, i32 0, i32 1
  %arrayidx18 = getelementptr [1 x ptr], ptr %ob_item17, i64 0, i64 2
  %12 = load ptr, ptr %arrayidx18, align 8, !tbaa !5
  %arrayidx19 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  store ptr %12, ptr %arrayidx19, align 16, !tbaa !5
  br label %sw.bb20

sw.bb20:                                          ; preds = %if.then, %sw.bb16
  %13 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item21 = getelementptr inbounds %struct.PyTupleObject, ptr %13, i32 0, i32 1
  %arrayidx22 = getelementptr [1 x ptr], ptr %ob_item21, i64 0, i64 1
  %14 = load ptr, ptr %arrayidx22, align 8, !tbaa !5
  %arrayidx23 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  store ptr %14, ptr %arrayidx23, align 8, !tbaa !5
  br label %sw.bb24

sw.bb24:                                          ; preds = %if.then, %sw.bb20
  %15 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item25 = getelementptr inbounds %struct.PyTupleObject, ptr %15, i32 0, i32 1
  %arrayidx26 = getelementptr [1 x ptr], ptr %ob_item25, i64 0, i64 0
  %16 = load ptr, ptr %arrayidx26, align 8, !tbaa !5
  %arrayidx27 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  store ptr %16, ptr %arrayidx27, align 16, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb24, %if.then
  %17 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %call28 = call i64 @PyDict_Size(ptr noundef %17)
  store i64 %call28, ptr %kw_args, align 8, !tbaa !27
  %18 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %18, label %sw.epilog143 [
    i64 0, label %sw.bb29
    i64 1, label %sw.bb41
    i64 2, label %sw.bb58
    i64 3, label %sw.bb75
    i64 4, label %sw.bb92
    i64 5, label %sw.bb109
    i64 6, label %sw.bb126
  ]

sw.bb29:                                          ; preds = %sw.epilog
  %19 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %20 = load ptr, ptr @__pyx_n_s_X, align 8, !tbaa !5
  %21 = load ptr, ptr @__pyx_n_s_X, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %21, i32 0, i32 2
  %22 = load i64, ptr %hash, align 8, !tbaa !154
  %call30 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %19, ptr noundef %20, i64 noundef %22)
  %arrayidx31 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  store ptr %call30, ptr %arrayidx31, align 16, !tbaa !5
  %cmp = icmp ne ptr %call30, null
  %lnot33 = xor i1 %cmp, true
  %lnot35 = xor i1 %lnot33, true
  %lnot.ext36 = zext i1 %lnot35 to i32
  %conv37 = sext i32 %lnot.ext36 to i64
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 1)
  %tobool39 = icmp ne i64 %expval38, 0
  br i1 %tobool39, label %if.then40, label %if.else

if.then40:                                        ; preds = %sw.bb29
  %23 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec = add i64 %23, -1
  store i64 %dec, ptr %kw_args, align 8, !tbaa !27
  br label %if.end

if.else:                                          ; preds = %sw.bb29
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then40
  br label %sw.bb41

sw.bb41:                                          ; preds = %sw.epilog, %if.end
  %24 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %25 = load ptr, ptr @__pyx_n_s_sample_weight, align 8, !tbaa !5
  %26 = load ptr, ptr @__pyx_n_s_sample_weight, align 8, !tbaa !5
  %hash42 = getelementptr inbounds %struct.PyASCIIObject, ptr %26, i32 0, i32 2
  %27 = load i64, ptr %hash42, align 8, !tbaa !154
  %call43 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %24, ptr noundef %25, i64 noundef %27)
  %arrayidx44 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  store ptr %call43, ptr %arrayidx44, align 8, !tbaa !5
  %cmp45 = icmp ne ptr %call43, null
  %lnot47 = xor i1 %cmp45, true
  %lnot49 = xor i1 %lnot47, true
  %lnot.ext50 = zext i1 %lnot49 to i32
  %conv51 = sext i32 %lnot.ext50 to i64
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 1)
  %tobool53 = icmp ne i64 %expval52, 0
  br i1 %tobool53, label %if.then54, label %if.else56

if.then54:                                        ; preds = %sw.bb41
  %28 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec55 = add i64 %28, -1
  store i64 %dec55, ptr %kw_args, align 8, !tbaa !27
  br label %if.end57

if.else56:                                        ; preds = %sw.bb41
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 1)
  %29 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %29, ptr %__pyx_filename, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5129, ptr %__pyx_clineno, align 4, !tbaa !9
  %32 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end57:                                         ; preds = %if.then54
  br label %sw.bb58

sw.bb58:                                          ; preds = %sw.epilog, %if.end57
  %33 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %34 = load ptr, ptr @__pyx_n_s_centers_old, align 8, !tbaa !5
  %35 = load ptr, ptr @__pyx_n_s_centers_old, align 8, !tbaa !5
  %hash59 = getelementptr inbounds %struct.PyASCIIObject, ptr %35, i32 0, i32 2
  %36 = load i64, ptr %hash59, align 8, !tbaa !154
  %call60 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %33, ptr noundef %34, i64 noundef %36)
  %arrayidx61 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  store ptr %call60, ptr %arrayidx61, align 16, !tbaa !5
  %cmp62 = icmp ne ptr %call60, null
  %lnot64 = xor i1 %cmp62, true
  %lnot66 = xor i1 %lnot64, true
  %lnot.ext67 = zext i1 %lnot66 to i32
  %conv68 = sext i32 %lnot.ext67 to i64
  %expval69 = call i64 @llvm.expect.i64(i64 %conv68, i64 1)
  %tobool70 = icmp ne i64 %expval69, 0
  br i1 %tobool70, label %if.then71, label %if.else73

if.then71:                                        ; preds = %sw.bb58
  %37 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec72 = add i64 %37, -1
  store i64 %dec72, ptr %kw_args, align 8, !tbaa !27
  br label %if.end74

if.else73:                                        ; preds = %sw.bb58
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 2)
  %38 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %38, ptr %__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5135, ptr %__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end74:                                         ; preds = %if.then71
  br label %sw.bb75

sw.bb75:                                          ; preds = %sw.epilog, %if.end74
  %42 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %43 = load ptr, ptr @__pyx_n_s_centers_new, align 8, !tbaa !5
  %44 = load ptr, ptr @__pyx_n_s_centers_new, align 8, !tbaa !5
  %hash76 = getelementptr inbounds %struct.PyASCIIObject, ptr %44, i32 0, i32 2
  %45 = load i64, ptr %hash76, align 8, !tbaa !154
  %call77 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %42, ptr noundef %43, i64 noundef %45)
  %arrayidx78 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  store ptr %call77, ptr %arrayidx78, align 8, !tbaa !5
  %cmp79 = icmp ne ptr %call77, null
  %lnot81 = xor i1 %cmp79, true
  %lnot83 = xor i1 %lnot81, true
  %lnot.ext84 = zext i1 %lnot83 to i32
  %conv85 = sext i32 %lnot.ext84 to i64
  %expval86 = call i64 @llvm.expect.i64(i64 %conv85, i64 1)
  %tobool87 = icmp ne i64 %expval86, 0
  br i1 %tobool87, label %if.then88, label %if.else90

if.then88:                                        ; preds = %sw.bb75
  %46 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec89 = add i64 %46, -1
  store i64 %dec89, ptr %kw_args, align 8, !tbaa !27
  br label %if.end91

if.else90:                                        ; preds = %sw.bb75
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 3)
  %47 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %47, ptr %__pyx_filename, align 8, !tbaa !5
  %48 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5141, ptr %__pyx_clineno, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end91:                                         ; preds = %if.then88
  br label %sw.bb92

sw.bb92:                                          ; preds = %sw.epilog, %if.end91
  %51 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %52 = load ptr, ptr @__pyx_n_s_weight_sums, align 8, !tbaa !5
  %53 = load ptr, ptr @__pyx_n_s_weight_sums, align 8, !tbaa !5
  %hash93 = getelementptr inbounds %struct.PyASCIIObject, ptr %53, i32 0, i32 2
  %54 = load i64, ptr %hash93, align 8, !tbaa !154
  %call94 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %51, ptr noundef %52, i64 noundef %54)
  %arrayidx95 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  store ptr %call94, ptr %arrayidx95, align 16, !tbaa !5
  %cmp96 = icmp ne ptr %call94, null
  %lnot98 = xor i1 %cmp96, true
  %lnot100 = xor i1 %lnot98, true
  %lnot.ext101 = zext i1 %lnot100 to i32
  %conv102 = sext i32 %lnot.ext101 to i64
  %expval103 = call i64 @llvm.expect.i64(i64 %conv102, i64 1)
  %tobool104 = icmp ne i64 %expval103, 0
  br i1 %tobool104, label %if.then105, label %if.else107

if.then105:                                       ; preds = %sw.bb92
  %55 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec106 = add i64 %55, -1
  store i64 %dec106, ptr %kw_args, align 8, !tbaa !27
  br label %if.end108

if.else107:                                       ; preds = %sw.bb92
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 4)
  %56 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %56, ptr %__pyx_filename, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %58 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5147, ptr %__pyx_clineno, align 4, !tbaa !9
  %59 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end108:                                        ; preds = %if.then105
  br label %sw.bb109

sw.bb109:                                         ; preds = %sw.epilog, %if.end108
  %60 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %61 = load ptr, ptr @__pyx_n_s_labels, align 8, !tbaa !5
  %62 = load ptr, ptr @__pyx_n_s_labels, align 8, !tbaa !5
  %hash110 = getelementptr inbounds %struct.PyASCIIObject, ptr %62, i32 0, i32 2
  %63 = load i64, ptr %hash110, align 8, !tbaa !154
  %call111 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %60, ptr noundef %61, i64 noundef %63)
  %arrayidx112 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  store ptr %call111, ptr %arrayidx112, align 8, !tbaa !5
  %cmp113 = icmp ne ptr %call111, null
  %lnot115 = xor i1 %cmp113, true
  %lnot117 = xor i1 %lnot115, true
  %lnot.ext118 = zext i1 %lnot117 to i32
  %conv119 = sext i32 %lnot.ext118 to i64
  %expval120 = call i64 @llvm.expect.i64(i64 %conv119, i64 1)
  %tobool121 = icmp ne i64 %expval120, 0
  br i1 %tobool121, label %if.then122, label %if.else124

if.then122:                                       ; preds = %sw.bb109
  %64 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec123 = add i64 %64, -1
  store i64 %dec123, ptr %kw_args, align 8, !tbaa !27
  br label %if.end125

if.else124:                                       ; preds = %sw.bb109
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 5)
  %65 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %65, ptr %__pyx_filename, align 8, !tbaa !5
  %66 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %67 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5153, ptr %__pyx_clineno, align 4, !tbaa !9
  %68 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end125:                                        ; preds = %if.then122
  br label %sw.bb126

sw.bb126:                                         ; preds = %sw.epilog, %if.end125
  %69 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %70 = load ptr, ptr @__pyx_n_s_n_threads, align 8, !tbaa !5
  %71 = load ptr, ptr @__pyx_n_s_n_threads, align 8, !tbaa !5
  %hash127 = getelementptr inbounds %struct.PyASCIIObject, ptr %71, i32 0, i32 2
  %72 = load i64, ptr %hash127, align 8, !tbaa !154
  %call128 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %69, ptr noundef %70, i64 noundef %72)
  %arrayidx129 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  store ptr %call128, ptr %arrayidx129, align 16, !tbaa !5
  %cmp130 = icmp ne ptr %call128, null
  %lnot132 = xor i1 %cmp130, true
  %lnot134 = xor i1 %lnot132, true
  %lnot.ext135 = zext i1 %lnot134 to i32
  %conv136 = sext i32 %lnot.ext135 to i64
  %expval137 = call i64 @llvm.expect.i64(i64 %conv136, i64 1)
  %tobool138 = icmp ne i64 %expval137, 0
  br i1 %tobool138, label %if.then139, label %if.else141

if.then139:                                       ; preds = %sw.bb126
  %73 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec140 = add i64 %73, -1
  store i64 %dec140, ptr %kw_args, align 8, !tbaa !27
  br label %if.end142

if.else141:                                       ; preds = %sw.bb126
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef 6)
  %74 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %74, ptr %__pyx_filename, align 8, !tbaa !5
  %75 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %76 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5159, ptr %__pyx_clineno, align 4, !tbaa !9
  %77 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end142:                                        ; preds = %if.then139
  br label %sw.epilog143

sw.epilog143:                                     ; preds = %if.end142, %sw.epilog
  %78 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp144 = icmp sgt i64 %78, 0
  %lnot146 = xor i1 %cmp144, true
  %lnot148 = xor i1 %lnot146, true
  %lnot.ext149 = zext i1 %lnot148 to i32
  %conv150 = sext i32 %lnot.ext149 to i64
  %expval151 = call i64 @llvm.expect.i64(i64 %conv150, i64 0)
  %tobool152 = icmp ne i64 %expval151, 0
  br i1 %tobool152, label %if.then153, label %if.end166

if.then153:                                       ; preds = %sw.epilog143
  %79 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %arraydecay = getelementptr inbounds [7 x ptr], ptr %values, i64 0, i64 0
  %80 = load i64, ptr %pos_args, align 8, !tbaa !27
  %call154 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %79, ptr noundef @__pyx_fuse_1__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_13_minibatch_update_sparse.__pyx_pyargnames, ptr noundef null, ptr noundef %arraydecay, i64 noundef %80, ptr noundef @.str.293)
  %cmp155 = icmp slt i32 %call154, 0
  %lnot157 = xor i1 %cmp155, true
  %lnot159 = xor i1 %lnot157, true
  %lnot.ext160 = zext i1 %lnot159 to i32
  %conv161 = sext i32 %lnot.ext160 to i64
  %expval162 = call i64 @llvm.expect.i64(i64 %conv161, i64 0)
  %tobool163 = icmp ne i64 %expval162, 0
  br i1 %tobool163, label %if.then164, label %if.end165

if.then164:                                       ; preds = %if.then153
  %81 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %81, ptr %__pyx_filename, align 8, !tbaa !5
  %82 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %83 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5163, ptr %__pyx_clineno, align 4, !tbaa !9
  %84 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end165:                                        ; preds = %if.then153
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %sw.epilog143
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then164, %if.else141, %if.else124, %if.else107, %if.else90, %if.else73, %if.else56, %if.else, %sw.default, %if.end166
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup286 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end196

if.else168:                                       ; preds = %entry
  %85 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call169 = call i64 @PyTuple_GET_SIZE(ptr noundef %85)
  %cmp170 = icmp ne i64 %call169, 7
  br i1 %cmp170, label %if.then172, label %if.else173

if.then172:                                       ; preds = %if.else168
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.else173:                                       ; preds = %if.else168
  %86 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item174 = getelementptr inbounds %struct.PyTupleObject, ptr %86, i32 0, i32 1
  %arrayidx175 = getelementptr [1 x ptr], ptr %ob_item174, i64 0, i64 0
  %87 = load ptr, ptr %arrayidx175, align 8, !tbaa !5
  %arrayidx176 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  store ptr %87, ptr %arrayidx176, align 16, !tbaa !5
  %88 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item177 = getelementptr inbounds %struct.PyTupleObject, ptr %88, i32 0, i32 1
  %arrayidx178 = getelementptr [1 x ptr], ptr %ob_item177, i64 0, i64 1
  %89 = load ptr, ptr %arrayidx178, align 8, !tbaa !5
  %arrayidx179 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  store ptr %89, ptr %arrayidx179, align 8, !tbaa !5
  %90 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item180 = getelementptr inbounds %struct.PyTupleObject, ptr %90, i32 0, i32 1
  %arrayidx181 = getelementptr [1 x ptr], ptr %ob_item180, i64 0, i64 2
  %91 = load ptr, ptr %arrayidx181, align 8, !tbaa !5
  %arrayidx182 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  store ptr %91, ptr %arrayidx182, align 16, !tbaa !5
  %92 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item183 = getelementptr inbounds %struct.PyTupleObject, ptr %92, i32 0, i32 1
  %arrayidx184 = getelementptr [1 x ptr], ptr %ob_item183, i64 0, i64 3
  %93 = load ptr, ptr %arrayidx184, align 8, !tbaa !5
  %arrayidx185 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  store ptr %93, ptr %arrayidx185, align 8, !tbaa !5
  %94 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item186 = getelementptr inbounds %struct.PyTupleObject, ptr %94, i32 0, i32 1
  %arrayidx187 = getelementptr [1 x ptr], ptr %ob_item186, i64 0, i64 4
  %95 = load ptr, ptr %arrayidx187, align 8, !tbaa !5
  %arrayidx188 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  store ptr %95, ptr %arrayidx188, align 16, !tbaa !5
  %96 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item189 = getelementptr inbounds %struct.PyTupleObject, ptr %96, i32 0, i32 1
  %arrayidx190 = getelementptr [1 x ptr], ptr %ob_item189, i64 0, i64 5
  %97 = load ptr, ptr %arrayidx190, align 8, !tbaa !5
  %arrayidx191 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  store ptr %97, ptr %arrayidx191, align 8, !tbaa !5
  %98 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item192 = getelementptr inbounds %struct.PyTupleObject, ptr %98, i32 0, i32 1
  %arrayidx193 = getelementptr [1 x ptr], ptr %ob_item192, i64 0, i64 6
  %99 = load ptr, ptr %arrayidx193, align 8, !tbaa !5
  %arrayidx194 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  store ptr %99, ptr %arrayidx194, align 16, !tbaa !5
  br label %if.end195

if.end195:                                        ; preds = %if.else173
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %cleanup.cont
  %arrayidx197 = getelementptr [7 x ptr], ptr %values, i64 0, i64 0
  %100 = load ptr, ptr %arrayidx197, align 16, !tbaa !5
  store ptr %100, ptr %__pyx_v_X, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp) #13
  %arrayidx198 = getelementptr [7 x ptr], ptr %values, i64 0, i64 1
  %101 = load ptr, ptr %arrayidx198, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_double__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp, ptr noundef %101, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_sample_weight, ptr align 8 %tmp, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp) #13
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 0
  %102 = load ptr, ptr %memview, align 8, !tbaa !185
  %tobool199 = icmp ne ptr %102, null
  %lnot200 = xor i1 %tobool199, true
  %lnot202 = xor i1 %lnot200, true
  %lnot204 = xor i1 %lnot202, true
  %lnot.ext205 = zext i1 %lnot204 to i32
  %conv206 = sext i32 %lnot.ext205 to i64
  %expval207 = call i64 @llvm.expect.i64(i64 %conv206, i64 0)
  %tobool208 = icmp ne i64 %expval207, 0
  br i1 %tobool208, label %if.then209, label %if.end210

if.then209:                                       ; preds = %if.end196
  %103 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %103, ptr %__pyx_filename, align 8, !tbaa !5
  %104 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 113, ptr %__pyx_lineno, align 4, !tbaa !9
  %105 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5177, ptr %__pyx_clineno, align 4, !tbaa !9
  %106 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.end210:                                        ; preds = %if.end196
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp211) #13
  %arrayidx212 = getelementptr [7 x ptr], ptr %values, i64 0, i64 2
  %107 = load ptr, ptr %arrayidx212, align 16, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_double__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp211, ptr noundef %107, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_centers_old, ptr align 8 %tmp211, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp211) #13
  %memview213 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 0
  %108 = load ptr, ptr %memview213, align 8, !tbaa !185
  %tobool214 = icmp ne ptr %108, null
  %lnot215 = xor i1 %tobool214, true
  %lnot217 = xor i1 %lnot215, true
  %lnot219 = xor i1 %lnot217, true
  %lnot.ext220 = zext i1 %lnot219 to i32
  %conv221 = sext i32 %lnot.ext220 to i64
  %expval222 = call i64 @llvm.expect.i64(i64 %conv221, i64 0)
  %tobool223 = icmp ne i64 %expval222, 0
  br i1 %tobool223, label %if.then224, label %if.end225

if.then224:                                       ; preds = %if.end210
  %109 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %109, ptr %__pyx_filename, align 8, !tbaa !5
  %110 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 114, ptr %__pyx_lineno, align 4, !tbaa !9
  %111 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5178, ptr %__pyx_clineno, align 4, !tbaa !9
  %112 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.end225:                                        ; preds = %if.end210
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp226) #13
  %arrayidx227 = getelementptr [7 x ptr], ptr %values, i64 0, i64 3
  %113 = load ptr, ptr %arrayidx227, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_d_dc_double(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp226, ptr noundef %113, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_centers_new, ptr align 8 %tmp226, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp226) #13
  %memview228 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 0
  %114 = load ptr, ptr %memview228, align 8, !tbaa !185
  %tobool229 = icmp ne ptr %114, null
  %lnot230 = xor i1 %tobool229, true
  %lnot232 = xor i1 %lnot230, true
  %lnot234 = xor i1 %lnot232, true
  %lnot.ext235 = zext i1 %lnot234 to i32
  %conv236 = sext i32 %lnot.ext235 to i64
  %expval237 = call i64 @llvm.expect.i64(i64 %conv236, i64 0)
  %tobool238 = icmp ne i64 %expval237, 0
  br i1 %tobool238, label %if.then239, label %if.end240

if.then239:                                       ; preds = %if.end225
  %115 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %115, ptr %__pyx_filename, align 8, !tbaa !5
  %116 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 115, ptr %__pyx_lineno, align 4, !tbaa !9
  %117 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5179, ptr %__pyx_clineno, align 4, !tbaa !9
  %118 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.end240:                                        ; preds = %if.end225
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp241) #13
  %arrayidx242 = getelementptr [7 x ptr], ptr %values, i64 0, i64 4
  %119 = load ptr, ptr %arrayidx242, align 16, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_double(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp241, ptr noundef %119, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_weight_sums, ptr align 8 %tmp241, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp241) #13
  %memview243 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 0
  %120 = load ptr, ptr %memview243, align 8, !tbaa !185
  %tobool244 = icmp ne ptr %120, null
  %lnot245 = xor i1 %tobool244, true
  %lnot247 = xor i1 %lnot245, true
  %lnot249 = xor i1 %lnot247, true
  %lnot.ext250 = zext i1 %lnot249 to i32
  %conv251 = sext i32 %lnot.ext250 to i64
  %expval252 = call i64 @llvm.expect.i64(i64 %conv251, i64 0)
  %tobool253 = icmp ne i64 %expval252, 0
  br i1 %tobool253, label %if.then254, label %if.end255

if.then254:                                       ; preds = %if.end240
  %121 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %121, ptr %__pyx_filename, align 8, !tbaa !5
  %122 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 116, ptr %__pyx_lineno, align 4, !tbaa !9
  %123 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5180, ptr %__pyx_clineno, align 4, !tbaa !9
  %124 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.end255:                                        ; preds = %if.end240
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp256) #13
  %arrayidx257 = getelementptr [7 x ptr], ptr %values, i64 0, i64 5
  %125 = load ptr, ptr %arrayidx257, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_int__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp256, ptr noundef %125, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_labels, ptr align 8 %tmp256, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp256) #13
  %memview258 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_labels, i32 0, i32 0
  %126 = load ptr, ptr %memview258, align 8, !tbaa !185
  %tobool259 = icmp ne ptr %126, null
  %lnot260 = xor i1 %tobool259, true
  %lnot262 = xor i1 %lnot260, true
  %lnot264 = xor i1 %lnot262, true
  %lnot.ext265 = zext i1 %lnot264 to i32
  %conv266 = sext i32 %lnot.ext265 to i64
  %expval267 = call i64 @llvm.expect.i64(i64 %conv266, i64 0)
  %tobool268 = icmp ne i64 %expval267, 0
  br i1 %tobool268, label %if.then269, label %if.end270

if.then269:                                       ; preds = %if.end255
  %127 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %127, ptr %__pyx_filename, align 8, !tbaa !5
  %128 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 117, ptr %__pyx_lineno, align 4, !tbaa !9
  %129 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5181, ptr %__pyx_clineno, align 4, !tbaa !9
  %130 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.end270:                                        ; preds = %if.end255
  %arrayidx271 = getelementptr [7 x ptr], ptr %values, i64 0, i64 6
  %131 = load ptr, ptr %arrayidx271, align 16, !tbaa !5
  %call272 = call i32 @__Pyx_PyInt_As_int(ptr noundef %131)
  store i32 %call272, ptr %__pyx_v_n_threads, align 4, !tbaa !9
  %132 = load i32, ptr %__pyx_v_n_threads, align 4, !tbaa !9
  %cmp273 = icmp eq i32 %132, -1
  br i1 %cmp273, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end270
  %call275 = call ptr @PyErr_Occurred()
  %tobool276 = icmp ne ptr %call275, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end270
  %133 = phi i1 [ false, %if.end270 ], [ %tobool276, %land.rhs ]
  %lnot277 = xor i1 %133, true
  %lnot279 = xor i1 %lnot277, true
  %lnot.ext280 = zext i1 %lnot279 to i32
  %conv281 = sext i32 %lnot.ext280 to i64
  %expval282 = call i64 @llvm.expect.i64(i64 %conv281, i64 0)
  %tobool283 = icmp ne i64 %expval282, 0
  br i1 %tobool283, label %if.then284, label %if.end285

if.then284:                                       ; preds = %land.end
  %134 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %134, ptr %__pyx_filename, align 8, !tbaa !5
  %135 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 118, ptr %__pyx_lineno, align 4, !tbaa !9
  %136 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5182, ptr %__pyx_clineno, align 4, !tbaa !9
  %137 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

if.end285:                                        ; preds = %land.end
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup286

cleanup286:                                       ; preds = %if.then284, %if.then269, %if.then254, %if.then239, %if.then224, %if.then209, %if.then172, %if.end285, %cleanup
  call void @llvm.lifetime.end.p0(i64 56, ptr %values) #13
  %cleanup.dest287 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest287, label %cleanup291 [
    i32 0, label %cleanup.cont288
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont288:                                  ; preds = %cleanup286
  br label %__pyx_L4_argument_unpacking_done

__pyx_L5_argtuple_error:                          ; preds = %cleanup286
  %138 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call289 = call i64 @PyTuple_GET_SIZE(ptr noundef %138)
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.293, i32 noundef 1, i64 noundef 7, i64 noundef 7, i64 noundef %call289)
  %139 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %139, ptr %__pyx_filename, align 8, !tbaa !5
  %140 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %141 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5186, ptr %__pyx_clineno, align 4, !tbaa !9
  %142 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

__pyx_L3_error:                                   ; preds = %cleanup286, %__pyx_L5_argtuple_error
  %143 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %144 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %145 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.294, i32 noundef %143, i32 noundef %144, ptr noundef %145)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup291

__pyx_L4_argument_unpacking_done:                 ; preds = %cleanup.cont288
  %146 = load ptr, ptr %__pyx_self.addr, align 8, !tbaa !5
  %147 = load ptr, ptr %__pyx_v_X, align 8, !tbaa !5
  %148 = load i32, ptr %__pyx_v_n_threads, align 4, !tbaa !9
  %call290 = call ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_12_minibatch_update_sparse(ptr noundef %146, ptr noundef %147, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_sample_weight, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_old, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_new, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_weight_sums, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_labels, i32 noundef %148)
  store ptr %call290, ptr %__pyx_r, align 8, !tbaa !5
  %149 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  store ptr %149, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup291

cleanup291:                                       ; preds = %__pyx_L4_argument_unpacking_done, %__pyx_L3_error, %cleanup286
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_threads) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_labels) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_weight_sums) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_centers_new) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_centers_old) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_sample_weight) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_X) #13
  %150 = load ptr, ptr %retval, align 8
  ret ptr %150
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_12_minibatch_update_sparse(ptr noundef %__pyx_self, ptr noundef %__pyx_v_X, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_sample_weight, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_old, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_new, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_weight_sums, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_labels, i32 noundef %__pyx_v_n_threads) #0 {
entry:
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_v_X.addr = alloca ptr, align 8
  %__pyx_v_n_threads.addr = alloca i32, align 4
  %__pyx_v_X_data = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_X_indices = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_X_indptr = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_n_samples = alloca i32, align 4
  %__pyx_v_n_clusters = alloca i32, align 4
  %__pyx_v_cluster_idx = alloca i32, align 4
  %__pyx_v_indices = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_t_3 = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_t_7 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca %struct.__Pyx_memviewslice, align 8
  %tmp30 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp59 = alloca %struct.__Pyx_memviewslice, align 8
  %_save = alloca ptr, align 8
  %0 = call i32 @__kmpc_global_thread_num(ptr @3)
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_X, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  store i32 %__pyx_v_n_threads, ptr %__pyx_v_n_threads.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_X_data) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_X_data, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_X_indices) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_X_indices, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_X_indptr) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_v_X_indptr, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_samples) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_clusters) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_cluster_idx) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_t_2) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_t_2, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_t_3) #13
  call void @llvm.memset.p0.i64(ptr align 8 %__pyx_t_3, i8 0, i64 208, i1 false)
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %1 = load ptr, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  %2 = load ptr, ptr @__pyx_n_s_data, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %1, ptr noundef %2)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %3, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %4, ptr %__pyx_filename, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 147, ptr %__pyx_lineno, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5228, ptr %__pyx_clineno, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp) #13
  %8 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_double(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp, ptr noundef %8, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_2, ptr align 8 %tmp, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp) #13
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_2, i32 0, i32 0
  %9 = load ptr, ptr %memview, align 8, !tbaa !185
  %tobool4 = icmp ne ptr %9, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end
  %10 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %10, ptr %__pyx_filename, align 8, !tbaa !5
  %11 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 147, ptr %__pyx_lineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5230, ptr %__pyx_clineno, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end15:                                         ; preds = %if.end
  %14 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %14)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_X_data, ptr align 8 %__pyx_t_2, i64 208, i1 false), !tbaa.struct !187
  %memview16 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_2, i32 0, i32 0
  store ptr null, ptr %memview16, align 8, !tbaa !185
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_2, i32 0, i32 1
  store ptr null, ptr %data, align 8, !tbaa !188
  %15 = load ptr, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  %16 = load ptr, ptr @__pyx_n_s_indices, align 8, !tbaa !5
  %call17 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %15, ptr noundef %16)
  store ptr %call17, ptr %__pyx_t_1, align 8, !tbaa !5
  %17 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool18 = icmp ne ptr %17, null
  %lnot19 = xor i1 %tobool18, true
  %lnot21 = xor i1 %lnot19, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.end15
  %18 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %18, ptr %__pyx_filename, align 8, !tbaa !5
  %19 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 148, ptr %__pyx_lineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5243, ptr %__pyx_clineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end29:                                         ; preds = %if.end15
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp30) #13
  %22 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_int(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp30, ptr noundef %22, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_3, ptr align 8 %tmp30, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp30) #13
  %memview31 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_3, i32 0, i32 0
  %23 = load ptr, ptr %memview31, align 8, !tbaa !185
  %tobool32 = icmp ne ptr %23, null
  %lnot33 = xor i1 %tobool32, true
  %lnot35 = xor i1 %lnot33, true
  %lnot37 = xor i1 %lnot35, true
  %lnot.ext38 = zext i1 %lnot37 to i32
  %conv39 = sext i32 %lnot.ext38 to i64
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0)
  %tobool41 = icmp ne i64 %expval40, 0
  br i1 %tobool41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end29
  %24 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %24, ptr %__pyx_filename, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 148, ptr %__pyx_lineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5245, ptr %__pyx_clineno, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end43:                                         ; preds = %if.end29
  %28 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %28)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_X_indices, ptr align 8 %__pyx_t_3, i64 208, i1 false), !tbaa.struct !187
  %memview44 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_3, i32 0, i32 0
  store ptr null, ptr %memview44, align 8, !tbaa !185
  %data45 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_3, i32 0, i32 1
  store ptr null, ptr %data45, align 8, !tbaa !188
  %29 = load ptr, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  %30 = load ptr, ptr @__pyx_n_s_indptr, align 8, !tbaa !5
  %call46 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %29, ptr noundef %30)
  store ptr %call46, ptr %__pyx_t_1, align 8, !tbaa !5
  %31 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool47 = icmp ne ptr %31, null
  %lnot48 = xor i1 %tobool47, true
  %lnot50 = xor i1 %lnot48, true
  %lnot52 = xor i1 %lnot50, true
  %lnot.ext53 = zext i1 %lnot52 to i32
  %conv54 = sext i32 %lnot.ext53 to i64
  %expval55 = call i64 @llvm.expect.i64(i64 %conv54, i64 0)
  %tobool56 = icmp ne i64 %expval55, 0
  br i1 %tobool56, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.end43
  %32 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %32, ptr %__pyx_filename, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 149, ptr %__pyx_lineno, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5258, ptr %__pyx_clineno, align 4, !tbaa !9
  %35 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end58:                                         ; preds = %if.end43
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp59) #13
  %36 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_int(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp59, ptr noundef %36, i32 noundef 1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_3, ptr align 8 %tmp59, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp59) #13
  %memview60 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_3, i32 0, i32 0
  %37 = load ptr, ptr %memview60, align 8, !tbaa !185
  %tobool61 = icmp ne ptr %37, null
  %lnot62 = xor i1 %tobool61, true
  %lnot64 = xor i1 %lnot62, true
  %lnot66 = xor i1 %lnot64, true
  %lnot.ext67 = zext i1 %lnot66 to i32
  %conv68 = sext i32 %lnot.ext67 to i64
  %expval69 = call i64 @llvm.expect.i64(i64 %conv68, i64 0)
  %tobool70 = icmp ne i64 %expval69, 0
  br i1 %tobool70, label %if.then71, label %if.end72

if.then71:                                        ; preds = %if.end58
  %38 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %38, ptr %__pyx_filename, align 8, !tbaa !5
  %39 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 149, ptr %__pyx_lineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5260, ptr %__pyx_clineno, align 4, !tbaa !9
  %41 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end72:                                         ; preds = %if.end58
  %42 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %42)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_X_indptr, ptr align 8 %__pyx_t_3, i64 208, i1 false), !tbaa.struct !187
  %memview73 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_3, i32 0, i32 0
  store ptr null, ptr %memview73, align 8, !tbaa !185
  %data74 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_t_3, i32 0, i32 1
  store ptr null, ptr %data74, align 8, !tbaa !188
  %43 = load ptr, ptr %__pyx_v_X.addr, align 8, !tbaa !5
  %44 = load ptr, ptr @__pyx_n_s_shape, align 8, !tbaa !5
  %call75 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %43, ptr noundef %44)
  store ptr %call75, ptr %__pyx_t_1, align 8, !tbaa !5
  %45 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool76 = icmp ne ptr %45, null
  %lnot77 = xor i1 %tobool76, true
  %lnot79 = xor i1 %lnot77, true
  %lnot81 = xor i1 %lnot79, true
  %lnot.ext82 = zext i1 %lnot81 to i32
  %conv83 = sext i32 %lnot.ext82 to i64
  %expval84 = call i64 @llvm.expect.i64(i64 %conv83, i64 0)
  %tobool85 = icmp ne i64 %expval84, 0
  br i1 %tobool85, label %if.then86, label %if.end87

if.then86:                                        ; preds = %if.end72
  %46 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %46, ptr %__pyx_filename, align 8, !tbaa !5
  %47 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 150, ptr %__pyx_lineno, align 4, !tbaa !9
  %48 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5273, ptr %__pyx_clineno, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end87:                                         ; preds = %if.end72
  %50 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call88 = call ptr @__Pyx_GetItemInt_Fast(ptr noundef %50, i64 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  store ptr %call88, ptr %__pyx_t_4, align 8, !tbaa !5
  %51 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool89 = icmp ne ptr %51, null
  %lnot90 = xor i1 %tobool89, true
  %lnot92 = xor i1 %lnot90, true
  %lnot94 = xor i1 %lnot92, true
  %lnot.ext95 = zext i1 %lnot94 to i32
  %conv96 = sext i32 %lnot.ext95 to i64
  %expval97 = call i64 @llvm.expect.i64(i64 %conv96, i64 0)
  %tobool98 = icmp ne i64 %expval97, 0
  br i1 %tobool98, label %if.then99, label %if.end100

if.then99:                                        ; preds = %if.end87
  %52 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %52, ptr %__pyx_filename, align 8, !tbaa !5
  %53 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 150, ptr %__pyx_lineno, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5275, ptr %__pyx_clineno, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end100:                                        ; preds = %if.end87
  %56 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %56)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %call101 = call i32 @__Pyx_PyInt_As_int(ptr noundef %57)
  store i32 %call101, ptr %__pyx_t_5, align 4, !tbaa !9
  %58 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %cmp = icmp eq i32 %58, -1
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end100
  %call103 = call ptr @PyErr_Occurred()
  %tobool104 = icmp ne ptr %call103, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end100
  %59 = phi i1 [ false, %if.end100 ], [ %tobool104, %land.rhs ]
  %lnot105 = xor i1 %59, true
  %lnot107 = xor i1 %lnot105, true
  %lnot.ext108 = zext i1 %lnot107 to i32
  %conv109 = sext i32 %lnot.ext108 to i64
  %expval110 = call i64 @llvm.expect.i64(i64 %conv109, i64 0)
  %tobool111 = icmp ne i64 %expval110, 0
  br i1 %tobool111, label %if.then112, label %if.end113

if.then112:                                       ; preds = %land.end
  %60 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %60, ptr %__pyx_filename, align 8, !tbaa !5
  %61 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 150, ptr %__pyx_lineno, align 4, !tbaa !9
  %62 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 5278, ptr %__pyx_clineno, align 4, !tbaa !9
  %63 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end113:                                        ; preds = %land.end
  %64 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %64)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %65 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  store i32 %65, ptr %__pyx_v_n_samples, align 4, !tbaa !9
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 2
  %arrayidx = getelementptr [8 x i64], ptr %shape, i64 0, i64 0
  %66 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %conv114 = trunc i64 %66 to i32
  store i32 %conv114, ptr %__pyx_v_n_clusters, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %_save) #13
  %call115 = call ptr @PyEval_SaveThread()
  store ptr %call115, ptr %_save, align 8, !tbaa !5
  %67 = load i32, ptr %__pyx_v_n_threads.addr, align 4, !tbaa !9
  call void @__kmpc_push_num_threads(ptr @3, i32 %0, i32 %67)
  call void (ptr, i32, ptr, ...) @__kmpc_fork_call(ptr @3, i32 11, ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_12_minibatch_update_sparse.omp_outlined, ptr %__pyx_v_n_samples, ptr %__pyx_v_n_clusters, ptr %__pyx_v_cluster_idx, ptr %__pyx_v_X_data, ptr %__pyx_v_X_indices, ptr %__pyx_v_X_indptr, ptr %__pyx_v_sample_weight, ptr %__pyx_v_centers_old, ptr %__pyx_v_centers_new, ptr %__pyx_v_weight_sums, ptr %__pyx_v_labels)
  %68 = load ptr, ptr %_save, align 8, !tbaa !5
  call void @PyEval_RestoreThread(ptr noundef %68)
  br label %__pyx_L5

__pyx_L5:                                         ; preds = %if.end113
  call void @llvm.lifetime.end.p0(i64 8, ptr %_save) #13
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then112, %if.then99, %if.then86, %if.then71, %if.then57, %if.then42, %if.then28, %if.then14, %if.then
  %69 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %69)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_t_2, i32 noundef 1, i32 noundef 5411)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_t_3, i32 noundef 1, i32 noundef 5412)
  %70 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %70)
  %71 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %72 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %73 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.294, i32 noundef %71, i32 noundef %72, ptr noundef %73)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %__pyx_L5
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_X_data, i32 noundef 1, i32 noundef 5417)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_X_indices, i32 noundef 1, i32 noundef 5418)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_X_indptr, i32 noundef 1, i32 noundef 5419)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_sample_weight, i32 noundef 1, i32 noundef 5420)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_centers_old, i32 noundef 1, i32 noundef 5421)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_centers_new, i32 noundef 1, i32 noundef 5422)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_weight_sums, i32 noundef 1, i32 noundef 5423)
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_labels, i32 noundef 1, i32 noundef 5424)
  %74 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_cluster_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_clusters) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_samples) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_X_indptr) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_X_indices) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_X_data) #13
  ret ptr %74
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_12_minibatch_update_sparse.omp_outlined(ptr noalias noundef %.global_tid., ptr noalias noundef %.bound_tid., ptr noundef nonnull align 4 dereferenceable(4) %__pyx_v_n_samples, ptr noundef nonnull align 4 dereferenceable(4) %__pyx_v_n_clusters, ptr noundef nonnull align 4 dereferenceable(4) %__pyx_v_cluster_idx, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_X_data, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_X_indices, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_X_indptr, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_sample_weight, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_centers_old, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_centers_new, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_weight_sums, ptr noundef nonnull align 8 dereferenceable(208) %__pyx_v_labels) #11 {
entry:
  %.global_tid..addr = alloca ptr, align 8
  %.bound_tid..addr = alloca ptr, align 8
  %__pyx_v_n_samples.addr = alloca ptr, align 8
  %__pyx_v_n_clusters.addr = alloca ptr, align 8
  %__pyx_v_cluster_idx.addr = alloca ptr, align 8
  %__pyx_v_X_data.addr = alloca ptr, align 8
  %__pyx_v_X_indices.addr = alloca ptr, align 8
  %__pyx_v_X_indptr.addr = alloca ptr, align 8
  %__pyx_v_sample_weight.addr = alloca ptr, align 8
  %__pyx_v_centers_old.addr = alloca ptr, align 8
  %__pyx_v_centers_new.addr = alloca ptr, align 8
  %__pyx_v_weight_sums.addr = alloca ptr, align 8
  %__pyx_v_labels.addr = alloca ptr, align 8
  %__pyx_v_indices = alloca ptr, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_t_7 = alloca i32, align 4
  %.omp.iv = alloca i32, align 4
  %tmp = alloca i32, align 4
  %.capture_expr. = alloca i32, align 4
  %.capture_expr.3 = alloca i32, align 4
  %__pyx_t_67 = alloca i32, align 4
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %__pyx_v_cluster_idx10 = alloca i32, align 4
  %__pyx_t_611 = alloca i32, align 4
  store ptr %.global_tid., ptr %.global_tid..addr, align 8, !tbaa !5
  store ptr %.bound_tid., ptr %.bound_tid..addr, align 8, !tbaa !5
  store ptr %__pyx_v_n_samples, ptr %__pyx_v_n_samples.addr, align 8, !tbaa !5
  store ptr %__pyx_v_n_clusters, ptr %__pyx_v_n_clusters.addr, align 8, !tbaa !5
  store ptr %__pyx_v_cluster_idx, ptr %__pyx_v_cluster_idx.addr, align 8, !tbaa !5
  store ptr %__pyx_v_X_data, ptr %__pyx_v_X_data.addr, align 8, !tbaa !5
  store ptr %__pyx_v_X_indices, ptr %__pyx_v_X_indices.addr, align 8, !tbaa !5
  store ptr %__pyx_v_X_indptr, ptr %__pyx_v_X_indptr.addr, align 8, !tbaa !5
  store ptr %__pyx_v_sample_weight, ptr %__pyx_v_sample_weight.addr, align 8, !tbaa !5
  store ptr %__pyx_v_centers_old, ptr %__pyx_v_centers_old.addr, align 8, !tbaa !5
  store ptr %__pyx_v_centers_new, ptr %__pyx_v_centers_new.addr, align 8, !tbaa !5
  store ptr %__pyx_v_weight_sums, ptr %__pyx_v_weight_sums.addr, align 8, !tbaa !5
  store ptr %__pyx_v_labels, ptr %__pyx_v_labels.addr, align 8, !tbaa !5
  %0 = load ptr, ptr %__pyx_v_n_samples.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_v_n_clusters.addr, align 8, !tbaa !5
  %2 = load ptr, ptr %__pyx_v_cluster_idx.addr, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_v_X_data.addr, align 8, !tbaa !5
  %4 = load ptr, ptr %__pyx_v_X_indices.addr, align 8, !tbaa !5
  %5 = load ptr, ptr %__pyx_v_X_indptr.addr, align 8, !tbaa !5
  %6 = load ptr, ptr %__pyx_v_sample_weight.addr, align 8, !tbaa !5
  %7 = load ptr, ptr %__pyx_v_centers_old.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_v_centers_new.addr, align 8, !tbaa !5
  %9 = load ptr, ptr %__pyx_v_weight_sums.addr, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_v_labels.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_indices) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_7) #13
  store ptr inttoptr (i64 1 to ptr), ptr %__pyx_v_indices, align 8, !tbaa !5
  %11 = load i32, ptr %0, align 4, !tbaa !9
  %conv = sext i32 %11 to i64
  %mul = mul i64 %conv, 4
  %call = call noalias ptr @malloc(i64 noundef %mul) #17
  store ptr %call, ptr %__pyx_v_indices, align 8, !tbaa !5
  %12 = load i32, ptr %1, align 4, !tbaa !9
  store i32 %12, ptr %__pyx_t_5, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %sub = sub i32 %13, 0
  %add = add i32 %sub, 1
  %sub1 = sub i32 %add, 1
  %div = sdiv i32 %sub1, 1
  store i32 %div, ptr %__pyx_t_7, align 4, !tbaa !9
  %14 = load i32, ptr %__pyx_t_7, align 4, !tbaa !9
  %cmp = icmp sgt i32 %14, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.iv) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %.capture_expr.) #13
  %15 = load i32, ptr %__pyx_t_7, align 4, !tbaa !9
  store i32 %15, ptr %.capture_expr., align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.capture_expr.3) #13
  %16 = load i32, ptr %.capture_expr., align 4, !tbaa !9
  %sub4 = sub i32 %16, 0
  %div5 = sdiv i32 %sub4, 1
  %sub6 = sub i32 %div5, 1
  store i32 %sub6, ptr %.capture_expr.3, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_67) #13
  store i32 0, ptr %__pyx_t_67, align 4, !tbaa !9
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_67) #13
  %17 = load i32, ptr %.capture_expr., align 4, !tbaa !9
  %cmp8 = icmp slt i32 0, %17
  br i1 %cmp8, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.lb) #13
  store i32 0, ptr %.omp.lb, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.ub) #13
  %18 = load i32, ptr %.capture_expr.3, align 4, !tbaa !9
  store i32 %18, ptr %.omp.ub, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.stride) #13
  store i32 1, ptr %.omp.stride, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %.omp.is_last) #13
  store i32 0, ptr %.omp.is_last, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_cluster_idx10) #13
  %19 = load i32, ptr %2, align 4, !tbaa !9
  store i32 %19, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  %20 = load ptr, ptr %.global_tid..addr, align 8
  %21 = load i32, ptr %20, align 4, !tbaa !9
  call void @__kmpc_barrier(ptr @1, i32 %21)
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_611) #13
  %22 = load ptr, ptr %.global_tid..addr, align 8
  %23 = load i32, ptr %22, align 4, !tbaa !9
  call void @__kmpc_for_static_init_4(ptr @2, i32 %23, i32 34, ptr %.omp.is_last, ptr %.omp.lb, ptr %.omp.ub, ptr %.omp.stride, i32 1, i32 1)
  %24 = load i32, ptr %.omp.ub, align 4, !tbaa !9
  %25 = load i32, ptr %.capture_expr.3, align 4, !tbaa !9
  %cmp12 = icmp sgt i32 %24, %25
  br i1 %cmp12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %omp.precond.then
  %26 = load i32, ptr %.capture_expr.3, align 4, !tbaa !9
  br label %cond.end

cond.false:                                       ; preds = %omp.precond.then
  %27 = load i32, ptr %.omp.ub, align 4, !tbaa !9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %26, %cond.true ], [ %27, %cond.false ]
  store i32 %cond, ptr %.omp.ub, align 4, !tbaa !9
  %28 = load i32, ptr %.omp.lb, align 4, !tbaa !9
  store i32 %28, ptr %.omp.iv, align 4, !tbaa !9
  br label %omp.inner.for.cond

omp.inner.for.cond:                               ; preds = %omp.inner.for.inc, %cond.end
  %29 = load i32, ptr %.omp.iv, align 4, !tbaa !9
  %30 = load i32, ptr %.omp.ub, align 4, !tbaa !9
  %cmp14 = icmp sle i32 %29, %30
  br i1 %cmp14, label %omp.inner.for.body, label %omp.inner.for.cond.cleanup

omp.inner.for.cond.cleanup:                       ; preds = %omp.inner.for.cond
  br label %omp.inner.for.end

omp.inner.for.body:                               ; preds = %omp.inner.for.cond
  %31 = load i32, ptr %.omp.iv, align 4, !tbaa !9
  %mul16 = mul i32 %31, 1
  %add17 = add i32 0, %mul16
  store i32 %add17, ptr %__pyx_t_611, align 4, !tbaa !9
  %32 = load i32, ptr %__pyx_t_611, align 4, !tbaa !9
  %mul18 = mul i32 1, %32
  %add19 = add i32 0, %mul18
  store i32 %add19, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  %33 = load i32, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  %34 = load ptr, ptr %__pyx_v_indices, align 8, !tbaa !5
  call void @__pyx_fuse_1__pyx_f_7sklearn_7cluster_18_k_means_minibatch_update_center_sparse(i32 noundef %33, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %3, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %4, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %5, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %6, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %7, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %8, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %9, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %10, ptr noundef %34)
  br label %omp.body.continue

omp.body.continue:                                ; preds = %omp.inner.for.body
  br label %omp.inner.for.inc

omp.inner.for.inc:                                ; preds = %omp.body.continue
  %35 = load i32, ptr %.omp.iv, align 4, !tbaa !9
  %add20 = add i32 %35, 1
  store i32 %add20, ptr %.omp.iv, align 4, !tbaa !9
  br label %omp.inner.for.cond

omp.inner.for.end:                                ; preds = %omp.inner.for.cond.cleanup
  br label %omp.loop.exit

omp.loop.exit:                                    ; preds = %omp.inner.for.end
  %36 = load ptr, ptr %.global_tid..addr, align 8
  %37 = load i32, ptr %36, align 4, !tbaa !9
  call void @__kmpc_for_static_fini(ptr @2, i32 %37)
  %38 = load i32, ptr %.omp.is_last, align 4, !tbaa !9
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %.omp.lastprivate.then, label %.omp.lastprivate.done

.omp.lastprivate.then:                            ; preds = %omp.loop.exit
  %40 = load i32, ptr %__pyx_v_cluster_idx10, align 4, !tbaa !9
  store i32 %40, ptr %2, align 4, !tbaa !9
  br label %.omp.lastprivate.done

.omp.lastprivate.done:                            ; preds = %.omp.lastprivate.then, %omp.loop.exit
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_611) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_cluster_idx10) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.is_last) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.stride) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.ub) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.lb) #13
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %.omp.lastprivate.done, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %.capture_expr.3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.capture_expr.) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %.omp.iv) #13
  %41 = load ptr, ptr %.global_tid..addr, align 8
  %42 = load i32, ptr %41, align 4, !tbaa !9
  call void @__kmpc_barrier(ptr @1, i32 %42)
  br label %if.end

if.end:                                           ; preds = %omp.precond.end, %entry
  %43 = load ptr, ptr %__pyx_v_indices, align 8, !tbaa !5
  call void @free(ptr noundef %43) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_indices) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_fuse_1__pyx_f_7sklearn_7cluster_18_k_means_minibatch_update_center_sparse(i32 noundef %__pyx_v_cluster_idx, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_X_data, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_X_indices, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_X_indptr, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_sample_weight, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_old, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_centers_new, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_weight_sums, ptr noundef byval(%struct.__Pyx_memviewslice) align 8 %__pyx_v_labels, ptr noundef %__pyx_v_indices) #0 {
entry:
  %__pyx_v_cluster_idx.addr = alloca i32, align 4
  %__pyx_v_indices.addr = alloca ptr, align 8
  %__pyx_v_n_samples = alloca i32, align 4
  %__pyx_v_n_features = alloca i32, align 4
  %__pyx_v_alpha = alloca double, align 8
  %__pyx_v_n_indices = alloca i32, align 4
  %__pyx_v_k = alloca i32, align 4
  %__pyx_v_sample_idx = alloca i32, align 4
  %__pyx_v_feature_idx = alloca i32, align 4
  %__pyx_v_wsum = alloca double, align 8
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i64, align 8
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca i64, align 8
  %__pyx_t_7 = alloca i64, align 8
  %__pyx_t_8 = alloca i64, align 8
  %__pyx_t_9 = alloca i64, align 8
  %__pyx_t_10 = alloca i32, align 4
  %__pyx_t_11 = alloca i32, align 4
  %__pyx_t_12 = alloca i32, align 4
  %__pyx_t_13 = alloca i64, align 8
  store i32 %__pyx_v_cluster_idx, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  store ptr %__pyx_v_indices, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_samples) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_features) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_alpha) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_n_indices) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_k) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_sample_idx) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_feature_idx) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_wsum) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_13) #13
  %shape = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 2
  %arrayidx = getelementptr [8 x i64], ptr %shape, i64 0, i64 0
  %0 = load i64, ptr %arrayidx, align 8, !tbaa !27
  %conv = trunc i64 %0 to i32
  store i32 %conv, ptr %__pyx_v_n_samples, align 4, !tbaa !9
  %shape1 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 2
  %arrayidx2 = getelementptr [8 x i64], ptr %shape1, i64 0, i64 1
  %1 = load i64, ptr %arrayidx2, align 8, !tbaa !27
  %conv3 = trunc i64 %1 to i32
  store i32 %conv3, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store double 0.000000e+00, ptr %__pyx_v_wsum, align 8, !tbaa !225
  store i32 0, ptr %__pyx_v_k, align 4, !tbaa !9
  %2 = load i32, ptr %__pyx_v_n_samples, align 4, !tbaa !9
  store i32 %2, ptr %__pyx_t_1, align 4, !tbaa !9
  %3 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %3, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %6, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %7 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv5 = sext i32 %7 to i64
  store i64 %conv5, ptr %__pyx_t_4, align 8, !tbaa !27
  %data = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_labels, i32 0, i32 1
  %8 = load ptr, ptr %data, align 8, !tbaa !188
  %9 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr = getelementptr i32, ptr %8, i64 %9
  %10 = load i32, ptr %add.ptr, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %cmp6 = icmp eq i32 %10, %11
  %conv7 = zext i1 %cmp6 to i32
  %cmp8 = icmp ne i32 %conv7, 0
  %conv9 = zext i1 %cmp8 to i32
  store i32 %conv9, ptr %__pyx_t_5, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %13 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %14 = load ptr, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  %15 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  %idxprom = sext i32 %15 to i64
  %arrayidx10 = getelementptr i32, ptr %14, i64 %idxprom
  store i32 %13, ptr %arrayidx10, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv11 = sext i32 %16 to i64
  store i64 %conv11, ptr %__pyx_t_4, align 8, !tbaa !27
  %17 = load double, ptr %__pyx_v_wsum, align 8, !tbaa !225
  %data12 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 1
  %18 = load ptr, ptr %data12, align 8, !tbaa !188
  %19 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr13 = getelementptr double, ptr %18, i64 %19
  %20 = load double, ptr %add.ptr13, align 8, !tbaa !225
  %add = fadd double %17, %20
  store double %add, ptr %__pyx_v_wsum, align 8, !tbaa !225
  %21 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  %add14 = add i32 %21, 1
  store i32 %add14, ptr %__pyx_v_k, align 4, !tbaa !9
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %22 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add15 = add i32 %22, 1
  store i32 %add15, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !325

for.end:                                          ; preds = %for.cond
  %23 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  store i32 %23, ptr %__pyx_v_n_indices, align 4, !tbaa !9
  %24 = load double, ptr %__pyx_v_wsum, align 8, !tbaa !225
  %cmp16 = fcmp ogt double %24, 0.000000e+00
  %conv17 = zext i1 %cmp16 to i32
  %cmp18 = icmp ne i32 %conv17, 0
  %conv19 = zext i1 %cmp18 to i32
  store i32 %conv19, ptr %__pyx_t_5, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_t_5, align 4, !tbaa !9
  %tobool20 = icmp ne i32 %25, 0
  br i1 %tobool20, label %if.then21, label %if.end111

if.then21:                                        ; preds = %for.end
  %26 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %26, ptr %__pyx_t_1, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %27, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc44, %if.then21
  %28 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp23 = icmp slt i32 %28, %29
  br i1 %cmp23, label %for.body25, label %for.end46

for.body25:                                       ; preds = %for.cond22
  %30 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %30, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv26 = sext i32 %31 to i64
  store i64 %conv26, ptr %__pyx_t_4, align 8, !tbaa !27
  %32 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv27 = sext i32 %32 to i64
  store i64 %conv27, ptr %__pyx_t_6, align 8, !tbaa !27
  %33 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv28 = sext i32 %33 to i64
  store i64 %conv28, ptr %__pyx_t_7, align 8, !tbaa !27
  %34 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv29 = sext i32 %34 to i64
  store i64 %conv29, ptr %__pyx_t_8, align 8, !tbaa !27
  %35 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv30 = sext i32 %35 to i64
  store i64 %conv30, ptr %__pyx_t_9, align 8, !tbaa !27
  %data31 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 1
  %36 = load ptr, ptr %data31, align 8, !tbaa !188
  %37 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %strides = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 3
  %arrayidx32 = getelementptr [8 x i64], ptr %strides, i64 0, i64 0
  %38 = load i64, ptr %arrayidx32, align 8, !tbaa !27
  %mul = mul i64 %37, %38
  %add.ptr33 = getelementptr i8, ptr %36, i64 %mul
  %39 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %add.ptr34 = getelementptr double, ptr %add.ptr33, i64 %39
  %40 = load double, ptr %add.ptr34, align 8, !tbaa !225
  %data35 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 1
  %41 = load ptr, ptr %data35, align 8, !tbaa !188
  %42 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr36 = getelementptr double, ptr %41, i64 %42
  %43 = load double, ptr %add.ptr36, align 8, !tbaa !225
  %mul37 = fmul double %40, %43
  %data38 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %44 = load ptr, ptr %data38, align 8, !tbaa !188
  %45 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %strides39 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx40 = getelementptr [8 x i64], ptr %strides39, i64 0, i64 0
  %46 = load i64, ptr %arrayidx40, align 8, !tbaa !27
  %mul41 = mul i64 %45, %46
  %add.ptr42 = getelementptr i8, ptr %44, i64 %mul41
  %47 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %add.ptr43 = getelementptr double, ptr %add.ptr42, i64 %47
  store double %mul37, ptr %add.ptr43, align 8, !tbaa !225
  br label %for.inc44

for.inc44:                                        ; preds = %for.body25
  %48 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add45 = add i32 %48, 1
  store i32 %add45, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond22, !llvm.loop !326

for.end46:                                        ; preds = %for.cond22
  %49 = load i32, ptr %__pyx_v_n_indices, align 4, !tbaa !9
  store i32 %49, ptr %__pyx_t_1, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %50, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond47

for.cond47:                                       ; preds = %for.inc85, %for.end46
  %51 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %52 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp48 = icmp slt i32 %51, %52
  br i1 %cmp48, label %for.body50, label %for.end87

for.body50:                                       ; preds = %for.cond47
  %53 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %53, ptr %__pyx_v_k, align 4, !tbaa !9
  %54 = load ptr, ptr %__pyx_v_indices.addr, align 8, !tbaa !5
  %55 = load i32, ptr %__pyx_v_k, align 4, !tbaa !9
  %idxprom51 = sext i32 %55 to i64
  %arrayidx52 = getelementptr i32, ptr %54, i64 %idxprom51
  %56 = load i32, ptr %arrayidx52, align 4, !tbaa !9
  store i32 %56, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %57 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %add53 = add i32 %57, 1
  %conv54 = sext i32 %add53 to i64
  store i64 %conv54, ptr %__pyx_t_7, align 8, !tbaa !27
  %data55 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X_indptr, i32 0, i32 1
  %58 = load ptr, ptr %data55, align 8, !tbaa !188
  %59 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr56 = getelementptr i32, ptr %58, i64 %59
  %60 = load i32, ptr %add.ptr56, align 4, !tbaa !9
  store i32 %60, ptr %__pyx_t_10, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv57 = sext i32 %61 to i64
  store i64 %conv57, ptr %__pyx_t_7, align 8, !tbaa !27
  %62 = load i32, ptr %__pyx_t_10, align 4, !tbaa !9
  store i32 %62, ptr %__pyx_t_11, align 4, !tbaa !9
  %data58 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X_indptr, i32 0, i32 1
  %63 = load ptr, ptr %data58, align 8, !tbaa !188
  %64 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr59 = getelementptr i32, ptr %63, i64 %64
  %65 = load i32, ptr %add.ptr59, align 4, !tbaa !9
  store i32 %65, ptr %__pyx_t_12, align 4, !tbaa !9
  br label %for.cond60

for.cond60:                                       ; preds = %for.inc82, %for.body50
  %66 = load i32, ptr %__pyx_t_12, align 4, !tbaa !9
  %67 = load i32, ptr %__pyx_t_11, align 4, !tbaa !9
  %cmp61 = icmp slt i32 %66, %67
  br i1 %cmp61, label %for.body63, label %for.end84

for.body63:                                       ; preds = %for.cond60
  %68 = load i32, ptr %__pyx_t_12, align 4, !tbaa !9
  store i32 %68, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %69 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv64 = sext i32 %69 to i64
  store i64 %conv64, ptr %__pyx_t_6, align 8, !tbaa !27
  %70 = load i32, ptr %__pyx_v_sample_idx, align 4, !tbaa !9
  %conv65 = sext i32 %70 to i64
  store i64 %conv65, ptr %__pyx_t_4, align 8, !tbaa !27
  %71 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv66 = sext i32 %71 to i64
  store i64 %conv66, ptr %__pyx_t_9, align 8, !tbaa !27
  %72 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv67 = sext i32 %72 to i64
  store i64 %conv67, ptr %__pyx_t_8, align 8, !tbaa !27
  %data68 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X_indices, i32 0, i32 1
  %73 = load ptr, ptr %data68, align 8, !tbaa !188
  %74 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %add.ptr69 = getelementptr i32, ptr %73, i64 %74
  %75 = load i32, ptr %add.ptr69, align 4, !tbaa !9
  %conv70 = sext i32 %75 to i64
  store i64 %conv70, ptr %__pyx_t_13, align 8, !tbaa !27
  %data71 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_X_data, i32 0, i32 1
  %76 = load ptr, ptr %data71, align 8, !tbaa !188
  %77 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %add.ptr72 = getelementptr double, ptr %76, i64 %77
  %78 = load double, ptr %add.ptr72, align 8, !tbaa !225
  %data73 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_sample_weight, i32 0, i32 1
  %79 = load ptr, ptr %data73, align 8, !tbaa !188
  %80 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr74 = getelementptr double, ptr %79, i64 %80
  %81 = load double, ptr %add.ptr74, align 8, !tbaa !225
  %data76 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %82 = load ptr, ptr %data76, align 8, !tbaa !188
  %83 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %strides77 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx78 = getelementptr [8 x i64], ptr %strides77, i64 0, i64 0
  %84 = load i64, ptr %arrayidx78, align 8, !tbaa !27
  %mul79 = mul i64 %83, %84
  %add.ptr80 = getelementptr i8, ptr %82, i64 %mul79
  %85 = load i64, ptr %__pyx_t_13, align 8, !tbaa !27
  %add.ptr81 = getelementptr double, ptr %add.ptr80, i64 %85
  %86 = load double, ptr %add.ptr81, align 8, !tbaa !225
  %87 = call double @llvm.fmuladd.f64(double %78, double %81, double %86)
  store double %87, ptr %add.ptr81, align 8, !tbaa !225
  br label %for.inc82

for.inc82:                                        ; preds = %for.body63
  %88 = load i32, ptr %__pyx_t_12, align 4, !tbaa !9
  %add83 = add i32 %88, 1
  store i32 %add83, ptr %__pyx_t_12, align 4, !tbaa !9
  br label %for.cond60, !llvm.loop !327

for.end84:                                        ; preds = %for.cond60
  br label %for.inc85

for.inc85:                                        ; preds = %for.end84
  %89 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add86 = add i32 %89, 1
  store i32 %add86, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond47, !llvm.loop !328

for.end87:                                        ; preds = %for.cond47
  %90 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv88 = sext i32 %90 to i64
  store i64 %conv88, ptr %__pyx_t_7, align 8, !tbaa !27
  %91 = load double, ptr %__pyx_v_wsum, align 8, !tbaa !225
  %data89 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 1
  %92 = load ptr, ptr %data89, align 8, !tbaa !188
  %93 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr90 = getelementptr double, ptr %92, i64 %93
  %94 = load double, ptr %add.ptr90, align 8, !tbaa !225
  %add91 = fadd double %94, %91
  store double %add91, ptr %add.ptr90, align 8, !tbaa !225
  %95 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv92 = sext i32 %95 to i64
  store i64 %conv92, ptr %__pyx_t_7, align 8, !tbaa !27
  %data93 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_weight_sums, i32 0, i32 1
  %96 = load ptr, ptr %data93, align 8, !tbaa !188
  %97 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr94 = getelementptr double, ptr %96, i64 %97
  %98 = load double, ptr %add.ptr94, align 8, !tbaa !225
  %div = fdiv double 1.000000e+00, %98
  store double %div, ptr %__pyx_v_alpha, align 8, !tbaa !225
  %99 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %99, ptr %__pyx_t_1, align 4, !tbaa !9
  %100 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %100, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond95

for.cond95:                                       ; preds = %for.inc108, %for.end87
  %101 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %102 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp96 = icmp slt i32 %101, %102
  br i1 %cmp96, label %for.body98, label %for.end110

for.body98:                                       ; preds = %for.cond95
  %103 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %103, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %104 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv99 = sext i32 %104 to i64
  store i64 %conv99, ptr %__pyx_t_7, align 8, !tbaa !27
  %105 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv100 = sext i32 %105 to i64
  store i64 %conv100, ptr %__pyx_t_4, align 8, !tbaa !27
  %106 = load double, ptr %__pyx_v_alpha, align 8, !tbaa !225
  %data101 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %107 = load ptr, ptr %data101, align 8, !tbaa !188
  %108 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %strides102 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx103 = getelementptr [8 x i64], ptr %strides102, i64 0, i64 0
  %109 = load i64, ptr %arrayidx103, align 8, !tbaa !27
  %mul104 = mul i64 %108, %109
  %add.ptr105 = getelementptr i8, ptr %107, i64 %mul104
  %110 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %add.ptr106 = getelementptr double, ptr %add.ptr105, i64 %110
  %111 = load double, ptr %add.ptr106, align 8, !tbaa !225
  %mul107 = fmul double %111, %106
  store double %mul107, ptr %add.ptr106, align 8, !tbaa !225
  br label %for.inc108

for.inc108:                                       ; preds = %for.body98
  %112 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add109 = add i32 %112, 1
  store i32 %add109, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond95, !llvm.loop !329

for.end110:                                       ; preds = %for.cond95
  br label %__pyx_L6

if.end111:                                        ; preds = %for.end
  %113 = load i32, ptr %__pyx_v_n_features, align 4, !tbaa !9
  store i32 %113, ptr %__pyx_t_1, align 4, !tbaa !9
  %114 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  store i32 %114, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 0, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond112

for.cond112:                                      ; preds = %for.inc132, %if.end111
  %115 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %116 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp113 = icmp slt i32 %115, %116
  br i1 %cmp113, label %for.body115, label %for.end134

for.body115:                                      ; preds = %for.cond112
  %117 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %117, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %118 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv116 = sext i32 %118 to i64
  store i64 %conv116, ptr %__pyx_t_4, align 8, !tbaa !27
  %119 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv117 = sext i32 %119 to i64
  store i64 %conv117, ptr %__pyx_t_7, align 8, !tbaa !27
  %120 = load i32, ptr %__pyx_v_cluster_idx.addr, align 4, !tbaa !9
  %conv118 = sext i32 %120 to i64
  store i64 %conv118, ptr %__pyx_t_6, align 8, !tbaa !27
  %121 = load i32, ptr %__pyx_v_feature_idx, align 4, !tbaa !9
  %conv119 = sext i32 %121 to i64
  store i64 %conv119, ptr %__pyx_t_9, align 8, !tbaa !27
  %data120 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 1
  %122 = load ptr, ptr %data120, align 8, !tbaa !188
  %123 = load i64, ptr %__pyx_t_4, align 8, !tbaa !27
  %strides121 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_old, i32 0, i32 3
  %arrayidx122 = getelementptr [8 x i64], ptr %strides121, i64 0, i64 0
  %124 = load i64, ptr %arrayidx122, align 8, !tbaa !27
  %mul123 = mul i64 %123, %124
  %add.ptr124 = getelementptr i8, ptr %122, i64 %mul123
  %125 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %add.ptr125 = getelementptr double, ptr %add.ptr124, i64 %125
  %126 = load double, ptr %add.ptr125, align 8, !tbaa !225
  %data126 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 1
  %127 = load ptr, ptr %data126, align 8, !tbaa !188
  %128 = load i64, ptr %__pyx_t_6, align 8, !tbaa !27
  %strides127 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_centers_new, i32 0, i32 3
  %arrayidx128 = getelementptr [8 x i64], ptr %strides127, i64 0, i64 0
  %129 = load i64, ptr %arrayidx128, align 8, !tbaa !27
  %mul129 = mul i64 %128, %129
  %add.ptr130 = getelementptr i8, ptr %127, i64 %mul129
  %130 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %add.ptr131 = getelementptr double, ptr %add.ptr130, i64 %130
  store double %126, ptr %add.ptr131, align 8, !tbaa !225
  br label %for.inc132

for.inc132:                                       ; preds = %for.body115
  %131 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %add133 = add i32 %131, 1
  store i32 %add133, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %for.cond112, !llvm.loop !330

for.end134:                                       ; preds = %for.cond112
  br label %__pyx_L6

__pyx_L6:                                         ; preds = %for.end134, %for.end110
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_13) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_wsum) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_feature_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_sample_idx) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_k) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_indices) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_alpha) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_features) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_n_samples) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_3_minibatch_update_sparse(ptr noundef %__pyx_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_signatures = alloca ptr, align 8
  %__pyx_v_args = alloca ptr, align 8
  %__pyx_v_kwargs = alloca ptr, align 8
  %__pyx_v_defaults = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %values = alloca [4 x ptr], align 16
  %kw_args = alloca i64, align 8
  %pos_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !5
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_signatures) #13
  store ptr null, ptr %__pyx_v_signatures, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_args) #13
  store ptr null, ptr %__pyx_v_args, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_kwargs) #13
  store ptr null, ptr %__pyx_v_kwargs, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_defaults) #13
  store ptr null, ptr %__pyx_v_defaults, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 32, ptr %values) #13
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 32, i1 false)
  %0 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else105

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos_args) #13
  %1 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1)
  store i64 %call, ptr %pos_args, align 8, !tbaa !27
  %2 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %2, label %sw.default [
    i64 4, label %sw.bb
    i64 3, label %sw.bb4
    i64 2, label %sw.bb8
    i64 1, label %sw.bb12
    i64 0, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.then
  %3 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 3
  %4 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %arrayidx3 = getelementptr [4 x ptr], ptr %values, i64 0, i64 3
  store ptr %4, ptr %arrayidx3, align 8, !tbaa !5
  br label %sw.bb4

sw.bb4:                                           ; preds = %if.then, %sw.bb
  %5 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %5, i32 0, i32 1
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 2
  %6 = load ptr, ptr %arrayidx6, align 8, !tbaa !5
  %arrayidx7 = getelementptr [4 x ptr], ptr %values, i64 0, i64 2
  store ptr %6, ptr %arrayidx7, align 16, !tbaa !5
  br label %sw.bb8

sw.bb8:                                           ; preds = %if.then, %sw.bb4
  %7 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item9 = getelementptr inbounds %struct.PyTupleObject, ptr %7, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x ptr], ptr %ob_item9, i64 0, i64 1
  %8 = load ptr, ptr %arrayidx10, align 8, !tbaa !5
  %arrayidx11 = getelementptr [4 x ptr], ptr %values, i64 0, i64 1
  store ptr %8, ptr %arrayidx11, align 8, !tbaa !5
  br label %sw.bb12

sw.bb12:                                          ; preds = %if.then, %sw.bb8
  %9 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item13 = getelementptr inbounds %struct.PyTupleObject, ptr %9, i32 0, i32 1
  %arrayidx14 = getelementptr [1 x ptr], ptr %ob_item13, i64 0, i64 0
  %10 = load ptr, ptr %arrayidx14, align 8, !tbaa !5
  %arrayidx15 = getelementptr [4 x ptr], ptr %values, i64 0, i64 0
  store ptr %10, ptr %arrayidx15, align 16, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb12, %if.then
  %11 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %call16 = call i64 @PyDict_Size(ptr noundef %11)
  store i64 %call16, ptr %kw_args, align 8, !tbaa !27
  %12 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %12, label %sw.epilog80 [
    i64 0, label %sw.bb17
    i64 1, label %sw.bb29
    i64 2, label %sw.bb46
    i64 3, label %sw.bb63
  ]

sw.bb17:                                          ; preds = %sw.epilog
  %13 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %14 = load ptr, ptr @__pyx_n_s_signatures, align 8, !tbaa !5
  %15 = load ptr, ptr @__pyx_n_s_signatures, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %15, i32 0, i32 2
  %16 = load i64, ptr %hash, align 8, !tbaa !154
  %call18 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %13, ptr noundef %14, i64 noundef %16)
  %arrayidx19 = getelementptr [4 x ptr], ptr %values, i64 0, i64 0
  store ptr %call18, ptr %arrayidx19, align 16, !tbaa !5
  %cmp = icmp ne ptr %call18, null
  %lnot21 = xor i1 %cmp, true
  %lnot23 = xor i1 %lnot21, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %conv25 = sext i32 %lnot.ext24 to i64
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 1)
  %tobool27 = icmp ne i64 %expval26, 0
  br i1 %tobool27, label %if.then28, label %if.else

if.then28:                                        ; preds = %sw.bb17
  %17 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec = add i64 %17, -1
  store i64 %dec, ptr %kw_args, align 8, !tbaa !27
  br label %if.end

if.else:                                          ; preds = %sw.bb17
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then28
  br label %sw.bb29

sw.bb29:                                          ; preds = %sw.epilog, %if.end
  %18 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %19 = load ptr, ptr @__pyx_n_s_args, align 8, !tbaa !5
  %20 = load ptr, ptr @__pyx_n_s_args, align 8, !tbaa !5
  %hash30 = getelementptr inbounds %struct.PyASCIIObject, ptr %20, i32 0, i32 2
  %21 = load i64, ptr %hash30, align 8, !tbaa !154
  %call31 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %18, ptr noundef %19, i64 noundef %21)
  %arrayidx32 = getelementptr [4 x ptr], ptr %values, i64 0, i64 1
  store ptr %call31, ptr %arrayidx32, align 8, !tbaa !5
  %cmp33 = icmp ne ptr %call31, null
  %lnot35 = xor i1 %cmp33, true
  %lnot37 = xor i1 %lnot35, true
  %lnot.ext38 = zext i1 %lnot37 to i32
  %conv39 = sext i32 %lnot.ext38 to i64
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 1)
  %tobool41 = icmp ne i64 %expval40, 0
  br i1 %tobool41, label %if.then42, label %if.else44

if.then42:                                        ; preds = %sw.bb29
  %22 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec43 = add i64 %22, -1
  store i64 %dec43, ptr %kw_args, align 8, !tbaa !27
  br label %if.end45

if.else44:                                        ; preds = %sw.bb29
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.284, i32 noundef 1, i64 noundef 4, i64 noundef 4, i64 noundef 1)
  %23 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %23, ptr %__pyx_filename, align 8, !tbaa !5
  %24 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4239, ptr %__pyx_clineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end45:                                         ; preds = %if.then42
  br label %sw.bb46

sw.bb46:                                          ; preds = %sw.epilog, %if.end45
  %27 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %28 = load ptr, ptr @__pyx_n_s_kwargs, align 8, !tbaa !5
  %29 = load ptr, ptr @__pyx_n_s_kwargs, align 8, !tbaa !5
  %hash47 = getelementptr inbounds %struct.PyASCIIObject, ptr %29, i32 0, i32 2
  %30 = load i64, ptr %hash47, align 8, !tbaa !154
  %call48 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %27, ptr noundef %28, i64 noundef %30)
  %arrayidx49 = getelementptr [4 x ptr], ptr %values, i64 0, i64 2
  store ptr %call48, ptr %arrayidx49, align 16, !tbaa !5
  %cmp50 = icmp ne ptr %call48, null
  %lnot52 = xor i1 %cmp50, true
  %lnot54 = xor i1 %lnot52, true
  %lnot.ext55 = zext i1 %lnot54 to i32
  %conv56 = sext i32 %lnot.ext55 to i64
  %expval57 = call i64 @llvm.expect.i64(i64 %conv56, i64 1)
  %tobool58 = icmp ne i64 %expval57, 0
  br i1 %tobool58, label %if.then59, label %if.else61

if.then59:                                        ; preds = %sw.bb46
  %31 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec60 = add i64 %31, -1
  store i64 %dec60, ptr %kw_args, align 8, !tbaa !27
  br label %if.end62

if.else61:                                        ; preds = %sw.bb46
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.284, i32 noundef 1, i64 noundef 4, i64 noundef 4, i64 noundef 2)
  %32 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %32, ptr %__pyx_filename, align 8, !tbaa !5
  %33 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4245, ptr %__pyx_clineno, align 4, !tbaa !9
  %35 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end62:                                         ; preds = %if.then59
  br label %sw.bb63

sw.bb63:                                          ; preds = %sw.epilog, %if.end62
  %36 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %37 = load ptr, ptr @__pyx_n_s_defaults, align 8, !tbaa !5
  %38 = load ptr, ptr @__pyx_n_s_defaults, align 8, !tbaa !5
  %hash64 = getelementptr inbounds %struct.PyASCIIObject, ptr %38, i32 0, i32 2
  %39 = load i64, ptr %hash64, align 8, !tbaa !154
  %call65 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %36, ptr noundef %37, i64 noundef %39)
  %arrayidx66 = getelementptr [4 x ptr], ptr %values, i64 0, i64 3
  store ptr %call65, ptr %arrayidx66, align 8, !tbaa !5
  %cmp67 = icmp ne ptr %call65, null
  %lnot69 = xor i1 %cmp67, true
  %lnot71 = xor i1 %lnot69, true
  %lnot.ext72 = zext i1 %lnot71 to i32
  %conv73 = sext i32 %lnot.ext72 to i64
  %expval74 = call i64 @llvm.expect.i64(i64 %conv73, i64 1)
  %tobool75 = icmp ne i64 %expval74, 0
  br i1 %tobool75, label %if.then76, label %if.else78

if.then76:                                        ; preds = %sw.bb63
  %40 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec77 = add i64 %40, -1
  store i64 %dec77, ptr %kw_args, align 8, !tbaa !27
  br label %if.end79

if.else78:                                        ; preds = %sw.bb63
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.284, i32 noundef 1, i64 noundef 4, i64 noundef 4, i64 noundef 3)
  %41 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %41, ptr %__pyx_filename, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %43 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4251, ptr %__pyx_clineno, align 4, !tbaa !9
  %44 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end79:                                         ; preds = %if.then76
  br label %sw.epilog80

sw.epilog80:                                      ; preds = %if.end79, %sw.epilog
  %45 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp81 = icmp sgt i64 %45, 0
  %lnot83 = xor i1 %cmp81, true
  %lnot85 = xor i1 %lnot83, true
  %lnot.ext86 = zext i1 %lnot85 to i32
  %conv87 = sext i32 %lnot.ext86 to i64
  %expval88 = call i64 @llvm.expect.i64(i64 %conv87, i64 0)
  %tobool89 = icmp ne i64 %expval88, 0
  br i1 %tobool89, label %if.then90, label %if.end103

if.then90:                                        ; preds = %sw.epilog80
  %46 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %arraydecay = getelementptr inbounds [4 x ptr], ptr %values, i64 0, i64 0
  %47 = load i64, ptr %pos_args, align 8, !tbaa !27
  %call91 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %46, ptr noundef @__pyx_pw_7sklearn_7cluster_18_k_means_minibatch_3_minibatch_update_sparse.__pyx_pyargnames, ptr noundef null, ptr noundef %arraydecay, i64 noundef %47, ptr noundef @.str.284)
  %cmp92 = icmp slt i32 %call91, 0
  %lnot94 = xor i1 %cmp92, true
  %lnot96 = xor i1 %lnot94, true
  %lnot.ext97 = zext i1 %lnot96 to i32
  %conv98 = sext i32 %lnot.ext97 to i64
  %expval99 = call i64 @llvm.expect.i64(i64 %conv98, i64 0)
  %tobool100 = icmp ne i64 %expval99, 0
  br i1 %tobool100, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.then90
  %48 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %48, ptr %__pyx_filename, align 8, !tbaa !5
  %49 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %50 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4255, ptr %__pyx_clineno, align 4, !tbaa !9
  %51 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end102:                                        ; preds = %if.then90
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %sw.epilog80
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then101, %if.else78, %if.else61, %if.else44, %if.else, %sw.default, %if.end103
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup129 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end124

if.else105:                                       ; preds = %entry
  %52 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call106 = call i64 @PyTuple_GET_SIZE(ptr noundef %52)
  %cmp107 = icmp ne i64 %call106, 4
  br i1 %cmp107, label %if.then109, label %if.else110

if.then109:                                       ; preds = %if.else105
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup129

if.else110:                                       ; preds = %if.else105
  %53 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item111 = getelementptr inbounds %struct.PyTupleObject, ptr %53, i32 0, i32 1
  %arrayidx112 = getelementptr [1 x ptr], ptr %ob_item111, i64 0, i64 0
  %54 = load ptr, ptr %arrayidx112, align 8, !tbaa !5
  %arrayidx113 = getelementptr [4 x ptr], ptr %values, i64 0, i64 0
  store ptr %54, ptr %arrayidx113, align 16, !tbaa !5
  %55 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item114 = getelementptr inbounds %struct.PyTupleObject, ptr %55, i32 0, i32 1
  %arrayidx115 = getelementptr [1 x ptr], ptr %ob_item114, i64 0, i64 1
  %56 = load ptr, ptr %arrayidx115, align 8, !tbaa !5
  %arrayidx116 = getelementptr [4 x ptr], ptr %values, i64 0, i64 1
  store ptr %56, ptr %arrayidx116, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item117 = getelementptr inbounds %struct.PyTupleObject, ptr %57, i32 0, i32 1
  %arrayidx118 = getelementptr [1 x ptr], ptr %ob_item117, i64 0, i64 2
  %58 = load ptr, ptr %arrayidx118, align 8, !tbaa !5
  %arrayidx119 = getelementptr [4 x ptr], ptr %values, i64 0, i64 2
  store ptr %58, ptr %arrayidx119, align 16, !tbaa !5
  %59 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item120 = getelementptr inbounds %struct.PyTupleObject, ptr %59, i32 0, i32 1
  %arrayidx121 = getelementptr [1 x ptr], ptr %ob_item120, i64 0, i64 3
  %60 = load ptr, ptr %arrayidx121, align 8, !tbaa !5
  %arrayidx122 = getelementptr [4 x ptr], ptr %values, i64 0, i64 3
  store ptr %60, ptr %arrayidx122, align 8, !tbaa !5
  br label %if.end123

if.end123:                                        ; preds = %if.else110
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %cleanup.cont
  %arrayidx125 = getelementptr [4 x ptr], ptr %values, i64 0, i64 0
  %61 = load ptr, ptr %arrayidx125, align 16, !tbaa !5
  store ptr %61, ptr %__pyx_v_signatures, align 8, !tbaa !5
  %arrayidx126 = getelementptr [4 x ptr], ptr %values, i64 0, i64 1
  %62 = load ptr, ptr %arrayidx126, align 8, !tbaa !5
  store ptr %62, ptr %__pyx_v_args, align 8, !tbaa !5
  %arrayidx127 = getelementptr [4 x ptr], ptr %values, i64 0, i64 2
  %63 = load ptr, ptr %arrayidx127, align 16, !tbaa !5
  store ptr %63, ptr %__pyx_v_kwargs, align 8, !tbaa !5
  %arrayidx128 = getelementptr [4 x ptr], ptr %values, i64 0, i64 3
  %64 = load ptr, ptr %arrayidx128, align 8, !tbaa !5
  store ptr %64, ptr %__pyx_v_defaults, align 8, !tbaa !5
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup129

cleanup129:                                       ; preds = %if.then109, %if.end124, %cleanup
  call void @llvm.lifetime.end.p0(i64 32, ptr %values) #13
  %cleanup.dest130 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest130, label %cleanup134 [
    i32 0, label %cleanup.cont131
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont131:                                  ; preds = %cleanup129
  br label %__pyx_L4_argument_unpacking_done

__pyx_L5_argtuple_error:                          ; preds = %cleanup129
  %65 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call132 = call i64 @PyTuple_GET_SIZE(ptr noundef %65)
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.284, i32 noundef 1, i64 noundef 4, i64 noundef 4, i64 noundef %call132)
  %66 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %66, ptr %__pyx_filename, align 8, !tbaa !5
  %67 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %68 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4272, ptr %__pyx_clineno, align 4, !tbaa !9
  %69 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

__pyx_L3_error:                                   ; preds = %cleanup129, %__pyx_L5_argtuple_error
  %70 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %71 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %72 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.285, i32 noundef %70, i32 noundef %71, ptr noundef %72)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup134

__pyx_L4_argument_unpacking_done:                 ; preds = %cleanup.cont131
  %73 = load ptr, ptr %__pyx_self.addr, align 8, !tbaa !5
  %74 = load ptr, ptr %__pyx_v_signatures, align 8, !tbaa !5
  %75 = load ptr, ptr %__pyx_v_args, align 8, !tbaa !5
  %76 = load ptr, ptr %__pyx_v_kwargs, align 8, !tbaa !5
  %77 = load ptr, ptr %__pyx_v_defaults, align 8, !tbaa !5
  %call133 = call ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_2_minibatch_update_sparse(ptr noundef %73, ptr noundef %74, ptr noundef %75, ptr noundef %76, ptr noundef %77)
  store ptr %call133, ptr %__pyx_r, align 8, !tbaa !5
  %78 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  store ptr %78, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup134

cleanup134:                                       ; preds = %__pyx_L4_argument_unpacking_done, %__pyx_L3_error, %cleanup129
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_defaults) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_kwargs) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_signatures) #13
  %79 = load ptr, ptr %retval, align 8
  ret ptr %79
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_7sklearn_7cluster_18_k_means_minibatch_2_minibatch_update_sparse(ptr noundef %__pyx_self, ptr noundef %__pyx_v_signatures, ptr noundef %__pyx_v_args, ptr noundef %__pyx_v_kwargs, ptr noundef %__pyx_v_defaults) #0 {
entry:
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_v_signatures.addr = alloca ptr, align 8
  %__pyx_v_args.addr = alloca ptr, align 8
  %__pyx_v_kwargs.addr = alloca ptr, align 8
  %__pyx_v_defaults.addr = alloca ptr, align 8
  %__pyx_v_dest_sig = alloca ptr, align 8
  %__pyx_v_i = alloca i64, align 8
  %__pyx_v_ndarray = alloca ptr, align 8
  %__pyx_v_memslice = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_v_itemsize = alloca i64, align 8
  %__pyx_v_dtype_signed = alloca i32, align 4
  %__pyx_v_kind = alloca i8, align 1
  %__pyx_v_arg = alloca ptr, align 8
  %__pyx_v_dtype = alloca ptr, align 8
  %__pyx_v_arg_base = alloca ptr, align 8
  %__pyx_v_candidates = alloca ptr, align 8
  %__pyx_v_sig = alloca ptr, align 8
  %__pyx_v_match_found = alloca i32, align 4
  %__pyx_v_src_sig = alloca ptr, align 8
  %__pyx_v_dst_type = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca i64, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca i64, align 8
  %__pyx_t_8 = alloca %struct.__Pyx_memviewslice, align 8
  %__pyx_t_9 = alloca i64, align 8
  %__pyx_t_10 = alloca i32, align 4
  %__pyx_t_11 = alloca i32, align 4
  %__pyx_t_12 = alloca ptr, align 8
  %__pyx_t_13 = alloca ptr, align 8
  %__pyx_t_14 = alloca ptr, align 8
  %__pyx_t_15 = alloca i64, align 8
  %__pyx_t_16 = alloca i64, align 8
  %__pyx_t_17 = alloca i64, align 8
  %__pyx_t_18 = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %tmp488 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp521 = alloca %struct.__Pyx_memviewslice, align 8
  %tmp616 = alloca ptr, align 8
  %function = alloca ptr, align 8
  %tmp652 = alloca ptr, align 8
  %function709 = alloca ptr, align 8
  %tmp712 = alloca ptr, align 8
  %tmp737 = alloca ptr, align 8
  %tmp757 = alloca ptr, align 8
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_signatures, ptr %__pyx_v_signatures.addr, align 8, !tbaa !5
  store ptr %__pyx_v_args, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  store ptr %__pyx_v_kwargs, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  store ptr %__pyx_v_defaults, ptr %__pyx_v_defaults.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_dest_sig) #13
  store ptr null, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_ndarray) #13
  store ptr null, ptr %__pyx_v_ndarray, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_v_memslice) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_itemsize) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_dtype_signed) #13
  call void @llvm.lifetime.start.p0(i64 1, ptr %__pyx_v_kind) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_arg) #13
  store ptr null, ptr %__pyx_v_arg, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_dtype) #13
  store ptr null, ptr %__pyx_v_dtype, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_arg_base) #13
  store ptr null, ptr %__pyx_v_arg_base, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_candidates) #13
  store ptr null, ptr %__pyx_v_candidates, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_sig) #13
  store ptr null, ptr %__pyx_v_sig, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_match_found) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_src_sig) #13
  store ptr null, ptr %__pyx_v_src_sig, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_dst_type) #13
  store ptr null, ptr %__pyx_v_dst_type, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 208, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_12) #13
  store ptr null, ptr %__pyx_t_12, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_13) #13
  store ptr null, ptr %__pyx_t_13, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_14) #13
  store ptr null, ptr %__pyx_t_14, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_15) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_16) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_17) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_18) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %0)
  %call = call ptr @PyList_New(i64 noundef 1)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4326, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %6 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyList_SET_ITEM(ptr noundef %6, i64 noundef 0, ptr noundef @_Py_NoneStruct)
  %7 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %7, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %cmp = icmp ne ptr %8, @_Py_NoneStruct
  %conv4 = zext i1 %cmp to i32
  store i32 %conv4, ptr %__pyx_t_3, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp5 = icmp ne i32 %9, 0
  %conv6 = zext i1 %cmp5 to i32
  store i32 %conv6, ptr %__pyx_t_4, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool7 = icmp ne i32 %10, 0
  br i1 %tobool7, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.end
  br label %if.end9

if.else:                                          ; preds = %if.end
  %11 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  store i32 %11, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L4_bool_binop_done

if.end9:                                          ; preds = %if.then8
  %12 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %call10 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %12)
  store i32 %call10, ptr %__pyx_t_4, align 4, !tbaa !9
  %13 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp11 = icmp slt i32 %13, 0
  %lnot13 = xor i1 %cmp11, true
  %lnot15 = xor i1 %lnot13, true
  %lnot.ext16 = zext i1 %lnot15 to i32
  %conv17 = sext i32 %lnot.ext16 to i64
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 0)
  %tobool19 = icmp ne i64 %expval18, 0
  br i1 %tobool19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end9
  %14 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %14, ptr %__pyx_filename, align 8, !tbaa !5
  %15 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4340, ptr %__pyx_clineno, align 4, !tbaa !9
  %17 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end21:                                         ; preds = %if.end9
  %18 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool22 = icmp ne i32 %18, 0
  %lnot23 = xor i1 %tobool22, true
  %lnot.ext24 = zext i1 %lnot23 to i32
  %cmp25 = icmp ne i32 %lnot.ext24, 0
  %conv26 = zext i1 %cmp25 to i32
  store i32 %conv26, ptr %__pyx_t_3, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %19, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L4_bool_binop_done

__pyx_L4_bool_binop_done:                         ; preds = %if.end21, %if.else
  %20 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool27 = icmp ne i32 %20, 0
  br i1 %tobool27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %__pyx_L4_bool_binop_done
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  br label %do.body

do.body:                                          ; preds = %if.then28
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %21 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  store ptr %21, ptr %tmp, align 8, !tbaa !5
  store ptr @_Py_NoneStruct, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %22 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %22)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end29

if.end29:                                         ; preds = %do.end, %__pyx_L4_bool_binop_done
  %call30 = call ptr @__Pyx_ImportNumPyArrayTypeIfAvailable()
  store ptr %call30, ptr %__pyx_t_1, align 8, !tbaa !5
  %23 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool31 = icmp ne ptr %23, null
  %lnot32 = xor i1 %tobool31, true
  %lnot34 = xor i1 %lnot32, true
  %lnot36 = xor i1 %lnot34, true
  %lnot.ext37 = zext i1 %lnot36 to i32
  %conv38 = sext i32 %lnot.ext37 to i64
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0)
  %tobool40 = icmp ne i64 %expval39, 0
  br i1 %tobool40, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.end29
  %24 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %24, ptr %__pyx_filename, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %26 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4348, ptr %__pyx_clineno, align 4, !tbaa !9
  %27 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end42:                                         ; preds = %if.end29
  %28 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %28, ptr %__pyx_v_ndarray, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  store i64 -1, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %29 = load ptr, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  %cmp43 = icmp eq ptr %29, @_Py_NoneStruct
  %lnot45 = xor i1 %cmp43, true
  %lnot47 = xor i1 %lnot45, true
  %lnot.ext48 = zext i1 %lnot47 to i32
  %conv49 = sext i32 %lnot.ext48 to i64
  %expval50 = call i64 @llvm.expect.i64(i64 %conv49, i64 0)
  %tobool51 = icmp ne i64 %expval50, 0
  br i1 %tobool51, label %if.then52, label %if.end53

if.then52:                                        ; preds = %if.end42
  %30 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %30, ptr noundef @.str.116)
  %31 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %31, ptr %__pyx_filename, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %33 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4355, ptr %__pyx_clineno, align 4, !tbaa !9
  %34 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end53:                                         ; preds = %if.end42
  %35 = load ptr, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  %call54 = call i64 @PyTuple_GET_SIZE(ptr noundef %35)
  store i64 %call54, ptr %__pyx_t_5, align 8, !tbaa !27
  %36 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp55 = icmp eq i64 %36, -1
  %lnot57 = xor i1 %cmp55, true
  %lnot59 = xor i1 %lnot57, true
  %lnot.ext60 = zext i1 %lnot59 to i32
  %conv61 = sext i32 %lnot.ext60 to i64
  %expval62 = call i64 @llvm.expect.i64(i64 %conv61, i64 0)
  %tobool63 = icmp ne i64 %expval62, 0
  br i1 %tobool63, label %if.then64, label %if.end65

if.then64:                                        ; preds = %if.end53
  %37 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %37, ptr %__pyx_filename, align 8, !tbaa !5
  %38 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %39 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4357, ptr %__pyx_clineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end65:                                         ; preds = %if.end53
  %41 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp66 = icmp slt i64 1, %41
  %conv67 = zext i1 %cmp66 to i32
  %cmp68 = icmp ne i32 %conv67, 0
  %conv69 = zext i1 %cmp68 to i32
  store i32 %conv69, ptr %__pyx_t_2, align 4, !tbaa !9
  %42 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool70 = icmp ne i32 %42, 0
  br i1 %tobool70, label %if.then71, label %if.end83

if.then71:                                        ; preds = %if.end65
  %43 = load ptr, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  %cmp72 = icmp eq ptr %43, @_Py_NoneStruct
  %lnot74 = xor i1 %cmp72, true
  %lnot76 = xor i1 %lnot74, true
  %lnot.ext77 = zext i1 %lnot76 to i32
  %conv78 = sext i32 %lnot.ext77 to i64
  %expval79 = call i64 @llvm.expect.i64(i64 %conv78, i64 0)
  %tobool80 = icmp ne i64 %expval79, 0
  br i1 %tobool80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.then71
  %44 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %44, ptr noundef @.str.131)
  %45 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %45, ptr %__pyx_filename, align 8, !tbaa !5
  %46 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4362, ptr %__pyx_clineno, align 4, !tbaa !9
  %48 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end82:                                         ; preds = %if.then71
  %49 = load ptr, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %49, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 1
  %50 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  store ptr %50, ptr %__pyx_t_1, align 8, !tbaa !5
  %51 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %51)
  %52 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %52, ptr %__pyx_v_arg, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %__pyx_L6

if.end83:                                         ; preds = %if.end65
  %53 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %cmp84 = icmp ne ptr %53, @_Py_NoneStruct
  %conv85 = zext i1 %cmp84 to i32
  store i32 %conv85, ptr %__pyx_t_3, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp86 = icmp ne i32 %54, 0
  %conv87 = zext i1 %cmp86 to i32
  store i32 %conv87, ptr %__pyx_t_4, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %tobool88 = icmp ne i32 %55, 0
  br i1 %tobool88, label %if.then89, label %if.else90

if.then89:                                        ; preds = %if.end83
  br label %if.end91

if.else90:                                        ; preds = %if.end83
  %56 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  store i32 %56, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L7_bool_binop_done

if.end91:                                         ; preds = %if.then89
  %57 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %cmp92 = icmp eq ptr %57, @_Py_NoneStruct
  %lnot94 = xor i1 %cmp92, true
  %lnot96 = xor i1 %lnot94, true
  %lnot.ext97 = zext i1 %lnot96 to i32
  %conv98 = sext i32 %lnot.ext97 to i64
  %expval99 = call i64 @llvm.expect.i64(i64 %conv98, i64 0)
  %tobool100 = icmp ne i64 %expval99, 0
  br i1 %tobool100, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.end91
  %58 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %58, ptr noundef @.str.169)
  %59 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %59, ptr %__pyx_filename, align 8, !tbaa !5
  %60 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4379, ptr %__pyx_clineno, align 4, !tbaa !9
  %62 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end102:                                        ; preds = %if.end91
  %63 = load ptr, ptr @__pyx_n_s_sample_weight, align 8, !tbaa !5
  %64 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %call103 = call i32 @__Pyx_PyDict_ContainsTF(ptr noundef %63, ptr noundef %64, i32 noundef 2)
  store i32 %call103, ptr %__pyx_t_4, align 4, !tbaa !9
  %65 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp104 = icmp slt i32 %65, 0
  %lnot106 = xor i1 %cmp104, true
  %lnot108 = xor i1 %lnot106, true
  %lnot.ext109 = zext i1 %lnot108 to i32
  %conv110 = sext i32 %lnot.ext109 to i64
  %expval111 = call i64 @llvm.expect.i64(i64 %conv110, i64 0)
  %tobool112 = icmp ne i64 %expval111, 0
  br i1 %tobool112, label %if.then113, label %if.end114

if.then113:                                       ; preds = %if.end102
  %66 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %66, ptr %__pyx_filename, align 8, !tbaa !5
  %67 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %68 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4381, ptr %__pyx_clineno, align 4, !tbaa !9
  %69 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end114:                                        ; preds = %if.end102
  %70 = load i32, ptr %__pyx_t_4, align 4, !tbaa !9
  %cmp115 = icmp ne i32 %70, 0
  %conv116 = zext i1 %cmp115 to i32
  store i32 %conv116, ptr %__pyx_t_3, align 4, !tbaa !9
  %71 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  store i32 %71, ptr %__pyx_t_2, align 4, !tbaa !9
  br label %__pyx_L7_bool_binop_done

__pyx_L7_bool_binop_done:                         ; preds = %if.end114, %if.else90
  %72 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool117 = icmp ne i32 %72, 0
  br i1 %tobool117, label %if.then118, label %if.end143

if.then118:                                       ; preds = %__pyx_L7_bool_binop_done
  %73 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %cmp119 = icmp eq ptr %73, @_Py_NoneStruct
  %lnot121 = xor i1 %cmp119, true
  %lnot123 = xor i1 %lnot121, true
  %lnot.ext124 = zext i1 %lnot123 to i32
  %conv125 = sext i32 %lnot.ext124 to i64
  %expval126 = call i64 @llvm.expect.i64(i64 %conv125, i64 0)
  %tobool127 = icmp ne i64 %expval126, 0
  br i1 %tobool127, label %if.then128, label %if.end129

if.then128:                                       ; preds = %if.then118
  %74 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %74, ptr noundef @.str.131)
  %75 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %75, ptr %__pyx_filename, align 8, !tbaa !5
  %76 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %77 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4388, ptr %__pyx_clineno, align 4, !tbaa !9
  %78 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end129:                                        ; preds = %if.then118
  %79 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  %80 = load ptr, ptr @__pyx_n_s_sample_weight, align 8, !tbaa !5
  %call130 = call ptr @__Pyx_PyDict_GetItem(ptr noundef %79, ptr noundef %80)
  store ptr %call130, ptr %__pyx_t_1, align 8, !tbaa !5
  %81 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool131 = icmp ne ptr %81, null
  %lnot132 = xor i1 %tobool131, true
  %lnot134 = xor i1 %lnot132, true
  %lnot136 = xor i1 %lnot134, true
  %lnot.ext137 = zext i1 %lnot136 to i32
  %conv138 = sext i32 %lnot.ext137 to i64
  %expval139 = call i64 @llvm.expect.i64(i64 %conv138, i64 0)
  %tobool140 = icmp ne i64 %expval139, 0
  br i1 %tobool140, label %if.then141, label %if.end142

if.then141:                                       ; preds = %if.end129
  %82 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %82, ptr %__pyx_filename, align 8, !tbaa !5
  %83 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %84 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4390, ptr %__pyx_clineno, align 4, !tbaa !9
  %85 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end142:                                        ; preds = %if.end129
  %86 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %86, ptr %__pyx_v_arg, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %__pyx_L6

if.end143:                                        ; preds = %__pyx_L7_bool_binop_done
  %87 = load ptr, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  %cmp144 = icmp eq ptr %87, @_Py_NoneStruct
  %lnot146 = xor i1 %cmp144, true
  %lnot148 = xor i1 %lnot146, true
  %lnot.ext149 = zext i1 %lnot148 to i32
  %conv150 = sext i32 %lnot.ext149 to i64
  %expval151 = call i64 @llvm.expect.i64(i64 %conv150, i64 0)
  %tobool152 = icmp ne i64 %expval151, 0
  br i1 %tobool152, label %if.then153, label %if.end154

if.then153:                                       ; preds = %if.end143
  %88 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %88, ptr noundef @.str.116)
  %89 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %89, ptr %__pyx_filename, align 8, !tbaa !5
  %90 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %91 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4399, ptr %__pyx_clineno, align 4, !tbaa !9
  %92 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end154:                                        ; preds = %if.end143
  %93 = load ptr, ptr %__pyx_v_args.addr, align 8, !tbaa !5
  %call155 = call i64 @PyTuple_GET_SIZE(ptr noundef %93)
  store i64 %call155, ptr %__pyx_t_5, align 8, !tbaa !27
  %94 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp156 = icmp eq i64 %94, -1
  %lnot158 = xor i1 %cmp156, true
  %lnot160 = xor i1 %lnot158, true
  %lnot.ext161 = zext i1 %lnot160 to i32
  %conv162 = sext i32 %lnot.ext161 to i64
  %expval163 = call i64 @llvm.expect.i64(i64 %conv162, i64 0)
  %tobool164 = icmp ne i64 %expval163, 0
  br i1 %tobool164, label %if.then165, label %if.end166

if.then165:                                       ; preds = %if.end154
  %95 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %95, ptr %__pyx_filename, align 8, !tbaa !5
  %96 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %97 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4401, ptr %__pyx_clineno, align 4, !tbaa !9
  %98 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end166:                                        ; preds = %if.end154
  %99 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %call167 = call ptr @PyLong_FromSsize_t(i64 noundef %99)
  store ptr %call167, ptr %__pyx_t_1, align 8, !tbaa !5
  %100 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool168 = icmp ne ptr %100, null
  %lnot169 = xor i1 %tobool168, true
  %lnot171 = xor i1 %lnot169, true
  %lnot173 = xor i1 %lnot171, true
  %lnot.ext174 = zext i1 %lnot173 to i32
  %conv175 = sext i32 %lnot.ext174 to i64
  %expval176 = call i64 @llvm.expect.i64(i64 %conv175, i64 0)
  %tobool177 = icmp ne i64 %expval176, 0
  br i1 %tobool177, label %if.then178, label %if.end179

if.then178:                                       ; preds = %if.end166
  %101 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %101, ptr %__pyx_filename, align 8, !tbaa !5
  %102 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %103 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4402, ptr %__pyx_clineno, align 4, !tbaa !9
  %104 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end179:                                        ; preds = %if.end166
  %call180 = call ptr @PyTuple_New(i64 noundef 3)
  store ptr %call180, ptr %__pyx_t_6, align 8, !tbaa !5
  %105 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool181 = icmp ne ptr %105, null
  %lnot182 = xor i1 %tobool181, true
  %lnot184 = xor i1 %lnot182, true
  %lnot186 = xor i1 %lnot184, true
  %lnot.ext187 = zext i1 %lnot186 to i32
  %conv188 = sext i32 %lnot.ext187 to i64
  %expval189 = call i64 @llvm.expect.i64(i64 %conv188, i64 0)
  %tobool190 = icmp ne i64 %expval189, 0
  br i1 %tobool190, label %if.then191, label %if.end192

if.then191:                                       ; preds = %if.end179
  %106 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %106, ptr %__pyx_filename, align 8, !tbaa !5
  %107 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %108 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4404, ptr %__pyx_clineno, align 4, !tbaa !9
  %109 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end192:                                        ; preds = %if.end179
  %110 = load ptr, ptr @__pyx_int_7, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %110)
  %111 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %112 = load ptr, ptr @__pyx_int_7, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %111, i64 noundef 0, ptr noundef %112)
  %113 = load ptr, ptr @__pyx_n_s_s, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %113)
  %114 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %115 = load ptr, ptr @__pyx_n_s_s, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %114, i64 noundef 1, ptr noundef %115)
  %116 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %117 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @PyTuple_SET_ITEM(ptr noundef %116, i64 noundef 2, ptr noundef %117)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %118 = load ptr, ptr @__pyx_kp_s_Expected_at_least_d_argument_s_g, align 8, !tbaa !5
  %119 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call193 = call ptr @PyUnicode_Format(ptr noundef %118, ptr noundef %119)
  store ptr %call193, ptr %__pyx_t_1, align 8, !tbaa !5
  %120 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool194 = icmp ne ptr %120, null
  %lnot195 = xor i1 %tobool194, true
  %lnot197 = xor i1 %lnot195, true
  %lnot199 = xor i1 %lnot197, true
  %lnot.ext200 = zext i1 %lnot199 to i32
  %conv201 = sext i32 %lnot.ext200 to i64
  %expval202 = call i64 @llvm.expect.i64(i64 %conv201, i64 0)
  %tobool203 = icmp ne i64 %expval202, 0
  br i1 %tobool203, label %if.then204, label %if.end205

if.then204:                                       ; preds = %if.end192
  %121 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %121, ptr %__pyx_filename, align 8, !tbaa !5
  %122 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %123 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4415, ptr %__pyx_clineno, align 4, !tbaa !9
  %124 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end205:                                        ; preds = %if.end192
  %125 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %125)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %126 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %127 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call206 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %126, ptr noundef %127)
  store ptr %call206, ptr %__pyx_t_6, align 8, !tbaa !5
  %128 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool207 = icmp ne ptr %128, null
  %lnot208 = xor i1 %tobool207, true
  %lnot210 = xor i1 %lnot208, true
  %lnot212 = xor i1 %lnot210, true
  %lnot.ext213 = zext i1 %lnot212 to i32
  %conv214 = sext i32 %lnot.ext213 to i64
  %expval215 = call i64 @llvm.expect.i64(i64 %conv214, i64 0)
  %tobool216 = icmp ne i64 %expval215, 0
  br i1 %tobool216, label %if.then217, label %if.end218

if.then217:                                       ; preds = %if.end205
  %129 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %129, ptr %__pyx_filename, align 8, !tbaa !5
  %130 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %131 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4418, ptr %__pyx_clineno, align 4, !tbaa !9
  %132 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end218:                                        ; preds = %if.end205
  %133 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %133)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %134 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %134, ptr noundef null, ptr noundef null, ptr noundef null)
  %135 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %135)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %136 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %136, ptr %__pyx_filename, align 8, !tbaa !5
  %137 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %138 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4423, ptr %__pyx_clineno, align 4, !tbaa !9
  %139 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

__pyx_L6:                                         ; preds = %if.end142, %if.end82
  br label %while.cond

while.cond:                                       ; preds = %__pyx_L6
  br label %while.body

while.body:                                       ; preds = %while.cond
  %140 = load ptr, ptr %__pyx_v_ndarray, align 8, !tbaa !5
  %cmp219 = icmp ne ptr %140, @_Py_NoneStruct
  %conv220 = zext i1 %cmp219 to i32
  store i32 %conv220, ptr %__pyx_t_2, align 4, !tbaa !9
  %141 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp221 = icmp ne i32 %141, 0
  %conv222 = zext i1 %cmp221 to i32
  store i32 %conv222, ptr %__pyx_t_3, align 4, !tbaa !9
  %142 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool223 = icmp ne i32 %142, 0
  br i1 %tobool223, label %if.then224, label %if.end473

if.then224:                                       ; preds = %while.body
  %143 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  %call225 = call ptr @Py_TYPE(ptr noundef %143)
  %144 = load ptr, ptr %__pyx_v_ndarray, align 8, !tbaa !5
  %call226 = call i32 @__Pyx_IsSubtype(ptr noundef %call225, ptr noundef %144)
  store i32 %call226, ptr %__pyx_t_3, align 4, !tbaa !9
  %145 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp227 = icmp ne i32 %145, 0
  %conv228 = zext i1 %cmp227 to i32
  store i32 %conv228, ptr %__pyx_t_2, align 4, !tbaa !9
  %146 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool229 = icmp ne i32 %146, 0
  br i1 %tobool229, label %if.then230, label %if.end244

if.then230:                                       ; preds = %if.then224
  %147 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  %148 = load ptr, ptr @__pyx_n_s_dtype, align 8, !tbaa !5
  %call231 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %147, ptr noundef %148)
  store ptr %call231, ptr %__pyx_t_6, align 8, !tbaa !5
  %149 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool232 = icmp ne ptr %149, null
  %lnot233 = xor i1 %tobool232, true
  %lnot235 = xor i1 %lnot233, true
  %lnot237 = xor i1 %lnot235, true
  %lnot.ext238 = zext i1 %lnot237 to i32
  %conv239 = sext i32 %lnot.ext238 to i64
  %expval240 = call i64 @llvm.expect.i64(i64 %conv239, i64 0)
  %tobool241 = icmp ne i64 %expval240, 0
  br i1 %tobool241, label %if.then242, label %if.end243

if.then242:                                       ; preds = %if.then230
  %150 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %150, ptr %__pyx_filename, align 8, !tbaa !5
  %151 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %152 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4433, ptr %__pyx_clineno, align 4, !tbaa !9
  %153 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end243:                                        ; preds = %if.then230
  %154 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %154, ptr %__pyx_v_dtype, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  br label %__pyx_L12

if.end244:                                        ; preds = %if.then224
  %155 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  %call245 = call i32 @__pyx_memoryview_check(ptr noundef %155)
  store i32 %call245, ptr %__pyx_t_2, align 4, !tbaa !9
  %156 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp246 = icmp ne i32 %156, 0
  %conv247 = zext i1 %cmp246 to i32
  store i32 %conv247, ptr %__pyx_t_3, align 4, !tbaa !9
  %157 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool248 = icmp ne i32 %157, 0
  br i1 %tobool248, label %if.then249, label %if.end283

if.then249:                                       ; preds = %if.end244
  %158 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  %159 = load ptr, ptr @__pyx_n_s_base, align 8, !tbaa !5
  %call250 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %158, ptr noundef %159)
  store ptr %call250, ptr %__pyx_t_6, align 8, !tbaa !5
  %160 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool251 = icmp ne ptr %160, null
  %lnot252 = xor i1 %tobool251, true
  %lnot254 = xor i1 %lnot252, true
  %lnot256 = xor i1 %lnot254, true
  %lnot.ext257 = zext i1 %lnot256 to i32
  %conv258 = sext i32 %lnot.ext257 to i64
  %expval259 = call i64 @llvm.expect.i64(i64 %conv258, i64 0)
  %tobool260 = icmp ne i64 %expval259, 0
  br i1 %tobool260, label %if.then261, label %if.end262

if.then261:                                       ; preds = %if.then249
  %161 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %161, ptr %__pyx_filename, align 8, !tbaa !5
  %162 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %163 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4442, ptr %__pyx_clineno, align 4, !tbaa !9
  %164 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end262:                                        ; preds = %if.then249
  %165 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %165, ptr %__pyx_v_arg_base, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %166 = load ptr, ptr %__pyx_v_arg_base, align 8, !tbaa !5
  %call263 = call ptr @Py_TYPE(ptr noundef %166)
  %167 = load ptr, ptr %__pyx_v_ndarray, align 8, !tbaa !5
  %call264 = call i32 @__Pyx_IsSubtype(ptr noundef %call263, ptr noundef %167)
  store i32 %call264, ptr %__pyx_t_3, align 4, !tbaa !9
  %168 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp265 = icmp ne i32 %168, 0
  %conv266 = zext i1 %cmp265 to i32
  store i32 %conv266, ptr %__pyx_t_2, align 4, !tbaa !9
  %169 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool267 = icmp ne i32 %169, 0
  br i1 %tobool267, label %if.then268, label %if.end282

if.then268:                                       ; preds = %if.end262
  %170 = load ptr, ptr %__pyx_v_arg_base, align 8, !tbaa !5
  %171 = load ptr, ptr @__pyx_n_s_dtype, align 8, !tbaa !5
  %call269 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %170, ptr noundef %171)
  store ptr %call269, ptr %__pyx_t_6, align 8, !tbaa !5
  %172 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool270 = icmp ne ptr %172, null
  %lnot271 = xor i1 %tobool270, true
  %lnot273 = xor i1 %lnot271, true
  %lnot275 = xor i1 %lnot273, true
  %lnot.ext276 = zext i1 %lnot275 to i32
  %conv277 = sext i32 %lnot.ext276 to i64
  %expval278 = call i64 @llvm.expect.i64(i64 %conv277, i64 0)
  %tobool279 = icmp ne i64 %expval278, 0
  br i1 %tobool279, label %if.then280, label %if.end281

if.then280:                                       ; preds = %if.then268
  %173 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %173, ptr %__pyx_filename, align 8, !tbaa !5
  %174 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %175 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4449, ptr %__pyx_clineno, align 4, !tbaa !9
  %176 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end281:                                        ; preds = %if.then268
  %177 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %177, ptr %__pyx_v_dtype, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  br label %__pyx_L13

if.end282:                                        ; preds = %if.end262
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  store ptr @_Py_NoneStruct, ptr %__pyx_v_dtype, align 8, !tbaa !5
  br label %__pyx_L13

__pyx_L13:                                        ; preds = %if.end282, %if.end281
  br label %__pyx_L12

if.end283:                                        ; preds = %if.end244
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  store ptr @_Py_NoneStruct, ptr %__pyx_v_dtype, align 8, !tbaa !5
  br label %__pyx_L12

__pyx_L12:                                        ; preds = %if.end283, %__pyx_L13, %if.end243
  store i64 -1, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %178 = load ptr, ptr %__pyx_v_dtype, align 8, !tbaa !5
  %cmp284 = icmp ne ptr %178, @_Py_NoneStruct
  %conv285 = zext i1 %cmp284 to i32
  store i32 %conv285, ptr %__pyx_t_2, align 4, !tbaa !9
  %179 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp286 = icmp ne i32 %179, 0
  %conv287 = zext i1 %cmp286 to i32
  store i32 %conv287, ptr %__pyx_t_3, align 4, !tbaa !9
  %180 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool288 = icmp ne i32 %180, 0
  br i1 %tobool288, label %if.then289, label %if.end472

if.then289:                                       ; preds = %__pyx_L12
  %181 = load ptr, ptr %__pyx_v_dtype, align 8, !tbaa !5
  %182 = load ptr, ptr @__pyx_n_s_itemsize, align 8, !tbaa !5
  %call290 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %181, ptr noundef %182)
  store ptr %call290, ptr %__pyx_t_6, align 8, !tbaa !5
  %183 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool291 = icmp ne ptr %183, null
  %lnot292 = xor i1 %tobool291, true
  %lnot294 = xor i1 %lnot292, true
  %lnot296 = xor i1 %lnot294, true
  %lnot.ext297 = zext i1 %lnot296 to i32
  %conv298 = sext i32 %lnot.ext297 to i64
  %expval299 = call i64 @llvm.expect.i64(i64 %conv298, i64 0)
  %tobool300 = icmp ne i64 %expval299, 0
  br i1 %tobool300, label %if.then301, label %if.end302

if.then301:                                       ; preds = %if.then289
  %184 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %184, ptr %__pyx_filename, align 8, !tbaa !5
  %185 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %186 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4471, ptr %__pyx_clineno, align 4, !tbaa !9
  %187 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end302:                                        ; preds = %if.then289
  %188 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call303 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %188)
  store i64 %call303, ptr %__pyx_t_5, align 8, !tbaa !27
  %189 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp304 = icmp eq i64 %189, -1
  br i1 %cmp304, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end302
  %call306 = call ptr @PyErr_Occurred()
  %tobool307 = icmp ne ptr %call306, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end302
  %190 = phi i1 [ false, %if.end302 ], [ %tobool307, %land.rhs ]
  %lnot308 = xor i1 %190, true
  %lnot310 = xor i1 %lnot308, true
  %lnot.ext311 = zext i1 %lnot310 to i32
  %conv312 = sext i32 %lnot.ext311 to i64
  %expval313 = call i64 @llvm.expect.i64(i64 %conv312, i64 0)
  %tobool314 = icmp ne i64 %expval313, 0
  br i1 %tobool314, label %if.then315, label %if.end316

if.then315:                                       ; preds = %land.end
  %191 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %191, ptr %__pyx_filename, align 8, !tbaa !5
  %192 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %193 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4473, ptr %__pyx_clineno, align 4, !tbaa !9
  %194 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end316:                                        ; preds = %land.end
  %195 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %195)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %196 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  store i64 %196, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %197 = load ptr, ptr %__pyx_v_dtype, align 8, !tbaa !5
  %198 = load ptr, ptr @__pyx_n_s_kind, align 8, !tbaa !5
  %call317 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %197, ptr noundef %198)
  store ptr %call317, ptr %__pyx_t_6, align 8, !tbaa !5
  %199 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool318 = icmp ne ptr %199, null
  %lnot319 = xor i1 %tobool318, true
  %lnot321 = xor i1 %lnot319, true
  %lnot323 = xor i1 %lnot321, true
  %lnot.ext324 = zext i1 %lnot323 to i32
  %conv325 = sext i32 %lnot.ext324 to i64
  %expval326 = call i64 @llvm.expect.i64(i64 %conv325, i64 0)
  %tobool327 = icmp ne i64 %expval326, 0
  br i1 %tobool327, label %if.then328, label %if.end329

if.then328:                                       ; preds = %if.end316
  %200 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %200, ptr %__pyx_filename, align 8, !tbaa !5
  %201 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %202 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4476, ptr %__pyx_clineno, align 4, !tbaa !9
  %203 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end329:                                        ; preds = %if.end316
  %204 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call330 = call ptr @Py_TYPE(ptr noundef %204)
  %call331 = call i32 @PyType_HasFeature(ptr noundef %call330, i64 noundef 268435456)
  %tobool332 = icmp ne i32 %call331, 0
  %lnot333 = xor i1 %tobool332, true
  %lnot335 = xor i1 %lnot333, true
  %lnot.ext336 = zext i1 %lnot335 to i32
  %conv337 = sext i32 %lnot.ext336 to i64
  %expval338 = call i64 @llvm.expect.i64(i64 %conv337, i64 1)
  %tobool339 = icmp ne i64 %expval338, 0
  br i1 %tobool339, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end329
  %205 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call340 = call i32 @__Pyx_PyUnicode_AsPy_UCS4(ptr noundef %205)
  %conv341 = zext i32 %call340 to i64
  br label %cond.end

cond.false:                                       ; preds = %if.end329
  %206 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call342 = call i64 @__Pyx__PyObject_Ord(ptr noundef %206)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv341, %cond.true ], [ %call342, %cond.false ]
  store i64 %cond, ptr %__pyx_t_7, align 8, !tbaa !27
  %207 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %cmp343 = icmp eq i64 %207, 4294967295
  %lnot345 = xor i1 %cmp343, true
  %lnot347 = xor i1 %lnot345, true
  %lnot.ext348 = zext i1 %lnot347 to i32
  %conv349 = sext i32 %lnot.ext348 to i64
  %expval350 = call i64 @llvm.expect.i64(i64 %conv349, i64 0)
  %tobool351 = icmp ne i64 %expval350, 0
  br i1 %tobool351, label %if.then352, label %if.end353

if.then352:                                       ; preds = %cond.end
  %208 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %208, ptr %__pyx_filename, align 8, !tbaa !5
  %209 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %210 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4478, ptr %__pyx_clineno, align 4, !tbaa !9
  %211 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end353:                                        ; preds = %cond.end
  %212 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %212)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %213 = load i64, ptr %__pyx_t_7, align 8, !tbaa !27
  %conv354 = trunc i64 %213 to i8
  store i8 %conv354, ptr %__pyx_v_kind, align 1, !tbaa !29
  %214 = load i8, ptr %__pyx_v_kind, align 1, !tbaa !29
  %conv355 = sext i8 %214 to i32
  %cmp356 = icmp eq i32 %conv355, 105
  %conv357 = zext i1 %cmp356 to i32
  store i32 %conv357, ptr %__pyx_v_dtype_signed, align 4, !tbaa !9
  %215 = load i8, ptr %__pyx_v_kind, align 1, !tbaa !29
  %conv358 = sext i8 %215 to i32
  switch i32 %conv358, label %sw.default [
    i32 105, label %sw.bb
    i32 117, label %sw.bb
    i32 102, label %sw.bb359
    i32 99, label %sw.epilog
    i32 79, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.end353, %if.end353
  br label %sw.epilog

sw.bb359:                                         ; preds = %if.end353
  %216 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp360 = icmp eq i64 4, %216
  %conv361 = zext i1 %cmp360 to i32
  %cmp362 = icmp ne i32 %conv361, 0
  %conv363 = zext i1 %cmp362 to i32
  store i32 %conv363, ptr %__pyx_t_2, align 4, !tbaa !9
  %217 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool364 = icmp ne i32 %217, 0
  br i1 %tobool364, label %if.then365, label %if.else366

if.then365:                                       ; preds = %sw.bb359
  br label %if.end367

if.else366:                                       ; preds = %sw.bb359
  %218 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %218, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L16_bool_binop_done

if.end367:                                        ; preds = %if.then365
  %219 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  %220 = load ptr, ptr @__pyx_n_s_ndim, align 8, !tbaa !5
  %call368 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %219, ptr noundef %220)
  store ptr %call368, ptr %__pyx_t_6, align 8, !tbaa !5
  %221 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool369 = icmp ne ptr %221, null
  %lnot370 = xor i1 %tobool369, true
  %lnot372 = xor i1 %lnot370, true
  %lnot374 = xor i1 %lnot372, true
  %lnot.ext375 = zext i1 %lnot374 to i32
  %conv376 = sext i32 %lnot.ext375 to i64
  %expval377 = call i64 @llvm.expect.i64(i64 %conv376, i64 0)
  %tobool378 = icmp ne i64 %expval377, 0
  br i1 %tobool378, label %if.then379, label %if.end380

if.then379:                                       ; preds = %if.end367
  %222 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %222, ptr %__pyx_filename, align 8, !tbaa !5
  %223 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %224 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4493, ptr %__pyx_clineno, align 4, !tbaa !9
  %225 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end380:                                        ; preds = %if.end367
  %226 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call381 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %226)
  store i64 %call381, ptr %__pyx_t_5, align 8, !tbaa !27
  %227 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp382 = icmp eq i64 %227, -1
  br i1 %cmp382, label %land.rhs384, label %land.end387

land.rhs384:                                      ; preds = %if.end380
  %call385 = call ptr @PyErr_Occurred()
  %tobool386 = icmp ne ptr %call385, null
  br label %land.end387

land.end387:                                      ; preds = %land.rhs384, %if.end380
  %228 = phi i1 [ false, %if.end380 ], [ %tobool386, %land.rhs384 ]
  %lnot388 = xor i1 %228, true
  %lnot390 = xor i1 %lnot388, true
  %lnot.ext391 = zext i1 %lnot390 to i32
  %conv392 = sext i32 %lnot.ext391 to i64
  %expval393 = call i64 @llvm.expect.i64(i64 %conv392, i64 0)
  %tobool394 = icmp ne i64 %expval393, 0
  br i1 %tobool394, label %if.then395, label %if.end396

if.then395:                                       ; preds = %land.end387
  %229 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %229, ptr %__pyx_filename, align 8, !tbaa !5
  %230 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %231 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4495, ptr %__pyx_clineno, align 4, !tbaa !9
  %232 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end396:                                        ; preds = %land.end387
  %233 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %233)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %234 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp397 = icmp eq i64 %234, 1
  %conv398 = zext i1 %cmp397 to i32
  %cmp399 = icmp ne i32 %conv398, 0
  %conv400 = zext i1 %cmp399 to i32
  store i32 %conv400, ptr %__pyx_t_2, align 4, !tbaa !9
  %235 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %235, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L16_bool_binop_done

__pyx_L16_bool_binop_done:                        ; preds = %if.end396, %if.else366
  %236 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool401 = icmp ne i32 %236, 0
  br i1 %tobool401, label %if.then402, label %if.end415

if.then402:                                       ; preds = %__pyx_L16_bool_binop_done
  %237 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %238 = load ptr, ptr @__pyx_n_s_float, align 8, !tbaa !5
  %call403 = call i32 @__Pyx_SetItemInt_Fast(ptr noundef %237, i64 noundef 0, ptr noundef %238, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  %cmp404 = icmp slt i32 %call403, 0
  %lnot406 = xor i1 %cmp404, true
  %lnot408 = xor i1 %lnot406, true
  %lnot.ext409 = zext i1 %lnot408 to i32
  %conv410 = sext i32 %lnot.ext409 to i64
  %expval411 = call i64 @llvm.expect.i64(i64 %conv410, i64 0)
  %tobool412 = icmp ne i64 %expval411, 0
  br i1 %tobool412, label %if.then413, label %if.end414

if.then413:                                       ; preds = %if.then402
  %239 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %239, ptr %__pyx_filename, align 8, !tbaa !5
  %240 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %241 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4501, ptr %__pyx_clineno, align 4, !tbaa !9
  %242 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end414:                                        ; preds = %if.then402
  br label %__pyx_L10_break

if.end415:                                        ; preds = %__pyx_L16_bool_binop_done
  %243 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp416 = icmp eq i64 8, %243
  %conv417 = zext i1 %cmp416 to i32
  %cmp418 = icmp ne i32 %conv417, 0
  %conv419 = zext i1 %cmp418 to i32
  store i32 %conv419, ptr %__pyx_t_2, align 4, !tbaa !9
  %244 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool420 = icmp ne i32 %244, 0
  br i1 %tobool420, label %if.then421, label %if.else422

if.then421:                                       ; preds = %if.end415
  br label %if.end423

if.else422:                                       ; preds = %if.end415
  %245 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %245, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L19_bool_binop_done

if.end423:                                        ; preds = %if.then421
  %246 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  %247 = load ptr, ptr @__pyx_n_s_ndim, align 8, !tbaa !5
  %call424 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %246, ptr noundef %247)
  store ptr %call424, ptr %__pyx_t_6, align 8, !tbaa !5
  %248 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool425 = icmp ne ptr %248, null
  %lnot426 = xor i1 %tobool425, true
  %lnot428 = xor i1 %lnot426, true
  %lnot430 = xor i1 %lnot428, true
  %lnot.ext431 = zext i1 %lnot430 to i32
  %conv432 = sext i32 %lnot.ext431 to i64
  %expval433 = call i64 @llvm.expect.i64(i64 %conv432, i64 0)
  %tobool434 = icmp ne i64 %expval433, 0
  br i1 %tobool434, label %if.then435, label %if.end436

if.then435:                                       ; preds = %if.end423
  %249 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %249, ptr %__pyx_filename, align 8, !tbaa !5
  %250 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %251 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4510, ptr %__pyx_clineno, align 4, !tbaa !9
  %252 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end436:                                        ; preds = %if.end423
  %253 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %call437 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %253)
  store i64 %call437, ptr %__pyx_t_5, align 8, !tbaa !27
  %254 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp438 = icmp eq i64 %254, -1
  br i1 %cmp438, label %land.rhs440, label %land.end443

land.rhs440:                                      ; preds = %if.end436
  %call441 = call ptr @PyErr_Occurred()
  %tobool442 = icmp ne ptr %call441, null
  br label %land.end443

land.end443:                                      ; preds = %land.rhs440, %if.end436
  %255 = phi i1 [ false, %if.end436 ], [ %tobool442, %land.rhs440 ]
  %lnot444 = xor i1 %255, true
  %lnot446 = xor i1 %lnot444, true
  %lnot.ext447 = zext i1 %lnot446 to i32
  %conv448 = sext i32 %lnot.ext447 to i64
  %expval449 = call i64 @llvm.expect.i64(i64 %conv448, i64 0)
  %tobool450 = icmp ne i64 %expval449, 0
  br i1 %tobool450, label %if.then451, label %if.end452

if.then451:                                       ; preds = %land.end443
  %256 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %256, ptr %__pyx_filename, align 8, !tbaa !5
  %257 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %258 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4512, ptr %__pyx_clineno, align 4, !tbaa !9
  %259 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end452:                                        ; preds = %land.end443
  %260 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %260)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %261 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %cmp453 = icmp eq i64 %261, 1
  %conv454 = zext i1 %cmp453 to i32
  %cmp455 = icmp ne i32 %conv454, 0
  %conv456 = zext i1 %cmp455 to i32
  store i32 %conv456, ptr %__pyx_t_2, align 4, !tbaa !9
  %262 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %262, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L19_bool_binop_done

__pyx_L19_bool_binop_done:                        ; preds = %if.end452, %if.else422
  %263 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool457 = icmp ne i32 %263, 0
  br i1 %tobool457, label %if.then458, label %if.end471

if.then458:                                       ; preds = %__pyx_L19_bool_binop_done
  %264 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %265 = load ptr, ptr @__pyx_n_s_double, align 8, !tbaa !5
  %call459 = call i32 @__Pyx_SetItemInt_Fast(ptr noundef %264, i64 noundef 0, ptr noundef %265, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  %cmp460 = icmp slt i32 %call459, 0
  %lnot462 = xor i1 %cmp460, true
  %lnot464 = xor i1 %lnot462, true
  %lnot.ext465 = zext i1 %lnot464 to i32
  %conv466 = sext i32 %lnot.ext465 to i64
  %expval467 = call i64 @llvm.expect.i64(i64 %conv466, i64 0)
  %tobool468 = icmp ne i64 %expval467, 0
  br i1 %tobool468, label %if.then469, label %if.end470

if.then469:                                       ; preds = %if.then458
  %266 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %266, ptr %__pyx_filename, align 8, !tbaa !5
  %267 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %268 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4518, ptr %__pyx_clineno, align 4, !tbaa !9
  %269 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end470:                                        ; preds = %if.then458
  br label %__pyx_L10_break

if.end471:                                        ; preds = %__pyx_L19_bool_binop_done
  br label %sw.epilog

sw.default:                                       ; preds = %if.end353
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end353, %if.end353, %if.end471, %sw.bb
  br label %if.end472

if.end472:                                        ; preds = %sw.epilog, %__pyx_L12
  br label %if.end473

if.end473:                                        ; preds = %if.end472, %while.body
  %270 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp474 = icmp eq i64 %270, -1
  %conv475 = zext i1 %cmp474 to i32
  %cmp476 = icmp ne i32 %conv475, 0
  %conv477 = zext i1 %cmp476 to i32
  store i32 %conv477, ptr %__pyx_t_2, align 4, !tbaa !9
  %271 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool478 = icmp ne i32 %271, 0
  br i1 %tobool478, label %if.else480, label %if.then479

if.then479:                                       ; preds = %if.end473
  br label %if.end481

if.else480:                                       ; preds = %if.end473
  %272 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %272, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L22_bool_binop_done

if.end481:                                        ; preds = %if.then479
  %273 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp482 = icmp eq i64 %273, 4
  %conv483 = zext i1 %cmp482 to i32
  %cmp484 = icmp ne i32 %conv483, 0
  %conv485 = zext i1 %cmp484 to i32
  store i32 %conv485, ptr %__pyx_t_2, align 4, !tbaa !9
  %274 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %274, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L22_bool_binop_done

__pyx_L22_bool_binop_done:                        ; preds = %if.end481, %if.else480
  %275 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool486 = icmp ne i32 %275, 0
  br i1 %tobool486, label %if.then487, label %if.end506

if.then487:                                       ; preds = %__pyx_L22_bool_binop_done
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp488) #13
  %276 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_float__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp488, ptr noundef %276, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_8, ptr align 8 %tmp488, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp488) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_memslice, ptr align 8 %__pyx_t_8, i64 208, i1 false), !tbaa.struct !187
  %memview = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_memslice, i32 0, i32 0
  %277 = load ptr, ptr %memview, align 8, !tbaa !185
  %cmp489 = icmp ne ptr %277, null
  %conv490 = zext i1 %cmp489 to i32
  store i32 %conv490, ptr %__pyx_t_3, align 4, !tbaa !9
  %278 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool491 = icmp ne i32 %278, 0
  br i1 %tobool491, label %if.then492, label %if.end505

if.then492:                                       ; preds = %if.then487
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_memslice, i32 noundef 1, i32 noundef 4544)
  %279 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %280 = load ptr, ptr @__pyx_n_s_float, align 8, !tbaa !5
  %call493 = call i32 @__Pyx_SetItemInt_Fast(ptr noundef %279, i64 noundef 0, ptr noundef %280, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  %cmp494 = icmp slt i32 %call493, 0
  %lnot496 = xor i1 %cmp494, true
  %lnot498 = xor i1 %lnot496, true
  %lnot.ext499 = zext i1 %lnot498 to i32
  %conv500 = sext i32 %lnot.ext499 to i64
  %expval501 = call i64 @llvm.expect.i64(i64 %conv500, i64 0)
  %tobool502 = icmp ne i64 %expval501, 0
  br i1 %tobool502, label %if.then503, label %if.end504

if.then503:                                       ; preds = %if.then492
  %281 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %281, ptr %__pyx_filename, align 8, !tbaa !5
  %282 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %283 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4545, ptr %__pyx_clineno, align 4, !tbaa !9
  %284 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end504:                                        ; preds = %if.then492
  br label %__pyx_L10_break

if.end505:                                        ; preds = %if.then487
  call void @PyErr_Clear()
  br label %if.end506

if.end506:                                        ; preds = %if.end505, %__pyx_L22_bool_binop_done
  %285 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp507 = icmp eq i64 %285, -1
  %conv508 = zext i1 %cmp507 to i32
  %cmp509 = icmp ne i32 %conv508, 0
  %conv510 = zext i1 %cmp509 to i32
  store i32 %conv510, ptr %__pyx_t_2, align 4, !tbaa !9
  %286 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool511 = icmp ne i32 %286, 0
  br i1 %tobool511, label %if.else513, label %if.then512

if.then512:                                       ; preds = %if.end506
  br label %if.end514

if.else513:                                       ; preds = %if.end506
  %287 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %287, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L26_bool_binop_done

if.end514:                                        ; preds = %if.then512
  %288 = load i64, ptr %__pyx_v_itemsize, align 8, !tbaa !27
  %cmp515 = icmp eq i64 %288, 8
  %conv516 = zext i1 %cmp515 to i32
  %cmp517 = icmp ne i32 %conv516, 0
  %conv518 = zext i1 %cmp517 to i32
  store i32 %conv518, ptr %__pyx_t_2, align 4, !tbaa !9
  %289 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %289, ptr %__pyx_t_3, align 4, !tbaa !9
  br label %__pyx_L26_bool_binop_done

__pyx_L26_bool_binop_done:                        ; preds = %if.end514, %if.else513
  %290 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool519 = icmp ne i32 %290, 0
  br i1 %tobool519, label %if.then520, label %if.end540

if.then520:                                       ; preds = %__pyx_L26_bool_binop_done
  call void @llvm.lifetime.start.p0(i64 208, ptr %tmp521) #13
  %291 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  call void @__Pyx_PyObject_to_MemoryviewSlice_dc_double__const__(ptr sret(%struct.__Pyx_memviewslice) align 8 %tmp521, ptr noundef %291, i32 noundef 0)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_t_8, ptr align 8 %tmp521, i64 208, i1 false), !tbaa.struct !187
  call void @llvm.lifetime.end.p0(i64 208, ptr %tmp521) #13
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %__pyx_v_memslice, ptr align 8 %__pyx_t_8, i64 208, i1 false), !tbaa.struct !187
  %memview522 = getelementptr inbounds %struct.__Pyx_memviewslice, ptr %__pyx_v_memslice, i32 0, i32 0
  %292 = load ptr, ptr %memview522, align 8, !tbaa !185
  %cmp523 = icmp ne ptr %292, null
  %conv524 = zext i1 %cmp523 to i32
  store i32 %conv524, ptr %__pyx_t_3, align 4, !tbaa !9
  %293 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool525 = icmp ne i32 %293, 0
  br i1 %tobool525, label %if.then526, label %if.end539

if.then526:                                       ; preds = %if.then520
  call void @__Pyx_XDEC_MEMVIEW(ptr noundef %__pyx_v_memslice, i32 noundef 1, i32 noundef 4566)
  %294 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %295 = load ptr, ptr @__pyx_n_s_double, align 8, !tbaa !5
  %call527 = call i32 @__Pyx_SetItemInt_Fast(ptr noundef %294, i64 noundef 0, ptr noundef %295, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  %cmp528 = icmp slt i32 %call527, 0
  %lnot530 = xor i1 %cmp528, true
  %lnot532 = xor i1 %lnot530, true
  %lnot.ext533 = zext i1 %lnot532 to i32
  %conv534 = sext i32 %lnot.ext533 to i64
  %expval535 = call i64 @llvm.expect.i64(i64 %conv534, i64 0)
  %tobool536 = icmp ne i64 %expval535, 0
  br i1 %tobool536, label %if.then537, label %if.end538

if.then537:                                       ; preds = %if.then526
  %296 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %296, ptr %__pyx_filename, align 8, !tbaa !5
  %297 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %298 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4567, ptr %__pyx_clineno, align 4, !tbaa !9
  %299 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end538:                                        ; preds = %if.then526
  br label %__pyx_L10_break

if.end539:                                        ; preds = %if.then520
  call void @PyErr_Clear()
  br label %if.end540

if.end540:                                        ; preds = %if.end539, %__pyx_L26_bool_binop_done
  %300 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %call541 = call i32 @__Pyx_SetItemInt_Fast(ptr noundef %300, i64 noundef 0, ptr noundef @_Py_NoneStruct, i32 noundef 1, i32 noundef 0, i32 noundef 0)
  %cmp542 = icmp slt i32 %call541, 0
  %lnot544 = xor i1 %cmp542, true
  %lnot546 = xor i1 %lnot544, true
  %lnot.ext547 = zext i1 %lnot546 to i32
  %conv548 = sext i32 %lnot.ext547 to i64
  %expval549 = call i64 @llvm.expect.i64(i64 %conv548, i64 0)
  %tobool550 = icmp ne i64 %expval549, 0
  br i1 %tobool550, label %if.then551, label %if.end552

if.then551:                                       ; preds = %if.end540
  %301 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %301, ptr %__pyx_filename, align 8, !tbaa !5
  %302 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %303 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4574, ptr %__pyx_clineno, align 4, !tbaa !9
  %304 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end552:                                        ; preds = %if.end540
  br label %__pyx_L10_break

__pyx_L10_break:                                  ; preds = %if.end552, %if.end538, %if.end504, %if.end470, %if.end414
  %call553 = call ptr @PyList_New(i64 noundef 0)
  store ptr %call553, ptr %__pyx_t_6, align 8, !tbaa !5
  %305 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool554 = icmp ne ptr %305, null
  %lnot555 = xor i1 %tobool554, true
  %lnot557 = xor i1 %lnot555, true
  %lnot559 = xor i1 %lnot557, true
  %lnot.ext560 = zext i1 %lnot559 to i32
  %conv561 = sext i32 %lnot.ext560 to i64
  %expval562 = call i64 @llvm.expect.i64(i64 %conv561, i64 0)
  %tobool563 = icmp ne i64 %expval562, 0
  br i1 %tobool563, label %if.then564, label %if.end565

if.then564:                                       ; preds = %__pyx_L10_break
  %306 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %306, ptr %__pyx_filename, align 8, !tbaa !5
  %307 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %308 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4578, ptr %__pyx_clineno, align 4, !tbaa !9
  %309 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end565:                                        ; preds = %__pyx_L10_break
  %310 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %310, ptr %__pyx_v_candidates, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  store i64 0, ptr %__pyx_t_5, align 8, !tbaa !27
  %311 = load ptr, ptr %__pyx_v_signatures.addr, align 8, !tbaa !5
  %cmp566 = icmp eq ptr %311, @_Py_NoneStruct
  %lnot568 = xor i1 %cmp566, true
  %lnot570 = xor i1 %lnot568, true
  %lnot.ext571 = zext i1 %lnot570 to i32
  %conv572 = sext i32 %lnot.ext571 to i64
  %expval573 = call i64 @llvm.expect.i64(i64 %conv572, i64 0)
  %tobool574 = icmp ne i64 %expval573, 0
  br i1 %tobool574, label %if.then575, label %if.end576

if.then575:                                       ; preds = %if.end565
  %312 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %312, ptr noundef @.str.169)
  %313 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %313, ptr %__pyx_filename, align 8, !tbaa !5
  %314 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %315 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4585, ptr %__pyx_clineno, align 4, !tbaa !9
  %316 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end576:                                        ; preds = %if.end565
  %317 = load ptr, ptr %__pyx_v_signatures.addr, align 8, !tbaa !5
  %call577 = call ptr @__Pyx_dict_iterator(ptr noundef %317, i32 noundef 1, ptr noundef null, ptr noundef %__pyx_t_9, ptr noundef %__pyx_t_10)
  store ptr %call577, ptr %__pyx_t_1, align 8, !tbaa !5
  %318 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool578 = icmp ne ptr %318, null
  %lnot579 = xor i1 %tobool578, true
  %lnot581 = xor i1 %lnot579, true
  %lnot583 = xor i1 %lnot581, true
  %lnot.ext584 = zext i1 %lnot583 to i32
  %conv585 = sext i32 %lnot.ext584 to i64
  %expval586 = call i64 @llvm.expect.i64(i64 %conv585, i64 0)
  %tobool587 = icmp ne i64 %expval586, 0
  br i1 %tobool587, label %if.then588, label %if.end589

if.then588:                                       ; preds = %if.end576
  %319 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %319, ptr %__pyx_filename, align 8, !tbaa !5
  %320 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %321 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4587, ptr %__pyx_clineno, align 4, !tbaa !9
  %322 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end589:                                        ; preds = %if.end576
  %323 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %323)
  %324 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %324, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  br label %while.cond590

while.cond590:                                    ; preds = %if.end824, %if.end589
  br label %while.body591

while.body591:                                    ; preds = %while.cond590
  %325 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %326 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %327 = load i32, ptr %__pyx_t_10, align 4, !tbaa !9
  %call592 = call i32 @__Pyx_dict_iter_next(ptr noundef %325, i64 noundef %326, ptr noundef %__pyx_t_5, ptr noundef %__pyx_t_1, ptr noundef null, ptr noundef null, i32 noundef %327)
  store i32 %call592, ptr %__pyx_t_11, align 4, !tbaa !9
  %328 = load i32, ptr %__pyx_t_11, align 4, !tbaa !9
  %cmp593 = icmp eq i32 %328, 0
  %lnot595 = xor i1 %cmp593, true
  %lnot597 = xor i1 %lnot595, true
  %lnot.ext598 = zext i1 %lnot597 to i32
  %conv599 = sext i32 %lnot.ext598 to i64
  %expval600 = call i64 @llvm.expect.i64(i64 %conv599, i64 0)
  %tobool601 = icmp ne i64 %expval600, 0
  br i1 %tobool601, label %if.then602, label %if.end603

if.then602:                                       ; preds = %while.body591
  br label %while.end

if.end603:                                        ; preds = %while.body591
  %329 = load i32, ptr %__pyx_t_11, align 4, !tbaa !9
  %cmp604 = icmp eq i32 %329, -1
  %lnot606 = xor i1 %cmp604, true
  %lnot608 = xor i1 %lnot606, true
  %lnot.ext609 = zext i1 %lnot608 to i32
  %conv610 = sext i32 %lnot.ext609 to i64
  %expval611 = call i64 @llvm.expect.i64(i64 %conv610, i64 0)
  %tobool612 = icmp ne i64 %expval611, 0
  br i1 %tobool612, label %if.then613, label %if.end614

if.then613:                                       ; preds = %if.end603
  %330 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %330, ptr %__pyx_filename, align 8, !tbaa !5
  %331 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %332 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4595, ptr %__pyx_clineno, align 4, !tbaa !9
  %333 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end614:                                        ; preds = %if.end603
  br label %do.body615

do.body615:                                       ; preds = %if.end614
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp616) #13
  %334 = load ptr, ptr %__pyx_v_sig, align 8, !tbaa !5
  store ptr %334, ptr %tmp616, align 8, !tbaa !5
  %335 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %335, ptr %__pyx_v_sig, align 8, !tbaa !5
  %336 = load ptr, ptr %tmp616, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %336)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp616) #13
  br label %do.cond617

do.cond617:                                       ; preds = %do.body615
  br label %do.end618

do.end618:                                        ; preds = %do.cond617
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  store i32 0, ptr %__pyx_v_match_found, align 4, !tbaa !9
  %337 = load ptr, ptr %__pyx_v_sig, align 8, !tbaa !5
  %338 = load ptr, ptr @__pyx_n_s_strip, align 8, !tbaa !5
  %call619 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %337, ptr noundef %338)
  store ptr %call619, ptr %__pyx_t_13, align 8, !tbaa !5
  %339 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %tobool620 = icmp ne ptr %339, null
  %lnot621 = xor i1 %tobool620, true
  %lnot623 = xor i1 %lnot621, true
  %lnot625 = xor i1 %lnot623, true
  %lnot.ext626 = zext i1 %lnot625 to i32
  %conv627 = sext i32 %lnot.ext626 to i64
  %expval628 = call i64 @llvm.expect.i64(i64 %conv627, i64 0)
  %tobool629 = icmp ne i64 %expval628, 0
  br i1 %tobool629, label %if.then630, label %if.end631

if.then630:                                       ; preds = %do.end618
  %340 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %340, ptr %__pyx_filename, align 8, !tbaa !5
  %341 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %342 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4600, ptr %__pyx_clineno, align 4, !tbaa !9
  %343 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end631:                                        ; preds = %do.end618
  store ptr null, ptr %__pyx_t_14, align 8, !tbaa !5
  %344 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %call632 = call i32 @Py_IS_TYPE(ptr noundef %344, ptr noundef @PyMethod_Type)
  %tobool633 = icmp ne i32 %call632, 0
  %lnot634 = xor i1 %tobool633, true
  %lnot636 = xor i1 %lnot634, true
  %lnot.ext637 = zext i1 %lnot636 to i32
  %conv638 = sext i32 %lnot.ext637 to i64
  %expval639 = call i64 @llvm.expect.i64(i64 %conv638, i64 1)
  %tobool640 = icmp ne i64 %expval639, 0
  br i1 %tobool640, label %if.then641, label %if.end656

if.then641:                                       ; preds = %if.end631
  %345 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %345, i32 0, i32 2
  %346 = load ptr, ptr %im_self, align 8, !tbaa !125
  store ptr %346, ptr %__pyx_t_14, align 8, !tbaa !5
  %347 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  %tobool642 = icmp ne ptr %347, null
  %lnot643 = xor i1 %tobool642, true
  %lnot645 = xor i1 %lnot643, true
  %lnot.ext646 = zext i1 %lnot645 to i32
  %conv647 = sext i32 %lnot.ext646 to i64
  %expval648 = call i64 @llvm.expect.i64(i64 %conv647, i64 1)
  %tobool649 = icmp ne i64 %expval648, 0
  br i1 %tobool649, label %if.then650, label %if.end655

if.then650:                                       ; preds = %if.then641
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #13
  %348 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %348, i32 0, i32 1
  %349 = load ptr, ptr %im_func, align 8, !tbaa !127
  store ptr %349, ptr %function, align 8, !tbaa !5
  %350 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %350)
  %351 = load ptr, ptr %function, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %351)
  br label %do.body651

do.body651:                                       ; preds = %if.then650
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp652) #13
  %352 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  store ptr %352, ptr %tmp652, align 8, !tbaa !5
  %353 = load ptr, ptr %function, align 8, !tbaa !5
  store ptr %353, ptr %__pyx_t_13, align 8, !tbaa !5
  %354 = load ptr, ptr %tmp652, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %354)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp652) #13
  br label %do.cond653

do.cond653:                                       ; preds = %do.body651
  br label %do.end654

do.end654:                                        ; preds = %do.cond653
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #13
  br label %if.end655

if.end655:                                        ; preds = %do.end654, %if.then641
  br label %if.end656

if.end656:                                        ; preds = %if.end655, %if.end631
  %355 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  %tobool657 = icmp ne ptr %355, null
  br i1 %tobool657, label %cond.true658, label %cond.false660

cond.true658:                                     ; preds = %if.end656
  %356 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %357 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  %358 = load ptr, ptr @__pyx_kp_s_, align 8, !tbaa !5
  %call659 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %356, ptr noundef %357, ptr noundef %358)
  br label %cond.end662

cond.false660:                                    ; preds = %if.end656
  %359 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %360 = load ptr, ptr @__pyx_kp_s_, align 8, !tbaa !5
  %call661 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %359, ptr noundef %360)
  br label %cond.end662

cond.end662:                                      ; preds = %cond.false660, %cond.true658
  %cond663 = phi ptr [ %call659, %cond.true658 ], [ %call661, %cond.false660 ]
  store ptr %cond663, ptr %__pyx_t_12, align 8, !tbaa !5
  %361 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %361)
  store ptr null, ptr %__pyx_t_14, align 8, !tbaa !5
  %362 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  %tobool664 = icmp ne ptr %362, null
  %lnot665 = xor i1 %tobool664, true
  %lnot667 = xor i1 %lnot665, true
  %lnot669 = xor i1 %lnot667, true
  %lnot.ext670 = zext i1 %lnot669 to i32
  %conv671 = sext i32 %lnot.ext670 to i64
  %expval672 = call i64 @llvm.expect.i64(i64 %conv671, i64 0)
  %tobool673 = icmp ne i64 %expval672, 0
  br i1 %tobool673, label %if.then674, label %if.end675

if.then674:                                       ; preds = %cond.end662
  %363 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %363, ptr %__pyx_filename, align 8, !tbaa !5
  %364 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %365 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4614, ptr %__pyx_clineno, align 4, !tbaa !9
  %366 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end675:                                        ; preds = %cond.end662
  %367 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %367)
  store ptr null, ptr %__pyx_t_13, align 8, !tbaa !5
  %368 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  %369 = load ptr, ptr @__pyx_n_s_split, align 8, !tbaa !5
  %call676 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %368, ptr noundef %369)
  store ptr %call676, ptr %__pyx_t_13, align 8, !tbaa !5
  %370 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %tobool677 = icmp ne ptr %370, null
  %lnot678 = xor i1 %tobool677, true
  %lnot680 = xor i1 %lnot678, true
  %lnot682 = xor i1 %lnot680, true
  %lnot.ext683 = zext i1 %lnot682 to i32
  %conv684 = sext i32 %lnot.ext683 to i64
  %expval685 = call i64 @llvm.expect.i64(i64 %conv684, i64 0)
  %tobool686 = icmp ne i64 %expval685, 0
  br i1 %tobool686, label %if.then687, label %if.end688

if.then687:                                       ; preds = %if.end675
  %371 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %371, ptr %__pyx_filename, align 8, !tbaa !5
  %372 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %373 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4617, ptr %__pyx_clineno, align 4, !tbaa !9
  %374 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end688:                                        ; preds = %if.end675
  %375 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %375)
  store ptr null, ptr %__pyx_t_12, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_12, align 8, !tbaa !5
  %376 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %call689 = call i32 @Py_IS_TYPE(ptr noundef %376, ptr noundef @PyMethod_Type)
  %tobool690 = icmp ne i32 %call689, 0
  %lnot691 = xor i1 %tobool690, true
  %lnot693 = xor i1 %lnot691, true
  %lnot.ext694 = zext i1 %lnot693 to i32
  %conv695 = sext i32 %lnot.ext694 to i64
  %expval696 = call i64 @llvm.expect.i64(i64 %conv695, i64 1)
  %tobool697 = icmp ne i64 %expval696, 0
  br i1 %tobool697, label %if.then698, label %if.end716

if.then698:                                       ; preds = %if.end688
  %377 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %im_self699 = getelementptr inbounds %struct.PyMethodObject, ptr %377, i32 0, i32 2
  %378 = load ptr, ptr %im_self699, align 8, !tbaa !125
  store ptr %378, ptr %__pyx_t_12, align 8, !tbaa !5
  %379 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  %tobool700 = icmp ne ptr %379, null
  %lnot701 = xor i1 %tobool700, true
  %lnot703 = xor i1 %lnot701, true
  %lnot.ext704 = zext i1 %lnot703 to i32
  %conv705 = sext i32 %lnot.ext704 to i64
  %expval706 = call i64 @llvm.expect.i64(i64 %conv705, i64 1)
  %tobool707 = icmp ne i64 %expval706, 0
  br i1 %tobool707, label %if.then708, label %if.end715

if.then708:                                       ; preds = %if.then698
  call void @llvm.lifetime.start.p0(i64 8, ptr %function709) #13
  %380 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %im_func710 = getelementptr inbounds %struct.PyMethodObject, ptr %380, i32 0, i32 1
  %381 = load ptr, ptr %im_func710, align 8, !tbaa !127
  store ptr %381, ptr %function709, align 8, !tbaa !5
  %382 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %382)
  %383 = load ptr, ptr %function709, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %383)
  br label %do.body711

do.body711:                                       ; preds = %if.then708
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp712) #13
  %384 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  store ptr %384, ptr %tmp712, align 8, !tbaa !5
  %385 = load ptr, ptr %function709, align 8, !tbaa !5
  store ptr %385, ptr %__pyx_t_13, align 8, !tbaa !5
  %386 = load ptr, ptr %tmp712, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %386)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp712) #13
  br label %do.cond713

do.cond713:                                       ; preds = %do.body711
  br label %do.end714

do.end714:                                        ; preds = %do.cond713
  call void @llvm.lifetime.end.p0(i64 8, ptr %function709) #13
  br label %if.end715

if.end715:                                        ; preds = %do.end714, %if.then698
  br label %if.end716

if.end716:                                        ; preds = %if.end715, %if.end688
  %387 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  %tobool717 = icmp ne ptr %387, null
  br i1 %tobool717, label %cond.true718, label %cond.false720

cond.true718:                                     ; preds = %if.end716
  %388 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %389 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  %390 = load ptr, ptr @__pyx_kp_s__2, align 8, !tbaa !5
  %call719 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %388, ptr noundef %389, ptr noundef %390)
  br label %cond.end722

cond.false720:                                    ; preds = %if.end716
  %391 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %392 = load ptr, ptr @__pyx_kp_s__2, align 8, !tbaa !5
  %call721 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %391, ptr noundef %392)
  br label %cond.end722

cond.end722:                                      ; preds = %cond.false720, %cond.true718
  %cond723 = phi ptr [ %call719, %cond.true718 ], [ %call721, %cond.false720 ]
  store ptr %cond723, ptr %__pyx_t_1, align 8, !tbaa !5
  %393 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %393)
  store ptr null, ptr %__pyx_t_12, align 8, !tbaa !5
  %394 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool724 = icmp ne ptr %394, null
  %lnot725 = xor i1 %tobool724, true
  %lnot727 = xor i1 %lnot725, true
  %lnot729 = xor i1 %lnot727, true
  %lnot.ext730 = zext i1 %lnot729 to i32
  %conv731 = sext i32 %lnot.ext730 to i64
  %expval732 = call i64 @llvm.expect.i64(i64 %conv731, i64 0)
  %tobool733 = icmp ne i64 %expval732, 0
  br i1 %tobool733, label %if.then734, label %if.end735

if.then734:                                       ; preds = %cond.end722
  %395 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %395, ptr %__pyx_filename, align 8, !tbaa !5
  %396 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %397 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4632, ptr %__pyx_clineno, align 4, !tbaa !9
  %398 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end735:                                        ; preds = %cond.end722
  %399 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %399)
  store ptr null, ptr %__pyx_t_13, align 8, !tbaa !5
  br label %do.body736

do.body736:                                       ; preds = %if.end735
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp737) #13
  %400 = load ptr, ptr %__pyx_v_src_sig, align 8, !tbaa !5
  store ptr %400, ptr %tmp737, align 8, !tbaa !5
  %401 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %401, ptr %__pyx_v_src_sig, align 8, !tbaa !5
  %402 = load ptr, ptr %tmp737, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %402)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp737) #13
  br label %do.cond738

do.cond738:                                       ; preds = %do.body736
  br label %do.end739

do.end739:                                        ; preds = %do.cond738
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %403 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %call740 = call i64 @PyList_GET_SIZE(ptr noundef %403)
  store i64 %call740, ptr %__pyx_t_15, align 8, !tbaa !27
  %404 = load i64, ptr %__pyx_t_15, align 8, !tbaa !27
  %cmp741 = icmp eq i64 %404, -1
  %lnot743 = xor i1 %cmp741, true
  %lnot745 = xor i1 %lnot743, true
  %lnot.ext746 = zext i1 %lnot745 to i32
  %conv747 = sext i32 %lnot.ext746 to i64
  %expval748 = call i64 @llvm.expect.i64(i64 %conv747, i64 0)
  %tobool749 = icmp ne i64 %expval748, 0
  br i1 %tobool749, label %if.then750, label %if.end751

if.then750:                                       ; preds = %do.end739
  %405 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %405, ptr %__pyx_filename, align 8, !tbaa !5
  %406 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %407 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4637, ptr %__pyx_clineno, align 4, !tbaa !9
  %408 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end751:                                        ; preds = %do.end739
  %409 = load i64, ptr %__pyx_t_15, align 8, !tbaa !27
  store i64 %409, ptr %__pyx_t_16, align 8, !tbaa !27
  store i64 0, ptr %__pyx_t_17, align 8, !tbaa !27
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end751
  %410 = load i64, ptr %__pyx_t_17, align 8, !tbaa !27
  %411 = load i64, ptr %__pyx_t_16, align 8, !tbaa !27
  %cmp752 = icmp slt i64 %410, %411
  br i1 %cmp752, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %412 = load i64, ptr %__pyx_t_17, align 8, !tbaa !27
  store i64 %412, ptr %__pyx_v_i, align 8, !tbaa !27
  %413 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  %ob_item754 = getelementptr inbounds %struct.PyListObject, ptr %413, i32 0, i32 1
  %414 = load ptr, ptr %ob_item754, align 8, !tbaa !116
  %415 = load i64, ptr %__pyx_v_i, align 8, !tbaa !27
  %arrayidx755 = getelementptr ptr, ptr %414, i64 %415
  %416 = load ptr, ptr %arrayidx755, align 8, !tbaa !5
  store ptr %416, ptr %__pyx_t_1, align 8, !tbaa !5
  %417 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %417)
  br label %do.body756

do.body756:                                       ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp757) #13
  %418 = load ptr, ptr %__pyx_v_dst_type, align 8, !tbaa !5
  store ptr %418, ptr %tmp757, align 8, !tbaa !5
  %419 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %419, ptr %__pyx_v_dst_type, align 8, !tbaa !5
  %420 = load ptr, ptr %tmp757, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %420)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp757) #13
  br label %do.cond758

do.cond758:                                       ; preds = %do.body756
  br label %do.end759

do.end759:                                        ; preds = %do.cond758
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %421 = load ptr, ptr %__pyx_v_dst_type, align 8, !tbaa !5
  %cmp760 = icmp ne ptr %421, @_Py_NoneStruct
  %conv761 = zext i1 %cmp760 to i32
  store i32 %conv761, ptr %__pyx_t_3, align 4, !tbaa !9
  %422 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp762 = icmp ne i32 %422, 0
  %conv763 = zext i1 %cmp762 to i32
  store i32 %conv763, ptr %__pyx_t_2, align 4, !tbaa !9
  %423 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool764 = icmp ne i32 %423, 0
  br i1 %tobool764, label %if.then765, label %if.end807

if.then765:                                       ; preds = %do.end759
  %424 = load ptr, ptr %__pyx_v_src_sig, align 8, !tbaa !5
  %425 = load i64, ptr %__pyx_v_i, align 8, !tbaa !27
  %call766 = call ptr @__Pyx_GetItemInt_Fast(ptr noundef %424, i64 noundef %425, i32 noundef 0, i32 noundef 0, i32 noundef 0)
  store ptr %call766, ptr %__pyx_t_1, align 8, !tbaa !5
  %426 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool767 = icmp ne ptr %426, null
  %lnot768 = xor i1 %tobool767, true
  %lnot770 = xor i1 %lnot768, true
  %lnot772 = xor i1 %lnot770, true
  %lnot.ext773 = zext i1 %lnot772 to i32
  %conv774 = sext i32 %lnot.ext773 to i64
  %expval775 = call i64 @llvm.expect.i64(i64 %conv774, i64 0)
  %tobool776 = icmp ne i64 %expval775, 0
  br i1 %tobool776, label %if.then777, label %if.end778

if.then777:                                       ; preds = %if.then765
  %427 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %427, ptr %__pyx_filename, align 8, !tbaa !5
  %428 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %429 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4648, ptr %__pyx_clineno, align 4, !tbaa !9
  %430 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end778:                                        ; preds = %if.then765
  %431 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %432 = load ptr, ptr %__pyx_v_dst_type, align 8, !tbaa !5
  %call779 = call ptr @PyObject_RichCompare(ptr noundef %431, ptr noundef %432, i32 noundef 2)
  store ptr %call779, ptr %__pyx_t_13, align 8, !tbaa !5
  %433 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %tobool780 = icmp ne ptr %433, null
  %lnot781 = xor i1 %tobool780, true
  %lnot783 = xor i1 %lnot781, true
  %lnot785 = xor i1 %lnot783, true
  %lnot.ext786 = zext i1 %lnot785 to i32
  %conv787 = sext i32 %lnot.ext786 to i64
  %expval788 = call i64 @llvm.expect.i64(i64 %conv787, i64 0)
  %tobool789 = icmp ne i64 %expval788, 0
  br i1 %tobool789, label %if.then790, label %if.end791

if.then790:                                       ; preds = %if.end778
  %434 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %434, ptr %__pyx_filename, align 8, !tbaa !5
  %435 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %436 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4650, ptr %__pyx_clineno, align 4, !tbaa !9
  %437 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end791:                                        ; preds = %if.end778
  %438 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %438)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %439 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  %call792 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %439)
  store i32 %call792, ptr %__pyx_t_2, align 4, !tbaa !9
  %440 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp793 = icmp slt i32 %440, 0
  %lnot795 = xor i1 %cmp793, true
  %lnot797 = xor i1 %lnot795, true
  %lnot.ext798 = zext i1 %lnot797 to i32
  %conv799 = sext i32 %lnot.ext798 to i64
  %expval800 = call i64 @llvm.expect.i64(i64 %conv799, i64 0)
  %tobool801 = icmp ne i64 %expval800, 0
  br i1 %tobool801, label %if.then802, label %if.end803

if.then802:                                       ; preds = %if.end791
  %441 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %441, ptr %__pyx_filename, align 8, !tbaa !5
  %442 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %443 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4652, ptr %__pyx_clineno, align 4, !tbaa !9
  %444 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end803:                                        ; preds = %if.end791
  %445 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %445)
  store ptr null, ptr %__pyx_t_13, align 8, !tbaa !5
  %446 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool804 = icmp ne i32 %446, 0
  br i1 %tobool804, label %if.then805, label %if.end806

if.then805:                                       ; preds = %if.end803
  store i32 1, ptr %__pyx_v_match_found, align 4, !tbaa !9
  br label %__pyx_L34

if.end806:                                        ; preds = %if.end803
  store i32 0, ptr %__pyx_v_match_found, align 4, !tbaa !9
  br label %__pyx_L32_break

__pyx_L34:                                        ; preds = %if.then805
  br label %if.end807

if.end807:                                        ; preds = %__pyx_L34, %do.end759
  br label %for.inc

for.inc:                                          ; preds = %if.end807
  %447 = load i64, ptr %__pyx_t_17, align 8, !tbaa !27
  %add = add i64 %447, 1
  store i64 %add, ptr %__pyx_t_17, align 8, !tbaa !27
  br label %for.cond, !llvm.loop !331

for.end:                                          ; preds = %for.cond
  br label %__pyx_L32_break

__pyx_L32_break:                                  ; preds = %for.end, %if.end806
  %448 = load i32, ptr %__pyx_v_match_found, align 4, !tbaa !9
  %cmp808 = icmp ne i32 %448, 0
  %conv809 = zext i1 %cmp808 to i32
  store i32 %conv809, ptr %__pyx_t_2, align 4, !tbaa !9
  %449 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool810 = icmp ne i32 %449, 0
  br i1 %tobool810, label %if.then811, label %if.end824

if.then811:                                       ; preds = %__pyx_L32_break
  %450 = load ptr, ptr %__pyx_v_candidates, align 8, !tbaa !5
  %451 = load ptr, ptr %__pyx_v_sig, align 8, !tbaa !5
  %call812 = call i32 @__Pyx_PyList_Append(ptr noundef %450, ptr noundef %451)
  store i32 %call812, ptr %__pyx_t_18, align 4, !tbaa !9
  %452 = load i32, ptr %__pyx_t_18, align 4, !tbaa !9
  %cmp813 = icmp eq i32 %452, -1
  %lnot815 = xor i1 %cmp813, true
  %lnot817 = xor i1 %lnot815, true
  %lnot.ext818 = zext i1 %lnot817 to i32
  %conv819 = sext i32 %lnot.ext818 to i64
  %expval820 = call i64 @llvm.expect.i64(i64 %conv819, i64 0)
  %tobool821 = icmp ne i64 %expval820, 0
  br i1 %tobool821, label %if.then822, label %if.end823

if.then822:                                       ; preds = %if.then811
  %453 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %453, ptr %__pyx_filename, align 8, !tbaa !5
  %454 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %455 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4668, ptr %__pyx_clineno, align 4, !tbaa !9
  %456 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end823:                                        ; preds = %if.then811
  br label %if.end824

if.end824:                                        ; preds = %if.end823, %__pyx_L32_break
  br label %while.cond590

while.end:                                        ; preds = %if.then602
  %457 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %457)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %458 = load ptr, ptr %__pyx_v_candidates, align 8, !tbaa !5
  %call825 = call i64 @PyList_GET_SIZE(ptr noundef %458)
  %cmp826 = icmp ne i64 %call825, 0
  %conv827 = zext i1 %cmp826 to i32
  store i32 %conv827, ptr %__pyx_t_2, align 4, !tbaa !9
  %459 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool828 = icmp ne i32 %459, 0
  %lnot829 = xor i1 %tobool828, true
  %lnot.ext830 = zext i1 %lnot829 to i32
  %cmp831 = icmp ne i32 %lnot.ext830, 0
  %conv832 = zext i1 %cmp831 to i32
  store i32 %conv832, ptr %__pyx_t_3, align 4, !tbaa !9
  %460 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool833 = icmp ne i32 %460, 0
  br i1 %tobool833, label %if.then834, label %if.end848

if.then834:                                       ; preds = %while.end
  %461 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %462 = load ptr, ptr @__pyx_tuple__3, align 8, !tbaa !5
  %call835 = call ptr @__Pyx_PyObject_Call(ptr noundef %461, ptr noundef %462, ptr noundef null)
  store ptr %call835, ptr %__pyx_t_6, align 8, !tbaa !5
  %463 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool836 = icmp ne ptr %463, null
  %lnot837 = xor i1 %tobool836, true
  %lnot839 = xor i1 %lnot837, true
  %lnot841 = xor i1 %lnot839, true
  %lnot.ext842 = zext i1 %lnot841 to i32
  %conv843 = sext i32 %lnot.ext842 to i64
  %expval844 = call i64 @llvm.expect.i64(i64 %conv843, i64 0)
  %tobool845 = icmp ne i64 %expval844, 0
  br i1 %tobool845, label %if.then846, label %if.end847

if.then846:                                       ; preds = %if.then834
  %464 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %464, ptr %__pyx_filename, align 8, !tbaa !5
  %465 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %466 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4675, ptr %__pyx_clineno, align 4, !tbaa !9
  %467 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end847:                                        ; preds = %if.then834
  %468 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %468, ptr noundef null, ptr noundef null, ptr noundef null)
  %469 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %469)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %470 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %470, ptr %__pyx_filename, align 8, !tbaa !5
  %471 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %472 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4679, ptr %__pyx_clineno, align 4, !tbaa !9
  %473 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end848:                                        ; preds = %while.end
  %474 = load ptr, ptr %__pyx_v_candidates, align 8, !tbaa !5
  %call849 = call i64 @PyList_GET_SIZE(ptr noundef %474)
  store i64 %call849, ptr %__pyx_t_9, align 8, !tbaa !27
  %475 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %cmp850 = icmp eq i64 %475, -1
  %lnot852 = xor i1 %cmp850, true
  %lnot854 = xor i1 %lnot852, true
  %lnot.ext855 = zext i1 %lnot854 to i32
  %conv856 = sext i32 %lnot.ext855 to i64
  %expval857 = call i64 @llvm.expect.i64(i64 %conv856, i64 0)
  %tobool858 = icmp ne i64 %expval857, 0
  br i1 %tobool858, label %if.then859, label %if.end860

if.then859:                                       ; preds = %if.end848
  %476 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %476, ptr %__pyx_filename, align 8, !tbaa !5
  %477 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %478 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4681, ptr %__pyx_clineno, align 4, !tbaa !9
  %479 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end860:                                        ; preds = %if.end848
  %480 = load i64, ptr %__pyx_t_9, align 8, !tbaa !27
  %cmp861 = icmp sgt i64 %480, 1
  %conv862 = zext i1 %cmp861 to i32
  %cmp863 = icmp ne i32 %conv862, 0
  %conv864 = zext i1 %cmp863 to i32
  store i32 %conv864, ptr %__pyx_t_3, align 4, !tbaa !9
  %481 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool865 = icmp ne i32 %481, 0
  br i1 %tobool865, label %if.then866, label %if.end880

if.then866:                                       ; preds = %if.end860
  %482 = load ptr, ptr @__pyx_builtin_TypeError, align 8, !tbaa !5
  %483 = load ptr, ptr @__pyx_tuple__4, align 8, !tbaa !5
  %call867 = call ptr @__Pyx_PyObject_Call(ptr noundef %482, ptr noundef %483, ptr noundef null)
  store ptr %call867, ptr %__pyx_t_6, align 8, !tbaa !5
  %484 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool868 = icmp ne ptr %484, null
  %lnot869 = xor i1 %tobool868, true
  %lnot871 = xor i1 %lnot869, true
  %lnot873 = xor i1 %lnot871, true
  %lnot.ext874 = zext i1 %lnot873 to i32
  %conv875 = sext i32 %lnot.ext874 to i64
  %expval876 = call i64 @llvm.expect.i64(i64 %conv875, i64 0)
  %tobool877 = icmp ne i64 %expval876, 0
  br i1 %tobool877, label %if.then878, label %if.end879

if.then878:                                       ; preds = %if.then866
  %485 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %485, ptr %__pyx_filename, align 8, !tbaa !5
  %486 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %487 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4684, ptr %__pyx_clineno, align 4, !tbaa !9
  %488 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end879:                                        ; preds = %if.then866
  %489 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %489, ptr noundef null, ptr noundef null, ptr noundef null)
  %490 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %490)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %491 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %491, ptr %__pyx_filename, align 8, !tbaa !5
  %492 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %493 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4688, ptr %__pyx_clineno, align 4, !tbaa !9
  %494 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end880:                                        ; preds = %if.end860
  %495 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %495)
  %496 = load ptr, ptr %__pyx_v_signatures.addr, align 8, !tbaa !5
  %cmp881 = icmp eq ptr %496, @_Py_NoneStruct
  %lnot883 = xor i1 %cmp881, true
  %lnot885 = xor i1 %lnot883, true
  %lnot.ext886 = zext i1 %lnot885 to i32
  %conv887 = sext i32 %lnot.ext886 to i64
  %expval888 = call i64 @llvm.expect.i64(i64 %conv887, i64 0)
  %tobool889 = icmp ne i64 %expval888, 0
  br i1 %tobool889, label %if.then890, label %if.end891

if.then890:                                       ; preds = %if.end880
  %497 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %497, ptr noundef @.str.131)
  %498 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %498, ptr %__pyx_filename, align 8, !tbaa !5
  %499 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %500 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4694, ptr %__pyx_clineno, align 4, !tbaa !9
  %501 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end891:                                        ; preds = %if.end880
  %502 = load ptr, ptr %__pyx_v_signatures.addr, align 8, !tbaa !5
  %503 = load ptr, ptr %__pyx_v_candidates, align 8, !tbaa !5
  %ob_item892 = getelementptr inbounds %struct.PyListObject, ptr %503, i32 0, i32 1
  %504 = load ptr, ptr %ob_item892, align 8, !tbaa !116
  %arrayidx893 = getelementptr ptr, ptr %504, i64 0
  %505 = load ptr, ptr %arrayidx893, align 8, !tbaa !5
  %call894 = call ptr @__Pyx_PyDict_GetItem(ptr noundef %502, ptr noundef %505)
  store ptr %call894, ptr %__pyx_t_6, align 8, !tbaa !5
  %506 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool895 = icmp ne ptr %506, null
  %lnot896 = xor i1 %tobool895, true
  %lnot898 = xor i1 %lnot896, true
  %lnot900 = xor i1 %lnot898, true
  %lnot.ext901 = zext i1 %lnot900 to i32
  %conv902 = sext i32 %lnot.ext901 to i64
  %expval903 = call i64 @llvm.expect.i64(i64 %conv902, i64 0)
  %tobool904 = icmp ne i64 %expval903, 0
  br i1 %tobool904, label %if.then905, label %if.end906

if.then905:                                       ; preds = %if.end891
  %507 = load ptr, ptr @__pyx_f, align 16, !tbaa !5
  store ptr %507, ptr %__pyx_filename, align 8, !tbaa !5
  %508 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 111, ptr %__pyx_lineno, align 4, !tbaa !9
  %509 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 4696, ptr %__pyx_clineno, align 4, !tbaa !9
  %510 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end906:                                        ; preds = %if.end891
  %511 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  store ptr %511, ptr %__pyx_r, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then905, %if.then890, %if.end879, %if.then878, %if.then859, %if.end847, %if.then846, %if.then822, %if.then802, %if.then790, %if.then777, %if.then750, %if.then734, %if.then687, %if.then674, %if.then630, %if.then613, %if.then588, %if.then575, %if.then564, %if.then551, %if.then537, %if.then503, %if.then469, %if.then451, %if.then435, %if.then413, %if.then395, %if.then379, %if.then352, %if.then328, %if.then315, %if.then301, %if.then280, %if.then261, %if.then242, %if.end218, %if.then217, %if.then204, %if.then191, %if.then178, %if.then165, %if.then153, %if.then141, %if.then128, %if.then113, %if.then101, %if.then81, %if.then64, %if.then52, %if.then41, %if.then20, %if.then
  %512 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %512)
  %513 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %513)
  %514 = load ptr, ptr %__pyx_t_12, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %514)
  %515 = load ptr, ptr %__pyx_t_13, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %515)
  %516 = load ptr, ptr %__pyx_t_14, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %516)
  %517 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %518 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %519 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.285, i32 noundef %517, i32 noundef %518, ptr noundef %519)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end906
  %520 = load ptr, ptr %__pyx_v_dest_sig, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %520)
  %521 = load ptr, ptr %__pyx_v_ndarray, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %521)
  %522 = load ptr, ptr %__pyx_v_arg, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %522)
  %523 = load ptr, ptr %__pyx_v_dtype, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %523)
  %524 = load ptr, ptr %__pyx_v_arg_base, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %524)
  %525 = load ptr, ptr %__pyx_v_candidates, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %525)
  %526 = load ptr, ptr %__pyx_v_sig, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %526)
  %527 = load ptr, ptr %__pyx_v_src_sig, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %527)
  %528 = load ptr, ptr %__pyx_v_dst_type, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %528)
  %529 = load ptr, ptr %__pyx_v_kwargs.addr, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %529)
  %530 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_18) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_17) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_16) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_15) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_14) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_13) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_12) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_11) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_10) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_9) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_dst_type) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_src_sig) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_match_found) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_sig) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_candidates) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_arg_base) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_dtype) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_arg) #13
  call void @llvm.lifetime.end.p0(i64 1, ptr %__pyx_v_kind) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_dtype_signed) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_itemsize) #13
  call void @llvm.lifetime.end.p0(i64 208, ptr %__pyx_v_memslice) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_ndarray) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_i) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_dest_sig) #13
  ret ptr %530
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_array___pyx_pf_15View_dot_MemoryView_5array_2__getbuffer__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_info, i32 noundef %__pyx_v_flags) #0 {
entry:
  %retval = alloca i32, align 4
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_info.addr = alloca ptr, align 8
  %__pyx_v_flags.addr = alloca i32, align 4
  %__pyx_v_bufmode = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca i64, align 8
  %__pyx_t_6 = alloca i32, align 4
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_info, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  store i32 %__pyx_v_flags, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_bufmode) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_BufferError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.296)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj = getelementptr inbounds %struct.Py_buffer, ptr %2, i32 0, i32 1
  store ptr @_Py_NoneStruct, ptr %obj, align 8, !tbaa !214
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  store i32 -1, ptr %__pyx_v_bufmode, align 4, !tbaa !9
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %mode = getelementptr inbounds %struct.__pyx_array_obj, ptr %3, i32 0, i32 9
  %4 = load ptr, ptr %mode, align 8, !tbaa !134
  %5 = load ptr, ptr @__pyx_n_u_c, align 8, !tbaa !5
  %call = call i32 @__Pyx_PyUnicode_Equals(ptr noundef %4, ptr noundef %5, i32 noundef 2)
  store i32 %call, ptr %__pyx_t_1, align 4, !tbaa !9
  %6 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp1 = icmp slt i32 %6, 0
  %lnot = xor i1 %cmp1, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %7 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %7, ptr %__pyx_filename, align 8, !tbaa !5
  %8 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 188, ptr %__pyx_lineno, align 4, !tbaa !9
  %9 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6864, ptr %__pyx_clineno, align 4, !tbaa !9
  %10 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end4:                                          ; preds = %if.end
  %11 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %cmp5 = icmp ne i32 %11, 0
  %conv6 = zext i1 %cmp5 to i32
  store i32 %conv6, ptr %__pyx_t_2, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool7 = icmp ne i32 %12, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end4
  store i32 184, ptr %__pyx_v_bufmode, align 4, !tbaa !9
  br label %__pyx_L3

if.end9:                                          ; preds = %if.end4
  %13 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %mode10 = getelementptr inbounds %struct.__pyx_array_obj, ptr %13, i32 0, i32 9
  %14 = load ptr, ptr %mode10, align 8, !tbaa !134
  %15 = load ptr, ptr @__pyx_n_u_fortran, align 8, !tbaa !5
  %call11 = call i32 @__Pyx_PyUnicode_Equals(ptr noundef %14, ptr noundef %15, i32 noundef 2)
  store i32 %call11, ptr %__pyx_t_2, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp12 = icmp slt i32 %16, 0
  %lnot14 = xor i1 %cmp12, true
  %lnot16 = xor i1 %lnot14, true
  %lnot.ext17 = zext i1 %lnot16 to i32
  %conv18 = sext i32 %lnot.ext17 to i64
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 0)
  %tobool20 = icmp ne i64 %expval19, 0
  br i1 %tobool20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end9
  %17 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %17, ptr %__pyx_filename, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 190, ptr %__pyx_lineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6894, ptr %__pyx_clineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end22:                                         ; preds = %if.end9
  %21 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp23 = icmp ne i32 %21, 0
  %conv24 = zext i1 %cmp23 to i32
  store i32 %conv24, ptr %__pyx_t_1, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool25 = icmp ne i32 %22, 0
  br i1 %tobool25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end22
  store i32 216, ptr %__pyx_v_bufmode, align 4, !tbaa !9
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.end22
  br label %__pyx_L3

__pyx_L3:                                         ; preds = %if.end27, %if.then8
  %23 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_v_bufmode, align 4, !tbaa !9
  %and = and i32 %23, %24
  %cmp28 = icmp ne i32 %and, 0
  %lnot30 = xor i1 %cmp28, true
  %lnot.ext31 = zext i1 %lnot30 to i32
  %cmp32 = icmp ne i32 %lnot.ext31, 0
  %conv33 = zext i1 %cmp32 to i32
  store i32 %conv33, ptr %__pyx_t_1, align 4, !tbaa !9
  %25 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool34 = icmp ne i32 %25, 0
  %lnot35 = xor i1 %tobool34, true
  %lnot37 = xor i1 %lnot35, true
  %lnot.ext38 = zext i1 %lnot37 to i32
  %conv39 = sext i32 %lnot.ext38 to i64
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0)
  %tobool41 = icmp ne i64 %expval40, 0
  br i1 %tobool41, label %if.then42, label %if.end56

if.then42:                                        ; preds = %__pyx_L3
  %26 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %27 = load ptr, ptr @__pyx_tuple__9, align 8, !tbaa !5
  %call43 = call ptr @__Pyx_PyObject_Call(ptr noundef %26, ptr noundef %27, ptr noundef null)
  store ptr %call43, ptr %__pyx_t_3, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool44 = icmp ne ptr %28, null
  %lnot45 = xor i1 %tobool44, true
  %lnot47 = xor i1 %lnot45, true
  %lnot49 = xor i1 %lnot47, true
  %lnot.ext50 = zext i1 %lnot49 to i32
  %conv51 = sext i32 %lnot.ext50 to i64
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 0)
  %tobool53 = icmp ne i64 %expval52, 0
  br i1 %tobool53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.then42
  %29 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %29, ptr %__pyx_filename, align 8, !tbaa !5
  %30 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 193, ptr %__pyx_lineno, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6934, ptr %__pyx_clineno, align 4, !tbaa !9
  %32 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end55:                                         ; preds = %if.then42
  %33 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %33, ptr noundef null, ptr noundef null, ptr noundef null)
  %34 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %34)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %35 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %35, ptr %__pyx_filename, align 8, !tbaa !5
  %36 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 193, ptr %__pyx_lineno, align 4, !tbaa !9
  %37 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 6938, ptr %__pyx_clineno, align 4, !tbaa !9
  %38 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end56:                                         ; preds = %__pyx_L3
  %39 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %data = getelementptr inbounds %struct.__pyx_array_obj, ptr %39, i32 0, i32 2
  %40 = load ptr, ptr %data, align 8, !tbaa !141
  store ptr %40, ptr %__pyx_t_4, align 8, !tbaa !5
  %41 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %buf = getelementptr inbounds %struct.Py_buffer, ptr %42, i32 0, i32 0
  store ptr %41, ptr %buf, align 8, !tbaa !249
  %43 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %len = getelementptr inbounds %struct.__pyx_array_obj, ptr %43, i32 0, i32 3
  %44 = load i64, ptr %len, align 8, !tbaa !163
  store i64 %44, ptr %__pyx_t_5, align 8, !tbaa !27
  %45 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %46 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %len57 = getelementptr inbounds %struct.Py_buffer, ptr %46, i32 0, i32 2
  store i64 %45, ptr %len57, align 8, !tbaa !179
  %47 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %ndim = getelementptr inbounds %struct.__pyx_array_obj, ptr %47, i32 0, i32 5
  %48 = load i32, ptr %ndim, align 8, !tbaa !145
  store i32 %48, ptr %__pyx_t_6, align 4, !tbaa !9
  %49 = load i32, ptr %__pyx_t_6, align 4, !tbaa !9
  %50 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %ndim58 = getelementptr inbounds %struct.Py_buffer, ptr %50, i32 0, i32 5
  store i32 %49, ptr %ndim58, align 4, !tbaa !178
  %51 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_shape = getelementptr inbounds %struct.__pyx_array_obj, ptr %51, i32 0, i32 6
  %52 = load ptr, ptr %_shape, align 8, !tbaa !143
  store ptr %52, ptr %__pyx_t_7, align 8, !tbaa !5
  %53 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %54 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %shape = getelementptr inbounds %struct.Py_buffer, ptr %54, i32 0, i32 7
  store ptr %53, ptr %shape, align 8, !tbaa !180
  %55 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %_strides = getelementptr inbounds %struct.__pyx_array_obj, ptr %55, i32 0, i32 7
  %56 = load ptr, ptr %_strides, align 8, !tbaa !144
  store ptr %56, ptr %__pyx_t_7, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_t_7, align 8, !tbaa !5
  %58 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %strides = getelementptr inbounds %struct.Py_buffer, ptr %58, i32 0, i32 8
  store ptr %57, ptr %strides, align 8, !tbaa !181
  %59 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %suboffsets = getelementptr inbounds %struct.Py_buffer, ptr %59, i32 0, i32 9
  store ptr null, ptr %suboffsets, align 8, !tbaa !182
  %60 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %itemsize = getelementptr inbounds %struct.__pyx_array_obj, ptr %60, i32 0, i32 8
  %61 = load i64, ptr %itemsize, align 8, !tbaa !161
  store i64 %61, ptr %__pyx_t_5, align 8, !tbaa !27
  %62 = load i64, ptr %__pyx_t_5, align 8, !tbaa !27
  %63 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %itemsize59 = getelementptr inbounds %struct.Py_buffer, ptr %63, i32 0, i32 3
  store i64 %62, ptr %itemsize59, align 8, !tbaa !177
  %64 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %readonly = getelementptr inbounds %struct.Py_buffer, ptr %64, i32 0, i32 4
  store i32 0, ptr %readonly, align 8, !tbaa !332
  %65 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %and60 = and i32 %65, 4
  %cmp61 = icmp ne i32 %and60, 0
  %conv62 = zext i1 %cmp61 to i32
  store i32 %conv62, ptr %__pyx_t_1, align 4, !tbaa !9
  %66 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool63 = icmp ne i32 %66, 0
  br i1 %tobool63, label %if.then64, label %if.end66

if.then64:                                        ; preds = %if.end56
  %67 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %format = getelementptr inbounds %struct.__pyx_array_obj, ptr %67, i32 0, i32 4
  %68 = load ptr, ptr %format, align 8, !tbaa !162
  store ptr %68, ptr %__pyx_t_4, align 8, !tbaa !5
  %69 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %70 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %format65 = getelementptr inbounds %struct.Py_buffer, ptr %70, i32 0, i32 6
  store ptr %69, ptr %format65, align 8, !tbaa !245
  br label %__pyx_L5

if.end66:                                         ; preds = %if.end56
  %71 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %format67 = getelementptr inbounds %struct.Py_buffer, ptr %71, i32 0, i32 6
  store ptr null, ptr %format67, align 8, !tbaa !245
  br label %__pyx_L5

__pyx_L5:                                         ; preds = %if.end66, %if.then64
  %72 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %72)
  %73 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj68 = getelementptr inbounds %struct.Py_buffer, ptr %73, i32 0, i32 1
  %74 = load ptr, ptr %obj68, align 8, !tbaa !214
  call void @Py_DECREF(ptr noundef %74)
  %75 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %76 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj69 = getelementptr inbounds %struct.Py_buffer, ptr %76, i32 0, i32 1
  store ptr %75, ptr %obj69, align 8, !tbaa !214
  store i32 0, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.end55, %if.then54, %if.then21, %if.then3
  %77 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %77)
  %78 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %79 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %80 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.297, i32 noundef %78, i32 noundef %79, ptr noundef %80)
  store i32 -1, ptr %__pyx_r, align 4, !tbaa !9
  %81 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj70 = getelementptr inbounds %struct.Py_buffer, ptr %81, i32 0, i32 1
  %82 = load ptr, ptr %obj70, align 8, !tbaa !214
  %cmp71 = icmp ne ptr %82, null
  br i1 %cmp71, label %if.then73, label %if.end76

if.then73:                                        ; preds = %__pyx_L1_error
  %83 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj74 = getelementptr inbounds %struct.Py_buffer, ptr %83, i32 0, i32 1
  %84 = load ptr, ptr %obj74, align 8, !tbaa !214
  call void @Py_DECREF(ptr noundef %84)
  %85 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj75 = getelementptr inbounds %struct.Py_buffer, ptr %85, i32 0, i32 1
  store ptr null, ptr %obj75, align 8, !tbaa !214
  br label %if.end76

if.end76:                                         ; preds = %if.then73, %__pyx_L1_error
  br label %__pyx_L2

__pyx_L0:                                         ; preds = %__pyx_L5
  %86 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj77 = getelementptr inbounds %struct.Py_buffer, ptr %86, i32 0, i32 1
  %87 = load ptr, ptr %obj77, align 8, !tbaa !214
  %cmp78 = icmp eq ptr %87, @_Py_NoneStruct
  br i1 %cmp78, label %if.then80, label %if.end83

if.then80:                                        ; preds = %__pyx_L0
  %88 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj81 = getelementptr inbounds %struct.Py_buffer, ptr %88, i32 0, i32 1
  %89 = load ptr, ptr %obj81, align 8, !tbaa !214
  call void @Py_DECREF(ptr noundef %89)
  %90 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj82 = getelementptr inbounds %struct.Py_buffer, ptr %90, i32 0, i32 1
  store ptr null, ptr %obj82, align 8, !tbaa !214
  br label %if.end83

if.end83:                                         ; preds = %if.then80, %__pyx_L0
  br label %__pyx_L2

__pyx_L2:                                         ; preds = %if.end83, %if.end76
  %91 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  store i32 %91, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_L2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_bufmode) #13
  %92 = load i32, ptr %retval, align 4
  ret i32 %92
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_8__getbuffer__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_info, i32 noundef %__pyx_v_flags) #0 {
entry:
  %retval = alloca i32, align 4
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_info.addr = alloca ptr, align 8
  %__pyx_v_flags.addr = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca i32, align 4
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca ptr, align 8
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca i32, align 4
  %__pyx_t_8 = alloca i64, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v_info, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  store i32 %__pyx_v_flags, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #13
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %cmp = icmp eq ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_BufferError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.296)
  store i32 -1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj = getelementptr inbounds %struct.Py_buffer, ptr %2, i32 0, i32 1
  store ptr @_Py_NoneStruct, ptr %obj, align 8, !tbaa !214
  call void @Py_INCREF(ptr noundef @_Py_NoneStruct)
  %3 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %and = and i32 %3, 1
  %cmp1 = icmp ne i32 %and, 0
  %conv = zext i1 %cmp1 to i32
  store i32 %conv, ptr %__pyx_t_2, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  br label %if.end3

if.else:                                          ; preds = %if.end
  %5 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %5, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L4_bool_binop_done

if.end3:                                          ; preds = %if.then2
  %6 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %6, i32 0, i32 8
  %readonly = getelementptr inbounds %struct.Py_buffer, ptr %view, i32 0, i32 4
  %7 = load i32, ptr %readonly, align 8, !tbaa !242
  %cmp4 = icmp ne i32 %7, 0
  %conv5 = zext i1 %cmp4 to i32
  store i32 %conv5, ptr %__pyx_t_2, align 4, !tbaa !9
  %8 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  store i32 %8, ptr %__pyx_t_1, align 4, !tbaa !9
  br label %__pyx_L4_bool_binop_done

__pyx_L4_bool_binop_done:                         ; preds = %if.end3, %if.else
  %9 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool6 = icmp ne i32 %9, 0
  %lnot = xor i1 %tobool6, true
  %lnot7 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot7 to i32
  %conv8 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv8, i64 0)
  %tobool9 = icmp ne i64 %expval, 0
  br i1 %tobool9, label %if.then10, label %if.end23

if.then10:                                        ; preds = %__pyx_L4_bool_binop_done
  %10 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !tbaa !5
  %11 = load ptr, ptr @__pyx_tuple__14, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_Call(ptr noundef %10, ptr noundef %11, ptr noundef null)
  store ptr %call, ptr %__pyx_t_3, align 8, !tbaa !5
  %12 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  %tobool11 = icmp ne ptr %12, null
  %lnot12 = xor i1 %tobool11, true
  %lnot14 = xor i1 %lnot12, true
  %lnot16 = xor i1 %lnot14, true
  %lnot.ext17 = zext i1 %lnot16 to i32
  %conv18 = sext i32 %lnot.ext17 to i64
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 0)
  %tobool20 = icmp ne i64 %expval19, 0
  br i1 %tobool20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.then10
  %13 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %13, ptr %__pyx_filename, align 8, !tbaa !5
  %14 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 522, ptr %__pyx_lineno, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10863, ptr %__pyx_clineno, align 4, !tbaa !9
  %16 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end22:                                         ; preds = %if.then10
  %17 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %17, ptr noundef null, ptr noundef null, ptr noundef null)
  %18 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %18)
  store ptr null, ptr %__pyx_t_3, align 8, !tbaa !5
  %19 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %19, ptr %__pyx_filename, align 8, !tbaa !5
  %20 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 522, ptr %__pyx_lineno, align 4, !tbaa !9
  %21 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 10867, ptr %__pyx_clineno, align 4, !tbaa !9
  %22 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end23:                                         ; preds = %__pyx_L4_bool_binop_done
  %23 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %and24 = and i32 %23, 8
  %cmp25 = icmp ne i32 %and24, 0
  %conv26 = zext i1 %cmp25 to i32
  store i32 %conv26, ptr %__pyx_t_1, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool27 = icmp ne i32 %24, 0
  br i1 %tobool27, label %if.then28, label %if.end31

if.then28:                                        ; preds = %if.end23
  %25 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view29 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %25, i32 0, i32 8
  %shape = getelementptr inbounds %struct.Py_buffer, ptr %view29, i32 0, i32 7
  %26 = load ptr, ptr %shape, align 8, !tbaa !189
  store ptr %26, ptr %__pyx_t_4, align 8, !tbaa !5
  %27 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %shape30 = getelementptr inbounds %struct.Py_buffer, ptr %28, i32 0, i32 7
  store ptr %27, ptr %shape30, align 8, !tbaa !180
  br label %__pyx_L6

if.end31:                                         ; preds = %if.end23
  %29 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %shape32 = getelementptr inbounds %struct.Py_buffer, ptr %29, i32 0, i32 7
  store ptr null, ptr %shape32, align 8, !tbaa !180
  br label %__pyx_L6

__pyx_L6:                                         ; preds = %if.end31, %if.then28
  %30 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %and33 = and i32 %30, 24
  %cmp34 = icmp ne i32 %and33, 0
  %conv35 = zext i1 %cmp34 to i32
  store i32 %conv35, ptr %__pyx_t_1, align 4, !tbaa !9
  %31 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool36 = icmp ne i32 %31, 0
  br i1 %tobool36, label %if.then37, label %if.end40

if.then37:                                        ; preds = %__pyx_L6
  %32 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view38 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %32, i32 0, i32 8
  %strides = getelementptr inbounds %struct.Py_buffer, ptr %view38, i32 0, i32 8
  %33 = load ptr, ptr %strides, align 8, !tbaa !190
  store ptr %33, ptr %__pyx_t_4, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %35 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %strides39 = getelementptr inbounds %struct.Py_buffer, ptr %35, i32 0, i32 8
  store ptr %34, ptr %strides39, align 8, !tbaa !181
  br label %__pyx_L7

if.end40:                                         ; preds = %__pyx_L6
  %36 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %strides41 = getelementptr inbounds %struct.Py_buffer, ptr %36, i32 0, i32 8
  store ptr null, ptr %strides41, align 8, !tbaa !181
  br label %__pyx_L7

__pyx_L7:                                         ; preds = %if.end40, %if.then37
  %37 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %and42 = and i32 %37, 280
  %cmp43 = icmp ne i32 %and42, 0
  %conv44 = zext i1 %cmp43 to i32
  store i32 %conv44, ptr %__pyx_t_1, align 4, !tbaa !9
  %38 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool45 = icmp ne i32 %38, 0
  br i1 %tobool45, label %if.then46, label %if.end49

if.then46:                                        ; preds = %__pyx_L7
  %39 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view47 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %39, i32 0, i32 8
  %suboffsets = getelementptr inbounds %struct.Py_buffer, ptr %view47, i32 0, i32 9
  %40 = load ptr, ptr %suboffsets, align 8, !tbaa !122
  store ptr %40, ptr %__pyx_t_4, align 8, !tbaa !5
  %41 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %suboffsets48 = getelementptr inbounds %struct.Py_buffer, ptr %42, i32 0, i32 9
  store ptr %41, ptr %suboffsets48, align 8, !tbaa !182
  br label %__pyx_L8

if.end49:                                         ; preds = %__pyx_L7
  %43 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %suboffsets50 = getelementptr inbounds %struct.Py_buffer, ptr %43, i32 0, i32 9
  store ptr null, ptr %suboffsets50, align 8, !tbaa !182
  br label %__pyx_L8

__pyx_L8:                                         ; preds = %if.end49, %if.then46
  %44 = load i32, ptr %__pyx_v_flags.addr, align 4, !tbaa !9
  %and51 = and i32 %44, 4
  %cmp52 = icmp ne i32 %and51, 0
  %conv53 = zext i1 %cmp52 to i32
  store i32 %conv53, ptr %__pyx_t_1, align 4, !tbaa !9
  %45 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %tobool54 = icmp ne i32 %45, 0
  br i1 %tobool54, label %if.then55, label %if.end58

if.then55:                                        ; preds = %__pyx_L8
  %46 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view56 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %46, i32 0, i32 8
  %format = getelementptr inbounds %struct.Py_buffer, ptr %view56, i32 0, i32 6
  %47 = load ptr, ptr %format, align 8, !tbaa !124
  store ptr %47, ptr %__pyx_t_5, align 8, !tbaa !5
  %48 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %49 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %format57 = getelementptr inbounds %struct.Py_buffer, ptr %49, i32 0, i32 6
  store ptr %48, ptr %format57, align 8, !tbaa !245
  br label %__pyx_L9

if.end58:                                         ; preds = %__pyx_L8
  %50 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %format59 = getelementptr inbounds %struct.Py_buffer, ptr %50, i32 0, i32 6
  store ptr null, ptr %format59, align 8, !tbaa !245
  br label %__pyx_L9

__pyx_L9:                                         ; preds = %if.end58, %if.then55
  %51 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view60 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %51, i32 0, i32 8
  %buf = getelementptr inbounds %struct.Py_buffer, ptr %view60, i32 0, i32 0
  %52 = load ptr, ptr %buf, align 8, !tbaa !112
  store ptr %52, ptr %__pyx_t_6, align 8, !tbaa !5
  %53 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %54 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %buf61 = getelementptr inbounds %struct.Py_buffer, ptr %54, i32 0, i32 0
  store ptr %53, ptr %buf61, align 8, !tbaa !249
  %55 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view62 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %55, i32 0, i32 8
  %ndim = getelementptr inbounds %struct.Py_buffer, ptr %view62, i32 0, i32 5
  %56 = load i32, ptr %ndim, align 4, !tbaa !123
  store i32 %56, ptr %__pyx_t_7, align 4, !tbaa !9
  %57 = load i32, ptr %__pyx_t_7, align 4, !tbaa !9
  %58 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %ndim63 = getelementptr inbounds %struct.Py_buffer, ptr %58, i32 0, i32 5
  store i32 %57, ptr %ndim63, align 4, !tbaa !178
  %59 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view64 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %59, i32 0, i32 8
  %itemsize = getelementptr inbounds %struct.Py_buffer, ptr %view64, i32 0, i32 3
  %60 = load i64, ptr %itemsize, align 8, !tbaa !120
  store i64 %60, ptr %__pyx_t_8, align 8, !tbaa !27
  %61 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %62 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %itemsize65 = getelementptr inbounds %struct.Py_buffer, ptr %62, i32 0, i32 3
  store i64 %61, ptr %itemsize65, align 8, !tbaa !177
  %63 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view66 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %63, i32 0, i32 8
  %len = getelementptr inbounds %struct.Py_buffer, ptr %view66, i32 0, i32 2
  %64 = load i64, ptr %len, align 8, !tbaa !333
  store i64 %64, ptr %__pyx_t_8, align 8, !tbaa !27
  %65 = load i64, ptr %__pyx_t_8, align 8, !tbaa !27
  %66 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %len67 = getelementptr inbounds %struct.Py_buffer, ptr %66, i32 0, i32 2
  store i64 %65, ptr %len67, align 8, !tbaa !179
  %67 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %view68 = getelementptr inbounds %struct.__pyx_memoryview_obj, ptr %67, i32 0, i32 8
  %readonly69 = getelementptr inbounds %struct.Py_buffer, ptr %view68, i32 0, i32 4
  %68 = load i32, ptr %readonly69, align 8, !tbaa !242
  store i32 %68, ptr %__pyx_t_1, align 4, !tbaa !9
  %69 = load i32, ptr %__pyx_t_1, align 4, !tbaa !9
  %70 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %readonly70 = getelementptr inbounds %struct.Py_buffer, ptr %70, i32 0, i32 4
  store i32 %69, ptr %readonly70, align 8, !tbaa !332
  %71 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %71)
  %72 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj71 = getelementptr inbounds %struct.Py_buffer, ptr %72, i32 0, i32 1
  %73 = load ptr, ptr %obj71, align 8, !tbaa !214
  call void @Py_DECREF(ptr noundef %73)
  %74 = load ptr, ptr %__pyx_v_self.addr, align 8, !tbaa !5
  %75 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj72 = getelementptr inbounds %struct.Py_buffer, ptr %75, i32 0, i32 1
  store ptr %74, ptr %obj72, align 8, !tbaa !214
  store i32 0, ptr %__pyx_r, align 4, !tbaa !9
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.end22, %if.then21
  %76 = load ptr, ptr %__pyx_t_3, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %76)
  %77 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %78 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %79 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.298, i32 noundef %77, i32 noundef %78, ptr noundef %79)
  store i32 -1, ptr %__pyx_r, align 4, !tbaa !9
  %80 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj73 = getelementptr inbounds %struct.Py_buffer, ptr %80, i32 0, i32 1
  %81 = load ptr, ptr %obj73, align 8, !tbaa !214
  %cmp74 = icmp ne ptr %81, null
  br i1 %cmp74, label %if.then76, label %if.end79

if.then76:                                        ; preds = %__pyx_L1_error
  %82 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj77 = getelementptr inbounds %struct.Py_buffer, ptr %82, i32 0, i32 1
  %83 = load ptr, ptr %obj77, align 8, !tbaa !214
  call void @Py_DECREF(ptr noundef %83)
  %84 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj78 = getelementptr inbounds %struct.Py_buffer, ptr %84, i32 0, i32 1
  store ptr null, ptr %obj78, align 8, !tbaa !214
  br label %if.end79

if.end79:                                         ; preds = %if.then76, %__pyx_L1_error
  br label %__pyx_L2

__pyx_L0:                                         ; preds = %__pyx_L9
  %85 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj80 = getelementptr inbounds %struct.Py_buffer, ptr %85, i32 0, i32 1
  %86 = load ptr, ptr %obj80, align 8, !tbaa !214
  %cmp81 = icmp eq ptr %86, @_Py_NoneStruct
  br i1 %cmp81, label %if.then83, label %if.end86

if.then83:                                        ; preds = %__pyx_L0
  %87 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj84 = getelementptr inbounds %struct.Py_buffer, ptr %87, i32 0, i32 1
  %88 = load ptr, ptr %obj84, align 8, !tbaa !214
  call void @Py_DECREF(ptr noundef %88)
  %89 = load ptr, ptr %__pyx_v_info.addr, align 8, !tbaa !5
  %obj85 = getelementptr inbounds %struct.Py_buffer, ptr %89, i32 0, i32 1
  store ptr null, ptr %obj85, align 8, !tbaa !214
  br label %if.end86

if.end86:                                         ; preds = %if.then83, %__pyx_L0
  br label %__pyx_L2

__pyx_L2:                                         ; preds = %if.end86, %if.end79
  %90 = load i32, ptr %__pyx_r, align 4, !tbaa !9
  store i32 %90, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %__pyx_L2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_7) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #13
  %91 = load i32, ptr %retval, align 4
  ret i32 %91
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_15View_dot_MemoryView_1__pyx_unpickle_Enum(ptr noundef %__pyx_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v___pyx_type = alloca ptr, align 8
  %__pyx_v___pyx_checksum = alloca i64, align 8
  %__pyx_v___pyx_state = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %values = alloca [3 x ptr], align 16
  %kw_args = alloca i64, align 8
  %pos_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !5
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_type) #13
  store ptr null, ptr %__pyx_v___pyx_type, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_checksum) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_state) #13
  store ptr null, ptr %__pyx_v___pyx_state, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr %values) #13
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 24, i1 false)
  %0 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.else84

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos_args) #13
  %1 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call = call i64 @PyTuple_GET_SIZE(ptr noundef %1)
  store i64 %call, ptr %pos_args, align 8, !tbaa !27
  %2 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %2, label %sw.default [
    i64 3, label %sw.bb
    i64 2, label %sw.bb4
    i64 1, label %sw.bb8
    i64 0, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.then
  %3 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 2
  %4 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %arrayidx3 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2
  store ptr %4, ptr %arrayidx3, align 16, !tbaa !5
  br label %sw.bb4

sw.bb4:                                           ; preds = %if.then, %sw.bb
  %5 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %5, i32 0, i32 1
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 1
  %6 = load ptr, ptr %arrayidx6, align 8, !tbaa !5
  %arrayidx7 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1
  store ptr %6, ptr %arrayidx7, align 8, !tbaa !5
  br label %sw.bb8

sw.bb8:                                           ; preds = %if.then, %sw.bb4
  %7 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item9 = getelementptr inbounds %struct.PyTupleObject, ptr %7, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x ptr], ptr %ob_item9, i64 0, i64 0
  %8 = load ptr, ptr %arrayidx10, align 8, !tbaa !5
  %arrayidx11 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0
  store ptr %8, ptr %arrayidx11, align 16, !tbaa !5
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb8, %if.then
  %9 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %call12 = call i64 @PyDict_Size(ptr noundef %9)
  store i64 %call12, ptr %kw_args, align 8, !tbaa !27
  %10 = load i64, ptr %pos_args, align 8, !tbaa !27
  switch i64 %10, label %sw.epilog59 [
    i64 0, label %sw.bb13
    i64 1, label %sw.bb25
    i64 2, label %sw.bb42
  ]

sw.bb13:                                          ; preds = %sw.epilog
  %11 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %12 = load ptr, ptr @__pyx_n_s_pyx_type, align 8, !tbaa !5
  %13 = load ptr, ptr @__pyx_n_s_pyx_type, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %13, i32 0, i32 2
  %14 = load i64, ptr %hash, align 8, !tbaa !154
  %call14 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %11, ptr noundef %12, i64 noundef %14)
  %arrayidx15 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0
  store ptr %call14, ptr %arrayidx15, align 16, !tbaa !5
  %cmp = icmp ne ptr %call14, null
  %lnot17 = xor i1 %cmp, true
  %lnot19 = xor i1 %lnot17, true
  %lnot.ext20 = zext i1 %lnot19 to i32
  %conv21 = sext i32 %lnot.ext20 to i64
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 1)
  %tobool23 = icmp ne i64 %expval22, 0
  br i1 %tobool23, label %if.then24, label %if.else

if.then24:                                        ; preds = %sw.bb13
  %15 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec = add i64 %15, -1
  store i64 %dec, ptr %kw_args, align 8, !tbaa !27
  br label %if.end

if.else:                                          ; preds = %sw.bb13
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then24
  br label %sw.bb25

sw.bb25:                                          ; preds = %sw.epilog, %if.end
  %16 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %17 = load ptr, ptr @__pyx_n_s_pyx_checksum, align 8, !tbaa !5
  %18 = load ptr, ptr @__pyx_n_s_pyx_checksum, align 8, !tbaa !5
  %hash26 = getelementptr inbounds %struct.PyASCIIObject, ptr %18, i32 0, i32 2
  %19 = load i64, ptr %hash26, align 8, !tbaa !154
  %call27 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %16, ptr noundef %17, i64 noundef %19)
  %arrayidx28 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1
  store ptr %call27, ptr %arrayidx28, align 8, !tbaa !5
  %cmp29 = icmp ne ptr %call27, null
  %lnot31 = xor i1 %cmp29, true
  %lnot33 = xor i1 %lnot31, true
  %lnot.ext34 = zext i1 %lnot33 to i32
  %conv35 = sext i32 %lnot.ext34 to i64
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 1)
  %tobool37 = icmp ne i64 %expval36, 0
  br i1 %tobool37, label %if.then38, label %if.else40

if.then38:                                        ; preds = %sw.bb25
  %20 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec39 = add i64 %20, -1
  store i64 %dec39, ptr %kw_args, align 8, !tbaa !27
  br label %if.end41

if.else40:                                        ; preds = %sw.bb25
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.299, i32 noundef 1, i64 noundef 3, i64 noundef 3, i64 noundef 1)
  %21 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %21, ptr %__pyx_filename, align 8, !tbaa !5
  %22 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %23 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18738, ptr %__pyx_clineno, align 4, !tbaa !9
  %24 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end41:                                         ; preds = %if.then38
  br label %sw.bb42

sw.bb42:                                          ; preds = %sw.epilog, %if.end41
  %25 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %26 = load ptr, ptr @__pyx_n_s_pyx_state, align 8, !tbaa !5
  %27 = load ptr, ptr @__pyx_n_s_pyx_state, align 8, !tbaa !5
  %hash43 = getelementptr inbounds %struct.PyASCIIObject, ptr %27, i32 0, i32 2
  %28 = load i64, ptr %hash43, align 8, !tbaa !154
  %call44 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %25, ptr noundef %26, i64 noundef %28)
  %arrayidx45 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2
  store ptr %call44, ptr %arrayidx45, align 16, !tbaa !5
  %cmp46 = icmp ne ptr %call44, null
  %lnot48 = xor i1 %cmp46, true
  %lnot50 = xor i1 %lnot48, true
  %lnot.ext51 = zext i1 %lnot50 to i32
  %conv52 = sext i32 %lnot.ext51 to i64
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 1)
  %tobool54 = icmp ne i64 %expval53, 0
  br i1 %tobool54, label %if.then55, label %if.else57

if.then55:                                        ; preds = %sw.bb42
  %29 = load i64, ptr %kw_args, align 8, !tbaa !27
  %dec56 = add i64 %29, -1
  store i64 %dec56, ptr %kw_args, align 8, !tbaa !27
  br label %if.end58

if.else57:                                        ; preds = %sw.bb42
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.299, i32 noundef 1, i64 noundef 3, i64 noundef 3, i64 noundef 2)
  %30 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %30, ptr %__pyx_filename, align 8, !tbaa !5
  %31 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %32 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18744, ptr %__pyx_clineno, align 4, !tbaa !9
  %33 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end58:                                         ; preds = %if.then55
  br label %sw.epilog59

sw.epilog59:                                      ; preds = %if.end58, %sw.epilog
  %34 = load i64, ptr %kw_args, align 8, !tbaa !27
  %cmp60 = icmp sgt i64 %34, 0
  %lnot62 = xor i1 %cmp60, true
  %lnot64 = xor i1 %lnot62, true
  %lnot.ext65 = zext i1 %lnot64 to i32
  %conv66 = sext i32 %lnot.ext65 to i64
  %expval67 = call i64 @llvm.expect.i64(i64 %conv66, i64 0)
  %tobool68 = icmp ne i64 %expval67, 0
  br i1 %tobool68, label %if.then69, label %if.end82

if.then69:                                        ; preds = %sw.epilog59
  %35 = load ptr, ptr %__pyx_kwds.addr, align 8, !tbaa !5
  %arraydecay = getelementptr inbounds [3 x ptr], ptr %values, i64 0, i64 0
  %36 = load i64, ptr %pos_args, align 8, !tbaa !27
  %call70 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %35, ptr noundef @__pyx_pw_15View_dot_MemoryView_1__pyx_unpickle_Enum.__pyx_pyargnames, ptr noundef null, ptr noundef %arraydecay, i64 noundef %36, ptr noundef @.str.299)
  %cmp71 = icmp slt i32 %call70, 0
  %lnot73 = xor i1 %cmp71, true
  %lnot75 = xor i1 %lnot73, true
  %lnot.ext76 = zext i1 %lnot75 to i32
  %conv77 = sext i32 %lnot.ext76 to i64
  %expval78 = call i64 @llvm.expect.i64(i64 %conv77, i64 0)
  %tobool79 = icmp ne i64 %expval78, 0
  br i1 %tobool79, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.then69
  %37 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %37, ptr %__pyx_filename, align 8, !tbaa !5
  %38 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %39 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18748, ptr %__pyx_clineno, align 4, !tbaa !9
  %40 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end81:                                         ; preds = %if.then69
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %sw.epilog59
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then80, %if.else57, %if.else40, %if.else, %sw.default, %if.end82
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos_args) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup118 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end100

if.else84:                                        ; preds = %entry
  %41 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call85 = call i64 @PyTuple_GET_SIZE(ptr noundef %41)
  %cmp86 = icmp ne i64 %call85, 3
  br i1 %cmp86, label %if.then88, label %if.else89

if.then88:                                        ; preds = %if.else84
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup118

if.else89:                                        ; preds = %if.else84
  %42 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item90 = getelementptr inbounds %struct.PyTupleObject, ptr %42, i32 0, i32 1
  %arrayidx91 = getelementptr [1 x ptr], ptr %ob_item90, i64 0, i64 0
  %43 = load ptr, ptr %arrayidx91, align 8, !tbaa !5
  %arrayidx92 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0
  store ptr %43, ptr %arrayidx92, align 16, !tbaa !5
  %44 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item93 = getelementptr inbounds %struct.PyTupleObject, ptr %44, i32 0, i32 1
  %arrayidx94 = getelementptr [1 x ptr], ptr %ob_item93, i64 0, i64 1
  %45 = load ptr, ptr %arrayidx94, align 8, !tbaa !5
  %arrayidx95 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1
  store ptr %45, ptr %arrayidx95, align 8, !tbaa !5
  %46 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %ob_item96 = getelementptr inbounds %struct.PyTupleObject, ptr %46, i32 0, i32 1
  %arrayidx97 = getelementptr [1 x ptr], ptr %ob_item96, i64 0, i64 2
  %47 = load ptr, ptr %arrayidx97, align 8, !tbaa !5
  %arrayidx98 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2
  store ptr %47, ptr %arrayidx98, align 16, !tbaa !5
  br label %if.end99

if.end99:                                         ; preds = %if.else89
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %cleanup.cont
  %arrayidx101 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0
  %48 = load ptr, ptr %arrayidx101, align 16, !tbaa !5
  store ptr %48, ptr %__pyx_v___pyx_type, align 8, !tbaa !5
  %arrayidx102 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1
  %49 = load ptr, ptr %arrayidx102, align 8, !tbaa !5
  %call103 = call i64 @__Pyx_PyInt_As_long(ptr noundef %49)
  store i64 %call103, ptr %__pyx_v___pyx_checksum, align 8, !tbaa !27
  %50 = load i64, ptr %__pyx_v___pyx_checksum, align 8, !tbaa !27
  %cmp104 = icmp eq i64 %50, -1
  br i1 %cmp104, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end100
  %call106 = call ptr @PyErr_Occurred()
  %tobool107 = icmp ne ptr %call106, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end100
  %51 = phi i1 [ false, %if.end100 ], [ %tobool107, %land.rhs ]
  %lnot108 = xor i1 %51, true
  %lnot110 = xor i1 %lnot108, true
  %lnot.ext111 = zext i1 %lnot110 to i32
  %conv112 = sext i32 %lnot.ext111 to i64
  %expval113 = call i64 @llvm.expect.i64(i64 %conv112, i64 0)
  %tobool114 = icmp ne i64 %expval113, 0
  br i1 %tobool114, label %if.then115, label %if.end116

if.then115:                                       ; preds = %land.end
  %52 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %52, ptr %__pyx_filename, align 8, !tbaa !5
  %53 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18758, ptr %__pyx_clineno, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup118

if.end116:                                        ; preds = %land.end
  %arrayidx117 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2
  %56 = load ptr, ptr %arrayidx117, align 16, !tbaa !5
  store ptr %56, ptr %__pyx_v___pyx_state, align 8, !tbaa !5
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup118

cleanup118:                                       ; preds = %if.then115, %if.then88, %if.end116, %cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr %values) #13
  %cleanup.dest119 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest119, label %cleanup123 [
    i32 0, label %cleanup.cont120
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont120:                                  ; preds = %cleanup118
  br label %__pyx_L4_argument_unpacking_done

__pyx_L5_argtuple_error:                          ; preds = %cleanup118
  %57 = load ptr, ptr %__pyx_args.addr, align 8, !tbaa !5
  %call121 = call i64 @PyTuple_GET_SIZE(ptr noundef %57)
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.299, i32 noundef 1, i64 noundef 3, i64 noundef 3, i64 noundef %call121)
  %58 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %58, ptr %__pyx_filename, align 8, !tbaa !5
  %59 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 1, ptr %__pyx_lineno, align 4, !tbaa !9
  %60 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18763, ptr %__pyx_clineno, align 4, !tbaa !9
  %61 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L3_error

__pyx_L3_error:                                   ; preds = %cleanup118, %__pyx_L5_argtuple_error
  %62 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %63 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %64 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.300, i32 noundef %62, i32 noundef %63, ptr noundef %64)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup123

__pyx_L4_argument_unpacking_done:                 ; preds = %cleanup.cont120
  %65 = load ptr, ptr %__pyx_self.addr, align 8, !tbaa !5
  %66 = load ptr, ptr %__pyx_v___pyx_type, align 8, !tbaa !5
  %67 = load i64, ptr %__pyx_v___pyx_checksum, align 8, !tbaa !27
  %68 = load ptr, ptr %__pyx_v___pyx_state, align 8, !tbaa !5
  %call122 = call ptr @__pyx_pf_15View_dot_MemoryView___pyx_unpickle_Enum(ptr noundef %65, ptr noundef %66, i64 noundef %67, ptr noundef %68)
  store ptr %call122, ptr %__pyx_r, align 8, !tbaa !5
  %69 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  store ptr %69, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup123

cleanup123:                                       ; preds = %__pyx_L4_argument_unpacking_done, %__pyx_L3_error, %cleanup118
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_state) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_checksum) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_type) #13
  %70 = load ptr, ptr %retval, align 8
  ret ptr %70
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @__Pyx_PyInt_As_long(ptr noundef %x) #3 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca ptr, align 8
  %neg_one = alloca i64, align 8
  %const_zero = alloca i64, align 8
  %is_unsigned = alloca i32, align 4
  %digits = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %value = alloca i32, align 4
  %value8 = alloca i32, align 4
  %value12 = alloca i64, align 8
  %value19 = alloca i64, align 8
  %value30 = alloca i64, align 8
  %val = alloca i64, align 8
  %v = alloca ptr, align 8
  %val32 = alloca i64, align 8
  %tmp = alloca ptr, align 8
  store ptr %x, ptr %x.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %neg_one) #13
  store i64 -1, ptr %neg_one, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %const_zero) #13
  store i64 0, ptr %const_zero, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_unsigned) #13
  store i32 0, ptr %is_unsigned, align 4, !tbaa !9
  %0 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call = call ptr @Py_TYPE(ptr noundef %0)
  %call1 = call i32 @PyType_HasFeature(ptr noundef %call, i64 noundef 16777216)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %digits) #13
  %1 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %ob_digit = getelementptr inbounds %struct._longobject, ptr %1, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], ptr %ob_digit, i64 0, i64 0
  store ptr %arraydecay, ptr %digits, align 8, !tbaa !5
  %2 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call4 = call i64 @Py_SIZE(ptr noundef %2)
  switch i64 %call4, label %sw.epilog [
    i64 0, label %sw.bb
    i64 -1, label %sw.bb5
    i64 1, label %sw.bb7
    i64 -2, label %sw.bb11
    i64 2, label %sw.bb18
    i64 -3, label %sw.bb26
    i64 3, label %sw.bb27
    i64 -4, label %sw.bb28
    i64 4, label %sw.bb29
  ]

sw.bb:                                            ; preds = %if.then
  store i64 0, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

sw.bb5:                                           ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %value) #13
  %3 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx = getelementptr i32, ptr %3, i64 0
  %4 = load i32, ptr %arrayidx, align 4, !tbaa !9
  %sub = sub i32 0, %4
  store i32 %sub, ptr %value, align 4, !tbaa !9
  %5 = load i32, ptr %value, align 4, !tbaa !9
  %conv6 = sext i32 %5 to i64
  store i64 %conv6, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %value) #13
  br label %cleanup

sw.bb7:                                           ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %value8) #13
  %6 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx9 = getelementptr i32, ptr %6, i64 0
  %7 = load i32, ptr %arrayidx9, align 4, !tbaa !9
  store i32 %7, ptr %value8, align 4, !tbaa !9
  %8 = load i32, ptr %value8, align 4, !tbaa !9
  %conv10 = zext i32 %8 to i64
  store i64 %conv10, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %value8) #13
  br label %cleanup

sw.bb11:                                          ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 8, ptr %value12) #13
  %9 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx13 = getelementptr i32, ptr %9, i64 1
  %10 = load i32, ptr %arrayidx13, align 4, !tbaa !9
  %conv14 = zext i32 %10 to i64
  %shl = shl i64 %conv14, 30
  %11 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx15 = getelementptr i32, ptr %11, i64 0
  %12 = load i32, ptr %arrayidx15, align 4, !tbaa !9
  %conv16 = zext i32 %12 to i64
  %or = or i64 %shl, %conv16
  %sub17 = sub i64 0, %or
  store i64 %sub17, ptr %value12, align 8, !tbaa !27
  %13 = load i64, ptr %value12, align 8, !tbaa !27
  store i64 %13, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %value12) #13
  br label %cleanup

sw.bb18:                                          ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 8, ptr %value19) #13
  %14 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx20 = getelementptr i32, ptr %14, i64 1
  %15 = load i32, ptr %arrayidx20, align 4, !tbaa !9
  %conv21 = zext i32 %15 to i64
  %shl22 = shl i64 %conv21, 30
  %16 = load ptr, ptr %digits, align 8, !tbaa !5
  %arrayidx23 = getelementptr i32, ptr %16, i64 0
  %17 = load i32, ptr %arrayidx23, align 4, !tbaa !9
  %conv24 = zext i32 %17 to i64
  %or25 = or i64 %shl22, %conv24
  store i64 %or25, ptr %value19, align 8, !tbaa !27
  %18 = load i64, ptr %value19, align 8, !tbaa !27
  store i64 %18, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %value19) #13
  br label %cleanup

sw.bb26:                                          ; preds = %if.then
  br label %sw.epilog

sw.bb27:                                          ; preds = %if.then
  br label %sw.epilog

sw.bb28:                                          ; preds = %if.then
  br label %sw.epilog

sw.bb29:                                          ; preds = %if.then
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then, %sw.bb29, %sw.bb28, %sw.bb27, %sw.bb26
  call void @llvm.lifetime.start.p0(i64 8, ptr %value30) #13
  %19 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call31 = call i64 @PyLong_AsLong(ptr noundef %19)
  store i64 %call31, ptr %value30, align 8, !tbaa !27
  %20 = load i64, ptr %value30, align 8, !tbaa !27
  store i64 %20, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %value30) #13
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.bb18, %sw.bb11, %sw.bb7, %sw.bb5, %sw.bb
  call void @llvm.lifetime.end.p0(i64 8, ptr %digits) #13
  br label %cleanup39

if.else:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %val32) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %21 = load ptr, ptr %x.addr, align 8, !tbaa !5
  %call33 = call ptr @__Pyx_PyNumber_IntOrLong(ptr noundef %21)
  store ptr %call33, ptr %tmp, align 8, !tbaa !5
  %22 = load ptr, ptr %tmp, align 8, !tbaa !5
  %tobool34 = icmp ne ptr %22, null
  br i1 %tobool34, label %if.end, label %if.then35

if.then35:                                        ; preds = %if.else
  store i64 -1, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup37

if.end:                                           ; preds = %if.else
  %23 = load ptr, ptr %tmp, align 8, !tbaa !5
  %call36 = call i64 @__Pyx_PyInt_As_long(ptr noundef %23)
  store i64 %call36, ptr %val32, align 8, !tbaa !27
  %24 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %24)
  %25 = load i64, ptr %val32, align 8, !tbaa !27
  store i64 %25, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup37

cleanup37:                                        ; preds = %if.end, %if.then35
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %val32) #13
  br label %cleanup39

raise_overflow:                                   ; No predecessors!
  %26 = load ptr, ptr @PyExc_OverflowError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %26, ptr noundef @.str.301)
  store i64 -1, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup39

raise_neg_overflow:                               ; No predecessors!
  %27 = load ptr, ptr @PyExc_OverflowError, align 8, !tbaa !5
  call void @PyErr_SetString(ptr noundef %27, ptr noundef @.str.302)
  store i64 -1, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup39

cleanup39:                                        ; preds = %raise_neg_overflow, %raise_overflow, %cleanup37, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_unsigned) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %const_zero) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %neg_one) #13
  %28 = load i64, ptr %retval, align 8
  ret i64 %28
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_15View_dot_MemoryView___pyx_unpickle_Enum(ptr noundef %__pyx_self, ptr noundef %__pyx_v___pyx_type, i64 noundef %__pyx_v___pyx_checksum, ptr noundef %__pyx_v___pyx_state) #0 {
entry:
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_type.addr = alloca ptr, align 8
  %__pyx_v___pyx_checksum.addr = alloca i64, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_v___pyx_PickleError = alloca ptr, align 8
  %__pyx_v___pyx_result = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %function154 = alloca ptr, align 8
  %tmp157 = alloca ptr, align 8
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !5
  store ptr %__pyx_v___pyx_type, ptr %__pyx_v___pyx_type.addr, align 8, !tbaa !5
  store i64 %__pyx_v___pyx_checksum, ptr %__pyx_v___pyx_checksum.addr, align 8, !tbaa !27
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_PickleError) #13
  store ptr null, ptr %__pyx_v___pyx_PickleError, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_result) #13
  store ptr null, ptr %__pyx_v___pyx_result, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #13
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #13
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #13
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #13
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #13
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #13
  store i32 0, ptr %__pyx_lineno, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #13
  store ptr null, ptr %__pyx_filename, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #13
  store i32 0, ptr %__pyx_clineno, align 4, !tbaa !9
  %0 = load i64, ptr %__pyx_v___pyx_checksum.addr, align 8, !tbaa !27
  %call = call ptr @__Pyx_PyInt_From_long(i64 noundef %0)
  store ptr %call, ptr %__pyx_t_1, align 8, !tbaa !5
  %1 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool = icmp ne ptr %1, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %2, ptr %__pyx_filename, align 8, !tbaa !5
  %3 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 4, ptr %__pyx_lineno, align 4, !tbaa !9
  %4 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18799, ptr %__pyx_clineno, align 4, !tbaa !9
  %5 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %7 = load ptr, ptr @__pyx_tuple__23, align 8, !tbaa !5
  %call4 = call i32 @__Pyx_PySequence_ContainsTF(ptr noundef %6, ptr noundef %7, i32 noundef 3)
  store i32 %call4, ptr %__pyx_t_2, align 4, !tbaa !9
  %8 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp = icmp slt i32 %8, 0
  %lnot6 = xor i1 %cmp, true
  %lnot8 = xor i1 %lnot6, true
  %lnot.ext9 = zext i1 %lnot8 to i32
  %conv10 = sext i32 %lnot.ext9 to i64
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0)
  %tobool12 = icmp ne i64 %expval11, 0
  br i1 %tobool12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end
  %9 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %9, ptr %__pyx_filename, align 8, !tbaa !5
  %10 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 4, ptr %__pyx_lineno, align 4, !tbaa !9
  %11 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18801, ptr %__pyx_clineno, align 4, !tbaa !9
  %12 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end14:                                         ; preds = %if.end
  %13 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %13)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %14 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %cmp15 = icmp ne i32 %14, 0
  %conv16 = zext i1 %cmp15 to i32
  store i32 %conv16, ptr %__pyx_t_3, align 4, !tbaa !9
  %15 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %tobool17 = icmp ne i32 %15, 0
  br i1 %tobool17, label %if.then18, label %if.end120

if.then18:                                        ; preds = %if.end14
  %call19 = call ptr @PyList_New(i64 noundef 1)
  store ptr %call19, ptr %__pyx_t_1, align 8, !tbaa !5
  %16 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool20 = icmp ne ptr %16, null
  %lnot21 = xor i1 %tobool20, true
  %lnot23 = xor i1 %lnot21, true
  %lnot25 = xor i1 %lnot23, true
  %lnot.ext26 = zext i1 %lnot25 to i32
  %conv27 = sext i32 %lnot.ext26 to i64
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 0)
  %tobool29 = icmp ne i64 %expval28, 0
  br i1 %tobool29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.then18
  %17 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %17, ptr %__pyx_filename, align 8, !tbaa !5
  %18 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 5, ptr %__pyx_lineno, align 4, !tbaa !9
  %19 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18813, ptr %__pyx_clineno, align 4, !tbaa !9
  %20 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end31:                                         ; preds = %if.then18
  %21 = load ptr, ptr @__pyx_n_s_PickleError, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %21)
  %22 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %23 = load ptr, ptr @__pyx_n_s_PickleError, align 8, !tbaa !5
  call void @PyList_SET_ITEM(ptr noundef %22, i64 noundef 0, ptr noundef %23)
  %24 = load ptr, ptr @__pyx_n_s_pickle, align 8, !tbaa !5
  %25 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call32 = call ptr @__Pyx_Import(ptr noundef %24, ptr noundef %25, i32 noundef 0)
  store ptr %call32, ptr %__pyx_t_4, align 8, !tbaa !5
  %26 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool33 = icmp ne ptr %26, null
  %lnot34 = xor i1 %tobool33, true
  %lnot36 = xor i1 %lnot34, true
  %lnot38 = xor i1 %lnot36, true
  %lnot.ext39 = zext i1 %lnot38 to i32
  %conv40 = sext i32 %lnot.ext39 to i64
  %expval41 = call i64 @llvm.expect.i64(i64 %conv40, i64 0)
  %tobool42 = icmp ne i64 %expval41, 0
  br i1 %tobool42, label %if.then43, label %if.end44

if.then43:                                        ; preds = %if.end31
  %27 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %27, ptr %__pyx_filename, align 8, !tbaa !5
  %28 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 5, ptr %__pyx_lineno, align 4, !tbaa !9
  %29 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18818, ptr %__pyx_clineno, align 4, !tbaa !9
  %30 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end44:                                         ; preds = %if.end31
  %31 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %31)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %32 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %33 = load ptr, ptr @__pyx_n_s_PickleError, align 8, !tbaa !5
  %call45 = call ptr @__Pyx_ImportFrom(ptr noundef %32, ptr noundef %33)
  store ptr %call45, ptr %__pyx_t_1, align 8, !tbaa !5
  %34 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool46 = icmp ne ptr %34, null
  %lnot47 = xor i1 %tobool46, true
  %lnot49 = xor i1 %lnot47, true
  %lnot51 = xor i1 %lnot49, true
  %lnot.ext52 = zext i1 %lnot51 to i32
  %conv53 = sext i32 %lnot.ext52 to i64
  %expval54 = call i64 @llvm.expect.i64(i64 %conv53, i64 0)
  %tobool55 = icmp ne i64 %expval54, 0
  br i1 %tobool55, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end44
  %35 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %35, ptr %__pyx_filename, align 8, !tbaa !5
  %36 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 5, ptr %__pyx_lineno, align 4, !tbaa !9
  %37 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18821, ptr %__pyx_clineno, align 4, !tbaa !9
  %38 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end57:                                         ; preds = %if.end44
  %39 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %39)
  %40 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %40, ptr %__pyx_v___pyx_PickleError, align 8, !tbaa !5
  %41 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %41)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %42 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %42)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %43 = load i64, ptr %__pyx_v___pyx_checksum.addr, align 8, !tbaa !27
  %call58 = call ptr @__Pyx_PyInt_From_long(i64 noundef %43)
  store ptr %call58, ptr %__pyx_t_1, align 8, !tbaa !5
  %44 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool59 = icmp ne ptr %44, null
  %lnot60 = xor i1 %tobool59, true
  %lnot62 = xor i1 %lnot60, true
  %lnot64 = xor i1 %lnot62, true
  %lnot.ext65 = zext i1 %lnot64 to i32
  %conv66 = sext i32 %lnot.ext65 to i64
  %expval67 = call i64 @llvm.expect.i64(i64 %conv66, i64 0)
  %tobool68 = icmp ne i64 %expval67, 0
  br i1 %tobool68, label %if.then69, label %if.end70

if.then69:                                        ; preds = %if.end57
  %45 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %45, ptr %__pyx_filename, align 8, !tbaa !5
  %46 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %47 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18835, ptr %__pyx_clineno, align 4, !tbaa !9
  %48 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end70:                                         ; preds = %if.end57
  %49 = load ptr, ptr @__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, align 8, !tbaa !5
  %50 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call71 = call ptr @PyUnicode_Format(ptr noundef %49, ptr noundef %50)
  store ptr %call71, ptr %__pyx_t_5, align 8, !tbaa !5
  %51 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool72 = icmp ne ptr %51, null
  %lnot73 = xor i1 %tobool72, true
  %lnot75 = xor i1 %lnot73, true
  %lnot77 = xor i1 %lnot75, true
  %lnot.ext78 = zext i1 %lnot77 to i32
  %conv79 = sext i32 %lnot.ext78 to i64
  %expval80 = call i64 @llvm.expect.i64(i64 %conv79, i64 0)
  %tobool81 = icmp ne i64 %expval80, 0
  br i1 %tobool81, label %if.then82, label %if.end83

if.then82:                                        ; preds = %if.end70
  %52 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %52, ptr %__pyx_filename, align 8, !tbaa !5
  %53 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %54 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18837, ptr %__pyx_clineno, align 4, !tbaa !9
  %55 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end83:                                         ; preds = %if.end70
  %56 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %56)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %57 = load ptr, ptr %__pyx_v___pyx_PickleError, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %57)
  %58 = load ptr, ptr %__pyx_v___pyx_PickleError, align 8, !tbaa !5
  store ptr %58, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %59 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call84 = call i32 @Py_IS_TYPE(ptr noundef %59, ptr noundef @PyMethod_Type)
  %tobool85 = icmp ne i32 %call84, 0
  %lnot86 = xor i1 %tobool85, true
  %lnot88 = xor i1 %lnot86, true
  %lnot.ext89 = zext i1 %lnot88 to i32
  %conv90 = sext i32 %lnot.ext89 to i64
  %expval91 = call i64 @llvm.expect.i64(i64 %conv90, i64 0)
  %tobool92 = icmp ne i64 %expval91, 0
  br i1 %tobool92, label %if.then93, label %if.end104

if.then93:                                        ; preds = %if.end83
  %60 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %60, i32 0, i32 2
  %61 = load ptr, ptr %im_self, align 8, !tbaa !125
  store ptr %61, ptr %__pyx_t_6, align 8, !tbaa !5
  %62 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool94 = icmp ne ptr %62, null
  %lnot95 = xor i1 %tobool94, true
  %lnot97 = xor i1 %lnot95, true
  %lnot.ext98 = zext i1 %lnot97 to i32
  %conv99 = sext i32 %lnot.ext98 to i64
  %expval100 = call i64 @llvm.expect.i64(i64 %conv99, i64 1)
  %tobool101 = icmp ne i64 %expval100, 0
  br i1 %tobool101, label %if.then102, label %if.end103

if.then102:                                       ; preds = %if.then93
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #13
  %63 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %63, i32 0, i32 1
  %64 = load ptr, ptr %im_func, align 8, !tbaa !127
  store ptr %64, ptr %function, align 8, !tbaa !5
  %65 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %65)
  %66 = load ptr, ptr %function, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %66)
  br label %do.body

do.body:                                          ; preds = %if.then102
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %67 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %67, ptr %tmp, align 8, !tbaa !5
  %68 = load ptr, ptr %function, align 8, !tbaa !5
  store ptr %68, ptr %__pyx_t_1, align 8, !tbaa !5
  %69 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %69)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #13
  br label %if.end103

if.end103:                                        ; preds = %do.end, %if.then93
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end83
  %70 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %tobool105 = icmp ne ptr %70, null
  br i1 %tobool105, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end104
  %71 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %72 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  %73 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %call106 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %71, ptr noundef %72, ptr noundef %73)
  br label %cond.end

cond.false:                                       ; preds = %if.end104
  %74 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %75 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %call107 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %74, ptr noundef %75)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call106, %cond.true ], [ %call107, %cond.false ]
  store ptr %cond, ptr %__pyx_t_4, align 8, !tbaa !5
  %76 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %76)
  store ptr null, ptr %__pyx_t_6, align 8, !tbaa !5
  %77 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %77)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %78 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool108 = icmp ne ptr %78, null
  %lnot109 = xor i1 %tobool108, true
  %lnot111 = xor i1 %lnot109, true
  %lnot113 = xor i1 %lnot111, true
  %lnot.ext114 = zext i1 %lnot113 to i32
  %conv115 = sext i32 %lnot.ext114 to i64
  %expval116 = call i64 @llvm.expect.i64(i64 %conv115, i64 0)
  %tobool117 = icmp ne i64 %expval116, 0
  br i1 %tobool117, label %if.then118, label %if.end119

if.then118:                                       ; preds = %cond.end
  %79 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %79, ptr %__pyx_filename, align 8, !tbaa !5
  %80 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %81 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18854, ptr %__pyx_clineno, align 4, !tbaa !9
  %82 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end119:                                        ; preds = %cond.end
  %83 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %83)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %84 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @__Pyx_Raise(ptr noundef %84, ptr noundef null, ptr noundef null, ptr noundef null)
  %85 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %85)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %86 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %86, ptr %__pyx_filename, align 8, !tbaa !5
  %87 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 6, ptr %__pyx_lineno, align 4, !tbaa !9
  %88 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18859, ptr %__pyx_clineno, align 4, !tbaa !9
  %89 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end120:                                        ; preds = %if.end14
  %90 = load ptr, ptr @__pyx_MemviewEnum_type, align 8, !tbaa !5
  %91 = load ptr, ptr @__pyx_n_s_new, align 8, !tbaa !5
  %call121 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %90, ptr noundef %91)
  store ptr %call121, ptr %__pyx_t_1, align 8, !tbaa !5
  %92 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %tobool122 = icmp ne ptr %92, null
  %lnot123 = xor i1 %tobool122, true
  %lnot125 = xor i1 %lnot123, true
  %lnot127 = xor i1 %lnot125, true
  %lnot.ext128 = zext i1 %lnot127 to i32
  %conv129 = sext i32 %lnot.ext128 to i64
  %expval130 = call i64 @llvm.expect.i64(i64 %conv129, i64 0)
  %tobool131 = icmp ne i64 %expval130, 0
  br i1 %tobool131, label %if.then132, label %if.end133

if.then132:                                       ; preds = %if.end120
  %93 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %93, ptr %__pyx_filename, align 8, !tbaa !5
  %94 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 7, ptr %__pyx_lineno, align 4, !tbaa !9
  %95 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18877, ptr %__pyx_clineno, align 4, !tbaa !9
  %96 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end133:                                        ; preds = %if.end120
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %97 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %call134 = call i32 @Py_IS_TYPE(ptr noundef %97, ptr noundef @PyMethod_Type)
  %tobool135 = icmp ne i32 %call134, 0
  %lnot136 = xor i1 %tobool135, true
  %lnot138 = xor i1 %lnot136, true
  %lnot.ext139 = zext i1 %lnot138 to i32
  %conv140 = sext i32 %lnot.ext139 to i64
  %expval141 = call i64 @llvm.expect.i64(i64 %conv140, i64 1)
  %tobool142 = icmp ne i64 %expval141, 0
  br i1 %tobool142, label %if.then143, label %if.end161

if.then143:                                       ; preds = %if.end133
  %98 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %im_self144 = getelementptr inbounds %struct.PyMethodObject, ptr %98, i32 0, i32 2
  %99 = load ptr, ptr %im_self144, align 8, !tbaa !125
  store ptr %99, ptr %__pyx_t_5, align 8, !tbaa !5
  %100 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool145 = icmp ne ptr %100, null
  %lnot146 = xor i1 %tobool145, true
  %lnot148 = xor i1 %lnot146, true
  %lnot.ext149 = zext i1 %lnot148 to i32
  %conv150 = sext i32 %lnot.ext149 to i64
  %expval151 = call i64 @llvm.expect.i64(i64 %conv150, i64 1)
  %tobool152 = icmp ne i64 %expval151, 0
  br i1 %tobool152, label %if.then153, label %if.end160

if.then153:                                       ; preds = %if.then143
  call void @llvm.lifetime.start.p0(i64 8, ptr %function154) #13
  %101 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %im_func155 = getelementptr inbounds %struct.PyMethodObject, ptr %101, i32 0, i32 1
  %102 = load ptr, ptr %im_func155, align 8, !tbaa !127
  store ptr %102, ptr %function154, align 8, !tbaa !5
  %103 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %103)
  %104 = load ptr, ptr %function154, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %104)
  br label %do.body156

do.body156:                                       ; preds = %if.then153
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp157) #13
  %105 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  store ptr %105, ptr %tmp157, align 8, !tbaa !5
  %106 = load ptr, ptr %function154, align 8, !tbaa !5
  store ptr %106, ptr %__pyx_t_1, align 8, !tbaa !5
  %107 = load ptr, ptr %tmp157, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %107)
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp157) #13
  br label %do.cond158

do.cond158:                                       ; preds = %do.body156
  br label %do.end159

do.end159:                                        ; preds = %do.cond158
  call void @llvm.lifetime.end.p0(i64 8, ptr %function154) #13
  br label %if.end160

if.end160:                                        ; preds = %do.end159, %if.then143
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.end133
  %108 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %tobool162 = icmp ne ptr %108, null
  br i1 %tobool162, label %cond.true163, label %cond.false165

cond.true163:                                     ; preds = %if.end161
  %109 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %110 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  %111 = load ptr, ptr %__pyx_v___pyx_type.addr, align 8, !tbaa !5
  %call164 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %109, ptr noundef %110, ptr noundef %111)
  br label %cond.end167

cond.false165:                                    ; preds = %if.end161
  %112 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  %113 = load ptr, ptr %__pyx_v___pyx_type.addr, align 8, !tbaa !5
  %call166 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %112, ptr noundef %113)
  br label %cond.end167

cond.end167:                                      ; preds = %cond.false165, %cond.true163
  %cond168 = phi ptr [ %call164, %cond.true163 ], [ %call166, %cond.false165 ]
  store ptr %cond168, ptr %__pyx_t_4, align 8, !tbaa !5
  %114 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %114)
  store ptr null, ptr %__pyx_t_5, align 8, !tbaa !5
  %115 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool169 = icmp ne ptr %115, null
  %lnot170 = xor i1 %tobool169, true
  %lnot172 = xor i1 %lnot170, true
  %lnot174 = xor i1 %lnot172, true
  %lnot.ext175 = zext i1 %lnot174 to i32
  %conv176 = sext i32 %lnot.ext175 to i64
  %expval177 = call i64 @llvm.expect.i64(i64 %conv176, i64 0)
  %tobool178 = icmp ne i64 %expval177, 0
  br i1 %tobool178, label %if.then179, label %if.end180

if.then179:                                       ; preds = %cond.end167
  %116 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %116, ptr %__pyx_filename, align 8, !tbaa !5
  %117 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 7, ptr %__pyx_lineno, align 4, !tbaa !9
  %118 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18891, ptr %__pyx_clineno, align 4, !tbaa !9
  %119 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end180:                                        ; preds = %cond.end167
  %120 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %120)
  store ptr null, ptr %__pyx_t_1, align 8, !tbaa !5
  %121 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  store ptr %121, ptr %__pyx_v___pyx_result, align 8, !tbaa !5
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  %122 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %cmp181 = icmp ne ptr %122, @_Py_NoneStruct
  %conv182 = zext i1 %cmp181 to i32
  store i32 %conv182, ptr %__pyx_t_3, align 4, !tbaa !9
  %123 = load i32, ptr %__pyx_t_3, align 4, !tbaa !9
  %cmp183 = icmp ne i32 %123, 0
  %conv184 = zext i1 %cmp183 to i32
  store i32 %conv184, ptr %__pyx_t_2, align 4, !tbaa !9
  %124 = load i32, ptr %__pyx_t_2, align 4, !tbaa !9
  %tobool185 = icmp ne i32 %124, 0
  br i1 %tobool185, label %if.then186, label %if.end216

if.then186:                                       ; preds = %if.end180
  %125 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call187 = call i32 @Py_IS_TYPE(ptr noundef %125, ptr noundef @PyTuple_Type)
  %tobool188 = icmp ne i32 %call187, 0
  %lnot189 = xor i1 %tobool188, true
  %lnot191 = xor i1 %lnot189, true
  %lnot.ext192 = zext i1 %lnot191 to i32
  %conv193 = sext i32 %lnot.ext192 to i64
  %expval194 = call i64 @llvm.expect.i64(i64 %conv193, i64 1)
  %tobool195 = icmp ne i64 %expval194, 0
  br i1 %tobool195, label %if.end202, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then186
  %126 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %cmp196 = icmp eq ptr %126, @_Py_NoneStruct
  br i1 %cmp196, label %if.end202, label %lor.lhs.false198

lor.lhs.false198:                                 ; preds = %lor.lhs.false
  %127 = load ptr, ptr @PyExc_TypeError, align 8, !tbaa !5
  %128 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call199 = call ptr @Py_TYPE(ptr noundef %128)
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %call199, i32 0, i32 1
  %129 = load ptr, ptr %tp_name, align 8, !tbaa !56
  %call200 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %127, ptr noundef @.str.117, ptr noundef @.str.129, ptr noundef %129)
  br i1 false, label %if.end202, label %if.then201

if.then201:                                       ; preds = %lor.lhs.false198
  %130 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %130, ptr %__pyx_filename, align 8, !tbaa !5
  %131 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 9, ptr %__pyx_lineno, align 4, !tbaa !9
  %132 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18915, ptr %__pyx_clineno, align 4, !tbaa !9
  %133 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end202:                                        ; preds = %lor.lhs.false198, %lor.lhs.false, %if.then186
  %134 = load ptr, ptr %__pyx_v___pyx_result, align 8, !tbaa !5
  %135 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !5
  %call203 = call ptr @__pyx_unpickle_Enum__set_state(ptr noundef %134, ptr noundef %135)
  store ptr %call203, ptr %__pyx_t_4, align 8, !tbaa !5
  %136 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  %tobool204 = icmp ne ptr %136, null
  %lnot205 = xor i1 %tobool204, true
  %lnot207 = xor i1 %lnot205, true
  %lnot209 = xor i1 %lnot207, true
  %lnot.ext210 = zext i1 %lnot209 to i32
  %conv211 = sext i32 %lnot.ext210 to i64
  %expval212 = call i64 @llvm.expect.i64(i64 %conv211, i64 0)
  %tobool213 = icmp ne i64 %expval212, 0
  br i1 %tobool213, label %if.then214, label %if.end215

if.then214:                                       ; preds = %if.end202
  %137 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !tbaa !5
  store ptr %137, ptr %__pyx_filename, align 8, !tbaa !5
  %138 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  store i32 9, ptr %__pyx_lineno, align 4, !tbaa !9
  %139 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  store i32 18916, ptr %__pyx_clineno, align 4, !tbaa !9
  %140 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  br label %__pyx_L1_error

if.end215:                                        ; preds = %if.end202
  %141 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %141)
  store ptr null, ptr %__pyx_t_4, align 8, !tbaa !5
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %if.end180
  %142 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %142)
  %143 = load ptr, ptr %__pyx_v___pyx_result, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %143)
  %144 = load ptr, ptr %__pyx_v___pyx_result, align 8, !tbaa !5
  store ptr %144, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L1_error:                                   ; preds = %if.then214, %if.then201, %if.then179, %if.then132, %if.end119, %if.then118, %if.then82, %if.then69, %if.then56, %if.then43, %if.then30, %if.then13, %if.then
  %145 = load ptr, ptr %__pyx_t_1, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %145)
  %146 = load ptr, ptr %__pyx_t_4, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %146)
  %147 = load ptr, ptr %__pyx_t_5, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %147)
  %148 = load ptr, ptr %__pyx_t_6, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %148)
  %149 = load i32, ptr %__pyx_clineno, align 4, !tbaa !9
  %150 = load i32, ptr %__pyx_lineno, align 4, !tbaa !9
  %151 = load ptr, ptr %__pyx_filename, align 8, !tbaa !5
  call void @__Pyx_AddTraceback(ptr noundef @.str.300, i32 noundef %149, i32 noundef %150, ptr noundef %151)
  store ptr null, ptr %__pyx_r, align 8, !tbaa !5
  br label %__pyx_L0

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end216
  %152 = load ptr, ptr %__pyx_v___pyx_PickleError, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %152)
  %153 = load ptr, ptr %__pyx_v___pyx_result, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %153)
  %154 = load ptr, ptr %__pyx_r, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_result) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_PickleError) #13
  ret ptr %154
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyInt_From_long(i64 noundef %value) #3 {
entry:
  %value.addr = alloca i64, align 8
  %neg_one = alloca i64, align 8
  %const_zero = alloca i64, align 8
  %is_unsigned = alloca i32, align 4
  %one = alloca i32, align 4
  %little = alloca i32, align 4
  %bytes = alloca ptr, align 8
  store i64 %value, ptr %value.addr, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %neg_one) #13
  store i64 -1, ptr %neg_one, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 8, ptr %const_zero) #13
  store i64 0, ptr %const_zero, align 8, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_unsigned) #13
  store i32 0, ptr %is_unsigned, align 4, !tbaa !9
  %0 = load i64, ptr %value.addr, align 8, !tbaa !27
  %call = call ptr @PyLong_FromLong(i64 noundef %0)
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_unsigned) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %const_zero) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %neg_one) #13
  ret ptr %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PySequence_ContainsTF(ptr noundef %item, ptr noundef %seq, i32 noundef %eq) #3 {
entry:
  %item.addr = alloca ptr, align 8
  %seq.addr = alloca ptr, align 8
  %eq.addr = alloca i32, align 4
  %result = alloca i32, align 4
  store ptr %item, ptr %item.addr, align 8, !tbaa !5
  store ptr %seq, ptr %seq.addr, align 8, !tbaa !5
  store i32 %eq, ptr %eq.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #13
  %0 = load ptr, ptr %seq.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %item.addr, align 8, !tbaa !5
  %call = call i32 @PySequence_Contains(ptr noundef %0, ptr noundef %1)
  store i32 %call, ptr %result, align 4, !tbaa !9
  %2 = load i32, ptr %result, align 4, !tbaa !9
  %cmp = icmp slt i32 %2, 0
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i32, ptr %result, align 4, !tbaa !9
  br label %cond.end

cond.false:                                       ; preds = %entry
  %4 = load i32, ptr %result, align 4, !tbaa !9
  %5 = load i32, ptr %eq.addr, align 4, !tbaa !9
  %cmp2 = icmp eq i32 %5, 2
  %conv3 = zext i1 %cmp2 to i32
  %cmp4 = icmp eq i32 %4, %conv3
  %conv5 = zext i1 %cmp4 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ %conv5, %cond.false ]
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #13
  ret i32 %cond
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_ImportFrom(ptr noundef %module, ptr noundef %name) #0 {
entry:
  %module.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %value = alloca ptr, align 8
  store ptr %module, ptr %module.addr, align 8, !tbaa !5
  store ptr %name, ptr %name.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #13
  %0 = load ptr, ptr %module.addr, align 8, !tbaa !5
  %1 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %0, ptr noundef %1)
  store ptr %call, ptr %value, align 8, !tbaa !5
  %2 = load ptr, ptr %value, align 8, !tbaa !5
  %tobool = icmp ne ptr %2, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load ptr, ptr @PyExc_AttributeError, align 8, !tbaa !5
  %call4 = call i32 @PyErr_ExceptionMatches(ptr noundef %3)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %4 = load ptr, ptr @PyExc_ImportError, align 8, !tbaa !5
  %5 = load ptr, ptr %name.addr, align 8, !tbaa !5
  %call6 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %4, ptr noundef @.str.303, ptr noundef %5)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load ptr, ptr %value, align 8, !tbaa !5
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #13
  ret ptr %6
}

declare i32 @PySequence_Contains(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CLineForTraceback(ptr noundef %tstate, i32 noundef %c_line) #0 {
entry:
  %retval = alloca i32, align 4
  %tstate.addr = alloca ptr, align 8
  %c_line.addr = alloca i32, align 4
  %use_cline = alloca ptr, align 8
  %ptype = alloca ptr, align 8
  %pvalue = alloca ptr, align 8
  %ptraceback = alloca ptr, align 8
  %cython_runtime_dict = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %use_cline_obj = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !5
  store i32 %c_line, ptr %c_line.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %use_cline) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptype) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %pvalue) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptraceback) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %cython_runtime_dict) #13
  %0 = load ptr, ptr @__pyx_cython_runtime, align 8, !tbaa !5
  %tobool = icmp ne ptr %0, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, ptr %c_line.addr, align 4, !tbaa !9
  store i32 %1, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @PyErr_Fetch(ptr noundef %ptype, ptr noundef %pvalue, ptr noundef %ptraceback)
  %2 = load ptr, ptr @__pyx_cython_runtime, align 8, !tbaa !5
  %call = call ptr @_PyObject_GetDictPtr(ptr noundef %2)
  store ptr %call, ptr %cython_runtime_dict, align 8, !tbaa !5
  %3 = load ptr, ptr %cython_runtime_dict, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %3, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1)
  %tobool11 = icmp ne i64 %expval10, 0
  br i1 %tobool11, label %if.then12, label %if.else25

if.then12:                                        ; preds = %if.end
  %4 = load ptr, ptr %cython_runtime_dict, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %5, i32 0, i32 2
  %6 = load i64, ptr %ma_version_tag, align 8, !tbaa !175
  %7 = load i64, ptr @__Pyx_CLineForTraceback.__pyx_dict_version, align 8, !tbaa !27
  %cmp = icmp eq i64 %6, %7
  %lnot14 = xor i1 %cmp, true
  %lnot16 = xor i1 %lnot14, true
  %lnot.ext17 = zext i1 %lnot16 to i32
  %conv18 = sext i32 %lnot.ext17 to i64
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 1)
  %tobool20 = icmp ne i64 %expval19, 0
  br i1 %tobool20, label %if.then21, label %if.else

if.then21:                                        ; preds = %if.then12
  %8 = load ptr, ptr @__Pyx_CLineForTraceback.__pyx_dict_cached_value, align 8, !tbaa !5
  store ptr %8, ptr %use_cline, align 8, !tbaa !5
  br label %if.end24

if.else:                                          ; preds = %if.then12
  %9 = load ptr, ptr %cython_runtime_dict, align 8, !tbaa !5
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %11 = load ptr, ptr @__pyx_n_s_cline_in_traceback, align 8, !tbaa !5
  %12 = load ptr, ptr @__pyx_n_s_cline_in_traceback, align 8, !tbaa !5
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %12, i32 0, i32 2
  %13 = load i64, ptr %hash, align 8, !tbaa !154
  %call22 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %10, ptr noundef %11, i64 noundef %13)
  store ptr %call22, ptr @__Pyx_CLineForTraceback.__pyx_dict_cached_value, align 8, !tbaa !5
  store ptr %call22, ptr %use_cline, align 8, !tbaa !5
  %14 = load ptr, ptr %cython_runtime_dict, align 8, !tbaa !5
  %15 = load ptr, ptr %14, align 8, !tbaa !5
  %ma_version_tag23 = getelementptr inbounds %struct.PyDictObject, ptr %15, i32 0, i32 2
  %16 = load i64, ptr %ma_version_tag23, align 8, !tbaa !175
  store i64 %16, ptr @__Pyx_CLineForTraceback.__pyx_dict_version, align 8, !tbaa !27
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then21
  br label %if.end33

if.else25:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %use_cline_obj) #13
  %17 = load ptr, ptr @__pyx_cython_runtime, align 8, !tbaa !5
  %18 = load ptr, ptr @__pyx_n_s_cline_in_traceback, align 8, !tbaa !5
  %call26 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %17, ptr noundef %18)
  store ptr %call26, ptr %use_cline_obj, align 8, !tbaa !5
  %19 = load ptr, ptr %use_cline_obj, align 8, !tbaa !5
  %tobool27 = icmp ne ptr %19, null
  br i1 %tobool27, label %if.then28, label %if.else31

if.then28:                                        ; preds = %if.else25
  %20 = load ptr, ptr %use_cline_obj, align 8, !tbaa !5
  %call29 = call i32 @PyObject_Not(ptr noundef %20)
  %tobool30 = icmp ne i32 %call29, 0
  %21 = zext i1 %tobool30 to i64
  %cond = select i1 %tobool30, ptr @_Py_FalseStruct, ptr @_Py_TrueStruct
  store ptr %cond, ptr %use_cline, align 8, !tbaa !5
  %22 = load ptr, ptr %use_cline_obj, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %22)
  br label %if.end32

if.else31:                                        ; preds = %if.else25
  call void @PyErr_Clear()
  store ptr null, ptr %use_cline, align 8, !tbaa !5
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.then28
  call void @llvm.lifetime.end.p0(i64 8, ptr %use_cline_obj) #13
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end24
  %23 = load ptr, ptr %use_cline, align 8, !tbaa !5
  %tobool34 = icmp ne ptr %23, null
  br i1 %tobool34, label %if.else37, label %if.then35

if.then35:                                        ; preds = %if.end33
  store i32 0, ptr %c_line.addr, align 4, !tbaa !9
  %24 = load ptr, ptr @__pyx_cython_runtime, align 8, !tbaa !5
  %25 = load ptr, ptr @__pyx_n_s_cline_in_traceback, align 8, !tbaa !5
  %call36 = call i32 @PyObject_SetAttr(ptr noundef %24, ptr noundef %25, ptr noundef @_Py_FalseStruct)
  br label %if.end47

if.else37:                                        ; preds = %if.end33
  %26 = load ptr, ptr %use_cline, align 8, !tbaa !5
  %cmp38 = icmp eq ptr %26, @_Py_FalseStruct
  br i1 %cmp38, label %if.then45, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else37
  %27 = load ptr, ptr %use_cline, align 8, !tbaa !5
  %cmp40 = icmp ne ptr %27, @_Py_TrueStruct
  br i1 %cmp40, label %land.lhs.true, label %if.end46

land.lhs.true:                                    ; preds = %lor.lhs.false
  %28 = load ptr, ptr %use_cline, align 8, !tbaa !5
  %call42 = call i32 @PyObject_Not(ptr noundef %28)
  %cmp43 = icmp ne i32 %call42, 0
  br i1 %cmp43, label %if.then45, label %if.end46

if.then45:                                        ; preds = %land.lhs.true, %if.else37
  store i32 0, ptr %c_line.addr, align 4, !tbaa !9
  br label %if.end46

if.end46:                                         ; preds = %if.then45, %land.lhs.true, %lor.lhs.false
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then35
  %29 = load ptr, ptr %ptype, align 8, !tbaa !5
  %30 = load ptr, ptr %pvalue, align 8, !tbaa !5
  %31 = load ptr, ptr %ptraceback, align 8, !tbaa !5
  call void @PyErr_Restore(ptr noundef %29, ptr noundef %30, ptr noundef %31)
  %32 = load i32, ptr %c_line.addr, align 4, !tbaa !9
  store i32 %32, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end47, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cython_runtime_dict) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptraceback) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %pvalue) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptype) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %use_cline) #13
  %33 = load i32, ptr %retval, align 4
  ret i32 %33
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_find_code_object(i32 noundef %code_line) #0 {
entry:
  %retval = alloca ptr, align 8
  %code_line.addr = alloca i32, align 4
  %code_object = alloca ptr, align 8
  %pos = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %code_line, ptr %code_line.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 8, ptr %code_object) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %pos) #13
  %0 = load i32, ptr %code_line.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %0, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !tbaa !334
  %tobool4 = icmp ne ptr %1, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !tbaa !334
  %3 = load i32, ptr @__pyx_code_cache, align 8, !tbaa !336
  %4 = load i32, ptr %code_line.addr, align 4, !tbaa !9
  %call = call i32 @__pyx_bisect_code_objects(ptr noundef %2, i32 noundef %3, i32 noundef %4)
  store i32 %call, ptr %pos, align 4, !tbaa !9
  %5 = load i32, ptr %pos, align 4, !tbaa !9
  %6 = load i32, ptr @__pyx_code_cache, align 8, !tbaa !336
  %cmp = icmp sge i32 %5, %6
  %lnot15 = xor i1 %cmp, true
  %lnot17 = xor i1 %lnot15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %conv19 = sext i32 %lnot.ext18 to i64
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0)
  %tobool21 = icmp ne i64 %expval20, 0
  br i1 %tobool21, label %if.then33, label %lor.lhs.false22

lor.lhs.false22:                                  ; preds = %if.end
  %7 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !tbaa !334
  %8 = load i32, ptr %pos, align 4, !tbaa !9
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %7, i64 %idxprom
  %code_line23 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx, i32 0, i32 1
  %9 = load i32, ptr %code_line23, align 8, !tbaa !337
  %10 = load i32, ptr %code_line.addr, align 4, !tbaa !9
  %cmp24 = icmp ne i32 %9, %10
  %lnot26 = xor i1 %cmp24, true
  %lnot28 = xor i1 %lnot26, true
  %lnot.ext29 = zext i1 %lnot28 to i32
  %conv30 = sext i32 %lnot.ext29 to i64
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 0)
  %tobool32 = icmp ne i64 %expval31, 0
  br i1 %tobool32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %lor.lhs.false22, %if.end
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end34:                                         ; preds = %lor.lhs.false22
  %11 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !tbaa !334
  %12 = load i32, ptr %pos, align 4, !tbaa !9
  %idxprom35 = sext i32 %12 to i64
  %arrayidx36 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %11, i64 %idxprom35
  %code_object37 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx36, i32 0, i32 0
  %13 = load ptr, ptr %code_object37, align 8, !tbaa !339
  store ptr %13, ptr %code_object, align 8, !tbaa !5
  %14 = load ptr, ptr %code_object, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %14)
  %15 = load ptr, ptr %code_object, align 8, !tbaa !5
  store ptr %15, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %if.then33, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %pos) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %code_object) #13
  %16 = load ptr, ptr %retval, align 8
  ret ptr %16
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CreateCodeObjectForTraceback(ptr noundef %funcname, i32 noundef %c_line, i32 noundef %py_line, ptr noundef %filename) #0 {
entry:
  %retval = alloca ptr, align 8
  %funcname.addr = alloca ptr, align 8
  %c_line.addr = alloca i32, align 4
  %py_line.addr = alloca i32, align 4
  %filename.addr = alloca ptr, align 8
  %py_code = alloca ptr, align 8
  %py_funcname = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %funcname, ptr %funcname.addr, align 8, !tbaa !5
  store i32 %c_line, ptr %c_line.addr, align 4, !tbaa !9
  store i32 %py_line, ptr %py_line.addr, align 4, !tbaa !9
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_code) #13
  store ptr null, ptr %py_code, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_funcname) #13
  store ptr null, ptr %py_funcname, align 8, !tbaa !5
  %0 = load i32, ptr %c_line.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %funcname.addr, align 8, !tbaa !5
  %2 = load ptr, ptr @__pyx_cfilenm, align 8, !tbaa !5
  %3 = load i32, ptr %c_line.addr, align 4, !tbaa !9
  %call = call ptr (ptr, ...) @PyUnicode_FromFormat(ptr noundef @.str.304, ptr noundef %1, ptr noundef %2, i32 noundef %3)
  store ptr %call, ptr %py_funcname, align 8, !tbaa !5
  %4 = load ptr, ptr %py_funcname, align 8, !tbaa !5
  %tobool1 = icmp ne ptr %4, null
  br i1 %tobool1, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  br label %bad

if.end:                                           ; preds = %if.then
  %5 = load ptr, ptr %py_funcname, align 8, !tbaa !5
  %call3 = call ptr @PyUnicode_AsUTF8(ptr noundef %5)
  store ptr %call3, ptr %funcname.addr, align 8, !tbaa !5
  %6 = load ptr, ptr %funcname.addr, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %6, null
  br i1 %tobool4, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end
  br label %bad

if.end6:                                          ; preds = %if.end
  br label %if.end7

if.else:                                          ; preds = %entry
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end6
  %7 = load ptr, ptr %filename.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %funcname.addr, align 8, !tbaa !5
  %9 = load i32, ptr %py_line.addr, align 4, !tbaa !9
  %call8 = call ptr @PyCode_NewEmpty(ptr noundef %7, ptr noundef %8, i32 noundef %9)
  store ptr %call8, ptr %py_code, align 8, !tbaa !5
  %10 = load ptr, ptr %py_funcname, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %10)
  %11 = load ptr, ptr %py_code, align 8, !tbaa !5
  store ptr %11, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

bad:                                              ; preds = %if.then5, %if.then2
  %12 = load ptr, ptr %py_funcname, align 8, !tbaa !5
  call void @Py_XDECREF(ptr noundef %12)
  store ptr null, ptr %retval, align 8
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %bad, %if.end7
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_funcname) #13
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_code) #13
  %13 = load ptr, ptr %retval, align 8
  ret ptr %13
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_insert_code_object(i32 noundef %code_line, ptr noundef %code_object) #0 {
entry:
  %code_line.addr = alloca i32, align 4
  %code_object.addr = alloca ptr, align 8
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %entries = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %new_max = alloca i32, align 4
  store i32 %code_line, ptr %code_line.addr, align 4, !tbaa !9
  store ptr %code_object, ptr %code_object.addr, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 4, ptr %pos) #13
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.start.p0(i64 8, ptr %entries) #13
  %0 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !tbaa !334
  store ptr %0, ptr %entries, align 8, !tbaa !5
  %1 = load i32, ptr %code_line.addr, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %entries, align 8, !tbaa !5
  %tobool4 = icmp ne ptr %2, null
  %lnot5 = xor i1 %tobool4, true
  %lnot7 = xor i1 %lnot5, true
  %lnot9 = xor i1 %lnot7, true
  %lnot.ext10 = zext i1 %lnot9 to i32
  %conv11 = sext i32 %lnot.ext10 to i64
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0)
  %tobool13 = icmp ne i64 %expval12, 0
  br i1 %tobool13, label %if.then14, label %if.end28

if.then14:                                        ; preds = %if.end
  %call = call ptr @PyMem_Malloc(i64 noundef 1024)
  store ptr %call, ptr %entries, align 8, !tbaa !5
  %3 = load ptr, ptr %entries, align 8, !tbaa !5
  %tobool15 = icmp ne ptr %3, null
  %lnot16 = xor i1 %tobool15, true
  %lnot18 = xor i1 %lnot16, true
  %lnot.ext19 = zext i1 %lnot18 to i32
  %conv20 = sext i32 %lnot.ext19 to i64
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 1)
  %tobool22 = icmp ne i64 %expval21, 0
  br i1 %tobool22, label %if.then23, label %if.end27

if.then23:                                        ; preds = %if.then14
  %4 = load ptr, ptr %entries, align 8, !tbaa !5
  store ptr %4, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !tbaa !334
  store i32 64, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !tbaa !340
  store i32 1, ptr @__pyx_code_cache, align 8, !tbaa !336
  %5 = load i32, ptr %code_line.addr, align 4, !tbaa !9
  %6 = load ptr, ptr %entries, align 8, !tbaa !5
  %arrayidx = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %6, i64 0
  %code_line24 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx, i32 0, i32 1
  store i32 %5, ptr %code_line24, align 8, !tbaa !337
  %7 = load ptr, ptr %code_object.addr, align 8, !tbaa !5
  %8 = load ptr, ptr %entries, align 8, !tbaa !5
  %arrayidx25 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %8, i64 0
  %code_object26 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx25, i32 0, i32 0
  store ptr %7, ptr %code_object26, align 8, !tbaa !339
  %9 = load ptr, ptr %code_object.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %9)
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %if.then14
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80

if.end28:                                         ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !tbaa !334
  %11 = load i32, ptr @__pyx_code_cache, align 8, !tbaa !336
  %12 = load i32, ptr %code_line.addr, align 4, !tbaa !9
  %call29 = call i32 @__pyx_bisect_code_objects(ptr noundef %10, i32 noundef %11, i32 noundef %12)
  store i32 %call29, ptr %pos, align 4, !tbaa !9
  %13 = load i32, ptr %pos, align 4, !tbaa !9
  %14 = load i32, ptr @__pyx_code_cache, align 8, !tbaa !336
  %cmp = icmp slt i32 %13, %14
  br i1 %cmp, label %land.lhs.true, label %if.end49

land.lhs.true:                                    ; preds = %if.end28
  %15 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !tbaa !334
  %16 = load i32, ptr %pos, align 4, !tbaa !9
  %idxprom = sext i32 %16 to i64
  %arrayidx31 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %15, i64 %idxprom
  %code_line32 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx31, i32 0, i32 1
  %17 = load i32, ptr %code_line32, align 8, !tbaa !337
  %18 = load i32, ptr %code_line.addr, align 4, !tbaa !9
  %cmp33 = icmp eq i32 %17, %18
  %lnot35 = xor i1 %cmp33, true
  %lnot37 = xor i1 %lnot35, true
  %lnot.ext38 = zext i1 %lnot37 to i32
  %conv39 = sext i32 %lnot.ext38 to i64
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0)
  %tobool41 = icmp ne i64 %expval40, 0
  br i1 %tobool41, label %if.then42, label %if.end49

if.then42:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #13
  %19 = load ptr, ptr %entries, align 8, !tbaa !5
  %20 = load i32, ptr %pos, align 4, !tbaa !9
  %idxprom43 = sext i32 %20 to i64
  %arrayidx44 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %19, i64 %idxprom43
  %code_object45 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx44, i32 0, i32 0
  %21 = load ptr, ptr %code_object45, align 8, !tbaa !339
  store ptr %21, ptr %tmp, align 8, !tbaa !5
  %22 = load ptr, ptr %code_object.addr, align 8, !tbaa !5
  %23 = load ptr, ptr %entries, align 8, !tbaa !5
  %24 = load i32, ptr %pos, align 4, !tbaa !9
  %idxprom46 = sext i32 %24 to i64
  %arrayidx47 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %23, i64 %idxprom46
  %code_object48 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx47, i32 0, i32 0
  store ptr %22, ptr %code_object48, align 8, !tbaa !339
  %25 = load ptr, ptr %tmp, align 8, !tbaa !5
  call void @Py_DECREF(ptr noundef %25)
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #13
  br label %cleanup80

if.end49:                                         ; preds = %land.lhs.true, %if.end28
  %26 = load i32, ptr @__pyx_code_cache, align 8, !tbaa !336
  %27 = load i32, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !tbaa !340
  %cmp50 = icmp eq i32 %26, %27
  br i1 %cmp50, label %if.then52, label %if.end67

if.then52:                                        ; preds = %if.end49
  call void @llvm.lifetime.start.p0(i64 4, ptr %new_max) #13
  %28 = load i32, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !tbaa !340
  %add = add i32 %28, 64
  store i32 %add, ptr %new_max, align 4, !tbaa !9
  %29 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !tbaa !334
  %30 = load i32, ptr %new_max, align 4, !tbaa !9
  %conv53 = sext i32 %30 to i64
  %mul = mul i64 %conv53, 16
  %call54 = call ptr @PyMem_Realloc(ptr noundef %29, i64 noundef %mul)
  store ptr %call54, ptr %entries, align 8, !tbaa !5
  %31 = load ptr, ptr %entries, align 8, !tbaa !5
  %tobool55 = icmp ne ptr %31, null
  %lnot56 = xor i1 %tobool55, true
  %lnot58 = xor i1 %lnot56, true
  %lnot60 = xor i1 %lnot58, true
  %lnot.ext61 = zext i1 %lnot60 to i32
  %conv62 = sext i32 %lnot.ext61 to i64
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 0)
  %tobool64 = icmp ne i64 %expval63, 0
  br i1 %tobool64, label %if.then65, label %if.end66

if.then65:                                        ; preds = %if.then52
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end66:                                         ; preds = %if.then52
  %32 = load ptr, ptr %entries, align 8, !tbaa !5
  store ptr %32, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !tbaa !334
  %33 = load i32, ptr %new_max, align 4, !tbaa !9
  store i32 %33, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !tbaa !340
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end66, %if.then65
  call void @llvm.lifetime.end.p0(i64 4, ptr %new_max) #13
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup80 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end67

if.end67:                                         ; preds = %cleanup.cont, %if.end49
  %34 = load i32, ptr @__pyx_code_cache, align 8, !tbaa !336
  store i32 %34, ptr %i, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end67
  %35 = load i32, ptr %i, align 4, !tbaa !9
  %36 = load i32, ptr %pos, align 4, !tbaa !9
  %cmp68 = icmp sgt i32 %35, %36
  br i1 %cmp68, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %37 = load ptr, ptr %entries, align 8, !tbaa !5
  %38 = load i32, ptr %i, align 4, !tbaa !9
  %idxprom70 = sext i32 %38 to i64
  %arrayidx71 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %37, i64 %idxprom70
  %39 = load ptr, ptr %entries, align 8, !tbaa !5
  %40 = load i32, ptr %i, align 4, !tbaa !9
  %sub = sub i32 %40, 1
  %idxprom72 = sext i32 %sub to i64
  %arrayidx73 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %39, i64 %idxprom72
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %arrayidx71, ptr align 8 %arrayidx73, i64 16, i1 false), !tbaa.struct !341
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %41 = load i32, ptr %i, align 4, !tbaa !9
  %dec = add i32 %41, -1
  store i32 %dec, ptr %i, align 4, !tbaa !9
  br label %for.cond, !llvm.loop !342

for.end:                                          ; preds = %for.cond
  %42 = load i32, ptr %code_line.addr, align 4, !tbaa !9
  %43 = load ptr, ptr %entries, align 8, !tbaa !5
  %44 = load i32, ptr %pos, align 4, !tbaa !9
  %idxprom74 = sext i32 %44 to i64
  %arrayidx75 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %43, i64 %idxprom74
  %code_line76 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx75, i32 0, i32 1
  store i32 %42, ptr %code_line76, align 8, !tbaa !337
  %45 = load ptr, ptr %code_object.addr, align 8, !tbaa !5
  %46 = load ptr, ptr %entries, align 8, !tbaa !5
  %47 = load i32, ptr %pos, align 4, !tbaa !9
  %idxprom77 = sext i32 %47 to i64
  %arrayidx78 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %46, i64 %idxprom77
  %code_object79 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx78, i32 0, i32 0
  store ptr %45, ptr %code_object79, align 8, !tbaa !339
  %48 = load i32, ptr @__pyx_code_cache, align 8, !tbaa !336
  %inc = add i32 %48, 1
  store i32 %inc, ptr @__pyx_code_cache, align 8, !tbaa !336
  %49 = load ptr, ptr %code_object.addr, align 8, !tbaa !5
  call void @Py_INCREF(ptr noundef %49)
  store i32 0, ptr %cleanup.dest.slot, align 4
  br label %cleanup80

cleanup80:                                        ; preds = %for.end, %cleanup, %if.then42, %if.end27, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %entries) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %pos) #13
  %cleanup.dest83 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest83, label %unreachable [
    i32 0, label %cleanup.cont84
    i32 1, label %cleanup.cont84
  ]

cleanup.cont84:                                   ; preds = %cleanup80, %cleanup80
  ret void

unreachable:                                      ; preds = %cleanup80
  unreachable
}

declare ptr @PyFrame_New(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare i32 @PyTraceBack_Here(ptr noundef) #1

declare i32 @PyObject_Not(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_bisect_code_objects(ptr noundef %entries, i32 noundef %count, i32 noundef %code_line) #0 {
entry:
  %retval = alloca i32, align 4
  %entries.addr = alloca ptr, align 8
  %count.addr = alloca i32, align 4
  %code_line.addr = alloca i32, align 4
  %start = alloca i32, align 4
  %mid = alloca i32, align 4
  %end = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %entries, ptr %entries.addr, align 8, !tbaa !5
  store i32 %count, ptr %count.addr, align 4, !tbaa !9
  store i32 %code_line, ptr %code_line.addr, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %start) #13
  store i32 0, ptr %start, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %mid) #13
  store i32 0, ptr %mid, align 4, !tbaa !9
  call void @llvm.lifetime.start.p0(i64 4, ptr %end) #13
  %0 = load i32, ptr %count.addr, align 4, !tbaa !9
  %sub = sub i32 %0, 1
  store i32 %sub, ptr %end, align 4, !tbaa !9
  %1 = load i32, ptr %end, align 4, !tbaa !9
  %cmp = icmp sge i32 %1, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, ptr %code_line.addr, align 4, !tbaa !9
  %3 = load ptr, ptr %entries.addr, align 8, !tbaa !5
  %4 = load i32, ptr %end, align 4, !tbaa !9
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %3, i64 %idxprom
  %code_line1 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx, i32 0, i32 1
  %5 = load i32, ptr %code_line1, align 8, !tbaa !337
  %cmp2 = icmp sgt i32 %2, %5
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, ptr %count.addr, align 4, !tbaa !9
  store i32 %6, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end18, %if.end
  %7 = load i32, ptr %start, align 4, !tbaa !9
  %8 = load i32, ptr %end, align 4, !tbaa !9
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %9 = load i32, ptr %start, align 4, !tbaa !9
  %10 = load i32, ptr %end, align 4, !tbaa !9
  %11 = load i32, ptr %start, align 4, !tbaa !9
  %sub4 = sub i32 %10, %11
  %div = sdiv i32 %sub4, 2
  %add = add i32 %9, %div
  store i32 %add, ptr %mid, align 4, !tbaa !9
  %12 = load i32, ptr %code_line.addr, align 4, !tbaa !9
  %13 = load ptr, ptr %entries.addr, align 8, !tbaa !5
  %14 = load i32, ptr %mid, align 4, !tbaa !9
  %idxprom5 = sext i32 %14 to i64
  %arrayidx6 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %13, i64 %idxprom5
  %code_line7 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx6, i32 0, i32 1
  %15 = load i32, ptr %code_line7, align 8, !tbaa !337
  %cmp8 = icmp slt i32 %12, %15
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %while.body
  %16 = load i32, ptr %mid, align 4, !tbaa !9
  store i32 %16, ptr %end, align 4, !tbaa !9
  br label %if.end18

if.else:                                          ; preds = %while.body
  %17 = load i32, ptr %code_line.addr, align 4, !tbaa !9
  %18 = load ptr, ptr %entries.addr, align 8, !tbaa !5
  %19 = load i32, ptr %mid, align 4, !tbaa !9
  %idxprom10 = sext i32 %19 to i64
  %arrayidx11 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %18, i64 %idxprom10
  %code_line12 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx11, i32 0, i32 1
  %20 = load i32, ptr %code_line12, align 8, !tbaa !337
  %cmp13 = icmp sgt i32 %17, %20
  br i1 %cmp13, label %if.then14, label %if.else16

if.then14:                                        ; preds = %if.else
  %21 = load i32, ptr %mid, align 4, !tbaa !9
  %add15 = add i32 %21, 1
  store i32 %add15, ptr %start, align 4, !tbaa !9
  br label %if.end17

if.else16:                                        ; preds = %if.else
  %22 = load i32, ptr %mid, align 4, !tbaa !9
  store i32 %22, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.end17:                                         ; preds = %if.then14
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then9
  br label %while.cond, !llvm.loop !343

while.end:                                        ; preds = %while.cond
  %23 = load i32, ptr %code_line.addr, align 4, !tbaa !9
  %24 = load ptr, ptr %entries.addr, align 8, !tbaa !5
  %25 = load i32, ptr %mid, align 4, !tbaa !9
  %idxprom19 = sext i32 %25 to i64
  %arrayidx20 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %24, i64 %idxprom19
  %code_line21 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx20, i32 0, i32 1
  %26 = load i32, ptr %code_line21, align 8, !tbaa !337
  %cmp22 = icmp sle i32 %23, %26
  br i1 %cmp22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %while.end
  %27 = load i32, ptr %mid, align 4, !tbaa !9
  store i32 %27, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

if.else24:                                        ; preds = %while.end
  %28 = load i32, ptr %mid, align 4, !tbaa !9
  %add25 = add i32 %28, 1
  store i32 %add25, ptr %retval, align 4
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else24, %if.then23, %if.else16, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %end) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %mid) #13
  call void @llvm.lifetime.end.p0(i64 4, ptr %start) #13
  %29 = load i32, ptr %retval, align 4
  ret i32 %29
}

declare ptr @PyUnicode_AsUTF8(ptr noundef) #1

declare ptr @PyMem_Realloc(ptr noundef, i64 noundef) #1

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start.p0(ptr) #15

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end.p0(ptr) #15

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #6 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #7 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { alwaysinline norecurse nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { convergent nounwind }
attributes #13 = { nounwind }
attributes #14 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #15 = { nocallback nofree nosync nounwind willreturn }
attributes #16 = { nounwind willreturn memory(read) }
attributes #17 = { nounwind allocsize(0) }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"openmp", i32 51}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !7, i64 0}
!11 = !{!12, !6, i64 184}
!12 = !{!"", !13, i64 0, !6, i64 184, !6, i64 192, !6, i64 200}
!13 = !{!"", !14, i64 0, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !6, i64 120, !10, i64 128, !16, i64 136, !10, i64 144, !6, i64 152, !6, i64 160, !6, i64 168, !6, i64 176}
!14 = !{!"", !15, i64 0, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48}
!15 = !{!"_object", !16, i64 0, !6, i64 8}
!16 = !{!"long", !7, i64 0}
!17 = !{!18, !6, i64 264}
!18 = !{!"_typeobject", !19, i64 0, !6, i64 24, !16, i64 32, !16, i64 40, !6, i64 48, !16, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !6, i64 120, !6, i64 128, !6, i64 136, !6, i64 144, !6, i64 152, !6, i64 160, !16, i64 168, !6, i64 176, !6, i64 184, !6, i64 192, !6, i64 200, !16, i64 208, !6, i64 216, !6, i64 224, !6, i64 232, !6, i64 240, !6, i64 248, !6, i64 256, !6, i64 264, !6, i64 272, !6, i64 280, !16, i64 288, !6, i64 296, !6, i64 304, !6, i64 312, !6, i64 320, !6, i64 328, !6, i64 336, !6, i64 344, !6, i64 352, !6, i64 360, !6, i64 368, !6, i64 376, !10, i64 384, !6, i64 392, !6, i64 400}
!19 = !{!"", !15, i64 0, !16, i64 16}
!20 = !{!21, !6, i64 16}
!21 = !{!"_ts", !6, i64 0, !6, i64 8, !6, i64 16, !10, i64 24, !10, i64 28, !10, i64 32, !10, i64 36, !10, i64 40, !10, i64 44, !10, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !6, i64 120, !6, i64 128, !10, i64 136, !6, i64 144, !16, i64 152, !16, i64 160, !10, i64 168, !6, i64 176, !6, i64 184, !6, i64 192, !10, i64 200, !6, i64 208, !6, i64 216, !6, i64 224, !16, i64 232, !16, i64 240, !22, i64 248, !6, i64 296, !6, i64 304, !6, i64 312, !25, i64 320, !26, i64 336}
!22 = !{!"", !6, i64 0, !23, i64 8}
!23 = !{!"_line_offsets", !10, i64 0, !10, i64 4, !10, i64 8, !24, i64 16}
!24 = !{!"_opaque", !10, i64 0, !6, i64 8, !6, i64 16}
!25 = !{!"_err_stackitem", !6, i64 0, !6, i64 8}
!26 = !{!"_PyCFrame", !7, i64 0, !6, i64 8, !6, i64 16}
!27 = !{!16, !16, i64 0}
!28 = !{!15, !16, i64 0}
!29 = !{!7, !7, i64 0}
!30 = distinct !{!30, !31}
!31 = !{!"llvm.loop.mustprogress"}
!32 = distinct !{!32, !31}
!33 = !{!18, !6, i64 256}
!34 = !{!35, !6, i64 0}
!35 = !{!"__pyx_vtabstruct_array", !6, i64 0}
!36 = !{!18, !16, i64 288}
!37 = !{!18, !6, i64 144}
!38 = !{!39, !6, i64 0}
!39 = !{!"__pyx_vtabstruct_memoryview", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48}
!40 = !{!39, !6, i64 8}
!41 = !{!39, !6, i64 16}
!42 = !{!39, !6, i64 24}
!43 = !{!39, !6, i64 32}
!44 = !{!39, !6, i64 40}
!45 = !{!39, !6, i64 48}
!46 = !{i64 0, i64 8, !5, i64 8, i64 8, !5, i64 16, i64 8, !5, i64 24, i64 8, !5, i64 32, i64 8, !5, i64 40, i64 8, !5, i64 48, i64 8, !5}
!47 = !{!48, !6, i64 40}
!48 = !{!"__pyx_vtabstruct__memoryviewslice", !39, i64 0}
!49 = !{!48, !6, i64 48}
!50 = !{!12, !6, i64 192}
!51 = !{!12, !6, i64 200}
!52 = !{!13, !6, i64 152}
!53 = !{!18, !6, i64 128}
!54 = !{!55, !10, i64 40}
!55 = !{!"_frame", !15, i64 0, !6, i64 16, !6, i64 24, !6, i64 32, !10, i64 40, !7, i64 44, !7, i64 45, !7, i64 46, !7, i64 48}
!56 = !{!18, !6, i64 24}
!57 = !{!18, !16, i64 32}
!58 = !{!18, !16, i64 168}
!59 = !{!15, !6, i64 8}
!60 = !{!13, !6, i64 72}
!61 = !{!13, !10, i64 144}
!62 = !{!13, !6, i64 104}
!63 = !{!13, !6, i64 32}
!64 = !{!13, !6, i64 56}
!65 = !{!13, !6, i64 64}
!66 = !{!13, !6, i64 80}
!67 = !{!13, !6, i64 88}
!68 = !{!13, !6, i64 96}
!69 = !{!13, !6, i64 112}
!70 = !{!13, !6, i64 160}
!71 = !{!13, !6, i64 120}
!72 = !{!13, !10, i64 128}
!73 = distinct !{!73, !31}
!74 = !{!13, !6, i64 176}
!75 = distinct !{!75, !31}
!76 = !{!13, !6, i64 40}
!77 = !{!14, !6, i64 16}
!78 = !{!79, !6, i64 8}
!79 = !{!"PyMethodDef", !6, i64 0, !6, i64 8, !10, i64 16, !6, i64 24}
!80 = !{!79, !10, i64 16}
!81 = !{!79, !6, i64 0}
!82 = !{!14, !6, i64 24}
!83 = !{!19, !16, i64 16}
!84 = !{!13, !6, i64 16}
!85 = !{!79, !6, i64 24}
!86 = !{!13, !6, i64 168}
!87 = !{!12, !10, i64 144}
!88 = distinct !{!88, !31}
!89 = !{!12, !6, i64 152}
!90 = !{!12, !6, i64 112}
!91 = !{!14, !6, i64 32}
!92 = !{!12, !6, i64 120}
!93 = !{!12, !16, i64 136}
!94 = !{!12, !10, i64 128}
!95 = distinct !{!95, !31}
!96 = distinct !{!96, !31}
!97 = !{!13, !16, i64 136}
!98 = !{!99, !10, i64 188}
!99 = !{!"PyConfig", !10, i64 0, !10, i64 4, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 20, !16, i64 24, !10, i64 32, !10, i64 36, !10, i64 40, !10, i64 44, !10, i64 48, !10, i64 52, !6, i64 56, !10, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !10, i64 96, !100, i64 104, !100, i64 120, !100, i64 136, !100, i64 152, !10, i64 168, !10, i64 172, !10, i64 176, !10, i64 180, !10, i64 184, !10, i64 188, !10, i64 192, !10, i64 196, !10, i64 200, !10, i64 204, !10, i64 208, !10, i64 212, !10, i64 216, !6, i64 224, !6, i64 232, !6, i64 240, !10, i64 248, !10, i64 252, !10, i64 256, !6, i64 264, !6, i64 272, !6, i64 280, !6, i64 288, !10, i64 296, !100, i64 304, !6, i64 320, !6, i64 328, !6, i64 336, !6, i64 344, !6, i64 352, !6, i64 360, !6, i64 368, !10, i64 376, !6, i64 384, !6, i64 392, !6, i64 400, !10, i64 408, !10, i64 412, !10, i64 416, !10, i64 420}
!100 = !{!"", !16, i64 0, !6, i64 8}
!101 = !{!102, !6, i64 0}
!102 = !{!"", !6, i64 0, !6, i64 8, !16, i64 16, !6, i64 24, !7, i64 32, !7, i64 33, !7, i64 34}
!103 = !{!102, !7, i64 32}
!104 = !{!102, !7, i64 33}
!105 = !{!102, !7, i64 34}
!106 = !{!102, !6, i64 8}
!107 = !{!102, !6, i64 24}
!108 = !{!102, !16, i64 16}
!109 = distinct !{!109, !31}
!110 = !{!111, !10, i64 108}
!111 = !{!"__pyx_array_obj", !15, i64 0, !6, i64 16, !6, i64 24, !16, i64 32, !6, i64 40, !10, i64 48, !6, i64 56, !6, i64 64, !16, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !10, i64 104, !10, i64 108}
!112 = !{!113, !6, i64 72}
!113 = !{!"__pyx_memoryview_obj", !15, i64 0, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !7, i64 56, !6, i64 64, !114, i64 72, !10, i64 152, !10, i64 156, !6, i64 160}
!114 = !{!"", !6, i64 0, !6, i64 8, !16, i64 16, !16, i64 24, !10, i64 32, !10, i64 36, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72}
!115 = !{!18, !6, i64 224}
!116 = !{!117, !6, i64 24}
!117 = !{!"", !19, i64 0, !6, i64 24, !16, i64 32}
!118 = !{!113, !10, i64 152}
!119 = !{!113, !10, i64 156}
!120 = !{!113, !16, i64 96}
!121 = !{!113, !6, i64 16}
!122 = !{!113, !6, i64 136}
!123 = !{!113, !10, i64 108}
!124 = !{!113, !6, i64 112}
!125 = !{!126, !6, i64 24}
!126 = !{!"", !15, i64 0, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40}
!127 = !{!126, !6, i64 16}
!128 = distinct !{!128, !31}
!129 = !{!130, !6, i64 384}
!130 = !{!"__pyx_memoryviewslice_obj", !113, i64 0, !131, i64 168, !6, i64 376, !6, i64 384, !6, i64 392}
!131 = !{!"", !6, i64 0, !6, i64 8, !7, i64 16, !7, i64 80, !7, i64 144}
!132 = !{!130, !6, i64 392}
!133 = !{!18, !6, i64 392}
!134 = !{!111, !6, i64 80}
!135 = !{!111, !6, i64 88}
!136 = !{!18, !6, i64 320}
!137 = !{!18, !6, i64 304}
!138 = !{!18, !6, i64 312}
!139 = !{!111, !6, i64 16}
!140 = !{!111, !6, i64 96}
!141 = !{!111, !6, i64 24}
!142 = !{!111, !10, i64 104}
!143 = !{!111, !6, i64 56}
!144 = !{!111, !6, i64 64}
!145 = !{!111, !10, i64 48}
!146 = distinct !{!146, !31}
!147 = !{!18, !6, i64 112}
!148 = !{!149, !6, i64 8}
!149 = !{!"", !6, i64 0, !6, i64 8, !6, i64 16}
!150 = !{!18, !6, i64 104}
!151 = !{!152, !6, i64 24}
!152 = !{!"", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72}
!153 = !{!152, !6, i64 0}
!154 = !{!155, !16, i64 24}
!155 = !{!"", !15, i64 0, !16, i64 16, !16, i64 24, !156, i64 32, !6, i64 40}
!156 = !{!"", !10, i64 0, !10, i64 0, !10, i64 0, !10, i64 0, !10, i64 0}
!157 = distinct !{!157, !31}
!158 = distinct !{!158, !31}
!159 = distinct !{!159, !31}
!160 = distinct !{!160, !31}
!161 = !{!111, !16, i64 72}
!162 = !{!111, !6, i64 40}
!163 = !{!111, !16, i64 32}
!164 = distinct !{!164, !31}
!165 = !{!155, !16, i64 16}
!166 = !{!18, !6, i64 344}
!167 = distinct !{!167, !31}
!168 = distinct !{!168, !31}
!169 = distinct !{!169, !31}
!170 = distinct !{!170, !31}
!171 = !{!172, !172, i64 0}
!172 = !{!"short", !7, i64 0}
!173 = !{!174, !6, i64 16}
!174 = !{!"__pyx_MemviewEnum_obj", !15, i64 0, !6, i64 16}
!175 = !{!176, !16, i64 24}
!176 = !{!"", !15, i64 0, !16, i64 16, !16, i64 24, !6, i64 32, !6, i64 40}
!177 = !{!114, !16, i64 24}
!178 = !{!114, !10, i64 36}
!179 = !{!114, !16, i64 16}
!180 = !{!114, !6, i64 48}
!181 = !{!114, !6, i64 56}
!182 = !{!114, !6, i64 64}
!183 = distinct !{!183, !31}
!184 = distinct !{!184, !31}
!185 = !{!131, !6, i64 0}
!186 = distinct !{!186, !31}
!187 = !{i64 0, i64 8, !5, i64 8, i64 8, !5, i64 16, i64 64, !29, i64 80, i64 64, !29, i64 144, i64 64, !29}
!188 = !{!131, !6, i64 8}
!189 = !{!113, !6, i64 120}
!190 = !{!113, !6, i64 128}
!191 = distinct !{!191, !31}
!192 = !{!18, !6, i64 96}
!193 = !{!194, !6, i64 128}
!194 = !{!"", !6, i64 0, !6, i64 8, !6, i64 16, !6, i64 24, !6, i64 32, !6, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !6, i64 120, !6, i64 128, !6, i64 136, !6, i64 144, !6, i64 152, !6, i64 160, !6, i64 168, !6, i64 176, !6, i64 184, !6, i64 192, !6, i64 200, !6, i64 208, !6, i64 216, !6, i64 224, !6, i64 232, !6, i64 240, !6, i64 248, !6, i64 256, !6, i64 264, !6, i64 272, !6, i64 280}
!195 = distinct !{!195, !31}
!196 = distinct !{!196, !31}
!197 = distinct !{!197, !31}
!198 = distinct !{!198, !31}
!199 = distinct !{!199, !31}
!200 = distinct !{!200, !31}
!201 = distinct !{!201, !31}
!202 = distinct !{!202, !31}
!203 = distinct !{!203, !31}
!204 = distinct !{!204, !31}
!205 = distinct !{!205, !31}
!206 = distinct !{!206, !31}
!207 = distinct !{!207, !31}
!208 = distinct !{!208, !31}
!209 = distinct !{!209, !31}
!210 = !{!113, !6, i64 24}
!211 = !{!113, !6, i64 32}
!212 = !{!113, !6, i64 40}
!213 = !{!113, !6, i64 80}
!214 = !{!114, !6, i64 8}
!215 = !{!113, !6, i64 48}
!216 = distinct !{!216, !31}
!217 = distinct !{!217, !31}
!218 = distinct !{!218, !31}
!219 = !{!220, !220, i64 0}
!220 = !{!"long long", !7, i64 0}
!221 = !{!194, !6, i64 0}
!222 = !{!223, !224, i64 16}
!223 = !{!"", !15, i64 0, !224, i64 16}
!224 = !{!"double", !7, i64 0}
!225 = !{!224, !224, i64 0}
!226 = !{!117, !16, i64 32}
!227 = !{!130, !6, i64 376}
!228 = !{!113, !6, i64 160}
!229 = !{!130, !6, i64 160}
!230 = !{i64 0, i64 8, !5, i64 8, i64 8, !5, i64 16, i64 8, !27, i64 24, i64 8, !27, i64 32, i64 4, !9, i64 36, i64 4, !9, i64 40, i64 8, !5, i64 48, i64 8, !5, i64 56, i64 8, !5, i64 64, i64 8, !5, i64 72, i64 8, !5}
!231 = !{!130, !6, i64 72}
!232 = !{!130, !10, i64 108}
!233 = !{!130, !10, i64 152}
!234 = !{!130, !6, i64 120}
!235 = !{!130, !6, i64 128}
!236 = !{!130, !6, i64 136}
!237 = distinct !{!237, !31}
!238 = !{!130, !16, i64 96}
!239 = !{!130, !16, i64 88}
!240 = distinct !{!240, !31}
!241 = !{!113, !6, i64 64}
!242 = !{!113, !10, i64 104}
!243 = distinct !{!243, !31}
!244 = distinct !{!244, !31}
!245 = !{!114, !6, i64 40}
!246 = distinct !{!246, !31}
!247 = distinct !{!247, !31}
!248 = distinct !{!248, !31}
!249 = !{!114, !6, i64 0}
!250 = distinct !{!250, !31}
!251 = distinct !{!251, !31}
!252 = distinct !{!252, !31}
!253 = distinct !{!253, !31}
!254 = !{!130, !6, i64 16}
!255 = !{!130, !6, i64 168}
!256 = !{!13, !6, i64 24}
!257 = !{!258, !16, i64 16}
!258 = !{!"", !6, i64 0, !6, i64 8, !16, i64 16, !7, i64 24, !10, i64 88, !7, i64 92, !7, i64 93, !10, i64 96}
!259 = !{!258, !6, i64 0}
!260 = distinct !{!260, !31}
!261 = !{!258, !7, i64 92}
!262 = !{!258, !7, i64 93}
!263 = !{!258, !10, i64 88}
!264 = distinct !{!264, !31}
!265 = !{!258, !10, i64 96}
!266 = !{!258, !6, i64 8}
!267 = !{!268, !6, i64 0}
!268 = !{!"__Pyx_StructField_", !6, i64 0, !6, i64 8, !16, i64 16}
!269 = !{!268, !16, i64 16}
!270 = distinct !{!270, !31}
!271 = !{!272, !6, i64 0}
!272 = !{!"", !6, i64 0, !16, i64 8}
!273 = !{!272, !16, i64 8}
!274 = !{!275, !6, i64 0}
!275 = !{!"", !268, i64 0, !6, i64 24, !16, i64 32, !16, i64 40, !16, i64 48, !16, i64 56, !10, i64 64, !7, i64 68, !7, i64 69, !7, i64 70, !7, i64 71}
!276 = !{!275, !6, i64 8}
!277 = !{!275, !16, i64 16}
!278 = !{!275, !6, i64 24}
!279 = !{!275, !16, i64 32}
!280 = !{!275, !7, i64 69}
!281 = !{!275, !7, i64 70}
!282 = !{!275, !16, i64 40}
!283 = !{!275, !16, i64 48}
!284 = !{!275, !7, i64 68}
!285 = !{!275, !10, i64 64}
!286 = !{!275, !7, i64 71}
!287 = !{!275, !16, i64 56}
!288 = distinct !{!288, !31}
!289 = distinct !{!289, !31}
!290 = distinct !{!290, !31}
!291 = distinct !{!291, !31}
!292 = distinct !{!292, !31}
!293 = !{!268, !6, i64 8}
!294 = distinct !{!294, !31}
!295 = distinct !{!295, !31}
!296 = distinct !{!296, !31}
!297 = distinct !{!297, !31}
!298 = !{!299, !299, i64 0}
!299 = !{!"float", !7, i64 0}
!300 = distinct !{!300, !31}
!301 = distinct !{!301, !31}
!302 = distinct !{!302, !31}
!303 = distinct !{!303, !31}
!304 = distinct !{!304, !31}
!305 = distinct !{!305, !31}
!306 = !{!307}
!307 = !{i64 2, i64 -1, i64 -1, i1 true}
!308 = distinct !{!308, !31}
!309 = distinct !{!309, !31}
!310 = distinct !{!310, !31}
!311 = distinct !{!311, !31}
!312 = distinct !{!312, !31}
!313 = distinct !{!313, !31}
!314 = distinct !{!314, !31}
!315 = !{!152, !6, i64 40}
!316 = !{!317, !6, i64 40}
!317 = !{!"", !19, i64 0, !16, i64 24, !6, i64 32, !6, i64 40, !16, i64 48}
!318 = !{!18, !6, i64 272}
!319 = distinct !{!319, !31}
!320 = distinct !{!320, !31}
!321 = distinct !{!321, !31}
!322 = distinct !{!322, !31}
!323 = distinct !{!323, !31}
!324 = distinct !{!324, !31}
!325 = distinct !{!325, !31}
!326 = distinct !{!326, !31}
!327 = distinct !{!327, !31}
!328 = distinct !{!328, !31}
!329 = distinct !{!329, !31}
!330 = distinct !{!330, !31}
!331 = distinct !{!331, !31}
!332 = !{!114, !10, i64 32}
!333 = !{!113, !16, i64 88}
!334 = !{!335, !6, i64 8}
!335 = !{!"__Pyx_CodeObjectCache", !10, i64 0, !10, i64 4, !6, i64 8}
!336 = !{!335, !10, i64 0}
!337 = !{!338, !10, i64 8}
!338 = !{!"", !6, i64 0, !10, i64 8}
!339 = !{!338, !6, i64 0}
!340 = !{!335, !10, i64 4}
!341 = !{i64 0, i64 8, !5, i64 8, i64 4, !9}
!342 = distinct !{!342, !31}
!343 = distinct !{!343, !31}

; ModuleID = 'samples/390.bc'
source_filename = "bcftools/vcfgtcheck.c.pysam.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.option = type { ptr, i32, ptr, i32 }
%struct.timeval = type { i64, i64 }
%struct.args_t = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, [8 x [3 x double]], [256 x double], double, double, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, double, ptr, i64, ptr, ptr, ptr }
%struct.bcf_srs_t = type { i32, ptr, i32, i32, ptr, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kstring_t, i32, i32, ptr, ptr }
%struct.kstring_t = type { i64, i64, ptr }
%struct.bcf_sr_t = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, ptr, i32 }
%struct.bcf_hdr_t = type { [3 x i32], [3 x ptr], [3 x ptr], ptr, ptr, i32, i32, i32, [2 x ptr], i32, ptr, %struct.kstring_t, [3 x i32] }
%struct.pair_t = type { i32, i32 }
%struct.bcf1_t = type { i64, i64, i32, float, i64, %struct.kstring_t, %struct.kstring_t, %struct.bcf_dec_t, i32, i32, [3 x i32], i32 }
%struct.bcf_dec_t = type { i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.idbl_t = type { i32, i32, double }
%struct.kbitset_iter_t = type { i64, i64, i32 }
%struct.diff_sites_t = type { i32, i32, i32, i32, [1 x i64] }
%struct.kbitset_t = type { i64, i64, [1 x i64] }
%struct.bcf_idpair_t = type { ptr, ptr }

@.str = private unnamed_addr constant [22 x i8] c"/tmp/bcftools-gtcheck\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [5 x i8] c"500M\00", align 1, !dbg !7
@main_vcfgtcheck.loptions = internal global [25 x %struct.option] [%struct.option { ptr @.str.2, i32 1, ptr null, i32 101 }, %struct.option { ptr @.str.3, i32 1, ptr null, i32 117 }, %struct.option { ptr @.str.4, i32 1, ptr null, i32 99 }, %struct.option { ptr @.str.5, i32 1, ptr null, i32 71 }, %struct.option { ptr @.str.6, i32 0, ptr null, i32 97 }, %struct.option { ptr @.str.7, i32 0, ptr null, i32 72 }, %struct.option { ptr @.str.8, i32 0, ptr null, i32 104 }, %struct.option { ptr @.str.9, i32 1, ptr null, i32 103 }, %struct.option { ptr @.str.10, i32 1, ptr null, i32 112 }, %struct.option { ptr @.str.11, i32 1, ptr null, i32 115 }, %struct.option { ptr @.str.12, i32 1, ptr null, i32 83 }, %struct.option { ptr @.str.13, i32 1, ptr null, i32 2 }, %struct.option { ptr @.str.14, i32 0, ptr null, i32 3 }, %struct.option { ptr @.str.15, i32 1, ptr null, i32 4 }, %struct.option { ptr @.str.16, i32 0, ptr null, i32 5 }, %struct.option { ptr @.str.17, i32 1, ptr null, i32 6 }, %struct.option { ptr @.str.18, i32 1, ptr null, i32 114 }, %struct.option { ptr @.str.19, i32 1, ptr null, i32 82 }, %struct.option { ptr @.str.20, i32 1, ptr null, i32 7 }, %struct.option { ptr @.str.21, i32 1, ptr null, i32 116 }, %struct.option { ptr @.str.22, i32 1, ptr null, i32 84 }, %struct.option { ptr @.str.23, i32 1, ptr null, i32 8 }, %struct.option { ptr @.str.24, i32 1, ptr null, i32 112 }, %struct.option { ptr @.str.25, i32 1, ptr null, i32 80 }, %struct.option zeroinitializer], align 16, !dbg !12
@.str.2 = private unnamed_addr constant [18 x i8] c"error-probability\00", align 1, !dbg !670
@.str.3 = private unnamed_addr constant [4 x i8] c"use\00", align 1, !dbg !675
@.str.4 = private unnamed_addr constant [8 x i8] c"cluster\00", align 1, !dbg !680
@.str.5 = private unnamed_addr constant [9 x i8] c"GTs-only\00", align 1, !dbg !684
@.str.6 = private unnamed_addr constant [10 x i8] c"all-sites\00", align 1, !dbg !689
@.str.7 = private unnamed_addr constant [10 x i8] c"homs-only\00", align 1, !dbg !694
@.str.8 = private unnamed_addr constant [5 x i8] c"help\00", align 1, !dbg !696
@.str.9 = private unnamed_addr constant [10 x i8] c"genotypes\00", align 1, !dbg !698
@.str.10 = private unnamed_addr constant [5 x i8] c"plot\00", align 1, !dbg !700
@.str.11 = private unnamed_addr constant [8 x i8] c"samples\00", align 1, !dbg !702
@.str.12 = private unnamed_addr constant [13 x i8] c"samples-file\00", align 1, !dbg !704
@.str.13 = private unnamed_addr constant [10 x i8] c"n-matches\00", align 1, !dbg !709
@.str.14 = private unnamed_addr constant [12 x i8] c"no-HWE-prob\00", align 1, !dbg !711
@.str.15 = private unnamed_addr constant [14 x i8] c"target-sample\00", align 1, !dbg !716
@.str.16 = private unnamed_addr constant [8 x i8] c"dry-run\00", align 1, !dbg !721
@.str.17 = private unnamed_addr constant [18 x i8] c"distinctive-sites\00", align 1, !dbg !723
@.str.18 = private unnamed_addr constant [8 x i8] c"regions\00", align 1, !dbg !725
@.str.19 = private unnamed_addr constant [13 x i8] c"regions-file\00", align 1, !dbg !727
@.str.20 = private unnamed_addr constant [16 x i8] c"regions-overlap\00", align 1, !dbg !729
@.str.21 = private unnamed_addr constant [8 x i8] c"targets\00", align 1, !dbg !734
@.str.22 = private unnamed_addr constant [13 x i8] c"targets-file\00", align 1, !dbg !736
@.str.23 = private unnamed_addr constant [16 x i8] c"targets-overlap\00", align 1, !dbg !738
@.str.24 = private unnamed_addr constant [6 x i8] c"pairs\00", align 1, !dbg !740
@.str.25 = private unnamed_addr constant [11 x i8] c"pairs-file\00", align 1, !dbg !745
@.str.26 = private unnamed_addr constant [32 x i8] c"hg:p:s:S:p:P:Hr:R:at:T:G:c:u:e:\00", align 1, !dbg !750
@optarg = external global ptr, align 8
@.str.27 = private unnamed_addr constant [41 x i8] c"Could not parse: --error-probability %s\0A\00", align 1, !dbg !755
@.str.28 = private unnamed_addr constant [26 x i8] c"Failed to parse --use %s\0A\00", align 1, !dbg !760
@.str.29 = private unnamed_addr constant [3 x i8] c"GT\00", align 1, !dbg !765
@.str.30 = private unnamed_addr constant [3 x i8] c"PL\00", align 1, !dbg !768
@.str.31 = private unnamed_addr constant [56 x i8] c"Failed to parse --use %s; only GT and PL are supported\0A\00", align 1, !dbg !770
@.str.32 = private unnamed_addr constant [33 x i8] c"Could not parse: --n-matches %s\0A\00", align 1, !dbg !775
@.str.33 = private unnamed_addr constant [52 x i8] c"The option -S, --target-sample has been deprecated\0A\00", align 1, !dbg !780
@.str.34 = private unnamed_addr constant [41 x i8] c"Could not parse: --distinctive-sites %s\0A\00", align 1, !dbg !785
@.str.35 = private unnamed_addr constant [68 x i8] c"The -c option is to be implemented, please open an issue on github\0A\00", align 1, !dbg !787
@.str.36 = private unnamed_addr constant [47 x i8] c"The option -G, --GTs-only has been deprecated\0A\00", align 1, !dbg !792
@.str.37 = private unnamed_addr constant [68 x i8] c"The -a option is to be implemented, please open an issue on github\0A\00", align 1, !dbg !797
@.str.38 = private unnamed_addr constant [4 x i8] c"gt:\00", align 1, !dbg !799
@.str.39 = private unnamed_addr constant [5 x i8] c"qry:\00", align 1, !dbg !801
@.str.40 = private unnamed_addr constant [64 x i8] c"Which one? Query samples (qry:%s) or genotype samples (gt:%s)?\0A\00", align 1, !dbg !803
@.str.41 = private unnamed_addr constant [39 x i8] c"Could not parse: --regions-overlap %s\0A\00", align 1, !dbg !808
@.str.42 = private unnamed_addr constant [39 x i8] c"Could not parse: --targets-overlap %s\0A\00", align 1, !dbg !813
@.str.43 = private unnamed_addr constant [22 x i8] c"Unknown argument: %s\0A\00", align 1, !dbg !815
@optind = external global i32, align 4
@stdin = external global ptr, align 8
@.str.44 = private unnamed_addr constant [2 x i8] c"-\00", align 1, !dbg !817
@.str.45 = private unnamed_addr constant [51 x i8] c"Error: too many files given, run with -h for help\0A\00", align 1, !dbg !820
@.str.46 = private unnamed_addr constant [48 x i8] c"The -p/-P option cannot be combined with -s/-S\0A\00", align 1, !dbg !825
@.str.47 = private unnamed_addr constant [54 x i8] c"The --n-matches option cannot be combined with -p/-P\0A\00", align 1, !dbg !830
@.str.48 = private unnamed_addr constant [60 x i8] c"The experimental option --distinctive-sites requires -p/-P\0A\00", align 1, !dbg !835
@.str.49 = private unnamed_addr constant [45 x i8] c"The option --homs-only requires --genotypes\0A\00", align 1, !dbg !840
@.str.50 = private unnamed_addr constant [76 x i8] c"The option --distinctive-sites cannot be combined with --error-probability\0A\00", align 1, !dbg !845
@bcftools_stderr = external global ptr, align 8
@.str.51 = private unnamed_addr constant [57 x i8] c"INFO:\09Time required to process one record .. %f seconds\0A\00", align 1, !dbg !850
@.str.52 = private unnamed_addr constant [56 x i8] c"INFO\09Time required to process one record .. %f seconds\0A\00", align 1, !dbg !855
@.str.53 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1, !dbg !857
@.str.54 = private unnamed_addr constant [94 x i8] c"About:   Check sample identity. With no -g BCF given, multi-sample cross-check is performed.\0A\00", align 1, !dbg !859
@.str.55 = private unnamed_addr constant [76 x i8] c"Usage:   bcftools gtcheck [options] [-g <genotypes.vcf.gz>] <query.vcf.gz>\0A\00", align 1, !dbg !864
@.str.56 = private unnamed_addr constant [10 x i8] c"Options:\0A\00", align 1, !dbg !866
@.str.57 = private unnamed_addr constant [107 x i8] c"        --distinctive-sites            Find sites that can distinguish between at least NUM sample pairs.\0A\00", align 1, !dbg !868
@.str.58 = private unnamed_addr constant [128 x i8] c"                  NUM[,MEM[,TMP]]          If the number is smaller or equal to 1, it is interpreted as the fraction of pairs.\0A\00", align 1, !dbg !873
@.str.59 = private unnamed_addr constant [126 x i8] c"                                           The optional MEM string sets the maximum memory used for in-memory sorting [500M]\0A\00", align 1, !dbg !878
@.str.60 = private unnamed_addr constant [131 x i8] c"                                           and TMP is a prefix of temporary files used by external sorting [/tmp/bcftools.XXXXXX]\0A\00", align 1, !dbg !883
@.str.61 = private unnamed_addr constant [90 x i8] c"        --dry-run                      Stop after first record to estimate required time\0A\00", align 1, !dbg !888
@.str.62 = private unnamed_addr constant [130 x i8] c"    -e, --error-probability INT        Phred-scaled probability of genotyping error, 0 for faster but less accurate results [40]\0A\00", align 1, !dbg !893
@.str.63 = private unnamed_addr constant [69 x i8] c"    -g, --genotypes FILE               Genotypes to compare against\0A\00", align 1, !dbg !898
@.str.64 = private unnamed_addr constant [111 x i8] c"    -H, --homs-only                    Homozygous genotypes only, useful with low coverage data (requires -g)\0A\00", align 1, !dbg !903
@.str.65 = private unnamed_addr constant [127 x i8] c"        --n-matches INT                Print only top INT matches for each sample (sorted by average score), 0 for unlimited.\0A\00", align 1, !dbg !908
@.str.66 = private unnamed_addr constant [121 x i8] c"                                           Use negative value to sort by HWE probability rather than by discordance [0]\0A\00", align 1, !dbg !913
@.str.67 = private unnamed_addr constant [79 x i8] c"        --no-HWE-prob                  Disable calculation of HWE probability\0A\00", align 1, !dbg !918
@.str.68 = private unnamed_addr constant [135 x i8] c"    -p, --pairs LIST                   Comma-separated sample pairs to compare (qry,gt[,qry,gt..] with -g or qry,qry[,qry,qry..] w/o)\0A\00", align 1, !dbg !923
@.str.69 = private unnamed_addr constant [120 x i8] c"    -P, --pairs-file FILE              File with tab-delimited sample pairs to compare (qry,gt with -g or qry,qry w/o)\0A\00", align 1, !dbg !928
@.str.70 = private unnamed_addr constant [84 x i8] c"    -r, --regions REGION               Restrict to comma-separated list of regions\0A\00", align 1, !dbg !933
@.str.71 = private unnamed_addr constant [77 x i8] c"    -R, --regions-file FILE            Restrict to regions listed in a file\0A\00", align 1, !dbg !938
@.str.72 = private unnamed_addr constant [120 x i8] c"        --regions-overlap 0|1|2        Include if POS in the region (0), record overlaps (1), variant overlaps (2) [1]\0A\00", align 1, !dbg !943
@.str.73 = private unnamed_addr constant [133 x i8] c"    -s, --samples [qry|gt]:LIST        List of query or -g samples, \22-\22 to select all samples (by default all samples are compared)\0A\00", align 1, !dbg !945
@.str.74 = private unnamed_addr constant [85 x i8] c"    -S, --samples-file [qry|gt]:FILE   File with the query or -g samples to compare\0A\00", align 1, !dbg !950
@.str.75 = private unnamed_addr constant [90 x i8] c"    -t, --targets REGION               Similar to -r but streams rather than index-jumps\0A\00", align 1, !dbg !955
@.str.76 = private unnamed_addr constant [90 x i8] c"    -T, --targets-file FILE            Similar to -R but streams rather than index-jumps\0A\00", align 1, !dbg !957
@.str.77 = private unnamed_addr constant [120 x i8] c"        --targets-overlap 0|1|2        Include if POS in the region (0), record overlaps (1), variant overlaps (2) [0]\0A\00", align 1, !dbg !959
@.str.78 = private unnamed_addr constant [113 x i8] c"    -u, --use TAG1[,TAG2]              Which tag to use in the query file (TAG1) and the -g file (TAG2) [PL,GT]\0A\00", align 1, !dbg !961
@.str.79 = private unnamed_addr constant [11 x i8] c"Examples:\0A\00", align 1, !dbg !966
@.str.80 = private unnamed_addr constant [70 x i8] c"   # Check discordance of all samples from B against all sample in A\0A\00", align 1, !dbg !968
@.str.81 = private unnamed_addr constant [36 x i8] c"   bcftools gtcheck -g A.bcf B.bcf\0A\00", align 1, !dbg !973
@.str.82 = private unnamed_addr constant [53 x i8] c"   # Limit comparisons to the fiven list of samples\0A\00", align 1, !dbg !978
@.str.83 = private unnamed_addr constant [64 x i8] c"   bcftools gtcheck -s gt:a1,a2,a3 -s qry:b1,b2 -g A.bcf B.bcf\0A\00", align 1, !dbg !983
@.str.84 = private unnamed_addr constant [45 x i8] c"   # Compare only two pairs a1,b1 and a1,b2\0A\00", align 1, !dbg !985
@.str.85 = private unnamed_addr constant [51 x i8] c"   bcftools gtcheck -p a1,b1,a1,b2 -g A.bcf B.bcf\0A\00", align 1, !dbg !987
@.str.86 = private unnamed_addr constant [32 x i8] c"Failed to read the regions: %s\0A\00", align 1, !dbg !989
@.str.87 = private unnamed_addr constant [32 x i8] c"Failed to read the targets: %s\0A\00", align 1, !dbg !991
@.str.88 = private unnamed_addr constant [23 x i8] c"Failed to open %s: %s\0A\00", align 1, !dbg !993
@.str.89 = private unnamed_addr constant [28 x i8] c"Failed to read from %s: %s\0A\00", align 1, !dbg !998
@.str.90 = private unnamed_addr constant [15 x i8] c"standard input\00", align 1, !dbg !1003
@.str.91 = private unnamed_addr constant [19 x i8] c"No samples in %s?\0A\00", align 1, !dbg !1008
@.str.92 = private unnamed_addr constant [62 x i8] c"[E::%s] Neither PL nor GT tag is present in the header of %s\0A\00", align 1, !dbg !1013
@__func__.init_data = private unnamed_addr constant [10 x i8] c"init_data\00", align 1, !dbg !1018
@.str.93 = private unnamed_addr constant [55 x i8] c"[E::%s] The GT tag is not present in the header of %s\0A\00", align 1, !dbg !1021
@.str.94 = private unnamed_addr constant [55 x i8] c"[E::%s] The PL tag is not present in the header of %s\0A\00", align 1, !dbg !1026
@.str.95 = private unnamed_addr constant [20 x i8] c"Failed to parse %s\0A\00", align 1, !dbg !1028
@.str.96 = private unnamed_addr constant [57 x i8] c"Expected even number of comma-delimited samples with -p\0A\00", align 1, !dbg !1030
@.str.97 = private unnamed_addr constant [28 x i8] c"No such sample in %s: [%s]\0A\00", align 1, !dbg !1032
@.str.98 = private unnamed_addr constant [24 x i8] c"Could not parse %s: %s\0A\00", align 1, !dbg !1034
@.str.99 = private unnamed_addr constant [35 x i8] c"Error: failed to allocate %.1f Mb\0A\00", align 1, !dbg !1039
@.str.100 = private unnamed_addr constant [80 x i8] c"Error: failed to allocate %.1f Mb. Run with --no-HWE-prob to save some memory.\0A\00", align 1, !dbg !1044
@bcftools_stdout = external global ptr, align 8
@.str.101 = private unnamed_addr constant [46 x i8] c"Error: the sample \22%s\22 is listed twice in %s\0A\00", align 1, !dbg !1049
@.str.102 = private unnamed_addr constant [55 x i8] c"The value for --distinctive-sites was set too low: %d\0A\00", align 1, !dbg !1054
@.str.103 = private unnamed_addr constant [116 x i8] c"Warning: The value for --distinctive-sites is bigger than is the number of pairs, all discordant sites be printed.\0A\00", align 1, !dbg !1056
@.str.104 = private unnamed_addr constant [76 x i8] c"# This file was produced by bcftools (%s+htslib-%s), the command line was:\0A\00", align 1, !dbg !1061
@.str.105 = private unnamed_addr constant [17 x i8] c"# \09 bcftools %s \00", align 1, !dbg !1063
@.str.106 = private unnamed_addr constant [4 x i8] c" %s\00", align 1, !dbg !1068
@.str.107 = private unnamed_addr constant [35 x i8] c"\0A# and the working directory was:\0A\00", align 1, !dbg !1070
@.str.108 = private unnamed_addr constant [10 x i8] c"# \09 %s\0A#\0A\00", align 1, !dbg !1072
@.str.109 = private unnamed_addr constant [86 x i8] c"INFO: skipping %s:%ld, no record with matching POS+ALT. (This is printed only once.)\0A\00", align 1, !dbg !1074
@.str.110 = private unnamed_addr constant [53 x i8] c"not a biallelic site, run `bcftools norm -m -` first\00", align 1, !dbg !1079
@.str.111 = private unnamed_addr constant [17 x i8] c"monoallelic site\00", align 1, !dbg !1081
@.str.112 = private unnamed_addr constant [57 x i8] c"INFO: skipping %s:%ld, %s. (This is printed only once.)\0A\00", align 1, !dbg !1083
@.str.113 = private unnamed_addr constant [28 x i8] c"todo: bcf_calc_ac() failed\0A\00", align 1, !dbg !1085
@set_data.warn_dip_GT = internal global i32 1, align 4, !dbg !1087
@set_data.warn_dip_PL = internal global i32 1, align 4, !dbg !1109
@.str.114 = private unnamed_addr constant [94 x i8] c"INFO: skipping %s:%ld, only diploid FORMAT/GT fields supported. (This is printed only once.)\0A\00", align 1, !dbg !1111
@.str.115 = private unnamed_addr constant [94 x i8] c"INFO: skipping %s:%ld, only diploid FORMAT/PL fields supported. (This is printed only once.)\0A\00", align 1, !dbg !1113
@.str.116 = private unnamed_addr constant [24 x i8] c"INFO\09sites-compared\09%u\0A\00", align 1, !dbg !1115
@.str.117 = private unnamed_addr constant [32 x i8] c"INFO\09sites-skipped-no-match\09%u\0A\00", align 1, !dbg !1117
@.str.118 = private unnamed_addr constant [36 x i8] c"INFO\09sites-skipped-multiallelic\09%u\0A\00", align 1, !dbg !1119
@.str.119 = private unnamed_addr constant [35 x i8] c"INFO\09sites-skipped-monoallelic\09%u\0A\00", align 1, !dbg !1121
@.str.120 = private unnamed_addr constant [31 x i8] c"INFO\09sites-skipped-no-data\09%u\0A\00", align 1, !dbg !1123
@.str.121 = private unnamed_addr constant [38 x i8] c"INFO\09sites-skipped-GT-not-diploid\09%u\0A\00", align 1, !dbg !1128
@.str.122 = private unnamed_addr constant [38 x i8] c"INFO\09sites-skipped-PL-not-diploid\09%u\0A\00", align 1, !dbg !1133
@.str.123 = private unnamed_addr constant [20 x i8] c"# DC, discordance:\0A\00", align 1, !dbg !1135
@.str.124 = private unnamed_addr constant [22 x i8] c"#     - query sample\0A\00", align 1, !dbg !1137
@.str.125 = private unnamed_addr constant [26 x i8] c"#     - genotyped sample\0A\00", align 1, !dbg !1139
@.str.126 = private unnamed_addr constant [63 x i8] c"#     - discordance (number of mismatches; smaller is better)\0A\00", align 1, !dbg !1141
@.str.127 = private unnamed_addr constant [124 x i8] c"#     - negative log of HWE probability at matching sites (rare genotypes mataches are more informative, bigger is better)\0A\00", align 1, !dbg !1146
@.str.128 = private unnamed_addr constant [53 x i8] c"#     - number of sites compared (bigger is better)\0A\00", align 1, !dbg !1151
@.str.129 = private unnamed_addr constant [99 x i8] c"#DC\09[2]Query Sample\09[3]Genotyped Sample\09[4]Discordance\09[5]-log P(HWE)\09[6]Number of sites compared\0A\00", align 1, !dbg !1153
@.str.130 = private unnamed_addr constant [19 x i8] c"DC\09%s\09%s\09%u\09%e\09%u\0A\00", align 1, !dbg !1158
@.str.131 = private unnamed_addr constant [19 x i8] c"DC\09%s\09%s\09%e\09%e\09%u\0A\00", align 1, !dbg !1160
@.str.132 = private unnamed_addr constant [26 x i8] c"# DS, distinctive sites:\0A\00", align 1, !dbg !1162
@.str.133 = private unnamed_addr constant [20 x i8] c"#     - chromosome\0A\00", align 1, !dbg !1164
@.str.134 = private unnamed_addr constant [18 x i8] c"#     - position\0A\00", align 1, !dbg !1166
@.str.135 = private unnamed_addr constant [64 x i8] c"#     - cumulative number of pairs distinguished by this block\0A\00", align 1, !dbg !1168
@.str.136 = private unnamed_addr constant [18 x i8] c"#     - block id\0A\00", align 1, !dbg !1170
@.str.137 = private unnamed_addr constant [82 x i8] c"#DS\09[2]Chromosome\09[3]Position\09[4]Cumulative number of distinct pairs\09[5]Block id\0A\00", align 1, !dbg !1172
@.str.138 = private unnamed_addr constant [33 x i8] c"Corrupted data, fixme: %d vs %d\0A\00", align 1, !dbg !1177
@.str.139 = private unnamed_addr constant [16 x i8] c"DS\09%s\09%d\09%d\09%d\0A\00", align 1, !dbg !1179

; Function Attrs: nounwind uwtable
define i32 @main_vcfgtcheck(i32 noundef %argc, ptr noundef %argv) #0 !dbg !14 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca ptr, align 8
  %c = alloca i32, align 4
  %args = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %i = alloca i32, align 4
  %nlist = alloca i32, align 4
  %list = alloca ptr, align 8
  %ret = alloca i32, align 4
  %t0 = alloca %struct.timeval, align 8
  %t1 = alloca %struct.timeval, align 8
  %delta = alloca double, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %argc, ptr %argc.addr, align 4, !tbaa !1223
  tail call void @llvm.dbg.declare(metadata ptr %argc.addr, metadata !1182, metadata !DIExpression()), !dbg !1227
  store ptr %argv, ptr %argv.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %argv.addr, metadata !1183, metadata !DIExpression()), !dbg !1230
  call void @llvm.lifetime.start.p0(i64 4, ptr %c) #14, !dbg !1231
  tail call void @llvm.dbg.declare(metadata ptr %c, metadata !1184, metadata !DIExpression()), !dbg !1232
  call void @llvm.lifetime.start.p0(i64 8, ptr %args) #14, !dbg !1233
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !1185, metadata !DIExpression()), !dbg !1234
  %call = call noalias ptr @calloc(i64 noundef 1, i64 noundef 2632) #15, !dbg !1235
  store ptr %call, ptr %args, align 8, !dbg !1234, !tbaa !1228
  %0 = load i32, ptr %argc.addr, align 4, !dbg !1236, !tbaa !1223
  %1 = load ptr, ptr %args, align 8, !dbg !1237, !tbaa !1228
  %argc1 = getelementptr inbounds %struct.args_t, ptr %1, i32 0, i32 12, !dbg !1238
  store i32 %0, ptr %argc1, align 8, !dbg !1239, !tbaa !1240
  %2 = load ptr, ptr %argv.addr, align 8, !dbg !1244, !tbaa !1228
  %3 = load ptr, ptr %args, align 8, !dbg !1245, !tbaa !1228
  %argv2 = getelementptr inbounds %struct.args_t, ptr %3, i32 0, i32 4, !dbg !1246
  store ptr %2, ptr %argv2, align 8, !dbg !1247, !tbaa !1248
  %4 = load ptr, ptr %args, align 8, !dbg !1249, !tbaa !1228
  call void @set_cwd(ptr noundef %4), !dbg !1250
  %5 = load ptr, ptr %args, align 8, !dbg !1251, !tbaa !1228
  %qry_use_GT = getelementptr inbounds %struct.args_t, ptr %5, i32 0, i32 20, !dbg !1252
  store i32 -1, ptr %qry_use_GT, align 8, !dbg !1253, !tbaa !1254
  %6 = load ptr, ptr %args, align 8, !dbg !1255, !tbaa !1228
  %gt_use_GT = getelementptr inbounds %struct.args_t, ptr %6, i32 0, i32 21, !dbg !1256
  store i32 -1, ptr %gt_use_GT, align 4, !dbg !1257, !tbaa !1258
  %7 = load ptr, ptr %args, align 8, !dbg !1259, !tbaa !1228
  %calc_hwe_prob = getelementptr inbounds %struct.args_t, ptr %7, i32 0, i32 49, !dbg !1260
  store i32 1, ptr %calc_hwe_prob, align 8, !dbg !1261, !tbaa !1262
  %8 = load ptr, ptr %args, align 8, !dbg !1263, !tbaa !1228
  %use_PLs = getelementptr inbounds %struct.args_t, ptr %8, i32 0, i32 52, !dbg !1264
  store i32 40, ptr %use_PLs, align 4, !dbg !1265, !tbaa !1266
  %9 = load ptr, ptr %args, align 8, !dbg !1267, !tbaa !1228
  %regions_overlap = getelementptr inbounds %struct.args_t, ptr %9, i32 0, i32 18, !dbg !1268
  store i32 1, ptr %regions_overlap, align 8, !dbg !1269, !tbaa !1270
  %10 = load ptr, ptr %args, align 8, !dbg !1271, !tbaa !1228
  %targets_overlap = getelementptr inbounds %struct.args_t, ptr %10, i32 0, i32 19, !dbg !1272
  store i32 0, ptr %targets_overlap, align 4, !dbg !1273, !tbaa !1274
  %11 = load ptr, ptr %args, align 8, !dbg !1275, !tbaa !1228
  %es_tmp_prefix = getelementptr inbounds %struct.args_t, ptr %11, i32 0, i32 64, !dbg !1276
  store ptr @.str, ptr %es_tmp_prefix, align 8, !dbg !1277, !tbaa !1278
  %call3 = call noalias ptr @strdup(ptr noundef @.str.1) #14, !dbg !1279
  %12 = load ptr, ptr %args, align 8, !dbg !1280, !tbaa !1228
  %es_max_mem = getelementptr inbounds %struct.args_t, ptr %12, i32 0, i32 65, !dbg !1281
  store ptr %call3, ptr %es_max_mem, align 8, !dbg !1282, !tbaa !1283
  %13 = load ptr, ptr %args, align 8, !dbg !1284, !tbaa !1228
  %min_inter_err = getelementptr inbounds %struct.args_t, ptr %13, i32 0, i32 43, !dbg !1285
  store double 2.300000e-01, ptr %min_inter_err, align 8, !dbg !1286, !tbaa !1287
  %14 = load ptr, ptr %args, align 8, !dbg !1288, !tbaa !1228
  %max_intra_err = getelementptr inbounds %struct.args_t, ptr %14, i32 0, i32 44, !dbg !1289
  store double -3.000000e-01, ptr %max_intra_err, align 8, !dbg !1290, !tbaa !1291
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #14, !dbg !1292
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1186, metadata !DIExpression()), !dbg !1293
  br label %while.cond, !dbg !1294

while.cond:                                       ; preds = %sw.epilog, %entry
  %15 = load i32, ptr %argc.addr, align 4, !dbg !1295, !tbaa !1223
  %16 = load ptr, ptr %argv.addr, align 8, !dbg !1296, !tbaa !1228
  %call4 = call i32 @getopt_long(i32 noundef %15, ptr noundef %16, ptr noundef @.str.26, ptr noundef @main_vcfgtcheck.loptions, ptr noundef null) #14, !dbg !1297
  store i32 %call4, ptr %c, align 4, !dbg !1298, !tbaa !1223
  %cmp = icmp sge i32 %call4, 0, !dbg !1299
  br i1 %cmp, label %while.body, label %while.end160, !dbg !1294

while.body:                                       ; preds = %while.cond
  %17 = load i32, ptr %c, align 4, !dbg !1300, !tbaa !1223
  switch i32 %17, label %sw.default [
    i32 101, label %sw.bb
    i32 117, label %sw.bb9
    i32 2, label %sw.bb56
    i32 3, label %sw.bb71
    i32 4, label %sw.bb73
    i32 5, label %sw.bb74
    i32 6, label %sw.bb75
    i32 99, label %sw.bb101
    i32 71, label %sw.bb102
    i32 97, label %sw.bb103
    i32 72, label %sw.bb104
    i32 103, label %sw.bb105
    i32 115, label %sw.bb106
    i32 83, label %sw.bb119
    i32 112, label %sw.bb134
    i32 80, label %sw.bb135
    i32 114, label %sw.bb137
    i32 82, label %sw.bb138
    i32 116, label %sw.bb140
    i32 84, label %sw.bb141
    i32 7, label %sw.bb143
    i32 8, label %sw.bb151
    i32 104, label %sw.bb159
    i32 63, label %sw.bb159
  ], !dbg !1301

sw.bb:                                            ; preds = %while.body
  %18 = load ptr, ptr @optarg, align 8, !dbg !1302, !tbaa !1228
  %call5 = call i64 @strtol(ptr noundef %18, ptr noundef %tmp, i32 noundef 10) #14, !dbg !1303
  %conv = trunc i64 %call5 to i32, !dbg !1303
  %19 = load ptr, ptr %args, align 8, !dbg !1304, !tbaa !1228
  %use_PLs6 = getelementptr inbounds %struct.args_t, ptr %19, i32 0, i32 52, !dbg !1305
  store i32 %conv, ptr %use_PLs6, align 4, !dbg !1306, !tbaa !1266
  %20 = load ptr, ptr %tmp, align 8, !dbg !1307, !tbaa !1228
  %tobool = icmp ne ptr %20, null, !dbg !1307
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !1309

lor.lhs.false:                                    ; preds = %sw.bb
  %21 = load ptr, ptr %tmp, align 8, !dbg !1310, !tbaa !1228
  %22 = load i8, ptr %21, align 1, !dbg !1311, !tbaa !1312
  %conv7 = sext i8 %22 to i32, !dbg !1311
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !1311
  br i1 %tobool8, label %if.then, label %if.end, !dbg !1313

if.then:                                          ; preds = %lor.lhs.false, %sw.bb
  %23 = load ptr, ptr @optarg, align 8, !dbg !1314, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.27, ptr noundef %23) #16, !dbg !1315
  unreachable, !dbg !1315

if.end:                                           ; preds = %lor.lhs.false
  br label %sw.epilog, !dbg !1316

sw.bb9:                                           ; preds = %while.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #14, !dbg !1317
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !1187, metadata !DIExpression()), !dbg !1318
  call void @llvm.lifetime.start.p0(i64 4, ptr %nlist) #14, !dbg !1317
  tail call void @llvm.dbg.declare(metadata ptr %nlist, metadata !1191, metadata !DIExpression()), !dbg !1319
  call void @llvm.lifetime.start.p0(i64 8, ptr %list) #14, !dbg !1320
  tail call void @llvm.dbg.declare(metadata ptr %list, metadata !1192, metadata !DIExpression()), !dbg !1321
  %24 = load ptr, ptr @optarg, align 8, !dbg !1322, !tbaa !1228
  %call10 = call ptr @hts_readlist(ptr noundef %24, i32 noundef 0, ptr noundef %nlist), !dbg !1323
  store ptr %call10, ptr %list, align 8, !dbg !1321, !tbaa !1228
  %25 = load ptr, ptr %list, align 8, !dbg !1324, !tbaa !1228
  %tobool11 = icmp ne ptr %25, null, !dbg !1324
  br i1 %tobool11, label %lor.lhs.false12, label %if.then18, !dbg !1326

lor.lhs.false12:                                  ; preds = %sw.bb9
  %26 = load i32, ptr %nlist, align 4, !dbg !1327, !tbaa !1223
  %cmp13 = icmp sle i32 %26, 0, !dbg !1328
  br i1 %cmp13, label %if.then18, label %lor.lhs.false15, !dbg !1329

lor.lhs.false15:                                  ; preds = %lor.lhs.false12
  %27 = load i32, ptr %nlist, align 4, !dbg !1330, !tbaa !1223
  %cmp16 = icmp sgt i32 %27, 2, !dbg !1331
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !1332

if.then18:                                        ; preds = %lor.lhs.false15, %lor.lhs.false12, %sw.bb9
  %28 = load ptr, ptr @optarg, align 8, !dbg !1333, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.28, ptr noundef %28) #16, !dbg !1334
  unreachable, !dbg !1334

if.end19:                                         ; preds = %lor.lhs.false15
  %29 = load ptr, ptr %list, align 8, !dbg !1335, !tbaa !1228
  %arrayidx = getelementptr ptr, ptr %29, i64 0, !dbg !1335
  %30 = load ptr, ptr %arrayidx, align 8, !dbg !1335, !tbaa !1228
  %call20 = call i32 @strcasecmp(ptr noundef @.str.29, ptr noundef %30) #17, !dbg !1337
  %tobool21 = icmp ne i32 %call20, 0, !dbg !1337
  br i1 %tobool21, label %if.else, label %if.then22, !dbg !1338

if.then22:                                        ; preds = %if.end19
  %31 = load ptr, ptr %args, align 8, !dbg !1339, !tbaa !1228
  %qry_use_GT23 = getelementptr inbounds %struct.args_t, ptr %31, i32 0, i32 20, !dbg !1340
  store i32 1, ptr %qry_use_GT23, align 8, !dbg !1341, !tbaa !1254
  br label %if.end31, !dbg !1339

if.else:                                          ; preds = %if.end19
  %32 = load ptr, ptr %list, align 8, !dbg !1342, !tbaa !1228
  %arrayidx24 = getelementptr ptr, ptr %32, i64 0, !dbg !1342
  %33 = load ptr, ptr %arrayidx24, align 8, !dbg !1342, !tbaa !1228
  %call25 = call i32 @strcasecmp(ptr noundef @.str.30, ptr noundef %33) #17, !dbg !1344
  %tobool26 = icmp ne i32 %call25, 0, !dbg !1344
  br i1 %tobool26, label %if.else29, label %if.then27, !dbg !1345

if.then27:                                        ; preds = %if.else
  %34 = load ptr, ptr %args, align 8, !dbg !1346, !tbaa !1228
  %qry_use_GT28 = getelementptr inbounds %struct.args_t, ptr %34, i32 0, i32 20, !dbg !1347
  store i32 0, ptr %qry_use_GT28, align 8, !dbg !1348, !tbaa !1254
  br label %if.end30, !dbg !1346

if.else29:                                        ; preds = %if.else
  %35 = load ptr, ptr @optarg, align 8, !dbg !1349, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.31, ptr noundef %35) #16, !dbg !1350
  unreachable, !dbg !1350

if.end30:                                         ; preds = %if.then27
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then22
  %36 = load i32, ptr %nlist, align 4, !dbg !1351, !tbaa !1223
  %cmp32 = icmp eq i32 %36, 2, !dbg !1353
  br i1 %cmp32, label %if.then34, label %if.else49, !dbg !1354

if.then34:                                        ; preds = %if.end31
  %37 = load ptr, ptr %list, align 8, !dbg !1355, !tbaa !1228
  %arrayidx35 = getelementptr ptr, ptr %37, i64 1, !dbg !1355
  %38 = load ptr, ptr %arrayidx35, align 8, !dbg !1355, !tbaa !1228
  %call36 = call i32 @strcasecmp(ptr noundef @.str.29, ptr noundef %38) #17, !dbg !1358
  %tobool37 = icmp ne i32 %call36, 0, !dbg !1358
  br i1 %tobool37, label %if.else40, label %if.then38, !dbg !1359

if.then38:                                        ; preds = %if.then34
  %39 = load ptr, ptr %args, align 8, !dbg !1360, !tbaa !1228
  %gt_use_GT39 = getelementptr inbounds %struct.args_t, ptr %39, i32 0, i32 21, !dbg !1361
  store i32 1, ptr %gt_use_GT39, align 4, !dbg !1362, !tbaa !1258
  br label %if.end48, !dbg !1360

if.else40:                                        ; preds = %if.then34
  %40 = load ptr, ptr %list, align 8, !dbg !1363, !tbaa !1228
  %arrayidx41 = getelementptr ptr, ptr %40, i64 1, !dbg !1363
  %41 = load ptr, ptr %arrayidx41, align 8, !dbg !1363, !tbaa !1228
  %call42 = call i32 @strcasecmp(ptr noundef @.str.30, ptr noundef %41) #17, !dbg !1365
  %tobool43 = icmp ne i32 %call42, 0, !dbg !1365
  br i1 %tobool43, label %if.else46, label %if.then44, !dbg !1366

if.then44:                                        ; preds = %if.else40
  %42 = load ptr, ptr %args, align 8, !dbg !1367, !tbaa !1228
  %gt_use_GT45 = getelementptr inbounds %struct.args_t, ptr %42, i32 0, i32 21, !dbg !1368
  store i32 0, ptr %gt_use_GT45, align 4, !dbg !1369, !tbaa !1258
  br label %if.end47, !dbg !1367

if.else46:                                        ; preds = %if.else40
  %43 = load ptr, ptr @optarg, align 8, !dbg !1370, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.31, ptr noundef %43) #16, !dbg !1371
  unreachable, !dbg !1371

if.end47:                                         ; preds = %if.then44
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then38
  br label %if.end52, !dbg !1372

if.else49:                                        ; preds = %if.end31
  %44 = load ptr, ptr %args, align 8, !dbg !1373, !tbaa !1228
  %qry_use_GT50 = getelementptr inbounds %struct.args_t, ptr %44, i32 0, i32 20, !dbg !1374
  %45 = load i32, ptr %qry_use_GT50, align 8, !dbg !1374, !tbaa !1254
  %46 = load ptr, ptr %args, align 8, !dbg !1375, !tbaa !1228
  %gt_use_GT51 = getelementptr inbounds %struct.args_t, ptr %46, i32 0, i32 21, !dbg !1376
  store i32 %45, ptr %gt_use_GT51, align 4, !dbg !1377, !tbaa !1258
  br label %if.end52

if.end52:                                         ; preds = %if.else49, %if.end48
  store i32 0, ptr %i, align 4, !dbg !1378, !tbaa !1223
  br label %for.cond, !dbg !1380

for.cond:                                         ; preds = %for.inc, %if.end52
  %47 = load i32, ptr %i, align 4, !dbg !1381, !tbaa !1223
  %48 = load i32, ptr %nlist, align 4, !dbg !1383, !tbaa !1223
  %cmp53 = icmp slt i32 %47, %48, !dbg !1384
  br i1 %cmp53, label %for.body, label %for.end, !dbg !1385

for.body:                                         ; preds = %for.cond
  %49 = load ptr, ptr %list, align 8, !dbg !1386, !tbaa !1228
  %50 = load i32, ptr %i, align 4, !dbg !1387, !tbaa !1223
  %idxprom = sext i32 %50 to i64, !dbg !1386
  %arrayidx55 = getelementptr ptr, ptr %49, i64 %idxprom, !dbg !1386
  %51 = load ptr, ptr %arrayidx55, align 8, !dbg !1386, !tbaa !1228
  call void @free(ptr noundef %51) #14, !dbg !1388
  br label %for.inc, !dbg !1388

for.inc:                                          ; preds = %for.body
  %52 = load i32, ptr %i, align 4, !dbg !1389, !tbaa !1223
  %inc = add i32 %52, 1, !dbg !1389
  store i32 %inc, ptr %i, align 4, !dbg !1389, !tbaa !1223
  br label %for.cond, !dbg !1390, !llvm.loop !1391

for.end:                                          ; preds = %for.cond
  %53 = load ptr, ptr %list, align 8, !dbg !1394, !tbaa !1228
  call void @free(ptr noundef %53) #14, !dbg !1395
  call void @llvm.lifetime.end.p0(i64 8, ptr %list) #14, !dbg !1396
  call void @llvm.lifetime.end.p0(i64 4, ptr %nlist) #14, !dbg !1396
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #14, !dbg !1396
  br label %sw.epilog, !dbg !1397

sw.bb56:                                          ; preds = %while.body
  %54 = load ptr, ptr @optarg, align 8, !dbg !1398, !tbaa !1228
  %call57 = call i64 @strtol(ptr noundef %54, ptr noundef %tmp, i32 noundef 10) #14, !dbg !1399
  %conv58 = trunc i64 %call57 to i32, !dbg !1399
  %55 = load ptr, ptr %args, align 8, !dbg !1400, !tbaa !1228
  %ntop = getelementptr inbounds %struct.args_t, ptr %55, i32 0, i32 47, !dbg !1401
  store i32 %conv58, ptr %ntop, align 8, !dbg !1402, !tbaa !1403
  %56 = load ptr, ptr %tmp, align 8, !dbg !1404, !tbaa !1228
  %tobool59 = icmp ne ptr %56, null, !dbg !1404
  br i1 %tobool59, label %lor.lhs.false60, label %if.then63, !dbg !1406

lor.lhs.false60:                                  ; preds = %sw.bb56
  %57 = load ptr, ptr %tmp, align 8, !dbg !1407, !tbaa !1228
  %58 = load i8, ptr %57, align 1, !dbg !1408, !tbaa !1312
  %conv61 = sext i8 %58 to i32, !dbg !1408
  %tobool62 = icmp ne i32 %conv61, 0, !dbg !1408
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !1409

if.then63:                                        ; preds = %lor.lhs.false60, %sw.bb56
  %59 = load ptr, ptr @optarg, align 8, !dbg !1410, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.32, ptr noundef %59) #16, !dbg !1411
  unreachable, !dbg !1411

if.end64:                                         ; preds = %lor.lhs.false60
  %60 = load ptr, ptr %args, align 8, !dbg !1412, !tbaa !1228
  %ntop65 = getelementptr inbounds %struct.args_t, ptr %60, i32 0, i32 47, !dbg !1414
  %61 = load i32, ptr %ntop65, align 8, !dbg !1414, !tbaa !1403
  %cmp66 = icmp slt i32 %61, 0, !dbg !1415
  br i1 %cmp66, label %if.then68, label %if.end70, !dbg !1416

if.then68:                                        ; preds = %if.end64
  %62 = load ptr, ptr %args, align 8, !dbg !1417, !tbaa !1228
  %sort_by_hwe = getelementptr inbounds %struct.args_t, ptr %62, i32 0, i32 50, !dbg !1419
  store i32 1, ptr %sort_by_hwe, align 4, !dbg !1420, !tbaa !1421
  %63 = load ptr, ptr %args, align 8, !dbg !1422, !tbaa !1228
  %ntop69 = getelementptr inbounds %struct.args_t, ptr %63, i32 0, i32 47, !dbg !1423
  %64 = load i32, ptr %ntop69, align 8, !dbg !1424, !tbaa !1403
  %mul = mul i32 %64, -1, !dbg !1424
  store i32 %mul, ptr %ntop69, align 8, !dbg !1424, !tbaa !1403
  br label %if.end70, !dbg !1425

if.end70:                                         ; preds = %if.then68, %if.end64
  br label %sw.epilog, !dbg !1426

sw.bb71:                                          ; preds = %while.body
  %65 = load ptr, ptr %args, align 8, !dbg !1427, !tbaa !1228
  %calc_hwe_prob72 = getelementptr inbounds %struct.args_t, ptr %65, i32 0, i32 49, !dbg !1428
  store i32 0, ptr %calc_hwe_prob72, align 8, !dbg !1429, !tbaa !1262
  br label %sw.epilog, !dbg !1430

sw.bb73:                                          ; preds = %while.body
  call void (ptr, ...) @error(ptr noundef @.str.33) #16, !dbg !1431
  unreachable, !dbg !1431

sw.bb74:                                          ; preds = %while.body
  %66 = load ptr, ptr %args, align 8, !dbg !1432, !tbaa !1228
  %dry_run = getelementptr inbounds %struct.args_t, ptr %66, i32 0, i32 51, !dbg !1433
  store i32 1, ptr %dry_run, align 8, !dbg !1434, !tbaa !1435
  br label %sw.epilog, !dbg !1436

sw.bb75:                                          ; preds = %while.body
  %67 = load ptr, ptr @optarg, align 8, !dbg !1437, !tbaa !1228
  %call76 = call double @strtod(ptr noundef %67, ptr noundef %tmp) #14, !dbg !1438
  %68 = load ptr, ptr %args, align 8, !dbg !1439, !tbaa !1228
  %distinctive_sites = getelementptr inbounds %struct.args_t, ptr %68, i32 0, i32 60, !dbg !1440
  store double %call76, ptr %distinctive_sites, align 8, !dbg !1441, !tbaa !1442
  %69 = load ptr, ptr %tmp, align 8, !dbg !1443, !tbaa !1228
  %70 = load i8, ptr %69, align 1, !dbg !1445, !tbaa !1312
  %tobool77 = icmp ne i8 %70, 0, !dbg !1445
  br i1 %tobool77, label %if.then78, label %if.end99, !dbg !1446

if.then78:                                        ; preds = %sw.bb75
  %71 = load ptr, ptr %tmp, align 8, !dbg !1447, !tbaa !1228
  %72 = load i8, ptr %71, align 1, !dbg !1450, !tbaa !1312
  %conv79 = sext i8 %72 to i32, !dbg !1450
  %cmp80 = icmp ne i32 %conv79, 44, !dbg !1451
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !1452

if.then82:                                        ; preds = %if.then78
  %73 = load ptr, ptr @optarg, align 8, !dbg !1453, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.34, ptr noundef %73) #16, !dbg !1454
  unreachable, !dbg !1454

if.end83:                                         ; preds = %if.then78
  %74 = load ptr, ptr %tmp, align 8, !dbg !1455, !tbaa !1228
  %incdec.ptr = getelementptr i8, ptr %74, i32 1, !dbg !1455
  store ptr %incdec.ptr, ptr %tmp, align 8, !dbg !1455, !tbaa !1228
  %75 = load ptr, ptr %args, align 8, !dbg !1456, !tbaa !1228
  %es_max_mem84 = getelementptr inbounds %struct.args_t, ptr %75, i32 0, i32 65, !dbg !1457
  %76 = load ptr, ptr %es_max_mem84, align 8, !dbg !1457, !tbaa !1283
  call void @free(ptr noundef %76) #14, !dbg !1458
  %77 = load ptr, ptr %tmp, align 8, !dbg !1459, !tbaa !1228
  %call85 = call noalias ptr @strdup(ptr noundef %77) #14, !dbg !1460
  %78 = load ptr, ptr %args, align 8, !dbg !1461, !tbaa !1228
  %es_max_mem86 = getelementptr inbounds %struct.args_t, ptr %78, i32 0, i32 65, !dbg !1462
  store ptr %call85, ptr %es_max_mem86, align 8, !dbg !1463, !tbaa !1283
  br label %while.cond87, !dbg !1464

while.cond87:                                     ; preds = %while.body93, %if.end83
  %79 = load ptr, ptr %tmp, align 8, !dbg !1465, !tbaa !1228
  %80 = load i8, ptr %79, align 1, !dbg !1466, !tbaa !1312
  %conv88 = sext i8 %80 to i32, !dbg !1466
  %tobool89 = icmp ne i32 %conv88, 0, !dbg !1466
  br i1 %tobool89, label %land.rhs, label %land.end, !dbg !1467

land.rhs:                                         ; preds = %while.cond87
  %81 = load ptr, ptr %tmp, align 8, !dbg !1468, !tbaa !1228
  %82 = load i8, ptr %81, align 1, !dbg !1469, !tbaa !1312
  %conv90 = sext i8 %82 to i32, !dbg !1469
  %cmp91 = icmp ne i32 %conv90, 44, !dbg !1470
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond87
  %83 = phi i1 [ false, %while.cond87 ], [ %cmp91, %land.rhs ], !dbg !1471
  br i1 %83, label %while.body93, label %while.end, !dbg !1464

while.body93:                                     ; preds = %land.end
  %84 = load ptr, ptr %tmp, align 8, !dbg !1472, !tbaa !1228
  %incdec.ptr94 = getelementptr i8, ptr %84, i32 1, !dbg !1472
  store ptr %incdec.ptr94, ptr %tmp, align 8, !dbg !1472, !tbaa !1228
  br label %while.cond87, !dbg !1464, !llvm.loop !1473

while.end:                                        ; preds = %land.end
  %85 = load ptr, ptr %tmp, align 8, !dbg !1474, !tbaa !1228
  %86 = load i8, ptr %85, align 1, !dbg !1476, !tbaa !1312
  %tobool95 = icmp ne i8 %86, 0, !dbg !1476
  br i1 %tobool95, label %if.then96, label %if.end98, !dbg !1477

if.then96:                                        ; preds = %while.end
  %87 = load ptr, ptr %tmp, align 8, !dbg !1478, !tbaa !1228
  store i8 0, ptr %87, align 1, !dbg !1480, !tbaa !1312
  %88 = load ptr, ptr %tmp, align 8, !dbg !1481, !tbaa !1228
  %add.ptr = getelementptr i8, ptr %88, i64 1, !dbg !1482
  %89 = load ptr, ptr %args, align 8, !dbg !1483, !tbaa !1228
  %es_tmp_prefix97 = getelementptr inbounds %struct.args_t, ptr %89, i32 0, i32 64, !dbg !1484
  store ptr %add.ptr, ptr %es_tmp_prefix97, align 8, !dbg !1485, !tbaa !1278
  br label %if.end98, !dbg !1486

if.end98:                                         ; preds = %if.then96, %while.end
  br label %if.end99, !dbg !1487

if.end99:                                         ; preds = %if.end98, %sw.bb75
  %90 = load ptr, ptr %args, align 8, !dbg !1488, !tbaa !1228
  %use_PLs100 = getelementptr inbounds %struct.args_t, ptr %90, i32 0, i32 52, !dbg !1489
  store i32 0, ptr %use_PLs100, align 4, !dbg !1490, !tbaa !1266
  br label %sw.epilog, !dbg !1491

sw.bb101:                                         ; preds = %while.body
  call void (ptr, ...) @error(ptr noundef @.str.35) #16, !dbg !1492
  unreachable, !dbg !1492

sw.bb102:                                         ; preds = %while.body
  call void (ptr, ...) @error(ptr noundef @.str.36) #16, !dbg !1493
  unreachable, !dbg !1493

sw.bb103:                                         ; preds = %while.body
  %91 = load ptr, ptr %args, align 8, !dbg !1494, !tbaa !1228
  %all_sites = getelementptr inbounds %struct.args_t, ptr %91, i32 0, i32 45, !dbg !1495
  store i32 1, ptr %all_sites, align 8, !dbg !1496, !tbaa !1497
  call void (ptr, ...) @error(ptr noundef @.str.37) #16, !dbg !1498
  unreachable, !dbg !1498

sw.bb104:                                         ; preds = %while.body
  %92 = load ptr, ptr %args, align 8, !dbg !1499, !tbaa !1228
  %hom_only = getelementptr inbounds %struct.args_t, ptr %92, i32 0, i32 46, !dbg !1500
  store i32 1, ptr %hom_only, align 4, !dbg !1501, !tbaa !1502
  br label %sw.epilog, !dbg !1503

sw.bb105:                                         ; preds = %while.body
  %93 = load ptr, ptr @optarg, align 8, !dbg !1504, !tbaa !1228
  %94 = load ptr, ptr %args, align 8, !dbg !1505, !tbaa !1228
  %gt_fname = getelementptr inbounds %struct.args_t, ptr %94, i32 0, i32 10, !dbg !1506
  store ptr %93, ptr %gt_fname, align 8, !dbg !1507, !tbaa !1508
  br label %sw.epilog, !dbg !1509

sw.bb106:                                         ; preds = %while.body
  %95 = load ptr, ptr @optarg, align 8, !dbg !1510, !tbaa !1228
  %call107 = call i32 @strncasecmp(ptr noundef @.str.38, ptr noundef %95, i64 noundef 3) #17, !dbg !1512
  %tobool108 = icmp ne i32 %call107, 0, !dbg !1512
  br i1 %tobool108, label %if.else111, label %if.then109, !dbg !1513

if.then109:                                       ; preds = %sw.bb106
  %96 = load ptr, ptr @optarg, align 8, !dbg !1514, !tbaa !1228
  %add.ptr110 = getelementptr i8, ptr %96, i64 3, !dbg !1515
  %97 = load ptr, ptr %args, align 8, !dbg !1516, !tbaa !1228
  %gt_samples = getelementptr inbounds %struct.args_t, ptr %97, i32 0, i32 5, !dbg !1517
  store ptr %add.ptr110, ptr %gt_samples, align 8, !dbg !1518, !tbaa !1519
  br label %if.end118, !dbg !1516

if.else111:                                       ; preds = %sw.bb106
  %98 = load ptr, ptr @optarg, align 8, !dbg !1520, !tbaa !1228
  %call112 = call i32 @strncasecmp(ptr noundef @.str.39, ptr noundef %98, i64 noundef 4) #17, !dbg !1522
  %tobool113 = icmp ne i32 %call112, 0, !dbg !1522
  br i1 %tobool113, label %if.else116, label %if.then114, !dbg !1523

if.then114:                                       ; preds = %if.else111
  %99 = load ptr, ptr @optarg, align 8, !dbg !1524, !tbaa !1228
  %add.ptr115 = getelementptr i8, ptr %99, i64 4, !dbg !1525
  %100 = load ptr, ptr %args, align 8, !dbg !1526, !tbaa !1228
  %qry_samples = getelementptr inbounds %struct.args_t, ptr %100, i32 0, i32 6, !dbg !1527
  store ptr %add.ptr115, ptr %qry_samples, align 8, !dbg !1528, !tbaa !1529
  br label %if.end117, !dbg !1526

if.else116:                                       ; preds = %if.else111
  %101 = load ptr, ptr @optarg, align 8, !dbg !1530, !tbaa !1228
  %102 = load ptr, ptr @optarg, align 8, !dbg !1531, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.40, ptr noundef %101, ptr noundef %102) #16, !dbg !1532
  unreachable, !dbg !1532

if.end117:                                        ; preds = %if.then114
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then109
  br label %sw.epilog, !dbg !1533

sw.bb119:                                         ; preds = %while.body
  %103 = load ptr, ptr @optarg, align 8, !dbg !1534, !tbaa !1228
  %call120 = call i32 @strncasecmp(ptr noundef @.str.38, ptr noundef %103, i64 noundef 3) #17, !dbg !1536
  %tobool121 = icmp ne i32 %call120, 0, !dbg !1536
  br i1 %tobool121, label %if.else125, label %if.then122, !dbg !1537

if.then122:                                       ; preds = %sw.bb119
  %104 = load ptr, ptr @optarg, align 8, !dbg !1538, !tbaa !1228
  %add.ptr123 = getelementptr i8, ptr %104, i64 3, !dbg !1539
  %105 = load ptr, ptr %args, align 8, !dbg !1540, !tbaa !1228
  %gt_samples124 = getelementptr inbounds %struct.args_t, ptr %105, i32 0, i32 5, !dbg !1541
  store ptr %add.ptr123, ptr %gt_samples124, align 8, !dbg !1542, !tbaa !1519
  %106 = load ptr, ptr %args, align 8, !dbg !1543, !tbaa !1228
  %gt_samples_is_file = getelementptr inbounds %struct.args_t, ptr %106, i32 0, i32 13, !dbg !1544
  store i32 1, ptr %gt_samples_is_file, align 4, !dbg !1545, !tbaa !1546
  br label %if.end133, !dbg !1540

if.else125:                                       ; preds = %sw.bb119
  %107 = load ptr, ptr @optarg, align 8, !dbg !1547, !tbaa !1228
  %call126 = call i32 @strncasecmp(ptr noundef @.str.39, ptr noundef %107, i64 noundef 4) #17, !dbg !1549
  %tobool127 = icmp ne i32 %call126, 0, !dbg !1549
  br i1 %tobool127, label %if.else131, label %if.then128, !dbg !1550

if.then128:                                       ; preds = %if.else125
  %108 = load ptr, ptr @optarg, align 8, !dbg !1551, !tbaa !1228
  %add.ptr129 = getelementptr i8, ptr %108, i64 4, !dbg !1552
  %109 = load ptr, ptr %args, align 8, !dbg !1553, !tbaa !1228
  %qry_samples130 = getelementptr inbounds %struct.args_t, ptr %109, i32 0, i32 6, !dbg !1554
  store ptr %add.ptr129, ptr %qry_samples130, align 8, !dbg !1555, !tbaa !1529
  %110 = load ptr, ptr %args, align 8, !dbg !1556, !tbaa !1228
  %qry_samples_is_file = getelementptr inbounds %struct.args_t, ptr %110, i32 0, i32 14, !dbg !1557
  store i32 1, ptr %qry_samples_is_file, align 8, !dbg !1558, !tbaa !1559
  br label %if.end132, !dbg !1553

if.else131:                                       ; preds = %if.else125
  %111 = load ptr, ptr @optarg, align 8, !dbg !1560, !tbaa !1228
  %112 = load ptr, ptr @optarg, align 8, !dbg !1561, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.40, ptr noundef %111, ptr noundef %112) #16, !dbg !1562
  unreachable, !dbg !1562

if.end132:                                        ; preds = %if.then128
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then122
  br label %sw.epilog, !dbg !1563

sw.bb134:                                         ; preds = %while.body
  %113 = load ptr, ptr @optarg, align 8, !dbg !1564, !tbaa !1228
  %114 = load ptr, ptr %args, align 8, !dbg !1565, !tbaa !1228
  %pair_samples = getelementptr inbounds %struct.args_t, ptr %114, i32 0, i32 11, !dbg !1566
  store ptr %113, ptr %pair_samples, align 8, !dbg !1567, !tbaa !1568
  br label %sw.epilog, !dbg !1569

sw.bb135:                                         ; preds = %while.body
  %115 = load ptr, ptr @optarg, align 8, !dbg !1570, !tbaa !1228
  %116 = load ptr, ptr %args, align 8, !dbg !1571, !tbaa !1228
  %pair_samples136 = getelementptr inbounds %struct.args_t, ptr %116, i32 0, i32 11, !dbg !1572
  store ptr %115, ptr %pair_samples136, align 8, !dbg !1573, !tbaa !1568
  %117 = load ptr, ptr %args, align 8, !dbg !1574, !tbaa !1228
  %pair_samples_is_file = getelementptr inbounds %struct.args_t, ptr %117, i32 0, i32 17, !dbg !1575
  store i32 1, ptr %pair_samples_is_file, align 4, !dbg !1576, !tbaa !1577
  br label %sw.epilog, !dbg !1578

sw.bb137:                                         ; preds = %while.body
  %118 = load ptr, ptr @optarg, align 8, !dbg !1579, !tbaa !1228
  %119 = load ptr, ptr %args, align 8, !dbg !1580, !tbaa !1228
  %regions = getelementptr inbounds %struct.args_t, ptr %119, i32 0, i32 7, !dbg !1581
  store ptr %118, ptr %regions, align 8, !dbg !1582, !tbaa !1583
  br label %sw.epilog, !dbg !1584

sw.bb138:                                         ; preds = %while.body
  %120 = load ptr, ptr @optarg, align 8, !dbg !1585, !tbaa !1228
  %121 = load ptr, ptr %args, align 8, !dbg !1586, !tbaa !1228
  %regions139 = getelementptr inbounds %struct.args_t, ptr %121, i32 0, i32 7, !dbg !1587
  store ptr %120, ptr %regions139, align 8, !dbg !1588, !tbaa !1583
  %122 = load ptr, ptr %args, align 8, !dbg !1589, !tbaa !1228
  %regions_is_file = getelementptr inbounds %struct.args_t, ptr %122, i32 0, i32 15, !dbg !1590
  store i32 1, ptr %regions_is_file, align 4, !dbg !1591, !tbaa !1592
  br label %sw.epilog, !dbg !1593

sw.bb140:                                         ; preds = %while.body
  %123 = load ptr, ptr @optarg, align 8, !dbg !1594, !tbaa !1228
  %124 = load ptr, ptr %args, align 8, !dbg !1595, !tbaa !1228
  %targets = getelementptr inbounds %struct.args_t, ptr %124, i32 0, i32 8, !dbg !1596
  store ptr %123, ptr %targets, align 8, !dbg !1597, !tbaa !1598
  br label %sw.epilog, !dbg !1599

sw.bb141:                                         ; preds = %while.body
  %125 = load ptr, ptr @optarg, align 8, !dbg !1600, !tbaa !1228
  %126 = load ptr, ptr %args, align 8, !dbg !1601, !tbaa !1228
  %targets142 = getelementptr inbounds %struct.args_t, ptr %126, i32 0, i32 8, !dbg !1602
  store ptr %125, ptr %targets142, align 8, !dbg !1603, !tbaa !1598
  %127 = load ptr, ptr %args, align 8, !dbg !1604, !tbaa !1228
  %targets_is_file = getelementptr inbounds %struct.args_t, ptr %127, i32 0, i32 16, !dbg !1605
  store i32 1, ptr %targets_is_file, align 8, !dbg !1606, !tbaa !1607
  br label %sw.epilog, !dbg !1608

sw.bb143:                                         ; preds = %while.body
  %128 = load ptr, ptr @optarg, align 8, !dbg !1609, !tbaa !1228
  %call144 = call i32 @parse_overlap_option(ptr noundef %128), !dbg !1610
  %129 = load ptr, ptr %args, align 8, !dbg !1611, !tbaa !1228
  %regions_overlap145 = getelementptr inbounds %struct.args_t, ptr %129, i32 0, i32 18, !dbg !1612
  store i32 %call144, ptr %regions_overlap145, align 8, !dbg !1613, !tbaa !1270
  %130 = load ptr, ptr %args, align 8, !dbg !1614, !tbaa !1228
  %regions_overlap146 = getelementptr inbounds %struct.args_t, ptr %130, i32 0, i32 18, !dbg !1616
  %131 = load i32, ptr %regions_overlap146, align 8, !dbg !1616, !tbaa !1270
  %cmp147 = icmp slt i32 %131, 0, !dbg !1617
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !1618

if.then149:                                       ; preds = %sw.bb143
  %132 = load ptr, ptr @optarg, align 8, !dbg !1619, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.41, ptr noundef %132) #16, !dbg !1620
  unreachable, !dbg !1620

if.end150:                                        ; preds = %sw.bb143
  br label %sw.epilog, !dbg !1621

sw.bb151:                                         ; preds = %while.body
  %133 = load ptr, ptr @optarg, align 8, !dbg !1622, !tbaa !1228
  %call152 = call i32 @parse_overlap_option(ptr noundef %133), !dbg !1623
  %134 = load ptr, ptr %args, align 8, !dbg !1624, !tbaa !1228
  %targets_overlap153 = getelementptr inbounds %struct.args_t, ptr %134, i32 0, i32 19, !dbg !1625
  store i32 %call152, ptr %targets_overlap153, align 4, !dbg !1626, !tbaa !1274
  %135 = load ptr, ptr %args, align 8, !dbg !1627, !tbaa !1228
  %targets_overlap154 = getelementptr inbounds %struct.args_t, ptr %135, i32 0, i32 19, !dbg !1629
  %136 = load i32, ptr %targets_overlap154, align 4, !dbg !1629, !tbaa !1274
  %cmp155 = icmp slt i32 %136, 0, !dbg !1630
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !1631

if.then157:                                       ; preds = %sw.bb151
  %137 = load ptr, ptr @optarg, align 8, !dbg !1632, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.42, ptr noundef %137) #16, !dbg !1633
  unreachable, !dbg !1633

if.end158:                                        ; preds = %sw.bb151
  br label %sw.epilog, !dbg !1634

sw.bb159:                                         ; preds = %while.body, %while.body
  call void @usage(), !dbg !1635
  br label %sw.epilog, !dbg !1636

sw.default:                                       ; preds = %while.body
  %138 = load ptr, ptr @optarg, align 8, !dbg !1637, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.43, ptr noundef %138) #16, !dbg !1638
  unreachable, !dbg !1638

sw.epilog:                                        ; preds = %sw.bb159, %if.end158, %if.end150, %sw.bb141, %sw.bb140, %sw.bb138, %sw.bb137, %sw.bb135, %sw.bb134, %if.end133, %if.end118, %sw.bb105, %sw.bb104, %if.end99, %sw.bb74, %sw.bb71, %if.end70, %for.end, %if.end
  br label %while.cond, !dbg !1294, !llvm.loop !1639

while.end160:                                     ; preds = %while.cond
  %139 = load i32, ptr @optind, align 4, !dbg !1641, !tbaa !1223
  %140 = load i32, ptr %argc.addr, align 4, !dbg !1643, !tbaa !1223
  %cmp161 = icmp eq i32 %139, %140, !dbg !1644
  br i1 %cmp161, label %if.then163, label %if.else170, !dbg !1645

if.then163:                                       ; preds = %while.end160
  %141 = load ptr, ptr @stdin, align 8, !dbg !1646, !tbaa !1228
  %call164 = call i32 @fileno(ptr noundef %141) #14, !dbg !1649
  %call165 = call i32 @isatty(i32 noundef %call164) #14, !dbg !1650
  %tobool166 = icmp ne i32 %call165, 0, !dbg !1650
  br i1 %tobool166, label %if.else168, label %if.then167, !dbg !1651

if.then167:                                       ; preds = %if.then163
  %142 = load ptr, ptr %args, align 8, !dbg !1652, !tbaa !1228
  %qry_fname = getelementptr inbounds %struct.args_t, ptr %142, i32 0, i32 9, !dbg !1653
  store ptr @.str.44, ptr %qry_fname, align 8, !dbg !1654, !tbaa !1655
  br label %if.end169, !dbg !1652

if.else168:                                       ; preds = %if.then163
  call void @usage(), !dbg !1656
  br label %if.end169

if.end169:                                        ; preds = %if.else168, %if.then167
  br label %if.end174, !dbg !1657

if.else170:                                       ; preds = %while.end160
  %143 = load ptr, ptr %argv.addr, align 8, !dbg !1658, !tbaa !1228
  %144 = load i32, ptr @optind, align 4, !dbg !1659, !tbaa !1223
  %idxprom171 = sext i32 %144 to i64, !dbg !1658
  %arrayidx172 = getelementptr ptr, ptr %143, i64 %idxprom171, !dbg !1658
  %145 = load ptr, ptr %arrayidx172, align 8, !dbg !1658, !tbaa !1228
  %146 = load ptr, ptr %args, align 8, !dbg !1660, !tbaa !1228
  %qry_fname173 = getelementptr inbounds %struct.args_t, ptr %146, i32 0, i32 9, !dbg !1661
  store ptr %145, ptr %qry_fname173, align 8, !dbg !1662, !tbaa !1655
  br label %if.end174

if.end174:                                        ; preds = %if.else170, %if.end169
  %147 = load i32, ptr %argc.addr, align 4, !dbg !1663, !tbaa !1223
  %148 = load i32, ptr @optind, align 4, !dbg !1665, !tbaa !1223
  %add = add i32 %148, 1, !dbg !1666
  %cmp175 = icmp sgt i32 %147, %add, !dbg !1667
  br i1 %cmp175, label %if.then177, label %if.end178, !dbg !1668

if.then177:                                       ; preds = %if.end174
  call void (ptr, ...) @error(ptr noundef @.str.45) #16, !dbg !1669
  unreachable, !dbg !1669

if.end178:                                        ; preds = %if.end174
  %149 = load ptr, ptr %args, align 8, !dbg !1670, !tbaa !1228
  %pair_samples179 = getelementptr inbounds %struct.args_t, ptr %149, i32 0, i32 11, !dbg !1672
  %150 = load ptr, ptr %pair_samples179, align 8, !dbg !1672, !tbaa !1568
  %tobool180 = icmp ne ptr %150, null, !dbg !1670
  br i1 %tobool180, label %if.then181, label %if.end193, !dbg !1673

if.then181:                                       ; preds = %if.end178
  %151 = load ptr, ptr %args, align 8, !dbg !1674, !tbaa !1228
  %gt_samples182 = getelementptr inbounds %struct.args_t, ptr %151, i32 0, i32 5, !dbg !1677
  %152 = load ptr, ptr %gt_samples182, align 8, !dbg !1677, !tbaa !1519
  %tobool183 = icmp ne ptr %152, null, !dbg !1674
  br i1 %tobool183, label %if.then187, label %lor.lhs.false184, !dbg !1678

lor.lhs.false184:                                 ; preds = %if.then181
  %153 = load ptr, ptr %args, align 8, !dbg !1679, !tbaa !1228
  %qry_samples185 = getelementptr inbounds %struct.args_t, ptr %153, i32 0, i32 6, !dbg !1680
  %154 = load ptr, ptr %qry_samples185, align 8, !dbg !1680, !tbaa !1529
  %tobool186 = icmp ne ptr %154, null, !dbg !1679
  br i1 %tobool186, label %if.then187, label %if.end188, !dbg !1681

if.then187:                                       ; preds = %lor.lhs.false184, %if.then181
  call void (ptr, ...) @error(ptr noundef @.str.46) #16, !dbg !1682
  unreachable, !dbg !1682

if.end188:                                        ; preds = %lor.lhs.false184
  %155 = load ptr, ptr %args, align 8, !dbg !1683, !tbaa !1228
  %ntop189 = getelementptr inbounds %struct.args_t, ptr %155, i32 0, i32 47, !dbg !1685
  %156 = load i32, ptr %ntop189, align 8, !dbg !1685, !tbaa !1403
  %tobool190 = icmp ne i32 %156, 0, !dbg !1683
  br i1 %tobool190, label %if.then191, label %if.end192, !dbg !1686

if.then191:                                       ; preds = %if.end188
  call void (ptr, ...) @error(ptr noundef @.str.47) #16, !dbg !1687
  unreachable, !dbg !1687

if.end192:                                        ; preds = %if.end188
  br label %if.end193, !dbg !1688

if.end193:                                        ; preds = %if.end192, %if.end178
  %157 = load ptr, ptr %args, align 8, !dbg !1689, !tbaa !1228
  %distinctive_sites194 = getelementptr inbounds %struct.args_t, ptr %157, i32 0, i32 60, !dbg !1691
  %158 = load double, ptr %distinctive_sites194, align 8, !dbg !1691, !tbaa !1442
  %tobool195 = fcmp une double %158, 0.000000e+00, !dbg !1689
  br i1 %tobool195, label %land.lhs.true, label %if.end199, !dbg !1692

land.lhs.true:                                    ; preds = %if.end193
  %159 = load ptr, ptr %args, align 8, !dbg !1693, !tbaa !1228
  %pair_samples196 = getelementptr inbounds %struct.args_t, ptr %159, i32 0, i32 11, !dbg !1694
  %160 = load ptr, ptr %pair_samples196, align 8, !dbg !1694, !tbaa !1568
  %tobool197 = icmp ne ptr %160, null, !dbg !1693
  br i1 %tobool197, label %if.end199, label %if.then198, !dbg !1695

if.then198:                                       ; preds = %land.lhs.true
  call void (ptr, ...) @error(ptr noundef @.str.48) #16, !dbg !1696
  unreachable, !dbg !1696

if.end199:                                        ; preds = %land.lhs.true, %if.end193
  %161 = load ptr, ptr %args, align 8, !dbg !1697, !tbaa !1228
  %hom_only200 = getelementptr inbounds %struct.args_t, ptr %161, i32 0, i32 46, !dbg !1699
  %162 = load i32, ptr %hom_only200, align 4, !dbg !1699, !tbaa !1502
  %tobool201 = icmp ne i32 %162, 0, !dbg !1697
  br i1 %tobool201, label %land.lhs.true202, label %if.end206, !dbg !1700

land.lhs.true202:                                 ; preds = %if.end199
  %163 = load ptr, ptr %args, align 8, !dbg !1701, !tbaa !1228
  %gt_fname203 = getelementptr inbounds %struct.args_t, ptr %163, i32 0, i32 10, !dbg !1702
  %164 = load ptr, ptr %gt_fname203, align 8, !dbg !1702, !tbaa !1508
  %tobool204 = icmp ne ptr %164, null, !dbg !1701
  br i1 %tobool204, label %if.end206, label %if.then205, !dbg !1703

if.then205:                                       ; preds = %land.lhs.true202
  call void (ptr, ...) @error(ptr noundef @.str.49) #16, !dbg !1704
  unreachable, !dbg !1704

if.end206:                                        ; preds = %land.lhs.true202, %if.end199
  %165 = load ptr, ptr %args, align 8, !dbg !1705, !tbaa !1228
  %distinctive_sites207 = getelementptr inbounds %struct.args_t, ptr %165, i32 0, i32 60, !dbg !1707
  %166 = load double, ptr %distinctive_sites207, align 8, !dbg !1707, !tbaa !1442
  %tobool208 = fcmp une double %166, 0.000000e+00, !dbg !1705
  br i1 %tobool208, label %land.lhs.true209, label %if.end213, !dbg !1708

land.lhs.true209:                                 ; preds = %if.end206
  %167 = load ptr, ptr %args, align 8, !dbg !1709, !tbaa !1228
  %use_PLs210 = getelementptr inbounds %struct.args_t, ptr %167, i32 0, i32 52, !dbg !1710
  %168 = load i32, ptr %use_PLs210, align 4, !dbg !1710, !tbaa !1266
  %tobool211 = icmp ne i32 %168, 0, !dbg !1709
  br i1 %tobool211, label %if.then212, label %if.end213, !dbg !1711

if.then212:                                       ; preds = %land.lhs.true209
  call void (ptr, ...) @error(ptr noundef @.str.50) #16, !dbg !1712
  unreachable, !dbg !1712

if.end213:                                        ; preds = %land.lhs.true209, %if.end206
  %169 = load ptr, ptr %args, align 8, !dbg !1713, !tbaa !1228
  call void @init_data(ptr noundef %169), !dbg !1714
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #14, !dbg !1715
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1193, metadata !DIExpression()), !dbg !1716
  br label %while.cond214, !dbg !1717

while.cond214:                                    ; preds = %cleanup.cont248, %if.then220, %if.end213
  %170 = load ptr, ptr %args, align 8, !dbg !1718, !tbaa !1228
  %files = getelementptr inbounds %struct.args_t, ptr %170, i32 0, i32 0, !dbg !1719
  %171 = load ptr, ptr %files, align 8, !dbg !1719, !tbaa !1720
  %call215 = call i32 @bcf_sr_next_line(ptr noundef %171), !dbg !1721
  store i32 %call215, ptr %ret, align 4, !dbg !1722, !tbaa !1223
  %tobool216 = icmp ne i32 %call215, 0, !dbg !1717
  br i1 %tobool216, label %while.body217, label %while.end249, !dbg !1717

while.body217:                                    ; preds = %while.cond214
  %172 = load ptr, ptr %args, align 8, !dbg !1723, !tbaa !1228
  %173 = load i32, ptr %ret, align 4, !dbg !1725, !tbaa !1223
  %call218 = call i32 @is_input_okay(ptr noundef %172, i32 noundef %173), !dbg !1726
  %tobool219 = icmp ne i32 %call218, 0, !dbg !1726
  br i1 %tobool219, label %if.end221, label %if.then220, !dbg !1727

if.then220:                                       ; preds = %while.body217
  br label %while.cond214, !dbg !1728, !llvm.loop !1729

if.end221:                                        ; preds = %while.body217
  call void @llvm.lifetime.start.p0(i64 16, ptr %t0) #14, !dbg !1731
  tail call void @llvm.dbg.declare(metadata ptr %t0, metadata !1194, metadata !DIExpression()), !dbg !1732
  call void @llvm.lifetime.start.p0(i64 16, ptr %t1) #14, !dbg !1731
  tail call void @llvm.dbg.declare(metadata ptr %t1, metadata !1203, metadata !DIExpression()), !dbg !1733
  %174 = load ptr, ptr %args, align 8, !dbg !1734, !tbaa !1228
  %ncmp = getelementptr inbounds %struct.args_t, ptr %174, i32 0, i32 31, !dbg !1736
  %175 = load i32, ptr %ncmp, align 8, !dbg !1736, !tbaa !1737
  %tobool222 = icmp ne i32 %175, 0, !dbg !1734
  br i1 %tobool222, label %if.end225, label %if.then223, !dbg !1738

if.then223:                                       ; preds = %if.end221
  %call224 = call i32 @gettimeofday(ptr noundef %t0, ptr noundef null) #14, !dbg !1739
  br label %if.end225, !dbg !1739

if.end225:                                        ; preds = %if.then223, %if.end221
  %176 = load ptr, ptr %args, align 8, !dbg !1740, !tbaa !1228
  call void @process_line(ptr noundef %176), !dbg !1741
  %177 = load ptr, ptr %args, align 8, !dbg !1742, !tbaa !1228
  %ncmp226 = getelementptr inbounds %struct.args_t, ptr %177, i32 0, i32 31, !dbg !1743
  %178 = load i32, ptr %ncmp226, align 8, !dbg !1743, !tbaa !1737
  %cmp227 = icmp eq i32 %178, 1, !dbg !1744
  br i1 %cmp227, label %if.then229, label %if.end244, !dbg !1745

if.then229:                                       ; preds = %if.end225
  %call230 = call i32 @gettimeofday(ptr noundef %t1, ptr noundef null) #14, !dbg !1746
  call void @llvm.lifetime.start.p0(i64 8, ptr %delta) #14, !dbg !1747
  tail call void @llvm.dbg.declare(metadata ptr %delta, metadata !1204, metadata !DIExpression()), !dbg !1748
  %tv_sec = getelementptr inbounds %struct.timeval, ptr %t1, i32 0, i32 0, !dbg !1749
  %179 = load i64, ptr %tv_sec, align 8, !dbg !1749, !tbaa !1750
  %tv_sec231 = getelementptr inbounds %struct.timeval, ptr %t0, i32 0, i32 0, !dbg !1752
  %180 = load i64, ptr %tv_sec231, align 8, !dbg !1752, !tbaa !1750
  %sub = sub i64 %179, %180, !dbg !1753
  %conv232 = sitofp i64 %sub to double, !dbg !1754
  %tv_usec = getelementptr inbounds %struct.timeval, ptr %t1, i32 0, i32 1, !dbg !1755
  %181 = load i64, ptr %tv_usec, align 8, !dbg !1755, !tbaa !1756
  %tv_usec234 = getelementptr inbounds %struct.timeval, ptr %t0, i32 0, i32 1, !dbg !1757
  %182 = load i64, ptr %tv_usec234, align 8, !dbg !1757, !tbaa !1756
  %sub235 = sub i64 %181, %182, !dbg !1758
  %conv236 = sitofp i64 %sub235 to double, !dbg !1759
  %183 = call double @llvm.fmuladd.f64(double %conv232, double 1.000000e+06, double %conv236), !dbg !1760
  store double %183, ptr %delta, align 8, !dbg !1748, !tbaa !1761
  %184 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1762, !tbaa !1228
  %185 = load double, ptr %delta, align 8, !dbg !1763, !tbaa !1761
  %div = fdiv double %185, 1.000000e+06, !dbg !1764
  %call237 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %184, ptr noundef @.str.51, double noundef %div), !dbg !1765
  %186 = load ptr, ptr %args, align 8, !dbg !1766, !tbaa !1228
  %fp = getelementptr inbounds %struct.args_t, ptr %186, i32 0, i32 53, !dbg !1767
  %187 = load ptr, ptr %fp, align 8, !dbg !1767, !tbaa !1768
  %188 = load double, ptr %delta, align 8, !dbg !1769, !tbaa !1761
  %div238 = fdiv double %188, 1.000000e+06, !dbg !1770
  %call239 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %187, ptr noundef @.str.52, double noundef %div238), !dbg !1771
  %189 = load ptr, ptr %args, align 8, !dbg !1772, !tbaa !1228
  %dry_run240 = getelementptr inbounds %struct.args_t, ptr %189, i32 0, i32 51, !dbg !1774
  %190 = load i32, ptr %dry_run240, align 8, !dbg !1774, !tbaa !1435
  %tobool241 = icmp ne i32 %190, 0, !dbg !1772
  br i1 %tobool241, label %if.then242, label %if.end243, !dbg !1775

if.then242:                                       ; preds = %if.then229
  store i32 11, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1776

if.end243:                                        ; preds = %if.then229
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !1777
  br label %cleanup, !dbg !1777

cleanup:                                          ; preds = %if.end243, %if.then242
  call void @llvm.lifetime.end.p0(i64 8, ptr %delta) #14, !dbg !1777
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup245 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end244, !dbg !1778

if.end244:                                        ; preds = %cleanup.cont, %if.end225
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !1730
  br label %cleanup245, !dbg !1730

cleanup245:                                       ; preds = %if.end244, %cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr %t1) #14, !dbg !1730
  call void @llvm.lifetime.end.p0(i64 16, ptr %t0) #14, !dbg !1730
  %cleanup.dest247 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest247, label %unreachable [
    i32 0, label %cleanup.cont248
    i32 11, label %while.end249
  ]

cleanup.cont248:                                  ; preds = %cleanup245
  br label %while.cond214, !dbg !1717, !llvm.loop !1729

while.end249:                                     ; preds = %cleanup245, %while.cond214
  %191 = load ptr, ptr %args, align 8, !dbg !1779, !tbaa !1228
  %dry_run250 = getelementptr inbounds %struct.args_t, ptr %191, i32 0, i32 51, !dbg !1781
  %192 = load i32, ptr %dry_run250, align 8, !dbg !1781, !tbaa !1435
  %tobool251 = icmp ne i32 %192, 0, !dbg !1779
  br i1 %tobool251, label %if.end257, label %if.then252, !dbg !1782

if.then252:                                       ; preds = %while.end249
  %193 = load ptr, ptr %args, align 8, !dbg !1783, !tbaa !1228
  call void @report(ptr noundef %193), !dbg !1785
  %194 = load ptr, ptr %args, align 8, !dbg !1786, !tbaa !1228
  %distinctive_sites253 = getelementptr inbounds %struct.args_t, ptr %194, i32 0, i32 60, !dbg !1788
  %195 = load double, ptr %distinctive_sites253, align 8, !dbg !1788, !tbaa !1442
  %tobool254 = fcmp une double %195, 0.000000e+00, !dbg !1786
  br i1 %tobool254, label %if.then255, label %if.end256, !dbg !1789

if.then255:                                       ; preds = %if.then252
  %196 = load ptr, ptr %args, align 8, !dbg !1790, !tbaa !1228
  call void @report_distinctive_sites(ptr noundef %196), !dbg !1791
  br label %if.end256, !dbg !1791

if.end256:                                        ; preds = %if.then255, %if.then252
  br label %if.end257, !dbg !1792

if.end257:                                        ; preds = %if.end256, %while.end249
  %197 = load ptr, ptr %args, align 8, !dbg !1793, !tbaa !1228
  call void @destroy_data(ptr noundef %197), !dbg !1794
  %198 = load ptr, ptr %args, align 8, !dbg !1795, !tbaa !1228
  call void @free(ptr noundef %198) #14, !dbg !1796
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #14, !dbg !1797
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #14, !dbg !1797
  call void @llvm.lifetime.end.p0(i64 8, ptr %args) #14, !dbg !1797
  call void @llvm.lifetime.end.p0(i64 4, ptr %c) #14, !dbg !1797
  ret i32 0, !dbg !1798

unreachable:                                      ; preds = %cleanup245
  unreachable
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind allocsize(0,1)
declare !dbg !1799 noalias ptr @calloc(i64 noundef, i64 noundef) #2

; Function Attrs: nounwind uwtable
define internal void @set_cwd(ptr noundef %args) #0 !dbg !1803 {
entry:
  %args.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %buf = alloca ptr, align 8
  %nbuf = alloca i64, align 8
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !1807, metadata !DIExpression()), !dbg !1811
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #14, !dbg !1812
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !1808, metadata !DIExpression()), !dbg !1813
  call void @llvm.lifetime.start.p0(i64 8, ptr %buf) #14, !dbg !1814
  tail call void @llvm.dbg.declare(metadata ptr %buf, metadata !1809, metadata !DIExpression()), !dbg !1815
  call void @llvm.lifetime.start.p0(i64 8, ptr %nbuf) #14, !dbg !1816
  tail call void @llvm.dbg.declare(metadata ptr %nbuf, metadata !1810, metadata !DIExpression()), !dbg !1817
  store i64 500, ptr %nbuf, align 8, !dbg !1817, !tbaa !1818
  %0 = load i64, ptr %nbuf, align 8, !dbg !1819, !tbaa !1818
  %mul = mul i64 1, %0, !dbg !1820
  %call = call noalias ptr @malloc(i64 noundef %mul) #18, !dbg !1821
  %1 = load ptr, ptr %args.addr, align 8, !dbg !1822, !tbaa !1228
  %cwd = getelementptr inbounds %struct.args_t, ptr %1, i32 0, i32 3, !dbg !1823
  store ptr %call, ptr %cwd, align 8, !dbg !1824, !tbaa !1825
  store i32 0, ptr %i, align 4, !dbg !1826, !tbaa !1223
  br label %for.cond, !dbg !1828

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, ptr %i, align 4, !dbg !1829, !tbaa !1223
  %cmp = icmp slt i32 %2, 5, !dbg !1831
  br i1 %cmp, label %for.body, label %for.end, !dbg !1832

for.body:                                         ; preds = %for.cond
  %3 = load ptr, ptr %args.addr, align 8, !dbg !1833, !tbaa !1228
  %cwd1 = getelementptr inbounds %struct.args_t, ptr %3, i32 0, i32 3, !dbg !1836
  %4 = load ptr, ptr %cwd1, align 8, !dbg !1836, !tbaa !1825
  %5 = load i64, ptr %nbuf, align 8, !dbg !1837, !tbaa !1818
  %call2 = call ptr @getcwd(ptr noundef %4, i64 noundef %5) #14, !dbg !1838
  store ptr %call2, ptr %buf, align 8, !dbg !1839, !tbaa !1228
  %tobool = icmp ne ptr %call2, null, !dbg !1839
  br i1 %tobool, label %if.then, label %if.end, !dbg !1840

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !1841

if.end:                                           ; preds = %for.body
  %6 = load i64, ptr %nbuf, align 8, !dbg !1842, !tbaa !1818
  %mul3 = mul i64 %6, 2, !dbg !1842
  store i64 %mul3, ptr %nbuf, align 8, !dbg !1842, !tbaa !1818
  %7 = load ptr, ptr %args.addr, align 8, !dbg !1843, !tbaa !1228
  %cwd4 = getelementptr inbounds %struct.args_t, ptr %7, i32 0, i32 3, !dbg !1844
  %8 = load ptr, ptr %cwd4, align 8, !dbg !1844, !tbaa !1825
  %9 = load i64, ptr %nbuf, align 8, !dbg !1845, !tbaa !1818
  %mul5 = mul i64 1, %9, !dbg !1846
  %call6 = call ptr @realloc(ptr noundef %8, i64 noundef %mul5) #19, !dbg !1847
  %10 = load ptr, ptr %args.addr, align 8, !dbg !1848, !tbaa !1228
  %cwd7 = getelementptr inbounds %struct.args_t, ptr %10, i32 0, i32 3, !dbg !1849
  store ptr %call6, ptr %cwd7, align 8, !dbg !1850, !tbaa !1825
  br label %for.inc, !dbg !1851

for.inc:                                          ; preds = %if.end
  %11 = load i32, ptr %i, align 4, !dbg !1852, !tbaa !1223
  %inc = add i32 %11, 1, !dbg !1852
  store i32 %inc, ptr %i, align 4, !dbg !1852, !tbaa !1223
  br label %for.cond, !dbg !1853, !llvm.loop !1854

for.end:                                          ; preds = %if.then, %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %nbuf) #14, !dbg !1856
  call void @llvm.lifetime.end.p0(i64 8, ptr %buf) #14, !dbg !1856
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #14, !dbg !1856
  ret void, !dbg !1856
}

; Function Attrs: nounwind
declare !dbg !1857 noalias ptr @strdup(ptr noundef) #3

; Function Attrs: nounwind
declare !dbg !1861 i32 @getopt_long(i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) #3

; Function Attrs: nounwind
declare !dbg !1868 i64 @strtol(ptr noundef, ptr noundef, i32 noundef) #3

; Function Attrs: noreturn
declare !dbg !1873 void @error(ptr noundef, ...) #4

declare !dbg !1877 ptr @hts_readlist(ptr noundef, i32 noundef, ptr noundef) #5

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !1880 i32 @strcasecmp(ptr noundef, ptr noundef) #6

; Function Attrs: nounwind
declare !dbg !1884 void @free(ptr noundef) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind
declare !dbg !1887 double @strtod(ptr noundef, ptr noundef) #3

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !1890 i32 @strncasecmp(ptr noundef, ptr noundef, i64 noundef) #6

declare !dbg !1893 i32 @parse_overlap_option(ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal void @usage() #0 !dbg !1896 {
entry:
  %0 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1899, !tbaa !1228
  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %0, ptr noundef @.str.53), !dbg !1900
  %1 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1901, !tbaa !1228
  %call1 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef @.str.54), !dbg !1902
  %2 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1903, !tbaa !1228
  %call2 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %2, ptr noundef @.str.55), !dbg !1904
  %3 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1905, !tbaa !1228
  %call3 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %3, ptr noundef @.str.53), !dbg !1906
  %4 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1907, !tbaa !1228
  %call4 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %4, ptr noundef @.str.56), !dbg !1908
  %5 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1909, !tbaa !1228
  %call5 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %5, ptr noundef @.str.57), !dbg !1910
  %6 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1911, !tbaa !1228
  %call6 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %6, ptr noundef @.str.58), !dbg !1912
  %7 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1913, !tbaa !1228
  %call7 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %7, ptr noundef @.str.59), !dbg !1914
  %8 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1915, !tbaa !1228
  %call8 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef @.str.60), !dbg !1916
  %9 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1917, !tbaa !1228
  %call9 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %9, ptr noundef @.str.61), !dbg !1918
  %10 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1919, !tbaa !1228
  %call10 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %10, ptr noundef @.str.62), !dbg !1920
  %11 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1921, !tbaa !1228
  %call11 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %11, ptr noundef @.str.63), !dbg !1922
  %12 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1923, !tbaa !1228
  %call12 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %12, ptr noundef @.str.64), !dbg !1924
  %13 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1925, !tbaa !1228
  %call13 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %13, ptr noundef @.str.65), !dbg !1926
  %14 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1927, !tbaa !1228
  %call14 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %14, ptr noundef @.str.66), !dbg !1928
  %15 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1929, !tbaa !1228
  %call15 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %15, ptr noundef @.str.67), !dbg !1930
  %16 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1931, !tbaa !1228
  %call16 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %16, ptr noundef @.str.68), !dbg !1932
  %17 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1933, !tbaa !1228
  %call17 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %17, ptr noundef @.str.69), !dbg !1934
  %18 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1935, !tbaa !1228
  %call18 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %18, ptr noundef @.str.70), !dbg !1936
  %19 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1937, !tbaa !1228
  %call19 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %19, ptr noundef @.str.71), !dbg !1938
  %20 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1939, !tbaa !1228
  %call20 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %20, ptr noundef @.str.72), !dbg !1940
  %21 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1941, !tbaa !1228
  %call21 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %21, ptr noundef @.str.73), !dbg !1942
  %22 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1943, !tbaa !1228
  %call22 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %22, ptr noundef @.str.74), !dbg !1944
  %23 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1945, !tbaa !1228
  %call23 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %23, ptr noundef @.str.75), !dbg !1946
  %24 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1947, !tbaa !1228
  %call24 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %24, ptr noundef @.str.76), !dbg !1948
  %25 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1949, !tbaa !1228
  %call25 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %25, ptr noundef @.str.77), !dbg !1950
  %26 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1951, !tbaa !1228
  %call26 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %26, ptr noundef @.str.78), !dbg !1952
  %27 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1953, !tbaa !1228
  %call27 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %27, ptr noundef @.str.79), !dbg !1954
  %28 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1955, !tbaa !1228
  %call28 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %28, ptr noundef @.str.80), !dbg !1956
  %29 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1957, !tbaa !1228
  %call29 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %29, ptr noundef @.str.81), !dbg !1958
  %30 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1959, !tbaa !1228
  %call30 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %30, ptr noundef @.str.53), !dbg !1960
  %31 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1961, !tbaa !1228
  %call31 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %31, ptr noundef @.str.82), !dbg !1962
  %32 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1963, !tbaa !1228
  %call32 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %32, ptr noundef @.str.83), !dbg !1964
  %33 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1965, !tbaa !1228
  %call33 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %33, ptr noundef @.str.53), !dbg !1966
  %34 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1967, !tbaa !1228
  %call34 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %34, ptr noundef @.str.84), !dbg !1968
  %35 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1969, !tbaa !1228
  %call35 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %35, ptr noundef @.str.85), !dbg !1970
  %36 = load ptr, ptr @bcftools_stderr, align 8, !dbg !1971, !tbaa !1228
  %call36 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %36, ptr noundef @.str.53), !dbg !1972
  call void @bcftools_exit(i32 noundef 1) #16, !dbg !1973
  unreachable, !dbg !1973
}

; Function Attrs: nounwind
declare !dbg !1974 i32 @isatty(i32 noundef) #3

; Function Attrs: nounwind
declare !dbg !1978 i32 @fileno(ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal void @init_data(ptr noundef %args) #0 !dbg !1982 {
entry:
  %args.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %npairs = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !1984, metadata !DIExpression()), !dbg !1998
  call void @hts_srand48(i64 noundef 0), !dbg !1999
  %call = call ptr @bcf_sr_init(), !dbg !2000
  %0 = load ptr, ptr %args.addr, align 8, !dbg !2001, !tbaa !1228
  %files = getelementptr inbounds %struct.args_t, ptr %0, i32 0, i32 0, !dbg !2002
  store ptr %call, ptr %files, align 8, !dbg !2003, !tbaa !1720
  %1 = load ptr, ptr %args.addr, align 8, !dbg !2004, !tbaa !1228
  %regions = getelementptr inbounds %struct.args_t, ptr %1, i32 0, i32 7, !dbg !2006
  %2 = load ptr, ptr %regions, align 8, !dbg !2006, !tbaa !1583
  %tobool = icmp ne ptr %2, null, !dbg !2004
  br i1 %tobool, label %if.then, label %if.end8, !dbg !2007

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %args.addr, align 8, !dbg !2008, !tbaa !1228
  %files1 = getelementptr inbounds %struct.args_t, ptr %3, i32 0, i32 0, !dbg !2010
  %4 = load ptr, ptr %files1, align 8, !dbg !2010, !tbaa !1720
  %5 = load ptr, ptr %args.addr, align 8, !dbg !2011, !tbaa !1228
  %regions_overlap = getelementptr inbounds %struct.args_t, ptr %5, i32 0, i32 18, !dbg !2012
  %6 = load i32, ptr %regions_overlap, align 8, !dbg !2012, !tbaa !1270
  %call2 = call i32 (ptr, i32, ...) @bcf_sr_set_opt(ptr noundef %4, i32 noundef 3, i32 noundef %6), !dbg !2013
  %7 = load ptr, ptr %args.addr, align 8, !dbg !2014, !tbaa !1228
  %files3 = getelementptr inbounds %struct.args_t, ptr %7, i32 0, i32 0, !dbg !2016
  %8 = load ptr, ptr %files3, align 8, !dbg !2016, !tbaa !1720
  %9 = load ptr, ptr %args.addr, align 8, !dbg !2017, !tbaa !1228
  %regions4 = getelementptr inbounds %struct.args_t, ptr %9, i32 0, i32 7, !dbg !2018
  %10 = load ptr, ptr %regions4, align 8, !dbg !2018, !tbaa !1583
  %11 = load ptr, ptr %args.addr, align 8, !dbg !2019, !tbaa !1228
  %regions_is_file = getelementptr inbounds %struct.args_t, ptr %11, i32 0, i32 15, !dbg !2020
  %12 = load i32, ptr %regions_is_file, align 4, !dbg !2020, !tbaa !1592
  %call5 = call i32 @bcf_sr_set_regions(ptr noundef %8, ptr noundef %10, i32 noundef %12), !dbg !2021
  %cmp = icmp slt i32 %call5, 0, !dbg !2022
  br i1 %cmp, label %if.then6, label %if.end, !dbg !2023

if.then6:                                         ; preds = %if.then
  %13 = load ptr, ptr %args.addr, align 8, !dbg !2024, !tbaa !1228
  %regions7 = getelementptr inbounds %struct.args_t, ptr %13, i32 0, i32 7, !dbg !2025
  %14 = load ptr, ptr %regions7, align 8, !dbg !2025, !tbaa !1583
  call void (ptr, ...) @error(ptr noundef @.str.86, ptr noundef %14) #16, !dbg !2026
  unreachable, !dbg !2026

if.end:                                           ; preds = %if.then
  br label %if.end8, !dbg !2027

if.end8:                                          ; preds = %if.end, %entry
  %15 = load ptr, ptr %args.addr, align 8, !dbg !2028, !tbaa !1228
  %targets = getelementptr inbounds %struct.args_t, ptr %15, i32 0, i32 8, !dbg !2030
  %16 = load ptr, ptr %targets, align 8, !dbg !2030, !tbaa !1598
  %tobool9 = icmp ne ptr %16, null, !dbg !2028
  br i1 %tobool9, label %if.then10, label %if.end20, !dbg !2031

if.then10:                                        ; preds = %if.end8
  %17 = load ptr, ptr %args.addr, align 8, !dbg !2032, !tbaa !1228
  %files11 = getelementptr inbounds %struct.args_t, ptr %17, i32 0, i32 0, !dbg !2034
  %18 = load ptr, ptr %files11, align 8, !dbg !2034, !tbaa !1720
  %19 = load ptr, ptr %args.addr, align 8, !dbg !2035, !tbaa !1228
  %targets_overlap = getelementptr inbounds %struct.args_t, ptr %19, i32 0, i32 19, !dbg !2036
  %20 = load i32, ptr %targets_overlap, align 4, !dbg !2036, !tbaa !1274
  %call12 = call i32 (ptr, i32, ...) @bcf_sr_set_opt(ptr noundef %18, i32 noundef 4, i32 noundef %20), !dbg !2037
  %21 = load ptr, ptr %args.addr, align 8, !dbg !2038, !tbaa !1228
  %files13 = getelementptr inbounds %struct.args_t, ptr %21, i32 0, i32 0, !dbg !2040
  %22 = load ptr, ptr %files13, align 8, !dbg !2040, !tbaa !1720
  %23 = load ptr, ptr %args.addr, align 8, !dbg !2041, !tbaa !1228
  %targets14 = getelementptr inbounds %struct.args_t, ptr %23, i32 0, i32 8, !dbg !2042
  %24 = load ptr, ptr %targets14, align 8, !dbg !2042, !tbaa !1598
  %25 = load ptr, ptr %args.addr, align 8, !dbg !2043, !tbaa !1228
  %targets_is_file = getelementptr inbounds %struct.args_t, ptr %25, i32 0, i32 16, !dbg !2044
  %26 = load i32, ptr %targets_is_file, align 8, !dbg !2044, !tbaa !1607
  %call15 = call i32 @bcf_sr_set_targets(ptr noundef %22, ptr noundef %24, i32 noundef %26, i32 noundef 0), !dbg !2045
  %cmp16 = icmp slt i32 %call15, 0, !dbg !2046
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !2047

if.then17:                                        ; preds = %if.then10
  %27 = load ptr, ptr %args.addr, align 8, !dbg !2048, !tbaa !1228
  %targets18 = getelementptr inbounds %struct.args_t, ptr %27, i32 0, i32 8, !dbg !2049
  %28 = load ptr, ptr %targets18, align 8, !dbg !2049, !tbaa !1598
  call void (ptr, ...) @error(ptr noundef @.str.87, ptr noundef %28) #16, !dbg !2050
  unreachable, !dbg !2050

if.end19:                                         ; preds = %if.then10
  br label %if.end20, !dbg !2051

if.end20:                                         ; preds = %if.end19, %if.end8
  %29 = load ptr, ptr %args.addr, align 8, !dbg !2052, !tbaa !1228
  %gt_fname = getelementptr inbounds %struct.args_t, ptr %29, i32 0, i32 10, !dbg !2054
  %30 = load ptr, ptr %gt_fname, align 8, !dbg !2054, !tbaa !1508
  %tobool21 = icmp ne ptr %30, null, !dbg !2052
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !2055

if.then22:                                        ; preds = %if.end20
  %31 = load ptr, ptr %args.addr, align 8, !dbg !2056, !tbaa !1228
  %files23 = getelementptr inbounds %struct.args_t, ptr %31, i32 0, i32 0, !dbg !2057
  %32 = load ptr, ptr %files23, align 8, !dbg !2057, !tbaa !1720
  %call24 = call i32 (ptr, i32, ...) @bcf_sr_set_opt(ptr noundef %32, i32 noundef 0), !dbg !2058
  br label %if.end25, !dbg !2058

if.end25:                                         ; preds = %if.then22, %if.end20
  %33 = load ptr, ptr %args.addr, align 8, !dbg !2059, !tbaa !1228
  %files26 = getelementptr inbounds %struct.args_t, ptr %33, i32 0, i32 0, !dbg !2061
  %34 = load ptr, ptr %files26, align 8, !dbg !2061, !tbaa !1720
  %35 = load ptr, ptr %args.addr, align 8, !dbg !2062, !tbaa !1228
  %qry_fname = getelementptr inbounds %struct.args_t, ptr %35, i32 0, i32 9, !dbg !2063
  %36 = load ptr, ptr %qry_fname, align 8, !dbg !2063, !tbaa !1655
  %call27 = call i32 @bcf_sr_add_reader(ptr noundef %34, ptr noundef %36), !dbg !2064
  %tobool28 = icmp ne i32 %call27, 0, !dbg !2064
  br i1 %tobool28, label %if.end33, label %if.then29, !dbg !2065

if.then29:                                        ; preds = %if.end25
  %37 = load ptr, ptr %args.addr, align 8, !dbg !2066, !tbaa !1228
  %qry_fname30 = getelementptr inbounds %struct.args_t, ptr %37, i32 0, i32 9, !dbg !2067
  %38 = load ptr, ptr %qry_fname30, align 8, !dbg !2067, !tbaa !1655
  %39 = load ptr, ptr %args.addr, align 8, !dbg !2068, !tbaa !1228
  %files31 = getelementptr inbounds %struct.args_t, ptr %39, i32 0, i32 0, !dbg !2069
  %40 = load ptr, ptr %files31, align 8, !dbg !2069, !tbaa !1720
  %errnum = getelementptr inbounds %struct.bcf_srs_t, ptr %40, i32 0, i32 5, !dbg !2070
  %41 = load i32, ptr %errnum, align 8, !dbg !2070, !tbaa !2071
  %call32 = call ptr @bcf_sr_strerror(i32 noundef %41), !dbg !2074
  call void (ptr, ...) @error(ptr noundef @.str.88, ptr noundef %38, ptr noundef %call32) #16, !dbg !2075
  unreachable, !dbg !2075

if.end33:                                         ; preds = %if.end25
  %42 = load ptr, ptr %args.addr, align 8, !dbg !2076, !tbaa !1228
  %gt_fname34 = getelementptr inbounds %struct.args_t, ptr %42, i32 0, i32 10, !dbg !2078
  %43 = load ptr, ptr %gt_fname34, align 8, !dbg !2078, !tbaa !1508
  %tobool35 = icmp ne ptr %43, null, !dbg !2076
  br i1 %tobool35, label %land.lhs.true, label %if.end48, !dbg !2079

land.lhs.true:                                    ; preds = %if.end33
  %44 = load ptr, ptr %args.addr, align 8, !dbg !2080, !tbaa !1228
  %files36 = getelementptr inbounds %struct.args_t, ptr %44, i32 0, i32 0, !dbg !2081
  %45 = load ptr, ptr %files36, align 8, !dbg !2081, !tbaa !1720
  %46 = load ptr, ptr %args.addr, align 8, !dbg !2082, !tbaa !1228
  %gt_fname37 = getelementptr inbounds %struct.args_t, ptr %46, i32 0, i32 10, !dbg !2083
  %47 = load ptr, ptr %gt_fname37, align 8, !dbg !2083, !tbaa !1508
  %call38 = call i32 @bcf_sr_add_reader(ptr noundef %45, ptr noundef %47), !dbg !2084
  %tobool39 = icmp ne i32 %call38, 0, !dbg !2084
  br i1 %tobool39, label %if.end48, label %if.then40, !dbg !2085

if.then40:                                        ; preds = %land.lhs.true
  %48 = load ptr, ptr %args.addr, align 8, !dbg !2086, !tbaa !1228
  %gt_fname41 = getelementptr inbounds %struct.args_t, ptr %48, i32 0, i32 10, !dbg !2087
  %49 = load ptr, ptr %gt_fname41, align 8, !dbg !2087, !tbaa !1508
  %call42 = call i32 @strcmp(ptr noundef @.str.44, ptr noundef %49) #17, !dbg !2088
  %tobool43 = icmp ne i32 %call42, 0, !dbg !2088
  br i1 %tobool43, label %cond.false, label %cond.true, !dbg !2089

cond.true:                                        ; preds = %if.then40
  br label %cond.end, !dbg !2089

cond.false:                                       ; preds = %if.then40
  %50 = load ptr, ptr %args.addr, align 8, !dbg !2090, !tbaa !1228
  %gt_fname44 = getelementptr inbounds %struct.args_t, ptr %50, i32 0, i32 10, !dbg !2091
  %51 = load ptr, ptr %gt_fname44, align 8, !dbg !2091, !tbaa !1508
  br label %cond.end, !dbg !2089

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ @.str.90, %cond.true ], [ %51, %cond.false ], !dbg !2089
  %52 = load ptr, ptr %args.addr, align 8, !dbg !2092, !tbaa !1228
  %files45 = getelementptr inbounds %struct.args_t, ptr %52, i32 0, i32 0, !dbg !2093
  %53 = load ptr, ptr %files45, align 8, !dbg !2093, !tbaa !1720
  %errnum46 = getelementptr inbounds %struct.bcf_srs_t, ptr %53, i32 0, i32 5, !dbg !2094
  %54 = load i32, ptr %errnum46, align 8, !dbg !2094, !tbaa !2071
  %call47 = call ptr @bcf_sr_strerror(i32 noundef %54), !dbg !2095
  call void (ptr, ...) @error(ptr noundef @.str.89, ptr noundef %cond, ptr noundef %call47) #16, !dbg !2096
  unreachable, !dbg !2096

if.end48:                                         ; preds = %land.lhs.true, %if.end33
  %55 = load ptr, ptr %args.addr, align 8, !dbg !2097, !tbaa !1228
  %files49 = getelementptr inbounds %struct.args_t, ptr %55, i32 0, i32 0, !dbg !2097
  %56 = load ptr, ptr %files49, align 8, !dbg !2097, !tbaa !1720
  %readers = getelementptr inbounds %struct.bcf_srs_t, ptr %56, i32 0, i32 6, !dbg !2097
  %57 = load ptr, ptr %readers, align 8, !dbg !2097, !tbaa !2098
  %arrayidx = getelementptr %struct.bcf_sr_t, ptr %57, i64 0, !dbg !2097
  %header = getelementptr inbounds %struct.bcf_sr_t, ptr %arrayidx, i32 0, i32 3, !dbg !2097
  %58 = load ptr, ptr %header, align 8, !dbg !2097, !tbaa !2099
  %59 = load ptr, ptr %args.addr, align 8, !dbg !2101, !tbaa !1228
  %qry_hdr = getelementptr inbounds %struct.args_t, ptr %59, i32 0, i32 2, !dbg !2102
  store ptr %58, ptr %qry_hdr, align 8, !dbg !2103, !tbaa !2104
  %60 = load ptr, ptr %args.addr, align 8, !dbg !2105, !tbaa !1228
  %qry_hdr50 = getelementptr inbounds %struct.args_t, ptr %60, i32 0, i32 2, !dbg !2105
  %61 = load ptr, ptr %qry_hdr50, align 8, !dbg !2105, !tbaa !2104
  %n = getelementptr inbounds %struct.bcf_hdr_t, ptr %61, i32 0, i32 0, !dbg !2105
  %arrayidx51 = getelementptr [3 x i32], ptr %n, i64 0, i64 2, !dbg !2105
  %62 = load i32, ptr %arrayidx51, align 8, !dbg !2105, !tbaa !1223
  %tobool52 = icmp ne i32 %62, 0, !dbg !2105
  br i1 %tobool52, label %if.end55, label %if.then53, !dbg !2107

if.then53:                                        ; preds = %if.end48
  %63 = load ptr, ptr %args.addr, align 8, !dbg !2108, !tbaa !1228
  %qry_fname54 = getelementptr inbounds %struct.args_t, ptr %63, i32 0, i32 9, !dbg !2109
  %64 = load ptr, ptr %qry_fname54, align 8, !dbg !2109, !tbaa !1655
  call void (ptr, ...) @error(ptr noundef @.str.91, ptr noundef %64) #16, !dbg !2110
  unreachable, !dbg !2110

if.end55:                                         ; preds = %if.end48
  %65 = load ptr, ptr %args.addr, align 8, !dbg !2111, !tbaa !1228
  %gt_fname56 = getelementptr inbounds %struct.args_t, ptr %65, i32 0, i32 10, !dbg !2113
  %66 = load ptr, ptr %gt_fname56, align 8, !dbg !2113, !tbaa !1508
  %tobool57 = icmp ne ptr %66, null, !dbg !2111
  br i1 %tobool57, label %if.then58, label %if.end70, !dbg !2114

if.then58:                                        ; preds = %if.end55
  %67 = load ptr, ptr %args.addr, align 8, !dbg !2115, !tbaa !1228
  %files59 = getelementptr inbounds %struct.args_t, ptr %67, i32 0, i32 0, !dbg !2115
  %68 = load ptr, ptr %files59, align 8, !dbg !2115, !tbaa !1720
  %readers60 = getelementptr inbounds %struct.bcf_srs_t, ptr %68, i32 0, i32 6, !dbg !2115
  %69 = load ptr, ptr %readers60, align 8, !dbg !2115, !tbaa !2098
  %arrayidx61 = getelementptr %struct.bcf_sr_t, ptr %69, i64 1, !dbg !2115
  %header62 = getelementptr inbounds %struct.bcf_sr_t, ptr %arrayidx61, i32 0, i32 3, !dbg !2115
  %70 = load ptr, ptr %header62, align 8, !dbg !2115, !tbaa !2099
  %71 = load ptr, ptr %args.addr, align 8, !dbg !2117, !tbaa !1228
  %gt_hdr = getelementptr inbounds %struct.args_t, ptr %71, i32 0, i32 1, !dbg !2118
  store ptr %70, ptr %gt_hdr, align 8, !dbg !2119, !tbaa !2120
  %72 = load ptr, ptr %args.addr, align 8, !dbg !2121, !tbaa !1228
  %gt_hdr63 = getelementptr inbounds %struct.args_t, ptr %72, i32 0, i32 1, !dbg !2121
  %73 = load ptr, ptr %gt_hdr63, align 8, !dbg !2121, !tbaa !2120
  %n64 = getelementptr inbounds %struct.bcf_hdr_t, ptr %73, i32 0, i32 0, !dbg !2121
  %arrayidx65 = getelementptr [3 x i32], ptr %n64, i64 0, i64 2, !dbg !2121
  %74 = load i32, ptr %arrayidx65, align 8, !dbg !2121, !tbaa !1223
  %tobool66 = icmp ne i32 %74, 0, !dbg !2121
  br i1 %tobool66, label %if.end69, label %if.then67, !dbg !2123

if.then67:                                        ; preds = %if.then58
  %75 = load ptr, ptr %args.addr, align 8, !dbg !2124, !tbaa !1228
  %gt_fname68 = getelementptr inbounds %struct.args_t, ptr %75, i32 0, i32 10, !dbg !2125
  %76 = load ptr, ptr %gt_fname68, align 8, !dbg !2125, !tbaa !1508
  call void (ptr, ...) @error(ptr noundef @.str.91, ptr noundef %76) #16, !dbg !2126
  unreachable, !dbg !2126

if.end69:                                         ; preds = %if.then58
  br label %if.end70, !dbg !2127

if.end70:                                         ; preds = %if.end69, %if.end55
  %77 = load ptr, ptr %args.addr, align 8, !dbg !2128, !tbaa !1228
  %qry_use_GT = getelementptr inbounds %struct.args_t, ptr %77, i32 0, i32 20, !dbg !2130
  %78 = load i32, ptr %qry_use_GT, align 8, !dbg !2130, !tbaa !1254
  %cmp71 = icmp eq i32 %78, -1, !dbg !2131
  br i1 %cmp71, label %if.then72, label %if.else87, !dbg !2132

if.then72:                                        ; preds = %if.end70
  %79 = load ptr, ptr %args.addr, align 8, !dbg !2133, !tbaa !1228
  %qry_hdr73 = getelementptr inbounds %struct.args_t, ptr %79, i32 0, i32 2, !dbg !2136
  %80 = load ptr, ptr %qry_hdr73, align 8, !dbg !2136, !tbaa !2104
  %call74 = call i32 @bcf_hdr_id2int(ptr noundef %80, i32 noundef 0, ptr noundef @.str.30), !dbg !2137
  %cmp75 = icmp sge i32 %call74, 0, !dbg !2138
  br i1 %cmp75, label %if.then76, label %if.else, !dbg !2139

if.then76:                                        ; preds = %if.then72
  %81 = load ptr, ptr %args.addr, align 8, !dbg !2140, !tbaa !1228
  %qry_use_GT77 = getelementptr inbounds %struct.args_t, ptr %81, i32 0, i32 20, !dbg !2141
  store i32 0, ptr %qry_use_GT77, align 8, !dbg !2142, !tbaa !1254
  br label %if.end86, !dbg !2140

if.else:                                          ; preds = %if.then72
  %82 = load ptr, ptr %args.addr, align 8, !dbg !2143, !tbaa !1228
  %qry_hdr78 = getelementptr inbounds %struct.args_t, ptr %82, i32 0, i32 2, !dbg !2145
  %83 = load ptr, ptr %qry_hdr78, align 8, !dbg !2145, !tbaa !2104
  %call79 = call i32 @bcf_hdr_id2int(ptr noundef %83, i32 noundef 0, ptr noundef @.str.29), !dbg !2146
  %cmp80 = icmp sge i32 %call79, 0, !dbg !2147
  br i1 %cmp80, label %if.then81, label %if.else83, !dbg !2148

if.then81:                                        ; preds = %if.else
  %84 = load ptr, ptr %args.addr, align 8, !dbg !2149, !tbaa !1228
  %qry_use_GT82 = getelementptr inbounds %struct.args_t, ptr %84, i32 0, i32 20, !dbg !2150
  store i32 1, ptr %qry_use_GT82, align 8, !dbg !2151, !tbaa !1254
  br label %if.end85, !dbg !2149

if.else83:                                        ; preds = %if.else
  %85 = load ptr, ptr %args.addr, align 8, !dbg !2152, !tbaa !1228
  %qry_fname84 = getelementptr inbounds %struct.args_t, ptr %85, i32 0, i32 9, !dbg !2153
  %86 = load ptr, ptr %qry_fname84, align 8, !dbg !2153, !tbaa !1655
  call void (ptr, ...) @error(ptr noundef @.str.92, ptr noundef @__func__.init_data, ptr noundef %86) #16, !dbg !2154
  unreachable, !dbg !2154

if.end85:                                         ; preds = %if.then81
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then76
  br label %if.end105, !dbg !2155

if.else87:                                        ; preds = %if.end70
  %87 = load ptr, ptr %args.addr, align 8, !dbg !2156, !tbaa !1228
  %qry_use_GT88 = getelementptr inbounds %struct.args_t, ptr %87, i32 0, i32 20, !dbg !2158
  %88 = load i32, ptr %qry_use_GT88, align 8, !dbg !2158, !tbaa !1254
  %cmp89 = icmp eq i32 %88, 1, !dbg !2159
  br i1 %cmp89, label %if.then90, label %if.else97, !dbg !2160

if.then90:                                        ; preds = %if.else87
  %89 = load ptr, ptr %args.addr, align 8, !dbg !2161, !tbaa !1228
  %qry_hdr91 = getelementptr inbounds %struct.args_t, ptr %89, i32 0, i32 2, !dbg !2164
  %90 = load ptr, ptr %qry_hdr91, align 8, !dbg !2164, !tbaa !2104
  %call92 = call i32 @bcf_hdr_id2int(ptr noundef %90, i32 noundef 0, ptr noundef @.str.29), !dbg !2165
  %cmp93 = icmp slt i32 %call92, 0, !dbg !2166
  br i1 %cmp93, label %if.then94, label %if.end96, !dbg !2167

if.then94:                                        ; preds = %if.then90
  %91 = load ptr, ptr %args.addr, align 8, !dbg !2168, !tbaa !1228
  %qry_fname95 = getelementptr inbounds %struct.args_t, ptr %91, i32 0, i32 9, !dbg !2169
  %92 = load ptr, ptr %qry_fname95, align 8, !dbg !2169, !tbaa !1655
  call void (ptr, ...) @error(ptr noundef @.str.93, ptr noundef @__func__.init_data, ptr noundef %92) #16, !dbg !2170
  unreachable, !dbg !2170

if.end96:                                         ; preds = %if.then90
  br label %if.end104, !dbg !2171

if.else97:                                        ; preds = %if.else87
  %93 = load ptr, ptr %args.addr, align 8, !dbg !2172, !tbaa !1228
  %qry_hdr98 = getelementptr inbounds %struct.args_t, ptr %93, i32 0, i32 2, !dbg !2174
  %94 = load ptr, ptr %qry_hdr98, align 8, !dbg !2174, !tbaa !2104
  %call99 = call i32 @bcf_hdr_id2int(ptr noundef %94, i32 noundef 0, ptr noundef @.str.30), !dbg !2175
  %cmp100 = icmp slt i32 %call99, 0, !dbg !2176
  br i1 %cmp100, label %if.then101, label %if.end103, !dbg !2177

if.then101:                                       ; preds = %if.else97
  %95 = load ptr, ptr %args.addr, align 8, !dbg !2178, !tbaa !1228
  %qry_fname102 = getelementptr inbounds %struct.args_t, ptr %95, i32 0, i32 9, !dbg !2179
  %96 = load ptr, ptr %qry_fname102, align 8, !dbg !2179, !tbaa !1655
  call void (ptr, ...) @error(ptr noundef @.str.94, ptr noundef @__func__.init_data, ptr noundef %96) #16, !dbg !2180
  unreachable, !dbg !2180

if.end103:                                        ; preds = %if.else97
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end96
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end86
  %97 = load ptr, ptr %args.addr, align 8, !dbg !2181, !tbaa !1228
  %gt_hdr106 = getelementptr inbounds %struct.args_t, ptr %97, i32 0, i32 1, !dbg !2183
  %98 = load ptr, ptr %gt_hdr106, align 8, !dbg !2183, !tbaa !2120
  %tobool107 = icmp ne ptr %98, null, !dbg !2181
  br i1 %tobool107, label %if.then108, label %if.else145, !dbg !2184

if.then108:                                       ; preds = %if.end105
  %99 = load ptr, ptr %args.addr, align 8, !dbg !2185, !tbaa !1228
  %gt_use_GT = getelementptr inbounds %struct.args_t, ptr %99, i32 0, i32 21, !dbg !2188
  %100 = load i32, ptr %gt_use_GT, align 4, !dbg !2188, !tbaa !1258
  %cmp109 = icmp eq i32 %100, -1, !dbg !2189
  br i1 %cmp109, label %if.then110, label %if.else126, !dbg !2190

if.then110:                                       ; preds = %if.then108
  %101 = load ptr, ptr %args.addr, align 8, !dbg !2191, !tbaa !1228
  %gt_hdr111 = getelementptr inbounds %struct.args_t, ptr %101, i32 0, i32 1, !dbg !2194
  %102 = load ptr, ptr %gt_hdr111, align 8, !dbg !2194, !tbaa !2120
  %call112 = call i32 @bcf_hdr_id2int(ptr noundef %102, i32 noundef 0, ptr noundef @.str.29), !dbg !2195
  %cmp113 = icmp sge i32 %call112, 0, !dbg !2196
  br i1 %cmp113, label %if.then114, label %if.else116, !dbg !2197

if.then114:                                       ; preds = %if.then110
  %103 = load ptr, ptr %args.addr, align 8, !dbg !2198, !tbaa !1228
  %gt_use_GT115 = getelementptr inbounds %struct.args_t, ptr %103, i32 0, i32 21, !dbg !2199
  store i32 1, ptr %gt_use_GT115, align 4, !dbg !2200, !tbaa !1258
  br label %if.end125, !dbg !2198

if.else116:                                       ; preds = %if.then110
  %104 = load ptr, ptr %args.addr, align 8, !dbg !2201, !tbaa !1228
  %gt_hdr117 = getelementptr inbounds %struct.args_t, ptr %104, i32 0, i32 1, !dbg !2203
  %105 = load ptr, ptr %gt_hdr117, align 8, !dbg !2203, !tbaa !2120
  %call118 = call i32 @bcf_hdr_id2int(ptr noundef %105, i32 noundef 0, ptr noundef @.str.30), !dbg !2204
  %cmp119 = icmp sge i32 %call118, 0, !dbg !2205
  br i1 %cmp119, label %if.then120, label %if.else122, !dbg !2206

if.then120:                                       ; preds = %if.else116
  %106 = load ptr, ptr %args.addr, align 8, !dbg !2207, !tbaa !1228
  %gt_use_GT121 = getelementptr inbounds %struct.args_t, ptr %106, i32 0, i32 21, !dbg !2208
  store i32 0, ptr %gt_use_GT121, align 4, !dbg !2209, !tbaa !1258
  br label %if.end124, !dbg !2207

if.else122:                                       ; preds = %if.else116
  %107 = load ptr, ptr %args.addr, align 8, !dbg !2210, !tbaa !1228
  %gt_fname123 = getelementptr inbounds %struct.args_t, ptr %107, i32 0, i32 10, !dbg !2211
  %108 = load ptr, ptr %gt_fname123, align 8, !dbg !2211, !tbaa !1508
  call void (ptr, ...) @error(ptr noundef @.str.92, ptr noundef @__func__.init_data, ptr noundef %108) #16, !dbg !2212
  unreachable, !dbg !2212

if.end124:                                        ; preds = %if.then120
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then114
  br label %if.end144, !dbg !2213

if.else126:                                       ; preds = %if.then108
  %109 = load ptr, ptr %args.addr, align 8, !dbg !2214, !tbaa !1228
  %gt_use_GT127 = getelementptr inbounds %struct.args_t, ptr %109, i32 0, i32 21, !dbg !2216
  %110 = load i32, ptr %gt_use_GT127, align 4, !dbg !2216, !tbaa !1258
  %cmp128 = icmp eq i32 %110, 1, !dbg !2217
  br i1 %cmp128, label %if.then129, label %if.else136, !dbg !2218

if.then129:                                       ; preds = %if.else126
  %111 = load ptr, ptr %args.addr, align 8, !dbg !2219, !tbaa !1228
  %gt_hdr130 = getelementptr inbounds %struct.args_t, ptr %111, i32 0, i32 1, !dbg !2222
  %112 = load ptr, ptr %gt_hdr130, align 8, !dbg !2222, !tbaa !2120
  %call131 = call i32 @bcf_hdr_id2int(ptr noundef %112, i32 noundef 0, ptr noundef @.str.29), !dbg !2223
  %cmp132 = icmp slt i32 %call131, 0, !dbg !2224
  br i1 %cmp132, label %if.then133, label %if.end135, !dbg !2225

if.then133:                                       ; preds = %if.then129
  %113 = load ptr, ptr %args.addr, align 8, !dbg !2226, !tbaa !1228
  %gt_fname134 = getelementptr inbounds %struct.args_t, ptr %113, i32 0, i32 10, !dbg !2227
  %114 = load ptr, ptr %gt_fname134, align 8, !dbg !2227, !tbaa !1508
  call void (ptr, ...) @error(ptr noundef @.str.93, ptr noundef @__func__.init_data, ptr noundef %114) #16, !dbg !2228
  unreachable, !dbg !2228

if.end135:                                        ; preds = %if.then129
  br label %if.end143, !dbg !2229

if.else136:                                       ; preds = %if.else126
  %115 = load ptr, ptr %args.addr, align 8, !dbg !2230, !tbaa !1228
  %gt_hdr137 = getelementptr inbounds %struct.args_t, ptr %115, i32 0, i32 1, !dbg !2232
  %116 = load ptr, ptr %gt_hdr137, align 8, !dbg !2232, !tbaa !2120
  %call138 = call i32 @bcf_hdr_id2int(ptr noundef %116, i32 noundef 0, ptr noundef @.str.30), !dbg !2233
  %cmp139 = icmp slt i32 %call138, 0, !dbg !2234
  br i1 %cmp139, label %if.then140, label %if.end142, !dbg !2235

if.then140:                                       ; preds = %if.else136
  %117 = load ptr, ptr %args.addr, align 8, !dbg !2236, !tbaa !1228
  %gt_fname141 = getelementptr inbounds %struct.args_t, ptr %117, i32 0, i32 10, !dbg !2237
  %118 = load ptr, ptr %gt_fname141, align 8, !dbg !2237, !tbaa !1508
  call void (ptr, ...) @error(ptr noundef @.str.94, ptr noundef @__func__.init_data, ptr noundef %118) #16, !dbg !2238
  unreachable, !dbg !2238

if.end142:                                        ; preds = %if.else136
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.end135
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.end125
  br label %if.end148, !dbg !2239

if.else145:                                       ; preds = %if.end105
  %119 = load ptr, ptr %args.addr, align 8, !dbg !2240, !tbaa !1228
  %qry_use_GT146 = getelementptr inbounds %struct.args_t, ptr %119, i32 0, i32 20, !dbg !2241
  %120 = load i32, ptr %qry_use_GT146, align 8, !dbg !2241, !tbaa !1254
  %121 = load ptr, ptr %args.addr, align 8, !dbg !2242, !tbaa !1228
  %gt_use_GT147 = getelementptr inbounds %struct.args_t, ptr %121, i32 0, i32 21, !dbg !2243
  store i32 %120, ptr %gt_use_GT147, align 4, !dbg !2244, !tbaa !1258
  br label %if.end148

if.end148:                                        ; preds = %if.else145, %if.end144
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #14, !dbg !2245
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !1985, metadata !DIExpression()), !dbg !2246
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #14, !dbg !2245
  tail call void @llvm.dbg.declare(metadata ptr %j, metadata !1986, metadata !DIExpression()), !dbg !2247
  %122 = load ptr, ptr %args.addr, align 8, !dbg !2248, !tbaa !1228
  %qry_hdr149 = getelementptr inbounds %struct.args_t, ptr %122, i32 0, i32 2, !dbg !2248
  %123 = load ptr, ptr %qry_hdr149, align 8, !dbg !2248, !tbaa !2104
  %n150 = getelementptr inbounds %struct.bcf_hdr_t, ptr %123, i32 0, i32 0, !dbg !2248
  %arrayidx151 = getelementptr [3 x i32], ptr %n150, i64 0, i64 2, !dbg !2248
  %124 = load i32, ptr %arrayidx151, align 8, !dbg !2248, !tbaa !1223
  %125 = load ptr, ptr %args.addr, align 8, !dbg !2249, !tbaa !1228
  %nqry_smpl = getelementptr inbounds %struct.args_t, ptr %125, i32 0, i32 22, !dbg !2250
  store i32 %124, ptr %nqry_smpl, align 8, !dbg !2251, !tbaa !2252
  %126 = load ptr, ptr %args.addr, align 8, !dbg !2253, !tbaa !1228
  %qry_samples = getelementptr inbounds %struct.args_t, ptr %126, i32 0, i32 6, !dbg !2255
  %127 = load ptr, ptr %qry_samples, align 8, !dbg !2255, !tbaa !1529
  %tobool152 = icmp ne ptr %127, null, !dbg !2253
  br i1 %tobool152, label %if.then153, label %if.end158, !dbg !2256

if.then153:                                       ; preds = %if.end148
  %128 = load ptr, ptr %args.addr, align 8, !dbg !2257, !tbaa !1228
  %qry_samples154 = getelementptr inbounds %struct.args_t, ptr %128, i32 0, i32 6, !dbg !2259
  %129 = load ptr, ptr %qry_samples154, align 8, !dbg !2259, !tbaa !1529
  %130 = load ptr, ptr %args.addr, align 8, !dbg !2260, !tbaa !1228
  %qry_samples_is_file = getelementptr inbounds %struct.args_t, ptr %130, i32 0, i32 14, !dbg !2261
  %131 = load i32, ptr %qry_samples_is_file, align 8, !dbg !2261, !tbaa !1559
  %132 = load ptr, ptr %args.addr, align 8, !dbg !2262, !tbaa !1228
  %qry_smpl = getelementptr inbounds %struct.args_t, ptr %132, i32 0, i32 24, !dbg !2263
  %133 = load ptr, ptr %args.addr, align 8, !dbg !2264, !tbaa !1228
  %nqry_smpl155 = getelementptr inbounds %struct.args_t, ptr %133, i32 0, i32 22, !dbg !2265
  %134 = load ptr, ptr %args.addr, align 8, !dbg !2266, !tbaa !1228
  %qry_hdr156 = getelementptr inbounds %struct.args_t, ptr %134, i32 0, i32 2, !dbg !2267
  %135 = load ptr, ptr %qry_hdr156, align 8, !dbg !2267, !tbaa !2104
  %136 = load ptr, ptr %args.addr, align 8, !dbg !2268, !tbaa !1228
  %qry_fname157 = getelementptr inbounds %struct.args_t, ptr %136, i32 0, i32 9, !dbg !2269
  %137 = load ptr, ptr %qry_fname157, align 8, !dbg !2269, !tbaa !1655
  call void @init_samples(ptr noundef %129, i32 noundef %131, ptr noundef %qry_smpl, ptr noundef %nqry_smpl155, ptr noundef %135, ptr noundef %137), !dbg !2270
  br label %if.end158, !dbg !2271

if.end158:                                        ; preds = %if.then153, %if.end148
  %138 = load ptr, ptr %args.addr, align 8, !dbg !2272, !tbaa !1228
  %gt_samples = getelementptr inbounds %struct.args_t, ptr %138, i32 0, i32 5, !dbg !2273
  %139 = load ptr, ptr %gt_samples, align 8, !dbg !2273, !tbaa !1519
  %tobool159 = icmp ne ptr %139, null, !dbg !2272
  br i1 %tobool159, label %if.then160, label %if.else178, !dbg !2274

if.then160:                                       ; preds = %if.end158
  %140 = load ptr, ptr %args.addr, align 8, !dbg !2275, !tbaa !1228
  %gt_samples161 = getelementptr inbounds %struct.args_t, ptr %140, i32 0, i32 5, !dbg !2277
  %141 = load ptr, ptr %gt_samples161, align 8, !dbg !2277, !tbaa !1519
  %142 = load ptr, ptr %args.addr, align 8, !dbg !2278, !tbaa !1228
  %gt_samples_is_file = getelementptr inbounds %struct.args_t, ptr %142, i32 0, i32 13, !dbg !2279
  %143 = load i32, ptr %gt_samples_is_file, align 4, !dbg !2279, !tbaa !1546
  %144 = load ptr, ptr %args.addr, align 8, !dbg !2280, !tbaa !1228
  %gt_smpl = getelementptr inbounds %struct.args_t, ptr %144, i32 0, i32 25, !dbg !2281
  %145 = load ptr, ptr %args.addr, align 8, !dbg !2282, !tbaa !1228
  %ngt_smpl = getelementptr inbounds %struct.args_t, ptr %145, i32 0, i32 23, !dbg !2283
  %146 = load ptr, ptr %args.addr, align 8, !dbg !2284, !tbaa !1228
  %gt_hdr162 = getelementptr inbounds %struct.args_t, ptr %146, i32 0, i32 1, !dbg !2285
  %147 = load ptr, ptr %gt_hdr162, align 8, !dbg !2285, !tbaa !2120
  %tobool163 = icmp ne ptr %147, null, !dbg !2284
  br i1 %tobool163, label %cond.true164, label %cond.false166, !dbg !2284

cond.true164:                                     ; preds = %if.then160
  %148 = load ptr, ptr %args.addr, align 8, !dbg !2286, !tbaa !1228
  %gt_hdr165 = getelementptr inbounds %struct.args_t, ptr %148, i32 0, i32 1, !dbg !2287
  %149 = load ptr, ptr %gt_hdr165, align 8, !dbg !2287, !tbaa !2120
  br label %cond.end168, !dbg !2284

cond.false166:                                    ; preds = %if.then160
  %150 = load ptr, ptr %args.addr, align 8, !dbg !2288, !tbaa !1228
  %qry_hdr167 = getelementptr inbounds %struct.args_t, ptr %150, i32 0, i32 2, !dbg !2289
  %151 = load ptr, ptr %qry_hdr167, align 8, !dbg !2289, !tbaa !2104
  br label %cond.end168, !dbg !2284

cond.end168:                                      ; preds = %cond.false166, %cond.true164
  %cond169 = phi ptr [ %149, %cond.true164 ], [ %151, %cond.false166 ], !dbg !2284
  %152 = load ptr, ptr %args.addr, align 8, !dbg !2290, !tbaa !1228
  %gt_fname170 = getelementptr inbounds %struct.args_t, ptr %152, i32 0, i32 10, !dbg !2291
  %153 = load ptr, ptr %gt_fname170, align 8, !dbg !2291, !tbaa !1508
  %tobool171 = icmp ne ptr %153, null, !dbg !2290
  br i1 %tobool171, label %cond.true172, label %cond.false174, !dbg !2290

cond.true172:                                     ; preds = %cond.end168
  %154 = load ptr, ptr %args.addr, align 8, !dbg !2292, !tbaa !1228
  %gt_fname173 = getelementptr inbounds %struct.args_t, ptr %154, i32 0, i32 10, !dbg !2293
  %155 = load ptr, ptr %gt_fname173, align 8, !dbg !2293, !tbaa !1508
  br label %cond.end176, !dbg !2290

cond.false174:                                    ; preds = %cond.end168
  %156 = load ptr, ptr %args.addr, align 8, !dbg !2294, !tbaa !1228
  %qry_fname175 = getelementptr inbounds %struct.args_t, ptr %156, i32 0, i32 9, !dbg !2295
  %157 = load ptr, ptr %qry_fname175, align 8, !dbg !2295, !tbaa !1655
  br label %cond.end176, !dbg !2290

cond.end176:                                      ; preds = %cond.false174, %cond.true172
  %cond177 = phi ptr [ %155, %cond.true172 ], [ %157, %cond.false174 ], !dbg !2290
  call void @init_samples(ptr noundef %141, i32 noundef %143, ptr noundef %gt_smpl, ptr noundef %ngt_smpl, ptr noundef %cond169, ptr noundef %cond177), !dbg !2296
  br label %if.end374, !dbg !2297

if.else178:                                       ; preds = %if.end158
  %158 = load ptr, ptr %args.addr, align 8, !dbg !2298, !tbaa !1228
  %pair_samples = getelementptr inbounds %struct.args_t, ptr %158, i32 0, i32 11, !dbg !2299
  %159 = load ptr, ptr %pair_samples, align 8, !dbg !2299, !tbaa !1568
  %tobool179 = icmp ne ptr %159, null, !dbg !2298
  br i1 %tobool179, label %if.then180, label %if.else364, !dbg !2300

if.then180:                                       ; preds = %if.else178
  call void @llvm.lifetime.start.p0(i64 4, ptr %npairs) #14, !dbg !2301
  tail call void @llvm.dbg.declare(metadata ptr %npairs, metadata !1987, metadata !DIExpression()), !dbg !2302
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #14, !dbg !2303
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !1991, metadata !DIExpression()), !dbg !2304
  %160 = load ptr, ptr %args.addr, align 8, !dbg !2305, !tbaa !1228
  %pair_samples181 = getelementptr inbounds %struct.args_t, ptr %160, i32 0, i32 11, !dbg !2306
  %161 = load ptr, ptr %pair_samples181, align 8, !dbg !2306, !tbaa !1568
  %162 = load ptr, ptr %args.addr, align 8, !dbg !2307, !tbaa !1228
  %pair_samples_is_file = getelementptr inbounds %struct.args_t, ptr %162, i32 0, i32 17, !dbg !2308
  %163 = load i32, ptr %pair_samples_is_file, align 4, !dbg !2308, !tbaa !1577
  %call182 = call ptr @hts_readlist(ptr noundef %161, i32 noundef %163, ptr noundef %npairs), !dbg !2309
  store ptr %call182, ptr %tmp, align 8, !dbg !2304, !tbaa !1228
  %164 = load ptr, ptr %tmp, align 8, !dbg !2310, !tbaa !1228
  %tobool183 = icmp ne ptr %164, null, !dbg !2310
  br i1 %tobool183, label %lor.lhs.false, label %if.then185, !dbg !2312

lor.lhs.false:                                    ; preds = %if.then180
  %165 = load i32, ptr %npairs, align 4, !dbg !2313, !tbaa !1223
  %tobool184 = icmp ne i32 %165, 0, !dbg !2313
  br i1 %tobool184, label %if.end187, label %if.then185, !dbg !2314

if.then185:                                       ; preds = %lor.lhs.false, %if.then180
  %166 = load ptr, ptr %args.addr, align 8, !dbg !2315, !tbaa !1228
  %pair_samples186 = getelementptr inbounds %struct.args_t, ptr %166, i32 0, i32 11, !dbg !2316
  %167 = load ptr, ptr %pair_samples186, align 8, !dbg !2316, !tbaa !1568
  call void (ptr, ...) @error(ptr noundef @.str.95, ptr noundef %167) #16, !dbg !2317
  unreachable, !dbg !2317

if.end187:                                        ; preds = %lor.lhs.false
  %168 = load ptr, ptr %args.addr, align 8, !dbg !2318, !tbaa !1228
  %pair_samples_is_file188 = getelementptr inbounds %struct.args_t, ptr %168, i32 0, i32 17, !dbg !2320
  %169 = load i32, ptr %pair_samples_is_file188, align 4, !dbg !2320, !tbaa !1577
  %tobool189 = icmp ne i32 %169, 0, !dbg !2318
  br i1 %tobool189, label %if.end193, label %land.lhs.true190, !dbg !2321

land.lhs.true190:                                 ; preds = %if.end187
  %170 = load i32, ptr %npairs, align 4, !dbg !2322, !tbaa !1223
  %rem = srem i32 %170, 2, !dbg !2323
  %tobool191 = icmp ne i32 %rem, 0, !dbg !2323
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !2324

if.then192:                                       ; preds = %land.lhs.true190
  call void (ptr, ...) @error(ptr noundef @.str.96) #16, !dbg !2325
  unreachable, !dbg !2325

if.end193:                                        ; preds = %land.lhs.true190, %if.end187
  %171 = load ptr, ptr %args.addr, align 8, !dbg !2326, !tbaa !1228
  %pair_samples_is_file194 = getelementptr inbounds %struct.args_t, ptr %171, i32 0, i32 17, !dbg !2327
  %172 = load i32, ptr %pair_samples_is_file194, align 4, !dbg !2327, !tbaa !1577
  %tobool195 = icmp ne i32 %172, 0, !dbg !2326
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !2326

cond.true196:                                     ; preds = %if.end193
  %173 = load i32, ptr %npairs, align 4, !dbg !2328, !tbaa !1223
  br label %cond.end198, !dbg !2326

cond.false197:                                    ; preds = %if.end193
  %174 = load i32, ptr %npairs, align 4, !dbg !2329, !tbaa !1223
  %div = sdiv i32 %174, 2, !dbg !2330
  br label %cond.end198, !dbg !2326

cond.end198:                                      ; preds = %cond.false197, %cond.true196
  %cond199 = phi i32 [ %173, %cond.true196 ], [ %div, %cond.false197 ], !dbg !2326
  %175 = load ptr, ptr %args.addr, align 8, !dbg !2331, !tbaa !1228
  %npairs200 = getelementptr inbounds %struct.args_t, ptr %175, i32 0, i32 32, !dbg !2332
  store i32 %cond199, ptr %npairs200, align 4, !dbg !2333, !tbaa !2334
  %176 = load ptr, ptr %args.addr, align 8, !dbg !2335, !tbaa !1228
  %npairs201 = getelementptr inbounds %struct.args_t, ptr %176, i32 0, i32 32, !dbg !2336
  %177 = load i32, ptr %npairs201, align 4, !dbg !2336, !tbaa !2334
  %conv = zext i32 %177 to i64, !dbg !2335
  %call202 = call noalias ptr @calloc(i64 noundef %conv, i64 noundef 8) #15, !dbg !2337
  %178 = load ptr, ptr %args.addr, align 8, !dbg !2338, !tbaa !1228
  %pairs = getelementptr inbounds %struct.args_t, ptr %178, i32 0, i32 39, !dbg !2339
  store ptr %call202, ptr %pairs, align 8, !dbg !2340, !tbaa !2341
  %179 = load ptr, ptr %args.addr, align 8, !dbg !2342, !tbaa !1228
  %pair_samples_is_file203 = getelementptr inbounds %struct.args_t, ptr %179, i32 0, i32 17, !dbg !2343
  %180 = load i32, ptr %pair_samples_is_file203, align 4, !dbg !2343, !tbaa !1577
  %tobool204 = icmp ne i32 %180, 0, !dbg !2342
  br i1 %tobool204, label %if.else269, label %if.then205, !dbg !2344

if.then205:                                       ; preds = %cond.end198
  store i32 0, ptr %i, align 4, !dbg !2345, !tbaa !1223
  br label %for.cond, !dbg !2348

for.cond:                                         ; preds = %for.inc, %if.then205
  %181 = load i32, ptr %i, align 4, !dbg !2349, !tbaa !1223
  %182 = load ptr, ptr %args.addr, align 8, !dbg !2351, !tbaa !1228
  %npairs206 = getelementptr inbounds %struct.args_t, ptr %182, i32 0, i32 32, !dbg !2352
  %183 = load i32, ptr %npairs206, align 4, !dbg !2352, !tbaa !2334
  %cmp207 = icmp ult i32 %181, %183, !dbg !2353
  br i1 %cmp207, label %for.body, label %for.end, !dbg !2354

for.body:                                         ; preds = %for.cond
  %184 = load ptr, ptr %args.addr, align 8, !dbg !2355, !tbaa !1228
  %qry_hdr209 = getelementptr inbounds %struct.args_t, ptr %184, i32 0, i32 2, !dbg !2357
  %185 = load ptr, ptr %qry_hdr209, align 8, !dbg !2357, !tbaa !2104
  %186 = load ptr, ptr %tmp, align 8, !dbg !2358, !tbaa !1228
  %187 = load i32, ptr %i, align 4, !dbg !2359, !tbaa !1223
  %mul = mul i32 2, %187, !dbg !2360
  %idxprom = sext i32 %mul to i64, !dbg !2358
  %arrayidx210 = getelementptr ptr, ptr %186, i64 %idxprom, !dbg !2358
  %188 = load ptr, ptr %arrayidx210, align 8, !dbg !2358, !tbaa !1228
  %call211 = call i32 @bcf_hdr_id2int(ptr noundef %185, i32 noundef 2, ptr noundef %188), !dbg !2361
  %189 = load ptr, ptr %args.addr, align 8, !dbg !2362, !tbaa !1228
  %pairs212 = getelementptr inbounds %struct.args_t, ptr %189, i32 0, i32 39, !dbg !2363
  %190 = load ptr, ptr %pairs212, align 8, !dbg !2363, !tbaa !2341
  %191 = load i32, ptr %i, align 4, !dbg !2364, !tbaa !1223
  %idxprom213 = sext i32 %191 to i64, !dbg !2362
  %arrayidx214 = getelementptr %struct.pair_t, ptr %190, i64 %idxprom213, !dbg !2362
  %iqry = getelementptr inbounds %struct.pair_t, ptr %arrayidx214, i32 0, i32 0, !dbg !2365
  store i32 %call211, ptr %iqry, align 4, !dbg !2366, !tbaa !2367
  %192 = load ptr, ptr %args.addr, align 8, !dbg !2369, !tbaa !1228
  %gt_hdr215 = getelementptr inbounds %struct.args_t, ptr %192, i32 0, i32 1, !dbg !2370
  %193 = load ptr, ptr %gt_hdr215, align 8, !dbg !2370, !tbaa !2120
  %tobool216 = icmp ne ptr %193, null, !dbg !2369
  br i1 %tobool216, label %cond.true217, label %cond.false219, !dbg !2369

cond.true217:                                     ; preds = %for.body
  %194 = load ptr, ptr %args.addr, align 8, !dbg !2371, !tbaa !1228
  %gt_hdr218 = getelementptr inbounds %struct.args_t, ptr %194, i32 0, i32 1, !dbg !2372
  %195 = load ptr, ptr %gt_hdr218, align 8, !dbg !2372, !tbaa !2120
  br label %cond.end221, !dbg !2369

cond.false219:                                    ; preds = %for.body
  %196 = load ptr, ptr %args.addr, align 8, !dbg !2373, !tbaa !1228
  %qry_hdr220 = getelementptr inbounds %struct.args_t, ptr %196, i32 0, i32 2, !dbg !2374
  %197 = load ptr, ptr %qry_hdr220, align 8, !dbg !2374, !tbaa !2104
  br label %cond.end221, !dbg !2369

cond.end221:                                      ; preds = %cond.false219, %cond.true217
  %cond222 = phi ptr [ %195, %cond.true217 ], [ %197, %cond.false219 ], !dbg !2369
  %198 = load ptr, ptr %tmp, align 8, !dbg !2375, !tbaa !1228
  %199 = load i32, ptr %i, align 4, !dbg !2376, !tbaa !1223
  %mul223 = mul i32 2, %199, !dbg !2377
  %add = add i32 %mul223, 1, !dbg !2378
  %idxprom224 = sext i32 %add to i64, !dbg !2375
  %arrayidx225 = getelementptr ptr, ptr %198, i64 %idxprom224, !dbg !2375
  %200 = load ptr, ptr %arrayidx225, align 8, !dbg !2375, !tbaa !1228
  %call226 = call i32 @bcf_hdr_id2int(ptr noundef %cond222, i32 noundef 2, ptr noundef %200), !dbg !2379
  %201 = load ptr, ptr %args.addr, align 8, !dbg !2380, !tbaa !1228
  %pairs227 = getelementptr inbounds %struct.args_t, ptr %201, i32 0, i32 39, !dbg !2381
  %202 = load ptr, ptr %pairs227, align 8, !dbg !2381, !tbaa !2341
  %203 = load i32, ptr %i, align 4, !dbg !2382, !tbaa !1223
  %idxprom228 = sext i32 %203 to i64, !dbg !2380
  %arrayidx229 = getelementptr %struct.pair_t, ptr %202, i64 %idxprom228, !dbg !2380
  %igt = getelementptr inbounds %struct.pair_t, ptr %arrayidx229, i32 0, i32 1, !dbg !2383
  store i32 %call226, ptr %igt, align 4, !dbg !2384, !tbaa !2385
  %204 = load ptr, ptr %args.addr, align 8, !dbg !2386, !tbaa !1228
  %pairs230 = getelementptr inbounds %struct.args_t, ptr %204, i32 0, i32 39, !dbg !2388
  %205 = load ptr, ptr %pairs230, align 8, !dbg !2388, !tbaa !2341
  %206 = load i32, ptr %i, align 4, !dbg !2389, !tbaa !1223
  %idxprom231 = sext i32 %206 to i64, !dbg !2386
  %arrayidx232 = getelementptr %struct.pair_t, ptr %205, i64 %idxprom231, !dbg !2386
  %iqry233 = getelementptr inbounds %struct.pair_t, ptr %arrayidx232, i32 0, i32 0, !dbg !2390
  %207 = load i32, ptr %iqry233, align 4, !dbg !2390, !tbaa !2367
  %cmp234 = icmp slt i32 %207, 0, !dbg !2391
  br i1 %cmp234, label %if.then236, label %if.end241, !dbg !2392

if.then236:                                       ; preds = %cond.end221
  %208 = load ptr, ptr %args.addr, align 8, !dbg !2393, !tbaa !1228
  %qry_fname237 = getelementptr inbounds %struct.args_t, ptr %208, i32 0, i32 9, !dbg !2394
  %209 = load ptr, ptr %qry_fname237, align 8, !dbg !2394, !tbaa !1655
  %210 = load ptr, ptr %tmp, align 8, !dbg !2395, !tbaa !1228
  %211 = load i32, ptr %i, align 4, !dbg !2396, !tbaa !1223
  %mul238 = mul i32 2, %211, !dbg !2397
  %idxprom239 = sext i32 %mul238 to i64, !dbg !2395
  %arrayidx240 = getelementptr ptr, ptr %210, i64 %idxprom239, !dbg !2395
  %212 = load ptr, ptr %arrayidx240, align 8, !dbg !2395, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.97, ptr noundef %209, ptr noundef %212) #16, !dbg !2398
  unreachable, !dbg !2398

if.end241:                                        ; preds = %cond.end221
  %213 = load ptr, ptr %args.addr, align 8, !dbg !2399, !tbaa !1228
  %pairs242 = getelementptr inbounds %struct.args_t, ptr %213, i32 0, i32 39, !dbg !2401
  %214 = load ptr, ptr %pairs242, align 8, !dbg !2401, !tbaa !2341
  %215 = load i32, ptr %i, align 4, !dbg !2402, !tbaa !1223
  %idxprom243 = sext i32 %215 to i64, !dbg !2399
  %arrayidx244 = getelementptr %struct.pair_t, ptr %214, i64 %idxprom243, !dbg !2399
  %igt245 = getelementptr inbounds %struct.pair_t, ptr %arrayidx244, i32 0, i32 1, !dbg !2403
  %216 = load i32, ptr %igt245, align 4, !dbg !2403, !tbaa !2385
  %cmp246 = icmp slt i32 %216, 0, !dbg !2404
  br i1 %cmp246, label %if.then248, label %if.end261, !dbg !2405

if.then248:                                       ; preds = %if.end241
  %217 = load ptr, ptr %args.addr, align 8, !dbg !2406, !tbaa !1228
  %gt_fname249 = getelementptr inbounds %struct.args_t, ptr %217, i32 0, i32 10, !dbg !2407
  %218 = load ptr, ptr %gt_fname249, align 8, !dbg !2407, !tbaa !1508
  %tobool250 = icmp ne ptr %218, null, !dbg !2406
  br i1 %tobool250, label %cond.true251, label %cond.false253, !dbg !2406

cond.true251:                                     ; preds = %if.then248
  %219 = load ptr, ptr %args.addr, align 8, !dbg !2408, !tbaa !1228
  %gt_fname252 = getelementptr inbounds %struct.args_t, ptr %219, i32 0, i32 10, !dbg !2409
  %220 = load ptr, ptr %gt_fname252, align 8, !dbg !2409, !tbaa !1508
  br label %cond.end255, !dbg !2406

cond.false253:                                    ; preds = %if.then248
  %221 = load ptr, ptr %args.addr, align 8, !dbg !2410, !tbaa !1228
  %qry_fname254 = getelementptr inbounds %struct.args_t, ptr %221, i32 0, i32 9, !dbg !2411
  %222 = load ptr, ptr %qry_fname254, align 8, !dbg !2411, !tbaa !1655
  br label %cond.end255, !dbg !2406

cond.end255:                                      ; preds = %cond.false253, %cond.true251
  %cond256 = phi ptr [ %220, %cond.true251 ], [ %222, %cond.false253 ], !dbg !2406
  %223 = load ptr, ptr %tmp, align 8, !dbg !2412, !tbaa !1228
  %224 = load i32, ptr %i, align 4, !dbg !2413, !tbaa !1223
  %mul257 = mul i32 2, %224, !dbg !2414
  %add258 = add i32 %mul257, 1, !dbg !2415
  %idxprom259 = sext i32 %add258 to i64, !dbg !2412
  %arrayidx260 = getelementptr ptr, ptr %223, i64 %idxprom259, !dbg !2412
  %225 = load ptr, ptr %arrayidx260, align 8, !dbg !2412, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.97, ptr noundef %cond256, ptr noundef %225) #16, !dbg !2416
  unreachable, !dbg !2416

if.end261:                                        ; preds = %if.end241
  %226 = load ptr, ptr %tmp, align 8, !dbg !2417, !tbaa !1228
  %227 = load i32, ptr %i, align 4, !dbg !2418, !tbaa !1223
  %mul262 = mul i32 2, %227, !dbg !2419
  %idxprom263 = sext i32 %mul262 to i64, !dbg !2417
  %arrayidx264 = getelementptr ptr, ptr %226, i64 %idxprom263, !dbg !2417
  %228 = load ptr, ptr %arrayidx264, align 8, !dbg !2417, !tbaa !1228
  call void @free(ptr noundef %228) #14, !dbg !2420
  %229 = load ptr, ptr %tmp, align 8, !dbg !2421, !tbaa !1228
  %230 = load i32, ptr %i, align 4, !dbg !2422, !tbaa !1223
  %mul265 = mul i32 2, %230, !dbg !2423
  %add266 = add i32 %mul265, 1, !dbg !2424
  %idxprom267 = sext i32 %add266 to i64, !dbg !2421
  %arrayidx268 = getelementptr ptr, ptr %229, i64 %idxprom267, !dbg !2421
  %231 = load ptr, ptr %arrayidx268, align 8, !dbg !2421, !tbaa !1228
  call void @free(ptr noundef %231) #14, !dbg !2425
  br label %for.inc, !dbg !2426

for.inc:                                          ; preds = %if.end261
  %232 = load i32, ptr %i, align 4, !dbg !2427, !tbaa !1223
  %inc = add i32 %232, 1, !dbg !2427
  store i32 %inc, ptr %i, align 4, !dbg !2427, !tbaa !1223
  br label %for.cond, !dbg !2428, !llvm.loop !2429

for.end:                                          ; preds = %for.cond
  br label %if.end360, !dbg !2431

if.else269:                                       ; preds = %cond.end198
  store i32 0, ptr %i, align 4, !dbg !2432, !tbaa !1223
  br label %for.cond270, !dbg !2433

for.cond270:                                      ; preds = %for.inc357, %if.else269
  %233 = load i32, ptr %i, align 4, !dbg !2434, !tbaa !1223
  %234 = load ptr, ptr %args.addr, align 8, !dbg !2435, !tbaa !1228
  %npairs271 = getelementptr inbounds %struct.args_t, ptr %234, i32 0, i32 32, !dbg !2436
  %235 = load i32, ptr %npairs271, align 4, !dbg !2436, !tbaa !2334
  %cmp272 = icmp ult i32 %233, %235, !dbg !2437
  br i1 %cmp272, label %for.body274, label %for.end359, !dbg !2438

for.body274:                                      ; preds = %for.cond270
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #14, !dbg !2439
  tail call void @llvm.dbg.declare(metadata ptr %ptr, metadata !1992, metadata !DIExpression()), !dbg !2440
  %236 = load ptr, ptr %tmp, align 8, !dbg !2441, !tbaa !1228
  %237 = load i32, ptr %i, align 4, !dbg !2442, !tbaa !1223
  %idxprom275 = sext i32 %237 to i64, !dbg !2441
  %arrayidx276 = getelementptr ptr, ptr %236, i64 %idxprom275, !dbg !2441
  %238 = load ptr, ptr %arrayidx276, align 8, !dbg !2441, !tbaa !1228
  store ptr %238, ptr %ptr, align 8, !dbg !2440, !tbaa !1228
  br label %while.cond, !dbg !2443

while.cond:                                       ; preds = %while.body, %for.body274
  %239 = load ptr, ptr %ptr, align 8, !dbg !2444, !tbaa !1228
  %240 = load i8, ptr %239, align 1, !dbg !2445, !tbaa !1312
  %conv277 = sext i8 %240 to i32, !dbg !2445
  %tobool278 = icmp ne i32 %conv277, 0, !dbg !2445
  br i1 %tobool278, label %land.rhs, label %land.end, !dbg !2446

land.rhs:                                         ; preds = %while.cond
  %call279 = call ptr @__ctype_b_loc() #20, !dbg !2447
  %241 = load ptr, ptr %call279, align 8, !dbg !2447, !tbaa !1228
  %242 = load ptr, ptr %ptr, align 8, !dbg !2447, !tbaa !1228
  %243 = load i8, ptr %242, align 1, !dbg !2447, !tbaa !1312
  %conv280 = sext i8 %243 to i32, !dbg !2447
  %idxprom281 = sext i32 %conv280 to i64, !dbg !2447
  %arrayidx282 = getelementptr i16, ptr %241, i64 %idxprom281, !dbg !2447
  %244 = load i16, ptr %arrayidx282, align 2, !dbg !2447, !tbaa !2448
  %conv283 = zext i16 %244 to i32, !dbg !2447
  %and = and i32 %conv283, 8192, !dbg !2447
  %tobool284 = icmp ne i32 %and, 0, !dbg !2450
  %lnot = xor i1 %tobool284, true, !dbg !2450
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %245 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !2451
  br i1 %245, label %while.body, label %while.end, !dbg !2443

while.body:                                       ; preds = %land.end
  %246 = load ptr, ptr %ptr, align 8, !dbg !2452, !tbaa !1228
  %incdec.ptr = getelementptr i8, ptr %246, i32 1, !dbg !2452
  store ptr %incdec.ptr, ptr %ptr, align 8, !dbg !2452, !tbaa !1228
  br label %while.cond, !dbg !2443, !llvm.loop !2453

while.end:                                        ; preds = %land.end
  %247 = load ptr, ptr %ptr, align 8, !dbg !2454, !tbaa !1228
  %248 = load i8, ptr %247, align 1, !dbg !2456, !tbaa !1312
  %tobool285 = icmp ne i8 %248, 0, !dbg !2456
  br i1 %tobool285, label %if.end290, label %if.then286, !dbg !2457

if.then286:                                       ; preds = %while.end
  %249 = load ptr, ptr %args.addr, align 8, !dbg !2458, !tbaa !1228
  %pair_samples287 = getelementptr inbounds %struct.args_t, ptr %249, i32 0, i32 11, !dbg !2459
  %250 = load ptr, ptr %pair_samples287, align 8, !dbg !2459, !tbaa !1568
  %251 = load ptr, ptr %tmp, align 8, !dbg !2460, !tbaa !1228
  %252 = load i32, ptr %i, align 4, !dbg !2461, !tbaa !1223
  %idxprom288 = sext i32 %252 to i64, !dbg !2460
  %arrayidx289 = getelementptr ptr, ptr %251, i64 %idxprom288, !dbg !2460
  %253 = load ptr, ptr %arrayidx289, align 8, !dbg !2460, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.98, ptr noundef %250, ptr noundef %253) #16, !dbg !2462
  unreachable, !dbg !2462

if.end290:                                        ; preds = %while.end
  %254 = load ptr, ptr %ptr, align 8, !dbg !2463, !tbaa !1228
  store i8 0, ptr %254, align 1, !dbg !2464, !tbaa !1312
  %255 = load ptr, ptr %args.addr, align 8, !dbg !2465, !tbaa !1228
  %qry_hdr291 = getelementptr inbounds %struct.args_t, ptr %255, i32 0, i32 2, !dbg !2466
  %256 = load ptr, ptr %qry_hdr291, align 8, !dbg !2466, !tbaa !2104
  %257 = load ptr, ptr %tmp, align 8, !dbg !2467, !tbaa !1228
  %258 = load i32, ptr %i, align 4, !dbg !2468, !tbaa !1223
  %idxprom292 = sext i32 %258 to i64, !dbg !2467
  %arrayidx293 = getelementptr ptr, ptr %257, i64 %idxprom292, !dbg !2467
  %259 = load ptr, ptr %arrayidx293, align 8, !dbg !2467, !tbaa !1228
  %call294 = call i32 @bcf_hdr_id2int(ptr noundef %256, i32 noundef 2, ptr noundef %259), !dbg !2469
  %260 = load ptr, ptr %args.addr, align 8, !dbg !2470, !tbaa !1228
  %pairs295 = getelementptr inbounds %struct.args_t, ptr %260, i32 0, i32 39, !dbg !2471
  %261 = load ptr, ptr %pairs295, align 8, !dbg !2471, !tbaa !2341
  %262 = load i32, ptr %i, align 4, !dbg !2472, !tbaa !1223
  %idxprom296 = sext i32 %262 to i64, !dbg !2470
  %arrayidx297 = getelementptr %struct.pair_t, ptr %261, i64 %idxprom296, !dbg !2470
  %iqry298 = getelementptr inbounds %struct.pair_t, ptr %arrayidx297, i32 0, i32 0, !dbg !2473
  store i32 %call294, ptr %iqry298, align 4, !dbg !2474, !tbaa !2367
  %263 = load ptr, ptr %args.addr, align 8, !dbg !2475, !tbaa !1228
  %pairs299 = getelementptr inbounds %struct.args_t, ptr %263, i32 0, i32 39, !dbg !2477
  %264 = load ptr, ptr %pairs299, align 8, !dbg !2477, !tbaa !2341
  %265 = load i32, ptr %i, align 4, !dbg !2478, !tbaa !1223
  %idxprom300 = sext i32 %265 to i64, !dbg !2475
  %arrayidx301 = getelementptr %struct.pair_t, ptr %264, i64 %idxprom300, !dbg !2475
  %iqry302 = getelementptr inbounds %struct.pair_t, ptr %arrayidx301, i32 0, i32 0, !dbg !2479
  %266 = load i32, ptr %iqry302, align 4, !dbg !2479, !tbaa !2367
  %cmp303 = icmp slt i32 %266, 0, !dbg !2480
  br i1 %cmp303, label %if.then305, label %if.end309, !dbg !2481

if.then305:                                       ; preds = %if.end290
  %267 = load ptr, ptr %args.addr, align 8, !dbg !2482, !tbaa !1228
  %qry_fname306 = getelementptr inbounds %struct.args_t, ptr %267, i32 0, i32 9, !dbg !2483
  %268 = load ptr, ptr %qry_fname306, align 8, !dbg !2483, !tbaa !1655
  %269 = load ptr, ptr %tmp, align 8, !dbg !2484, !tbaa !1228
  %270 = load i32, ptr %i, align 4, !dbg !2485, !tbaa !1223
  %idxprom307 = sext i32 %270 to i64, !dbg !2484
  %arrayidx308 = getelementptr ptr, ptr %269, i64 %idxprom307, !dbg !2484
  %271 = load ptr, ptr %arrayidx308, align 8, !dbg !2484, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.97, ptr noundef %268, ptr noundef %271) #16, !dbg !2486
  unreachable, !dbg !2486

if.end309:                                        ; preds = %if.end290
  %272 = load ptr, ptr %ptr, align 8, !dbg !2487, !tbaa !1228
  %incdec.ptr310 = getelementptr i8, ptr %272, i32 1, !dbg !2487
  store ptr %incdec.ptr310, ptr %ptr, align 8, !dbg !2487, !tbaa !1228
  br label %while.cond311, !dbg !2488

while.cond311:                                    ; preds = %while.body323, %if.end309
  %273 = load ptr, ptr %ptr, align 8, !dbg !2489, !tbaa !1228
  %274 = load i8, ptr %273, align 1, !dbg !2490, !tbaa !1312
  %conv312 = sext i8 %274 to i32, !dbg !2490
  %tobool313 = icmp ne i32 %conv312, 0, !dbg !2490
  br i1 %tobool313, label %land.rhs314, label %land.end322, !dbg !2491

land.rhs314:                                      ; preds = %while.cond311
  %call315 = call ptr @__ctype_b_loc() #20, !dbg !2492
  %275 = load ptr, ptr %call315, align 8, !dbg !2492, !tbaa !1228
  %276 = load ptr, ptr %ptr, align 8, !dbg !2492, !tbaa !1228
  %277 = load i8, ptr %276, align 1, !dbg !2492, !tbaa !1312
  %conv316 = sext i8 %277 to i32, !dbg !2492
  %idxprom317 = sext i32 %conv316 to i64, !dbg !2492
  %arrayidx318 = getelementptr i16, ptr %275, i64 %idxprom317, !dbg !2492
  %278 = load i16, ptr %arrayidx318, align 2, !dbg !2492, !tbaa !2448
  %conv319 = zext i16 %278 to i32, !dbg !2492
  %and320 = and i32 %conv319, 8192, !dbg !2492
  %tobool321 = icmp ne i32 %and320, 0, !dbg !2491
  br label %land.end322

land.end322:                                      ; preds = %land.rhs314, %while.cond311
  %279 = phi i1 [ false, %while.cond311 ], [ %tobool321, %land.rhs314 ], !dbg !2451
  br i1 %279, label %while.body323, label %while.end325, !dbg !2488

while.body323:                                    ; preds = %land.end322
  %280 = load ptr, ptr %ptr, align 8, !dbg !2493, !tbaa !1228
  %incdec.ptr324 = getelementptr i8, ptr %280, i32 1, !dbg !2493
  store ptr %incdec.ptr324, ptr %ptr, align 8, !dbg !2493, !tbaa !1228
  br label %while.cond311, !dbg !2488, !llvm.loop !2494

while.end325:                                     ; preds = %land.end322
  %281 = load ptr, ptr %args.addr, align 8, !dbg !2495, !tbaa !1228
  %gt_hdr326 = getelementptr inbounds %struct.args_t, ptr %281, i32 0, i32 1, !dbg !2496
  %282 = load ptr, ptr %gt_hdr326, align 8, !dbg !2496, !tbaa !2120
  %tobool327 = icmp ne ptr %282, null, !dbg !2495
  br i1 %tobool327, label %cond.true328, label %cond.false330, !dbg !2495

cond.true328:                                     ; preds = %while.end325
  %283 = load ptr, ptr %args.addr, align 8, !dbg !2497, !tbaa !1228
  %gt_hdr329 = getelementptr inbounds %struct.args_t, ptr %283, i32 0, i32 1, !dbg !2498
  %284 = load ptr, ptr %gt_hdr329, align 8, !dbg !2498, !tbaa !2120
  br label %cond.end332, !dbg !2495

cond.false330:                                    ; preds = %while.end325
  %285 = load ptr, ptr %args.addr, align 8, !dbg !2499, !tbaa !1228
  %qry_hdr331 = getelementptr inbounds %struct.args_t, ptr %285, i32 0, i32 2, !dbg !2500
  %286 = load ptr, ptr %qry_hdr331, align 8, !dbg !2500, !tbaa !2104
  br label %cond.end332, !dbg !2495

cond.end332:                                      ; preds = %cond.false330, %cond.true328
  %cond333 = phi ptr [ %284, %cond.true328 ], [ %286, %cond.false330 ], !dbg !2495
  %287 = load ptr, ptr %ptr, align 8, !dbg !2501, !tbaa !1228
  %call334 = call i32 @bcf_hdr_id2int(ptr noundef %cond333, i32 noundef 2, ptr noundef %287), !dbg !2502
  %288 = load ptr, ptr %args.addr, align 8, !dbg !2503, !tbaa !1228
  %pairs335 = getelementptr inbounds %struct.args_t, ptr %288, i32 0, i32 39, !dbg !2504
  %289 = load ptr, ptr %pairs335, align 8, !dbg !2504, !tbaa !2341
  %290 = load i32, ptr %i, align 4, !dbg !2505, !tbaa !1223
  %idxprom336 = sext i32 %290 to i64, !dbg !2503
  %arrayidx337 = getelementptr %struct.pair_t, ptr %289, i64 %idxprom336, !dbg !2503
  %igt338 = getelementptr inbounds %struct.pair_t, ptr %arrayidx337, i32 0, i32 1, !dbg !2506
  store i32 %call334, ptr %igt338, align 4, !dbg !2507, !tbaa !2385
  %291 = load ptr, ptr %args.addr, align 8, !dbg !2508, !tbaa !1228
  %pairs339 = getelementptr inbounds %struct.args_t, ptr %291, i32 0, i32 39, !dbg !2510
  %292 = load ptr, ptr %pairs339, align 8, !dbg !2510, !tbaa !2341
  %293 = load i32, ptr %i, align 4, !dbg !2511, !tbaa !1223
  %idxprom340 = sext i32 %293 to i64, !dbg !2508
  %arrayidx341 = getelementptr %struct.pair_t, ptr %292, i64 %idxprom340, !dbg !2508
  %igt342 = getelementptr inbounds %struct.pair_t, ptr %arrayidx341, i32 0, i32 1, !dbg !2512
  %294 = load i32, ptr %igt342, align 4, !dbg !2512, !tbaa !2385
  %cmp343 = icmp slt i32 %294, 0, !dbg !2513
  br i1 %cmp343, label %if.then345, label %if.end354, !dbg !2514

if.then345:                                       ; preds = %cond.end332
  %295 = load ptr, ptr %args.addr, align 8, !dbg !2515, !tbaa !1228
  %gt_fname346 = getelementptr inbounds %struct.args_t, ptr %295, i32 0, i32 10, !dbg !2516
  %296 = load ptr, ptr %gt_fname346, align 8, !dbg !2516, !tbaa !1508
  %tobool347 = icmp ne ptr %296, null, !dbg !2515
  br i1 %tobool347, label %cond.true348, label %cond.false350, !dbg !2515

cond.true348:                                     ; preds = %if.then345
  %297 = load ptr, ptr %args.addr, align 8, !dbg !2517, !tbaa !1228
  %gt_fname349 = getelementptr inbounds %struct.args_t, ptr %297, i32 0, i32 10, !dbg !2518
  %298 = load ptr, ptr %gt_fname349, align 8, !dbg !2518, !tbaa !1508
  br label %cond.end352, !dbg !2515

cond.false350:                                    ; preds = %if.then345
  %299 = load ptr, ptr %args.addr, align 8, !dbg !2519, !tbaa !1228
  %qry_fname351 = getelementptr inbounds %struct.args_t, ptr %299, i32 0, i32 9, !dbg !2520
  %300 = load ptr, ptr %qry_fname351, align 8, !dbg !2520, !tbaa !1655
  br label %cond.end352, !dbg !2515

cond.end352:                                      ; preds = %cond.false350, %cond.true348
  %cond353 = phi ptr [ %298, %cond.true348 ], [ %300, %cond.false350 ], !dbg !2515
  %301 = load ptr, ptr %ptr, align 8, !dbg !2521, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.97, ptr noundef %cond353, ptr noundef %301) #16, !dbg !2522
  unreachable, !dbg !2522

if.end354:                                        ; preds = %cond.end332
  %302 = load ptr, ptr %tmp, align 8, !dbg !2523, !tbaa !1228
  %303 = load i32, ptr %i, align 4, !dbg !2524, !tbaa !1223
  %idxprom355 = sext i32 %303 to i64, !dbg !2523
  %arrayidx356 = getelementptr ptr, ptr %302, i64 %idxprom355, !dbg !2523
  %304 = load ptr, ptr %arrayidx356, align 8, !dbg !2523, !tbaa !1228
  call void @free(ptr noundef %304) #14, !dbg !2525
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #14, !dbg !2526
  br label %for.inc357, !dbg !2527

for.inc357:                                       ; preds = %if.end354
  %305 = load i32, ptr %i, align 4, !dbg !2528, !tbaa !1223
  %inc358 = add i32 %305, 1, !dbg !2528
  store i32 %inc358, ptr %i, align 4, !dbg !2528, !tbaa !1223
  br label %for.cond270, !dbg !2529, !llvm.loop !2530

for.end359:                                       ; preds = %for.cond270
  br label %if.end360

if.end360:                                        ; preds = %for.end359, %for.end
  %306 = load ptr, ptr %tmp, align 8, !dbg !2532, !tbaa !1228
  call void @free(ptr noundef %306) #14, !dbg !2533
  %307 = load ptr, ptr %args.addr, align 8, !dbg !2534, !tbaa !1228
  %pairs361 = getelementptr inbounds %struct.args_t, ptr %307, i32 0, i32 39, !dbg !2535
  %308 = load ptr, ptr %pairs361, align 8, !dbg !2535, !tbaa !2341
  %309 = load ptr, ptr %args.addr, align 8, !dbg !2536, !tbaa !1228
  %npairs362 = getelementptr inbounds %struct.args_t, ptr %309, i32 0, i32 32, !dbg !2537
  %310 = load i32, ptr %npairs362, align 4, !dbg !2537, !tbaa !2334
  %conv363 = zext i32 %310 to i64, !dbg !2536
  call void @qsort(ptr noundef %308, i64 noundef %conv363, i64 noundef 8, ptr noundef @cmp_pair), !dbg !2538
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #14, !dbg !2539
  call void @llvm.lifetime.end.p0(i64 4, ptr %npairs) #14, !dbg !2539
  br label %if.end373, !dbg !2540

if.else364:                                       ; preds = %if.else178
  %311 = load ptr, ptr %args.addr, align 8, !dbg !2541, !tbaa !1228
  %gt_hdr365 = getelementptr inbounds %struct.args_t, ptr %311, i32 0, i32 1, !dbg !2543
  %312 = load ptr, ptr %gt_hdr365, align 8, !dbg !2543, !tbaa !2120
  %tobool366 = icmp ne ptr %312, null, !dbg !2541
  br i1 %tobool366, label %if.then367, label %if.end372, !dbg !2544

if.then367:                                       ; preds = %if.else364
  %313 = load ptr, ptr %args.addr, align 8, !dbg !2545, !tbaa !1228
  %gt_hdr368 = getelementptr inbounds %struct.args_t, ptr %313, i32 0, i32 1, !dbg !2545
  %314 = load ptr, ptr %gt_hdr368, align 8, !dbg !2545, !tbaa !2120
  %n369 = getelementptr inbounds %struct.bcf_hdr_t, ptr %314, i32 0, i32 0, !dbg !2545
  %arrayidx370 = getelementptr [3 x i32], ptr %n369, i64 0, i64 2, !dbg !2545
  %315 = load i32, ptr %arrayidx370, align 8, !dbg !2545, !tbaa !1223
  %316 = load ptr, ptr %args.addr, align 8, !dbg !2546, !tbaa !1228
  %ngt_smpl371 = getelementptr inbounds %struct.args_t, ptr %316, i32 0, i32 23, !dbg !2547
  store i32 %315, ptr %ngt_smpl371, align 4, !dbg !2548, !tbaa !2549
  br label %if.end372, !dbg !2546

if.end372:                                        ; preds = %if.then367, %if.else364
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %if.end360
  br label %if.end374

if.end374:                                        ; preds = %if.end373, %cond.end176
  %317 = load ptr, ptr %args.addr, align 8, !dbg !2550, !tbaa !1228
  %ngt_smpl375 = getelementptr inbounds %struct.args_t, ptr %317, i32 0, i32 23, !dbg !2552
  %318 = load i32, ptr %ngt_smpl375, align 4, !dbg !2552, !tbaa !2549
  %tobool376 = icmp ne i32 %318, 0, !dbg !2550
  br i1 %tobool376, label %if.end382, label %if.then377, !dbg !2553

if.then377:                                       ; preds = %if.end374
  %319 = load ptr, ptr %args.addr, align 8, !dbg !2554, !tbaa !1228
  %nqry_smpl378 = getelementptr inbounds %struct.args_t, ptr %319, i32 0, i32 22, !dbg !2556
  %320 = load i32, ptr %nqry_smpl378, align 8, !dbg !2556, !tbaa !2252
  %321 = load ptr, ptr %args.addr, align 8, !dbg !2557, !tbaa !1228
  %ngt_smpl379 = getelementptr inbounds %struct.args_t, ptr %321, i32 0, i32 23, !dbg !2558
  store i32 %320, ptr %ngt_smpl379, align 4, !dbg !2559, !tbaa !2549
  %322 = load ptr, ptr %args.addr, align 8, !dbg !2560, !tbaa !1228
  %qry_smpl380 = getelementptr inbounds %struct.args_t, ptr %322, i32 0, i32 24, !dbg !2561
  %323 = load ptr, ptr %qry_smpl380, align 8, !dbg !2561, !tbaa !2562
  %324 = load ptr, ptr %args.addr, align 8, !dbg !2563, !tbaa !1228
  %gt_smpl381 = getelementptr inbounds %struct.args_t, ptr %324, i32 0, i32 25, !dbg !2564
  store ptr %323, ptr %gt_smpl381, align 8, !dbg !2565, !tbaa !2566
  %325 = load ptr, ptr %args.addr, align 8, !dbg !2567, !tbaa !1228
  %cross_check = getelementptr inbounds %struct.args_t, ptr %325, i32 0, i32 48, !dbg !2568
  store i32 1, ptr %cross_check, align 4, !dbg !2569, !tbaa !2570
  br label %if.end382, !dbg !2571

if.end382:                                        ; preds = %if.then377, %if.end374
  %326 = load ptr, ptr %args.addr, align 8, !dbg !2572, !tbaa !1228
  %npairs383 = getelementptr inbounds %struct.args_t, ptr %326, i32 0, i32 32, !dbg !2574
  %327 = load i32, ptr %npairs383, align 4, !dbg !2574, !tbaa !2334
  %tobool384 = icmp ne i32 %327, 0, !dbg !2572
  br i1 %tobool384, label %if.end401, label %if.then385, !dbg !2575

if.then385:                                       ; preds = %if.end382
  %328 = load ptr, ptr %args.addr, align 8, !dbg !2576, !tbaa !1228
  %cross_check386 = getelementptr inbounds %struct.args_t, ptr %328, i32 0, i32 48, !dbg !2577
  %329 = load i32, ptr %cross_check386, align 4, !dbg !2577, !tbaa !2570
  %tobool387 = icmp ne i32 %329, 0, !dbg !2576
  br i1 %tobool387, label %cond.true388, label %cond.false394, !dbg !2576

cond.true388:                                     ; preds = %if.then385
  %330 = load ptr, ptr %args.addr, align 8, !dbg !2578, !tbaa !1228
  %nqry_smpl389 = getelementptr inbounds %struct.args_t, ptr %330, i32 0, i32 22, !dbg !2579
  %331 = load i32, ptr %nqry_smpl389, align 8, !dbg !2579, !tbaa !2252
  %332 = load ptr, ptr %args.addr, align 8, !dbg !2580, !tbaa !1228
  %nqry_smpl390 = getelementptr inbounds %struct.args_t, ptr %332, i32 0, i32 22, !dbg !2581
  %333 = load i32, ptr %nqry_smpl390, align 8, !dbg !2581, !tbaa !2252
  %add391 = add i32 %333, 1, !dbg !2582
  %mul392 = mul i32 %331, %add391, !dbg !2583
  %div393 = sdiv i32 %mul392, 2, !dbg !2584
  br label %cond.end398, !dbg !2576

cond.false394:                                    ; preds = %if.then385
  %334 = load ptr, ptr %args.addr, align 8, !dbg !2585, !tbaa !1228
  %ngt_smpl395 = getelementptr inbounds %struct.args_t, ptr %334, i32 0, i32 23, !dbg !2586
  %335 = load i32, ptr %ngt_smpl395, align 4, !dbg !2586, !tbaa !2549
  %336 = load ptr, ptr %args.addr, align 8, !dbg !2587, !tbaa !1228
  %nqry_smpl396 = getelementptr inbounds %struct.args_t, ptr %336, i32 0, i32 22, !dbg !2588
  %337 = load i32, ptr %nqry_smpl396, align 8, !dbg !2588, !tbaa !2252
  %mul397 = mul i32 %335, %337, !dbg !2589
  br label %cond.end398, !dbg !2576

cond.end398:                                      ; preds = %cond.false394, %cond.true388
  %cond399 = phi i32 [ %div393, %cond.true388 ], [ %mul397, %cond.false394 ], !dbg !2576
  %338 = load ptr, ptr %args.addr, align 8, !dbg !2590, !tbaa !1228
  %npairs400 = getelementptr inbounds %struct.args_t, ptr %338, i32 0, i32 32, !dbg !2591
  store i32 %cond399, ptr %npairs400, align 4, !dbg !2592, !tbaa !2334
  br label %if.end401, !dbg !2590

if.end401:                                        ; preds = %cond.end398, %if.end382
  %339 = load ptr, ptr %args.addr, align 8, !dbg !2593, !tbaa !1228
  %pair_samples402 = getelementptr inbounds %struct.args_t, ptr %339, i32 0, i32 11, !dbg !2595
  %340 = load ptr, ptr %pair_samples402, align 8, !dbg !2595, !tbaa !1568
  %tobool403 = icmp ne ptr %340, null, !dbg !2593
  br i1 %tobool403, label %if.end418, label %if.then404, !dbg !2596

if.then404:                                       ; preds = %if.end401
  %341 = load ptr, ptr %args.addr, align 8, !dbg !2597, !tbaa !1228
  %nqry_smpl405 = getelementptr inbounds %struct.args_t, ptr %341, i32 0, i32 22, !dbg !2599
  %342 = load i32, ptr %nqry_smpl405, align 8, !dbg !2599, !tbaa !2252
  %conv406 = sext i32 %342 to i64, !dbg !2597
  %call407 = call noalias ptr @malloc(i64 noundef %conv406) #18, !dbg !2600
  %343 = load ptr, ptr %args.addr, align 8, !dbg !2601, !tbaa !1228
  %qry_dsg = getelementptr inbounds %struct.args_t, ptr %343, i32 0, i32 37, !dbg !2602
  store ptr %call407, ptr %qry_dsg, align 8, !dbg !2603, !tbaa !2604
  %344 = load ptr, ptr %args.addr, align 8, !dbg !2605, !tbaa !1228
  %cross_check408 = getelementptr inbounds %struct.args_t, ptr %344, i32 0, i32 48, !dbg !2606
  %345 = load i32, ptr %cross_check408, align 4, !dbg !2606, !tbaa !2570
  %tobool409 = icmp ne i32 %345, 0, !dbg !2605
  br i1 %tobool409, label %cond.true410, label %cond.false412, !dbg !2605

cond.true410:                                     ; preds = %if.then404
  %346 = load ptr, ptr %args.addr, align 8, !dbg !2607, !tbaa !1228
  %qry_dsg411 = getelementptr inbounds %struct.args_t, ptr %346, i32 0, i32 37, !dbg !2608
  %347 = load ptr, ptr %qry_dsg411, align 8, !dbg !2608, !tbaa !2604
  br label %cond.end416, !dbg !2605

cond.false412:                                    ; preds = %if.then404
  %348 = load ptr, ptr %args.addr, align 8, !dbg !2609, !tbaa !1228
  %ngt_smpl413 = getelementptr inbounds %struct.args_t, ptr %348, i32 0, i32 23, !dbg !2610
  %349 = load i32, ptr %ngt_smpl413, align 4, !dbg !2610, !tbaa !2549
  %conv414 = sext i32 %349 to i64, !dbg !2609
  %call415 = call noalias ptr @malloc(i64 noundef %conv414) #18, !dbg !2611
  br label %cond.end416, !dbg !2605

cond.end416:                                      ; preds = %cond.false412, %cond.true410
  %cond417 = phi ptr [ %347, %cond.true410 ], [ %call415, %cond.false412 ], !dbg !2605
  %350 = load ptr, ptr %args.addr, align 8, !dbg !2612, !tbaa !1228
  %gt_dsg = getelementptr inbounds %struct.args_t, ptr %350, i32 0, i32 38, !dbg !2613
  store ptr %cond417, ptr %gt_dsg, align 8, !dbg !2614, !tbaa !2615
  br label %if.end418, !dbg !2616

if.end418:                                        ; preds = %cond.end416, %if.end401
  %351 = load ptr, ptr %args.addr, align 8, !dbg !2617, !tbaa !1228
  %use_PLs = getelementptr inbounds %struct.args_t, ptr %351, i32 0, i32 52, !dbg !2619
  %352 = load i32, ptr %use_PLs, align 4, !dbg !2619, !tbaa !1266
  %tobool419 = icmp ne i32 %352, 0, !dbg !2617
  br i1 %tobool419, label %if.then420, label %if.else559, !dbg !2620

if.then420:                                       ; preds = %if.end418
  %353 = load ptr, ptr %args.addr, align 8, !dbg !2621, !tbaa !1228
  %npairs421 = getelementptr inbounds %struct.args_t, ptr %353, i32 0, i32 32, !dbg !2623
  %354 = load i32, ptr %npairs421, align 4, !dbg !2623, !tbaa !2334
  %conv422 = zext i32 %354 to i64, !dbg !2621
  %call423 = call noalias ptr @calloc(i64 noundef %conv422, i64 noundef 8) #15, !dbg !2624
  %355 = load ptr, ptr %args.addr, align 8, !dbg !2625, !tbaa !1228
  %pdiff = getelementptr inbounds %struct.args_t, ptr %355, i32 0, i32 26, !dbg !2626
  store ptr %call423, ptr %pdiff, align 8, !dbg !2627, !tbaa !2628
  %356 = load ptr, ptr %args.addr, align 8, !dbg !2629, !tbaa !1228
  %nqry_smpl424 = getelementptr inbounds %struct.args_t, ptr %356, i32 0, i32 22, !dbg !2630
  %357 = load i32, ptr %nqry_smpl424, align 8, !dbg !2630, !tbaa !2252
  %mul425 = mul i32 3, %357, !dbg !2631
  %conv426 = sext i32 %mul425 to i64, !dbg !2632
  %mul427 = mul i64 %conv426, 8, !dbg !2633
  %call428 = call noalias ptr @malloc(i64 noundef %mul427) #18, !dbg !2634
  %358 = load ptr, ptr %args.addr, align 8, !dbg !2635, !tbaa !1228
  %qry_prob = getelementptr inbounds %struct.args_t, ptr %358, i32 0, i32 27, !dbg !2636
  store ptr %call428, ptr %qry_prob, align 8, !dbg !2637, !tbaa !2638
  %359 = load ptr, ptr %args.addr, align 8, !dbg !2639, !tbaa !1228
  %cross_check429 = getelementptr inbounds %struct.args_t, ptr %359, i32 0, i32 48, !dbg !2640
  %360 = load i32, ptr %cross_check429, align 4, !dbg !2640, !tbaa !2570
  %tobool430 = icmp ne i32 %360, 0, !dbg !2639
  br i1 %tobool430, label %cond.true431, label %cond.false433, !dbg !2639

cond.true431:                                     ; preds = %if.then420
  %361 = load ptr, ptr %args.addr, align 8, !dbg !2641, !tbaa !1228
  %qry_prob432 = getelementptr inbounds %struct.args_t, ptr %361, i32 0, i32 27, !dbg !2642
  %362 = load ptr, ptr %qry_prob432, align 8, !dbg !2642, !tbaa !2638
  br label %cond.end439, !dbg !2639

cond.false433:                                    ; preds = %if.then420
  %363 = load ptr, ptr %args.addr, align 8, !dbg !2643, !tbaa !1228
  %ngt_smpl434 = getelementptr inbounds %struct.args_t, ptr %363, i32 0, i32 23, !dbg !2644
  %364 = load i32, ptr %ngt_smpl434, align 4, !dbg !2644, !tbaa !2549
  %mul435 = mul i32 3, %364, !dbg !2645
  %conv436 = sext i32 %mul435 to i64, !dbg !2646
  %mul437 = mul i64 %conv436, 8, !dbg !2647
  %call438 = call noalias ptr @malloc(i64 noundef %mul437) #18, !dbg !2648
  br label %cond.end439, !dbg !2639

cond.end439:                                      ; preds = %cond.false433, %cond.true431
  %cond440 = phi ptr [ %362, %cond.true431 ], [ %call438, %cond.false433 ], !dbg !2639
  %365 = load ptr, ptr %args.addr, align 8, !dbg !2649, !tbaa !1228
  %gt_prob = getelementptr inbounds %struct.args_t, ptr %365, i32 0, i32 28, !dbg !2650
  store ptr %cond440, ptr %gt_prob, align 8, !dbg !2651, !tbaa !2652
  store i32 0, ptr %i, align 4, !dbg !2653, !tbaa !1223
  br label %for.cond441, !dbg !2655

for.cond441:                                      ; preds = %for.inc456, %cond.end439
  %366 = load i32, ptr %i, align 4, !dbg !2656, !tbaa !1223
  %cmp442 = icmp slt i32 %366, 8, !dbg !2658
  br i1 %cmp442, label %for.body444, label %for.end458, !dbg !2659

for.body444:                                      ; preds = %for.cond441
  store i32 0, ptr %j, align 4, !dbg !2660, !tbaa !1223
  br label %for.cond445, !dbg !2662

for.cond445:                                      ; preds = %for.inc453, %for.body444
  %367 = load i32, ptr %j, align 4, !dbg !2663, !tbaa !1223
  %cmp446 = icmp slt i32 %367, 3, !dbg !2665
  br i1 %cmp446, label %for.body448, label %for.end455, !dbg !2666

for.body448:                                      ; preds = %for.cond445
  %368 = load ptr, ptr %args.addr, align 8, !dbg !2667, !tbaa !1228
  %dsg2prob = getelementptr inbounds %struct.args_t, ptr %368, i32 0, i32 41, !dbg !2668
  %369 = load i32, ptr %i, align 4, !dbg !2669, !tbaa !1223
  %idxprom449 = sext i32 %369 to i64, !dbg !2667
  %arrayidx450 = getelementptr [8 x [3 x double]], ptr %dsg2prob, i64 0, i64 %idxprom449, !dbg !2667
  %370 = load i32, ptr %j, align 4, !dbg !2670, !tbaa !1223
  %idxprom451 = sext i32 %370 to i64, !dbg !2667
  %arrayidx452 = getelementptr [3 x double], ptr %arrayidx450, i64 0, i64 %idxprom451, !dbg !2667
  store double 0x7FF0000000000000, ptr %arrayidx452, align 8, !dbg !2671, !tbaa !1761
  br label %for.inc453, !dbg !2667

for.inc453:                                       ; preds = %for.body448
  %371 = load i32, ptr %j, align 4, !dbg !2672, !tbaa !1223
  %inc454 = add i32 %371, 1, !dbg !2672
  store i32 %inc454, ptr %j, align 4, !dbg !2672, !tbaa !1223
  br label %for.cond445, !dbg !2673, !llvm.loop !2674

for.end455:                                       ; preds = %for.cond445
  br label %for.inc456, !dbg !2675

for.inc456:                                       ; preds = %for.end455
  %372 = load i32, ptr %i, align 4, !dbg !2676, !tbaa !1223
  %inc457 = add i32 %372, 1, !dbg !2676
  store i32 %inc457, ptr %i, align 4, !dbg !2676, !tbaa !1223
  br label %for.cond441, !dbg !2677, !llvm.loop !2678

for.end458:                                       ; preds = %for.cond441
  %373 = load ptr, ptr %args.addr, align 8, !dbg !2680, !tbaa !1228
  %use_PLs459 = getelementptr inbounds %struct.args_t, ptr %373, i32 0, i32 52, !dbg !2681
  %374 = load i32, ptr %use_PLs459, align 4, !dbg !2681, !tbaa !1266
  %conv460 = sitofp i32 %374 to double, !dbg !2680
  %mul461 = fmul double -1.000000e-01, %conv460, !dbg !2682
  %call462 = call double @pow(double noundef 1.000000e+01, double noundef %mul461) #14, !dbg !2683
  %sub = fsub double 1.000000e+00, %call462, !dbg !2684
  %call463 = call double @log(double noundef %sub) #14, !dbg !2685
  %fneg = fneg double %call463, !dbg !2686
  %375 = load ptr, ptr %args.addr, align 8, !dbg !2687, !tbaa !1228
  %dsg2prob464 = getelementptr inbounds %struct.args_t, ptr %375, i32 0, i32 41, !dbg !2688
  %arrayidx465 = getelementptr [8 x [3 x double]], ptr %dsg2prob464, i64 0, i64 1, !dbg !2687
  %arrayidx466 = getelementptr [3 x double], ptr %arrayidx465, i64 0, i64 0, !dbg !2687
  store double %fneg, ptr %arrayidx466, align 8, !dbg !2689, !tbaa !1761
  %376 = load ptr, ptr %args.addr, align 8, !dbg !2690, !tbaa !1228
  %use_PLs467 = getelementptr inbounds %struct.args_t, ptr %376, i32 0, i32 52, !dbg !2691
  %377 = load i32, ptr %use_PLs467, align 4, !dbg !2691, !tbaa !1266
  %conv468 = sitofp i32 %377 to double, !dbg !2690
  %mul469 = fmul double -1.000000e-01, %conv468, !dbg !2692
  %call470 = call double @pow(double noundef 1.000000e+01, double noundef %mul469) #14, !dbg !2693
  %mul471 = fmul double 5.000000e-01, %call470, !dbg !2694
  %call472 = call double @log(double noundef %mul471) #14, !dbg !2695
  %fneg473 = fneg double %call472, !dbg !2696
  %378 = load ptr, ptr %args.addr, align 8, !dbg !2697, !tbaa !1228
  %dsg2prob474 = getelementptr inbounds %struct.args_t, ptr %378, i32 0, i32 41, !dbg !2698
  %arrayidx475 = getelementptr [8 x [3 x double]], ptr %dsg2prob474, i64 0, i64 1, !dbg !2697
  %arrayidx476 = getelementptr [3 x double], ptr %arrayidx475, i64 0, i64 1, !dbg !2697
  store double %fneg473, ptr %arrayidx476, align 8, !dbg !2699, !tbaa !1761
  %379 = load ptr, ptr %args.addr, align 8, !dbg !2700, !tbaa !1228
  %use_PLs477 = getelementptr inbounds %struct.args_t, ptr %379, i32 0, i32 52, !dbg !2701
  %380 = load i32, ptr %use_PLs477, align 4, !dbg !2701, !tbaa !1266
  %conv478 = sitofp i32 %380 to double, !dbg !2700
  %mul479 = fmul double -1.000000e-01, %conv478, !dbg !2702
  %call480 = call double @pow(double noundef 1.000000e+01, double noundef %mul479) #14, !dbg !2703
  %mul481 = fmul double 5.000000e-01, %call480, !dbg !2704
  %call482 = call double @log(double noundef %mul481) #14, !dbg !2705
  %fneg483 = fneg double %call482, !dbg !2706
  %381 = load ptr, ptr %args.addr, align 8, !dbg !2707, !tbaa !1228
  %dsg2prob484 = getelementptr inbounds %struct.args_t, ptr %381, i32 0, i32 41, !dbg !2708
  %arrayidx485 = getelementptr [8 x [3 x double]], ptr %dsg2prob484, i64 0, i64 1, !dbg !2707
  %arrayidx486 = getelementptr [3 x double], ptr %arrayidx485, i64 0, i64 2, !dbg !2707
  store double %fneg483, ptr %arrayidx486, align 8, !dbg !2709, !tbaa !1761
  %382 = load ptr, ptr %args.addr, align 8, !dbg !2710, !tbaa !1228
  %use_PLs487 = getelementptr inbounds %struct.args_t, ptr %382, i32 0, i32 52, !dbg !2711
  %383 = load i32, ptr %use_PLs487, align 4, !dbg !2711, !tbaa !1266
  %conv488 = sitofp i32 %383 to double, !dbg !2710
  %mul489 = fmul double -1.000000e-01, %conv488, !dbg !2712
  %call490 = call double @pow(double noundef 1.000000e+01, double noundef %mul489) #14, !dbg !2713
  %mul491 = fmul double 5.000000e-01, %call490, !dbg !2714
  %call492 = call double @log(double noundef %mul491) #14, !dbg !2715
  %fneg493 = fneg double %call492, !dbg !2716
  %384 = load ptr, ptr %args.addr, align 8, !dbg !2717, !tbaa !1228
  %dsg2prob494 = getelementptr inbounds %struct.args_t, ptr %384, i32 0, i32 41, !dbg !2718
  %arrayidx495 = getelementptr [8 x [3 x double]], ptr %dsg2prob494, i64 0, i64 2, !dbg !2717
  %arrayidx496 = getelementptr [3 x double], ptr %arrayidx495, i64 0, i64 0, !dbg !2717
  store double %fneg493, ptr %arrayidx496, align 8, !dbg !2719, !tbaa !1761
  %385 = load ptr, ptr %args.addr, align 8, !dbg !2720, !tbaa !1228
  %use_PLs497 = getelementptr inbounds %struct.args_t, ptr %385, i32 0, i32 52, !dbg !2721
  %386 = load i32, ptr %use_PLs497, align 4, !dbg !2721, !tbaa !1266
  %conv498 = sitofp i32 %386 to double, !dbg !2720
  %mul499 = fmul double -1.000000e-01, %conv498, !dbg !2722
  %call500 = call double @pow(double noundef 1.000000e+01, double noundef %mul499) #14, !dbg !2723
  %sub501 = fsub double 1.000000e+00, %call500, !dbg !2724
  %call502 = call double @log(double noundef %sub501) #14, !dbg !2725
  %fneg503 = fneg double %call502, !dbg !2726
  %387 = load ptr, ptr %args.addr, align 8, !dbg !2727, !tbaa !1228
  %dsg2prob504 = getelementptr inbounds %struct.args_t, ptr %387, i32 0, i32 41, !dbg !2728
  %arrayidx505 = getelementptr [8 x [3 x double]], ptr %dsg2prob504, i64 0, i64 2, !dbg !2727
  %arrayidx506 = getelementptr [3 x double], ptr %arrayidx505, i64 0, i64 1, !dbg !2727
  store double %fneg503, ptr %arrayidx506, align 8, !dbg !2729, !tbaa !1761
  %388 = load ptr, ptr %args.addr, align 8, !dbg !2730, !tbaa !1228
  %use_PLs507 = getelementptr inbounds %struct.args_t, ptr %388, i32 0, i32 52, !dbg !2731
  %389 = load i32, ptr %use_PLs507, align 4, !dbg !2731, !tbaa !1266
  %conv508 = sitofp i32 %389 to double, !dbg !2730
  %mul509 = fmul double -1.000000e-01, %conv508, !dbg !2732
  %call510 = call double @pow(double noundef 1.000000e+01, double noundef %mul509) #14, !dbg !2733
  %mul511 = fmul double 5.000000e-01, %call510, !dbg !2734
  %call512 = call double @log(double noundef %mul511) #14, !dbg !2735
  %fneg513 = fneg double %call512, !dbg !2736
  %390 = load ptr, ptr %args.addr, align 8, !dbg !2737, !tbaa !1228
  %dsg2prob514 = getelementptr inbounds %struct.args_t, ptr %390, i32 0, i32 41, !dbg !2738
  %arrayidx515 = getelementptr [8 x [3 x double]], ptr %dsg2prob514, i64 0, i64 2, !dbg !2737
  %arrayidx516 = getelementptr [3 x double], ptr %arrayidx515, i64 0, i64 2, !dbg !2737
  store double %fneg513, ptr %arrayidx516, align 8, !dbg !2739, !tbaa !1761
  %391 = load ptr, ptr %args.addr, align 8, !dbg !2740, !tbaa !1228
  %use_PLs517 = getelementptr inbounds %struct.args_t, ptr %391, i32 0, i32 52, !dbg !2741
  %392 = load i32, ptr %use_PLs517, align 4, !dbg !2741, !tbaa !1266
  %conv518 = sitofp i32 %392 to double, !dbg !2740
  %mul519 = fmul double -1.000000e-01, %conv518, !dbg !2742
  %call520 = call double @pow(double noundef 1.000000e+01, double noundef %mul519) #14, !dbg !2743
  %mul521 = fmul double 5.000000e-01, %call520, !dbg !2744
  %call522 = call double @log(double noundef %mul521) #14, !dbg !2745
  %fneg523 = fneg double %call522, !dbg !2746
  %393 = load ptr, ptr %args.addr, align 8, !dbg !2747, !tbaa !1228
  %dsg2prob524 = getelementptr inbounds %struct.args_t, ptr %393, i32 0, i32 41, !dbg !2748
  %arrayidx525 = getelementptr [8 x [3 x double]], ptr %dsg2prob524, i64 0, i64 4, !dbg !2747
  %arrayidx526 = getelementptr [3 x double], ptr %arrayidx525, i64 0, i64 0, !dbg !2747
  store double %fneg523, ptr %arrayidx526, align 8, !dbg !2749, !tbaa !1761
  %394 = load ptr, ptr %args.addr, align 8, !dbg !2750, !tbaa !1228
  %use_PLs527 = getelementptr inbounds %struct.args_t, ptr %394, i32 0, i32 52, !dbg !2751
  %395 = load i32, ptr %use_PLs527, align 4, !dbg !2751, !tbaa !1266
  %conv528 = sitofp i32 %395 to double, !dbg !2750
  %mul529 = fmul double -1.000000e-01, %conv528, !dbg !2752
  %call530 = call double @pow(double noundef 1.000000e+01, double noundef %mul529) #14, !dbg !2753
  %mul531 = fmul double 5.000000e-01, %call530, !dbg !2754
  %call532 = call double @log(double noundef %mul531) #14, !dbg !2755
  %fneg533 = fneg double %call532, !dbg !2756
  %396 = load ptr, ptr %args.addr, align 8, !dbg !2757, !tbaa !1228
  %dsg2prob534 = getelementptr inbounds %struct.args_t, ptr %396, i32 0, i32 41, !dbg !2758
  %arrayidx535 = getelementptr [8 x [3 x double]], ptr %dsg2prob534, i64 0, i64 4, !dbg !2757
  %arrayidx536 = getelementptr [3 x double], ptr %arrayidx535, i64 0, i64 1, !dbg !2757
  store double %fneg533, ptr %arrayidx536, align 8, !dbg !2759, !tbaa !1761
  %397 = load ptr, ptr %args.addr, align 8, !dbg !2760, !tbaa !1228
  %use_PLs537 = getelementptr inbounds %struct.args_t, ptr %397, i32 0, i32 52, !dbg !2761
  %398 = load i32, ptr %use_PLs537, align 4, !dbg !2761, !tbaa !1266
  %conv538 = sitofp i32 %398 to double, !dbg !2760
  %mul539 = fmul double -1.000000e-01, %conv538, !dbg !2762
  %call540 = call double @pow(double noundef 1.000000e+01, double noundef %mul539) #14, !dbg !2763
  %sub541 = fsub double 1.000000e+00, %call540, !dbg !2764
  %call542 = call double @log(double noundef %sub541) #14, !dbg !2765
  %fneg543 = fneg double %call542, !dbg !2766
  %399 = load ptr, ptr %args.addr, align 8, !dbg !2767, !tbaa !1228
  %dsg2prob544 = getelementptr inbounds %struct.args_t, ptr %399, i32 0, i32 41, !dbg !2768
  %arrayidx545 = getelementptr [8 x [3 x double]], ptr %dsg2prob544, i64 0, i64 4, !dbg !2767
  %arrayidx546 = getelementptr [3 x double], ptr %arrayidx545, i64 0, i64 2, !dbg !2767
  store double %fneg543, ptr %arrayidx546, align 8, !dbg !2769, !tbaa !1761
  store i32 0, ptr %i, align 4, !dbg !2770, !tbaa !1223
  br label %for.cond547, !dbg !2772

for.cond547:                                      ; preds = %for.inc556, %for.end458
  %400 = load i32, ptr %i, align 4, !dbg !2773, !tbaa !1223
  %cmp548 = icmp slt i32 %400, 256, !dbg !2775
  br i1 %cmp548, label %for.body550, label %for.end558, !dbg !2776

for.body550:                                      ; preds = %for.cond547
  %401 = load i32, ptr %i, align 4, !dbg !2777, !tbaa !1223
  %conv551 = sitofp i32 %401 to double, !dbg !2777
  %mul552 = fmul double -1.000000e-01, %conv551, !dbg !2778
  %call553 = call double @pow(double noundef 1.000000e+01, double noundef %mul552) #14, !dbg !2779
  %402 = load ptr, ptr %args.addr, align 8, !dbg !2780, !tbaa !1228
  %pl2prob = getelementptr inbounds %struct.args_t, ptr %402, i32 0, i32 42, !dbg !2781
  %403 = load i32, ptr %i, align 4, !dbg !2782, !tbaa !1223
  %idxprom554 = sext i32 %403 to i64, !dbg !2780
  %arrayidx555 = getelementptr [256 x double], ptr %pl2prob, i64 0, i64 %idxprom554, !dbg !2780
  store double %call553, ptr %arrayidx555, align 8, !dbg !2783, !tbaa !1761
  br label %for.inc556, !dbg !2780

for.inc556:                                       ; preds = %for.body550
  %404 = load i32, ptr %i, align 4, !dbg !2784, !tbaa !1223
  %inc557 = add i32 %404, 1, !dbg !2784
  store i32 %inc557, ptr %i, align 4, !dbg !2784, !tbaa !1223
  br label %for.cond547, !dbg !2785, !llvm.loop !2786

for.end558:                                       ; preds = %for.cond547
  br label %if.end563, !dbg !2788

if.else559:                                       ; preds = %if.end418
  %405 = load ptr, ptr %args.addr, align 8, !dbg !2789, !tbaa !1228
  %npairs560 = getelementptr inbounds %struct.args_t, ptr %405, i32 0, i32 32, !dbg !2790
  %406 = load i32, ptr %npairs560, align 4, !dbg !2790, !tbaa !2334
  %conv561 = zext i32 %406 to i64, !dbg !2789
  %call562 = call noalias ptr @calloc(i64 noundef %conv561, i64 noundef 4) #15, !dbg !2791
  %407 = load ptr, ptr %args.addr, align 8, !dbg !2792, !tbaa !1228
  %ndiff = getelementptr inbounds %struct.args_t, ptr %407, i32 0, i32 29, !dbg !2793
  store ptr %call562, ptr %ndiff, align 8, !dbg !2794, !tbaa !2795
  br label %if.end563

if.end563:                                        ; preds = %if.else559, %for.end558
  %408 = load ptr, ptr %args.addr, align 8, !dbg !2796, !tbaa !1228
  %npairs564 = getelementptr inbounds %struct.args_t, ptr %408, i32 0, i32 32, !dbg !2797
  %409 = load i32, ptr %npairs564, align 4, !dbg !2797, !tbaa !2334
  %conv565 = zext i32 %409 to i64, !dbg !2796
  %call566 = call noalias ptr @calloc(i64 noundef %conv565, i64 noundef 4) #15, !dbg !2798
  %410 = load ptr, ptr %args.addr, align 8, !dbg !2799, !tbaa !1228
  %ncnt = getelementptr inbounds %struct.args_t, ptr %410, i32 0, i32 30, !dbg !2800
  store ptr %call566, ptr %ncnt, align 8, !dbg !2801, !tbaa !2802
  %411 = load ptr, ptr %args.addr, align 8, !dbg !2803, !tbaa !1228
  %ncnt567 = getelementptr inbounds %struct.args_t, ptr %411, i32 0, i32 30, !dbg !2805
  %412 = load ptr, ptr %ncnt567, align 8, !dbg !2805, !tbaa !2802
  %tobool568 = icmp ne ptr %412, null, !dbg !2803
  br i1 %tobool568, label %if.end575, label %if.then569, !dbg !2806

if.then569:                                       ; preds = %if.end563
  %413 = load ptr, ptr %args.addr, align 8, !dbg !2807, !tbaa !1228
  %npairs570 = getelementptr inbounds %struct.args_t, ptr %413, i32 0, i32 32, !dbg !2808
  %414 = load i32, ptr %npairs570, align 4, !dbg !2808, !tbaa !2334
  %conv571 = zext i32 %414 to i64, !dbg !2807
  %mul572 = mul i64 %conv571, 4, !dbg !2809
  %conv573 = uitofp i64 %mul572 to double, !dbg !2807
  %div574 = fdiv double %conv573, 1.000000e+06, !dbg !2810
  call void (ptr, ...) @error(ptr noundef @.str.99, double noundef %div574) #16, !dbg !2811
  unreachable, !dbg !2811

if.end575:                                        ; preds = %if.end563
  %415 = load ptr, ptr %args.addr, align 8, !dbg !2812, !tbaa !1228
  %calc_hwe_prob = getelementptr inbounds %struct.args_t, ptr %415, i32 0, i32 49, !dbg !2814
  %416 = load i32, ptr %calc_hwe_prob, align 8, !dbg !2814, !tbaa !1262
  %tobool576 = icmp ne i32 %416, 0, !dbg !2812
  br i1 %tobool576, label %if.then577, label %if.end590, !dbg !2815

if.then577:                                       ; preds = %if.end575
  %417 = load ptr, ptr %args.addr, align 8, !dbg !2816, !tbaa !1228
  %npairs578 = getelementptr inbounds %struct.args_t, ptr %417, i32 0, i32 32, !dbg !2818
  %418 = load i32, ptr %npairs578, align 4, !dbg !2818, !tbaa !2334
  %conv579 = zext i32 %418 to i64, !dbg !2816
  %call580 = call noalias ptr @calloc(i64 noundef %conv579, i64 noundef 8) #15, !dbg !2819
  %419 = load ptr, ptr %args.addr, align 8, !dbg !2820, !tbaa !1228
  %hwe_prob = getelementptr inbounds %struct.args_t, ptr %419, i32 0, i32 40, !dbg !2821
  store ptr %call580, ptr %hwe_prob, align 8, !dbg !2822, !tbaa !2823
  %420 = load ptr, ptr %args.addr, align 8, !dbg !2824, !tbaa !1228
  %hwe_prob581 = getelementptr inbounds %struct.args_t, ptr %420, i32 0, i32 40, !dbg !2826
  %421 = load ptr, ptr %hwe_prob581, align 8, !dbg !2826, !tbaa !2823
  %tobool582 = icmp ne ptr %421, null, !dbg !2824
  br i1 %tobool582, label %if.end589, label %if.then583, !dbg !2827

if.then583:                                       ; preds = %if.then577
  %422 = load ptr, ptr %args.addr, align 8, !dbg !2828, !tbaa !1228
  %npairs584 = getelementptr inbounds %struct.args_t, ptr %422, i32 0, i32 32, !dbg !2829
  %423 = load i32, ptr %npairs584, align 4, !dbg !2829, !tbaa !2334
  %conv585 = zext i32 %423 to i64, !dbg !2828
  %mul586 = mul i64 %conv585, 8, !dbg !2830
  %conv587 = uitofp i64 %mul586 to double, !dbg !2828
  %div588 = fdiv double %conv587, 1.000000e+06, !dbg !2831
  call void (ptr, ...) @error(ptr noundef @.str.100, double noundef %div588) #16, !dbg !2832
  unreachable, !dbg !2832

if.end589:                                        ; preds = %if.then577
  br label %if.end590, !dbg !2833

if.end590:                                        ; preds = %if.end589, %if.end575
  %424 = load ptr, ptr %args.addr, align 8, !dbg !2834, !tbaa !1228
  %distinctive_sites = getelementptr inbounds %struct.args_t, ptr %424, i32 0, i32 60, !dbg !2836
  %425 = load double, ptr %distinctive_sites, align 8, !dbg !2836, !tbaa !1442
  %tobool591 = fcmp une double %425, 0.000000e+00, !dbg !2834
  br i1 %tobool591, label %if.then592, label %if.end593, !dbg !2837

if.then592:                                       ; preds = %if.end590
  %426 = load ptr, ptr %args.addr, align 8, !dbg !2838, !tbaa !1228
  call void @diff_sites_init(ptr noundef %426), !dbg !2839
  br label %if.end593, !dbg !2839

if.end593:                                        ; preds = %if.then592, %if.end590
  %427 = load ptr, ptr @bcftools_stdout, align 8, !dbg !2840, !tbaa !1228
  %428 = load ptr, ptr %args.addr, align 8, !dbg !2841, !tbaa !1228
  %fp = getelementptr inbounds %struct.args_t, ptr %428, i32 0, i32 53, !dbg !2842
  store ptr %427, ptr %fp, align 8, !dbg !2843, !tbaa !1768
  %429 = load ptr, ptr %args.addr, align 8, !dbg !2844, !tbaa !1228
  %430 = load ptr, ptr %args.addr, align 8, !dbg !2845, !tbaa !1228
  %fp594 = getelementptr inbounds %struct.args_t, ptr %430, i32 0, i32 53, !dbg !2846
  %431 = load ptr, ptr %fp594, align 8, !dbg !2846, !tbaa !1768
  call void @print_header(ptr noundef %429, ptr noundef %431), !dbg !2847
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #14, !dbg !2848
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #14, !dbg !2848
  ret void, !dbg !2848
}

declare !dbg !2849 i32 @bcf_sr_next_line(ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal i32 @is_input_okay(ptr noundef %args, i32 noundef %nmatch) #0 !dbg !2852 {
entry:
  %retval = alloca i32, align 4
  %args.addr = alloca ptr, align 8
  %nmatch.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %msg = alloca ptr, align 8
  %hdr = alloca ptr, align 8
  %rec = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !2856, metadata !DIExpression()), !dbg !2863
  store i32 %nmatch, ptr %nmatch.addr, align 4, !tbaa !1223
  tail call void @llvm.dbg.declare(metadata ptr %nmatch.addr, metadata !2857, metadata !DIExpression()), !dbg !2864
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #14, !dbg !2865
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !2858, metadata !DIExpression()), !dbg !2866
  call void @llvm.lifetime.start.p0(i64 8, ptr %msg) #14, !dbg !2867
  tail call void @llvm.dbg.declare(metadata ptr %msg, metadata !2859, metadata !DIExpression()), !dbg !2868
  call void @llvm.lifetime.start.p0(i64 8, ptr %hdr) #14, !dbg !2869
  tail call void @llvm.dbg.declare(metadata ptr %hdr, metadata !2860, metadata !DIExpression()), !dbg !2870
  call void @llvm.lifetime.start.p0(i64 8, ptr %rec) #14, !dbg !2871
  tail call void @llvm.dbg.declare(metadata ptr %rec, metadata !2861, metadata !DIExpression()), !dbg !2872
  %0 = load ptr, ptr %args.addr, align 8, !dbg !2873, !tbaa !1228
  %gt_hdr = getelementptr inbounds %struct.args_t, ptr %0, i32 0, i32 1, !dbg !2875
  %1 = load ptr, ptr %gt_hdr, align 8, !dbg !2875, !tbaa !2120
  %tobool = icmp ne ptr %1, null, !dbg !2873
  br i1 %tobool, label %land.lhs.true, label %if.end18, !dbg !2876

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, ptr %nmatch.addr, align 4, !dbg !2877, !tbaa !1223
  %cmp = icmp ne i32 %2, 2, !dbg !2878
  br i1 %cmp, label %if.then, label %if.end18, !dbg !2879

if.then:                                          ; preds = %land.lhs.true
  %3 = load ptr, ptr %args.addr, align 8, !dbg !2880, !tbaa !1228
  %nskip_no_match = getelementptr inbounds %struct.args_t, ptr %3, i32 0, i32 54, !dbg !2883
  %4 = load i32, ptr %nskip_no_match, align 8, !dbg !2884, !tbaa !2885
  %inc = add i32 %4, 1, !dbg !2884
  store i32 %inc, ptr %nskip_no_match, align 8, !dbg !2884, !tbaa !2885
  %tobool1 = icmp ne i32 %4, 0, !dbg !2884
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2886

if.then2:                                         ; preds = %if.then
  store i32 0, ptr %retval, align 4, !dbg !2887
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2887

if.end:                                           ; preds = %if.then
  store i32 0, ptr %i, align 4, !dbg !2888, !tbaa !1223
  br label %for.cond, !dbg !2890

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, ptr %i, align 4, !dbg !2891, !tbaa !1223
  %cmp3 = icmp slt i32 %5, 2, !dbg !2893
  br i1 %cmp3, label %for.body, label %for.end, !dbg !2894

for.body:                                         ; preds = %for.cond
  %6 = load ptr, ptr %args.addr, align 8, !dbg !2895, !tbaa !1228
  %files = getelementptr inbounds %struct.args_t, ptr %6, i32 0, i32 0, !dbg !2895
  %7 = load ptr, ptr %files, align 8, !dbg !2895, !tbaa !1720
  %has_line = getelementptr inbounds %struct.bcf_srs_t, ptr %7, i32 0, i32 4, !dbg !2895
  %8 = load ptr, ptr %has_line, align 8, !dbg !2895, !tbaa !2897
  %9 = load i32, ptr %i, align 4, !dbg !2895, !tbaa !1223
  %idxprom = sext i32 %9 to i64, !dbg !2895
  %arrayidx = getelementptr i32, ptr %8, i64 %idxprom, !dbg !2895
  %10 = load i32, ptr %arrayidx, align 4, !dbg !2895, !tbaa !1223
  %tobool4 = icmp ne i32 %10, 0, !dbg !2895
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !2895

cond.true:                                        ; preds = %for.body
  %11 = load ptr, ptr %args.addr, align 8, !dbg !2895, !tbaa !1228
  %files5 = getelementptr inbounds %struct.args_t, ptr %11, i32 0, i32 0, !dbg !2895
  %12 = load ptr, ptr %files5, align 8, !dbg !2895, !tbaa !1720
  %readers = getelementptr inbounds %struct.bcf_srs_t, ptr %12, i32 0, i32 6, !dbg !2895
  %13 = load ptr, ptr %readers, align 8, !dbg !2895, !tbaa !2098
  %14 = load i32, ptr %i, align 4, !dbg !2895, !tbaa !1223
  %idxprom6 = sext i32 %14 to i64, !dbg !2895
  %arrayidx7 = getelementptr %struct.bcf_sr_t, ptr %13, i64 %idxprom6, !dbg !2895
  %buffer = getelementptr inbounds %struct.bcf_sr_t, ptr %arrayidx7, i32 0, i32 6, !dbg !2895
  %15 = load ptr, ptr %buffer, align 8, !dbg !2895, !tbaa !2898
  %arrayidx8 = getelementptr ptr, ptr %15, i64 0, !dbg !2895
  %16 = load ptr, ptr %arrayidx8, align 8, !dbg !2895, !tbaa !1228
  br label %cond.end, !dbg !2895

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !2895

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %16, %cond.true ], [ null, %cond.false ], !dbg !2895
  store ptr %cond, ptr %rec, align 8, !dbg !2899, !tbaa !1228
  %17 = load ptr, ptr %rec, align 8, !dbg !2900, !tbaa !1228
  %tobool9 = icmp ne ptr %17, null, !dbg !2900
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !2902

if.then10:                                        ; preds = %cond.end
  br label %for.end, !dbg !2903

if.end11:                                         ; preds = %cond.end
  br label %for.inc, !dbg !2904

for.inc:                                          ; preds = %if.end11
  %18 = load i32, ptr %i, align 4, !dbg !2905, !tbaa !1223
  %inc12 = add i32 %18, 1, !dbg !2905
  store i32 %inc12, ptr %i, align 4, !dbg !2905, !tbaa !1223
  br label %for.cond, !dbg !2906, !llvm.loop !2907

for.end:                                          ; preds = %if.then10, %for.cond
  %19 = load ptr, ptr %args.addr, align 8, !dbg !2909, !tbaa !1228
  %files13 = getelementptr inbounds %struct.args_t, ptr %19, i32 0, i32 0, !dbg !2909
  %20 = load ptr, ptr %files13, align 8, !dbg !2909, !tbaa !1720
  %readers14 = getelementptr inbounds %struct.bcf_srs_t, ptr %20, i32 0, i32 6, !dbg !2909
  %21 = load ptr, ptr %readers14, align 8, !dbg !2909, !tbaa !2098
  %22 = load i32, ptr %i, align 4, !dbg !2909, !tbaa !1223
  %idxprom15 = sext i32 %22 to i64, !dbg !2909
  %arrayidx16 = getelementptr %struct.bcf_sr_t, ptr %21, i64 %idxprom15, !dbg !2909
  %header = getelementptr inbounds %struct.bcf_sr_t, ptr %arrayidx16, i32 0, i32 3, !dbg !2909
  %23 = load ptr, ptr %header, align 8, !dbg !2909, !tbaa !2099
  store ptr %23, ptr %hdr, align 8, !dbg !2910, !tbaa !1228
  %24 = load ptr, ptr @bcftools_stderr, align 8, !dbg !2911, !tbaa !1228
  %25 = load ptr, ptr %hdr, align 8, !dbg !2912, !tbaa !1228
  %26 = load ptr, ptr %rec, align 8, !dbg !2913, !tbaa !1228
  %call = call ptr @bcf_seqname(ptr noundef %25, ptr noundef %26), !dbg !2914
  %27 = load ptr, ptr %rec, align 8, !dbg !2915, !tbaa !1228
  %pos = getelementptr inbounds %struct.bcf1_t, ptr %27, i32 0, i32 0, !dbg !2916
  %28 = load i64, ptr %pos, align 8, !dbg !2916, !tbaa !2917
  %add = add i64 %28, 1, !dbg !2921
  %call17 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %24, ptr noundef @.str.109, ptr noundef %call, i64 noundef %add), !dbg !2922
  store i32 0, ptr %retval, align 4, !dbg !2923
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2923

if.end18:                                         ; preds = %land.lhs.true, %entry
  store i32 0, ptr %i, align 4, !dbg !2924, !tbaa !1223
  br label %for.cond19, !dbg !2926

for.cond19:                                       ; preds = %for.inc61, %if.end18
  %29 = load i32, ptr %i, align 4, !dbg !2927, !tbaa !1223
  %cmp20 = icmp slt i32 %29, 2, !dbg !2929
  br i1 %cmp20, label %for.body21, label %for.end63, !dbg !2930

for.body21:                                       ; preds = %for.cond19
  %30 = load ptr, ptr %args.addr, align 8, !dbg !2931, !tbaa !1228
  %files22 = getelementptr inbounds %struct.args_t, ptr %30, i32 0, i32 0, !dbg !2931
  %31 = load ptr, ptr %files22, align 8, !dbg !2931, !tbaa !1720
  %readers23 = getelementptr inbounds %struct.bcf_srs_t, ptr %31, i32 0, i32 6, !dbg !2931
  %32 = load ptr, ptr %readers23, align 8, !dbg !2931, !tbaa !2098
  %33 = load i32, ptr %i, align 4, !dbg !2931, !tbaa !1223
  %idxprom24 = sext i32 %33 to i64, !dbg !2931
  %arrayidx25 = getelementptr %struct.bcf_sr_t, ptr %32, i64 %idxprom24, !dbg !2931
  %header26 = getelementptr inbounds %struct.bcf_sr_t, ptr %arrayidx25, i32 0, i32 3, !dbg !2931
  %34 = load ptr, ptr %header26, align 8, !dbg !2931, !tbaa !2099
  store ptr %34, ptr %hdr, align 8, !dbg !2933, !tbaa !1228
  %35 = load ptr, ptr %args.addr, align 8, !dbg !2934, !tbaa !1228
  %files27 = getelementptr inbounds %struct.args_t, ptr %35, i32 0, i32 0, !dbg !2934
  %36 = load ptr, ptr %files27, align 8, !dbg !2934, !tbaa !1720
  %has_line28 = getelementptr inbounds %struct.bcf_srs_t, ptr %36, i32 0, i32 4, !dbg !2934
  %37 = load ptr, ptr %has_line28, align 8, !dbg !2934, !tbaa !2897
  %38 = load i32, ptr %i, align 4, !dbg !2934, !tbaa !1223
  %idxprom29 = sext i32 %38 to i64, !dbg !2934
  %arrayidx30 = getelementptr i32, ptr %37, i64 %idxprom29, !dbg !2934
  %39 = load i32, ptr %arrayidx30, align 4, !dbg !2934, !tbaa !1223
  %tobool31 = icmp ne i32 %39, 0, !dbg !2934
  br i1 %tobool31, label %cond.true32, label %cond.false39, !dbg !2934

cond.true32:                                      ; preds = %for.body21
  %40 = load ptr, ptr %args.addr, align 8, !dbg !2934, !tbaa !1228
  %files33 = getelementptr inbounds %struct.args_t, ptr %40, i32 0, i32 0, !dbg !2934
  %41 = load ptr, ptr %files33, align 8, !dbg !2934, !tbaa !1720
  %readers34 = getelementptr inbounds %struct.bcf_srs_t, ptr %41, i32 0, i32 6, !dbg !2934
  %42 = load ptr, ptr %readers34, align 8, !dbg !2934, !tbaa !2098
  %43 = load i32, ptr %i, align 4, !dbg !2934, !tbaa !1223
  %idxprom35 = sext i32 %43 to i64, !dbg !2934
  %arrayidx36 = getelementptr %struct.bcf_sr_t, ptr %42, i64 %idxprom35, !dbg !2934
  %buffer37 = getelementptr inbounds %struct.bcf_sr_t, ptr %arrayidx36, i32 0, i32 6, !dbg !2934
  %44 = load ptr, ptr %buffer37, align 8, !dbg !2934, !tbaa !2898
  %arrayidx38 = getelementptr ptr, ptr %44, i64 0, !dbg !2934
  %45 = load ptr, ptr %arrayidx38, align 8, !dbg !2934, !tbaa !1228
  br label %cond.end40, !dbg !2934

cond.false39:                                     ; preds = %for.body21
  br label %cond.end40, !dbg !2934

cond.end40:                                       ; preds = %cond.false39, %cond.true32
  %cond41 = phi ptr [ %45, %cond.true32 ], [ null, %cond.false39 ], !dbg !2934
  store ptr %cond41, ptr %rec, align 8, !dbg !2935, !tbaa !1228
  %46 = load ptr, ptr %rec, align 8, !dbg !2936, !tbaa !1228
  %n_allele = getelementptr inbounds %struct.bcf1_t, ptr %46, i32 0, i32 4, !dbg !2938
  %bf.load = load i64, ptr %n_allele, align 8, !dbg !2938
  %bf.lshr = lshr i64 %bf.load, 16, !dbg !2938
  %bf.clear = and i64 %bf.lshr, 65535, !dbg !2938
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !2938
  %cmp42 = icmp sgt i32 %bf.cast, 2, !dbg !2939
  br i1 %cmp42, label %if.then43, label %if.end48, !dbg !2940

if.then43:                                        ; preds = %cond.end40
  %47 = load ptr, ptr %args.addr, align 8, !dbg !2941, !tbaa !1228
  %nskip_not_ba = getelementptr inbounds %struct.args_t, ptr %47, i32 0, i32 55, !dbg !2944
  %48 = load i32, ptr %nskip_not_ba, align 4, !dbg !2945, !tbaa !2946
  %inc44 = add i32 %48, 1, !dbg !2945
  store i32 %inc44, ptr %nskip_not_ba, align 4, !dbg !2945, !tbaa !2946
  %tobool45 = icmp ne i32 %48, 0, !dbg !2945
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !2947

if.then46:                                        ; preds = %if.then43
  store i32 0, ptr %retval, align 4, !dbg !2948
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2948

if.end47:                                         ; preds = %if.then43
  store ptr @.str.110, ptr %msg, align 8, !dbg !2949, !tbaa !1228
  br label %not_okay, !dbg !2950

if.end48:                                         ; preds = %cond.end40
  %49 = load ptr, ptr %rec, align 8, !dbg !2951, !tbaa !1228
  %call49 = call i32 @bcf_get_variant_types(ptr noundef %49), !dbg !2953
  %cmp50 = icmp eq i32 %call49, 0, !dbg !2954
  br i1 %cmp50, label %if.then51, label %if.end56, !dbg !2955

if.then51:                                        ; preds = %if.end48
  %50 = load ptr, ptr %args.addr, align 8, !dbg !2956, !tbaa !1228
  %nskip_mono = getelementptr inbounds %struct.args_t, ptr %50, i32 0, i32 56, !dbg !2959
  %51 = load i32, ptr %nskip_mono, align 8, !dbg !2960, !tbaa !2961
  %inc52 = add i32 %51, 1, !dbg !2960
  store i32 %inc52, ptr %nskip_mono, align 8, !dbg !2960, !tbaa !2961
  %tobool53 = icmp ne i32 %51, 0, !dbg !2960
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !2962

if.then54:                                        ; preds = %if.then51
  store i32 0, ptr %retval, align 4, !dbg !2963
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2963

if.end55:                                         ; preds = %if.then51
  store ptr @.str.111, ptr %msg, align 8, !dbg !2964, !tbaa !1228
  br label %not_okay, !dbg !2965

if.end56:                                         ; preds = %if.end48
  %52 = load ptr, ptr %args.addr, align 8, !dbg !2966, !tbaa !1228
  %gt_hdr57 = getelementptr inbounds %struct.args_t, ptr %52, i32 0, i32 1, !dbg !2968
  %53 = load ptr, ptr %gt_hdr57, align 8, !dbg !2968, !tbaa !2120
  %tobool58 = icmp ne ptr %53, null, !dbg !2966
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !2969

if.then59:                                        ; preds = %if.end56
  br label %for.end63, !dbg !2970

if.end60:                                         ; preds = %if.end56
  br label %for.inc61, !dbg !2971

for.inc61:                                        ; preds = %if.end60
  %54 = load i32, ptr %i, align 4, !dbg !2972, !tbaa !1223
  %inc62 = add i32 %54, 1, !dbg !2972
  store i32 %inc62, ptr %i, align 4, !dbg !2972, !tbaa !1223
  br label %for.cond19, !dbg !2973, !llvm.loop !2974

for.end63:                                        ; preds = %if.then59, %for.cond19
  store i32 1, ptr %retval, align 4, !dbg !2976
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2976

not_okay:                                         ; preds = %if.end55, %if.end47
  tail call void @llvm.dbg.label(metadata !2862), !dbg !2977
  %55 = load ptr, ptr @bcftools_stderr, align 8, !dbg !2978, !tbaa !1228
  %56 = load ptr, ptr %hdr, align 8, !dbg !2979, !tbaa !1228
  %57 = load ptr, ptr %rec, align 8, !dbg !2980, !tbaa !1228
  %call64 = call ptr @bcf_seqname(ptr noundef %56, ptr noundef %57), !dbg !2981
  %58 = load ptr, ptr %rec, align 8, !dbg !2982, !tbaa !1228
  %pos65 = getelementptr inbounds %struct.bcf1_t, ptr %58, i32 0, i32 0, !dbg !2983
  %59 = load i64, ptr %pos65, align 8, !dbg !2983, !tbaa !2917
  %add66 = add i64 %59, 1, !dbg !2984
  %60 = load ptr, ptr %msg, align 8, !dbg !2985, !tbaa !1228
  %call67 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %55, ptr noundef @.str.112, ptr noundef %call64, i64 noundef %add66, ptr noundef %60), !dbg !2986
  store i32 0, ptr %retval, align 4, !dbg !2987
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2987

cleanup:                                          ; preds = %not_okay, %for.end63, %if.then54, %if.then46, %for.end, %if.then2
  call void @llvm.lifetime.end.p0(i64 8, ptr %rec) #14, !dbg !2988
  call void @llvm.lifetime.end.p0(i64 8, ptr %hdr) #14, !dbg !2988
  call void @llvm.lifetime.end.p0(i64 8, ptr %msg) #14, !dbg !2988
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #14, !dbg !2988
  %61 = load i32, ptr %retval, align 4, !dbg !2988
  ret i32 %61, !dbg !2988
}

; Function Attrs: nounwind
declare !dbg !2989 i32 @gettimeofday(ptr noundef, ptr noundef) #3

; Function Attrs: nounwind uwtable
define internal void @process_line(ptr noundef %args) #0 !dbg !2996 {
entry:
  %args.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %nqry1 = alloca i32, align 4
  %ngt1 = alloca i32, align 4
  %ret = alloca i32, align 4
  %gt_rec = alloca ptr, align 8
  %qry_rec = alloca ptr, align 8
  %qry_use_GT = alloca i32, align 4
  %gt_use_GT = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %af = alloca double, align 8
  %hwe_dsg = alloca [8 x double], align 16
  %ac = alloca [2 x i32], align 4
  %hwe = alloca [3 x double], align 16
  %min_af = alloca double, align 8
  %ndiff = alloca i32, align 4
  %ptr = alloca ptr, align 8
  %qry_dsg = alloca i8, align 1
  %gt_dsg = alloca i8, align 1
  %match = alloca i32, align 4
  %ptr217 = alloca ptr, align 8
  %qry_prob = alloca [3 x double], align 16
  %gt_prob = alloca [3 x double], align 16
  %qry_dsg218 = alloca i8, align 1
  %gt_dsg219 = alloca i8, align 1
  %min = alloca double, align 8
  %match301 = alloca i32, align 4
  %idx = alloca i32, align 4
  %iqry335 = alloca i32, align 4
  %ptr344 = alloca ptr, align 8
  %igt371 = alloca i32, align 4
  %ptr380 = alloca ptr, align 8
  %ngt = alloca i32, align 4
  %match446 = alloca i32, align 4
  %iqry494 = alloca i32, align 4
  %ptr504 = alloca ptr, align 8
  %igt541 = alloca i32, align 4
  %ptr551 = alloca ptr, align 8
  %ngt600 = alloca i32, align 4
  %min626 = alloca double, align 8
  %match695 = alloca i32, align 4
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !2998, metadata !DIExpression()), !dbg !3092
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #14, !dbg !3093
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !2999, metadata !DIExpression()), !dbg !3094
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #14, !dbg !3093
  tail call void @llvm.dbg.declare(metadata ptr %j, metadata !3000, metadata !DIExpression()), !dbg !3095
  call void @llvm.lifetime.start.p0(i64 4, ptr %k) #14, !dbg !3093
  tail call void @llvm.dbg.declare(metadata ptr %k, metadata !3001, metadata !DIExpression()), !dbg !3096
  call void @llvm.lifetime.start.p0(i64 4, ptr %nqry1) #14, !dbg !3093
  tail call void @llvm.dbg.declare(metadata ptr %nqry1, metadata !3002, metadata !DIExpression()), !dbg !3097
  call void @llvm.lifetime.start.p0(i64 4, ptr %ngt1) #14, !dbg !3093
  tail call void @llvm.dbg.declare(metadata ptr %ngt1, metadata !3003, metadata !DIExpression()), !dbg !3098
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #14, !dbg !3093
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !3004, metadata !DIExpression()), !dbg !3099
  call void @llvm.lifetime.start.p0(i64 8, ptr %gt_rec) #14, !dbg !3100
  tail call void @llvm.dbg.declare(metadata ptr %gt_rec, metadata !3005, metadata !DIExpression()), !dbg !3101
  store ptr null, ptr %gt_rec, align 8, !dbg !3101, !tbaa !1228
  call void @llvm.lifetime.start.p0(i64 8, ptr %qry_rec) #14, !dbg !3100
  tail call void @llvm.dbg.declare(metadata ptr %qry_rec, metadata !3006, metadata !DIExpression()), !dbg !3102
  %0 = load ptr, ptr %args.addr, align 8, !dbg !3103, !tbaa !1228
  %files = getelementptr inbounds %struct.args_t, ptr %0, i32 0, i32 0, !dbg !3103
  %1 = load ptr, ptr %files, align 8, !dbg !3103, !tbaa !1720
  %has_line = getelementptr inbounds %struct.bcf_srs_t, ptr %1, i32 0, i32 4, !dbg !3103
  %2 = load ptr, ptr %has_line, align 8, !dbg !3103, !tbaa !2897
  %arrayidx = getelementptr i32, ptr %2, i64 0, !dbg !3103
  %3 = load i32, ptr %arrayidx, align 4, !dbg !3103, !tbaa !1223
  %tobool = icmp ne i32 %3, 0, !dbg !3103
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3103

cond.true:                                        ; preds = %entry
  %4 = load ptr, ptr %args.addr, align 8, !dbg !3103, !tbaa !1228
  %files1 = getelementptr inbounds %struct.args_t, ptr %4, i32 0, i32 0, !dbg !3103
  %5 = load ptr, ptr %files1, align 8, !dbg !3103, !tbaa !1720
  %readers = getelementptr inbounds %struct.bcf_srs_t, ptr %5, i32 0, i32 6, !dbg !3103
  %6 = load ptr, ptr %readers, align 8, !dbg !3103, !tbaa !2098
  %arrayidx2 = getelementptr %struct.bcf_sr_t, ptr %6, i64 0, !dbg !3103
  %buffer = getelementptr inbounds %struct.bcf_sr_t, ptr %arrayidx2, i32 0, i32 6, !dbg !3103
  %7 = load ptr, ptr %buffer, align 8, !dbg !3103, !tbaa !2898
  %arrayidx3 = getelementptr ptr, ptr %7, i64 0, !dbg !3103
  %8 = load ptr, ptr %arrayidx3, align 8, !dbg !3103, !tbaa !1228
  br label %cond.end, !dbg !3103

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3103

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %8, %cond.true ], [ null, %cond.false ], !dbg !3103
  store ptr %cond, ptr %qry_rec, align 8, !dbg !3102, !tbaa !1228
  call void @llvm.lifetime.start.p0(i64 4, ptr %qry_use_GT) #14, !dbg !3104
  tail call void @llvm.dbg.declare(metadata ptr %qry_use_GT, metadata !3007, metadata !DIExpression()), !dbg !3105
  %9 = load ptr, ptr %args.addr, align 8, !dbg !3106, !tbaa !1228
  %qry_use_GT4 = getelementptr inbounds %struct.args_t, ptr %9, i32 0, i32 20, !dbg !3107
  %10 = load i32, ptr %qry_use_GT4, align 8, !dbg !3107, !tbaa !1254
  store i32 %10, ptr %qry_use_GT, align 4, !dbg !3105, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 4, ptr %gt_use_GT) #14, !dbg !3108
  tail call void @llvm.dbg.declare(metadata ptr %gt_use_GT, metadata !3008, metadata !DIExpression()), !dbg !3109
  %11 = load ptr, ptr %args.addr, align 8, !dbg !3110, !tbaa !1228
  %gt_use_GT5 = getelementptr inbounds %struct.args_t, ptr %11, i32 0, i32 21, !dbg !3111
  %12 = load i32, ptr %gt_use_GT5, align 4, !dbg !3111, !tbaa !1258
  store i32 %12, ptr %gt_use_GT, align 4, !dbg !3109, !tbaa !1223
  %13 = load ptr, ptr %args.addr, align 8, !dbg !3112, !tbaa !1228
  %14 = load ptr, ptr %args.addr, align 8, !dbg !3113, !tbaa !1228
  %qry_hdr = getelementptr inbounds %struct.args_t, ptr %14, i32 0, i32 2, !dbg !3114
  %15 = load ptr, ptr %qry_hdr, align 8, !dbg !3114, !tbaa !2104
  %16 = load ptr, ptr %qry_rec, align 8, !dbg !3115, !tbaa !1228
  %17 = load ptr, ptr %args.addr, align 8, !dbg !3116, !tbaa !1228
  %qry_arr = getelementptr inbounds %struct.args_t, ptr %17, i32 0, i32 33, !dbg !3117
  %18 = load ptr, ptr %args.addr, align 8, !dbg !3118, !tbaa !1228
  %nqry_arr = getelementptr inbounds %struct.args_t, ptr %18, i32 0, i32 35, !dbg !3119
  %call = call i32 @set_data(ptr noundef %13, ptr noundef %15, ptr noundef %16, ptr noundef %qry_arr, ptr noundef %nqry_arr, ptr noundef %nqry1, ptr noundef %qry_use_GT), !dbg !3120
  store i32 %call, ptr %ret, align 4, !dbg !3121, !tbaa !1223
  %19 = load i32, ptr %ret, align 4, !dbg !3122, !tbaa !1223
  %cmp = icmp slt i32 %19, 0, !dbg !3124
  br i1 %cmp, label %if.then, label %if.end, !dbg !3125

if.then:                                          ; preds = %cond.end
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup729, !dbg !3126

if.end:                                           ; preds = %cond.end
  %20 = load ptr, ptr %args.addr, align 8, !dbg !3127, !tbaa !1228
  %gt_hdr = getelementptr inbounds %struct.args_t, ptr %20, i32 0, i32 1, !dbg !3129
  %21 = load ptr, ptr %gt_hdr, align 8, !dbg !3129, !tbaa !2120
  %tobool6 = icmp ne ptr %21, null, !dbg !3127
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !3130

if.then7:                                         ; preds = %if.end
  %22 = load ptr, ptr %args.addr, align 8, !dbg !3131, !tbaa !1228
  %files8 = getelementptr inbounds %struct.args_t, ptr %22, i32 0, i32 0, !dbg !3131
  %23 = load ptr, ptr %files8, align 8, !dbg !3131, !tbaa !1720
  %has_line9 = getelementptr inbounds %struct.bcf_srs_t, ptr %23, i32 0, i32 4, !dbg !3131
  %24 = load ptr, ptr %has_line9, align 8, !dbg !3131, !tbaa !2897
  %arrayidx10 = getelementptr i32, ptr %24, i64 1, !dbg !3131
  %25 = load i32, ptr %arrayidx10, align 4, !dbg !3131, !tbaa !1223
  %tobool11 = icmp ne i32 %25, 0, !dbg !3131
  br i1 %tobool11, label %cond.true12, label %cond.false18, !dbg !3131

cond.true12:                                      ; preds = %if.then7
  %26 = load ptr, ptr %args.addr, align 8, !dbg !3131, !tbaa !1228
  %files13 = getelementptr inbounds %struct.args_t, ptr %26, i32 0, i32 0, !dbg !3131
  %27 = load ptr, ptr %files13, align 8, !dbg !3131, !tbaa !1720
  %readers14 = getelementptr inbounds %struct.bcf_srs_t, ptr %27, i32 0, i32 6, !dbg !3131
  %28 = load ptr, ptr %readers14, align 8, !dbg !3131, !tbaa !2098
  %arrayidx15 = getelementptr %struct.bcf_sr_t, ptr %28, i64 1, !dbg !3131
  %buffer16 = getelementptr inbounds %struct.bcf_sr_t, ptr %arrayidx15, i32 0, i32 6, !dbg !3131
  %29 = load ptr, ptr %buffer16, align 8, !dbg !3131, !tbaa !2898
  %arrayidx17 = getelementptr ptr, ptr %29, i64 0, !dbg !3131
  %30 = load ptr, ptr %arrayidx17, align 8, !dbg !3131, !tbaa !1228
  br label %cond.end19, !dbg !3131

cond.false18:                                     ; preds = %if.then7
  br label %cond.end19, !dbg !3131

cond.end19:                                       ; preds = %cond.false18, %cond.true12
  %cond20 = phi ptr [ %30, %cond.true12 ], [ null, %cond.false18 ], !dbg !3131
  store ptr %cond20, ptr %gt_rec, align 8, !dbg !3133, !tbaa !1228
  %31 = load ptr, ptr %args.addr, align 8, !dbg !3134, !tbaa !1228
  %32 = load ptr, ptr %args.addr, align 8, !dbg !3135, !tbaa !1228
  %gt_hdr21 = getelementptr inbounds %struct.args_t, ptr %32, i32 0, i32 1, !dbg !3136
  %33 = load ptr, ptr %gt_hdr21, align 8, !dbg !3136, !tbaa !2120
  %34 = load ptr, ptr %gt_rec, align 8, !dbg !3137, !tbaa !1228
  %35 = load ptr, ptr %args.addr, align 8, !dbg !3138, !tbaa !1228
  %gt_arr = getelementptr inbounds %struct.args_t, ptr %35, i32 0, i32 34, !dbg !3139
  %36 = load ptr, ptr %args.addr, align 8, !dbg !3140, !tbaa !1228
  %ngt_arr = getelementptr inbounds %struct.args_t, ptr %36, i32 0, i32 36, !dbg !3141
  %call22 = call i32 @set_data(ptr noundef %31, ptr noundef %33, ptr noundef %34, ptr noundef %gt_arr, ptr noundef %ngt_arr, ptr noundef %ngt1, ptr noundef %gt_use_GT), !dbg !3142
  store i32 %call22, ptr %ret, align 4, !dbg !3143, !tbaa !1223
  %37 = load i32, ptr %ret, align 4, !dbg !3144, !tbaa !1223
  %cmp23 = icmp slt i32 %37, 0, !dbg !3146
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !3147

if.then24:                                        ; preds = %cond.end19
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup729, !dbg !3148

if.end25:                                         ; preds = %cond.end19
  br label %if.end28, !dbg !3149

if.else:                                          ; preds = %if.end
  %38 = load i32, ptr %nqry1, align 4, !dbg !3150, !tbaa !1223
  store i32 %38, ptr %ngt1, align 4, !dbg !3152, !tbaa !1223
  %39 = load ptr, ptr %args.addr, align 8, !dbg !3153, !tbaa !1228
  %qry_arr26 = getelementptr inbounds %struct.args_t, ptr %39, i32 0, i32 33, !dbg !3154
  %40 = load ptr, ptr %qry_arr26, align 8, !dbg !3154, !tbaa !3155
  %41 = load ptr, ptr %args.addr, align 8, !dbg !3156, !tbaa !1228
  %gt_arr27 = getelementptr inbounds %struct.args_t, ptr %41, i32 0, i32 34, !dbg !3157
  store ptr %40, ptr %gt_arr27, align 8, !dbg !3158, !tbaa !3159
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.end25
  %42 = load ptr, ptr %args.addr, align 8, !dbg !3160, !tbaa !1228
  %ncmp = getelementptr inbounds %struct.args_t, ptr %42, i32 0, i32 31, !dbg !3161
  %43 = load i32, ptr %ncmp, align 8, !dbg !3162, !tbaa !1737
  %inc = add i32 %43, 1, !dbg !3162
  store i32 %inc, ptr %ncmp, align 8, !dbg !3162, !tbaa !1737
  call void @llvm.lifetime.start.p0(i64 8, ptr %af) #14, !dbg !3163
  tail call void @llvm.dbg.declare(metadata ptr %af, metadata !3009, metadata !DIExpression()), !dbg !3164
  call void @llvm.lifetime.start.p0(i64 64, ptr %hwe_dsg) #14, !dbg !3163
  tail call void @llvm.dbg.declare(metadata ptr %hwe_dsg, metadata !3010, metadata !DIExpression()), !dbg !3165
  %44 = load ptr, ptr %args.addr, align 8, !dbg !3166, !tbaa !1228
  %calc_hwe_prob = getelementptr inbounds %struct.args_t, ptr %44, i32 0, i32 49, !dbg !3167
  %45 = load i32, ptr %calc_hwe_prob, align 8, !dbg !3167, !tbaa !1262
  %tobool29 = icmp ne i32 %45, 0, !dbg !3166
  br i1 %tobool29, label %if.then30, label %if.end116, !dbg !3168

if.then30:                                        ; preds = %if.end28
  call void @llvm.lifetime.start.p0(i64 8, ptr %ac) #14, !dbg !3169
  tail call void @llvm.dbg.declare(metadata ptr %ac, metadata !3012, metadata !DIExpression()), !dbg !3170
  %46 = load ptr, ptr %args.addr, align 8, !dbg !3171, !tbaa !1228
  %gt_hdr31 = getelementptr inbounds %struct.args_t, ptr %46, i32 0, i32 1, !dbg !3173
  %47 = load ptr, ptr %gt_hdr31, align 8, !dbg !3173, !tbaa !2120
  %tobool32 = icmp ne ptr %47, null, !dbg !3171
  br i1 %tobool32, label %if.then33, label %if.else39, !dbg !3174

if.then33:                                        ; preds = %if.then30
  %48 = load ptr, ptr %args.addr, align 8, !dbg !3175, !tbaa !1228
  %gt_hdr34 = getelementptr inbounds %struct.args_t, ptr %48, i32 0, i32 1, !dbg !3178
  %49 = load ptr, ptr %gt_hdr34, align 8, !dbg !3178, !tbaa !2120
  %50 = load ptr, ptr %gt_rec, align 8, !dbg !3179, !tbaa !1228
  %arraydecay = getelementptr inbounds [2 x i32], ptr %ac, i64 0, i64 0, !dbg !3180
  %call35 = call i32 @bcf_calc_ac(ptr noundef %49, ptr noundef %50, ptr noundef %arraydecay, i32 noundef 12), !dbg !3181
  %cmp36 = icmp ne i32 %call35, 1, !dbg !3182
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !3183

if.then37:                                        ; preds = %if.then33
  call void (ptr, ...) @error(ptr noundef @.str.113) #16, !dbg !3184
  unreachable, !dbg !3184

if.end38:                                         ; preds = %if.then33
  br label %if.end46, !dbg !3185

if.else39:                                        ; preds = %if.then30
  %51 = load ptr, ptr %args.addr, align 8, !dbg !3186, !tbaa !1228
  %qry_hdr40 = getelementptr inbounds %struct.args_t, ptr %51, i32 0, i32 2, !dbg !3188
  %52 = load ptr, ptr %qry_hdr40, align 8, !dbg !3188, !tbaa !2104
  %53 = load ptr, ptr %qry_rec, align 8, !dbg !3189, !tbaa !1228
  %arraydecay41 = getelementptr inbounds [2 x i32], ptr %ac, i64 0, i64 0, !dbg !3190
  %call42 = call i32 @bcf_calc_ac(ptr noundef %52, ptr noundef %53, ptr noundef %arraydecay41, i32 noundef 12), !dbg !3191
  %cmp43 = icmp ne i32 %call42, 1, !dbg !3192
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !3193

if.then44:                                        ; preds = %if.else39
  call void (ptr, ...) @error(ptr noundef @.str.113) #16, !dbg !3194
  unreachable, !dbg !3194

if.end45:                                         ; preds = %if.else39
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end38
  call void @llvm.lifetime.start.p0(i64 24, ptr %hwe) #14, !dbg !3195
  tail call void @llvm.dbg.declare(metadata ptr %hwe, metadata !3016, metadata !DIExpression()), !dbg !3196
  call void @llvm.lifetime.start.p0(i64 8, ptr %min_af) #14, !dbg !3197
  tail call void @llvm.dbg.declare(metadata ptr %min_af, metadata !3018, metadata !DIExpression()), !dbg !3198
  store double 1.000000e-05, ptr %min_af, align 8, !dbg !3198, !tbaa !1761
  %arrayidx47 = getelementptr [2 x i32], ptr %ac, i64 0, i64 1, !dbg !3199
  %54 = load i32, ptr %arrayidx47, align 4, !dbg !3199, !tbaa !1223
  %conv = sitofp i32 %54 to double, !dbg !3200
  %arrayidx48 = getelementptr [2 x i32], ptr %ac, i64 0, i64 0, !dbg !3201
  %55 = load i32, ptr %arrayidx48, align 4, !dbg !3201, !tbaa !1223
  %arrayidx49 = getelementptr [2 x i32], ptr %ac, i64 0, i64 1, !dbg !3202
  %56 = load i32, ptr %arrayidx49, align 4, !dbg !3202, !tbaa !1223
  %add = add i32 %55, %56, !dbg !3203
  %conv50 = sitofp i32 %add to double, !dbg !3204
  %div = fdiv double %conv, %conv50, !dbg !3205
  store double %div, ptr %af, align 8, !dbg !3206, !tbaa !1761
  %57 = load double, ptr %af, align 8, !dbg !3207, !tbaa !1761
  %cmp51 = fcmp ogt double %57, 1.000000e-05, !dbg !3208
  br i1 %cmp51, label %cond.true53, label %cond.false55, !dbg !3207

cond.true53:                                      ; preds = %if.end46
  %58 = load double, ptr %af, align 8, !dbg !3209, !tbaa !1761
  %59 = load double, ptr %af, align 8, !dbg !3210, !tbaa !1761
  %mul = fmul double %58, %59, !dbg !3211
  %call54 = call double @log(double noundef %mul) #14, !dbg !3212
  %fneg = fneg double %call54, !dbg !3213
  br label %cond.end58, !dbg !3207

cond.false55:                                     ; preds = %if.end46
  %call56 = call double @log(double noundef 0x3DDB7CDFD9D7BDBC) #14, !dbg !3214
  %fneg57 = fneg double %call56, !dbg !3215
  br label %cond.end58, !dbg !3207

cond.end58:                                       ; preds = %cond.false55, %cond.true53
  %cond59 = phi double [ %fneg, %cond.true53 ], [ %fneg57, %cond.false55 ], !dbg !3207
  %arrayidx60 = getelementptr [3 x double], ptr %hwe, i64 0, i64 0, !dbg !3216
  store double %cond59, ptr %arrayidx60, align 16, !dbg !3217, !tbaa !1761
  %60 = load double, ptr %af, align 8, !dbg !3218, !tbaa !1761
  %cmp61 = fcmp ogt double %60, 1.000000e-05, !dbg !3219
  br i1 %cmp61, label %land.lhs.true, label %cond.false70, !dbg !3220

land.lhs.true:                                    ; preds = %cond.end58
  %61 = load double, ptr %af, align 8, !dbg !3221, !tbaa !1761
  %cmp63 = fcmp olt double %61, 9.999900e-01, !dbg !3222
  br i1 %cmp63, label %cond.true65, label %cond.false70, !dbg !3218

cond.true65:                                      ; preds = %land.lhs.true
  %62 = load double, ptr %af, align 8, !dbg !3223, !tbaa !1761
  %mul66 = fmul double 2.000000e+00, %62, !dbg !3224
  %63 = load double, ptr %af, align 8, !dbg !3225, !tbaa !1761
  %sub = fsub double 1.000000e+00, %63, !dbg !3226
  %mul67 = fmul double %mul66, %sub, !dbg !3227
  %call68 = call double @log(double noundef %mul67) #14, !dbg !3228
  %fneg69 = fneg double %call68, !dbg !3229
  br label %cond.end73, !dbg !3218

cond.false70:                                     ; preds = %land.lhs.true, %cond.end58
  %call71 = call double @log(double noundef 1.999980e-05) #14, !dbg !3230
  %fneg72 = fneg double %call71, !dbg !3231
  br label %cond.end73, !dbg !3218

cond.end73:                                       ; preds = %cond.false70, %cond.true65
  %cond74 = phi double [ %fneg69, %cond.true65 ], [ %fneg72, %cond.false70 ], !dbg !3218
  %arrayidx75 = getelementptr [3 x double], ptr %hwe, i64 0, i64 1, !dbg !3232
  store double %cond74, ptr %arrayidx75, align 8, !dbg !3233, !tbaa !1761
  %64 = load double, ptr %af, align 8, !dbg !3234, !tbaa !1761
  %cmp76 = fcmp olt double %64, 9.999900e-01, !dbg !3235
  br i1 %cmp76, label %cond.true78, label %cond.false84, !dbg !3234

cond.true78:                                      ; preds = %cond.end73
  %65 = load double, ptr %af, align 8, !dbg !3236, !tbaa !1761
  %sub79 = fsub double 1.000000e+00, %65, !dbg !3237
  %66 = load double, ptr %af, align 8, !dbg !3238, !tbaa !1761
  %sub80 = fsub double 1.000000e+00, %66, !dbg !3239
  %mul81 = fmul double %sub79, %sub80, !dbg !3240
  %call82 = call double @log(double noundef %mul81) #14, !dbg !3241
  %fneg83 = fneg double %call82, !dbg !3242
  br label %cond.end87, !dbg !3234

cond.false84:                                     ; preds = %cond.end73
  %call85 = call double @log(double noundef 0x3DDB7CDFD9D7BDBC) #14, !dbg !3243
  %fneg86 = fneg double %call85, !dbg !3244
  br label %cond.end87, !dbg !3234

cond.end87:                                       ; preds = %cond.false84, %cond.true78
  %cond88 = phi double [ %fneg83, %cond.true78 ], [ %fneg86, %cond.false84 ], !dbg !3234
  %arrayidx89 = getelementptr [3 x double], ptr %hwe, i64 0, i64 2, !dbg !3245
  store double %cond88, ptr %arrayidx89, align 16, !dbg !3246, !tbaa !1761
  %arrayidx90 = getelementptr [8 x double], ptr %hwe_dsg, i64 0, i64 0, !dbg !3247
  store double 0.000000e+00, ptr %arrayidx90, align 16, !dbg !3248, !tbaa !1761
  store i32 1, ptr %i, align 4, !dbg !3249, !tbaa !1223
  br label %for.cond, !dbg !3251

for.cond:                                         ; preds = %for.inc113, %cond.end87
  %67 = load i32, ptr %i, align 4, !dbg !3252, !tbaa !1223
  %cmp91 = icmp slt i32 %67, 8, !dbg !3254
  br i1 %cmp91, label %for.body, label %for.end115, !dbg !3255

for.body:                                         ; preds = %for.cond
  %68 = load i32, ptr %i, align 4, !dbg !3256, !tbaa !1223
  %idxprom = sext i32 %68 to i64, !dbg !3258
  %arrayidx93 = getelementptr [8 x double], ptr %hwe_dsg, i64 0, i64 %idxprom, !dbg !3258
  store double 0x7FF0000000000000, ptr %arrayidx93, align 8, !dbg !3259, !tbaa !1761
  store i32 0, ptr %k, align 4, !dbg !3260, !tbaa !1223
  br label %for.cond94, !dbg !3262

for.cond94:                                       ; preds = %for.inc, %for.body
  %69 = load i32, ptr %k, align 4, !dbg !3263, !tbaa !1223
  %cmp95 = icmp slt i32 %69, 3, !dbg !3265
  br i1 %cmp95, label %for.body97, label %for.end, !dbg !3266

for.body97:                                       ; preds = %for.cond94
  %70 = load i32, ptr %k, align 4, !dbg !3267, !tbaa !1223
  %shl = shl i32 1, %70, !dbg !3270
  %71 = load i32, ptr %i, align 4, !dbg !3271, !tbaa !1223
  %and = and i32 %shl, %71, !dbg !3272
  %tobool98 = icmp ne i32 %and, 0, !dbg !3272
  br i1 %tobool98, label %land.lhs.true99, label %if.end111, !dbg !3273

land.lhs.true99:                                  ; preds = %for.body97
  %72 = load i32, ptr %i, align 4, !dbg !3274, !tbaa !1223
  %idxprom100 = sext i32 %72 to i64, !dbg !3275
  %arrayidx101 = getelementptr [8 x double], ptr %hwe_dsg, i64 0, i64 %idxprom100, !dbg !3275
  %73 = load double, ptr %arrayidx101, align 8, !dbg !3275, !tbaa !1761
  %74 = load i32, ptr %k, align 4, !dbg !3276, !tbaa !1223
  %idxprom102 = sext i32 %74 to i64, !dbg !3277
  %arrayidx103 = getelementptr [3 x double], ptr %hwe, i64 0, i64 %idxprom102, !dbg !3277
  %75 = load double, ptr %arrayidx103, align 8, !dbg !3277, !tbaa !1761
  %cmp104 = fcmp ogt double %73, %75, !dbg !3278
  br i1 %cmp104, label %if.then106, label %if.end111, !dbg !3279

if.then106:                                       ; preds = %land.lhs.true99
  %76 = load i32, ptr %k, align 4, !dbg !3280, !tbaa !1223
  %idxprom107 = sext i32 %76 to i64, !dbg !3281
  %arrayidx108 = getelementptr [3 x double], ptr %hwe, i64 0, i64 %idxprom107, !dbg !3281
  %77 = load double, ptr %arrayidx108, align 8, !dbg !3281, !tbaa !1761
  %78 = load i32, ptr %i, align 4, !dbg !3282, !tbaa !1223
  %idxprom109 = sext i32 %78 to i64, !dbg !3283
  %arrayidx110 = getelementptr [8 x double], ptr %hwe_dsg, i64 0, i64 %idxprom109, !dbg !3283
  store double %77, ptr %arrayidx110, align 8, !dbg !3284, !tbaa !1761
  br label %if.end111, !dbg !3283

if.end111:                                        ; preds = %if.then106, %land.lhs.true99, %for.body97
  br label %for.inc, !dbg !3285

for.inc:                                          ; preds = %if.end111
  %79 = load i32, ptr %k, align 4, !dbg !3286, !tbaa !1223
  %inc112 = add i32 %79, 1, !dbg !3286
  store i32 %inc112, ptr %k, align 4, !dbg !3286, !tbaa !1223
  br label %for.cond94, !dbg !3287, !llvm.loop !3288

for.end:                                          ; preds = %for.cond94
  br label %for.inc113, !dbg !3290

for.inc113:                                       ; preds = %for.end
  %80 = load i32, ptr %i, align 4, !dbg !3291, !tbaa !1223
  %inc114 = add i32 %80, 1, !dbg !3291
  store i32 %inc114, ptr %i, align 4, !dbg !3291, !tbaa !1223
  br label %for.cond, !dbg !3292, !llvm.loop !3293

for.end115:                                       ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %min_af) #14, !dbg !3295
  call void @llvm.lifetime.end.p0(i64 24, ptr %hwe) #14, !dbg !3295
  call void @llvm.lifetime.end.p0(i64 8, ptr %ac) #14, !dbg !3295
  br label %if.end116, !dbg !3296

if.end116:                                        ; preds = %for.end115, %if.end28
  %81 = load ptr, ptr %args.addr, align 8, !dbg !3297, !tbaa !1228
  %pairs = getelementptr inbounds %struct.args_t, ptr %81, i32 0, i32 39, !dbg !3298
  %82 = load ptr, ptr %pairs, align 8, !dbg !3298, !tbaa !2341
  %tobool117 = icmp ne ptr %82, null, !dbg !3297
  br i1 %tobool117, label %if.then118, label %if.end327, !dbg !3299

if.then118:                                       ; preds = %if.end116
  %83 = load ptr, ptr %args.addr, align 8, !dbg !3300, !tbaa !1228
  %use_PLs = getelementptr inbounds %struct.args_t, ptr %83, i32 0, i32 52, !dbg !3301
  %84 = load i32, ptr %use_PLs, align 4, !dbg !3301, !tbaa !1266
  %tobool119 = icmp ne i32 %84, 0, !dbg !3300
  br i1 %tobool119, label %if.else211, label %if.then120, !dbg !3302

if.then120:                                       ; preds = %if.then118
  call void @llvm.lifetime.start.p0(i64 4, ptr %ndiff) #14, !dbg !3303
  tail call void @llvm.dbg.declare(metadata ptr %ndiff, metadata !3020, metadata !DIExpression()), !dbg !3304
  store i32 0, ptr %ndiff, align 4, !dbg !3304, !tbaa !1223
  %85 = load ptr, ptr %args.addr, align 8, !dbg !3305, !tbaa !1228
  %kbs_diff = getelementptr inbounds %struct.args_t, ptr %85, i32 0, i32 61, !dbg !3307
  %86 = load ptr, ptr %kbs_diff, align 8, !dbg !3307, !tbaa !3308
  %tobool121 = icmp ne ptr %86, null, !dbg !3305
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !3309

if.then122:                                       ; preds = %if.then120
  %87 = load ptr, ptr %args.addr, align 8, !dbg !3310, !tbaa !1228
  call void @diff_sites_reset(ptr noundef %87), !dbg !3311
  br label %if.end123, !dbg !3311

if.end123:                                        ; preds = %if.then122, %if.then120
  store i32 0, ptr %i, align 4, !dbg !3312, !tbaa !1223
  br label %for.cond124, !dbg !3313

for.cond124:                                      ; preds = %for.inc204, %if.end123
  %88 = load i32, ptr %i, align 4, !dbg !3314, !tbaa !1223
  %89 = load ptr, ptr %args.addr, align 8, !dbg !3315, !tbaa !1228
  %npairs = getelementptr inbounds %struct.args_t, ptr %89, i32 0, i32 32, !dbg !3316
  %90 = load i32, ptr %npairs, align 4, !dbg !3316, !tbaa !2334
  %cmp125 = icmp ult i32 %88, %90, !dbg !3317
  br i1 %cmp125, label %for.body127, label %for.end206, !dbg !3318

for.body127:                                      ; preds = %for.cond124
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr) #14, !dbg !3319
  tail call void @llvm.dbg.declare(metadata ptr %ptr, metadata !3025, metadata !DIExpression()), !dbg !3320
  call void @llvm.lifetime.start.p0(i64 1, ptr %qry_dsg) #14, !dbg !3321
  tail call void @llvm.dbg.declare(metadata ptr %qry_dsg, metadata !3029, metadata !DIExpression()), !dbg !3322
  call void @llvm.lifetime.start.p0(i64 1, ptr %gt_dsg) #14, !dbg !3321
  tail call void @llvm.dbg.declare(metadata ptr %gt_dsg, metadata !3030, metadata !DIExpression()), !dbg !3323
  %91 = load ptr, ptr %args.addr, align 8, !dbg !3324, !tbaa !1228
  %gt_arr128 = getelementptr inbounds %struct.args_t, ptr %91, i32 0, i32 34, !dbg !3325
  %92 = load ptr, ptr %gt_arr128, align 8, !dbg !3325, !tbaa !3159
  %93 = load ptr, ptr %args.addr, align 8, !dbg !3326, !tbaa !1228
  %pairs129 = getelementptr inbounds %struct.args_t, ptr %93, i32 0, i32 39, !dbg !3327
  %94 = load ptr, ptr %pairs129, align 8, !dbg !3327, !tbaa !2341
  %95 = load i32, ptr %i, align 4, !dbg !3328, !tbaa !1223
  %idxprom130 = sext i32 %95 to i64, !dbg !3326
  %arrayidx131 = getelementptr %struct.pair_t, ptr %94, i64 %idxprom130, !dbg !3326
  %igt = getelementptr inbounds %struct.pair_t, ptr %arrayidx131, i32 0, i32 1, !dbg !3329
  %96 = load i32, ptr %igt, align 4, !dbg !3329, !tbaa !2385
  %97 = load i32, ptr %ngt1, align 4, !dbg !3330, !tbaa !1223
  %mul132 = mul i32 %96, %97, !dbg !3331
  %idx.ext = sext i32 %mul132 to i64, !dbg !3332
  %add.ptr = getelementptr i32, ptr %92, i64 %idx.ext, !dbg !3332
  store ptr %add.ptr, ptr %ptr, align 8, !dbg !3333, !tbaa !1228
  %98 = load i32, ptr %gt_use_GT, align 4, !dbg !3334, !tbaa !1223
  %tobool133 = icmp ne i32 %98, 0, !dbg !3334
  br i1 %tobool133, label %cond.true134, label %cond.false137, !dbg !3334

cond.true134:                                     ; preds = %for.body127
  %99 = load ptr, ptr %ptr, align 8, !dbg !3335, !tbaa !1228
  %call135 = call zeroext i8 @gt_to_dsg(ptr noundef %99), !dbg !3336
  %conv136 = zext i8 %call135 to i32, !dbg !3336
  br label %cond.end140, !dbg !3334

cond.false137:                                    ; preds = %for.body127
  %100 = load ptr, ptr %ptr, align 8, !dbg !3337, !tbaa !1228
  %call138 = call zeroext i8 @pl_to_dsg(ptr noundef %100), !dbg !3338
  %conv139 = zext i8 %call138 to i32, !dbg !3338
  br label %cond.end140, !dbg !3334

cond.end140:                                      ; preds = %cond.false137, %cond.true134
  %cond141 = phi i32 [ %conv136, %cond.true134 ], [ %conv139, %cond.false137 ], !dbg !3334
  %conv142 = trunc i32 %cond141 to i8, !dbg !3334
  store i8 %conv142, ptr %gt_dsg, align 1, !dbg !3339, !tbaa !1312
  %101 = load i8, ptr %gt_dsg, align 1, !dbg !3340, !tbaa !1312
  %tobool143 = icmp ne i8 %101, 0, !dbg !3340
  br i1 %tobool143, label %if.end145, label %if.then144, !dbg !3342

if.then144:                                       ; preds = %cond.end140
  store i32 10, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3343

if.end145:                                        ; preds = %cond.end140
  %102 = load ptr, ptr %args.addr, align 8, !dbg !3344, !tbaa !1228
  %hom_only = getelementptr inbounds %struct.args_t, ptr %102, i32 0, i32 46, !dbg !3346
  %103 = load i32, ptr %hom_only, align 4, !dbg !3346, !tbaa !1502
  %tobool146 = icmp ne i32 %103, 0, !dbg !3344
  br i1 %tobool146, label %land.lhs.true147, label %if.end152, !dbg !3347

land.lhs.true147:                                 ; preds = %if.end145
  %104 = load i8, ptr %gt_dsg, align 1, !dbg !3348, !tbaa !1312
  %conv148 = zext i8 %104 to i32, !dbg !3348
  %and149 = and i32 %conv148, 5, !dbg !3349
  %tobool150 = icmp ne i32 %and149, 0, !dbg !3349
  br i1 %tobool150, label %if.end152, label %if.then151, !dbg !3350

if.then151:                                       ; preds = %land.lhs.true147
  store i32 10, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3351

if.end152:                                        ; preds = %land.lhs.true147, %if.end145
  %105 = load ptr, ptr %args.addr, align 8, !dbg !3352, !tbaa !1228
  %qry_arr153 = getelementptr inbounds %struct.args_t, ptr %105, i32 0, i32 33, !dbg !3353
  %106 = load ptr, ptr %qry_arr153, align 8, !dbg !3353, !tbaa !3155
  %107 = load ptr, ptr %args.addr, align 8, !dbg !3354, !tbaa !1228
  %pairs154 = getelementptr inbounds %struct.args_t, ptr %107, i32 0, i32 39, !dbg !3355
  %108 = load ptr, ptr %pairs154, align 8, !dbg !3355, !tbaa !2341
  %109 = load i32, ptr %i, align 4, !dbg !3356, !tbaa !1223
  %idxprom155 = sext i32 %109 to i64, !dbg !3354
  %arrayidx156 = getelementptr %struct.pair_t, ptr %108, i64 %idxprom155, !dbg !3354
  %iqry = getelementptr inbounds %struct.pair_t, ptr %arrayidx156, i32 0, i32 0, !dbg !3357
  %110 = load i32, ptr %iqry, align 4, !dbg !3357, !tbaa !2367
  %111 = load i32, ptr %nqry1, align 4, !dbg !3358, !tbaa !1223
  %mul157 = mul i32 %110, %111, !dbg !3359
  %idx.ext158 = sext i32 %mul157 to i64, !dbg !3360
  %add.ptr159 = getelementptr i32, ptr %106, i64 %idx.ext158, !dbg !3360
  store ptr %add.ptr159, ptr %ptr, align 8, !dbg !3361, !tbaa !1228
  %112 = load i32, ptr %qry_use_GT, align 4, !dbg !3362, !tbaa !1223
  %tobool160 = icmp ne i32 %112, 0, !dbg !3362
  br i1 %tobool160, label %cond.true161, label %cond.false164, !dbg !3362

cond.true161:                                     ; preds = %if.end152
  %113 = load ptr, ptr %ptr, align 8, !dbg !3363, !tbaa !1228
  %call162 = call zeroext i8 @gt_to_dsg(ptr noundef %113), !dbg !3364
  %conv163 = zext i8 %call162 to i32, !dbg !3364
  br label %cond.end167, !dbg !3362

cond.false164:                                    ; preds = %if.end152
  %114 = load ptr, ptr %ptr, align 8, !dbg !3365, !tbaa !1228
  %call165 = call zeroext i8 @pl_to_dsg(ptr noundef %114), !dbg !3366
  %conv166 = zext i8 %call165 to i32, !dbg !3366
  br label %cond.end167, !dbg !3362

cond.end167:                                      ; preds = %cond.false164, %cond.true161
  %cond168 = phi i32 [ %conv163, %cond.true161 ], [ %conv166, %cond.false164 ], !dbg !3362
  %conv169 = trunc i32 %cond168 to i8, !dbg !3362
  store i8 %conv169, ptr %qry_dsg, align 1, !dbg !3367, !tbaa !1312
  %115 = load i8, ptr %qry_dsg, align 1, !dbg !3368, !tbaa !1312
  %tobool170 = icmp ne i8 %115, 0, !dbg !3368
  br i1 %tobool170, label %if.end172, label %if.then171, !dbg !3370

if.then171:                                       ; preds = %cond.end167
  store i32 10, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3371

if.end172:                                        ; preds = %cond.end167
  call void @llvm.lifetime.start.p0(i64 4, ptr %match) #14, !dbg !3372
  tail call void @llvm.dbg.declare(metadata ptr %match, metadata !3031, metadata !DIExpression()), !dbg !3373
  %116 = load i8, ptr %qry_dsg, align 1, !dbg !3374, !tbaa !1312
  %conv173 = zext i8 %116 to i32, !dbg !3374
  %117 = load i8, ptr %gt_dsg, align 1, !dbg !3375, !tbaa !1312
  %conv174 = zext i8 %117 to i32, !dbg !3375
  %and175 = and i32 %conv173, %conv174, !dbg !3376
  store i32 %and175, ptr %match, align 4, !dbg !3373, !tbaa !1223
  %118 = load i32, ptr %match, align 4, !dbg !3377, !tbaa !1223
  %tobool176 = icmp ne i32 %118, 0, !dbg !3377
  br i1 %tobool176, label %if.else188, label %if.then177, !dbg !3379

if.then177:                                       ; preds = %if.end172
  %119 = load ptr, ptr %args.addr, align 8, !dbg !3380, !tbaa !1228
  %ndiff178 = getelementptr inbounds %struct.args_t, ptr %119, i32 0, i32 29, !dbg !3382
  %120 = load ptr, ptr %ndiff178, align 8, !dbg !3382, !tbaa !2795
  %121 = load i32, ptr %i, align 4, !dbg !3383, !tbaa !1223
  %idxprom179 = sext i32 %121 to i64, !dbg !3380
  %arrayidx180 = getelementptr i32, ptr %120, i64 %idxprom179, !dbg !3380
  %122 = load i32, ptr %arrayidx180, align 4, !dbg !3384, !tbaa !1223
  %inc181 = add i32 %122, 1, !dbg !3384
  store i32 %inc181, ptr %arrayidx180, align 4, !dbg !3384, !tbaa !1223
  %123 = load ptr, ptr %args.addr, align 8, !dbg !3385, !tbaa !1228
  %kbs_diff182 = getelementptr inbounds %struct.args_t, ptr %123, i32 0, i32 61, !dbg !3387
  %124 = load ptr, ptr %kbs_diff182, align 8, !dbg !3387, !tbaa !3308
  %tobool183 = icmp ne ptr %124, null, !dbg !3385
  br i1 %tobool183, label %if.then184, label %if.end187, !dbg !3388

if.then184:                                       ; preds = %if.then177
  %125 = load i32, ptr %ndiff, align 4, !dbg !3389, !tbaa !1223
  %inc185 = add i32 %125, 1, !dbg !3389
  store i32 %inc185, ptr %ndiff, align 4, !dbg !3389, !tbaa !1223
  %126 = load ptr, ptr %args.addr, align 8, !dbg !3391, !tbaa !1228
  %kbs_diff186 = getelementptr inbounds %struct.args_t, ptr %126, i32 0, i32 61, !dbg !3392
  %127 = load ptr, ptr %kbs_diff186, align 8, !dbg !3392, !tbaa !3308
  %128 = load i32, ptr %i, align 4, !dbg !3393, !tbaa !1223
  call void @kbs_insert(ptr noundef %127, i32 noundef %128), !dbg !3394
  br label %if.end187, !dbg !3395

if.end187:                                        ; preds = %if.then184, %if.then177
  br label %if.end198, !dbg !3396

if.else188:                                       ; preds = %if.end172
  %129 = load ptr, ptr %args.addr, align 8, !dbg !3397, !tbaa !1228
  %calc_hwe_prob189 = getelementptr inbounds %struct.args_t, ptr %129, i32 0, i32 49, !dbg !3399
  %130 = load i32, ptr %calc_hwe_prob189, align 8, !dbg !3399, !tbaa !1262
  %tobool190 = icmp ne i32 %130, 0, !dbg !3397
  br i1 %tobool190, label %if.then191, label %if.end197, !dbg !3400

if.then191:                                       ; preds = %if.else188
  %131 = load i32, ptr %match, align 4, !dbg !3401, !tbaa !1223
  %idxprom192 = sext i32 %131 to i64, !dbg !3402
  %arrayidx193 = getelementptr [8 x double], ptr %hwe_dsg, i64 0, i64 %idxprom192, !dbg !3402
  %132 = load double, ptr %arrayidx193, align 8, !dbg !3402, !tbaa !1761
  %133 = load ptr, ptr %args.addr, align 8, !dbg !3403, !tbaa !1228
  %hwe_prob = getelementptr inbounds %struct.args_t, ptr %133, i32 0, i32 40, !dbg !3404
  %134 = load ptr, ptr %hwe_prob, align 8, !dbg !3404, !tbaa !2823
  %135 = load i32, ptr %i, align 4, !dbg !3405, !tbaa !1223
  %idxprom194 = sext i32 %135 to i64, !dbg !3403
  %arrayidx195 = getelementptr double, ptr %134, i64 %idxprom194, !dbg !3403
  %136 = load double, ptr %arrayidx195, align 8, !dbg !3406, !tbaa !1761
  %add196 = fadd double %136, %132, !dbg !3406
  store double %add196, ptr %arrayidx195, align 8, !dbg !3406, !tbaa !1761
  br label %if.end197, !dbg !3403

if.end197:                                        ; preds = %if.then191, %if.else188
  br label %if.end198

if.end198:                                        ; preds = %if.end197, %if.end187
  %137 = load ptr, ptr %args.addr, align 8, !dbg !3407, !tbaa !1228
  %ncnt = getelementptr inbounds %struct.args_t, ptr %137, i32 0, i32 30, !dbg !3408
  %138 = load ptr, ptr %ncnt, align 8, !dbg !3408, !tbaa !2802
  %139 = load i32, ptr %i, align 4, !dbg !3409, !tbaa !1223
  %idxprom199 = sext i32 %139 to i64, !dbg !3407
  %arrayidx200 = getelementptr i32, ptr %138, i64 %idxprom199, !dbg !3407
  %140 = load i32, ptr %arrayidx200, align 4, !dbg !3410, !tbaa !1223
  %inc201 = add i32 %140, 1, !dbg !3410
  store i32 %inc201, ptr %arrayidx200, align 4, !dbg !3410, !tbaa !1223
  call void @llvm.lifetime.end.p0(i64 4, ptr %match) #14, !dbg !3411
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3411
  br label %cleanup, !dbg !3411

cleanup:                                          ; preds = %if.end198, %if.then171, %if.then151, %if.then144
  call void @llvm.lifetime.end.p0(i64 1, ptr %gt_dsg) #14, !dbg !3411
  call void @llvm.lifetime.end.p0(i64 1, ptr %qry_dsg) #14, !dbg !3411
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr) #14, !dbg !3411
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 10, label %for.inc204
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc204, !dbg !3412

for.inc204:                                       ; preds = %cleanup.cont, %cleanup
  %141 = load i32, ptr %i, align 4, !dbg !3413, !tbaa !1223
  %inc205 = add i32 %141, 1, !dbg !3413
  store i32 %inc205, ptr %i, align 4, !dbg !3413, !tbaa !1223
  br label %for.cond124, !dbg !3414, !llvm.loop !3415

for.end206:                                       ; preds = %for.cond124
  %142 = load i32, ptr %ndiff, align 4, !dbg !3417, !tbaa !1223
  %tobool207 = icmp ne i32 %142, 0, !dbg !3417
  br i1 %tobool207, label %if.then208, label %if.end210, !dbg !3419

if.then208:                                       ; preds = %for.end206
  %143 = load ptr, ptr %args.addr, align 8, !dbg !3420, !tbaa !1228
  %144 = load i32, ptr %ndiff, align 4, !dbg !3421, !tbaa !1223
  %145 = load ptr, ptr %qry_rec, align 8, !dbg !3422, !tbaa !1228
  %rid = getelementptr inbounds %struct.bcf1_t, ptr %145, i32 0, i32 2, !dbg !3423
  %146 = load i32, ptr %rid, align 8, !dbg !3423, !tbaa !3424
  %147 = load ptr, ptr %qry_rec, align 8, !dbg !3425, !tbaa !1228
  %pos = getelementptr inbounds %struct.bcf1_t, ptr %147, i32 0, i32 0, !dbg !3426
  %148 = load i64, ptr %pos, align 8, !dbg !3426, !tbaa !2917
  %conv209 = trunc i64 %148 to i32, !dbg !3425
  call void @diff_sites_push(ptr noundef %143, i32 noundef %144, i32 noundef %146, i32 noundef %conv209), !dbg !3427
  br label %if.end210, !dbg !3427

if.end210:                                        ; preds = %if.then208, %for.end206
  call void @llvm.lifetime.end.p0(i64 4, ptr %ndiff) #14, !dbg !3428
  br label %if.end326, !dbg !3429

if.else211:                                       ; preds = %if.then118
  store i32 0, ptr %i, align 4, !dbg !3430, !tbaa !1223
  br label %for.cond212, !dbg !3431

for.cond212:                                      ; preds = %for.inc323, %if.else211
  %149 = load i32, ptr %i, align 4, !dbg !3432, !tbaa !1223
  %150 = load ptr, ptr %args.addr, align 8, !dbg !3433, !tbaa !1228
  %npairs213 = getelementptr inbounds %struct.args_t, ptr %150, i32 0, i32 32, !dbg !3434
  %151 = load i32, ptr %npairs213, align 4, !dbg !3434, !tbaa !2334
  %cmp214 = icmp ult i32 %149, %151, !dbg !3435
  br i1 %cmp214, label %for.body216, label %for.end325, !dbg !3436

for.body216:                                      ; preds = %for.cond212
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr217) #14, !dbg !3437
  tail call void @llvm.dbg.declare(metadata ptr %ptr217, metadata !3032, metadata !DIExpression()), !dbg !3438
  call void @llvm.lifetime.start.p0(i64 24, ptr %qry_prob) #14, !dbg !3439
  tail call void @llvm.dbg.declare(metadata ptr %qry_prob, metadata !3037, metadata !DIExpression()), !dbg !3440
  call void @llvm.lifetime.start.p0(i64 24, ptr %gt_prob) #14, !dbg !3439
  tail call void @llvm.dbg.declare(metadata ptr %gt_prob, metadata !3038, metadata !DIExpression()), !dbg !3441
  call void @llvm.lifetime.start.p0(i64 1, ptr %qry_dsg218) #14, !dbg !3442
  tail call void @llvm.dbg.declare(metadata ptr %qry_dsg218, metadata !3039, metadata !DIExpression()), !dbg !3443
  call void @llvm.lifetime.start.p0(i64 1, ptr %gt_dsg219) #14, !dbg !3442
  tail call void @llvm.dbg.declare(metadata ptr %gt_dsg219, metadata !3040, metadata !DIExpression()), !dbg !3444
  %152 = load ptr, ptr %args.addr, align 8, !dbg !3445, !tbaa !1228
  %gt_arr220 = getelementptr inbounds %struct.args_t, ptr %152, i32 0, i32 34, !dbg !3446
  %153 = load ptr, ptr %gt_arr220, align 8, !dbg !3446, !tbaa !3159
  %154 = load ptr, ptr %args.addr, align 8, !dbg !3447, !tbaa !1228
  %pairs221 = getelementptr inbounds %struct.args_t, ptr %154, i32 0, i32 39, !dbg !3448
  %155 = load ptr, ptr %pairs221, align 8, !dbg !3448, !tbaa !2341
  %156 = load i32, ptr %i, align 4, !dbg !3449, !tbaa !1223
  %idxprom222 = sext i32 %156 to i64, !dbg !3447
  %arrayidx223 = getelementptr %struct.pair_t, ptr %155, i64 %idxprom222, !dbg !3447
  %igt224 = getelementptr inbounds %struct.pair_t, ptr %arrayidx223, i32 0, i32 1, !dbg !3450
  %157 = load i32, ptr %igt224, align 4, !dbg !3450, !tbaa !2385
  %158 = load i32, ptr %ngt1, align 4, !dbg !3451, !tbaa !1223
  %mul225 = mul i32 %157, %158, !dbg !3452
  %idx.ext226 = sext i32 %mul225 to i64, !dbg !3453
  %add.ptr227 = getelementptr i32, ptr %153, i64 %idx.ext226, !dbg !3453
  store ptr %add.ptr227, ptr %ptr217, align 8, !dbg !3454, !tbaa !1228
  %159 = load i32, ptr %gt_use_GT, align 4, !dbg !3455, !tbaa !1223
  %tobool228 = icmp ne i32 %159, 0, !dbg !3455
  br i1 %tobool228, label %cond.true229, label %cond.false233, !dbg !3455

cond.true229:                                     ; preds = %for.body216
  %160 = load ptr, ptr %args.addr, align 8, !dbg !3456, !tbaa !1228
  %161 = load ptr, ptr %ptr217, align 8, !dbg !3457, !tbaa !1228
  %arraydecay230 = getelementptr inbounds [3 x double], ptr %gt_prob, i64 0, i64 0, !dbg !3458
  %call231 = call zeroext i8 @gt_to_prob(ptr noundef %160, ptr noundef %161, ptr noundef %arraydecay230), !dbg !3459
  %conv232 = zext i8 %call231 to i32, !dbg !3459
  br label %cond.end237, !dbg !3455

cond.false233:                                    ; preds = %for.body216
  %162 = load ptr, ptr %args.addr, align 8, !dbg !3460, !tbaa !1228
  %163 = load ptr, ptr %ptr217, align 8, !dbg !3461, !tbaa !1228
  %arraydecay234 = getelementptr inbounds [3 x double], ptr %gt_prob, i64 0, i64 0, !dbg !3462
  %call235 = call zeroext i8 @pl_to_prob(ptr noundef %162, ptr noundef %163, ptr noundef %arraydecay234), !dbg !3463
  %conv236 = zext i8 %call235 to i32, !dbg !3463
  br label %cond.end237, !dbg !3455

cond.end237:                                      ; preds = %cond.false233, %cond.true229
  %cond238 = phi i32 [ %conv232, %cond.true229 ], [ %conv236, %cond.false233 ], !dbg !3455
  %conv239 = trunc i32 %cond238 to i8, !dbg !3455
  store i8 %conv239, ptr %gt_dsg219, align 1, !dbg !3464, !tbaa !1312
  %164 = load i8, ptr %gt_dsg219, align 1, !dbg !3465, !tbaa !1312
  %tobool240 = icmp ne i8 %164, 0, !dbg !3465
  br i1 %tobool240, label %if.end242, label %if.then241, !dbg !3467

if.then241:                                       ; preds = %cond.end237
  store i32 13, ptr %cleanup.dest.slot, align 4
  br label %cleanup316, !dbg !3468

if.end242:                                        ; preds = %cond.end237
  %165 = load ptr, ptr %args.addr, align 8, !dbg !3469, !tbaa !1228
  %hom_only243 = getelementptr inbounds %struct.args_t, ptr %165, i32 0, i32 46, !dbg !3471
  %166 = load i32, ptr %hom_only243, align 4, !dbg !3471, !tbaa !1502
  %tobool244 = icmp ne i32 %166, 0, !dbg !3469
  br i1 %tobool244, label %land.lhs.true245, label %if.end250, !dbg !3472

land.lhs.true245:                                 ; preds = %if.end242
  %167 = load i8, ptr %gt_dsg219, align 1, !dbg !3473, !tbaa !1312
  %conv246 = zext i8 %167 to i32, !dbg !3473
  %and247 = and i32 %conv246, 5, !dbg !3474
  %tobool248 = icmp ne i32 %and247, 0, !dbg !3474
  br i1 %tobool248, label %if.end250, label %if.then249, !dbg !3475

if.then249:                                       ; preds = %land.lhs.true245
  store i32 13, ptr %cleanup.dest.slot, align 4
  br label %cleanup316, !dbg !3476

if.end250:                                        ; preds = %land.lhs.true245, %if.end242
  %168 = load ptr, ptr %args.addr, align 8, !dbg !3477, !tbaa !1228
  %qry_arr251 = getelementptr inbounds %struct.args_t, ptr %168, i32 0, i32 33, !dbg !3478
  %169 = load ptr, ptr %qry_arr251, align 8, !dbg !3478, !tbaa !3155
  %170 = load ptr, ptr %args.addr, align 8, !dbg !3479, !tbaa !1228
  %pairs252 = getelementptr inbounds %struct.args_t, ptr %170, i32 0, i32 39, !dbg !3480
  %171 = load ptr, ptr %pairs252, align 8, !dbg !3480, !tbaa !2341
  %172 = load i32, ptr %i, align 4, !dbg !3481, !tbaa !1223
  %idxprom253 = sext i32 %172 to i64, !dbg !3479
  %arrayidx254 = getelementptr %struct.pair_t, ptr %171, i64 %idxprom253, !dbg !3479
  %iqry255 = getelementptr inbounds %struct.pair_t, ptr %arrayidx254, i32 0, i32 0, !dbg !3482
  %173 = load i32, ptr %iqry255, align 4, !dbg !3482, !tbaa !2367
  %174 = load i32, ptr %nqry1, align 4, !dbg !3483, !tbaa !1223
  %mul256 = mul i32 %173, %174, !dbg !3484
  %idx.ext257 = sext i32 %mul256 to i64, !dbg !3485
  %add.ptr258 = getelementptr i32, ptr %169, i64 %idx.ext257, !dbg !3485
  store ptr %add.ptr258, ptr %ptr217, align 8, !dbg !3486, !tbaa !1228
  %175 = load i32, ptr %qry_use_GT, align 4, !dbg !3487, !tbaa !1223
  %tobool259 = icmp ne i32 %175, 0, !dbg !3487
  br i1 %tobool259, label %cond.true260, label %cond.false264, !dbg !3487

cond.true260:                                     ; preds = %if.end250
  %176 = load ptr, ptr %args.addr, align 8, !dbg !3488, !tbaa !1228
  %177 = load ptr, ptr %ptr217, align 8, !dbg !3489, !tbaa !1228
  %arraydecay261 = getelementptr inbounds [3 x double], ptr %qry_prob, i64 0, i64 0, !dbg !3490
  %call262 = call zeroext i8 @gt_to_prob(ptr noundef %176, ptr noundef %177, ptr noundef %arraydecay261), !dbg !3491
  %conv263 = zext i8 %call262 to i32, !dbg !3491
  br label %cond.end268, !dbg !3487

cond.false264:                                    ; preds = %if.end250
  %178 = load ptr, ptr %args.addr, align 8, !dbg !3492, !tbaa !1228
  %179 = load ptr, ptr %ptr217, align 8, !dbg !3493, !tbaa !1228
  %arraydecay265 = getelementptr inbounds [3 x double], ptr %qry_prob, i64 0, i64 0, !dbg !3494
  %call266 = call zeroext i8 @pl_to_prob(ptr noundef %178, ptr noundef %179, ptr noundef %arraydecay265), !dbg !3495
  %conv267 = zext i8 %call266 to i32, !dbg !3495
  br label %cond.end268, !dbg !3487

cond.end268:                                      ; preds = %cond.false264, %cond.true260
  %cond269 = phi i32 [ %conv263, %cond.true260 ], [ %conv267, %cond.false264 ], !dbg !3487
  %conv270 = trunc i32 %cond269 to i8, !dbg !3487
  store i8 %conv270, ptr %qry_dsg218, align 1, !dbg !3496, !tbaa !1312
  %180 = load i8, ptr %qry_dsg218, align 1, !dbg !3497, !tbaa !1312
  %tobool271 = icmp ne i8 %180, 0, !dbg !3497
  br i1 %tobool271, label %if.end273, label %if.then272, !dbg !3499

if.then272:                                       ; preds = %cond.end268
  store i32 13, ptr %cleanup.dest.slot, align 4
  br label %cleanup316, !dbg !3500

if.end273:                                        ; preds = %cond.end268
  call void @llvm.lifetime.start.p0(i64 8, ptr %min) #14, !dbg !3501
  tail call void @llvm.dbg.declare(metadata ptr %min, metadata !3041, metadata !DIExpression()), !dbg !3502
  %arrayidx274 = getelementptr [3 x double], ptr %qry_prob, i64 0, i64 0, !dbg !3503
  %181 = load double, ptr %arrayidx274, align 16, !dbg !3503, !tbaa !1761
  %arrayidx275 = getelementptr [3 x double], ptr %gt_prob, i64 0, i64 0, !dbg !3504
  %182 = load double, ptr %arrayidx275, align 16, !dbg !3504, !tbaa !1761
  %add276 = fadd double %181, %182, !dbg !3505
  store double %add276, ptr %min, align 8, !dbg !3502, !tbaa !1761
  %arrayidx277 = getelementptr [3 x double], ptr %gt_prob, i64 0, i64 1, !dbg !3506
  %183 = load double, ptr %arrayidx277, align 8, !dbg !3506, !tbaa !1761
  %arrayidx278 = getelementptr [3 x double], ptr %qry_prob, i64 0, i64 1, !dbg !3507
  %184 = load double, ptr %arrayidx278, align 8, !dbg !3508, !tbaa !1761
  %add279 = fadd double %184, %183, !dbg !3508
  store double %add279, ptr %arrayidx278, align 8, !dbg !3508, !tbaa !1761
  %185 = load double, ptr %min, align 8, !dbg !3509, !tbaa !1761
  %arrayidx280 = getelementptr [3 x double], ptr %qry_prob, i64 0, i64 1, !dbg !3511
  %186 = load double, ptr %arrayidx280, align 8, !dbg !3511, !tbaa !1761
  %cmp281 = fcmp ogt double %185, %186, !dbg !3512
  br i1 %cmp281, label %if.then283, label %if.end285, !dbg !3513

if.then283:                                       ; preds = %if.end273
  %arrayidx284 = getelementptr [3 x double], ptr %qry_prob, i64 0, i64 1, !dbg !3514
  %187 = load double, ptr %arrayidx284, align 8, !dbg !3514, !tbaa !1761
  store double %187, ptr %min, align 8, !dbg !3515, !tbaa !1761
  br label %if.end285, !dbg !3516

if.end285:                                        ; preds = %if.then283, %if.end273
  %arrayidx286 = getelementptr [3 x double], ptr %gt_prob, i64 0, i64 2, !dbg !3517
  %188 = load double, ptr %arrayidx286, align 16, !dbg !3517, !tbaa !1761
  %arrayidx287 = getelementptr [3 x double], ptr %qry_prob, i64 0, i64 2, !dbg !3518
  %189 = load double, ptr %arrayidx287, align 16, !dbg !3519, !tbaa !1761
  %add288 = fadd double %189, %188, !dbg !3519
  store double %add288, ptr %arrayidx287, align 16, !dbg !3519, !tbaa !1761
  %190 = load double, ptr %min, align 8, !dbg !3520, !tbaa !1761
  %arrayidx289 = getelementptr [3 x double], ptr %qry_prob, i64 0, i64 2, !dbg !3522
  %191 = load double, ptr %arrayidx289, align 16, !dbg !3522, !tbaa !1761
  %cmp290 = fcmp ogt double %190, %191, !dbg !3523
  br i1 %cmp290, label %if.then292, label %if.end294, !dbg !3524

if.then292:                                       ; preds = %if.end285
  %arrayidx293 = getelementptr [3 x double], ptr %qry_prob, i64 0, i64 2, !dbg !3525
  %192 = load double, ptr %arrayidx293, align 16, !dbg !3525, !tbaa !1761
  store double %192, ptr %min, align 8, !dbg !3526, !tbaa !1761
  br label %if.end294, !dbg !3527

if.end294:                                        ; preds = %if.then292, %if.end285
  %193 = load double, ptr %min, align 8, !dbg !3528, !tbaa !1761
  %194 = load ptr, ptr %args.addr, align 8, !dbg !3529, !tbaa !1228
  %pdiff = getelementptr inbounds %struct.args_t, ptr %194, i32 0, i32 26, !dbg !3530
  %195 = load ptr, ptr %pdiff, align 8, !dbg !3530, !tbaa !2628
  %196 = load i32, ptr %i, align 4, !dbg !3531, !tbaa !1223
  %idxprom295 = sext i32 %196 to i64, !dbg !3529
  %arrayidx296 = getelementptr double, ptr %195, i64 %idxprom295, !dbg !3529
  %197 = load double, ptr %arrayidx296, align 8, !dbg !3532, !tbaa !1761
  %add297 = fadd double %197, %193, !dbg !3532
  store double %add297, ptr %arrayidx296, align 8, !dbg !3532, !tbaa !1761
  %198 = load ptr, ptr %args.addr, align 8, !dbg !3533, !tbaa !1228
  %calc_hwe_prob298 = getelementptr inbounds %struct.args_t, ptr %198, i32 0, i32 49, !dbg !3534
  %199 = load i32, ptr %calc_hwe_prob298, align 8, !dbg !3534, !tbaa !1262
  %tobool299 = icmp ne i32 %199, 0, !dbg !3533
  br i1 %tobool299, label %if.then300, label %if.end311, !dbg !3535

if.then300:                                       ; preds = %if.end294
  call void @llvm.lifetime.start.p0(i64 4, ptr %match301) #14, !dbg !3536
  tail call void @llvm.dbg.declare(metadata ptr %match301, metadata !3042, metadata !DIExpression()), !dbg !3537
  %200 = load i8, ptr %qry_dsg218, align 1, !dbg !3538, !tbaa !1312
  %conv302 = zext i8 %200 to i32, !dbg !3538
  %201 = load i8, ptr %gt_dsg219, align 1, !dbg !3539, !tbaa !1312
  %conv303 = zext i8 %201 to i32, !dbg !3539
  %and304 = and i32 %conv302, %conv303, !dbg !3540
  store i32 %and304, ptr %match301, align 4, !dbg !3537, !tbaa !1223
  %202 = load i32, ptr %match301, align 4, !dbg !3541, !tbaa !1223
  %idxprom305 = sext i32 %202 to i64, !dbg !3542
  %arrayidx306 = getelementptr [8 x double], ptr %hwe_dsg, i64 0, i64 %idxprom305, !dbg !3542
  %203 = load double, ptr %arrayidx306, align 8, !dbg !3542, !tbaa !1761
  %204 = load ptr, ptr %args.addr, align 8, !dbg !3543, !tbaa !1228
  %hwe_prob307 = getelementptr inbounds %struct.args_t, ptr %204, i32 0, i32 40, !dbg !3544
  %205 = load ptr, ptr %hwe_prob307, align 8, !dbg !3544, !tbaa !2823
  %206 = load i32, ptr %i, align 4, !dbg !3545, !tbaa !1223
  %idxprom308 = sext i32 %206 to i64, !dbg !3543
  %arrayidx309 = getelementptr double, ptr %205, i64 %idxprom308, !dbg !3543
  %207 = load double, ptr %arrayidx309, align 8, !dbg !3546, !tbaa !1761
  %add310 = fadd double %207, %203, !dbg !3546
  store double %add310, ptr %arrayidx309, align 8, !dbg !3546, !tbaa !1761
  call void @llvm.lifetime.end.p0(i64 4, ptr %match301) #14, !dbg !3547
  br label %if.end311, !dbg !3548

if.end311:                                        ; preds = %if.then300, %if.end294
  %208 = load ptr, ptr %args.addr, align 8, !dbg !3549, !tbaa !1228
  %ncnt312 = getelementptr inbounds %struct.args_t, ptr %208, i32 0, i32 30, !dbg !3550
  %209 = load ptr, ptr %ncnt312, align 8, !dbg !3550, !tbaa !2802
  %210 = load i32, ptr %i, align 4, !dbg !3551, !tbaa !1223
  %idxprom313 = sext i32 %210 to i64, !dbg !3549
  %arrayidx314 = getelementptr i32, ptr %209, i64 %idxprom313, !dbg !3549
  %211 = load i32, ptr %arrayidx314, align 4, !dbg !3552, !tbaa !1223
  %inc315 = add i32 %211, 1, !dbg !3552
  store i32 %inc315, ptr %arrayidx314, align 4, !dbg !3552, !tbaa !1223
  call void @llvm.lifetime.end.p0(i64 8, ptr %min) #14, !dbg !3553
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3553
  br label %cleanup316, !dbg !3553

cleanup316:                                       ; preds = %if.end311, %if.then272, %if.then249, %if.then241
  call void @llvm.lifetime.end.p0(i64 1, ptr %gt_dsg219) #14, !dbg !3553
  call void @llvm.lifetime.end.p0(i64 1, ptr %qry_dsg218) #14, !dbg !3553
  call void @llvm.lifetime.end.p0(i64 24, ptr %gt_prob) #14, !dbg !3553
  call void @llvm.lifetime.end.p0(i64 24, ptr %qry_prob) #14, !dbg !3553
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr217) #14, !dbg !3553
  %cleanup.dest321 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest321, label %unreachable [
    i32 0, label %cleanup.cont322
    i32 13, label %for.inc323
  ]

cleanup.cont322:                                  ; preds = %cleanup316
  br label %for.inc323, !dbg !3554

for.inc323:                                       ; preds = %cleanup.cont322, %cleanup316
  %212 = load i32, ptr %i, align 4, !dbg !3555, !tbaa !1223
  %inc324 = add i32 %212, 1, !dbg !3555
  store i32 %inc324, ptr %i, align 4, !dbg !3555, !tbaa !1223
  br label %for.cond212, !dbg !3556, !llvm.loop !3557

for.end325:                                       ; preds = %for.cond212
  br label %if.end326

if.end326:                                        ; preds = %for.end325, %if.end210
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup727, !dbg !3559

if.end327:                                        ; preds = %if.end116
  call void @llvm.lifetime.start.p0(i64 4, ptr %idx) #14, !dbg !3560
  tail call void @llvm.dbg.declare(metadata ptr %idx, metadata !3045, metadata !DIExpression()), !dbg !3561
  store i32 0, ptr %idx, align 4, !dbg !3561, !tbaa !1223
  %213 = load ptr, ptr %args.addr, align 8, !dbg !3562, !tbaa !1228
  %use_PLs328 = getelementptr inbounds %struct.args_t, ptr %213, i32 0, i32 52, !dbg !3563
  %214 = load i32, ptr %use_PLs328, align 4, !dbg !3563, !tbaa !1266
  %tobool329 = icmp ne i32 %214, 0, !dbg !3562
  br i1 %tobool329, label %if.else488, label %if.then330, !dbg !3564

if.then330:                                       ; preds = %if.end327
  store i32 0, ptr %i, align 4, !dbg !3565, !tbaa !1223
  br label %for.cond331, !dbg !3566

for.cond331:                                      ; preds = %for.inc362, %if.then330
  %215 = load i32, ptr %i, align 4, !dbg !3567, !tbaa !1223
  %216 = load ptr, ptr %args.addr, align 8, !dbg !3568, !tbaa !1228
  %nqry_smpl = getelementptr inbounds %struct.args_t, ptr %216, i32 0, i32 22, !dbg !3569
  %217 = load i32, ptr %nqry_smpl, align 8, !dbg !3569, !tbaa !2252
  %cmp332 = icmp slt i32 %215, %217, !dbg !3570
  br i1 %cmp332, label %for.body334, label %for.end364, !dbg !3571

for.body334:                                      ; preds = %for.cond331
  call void @llvm.lifetime.start.p0(i64 4, ptr %iqry335) #14, !dbg !3572
  tail call void @llvm.dbg.declare(metadata ptr %iqry335, metadata !3046, metadata !DIExpression()), !dbg !3573
  %218 = load ptr, ptr %args.addr, align 8, !dbg !3574, !tbaa !1228
  %qry_smpl = getelementptr inbounds %struct.args_t, ptr %218, i32 0, i32 24, !dbg !3575
  %219 = load ptr, ptr %qry_smpl, align 8, !dbg !3575, !tbaa !2562
  %tobool336 = icmp ne ptr %219, null, !dbg !3574
  br i1 %tobool336, label %cond.true337, label %cond.false341, !dbg !3574

cond.true337:                                     ; preds = %for.body334
  %220 = load ptr, ptr %args.addr, align 8, !dbg !3576, !tbaa !1228
  %qry_smpl338 = getelementptr inbounds %struct.args_t, ptr %220, i32 0, i32 24, !dbg !3577
  %221 = load ptr, ptr %qry_smpl338, align 8, !dbg !3577, !tbaa !2562
  %222 = load i32, ptr %i, align 4, !dbg !3578, !tbaa !1223
  %idxprom339 = sext i32 %222 to i64, !dbg !3576
  %arrayidx340 = getelementptr i32, ptr %221, i64 %idxprom339, !dbg !3576
  %223 = load i32, ptr %arrayidx340, align 4, !dbg !3576, !tbaa !1223
  br label %cond.end342, !dbg !3574

cond.false341:                                    ; preds = %for.body334
  %224 = load i32, ptr %i, align 4, !dbg !3579, !tbaa !1223
  br label %cond.end342, !dbg !3574

cond.end342:                                      ; preds = %cond.false341, %cond.true337
  %cond343 = phi i32 [ %223, %cond.true337 ], [ %224, %cond.false341 ], !dbg !3574
  store i32 %cond343, ptr %iqry335, align 4, !dbg !3573, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr344) #14, !dbg !3580
  tail call void @llvm.dbg.declare(metadata ptr %ptr344, metadata !3052, metadata !DIExpression()), !dbg !3581
  %225 = load ptr, ptr %args.addr, align 8, !dbg !3582, !tbaa !1228
  %qry_arr345 = getelementptr inbounds %struct.args_t, ptr %225, i32 0, i32 33, !dbg !3583
  %226 = load ptr, ptr %qry_arr345, align 8, !dbg !3583, !tbaa !3155
  %227 = load i32, ptr %nqry1, align 4, !dbg !3584, !tbaa !1223
  %228 = load i32, ptr %iqry335, align 4, !dbg !3585, !tbaa !1223
  %mul346 = mul i32 %227, %228, !dbg !3586
  %idx.ext347 = sext i32 %mul346 to i64, !dbg !3587
  %add.ptr348 = getelementptr i32, ptr %226, i64 %idx.ext347, !dbg !3587
  store ptr %add.ptr348, ptr %ptr344, align 8, !dbg !3581, !tbaa !1228
  %229 = load i32, ptr %qry_use_GT, align 4, !dbg !3588, !tbaa !1223
  %tobool349 = icmp ne i32 %229, 0, !dbg !3588
  br i1 %tobool349, label %cond.true350, label %cond.false353, !dbg !3588

cond.true350:                                     ; preds = %cond.end342
  %230 = load ptr, ptr %ptr344, align 8, !dbg !3589, !tbaa !1228
  %call351 = call zeroext i8 @gt_to_dsg(ptr noundef %230), !dbg !3590
  %conv352 = zext i8 %call351 to i32, !dbg !3590
  br label %cond.end356, !dbg !3588

cond.false353:                                    ; preds = %cond.end342
  %231 = load ptr, ptr %ptr344, align 8, !dbg !3591, !tbaa !1228
  %call354 = call zeroext i8 @pl_to_dsg(ptr noundef %231), !dbg !3592
  %conv355 = zext i8 %call354 to i32, !dbg !3592
  br label %cond.end356, !dbg !3588

cond.end356:                                      ; preds = %cond.false353, %cond.true350
  %cond357 = phi i32 [ %conv352, %cond.true350 ], [ %conv355, %cond.false353 ], !dbg !3588
  %conv358 = trunc i32 %cond357 to i8, !dbg !3588
  %232 = load ptr, ptr %args.addr, align 8, !dbg !3593, !tbaa !1228
  %qry_dsg359 = getelementptr inbounds %struct.args_t, ptr %232, i32 0, i32 37, !dbg !3594
  %233 = load ptr, ptr %qry_dsg359, align 8, !dbg !3594, !tbaa !2604
  %234 = load i32, ptr %i, align 4, !dbg !3595, !tbaa !1223
  %idxprom360 = sext i32 %234 to i64, !dbg !3593
  %arrayidx361 = getelementptr i8, ptr %233, i64 %idxprom360, !dbg !3593
  store i8 %conv358, ptr %arrayidx361, align 1, !dbg !3596, !tbaa !1312
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr344) #14, !dbg !3597
  call void @llvm.lifetime.end.p0(i64 4, ptr %iqry335) #14, !dbg !3597
  br label %for.inc362, !dbg !3598

for.inc362:                                       ; preds = %cond.end356
  %235 = load i32, ptr %i, align 4, !dbg !3599, !tbaa !1223
  %inc363 = add i32 %235, 1, !dbg !3599
  store i32 %inc363, ptr %i, align 4, !dbg !3599, !tbaa !1223
  br label %for.cond331, !dbg !3600, !llvm.loop !3601

for.end364:                                       ; preds = %for.cond331
  %236 = load ptr, ptr %args.addr, align 8, !dbg !3603, !tbaa !1228
  %cross_check = getelementptr inbounds %struct.args_t, ptr %236, i32 0, i32 48, !dbg !3604
  %237 = load i32, ptr %cross_check, align 4, !dbg !3604, !tbaa !2570
  %tobool365 = icmp ne i32 %237, 0, !dbg !3603
  br i1 %tobool365, label %if.end415, label %if.then366, !dbg !3605

if.then366:                                       ; preds = %for.end364
  store i32 0, ptr %i, align 4, !dbg !3606, !tbaa !1223
  br label %for.cond367, !dbg !3607

for.cond367:                                      ; preds = %for.inc412, %if.then366
  %238 = load i32, ptr %i, align 4, !dbg !3608, !tbaa !1223
  %239 = load ptr, ptr %args.addr, align 8, !dbg !3609, !tbaa !1228
  %ngt_smpl = getelementptr inbounds %struct.args_t, ptr %239, i32 0, i32 23, !dbg !3610
  %240 = load i32, ptr %ngt_smpl, align 4, !dbg !3610, !tbaa !2549
  %cmp368 = icmp slt i32 %238, %240, !dbg !3611
  br i1 %cmp368, label %for.body370, label %for.end414, !dbg !3612

for.body370:                                      ; preds = %for.cond367
  call void @llvm.lifetime.start.p0(i64 4, ptr %igt371) #14, !dbg !3613
  tail call void @llvm.dbg.declare(metadata ptr %igt371, metadata !3053, metadata !DIExpression()), !dbg !3614
  %241 = load ptr, ptr %args.addr, align 8, !dbg !3615, !tbaa !1228
  %gt_smpl = getelementptr inbounds %struct.args_t, ptr %241, i32 0, i32 25, !dbg !3616
  %242 = load ptr, ptr %gt_smpl, align 8, !dbg !3616, !tbaa !2566
  %tobool372 = icmp ne ptr %242, null, !dbg !3615
  br i1 %tobool372, label %cond.true373, label %cond.false377, !dbg !3615

cond.true373:                                     ; preds = %for.body370
  %243 = load ptr, ptr %args.addr, align 8, !dbg !3617, !tbaa !1228
  %gt_smpl374 = getelementptr inbounds %struct.args_t, ptr %243, i32 0, i32 25, !dbg !3618
  %244 = load ptr, ptr %gt_smpl374, align 8, !dbg !3618, !tbaa !2566
  %245 = load i32, ptr %i, align 4, !dbg !3619, !tbaa !1223
  %idxprom375 = sext i32 %245 to i64, !dbg !3617
  %arrayidx376 = getelementptr i32, ptr %244, i64 %idxprom375, !dbg !3617
  %246 = load i32, ptr %arrayidx376, align 4, !dbg !3617, !tbaa !1223
  br label %cond.end378, !dbg !3615

cond.false377:                                    ; preds = %for.body370
  %247 = load i32, ptr %i, align 4, !dbg !3620, !tbaa !1223
  br label %cond.end378, !dbg !3615

cond.end378:                                      ; preds = %cond.false377, %cond.true373
  %cond379 = phi i32 [ %246, %cond.true373 ], [ %247, %cond.false377 ], !dbg !3615
  store i32 %cond379, ptr %igt371, align 4, !dbg !3614, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr380) #14, !dbg !3621
  tail call void @llvm.dbg.declare(metadata ptr %ptr380, metadata !3059, metadata !DIExpression()), !dbg !3622
  %248 = load ptr, ptr %args.addr, align 8, !dbg !3623, !tbaa !1228
  %gt_arr381 = getelementptr inbounds %struct.args_t, ptr %248, i32 0, i32 34, !dbg !3624
  %249 = load ptr, ptr %gt_arr381, align 8, !dbg !3624, !tbaa !3159
  %250 = load i32, ptr %ngt1, align 4, !dbg !3625, !tbaa !1223
  %251 = load i32, ptr %igt371, align 4, !dbg !3626, !tbaa !1223
  %mul382 = mul i32 %250, %251, !dbg !3627
  %idx.ext383 = sext i32 %mul382 to i64, !dbg !3628
  %add.ptr384 = getelementptr i32, ptr %249, i64 %idx.ext383, !dbg !3628
  store ptr %add.ptr384, ptr %ptr380, align 8, !dbg !3622, !tbaa !1228
  %252 = load i32, ptr %gt_use_GT, align 4, !dbg !3629, !tbaa !1223
  %tobool385 = icmp ne i32 %252, 0, !dbg !3629
  br i1 %tobool385, label %cond.true386, label %cond.false389, !dbg !3629

cond.true386:                                     ; preds = %cond.end378
  %253 = load ptr, ptr %ptr380, align 8, !dbg !3630, !tbaa !1228
  %call387 = call zeroext i8 @gt_to_dsg(ptr noundef %253), !dbg !3631
  %conv388 = zext i8 %call387 to i32, !dbg !3631
  br label %cond.end392, !dbg !3629

cond.false389:                                    ; preds = %cond.end378
  %254 = load ptr, ptr %ptr380, align 8, !dbg !3632, !tbaa !1228
  %call390 = call zeroext i8 @pl_to_dsg(ptr noundef %254), !dbg !3633
  %conv391 = zext i8 %call390 to i32, !dbg !3633
  br label %cond.end392, !dbg !3629

cond.end392:                                      ; preds = %cond.false389, %cond.true386
  %cond393 = phi i32 [ %conv388, %cond.true386 ], [ %conv391, %cond.false389 ], !dbg !3629
  %conv394 = trunc i32 %cond393 to i8, !dbg !3629
  %255 = load ptr, ptr %args.addr, align 8, !dbg !3634, !tbaa !1228
  %gt_dsg395 = getelementptr inbounds %struct.args_t, ptr %255, i32 0, i32 38, !dbg !3635
  %256 = load ptr, ptr %gt_dsg395, align 8, !dbg !3635, !tbaa !2615
  %257 = load i32, ptr %i, align 4, !dbg !3636, !tbaa !1223
  %idxprom396 = sext i32 %257 to i64, !dbg !3634
  %arrayidx397 = getelementptr i8, ptr %256, i64 %idxprom396, !dbg !3634
  store i8 %conv394, ptr %arrayidx397, align 1, !dbg !3637, !tbaa !1312
  %258 = load ptr, ptr %args.addr, align 8, !dbg !3638, !tbaa !1228
  %hom_only398 = getelementptr inbounds %struct.args_t, ptr %258, i32 0, i32 46, !dbg !3640
  %259 = load i32, ptr %hom_only398, align 4, !dbg !3640, !tbaa !1502
  %tobool399 = icmp ne i32 %259, 0, !dbg !3638
  br i1 %tobool399, label %land.lhs.true400, label %if.end411, !dbg !3641

land.lhs.true400:                                 ; preds = %cond.end392
  %260 = load ptr, ptr %args.addr, align 8, !dbg !3642, !tbaa !1228
  %gt_dsg401 = getelementptr inbounds %struct.args_t, ptr %260, i32 0, i32 38, !dbg !3643
  %261 = load ptr, ptr %gt_dsg401, align 8, !dbg !3643, !tbaa !2615
  %262 = load i32, ptr %i, align 4, !dbg !3644, !tbaa !1223
  %idxprom402 = sext i32 %262 to i64, !dbg !3642
  %arrayidx403 = getelementptr i8, ptr %261, i64 %idxprom402, !dbg !3642
  %263 = load i8, ptr %arrayidx403, align 1, !dbg !3642, !tbaa !1312
  %conv404 = zext i8 %263 to i32, !dbg !3642
  %and405 = and i32 %conv404, 5, !dbg !3645
  %tobool406 = icmp ne i32 %and405, 0, !dbg !3645
  br i1 %tobool406, label %if.end411, label %if.then407, !dbg !3646

if.then407:                                       ; preds = %land.lhs.true400
  %264 = load ptr, ptr %args.addr, align 8, !dbg !3647, !tbaa !1228
  %gt_dsg408 = getelementptr inbounds %struct.args_t, ptr %264, i32 0, i32 38, !dbg !3648
  %265 = load ptr, ptr %gt_dsg408, align 8, !dbg !3648, !tbaa !2615
  %266 = load i32, ptr %i, align 4, !dbg !3649, !tbaa !1223
  %idxprom409 = sext i32 %266 to i64, !dbg !3647
  %arrayidx410 = getelementptr i8, ptr %265, i64 %idxprom409, !dbg !3647
  store i8 0, ptr %arrayidx410, align 1, !dbg !3650, !tbaa !1312
  br label %if.end411, !dbg !3647

if.end411:                                        ; preds = %if.then407, %land.lhs.true400, %cond.end392
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr380) #14, !dbg !3651
  call void @llvm.lifetime.end.p0(i64 4, ptr %igt371) #14, !dbg !3651
  br label %for.inc412, !dbg !3652

for.inc412:                                       ; preds = %if.end411
  %267 = load i32, ptr %i, align 4, !dbg !3653, !tbaa !1223
  %inc413 = add i32 %267, 1, !dbg !3653
  store i32 %inc413, ptr %i, align 4, !dbg !3653, !tbaa !1223
  br label %for.cond367, !dbg !3654, !llvm.loop !3655

for.end414:                                       ; preds = %for.cond367
  br label %if.end415, !dbg !3657

if.end415:                                        ; preds = %for.end414, %for.end364
  store i32 0, ptr %i, align 4, !dbg !3658, !tbaa !1223
  br label %for.cond416, !dbg !3659

for.cond416:                                      ; preds = %for.inc485, %if.end415
  %268 = load i32, ptr %i, align 4, !dbg !3660, !tbaa !1223
  %269 = load ptr, ptr %args.addr, align 8, !dbg !3661, !tbaa !1228
  %nqry_smpl417 = getelementptr inbounds %struct.args_t, ptr %269, i32 0, i32 22, !dbg !3662
  %270 = load i32, ptr %nqry_smpl417, align 8, !dbg !3662, !tbaa !2252
  %cmp418 = icmp slt i32 %268, %270, !dbg !3663
  br i1 %cmp418, label %for.body420, label %for.end487, !dbg !3664

for.body420:                                      ; preds = %for.cond416
  call void @llvm.lifetime.start.p0(i64 4, ptr %ngt) #14, !dbg !3665
  tail call void @llvm.dbg.declare(metadata ptr %ngt, metadata !3060, metadata !DIExpression()), !dbg !3666
  %271 = load ptr, ptr %args.addr, align 8, !dbg !3667, !tbaa !1228
  %cross_check421 = getelementptr inbounds %struct.args_t, ptr %271, i32 0, i32 48, !dbg !3668
  %272 = load i32, ptr %cross_check421, align 4, !dbg !3668, !tbaa !2570
  %tobool422 = icmp ne i32 %272, 0, !dbg !3667
  br i1 %tobool422, label %cond.true423, label %cond.false424, !dbg !3667

cond.true423:                                     ; preds = %for.body420
  %273 = load i32, ptr %i, align 4, !dbg !3669, !tbaa !1223
  br label %cond.end426, !dbg !3667

cond.false424:                                    ; preds = %for.body420
  %274 = load ptr, ptr %args.addr, align 8, !dbg !3670, !tbaa !1228
  %ngt_smpl425 = getelementptr inbounds %struct.args_t, ptr %274, i32 0, i32 23, !dbg !3671
  %275 = load i32, ptr %ngt_smpl425, align 4, !dbg !3671, !tbaa !2549
  br label %cond.end426, !dbg !3667

cond.end426:                                      ; preds = %cond.false424, %cond.true423
  %cond427 = phi i32 [ %273, %cond.true423 ], [ %275, %cond.false424 ], !dbg !3667
  store i32 %cond427, ptr %ngt, align 4, !dbg !3666, !tbaa !1223
  %276 = load ptr, ptr %args.addr, align 8, !dbg !3672, !tbaa !1228
  %qry_dsg428 = getelementptr inbounds %struct.args_t, ptr %276, i32 0, i32 37, !dbg !3674
  %277 = load ptr, ptr %qry_dsg428, align 8, !dbg !3674, !tbaa !2604
  %278 = load i32, ptr %i, align 4, !dbg !3675, !tbaa !1223
  %idxprom429 = sext i32 %278 to i64, !dbg !3672
  %arrayidx430 = getelementptr i8, ptr %277, i64 %idxprom429, !dbg !3672
  %279 = load i8, ptr %arrayidx430, align 1, !dbg !3672, !tbaa !1312
  %tobool431 = icmp ne i8 %279, 0, !dbg !3672
  br i1 %tobool431, label %if.end434, label %if.then432, !dbg !3676

if.then432:                                       ; preds = %cond.end426
  %280 = load i32, ptr %ngt, align 4, !dbg !3677, !tbaa !1223
  %281 = load i32, ptr %idx, align 4, !dbg !3679, !tbaa !1223
  %add433 = add i32 %281, %280, !dbg !3679
  store i32 %add433, ptr %idx, align 4, !dbg !3679, !tbaa !1223
  store i32 22, ptr %cleanup.dest.slot, align 4
  br label %cleanup482, !dbg !3680

if.end434:                                        ; preds = %cond.end426
  store i32 0, ptr %j, align 4, !dbg !3681, !tbaa !1223
  br label %for.cond435, !dbg !3682

for.cond435:                                      ; preds = %for.inc479, %if.end434
  %282 = load i32, ptr %j, align 4, !dbg !3683, !tbaa !1223
  %283 = load i32, ptr %ngt, align 4, !dbg !3684, !tbaa !1223
  %cmp436 = icmp slt i32 %282, %283, !dbg !3685
  br i1 %cmp436, label %for.body438, label %for.end481, !dbg !3686

for.body438:                                      ; preds = %for.cond435
  %284 = load ptr, ptr %args.addr, align 8, !dbg !3687, !tbaa !1228
  %gt_dsg439 = getelementptr inbounds %struct.args_t, ptr %284, i32 0, i32 38, !dbg !3689
  %285 = load ptr, ptr %gt_dsg439, align 8, !dbg !3689, !tbaa !2615
  %286 = load i32, ptr %j, align 4, !dbg !3690, !tbaa !1223
  %idxprom440 = sext i32 %286 to i64, !dbg !3687
  %arrayidx441 = getelementptr i8, ptr %285, i64 %idxprom440, !dbg !3687
  %287 = load i8, ptr %arrayidx441, align 1, !dbg !3687, !tbaa !1312
  %tobool442 = icmp ne i8 %287, 0, !dbg !3687
  br i1 %tobool442, label %if.end445, label %if.then443, !dbg !3691

if.then443:                                       ; preds = %for.body438
  %288 = load i32, ptr %idx, align 4, !dbg !3692, !tbaa !1223
  %inc444 = add i32 %288, 1, !dbg !3692
  store i32 %inc444, ptr %idx, align 4, !dbg !3692, !tbaa !1223
  br label %for.inc479, !dbg !3694

if.end445:                                        ; preds = %for.body438
  call void @llvm.lifetime.start.p0(i64 4, ptr %match446) #14, !dbg !3695
  tail call void @llvm.dbg.declare(metadata ptr %match446, metadata !3064, metadata !DIExpression()), !dbg !3696
  %289 = load ptr, ptr %args.addr, align 8, !dbg !3697, !tbaa !1228
  %qry_dsg447 = getelementptr inbounds %struct.args_t, ptr %289, i32 0, i32 37, !dbg !3698
  %290 = load ptr, ptr %qry_dsg447, align 8, !dbg !3698, !tbaa !2604
  %291 = load i32, ptr %i, align 4, !dbg !3699, !tbaa !1223
  %idxprom448 = sext i32 %291 to i64, !dbg !3697
  %arrayidx449 = getelementptr i8, ptr %290, i64 %idxprom448, !dbg !3697
  %292 = load i8, ptr %arrayidx449, align 1, !dbg !3697, !tbaa !1312
  %conv450 = zext i8 %292 to i32, !dbg !3697
  %293 = load ptr, ptr %args.addr, align 8, !dbg !3700, !tbaa !1228
  %gt_dsg451 = getelementptr inbounds %struct.args_t, ptr %293, i32 0, i32 38, !dbg !3701
  %294 = load ptr, ptr %gt_dsg451, align 8, !dbg !3701, !tbaa !2615
  %295 = load i32, ptr %j, align 4, !dbg !3702, !tbaa !1223
  %idxprom452 = sext i32 %295 to i64, !dbg !3700
  %arrayidx453 = getelementptr i8, ptr %294, i64 %idxprom452, !dbg !3700
  %296 = load i8, ptr %arrayidx453, align 1, !dbg !3700, !tbaa !1312
  %conv454 = zext i8 %296 to i32, !dbg !3700
  %and455 = and i32 %conv450, %conv454, !dbg !3703
  store i32 %and455, ptr %match446, align 4, !dbg !3696, !tbaa !1223
  %297 = load i32, ptr %match446, align 4, !dbg !3704, !tbaa !1223
  %tobool456 = icmp ne i32 %297, 0, !dbg !3704
  br i1 %tobool456, label %if.else462, label %if.then457, !dbg !3706

if.then457:                                       ; preds = %if.end445
  %298 = load ptr, ptr %args.addr, align 8, !dbg !3707, !tbaa !1228
  %ndiff458 = getelementptr inbounds %struct.args_t, ptr %298, i32 0, i32 29, !dbg !3708
  %299 = load ptr, ptr %ndiff458, align 8, !dbg !3708, !tbaa !2795
  %300 = load i32, ptr %idx, align 4, !dbg !3709, !tbaa !1223
  %idxprom459 = sext i32 %300 to i64, !dbg !3707
  %arrayidx460 = getelementptr i32, ptr %299, i64 %idxprom459, !dbg !3707
  %301 = load i32, ptr %arrayidx460, align 4, !dbg !3710, !tbaa !1223
  %inc461 = add i32 %301, 1, !dbg !3710
  store i32 %inc461, ptr %arrayidx460, align 4, !dbg !3710, !tbaa !1223
  br label %if.end473, !dbg !3707

if.else462:                                       ; preds = %if.end445
  %302 = load ptr, ptr %args.addr, align 8, !dbg !3711, !tbaa !1228
  %calc_hwe_prob463 = getelementptr inbounds %struct.args_t, ptr %302, i32 0, i32 49, !dbg !3713
  %303 = load i32, ptr %calc_hwe_prob463, align 8, !dbg !3713, !tbaa !1262
  %tobool464 = icmp ne i32 %303, 0, !dbg !3711
  br i1 %tobool464, label %if.then465, label %if.end472, !dbg !3714

if.then465:                                       ; preds = %if.else462
  %304 = load i32, ptr %match446, align 4, !dbg !3715, !tbaa !1223
  %idxprom466 = sext i32 %304 to i64, !dbg !3716
  %arrayidx467 = getelementptr [8 x double], ptr %hwe_dsg, i64 0, i64 %idxprom466, !dbg !3716
  %305 = load double, ptr %arrayidx467, align 8, !dbg !3716, !tbaa !1761
  %306 = load ptr, ptr %args.addr, align 8, !dbg !3717, !tbaa !1228
  %hwe_prob468 = getelementptr inbounds %struct.args_t, ptr %306, i32 0, i32 40, !dbg !3718
  %307 = load ptr, ptr %hwe_prob468, align 8, !dbg !3718, !tbaa !2823
  %308 = load i32, ptr %idx, align 4, !dbg !3719, !tbaa !1223
  %idxprom469 = sext i32 %308 to i64, !dbg !3717
  %arrayidx470 = getelementptr double, ptr %307, i64 %idxprom469, !dbg !3717
  %309 = load double, ptr %arrayidx470, align 8, !dbg !3720, !tbaa !1761
  %add471 = fadd double %309, %305, !dbg !3720
  store double %add471, ptr %arrayidx470, align 8, !dbg !3720, !tbaa !1761
  br label %if.end472, !dbg !3717

if.end472:                                        ; preds = %if.then465, %if.else462
  br label %if.end473

if.end473:                                        ; preds = %if.end472, %if.then457
  %310 = load ptr, ptr %args.addr, align 8, !dbg !3721, !tbaa !1228
  %ncnt474 = getelementptr inbounds %struct.args_t, ptr %310, i32 0, i32 30, !dbg !3722
  %311 = load ptr, ptr %ncnt474, align 8, !dbg !3722, !tbaa !2802
  %312 = load i32, ptr %idx, align 4, !dbg !3723, !tbaa !1223
  %idxprom475 = sext i32 %312 to i64, !dbg !3721
  %arrayidx476 = getelementptr i32, ptr %311, i64 %idxprom475, !dbg !3721
  %313 = load i32, ptr %arrayidx476, align 4, !dbg !3724, !tbaa !1223
  %inc477 = add i32 %313, 1, !dbg !3724
  store i32 %inc477, ptr %arrayidx476, align 4, !dbg !3724, !tbaa !1223
  %314 = load i32, ptr %idx, align 4, !dbg !3725, !tbaa !1223
  %inc478 = add i32 %314, 1, !dbg !3725
  store i32 %inc478, ptr %idx, align 4, !dbg !3725, !tbaa !1223
  call void @llvm.lifetime.end.p0(i64 4, ptr %match446) #14, !dbg !3726
  br label %for.inc479, !dbg !3727

for.inc479:                                       ; preds = %if.end473, %if.then443
  %315 = load i32, ptr %j, align 4, !dbg !3728, !tbaa !1223
  %inc480 = add i32 %315, 1, !dbg !3728
  store i32 %inc480, ptr %j, align 4, !dbg !3728, !tbaa !1223
  br label %for.cond435, !dbg !3729, !llvm.loop !3730

for.end481:                                       ; preds = %for.cond435
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3732
  br label %cleanup482, !dbg !3732

cleanup482:                                       ; preds = %for.end481, %if.then432
  call void @llvm.lifetime.end.p0(i64 4, ptr %ngt) #14, !dbg !3732
  %cleanup.dest483 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest483, label %unreachable [
    i32 0, label %cleanup.cont484
    i32 22, label %for.inc485
  ]

cleanup.cont484:                                  ; preds = %cleanup482
  br label %for.inc485, !dbg !3733

for.inc485:                                       ; preds = %cleanup.cont484, %cleanup482
  %316 = load i32, ptr %i, align 4, !dbg !3734, !tbaa !1223
  %inc486 = add i32 %316, 1, !dbg !3734
  store i32 %inc486, ptr %i, align 4, !dbg !3734, !tbaa !1223
  br label %for.cond416, !dbg !3735, !llvm.loop !3736

for.end487:                                       ; preds = %for.cond416
  br label %if.end726, !dbg !3738

if.else488:                                       ; preds = %if.end327
  store i32 0, ptr %i, align 4, !dbg !3739, !tbaa !1223
  br label %for.cond489, !dbg !3740

for.cond489:                                      ; preds = %for.inc530, %if.else488
  %317 = load i32, ptr %i, align 4, !dbg !3741, !tbaa !1223
  %318 = load ptr, ptr %args.addr, align 8, !dbg !3742, !tbaa !1228
  %nqry_smpl490 = getelementptr inbounds %struct.args_t, ptr %318, i32 0, i32 22, !dbg !3743
  %319 = load i32, ptr %nqry_smpl490, align 8, !dbg !3743, !tbaa !2252
  %cmp491 = icmp slt i32 %317, %319, !dbg !3744
  br i1 %cmp491, label %for.body493, label %for.end532, !dbg !3745

for.body493:                                      ; preds = %for.cond489
  call void @llvm.lifetime.start.p0(i64 4, ptr %iqry494) #14, !dbg !3746
  tail call void @llvm.dbg.declare(metadata ptr %iqry494, metadata !3068, metadata !DIExpression()), !dbg !3747
  %320 = load ptr, ptr %args.addr, align 8, !dbg !3748, !tbaa !1228
  %qry_smpl495 = getelementptr inbounds %struct.args_t, ptr %320, i32 0, i32 24, !dbg !3749
  %321 = load ptr, ptr %qry_smpl495, align 8, !dbg !3749, !tbaa !2562
  %tobool496 = icmp ne ptr %321, null, !dbg !3748
  br i1 %tobool496, label %cond.true497, label %cond.false501, !dbg !3748

cond.true497:                                     ; preds = %for.body493
  %322 = load ptr, ptr %args.addr, align 8, !dbg !3750, !tbaa !1228
  %qry_smpl498 = getelementptr inbounds %struct.args_t, ptr %322, i32 0, i32 24, !dbg !3751
  %323 = load ptr, ptr %qry_smpl498, align 8, !dbg !3751, !tbaa !2562
  %324 = load i32, ptr %i, align 4, !dbg !3752, !tbaa !1223
  %idxprom499 = sext i32 %324 to i64, !dbg !3750
  %arrayidx500 = getelementptr i32, ptr %323, i64 %idxprom499, !dbg !3750
  %325 = load i32, ptr %arrayidx500, align 4, !dbg !3750, !tbaa !1223
  br label %cond.end502, !dbg !3748

cond.false501:                                    ; preds = %for.body493
  %326 = load i32, ptr %i, align 4, !dbg !3753, !tbaa !1223
  br label %cond.end502, !dbg !3748

cond.end502:                                      ; preds = %cond.false501, %cond.true497
  %cond503 = phi i32 [ %325, %cond.true497 ], [ %326, %cond.false501 ], !dbg !3748
  store i32 %cond503, ptr %iqry494, align 4, !dbg !3747, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr504) #14, !dbg !3754
  tail call void @llvm.dbg.declare(metadata ptr %ptr504, metadata !3073, metadata !DIExpression()), !dbg !3755
  %327 = load ptr, ptr %args.addr, align 8, !dbg !3756, !tbaa !1228
  %qry_arr505 = getelementptr inbounds %struct.args_t, ptr %327, i32 0, i32 33, !dbg !3757
  %328 = load ptr, ptr %qry_arr505, align 8, !dbg !3757, !tbaa !3155
  %329 = load i32, ptr %nqry1, align 4, !dbg !3758, !tbaa !1223
  %330 = load i32, ptr %iqry494, align 4, !dbg !3759, !tbaa !1223
  %mul506 = mul i32 %329, %330, !dbg !3760
  %idx.ext507 = sext i32 %mul506 to i64, !dbg !3761
  %add.ptr508 = getelementptr i32, ptr %328, i64 %idx.ext507, !dbg !3761
  store ptr %add.ptr508, ptr %ptr504, align 8, !dbg !3755, !tbaa !1228
  %331 = load i32, ptr %qry_use_GT, align 4, !dbg !3762, !tbaa !1223
  %tobool509 = icmp ne i32 %331, 0, !dbg !3762
  br i1 %tobool509, label %cond.true510, label %cond.false517, !dbg !3762

cond.true510:                                     ; preds = %cond.end502
  %332 = load ptr, ptr %args.addr, align 8, !dbg !3763, !tbaa !1228
  %333 = load ptr, ptr %ptr504, align 8, !dbg !3764, !tbaa !1228
  %334 = load ptr, ptr %args.addr, align 8, !dbg !3765, !tbaa !1228
  %qry_prob511 = getelementptr inbounds %struct.args_t, ptr %334, i32 0, i32 27, !dbg !3766
  %335 = load ptr, ptr %qry_prob511, align 8, !dbg !3766, !tbaa !2638
  %336 = load i32, ptr %i, align 4, !dbg !3767, !tbaa !1223
  %mul512 = mul i32 %336, 3, !dbg !3768
  %idx.ext513 = sext i32 %mul512 to i64, !dbg !3769
  %add.ptr514 = getelementptr double, ptr %335, i64 %idx.ext513, !dbg !3769
  %call515 = call zeroext i8 @gt_to_prob(ptr noundef %332, ptr noundef %333, ptr noundef %add.ptr514), !dbg !3770
  %conv516 = zext i8 %call515 to i32, !dbg !3770
  br label %cond.end524, !dbg !3762

cond.false517:                                    ; preds = %cond.end502
  %337 = load ptr, ptr %args.addr, align 8, !dbg !3771, !tbaa !1228
  %338 = load ptr, ptr %ptr504, align 8, !dbg !3772, !tbaa !1228
  %339 = load ptr, ptr %args.addr, align 8, !dbg !3773, !tbaa !1228
  %qry_prob518 = getelementptr inbounds %struct.args_t, ptr %339, i32 0, i32 27, !dbg !3774
  %340 = load ptr, ptr %qry_prob518, align 8, !dbg !3774, !tbaa !2638
  %341 = load i32, ptr %i, align 4, !dbg !3775, !tbaa !1223
  %mul519 = mul i32 %341, 3, !dbg !3776
  %idx.ext520 = sext i32 %mul519 to i64, !dbg !3777
  %add.ptr521 = getelementptr double, ptr %340, i64 %idx.ext520, !dbg !3777
  %call522 = call zeroext i8 @pl_to_prob(ptr noundef %337, ptr noundef %338, ptr noundef %add.ptr521), !dbg !3778
  %conv523 = zext i8 %call522 to i32, !dbg !3778
  br label %cond.end524, !dbg !3762

cond.end524:                                      ; preds = %cond.false517, %cond.true510
  %cond525 = phi i32 [ %conv516, %cond.true510 ], [ %conv523, %cond.false517 ], !dbg !3762
  %conv526 = trunc i32 %cond525 to i8, !dbg !3762
  %342 = load ptr, ptr %args.addr, align 8, !dbg !3779, !tbaa !1228
  %qry_dsg527 = getelementptr inbounds %struct.args_t, ptr %342, i32 0, i32 37, !dbg !3780
  %343 = load ptr, ptr %qry_dsg527, align 8, !dbg !3780, !tbaa !2604
  %344 = load i32, ptr %i, align 4, !dbg !3781, !tbaa !1223
  %idxprom528 = sext i32 %344 to i64, !dbg !3779
  %arrayidx529 = getelementptr i8, ptr %343, i64 %idxprom528, !dbg !3779
  store i8 %conv526, ptr %arrayidx529, align 1, !dbg !3782, !tbaa !1312
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr504) #14, !dbg !3783
  call void @llvm.lifetime.end.p0(i64 4, ptr %iqry494) #14, !dbg !3783
  br label %for.inc530, !dbg !3784

for.inc530:                                       ; preds = %cond.end524
  %345 = load i32, ptr %i, align 4, !dbg !3785, !tbaa !1223
  %inc531 = add i32 %345, 1, !dbg !3785
  store i32 %inc531, ptr %i, align 4, !dbg !3785, !tbaa !1223
  br label %for.cond489, !dbg !3786, !llvm.loop !3787

for.end532:                                       ; preds = %for.cond489
  %346 = load ptr, ptr %args.addr, align 8, !dbg !3789, !tbaa !1228
  %cross_check533 = getelementptr inbounds %struct.args_t, ptr %346, i32 0, i32 48, !dbg !3790
  %347 = load i32, ptr %cross_check533, align 4, !dbg !3790, !tbaa !2570
  %tobool534 = icmp ne i32 %347, 0, !dbg !3789
  br i1 %tobool534, label %if.end594, label %if.then535, !dbg !3791

if.then535:                                       ; preds = %for.end532
  store i32 0, ptr %i, align 4, !dbg !3792, !tbaa !1223
  br label %for.cond536, !dbg !3793

for.cond536:                                      ; preds = %for.inc591, %if.then535
  %348 = load i32, ptr %i, align 4, !dbg !3794, !tbaa !1223
  %349 = load ptr, ptr %args.addr, align 8, !dbg !3795, !tbaa !1228
  %ngt_smpl537 = getelementptr inbounds %struct.args_t, ptr %349, i32 0, i32 23, !dbg !3796
  %350 = load i32, ptr %ngt_smpl537, align 4, !dbg !3796, !tbaa !2549
  %cmp538 = icmp slt i32 %348, %350, !dbg !3797
  br i1 %cmp538, label %for.body540, label %for.end593, !dbg !3798

for.body540:                                      ; preds = %for.cond536
  call void @llvm.lifetime.start.p0(i64 4, ptr %igt541) #14, !dbg !3799
  tail call void @llvm.dbg.declare(metadata ptr %igt541, metadata !3074, metadata !DIExpression()), !dbg !3800
  %351 = load ptr, ptr %args.addr, align 8, !dbg !3801, !tbaa !1228
  %gt_smpl542 = getelementptr inbounds %struct.args_t, ptr %351, i32 0, i32 25, !dbg !3802
  %352 = load ptr, ptr %gt_smpl542, align 8, !dbg !3802, !tbaa !2566
  %tobool543 = icmp ne ptr %352, null, !dbg !3801
  br i1 %tobool543, label %cond.true544, label %cond.false548, !dbg !3801

cond.true544:                                     ; preds = %for.body540
  %353 = load ptr, ptr %args.addr, align 8, !dbg !3803, !tbaa !1228
  %gt_smpl545 = getelementptr inbounds %struct.args_t, ptr %353, i32 0, i32 25, !dbg !3804
  %354 = load ptr, ptr %gt_smpl545, align 8, !dbg !3804, !tbaa !2566
  %355 = load i32, ptr %i, align 4, !dbg !3805, !tbaa !1223
  %idxprom546 = sext i32 %355 to i64, !dbg !3803
  %arrayidx547 = getelementptr i32, ptr %354, i64 %idxprom546, !dbg !3803
  %356 = load i32, ptr %arrayidx547, align 4, !dbg !3803, !tbaa !1223
  br label %cond.end549, !dbg !3801

cond.false548:                                    ; preds = %for.body540
  %357 = load i32, ptr %i, align 4, !dbg !3806, !tbaa !1223
  br label %cond.end549, !dbg !3801

cond.end549:                                      ; preds = %cond.false548, %cond.true544
  %cond550 = phi i32 [ %356, %cond.true544 ], [ %357, %cond.false548 ], !dbg !3801
  store i32 %cond550, ptr %igt541, align 4, !dbg !3800, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptr551) #14, !dbg !3807
  tail call void @llvm.dbg.declare(metadata ptr %ptr551, metadata !3080, metadata !DIExpression()), !dbg !3808
  %358 = load ptr, ptr %args.addr, align 8, !dbg !3809, !tbaa !1228
  %gt_arr552 = getelementptr inbounds %struct.args_t, ptr %358, i32 0, i32 34, !dbg !3810
  %359 = load ptr, ptr %gt_arr552, align 8, !dbg !3810, !tbaa !3159
  %360 = load i32, ptr %ngt1, align 4, !dbg !3811, !tbaa !1223
  %361 = load i32, ptr %igt541, align 4, !dbg !3812, !tbaa !1223
  %mul553 = mul i32 %360, %361, !dbg !3813
  %idx.ext554 = sext i32 %mul553 to i64, !dbg !3814
  %add.ptr555 = getelementptr i32, ptr %359, i64 %idx.ext554, !dbg !3814
  store ptr %add.ptr555, ptr %ptr551, align 8, !dbg !3808, !tbaa !1228
  %362 = load i32, ptr %gt_use_GT, align 4, !dbg !3815, !tbaa !1223
  %tobool556 = icmp ne i32 %362, 0, !dbg !3815
  br i1 %tobool556, label %cond.true557, label %cond.false564, !dbg !3815

cond.true557:                                     ; preds = %cond.end549
  %363 = load ptr, ptr %args.addr, align 8, !dbg !3816, !tbaa !1228
  %364 = load ptr, ptr %ptr551, align 8, !dbg !3817, !tbaa !1228
  %365 = load ptr, ptr %args.addr, align 8, !dbg !3818, !tbaa !1228
  %gt_prob558 = getelementptr inbounds %struct.args_t, ptr %365, i32 0, i32 28, !dbg !3819
  %366 = load ptr, ptr %gt_prob558, align 8, !dbg !3819, !tbaa !2652
  %367 = load i32, ptr %i, align 4, !dbg !3820, !tbaa !1223
  %mul559 = mul i32 %367, 3, !dbg !3821
  %idx.ext560 = sext i32 %mul559 to i64, !dbg !3822
  %add.ptr561 = getelementptr double, ptr %366, i64 %idx.ext560, !dbg !3822
  %call562 = call zeroext i8 @gt_to_prob(ptr noundef %363, ptr noundef %364, ptr noundef %add.ptr561), !dbg !3823
  %conv563 = zext i8 %call562 to i32, !dbg !3823
  br label %cond.end571, !dbg !3815

cond.false564:                                    ; preds = %cond.end549
  %368 = load ptr, ptr %args.addr, align 8, !dbg !3824, !tbaa !1228
  %369 = load ptr, ptr %ptr551, align 8, !dbg !3825, !tbaa !1228
  %370 = load ptr, ptr %args.addr, align 8, !dbg !3826, !tbaa !1228
  %gt_prob565 = getelementptr inbounds %struct.args_t, ptr %370, i32 0, i32 28, !dbg !3827
  %371 = load ptr, ptr %gt_prob565, align 8, !dbg !3827, !tbaa !2652
  %372 = load i32, ptr %i, align 4, !dbg !3828, !tbaa !1223
  %mul566 = mul i32 %372, 3, !dbg !3829
  %idx.ext567 = sext i32 %mul566 to i64, !dbg !3830
  %add.ptr568 = getelementptr double, ptr %371, i64 %idx.ext567, !dbg !3830
  %call569 = call zeroext i8 @pl_to_prob(ptr noundef %368, ptr noundef %369, ptr noundef %add.ptr568), !dbg !3831
  %conv570 = zext i8 %call569 to i32, !dbg !3831
  br label %cond.end571, !dbg !3815

cond.end571:                                      ; preds = %cond.false564, %cond.true557
  %cond572 = phi i32 [ %conv563, %cond.true557 ], [ %conv570, %cond.false564 ], !dbg !3815
  %conv573 = trunc i32 %cond572 to i8, !dbg !3815
  %373 = load ptr, ptr %args.addr, align 8, !dbg !3832, !tbaa !1228
  %gt_dsg574 = getelementptr inbounds %struct.args_t, ptr %373, i32 0, i32 38, !dbg !3833
  %374 = load ptr, ptr %gt_dsg574, align 8, !dbg !3833, !tbaa !2615
  %375 = load i32, ptr %i, align 4, !dbg !3834, !tbaa !1223
  %idxprom575 = sext i32 %375 to i64, !dbg !3832
  %arrayidx576 = getelementptr i8, ptr %374, i64 %idxprom575, !dbg !3832
  store i8 %conv573, ptr %arrayidx576, align 1, !dbg !3835, !tbaa !1312
  %376 = load ptr, ptr %args.addr, align 8, !dbg !3836, !tbaa !1228
  %hom_only577 = getelementptr inbounds %struct.args_t, ptr %376, i32 0, i32 46, !dbg !3838
  %377 = load i32, ptr %hom_only577, align 4, !dbg !3838, !tbaa !1502
  %tobool578 = icmp ne i32 %377, 0, !dbg !3836
  br i1 %tobool578, label %land.lhs.true579, label %if.end590, !dbg !3839

land.lhs.true579:                                 ; preds = %cond.end571
  %378 = load ptr, ptr %args.addr, align 8, !dbg !3840, !tbaa !1228
  %gt_dsg580 = getelementptr inbounds %struct.args_t, ptr %378, i32 0, i32 38, !dbg !3841
  %379 = load ptr, ptr %gt_dsg580, align 8, !dbg !3841, !tbaa !2615
  %380 = load i32, ptr %i, align 4, !dbg !3842, !tbaa !1223
  %idxprom581 = sext i32 %380 to i64, !dbg !3840
  %arrayidx582 = getelementptr i8, ptr %379, i64 %idxprom581, !dbg !3840
  %381 = load i8, ptr %arrayidx582, align 1, !dbg !3840, !tbaa !1312
  %conv583 = zext i8 %381 to i32, !dbg !3840
  %and584 = and i32 %conv583, 5, !dbg !3843
  %tobool585 = icmp ne i32 %and584, 0, !dbg !3843
  br i1 %tobool585, label %if.end590, label %if.then586, !dbg !3844

if.then586:                                       ; preds = %land.lhs.true579
  %382 = load ptr, ptr %args.addr, align 8, !dbg !3845, !tbaa !1228
  %gt_dsg587 = getelementptr inbounds %struct.args_t, ptr %382, i32 0, i32 38, !dbg !3846
  %383 = load ptr, ptr %gt_dsg587, align 8, !dbg !3846, !tbaa !2615
  %384 = load i32, ptr %i, align 4, !dbg !3847, !tbaa !1223
  %idxprom588 = sext i32 %384 to i64, !dbg !3845
  %arrayidx589 = getelementptr i8, ptr %383, i64 %idxprom588, !dbg !3845
  store i8 0, ptr %arrayidx589, align 1, !dbg !3848, !tbaa !1312
  br label %if.end590, !dbg !3845

if.end590:                                        ; preds = %if.then586, %land.lhs.true579, %cond.end571
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptr551) #14, !dbg !3849
  call void @llvm.lifetime.end.p0(i64 4, ptr %igt541) #14, !dbg !3849
  br label %for.inc591, !dbg !3850

for.inc591:                                       ; preds = %if.end590
  %385 = load i32, ptr %i, align 4, !dbg !3851, !tbaa !1223
  %inc592 = add i32 %385, 1, !dbg !3851
  store i32 %inc592, ptr %i, align 4, !dbg !3851, !tbaa !1223
  br label %for.cond536, !dbg !3852, !llvm.loop !3853

for.end593:                                       ; preds = %for.cond536
  br label %if.end594, !dbg !3855

if.end594:                                        ; preds = %for.end593, %for.end532
  store i32 0, ptr %i, align 4, !dbg !3856, !tbaa !1223
  br label %for.cond595, !dbg !3857

for.cond595:                                      ; preds = %for.inc723, %if.end594
  %386 = load i32, ptr %i, align 4, !dbg !3858, !tbaa !1223
  %387 = load ptr, ptr %args.addr, align 8, !dbg !3859, !tbaa !1228
  %nqry_smpl596 = getelementptr inbounds %struct.args_t, ptr %387, i32 0, i32 22, !dbg !3860
  %388 = load i32, ptr %nqry_smpl596, align 8, !dbg !3860, !tbaa !2252
  %cmp597 = icmp slt i32 %386, %388, !dbg !3861
  br i1 %cmp597, label %for.body599, label %for.end725, !dbg !3862

for.body599:                                      ; preds = %for.cond595
  call void @llvm.lifetime.start.p0(i64 4, ptr %ngt600) #14, !dbg !3863
  tail call void @llvm.dbg.declare(metadata ptr %ngt600, metadata !3081, metadata !DIExpression()), !dbg !3864
  %389 = load ptr, ptr %args.addr, align 8, !dbg !3865, !tbaa !1228
  %cross_check601 = getelementptr inbounds %struct.args_t, ptr %389, i32 0, i32 48, !dbg !3866
  %390 = load i32, ptr %cross_check601, align 4, !dbg !3866, !tbaa !2570
  %tobool602 = icmp ne i32 %390, 0, !dbg !3865
  br i1 %tobool602, label %cond.true603, label %cond.false604, !dbg !3865

cond.true603:                                     ; preds = %for.body599
  %391 = load i32, ptr %i, align 4, !dbg !3867, !tbaa !1223
  br label %cond.end606, !dbg !3865

cond.false604:                                    ; preds = %for.body599
  %392 = load ptr, ptr %args.addr, align 8, !dbg !3868, !tbaa !1228
  %ngt_smpl605 = getelementptr inbounds %struct.args_t, ptr %392, i32 0, i32 23, !dbg !3869
  %393 = load i32, ptr %ngt_smpl605, align 4, !dbg !3869, !tbaa !2549
  br label %cond.end606, !dbg !3865

cond.end606:                                      ; preds = %cond.false604, %cond.true603
  %cond607 = phi i32 [ %391, %cond.true603 ], [ %393, %cond.false604 ], !dbg !3865
  store i32 %cond607, ptr %ngt600, align 4, !dbg !3864, !tbaa !1223
  %394 = load ptr, ptr %args.addr, align 8, !dbg !3870, !tbaa !1228
  %qry_dsg608 = getelementptr inbounds %struct.args_t, ptr %394, i32 0, i32 37, !dbg !3872
  %395 = load ptr, ptr %qry_dsg608, align 8, !dbg !3872, !tbaa !2604
  %396 = load i32, ptr %i, align 4, !dbg !3873, !tbaa !1223
  %idxprom609 = sext i32 %396 to i64, !dbg !3870
  %arrayidx610 = getelementptr i8, ptr %395, i64 %idxprom609, !dbg !3870
  %397 = load i8, ptr %arrayidx610, align 1, !dbg !3870, !tbaa !1312
  %tobool611 = icmp ne i8 %397, 0, !dbg !3870
  br i1 %tobool611, label %if.end614, label %if.then612, !dbg !3874

if.then612:                                       ; preds = %cond.end606
  %398 = load i32, ptr %ngt600, align 4, !dbg !3875, !tbaa !1223
  %399 = load i32, ptr %idx, align 4, !dbg !3877, !tbaa !1223
  %add613 = add i32 %399, %398, !dbg !3877
  store i32 %add613, ptr %idx, align 4, !dbg !3877, !tbaa !1223
  store i32 34, ptr %cleanup.dest.slot, align 4
  br label %cleanup720, !dbg !3878

if.end614:                                        ; preds = %cond.end606
  store i32 0, ptr %j, align 4, !dbg !3879, !tbaa !1223
  br label %for.cond615, !dbg !3880

for.cond615:                                      ; preds = %for.inc717, %if.end614
  %400 = load i32, ptr %j, align 4, !dbg !3881, !tbaa !1223
  %401 = load i32, ptr %ngt600, align 4, !dbg !3882, !tbaa !1223
  %cmp616 = icmp slt i32 %400, %401, !dbg !3883
  br i1 %cmp616, label %for.body618, label %for.end719, !dbg !3884

for.body618:                                      ; preds = %for.cond615
  %402 = load ptr, ptr %args.addr, align 8, !dbg !3885, !tbaa !1228
  %gt_dsg619 = getelementptr inbounds %struct.args_t, ptr %402, i32 0, i32 38, !dbg !3887
  %403 = load ptr, ptr %gt_dsg619, align 8, !dbg !3887, !tbaa !2615
  %404 = load i32, ptr %j, align 4, !dbg !3888, !tbaa !1223
  %idxprom620 = sext i32 %404 to i64, !dbg !3885
  %arrayidx621 = getelementptr i8, ptr %403, i64 %idxprom620, !dbg !3885
  %405 = load i8, ptr %arrayidx621, align 1, !dbg !3885, !tbaa !1312
  %tobool622 = icmp ne i8 %405, 0, !dbg !3885
  br i1 %tobool622, label %if.end625, label %if.then623, !dbg !3889

if.then623:                                       ; preds = %for.body618
  %406 = load i32, ptr %idx, align 4, !dbg !3890, !tbaa !1223
  %inc624 = add i32 %406, 1, !dbg !3890
  store i32 %inc624, ptr %idx, align 4, !dbg !3890, !tbaa !1223
  br label %for.inc717, !dbg !3892

if.end625:                                        ; preds = %for.body618
  call void @llvm.lifetime.start.p0(i64 8, ptr %min626) #14, !dbg !3893
  tail call void @llvm.dbg.declare(metadata ptr %min626, metadata !3085, metadata !DIExpression()), !dbg !3894
  %407 = load ptr, ptr %args.addr, align 8, !dbg !3895, !tbaa !1228
  %qry_prob627 = getelementptr inbounds %struct.args_t, ptr %407, i32 0, i32 27, !dbg !3896
  %408 = load ptr, ptr %qry_prob627, align 8, !dbg !3896, !tbaa !2638
  %409 = load i32, ptr %i, align 4, !dbg !3897, !tbaa !1223
  %mul628 = mul i32 %409, 3, !dbg !3898
  %idxprom629 = sext i32 %mul628 to i64, !dbg !3895
  %arrayidx630 = getelementptr double, ptr %408, i64 %idxprom629, !dbg !3895
  %410 = load double, ptr %arrayidx630, align 8, !dbg !3895, !tbaa !1761
  %411 = load ptr, ptr %args.addr, align 8, !dbg !3899, !tbaa !1228
  %gt_prob631 = getelementptr inbounds %struct.args_t, ptr %411, i32 0, i32 28, !dbg !3900
  %412 = load ptr, ptr %gt_prob631, align 8, !dbg !3900, !tbaa !2652
  %413 = load i32, ptr %j, align 4, !dbg !3901, !tbaa !1223
  %mul632 = mul i32 %413, 3, !dbg !3902
  %idxprom633 = sext i32 %mul632 to i64, !dbg !3899
  %arrayidx634 = getelementptr double, ptr %412, i64 %idxprom633, !dbg !3899
  %414 = load double, ptr %arrayidx634, align 8, !dbg !3899, !tbaa !1761
  %add635 = fadd double %410, %414, !dbg !3903
  store double %add635, ptr %min626, align 8, !dbg !3894, !tbaa !1761
  %415 = load double, ptr %min626, align 8, !dbg !3904, !tbaa !1761
  %416 = load ptr, ptr %args.addr, align 8, !dbg !3906, !tbaa !1228
  %qry_prob636 = getelementptr inbounds %struct.args_t, ptr %416, i32 0, i32 27, !dbg !3907
  %417 = load ptr, ptr %qry_prob636, align 8, !dbg !3907, !tbaa !2638
  %418 = load i32, ptr %i, align 4, !dbg !3908, !tbaa !1223
  %mul637 = mul i32 %418, 3, !dbg !3909
  %add638 = add i32 %mul637, 1, !dbg !3910
  %idxprom639 = sext i32 %add638 to i64, !dbg !3906
  %arrayidx640 = getelementptr double, ptr %417, i64 %idxprom639, !dbg !3906
  %419 = load double, ptr %arrayidx640, align 8, !dbg !3906, !tbaa !1761
  %420 = load ptr, ptr %args.addr, align 8, !dbg !3911, !tbaa !1228
  %gt_prob641 = getelementptr inbounds %struct.args_t, ptr %420, i32 0, i32 28, !dbg !3912
  %421 = load ptr, ptr %gt_prob641, align 8, !dbg !3912, !tbaa !2652
  %422 = load i32, ptr %j, align 4, !dbg !3913, !tbaa !1223
  %mul642 = mul i32 %422, 3, !dbg !3914
  %add643 = add i32 %mul642, 1, !dbg !3915
  %idxprom644 = sext i32 %add643 to i64, !dbg !3911
  %arrayidx645 = getelementptr double, ptr %421, i64 %idxprom644, !dbg !3911
  %423 = load double, ptr %arrayidx645, align 8, !dbg !3911, !tbaa !1761
  %add646 = fadd double %419, %423, !dbg !3916
  %cmp647 = fcmp ogt double %415, %add646, !dbg !3917
  br i1 %cmp647, label %if.then649, label %if.end661, !dbg !3918

if.then649:                                       ; preds = %if.end625
  %424 = load ptr, ptr %args.addr, align 8, !dbg !3919, !tbaa !1228
  %qry_prob650 = getelementptr inbounds %struct.args_t, ptr %424, i32 0, i32 27, !dbg !3920
  %425 = load ptr, ptr %qry_prob650, align 8, !dbg !3920, !tbaa !2638
  %426 = load i32, ptr %i, align 4, !dbg !3921, !tbaa !1223
  %mul651 = mul i32 %426, 3, !dbg !3922
  %add652 = add i32 %mul651, 1, !dbg !3923
  %idxprom653 = sext i32 %add652 to i64, !dbg !3919
  %arrayidx654 = getelementptr double, ptr %425, i64 %idxprom653, !dbg !3919
  %427 = load double, ptr %arrayidx654, align 8, !dbg !3919, !tbaa !1761
  %428 = load ptr, ptr %args.addr, align 8, !dbg !3924, !tbaa !1228
  %gt_prob655 = getelementptr inbounds %struct.args_t, ptr %428, i32 0, i32 28, !dbg !3925
  %429 = load ptr, ptr %gt_prob655, align 8, !dbg !3925, !tbaa !2652
  %430 = load i32, ptr %j, align 4, !dbg !3926, !tbaa !1223
  %mul656 = mul i32 %430, 3, !dbg !3927
  %add657 = add i32 %mul656, 1, !dbg !3928
  %idxprom658 = sext i32 %add657 to i64, !dbg !3924
  %arrayidx659 = getelementptr double, ptr %429, i64 %idxprom658, !dbg !3924
  %431 = load double, ptr %arrayidx659, align 8, !dbg !3924, !tbaa !1761
  %add660 = fadd double %427, %431, !dbg !3929
  store double %add660, ptr %min626, align 8, !dbg !3930, !tbaa !1761
  br label %if.end661, !dbg !3931

if.end661:                                        ; preds = %if.then649, %if.end625
  %432 = load double, ptr %min626, align 8, !dbg !3932, !tbaa !1761
  %433 = load ptr, ptr %args.addr, align 8, !dbg !3934, !tbaa !1228
  %qry_prob662 = getelementptr inbounds %struct.args_t, ptr %433, i32 0, i32 27, !dbg !3935
  %434 = load ptr, ptr %qry_prob662, align 8, !dbg !3935, !tbaa !2638
  %435 = load i32, ptr %i, align 4, !dbg !3936, !tbaa !1223
  %mul663 = mul i32 %435, 3, !dbg !3937
  %add664 = add i32 %mul663, 2, !dbg !3938
  %idxprom665 = sext i32 %add664 to i64, !dbg !3934
  %arrayidx666 = getelementptr double, ptr %434, i64 %idxprom665, !dbg !3934
  %436 = load double, ptr %arrayidx666, align 8, !dbg !3934, !tbaa !1761
  %437 = load ptr, ptr %args.addr, align 8, !dbg !3939, !tbaa !1228
  %gt_prob667 = getelementptr inbounds %struct.args_t, ptr %437, i32 0, i32 28, !dbg !3940
  %438 = load ptr, ptr %gt_prob667, align 8, !dbg !3940, !tbaa !2652
  %439 = load i32, ptr %j, align 4, !dbg !3941, !tbaa !1223
  %mul668 = mul i32 %439, 3, !dbg !3942
  %add669 = add i32 %mul668, 2, !dbg !3943
  %idxprom670 = sext i32 %add669 to i64, !dbg !3939
  %arrayidx671 = getelementptr double, ptr %438, i64 %idxprom670, !dbg !3939
  %440 = load double, ptr %arrayidx671, align 8, !dbg !3939, !tbaa !1761
  %add672 = fadd double %436, %440, !dbg !3944
  %cmp673 = fcmp ogt double %432, %add672, !dbg !3945
  br i1 %cmp673, label %if.then675, label %if.end687, !dbg !3946

if.then675:                                       ; preds = %if.end661
  %441 = load ptr, ptr %args.addr, align 8, !dbg !3947, !tbaa !1228
  %qry_prob676 = getelementptr inbounds %struct.args_t, ptr %441, i32 0, i32 27, !dbg !3948
  %442 = load ptr, ptr %qry_prob676, align 8, !dbg !3948, !tbaa !2638
  %443 = load i32, ptr %i, align 4, !dbg !3949, !tbaa !1223
  %mul677 = mul i32 %443, 3, !dbg !3950
  %add678 = add i32 %mul677, 2, !dbg !3951
  %idxprom679 = sext i32 %add678 to i64, !dbg !3947
  %arrayidx680 = getelementptr double, ptr %442, i64 %idxprom679, !dbg !3947
  %444 = load double, ptr %arrayidx680, align 8, !dbg !3947, !tbaa !1761
  %445 = load ptr, ptr %args.addr, align 8, !dbg !3952, !tbaa !1228
  %gt_prob681 = getelementptr inbounds %struct.args_t, ptr %445, i32 0, i32 28, !dbg !3953
  %446 = load ptr, ptr %gt_prob681, align 8, !dbg !3953, !tbaa !2652
  %447 = load i32, ptr %j, align 4, !dbg !3954, !tbaa !1223
  %mul682 = mul i32 %447, 3, !dbg !3955
  %add683 = add i32 %mul682, 2, !dbg !3956
  %idxprom684 = sext i32 %add683 to i64, !dbg !3952
  %arrayidx685 = getelementptr double, ptr %446, i64 %idxprom684, !dbg !3952
  %448 = load double, ptr %arrayidx685, align 8, !dbg !3952, !tbaa !1761
  %add686 = fadd double %444, %448, !dbg !3957
  store double %add686, ptr %min626, align 8, !dbg !3958, !tbaa !1761
  br label %if.end687, !dbg !3959

if.end687:                                        ; preds = %if.then675, %if.end661
  %449 = load double, ptr %min626, align 8, !dbg !3960, !tbaa !1761
  %450 = load ptr, ptr %args.addr, align 8, !dbg !3961, !tbaa !1228
  %pdiff688 = getelementptr inbounds %struct.args_t, ptr %450, i32 0, i32 26, !dbg !3962
  %451 = load ptr, ptr %pdiff688, align 8, !dbg !3962, !tbaa !2628
  %452 = load i32, ptr %idx, align 4, !dbg !3963, !tbaa !1223
  %idxprom689 = sext i32 %452 to i64, !dbg !3961
  %arrayidx690 = getelementptr double, ptr %451, i64 %idxprom689, !dbg !3961
  %453 = load double, ptr %arrayidx690, align 8, !dbg !3964, !tbaa !1761
  %add691 = fadd double %453, %449, !dbg !3964
  store double %add691, ptr %arrayidx690, align 8, !dbg !3964, !tbaa !1761
  %454 = load ptr, ptr %args.addr, align 8, !dbg !3965, !tbaa !1228
  %calc_hwe_prob692 = getelementptr inbounds %struct.args_t, ptr %454, i32 0, i32 49, !dbg !3966
  %455 = load i32, ptr %calc_hwe_prob692, align 8, !dbg !3966, !tbaa !1262
  %tobool693 = icmp ne i32 %455, 0, !dbg !3965
  br i1 %tobool693, label %if.then694, label %if.end711, !dbg !3967

if.then694:                                       ; preds = %if.end687
  call void @llvm.lifetime.start.p0(i64 4, ptr %match695) #14, !dbg !3968
  tail call void @llvm.dbg.declare(metadata ptr %match695, metadata !3089, metadata !DIExpression()), !dbg !3969
  %456 = load ptr, ptr %args.addr, align 8, !dbg !3970, !tbaa !1228
  %qry_dsg696 = getelementptr inbounds %struct.args_t, ptr %456, i32 0, i32 37, !dbg !3971
  %457 = load ptr, ptr %qry_dsg696, align 8, !dbg !3971, !tbaa !2604
  %458 = load i32, ptr %i, align 4, !dbg !3972, !tbaa !1223
  %idxprom697 = sext i32 %458 to i64, !dbg !3970
  %arrayidx698 = getelementptr i8, ptr %457, i64 %idxprom697, !dbg !3970
  %459 = load i8, ptr %arrayidx698, align 1, !dbg !3970, !tbaa !1312
  %conv699 = zext i8 %459 to i32, !dbg !3970
  %460 = load ptr, ptr %args.addr, align 8, !dbg !3973, !tbaa !1228
  %gt_dsg700 = getelementptr inbounds %struct.args_t, ptr %460, i32 0, i32 38, !dbg !3974
  %461 = load ptr, ptr %gt_dsg700, align 8, !dbg !3974, !tbaa !2615
  %462 = load i32, ptr %j, align 4, !dbg !3975, !tbaa !1223
  %idxprom701 = sext i32 %462 to i64, !dbg !3973
  %arrayidx702 = getelementptr i8, ptr %461, i64 %idxprom701, !dbg !3973
  %463 = load i8, ptr %arrayidx702, align 1, !dbg !3973, !tbaa !1312
  %conv703 = zext i8 %463 to i32, !dbg !3973
  %and704 = and i32 %conv699, %conv703, !dbg !3976
  store i32 %and704, ptr %match695, align 4, !dbg !3969, !tbaa !1223
  %464 = load i32, ptr %match695, align 4, !dbg !3977, !tbaa !1223
  %idxprom705 = sext i32 %464 to i64, !dbg !3978
  %arrayidx706 = getelementptr [8 x double], ptr %hwe_dsg, i64 0, i64 %idxprom705, !dbg !3978
  %465 = load double, ptr %arrayidx706, align 8, !dbg !3978, !tbaa !1761
  %466 = load ptr, ptr %args.addr, align 8, !dbg !3979, !tbaa !1228
  %hwe_prob707 = getelementptr inbounds %struct.args_t, ptr %466, i32 0, i32 40, !dbg !3980
  %467 = load ptr, ptr %hwe_prob707, align 8, !dbg !3980, !tbaa !2823
  %468 = load i32, ptr %idx, align 4, !dbg !3981, !tbaa !1223
  %idxprom708 = sext i32 %468 to i64, !dbg !3979
  %arrayidx709 = getelementptr double, ptr %467, i64 %idxprom708, !dbg !3979
  %469 = load double, ptr %arrayidx709, align 8, !dbg !3982, !tbaa !1761
  %add710 = fadd double %469, %465, !dbg !3982
  store double %add710, ptr %arrayidx709, align 8, !dbg !3982, !tbaa !1761
  call void @llvm.lifetime.end.p0(i64 4, ptr %match695) #14, !dbg !3983
  br label %if.end711, !dbg !3984

if.end711:                                        ; preds = %if.then694, %if.end687
  %470 = load ptr, ptr %args.addr, align 8, !dbg !3985, !tbaa !1228
  %ncnt712 = getelementptr inbounds %struct.args_t, ptr %470, i32 0, i32 30, !dbg !3986
  %471 = load ptr, ptr %ncnt712, align 8, !dbg !3986, !tbaa !2802
  %472 = load i32, ptr %idx, align 4, !dbg !3987, !tbaa !1223
  %idxprom713 = sext i32 %472 to i64, !dbg !3985
  %arrayidx714 = getelementptr i32, ptr %471, i64 %idxprom713, !dbg !3985
  %473 = load i32, ptr %arrayidx714, align 4, !dbg !3988, !tbaa !1223
  %inc715 = add i32 %473, 1, !dbg !3988
  store i32 %inc715, ptr %arrayidx714, align 4, !dbg !3988, !tbaa !1223
  %474 = load i32, ptr %idx, align 4, !dbg !3989, !tbaa !1223
  %inc716 = add i32 %474, 1, !dbg !3989
  store i32 %inc716, ptr %idx, align 4, !dbg !3989, !tbaa !1223
  call void @llvm.lifetime.end.p0(i64 8, ptr %min626) #14, !dbg !3990
  br label %for.inc717, !dbg !3991

for.inc717:                                       ; preds = %if.end711, %if.then623
  %475 = load i32, ptr %j, align 4, !dbg !3992, !tbaa !1223
  %inc718 = add i32 %475, 1, !dbg !3992
  store i32 %inc718, ptr %j, align 4, !dbg !3992, !tbaa !1223
  br label %for.cond615, !dbg !3993, !llvm.loop !3994

for.end719:                                       ; preds = %for.cond615
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3996
  br label %cleanup720, !dbg !3996

cleanup720:                                       ; preds = %for.end719, %if.then612
  call void @llvm.lifetime.end.p0(i64 4, ptr %ngt600) #14, !dbg !3996
  %cleanup.dest721 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest721, label %unreachable [
    i32 0, label %cleanup.cont722
    i32 34, label %for.inc723
  ]

cleanup.cont722:                                  ; preds = %cleanup720
  br label %for.inc723, !dbg !3997

for.inc723:                                       ; preds = %cleanup.cont722, %cleanup720
  %476 = load i32, ptr %i, align 4, !dbg !3998, !tbaa !1223
  %inc724 = add i32 %476, 1, !dbg !3998
  store i32 %inc724, ptr %i, align 4, !dbg !3998, !tbaa !1223
  br label %for.cond595, !dbg !3999, !llvm.loop !4000

for.end725:                                       ; preds = %for.cond595
  br label %if.end726

if.end726:                                        ; preds = %for.end725, %for.end487
  call void @llvm.lifetime.end.p0(i64 4, ptr %idx) #14, !dbg !4002
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4002
  br label %cleanup727, !dbg !4002

cleanup727:                                       ; preds = %if.end726, %if.end326
  call void @llvm.lifetime.end.p0(i64 64, ptr %hwe_dsg) #14, !dbg !4002
  call void @llvm.lifetime.end.p0(i64 8, ptr %af) #14, !dbg !4002
  br label %cleanup729

cleanup729:                                       ; preds = %cleanup727, %if.then24, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %gt_use_GT) #14, !dbg !4002
  call void @llvm.lifetime.end.p0(i64 4, ptr %qry_use_GT) #14, !dbg !4002
  call void @llvm.lifetime.end.p0(i64 8, ptr %qry_rec) #14, !dbg !4002
  call void @llvm.lifetime.end.p0(i64 8, ptr %gt_rec) #14, !dbg !4002
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #14, !dbg !4002
  call void @llvm.lifetime.end.p0(i64 4, ptr %ngt1) #14, !dbg !4002
  call void @llvm.lifetime.end.p0(i64 4, ptr %nqry1) #14, !dbg !4002
  call void @llvm.lifetime.end.p0(i64 4, ptr %k) #14, !dbg !4002
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #14, !dbg !4002
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #14, !dbg !4002
  %cleanup.dest739 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest739, label %unreachable [
    i32 0, label %cleanup.cont740
    i32 1, label %cleanup.cont740
  ]

cleanup.cont740:                                  ; preds = %cleanup729, %cleanup729
  ret void, !dbg !4002

unreachable:                                      ; preds = %cleanup729, %cleanup720, %cleanup482, %cleanup316, %cleanup
  unreachable
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #7

declare !dbg !4003 i32 @fprintf(ptr noundef, ptr noundef, ...) #5

; Function Attrs: nounwind uwtable
define internal void @report(ptr noundef %args) #0 !dbg !4007 {
entry:
  %args.addr = alloca ptr, align 8
  %trim = alloca i32, align 4
  %i = alloca i32, align 4
  %iqry = alloca i32, align 4
  %igt = alloca i32, align 4
  %i114 = alloca i32, align 4
  %j = alloca i32, align 4
  %idx = alloca i32, align 4
  %iqry119 = alloca i32, align 4
  %ngt = alloca i32, align 4
  %igt137 = alloca i32, align 4
  %arr = alloca ptr, align 8
  %i234 = alloca i32, align 4
  %j235 = alloca i32, align 4
  %idx241 = alloca i32, align 4
  %iqry312 = alloca i32, align 4
  %idx327 = alloca i32, align 4
  %igt331 = alloca i32, align 4
  %narr = alloca i32, align 4
  %arr430 = alloca ptr, align 8
  %i434 = alloca i32, align 4
  %j435 = alloca i32, align 4
  %k = alloca i32, align 4
  %idx436 = alloca i32, align 4
  %iqry591 = alloca i32, align 4
  %idx613 = alloca i32, align 4
  %igt617 = alloca i32, align 4
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !4009, metadata !DIExpression()), !dbg !4064
  %0 = load ptr, ptr %args.addr, align 8, !dbg !4065, !tbaa !1228
  %fp = getelementptr inbounds %struct.args_t, ptr %0, i32 0, i32 53, !dbg !4066
  %1 = load ptr, ptr %fp, align 8, !dbg !4066, !tbaa !1768
  %2 = load ptr, ptr %args.addr, align 8, !dbg !4067, !tbaa !1228
  %ncmp = getelementptr inbounds %struct.args_t, ptr %2, i32 0, i32 31, !dbg !4068
  %3 = load i32, ptr %ncmp, align 8, !dbg !4068, !tbaa !1737
  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef @.str.116, i32 noundef %3), !dbg !4069
  %4 = load ptr, ptr %args.addr, align 8, !dbg !4070, !tbaa !1228
  %fp1 = getelementptr inbounds %struct.args_t, ptr %4, i32 0, i32 53, !dbg !4071
  %5 = load ptr, ptr %fp1, align 8, !dbg !4071, !tbaa !1768
  %6 = load ptr, ptr %args.addr, align 8, !dbg !4072, !tbaa !1228
  %nskip_no_match = getelementptr inbounds %struct.args_t, ptr %6, i32 0, i32 54, !dbg !4073
  %7 = load i32, ptr %nskip_no_match, align 8, !dbg !4073, !tbaa !2885
  %call2 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %5, ptr noundef @.str.117, i32 noundef %7), !dbg !4074
  %8 = load ptr, ptr %args.addr, align 8, !dbg !4075, !tbaa !1228
  %fp3 = getelementptr inbounds %struct.args_t, ptr %8, i32 0, i32 53, !dbg !4076
  %9 = load ptr, ptr %fp3, align 8, !dbg !4076, !tbaa !1768
  %10 = load ptr, ptr %args.addr, align 8, !dbg !4077, !tbaa !1228
  %nskip_not_ba = getelementptr inbounds %struct.args_t, ptr %10, i32 0, i32 55, !dbg !4078
  %11 = load i32, ptr %nskip_not_ba, align 4, !dbg !4078, !tbaa !2946
  %call4 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %9, ptr noundef @.str.118, i32 noundef %11), !dbg !4079
  %12 = load ptr, ptr %args.addr, align 8, !dbg !4080, !tbaa !1228
  %fp5 = getelementptr inbounds %struct.args_t, ptr %12, i32 0, i32 53, !dbg !4081
  %13 = load ptr, ptr %fp5, align 8, !dbg !4081, !tbaa !1768
  %14 = load ptr, ptr %args.addr, align 8, !dbg !4082, !tbaa !1228
  %nskip_mono = getelementptr inbounds %struct.args_t, ptr %14, i32 0, i32 56, !dbg !4083
  %15 = load i32, ptr %nskip_mono, align 8, !dbg !4083, !tbaa !2961
  %call6 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %13, ptr noundef @.str.119, i32 noundef %15), !dbg !4084
  %16 = load ptr, ptr %args.addr, align 8, !dbg !4085, !tbaa !1228
  %fp7 = getelementptr inbounds %struct.args_t, ptr %16, i32 0, i32 53, !dbg !4086
  %17 = load ptr, ptr %fp7, align 8, !dbg !4086, !tbaa !1768
  %18 = load ptr, ptr %args.addr, align 8, !dbg !4087, !tbaa !1228
  %nskip_no_data = getelementptr inbounds %struct.args_t, ptr %18, i32 0, i32 57, !dbg !4088
  %19 = load i32, ptr %nskip_no_data, align 4, !dbg !4088, !tbaa !4089
  %call8 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %17, ptr noundef @.str.120, i32 noundef %19), !dbg !4090
  %20 = load ptr, ptr %args.addr, align 8, !dbg !4091, !tbaa !1228
  %fp9 = getelementptr inbounds %struct.args_t, ptr %20, i32 0, i32 53, !dbg !4092
  %21 = load ptr, ptr %fp9, align 8, !dbg !4092, !tbaa !1768
  %22 = load ptr, ptr %args.addr, align 8, !dbg !4093, !tbaa !1228
  %nskip_dip_GT = getelementptr inbounds %struct.args_t, ptr %22, i32 0, i32 58, !dbg !4094
  %23 = load i32, ptr %nskip_dip_GT, align 8, !dbg !4094, !tbaa !4095
  %call10 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %21, ptr noundef @.str.121, i32 noundef %23), !dbg !4096
  %24 = load ptr, ptr %args.addr, align 8, !dbg !4097, !tbaa !1228
  %fp11 = getelementptr inbounds %struct.args_t, ptr %24, i32 0, i32 53, !dbg !4098
  %25 = load ptr, ptr %fp11, align 8, !dbg !4098, !tbaa !1768
  %26 = load ptr, ptr %args.addr, align 8, !dbg !4099, !tbaa !1228
  %nskip_dip_PL = getelementptr inbounds %struct.args_t, ptr %26, i32 0, i32 59, !dbg !4100
  %27 = load i32, ptr %nskip_dip_PL, align 4, !dbg !4100, !tbaa !4101
  %call12 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %25, ptr noundef @.str.122, i32 noundef %27), !dbg !4102
  %28 = load ptr, ptr %args.addr, align 8, !dbg !4103, !tbaa !1228
  %fp13 = getelementptr inbounds %struct.args_t, ptr %28, i32 0, i32 53, !dbg !4104
  %29 = load ptr, ptr %fp13, align 8, !dbg !4104, !tbaa !1768
  %call14 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %29, ptr noundef @.str.123), !dbg !4105
  %30 = load ptr, ptr %args.addr, align 8, !dbg !4106, !tbaa !1228
  %fp15 = getelementptr inbounds %struct.args_t, ptr %30, i32 0, i32 53, !dbg !4107
  %31 = load ptr, ptr %fp15, align 8, !dbg !4107, !tbaa !1768
  %call16 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %31, ptr noundef @.str.124), !dbg !4108
  %32 = load ptr, ptr %args.addr, align 8, !dbg !4109, !tbaa !1228
  %fp17 = getelementptr inbounds %struct.args_t, ptr %32, i32 0, i32 53, !dbg !4110
  %33 = load ptr, ptr %fp17, align 8, !dbg !4110, !tbaa !1768
  %call18 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %33, ptr noundef @.str.125), !dbg !4111
  %34 = load ptr, ptr %args.addr, align 8, !dbg !4112, !tbaa !1228
  %fp19 = getelementptr inbounds %struct.args_t, ptr %34, i32 0, i32 53, !dbg !4113
  %35 = load ptr, ptr %fp19, align 8, !dbg !4113, !tbaa !1768
  %call20 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %35, ptr noundef @.str.126), !dbg !4114
  %36 = load ptr, ptr %args.addr, align 8, !dbg !4115, !tbaa !1228
  %fp21 = getelementptr inbounds %struct.args_t, ptr %36, i32 0, i32 53, !dbg !4116
  %37 = load ptr, ptr %fp21, align 8, !dbg !4116, !tbaa !1768
  %call22 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %37, ptr noundef @.str.127), !dbg !4117
  %38 = load ptr, ptr %args.addr, align 8, !dbg !4118, !tbaa !1228
  %fp23 = getelementptr inbounds %struct.args_t, ptr %38, i32 0, i32 53, !dbg !4119
  %39 = load ptr, ptr %fp23, align 8, !dbg !4119, !tbaa !1768
  %call24 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %39, ptr noundef @.str.128), !dbg !4120
  %40 = load ptr, ptr %args.addr, align 8, !dbg !4121, !tbaa !1228
  %fp25 = getelementptr inbounds %struct.args_t, ptr %40, i32 0, i32 53, !dbg !4122
  %41 = load ptr, ptr %fp25, align 8, !dbg !4122, !tbaa !1768
  %call26 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %41, ptr noundef @.str.129), !dbg !4123
  call void @llvm.lifetime.start.p0(i64 4, ptr %trim) #14, !dbg !4124
  tail call void @llvm.dbg.declare(metadata ptr %trim, metadata !4010, metadata !DIExpression()), !dbg !4125
  %42 = load ptr, ptr %args.addr, align 8, !dbg !4126, !tbaa !1228
  %ntop = getelementptr inbounds %struct.args_t, ptr %42, i32 0, i32 47, !dbg !4127
  %43 = load i32, ptr %ntop, align 8, !dbg !4127, !tbaa !1403
  store i32 %43, ptr %trim, align 4, !dbg !4125, !tbaa !1223
  %44 = load ptr, ptr %args.addr, align 8, !dbg !4128, !tbaa !1228
  %pairs = getelementptr inbounds %struct.args_t, ptr %44, i32 0, i32 39, !dbg !4130
  %45 = load ptr, ptr %pairs, align 8, !dbg !4130, !tbaa !2341
  %tobool = icmp ne ptr %45, null, !dbg !4128
  br i1 %tobool, label %if.end38, label %if.then, !dbg !4131

if.then:                                          ; preds = %entry
  %46 = load ptr, ptr %args.addr, align 8, !dbg !4132, !tbaa !1228
  %ngt_smpl = getelementptr inbounds %struct.args_t, ptr %46, i32 0, i32 23, !dbg !4135
  %47 = load i32, ptr %ngt_smpl, align 4, !dbg !4135, !tbaa !2549
  %tobool27 = icmp ne i32 %47, 0, !dbg !4132
  br i1 %tobool27, label %if.end, label %land.lhs.true, !dbg !4136

land.lhs.true:                                    ; preds = %if.then
  %48 = load ptr, ptr %args.addr, align 8, !dbg !4137, !tbaa !1228
  %nqry_smpl = getelementptr inbounds %struct.args_t, ptr %48, i32 0, i32 22, !dbg !4138
  %49 = load i32, ptr %nqry_smpl, align 8, !dbg !4138, !tbaa !2252
  %50 = load ptr, ptr %args.addr, align 8, !dbg !4139, !tbaa !1228
  %ntop28 = getelementptr inbounds %struct.args_t, ptr %50, i32 0, i32 47, !dbg !4140
  %51 = load i32, ptr %ntop28, align 8, !dbg !4140, !tbaa !1403
  %cmp = icmp sle i32 %49, %51, !dbg !4141
  br i1 %cmp, label %if.then29, label %if.end, !dbg !4142

if.then29:                                        ; preds = %land.lhs.true
  store i32 0, ptr %trim, align 4, !dbg !4143, !tbaa !1223
  br label %if.end, !dbg !4144

if.end:                                           ; preds = %if.then29, %land.lhs.true, %if.then
  %52 = load ptr, ptr %args.addr, align 8, !dbg !4145, !tbaa !1228
  %ngt_smpl30 = getelementptr inbounds %struct.args_t, ptr %52, i32 0, i32 23, !dbg !4147
  %53 = load i32, ptr %ngt_smpl30, align 4, !dbg !4147, !tbaa !2549
  %tobool31 = icmp ne i32 %53, 0, !dbg !4145
  br i1 %tobool31, label %land.lhs.true32, label %if.end37, !dbg !4148

land.lhs.true32:                                  ; preds = %if.end
  %54 = load ptr, ptr %args.addr, align 8, !dbg !4149, !tbaa !1228
  %ngt_smpl33 = getelementptr inbounds %struct.args_t, ptr %54, i32 0, i32 23, !dbg !4150
  %55 = load i32, ptr %ngt_smpl33, align 4, !dbg !4150, !tbaa !2549
  %56 = load ptr, ptr %args.addr, align 8, !dbg !4151, !tbaa !1228
  %ntop34 = getelementptr inbounds %struct.args_t, ptr %56, i32 0, i32 47, !dbg !4152
  %57 = load i32, ptr %ntop34, align 8, !dbg !4152, !tbaa !1403
  %cmp35 = icmp sle i32 %55, %57, !dbg !4153
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !4154

if.then36:                                        ; preds = %land.lhs.true32
  store i32 0, ptr %trim, align 4, !dbg !4155, !tbaa !1223
  br label %if.end37, !dbg !4156

if.end37:                                         ; preds = %if.then36, %land.lhs.true32, %if.end
  br label %if.end38, !dbg !4157

if.end38:                                         ; preds = %if.end37, %entry
  %58 = load ptr, ptr %args.addr, align 8, !dbg !4158, !tbaa !1228
  %pairs39 = getelementptr inbounds %struct.args_t, ptr %58, i32 0, i32 39, !dbg !4159
  %59 = load ptr, ptr %pairs39, align 8, !dbg !4159, !tbaa !2341
  %tobool40 = icmp ne ptr %59, null, !dbg !4158
  br i1 %tobool40, label %if.then41, label %if.else111, !dbg !4160

if.then41:                                        ; preds = %if.end38
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #14, !dbg !4161
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4011, metadata !DIExpression()), !dbg !4162
  store i32 0, ptr %i, align 4, !dbg !4163, !tbaa !1223
  br label %for.cond, !dbg !4164

for.cond:                                         ; preds = %for.inc, %if.then41
  %60 = load i32, ptr %i, align 4, !dbg !4165, !tbaa !1223
  %61 = load ptr, ptr %args.addr, align 8, !dbg !4166, !tbaa !1228
  %npairs = getelementptr inbounds %struct.args_t, ptr %61, i32 0, i32 32, !dbg !4167
  %62 = load i32, ptr %npairs, align 4, !dbg !4167, !tbaa !2334
  %cmp42 = icmp ult i32 %60, %62, !dbg !4168
  br i1 %cmp42, label %for.body, label %for.end, !dbg !4169

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %iqry) #14, !dbg !4170
  tail call void @llvm.dbg.declare(metadata ptr %iqry, metadata !4014, metadata !DIExpression()), !dbg !4171
  %63 = load ptr, ptr %args.addr, align 8, !dbg !4172, !tbaa !1228
  %pairs43 = getelementptr inbounds %struct.args_t, ptr %63, i32 0, i32 39, !dbg !4173
  %64 = load ptr, ptr %pairs43, align 8, !dbg !4173, !tbaa !2341
  %65 = load i32, ptr %i, align 4, !dbg !4174, !tbaa !1223
  %idxprom = sext i32 %65 to i64, !dbg !4172
  %arrayidx = getelementptr %struct.pair_t, ptr %64, i64 %idxprom, !dbg !4172
  %iqry44 = getelementptr inbounds %struct.pair_t, ptr %arrayidx, i32 0, i32 0, !dbg !4175
  %66 = load i32, ptr %iqry44, align 4, !dbg !4175, !tbaa !2367
  store i32 %66, ptr %iqry, align 4, !dbg !4171, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 4, ptr %igt) #14, !dbg !4176
  tail call void @llvm.dbg.declare(metadata ptr %igt, metadata !4018, metadata !DIExpression()), !dbg !4177
  %67 = load ptr, ptr %args.addr, align 8, !dbg !4178, !tbaa !1228
  %pairs45 = getelementptr inbounds %struct.args_t, ptr %67, i32 0, i32 39, !dbg !4179
  %68 = load ptr, ptr %pairs45, align 8, !dbg !4179, !tbaa !2341
  %69 = load i32, ptr %i, align 4, !dbg !4180, !tbaa !1223
  %idxprom46 = sext i32 %69 to i64, !dbg !4178
  %arrayidx47 = getelementptr %struct.pair_t, ptr %68, i64 %idxprom46, !dbg !4178
  %igt48 = getelementptr inbounds %struct.pair_t, ptr %arrayidx47, i32 0, i32 1, !dbg !4181
  %70 = load i32, ptr %igt48, align 4, !dbg !4181, !tbaa !2385
  store i32 %70, ptr %igt, align 4, !dbg !4177, !tbaa !1223
  %71 = load ptr, ptr %args.addr, align 8, !dbg !4182, !tbaa !1228
  %ndiff = getelementptr inbounds %struct.args_t, ptr %71, i32 0, i32 29, !dbg !4184
  %72 = load ptr, ptr %ndiff, align 8, !dbg !4184, !tbaa !2795
  %tobool49 = icmp ne ptr %72, null, !dbg !4182
  br i1 %tobool49, label %if.then50, label %if.else, !dbg !4185

if.then50:                                        ; preds = %for.body
  %73 = load ptr, ptr %args.addr, align 8, !dbg !4186, !tbaa !1228
  %fp51 = getelementptr inbounds %struct.args_t, ptr %73, i32 0, i32 53, !dbg !4188
  %74 = load ptr, ptr %fp51, align 8, !dbg !4188, !tbaa !1768
  %75 = load ptr, ptr %args.addr, align 8, !dbg !4189, !tbaa !1228
  %qry_hdr = getelementptr inbounds %struct.args_t, ptr %75, i32 0, i32 2, !dbg !4190
  %76 = load ptr, ptr %qry_hdr, align 8, !dbg !4190, !tbaa !2104
  %samples = getelementptr inbounds %struct.bcf_hdr_t, ptr %76, i32 0, i32 3, !dbg !4191
  %77 = load ptr, ptr %samples, align 8, !dbg !4191, !tbaa !4192
  %78 = load i32, ptr %iqry, align 4, !dbg !4194, !tbaa !1223
  %idxprom52 = sext i32 %78 to i64, !dbg !4189
  %arrayidx53 = getelementptr ptr, ptr %77, i64 %idxprom52, !dbg !4189
  %79 = load ptr, ptr %arrayidx53, align 8, !dbg !4189, !tbaa !1228
  %80 = load ptr, ptr %args.addr, align 8, !dbg !4195, !tbaa !1228
  %gt_hdr = getelementptr inbounds %struct.args_t, ptr %80, i32 0, i32 1, !dbg !4196
  %81 = load ptr, ptr %gt_hdr, align 8, !dbg !4196, !tbaa !2120
  %tobool54 = icmp ne ptr %81, null, !dbg !4195
  br i1 %tobool54, label %cond.true, label %cond.false, !dbg !4195

cond.true:                                        ; preds = %if.then50
  %82 = load ptr, ptr %args.addr, align 8, !dbg !4197, !tbaa !1228
  %gt_hdr55 = getelementptr inbounds %struct.args_t, ptr %82, i32 0, i32 1, !dbg !4198
  %83 = load ptr, ptr %gt_hdr55, align 8, !dbg !4198, !tbaa !2120
  %samples56 = getelementptr inbounds %struct.bcf_hdr_t, ptr %83, i32 0, i32 3, !dbg !4199
  %84 = load ptr, ptr %samples56, align 8, !dbg !4199, !tbaa !4192
  %85 = load i32, ptr %igt, align 4, !dbg !4200, !tbaa !1223
  %idxprom57 = sext i32 %85 to i64, !dbg !4197
  %arrayidx58 = getelementptr ptr, ptr %84, i64 %idxprom57, !dbg !4197
  %86 = load ptr, ptr %arrayidx58, align 8, !dbg !4197, !tbaa !1228
  br label %cond.end, !dbg !4195

cond.false:                                       ; preds = %if.then50
  %87 = load ptr, ptr %args.addr, align 8, !dbg !4201, !tbaa !1228
  %qry_hdr59 = getelementptr inbounds %struct.args_t, ptr %87, i32 0, i32 2, !dbg !4202
  %88 = load ptr, ptr %qry_hdr59, align 8, !dbg !4202, !tbaa !2104
  %samples60 = getelementptr inbounds %struct.bcf_hdr_t, ptr %88, i32 0, i32 3, !dbg !4203
  %89 = load ptr, ptr %samples60, align 8, !dbg !4203, !tbaa !4192
  %90 = load i32, ptr %igt, align 4, !dbg !4204, !tbaa !1223
  %idxprom61 = sext i32 %90 to i64, !dbg !4201
  %arrayidx62 = getelementptr ptr, ptr %89, i64 %idxprom61, !dbg !4201
  %91 = load ptr, ptr %arrayidx62, align 8, !dbg !4201, !tbaa !1228
  br label %cond.end, !dbg !4195

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %86, %cond.true ], [ %91, %cond.false ], !dbg !4195
  %92 = load ptr, ptr %args.addr, align 8, !dbg !4205, !tbaa !1228
  %ndiff63 = getelementptr inbounds %struct.args_t, ptr %92, i32 0, i32 29, !dbg !4206
  %93 = load ptr, ptr %ndiff63, align 8, !dbg !4206, !tbaa !2795
  %94 = load i32, ptr %i, align 4, !dbg !4207, !tbaa !1223
  %idxprom64 = sext i32 %94 to i64, !dbg !4205
  %arrayidx65 = getelementptr i32, ptr %93, i64 %idxprom64, !dbg !4205
  %95 = load i32, ptr %arrayidx65, align 4, !dbg !4205, !tbaa !1223
  %96 = load ptr, ptr %args.addr, align 8, !dbg !4208, !tbaa !1228
  %calc_hwe_prob = getelementptr inbounds %struct.args_t, ptr %96, i32 0, i32 49, !dbg !4209
  %97 = load i32, ptr %calc_hwe_prob, align 8, !dbg !4209, !tbaa !1262
  %tobool66 = icmp ne i32 %97, 0, !dbg !4208
  br i1 %tobool66, label %cond.true67, label %cond.false70, !dbg !4208

cond.true67:                                      ; preds = %cond.end
  %98 = load ptr, ptr %args.addr, align 8, !dbg !4210, !tbaa !1228
  %hwe_prob = getelementptr inbounds %struct.args_t, ptr %98, i32 0, i32 40, !dbg !4211
  %99 = load ptr, ptr %hwe_prob, align 8, !dbg !4211, !tbaa !2823
  %100 = load i32, ptr %i, align 4, !dbg !4212, !tbaa !1223
  %idxprom68 = sext i32 %100 to i64, !dbg !4210
  %arrayidx69 = getelementptr double, ptr %99, i64 %idxprom68, !dbg !4210
  %101 = load double, ptr %arrayidx69, align 8, !dbg !4210, !tbaa !1761
  br label %cond.end71, !dbg !4208

cond.false70:                                     ; preds = %cond.end
  br label %cond.end71, !dbg !4208

cond.end71:                                       ; preds = %cond.false70, %cond.true67
  %cond72 = phi double [ %101, %cond.true67 ], [ 0.000000e+00, %cond.false70 ], !dbg !4208
  %102 = load ptr, ptr %args.addr, align 8, !dbg !4213, !tbaa !1228
  %ncnt = getelementptr inbounds %struct.args_t, ptr %102, i32 0, i32 30, !dbg !4214
  %103 = load ptr, ptr %ncnt, align 8, !dbg !4214, !tbaa !2802
  %104 = load i32, ptr %i, align 4, !dbg !4215, !tbaa !1223
  %idxprom73 = sext i32 %104 to i64, !dbg !4213
  %arrayidx74 = getelementptr i32, ptr %103, i64 %idxprom73, !dbg !4213
  %105 = load i32, ptr %arrayidx74, align 4, !dbg !4213, !tbaa !1223
  %call75 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %74, ptr noundef @.str.130, ptr noundef %79, ptr noundef %cond, i32 noundef %95, double noundef %cond72, i32 noundef %105), !dbg !4216
  br label %if.end110, !dbg !4217

if.else:                                          ; preds = %for.body
  %106 = load ptr, ptr %args.addr, align 8, !dbg !4218, !tbaa !1228
  %fp76 = getelementptr inbounds %struct.args_t, ptr %106, i32 0, i32 53, !dbg !4220
  %107 = load ptr, ptr %fp76, align 8, !dbg !4220, !tbaa !1768
  %108 = load ptr, ptr %args.addr, align 8, !dbg !4221, !tbaa !1228
  %qry_hdr77 = getelementptr inbounds %struct.args_t, ptr %108, i32 0, i32 2, !dbg !4222
  %109 = load ptr, ptr %qry_hdr77, align 8, !dbg !4222, !tbaa !2104
  %samples78 = getelementptr inbounds %struct.bcf_hdr_t, ptr %109, i32 0, i32 3, !dbg !4223
  %110 = load ptr, ptr %samples78, align 8, !dbg !4223, !tbaa !4192
  %111 = load i32, ptr %iqry, align 4, !dbg !4224, !tbaa !1223
  %idxprom79 = sext i32 %111 to i64, !dbg !4221
  %arrayidx80 = getelementptr ptr, ptr %110, i64 %idxprom79, !dbg !4221
  %112 = load ptr, ptr %arrayidx80, align 8, !dbg !4221, !tbaa !1228
  %113 = load ptr, ptr %args.addr, align 8, !dbg !4225, !tbaa !1228
  %gt_hdr81 = getelementptr inbounds %struct.args_t, ptr %113, i32 0, i32 1, !dbg !4226
  %114 = load ptr, ptr %gt_hdr81, align 8, !dbg !4226, !tbaa !2120
  %tobool82 = icmp ne ptr %114, null, !dbg !4225
  br i1 %tobool82, label %cond.true83, label %cond.false88, !dbg !4225

cond.true83:                                      ; preds = %if.else
  %115 = load ptr, ptr %args.addr, align 8, !dbg !4227, !tbaa !1228
  %gt_hdr84 = getelementptr inbounds %struct.args_t, ptr %115, i32 0, i32 1, !dbg !4228
  %116 = load ptr, ptr %gt_hdr84, align 8, !dbg !4228, !tbaa !2120
  %samples85 = getelementptr inbounds %struct.bcf_hdr_t, ptr %116, i32 0, i32 3, !dbg !4229
  %117 = load ptr, ptr %samples85, align 8, !dbg !4229, !tbaa !4192
  %118 = load i32, ptr %igt, align 4, !dbg !4230, !tbaa !1223
  %idxprom86 = sext i32 %118 to i64, !dbg !4227
  %arrayidx87 = getelementptr ptr, ptr %117, i64 %idxprom86, !dbg !4227
  %119 = load ptr, ptr %arrayidx87, align 8, !dbg !4227, !tbaa !1228
  br label %cond.end93, !dbg !4225

cond.false88:                                     ; preds = %if.else
  %120 = load ptr, ptr %args.addr, align 8, !dbg !4231, !tbaa !1228
  %qry_hdr89 = getelementptr inbounds %struct.args_t, ptr %120, i32 0, i32 2, !dbg !4232
  %121 = load ptr, ptr %qry_hdr89, align 8, !dbg !4232, !tbaa !2104
  %samples90 = getelementptr inbounds %struct.bcf_hdr_t, ptr %121, i32 0, i32 3, !dbg !4233
  %122 = load ptr, ptr %samples90, align 8, !dbg !4233, !tbaa !4192
  %123 = load i32, ptr %igt, align 4, !dbg !4234, !tbaa !1223
  %idxprom91 = sext i32 %123 to i64, !dbg !4231
  %arrayidx92 = getelementptr ptr, ptr %122, i64 %idxprom91, !dbg !4231
  %124 = load ptr, ptr %arrayidx92, align 8, !dbg !4231, !tbaa !1228
  br label %cond.end93, !dbg !4225

cond.end93:                                       ; preds = %cond.false88, %cond.true83
  %cond94 = phi ptr [ %119, %cond.true83 ], [ %124, %cond.false88 ], !dbg !4225
  %125 = load ptr, ptr %args.addr, align 8, !dbg !4235, !tbaa !1228
  %pdiff = getelementptr inbounds %struct.args_t, ptr %125, i32 0, i32 26, !dbg !4236
  %126 = load ptr, ptr %pdiff, align 8, !dbg !4236, !tbaa !2628
  %127 = load i32, ptr %i, align 4, !dbg !4237, !tbaa !1223
  %idxprom95 = sext i32 %127 to i64, !dbg !4235
  %arrayidx96 = getelementptr double, ptr %126, i64 %idxprom95, !dbg !4235
  %128 = load double, ptr %arrayidx96, align 8, !dbg !4235, !tbaa !1761
  %129 = load ptr, ptr %args.addr, align 8, !dbg !4238, !tbaa !1228
  %calc_hwe_prob97 = getelementptr inbounds %struct.args_t, ptr %129, i32 0, i32 49, !dbg !4239
  %130 = load i32, ptr %calc_hwe_prob97, align 8, !dbg !4239, !tbaa !1262
  %tobool98 = icmp ne i32 %130, 0, !dbg !4238
  br i1 %tobool98, label %cond.true99, label %cond.false103, !dbg !4238

cond.true99:                                      ; preds = %cond.end93
  %131 = load ptr, ptr %args.addr, align 8, !dbg !4240, !tbaa !1228
  %hwe_prob100 = getelementptr inbounds %struct.args_t, ptr %131, i32 0, i32 40, !dbg !4241
  %132 = load ptr, ptr %hwe_prob100, align 8, !dbg !4241, !tbaa !2823
  %133 = load i32, ptr %i, align 4, !dbg !4242, !tbaa !1223
  %idxprom101 = sext i32 %133 to i64, !dbg !4240
  %arrayidx102 = getelementptr double, ptr %132, i64 %idxprom101, !dbg !4240
  %134 = load double, ptr %arrayidx102, align 8, !dbg !4240, !tbaa !1761
  br label %cond.end104, !dbg !4238

cond.false103:                                    ; preds = %cond.end93
  br label %cond.end104, !dbg !4238

cond.end104:                                      ; preds = %cond.false103, %cond.true99
  %cond105 = phi double [ %134, %cond.true99 ], [ 0.000000e+00, %cond.false103 ], !dbg !4238
  %135 = load ptr, ptr %args.addr, align 8, !dbg !4243, !tbaa !1228
  %ncnt106 = getelementptr inbounds %struct.args_t, ptr %135, i32 0, i32 30, !dbg !4244
  %136 = load ptr, ptr %ncnt106, align 8, !dbg !4244, !tbaa !2802
  %137 = load i32, ptr %i, align 4, !dbg !4245, !tbaa !1223
  %idxprom107 = sext i32 %137 to i64, !dbg !4243
  %arrayidx108 = getelementptr i32, ptr %136, i64 %idxprom107, !dbg !4243
  %138 = load i32, ptr %arrayidx108, align 4, !dbg !4243, !tbaa !1223
  %call109 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %107, ptr noundef @.str.131, ptr noundef %112, ptr noundef %cond94, double noundef %128, double noundef %cond105, i32 noundef %138), !dbg !4246
  br label %if.end110

if.end110:                                        ; preds = %cond.end104, %cond.end71
  call void @llvm.lifetime.end.p0(i64 4, ptr %igt) #14, !dbg !4247
  call void @llvm.lifetime.end.p0(i64 4, ptr %iqry) #14, !dbg !4247
  br label %for.inc, !dbg !4248

for.inc:                                          ; preds = %if.end110
  %139 = load i32, ptr %i, align 4, !dbg !4249, !tbaa !1223
  %inc = add i32 %139, 1, !dbg !4249
  store i32 %inc, ptr %i, align 4, !dbg !4249, !tbaa !1223
  br label %for.cond, !dbg !4250, !llvm.loop !4251

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #14, !dbg !4253
  br label %if.end696, !dbg !4254

if.else111:                                       ; preds = %if.end38
  %140 = load i32, ptr %trim, align 4, !dbg !4255, !tbaa !1223
  %tobool112 = icmp ne i32 %140, 0, !dbg !4255
  br i1 %tobool112, label %if.else228, label %if.then113, !dbg !4256

if.then113:                                       ; preds = %if.else111
  call void @llvm.lifetime.start.p0(i64 4, ptr %i114) #14, !dbg !4257
  tail call void @llvm.dbg.declare(metadata ptr %i114, metadata !4019, metadata !DIExpression()), !dbg !4258
  call void @llvm.lifetime.start.p0(i64 4, ptr %j) #14, !dbg !4257
  tail call void @llvm.dbg.declare(metadata ptr %j, metadata !4022, metadata !DIExpression()), !dbg !4259
  call void @llvm.lifetime.start.p0(i64 4, ptr %idx) #14, !dbg !4257
  tail call void @llvm.dbg.declare(metadata ptr %idx, metadata !4023, metadata !DIExpression()), !dbg !4260
  store i32 0, ptr %idx, align 4, !dbg !4260, !tbaa !1223
  store i32 0, ptr %i114, align 4, !dbg !4261, !tbaa !1223
  br label %for.cond115, !dbg !4262

for.cond115:                                      ; preds = %for.inc225, %if.then113
  %141 = load i32, ptr %i114, align 4, !dbg !4263, !tbaa !1223
  %142 = load ptr, ptr %args.addr, align 8, !dbg !4264, !tbaa !1228
  %nqry_smpl116 = getelementptr inbounds %struct.args_t, ptr %142, i32 0, i32 22, !dbg !4265
  %143 = load i32, ptr %nqry_smpl116, align 8, !dbg !4265, !tbaa !2252
  %cmp117 = icmp slt i32 %141, %143, !dbg !4266
  br i1 %cmp117, label %for.body118, label %for.end227, !dbg !4267

for.body118:                                      ; preds = %for.cond115
  call void @llvm.lifetime.start.p0(i64 4, ptr %iqry119) #14, !dbg !4268
  tail call void @llvm.dbg.declare(metadata ptr %iqry119, metadata !4024, metadata !DIExpression()), !dbg !4269
  %144 = load ptr, ptr %args.addr, align 8, !dbg !4270, !tbaa !1228
  %qry_smpl = getelementptr inbounds %struct.args_t, ptr %144, i32 0, i32 24, !dbg !4271
  %145 = load ptr, ptr %qry_smpl, align 8, !dbg !4271, !tbaa !2562
  %tobool120 = icmp ne ptr %145, null, !dbg !4270
  br i1 %tobool120, label %cond.true121, label %cond.false125, !dbg !4270

cond.true121:                                     ; preds = %for.body118
  %146 = load ptr, ptr %args.addr, align 8, !dbg !4272, !tbaa !1228
  %qry_smpl122 = getelementptr inbounds %struct.args_t, ptr %146, i32 0, i32 24, !dbg !4273
  %147 = load ptr, ptr %qry_smpl122, align 8, !dbg !4273, !tbaa !2562
  %148 = load i32, ptr %i114, align 4, !dbg !4274, !tbaa !1223
  %idxprom123 = sext i32 %148 to i64, !dbg !4272
  %arrayidx124 = getelementptr i32, ptr %147, i64 %idxprom123, !dbg !4272
  %149 = load i32, ptr %arrayidx124, align 4, !dbg !4272, !tbaa !1223
  br label %cond.end126, !dbg !4270

cond.false125:                                    ; preds = %for.body118
  %150 = load i32, ptr %i114, align 4, !dbg !4275, !tbaa !1223
  br label %cond.end126, !dbg !4270

cond.end126:                                      ; preds = %cond.false125, %cond.true121
  %cond127 = phi i32 [ %149, %cond.true121 ], [ %150, %cond.false125 ], !dbg !4270
  store i32 %cond127, ptr %iqry119, align 4, !dbg !4269, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 4, ptr %ngt) #14, !dbg !4276
  tail call void @llvm.dbg.declare(metadata ptr %ngt, metadata !4028, metadata !DIExpression()), !dbg !4277
  %151 = load ptr, ptr %args.addr, align 8, !dbg !4278, !tbaa !1228
  %cross_check = getelementptr inbounds %struct.args_t, ptr %151, i32 0, i32 48, !dbg !4279
  %152 = load i32, ptr %cross_check, align 4, !dbg !4279, !tbaa !2570
  %tobool128 = icmp ne i32 %152, 0, !dbg !4278
  br i1 %tobool128, label %cond.true129, label %cond.false130, !dbg !4278

cond.true129:                                     ; preds = %cond.end126
  %153 = load i32, ptr %i114, align 4, !dbg !4280, !tbaa !1223
  br label %cond.end132, !dbg !4278

cond.false130:                                    ; preds = %cond.end126
  %154 = load ptr, ptr %args.addr, align 8, !dbg !4281, !tbaa !1228
  %ngt_smpl131 = getelementptr inbounds %struct.args_t, ptr %154, i32 0, i32 23, !dbg !4282
  %155 = load i32, ptr %ngt_smpl131, align 4, !dbg !4282, !tbaa !2549
  br label %cond.end132, !dbg !4278

cond.end132:                                      ; preds = %cond.false130, %cond.true129
  %cond133 = phi i32 [ %153, %cond.true129 ], [ %155, %cond.false130 ], !dbg !4278
  store i32 %cond133, ptr %ngt, align 4, !dbg !4277, !tbaa !1223
  store i32 0, ptr %j, align 4, !dbg !4283, !tbaa !1223
  br label %for.cond134, !dbg !4284

for.cond134:                                      ; preds = %for.inc222, %cond.end132
  %156 = load i32, ptr %j, align 4, !dbg !4285, !tbaa !1223
  %157 = load i32, ptr %ngt, align 4, !dbg !4286, !tbaa !1223
  %cmp135 = icmp slt i32 %156, %157, !dbg !4287
  br i1 %cmp135, label %for.body136, label %for.end224, !dbg !4288

for.body136:                                      ; preds = %for.cond134
  call void @llvm.lifetime.start.p0(i64 4, ptr %igt137) #14, !dbg !4289
  tail call void @llvm.dbg.declare(metadata ptr %igt137, metadata !4029, metadata !DIExpression()), !dbg !4290
  %158 = load ptr, ptr %args.addr, align 8, !dbg !4291, !tbaa !1228
  %gt_smpl = getelementptr inbounds %struct.args_t, ptr %158, i32 0, i32 25, !dbg !4292
  %159 = load ptr, ptr %gt_smpl, align 8, !dbg !4292, !tbaa !2566
  %tobool138 = icmp ne ptr %159, null, !dbg !4291
  br i1 %tobool138, label %cond.true139, label %cond.false143, !dbg !4291

cond.true139:                                     ; preds = %for.body136
  %160 = load ptr, ptr %args.addr, align 8, !dbg !4293, !tbaa !1228
  %gt_smpl140 = getelementptr inbounds %struct.args_t, ptr %160, i32 0, i32 25, !dbg !4294
  %161 = load ptr, ptr %gt_smpl140, align 8, !dbg !4294, !tbaa !2566
  %162 = load i32, ptr %j, align 4, !dbg !4295, !tbaa !1223
  %idxprom141 = sext i32 %162 to i64, !dbg !4293
  %arrayidx142 = getelementptr i32, ptr %161, i64 %idxprom141, !dbg !4293
  %163 = load i32, ptr %arrayidx142, align 4, !dbg !4293, !tbaa !1223
  br label %cond.end144, !dbg !4291

cond.false143:                                    ; preds = %for.body136
  %164 = load i32, ptr %j, align 4, !dbg !4296, !tbaa !1223
  br label %cond.end144, !dbg !4291

cond.end144:                                      ; preds = %cond.false143, %cond.true139
  %cond145 = phi i32 [ %163, %cond.true139 ], [ %164, %cond.false143 ], !dbg !4291
  store i32 %cond145, ptr %igt137, align 4, !dbg !4290, !tbaa !1223
  %165 = load ptr, ptr %args.addr, align 8, !dbg !4297, !tbaa !1228
  %ndiff146 = getelementptr inbounds %struct.args_t, ptr %165, i32 0, i32 29, !dbg !4299
  %166 = load ptr, ptr %ndiff146, align 8, !dbg !4299, !tbaa !2795
  %tobool147 = icmp ne ptr %166, null, !dbg !4297
  br i1 %tobool147, label %if.then148, label %if.else184, !dbg !4300

if.then148:                                       ; preds = %cond.end144
  %167 = load ptr, ptr %args.addr, align 8, !dbg !4301, !tbaa !1228
  %fp149 = getelementptr inbounds %struct.args_t, ptr %167, i32 0, i32 53, !dbg !4303
  %168 = load ptr, ptr %fp149, align 8, !dbg !4303, !tbaa !1768
  %169 = load ptr, ptr %args.addr, align 8, !dbg !4304, !tbaa !1228
  %qry_hdr150 = getelementptr inbounds %struct.args_t, ptr %169, i32 0, i32 2, !dbg !4305
  %170 = load ptr, ptr %qry_hdr150, align 8, !dbg !4305, !tbaa !2104
  %samples151 = getelementptr inbounds %struct.bcf_hdr_t, ptr %170, i32 0, i32 3, !dbg !4306
  %171 = load ptr, ptr %samples151, align 8, !dbg !4306, !tbaa !4192
  %172 = load i32, ptr %iqry119, align 4, !dbg !4307, !tbaa !1223
  %idxprom152 = sext i32 %172 to i64, !dbg !4304
  %arrayidx153 = getelementptr ptr, ptr %171, i64 %idxprom152, !dbg !4304
  %173 = load ptr, ptr %arrayidx153, align 8, !dbg !4304, !tbaa !1228
  %174 = load ptr, ptr %args.addr, align 8, !dbg !4308, !tbaa !1228
  %gt_hdr154 = getelementptr inbounds %struct.args_t, ptr %174, i32 0, i32 1, !dbg !4309
  %175 = load ptr, ptr %gt_hdr154, align 8, !dbg !4309, !tbaa !2120
  %tobool155 = icmp ne ptr %175, null, !dbg !4308
  br i1 %tobool155, label %cond.true156, label %cond.false161, !dbg !4308

cond.true156:                                     ; preds = %if.then148
  %176 = load ptr, ptr %args.addr, align 8, !dbg !4310, !tbaa !1228
  %gt_hdr157 = getelementptr inbounds %struct.args_t, ptr %176, i32 0, i32 1, !dbg !4311
  %177 = load ptr, ptr %gt_hdr157, align 8, !dbg !4311, !tbaa !2120
  %samples158 = getelementptr inbounds %struct.bcf_hdr_t, ptr %177, i32 0, i32 3, !dbg !4312
  %178 = load ptr, ptr %samples158, align 8, !dbg !4312, !tbaa !4192
  %179 = load i32, ptr %igt137, align 4, !dbg !4313, !tbaa !1223
  %idxprom159 = sext i32 %179 to i64, !dbg !4310
  %arrayidx160 = getelementptr ptr, ptr %178, i64 %idxprom159, !dbg !4310
  %180 = load ptr, ptr %arrayidx160, align 8, !dbg !4310, !tbaa !1228
  br label %cond.end166, !dbg !4308

cond.false161:                                    ; preds = %if.then148
  %181 = load ptr, ptr %args.addr, align 8, !dbg !4314, !tbaa !1228
  %qry_hdr162 = getelementptr inbounds %struct.args_t, ptr %181, i32 0, i32 2, !dbg !4315
  %182 = load ptr, ptr %qry_hdr162, align 8, !dbg !4315, !tbaa !2104
  %samples163 = getelementptr inbounds %struct.bcf_hdr_t, ptr %182, i32 0, i32 3, !dbg !4316
  %183 = load ptr, ptr %samples163, align 8, !dbg !4316, !tbaa !4192
  %184 = load i32, ptr %igt137, align 4, !dbg !4317, !tbaa !1223
  %idxprom164 = sext i32 %184 to i64, !dbg !4314
  %arrayidx165 = getelementptr ptr, ptr %183, i64 %idxprom164, !dbg !4314
  %185 = load ptr, ptr %arrayidx165, align 8, !dbg !4314, !tbaa !1228
  br label %cond.end166, !dbg !4308

cond.end166:                                      ; preds = %cond.false161, %cond.true156
  %cond167 = phi ptr [ %180, %cond.true156 ], [ %185, %cond.false161 ], !dbg !4308
  %186 = load ptr, ptr %args.addr, align 8, !dbg !4318, !tbaa !1228
  %ndiff168 = getelementptr inbounds %struct.args_t, ptr %186, i32 0, i32 29, !dbg !4319
  %187 = load ptr, ptr %ndiff168, align 8, !dbg !4319, !tbaa !2795
  %188 = load i32, ptr %idx, align 4, !dbg !4320, !tbaa !1223
  %idxprom169 = sext i32 %188 to i64, !dbg !4318
  %arrayidx170 = getelementptr i32, ptr %187, i64 %idxprom169, !dbg !4318
  %189 = load i32, ptr %arrayidx170, align 4, !dbg !4318, !tbaa !1223
  %190 = load ptr, ptr %args.addr, align 8, !dbg !4321, !tbaa !1228
  %calc_hwe_prob171 = getelementptr inbounds %struct.args_t, ptr %190, i32 0, i32 49, !dbg !4322
  %191 = load i32, ptr %calc_hwe_prob171, align 8, !dbg !4322, !tbaa !1262
  %tobool172 = icmp ne i32 %191, 0, !dbg !4321
  br i1 %tobool172, label %cond.true173, label %cond.false177, !dbg !4321

cond.true173:                                     ; preds = %cond.end166
  %192 = load ptr, ptr %args.addr, align 8, !dbg !4323, !tbaa !1228
  %hwe_prob174 = getelementptr inbounds %struct.args_t, ptr %192, i32 0, i32 40, !dbg !4324
  %193 = load ptr, ptr %hwe_prob174, align 8, !dbg !4324, !tbaa !2823
  %194 = load i32, ptr %idx, align 4, !dbg !4325, !tbaa !1223
  %idxprom175 = sext i32 %194 to i64, !dbg !4323
  %arrayidx176 = getelementptr double, ptr %193, i64 %idxprom175, !dbg !4323
  %195 = load double, ptr %arrayidx176, align 8, !dbg !4323, !tbaa !1761
  br label %cond.end178, !dbg !4321

cond.false177:                                    ; preds = %cond.end166
  br label %cond.end178, !dbg !4321

cond.end178:                                      ; preds = %cond.false177, %cond.true173
  %cond179 = phi double [ %195, %cond.true173 ], [ 0.000000e+00, %cond.false177 ], !dbg !4321
  %196 = load ptr, ptr %args.addr, align 8, !dbg !4326, !tbaa !1228
  %ncnt180 = getelementptr inbounds %struct.args_t, ptr %196, i32 0, i32 30, !dbg !4327
  %197 = load ptr, ptr %ncnt180, align 8, !dbg !4327, !tbaa !2802
  %198 = load i32, ptr %idx, align 4, !dbg !4328, !tbaa !1223
  %idxprom181 = sext i32 %198 to i64, !dbg !4326
  %arrayidx182 = getelementptr i32, ptr %197, i64 %idxprom181, !dbg !4326
  %199 = load i32, ptr %arrayidx182, align 4, !dbg !4326, !tbaa !1223
  %call183 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %168, ptr noundef @.str.130, ptr noundef %173, ptr noundef %cond167, i32 noundef %189, double noundef %cond179, i32 noundef %199), !dbg !4329
  br label %if.end220, !dbg !4330

if.else184:                                       ; preds = %cond.end144
  %200 = load ptr, ptr %args.addr, align 8, !dbg !4331, !tbaa !1228
  %fp185 = getelementptr inbounds %struct.args_t, ptr %200, i32 0, i32 53, !dbg !4333
  %201 = load ptr, ptr %fp185, align 8, !dbg !4333, !tbaa !1768
  %202 = load ptr, ptr %args.addr, align 8, !dbg !4334, !tbaa !1228
  %qry_hdr186 = getelementptr inbounds %struct.args_t, ptr %202, i32 0, i32 2, !dbg !4335
  %203 = load ptr, ptr %qry_hdr186, align 8, !dbg !4335, !tbaa !2104
  %samples187 = getelementptr inbounds %struct.bcf_hdr_t, ptr %203, i32 0, i32 3, !dbg !4336
  %204 = load ptr, ptr %samples187, align 8, !dbg !4336, !tbaa !4192
  %205 = load i32, ptr %iqry119, align 4, !dbg !4337, !tbaa !1223
  %idxprom188 = sext i32 %205 to i64, !dbg !4334
  %arrayidx189 = getelementptr ptr, ptr %204, i64 %idxprom188, !dbg !4334
  %206 = load ptr, ptr %arrayidx189, align 8, !dbg !4334, !tbaa !1228
  %207 = load ptr, ptr %args.addr, align 8, !dbg !4338, !tbaa !1228
  %gt_hdr190 = getelementptr inbounds %struct.args_t, ptr %207, i32 0, i32 1, !dbg !4339
  %208 = load ptr, ptr %gt_hdr190, align 8, !dbg !4339, !tbaa !2120
  %tobool191 = icmp ne ptr %208, null, !dbg !4338
  br i1 %tobool191, label %cond.true192, label %cond.false197, !dbg !4338

cond.true192:                                     ; preds = %if.else184
  %209 = load ptr, ptr %args.addr, align 8, !dbg !4340, !tbaa !1228
  %gt_hdr193 = getelementptr inbounds %struct.args_t, ptr %209, i32 0, i32 1, !dbg !4341
  %210 = load ptr, ptr %gt_hdr193, align 8, !dbg !4341, !tbaa !2120
  %samples194 = getelementptr inbounds %struct.bcf_hdr_t, ptr %210, i32 0, i32 3, !dbg !4342
  %211 = load ptr, ptr %samples194, align 8, !dbg !4342, !tbaa !4192
  %212 = load i32, ptr %igt137, align 4, !dbg !4343, !tbaa !1223
  %idxprom195 = sext i32 %212 to i64, !dbg !4340
  %arrayidx196 = getelementptr ptr, ptr %211, i64 %idxprom195, !dbg !4340
  %213 = load ptr, ptr %arrayidx196, align 8, !dbg !4340, !tbaa !1228
  br label %cond.end202, !dbg !4338

cond.false197:                                    ; preds = %if.else184
  %214 = load ptr, ptr %args.addr, align 8, !dbg !4344, !tbaa !1228
  %qry_hdr198 = getelementptr inbounds %struct.args_t, ptr %214, i32 0, i32 2, !dbg !4345
  %215 = load ptr, ptr %qry_hdr198, align 8, !dbg !4345, !tbaa !2104
  %samples199 = getelementptr inbounds %struct.bcf_hdr_t, ptr %215, i32 0, i32 3, !dbg !4346
  %216 = load ptr, ptr %samples199, align 8, !dbg !4346, !tbaa !4192
  %217 = load i32, ptr %igt137, align 4, !dbg !4347, !tbaa !1223
  %idxprom200 = sext i32 %217 to i64, !dbg !4344
  %arrayidx201 = getelementptr ptr, ptr %216, i64 %idxprom200, !dbg !4344
  %218 = load ptr, ptr %arrayidx201, align 8, !dbg !4344, !tbaa !1228
  br label %cond.end202, !dbg !4338

cond.end202:                                      ; preds = %cond.false197, %cond.true192
  %cond203 = phi ptr [ %213, %cond.true192 ], [ %218, %cond.false197 ], !dbg !4338
  %219 = load ptr, ptr %args.addr, align 8, !dbg !4348, !tbaa !1228
  %pdiff204 = getelementptr inbounds %struct.args_t, ptr %219, i32 0, i32 26, !dbg !4349
  %220 = load ptr, ptr %pdiff204, align 8, !dbg !4349, !tbaa !2628
  %221 = load i32, ptr %idx, align 4, !dbg !4350, !tbaa !1223
  %idxprom205 = sext i32 %221 to i64, !dbg !4348
  %arrayidx206 = getelementptr double, ptr %220, i64 %idxprom205, !dbg !4348
  %222 = load double, ptr %arrayidx206, align 8, !dbg !4348, !tbaa !1761
  %223 = load ptr, ptr %args.addr, align 8, !dbg !4351, !tbaa !1228
  %calc_hwe_prob207 = getelementptr inbounds %struct.args_t, ptr %223, i32 0, i32 49, !dbg !4352
  %224 = load i32, ptr %calc_hwe_prob207, align 8, !dbg !4352, !tbaa !1262
  %tobool208 = icmp ne i32 %224, 0, !dbg !4351
  br i1 %tobool208, label %cond.true209, label %cond.false213, !dbg !4351

cond.true209:                                     ; preds = %cond.end202
  %225 = load ptr, ptr %args.addr, align 8, !dbg !4353, !tbaa !1228
  %hwe_prob210 = getelementptr inbounds %struct.args_t, ptr %225, i32 0, i32 40, !dbg !4354
  %226 = load ptr, ptr %hwe_prob210, align 8, !dbg !4354, !tbaa !2823
  %227 = load i32, ptr %idx, align 4, !dbg !4355, !tbaa !1223
  %idxprom211 = sext i32 %227 to i64, !dbg !4353
  %arrayidx212 = getelementptr double, ptr %226, i64 %idxprom211, !dbg !4353
  %228 = load double, ptr %arrayidx212, align 8, !dbg !4353, !tbaa !1761
  br label %cond.end214, !dbg !4351

cond.false213:                                    ; preds = %cond.end202
  br label %cond.end214, !dbg !4351

cond.end214:                                      ; preds = %cond.false213, %cond.true209
  %cond215 = phi double [ %228, %cond.true209 ], [ 0.000000e+00, %cond.false213 ], !dbg !4351
  %229 = load ptr, ptr %args.addr, align 8, !dbg !4356, !tbaa !1228
  %ncnt216 = getelementptr inbounds %struct.args_t, ptr %229, i32 0, i32 30, !dbg !4357
  %230 = load ptr, ptr %ncnt216, align 8, !dbg !4357, !tbaa !2802
  %231 = load i32, ptr %idx, align 4, !dbg !4358, !tbaa !1223
  %idxprom217 = sext i32 %231 to i64, !dbg !4356
  %arrayidx218 = getelementptr i32, ptr %230, i64 %idxprom217, !dbg !4356
  %232 = load i32, ptr %arrayidx218, align 4, !dbg !4356, !tbaa !1223
  %call219 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %201, ptr noundef @.str.131, ptr noundef %206, ptr noundef %cond203, double noundef %222, double noundef %cond215, i32 noundef %232), !dbg !4359
  br label %if.end220

if.end220:                                        ; preds = %cond.end214, %cond.end178
  %233 = load i32, ptr %idx, align 4, !dbg !4360, !tbaa !1223
  %inc221 = add i32 %233, 1, !dbg !4360
  store i32 %inc221, ptr %idx, align 4, !dbg !4360, !tbaa !1223
  call void @llvm.lifetime.end.p0(i64 4, ptr %igt137) #14, !dbg !4361
  br label %for.inc222, !dbg !4362

for.inc222:                                       ; preds = %if.end220
  %234 = load i32, ptr %j, align 4, !dbg !4363, !tbaa !1223
  %inc223 = add i32 %234, 1, !dbg !4363
  store i32 %inc223, ptr %j, align 4, !dbg !4363, !tbaa !1223
  br label %for.cond134, !dbg !4364, !llvm.loop !4365

for.end224:                                       ; preds = %for.cond134
  call void @llvm.lifetime.end.p0(i64 4, ptr %ngt) #14, !dbg !4367
  call void @llvm.lifetime.end.p0(i64 4, ptr %iqry119) #14, !dbg !4367
  br label %for.inc225, !dbg !4368

for.inc225:                                       ; preds = %for.end224
  %235 = load i32, ptr %i114, align 4, !dbg !4369, !tbaa !1223
  %inc226 = add i32 %235, 1, !dbg !4369
  store i32 %inc226, ptr %i114, align 4, !dbg !4369, !tbaa !1223
  br label %for.cond115, !dbg !4370, !llvm.loop !4371

for.end227:                                       ; preds = %for.cond115
  call void @llvm.lifetime.end.p0(i64 4, ptr %idx) #14, !dbg !4373
  call void @llvm.lifetime.end.p0(i64 4, ptr %j) #14, !dbg !4373
  call void @llvm.lifetime.end.p0(i64 4, ptr %i114) #14, !dbg !4373
  br label %if.end695, !dbg !4374

if.else228:                                       ; preds = %if.else111
  %236 = load ptr, ptr %args.addr, align 8, !dbg !4375, !tbaa !1228
  %cross_check229 = getelementptr inbounds %struct.args_t, ptr %236, i32 0, i32 48, !dbg !4376
  %237 = load i32, ptr %cross_check229, align 4, !dbg !4376, !tbaa !2570
  %tobool230 = icmp ne i32 %237, 0, !dbg !4375
  br i1 %tobool230, label %if.else428, label %if.then231, !dbg !4377

if.then231:                                       ; preds = %if.else228
  call void @llvm.lifetime.start.p0(i64 8, ptr %arr) #14, !dbg !4378
  tail call void @llvm.dbg.declare(metadata ptr %arr, metadata !4033, metadata !DIExpression()), !dbg !4379
  %238 = load ptr, ptr %args.addr, align 8, !dbg !4380, !tbaa !1228
  %ngt_smpl232 = getelementptr inbounds %struct.args_t, ptr %238, i32 0, i32 23, !dbg !4381
  %239 = load i32, ptr %ngt_smpl232, align 4, !dbg !4381, !tbaa !2549
  %conv = sext i32 %239 to i64, !dbg !4380
  %mul = mul i64 16, %conv, !dbg !4382
  %call233 = call noalias ptr @malloc(i64 noundef %mul) #18, !dbg !4383
  store ptr %call233, ptr %arr, align 8, !dbg !4379, !tbaa !1228
  call void @llvm.lifetime.start.p0(i64 4, ptr %i234) #14, !dbg !4384
  tail call void @llvm.dbg.declare(metadata ptr %i234, metadata !4036, metadata !DIExpression()), !dbg !4385
  call void @llvm.lifetime.start.p0(i64 4, ptr %j235) #14, !dbg !4384
  tail call void @llvm.dbg.declare(metadata ptr %j235, metadata !4037, metadata !DIExpression()), !dbg !4386
  store i32 0, ptr %i234, align 4, !dbg !4387, !tbaa !1223
  br label %for.cond236, !dbg !4388

for.cond236:                                      ; preds = %for.inc425, %if.then231
  %240 = load i32, ptr %i234, align 4, !dbg !4389, !tbaa !1223
  %241 = load ptr, ptr %args.addr, align 8, !dbg !4390, !tbaa !1228
  %nqry_smpl237 = getelementptr inbounds %struct.args_t, ptr %241, i32 0, i32 22, !dbg !4391
  %242 = load i32, ptr %nqry_smpl237, align 8, !dbg !4391, !tbaa !2252
  %cmp238 = icmp slt i32 %240, %242, !dbg !4392
  br i1 %cmp238, label %for.body240, label %for.end427, !dbg !4393

for.body240:                                      ; preds = %for.cond236
  call void @llvm.lifetime.start.p0(i64 4, ptr %idx241) #14, !dbg !4394
  tail call void @llvm.dbg.declare(metadata ptr %idx241, metadata !4038, metadata !DIExpression()), !dbg !4395
  %243 = load i32, ptr %i234, align 4, !dbg !4396, !tbaa !1223
  %244 = load ptr, ptr %args.addr, align 8, !dbg !4397, !tbaa !1228
  %ngt_smpl242 = getelementptr inbounds %struct.args_t, ptr %244, i32 0, i32 23, !dbg !4398
  %245 = load i32, ptr %ngt_smpl242, align 4, !dbg !4398, !tbaa !2549
  %mul243 = mul i32 %243, %245, !dbg !4399
  store i32 %mul243, ptr %idx241, align 4, !dbg !4395, !tbaa !1223
  store i32 0, ptr %j235, align 4, !dbg !4400, !tbaa !1223
  br label %for.cond244, !dbg !4402

for.cond244:                                      ; preds = %for.inc307, %for.body240
  %246 = load i32, ptr %j235, align 4, !dbg !4403, !tbaa !1223
  %247 = load ptr, ptr %args.addr, align 8, !dbg !4405, !tbaa !1228
  %ngt_smpl245 = getelementptr inbounds %struct.args_t, ptr %247, i32 0, i32 23, !dbg !4406
  %248 = load i32, ptr %ngt_smpl245, align 4, !dbg !4406, !tbaa !2549
  %cmp246 = icmp slt i32 %246, %248, !dbg !4407
  br i1 %cmp246, label %for.body248, label %for.end309, !dbg !4408

for.body248:                                      ; preds = %for.cond244
  %249 = load ptr, ptr %args.addr, align 8, !dbg !4409, !tbaa !1228
  %sort_by_hwe = getelementptr inbounds %struct.args_t, ptr %249, i32 0, i32 50, !dbg !4412
  %250 = load i32, ptr %sort_by_hwe, align 4, !dbg !4412, !tbaa !1421
  %tobool249 = icmp ne i32 %250, 0, !dbg !4409
  br i1 %tobool249, label %if.then250, label %if.else256, !dbg !4413

if.then250:                                       ; preds = %for.body248
  %251 = load ptr, ptr %args.addr, align 8, !dbg !4414, !tbaa !1228
  %hwe_prob251 = getelementptr inbounds %struct.args_t, ptr %251, i32 0, i32 40, !dbg !4415
  %252 = load ptr, ptr %hwe_prob251, align 8, !dbg !4415, !tbaa !2823
  %253 = load i32, ptr %idx241, align 4, !dbg !4416, !tbaa !1223
  %idxprom252 = sext i32 %253 to i64, !dbg !4414
  %arrayidx253 = getelementptr double, ptr %252, i64 %idxprom252, !dbg !4414
  %254 = load double, ptr %arrayidx253, align 8, !dbg !4414, !tbaa !1761
  %fneg = fneg double %254, !dbg !4417
  %255 = load ptr, ptr %arr, align 8, !dbg !4418, !tbaa !1228
  %256 = load i32, ptr %j235, align 4, !dbg !4419, !tbaa !1223
  %idxprom254 = sext i32 %256 to i64, !dbg !4418
  %arrayidx255 = getelementptr %struct.idbl_t, ptr %255, i64 %idxprom254, !dbg !4418
  %val = getelementptr inbounds %struct.idbl_t, ptr %arrayidx255, i32 0, i32 2, !dbg !4420
  store double %fneg, ptr %val, align 8, !dbg !4421, !tbaa !4422
  br label %if.end300, !dbg !4418

if.else256:                                       ; preds = %for.body248
  %257 = load ptr, ptr %args.addr, align 8, !dbg !4424, !tbaa !1228
  %ndiff257 = getelementptr inbounds %struct.args_t, ptr %257, i32 0, i32 29, !dbg !4426
  %258 = load ptr, ptr %ndiff257, align 8, !dbg !4426, !tbaa !2795
  %tobool258 = icmp ne ptr %258, null, !dbg !4424
  br i1 %tobool258, label %if.then259, label %if.else279, !dbg !4427

if.then259:                                       ; preds = %if.else256
  %259 = load ptr, ptr %args.addr, align 8, !dbg !4428, !tbaa !1228
  %ncnt260 = getelementptr inbounds %struct.args_t, ptr %259, i32 0, i32 30, !dbg !4429
  %260 = load ptr, ptr %ncnt260, align 8, !dbg !4429, !tbaa !2802
  %261 = load i32, ptr %idx241, align 4, !dbg !4430, !tbaa !1223
  %idxprom261 = sext i32 %261 to i64, !dbg !4428
  %arrayidx262 = getelementptr i32, ptr %260, i64 %idxprom261, !dbg !4428
  %262 = load i32, ptr %arrayidx262, align 4, !dbg !4428, !tbaa !1223
  %tobool263 = icmp ne i32 %262, 0, !dbg !4428
  br i1 %tobool263, label %cond.true264, label %cond.false273, !dbg !4428

cond.true264:                                     ; preds = %if.then259
  %263 = load ptr, ptr %args.addr, align 8, !dbg !4431, !tbaa !1228
  %ndiff265 = getelementptr inbounds %struct.args_t, ptr %263, i32 0, i32 29, !dbg !4432
  %264 = load ptr, ptr %ndiff265, align 8, !dbg !4432, !tbaa !2795
  %265 = load i32, ptr %idx241, align 4, !dbg !4433, !tbaa !1223
  %idxprom266 = sext i32 %265 to i64, !dbg !4431
  %arrayidx267 = getelementptr i32, ptr %264, i64 %idxprom266, !dbg !4431
  %266 = load i32, ptr %arrayidx267, align 4, !dbg !4431, !tbaa !1223
  %conv268 = uitofp i32 %266 to double, !dbg !4434
  %267 = load ptr, ptr %args.addr, align 8, !dbg !4435, !tbaa !1228
  %ncnt269 = getelementptr inbounds %struct.args_t, ptr %267, i32 0, i32 30, !dbg !4436
  %268 = load ptr, ptr %ncnt269, align 8, !dbg !4436, !tbaa !2802
  %269 = load i32, ptr %idx241, align 4, !dbg !4437, !tbaa !1223
  %idxprom270 = sext i32 %269 to i64, !dbg !4435
  %arrayidx271 = getelementptr i32, ptr %268, i64 %idxprom270, !dbg !4435
  %270 = load i32, ptr %arrayidx271, align 4, !dbg !4435, !tbaa !1223
  %conv272 = uitofp i32 %270 to double, !dbg !4435
  %div = fdiv double %conv268, %conv272, !dbg !4438
  br label %cond.end274, !dbg !4428

cond.false273:                                    ; preds = %if.then259
  br label %cond.end274, !dbg !4428

cond.end274:                                      ; preds = %cond.false273, %cond.true264
  %cond275 = phi double [ %div, %cond.true264 ], [ 0.000000e+00, %cond.false273 ], !dbg !4428
  %271 = load ptr, ptr %arr, align 8, !dbg !4439, !tbaa !1228
  %272 = load i32, ptr %j235, align 4, !dbg !4440, !tbaa !1223
  %idxprom276 = sext i32 %272 to i64, !dbg !4439
  %arrayidx277 = getelementptr %struct.idbl_t, ptr %271, i64 %idxprom276, !dbg !4439
  %val278 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx277, i32 0, i32 2, !dbg !4441
  store double %cond275, ptr %val278, align 8, !dbg !4442, !tbaa !4422
  br label %if.end299, !dbg !4439

if.else279:                                       ; preds = %if.else256
  %273 = load ptr, ptr %args.addr, align 8, !dbg !4443, !tbaa !1228
  %ncnt280 = getelementptr inbounds %struct.args_t, ptr %273, i32 0, i32 30, !dbg !4444
  %274 = load ptr, ptr %ncnt280, align 8, !dbg !4444, !tbaa !2802
  %275 = load i32, ptr %idx241, align 4, !dbg !4445, !tbaa !1223
  %idxprom281 = sext i32 %275 to i64, !dbg !4443
  %arrayidx282 = getelementptr i32, ptr %274, i64 %idxprom281, !dbg !4443
  %276 = load i32, ptr %arrayidx282, align 4, !dbg !4443, !tbaa !1223
  %tobool283 = icmp ne i32 %276, 0, !dbg !4443
  br i1 %tobool283, label %cond.true284, label %cond.false293, !dbg !4443

cond.true284:                                     ; preds = %if.else279
  %277 = load ptr, ptr %args.addr, align 8, !dbg !4446, !tbaa !1228
  %pdiff285 = getelementptr inbounds %struct.args_t, ptr %277, i32 0, i32 26, !dbg !4447
  %278 = load ptr, ptr %pdiff285, align 8, !dbg !4447, !tbaa !2628
  %279 = load i32, ptr %idx241, align 4, !dbg !4448, !tbaa !1223
  %idxprom286 = sext i32 %279 to i64, !dbg !4446
  %arrayidx287 = getelementptr double, ptr %278, i64 %idxprom286, !dbg !4446
  %280 = load double, ptr %arrayidx287, align 8, !dbg !4446, !tbaa !1761
  %281 = load ptr, ptr %args.addr, align 8, !dbg !4449, !tbaa !1228
  %ncnt288 = getelementptr inbounds %struct.args_t, ptr %281, i32 0, i32 30, !dbg !4450
  %282 = load ptr, ptr %ncnt288, align 8, !dbg !4450, !tbaa !2802
  %283 = load i32, ptr %idx241, align 4, !dbg !4451, !tbaa !1223
  %idxprom289 = sext i32 %283 to i64, !dbg !4449
  %arrayidx290 = getelementptr i32, ptr %282, i64 %idxprom289, !dbg !4449
  %284 = load i32, ptr %arrayidx290, align 4, !dbg !4449, !tbaa !1223
  %conv291 = uitofp i32 %284 to double, !dbg !4449
  %div292 = fdiv double %280, %conv291, !dbg !4452
  br label %cond.end294, !dbg !4443

cond.false293:                                    ; preds = %if.else279
  br label %cond.end294, !dbg !4443

cond.end294:                                      ; preds = %cond.false293, %cond.true284
  %cond295 = phi double [ %div292, %cond.true284 ], [ 0.000000e+00, %cond.false293 ], !dbg !4443
  %285 = load ptr, ptr %arr, align 8, !dbg !4453, !tbaa !1228
  %286 = load i32, ptr %j235, align 4, !dbg !4454, !tbaa !1223
  %idxprom296 = sext i32 %286 to i64, !dbg !4453
  %arrayidx297 = getelementptr %struct.idbl_t, ptr %285, i64 %idxprom296, !dbg !4453
  %val298 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx297, i32 0, i32 2, !dbg !4455
  store double %cond295, ptr %val298, align 8, !dbg !4456, !tbaa !4422
  br label %if.end299

if.end299:                                        ; preds = %cond.end294, %cond.end274
  br label %if.end300

if.end300:                                        ; preds = %if.end299, %if.then250
  %287 = load i32, ptr %j235, align 4, !dbg !4457, !tbaa !1223
  %288 = load ptr, ptr %arr, align 8, !dbg !4458, !tbaa !1228
  %289 = load i32, ptr %j235, align 4, !dbg !4459, !tbaa !1223
  %idxprom301 = sext i32 %289 to i64, !dbg !4458
  %arrayidx302 = getelementptr %struct.idbl_t, ptr %288, i64 %idxprom301, !dbg !4458
  %ism = getelementptr inbounds %struct.idbl_t, ptr %arrayidx302, i32 0, i32 0, !dbg !4460
  store i32 %287, ptr %ism, align 8, !dbg !4461, !tbaa !4462
  %290 = load i32, ptr %idx241, align 4, !dbg !4463, !tbaa !1223
  %291 = load ptr, ptr %arr, align 8, !dbg !4464, !tbaa !1228
  %292 = load i32, ptr %j235, align 4, !dbg !4465, !tbaa !1223
  %idxprom303 = sext i32 %292 to i64, !dbg !4464
  %arrayidx304 = getelementptr %struct.idbl_t, ptr %291, i64 %idxprom303, !dbg !4464
  %idx305 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx304, i32 0, i32 1, !dbg !4466
  store i32 %290, ptr %idx305, align 4, !dbg !4467, !tbaa !4468
  %293 = load i32, ptr %idx241, align 4, !dbg !4469, !tbaa !1223
  %inc306 = add i32 %293, 1, !dbg !4469
  store i32 %inc306, ptr %idx241, align 4, !dbg !4469, !tbaa !1223
  br label %for.inc307, !dbg !4470

for.inc307:                                       ; preds = %if.end300
  %294 = load i32, ptr %j235, align 4, !dbg !4471, !tbaa !1223
  %inc308 = add i32 %294, 1, !dbg !4471
  store i32 %inc308, ptr %j235, align 4, !dbg !4471, !tbaa !1223
  br label %for.cond244, !dbg !4472, !llvm.loop !4473

for.end309:                                       ; preds = %for.cond244
  %295 = load ptr, ptr %arr, align 8, !dbg !4475, !tbaa !1228
  %296 = load ptr, ptr %args.addr, align 8, !dbg !4476, !tbaa !1228
  %ngt_smpl310 = getelementptr inbounds %struct.args_t, ptr %296, i32 0, i32 23, !dbg !4477
  %297 = load i32, ptr %ngt_smpl310, align 4, !dbg !4477, !tbaa !2549
  %conv311 = sext i32 %297 to i64, !dbg !4476
  call void @qsort(ptr noundef %295, i64 noundef %conv311, i64 noundef 16, ptr noundef @cmp_idbl), !dbg !4478
  call void @llvm.lifetime.start.p0(i64 4, ptr %iqry312) #14, !dbg !4479
  tail call void @llvm.dbg.declare(metadata ptr %iqry312, metadata !4042, metadata !DIExpression()), !dbg !4480
  %298 = load ptr, ptr %args.addr, align 8, !dbg !4481, !tbaa !1228
  %qry_smpl313 = getelementptr inbounds %struct.args_t, ptr %298, i32 0, i32 24, !dbg !4482
  %299 = load ptr, ptr %qry_smpl313, align 8, !dbg !4482, !tbaa !2562
  %tobool314 = icmp ne ptr %299, null, !dbg !4481
  br i1 %tobool314, label %cond.true315, label %cond.false319, !dbg !4481

cond.true315:                                     ; preds = %for.end309
  %300 = load ptr, ptr %args.addr, align 8, !dbg !4483, !tbaa !1228
  %qry_smpl316 = getelementptr inbounds %struct.args_t, ptr %300, i32 0, i32 24, !dbg !4484
  %301 = load ptr, ptr %qry_smpl316, align 8, !dbg !4484, !tbaa !2562
  %302 = load i32, ptr %i234, align 4, !dbg !4485, !tbaa !1223
  %idxprom317 = sext i32 %302 to i64, !dbg !4483
  %arrayidx318 = getelementptr i32, ptr %301, i64 %idxprom317, !dbg !4483
  %303 = load i32, ptr %arrayidx318, align 4, !dbg !4483, !tbaa !1223
  br label %cond.end320, !dbg !4481

cond.false319:                                    ; preds = %for.end309
  %304 = load i32, ptr %i234, align 4, !dbg !4486, !tbaa !1223
  br label %cond.end320, !dbg !4481

cond.end320:                                      ; preds = %cond.false319, %cond.true315
  %cond321 = phi i32 [ %303, %cond.true315 ], [ %304, %cond.false319 ], !dbg !4481
  store i32 %cond321, ptr %iqry312, align 4, !dbg !4480, !tbaa !1223
  store i32 0, ptr %j235, align 4, !dbg !4487, !tbaa !1223
  br label %for.cond322, !dbg !4488

for.cond322:                                      ; preds = %for.inc422, %cond.end320
  %305 = load i32, ptr %j235, align 4, !dbg !4489, !tbaa !1223
  %306 = load ptr, ptr %args.addr, align 8, !dbg !4490, !tbaa !1228
  %ntop323 = getelementptr inbounds %struct.args_t, ptr %306, i32 0, i32 47, !dbg !4491
  %307 = load i32, ptr %ntop323, align 8, !dbg !4491, !tbaa !1403
  %cmp324 = icmp slt i32 %305, %307, !dbg !4492
  br i1 %cmp324, label %for.body326, label %for.end424, !dbg !4493

for.body326:                                      ; preds = %for.cond322
  call void @llvm.lifetime.start.p0(i64 4, ptr %idx327) #14, !dbg !4494
  tail call void @llvm.dbg.declare(metadata ptr %idx327, metadata !4043, metadata !DIExpression()), !dbg !4495
  %308 = load ptr, ptr %arr, align 8, !dbg !4496, !tbaa !1228
  %309 = load i32, ptr %j235, align 4, !dbg !4497, !tbaa !1223
  %idxprom328 = sext i32 %309 to i64, !dbg !4496
  %arrayidx329 = getelementptr %struct.idbl_t, ptr %308, i64 %idxprom328, !dbg !4496
  %idx330 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx329, i32 0, i32 1, !dbg !4498
  %310 = load i32, ptr %idx330, align 4, !dbg !4498, !tbaa !4468
  store i32 %310, ptr %idx327, align 4, !dbg !4495, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 4, ptr %igt331) #14, !dbg !4499
  tail call void @llvm.dbg.declare(metadata ptr %igt331, metadata !4047, metadata !DIExpression()), !dbg !4500
  %311 = load ptr, ptr %args.addr, align 8, !dbg !4501, !tbaa !1228
  %gt_smpl332 = getelementptr inbounds %struct.args_t, ptr %311, i32 0, i32 25, !dbg !4502
  %312 = load ptr, ptr %gt_smpl332, align 8, !dbg !4502, !tbaa !2566
  %tobool333 = icmp ne ptr %312, null, !dbg !4501
  br i1 %tobool333, label %cond.true334, label %cond.false341, !dbg !4501

cond.true334:                                     ; preds = %for.body326
  %313 = load ptr, ptr %args.addr, align 8, !dbg !4503, !tbaa !1228
  %gt_smpl335 = getelementptr inbounds %struct.args_t, ptr %313, i32 0, i32 25, !dbg !4504
  %314 = load ptr, ptr %gt_smpl335, align 8, !dbg !4504, !tbaa !2566
  %315 = load ptr, ptr %arr, align 8, !dbg !4505, !tbaa !1228
  %316 = load i32, ptr %j235, align 4, !dbg !4506, !tbaa !1223
  %idxprom336 = sext i32 %316 to i64, !dbg !4505
  %arrayidx337 = getelementptr %struct.idbl_t, ptr %315, i64 %idxprom336, !dbg !4505
  %ism338 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx337, i32 0, i32 0, !dbg !4507
  %317 = load i32, ptr %ism338, align 8, !dbg !4507, !tbaa !4462
  %idxprom339 = sext i32 %317 to i64, !dbg !4503
  %arrayidx340 = getelementptr i32, ptr %314, i64 %idxprom339, !dbg !4503
  %318 = load i32, ptr %arrayidx340, align 4, !dbg !4503, !tbaa !1223
  br label %cond.end345, !dbg !4501

cond.false341:                                    ; preds = %for.body326
  %319 = load ptr, ptr %arr, align 8, !dbg !4508, !tbaa !1228
  %320 = load i32, ptr %j235, align 4, !dbg !4509, !tbaa !1223
  %idxprom342 = sext i32 %320 to i64, !dbg !4508
  %arrayidx343 = getelementptr %struct.idbl_t, ptr %319, i64 %idxprom342, !dbg !4508
  %ism344 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx343, i32 0, i32 0, !dbg !4510
  %321 = load i32, ptr %ism344, align 8, !dbg !4510, !tbaa !4462
  br label %cond.end345, !dbg !4501

cond.end345:                                      ; preds = %cond.false341, %cond.true334
  %cond346 = phi i32 [ %318, %cond.true334 ], [ %321, %cond.false341 ], !dbg !4501
  store i32 %cond346, ptr %igt331, align 4, !dbg !4500, !tbaa !1223
  %322 = load ptr, ptr %args.addr, align 8, !dbg !4511, !tbaa !1228
  %ndiff347 = getelementptr inbounds %struct.args_t, ptr %322, i32 0, i32 29, !dbg !4513
  %323 = load ptr, ptr %ndiff347, align 8, !dbg !4513, !tbaa !2795
  %tobool348 = icmp ne ptr %323, null, !dbg !4511
  br i1 %tobool348, label %if.then349, label %if.else385, !dbg !4514

if.then349:                                       ; preds = %cond.end345
  %324 = load ptr, ptr %args.addr, align 8, !dbg !4515, !tbaa !1228
  %fp350 = getelementptr inbounds %struct.args_t, ptr %324, i32 0, i32 53, !dbg !4517
  %325 = load ptr, ptr %fp350, align 8, !dbg !4517, !tbaa !1768
  %326 = load ptr, ptr %args.addr, align 8, !dbg !4518, !tbaa !1228
  %qry_hdr351 = getelementptr inbounds %struct.args_t, ptr %326, i32 0, i32 2, !dbg !4519
  %327 = load ptr, ptr %qry_hdr351, align 8, !dbg !4519, !tbaa !2104
  %samples352 = getelementptr inbounds %struct.bcf_hdr_t, ptr %327, i32 0, i32 3, !dbg !4520
  %328 = load ptr, ptr %samples352, align 8, !dbg !4520, !tbaa !4192
  %329 = load i32, ptr %iqry312, align 4, !dbg !4521, !tbaa !1223
  %idxprom353 = sext i32 %329 to i64, !dbg !4518
  %arrayidx354 = getelementptr ptr, ptr %328, i64 %idxprom353, !dbg !4518
  %330 = load ptr, ptr %arrayidx354, align 8, !dbg !4518, !tbaa !1228
  %331 = load ptr, ptr %args.addr, align 8, !dbg !4522, !tbaa !1228
  %gt_hdr355 = getelementptr inbounds %struct.args_t, ptr %331, i32 0, i32 1, !dbg !4523
  %332 = load ptr, ptr %gt_hdr355, align 8, !dbg !4523, !tbaa !2120
  %tobool356 = icmp ne ptr %332, null, !dbg !4522
  br i1 %tobool356, label %cond.true357, label %cond.false362, !dbg !4522

cond.true357:                                     ; preds = %if.then349
  %333 = load ptr, ptr %args.addr, align 8, !dbg !4524, !tbaa !1228
  %gt_hdr358 = getelementptr inbounds %struct.args_t, ptr %333, i32 0, i32 1, !dbg !4525
  %334 = load ptr, ptr %gt_hdr358, align 8, !dbg !4525, !tbaa !2120
  %samples359 = getelementptr inbounds %struct.bcf_hdr_t, ptr %334, i32 0, i32 3, !dbg !4526
  %335 = load ptr, ptr %samples359, align 8, !dbg !4526, !tbaa !4192
  %336 = load i32, ptr %igt331, align 4, !dbg !4527, !tbaa !1223
  %idxprom360 = sext i32 %336 to i64, !dbg !4524
  %arrayidx361 = getelementptr ptr, ptr %335, i64 %idxprom360, !dbg !4524
  %337 = load ptr, ptr %arrayidx361, align 8, !dbg !4524, !tbaa !1228
  br label %cond.end367, !dbg !4522

cond.false362:                                    ; preds = %if.then349
  %338 = load ptr, ptr %args.addr, align 8, !dbg !4528, !tbaa !1228
  %qry_hdr363 = getelementptr inbounds %struct.args_t, ptr %338, i32 0, i32 2, !dbg !4529
  %339 = load ptr, ptr %qry_hdr363, align 8, !dbg !4529, !tbaa !2104
  %samples364 = getelementptr inbounds %struct.bcf_hdr_t, ptr %339, i32 0, i32 3, !dbg !4530
  %340 = load ptr, ptr %samples364, align 8, !dbg !4530, !tbaa !4192
  %341 = load i32, ptr %igt331, align 4, !dbg !4531, !tbaa !1223
  %idxprom365 = sext i32 %341 to i64, !dbg !4528
  %arrayidx366 = getelementptr ptr, ptr %340, i64 %idxprom365, !dbg !4528
  %342 = load ptr, ptr %arrayidx366, align 8, !dbg !4528, !tbaa !1228
  br label %cond.end367, !dbg !4522

cond.end367:                                      ; preds = %cond.false362, %cond.true357
  %cond368 = phi ptr [ %337, %cond.true357 ], [ %342, %cond.false362 ], !dbg !4522
  %343 = load ptr, ptr %args.addr, align 8, !dbg !4532, !tbaa !1228
  %ndiff369 = getelementptr inbounds %struct.args_t, ptr %343, i32 0, i32 29, !dbg !4533
  %344 = load ptr, ptr %ndiff369, align 8, !dbg !4533, !tbaa !2795
  %345 = load i32, ptr %idx327, align 4, !dbg !4534, !tbaa !1223
  %idxprom370 = sext i32 %345 to i64, !dbg !4532
  %arrayidx371 = getelementptr i32, ptr %344, i64 %idxprom370, !dbg !4532
  %346 = load i32, ptr %arrayidx371, align 4, !dbg !4532, !tbaa !1223
  %347 = load ptr, ptr %args.addr, align 8, !dbg !4535, !tbaa !1228
  %calc_hwe_prob372 = getelementptr inbounds %struct.args_t, ptr %347, i32 0, i32 49, !dbg !4536
  %348 = load i32, ptr %calc_hwe_prob372, align 8, !dbg !4536, !tbaa !1262
  %tobool373 = icmp ne i32 %348, 0, !dbg !4535
  br i1 %tobool373, label %cond.true374, label %cond.false378, !dbg !4535

cond.true374:                                     ; preds = %cond.end367
  %349 = load ptr, ptr %args.addr, align 8, !dbg !4537, !tbaa !1228
  %hwe_prob375 = getelementptr inbounds %struct.args_t, ptr %349, i32 0, i32 40, !dbg !4538
  %350 = load ptr, ptr %hwe_prob375, align 8, !dbg !4538, !tbaa !2823
  %351 = load i32, ptr %idx327, align 4, !dbg !4539, !tbaa !1223
  %idxprom376 = sext i32 %351 to i64, !dbg !4537
  %arrayidx377 = getelementptr double, ptr %350, i64 %idxprom376, !dbg !4537
  %352 = load double, ptr %arrayidx377, align 8, !dbg !4537, !tbaa !1761
  br label %cond.end379, !dbg !4535

cond.false378:                                    ; preds = %cond.end367
  br label %cond.end379, !dbg !4535

cond.end379:                                      ; preds = %cond.false378, %cond.true374
  %cond380 = phi double [ %352, %cond.true374 ], [ 0.000000e+00, %cond.false378 ], !dbg !4535
  %353 = load ptr, ptr %args.addr, align 8, !dbg !4540, !tbaa !1228
  %ncnt381 = getelementptr inbounds %struct.args_t, ptr %353, i32 0, i32 30, !dbg !4541
  %354 = load ptr, ptr %ncnt381, align 8, !dbg !4541, !tbaa !2802
  %355 = load i32, ptr %idx327, align 4, !dbg !4542, !tbaa !1223
  %idxprom382 = sext i32 %355 to i64, !dbg !4540
  %arrayidx383 = getelementptr i32, ptr %354, i64 %idxprom382, !dbg !4540
  %356 = load i32, ptr %arrayidx383, align 4, !dbg !4540, !tbaa !1223
  %call384 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %325, ptr noundef @.str.130, ptr noundef %330, ptr noundef %cond368, i32 noundef %346, double noundef %cond380, i32 noundef %356), !dbg !4543
  br label %if.end421, !dbg !4544

if.else385:                                       ; preds = %cond.end345
  %357 = load ptr, ptr %args.addr, align 8, !dbg !4545, !tbaa !1228
  %fp386 = getelementptr inbounds %struct.args_t, ptr %357, i32 0, i32 53, !dbg !4547
  %358 = load ptr, ptr %fp386, align 8, !dbg !4547, !tbaa !1768
  %359 = load ptr, ptr %args.addr, align 8, !dbg !4548, !tbaa !1228
  %qry_hdr387 = getelementptr inbounds %struct.args_t, ptr %359, i32 0, i32 2, !dbg !4549
  %360 = load ptr, ptr %qry_hdr387, align 8, !dbg !4549, !tbaa !2104
  %samples388 = getelementptr inbounds %struct.bcf_hdr_t, ptr %360, i32 0, i32 3, !dbg !4550
  %361 = load ptr, ptr %samples388, align 8, !dbg !4550, !tbaa !4192
  %362 = load i32, ptr %iqry312, align 4, !dbg !4551, !tbaa !1223
  %idxprom389 = sext i32 %362 to i64, !dbg !4548
  %arrayidx390 = getelementptr ptr, ptr %361, i64 %idxprom389, !dbg !4548
  %363 = load ptr, ptr %arrayidx390, align 8, !dbg !4548, !tbaa !1228
  %364 = load ptr, ptr %args.addr, align 8, !dbg !4552, !tbaa !1228
  %gt_hdr391 = getelementptr inbounds %struct.args_t, ptr %364, i32 0, i32 1, !dbg !4553
  %365 = load ptr, ptr %gt_hdr391, align 8, !dbg !4553, !tbaa !2120
  %tobool392 = icmp ne ptr %365, null, !dbg !4552
  br i1 %tobool392, label %cond.true393, label %cond.false398, !dbg !4552

cond.true393:                                     ; preds = %if.else385
  %366 = load ptr, ptr %args.addr, align 8, !dbg !4554, !tbaa !1228
  %gt_hdr394 = getelementptr inbounds %struct.args_t, ptr %366, i32 0, i32 1, !dbg !4555
  %367 = load ptr, ptr %gt_hdr394, align 8, !dbg !4555, !tbaa !2120
  %samples395 = getelementptr inbounds %struct.bcf_hdr_t, ptr %367, i32 0, i32 3, !dbg !4556
  %368 = load ptr, ptr %samples395, align 8, !dbg !4556, !tbaa !4192
  %369 = load i32, ptr %igt331, align 4, !dbg !4557, !tbaa !1223
  %idxprom396 = sext i32 %369 to i64, !dbg !4554
  %arrayidx397 = getelementptr ptr, ptr %368, i64 %idxprom396, !dbg !4554
  %370 = load ptr, ptr %arrayidx397, align 8, !dbg !4554, !tbaa !1228
  br label %cond.end403, !dbg !4552

cond.false398:                                    ; preds = %if.else385
  %371 = load ptr, ptr %args.addr, align 8, !dbg !4558, !tbaa !1228
  %qry_hdr399 = getelementptr inbounds %struct.args_t, ptr %371, i32 0, i32 2, !dbg !4559
  %372 = load ptr, ptr %qry_hdr399, align 8, !dbg !4559, !tbaa !2104
  %samples400 = getelementptr inbounds %struct.bcf_hdr_t, ptr %372, i32 0, i32 3, !dbg !4560
  %373 = load ptr, ptr %samples400, align 8, !dbg !4560, !tbaa !4192
  %374 = load i32, ptr %igt331, align 4, !dbg !4561, !tbaa !1223
  %idxprom401 = sext i32 %374 to i64, !dbg !4558
  %arrayidx402 = getelementptr ptr, ptr %373, i64 %idxprom401, !dbg !4558
  %375 = load ptr, ptr %arrayidx402, align 8, !dbg !4558, !tbaa !1228
  br label %cond.end403, !dbg !4552

cond.end403:                                      ; preds = %cond.false398, %cond.true393
  %cond404 = phi ptr [ %370, %cond.true393 ], [ %375, %cond.false398 ], !dbg !4552
  %376 = load ptr, ptr %args.addr, align 8, !dbg !4562, !tbaa !1228
  %pdiff405 = getelementptr inbounds %struct.args_t, ptr %376, i32 0, i32 26, !dbg !4563
  %377 = load ptr, ptr %pdiff405, align 8, !dbg !4563, !tbaa !2628
  %378 = load i32, ptr %idx327, align 4, !dbg !4564, !tbaa !1223
  %idxprom406 = sext i32 %378 to i64, !dbg !4562
  %arrayidx407 = getelementptr double, ptr %377, i64 %idxprom406, !dbg !4562
  %379 = load double, ptr %arrayidx407, align 8, !dbg !4562, !tbaa !1761
  %380 = load ptr, ptr %args.addr, align 8, !dbg !4565, !tbaa !1228
  %calc_hwe_prob408 = getelementptr inbounds %struct.args_t, ptr %380, i32 0, i32 49, !dbg !4566
  %381 = load i32, ptr %calc_hwe_prob408, align 8, !dbg !4566, !tbaa !1262
  %tobool409 = icmp ne i32 %381, 0, !dbg !4565
  br i1 %tobool409, label %cond.true410, label %cond.false414, !dbg !4565

cond.true410:                                     ; preds = %cond.end403
  %382 = load ptr, ptr %args.addr, align 8, !dbg !4567, !tbaa !1228
  %hwe_prob411 = getelementptr inbounds %struct.args_t, ptr %382, i32 0, i32 40, !dbg !4568
  %383 = load ptr, ptr %hwe_prob411, align 8, !dbg !4568, !tbaa !2823
  %384 = load i32, ptr %idx327, align 4, !dbg !4569, !tbaa !1223
  %idxprom412 = sext i32 %384 to i64, !dbg !4567
  %arrayidx413 = getelementptr double, ptr %383, i64 %idxprom412, !dbg !4567
  %385 = load double, ptr %arrayidx413, align 8, !dbg !4567, !tbaa !1761
  br label %cond.end415, !dbg !4565

cond.false414:                                    ; preds = %cond.end403
  br label %cond.end415, !dbg !4565

cond.end415:                                      ; preds = %cond.false414, %cond.true410
  %cond416 = phi double [ %385, %cond.true410 ], [ 0.000000e+00, %cond.false414 ], !dbg !4565
  %386 = load ptr, ptr %args.addr, align 8, !dbg !4570, !tbaa !1228
  %ncnt417 = getelementptr inbounds %struct.args_t, ptr %386, i32 0, i32 30, !dbg !4571
  %387 = load ptr, ptr %ncnt417, align 8, !dbg !4571, !tbaa !2802
  %388 = load i32, ptr %idx327, align 4, !dbg !4572, !tbaa !1223
  %idxprom418 = sext i32 %388 to i64, !dbg !4570
  %arrayidx419 = getelementptr i32, ptr %387, i64 %idxprom418, !dbg !4570
  %389 = load i32, ptr %arrayidx419, align 4, !dbg !4570, !tbaa !1223
  %call420 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %358, ptr noundef @.str.131, ptr noundef %363, ptr noundef %cond404, double noundef %379, double noundef %cond416, i32 noundef %389), !dbg !4573
  br label %if.end421

if.end421:                                        ; preds = %cond.end415, %cond.end379
  call void @llvm.lifetime.end.p0(i64 4, ptr %igt331) #14, !dbg !4574
  call void @llvm.lifetime.end.p0(i64 4, ptr %idx327) #14, !dbg !4574
  br label %for.inc422, !dbg !4575

for.inc422:                                       ; preds = %if.end421
  %390 = load i32, ptr %j235, align 4, !dbg !4576, !tbaa !1223
  %inc423 = add i32 %390, 1, !dbg !4576
  store i32 %inc423, ptr %j235, align 4, !dbg !4576, !tbaa !1223
  br label %for.cond322, !dbg !4577, !llvm.loop !4578

for.end424:                                       ; preds = %for.cond322
  call void @llvm.lifetime.end.p0(i64 4, ptr %iqry312) #14, !dbg !4580
  call void @llvm.lifetime.end.p0(i64 4, ptr %idx241) #14, !dbg !4580
  br label %for.inc425, !dbg !4581

for.inc425:                                       ; preds = %for.end424
  %391 = load i32, ptr %i234, align 4, !dbg !4582, !tbaa !1223
  %inc426 = add i32 %391, 1, !dbg !4582
  store i32 %inc426, ptr %i234, align 4, !dbg !4582, !tbaa !1223
  br label %for.cond236, !dbg !4583, !llvm.loop !4584

for.end427:                                       ; preds = %for.cond236
  %392 = load ptr, ptr %arr, align 8, !dbg !4586, !tbaa !1228
  call void @free(ptr noundef %392) #14, !dbg !4587
  call void @llvm.lifetime.end.p0(i64 4, ptr %j235) #14, !dbg !4588
  call void @llvm.lifetime.end.p0(i64 4, ptr %i234) #14, !dbg !4588
  call void @llvm.lifetime.end.p0(i64 8, ptr %arr) #14, !dbg !4588
  br label %if.end694, !dbg !4589

if.else428:                                       ; preds = %if.else228
  call void @llvm.lifetime.start.p0(i64 4, ptr %narr) #14, !dbg !4590
  tail call void @llvm.dbg.declare(metadata ptr %narr, metadata !4048, metadata !DIExpression()), !dbg !4591
  %393 = load ptr, ptr %args.addr, align 8, !dbg !4592, !tbaa !1228
  %nqry_smpl429 = getelementptr inbounds %struct.args_t, ptr %393, i32 0, i32 22, !dbg !4593
  %394 = load i32, ptr %nqry_smpl429, align 8, !dbg !4593, !tbaa !2252
  %sub = sub i32 %394, 1, !dbg !4594
  store i32 %sub, ptr %narr, align 4, !dbg !4591, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 8, ptr %arr430) #14, !dbg !4595
  tail call void @llvm.dbg.declare(metadata ptr %arr430, metadata !4050, metadata !DIExpression()), !dbg !4596
  %395 = load i32, ptr %narr, align 4, !dbg !4597, !tbaa !1223
  %conv431 = sext i32 %395 to i64, !dbg !4597
  %mul432 = mul i64 16, %conv431, !dbg !4598
  %call433 = call noalias ptr @malloc(i64 noundef %mul432) #18, !dbg !4599
  store ptr %call433, ptr %arr430, align 8, !dbg !4596, !tbaa !1228
  call void @llvm.lifetime.start.p0(i64 4, ptr %i434) #14, !dbg !4600
  tail call void @llvm.dbg.declare(metadata ptr %i434, metadata !4051, metadata !DIExpression()), !dbg !4601
  call void @llvm.lifetime.start.p0(i64 4, ptr %j435) #14, !dbg !4600
  tail call void @llvm.dbg.declare(metadata ptr %j435, metadata !4052, metadata !DIExpression()), !dbg !4602
  call void @llvm.lifetime.start.p0(i64 4, ptr %k) #14, !dbg !4600
  tail call void @llvm.dbg.declare(metadata ptr %k, metadata !4053, metadata !DIExpression()), !dbg !4603
  call void @llvm.lifetime.start.p0(i64 4, ptr %idx436) #14, !dbg !4600
  tail call void @llvm.dbg.declare(metadata ptr %idx436, metadata !4054, metadata !DIExpression()), !dbg !4604
  store i32 0, ptr %i434, align 4, !dbg !4605, !tbaa !1223
  br label %for.cond437, !dbg !4606

for.cond437:                                      ; preds = %for.inc691, %if.else428
  %396 = load i32, ptr %i434, align 4, !dbg !4607, !tbaa !1223
  %397 = load ptr, ptr %args.addr, align 8, !dbg !4608, !tbaa !1228
  %nqry_smpl438 = getelementptr inbounds %struct.args_t, ptr %397, i32 0, i32 22, !dbg !4609
  %398 = load i32, ptr %nqry_smpl438, align 8, !dbg !4609, !tbaa !2252
  %cmp439 = icmp slt i32 %396, %398, !dbg !4610
  br i1 %cmp439, label %for.body441, label %for.end693, !dbg !4611

for.body441:                                      ; preds = %for.cond437
  store i32 0, ptr %k, align 4, !dbg !4612, !tbaa !1223
  %399 = load i32, ptr %i434, align 4, !dbg !4613, !tbaa !1223
  %400 = load i32, ptr %i434, align 4, !dbg !4614, !tbaa !1223
  %sub442 = sub i32 %400, 1, !dbg !4615
  %mul443 = mul i32 %399, %sub442, !dbg !4616
  %div444 = sdiv i32 %mul443, 2, !dbg !4617
  store i32 %div444, ptr %idx436, align 4, !dbg !4618, !tbaa !1223
  store i32 0, ptr %j435, align 4, !dbg !4619, !tbaa !1223
  br label %for.cond445, !dbg !4621

for.cond445:                                      ; preds = %for.inc513, %for.body441
  %401 = load i32, ptr %j435, align 4, !dbg !4622, !tbaa !1223
  %402 = load i32, ptr %i434, align 4, !dbg !4624, !tbaa !1223
  %cmp446 = icmp slt i32 %401, %402, !dbg !4625
  br i1 %cmp446, label %for.body448, label %for.end515, !dbg !4626

for.body448:                                      ; preds = %for.cond445
  %403 = load ptr, ptr %args.addr, align 8, !dbg !4627, !tbaa !1228
  %sort_by_hwe449 = getelementptr inbounds %struct.args_t, ptr %403, i32 0, i32 50, !dbg !4630
  %404 = load i32, ptr %sort_by_hwe449, align 4, !dbg !4630, !tbaa !1421
  %tobool450 = icmp ne i32 %404, 0, !dbg !4627
  br i1 %tobool450, label %if.then451, label %if.else459, !dbg !4631

if.then451:                                       ; preds = %for.body448
  %405 = load ptr, ptr %args.addr, align 8, !dbg !4632, !tbaa !1228
  %hwe_prob452 = getelementptr inbounds %struct.args_t, ptr %405, i32 0, i32 40, !dbg !4633
  %406 = load ptr, ptr %hwe_prob452, align 8, !dbg !4633, !tbaa !2823
  %407 = load i32, ptr %idx436, align 4, !dbg !4634, !tbaa !1223
  %idxprom453 = sext i32 %407 to i64, !dbg !4632
  %arrayidx454 = getelementptr double, ptr %406, i64 %idxprom453, !dbg !4632
  %408 = load double, ptr %arrayidx454, align 8, !dbg !4632, !tbaa !1761
  %fneg455 = fneg double %408, !dbg !4635
  %409 = load ptr, ptr %arr430, align 8, !dbg !4636, !tbaa !1228
  %410 = load i32, ptr %k, align 4, !dbg !4637, !tbaa !1223
  %idxprom456 = sext i32 %410 to i64, !dbg !4636
  %arrayidx457 = getelementptr %struct.idbl_t, ptr %409, i64 %idxprom456, !dbg !4636
  %val458 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx457, i32 0, i32 2, !dbg !4638
  store double %fneg455, ptr %val458, align 8, !dbg !4639, !tbaa !4422
  br label %if.end504, !dbg !4636

if.else459:                                       ; preds = %for.body448
  %411 = load ptr, ptr %args.addr, align 8, !dbg !4640, !tbaa !1228
  %ndiff460 = getelementptr inbounds %struct.args_t, ptr %411, i32 0, i32 29, !dbg !4642
  %412 = load ptr, ptr %ndiff460, align 8, !dbg !4642, !tbaa !2795
  %tobool461 = icmp ne ptr %412, null, !dbg !4640
  br i1 %tobool461, label %if.then462, label %if.else483, !dbg !4643

if.then462:                                       ; preds = %if.else459
  %413 = load ptr, ptr %args.addr, align 8, !dbg !4644, !tbaa !1228
  %ncnt463 = getelementptr inbounds %struct.args_t, ptr %413, i32 0, i32 30, !dbg !4645
  %414 = load ptr, ptr %ncnt463, align 8, !dbg !4645, !tbaa !2802
  %415 = load i32, ptr %idx436, align 4, !dbg !4646, !tbaa !1223
  %idxprom464 = sext i32 %415 to i64, !dbg !4644
  %arrayidx465 = getelementptr i32, ptr %414, i64 %idxprom464, !dbg !4644
  %416 = load i32, ptr %arrayidx465, align 4, !dbg !4644, !tbaa !1223
  %tobool466 = icmp ne i32 %416, 0, !dbg !4644
  br i1 %tobool466, label %cond.true467, label %cond.false477, !dbg !4644

cond.true467:                                     ; preds = %if.then462
  %417 = load ptr, ptr %args.addr, align 8, !dbg !4647, !tbaa !1228
  %ndiff468 = getelementptr inbounds %struct.args_t, ptr %417, i32 0, i32 29, !dbg !4648
  %418 = load ptr, ptr %ndiff468, align 8, !dbg !4648, !tbaa !2795
  %419 = load i32, ptr %idx436, align 4, !dbg !4649, !tbaa !1223
  %idxprom469 = sext i32 %419 to i64, !dbg !4647
  %arrayidx470 = getelementptr i32, ptr %418, i64 %idxprom469, !dbg !4647
  %420 = load i32, ptr %arrayidx470, align 4, !dbg !4647, !tbaa !1223
  %conv471 = uitofp i32 %420 to double, !dbg !4650
  %421 = load ptr, ptr %args.addr, align 8, !dbg !4651, !tbaa !1228
  %ncnt472 = getelementptr inbounds %struct.args_t, ptr %421, i32 0, i32 30, !dbg !4652
  %422 = load ptr, ptr %ncnt472, align 8, !dbg !4652, !tbaa !2802
  %423 = load i32, ptr %idx436, align 4, !dbg !4653, !tbaa !1223
  %idxprom473 = sext i32 %423 to i64, !dbg !4651
  %arrayidx474 = getelementptr i32, ptr %422, i64 %idxprom473, !dbg !4651
  %424 = load i32, ptr %arrayidx474, align 4, !dbg !4651, !tbaa !1223
  %conv475 = uitofp i32 %424 to double, !dbg !4651
  %div476 = fdiv double %conv471, %conv475, !dbg !4654
  br label %cond.end478, !dbg !4644

cond.false477:                                    ; preds = %if.then462
  br label %cond.end478, !dbg !4644

cond.end478:                                      ; preds = %cond.false477, %cond.true467
  %cond479 = phi double [ %div476, %cond.true467 ], [ 0.000000e+00, %cond.false477 ], !dbg !4644
  %425 = load ptr, ptr %arr430, align 8, !dbg !4655, !tbaa !1228
  %426 = load i32, ptr %k, align 4, !dbg !4656, !tbaa !1223
  %idxprom480 = sext i32 %426 to i64, !dbg !4655
  %arrayidx481 = getelementptr %struct.idbl_t, ptr %425, i64 %idxprom480, !dbg !4655
  %val482 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx481, i32 0, i32 2, !dbg !4657
  store double %cond479, ptr %val482, align 8, !dbg !4658, !tbaa !4422
  br label %if.end503, !dbg !4655

if.else483:                                       ; preds = %if.else459
  %427 = load ptr, ptr %args.addr, align 8, !dbg !4659, !tbaa !1228
  %ncnt484 = getelementptr inbounds %struct.args_t, ptr %427, i32 0, i32 30, !dbg !4660
  %428 = load ptr, ptr %ncnt484, align 8, !dbg !4660, !tbaa !2802
  %429 = load i32, ptr %idx436, align 4, !dbg !4661, !tbaa !1223
  %idxprom485 = sext i32 %429 to i64, !dbg !4659
  %arrayidx486 = getelementptr i32, ptr %428, i64 %idxprom485, !dbg !4659
  %430 = load i32, ptr %arrayidx486, align 4, !dbg !4659, !tbaa !1223
  %tobool487 = icmp ne i32 %430, 0, !dbg !4659
  br i1 %tobool487, label %cond.true488, label %cond.false497, !dbg !4659

cond.true488:                                     ; preds = %if.else483
  %431 = load ptr, ptr %args.addr, align 8, !dbg !4662, !tbaa !1228
  %pdiff489 = getelementptr inbounds %struct.args_t, ptr %431, i32 0, i32 26, !dbg !4663
  %432 = load ptr, ptr %pdiff489, align 8, !dbg !4663, !tbaa !2628
  %433 = load i32, ptr %idx436, align 4, !dbg !4664, !tbaa !1223
  %idxprom490 = sext i32 %433 to i64, !dbg !4662
  %arrayidx491 = getelementptr double, ptr %432, i64 %idxprom490, !dbg !4662
  %434 = load double, ptr %arrayidx491, align 8, !dbg !4662, !tbaa !1761
  %435 = load ptr, ptr %args.addr, align 8, !dbg !4665, !tbaa !1228
  %ncnt492 = getelementptr inbounds %struct.args_t, ptr %435, i32 0, i32 30, !dbg !4666
  %436 = load ptr, ptr %ncnt492, align 8, !dbg !4666, !tbaa !2802
  %437 = load i32, ptr %idx436, align 4, !dbg !4667, !tbaa !1223
  %idxprom493 = sext i32 %437 to i64, !dbg !4665
  %arrayidx494 = getelementptr i32, ptr %436, i64 %idxprom493, !dbg !4665
  %438 = load i32, ptr %arrayidx494, align 4, !dbg !4665, !tbaa !1223
  %conv495 = uitofp i32 %438 to double, !dbg !4665
  %div496 = fdiv double %434, %conv495, !dbg !4668
  br label %cond.end498, !dbg !4659

cond.false497:                                    ; preds = %if.else483
  br label %cond.end498, !dbg !4659

cond.end498:                                      ; preds = %cond.false497, %cond.true488
  %cond499 = phi double [ %div496, %cond.true488 ], [ 0.000000e+00, %cond.false497 ], !dbg !4659
  %439 = load ptr, ptr %arr430, align 8, !dbg !4669, !tbaa !1228
  %440 = load i32, ptr %k, align 4, !dbg !4670, !tbaa !1223
  %idxprom500 = sext i32 %440 to i64, !dbg !4669
  %arrayidx501 = getelementptr %struct.idbl_t, ptr %439, i64 %idxprom500, !dbg !4669
  %val502 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx501, i32 0, i32 2, !dbg !4671
  store double %cond499, ptr %val502, align 8, !dbg !4672, !tbaa !4422
  br label %if.end503

if.end503:                                        ; preds = %cond.end498, %cond.end478
  br label %if.end504

if.end504:                                        ; preds = %if.end503, %if.then451
  %441 = load i32, ptr %j435, align 4, !dbg !4673, !tbaa !1223
  %442 = load ptr, ptr %arr430, align 8, !dbg !4674, !tbaa !1228
  %443 = load i32, ptr %k, align 4, !dbg !4675, !tbaa !1223
  %idxprom505 = sext i32 %443 to i64, !dbg !4674
  %arrayidx506 = getelementptr %struct.idbl_t, ptr %442, i64 %idxprom505, !dbg !4674
  %ism507 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx506, i32 0, i32 0, !dbg !4676
  store i32 %441, ptr %ism507, align 8, !dbg !4677, !tbaa !4462
  %444 = load i32, ptr %idx436, align 4, !dbg !4678, !tbaa !1223
  %445 = load ptr, ptr %arr430, align 8, !dbg !4679, !tbaa !1228
  %446 = load i32, ptr %k, align 4, !dbg !4680, !tbaa !1223
  %idxprom508 = sext i32 %446 to i64, !dbg !4679
  %arrayidx509 = getelementptr %struct.idbl_t, ptr %445, i64 %idxprom508, !dbg !4679
  %idx510 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx509, i32 0, i32 1, !dbg !4681
  store i32 %444, ptr %idx510, align 4, !dbg !4682, !tbaa !4468
  %447 = load i32, ptr %idx436, align 4, !dbg !4683, !tbaa !1223
  %inc511 = add i32 %447, 1, !dbg !4683
  store i32 %inc511, ptr %idx436, align 4, !dbg !4683, !tbaa !1223
  %448 = load i32, ptr %k, align 4, !dbg !4684, !tbaa !1223
  %inc512 = add i32 %448, 1, !dbg !4684
  store i32 %inc512, ptr %k, align 4, !dbg !4684, !tbaa !1223
  br label %for.inc513, !dbg !4685

for.inc513:                                       ; preds = %if.end504
  %449 = load i32, ptr %j435, align 4, !dbg !4686, !tbaa !1223
  %inc514 = add i32 %449, 1, !dbg !4686
  store i32 %inc514, ptr %j435, align 4, !dbg !4686, !tbaa !1223
  br label %for.cond445, !dbg !4687, !llvm.loop !4688

for.end515:                                       ; preds = %for.cond445
  br label %for.cond516, !dbg !4690

for.cond516:                                      ; preds = %for.inc587, %for.end515
  %450 = load i32, ptr %j435, align 4, !dbg !4691, !tbaa !1223
  %451 = load i32, ptr %narr, align 4, !dbg !4694, !tbaa !1223
  %cmp517 = icmp slt i32 %450, %451, !dbg !4695
  br i1 %cmp517, label %for.body519, label %for.end589, !dbg !4696

for.body519:                                      ; preds = %for.cond516
  %452 = load i32, ptr %j435, align 4, !dbg !4697, !tbaa !1223
  %453 = load i32, ptr %j435, align 4, !dbg !4699, !tbaa !1223
  %add = add i32 %453, 1, !dbg !4700
  %mul520 = mul i32 %452, %add, !dbg !4701
  %div521 = sdiv i32 %mul520, 2, !dbg !4702
  %454 = load i32, ptr %i434, align 4, !dbg !4703, !tbaa !1223
  %add522 = add i32 %div521, %454, !dbg !4704
  store i32 %add522, ptr %idx436, align 4, !dbg !4705, !tbaa !1223
  %455 = load ptr, ptr %args.addr, align 8, !dbg !4706, !tbaa !1228
  %sort_by_hwe523 = getelementptr inbounds %struct.args_t, ptr %455, i32 0, i32 50, !dbg !4708
  %456 = load i32, ptr %sort_by_hwe523, align 4, !dbg !4708, !tbaa !1421
  %tobool524 = icmp ne i32 %456, 0, !dbg !4706
  br i1 %tobool524, label %if.then525, label %if.else533, !dbg !4709

if.then525:                                       ; preds = %for.body519
  %457 = load ptr, ptr %args.addr, align 8, !dbg !4710, !tbaa !1228
  %hwe_prob526 = getelementptr inbounds %struct.args_t, ptr %457, i32 0, i32 40, !dbg !4711
  %458 = load ptr, ptr %hwe_prob526, align 8, !dbg !4711, !tbaa !2823
  %459 = load i32, ptr %idx436, align 4, !dbg !4712, !tbaa !1223
  %idxprom527 = sext i32 %459 to i64, !dbg !4710
  %arrayidx528 = getelementptr double, ptr %458, i64 %idxprom527, !dbg !4710
  %460 = load double, ptr %arrayidx528, align 8, !dbg !4710, !tbaa !1761
  %fneg529 = fneg double %460, !dbg !4713
  %461 = load ptr, ptr %arr430, align 8, !dbg !4714, !tbaa !1228
  %462 = load i32, ptr %k, align 4, !dbg !4715, !tbaa !1223
  %idxprom530 = sext i32 %462 to i64, !dbg !4714
  %arrayidx531 = getelementptr %struct.idbl_t, ptr %461, i64 %idxprom530, !dbg !4714
  %val532 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx531, i32 0, i32 2, !dbg !4716
  store double %fneg529, ptr %val532, align 8, !dbg !4717, !tbaa !4422
  br label %if.end578, !dbg !4714

if.else533:                                       ; preds = %for.body519
  %463 = load ptr, ptr %args.addr, align 8, !dbg !4718, !tbaa !1228
  %ndiff534 = getelementptr inbounds %struct.args_t, ptr %463, i32 0, i32 29, !dbg !4720
  %464 = load ptr, ptr %ndiff534, align 8, !dbg !4720, !tbaa !2795
  %tobool535 = icmp ne ptr %464, null, !dbg !4718
  br i1 %tobool535, label %if.then536, label %if.else557, !dbg !4721

if.then536:                                       ; preds = %if.else533
  %465 = load ptr, ptr %args.addr, align 8, !dbg !4722, !tbaa !1228
  %ncnt537 = getelementptr inbounds %struct.args_t, ptr %465, i32 0, i32 30, !dbg !4723
  %466 = load ptr, ptr %ncnt537, align 8, !dbg !4723, !tbaa !2802
  %467 = load i32, ptr %idx436, align 4, !dbg !4724, !tbaa !1223
  %idxprom538 = sext i32 %467 to i64, !dbg !4722
  %arrayidx539 = getelementptr i32, ptr %466, i64 %idxprom538, !dbg !4722
  %468 = load i32, ptr %arrayidx539, align 4, !dbg !4722, !tbaa !1223
  %tobool540 = icmp ne i32 %468, 0, !dbg !4722
  br i1 %tobool540, label %cond.true541, label %cond.false551, !dbg !4722

cond.true541:                                     ; preds = %if.then536
  %469 = load ptr, ptr %args.addr, align 8, !dbg !4725, !tbaa !1228
  %ndiff542 = getelementptr inbounds %struct.args_t, ptr %469, i32 0, i32 29, !dbg !4726
  %470 = load ptr, ptr %ndiff542, align 8, !dbg !4726, !tbaa !2795
  %471 = load i32, ptr %idx436, align 4, !dbg !4727, !tbaa !1223
  %idxprom543 = sext i32 %471 to i64, !dbg !4725
  %arrayidx544 = getelementptr i32, ptr %470, i64 %idxprom543, !dbg !4725
  %472 = load i32, ptr %arrayidx544, align 4, !dbg !4725, !tbaa !1223
  %conv545 = uitofp i32 %472 to double, !dbg !4728
  %473 = load ptr, ptr %args.addr, align 8, !dbg !4729, !tbaa !1228
  %ncnt546 = getelementptr inbounds %struct.args_t, ptr %473, i32 0, i32 30, !dbg !4730
  %474 = load ptr, ptr %ncnt546, align 8, !dbg !4730, !tbaa !2802
  %475 = load i32, ptr %idx436, align 4, !dbg !4731, !tbaa !1223
  %idxprom547 = sext i32 %475 to i64, !dbg !4729
  %arrayidx548 = getelementptr i32, ptr %474, i64 %idxprom547, !dbg !4729
  %476 = load i32, ptr %arrayidx548, align 4, !dbg !4729, !tbaa !1223
  %conv549 = uitofp i32 %476 to double, !dbg !4729
  %div550 = fdiv double %conv545, %conv549, !dbg !4732
  br label %cond.end552, !dbg !4722

cond.false551:                                    ; preds = %if.then536
  br label %cond.end552, !dbg !4722

cond.end552:                                      ; preds = %cond.false551, %cond.true541
  %cond553 = phi double [ %div550, %cond.true541 ], [ 0.000000e+00, %cond.false551 ], !dbg !4722
  %477 = load ptr, ptr %arr430, align 8, !dbg !4733, !tbaa !1228
  %478 = load i32, ptr %k, align 4, !dbg !4734, !tbaa !1223
  %idxprom554 = sext i32 %478 to i64, !dbg !4733
  %arrayidx555 = getelementptr %struct.idbl_t, ptr %477, i64 %idxprom554, !dbg !4733
  %val556 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx555, i32 0, i32 2, !dbg !4735
  store double %cond553, ptr %val556, align 8, !dbg !4736, !tbaa !4422
  br label %if.end577, !dbg !4733

if.else557:                                       ; preds = %if.else533
  %479 = load ptr, ptr %args.addr, align 8, !dbg !4737, !tbaa !1228
  %ncnt558 = getelementptr inbounds %struct.args_t, ptr %479, i32 0, i32 30, !dbg !4738
  %480 = load ptr, ptr %ncnt558, align 8, !dbg !4738, !tbaa !2802
  %481 = load i32, ptr %idx436, align 4, !dbg !4739, !tbaa !1223
  %idxprom559 = sext i32 %481 to i64, !dbg !4737
  %arrayidx560 = getelementptr i32, ptr %480, i64 %idxprom559, !dbg !4737
  %482 = load i32, ptr %arrayidx560, align 4, !dbg !4737, !tbaa !1223
  %tobool561 = icmp ne i32 %482, 0, !dbg !4737
  br i1 %tobool561, label %cond.true562, label %cond.false571, !dbg !4737

cond.true562:                                     ; preds = %if.else557
  %483 = load ptr, ptr %args.addr, align 8, !dbg !4740, !tbaa !1228
  %pdiff563 = getelementptr inbounds %struct.args_t, ptr %483, i32 0, i32 26, !dbg !4741
  %484 = load ptr, ptr %pdiff563, align 8, !dbg !4741, !tbaa !2628
  %485 = load i32, ptr %idx436, align 4, !dbg !4742, !tbaa !1223
  %idxprom564 = sext i32 %485 to i64, !dbg !4740
  %arrayidx565 = getelementptr double, ptr %484, i64 %idxprom564, !dbg !4740
  %486 = load double, ptr %arrayidx565, align 8, !dbg !4740, !tbaa !1761
  %487 = load ptr, ptr %args.addr, align 8, !dbg !4743, !tbaa !1228
  %ncnt566 = getelementptr inbounds %struct.args_t, ptr %487, i32 0, i32 30, !dbg !4744
  %488 = load ptr, ptr %ncnt566, align 8, !dbg !4744, !tbaa !2802
  %489 = load i32, ptr %idx436, align 4, !dbg !4745, !tbaa !1223
  %idxprom567 = sext i32 %489 to i64, !dbg !4743
  %arrayidx568 = getelementptr i32, ptr %488, i64 %idxprom567, !dbg !4743
  %490 = load i32, ptr %arrayidx568, align 4, !dbg !4743, !tbaa !1223
  %conv569 = uitofp i32 %490 to double, !dbg !4743
  %div570 = fdiv double %486, %conv569, !dbg !4746
  br label %cond.end572, !dbg !4737

cond.false571:                                    ; preds = %if.else557
  br label %cond.end572, !dbg !4737

cond.end572:                                      ; preds = %cond.false571, %cond.true562
  %cond573 = phi double [ %div570, %cond.true562 ], [ 0.000000e+00, %cond.false571 ], !dbg !4737
  %491 = load ptr, ptr %arr430, align 8, !dbg !4747, !tbaa !1228
  %492 = load i32, ptr %k, align 4, !dbg !4748, !tbaa !1223
  %idxprom574 = sext i32 %492 to i64, !dbg !4747
  %arrayidx575 = getelementptr %struct.idbl_t, ptr %491, i64 %idxprom574, !dbg !4747
  %val576 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx575, i32 0, i32 2, !dbg !4749
  store double %cond573, ptr %val576, align 8, !dbg !4750, !tbaa !4422
  br label %if.end577

if.end577:                                        ; preds = %cond.end572, %cond.end552
  br label %if.end578

if.end578:                                        ; preds = %if.end577, %if.then525
  %493 = load i32, ptr %j435, align 4, !dbg !4751, !tbaa !1223
  %add579 = add i32 %493, 1, !dbg !4752
  %494 = load ptr, ptr %arr430, align 8, !dbg !4753, !tbaa !1228
  %495 = load i32, ptr %k, align 4, !dbg !4754, !tbaa !1223
  %idxprom580 = sext i32 %495 to i64, !dbg !4753
  %arrayidx581 = getelementptr %struct.idbl_t, ptr %494, i64 %idxprom580, !dbg !4753
  %ism582 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx581, i32 0, i32 0, !dbg !4755
  store i32 %add579, ptr %ism582, align 8, !dbg !4756, !tbaa !4462
  %496 = load i32, ptr %idx436, align 4, !dbg !4757, !tbaa !1223
  %497 = load ptr, ptr %arr430, align 8, !dbg !4758, !tbaa !1228
  %498 = load i32, ptr %k, align 4, !dbg !4759, !tbaa !1223
  %idxprom583 = sext i32 %498 to i64, !dbg !4758
  %arrayidx584 = getelementptr %struct.idbl_t, ptr %497, i64 %idxprom583, !dbg !4758
  %idx585 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx584, i32 0, i32 1, !dbg !4760
  store i32 %496, ptr %idx585, align 4, !dbg !4761, !tbaa !4468
  %499 = load i32, ptr %k, align 4, !dbg !4762, !tbaa !1223
  %inc586 = add i32 %499, 1, !dbg !4762
  store i32 %inc586, ptr %k, align 4, !dbg !4762, !tbaa !1223
  br label %for.inc587, !dbg !4763

for.inc587:                                       ; preds = %if.end578
  %500 = load i32, ptr %j435, align 4, !dbg !4764, !tbaa !1223
  %inc588 = add i32 %500, 1, !dbg !4764
  store i32 %inc588, ptr %j435, align 4, !dbg !4764, !tbaa !1223
  br label %for.cond516, !dbg !4765, !llvm.loop !4766

for.end589:                                       ; preds = %for.cond516
  %501 = load ptr, ptr %arr430, align 8, !dbg !4768, !tbaa !1228
  %502 = load i32, ptr %narr, align 4, !dbg !4769, !tbaa !1223
  %conv590 = sext i32 %502 to i64, !dbg !4769
  call void @qsort(ptr noundef %501, i64 noundef %conv590, i64 noundef 16, ptr noundef @cmp_idbl), !dbg !4770
  call void @llvm.lifetime.start.p0(i64 4, ptr %iqry591) #14, !dbg !4771
  tail call void @llvm.dbg.declare(metadata ptr %iqry591, metadata !4055, metadata !DIExpression()), !dbg !4772
  %503 = load ptr, ptr %args.addr, align 8, !dbg !4773, !tbaa !1228
  %qry_smpl592 = getelementptr inbounds %struct.args_t, ptr %503, i32 0, i32 24, !dbg !4774
  %504 = load ptr, ptr %qry_smpl592, align 8, !dbg !4774, !tbaa !2562
  %tobool593 = icmp ne ptr %504, null, !dbg !4773
  br i1 %tobool593, label %cond.true594, label %cond.false598, !dbg !4773

cond.true594:                                     ; preds = %for.end589
  %505 = load ptr, ptr %args.addr, align 8, !dbg !4775, !tbaa !1228
  %qry_smpl595 = getelementptr inbounds %struct.args_t, ptr %505, i32 0, i32 24, !dbg !4776
  %506 = load ptr, ptr %qry_smpl595, align 8, !dbg !4776, !tbaa !2562
  %507 = load i32, ptr %i434, align 4, !dbg !4777, !tbaa !1223
  %idxprom596 = sext i32 %507 to i64, !dbg !4775
  %arrayidx597 = getelementptr i32, ptr %506, i64 %idxprom596, !dbg !4775
  %508 = load i32, ptr %arrayidx597, align 4, !dbg !4775, !tbaa !1223
  br label %cond.end599, !dbg !4773

cond.false598:                                    ; preds = %for.end589
  %509 = load i32, ptr %i434, align 4, !dbg !4778, !tbaa !1223
  br label %cond.end599, !dbg !4773

cond.end599:                                      ; preds = %cond.false598, %cond.true594
  %cond600 = phi i32 [ %508, %cond.true594 ], [ %509, %cond.false598 ], !dbg !4773
  store i32 %cond600, ptr %iqry591, align 4, !dbg !4772, !tbaa !1223
  store i32 0, ptr %j435, align 4, !dbg !4779, !tbaa !1223
  br label %for.cond601, !dbg !4780

for.cond601:                                      ; preds = %for.inc688, %cond.end599
  %510 = load i32, ptr %j435, align 4, !dbg !4781, !tbaa !1223
  %511 = load ptr, ptr %args.addr, align 8, !dbg !4782, !tbaa !1228
  %ntop602 = getelementptr inbounds %struct.args_t, ptr %511, i32 0, i32 47, !dbg !4783
  %512 = load i32, ptr %ntop602, align 8, !dbg !4783, !tbaa !1403
  %cmp603 = icmp slt i32 %510, %512, !dbg !4784
  br i1 %cmp603, label %for.body605, label %for.end690, !dbg !4785

for.body605:                                      ; preds = %for.cond601
  %513 = load i32, ptr %i434, align 4, !dbg !4786, !tbaa !1223
  %514 = load ptr, ptr %arr430, align 8, !dbg !4788, !tbaa !1228
  %515 = load i32, ptr %j435, align 4, !dbg !4789, !tbaa !1223
  %idxprom606 = sext i32 %515 to i64, !dbg !4788
  %arrayidx607 = getelementptr %struct.idbl_t, ptr %514, i64 %idxprom606, !dbg !4788
  %ism608 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx607, i32 0, i32 0, !dbg !4790
  %516 = load i32, ptr %ism608, align 8, !dbg !4790, !tbaa !4462
  %cmp609 = icmp sle i32 %513, %516, !dbg !4791
  br i1 %cmp609, label %if.then611, label %if.end612, !dbg !4792

if.then611:                                       ; preds = %for.body605
  br label %for.inc688, !dbg !4793

if.end612:                                        ; preds = %for.body605
  call void @llvm.lifetime.start.p0(i64 4, ptr %idx613) #14, !dbg !4794
  tail call void @llvm.dbg.declare(metadata ptr %idx613, metadata !4059, metadata !DIExpression()), !dbg !4795
  %517 = load ptr, ptr %arr430, align 8, !dbg !4796, !tbaa !1228
  %518 = load i32, ptr %j435, align 4, !dbg !4797, !tbaa !1223
  %idxprom614 = sext i32 %518 to i64, !dbg !4796
  %arrayidx615 = getelementptr %struct.idbl_t, ptr %517, i64 %idxprom614, !dbg !4796
  %idx616 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx615, i32 0, i32 1, !dbg !4798
  %519 = load i32, ptr %idx616, align 4, !dbg !4798, !tbaa !4468
  store i32 %519, ptr %idx613, align 4, !dbg !4795, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 4, ptr %igt617) #14, !dbg !4799
  tail call void @llvm.dbg.declare(metadata ptr %igt617, metadata !4063, metadata !DIExpression()), !dbg !4800
  %520 = load ptr, ptr %args.addr, align 8, !dbg !4801, !tbaa !1228
  %qry_smpl618 = getelementptr inbounds %struct.args_t, ptr %520, i32 0, i32 24, !dbg !4802
  %521 = load ptr, ptr %qry_smpl618, align 8, !dbg !4802, !tbaa !2562
  %tobool619 = icmp ne ptr %521, null, !dbg !4801
  br i1 %tobool619, label %cond.true620, label %cond.false627, !dbg !4801

cond.true620:                                     ; preds = %if.end612
  %522 = load ptr, ptr %args.addr, align 8, !dbg !4803, !tbaa !1228
  %qry_smpl621 = getelementptr inbounds %struct.args_t, ptr %522, i32 0, i32 24, !dbg !4804
  %523 = load ptr, ptr %qry_smpl621, align 8, !dbg !4804, !tbaa !2562
  %524 = load ptr, ptr %arr430, align 8, !dbg !4805, !tbaa !1228
  %525 = load i32, ptr %j435, align 4, !dbg !4806, !tbaa !1223
  %idxprom622 = sext i32 %525 to i64, !dbg !4805
  %arrayidx623 = getelementptr %struct.idbl_t, ptr %524, i64 %idxprom622, !dbg !4805
  %ism624 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx623, i32 0, i32 0, !dbg !4807
  %526 = load i32, ptr %ism624, align 8, !dbg !4807, !tbaa !4462
  %idxprom625 = sext i32 %526 to i64, !dbg !4803
  %arrayidx626 = getelementptr i32, ptr %523, i64 %idxprom625, !dbg !4803
  %527 = load i32, ptr %arrayidx626, align 4, !dbg !4803, !tbaa !1223
  br label %cond.end631, !dbg !4801

cond.false627:                                    ; preds = %if.end612
  %528 = load ptr, ptr %arr430, align 8, !dbg !4808, !tbaa !1228
  %529 = load i32, ptr %j435, align 4, !dbg !4809, !tbaa !1223
  %idxprom628 = sext i32 %529 to i64, !dbg !4808
  %arrayidx629 = getelementptr %struct.idbl_t, ptr %528, i64 %idxprom628, !dbg !4808
  %ism630 = getelementptr inbounds %struct.idbl_t, ptr %arrayidx629, i32 0, i32 0, !dbg !4810
  %530 = load i32, ptr %ism630, align 8, !dbg !4810, !tbaa !4462
  br label %cond.end631, !dbg !4801

cond.end631:                                      ; preds = %cond.false627, %cond.true620
  %cond632 = phi i32 [ %527, %cond.true620 ], [ %530, %cond.false627 ], !dbg !4801
  store i32 %cond632, ptr %igt617, align 4, !dbg !4800, !tbaa !1223
  %531 = load ptr, ptr %args.addr, align 8, !dbg !4811, !tbaa !1228
  %ndiff633 = getelementptr inbounds %struct.args_t, ptr %531, i32 0, i32 29, !dbg !4813
  %532 = load ptr, ptr %ndiff633, align 8, !dbg !4813, !tbaa !2795
  %tobool634 = icmp ne ptr %532, null, !dbg !4811
  br i1 %tobool634, label %if.then635, label %if.else661, !dbg !4814

if.then635:                                       ; preds = %cond.end631
  %533 = load ptr, ptr %args.addr, align 8, !dbg !4815, !tbaa !1228
  %fp636 = getelementptr inbounds %struct.args_t, ptr %533, i32 0, i32 53, !dbg !4817
  %534 = load ptr, ptr %fp636, align 8, !dbg !4817, !tbaa !1768
  %535 = load ptr, ptr %args.addr, align 8, !dbg !4818, !tbaa !1228
  %qry_hdr637 = getelementptr inbounds %struct.args_t, ptr %535, i32 0, i32 2, !dbg !4819
  %536 = load ptr, ptr %qry_hdr637, align 8, !dbg !4819, !tbaa !2104
  %samples638 = getelementptr inbounds %struct.bcf_hdr_t, ptr %536, i32 0, i32 3, !dbg !4820
  %537 = load ptr, ptr %samples638, align 8, !dbg !4820, !tbaa !4192
  %538 = load i32, ptr %iqry591, align 4, !dbg !4821, !tbaa !1223
  %idxprom639 = sext i32 %538 to i64, !dbg !4818
  %arrayidx640 = getelementptr ptr, ptr %537, i64 %idxprom639, !dbg !4818
  %539 = load ptr, ptr %arrayidx640, align 8, !dbg !4818, !tbaa !1228
  %540 = load ptr, ptr %args.addr, align 8, !dbg !4822, !tbaa !1228
  %qry_hdr641 = getelementptr inbounds %struct.args_t, ptr %540, i32 0, i32 2, !dbg !4823
  %541 = load ptr, ptr %qry_hdr641, align 8, !dbg !4823, !tbaa !2104
  %samples642 = getelementptr inbounds %struct.bcf_hdr_t, ptr %541, i32 0, i32 3, !dbg !4824
  %542 = load ptr, ptr %samples642, align 8, !dbg !4824, !tbaa !4192
  %543 = load i32, ptr %igt617, align 4, !dbg !4825, !tbaa !1223
  %idxprom643 = sext i32 %543 to i64, !dbg !4822
  %arrayidx644 = getelementptr ptr, ptr %542, i64 %idxprom643, !dbg !4822
  %544 = load ptr, ptr %arrayidx644, align 8, !dbg !4822, !tbaa !1228
  %545 = load ptr, ptr %args.addr, align 8, !dbg !4826, !tbaa !1228
  %ndiff645 = getelementptr inbounds %struct.args_t, ptr %545, i32 0, i32 29, !dbg !4827
  %546 = load ptr, ptr %ndiff645, align 8, !dbg !4827, !tbaa !2795
  %547 = load i32, ptr %idx613, align 4, !dbg !4828, !tbaa !1223
  %idxprom646 = sext i32 %547 to i64, !dbg !4826
  %arrayidx647 = getelementptr i32, ptr %546, i64 %idxprom646, !dbg !4826
  %548 = load i32, ptr %arrayidx647, align 4, !dbg !4826, !tbaa !1223
  %549 = load ptr, ptr %args.addr, align 8, !dbg !4829, !tbaa !1228
  %calc_hwe_prob648 = getelementptr inbounds %struct.args_t, ptr %549, i32 0, i32 49, !dbg !4830
  %550 = load i32, ptr %calc_hwe_prob648, align 8, !dbg !4830, !tbaa !1262
  %tobool649 = icmp ne i32 %550, 0, !dbg !4829
  br i1 %tobool649, label %cond.true650, label %cond.false654, !dbg !4829

cond.true650:                                     ; preds = %if.then635
  %551 = load ptr, ptr %args.addr, align 8, !dbg !4831, !tbaa !1228
  %hwe_prob651 = getelementptr inbounds %struct.args_t, ptr %551, i32 0, i32 40, !dbg !4832
  %552 = load ptr, ptr %hwe_prob651, align 8, !dbg !4832, !tbaa !2823
  %553 = load i32, ptr %idx613, align 4, !dbg !4833, !tbaa !1223
  %idxprom652 = sext i32 %553 to i64, !dbg !4831
  %arrayidx653 = getelementptr double, ptr %552, i64 %idxprom652, !dbg !4831
  %554 = load double, ptr %arrayidx653, align 8, !dbg !4831, !tbaa !1761
  br label %cond.end655, !dbg !4829

cond.false654:                                    ; preds = %if.then635
  br label %cond.end655, !dbg !4829

cond.end655:                                      ; preds = %cond.false654, %cond.true650
  %cond656 = phi double [ %554, %cond.true650 ], [ 0.000000e+00, %cond.false654 ], !dbg !4829
  %555 = load ptr, ptr %args.addr, align 8, !dbg !4834, !tbaa !1228
  %ncnt657 = getelementptr inbounds %struct.args_t, ptr %555, i32 0, i32 30, !dbg !4835
  %556 = load ptr, ptr %ncnt657, align 8, !dbg !4835, !tbaa !2802
  %557 = load i32, ptr %idx613, align 4, !dbg !4836, !tbaa !1223
  %idxprom658 = sext i32 %557 to i64, !dbg !4834
  %arrayidx659 = getelementptr i32, ptr %556, i64 %idxprom658, !dbg !4834
  %558 = load i32, ptr %arrayidx659, align 4, !dbg !4834, !tbaa !1223
  %call660 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %534, ptr noundef @.str.130, ptr noundef %539, ptr noundef %544, i32 noundef %548, double noundef %cond656, i32 noundef %558), !dbg !4837
  br label %if.end687, !dbg !4838

if.else661:                                       ; preds = %cond.end631
  %559 = load ptr, ptr %args.addr, align 8, !dbg !4839, !tbaa !1228
  %fp662 = getelementptr inbounds %struct.args_t, ptr %559, i32 0, i32 53, !dbg !4841
  %560 = load ptr, ptr %fp662, align 8, !dbg !4841, !tbaa !1768
  %561 = load ptr, ptr %args.addr, align 8, !dbg !4842, !tbaa !1228
  %qry_hdr663 = getelementptr inbounds %struct.args_t, ptr %561, i32 0, i32 2, !dbg !4843
  %562 = load ptr, ptr %qry_hdr663, align 8, !dbg !4843, !tbaa !2104
  %samples664 = getelementptr inbounds %struct.bcf_hdr_t, ptr %562, i32 0, i32 3, !dbg !4844
  %563 = load ptr, ptr %samples664, align 8, !dbg !4844, !tbaa !4192
  %564 = load i32, ptr %iqry591, align 4, !dbg !4845, !tbaa !1223
  %idxprom665 = sext i32 %564 to i64, !dbg !4842
  %arrayidx666 = getelementptr ptr, ptr %563, i64 %idxprom665, !dbg !4842
  %565 = load ptr, ptr %arrayidx666, align 8, !dbg !4842, !tbaa !1228
  %566 = load ptr, ptr %args.addr, align 8, !dbg !4846, !tbaa !1228
  %qry_hdr667 = getelementptr inbounds %struct.args_t, ptr %566, i32 0, i32 2, !dbg !4847
  %567 = load ptr, ptr %qry_hdr667, align 8, !dbg !4847, !tbaa !2104
  %samples668 = getelementptr inbounds %struct.bcf_hdr_t, ptr %567, i32 0, i32 3, !dbg !4848
  %568 = load ptr, ptr %samples668, align 8, !dbg !4848, !tbaa !4192
  %569 = load i32, ptr %igt617, align 4, !dbg !4849, !tbaa !1223
  %idxprom669 = sext i32 %569 to i64, !dbg !4846
  %arrayidx670 = getelementptr ptr, ptr %568, i64 %idxprom669, !dbg !4846
  %570 = load ptr, ptr %arrayidx670, align 8, !dbg !4846, !tbaa !1228
  %571 = load ptr, ptr %args.addr, align 8, !dbg !4850, !tbaa !1228
  %pdiff671 = getelementptr inbounds %struct.args_t, ptr %571, i32 0, i32 26, !dbg !4851
  %572 = load ptr, ptr %pdiff671, align 8, !dbg !4851, !tbaa !2628
  %573 = load i32, ptr %idx613, align 4, !dbg !4852, !tbaa !1223
  %idxprom672 = sext i32 %573 to i64, !dbg !4850
  %arrayidx673 = getelementptr double, ptr %572, i64 %idxprom672, !dbg !4850
  %574 = load double, ptr %arrayidx673, align 8, !dbg !4850, !tbaa !1761
  %575 = load ptr, ptr %args.addr, align 8, !dbg !4853, !tbaa !1228
  %calc_hwe_prob674 = getelementptr inbounds %struct.args_t, ptr %575, i32 0, i32 49, !dbg !4854
  %576 = load i32, ptr %calc_hwe_prob674, align 8, !dbg !4854, !tbaa !1262
  %tobool675 = icmp ne i32 %576, 0, !dbg !4853
  br i1 %tobool675, label %cond.true676, label %cond.false680, !dbg !4853

cond.true676:                                     ; preds = %if.else661
  %577 = load ptr, ptr %args.addr, align 8, !dbg !4855, !tbaa !1228
  %hwe_prob677 = getelementptr inbounds %struct.args_t, ptr %577, i32 0, i32 40, !dbg !4856
  %578 = load ptr, ptr %hwe_prob677, align 8, !dbg !4856, !tbaa !2823
  %579 = load i32, ptr %idx613, align 4, !dbg !4857, !tbaa !1223
  %idxprom678 = sext i32 %579 to i64, !dbg !4855
  %arrayidx679 = getelementptr double, ptr %578, i64 %idxprom678, !dbg !4855
  %580 = load double, ptr %arrayidx679, align 8, !dbg !4855, !tbaa !1761
  br label %cond.end681, !dbg !4853

cond.false680:                                    ; preds = %if.else661
  br label %cond.end681, !dbg !4853

cond.end681:                                      ; preds = %cond.false680, %cond.true676
  %cond682 = phi double [ %580, %cond.true676 ], [ 0.000000e+00, %cond.false680 ], !dbg !4853
  %581 = load ptr, ptr %args.addr, align 8, !dbg !4858, !tbaa !1228
  %ncnt683 = getelementptr inbounds %struct.args_t, ptr %581, i32 0, i32 30, !dbg !4859
  %582 = load ptr, ptr %ncnt683, align 8, !dbg !4859, !tbaa !2802
  %583 = load i32, ptr %idx613, align 4, !dbg !4860, !tbaa !1223
  %idxprom684 = sext i32 %583 to i64, !dbg !4858
  %arrayidx685 = getelementptr i32, ptr %582, i64 %idxprom684, !dbg !4858
  %584 = load i32, ptr %arrayidx685, align 4, !dbg !4858, !tbaa !1223
  %call686 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %560, ptr noundef @.str.131, ptr noundef %565, ptr noundef %570, double noundef %574, double noundef %cond682, i32 noundef %584), !dbg !4861
  br label %if.end687

if.end687:                                        ; preds = %cond.end681, %cond.end655
  call void @llvm.lifetime.end.p0(i64 4, ptr %igt617) #14, !dbg !4862
  call void @llvm.lifetime.end.p0(i64 4, ptr %idx613) #14, !dbg !4862
  br label %for.inc688, !dbg !4863

for.inc688:                                       ; preds = %if.end687, %if.then611
  %585 = load i32, ptr %j435, align 4, !dbg !4864, !tbaa !1223
  %inc689 = add i32 %585, 1, !dbg !4864
  store i32 %inc689, ptr %j435, align 4, !dbg !4864, !tbaa !1223
  br label %for.cond601, !dbg !4865, !llvm.loop !4866

for.end690:                                       ; preds = %for.cond601
  call void @llvm.lifetime.end.p0(i64 4, ptr %iqry591) #14, !dbg !4868
  br label %for.inc691, !dbg !4869

for.inc691:                                       ; preds = %for.end690
  %586 = load i32, ptr %i434, align 4, !dbg !4870, !tbaa !1223
  %inc692 = add i32 %586, 1, !dbg !4870
  store i32 %inc692, ptr %i434, align 4, !dbg !4870, !tbaa !1223
  br label %for.cond437, !dbg !4871, !llvm.loop !4872

for.end693:                                       ; preds = %for.cond437
  %587 = load ptr, ptr %arr430, align 8, !dbg !4874, !tbaa !1228
  call void @free(ptr noundef %587) #14, !dbg !4875
  call void @llvm.lifetime.end.p0(i64 4, ptr %idx436) #14, !dbg !4876
  call void @llvm.lifetime.end.p0(i64 4, ptr %k) #14, !dbg !4876
  call void @llvm.lifetime.end.p0(i64 4, ptr %j435) #14, !dbg !4876
  call void @llvm.lifetime.end.p0(i64 4, ptr %i434) #14, !dbg !4876
  call void @llvm.lifetime.end.p0(i64 8, ptr %arr430) #14, !dbg !4876
  call void @llvm.lifetime.end.p0(i64 4, ptr %narr) #14, !dbg !4876
  br label %if.end694

if.end694:                                        ; preds = %for.end693, %for.end427
  br label %if.end695

if.end695:                                        ; preds = %if.end694, %for.end227
  br label %if.end696

if.end696:                                        ; preds = %if.end695, %for.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %trim) #14, !dbg !4877
  ret void, !dbg !4877
}

; Function Attrs: nounwind uwtable
define internal void @report_distinctive_sites(ptr noundef %args) #0 !dbg !4878 {
entry:
  %args.addr = alloca ptr, align 8
  %kbs_blk = alloca ptr, align 8
  %itr = alloca %struct.kbitset_iter_t, align 8
  %i = alloca i32, align 4
  %ndiff = alloca i32, align 4
  %rid = alloca i32, align 4
  %pos = alloca i32, align 4
  %ndiff_tot = alloca i32, align 4
  %iblock = alloca i32, align 4
  %ndiff_min = alloca i32, align 4
  %ndiff_new = alloca i32, align 4
  %ndiff_dbg = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !4880, metadata !DIExpression()), !dbg !4899
  %0 = load ptr, ptr %args.addr, align 8, !dbg !4900, !tbaa !1228
  %es = getelementptr inbounds %struct.args_t, ptr %0, i32 0, i32 63, !dbg !4901
  %1 = load ptr, ptr %es, align 8, !dbg !4901, !tbaa !4902
  call void @extsort_sort(ptr noundef %1), !dbg !4903
  %2 = load ptr, ptr %args.addr, align 8, !dbg !4904, !tbaa !1228
  %fp = getelementptr inbounds %struct.args_t, ptr %2, i32 0, i32 53, !dbg !4905
  %3 = load ptr, ptr %fp, align 8, !dbg !4905, !tbaa !1768
  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %3, ptr noundef @.str.132), !dbg !4906
  %4 = load ptr, ptr %args.addr, align 8, !dbg !4907, !tbaa !1228
  %fp1 = getelementptr inbounds %struct.args_t, ptr %4, i32 0, i32 53, !dbg !4908
  %5 = load ptr, ptr %fp1, align 8, !dbg !4908, !tbaa !1768
  %call2 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %5, ptr noundef @.str.133), !dbg !4909
  %6 = load ptr, ptr %args.addr, align 8, !dbg !4910, !tbaa !1228
  %fp3 = getelementptr inbounds %struct.args_t, ptr %6, i32 0, i32 53, !dbg !4911
  %7 = load ptr, ptr %fp3, align 8, !dbg !4911, !tbaa !1768
  %call4 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %7, ptr noundef @.str.134), !dbg !4912
  %8 = load ptr, ptr %args.addr, align 8, !dbg !4913, !tbaa !1228
  %fp5 = getelementptr inbounds %struct.args_t, ptr %8, i32 0, i32 53, !dbg !4914
  %9 = load ptr, ptr %fp5, align 8, !dbg !4914, !tbaa !1768
  %call6 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %9, ptr noundef @.str.135), !dbg !4915
  %10 = load ptr, ptr %args.addr, align 8, !dbg !4916, !tbaa !1228
  %fp7 = getelementptr inbounds %struct.args_t, ptr %10, i32 0, i32 53, !dbg !4917
  %11 = load ptr, ptr %fp7, align 8, !dbg !4917, !tbaa !1768
  %call8 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %11, ptr noundef @.str.136), !dbg !4918
  %12 = load ptr, ptr %args.addr, align 8, !dbg !4919, !tbaa !1228
  %fp9 = getelementptr inbounds %struct.args_t, ptr %12, i32 0, i32 53, !dbg !4920
  %13 = load ptr, ptr %fp9, align 8, !dbg !4920, !tbaa !1768
  %call10 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %13, ptr noundef @.str.137), !dbg !4921
  call void @llvm.lifetime.start.p0(i64 8, ptr %kbs_blk) #14, !dbg !4922
  tail call void @llvm.dbg.declare(metadata ptr %kbs_blk, metadata !4881, metadata !DIExpression()), !dbg !4923
  %14 = load ptr, ptr %args.addr, align 8, !dbg !4924, !tbaa !1228
  %npairs = getelementptr inbounds %struct.args_t, ptr %14, i32 0, i32 32, !dbg !4925
  %15 = load i32, ptr %npairs, align 4, !dbg !4925, !tbaa !2334
  %conv = zext i32 %15 to i64, !dbg !4924
  %call11 = call ptr @kbs_init(i64 noundef %conv), !dbg !4926
  store ptr %call11, ptr %kbs_blk, align 8, !dbg !4923, !tbaa !1228
  call void @llvm.lifetime.start.p0(i64 24, ptr %itr) #14, !dbg !4927
  tail call void @llvm.dbg.declare(metadata ptr %itr, metadata !4882, metadata !DIExpression()), !dbg !4928
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #14, !dbg !4929
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4889, metadata !DIExpression()), !dbg !4930
  call void @llvm.lifetime.start.p0(i64 4, ptr %ndiff) #14, !dbg !4929
  tail call void @llvm.dbg.declare(metadata ptr %ndiff, metadata !4890, metadata !DIExpression()), !dbg !4931
  call void @llvm.lifetime.start.p0(i64 4, ptr %rid) #14, !dbg !4929
  tail call void @llvm.dbg.declare(metadata ptr %rid, metadata !4891, metadata !DIExpression()), !dbg !4932
  call void @llvm.lifetime.start.p0(i64 4, ptr %pos) #14, !dbg !4929
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !4892, metadata !DIExpression()), !dbg !4933
  call void @llvm.lifetime.start.p0(i64 4, ptr %ndiff_tot) #14, !dbg !4929
  tail call void @llvm.dbg.declare(metadata ptr %ndiff_tot, metadata !4893, metadata !DIExpression()), !dbg !4934
  store i32 0, ptr %ndiff_tot, align 4, !dbg !4934, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 4, ptr %iblock) #14, !dbg !4929
  tail call void @llvm.dbg.declare(metadata ptr %iblock, metadata !4894, metadata !DIExpression()), !dbg !4935
  store i32 0, ptr %iblock, align 4, !dbg !4935, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 4, ptr %ndiff_min) #14, !dbg !4936
  tail call void @llvm.dbg.declare(metadata ptr %ndiff_min, metadata !4895, metadata !DIExpression()), !dbg !4937
  %16 = load ptr, ptr %args.addr, align 8, !dbg !4938, !tbaa !1228
  %distinctive_sites = getelementptr inbounds %struct.args_t, ptr %16, i32 0, i32 60, !dbg !4939
  %17 = load double, ptr %distinctive_sites, align 8, !dbg !4939, !tbaa !1442
  %18 = load ptr, ptr %args.addr, align 8, !dbg !4940, !tbaa !1228
  %npairs12 = getelementptr inbounds %struct.args_t, ptr %18, i32 0, i32 32, !dbg !4941
  %19 = load i32, ptr %npairs12, align 4, !dbg !4941, !tbaa !2334
  %conv13 = uitofp i32 %19 to double, !dbg !4940
  %cmp = fcmp ole double %17, %conv13, !dbg !4942
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4938

cond.true:                                        ; preds = %entry
  %20 = load ptr, ptr %args.addr, align 8, !dbg !4943, !tbaa !1228
  %distinctive_sites15 = getelementptr inbounds %struct.args_t, ptr %20, i32 0, i32 60, !dbg !4944
  %21 = load double, ptr %distinctive_sites15, align 8, !dbg !4944, !tbaa !1442
  br label %cond.end, !dbg !4938

cond.false:                                       ; preds = %entry
  %22 = load ptr, ptr %args.addr, align 8, !dbg !4945, !tbaa !1228
  %npairs16 = getelementptr inbounds %struct.args_t, ptr %22, i32 0, i32 32, !dbg !4946
  %23 = load i32, ptr %npairs16, align 4, !dbg !4946, !tbaa !2334
  %conv17 = uitofp i32 %23 to double, !dbg !4945
  br label %cond.end, !dbg !4938

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %21, %cond.true ], [ %conv17, %cond.false ], !dbg !4938
  %conv18 = fptosi double %cond to i32, !dbg !4938
  store i32 %conv18, ptr %ndiff_min, align 4, !dbg !4937, !tbaa !1223
  br label %while.cond, !dbg !4947

while.cond:                                       ; preds = %cleanup.cont, %cleanup, %cond.end
  %24 = load ptr, ptr %args.addr, align 8, !dbg !4948, !tbaa !1228
  %call19 = call i32 @diff_sites_shift(ptr noundef %24, ptr noundef %ndiff, ptr noundef %rid, ptr noundef %pos), !dbg !4949
  %tobool = icmp ne i32 %call19, 0, !dbg !4947
  br i1 %tobool, label %while.body, label %while.end45, !dbg !4947

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0(i64 4, ptr %ndiff_new) #14, !dbg !4950
  tail call void @llvm.dbg.declare(metadata ptr %ndiff_new, metadata !4896, metadata !DIExpression()), !dbg !4951
  store i32 0, ptr %ndiff_new, align 4, !dbg !4951, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 4, ptr %ndiff_dbg) #14, !dbg !4950
  tail call void @llvm.dbg.declare(metadata ptr %ndiff_dbg, metadata !4898, metadata !DIExpression()), !dbg !4952
  store i32 0, ptr %ndiff_dbg, align 4, !dbg !4952, !tbaa !1223
  call void @kbs_start(ptr noundef %itr), !dbg !4953
  br label %while.cond20, !dbg !4954

while.cond20:                                     ; preds = %if.end, %if.then, %while.body
  %25 = load ptr, ptr %args.addr, align 8, !dbg !4955, !tbaa !1228
  %kbs_diff = getelementptr inbounds %struct.args_t, ptr %25, i32 0, i32 61, !dbg !4956
  %26 = load ptr, ptr %kbs_diff, align 8, !dbg !4956, !tbaa !3308
  %call21 = call i32 @kbs_next(ptr noundef %26, ptr noundef %itr), !dbg !4957
  store i32 %call21, ptr %i, align 4, !dbg !4958, !tbaa !1223
  %cmp22 = icmp sge i32 %call21, 0, !dbg !4959
  br i1 %cmp22, label %while.body24, label %while.end, !dbg !4954

while.body24:                                     ; preds = %while.cond20
  %27 = load i32, ptr %ndiff_dbg, align 4, !dbg !4960, !tbaa !1223
  %inc = add i32 %27, 1, !dbg !4960
  store i32 %inc, ptr %ndiff_dbg, align 4, !dbg !4960, !tbaa !1223
  %28 = load ptr, ptr %kbs_blk, align 8, !dbg !4962, !tbaa !1228
  %29 = load i32, ptr %i, align 4, !dbg !4964, !tbaa !1223
  %call25 = call i32 @kbs_exists(ptr noundef %28, i32 noundef %29), !dbg !4965
  %tobool26 = icmp ne i32 %call25, 0, !dbg !4965
  br i1 %tobool26, label %if.then, label %if.end, !dbg !4966

if.then:                                          ; preds = %while.body24
  br label %while.cond20, !dbg !4967, !llvm.loop !4968

if.end:                                           ; preds = %while.body24
  %30 = load ptr, ptr %kbs_blk, align 8, !dbg !4970, !tbaa !1228
  %31 = load i32, ptr %i, align 4, !dbg !4971, !tbaa !1223
  call void @kbs_insert(ptr noundef %30, i32 noundef %31), !dbg !4972
  %32 = load i32, ptr %ndiff_new, align 4, !dbg !4973, !tbaa !1223
  %inc27 = add i32 %32, 1, !dbg !4973
  store i32 %inc27, ptr %ndiff_new, align 4, !dbg !4973, !tbaa !1223
  br label %while.cond20, !dbg !4954, !llvm.loop !4968

while.end:                                        ; preds = %while.cond20
  %33 = load i32, ptr %ndiff_dbg, align 4, !dbg !4974, !tbaa !1223
  %34 = load i32, ptr %ndiff, align 4, !dbg !4976, !tbaa !1223
  %cmp28 = icmp ne i32 %33, %34, !dbg !4977
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !4978

if.then30:                                        ; preds = %while.end
  %35 = load i32, ptr %ndiff_dbg, align 4, !dbg !4979, !tbaa !1223
  %36 = load i32, ptr %ndiff, align 4, !dbg !4980, !tbaa !1223
  call void (ptr, ...) @error(ptr noundef @.str.138, i32 noundef %35, i32 noundef %36) #16, !dbg !4981
  unreachable, !dbg !4981

if.end31:                                         ; preds = %while.end
  %37 = load i32, ptr %ndiff_new, align 4, !dbg !4982, !tbaa !1223
  %tobool32 = icmp ne i32 %37, 0, !dbg !4982
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !4984

if.then33:                                        ; preds = %if.end31
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4985, !llvm.loop !4986

if.end34:                                         ; preds = %if.end31
  %38 = load i32, ptr %ndiff_new, align 4, !dbg !4988, !tbaa !1223
  %39 = load i32, ptr %ndiff_tot, align 4, !dbg !4989, !tbaa !1223
  %add = add i32 %39, %38, !dbg !4989
  store i32 %add, ptr %ndiff_tot, align 4, !dbg !4989, !tbaa !1223
  %40 = load ptr, ptr %args.addr, align 8, !dbg !4990, !tbaa !1228
  %fp35 = getelementptr inbounds %struct.args_t, ptr %40, i32 0, i32 53, !dbg !4991
  %41 = load ptr, ptr %fp35, align 8, !dbg !4991, !tbaa !1768
  %42 = load ptr, ptr %args.addr, align 8, !dbg !4992, !tbaa !1228
  %qry_hdr = getelementptr inbounds %struct.args_t, ptr %42, i32 0, i32 2, !dbg !4993
  %43 = load ptr, ptr %qry_hdr, align 8, !dbg !4993, !tbaa !2104
  %44 = load i32, ptr %rid, align 4, !dbg !4994, !tbaa !1223
  %call36 = call ptr @bcf_hdr_id2name(ptr noundef %43, i32 noundef %44), !dbg !4995
  %45 = load i32, ptr %pos, align 4, !dbg !4996, !tbaa !1223
  %add37 = add i32 %45, 1, !dbg !4997
  %46 = load i32, ptr %ndiff_tot, align 4, !dbg !4998, !tbaa !1223
  %47 = load i32, ptr %iblock, align 4, !dbg !4999, !tbaa !1223
  %call38 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %41, ptr noundef @.str.139, ptr noundef %call36, i32 noundef %add37, i32 noundef %46, i32 noundef %47), !dbg !5000
  %48 = load i32, ptr %ndiff_tot, align 4, !dbg !5001, !tbaa !1223
  %49 = load i32, ptr %ndiff_min, align 4, !dbg !5003, !tbaa !1223
  %cmp39 = icmp slt i32 %48, %49, !dbg !5004
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !5005

if.then41:                                        ; preds = %if.end34
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5006, !llvm.loop !4986

if.end42:                                         ; preds = %if.end34
  %50 = load i32, ptr %iblock, align 4, !dbg !5007, !tbaa !1223
  %inc43 = add i32 %50, 1, !dbg !5007
  store i32 %inc43, ptr %iblock, align 4, !dbg !5007, !tbaa !1223
  store i32 0, ptr %ndiff_tot, align 4, !dbg !5008, !tbaa !1223
  %51 = load ptr, ptr %kbs_blk, align 8, !dbg !5009, !tbaa !1228
  call void @kbs_clear(ptr noundef %51), !dbg !5010
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4987
  br label %cleanup, !dbg !4987

cleanup:                                          ; preds = %if.end42, %if.then41, %if.then33
  call void @llvm.lifetime.end.p0(i64 4, ptr %ndiff_dbg) #14, !dbg !4987
  call void @llvm.lifetime.end.p0(i64 4, ptr %ndiff_new) #14, !dbg !4987
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 2, label %while.cond
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond, !dbg !4947, !llvm.loop !4986

while.end45:                                      ; preds = %while.cond
  %52 = load ptr, ptr %kbs_blk, align 8, !dbg !5011, !tbaa !1228
  call void @kbs_destroy(ptr noundef %52), !dbg !5012
  call void @llvm.lifetime.end.p0(i64 4, ptr %ndiff_min) #14, !dbg !5013
  call void @llvm.lifetime.end.p0(i64 4, ptr %iblock) #14, !dbg !5013
  call void @llvm.lifetime.end.p0(i64 4, ptr %ndiff_tot) #14, !dbg !5013
  call void @llvm.lifetime.end.p0(i64 4, ptr %pos) #14, !dbg !5013
  call void @llvm.lifetime.end.p0(i64 4, ptr %rid) #14, !dbg !5013
  call void @llvm.lifetime.end.p0(i64 4, ptr %ndiff) #14, !dbg !5013
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #14, !dbg !5013
  call void @llvm.lifetime.end.p0(i64 24, ptr %itr) #14, !dbg !5013
  call void @llvm.lifetime.end.p0(i64 8, ptr %kbs_blk) #14, !dbg !5013
  ret void, !dbg !5013

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @destroy_data(ptr noundef %args) #0 !dbg !5014 {
entry:
  %args.addr = alloca ptr, align 8
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !5016, metadata !DIExpression()), !dbg !5017
  %0 = load ptr, ptr %args.addr, align 8, !dbg !5018, !tbaa !1228
  %gt_dsg = getelementptr inbounds %struct.args_t, ptr %0, i32 0, i32 38, !dbg !5020
  %1 = load ptr, ptr %gt_dsg, align 8, !dbg !5020, !tbaa !2615
  %2 = load ptr, ptr %args.addr, align 8, !dbg !5021, !tbaa !1228
  %qry_dsg = getelementptr inbounds %struct.args_t, ptr %2, i32 0, i32 37, !dbg !5022
  %3 = load ptr, ptr %qry_dsg, align 8, !dbg !5022, !tbaa !2604
  %cmp = icmp ne ptr %1, %3, !dbg !5023
  br i1 %cmp, label %if.then, label %if.end, !dbg !5024

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %args.addr, align 8, !dbg !5025, !tbaa !1228
  %gt_dsg1 = getelementptr inbounds %struct.args_t, ptr %4, i32 0, i32 38, !dbg !5026
  %5 = load ptr, ptr %gt_dsg1, align 8, !dbg !5026, !tbaa !2615
  call void @free(ptr noundef %5) #14, !dbg !5027
  br label %if.end, !dbg !5027

if.end:                                           ; preds = %if.then, %entry
  %6 = load ptr, ptr %args.addr, align 8, !dbg !5028, !tbaa !1228
  %qry_dsg2 = getelementptr inbounds %struct.args_t, ptr %6, i32 0, i32 37, !dbg !5029
  %7 = load ptr, ptr %qry_dsg2, align 8, !dbg !5029, !tbaa !2604
  call void @free(ptr noundef %7) #14, !dbg !5030
  %8 = load ptr, ptr %args.addr, align 8, !dbg !5031, !tbaa !1228
  %gt_prob = getelementptr inbounds %struct.args_t, ptr %8, i32 0, i32 28, !dbg !5033
  %9 = load ptr, ptr %gt_prob, align 8, !dbg !5033, !tbaa !2652
  %10 = load ptr, ptr %args.addr, align 8, !dbg !5034, !tbaa !1228
  %qry_prob = getelementptr inbounds %struct.args_t, ptr %10, i32 0, i32 27, !dbg !5035
  %11 = load ptr, ptr %qry_prob, align 8, !dbg !5035, !tbaa !2638
  %cmp3 = icmp ne ptr %9, %11, !dbg !5036
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !5037

if.then4:                                         ; preds = %if.end
  %12 = load ptr, ptr %args.addr, align 8, !dbg !5038, !tbaa !1228
  %gt_prob5 = getelementptr inbounds %struct.args_t, ptr %12, i32 0, i32 28, !dbg !5039
  %13 = load ptr, ptr %gt_prob5, align 8, !dbg !5039, !tbaa !2652
  call void @free(ptr noundef %13) #14, !dbg !5040
  br label %if.end6, !dbg !5040

if.end6:                                          ; preds = %if.then4, %if.end
  %14 = load ptr, ptr %args.addr, align 8, !dbg !5041, !tbaa !1228
  %qry_prob7 = getelementptr inbounds %struct.args_t, ptr %14, i32 0, i32 27, !dbg !5042
  %15 = load ptr, ptr %qry_prob7, align 8, !dbg !5042, !tbaa !2638
  call void @free(ptr noundef %15) #14, !dbg !5043
  %16 = load ptr, ptr %args.addr, align 8, !dbg !5044, !tbaa !1228
  %es_max_mem = getelementptr inbounds %struct.args_t, ptr %16, i32 0, i32 65, !dbg !5045
  %17 = load ptr, ptr %es_max_mem, align 8, !dbg !5045, !tbaa !1283
  call void @free(ptr noundef %17) #14, !dbg !5046
  %18 = load ptr, ptr %args.addr, align 8, !dbg !5047, !tbaa !1228
  %fp = getelementptr inbounds %struct.args_t, ptr %18, i32 0, i32 53, !dbg !5048
  %19 = load ptr, ptr %fp, align 8, !dbg !5048, !tbaa !1768
  %call = call i32 @fclose(ptr noundef %19), !dbg !5049
  %20 = load ptr, ptr %args.addr, align 8, !dbg !5050, !tbaa !1228
  %distinctive_sites = getelementptr inbounds %struct.args_t, ptr %20, i32 0, i32 60, !dbg !5052
  %21 = load double, ptr %distinctive_sites, align 8, !dbg !5052, !tbaa !1442
  %tobool = fcmp une double %21, 0.000000e+00, !dbg !5050
  br i1 %tobool, label %if.then8, label %if.end9, !dbg !5053

if.then8:                                         ; preds = %if.end6
  %22 = load ptr, ptr %args.addr, align 8, !dbg !5054, !tbaa !1228
  call void @diff_sites_destroy(ptr noundef %22), !dbg !5055
  br label %if.end9, !dbg !5055

if.end9:                                          ; preds = %if.then8, %if.end6
  %23 = load ptr, ptr %args.addr, align 8, !dbg !5056, !tbaa !1228
  %hwe_prob = getelementptr inbounds %struct.args_t, ptr %23, i32 0, i32 40, !dbg !5057
  %24 = load ptr, ptr %hwe_prob, align 8, !dbg !5057, !tbaa !2823
  call void @free(ptr noundef %24) #14, !dbg !5058
  %25 = load ptr, ptr %args.addr, align 8, !dbg !5059, !tbaa !1228
  %cwd = getelementptr inbounds %struct.args_t, ptr %25, i32 0, i32 3, !dbg !5060
  %26 = load ptr, ptr %cwd, align 8, !dbg !5060, !tbaa !1825
  call void @free(ptr noundef %26) #14, !dbg !5061
  %27 = load ptr, ptr %args.addr, align 8, !dbg !5062, !tbaa !1228
  %qry_arr = getelementptr inbounds %struct.args_t, ptr %27, i32 0, i32 33, !dbg !5063
  %28 = load ptr, ptr %qry_arr, align 8, !dbg !5063, !tbaa !3155
  call void @free(ptr noundef %28) #14, !dbg !5064
  %29 = load ptr, ptr %args.addr, align 8, !dbg !5065, !tbaa !1228
  %gt_hdr = getelementptr inbounds %struct.args_t, ptr %29, i32 0, i32 1, !dbg !5067
  %30 = load ptr, ptr %gt_hdr, align 8, !dbg !5067, !tbaa !2120
  %tobool10 = icmp ne ptr %30, null, !dbg !5065
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5068

if.then11:                                        ; preds = %if.end9
  %31 = load ptr, ptr %args.addr, align 8, !dbg !5069, !tbaa !1228
  %gt_arr = getelementptr inbounds %struct.args_t, ptr %31, i32 0, i32 34, !dbg !5070
  %32 = load ptr, ptr %gt_arr, align 8, !dbg !5070, !tbaa !3159
  call void @free(ptr noundef %32) #14, !dbg !5071
  br label %if.end12, !dbg !5071

if.end12:                                         ; preds = %if.then11, %if.end9
  %33 = load ptr, ptr %args.addr, align 8, !dbg !5072, !tbaa !1228
  %pdiff = getelementptr inbounds %struct.args_t, ptr %33, i32 0, i32 26, !dbg !5073
  %34 = load ptr, ptr %pdiff, align 8, !dbg !5073, !tbaa !2628
  call void @free(ptr noundef %34) #14, !dbg !5074
  %35 = load ptr, ptr %args.addr, align 8, !dbg !5075, !tbaa !1228
  %ndiff = getelementptr inbounds %struct.args_t, ptr %35, i32 0, i32 29, !dbg !5076
  %36 = load ptr, ptr %ndiff, align 8, !dbg !5076, !tbaa !2795
  call void @free(ptr noundef %36) #14, !dbg !5077
  %37 = load ptr, ptr %args.addr, align 8, !dbg !5078, !tbaa !1228
  %ncnt = getelementptr inbounds %struct.args_t, ptr %37, i32 0, i32 30, !dbg !5079
  %38 = load ptr, ptr %ncnt, align 8, !dbg !5079, !tbaa !2802
  call void @free(ptr noundef %38) #14, !dbg !5080
  %39 = load ptr, ptr %args.addr, align 8, !dbg !5081, !tbaa !1228
  %qry_smpl = getelementptr inbounds %struct.args_t, ptr %39, i32 0, i32 24, !dbg !5082
  %40 = load ptr, ptr %qry_smpl, align 8, !dbg !5082, !tbaa !2562
  call void @free(ptr noundef %40) #14, !dbg !5083
  %41 = load ptr, ptr %args.addr, align 8, !dbg !5084, !tbaa !1228
  %gt_smpl = getelementptr inbounds %struct.args_t, ptr %41, i32 0, i32 25, !dbg !5086
  %42 = load ptr, ptr %gt_smpl, align 8, !dbg !5086, !tbaa !2566
  %43 = load ptr, ptr %args.addr, align 8, !dbg !5087, !tbaa !1228
  %qry_smpl13 = getelementptr inbounds %struct.args_t, ptr %43, i32 0, i32 24, !dbg !5088
  %44 = load ptr, ptr %qry_smpl13, align 8, !dbg !5088, !tbaa !2562
  %cmp14 = icmp ne ptr %42, %44, !dbg !5089
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !5090

if.then15:                                        ; preds = %if.end12
  %45 = load ptr, ptr %args.addr, align 8, !dbg !5091, !tbaa !1228
  %gt_smpl16 = getelementptr inbounds %struct.args_t, ptr %45, i32 0, i32 25, !dbg !5092
  %46 = load ptr, ptr %gt_smpl16, align 8, !dbg !5092, !tbaa !2566
  call void @free(ptr noundef %46) #14, !dbg !5093
  br label %if.end17, !dbg !5093

if.end17:                                         ; preds = %if.then15, %if.end12
  %47 = load ptr, ptr %args.addr, align 8, !dbg !5094, !tbaa !1228
  %pairs = getelementptr inbounds %struct.args_t, ptr %47, i32 0, i32 39, !dbg !5095
  %48 = load ptr, ptr %pairs, align 8, !dbg !5095, !tbaa !2341
  call void @free(ptr noundef %48) #14, !dbg !5096
  %49 = load ptr, ptr %args.addr, align 8, !dbg !5097, !tbaa !1228
  %files = getelementptr inbounds %struct.args_t, ptr %49, i32 0, i32 0, !dbg !5098
  %50 = load ptr, ptr %files, align 8, !dbg !5098, !tbaa !1720
  call void @bcf_sr_destroy(ptr noundef %50), !dbg !5099
  ret void, !dbg !5100
}

; Function Attrs: nounwind allocsize(0)
declare !dbg !5101 noalias ptr @malloc(i64 noundef) #8

; Function Attrs: nounwind
declare !dbg !5104 ptr @getcwd(ptr noundef, i64 noundef) #3

; Function Attrs: nounwind allocsize(1)
declare !dbg !5107 ptr @realloc(ptr noundef, i64 noundef) #9

; Function Attrs: noreturn
declare !dbg !5110 void @bcftools_exit(i32 noundef) #4

declare !dbg !5114 void @hts_srand48(i64 noundef) #5

declare !dbg !5118 ptr @bcf_sr_init() #5

declare !dbg !5121 i32 @bcf_sr_set_opt(ptr noundef, i32 noundef, ...) #5

declare !dbg !5125 i32 @bcf_sr_set_regions(ptr noundef, ptr noundef, i32 noundef) #5

declare !dbg !5128 i32 @bcf_sr_set_targets(ptr noundef, ptr noundef, i32 noundef, i32 noundef) #5

declare !dbg !5131 i32 @bcf_sr_add_reader(ptr noundef, ptr noundef) #5

declare !dbg !5134 ptr @bcf_sr_strerror(i32 noundef) #5

; Function Attrs: nounwind willreturn memory(read)
declare !dbg !5137 i32 @strcmp(ptr noundef, ptr noundef) #6

declare !dbg !5138 i32 @bcf_hdr_id2int(ptr noundef, i32 noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal void @init_samples(ptr noundef %list, i32 noundef %list_is_file, ptr noundef %smpl, ptr noundef %nsmpl, ptr noundef %hdr, ptr noundef %vcf_fname) #0 !dbg !5143 {
entry:
  %list.addr = alloca ptr, align 8
  %list_is_file.addr = alloca i32, align 4
  %smpl.addr = alloca ptr, align 8
  %nsmpl.addr = alloca ptr, align 8
  %hdr.addr = alloca ptr, align 8
  %vcf_fname.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %idx = alloca i32, align 4
  store ptr %list, ptr %list.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %list.addr, metadata !5148, metadata !DIExpression()), !dbg !5160
  store i32 %list_is_file, ptr %list_is_file.addr, align 4, !tbaa !1223
  tail call void @llvm.dbg.declare(metadata ptr %list_is_file.addr, metadata !5149, metadata !DIExpression()), !dbg !5161
  store ptr %smpl, ptr %smpl.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %smpl.addr, metadata !5150, metadata !DIExpression()), !dbg !5162
  store ptr %nsmpl, ptr %nsmpl.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %nsmpl.addr, metadata !5151, metadata !DIExpression()), !dbg !5163
  store ptr %hdr, ptr %hdr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %hdr.addr, metadata !5152, metadata !DIExpression()), !dbg !5164
  store ptr %vcf_fname, ptr %vcf_fname.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %vcf_fname.addr, metadata !5153, metadata !DIExpression()), !dbg !5165
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #14, !dbg !5166
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !5154, metadata !DIExpression()), !dbg !5167
  %0 = load ptr, ptr %list.addr, align 8, !dbg !5168, !tbaa !1228
  %call = call i32 @strcmp(ptr noundef %0, ptr noundef @.str.44) #17, !dbg !5170
  %tobool = icmp ne i32 %call, 0, !dbg !5170
  br i1 %tobool, label %if.end, label %if.then, !dbg !5171

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %hdr.addr, align 8, !dbg !5172, !tbaa !1228
  %n = getelementptr inbounds %struct.bcf_hdr_t, ptr %1, i32 0, i32 0, !dbg !5172
  %arrayidx = getelementptr [3 x i32], ptr %n, i64 0, i64 2, !dbg !5172
  %2 = load i32, ptr %arrayidx, align 8, !dbg !5172, !tbaa !1223
  %3 = load ptr, ptr %nsmpl.addr, align 8, !dbg !5174, !tbaa !1228
  store i32 %2, ptr %3, align 4, !dbg !5175, !tbaa !1223
  %4 = load ptr, ptr %nsmpl.addr, align 8, !dbg !5176, !tbaa !1228
  %5 = load i32, ptr %4, align 4, !dbg !5177, !tbaa !1223
  %conv = sext i32 %5 to i64, !dbg !5178
  %mul = mul i64 4, %conv, !dbg !5179
  %call1 = call noalias ptr @malloc(i64 noundef %mul) #18, !dbg !5180
  %6 = load ptr, ptr %smpl.addr, align 8, !dbg !5181, !tbaa !1228
  store ptr %call1, ptr %6, align 8, !dbg !5182, !tbaa !1228
  store i32 0, ptr %i, align 4, !dbg !5183, !tbaa !1223
  br label %for.cond, !dbg !5185

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, ptr %i, align 4, !dbg !5186, !tbaa !1223
  %8 = load ptr, ptr %nsmpl.addr, align 8, !dbg !5188, !tbaa !1228
  %9 = load i32, ptr %8, align 4, !dbg !5189, !tbaa !1223
  %cmp = icmp slt i32 %7, %9, !dbg !5190
  br i1 %cmp, label %for.body, label %for.end, !dbg !5191

for.body:                                         ; preds = %for.cond
  %10 = load i32, ptr %i, align 4, !dbg !5192, !tbaa !1223
  %11 = load ptr, ptr %smpl.addr, align 8, !dbg !5193, !tbaa !1228
  %12 = load ptr, ptr %11, align 8, !dbg !5194, !tbaa !1228
  %13 = load i32, ptr %i, align 4, !dbg !5195, !tbaa !1223
  %idxprom = sext i32 %13 to i64, !dbg !5196
  %arrayidx3 = getelementptr i32, ptr %12, i64 %idxprom, !dbg !5196
  store i32 %10, ptr %arrayidx3, align 4, !dbg !5197, !tbaa !1223
  br label %for.inc, !dbg !5196

for.inc:                                          ; preds = %for.body
  %14 = load i32, ptr %i, align 4, !dbg !5198, !tbaa !1223
  %inc = add i32 %14, 1, !dbg !5198
  store i32 %inc, ptr %i, align 4, !dbg !5198, !tbaa !1223
  br label %for.cond, !dbg !5199, !llvm.loop !5200

for.end:                                          ; preds = %for.cond
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5202

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #14, !dbg !5203
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !5155, metadata !DIExpression()), !dbg !5204
  %15 = load ptr, ptr %list.addr, align 8, !dbg !5205, !tbaa !1228
  %16 = load i32, ptr %list_is_file.addr, align 4, !dbg !5206, !tbaa !1223
  %17 = load ptr, ptr %nsmpl.addr, align 8, !dbg !5207, !tbaa !1228
  %call4 = call ptr @hts_readlist(ptr noundef %15, i32 noundef %16, ptr noundef %17), !dbg !5208
  store ptr %call4, ptr %tmp, align 8, !dbg !5204, !tbaa !1228
  %18 = load ptr, ptr %tmp, align 8, !dbg !5209, !tbaa !1228
  %tobool5 = icmp ne ptr %18, null, !dbg !5209
  br i1 %tobool5, label %lor.lhs.false, label %if.then7, !dbg !5211

lor.lhs.false:                                    ; preds = %if.end
  %19 = load ptr, ptr %nsmpl.addr, align 8, !dbg !5212, !tbaa !1228
  %20 = load i32, ptr %19, align 4, !dbg !5213, !tbaa !1223
  %tobool6 = icmp ne i32 %20, 0, !dbg !5213
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !5214

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  %21 = load ptr, ptr %list.addr, align 8, !dbg !5215, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.95, ptr noundef %21) #16, !dbg !5216
  unreachable, !dbg !5216

if.end8:                                          ; preds = %lor.lhs.false
  %22 = load ptr, ptr %nsmpl.addr, align 8, !dbg !5217, !tbaa !1228
  %23 = load i32, ptr %22, align 4, !dbg !5218, !tbaa !1223
  %conv9 = sext i32 %23 to i64, !dbg !5219
  %mul10 = mul i64 4, %conv9, !dbg !5220
  %call11 = call noalias ptr @malloc(i64 noundef %mul10) #18, !dbg !5221
  %24 = load ptr, ptr %smpl.addr, align 8, !dbg !5222, !tbaa !1228
  store ptr %call11, ptr %24, align 8, !dbg !5223, !tbaa !1228
  store i32 0, ptr %i, align 4, !dbg !5224, !tbaa !1223
  br label %for.cond12, !dbg !5225

for.cond12:                                       ; preds = %for.inc29, %if.end8
  %25 = load i32, ptr %i, align 4, !dbg !5226, !tbaa !1223
  %26 = load ptr, ptr %nsmpl.addr, align 8, !dbg !5227, !tbaa !1228
  %27 = load i32, ptr %26, align 4, !dbg !5228, !tbaa !1223
  %cmp13 = icmp slt i32 %25, %27, !dbg !5229
  br i1 %cmp13, label %for.body15, label %for.end31, !dbg !5230

for.body15:                                       ; preds = %for.cond12
  call void @llvm.lifetime.start.p0(i64 4, ptr %idx) #14, !dbg !5231
  tail call void @llvm.dbg.declare(metadata ptr %idx, metadata !5156, metadata !DIExpression()), !dbg !5232
  %28 = load ptr, ptr %hdr.addr, align 8, !dbg !5233, !tbaa !1228
  %29 = load ptr, ptr %tmp, align 8, !dbg !5234, !tbaa !1228
  %30 = load i32, ptr %i, align 4, !dbg !5235, !tbaa !1223
  %idxprom16 = sext i32 %30 to i64, !dbg !5234
  %arrayidx17 = getelementptr ptr, ptr %29, i64 %idxprom16, !dbg !5234
  %31 = load ptr, ptr %arrayidx17, align 8, !dbg !5234, !tbaa !1228
  %call18 = call i32 @bcf_hdr_id2int(ptr noundef %28, i32 noundef 2, ptr noundef %31), !dbg !5236
  store i32 %call18, ptr %idx, align 4, !dbg !5232, !tbaa !1223
  %32 = load i32, ptr %idx, align 4, !dbg !5237, !tbaa !1223
  %cmp19 = icmp slt i32 %32, 0, !dbg !5239
  br i1 %cmp19, label %if.then21, label %if.end24, !dbg !5240

if.then21:                                        ; preds = %for.body15
  %33 = load ptr, ptr %vcf_fname.addr, align 8, !dbg !5241, !tbaa !1228
  %34 = load ptr, ptr %tmp, align 8, !dbg !5242, !tbaa !1228
  %35 = load i32, ptr %i, align 4, !dbg !5243, !tbaa !1223
  %idxprom22 = sext i32 %35 to i64, !dbg !5242
  %arrayidx23 = getelementptr ptr, ptr %34, i64 %idxprom22, !dbg !5242
  %36 = load ptr, ptr %arrayidx23, align 8, !dbg !5242, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.97, ptr noundef %33, ptr noundef %36) #16, !dbg !5244
  unreachable, !dbg !5244

if.end24:                                         ; preds = %for.body15
  %37 = load i32, ptr %idx, align 4, !dbg !5245, !tbaa !1223
  %38 = load ptr, ptr %smpl.addr, align 8, !dbg !5246, !tbaa !1228
  %39 = load ptr, ptr %38, align 8, !dbg !5247, !tbaa !1228
  %40 = load i32, ptr %i, align 4, !dbg !5248, !tbaa !1223
  %idxprom25 = sext i32 %40 to i64, !dbg !5249
  %arrayidx26 = getelementptr i32, ptr %39, i64 %idxprom25, !dbg !5249
  store i32 %37, ptr %arrayidx26, align 4, !dbg !5250, !tbaa !1223
  %41 = load ptr, ptr %tmp, align 8, !dbg !5251, !tbaa !1228
  %42 = load i32, ptr %i, align 4, !dbg !5252, !tbaa !1223
  %idxprom27 = sext i32 %42 to i64, !dbg !5251
  %arrayidx28 = getelementptr ptr, ptr %41, i64 %idxprom27, !dbg !5251
  %43 = load ptr, ptr %arrayidx28, align 8, !dbg !5251, !tbaa !1228
  call void @free(ptr noundef %43) #14, !dbg !5253
  call void @llvm.lifetime.end.p0(i64 4, ptr %idx) #14, !dbg !5254
  br label %for.inc29, !dbg !5255

for.inc29:                                        ; preds = %if.end24
  %44 = load i32, ptr %i, align 4, !dbg !5256, !tbaa !1223
  %inc30 = add i32 %44, 1, !dbg !5256
  store i32 %inc30, ptr %i, align 4, !dbg !5256, !tbaa !1223
  br label %for.cond12, !dbg !5257, !llvm.loop !5258

for.end31:                                        ; preds = %for.cond12
  %45 = load ptr, ptr %tmp, align 8, !dbg !5260, !tbaa !1228
  call void @free(ptr noundef %45) #14, !dbg !5261
  %46 = load ptr, ptr %smpl.addr, align 8, !dbg !5262, !tbaa !1228
  %47 = load ptr, ptr %46, align 8, !dbg !5263, !tbaa !1228
  %48 = load ptr, ptr %nsmpl.addr, align 8, !dbg !5264, !tbaa !1228
  %49 = load i32, ptr %48, align 4, !dbg !5265, !tbaa !1223
  %conv32 = sext i32 %49 to i64, !dbg !5265
  call void @qsort(ptr noundef %47, i64 noundef %conv32, i64 noundef 4, ptr noundef @cmp_int), !dbg !5266
  store i32 1, ptr %i, align 4, !dbg !5267, !tbaa !1223
  br label %for.cond33, !dbg !5269

for.cond33:                                       ; preds = %for.inc49, %for.end31
  %50 = load i32, ptr %i, align 4, !dbg !5270, !tbaa !1223
  %51 = load ptr, ptr %nsmpl.addr, align 8, !dbg !5272, !tbaa !1228
  %52 = load i32, ptr %51, align 4, !dbg !5273, !tbaa !1223
  %cmp34 = icmp slt i32 %50, %52, !dbg !5274
  br i1 %cmp34, label %for.body36, label %for.end51, !dbg !5275

for.body36:                                       ; preds = %for.cond33
  %53 = load ptr, ptr %smpl.addr, align 8, !dbg !5276, !tbaa !1228
  %54 = load ptr, ptr %53, align 8, !dbg !5278, !tbaa !1228
  %55 = load i32, ptr %i, align 4, !dbg !5279, !tbaa !1223
  %sub = sub i32 %55, 1, !dbg !5280
  %idxprom37 = sext i32 %sub to i64, !dbg !5281
  %arrayidx38 = getelementptr i32, ptr %54, i64 %idxprom37, !dbg !5281
  %56 = load i32, ptr %arrayidx38, align 4, !dbg !5281, !tbaa !1223
  %57 = load ptr, ptr %smpl.addr, align 8, !dbg !5282, !tbaa !1228
  %58 = load ptr, ptr %57, align 8, !dbg !5283, !tbaa !1228
  %59 = load i32, ptr %i, align 4, !dbg !5284, !tbaa !1223
  %idxprom39 = sext i32 %59 to i64, !dbg !5285
  %arrayidx40 = getelementptr i32, ptr %58, i64 %idxprom39, !dbg !5285
  %60 = load i32, ptr %arrayidx40, align 4, !dbg !5285, !tbaa !1223
  %cmp41 = icmp eq i32 %56, %60, !dbg !5286
  br i1 %cmp41, label %if.then43, label %if.end48, !dbg !5287

if.then43:                                        ; preds = %for.body36
  %61 = load ptr, ptr %hdr.addr, align 8, !dbg !5288, !tbaa !1228
  %samples = getelementptr inbounds %struct.bcf_hdr_t, ptr %61, i32 0, i32 3, !dbg !5289
  %62 = load ptr, ptr %samples, align 8, !dbg !5289, !tbaa !4192
  %63 = load ptr, ptr %smpl.addr, align 8, !dbg !5290, !tbaa !1228
  %64 = load ptr, ptr %63, align 8, !dbg !5291, !tbaa !1228
  %65 = load i32, ptr %i, align 4, !dbg !5292, !tbaa !1223
  %idxprom44 = sext i32 %65 to i64, !dbg !5293
  %arrayidx45 = getelementptr i32, ptr %64, i64 %idxprom44, !dbg !5293
  %66 = load i32, ptr %arrayidx45, align 4, !dbg !5293, !tbaa !1223
  %idxprom46 = sext i32 %66 to i64, !dbg !5288
  %arrayidx47 = getelementptr ptr, ptr %62, i64 %idxprom46, !dbg !5288
  %67 = load ptr, ptr %arrayidx47, align 8, !dbg !5288, !tbaa !1228
  %68 = load ptr, ptr %list.addr, align 8, !dbg !5294, !tbaa !1228
  call void (ptr, ...) @error(ptr noundef @.str.101, ptr noundef %67, ptr noundef %68) #16, !dbg !5295
  unreachable, !dbg !5295

if.end48:                                         ; preds = %for.body36
  br label %for.inc49, !dbg !5296

for.inc49:                                        ; preds = %if.end48
  %69 = load i32, ptr %i, align 4, !dbg !5297, !tbaa !1223
  %inc50 = add i32 %69, 1, !dbg !5297
  store i32 %inc50, ptr %i, align 4, !dbg !5297, !tbaa !1223
  br label %for.cond33, !dbg !5298, !llvm.loop !5299

for.end51:                                        ; preds = %for.cond33
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #14, !dbg !5301
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5301
  br label %cleanup, !dbg !5301

cleanup:                                          ; preds = %for.end51, %for.end
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #14, !dbg !5301
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !5301

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind willreturn memory(none)
declare !dbg !5302 ptr @__ctype_b_loc() #10

declare !dbg !5308 void @qsort(ptr noundef, i64 noundef, i64 noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal i32 @cmp_pair(ptr noundef %_a, ptr noundef %_b) #0 !dbg !5317 {
entry:
  %retval = alloca i32, align 4
  %_a.addr = alloca ptr, align 8
  %_b.addr = alloca ptr, align 8
  %a = alloca ptr, align 8
  %b = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %_a, ptr %_a.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %_a.addr, metadata !5319, metadata !DIExpression()), !dbg !5323
  store ptr %_b, ptr %_b.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %_b.addr, metadata !5320, metadata !DIExpression()), !dbg !5324
  call void @llvm.lifetime.start.p0(i64 8, ptr %a) #14, !dbg !5325
  tail call void @llvm.dbg.declare(metadata ptr %a, metadata !5321, metadata !DIExpression()), !dbg !5326
  %0 = load ptr, ptr %_a.addr, align 8, !dbg !5327, !tbaa !1228
  store ptr %0, ptr %a, align 8, !dbg !5326, !tbaa !1228
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #14, !dbg !5328
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !5322, metadata !DIExpression()), !dbg !5329
  %1 = load ptr, ptr %_b.addr, align 8, !dbg !5330, !tbaa !1228
  store ptr %1, ptr %b, align 8, !dbg !5329, !tbaa !1228
  %2 = load ptr, ptr %a, align 8, !dbg !5331, !tbaa !1228
  %iqry = getelementptr inbounds %struct.pair_t, ptr %2, i32 0, i32 0, !dbg !5333
  %3 = load i32, ptr %iqry, align 4, !dbg !5333, !tbaa !2367
  %4 = load ptr, ptr %b, align 8, !dbg !5334, !tbaa !1228
  %iqry1 = getelementptr inbounds %struct.pair_t, ptr %4, i32 0, i32 0, !dbg !5335
  %5 = load i32, ptr %iqry1, align 4, !dbg !5335, !tbaa !2367
  %cmp = icmp slt i32 %3, %5, !dbg !5336
  br i1 %cmp, label %if.then, label %if.end, !dbg !5337

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !5338
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5338

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %a, align 8, !dbg !5339, !tbaa !1228
  %iqry2 = getelementptr inbounds %struct.pair_t, ptr %6, i32 0, i32 0, !dbg !5341
  %7 = load i32, ptr %iqry2, align 4, !dbg !5341, !tbaa !2367
  %8 = load ptr, ptr %b, align 8, !dbg !5342, !tbaa !1228
  %iqry3 = getelementptr inbounds %struct.pair_t, ptr %8, i32 0, i32 0, !dbg !5343
  %9 = load i32, ptr %iqry3, align 4, !dbg !5343, !tbaa !2367
  %cmp4 = icmp sgt i32 %7, %9, !dbg !5344
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5345

if.then5:                                         ; preds = %if.end
  store i32 1, ptr %retval, align 4, !dbg !5346
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5346

if.end6:                                          ; preds = %if.end
  %10 = load ptr, ptr %a, align 8, !dbg !5347, !tbaa !1228
  %igt = getelementptr inbounds %struct.pair_t, ptr %10, i32 0, i32 1, !dbg !5349
  %11 = load i32, ptr %igt, align 4, !dbg !5349, !tbaa !2385
  %12 = load ptr, ptr %b, align 8, !dbg !5350, !tbaa !1228
  %igt7 = getelementptr inbounds %struct.pair_t, ptr %12, i32 0, i32 1, !dbg !5351
  %13 = load i32, ptr %igt7, align 4, !dbg !5351, !tbaa !2385
  %cmp8 = icmp slt i32 %11, %13, !dbg !5352
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5353

if.then9:                                         ; preds = %if.end6
  store i32 -1, ptr %retval, align 4, !dbg !5354
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5354

if.end10:                                         ; preds = %if.end6
  %14 = load ptr, ptr %a, align 8, !dbg !5355, !tbaa !1228
  %igt11 = getelementptr inbounds %struct.pair_t, ptr %14, i32 0, i32 1, !dbg !5357
  %15 = load i32, ptr %igt11, align 4, !dbg !5357, !tbaa !2385
  %16 = load ptr, ptr %b, align 8, !dbg !5358, !tbaa !1228
  %igt12 = getelementptr inbounds %struct.pair_t, ptr %16, i32 0, i32 1, !dbg !5359
  %17 = load i32, ptr %igt12, align 4, !dbg !5359, !tbaa !2385
  %cmp13 = icmp sgt i32 %15, %17, !dbg !5360
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5361

if.then14:                                        ; preds = %if.end10
  store i32 1, ptr %retval, align 4, !dbg !5362
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5362

if.end15:                                         ; preds = %if.end10
  store i32 0, ptr %retval, align 4, !dbg !5363
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5363

cleanup:                                          ; preds = %if.end15, %if.then14, %if.then9, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #14, !dbg !5364
  call void @llvm.lifetime.end.p0(i64 8, ptr %a) #14, !dbg !5364
  %18 = load i32, ptr %retval, align 4, !dbg !5364
  ret i32 %18, !dbg !5364
}

; Function Attrs: nounwind
declare !dbg !5365 double @log(double noundef) #3

; Function Attrs: nounwind
declare !dbg !5369 double @pow(double noundef, double noundef) #3

; Function Attrs: nounwind uwtable
define internal void @diff_sites_init(ptr noundef %args) #0 !dbg !5372 {
entry:
  %args.addr = alloca ptr, align 8
  %nsites = alloca i32, align 4
  %n = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp29 = alloca ptr, align 8
  %tmp31 = alloca ptr, align 8
  %tmp33 = alloca ptr, align 8
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !5374, metadata !DIExpression()), !dbg !5386
  call void @llvm.lifetime.start.p0(i64 4, ptr %nsites) #14, !dbg !5387
  tail call void @llvm.dbg.declare(metadata ptr %nsites, metadata !5375, metadata !DIExpression()), !dbg !5388
  %0 = load ptr, ptr %args.addr, align 8, !dbg !5389, !tbaa !1228
  %distinctive_sites = getelementptr inbounds %struct.args_t, ptr %0, i32 0, i32 60, !dbg !5390
  %1 = load double, ptr %distinctive_sites, align 8, !dbg !5390, !tbaa !1442
  %cmp = fcmp ole double %1, 1.000000e+00, !dbg !5391
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5389

cond.true:                                        ; preds = %entry
  %2 = load ptr, ptr %args.addr, align 8, !dbg !5392, !tbaa !1228
  %npairs = getelementptr inbounds %struct.args_t, ptr %2, i32 0, i32 32, !dbg !5393
  %3 = load i32, ptr %npairs, align 4, !dbg !5393, !tbaa !2334
  %conv = uitofp i32 %3 to double, !dbg !5392
  %4 = load ptr, ptr %args.addr, align 8, !dbg !5394, !tbaa !1228
  %distinctive_sites1 = getelementptr inbounds %struct.args_t, ptr %4, i32 0, i32 60, !dbg !5395
  %5 = load double, ptr %distinctive_sites1, align 8, !dbg !5395, !tbaa !1442
  %mul = fmul double %conv, %5, !dbg !5396
  br label %cond.end, !dbg !5389

cond.false:                                       ; preds = %entry
  %6 = load ptr, ptr %args.addr, align 8, !dbg !5397, !tbaa !1228
  %distinctive_sites2 = getelementptr inbounds %struct.args_t, ptr %6, i32 0, i32 60, !dbg !5398
  %7 = load double, ptr %distinctive_sites2, align 8, !dbg !5398, !tbaa !1442
  br label %cond.end, !dbg !5389

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %mul, %cond.true ], [ %7, %cond.false ], !dbg !5389
  %conv3 = fptosi double %cond to i32, !dbg !5389
  store i32 %conv3, ptr %nsites, align 4, !dbg !5388, !tbaa !1223
  %8 = load i32, ptr %nsites, align 4, !dbg !5399, !tbaa !1223
  %cmp4 = icmp sle i32 %8, 0, !dbg !5401
  br i1 %cmp4, label %if.then, label %if.end, !dbg !5402

if.then:                                          ; preds = %cond.end
  %9 = load i32, ptr %nsites, align 4, !dbg !5403, !tbaa !1223
  call void (ptr, ...) @error(ptr noundef @.str.102, i32 noundef %9) #16, !dbg !5404
  unreachable, !dbg !5404

if.end:                                           ; preds = %cond.end
  %10 = load i32, ptr %nsites, align 4, !dbg !5405, !tbaa !1223
  %11 = load ptr, ptr %args.addr, align 8, !dbg !5407, !tbaa !1228
  %npairs6 = getelementptr inbounds %struct.args_t, ptr %11, i32 0, i32 32, !dbg !5408
  %12 = load i32, ptr %npairs6, align 4, !dbg !5408, !tbaa !2334
  %cmp7 = icmp ugt i32 %10, %12, !dbg !5409
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !5410

if.then9:                                         ; preds = %if.end
  %13 = load ptr, ptr @bcftools_stderr, align 8, !dbg !5411, !tbaa !1228
  %call = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %13, ptr noundef @.str.103), !dbg !5413
  %14 = load ptr, ptr %args.addr, align 8, !dbg !5414, !tbaa !1228
  %npairs10 = getelementptr inbounds %struct.args_t, ptr %14, i32 0, i32 32, !dbg !5415
  %15 = load i32, ptr %npairs10, align 4, !dbg !5415, !tbaa !2334
  store i32 %15, ptr %nsites, align 4, !dbg !5416, !tbaa !1223
  %16 = load ptr, ptr %args.addr, align 8, !dbg !5417, !tbaa !1228
  %npairs11 = getelementptr inbounds %struct.args_t, ptr %16, i32 0, i32 32, !dbg !5418
  %17 = load i32, ptr %npairs11, align 4, !dbg !5418, !tbaa !2334
  %add = add i32 %17, 1, !dbg !5419
  %conv12 = uitofp i32 %add to double, !dbg !5417
  %18 = load ptr, ptr %args.addr, align 8, !dbg !5420, !tbaa !1228
  %distinctive_sites13 = getelementptr inbounds %struct.args_t, ptr %18, i32 0, i32 60, !dbg !5421
  store double %conv12, ptr %distinctive_sites13, align 8, !dbg !5422, !tbaa !1442
  br label %if.end16, !dbg !5423

if.else:                                          ; preds = %if.end
  %19 = load i32, ptr %nsites, align 4, !dbg !5424, !tbaa !1223
  %conv14 = sitofp i32 %19 to double, !dbg !5424
  %20 = load ptr, ptr %args.addr, align 8, !dbg !5425, !tbaa !1228
  %distinctive_sites15 = getelementptr inbounds %struct.args_t, ptr %20, i32 0, i32 60, !dbg !5426
  store double %conv14, ptr %distinctive_sites15, align 8, !dbg !5427, !tbaa !1442
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then9
  %21 = load ptr, ptr %args.addr, align 8, !dbg !5428, !tbaa !1228
  %npairs17 = getelementptr inbounds %struct.args_t, ptr %21, i32 0, i32 32, !dbg !5429
  %22 = load i32, ptr %npairs17, align 4, !dbg !5429, !tbaa !2334
  %conv18 = zext i32 %22 to i64, !dbg !5428
  %call19 = call ptr @kbs_init(i64 noundef %conv18), !dbg !5430
  %23 = load ptr, ptr %args.addr, align 8, !dbg !5431, !tbaa !1228
  %kbs_diff = getelementptr inbounds %struct.args_t, ptr %23, i32 0, i32 61, !dbg !5432
  store ptr %call19, ptr %kbs_diff, align 8, !dbg !5433, !tbaa !3308
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #14, !dbg !5434
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !5376, metadata !DIExpression()), !dbg !5435
  %24 = load ptr, ptr %args.addr, align 8, !dbg !5436, !tbaa !1228
  %npairs20 = getelementptr inbounds %struct.args_t, ptr %24, i32 0, i32 32, !dbg !5437
  %25 = load i32, ptr %npairs20, align 4, !dbg !5437, !tbaa !2334
  %conv21 = zext i32 %25 to i64, !dbg !5436
  %add22 = add i64 %conv21, 64, !dbg !5438
  %sub = sub i64 %add22, 1, !dbg !5439
  %div = udiv i64 %sub, 64, !dbg !5440
  store i64 %div, ptr %n, align 8, !dbg !5435, !tbaa !1818
  %26 = load i64, ptr %n, align 8, !dbg !5441, !tbaa !1818
  %sub23 = sub i64 %26, 1, !dbg !5442
  %mul24 = mul i64 %sub23, 8, !dbg !5443
  %add25 = add i64 24, %mul24, !dbg !5444
  %27 = load ptr, ptr %args.addr, align 8, !dbg !5445, !tbaa !1228
  %diff_sites_size = getelementptr inbounds %struct.args_t, ptr %27, i32 0, i32 62, !dbg !5446
  store i64 %add25, ptr %diff_sites_size, align 8, !dbg !5447, !tbaa !5448
  %call26 = call ptr @extsort_alloc(), !dbg !5449
  %28 = load ptr, ptr %args.addr, align 8, !dbg !5450, !tbaa !1228
  %es = getelementptr inbounds %struct.args_t, ptr %28, i32 0, i32 63, !dbg !5451
  store ptr %call26, ptr %es, align 8, !dbg !5452, !tbaa !4902
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #14, !dbg !5453
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !5377, metadata !DIExpression()), !dbg !5453
  %29 = load ptr, ptr %args.addr, align 8, !dbg !5453, !tbaa !1228
  %diff_sites_size27 = getelementptr inbounds %struct.args_t, ptr %29, i32 0, i32 62, !dbg !5453
  %30 = load i64, ptr %diff_sites_size27, align 8, !dbg !5453, !tbaa !5448
  store i64 %30, ptr %tmp, align 8, !dbg !5453, !tbaa !1818
  %31 = load ptr, ptr %args.addr, align 8, !dbg !5453, !tbaa !1228
  %es28 = getelementptr inbounds %struct.args_t, ptr %31, i32 0, i32 63, !dbg !5453
  %32 = load ptr, ptr %es28, align 8, !dbg !5453, !tbaa !4902
  call void @extsort_set(ptr noundef %32, i32 noundef 0, ptr noundef %tmp), !dbg !5453
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #14, !dbg !5454
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp29) #14, !dbg !5455
  tail call void @llvm.dbg.declare(metadata ptr %tmp29, metadata !5379, metadata !DIExpression()), !dbg !5455
  %33 = load ptr, ptr %args.addr, align 8, !dbg !5455, !tbaa !1228
  %es_tmp_prefix = getelementptr inbounds %struct.args_t, ptr %33, i32 0, i32 64, !dbg !5455
  %34 = load ptr, ptr %es_tmp_prefix, align 8, !dbg !5455, !tbaa !1278
  store ptr %34, ptr %tmp29, align 8, !dbg !5455, !tbaa !1228
  %35 = load ptr, ptr %args.addr, align 8, !dbg !5455, !tbaa !1228
  %es30 = getelementptr inbounds %struct.args_t, ptr %35, i32 0, i32 63, !dbg !5455
  %36 = load ptr, ptr %es30, align 8, !dbg !5455, !tbaa !4902
  call void @extsort_set(ptr noundef %36, i32 noundef 1, ptr noundef %tmp29), !dbg !5455
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp29) #14, !dbg !5456
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp31) #14, !dbg !5457
  tail call void @llvm.dbg.declare(metadata ptr %tmp31, metadata !5381, metadata !DIExpression()), !dbg !5457
  %37 = load ptr, ptr %args.addr, align 8, !dbg !5457, !tbaa !1228
  %es_max_mem = getelementptr inbounds %struct.args_t, ptr %37, i32 0, i32 65, !dbg !5457
  %38 = load ptr, ptr %es_max_mem, align 8, !dbg !5457, !tbaa !1283
  store ptr %38, ptr %tmp31, align 8, !dbg !5457, !tbaa !1228
  %39 = load ptr, ptr %args.addr, align 8, !dbg !5457, !tbaa !1228
  %es32 = getelementptr inbounds %struct.args_t, ptr %39, i32 0, i32 63, !dbg !5457
  %40 = load ptr, ptr %es32, align 8, !dbg !5457, !tbaa !4902
  call void @extsort_set(ptr noundef %40, i32 noundef 2, ptr noundef %tmp31), !dbg !5457
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp31) #14, !dbg !5458
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp33) #14, !dbg !5459
  tail call void @llvm.dbg.declare(metadata ptr %tmp33, metadata !5383, metadata !DIExpression()), !dbg !5459
  store ptr @diff_sites_cmp, ptr %tmp33, align 8, !dbg !5459, !tbaa !1228
  %41 = load ptr, ptr %args.addr, align 8, !dbg !5459, !tbaa !1228
  %es34 = getelementptr inbounds %struct.args_t, ptr %41, i32 0, i32 63, !dbg !5459
  %42 = load ptr, ptr %es34, align 8, !dbg !5459, !tbaa !4902
  call void @extsort_set(ptr noundef %42, i32 noundef 3, ptr noundef %tmp33), !dbg !5459
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp33) #14, !dbg !5460
  %43 = load ptr, ptr %args.addr, align 8, !dbg !5461, !tbaa !1228
  %es35 = getelementptr inbounds %struct.args_t, ptr %43, i32 0, i32 63, !dbg !5462
  %44 = load ptr, ptr %es35, align 8, !dbg !5462, !tbaa !4902
  call void @extsort_init(ptr noundef %44), !dbg !5463
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #14, !dbg !5464
  call void @llvm.lifetime.end.p0(i64 4, ptr %nsites) #14, !dbg !5464
  ret void, !dbg !5464
}

; Function Attrs: nounwind uwtable
define internal void @print_header(ptr noundef %args, ptr noundef %fp) #0 !dbg !5465 {
entry:
  %args.addr = alloca ptr, align 8
  %fp.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !5469, metadata !DIExpression()), !dbg !5472
  store ptr %fp, ptr %fp.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %fp.addr, metadata !5470, metadata !DIExpression()), !dbg !5473
  %0 = load ptr, ptr %fp.addr, align 8, !dbg !5474, !tbaa !1228
  %call = call ptr @bcftools_version(), !dbg !5475
  %call1 = call ptr @hts_version(), !dbg !5476
  %call2 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %0, ptr noundef @.str.104, ptr noundef %call, ptr noundef %call1), !dbg !5477
  %1 = load ptr, ptr %fp.addr, align 8, !dbg !5478, !tbaa !1228
  %2 = load ptr, ptr %args.addr, align 8, !dbg !5479, !tbaa !1228
  %argv = getelementptr inbounds %struct.args_t, ptr %2, i32 0, i32 4, !dbg !5480
  %3 = load ptr, ptr %argv, align 8, !dbg !5480, !tbaa !1248
  %arrayidx = getelementptr ptr, ptr %3, i64 0, !dbg !5479
  %4 = load ptr, ptr %arrayidx, align 8, !dbg !5479, !tbaa !1228
  %call3 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef @.str.105, ptr noundef %4), !dbg !5481
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #14, !dbg !5482
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !5471, metadata !DIExpression()), !dbg !5483
  store i32 1, ptr %i, align 4, !dbg !5484, !tbaa !1223
  br label %for.cond, !dbg !5486

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, ptr %i, align 4, !dbg !5487, !tbaa !1223
  %6 = load ptr, ptr %args.addr, align 8, !dbg !5489, !tbaa !1228
  %argc = getelementptr inbounds %struct.args_t, ptr %6, i32 0, i32 12, !dbg !5490
  %7 = load i32, ptr %argc, align 8, !dbg !5490, !tbaa !1240
  %cmp = icmp slt i32 %5, %7, !dbg !5491
  br i1 %cmp, label %for.body, label %for.end, !dbg !5492

for.body:                                         ; preds = %for.cond
  %8 = load ptr, ptr %fp.addr, align 8, !dbg !5493, !tbaa !1228
  %9 = load ptr, ptr %args.addr, align 8, !dbg !5494, !tbaa !1228
  %argv4 = getelementptr inbounds %struct.args_t, ptr %9, i32 0, i32 4, !dbg !5495
  %10 = load ptr, ptr %argv4, align 8, !dbg !5495, !tbaa !1248
  %11 = load i32, ptr %i, align 4, !dbg !5496, !tbaa !1223
  %idxprom = sext i32 %11 to i64, !dbg !5494
  %arrayidx5 = getelementptr ptr, ptr %10, i64 %idxprom, !dbg !5494
  %12 = load ptr, ptr %arrayidx5, align 8, !dbg !5494, !tbaa !1228
  %call6 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef @.str.106, ptr noundef %12), !dbg !5497
  br label %for.inc, !dbg !5497

for.inc:                                          ; preds = %for.body
  %13 = load i32, ptr %i, align 4, !dbg !5498, !tbaa !1223
  %inc = add i32 %13, 1, !dbg !5498
  store i32 %inc, ptr %i, align 4, !dbg !5498, !tbaa !1223
  br label %for.cond, !dbg !5499, !llvm.loop !5500

for.end:                                          ; preds = %for.cond
  %14 = load ptr, ptr %fp.addr, align 8, !dbg !5502, !tbaa !1228
  %call7 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %14, ptr noundef @.str.107), !dbg !5503
  %15 = load ptr, ptr %fp.addr, align 8, !dbg !5504, !tbaa !1228
  %16 = load ptr, ptr %args.addr, align 8, !dbg !5505, !tbaa !1228
  %cwd = getelementptr inbounds %struct.args_t, ptr %16, i32 0, i32 3, !dbg !5506
  %17 = load ptr, ptr %cwd, align 8, !dbg !5506, !tbaa !1825
  %call8 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %15, ptr noundef @.str.108, ptr noundef %17), !dbg !5507
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #14, !dbg !5508
  ret void, !dbg !5508
}

; Function Attrs: nounwind uwtable
define internal i32 @cmp_int(ptr noundef %_a, ptr noundef %_b) #0 !dbg !5509 {
entry:
  %retval = alloca i32, align 4
  %_a.addr = alloca ptr, align 8
  %_b.addr = alloca ptr, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %_a, ptr %_a.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %_a.addr, metadata !5511, metadata !DIExpression()), !dbg !5515
  store ptr %_b, ptr %_b.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %_b.addr, metadata !5512, metadata !DIExpression()), !dbg !5516
  call void @llvm.lifetime.start.p0(i64 4, ptr %a) #14, !dbg !5517
  tail call void @llvm.dbg.declare(metadata ptr %a, metadata !5513, metadata !DIExpression()), !dbg !5518
  %0 = load ptr, ptr %_a.addr, align 8, !dbg !5519, !tbaa !1228
  %1 = load i32, ptr %0, align 4, !dbg !5520, !tbaa !1223
  store i32 %1, ptr %a, align 4, !dbg !5518, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 4, ptr %b) #14, !dbg !5521
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !5514, metadata !DIExpression()), !dbg !5522
  %2 = load ptr, ptr %_b.addr, align 8, !dbg !5523, !tbaa !1228
  %3 = load i32, ptr %2, align 4, !dbg !5524, !tbaa !1223
  store i32 %3, ptr %b, align 4, !dbg !5522, !tbaa !1223
  %4 = load i32, ptr %a, align 4, !dbg !5525, !tbaa !1223
  %5 = load i32, ptr %b, align 4, !dbg !5527, !tbaa !1223
  %cmp = icmp slt i32 %4, %5, !dbg !5528
  br i1 %cmp, label %if.then, label %if.end, !dbg !5529

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !5530
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5530

if.end:                                           ; preds = %entry
  %6 = load i32, ptr %a, align 4, !dbg !5531, !tbaa !1223
  %7 = load i32, ptr %b, align 4, !dbg !5533, !tbaa !1223
  %cmp1 = icmp sgt i32 %6, %7, !dbg !5534
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5535

if.then2:                                         ; preds = %if.end
  store i32 1, ptr %retval, align 4, !dbg !5536
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5536

if.end3:                                          ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !5537
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5537

cleanup:                                          ; preds = %if.end3, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %b) #14, !dbg !5538
  call void @llvm.lifetime.end.p0(i64 4, ptr %a) #14, !dbg !5538
  %8 = load i32, ptr %retval, align 4, !dbg !5538
  ret i32 %8, !dbg !5538
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @kbs_init(i64 noundef %ni) #11 !dbg !5539 {
entry:
  %ni.addr = alloca i64, align 8
  store i64 %ni, ptr %ni.addr, align 8, !tbaa !1818
  tail call void @llvm.dbg.declare(metadata ptr %ni.addr, metadata !5543, metadata !DIExpression()), !dbg !5544
  %0 = load i64, ptr %ni.addr, align 8, !dbg !5545, !tbaa !1818
  %call = call ptr @kbs_init2(i64 noundef %0, i32 noundef 0), !dbg !5546
  ret ptr %call, !dbg !5547
}

declare !dbg !5548 ptr @extsort_alloc() #5

declare !dbg !5551 void @extsort_set(ptr noundef, i32 noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal i32 @diff_sites_cmp(ptr noundef %aptr, ptr noundef %bptr) #0 !dbg !5555 {
entry:
  %retval = alloca i32, align 4
  %aptr.addr = alloca ptr, align 8
  %bptr.addr = alloca ptr, align 8
  %a = alloca ptr, align 8
  %b = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %aptr, ptr %aptr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %aptr.addr, metadata !5557, metadata !DIExpression()), !dbg !5561
  store ptr %bptr, ptr %bptr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %bptr.addr, metadata !5558, metadata !DIExpression()), !dbg !5562
  call void @llvm.lifetime.start.p0(i64 8, ptr %a) #14, !dbg !5563
  tail call void @llvm.dbg.declare(metadata ptr %a, metadata !5559, metadata !DIExpression()), !dbg !5564
  %0 = load ptr, ptr %aptr.addr, align 8, !dbg !5565, !tbaa !1228
  %1 = load ptr, ptr %0, align 8, !dbg !5566, !tbaa !1228
  store ptr %1, ptr %a, align 8, !dbg !5564, !tbaa !1228
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #14, !dbg !5567
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !5560, metadata !DIExpression()), !dbg !5568
  %2 = load ptr, ptr %bptr.addr, align 8, !dbg !5569, !tbaa !1228
  %3 = load ptr, ptr %2, align 8, !dbg !5570, !tbaa !1228
  store ptr %3, ptr %b, align 8, !dbg !5568, !tbaa !1228
  %4 = load ptr, ptr %a, align 8, !dbg !5571, !tbaa !1228
  %ndiff = getelementptr inbounds %struct.diff_sites_t, ptr %4, i32 0, i32 0, !dbg !5573
  %5 = load i32, ptr %ndiff, align 8, !dbg !5573, !tbaa !5574
  %6 = load ptr, ptr %b, align 8, !dbg !5576, !tbaa !1228
  %ndiff1 = getelementptr inbounds %struct.diff_sites_t, ptr %6, i32 0, i32 0, !dbg !5577
  %7 = load i32, ptr %ndiff1, align 8, !dbg !5577, !tbaa !5574
  %cmp = icmp ult i32 %5, %7, !dbg !5578
  br i1 %cmp, label %if.then, label %if.end, !dbg !5579

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !5580
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5580

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %a, align 8, !dbg !5581, !tbaa !1228
  %ndiff2 = getelementptr inbounds %struct.diff_sites_t, ptr %8, i32 0, i32 0, !dbg !5583
  %9 = load i32, ptr %ndiff2, align 8, !dbg !5583, !tbaa !5574
  %10 = load ptr, ptr %b, align 8, !dbg !5584, !tbaa !1228
  %ndiff3 = getelementptr inbounds %struct.diff_sites_t, ptr %10, i32 0, i32 0, !dbg !5585
  %11 = load i32, ptr %ndiff3, align 8, !dbg !5585, !tbaa !5574
  %cmp4 = icmp ugt i32 %9, %11, !dbg !5586
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5587

if.then5:                                         ; preds = %if.end
  store i32 -1, ptr %retval, align 4, !dbg !5588
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5588

if.end6:                                          ; preds = %if.end
  %12 = load ptr, ptr %a, align 8, !dbg !5589, !tbaa !1228
  %rand = getelementptr inbounds %struct.diff_sites_t, ptr %12, i32 0, i32 3, !dbg !5591
  %13 = load i32, ptr %rand, align 4, !dbg !5591, !tbaa !5592
  %14 = load ptr, ptr %b, align 8, !dbg !5593, !tbaa !1228
  %rand7 = getelementptr inbounds %struct.diff_sites_t, ptr %14, i32 0, i32 3, !dbg !5594
  %15 = load i32, ptr %rand7, align 4, !dbg !5594, !tbaa !5592
  %cmp8 = icmp ult i32 %13, %15, !dbg !5595
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5596

if.then9:                                         ; preds = %if.end6
  store i32 -1, ptr %retval, align 4, !dbg !5597
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5597

if.end10:                                         ; preds = %if.end6
  %16 = load ptr, ptr %a, align 8, !dbg !5598, !tbaa !1228
  %rand11 = getelementptr inbounds %struct.diff_sites_t, ptr %16, i32 0, i32 3, !dbg !5600
  %17 = load i32, ptr %rand11, align 4, !dbg !5600, !tbaa !5592
  %18 = load ptr, ptr %b, align 8, !dbg !5601, !tbaa !1228
  %rand12 = getelementptr inbounds %struct.diff_sites_t, ptr %18, i32 0, i32 3, !dbg !5602
  %19 = load i32, ptr %rand12, align 4, !dbg !5602, !tbaa !5592
  %cmp13 = icmp ugt i32 %17, %19, !dbg !5603
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5604

if.then14:                                        ; preds = %if.end10
  store i32 1, ptr %retval, align 4, !dbg !5605
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5605

if.end15:                                         ; preds = %if.end10
  store i32 0, ptr %retval, align 4, !dbg !5606
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5606

cleanup:                                          ; preds = %if.end15, %if.then14, %if.then9, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #14, !dbg !5607
  call void @llvm.lifetime.end.p0(i64 8, ptr %a) #14, !dbg !5607
  %20 = load i32, ptr %retval, align 4, !dbg !5607
  ret i32 %20, !dbg !5607
}

declare !dbg !5608 void @extsort_init(ptr noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @kbs_init2(i64 noundef %ni, i32 noundef %fill) #11 !dbg !5611 {
entry:
  %retval = alloca ptr, align 8
  %ni.addr = alloca i64, align 8
  %fill.addr = alloca i32, align 4
  %n = alloca i64, align 8
  %bs = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i64 %ni, ptr %ni.addr, align 8, !tbaa !1818
  tail call void @llvm.dbg.declare(metadata ptr %ni.addr, metadata !5615, metadata !DIExpression()), !dbg !5619
  store i32 %fill, ptr %fill.addr, align 4, !tbaa !1223
  tail call void @llvm.dbg.declare(metadata ptr %fill.addr, metadata !5616, metadata !DIExpression()), !dbg !5620
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #14, !dbg !5621
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !5617, metadata !DIExpression()), !dbg !5622
  %0 = load i64, ptr %ni.addr, align 8, !dbg !5623, !tbaa !1818
  %add = add i64 %0, 64, !dbg !5624
  %sub = sub i64 %add, 1, !dbg !5625
  %div = udiv i64 %sub, 64, !dbg !5626
  store i64 %div, ptr %n, align 8, !dbg !5622, !tbaa !1818
  call void @llvm.lifetime.start.p0(i64 8, ptr %bs) #14, !dbg !5627
  tail call void @llvm.dbg.declare(metadata ptr %bs, metadata !5618, metadata !DIExpression()), !dbg !5628
  %1 = load i64, ptr %n, align 8, !dbg !5629, !tbaa !1818
  %mul = mul i64 %1, 8, !dbg !5630
  %add1 = add i64 24, %mul, !dbg !5631
  %call = call noalias ptr @malloc(i64 noundef %add1) #18, !dbg !5632
  store ptr %call, ptr %bs, align 8, !dbg !5628, !tbaa !1228
  %2 = load ptr, ptr %bs, align 8, !dbg !5633, !tbaa !1228
  %cmp = icmp eq ptr %2, null, !dbg !5635
  br i1 %cmp, label %if.then, label %if.end, !dbg !5636

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !5637
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5637

if.end:                                           ; preds = %entry
  %3 = load i64, ptr %n, align 8, !dbg !5638, !tbaa !1818
  %4 = load ptr, ptr %bs, align 8, !dbg !5639, !tbaa !1228
  %n_max = getelementptr inbounds %struct.kbitset_t, ptr %4, i32 0, i32 1, !dbg !5640
  store i64 %3, ptr %n_max, align 8, !dbg !5641, !tbaa !5642
  %5 = load ptr, ptr %bs, align 8, !dbg !5644, !tbaa !1228
  %n2 = getelementptr inbounds %struct.kbitset_t, ptr %5, i32 0, i32 0, !dbg !5645
  store i64 %3, ptr %n2, align 8, !dbg !5646, !tbaa !5647
  %6 = load ptr, ptr %bs, align 8, !dbg !5648, !tbaa !1228
  %b = getelementptr inbounds %struct.kbitset_t, ptr %6, i32 0, i32 2, !dbg !5649
  %arraydecay = getelementptr inbounds [1 x i64], ptr %b, i64 0, i64 0, !dbg !5650
  %7 = load i32, ptr %fill.addr, align 4, !dbg !5651, !tbaa !1223
  %tobool = icmp ne i32 %7, 0, !dbg !5651
  %8 = zext i1 %tobool to i64, !dbg !5651
  %cond = select i1 %tobool, i32 -1, i32 0, !dbg !5651
  %9 = trunc i32 %cond to i8, !dbg !5650
  %10 = load i64, ptr %n, align 8, !dbg !5652, !tbaa !1818
  %mul3 = mul i64 %10, 8, !dbg !5653
  call void @llvm.memset.p0.i64(ptr align 8 %arraydecay, i8 %9, i64 %mul3, i1 false), !dbg !5650
  %11 = load i64, ptr %ni.addr, align 8, !dbg !5654, !tbaa !1818
  %call4 = call i64 @kbs_last_mask(i64 noundef %11), !dbg !5655
  %12 = load ptr, ptr %bs, align 8, !dbg !5656, !tbaa !1228
  %b5 = getelementptr inbounds %struct.kbitset_t, ptr %12, i32 0, i32 2, !dbg !5657
  %13 = load i64, ptr %n, align 8, !dbg !5658, !tbaa !1818
  %arrayidx = getelementptr [1 x i64], ptr %b5, i64 0, i64 %13, !dbg !5656
  store i64 %call4, ptr %arrayidx, align 8, !dbg !5659, !tbaa !1818
  %14 = load i32, ptr %fill.addr, align 4, !dbg !5660, !tbaa !1223
  %tobool6 = icmp ne i32 %14, 0, !dbg !5660
  br i1 %tobool6, label %if.then7, label %if.end13, !dbg !5662

if.then7:                                         ; preds = %if.end
  %15 = load ptr, ptr %bs, align 8, !dbg !5663, !tbaa !1228
  %b8 = getelementptr inbounds %struct.kbitset_t, ptr %15, i32 0, i32 2, !dbg !5664
  %16 = load i64, ptr %n, align 8, !dbg !5665, !tbaa !1818
  %arrayidx9 = getelementptr [1 x i64], ptr %b8, i64 0, i64 %16, !dbg !5663
  %17 = load i64, ptr %arrayidx9, align 8, !dbg !5663, !tbaa !1818
  %18 = load ptr, ptr %bs, align 8, !dbg !5666, !tbaa !1228
  %b10 = getelementptr inbounds %struct.kbitset_t, ptr %18, i32 0, i32 2, !dbg !5667
  %19 = load i64, ptr %n, align 8, !dbg !5668, !tbaa !1818
  %sub11 = sub i64 %19, 1, !dbg !5669
  %arrayidx12 = getelementptr [1 x i64], ptr %b10, i64 0, i64 %sub11, !dbg !5666
  %20 = load i64, ptr %arrayidx12, align 8, !dbg !5670, !tbaa !1818
  %and = and i64 %20, %17, !dbg !5670
  store i64 %and, ptr %arrayidx12, align 8, !dbg !5670, !tbaa !1818
  br label %if.end13, !dbg !5666

if.end13:                                         ; preds = %if.then7, %if.end
  %21 = load ptr, ptr %bs, align 8, !dbg !5671, !tbaa !1228
  store ptr %21, ptr %retval, align 8, !dbg !5672
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5672

cleanup:                                          ; preds = %if.end13, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %bs) #14, !dbg !5673
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #14, !dbg !5673
  %22 = load ptr, ptr %retval, align 8, !dbg !5673
  ret ptr %22, !dbg !5673
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #12

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @kbs_last_mask(i64 noundef %ni) #11 !dbg !5674 {
entry:
  %ni.addr = alloca i64, align 8
  %mask = alloca i64, align 8
  store i64 %ni, ptr %ni.addr, align 8, !tbaa !1818
  tail call void @llvm.dbg.declare(metadata ptr %ni.addr, metadata !5678, metadata !DIExpression()), !dbg !5680
  call void @llvm.lifetime.start.p0(i64 8, ptr %mask) #14, !dbg !5681
  tail call void @llvm.dbg.declare(metadata ptr %mask, metadata !5679, metadata !DIExpression()), !dbg !5682
  %0 = load i64, ptr %ni.addr, align 8, !dbg !5683, !tbaa !1818
  %rem = urem i64 %0, 64, !dbg !5683
  %shl = shl i64 1, %rem, !dbg !5683
  %sub = sub i64 %shl, 1, !dbg !5684
  store i64 %sub, ptr %mask, align 8, !dbg !5682, !tbaa !1818
  %1 = load i64, ptr %mask, align 8, !dbg !5685, !tbaa !1818
  %tobool = icmp ne i64 %1, 0, !dbg !5685
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5685

cond.true:                                        ; preds = %entry
  %2 = load i64, ptr %mask, align 8, !dbg !5686, !tbaa !1818
  br label %cond.end, !dbg !5685

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5685

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ -1, %cond.false ], !dbg !5685
  call void @llvm.lifetime.end.p0(i64 8, ptr %mask) #14, !dbg !5687
  ret i64 %cond, !dbg !5688
}

declare !dbg !5689 ptr @bcftools_version() #5

declare !dbg !5692 ptr @hts_version() #5

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @bcf_seqname(ptr noundef %hdr, ptr noundef %rec) #11 !dbg !5695 {
entry:
  %hdr.addr = alloca ptr, align 8
  %rec.addr = alloca ptr, align 8
  store ptr %hdr, ptr %hdr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %hdr.addr, metadata !5701, metadata !DIExpression()), !dbg !5703
  store ptr %rec, ptr %rec.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %rec.addr, metadata !5702, metadata !DIExpression()), !dbg !5704
  %0 = load ptr, ptr %hdr.addr, align 8, !dbg !5705, !tbaa !1228
  %1 = load ptr, ptr %rec.addr, align 8, !dbg !5706, !tbaa !1228
  %tobool = icmp ne ptr %1, null, !dbg !5706
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5706

cond.true:                                        ; preds = %entry
  %2 = load ptr, ptr %rec.addr, align 8, !dbg !5707, !tbaa !1228
  %rid = getelementptr inbounds %struct.bcf1_t, ptr %2, i32 0, i32 2, !dbg !5708
  %3 = load i32, ptr %rid, align 8, !dbg !5708, !tbaa !3424
  br label %cond.end, !dbg !5706

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5706

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ -1, %cond.false ], !dbg !5706
  %call = call ptr @bcf_hdr_id2name(ptr noundef %0, i32 noundef %cond), !dbg !5709
  ret ptr %call, !dbg !5710
}

declare !dbg !5711 i32 @bcf_get_variant_types(ptr noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @bcf_hdr_id2name(ptr noundef %hdr, i32 noundef %rid) #11 !dbg !5714 {
entry:
  %retval = alloca ptr, align 8
  %hdr.addr = alloca ptr, align 8
  %rid.addr = alloca i32, align 4
  store ptr %hdr, ptr %hdr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %hdr.addr, metadata !5718, metadata !DIExpression()), !dbg !5720
  store i32 %rid, ptr %rid.addr, align 4, !tbaa !1223
  tail call void @llvm.dbg.declare(metadata ptr %rid.addr, metadata !5719, metadata !DIExpression()), !dbg !5721
  %0 = load ptr, ptr %hdr.addr, align 8, !dbg !5722, !tbaa !1228
  %tobool = icmp ne ptr %0, null, !dbg !5722
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5724

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, ptr %rid.addr, align 4, !dbg !5725, !tbaa !1223
  %cmp = icmp slt i32 %1, 0, !dbg !5726
  br i1 %cmp, label %if.then, label %lor.lhs.false1, !dbg !5727

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %2 = load i32, ptr %rid.addr, align 4, !dbg !5728, !tbaa !1223
  %3 = load ptr, ptr %hdr.addr, align 8, !dbg !5729, !tbaa !1228
  %n = getelementptr inbounds %struct.bcf_hdr_t, ptr %3, i32 0, i32 0, !dbg !5730
  %arrayidx = getelementptr [3 x i32], ptr %n, i64 0, i64 1, !dbg !5729
  %4 = load i32, ptr %arrayidx, align 4, !dbg !5729, !tbaa !1223
  %cmp2 = icmp sge i32 %2, %4, !dbg !5731
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5732

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !5733
  br label %return, !dbg !5733

if.end:                                           ; preds = %lor.lhs.false1
  %5 = load ptr, ptr %hdr.addr, align 8, !dbg !5734, !tbaa !1228
  %id = getelementptr inbounds %struct.bcf_hdr_t, ptr %5, i32 0, i32 1, !dbg !5735
  %arrayidx3 = getelementptr [3 x ptr], ptr %id, i64 0, i64 1, !dbg !5734
  %6 = load ptr, ptr %arrayidx3, align 8, !dbg !5734, !tbaa !1228
  %7 = load i32, ptr %rid.addr, align 4, !dbg !5736, !tbaa !1223
  %idxprom = sext i32 %7 to i64, !dbg !5734
  %arrayidx4 = getelementptr %struct.bcf_idpair_t, ptr %6, i64 %idxprom, !dbg !5734
  %key = getelementptr inbounds %struct.bcf_idpair_t, ptr %arrayidx4, i32 0, i32 0, !dbg !5737
  %8 = load ptr, ptr %key, align 8, !dbg !5737, !tbaa !5738
  store ptr %8, ptr %retval, align 8, !dbg !5740
  br label %return, !dbg !5740

return:                                           ; preds = %if.end, %if.then
  %9 = load ptr, ptr %retval, align 8, !dbg !5741
  ret ptr %9, !dbg !5741
}

; Function Attrs: nounwind uwtable
define internal i32 @set_data(ptr noundef %args, ptr noundef %hdr, ptr noundef %rec, ptr noundef %arr, ptr noundef %narr, ptr noundef %narr1, ptr noundef %use_GT) #0 !dbg !1089 {
entry:
  %retval = alloca i32, align 4
  %args.addr = alloca ptr, align 8
  %hdr.addr = alloca ptr, align 8
  %rec.addr = alloca ptr, align 8
  %arr.addr = alloca ptr, align 8
  %narr.addr = alloca ptr, align 8
  %narr1.addr = alloca ptr, align 8
  %use_GT.addr = alloca ptr, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %ret16 = alloca i32, align 4
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !1094, metadata !DIExpression()), !dbg !5742
  store ptr %hdr, ptr %hdr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %hdr.addr, metadata !1095, metadata !DIExpression()), !dbg !5743
  store ptr %rec, ptr %rec.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %rec.addr, metadata !1096, metadata !DIExpression()), !dbg !5744
  store ptr %arr, ptr %arr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %arr.addr, metadata !1097, metadata !DIExpression()), !dbg !5745
  store ptr %narr, ptr %narr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %narr.addr, metadata !1098, metadata !DIExpression()), !dbg !5746
  store ptr %narr1, ptr %narr1.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %narr1.addr, metadata !1099, metadata !DIExpression()), !dbg !5747
  store ptr %use_GT, ptr %use_GT.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %use_GT.addr, metadata !1100, metadata !DIExpression()), !dbg !5748
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #14, !dbg !5749
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !1101, metadata !DIExpression()), !dbg !5750
  store i32 0, ptr %i, align 4, !dbg !5751, !tbaa !1223
  br label %for.cond, !dbg !5752

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, ptr %i, align 4, !dbg !5753, !tbaa !1223
  %cmp = icmp slt i32 %0, 2, !dbg !5754
  br i1 %cmp, label %for.body, label %for.end, !dbg !5755

for.body:                                         ; preds = %for.cond
  %1 = load ptr, ptr %use_GT.addr, align 8, !dbg !5756, !tbaa !1228
  %2 = load i32, ptr %1, align 4, !dbg !5757, !tbaa !1223
  %tobool = icmp ne i32 %2, 0, !dbg !5757
  br i1 %tobool, label %if.then, label %if.end15, !dbg !5758

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #14, !dbg !5759
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !1102, metadata !DIExpression()), !dbg !5760
  %3 = load ptr, ptr %hdr.addr, align 8, !dbg !5761, !tbaa !1228
  %4 = load ptr, ptr %rec.addr, align 8, !dbg !5761, !tbaa !1228
  %5 = load ptr, ptr %arr.addr, align 8, !dbg !5761, !tbaa !1228
  %6 = load ptr, ptr %narr.addr, align 8, !dbg !5761, !tbaa !1228
  %call = call i32 @bcf_get_format_values(ptr noundef %3, ptr noundef %4, ptr noundef @.str.29, ptr noundef %5, ptr noundef %6, i32 noundef 1), !dbg !5761
  store i32 %call, ptr %ret, align 4, !dbg !5760, !tbaa !1223
  %7 = load i32, ptr %ret, align 4, !dbg !5762, !tbaa !1223
  %cmp1 = icmp slt i32 %7, 0, !dbg !5764
  br i1 %cmp1, label %if.then2, label %if.end5, !dbg !5765

if.then2:                                         ; preds = %if.then
  %8 = load i32, ptr %i, align 4, !dbg !5766, !tbaa !1223
  %tobool3 = icmp ne i32 %8, 0, !dbg !5766
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !5769

if.then4:                                         ; preds = %if.then2
  %9 = load ptr, ptr %use_GT.addr, align 8, !dbg !5770, !tbaa !1228
  store i32 0, ptr %9, align 4, !dbg !5772, !tbaa !1223
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5773

if.end:                                           ; preds = %if.then2
  %10 = load ptr, ptr %args.addr, align 8, !dbg !5774, !tbaa !1228
  %nskip_no_data = getelementptr inbounds %struct.args_t, ptr %10, i32 0, i32 57, !dbg !5775
  %11 = load i32, ptr %nskip_no_data, align 4, !dbg !5776, !tbaa !4089
  %inc = add i32 %11, 1, !dbg !5776
  store i32 %inc, ptr %nskip_no_data, align 4, !dbg !5776, !tbaa !4089
  store i32 -1, ptr %retval, align 4, !dbg !5777
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5777

if.end5:                                          ; preds = %if.then
  %12 = load i32, ptr %ret, align 4, !dbg !5778, !tbaa !1223
  %13 = load ptr, ptr %hdr.addr, align 8, !dbg !5780, !tbaa !1228
  %n = getelementptr inbounds %struct.bcf_hdr_t, ptr %13, i32 0, i32 0, !dbg !5780
  %arrayidx = getelementptr [3 x i32], ptr %n, i64 0, i64 2, !dbg !5780
  %14 = load i32, ptr %arrayidx, align 8, !dbg !5780, !tbaa !1223
  %mul = mul i32 2, %14, !dbg !5781
  %cmp6 = icmp ne i32 %12, %mul, !dbg !5782
  br i1 %cmp6, label %if.then7, label %if.end14, !dbg !5783

if.then7:                                         ; preds = %if.end5
  %15 = load i32, ptr @set_data.warn_dip_GT, align 4, !dbg !5784, !tbaa !1223
  %tobool8 = icmp ne i32 %15, 0, !dbg !5784
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !5787

if.then9:                                         ; preds = %if.then7
  %16 = load ptr, ptr @bcftools_stderr, align 8, !dbg !5788, !tbaa !1228
  %17 = load ptr, ptr %hdr.addr, align 8, !dbg !5790, !tbaa !1228
  %18 = load ptr, ptr %rec.addr, align 8, !dbg !5791, !tbaa !1228
  %call10 = call ptr @bcf_seqname(ptr noundef %17, ptr noundef %18), !dbg !5792
  %19 = load ptr, ptr %rec.addr, align 8, !dbg !5793, !tbaa !1228
  %pos = getelementptr inbounds %struct.bcf1_t, ptr %19, i32 0, i32 0, !dbg !5794
  %20 = load i64, ptr %pos, align 8, !dbg !5794, !tbaa !2917
  %add = add i64 %20, 1, !dbg !5795
  %call11 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %16, ptr noundef @.str.114, ptr noundef %call10, i64 noundef %add), !dbg !5796
  store i32 0, ptr @set_data.warn_dip_GT, align 4, !dbg !5797, !tbaa !1223
  br label %if.end12, !dbg !5798

if.end12:                                         ; preds = %if.then9, %if.then7
  %21 = load ptr, ptr %args.addr, align 8, !dbg !5799, !tbaa !1228
  %nskip_dip_GT = getelementptr inbounds %struct.args_t, ptr %21, i32 0, i32 58, !dbg !5800
  %22 = load i32, ptr %nskip_dip_GT, align 8, !dbg !5801, !tbaa !4095
  %inc13 = add i32 %22, 1, !dbg !5801
  store i32 %inc13, ptr %nskip_dip_GT, align 8, !dbg !5801, !tbaa !4095
  store i32 -1, ptr %retval, align 4, !dbg !5802
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5802

if.end14:                                         ; preds = %if.end5
  %23 = load ptr, ptr %narr1.addr, align 8, !dbg !5803, !tbaa !1228
  store i32 2, ptr %23, align 4, !dbg !5804, !tbaa !1223
  store i32 0, ptr %retval, align 4, !dbg !5805
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5805

cleanup:                                          ; preds = %if.end14, %if.end12, %if.end, %if.then4
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #14, !dbg !5806
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup43 [
    i32 4, label %for.inc
  ]

if.end15:                                         ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret16) #14, !dbg !5807
  tail call void @llvm.dbg.declare(metadata ptr %ret16, metadata !1108, metadata !DIExpression()), !dbg !5808
  %24 = load ptr, ptr %hdr.addr, align 8, !dbg !5809, !tbaa !1228
  %25 = load ptr, ptr %rec.addr, align 8, !dbg !5809, !tbaa !1228
  %26 = load ptr, ptr %arr.addr, align 8, !dbg !5809, !tbaa !1228
  %27 = load ptr, ptr %narr.addr, align 8, !dbg !5809, !tbaa !1228
  %call17 = call i32 @bcf_get_format_values(ptr noundef %24, ptr noundef %25, ptr noundef @.str.30, ptr noundef %26, ptr noundef %27, i32 noundef 1), !dbg !5809
  store i32 %call17, ptr %ret16, align 4, !dbg !5808, !tbaa !1223
  %28 = load i32, ptr %ret16, align 4, !dbg !5810, !tbaa !1223
  %cmp18 = icmp slt i32 %28, 0, !dbg !5812
  br i1 %cmp18, label %if.then19, label %if.end25, !dbg !5813

if.then19:                                        ; preds = %if.end15
  %29 = load i32, ptr %i, align 4, !dbg !5814, !tbaa !1223
  %tobool20 = icmp ne i32 %29, 0, !dbg !5814
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !5817

if.then21:                                        ; preds = %if.then19
  %30 = load ptr, ptr %use_GT.addr, align 8, !dbg !5818, !tbaa !1228
  store i32 1, ptr %30, align 4, !dbg !5820, !tbaa !1223
  store i32 4, ptr %cleanup.dest.slot, align 4
  br label %cleanup40, !dbg !5821

if.end22:                                         ; preds = %if.then19
  %31 = load ptr, ptr %args.addr, align 8, !dbg !5822, !tbaa !1228
  %nskip_no_data23 = getelementptr inbounds %struct.args_t, ptr %31, i32 0, i32 57, !dbg !5823
  %32 = load i32, ptr %nskip_no_data23, align 4, !dbg !5824, !tbaa !4089
  %inc24 = add i32 %32, 1, !dbg !5824
  store i32 %inc24, ptr %nskip_no_data23, align 4, !dbg !5824, !tbaa !4089
  store i32 -1, ptr %retval, align 4, !dbg !5825
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup40, !dbg !5825

if.end25:                                         ; preds = %if.end15
  %33 = load i32, ptr %ret16, align 4, !dbg !5826, !tbaa !1223
  %34 = load ptr, ptr %hdr.addr, align 8, !dbg !5828, !tbaa !1228
  %n26 = getelementptr inbounds %struct.bcf_hdr_t, ptr %34, i32 0, i32 0, !dbg !5828
  %arrayidx27 = getelementptr [3 x i32], ptr %n26, i64 0, i64 2, !dbg !5828
  %35 = load i32, ptr %arrayidx27, align 8, !dbg !5828, !tbaa !1223
  %mul28 = mul i32 3, %35, !dbg !5829
  %cmp29 = icmp ne i32 %33, %mul28, !dbg !5830
  br i1 %cmp29, label %if.then30, label %if.end39, !dbg !5831

if.then30:                                        ; preds = %if.end25
  %36 = load i32, ptr @set_data.warn_dip_PL, align 4, !dbg !5832, !tbaa !1223
  %tobool31 = icmp ne i32 %36, 0, !dbg !5832
  br i1 %tobool31, label %if.then32, label %if.end37, !dbg !5835

if.then32:                                        ; preds = %if.then30
  %37 = load ptr, ptr @bcftools_stderr, align 8, !dbg !5836, !tbaa !1228
  %38 = load ptr, ptr %hdr.addr, align 8, !dbg !5838, !tbaa !1228
  %39 = load ptr, ptr %rec.addr, align 8, !dbg !5839, !tbaa !1228
  %call33 = call ptr @bcf_seqname(ptr noundef %38, ptr noundef %39), !dbg !5840
  %40 = load ptr, ptr %rec.addr, align 8, !dbg !5841, !tbaa !1228
  %pos34 = getelementptr inbounds %struct.bcf1_t, ptr %40, i32 0, i32 0, !dbg !5842
  %41 = load i64, ptr %pos34, align 8, !dbg !5842, !tbaa !2917
  %add35 = add i64 %41, 1, !dbg !5843
  %call36 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %37, ptr noundef @.str.115, ptr noundef %call33, i64 noundef %add35), !dbg !5844
  store i32 0, ptr @set_data.warn_dip_PL, align 4, !dbg !5845, !tbaa !1223
  br label %if.end37, !dbg !5846

if.end37:                                         ; preds = %if.then32, %if.then30
  %42 = load ptr, ptr %args.addr, align 8, !dbg !5847, !tbaa !1228
  %nskip_dip_PL = getelementptr inbounds %struct.args_t, ptr %42, i32 0, i32 59, !dbg !5848
  %43 = load i32, ptr %nskip_dip_PL, align 4, !dbg !5849, !tbaa !4101
  %inc38 = add i32 %43, 1, !dbg !5849
  store i32 %inc38, ptr %nskip_dip_PL, align 4, !dbg !5849, !tbaa !4101
  store i32 -1, ptr %retval, align 4, !dbg !5850
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup40, !dbg !5850

if.end39:                                         ; preds = %if.end25
  %44 = load ptr, ptr %narr1.addr, align 8, !dbg !5851, !tbaa !1228
  store i32 3, ptr %44, align 4, !dbg !5852, !tbaa !1223
  store i32 0, ptr %retval, align 4, !dbg !5853
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup40, !dbg !5853

cleanup40:                                        ; preds = %if.end39, %if.end37, %if.end22, %if.then21
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret16) #14, !dbg !5854
  %cleanup.dest41 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest41, label %cleanup43 [
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup40, %cleanup
  %45 = load i32, ptr %i, align 4, !dbg !5855, !tbaa !1223
  %inc42 = add i32 %45, 1, !dbg !5855
  store i32 %inc42, ptr %i, align 4, !dbg !5855, !tbaa !1223
  br label %for.cond, !dbg !5856, !llvm.loop !5857

for.end:                                          ; preds = %for.cond
  store i32 -1, ptr %retval, align 4, !dbg !5859
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup43, !dbg !5859

cleanup43:                                        ; preds = %for.end, %cleanup40, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #14, !dbg !5860
  %46 = load i32, ptr %retval, align 4, !dbg !5860
  ret i32 %46, !dbg !5860
}

declare !dbg !5861 i32 @bcf_calc_ac(ptr noundef, ptr noundef, ptr noundef, i32 noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal void @diff_sites_reset(ptr noundef %args) #11 !dbg !5865 {
entry:
  %args.addr = alloca ptr, align 8
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !5867, metadata !DIExpression()), !dbg !5868
  %0 = load ptr, ptr %args.addr, align 8, !dbg !5869, !tbaa !1228
  %kbs_diff = getelementptr inbounds %struct.args_t, ptr %0, i32 0, i32 61, !dbg !5870
  %1 = load ptr, ptr %kbs_diff, align 8, !dbg !5870, !tbaa !3308
  call void @kbs_clear(ptr noundef %1), !dbg !5871
  ret void, !dbg !5872
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @gt_to_dsg(ptr noundef %ptr) #11 !dbg !5873 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca ptr, align 8
  %dsg = alloca i8, align 1
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !5877, metadata !DIExpression()), !dbg !5879
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !5880, !tbaa !1228
  %arrayidx = getelementptr i32, ptr %0, i64 0, !dbg !5880
  %1 = load i32, ptr %arrayidx, align 4, !dbg !5880, !tbaa !1223
  %shr = ashr i32 %1, 1, !dbg !5880
  %tobool = icmp ne i32 %shr, 0, !dbg !5880
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5882

cond.true:                                        ; preds = %entry
  br i1 false, label %if.then, label %lor.lhs.false, !dbg !5880

cond.false:                                       ; preds = %entry
  br i1 true, label %if.then, label %lor.lhs.false, !dbg !5882

lor.lhs.false:                                    ; preds = %cond.false, %cond.true
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !5883, !tbaa !1228
  %arrayidx1 = getelementptr i32, ptr %2, i64 1, !dbg !5883
  %3 = load i32, ptr %arrayidx1, align 4, !dbg !5883, !tbaa !1223
  %shr2 = ashr i32 %3, 1, !dbg !5883
  %tobool3 = icmp ne i32 %shr2, 0, !dbg !5883
  br i1 %tobool3, label %cond.true4, label %cond.false5, !dbg !5884

cond.true4:                                       ; preds = %lor.lhs.false
  br i1 false, label %if.then, label %lor.lhs.false6, !dbg !5883

cond.false5:                                      ; preds = %lor.lhs.false
  br i1 true, label %if.then, label %lor.lhs.false6, !dbg !5884

lor.lhs.false6:                                   ; preds = %cond.false5, %cond.true4
  %4 = load ptr, ptr %ptr.addr, align 8, !dbg !5885, !tbaa !1228
  %arrayidx7 = getelementptr i32, ptr %4, i64 1, !dbg !5885
  %5 = load i32, ptr %arrayidx7, align 4, !dbg !5885, !tbaa !1223
  %cmp = icmp eq i32 %5, -2147483647, !dbg !5886
  br i1 %cmp, label %if.then, label %if.end, !dbg !5887

if.then:                                          ; preds = %lor.lhs.false6, %cond.false5, %cond.true4, %cond.false, %cond.true
  store i8 0, ptr %retval, align 1, !dbg !5888
  br label %return, !dbg !5888

if.end:                                           ; preds = %lor.lhs.false6
  call void @llvm.lifetime.start.p0(i64 1, ptr %dsg) #14, !dbg !5889
  tail call void @llvm.dbg.declare(metadata ptr %dsg, metadata !5878, metadata !DIExpression()), !dbg !5890
  %6 = load ptr, ptr %ptr.addr, align 8, !dbg !5891, !tbaa !1228
  %arrayidx8 = getelementptr i32, ptr %6, i64 0, !dbg !5891
  %7 = load i32, ptr %arrayidx8, align 4, !dbg !5891, !tbaa !1223
  %shr9 = ashr i32 %7, 1, !dbg !5891
  %sub = sub i32 %shr9, 1, !dbg !5891
  %tobool10 = icmp ne i32 %sub, 0, !dbg !5891
  %8 = zext i1 %tobool10 to i64, !dbg !5891
  %cond = select i1 %tobool10, i32 1, i32 0, !dbg !5891
  %9 = load ptr, ptr %ptr.addr, align 8, !dbg !5892, !tbaa !1228
  %arrayidx11 = getelementptr i32, ptr %9, i64 1, !dbg !5892
  %10 = load i32, ptr %arrayidx11, align 4, !dbg !5892, !tbaa !1223
  %shr12 = ashr i32 %10, 1, !dbg !5892
  %sub13 = sub i32 %shr12, 1, !dbg !5892
  %tobool14 = icmp ne i32 %sub13, 0, !dbg !5892
  %11 = zext i1 %tobool14 to i64, !dbg !5892
  %cond15 = select i1 %tobool14, i32 1, i32 0, !dbg !5892
  %add = add i32 %cond, %cond15, !dbg !5893
  %conv = trunc i32 %add to i8, !dbg !5894
  store i8 %conv, ptr %dsg, align 1, !dbg !5890, !tbaa !1312
  %12 = load i8, ptr %dsg, align 1, !dbg !5895, !tbaa !1312
  %conv16 = zext i8 %12 to i32, !dbg !5895
  %shl = shl i32 1, %conv16, !dbg !5896
  %conv17 = trunc i32 %shl to i8, !dbg !5897
  store i8 %conv17, ptr %retval, align 1, !dbg !5898
  call void @llvm.lifetime.end.p0(i64 1, ptr %dsg) #14, !dbg !5899
  br label %return

return:                                           ; preds = %if.end, %if.then
  %13 = load i8, ptr %retval, align 1, !dbg !5899
  ret i8 %13, !dbg !5899
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @pl_to_dsg(ptr noundef %ptr) #11 !dbg !5900 {
entry:
  %retval = alloca i8, align 1
  %ptr.addr = alloca ptr, align 8
  %min_pl = alloca i32, align 4
  %dsg = alloca i8, align 1
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !5902, metadata !DIExpression()), !dbg !5905
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !5906, !tbaa !1228
  %arrayidx = getelementptr i32, ptr %0, i64 0, !dbg !5906
  %1 = load i32, ptr %arrayidx, align 4, !dbg !5906, !tbaa !1223
  %cmp = icmp eq i32 %1, -2147483648, !dbg !5908
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5909

lor.lhs.false:                                    ; preds = %entry
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !5910, !tbaa !1228
  %arrayidx1 = getelementptr i32, ptr %2, i64 1, !dbg !5910
  %3 = load i32, ptr %arrayidx1, align 4, !dbg !5910, !tbaa !1223
  %cmp2 = icmp eq i32 %3, -2147483648, !dbg !5911
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !5912

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load ptr, ptr %ptr.addr, align 8, !dbg !5913, !tbaa !1228
  %arrayidx4 = getelementptr i32, ptr %4, i64 2, !dbg !5913
  %5 = load i32, ptr %arrayidx4, align 4, !dbg !5913, !tbaa !1223
  %cmp5 = icmp eq i32 %5, -2147483648, !dbg !5914
  br i1 %cmp5, label %if.then, label %if.end, !dbg !5915

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  store i8 0, ptr %retval, align 1, !dbg !5916
  br label %return, !dbg !5916

if.end:                                           ; preds = %lor.lhs.false3
  %6 = load ptr, ptr %ptr.addr, align 8, !dbg !5917, !tbaa !1228
  %arrayidx6 = getelementptr i32, ptr %6, i64 1, !dbg !5917
  %7 = load i32, ptr %arrayidx6, align 4, !dbg !5917, !tbaa !1223
  %cmp7 = icmp eq i32 %7, -2147483647, !dbg !5919
  br i1 %cmp7, label %if.then11, label %lor.lhs.false8, !dbg !5920

lor.lhs.false8:                                   ; preds = %if.end
  %8 = load ptr, ptr %ptr.addr, align 8, !dbg !5921, !tbaa !1228
  %arrayidx9 = getelementptr i32, ptr %8, i64 2, !dbg !5921
  %9 = load i32, ptr %arrayidx9, align 4, !dbg !5921, !tbaa !1223
  %cmp10 = icmp eq i32 %9, -2147483647, !dbg !5922
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5923

if.then11:                                        ; preds = %lor.lhs.false8, %if.end
  store i8 0, ptr %retval, align 1, !dbg !5924
  br label %return, !dbg !5924

if.end12:                                         ; preds = %lor.lhs.false8
  call void @llvm.lifetime.start.p0(i64 4, ptr %min_pl) #14, !dbg !5925
  tail call void @llvm.dbg.declare(metadata ptr %min_pl, metadata !5903, metadata !DIExpression()), !dbg !5926
  %10 = load ptr, ptr %ptr.addr, align 8, !dbg !5927, !tbaa !1228
  %arrayidx13 = getelementptr i32, ptr %10, i64 0, !dbg !5927
  %11 = load i32, ptr %arrayidx13, align 4, !dbg !5927, !tbaa !1223
  %12 = load ptr, ptr %ptr.addr, align 8, !dbg !5928, !tbaa !1228
  %arrayidx14 = getelementptr i32, ptr %12, i64 1, !dbg !5928
  %13 = load i32, ptr %arrayidx14, align 4, !dbg !5928, !tbaa !1223
  %cmp15 = icmp slt i32 %11, %13, !dbg !5929
  br i1 %cmp15, label %cond.true, label %cond.false22, !dbg !5927

cond.true:                                        ; preds = %if.end12
  %14 = load ptr, ptr %ptr.addr, align 8, !dbg !5930, !tbaa !1228
  %arrayidx16 = getelementptr i32, ptr %14, i64 0, !dbg !5930
  %15 = load i32, ptr %arrayidx16, align 4, !dbg !5930, !tbaa !1223
  %16 = load ptr, ptr %ptr.addr, align 8, !dbg !5931, !tbaa !1228
  %arrayidx17 = getelementptr i32, ptr %16, i64 2, !dbg !5931
  %17 = load i32, ptr %arrayidx17, align 4, !dbg !5931, !tbaa !1223
  %cmp18 = icmp slt i32 %15, %17, !dbg !5932
  br i1 %cmp18, label %cond.true19, label %cond.false, !dbg !5930

cond.true19:                                      ; preds = %cond.true
  %18 = load ptr, ptr %ptr.addr, align 8, !dbg !5933, !tbaa !1228
  %arrayidx20 = getelementptr i32, ptr %18, i64 0, !dbg !5933
  %19 = load i32, ptr %arrayidx20, align 4, !dbg !5933, !tbaa !1223
  br label %cond.end, !dbg !5930

cond.false:                                       ; preds = %cond.true
  %20 = load ptr, ptr %ptr.addr, align 8, !dbg !5934, !tbaa !1228
  %arrayidx21 = getelementptr i32, ptr %20, i64 2, !dbg !5934
  %21 = load i32, ptr %arrayidx21, align 4, !dbg !5934, !tbaa !1223
  br label %cond.end, !dbg !5930

cond.end:                                         ; preds = %cond.false, %cond.true19
  %cond = phi i32 [ %19, %cond.true19 ], [ %21, %cond.false ], !dbg !5930
  br label %cond.end32, !dbg !5927

cond.false22:                                     ; preds = %if.end12
  %22 = load ptr, ptr %ptr.addr, align 8, !dbg !5935, !tbaa !1228
  %arrayidx23 = getelementptr i32, ptr %22, i64 1, !dbg !5935
  %23 = load i32, ptr %arrayidx23, align 4, !dbg !5935, !tbaa !1223
  %24 = load ptr, ptr %ptr.addr, align 8, !dbg !5936, !tbaa !1228
  %arrayidx24 = getelementptr i32, ptr %24, i64 2, !dbg !5936
  %25 = load i32, ptr %arrayidx24, align 4, !dbg !5936, !tbaa !1223
  %cmp25 = icmp slt i32 %23, %25, !dbg !5937
  br i1 %cmp25, label %cond.true26, label %cond.false28, !dbg !5935

cond.true26:                                      ; preds = %cond.false22
  %26 = load ptr, ptr %ptr.addr, align 8, !dbg !5938, !tbaa !1228
  %arrayidx27 = getelementptr i32, ptr %26, i64 1, !dbg !5938
  %27 = load i32, ptr %arrayidx27, align 4, !dbg !5938, !tbaa !1223
  br label %cond.end30, !dbg !5935

cond.false28:                                     ; preds = %cond.false22
  %28 = load ptr, ptr %ptr.addr, align 8, !dbg !5939, !tbaa !1228
  %arrayidx29 = getelementptr i32, ptr %28, i64 2, !dbg !5939
  %29 = load i32, ptr %arrayidx29, align 4, !dbg !5939, !tbaa !1223
  br label %cond.end30, !dbg !5935

cond.end30:                                       ; preds = %cond.false28, %cond.true26
  %cond31 = phi i32 [ %27, %cond.true26 ], [ %29, %cond.false28 ], !dbg !5935
  br label %cond.end32, !dbg !5927

cond.end32:                                       ; preds = %cond.end30, %cond.end
  %cond33 = phi i32 [ %cond, %cond.end ], [ %cond31, %cond.end30 ], !dbg !5927
  store i32 %cond33, ptr %min_pl, align 4, !dbg !5926, !tbaa !1223
  call void @llvm.lifetime.start.p0(i64 1, ptr %dsg) #14, !dbg !5940
  tail call void @llvm.dbg.declare(metadata ptr %dsg, metadata !5904, metadata !DIExpression()), !dbg !5941
  store i8 0, ptr %dsg, align 1, !dbg !5941, !tbaa !1312
  %30 = load ptr, ptr %ptr.addr, align 8, !dbg !5942, !tbaa !1228
  %arrayidx34 = getelementptr i32, ptr %30, i64 0, !dbg !5942
  %31 = load i32, ptr %arrayidx34, align 4, !dbg !5942, !tbaa !1223
  %32 = load i32, ptr %min_pl, align 4, !dbg !5944, !tbaa !1223
  %cmp35 = icmp eq i32 %31, %32, !dbg !5945
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !5946

if.then36:                                        ; preds = %cond.end32
  %33 = load i8, ptr %dsg, align 1, !dbg !5947, !tbaa !1312
  %conv = zext i8 %33 to i32, !dbg !5947
  %or = or i32 %conv, 1, !dbg !5947
  %conv37 = trunc i32 %or to i8, !dbg !5947
  store i8 %conv37, ptr %dsg, align 1, !dbg !5947, !tbaa !1312
  br label %if.end38, !dbg !5948

if.end38:                                         ; preds = %if.then36, %cond.end32
  %34 = load ptr, ptr %ptr.addr, align 8, !dbg !5949, !tbaa !1228
  %arrayidx39 = getelementptr i32, ptr %34, i64 1, !dbg !5949
  %35 = load i32, ptr %arrayidx39, align 4, !dbg !5949, !tbaa !1223
  %36 = load i32, ptr %min_pl, align 4, !dbg !5951, !tbaa !1223
  %cmp40 = icmp eq i32 %35, %36, !dbg !5952
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !5953

if.then42:                                        ; preds = %if.end38
  %37 = load i8, ptr %dsg, align 1, !dbg !5954, !tbaa !1312
  %conv43 = zext i8 %37 to i32, !dbg !5954
  %or44 = or i32 %conv43, 2, !dbg !5954
  %conv45 = trunc i32 %or44 to i8, !dbg !5954
  store i8 %conv45, ptr %dsg, align 1, !dbg !5954, !tbaa !1312
  br label %if.end46, !dbg !5955

if.end46:                                         ; preds = %if.then42, %if.end38
  %38 = load ptr, ptr %ptr.addr, align 8, !dbg !5956, !tbaa !1228
  %arrayidx47 = getelementptr i32, ptr %38, i64 2, !dbg !5956
  %39 = load i32, ptr %arrayidx47, align 4, !dbg !5956, !tbaa !1223
  %40 = load i32, ptr %min_pl, align 4, !dbg !5958, !tbaa !1223
  %cmp48 = icmp eq i32 %39, %40, !dbg !5959
  br i1 %cmp48, label %if.then50, label %if.end54, !dbg !5960

if.then50:                                        ; preds = %if.end46
  %41 = load i8, ptr %dsg, align 1, !dbg !5961, !tbaa !1312
  %conv51 = zext i8 %41 to i32, !dbg !5961
  %or52 = or i32 %conv51, 4, !dbg !5961
  %conv53 = trunc i32 %or52 to i8, !dbg !5961
  store i8 %conv53, ptr %dsg, align 1, !dbg !5961, !tbaa !1312
  br label %if.end54, !dbg !5962

if.end54:                                         ; preds = %if.then50, %if.end46
  %42 = load i8, ptr %dsg, align 1, !dbg !5963, !tbaa !1312
  store i8 %42, ptr %retval, align 1, !dbg !5964
  call void @llvm.lifetime.end.p0(i64 1, ptr %dsg) #14, !dbg !5965
  call void @llvm.lifetime.end.p0(i64 4, ptr %min_pl) #14, !dbg !5965
  br label %return

return:                                           ; preds = %if.end54, %if.then11, %if.then
  %43 = load i8, ptr %retval, align 1, !dbg !5965
  ret i8 %43, !dbg !5965
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @kbs_insert(ptr noundef %bs, i32 noundef %i) #11 !dbg !5966 {
entry:
  %bs.addr = alloca ptr, align 8
  %i.addr = alloca i32, align 4
  store ptr %bs, ptr %bs.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %bs.addr, metadata !5970, metadata !DIExpression()), !dbg !5972
  store i32 %i, ptr %i.addr, align 4, !tbaa !1223
  tail call void @llvm.dbg.declare(metadata ptr %i.addr, metadata !5971, metadata !DIExpression()), !dbg !5973
  %0 = load i32, ptr %i.addr, align 4, !dbg !5974, !tbaa !1223
  %conv = sext i32 %0 to i64, !dbg !5974
  %rem = urem i64 %conv, 64, !dbg !5974
  %shl = shl i64 1, %rem, !dbg !5974
  %1 = load ptr, ptr %bs.addr, align 8, !dbg !5975, !tbaa !1228
  %b = getelementptr inbounds %struct.kbitset_t, ptr %1, i32 0, i32 2, !dbg !5976
  %2 = load i32, ptr %i.addr, align 4, !dbg !5977, !tbaa !1223
  %conv1 = sext i32 %2 to i64, !dbg !5977
  %div = udiv i64 %conv1, 64, !dbg !5977
  %arrayidx = getelementptr [1 x i64], ptr %b, i64 0, i64 %div, !dbg !5975
  %3 = load i64, ptr %arrayidx, align 8, !dbg !5978, !tbaa !1818
  %or = or i64 %3, %shl, !dbg !5978
  store i64 %or, ptr %arrayidx, align 8, !dbg !5978, !tbaa !1818
  ret void, !dbg !5979
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @diff_sites_push(ptr noundef %args, i32 noundef %ndiff, i32 noundef %rid, i32 noundef %pos) #11 !dbg !5980 {
entry:
  %args.addr = alloca ptr, align 8
  %ndiff.addr = alloca i32, align 4
  %rid.addr = alloca i32, align 4
  %pos.addr = alloca i32, align 4
  %dat = alloca ptr, align 8
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !5984, metadata !DIExpression()), !dbg !5989
  store i32 %ndiff, ptr %ndiff.addr, align 4, !tbaa !1223
  tail call void @llvm.dbg.declare(metadata ptr %ndiff.addr, metadata !5985, metadata !DIExpression()), !dbg !5990
  store i32 %rid, ptr %rid.addr, align 4, !tbaa !1223
  tail call void @llvm.dbg.declare(metadata ptr %rid.addr, metadata !5986, metadata !DIExpression()), !dbg !5991
  store i32 %pos, ptr %pos.addr, align 4, !tbaa !1223
  tail call void @llvm.dbg.declare(metadata ptr %pos.addr, metadata !5987, metadata !DIExpression()), !dbg !5992
  call void @llvm.lifetime.start.p0(i64 8, ptr %dat) #14, !dbg !5993
  tail call void @llvm.dbg.declare(metadata ptr %dat, metadata !5988, metadata !DIExpression()), !dbg !5994
  %0 = load ptr, ptr %args.addr, align 8, !dbg !5995, !tbaa !1228
  %diff_sites_size = getelementptr inbounds %struct.args_t, ptr %0, i32 0, i32 62, !dbg !5996
  %1 = load i64, ptr %diff_sites_size, align 8, !dbg !5996, !tbaa !5448
  %call = call noalias ptr @malloc(i64 noundef %1) #18, !dbg !5997
  store ptr %call, ptr %dat, align 8, !dbg !5994, !tbaa !1228
  %2 = load ptr, ptr %dat, align 8, !dbg !5998, !tbaa !1228
  call void @llvm.memset.p0.i64(ptr align 8 %2, i8 0, i64 24, i1 false), !dbg !5999
  %3 = load i32, ptr %ndiff.addr, align 4, !dbg !6000, !tbaa !1223
  %4 = load ptr, ptr %dat, align 8, !dbg !6001, !tbaa !1228
  %ndiff1 = getelementptr inbounds %struct.diff_sites_t, ptr %4, i32 0, i32 0, !dbg !6002
  store i32 %3, ptr %ndiff1, align 8, !dbg !6003, !tbaa !5574
  %5 = load i32, ptr %rid.addr, align 4, !dbg !6004, !tbaa !1223
  %6 = load ptr, ptr %dat, align 8, !dbg !6005, !tbaa !1228
  %rid2 = getelementptr inbounds %struct.diff_sites_t, ptr %6, i32 0, i32 1, !dbg !6006
  store i32 %5, ptr %rid2, align 4, !dbg !6007, !tbaa !6008
  %7 = load i32, ptr %pos.addr, align 4, !dbg !6009, !tbaa !1223
  %8 = load ptr, ptr %dat, align 8, !dbg !6010, !tbaa !1228
  %pos3 = getelementptr inbounds %struct.diff_sites_t, ptr %8, i32 0, i32 2, !dbg !6011
  store i32 %7, ptr %pos3, align 8, !dbg !6012, !tbaa !6013
  %call4 = call i64 @hts_lrand48(), !dbg !6014
  %conv = trunc i64 %call4 to i32, !dbg !6014
  %9 = load ptr, ptr %dat, align 8, !dbg !6015, !tbaa !1228
  %rand = getelementptr inbounds %struct.diff_sites_t, ptr %9, i32 0, i32 3, !dbg !6016
  store i32 %conv, ptr %rand, align 4, !dbg !6017, !tbaa !5592
  %10 = load ptr, ptr %dat, align 8, !dbg !6018, !tbaa !1228
  %kbs_dat = getelementptr inbounds %struct.diff_sites_t, ptr %10, i32 0, i32 4, !dbg !6019
  %arraydecay = getelementptr inbounds [1 x i64], ptr %kbs_dat, i64 0, i64 0, !dbg !6020
  %11 = load ptr, ptr %args.addr, align 8, !dbg !6021, !tbaa !1228
  %kbs_diff = getelementptr inbounds %struct.args_t, ptr %11, i32 0, i32 61, !dbg !6022
  %12 = load ptr, ptr %kbs_diff, align 8, !dbg !6022, !tbaa !3308
  %b = getelementptr inbounds %struct.kbitset_t, ptr %12, i32 0, i32 2, !dbg !6023
  %arraydecay5 = getelementptr inbounds [1 x i64], ptr %b, i64 0, i64 0, !dbg !6020
  %13 = load ptr, ptr %args.addr, align 8, !dbg !6024, !tbaa !1228
  %kbs_diff6 = getelementptr inbounds %struct.args_t, ptr %13, i32 0, i32 61, !dbg !6025
  %14 = load ptr, ptr %kbs_diff6, align 8, !dbg !6025, !tbaa !3308
  %n = getelementptr inbounds %struct.kbitset_t, ptr %14, i32 0, i32 0, !dbg !6026
  %15 = load i64, ptr %n, align 8, !dbg !6026, !tbaa !5647
  %mul = mul i64 %15, 8, !dbg !6027
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %arraydecay, ptr align 8 %arraydecay5, i64 %mul, i1 false), !dbg !6020
  %16 = load ptr, ptr %args.addr, align 8, !dbg !6028, !tbaa !1228
  %es = getelementptr inbounds %struct.args_t, ptr %16, i32 0, i32 63, !dbg !6029
  %17 = load ptr, ptr %es, align 8, !dbg !6029, !tbaa !4902
  %18 = load ptr, ptr %dat, align 8, !dbg !6030, !tbaa !1228
  call void @extsort_push(ptr noundef %17, ptr noundef %18), !dbg !6031
  call void @llvm.lifetime.end.p0(i64 8, ptr %dat) #14, !dbg !6032
  ret void, !dbg !6032
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @gt_to_prob(ptr noundef %args, ptr noundef %ptr, ptr noundef %prob) #11 !dbg !6033 {
entry:
  %args.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %prob.addr = alloca ptr, align 8
  %dsg = alloca i8, align 1
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !6037, metadata !DIExpression()), !dbg !6041
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !6038, metadata !DIExpression()), !dbg !6042
  store ptr %prob, ptr %prob.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %prob.addr, metadata !6039, metadata !DIExpression()), !dbg !6043
  call void @llvm.lifetime.start.p0(i64 1, ptr %dsg) #14, !dbg !6044
  tail call void @llvm.dbg.declare(metadata ptr %dsg, metadata !6040, metadata !DIExpression()), !dbg !6045
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !6046, !tbaa !1228
  %call = call zeroext i8 @gt_to_dsg(ptr noundef %0), !dbg !6047
  store i8 %call, ptr %dsg, align 1, !dbg !6045, !tbaa !1312
  %1 = load i8, ptr %dsg, align 1, !dbg !6048, !tbaa !1312
  %tobool = icmp ne i8 %1, 0, !dbg !6048
  br i1 %tobool, label %if.then, label %if.end, !dbg !6050

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %args.addr, align 8, !dbg !6051, !tbaa !1228
  %dsg2prob = getelementptr inbounds %struct.args_t, ptr %2, i32 0, i32 41, !dbg !6053
  %3 = load i8, ptr %dsg, align 1, !dbg !6054, !tbaa !1312
  %idxprom = zext i8 %3 to i64, !dbg !6051
  %arrayidx = getelementptr [8 x [3 x double]], ptr %dsg2prob, i64 0, i64 %idxprom, !dbg !6051
  %arrayidx1 = getelementptr [3 x double], ptr %arrayidx, i64 0, i64 0, !dbg !6051
  %4 = load double, ptr %arrayidx1, align 8, !dbg !6051, !tbaa !1761
  %5 = load ptr, ptr %prob.addr, align 8, !dbg !6055, !tbaa !1228
  %arrayidx2 = getelementptr double, ptr %5, i64 0, !dbg !6055
  store double %4, ptr %arrayidx2, align 8, !dbg !6056, !tbaa !1761
  %6 = load ptr, ptr %args.addr, align 8, !dbg !6057, !tbaa !1228
  %dsg2prob3 = getelementptr inbounds %struct.args_t, ptr %6, i32 0, i32 41, !dbg !6058
  %7 = load i8, ptr %dsg, align 1, !dbg !6059, !tbaa !1312
  %idxprom4 = zext i8 %7 to i64, !dbg !6057
  %arrayidx5 = getelementptr [8 x [3 x double]], ptr %dsg2prob3, i64 0, i64 %idxprom4, !dbg !6057
  %arrayidx6 = getelementptr [3 x double], ptr %arrayidx5, i64 0, i64 1, !dbg !6057
  %8 = load double, ptr %arrayidx6, align 8, !dbg !6057, !tbaa !1761
  %9 = load ptr, ptr %prob.addr, align 8, !dbg !6060, !tbaa !1228
  %arrayidx7 = getelementptr double, ptr %9, i64 1, !dbg !6060
  store double %8, ptr %arrayidx7, align 8, !dbg !6061, !tbaa !1761
  %10 = load ptr, ptr %args.addr, align 8, !dbg !6062, !tbaa !1228
  %dsg2prob8 = getelementptr inbounds %struct.args_t, ptr %10, i32 0, i32 41, !dbg !6063
  %11 = load i8, ptr %dsg, align 1, !dbg !6064, !tbaa !1312
  %idxprom9 = zext i8 %11 to i64, !dbg !6062
  %arrayidx10 = getelementptr [8 x [3 x double]], ptr %dsg2prob8, i64 0, i64 %idxprom9, !dbg !6062
  %arrayidx11 = getelementptr [3 x double], ptr %arrayidx10, i64 0, i64 2, !dbg !6062
  %12 = load double, ptr %arrayidx11, align 8, !dbg !6062, !tbaa !1761
  %13 = load ptr, ptr %prob.addr, align 8, !dbg !6065, !tbaa !1228
  %arrayidx12 = getelementptr double, ptr %13, i64 2, !dbg !6065
  store double %12, ptr %arrayidx12, align 8, !dbg !6066, !tbaa !1761
  br label %if.end, !dbg !6067

if.end:                                           ; preds = %if.then, %entry
  %14 = load i8, ptr %dsg, align 1, !dbg !6068, !tbaa !1312
  call void @llvm.lifetime.end.p0(i64 1, ptr %dsg) #14, !dbg !6069
  ret i8 %14, !dbg !6070
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @pl_to_prob(ptr noundef %args, ptr noundef %ptr, ptr noundef %prob) #11 !dbg !6071 {
entry:
  %args.addr = alloca ptr, align 8
  %ptr.addr = alloca ptr, align 8
  %prob.addr = alloca ptr, align 8
  %dsg = alloca i8, align 1
  %sum = alloca double, align 8
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !6073, metadata !DIExpression()), !dbg !6080
  store ptr %ptr, ptr %ptr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %ptr.addr, metadata !6074, metadata !DIExpression()), !dbg !6081
  store ptr %prob, ptr %prob.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %prob.addr, metadata !6075, metadata !DIExpression()), !dbg !6082
  call void @llvm.lifetime.start.p0(i64 1, ptr %dsg) #14, !dbg !6083
  tail call void @llvm.dbg.declare(metadata ptr %dsg, metadata !6076, metadata !DIExpression()), !dbg !6084
  %0 = load ptr, ptr %ptr.addr, align 8, !dbg !6085, !tbaa !1228
  %call = call zeroext i8 @pl_to_dsg(ptr noundef %0), !dbg !6086
  store i8 %call, ptr %dsg, align 1, !dbg !6084, !tbaa !1312
  %1 = load i8, ptr %dsg, align 1, !dbg !6087, !tbaa !1312
  %tobool = icmp ne i8 %1, 0, !dbg !6087
  br i1 %tobool, label %if.then, label %if.end, !dbg !6088

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %ptr.addr, align 8, !dbg !6089, !tbaa !1228
  %arrayidx = getelementptr i32, ptr %2, i64 0, !dbg !6089
  %3 = load i32, ptr %arrayidx, align 4, !dbg !6089, !tbaa !1223
  %cmp = icmp sge i32 %3, 0, !dbg !6090
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !6091

land.lhs.true:                                    ; preds = %if.then
  %4 = load ptr, ptr %ptr.addr, align 8, !dbg !6092, !tbaa !1228
  %arrayidx1 = getelementptr i32, ptr %4, i64 0, !dbg !6092
  %5 = load i32, ptr %arrayidx1, align 4, !dbg !6092, !tbaa !1223
  %cmp2 = icmp slt i32 %5, 255, !dbg !6093
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !6094

cond.true:                                        ; preds = %land.lhs.true
  %6 = load ptr, ptr %args.addr, align 8, !dbg !6095, !tbaa !1228
  %pl2prob = getelementptr inbounds %struct.args_t, ptr %6, i32 0, i32 42, !dbg !6096
  %7 = load ptr, ptr %ptr.addr, align 8, !dbg !6097, !tbaa !1228
  %arrayidx3 = getelementptr i32, ptr %7, i64 0, !dbg !6097
  %8 = load i32, ptr %arrayidx3, align 4, !dbg !6097, !tbaa !1223
  %idxprom = sext i32 %8 to i64, !dbg !6095
  %arrayidx4 = getelementptr [256 x double], ptr %pl2prob, i64 0, i64 %idxprom, !dbg !6095
  %9 = load double, ptr %arrayidx4, align 8, !dbg !6095, !tbaa !1761
  br label %cond.end, !dbg !6094

cond.false:                                       ; preds = %land.lhs.true, %if.then
  %10 = load ptr, ptr %args.addr, align 8, !dbg !6098, !tbaa !1228
  %pl2prob5 = getelementptr inbounds %struct.args_t, ptr %10, i32 0, i32 42, !dbg !6099
  %arrayidx6 = getelementptr [256 x double], ptr %pl2prob5, i64 0, i64 255, !dbg !6098
  %11 = load double, ptr %arrayidx6, align 8, !dbg !6098, !tbaa !1761
  br label %cond.end, !dbg !6094

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %9, %cond.true ], [ %11, %cond.false ], !dbg !6094
  %12 = load ptr, ptr %prob.addr, align 8, !dbg !6100, !tbaa !1228
  %arrayidx7 = getelementptr double, ptr %12, i64 0, !dbg !6100
  store double %cond, ptr %arrayidx7, align 8, !dbg !6101, !tbaa !1761
  %13 = load ptr, ptr %ptr.addr, align 8, !dbg !6102, !tbaa !1228
  %arrayidx8 = getelementptr i32, ptr %13, i64 1, !dbg !6102
  %14 = load i32, ptr %arrayidx8, align 4, !dbg !6102, !tbaa !1223
  %cmp9 = icmp sge i32 %14, 0, !dbg !6103
  br i1 %cmp9, label %land.lhs.true10, label %cond.false18, !dbg !6104

land.lhs.true10:                                  ; preds = %cond.end
  %15 = load ptr, ptr %ptr.addr, align 8, !dbg !6105, !tbaa !1228
  %arrayidx11 = getelementptr i32, ptr %15, i64 1, !dbg !6105
  %16 = load i32, ptr %arrayidx11, align 4, !dbg !6105, !tbaa !1223
  %cmp12 = icmp slt i32 %16, 255, !dbg !6106
  br i1 %cmp12, label %cond.true13, label %cond.false18, !dbg !6107

cond.true13:                                      ; preds = %land.lhs.true10
  %17 = load ptr, ptr %args.addr, align 8, !dbg !6108, !tbaa !1228
  %pl2prob14 = getelementptr inbounds %struct.args_t, ptr %17, i32 0, i32 42, !dbg !6109
  %18 = load ptr, ptr %ptr.addr, align 8, !dbg !6110, !tbaa !1228
  %arrayidx15 = getelementptr i32, ptr %18, i64 1, !dbg !6110
  %19 = load i32, ptr %arrayidx15, align 4, !dbg !6110, !tbaa !1223
  %idxprom16 = sext i32 %19 to i64, !dbg !6108
  %arrayidx17 = getelementptr [256 x double], ptr %pl2prob14, i64 0, i64 %idxprom16, !dbg !6108
  %20 = load double, ptr %arrayidx17, align 8, !dbg !6108, !tbaa !1761
  br label %cond.end21, !dbg !6107

cond.false18:                                     ; preds = %land.lhs.true10, %cond.end
  %21 = load ptr, ptr %args.addr, align 8, !dbg !6111, !tbaa !1228
  %pl2prob19 = getelementptr inbounds %struct.args_t, ptr %21, i32 0, i32 42, !dbg !6112
  %arrayidx20 = getelementptr [256 x double], ptr %pl2prob19, i64 0, i64 255, !dbg !6111
  %22 = load double, ptr %arrayidx20, align 8, !dbg !6111, !tbaa !1761
  br label %cond.end21, !dbg !6107

cond.end21:                                       ; preds = %cond.false18, %cond.true13
  %cond22 = phi double [ %20, %cond.true13 ], [ %22, %cond.false18 ], !dbg !6107
  %23 = load ptr, ptr %prob.addr, align 8, !dbg !6113, !tbaa !1228
  %arrayidx23 = getelementptr double, ptr %23, i64 1, !dbg !6113
  store double %cond22, ptr %arrayidx23, align 8, !dbg !6114, !tbaa !1761
  %24 = load ptr, ptr %ptr.addr, align 8, !dbg !6115, !tbaa !1228
  %arrayidx24 = getelementptr i32, ptr %24, i64 2, !dbg !6115
  %25 = load i32, ptr %arrayidx24, align 4, !dbg !6115, !tbaa !1223
  %cmp25 = icmp sge i32 %25, 0, !dbg !6116
  br i1 %cmp25, label %land.lhs.true26, label %cond.false34, !dbg !6117

land.lhs.true26:                                  ; preds = %cond.end21
  %26 = load ptr, ptr %ptr.addr, align 8, !dbg !6118, !tbaa !1228
  %arrayidx27 = getelementptr i32, ptr %26, i64 2, !dbg !6118
  %27 = load i32, ptr %arrayidx27, align 4, !dbg !6118, !tbaa !1223
  %cmp28 = icmp slt i32 %27, 255, !dbg !6119
  br i1 %cmp28, label %cond.true29, label %cond.false34, !dbg !6120

cond.true29:                                      ; preds = %land.lhs.true26
  %28 = load ptr, ptr %args.addr, align 8, !dbg !6121, !tbaa !1228
  %pl2prob30 = getelementptr inbounds %struct.args_t, ptr %28, i32 0, i32 42, !dbg !6122
  %29 = load ptr, ptr %ptr.addr, align 8, !dbg !6123, !tbaa !1228
  %arrayidx31 = getelementptr i32, ptr %29, i64 2, !dbg !6123
  %30 = load i32, ptr %arrayidx31, align 4, !dbg !6123, !tbaa !1223
  %idxprom32 = sext i32 %30 to i64, !dbg !6121
  %arrayidx33 = getelementptr [256 x double], ptr %pl2prob30, i64 0, i64 %idxprom32, !dbg !6121
  %31 = load double, ptr %arrayidx33, align 8, !dbg !6121, !tbaa !1761
  br label %cond.end37, !dbg !6120

cond.false34:                                     ; preds = %land.lhs.true26, %cond.end21
  %32 = load ptr, ptr %args.addr, align 8, !dbg !6124, !tbaa !1228
  %pl2prob35 = getelementptr inbounds %struct.args_t, ptr %32, i32 0, i32 42, !dbg !6125
  %arrayidx36 = getelementptr [256 x double], ptr %pl2prob35, i64 0, i64 255, !dbg !6124
  %33 = load double, ptr %arrayidx36, align 8, !dbg !6124, !tbaa !1761
  br label %cond.end37, !dbg !6120

cond.end37:                                       ; preds = %cond.false34, %cond.true29
  %cond38 = phi double [ %31, %cond.true29 ], [ %33, %cond.false34 ], !dbg !6120
  %34 = load ptr, ptr %prob.addr, align 8, !dbg !6126, !tbaa !1228
  %arrayidx39 = getelementptr double, ptr %34, i64 2, !dbg !6126
  store double %cond38, ptr %arrayidx39, align 8, !dbg !6127, !tbaa !1761
  call void @llvm.lifetime.start.p0(i64 8, ptr %sum) #14, !dbg !6128
  tail call void @llvm.dbg.declare(metadata ptr %sum, metadata !6077, metadata !DIExpression()), !dbg !6129
  %35 = load ptr, ptr %prob.addr, align 8, !dbg !6130, !tbaa !1228
  %arrayidx40 = getelementptr double, ptr %35, i64 0, !dbg !6130
  %36 = load double, ptr %arrayidx40, align 8, !dbg !6130, !tbaa !1761
  %37 = load ptr, ptr %prob.addr, align 8, !dbg !6131, !tbaa !1228
  %arrayidx41 = getelementptr double, ptr %37, i64 1, !dbg !6131
  %38 = load double, ptr %arrayidx41, align 8, !dbg !6131, !tbaa !1761
  %add = fadd double %36, %38, !dbg !6132
  %39 = load ptr, ptr %prob.addr, align 8, !dbg !6133, !tbaa !1228
  %arrayidx42 = getelementptr double, ptr %39, i64 2, !dbg !6133
  %40 = load double, ptr %arrayidx42, align 8, !dbg !6133, !tbaa !1761
  %add43 = fadd double %add, %40, !dbg !6134
  store double %add43, ptr %sum, align 8, !dbg !6129, !tbaa !1761
  %41 = load double, ptr %sum, align 8, !dbg !6135, !tbaa !1761
  %42 = load ptr, ptr %prob.addr, align 8, !dbg !6136, !tbaa !1228
  %arrayidx44 = getelementptr double, ptr %42, i64 0, !dbg !6136
  %43 = load double, ptr %arrayidx44, align 8, !dbg !6137, !tbaa !1761
  %div = fdiv double %43, %41, !dbg !6137
  store double %div, ptr %arrayidx44, align 8, !dbg !6137, !tbaa !1761
  %44 = load double, ptr %sum, align 8, !dbg !6138, !tbaa !1761
  %45 = load ptr, ptr %prob.addr, align 8, !dbg !6139, !tbaa !1228
  %arrayidx45 = getelementptr double, ptr %45, i64 1, !dbg !6139
  %46 = load double, ptr %arrayidx45, align 8, !dbg !6140, !tbaa !1761
  %div46 = fdiv double %46, %44, !dbg !6140
  store double %div46, ptr %arrayidx45, align 8, !dbg !6140, !tbaa !1761
  %47 = load double, ptr %sum, align 8, !dbg !6141, !tbaa !1761
  %48 = load ptr, ptr %prob.addr, align 8, !dbg !6142, !tbaa !1228
  %arrayidx47 = getelementptr double, ptr %48, i64 2, !dbg !6142
  %49 = load double, ptr %arrayidx47, align 8, !dbg !6143, !tbaa !1761
  %div48 = fdiv double %49, %47, !dbg !6143
  store double %div48, ptr %arrayidx47, align 8, !dbg !6143, !tbaa !1761
  %50 = load ptr, ptr %prob.addr, align 8, !dbg !6144, !tbaa !1228
  %arrayidx49 = getelementptr double, ptr %50, i64 0, !dbg !6144
  %51 = load double, ptr %arrayidx49, align 8, !dbg !6144, !tbaa !1761
  %call50 = call double @log(double noundef %51) #14, !dbg !6145
  %fneg = fneg double %call50, !dbg !6146
  %52 = load ptr, ptr %prob.addr, align 8, !dbg !6147, !tbaa !1228
  %arrayidx51 = getelementptr double, ptr %52, i64 0, !dbg !6147
  store double %fneg, ptr %arrayidx51, align 8, !dbg !6148, !tbaa !1761
  %53 = load ptr, ptr %prob.addr, align 8, !dbg !6149, !tbaa !1228
  %arrayidx52 = getelementptr double, ptr %53, i64 1, !dbg !6149
  %54 = load double, ptr %arrayidx52, align 8, !dbg !6149, !tbaa !1761
  %call53 = call double @log(double noundef %54) #14, !dbg !6150
  %fneg54 = fneg double %call53, !dbg !6151
  %55 = load ptr, ptr %prob.addr, align 8, !dbg !6152, !tbaa !1228
  %arrayidx55 = getelementptr double, ptr %55, i64 1, !dbg !6152
  store double %fneg54, ptr %arrayidx55, align 8, !dbg !6153, !tbaa !1761
  %56 = load ptr, ptr %prob.addr, align 8, !dbg !6154, !tbaa !1228
  %arrayidx56 = getelementptr double, ptr %56, i64 2, !dbg !6154
  %57 = load double, ptr %arrayidx56, align 8, !dbg !6154, !tbaa !1761
  %call57 = call double @log(double noundef %57) #14, !dbg !6155
  %fneg58 = fneg double %call57, !dbg !6156
  %58 = load ptr, ptr %prob.addr, align 8, !dbg !6157, !tbaa !1228
  %arrayidx59 = getelementptr double, ptr %58, i64 2, !dbg !6157
  store double %fneg58, ptr %arrayidx59, align 8, !dbg !6158, !tbaa !1761
  call void @llvm.lifetime.end.p0(i64 8, ptr %sum) #14, !dbg !6159
  br label %if.end, !dbg !6160

if.end:                                           ; preds = %cond.end37, %entry
  %59 = load i8, ptr %dsg, align 1, !dbg !6161, !tbaa !1312
  call void @llvm.lifetime.end.p0(i64 1, ptr %dsg) #14, !dbg !6162
  ret i8 %59, !dbg !6163
}

declare !dbg !6164 i32 @bcf_get_format_values(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal void @kbs_clear(ptr noundef %bs) #11 !dbg !6167 {
entry:
  %bs.addr = alloca ptr, align 8
  store ptr %bs, ptr %bs.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %bs.addr, metadata !6171, metadata !DIExpression()), !dbg !6172
  %0 = load ptr, ptr %bs.addr, align 8, !dbg !6173, !tbaa !1228
  %b = getelementptr inbounds %struct.kbitset_t, ptr %0, i32 0, i32 2, !dbg !6174
  %arraydecay = getelementptr inbounds [1 x i64], ptr %b, i64 0, i64 0, !dbg !6175
  %1 = load ptr, ptr %bs.addr, align 8, !dbg !6176, !tbaa !1228
  %n = getelementptr inbounds %struct.kbitset_t, ptr %1, i32 0, i32 0, !dbg !6177
  %2 = load i64, ptr %n, align 8, !dbg !6177, !tbaa !5647
  %mul = mul i64 %2, 8, !dbg !6178
  call void @llvm.memset.p0.i64(ptr align 8 %arraydecay, i8 0, i64 %mul, i1 false), !dbg !6175
  ret void, !dbg !6179
}

declare !dbg !6180 i64 @hts_lrand48() #5

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #13

declare !dbg !6183 void @extsort_push(ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal i32 @cmp_idbl(ptr noundef %_a, ptr noundef %_b) #0 !dbg !6186 {
entry:
  %retval = alloca i32, align 4
  %_a.addr = alloca ptr, align 8
  %_b.addr = alloca ptr, align 8
  %a = alloca ptr, align 8
  %b = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %_a, ptr %_a.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %_a.addr, metadata !6188, metadata !DIExpression()), !dbg !6192
  store ptr %_b, ptr %_b.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %_b.addr, metadata !6189, metadata !DIExpression()), !dbg !6193
  call void @llvm.lifetime.start.p0(i64 8, ptr %a) #14, !dbg !6194
  tail call void @llvm.dbg.declare(metadata ptr %a, metadata !6190, metadata !DIExpression()), !dbg !6195
  %0 = load ptr, ptr %_a.addr, align 8, !dbg !6196, !tbaa !1228
  store ptr %0, ptr %a, align 8, !dbg !6195, !tbaa !1228
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #14, !dbg !6197
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !6191, metadata !DIExpression()), !dbg !6198
  %1 = load ptr, ptr %_b.addr, align 8, !dbg !6199, !tbaa !1228
  store ptr %1, ptr %b, align 8, !dbg !6198, !tbaa !1228
  %2 = load ptr, ptr %a, align 8, !dbg !6200, !tbaa !1228
  %val = getelementptr inbounds %struct.idbl_t, ptr %2, i32 0, i32 2, !dbg !6202
  %3 = load double, ptr %val, align 8, !dbg !6202, !tbaa !4422
  %4 = load ptr, ptr %b, align 8, !dbg !6203, !tbaa !1228
  %val1 = getelementptr inbounds %struct.idbl_t, ptr %4, i32 0, i32 2, !dbg !6204
  %5 = load double, ptr %val1, align 8, !dbg !6204, !tbaa !4422
  %cmp = fcmp olt double %3, %5, !dbg !6205
  br i1 %cmp, label %if.then, label %if.end, !dbg !6206

if.then:                                          ; preds = %entry
  store i32 -1, ptr %retval, align 4, !dbg !6207
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6207

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %a, align 8, !dbg !6208, !tbaa !1228
  %val2 = getelementptr inbounds %struct.idbl_t, ptr %6, i32 0, i32 2, !dbg !6210
  %7 = load double, ptr %val2, align 8, !dbg !6210, !tbaa !4422
  %8 = load ptr, ptr %b, align 8, !dbg !6211, !tbaa !1228
  %val3 = getelementptr inbounds %struct.idbl_t, ptr %8, i32 0, i32 2, !dbg !6212
  %9 = load double, ptr %val3, align 8, !dbg !6212, !tbaa !4422
  %cmp4 = fcmp ogt double %7, %9, !dbg !6213
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !6214

if.then5:                                         ; preds = %if.end
  store i32 1, ptr %retval, align 4, !dbg !6215
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6215

if.end6:                                          ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !6216
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6216

cleanup:                                          ; preds = %if.end6, %if.then5, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #14, !dbg !6217
  call void @llvm.lifetime.end.p0(i64 8, ptr %a) #14, !dbg !6217
  %10 = load i32, ptr %retval, align 4, !dbg !6217
  ret i32 %10, !dbg !6217
}

declare !dbg !6218 void @extsort_sort(ptr noundef) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @diff_sites_shift(ptr noundef %args, ptr noundef %ndiff, ptr noundef %rid, ptr noundef %pos) #11 !dbg !6219 {
entry:
  %retval = alloca i32, align 4
  %args.addr = alloca ptr, align 8
  %ndiff.addr = alloca ptr, align 8
  %rid.addr = alloca ptr, align 8
  %pos.addr = alloca ptr, align 8
  %dat = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !6223, metadata !DIExpression()), !dbg !6228
  store ptr %ndiff, ptr %ndiff.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %ndiff.addr, metadata !6224, metadata !DIExpression()), !dbg !6229
  store ptr %rid, ptr %rid.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %rid.addr, metadata !6225, metadata !DIExpression()), !dbg !6230
  store ptr %pos, ptr %pos.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %pos.addr, metadata !6226, metadata !DIExpression()), !dbg !6231
  call void @llvm.lifetime.start.p0(i64 8, ptr %dat) #14, !dbg !6232
  tail call void @llvm.dbg.declare(metadata ptr %dat, metadata !6227, metadata !DIExpression()), !dbg !6233
  %0 = load ptr, ptr %args.addr, align 8, !dbg !6234, !tbaa !1228
  %es = getelementptr inbounds %struct.args_t, ptr %0, i32 0, i32 63, !dbg !6235
  %1 = load ptr, ptr %es, align 8, !dbg !6235, !tbaa !4902
  %call = call ptr @extsort_shift(ptr noundef %1), !dbg !6236
  store ptr %call, ptr %dat, align 8, !dbg !6233, !tbaa !1228
  %2 = load ptr, ptr %dat, align 8, !dbg !6237, !tbaa !1228
  %tobool = icmp ne ptr %2, null, !dbg !6237
  br i1 %tobool, label %if.end, label %if.then, !dbg !6239

if.then:                                          ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !6240
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6240

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %dat, align 8, !dbg !6241, !tbaa !1228
  %ndiff1 = getelementptr inbounds %struct.diff_sites_t, ptr %3, i32 0, i32 0, !dbg !6242
  %4 = load i32, ptr %ndiff1, align 8, !dbg !6242, !tbaa !5574
  %5 = load ptr, ptr %ndiff.addr, align 8, !dbg !6243, !tbaa !1228
  store i32 %4, ptr %5, align 4, !dbg !6244, !tbaa !1223
  %6 = load ptr, ptr %dat, align 8, !dbg !6245, !tbaa !1228
  %rid2 = getelementptr inbounds %struct.diff_sites_t, ptr %6, i32 0, i32 1, !dbg !6246
  %7 = load i32, ptr %rid2, align 4, !dbg !6246, !tbaa !6008
  %8 = load ptr, ptr %rid.addr, align 8, !dbg !6247, !tbaa !1228
  store i32 %7, ptr %8, align 4, !dbg !6248, !tbaa !1223
  %9 = load ptr, ptr %dat, align 8, !dbg !6249, !tbaa !1228
  %pos3 = getelementptr inbounds %struct.diff_sites_t, ptr %9, i32 0, i32 2, !dbg !6250
  %10 = load i32, ptr %pos3, align 8, !dbg !6250, !tbaa !6013
  %11 = load ptr, ptr %pos.addr, align 8, !dbg !6251, !tbaa !1228
  store i32 %10, ptr %11, align 4, !dbg !6252, !tbaa !1223
  %12 = load ptr, ptr %args.addr, align 8, !dbg !6253, !tbaa !1228
  %kbs_diff = getelementptr inbounds %struct.args_t, ptr %12, i32 0, i32 61, !dbg !6254
  %13 = load ptr, ptr %kbs_diff, align 8, !dbg !6254, !tbaa !3308
  %b = getelementptr inbounds %struct.kbitset_t, ptr %13, i32 0, i32 2, !dbg !6255
  %arraydecay = getelementptr inbounds [1 x i64], ptr %b, i64 0, i64 0, !dbg !6256
  %14 = load ptr, ptr %dat, align 8, !dbg !6257, !tbaa !1228
  %kbs_dat = getelementptr inbounds %struct.diff_sites_t, ptr %14, i32 0, i32 4, !dbg !6258
  %arraydecay4 = getelementptr inbounds [1 x i64], ptr %kbs_dat, i64 0, i64 0, !dbg !6256
  %15 = load ptr, ptr %args.addr, align 8, !dbg !6259, !tbaa !1228
  %kbs_diff5 = getelementptr inbounds %struct.args_t, ptr %15, i32 0, i32 61, !dbg !6260
  %16 = load ptr, ptr %kbs_diff5, align 8, !dbg !6260, !tbaa !3308
  %n = getelementptr inbounds %struct.kbitset_t, ptr %16, i32 0, i32 0, !dbg !6261
  %17 = load i64, ptr %n, align 8, !dbg !6261, !tbaa !5647
  %mul = mul i64 %17, 8, !dbg !6262
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %arraydecay, ptr align 8 %arraydecay4, i64 %mul, i1 false), !dbg !6256
  store i32 1, ptr %retval, align 4, !dbg !6263
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6263

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %dat) #14, !dbg !6264
  %18 = load i32, ptr %retval, align 4, !dbg !6264
  ret i32 %18, !dbg !6264
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @kbs_start(ptr noundef %itr) #11 !dbg !6265 {
entry:
  %itr.addr = alloca ptr, align 8
  store ptr %itr, ptr %itr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %itr.addr, metadata !6270, metadata !DIExpression()), !dbg !6271
  %0 = load ptr, ptr %itr.addr, align 8, !dbg !6272, !tbaa !1228
  %mask = getelementptr inbounds %struct.kbitset_iter_t, ptr %0, i32 0, i32 0, !dbg !6273
  store i64 1, ptr %mask, align 8, !dbg !6274, !tbaa !6275
  %1 = load ptr, ptr %itr.addr, align 8, !dbg !6277, !tbaa !1228
  %elt = getelementptr inbounds %struct.kbitset_iter_t, ptr %1, i32 0, i32 1, !dbg !6278
  store i64 0, ptr %elt, align 8, !dbg !6279, !tbaa !6280
  %2 = load ptr, ptr %itr.addr, align 8, !dbg !6281, !tbaa !1228
  %i = getelementptr inbounds %struct.kbitset_iter_t, ptr %2, i32 0, i32 2, !dbg !6282
  store i32 0, ptr %i, align 8, !dbg !6283, !tbaa !6284
  ret void, !dbg !6285
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @kbs_next(ptr noundef %bs, ptr noundef %itr) #11 !dbg !6286 {
entry:
  %retval = alloca i32, align 4
  %bs.addr = alloca ptr, align 8
  %itr.addr = alloca ptr, align 8
  %b = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %bs, ptr %bs.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %bs.addr, metadata !6292, metadata !DIExpression()), !dbg !6295
  store ptr %itr, ptr %itr.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %itr.addr, metadata !6293, metadata !DIExpression()), !dbg !6296
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #14, !dbg !6297
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !6294, metadata !DIExpression()), !dbg !6298
  %0 = load ptr, ptr %bs.addr, align 8, !dbg !6299, !tbaa !1228
  %b1 = getelementptr inbounds %struct.kbitset_t, ptr %0, i32 0, i32 2, !dbg !6300
  %1 = load ptr, ptr %itr.addr, align 8, !dbg !6301, !tbaa !1228
  %elt = getelementptr inbounds %struct.kbitset_iter_t, ptr %1, i32 0, i32 1, !dbg !6302
  %2 = load i64, ptr %elt, align 8, !dbg !6302, !tbaa !6280
  %arrayidx = getelementptr [1 x i64], ptr %b1, i64 0, i64 %2, !dbg !6299
  %3 = load i64, ptr %arrayidx, align 8, !dbg !6299, !tbaa !1818
  store i64 %3, ptr %b, align 8, !dbg !6298, !tbaa !1818
  br label %for.cond, !dbg !6303

for.cond:                                         ; preds = %if.end15, %entry
  %4 = load ptr, ptr %itr.addr, align 8, !dbg !6304, !tbaa !1228
  %mask = getelementptr inbounds %struct.kbitset_iter_t, ptr %4, i32 0, i32 0, !dbg !6309
  %5 = load i64, ptr %mask, align 8, !dbg !6309, !tbaa !6275
  %cmp = icmp eq i64 %5, 0, !dbg !6310
  br i1 %cmp, label %if.then, label %if.end12, !dbg !6311

if.then:                                          ; preds = %for.cond
  br label %while.cond, !dbg !6312

while.cond:                                       ; preds = %while.body, %if.then
  %6 = load ptr, ptr %bs.addr, align 8, !dbg !6314, !tbaa !1228
  %b2 = getelementptr inbounds %struct.kbitset_t, ptr %6, i32 0, i32 2, !dbg !6315
  %7 = load ptr, ptr %itr.addr, align 8, !dbg !6316, !tbaa !1228
  %elt3 = getelementptr inbounds %struct.kbitset_iter_t, ptr %7, i32 0, i32 1, !dbg !6317
  %8 = load i64, ptr %elt3, align 8, !dbg !6318, !tbaa !6280
  %inc = add i64 %8, 1, !dbg !6318
  store i64 %inc, ptr %elt3, align 8, !dbg !6318, !tbaa !6280
  %arrayidx4 = getelementptr [1 x i64], ptr %b2, i64 0, i64 %inc, !dbg !6314
  %9 = load i64, ptr %arrayidx4, align 8, !dbg !6314, !tbaa !1818
  store i64 %9, ptr %b, align 8, !dbg !6319, !tbaa !1818
  %cmp5 = icmp eq i64 %9, 0, !dbg !6320
  br i1 %cmp5, label %while.body, label %while.end, !dbg !6312

while.body:                                       ; preds = %while.cond
  %10 = load ptr, ptr %itr.addr, align 8, !dbg !6321, !tbaa !1228
  %i = getelementptr inbounds %struct.kbitset_iter_t, ptr %10, i32 0, i32 2, !dbg !6322
  %11 = load i32, ptr %i, align 8, !dbg !6323, !tbaa !6284
  %conv = sext i32 %11 to i64, !dbg !6323
  %add = add i64 %conv, 64, !dbg !6323
  %conv6 = trunc i64 %add to i32, !dbg !6323
  store i32 %conv6, ptr %i, align 8, !dbg !6323, !tbaa !6284
  br label %while.cond, !dbg !6312, !llvm.loop !6324

while.end:                                        ; preds = %while.cond
  %12 = load ptr, ptr %itr.addr, align 8, !dbg !6326, !tbaa !1228
  %elt7 = getelementptr inbounds %struct.kbitset_iter_t, ptr %12, i32 0, i32 1, !dbg !6328
  %13 = load i64, ptr %elt7, align 8, !dbg !6328, !tbaa !6280
  %14 = load ptr, ptr %bs.addr, align 8, !dbg !6329, !tbaa !1228
  %n = getelementptr inbounds %struct.kbitset_t, ptr %14, i32 0, i32 0, !dbg !6330
  %15 = load i64, ptr %n, align 8, !dbg !6330, !tbaa !5647
  %cmp8 = icmp eq i64 %13, %15, !dbg !6331
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !6332

if.then10:                                        ; preds = %while.end
  store i32 -1, ptr %retval, align 4, !dbg !6333
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6333

if.end:                                           ; preds = %while.end
  %16 = load ptr, ptr %itr.addr, align 8, !dbg !6334, !tbaa !1228
  %mask11 = getelementptr inbounds %struct.kbitset_iter_t, ptr %16, i32 0, i32 0, !dbg !6335
  store i64 1, ptr %mask11, align 8, !dbg !6336, !tbaa !6275
  br label %if.end12, !dbg !6337

if.end12:                                         ; preds = %if.end, %for.cond
  %17 = load i64, ptr %b, align 8, !dbg !6338, !tbaa !1818
  %18 = load ptr, ptr %itr.addr, align 8, !dbg !6340, !tbaa !1228
  %mask13 = getelementptr inbounds %struct.kbitset_iter_t, ptr %18, i32 0, i32 0, !dbg !6341
  %19 = load i64, ptr %mask13, align 8, !dbg !6341, !tbaa !6275
  %and = and i64 %17, %19, !dbg !6342
  %tobool = icmp ne i64 %and, 0, !dbg !6342
  br i1 %tobool, label %if.then14, label %if.end15, !dbg !6343

if.then14:                                        ; preds = %if.end12
  br label %for.end, !dbg !6344

if.end15:                                         ; preds = %if.end12
  %20 = load ptr, ptr %itr.addr, align 8, !dbg !6345, !tbaa !1228
  %i16 = getelementptr inbounds %struct.kbitset_iter_t, ptr %20, i32 0, i32 2, !dbg !6346
  %21 = load i32, ptr %i16, align 8, !dbg !6347, !tbaa !6284
  %inc17 = add i32 %21, 1, !dbg !6347
  store i32 %inc17, ptr %i16, align 8, !dbg !6347, !tbaa !6284
  %22 = load ptr, ptr %itr.addr, align 8, !dbg !6348, !tbaa !1228
  %mask18 = getelementptr inbounds %struct.kbitset_iter_t, ptr %22, i32 0, i32 0, !dbg !6349
  %23 = load i64, ptr %mask18, align 8, !dbg !6350, !tbaa !6275
  %shl = shl i64 %23, 1, !dbg !6350
  store i64 %shl, ptr %mask18, align 8, !dbg !6350, !tbaa !6275
  br label %for.cond, !dbg !6351, !llvm.loop !6352

for.end:                                          ; preds = %if.then14
  %24 = load ptr, ptr %itr.addr, align 8, !dbg !6355, !tbaa !1228
  %mask19 = getelementptr inbounds %struct.kbitset_iter_t, ptr %24, i32 0, i32 0, !dbg !6356
  %25 = load i64, ptr %mask19, align 8, !dbg !6357, !tbaa !6275
  %shl20 = shl i64 %25, 1, !dbg !6357
  store i64 %shl20, ptr %mask19, align 8, !dbg !6357, !tbaa !6275
  %26 = load ptr, ptr %itr.addr, align 8, !dbg !6358, !tbaa !1228
  %i21 = getelementptr inbounds %struct.kbitset_iter_t, ptr %26, i32 0, i32 2, !dbg !6359
  %27 = load i32, ptr %i21, align 8, !dbg !6360, !tbaa !6284
  %inc22 = add i32 %27, 1, !dbg !6360
  store i32 %inc22, ptr %i21, align 8, !dbg !6360, !tbaa !6284
  store i32 %27, ptr %retval, align 4, !dbg !6361
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6361

cleanup:                                          ; preds = %for.end, %if.then10
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #14, !dbg !6362
  %28 = load i32, ptr %retval, align 4, !dbg !6362
  ret i32 %28, !dbg !6362
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @kbs_exists(ptr noundef %bs, i32 noundef %i) #11 !dbg !6363 {
entry:
  %bs.addr = alloca ptr, align 8
  %i.addr = alloca i32, align 4
  store ptr %bs, ptr %bs.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %bs.addr, metadata !6367, metadata !DIExpression()), !dbg !6369
  store i32 %i, ptr %i.addr, align 4, !tbaa !1223
  tail call void @llvm.dbg.declare(metadata ptr %i.addr, metadata !6368, metadata !DIExpression()), !dbg !6370
  %0 = load ptr, ptr %bs.addr, align 8, !dbg !6371, !tbaa !1228
  %b = getelementptr inbounds %struct.kbitset_t, ptr %0, i32 0, i32 2, !dbg !6372
  %1 = load i32, ptr %i.addr, align 4, !dbg !6373, !tbaa !1223
  %conv = sext i32 %1 to i64, !dbg !6373
  %div = udiv i64 %conv, 64, !dbg !6373
  %arrayidx = getelementptr [1 x i64], ptr %b, i64 0, i64 %div, !dbg !6371
  %2 = load i64, ptr %arrayidx, align 8, !dbg !6371, !tbaa !1818
  %3 = load i32, ptr %i.addr, align 4, !dbg !6374, !tbaa !1223
  %conv1 = sext i32 %3 to i64, !dbg !6374
  %rem = urem i64 %conv1, 64, !dbg !6374
  %shl = shl i64 1, %rem, !dbg !6374
  %and = and i64 %2, %shl, !dbg !6375
  %cmp = icmp ne i64 %and, 0, !dbg !6376
  %conv2 = zext i1 %cmp to i32, !dbg !6376
  ret i32 %conv2, !dbg !6377
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @kbs_destroy(ptr noundef %bs) #11 !dbg !6378 {
entry:
  %bs.addr = alloca ptr, align 8
  store ptr %bs, ptr %bs.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %bs.addr, metadata !6380, metadata !DIExpression()), !dbg !6381
  %0 = load ptr, ptr %bs.addr, align 8, !dbg !6382, !tbaa !1228
  call void @free(ptr noundef %0) #14, !dbg !6383
  ret void, !dbg !6384
}

declare !dbg !6385 ptr @extsort_shift(ptr noundef) #5

declare !dbg !6388 i32 @fclose(ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal void @diff_sites_destroy(ptr noundef %args) #0 !dbg !6389 {
entry:
  %args.addr = alloca ptr, align 8
  store ptr %args, ptr %args.addr, align 8, !tbaa !1228
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !6391, metadata !DIExpression()), !dbg !6392
  %0 = load ptr, ptr %args.addr, align 8, !dbg !6393, !tbaa !1228
  %kbs_diff = getelementptr inbounds %struct.args_t, ptr %0, i32 0, i32 61, !dbg !6394
  %1 = load ptr, ptr %kbs_diff, align 8, !dbg !6394, !tbaa !3308
  call void @kbs_destroy(ptr noundef %1), !dbg !6395
  %2 = load ptr, ptr %args.addr, align 8, !dbg !6396, !tbaa !1228
  %es = getelementptr inbounds %struct.args_t, ptr %2, i32 0, i32 63, !dbg !6397
  %3 = load ptr, ptr %es, align 8, !dbg !6397, !tbaa !4902
  call void @extsort_destroy(ptr noundef %3), !dbg !6398
  ret void, !dbg !6399
}

declare !dbg !6400 void @bcf_sr_destroy(ptr noundef) #5

declare !dbg !6403 void @extsort_destroy(ptr noundef) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #7

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nounwind allocsize(0,1) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #8 = { nounwind allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind allocsize(1) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nounwind willreturn memory(none) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #13 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #14 = { nounwind }
attributes #15 = { nounwind allocsize(0,1) }
attributes #16 = { noreturn }
attributes #17 = { nounwind willreturn memory(read) }
attributes #18 = { nounwind allocsize(0) }
attributes #19 = { nounwind allocsize(1) }
attributes #20 = { nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!20}
!llvm.module.flags = !{!1217, !1218, !1219, !1220, !1221}
!llvm.ident = !{!1222}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1097, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "bcftools/vcfgtcheck.c.pysam.c", directory: "/local-ssd/py-pysam-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z-build/aidengro/spack-stage-py-pysam-0.21.0-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z/spack-src", checksumkind: CSK_MD5, checksum: "b86d81ca82c4d028ab001af608398129")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 176, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 22)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1099, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 40, elements: !10)
!10 = !{!11}
!11 = !DISubrange(count: 5)
!12 = !DIGlobalVariableExpression(var: !13, expr: !DIExpression())
!13 = distinct !DIGlobalVariable(name: "loptions", scope: !14, file: !2, line: 1108, type: !1207, isLocal: true, isDefinition: true)
!14 = distinct !DISubprogram(name: "main_vcfgtcheck", scope: !2, file: !2, line: 1081, type: !15, scopeLine: 1082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !1181)
!15 = !DISubroutineType(types: !16)
!16 = !{!17, !17, !18}
!17 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!20 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !21, retainedTypes: !112, globals: !669, splitDebugInlining: false, nameTableKind: None)
!21 = !{!22, !37, !46, !72, !83, !90, !105}
!22 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !23, line: 155, baseType: !24, size: 32, elements: !25)
!23 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spac/linux-ubuntu22.04-zen2/clang-18.0.0/htslib-1.17-joathgqovfieovrb272nstnjjhsakhcq/include/htslib/synced_bcf_reader.h", directory: "/local-ssd/py-pysam-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z-build", checksumkind: CSK_MD5, checksum: "097b3f9fe44c5b7117419dcfd2bd2058")
!24 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!25 = !{!26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!26 = !DIEnumerator(name: "open_failed", value: 0)
!27 = !DIEnumerator(name: "not_bgzf", value: 1)
!28 = !DIEnumerator(name: "idx_load_failed", value: 2)
!29 = !DIEnumerator(name: "file_type_error", value: 3)
!30 = !DIEnumerator(name: "api_usage_error", value: 4)
!31 = !DIEnumerator(name: "header_error", value: 5)
!32 = !DIEnumerator(name: "no_eof", value: 6)
!33 = !DIEnumerator(name: "no_memory", value: 7)
!34 = !DIEnumerator(name: "vcf_parse_error", value: 8)
!35 = !DIEnumerator(name: "bcf_read_error", value: 9)
!36 = !DIEnumerator(name: "noidx_error", value: 10)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "htsFormatCategory", file: !38, line: 190, baseType: !24, size: 32, elements: !39)
!38 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spac/linux-ubuntu22.04-zen2/clang-18.0.0/htslib-1.17-joathgqovfieovrb272nstnjjhsakhcq/include/htslib/hts.h", directory: "/local-ssd/py-pysam-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z-build", checksumkind: CSK_MD5, checksum: "adf6f1ba47e4dff35287accfb489e3cf")
!39 = !{!40, !41, !42, !43, !44, !45}
!40 = !DIEnumerator(name: "unknown_category", value: 0)
!41 = !DIEnumerator(name: "sequence_data", value: 1)
!42 = !DIEnumerator(name: "variant_data", value: 2)
!43 = !DIEnumerator(name: "index_file", value: 3)
!44 = !DIEnumerator(name: "region_list", value: 4)
!45 = !DIEnumerator(name: "category_maximum", value: 32767)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "htsExactFormat", file: !38, line: 199, baseType: !24, size: 32, elements: !47)
!47 = !{!48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!48 = !DIEnumerator(name: "unknown_format", value: 0)
!49 = !DIEnumerator(name: "binary_format", value: 1)
!50 = !DIEnumerator(name: "text_format", value: 2)
!51 = !DIEnumerator(name: "sam", value: 3)
!52 = !DIEnumerator(name: "bam", value: 4)
!53 = !DIEnumerator(name: "bai", value: 5)
!54 = !DIEnumerator(name: "cram", value: 6)
!55 = !DIEnumerator(name: "crai", value: 7)
!56 = !DIEnumerator(name: "vcf", value: 8)
!57 = !DIEnumerator(name: "bcf", value: 9)
!58 = !DIEnumerator(name: "csi", value: 10)
!59 = !DIEnumerator(name: "gzi", value: 11)
!60 = !DIEnumerator(name: "tbi", value: 12)
!61 = !DIEnumerator(name: "bed", value: 13)
!62 = !DIEnumerator(name: "htsget", value: 14)
!63 = !DIEnumerator(name: "json", value: 14)
!64 = !DIEnumerator(name: "empty_format", value: 15)
!65 = !DIEnumerator(name: "fasta_format", value: 16)
!66 = !DIEnumerator(name: "fastq_format", value: 17)
!67 = !DIEnumerator(name: "fai_format", value: 18)
!68 = !DIEnumerator(name: "fqi_format", value: 19)
!69 = !DIEnumerator(name: "hts_crypt4gh_format", value: 20)
!70 = !DIEnumerator(name: "d4_format", value: 21)
!71 = !DIEnumerator(name: "format_maximum", value: 32767)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "htsCompression", file: !38, line: 212, baseType: !24, size: 32, elements: !73)
!73 = !{!74, !75, !76, !77, !78, !79, !80, !81, !82}
!74 = !DIEnumerator(name: "no_compression", value: 0)
!75 = !DIEnumerator(name: "gzip", value: 1)
!76 = !DIEnumerator(name: "bgzf", value: 2)
!77 = !DIEnumerator(name: "custom", value: 3)
!78 = !DIEnumerator(name: "bzip2_compression", value: 4)
!79 = !DIEnumerator(name: "razf_compression", value: 5)
!80 = !DIEnumerator(name: "xz_compression", value: 6)
!81 = !DIEnumerator(name: "zstd_compression", value: 7)
!82 = !DIEnumerator(name: "compression_maximum", value: 32767)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !23, line: 95, baseType: !24, size: 32, elements: !84)
!84 = !{!85, !86, !87, !88, !89}
!85 = !DIEnumerator(name: "BCF_SR_REQUIRE_IDX", value: 0)
!86 = !DIEnumerator(name: "BCF_SR_PAIR_LOGIC", value: 1)
!87 = !DIEnumerator(name: "BCF_SR_ALLOW_NO_IDX", value: 2)
!88 = !DIEnumerator(name: "BCF_SR_REGIONS_OVERLAP", value: 3)
!89 = !DIEnumerator(name: "BCF_SR_TARGETS_OVERLAP", value: 4)
!90 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !91, line: 46, baseType: !24, size: 32, elements: !92)
!91 = !DIFile(filename: "/usr/include/ctype.h", directory: "", checksumkind: CSK_MD5, checksum: "3ab3dd7fdf2578005732722ee2393e59")
!92 = !{!93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!93 = !DIEnumerator(name: "_ISupper", value: 256)
!94 = !DIEnumerator(name: "_ISlower", value: 512)
!95 = !DIEnumerator(name: "_ISalpha", value: 1024)
!96 = !DIEnumerator(name: "_ISdigit", value: 2048)
!97 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!98 = !DIEnumerator(name: "_ISspace", value: 8192)
!99 = !DIEnumerator(name: "_ISprint", value: 16384)
!100 = !DIEnumerator(name: "_ISgraph", value: 32768)
!101 = !DIEnumerator(name: "_ISblank", value: 1)
!102 = !DIEnumerator(name: "_IScntrl", value: 2)
!103 = !DIEnumerator(name: "_ISpunct", value: 4)
!104 = !DIEnumerator(name: "_ISalnum", value: 8)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 37, baseType: !24, size: 32, elements: !107)
!106 = !DIFile(filename: "bcftools/extsort.h", directory: "/local-ssd/py-pysam-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z-build/aidengro/spack-stage-py-pysam-0.21.0-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z/spack-src", checksumkind: CSK_MD5, checksum: "4d08898ddb805f1db15824e7f7a9b797")
!107 = !{!108, !109, !110, !111}
!108 = !DIEnumerator(name: "DAT_SIZE", value: 0)
!109 = !DIEnumerator(name: "TMP_PREFIX", value: 1)
!110 = !DIEnumerator(name: "MAX_MEM", value: 2)
!111 = !DIEnumerator(name: "FUNC_CMP", value: 3)
!112 = !{!113, !182, !573, !19, !547, !17, !601, !286, !530, !535, !127, !635, !651, !367, !531, !661, !652, !662}
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "args_t", file: !2, line: 82, baseType: !115)
!115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2, line: 56, size: 21056, elements: !116)
!116 = !{!117, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !532, !533, !534, !536, !537, !538, !539, !541, !542, !543, !544, !545, !546, !553, !554, !558, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !627, !628, !629, !630, !631, !632, !633, !634, !644, !645, !649, !650}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !115, file: !2, line: 58, baseType: !118, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_srs_t", file: !23, line: 192, baseType: !120)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bcf_srs_t", file: !23, line: 162, size: 1152, elements: !121)
!121 = !{!122, !123, !124, !125, !126, !128, !130, !449, !450, !451, !452, !453, !488, !489, !490, !491, !492, !493, !494, !503}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !120, file: !23, line: 165, baseType: !17, size: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "apply_filters", scope: !120, file: !23, line: 166, baseType: !19, size: 64, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "require_index", scope: !120, file: !23, line: 171, baseType: !17, size: 32, offset: 128)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "max_unpack", scope: !120, file: !23, line: 172, baseType: !17, size: 32, offset: 160)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "has_line", scope: !120, file: !23, line: 173, baseType: !127, size: 64, offset: 192)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !120, file: !23, line: 174, baseType: !129, size: 32, offset: 256)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_sr_error", file: !23, line: 160, baseType: !22)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !120, file: !23, line: 177, baseType: !131, size: 64, offset: 320)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_sr_t", file: !23, line: 153, baseType: !133)
!133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bcf_sr_t", file: !23, line: 140, size: 768, elements: !134)
!134 = !{!135, !211, !231, !232, !292, !364, !365, !443, !444, !445, !446, !447, !448}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !133, file: !23, line: 142, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "htsFile", file: !38, line: 263, baseType: !138)
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htsFile", file: !38, line: 247, size: 1088, elements: !139)
!139 = !{!140, !145, !146, !147, !148, !149, !150, !155, !166, !167, !168, !181, !183, !198, !202, !205, !208}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin", scope: !138, file: !38, line: 248, baseType: !141, size: 1, flags: DIFlagBitField, extraData: i64 0)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !142, line: 26, baseType: !143)
!142 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !144, line: 42, baseType: !24)
!144 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!145 = !DIDerivedType(tag: DW_TAG_member, name: "is_write", scope: !138, file: !38, line: 248, baseType: !141, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "is_be", scope: !138, file: !38, line: 248, baseType: !141, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "is_cram", scope: !138, file: !38, line: 248, baseType: !141, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "is_bgzf", scope: !138, file: !38, line: 248, baseType: !141, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !138, file: !38, line: 248, baseType: !141, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "lineno", scope: !138, file: !38, line: 249, baseType: !151, size: 64, offset: 64)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !152, line: 27, baseType: !153)
!152 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!153 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !144, line: 44, baseType: !154)
!154 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !138, file: !38, line: 250, baseType: !156, size: 192, offset: 128)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "kstring_t", file: !157, line: 78, baseType: !158)
!157 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spac/linux-ubuntu22.04-zen2/clang-18.0.0/htslib-1.17-joathgqovfieovrb272nstnjjhsakhcq/include/htslib/kstring.h", directory: "/local-ssd/py-pysam-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z-build", checksumkind: CSK_MD5, checksum: "203874d61436e17956eb647b81536b7f")
!158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstring_t", file: !157, line: 75, size: 192, elements: !159)
!159 = !{!160, !164, !165}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !158, file: !157, line: 76, baseType: !161, size: 64)
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !162, line: 70, baseType: !163)
!162 = !DIFile(filename: "/usr/lib/clang/18/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "592de6c0120e294e25519119517dd24e")
!163 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !158, file: !157, line: 76, baseType: !161, size: 64, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !158, file: !157, line: 77, baseType: !19, size: 64, offset: 128)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !138, file: !38, line: 251, baseType: !19, size: 64, offset: 320)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "fn_aux", scope: !138, file: !38, line: 251, baseType: !19, size: 64, offset: 384)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !138, file: !38, line: 256, baseType: !169, size: 64, offset: 448)
!169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !38, line: 252, size: 64, elements: !170)
!170 = !{!171, !175, !178}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "bgzf", scope: !169, file: !38, line: 253, baseType: !172, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "BGZF", file: !38, line: 54, baseType: !174)
!174 = !DICompositeType(tag: DW_TAG_structure_type, name: "BGZF", file: !38, line: 54, flags: DIFlagFwdDecl)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "cram", scope: !169, file: !38, line: 254, baseType: !176, size: 64)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!177 = !DICompositeType(tag: DW_TAG_structure_type, name: "cram_fd", file: !38, line: 57, flags: DIFlagFwdDecl)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "hfile", scope: !169, file: !38, line: 255, baseType: !179, size: 64)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = !DICompositeType(tag: DW_TAG_structure_type, name: "hFILE", file: !38, line: 58, flags: DIFlagFwdDecl)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !138, file: !38, line: 257, baseType: !182, size: 64, offset: 512)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !138, file: !38, line: 258, baseType: !184, size: 256, offset: 576)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "htsFormat", file: !38, line: 225, baseType: !185)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htsFormat", file: !38, line: 218, size: 256, elements: !186)
!186 = !{!187, !188, !189, !195, !196, !197}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !185, file: !38, line: 219, baseType: !37, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !185, file: !38, line: 220, baseType: !46, size: 32, offset: 32)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !185, file: !38, line: 221, baseType: !190, size: 32, offset: 64)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !185, file: !38, line: 221, size: 32, elements: !191)
!191 = !{!192, !194}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !190, file: !38, line: 221, baseType: !193, size: 16)
!193 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !190, file: !38, line: 221, baseType: !193, size: 16, offset: 16)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !185, file: !38, line: 222, baseType: !72, size: 32, offset: 96)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !185, file: !38, line: 223, baseType: !193, size: 16, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "specific", scope: !185, file: !38, line: 224, baseType: !182, size: 64, offset: 192)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !138, file: !38, line: 259, baseType: !199, size: 64, offset: 832)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "hts_idx_t", file: !38, line: 228, baseType: !201)
!201 = !DICompositeType(tag: DW_TAG_structure_type, name: "hts_idx_t", file: !38, line: 227, flags: DIFlagFwdDecl)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "fnidx", scope: !138, file: !38, line: 260, baseType: !203, size: 64, offset: 896)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "bam_header", scope: !138, file: !38, line: 261, baseType: !206, size: 64, offset: 960)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!207 = !DICompositeType(tag: DW_TAG_structure_type, name: "sam_hdr_t", file: !38, line: 60, flags: DIFlagFwdDecl)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !138, file: !38, line: 262, baseType: !209, size: 64, offset: 1024)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = !DICompositeType(tag: DW_TAG_structure_type, name: "hts_filter_t", file: !38, line: 229, flags: DIFlagFwdDecl)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "tbx_idx", scope: !133, file: !23, line: 143, baseType: !212, size: 64, offset: 64)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "tbx_t", file: !214, line: 53, baseType: !215)
!214 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spac/linux-ubuntu22.04-zen2/clang-18.0.0/htslib-1.17-joathgqovfieovrb272nstnjjhsakhcq/include/htslib/tbx.h", directory: "/local-ssd/py-pysam-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z-build", checksumkind: CSK_MD5, checksum: "7c2cd3d16fa26876408e65df21898fcf")
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tbx_t", file: !214, line: 49, size: 320, elements: !216)
!216 = !{!217, !229, !230}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "conf", scope: !215, file: !214, line: 50, baseType: !218, size: 192)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "tbx_conf_t", file: !214, line: 47, baseType: !219)
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tbx_conf_t", file: !214, line: 43, size: 192, elements: !220)
!220 = !{!221, !224, !225, !226, !227, !228}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !219, file: !214, line: 44, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !152, line: 26, baseType: !223)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !144, line: 41, baseType: !17)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "sc", scope: !219, file: !214, line: 45, baseType: !222, size: 32, offset: 32)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "bc", scope: !219, file: !214, line: 45, baseType: !222, size: 32, offset: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !219, file: !214, line: 45, baseType: !222, size: 32, offset: 96)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "meta_char", scope: !219, file: !214, line: 46, baseType: !222, size: 32, offset: 128)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "line_skip", scope: !219, file: !214, line: 46, baseType: !222, size: 32, offset: 160)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !215, file: !214, line: 51, baseType: !199, size: 64, offset: 192)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !215, file: !214, line: 52, baseType: !182, size: 64, offset: 256)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "bcf_idx", scope: !133, file: !23, line: 144, baseType: !199, size: 64, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !133, file: !23, line: 145, baseType: !233, size: 64, offset: 192)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_hdr_t", file: !235, line: 124, baseType: !236)
!235 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spac/linux-ubuntu22.04-zen2/clang-18.0.0/htslib-1.17-joathgqovfieovrb272nstnjjhsakhcq/include/htslib/vcf.h", directory: "/local-ssd/py-pysam-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z-build", checksumkind: CSK_MD5, checksum: "402c33c8f02f3a9e467f211ac1d8ffb8")
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bcf_hdr_t", file: !235, line: 112, size: 1344, elements: !237)
!237 = !{!238, !242, !272, !274, !275, !277, !278, !279, !280, !284, !285, !290, !291}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !236, file: !235, line: 113, baseType: !239, size: 96)
!239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !222, size: 96, elements: !240)
!240 = !{!241}
!241 = !DISubrange(count: 3)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !236, file: !235, line: 114, baseType: !243, size: 192, offset: 128)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !244, size: 192, elements: !240)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_idpair_t", file: !235, line: 109, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bcf_idpair_t", file: !235, line: 106, size: 128, elements: !247)
!247 = !{!248, !249}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !246, file: !235, line: 107, baseType: !203, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !246, file: !235, line: 108, baseType: !250, size: 64, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_idinfo_t", file: !235, line: 104, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bcf_idinfo_t", file: !235, line: 99, size: 448, elements: !254)
!254 = !{!255, !259, !271}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !253, file: !235, line: 100, baseType: !256, size: 192)
!256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 192, elements: !240)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !142, line: 27, baseType: !258)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !144, line: 45, baseType: !163)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "hrec", scope: !253, file: !235, line: 102, baseType: !260, size: 192, offset: 192)
!260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 192, elements: !240)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_hrec_t", file: !235, line: 97, baseType: !263)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bcf_hrec_t", file: !235, line: 91, size: 384, elements: !264)
!264 = !{!265, !266, !267, !268, !269, !270}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !263, file: !235, line: 92, baseType: !17, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !263, file: !235, line: 93, baseType: !19, size: 64, offset: 64)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !263, file: !235, line: 94, baseType: !19, size: 64, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "nkeys", scope: !263, file: !235, line: 95, baseType: !17, size: 32, offset: 192)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !263, file: !235, line: 96, baseType: !18, size: 64, offset: 256)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "vals", scope: !263, file: !235, line: 96, baseType: !18, size: 64, offset: 320)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !253, file: !235, line: 103, baseType: !17, size: 32, offset: 384)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !236, file: !235, line: 115, baseType: !273, size: 192, offset: 320)
!273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 192, elements: !240)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !236, file: !235, line: 116, baseType: !18, size: 64, offset: 512)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "hrec", scope: !236, file: !235, line: 117, baseType: !276, size: 64, offset: 576)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "nhrec", scope: !236, file: !235, line: 118, baseType: !17, size: 32, offset: 640)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !236, file: !235, line: 118, baseType: !17, size: 32, offset: 672)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "ntransl", scope: !236, file: !235, line: 119, baseType: !17, size: 32, offset: 704)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "transl", scope: !236, file: !235, line: 119, baseType: !281, size: 128, offset: 768)
!281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 128, elements: !282)
!282 = !{!283}
!283 = !DISubrange(count: 2)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "nsamples_ori", scope: !236, file: !235, line: 120, baseType: !17, size: 32, offset: 896)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "keep_samples", scope: !236, file: !235, line: 121, baseType: !286, size: 64, offset: 960)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !142, line: 24, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !144, line: 38, baseType: !289)
!289 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !236, file: !235, line: 122, baseType: !156, size: 192, offset: 1024)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !236, file: !235, line: 123, baseType: !239, size: 96, offset: 1216)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "itr", scope: !133, file: !23, line: 146, baseType: !293, size: 64, offset: 256)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "hts_itr_t", file: !38, line: 882, baseType: !295)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hts_itr_t", file: !38, line: 866, size: 1152, elements: !296)
!296 = !{!297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !309, !310, !327, !328, !329, !330, !331, !332, !333, !334, !342, !348, !353, !358}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "read_rest", scope: !295, file: !38, line: 867, baseType: !141, size: 1, flags: DIFlagBitField, extraData: i64 0)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "finished", scope: !295, file: !38, line: 867, baseType: !141, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "is_cram", scope: !295, file: !38, line: 867, baseType: !141, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "nocoor", scope: !295, file: !38, line: 867, baseType: !141, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "multi", scope: !295, file: !38, line: 867, baseType: !141, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !295, file: !38, line: 867, baseType: !141, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !295, file: !38, line: 868, baseType: !17, size: 32, offset: 32)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "n_off", scope: !295, file: !38, line: 868, baseType: !17, size: 32, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !295, file: !38, line: 868, baseType: !17, size: 32, offset: 96)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "n_reg", scope: !295, file: !38, line: 868, baseType: !17, size: 32, offset: 128)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "beg", scope: !295, file: !38, line: 869, baseType: !308, size: 64, offset: 192)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "hts_pos_t", file: !38, line: 791, baseType: !151)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !295, file: !38, line: 869, baseType: !308, size: 64, offset: 256)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "reg_list", scope: !295, file: !38, line: 870, baseType: !311, size: 64, offset: 320)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "hts_reglist_t", file: !38, line: 821, baseType: !313)
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hts_reglist_t", file: !38, line: 815, size: 320, elements: !314)
!314 = !{!315, !316, !323, !324, !325, !326}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !313, file: !38, line: 816, baseType: !203, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "intervals", scope: !313, file: !38, line: 817, baseType: !317, size: 64, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "hts_pair_pos_t", file: !38, line: 802, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hts_pair_pos_t", file: !38, line: 800, size: 128, elements: !320)
!320 = !{!321, !322}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "beg", scope: !319, file: !38, line: 801, baseType: !308, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !319, file: !38, line: 801, baseType: !308, size: 64, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !313, file: !38, line: 818, baseType: !17, size: 32, offset: 128)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !313, file: !38, line: 819, baseType: !141, size: 32, offset: 160)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "min_beg", scope: !313, file: !38, line: 820, baseType: !308, size: 64, offset: 192)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "max_end", scope: !313, file: !38, line: 820, baseType: !308, size: 64, offset: 256)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "curr_tid", scope: !295, file: !38, line: 871, baseType: !17, size: 32, offset: 384)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "curr_reg", scope: !295, file: !38, line: 871, baseType: !17, size: 32, offset: 416)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "curr_intv", scope: !295, file: !38, line: 871, baseType: !17, size: 32, offset: 448)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "curr_beg", scope: !295, file: !38, line: 872, baseType: !308, size: 64, offset: 512)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "curr_end", scope: !295, file: !38, line: 872, baseType: !308, size: 64, offset: 576)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "curr_off", scope: !295, file: !38, line: 873, baseType: !257, size: 64, offset: 640)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "nocoor_off", scope: !295, file: !38, line: 873, baseType: !257, size: 64, offset: 704)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !295, file: !38, line: 874, baseType: !335, size: 64, offset: 768)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "hts_pair64_max_t", file: !38, line: 813, baseType: !337)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hts_pair64_max_t", file: !38, line: 810, size: 192, elements: !338)
!338 = !{!339, !340, !341}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !337, file: !38, line: 811, baseType: !257, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !337, file: !38, line: 811, baseType: !257, size: 64, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !337, file: !38, line: 812, baseType: !257, size: 64, offset: 128)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "readrec", scope: !295, file: !38, line: 875, baseType: !343, size: 64, offset: 832)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "hts_readrec_func", file: !38, line: 823, baseType: !345)
!345 = !DISubroutineType(types: !346)
!346 = !{!17, !172, !182, !182, !127, !347, !347}
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "seek", scope: !295, file: !38, line: 876, baseType: !349, size: 64, offset: 896)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "hts_seek_func", file: !38, line: 824, baseType: !351)
!351 = !DISubroutineType(types: !352)
!352 = !{!17, !182, !151, !17}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tell", scope: !295, file: !38, line: 877, baseType: !354, size: 64, offset: 960)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "hts_tell_func", file: !38, line: 825, baseType: !356)
!356 = !DISubroutineType(types: !357)
!357 = !{!151, !182}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "bins", scope: !295, file: !38, line: 881, baseType: !359, size: 128, offset: 1024)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !295, file: !38, line: 878, size: 128, elements: !360)
!360 = !{!361, !362, !363}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !359, file: !38, line: 879, baseType: !17, size: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !359, file: !38, line: 879, baseType: !17, size: 32, offset: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !359, file: !38, line: 880, baseType: !127, size: 64, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "fname", scope: !133, file: !23, line: 147, baseType: !19, size: 64, offset: 320)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !133, file: !23, line: 148, baseType: !366, size: 64, offset: 384)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf1_t", file: !235, line: 248, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bcf1_t", file: !235, line: 235, size: 1664, elements: !370)
!370 = !{!371, !372, !373, !374, !376, !377, !378, !379, !380, !381, !382, !438, !439, !440, !442}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !369, file: !235, line: 236, baseType: !308, size: 64)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "rlen", scope: !369, file: !235, line: 237, baseType: !308, size: 64, offset: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "rid", scope: !369, file: !235, line: 238, baseType: !222, size: 32, offset: 128)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "qual", scope: !369, file: !235, line: 239, baseType: !375, size: 32, offset: 160)
!375 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "n_info", scope: !369, file: !235, line: 240, baseType: !141, size: 16, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "n_allele", scope: !369, file: !235, line: 240, baseType: !141, size: 16, offset: 208, flags: DIFlagBitField, extraData: i64 192)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "n_fmt", scope: !369, file: !235, line: 241, baseType: !141, size: 8, offset: 224, flags: DIFlagBitField, extraData: i64 192)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "n_sample", scope: !369, file: !235, line: 241, baseType: !141, size: 24, offset: 232, flags: DIFlagBitField, extraData: i64 192)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !369, file: !235, line: 242, baseType: !156, size: 192, offset: 256)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "indiv", scope: !369, file: !235, line: 242, baseType: !156, size: 192, offset: 448)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !369, file: !235, line: 243, baseType: !383, size: 832, offset: 640)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_dec_t", file: !235, line: 197, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bcf_dec_t", file: !235, line: 185, size: 832, elements: !385)
!385 = !{!386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !414, !427, !434, !435, !436, !437}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "m_fmt", scope: !384, file: !235, line: 186, baseType: !17, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "m_info", scope: !384, file: !235, line: 186, baseType: !17, size: 32, offset: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "m_id", scope: !384, file: !235, line: 186, baseType: !17, size: 32, offset: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "m_als", scope: !384, file: !235, line: 186, baseType: !17, size: 32, offset: 96)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "m_allele", scope: !384, file: !235, line: 186, baseType: !17, size: 32, offset: 128)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "m_flt", scope: !384, file: !235, line: 186, baseType: !17, size: 32, offset: 160)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "n_flt", scope: !384, file: !235, line: 187, baseType: !17, size: 32, offset: 192)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "flt", scope: !384, file: !235, line: 188, baseType: !127, size: 64, offset: 256)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !384, file: !235, line: 189, baseType: !19, size: 64, offset: 320)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "als", scope: !384, file: !235, line: 189, baseType: !19, size: 64, offset: 384)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "allele", scope: !384, file: !235, line: 190, baseType: !18, size: 64, offset: 448)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !384, file: !235, line: 191, baseType: !398, size: 64, offset: 512)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_info_t", file: !235, line: 177, baseType: !400)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bcf_info_t", file: !235, line: 164, size: 320, elements: !401)
!401 = !{!402, !403, !404, !409, !410, !411, !412, !413}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !400, file: !235, line: 165, baseType: !17, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !400, file: !235, line: 166, baseType: !17, size: 32, offset: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !400, file: !235, line: 170, baseType: !405, size: 64, offset: 64)
!405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !400, file: !235, line: 167, size: 64, elements: !406)
!406 = !{!407, !408}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !405, file: !235, line: 168, baseType: !151, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !405, file: !235, line: 169, baseType: !375, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "vptr", scope: !400, file: !235, line: 171, baseType: !286, size: 64, offset: 128)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_len", scope: !400, file: !235, line: 172, baseType: !141, size: 32, offset: 192)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_off", scope: !400, file: !235, line: 173, baseType: !141, size: 31, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_free", scope: !400, file: !235, line: 174, baseType: !141, size: 1, offset: 255, flags: DIFlagBitField, extraData: i64 224)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !400, file: !235, line: 176, baseType: !17, size: 32, offset: 256)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !384, file: !235, line: 192, baseType: !415, size: 64, offset: 576)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_fmt_t", file: !235, line: 162, baseType: !417)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bcf_fmt_t", file: !235, line: 156, size: 256, elements: !418)
!418 = !{!419, !420, !421, !422, !423, !424, !425, !426}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !417, file: !235, line: 157, baseType: !17, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !417, file: !235, line: 158, baseType: !17, size: 32, offset: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !417, file: !235, line: 158, baseType: !17, size: 32, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !417, file: !235, line: 158, baseType: !17, size: 32, offset: 96)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !417, file: !235, line: 159, baseType: !286, size: 64, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "p_len", scope: !417, file: !235, line: 160, baseType: !141, size: 32, offset: 192)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "p_off", scope: !417, file: !235, line: 161, baseType: !141, size: 31, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "p_free", scope: !417, file: !235, line: 161, baseType: !141, size: 1, offset: 255, flags: DIFlagBitField, extraData: i64 224)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !384, file: !235, line: 193, baseType: !428, size: 64, offset: 640)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_variant_t", file: !235, line: 154, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bcf_variant_t", file: !235, line: 152, size: 64, elements: !431)
!431 = !{!432, !433}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !430, file: !235, line: 153, baseType: !17, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !430, file: !235, line: 153, baseType: !17, size: 32, offset: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "n_var", scope: !384, file: !235, line: 194, baseType: !17, size: 32, offset: 704)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "var_type", scope: !384, file: !235, line: 194, baseType: !17, size: 32, offset: 736)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "shared_dirty", scope: !384, file: !235, line: 195, baseType: !17, size: 32, offset: 768)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "indiv_dirty", scope: !384, file: !235, line: 196, baseType: !17, size: 32, offset: 800)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "max_unpack", scope: !369, file: !235, line: 244, baseType: !17, size: 32, offset: 1472)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "unpacked", scope: !369, file: !235, line: 245, baseType: !17, size: 32, offset: 1504)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "unpack_size", scope: !369, file: !235, line: 246, baseType: !441, size: 96, offset: 1536)
!441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 96, elements: !240)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "errcode", scope: !369, file: !235, line: 247, baseType: !17, size: 32, offset: 1632)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "nbuffer", scope: !133, file: !23, line: 149, baseType: !17, size: 32, offset: 448)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "mbuffer", scope: !133, file: !23, line: 149, baseType: !17, size: 32, offset: 480)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "nfilter_ids", scope: !133, file: !23, line: 150, baseType: !17, size: 32, offset: 512)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "filter_ids", scope: !133, file: !23, line: 150, baseType: !127, size: 64, offset: 576)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !133, file: !23, line: 151, baseType: !127, size: 64, offset: 640)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "n_smpl", scope: !133, file: !23, line: 151, baseType: !17, size: 32, offset: 704)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "nreaders", scope: !120, file: !23, line: 178, baseType: !17, size: 32, offset: 384)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "streaming", scope: !120, file: !23, line: 179, baseType: !17, size: 32, offset: 416)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_regs", scope: !120, file: !23, line: 180, baseType: !17, size: 32, offset: 448)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !120, file: !23, line: 181, baseType: !18, size: 64, offset: 512)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "regions", scope: !120, file: !23, line: 182, baseType: !454, size: 64, offset: 576)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_sr_regions_t", file: !23, line: 138, baseType: !456)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bcf_sr_regions_t", file: !23, line: 107, size: 1664, elements: !457)
!457 = !{!458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !474, !475, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "tbx", scope: !456, file: !23, line: 110, baseType: !212, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "itr", scope: !456, file: !23, line: 111, baseType: !293, size: 64, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !456, file: !23, line: 112, baseType: !156, size: 192, offset: 128)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !456, file: !23, line: 113, baseType: !136, size: 64, offset: 320)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "fname", scope: !456, file: !23, line: 114, baseType: !19, size: 64, offset: 384)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin", scope: !456, file: !23, line: 115, baseType: !17, size: 32, offset: 448)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "als", scope: !456, file: !23, line: 116, baseType: !18, size: 64, offset: 512)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "als_str", scope: !456, file: !23, line: 117, baseType: !156, size: 192, offset: 576)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "nals", scope: !456, file: !23, line: 118, baseType: !17, size: 32, offset: 768)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "mals", scope: !456, file: !23, line: 118, baseType: !17, size: 32, offset: 800)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "als_type", scope: !456, file: !23, line: 119, baseType: !17, size: 32, offset: 832)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "missed_reg_handler", scope: !456, file: !23, line: 122, baseType: !470, size: 64, offset: 896)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DISubroutineType(types: !472)
!472 = !{null, !473, !182}
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "missed_reg_data", scope: !456, file: !23, line: 123, baseType: !182, size: 64, offset: 960)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !456, file: !23, line: 126, baseType: !476, size: 64, offset: 1024)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = !DICompositeType(tag: DW_TAG_structure_type, name: "bcf_sr_region_t", file: !23, line: 105, flags: DIFlagFwdDecl)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "seq_hash", scope: !456, file: !23, line: 129, baseType: !182, size: 64, offset: 1088)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "seq_names", scope: !456, file: !23, line: 130, baseType: !18, size: 64, offset: 1152)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "nseqs", scope: !456, file: !23, line: 131, baseType: !17, size: 32, offset: 1216)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "iseq", scope: !456, file: !23, line: 132, baseType: !17, size: 32, offset: 1248)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !456, file: !23, line: 133, baseType: !308, size: 64, offset: 1280)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !456, file: !23, line: 133, baseType: !308, size: 64, offset: 1344)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !456, file: !23, line: 134, baseType: !17, size: 32, offset: 1408)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "prev_start", scope: !456, file: !23, line: 135, baseType: !308, size: 64, offset: 1472)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "prev_end", scope: !456, file: !23, line: 135, baseType: !308, size: 64, offset: 1536)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !456, file: !23, line: 136, baseType: !17, size: 32, offset: 1600)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !120, file: !23, line: 182, baseType: !454, size: 64, offset: 640)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "targets_als", scope: !120, file: !23, line: 183, baseType: !17, size: 32, offset: 704)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "targets_exclude", scope: !120, file: !23, line: 184, baseType: !17, size: 32, offset: 736)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "tmps", scope: !120, file: !23, line: 185, baseType: !156, size: 192, offset: 768)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "n_smpl", scope: !120, file: !23, line: 186, baseType: !17, size: 32, offset: 960)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "n_threads", scope: !120, file: !23, line: 188, baseType: !17, size: 32, offset: 992)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !120, file: !23, line: 189, baseType: !495, size: 64, offset: 1024)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "htsThreadPool", file: !38, line: 275, baseType: !497)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htsThreadPool", file: !38, line: 272, size: 128, elements: !498)
!498 = !{!499, !502}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !497, file: !38, line: 273, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DICompositeType(tag: DW_TAG_structure_type, name: "hts_tpool", file: !38, line: 59, flags: DIFlagFwdDecl)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !497, file: !38, line: 274, baseType: !17, size: 32, offset: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !120, file: !23, line: 190, baseType: !182, size: 64, offset: 1088)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "gt_hdr", scope: !115, file: !2, line: 59, baseType: !233, size: 64, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "qry_hdr", scope: !115, file: !2, line: 59, baseType: !233, size: 64, offset: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !115, file: !2, line: 60, baseType: !19, size: 64, offset: 192)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !115, file: !2, line: 60, baseType: !18, size: 64, offset: 256)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "gt_samples", scope: !115, file: !2, line: 60, baseType: !19, size: 64, offset: 320)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "qry_samples", scope: !115, file: !2, line: 60, baseType: !19, size: 64, offset: 384)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "regions", scope: !115, file: !2, line: 60, baseType: !19, size: 64, offset: 448)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !115, file: !2, line: 60, baseType: !19, size: 64, offset: 512)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "qry_fname", scope: !115, file: !2, line: 60, baseType: !19, size: 64, offset: 576)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "gt_fname", scope: !115, file: !2, line: 60, baseType: !19, size: 64, offset: 640)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "pair_samples", scope: !115, file: !2, line: 60, baseType: !19, size: 64, offset: 704)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !115, file: !2, line: 61, baseType: !17, size: 32, offset: 768)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "gt_samples_is_file", scope: !115, file: !2, line: 61, baseType: !17, size: 32, offset: 800)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "qry_samples_is_file", scope: !115, file: !2, line: 61, baseType: !17, size: 32, offset: 832)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "regions_is_file", scope: !115, file: !2, line: 61, baseType: !17, size: 32, offset: 864)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "targets_is_file", scope: !115, file: !2, line: 61, baseType: !17, size: 32, offset: 896)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "pair_samples_is_file", scope: !115, file: !2, line: 61, baseType: !17, size: 32, offset: 928)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "regions_overlap", scope: !115, file: !2, line: 62, baseType: !17, size: 32, offset: 960)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "targets_overlap", scope: !115, file: !2, line: 62, baseType: !17, size: 32, offset: 992)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "qry_use_GT", scope: !115, file: !2, line: 63, baseType: !17, size: 32, offset: 1024)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "gt_use_GT", scope: !115, file: !2, line: 63, baseType: !17, size: 32, offset: 1056)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "nqry_smpl", scope: !115, file: !2, line: 63, baseType: !17, size: 32, offset: 1088)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "ngt_smpl", scope: !115, file: !2, line: 63, baseType: !17, size: 32, offset: 1120)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "qry_smpl", scope: !115, file: !2, line: 63, baseType: !127, size: 64, offset: 1152)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "gt_smpl", scope: !115, file: !2, line: 63, baseType: !127, size: 64, offset: 1216)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "pdiff", scope: !115, file: !2, line: 64, baseType: !530, size: 64, offset: 1280)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "qry_prob", scope: !115, file: !2, line: 64, baseType: !530, size: 64, offset: 1344)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "gt_prob", scope: !115, file: !2, line: 64, baseType: !530, size: 64, offset: 1408)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ndiff", scope: !115, file: !2, line: 65, baseType: !535, size: 64, offset: 1472)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ncnt", scope: !115, file: !2, line: 65, baseType: !535, size: 64, offset: 1536)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "ncmp", scope: !115, file: !2, line: 65, baseType: !141, size: 32, offset: 1600)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "npairs", scope: !115, file: !2, line: 65, baseType: !141, size: 32, offset: 1632)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "qry_arr", scope: !115, file: !2, line: 66, baseType: !540, size: 64, offset: 1664)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "gt_arr", scope: !115, file: !2, line: 66, baseType: !540, size: 64, offset: 1728)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "nqry_arr", scope: !115, file: !2, line: 66, baseType: !222, size: 32, offset: 1792)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "ngt_arr", scope: !115, file: !2, line: 66, baseType: !222, size: 32, offset: 1824)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "qry_dsg", scope: !115, file: !2, line: 67, baseType: !286, size: 64, offset: 1856)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "gt_dsg", scope: !115, file: !2, line: 67, baseType: !286, size: 64, offset: 1920)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "pairs", scope: !115, file: !2, line: 68, baseType: !547, size: 64, offset: 1984)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "pair_t", file: !2, line: 54, baseType: !549)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2, line: 50, size: 64, elements: !550)
!550 = !{!551, !552}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "iqry", scope: !549, file: !2, line: 52, baseType: !17, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "igt", scope: !549, file: !2, line: 52, baseType: !17, size: 32, offset: 32)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "hwe_prob", scope: !115, file: !2, line: 69, baseType: !530, size: 64, offset: 2048)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "dsg2prob", scope: !115, file: !2, line: 69, baseType: !555, size: 1536, offset: 2112)
!555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 1536, elements: !556)
!556 = !{!557, !241}
!557 = !DISubrange(count: 8)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "pl2prob", scope: !115, file: !2, line: 69, baseType: !559, size: 16384, offset: 3648)
!559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 16384, elements: !560)
!560 = !{!561}
!561 = !DISubrange(count: 256)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "min_inter_err", scope: !115, file: !2, line: 70, baseType: !531, size: 64, offset: 20032)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "max_intra_err", scope: !115, file: !2, line: 70, baseType: !531, size: 64, offset: 20096)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "all_sites", scope: !115, file: !2, line: 71, baseType: !17, size: 32, offset: 20160)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "hom_only", scope: !115, file: !2, line: 71, baseType: !17, size: 32, offset: 20192)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "ntop", scope: !115, file: !2, line: 71, baseType: !17, size: 32, offset: 20224)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "cross_check", scope: !115, file: !2, line: 71, baseType: !17, size: 32, offset: 20256)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "calc_hwe_prob", scope: !115, file: !2, line: 71, baseType: !17, size: 32, offset: 20288)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "sort_by_hwe", scope: !115, file: !2, line: 71, baseType: !17, size: 32, offset: 20320)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "dry_run", scope: !115, file: !2, line: 71, baseType: !17, size: 32, offset: 20352)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "use_PLs", scope: !115, file: !2, line: 71, baseType: !17, size: 32, offset: 20384)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !115, file: !2, line: 72, baseType: !573, size: 64, offset: 20416)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !575, line: 7, baseType: !576)
!575 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "571f9fb6223c42439075fdde11a0de5d")
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !577, line: 49, size: 1728, elements: !578)
!577 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "", checksumkind: CSK_MD5, checksum: "1bad07471b7974df4ecc1d1c2ca207e6")
!578 = !{!579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !594, !596, !597, !598, !600, !602, !604, !608, !611, !613, !616, !619, !620, !621, !622, !623}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !576, file: !577, line: 51, baseType: !17, size: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !576, file: !577, line: 54, baseType: !19, size: 64, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !576, file: !577, line: 55, baseType: !19, size: 64, offset: 128)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !576, file: !577, line: 56, baseType: !19, size: 64, offset: 192)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !576, file: !577, line: 57, baseType: !19, size: 64, offset: 256)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !576, file: !577, line: 58, baseType: !19, size: 64, offset: 320)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !576, file: !577, line: 59, baseType: !19, size: 64, offset: 384)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !576, file: !577, line: 60, baseType: !19, size: 64, offset: 448)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !576, file: !577, line: 61, baseType: !19, size: 64, offset: 512)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !576, file: !577, line: 64, baseType: !19, size: 64, offset: 576)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !576, file: !577, line: 65, baseType: !19, size: 64, offset: 640)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !576, file: !577, line: 66, baseType: !19, size: 64, offset: 704)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !576, file: !577, line: 68, baseType: !592, size: 64, offset: 768)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !577, line: 36, flags: DIFlagFwdDecl)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !576, file: !577, line: 70, baseType: !595, size: 64, offset: 832)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !576, file: !577, line: 72, baseType: !17, size: 32, offset: 896)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !576, file: !577, line: 73, baseType: !17, size: 32, offset: 928)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !576, file: !577, line: 74, baseType: !599, size: 64, offset: 960)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !144, line: 152, baseType: !154)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !576, file: !577, line: 77, baseType: !601, size: 16, offset: 1024)
!601 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !576, file: !577, line: 78, baseType: !603, size: 8, offset: 1040)
!603 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !576, file: !577, line: 79, baseType: !605, size: 8, offset: 1048)
!605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 8, elements: !606)
!606 = !{!607}
!607 = !DISubrange(count: 1)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !576, file: !577, line: 81, baseType: !609, size: 64, offset: 1088)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !577, line: 43, baseType: null)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !576, file: !577, line: 89, baseType: !612, size: 64, offset: 1152)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !144, line: 153, baseType: !154)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !576, file: !577, line: 91, baseType: !614, size: 64, offset: 1216)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !577, line: 37, flags: DIFlagFwdDecl)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !576, file: !577, line: 92, baseType: !617, size: 64, offset: 1280)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !577, line: 38, flags: DIFlagFwdDecl)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !576, file: !577, line: 93, baseType: !595, size: 64, offset: 1344)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !576, file: !577, line: 94, baseType: !182, size: 64, offset: 1408)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !576, file: !577, line: 95, baseType: !161, size: 64, offset: 1472)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !576, file: !577, line: 96, baseType: !17, size: 32, offset: 1536)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !576, file: !577, line: 98, baseType: !624, size: 160, offset: 1568)
!624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 160, elements: !625)
!625 = !{!626}
!626 = !DISubrange(count: 20)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "nskip_no_match", scope: !115, file: !2, line: 73, baseType: !24, size: 32, offset: 20480)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "nskip_not_ba", scope: !115, file: !2, line: 73, baseType: !24, size: 32, offset: 20512)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "nskip_mono", scope: !115, file: !2, line: 73, baseType: !24, size: 32, offset: 20544)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "nskip_no_data", scope: !115, file: !2, line: 73, baseType: !24, size: 32, offset: 20576)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "nskip_dip_GT", scope: !115, file: !2, line: 73, baseType: !24, size: 32, offset: 20608)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "nskip_dip_PL", scope: !115, file: !2, line: 73, baseType: !24, size: 32, offset: 20640)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "distinctive_sites", scope: !115, file: !2, line: 76, baseType: !531, size: 64, offset: 20672)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "kbs_diff", scope: !115, file: !2, line: 77, baseType: !635, size: 64, offset: 20736)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "kbitset_t", file: !637, line: 66, baseType: !638)
!637 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spac/linux-ubuntu22.04-zen2/clang-18.0.0/htslib-1.17-joathgqovfieovrb272nstnjjhsakhcq/include/htslib/kbitset.h", directory: "/local-ssd/py-pysam-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z-build", checksumkind: CSK_MD5, checksum: "cf84c8ac0d1197a3bf11293ca2d19875")
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kbitset_t", file: !637, line: 63, size: 192, elements: !639)
!639 = !{!640, !641, !642}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !638, file: !637, line: 64, baseType: !161, size: 64)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "n_max", scope: !638, file: !637, line: 64, baseType: !161, size: 64, offset: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !638, file: !637, line: 65, baseType: !643, size: 64, offset: 128)
!643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 64, elements: !606)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "diff_sites_size", scope: !115, file: !2, line: 78, baseType: !161, size: 64, offset: 20800)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !115, file: !2, line: 79, baseType: !646, size: 64, offset: 20864)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "extsort_t", file: !106, line: 32, baseType: !648)
!648 = !DICompositeType(tag: DW_TAG_structure_type, name: "_extsort_t", file: !106, line: 32, flags: DIFlagFwdDecl)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "es_tmp_prefix", scope: !115, file: !2, line: 80, baseType: !19, size: 64, offset: 20928)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "es_max_mem", scope: !115, file: !2, line: 80, baseType: !19, size: 64, offset: 20992)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "diff_sites_t", file: !2, line: 133, baseType: !654)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2, line: 128, size: 192, elements: !655)
!655 = !{!656, !657, !658, !659, !660}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "ndiff", scope: !654, file: !2, line: 130, baseType: !141, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "rid", scope: !654, file: !2, line: 130, baseType: !141, size: 32, offset: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !654, file: !2, line: 130, baseType: !141, size: 32, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "rand", scope: !654, file: !2, line: 130, baseType: !141, size: 32, offset: 96)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "kbs_dat", scope: !654, file: !2, line: 131, baseType: !643, size: 64, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_typedef, name: "idbl_t", file: !2, line: 747, baseType: !664)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2, line: 742, size: 128, elements: !665)
!665 = !{!666, !667, !668}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "ism", scope: !664, file: !2, line: 744, baseType: !17, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !664, file: !2, line: 744, baseType: !17, size: 32, offset: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !664, file: !2, line: 745, baseType: !531, size: 64, offset: 64)
!669 = !{!0, !7, !670, !675, !680, !684, !689, !694, !696, !698, !700, !702, !704, !709, !711, !716, !721, !723, !725, !727, !729, !734, !736, !738, !740, !745, !12, !750, !755, !760, !765, !768, !770, !775, !780, !785, !787, !792, !797, !799, !801, !803, !808, !813, !815, !817, !820, !825, !830, !835, !840, !845, !850, !855, !857, !859, !864, !866, !868, !873, !878, !883, !888, !893, !898, !903, !908, !913, !918, !923, !928, !933, !938, !943, !945, !950, !955, !957, !959, !961, !966, !968, !973, !978, !983, !985, !987, !989, !991, !993, !998, !1003, !1008, !1013, !1018, !1021, !1026, !1028, !1030, !1032, !1034, !1039, !1044, !1049, !1054, !1056, !1061, !1063, !1068, !1070, !1072, !1074, !1079, !1081, !1083, !1085, !1087, !1109, !1111, !1113, !1115, !1117, !1119, !1121, !1123, !1128, !1133, !1135, !1137, !1139, !1141, !1146, !1151, !1153, !1158, !1160, !1162, !1164, !1166, !1168, !1170, !1172, !1177, !1179}
!670 = !DIGlobalVariableExpression(var: !671, expr: !DIExpression())
!671 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1110, type: !672, isLocal: true, isDefinition: true)
!672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 144, elements: !673)
!673 = !{!674}
!674 = !DISubrange(count: 18)
!675 = !DIGlobalVariableExpression(var: !676, expr: !DIExpression())
!676 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1111, type: !677, isLocal: true, isDefinition: true)
!677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 32, elements: !678)
!678 = !{!679}
!679 = !DISubrange(count: 4)
!680 = !DIGlobalVariableExpression(var: !681, expr: !DIExpression())
!681 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1112, type: !682, isLocal: true, isDefinition: true)
!682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 64, elements: !683)
!683 = !{!557}
!684 = !DIGlobalVariableExpression(var: !685, expr: !DIExpression())
!685 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1113, type: !686, isLocal: true, isDefinition: true)
!686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 72, elements: !687)
!687 = !{!688}
!688 = !DISubrange(count: 9)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1114, type: !691, isLocal: true, isDefinition: true)
!691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 80, elements: !692)
!692 = !{!693}
!693 = !DISubrange(count: 10)
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1115, type: !691, isLocal: true, isDefinition: true)
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1116, type: !9, isLocal: true, isDefinition: true)
!698 = !DIGlobalVariableExpression(var: !699, expr: !DIExpression())
!699 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1117, type: !691, isLocal: true, isDefinition: true)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1118, type: !9, isLocal: true, isDefinition: true)
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1119, type: !682, isLocal: true, isDefinition: true)
!704 = !DIGlobalVariableExpression(var: !705, expr: !DIExpression())
!705 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1120, type: !706, isLocal: true, isDefinition: true)
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 104, elements: !707)
!707 = !{!708}
!708 = !DISubrange(count: 13)
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1121, type: !691, isLocal: true, isDefinition: true)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1122, type: !713, isLocal: true, isDefinition: true)
!713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 96, elements: !714)
!714 = !{!715}
!715 = !DISubrange(count: 12)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1123, type: !718, isLocal: true, isDefinition: true)
!718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 112, elements: !719)
!719 = !{!720}
!720 = !DISubrange(count: 14)
!721 = !DIGlobalVariableExpression(var: !722, expr: !DIExpression())
!722 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1124, type: !682, isLocal: true, isDefinition: true)
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1125, type: !672, isLocal: true, isDefinition: true)
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1126, type: !682, isLocal: true, isDefinition: true)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1127, type: !706, isLocal: true, isDefinition: true)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1128, type: !731, isLocal: true, isDefinition: true)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, elements: !732)
!732 = !{!733}
!733 = !DISubrange(count: 16)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1129, type: !682, isLocal: true, isDefinition: true)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1130, type: !706, isLocal: true, isDefinition: true)
!738 = !DIGlobalVariableExpression(var: !739, expr: !DIExpression())
!739 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1131, type: !731, isLocal: true, isDefinition: true)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1132, type: !742, isLocal: true, isDefinition: true)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 48, elements: !743)
!743 = !{!744}
!744 = !DISubrange(count: 6)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1133, type: !747, isLocal: true, isDefinition: true)
!747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 88, elements: !748)
!748 = !{!749}
!749 = !DISubrange(count: 11)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1137, type: !752, isLocal: true, isDefinition: true)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 256, elements: !753)
!753 = !{!754}
!754 = !DISubrange(count: 32)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1141, type: !757, isLocal: true, isDefinition: true)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 328, elements: !758)
!758 = !{!759}
!759 = !DISubrange(count: 41)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1147, type: !762, isLocal: true, isDefinition: true)
!762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 208, elements: !763)
!763 = !{!764}
!764 = !DISubrange(count: 26)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1148, type: !767, isLocal: true, isDefinition: true)
!767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 24, elements: !240)
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1149, type: !767, isLocal: true, isDefinition: true)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1150, type: !772, isLocal: true, isDefinition: true)
!772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 448, elements: !773)
!773 = !{!774}
!774 = !DISubrange(count: 56)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1164, type: !777, isLocal: true, isDefinition: true)
!777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 264, elements: !778)
!778 = !{!779}
!779 = !DISubrange(count: 33)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1172, type: !782, isLocal: true, isDefinition: true)
!782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 416, elements: !783)
!783 = !{!784}
!784 = !DISubrange(count: 52)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1178, type: !757, isLocal: true, isDefinition: true)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1188, type: !789, isLocal: true, isDefinition: true)
!789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 544, elements: !790)
!790 = !{!791}
!791 = !DISubrange(count: 68)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1197, type: !794, isLocal: true, isDefinition: true)
!794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 376, elements: !795)
!795 = !{!796}
!796 = !DISubrange(count: 47)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1198, type: !789, isLocal: true, isDefinition: true)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1203, type: !677, isLocal: true, isDefinition: true)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1204, type: !9, isLocal: true, isDefinition: true)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1205, type: !805, isLocal: true, isDefinition: true)
!805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 512, elements: !806)
!806 = !{!807}
!807 = !DISubrange(count: 64)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1220, type: !810, isLocal: true, isDefinition: true)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 312, elements: !811)
!811 = !{!812}
!812 = !DISubrange(count: 39)
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1224, type: !810, isLocal: true, isDefinition: true)
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1228, type: !3, isLocal: true, isDefinition: true)
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1233, type: !819, isLocal: true, isDefinition: true)
!819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 16, elements: !282)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1237, type: !822, isLocal: true, isDefinition: true)
!822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 408, elements: !823)
!823 = !{!824}
!824 = !DISubrange(count: 51)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1240, type: !827, isLocal: true, isDefinition: true)
!827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 384, elements: !828)
!828 = !{!829}
!829 = !DISubrange(count: 48)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1241, type: !832, isLocal: true, isDefinition: true)
!832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 432, elements: !833)
!833 = !{!834}
!834 = !DISubrange(count: 54)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1243, type: !837, isLocal: true, isDefinition: true)
!837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 480, elements: !838)
!838 = !{!839}
!839 = !DISubrange(count: 60)
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1244, type: !842, isLocal: true, isDefinition: true)
!842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 360, elements: !843)
!843 = !{!844}
!844 = !DISubrange(count: 45)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1245, type: !847, isLocal: true, isDefinition: true)
!847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 608, elements: !848)
!848 = !{!849}
!849 = !DISubrange(count: 76)
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1264, type: !852, isLocal: true, isDefinition: true)
!852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 456, elements: !853)
!853 = !{!854}
!854 = !DISubrange(count: 57)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1265, type: !772, isLocal: true, isDefinition: true)
!857 = !DIGlobalVariableExpression(var: !858, expr: !DIExpression())
!858 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1035, type: !819, isLocal: true, isDefinition: true)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1036, type: !861, isLocal: true, isDefinition: true)
!861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 752, elements: !862)
!862 = !{!863}
!863 = !DISubrange(count: 94)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1037, type: !847, isLocal: true, isDefinition: true)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1039, type: !691, isLocal: true, isDefinition: true)
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1042, type: !870, isLocal: true, isDefinition: true)
!870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 856, elements: !871)
!871 = !{!872}
!872 = !DISubrange(count: 107)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1043, type: !875, isLocal: true, isDefinition: true)
!875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1024, elements: !876)
!876 = !{!877}
!877 = !DISubrange(count: 128)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1044, type: !880, isLocal: true, isDefinition: true)
!880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1008, elements: !881)
!881 = !{!882}
!882 = !DISubrange(count: 126)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1048, type: !885, isLocal: true, isDefinition: true)
!885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1048, elements: !886)
!886 = !{!887}
!887 = !DISubrange(count: 131)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1050, type: !890, isLocal: true, isDefinition: true)
!890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 720, elements: !891)
!891 = !{!892}
!892 = !DISubrange(count: 90)
!893 = !DIGlobalVariableExpression(var: !894, expr: !DIExpression())
!894 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1051, type: !895, isLocal: true, isDefinition: true)
!895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1040, elements: !896)
!896 = !{!897}
!897 = !DISubrange(count: 130)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1052, type: !900, isLocal: true, isDefinition: true)
!900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 552, elements: !901)
!901 = !{!902}
!902 = !DISubrange(count: 69)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1053, type: !905, isLocal: true, isDefinition: true)
!905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 888, elements: !906)
!906 = !{!907}
!907 = !DISubrange(count: 111)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1054, type: !910, isLocal: true, isDefinition: true)
!910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1016, elements: !911)
!911 = !{!912}
!912 = !DISubrange(count: 127)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1055, type: !915, isLocal: true, isDefinition: true)
!915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 968, elements: !916)
!916 = !{!917}
!917 = !DISubrange(count: 121)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1056, type: !920, isLocal: true, isDefinition: true)
!920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 632, elements: !921)
!921 = !{!922}
!922 = !DISubrange(count: 79)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1057, type: !925, isLocal: true, isDefinition: true)
!925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1080, elements: !926)
!926 = !{!927}
!927 = !DISubrange(count: 135)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1058, type: !930, isLocal: true, isDefinition: true)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 960, elements: !931)
!931 = !{!932}
!932 = !DISubrange(count: 120)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1059, type: !935, isLocal: true, isDefinition: true)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 672, elements: !936)
!936 = !{!937}
!937 = !DISubrange(count: 84)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1060, type: !940, isLocal: true, isDefinition: true)
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 616, elements: !941)
!941 = !{!942}
!942 = !DISubrange(count: 77)
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1061, type: !930, isLocal: true, isDefinition: true)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1062, type: !947, isLocal: true, isDefinition: true)
!947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1064, elements: !948)
!948 = !{!949}
!949 = !DISubrange(count: 133)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1063, type: !952, isLocal: true, isDefinition: true)
!952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 680, elements: !953)
!953 = !{!954}
!954 = !DISubrange(count: 85)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1064, type: !890, isLocal: true, isDefinition: true)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1065, type: !890, isLocal: true, isDefinition: true)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1066, type: !930, isLocal: true, isDefinition: true)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1067, type: !963, isLocal: true, isDefinition: true)
!963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 904, elements: !964)
!964 = !{!965}
!965 = !DISubrange(count: 113)
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1068, type: !747, isLocal: true, isDefinition: true)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1069, type: !970, isLocal: true, isDefinition: true)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 560, elements: !971)
!971 = !{!972}
!972 = !DISubrange(count: 70)
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1070, type: !975, isLocal: true, isDefinition: true)
!975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 288, elements: !976)
!976 = !{!977}
!977 = !DISubrange(count: 36)
!978 = !DIGlobalVariableExpression(var: !979, expr: !DIExpression())
!979 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1072, type: !980, isLocal: true, isDefinition: true)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 424, elements: !981)
!981 = !{!982}
!982 = !DISubrange(count: 53)
!983 = !DIGlobalVariableExpression(var: !984, expr: !DIExpression())
!984 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1073, type: !805, isLocal: true, isDefinition: true)
!985 = !DIGlobalVariableExpression(var: !986, expr: !DIExpression())
!986 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1075, type: !842, isLocal: true, isDefinition: true)
!987 = !DIGlobalVariableExpression(var: !988, expr: !DIExpression())
!988 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1076, type: !822, isLocal: true, isDefinition: true)
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(scope: null, file: !2, line: 245, type: !752, isLocal: true, isDefinition: true)
!991 = !DIGlobalVariableExpression(var: !992, expr: !DIExpression())
!992 = distinct !DIGlobalVariable(scope: null, file: !2, line: 250, type: !752, isLocal: true, isDefinition: true)
!993 = !DIGlobalVariableExpression(var: !994, expr: !DIExpression())
!994 = distinct !DIGlobalVariable(scope: null, file: !2, line: 254, type: !995, isLocal: true, isDefinition: true)
!995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 184, elements: !996)
!996 = !{!997}
!997 = !DISubrange(count: 23)
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(scope: null, file: !2, line: 256, type: !1000, isLocal: true, isDefinition: true)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 224, elements: !1001)
!1001 = !{!1002}
!1002 = !DISubrange(count: 28)
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(scope: null, file: !2, line: 256, type: !1005, isLocal: true, isDefinition: true)
!1005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 120, elements: !1006)
!1006 = !{!1007}
!1007 = !DISubrange(count: 15)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(scope: null, file: !2, line: 259, type: !1010, isLocal: true, isDefinition: true)
!1010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 152, elements: !1011)
!1011 = !{!1012}
!1012 = !DISubrange(count: 19)
!1013 = !DIGlobalVariableExpression(var: !1014, expr: !DIExpression())
!1014 = distinct !DIGlobalVariable(scope: null, file: !2, line: 274, type: !1015, isLocal: true, isDefinition: true)
!1015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 496, elements: !1016)
!1016 = !{!1017}
!1017 = !DISubrange(count: 62)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(scope: null, file: !2, line: 274, type: !1020, isLocal: true, isDefinition: true)
!1020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 80, elements: !692)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(scope: null, file: !2, line: 279, type: !1023, isLocal: true, isDefinition: true)
!1023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 440, elements: !1024)
!1024 = !{!1025}
!1025 = !DISubrange(count: 55)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(scope: null, file: !2, line: 282, type: !1023, isLocal: true, isDefinition: true)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(scope: null, file: !2, line: 323, type: !624, isLocal: true, isDefinition: true)
!1030 = !DIGlobalVariableExpression(var: !1031, expr: !DIExpression())
!1031 = distinct !DIGlobalVariable(scope: null, file: !2, line: 324, type: !852, isLocal: true, isDefinition: true)
!1032 = !DIGlobalVariableExpression(var: !1033, expr: !DIExpression())
!1033 = distinct !DIGlobalVariable(scope: null, file: !2, line: 333, type: !1000, isLocal: true, isDefinition: true)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(scope: null, file: !2, line: 345, type: !1036, isLocal: true, isDefinition: true)
!1036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 192, elements: !1037)
!1037 = !{!1038}
!1038 = !DISubrange(count: 24)
!1039 = !DIGlobalVariableExpression(var: !1040, expr: !DIExpression())
!1040 = distinct !DIGlobalVariable(scope: null, file: !2, line: 403, type: !1041, isLocal: true, isDefinition: true)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 280, elements: !1042)
!1042 = !{!1043}
!1043 = !DISubrange(count: 35)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(scope: null, file: !2, line: 408, type: !1046, isLocal: true, isDefinition: true)
!1046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 640, elements: !1047)
!1047 = !{!1048}
!1048 = !DISubrange(count: 80)
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(scope: null, file: !2, line: 234, type: !1051, isLocal: true, isDefinition: true)
!1051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 368, elements: !1052)
!1052 = !{!1053}
!1053 = !DISubrange(count: 46)
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(scope: null, file: !2, line: 157, type: !1023, isLocal: true, isDefinition: true)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(scope: null, file: !2, line: 160, type: !1058, isLocal: true, isDefinition: true)
!1058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 928, elements: !1059)
!1059 = !{!1060}
!1060 = !DISubrange(count: 116)
!1061 = !DIGlobalVariableExpression(var: !1062, expr: !DIExpression())
!1062 = distinct !DIGlobalVariable(scope: null, file: !2, line: 100, type: !847, isLocal: true, isDefinition: true)
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(scope: null, file: !2, line: 101, type: !1065, isLocal: true, isDefinition: true)
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 136, elements: !1066)
!1066 = !{!1067}
!1067 = !DISubrange(count: 17)
!1068 = !DIGlobalVariableExpression(var: !1069, expr: !DIExpression())
!1069 = distinct !DIGlobalVariable(scope: null, file: !2, line: 104, type: !677, isLocal: true, isDefinition: true)
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(scope: null, file: !2, line: 105, type: !1041, isLocal: true, isDefinition: true)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(scope: null, file: !2, line: 106, type: !691, isLocal: true, isDefinition: true)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1003, type: !1076, isLocal: true, isDefinition: true)
!1076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 688, elements: !1077)
!1077 = !{!1078}
!1078 = !DISubrange(count: 86)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1014, type: !980, isLocal: true, isDefinition: true)
!1081 = !DIGlobalVariableExpression(var: !1082, expr: !DIExpression())
!1082 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1020, type: !1065, isLocal: true, isDefinition: true)
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1028, type: !852, isLocal: true, isDefinition: true)
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(scope: null, file: !2, line: 568, type: !1000, isLocal: true, isDefinition: true)
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "warn_dip_GT", scope: !1089, file: !2, line: 487, type: !17, isLocal: true, isDefinition: true)
!1089 = distinct !DISubprogram(name: "set_data", scope: !2, file: !2, line: 485, type: !1090, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !1093)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!17, !113, !233, !367, !1092, !540, !127, !127}
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!1093 = !{!1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1108}
!1094 = !DILocalVariable(name: "args", arg: 1, scope: !1089, file: !2, line: 485, type: !113)
!1095 = !DILocalVariable(name: "hdr", arg: 2, scope: !1089, file: !2, line: 485, type: !233)
!1096 = !DILocalVariable(name: "rec", arg: 3, scope: !1089, file: !2, line: 485, type: !367)
!1097 = !DILocalVariable(name: "arr", arg: 4, scope: !1089, file: !2, line: 485, type: !1092)
!1098 = !DILocalVariable(name: "narr", arg: 5, scope: !1089, file: !2, line: 485, type: !540)
!1099 = !DILocalVariable(name: "narr1", arg: 6, scope: !1089, file: !2, line: 485, type: !127)
!1100 = !DILocalVariable(name: "use_GT", arg: 7, scope: !1089, file: !2, line: 485, type: !127)
!1101 = !DILocalVariable(name: "i", scope: !1089, file: !2, line: 489, type: !17)
!1102 = !DILocalVariable(name: "ret", scope: !1103, file: !2, line: 494, type: !17)
!1103 = distinct !DILexicalBlock(scope: !1104, file: !2, line: 493, column: 9)
!1104 = distinct !DILexicalBlock(scope: !1105, file: !2, line: 492, column: 14)
!1105 = distinct !DILexicalBlock(scope: !1106, file: !2, line: 491, column: 5)
!1106 = distinct !DILexicalBlock(scope: !1107, file: !2, line: 490, column: 5)
!1107 = distinct !DILexicalBlock(scope: !1089, file: !2, line: 490, column: 5)
!1108 = !DILocalVariable(name: "ret", scope: !1105, file: !2, line: 515, type: !17)
!1109 = !DIGlobalVariableExpression(var: !1110, expr: !DIExpression())
!1110 = distinct !DIGlobalVariable(name: "warn_dip_PL", scope: !1089, file: !2, line: 488, type: !17, isLocal: true, isDefinition: true)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(scope: null, file: !2, line: 505, type: !861, isLocal: true, isDefinition: true)
!1113 = !DIGlobalVariableExpression(var: !1114, expr: !DIExpression())
!1114 = distinct !DIGlobalVariable(scope: null, file: !2, line: 526, type: !861, isLocal: true, isDefinition: true)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(scope: null, file: !2, line: 795, type: !1036, isLocal: true, isDefinition: true)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(scope: null, file: !2, line: 796, type: !752, isLocal: true, isDefinition: true)
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(scope: null, file: !2, line: 797, type: !975, isLocal: true, isDefinition: true)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(scope: null, file: !2, line: 798, type: !1041, isLocal: true, isDefinition: true)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(scope: null, file: !2, line: 799, type: !1125, isLocal: true, isDefinition: true)
!1125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 248, elements: !1126)
!1126 = !{!1127}
!1127 = !DISubrange(count: 31)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(scope: null, file: !2, line: 800, type: !1130, isLocal: true, isDefinition: true)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 304, elements: !1131)
!1131 = !{!1132}
!1132 = !DISubrange(count: 38)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(scope: null, file: !2, line: 801, type: !1130, isLocal: true, isDefinition: true)
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(scope: null, file: !2, line: 802, type: !624, isLocal: true, isDefinition: true)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(scope: null, file: !2, line: 803, type: !3, isLocal: true, isDefinition: true)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(scope: null, file: !2, line: 804, type: !762, isLocal: true, isDefinition: true)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(scope: null, file: !2, line: 805, type: !1143, isLocal: true, isDefinition: true)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 504, elements: !1144)
!1144 = !{!1145}
!1145 = !DISubrange(count: 63)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(scope: null, file: !2, line: 806, type: !1148, isLocal: true, isDefinition: true)
!1148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 992, elements: !1149)
!1149 = !{!1150}
!1150 = !DISubrange(count: 124)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(scope: null, file: !2, line: 807, type: !980, isLocal: true, isDefinition: true)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(scope: null, file: !2, line: 808, type: !1155, isLocal: true, isDefinition: true)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 792, elements: !1156)
!1156 = !{!1157}
!1157 = !DISubrange(count: 99)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(scope: null, file: !2, line: 826, type: !1010, isLocal: true, isDefinition: true)
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(scope: null, file: !2, line: 835, type: !1010, isLocal: true, isDefinition: true)
!1162 = !DIGlobalVariableExpression(var: !1163, expr: !DIExpression())
!1163 = distinct !DIGlobalVariable(scope: null, file: !2, line: 760, type: !762, isLocal: true, isDefinition: true)
!1164 = !DIGlobalVariableExpression(var: !1165, expr: !DIExpression())
!1165 = distinct !DIGlobalVariable(scope: null, file: !2, line: 761, type: !624, isLocal: true, isDefinition: true)
!1166 = !DIGlobalVariableExpression(var: !1167, expr: !DIExpression())
!1167 = distinct !DIGlobalVariable(scope: null, file: !2, line: 762, type: !672, isLocal: true, isDefinition: true)
!1168 = !DIGlobalVariableExpression(var: !1169, expr: !DIExpression())
!1169 = distinct !DIGlobalVariable(scope: null, file: !2, line: 763, type: !805, isLocal: true, isDefinition: true)
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(scope: null, file: !2, line: 764, type: !672, isLocal: true, isDefinition: true)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(scope: null, file: !2, line: 765, type: !1174, isLocal: true, isDefinition: true)
!1174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 656, elements: !1175)
!1175 = !{!1176}
!1176 = !DISubrange(count: 82)
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(scope: null, file: !2, line: 782, type: !777, isLocal: true, isDefinition: true)
!1179 = !DIGlobalVariableExpression(var: !1180, expr: !DIExpression())
!1180 = distinct !DIGlobalVariable(scope: null, file: !2, line: 785, type: !731, isLocal: true, isDefinition: true)
!1181 = !{!1182, !1183, !1184, !1185, !1186, !1187, !1191, !1192, !1193, !1194, !1203, !1204}
!1182 = !DILocalVariable(name: "argc", arg: 1, scope: !14, file: !2, line: 1081, type: !17)
!1183 = !DILocalVariable(name: "argv", arg: 2, scope: !14, file: !2, line: 1081, type: !18)
!1184 = !DILocalVariable(name: "c", scope: !14, file: !2, line: 1083, type: !17)
!1185 = !DILocalVariable(name: "args", scope: !14, file: !2, line: 1084, type: !113)
!1186 = !DILocalVariable(name: "tmp", scope: !14, file: !2, line: 1136, type: !19)
!1187 = !DILocalVariable(name: "i", scope: !1188, file: !2, line: 1145, type: !17)
!1188 = distinct !DILexicalBlock(scope: !1189, file: !2, line: 1144, column: 17)
!1189 = distinct !DILexicalBlock(scope: !1190, file: !2, line: 1138, column: 20)
!1190 = distinct !DILexicalBlock(scope: !14, file: !2, line: 1137, column: 97)
!1191 = !DILocalVariable(name: "nlist", scope: !1188, file: !2, line: 1145, type: !17)
!1192 = !DILocalVariable(name: "list", scope: !1188, file: !2, line: 1146, type: !18)
!1193 = !DILocalVariable(name: "ret", scope: !14, file: !2, line: 1249, type: !17)
!1194 = !DILocalVariable(name: "t0", scope: !1195, file: !2, line: 1255, type: !1196)
!1195 = distinct !DILexicalBlock(scope: !14, file: !2, line: 1251, column: 5)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1197, line: 8, size: 128, elements: !1198)
!1197 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", directory: "", checksumkind: CSK_MD5, checksum: "9b45d950050c215f216850b27bd1e8f3")
!1198 = !{!1199, !1201}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1196, file: !1197, line: 14, baseType: !1200, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !144, line: 160, baseType: !154)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1196, file: !1197, line: 15, baseType: !1202, size: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !144, line: 162, baseType: !154)
!1203 = !DILocalVariable(name: "t1", scope: !1195, file: !2, line: 1255, type: !1196)
!1204 = !DILocalVariable(name: "delta", scope: !1205, file: !2, line: 1263, type: !531)
!1205 = distinct !DILexicalBlock(scope: !1206, file: !2, line: 1261, column: 9)
!1206 = distinct !DILexicalBlock(scope: !1195, file: !2, line: 1260, column: 14)
!1207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1208, size: 6400, elements: !1215)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !1209, line: 50, size: 256, elements: !1210)
!1209 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_ext.h", directory: "", checksumkind: CSK_MD5, checksum: "b4f86ba96a508c530fa381ae1dafe9eb")
!1210 = !{!1211, !1212, !1213, !1214}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1208, file: !1209, line: 52, baseType: !203, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !1208, file: !1209, line: 55, baseType: !17, size: 32, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1208, file: !1209, line: 56, baseType: !127, size: 64, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1208, file: !1209, line: 57, baseType: !17, size: 32, offset: 192)
!1215 = !{!1216}
!1216 = !DISubrange(count: 25)
!1217 = !{i32 7, !"Dwarf Version", i32 5}
!1218 = !{i32 2, !"Debug Info Version", i32 3}
!1219 = !{i32 1, !"wchar_size", i32 4}
!1220 = !{i32 8, !"PIC Level", i32 2}
!1221 = !{i32 7, !"uwtable", i32 2}
!1222 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!1223 = !{!1224, !1224, i64 0}
!1224 = !{!"int", !1225, i64 0}
!1225 = !{!"omnipotent char", !1226, i64 0}
!1226 = !{!"Simple C/C++ TBAA"}
!1227 = !DILocation(line: 1081, column: 25, scope: !14)
!1228 = !{!1229, !1229, i64 0}
!1229 = !{!"any pointer", !1225, i64 0}
!1230 = !DILocation(line: 1081, column: 37, scope: !14)
!1231 = !DILocation(line: 1083, column: 5, scope: !14)
!1232 = !DILocation(line: 1083, column: 9, scope: !14)
!1233 = !DILocation(line: 1084, column: 5, scope: !14)
!1234 = !DILocation(line: 1084, column: 13, scope: !14)
!1235 = !DILocation(line: 1084, column: 30, scope: !14)
!1236 = !DILocation(line: 1085, column: 20, scope: !14)
!1237 = !DILocation(line: 1085, column: 5, scope: !14)
!1238 = !DILocation(line: 1085, column: 11, scope: !14)
!1239 = !DILocation(line: 1085, column: 18, scope: !14)
!1240 = !{!1241, !1224, i64 96}
!1241 = !{!"", !1229, i64 0, !1229, i64 8, !1229, i64 16, !1229, i64 24, !1229, i64 32, !1229, i64 40, !1229, i64 48, !1229, i64 56, !1229, i64 64, !1229, i64 72, !1229, i64 80, !1229, i64 88, !1224, i64 96, !1224, i64 100, !1224, i64 104, !1224, i64 108, !1224, i64 112, !1224, i64 116, !1224, i64 120, !1224, i64 124, !1224, i64 128, !1224, i64 132, !1224, i64 136, !1224, i64 140, !1229, i64 144, !1229, i64 152, !1229, i64 160, !1229, i64 168, !1229, i64 176, !1229, i64 184, !1229, i64 192, !1224, i64 200, !1224, i64 204, !1229, i64 208, !1229, i64 216, !1224, i64 224, !1224, i64 228, !1229, i64 232, !1229, i64 240, !1229, i64 248, !1229, i64 256, !1225, i64 264, !1225, i64 456, !1242, i64 2504, !1242, i64 2512, !1224, i64 2520, !1224, i64 2524, !1224, i64 2528, !1224, i64 2532, !1224, i64 2536, !1224, i64 2540, !1224, i64 2544, !1224, i64 2548, !1229, i64 2552, !1224, i64 2560, !1224, i64 2564, !1224, i64 2568, !1224, i64 2572, !1224, i64 2576, !1224, i64 2580, !1242, i64 2584, !1229, i64 2592, !1243, i64 2600, !1229, i64 2608, !1229, i64 2616, !1229, i64 2624}
!1242 = !{!"double", !1225, i64 0}
!1243 = !{!"long", !1225, i64 0}
!1244 = !DILocation(line: 1085, column: 39, scope: !14)
!1245 = !DILocation(line: 1085, column: 26, scope: !14)
!1246 = !DILocation(line: 1085, column: 32, scope: !14)
!1247 = !DILocation(line: 1085, column: 37, scope: !14)
!1248 = !{!1241, !1229, i64 32}
!1249 = !DILocation(line: 1085, column: 53, scope: !14)
!1250 = !DILocation(line: 1085, column: 45, scope: !14)
!1251 = !DILocation(line: 1086, column: 5, scope: !14)
!1252 = !DILocation(line: 1086, column: 11, scope: !14)
!1253 = !DILocation(line: 1086, column: 22, scope: !14)
!1254 = !{!1241, !1224, i64 128}
!1255 = !DILocation(line: 1087, column: 5, scope: !14)
!1256 = !DILocation(line: 1087, column: 11, scope: !14)
!1257 = !DILocation(line: 1087, column: 22, scope: !14)
!1258 = !{!1241, !1224, i64 132}
!1259 = !DILocation(line: 1088, column: 5, scope: !14)
!1260 = !DILocation(line: 1088, column: 11, scope: !14)
!1261 = !DILocation(line: 1088, column: 25, scope: !14)
!1262 = !{!1241, !1224, i64 2536}
!1263 = !DILocation(line: 1089, column: 5, scope: !14)
!1264 = !DILocation(line: 1089, column: 11, scope: !14)
!1265 = !DILocation(line: 1089, column: 19, scope: !14)
!1266 = !{!1241, !1224, i64 2548}
!1267 = !DILocation(line: 1090, column: 5, scope: !14)
!1268 = !DILocation(line: 1090, column: 11, scope: !14)
!1269 = !DILocation(line: 1090, column: 27, scope: !14)
!1270 = !{!1241, !1224, i64 120}
!1271 = !DILocation(line: 1091, column: 5, scope: !14)
!1272 = !DILocation(line: 1091, column: 11, scope: !14)
!1273 = !DILocation(line: 1091, column: 27, scope: !14)
!1274 = !{!1241, !1224, i64 124}
!1275 = !DILocation(line: 1097, column: 5, scope: !14)
!1276 = !DILocation(line: 1097, column: 11, scope: !14)
!1277 = !DILocation(line: 1097, column: 25, scope: !14)
!1278 = !{!1241, !1229, i64 2616}
!1279 = !DILocation(line: 1099, column: 24, scope: !14)
!1280 = !DILocation(line: 1099, column: 5, scope: !14)
!1281 = !DILocation(line: 1099, column: 11, scope: !14)
!1282 = !DILocation(line: 1099, column: 22, scope: !14)
!1283 = !{!1241, !1229, i64 2624}
!1284 = !DILocation(line: 1105, column: 5, scope: !14)
!1285 = !DILocation(line: 1105, column: 11, scope: !14)
!1286 = !DILocation(line: 1105, column: 25, scope: !14)
!1287 = !{!1241, !1242, i64 2504}
!1288 = !DILocation(line: 1106, column: 5, scope: !14)
!1289 = !DILocation(line: 1106, column: 11, scope: !14)
!1290 = !DILocation(line: 1106, column: 25, scope: !14)
!1291 = !{!1241, !1242, i64 2512}
!1292 = !DILocation(line: 1136, column: 5, scope: !14)
!1293 = !DILocation(line: 1136, column: 11, scope: !14)
!1294 = !DILocation(line: 1137, column: 5, scope: !14)
!1295 = !DILocation(line: 1137, column: 29, scope: !14)
!1296 = !DILocation(line: 1137, column: 35, scope: !14)
!1297 = !DILocation(line: 1137, column: 17, scope: !14)
!1298 = !DILocation(line: 1137, column: 15, scope: !14)
!1299 = !DILocation(line: 1137, column: 91, scope: !14)
!1300 = !DILocation(line: 1138, column: 17, scope: !1190)
!1301 = !DILocation(line: 1138, column: 9, scope: !1190)
!1302 = !DILocation(line: 1140, column: 40, scope: !1189)
!1303 = !DILocation(line: 1140, column: 33, scope: !1189)
!1304 = !DILocation(line: 1140, column: 17, scope: !1189)
!1305 = !DILocation(line: 1140, column: 23, scope: !1189)
!1306 = !DILocation(line: 1140, column: 31, scope: !1189)
!1307 = !DILocation(line: 1141, column: 23, scope: !1308)
!1308 = distinct !DILexicalBlock(scope: !1189, file: !2, line: 1141, column: 22)
!1309 = !DILocation(line: 1141, column: 27, scope: !1308)
!1310 = !DILocation(line: 1141, column: 31, scope: !1308)
!1311 = !DILocation(line: 1141, column: 30, scope: !1308)
!1312 = !{!1225, !1225, i64 0}
!1313 = !DILocation(line: 1141, column: 22, scope: !1189)
!1314 = !DILocation(line: 1141, column: 88, scope: !1308)
!1315 = !DILocation(line: 1141, column: 37, scope: !1308)
!1316 = !DILocation(line: 1142, column: 17, scope: !1189)
!1317 = !DILocation(line: 1145, column: 21, scope: !1188)
!1318 = !DILocation(line: 1145, column: 25, scope: !1188)
!1319 = !DILocation(line: 1145, column: 27, scope: !1188)
!1320 = !DILocation(line: 1146, column: 21, scope: !1188)
!1321 = !DILocation(line: 1146, column: 28, scope: !1188)
!1322 = !DILocation(line: 1146, column: 48, scope: !1188)
!1323 = !DILocation(line: 1146, column: 35, scope: !1188)
!1324 = !DILocation(line: 1147, column: 27, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1188, file: !2, line: 1147, column: 26)
!1326 = !DILocation(line: 1147, column: 32, scope: !1325)
!1327 = !DILocation(line: 1147, column: 35, scope: !1325)
!1328 = !DILocation(line: 1147, column: 40, scope: !1325)
!1329 = !DILocation(line: 1147, column: 44, scope: !1325)
!1330 = !DILocation(line: 1147, column: 47, scope: !1325)
!1331 = !DILocation(line: 1147, column: 52, scope: !1325)
!1332 = !DILocation(line: 1147, column: 26, scope: !1188)
!1333 = !DILocation(line: 1147, column: 93, scope: !1325)
!1334 = !DILocation(line: 1147, column: 57, scope: !1325)
!1335 = !DILocation(line: 1148, column: 43, scope: !1336)
!1336 = distinct !DILexicalBlock(scope: !1188, file: !2, line: 1148, column: 26)
!1337 = !DILocation(line: 1148, column: 27, scope: !1336)
!1338 = !DILocation(line: 1148, column: 26, scope: !1188)
!1339 = !DILocation(line: 1148, column: 54, scope: !1336)
!1340 = !DILocation(line: 1148, column: 60, scope: !1336)
!1341 = !DILocation(line: 1148, column: 71, scope: !1336)
!1342 = !DILocation(line: 1149, column: 48, scope: !1343)
!1343 = distinct !DILexicalBlock(scope: !1336, file: !2, line: 1149, column: 31)
!1344 = !DILocation(line: 1149, column: 32, scope: !1343)
!1345 = !DILocation(line: 1149, column: 31, scope: !1336)
!1346 = !DILocation(line: 1149, column: 59, scope: !1343)
!1347 = !DILocation(line: 1149, column: 65, scope: !1343)
!1348 = !DILocation(line: 1149, column: 76, scope: !1343)
!1349 = !DILocation(line: 1150, column: 92, scope: !1343)
!1350 = !DILocation(line: 1150, column: 26, scope: !1343)
!1351 = !DILocation(line: 1151, column: 26, scope: !1352)
!1352 = distinct !DILexicalBlock(scope: !1188, file: !2, line: 1151, column: 26)
!1353 = !DILocation(line: 1151, column: 31, scope: !1352)
!1354 = !DILocation(line: 1151, column: 26, scope: !1188)
!1355 = !DILocation(line: 1153, column: 47, scope: !1356)
!1356 = distinct !DILexicalBlock(scope: !1357, file: !2, line: 1153, column: 30)
!1357 = distinct !DILexicalBlock(scope: !1352, file: !2, line: 1152, column: 21)
!1358 = !DILocation(line: 1153, column: 31, scope: !1356)
!1359 = !DILocation(line: 1153, column: 30, scope: !1357)
!1360 = !DILocation(line: 1153, column: 58, scope: !1356)
!1361 = !DILocation(line: 1153, column: 64, scope: !1356)
!1362 = !DILocation(line: 1153, column: 74, scope: !1356)
!1363 = !DILocation(line: 1154, column: 52, scope: !1364)
!1364 = distinct !DILexicalBlock(scope: !1356, file: !2, line: 1154, column: 35)
!1365 = !DILocation(line: 1154, column: 36, scope: !1364)
!1366 = !DILocation(line: 1154, column: 35, scope: !1356)
!1367 = !DILocation(line: 1154, column: 63, scope: !1364)
!1368 = !DILocation(line: 1154, column: 69, scope: !1364)
!1369 = !DILocation(line: 1154, column: 79, scope: !1364)
!1370 = !DILocation(line: 1155, column: 96, scope: !1364)
!1371 = !DILocation(line: 1155, column: 30, scope: !1364)
!1372 = !DILocation(line: 1156, column: 21, scope: !1357)
!1373 = !DILocation(line: 1157, column: 44, scope: !1352)
!1374 = !DILocation(line: 1157, column: 50, scope: !1352)
!1375 = !DILocation(line: 1157, column: 26, scope: !1352)
!1376 = !DILocation(line: 1157, column: 32, scope: !1352)
!1377 = !DILocation(line: 1157, column: 42, scope: !1352)
!1378 = !DILocation(line: 1158, column: 27, scope: !1379)
!1379 = distinct !DILexicalBlock(scope: !1188, file: !2, line: 1158, column: 21)
!1380 = !DILocation(line: 1158, column: 26, scope: !1379)
!1381 = !DILocation(line: 1158, column: 31, scope: !1382)
!1382 = distinct !DILexicalBlock(scope: !1379, file: !2, line: 1158, column: 21)
!1383 = !DILocation(line: 1158, column: 33, scope: !1382)
!1384 = !DILocation(line: 1158, column: 32, scope: !1382)
!1385 = !DILocation(line: 1158, column: 21, scope: !1379)
!1386 = !DILocation(line: 1158, column: 50, scope: !1382)
!1387 = !DILocation(line: 1158, column: 55, scope: !1382)
!1388 = !DILocation(line: 1158, column: 45, scope: !1382)
!1389 = !DILocation(line: 1158, column: 41, scope: !1382)
!1390 = !DILocation(line: 1158, column: 21, scope: !1382)
!1391 = distinct !{!1391, !1385, !1392, !1393}
!1392 = !DILocation(line: 1158, column: 57, scope: !1379)
!1393 = !{!"llvm.loop.mustprogress"}
!1394 = !DILocation(line: 1159, column: 26, scope: !1188)
!1395 = !DILocation(line: 1159, column: 21, scope: !1188)
!1396 = !DILocation(line: 1160, column: 17, scope: !1189)
!1397 = !DILocation(line: 1161, column: 17, scope: !1189)
!1398 = !DILocation(line: 1163, column: 37, scope: !1189)
!1399 = !DILocation(line: 1163, column: 30, scope: !1189)
!1400 = !DILocation(line: 1163, column: 17, scope: !1189)
!1401 = !DILocation(line: 1163, column: 23, scope: !1189)
!1402 = !DILocation(line: 1163, column: 28, scope: !1189)
!1403 = !{!1241, !1224, i64 2528}
!1404 = !DILocation(line: 1164, column: 23, scope: !1405)
!1405 = distinct !DILexicalBlock(scope: !1189, file: !2, line: 1164, column: 22)
!1406 = !DILocation(line: 1164, column: 27, scope: !1405)
!1407 = !DILocation(line: 1164, column: 31, scope: !1405)
!1408 = !DILocation(line: 1164, column: 30, scope: !1405)
!1409 = !DILocation(line: 1164, column: 22, scope: !1189)
!1410 = !DILocation(line: 1164, column: 80, scope: !1405)
!1411 = !DILocation(line: 1164, column: 37, scope: !1405)
!1412 = !DILocation(line: 1165, column: 22, scope: !1413)
!1413 = distinct !DILexicalBlock(scope: !1189, file: !2, line: 1165, column: 22)
!1414 = !DILocation(line: 1165, column: 28, scope: !1413)
!1415 = !DILocation(line: 1165, column: 33, scope: !1413)
!1416 = !DILocation(line: 1165, column: 22, scope: !1189)
!1417 = !DILocation(line: 1167, column: 21, scope: !1418)
!1418 = distinct !DILexicalBlock(scope: !1413, file: !2, line: 1166, column: 17)
!1419 = !DILocation(line: 1167, column: 27, scope: !1418)
!1420 = !DILocation(line: 1167, column: 39, scope: !1418)
!1421 = !{!1241, !1224, i64 2540}
!1422 = !DILocation(line: 1168, column: 21, scope: !1418)
!1423 = !DILocation(line: 1168, column: 27, scope: !1418)
!1424 = !DILocation(line: 1168, column: 32, scope: !1418)
!1425 = !DILocation(line: 1169, column: 17, scope: !1418)
!1426 = !DILocation(line: 1170, column: 17, scope: !1189)
!1427 = !DILocation(line: 1171, column: 22, scope: !1189)
!1428 = !DILocation(line: 1171, column: 28, scope: !1189)
!1429 = !DILocation(line: 1171, column: 42, scope: !1189)
!1430 = !DILocation(line: 1171, column: 47, scope: !1189)
!1431 = !DILocation(line: 1172, column: 22, scope: !1189)
!1432 = !DILocation(line: 1173, column: 22, scope: !1189)
!1433 = !DILocation(line: 1173, column: 28, scope: !1189)
!1434 = !DILocation(line: 1173, column: 36, scope: !1189)
!1435 = !{!1241, !1224, i64 2544}
!1436 = !DILocation(line: 1173, column: 41, scope: !1189)
!1437 = !DILocation(line: 1175, column: 50, scope: !1189)
!1438 = !DILocation(line: 1175, column: 43, scope: !1189)
!1439 = !DILocation(line: 1175, column: 17, scope: !1189)
!1440 = !DILocation(line: 1175, column: 23, scope: !1189)
!1441 = !DILocation(line: 1175, column: 41, scope: !1189)
!1442 = !{!1241, !1242, i64 2584}
!1443 = !DILocation(line: 1176, column: 23, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !1189, file: !2, line: 1176, column: 22)
!1445 = !DILocation(line: 1176, column: 22, scope: !1444)
!1446 = !DILocation(line: 1176, column: 22, scope: !1189)
!1447 = !DILocation(line: 1178, column: 27, scope: !1448)
!1448 = distinct !DILexicalBlock(scope: !1449, file: !2, line: 1178, column: 26)
!1449 = distinct !DILexicalBlock(scope: !1444, file: !2, line: 1177, column: 17)
!1450 = !DILocation(line: 1178, column: 26, scope: !1448)
!1451 = !DILocation(line: 1178, column: 30, scope: !1448)
!1452 = !DILocation(line: 1178, column: 26, scope: !1449)
!1453 = !DILocation(line: 1178, column: 89, scope: !1448)
!1454 = !DILocation(line: 1178, column: 38, scope: !1448)
!1455 = !DILocation(line: 1179, column: 24, scope: !1449)
!1456 = !DILocation(line: 1180, column: 26, scope: !1449)
!1457 = !DILocation(line: 1180, column: 32, scope: !1449)
!1458 = !DILocation(line: 1180, column: 21, scope: !1449)
!1459 = !DILocation(line: 1181, column: 47, scope: !1449)
!1460 = !DILocation(line: 1181, column: 40, scope: !1449)
!1461 = !DILocation(line: 1181, column: 21, scope: !1449)
!1462 = !DILocation(line: 1181, column: 27, scope: !1449)
!1463 = !DILocation(line: 1181, column: 38, scope: !1449)
!1464 = !DILocation(line: 1182, column: 21, scope: !1449)
!1465 = !DILocation(line: 1182, column: 30, scope: !1449)
!1466 = !DILocation(line: 1182, column: 29, scope: !1449)
!1467 = !DILocation(line: 1182, column: 34, scope: !1449)
!1468 = !DILocation(line: 1182, column: 38, scope: !1449)
!1469 = !DILocation(line: 1182, column: 37, scope: !1449)
!1470 = !DILocation(line: 1182, column: 41, scope: !1449)
!1471 = !DILocation(line: 0, scope: !1449)
!1472 = !DILocation(line: 1182, column: 52, scope: !1449)
!1473 = distinct !{!1473, !1464, !1472, !1393}
!1474 = !DILocation(line: 1183, column: 27, scope: !1475)
!1475 = distinct !DILexicalBlock(scope: !1449, file: !2, line: 1183, column: 26)
!1476 = !DILocation(line: 1183, column: 26, scope: !1475)
!1477 = !DILocation(line: 1183, column: 26, scope: !1449)
!1478 = !DILocation(line: 1183, column: 36, scope: !1479)
!1479 = distinct !DILexicalBlock(scope: !1475, file: !2, line: 1183, column: 33)
!1480 = !DILocation(line: 1183, column: 40, scope: !1479)
!1481 = !DILocation(line: 1183, column: 67, scope: !1479)
!1482 = !DILocation(line: 1183, column: 70, scope: !1479)
!1483 = !DILocation(line: 1183, column: 45, scope: !1479)
!1484 = !DILocation(line: 1183, column: 51, scope: !1479)
!1485 = !DILocation(line: 1183, column: 65, scope: !1479)
!1486 = !DILocation(line: 1183, column: 74, scope: !1479)
!1487 = !DILocation(line: 1184, column: 17, scope: !1449)
!1488 = !DILocation(line: 1185, column: 17, scope: !1189)
!1489 = !DILocation(line: 1185, column: 23, scope: !1189)
!1490 = !DILocation(line: 1185, column: 31, scope: !1189)
!1491 = !DILocation(line: 1186, column: 17, scope: !1189)
!1492 = !DILocation(line: 1188, column: 17, scope: !1189)
!1493 = !DILocation(line: 1197, column: 23, scope: !1189)
!1494 = !DILocation(line: 1198, column: 23, scope: !1189)
!1495 = !DILocation(line: 1198, column: 29, scope: !1189)
!1496 = !DILocation(line: 1198, column: 39, scope: !1189)
!1497 = !{!1241, !1224, i64 2520}
!1498 = !DILocation(line: 1198, column: 44, scope: !1189)
!1499 = !DILocation(line: 1199, column: 23, scope: !1189)
!1500 = !DILocation(line: 1199, column: 29, scope: !1189)
!1501 = !DILocation(line: 1199, column: 38, scope: !1189)
!1502 = !{!1241, !1224, i64 2524}
!1503 = !DILocation(line: 1199, column: 43, scope: !1189)
!1504 = !DILocation(line: 1200, column: 40, scope: !1189)
!1505 = !DILocation(line: 1200, column: 23, scope: !1189)
!1506 = !DILocation(line: 1200, column: 29, scope: !1189)
!1507 = !DILocation(line: 1200, column: 38, scope: !1189)
!1508 = !{!1241, !1229, i64 80}
!1509 = !DILocation(line: 1200, column: 48, scope: !1189)
!1510 = !DILocation(line: 1203, column: 41, scope: !1511)
!1511 = distinct !DILexicalBlock(scope: !1189, file: !2, line: 1203, column: 22)
!1512 = !DILocation(line: 1203, column: 23, scope: !1511)
!1513 = !DILocation(line: 1203, column: 22, scope: !1189)
!1514 = !DILocation(line: 1203, column: 72, scope: !1511)
!1515 = !DILocation(line: 1203, column: 78, scope: !1511)
!1516 = !DILocation(line: 1203, column: 53, scope: !1511)
!1517 = !DILocation(line: 1203, column: 59, scope: !1511)
!1518 = !DILocation(line: 1203, column: 70, scope: !1511)
!1519 = !{!1241, !1229, i64 40}
!1520 = !DILocation(line: 1204, column: 47, scope: !1521)
!1521 = distinct !DILexicalBlock(scope: !1511, file: !2, line: 1204, column: 27)
!1522 = !DILocation(line: 1204, column: 28, scope: !1521)
!1523 = !DILocation(line: 1204, column: 27, scope: !1511)
!1524 = !DILocation(line: 1204, column: 79, scope: !1521)
!1525 = !DILocation(line: 1204, column: 85, scope: !1521)
!1526 = !DILocation(line: 1204, column: 59, scope: !1521)
!1527 = !DILocation(line: 1204, column: 65, scope: !1521)
!1528 = !DILocation(line: 1204, column: 77, scope: !1521)
!1529 = !{!1241, !1229, i64 48}
!1530 = !DILocation(line: 1205, column: 95, scope: !1521)
!1531 = !DILocation(line: 1205, column: 102, scope: !1521)
!1532 = !DILocation(line: 1205, column: 22, scope: !1521)
!1533 = !DILocation(line: 1206, column: 17, scope: !1189)
!1534 = !DILocation(line: 1208, column: 41, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1189, file: !2, line: 1208, column: 22)
!1536 = !DILocation(line: 1208, column: 23, scope: !1535)
!1537 = !DILocation(line: 1208, column: 22, scope: !1189)
!1538 = !DILocation(line: 1208, column: 72, scope: !1535)
!1539 = !DILocation(line: 1208, column: 78, scope: !1535)
!1540 = !DILocation(line: 1208, column: 53, scope: !1535)
!1541 = !DILocation(line: 1208, column: 59, scope: !1535)
!1542 = !DILocation(line: 1208, column: 70, scope: !1535)
!1543 = !DILocation(line: 1208, column: 82, scope: !1535)
!1544 = !DILocation(line: 1208, column: 88, scope: !1535)
!1545 = !DILocation(line: 1208, column: 107, scope: !1535)
!1546 = !{!1241, !1224, i64 100}
!1547 = !DILocation(line: 1209, column: 47, scope: !1548)
!1548 = distinct !DILexicalBlock(scope: !1535, file: !2, line: 1209, column: 27)
!1549 = !DILocation(line: 1209, column: 28, scope: !1548)
!1550 = !DILocation(line: 1209, column: 27, scope: !1535)
!1551 = !DILocation(line: 1209, column: 79, scope: !1548)
!1552 = !DILocation(line: 1209, column: 85, scope: !1548)
!1553 = !DILocation(line: 1209, column: 59, scope: !1548)
!1554 = !DILocation(line: 1209, column: 65, scope: !1548)
!1555 = !DILocation(line: 1209, column: 77, scope: !1548)
!1556 = !DILocation(line: 1209, column: 89, scope: !1548)
!1557 = !DILocation(line: 1209, column: 95, scope: !1548)
!1558 = !DILocation(line: 1209, column: 115, scope: !1548)
!1559 = !{!1241, !1224, i64 104}
!1560 = !DILocation(line: 1210, column: 95, scope: !1548)
!1561 = !DILocation(line: 1210, column: 102, scope: !1548)
!1562 = !DILocation(line: 1210, column: 22, scope: !1548)
!1563 = !DILocation(line: 1211, column: 17, scope: !1189)
!1564 = !DILocation(line: 1212, column: 44, scope: !1189)
!1565 = !DILocation(line: 1212, column: 23, scope: !1189)
!1566 = !DILocation(line: 1212, column: 29, scope: !1189)
!1567 = !DILocation(line: 1212, column: 42, scope: !1189)
!1568 = !{!1241, !1229, i64 88}
!1569 = !DILocation(line: 1212, column: 52, scope: !1189)
!1570 = !DILocation(line: 1213, column: 44, scope: !1189)
!1571 = !DILocation(line: 1213, column: 23, scope: !1189)
!1572 = !DILocation(line: 1213, column: 29, scope: !1189)
!1573 = !DILocation(line: 1213, column: 42, scope: !1189)
!1574 = !DILocation(line: 1213, column: 52, scope: !1189)
!1575 = !DILocation(line: 1213, column: 58, scope: !1189)
!1576 = !DILocation(line: 1213, column: 79, scope: !1189)
!1577 = !{!1241, !1224, i64 116}
!1578 = !DILocation(line: 1213, column: 84, scope: !1189)
!1579 = !DILocation(line: 1214, column: 39, scope: !1189)
!1580 = !DILocation(line: 1214, column: 23, scope: !1189)
!1581 = !DILocation(line: 1214, column: 29, scope: !1189)
!1582 = !DILocation(line: 1214, column: 37, scope: !1189)
!1583 = !{!1241, !1229, i64 56}
!1584 = !DILocation(line: 1214, column: 47, scope: !1189)
!1585 = !DILocation(line: 1215, column: 39, scope: !1189)
!1586 = !DILocation(line: 1215, column: 23, scope: !1189)
!1587 = !DILocation(line: 1215, column: 29, scope: !1189)
!1588 = !DILocation(line: 1215, column: 37, scope: !1189)
!1589 = !DILocation(line: 1215, column: 47, scope: !1189)
!1590 = !DILocation(line: 1215, column: 53, scope: !1189)
!1591 = !DILocation(line: 1215, column: 69, scope: !1189)
!1592 = !{!1241, !1224, i64 108}
!1593 = !DILocation(line: 1215, column: 74, scope: !1189)
!1594 = !DILocation(line: 1216, column: 39, scope: !1189)
!1595 = !DILocation(line: 1216, column: 23, scope: !1189)
!1596 = !DILocation(line: 1216, column: 29, scope: !1189)
!1597 = !DILocation(line: 1216, column: 37, scope: !1189)
!1598 = !{!1241, !1229, i64 64}
!1599 = !DILocation(line: 1216, column: 47, scope: !1189)
!1600 = !DILocation(line: 1217, column: 39, scope: !1189)
!1601 = !DILocation(line: 1217, column: 23, scope: !1189)
!1602 = !DILocation(line: 1217, column: 29, scope: !1189)
!1603 = !DILocation(line: 1217, column: 37, scope: !1189)
!1604 = !DILocation(line: 1217, column: 47, scope: !1189)
!1605 = !DILocation(line: 1217, column: 53, scope: !1189)
!1606 = !DILocation(line: 1217, column: 69, scope: !1189)
!1607 = !{!1241, !1224, i64 112}
!1608 = !DILocation(line: 1217, column: 74, scope: !1189)
!1609 = !DILocation(line: 1219, column: 62, scope: !1189)
!1610 = !DILocation(line: 1219, column: 41, scope: !1189)
!1611 = !DILocation(line: 1219, column: 17, scope: !1189)
!1612 = !DILocation(line: 1219, column: 23, scope: !1189)
!1613 = !DILocation(line: 1219, column: 39, scope: !1189)
!1614 = !DILocation(line: 1220, column: 22, scope: !1615)
!1615 = distinct !DILexicalBlock(scope: !1189, file: !2, line: 1220, column: 22)
!1616 = !DILocation(line: 1220, column: 28, scope: !1615)
!1617 = !DILocation(line: 1220, column: 44, scope: !1615)
!1618 = !DILocation(line: 1220, column: 22, scope: !1189)
!1619 = !DILocation(line: 1220, column: 98, scope: !1615)
!1620 = !DILocation(line: 1220, column: 50, scope: !1615)
!1621 = !DILocation(line: 1221, column: 17, scope: !1189)
!1622 = !DILocation(line: 1223, column: 62, scope: !1189)
!1623 = !DILocation(line: 1223, column: 41, scope: !1189)
!1624 = !DILocation(line: 1223, column: 17, scope: !1189)
!1625 = !DILocation(line: 1223, column: 23, scope: !1189)
!1626 = !DILocation(line: 1223, column: 39, scope: !1189)
!1627 = !DILocation(line: 1224, column: 22, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1189, file: !2, line: 1224, column: 22)
!1629 = !DILocation(line: 1224, column: 28, scope: !1628)
!1630 = !DILocation(line: 1224, column: 44, scope: !1628)
!1631 = !DILocation(line: 1224, column: 22, scope: !1189)
!1632 = !DILocation(line: 1224, column: 98, scope: !1628)
!1633 = !DILocation(line: 1224, column: 50, scope: !1628)
!1634 = !DILocation(line: 1225, column: 17, scope: !1189)
!1635 = !DILocation(line: 1227, column: 23, scope: !1189)
!1636 = !DILocation(line: 1227, column: 32, scope: !1189)
!1637 = !DILocation(line: 1228, column: 54, scope: !1189)
!1638 = !DILocation(line: 1228, column: 22, scope: !1189)
!1639 = distinct !{!1639, !1294, !1640, !1393}
!1640 = !DILocation(line: 1230, column: 5, scope: !14)
!1641 = !DILocation(line: 1231, column: 10, scope: !1642)
!1642 = distinct !DILexicalBlock(scope: !14, file: !2, line: 1231, column: 10)
!1643 = !DILocation(line: 1231, column: 18, scope: !1642)
!1644 = !DILocation(line: 1231, column: 16, scope: !1642)
!1645 = !DILocation(line: 1231, column: 10, scope: !14)
!1646 = !DILocation(line: 1233, column: 37, scope: !1647)
!1647 = distinct !DILexicalBlock(scope: !1648, file: !2, line: 1233, column: 14)
!1648 = distinct !DILexicalBlock(scope: !1642, file: !2, line: 1232, column: 5)
!1649 = !DILocation(line: 1233, column: 22, scope: !1647)
!1650 = !DILocation(line: 1233, column: 15, scope: !1647)
!1651 = !DILocation(line: 1233, column: 14, scope: !1648)
!1652 = !DILocation(line: 1233, column: 47, scope: !1647)
!1653 = !DILocation(line: 1233, column: 53, scope: !1647)
!1654 = !DILocation(line: 1233, column: 63, scope: !1647)
!1655 = !{!1241, !1229, i64 72}
!1656 = !DILocation(line: 1234, column: 14, scope: !1647)
!1657 = !DILocation(line: 1235, column: 5, scope: !1648)
!1658 = !DILocation(line: 1236, column: 28, scope: !1642)
!1659 = !DILocation(line: 1236, column: 33, scope: !1642)
!1660 = !DILocation(line: 1236, column: 10, scope: !1642)
!1661 = !DILocation(line: 1236, column: 16, scope: !1642)
!1662 = !DILocation(line: 1236, column: 26, scope: !1642)
!1663 = !DILocation(line: 1237, column: 10, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !14, file: !2, line: 1237, column: 10)
!1665 = !DILocation(line: 1237, column: 15, scope: !1664)
!1666 = !DILocation(line: 1237, column: 21, scope: !1664)
!1667 = !DILocation(line: 1237, column: 14, scope: !1664)
!1668 = !DILocation(line: 1237, column: 10, scope: !14)
!1669 = !DILocation(line: 1237, column: 26, scope: !1664)
!1670 = !DILocation(line: 1238, column: 10, scope: !1671)
!1671 = distinct !DILexicalBlock(scope: !14, file: !2, line: 1238, column: 10)
!1672 = !DILocation(line: 1238, column: 16, scope: !1671)
!1673 = !DILocation(line: 1238, column: 10, scope: !14)
!1674 = !DILocation(line: 1240, column: 14, scope: !1675)
!1675 = distinct !DILexicalBlock(scope: !1676, file: !2, line: 1240, column: 14)
!1676 = distinct !DILexicalBlock(scope: !1671, file: !2, line: 1239, column: 5)
!1677 = !DILocation(line: 1240, column: 20, scope: !1675)
!1678 = !DILocation(line: 1240, column: 31, scope: !1675)
!1679 = !DILocation(line: 1240, column: 34, scope: !1675)
!1680 = !DILocation(line: 1240, column: 40, scope: !1675)
!1681 = !DILocation(line: 1240, column: 14, scope: !1676)
!1682 = !DILocation(line: 1240, column: 54, scope: !1675)
!1683 = !DILocation(line: 1241, column: 14, scope: !1684)
!1684 = distinct !DILexicalBlock(scope: !1676, file: !2, line: 1241, column: 14)
!1685 = !DILocation(line: 1241, column: 20, scope: !1684)
!1686 = !DILocation(line: 1241, column: 14, scope: !1676)
!1687 = !DILocation(line: 1241, column: 27, scope: !1684)
!1688 = !DILocation(line: 1242, column: 5, scope: !1676)
!1689 = !DILocation(line: 1243, column: 10, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !14, file: !2, line: 1243, column: 10)
!1691 = !DILocation(line: 1243, column: 16, scope: !1690)
!1692 = !DILocation(line: 1243, column: 34, scope: !1690)
!1693 = !DILocation(line: 1243, column: 38, scope: !1690)
!1694 = !DILocation(line: 1243, column: 44, scope: !1690)
!1695 = !DILocation(line: 1243, column: 10, scope: !14)
!1696 = !DILocation(line: 1243, column: 59, scope: !1690)
!1697 = !DILocation(line: 1244, column: 10, scope: !1698)
!1698 = distinct !DILexicalBlock(scope: !14, file: !2, line: 1244, column: 10)
!1699 = !DILocation(line: 1244, column: 16, scope: !1698)
!1700 = !DILocation(line: 1244, column: 25, scope: !1698)
!1701 = !DILocation(line: 1244, column: 29, scope: !1698)
!1702 = !DILocation(line: 1244, column: 35, scope: !1698)
!1703 = !DILocation(line: 1244, column: 10, scope: !14)
!1704 = !DILocation(line: 1244, column: 46, scope: !1698)
!1705 = !DILocation(line: 1245, column: 10, scope: !1706)
!1706 = distinct !DILexicalBlock(scope: !14, file: !2, line: 1245, column: 10)
!1707 = !DILocation(line: 1245, column: 16, scope: !1706)
!1708 = !DILocation(line: 1245, column: 34, scope: !1706)
!1709 = !DILocation(line: 1245, column: 37, scope: !1706)
!1710 = !DILocation(line: 1245, column: 43, scope: !1706)
!1711 = !DILocation(line: 1245, column: 10, scope: !14)
!1712 = !DILocation(line: 1245, column: 53, scope: !1706)
!1713 = !DILocation(line: 1247, column: 15, scope: !14)
!1714 = !DILocation(line: 1247, column: 5, scope: !14)
!1715 = !DILocation(line: 1249, column: 5, scope: !14)
!1716 = !DILocation(line: 1249, column: 9, scope: !14)
!1717 = !DILocation(line: 1250, column: 5, scope: !14)
!1718 = !DILocation(line: 1250, column: 35, scope: !14)
!1719 = !DILocation(line: 1250, column: 41, scope: !14)
!1720 = !{!1241, !1229, i64 0}
!1721 = !DILocation(line: 1250, column: 18, scope: !14)
!1722 = !DILocation(line: 1250, column: 17, scope: !14)
!1723 = !DILocation(line: 1252, column: 29, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1195, file: !2, line: 1252, column: 14)
!1725 = !DILocation(line: 1252, column: 34, scope: !1724)
!1726 = !DILocation(line: 1252, column: 15, scope: !1724)
!1727 = !DILocation(line: 1252, column: 14, scope: !1195)
!1728 = !DILocation(line: 1252, column: 41, scope: !1724)
!1729 = distinct !{!1729, !1717, !1730, !1393}
!1730 = !DILocation(line: 1268, column: 5, scope: !14)
!1731 = !DILocation(line: 1255, column: 9, scope: !1195)
!1732 = !DILocation(line: 1255, column: 24, scope: !1195)
!1733 = !DILocation(line: 1255, column: 28, scope: !1195)
!1734 = !DILocation(line: 1256, column: 15, scope: !1735)
!1735 = distinct !DILexicalBlock(scope: !1195, file: !2, line: 1256, column: 14)
!1736 = !DILocation(line: 1256, column: 21, scope: !1735)
!1737 = !{!1241, !1224, i64 200}
!1738 = !DILocation(line: 1256, column: 14, scope: !1195)
!1739 = !DILocation(line: 1256, column: 29, scope: !1735)
!1740 = !DILocation(line: 1258, column: 22, scope: !1195)
!1741 = !DILocation(line: 1258, column: 9, scope: !1195)
!1742 = !DILocation(line: 1260, column: 14, scope: !1206)
!1743 = !DILocation(line: 1260, column: 20, scope: !1206)
!1744 = !DILocation(line: 1260, column: 24, scope: !1206)
!1745 = !DILocation(line: 1260, column: 14, scope: !1195)
!1746 = !DILocation(line: 1262, column: 13, scope: !1205)
!1747 = !DILocation(line: 1263, column: 13, scope: !1205)
!1748 = !DILocation(line: 1263, column: 20, scope: !1205)
!1749 = !DILocation(line: 1263, column: 32, scope: !1205)
!1750 = !{!1751, !1243, i64 0}
!1751 = !{!"timeval", !1243, i64 0, !1243, i64 8}
!1752 = !DILocation(line: 1263, column: 44, scope: !1205)
!1753 = !DILocation(line: 1263, column: 39, scope: !1205)
!1754 = !DILocation(line: 1263, column: 28, scope: !1205)
!1755 = !DILocation(line: 1263, column: 64, scope: !1205)
!1756 = !{!1751, !1243, i64 8}
!1757 = !DILocation(line: 1263, column: 77, scope: !1205)
!1758 = !DILocation(line: 1263, column: 72, scope: !1205)
!1759 = !DILocation(line: 1263, column: 60, scope: !1205)
!1760 = !DILocation(line: 1263, column: 58, scope: !1205)
!1761 = !{!1242, !1242, i64 0}
!1762 = !DILocation(line: 1264, column: 21, scope: !1205)
!1763 = !DILocation(line: 1264, column: 98, scope: !1205)
!1764 = !DILocation(line: 1264, column: 103, scope: !1205)
!1765 = !DILocation(line: 1264, column: 13, scope: !1205)
!1766 = !DILocation(line: 1265, column: 21, scope: !1205)
!1767 = !DILocation(line: 1265, column: 27, scope: !1205)
!1768 = !{!1241, !1229, i64 2552}
!1769 = !DILocation(line: 1265, column: 90, scope: !1205)
!1770 = !DILocation(line: 1265, column: 95, scope: !1205)
!1771 = !DILocation(line: 1265, column: 13, scope: !1205)
!1772 = !DILocation(line: 1266, column: 18, scope: !1773)
!1773 = distinct !DILexicalBlock(scope: !1205, file: !2, line: 1266, column: 18)
!1774 = !DILocation(line: 1266, column: 24, scope: !1773)
!1775 = !DILocation(line: 1266, column: 18, scope: !1205)
!1776 = !DILocation(line: 1266, column: 34, scope: !1773)
!1777 = !DILocation(line: 1267, column: 9, scope: !1206)
!1778 = !DILocation(line: 1267, column: 9, scope: !1205)
!1779 = !DILocation(line: 1269, column: 11, scope: !1780)
!1780 = distinct !DILexicalBlock(scope: !14, file: !2, line: 1269, column: 10)
!1781 = !DILocation(line: 1269, column: 17, scope: !1780)
!1782 = !DILocation(line: 1269, column: 10, scope: !14)
!1783 = !DILocation(line: 1271, column: 16, scope: !1784)
!1784 = distinct !DILexicalBlock(scope: !1780, file: !2, line: 1270, column: 5)
!1785 = !DILocation(line: 1271, column: 9, scope: !1784)
!1786 = !DILocation(line: 1272, column: 14, scope: !1787)
!1787 = distinct !DILexicalBlock(scope: !1784, file: !2, line: 1272, column: 14)
!1788 = !DILocation(line: 1272, column: 20, scope: !1787)
!1789 = !DILocation(line: 1272, column: 14, scope: !1784)
!1790 = !DILocation(line: 1272, column: 65, scope: !1787)
!1791 = !DILocation(line: 1272, column: 40, scope: !1787)
!1792 = !DILocation(line: 1273, column: 5, scope: !1784)
!1793 = !DILocation(line: 1275, column: 18, scope: !14)
!1794 = !DILocation(line: 1275, column: 5, scope: !14)
!1795 = !DILocation(line: 1276, column: 10, scope: !14)
!1796 = !DILocation(line: 1276, column: 5, scope: !14)
!1797 = !DILocation(line: 1278, column: 1, scope: !14)
!1798 = !DILocation(line: 1277, column: 5, scope: !14)
!1799 = !DISubprogram(name: "calloc", scope: !1800, file: !1800, line: 543, type: !1801, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1800 = !DIFile(filename: "/usr/include/stdlib.h", directory: "", checksumkind: CSK_MD5, checksum: "02258fad21adf111bb9df9825e61954a")
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!182, !161, !161}
!1803 = distinct !DISubprogram(name: "set_cwd", scope: !2, file: !2, line: 84, type: !1804, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !1806)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{null, !113}
!1806 = !{!1807, !1808, !1809, !1810}
!1807 = !DILocalVariable(name: "args", arg: 1, scope: !1803, file: !2, line: 84, type: !113)
!1808 = !DILocalVariable(name: "i", scope: !1803, file: !2, line: 86, type: !17)
!1809 = !DILocalVariable(name: "buf", scope: !1803, file: !2, line: 87, type: !19)
!1810 = !DILocalVariable(name: "nbuf", scope: !1803, file: !2, line: 88, type: !161)
!1811 = !DILocation(line: 84, column: 29, scope: !1803)
!1812 = !DILocation(line: 86, column: 5, scope: !1803)
!1813 = !DILocation(line: 86, column: 9, scope: !1803)
!1814 = !DILocation(line: 87, column: 5, scope: !1803)
!1815 = !DILocation(line: 87, column: 11, scope: !1803)
!1816 = !DILocation(line: 88, column: 5, scope: !1803)
!1817 = !DILocation(line: 88, column: 12, scope: !1803)
!1818 = !{!1243, !1243, i64 0}
!1819 = !DILocation(line: 89, column: 45, scope: !1803)
!1820 = !DILocation(line: 89, column: 44, scope: !1803)
!1821 = !DILocation(line: 89, column: 25, scope: !1803)
!1822 = !DILocation(line: 89, column: 5, scope: !1803)
!1823 = !DILocation(line: 89, column: 11, scope: !1803)
!1824 = !DILocation(line: 89, column: 15, scope: !1803)
!1825 = !{!1241, !1229, i64 24}
!1826 = !DILocation(line: 90, column: 11, scope: !1827)
!1827 = distinct !DILexicalBlock(scope: !1803, file: !2, line: 90, column: 5)
!1828 = !DILocation(line: 90, column: 10, scope: !1827)
!1829 = !DILocation(line: 90, column: 15, scope: !1830)
!1830 = distinct !DILexicalBlock(scope: !1827, file: !2, line: 90, column: 5)
!1831 = !DILocation(line: 90, column: 16, scope: !1830)
!1832 = !DILocation(line: 90, column: 5, scope: !1827)
!1833 = !DILocation(line: 92, column: 28, scope: !1834)
!1834 = distinct !DILexicalBlock(scope: !1835, file: !2, line: 92, column: 14)
!1835 = distinct !DILexicalBlock(scope: !1830, file: !2, line: 91, column: 5)
!1836 = !DILocation(line: 92, column: 34, scope: !1834)
!1837 = !DILocation(line: 92, column: 39, scope: !1834)
!1838 = !DILocation(line: 92, column: 21, scope: !1834)
!1839 = !DILocation(line: 92, column: 19, scope: !1834)
!1840 = !DILocation(line: 92, column: 14, scope: !1835)
!1841 = !DILocation(line: 92, column: 48, scope: !1834)
!1842 = !DILocation(line: 93, column: 14, scope: !1835)
!1843 = !DILocation(line: 94, column: 37, scope: !1835)
!1844 = !DILocation(line: 94, column: 43, scope: !1835)
!1845 = !DILocation(line: 94, column: 61, scope: !1835)
!1846 = !DILocation(line: 94, column: 60, scope: !1835)
!1847 = !DILocation(line: 94, column: 29, scope: !1835)
!1848 = !DILocation(line: 94, column: 9, scope: !1835)
!1849 = !DILocation(line: 94, column: 15, scope: !1835)
!1850 = !DILocation(line: 94, column: 19, scope: !1835)
!1851 = !DILocation(line: 95, column: 5, scope: !1835)
!1852 = !DILocation(line: 90, column: 21, scope: !1830)
!1853 = !DILocation(line: 90, column: 5, scope: !1830)
!1854 = distinct !{!1854, !1832, !1855, !1393}
!1855 = !DILocation(line: 95, column: 5, scope: !1827)
!1856 = !DILocation(line: 97, column: 1, scope: !1803)
!1857 = !DISubprogram(name: "strdup", scope: !1858, file: !1858, line: 187, type: !1859, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1858 = !DIFile(filename: "/usr/include/string.h", directory: "", checksumkind: CSK_MD5, checksum: "f443da8025a0b7c1498fb6c554ec788d")
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!19, !203}
!1861 = !DISubprogram(name: "getopt_long", scope: !1209, file: !1209, line: 66, type: !1862, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{!17, !17, !1864, !203, !1866, !127}
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !19)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1868 = !DISubprogram(name: "strtol", scope: !1800, file: !1800, line: 177, type: !1869, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!154, !1871, !1872, !17}
!1871 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !203)
!1872 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !18)
!1873 = !DISubprogram(name: "error", scope: !1874, file: !1874, line: 45, type: !1875, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!1874 = !DIFile(filename: "bcftools/bcftools.h", directory: "/local-ssd/py-pysam-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z-build/aidengro/spack-stage-py-pysam-0.21.0-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z/spack-src", checksumkind: CSK_MD5, checksum: "e5a4c36ac6c6574f9a53c46051cc49dc")
!1875 = !DISubroutineType(types: !1876)
!1876 = !{null, !203, null}
!1877 = !DISubprogram(name: "hts_readlist", scope: !38, file: !38, line: 696, type: !1878, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{!18, !203, !17, !127}
!1880 = !DISubprogram(name: "strcasecmp", scope: !1881, file: !1881, line: 116, type: !1882, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1881 = !DIFile(filename: "/usr/include/strings.h", directory: "", checksumkind: CSK_MD5, checksum: "7444da68ad94ab9f25ff447750787173")
!1882 = !DISubroutineType(types: !1883)
!1883 = !{!17, !203, !203}
!1884 = !DISubprogram(name: "free", scope: !1800, file: !1800, line: 555, type: !1885, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{null, !182}
!1887 = !DISubprogram(name: "strtod", scope: !1800, file: !1800, line: 118, type: !1888, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1888 = !DISubroutineType(types: !1889)
!1889 = !{!531, !1871, !1872}
!1890 = !DISubprogram(name: "strncasecmp", scope: !1881, file: !1881, line: 120, type: !1891, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!17, !203, !203, !161}
!1893 = !DISubprogram(name: "parse_overlap_option", scope: !1874, file: !1874, line: 58, type: !1894, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1894 = !DISubroutineType(types: !1895)
!1895 = !{!17, !203}
!1896 = distinct !DISubprogram(name: "usage", scope: !2, file: !2, line: 1033, type: !1897, scopeLine: 1034, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20)
!1897 = !DISubroutineType(types: !1898)
!1898 = !{null}
!1899 = !DILocation(line: 1035, column: 13, scope: !1896)
!1900 = !DILocation(line: 1035, column: 5, scope: !1896)
!1901 = !DILocation(line: 1036, column: 13, scope: !1896)
!1902 = !DILocation(line: 1036, column: 5, scope: !1896)
!1903 = !DILocation(line: 1037, column: 13, scope: !1896)
!1904 = !DILocation(line: 1037, column: 5, scope: !1896)
!1905 = !DILocation(line: 1038, column: 13, scope: !1896)
!1906 = !DILocation(line: 1038, column: 5, scope: !1896)
!1907 = !DILocation(line: 1039, column: 13, scope: !1896)
!1908 = !DILocation(line: 1039, column: 5, scope: !1896)
!1909 = !DILocation(line: 1042, column: 13, scope: !1896)
!1910 = !DILocation(line: 1042, column: 5, scope: !1896)
!1911 = !DILocation(line: 1043, column: 13, scope: !1896)
!1912 = !DILocation(line: 1043, column: 5, scope: !1896)
!1913 = !DILocation(line: 1044, column: 13, scope: !1896)
!1914 = !DILocation(line: 1044, column: 5, scope: !1896)
!1915 = !DILocation(line: 1048, column: 13, scope: !1896)
!1916 = !DILocation(line: 1048, column: 5, scope: !1896)
!1917 = !DILocation(line: 1050, column: 13, scope: !1896)
!1918 = !DILocation(line: 1050, column: 5, scope: !1896)
!1919 = !DILocation(line: 1051, column: 13, scope: !1896)
!1920 = !DILocation(line: 1051, column: 5, scope: !1896)
!1921 = !DILocation(line: 1052, column: 13, scope: !1896)
!1922 = !DILocation(line: 1052, column: 5, scope: !1896)
!1923 = !DILocation(line: 1053, column: 13, scope: !1896)
!1924 = !DILocation(line: 1053, column: 5, scope: !1896)
!1925 = !DILocation(line: 1054, column: 13, scope: !1896)
!1926 = !DILocation(line: 1054, column: 5, scope: !1896)
!1927 = !DILocation(line: 1055, column: 13, scope: !1896)
!1928 = !DILocation(line: 1055, column: 5, scope: !1896)
!1929 = !DILocation(line: 1056, column: 13, scope: !1896)
!1930 = !DILocation(line: 1056, column: 5, scope: !1896)
!1931 = !DILocation(line: 1057, column: 13, scope: !1896)
!1932 = !DILocation(line: 1057, column: 5, scope: !1896)
!1933 = !DILocation(line: 1058, column: 13, scope: !1896)
!1934 = !DILocation(line: 1058, column: 5, scope: !1896)
!1935 = !DILocation(line: 1059, column: 13, scope: !1896)
!1936 = !DILocation(line: 1059, column: 5, scope: !1896)
!1937 = !DILocation(line: 1060, column: 13, scope: !1896)
!1938 = !DILocation(line: 1060, column: 5, scope: !1896)
!1939 = !DILocation(line: 1061, column: 13, scope: !1896)
!1940 = !DILocation(line: 1061, column: 5, scope: !1896)
!1941 = !DILocation(line: 1062, column: 13, scope: !1896)
!1942 = !DILocation(line: 1062, column: 5, scope: !1896)
!1943 = !DILocation(line: 1063, column: 13, scope: !1896)
!1944 = !DILocation(line: 1063, column: 5, scope: !1896)
!1945 = !DILocation(line: 1064, column: 13, scope: !1896)
!1946 = !DILocation(line: 1064, column: 5, scope: !1896)
!1947 = !DILocation(line: 1065, column: 13, scope: !1896)
!1948 = !DILocation(line: 1065, column: 5, scope: !1896)
!1949 = !DILocation(line: 1066, column: 13, scope: !1896)
!1950 = !DILocation(line: 1066, column: 5, scope: !1896)
!1951 = !DILocation(line: 1067, column: 13, scope: !1896)
!1952 = !DILocation(line: 1067, column: 5, scope: !1896)
!1953 = !DILocation(line: 1068, column: 13, scope: !1896)
!1954 = !DILocation(line: 1068, column: 5, scope: !1896)
!1955 = !DILocation(line: 1069, column: 13, scope: !1896)
!1956 = !DILocation(line: 1069, column: 5, scope: !1896)
!1957 = !DILocation(line: 1070, column: 13, scope: !1896)
!1958 = !DILocation(line: 1070, column: 5, scope: !1896)
!1959 = !DILocation(line: 1071, column: 13, scope: !1896)
!1960 = !DILocation(line: 1071, column: 5, scope: !1896)
!1961 = !DILocation(line: 1072, column: 13, scope: !1896)
!1962 = !DILocation(line: 1072, column: 5, scope: !1896)
!1963 = !DILocation(line: 1073, column: 13, scope: !1896)
!1964 = !DILocation(line: 1073, column: 5, scope: !1896)
!1965 = !DILocation(line: 1074, column: 13, scope: !1896)
!1966 = !DILocation(line: 1074, column: 5, scope: !1896)
!1967 = !DILocation(line: 1075, column: 13, scope: !1896)
!1968 = !DILocation(line: 1075, column: 5, scope: !1896)
!1969 = !DILocation(line: 1076, column: 13, scope: !1896)
!1970 = !DILocation(line: 1076, column: 5, scope: !1896)
!1971 = !DILocation(line: 1077, column: 13, scope: !1896)
!1972 = !DILocation(line: 1077, column: 5, scope: !1896)
!1973 = !DILocation(line: 1078, column: 5, scope: !1896)
!1974 = !DISubprogram(name: "isatty", scope: !1975, file: !1975, line: 809, type: !1976, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1975 = !DIFile(filename: "/usr/include/unistd.h", directory: "", checksumkind: CSK_MD5, checksum: "ed37c2e6f30ba31a8b41e4d70547c39c")
!1976 = !DISubroutineType(types: !1977)
!1977 = !{!17, !17}
!1978 = !DISubprogram(name: "fileno", scope: !1979, file: !1979, line: 809, type: !1980, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1979 = !DIFile(filename: "/usr/include/stdio.h", directory: "", checksumkind: CSK_MD5, checksum: "f31eefcc3f15835fc5a4023a625cf609")
!1980 = !DISubroutineType(types: !1981)
!1981 = !{!17, !573}
!1982 = distinct !DISubprogram(name: "init_data", scope: !2, file: !2, line: 237, type: !1804, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !1983)
!1983 = !{!1984, !1985, !1986, !1987, !1991, !1992}
!1984 = !DILocalVariable(name: "args", arg: 1, scope: !1982, file: !2, line: 237, type: !113)
!1985 = !DILocalVariable(name: "i", scope: !1982, file: !2, line: 307, type: !17)
!1986 = !DILocalVariable(name: "j", scope: !1982, file: !2, line: 307, type: !17)
!1987 = !DILocalVariable(name: "npairs", scope: !1988, file: !2, line: 321, type: !17)
!1988 = distinct !DILexicalBlock(scope: !1989, file: !2, line: 320, column: 5)
!1989 = distinct !DILexicalBlock(scope: !1990, file: !2, line: 319, column: 15)
!1990 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 313, column: 10)
!1991 = !DILocalVariable(name: "tmp", scope: !1988, file: !2, line: 322, type: !18)
!1992 = !DILocalVariable(name: "ptr", scope: !1993, file: !2, line: 343, type: !19)
!1993 = distinct !DILexicalBlock(scope: !1994, file: !2, line: 342, column: 13)
!1994 = distinct !DILexicalBlock(scope: !1995, file: !2, line: 341, column: 13)
!1995 = distinct !DILexicalBlock(scope: !1996, file: !2, line: 341, column: 13)
!1996 = distinct !DILexicalBlock(scope: !1997, file: !2, line: 340, column: 9)
!1997 = distinct !DILexicalBlock(scope: !1988, file: !2, line: 327, column: 14)
!1998 = !DILocation(line: 237, column: 31, scope: !1982)
!1999 = !DILocation(line: 239, column: 5, scope: !1982)
!2000 = !DILocation(line: 241, column: 19, scope: !1982)
!2001 = !DILocation(line: 241, column: 5, scope: !1982)
!2002 = !DILocation(line: 241, column: 11, scope: !1982)
!2003 = !DILocation(line: 241, column: 17, scope: !1982)
!2004 = !DILocation(line: 242, column: 10, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 242, column: 10)
!2006 = !DILocation(line: 242, column: 16, scope: !2005)
!2007 = !DILocation(line: 242, column: 10, scope: !1982)
!2008 = !DILocation(line: 244, column: 24, scope: !2009)
!2009 = distinct !DILexicalBlock(scope: !2005, file: !2, line: 243, column: 5)
!2010 = !DILocation(line: 244, column: 30, scope: !2009)
!2011 = !DILocation(line: 244, column: 59, scope: !2009)
!2012 = !DILocation(line: 244, column: 65, scope: !2009)
!2013 = !DILocation(line: 244, column: 9, scope: !2009)
!2014 = !DILocation(line: 245, column: 33, scope: !2015)
!2015 = distinct !DILexicalBlock(scope: !2009, file: !2, line: 245, column: 14)
!2016 = !DILocation(line: 245, column: 39, scope: !2015)
!2017 = !DILocation(line: 245, column: 46, scope: !2015)
!2018 = !DILocation(line: 245, column: 52, scope: !2015)
!2019 = !DILocation(line: 245, column: 61, scope: !2015)
!2020 = !DILocation(line: 245, column: 67, scope: !2015)
!2021 = !DILocation(line: 245, column: 14, scope: !2015)
!2022 = !DILocation(line: 245, column: 83, scope: !2015)
!2023 = !DILocation(line: 245, column: 14, scope: !2009)
!2024 = !DILocation(line: 245, column: 130, scope: !2015)
!2025 = !DILocation(line: 245, column: 136, scope: !2015)
!2026 = !DILocation(line: 245, column: 88, scope: !2015)
!2027 = !DILocation(line: 246, column: 5, scope: !2009)
!2028 = !DILocation(line: 247, column: 10, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 247, column: 10)
!2030 = !DILocation(line: 247, column: 16, scope: !2029)
!2031 = !DILocation(line: 247, column: 10, scope: !1982)
!2032 = !DILocation(line: 249, column: 24, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !2029, file: !2, line: 248, column: 5)
!2034 = !DILocation(line: 249, column: 30, scope: !2033)
!2035 = !DILocation(line: 249, column: 59, scope: !2033)
!2036 = !DILocation(line: 249, column: 65, scope: !2033)
!2037 = !DILocation(line: 249, column: 9, scope: !2033)
!2038 = !DILocation(line: 250, column: 33, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !2033, file: !2, line: 250, column: 14)
!2040 = !DILocation(line: 250, column: 39, scope: !2039)
!2041 = !DILocation(line: 250, column: 46, scope: !2039)
!2042 = !DILocation(line: 250, column: 52, scope: !2039)
!2043 = !DILocation(line: 250, column: 61, scope: !2039)
!2044 = !DILocation(line: 250, column: 67, scope: !2039)
!2045 = !DILocation(line: 250, column: 14, scope: !2039)
!2046 = !DILocation(line: 250, column: 86, scope: !2039)
!2047 = !DILocation(line: 250, column: 14, scope: !2033)
!2048 = !DILocation(line: 250, column: 133, scope: !2039)
!2049 = !DILocation(line: 250, column: 139, scope: !2039)
!2050 = !DILocation(line: 250, column: 91, scope: !2039)
!2051 = !DILocation(line: 251, column: 5, scope: !2033)
!2052 = !DILocation(line: 253, column: 10, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 253, column: 10)
!2054 = !DILocation(line: 253, column: 16, scope: !2053)
!2055 = !DILocation(line: 253, column: 10, scope: !1982)
!2056 = !DILocation(line: 253, column: 42, scope: !2053)
!2057 = !DILocation(line: 253, column: 48, scope: !2053)
!2058 = !DILocation(line: 253, column: 27, scope: !2053)
!2059 = !DILocation(line: 254, column: 29, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 254, column: 10)
!2061 = !DILocation(line: 254, column: 35, scope: !2060)
!2062 = !DILocation(line: 254, column: 41, scope: !2060)
!2063 = !DILocation(line: 254, column: 47, scope: !2060)
!2064 = !DILocation(line: 254, column: 11, scope: !2060)
!2065 = !DILocation(line: 254, column: 10, scope: !1982)
!2066 = !DILocation(line: 254, column: 93, scope: !2060)
!2067 = !DILocation(line: 254, column: 99, scope: !2060)
!2068 = !DILocation(line: 254, column: 125, scope: !2060)
!2069 = !DILocation(line: 254, column: 131, scope: !2060)
!2070 = !DILocation(line: 254, column: 138, scope: !2060)
!2071 = !{!2072, !1225, i64 32}
!2072 = !{!"bcf_srs_t", !1224, i64 0, !1229, i64 8, !1224, i64 16, !1224, i64 20, !1229, i64 24, !1225, i64 32, !1229, i64 40, !1224, i64 48, !1224, i64 52, !1224, i64 56, !1229, i64 64, !1229, i64 72, !1229, i64 80, !1224, i64 88, !1224, i64 92, !2073, i64 96, !1224, i64 120, !1224, i64 124, !1229, i64 128, !1229, i64 136}
!2073 = !{!"kstring_t", !1243, i64 0, !1243, i64 8, !1229, i64 16}
!2074 = !DILocation(line: 254, column: 109, scope: !2060)
!2075 = !DILocation(line: 254, column: 60, scope: !2060)
!2076 = !DILocation(line: 255, column: 10, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 255, column: 10)
!2078 = !DILocation(line: 255, column: 16, scope: !2077)
!2079 = !DILocation(line: 255, column: 25, scope: !2077)
!2080 = !DILocation(line: 255, column: 47, scope: !2077)
!2081 = !DILocation(line: 255, column: 53, scope: !2077)
!2082 = !DILocation(line: 255, column: 60, scope: !2077)
!2083 = !DILocation(line: 255, column: 66, scope: !2077)
!2084 = !DILocation(line: 255, column: 29, scope: !2077)
!2085 = !DILocation(line: 255, column: 10, scope: !1982)
!2086 = !DILocation(line: 256, column: 59, scope: !2077)
!2087 = !DILocation(line: 256, column: 65, scope: !2077)
!2088 = !DILocation(line: 256, column: 48, scope: !2077)
!2089 = !DILocation(line: 256, column: 47, scope: !2077)
!2090 = !DILocation(line: 256, column: 92, scope: !2077)
!2091 = !DILocation(line: 256, column: 98, scope: !2077)
!2092 = !DILocation(line: 256, column: 123, scope: !2077)
!2093 = !DILocation(line: 256, column: 129, scope: !2077)
!2094 = !DILocation(line: 256, column: 136, scope: !2077)
!2095 = !DILocation(line: 256, column: 107, scope: !2077)
!2096 = !DILocation(line: 256, column: 9, scope: !2077)
!2097 = !DILocation(line: 258, column: 21, scope: !1982)
!2098 = !{!2072, !1229, i64 40}
!2099 = !{!2100, !1229, i64 24}
!2100 = !{!"bcf_sr_t", !1229, i64 0, !1229, i64 8, !1229, i64 16, !1229, i64 24, !1229, i64 32, !1229, i64 40, !1229, i64 48, !1224, i64 56, !1224, i64 60, !1224, i64 64, !1229, i64 72, !1229, i64 80, !1224, i64 88}
!2101 = !DILocation(line: 258, column: 5, scope: !1982)
!2102 = !DILocation(line: 258, column: 11, scope: !1982)
!2103 = !DILocation(line: 258, column: 19, scope: !1982)
!2104 = !{!1241, !1229, i64 16}
!2105 = !DILocation(line: 259, column: 11, scope: !2106)
!2106 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 259, column: 10)
!2107 = !DILocation(line: 259, column: 10, scope: !1982)
!2108 = !DILocation(line: 259, column: 74, scope: !2106)
!2109 = !DILocation(line: 259, column: 80, scope: !2106)
!2110 = !DILocation(line: 259, column: 45, scope: !2106)
!2111 = !DILocation(line: 260, column: 10, scope: !2112)
!2112 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 260, column: 10)
!2113 = !DILocation(line: 260, column: 16, scope: !2112)
!2114 = !DILocation(line: 260, column: 10, scope: !1982)
!2115 = !DILocation(line: 262, column: 24, scope: !2116)
!2116 = distinct !DILexicalBlock(scope: !2112, file: !2, line: 261, column: 5)
!2117 = !DILocation(line: 262, column: 9, scope: !2116)
!2118 = !DILocation(line: 262, column: 15, scope: !2116)
!2119 = !DILocation(line: 262, column: 22, scope: !2116)
!2120 = !{!1241, !1229, i64 8}
!2121 = !DILocation(line: 263, column: 15, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !2116, file: !2, line: 263, column: 14)
!2123 = !DILocation(line: 263, column: 14, scope: !2116)
!2124 = !DILocation(line: 263, column: 77, scope: !2122)
!2125 = !DILocation(line: 263, column: 83, scope: !2122)
!2126 = !DILocation(line: 263, column: 48, scope: !2122)
!2127 = !DILocation(line: 264, column: 5, scope: !2116)
!2128 = !DILocation(line: 267, column: 10, scope: !2129)
!2129 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 267, column: 10)
!2130 = !DILocation(line: 267, column: 16, scope: !2129)
!2131 = !DILocation(line: 267, column: 26, scope: !2129)
!2132 = !DILocation(line: 267, column: 10, scope: !1982)
!2133 = !DILocation(line: 269, column: 29, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2135, file: !2, line: 269, column: 14)
!2135 = distinct !DILexicalBlock(scope: !2129, file: !2, line: 268, column: 5)
!2136 = !DILocation(line: 269, column: 35, scope: !2134)
!2137 = !DILocation(line: 269, column: 14, scope: !2134)
!2138 = !DILocation(line: 269, column: 58, scope: !2134)
!2139 = !DILocation(line: 269, column: 14, scope: !2135)
!2140 = !DILocation(line: 270, column: 13, scope: !2134)
!2141 = !DILocation(line: 270, column: 19, scope: !2134)
!2142 = !DILocation(line: 270, column: 30, scope: !2134)
!2143 = !DILocation(line: 271, column: 34, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !2134, file: !2, line: 271, column: 19)
!2145 = !DILocation(line: 271, column: 40, scope: !2144)
!2146 = !DILocation(line: 271, column: 19, scope: !2144)
!2147 = !DILocation(line: 271, column: 63, scope: !2144)
!2148 = !DILocation(line: 271, column: 19, scope: !2134)
!2149 = !DILocation(line: 272, column: 13, scope: !2144)
!2150 = !DILocation(line: 272, column: 19, scope: !2144)
!2151 = !DILocation(line: 272, column: 30, scope: !2144)
!2152 = !DILocation(line: 274, column: 95, scope: !2144)
!2153 = !DILocation(line: 274, column: 101, scope: !2144)
!2154 = !DILocation(line: 274, column: 13, scope: !2144)
!2155 = !DILocation(line: 275, column: 5, scope: !2135)
!2156 = !DILocation(line: 276, column: 15, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2129, file: !2, line: 276, column: 15)
!2158 = !DILocation(line: 276, column: 21, scope: !2157)
!2159 = !DILocation(line: 276, column: 31, scope: !2157)
!2160 = !DILocation(line: 276, column: 15, scope: !2129)
!2161 = !DILocation(line: 278, column: 29, scope: !2162)
!2162 = distinct !DILexicalBlock(scope: !2163, file: !2, line: 278, column: 14)
!2163 = distinct !DILexicalBlock(scope: !2157, file: !2, line: 277, column: 5)
!2164 = !DILocation(line: 278, column: 35, scope: !2162)
!2165 = !DILocation(line: 278, column: 14, scope: !2162)
!2166 = !DILocation(line: 278, column: 58, scope: !2162)
!2167 = !DILocation(line: 278, column: 14, scope: !2163)
!2168 = !DILocation(line: 279, column: 88, scope: !2162)
!2169 = !DILocation(line: 279, column: 94, scope: !2162)
!2170 = !DILocation(line: 279, column: 13, scope: !2162)
!2171 = !DILocation(line: 280, column: 5, scope: !2163)
!2172 = !DILocation(line: 281, column: 30, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2157, file: !2, line: 281, column: 15)
!2174 = !DILocation(line: 281, column: 36, scope: !2173)
!2175 = !DILocation(line: 281, column: 15, scope: !2173)
!2176 = !DILocation(line: 281, column: 59, scope: !2173)
!2177 = !DILocation(line: 281, column: 15, scope: !2157)
!2178 = !DILocation(line: 282, column: 84, scope: !2173)
!2179 = !DILocation(line: 282, column: 90, scope: !2173)
!2180 = !DILocation(line: 282, column: 9, scope: !2173)
!2181 = !DILocation(line: 284, column: 10, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 284, column: 10)
!2183 = !DILocation(line: 284, column: 16, scope: !2182)
!2184 = !DILocation(line: 284, column: 10, scope: !1982)
!2185 = !DILocation(line: 286, column: 14, scope: !2186)
!2186 = distinct !DILexicalBlock(scope: !2187, file: !2, line: 286, column: 14)
!2187 = distinct !DILexicalBlock(scope: !2182, file: !2, line: 285, column: 5)
!2188 = !DILocation(line: 286, column: 20, scope: !2186)
!2189 = !DILocation(line: 286, column: 29, scope: !2186)
!2190 = !DILocation(line: 286, column: 14, scope: !2187)
!2191 = !DILocation(line: 288, column: 33, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2193, file: !2, line: 288, column: 18)
!2193 = distinct !DILexicalBlock(scope: !2186, file: !2, line: 287, column: 9)
!2194 = !DILocation(line: 288, column: 39, scope: !2192)
!2195 = !DILocation(line: 288, column: 18, scope: !2192)
!2196 = !DILocation(line: 288, column: 61, scope: !2192)
!2197 = !DILocation(line: 288, column: 18, scope: !2193)
!2198 = !DILocation(line: 289, column: 17, scope: !2192)
!2199 = !DILocation(line: 289, column: 23, scope: !2192)
!2200 = !DILocation(line: 289, column: 33, scope: !2192)
!2201 = !DILocation(line: 290, column: 38, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2192, file: !2, line: 290, column: 23)
!2203 = !DILocation(line: 290, column: 44, scope: !2202)
!2204 = !DILocation(line: 290, column: 23, scope: !2202)
!2205 = !DILocation(line: 290, column: 66, scope: !2202)
!2206 = !DILocation(line: 290, column: 23, scope: !2192)
!2207 = !DILocation(line: 291, column: 17, scope: !2202)
!2208 = !DILocation(line: 291, column: 23, scope: !2202)
!2209 = !DILocation(line: 291, column: 33, scope: !2202)
!2210 = !DILocation(line: 293, column: 99, scope: !2202)
!2211 = !DILocation(line: 293, column: 105, scope: !2202)
!2212 = !DILocation(line: 293, column: 17, scope: !2202)
!2213 = !DILocation(line: 294, column: 9, scope: !2193)
!2214 = !DILocation(line: 295, column: 19, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2186, file: !2, line: 295, column: 19)
!2216 = !DILocation(line: 295, column: 25, scope: !2215)
!2217 = !DILocation(line: 295, column: 34, scope: !2215)
!2218 = !DILocation(line: 295, column: 19, scope: !2186)
!2219 = !DILocation(line: 297, column: 33, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2221, file: !2, line: 297, column: 18)
!2221 = distinct !DILexicalBlock(scope: !2215, file: !2, line: 296, column: 9)
!2222 = !DILocation(line: 297, column: 39, scope: !2220)
!2223 = !DILocation(line: 297, column: 18, scope: !2220)
!2224 = !DILocation(line: 297, column: 61, scope: !2220)
!2225 = !DILocation(line: 297, column: 18, scope: !2221)
!2226 = !DILocation(line: 298, column: 92, scope: !2220)
!2227 = !DILocation(line: 298, column: 98, scope: !2220)
!2228 = !DILocation(line: 298, column: 17, scope: !2220)
!2229 = !DILocation(line: 299, column: 9, scope: !2221)
!2230 = !DILocation(line: 300, column: 34, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2215, file: !2, line: 300, column: 19)
!2232 = !DILocation(line: 300, column: 40, scope: !2231)
!2233 = !DILocation(line: 300, column: 19, scope: !2231)
!2234 = !DILocation(line: 300, column: 62, scope: !2231)
!2235 = !DILocation(line: 300, column: 19, scope: !2215)
!2236 = !DILocation(line: 301, column: 88, scope: !2231)
!2237 = !DILocation(line: 301, column: 94, scope: !2231)
!2238 = !DILocation(line: 301, column: 13, scope: !2231)
!2239 = !DILocation(line: 302, column: 5, scope: !2187)
!2240 = !DILocation(line: 304, column: 27, scope: !2182)
!2241 = !DILocation(line: 304, column: 33, scope: !2182)
!2242 = !DILocation(line: 304, column: 9, scope: !2182)
!2243 = !DILocation(line: 304, column: 15, scope: !2182)
!2244 = !DILocation(line: 304, column: 25, scope: !2182)
!2245 = !DILocation(line: 307, column: 5, scope: !1982)
!2246 = !DILocation(line: 307, column: 9, scope: !1982)
!2247 = !DILocation(line: 307, column: 11, scope: !1982)
!2248 = !DILocation(line: 308, column: 23, scope: !1982)
!2249 = !DILocation(line: 308, column: 5, scope: !1982)
!2250 = !DILocation(line: 308, column: 11, scope: !1982)
!2251 = !DILocation(line: 308, column: 21, scope: !1982)
!2252 = !{!1241, !1224, i64 136}
!2253 = !DILocation(line: 309, column: 10, scope: !2254)
!2254 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 309, column: 10)
!2255 = !DILocation(line: 309, column: 16, scope: !2254)
!2256 = !DILocation(line: 309, column: 10, scope: !1982)
!2257 = !DILocation(line: 311, column: 22, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2254, file: !2, line: 310, column: 5)
!2259 = !DILocation(line: 311, column: 28, scope: !2258)
!2260 = !DILocation(line: 311, column: 41, scope: !2258)
!2261 = !DILocation(line: 311, column: 47, scope: !2258)
!2262 = !DILocation(line: 311, column: 69, scope: !2258)
!2263 = !DILocation(line: 311, column: 75, scope: !2258)
!2264 = !DILocation(line: 311, column: 86, scope: !2258)
!2265 = !DILocation(line: 311, column: 92, scope: !2258)
!2266 = !DILocation(line: 311, column: 103, scope: !2258)
!2267 = !DILocation(line: 311, column: 109, scope: !2258)
!2268 = !DILocation(line: 311, column: 118, scope: !2258)
!2269 = !DILocation(line: 311, column: 124, scope: !2258)
!2270 = !DILocation(line: 311, column: 9, scope: !2258)
!2271 = !DILocation(line: 312, column: 5, scope: !2258)
!2272 = !DILocation(line: 313, column: 10, scope: !1990)
!2273 = !DILocation(line: 313, column: 16, scope: !1990)
!2274 = !DILocation(line: 313, column: 10, scope: !1982)
!2275 = !DILocation(line: 315, column: 22, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !1990, file: !2, line: 314, column: 5)
!2277 = !DILocation(line: 315, column: 28, scope: !2276)
!2278 = !DILocation(line: 315, column: 40, scope: !2276)
!2279 = !DILocation(line: 315, column: 46, scope: !2276)
!2280 = !DILocation(line: 315, column: 67, scope: !2276)
!2281 = !DILocation(line: 315, column: 73, scope: !2276)
!2282 = !DILocation(line: 315, column: 83, scope: !2276)
!2283 = !DILocation(line: 315, column: 89, scope: !2276)
!2284 = !DILocation(line: 316, column: 13, scope: !2276)
!2285 = !DILocation(line: 316, column: 19, scope: !2276)
!2286 = !DILocation(line: 316, column: 28, scope: !2276)
!2287 = !DILocation(line: 316, column: 34, scope: !2276)
!2288 = !DILocation(line: 316, column: 43, scope: !2276)
!2289 = !DILocation(line: 316, column: 49, scope: !2276)
!2290 = !DILocation(line: 317, column: 13, scope: !2276)
!2291 = !DILocation(line: 317, column: 19, scope: !2276)
!2292 = !DILocation(line: 317, column: 30, scope: !2276)
!2293 = !DILocation(line: 317, column: 36, scope: !2276)
!2294 = !DILocation(line: 317, column: 47, scope: !2276)
!2295 = !DILocation(line: 317, column: 53, scope: !2276)
!2296 = !DILocation(line: 315, column: 9, scope: !2276)
!2297 = !DILocation(line: 318, column: 5, scope: !2276)
!2298 = !DILocation(line: 319, column: 15, scope: !1989)
!2299 = !DILocation(line: 319, column: 21, scope: !1989)
!2300 = !DILocation(line: 319, column: 15, scope: !1990)
!2301 = !DILocation(line: 321, column: 9, scope: !1988)
!2302 = !DILocation(line: 321, column: 13, scope: !1988)
!2303 = !DILocation(line: 322, column: 9, scope: !1988)
!2304 = !DILocation(line: 322, column: 16, scope: !1988)
!2305 = !DILocation(line: 322, column: 35, scope: !1988)
!2306 = !DILocation(line: 322, column: 41, scope: !1988)
!2307 = !DILocation(line: 322, column: 55, scope: !1988)
!2308 = !DILocation(line: 322, column: 61, scope: !1988)
!2309 = !DILocation(line: 322, column: 22, scope: !1988)
!2310 = !DILocation(line: 323, column: 15, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !1988, file: !2, line: 323, column: 14)
!2312 = !DILocation(line: 323, column: 19, scope: !2311)
!2313 = !DILocation(line: 323, column: 23, scope: !2311)
!2314 = !DILocation(line: 323, column: 14, scope: !1988)
!2315 = !DILocation(line: 323, column: 62, scope: !2311)
!2316 = !DILocation(line: 323, column: 68, scope: !2311)
!2317 = !DILocation(line: 323, column: 32, scope: !2311)
!2318 = !DILocation(line: 324, column: 15, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !1988, file: !2, line: 324, column: 14)
!2320 = !DILocation(line: 324, column: 21, scope: !2319)
!2321 = !DILocation(line: 324, column: 42, scope: !2319)
!2322 = !DILocation(line: 324, column: 45, scope: !2319)
!2323 = !DILocation(line: 324, column: 51, scope: !2319)
!2324 = !DILocation(line: 324, column: 14, scope: !1988)
!2325 = !DILocation(line: 324, column: 56, scope: !2319)
!2326 = !DILocation(line: 325, column: 24, scope: !1988)
!2327 = !DILocation(line: 325, column: 30, scope: !1988)
!2328 = !DILocation(line: 325, column: 53, scope: !1988)
!2329 = !DILocation(line: 325, column: 62, scope: !1988)
!2330 = !DILocation(line: 325, column: 68, scope: !1988)
!2331 = !DILocation(line: 325, column: 9, scope: !1988)
!2332 = !DILocation(line: 325, column: 15, scope: !1988)
!2333 = !DILocation(line: 325, column: 22, scope: !1988)
!2334 = !{!1241, !1224, i64 204}
!2335 = !DILocation(line: 326, column: 41, scope: !1988)
!2336 = !DILocation(line: 326, column: 47, scope: !1988)
!2337 = !DILocation(line: 326, column: 34, scope: !1988)
!2338 = !DILocation(line: 326, column: 9, scope: !1988)
!2339 = !DILocation(line: 326, column: 15, scope: !1988)
!2340 = !DILocation(line: 326, column: 22, scope: !1988)
!2341 = !{!1241, !1229, i64 248}
!2342 = !DILocation(line: 327, column: 15, scope: !1997)
!2343 = !DILocation(line: 327, column: 21, scope: !1997)
!2344 = !DILocation(line: 327, column: 14, scope: !1988)
!2345 = !DILocation(line: 329, column: 19, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2347, file: !2, line: 329, column: 13)
!2347 = distinct !DILexicalBlock(scope: !1997, file: !2, line: 328, column: 9)
!2348 = !DILocation(line: 329, column: 18, scope: !2346)
!2349 = !DILocation(line: 329, column: 23, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2346, file: !2, line: 329, column: 13)
!2351 = !DILocation(line: 329, column: 25, scope: !2350)
!2352 = !DILocation(line: 329, column: 31, scope: !2350)
!2353 = !DILocation(line: 329, column: 24, scope: !2350)
!2354 = !DILocation(line: 329, column: 13, scope: !2346)
!2355 = !DILocation(line: 331, column: 54, scope: !2356)
!2356 = distinct !DILexicalBlock(scope: !2350, file: !2, line: 330, column: 13)
!2357 = !DILocation(line: 331, column: 60, scope: !2356)
!2358 = !DILocation(line: 331, column: 84, scope: !2356)
!2359 = !DILocation(line: 331, column: 90, scope: !2356)
!2360 = !DILocation(line: 331, column: 89, scope: !2356)
!2361 = !DILocation(line: 331, column: 39, scope: !2356)
!2362 = !DILocation(line: 331, column: 17, scope: !2356)
!2363 = !DILocation(line: 331, column: 23, scope: !2356)
!2364 = !DILocation(line: 331, column: 29, scope: !2356)
!2365 = !DILocation(line: 331, column: 32, scope: !2356)
!2366 = !DILocation(line: 331, column: 37, scope: !2356)
!2367 = !{!2368, !1224, i64 0}
!2368 = !{!"", !1224, i64 0, !1224, i64 4}
!2369 = !DILocation(line: 332, column: 54, scope: !2356)
!2370 = !DILocation(line: 332, column: 60, scope: !2356)
!2371 = !DILocation(line: 332, column: 67, scope: !2356)
!2372 = !DILocation(line: 332, column: 73, scope: !2356)
!2373 = !DILocation(line: 332, column: 80, scope: !2356)
!2374 = !DILocation(line: 332, column: 86, scope: !2356)
!2375 = !DILocation(line: 332, column: 110, scope: !2356)
!2376 = !DILocation(line: 332, column: 116, scope: !2356)
!2377 = !DILocation(line: 332, column: 115, scope: !2356)
!2378 = !DILocation(line: 332, column: 117, scope: !2356)
!2379 = !DILocation(line: 332, column: 39, scope: !2356)
!2380 = !DILocation(line: 332, column: 17, scope: !2356)
!2381 = !DILocation(line: 332, column: 23, scope: !2356)
!2382 = !DILocation(line: 332, column: 29, scope: !2356)
!2383 = !DILocation(line: 332, column: 32, scope: !2356)
!2384 = !DILocation(line: 332, column: 37, scope: !2356)
!2385 = !{!2368, !1224, i64 4}
!2386 = !DILocation(line: 333, column: 22, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2356, file: !2, line: 333, column: 22)
!2388 = !DILocation(line: 333, column: 28, scope: !2387)
!2389 = !DILocation(line: 333, column: 34, scope: !2387)
!2390 = !DILocation(line: 333, column: 37, scope: !2387)
!2391 = !DILocation(line: 333, column: 42, scope: !2387)
!2392 = !DILocation(line: 333, column: 22, scope: !2356)
!2393 = !DILocation(line: 333, column: 85, scope: !2387)
!2394 = !DILocation(line: 333, column: 91, scope: !2387)
!2395 = !DILocation(line: 333, column: 101, scope: !2387)
!2396 = !DILocation(line: 333, column: 107, scope: !2387)
!2397 = !DILocation(line: 333, column: 106, scope: !2387)
!2398 = !DILocation(line: 333, column: 48, scope: !2387)
!2399 = !DILocation(line: 334, column: 22, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2356, file: !2, line: 334, column: 22)
!2401 = !DILocation(line: 334, column: 28, scope: !2400)
!2402 = !DILocation(line: 334, column: 34, scope: !2400)
!2403 = !DILocation(line: 334, column: 37, scope: !2400)
!2404 = !DILocation(line: 334, column: 42, scope: !2400)
!2405 = !DILocation(line: 334, column: 22, scope: !2356)
!2406 = !DILocation(line: 334, column: 85, scope: !2400)
!2407 = !DILocation(line: 334, column: 91, scope: !2400)
!2408 = !DILocation(line: 334, column: 100, scope: !2400)
!2409 = !DILocation(line: 334, column: 106, scope: !2400)
!2410 = !DILocation(line: 334, column: 115, scope: !2400)
!2411 = !DILocation(line: 334, column: 121, scope: !2400)
!2412 = !DILocation(line: 334, column: 131, scope: !2400)
!2413 = !DILocation(line: 334, column: 137, scope: !2400)
!2414 = !DILocation(line: 334, column: 136, scope: !2400)
!2415 = !DILocation(line: 334, column: 138, scope: !2400)
!2416 = !DILocation(line: 334, column: 48, scope: !2400)
!2417 = !DILocation(line: 335, column: 22, scope: !2356)
!2418 = !DILocation(line: 335, column: 28, scope: !2356)
!2419 = !DILocation(line: 335, column: 27, scope: !2356)
!2420 = !DILocation(line: 335, column: 17, scope: !2356)
!2421 = !DILocation(line: 336, column: 22, scope: !2356)
!2422 = !DILocation(line: 336, column: 28, scope: !2356)
!2423 = !DILocation(line: 336, column: 27, scope: !2356)
!2424 = !DILocation(line: 336, column: 29, scope: !2356)
!2425 = !DILocation(line: 336, column: 17, scope: !2356)
!2426 = !DILocation(line: 337, column: 13, scope: !2356)
!2427 = !DILocation(line: 329, column: 40, scope: !2350)
!2428 = !DILocation(line: 329, column: 13, scope: !2350)
!2429 = distinct !{!2429, !2354, !2430, !1393}
!2430 = !DILocation(line: 337, column: 13, scope: !2346)
!2431 = !DILocation(line: 338, column: 9, scope: !2347)
!2432 = !DILocation(line: 341, column: 19, scope: !1995)
!2433 = !DILocation(line: 341, column: 18, scope: !1995)
!2434 = !DILocation(line: 341, column: 23, scope: !1994)
!2435 = !DILocation(line: 341, column: 25, scope: !1994)
!2436 = !DILocation(line: 341, column: 31, scope: !1994)
!2437 = !DILocation(line: 341, column: 24, scope: !1994)
!2438 = !DILocation(line: 341, column: 13, scope: !1995)
!2439 = !DILocation(line: 343, column: 17, scope: !1993)
!2440 = !DILocation(line: 343, column: 23, scope: !1993)
!2441 = !DILocation(line: 343, column: 29, scope: !1993)
!2442 = !DILocation(line: 343, column: 33, scope: !1993)
!2443 = !DILocation(line: 344, column: 17, scope: !1993)
!2444 = !DILocation(line: 344, column: 26, scope: !1993)
!2445 = !DILocation(line: 344, column: 25, scope: !1993)
!2446 = !DILocation(line: 344, column: 30, scope: !1993)
!2447 = !DILocation(line: 344, column: 34, scope: !1993)
!2448 = !{!2449, !2449, i64 0}
!2449 = !{!"short", !1225, i64 0}
!2450 = !DILocation(line: 344, column: 33, scope: !1993)
!2451 = !DILocation(line: 0, scope: !1993)
!2452 = !DILocation(line: 344, column: 53, scope: !1993)
!2453 = distinct !{!2453, !2443, !2452, !1393}
!2454 = !DILocation(line: 345, column: 24, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !1993, file: !2, line: 345, column: 22)
!2456 = !DILocation(line: 345, column: 23, scope: !2455)
!2457 = !DILocation(line: 345, column: 22, scope: !1993)
!2458 = !DILocation(line: 345, column: 63, scope: !2455)
!2459 = !DILocation(line: 345, column: 69, scope: !2455)
!2460 = !DILocation(line: 345, column: 82, scope: !2455)
!2461 = !DILocation(line: 345, column: 86, scope: !2455)
!2462 = !DILocation(line: 345, column: 30, scope: !2455)
!2463 = !DILocation(line: 346, column: 18, scope: !1993)
!2464 = !DILocation(line: 346, column: 22, scope: !1993)
!2465 = !DILocation(line: 347, column: 54, scope: !1993)
!2466 = !DILocation(line: 347, column: 60, scope: !1993)
!2467 = !DILocation(line: 347, column: 84, scope: !1993)
!2468 = !DILocation(line: 347, column: 88, scope: !1993)
!2469 = !DILocation(line: 347, column: 39, scope: !1993)
!2470 = !DILocation(line: 347, column: 17, scope: !1993)
!2471 = !DILocation(line: 347, column: 23, scope: !1993)
!2472 = !DILocation(line: 347, column: 29, scope: !1993)
!2473 = !DILocation(line: 347, column: 32, scope: !1993)
!2474 = !DILocation(line: 347, column: 37, scope: !1993)
!2475 = !DILocation(line: 348, column: 22, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !1993, file: !2, line: 348, column: 22)
!2477 = !DILocation(line: 348, column: 28, scope: !2476)
!2478 = !DILocation(line: 348, column: 34, scope: !2476)
!2479 = !DILocation(line: 348, column: 37, scope: !2476)
!2480 = !DILocation(line: 348, column: 42, scope: !2476)
!2481 = !DILocation(line: 348, column: 22, scope: !1993)
!2482 = !DILocation(line: 348, column: 85, scope: !2476)
!2483 = !DILocation(line: 348, column: 91, scope: !2476)
!2484 = !DILocation(line: 348, column: 101, scope: !2476)
!2485 = !DILocation(line: 348, column: 105, scope: !2476)
!2486 = !DILocation(line: 348, column: 48, scope: !2476)
!2487 = !DILocation(line: 349, column: 20, scope: !1993)
!2488 = !DILocation(line: 350, column: 17, scope: !1993)
!2489 = !DILocation(line: 350, column: 26, scope: !1993)
!2490 = !DILocation(line: 350, column: 25, scope: !1993)
!2491 = !DILocation(line: 350, column: 30, scope: !1993)
!2492 = !DILocation(line: 350, column: 33, scope: !1993)
!2493 = !DILocation(line: 350, column: 52, scope: !1993)
!2494 = distinct !{!2494, !2488, !2493, !1393}
!2495 = !DILocation(line: 351, column: 53, scope: !1993)
!2496 = !DILocation(line: 351, column: 59, scope: !1993)
!2497 = !DILocation(line: 351, column: 66, scope: !1993)
!2498 = !DILocation(line: 351, column: 72, scope: !1993)
!2499 = !DILocation(line: 351, column: 79, scope: !1993)
!2500 = !DILocation(line: 351, column: 85, scope: !1993)
!2501 = !DILocation(line: 351, column: 109, scope: !1993)
!2502 = !DILocation(line: 351, column: 38, scope: !1993)
!2503 = !DILocation(line: 351, column: 17, scope: !1993)
!2504 = !DILocation(line: 351, column: 23, scope: !1993)
!2505 = !DILocation(line: 351, column: 29, scope: !1993)
!2506 = !DILocation(line: 351, column: 32, scope: !1993)
!2507 = !DILocation(line: 351, column: 36, scope: !1993)
!2508 = !DILocation(line: 352, column: 22, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !1993, file: !2, line: 352, column: 22)
!2510 = !DILocation(line: 352, column: 28, scope: !2509)
!2511 = !DILocation(line: 352, column: 34, scope: !2509)
!2512 = !DILocation(line: 352, column: 37, scope: !2509)
!2513 = !DILocation(line: 352, column: 41, scope: !2509)
!2514 = !DILocation(line: 352, column: 22, scope: !1993)
!2515 = !DILocation(line: 352, column: 84, scope: !2509)
!2516 = !DILocation(line: 352, column: 90, scope: !2509)
!2517 = !DILocation(line: 352, column: 99, scope: !2509)
!2518 = !DILocation(line: 352, column: 105, scope: !2509)
!2519 = !DILocation(line: 352, column: 114, scope: !2509)
!2520 = !DILocation(line: 352, column: 120, scope: !2509)
!2521 = !DILocation(line: 352, column: 130, scope: !2509)
!2522 = !DILocation(line: 352, column: 47, scope: !2509)
!2523 = !DILocation(line: 353, column: 22, scope: !1993)
!2524 = !DILocation(line: 353, column: 26, scope: !1993)
!2525 = !DILocation(line: 353, column: 17, scope: !1993)
!2526 = !DILocation(line: 354, column: 13, scope: !1994)
!2527 = !DILocation(line: 354, column: 13, scope: !1993)
!2528 = !DILocation(line: 341, column: 40, scope: !1994)
!2529 = !DILocation(line: 341, column: 13, scope: !1994)
!2530 = distinct !{!2530, !2438, !2531, !1393}
!2531 = !DILocation(line: 354, column: 13, scope: !1995)
!2532 = !DILocation(line: 356, column: 14, scope: !1988)
!2533 = !DILocation(line: 356, column: 9, scope: !1988)
!2534 = !DILocation(line: 357, column: 15, scope: !1988)
!2535 = !DILocation(line: 357, column: 21, scope: !1988)
!2536 = !DILocation(line: 357, column: 27, scope: !1988)
!2537 = !DILocation(line: 357, column: 33, scope: !1988)
!2538 = !DILocation(line: 357, column: 9, scope: !1988)
!2539 = !DILocation(line: 358, column: 5, scope: !1989)
!2540 = !DILocation(line: 358, column: 5, scope: !1988)
!2541 = !DILocation(line: 359, column: 15, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !1989, file: !2, line: 359, column: 15)
!2543 = !DILocation(line: 359, column: 21, scope: !2542)
!2544 = !DILocation(line: 359, column: 15, scope: !1989)
!2545 = !DILocation(line: 360, column: 26, scope: !2542)
!2546 = !DILocation(line: 360, column: 9, scope: !2542)
!2547 = !DILocation(line: 360, column: 15, scope: !2542)
!2548 = !DILocation(line: 360, column: 24, scope: !2542)
!2549 = !{!1241, !1224, i64 140}
!2550 = !DILocation(line: 361, column: 11, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 361, column: 10)
!2552 = !DILocation(line: 361, column: 17, scope: !2551)
!2553 = !DILocation(line: 361, column: 10, scope: !1982)
!2554 = !DILocation(line: 363, column: 26, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2551, file: !2, line: 362, column: 5)
!2556 = !DILocation(line: 363, column: 32, scope: !2555)
!2557 = !DILocation(line: 363, column: 9, scope: !2555)
!2558 = !DILocation(line: 363, column: 15, scope: !2555)
!2559 = !DILocation(line: 363, column: 24, scope: !2555)
!2560 = !DILocation(line: 364, column: 26, scope: !2555)
!2561 = !DILocation(line: 364, column: 32, scope: !2555)
!2562 = !{!1241, !1229, i64 144}
!2563 = !DILocation(line: 364, column: 9, scope: !2555)
!2564 = !DILocation(line: 364, column: 15, scope: !2555)
!2565 = !DILocation(line: 364, column: 24, scope: !2555)
!2566 = !{!1241, !1229, i64 152}
!2567 = !DILocation(line: 365, column: 9, scope: !2555)
!2568 = !DILocation(line: 365, column: 15, scope: !2555)
!2569 = !DILocation(line: 365, column: 27, scope: !2555)
!2570 = !{!1241, !1224, i64 2532}
!2571 = !DILocation(line: 366, column: 5, scope: !2555)
!2572 = !DILocation(line: 369, column: 11, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 369, column: 10)
!2574 = !DILocation(line: 369, column: 17, scope: !2573)
!2575 = !DILocation(line: 369, column: 10, scope: !1982)
!2576 = !DILocation(line: 369, column: 41, scope: !2573)
!2577 = !DILocation(line: 369, column: 47, scope: !2573)
!2578 = !DILocation(line: 369, column: 61, scope: !2573)
!2579 = !DILocation(line: 369, column: 67, scope: !2573)
!2580 = !DILocation(line: 369, column: 78, scope: !2573)
!2581 = !DILocation(line: 369, column: 84, scope: !2573)
!2582 = !DILocation(line: 369, column: 93, scope: !2573)
!2583 = !DILocation(line: 369, column: 76, scope: !2573)
!2584 = !DILocation(line: 369, column: 96, scope: !2573)
!2585 = !DILocation(line: 369, column: 101, scope: !2573)
!2586 = !DILocation(line: 369, column: 107, scope: !2573)
!2587 = !DILocation(line: 369, column: 116, scope: !2573)
!2588 = !DILocation(line: 369, column: 122, scope: !2573)
!2589 = !DILocation(line: 369, column: 115, scope: !2573)
!2590 = !DILocation(line: 369, column: 26, scope: !2573)
!2591 = !DILocation(line: 369, column: 32, scope: !2573)
!2592 = !DILocation(line: 369, column: 39, scope: !2573)
!2593 = !DILocation(line: 370, column: 11, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 370, column: 10)
!2595 = !DILocation(line: 370, column: 17, scope: !2594)
!2596 = !DILocation(line: 370, column: 10, scope: !1982)
!2597 = !DILocation(line: 372, column: 43, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2594, file: !2, line: 371, column: 5)
!2599 = !DILocation(line: 372, column: 49, scope: !2598)
!2600 = !DILocation(line: 372, column: 36, scope: !2598)
!2601 = !DILocation(line: 372, column: 9, scope: !2598)
!2602 = !DILocation(line: 372, column: 15, scope: !2598)
!2603 = !DILocation(line: 372, column: 23, scope: !2598)
!2604 = !{!1241, !1229, i64 232}
!2605 = !DILocation(line: 373, column: 25, scope: !2598)
!2606 = !DILocation(line: 373, column: 31, scope: !2598)
!2607 = !DILocation(line: 373, column: 45, scope: !2598)
!2608 = !DILocation(line: 373, column: 51, scope: !2598)
!2609 = !DILocation(line: 373, column: 79, scope: !2598)
!2610 = !DILocation(line: 373, column: 85, scope: !2598)
!2611 = !DILocation(line: 373, column: 72, scope: !2598)
!2612 = !DILocation(line: 373, column: 9, scope: !2598)
!2613 = !DILocation(line: 373, column: 15, scope: !2598)
!2614 = !DILocation(line: 373, column: 23, scope: !2598)
!2615 = !{!1241, !1229, i64 240}
!2616 = !DILocation(line: 374, column: 5, scope: !2598)
!2617 = !DILocation(line: 375, column: 10, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 375, column: 10)
!2619 = !DILocation(line: 375, column: 16, scope: !2618)
!2620 = !DILocation(line: 375, column: 10, scope: !1982)
!2621 = !DILocation(line: 377, column: 40, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2618, file: !2, line: 376, column: 5)
!2623 = !DILocation(line: 377, column: 46, scope: !2622)
!2624 = !DILocation(line: 377, column: 33, scope: !2622)
!2625 = !DILocation(line: 377, column: 9, scope: !2622)
!2626 = !DILocation(line: 377, column: 15, scope: !2622)
!2627 = !DILocation(line: 377, column: 21, scope: !2622)
!2628 = !{!1241, !1229, i64 160}
!2629 = !DILocation(line: 378, column: 45, scope: !2622)
!2630 = !DILocation(line: 378, column: 51, scope: !2622)
!2631 = !DILocation(line: 378, column: 44, scope: !2622)
!2632 = !DILocation(line: 378, column: 43, scope: !2622)
!2633 = !DILocation(line: 378, column: 60, scope: !2622)
!2634 = !DILocation(line: 378, column: 36, scope: !2622)
!2635 = !DILocation(line: 378, column: 9, scope: !2622)
!2636 = !DILocation(line: 378, column: 15, scope: !2622)
!2637 = !DILocation(line: 378, column: 24, scope: !2622)
!2638 = !{!1241, !1229, i64 168}
!2639 = !DILocation(line: 379, column: 26, scope: !2622)
!2640 = !DILocation(line: 379, column: 32, scope: !2622)
!2641 = !DILocation(line: 379, column: 46, scope: !2622)
!2642 = !DILocation(line: 379, column: 52, scope: !2622)
!2643 = !DILocation(line: 379, column: 82, scope: !2622)
!2644 = !DILocation(line: 379, column: 88, scope: !2622)
!2645 = !DILocation(line: 379, column: 81, scope: !2622)
!2646 = !DILocation(line: 379, column: 80, scope: !2622)
!2647 = !DILocation(line: 379, column: 96, scope: !2622)
!2648 = !DILocation(line: 379, column: 73, scope: !2622)
!2649 = !DILocation(line: 379, column: 9, scope: !2622)
!2650 = !DILocation(line: 379, column: 15, scope: !2622)
!2651 = !DILocation(line: 379, column: 24, scope: !2622)
!2652 = !{!1241, !1229, i64 176}
!2653 = !DILocation(line: 384, column: 15, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2622, file: !2, line: 384, column: 9)
!2655 = !DILocation(line: 384, column: 14, scope: !2654)
!2656 = !DILocation(line: 384, column: 19, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2654, file: !2, line: 384, column: 9)
!2658 = !DILocation(line: 384, column: 20, scope: !2657)
!2659 = !DILocation(line: 384, column: 9, scope: !2654)
!2660 = !DILocation(line: 385, column: 19, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2657, file: !2, line: 385, column: 13)
!2662 = !DILocation(line: 385, column: 18, scope: !2661)
!2663 = !DILocation(line: 385, column: 23, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2661, file: !2, line: 385, column: 13)
!2665 = !DILocation(line: 385, column: 24, scope: !2664)
!2666 = !DILocation(line: 385, column: 13, scope: !2661)
!2667 = !DILocation(line: 386, column: 17, scope: !2664)
!2668 = !DILocation(line: 386, column: 23, scope: !2664)
!2669 = !DILocation(line: 386, column: 32, scope: !2664)
!2670 = !DILocation(line: 386, column: 35, scope: !2664)
!2671 = !DILocation(line: 386, column: 38, scope: !2664)
!2672 = !DILocation(line: 385, column: 29, scope: !2664)
!2673 = !DILocation(line: 385, column: 13, scope: !2664)
!2674 = distinct !{!2674, !2666, !2675, !1393}
!2675 = !DILocation(line: 386, column: 40, scope: !2661)
!2676 = !DILocation(line: 384, column: 25, scope: !2657)
!2677 = !DILocation(line: 384, column: 9, scope: !2657)
!2678 = distinct !{!2678, !2659, !2679, !1393}
!2679 = !DILocation(line: 386, column: 40, scope: !2654)
!2680 = !DILocation(line: 387, column: 51, scope: !2622)
!2681 = !DILocation(line: 387, column: 57, scope: !2622)
!2682 = !DILocation(line: 387, column: 50, scope: !2622)
!2683 = !DILocation(line: 387, column: 39, scope: !2622)
!2684 = !DILocation(line: 387, column: 38, scope: !2622)
!2685 = !DILocation(line: 387, column: 33, scope: !2622)
!2686 = !DILocation(line: 387, column: 32, scope: !2622)
!2687 = !DILocation(line: 387, column: 9, scope: !2622)
!2688 = !DILocation(line: 387, column: 15, scope: !2622)
!2689 = !DILocation(line: 387, column: 30, scope: !2622)
!2690 = !DILocation(line: 388, column: 53, scope: !2622)
!2691 = !DILocation(line: 388, column: 59, scope: !2622)
!2692 = !DILocation(line: 388, column: 52, scope: !2622)
!2693 = !DILocation(line: 388, column: 41, scope: !2622)
!2694 = !DILocation(line: 388, column: 40, scope: !2622)
!2695 = !DILocation(line: 388, column: 33, scope: !2622)
!2696 = !DILocation(line: 388, column: 32, scope: !2622)
!2697 = !DILocation(line: 388, column: 9, scope: !2622)
!2698 = !DILocation(line: 388, column: 15, scope: !2622)
!2699 = !DILocation(line: 388, column: 30, scope: !2622)
!2700 = !DILocation(line: 389, column: 53, scope: !2622)
!2701 = !DILocation(line: 389, column: 59, scope: !2622)
!2702 = !DILocation(line: 389, column: 52, scope: !2622)
!2703 = !DILocation(line: 389, column: 41, scope: !2622)
!2704 = !DILocation(line: 389, column: 40, scope: !2622)
!2705 = !DILocation(line: 389, column: 33, scope: !2622)
!2706 = !DILocation(line: 389, column: 32, scope: !2622)
!2707 = !DILocation(line: 389, column: 9, scope: !2622)
!2708 = !DILocation(line: 389, column: 15, scope: !2622)
!2709 = !DILocation(line: 389, column: 30, scope: !2622)
!2710 = !DILocation(line: 390, column: 53, scope: !2622)
!2711 = !DILocation(line: 390, column: 59, scope: !2622)
!2712 = !DILocation(line: 390, column: 52, scope: !2622)
!2713 = !DILocation(line: 390, column: 41, scope: !2622)
!2714 = !DILocation(line: 390, column: 40, scope: !2622)
!2715 = !DILocation(line: 390, column: 33, scope: !2622)
!2716 = !DILocation(line: 390, column: 32, scope: !2622)
!2717 = !DILocation(line: 390, column: 9, scope: !2622)
!2718 = !DILocation(line: 390, column: 15, scope: !2622)
!2719 = !DILocation(line: 390, column: 30, scope: !2622)
!2720 = !DILocation(line: 391, column: 51, scope: !2622)
!2721 = !DILocation(line: 391, column: 57, scope: !2622)
!2722 = !DILocation(line: 391, column: 50, scope: !2622)
!2723 = !DILocation(line: 391, column: 39, scope: !2622)
!2724 = !DILocation(line: 391, column: 38, scope: !2622)
!2725 = !DILocation(line: 391, column: 33, scope: !2622)
!2726 = !DILocation(line: 391, column: 32, scope: !2622)
!2727 = !DILocation(line: 391, column: 9, scope: !2622)
!2728 = !DILocation(line: 391, column: 15, scope: !2622)
!2729 = !DILocation(line: 391, column: 30, scope: !2622)
!2730 = !DILocation(line: 392, column: 53, scope: !2622)
!2731 = !DILocation(line: 392, column: 59, scope: !2622)
!2732 = !DILocation(line: 392, column: 52, scope: !2622)
!2733 = !DILocation(line: 392, column: 41, scope: !2622)
!2734 = !DILocation(line: 392, column: 40, scope: !2622)
!2735 = !DILocation(line: 392, column: 33, scope: !2622)
!2736 = !DILocation(line: 392, column: 32, scope: !2622)
!2737 = !DILocation(line: 392, column: 9, scope: !2622)
!2738 = !DILocation(line: 392, column: 15, scope: !2622)
!2739 = !DILocation(line: 392, column: 30, scope: !2622)
!2740 = !DILocation(line: 393, column: 53, scope: !2622)
!2741 = !DILocation(line: 393, column: 59, scope: !2622)
!2742 = !DILocation(line: 393, column: 52, scope: !2622)
!2743 = !DILocation(line: 393, column: 41, scope: !2622)
!2744 = !DILocation(line: 393, column: 40, scope: !2622)
!2745 = !DILocation(line: 393, column: 33, scope: !2622)
!2746 = !DILocation(line: 393, column: 32, scope: !2622)
!2747 = !DILocation(line: 393, column: 9, scope: !2622)
!2748 = !DILocation(line: 393, column: 15, scope: !2622)
!2749 = !DILocation(line: 393, column: 30, scope: !2622)
!2750 = !DILocation(line: 394, column: 53, scope: !2622)
!2751 = !DILocation(line: 394, column: 59, scope: !2622)
!2752 = !DILocation(line: 394, column: 52, scope: !2622)
!2753 = !DILocation(line: 394, column: 41, scope: !2622)
!2754 = !DILocation(line: 394, column: 40, scope: !2622)
!2755 = !DILocation(line: 394, column: 33, scope: !2622)
!2756 = !DILocation(line: 394, column: 32, scope: !2622)
!2757 = !DILocation(line: 394, column: 9, scope: !2622)
!2758 = !DILocation(line: 394, column: 15, scope: !2622)
!2759 = !DILocation(line: 394, column: 30, scope: !2622)
!2760 = !DILocation(line: 395, column: 51, scope: !2622)
!2761 = !DILocation(line: 395, column: 57, scope: !2622)
!2762 = !DILocation(line: 395, column: 50, scope: !2622)
!2763 = !DILocation(line: 395, column: 39, scope: !2622)
!2764 = !DILocation(line: 395, column: 38, scope: !2622)
!2765 = !DILocation(line: 395, column: 33, scope: !2622)
!2766 = !DILocation(line: 395, column: 32, scope: !2622)
!2767 = !DILocation(line: 395, column: 9, scope: !2622)
!2768 = !DILocation(line: 395, column: 15, scope: !2622)
!2769 = !DILocation(line: 395, column: 30, scope: !2622)
!2770 = !DILocation(line: 398, column: 15, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2622, file: !2, line: 398, column: 9)
!2772 = !DILocation(line: 398, column: 14, scope: !2771)
!2773 = !DILocation(line: 398, column: 19, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2771, file: !2, line: 398, column: 9)
!2775 = !DILocation(line: 398, column: 20, scope: !2774)
!2776 = !DILocation(line: 398, column: 9, scope: !2771)
!2777 = !DILocation(line: 398, column: 62, scope: !2774)
!2778 = !DILocation(line: 398, column: 61, scope: !2774)
!2779 = !DILocation(line: 398, column: 50, scope: !2774)
!2780 = !DILocation(line: 398, column: 31, scope: !2774)
!2781 = !DILocation(line: 398, column: 37, scope: !2774)
!2782 = !DILocation(line: 398, column: 45, scope: !2774)
!2783 = !DILocation(line: 398, column: 48, scope: !2774)
!2784 = !DILocation(line: 398, column: 27, scope: !2774)
!2785 = !DILocation(line: 398, column: 9, scope: !2774)
!2786 = distinct !{!2786, !2776, !2787, !1393}
!2787 = !DILocation(line: 398, column: 63, scope: !2771)
!2788 = !DILocation(line: 399, column: 5, scope: !2622)
!2789 = !DILocation(line: 401, column: 42, scope: !2618)
!2790 = !DILocation(line: 401, column: 48, scope: !2618)
!2791 = !DILocation(line: 401, column: 35, scope: !2618)
!2792 = !DILocation(line: 401, column: 9, scope: !2618)
!2793 = !DILocation(line: 401, column: 15, scope: !2618)
!2794 = !DILocation(line: 401, column: 21, scope: !2618)
!2795 = !{!1241, !1229, i64 184}
!2796 = !DILocation(line: 402, column: 38, scope: !1982)
!2797 = !DILocation(line: 402, column: 44, scope: !1982)
!2798 = !DILocation(line: 402, column: 31, scope: !1982)
!2799 = !DILocation(line: 402, column: 5, scope: !1982)
!2800 = !DILocation(line: 402, column: 11, scope: !1982)
!2801 = !DILocation(line: 402, column: 17, scope: !1982)
!2802 = !{!1241, !1229, i64 192}
!2803 = !DILocation(line: 403, column: 11, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 403, column: 10)
!2805 = !DILocation(line: 403, column: 17, scope: !2804)
!2806 = !DILocation(line: 403, column: 10, scope: !1982)
!2807 = !DILocation(line: 403, column: 69, scope: !2804)
!2808 = !DILocation(line: 403, column: 75, scope: !2804)
!2809 = !DILocation(line: 403, column: 81, scope: !2804)
!2810 = !DILocation(line: 403, column: 101, scope: !2804)
!2811 = !DILocation(line: 403, column: 24, scope: !2804)
!2812 = !DILocation(line: 404, column: 10, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 404, column: 10)
!2814 = !DILocation(line: 404, column: 16, scope: !2813)
!2815 = !DILocation(line: 404, column: 10, scope: !1982)
!2816 = !DILocation(line: 407, column: 43, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2813, file: !2, line: 405, column: 5)
!2818 = !DILocation(line: 407, column: 49, scope: !2817)
!2819 = !DILocation(line: 407, column: 36, scope: !2817)
!2820 = !DILocation(line: 407, column: 9, scope: !2817)
!2821 = !DILocation(line: 407, column: 15, scope: !2817)
!2822 = !DILocation(line: 407, column: 24, scope: !2817)
!2823 = !{!1241, !1229, i64 256}
!2824 = !DILocation(line: 408, column: 15, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2817, file: !2, line: 408, column: 14)
!2826 = !DILocation(line: 408, column: 21, scope: !2825)
!2827 = !DILocation(line: 408, column: 14, scope: !2817)
!2828 = !DILocation(line: 408, column: 122, scope: !2825)
!2829 = !DILocation(line: 408, column: 128, scope: !2825)
!2830 = !DILocation(line: 408, column: 134, scope: !2825)
!2831 = !DILocation(line: 408, column: 158, scope: !2825)
!2832 = !DILocation(line: 408, column: 32, scope: !2825)
!2833 = !DILocation(line: 409, column: 5, scope: !2817)
!2834 = !DILocation(line: 411, column: 10, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !1982, file: !2, line: 411, column: 10)
!2836 = !DILocation(line: 411, column: 16, scope: !2835)
!2837 = !DILocation(line: 411, column: 10, scope: !1982)
!2838 = !DILocation(line: 411, column: 52, scope: !2835)
!2839 = !DILocation(line: 411, column: 36, scope: !2835)
!2840 = !DILocation(line: 413, column: 16, scope: !1982)
!2841 = !DILocation(line: 413, column: 5, scope: !1982)
!2842 = !DILocation(line: 413, column: 11, scope: !1982)
!2843 = !DILocation(line: 413, column: 14, scope: !1982)
!2844 = !DILocation(line: 414, column: 18, scope: !1982)
!2845 = !DILocation(line: 414, column: 24, scope: !1982)
!2846 = !DILocation(line: 414, column: 30, scope: !1982)
!2847 = !DILocation(line: 414, column: 5, scope: !1982)
!2848 = !DILocation(line: 415, column: 1, scope: !1982)
!2849 = !DISubprogram(name: "bcf_sr_next_line", scope: !23, file: !23, line: 251, type: !2850, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!17, !118}
!2852 = distinct !DISubprogram(name: "is_input_okay", scope: !2, file: !2, line: 988, type: !2853, scopeLine: 989, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !2855)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!17, !113, !17}
!2855 = !{!2856, !2857, !2858, !2859, !2860, !2861, !2862}
!2856 = !DILocalVariable(name: "args", arg: 1, scope: !2852, file: !2, line: 988, type: !113)
!2857 = !DILocalVariable(name: "nmatch", arg: 2, scope: !2852, file: !2, line: 988, type: !17)
!2858 = !DILocalVariable(name: "i", scope: !2852, file: !2, line: 990, type: !17)
!2859 = !DILocalVariable(name: "msg", scope: !2852, file: !2, line: 991, type: !203)
!2860 = !DILocalVariable(name: "hdr", scope: !2852, file: !2, line: 992, type: !233)
!2861 = !DILocalVariable(name: "rec", scope: !2852, file: !2, line: 993, type: !367)
!2862 = !DILabel(scope: !2852, name: "not_okay", file: !2, line: 1027)
!2863 = !DILocation(line: 988, column: 34, scope: !2852)
!2864 = !DILocation(line: 988, column: 44, scope: !2852)
!2865 = !DILocation(line: 990, column: 5, scope: !2852)
!2866 = !DILocation(line: 990, column: 9, scope: !2852)
!2867 = !DILocation(line: 991, column: 5, scope: !2852)
!2868 = !DILocation(line: 991, column: 17, scope: !2852)
!2869 = !DILocation(line: 992, column: 5, scope: !2852)
!2870 = !DILocation(line: 992, column: 16, scope: !2852)
!2871 = !DILocation(line: 993, column: 5, scope: !2852)
!2872 = !DILocation(line: 993, column: 13, scope: !2852)
!2873 = !DILocation(line: 994, column: 10, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2852, file: !2, line: 994, column: 10)
!2875 = !DILocation(line: 994, column: 16, scope: !2874)
!2876 = !DILocation(line: 994, column: 23, scope: !2874)
!2877 = !DILocation(line: 994, column: 26, scope: !2874)
!2878 = !DILocation(line: 994, column: 32, scope: !2874)
!2879 = !DILocation(line: 994, column: 10, scope: !2852)
!2880 = !DILocation(line: 996, column: 14, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2882, file: !2, line: 996, column: 14)
!2882 = distinct !DILexicalBlock(scope: !2874, file: !2, line: 995, column: 5)
!2883 = !DILocation(line: 996, column: 20, scope: !2881)
!2884 = !DILocation(line: 996, column: 34, scope: !2881)
!2885 = !{!1241, !1224, i64 2560}
!2886 = !DILocation(line: 996, column: 14, scope: !2882)
!2887 = !DILocation(line: 996, column: 39, scope: !2881)
!2888 = !DILocation(line: 997, column: 15, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2882, file: !2, line: 997, column: 9)
!2890 = !DILocation(line: 997, column: 14, scope: !2889)
!2891 = !DILocation(line: 997, column: 19, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2889, file: !2, line: 997, column: 9)
!2893 = !DILocation(line: 997, column: 20, scope: !2892)
!2894 = !DILocation(line: 997, column: 9, scope: !2889)
!2895 = !DILocation(line: 999, column: 19, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2892, file: !2, line: 998, column: 9)
!2897 = !{!2072, !1229, i64 24}
!2898 = !{!2100, !1229, i64 48}
!2899 = !DILocation(line: 999, column: 17, scope: !2896)
!2900 = !DILocation(line: 1000, column: 18, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2896, file: !2, line: 1000, column: 18)
!2902 = !DILocation(line: 1000, column: 18, scope: !2896)
!2903 = !DILocation(line: 1000, column: 24, scope: !2901)
!2904 = !DILocation(line: 1001, column: 9, scope: !2896)
!2905 = !DILocation(line: 997, column: 25, scope: !2892)
!2906 = !DILocation(line: 997, column: 9, scope: !2892)
!2907 = distinct !{!2907, !2894, !2908, !1393}
!2908 = !DILocation(line: 1001, column: 9, scope: !2889)
!2909 = !DILocation(line: 1002, column: 15, scope: !2882)
!2910 = !DILocation(line: 1002, column: 13, scope: !2882)
!2911 = !DILocation(line: 1003, column: 17, scope: !2882)
!2912 = !DILocation(line: 1004, column: 29, scope: !2882)
!2913 = !DILocation(line: 1004, column: 33, scope: !2882)
!2914 = !DILocation(line: 1004, column: 17, scope: !2882)
!2915 = !DILocation(line: 1004, column: 38, scope: !2882)
!2916 = !DILocation(line: 1004, column: 43, scope: !2882)
!2917 = !{!2918, !1243, i64 0}
!2918 = !{!"bcf1_t", !1243, i64 0, !1243, i64 8, !1224, i64 16, !2919, i64 20, !1224, i64 24, !1224, i64 26, !1224, i64 28, !1224, i64 29, !2073, i64 32, !2073, i64 56, !2920, i64 80, !1224, i64 184, !1224, i64 188, !1225, i64 192, !1224, i64 204}
!2919 = !{!"float", !1225, i64 0}
!2920 = !{!"bcf_dec_t", !1224, i64 0, !1224, i64 4, !1224, i64 8, !1224, i64 12, !1224, i64 16, !1224, i64 20, !1224, i64 24, !1229, i64 32, !1229, i64 40, !1229, i64 48, !1229, i64 56, !1229, i64 64, !1229, i64 72, !1229, i64 80, !1224, i64 88, !1224, i64 92, !1224, i64 96, !1224, i64 100}
!2921 = !DILocation(line: 1004, column: 46, scope: !2882)
!2922 = !DILocation(line: 1003, column: 9, scope: !2882)
!2923 = !DILocation(line: 1005, column: 9, scope: !2882)
!2924 = !DILocation(line: 1007, column: 11, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2852, file: !2, line: 1007, column: 5)
!2926 = !DILocation(line: 1007, column: 10, scope: !2925)
!2927 = !DILocation(line: 1007, column: 15, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2925, file: !2, line: 1007, column: 5)
!2929 = !DILocation(line: 1007, column: 16, scope: !2928)
!2930 = !DILocation(line: 1007, column: 5, scope: !2925)
!2931 = !DILocation(line: 1009, column: 15, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2928, file: !2, line: 1008, column: 5)
!2933 = !DILocation(line: 1009, column: 13, scope: !2932)
!2934 = !DILocation(line: 1010, column: 15, scope: !2932)
!2935 = !DILocation(line: 1010, column: 13, scope: !2932)
!2936 = !DILocation(line: 1011, column: 14, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2932, file: !2, line: 1011, column: 14)
!2938 = !DILocation(line: 1011, column: 19, scope: !2937)
!2939 = !DILocation(line: 1011, column: 27, scope: !2937)
!2940 = !DILocation(line: 1011, column: 14, scope: !2932)
!2941 = !DILocation(line: 1013, column: 18, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2943, file: !2, line: 1013, column: 18)
!2943 = distinct !DILexicalBlock(scope: !2937, file: !2, line: 1012, column: 9)
!2944 = !DILocation(line: 1013, column: 24, scope: !2942)
!2945 = !DILocation(line: 1013, column: 36, scope: !2942)
!2946 = !{!1241, !1224, i64 2564}
!2947 = !DILocation(line: 1013, column: 18, scope: !2943)
!2948 = !DILocation(line: 1013, column: 41, scope: !2942)
!2949 = !DILocation(line: 1014, column: 17, scope: !2943)
!2950 = !DILocation(line: 1015, column: 13, scope: !2943)
!2951 = !DILocation(line: 1017, column: 36, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2932, file: !2, line: 1017, column: 14)
!2953 = !DILocation(line: 1017, column: 14, scope: !2952)
!2954 = !DILocation(line: 1017, column: 40, scope: !2952)
!2955 = !DILocation(line: 1017, column: 14, scope: !2932)
!2956 = !DILocation(line: 1019, column: 18, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2958, file: !2, line: 1019, column: 18)
!2958 = distinct !DILexicalBlock(scope: !2952, file: !2, line: 1018, column: 9)
!2959 = !DILocation(line: 1019, column: 24, scope: !2957)
!2960 = !DILocation(line: 1019, column: 34, scope: !2957)
!2961 = !{!1241, !1224, i64 2568}
!2962 = !DILocation(line: 1019, column: 18, scope: !2958)
!2963 = !DILocation(line: 1019, column: 39, scope: !2957)
!2964 = !DILocation(line: 1020, column: 17, scope: !2958)
!2965 = !DILocation(line: 1021, column: 13, scope: !2958)
!2966 = !DILocation(line: 1023, column: 15, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2932, file: !2, line: 1023, column: 14)
!2968 = !DILocation(line: 1023, column: 21, scope: !2967)
!2969 = !DILocation(line: 1023, column: 14, scope: !2932)
!2970 = !DILocation(line: 1023, column: 30, scope: !2967)
!2971 = !DILocation(line: 1024, column: 5, scope: !2932)
!2972 = !DILocation(line: 1007, column: 21, scope: !2928)
!2973 = !DILocation(line: 1007, column: 5, scope: !2928)
!2974 = distinct !{!2974, !2930, !2975, !1393}
!2975 = !DILocation(line: 1024, column: 5, scope: !2925)
!2976 = !DILocation(line: 1025, column: 5, scope: !2852)
!2977 = !DILocation(line: 1027, column: 1, scope: !2852)
!2978 = !DILocation(line: 1028, column: 13, scope: !2852)
!2979 = !DILocation(line: 1029, column: 21, scope: !2852)
!2980 = !DILocation(line: 1029, column: 25, scope: !2852)
!2981 = !DILocation(line: 1029, column: 9, scope: !2852)
!2982 = !DILocation(line: 1029, column: 30, scope: !2852)
!2983 = !DILocation(line: 1029, column: 35, scope: !2852)
!2984 = !DILocation(line: 1029, column: 38, scope: !2852)
!2985 = !DILocation(line: 1029, column: 41, scope: !2852)
!2986 = !DILocation(line: 1028, column: 5, scope: !2852)
!2987 = !DILocation(line: 1030, column: 5, scope: !2852)
!2988 = !DILocation(line: 1031, column: 1, scope: !2852)
!2989 = !DISubprogram(name: "gettimeofday", scope: !2990, file: !2990, line: 67, type: !2991, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2990 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "", checksumkind: CSK_MD5, checksum: "b36e339815f62ba7208e5294180e353c")
!2991 = !DISubroutineType(types: !2992)
!2992 = !{!17, !2993, !2995}
!2993 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2994)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!2995 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !182)
!2996 = distinct !DISubprogram(name: "process_line", scope: !2, file: !2, line: 537, type: !1804, scopeLine: 538, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !2997)
!2997 = !{!2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3012, !3016, !3018, !3020, !3025, !3029, !3030, !3031, !3032, !3037, !3038, !3039, !3040, !3041, !3042, !3045, !3046, !3052, !3053, !3059, !3060, !3064, !3068, !3073, !3074, !3080, !3081, !3085, !3089}
!2998 = !DILocalVariable(name: "args", arg: 1, scope: !2996, file: !2, line: 537, type: !113)
!2999 = !DILocalVariable(name: "i", scope: !2996, file: !2, line: 539, type: !17)
!3000 = !DILocalVariable(name: "j", scope: !2996, file: !2, line: 539, type: !17)
!3001 = !DILocalVariable(name: "k", scope: !2996, file: !2, line: 539, type: !17)
!3002 = !DILocalVariable(name: "nqry1", scope: !2996, file: !2, line: 539, type: !17)
!3003 = !DILocalVariable(name: "ngt1", scope: !2996, file: !2, line: 539, type: !17)
!3004 = !DILocalVariable(name: "ret", scope: !2996, file: !2, line: 539, type: !17)
!3005 = !DILocalVariable(name: "gt_rec", scope: !2996, file: !2, line: 541, type: !367)
!3006 = !DILocalVariable(name: "qry_rec", scope: !2996, file: !2, line: 541, type: !367)
!3007 = !DILocalVariable(name: "qry_use_GT", scope: !2996, file: !2, line: 542, type: !17)
!3008 = !DILocalVariable(name: "gt_use_GT", scope: !2996, file: !2, line: 543, type: !17)
!3009 = !DILocalVariable(name: "af", scope: !2996, file: !2, line: 562, type: !531)
!3010 = !DILocalVariable(name: "hwe_dsg", scope: !2996, file: !2, line: 562, type: !3011)
!3011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 512, elements: !683)
!3012 = !DILocalVariable(name: "ac", scope: !3013, file: !2, line: 565, type: !3015)
!3013 = distinct !DILexicalBlock(scope: !3014, file: !2, line: 564, column: 5)
!3014 = distinct !DILexicalBlock(scope: !2996, file: !2, line: 563, column: 10)
!3015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 64, elements: !282)
!3016 = !DILocalVariable(name: "hwe", scope: !3013, file: !2, line: 578, type: !3017)
!3017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 192, elements: !240)
!3018 = !DILocalVariable(name: "min_af", scope: !3013, file: !2, line: 579, type: !3019)
!3019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !531)
!3020 = !DILocalVariable(name: "ndiff", scope: !3021, file: !2, line: 600, type: !17)
!3021 = distinct !DILexicalBlock(scope: !3022, file: !2, line: 599, column: 9)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !2, line: 598, column: 14)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !2, line: 597, column: 5)
!3024 = distinct !DILexicalBlock(scope: !2996, file: !2, line: 596, column: 10)
!3025 = !DILocalVariable(name: "ptr", scope: !3026, file: !2, line: 605, type: !540)
!3026 = distinct !DILexicalBlock(scope: !3027, file: !2, line: 604, column: 13)
!3027 = distinct !DILexicalBlock(scope: !3028, file: !2, line: 603, column: 13)
!3028 = distinct !DILexicalBlock(scope: !3021, file: !2, line: 603, column: 13)
!3029 = !DILocalVariable(name: "qry_dsg", scope: !3026, file: !2, line: 606, type: !287)
!3030 = !DILocalVariable(name: "gt_dsg", scope: !3026, file: !2, line: 606, type: !287)
!3031 = !DILocalVariable(name: "match", scope: !3026, file: !2, line: 617, type: !17)
!3032 = !DILocalVariable(name: "ptr", scope: !3033, file: !2, line: 633, type: !540)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !2, line: 632, column: 13)
!3034 = distinct !DILexicalBlock(scope: !3035, file: !2, line: 631, column: 13)
!3035 = distinct !DILexicalBlock(scope: !3036, file: !2, line: 631, column: 13)
!3036 = distinct !DILexicalBlock(scope: !3022, file: !2, line: 630, column: 9)
!3037 = !DILocalVariable(name: "qry_prob", scope: !3033, file: !2, line: 634, type: !3017)
!3038 = !DILocalVariable(name: "gt_prob", scope: !3033, file: !2, line: 634, type: !3017)
!3039 = !DILocalVariable(name: "qry_dsg", scope: !3033, file: !2, line: 635, type: !287)
!3040 = !DILocalVariable(name: "gt_dsg", scope: !3033, file: !2, line: 635, type: !287)
!3041 = !DILocalVariable(name: "min", scope: !3033, file: !2, line: 646, type: !531)
!3042 = !DILocalVariable(name: "match", scope: !3043, file: !2, line: 655, type: !17)
!3043 = distinct !DILexicalBlock(scope: !3044, file: !2, line: 654, column: 17)
!3044 = distinct !DILexicalBlock(scope: !3033, file: !2, line: 653, column: 22)
!3045 = !DILocalVariable(name: "idx", scope: !2996, file: !2, line: 664, type: !17)
!3046 = !DILocalVariable(name: "iqry", scope: !3047, file: !2, line: 669, type: !17)
!3047 = distinct !DILexicalBlock(scope: !3048, file: !2, line: 668, column: 9)
!3048 = distinct !DILexicalBlock(scope: !3049, file: !2, line: 667, column: 9)
!3049 = distinct !DILexicalBlock(scope: !3050, file: !2, line: 667, column: 9)
!3050 = distinct !DILexicalBlock(scope: !3051, file: !2, line: 666, column: 5)
!3051 = distinct !DILexicalBlock(scope: !2996, file: !2, line: 665, column: 10)
!3052 = !DILocalVariable(name: "ptr", scope: !3047, file: !2, line: 670, type: !540)
!3053 = !DILocalVariable(name: "igt", scope: !3054, file: !2, line: 677, type: !17)
!3054 = distinct !DILexicalBlock(scope: !3055, file: !2, line: 676, column: 13)
!3055 = distinct !DILexicalBlock(scope: !3056, file: !2, line: 675, column: 13)
!3056 = distinct !DILexicalBlock(scope: !3057, file: !2, line: 675, column: 13)
!3057 = distinct !DILexicalBlock(scope: !3058, file: !2, line: 674, column: 9)
!3058 = distinct !DILexicalBlock(scope: !3050, file: !2, line: 673, column: 14)
!3059 = !DILocalVariable(name: "ptr", scope: !3054, file: !2, line: 678, type: !540)
!3060 = !DILocalVariable(name: "ngt", scope: !3061, file: !2, line: 685, type: !17)
!3061 = distinct !DILexicalBlock(scope: !3062, file: !2, line: 684, column: 9)
!3062 = distinct !DILexicalBlock(scope: !3063, file: !2, line: 683, column: 9)
!3063 = distinct !DILexicalBlock(scope: !3050, file: !2, line: 683, column: 9)
!3064 = !DILocalVariable(name: "match", scope: !3065, file: !2, line: 690, type: !17)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !2, line: 688, column: 13)
!3066 = distinct !DILexicalBlock(scope: !3067, file: !2, line: 687, column: 13)
!3067 = distinct !DILexicalBlock(scope: !3061, file: !2, line: 687, column: 13)
!3068 = !DILocalVariable(name: "iqry", scope: !3069, file: !2, line: 702, type: !17)
!3069 = distinct !DILexicalBlock(scope: !3070, file: !2, line: 701, column: 9)
!3070 = distinct !DILexicalBlock(scope: !3071, file: !2, line: 700, column: 9)
!3071 = distinct !DILexicalBlock(scope: !3072, file: !2, line: 700, column: 9)
!3072 = distinct !DILexicalBlock(scope: !3051, file: !2, line: 699, column: 5)
!3073 = !DILocalVariable(name: "ptr", scope: !3069, file: !2, line: 703, type: !540)
!3074 = !DILocalVariable(name: "igt", scope: !3075, file: !2, line: 710, type: !17)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !2, line: 709, column: 13)
!3076 = distinct !DILexicalBlock(scope: !3077, file: !2, line: 708, column: 13)
!3077 = distinct !DILexicalBlock(scope: !3078, file: !2, line: 708, column: 13)
!3078 = distinct !DILexicalBlock(scope: !3079, file: !2, line: 707, column: 9)
!3079 = distinct !DILexicalBlock(scope: !3072, file: !2, line: 706, column: 14)
!3080 = !DILocalVariable(name: "ptr", scope: !3075, file: !2, line: 711, type: !540)
!3081 = !DILocalVariable(name: "ngt", scope: !3082, file: !2, line: 718, type: !17)
!3082 = distinct !DILexicalBlock(scope: !3083, file: !2, line: 717, column: 9)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !2, line: 716, column: 9)
!3084 = distinct !DILexicalBlock(scope: !3072, file: !2, line: 716, column: 9)
!3085 = !DILocalVariable(name: "min", scope: !3086, file: !2, line: 724, type: !531)
!3086 = distinct !DILexicalBlock(scope: !3087, file: !2, line: 721, column: 13)
!3087 = distinct !DILexicalBlock(scope: !3088, file: !2, line: 720, column: 13)
!3088 = distinct !DILexicalBlock(scope: !3082, file: !2, line: 720, column: 13)
!3089 = !DILocalVariable(name: "match", scope: !3090, file: !2, line: 731, type: !17)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !2, line: 730, column: 17)
!3091 = distinct !DILexicalBlock(scope: !3086, file: !2, line: 729, column: 22)
!3092 = !DILocation(line: 537, column: 34, scope: !2996)
!3093 = !DILocation(line: 539, column: 5, scope: !2996)
!3094 = !DILocation(line: 539, column: 9, scope: !2996)
!3095 = !DILocation(line: 539, column: 11, scope: !2996)
!3096 = !DILocation(line: 539, column: 13, scope: !2996)
!3097 = !DILocation(line: 539, column: 16, scope: !2996)
!3098 = !DILocation(line: 539, column: 23, scope: !2996)
!3099 = !DILocation(line: 539, column: 29, scope: !2996)
!3100 = !DILocation(line: 541, column: 5, scope: !2996)
!3101 = !DILocation(line: 541, column: 13, scope: !2996)
!3102 = !DILocation(line: 541, column: 29, scope: !2996)
!3103 = !DILocation(line: 541, column: 39, scope: !2996)
!3104 = !DILocation(line: 542, column: 5, scope: !2996)
!3105 = !DILocation(line: 542, column: 9, scope: !2996)
!3106 = !DILocation(line: 542, column: 22, scope: !2996)
!3107 = !DILocation(line: 542, column: 28, scope: !2996)
!3108 = !DILocation(line: 543, column: 5, scope: !2996)
!3109 = !DILocation(line: 543, column: 9, scope: !2996)
!3110 = !DILocation(line: 543, column: 22, scope: !2996)
!3111 = !DILocation(line: 543, column: 28, scope: !2996)
!3112 = !DILocation(line: 545, column: 20, scope: !2996)
!3113 = !DILocation(line: 545, column: 26, scope: !2996)
!3114 = !DILocation(line: 545, column: 32, scope: !2996)
!3115 = !DILocation(line: 545, column: 41, scope: !2996)
!3116 = !DILocation(line: 545, column: 51, scope: !2996)
!3117 = !DILocation(line: 545, column: 57, scope: !2996)
!3118 = !DILocation(line: 545, column: 67, scope: !2996)
!3119 = !DILocation(line: 545, column: 73, scope: !2996)
!3120 = !DILocation(line: 545, column: 11, scope: !2996)
!3121 = !DILocation(line: 545, column: 9, scope: !2996)
!3122 = !DILocation(line: 546, column: 10, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !2996, file: !2, line: 546, column: 10)
!3124 = !DILocation(line: 546, column: 13, scope: !3123)
!3125 = !DILocation(line: 546, column: 10, scope: !2996)
!3126 = !DILocation(line: 546, column: 18, scope: !3123)
!3127 = !DILocation(line: 548, column: 10, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !2996, file: !2, line: 548, column: 10)
!3129 = !DILocation(line: 548, column: 16, scope: !3128)
!3130 = !DILocation(line: 548, column: 10, scope: !2996)
!3131 = !DILocation(line: 550, column: 18, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3128, file: !2, line: 549, column: 5)
!3133 = !DILocation(line: 550, column: 16, scope: !3132)
!3134 = !DILocation(line: 551, column: 24, scope: !3132)
!3135 = !DILocation(line: 551, column: 30, scope: !3132)
!3136 = !DILocation(line: 551, column: 36, scope: !3132)
!3137 = !DILocation(line: 551, column: 44, scope: !3132)
!3138 = !DILocation(line: 551, column: 53, scope: !3132)
!3139 = !DILocation(line: 551, column: 59, scope: !3132)
!3140 = !DILocation(line: 551, column: 68, scope: !3132)
!3141 = !DILocation(line: 551, column: 74, scope: !3132)
!3142 = !DILocation(line: 551, column: 15, scope: !3132)
!3143 = !DILocation(line: 551, column: 13, scope: !3132)
!3144 = !DILocation(line: 552, column: 14, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3132, file: !2, line: 552, column: 14)
!3146 = !DILocation(line: 552, column: 17, scope: !3145)
!3147 = !DILocation(line: 552, column: 14, scope: !3132)
!3148 = !DILocation(line: 552, column: 22, scope: !3145)
!3149 = !DILocation(line: 553, column: 5, scope: !3132)
!3150 = !DILocation(line: 556, column: 16, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3128, file: !2, line: 555, column: 5)
!3152 = !DILocation(line: 556, column: 14, scope: !3151)
!3153 = !DILocation(line: 557, column: 24, scope: !3151)
!3154 = !DILocation(line: 557, column: 30, scope: !3151)
!3155 = !{!1241, !1229, i64 208}
!3156 = !DILocation(line: 557, column: 9, scope: !3151)
!3157 = !DILocation(line: 557, column: 15, scope: !3151)
!3158 = !DILocation(line: 557, column: 22, scope: !3151)
!3159 = !{!1241, !1229, i64 216}
!3160 = !DILocation(line: 560, column: 5, scope: !2996)
!3161 = !DILocation(line: 560, column: 11, scope: !2996)
!3162 = !DILocation(line: 560, column: 15, scope: !2996)
!3163 = !DILocation(line: 562, column: 5, scope: !2996)
!3164 = !DILocation(line: 562, column: 12, scope: !2996)
!3165 = !DILocation(line: 562, column: 15, scope: !2996)
!3166 = !DILocation(line: 563, column: 10, scope: !3014)
!3167 = !DILocation(line: 563, column: 16, scope: !3014)
!3168 = !DILocation(line: 563, column: 10, scope: !2996)
!3169 = !DILocation(line: 565, column: 9, scope: !3013)
!3170 = !DILocation(line: 565, column: 13, scope: !3013)
!3171 = !DILocation(line: 566, column: 14, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3013, file: !2, line: 566, column: 14)
!3173 = !DILocation(line: 566, column: 20, scope: !3172)
!3174 = !DILocation(line: 566, column: 14, scope: !3013)
!3175 = !DILocation(line: 568, column: 30, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3177, file: !2, line: 568, column: 18)
!3177 = distinct !DILexicalBlock(scope: !3172, file: !2, line: 567, column: 9)
!3178 = !DILocation(line: 568, column: 36, scope: !3176)
!3179 = !DILocation(line: 568, column: 44, scope: !3176)
!3180 = !DILocation(line: 568, column: 52, scope: !3176)
!3181 = !DILocation(line: 568, column: 18, scope: !3176)
!3182 = !DILocation(line: 568, column: 79, scope: !3176)
!3183 = !DILocation(line: 568, column: 18, scope: !3177)
!3184 = !DILocation(line: 568, column: 85, scope: !3176)
!3185 = !DILocation(line: 569, column: 9, scope: !3177)
!3186 = !DILocation(line: 570, column: 31, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3172, file: !2, line: 570, column: 19)
!3188 = !DILocation(line: 570, column: 37, scope: !3187)
!3189 = !DILocation(line: 570, column: 46, scope: !3187)
!3190 = !DILocation(line: 570, column: 55, scope: !3187)
!3191 = !DILocation(line: 570, column: 19, scope: !3187)
!3192 = !DILocation(line: 570, column: 82, scope: !3187)
!3193 = !DILocation(line: 570, column: 19, scope: !3172)
!3194 = !DILocation(line: 570, column: 88, scope: !3187)
!3195 = !DILocation(line: 578, column: 9, scope: !3013)
!3196 = !DILocation(line: 578, column: 16, scope: !3013)
!3197 = !DILocation(line: 579, column: 9, scope: !3013)
!3198 = !DILocation(line: 579, column: 22, scope: !3013)
!3199 = !DILocation(line: 580, column: 22, scope: !3013)
!3200 = !DILocation(line: 580, column: 14, scope: !3013)
!3201 = !DILocation(line: 580, column: 29, scope: !3013)
!3202 = !DILocation(line: 580, column: 35, scope: !3013)
!3203 = !DILocation(line: 580, column: 34, scope: !3013)
!3204 = !DILocation(line: 580, column: 28, scope: !3013)
!3205 = !DILocation(line: 580, column: 27, scope: !3013)
!3206 = !DILocation(line: 580, column: 12, scope: !3013)
!3207 = !DILocation(line: 581, column: 18, scope: !3013)
!3208 = !DILocation(line: 581, column: 20, scope: !3013)
!3209 = !DILocation(line: 581, column: 35, scope: !3013)
!3210 = !DILocation(line: 581, column: 38, scope: !3013)
!3211 = !DILocation(line: 581, column: 37, scope: !3013)
!3212 = !DILocation(line: 581, column: 31, scope: !3013)
!3213 = !DILocation(line: 581, column: 30, scope: !3013)
!3214 = !DILocation(line: 581, column: 45, scope: !3013)
!3215 = !DILocation(line: 581, column: 44, scope: !3013)
!3216 = !DILocation(line: 581, column: 9, scope: !3013)
!3217 = !DILocation(line: 581, column: 16, scope: !3013)
!3218 = !DILocation(line: 582, column: 18, scope: !3013)
!3219 = !DILocation(line: 582, column: 20, scope: !3013)
!3220 = !DILocation(line: 582, column: 28, scope: !3013)
!3221 = !DILocation(line: 582, column: 31, scope: !3013)
!3222 = !DILocation(line: 582, column: 33, scope: !3013)
!3223 = !DILocation(line: 582, column: 52, scope: !3013)
!3224 = !DILocation(line: 582, column: 51, scope: !3013)
!3225 = !DILocation(line: 582, column: 58, scope: !3013)
!3226 = !DILocation(line: 582, column: 57, scope: !3013)
!3227 = !DILocation(line: 582, column: 54, scope: !3013)
!3228 = !DILocation(line: 582, column: 46, scope: !3013)
!3229 = !DILocation(line: 582, column: 45, scope: !3013)
!3230 = !DILocation(line: 582, column: 66, scope: !3013)
!3231 = !DILocation(line: 582, column: 65, scope: !3013)
!3232 = !DILocation(line: 582, column: 9, scope: !3013)
!3233 = !DILocation(line: 582, column: 16, scope: !3013)
!3234 = !DILocation(line: 583, column: 18, scope: !3013)
!3235 = !DILocation(line: 583, column: 20, scope: !3013)
!3236 = !DILocation(line: 583, column: 42, scope: !3013)
!3237 = !DILocation(line: 583, column: 41, scope: !3013)
!3238 = !DILocation(line: 583, column: 49, scope: !3013)
!3239 = !DILocation(line: 583, column: 48, scope: !3013)
!3240 = !DILocation(line: 583, column: 45, scope: !3013)
!3241 = !DILocation(line: 583, column: 35, scope: !3013)
!3242 = !DILocation(line: 583, column: 34, scope: !3013)
!3243 = !DILocation(line: 583, column: 57, scope: !3013)
!3244 = !DILocation(line: 583, column: 56, scope: !3013)
!3245 = !DILocation(line: 583, column: 9, scope: !3013)
!3246 = !DILocation(line: 583, column: 16, scope: !3013)
!3247 = !DILocation(line: 584, column: 9, scope: !3013)
!3248 = !DILocation(line: 584, column: 20, scope: !3013)
!3249 = !DILocation(line: 585, column: 15, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3013, file: !2, line: 585, column: 9)
!3251 = !DILocation(line: 585, column: 14, scope: !3250)
!3252 = !DILocation(line: 585, column: 19, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3250, file: !2, line: 585, column: 9)
!3254 = !DILocation(line: 585, column: 20, scope: !3253)
!3255 = !DILocation(line: 585, column: 9, scope: !3250)
!3256 = !DILocation(line: 587, column: 21, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3253, file: !2, line: 586, column: 9)
!3258 = !DILocation(line: 587, column: 13, scope: !3257)
!3259 = !DILocation(line: 587, column: 24, scope: !3257)
!3260 = !DILocation(line: 588, column: 19, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3257, file: !2, line: 588, column: 13)
!3262 = !DILocation(line: 588, column: 18, scope: !3261)
!3263 = !DILocation(line: 588, column: 23, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3261, file: !2, line: 588, column: 13)
!3265 = !DILocation(line: 588, column: 24, scope: !3264)
!3266 = !DILocation(line: 588, column: 13, scope: !3261)
!3267 = !DILocation(line: 590, column: 27, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3269, file: !2, line: 590, column: 22)
!3269 = distinct !DILexicalBlock(scope: !3264, file: !2, line: 589, column: 13)
!3270 = !DILocation(line: 590, column: 25, scope: !3268)
!3271 = !DILocation(line: 590, column: 30, scope: !3268)
!3272 = !DILocation(line: 590, column: 29, scope: !3268)
!3273 = !DILocation(line: 590, column: 33, scope: !3268)
!3274 = !DILocation(line: 590, column: 44, scope: !3268)
!3275 = !DILocation(line: 590, column: 36, scope: !3268)
!3276 = !DILocation(line: 590, column: 53, scope: !3268)
!3277 = !DILocation(line: 590, column: 49, scope: !3268)
!3278 = !DILocation(line: 590, column: 47, scope: !3268)
!3279 = !DILocation(line: 590, column: 22, scope: !3269)
!3280 = !DILocation(line: 590, column: 75, scope: !3268)
!3281 = !DILocation(line: 590, column: 71, scope: !3268)
!3282 = !DILocation(line: 590, column: 66, scope: !3268)
!3283 = !DILocation(line: 590, column: 58, scope: !3268)
!3284 = !DILocation(line: 590, column: 69, scope: !3268)
!3285 = !DILocation(line: 591, column: 13, scope: !3269)
!3286 = !DILocation(line: 588, column: 29, scope: !3264)
!3287 = !DILocation(line: 588, column: 13, scope: !3264)
!3288 = distinct !{!3288, !3266, !3289, !1393}
!3289 = !DILocation(line: 591, column: 13, scope: !3261)
!3290 = !DILocation(line: 592, column: 9, scope: !3257)
!3291 = !DILocation(line: 585, column: 25, scope: !3253)
!3292 = !DILocation(line: 585, column: 9, scope: !3253)
!3293 = distinct !{!3293, !3255, !3294, !1393}
!3294 = !DILocation(line: 592, column: 9, scope: !3250)
!3295 = !DILocation(line: 593, column: 5, scope: !3014)
!3296 = !DILocation(line: 593, column: 5, scope: !3013)
!3297 = !DILocation(line: 596, column: 10, scope: !3024)
!3298 = !DILocation(line: 596, column: 16, scope: !3024)
!3299 = !DILocation(line: 596, column: 10, scope: !2996)
!3300 = !DILocation(line: 598, column: 15, scope: !3022)
!3301 = !DILocation(line: 598, column: 21, scope: !3022)
!3302 = !DILocation(line: 598, column: 14, scope: !3023)
!3303 = !DILocation(line: 600, column: 13, scope: !3021)
!3304 = !DILocation(line: 600, column: 17, scope: !3021)
!3305 = !DILocation(line: 601, column: 18, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3021, file: !2, line: 601, column: 18)
!3307 = !DILocation(line: 601, column: 24, scope: !3306)
!3308 = !{!1241, !1229, i64 2592}
!3309 = !DILocation(line: 601, column: 18, scope: !3021)
!3310 = !DILocation(line: 601, column: 52, scope: !3306)
!3311 = !DILocation(line: 601, column: 35, scope: !3306)
!3312 = !DILocation(line: 603, column: 19, scope: !3028)
!3313 = !DILocation(line: 603, column: 18, scope: !3028)
!3314 = !DILocation(line: 603, column: 23, scope: !3027)
!3315 = !DILocation(line: 603, column: 25, scope: !3027)
!3316 = !DILocation(line: 603, column: 31, scope: !3027)
!3317 = !DILocation(line: 603, column: 24, scope: !3027)
!3318 = !DILocation(line: 603, column: 13, scope: !3028)
!3319 = !DILocation(line: 605, column: 17, scope: !3026)
!3320 = !DILocation(line: 605, column: 26, scope: !3026)
!3321 = !DILocation(line: 606, column: 17, scope: !3026)
!3322 = !DILocation(line: 606, column: 25, scope: !3026)
!3323 = !DILocation(line: 606, column: 34, scope: !3026)
!3324 = !DILocation(line: 608, column: 23, scope: !3026)
!3325 = !DILocation(line: 608, column: 29, scope: !3026)
!3326 = !DILocation(line: 608, column: 38, scope: !3026)
!3327 = !DILocation(line: 608, column: 44, scope: !3026)
!3328 = !DILocation(line: 608, column: 50, scope: !3026)
!3329 = !DILocation(line: 608, column: 53, scope: !3026)
!3330 = !DILocation(line: 608, column: 57, scope: !3026)
!3331 = !DILocation(line: 608, column: 56, scope: !3026)
!3332 = !DILocation(line: 608, column: 36, scope: !3026)
!3333 = !DILocation(line: 608, column: 21, scope: !3026)
!3334 = !DILocation(line: 609, column: 26, scope: !3026)
!3335 = !DILocation(line: 609, column: 48, scope: !3026)
!3336 = !DILocation(line: 609, column: 38, scope: !3026)
!3337 = !DILocation(line: 609, column: 65, scope: !3026)
!3338 = !DILocation(line: 609, column: 55, scope: !3026)
!3339 = !DILocation(line: 609, column: 24, scope: !3026)
!3340 = !DILocation(line: 610, column: 23, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3026, file: !2, line: 610, column: 22)
!3342 = !DILocation(line: 610, column: 22, scope: !3026)
!3343 = !DILocation(line: 610, column: 32, scope: !3341)
!3344 = !DILocation(line: 611, column: 22, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3026, file: !2, line: 611, column: 22)
!3346 = !DILocation(line: 611, column: 28, scope: !3345)
!3347 = !DILocation(line: 611, column: 37, scope: !3345)
!3348 = !DILocation(line: 611, column: 42, scope: !3345)
!3349 = !DILocation(line: 611, column: 48, scope: !3345)
!3350 = !DILocation(line: 611, column: 22, scope: !3026)
!3351 = !DILocation(line: 611, column: 54, scope: !3345)
!3352 = !DILocation(line: 613, column: 23, scope: !3026)
!3353 = !DILocation(line: 613, column: 29, scope: !3026)
!3354 = !DILocation(line: 613, column: 39, scope: !3026)
!3355 = !DILocation(line: 613, column: 45, scope: !3026)
!3356 = !DILocation(line: 613, column: 51, scope: !3026)
!3357 = !DILocation(line: 613, column: 54, scope: !3026)
!3358 = !DILocation(line: 613, column: 59, scope: !3026)
!3359 = !DILocation(line: 613, column: 58, scope: !3026)
!3360 = !DILocation(line: 613, column: 37, scope: !3026)
!3361 = !DILocation(line: 613, column: 21, scope: !3026)
!3362 = !DILocation(line: 614, column: 27, scope: !3026)
!3363 = !DILocation(line: 614, column: 50, scope: !3026)
!3364 = !DILocation(line: 614, column: 40, scope: !3026)
!3365 = !DILocation(line: 614, column: 67, scope: !3026)
!3366 = !DILocation(line: 614, column: 57, scope: !3026)
!3367 = !DILocation(line: 614, column: 25, scope: !3026)
!3368 = !DILocation(line: 615, column: 23, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3026, file: !2, line: 615, column: 22)
!3370 = !DILocation(line: 615, column: 22, scope: !3026)
!3371 = !DILocation(line: 615, column: 33, scope: !3369)
!3372 = !DILocation(line: 617, column: 17, scope: !3026)
!3373 = !DILocation(line: 617, column: 21, scope: !3026)
!3374 = !DILocation(line: 617, column: 29, scope: !3026)
!3375 = !DILocation(line: 617, column: 39, scope: !3026)
!3376 = !DILocation(line: 617, column: 37, scope: !3026)
!3377 = !DILocation(line: 618, column: 23, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3026, file: !2, line: 618, column: 22)
!3379 = !DILocation(line: 618, column: 22, scope: !3026)
!3380 = !DILocation(line: 620, column: 21, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3378, file: !2, line: 619, column: 17)
!3382 = !DILocation(line: 620, column: 27, scope: !3381)
!3383 = !DILocation(line: 620, column: 33, scope: !3381)
!3384 = !DILocation(line: 620, column: 35, scope: !3381)
!3385 = !DILocation(line: 621, column: 26, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3381, file: !2, line: 621, column: 26)
!3387 = !DILocation(line: 621, column: 32, scope: !3386)
!3388 = !DILocation(line: 621, column: 26, scope: !3381)
!3389 = !DILocation(line: 621, column: 50, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3386, file: !2, line: 621, column: 43)
!3391 = !DILocation(line: 621, column: 65, scope: !3390)
!3392 = !DILocation(line: 621, column: 71, scope: !3390)
!3393 = !DILocation(line: 621, column: 81, scope: !3390)
!3394 = !DILocation(line: 621, column: 54, scope: !3390)
!3395 = !DILocation(line: 621, column: 85, scope: !3390)
!3396 = !DILocation(line: 622, column: 17, scope: !3381)
!3397 = !DILocation(line: 623, column: 27, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3378, file: !2, line: 623, column: 27)
!3399 = !DILocation(line: 623, column: 33, scope: !3398)
!3400 = !DILocation(line: 623, column: 27, scope: !3378)
!3401 = !DILocation(line: 623, column: 78, scope: !3398)
!3402 = !DILocation(line: 623, column: 70, scope: !3398)
!3403 = !DILocation(line: 623, column: 49, scope: !3398)
!3404 = !DILocation(line: 623, column: 55, scope: !3398)
!3405 = !DILocation(line: 623, column: 64, scope: !3398)
!3406 = !DILocation(line: 623, column: 67, scope: !3398)
!3407 = !DILocation(line: 624, column: 17, scope: !3026)
!3408 = !DILocation(line: 624, column: 23, scope: !3026)
!3409 = !DILocation(line: 624, column: 28, scope: !3026)
!3410 = !DILocation(line: 624, column: 30, scope: !3026)
!3411 = !DILocation(line: 625, column: 13, scope: !3027)
!3412 = !DILocation(line: 625, column: 13, scope: !3026)
!3413 = !DILocation(line: 603, column: 40, scope: !3027)
!3414 = !DILocation(line: 603, column: 13, scope: !3027)
!3415 = distinct !{!3415, !3318, !3416, !1393}
!3416 = !DILocation(line: 625, column: 13, scope: !3028)
!3417 = !DILocation(line: 627, column: 18, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3021, file: !2, line: 627, column: 18)
!3419 = !DILocation(line: 627, column: 18, scope: !3021)
!3420 = !DILocation(line: 627, column: 42, scope: !3418)
!3421 = !DILocation(line: 627, column: 48, scope: !3418)
!3422 = !DILocation(line: 627, column: 55, scope: !3418)
!3423 = !DILocation(line: 627, column: 64, scope: !3418)
!3424 = !{!2918, !1224, i64 16}
!3425 = !DILocation(line: 627, column: 69, scope: !3418)
!3426 = !DILocation(line: 627, column: 78, scope: !3418)
!3427 = !DILocation(line: 627, column: 26, scope: !3418)
!3428 = !DILocation(line: 628, column: 9, scope: !3022)
!3429 = !DILocation(line: 628, column: 9, scope: !3021)
!3430 = !DILocation(line: 631, column: 19, scope: !3035)
!3431 = !DILocation(line: 631, column: 18, scope: !3035)
!3432 = !DILocation(line: 631, column: 23, scope: !3034)
!3433 = !DILocation(line: 631, column: 25, scope: !3034)
!3434 = !DILocation(line: 631, column: 31, scope: !3034)
!3435 = !DILocation(line: 631, column: 24, scope: !3034)
!3436 = !DILocation(line: 631, column: 13, scope: !3035)
!3437 = !DILocation(line: 633, column: 17, scope: !3033)
!3438 = !DILocation(line: 633, column: 26, scope: !3033)
!3439 = !DILocation(line: 634, column: 17, scope: !3033)
!3440 = !DILocation(line: 634, column: 24, scope: !3033)
!3441 = !DILocation(line: 634, column: 37, scope: !3033)
!3442 = !DILocation(line: 635, column: 17, scope: !3033)
!3443 = !DILocation(line: 635, column: 25, scope: !3033)
!3444 = !DILocation(line: 635, column: 34, scope: !3033)
!3445 = !DILocation(line: 637, column: 23, scope: !3033)
!3446 = !DILocation(line: 637, column: 29, scope: !3033)
!3447 = !DILocation(line: 637, column: 38, scope: !3033)
!3448 = !DILocation(line: 637, column: 44, scope: !3033)
!3449 = !DILocation(line: 637, column: 50, scope: !3033)
!3450 = !DILocation(line: 637, column: 53, scope: !3033)
!3451 = !DILocation(line: 637, column: 57, scope: !3033)
!3452 = !DILocation(line: 637, column: 56, scope: !3033)
!3453 = !DILocation(line: 637, column: 36, scope: !3033)
!3454 = !DILocation(line: 637, column: 21, scope: !3033)
!3455 = !DILocation(line: 638, column: 26, scope: !3033)
!3456 = !DILocation(line: 638, column: 49, scope: !3033)
!3457 = !DILocation(line: 638, column: 54, scope: !3033)
!3458 = !DILocation(line: 638, column: 58, scope: !3033)
!3459 = !DILocation(line: 638, column: 38, scope: !3033)
!3460 = !DILocation(line: 638, column: 80, scope: !3033)
!3461 = !DILocation(line: 638, column: 85, scope: !3033)
!3462 = !DILocation(line: 638, column: 89, scope: !3033)
!3463 = !DILocation(line: 638, column: 69, scope: !3033)
!3464 = !DILocation(line: 638, column: 24, scope: !3033)
!3465 = !DILocation(line: 639, column: 23, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3033, file: !2, line: 639, column: 22)
!3467 = !DILocation(line: 639, column: 22, scope: !3033)
!3468 = !DILocation(line: 639, column: 32, scope: !3466)
!3469 = !DILocation(line: 640, column: 22, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3033, file: !2, line: 640, column: 22)
!3471 = !DILocation(line: 640, column: 28, scope: !3470)
!3472 = !DILocation(line: 640, column: 37, scope: !3470)
!3473 = !DILocation(line: 640, column: 42, scope: !3470)
!3474 = !DILocation(line: 640, column: 48, scope: !3470)
!3475 = !DILocation(line: 640, column: 22, scope: !3033)
!3476 = !DILocation(line: 640, column: 54, scope: !3470)
!3477 = !DILocation(line: 642, column: 23, scope: !3033)
!3478 = !DILocation(line: 642, column: 29, scope: !3033)
!3479 = !DILocation(line: 642, column: 39, scope: !3033)
!3480 = !DILocation(line: 642, column: 45, scope: !3033)
!3481 = !DILocation(line: 642, column: 51, scope: !3033)
!3482 = !DILocation(line: 642, column: 54, scope: !3033)
!3483 = !DILocation(line: 642, column: 59, scope: !3033)
!3484 = !DILocation(line: 642, column: 58, scope: !3033)
!3485 = !DILocation(line: 642, column: 37, scope: !3033)
!3486 = !DILocation(line: 642, column: 21, scope: !3033)
!3487 = !DILocation(line: 643, column: 27, scope: !3033)
!3488 = !DILocation(line: 643, column: 51, scope: !3033)
!3489 = !DILocation(line: 643, column: 56, scope: !3033)
!3490 = !DILocation(line: 643, column: 60, scope: !3033)
!3491 = !DILocation(line: 643, column: 40, scope: !3033)
!3492 = !DILocation(line: 643, column: 83, scope: !3033)
!3493 = !DILocation(line: 643, column: 88, scope: !3033)
!3494 = !DILocation(line: 643, column: 92, scope: !3033)
!3495 = !DILocation(line: 643, column: 72, scope: !3033)
!3496 = !DILocation(line: 643, column: 25, scope: !3033)
!3497 = !DILocation(line: 644, column: 23, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3033, file: !2, line: 644, column: 22)
!3499 = !DILocation(line: 644, column: 22, scope: !3033)
!3500 = !DILocation(line: 644, column: 33, scope: !3498)
!3501 = !DILocation(line: 646, column: 17, scope: !3033)
!3502 = !DILocation(line: 646, column: 24, scope: !3033)
!3503 = !DILocation(line: 646, column: 30, scope: !3033)
!3504 = !DILocation(line: 646, column: 44, scope: !3033)
!3505 = !DILocation(line: 646, column: 42, scope: !3033)
!3506 = !DILocation(line: 647, column: 32, scope: !3033)
!3507 = !DILocation(line: 647, column: 17, scope: !3033)
!3508 = !DILocation(line: 647, column: 29, scope: !3033)
!3509 = !DILocation(line: 648, column: 22, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3033, file: !2, line: 648, column: 22)
!3511 = !DILocation(line: 648, column: 28, scope: !3510)
!3512 = !DILocation(line: 648, column: 26, scope: !3510)
!3513 = !DILocation(line: 648, column: 22, scope: !3033)
!3514 = !DILocation(line: 648, column: 48, scope: !3510)
!3515 = !DILocation(line: 648, column: 46, scope: !3510)
!3516 = !DILocation(line: 648, column: 42, scope: !3510)
!3517 = !DILocation(line: 649, column: 32, scope: !3033)
!3518 = !DILocation(line: 649, column: 17, scope: !3033)
!3519 = !DILocation(line: 649, column: 29, scope: !3033)
!3520 = !DILocation(line: 650, column: 22, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3033, file: !2, line: 650, column: 22)
!3522 = !DILocation(line: 650, column: 28, scope: !3521)
!3523 = !DILocation(line: 650, column: 26, scope: !3521)
!3524 = !DILocation(line: 650, column: 22, scope: !3033)
!3525 = !DILocation(line: 650, column: 48, scope: !3521)
!3526 = !DILocation(line: 650, column: 46, scope: !3521)
!3527 = !DILocation(line: 650, column: 42, scope: !3521)
!3528 = !DILocation(line: 651, column: 35, scope: !3033)
!3529 = !DILocation(line: 651, column: 17, scope: !3033)
!3530 = !DILocation(line: 651, column: 23, scope: !3033)
!3531 = !DILocation(line: 651, column: 29, scope: !3033)
!3532 = !DILocation(line: 651, column: 32, scope: !3033)
!3533 = !DILocation(line: 653, column: 22, scope: !3044)
!3534 = !DILocation(line: 653, column: 28, scope: !3044)
!3535 = !DILocation(line: 653, column: 22, scope: !3033)
!3536 = !DILocation(line: 655, column: 21, scope: !3043)
!3537 = !DILocation(line: 655, column: 25, scope: !3043)
!3538 = !DILocation(line: 655, column: 33, scope: !3043)
!3539 = !DILocation(line: 655, column: 43, scope: !3043)
!3540 = !DILocation(line: 655, column: 41, scope: !3043)
!3541 = !DILocation(line: 656, column: 50, scope: !3043)
!3542 = !DILocation(line: 656, column: 42, scope: !3043)
!3543 = !DILocation(line: 656, column: 21, scope: !3043)
!3544 = !DILocation(line: 656, column: 27, scope: !3043)
!3545 = !DILocation(line: 656, column: 36, scope: !3043)
!3546 = !DILocation(line: 656, column: 39, scope: !3043)
!3547 = !DILocation(line: 657, column: 17, scope: !3044)
!3548 = !DILocation(line: 657, column: 17, scope: !3043)
!3549 = !DILocation(line: 658, column: 17, scope: !3033)
!3550 = !DILocation(line: 658, column: 23, scope: !3033)
!3551 = !DILocation(line: 658, column: 28, scope: !3033)
!3552 = !DILocation(line: 658, column: 30, scope: !3033)
!3553 = !DILocation(line: 659, column: 13, scope: !3034)
!3554 = !DILocation(line: 659, column: 13, scope: !3033)
!3555 = !DILocation(line: 631, column: 40, scope: !3034)
!3556 = !DILocation(line: 631, column: 13, scope: !3034)
!3557 = distinct !{!3557, !3436, !3558, !1393}
!3558 = !DILocation(line: 659, column: 13, scope: !3035)
!3559 = !DILocation(line: 661, column: 9, scope: !3023)
!3560 = !DILocation(line: 664, column: 5, scope: !2996)
!3561 = !DILocation(line: 664, column: 9, scope: !2996)
!3562 = !DILocation(line: 665, column: 11, scope: !3051)
!3563 = !DILocation(line: 665, column: 17, scope: !3051)
!3564 = !DILocation(line: 665, column: 10, scope: !2996)
!3565 = !DILocation(line: 667, column: 15, scope: !3049)
!3566 = !DILocation(line: 667, column: 14, scope: !3049)
!3567 = !DILocation(line: 667, column: 19, scope: !3048)
!3568 = !DILocation(line: 667, column: 21, scope: !3048)
!3569 = !DILocation(line: 667, column: 27, scope: !3048)
!3570 = !DILocation(line: 667, column: 20, scope: !3048)
!3571 = !DILocation(line: 667, column: 9, scope: !3049)
!3572 = !DILocation(line: 669, column: 13, scope: !3047)
!3573 = !DILocation(line: 669, column: 17, scope: !3047)
!3574 = !DILocation(line: 669, column: 24, scope: !3047)
!3575 = !DILocation(line: 669, column: 30, scope: !3047)
!3576 = !DILocation(line: 669, column: 41, scope: !3047)
!3577 = !DILocation(line: 669, column: 47, scope: !3047)
!3578 = !DILocation(line: 669, column: 56, scope: !3047)
!3579 = !DILocation(line: 669, column: 61, scope: !3047)
!3580 = !DILocation(line: 670, column: 13, scope: !3047)
!3581 = !DILocation(line: 670, column: 22, scope: !3047)
!3582 = !DILocation(line: 670, column: 28, scope: !3047)
!3583 = !DILocation(line: 670, column: 34, scope: !3047)
!3584 = !DILocation(line: 670, column: 44, scope: !3047)
!3585 = !DILocation(line: 670, column: 50, scope: !3047)
!3586 = !DILocation(line: 670, column: 49, scope: !3047)
!3587 = !DILocation(line: 670, column: 42, scope: !3047)
!3588 = !DILocation(line: 671, column: 32, scope: !3047)
!3589 = !DILocation(line: 671, column: 55, scope: !3047)
!3590 = !DILocation(line: 671, column: 45, scope: !3047)
!3591 = !DILocation(line: 671, column: 72, scope: !3047)
!3592 = !DILocation(line: 671, column: 62, scope: !3047)
!3593 = !DILocation(line: 671, column: 13, scope: !3047)
!3594 = !DILocation(line: 671, column: 19, scope: !3047)
!3595 = !DILocation(line: 671, column: 27, scope: !3047)
!3596 = !DILocation(line: 671, column: 30, scope: !3047)
!3597 = !DILocation(line: 672, column: 9, scope: !3048)
!3598 = !DILocation(line: 672, column: 9, scope: !3047)
!3599 = !DILocation(line: 667, column: 39, scope: !3048)
!3600 = !DILocation(line: 667, column: 9, scope: !3048)
!3601 = distinct !{!3601, !3571, !3602, !1393}
!3602 = !DILocation(line: 672, column: 9, scope: !3049)
!3603 = !DILocation(line: 673, column: 15, scope: !3058)
!3604 = !DILocation(line: 673, column: 21, scope: !3058)
!3605 = !DILocation(line: 673, column: 14, scope: !3050)
!3606 = !DILocation(line: 675, column: 19, scope: !3056)
!3607 = !DILocation(line: 675, column: 18, scope: !3056)
!3608 = !DILocation(line: 675, column: 23, scope: !3055)
!3609 = !DILocation(line: 675, column: 25, scope: !3055)
!3610 = !DILocation(line: 675, column: 31, scope: !3055)
!3611 = !DILocation(line: 675, column: 24, scope: !3055)
!3612 = !DILocation(line: 675, column: 13, scope: !3056)
!3613 = !DILocation(line: 677, column: 17, scope: !3054)
!3614 = !DILocation(line: 677, column: 21, scope: !3054)
!3615 = !DILocation(line: 677, column: 27, scope: !3054)
!3616 = !DILocation(line: 677, column: 33, scope: !3054)
!3617 = !DILocation(line: 677, column: 43, scope: !3054)
!3618 = !DILocation(line: 677, column: 49, scope: !3054)
!3619 = !DILocation(line: 677, column: 57, scope: !3054)
!3620 = !DILocation(line: 677, column: 62, scope: !3054)
!3621 = !DILocation(line: 678, column: 17, scope: !3054)
!3622 = !DILocation(line: 678, column: 26, scope: !3054)
!3623 = !DILocation(line: 678, column: 32, scope: !3054)
!3624 = !DILocation(line: 678, column: 38, scope: !3054)
!3625 = !DILocation(line: 678, column: 47, scope: !3054)
!3626 = !DILocation(line: 678, column: 52, scope: !3054)
!3627 = !DILocation(line: 678, column: 51, scope: !3054)
!3628 = !DILocation(line: 678, column: 45, scope: !3054)
!3629 = !DILocation(line: 679, column: 35, scope: !3054)
!3630 = !DILocation(line: 679, column: 57, scope: !3054)
!3631 = !DILocation(line: 679, column: 47, scope: !3054)
!3632 = !DILocation(line: 679, column: 74, scope: !3054)
!3633 = !DILocation(line: 679, column: 64, scope: !3054)
!3634 = !DILocation(line: 679, column: 17, scope: !3054)
!3635 = !DILocation(line: 679, column: 23, scope: !3054)
!3636 = !DILocation(line: 679, column: 30, scope: !3054)
!3637 = !DILocation(line: 679, column: 33, scope: !3054)
!3638 = !DILocation(line: 680, column: 22, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3054, file: !2, line: 680, column: 22)
!3640 = !DILocation(line: 680, column: 28, scope: !3639)
!3641 = !DILocation(line: 680, column: 37, scope: !3639)
!3642 = !DILocation(line: 680, column: 42, scope: !3639)
!3643 = !DILocation(line: 680, column: 48, scope: !3639)
!3644 = !DILocation(line: 680, column: 55, scope: !3639)
!3645 = !DILocation(line: 680, column: 57, scope: !3639)
!3646 = !DILocation(line: 680, column: 22, scope: !3054)
!3647 = !DILocation(line: 680, column: 63, scope: !3639)
!3648 = !DILocation(line: 680, column: 69, scope: !3639)
!3649 = !DILocation(line: 680, column: 76, scope: !3639)
!3650 = !DILocation(line: 680, column: 79, scope: !3639)
!3651 = !DILocation(line: 681, column: 13, scope: !3055)
!3652 = !DILocation(line: 681, column: 13, scope: !3054)
!3653 = !DILocation(line: 675, column: 42, scope: !3055)
!3654 = !DILocation(line: 675, column: 13, scope: !3055)
!3655 = distinct !{!3655, !3612, !3656, !1393}
!3656 = !DILocation(line: 681, column: 13, scope: !3056)
!3657 = !DILocation(line: 682, column: 9, scope: !3057)
!3658 = !DILocation(line: 683, column: 15, scope: !3063)
!3659 = !DILocation(line: 683, column: 14, scope: !3063)
!3660 = !DILocation(line: 683, column: 19, scope: !3062)
!3661 = !DILocation(line: 683, column: 21, scope: !3062)
!3662 = !DILocation(line: 683, column: 27, scope: !3062)
!3663 = !DILocation(line: 683, column: 20, scope: !3062)
!3664 = !DILocation(line: 683, column: 9, scope: !3063)
!3665 = !DILocation(line: 685, column: 13, scope: !3061)
!3666 = !DILocation(line: 685, column: 17, scope: !3061)
!3667 = !DILocation(line: 685, column: 23, scope: !3061)
!3668 = !DILocation(line: 685, column: 29, scope: !3061)
!3669 = !DILocation(line: 685, column: 43, scope: !3061)
!3670 = !DILocation(line: 685, column: 47, scope: !3061)
!3671 = !DILocation(line: 685, column: 53, scope: !3061)
!3672 = !DILocation(line: 686, column: 19, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3061, file: !2, line: 686, column: 18)
!3674 = !DILocation(line: 686, column: 25, scope: !3673)
!3675 = !DILocation(line: 686, column: 33, scope: !3673)
!3676 = !DILocation(line: 686, column: 18, scope: !3061)
!3677 = !DILocation(line: 686, column: 47, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3673, file: !2, line: 686, column: 38)
!3679 = !DILocation(line: 686, column: 44, scope: !3678)
!3680 = !DILocation(line: 686, column: 52, scope: !3678)
!3681 = !DILocation(line: 687, column: 19, scope: !3067)
!3682 = !DILocation(line: 687, column: 18, scope: !3067)
!3683 = !DILocation(line: 687, column: 23, scope: !3066)
!3684 = !DILocation(line: 687, column: 25, scope: !3066)
!3685 = !DILocation(line: 687, column: 24, scope: !3066)
!3686 = !DILocation(line: 687, column: 13, scope: !3067)
!3687 = !DILocation(line: 689, column: 23, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3065, file: !2, line: 689, column: 22)
!3689 = !DILocation(line: 689, column: 29, scope: !3688)
!3690 = !DILocation(line: 689, column: 36, scope: !3688)
!3691 = !DILocation(line: 689, column: 22, scope: !3065)
!3692 = !DILocation(line: 689, column: 46, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3688, file: !2, line: 689, column: 41)
!3694 = !DILocation(line: 689, column: 50, scope: !3693)
!3695 = !DILocation(line: 690, column: 17, scope: !3065)
!3696 = !DILocation(line: 690, column: 21, scope: !3065)
!3697 = !DILocation(line: 690, column: 29, scope: !3065)
!3698 = !DILocation(line: 690, column: 35, scope: !3065)
!3699 = !DILocation(line: 690, column: 43, scope: !3065)
!3700 = !DILocation(line: 690, column: 48, scope: !3065)
!3701 = !DILocation(line: 690, column: 54, scope: !3065)
!3702 = !DILocation(line: 690, column: 61, scope: !3065)
!3703 = !DILocation(line: 690, column: 46, scope: !3065)
!3704 = !DILocation(line: 691, column: 23, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3065, file: !2, line: 691, column: 22)
!3706 = !DILocation(line: 691, column: 22, scope: !3065)
!3707 = !DILocation(line: 691, column: 31, scope: !3705)
!3708 = !DILocation(line: 691, column: 37, scope: !3705)
!3709 = !DILocation(line: 691, column: 43, scope: !3705)
!3710 = !DILocation(line: 691, column: 47, scope: !3705)
!3711 = !DILocation(line: 692, column: 27, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3705, file: !2, line: 692, column: 27)
!3713 = !DILocation(line: 692, column: 33, scope: !3712)
!3714 = !DILocation(line: 692, column: 27, scope: !3705)
!3715 = !DILocation(line: 692, column: 80, scope: !3712)
!3716 = !DILocation(line: 692, column: 72, scope: !3712)
!3717 = !DILocation(line: 692, column: 49, scope: !3712)
!3718 = !DILocation(line: 692, column: 55, scope: !3712)
!3719 = !DILocation(line: 692, column: 64, scope: !3712)
!3720 = !DILocation(line: 692, column: 69, scope: !3712)
!3721 = !DILocation(line: 693, column: 17, scope: !3065)
!3722 = !DILocation(line: 693, column: 23, scope: !3065)
!3723 = !DILocation(line: 693, column: 28, scope: !3065)
!3724 = !DILocation(line: 693, column: 32, scope: !3065)
!3725 = !DILocation(line: 694, column: 20, scope: !3065)
!3726 = !DILocation(line: 695, column: 13, scope: !3066)
!3727 = !DILocation(line: 695, column: 13, scope: !3065)
!3728 = !DILocation(line: 687, column: 31, scope: !3066)
!3729 = !DILocation(line: 687, column: 13, scope: !3066)
!3730 = distinct !{!3730, !3686, !3731, !1393}
!3731 = !DILocation(line: 695, column: 13, scope: !3067)
!3732 = !DILocation(line: 696, column: 9, scope: !3062)
!3733 = !DILocation(line: 696, column: 9, scope: !3061)
!3734 = !DILocation(line: 683, column: 39, scope: !3062)
!3735 = !DILocation(line: 683, column: 9, scope: !3062)
!3736 = distinct !{!3736, !3664, !3737, !1393}
!3737 = !DILocation(line: 696, column: 9, scope: !3063)
!3738 = !DILocation(line: 697, column: 5, scope: !3050)
!3739 = !DILocation(line: 700, column: 15, scope: !3071)
!3740 = !DILocation(line: 700, column: 14, scope: !3071)
!3741 = !DILocation(line: 700, column: 19, scope: !3070)
!3742 = !DILocation(line: 700, column: 21, scope: !3070)
!3743 = !DILocation(line: 700, column: 27, scope: !3070)
!3744 = !DILocation(line: 700, column: 20, scope: !3070)
!3745 = !DILocation(line: 700, column: 9, scope: !3071)
!3746 = !DILocation(line: 702, column: 13, scope: !3069)
!3747 = !DILocation(line: 702, column: 17, scope: !3069)
!3748 = !DILocation(line: 702, column: 24, scope: !3069)
!3749 = !DILocation(line: 702, column: 30, scope: !3069)
!3750 = !DILocation(line: 702, column: 41, scope: !3069)
!3751 = !DILocation(line: 702, column: 47, scope: !3069)
!3752 = !DILocation(line: 702, column: 56, scope: !3069)
!3753 = !DILocation(line: 702, column: 61, scope: !3069)
!3754 = !DILocation(line: 703, column: 13, scope: !3069)
!3755 = !DILocation(line: 703, column: 22, scope: !3069)
!3756 = !DILocation(line: 703, column: 28, scope: !3069)
!3757 = !DILocation(line: 703, column: 34, scope: !3069)
!3758 = !DILocation(line: 703, column: 44, scope: !3069)
!3759 = !DILocation(line: 703, column: 50, scope: !3069)
!3760 = !DILocation(line: 703, column: 49, scope: !3069)
!3761 = !DILocation(line: 703, column: 42, scope: !3069)
!3762 = !DILocation(line: 704, column: 32, scope: !3069)
!3763 = !DILocation(line: 704, column: 56, scope: !3069)
!3764 = !DILocation(line: 704, column: 61, scope: !3069)
!3765 = !DILocation(line: 704, column: 65, scope: !3069)
!3766 = !DILocation(line: 704, column: 71, scope: !3069)
!3767 = !DILocation(line: 704, column: 80, scope: !3069)
!3768 = !DILocation(line: 704, column: 81, scope: !3069)
!3769 = !DILocation(line: 704, column: 79, scope: !3069)
!3770 = !DILocation(line: 704, column: 45, scope: !3069)
!3771 = !DILocation(line: 704, column: 98, scope: !3069)
!3772 = !DILocation(line: 704, column: 103, scope: !3069)
!3773 = !DILocation(line: 704, column: 107, scope: !3069)
!3774 = !DILocation(line: 704, column: 113, scope: !3069)
!3775 = !DILocation(line: 704, column: 122, scope: !3069)
!3776 = !DILocation(line: 704, column: 123, scope: !3069)
!3777 = !DILocation(line: 704, column: 121, scope: !3069)
!3778 = !DILocation(line: 704, column: 87, scope: !3069)
!3779 = !DILocation(line: 704, column: 13, scope: !3069)
!3780 = !DILocation(line: 704, column: 19, scope: !3069)
!3781 = !DILocation(line: 704, column: 27, scope: !3069)
!3782 = !DILocation(line: 704, column: 30, scope: !3069)
!3783 = !DILocation(line: 705, column: 9, scope: !3070)
!3784 = !DILocation(line: 705, column: 9, scope: !3069)
!3785 = !DILocation(line: 700, column: 39, scope: !3070)
!3786 = !DILocation(line: 700, column: 9, scope: !3070)
!3787 = distinct !{!3787, !3745, !3788, !1393}
!3788 = !DILocation(line: 705, column: 9, scope: !3071)
!3789 = !DILocation(line: 706, column: 15, scope: !3079)
!3790 = !DILocation(line: 706, column: 21, scope: !3079)
!3791 = !DILocation(line: 706, column: 14, scope: !3072)
!3792 = !DILocation(line: 708, column: 19, scope: !3077)
!3793 = !DILocation(line: 708, column: 18, scope: !3077)
!3794 = !DILocation(line: 708, column: 23, scope: !3076)
!3795 = !DILocation(line: 708, column: 25, scope: !3076)
!3796 = !DILocation(line: 708, column: 31, scope: !3076)
!3797 = !DILocation(line: 708, column: 24, scope: !3076)
!3798 = !DILocation(line: 708, column: 13, scope: !3077)
!3799 = !DILocation(line: 710, column: 17, scope: !3075)
!3800 = !DILocation(line: 710, column: 21, scope: !3075)
!3801 = !DILocation(line: 710, column: 27, scope: !3075)
!3802 = !DILocation(line: 710, column: 33, scope: !3075)
!3803 = !DILocation(line: 710, column: 43, scope: !3075)
!3804 = !DILocation(line: 710, column: 49, scope: !3075)
!3805 = !DILocation(line: 710, column: 57, scope: !3075)
!3806 = !DILocation(line: 710, column: 62, scope: !3075)
!3807 = !DILocation(line: 711, column: 17, scope: !3075)
!3808 = !DILocation(line: 711, column: 26, scope: !3075)
!3809 = !DILocation(line: 711, column: 32, scope: !3075)
!3810 = !DILocation(line: 711, column: 38, scope: !3075)
!3811 = !DILocation(line: 711, column: 47, scope: !3075)
!3812 = !DILocation(line: 711, column: 52, scope: !3075)
!3813 = !DILocation(line: 711, column: 51, scope: !3075)
!3814 = !DILocation(line: 711, column: 45, scope: !3075)
!3815 = !DILocation(line: 712, column: 35, scope: !3075)
!3816 = !DILocation(line: 712, column: 58, scope: !3075)
!3817 = !DILocation(line: 712, column: 63, scope: !3075)
!3818 = !DILocation(line: 712, column: 67, scope: !3075)
!3819 = !DILocation(line: 712, column: 73, scope: !3075)
!3820 = !DILocation(line: 712, column: 81, scope: !3075)
!3821 = !DILocation(line: 712, column: 82, scope: !3075)
!3822 = !DILocation(line: 712, column: 80, scope: !3075)
!3823 = !DILocation(line: 712, column: 47, scope: !3075)
!3824 = !DILocation(line: 712, column: 99, scope: !3075)
!3825 = !DILocation(line: 712, column: 104, scope: !3075)
!3826 = !DILocation(line: 712, column: 108, scope: !3075)
!3827 = !DILocation(line: 712, column: 114, scope: !3075)
!3828 = !DILocation(line: 712, column: 122, scope: !3075)
!3829 = !DILocation(line: 712, column: 123, scope: !3075)
!3830 = !DILocation(line: 712, column: 121, scope: !3075)
!3831 = !DILocation(line: 712, column: 88, scope: !3075)
!3832 = !DILocation(line: 712, column: 17, scope: !3075)
!3833 = !DILocation(line: 712, column: 23, scope: !3075)
!3834 = !DILocation(line: 712, column: 30, scope: !3075)
!3835 = !DILocation(line: 712, column: 33, scope: !3075)
!3836 = !DILocation(line: 713, column: 22, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3075, file: !2, line: 713, column: 22)
!3838 = !DILocation(line: 713, column: 28, scope: !3837)
!3839 = !DILocation(line: 713, column: 37, scope: !3837)
!3840 = !DILocation(line: 713, column: 42, scope: !3837)
!3841 = !DILocation(line: 713, column: 48, scope: !3837)
!3842 = !DILocation(line: 713, column: 55, scope: !3837)
!3843 = !DILocation(line: 713, column: 57, scope: !3837)
!3844 = !DILocation(line: 713, column: 22, scope: !3075)
!3845 = !DILocation(line: 713, column: 63, scope: !3837)
!3846 = !DILocation(line: 713, column: 69, scope: !3837)
!3847 = !DILocation(line: 713, column: 76, scope: !3837)
!3848 = !DILocation(line: 713, column: 79, scope: !3837)
!3849 = !DILocation(line: 714, column: 13, scope: !3076)
!3850 = !DILocation(line: 714, column: 13, scope: !3075)
!3851 = !DILocation(line: 708, column: 42, scope: !3076)
!3852 = !DILocation(line: 708, column: 13, scope: !3076)
!3853 = distinct !{!3853, !3798, !3854, !1393}
!3854 = !DILocation(line: 714, column: 13, scope: !3077)
!3855 = !DILocation(line: 715, column: 9, scope: !3078)
!3856 = !DILocation(line: 716, column: 15, scope: !3084)
!3857 = !DILocation(line: 716, column: 14, scope: !3084)
!3858 = !DILocation(line: 716, column: 19, scope: !3083)
!3859 = !DILocation(line: 716, column: 21, scope: !3083)
!3860 = !DILocation(line: 716, column: 27, scope: !3083)
!3861 = !DILocation(line: 716, column: 20, scope: !3083)
!3862 = !DILocation(line: 716, column: 9, scope: !3084)
!3863 = !DILocation(line: 718, column: 13, scope: !3082)
!3864 = !DILocation(line: 718, column: 17, scope: !3082)
!3865 = !DILocation(line: 718, column: 23, scope: !3082)
!3866 = !DILocation(line: 718, column: 29, scope: !3082)
!3867 = !DILocation(line: 718, column: 43, scope: !3082)
!3868 = !DILocation(line: 718, column: 47, scope: !3082)
!3869 = !DILocation(line: 718, column: 53, scope: !3082)
!3870 = !DILocation(line: 719, column: 19, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3082, file: !2, line: 719, column: 18)
!3872 = !DILocation(line: 719, column: 25, scope: !3871)
!3873 = !DILocation(line: 719, column: 33, scope: !3871)
!3874 = !DILocation(line: 719, column: 18, scope: !3082)
!3875 = !DILocation(line: 719, column: 47, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3871, file: !2, line: 719, column: 38)
!3877 = !DILocation(line: 719, column: 44, scope: !3876)
!3878 = !DILocation(line: 719, column: 52, scope: !3876)
!3879 = !DILocation(line: 720, column: 19, scope: !3088)
!3880 = !DILocation(line: 720, column: 18, scope: !3088)
!3881 = !DILocation(line: 720, column: 23, scope: !3087)
!3882 = !DILocation(line: 720, column: 25, scope: !3087)
!3883 = !DILocation(line: 720, column: 24, scope: !3087)
!3884 = !DILocation(line: 720, column: 13, scope: !3088)
!3885 = !DILocation(line: 722, column: 23, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3086, file: !2, line: 722, column: 22)
!3887 = !DILocation(line: 722, column: 29, scope: !3886)
!3888 = !DILocation(line: 722, column: 36, scope: !3886)
!3889 = !DILocation(line: 722, column: 22, scope: !3086)
!3890 = !DILocation(line: 722, column: 46, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3886, file: !2, line: 722, column: 41)
!3892 = !DILocation(line: 722, column: 50, scope: !3891)
!3893 = !DILocation(line: 724, column: 17, scope: !3086)
!3894 = !DILocation(line: 724, column: 24, scope: !3086)
!3895 = !DILocation(line: 724, column: 30, scope: !3086)
!3896 = !DILocation(line: 724, column: 36, scope: !3086)
!3897 = !DILocation(line: 724, column: 45, scope: !3086)
!3898 = !DILocation(line: 724, column: 46, scope: !3086)
!3899 = !DILocation(line: 724, column: 52, scope: !3086)
!3900 = !DILocation(line: 724, column: 58, scope: !3086)
!3901 = !DILocation(line: 724, column: 66, scope: !3086)
!3902 = !DILocation(line: 724, column: 67, scope: !3086)
!3903 = !DILocation(line: 724, column: 50, scope: !3086)
!3904 = !DILocation(line: 725, column: 22, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3086, file: !2, line: 725, column: 22)
!3906 = !DILocation(line: 725, column: 28, scope: !3905)
!3907 = !DILocation(line: 725, column: 34, scope: !3905)
!3908 = !DILocation(line: 725, column: 43, scope: !3905)
!3909 = !DILocation(line: 725, column: 44, scope: !3905)
!3910 = !DILocation(line: 725, column: 46, scope: !3905)
!3911 = !DILocation(line: 725, column: 52, scope: !3905)
!3912 = !DILocation(line: 725, column: 58, scope: !3905)
!3913 = !DILocation(line: 725, column: 66, scope: !3905)
!3914 = !DILocation(line: 725, column: 67, scope: !3905)
!3915 = !DILocation(line: 725, column: 69, scope: !3905)
!3916 = !DILocation(line: 725, column: 50, scope: !3905)
!3917 = !DILocation(line: 725, column: 26, scope: !3905)
!3918 = !DILocation(line: 725, column: 22, scope: !3086)
!3919 = !DILocation(line: 725, column: 81, scope: !3905)
!3920 = !DILocation(line: 725, column: 87, scope: !3905)
!3921 = !DILocation(line: 725, column: 96, scope: !3905)
!3922 = !DILocation(line: 725, column: 97, scope: !3905)
!3923 = !DILocation(line: 725, column: 99, scope: !3905)
!3924 = !DILocation(line: 725, column: 105, scope: !3905)
!3925 = !DILocation(line: 725, column: 111, scope: !3905)
!3926 = !DILocation(line: 725, column: 119, scope: !3905)
!3927 = !DILocation(line: 725, column: 120, scope: !3905)
!3928 = !DILocation(line: 725, column: 122, scope: !3905)
!3929 = !DILocation(line: 725, column: 103, scope: !3905)
!3930 = !DILocation(line: 725, column: 79, scope: !3905)
!3931 = !DILocation(line: 725, column: 75, scope: !3905)
!3932 = !DILocation(line: 726, column: 22, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3086, file: !2, line: 726, column: 22)
!3934 = !DILocation(line: 726, column: 28, scope: !3933)
!3935 = !DILocation(line: 726, column: 34, scope: !3933)
!3936 = !DILocation(line: 726, column: 43, scope: !3933)
!3937 = !DILocation(line: 726, column: 44, scope: !3933)
!3938 = !DILocation(line: 726, column: 46, scope: !3933)
!3939 = !DILocation(line: 726, column: 52, scope: !3933)
!3940 = !DILocation(line: 726, column: 58, scope: !3933)
!3941 = !DILocation(line: 726, column: 66, scope: !3933)
!3942 = !DILocation(line: 726, column: 67, scope: !3933)
!3943 = !DILocation(line: 726, column: 69, scope: !3933)
!3944 = !DILocation(line: 726, column: 50, scope: !3933)
!3945 = !DILocation(line: 726, column: 26, scope: !3933)
!3946 = !DILocation(line: 726, column: 22, scope: !3086)
!3947 = !DILocation(line: 726, column: 81, scope: !3933)
!3948 = !DILocation(line: 726, column: 87, scope: !3933)
!3949 = !DILocation(line: 726, column: 96, scope: !3933)
!3950 = !DILocation(line: 726, column: 97, scope: !3933)
!3951 = !DILocation(line: 726, column: 99, scope: !3933)
!3952 = !DILocation(line: 726, column: 105, scope: !3933)
!3953 = !DILocation(line: 726, column: 111, scope: !3933)
!3954 = !DILocation(line: 726, column: 119, scope: !3933)
!3955 = !DILocation(line: 726, column: 120, scope: !3933)
!3956 = !DILocation(line: 726, column: 122, scope: !3933)
!3957 = !DILocation(line: 726, column: 103, scope: !3933)
!3958 = !DILocation(line: 726, column: 79, scope: !3933)
!3959 = !DILocation(line: 726, column: 75, scope: !3933)
!3960 = !DILocation(line: 727, column: 37, scope: !3086)
!3961 = !DILocation(line: 727, column: 17, scope: !3086)
!3962 = !DILocation(line: 727, column: 23, scope: !3086)
!3963 = !DILocation(line: 727, column: 29, scope: !3086)
!3964 = !DILocation(line: 727, column: 34, scope: !3086)
!3965 = !DILocation(line: 729, column: 22, scope: !3091)
!3966 = !DILocation(line: 729, column: 28, scope: !3091)
!3967 = !DILocation(line: 729, column: 22, scope: !3086)
!3968 = !DILocation(line: 731, column: 21, scope: !3090)
!3969 = !DILocation(line: 731, column: 25, scope: !3090)
!3970 = !DILocation(line: 731, column: 33, scope: !3090)
!3971 = !DILocation(line: 731, column: 39, scope: !3090)
!3972 = !DILocation(line: 731, column: 47, scope: !3090)
!3973 = !DILocation(line: 731, column: 52, scope: !3090)
!3974 = !DILocation(line: 731, column: 58, scope: !3090)
!3975 = !DILocation(line: 731, column: 65, scope: !3090)
!3976 = !DILocation(line: 731, column: 50, scope: !3090)
!3977 = !DILocation(line: 732, column: 52, scope: !3090)
!3978 = !DILocation(line: 732, column: 44, scope: !3090)
!3979 = !DILocation(line: 732, column: 21, scope: !3090)
!3980 = !DILocation(line: 732, column: 27, scope: !3090)
!3981 = !DILocation(line: 732, column: 36, scope: !3090)
!3982 = !DILocation(line: 732, column: 41, scope: !3090)
!3983 = !DILocation(line: 733, column: 17, scope: !3091)
!3984 = !DILocation(line: 733, column: 17, scope: !3090)
!3985 = !DILocation(line: 734, column: 17, scope: !3086)
!3986 = !DILocation(line: 734, column: 23, scope: !3086)
!3987 = !DILocation(line: 734, column: 28, scope: !3086)
!3988 = !DILocation(line: 734, column: 32, scope: !3086)
!3989 = !DILocation(line: 735, column: 20, scope: !3086)
!3990 = !DILocation(line: 736, column: 13, scope: !3087)
!3991 = !DILocation(line: 736, column: 13, scope: !3086)
!3992 = !DILocation(line: 720, column: 31, scope: !3087)
!3993 = !DILocation(line: 720, column: 13, scope: !3087)
!3994 = distinct !{!3994, !3884, !3995, !1393}
!3995 = !DILocation(line: 736, column: 13, scope: !3088)
!3996 = !DILocation(line: 737, column: 9, scope: !3083)
!3997 = !DILocation(line: 737, column: 9, scope: !3082)
!3998 = !DILocation(line: 716, column: 39, scope: !3083)
!3999 = !DILocation(line: 716, column: 9, scope: !3083)
!4000 = distinct !{!4000, !3862, !4001, !1393}
!4001 = !DILocation(line: 737, column: 9, scope: !3084)
!4002 = !DILocation(line: 739, column: 1, scope: !2996)
!4003 = !DISubprogram(name: "fprintf", scope: !1979, file: !1979, line: 350, type: !4004, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{!17, !4006, !1871, null}
!4006 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !573)
!4007 = distinct !DISubprogram(name: "report", scope: !2, file: !2, line: 793, type: !1804, scopeLine: 794, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !4008)
!4008 = !{!4009, !4010, !4011, !4014, !4018, !4019, !4022, !4023, !4024, !4028, !4029, !4033, !4036, !4037, !4038, !4042, !4043, !4047, !4048, !4050, !4051, !4052, !4053, !4054, !4055, !4059, !4063}
!4009 = !DILocalVariable(name: "args", arg: 1, scope: !4007, file: !2, line: 793, type: !113)
!4010 = !DILocalVariable(name: "trim", scope: !4007, file: !2, line: 810, type: !17)
!4011 = !DILocalVariable(name: "i", scope: !4012, file: !2, line: 819, type: !17)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !2, line: 818, column: 5)
!4013 = distinct !DILexicalBlock(scope: !4007, file: !2, line: 817, column: 10)
!4014 = !DILocalVariable(name: "iqry", scope: !4015, file: !2, line: 822, type: !17)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !2, line: 821, column: 9)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !2, line: 820, column: 9)
!4017 = distinct !DILexicalBlock(scope: !4012, file: !2, line: 820, column: 9)
!4018 = !DILocalVariable(name: "igt", scope: !4015, file: !2, line: 823, type: !17)
!4019 = !DILocalVariable(name: "i", scope: !4020, file: !2, line: 846, type: !17)
!4020 = distinct !DILexicalBlock(scope: !4021, file: !2, line: 845, column: 5)
!4021 = distinct !DILexicalBlock(scope: !4013, file: !2, line: 844, column: 15)
!4022 = !DILocalVariable(name: "j", scope: !4020, file: !2, line: 846, type: !17)
!4023 = !DILocalVariable(name: "idx", scope: !4020, file: !2, line: 846, type: !17)
!4024 = !DILocalVariable(name: "iqry", scope: !4025, file: !2, line: 849, type: !17)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !2, line: 848, column: 9)
!4026 = distinct !DILexicalBlock(scope: !4027, file: !2, line: 847, column: 9)
!4027 = distinct !DILexicalBlock(scope: !4020, file: !2, line: 847, column: 9)
!4028 = !DILocalVariable(name: "ngt", scope: !4025, file: !2, line: 850, type: !17)
!4029 = !DILocalVariable(name: "igt", scope: !4030, file: !2, line: 853, type: !17)
!4030 = distinct !DILexicalBlock(scope: !4031, file: !2, line: 852, column: 13)
!4031 = distinct !DILexicalBlock(scope: !4032, file: !2, line: 851, column: 13)
!4032 = distinct !DILexicalBlock(scope: !4025, file: !2, line: 851, column: 13)
!4033 = !DILocalVariable(name: "arr", scope: !4034, file: !2, line: 878, type: !662)
!4034 = distinct !DILexicalBlock(scope: !4035, file: !2, line: 877, column: 5)
!4035 = distinct !DILexicalBlock(scope: !4021, file: !2, line: 876, column: 15)
!4036 = !DILocalVariable(name: "i", scope: !4034, file: !2, line: 879, type: !17)
!4037 = !DILocalVariable(name: "j", scope: !4034, file: !2, line: 879, type: !17)
!4038 = !DILocalVariable(name: "idx", scope: !4039, file: !2, line: 882, type: !17)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !2, line: 881, column: 9)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !2, line: 880, column: 9)
!4041 = distinct !DILexicalBlock(scope: !4034, file: !2, line: 880, column: 9)
!4042 = !DILocalVariable(name: "iqry", scope: !4039, file: !2, line: 896, type: !17)
!4043 = !DILocalVariable(name: "idx", scope: !4044, file: !2, line: 899, type: !17)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !2, line: 898, column: 13)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !2, line: 897, column: 13)
!4046 = distinct !DILexicalBlock(scope: !4039, file: !2, line: 897, column: 13)
!4047 = !DILocalVariable(name: "igt", scope: !4044, file: !2, line: 900, type: !17)
!4048 = !DILocalVariable(name: "narr", scope: !4049, file: !2, line: 925, type: !17)
!4049 = distinct !DILexicalBlock(scope: !4035, file: !2, line: 924, column: 5)
!4050 = !DILocalVariable(name: "arr", scope: !4049, file: !2, line: 926, type: !662)
!4051 = !DILocalVariable(name: "i", scope: !4049, file: !2, line: 927, type: !17)
!4052 = !DILocalVariable(name: "j", scope: !4049, file: !2, line: 927, type: !17)
!4053 = !DILocalVariable(name: "k", scope: !4049, file: !2, line: 927, type: !17)
!4054 = !DILocalVariable(name: "idx", scope: !4049, file: !2, line: 927, type: !17)
!4055 = !DILocalVariable(name: "iqry", scope: !4056, file: !2, line: 958, type: !17)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !2, line: 929, column: 9)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !2, line: 928, column: 9)
!4058 = distinct !DILexicalBlock(scope: !4049, file: !2, line: 928, column: 9)
!4059 = !DILocalVariable(name: "idx", scope: !4060, file: !2, line: 962, type: !17)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !2, line: 960, column: 13)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !2, line: 959, column: 13)
!4062 = distinct !DILexicalBlock(scope: !4056, file: !2, line: 959, column: 13)
!4063 = !DILocalVariable(name: "igt", scope: !4060, file: !2, line: 963, type: !17)
!4064 = !DILocation(line: 793, column: 28, scope: !4007)
!4065 = !DILocation(line: 795, column: 13, scope: !4007)
!4066 = !DILocation(line: 795, column: 19, scope: !4007)
!4067 = !DILocation(line: 795, column: 51, scope: !4007)
!4068 = !DILocation(line: 795, column: 57, scope: !4007)
!4069 = !DILocation(line: 795, column: 5, scope: !4007)
!4070 = !DILocation(line: 796, column: 13, scope: !4007)
!4071 = !DILocation(line: 796, column: 19, scope: !4007)
!4072 = !DILocation(line: 796, column: 59, scope: !4007)
!4073 = !DILocation(line: 796, column: 65, scope: !4007)
!4074 = !DILocation(line: 796, column: 5, scope: !4007)
!4075 = !DILocation(line: 797, column: 13, scope: !4007)
!4076 = !DILocation(line: 797, column: 19, scope: !4007)
!4077 = !DILocation(line: 797, column: 63, scope: !4007)
!4078 = !DILocation(line: 797, column: 69, scope: !4007)
!4079 = !DILocation(line: 797, column: 5, scope: !4007)
!4080 = !DILocation(line: 798, column: 13, scope: !4007)
!4081 = !DILocation(line: 798, column: 19, scope: !4007)
!4082 = !DILocation(line: 798, column: 62, scope: !4007)
!4083 = !DILocation(line: 798, column: 68, scope: !4007)
!4084 = !DILocation(line: 798, column: 5, scope: !4007)
!4085 = !DILocation(line: 799, column: 13, scope: !4007)
!4086 = !DILocation(line: 799, column: 19, scope: !4007)
!4087 = !DILocation(line: 799, column: 58, scope: !4007)
!4088 = !DILocation(line: 799, column: 64, scope: !4007)
!4089 = !{!1241, !1224, i64 2572}
!4090 = !DILocation(line: 799, column: 5, scope: !4007)
!4091 = !DILocation(line: 800, column: 13, scope: !4007)
!4092 = !DILocation(line: 800, column: 19, scope: !4007)
!4093 = !DILocation(line: 800, column: 65, scope: !4007)
!4094 = !DILocation(line: 800, column: 71, scope: !4007)
!4095 = !{!1241, !1224, i64 2576}
!4096 = !DILocation(line: 800, column: 5, scope: !4007)
!4097 = !DILocation(line: 801, column: 13, scope: !4007)
!4098 = !DILocation(line: 801, column: 19, scope: !4007)
!4099 = !DILocation(line: 801, column: 65, scope: !4007)
!4100 = !DILocation(line: 801, column: 71, scope: !4007)
!4101 = !{!1241, !1224, i64 2580}
!4102 = !DILocation(line: 801, column: 5, scope: !4007)
!4103 = !DILocation(line: 802, column: 13, scope: !4007)
!4104 = !DILocation(line: 802, column: 19, scope: !4007)
!4105 = !DILocation(line: 802, column: 5, scope: !4007)
!4106 = !DILocation(line: 803, column: 13, scope: !4007)
!4107 = !DILocation(line: 803, column: 19, scope: !4007)
!4108 = !DILocation(line: 803, column: 5, scope: !4007)
!4109 = !DILocation(line: 804, column: 13, scope: !4007)
!4110 = !DILocation(line: 804, column: 19, scope: !4007)
!4111 = !DILocation(line: 804, column: 5, scope: !4007)
!4112 = !DILocation(line: 805, column: 13, scope: !4007)
!4113 = !DILocation(line: 805, column: 19, scope: !4007)
!4114 = !DILocation(line: 805, column: 5, scope: !4007)
!4115 = !DILocation(line: 806, column: 13, scope: !4007)
!4116 = !DILocation(line: 806, column: 19, scope: !4007)
!4117 = !DILocation(line: 806, column: 5, scope: !4007)
!4118 = !DILocation(line: 807, column: 13, scope: !4007)
!4119 = !DILocation(line: 807, column: 19, scope: !4007)
!4120 = !DILocation(line: 807, column: 5, scope: !4007)
!4121 = !DILocation(line: 808, column: 13, scope: !4007)
!4122 = !DILocation(line: 808, column: 19, scope: !4007)
!4123 = !DILocation(line: 808, column: 5, scope: !4007)
!4124 = !DILocation(line: 810, column: 5, scope: !4007)
!4125 = !DILocation(line: 810, column: 9, scope: !4007)
!4126 = !DILocation(line: 810, column: 16, scope: !4007)
!4127 = !DILocation(line: 810, column: 22, scope: !4007)
!4128 = !DILocation(line: 811, column: 11, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4007, file: !2, line: 811, column: 10)
!4130 = !DILocation(line: 811, column: 17, scope: !4129)
!4131 = !DILocation(line: 811, column: 10, scope: !4007)
!4132 = !DILocation(line: 813, column: 15, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !2, line: 813, column: 14)
!4134 = distinct !DILexicalBlock(scope: !4129, file: !2, line: 812, column: 5)
!4135 = !DILocation(line: 813, column: 21, scope: !4133)
!4136 = !DILocation(line: 813, column: 30, scope: !4133)
!4137 = !DILocation(line: 813, column: 33, scope: !4133)
!4138 = !DILocation(line: 813, column: 39, scope: !4133)
!4139 = !DILocation(line: 813, column: 52, scope: !4133)
!4140 = !DILocation(line: 813, column: 58, scope: !4133)
!4141 = !DILocation(line: 813, column: 49, scope: !4133)
!4142 = !DILocation(line: 813, column: 14, scope: !4134)
!4143 = !DILocation(line: 813, column: 70, scope: !4133)
!4144 = !DILocation(line: 813, column: 65, scope: !4133)
!4145 = !DILocation(line: 814, column: 14, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4134, file: !2, line: 814, column: 14)
!4147 = !DILocation(line: 814, column: 20, scope: !4146)
!4148 = !DILocation(line: 814, column: 29, scope: !4146)
!4149 = !DILocation(line: 814, column: 32, scope: !4146)
!4150 = !DILocation(line: 814, column: 38, scope: !4146)
!4151 = !DILocation(line: 814, column: 50, scope: !4146)
!4152 = !DILocation(line: 814, column: 56, scope: !4146)
!4153 = !DILocation(line: 814, column: 47, scope: !4146)
!4154 = !DILocation(line: 814, column: 14, scope: !4134)
!4155 = !DILocation(line: 814, column: 69, scope: !4146)
!4156 = !DILocation(line: 814, column: 64, scope: !4146)
!4157 = !DILocation(line: 815, column: 5, scope: !4134)
!4158 = !DILocation(line: 817, column: 10, scope: !4013)
!4159 = !DILocation(line: 817, column: 16, scope: !4013)
!4160 = !DILocation(line: 817, column: 10, scope: !4007)
!4161 = !DILocation(line: 819, column: 9, scope: !4012)
!4162 = !DILocation(line: 819, column: 13, scope: !4012)
!4163 = !DILocation(line: 820, column: 15, scope: !4017)
!4164 = !DILocation(line: 820, column: 14, scope: !4017)
!4165 = !DILocation(line: 820, column: 19, scope: !4016)
!4166 = !DILocation(line: 820, column: 21, scope: !4016)
!4167 = !DILocation(line: 820, column: 27, scope: !4016)
!4168 = !DILocation(line: 820, column: 20, scope: !4016)
!4169 = !DILocation(line: 820, column: 9, scope: !4017)
!4170 = !DILocation(line: 822, column: 13, scope: !4015)
!4171 = !DILocation(line: 822, column: 17, scope: !4015)
!4172 = !DILocation(line: 822, column: 24, scope: !4015)
!4173 = !DILocation(line: 822, column: 30, scope: !4015)
!4174 = !DILocation(line: 822, column: 36, scope: !4015)
!4175 = !DILocation(line: 822, column: 39, scope: !4015)
!4176 = !DILocation(line: 823, column: 13, scope: !4015)
!4177 = !DILocation(line: 823, column: 17, scope: !4015)
!4178 = !DILocation(line: 823, column: 24, scope: !4015)
!4179 = !DILocation(line: 823, column: 30, scope: !4015)
!4180 = !DILocation(line: 823, column: 36, scope: !4015)
!4181 = !DILocation(line: 823, column: 39, scope: !4015)
!4182 = !DILocation(line: 824, column: 18, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4015, file: !2, line: 824, column: 18)
!4184 = !DILocation(line: 824, column: 24, scope: !4183)
!4185 = !DILocation(line: 824, column: 18, scope: !4015)
!4186 = !DILocation(line: 826, column: 25, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4183, file: !2, line: 825, column: 13)
!4188 = !DILocation(line: 826, column: 31, scope: !4187)
!4189 = !DILocation(line: 827, column: 25, scope: !4187)
!4190 = !DILocation(line: 827, column: 31, scope: !4187)
!4191 = !DILocation(line: 827, column: 40, scope: !4187)
!4192 = !{!4193, !1229, i64 64}
!4193 = !{!"bcf_hdr_t", !1225, i64 0, !1225, i64 16, !1225, i64 40, !1229, i64 64, !1229, i64 72, !1224, i64 80, !1224, i64 84, !1224, i64 88, !1225, i64 96, !1224, i64 112, !1229, i64 120, !2073, i64 128, !1225, i64 152}
!4194 = !DILocation(line: 827, column: 48, scope: !4187)
!4195 = !DILocation(line: 828, column: 25, scope: !4187)
!4196 = !DILocation(line: 828, column: 31, scope: !4187)
!4197 = !DILocation(line: 828, column: 38, scope: !4187)
!4198 = !DILocation(line: 828, column: 44, scope: !4187)
!4199 = !DILocation(line: 828, column: 52, scope: !4187)
!4200 = !DILocation(line: 828, column: 60, scope: !4187)
!4201 = !DILocation(line: 828, column: 65, scope: !4187)
!4202 = !DILocation(line: 828, column: 71, scope: !4187)
!4203 = !DILocation(line: 828, column: 80, scope: !4187)
!4204 = !DILocation(line: 828, column: 88, scope: !4187)
!4205 = !DILocation(line: 829, column: 25, scope: !4187)
!4206 = !DILocation(line: 829, column: 31, scope: !4187)
!4207 = !DILocation(line: 829, column: 37, scope: !4187)
!4208 = !DILocation(line: 830, column: 25, scope: !4187)
!4209 = !DILocation(line: 830, column: 31, scope: !4187)
!4210 = !DILocation(line: 830, column: 47, scope: !4187)
!4211 = !DILocation(line: 830, column: 53, scope: !4187)
!4212 = !DILocation(line: 830, column: 62, scope: !4187)
!4213 = !DILocation(line: 831, column: 25, scope: !4187)
!4214 = !DILocation(line: 831, column: 31, scope: !4187)
!4215 = !DILocation(line: 831, column: 36, scope: !4187)
!4216 = !DILocation(line: 826, column: 17, scope: !4187)
!4217 = !DILocation(line: 832, column: 13, scope: !4187)
!4218 = !DILocation(line: 835, column: 25, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4183, file: !2, line: 834, column: 13)
!4220 = !DILocation(line: 835, column: 31, scope: !4219)
!4221 = !DILocation(line: 836, column: 25, scope: !4219)
!4222 = !DILocation(line: 836, column: 31, scope: !4219)
!4223 = !DILocation(line: 836, column: 40, scope: !4219)
!4224 = !DILocation(line: 836, column: 48, scope: !4219)
!4225 = !DILocation(line: 837, column: 25, scope: !4219)
!4226 = !DILocation(line: 837, column: 31, scope: !4219)
!4227 = !DILocation(line: 837, column: 38, scope: !4219)
!4228 = !DILocation(line: 837, column: 44, scope: !4219)
!4229 = !DILocation(line: 837, column: 52, scope: !4219)
!4230 = !DILocation(line: 837, column: 60, scope: !4219)
!4231 = !DILocation(line: 837, column: 65, scope: !4219)
!4232 = !DILocation(line: 837, column: 71, scope: !4219)
!4233 = !DILocation(line: 837, column: 80, scope: !4219)
!4234 = !DILocation(line: 837, column: 88, scope: !4219)
!4235 = !DILocation(line: 838, column: 25, scope: !4219)
!4236 = !DILocation(line: 838, column: 31, scope: !4219)
!4237 = !DILocation(line: 838, column: 37, scope: !4219)
!4238 = !DILocation(line: 839, column: 25, scope: !4219)
!4239 = !DILocation(line: 839, column: 31, scope: !4219)
!4240 = !DILocation(line: 839, column: 47, scope: !4219)
!4241 = !DILocation(line: 839, column: 53, scope: !4219)
!4242 = !DILocation(line: 839, column: 62, scope: !4219)
!4243 = !DILocation(line: 840, column: 25, scope: !4219)
!4244 = !DILocation(line: 840, column: 31, scope: !4219)
!4245 = !DILocation(line: 840, column: 36, scope: !4219)
!4246 = !DILocation(line: 835, column: 17, scope: !4219)
!4247 = !DILocation(line: 842, column: 9, scope: !4016)
!4248 = !DILocation(line: 842, column: 9, scope: !4015)
!4249 = !DILocation(line: 820, column: 36, scope: !4016)
!4250 = !DILocation(line: 820, column: 9, scope: !4016)
!4251 = distinct !{!4251, !4169, !4252, !1393}
!4252 = !DILocation(line: 842, column: 9, scope: !4017)
!4253 = !DILocation(line: 843, column: 5, scope: !4013)
!4254 = !DILocation(line: 843, column: 5, scope: !4012)
!4255 = !DILocation(line: 844, column: 16, scope: !4021)
!4256 = !DILocation(line: 844, column: 15, scope: !4013)
!4257 = !DILocation(line: 846, column: 9, scope: !4020)
!4258 = !DILocation(line: 846, column: 13, scope: !4020)
!4259 = !DILocation(line: 846, column: 15, scope: !4020)
!4260 = !DILocation(line: 846, column: 17, scope: !4020)
!4261 = !DILocation(line: 847, column: 15, scope: !4027)
!4262 = !DILocation(line: 847, column: 14, scope: !4027)
!4263 = !DILocation(line: 847, column: 19, scope: !4026)
!4264 = !DILocation(line: 847, column: 21, scope: !4026)
!4265 = !DILocation(line: 847, column: 27, scope: !4026)
!4266 = !DILocation(line: 847, column: 20, scope: !4026)
!4267 = !DILocation(line: 847, column: 9, scope: !4027)
!4268 = !DILocation(line: 849, column: 13, scope: !4025)
!4269 = !DILocation(line: 849, column: 17, scope: !4025)
!4270 = !DILocation(line: 849, column: 24, scope: !4025)
!4271 = !DILocation(line: 849, column: 30, scope: !4025)
!4272 = !DILocation(line: 849, column: 41, scope: !4025)
!4273 = !DILocation(line: 849, column: 47, scope: !4025)
!4274 = !DILocation(line: 849, column: 56, scope: !4025)
!4275 = !DILocation(line: 849, column: 61, scope: !4025)
!4276 = !DILocation(line: 850, column: 13, scope: !4025)
!4277 = !DILocation(line: 850, column: 17, scope: !4025)
!4278 = !DILocation(line: 850, column: 24, scope: !4025)
!4279 = !DILocation(line: 850, column: 30, scope: !4025)
!4280 = !DILocation(line: 850, column: 44, scope: !4025)
!4281 = !DILocation(line: 850, column: 48, scope: !4025)
!4282 = !DILocation(line: 850, column: 54, scope: !4025)
!4283 = !DILocation(line: 851, column: 19, scope: !4032)
!4284 = !DILocation(line: 851, column: 18, scope: !4032)
!4285 = !DILocation(line: 851, column: 23, scope: !4031)
!4286 = !DILocation(line: 851, column: 25, scope: !4031)
!4287 = !DILocation(line: 851, column: 24, scope: !4031)
!4288 = !DILocation(line: 851, column: 13, scope: !4032)
!4289 = !DILocation(line: 853, column: 17, scope: !4030)
!4290 = !DILocation(line: 853, column: 21, scope: !4030)
!4291 = !DILocation(line: 853, column: 27, scope: !4030)
!4292 = !DILocation(line: 853, column: 33, scope: !4030)
!4293 = !DILocation(line: 853, column: 43, scope: !4030)
!4294 = !DILocation(line: 853, column: 49, scope: !4030)
!4295 = !DILocation(line: 853, column: 57, scope: !4030)
!4296 = !DILocation(line: 853, column: 62, scope: !4030)
!4297 = !DILocation(line: 854, column: 22, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4030, file: !2, line: 854, column: 22)
!4299 = !DILocation(line: 854, column: 28, scope: !4298)
!4300 = !DILocation(line: 854, column: 22, scope: !4030)
!4301 = !DILocation(line: 856, column: 29, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4298, file: !2, line: 855, column: 17)
!4303 = !DILocation(line: 856, column: 35, scope: !4302)
!4304 = !DILocation(line: 857, column: 29, scope: !4302)
!4305 = !DILocation(line: 857, column: 35, scope: !4302)
!4306 = !DILocation(line: 857, column: 44, scope: !4302)
!4307 = !DILocation(line: 857, column: 52, scope: !4302)
!4308 = !DILocation(line: 858, column: 29, scope: !4302)
!4309 = !DILocation(line: 858, column: 35, scope: !4302)
!4310 = !DILocation(line: 858, column: 42, scope: !4302)
!4311 = !DILocation(line: 858, column: 48, scope: !4302)
!4312 = !DILocation(line: 858, column: 56, scope: !4302)
!4313 = !DILocation(line: 858, column: 64, scope: !4302)
!4314 = !DILocation(line: 858, column: 69, scope: !4302)
!4315 = !DILocation(line: 858, column: 75, scope: !4302)
!4316 = !DILocation(line: 858, column: 84, scope: !4302)
!4317 = !DILocation(line: 858, column: 92, scope: !4302)
!4318 = !DILocation(line: 859, column: 29, scope: !4302)
!4319 = !DILocation(line: 859, column: 35, scope: !4302)
!4320 = !DILocation(line: 859, column: 41, scope: !4302)
!4321 = !DILocation(line: 860, column: 29, scope: !4302)
!4322 = !DILocation(line: 860, column: 35, scope: !4302)
!4323 = !DILocation(line: 860, column: 51, scope: !4302)
!4324 = !DILocation(line: 860, column: 57, scope: !4302)
!4325 = !DILocation(line: 860, column: 66, scope: !4302)
!4326 = !DILocation(line: 861, column: 29, scope: !4302)
!4327 = !DILocation(line: 861, column: 35, scope: !4302)
!4328 = !DILocation(line: 861, column: 40, scope: !4302)
!4329 = !DILocation(line: 856, column: 21, scope: !4302)
!4330 = !DILocation(line: 862, column: 17, scope: !4302)
!4331 = !DILocation(line: 865, column: 29, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4298, file: !2, line: 864, column: 17)
!4333 = !DILocation(line: 865, column: 35, scope: !4332)
!4334 = !DILocation(line: 866, column: 29, scope: !4332)
!4335 = !DILocation(line: 866, column: 35, scope: !4332)
!4336 = !DILocation(line: 866, column: 44, scope: !4332)
!4337 = !DILocation(line: 866, column: 52, scope: !4332)
!4338 = !DILocation(line: 867, column: 29, scope: !4332)
!4339 = !DILocation(line: 867, column: 35, scope: !4332)
!4340 = !DILocation(line: 867, column: 42, scope: !4332)
!4341 = !DILocation(line: 867, column: 48, scope: !4332)
!4342 = !DILocation(line: 867, column: 56, scope: !4332)
!4343 = !DILocation(line: 867, column: 64, scope: !4332)
!4344 = !DILocation(line: 867, column: 69, scope: !4332)
!4345 = !DILocation(line: 867, column: 75, scope: !4332)
!4346 = !DILocation(line: 867, column: 84, scope: !4332)
!4347 = !DILocation(line: 867, column: 92, scope: !4332)
!4348 = !DILocation(line: 868, column: 29, scope: !4332)
!4349 = !DILocation(line: 868, column: 35, scope: !4332)
!4350 = !DILocation(line: 868, column: 41, scope: !4332)
!4351 = !DILocation(line: 869, column: 29, scope: !4332)
!4352 = !DILocation(line: 869, column: 35, scope: !4332)
!4353 = !DILocation(line: 869, column: 51, scope: !4332)
!4354 = !DILocation(line: 869, column: 57, scope: !4332)
!4355 = !DILocation(line: 869, column: 66, scope: !4332)
!4356 = !DILocation(line: 870, column: 29, scope: !4332)
!4357 = !DILocation(line: 870, column: 35, scope: !4332)
!4358 = !DILocation(line: 870, column: 40, scope: !4332)
!4359 = !DILocation(line: 865, column: 21, scope: !4332)
!4360 = !DILocation(line: 872, column: 20, scope: !4030)
!4361 = !DILocation(line: 873, column: 13, scope: !4031)
!4362 = !DILocation(line: 873, column: 13, scope: !4030)
!4363 = !DILocation(line: 851, column: 31, scope: !4031)
!4364 = !DILocation(line: 851, column: 13, scope: !4031)
!4365 = distinct !{!4365, !4288, !4366, !1393}
!4366 = !DILocation(line: 873, column: 13, scope: !4032)
!4367 = !DILocation(line: 874, column: 9, scope: !4026)
!4368 = !DILocation(line: 874, column: 9, scope: !4025)
!4369 = !DILocation(line: 847, column: 39, scope: !4026)
!4370 = !DILocation(line: 847, column: 9, scope: !4026)
!4371 = distinct !{!4371, !4267, !4372, !1393}
!4372 = !DILocation(line: 874, column: 9, scope: !4027)
!4373 = !DILocation(line: 875, column: 5, scope: !4021)
!4374 = !DILocation(line: 875, column: 5, scope: !4020)
!4375 = !DILocation(line: 876, column: 16, scope: !4035)
!4376 = !DILocation(line: 876, column: 22, scope: !4035)
!4377 = !DILocation(line: 876, column: 15, scope: !4021)
!4378 = !DILocation(line: 878, column: 9, scope: !4034)
!4379 = !DILocation(line: 878, column: 17, scope: !4034)
!4380 = !DILocation(line: 878, column: 52, scope: !4034)
!4381 = !DILocation(line: 878, column: 58, scope: !4034)
!4382 = !DILocation(line: 878, column: 51, scope: !4034)
!4383 = !DILocation(line: 878, column: 32, scope: !4034)
!4384 = !DILocation(line: 879, column: 9, scope: !4034)
!4385 = !DILocation(line: 879, column: 13, scope: !4034)
!4386 = !DILocation(line: 879, column: 15, scope: !4034)
!4387 = !DILocation(line: 880, column: 15, scope: !4041)
!4388 = !DILocation(line: 880, column: 14, scope: !4041)
!4389 = !DILocation(line: 880, column: 19, scope: !4040)
!4390 = !DILocation(line: 880, column: 21, scope: !4040)
!4391 = !DILocation(line: 880, column: 27, scope: !4040)
!4392 = !DILocation(line: 880, column: 20, scope: !4040)
!4393 = !DILocation(line: 880, column: 9, scope: !4041)
!4394 = !DILocation(line: 882, column: 13, scope: !4039)
!4395 = !DILocation(line: 882, column: 17, scope: !4039)
!4396 = !DILocation(line: 882, column: 24, scope: !4039)
!4397 = !DILocation(line: 882, column: 26, scope: !4039)
!4398 = !DILocation(line: 882, column: 32, scope: !4039)
!4399 = !DILocation(line: 882, column: 25, scope: !4039)
!4400 = !DILocation(line: 883, column: 19, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4039, file: !2, line: 883, column: 13)
!4402 = !DILocation(line: 883, column: 18, scope: !4401)
!4403 = !DILocation(line: 883, column: 23, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4401, file: !2, line: 883, column: 13)
!4405 = !DILocation(line: 883, column: 25, scope: !4404)
!4406 = !DILocation(line: 883, column: 31, scope: !4404)
!4407 = !DILocation(line: 883, column: 24, scope: !4404)
!4408 = !DILocation(line: 883, column: 13, scope: !4401)
!4409 = !DILocation(line: 885, column: 22, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !2, line: 885, column: 22)
!4411 = distinct !DILexicalBlock(scope: !4404, file: !2, line: 884, column: 13)
!4412 = !DILocation(line: 885, column: 28, scope: !4410)
!4413 = !DILocation(line: 885, column: 22, scope: !4411)
!4414 = !DILocation(line: 886, column: 35, scope: !4410)
!4415 = !DILocation(line: 886, column: 41, scope: !4410)
!4416 = !DILocation(line: 886, column: 50, scope: !4410)
!4417 = !DILocation(line: 886, column: 34, scope: !4410)
!4418 = !DILocation(line: 886, column: 21, scope: !4410)
!4419 = !DILocation(line: 886, column: 25, scope: !4410)
!4420 = !DILocation(line: 886, column: 28, scope: !4410)
!4421 = !DILocation(line: 886, column: 32, scope: !4410)
!4422 = !{!4423, !1242, i64 8}
!4423 = !{!"", !1224, i64 0, !1224, i64 4, !1242, i64 8}
!4424 = !DILocation(line: 887, column: 27, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4410, file: !2, line: 887, column: 27)
!4426 = !DILocation(line: 887, column: 33, scope: !4425)
!4427 = !DILocation(line: 887, column: 27, scope: !4410)
!4428 = !DILocation(line: 888, column: 34, scope: !4425)
!4429 = !DILocation(line: 888, column: 40, scope: !4425)
!4430 = !DILocation(line: 888, column: 45, scope: !4425)
!4431 = !DILocation(line: 888, column: 60, scope: !4425)
!4432 = !DILocation(line: 888, column: 66, scope: !4425)
!4433 = !DILocation(line: 888, column: 72, scope: !4425)
!4434 = !DILocation(line: 888, column: 52, scope: !4425)
!4435 = !DILocation(line: 888, column: 77, scope: !4425)
!4436 = !DILocation(line: 888, column: 83, scope: !4425)
!4437 = !DILocation(line: 888, column: 88, scope: !4425)
!4438 = !DILocation(line: 888, column: 76, scope: !4425)
!4439 = !DILocation(line: 888, column: 21, scope: !4425)
!4440 = !DILocation(line: 888, column: 25, scope: !4425)
!4441 = !DILocation(line: 888, column: 28, scope: !4425)
!4442 = !DILocation(line: 888, column: 32, scope: !4425)
!4443 = !DILocation(line: 890, column: 34, scope: !4425)
!4444 = !DILocation(line: 890, column: 40, scope: !4425)
!4445 = !DILocation(line: 890, column: 45, scope: !4425)
!4446 = !DILocation(line: 890, column: 52, scope: !4425)
!4447 = !DILocation(line: 890, column: 58, scope: !4425)
!4448 = !DILocation(line: 890, column: 64, scope: !4425)
!4449 = !DILocation(line: 890, column: 69, scope: !4425)
!4450 = !DILocation(line: 890, column: 75, scope: !4425)
!4451 = !DILocation(line: 890, column: 80, scope: !4425)
!4452 = !DILocation(line: 890, column: 68, scope: !4425)
!4453 = !DILocation(line: 890, column: 21, scope: !4425)
!4454 = !DILocation(line: 890, column: 25, scope: !4425)
!4455 = !DILocation(line: 890, column: 28, scope: !4425)
!4456 = !DILocation(line: 890, column: 32, scope: !4425)
!4457 = !DILocation(line: 891, column: 30, scope: !4411)
!4458 = !DILocation(line: 891, column: 17, scope: !4411)
!4459 = !DILocation(line: 891, column: 21, scope: !4411)
!4460 = !DILocation(line: 891, column: 24, scope: !4411)
!4461 = !DILocation(line: 891, column: 28, scope: !4411)
!4462 = !{!4423, !1224, i64 0}
!4463 = !DILocation(line: 892, column: 30, scope: !4411)
!4464 = !DILocation(line: 892, column: 17, scope: !4411)
!4465 = !DILocation(line: 892, column: 21, scope: !4411)
!4466 = !DILocation(line: 892, column: 24, scope: !4411)
!4467 = !DILocation(line: 892, column: 28, scope: !4411)
!4468 = !{!4423, !1224, i64 4}
!4469 = !DILocation(line: 893, column: 20, scope: !4411)
!4470 = !DILocation(line: 894, column: 13, scope: !4411)
!4471 = !DILocation(line: 883, column: 42, scope: !4404)
!4472 = !DILocation(line: 883, column: 13, scope: !4404)
!4473 = distinct !{!4473, !4408, !4474, !1393}
!4474 = !DILocation(line: 894, column: 13, scope: !4401)
!4475 = !DILocation(line: 895, column: 19, scope: !4039)
!4476 = !DILocation(line: 895, column: 24, scope: !4039)
!4477 = !DILocation(line: 895, column: 30, scope: !4039)
!4478 = !DILocation(line: 895, column: 13, scope: !4039)
!4479 = !DILocation(line: 896, column: 13, scope: !4039)
!4480 = !DILocation(line: 896, column: 17, scope: !4039)
!4481 = !DILocation(line: 896, column: 24, scope: !4039)
!4482 = !DILocation(line: 896, column: 30, scope: !4039)
!4483 = !DILocation(line: 896, column: 41, scope: !4039)
!4484 = !DILocation(line: 896, column: 47, scope: !4039)
!4485 = !DILocation(line: 896, column: 56, scope: !4039)
!4486 = !DILocation(line: 896, column: 61, scope: !4039)
!4487 = !DILocation(line: 897, column: 19, scope: !4046)
!4488 = !DILocation(line: 897, column: 18, scope: !4046)
!4489 = !DILocation(line: 897, column: 23, scope: !4045)
!4490 = !DILocation(line: 897, column: 25, scope: !4045)
!4491 = !DILocation(line: 897, column: 31, scope: !4045)
!4492 = !DILocation(line: 897, column: 24, scope: !4045)
!4493 = !DILocation(line: 897, column: 13, scope: !4046)
!4494 = !DILocation(line: 899, column: 17, scope: !4044)
!4495 = !DILocation(line: 899, column: 21, scope: !4044)
!4496 = !DILocation(line: 899, column: 27, scope: !4044)
!4497 = !DILocation(line: 899, column: 31, scope: !4044)
!4498 = !DILocation(line: 899, column: 34, scope: !4044)
!4499 = !DILocation(line: 900, column: 17, scope: !4044)
!4500 = !DILocation(line: 900, column: 21, scope: !4044)
!4501 = !DILocation(line: 900, column: 27, scope: !4044)
!4502 = !DILocation(line: 900, column: 33, scope: !4044)
!4503 = !DILocation(line: 900, column: 43, scope: !4044)
!4504 = !DILocation(line: 900, column: 49, scope: !4044)
!4505 = !DILocation(line: 900, column: 57, scope: !4044)
!4506 = !DILocation(line: 900, column: 61, scope: !4044)
!4507 = !DILocation(line: 900, column: 64, scope: !4044)
!4508 = !DILocation(line: 900, column: 71, scope: !4044)
!4509 = !DILocation(line: 900, column: 75, scope: !4044)
!4510 = !DILocation(line: 900, column: 78, scope: !4044)
!4511 = !DILocation(line: 901, column: 22, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4044, file: !2, line: 901, column: 22)
!4513 = !DILocation(line: 901, column: 28, scope: !4512)
!4514 = !DILocation(line: 901, column: 22, scope: !4044)
!4515 = !DILocation(line: 903, column: 29, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4512, file: !2, line: 902, column: 17)
!4517 = !DILocation(line: 903, column: 35, scope: !4516)
!4518 = !DILocation(line: 904, column: 29, scope: !4516)
!4519 = !DILocation(line: 904, column: 35, scope: !4516)
!4520 = !DILocation(line: 904, column: 44, scope: !4516)
!4521 = !DILocation(line: 904, column: 52, scope: !4516)
!4522 = !DILocation(line: 905, column: 29, scope: !4516)
!4523 = !DILocation(line: 905, column: 35, scope: !4516)
!4524 = !DILocation(line: 905, column: 42, scope: !4516)
!4525 = !DILocation(line: 905, column: 48, scope: !4516)
!4526 = !DILocation(line: 905, column: 56, scope: !4516)
!4527 = !DILocation(line: 905, column: 64, scope: !4516)
!4528 = !DILocation(line: 905, column: 69, scope: !4516)
!4529 = !DILocation(line: 905, column: 75, scope: !4516)
!4530 = !DILocation(line: 905, column: 84, scope: !4516)
!4531 = !DILocation(line: 905, column: 92, scope: !4516)
!4532 = !DILocation(line: 906, column: 29, scope: !4516)
!4533 = !DILocation(line: 906, column: 35, scope: !4516)
!4534 = !DILocation(line: 906, column: 41, scope: !4516)
!4535 = !DILocation(line: 907, column: 29, scope: !4516)
!4536 = !DILocation(line: 907, column: 35, scope: !4516)
!4537 = !DILocation(line: 907, column: 51, scope: !4516)
!4538 = !DILocation(line: 907, column: 57, scope: !4516)
!4539 = !DILocation(line: 907, column: 66, scope: !4516)
!4540 = !DILocation(line: 908, column: 29, scope: !4516)
!4541 = !DILocation(line: 908, column: 35, scope: !4516)
!4542 = !DILocation(line: 908, column: 40, scope: !4516)
!4543 = !DILocation(line: 903, column: 21, scope: !4516)
!4544 = !DILocation(line: 909, column: 17, scope: !4516)
!4545 = !DILocation(line: 912, column: 29, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4512, file: !2, line: 911, column: 17)
!4547 = !DILocation(line: 912, column: 35, scope: !4546)
!4548 = !DILocation(line: 913, column: 29, scope: !4546)
!4549 = !DILocation(line: 913, column: 35, scope: !4546)
!4550 = !DILocation(line: 913, column: 44, scope: !4546)
!4551 = !DILocation(line: 913, column: 52, scope: !4546)
!4552 = !DILocation(line: 914, column: 29, scope: !4546)
!4553 = !DILocation(line: 914, column: 35, scope: !4546)
!4554 = !DILocation(line: 914, column: 42, scope: !4546)
!4555 = !DILocation(line: 914, column: 48, scope: !4546)
!4556 = !DILocation(line: 914, column: 56, scope: !4546)
!4557 = !DILocation(line: 914, column: 64, scope: !4546)
!4558 = !DILocation(line: 914, column: 69, scope: !4546)
!4559 = !DILocation(line: 914, column: 75, scope: !4546)
!4560 = !DILocation(line: 914, column: 84, scope: !4546)
!4561 = !DILocation(line: 914, column: 92, scope: !4546)
!4562 = !DILocation(line: 915, column: 29, scope: !4546)
!4563 = !DILocation(line: 915, column: 35, scope: !4546)
!4564 = !DILocation(line: 915, column: 41, scope: !4546)
!4565 = !DILocation(line: 916, column: 29, scope: !4546)
!4566 = !DILocation(line: 916, column: 35, scope: !4546)
!4567 = !DILocation(line: 916, column: 51, scope: !4546)
!4568 = !DILocation(line: 916, column: 57, scope: !4546)
!4569 = !DILocation(line: 916, column: 66, scope: !4546)
!4570 = !DILocation(line: 917, column: 29, scope: !4546)
!4571 = !DILocation(line: 917, column: 35, scope: !4546)
!4572 = !DILocation(line: 917, column: 40, scope: !4546)
!4573 = !DILocation(line: 912, column: 21, scope: !4546)
!4574 = !DILocation(line: 919, column: 13, scope: !4045)
!4575 = !DILocation(line: 919, column: 13, scope: !4044)
!4576 = !DILocation(line: 897, column: 38, scope: !4045)
!4577 = !DILocation(line: 897, column: 13, scope: !4045)
!4578 = distinct !{!4578, !4493, !4579, !1393}
!4579 = !DILocation(line: 919, column: 13, scope: !4046)
!4580 = !DILocation(line: 920, column: 9, scope: !4040)
!4581 = !DILocation(line: 920, column: 9, scope: !4039)
!4582 = !DILocation(line: 880, column: 39, scope: !4040)
!4583 = !DILocation(line: 880, column: 9, scope: !4040)
!4584 = distinct !{!4584, !4393, !4585, !1393}
!4585 = !DILocation(line: 920, column: 9, scope: !4041)
!4586 = !DILocation(line: 921, column: 14, scope: !4034)
!4587 = !DILocation(line: 921, column: 9, scope: !4034)
!4588 = !DILocation(line: 922, column: 5, scope: !4035)
!4589 = !DILocation(line: 922, column: 5, scope: !4034)
!4590 = !DILocation(line: 925, column: 9, scope: !4049)
!4591 = !DILocation(line: 925, column: 13, scope: !4049)
!4592 = !DILocation(line: 925, column: 20, scope: !4049)
!4593 = !DILocation(line: 925, column: 26, scope: !4049)
!4594 = !DILocation(line: 925, column: 35, scope: !4049)
!4595 = !DILocation(line: 926, column: 9, scope: !4049)
!4596 = !DILocation(line: 926, column: 17, scope: !4049)
!4597 = !DILocation(line: 926, column: 52, scope: !4049)
!4598 = !DILocation(line: 926, column: 51, scope: !4049)
!4599 = !DILocation(line: 926, column: 32, scope: !4049)
!4600 = !DILocation(line: 927, column: 9, scope: !4049)
!4601 = !DILocation(line: 927, column: 13, scope: !4049)
!4602 = !DILocation(line: 927, column: 15, scope: !4049)
!4603 = !DILocation(line: 927, column: 17, scope: !4049)
!4604 = !DILocation(line: 927, column: 19, scope: !4049)
!4605 = !DILocation(line: 928, column: 15, scope: !4058)
!4606 = !DILocation(line: 928, column: 14, scope: !4058)
!4607 = !DILocation(line: 928, column: 19, scope: !4057)
!4608 = !DILocation(line: 928, column: 21, scope: !4057)
!4609 = !DILocation(line: 928, column: 27, scope: !4057)
!4610 = !DILocation(line: 928, column: 20, scope: !4057)
!4611 = !DILocation(line: 928, column: 9, scope: !4058)
!4612 = !DILocation(line: 930, column: 15, scope: !4056)
!4613 = !DILocation(line: 930, column: 26, scope: !4056)
!4614 = !DILocation(line: 930, column: 29, scope: !4056)
!4615 = !DILocation(line: 930, column: 30, scope: !4056)
!4616 = !DILocation(line: 930, column: 27, scope: !4056)
!4617 = !DILocation(line: 930, column: 33, scope: !4056)
!4618 = !DILocation(line: 930, column: 24, scope: !4056)
!4619 = !DILocation(line: 931, column: 19, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4056, file: !2, line: 931, column: 13)
!4621 = !DILocation(line: 931, column: 18, scope: !4620)
!4622 = !DILocation(line: 931, column: 23, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4620, file: !2, line: 931, column: 13)
!4624 = !DILocation(line: 931, column: 25, scope: !4623)
!4625 = !DILocation(line: 931, column: 24, scope: !4623)
!4626 = !DILocation(line: 931, column: 13, scope: !4620)
!4627 = !DILocation(line: 933, column: 22, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !2, line: 933, column: 22)
!4629 = distinct !DILexicalBlock(scope: !4623, file: !2, line: 932, column: 13)
!4630 = !DILocation(line: 933, column: 28, scope: !4628)
!4631 = !DILocation(line: 933, column: 22, scope: !4629)
!4632 = !DILocation(line: 934, column: 35, scope: !4628)
!4633 = !DILocation(line: 934, column: 41, scope: !4628)
!4634 = !DILocation(line: 934, column: 50, scope: !4628)
!4635 = !DILocation(line: 934, column: 34, scope: !4628)
!4636 = !DILocation(line: 934, column: 21, scope: !4628)
!4637 = !DILocation(line: 934, column: 25, scope: !4628)
!4638 = !DILocation(line: 934, column: 28, scope: !4628)
!4639 = !DILocation(line: 934, column: 32, scope: !4628)
!4640 = !DILocation(line: 935, column: 27, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4628, file: !2, line: 935, column: 27)
!4642 = !DILocation(line: 935, column: 33, scope: !4641)
!4643 = !DILocation(line: 935, column: 27, scope: !4628)
!4644 = !DILocation(line: 936, column: 34, scope: !4641)
!4645 = !DILocation(line: 936, column: 40, scope: !4641)
!4646 = !DILocation(line: 936, column: 45, scope: !4641)
!4647 = !DILocation(line: 936, column: 60, scope: !4641)
!4648 = !DILocation(line: 936, column: 66, scope: !4641)
!4649 = !DILocation(line: 936, column: 72, scope: !4641)
!4650 = !DILocation(line: 936, column: 52, scope: !4641)
!4651 = !DILocation(line: 936, column: 77, scope: !4641)
!4652 = !DILocation(line: 936, column: 83, scope: !4641)
!4653 = !DILocation(line: 936, column: 88, scope: !4641)
!4654 = !DILocation(line: 936, column: 76, scope: !4641)
!4655 = !DILocation(line: 936, column: 21, scope: !4641)
!4656 = !DILocation(line: 936, column: 25, scope: !4641)
!4657 = !DILocation(line: 936, column: 28, scope: !4641)
!4658 = !DILocation(line: 936, column: 32, scope: !4641)
!4659 = !DILocation(line: 938, column: 34, scope: !4641)
!4660 = !DILocation(line: 938, column: 40, scope: !4641)
!4661 = !DILocation(line: 938, column: 45, scope: !4641)
!4662 = !DILocation(line: 938, column: 52, scope: !4641)
!4663 = !DILocation(line: 938, column: 58, scope: !4641)
!4664 = !DILocation(line: 938, column: 64, scope: !4641)
!4665 = !DILocation(line: 938, column: 69, scope: !4641)
!4666 = !DILocation(line: 938, column: 75, scope: !4641)
!4667 = !DILocation(line: 938, column: 80, scope: !4641)
!4668 = !DILocation(line: 938, column: 68, scope: !4641)
!4669 = !DILocation(line: 938, column: 21, scope: !4641)
!4670 = !DILocation(line: 938, column: 25, scope: !4641)
!4671 = !DILocation(line: 938, column: 28, scope: !4641)
!4672 = !DILocation(line: 938, column: 32, scope: !4641)
!4673 = !DILocation(line: 939, column: 30, scope: !4629)
!4674 = !DILocation(line: 939, column: 17, scope: !4629)
!4675 = !DILocation(line: 939, column: 21, scope: !4629)
!4676 = !DILocation(line: 939, column: 24, scope: !4629)
!4677 = !DILocation(line: 939, column: 28, scope: !4629)
!4678 = !DILocation(line: 940, column: 30, scope: !4629)
!4679 = !DILocation(line: 940, column: 17, scope: !4629)
!4680 = !DILocation(line: 940, column: 21, scope: !4629)
!4681 = !DILocation(line: 940, column: 24, scope: !4629)
!4682 = !DILocation(line: 940, column: 28, scope: !4629)
!4683 = !DILocation(line: 941, column: 20, scope: !4629)
!4684 = !DILocation(line: 942, column: 18, scope: !4629)
!4685 = !DILocation(line: 943, column: 13, scope: !4629)
!4686 = !DILocation(line: 931, column: 29, scope: !4623)
!4687 = !DILocation(line: 931, column: 13, scope: !4623)
!4688 = distinct !{!4688, !4626, !4689, !1393}
!4689 = !DILocation(line: 943, column: 13, scope: !4620)
!4690 = !DILocation(line: 944, column: 13, scope: !4056)
!4691 = !DILocation(line: 944, column: 20, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !2, line: 944, column: 13)
!4693 = distinct !DILexicalBlock(scope: !4056, file: !2, line: 944, column: 13)
!4694 = !DILocation(line: 944, column: 22, scope: !4692)
!4695 = !DILocation(line: 944, column: 21, scope: !4692)
!4696 = !DILocation(line: 944, column: 13, scope: !4693)
!4697 = !DILocation(line: 946, column: 23, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4692, file: !2, line: 945, column: 13)
!4699 = !DILocation(line: 946, column: 26, scope: !4698)
!4700 = !DILocation(line: 946, column: 27, scope: !4698)
!4701 = !DILocation(line: 946, column: 24, scope: !4698)
!4702 = !DILocation(line: 946, column: 30, scope: !4698)
!4703 = !DILocation(line: 946, column: 35, scope: !4698)
!4704 = !DILocation(line: 946, column: 33, scope: !4698)
!4705 = !DILocation(line: 946, column: 21, scope: !4698)
!4706 = !DILocation(line: 947, column: 22, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4698, file: !2, line: 947, column: 22)
!4708 = !DILocation(line: 947, column: 28, scope: !4707)
!4709 = !DILocation(line: 947, column: 22, scope: !4698)
!4710 = !DILocation(line: 948, column: 35, scope: !4707)
!4711 = !DILocation(line: 948, column: 41, scope: !4707)
!4712 = !DILocation(line: 948, column: 50, scope: !4707)
!4713 = !DILocation(line: 948, column: 34, scope: !4707)
!4714 = !DILocation(line: 948, column: 21, scope: !4707)
!4715 = !DILocation(line: 948, column: 25, scope: !4707)
!4716 = !DILocation(line: 948, column: 28, scope: !4707)
!4717 = !DILocation(line: 948, column: 32, scope: !4707)
!4718 = !DILocation(line: 949, column: 27, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4707, file: !2, line: 949, column: 27)
!4720 = !DILocation(line: 949, column: 33, scope: !4719)
!4721 = !DILocation(line: 949, column: 27, scope: !4707)
!4722 = !DILocation(line: 950, column: 34, scope: !4719)
!4723 = !DILocation(line: 950, column: 40, scope: !4719)
!4724 = !DILocation(line: 950, column: 45, scope: !4719)
!4725 = !DILocation(line: 950, column: 60, scope: !4719)
!4726 = !DILocation(line: 950, column: 66, scope: !4719)
!4727 = !DILocation(line: 950, column: 72, scope: !4719)
!4728 = !DILocation(line: 950, column: 52, scope: !4719)
!4729 = !DILocation(line: 950, column: 77, scope: !4719)
!4730 = !DILocation(line: 950, column: 83, scope: !4719)
!4731 = !DILocation(line: 950, column: 88, scope: !4719)
!4732 = !DILocation(line: 950, column: 76, scope: !4719)
!4733 = !DILocation(line: 950, column: 21, scope: !4719)
!4734 = !DILocation(line: 950, column: 25, scope: !4719)
!4735 = !DILocation(line: 950, column: 28, scope: !4719)
!4736 = !DILocation(line: 950, column: 32, scope: !4719)
!4737 = !DILocation(line: 952, column: 34, scope: !4719)
!4738 = !DILocation(line: 952, column: 40, scope: !4719)
!4739 = !DILocation(line: 952, column: 45, scope: !4719)
!4740 = !DILocation(line: 952, column: 52, scope: !4719)
!4741 = !DILocation(line: 952, column: 58, scope: !4719)
!4742 = !DILocation(line: 952, column: 64, scope: !4719)
!4743 = !DILocation(line: 952, column: 69, scope: !4719)
!4744 = !DILocation(line: 952, column: 75, scope: !4719)
!4745 = !DILocation(line: 952, column: 80, scope: !4719)
!4746 = !DILocation(line: 952, column: 68, scope: !4719)
!4747 = !DILocation(line: 952, column: 21, scope: !4719)
!4748 = !DILocation(line: 952, column: 25, scope: !4719)
!4749 = !DILocation(line: 952, column: 28, scope: !4719)
!4750 = !DILocation(line: 952, column: 32, scope: !4719)
!4751 = !DILocation(line: 953, column: 30, scope: !4698)
!4752 = !DILocation(line: 953, column: 32, scope: !4698)
!4753 = !DILocation(line: 953, column: 17, scope: !4698)
!4754 = !DILocation(line: 953, column: 21, scope: !4698)
!4755 = !DILocation(line: 953, column: 24, scope: !4698)
!4756 = !DILocation(line: 953, column: 28, scope: !4698)
!4757 = !DILocation(line: 954, column: 30, scope: !4698)
!4758 = !DILocation(line: 954, column: 17, scope: !4698)
!4759 = !DILocation(line: 954, column: 21, scope: !4698)
!4760 = !DILocation(line: 954, column: 24, scope: !4698)
!4761 = !DILocation(line: 954, column: 28, scope: !4698)
!4762 = !DILocation(line: 955, column: 18, scope: !4698)
!4763 = !DILocation(line: 956, column: 13, scope: !4698)
!4764 = !DILocation(line: 944, column: 29, scope: !4692)
!4765 = !DILocation(line: 944, column: 13, scope: !4692)
!4766 = distinct !{!4766, !4696, !4767, !1393}
!4767 = !DILocation(line: 956, column: 13, scope: !4693)
!4768 = !DILocation(line: 957, column: 19, scope: !4056)
!4769 = !DILocation(line: 957, column: 24, scope: !4056)
!4770 = !DILocation(line: 957, column: 13, scope: !4056)
!4771 = !DILocation(line: 958, column: 13, scope: !4056)
!4772 = !DILocation(line: 958, column: 17, scope: !4056)
!4773 = !DILocation(line: 958, column: 24, scope: !4056)
!4774 = !DILocation(line: 958, column: 30, scope: !4056)
!4775 = !DILocation(line: 958, column: 41, scope: !4056)
!4776 = !DILocation(line: 958, column: 47, scope: !4056)
!4777 = !DILocation(line: 958, column: 56, scope: !4056)
!4778 = !DILocation(line: 958, column: 61, scope: !4056)
!4779 = !DILocation(line: 959, column: 19, scope: !4062)
!4780 = !DILocation(line: 959, column: 18, scope: !4062)
!4781 = !DILocation(line: 959, column: 23, scope: !4061)
!4782 = !DILocation(line: 959, column: 25, scope: !4061)
!4783 = !DILocation(line: 959, column: 31, scope: !4061)
!4784 = !DILocation(line: 959, column: 24, scope: !4061)
!4785 = !DILocation(line: 959, column: 13, scope: !4062)
!4786 = !DILocation(line: 961, column: 22, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4060, file: !2, line: 961, column: 22)
!4788 = !DILocation(line: 961, column: 27, scope: !4787)
!4789 = !DILocation(line: 961, column: 31, scope: !4787)
!4790 = !DILocation(line: 961, column: 34, scope: !4787)
!4791 = !DILocation(line: 961, column: 24, scope: !4787)
!4792 = !DILocation(line: 961, column: 22, scope: !4060)
!4793 = !DILocation(line: 961, column: 40, scope: !4787)
!4794 = !DILocation(line: 962, column: 17, scope: !4060)
!4795 = !DILocation(line: 962, column: 21, scope: !4060)
!4796 = !DILocation(line: 962, column: 27, scope: !4060)
!4797 = !DILocation(line: 962, column: 31, scope: !4060)
!4798 = !DILocation(line: 962, column: 34, scope: !4060)
!4799 = !DILocation(line: 963, column: 17, scope: !4060)
!4800 = !DILocation(line: 963, column: 21, scope: !4060)
!4801 = !DILocation(line: 963, column: 27, scope: !4060)
!4802 = !DILocation(line: 963, column: 33, scope: !4060)
!4803 = !DILocation(line: 963, column: 44, scope: !4060)
!4804 = !DILocation(line: 963, column: 50, scope: !4060)
!4805 = !DILocation(line: 963, column: 59, scope: !4060)
!4806 = !DILocation(line: 963, column: 63, scope: !4060)
!4807 = !DILocation(line: 963, column: 66, scope: !4060)
!4808 = !DILocation(line: 963, column: 73, scope: !4060)
!4809 = !DILocation(line: 963, column: 77, scope: !4060)
!4810 = !DILocation(line: 963, column: 80, scope: !4060)
!4811 = !DILocation(line: 964, column: 22, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4060, file: !2, line: 964, column: 22)
!4813 = !DILocation(line: 964, column: 28, scope: !4812)
!4814 = !DILocation(line: 964, column: 22, scope: !4060)
!4815 = !DILocation(line: 966, column: 29, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4812, file: !2, line: 965, column: 17)
!4817 = !DILocation(line: 966, column: 35, scope: !4816)
!4818 = !DILocation(line: 967, column: 29, scope: !4816)
!4819 = !DILocation(line: 967, column: 35, scope: !4816)
!4820 = !DILocation(line: 967, column: 44, scope: !4816)
!4821 = !DILocation(line: 967, column: 52, scope: !4816)
!4822 = !DILocation(line: 968, column: 29, scope: !4816)
!4823 = !DILocation(line: 968, column: 35, scope: !4816)
!4824 = !DILocation(line: 968, column: 44, scope: !4816)
!4825 = !DILocation(line: 968, column: 52, scope: !4816)
!4826 = !DILocation(line: 969, column: 29, scope: !4816)
!4827 = !DILocation(line: 969, column: 35, scope: !4816)
!4828 = !DILocation(line: 969, column: 41, scope: !4816)
!4829 = !DILocation(line: 970, column: 29, scope: !4816)
!4830 = !DILocation(line: 970, column: 35, scope: !4816)
!4831 = !DILocation(line: 970, column: 51, scope: !4816)
!4832 = !DILocation(line: 970, column: 57, scope: !4816)
!4833 = !DILocation(line: 970, column: 66, scope: !4816)
!4834 = !DILocation(line: 971, column: 29, scope: !4816)
!4835 = !DILocation(line: 971, column: 35, scope: !4816)
!4836 = !DILocation(line: 971, column: 40, scope: !4816)
!4837 = !DILocation(line: 966, column: 21, scope: !4816)
!4838 = !DILocation(line: 972, column: 17, scope: !4816)
!4839 = !DILocation(line: 975, column: 29, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4812, file: !2, line: 974, column: 17)
!4841 = !DILocation(line: 975, column: 35, scope: !4840)
!4842 = !DILocation(line: 976, column: 29, scope: !4840)
!4843 = !DILocation(line: 976, column: 35, scope: !4840)
!4844 = !DILocation(line: 976, column: 44, scope: !4840)
!4845 = !DILocation(line: 976, column: 52, scope: !4840)
!4846 = !DILocation(line: 977, column: 29, scope: !4840)
!4847 = !DILocation(line: 977, column: 35, scope: !4840)
!4848 = !DILocation(line: 977, column: 44, scope: !4840)
!4849 = !DILocation(line: 977, column: 52, scope: !4840)
!4850 = !DILocation(line: 978, column: 29, scope: !4840)
!4851 = !DILocation(line: 978, column: 35, scope: !4840)
!4852 = !DILocation(line: 978, column: 41, scope: !4840)
!4853 = !DILocation(line: 979, column: 29, scope: !4840)
!4854 = !DILocation(line: 979, column: 35, scope: !4840)
!4855 = !DILocation(line: 979, column: 51, scope: !4840)
!4856 = !DILocation(line: 979, column: 57, scope: !4840)
!4857 = !DILocation(line: 979, column: 66, scope: !4840)
!4858 = !DILocation(line: 980, column: 29, scope: !4840)
!4859 = !DILocation(line: 980, column: 35, scope: !4840)
!4860 = !DILocation(line: 980, column: 40, scope: !4840)
!4861 = !DILocation(line: 975, column: 21, scope: !4840)
!4862 = !DILocation(line: 982, column: 13, scope: !4061)
!4863 = !DILocation(line: 982, column: 13, scope: !4060)
!4864 = !DILocation(line: 959, column: 38, scope: !4061)
!4865 = !DILocation(line: 959, column: 13, scope: !4061)
!4866 = distinct !{!4866, !4785, !4867, !1393}
!4867 = !DILocation(line: 982, column: 13, scope: !4062)
!4868 = !DILocation(line: 983, column: 9, scope: !4057)
!4869 = !DILocation(line: 983, column: 9, scope: !4056)
!4870 = !DILocation(line: 928, column: 39, scope: !4057)
!4871 = !DILocation(line: 928, column: 9, scope: !4057)
!4872 = distinct !{!4872, !4611, !4873, !1393}
!4873 = !DILocation(line: 983, column: 9, scope: !4058)
!4874 = !DILocation(line: 984, column: 14, scope: !4049)
!4875 = !DILocation(line: 984, column: 9, scope: !4049)
!4876 = !DILocation(line: 985, column: 5, scope: !4035)
!4877 = !DILocation(line: 986, column: 1, scope: !4007)
!4878 = distinct !DISubprogram(name: "report_distinctive_sites", scope: !2, file: !2, line: 756, type: !1804, scopeLine: 757, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !4879)
!4879 = !{!4880, !4881, !4882, !4889, !4890, !4891, !4892, !4893, !4894, !4895, !4896, !4898}
!4880 = !DILocalVariable(name: "args", arg: 1, scope: !4878, file: !2, line: 756, type: !113)
!4881 = !DILocalVariable(name: "kbs_blk", scope: !4878, file: !2, line: 767, type: !635)
!4882 = !DILocalVariable(name: "itr", scope: !4878, file: !2, line: 768, type: !4883)
!4883 = !DIDerivedType(tag: DW_TAG_typedef, name: "kbitset_iter_t", file: !637, line: 171, baseType: !4884)
!4884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kbitset_iter_t", file: !637, line: 167, size: 192, elements: !4885)
!4885 = !{!4886, !4887, !4888}
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4884, file: !637, line: 168, baseType: !163, size: 64)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "elt", scope: !4884, file: !637, line: 169, baseType: !161, size: 64, offset: 64)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !4884, file: !637, line: 170, baseType: !17, size: 32, offset: 128)
!4889 = !DILocalVariable(name: "i", scope: !4878, file: !2, line: 769, type: !17)
!4890 = !DILocalVariable(name: "ndiff", scope: !4878, file: !2, line: 769, type: !17)
!4891 = !DILocalVariable(name: "rid", scope: !4878, file: !2, line: 769, type: !17)
!4892 = !DILocalVariable(name: "pos", scope: !4878, file: !2, line: 769, type: !17)
!4893 = !DILocalVariable(name: "ndiff_tot", scope: !4878, file: !2, line: 769, type: !17)
!4894 = !DILocalVariable(name: "iblock", scope: !4878, file: !2, line: 769, type: !17)
!4895 = !DILocalVariable(name: "ndiff_min", scope: !4878, file: !2, line: 770, type: !17)
!4896 = !DILocalVariable(name: "ndiff_new", scope: !4897, file: !2, line: 773, type: !17)
!4897 = distinct !DILexicalBlock(scope: !4878, file: !2, line: 772, column: 5)
!4898 = !DILocalVariable(name: "ndiff_dbg", scope: !4897, file: !2, line: 773, type: !17)
!4899 = !DILocation(line: 756, column: 46, scope: !4878)
!4900 = !DILocation(line: 758, column: 18, scope: !4878)
!4901 = !DILocation(line: 758, column: 24, scope: !4878)
!4902 = !{!1241, !1229, i64 2608}
!4903 = !DILocation(line: 758, column: 5, scope: !4878)
!4904 = !DILocation(line: 760, column: 13, scope: !4878)
!4905 = !DILocation(line: 760, column: 19, scope: !4878)
!4906 = !DILocation(line: 760, column: 5, scope: !4878)
!4907 = !DILocation(line: 761, column: 13, scope: !4878)
!4908 = !DILocation(line: 761, column: 19, scope: !4878)
!4909 = !DILocation(line: 761, column: 5, scope: !4878)
!4910 = !DILocation(line: 762, column: 13, scope: !4878)
!4911 = !DILocation(line: 762, column: 19, scope: !4878)
!4912 = !DILocation(line: 762, column: 5, scope: !4878)
!4913 = !DILocation(line: 763, column: 13, scope: !4878)
!4914 = !DILocation(line: 763, column: 19, scope: !4878)
!4915 = !DILocation(line: 763, column: 5, scope: !4878)
!4916 = !DILocation(line: 764, column: 13, scope: !4878)
!4917 = !DILocation(line: 764, column: 19, scope: !4878)
!4918 = !DILocation(line: 764, column: 5, scope: !4878)
!4919 = !DILocation(line: 765, column: 13, scope: !4878)
!4920 = !DILocation(line: 765, column: 19, scope: !4878)
!4921 = !DILocation(line: 765, column: 5, scope: !4878)
!4922 = !DILocation(line: 767, column: 5, scope: !4878)
!4923 = !DILocation(line: 767, column: 16, scope: !4878)
!4924 = !DILocation(line: 767, column: 35, scope: !4878)
!4925 = !DILocation(line: 767, column: 41, scope: !4878)
!4926 = !DILocation(line: 767, column: 26, scope: !4878)
!4927 = !DILocation(line: 768, column: 5, scope: !4878)
!4928 = !DILocation(line: 768, column: 20, scope: !4878)
!4929 = !DILocation(line: 769, column: 5, scope: !4878)
!4930 = !DILocation(line: 769, column: 9, scope: !4878)
!4931 = !DILocation(line: 769, column: 11, scope: !4878)
!4932 = !DILocation(line: 769, column: 17, scope: !4878)
!4933 = !DILocation(line: 769, column: 21, scope: !4878)
!4934 = !DILocation(line: 769, column: 25, scope: !4878)
!4935 = !DILocation(line: 769, column: 40, scope: !4878)
!4936 = !DILocation(line: 770, column: 5, scope: !4878)
!4937 = !DILocation(line: 770, column: 9, scope: !4878)
!4938 = !DILocation(line: 770, column: 21, scope: !4878)
!4939 = !DILocation(line: 770, column: 27, scope: !4878)
!4940 = !DILocation(line: 770, column: 48, scope: !4878)
!4941 = !DILocation(line: 770, column: 54, scope: !4878)
!4942 = !DILocation(line: 770, column: 45, scope: !4878)
!4943 = !DILocation(line: 770, column: 63, scope: !4878)
!4944 = !DILocation(line: 770, column: 69, scope: !4878)
!4945 = !DILocation(line: 770, column: 89, scope: !4878)
!4946 = !DILocation(line: 770, column: 95, scope: !4878)
!4947 = !DILocation(line: 771, column: 5, scope: !4878)
!4948 = !DILocation(line: 771, column: 30, scope: !4878)
!4949 = !DILocation(line: 771, column: 13, scope: !4878)
!4950 = !DILocation(line: 773, column: 9, scope: !4897)
!4951 = !DILocation(line: 773, column: 13, scope: !4897)
!4952 = !DILocation(line: 773, column: 28, scope: !4897)
!4953 = !DILocation(line: 774, column: 9, scope: !4897)
!4954 = !DILocation(line: 775, column: 9, scope: !4897)
!4955 = !DILocation(line: 775, column: 29, scope: !4897)
!4956 = !DILocation(line: 775, column: 35, scope: !4897)
!4957 = !DILocation(line: 775, column: 20, scope: !4897)
!4958 = !DILocation(line: 775, column: 19, scope: !4897)
!4959 = !DILocation(line: 775, column: 51, scope: !4897)
!4960 = !DILocation(line: 777, column: 22, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4897, file: !2, line: 776, column: 9)
!4962 = !DILocation(line: 778, column: 29, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4961, file: !2, line: 778, column: 18)
!4964 = !DILocation(line: 778, column: 37, scope: !4963)
!4965 = !DILocation(line: 778, column: 18, scope: !4963)
!4966 = !DILocation(line: 778, column: 18, scope: !4961)
!4967 = !DILocation(line: 778, column: 42, scope: !4963)
!4968 = distinct !{!4968, !4954, !4969, !1393}
!4969 = !DILocation(line: 781, column: 9, scope: !4897)
!4970 = !DILocation(line: 779, column: 24, scope: !4961)
!4971 = !DILocation(line: 779, column: 32, scope: !4961)
!4972 = !DILocation(line: 779, column: 13, scope: !4961)
!4973 = !DILocation(line: 780, column: 22, scope: !4961)
!4974 = !DILocation(line: 782, column: 14, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4897, file: !2, line: 782, column: 14)
!4976 = !DILocation(line: 782, column: 25, scope: !4975)
!4977 = !DILocation(line: 782, column: 23, scope: !4975)
!4978 = !DILocation(line: 782, column: 14, scope: !4897)
!4979 = !DILocation(line: 782, column: 75, scope: !4975)
!4980 = !DILocation(line: 782, column: 85, scope: !4975)
!4981 = !DILocation(line: 782, column: 33, scope: !4975)
!4982 = !DILocation(line: 783, column: 15, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4897, file: !2, line: 783, column: 14)
!4984 = !DILocation(line: 783, column: 14, scope: !4897)
!4985 = !DILocation(line: 783, column: 27, scope: !4983)
!4986 = distinct !{!4986, !4947, !4987, !1393}
!4987 = !DILocation(line: 790, column: 5, scope: !4878)
!4988 = !DILocation(line: 784, column: 22, scope: !4897)
!4989 = !DILocation(line: 784, column: 19, scope: !4897)
!4990 = !DILocation(line: 785, column: 17, scope: !4897)
!4991 = !DILocation(line: 785, column: 23, scope: !4897)
!4992 = !DILocation(line: 785, column: 65, scope: !4897)
!4993 = !DILocation(line: 785, column: 71, scope: !4897)
!4994 = !DILocation(line: 785, column: 79, scope: !4897)
!4995 = !DILocation(line: 785, column: 49, scope: !4897)
!4996 = !DILocation(line: 785, column: 84, scope: !4897)
!4997 = !DILocation(line: 785, column: 87, scope: !4897)
!4998 = !DILocation(line: 785, column: 90, scope: !4897)
!4999 = !DILocation(line: 785, column: 100, scope: !4897)
!5000 = !DILocation(line: 785, column: 9, scope: !4897)
!5001 = !DILocation(line: 786, column: 14, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4897, file: !2, line: 786, column: 14)
!5003 = !DILocation(line: 786, column: 26, scope: !5002)
!5004 = !DILocation(line: 786, column: 24, scope: !5002)
!5005 = !DILocation(line: 786, column: 14, scope: !4897)
!5006 = !DILocation(line: 786, column: 38, scope: !5002)
!5007 = !DILocation(line: 787, column: 15, scope: !4897)
!5008 = !DILocation(line: 788, column: 19, scope: !4897)
!5009 = !DILocation(line: 789, column: 19, scope: !4897)
!5010 = !DILocation(line: 789, column: 9, scope: !4897)
!5011 = !DILocation(line: 791, column: 17, scope: !4878)
!5012 = !DILocation(line: 791, column: 5, scope: !4878)
!5013 = !DILocation(line: 792, column: 1, scope: !4878)
!5014 = distinct !DISubprogram(name: "destroy_data", scope: !2, file: !2, line: 417, type: !1804, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5015)
!5015 = !{!5016}
!5016 = !DILocalVariable(name: "args", arg: 1, scope: !5014, file: !2, line: 417, type: !113)
!5017 = !DILocation(line: 417, column: 34, scope: !5014)
!5018 = !DILocation(line: 419, column: 10, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5014, file: !2, line: 419, column: 10)
!5020 = !DILocation(line: 419, column: 16, scope: !5019)
!5021 = !DILocation(line: 419, column: 24, scope: !5019)
!5022 = !DILocation(line: 419, column: 30, scope: !5019)
!5023 = !DILocation(line: 419, column: 22, scope: !5019)
!5024 = !DILocation(line: 419, column: 10, scope: !5014)
!5025 = !DILocation(line: 419, column: 45, scope: !5019)
!5026 = !DILocation(line: 419, column: 51, scope: !5019)
!5027 = !DILocation(line: 419, column: 40, scope: !5019)
!5028 = !DILocation(line: 420, column: 10, scope: !5014)
!5029 = !DILocation(line: 420, column: 16, scope: !5014)
!5030 = !DILocation(line: 420, column: 5, scope: !5014)
!5031 = !DILocation(line: 421, column: 10, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5014, file: !2, line: 421, column: 10)
!5033 = !DILocation(line: 421, column: 16, scope: !5032)
!5034 = !DILocation(line: 421, column: 25, scope: !5032)
!5035 = !DILocation(line: 421, column: 31, scope: !5032)
!5036 = !DILocation(line: 421, column: 23, scope: !5032)
!5037 = !DILocation(line: 421, column: 10, scope: !5014)
!5038 = !DILocation(line: 421, column: 47, scope: !5032)
!5039 = !DILocation(line: 421, column: 53, scope: !5032)
!5040 = !DILocation(line: 421, column: 42, scope: !5032)
!5041 = !DILocation(line: 422, column: 10, scope: !5014)
!5042 = !DILocation(line: 422, column: 16, scope: !5014)
!5043 = !DILocation(line: 422, column: 5, scope: !5014)
!5044 = !DILocation(line: 423, column: 10, scope: !5014)
!5045 = !DILocation(line: 423, column: 16, scope: !5014)
!5046 = !DILocation(line: 423, column: 5, scope: !5014)
!5047 = !DILocation(line: 424, column: 12, scope: !5014)
!5048 = !DILocation(line: 424, column: 18, scope: !5014)
!5049 = !DILocation(line: 424, column: 5, scope: !5014)
!5050 = !DILocation(line: 425, column: 10, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5014, file: !2, line: 425, column: 10)
!5052 = !DILocation(line: 425, column: 16, scope: !5051)
!5053 = !DILocation(line: 425, column: 10, scope: !5014)
!5054 = !DILocation(line: 425, column: 55, scope: !5051)
!5055 = !DILocation(line: 425, column: 36, scope: !5051)
!5056 = !DILocation(line: 426, column: 10, scope: !5014)
!5057 = !DILocation(line: 426, column: 16, scope: !5014)
!5058 = !DILocation(line: 426, column: 5, scope: !5014)
!5059 = !DILocation(line: 427, column: 10, scope: !5014)
!5060 = !DILocation(line: 427, column: 16, scope: !5014)
!5061 = !DILocation(line: 427, column: 5, scope: !5014)
!5062 = !DILocation(line: 428, column: 10, scope: !5014)
!5063 = !DILocation(line: 428, column: 16, scope: !5014)
!5064 = !DILocation(line: 428, column: 5, scope: !5014)
!5065 = !DILocation(line: 429, column: 10, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5014, file: !2, line: 429, column: 10)
!5067 = !DILocation(line: 429, column: 16, scope: !5066)
!5068 = !DILocation(line: 429, column: 10, scope: !5014)
!5069 = !DILocation(line: 429, column: 30, scope: !5066)
!5070 = !DILocation(line: 429, column: 36, scope: !5066)
!5071 = !DILocation(line: 429, column: 25, scope: !5066)
!5072 = !DILocation(line: 430, column: 10, scope: !5014)
!5073 = !DILocation(line: 430, column: 16, scope: !5014)
!5074 = !DILocation(line: 430, column: 5, scope: !5014)
!5075 = !DILocation(line: 431, column: 10, scope: !5014)
!5076 = !DILocation(line: 431, column: 16, scope: !5014)
!5077 = !DILocation(line: 431, column: 5, scope: !5014)
!5078 = !DILocation(line: 432, column: 10, scope: !5014)
!5079 = !DILocation(line: 432, column: 16, scope: !5014)
!5080 = !DILocation(line: 432, column: 5, scope: !5014)
!5081 = !DILocation(line: 433, column: 10, scope: !5014)
!5082 = !DILocation(line: 433, column: 16, scope: !5014)
!5083 = !DILocation(line: 433, column: 5, scope: !5014)
!5084 = !DILocation(line: 434, column: 10, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5014, file: !2, line: 434, column: 10)
!5086 = !DILocation(line: 434, column: 16, scope: !5085)
!5087 = !DILocation(line: 434, column: 25, scope: !5085)
!5088 = !DILocation(line: 434, column: 31, scope: !5085)
!5089 = !DILocation(line: 434, column: 23, scope: !5085)
!5090 = !DILocation(line: 434, column: 10, scope: !5014)
!5091 = !DILocation(line: 434, column: 47, scope: !5085)
!5092 = !DILocation(line: 434, column: 53, scope: !5085)
!5093 = !DILocation(line: 434, column: 42, scope: !5085)
!5094 = !DILocation(line: 435, column: 10, scope: !5014)
!5095 = !DILocation(line: 435, column: 16, scope: !5014)
!5096 = !DILocation(line: 435, column: 5, scope: !5014)
!5097 = !DILocation(line: 436, column: 20, scope: !5014)
!5098 = !DILocation(line: 436, column: 26, scope: !5014)
!5099 = !DILocation(line: 436, column: 5, scope: !5014)
!5100 = !DILocation(line: 437, column: 1, scope: !5014)
!5101 = !DISubprogram(name: "malloc", scope: !1800, file: !1800, line: 540, type: !5102, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{!182, !161}
!5104 = !DISubprogram(name: "getcwd", scope: !1975, file: !1975, line: 531, type: !5105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{!19, !19, !161}
!5107 = !DISubprogram(name: "realloc", scope: !1800, file: !1800, line: 551, type: !5108, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{!182, !182, !161}
!5110 = !DISubprogram(name: "bcftools_exit", scope: !5111, file: !5111, line: 54, type: !5112, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!5111 = !DIFile(filename: "bcftools/bcftools.pysam.h", directory: "/local-ssd/py-pysam-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z-build/aidengro/spack-stage-py-pysam-0.21.0-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z/spack-src", checksumkind: CSK_MD5, checksum: "12cf90ae620e3cdac27c5ee5f4cd4861")
!5112 = !DISubroutineType(types: !5113)
!5113 = !{null, !17}
!5114 = !DISubprogram(name: "hts_srand48", scope: !5115, file: !5115, line: 41, type: !5116, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5115 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spac/linux-ubuntu22.04-zen2/clang-18.0.0/htslib-1.17-joathgqovfieovrb272nstnjjhsakhcq/include/htslib/hts_os.h", directory: "/local-ssd/py-pysam-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z-build", checksumkind: CSK_MD5, checksum: "3d406f82e08b95aa9a210b336f87cb7f")
!5116 = !DISubroutineType(types: !5117)
!5117 = !{null, !154}
!5118 = !DISubprogram(name: "bcf_sr_init", scope: !23, file: !23, line: 200, type: !5119, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{!118}
!5121 = !DISubprogram(name: "bcf_sr_set_opt", scope: !23, file: !23, line: 210, type: !5122, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!17, !118, !5124, null}
!5124 = !DIDerivedType(tag: DW_TAG_typedef, name: "bcf_sr_opt_t", file: !23, line: 103, baseType: !83)
!5125 = !DISubprogram(name: "bcf_sr_set_regions", scope: !23, file: !23, line: 316, type: !5126, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{!17, !118, !203, !17}
!5128 = !DISubprogram(name: "bcf_sr_set_targets", scope: !23, file: !23, line: 313, type: !5129, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!17, !118, !203, !17, !17}
!5131 = !DISubprogram(name: "bcf_sr_add_reader", scope: !23, file: !23, line: 237, type: !5132, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{!17, !118, !203}
!5134 = !DISubprogram(name: "bcf_sr_strerror", scope: !23, file: !23, line: 207, type: !5135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5135 = !DISubroutineType(types: !5136)
!5136 = !{!19, !17}
!5137 = !DISubprogram(name: "strcmp", scope: !1858, file: !1858, line: 156, type: !1882, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5138 = !DISubprogram(name: "bcf_hdr_id2int", scope: !235, file: !235, line: 1186, type: !5139, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{!17, !5141, !17, !203}
!5141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5142, size: 64)
!5142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !234)
!5143 = distinct !DISubprogram(name: "init_samples", scope: !2, file: !2, line: 208, type: !5144, scopeLine: 209, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5147)
!5144 = !DISubroutineType(types: !5145)
!5145 = !{null, !19, !17, !5146, !127, !233, !19}
!5146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!5147 = !{!5148, !5149, !5150, !5151, !5152, !5153, !5154, !5155, !5156}
!5148 = !DILocalVariable(name: "list", arg: 1, scope: !5143, file: !2, line: 208, type: !19)
!5149 = !DILocalVariable(name: "list_is_file", arg: 2, scope: !5143, file: !2, line: 208, type: !17)
!5150 = !DILocalVariable(name: "smpl", arg: 3, scope: !5143, file: !2, line: 208, type: !5146)
!5151 = !DILocalVariable(name: "nsmpl", arg: 4, scope: !5143, file: !2, line: 208, type: !127)
!5152 = !DILocalVariable(name: "hdr", arg: 5, scope: !5143, file: !2, line: 208, type: !233)
!5153 = !DILocalVariable(name: "vcf_fname", arg: 6, scope: !5143, file: !2, line: 208, type: !19)
!5154 = !DILocalVariable(name: "i", scope: !5143, file: !2, line: 210, type: !17)
!5155 = !DILocalVariable(name: "tmp", scope: !5143, file: !2, line: 219, type: !18)
!5156 = !DILocalVariable(name: "idx", scope: !5157, file: !2, line: 224, type: !17)
!5157 = distinct !DILexicalBlock(scope: !5158, file: !2, line: 223, column: 5)
!5158 = distinct !DILexicalBlock(scope: !5159, file: !2, line: 222, column: 5)
!5159 = distinct !DILexicalBlock(scope: !5143, file: !2, line: 222, column: 5)
!5160 = !DILocation(line: 208, column: 32, scope: !5143)
!5161 = !DILocation(line: 208, column: 42, scope: !5143)
!5162 = !DILocation(line: 208, column: 62, scope: !5143)
!5163 = !DILocation(line: 208, column: 73, scope: !5143)
!5164 = !DILocation(line: 208, column: 91, scope: !5143)
!5165 = !DILocation(line: 208, column: 102, scope: !5143)
!5166 = !DILocation(line: 210, column: 5, scope: !5143)
!5167 = !DILocation(line: 210, column: 9, scope: !5143)
!5168 = !DILocation(line: 211, column: 18, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5143, file: !2, line: 211, column: 10)
!5170 = !DILocation(line: 211, column: 11, scope: !5169)
!5171 = !DILocation(line: 211, column: 10, scope: !5143)
!5172 = !DILocation(line: 213, column: 18, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5169, file: !2, line: 212, column: 5)
!5174 = !DILocation(line: 213, column: 10, scope: !5173)
!5175 = !DILocation(line: 213, column: 16, scope: !5173)
!5176 = !DILocation(line: 214, column: 49, scope: !5173)
!5177 = !DILocation(line: 214, column: 48, scope: !5173)
!5178 = !DILocation(line: 214, column: 47, scope: !5173)
!5179 = !DILocation(line: 214, column: 46, scope: !5173)
!5180 = !DILocation(line: 214, column: 25, scope: !5173)
!5181 = !DILocation(line: 214, column: 10, scope: !5173)
!5182 = !DILocation(line: 214, column: 16, scope: !5173)
!5183 = !DILocation(line: 215, column: 15, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5173, file: !2, line: 215, column: 9)
!5185 = !DILocation(line: 215, column: 14, scope: !5184)
!5186 = !DILocation(line: 215, column: 19, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5184, file: !2, line: 215, column: 9)
!5188 = !DILocation(line: 215, column: 22, scope: !5187)
!5189 = !DILocation(line: 215, column: 21, scope: !5187)
!5190 = !DILocation(line: 215, column: 20, scope: !5187)
!5191 = !DILocation(line: 215, column: 9, scope: !5184)
!5192 = !DILocation(line: 215, column: 47, scope: !5187)
!5193 = !DILocation(line: 215, column: 36, scope: !5187)
!5194 = !DILocation(line: 215, column: 35, scope: !5187)
!5195 = !DILocation(line: 215, column: 42, scope: !5187)
!5196 = !DILocation(line: 215, column: 34, scope: !5187)
!5197 = !DILocation(line: 215, column: 45, scope: !5187)
!5198 = !DILocation(line: 215, column: 30, scope: !5187)
!5199 = !DILocation(line: 215, column: 9, scope: !5187)
!5200 = distinct !{!5200, !5191, !5201, !1393}
!5201 = !DILocation(line: 215, column: 47, scope: !5184)
!5202 = !DILocation(line: 216, column: 9, scope: !5173)
!5203 = !DILocation(line: 219, column: 5, scope: !5143)
!5204 = !DILocation(line: 219, column: 12, scope: !5143)
!5205 = !DILocation(line: 219, column: 31, scope: !5143)
!5206 = !DILocation(line: 219, column: 37, scope: !5143)
!5207 = !DILocation(line: 219, column: 51, scope: !5143)
!5208 = !DILocation(line: 219, column: 18, scope: !5143)
!5209 = !DILocation(line: 220, column: 11, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5143, file: !2, line: 220, column: 10)
!5211 = !DILocation(line: 220, column: 15, scope: !5210)
!5212 = !DILocation(line: 220, column: 20, scope: !5210)
!5213 = !DILocation(line: 220, column: 19, scope: !5210)
!5214 = !DILocation(line: 220, column: 10, scope: !5143)
!5215 = !DILocation(line: 220, column: 58, scope: !5210)
!5216 = !DILocation(line: 220, column: 28, scope: !5210)
!5217 = !DILocation(line: 221, column: 44, scope: !5143)
!5218 = !DILocation(line: 221, column: 43, scope: !5143)
!5219 = !DILocation(line: 221, column: 42, scope: !5143)
!5220 = !DILocation(line: 221, column: 41, scope: !5143)
!5221 = !DILocation(line: 221, column: 20, scope: !5143)
!5222 = !DILocation(line: 221, column: 6, scope: !5143)
!5223 = !DILocation(line: 221, column: 11, scope: !5143)
!5224 = !DILocation(line: 222, column: 11, scope: !5159)
!5225 = !DILocation(line: 222, column: 10, scope: !5159)
!5226 = !DILocation(line: 222, column: 15, scope: !5158)
!5227 = !DILocation(line: 222, column: 18, scope: !5158)
!5228 = !DILocation(line: 222, column: 17, scope: !5158)
!5229 = !DILocation(line: 222, column: 16, scope: !5158)
!5230 = !DILocation(line: 222, column: 5, scope: !5159)
!5231 = !DILocation(line: 224, column: 9, scope: !5157)
!5232 = !DILocation(line: 224, column: 13, scope: !5157)
!5233 = !DILocation(line: 224, column: 34, scope: !5157)
!5234 = !DILocation(line: 224, column: 54, scope: !5157)
!5235 = !DILocation(line: 224, column: 58, scope: !5157)
!5236 = !DILocation(line: 224, column: 19, scope: !5157)
!5237 = !DILocation(line: 225, column: 14, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5157, file: !2, line: 225, column: 14)
!5239 = !DILocation(line: 225, column: 17, scope: !5238)
!5240 = !DILocation(line: 225, column: 14, scope: !5157)
!5241 = !DILocation(line: 225, column: 59, scope: !5238)
!5242 = !DILocation(line: 225, column: 69, scope: !5238)
!5243 = !DILocation(line: 225, column: 73, scope: !5238)
!5244 = !DILocation(line: 225, column: 22, scope: !5238)
!5245 = !DILocation(line: 226, column: 22, scope: !5157)
!5246 = !DILocation(line: 226, column: 11, scope: !5157)
!5247 = !DILocation(line: 226, column: 10, scope: !5157)
!5248 = !DILocation(line: 226, column: 17, scope: !5157)
!5249 = !DILocation(line: 226, column: 9, scope: !5157)
!5250 = !DILocation(line: 226, column: 20, scope: !5157)
!5251 = !DILocation(line: 227, column: 14, scope: !5157)
!5252 = !DILocation(line: 227, column: 18, scope: !5157)
!5253 = !DILocation(line: 227, column: 9, scope: !5157)
!5254 = !DILocation(line: 228, column: 5, scope: !5158)
!5255 = !DILocation(line: 228, column: 5, scope: !5157)
!5256 = !DILocation(line: 222, column: 26, scope: !5158)
!5257 = !DILocation(line: 222, column: 5, scope: !5158)
!5258 = distinct !{!5258, !5230, !5259, !1393}
!5259 = !DILocation(line: 228, column: 5, scope: !5159)
!5260 = !DILocation(line: 229, column: 10, scope: !5143)
!5261 = !DILocation(line: 229, column: 5, scope: !5143)
!5262 = !DILocation(line: 230, column: 12, scope: !5143)
!5263 = !DILocation(line: 230, column: 11, scope: !5143)
!5264 = !DILocation(line: 230, column: 18, scope: !5143)
!5265 = !DILocation(line: 230, column: 17, scope: !5143)
!5266 = !DILocation(line: 230, column: 5, scope: !5143)
!5267 = !DILocation(line: 232, column: 11, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5143, file: !2, line: 232, column: 5)
!5269 = !DILocation(line: 232, column: 10, scope: !5268)
!5270 = !DILocation(line: 232, column: 15, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5268, file: !2, line: 232, column: 5)
!5272 = !DILocation(line: 232, column: 18, scope: !5271)
!5273 = !DILocation(line: 232, column: 17, scope: !5271)
!5274 = !DILocation(line: 232, column: 16, scope: !5271)
!5275 = !DILocation(line: 232, column: 5, scope: !5268)
!5276 = !DILocation(line: 233, column: 16, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5271, file: !2, line: 233, column: 14)
!5278 = !DILocation(line: 233, column: 15, scope: !5277)
!5279 = !DILocation(line: 233, column: 22, scope: !5277)
!5280 = !DILocation(line: 233, column: 23, scope: !5277)
!5281 = !DILocation(line: 233, column: 14, scope: !5277)
!5282 = !DILocation(line: 233, column: 30, scope: !5277)
!5283 = !DILocation(line: 233, column: 29, scope: !5277)
!5284 = !DILocation(line: 233, column: 36, scope: !5277)
!5285 = !DILocation(line: 233, column: 28, scope: !5277)
!5286 = !DILocation(line: 233, column: 26, scope: !5277)
!5287 = !DILocation(line: 233, column: 14, scope: !5271)
!5288 = !DILocation(line: 234, column: 71, scope: !5277)
!5289 = !DILocation(line: 234, column: 76, scope: !5277)
!5290 = !DILocation(line: 234, column: 86, scope: !5277)
!5291 = !DILocation(line: 234, column: 85, scope: !5277)
!5292 = !DILocation(line: 234, column: 92, scope: !5277)
!5293 = !DILocation(line: 234, column: 84, scope: !5277)
!5294 = !DILocation(line: 234, column: 96, scope: !5277)
!5295 = !DILocation(line: 234, column: 13, scope: !5277)
!5296 = !DILocation(line: 233, column: 37, scope: !5277)
!5297 = !DILocation(line: 232, column: 26, scope: !5271)
!5298 = !DILocation(line: 232, column: 5, scope: !5271)
!5299 = distinct !{!5299, !5275, !5300, !1393}
!5300 = !DILocation(line: 234, column: 100, scope: !5268)
!5301 = !DILocation(line: 235, column: 1, scope: !5143)
!5302 = !DISubprogram(name: "__ctype_b_loc", scope: !91, file: !91, line: 79, type: !5303, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5303 = !DISubroutineType(types: !5304)
!5304 = !{!5305}
!5305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!5306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5307, size: 64)
!5307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !601)
!5308 = !DISubprogram(name: "qsort", scope: !1800, file: !1800, line: 838, type: !5309, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5309 = !DISubroutineType(types: !5310)
!5310 = !{null, !182, !161, !161, !5311}
!5311 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !1800, line: 816, baseType: !5312)
!5312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5313, size: 64)
!5313 = !DISubroutineType(types: !5314)
!5314 = !{!17, !5315, !5315}
!5315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5316, size: 64)
!5316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!5317 = distinct !DISubprogram(name: "cmp_pair", scope: !2, file: !2, line: 117, type: !5313, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5318)
!5318 = !{!5319, !5320, !5321, !5322}
!5319 = !DILocalVariable(name: "_a", arg: 1, scope: !5317, file: !2, line: 117, type: !5315)
!5320 = !DILocalVariable(name: "_b", arg: 2, scope: !5317, file: !2, line: 117, type: !5315)
!5321 = !DILocalVariable(name: "a", scope: !5317, file: !2, line: 119, type: !547)
!5322 = !DILocalVariable(name: "b", scope: !5317, file: !2, line: 120, type: !547)
!5323 = !DILocation(line: 117, column: 33, scope: !5317)
!5324 = !DILocation(line: 117, column: 49, scope: !5317)
!5325 = !DILocation(line: 119, column: 5, scope: !5317)
!5326 = !DILocation(line: 119, column: 13, scope: !5317)
!5327 = !DILocation(line: 119, column: 26, scope: !5317)
!5328 = !DILocation(line: 120, column: 5, scope: !5317)
!5329 = !DILocation(line: 120, column: 13, scope: !5317)
!5330 = !DILocation(line: 120, column: 26, scope: !5317)
!5331 = !DILocation(line: 121, column: 10, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5317, file: !2, line: 121, column: 10)
!5333 = !DILocation(line: 121, column: 13, scope: !5332)
!5334 = !DILocation(line: 121, column: 20, scope: !5332)
!5335 = !DILocation(line: 121, column: 23, scope: !5332)
!5336 = !DILocation(line: 121, column: 18, scope: !5332)
!5337 = !DILocation(line: 121, column: 10, scope: !5317)
!5338 = !DILocation(line: 121, column: 30, scope: !5332)
!5339 = !DILocation(line: 122, column: 10, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5317, file: !2, line: 122, column: 10)
!5341 = !DILocation(line: 122, column: 13, scope: !5340)
!5342 = !DILocation(line: 122, column: 20, scope: !5340)
!5343 = !DILocation(line: 122, column: 23, scope: !5340)
!5344 = !DILocation(line: 122, column: 18, scope: !5340)
!5345 = !DILocation(line: 122, column: 10, scope: !5317)
!5346 = !DILocation(line: 122, column: 30, scope: !5340)
!5347 = !DILocation(line: 123, column: 10, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5317, file: !2, line: 123, column: 10)
!5349 = !DILocation(line: 123, column: 13, scope: !5348)
!5350 = !DILocation(line: 123, column: 19, scope: !5348)
!5351 = !DILocation(line: 123, column: 22, scope: !5348)
!5352 = !DILocation(line: 123, column: 17, scope: !5348)
!5353 = !DILocation(line: 123, column: 10, scope: !5317)
!5354 = !DILocation(line: 123, column: 28, scope: !5348)
!5355 = !DILocation(line: 124, column: 10, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5317, file: !2, line: 124, column: 10)
!5357 = !DILocation(line: 124, column: 13, scope: !5356)
!5358 = !DILocation(line: 124, column: 19, scope: !5356)
!5359 = !DILocation(line: 124, column: 22, scope: !5356)
!5360 = !DILocation(line: 124, column: 17, scope: !5356)
!5361 = !DILocation(line: 124, column: 10, scope: !5317)
!5362 = !DILocation(line: 124, column: 28, scope: !5356)
!5363 = !DILocation(line: 125, column: 5, scope: !5317)
!5364 = !DILocation(line: 126, column: 1, scope: !5317)
!5365 = !DISubprogram(name: "log", scope: !5366, file: !5366, line: 104, type: !5367, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5366 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/mathcalls.h", directory: "", checksumkind: CSK_MD5, checksum: "8c6e2d0d2bda65bc5ba1ca02b65383b7")
!5367 = !DISubroutineType(types: !5368)
!5368 = !{!531, !531}
!5369 = !DISubprogram(name: "pow", scope: !5366, file: !5366, line: 140, type: !5370, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{!531, !531, !531}
!5372 = distinct !DISubprogram(name: "diff_sites_init", scope: !2, file: !2, line: 154, type: !1804, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5373)
!5373 = !{!5374, !5375, !5376, !5377, !5379, !5381, !5383}
!5374 = !DILocalVariable(name: "args", arg: 1, scope: !5372, file: !2, line: 154, type: !113)
!5375 = !DILocalVariable(name: "nsites", scope: !5372, file: !2, line: 156, type: !17)
!5376 = !DILocalVariable(name: "n", scope: !5372, file: !2, line: 167, type: !161)
!5377 = !DILocalVariable(name: "tmp", scope: !5378, file: !2, line: 171, type: !161)
!5378 = distinct !DILexicalBlock(scope: !5372, file: !2, line: 171, column: 5)
!5379 = !DILocalVariable(name: "tmp", scope: !5380, file: !2, line: 172, type: !203)
!5380 = distinct !DILexicalBlock(scope: !5372, file: !2, line: 172, column: 5)
!5381 = !DILocalVariable(name: "tmp", scope: !5382, file: !2, line: 173, type: !203)
!5382 = distinct !DILexicalBlock(scope: !5372, file: !2, line: 173, column: 5)
!5383 = !DILocalVariable(name: "tmp", scope: !5384, file: !2, line: 174, type: !5385)
!5384 = distinct !DILexicalBlock(scope: !5372, file: !2, line: 174, column: 5)
!5385 = !DIDerivedType(tag: DW_TAG_typedef, name: "extsort_cmp_f", file: !106, line: 34, baseType: !5312)
!5386 = !DILocation(line: 154, column: 37, scope: !5372)
!5387 = !DILocation(line: 156, column: 5, scope: !5372)
!5388 = !DILocation(line: 156, column: 9, scope: !5372)
!5389 = !DILocation(line: 156, column: 18, scope: !5372)
!5390 = !DILocation(line: 156, column: 24, scope: !5372)
!5391 = !DILocation(line: 156, column: 41, scope: !5372)
!5392 = !DILocation(line: 156, column: 47, scope: !5372)
!5393 = !DILocation(line: 156, column: 53, scope: !5372)
!5394 = !DILocation(line: 156, column: 60, scope: !5372)
!5395 = !DILocation(line: 156, column: 66, scope: !5372)
!5396 = !DILocation(line: 156, column: 59, scope: !5372)
!5397 = !DILocation(line: 156, column: 86, scope: !5372)
!5398 = !DILocation(line: 156, column: 92, scope: !5372)
!5399 = !DILocation(line: 157, column: 10, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5372, file: !2, line: 157, column: 10)
!5401 = !DILocation(line: 157, column: 16, scope: !5400)
!5402 = !DILocation(line: 157, column: 10, scope: !5372)
!5403 = !DILocation(line: 157, column: 86, scope: !5400)
!5404 = !DILocation(line: 157, column: 22, scope: !5400)
!5405 = !DILocation(line: 158, column: 10, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5372, file: !2, line: 158, column: 10)
!5407 = !DILocation(line: 158, column: 19, scope: !5406)
!5408 = !DILocation(line: 158, column: 25, scope: !5406)
!5409 = !DILocation(line: 158, column: 17, scope: !5406)
!5410 = !DILocation(line: 158, column: 10, scope: !5372)
!5411 = !DILocation(line: 160, column: 17, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5406, file: !2, line: 159, column: 5)
!5413 = !DILocation(line: 160, column: 9, scope: !5412)
!5414 = !DILocation(line: 161, column: 18, scope: !5412)
!5415 = !DILocation(line: 161, column: 24, scope: !5412)
!5416 = !DILocation(line: 161, column: 16, scope: !5412)
!5417 = !DILocation(line: 162, column: 35, scope: !5412)
!5418 = !DILocation(line: 162, column: 41, scope: !5412)
!5419 = !DILocation(line: 162, column: 48, scope: !5412)
!5420 = !DILocation(line: 162, column: 9, scope: !5412)
!5421 = !DILocation(line: 162, column: 15, scope: !5412)
!5422 = !DILocation(line: 162, column: 33, scope: !5412)
!5423 = !DILocation(line: 163, column: 5, scope: !5412)
!5424 = !DILocation(line: 165, column: 35, scope: !5406)
!5425 = !DILocation(line: 165, column: 9, scope: !5406)
!5426 = !DILocation(line: 165, column: 15, scope: !5406)
!5427 = !DILocation(line: 165, column: 33, scope: !5406)
!5428 = !DILocation(line: 166, column: 31, scope: !5372)
!5429 = !DILocation(line: 166, column: 37, scope: !5372)
!5430 = !DILocation(line: 166, column: 22, scope: !5372)
!5431 = !DILocation(line: 166, column: 5, scope: !5372)
!5432 = !DILocation(line: 166, column: 11, scope: !5372)
!5433 = !DILocation(line: 166, column: 20, scope: !5372)
!5434 = !DILocation(line: 167, column: 5, scope: !5372)
!5435 = !DILocation(line: 167, column: 12, scope: !5372)
!5436 = !DILocation(line: 167, column: 17, scope: !5372)
!5437 = !DILocation(line: 167, column: 23, scope: !5372)
!5438 = !DILocation(line: 167, column: 30, scope: !5372)
!5439 = !DILocation(line: 167, column: 43, scope: !5372)
!5440 = !DILocation(line: 167, column: 47, scope: !5372)
!5441 = !DILocation(line: 169, column: 53, scope: !5372)
!5442 = !DILocation(line: 169, column: 54, scope: !5372)
!5443 = !DILocation(line: 169, column: 57, scope: !5372)
!5444 = !DILocation(line: 169, column: 50, scope: !5372)
!5445 = !DILocation(line: 169, column: 5, scope: !5372)
!5446 = !DILocation(line: 169, column: 11, scope: !5372)
!5447 = !DILocation(line: 169, column: 27, scope: !5372)
!5448 = !{!1241, !1243, i64 2600}
!5449 = !DILocation(line: 170, column: 16, scope: !5372)
!5450 = !DILocation(line: 170, column: 5, scope: !5372)
!5451 = !DILocation(line: 170, column: 11, scope: !5372)
!5452 = !DILocation(line: 170, column: 14, scope: !5372)
!5453 = !DILocation(line: 171, column: 5, scope: !5378)
!5454 = !DILocation(line: 171, column: 5, scope: !5372)
!5455 = !DILocation(line: 172, column: 5, scope: !5380)
!5456 = !DILocation(line: 172, column: 5, scope: !5372)
!5457 = !DILocation(line: 173, column: 5, scope: !5382)
!5458 = !DILocation(line: 173, column: 5, scope: !5372)
!5459 = !DILocation(line: 174, column: 5, scope: !5384)
!5460 = !DILocation(line: 174, column: 5, scope: !5372)
!5461 = !DILocation(line: 175, column: 18, scope: !5372)
!5462 = !DILocation(line: 175, column: 24, scope: !5372)
!5463 = !DILocation(line: 175, column: 5, scope: !5372)
!5464 = !DILocation(line: 176, column: 1, scope: !5372)
!5465 = distinct !DISubprogram(name: "print_header", scope: !2, file: !2, line: 98, type: !5466, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5468)
!5466 = !DISubroutineType(types: !5467)
!5467 = !{null, !113, !573}
!5468 = !{!5469, !5470, !5471}
!5469 = !DILocalVariable(name: "args", arg: 1, scope: !5465, file: !2, line: 98, type: !113)
!5470 = !DILocalVariable(name: "fp", arg: 2, scope: !5465, file: !2, line: 98, type: !573)
!5471 = !DILocalVariable(name: "i", scope: !5465, file: !2, line: 102, type: !17)
!5472 = !DILocation(line: 98, column: 34, scope: !5465)
!5473 = !DILocation(line: 98, column: 46, scope: !5465)
!5474 = !DILocation(line: 100, column: 13, scope: !5465)
!5475 = !DILocation(line: 100, column: 97, scope: !5465)
!5476 = !DILocation(line: 100, column: 117, scope: !5465)
!5477 = !DILocation(line: 100, column: 5, scope: !5465)
!5478 = !DILocation(line: 101, column: 13, scope: !5465)
!5479 = !DILocation(line: 101, column: 38, scope: !5465)
!5480 = !DILocation(line: 101, column: 44, scope: !5465)
!5481 = !DILocation(line: 101, column: 5, scope: !5465)
!5482 = !DILocation(line: 102, column: 5, scope: !5465)
!5483 = !DILocation(line: 102, column: 9, scope: !5465)
!5484 = !DILocation(line: 103, column: 11, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5465, file: !2, line: 103, column: 5)
!5486 = !DILocation(line: 103, column: 10, scope: !5485)
!5487 = !DILocation(line: 103, column: 15, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5485, file: !2, line: 103, column: 5)
!5489 = !DILocation(line: 103, column: 17, scope: !5488)
!5490 = !DILocation(line: 103, column: 23, scope: !5488)
!5491 = !DILocation(line: 103, column: 16, scope: !5488)
!5492 = !DILocation(line: 103, column: 5, scope: !5485)
!5493 = !DILocation(line: 104, column: 17, scope: !5488)
!5494 = !DILocation(line: 104, column: 27, scope: !5488)
!5495 = !DILocation(line: 104, column: 33, scope: !5488)
!5496 = !DILocation(line: 104, column: 38, scope: !5488)
!5497 = !DILocation(line: 104, column: 9, scope: !5488)
!5498 = !DILocation(line: 103, column: 30, scope: !5488)
!5499 = !DILocation(line: 103, column: 5, scope: !5488)
!5500 = distinct !{!5500, !5492, !5501, !1393}
!5501 = !DILocation(line: 104, column: 40, scope: !5485)
!5502 = !DILocation(line: 105, column: 13, scope: !5465)
!5503 = !DILocation(line: 105, column: 5, scope: !5465)
!5504 = !DILocation(line: 106, column: 13, scope: !5465)
!5505 = !DILocation(line: 106, column: 33, scope: !5465)
!5506 = !DILocation(line: 106, column: 39, scope: !5465)
!5507 = !DILocation(line: 106, column: 5, scope: !5465)
!5508 = !DILocation(line: 107, column: 1, scope: !5465)
!5509 = distinct !DISubprogram(name: "cmp_int", scope: !2, file: !2, line: 109, type: !5313, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5510)
!5510 = !{!5511, !5512, !5513, !5514}
!5511 = !DILocalVariable(name: "_a", arg: 1, scope: !5509, file: !2, line: 109, type: !5315)
!5512 = !DILocalVariable(name: "_b", arg: 2, scope: !5509, file: !2, line: 109, type: !5315)
!5513 = !DILocalVariable(name: "a", scope: !5509, file: !2, line: 111, type: !17)
!5514 = !DILocalVariable(name: "b", scope: !5509, file: !2, line: 112, type: !17)
!5515 = !DILocation(line: 109, column: 32, scope: !5509)
!5516 = !DILocation(line: 109, column: 48, scope: !5509)
!5517 = !DILocation(line: 111, column: 5, scope: !5509)
!5518 = !DILocation(line: 111, column: 9, scope: !5509)
!5519 = !DILocation(line: 111, column: 21, scope: !5509)
!5520 = !DILocation(line: 111, column: 13, scope: !5509)
!5521 = !DILocation(line: 112, column: 5, scope: !5509)
!5522 = !DILocation(line: 112, column: 9, scope: !5509)
!5523 = !DILocation(line: 112, column: 21, scope: !5509)
!5524 = !DILocation(line: 112, column: 13, scope: !5509)
!5525 = !DILocation(line: 113, column: 10, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5509, file: !2, line: 113, column: 10)
!5527 = !DILocation(line: 113, column: 14, scope: !5526)
!5528 = !DILocation(line: 113, column: 12, scope: !5526)
!5529 = !DILocation(line: 113, column: 10, scope: !5509)
!5530 = !DILocation(line: 113, column: 18, scope: !5526)
!5531 = !DILocation(line: 114, column: 10, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5509, file: !2, line: 114, column: 10)
!5533 = !DILocation(line: 114, column: 14, scope: !5532)
!5534 = !DILocation(line: 114, column: 12, scope: !5532)
!5535 = !DILocation(line: 114, column: 10, scope: !5509)
!5536 = !DILocation(line: 114, column: 18, scope: !5532)
!5537 = !DILocation(line: 115, column: 5, scope: !5509)
!5538 = !DILocation(line: 116, column: 1, scope: !5509)
!5539 = distinct !DISubprogram(name: "kbs_init", scope: !637, file: !637, line: 93, type: !5540, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5542)
!5540 = !DISubroutineType(types: !5541)
!5541 = !{!635, !161}
!5542 = !{!5543}
!5543 = !DILocalVariable(name: "ni", arg: 1, scope: !5539, file: !637, line: 93, type: !161)
!5544 = !DILocation(line: 93, column: 42, scope: !5539)
!5545 = !DILocation(line: 95, column: 19, scope: !5539)
!5546 = !DILocation(line: 95, column: 9, scope: !5539)
!5547 = !DILocation(line: 95, column: 2, scope: !5539)
!5548 = !DISubprogram(name: "extsort_alloc", scope: !106, file: !106, line: 48, type: !5549, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5549 = !DISubroutineType(types: !5550)
!5550 = !{!646}
!5551 = !DISubprogram(name: "extsort_set", scope: !106, file: !106, line: 49, type: !5552, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5552 = !DISubroutineType(types: !5553)
!5553 = !{null, !646, !5554, !182}
!5554 = !DIDerivedType(tag: DW_TAG_typedef, name: "extsort_opt_t", file: !106, line: 44, baseType: !105)
!5555 = distinct !DISubprogram(name: "diff_sites_cmp", scope: !2, file: !2, line: 144, type: !5313, scopeLine: 145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5556)
!5556 = !{!5557, !5558, !5559, !5560}
!5557 = !DILocalVariable(name: "aptr", arg: 1, scope: !5555, file: !2, line: 144, type: !5315)
!5558 = !DILocalVariable(name: "bptr", arg: 2, scope: !5555, file: !2, line: 144, type: !5315)
!5559 = !DILocalVariable(name: "a", scope: !5555, file: !2, line: 146, type: !652)
!5560 = !DILocalVariable(name: "b", scope: !5555, file: !2, line: 147, type: !652)
!5561 = !DILocation(line: 144, column: 39, scope: !5555)
!5562 = !DILocation(line: 144, column: 57, scope: !5555)
!5563 = !DILocation(line: 146, column: 5, scope: !5555)
!5564 = !DILocation(line: 146, column: 19, scope: !5555)
!5565 = !DILocation(line: 146, column: 41, scope: !5555)
!5566 = !DILocation(line: 146, column: 23, scope: !5555)
!5567 = !DILocation(line: 147, column: 5, scope: !5555)
!5568 = !DILocation(line: 147, column: 19, scope: !5555)
!5569 = !DILocation(line: 147, column: 41, scope: !5555)
!5570 = !DILocation(line: 147, column: 23, scope: !5555)
!5571 = !DILocation(line: 148, column: 10, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5555, file: !2, line: 148, column: 10)
!5573 = !DILocation(line: 148, column: 13, scope: !5572)
!5574 = !{!5575, !1224, i64 0}
!5575 = !{!"", !1224, i64 0, !1224, i64 4, !1224, i64 8, !1224, i64 12, !1225, i64 16}
!5576 = !DILocation(line: 148, column: 21, scope: !5572)
!5577 = !DILocation(line: 148, column: 24, scope: !5572)
!5578 = !DILocation(line: 148, column: 19, scope: !5572)
!5579 = !DILocation(line: 148, column: 10, scope: !5555)
!5580 = !DILocation(line: 148, column: 32, scope: !5572)
!5581 = !DILocation(line: 149, column: 10, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5555, file: !2, line: 149, column: 10)
!5583 = !DILocation(line: 149, column: 13, scope: !5582)
!5584 = !DILocation(line: 149, column: 21, scope: !5582)
!5585 = !DILocation(line: 149, column: 24, scope: !5582)
!5586 = !DILocation(line: 149, column: 19, scope: !5582)
!5587 = !DILocation(line: 149, column: 10, scope: !5555)
!5588 = !DILocation(line: 149, column: 32, scope: !5582)
!5589 = !DILocation(line: 150, column: 10, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5555, file: !2, line: 150, column: 10)
!5591 = !DILocation(line: 150, column: 13, scope: !5590)
!5592 = !{!5575, !1224, i64 12}
!5593 = !DILocation(line: 150, column: 20, scope: !5590)
!5594 = !DILocation(line: 150, column: 23, scope: !5590)
!5595 = !DILocation(line: 150, column: 18, scope: !5590)
!5596 = !DILocation(line: 150, column: 10, scope: !5555)
!5597 = !DILocation(line: 150, column: 30, scope: !5590)
!5598 = !DILocation(line: 151, column: 10, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5555, file: !2, line: 151, column: 10)
!5600 = !DILocation(line: 151, column: 13, scope: !5599)
!5601 = !DILocation(line: 151, column: 20, scope: !5599)
!5602 = !DILocation(line: 151, column: 23, scope: !5599)
!5603 = !DILocation(line: 151, column: 18, scope: !5599)
!5604 = !DILocation(line: 151, column: 10, scope: !5555)
!5605 = !DILocation(line: 151, column: 30, scope: !5599)
!5606 = !DILocation(line: 152, column: 5, scope: !5555)
!5607 = !DILocation(line: 153, column: 1, scope: !5555)
!5608 = !DISubprogram(name: "extsort_init", scope: !106, file: !106, line: 50, type: !5609, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5609 = !DISubroutineType(types: !5610)
!5610 = !{null, !646}
!5611 = distinct !DISubprogram(name: "kbs_init2", scope: !637, file: !637, line: 78, type: !5612, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5614)
!5612 = !DISubroutineType(types: !5613)
!5613 = !{!635, !161, !17}
!5614 = !{!5615, !5616, !5617, !5618}
!5615 = !DILocalVariable(name: "ni", arg: 1, scope: !5611, file: !637, line: 78, type: !161)
!5616 = !DILocalVariable(name: "fill", arg: 2, scope: !5611, file: !637, line: 78, type: !17)
!5617 = !DILocalVariable(name: "n", scope: !5611, file: !637, line: 80, type: !161)
!5618 = !DILocalVariable(name: "bs", scope: !5611, file: !637, line: 81, type: !635)
!5619 = !DILocation(line: 78, column: 43, scope: !5611)
!5620 = !DILocation(line: 78, column: 51, scope: !5611)
!5621 = !DILocation(line: 80, column: 2, scope: !5611)
!5622 = !DILocation(line: 80, column: 9, scope: !5611)
!5623 = !DILocation(line: 80, column: 14, scope: !5611)
!5624 = !DILocation(line: 80, column: 17, scope: !5611)
!5625 = !DILocation(line: 80, column: 30, scope: !5611)
!5626 = !DILocation(line: 80, column: 34, scope: !5611)
!5627 = !DILocation(line: 81, column: 2, scope: !5611)
!5628 = !DILocation(line: 81, column: 13, scope: !5611)
!5629 = !DILocation(line: 82, column: 44, scope: !5611)
!5630 = !DILocation(line: 82, column: 46, scope: !5611)
!5631 = !DILocation(line: 82, column: 42, scope: !5611)
!5632 = !DILocation(line: 82, column: 17, scope: !5611)
!5633 = !DILocation(line: 83, column: 6, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5611, file: !637, line: 83, column: 6)
!5635 = !DILocation(line: 83, column: 9, scope: !5634)
!5636 = !DILocation(line: 83, column: 6, scope: !5611)
!5637 = !DILocation(line: 83, column: 18, scope: !5634)
!5638 = !DILocation(line: 84, column: 22, scope: !5611)
!5639 = !DILocation(line: 84, column: 10, scope: !5611)
!5640 = !DILocation(line: 84, column: 14, scope: !5611)
!5641 = !DILocation(line: 84, column: 20, scope: !5611)
!5642 = !{!5643, !1243, i64 8}
!5643 = !{!"kbitset_t", !1243, i64 0, !1243, i64 8, !1225, i64 16}
!5644 = !DILocation(line: 84, column: 2, scope: !5611)
!5645 = !DILocation(line: 84, column: 6, scope: !5611)
!5646 = !DILocation(line: 84, column: 8, scope: !5611)
!5647 = !{!5643, !1243, i64 0}
!5648 = !DILocation(line: 85, column: 9, scope: !5611)
!5649 = !DILocation(line: 85, column: 13, scope: !5611)
!5650 = !DILocation(line: 85, column: 2, scope: !5611)
!5651 = !DILocation(line: 85, column: 16, scope: !5611)
!5652 = !DILocation(line: 85, column: 30, scope: !5611)
!5653 = !DILocation(line: 85, column: 32, scope: !5611)
!5654 = !DILocation(line: 87, column: 27, scope: !5611)
!5655 = !DILocation(line: 87, column: 13, scope: !5611)
!5656 = !DILocation(line: 87, column: 2, scope: !5611)
!5657 = !DILocation(line: 87, column: 6, scope: !5611)
!5658 = !DILocation(line: 87, column: 8, scope: !5611)
!5659 = !DILocation(line: 87, column: 11, scope: !5611)
!5660 = !DILocation(line: 88, column: 6, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5611, file: !637, line: 88, column: 6)
!5662 = !DILocation(line: 88, column: 6, scope: !5611)
!5663 = !DILocation(line: 88, column: 26, scope: !5661)
!5664 = !DILocation(line: 88, column: 30, scope: !5661)
!5665 = !DILocation(line: 88, column: 32, scope: !5661)
!5666 = !DILocation(line: 88, column: 12, scope: !5661)
!5667 = !DILocation(line: 88, column: 16, scope: !5661)
!5668 = !DILocation(line: 88, column: 18, scope: !5661)
!5669 = !DILocation(line: 88, column: 19, scope: !5661)
!5670 = !DILocation(line: 88, column: 23, scope: !5661)
!5671 = !DILocation(line: 89, column: 9, scope: !5611)
!5672 = !DILocation(line: 89, column: 2, scope: !5611)
!5673 = !DILocation(line: 90, column: 1, scope: !5611)
!5674 = distinct !DISubprogram(name: "kbs_last_mask", scope: !637, file: !637, line: 70, type: !5675, scopeLine: 71, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5677)
!5675 = !DISubroutineType(types: !5676)
!5676 = !{!163, !161}
!5677 = !{!5678, !5679}
!5678 = !DILocalVariable(name: "ni", arg: 1, scope: !5674, file: !637, line: 70, type: !161)
!5679 = !DILocalVariable(name: "mask", scope: !5674, file: !637, line: 72, type: !163)
!5680 = !DILocation(line: 70, column: 50, scope: !5674)
!5681 = !DILocation(line: 72, column: 2, scope: !5674)
!5682 = !DILocation(line: 72, column: 16, scope: !5674)
!5683 = !DILocation(line: 72, column: 23, scope: !5674)
!5684 = !DILocation(line: 72, column: 36, scope: !5674)
!5685 = !DILocation(line: 73, column: 9, scope: !5674)
!5686 = !DILocation(line: 73, column: 15, scope: !5674)
!5687 = !DILocation(line: 74, column: 1, scope: !5674)
!5688 = !DILocation(line: 73, column: 2, scope: !5674)
!5689 = !DISubprogram(name: "bcftools_version", scope: !1874, file: !1874, line: 42, type: !5690, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{!19}
!5692 = !DISubprogram(name: "hts_version", scope: !38, file: !38, line: 480, type: !5693, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5693 = !DISubroutineType(types: !5694)
!5694 = !{!203}
!5695 = distinct !DISubprogram(name: "bcf_seqname", scope: !235, file: !235, line: 1199, type: !5696, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5700)
!5696 = !DISubroutineType(types: !5697)
!5697 = !{!203, !5141, !5698}
!5698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5699, size: 64)
!5699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !368)
!5700 = !{!5701, !5702}
!5701 = !DILocalVariable(name: "hdr", arg: 1, scope: !5695, file: !235, line: 1199, type: !5141)
!5702 = !DILocalVariable(name: "rec", arg: 2, scope: !5695, file: !235, line: 1199, type: !5698)
!5703 = !DILocation(line: 1199, column: 60, scope: !5695)
!5704 = !DILocation(line: 1199, column: 79, scope: !5695)
!5705 = !DILocation(line: 1200, column: 32, scope: !5695)
!5706 = !DILocation(line: 1200, column: 37, scope: !5695)
!5707 = !DILocation(line: 1200, column: 43, scope: !5695)
!5708 = !DILocation(line: 1200, column: 48, scope: !5695)
!5709 = !DILocation(line: 1200, column: 16, scope: !5695)
!5710 = !DILocation(line: 1200, column: 9, scope: !5695)
!5711 = !DISubprogram(name: "bcf_get_variant_types", scope: !235, file: !235, line: 787, type: !5712, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5712 = !DISubroutineType(types: !5713)
!5713 = !{!17, !367}
!5714 = distinct !DISubprogram(name: "bcf_hdr_id2name", scope: !235, file: !235, line: 1194, type: !5715, scopeLine: 1195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5717)
!5715 = !DISubroutineType(types: !5716)
!5716 = !{!203, !5141, !17}
!5717 = !{!5718, !5719}
!5718 = !DILocalVariable(name: "hdr", arg: 1, scope: !5714, file: !235, line: 1194, type: !5141)
!5719 = !DILocalVariable(name: "rid", arg: 2, scope: !5714, file: !235, line: 1194, type: !17)
!5720 = !DILocation(line: 1194, column: 64, scope: !5714)
!5721 = !DILocation(line: 1194, column: 73, scope: !5714)
!5722 = !DILocation(line: 1196, column: 15, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5714, file: !235, line: 1196, column: 14)
!5724 = !DILocation(line: 1196, column: 19, scope: !5723)
!5725 = !DILocation(line: 1196, column: 22, scope: !5723)
!5726 = !DILocation(line: 1196, column: 25, scope: !5723)
!5727 = !DILocation(line: 1196, column: 28, scope: !5723)
!5728 = !DILocation(line: 1196, column: 31, scope: !5723)
!5729 = !DILocation(line: 1196, column: 36, scope: !5723)
!5730 = !DILocation(line: 1196, column: 41, scope: !5723)
!5731 = !DILocation(line: 1196, column: 34, scope: !5723)
!5732 = !DILocation(line: 1196, column: 14, scope: !5714)
!5733 = !DILocation(line: 1196, column: 57, scope: !5723)
!5734 = !DILocation(line: 1197, column: 16, scope: !5714)
!5735 = !DILocation(line: 1197, column: 21, scope: !5714)
!5736 = !DILocation(line: 1197, column: 36, scope: !5714)
!5737 = !DILocation(line: 1197, column: 41, scope: !5714)
!5738 = !{!5739, !1229, i64 0}
!5739 = !{!"bcf_idpair_t", !1229, i64 0, !1229, i64 8}
!5740 = !DILocation(line: 1197, column: 9, scope: !5714)
!5741 = !DILocation(line: 1198, column: 5, scope: !5714)
!5742 = !DILocation(line: 485, column: 29, scope: !1089)
!5743 = !DILocation(line: 485, column: 46, scope: !1089)
!5744 = !DILocation(line: 485, column: 59, scope: !1089)
!5745 = !DILocation(line: 485, column: 74, scope: !1089)
!5746 = !DILocation(line: 485, column: 88, scope: !1089)
!5747 = !DILocation(line: 485, column: 99, scope: !1089)
!5748 = !DILocation(line: 485, column: 111, scope: !1089)
!5749 = !DILocation(line: 489, column: 5, scope: !1089)
!5750 = !DILocation(line: 489, column: 9, scope: !1089)
!5751 = !DILocation(line: 490, column: 11, scope: !1107)
!5752 = !DILocation(line: 490, column: 10, scope: !1107)
!5753 = !DILocation(line: 490, column: 15, scope: !1106)
!5754 = !DILocation(line: 490, column: 16, scope: !1106)
!5755 = !DILocation(line: 490, column: 5, scope: !1107)
!5756 = !DILocation(line: 492, column: 15, scope: !1104)
!5757 = !DILocation(line: 492, column: 14, scope: !1104)
!5758 = !DILocation(line: 492, column: 14, scope: !1105)
!5759 = !DILocation(line: 494, column: 13, scope: !1103)
!5760 = !DILocation(line: 494, column: 17, scope: !1103)
!5761 = !DILocation(line: 494, column: 23, scope: !1103)
!5762 = !DILocation(line: 495, column: 18, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !1103, file: !2, line: 495, column: 18)
!5764 = !DILocation(line: 495, column: 22, scope: !5763)
!5765 = !DILocation(line: 495, column: 18, scope: !1103)
!5766 = !DILocation(line: 497, column: 23, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5768, file: !2, line: 497, column: 22)
!5768 = distinct !DILexicalBlock(scope: !5763, file: !2, line: 496, column: 13)
!5769 = !DILocation(line: 497, column: 22, scope: !5768)
!5770 = !DILocation(line: 497, column: 30, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5767, file: !2, line: 497, column: 27)
!5772 = !DILocation(line: 497, column: 37, scope: !5771)
!5773 = !DILocation(line: 497, column: 42, scope: !5771)
!5774 = !DILocation(line: 498, column: 17, scope: !5768)
!5775 = !DILocation(line: 498, column: 23, scope: !5768)
!5776 = !DILocation(line: 498, column: 36, scope: !5768)
!5777 = !DILocation(line: 499, column: 17, scope: !5768)
!5778 = !DILocation(line: 501, column: 18, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !1103, file: !2, line: 501, column: 18)
!5780 = !DILocation(line: 501, column: 27, scope: !5779)
!5781 = !DILocation(line: 501, column: 26, scope: !5779)
!5782 = !DILocation(line: 501, column: 22, scope: !5779)
!5783 = !DILocation(line: 501, column: 18, scope: !1103)
!5784 = !DILocation(line: 503, column: 22, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5786, file: !2, line: 503, column: 22)
!5786 = distinct !DILexicalBlock(scope: !5779, file: !2, line: 502, column: 13)
!5787 = !DILocation(line: 503, column: 22, scope: !5786)
!5788 = !DILocation(line: 505, column: 29, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5785, file: !2, line: 504, column: 17)
!5790 = !DILocation(line: 505, column: 165, scope: !5789)
!5791 = !DILocation(line: 505, column: 169, scope: !5789)
!5792 = !DILocation(line: 505, column: 153, scope: !5789)
!5793 = !DILocation(line: 505, column: 174, scope: !5789)
!5794 = !DILocation(line: 505, column: 179, scope: !5789)
!5795 = !DILocation(line: 505, column: 182, scope: !5789)
!5796 = !DILocation(line: 505, column: 21, scope: !5789)
!5797 = !DILocation(line: 506, column: 33, scope: !5789)
!5798 = !DILocation(line: 507, column: 17, scope: !5789)
!5799 = !DILocation(line: 508, column: 17, scope: !5786)
!5800 = !DILocation(line: 508, column: 23, scope: !5786)
!5801 = !DILocation(line: 508, column: 35, scope: !5786)
!5802 = !DILocation(line: 509, column: 17, scope: !5786)
!5803 = !DILocation(line: 511, column: 14, scope: !1103)
!5804 = !DILocation(line: 511, column: 20, scope: !1103)
!5805 = !DILocation(line: 512, column: 13, scope: !1103)
!5806 = !DILocation(line: 513, column: 9, scope: !1104)
!5807 = !DILocation(line: 515, column: 9, scope: !1105)
!5808 = !DILocation(line: 515, column: 13, scope: !1105)
!5809 = !DILocation(line: 515, column: 19, scope: !1105)
!5810 = !DILocation(line: 516, column: 14, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !1105, file: !2, line: 516, column: 14)
!5812 = !DILocation(line: 516, column: 18, scope: !5811)
!5813 = !DILocation(line: 516, column: 14, scope: !1105)
!5814 = !DILocation(line: 518, column: 19, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5816, file: !2, line: 518, column: 18)
!5816 = distinct !DILexicalBlock(scope: !5811, file: !2, line: 517, column: 9)
!5817 = !DILocation(line: 518, column: 18, scope: !5816)
!5818 = !DILocation(line: 518, column: 26, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5815, file: !2, line: 518, column: 23)
!5820 = !DILocation(line: 518, column: 33, scope: !5819)
!5821 = !DILocation(line: 518, column: 38, scope: !5819)
!5822 = !DILocation(line: 519, column: 13, scope: !5816)
!5823 = !DILocation(line: 519, column: 19, scope: !5816)
!5824 = !DILocation(line: 519, column: 32, scope: !5816)
!5825 = !DILocation(line: 520, column: 13, scope: !5816)
!5826 = !DILocation(line: 522, column: 14, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !1105, file: !2, line: 522, column: 14)
!5828 = !DILocation(line: 522, column: 23, scope: !5827)
!5829 = !DILocation(line: 522, column: 22, scope: !5827)
!5830 = !DILocation(line: 522, column: 18, scope: !5827)
!5831 = !DILocation(line: 522, column: 14, scope: !1105)
!5832 = !DILocation(line: 524, column: 18, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !2, line: 524, column: 18)
!5834 = distinct !DILexicalBlock(scope: !5827, file: !2, line: 523, column: 9)
!5835 = !DILocation(line: 524, column: 18, scope: !5834)
!5836 = !DILocation(line: 526, column: 25, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5833, file: !2, line: 525, column: 13)
!5838 = !DILocation(line: 526, column: 161, scope: !5837)
!5839 = !DILocation(line: 526, column: 165, scope: !5837)
!5840 = !DILocation(line: 526, column: 149, scope: !5837)
!5841 = !DILocation(line: 526, column: 170, scope: !5837)
!5842 = !DILocation(line: 526, column: 175, scope: !5837)
!5843 = !DILocation(line: 526, column: 178, scope: !5837)
!5844 = !DILocation(line: 526, column: 17, scope: !5837)
!5845 = !DILocation(line: 527, column: 29, scope: !5837)
!5846 = !DILocation(line: 528, column: 13, scope: !5837)
!5847 = !DILocation(line: 529, column: 13, scope: !5834)
!5848 = !DILocation(line: 529, column: 19, scope: !5834)
!5849 = !DILocation(line: 529, column: 31, scope: !5834)
!5850 = !DILocation(line: 530, column: 13, scope: !5834)
!5851 = !DILocation(line: 532, column: 10, scope: !1105)
!5852 = !DILocation(line: 532, column: 16, scope: !1105)
!5853 = !DILocation(line: 533, column: 9, scope: !1105)
!5854 = !DILocation(line: 534, column: 5, scope: !1106)
!5855 = !DILocation(line: 490, column: 21, scope: !1106)
!5856 = !DILocation(line: 490, column: 5, scope: !1106)
!5857 = distinct !{!5857, !5755, !5858, !1393}
!5858 = !DILocation(line: 534, column: 5, scope: !1107)
!5859 = !DILocation(line: 535, column: 5, scope: !1089)
!5860 = !DILocation(line: 536, column: 1, scope: !1089)
!5861 = !DISubprogram(name: "bcf_calc_ac", scope: !5862, file: !5862, line: 91, type: !5863, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5862 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spac/linux-ubuntu22.04-zen2/clang-18.0.0/htslib-1.17-joathgqovfieovrb272nstnjjhsakhcq/include/htslib/vcfutils.h", directory: "/local-ssd/py-pysam-j7d6uw6tj3ibcqfq2vvy3vwnd5ztte4z-build", checksumkind: CSK_MD5, checksum: "8c149b90a7de95f0f7fbca92ca9ec218")
!5863 = !DISubroutineType(types: !5864)
!5864 = !{!17, !5141, !367, !127, !17}
!5865 = distinct !DISubprogram(name: "diff_sites_reset", scope: !2, file: !2, line: 182, type: !1804, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5866)
!5866 = !{!5867}
!5867 = !DILocalVariable(name: "args", arg: 1, scope: !5865, file: !2, line: 182, type: !113)
!5868 = !DILocation(line: 182, column: 45, scope: !5865)
!5869 = !DILocation(line: 184, column: 15, scope: !5865)
!5870 = !DILocation(line: 184, column: 21, scope: !5865)
!5871 = !DILocation(line: 184, column: 5, scope: !5865)
!5872 = !DILocation(line: 185, column: 1, scope: !5865)
!5873 = distinct !DISubprogram(name: "gt_to_dsg", scope: !2, file: !2, line: 439, type: !5874, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5876)
!5874 = !DISubroutineType(types: !5875)
!5875 = !{!287, !540}
!5876 = !{!5877, !5878}
!5877 = !DILocalVariable(name: "ptr", arg: 1, scope: !5873, file: !2, line: 439, type: !540)
!5878 = !DILocalVariable(name: "dsg", scope: !5873, file: !2, line: 442, type: !287)
!5879 = !DILocation(line: 439, column: 42, scope: !5873)
!5880 = !DILocation(line: 441, column: 10, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5873, file: !2, line: 441, column: 10)
!5882 = !DILocation(line: 441, column: 36, scope: !5881)
!5883 = !DILocation(line: 441, column: 39, scope: !5881)
!5884 = !DILocation(line: 441, column: 65, scope: !5881)
!5885 = !DILocation(line: 441, column: 68, scope: !5881)
!5886 = !DILocation(line: 441, column: 74, scope: !5881)
!5887 = !DILocation(line: 441, column: 10, scope: !5873)
!5888 = !DILocation(line: 441, column: 99, scope: !5881)
!5889 = !DILocation(line: 442, column: 5, scope: !5873)
!5890 = !DILocation(line: 442, column: 13, scope: !5873)
!5891 = !DILocation(line: 442, column: 20, scope: !5873)
!5892 = !DILocation(line: 442, column: 50, scope: !5873)
!5893 = !DILocation(line: 442, column: 47, scope: !5873)
!5894 = !DILocation(line: 442, column: 19, scope: !5873)
!5895 = !DILocation(line: 443, column: 15, scope: !5873)
!5896 = !DILocation(line: 443, column: 13, scope: !5873)
!5897 = !DILocation(line: 443, column: 12, scope: !5873)
!5898 = !DILocation(line: 443, column: 5, scope: !5873)
!5899 = !DILocation(line: 444, column: 1, scope: !5873)
!5900 = distinct !DISubprogram(name: "pl_to_dsg", scope: !2, file: !2, line: 445, type: !5874, scopeLine: 446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5901)
!5901 = !{!5902, !5903, !5904}
!5902 = !DILocalVariable(name: "ptr", arg: 1, scope: !5900, file: !2, line: 445, type: !540)
!5903 = !DILocalVariable(name: "min_pl", scope: !5900, file: !2, line: 449, type: !17)
!5904 = !DILocalVariable(name: "dsg", scope: !5900, file: !2, line: 450, type: !287)
!5905 = !DILocation(line: 445, column: 42, scope: !5900)
!5906 = !DILocation(line: 447, column: 10, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5900, file: !2, line: 447, column: 10)
!5908 = !DILocation(line: 447, column: 16, scope: !5907)
!5909 = !DILocation(line: 447, column: 36, scope: !5907)
!5910 = !DILocation(line: 447, column: 39, scope: !5907)
!5911 = !DILocation(line: 447, column: 45, scope: !5907)
!5912 = !DILocation(line: 447, column: 65, scope: !5907)
!5913 = !DILocation(line: 447, column: 68, scope: !5907)
!5914 = !DILocation(line: 447, column: 74, scope: !5907)
!5915 = !DILocation(line: 447, column: 10, scope: !5900)
!5916 = !DILocation(line: 447, column: 96, scope: !5907)
!5917 = !DILocation(line: 448, column: 10, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5900, file: !2, line: 448, column: 10)
!5919 = !DILocation(line: 448, column: 16, scope: !5918)
!5920 = !DILocation(line: 448, column: 39, scope: !5918)
!5921 = !DILocation(line: 448, column: 42, scope: !5918)
!5922 = !DILocation(line: 448, column: 48, scope: !5918)
!5923 = !DILocation(line: 448, column: 10, scope: !5900)
!5924 = !DILocation(line: 448, column: 73, scope: !5918)
!5925 = !DILocation(line: 449, column: 5, scope: !5900)
!5926 = !DILocation(line: 449, column: 9, scope: !5900)
!5927 = !DILocation(line: 449, column: 18, scope: !5900)
!5928 = !DILocation(line: 449, column: 25, scope: !5900)
!5929 = !DILocation(line: 449, column: 24, scope: !5900)
!5930 = !DILocation(line: 449, column: 35, scope: !5900)
!5931 = !DILocation(line: 449, column: 42, scope: !5900)
!5932 = !DILocation(line: 449, column: 41, scope: !5900)
!5933 = !DILocation(line: 449, column: 49, scope: !5900)
!5934 = !DILocation(line: 449, column: 56, scope: !5900)
!5935 = !DILocation(line: 449, column: 67, scope: !5900)
!5936 = !DILocation(line: 449, column: 74, scope: !5900)
!5937 = !DILocation(line: 449, column: 73, scope: !5900)
!5938 = !DILocation(line: 449, column: 81, scope: !5900)
!5939 = !DILocation(line: 449, column: 88, scope: !5900)
!5940 = !DILocation(line: 450, column: 5, scope: !5900)
!5941 = !DILocation(line: 450, column: 13, scope: !5900)
!5942 = !DILocation(line: 451, column: 10, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5900, file: !2, line: 451, column: 10)
!5944 = !DILocation(line: 451, column: 18, scope: !5943)
!5945 = !DILocation(line: 451, column: 16, scope: !5943)
!5946 = !DILocation(line: 451, column: 10, scope: !5900)
!5947 = !DILocation(line: 451, column: 31, scope: !5943)
!5948 = !DILocation(line: 451, column: 27, scope: !5943)
!5949 = !DILocation(line: 452, column: 10, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5900, file: !2, line: 452, column: 10)
!5951 = !DILocation(line: 452, column: 18, scope: !5950)
!5952 = !DILocation(line: 452, column: 16, scope: !5950)
!5953 = !DILocation(line: 452, column: 10, scope: !5900)
!5954 = !DILocation(line: 452, column: 31, scope: !5950)
!5955 = !DILocation(line: 452, column: 27, scope: !5950)
!5956 = !DILocation(line: 453, column: 10, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5900, file: !2, line: 453, column: 10)
!5958 = !DILocation(line: 453, column: 18, scope: !5957)
!5959 = !DILocation(line: 453, column: 16, scope: !5957)
!5960 = !DILocation(line: 453, column: 10, scope: !5900)
!5961 = !DILocation(line: 453, column: 31, scope: !5957)
!5962 = !DILocation(line: 453, column: 27, scope: !5957)
!5963 = !DILocation(line: 454, column: 12, scope: !5900)
!5964 = !DILocation(line: 454, column: 5, scope: !5900)
!5965 = !DILocation(line: 455, column: 1, scope: !5900)
!5966 = distinct !DISubprogram(name: "kbs_insert", scope: !637, file: !637, line: 150, type: !5967, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5969)
!5967 = !DISubroutineType(types: !5968)
!5968 = !{null, !635, !17}
!5969 = !{!5970, !5971}
!5970 = !DILocalVariable(name: "bs", arg: 1, scope: !5966, file: !637, line: 150, type: !635)
!5971 = !DILocalVariable(name: "i", arg: 2, scope: !5966, file: !637, line: 150, type: !17)
!5972 = !DILocation(line: 150, column: 42, scope: !5966)
!5973 = !DILocation(line: 150, column: 50, scope: !5966)
!5974 = !DILocation(line: 152, column: 23, scope: !5966)
!5975 = !DILocation(line: 152, column: 2, scope: !5966)
!5976 = !DILocation(line: 152, column: 6, scope: !5966)
!5977 = !DILocation(line: 152, column: 8, scope: !5966)
!5978 = !DILocation(line: 152, column: 20, scope: !5966)
!5979 = !DILocation(line: 153, column: 1, scope: !5966)
!5980 = distinct !DISubprogram(name: "diff_sites_push", scope: !2, file: !2, line: 186, type: !5981, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !5983)
!5981 = !DISubroutineType(types: !5982)
!5982 = !{null, !113, !17, !17, !17}
!5983 = !{!5984, !5985, !5986, !5987, !5988}
!5984 = !DILocalVariable(name: "args", arg: 1, scope: !5980, file: !2, line: 186, type: !113)
!5985 = !DILocalVariable(name: "ndiff", arg: 2, scope: !5980, file: !2, line: 186, type: !17)
!5986 = !DILocalVariable(name: "rid", arg: 3, scope: !5980, file: !2, line: 186, type: !17)
!5987 = !DILocalVariable(name: "pos", arg: 4, scope: !5980, file: !2, line: 186, type: !17)
!5988 = !DILocalVariable(name: "dat", scope: !5980, file: !2, line: 188, type: !652)
!5989 = !DILocation(line: 186, column: 44, scope: !5980)
!5990 = !DILocation(line: 186, column: 54, scope: !5980)
!5991 = !DILocation(line: 186, column: 65, scope: !5980)
!5992 = !DILocation(line: 186, column: 74, scope: !5980)
!5993 = !DILocation(line: 188, column: 5, scope: !5980)
!5994 = !DILocation(line: 188, column: 19, scope: !5980)
!5995 = !DILocation(line: 188, column: 48, scope: !5980)
!5996 = !DILocation(line: 188, column: 54, scope: !5980)
!5997 = !DILocation(line: 188, column: 41, scope: !5980)
!5998 = !DILocation(line: 189, column: 12, scope: !5980)
!5999 = !DILocation(line: 189, column: 5, scope: !5980)
!6000 = !DILocation(line: 190, column: 18, scope: !5980)
!6001 = !DILocation(line: 190, column: 5, scope: !5980)
!6002 = !DILocation(line: 190, column: 10, scope: !5980)
!6003 = !DILocation(line: 190, column: 16, scope: !5980)
!6004 = !DILocation(line: 191, column: 17, scope: !5980)
!6005 = !DILocation(line: 191, column: 5, scope: !5980)
!6006 = !DILocation(line: 191, column: 10, scope: !5980)
!6007 = !DILocation(line: 191, column: 15, scope: !5980)
!6008 = !{!5575, !1224, i64 4}
!6009 = !DILocation(line: 192, column: 17, scope: !5980)
!6010 = !DILocation(line: 192, column: 5, scope: !5980)
!6011 = !DILocation(line: 192, column: 10, scope: !5980)
!6012 = !DILocation(line: 192, column: 15, scope: !5980)
!6013 = !{!5575, !1224, i64 8}
!6014 = !DILocation(line: 193, column: 17, scope: !5980)
!6015 = !DILocation(line: 193, column: 5, scope: !5980)
!6016 = !DILocation(line: 193, column: 10, scope: !5980)
!6017 = !DILocation(line: 193, column: 15, scope: !5980)
!6018 = !DILocation(line: 194, column: 12, scope: !5980)
!6019 = !DILocation(line: 194, column: 17, scope: !5980)
!6020 = !DILocation(line: 194, column: 5, scope: !5980)
!6021 = !DILocation(line: 194, column: 25, scope: !5980)
!6022 = !DILocation(line: 194, column: 31, scope: !5980)
!6023 = !DILocation(line: 194, column: 41, scope: !5980)
!6024 = !DILocation(line: 194, column: 43, scope: !5980)
!6025 = !DILocation(line: 194, column: 49, scope: !5980)
!6026 = !DILocation(line: 194, column: 59, scope: !5980)
!6027 = !DILocation(line: 194, column: 60, scope: !5980)
!6028 = !DILocation(line: 195, column: 18, scope: !5980)
!6029 = !DILocation(line: 195, column: 24, scope: !5980)
!6030 = !DILocation(line: 195, column: 27, scope: !5980)
!6031 = !DILocation(line: 195, column: 5, scope: !5980)
!6032 = !DILocation(line: 196, column: 1, scope: !5980)
!6033 = distinct !DISubprogram(name: "gt_to_prob", scope: !2, file: !2, line: 456, type: !6034, scopeLine: 457, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !6036)
!6034 = !DISubroutineType(types: !6035)
!6035 = !{!287, !113, !540, !530}
!6036 = !{!6037, !6038, !6039, !6040}
!6037 = !DILocalVariable(name: "args", arg: 1, scope: !6033, file: !2, line: 456, type: !113)
!6038 = !DILocalVariable(name: "ptr", arg: 2, scope: !6033, file: !2, line: 456, type: !540)
!6039 = !DILocalVariable(name: "prob", arg: 3, scope: !6033, file: !2, line: 456, type: !530)
!6040 = !DILocalVariable(name: "dsg", scope: !6033, file: !2, line: 458, type: !287)
!6041 = !DILocation(line: 456, column: 42, scope: !6033)
!6042 = !DILocation(line: 456, column: 57, scope: !6033)
!6043 = !DILocation(line: 456, column: 70, scope: !6033)
!6044 = !DILocation(line: 458, column: 5, scope: !6033)
!6045 = !DILocation(line: 458, column: 13, scope: !6033)
!6046 = !DILocation(line: 458, column: 29, scope: !6033)
!6047 = !DILocation(line: 458, column: 19, scope: !6033)
!6048 = !DILocation(line: 459, column: 10, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6033, file: !2, line: 459, column: 10)
!6050 = !DILocation(line: 459, column: 10, scope: !6033)
!6051 = !DILocation(line: 461, column: 19, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6049, file: !2, line: 460, column: 5)
!6053 = !DILocation(line: 461, column: 25, scope: !6052)
!6054 = !DILocation(line: 461, column: 34, scope: !6052)
!6055 = !DILocation(line: 461, column: 9, scope: !6052)
!6056 = !DILocation(line: 461, column: 17, scope: !6052)
!6057 = !DILocation(line: 462, column: 19, scope: !6052)
!6058 = !DILocation(line: 462, column: 25, scope: !6052)
!6059 = !DILocation(line: 462, column: 34, scope: !6052)
!6060 = !DILocation(line: 462, column: 9, scope: !6052)
!6061 = !DILocation(line: 462, column: 17, scope: !6052)
!6062 = !DILocation(line: 463, column: 19, scope: !6052)
!6063 = !DILocation(line: 463, column: 25, scope: !6052)
!6064 = !DILocation(line: 463, column: 34, scope: !6052)
!6065 = !DILocation(line: 463, column: 9, scope: !6052)
!6066 = !DILocation(line: 463, column: 17, scope: !6052)
!6067 = !DILocation(line: 464, column: 5, scope: !6052)
!6068 = !DILocation(line: 465, column: 12, scope: !6033)
!6069 = !DILocation(line: 466, column: 1, scope: !6033)
!6070 = !DILocation(line: 465, column: 5, scope: !6033)
!6071 = distinct !DISubprogram(name: "pl_to_prob", scope: !2, file: !2, line: 467, type: !6034, scopeLine: 468, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !6072)
!6072 = !{!6073, !6074, !6075, !6076, !6077}
!6073 = !DILocalVariable(name: "args", arg: 1, scope: !6071, file: !2, line: 467, type: !113)
!6074 = !DILocalVariable(name: "ptr", arg: 2, scope: !6071, file: !2, line: 467, type: !540)
!6075 = !DILocalVariable(name: "prob", arg: 3, scope: !6071, file: !2, line: 467, type: !530)
!6076 = !DILocalVariable(name: "dsg", scope: !6071, file: !2, line: 469, type: !287)
!6077 = !DILocalVariable(name: "sum", scope: !6078, file: !2, line: 475, type: !531)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !2, line: 471, column: 5)
!6079 = distinct !DILexicalBlock(scope: !6071, file: !2, line: 470, column: 10)
!6080 = !DILocation(line: 467, column: 42, scope: !6071)
!6081 = !DILocation(line: 467, column: 57, scope: !6071)
!6082 = !DILocation(line: 467, column: 70, scope: !6071)
!6083 = !DILocation(line: 469, column: 5, scope: !6071)
!6084 = !DILocation(line: 469, column: 13, scope: !6071)
!6085 = !DILocation(line: 469, column: 29, scope: !6071)
!6086 = !DILocation(line: 469, column: 19, scope: !6071)
!6087 = !DILocation(line: 470, column: 10, scope: !6079)
!6088 = !DILocation(line: 470, column: 10, scope: !6071)
!6089 = !DILocation(line: 472, column: 20, scope: !6078)
!6090 = !DILocation(line: 472, column: 26, scope: !6078)
!6091 = !DILocation(line: 472, column: 30, scope: !6078)
!6092 = !DILocation(line: 472, column: 33, scope: !6078)
!6093 = !DILocation(line: 472, column: 39, scope: !6078)
!6094 = !DILocation(line: 472, column: 19, scope: !6078)
!6095 = !DILocation(line: 472, column: 47, scope: !6078)
!6096 = !DILocation(line: 472, column: 53, scope: !6078)
!6097 = !DILocation(line: 472, column: 61, scope: !6078)
!6098 = !DILocation(line: 472, column: 71, scope: !6078)
!6099 = !DILocation(line: 472, column: 77, scope: !6078)
!6100 = !DILocation(line: 472, column: 9, scope: !6078)
!6101 = !DILocation(line: 472, column: 17, scope: !6078)
!6102 = !DILocation(line: 473, column: 20, scope: !6078)
!6103 = !DILocation(line: 473, column: 26, scope: !6078)
!6104 = !DILocation(line: 473, column: 30, scope: !6078)
!6105 = !DILocation(line: 473, column: 33, scope: !6078)
!6106 = !DILocation(line: 473, column: 39, scope: !6078)
!6107 = !DILocation(line: 473, column: 19, scope: !6078)
!6108 = !DILocation(line: 473, column: 47, scope: !6078)
!6109 = !DILocation(line: 473, column: 53, scope: !6078)
!6110 = !DILocation(line: 473, column: 61, scope: !6078)
!6111 = !DILocation(line: 473, column: 71, scope: !6078)
!6112 = !DILocation(line: 473, column: 77, scope: !6078)
!6113 = !DILocation(line: 473, column: 9, scope: !6078)
!6114 = !DILocation(line: 473, column: 17, scope: !6078)
!6115 = !DILocation(line: 474, column: 20, scope: !6078)
!6116 = !DILocation(line: 474, column: 26, scope: !6078)
!6117 = !DILocation(line: 474, column: 30, scope: !6078)
!6118 = !DILocation(line: 474, column: 33, scope: !6078)
!6119 = !DILocation(line: 474, column: 39, scope: !6078)
!6120 = !DILocation(line: 474, column: 19, scope: !6078)
!6121 = !DILocation(line: 474, column: 47, scope: !6078)
!6122 = !DILocation(line: 474, column: 53, scope: !6078)
!6123 = !DILocation(line: 474, column: 61, scope: !6078)
!6124 = !DILocation(line: 474, column: 71, scope: !6078)
!6125 = !DILocation(line: 474, column: 77, scope: !6078)
!6126 = !DILocation(line: 474, column: 9, scope: !6078)
!6127 = !DILocation(line: 474, column: 17, scope: !6078)
!6128 = !DILocation(line: 475, column: 9, scope: !6078)
!6129 = !DILocation(line: 475, column: 16, scope: !6078)
!6130 = !DILocation(line: 475, column: 22, scope: !6078)
!6131 = !DILocation(line: 475, column: 32, scope: !6078)
!6132 = !DILocation(line: 475, column: 30, scope: !6078)
!6133 = !DILocation(line: 475, column: 42, scope: !6078)
!6134 = !DILocation(line: 475, column: 40, scope: !6078)
!6135 = !DILocation(line: 476, column: 20, scope: !6078)
!6136 = !DILocation(line: 476, column: 9, scope: !6078)
!6137 = !DILocation(line: 476, column: 17, scope: !6078)
!6138 = !DILocation(line: 477, column: 20, scope: !6078)
!6139 = !DILocation(line: 477, column: 9, scope: !6078)
!6140 = !DILocation(line: 477, column: 17, scope: !6078)
!6141 = !DILocation(line: 478, column: 20, scope: !6078)
!6142 = !DILocation(line: 478, column: 9, scope: !6078)
!6143 = !DILocation(line: 478, column: 17, scope: !6078)
!6144 = !DILocation(line: 479, column: 24, scope: !6078)
!6145 = !DILocation(line: 479, column: 20, scope: !6078)
!6146 = !DILocation(line: 479, column: 19, scope: !6078)
!6147 = !DILocation(line: 479, column: 9, scope: !6078)
!6148 = !DILocation(line: 479, column: 17, scope: !6078)
!6149 = !DILocation(line: 480, column: 24, scope: !6078)
!6150 = !DILocation(line: 480, column: 20, scope: !6078)
!6151 = !DILocation(line: 480, column: 19, scope: !6078)
!6152 = !DILocation(line: 480, column: 9, scope: !6078)
!6153 = !DILocation(line: 480, column: 17, scope: !6078)
!6154 = !DILocation(line: 481, column: 24, scope: !6078)
!6155 = !DILocation(line: 481, column: 20, scope: !6078)
!6156 = !DILocation(line: 481, column: 19, scope: !6078)
!6157 = !DILocation(line: 481, column: 9, scope: !6078)
!6158 = !DILocation(line: 481, column: 17, scope: !6078)
!6159 = !DILocation(line: 482, column: 5, scope: !6079)
!6160 = !DILocation(line: 482, column: 5, scope: !6078)
!6161 = !DILocation(line: 483, column: 12, scope: !6071)
!6162 = !DILocation(line: 484, column: 1, scope: !6071)
!6163 = !DILocation(line: 483, column: 5, scope: !6071)
!6164 = !DISubprogram(name: "bcf_get_format_values", scope: !235, file: !235, line: 1168, type: !6165, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6165 = !DISubroutineType(types: !6166)
!6166 = !{!17, !5141, !367, !203, !661, !127, !17}
!6167 = distinct !DISubprogram(name: "kbs_clear", scope: !637, file: !637, line: 137, type: !6168, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !6170)
!6168 = !DISubroutineType(types: !6169)
!6169 = !{null, !635}
!6170 = !{!6171}
!6171 = !DILocalVariable(name: "bs", arg: 1, scope: !6167, file: !637, line: 137, type: !635)
!6172 = !DILocation(line: 137, column: 41, scope: !6167)
!6173 = !DILocation(line: 139, column: 9, scope: !6167)
!6174 = !DILocation(line: 139, column: 13, scope: !6167)
!6175 = !DILocation(line: 139, column: 2, scope: !6167)
!6176 = !DILocation(line: 139, column: 19, scope: !6167)
!6177 = !DILocation(line: 139, column: 23, scope: !6167)
!6178 = !DILocation(line: 139, column: 25, scope: !6167)
!6179 = !DILocation(line: 140, column: 1, scope: !6167)
!6180 = !DISubprogram(name: "hts_lrand48", scope: !5115, file: !5115, line: 50, type: !6181, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6181 = !DISubroutineType(types: !6182)
!6182 = !{!154}
!6183 = !DISubprogram(name: "extsort_push", scope: !106, file: !106, line: 51, type: !6184, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{null, !646, !182}
!6186 = distinct !DISubprogram(name: "cmp_idbl", scope: !2, file: !2, line: 748, type: !5313, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !6187)
!6187 = !{!6188, !6189, !6190, !6191}
!6188 = !DILocalVariable(name: "_a", arg: 1, scope: !6186, file: !2, line: 748, type: !5315)
!6189 = !DILocalVariable(name: "_b", arg: 2, scope: !6186, file: !2, line: 748, type: !5315)
!6190 = !DILocalVariable(name: "a", scope: !6186, file: !2, line: 750, type: !662)
!6191 = !DILocalVariable(name: "b", scope: !6186, file: !2, line: 751, type: !662)
!6192 = !DILocation(line: 748, column: 33, scope: !6186)
!6193 = !DILocation(line: 748, column: 49, scope: !6186)
!6194 = !DILocation(line: 750, column: 5, scope: !6186)
!6195 = !DILocation(line: 750, column: 13, scope: !6186)
!6196 = !DILocation(line: 750, column: 26, scope: !6186)
!6197 = !DILocation(line: 751, column: 5, scope: !6186)
!6198 = !DILocation(line: 751, column: 13, scope: !6186)
!6199 = !DILocation(line: 751, column: 26, scope: !6186)
!6200 = !DILocation(line: 752, column: 10, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6186, file: !2, line: 752, column: 10)
!6202 = !DILocation(line: 752, column: 13, scope: !6201)
!6203 = !DILocation(line: 752, column: 19, scope: !6201)
!6204 = !DILocation(line: 752, column: 22, scope: !6201)
!6205 = !DILocation(line: 752, column: 17, scope: !6201)
!6206 = !DILocation(line: 752, column: 10, scope: !6186)
!6207 = !DILocation(line: 752, column: 28, scope: !6201)
!6208 = !DILocation(line: 753, column: 10, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6186, file: !2, line: 753, column: 10)
!6210 = !DILocation(line: 753, column: 13, scope: !6209)
!6211 = !DILocation(line: 753, column: 19, scope: !6209)
!6212 = !DILocation(line: 753, column: 22, scope: !6209)
!6213 = !DILocation(line: 753, column: 17, scope: !6209)
!6214 = !DILocation(line: 753, column: 10, scope: !6186)
!6215 = !DILocation(line: 753, column: 28, scope: !6209)
!6216 = !DILocation(line: 754, column: 5, scope: !6186)
!6217 = !DILocation(line: 755, column: 1, scope: !6186)
!6218 = !DISubprogram(name: "extsort_sort", scope: !106, file: !106, line: 52, type: !5609, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6219 = distinct !DISubprogram(name: "diff_sites_shift", scope: !2, file: !2, line: 197, type: !6220, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !6222)
!6220 = !DISubroutineType(types: !6221)
!6221 = !{!17, !113, !127, !127, !127}
!6222 = !{!6223, !6224, !6225, !6226, !6227}
!6223 = !DILocalVariable(name: "args", arg: 1, scope: !6219, file: !2, line: 197, type: !113)
!6224 = !DILocalVariable(name: "ndiff", arg: 2, scope: !6219, file: !2, line: 197, type: !127)
!6225 = !DILocalVariable(name: "rid", arg: 3, scope: !6219, file: !2, line: 197, type: !127)
!6226 = !DILocalVariable(name: "pos", arg: 4, scope: !6219, file: !2, line: 197, type: !127)
!6227 = !DILocalVariable(name: "dat", scope: !6219, file: !2, line: 199, type: !652)
!6228 = !DILocation(line: 197, column: 44, scope: !6219)
!6229 = !DILocation(line: 197, column: 55, scope: !6219)
!6230 = !DILocation(line: 197, column: 67, scope: !6219)
!6231 = !DILocation(line: 197, column: 77, scope: !6219)
!6232 = !DILocation(line: 199, column: 5, scope: !6219)
!6233 = !DILocation(line: 199, column: 19, scope: !6219)
!6234 = !DILocation(line: 199, column: 55, scope: !6219)
!6235 = !DILocation(line: 199, column: 61, scope: !6219)
!6236 = !DILocation(line: 199, column: 41, scope: !6219)
!6237 = !DILocation(line: 200, column: 11, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6219, file: !2, line: 200, column: 10)
!6239 = !DILocation(line: 200, column: 10, scope: !6219)
!6240 = !DILocation(line: 200, column: 17, scope: !6238)
!6241 = !DILocation(line: 201, column: 14, scope: !6219)
!6242 = !DILocation(line: 201, column: 19, scope: !6219)
!6243 = !DILocation(line: 201, column: 6, scope: !6219)
!6244 = !DILocation(line: 201, column: 12, scope: !6219)
!6245 = !DILocation(line: 202, column: 14, scope: !6219)
!6246 = !DILocation(line: 202, column: 19, scope: !6219)
!6247 = !DILocation(line: 202, column: 6, scope: !6219)
!6248 = !DILocation(line: 202, column: 12, scope: !6219)
!6249 = !DILocation(line: 203, column: 14, scope: !6219)
!6250 = !DILocation(line: 203, column: 19, scope: !6219)
!6251 = !DILocation(line: 203, column: 6, scope: !6219)
!6252 = !DILocation(line: 203, column: 12, scope: !6219)
!6253 = !DILocation(line: 204, column: 12, scope: !6219)
!6254 = !DILocation(line: 204, column: 18, scope: !6219)
!6255 = !DILocation(line: 204, column: 28, scope: !6219)
!6256 = !DILocation(line: 204, column: 5, scope: !6219)
!6257 = !DILocation(line: 204, column: 30, scope: !6219)
!6258 = !DILocation(line: 204, column: 35, scope: !6219)
!6259 = !DILocation(line: 204, column: 43, scope: !6219)
!6260 = !DILocation(line: 204, column: 49, scope: !6219)
!6261 = !DILocation(line: 204, column: 59, scope: !6219)
!6262 = !DILocation(line: 204, column: 60, scope: !6219)
!6263 = !DILocation(line: 205, column: 5, scope: !6219)
!6264 = !DILocation(line: 206, column: 1, scope: !6219)
!6265 = distinct !DISubprogram(name: "kbs_start", scope: !637, file: !637, line: 174, type: !6266, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !6269)
!6266 = !DISubroutineType(types: !6267)
!6267 = !{null, !6268}
!6268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4883, size: 64)
!6269 = !{!6270}
!6270 = !DILocalVariable(name: "itr", arg: 1, scope: !6265, file: !637, line: 174, type: !6268)
!6271 = !DILocation(line: 174, column: 46, scope: !6265)
!6272 = !DILocation(line: 176, column: 2, scope: !6265)
!6273 = !DILocation(line: 176, column: 7, scope: !6265)
!6274 = !DILocation(line: 176, column: 12, scope: !6265)
!6275 = !{!6276, !1243, i64 0}
!6276 = !{!"kbitset_iter_t", !1243, i64 0, !1243, i64 8, !1224, i64 16}
!6277 = !DILocation(line: 177, column: 2, scope: !6265)
!6278 = !DILocation(line: 177, column: 7, scope: !6265)
!6279 = !DILocation(line: 177, column: 11, scope: !6265)
!6280 = !{!6276, !1243, i64 8}
!6281 = !DILocation(line: 178, column: 2, scope: !6265)
!6282 = !DILocation(line: 178, column: 7, scope: !6265)
!6283 = !DILocation(line: 178, column: 9, scope: !6265)
!6284 = !{!6276, !1224, i64 16}
!6285 = !DILocation(line: 179, column: 1, scope: !6265)
!6286 = distinct !DISubprogram(name: "kbs_next", scope: !637, file: !637, line: 182, type: !6287, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !6291)
!6287 = !DISubroutineType(types: !6288)
!6288 = !{!17, !6289, !6268}
!6289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6290, size: 64)
!6290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !636)
!6291 = !{!6292, !6293, !6294}
!6292 = !DILocalVariable(name: "bs", arg: 1, scope: !6286, file: !637, line: 182, type: !6289)
!6293 = !DILocalVariable(name: "itr", arg: 2, scope: !6286, file: !637, line: 182, type: !6268)
!6294 = !DILocalVariable(name: "b", scope: !6286, file: !637, line: 184, type: !163)
!6295 = !DILocation(line: 182, column: 45, scope: !6286)
!6296 = !DILocation(line: 182, column: 65, scope: !6286)
!6297 = !DILocation(line: 184, column: 2, scope: !6286)
!6298 = !DILocation(line: 184, column: 16, scope: !6286)
!6299 = !DILocation(line: 184, column: 20, scope: !6286)
!6300 = !DILocation(line: 184, column: 24, scope: !6286)
!6301 = !DILocation(line: 184, column: 26, scope: !6286)
!6302 = !DILocation(line: 184, column: 31, scope: !6286)
!6303 = !DILocation(line: 186, column: 2, scope: !6286)
!6304 = !DILocation(line: 187, column: 7, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6306, file: !637, line: 187, column: 7)
!6306 = distinct !DILexicalBlock(scope: !6307, file: !637, line: 186, column: 11)
!6307 = distinct !DILexicalBlock(scope: !6308, file: !637, line: 186, column: 2)
!6308 = distinct !DILexicalBlock(scope: !6286, file: !637, line: 186, column: 2)
!6309 = !DILocation(line: 187, column: 12, scope: !6305)
!6310 = !DILocation(line: 187, column: 17, scope: !6305)
!6311 = !DILocation(line: 187, column: 7, scope: !6306)
!6312 = !DILocation(line: 188, column: 4, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6305, file: !637, line: 187, column: 23)
!6314 = !DILocation(line: 188, column: 16, scope: !6313)
!6315 = !DILocation(line: 188, column: 20, scope: !6313)
!6316 = !DILocation(line: 188, column: 24, scope: !6313)
!6317 = !DILocation(line: 188, column: 29, scope: !6313)
!6318 = !DILocation(line: 188, column: 22, scope: !6313)
!6319 = !DILocation(line: 188, column: 14, scope: !6313)
!6320 = !DILocation(line: 188, column: 35, scope: !6313)
!6321 = !DILocation(line: 188, column: 41, scope: !6313)
!6322 = !DILocation(line: 188, column: 46, scope: !6313)
!6323 = !DILocation(line: 188, column: 48, scope: !6313)
!6324 = distinct !{!6324, !6312, !6325, !1393}
!6325 = !DILocation(line: 188, column: 51, scope: !6313)
!6326 = !DILocation(line: 189, column: 8, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6313, file: !637, line: 189, column: 8)
!6328 = !DILocation(line: 189, column: 13, scope: !6327)
!6329 = !DILocation(line: 189, column: 20, scope: !6327)
!6330 = !DILocation(line: 189, column: 24, scope: !6327)
!6331 = !DILocation(line: 189, column: 17, scope: !6327)
!6332 = !DILocation(line: 189, column: 8, scope: !6313)
!6333 = !DILocation(line: 189, column: 27, scope: !6327)
!6334 = !DILocation(line: 190, column: 4, scope: !6313)
!6335 = !DILocation(line: 190, column: 9, scope: !6313)
!6336 = !DILocation(line: 190, column: 14, scope: !6313)
!6337 = !DILocation(line: 191, column: 3, scope: !6313)
!6338 = !DILocation(line: 193, column: 7, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6306, file: !637, line: 193, column: 7)
!6340 = !DILocation(line: 193, column: 11, scope: !6339)
!6341 = !DILocation(line: 193, column: 16, scope: !6339)
!6342 = !DILocation(line: 193, column: 9, scope: !6339)
!6343 = !DILocation(line: 193, column: 7, scope: !6306)
!6344 = !DILocation(line: 193, column: 22, scope: !6339)
!6345 = !DILocation(line: 195, column: 3, scope: !6306)
!6346 = !DILocation(line: 195, column: 8, scope: !6306)
!6347 = !DILocation(line: 195, column: 9, scope: !6306)
!6348 = !DILocation(line: 196, column: 3, scope: !6306)
!6349 = !DILocation(line: 196, column: 8, scope: !6306)
!6350 = !DILocation(line: 196, column: 13, scope: !6306)
!6351 = !DILocation(line: 186, column: 2, scope: !6307)
!6352 = distinct !{!6352, !6353, !6354}
!6353 = !DILocation(line: 186, column: 2, scope: !6308)
!6354 = !DILocation(line: 197, column: 2, scope: !6308)
!6355 = !DILocation(line: 199, column: 2, scope: !6286)
!6356 = !DILocation(line: 199, column: 7, scope: !6286)
!6357 = !DILocation(line: 199, column: 12, scope: !6286)
!6358 = !DILocation(line: 200, column: 9, scope: !6286)
!6359 = !DILocation(line: 200, column: 14, scope: !6286)
!6360 = !DILocation(line: 200, column: 15, scope: !6286)
!6361 = !DILocation(line: 200, column: 2, scope: !6286)
!6362 = !DILocation(line: 201, column: 1, scope: !6286)
!6363 = distinct !DISubprogram(name: "kbs_exists", scope: !637, file: !637, line: 162, type: !6364, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !6366)
!6364 = !DISubroutineType(types: !6365)
!6365 = !{!17, !6289, !17}
!6366 = !{!6367, !6368}
!6367 = !DILocalVariable(name: "bs", arg: 1, scope: !6363, file: !637, line: 162, type: !6289)
!6368 = !DILocalVariable(name: "i", arg: 2, scope: !6363, file: !637, line: 162, type: !17)
!6369 = !DILocation(line: 162, column: 47, scope: !6363)
!6370 = !DILocation(line: 162, column: 55, scope: !6363)
!6371 = !DILocation(line: 164, column: 10, scope: !6363)
!6372 = !DILocation(line: 164, column: 14, scope: !6363)
!6373 = !DILocation(line: 164, column: 16, scope: !6363)
!6374 = !DILocation(line: 164, column: 30, scope: !6363)
!6375 = !DILocation(line: 164, column: 28, scope: !6363)
!6376 = !DILocation(line: 164, column: 43, scope: !6363)
!6377 = !DILocation(line: 164, column: 2, scope: !6363)
!6378 = distinct !DISubprogram(name: "kbs_destroy", scope: !637, file: !637, line: 131, type: !6168, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !6379)
!6379 = !{!6380}
!6380 = !DILocalVariable(name: "bs", arg: 1, scope: !6378, file: !637, line: 131, type: !635)
!6381 = !DILocation(line: 131, column: 43, scope: !6378)
!6382 = !DILocation(line: 133, column: 7, scope: !6378)
!6383 = !DILocation(line: 133, column: 2, scope: !6378)
!6384 = !DILocation(line: 134, column: 1, scope: !6378)
!6385 = !DISubprogram(name: "extsort_shift", scope: !106, file: !106, line: 53, type: !6386, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6386 = !DISubroutineType(types: !6387)
!6387 = !{!182, !646}
!6388 = !DISubprogram(name: "fclose", scope: !1979, file: !1979, line: 178, type: !1980, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6389 = distinct !DISubprogram(name: "diff_sites_destroy", scope: !2, file: !2, line: 177, type: !1804, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !20, retainedNodes: !6390)
!6390 = !{!6391}
!6391 = !DILocalVariable(name: "args", arg: 1, scope: !6389, file: !2, line: 177, type: !113)
!6392 = !DILocation(line: 177, column: 40, scope: !6389)
!6393 = !DILocation(line: 179, column: 17, scope: !6389)
!6394 = !DILocation(line: 179, column: 23, scope: !6389)
!6395 = !DILocation(line: 179, column: 5, scope: !6389)
!6396 = !DILocation(line: 180, column: 21, scope: !6389)
!6397 = !DILocation(line: 180, column: 27, scope: !6389)
!6398 = !DILocation(line: 180, column: 5, scope: !6389)
!6399 = !DILocation(line: 181, column: 1, scope: !6389)
!6400 = !DISubprogram(name: "bcf_sr_destroy", scope: !23, file: !23, line: 204, type: !6401, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6401 = !DISubroutineType(types: !6402)
!6402 = !{null, !118}
!6403 = !DISubprogram(name: "extsort_destroy", scope: !106, file: !106, line: 54, type: !5609, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)

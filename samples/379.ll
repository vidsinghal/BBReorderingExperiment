; ModuleID = 'samples/379.bc'
source_filename = "pandas/_libs/indexing.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PyModuleDef = type { %struct.PyModuleDef_Base, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr }
%struct.PyModuleDef_Base = type { %struct._object, ptr, i64, ptr }
%struct._object = type { i64, ptr }
%struct.PyMethodDef = type { ptr, ptr, i32, ptr }
%struct.PyModuleDef_Slot = type { i32, ptr }
%struct._typeobject = type { %struct.PyVarObject, ptr, i64, i64, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr }
%struct.PyVarObject = type { %struct._object, i64 }
%struct.__Pyx_StringTabEntry = type { ptr, ptr, i64, ptr, i8, i8, i8 }
%struct.PyGetSetDef = type { ptr, ptr, ptr, ptr, ptr }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct.__Pyx_CodeObjectCache = type { i32, i32, ptr }
%struct._ts = type { ptr, ptr, ptr, ptr, i32, i8, i8, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct._err_stackitem, ptr, ptr, i32, ptr, i64, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, i64, i64 }
%struct._err_stackitem = type { ptr, ptr, ptr, ptr }
%struct._frame = type { %struct.PyVarObject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, ptr, i32, i32, i32, i8, [20 x %struct.PyTryBlock], [1 x ptr] }
%struct.PyTryBlock = type { i32, i32, i32 }
%struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase = type { %struct._object, i64, ptr, ptr }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x ptr] }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, ptr }
%struct.anon = type { i32 }
%struct.PyDictObject = type { %struct._object, i64, i64, ptr, ptr }
%struct.PyMethodObject = type { %struct._object, ptr, ptr, ptr, ptr }
%struct.PyCFunctionObject = type { %struct._object, ptr, ptr, ptr, ptr, ptr }
%struct.PyFunctionObject = type { %struct._object, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.PyCodeObject = type { %struct._object, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.PyFloatObject = type { %struct._object, double }
%struct.PyListObject = type { %struct.PyVarObject, ptr, i64 }
%struct.PyNumberMethods = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.__Pyx_CodeObjectCacheEntry = type { ptr, i32 }

@__pyx_module_is_main_pandas___libs__indexing = global i32 0, align 4, !dbg !0
@__pyx_moduledef = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, ptr null }, ptr null, i64 0, ptr null }, ptr @.str, ptr null, i64 0, ptr @__pyx_methods, ptr @__pyx_moduledef_slots, ptr null, ptr null, ptr null }, align 8, !dbg !492
@.str = private unnamed_addr constant [9 x i8] c"indexing\00", align 1, !dbg !487
@__pyx_methods = internal global [1 x %struct.PyMethodDef] zeroinitializer, align 16, !dbg !521
@__pyx_moduledef_slots = internal global [3 x %struct.PyModuleDef_Slot] [%struct.PyModuleDef_Slot { i32 1, ptr @__pyx_pymod_create }, %struct.PyModuleDef_Slot { i32 2, ptr @__pyx_pymod_exec_indexing }, %struct.PyModuleDef_Slot zeroinitializer], align 16, !dbg !524
@__pyx_m = internal global ptr null, align 8, !dbg !577
@.str.1 = private unnamed_addr constant [5 x i8] c"name\00", align 1, !dbg !530
@.str.2 = private unnamed_addr constant [7 x i8] c"loader\00", align 1, !dbg !535
@.str.3 = private unnamed_addr constant [11 x i8] c"__loader__\00", align 1, !dbg !540
@.str.4 = private unnamed_addr constant [7 x i8] c"origin\00", align 1, !dbg !545
@.str.5 = private unnamed_addr constant [9 x i8] c"__file__\00", align 1, !dbg !547
@.str.6 = private unnamed_addr constant [7 x i8] c"parent\00", align 1, !dbg !549
@.str.7 = private unnamed_addr constant [12 x i8] c"__package__\00", align 1, !dbg !551
@.str.8 = private unnamed_addr constant [27 x i8] c"submodule_search_locations\00", align 1, !dbg !556
@.str.9 = private unnamed_addr constant [9 x i8] c"__path__\00", align 1, !dbg !561
@__Pyx_check_single_interpreter.main_interpreter_id = internal global i64 -1, align 8, !dbg !563
@PyExc_ImportError = external global ptr, align 8
@.str.10 = private unnamed_addr constant [95 x i8] c"Interpreter change detected - this module can only be loaded into one interpreter per process.\00", align 1, !dbg !572
@_Py_NoneStruct = external global %struct._object, align 8
@PyExc_AttributeError = external global ptr, align 8
@PyExc_RuntimeError = external global ptr, align 8
@.str.11 = private unnamed_addr constant [81 x i8] c"Module 'indexing' has already been imported. Re-initialisation is not supported.\00", align 1, !dbg !579
@__pyx_f = internal global [2 x ptr] [ptr @.str.20, ptr @.str.21], align 16, !dbg !623
@PyFrame_Type = external global %struct._typeobject, align 8
@__pyx_pyframe_localsplus_offset = internal global i64 0, align 8, !dbg !628
@__pyx_empty_tuple = internal global ptr null, align 8, !dbg !630
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1, !dbg !584
@__pyx_empty_bytes = internal global ptr null, align 8, !dbg !632
@__pyx_empty_unicode = internal global ptr null, align 8, !dbg !634
@__pyx_d = internal global ptr null, align 8, !dbg !636
@.str.13 = private unnamed_addr constant [9 x i8] c"builtins\00", align 1, !dbg !587
@__pyx_b = internal global ptr null, align 8, !dbg !638
@.str.14 = private unnamed_addr constant [15 x i8] c"cython_runtime\00", align 1, !dbg !589
@__pyx_cython_runtime = internal global ptr null, align 8, !dbg !640
@.str.15 = private unnamed_addr constant [13 x i8] c"__builtins__\00", align 1, !dbg !594
@__pyx_n_s_name_2 = internal global ptr null, align 8, !dbg !823
@__pyx_n_s_main = internal global ptr null, align 8, !dbg !825
@.str.16 = private unnamed_addr constant [22 x i8] c"pandas._libs.indexing\00", align 1, !dbg !599
@__pyx_mdef_6pandas_5_libs_8indexing_1__pyx_unpickle_NDFrameIndexerBase = internal global %struct.PyMethodDef { ptr @.str.62, ptr @__pyx_pw_6pandas_5_libs_8indexing_1__pyx_unpickle_NDFrameIndexerBase, i32 3, ptr null }, align 8, !dbg !1044
@__pyx_n_s_pandas__libs_indexing = internal global ptr null, align 8, !dbg !1099
@__pyx_n_s_pyx_unpickle_NDFrameIndexerBas = internal global ptr null, align 8, !dbg !1101
@__pyx_n_s_test = internal global ptr null, align 8, !dbg !1103
@.str.17 = private unnamed_addr constant [27 x i8] c"init pandas._libs.indexing\00", align 1, !dbg !604
@.str.18 = private unnamed_addr constant [6 x i8] c"%d.%d\00", align 1, !dbg !606
@.str.19 = private unnamed_addr constant [76 x i8] c"compiletime version %s of module '%.100s' does not match runtime version %s\00", align 1, !dbg !611
@.str.20 = private unnamed_addr constant [26 x i8] c"pandas/_libs/indexing.pyx\00", align 1, !dbg !616
@.str.21 = private unnamed_addr constant [13 x i8] c"stringsource\00", align 1, !dbg !621
@__pyx_string_tab = internal global [32 x %struct.__Pyx_StringTabEntry] [%struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, ptr @__pyx_k_Incompatible_checksums_0x_x_vs_0, i64 88, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_NDFrameIndexerBase, ptr @__pyx_k_NDFrameIndexerBase, i64 19, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_u_NDFrameIndexer_does_not_support, ptr @__pyx_k_NDFrameIndexer_does_not_support, i64 62, ptr null, i8 1, i8 0, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_PickleError, ptr @__pyx_k_PickleError, i64 12, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_ValueError, ptr @__pyx_k_ValueError, i64 11, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_cline_in_traceback, ptr @__pyx_k_cline_in_traceback, i64 19, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_dict, ptr @__pyx_k_dict, i64 9, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_getstate, ptr @__pyx_k_getstate, i64 13, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_import, ptr @__pyx_k_import, i64 11, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_main, ptr @__pyx_k_main, i64 9, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_name, ptr @__pyx_k_name, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_name_2, ptr @__pyx_k_name_2, i64 9, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_ndim, ptr @__pyx_k_ndim, i64 5, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_new, ptr @__pyx_k_new, i64 8, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_obj, ptr @__pyx_k_obj, i64 4, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pandas__libs_indexing, ptr @__pyx_k_pandas__libs_indexing, i64 22, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pickle, ptr @__pyx_k_pickle, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_PickleError, ptr @__pyx_k_pyx_PickleError, i64 18, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_checksum, ptr @__pyx_k_pyx_checksum, i64 15, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_result, ptr @__pyx_k_pyx_result, i64 13, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_state, ptr @__pyx_k_pyx_state, i64 12, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_type, ptr @__pyx_k_pyx_type, i64 11, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_pyx_unpickle_NDFrameIndexerBas, ptr @__pyx_k_pyx_unpickle_NDFrameIndexerBas, i64 34, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_reduce, ptr @__pyx_k_reduce, i64 11, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_reduce_cython, ptr @__pyx_k_reduce_cython, i64 18, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_reduce_ex, ptr @__pyx_k_reduce_ex, i64 14, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_setstate, ptr @__pyx_k_setstate, i64 13, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_setstate_cython, ptr @__pyx_k_setstate_cython, i64 20, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_kp_s_stringsource, ptr @__pyx_k_stringsource, i64 13, ptr null, i8 0, i8 1, i8 0 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_test, ptr @__pyx_k_test, i64 9, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry { ptr @__pyx_n_s_update, ptr @__pyx_k_update, i64 7, ptr null, i8 0, i8 1, i8 1 }, %struct.__Pyx_StringTabEntry zeroinitializer], align 16, !dbg !642
@__pyx_filename = internal global ptr null, align 8, !dbg !807
@__pyx_lineno = internal global i32 0, align 4, !dbg !809
@__pyx_clineno = internal global i32 0, align 4, !dbg !811
@__pyx_int_2 = internal global ptr null, align 8, !dbg !813
@__pyx_int_68575658 = internal global ptr null, align 8, !dbg !815
@__pyx_int_87510373 = internal global ptr null, align 8, !dbg !817
@__pyx_int_202888320 = internal global ptr null, align 8, !dbg !819
@__pyx_int_neg_1 = internal global ptr null, align 8, !dbg !821
@__pyx_kp_s_Incompatible_checksums_0x_x_vs_0 = internal global ptr null, align 8, !dbg !658
@__pyx_k_Incompatible_checksums_0x_x_vs_0 = internal constant [88 x i8] c"Incompatible checksums (0x%x vs (0x41661aa, 0xc17d480, 0x5374d65) = (_ndim, name, obj))\00", align 16, !dbg !660
@__pyx_n_s_NDFrameIndexerBase = internal global ptr null, align 8, !dbg !665
@__pyx_k_NDFrameIndexerBase = internal constant [19 x i8] c"NDFrameIndexerBase\00", align 16, !dbg !667
@__pyx_kp_u_NDFrameIndexer_does_not_support = internal global ptr null, align 8, !dbg !672
@__pyx_k_NDFrameIndexer_does_not_support = internal constant [62 x i8] c"NDFrameIndexer does not support NDFrame objects with ndim > 2\00", align 16, !dbg !674
@__pyx_n_s_PickleError = internal global ptr null, align 8, !dbg !679
@__pyx_k_PickleError = internal constant [12 x i8] c"PickleError\00", align 1, !dbg !681
@__pyx_n_s_ValueError = internal global ptr null, align 8, !dbg !684
@__pyx_k_ValueError = internal constant [11 x i8] c"ValueError\00", align 1, !dbg !686
@__pyx_n_s_cline_in_traceback = internal global ptr null, align 8, !dbg !689
@__pyx_k_cline_in_traceback = internal constant [19 x i8] c"cline_in_traceback\00", align 16, !dbg !691
@__pyx_n_s_dict = internal global ptr null, align 8, !dbg !693
@__pyx_k_dict = internal constant [9 x i8] c"__dict__\00", align 1, !dbg !695
@__pyx_n_s_getstate = internal global ptr null, align 8, !dbg !698
@__pyx_k_getstate = internal constant [13 x i8] c"__getstate__\00", align 1, !dbg !700
@__pyx_n_s_import = internal global ptr null, align 8, !dbg !703
@__pyx_k_import = internal constant [11 x i8] c"__import__\00", align 1, !dbg !705
@__pyx_k_main = internal constant [9 x i8] c"__main__\00", align 1, !dbg !707
@__pyx_n_s_name = internal global ptr null, align 8, !dbg !709
@__pyx_k_name = internal constant [5 x i8] c"name\00", align 1, !dbg !711
@__pyx_k_name_2 = internal constant [9 x i8] c"__name__\00", align 1, !dbg !714
@__pyx_n_s_ndim = internal global ptr null, align 8, !dbg !716
@__pyx_k_ndim = internal constant [5 x i8] c"ndim\00", align 1, !dbg !718
@__pyx_n_s_new = internal global ptr null, align 8, !dbg !720
@__pyx_k_new = internal constant [8 x i8] c"__new__\00", align 1, !dbg !722
@__pyx_n_s_obj = internal global ptr null, align 8, !dbg !727
@__pyx_k_obj = internal constant [4 x i8] c"obj\00", align 1, !dbg !729
@__pyx_k_pandas__libs_indexing = internal constant [22 x i8] c"pandas._libs.indexing\00", align 16, !dbg !734
@__pyx_n_s_pickle = internal global ptr null, align 8, !dbg !737
@__pyx_k_pickle = internal constant [7 x i8] c"pickle\00", align 1, !dbg !739
@__pyx_n_s_pyx_PickleError = internal global ptr null, align 8, !dbg !742
@__pyx_k_pyx_PickleError = internal constant [18 x i8] c"__pyx_PickleError\00", align 16, !dbg !744
@__pyx_n_s_pyx_checksum = internal global ptr null, align 8, !dbg !749
@__pyx_k_pyx_checksum = internal constant [15 x i8] c"__pyx_checksum\00", align 1, !dbg !751
@__pyx_n_s_pyx_result = internal global ptr null, align 8, !dbg !754
@__pyx_k_pyx_result = internal constant [13 x i8] c"__pyx_result\00", align 1, !dbg !756
@__pyx_n_s_pyx_state = internal global ptr null, align 8, !dbg !758
@__pyx_k_pyx_state = internal constant [12 x i8] c"__pyx_state\00", align 1, !dbg !760
@__pyx_n_s_pyx_type = internal global ptr null, align 8, !dbg !762
@__pyx_k_pyx_type = internal constant [11 x i8] c"__pyx_type\00", align 1, !dbg !764
@__pyx_k_pyx_unpickle_NDFrameIndexerBas = internal constant [34 x i8] c"__pyx_unpickle_NDFrameIndexerBase\00", align 16, !dbg !766
@__pyx_n_s_reduce = internal global ptr null, align 8, !dbg !771
@__pyx_k_reduce = internal constant [11 x i8] c"__reduce__\00", align 1, !dbg !773
@__pyx_n_s_reduce_cython = internal global ptr null, align 8, !dbg !775
@__pyx_k_reduce_cython = internal constant [18 x i8] c"__reduce_cython__\00", align 16, !dbg !777
@__pyx_n_s_reduce_ex = internal global ptr null, align 8, !dbg !779
@__pyx_k_reduce_ex = internal constant [14 x i8] c"__reduce_ex__\00", align 1, !dbg !781
@__pyx_n_s_setstate = internal global ptr null, align 8, !dbg !786
@__pyx_k_setstate = internal constant [13 x i8] c"__setstate__\00", align 1, !dbg !788
@__pyx_n_s_setstate_cython = internal global ptr null, align 8, !dbg !790
@__pyx_k_setstate_cython = internal constant [20 x i8] c"__setstate_cython__\00", align 16, !dbg !792
@__pyx_kp_s_stringsource = internal global ptr null, align 8, !dbg !797
@__pyx_k_stringsource = internal constant [13 x i8] c"stringsource\00", align 1, !dbg !799
@__pyx_k_test = internal constant [9 x i8] c"__test__\00", align 1, !dbg !801
@__pyx_n_s_update = internal global ptr null, align 8, !dbg !803
@__pyx_k_update = internal constant [7 x i8] c"update\00", align 1, !dbg !805
@__pyx_builtin_ValueError = internal global ptr null, align 8, !dbg !832
@PyExc_NameError = external global ptr, align 8
@.str.22 = private unnamed_addr constant [25 x i8] c"name '%U' is not defined\00", align 1, !dbg !827
@__pyx_tuple_ = internal global ptr null, align 8, !dbg !834
@__pyx_tuple__2 = internal global ptr null, align 8, !dbg !836
@__pyx_tuple__3 = internal global ptr null, align 8, !dbg !838
@__pyx_codeobj__4 = internal global ptr null, align 8, !dbg !840
@__pyx_type_6pandas_5_libs_8indexing_NDFrameIndexerBase = internal global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, ptr null }, i64 0 }, ptr @.str.23, i64 40, i64 0, ptr @__pyx_tp_dealloc_6pandas_5_libs_8indexing_NDFrameIndexerBase, i64 0, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i64 279552, ptr @.str.24, ptr @__pyx_tp_traverse_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr @__pyx_tp_clear_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr null, i64 0, ptr null, ptr null, ptr @__pyx_methods_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr null, ptr @__pyx_getsets_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr null, ptr null, ptr null, ptr null, i64 0, ptr @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_1__init__, ptr null, ptr @__pyx_tp_new_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null }, align 8, !dbg !850
@__pyx_ptype_6pandas_5_libs_8indexing_NDFrameIndexerBase = internal global ptr null, align 8, !dbg !1040
@.str.23 = private unnamed_addr constant [41 x i8] c"pandas._libs.indexing.NDFrameIndexerBase\00", align 1, !dbg !842
@.str.24 = private unnamed_addr constant [88 x i8] c"\0A    A base class for _NDFrameIndexer for fast instantiation and attribute access.\0A    \00", align 1, !dbg !847
@__pyx_methods_6pandas_5_libs_8indexing_NDFrameIndexerBase = internal global [3 x %struct.PyMethodDef] [%struct.PyMethodDef { ptr @.str.25, ptr @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3__reduce_cython__, i32 4, ptr null }, %struct.PyMethodDef { ptr @.str.26, ptr @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_5__setstate_cython__, i32 8, ptr null }, %struct.PyMethodDef zeroinitializer], align 16, !dbg !858
@__pyx_getsets_6pandas_5_libs_8indexing_NDFrameIndexerBase = internal global [4 x %struct.PyGetSetDef] [%struct.PyGetSetDef { ptr @.str.40, ptr @__pyx_getprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_ndim, ptr null, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.1, ptr @__pyx_getprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_name, ptr @__pyx_setprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_name, ptr null, ptr null }, %struct.PyGetSetDef { ptr @.str.41, ptr @__pyx_getprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_obj, ptr @__pyx_setprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_obj, ptr null, ptr null }, %struct.PyGetSetDef zeroinitializer], align 16, !dbg !942
@.str.25 = private unnamed_addr constant [18 x i8] c"__reduce_cython__\00", align 1, !dbg !852
@.str.26 = private unnamed_addr constant [20 x i8] c"__setstate_cython__\00", align 1, !dbg !855
@__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_version = internal global i64 0, align 8, !dbg !861
@__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_cached_value = internal global ptr null, align 8, !dbg !890
@__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_version.27 = internal global i64 0, align 8, !dbg !892
@__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_cached_value.28 = internal global ptr null, align 8, !dbg !894
@.str.29 = private unnamed_addr constant [59 x i8] c"pandas._libs.indexing.NDFrameIndexerBase.__reduce_cython__\00", align 1, !dbg !896
@PyBaseObject_Type = external global %struct._typeobject, align 8
@PyTuple_Type = external global %struct._typeobject, align 8
@PyExc_TypeError = external global ptr, align 8
@.str.30 = private unnamed_addr constant [27 x i8] c"Expected %.16s, got %.200s\00", align 1, !dbg !901
@.str.31 = private unnamed_addr constant [6 x i8] c"tuple\00", align 1, !dbg !903
@.str.32 = private unnamed_addr constant [61 x i8] c"pandas._libs.indexing.NDFrameIndexerBase.__setstate_cython__\00", align 1, !dbg !905
@.str.33 = private unnamed_addr constant [39 x i8] c"'NoneType' object is not subscriptable\00", align 1, !dbg !910
@PyUnicode_Type = external global %struct._typeobject, align 8
@.str.34 = private unnamed_addr constant [8 x i8] c"unicode\00", align 1, !dbg !915
@.str.35 = private unnamed_addr constant [39 x i8] c"object of type 'NoneType' has no len()\00", align 1, !dbg !918
@PyMethod_Type = external global %struct._typeobject, align 8
@.str.36 = private unnamed_addr constant [67 x i8] c"pandas._libs.indexing.__pyx_unpickle_NDFrameIndexerBase__set_state\00", align 1, !dbg !920
@PyLong_Type = external global %struct._typeobject, align 8
@.str.37 = private unnamed_addr constant [41 x i8] c"hasattr(): attribute name must be string\00", align 1, !dbg !925
@PyFunction_Type = external global %struct._typeobject, align 8
@PyCFunction_Type = external global %struct._typeobject, align 8
@.str.38 = private unnamed_addr constant [31 x i8] c" while calling a Python object\00", align 1, !dbg !927
@PyExc_SystemError = external global ptr, align 8
@.str.39 = private unnamed_addr constant [43 x i8] c"NULL result without error in PyObject_Call\00", align 1, !dbg !932
@.str.40 = private unnamed_addr constant [5 x i8] c"ndim\00", align 1, !dbg !937
@.str.41 = private unnamed_addr constant [4 x i8] c"obj\00", align 1, !dbg !939
@.str.42 = private unnamed_addr constant [54 x i8] c"pandas._libs.indexing.NDFrameIndexerBase.ndim.__get__\00", align 1, !dbg !945
@_Py_TrueStruct = external global %struct._longobject, align 8
@_Py_FalseStruct = external global %struct._longobject, align 8
@PyFloat_Type = external global %struct._typeobject, align 8
@PyTraceBack_Type = external global %struct._typeobject, align 8
@.str.43 = private unnamed_addr constant [41 x i8] c"raise: arg 3 must be a traceback or None\00", align 1, !dbg !950
@.str.44 = private unnamed_addr constant [49 x i8] c"instance exception may not have a separate value\00", align 1, !dbg !952
@.str.45 = private unnamed_addr constant [69 x i8] c"calling %R should have returned an instance of BaseException, not %R\00", align 1, !dbg !957
@.str.46 = private unnamed_addr constant [59 x i8] c"raise: exception class must be a subclass of BaseException\00", align 1, !dbg !962
@.str.47 = private unnamed_addr constant [48 x i8] c"exception causes must derive from BaseException\00", align 1, !dbg !964
@.str.48 = private unnamed_addr constant [54 x i8] c"pandas._libs.indexing.NDFrameIndexerBase.name.__set__\00", align 1, !dbg !969
@__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_1__init__.__pyx_pyargnames = internal global [3 x ptr] [ptr @__pyx_n_s_name, ptr @__pyx_n_s_obj, ptr null], align 16, !dbg !971
@.str.49 = private unnamed_addr constant [9 x i8] c"__init__\00", align 1, !dbg !997
@.str.50 = private unnamed_addr constant [50 x i8] c"pandas._libs.indexing.NDFrameIndexerBase.__init__\00", align 1, !dbg !999
@.str.51 = private unnamed_addr constant [9 x i8] c"at least\00", align 1, !dbg !1004
@.str.52 = private unnamed_addr constant [8 x i8] c"at most\00", align 1, !dbg !1006
@.str.53 = private unnamed_addr constant [8 x i8] c"exactly\00", align 1, !dbg !1008
@.str.54 = private unnamed_addr constant [60 x i8] c"%.200s() takes %.8s %zd positional argument%.1s (%zd given)\00", align 1, !dbg !1010
@.str.55 = private unnamed_addr constant [2 x i8] c"s\00", align 1, !dbg !1015
@.str.56 = private unnamed_addr constant [34 x i8] c"%.200s() keywords must be strings\00", align 1, !dbg !1018
@.str.57 = private unnamed_addr constant [45 x i8] c"%s() got an unexpected keyword argument '%U'\00", align 1, !dbg !1021
@.str.58 = private unnamed_addr constant [51 x i8] c"%s() got multiple values for keyword argument '%U'\00", align 1, !dbg !1026
@.str.59 = private unnamed_addr constant [20 x i8] c"Missing type object\00", align 1, !dbg !1031
@.str.60 = private unnamed_addr constant [67 x i8] c"Argument '%.200s' has incorrect type (expected %.200s, got %.200s)\00", align 1, !dbg !1033
@.str.61 = private unnamed_addr constant [37 x i8] c"Unable to initialize pickling for %s\00", align 1, !dbg !1035
@.str.62 = private unnamed_addr constant [34 x i8] c"__pyx_unpickle_NDFrameIndexerBase\00", align 1, !dbg !1042
@__pyx_pw_6pandas_5_libs_8indexing_1__pyx_unpickle_NDFrameIndexerBase.__pyx_pyargnames = internal global [4 x ptr] [ptr @__pyx_n_s_pyx_type, ptr @__pyx_n_s_pyx_checksum, ptr @__pyx_n_s_pyx_state, ptr null], align 16, !dbg !1046
@.str.63 = private unnamed_addr constant [56 x i8] c"pandas._libs.indexing.__pyx_unpickle_NDFrameIndexerBase\00", align 1, !dbg !1071
@PyExc_OverflowError = external global ptr, align 8
@.str.64 = private unnamed_addr constant [35 x i8] c"value too large to convert to long\00", align 1, !dbg !1076
@.str.65 = private unnamed_addr constant [37 x i8] c"can't convert negative value to long\00", align 1, !dbg !1081
@.str.66 = private unnamed_addr constant [4 x i8] c"int\00", align 1, !dbg !1083
@.str.67 = private unnamed_addr constant [23 x i8] c"an integer is required\00", align 1, !dbg !1085
@PyExc_DeprecationWarning = external global ptr, align 8
@.str.68 = private unnamed_addr constant [168 x i8] c"__int__ returned non-int (type %.200s).  The ability to return an instance of a strict subclass of int is deprecated, and may be removed in a future version of Python.\00", align 1, !dbg !1090
@.str.69 = private unnamed_addr constant [41 x i8] c"__%.4s__ returned non-%.4s (type %.200s)\00", align 1, !dbg !1095
@.str.70 = private unnamed_addr constant [22 x i8] c"cannot import name %S\00", align 1, !dbg !1097
@__Pyx_CLineForTraceback.__pyx_dict_version = internal global i64 0, align 8, !dbg !1105
@__Pyx_CLineForTraceback.__pyx_dict_cached_value = internal global ptr null, align 8, !dbg !1209
@__pyx_code_cache = internal global %struct.__Pyx_CodeObjectCache zeroinitializer, align 8, !dbg !1211
@.str.71 = private unnamed_addr constant [11 x i8] c"%s (%s:%d)\00", align 1, !dbg !1218
@__pyx_cfilenm = internal global ptr @.str.72, align 8, !dbg !1225
@.str.72 = private unnamed_addr constant [24 x i8] c"pandas/_libs/indexing.c\00", align 1, !dbg !1220

; Function Attrs: nounwind uwtable
define ptr @PyInit_indexing() #0 !dbg !1233 {
entry:
  %call = call ptr @PyModuleDef_Init(ptr noundef @__pyx_moduledef), !dbg !1234
  ret ptr %call, !dbg !1235
}

declare !dbg !1236 ptr @PyModuleDef_Init(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pymod_create(ptr noundef %spec, ptr noundef %def) #0 !dbg !1240 {
entry:
  %retval = alloca ptr, align 8
  %spec.addr = alloca ptr, align 8
  %def.addr = alloca ptr, align 8
  %module = alloca ptr, align 8
  %moddict = alloca ptr, align 8
  %modname = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %spec, ptr %spec.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %spec.addr, metadata !1246, metadata !DIExpression()), !dbg !1256
  store ptr %def, ptr %def.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %def.addr, metadata !1247, metadata !DIExpression()), !dbg !1257
  call void @llvm.lifetime.start.p0(i64 8, ptr %module) #8, !dbg !1258
  tail call void @llvm.dbg.declare(metadata ptr %module, metadata !1248, metadata !DIExpression()), !dbg !1259
  store ptr null, ptr %module, align 8, !dbg !1259, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %moddict) #8, !dbg !1258
  tail call void @llvm.dbg.declare(metadata ptr %moddict, metadata !1249, metadata !DIExpression()), !dbg !1260
  call void @llvm.lifetime.start.p0(i64 8, ptr %modname) #8, !dbg !1258
  tail call void @llvm.dbg.declare(metadata ptr %modname, metadata !1250, metadata !DIExpression()), !dbg !1261
  %call = call i32 @__Pyx_check_single_interpreter(), !dbg !1262
  %tobool = icmp ne i32 %call, 0, !dbg !1262
  br i1 %tobool, label %if.then, label %if.end, !dbg !1264

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !1265
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1265

if.end:                                           ; preds = %entry
  %0 = load ptr, ptr @__pyx_m, align 8, !dbg !1266, !tbaa !1252
  %tobool1 = icmp ne ptr %0, null, !dbg !1266
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !1268

if.then2:                                         ; preds = %if.end
  %1 = load ptr, ptr @__pyx_m, align 8, !dbg !1269, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %1), !dbg !1269
  %2 = load ptr, ptr @__pyx_m, align 8, !dbg !1269, !tbaa !1252
  store ptr %2, ptr %retval, align 8, !dbg !1270
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1270

if.end3:                                          ; preds = %if.end
  %3 = load ptr, ptr %spec.addr, align 8, !dbg !1271, !tbaa !1252
  %call4 = call ptr @PyObject_GetAttrString(ptr noundef %3, ptr noundef @.str.1), !dbg !1272
  store ptr %call4, ptr %modname, align 8, !dbg !1273, !tbaa !1252
  %4 = load ptr, ptr %modname, align 8, !dbg !1274, !tbaa !1252
  %tobool5 = icmp ne ptr %4, null, !dbg !1274
  %lnot = xor i1 %tobool5, true, !dbg !1274
  %lnot6 = xor i1 %lnot, true, !dbg !1274
  %lnot7 = xor i1 %lnot6, true, !dbg !1274
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !1274
  %conv = sext i32 %lnot.ext to i64, !dbg !1274
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !1274
  %tobool8 = icmp ne i64 %expval, 0, !dbg !1274
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !1276

if.then9:                                         ; preds = %if.end3
  br label %bad, !dbg !1277

if.end10:                                         ; preds = %if.end3
  %5 = load ptr, ptr %modname, align 8, !dbg !1278, !tbaa !1252
  %call11 = call ptr @PyModule_NewObject(ptr noundef %5), !dbg !1279
  store ptr %call11, ptr %module, align 8, !dbg !1280, !tbaa !1252
  %6 = load ptr, ptr %modname, align 8, !dbg !1281, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %6), !dbg !1281
  %7 = load ptr, ptr %module, align 8, !dbg !1282, !tbaa !1252
  %tobool12 = icmp ne ptr %7, null, !dbg !1282
  %lnot13 = xor i1 %tobool12, true, !dbg !1282
  %lnot15 = xor i1 %lnot13, true, !dbg !1282
  %lnot17 = xor i1 %lnot15, true, !dbg !1282
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !1282
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !1282
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0), !dbg !1282
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !1282
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !1284

if.then22:                                        ; preds = %if.end10
  br label %bad, !dbg !1285

if.end23:                                         ; preds = %if.end10
  %8 = load ptr, ptr %module, align 8, !dbg !1286, !tbaa !1252
  %call24 = call ptr @PyModule_GetDict(ptr noundef %8), !dbg !1287
  store ptr %call24, ptr %moddict, align 8, !dbg !1288, !tbaa !1252
  %9 = load ptr, ptr %moddict, align 8, !dbg !1289, !tbaa !1252
  %tobool25 = icmp ne ptr %9, null, !dbg !1289
  %lnot26 = xor i1 %tobool25, true, !dbg !1289
  %lnot28 = xor i1 %lnot26, true, !dbg !1289
  %lnot30 = xor i1 %lnot28, true, !dbg !1289
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !1289
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !1289
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 0), !dbg !1289
  %tobool34 = icmp ne i64 %expval33, 0, !dbg !1289
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !1291

if.then35:                                        ; preds = %if.end23
  br label %bad, !dbg !1292

if.end36:                                         ; preds = %if.end23
  %10 = load ptr, ptr %spec.addr, align 8, !dbg !1293, !tbaa !1252
  %11 = load ptr, ptr %moddict, align 8, !dbg !1293, !tbaa !1252
  %call37 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %10, ptr noundef %11, ptr noundef @.str.2, ptr noundef @.str.3, i32 noundef 1), !dbg !1293
  %cmp = icmp slt i32 %call37, 0, !dbg !1293
  %lnot39 = xor i1 %cmp, true, !dbg !1293
  %lnot41 = xor i1 %lnot39, true, !dbg !1293
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !1293
  %conv43 = sext i32 %lnot.ext42 to i64, !dbg !1293
  %expval44 = call i64 @llvm.expect.i64(i64 %conv43, i64 0), !dbg !1293
  %tobool45 = icmp ne i64 %expval44, 0, !dbg !1293
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !1295

if.then46:                                        ; preds = %if.end36
  br label %bad, !dbg !1296

if.end47:                                         ; preds = %if.end36
  %12 = load ptr, ptr %spec.addr, align 8, !dbg !1297, !tbaa !1252
  %13 = load ptr, ptr %moddict, align 8, !dbg !1297, !tbaa !1252
  %call48 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %12, ptr noundef %13, ptr noundef @.str.4, ptr noundef @.str.5, i32 noundef 1), !dbg !1297
  %cmp49 = icmp slt i32 %call48, 0, !dbg !1297
  %lnot51 = xor i1 %cmp49, true, !dbg !1297
  %lnot53 = xor i1 %lnot51, true, !dbg !1297
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !1297
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !1297
  %expval56 = call i64 @llvm.expect.i64(i64 %conv55, i64 0), !dbg !1297
  %tobool57 = icmp ne i64 %expval56, 0, !dbg !1297
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !1299

if.then58:                                        ; preds = %if.end47
  br label %bad, !dbg !1300

if.end59:                                         ; preds = %if.end47
  %14 = load ptr, ptr %spec.addr, align 8, !dbg !1301, !tbaa !1252
  %15 = load ptr, ptr %moddict, align 8, !dbg !1301, !tbaa !1252
  %call60 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %14, ptr noundef %15, ptr noundef @.str.6, ptr noundef @.str.7, i32 noundef 1), !dbg !1301
  %cmp61 = icmp slt i32 %call60, 0, !dbg !1301
  %lnot63 = xor i1 %cmp61, true, !dbg !1301
  %lnot65 = xor i1 %lnot63, true, !dbg !1301
  %lnot.ext66 = zext i1 %lnot65 to i32, !dbg !1301
  %conv67 = sext i32 %lnot.ext66 to i64, !dbg !1301
  %expval68 = call i64 @llvm.expect.i64(i64 %conv67, i64 0), !dbg !1301
  %tobool69 = icmp ne i64 %expval68, 0, !dbg !1301
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !1303

if.then70:                                        ; preds = %if.end59
  br label %bad, !dbg !1304

if.end71:                                         ; preds = %if.end59
  %16 = load ptr, ptr %spec.addr, align 8, !dbg !1305, !tbaa !1252
  %17 = load ptr, ptr %moddict, align 8, !dbg !1305, !tbaa !1252
  %call72 = call i32 @__Pyx_copy_spec_to_module(ptr noundef %16, ptr noundef %17, ptr noundef @.str.8, ptr noundef @.str.9, i32 noundef 0), !dbg !1305
  %cmp73 = icmp slt i32 %call72, 0, !dbg !1305
  %lnot75 = xor i1 %cmp73, true, !dbg !1305
  %lnot77 = xor i1 %lnot75, true, !dbg !1305
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !1305
  %conv79 = sext i32 %lnot.ext78 to i64, !dbg !1305
  %expval80 = call i64 @llvm.expect.i64(i64 %conv79, i64 0), !dbg !1305
  %tobool81 = icmp ne i64 %expval80, 0, !dbg !1305
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !1307

if.then82:                                        ; preds = %if.end71
  br label %bad, !dbg !1308

if.end83:                                         ; preds = %if.end71
  %18 = load ptr, ptr %module, align 8, !dbg !1309, !tbaa !1252
  store ptr %18, ptr %retval, align 8, !dbg !1310
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1310

bad:                                              ; preds = %if.then82, %if.then70, %if.then58, %if.then46, %if.then35, %if.then22, %if.then9
  tail call void @llvm.dbg.label(metadata !1251), !dbg !1311
  %19 = load ptr, ptr %module, align 8, !dbg !1312, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %19), !dbg !1312
  store ptr null, ptr %retval, align 8, !dbg !1313
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1313

cleanup:                                          ; preds = %bad, %if.end83, %if.then2, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %modname) #8, !dbg !1314
  call void @llvm.lifetime.end.p0(i64 8, ptr %moddict) #8, !dbg !1314
  call void @llvm.lifetime.end.p0(i64 8, ptr %module) #8, !dbg !1314
  %20 = load ptr, ptr %retval, align 8, !dbg !1314
  ret ptr %20, !dbg !1314
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pymod_exec_indexing(ptr noundef %__pyx_pyinit_module) #0 !dbg !1315 {
entry:
  %retval = alloca i32, align 4
  %__pyx_pyinit_module.addr = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %modules = alloca ptr, align 8
  %_py_tmp = alloca ptr, align 8
  store ptr %__pyx_pyinit_module, ptr %__pyx_pyinit_module.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_pyinit_module.addr, metadata !1317, metadata !DIExpression()), !dbg !1330
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !1331
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !1318, metadata !DIExpression()), !dbg !1332
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !1332, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !1333
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !1319, metadata !DIExpression()), !dbg !1334
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !1334, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #8, !dbg !1337
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !1320, metadata !DIExpression()), !dbg !1338
  store ptr null, ptr %__pyx_filename, align 8, !dbg !1338, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !1339
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !1321, metadata !DIExpression()), !dbg !1340
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !1340, !tbaa !1335
  %0 = load ptr, ptr @__pyx_m, align 8, !dbg !1341, !tbaa !1252
  %tobool = icmp ne ptr %0, null, !dbg !1341
  br i1 %tobool, label %if.then, label %if.end2, !dbg !1343

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @__pyx_m, align 8, !dbg !1344, !tbaa !1252
  %2 = load ptr, ptr %__pyx_pyinit_module.addr, align 8, !dbg !1347, !tbaa !1252
  %cmp = icmp eq ptr %1, %2, !dbg !1348
  br i1 %cmp, label %if.then1, label %if.end, !dbg !1349

if.then1:                                         ; preds = %if.then
  store i32 0, ptr %retval, align 4, !dbg !1350
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup205, !dbg !1350

if.end:                                           ; preds = %if.then
  %3 = load ptr, ptr @PyExc_RuntimeError, align 8, !dbg !1351, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.11), !dbg !1352
  store i32 -1, ptr %retval, align 4, !dbg !1353
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup205, !dbg !1353

if.end2:                                          ; preds = %entry
  %call = call i32 @__Pyx_check_binary_version(), !dbg !1354
  %cmp3 = icmp slt i32 %call, 0, !dbg !1356
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !1357

if.then4:                                         ; preds = %if.end2
  %4 = load ptr, ptr @__pyx_f, align 16, !dbg !1358, !tbaa !1252
  store ptr %4, ptr %__pyx_filename, align 8, !dbg !1358, !tbaa !1252
  %5 = load ptr, ptr %__pyx_filename, align 8, !dbg !1358, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1358, !tbaa !1335
  %6 = load i32, ptr %__pyx_lineno, align 4, !dbg !1358, !tbaa !1335
  store i32 3176, ptr %__pyx_clineno, align 4, !dbg !1358, !tbaa !1335
  %7 = load i32, ptr %__pyx_clineno, align 4, !dbg !1358, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1361

if.end5:                                          ; preds = %if.end2
  %8 = load i64, ptr getelementptr inbounds (%struct._typeobject, ptr @PyFrame_Type, i32 0, i32 2), align 8, !dbg !1362, !tbaa !1363
  %sub = sub i64 %8, 8, !dbg !1362
  store i64 %sub, ptr @__pyx_pyframe_localsplus_offset, align 8, !dbg !1362, !tbaa !1368
  %call6 = call ptr @PyTuple_New(i64 noundef 0), !dbg !1369
  store ptr %call6, ptr @__pyx_empty_tuple, align 8, !dbg !1370, !tbaa !1252
  %9 = load ptr, ptr @__pyx_empty_tuple, align 8, !dbg !1371, !tbaa !1252
  %tobool7 = icmp ne ptr %9, null, !dbg !1371
  %lnot = xor i1 %tobool7, true, !dbg !1371
  %lnot8 = xor i1 %lnot, true, !dbg !1371
  %lnot9 = xor i1 %lnot8, true, !dbg !1371
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !1371
  %conv = sext i32 %lnot.ext to i64, !dbg !1371
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !1371
  %tobool10 = icmp ne i64 %expval, 0, !dbg !1371
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !1373

if.then11:                                        ; preds = %if.end5
  %10 = load ptr, ptr @__pyx_f, align 16, !dbg !1374, !tbaa !1252
  store ptr %10, ptr %__pyx_filename, align 8, !dbg !1374, !tbaa !1252
  %11 = load ptr, ptr %__pyx_filename, align 8, !dbg !1374, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1374, !tbaa !1335
  %12 = load i32, ptr %__pyx_lineno, align 4, !dbg !1374, !tbaa !1335
  store i32 3180, ptr %__pyx_clineno, align 4, !dbg !1374, !tbaa !1335
  %13 = load i32, ptr %__pyx_clineno, align 4, !dbg !1374, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1377

if.end12:                                         ; preds = %if.end5
  %call13 = call ptr @PyBytes_FromStringAndSize(ptr noundef @.str.12, i64 noundef 0), !dbg !1378
  store ptr %call13, ptr @__pyx_empty_bytes, align 8, !dbg !1379, !tbaa !1252
  %14 = load ptr, ptr @__pyx_empty_bytes, align 8, !dbg !1380, !tbaa !1252
  %tobool14 = icmp ne ptr %14, null, !dbg !1380
  %lnot15 = xor i1 %tobool14, true, !dbg !1380
  %lnot17 = xor i1 %lnot15, true, !dbg !1380
  %lnot19 = xor i1 %lnot17, true, !dbg !1380
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !1380
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !1380
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 0), !dbg !1380
  %tobool23 = icmp ne i64 %expval22, 0, !dbg !1380
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !1382

if.then24:                                        ; preds = %if.end12
  %15 = load ptr, ptr @__pyx_f, align 16, !dbg !1383, !tbaa !1252
  store ptr %15, ptr %__pyx_filename, align 8, !dbg !1383, !tbaa !1252
  %16 = load ptr, ptr %__pyx_filename, align 8, !dbg !1383, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1383, !tbaa !1335
  %17 = load i32, ptr %__pyx_lineno, align 4, !dbg !1383, !tbaa !1335
  store i32 3181, ptr %__pyx_clineno, align 4, !dbg !1383, !tbaa !1335
  %18 = load i32, ptr %__pyx_clineno, align 4, !dbg !1383, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1386

if.end25:                                         ; preds = %if.end12
  %call26 = call ptr @PyUnicode_FromStringAndSize(ptr noundef @.str.12, i64 noundef 0), !dbg !1387
  store ptr %call26, ptr @__pyx_empty_unicode, align 8, !dbg !1388, !tbaa !1252
  %19 = load ptr, ptr @__pyx_empty_unicode, align 8, !dbg !1389, !tbaa !1252
  %tobool27 = icmp ne ptr %19, null, !dbg !1389
  %lnot28 = xor i1 %tobool27, true, !dbg !1389
  %lnot30 = xor i1 %lnot28, true, !dbg !1389
  %lnot32 = xor i1 %lnot30, true, !dbg !1389
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !1389
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !1389
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 0), !dbg !1389
  %tobool36 = icmp ne i64 %expval35, 0, !dbg !1389
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !1391

if.then37:                                        ; preds = %if.end25
  %20 = load ptr, ptr @__pyx_f, align 16, !dbg !1392, !tbaa !1252
  store ptr %20, ptr %__pyx_filename, align 8, !dbg !1392, !tbaa !1252
  %21 = load ptr, ptr %__pyx_filename, align 8, !dbg !1392, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1392, !tbaa !1335
  %22 = load i32, ptr %__pyx_lineno, align 4, !dbg !1392, !tbaa !1335
  store i32 3182, ptr %__pyx_clineno, align 4, !dbg !1392, !tbaa !1335
  %23 = load i32, ptr %__pyx_clineno, align 4, !dbg !1392, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1395

if.end38:                                         ; preds = %if.end25
  %24 = load ptr, ptr %__pyx_pyinit_module.addr, align 8, !dbg !1396, !tbaa !1252
  store ptr %24, ptr @__pyx_m, align 8, !dbg !1397, !tbaa !1252
  %25 = load ptr, ptr @__pyx_m, align 8, !dbg !1398, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %25), !dbg !1398
  %26 = load ptr, ptr @__pyx_m, align 8, !dbg !1399, !tbaa !1252
  %call39 = call ptr @PyModule_GetDict(ptr noundef %26), !dbg !1400
  store ptr %call39, ptr @__pyx_d, align 8, !dbg !1401, !tbaa !1252
  %27 = load ptr, ptr @__pyx_d, align 8, !dbg !1402, !tbaa !1252
  %tobool40 = icmp ne ptr %27, null, !dbg !1402
  %lnot41 = xor i1 %tobool40, true, !dbg !1402
  %lnot43 = xor i1 %lnot41, true, !dbg !1402
  %lnot45 = xor i1 %lnot43, true, !dbg !1402
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !1402
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !1402
  %expval48 = call i64 @llvm.expect.i64(i64 %conv47, i64 0), !dbg !1402
  %tobool49 = icmp ne i64 %expval48, 0, !dbg !1402
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !1404

if.then50:                                        ; preds = %if.end38
  %28 = load ptr, ptr @__pyx_f, align 16, !dbg !1405, !tbaa !1252
  store ptr %28, ptr %__pyx_filename, align 8, !dbg !1405, !tbaa !1252
  %29 = load ptr, ptr %__pyx_filename, align 8, !dbg !1405, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1405, !tbaa !1335
  %30 = load i32, ptr %__pyx_lineno, align 4, !dbg !1405, !tbaa !1335
  store i32 3218, ptr %__pyx_clineno, align 4, !dbg !1405, !tbaa !1335
  %31 = load i32, ptr %__pyx_clineno, align 4, !dbg !1405, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1408

if.end51:                                         ; preds = %if.end38
  %32 = load ptr, ptr @__pyx_d, align 8, !dbg !1409, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %32), !dbg !1409
  %call52 = call ptr @PyImport_AddModule(ptr noundef @.str.13), !dbg !1410
  store ptr %call52, ptr @__pyx_b, align 8, !dbg !1411, !tbaa !1252
  %33 = load ptr, ptr @__pyx_b, align 8, !dbg !1412, !tbaa !1252
  %tobool53 = icmp ne ptr %33, null, !dbg !1412
  %lnot54 = xor i1 %tobool53, true, !dbg !1412
  %lnot56 = xor i1 %lnot54, true, !dbg !1412
  %lnot58 = xor i1 %lnot56, true, !dbg !1412
  %lnot.ext59 = zext i1 %lnot58 to i32, !dbg !1412
  %conv60 = sext i32 %lnot.ext59 to i64, !dbg !1412
  %expval61 = call i64 @llvm.expect.i64(i64 %conv60, i64 0), !dbg !1412
  %tobool62 = icmp ne i64 %expval61, 0, !dbg !1412
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !1414

if.then63:                                        ; preds = %if.end51
  %34 = load ptr, ptr @__pyx_f, align 16, !dbg !1415, !tbaa !1252
  store ptr %34, ptr %__pyx_filename, align 8, !dbg !1415, !tbaa !1252
  %35 = load ptr, ptr %__pyx_filename, align 8, !dbg !1415, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1415, !tbaa !1335
  %36 = load i32, ptr %__pyx_lineno, align 4, !dbg !1415, !tbaa !1335
  store i32 3220, ptr %__pyx_clineno, align 4, !dbg !1415, !tbaa !1335
  %37 = load i32, ptr %__pyx_clineno, align 4, !dbg !1415, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1418

if.end64:                                         ; preds = %if.end51
  %38 = load ptr, ptr @__pyx_b, align 8, !dbg !1419, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %38), !dbg !1419
  %call65 = call ptr @PyImport_AddModule(ptr noundef @.str.14), !dbg !1420
  store ptr %call65, ptr @__pyx_cython_runtime, align 8, !dbg !1421, !tbaa !1252
  %39 = load ptr, ptr @__pyx_cython_runtime, align 8, !dbg !1422, !tbaa !1252
  %tobool66 = icmp ne ptr %39, null, !dbg !1422
  %lnot67 = xor i1 %tobool66, true, !dbg !1422
  %lnot69 = xor i1 %lnot67, true, !dbg !1422
  %lnot71 = xor i1 %lnot69, true, !dbg !1422
  %lnot.ext72 = zext i1 %lnot71 to i32, !dbg !1422
  %conv73 = sext i32 %lnot.ext72 to i64, !dbg !1422
  %expval74 = call i64 @llvm.expect.i64(i64 %conv73, i64 0), !dbg !1422
  %tobool75 = icmp ne i64 %expval74, 0, !dbg !1422
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !1424

if.then76:                                        ; preds = %if.end64
  %40 = load ptr, ptr @__pyx_f, align 16, !dbg !1425, !tbaa !1252
  store ptr %40, ptr %__pyx_filename, align 8, !dbg !1425, !tbaa !1252
  %41 = load ptr, ptr %__pyx_filename, align 8, !dbg !1425, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1425, !tbaa !1335
  %42 = load i32, ptr %__pyx_lineno, align 4, !dbg !1425, !tbaa !1335
  store i32 3222, ptr %__pyx_clineno, align 4, !dbg !1425, !tbaa !1335
  %43 = load i32, ptr %__pyx_clineno, align 4, !dbg !1425, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1428

if.end77:                                         ; preds = %if.end64
  %44 = load ptr, ptr @__pyx_cython_runtime, align 8, !dbg !1429, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %44), !dbg !1429
  %45 = load ptr, ptr @__pyx_m, align 8, !dbg !1430, !tbaa !1252
  %46 = load ptr, ptr @__pyx_b, align 8, !dbg !1432, !tbaa !1252
  %call78 = call i32 @PyObject_SetAttrString(ptr noundef %45, ptr noundef @.str.15, ptr noundef %46), !dbg !1433
  %cmp79 = icmp slt i32 %call78, 0, !dbg !1434
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !1435

if.then81:                                        ; preds = %if.end77
  %47 = load ptr, ptr @__pyx_f, align 16, !dbg !1436, !tbaa !1252
  store ptr %47, ptr %__pyx_filename, align 8, !dbg !1436, !tbaa !1252
  %48 = load ptr, ptr %__pyx_filename, align 8, !dbg !1436, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1436, !tbaa !1335
  %49 = load i32, ptr %__pyx_lineno, align 4, !dbg !1436, !tbaa !1335
  store i32 3224, ptr %__pyx_clineno, align 4, !dbg !1436, !tbaa !1335
  %50 = load i32, ptr %__pyx_clineno, align 4, !dbg !1436, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1439

if.end82:                                         ; preds = %if.end77
  %call83 = call i32 @__Pyx_InitGlobals(), !dbg !1440
  %cmp84 = icmp slt i32 %call83, 0, !dbg !1442
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !1443

if.then86:                                        ; preds = %if.end82
  %51 = load ptr, ptr @__pyx_f, align 16, !dbg !1444, !tbaa !1252
  store ptr %51, ptr %__pyx_filename, align 8, !dbg !1444, !tbaa !1252
  %52 = load ptr, ptr %__pyx_filename, align 8, !dbg !1444, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1444, !tbaa !1335
  %53 = load i32, ptr %__pyx_lineno, align 4, !dbg !1444, !tbaa !1335
  store i32 3226, ptr %__pyx_clineno, align 4, !dbg !1444, !tbaa !1335
  %54 = load i32, ptr %__pyx_clineno, align 4, !dbg !1444, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1447

if.end87:                                         ; preds = %if.end82
  %55 = load i32, ptr @__pyx_module_is_main_pandas___libs__indexing, align 4, !dbg !1448, !tbaa !1335
  %tobool88 = icmp ne i32 %55, 0, !dbg !1448
  br i1 %tobool88, label %if.then89, label %if.end95, !dbg !1450

if.then89:                                        ; preds = %if.end87
  %56 = load ptr, ptr @__pyx_m, align 8, !dbg !1451, !tbaa !1252
  %57 = load ptr, ptr @__pyx_n_s_name_2, align 8, !dbg !1454, !tbaa !1252
  %58 = load ptr, ptr @__pyx_n_s_main, align 8, !dbg !1455, !tbaa !1252
  %call90 = call i32 @PyObject_SetAttr(ptr noundef %56, ptr noundef %57, ptr noundef %58), !dbg !1456
  %cmp91 = icmp slt i32 %call90, 0, !dbg !1457
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !1458

if.then93:                                        ; preds = %if.then89
  %59 = load ptr, ptr @__pyx_f, align 16, !dbg !1459, !tbaa !1252
  store ptr %59, ptr %__pyx_filename, align 8, !dbg !1459, !tbaa !1252
  %60 = load ptr, ptr %__pyx_filename, align 8, !dbg !1459, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1459, !tbaa !1335
  %61 = load i32, ptr %__pyx_lineno, align 4, !dbg !1459, !tbaa !1335
  store i32 3231, ptr %__pyx_clineno, align 4, !dbg !1459, !tbaa !1335
  %62 = load i32, ptr %__pyx_clineno, align 4, !dbg !1459, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1462

if.end94:                                         ; preds = %if.then89
  br label %if.end95, !dbg !1463

if.end95:                                         ; preds = %if.end94, %if.end87
  call void @llvm.lifetime.start.p0(i64 8, ptr %modules) #8, !dbg !1464
  tail call void @llvm.dbg.declare(metadata ptr %modules, metadata !1322, metadata !DIExpression()), !dbg !1465
  %call96 = call ptr @PyImport_GetModuleDict(), !dbg !1466
  store ptr %call96, ptr %modules, align 8, !dbg !1465, !tbaa !1252
  %63 = load ptr, ptr %modules, align 8, !dbg !1467, !tbaa !1252
  %tobool97 = icmp ne ptr %63, null, !dbg !1467
  %lnot98 = xor i1 %tobool97, true, !dbg !1467
  %lnot100 = xor i1 %lnot98, true, !dbg !1467
  %lnot102 = xor i1 %lnot100, true, !dbg !1467
  %lnot.ext103 = zext i1 %lnot102 to i32, !dbg !1467
  %conv104 = sext i32 %lnot.ext103 to i64, !dbg !1467
  %expval105 = call i64 @llvm.expect.i64(i64 %conv104, i64 0), !dbg !1467
  %tobool106 = icmp ne i64 %expval105, 0, !dbg !1467
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !1469

if.then107:                                       ; preds = %if.end95
  %64 = load ptr, ptr @__pyx_f, align 16, !dbg !1470, !tbaa !1252
  store ptr %64, ptr %__pyx_filename, align 8, !dbg !1470, !tbaa !1252
  %65 = load ptr, ptr %__pyx_filename, align 8, !dbg !1470, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1470, !tbaa !1335
  %66 = load i32, ptr %__pyx_lineno, align 4, !dbg !1470, !tbaa !1335
  store i32 3235, ptr %__pyx_clineno, align 4, !dbg !1470, !tbaa !1335
  %67 = load i32, ptr %__pyx_clineno, align 4, !dbg !1470, !tbaa !1335
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1473

if.end108:                                        ; preds = %if.end95
  %68 = load ptr, ptr %modules, align 8, !dbg !1474, !tbaa !1252
  %call109 = call ptr @PyDict_GetItemString(ptr noundef %68, ptr noundef @.str.16), !dbg !1476
  %tobool110 = icmp ne ptr %call109, null, !dbg !1476
  br i1 %tobool110, label %if.end124, label %if.then111, !dbg !1477

if.then111:                                       ; preds = %if.end108
  %69 = load ptr, ptr %modules, align 8, !dbg !1478, !tbaa !1252
  %70 = load ptr, ptr @__pyx_m, align 8, !dbg !1478, !tbaa !1252
  %call112 = call i32 @PyDict_SetItemString(ptr noundef %69, ptr noundef @.str.16, ptr noundef %70), !dbg !1478
  %cmp113 = icmp slt i32 %call112, 0, !dbg !1478
  %lnot115 = xor i1 %cmp113, true, !dbg !1478
  %lnot117 = xor i1 %lnot115, true, !dbg !1478
  %lnot.ext118 = zext i1 %lnot117 to i32, !dbg !1478
  %conv119 = sext i32 %lnot.ext118 to i64, !dbg !1478
  %expval120 = call i64 @llvm.expect.i64(i64 %conv119, i64 0), !dbg !1478
  %tobool121 = icmp ne i64 %expval120, 0, !dbg !1478
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !1481

if.then122:                                       ; preds = %if.then111
  %71 = load ptr, ptr @__pyx_f, align 16, !dbg !1482, !tbaa !1252
  store ptr %71, ptr %__pyx_filename, align 8, !dbg !1482, !tbaa !1252
  %72 = load ptr, ptr %__pyx_filename, align 8, !dbg !1482, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1482, !tbaa !1335
  %73 = load i32, ptr %__pyx_lineno, align 4, !dbg !1482, !tbaa !1335
  store i32 3237, ptr %__pyx_clineno, align 4, !dbg !1482, !tbaa !1335
  %74 = load i32, ptr %__pyx_clineno, align 4, !dbg !1482, !tbaa !1335
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1485

if.end123:                                        ; preds = %if.then111
  br label %if.end124, !dbg !1486

if.end124:                                        ; preds = %if.end123, %if.end108
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !1487
  br label %cleanup, !dbg !1487

cleanup:                                          ; preds = %if.then122, %if.then107, %if.end124
  call void @llvm.lifetime.end.p0(i64 8, ptr %modules) #8, !dbg !1487
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup205 [
    i32 0, label %cleanup.cont
    i32 2, label %__pyx_L1_error
  ]

cleanup.cont:                                     ; preds = %cleanup
  %call125 = call i32 @__Pyx_InitCachedBuiltins(), !dbg !1488
  %cmp126 = icmp slt i32 %call125, 0, !dbg !1490
  br i1 %cmp126, label %if.then128, label %if.end129, !dbg !1491

if.then128:                                       ; preds = %cleanup.cont
  %75 = load ptr, ptr @__pyx_f, align 16, !dbg !1492, !tbaa !1252
  store ptr %75, ptr %__pyx_filename, align 8, !dbg !1492, !tbaa !1252
  %76 = load ptr, ptr %__pyx_filename, align 8, !dbg !1492, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1492, !tbaa !1335
  %77 = load i32, ptr %__pyx_lineno, align 4, !dbg !1492, !tbaa !1335
  store i32 3242, ptr %__pyx_clineno, align 4, !dbg !1492, !tbaa !1335
  %78 = load i32, ptr %__pyx_clineno, align 4, !dbg !1492, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1495

if.end129:                                        ; preds = %cleanup.cont
  %call130 = call i32 @__Pyx_InitCachedConstants(), !dbg !1496
  %cmp131 = icmp slt i32 %call130, 0, !dbg !1498
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !1499

if.then133:                                       ; preds = %if.end129
  %79 = load ptr, ptr @__pyx_f, align 16, !dbg !1500, !tbaa !1252
  store ptr %79, ptr %__pyx_filename, align 8, !dbg !1500, !tbaa !1252
  %80 = load ptr, ptr %__pyx_filename, align 8, !dbg !1500, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1500, !tbaa !1335
  %81 = load i32, ptr %__pyx_lineno, align 4, !dbg !1500, !tbaa !1335
  store i32 3244, ptr %__pyx_clineno, align 4, !dbg !1500, !tbaa !1335
  %82 = load i32, ptr %__pyx_clineno, align 4, !dbg !1500, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1503

if.end134:                                        ; preds = %if.end129
  %call135 = call i32 @__Pyx_modinit_global_init_code(), !dbg !1504
  %call136 = call i32 @__Pyx_modinit_variable_export_code(), !dbg !1505
  %call137 = call i32 @__Pyx_modinit_function_export_code(), !dbg !1506
  %call138 = call i32 @__Pyx_modinit_type_init_code(), !dbg !1507
  %cmp139 = icmp slt i32 %call138, 0, !dbg !1507
  %lnot141 = xor i1 %cmp139, true, !dbg !1507
  %lnot143 = xor i1 %lnot141, true, !dbg !1507
  %lnot.ext144 = zext i1 %lnot143 to i32, !dbg !1507
  %conv145 = sext i32 %lnot.ext144 to i64, !dbg !1507
  %expval146 = call i64 @llvm.expect.i64(i64 %conv145, i64 0), !dbg !1507
  %tobool147 = icmp ne i64 %expval146, 0, !dbg !1507
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !1509

if.then148:                                       ; preds = %if.end134
  %83 = load ptr, ptr @__pyx_f, align 16, !dbg !1510, !tbaa !1252
  store ptr %83, ptr %__pyx_filename, align 8, !dbg !1510, !tbaa !1252
  %84 = load ptr, ptr %__pyx_filename, align 8, !dbg !1510, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1510, !tbaa !1335
  %85 = load i32, ptr %__pyx_lineno, align 4, !dbg !1510, !tbaa !1335
  store i32 3249, ptr %__pyx_clineno, align 4, !dbg !1510, !tbaa !1335
  %86 = load i32, ptr %__pyx_clineno, align 4, !dbg !1510, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1513

if.end149:                                        ; preds = %if.end134
  %call150 = call i32 @__Pyx_modinit_type_import_code(), !dbg !1514
  %call151 = call i32 @__Pyx_modinit_variable_import_code(), !dbg !1515
  %call152 = call i32 @__Pyx_modinit_function_import_code(), !dbg !1516
  %87 = load ptr, ptr @__pyx_n_s_pandas__libs_indexing, align 8, !dbg !1517, !tbaa !1252
  %call153 = call ptr @PyCMethod_New(ptr noundef @__pyx_mdef_6pandas_5_libs_8indexing_1__pyx_unpickle_NDFrameIndexerBase, ptr noundef null, ptr noundef %87, ptr noundef null), !dbg !1517
  store ptr %call153, ptr %__pyx_t_1, align 8, !dbg !1518, !tbaa !1252
  %88 = load ptr, ptr %__pyx_t_1, align 8, !dbg !1519, !tbaa !1252
  %tobool154 = icmp ne ptr %88, null, !dbg !1519
  %lnot155 = xor i1 %tobool154, true, !dbg !1519
  %lnot157 = xor i1 %lnot155, true, !dbg !1519
  %lnot159 = xor i1 %lnot157, true, !dbg !1519
  %lnot.ext160 = zext i1 %lnot159 to i32, !dbg !1519
  %conv161 = sext i32 %lnot.ext160 to i64, !dbg !1519
  %expval162 = call i64 @llvm.expect.i64(i64 %conv161, i64 0), !dbg !1519
  %tobool163 = icmp ne i64 %expval162, 0, !dbg !1519
  br i1 %tobool163, label %if.then164, label %if.end165, !dbg !1521

if.then164:                                       ; preds = %if.end149
  %89 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !1522, !tbaa !1252
  store ptr %89, ptr %__pyx_filename, align 8, !dbg !1522, !tbaa !1252
  %90 = load ptr, ptr %__pyx_filename, align 8, !dbg !1522, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1522, !tbaa !1335
  %91 = load i32, ptr %__pyx_lineno, align 4, !dbg !1522, !tbaa !1335
  store i32 3263, ptr %__pyx_clineno, align 4, !dbg !1522, !tbaa !1335
  %92 = load i32, ptr %__pyx_clineno, align 4, !dbg !1522, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1525

if.end165:                                        ; preds = %if.end149
  %93 = load ptr, ptr @__pyx_d, align 8, !dbg !1526, !tbaa !1252
  %94 = load ptr, ptr @__pyx_n_s_pyx_unpickle_NDFrameIndexerBas, align 8, !dbg !1528, !tbaa !1252
  %95 = load ptr, ptr %__pyx_t_1, align 8, !dbg !1529, !tbaa !1252
  %call166 = call i32 @PyDict_SetItem(ptr noundef %93, ptr noundef %94, ptr noundef %95), !dbg !1530
  %cmp167 = icmp slt i32 %call166, 0, !dbg !1531
  br i1 %cmp167, label %if.then169, label %if.end170, !dbg !1532

if.then169:                                       ; preds = %if.end165
  %96 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !1533, !tbaa !1252
  store ptr %96, ptr %__pyx_filename, align 8, !dbg !1533, !tbaa !1252
  %97 = load ptr, ptr %__pyx_filename, align 8, !dbg !1533, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1533, !tbaa !1335
  %98 = load i32, ptr %__pyx_lineno, align 4, !dbg !1533, !tbaa !1335
  store i32 3265, ptr %__pyx_clineno, align 4, !dbg !1533, !tbaa !1335
  %99 = load i32, ptr %__pyx_clineno, align 4, !dbg !1533, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1536

if.end170:                                        ; preds = %if.end165
  %100 = load ptr, ptr %__pyx_t_1, align 8, !dbg !1537, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %100), !dbg !1537
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !1538, !tbaa !1252
  %call171 = call ptr @PyDict_New(), !dbg !1539
  store ptr %call171, ptr %__pyx_t_1, align 8, !dbg !1540, !tbaa !1252
  %101 = load ptr, ptr %__pyx_t_1, align 8, !dbg !1541, !tbaa !1252
  %tobool172 = icmp ne ptr %101, null, !dbg !1541
  %lnot173 = xor i1 %tobool172, true, !dbg !1541
  %lnot175 = xor i1 %lnot173, true, !dbg !1541
  %lnot177 = xor i1 %lnot175, true, !dbg !1541
  %lnot.ext178 = zext i1 %lnot177 to i32, !dbg !1541
  %conv179 = sext i32 %lnot.ext178 to i64, !dbg !1541
  %expval180 = call i64 @llvm.expect.i64(i64 %conv179, i64 0), !dbg !1541
  %tobool181 = icmp ne i64 %expval180, 0, !dbg !1541
  br i1 %tobool181, label %if.then182, label %if.end183, !dbg !1543

if.then182:                                       ; preds = %if.end170
  %102 = load ptr, ptr @__pyx_f, align 16, !dbg !1544, !tbaa !1252
  store ptr %102, ptr %__pyx_filename, align 8, !dbg !1544, !tbaa !1252
  %103 = load ptr, ptr %__pyx_filename, align 8, !dbg !1544, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1544, !tbaa !1335
  %104 = load i32, ptr %__pyx_lineno, align 4, !dbg !1544, !tbaa !1335
  store i32 3273, ptr %__pyx_clineno, align 4, !dbg !1544, !tbaa !1335
  %105 = load i32, ptr %__pyx_clineno, align 4, !dbg !1544, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1547

if.end183:                                        ; preds = %if.end170
  %106 = load ptr, ptr @__pyx_d, align 8, !dbg !1548, !tbaa !1252
  %107 = load ptr, ptr @__pyx_n_s_test, align 8, !dbg !1550, !tbaa !1252
  %108 = load ptr, ptr %__pyx_t_1, align 8, !dbg !1551, !tbaa !1252
  %call184 = call i32 @PyDict_SetItem(ptr noundef %106, ptr noundef %107, ptr noundef %108), !dbg !1552
  %cmp185 = icmp slt i32 %call184, 0, !dbg !1553
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !1554

if.then187:                                       ; preds = %if.end183
  %109 = load ptr, ptr @__pyx_f, align 16, !dbg !1555, !tbaa !1252
  store ptr %109, ptr %__pyx_filename, align 8, !dbg !1555, !tbaa !1252
  %110 = load ptr, ptr %__pyx_filename, align 8, !dbg !1555, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !1555, !tbaa !1335
  %111 = load i32, ptr %__pyx_lineno, align 4, !dbg !1555, !tbaa !1335
  store i32 3275, ptr %__pyx_clineno, align 4, !dbg !1555, !tbaa !1335
  %112 = load i32, ptr %__pyx_clineno, align 4, !dbg !1555, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1558

if.end188:                                        ; preds = %if.end183
  %113 = load ptr, ptr %__pyx_t_1, align 8, !dbg !1559, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %113), !dbg !1559
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !1560, !tbaa !1252
  br label %__pyx_L0, !dbg !1561

__pyx_L1_error:                                   ; preds = %cleanup, %if.then187, %if.then182, %if.then169, %if.then164, %if.then148, %if.then133, %if.then128, %if.then93, %if.then86, %if.then81, %if.then76, %if.then63, %if.then50, %if.then37, %if.then24, %if.then11, %if.then4
  tail call void @llvm.dbg.label(metadata !1324), !dbg !1562
  %114 = load ptr, ptr %__pyx_t_1, align 8, !dbg !1563, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %114), !dbg !1563
  %115 = load ptr, ptr @__pyx_m, align 8, !dbg !1564, !tbaa !1252
  %tobool189 = icmp ne ptr %115, null, !dbg !1564
  br i1 %tobool189, label %if.then190, label %if.else, !dbg !1565

if.then190:                                       ; preds = %__pyx_L1_error
  %116 = load ptr, ptr @__pyx_d, align 8, !dbg !1566, !tbaa !1252
  %tobool191 = icmp ne ptr %116, null, !dbg !1566
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !1568

if.then192:                                       ; preds = %if.then190
  %117 = load i32, ptr %__pyx_clineno, align 4, !dbg !1569, !tbaa !1335
  %118 = load i32, ptr %__pyx_lineno, align 4, !dbg !1571, !tbaa !1335
  %119 = load ptr, ptr %__pyx_filename, align 8, !dbg !1572, !tbaa !1252
  call void @__Pyx_AddTraceback(ptr noundef @.str.17, i32 noundef %117, i32 noundef %118, ptr noundef %119), !dbg !1573
  br label %if.end193, !dbg !1574

if.end193:                                        ; preds = %if.then192, %if.then190
  br label %do.body, !dbg !1575

do.body:                                          ; preds = %if.end193
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #8, !dbg !1576
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp, metadata !1325, metadata !DIExpression()), !dbg !1576
  %120 = load ptr, ptr @__pyx_m, align 8, !dbg !1576, !tbaa !1252
  store ptr %120, ptr %_py_tmp, align 8, !dbg !1576, !tbaa !1252
  %121 = load ptr, ptr %_py_tmp, align 8, !dbg !1577, !tbaa !1252
  %cmp194 = icmp ne ptr %121, null, !dbg !1577
  br i1 %cmp194, label %if.then196, label %if.end197, !dbg !1576

if.then196:                                       ; preds = %do.body
  store ptr null, ptr @__pyx_m, align 8, !dbg !1579, !tbaa !1252
  %122 = load ptr, ptr %_py_tmp, align 8, !dbg !1579, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %122), !dbg !1579
  br label %if.end197, !dbg !1579

if.end197:                                        ; preds = %if.then196, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #8, !dbg !1575
  br label %do.cond, !dbg !1576

do.cond:                                          ; preds = %if.end197
  br label %do.end, !dbg !1576

do.end:                                           ; preds = %do.cond
  br label %if.end202, !dbg !1581

if.else:                                          ; preds = %__pyx_L1_error
  %call198 = call ptr @PyErr_Occurred(), !dbg !1582
  %tobool199 = icmp ne ptr %call198, null, !dbg !1582
  br i1 %tobool199, label %if.end201, label %if.then200, !dbg !1584

if.then200:                                       ; preds = %if.else
  %123 = load ptr, ptr @PyExc_ImportError, align 8, !dbg !1585, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %123, ptr noundef @.str.17), !dbg !1587
  br label %if.end201, !dbg !1588

if.end201:                                        ; preds = %if.then200, %if.else
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %do.end
  br label %__pyx_L0, !dbg !1564

__pyx_L0:                                         ; preds = %if.end202, %if.end188
  tail call void @llvm.dbg.label(metadata !1329), !dbg !1589
  %124 = load ptr, ptr @__pyx_m, align 8, !dbg !1590, !tbaa !1252
  %cmp203 = icmp ne ptr %124, null, !dbg !1591
  %125 = zext i1 %cmp203 to i64, !dbg !1592
  %cond = select i1 %cmp203, i32 0, i32 -1, !dbg !1592
  store i32 %cond, ptr %retval, align 4, !dbg !1593
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup205, !dbg !1593

cleanup205:                                       ; preds = %__pyx_L0, %cleanup, %if.end, %if.then1
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !1594
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #8, !dbg !1594
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !1594
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !1594
  %126 = load i32, ptr %retval, align 4, !dbg !1594
  ret i32 %126, !dbg !1594
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_check_single_interpreter() #0 !dbg !565 {
entry:
  %retval = alloca i32, align 4
  %current_id = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr %current_id) #8, !dbg !1595
  tail call void @llvm.dbg.declare(metadata ptr %current_id, metadata !569, metadata !DIExpression()), !dbg !1596
  %call = call ptr @PyThreadState_Get(), !dbg !1597
  %interp = getelementptr inbounds %struct._ts, ptr %call, i32 0, i32 2, !dbg !1598
  %0 = load ptr, ptr %interp, align 8, !dbg !1598, !tbaa !1599
  %call1 = call i64 @PyInterpreterState_GetID(ptr noundef %0), !dbg !1602
  store i64 %call1, ptr %current_id, align 8, !dbg !1596, !tbaa !1368
  %1 = load i64, ptr @__Pyx_check_single_interpreter.main_interpreter_id, align 8, !dbg !1603, !tbaa !1368
  %cmp = icmp eq i64 %1, -1, !dbg !1605
  br i1 %cmp, label %if.then, label %if.else, !dbg !1606

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %current_id, align 8, !dbg !1607, !tbaa !1368
  store i64 %2, ptr @__Pyx_check_single_interpreter.main_interpreter_id, align 8, !dbg !1609, !tbaa !1368
  %3 = load i64, ptr %current_id, align 8, !dbg !1610, !tbaa !1368
  %cmp2 = icmp eq i64 %3, -1, !dbg !1610
  %lnot = xor i1 %cmp2, true, !dbg !1610
  %lnot3 = xor i1 %lnot, true, !dbg !1610
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !1610
  %conv = sext i32 %lnot.ext to i64, !dbg !1610
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !1610
  %tobool = icmp ne i64 %expval, 0, !dbg !1611
  %4 = zext i1 %tobool to i64, !dbg !1611
  %cond = select i1 %tobool, i32 -1, i32 0, !dbg !1611
  store i32 %cond, ptr %retval, align 4, !dbg !1612
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1612

if.else:                                          ; preds = %entry
  %5 = load i64, ptr @__Pyx_check_single_interpreter.main_interpreter_id, align 8, !dbg !1613, !tbaa !1368
  %6 = load i64, ptr %current_id, align 8, !dbg !1613, !tbaa !1368
  %cmp4 = icmp ne i64 %5, %6, !dbg !1613
  %lnot6 = xor i1 %cmp4, true, !dbg !1613
  %lnot8 = xor i1 %lnot6, true, !dbg !1613
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !1613
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !1613
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !1613
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !1613
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !1615

if.then13:                                        ; preds = %if.else
  %7 = load ptr, ptr @PyExc_ImportError, align 8, !dbg !1616, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %7, ptr noundef @.str.10), !dbg !1618
  store i32 -1, ptr %retval, align 4, !dbg !1619
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1619

if.end:                                           ; preds = %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !1620
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1620

cleanup:                                          ; preds = %if.end14, %if.then13, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %current_id) #8, !dbg !1621
  %8 = load i32, ptr %retval, align 4, !dbg !1621
  ret i32 %8, !dbg !1621
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_Py_INCREF(ptr noundef %op) #3 !dbg !1622 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !1624, metadata !DIExpression()), !dbg !1625
  %0 = load ptr, ptr %op.addr, align 8, !dbg !1626, !tbaa !1252
  %ob_refcnt = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 0, !dbg !1627
  %1 = load i64, ptr %ob_refcnt, align 8, !dbg !1628, !tbaa !1629
  %inc = add i64 %1, 1, !dbg !1628
  store i64 %inc, ptr %ob_refcnt, align 8, !dbg !1628, !tbaa !1629
  ret void, !dbg !1630
}

declare !dbg !1631 ptr @PyObject_GetAttrString(ptr noundef, ptr noundef) #1

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i64 @llvm.expect.i64(i64, i64) #4

declare !dbg !1634 ptr @PyModule_NewObject(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @_Py_DECREF(ptr noundef %op) #3 !dbg !1635 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !1637, metadata !DIExpression()), !dbg !1638
  %0 = load ptr, ptr %op.addr, align 8, !dbg !1639, !tbaa !1252
  %ob_refcnt = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 0, !dbg !1641
  %1 = load i64, ptr %ob_refcnt, align 8, !dbg !1642, !tbaa !1629
  %dec = add i64 %1, -1, !dbg !1642
  store i64 %dec, ptr %ob_refcnt, align 8, !dbg !1642, !tbaa !1629
  %cmp = icmp ne i64 %dec, 0, !dbg !1643
  br i1 %cmp, label %if.then, label %if.else, !dbg !1644

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !1645

if.else:                                          ; preds = %entry
  %2 = load ptr, ptr %op.addr, align 8, !dbg !1647, !tbaa !1252
  call void @_Py_Dealloc(ptr noundef %2), !dbg !1649
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !1650
}

declare !dbg !1651 ptr @PyModule_GetDict(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_copy_spec_to_module(ptr noundef %spec, ptr noundef %moddict, ptr noundef %from_name, ptr noundef %to_name, i32 noundef %allow_none) #0 !dbg !1652 {
entry:
  %spec.addr = alloca ptr, align 8
  %moddict.addr = alloca ptr, align 8
  %from_name.addr = alloca ptr, align 8
  %to_name.addr = alloca ptr, align 8
  %allow_none.addr = alloca i32, align 4
  %value = alloca ptr, align 8
  %result = alloca i32, align 4
  store ptr %spec, ptr %spec.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %spec.addr, metadata !1656, metadata !DIExpression()), !dbg !1663
  store ptr %moddict, ptr %moddict.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %moddict.addr, metadata !1657, metadata !DIExpression()), !dbg !1664
  store ptr %from_name, ptr %from_name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %from_name.addr, metadata !1658, metadata !DIExpression()), !dbg !1665
  store ptr %to_name, ptr %to_name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %to_name.addr, metadata !1659, metadata !DIExpression()), !dbg !1666
  store i32 %allow_none, ptr %allow_none.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %allow_none.addr, metadata !1660, metadata !DIExpression()), !dbg !1667
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #8, !dbg !1668
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !1661, metadata !DIExpression()), !dbg !1669
  %0 = load ptr, ptr %spec.addr, align 8, !dbg !1670, !tbaa !1252
  %1 = load ptr, ptr %from_name.addr, align 8, !dbg !1671, !tbaa !1252
  %call = call ptr @PyObject_GetAttrString(ptr noundef %0, ptr noundef %1), !dbg !1672
  store ptr %call, ptr %value, align 8, !dbg !1669, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #8, !dbg !1673
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !1662, metadata !DIExpression()), !dbg !1674
  store i32 0, ptr %result, align 4, !dbg !1674, !tbaa !1335
  %2 = load ptr, ptr %value, align 8, !dbg !1675, !tbaa !1252
  %tobool = icmp ne ptr %2, null, !dbg !1675
  %lnot = xor i1 %tobool, true, !dbg !1675
  %lnot1 = xor i1 %lnot, true, !dbg !1675
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !1675
  %conv = sext i32 %lnot.ext to i64, !dbg !1675
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !1675
  %tobool2 = icmp ne i64 %expval, 0, !dbg !1675
  br i1 %tobool2, label %if.then, label %if.else, !dbg !1677

if.then:                                          ; preds = %entry
  %3 = load i32, ptr %allow_none.addr, align 4, !dbg !1678, !tbaa !1335
  %tobool3 = icmp ne i32 %3, 0, !dbg !1678
  br i1 %tobool3, label %if.then5, label %lor.lhs.false, !dbg !1681

lor.lhs.false:                                    ; preds = %if.then
  %4 = load ptr, ptr %value, align 8, !dbg !1682, !tbaa !1252
  %cmp = icmp ne ptr %4, @_Py_NoneStruct, !dbg !1683
  br i1 %cmp, label %if.then5, label %if.end, !dbg !1684

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %5 = load ptr, ptr %moddict.addr, align 8, !dbg !1685, !tbaa !1252
  %6 = load ptr, ptr %to_name.addr, align 8, !dbg !1687, !tbaa !1252
  %7 = load ptr, ptr %value, align 8, !dbg !1688, !tbaa !1252
  %call6 = call i32 @PyDict_SetItemString(ptr noundef %5, ptr noundef %6, ptr noundef %7), !dbg !1689
  store i32 %call6, ptr %result, align 4, !dbg !1690, !tbaa !1335
  br label %if.end, !dbg !1691

if.end:                                           ; preds = %if.then5, %lor.lhs.false
  %8 = load ptr, ptr %value, align 8, !dbg !1692, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %8), !dbg !1692
  br label %if.end12, !dbg !1693

if.else:                                          ; preds = %entry
  %9 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !1694, !tbaa !1252
  %call7 = call i32 @PyErr_ExceptionMatches(ptr noundef %9), !dbg !1696
  %tobool8 = icmp ne i32 %call7, 0, !dbg !1696
  br i1 %tobool8, label %if.then9, label %if.else10, !dbg !1697

if.then9:                                         ; preds = %if.else
  call void @PyErr_Clear(), !dbg !1698
  br label %if.end11, !dbg !1700

if.else10:                                        ; preds = %if.else
  store i32 -1, ptr %result, align 4, !dbg !1701, !tbaa !1335
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.then9
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end
  %10 = load i32, ptr %result, align 4, !dbg !1703, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #8, !dbg !1704
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #8, !dbg !1704
  ret i32 %10, !dbg !1705
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_Py_XDECREF(ptr noundef %op) #3 !dbg !1706 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !1708, metadata !DIExpression()), !dbg !1709
  %0 = load ptr, ptr %op.addr, align 8, !dbg !1710, !tbaa !1252
  %cmp = icmp ne ptr %0, null, !dbg !1712
  br i1 %cmp, label %if.then, label %if.end, !dbg !1713

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %op.addr, align 8, !dbg !1714, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %1), !dbg !1714
  br label %if.end, !dbg !1716

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !1717
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

declare !dbg !1718 i64 @PyInterpreterState_GetID(ptr noundef) #1

declare !dbg !1721 ptr @PyThreadState_Get() #1

declare !dbg !1724 void @PyErr_SetString(ptr noundef, ptr noundef) #1

declare !dbg !1728 void @_Py_Dealloc(ptr noundef) #1

declare !dbg !1729 i32 @PyDict_SetItemString(ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !1733 i32 @PyErr_ExceptionMatches(ptr noundef) #1

declare !dbg !1734 void @PyErr_Clear() #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_check_binary_version() #0 !dbg !1737 {
entry:
  %retval = alloca i32, align 4
  %ctversion = alloca [5 x i8], align 1
  %same = alloca i32, align 4
  %i = alloca i32, align 4
  %found_dot = alloca i32, align 4
  %rt_from_call = alloca ptr, align 8
  %rtversion = alloca [5 x i8], align 1
  %message = alloca [200 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 5, ptr %ctversion) #8, !dbg !1751
  tail call void @llvm.dbg.declare(metadata ptr %ctversion, metadata !1739, metadata !DIExpression()), !dbg !1752
  call void @llvm.lifetime.start.p0(i64 4, ptr %same) #8, !dbg !1753
  tail call void @llvm.dbg.declare(metadata ptr %same, metadata !1740, metadata !DIExpression()), !dbg !1754
  store i32 1, ptr %same, align 4, !dbg !1754, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !1753
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !1741, metadata !DIExpression()), !dbg !1755
  call void @llvm.lifetime.start.p0(i64 4, ptr %found_dot) #8, !dbg !1753
  tail call void @llvm.dbg.declare(metadata ptr %found_dot, metadata !1742, metadata !DIExpression()), !dbg !1756
  call void @llvm.lifetime.start.p0(i64 8, ptr %rt_from_call) #8, !dbg !1757
  tail call void @llvm.dbg.declare(metadata ptr %rt_from_call, metadata !1743, metadata !DIExpression()), !dbg !1758
  %call = call ptr @Py_GetVersion(), !dbg !1759
  store ptr %call, ptr %rt_from_call, align 8, !dbg !1758, !tbaa !1252
  %arraydecay = getelementptr inbounds [5 x i8], ptr %ctversion, i64 0, i64 0, !dbg !1760
  %call1 = call i32 (ptr, i64, ptr, ...) @PyOS_snprintf(ptr noundef %arraydecay, i64 noundef 5, ptr noundef @.str.18, i32 noundef 3, i32 noundef 9), !dbg !1761
  store i32 0, ptr %found_dot, align 4, !dbg !1762, !tbaa !1335
  store i32 0, ptr %i, align 4, !dbg !1763, !tbaa !1335
  br label %for.cond, !dbg !1765

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, ptr %i, align 4, !dbg !1766, !tbaa !1335
  %cmp = icmp slt i32 %0, 4, !dbg !1768
  br i1 %cmp, label %for.body, label %for.end, !dbg !1769

for.body:                                         ; preds = %for.cond
  %1 = load i32, ptr %i, align 4, !dbg !1770, !tbaa !1335
  %idxprom = sext i32 %1 to i64, !dbg !1773
  %arrayidx = getelementptr [5 x i8], ptr %ctversion, i64 0, i64 %idxprom, !dbg !1773
  %2 = load i8, ptr %arrayidx, align 1, !dbg !1773, !tbaa !1774
  %tobool = icmp ne i8 %2, 0, !dbg !1773
  br i1 %tobool, label %if.end, label %if.then, !dbg !1775

if.then:                                          ; preds = %for.body
  %3 = load ptr, ptr %rt_from_call, align 8, !dbg !1776, !tbaa !1252
  %4 = load i32, ptr %i, align 4, !dbg !1778, !tbaa !1335
  %idxprom2 = sext i32 %4 to i64, !dbg !1776
  %arrayidx3 = getelementptr i8, ptr %3, i64 %idxprom2, !dbg !1776
  %5 = load i8, ptr %arrayidx3, align 1, !dbg !1776, !tbaa !1774
  %conv = sext i8 %5 to i32, !dbg !1776
  %cmp4 = icmp slt i32 %conv, 48, !dbg !1779
  br i1 %cmp4, label %lor.end, label %lor.rhs, !dbg !1780

lor.rhs:                                          ; preds = %if.then
  %6 = load ptr, ptr %rt_from_call, align 8, !dbg !1781, !tbaa !1252
  %7 = load i32, ptr %i, align 4, !dbg !1782, !tbaa !1335
  %idxprom6 = sext i32 %7 to i64, !dbg !1781
  %arrayidx7 = getelementptr i8, ptr %6, i64 %idxprom6, !dbg !1781
  %8 = load i8, ptr %arrayidx7, align 1, !dbg !1781, !tbaa !1774
  %conv8 = sext i8 %8 to i32, !dbg !1781
  %cmp9 = icmp sgt i32 %conv8, 57, !dbg !1783
  br label %lor.end, !dbg !1780

lor.end:                                          ; preds = %lor.rhs, %if.then
  %9 = phi i1 [ true, %if.then ], [ %cmp9, %lor.rhs ]
  %lor.ext = zext i1 %9 to i32, !dbg !1780
  store i32 %lor.ext, ptr %same, align 4, !dbg !1784, !tbaa !1335
  br label %for.end, !dbg !1785

if.end:                                           ; preds = %for.body
  %10 = load ptr, ptr %rt_from_call, align 8, !dbg !1786, !tbaa !1252
  %11 = load i32, ptr %i, align 4, !dbg !1788, !tbaa !1335
  %idxprom11 = sext i32 %11 to i64, !dbg !1786
  %arrayidx12 = getelementptr i8, ptr %10, i64 %idxprom11, !dbg !1786
  %12 = load i8, ptr %arrayidx12, align 1, !dbg !1786, !tbaa !1774
  %conv13 = sext i8 %12 to i32, !dbg !1786
  %13 = load i32, ptr %i, align 4, !dbg !1789, !tbaa !1335
  %idxprom14 = sext i32 %13 to i64, !dbg !1790
  %arrayidx15 = getelementptr [5 x i8], ptr %ctversion, i64 0, i64 %idxprom14, !dbg !1790
  %14 = load i8, ptr %arrayidx15, align 1, !dbg !1790, !tbaa !1774
  %conv16 = sext i8 %14 to i32, !dbg !1790
  %cmp17 = icmp ne i32 %conv13, %conv16, !dbg !1791
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !1792

if.then19:                                        ; preds = %if.end
  store i32 0, ptr %same, align 4, !dbg !1793, !tbaa !1335
  br label %for.end, !dbg !1795

if.end20:                                         ; preds = %if.end
  br label %for.inc, !dbg !1796

for.inc:                                          ; preds = %if.end20
  %15 = load i32, ptr %i, align 4, !dbg !1797, !tbaa !1335
  %inc = add i32 %15, 1, !dbg !1797
  store i32 %inc, ptr %i, align 4, !dbg !1797, !tbaa !1335
  br label %for.cond, !dbg !1798, !llvm.loop !1799

for.end:                                          ; preds = %if.then19, %lor.end, %for.cond
  %16 = load i32, ptr %same, align 4, !dbg !1802, !tbaa !1335
  %tobool21 = icmp ne i32 %16, 0, !dbg !1802
  br i1 %tobool21, label %if.end62, label %if.then22, !dbg !1803

if.then22:                                        ; preds = %for.end
  call void @llvm.lifetime.start.p0(i64 5, ptr %rtversion) #8, !dbg !1804
  tail call void @llvm.dbg.declare(metadata ptr %rtversion, metadata !1744, metadata !DIExpression()), !dbg !1805
  call void @llvm.memset.p0.i64(ptr align 1 %rtversion, i8 0, i64 5, i1 false), !dbg !1805
  call void @llvm.lifetime.start.p0(i64 200, ptr %message) #8, !dbg !1806
  tail call void @llvm.dbg.declare(metadata ptr %message, metadata !1747, metadata !DIExpression()), !dbg !1807
  store i32 0, ptr %i, align 4, !dbg !1808, !tbaa !1335
  br label %for.cond23, !dbg !1810

for.cond23:                                       ; preds = %for.inc53, %if.then22
  %17 = load i32, ptr %i, align 4, !dbg !1811, !tbaa !1335
  %cmp24 = icmp slt i32 %17, 4, !dbg !1813
  br i1 %cmp24, label %for.body26, label %for.end55, !dbg !1814

for.body26:                                       ; preds = %for.cond23
  %18 = load ptr, ptr %rt_from_call, align 8, !dbg !1815, !tbaa !1252
  %19 = load i32, ptr %i, align 4, !dbg !1818, !tbaa !1335
  %idxprom27 = sext i32 %19 to i64, !dbg !1815
  %arrayidx28 = getelementptr i8, ptr %18, i64 %idxprom27, !dbg !1815
  %20 = load i8, ptr %arrayidx28, align 1, !dbg !1815, !tbaa !1774
  %conv29 = sext i8 %20 to i32, !dbg !1815
  %cmp30 = icmp eq i32 %conv29, 46, !dbg !1819
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !1820

if.then32:                                        ; preds = %for.body26
  %21 = load i32, ptr %found_dot, align 4, !dbg !1821, !tbaa !1335
  %tobool33 = icmp ne i32 %21, 0, !dbg !1821
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !1824

if.then34:                                        ; preds = %if.then32
  br label %for.end55, !dbg !1825

if.end35:                                         ; preds = %if.then32
  store i32 1, ptr %found_dot, align 4, !dbg !1826, !tbaa !1335
  br label %if.end48, !dbg !1827

if.else:                                          ; preds = %for.body26
  %22 = load ptr, ptr %rt_from_call, align 8, !dbg !1828, !tbaa !1252
  %23 = load i32, ptr %i, align 4, !dbg !1830, !tbaa !1335
  %idxprom36 = sext i32 %23 to i64, !dbg !1828
  %arrayidx37 = getelementptr i8, ptr %22, i64 %idxprom36, !dbg !1828
  %24 = load i8, ptr %arrayidx37, align 1, !dbg !1828, !tbaa !1774
  %conv38 = sext i8 %24 to i32, !dbg !1828
  %cmp39 = icmp slt i32 %conv38, 48, !dbg !1831
  br i1 %cmp39, label %if.then46, label %lor.lhs.false, !dbg !1832

lor.lhs.false:                                    ; preds = %if.else
  %25 = load ptr, ptr %rt_from_call, align 8, !dbg !1833, !tbaa !1252
  %26 = load i32, ptr %i, align 4, !dbg !1834, !tbaa !1335
  %idxprom41 = sext i32 %26 to i64, !dbg !1833
  %arrayidx42 = getelementptr i8, ptr %25, i64 %idxprom41, !dbg !1833
  %27 = load i8, ptr %arrayidx42, align 1, !dbg !1833, !tbaa !1774
  %conv43 = sext i8 %27 to i32, !dbg !1833
  %cmp44 = icmp sgt i32 %conv43, 57, !dbg !1835
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !1836

if.then46:                                        ; preds = %lor.lhs.false, %if.else
  br label %for.end55, !dbg !1837

if.end47:                                         ; preds = %lor.lhs.false
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end35
  %28 = load ptr, ptr %rt_from_call, align 8, !dbg !1839, !tbaa !1252
  %29 = load i32, ptr %i, align 4, !dbg !1840, !tbaa !1335
  %idxprom49 = sext i32 %29 to i64, !dbg !1839
  %arrayidx50 = getelementptr i8, ptr %28, i64 %idxprom49, !dbg !1839
  %30 = load i8, ptr %arrayidx50, align 1, !dbg !1839, !tbaa !1774
  %31 = load i32, ptr %i, align 4, !dbg !1841, !tbaa !1335
  %idxprom51 = sext i32 %31 to i64, !dbg !1842
  %arrayidx52 = getelementptr [5 x i8], ptr %rtversion, i64 0, i64 %idxprom51, !dbg !1842
  store i8 %30, ptr %arrayidx52, align 1, !dbg !1843, !tbaa !1774
  br label %for.inc53, !dbg !1844

for.inc53:                                        ; preds = %if.end48
  %32 = load i32, ptr %i, align 4, !dbg !1845, !tbaa !1335
  %inc54 = add i32 %32, 1, !dbg !1845
  store i32 %inc54, ptr %i, align 4, !dbg !1845, !tbaa !1335
  br label %for.cond23, !dbg !1846, !llvm.loop !1847

for.end55:                                        ; preds = %if.then46, %if.then34, %for.cond23
  %arraydecay56 = getelementptr inbounds [200 x i8], ptr %message, i64 0, i64 0, !dbg !1849
  %arraydecay57 = getelementptr inbounds [5 x i8], ptr %ctversion, i64 0, i64 0, !dbg !1850
  %arraydecay58 = getelementptr inbounds [5 x i8], ptr %rtversion, i64 0, i64 0, !dbg !1851
  %call59 = call i32 (ptr, i64, ptr, ...) @PyOS_snprintf(ptr noundef %arraydecay56, i64 noundef 200, ptr noundef @.str.19, ptr noundef %arraydecay57, ptr noundef @.str.16, ptr noundef %arraydecay58), !dbg !1852
  %arraydecay60 = getelementptr inbounds [200 x i8], ptr %message, i64 0, i64 0, !dbg !1853
  %call61 = call i32 @PyErr_WarnEx(ptr noundef null, ptr noundef %arraydecay60, i64 noundef 1), !dbg !1854
  store i32 %call61, ptr %retval, align 4, !dbg !1855
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 200, ptr %message) #8, !dbg !1856
  call void @llvm.lifetime.end.p0(i64 5, ptr %rtversion) #8, !dbg !1856
  br label %cleanup

if.end62:                                         ; preds = %for.end
  store i32 0, ptr %retval, align 4, !dbg !1857
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1857

cleanup:                                          ; preds = %if.end62, %for.end55
  call void @llvm.lifetime.end.p0(i64 8, ptr %rt_from_call) #8, !dbg !1858
  call void @llvm.lifetime.end.p0(i64 4, ptr %found_dot) #8, !dbg !1858
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !1858
  call void @llvm.lifetime.end.p0(i64 4, ptr %same) #8, !dbg !1858
  call void @llvm.lifetime.end.p0(i64 5, ptr %ctversion) #8, !dbg !1858
  %33 = load i32, ptr %retval, align 4, !dbg !1858
  ret i32 %33, !dbg !1858
}

declare !dbg !1859 ptr @PyTuple_New(i64 noundef) #1

declare !dbg !1863 ptr @PyBytes_FromStringAndSize(ptr noundef, i64 noundef) #1

declare !dbg !1867 ptr @PyUnicode_FromStringAndSize(ptr noundef, i64 noundef) #1

declare !dbg !1869 ptr @PyImport_AddModule(ptr noundef) #1

declare !dbg !1873 i32 @PyObject_SetAttrString(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitGlobals() #0 !dbg !1874 {
entry:
  %retval = alloca i32, align 4
  %call = call i32 @__Pyx_InitStrings(ptr noundef @__pyx_string_tab), !dbg !1877
  %cmp = icmp slt i32 %call, 0, !dbg !1879
  br i1 %cmp, label %if.then, label %if.end, !dbg !1880

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @__pyx_f, align 16, !dbg !1881, !tbaa !1252
  store ptr %0, ptr @__pyx_filename, align 8, !dbg !1881, !tbaa !1252
  %1 = load ptr, ptr @__pyx_filename, align 8, !dbg !1881, !tbaa !1252
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !1881, !tbaa !1335
  %2 = load i32, ptr @__pyx_lineno, align 4, !dbg !1881, !tbaa !1335
  store i32 2967, ptr @__pyx_clineno, align 4, !dbg !1881, !tbaa !1335
  %3 = load i32, ptr @__pyx_clineno, align 4, !dbg !1881, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1884

if.end:                                           ; preds = %entry
  %call1 = call ptr @PyLong_FromLong(i64 noundef 2), !dbg !1885
  store ptr %call1, ptr @__pyx_int_2, align 8, !dbg !1886, !tbaa !1252
  %4 = load ptr, ptr @__pyx_int_2, align 8, !dbg !1887, !tbaa !1252
  %tobool = icmp ne ptr %4, null, !dbg !1887
  %lnot = xor i1 %tobool, true, !dbg !1887
  %lnot2 = xor i1 %lnot, true, !dbg !1887
  %lnot3 = xor i1 %lnot2, true, !dbg !1887
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !1887
  %conv = sext i32 %lnot.ext to i64, !dbg !1887
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !1887
  %tobool4 = icmp ne i64 %expval, 0, !dbg !1887
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !1889

if.then5:                                         ; preds = %if.end
  %5 = load ptr, ptr @__pyx_f, align 16, !dbg !1890, !tbaa !1252
  store ptr %5, ptr @__pyx_filename, align 8, !dbg !1890, !tbaa !1252
  %6 = load ptr, ptr @__pyx_filename, align 8, !dbg !1890, !tbaa !1252
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !1890, !tbaa !1335
  %7 = load i32, ptr @__pyx_lineno, align 4, !dbg !1890, !tbaa !1335
  store i32 2968, ptr @__pyx_clineno, align 4, !dbg !1890, !tbaa !1335
  %8 = load i32, ptr @__pyx_clineno, align 4, !dbg !1890, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1893

if.end6:                                          ; preds = %if.end
  %call7 = call ptr @PyLong_FromLong(i64 noundef 68575658), !dbg !1894
  store ptr %call7, ptr @__pyx_int_68575658, align 8, !dbg !1895, !tbaa !1252
  %9 = load ptr, ptr @__pyx_int_68575658, align 8, !dbg !1896, !tbaa !1252
  %tobool8 = icmp ne ptr %9, null, !dbg !1896
  %lnot9 = xor i1 %tobool8, true, !dbg !1896
  %lnot11 = xor i1 %lnot9, true, !dbg !1896
  %lnot13 = xor i1 %lnot11, true, !dbg !1896
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !1896
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !1896
  %expval16 = call i64 @llvm.expect.i64(i64 %conv15, i64 0), !dbg !1896
  %tobool17 = icmp ne i64 %expval16, 0, !dbg !1896
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !1898

if.then18:                                        ; preds = %if.end6
  %10 = load ptr, ptr @__pyx_f, align 16, !dbg !1899, !tbaa !1252
  store ptr %10, ptr @__pyx_filename, align 8, !dbg !1899, !tbaa !1252
  %11 = load ptr, ptr @__pyx_filename, align 8, !dbg !1899, !tbaa !1252
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !1899, !tbaa !1335
  %12 = load i32, ptr @__pyx_lineno, align 4, !dbg !1899, !tbaa !1335
  store i32 2969, ptr @__pyx_clineno, align 4, !dbg !1899, !tbaa !1335
  %13 = load i32, ptr @__pyx_clineno, align 4, !dbg !1899, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1902

if.end19:                                         ; preds = %if.end6
  %call20 = call ptr @PyLong_FromLong(i64 noundef 87510373), !dbg !1903
  store ptr %call20, ptr @__pyx_int_87510373, align 8, !dbg !1904, !tbaa !1252
  %14 = load ptr, ptr @__pyx_int_87510373, align 8, !dbg !1905, !tbaa !1252
  %tobool21 = icmp ne ptr %14, null, !dbg !1905
  %lnot22 = xor i1 %tobool21, true, !dbg !1905
  %lnot24 = xor i1 %lnot22, true, !dbg !1905
  %lnot26 = xor i1 %lnot24, true, !dbg !1905
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !1905
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !1905
  %expval29 = call i64 @llvm.expect.i64(i64 %conv28, i64 0), !dbg !1905
  %tobool30 = icmp ne i64 %expval29, 0, !dbg !1905
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !1907

if.then31:                                        ; preds = %if.end19
  %15 = load ptr, ptr @__pyx_f, align 16, !dbg !1908, !tbaa !1252
  store ptr %15, ptr @__pyx_filename, align 8, !dbg !1908, !tbaa !1252
  %16 = load ptr, ptr @__pyx_filename, align 8, !dbg !1908, !tbaa !1252
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !1908, !tbaa !1335
  %17 = load i32, ptr @__pyx_lineno, align 4, !dbg !1908, !tbaa !1335
  store i32 2970, ptr @__pyx_clineno, align 4, !dbg !1908, !tbaa !1335
  %18 = load i32, ptr @__pyx_clineno, align 4, !dbg !1908, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1911

if.end32:                                         ; preds = %if.end19
  %call33 = call ptr @PyLong_FromLong(i64 noundef 202888320), !dbg !1912
  store ptr %call33, ptr @__pyx_int_202888320, align 8, !dbg !1913, !tbaa !1252
  %19 = load ptr, ptr @__pyx_int_202888320, align 8, !dbg !1914, !tbaa !1252
  %tobool34 = icmp ne ptr %19, null, !dbg !1914
  %lnot35 = xor i1 %tobool34, true, !dbg !1914
  %lnot37 = xor i1 %lnot35, true, !dbg !1914
  %lnot39 = xor i1 %lnot37, true, !dbg !1914
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !1914
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !1914
  %expval42 = call i64 @llvm.expect.i64(i64 %conv41, i64 0), !dbg !1914
  %tobool43 = icmp ne i64 %expval42, 0, !dbg !1914
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !1916

if.then44:                                        ; preds = %if.end32
  %20 = load ptr, ptr @__pyx_f, align 16, !dbg !1917, !tbaa !1252
  store ptr %20, ptr @__pyx_filename, align 8, !dbg !1917, !tbaa !1252
  %21 = load ptr, ptr @__pyx_filename, align 8, !dbg !1917, !tbaa !1252
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !1917, !tbaa !1335
  %22 = load i32, ptr @__pyx_lineno, align 4, !dbg !1917, !tbaa !1335
  store i32 2971, ptr @__pyx_clineno, align 4, !dbg !1917, !tbaa !1335
  %23 = load i32, ptr @__pyx_clineno, align 4, !dbg !1917, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1920

if.end45:                                         ; preds = %if.end32
  %call46 = call ptr @PyLong_FromLong(i64 noundef -1), !dbg !1921
  store ptr %call46, ptr @__pyx_int_neg_1, align 8, !dbg !1922, !tbaa !1252
  %24 = load ptr, ptr @__pyx_int_neg_1, align 8, !dbg !1923, !tbaa !1252
  %tobool47 = icmp ne ptr %24, null, !dbg !1923
  %lnot48 = xor i1 %tobool47, true, !dbg !1923
  %lnot50 = xor i1 %lnot48, true, !dbg !1923
  %lnot52 = xor i1 %lnot50, true, !dbg !1923
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !1923
  %conv54 = sext i32 %lnot.ext53 to i64, !dbg !1923
  %expval55 = call i64 @llvm.expect.i64(i64 %conv54, i64 0), !dbg !1923
  %tobool56 = icmp ne i64 %expval55, 0, !dbg !1923
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !1925

if.then57:                                        ; preds = %if.end45
  %25 = load ptr, ptr @__pyx_f, align 16, !dbg !1926, !tbaa !1252
  store ptr %25, ptr @__pyx_filename, align 8, !dbg !1926, !tbaa !1252
  %26 = load ptr, ptr @__pyx_filename, align 8, !dbg !1926, !tbaa !1252
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !1926, !tbaa !1335
  %27 = load i32, ptr @__pyx_lineno, align 4, !dbg !1926, !tbaa !1335
  store i32 2972, ptr @__pyx_clineno, align 4, !dbg !1926, !tbaa !1335
  %28 = load i32, ptr @__pyx_clineno, align 4, !dbg !1926, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1929

if.end58:                                         ; preds = %if.end45
  store i32 0, ptr %retval, align 4, !dbg !1930
  br label %return, !dbg !1930

__pyx_L1_error:                                   ; preds = %if.then57, %if.then44, %if.then31, %if.then18, %if.then5, %if.then
  tail call void @llvm.dbg.label(metadata !1876), !dbg !1931
  store i32 -1, ptr %retval, align 4, !dbg !1932
  br label %return, !dbg !1932

return:                                           ; preds = %__pyx_L1_error, %if.end58
  %29 = load i32, ptr %retval, align 4, !dbg !1933
  ret i32 %29, !dbg !1933
}

declare !dbg !1934 i32 @PyObject_SetAttr(ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !1935 ptr @PyImport_GetModuleDict() #1

declare !dbg !1936 ptr @PyDict_GetItemString(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitCachedBuiltins() #0 !dbg !1937 {
entry:
  %retval = alloca i32, align 4
  %0 = load ptr, ptr @__pyx_n_s_ValueError, align 8, !dbg !1940, !tbaa !1252
  %call = call ptr @__Pyx_GetBuiltinName(ptr noundef %0), !dbg !1941
  store ptr %call, ptr @__pyx_builtin_ValueError, align 8, !dbg !1942, !tbaa !1252
  %1 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !dbg !1943, !tbaa !1252
  %tobool = icmp ne ptr %1, null, !dbg !1943
  br i1 %tobool, label %if.end, label %if.then, !dbg !1945

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @__pyx_f, align 16, !dbg !1946, !tbaa !1252
  store ptr %2, ptr @__pyx_filename, align 8, !dbg !1946, !tbaa !1252
  %3 = load ptr, ptr @__pyx_filename, align 8, !dbg !1946, !tbaa !1252
  store i32 25, ptr @__pyx_lineno, align 4, !dbg !1946, !tbaa !1335
  %4 = load i32, ptr @__pyx_lineno, align 4, !dbg !1946, !tbaa !1335
  store i32 2918, ptr @__pyx_clineno, align 4, !dbg !1946, !tbaa !1335
  %5 = load i32, ptr @__pyx_clineno, align 4, !dbg !1946, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1949

if.end:                                           ; preds = %entry
  store i32 0, ptr %retval, align 4, !dbg !1950
  br label %return, !dbg !1950

__pyx_L1_error:                                   ; preds = %if.then
  tail call void @llvm.dbg.label(metadata !1939), !dbg !1951
  store i32 -1, ptr %retval, align 4, !dbg !1952
  br label %return, !dbg !1952

return:                                           ; preds = %__pyx_L1_error, %if.end
  %6 = load i32, ptr %retval, align 4, !dbg !1953
  ret i32 %6, !dbg !1953
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitCachedConstants() #0 !dbg !1954 {
entry:
  %retval = alloca i32, align 4
  %0 = load ptr, ptr @__pyx_kp_u_NDFrameIndexer_does_not_support, align 8, !dbg !1957, !tbaa !1252
  %call = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %0), !dbg !1958
  store ptr %call, ptr @__pyx_tuple_, align 8, !dbg !1959, !tbaa !1252
  %1 = load ptr, ptr @__pyx_tuple_, align 8, !dbg !1960, !tbaa !1252
  %tobool = icmp ne ptr %1, null, !dbg !1960
  %lnot = xor i1 %tobool, true, !dbg !1960
  %lnot1 = xor i1 %lnot, true, !dbg !1960
  %lnot2 = xor i1 %lnot1, true, !dbg !1960
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !1960
  %conv = sext i32 %lnot.ext to i64, !dbg !1960
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !1960
  %tobool3 = icmp ne i64 %expval, 0, !dbg !1960
  br i1 %tobool3, label %if.then, label %if.end, !dbg !1962

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @__pyx_f, align 16, !dbg !1963, !tbaa !1252
  store ptr %2, ptr @__pyx_filename, align 8, !dbg !1963, !tbaa !1252
  %3 = load ptr, ptr @__pyx_filename, align 8, !dbg !1963, !tbaa !1252
  store i32 25, ptr @__pyx_lineno, align 4, !dbg !1963, !tbaa !1335
  %4 = load i32, ptr @__pyx_lineno, align 4, !dbg !1963, !tbaa !1335
  store i32 2935, ptr @__pyx_clineno, align 4, !dbg !1963, !tbaa !1335
  %5 = load i32, ptr @__pyx_clineno, align 4, !dbg !1963, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1966

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr @__pyx_int_68575658, align 8, !dbg !1967, !tbaa !1252
  %7 = load ptr, ptr @__pyx_int_202888320, align 8, !dbg !1968, !tbaa !1252
  %8 = load ptr, ptr @__pyx_int_87510373, align 8, !dbg !1969, !tbaa !1252
  %call4 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 3, ptr noundef %6, ptr noundef %7, ptr noundef %8), !dbg !1970
  store ptr %call4, ptr @__pyx_tuple__2, align 8, !dbg !1971, !tbaa !1252
  %9 = load ptr, ptr @__pyx_tuple__2, align 8, !dbg !1972, !tbaa !1252
  %tobool5 = icmp ne ptr %9, null, !dbg !1972
  %lnot6 = xor i1 %tobool5, true, !dbg !1972
  %lnot8 = xor i1 %lnot6, true, !dbg !1972
  %lnot10 = xor i1 %lnot8, true, !dbg !1972
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !1972
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !1972
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !1972
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !1972
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !1974

if.then15:                                        ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !1975, !tbaa !1252
  store ptr %10, ptr @__pyx_filename, align 8, !dbg !1975, !tbaa !1252
  %11 = load ptr, ptr @__pyx_filename, align 8, !dbg !1975, !tbaa !1252
  store i32 4, ptr @__pyx_lineno, align 4, !dbg !1975, !tbaa !1335
  %12 = load i32, ptr @__pyx_lineno, align 4, !dbg !1975, !tbaa !1335
  store i32 2946, ptr @__pyx_clineno, align 4, !dbg !1975, !tbaa !1335
  %13 = load i32, ptr @__pyx_clineno, align 4, !dbg !1975, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1978

if.end16:                                         ; preds = %if.end
  %14 = load ptr, ptr @__pyx_n_s_pyx_type, align 8, !dbg !1979, !tbaa !1252
  %15 = load ptr, ptr @__pyx_n_s_pyx_checksum, align 8, !dbg !1980, !tbaa !1252
  %16 = load ptr, ptr @__pyx_n_s_pyx_state, align 8, !dbg !1981, !tbaa !1252
  %17 = load ptr, ptr @__pyx_n_s_pyx_PickleError, align 8, !dbg !1982, !tbaa !1252
  %18 = load ptr, ptr @__pyx_n_s_pyx_result, align 8, !dbg !1983, !tbaa !1252
  %call17 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 5, ptr noundef %14, ptr noundef %15, ptr noundef %16, ptr noundef %17, ptr noundef %18), !dbg !1984
  store ptr %call17, ptr @__pyx_tuple__3, align 8, !dbg !1985, !tbaa !1252
  %19 = load ptr, ptr @__pyx_tuple__3, align 8, !dbg !1986, !tbaa !1252
  %tobool18 = icmp ne ptr %19, null, !dbg !1986
  %lnot19 = xor i1 %tobool18, true, !dbg !1986
  %lnot21 = xor i1 %lnot19, true, !dbg !1986
  %lnot23 = xor i1 %lnot21, true, !dbg !1986
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !1986
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !1986
  %expval26 = call i64 @llvm.expect.i64(i64 %conv25, i64 0), !dbg !1986
  %tobool27 = icmp ne i64 %expval26, 0, !dbg !1986
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !1988

if.then28:                                        ; preds = %if.end16
  %20 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !1989, !tbaa !1252
  store ptr %20, ptr @__pyx_filename, align 8, !dbg !1989, !tbaa !1252
  %21 = load ptr, ptr @__pyx_filename, align 8, !dbg !1989, !tbaa !1252
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !1989, !tbaa !1335
  %22 = load i32, ptr @__pyx_lineno, align 4, !dbg !1989, !tbaa !1335
  store i32 2955, ptr @__pyx_clineno, align 4, !dbg !1989, !tbaa !1335
  %23 = load i32, ptr @__pyx_clineno, align 4, !dbg !1989, !tbaa !1335
  br label %__pyx_L1_error, !dbg !1992

if.end29:                                         ; preds = %if.end16
  %24 = load ptr, ptr @__pyx_empty_bytes, align 8, !dbg !1993, !tbaa !1252
  %25 = load ptr, ptr @__pyx_empty_tuple, align 8, !dbg !1993, !tbaa !1252
  %26 = load ptr, ptr @__pyx_empty_tuple, align 8, !dbg !1993, !tbaa !1252
  %27 = load ptr, ptr @__pyx_tuple__3, align 8, !dbg !1993, !tbaa !1252
  %28 = load ptr, ptr @__pyx_empty_tuple, align 8, !dbg !1993, !tbaa !1252
  %29 = load ptr, ptr @__pyx_empty_tuple, align 8, !dbg !1993, !tbaa !1252
  %30 = load ptr, ptr @__pyx_kp_s_stringsource, align 8, !dbg !1993, !tbaa !1252
  %31 = load ptr, ptr @__pyx_n_s_pyx_unpickle_NDFrameIndexerBas, align 8, !dbg !1993, !tbaa !1252
  %32 = load ptr, ptr @__pyx_empty_bytes, align 8, !dbg !1993, !tbaa !1252
  %call30 = call ptr @PyCode_New(i32 noundef 3, i32 noundef 0, i32 noundef 5, i32 noundef 0, i32 noundef 3, ptr noundef %24, ptr noundef %25, ptr noundef %26, ptr noundef %27, ptr noundef %28, ptr noundef %29, ptr noundef %30, ptr noundef %31, i32 noundef 1, ptr noundef %32), !dbg !1993
  store ptr %call30, ptr @__pyx_codeobj__4, align 8, !dbg !1994, !tbaa !1252
  %33 = load ptr, ptr @__pyx_codeobj__4, align 8, !dbg !1995, !tbaa !1252
  %tobool31 = icmp ne ptr %33, null, !dbg !1995
  %lnot32 = xor i1 %tobool31, true, !dbg !1995
  %lnot34 = xor i1 %lnot32, true, !dbg !1995
  %lnot36 = xor i1 %lnot34, true, !dbg !1995
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !1995
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !1995
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0), !dbg !1995
  %tobool40 = icmp ne i64 %expval39, 0, !dbg !1995
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !1997

if.then41:                                        ; preds = %if.end29
  %34 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !1998, !tbaa !1252
  store ptr %34, ptr @__pyx_filename, align 8, !dbg !1998, !tbaa !1252
  %35 = load ptr, ptr @__pyx_filename, align 8, !dbg !1998, !tbaa !1252
  store i32 1, ptr @__pyx_lineno, align 4, !dbg !1998, !tbaa !1335
  %36 = load i32, ptr @__pyx_lineno, align 4, !dbg !1998, !tbaa !1335
  store i32 2958, ptr @__pyx_clineno, align 4, !dbg !1998, !tbaa !1335
  %37 = load i32, ptr @__pyx_clineno, align 4, !dbg !1998, !tbaa !1335
  br label %__pyx_L1_error, !dbg !2001

if.end42:                                         ; preds = %if.end29
  store i32 0, ptr %retval, align 4, !dbg !2002
  br label %return, !dbg !2002

__pyx_L1_error:                                   ; preds = %if.then41, %if.then28, %if.then15, %if.then
  tail call void @llvm.dbg.label(metadata !1956), !dbg !2003
  store i32 -1, ptr %retval, align 4, !dbg !2004
  br label %return, !dbg !2004

return:                                           ; preds = %__pyx_L1_error, %if.end42
  %38 = load i32, ptr %retval, align 4, !dbg !2005
  ret i32 %38, !dbg !2005
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_global_init_code() #0 !dbg !2006 {
entry:
  ret i32 0, !dbg !2007
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_variable_export_code() #0 !dbg !2008 {
entry:
  ret i32 0, !dbg !2009
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_function_export_code() #0 !dbg !2010 {
entry:
  ret i32 0, !dbg !2011
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_type_init_code() #0 !dbg !2012 {
entry:
  %retval = alloca i32, align 4
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !2018
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !2014, metadata !DIExpression()), !dbg !2019
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !2019, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #8, !dbg !2020
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !2015, metadata !DIExpression()), !dbg !2021
  store ptr null, ptr %__pyx_filename, align 8, !dbg !2021, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !2022
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !2016, metadata !DIExpression()), !dbg !2023
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !2023, !tbaa !1335
  %call = call i32 @PyType_Ready(ptr noundef @__pyx_type_6pandas_5_libs_8indexing_NDFrameIndexerBase), !dbg !2024
  %cmp = icmp slt i32 %call, 0, !dbg !2026
  br i1 %cmp, label %if.then, label %if.end, !dbg !2027

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @__pyx_f, align 16, !dbg !2028, !tbaa !1252
  store ptr %0, ptr %__pyx_filename, align 8, !dbg !2028, !tbaa !1252
  %1 = load ptr, ptr %__pyx_filename, align 8, !dbg !2028, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2028, !tbaa !1335
  %2 = load i32, ptr %__pyx_lineno, align 4, !dbg !2028, !tbaa !1335
  store i32 3017, ptr %__pyx_clineno, align 4, !dbg !2028, !tbaa !1335
  %3 = load i32, ptr %__pyx_clineno, align 4, !dbg !2028, !tbaa !1335
  br label %__pyx_L1_error, !dbg !2031

if.end:                                           ; preds = %entry
  %4 = load i64, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type_6pandas_5_libs_8indexing_NDFrameIndexerBase, i32 0, i32 34), align 8, !dbg !2032, !tbaa !2034
  %tobool = icmp ne i64 %4, 0, !dbg !2032
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !2032

land.rhs:                                         ; preds = %if.end
  %5 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type_6pandas_5_libs_8indexing_NDFrameIndexerBase, i32 0, i32 16), align 8, !dbg !2032, !tbaa !2035
  %cmp1 = icmp eq ptr %5, @PyObject_GenericGetAttr, !dbg !2032
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %6 = phi i1 [ false, %if.end ], [ %cmp1, %land.rhs ], !dbg !2036
  %lnot = xor i1 %6, true, !dbg !2032
  %lnot2 = xor i1 %lnot, true, !dbg !2032
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !2032
  %conv = sext i32 %lnot.ext to i64, !dbg !2032
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !2032
  %tobool3 = icmp ne i64 %expval, 0, !dbg !2032
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !2037

if.then4:                                         ; preds = %land.end
  store ptr @PyObject_GenericGetAttr, ptr getelementptr inbounds (%struct._typeobject, ptr @__pyx_type_6pandas_5_libs_8indexing_NDFrameIndexerBase, i32 0, i32 16), align 8, !dbg !2038, !tbaa !2035
  br label %if.end5, !dbg !2040

if.end5:                                          ; preds = %if.then4, %land.end
  %7 = load ptr, ptr @__pyx_m, align 8, !dbg !2041, !tbaa !1252
  %8 = load ptr, ptr @__pyx_n_s_NDFrameIndexerBase, align 8, !dbg !2043, !tbaa !1252
  %call6 = call i32 @PyObject_SetAttr(ptr noundef %7, ptr noundef %8, ptr noundef @__pyx_type_6pandas_5_libs_8indexing_NDFrameIndexerBase), !dbg !2044
  %cmp7 = icmp slt i32 %call6, 0, !dbg !2045
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2046

if.then9:                                         ; preds = %if.end5
  %9 = load ptr, ptr @__pyx_f, align 16, !dbg !2047, !tbaa !1252
  store ptr %9, ptr %__pyx_filename, align 8, !dbg !2047, !tbaa !1252
  %10 = load ptr, ptr %__pyx_filename, align 8, !dbg !2047, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2047, !tbaa !1335
  %11 = load i32, ptr %__pyx_lineno, align 4, !dbg !2047, !tbaa !1335
  store i32 3024, ptr %__pyx_clineno, align 4, !dbg !2047, !tbaa !1335
  %12 = load i32, ptr %__pyx_clineno, align 4, !dbg !2047, !tbaa !1335
  br label %__pyx_L1_error, !dbg !2050

if.end10:                                         ; preds = %if.end5
  %call11 = call i32 @__Pyx_setup_reduce(ptr noundef @__pyx_type_6pandas_5_libs_8indexing_NDFrameIndexerBase), !dbg !2051
  %cmp12 = icmp slt i32 %call11, 0, !dbg !2053
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !2054

if.then14:                                        ; preds = %if.end10
  %13 = load ptr, ptr @__pyx_f, align 16, !dbg !2055, !tbaa !1252
  store ptr %13, ptr %__pyx_filename, align 8, !dbg !2055, !tbaa !1252
  %14 = load ptr, ptr %__pyx_filename, align 8, !dbg !2055, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !2055, !tbaa !1335
  %15 = load i32, ptr %__pyx_lineno, align 4, !dbg !2055, !tbaa !1335
  store i32 3025, ptr %__pyx_clineno, align 4, !dbg !2055, !tbaa !1335
  %16 = load i32, ptr %__pyx_clineno, align 4, !dbg !2055, !tbaa !1335
  br label %__pyx_L1_error, !dbg !2058

if.end15:                                         ; preds = %if.end10
  store ptr @__pyx_type_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr @__pyx_ptype_6pandas_5_libs_8indexing_NDFrameIndexerBase, align 8, !dbg !2059, !tbaa !1252
  store i32 0, ptr %retval, align 4, !dbg !2060
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2060

__pyx_L1_error:                                   ; preds = %if.then14, %if.then9, %if.then
  tail call void @llvm.dbg.label(metadata !2017), !dbg !2061
  store i32 -1, ptr %retval, align 4, !dbg !2062
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2062

cleanup:                                          ; preds = %__pyx_L1_error, %if.end15
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !2063
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #8, !dbg !2063
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !2063
  %17 = load i32, ptr %retval, align 4, !dbg !2063
  ret i32 %17, !dbg !2063
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_type_import_code() #0 !dbg !2064 {
entry:
  ret i32 0, !dbg !2065
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_variable_import_code() #0 !dbg !2066 {
entry:
  ret i32 0, !dbg !2067
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_modinit_function_import_code() #0 !dbg !2068 {
entry:
  ret i32 0, !dbg !2069
}

declare !dbg !2070 ptr @PyCMethod_New(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !2073 i32 @PyDict_SetItem(ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !2074 ptr @PyDict_New() #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_AddTraceback(ptr noundef %funcname, i32 noundef %c_line, i32 noundef %py_line, ptr noundef %filename) #0 !dbg !2075 {
entry:
  %funcname.addr = alloca ptr, align 8
  %c_line.addr = alloca i32, align 4
  %py_line.addr = alloca i32, align 4
  %filename.addr = alloca ptr, align 8
  %py_code = alloca ptr, align 8
  %py_frame = alloca ptr, align 8
  %tstate = alloca ptr, align 8
  %ptype = alloca ptr, align 8
  %pvalue = alloca ptr, align 8
  %ptraceback = alloca ptr, align 8
  store ptr %funcname, ptr %funcname.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %funcname.addr, metadata !2079, metadata !DIExpression()), !dbg !2090
  store i32 %c_line, ptr %c_line.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %c_line.addr, metadata !2080, metadata !DIExpression()), !dbg !2091
  store i32 %py_line, ptr %py_line.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %py_line.addr, metadata !2081, metadata !DIExpression()), !dbg !2092
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %filename.addr, metadata !2082, metadata !DIExpression()), !dbg !2093
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_code) #8, !dbg !2094
  tail call void @llvm.dbg.declare(metadata ptr %py_code, metadata !2083, metadata !DIExpression()), !dbg !2095
  store ptr null, ptr %py_code, align 8, !dbg !2095, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_frame) #8, !dbg !2096
  tail call void @llvm.dbg.declare(metadata ptr %py_frame, metadata !2084, metadata !DIExpression()), !dbg !2097
  store ptr null, ptr %py_frame, align 8, !dbg !2097, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %tstate) #8, !dbg !2098
  tail call void @llvm.dbg.declare(metadata ptr %tstate, metadata !2085, metadata !DIExpression()), !dbg !2099
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !2100
  store ptr %call, ptr %tstate, align 8, !dbg !2099, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptype) #8, !dbg !2101
  tail call void @llvm.dbg.declare(metadata ptr %ptype, metadata !2086, metadata !DIExpression()), !dbg !2102
  call void @llvm.lifetime.start.p0(i64 8, ptr %pvalue) #8, !dbg !2101
  tail call void @llvm.dbg.declare(metadata ptr %pvalue, metadata !2087, metadata !DIExpression()), !dbg !2103
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptraceback) #8, !dbg !2101
  tail call void @llvm.dbg.declare(metadata ptr %ptraceback, metadata !2088, metadata !DIExpression()), !dbg !2104
  %0 = load i32, ptr %c_line.addr, align 4, !dbg !2105, !tbaa !1335
  %tobool = icmp ne i32 %0, 0, !dbg !2105
  br i1 %tobool, label %if.then, label %if.end, !dbg !2107

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %tstate, align 8, !dbg !2108, !tbaa !1252
  %2 = load i32, ptr %c_line.addr, align 4, !dbg !2110, !tbaa !1335
  %call1 = call i32 @__Pyx_CLineForTraceback(ptr noundef %1, i32 noundef %2), !dbg !2111
  store i32 %call1, ptr %c_line.addr, align 4, !dbg !2112, !tbaa !1335
  br label %if.end, !dbg !2113

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, ptr %c_line.addr, align 4, !dbg !2114, !tbaa !1335
  %tobool2 = icmp ne i32 %3, 0, !dbg !2114
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !2114

cond.true:                                        ; preds = %if.end
  %4 = load i32, ptr %c_line.addr, align 4, !dbg !2115, !tbaa !1335
  %sub = sub i32 0, %4, !dbg !2116
  br label %cond.end, !dbg !2114

cond.false:                                       ; preds = %if.end
  %5 = load i32, ptr %py_line.addr, align 4, !dbg !2117, !tbaa !1335
  br label %cond.end, !dbg !2114

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %5, %cond.false ], !dbg !2114
  %call3 = call ptr @__pyx_find_code_object(i32 noundef %cond), !dbg !2118
  store ptr %call3, ptr %py_code, align 8, !dbg !2119, !tbaa !1252
  %6 = load ptr, ptr %py_code, align 8, !dbg !2120, !tbaa !1252
  %tobool4 = icmp ne ptr %6, null, !dbg !2120
  br i1 %tobool4, label %if.end16, label %if.then5, !dbg !2122

if.then5:                                         ; preds = %cond.end
  %7 = load ptr, ptr %tstate, align 8, !dbg !2123, !tbaa !1252
  call void @__Pyx_ErrFetchInState(ptr noundef %7, ptr noundef %ptype, ptr noundef %pvalue, ptr noundef %ptraceback), !dbg !2125
  %8 = load ptr, ptr %funcname.addr, align 8, !dbg !2126, !tbaa !1252
  %9 = load i32, ptr %c_line.addr, align 4, !dbg !2127, !tbaa !1335
  %10 = load i32, ptr %py_line.addr, align 4, !dbg !2128, !tbaa !1335
  %11 = load ptr, ptr %filename.addr, align 8, !dbg !2129, !tbaa !1252
  %call6 = call ptr @__Pyx_CreateCodeObjectForTraceback(ptr noundef %8, i32 noundef %9, i32 noundef %10, ptr noundef %11), !dbg !2130
  store ptr %call6, ptr %py_code, align 8, !dbg !2131, !tbaa !1252
  %12 = load ptr, ptr %py_code, align 8, !dbg !2132, !tbaa !1252
  %tobool7 = icmp ne ptr %12, null, !dbg !2132
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !2134

if.then8:                                         ; preds = %if.then5
  %13 = load ptr, ptr %ptype, align 8, !dbg !2135, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %13), !dbg !2135
  %14 = load ptr, ptr %pvalue, align 8, !dbg !2137, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %14), !dbg !2137
  %15 = load ptr, ptr %ptraceback, align 8, !dbg !2138, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %15), !dbg !2138
  br label %bad, !dbg !2139

if.end9:                                          ; preds = %if.then5
  %16 = load ptr, ptr %tstate, align 8, !dbg !2140, !tbaa !1252
  %17 = load ptr, ptr %ptype, align 8, !dbg !2141, !tbaa !1252
  %18 = load ptr, ptr %pvalue, align 8, !dbg !2142, !tbaa !1252
  %19 = load ptr, ptr %ptraceback, align 8, !dbg !2143, !tbaa !1252
  call void @__Pyx_ErrRestoreInState(ptr noundef %16, ptr noundef %17, ptr noundef %18, ptr noundef %19), !dbg !2144
  %20 = load i32, ptr %c_line.addr, align 4, !dbg !2145, !tbaa !1335
  %tobool10 = icmp ne i32 %20, 0, !dbg !2145
  br i1 %tobool10, label %cond.true11, label %cond.false13, !dbg !2145

cond.true11:                                      ; preds = %if.end9
  %21 = load i32, ptr %c_line.addr, align 4, !dbg !2146, !tbaa !1335
  %sub12 = sub i32 0, %21, !dbg !2147
  br label %cond.end14, !dbg !2145

cond.false13:                                     ; preds = %if.end9
  %22 = load i32, ptr %py_line.addr, align 4, !dbg !2148, !tbaa !1335
  br label %cond.end14, !dbg !2145

cond.end14:                                       ; preds = %cond.false13, %cond.true11
  %cond15 = phi i32 [ %sub12, %cond.true11 ], [ %22, %cond.false13 ], !dbg !2145
  %23 = load ptr, ptr %py_code, align 8, !dbg !2149, !tbaa !1252
  call void @__pyx_insert_code_object(i32 noundef %cond15, ptr noundef %23), !dbg !2150
  br label %if.end16, !dbg !2151

if.end16:                                         ; preds = %cond.end14, %cond.end
  %24 = load ptr, ptr %tstate, align 8, !dbg !2152, !tbaa !1252
  %25 = load ptr, ptr %py_code, align 8, !dbg !2153, !tbaa !1252
  %26 = load ptr, ptr @__pyx_d, align 8, !dbg !2154, !tbaa !1252
  %call17 = call ptr @PyFrame_New(ptr noundef %24, ptr noundef %25, ptr noundef %26, ptr noundef null), !dbg !2155
  store ptr %call17, ptr %py_frame, align 8, !dbg !2156, !tbaa !1252
  %27 = load ptr, ptr %py_frame, align 8, !dbg !2157, !tbaa !1252
  %tobool18 = icmp ne ptr %27, null, !dbg !2157
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !2159

if.then19:                                        ; preds = %if.end16
  br label %bad, !dbg !2160

if.end20:                                         ; preds = %if.end16
  %28 = load i32, ptr %py_line.addr, align 4, !dbg !2161, !tbaa !1335
  %29 = load ptr, ptr %py_frame, align 8, !dbg !2161, !tbaa !1252
  %f_lineno = getelementptr inbounds %struct._frame, ptr %29, i32 0, i32 13, !dbg !2161
  store i32 %28, ptr %f_lineno, align 4, !dbg !2161, !tbaa !2162
  %30 = load ptr, ptr %py_frame, align 8, !dbg !2164, !tbaa !1252
  %call21 = call i32 @PyTraceBack_Here(ptr noundef %30), !dbg !2165
  br label %bad, !dbg !2165

bad:                                              ; preds = %if.end20, %if.then19, %if.then8
  tail call void @llvm.dbg.label(metadata !2089), !dbg !2166
  %31 = load ptr, ptr %py_code, align 8, !dbg !2167, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %31), !dbg !2167
  %32 = load ptr, ptr %py_frame, align 8, !dbg !2168, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %32), !dbg !2168
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptraceback) #8, !dbg !2169
  call void @llvm.lifetime.end.p0(i64 8, ptr %pvalue) #8, !dbg !2169
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptype) #8, !dbg !2169
  call void @llvm.lifetime.end.p0(i64 8, ptr %tstate) #8, !dbg !2169
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_frame) #8, !dbg !2169
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_code) #8, !dbg !2169
  ret void, !dbg !2169
}

declare !dbg !2170 ptr @PyErr_Occurred() #1

declare !dbg !2171 ptr @Py_GetVersion() #1

declare !dbg !2175 i32 @PyOS_snprintf(ptr noundef, i64 noundef, ptr noundef, ...) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #5

declare !dbg !2178 i32 @PyErr_WarnEx(ptr noundef, ptr noundef, i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InitStrings(ptr noundef %t) #0 !dbg !2182 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca ptr, align 8
  store ptr %t, ptr %t.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %t.addr, metadata !2187, metadata !DIExpression()), !dbg !2188
  br label %while.cond, !dbg !2189

while.cond:                                       ; preds = %if.end34, %entry
  %0 = load ptr, ptr %t.addr, align 8, !dbg !2190, !tbaa !1252
  %p = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %0, i32 0, i32 0, !dbg !2191
  %1 = load ptr, ptr %p, align 8, !dbg !2191, !tbaa !2192
  %tobool = icmp ne ptr %1, null, !dbg !2189
  br i1 %tobool, label %while.body, label %while.end, !dbg !2189

while.body:                                       ; preds = %while.cond
  %2 = load ptr, ptr %t.addr, align 8, !dbg !2194, !tbaa !1252
  %is_unicode = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %2, i32 0, i32 4, !dbg !2197
  %3 = load i8, ptr %is_unicode, align 8, !dbg !2197, !tbaa !2198
  %conv = sext i8 %3 to i32, !dbg !2194
  %4 = load ptr, ptr %t.addr, align 8, !dbg !2199, !tbaa !1252
  %is_str = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %4, i32 0, i32 5, !dbg !2200
  %5 = load i8, ptr %is_str, align 1, !dbg !2200, !tbaa !2201
  %conv1 = sext i8 %5 to i32, !dbg !2199
  %or = or i32 %conv, %conv1, !dbg !2202
  %tobool2 = icmp ne i32 %or, 0, !dbg !2202
  br i1 %tobool2, label %if.then, label %if.else19, !dbg !2203

if.then:                                          ; preds = %while.body
  %6 = load ptr, ptr %t.addr, align 8, !dbg !2204, !tbaa !1252
  %intern = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %6, i32 0, i32 6, !dbg !2207
  %7 = load i8, ptr %intern, align 2, !dbg !2207, !tbaa !2208
  %tobool3 = icmp ne i8 %7, 0, !dbg !2204
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !2209

if.then4:                                         ; preds = %if.then
  %8 = load ptr, ptr %t.addr, align 8, !dbg !2210, !tbaa !1252
  %s = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %8, i32 0, i32 1, !dbg !2212
  %9 = load ptr, ptr %s, align 8, !dbg !2212, !tbaa !2213
  %call = call ptr @PyUnicode_InternFromString(ptr noundef %9), !dbg !2214
  %10 = load ptr, ptr %t.addr, align 8, !dbg !2215, !tbaa !1252
  %p5 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %10, i32 0, i32 0, !dbg !2216
  %11 = load ptr, ptr %p5, align 8, !dbg !2216, !tbaa !2192
  store ptr %call, ptr %11, align 8, !dbg !2217, !tbaa !1252
  br label %if.end18, !dbg !2218

if.else:                                          ; preds = %if.then
  %12 = load ptr, ptr %t.addr, align 8, !dbg !2219, !tbaa !1252
  %encoding = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %12, i32 0, i32 3, !dbg !2221
  %13 = load ptr, ptr %encoding, align 8, !dbg !2221, !tbaa !2222
  %tobool6 = icmp ne ptr %13, null, !dbg !2219
  br i1 %tobool6, label %if.then7, label %if.else12, !dbg !2223

if.then7:                                         ; preds = %if.else
  %14 = load ptr, ptr %t.addr, align 8, !dbg !2224, !tbaa !1252
  %s8 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %14, i32 0, i32 1, !dbg !2226
  %15 = load ptr, ptr %s8, align 8, !dbg !2226, !tbaa !2213
  %16 = load ptr, ptr %t.addr, align 8, !dbg !2227, !tbaa !1252
  %n = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %16, i32 0, i32 2, !dbg !2228
  %17 = load i64, ptr %n, align 8, !dbg !2228, !tbaa !2229
  %sub = sub i64 %17, 1, !dbg !2230
  %18 = load ptr, ptr %t.addr, align 8, !dbg !2231, !tbaa !1252
  %encoding9 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %18, i32 0, i32 3, !dbg !2232
  %19 = load ptr, ptr %encoding9, align 8, !dbg !2232, !tbaa !2222
  %call10 = call ptr @PyUnicode_Decode(ptr noundef %15, i64 noundef %sub, ptr noundef %19, ptr noundef null), !dbg !2233
  %20 = load ptr, ptr %t.addr, align 8, !dbg !2234, !tbaa !1252
  %p11 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %20, i32 0, i32 0, !dbg !2235
  %21 = load ptr, ptr %p11, align 8, !dbg !2235, !tbaa !2192
  store ptr %call10, ptr %21, align 8, !dbg !2236, !tbaa !1252
  br label %if.end, !dbg !2237

if.else12:                                        ; preds = %if.else
  %22 = load ptr, ptr %t.addr, align 8, !dbg !2238, !tbaa !1252
  %s13 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %22, i32 0, i32 1, !dbg !2240
  %23 = load ptr, ptr %s13, align 8, !dbg !2240, !tbaa !2213
  %24 = load ptr, ptr %t.addr, align 8, !dbg !2241, !tbaa !1252
  %n14 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %24, i32 0, i32 2, !dbg !2242
  %25 = load i64, ptr %n14, align 8, !dbg !2242, !tbaa !2229
  %sub15 = sub i64 %25, 1, !dbg !2243
  %call16 = call ptr @PyUnicode_FromStringAndSize(ptr noundef %23, i64 noundef %sub15), !dbg !2244
  %26 = load ptr, ptr %t.addr, align 8, !dbg !2245, !tbaa !1252
  %p17 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %26, i32 0, i32 0, !dbg !2246
  %27 = load ptr, ptr %p17, align 8, !dbg !2246, !tbaa !2192
  store ptr %call16, ptr %27, align 8, !dbg !2247, !tbaa !1252
  br label %if.end

if.end:                                           ; preds = %if.else12, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then4
  br label %if.end25, !dbg !2248

if.else19:                                        ; preds = %while.body
  %28 = load ptr, ptr %t.addr, align 8, !dbg !2249, !tbaa !1252
  %s20 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %28, i32 0, i32 1, !dbg !2251
  %29 = load ptr, ptr %s20, align 8, !dbg !2251, !tbaa !2213
  %30 = load ptr, ptr %t.addr, align 8, !dbg !2252, !tbaa !1252
  %n21 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %30, i32 0, i32 2, !dbg !2253
  %31 = load i64, ptr %n21, align 8, !dbg !2253, !tbaa !2229
  %sub22 = sub i64 %31, 1, !dbg !2254
  %call23 = call ptr @PyBytes_FromStringAndSize(ptr noundef %29, i64 noundef %sub22), !dbg !2255
  %32 = load ptr, ptr %t.addr, align 8, !dbg !2256, !tbaa !1252
  %p24 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %32, i32 0, i32 0, !dbg !2257
  %33 = load ptr, ptr %p24, align 8, !dbg !2257, !tbaa !2192
  store ptr %call23, ptr %33, align 8, !dbg !2258, !tbaa !1252
  br label %if.end25

if.end25:                                         ; preds = %if.else19, %if.end18
  %34 = load ptr, ptr %t.addr, align 8, !dbg !2259, !tbaa !1252
  %p26 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %34, i32 0, i32 0, !dbg !2261
  %35 = load ptr, ptr %p26, align 8, !dbg !2261, !tbaa !2192
  %36 = load ptr, ptr %35, align 8, !dbg !2262, !tbaa !1252
  %tobool27 = icmp ne ptr %36, null, !dbg !2262
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !2263

if.then28:                                        ; preds = %if.end25
  store i32 -1, ptr %retval, align 4, !dbg !2264
  br label %return, !dbg !2264

if.end29:                                         ; preds = %if.end25
  %37 = load ptr, ptr %t.addr, align 8, !dbg !2265, !tbaa !1252
  %p30 = getelementptr inbounds %struct.__Pyx_StringTabEntry, ptr %37, i32 0, i32 0, !dbg !2267
  %38 = load ptr, ptr %p30, align 8, !dbg !2267, !tbaa !2192
  %39 = load ptr, ptr %38, align 8, !dbg !2268, !tbaa !1252
  %call31 = call i64 @PyObject_Hash(ptr noundef %39), !dbg !2269
  %cmp = icmp eq i64 %call31, -1, !dbg !2270
  br i1 %cmp, label %if.then33, label %if.end34, !dbg !2271

if.then33:                                        ; preds = %if.end29
  store i32 -1, ptr %retval, align 4, !dbg !2272
  br label %return, !dbg !2272

if.end34:                                         ; preds = %if.end29
  %40 = load ptr, ptr %t.addr, align 8, !dbg !2273, !tbaa !1252
  %incdec.ptr = getelementptr %struct.__Pyx_StringTabEntry, ptr %40, i32 1, !dbg !2273
  store ptr %incdec.ptr, ptr %t.addr, align 8, !dbg !2273, !tbaa !1252
  br label %while.cond, !dbg !2189, !llvm.loop !2274

while.end:                                        ; preds = %while.cond
  store i32 0, ptr %retval, align 4, !dbg !2276
  br label %return, !dbg !2276

return:                                           ; preds = %while.end, %if.then33, %if.then28
  %41 = load i32, ptr %retval, align 4, !dbg !2277
  ret i32 %41, !dbg !2277
}

declare !dbg !2278 ptr @PyLong_FromLong(i64 noundef) #1

declare !dbg !2281 ptr @PyUnicode_InternFromString(ptr noundef) #1

declare !dbg !2282 ptr @PyUnicode_Decode(ptr noundef, i64 noundef, ptr noundef, ptr noundef) #1

declare !dbg !2285 i64 @PyObject_Hash(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetBuiltinName(ptr noundef %name) #0 !dbg !2286 {
entry:
  %name.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  store ptr %name, ptr %name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !2288, metadata !DIExpression()), !dbg !2290
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #8, !dbg !2291
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !2289, metadata !DIExpression()), !dbg !2292
  %0 = load ptr, ptr @__pyx_b, align 8, !dbg !2293, !tbaa !1252
  %1 = load ptr, ptr %name.addr, align 8, !dbg !2294, !tbaa !1252
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %0, ptr noundef %1), !dbg !2295
  store ptr %call, ptr %result, align 8, !dbg !2292, !tbaa !1252
  %2 = load ptr, ptr %result, align 8, !dbg !2296, !tbaa !1252
  %tobool = icmp ne ptr %2, null, !dbg !2296
  %lnot = xor i1 %tobool, true, !dbg !2296
  %lnot1 = xor i1 %lnot, true, !dbg !2296
  %lnot2 = xor i1 %lnot1, true, !dbg !2296
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !2296
  %conv = sext i32 %lnot.ext to i64, !dbg !2296
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2296
  %tobool3 = icmp ne i64 %expval, 0, !dbg !2296
  br i1 %tobool3, label %if.then, label %if.end, !dbg !2298

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @PyExc_NameError, align 8, !dbg !2299, !tbaa !1252
  %4 = load ptr, ptr %name.addr, align 8, !dbg !2301, !tbaa !1252
  %call4 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %3, ptr noundef @.str.22, ptr noundef %4), !dbg !2302
  br label %if.end, !dbg !2303

if.end:                                           ; preds = %if.then, %entry
  %5 = load ptr, ptr %result, align 8, !dbg !2304, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #8, !dbg !2305
  ret ptr %5, !dbg !2306
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %obj, ptr noundef %attr_name) #3 !dbg !2307 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %attr_name.addr = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !2309, metadata !DIExpression()), !dbg !2312
  store ptr %attr_name, ptr %attr_name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %attr_name.addr, metadata !2310, metadata !DIExpression()), !dbg !2313
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #8, !dbg !2314
  tail call void @llvm.dbg.declare(metadata ptr %tp, metadata !2311, metadata !DIExpression()), !dbg !2315
  %0 = load ptr, ptr %obj.addr, align 8, !dbg !2316, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1, !dbg !2316
  %1 = load ptr, ptr %ob_type, align 8, !dbg !2316, !tbaa !2317
  store ptr %1, ptr %tp, align 8, !dbg !2315, !tbaa !1252
  %2 = load ptr, ptr %tp, align 8, !dbg !2318, !tbaa !1252
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 16, !dbg !2318
  %3 = load ptr, ptr %tp_getattro, align 8, !dbg !2318, !tbaa !2035
  %tobool = icmp ne ptr %3, null, !dbg !2318
  %lnot = xor i1 %tobool, true, !dbg !2318
  %lnot1 = xor i1 %lnot, true, !dbg !2318
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2318
  %conv = sext i32 %lnot.ext to i64, !dbg !2318
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !2318
  %tobool2 = icmp ne i64 %expval, 0, !dbg !2318
  br i1 %tobool2, label %if.then, label %if.end, !dbg !2320

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %tp, align 8, !dbg !2321, !tbaa !1252
  %tp_getattro3 = getelementptr inbounds %struct._typeobject, ptr %4, i32 0, i32 16, !dbg !2322
  %5 = load ptr, ptr %tp_getattro3, align 8, !dbg !2322, !tbaa !2035
  %6 = load ptr, ptr %obj.addr, align 8, !dbg !2323, !tbaa !1252
  %7 = load ptr, ptr %attr_name.addr, align 8, !dbg !2324, !tbaa !1252
  %call = call ptr %5(ptr noundef %6, ptr noundef %7), !dbg !2321
  store ptr %call, ptr %retval, align 8, !dbg !2325
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2325

if.end:                                           ; preds = %entry
  %8 = load ptr, ptr %obj.addr, align 8, !dbg !2326, !tbaa !1252
  %9 = load ptr, ptr %attr_name.addr, align 8, !dbg !2327, !tbaa !1252
  %call4 = call ptr @PyObject_GetAttr(ptr noundef %8, ptr noundef %9), !dbg !2328
  store ptr %call4, ptr %retval, align 8, !dbg !2329
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2329

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #8, !dbg !2330
  %10 = load ptr, ptr %retval, align 8, !dbg !2330
  ret ptr %10, !dbg !2330
}

declare !dbg !2331 ptr @PyErr_Format(ptr noundef, ptr noundef, ...) #1

declare !dbg !2334 ptr @PyObject_GetAttr(ptr noundef, ptr noundef) #1

declare !dbg !2335 ptr @PyTuple_Pack(i64 noundef, ...) #1

declare !dbg !2338 ptr @PyCode_New(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) #1

declare !dbg !2341 i32 @PyType_Ready(ptr noundef) #1

declare ptr @PyObject_GenericGetAttr(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_setup_reduce(ptr noundef %type_obj) #0 !dbg !2344 {
entry:
  %type_obj.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %object_reduce = alloca ptr, align 8
  %object_getstate = alloca ptr, align 8
  %object_reduce_ex = alloca ptr, align 8
  %reduce = alloca ptr, align 8
  %reduce_ex = alloca ptr, align 8
  %reduce_cython = alloca ptr, align 8
  %setstate = alloca ptr, align 8
  %setstate_cython = alloca ptr, align 8
  %getstate = alloca ptr, align 8
  store ptr %type_obj, ptr %type_obj.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %type_obj.addr, metadata !2346, metadata !DIExpression()), !dbg !2359
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !2360
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !2347, metadata !DIExpression()), !dbg !2361
  store i32 0, ptr %ret, align 4, !dbg !2361, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 8, ptr %object_reduce) #8, !dbg !2362
  tail call void @llvm.dbg.declare(metadata ptr %object_reduce, metadata !2348, metadata !DIExpression()), !dbg !2363
  store ptr null, ptr %object_reduce, align 8, !dbg !2363, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %object_getstate) #8, !dbg !2364
  tail call void @llvm.dbg.declare(metadata ptr %object_getstate, metadata !2349, metadata !DIExpression()), !dbg !2365
  store ptr null, ptr %object_getstate, align 8, !dbg !2365, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %object_reduce_ex) #8, !dbg !2366
  tail call void @llvm.dbg.declare(metadata ptr %object_reduce_ex, metadata !2350, metadata !DIExpression()), !dbg !2367
  store ptr null, ptr %object_reduce_ex, align 8, !dbg !2367, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %reduce) #8, !dbg !2368
  tail call void @llvm.dbg.declare(metadata ptr %reduce, metadata !2351, metadata !DIExpression()), !dbg !2369
  store ptr null, ptr %reduce, align 8, !dbg !2369, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %reduce_ex) #8, !dbg !2370
  tail call void @llvm.dbg.declare(metadata ptr %reduce_ex, metadata !2352, metadata !DIExpression()), !dbg !2371
  store ptr null, ptr %reduce_ex, align 8, !dbg !2371, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %reduce_cython) #8, !dbg !2372
  tail call void @llvm.dbg.declare(metadata ptr %reduce_cython, metadata !2353, metadata !DIExpression()), !dbg !2373
  store ptr null, ptr %reduce_cython, align 8, !dbg !2373, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %setstate) #8, !dbg !2374
  tail call void @llvm.dbg.declare(metadata ptr %setstate, metadata !2354, metadata !DIExpression()), !dbg !2375
  store ptr null, ptr %setstate, align 8, !dbg !2375, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %setstate_cython) #8, !dbg !2376
  tail call void @llvm.dbg.declare(metadata ptr %setstate_cython, metadata !2355, metadata !DIExpression()), !dbg !2377
  store ptr null, ptr %setstate_cython, align 8, !dbg !2377, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %getstate) #8, !dbg !2378
  tail call void @llvm.dbg.declare(metadata ptr %getstate, metadata !2356, metadata !DIExpression()), !dbg !2379
  store ptr null, ptr %getstate, align 8, !dbg !2379, !tbaa !1252
  %0 = load ptr, ptr %type_obj.addr, align 8, !dbg !2380, !tbaa !1252
  %1 = load ptr, ptr @__pyx_n_s_getstate, align 8, !dbg !2381, !tbaa !1252
  %call = call ptr @_PyType_Lookup(ptr noundef %0, ptr noundef %1), !dbg !2382
  store ptr %call, ptr %getstate, align 8, !dbg !2383, !tbaa !1252
  %2 = load ptr, ptr %getstate, align 8, !dbg !2384, !tbaa !1252
  %tobool = icmp ne ptr %2, null, !dbg !2384
  br i1 %tobool, label %if.then, label %if.end3, !dbg !2386

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @__pyx_n_s_getstate, align 8, !dbg !2387, !tbaa !1252
  %call1 = call ptr @_PyType_Lookup(ptr noundef @PyBaseObject_Type, ptr noundef %3), !dbg !2389
  store ptr %call1, ptr %object_getstate, align 8, !dbg !2390, !tbaa !1252
  %4 = load ptr, ptr %object_getstate, align 8, !dbg !2391, !tbaa !1252
  %5 = load ptr, ptr %getstate, align 8, !dbg !2393, !tbaa !1252
  %cmp = icmp ne ptr %4, %5, !dbg !2394
  br i1 %cmp, label %if.then2, label %if.end, !dbg !2395

if.then2:                                         ; preds = %if.then
  br label %__PYX_GOOD, !dbg !2396

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !2398

if.end3:                                          ; preds = %if.end, %entry
  %6 = load ptr, ptr @__pyx_n_s_reduce_ex, align 8, !dbg !2399, !tbaa !1252
  %call4 = call ptr @_PyType_Lookup(ptr noundef @PyBaseObject_Type, ptr noundef %6), !dbg !2400
  store ptr %call4, ptr %object_reduce_ex, align 8, !dbg !2401, !tbaa !1252
  %7 = load ptr, ptr %object_reduce_ex, align 8, !dbg !2402, !tbaa !1252
  %tobool5 = icmp ne ptr %7, null, !dbg !2402
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !2404

if.then6:                                         ; preds = %if.end3
  br label %__PYX_BAD, !dbg !2405

if.end7:                                          ; preds = %if.end3
  %8 = load ptr, ptr %type_obj.addr, align 8, !dbg !2406, !tbaa !1252
  %9 = load ptr, ptr @__pyx_n_s_reduce_ex, align 8, !dbg !2407, !tbaa !1252
  %call8 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %8, ptr noundef %9), !dbg !2408
  store ptr %call8, ptr %reduce_ex, align 8, !dbg !2409, !tbaa !1252
  %10 = load ptr, ptr %reduce_ex, align 8, !dbg !2410, !tbaa !1252
  %tobool9 = icmp ne ptr %10, null, !dbg !2410
  %lnot = xor i1 %tobool9, true, !dbg !2410
  %lnot10 = xor i1 %lnot, true, !dbg !2410
  %lnot11 = xor i1 %lnot10, true, !dbg !2410
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !2410
  %conv = sext i32 %lnot.ext to i64, !dbg !2410
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2410
  %tobool12 = icmp ne i64 %expval, 0, !dbg !2410
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !2412

if.then13:                                        ; preds = %if.end7
  br label %__PYX_BAD, !dbg !2413

if.end14:                                         ; preds = %if.end7
  %11 = load ptr, ptr %reduce_ex, align 8, !dbg !2414, !tbaa !1252
  %12 = load ptr, ptr %object_reduce_ex, align 8, !dbg !2416, !tbaa !1252
  %cmp15 = icmp eq ptr %11, %12, !dbg !2417
  br i1 %cmp15, label %if.then17, label %if.end138, !dbg !2418

if.then17:                                        ; preds = %if.end14
  %13 = load ptr, ptr @__pyx_n_s_reduce, align 8, !dbg !2419, !tbaa !1252
  %call18 = call ptr @_PyType_Lookup(ptr noundef @PyBaseObject_Type, ptr noundef %13), !dbg !2421
  store ptr %call18, ptr %object_reduce, align 8, !dbg !2422, !tbaa !1252
  %14 = load ptr, ptr %object_reduce, align 8, !dbg !2423, !tbaa !1252
  %tobool19 = icmp ne ptr %14, null, !dbg !2423
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !2425

if.then20:                                        ; preds = %if.then17
  br label %__PYX_BAD, !dbg !2426

if.end21:                                         ; preds = %if.then17
  %15 = load ptr, ptr %type_obj.addr, align 8, !dbg !2427, !tbaa !1252
  %16 = load ptr, ptr @__pyx_n_s_reduce, align 8, !dbg !2428, !tbaa !1252
  %call22 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %15, ptr noundef %16), !dbg !2429
  store ptr %call22, ptr %reduce, align 8, !dbg !2430, !tbaa !1252
  %17 = load ptr, ptr %reduce, align 8, !dbg !2431, !tbaa !1252
  %tobool23 = icmp ne ptr %17, null, !dbg !2431
  %lnot24 = xor i1 %tobool23, true, !dbg !2431
  %lnot26 = xor i1 %lnot24, true, !dbg !2431
  %lnot28 = xor i1 %lnot26, true, !dbg !2431
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !2431
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !2431
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 0), !dbg !2431
  %tobool32 = icmp ne i64 %expval31, 0, !dbg !2431
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !2433

if.then33:                                        ; preds = %if.end21
  br label %__PYX_BAD, !dbg !2434

if.end34:                                         ; preds = %if.end21
  %18 = load ptr, ptr %reduce, align 8, !dbg !2435, !tbaa !1252
  %19 = load ptr, ptr %object_reduce, align 8, !dbg !2437, !tbaa !1252
  %cmp35 = icmp eq ptr %18, %19, !dbg !2438
  br i1 %cmp35, label %if.then39, label %lor.lhs.false, !dbg !2439

lor.lhs.false:                                    ; preds = %if.end34
  %20 = load ptr, ptr %reduce, align 8, !dbg !2440, !tbaa !1252
  %21 = load ptr, ptr @__pyx_n_s_reduce_cython, align 8, !dbg !2441, !tbaa !1252
  %call37 = call i32 @__Pyx_setup_reduce_is_named(ptr noundef %20, ptr noundef %21), !dbg !2442
  %tobool38 = icmp ne i32 %call37, 0, !dbg !2442
  br i1 %tobool38, label %if.then39, label %if.end137, !dbg !2443

if.then39:                                        ; preds = %lor.lhs.false, %if.end34
  %22 = load ptr, ptr %type_obj.addr, align 8, !dbg !2444, !tbaa !1252
  %23 = load ptr, ptr @__pyx_n_s_reduce_cython, align 8, !dbg !2446, !tbaa !1252
  %call40 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %22, ptr noundef %23), !dbg !2447
  store ptr %call40, ptr %reduce_cython, align 8, !dbg !2448, !tbaa !1252
  %24 = load ptr, ptr %reduce_cython, align 8, !dbg !2449, !tbaa !1252
  %tobool41 = icmp ne ptr %24, null, !dbg !2449
  %lnot42 = xor i1 %tobool41, true, !dbg !2449
  %lnot44 = xor i1 %lnot42, true, !dbg !2449
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !2449
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !2449
  %expval47 = call i64 @llvm.expect.i64(i64 %conv46, i64 1), !dbg !2449
  %tobool48 = icmp ne i64 %expval47, 0, !dbg !2449
  br i1 %tobool48, label %if.then49, label %if.else, !dbg !2451

if.then49:                                        ; preds = %if.then39
  %25 = load ptr, ptr %type_obj.addr, align 8, !dbg !2452, !tbaa !1252
  %tp_dict = getelementptr inbounds %struct._typeobject, ptr %25, i32 0, i32 31, !dbg !2454
  %26 = load ptr, ptr %tp_dict, align 8, !dbg !2454, !tbaa !2455
  %27 = load ptr, ptr @__pyx_n_s_reduce, align 8, !dbg !2456, !tbaa !1252
  %28 = load ptr, ptr %reduce_cython, align 8, !dbg !2457, !tbaa !1252
  %call50 = call i32 @PyDict_SetItem(ptr noundef %26, ptr noundef %27, ptr noundef %28), !dbg !2458
  store i32 %call50, ptr %ret, align 4, !dbg !2459, !tbaa !1335
  %29 = load i32, ptr %ret, align 4, !dbg !2460, !tbaa !1335
  %cmp51 = icmp slt i32 %29, 0, !dbg !2460
  %lnot53 = xor i1 %cmp51, true, !dbg !2460
  %lnot55 = xor i1 %lnot53, true, !dbg !2460
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !2460
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !2460
  %expval58 = call i64 @llvm.expect.i64(i64 %conv57, i64 0), !dbg !2460
  %tobool59 = icmp ne i64 %expval58, 0, !dbg !2460
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !2462

if.then60:                                        ; preds = %if.then49
  br label %__PYX_BAD, !dbg !2463

if.end61:                                         ; preds = %if.then49
  %30 = load ptr, ptr %type_obj.addr, align 8, !dbg !2464, !tbaa !1252
  %tp_dict62 = getelementptr inbounds %struct._typeobject, ptr %30, i32 0, i32 31, !dbg !2465
  %31 = load ptr, ptr %tp_dict62, align 8, !dbg !2465, !tbaa !2455
  %32 = load ptr, ptr @__pyx_n_s_reduce_cython, align 8, !dbg !2466, !tbaa !1252
  %call63 = call i32 @PyDict_DelItem(ptr noundef %31, ptr noundef %32), !dbg !2467
  store i32 %call63, ptr %ret, align 4, !dbg !2468, !tbaa !1335
  %33 = load i32, ptr %ret, align 4, !dbg !2469, !tbaa !1335
  %cmp64 = icmp slt i32 %33, 0, !dbg !2469
  %lnot66 = xor i1 %cmp64, true, !dbg !2469
  %lnot68 = xor i1 %lnot66, true, !dbg !2469
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !2469
  %conv70 = sext i32 %lnot.ext69 to i64, !dbg !2469
  %expval71 = call i64 @llvm.expect.i64(i64 %conv70, i64 0), !dbg !2469
  %tobool72 = icmp ne i64 %expval71, 0, !dbg !2469
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !2471

if.then73:                                        ; preds = %if.end61
  br label %__PYX_BAD, !dbg !2472

if.end74:                                         ; preds = %if.end61
  br label %if.end82, !dbg !2473

if.else:                                          ; preds = %if.then39
  %34 = load ptr, ptr %reduce, align 8, !dbg !2474, !tbaa !1252
  %35 = load ptr, ptr %object_reduce, align 8, !dbg !2476, !tbaa !1252
  %cmp75 = icmp eq ptr %34, %35, !dbg !2477
  br i1 %cmp75, label %if.then80, label %lor.lhs.false77, !dbg !2478

lor.lhs.false77:                                  ; preds = %if.else
  %call78 = call ptr @PyErr_Occurred(), !dbg !2479
  %tobool79 = icmp ne ptr %call78, null, !dbg !2479
  br i1 %tobool79, label %if.then80, label %if.end81, !dbg !2480

if.then80:                                        ; preds = %lor.lhs.false77, %if.else
  br label %__PYX_BAD, !dbg !2481

if.end81:                                         ; preds = %lor.lhs.false77
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.end74
  %36 = load ptr, ptr %type_obj.addr, align 8, !dbg !2483, !tbaa !1252
  %37 = load ptr, ptr @__pyx_n_s_setstate, align 8, !dbg !2484, !tbaa !1252
  %call83 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %36, ptr noundef %37), !dbg !2485
  store ptr %call83, ptr %setstate, align 8, !dbg !2486, !tbaa !1252
  %38 = load ptr, ptr %setstate, align 8, !dbg !2487, !tbaa !1252
  %tobool84 = icmp ne ptr %38, null, !dbg !2487
  br i1 %tobool84, label %if.end86, label %if.then85, !dbg !2489

if.then85:                                        ; preds = %if.end82
  call void @PyErr_Clear(), !dbg !2490
  br label %if.end86, !dbg !2490

if.end86:                                         ; preds = %if.then85, %if.end82
  %39 = load ptr, ptr %setstate, align 8, !dbg !2491, !tbaa !1252
  %tobool87 = icmp ne ptr %39, null, !dbg !2491
  br i1 %tobool87, label %lor.lhs.false88, label %if.then91, !dbg !2493

lor.lhs.false88:                                  ; preds = %if.end86
  %40 = load ptr, ptr %setstate, align 8, !dbg !2494, !tbaa !1252
  %41 = load ptr, ptr @__pyx_n_s_setstate_cython, align 8, !dbg !2495, !tbaa !1252
  %call89 = call i32 @__Pyx_setup_reduce_is_named(ptr noundef %40, ptr noundef %41), !dbg !2496
  %tobool90 = icmp ne i32 %call89, 0, !dbg !2496
  br i1 %tobool90, label %if.then91, label %if.end136, !dbg !2497

if.then91:                                        ; preds = %lor.lhs.false88, %if.end86
  %42 = load ptr, ptr %type_obj.addr, align 8, !dbg !2498, !tbaa !1252
  %43 = load ptr, ptr @__pyx_n_s_setstate_cython, align 8, !dbg !2500, !tbaa !1252
  %call92 = call ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %42, ptr noundef %43), !dbg !2501
  store ptr %call92, ptr %setstate_cython, align 8, !dbg !2502, !tbaa !1252
  %44 = load ptr, ptr %setstate_cython, align 8, !dbg !2503, !tbaa !1252
  %tobool93 = icmp ne ptr %44, null, !dbg !2503
  %lnot94 = xor i1 %tobool93, true, !dbg !2503
  %lnot96 = xor i1 %lnot94, true, !dbg !2503
  %lnot.ext97 = zext i1 %lnot96 to i32, !dbg !2503
  %conv98 = sext i32 %lnot.ext97 to i64, !dbg !2503
  %expval99 = call i64 @llvm.expect.i64(i64 %conv98, i64 1), !dbg !2503
  %tobool100 = icmp ne i64 %expval99, 0, !dbg !2503
  br i1 %tobool100, label %if.then101, label %if.else128, !dbg !2505

if.then101:                                       ; preds = %if.then91
  %45 = load ptr, ptr %type_obj.addr, align 8, !dbg !2506, !tbaa !1252
  %tp_dict102 = getelementptr inbounds %struct._typeobject, ptr %45, i32 0, i32 31, !dbg !2508
  %46 = load ptr, ptr %tp_dict102, align 8, !dbg !2508, !tbaa !2455
  %47 = load ptr, ptr @__pyx_n_s_setstate, align 8, !dbg !2509, !tbaa !1252
  %48 = load ptr, ptr %setstate_cython, align 8, !dbg !2510, !tbaa !1252
  %call103 = call i32 @PyDict_SetItem(ptr noundef %46, ptr noundef %47, ptr noundef %48), !dbg !2511
  store i32 %call103, ptr %ret, align 4, !dbg !2512, !tbaa !1335
  %49 = load i32, ptr %ret, align 4, !dbg !2513, !tbaa !1335
  %cmp104 = icmp slt i32 %49, 0, !dbg !2513
  %lnot106 = xor i1 %cmp104, true, !dbg !2513
  %lnot108 = xor i1 %lnot106, true, !dbg !2513
  %lnot.ext109 = zext i1 %lnot108 to i32, !dbg !2513
  %conv110 = sext i32 %lnot.ext109 to i64, !dbg !2513
  %expval111 = call i64 @llvm.expect.i64(i64 %conv110, i64 0), !dbg !2513
  %tobool112 = icmp ne i64 %expval111, 0, !dbg !2513
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !2515

if.then113:                                       ; preds = %if.then101
  br label %__PYX_BAD, !dbg !2516

if.end114:                                        ; preds = %if.then101
  %50 = load ptr, ptr %type_obj.addr, align 8, !dbg !2517, !tbaa !1252
  %tp_dict115 = getelementptr inbounds %struct._typeobject, ptr %50, i32 0, i32 31, !dbg !2518
  %51 = load ptr, ptr %tp_dict115, align 8, !dbg !2518, !tbaa !2455
  %52 = load ptr, ptr @__pyx_n_s_setstate_cython, align 8, !dbg !2519, !tbaa !1252
  %call116 = call i32 @PyDict_DelItem(ptr noundef %51, ptr noundef %52), !dbg !2520
  store i32 %call116, ptr %ret, align 4, !dbg !2521, !tbaa !1335
  %53 = load i32, ptr %ret, align 4, !dbg !2522, !tbaa !1335
  %cmp117 = icmp slt i32 %53, 0, !dbg !2522
  %lnot119 = xor i1 %cmp117, true, !dbg !2522
  %lnot121 = xor i1 %lnot119, true, !dbg !2522
  %lnot.ext122 = zext i1 %lnot121 to i32, !dbg !2522
  %conv123 = sext i32 %lnot.ext122 to i64, !dbg !2522
  %expval124 = call i64 @llvm.expect.i64(i64 %conv123, i64 0), !dbg !2522
  %tobool125 = icmp ne i64 %expval124, 0, !dbg !2522
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !2524

if.then126:                                       ; preds = %if.end114
  br label %__PYX_BAD, !dbg !2525

if.end127:                                        ; preds = %if.end114
  br label %if.end135, !dbg !2526

if.else128:                                       ; preds = %if.then91
  %54 = load ptr, ptr %setstate, align 8, !dbg !2527, !tbaa !1252
  %tobool129 = icmp ne ptr %54, null, !dbg !2527
  br i1 %tobool129, label %lor.lhs.false130, label %if.then133, !dbg !2529

lor.lhs.false130:                                 ; preds = %if.else128
  %call131 = call ptr @PyErr_Occurred(), !dbg !2530
  %tobool132 = icmp ne ptr %call131, null, !dbg !2530
  br i1 %tobool132, label %if.then133, label %if.end134, !dbg !2531

if.then133:                                       ; preds = %lor.lhs.false130, %if.else128
  br label %__PYX_BAD, !dbg !2532

if.end134:                                        ; preds = %lor.lhs.false130
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.end127
  br label %if.end136, !dbg !2534

if.end136:                                        ; preds = %if.end135, %lor.lhs.false88
  %55 = load ptr, ptr %type_obj.addr, align 8, !dbg !2535, !tbaa !1252
  call void @PyType_Modified(ptr noundef %55), !dbg !2536
  br label %if.end137, !dbg !2537

if.end137:                                        ; preds = %if.end136, %lor.lhs.false
  br label %if.end138, !dbg !2538

if.end138:                                        ; preds = %if.end137, %if.end14
  br label %__PYX_GOOD, !dbg !2539

__PYX_BAD:                                        ; preds = %if.then133, %if.then126, %if.then113, %if.then80, %if.then73, %if.then60, %if.then33, %if.then20, %if.then13, %if.then6
  tail call void @llvm.dbg.label(metadata !2357), !dbg !2540
  %call139 = call ptr @PyErr_Occurred(), !dbg !2541
  %tobool140 = icmp ne ptr %call139, null, !dbg !2541
  br i1 %tobool140, label %if.end143, label %if.then141, !dbg !2543

if.then141:                                       ; preds = %__PYX_BAD
  %56 = load ptr, ptr @PyExc_RuntimeError, align 8, !dbg !2544, !tbaa !1252
  %57 = load ptr, ptr %type_obj.addr, align 8, !dbg !2545, !tbaa !1252
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %57, i32 0, i32 1, !dbg !2546
  %58 = load ptr, ptr %tp_name, align 8, !dbg !2546, !tbaa !2547
  %call142 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %56, ptr noundef @.str.61, ptr noundef %58), !dbg !2548
  br label %if.end143, !dbg !2548

if.end143:                                        ; preds = %if.then141, %__PYX_BAD
  store i32 -1, ptr %ret, align 4, !dbg !2549, !tbaa !1335
  br label %__PYX_GOOD, !dbg !2550

__PYX_GOOD:                                       ; preds = %if.end143, %if.end138, %if.then2
  tail call void @llvm.dbg.label(metadata !2358), !dbg !2551
  %59 = load ptr, ptr %reduce, align 8, !dbg !2552, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %59), !dbg !2552
  %60 = load ptr, ptr %reduce_ex, align 8, !dbg !2553, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %60), !dbg !2553
  %61 = load ptr, ptr %reduce_cython, align 8, !dbg !2554, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %61), !dbg !2554
  %62 = load ptr, ptr %setstate, align 8, !dbg !2555, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %62), !dbg !2555
  %63 = load ptr, ptr %setstate_cython, align 8, !dbg !2556, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %63), !dbg !2556
  %64 = load i32, ptr %ret, align 4, !dbg !2557, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 8, ptr %getstate) #8, !dbg !2558
  call void @llvm.lifetime.end.p0(i64 8, ptr %setstate_cython) #8, !dbg !2558
  call void @llvm.lifetime.end.p0(i64 8, ptr %setstate) #8, !dbg !2558
  call void @llvm.lifetime.end.p0(i64 8, ptr %reduce_cython) #8, !dbg !2558
  call void @llvm.lifetime.end.p0(i64 8, ptr %reduce_ex) #8, !dbg !2558
  call void @llvm.lifetime.end.p0(i64 8, ptr %reduce) #8, !dbg !2558
  call void @llvm.lifetime.end.p0(i64 8, ptr %object_reduce_ex) #8, !dbg !2558
  call void @llvm.lifetime.end.p0(i64 8, ptr %object_getstate) #8, !dbg !2558
  call void @llvm.lifetime.end.p0(i64 8, ptr %object_reduce) #8, !dbg !2558
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !2558
  ret i32 %64, !dbg !2559
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_tp_dealloc_6pandas_5_libs_8indexing_NDFrameIndexerBase(ptr noundef %o) #0 !dbg !2560 {
entry:
  %o.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %_py_tmp = alloca ptr, align 8
  %_py_tmp16 = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !2562, metadata !DIExpression()), !dbg !2568
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #8, !dbg !2569
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !2563, metadata !DIExpression()), !dbg !2570
  %0 = load ptr, ptr %o.addr, align 8, !dbg !2571, !tbaa !1252
  store ptr %0, ptr %p, align 8, !dbg !2570, !tbaa !1252
  %1 = load ptr, ptr %o.addr, align 8, !dbg !2572, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %1, i32 0, i32 1, !dbg !2572
  %2 = load ptr, ptr %ob_type, align 8, !dbg !2572, !tbaa !2317
  %call = call i32 @PyType_HasFeature(ptr noundef %2, i64 noundef 1), !dbg !2572
  %tobool = icmp ne i32 %call, 0, !dbg !2572
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2572

land.rhs:                                         ; preds = %entry
  %3 = load ptr, ptr %o.addr, align 8, !dbg !2572, !tbaa !1252
  %ob_type1 = getelementptr inbounds %struct._object, ptr %3, i32 0, i32 1, !dbg !2572
  %4 = load ptr, ptr %ob_type1, align 8, !dbg !2572, !tbaa !2317
  %tp_finalize = getelementptr inbounds %struct._typeobject, ptr %4, i32 0, i32 47, !dbg !2572
  %5 = load ptr, ptr %tp_finalize, align 8, !dbg !2572, !tbaa !2574
  %tobool2 = icmp ne ptr %5, null, !dbg !2572
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !2575
  %lnot = xor i1 %6, true, !dbg !2572
  %lnot3 = xor i1 %lnot, true, !dbg !2572
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !2572
  %conv = sext i32 %lnot.ext to i64, !dbg !2572
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2572
  %tobool4 = icmp ne i64 %expval, 0, !dbg !2572
  br i1 %tobool4, label %land.lhs.true, label %if.end10, !dbg !2576

land.lhs.true:                                    ; preds = %land.end
  %7 = load ptr, ptr %o.addr, align 8, !dbg !2577, !tbaa !1252
  %call5 = call i32 @PyObject_GC_IsFinalized(ptr noundef %7), !dbg !2577
  %tobool6 = icmp ne i32 %call5, 0, !dbg !2577
  br i1 %tobool6, label %if.end10, label %if.then, !dbg !2578

if.then:                                          ; preds = %land.lhs.true
  %8 = load ptr, ptr %o.addr, align 8, !dbg !2579, !tbaa !1252
  %call7 = call i32 @PyObject_CallFinalizerFromDealloc(ptr noundef %8), !dbg !2582
  %tobool8 = icmp ne i32 %call7, 0, !dbg !2582
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !2583

if.then9:                                         ; preds = %if.then
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2584

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !2585

if.end10:                                         ; preds = %if.end, %land.lhs.true, %land.end
  %9 = load ptr, ptr %o.addr, align 8, !dbg !2586, !tbaa !1252
  call void @PyObject_GC_UnTrack(ptr noundef %9), !dbg !2587
  br label %do.body, !dbg !2588

do.body:                                          ; preds = %if.end10
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp) #8, !dbg !2589
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp, metadata !2564, metadata !DIExpression()), !dbg !2589
  %10 = load ptr, ptr %p, align 8, !dbg !2589, !tbaa !1252
  %name = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %10, i32 0, i32 2, !dbg !2589
  %11 = load ptr, ptr %name, align 8, !dbg !2589, !tbaa !2590
  store ptr %11, ptr %_py_tmp, align 8, !dbg !2589, !tbaa !1252
  %12 = load ptr, ptr %_py_tmp, align 8, !dbg !2592, !tbaa !1252
  %cmp = icmp ne ptr %12, null, !dbg !2592
  br i1 %cmp, label %if.then12, label %if.end14, !dbg !2589

if.then12:                                        ; preds = %do.body
  %13 = load ptr, ptr %p, align 8, !dbg !2594, !tbaa !1252
  %name13 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %13, i32 0, i32 2, !dbg !2594
  store ptr null, ptr %name13, align 8, !dbg !2594, !tbaa !2590
  %14 = load ptr, ptr %_py_tmp, align 8, !dbg !2594, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %14), !dbg !2594
  br label %if.end14, !dbg !2594

if.end14:                                         ; preds = %if.then12, %do.body
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp) #8, !dbg !2588
  br label %do.cond, !dbg !2589

do.cond:                                          ; preds = %if.end14
  br label %do.end, !dbg !2589

do.end:                                           ; preds = %do.cond
  br label %do.body15, !dbg !2596

do.body15:                                        ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %_py_tmp16) #8, !dbg !2597
  tail call void @llvm.dbg.declare(metadata ptr %_py_tmp16, metadata !2566, metadata !DIExpression()), !dbg !2597
  %15 = load ptr, ptr %p, align 8, !dbg !2597, !tbaa !1252
  %obj = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %15, i32 0, i32 3, !dbg !2597
  %16 = load ptr, ptr %obj, align 8, !dbg !2597, !tbaa !2598
  store ptr %16, ptr %_py_tmp16, align 8, !dbg !2597, !tbaa !1252
  %17 = load ptr, ptr %_py_tmp16, align 8, !dbg !2599, !tbaa !1252
  %cmp17 = icmp ne ptr %17, null, !dbg !2599
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !2597

if.then19:                                        ; preds = %do.body15
  %18 = load ptr, ptr %p, align 8, !dbg !2601, !tbaa !1252
  %obj20 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %18, i32 0, i32 3, !dbg !2601
  store ptr null, ptr %obj20, align 8, !dbg !2601, !tbaa !2598
  %19 = load ptr, ptr %_py_tmp16, align 8, !dbg !2601, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %19), !dbg !2601
  br label %if.end21, !dbg !2601

if.end21:                                         ; preds = %if.then19, %do.body15
  call void @llvm.lifetime.end.p0(i64 8, ptr %_py_tmp16) #8, !dbg !2596
  br label %do.cond22, !dbg !2597

do.cond22:                                        ; preds = %if.end21
  br label %do.end23, !dbg !2597

do.end23:                                         ; preds = %do.cond22
  %20 = load ptr, ptr %o.addr, align 8, !dbg !2603, !tbaa !1252
  %ob_type24 = getelementptr inbounds %struct._object, ptr %20, i32 0, i32 1, !dbg !2603
  %21 = load ptr, ptr %ob_type24, align 8, !dbg !2603, !tbaa !2317
  %tp_free = getelementptr inbounds %struct._typeobject, ptr %21, i32 0, i32 38, !dbg !2604
  %22 = load ptr, ptr %tp_free, align 8, !dbg !2604, !tbaa !2605
  %23 = load ptr, ptr %o.addr, align 8, !dbg !2606, !tbaa !1252
  call void %22(ptr noundef %23), !dbg !2607
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !2608
  br label %cleanup, !dbg !2608

cleanup:                                          ; preds = %do.end23, %if.then9
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #8, !dbg !2608
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !2608

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_tp_traverse_6pandas_5_libs_8indexing_NDFrameIndexerBase(ptr noundef %o, ptr noundef %v, ptr noundef %a) #0 !dbg !2609 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %e = alloca i32, align 4
  %p = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !2611, metadata !DIExpression()), !dbg !2616
  store ptr %v, ptr %v.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !2612, metadata !DIExpression()), !dbg !2617
  store ptr %a, ptr %a.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !2613, metadata !DIExpression()), !dbg !2618
  call void @llvm.lifetime.start.p0(i64 4, ptr %e) #8, !dbg !2619
  tail call void @llvm.dbg.declare(metadata ptr %e, metadata !2614, metadata !DIExpression()), !dbg !2620
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #8, !dbg !2621
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !2615, metadata !DIExpression()), !dbg !2622
  %0 = load ptr, ptr %o.addr, align 8, !dbg !2623, !tbaa !1252
  store ptr %0, ptr %p, align 8, !dbg !2622, !tbaa !1252
  %1 = load ptr, ptr %p, align 8, !dbg !2624, !tbaa !1252
  %obj = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %1, i32 0, i32 3, !dbg !2626
  %2 = load ptr, ptr %obj, align 8, !dbg !2626, !tbaa !2598
  %tobool = icmp ne ptr %2, null, !dbg !2624
  br i1 %tobool, label %if.then, label %if.end4, !dbg !2627

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %v.addr, align 8, !dbg !2628, !tbaa !1252
  %4 = load ptr, ptr %p, align 8, !dbg !2630, !tbaa !1252
  %obj1 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %4, i32 0, i32 3, !dbg !2631
  %5 = load ptr, ptr %obj1, align 8, !dbg !2631, !tbaa !2598
  %6 = load ptr, ptr %a.addr, align 8, !dbg !2632, !tbaa !1252
  %call = call i32 %3(ptr noundef %5, ptr noundef %6), !dbg !2633
  store i32 %call, ptr %e, align 4, !dbg !2634, !tbaa !1335
  %7 = load i32, ptr %e, align 4, !dbg !2635, !tbaa !1335
  %tobool2 = icmp ne i32 %7, 0, !dbg !2635
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !2637

if.then3:                                         ; preds = %if.then
  %8 = load i32, ptr %e, align 4, !dbg !2638, !tbaa !1335
  store i32 %8, ptr %retval, align 4, !dbg !2639
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2639

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !2640

if.end4:                                          ; preds = %if.end, %entry
  store i32 0, ptr %retval, align 4, !dbg !2641
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2641

cleanup:                                          ; preds = %if.end4, %if.then3
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #8, !dbg !2642
  call void @llvm.lifetime.end.p0(i64 4, ptr %e) #8, !dbg !2642
  %9 = load i32, ptr %retval, align 4, !dbg !2642
  ret i32 %9, !dbg !2642
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_tp_clear_6pandas_5_libs_8indexing_NDFrameIndexerBase(ptr noundef %o) #0 !dbg !2643 {
entry:
  %o.addr = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %p = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !2645, metadata !DIExpression()), !dbg !2648
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !2649
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !2646, metadata !DIExpression()), !dbg !2650
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #8, !dbg !2651
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !2647, metadata !DIExpression()), !dbg !2652
  %0 = load ptr, ptr %o.addr, align 8, !dbg !2653, !tbaa !1252
  store ptr %0, ptr %p, align 8, !dbg !2652, !tbaa !1252
  %1 = load ptr, ptr %p, align 8, !dbg !2654, !tbaa !1252
  %obj = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %1, i32 0, i32 3, !dbg !2655
  %2 = load ptr, ptr %obj, align 8, !dbg !2655, !tbaa !2598
  store ptr %2, ptr %tmp, align 8, !dbg !2656, !tbaa !1252
  %3 = load ptr, ptr %p, align 8, !dbg !2657, !tbaa !1252
  %obj1 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %3, i32 0, i32 3, !dbg !2658
  store ptr @_Py_NoneStruct, ptr %obj1, align 8, !dbg !2659, !tbaa !2598
  call void @_Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !2660
  %4 = load ptr, ptr %tmp, align 8, !dbg !2661, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %4), !dbg !2661
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #8, !dbg !2662
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !2662
  ret i32 0, !dbg !2663
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_1__init__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 !dbg !973 {
entry:
  %retval = alloca i32, align 4
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v_name = alloca ptr, align 8
  %__pyx_v_obj = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca i32, align 4
  %values = alloca [2 x ptr], align 16
  %kw_args = alloca i64, align 8
  %pos_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !975, metadata !DIExpression()), !dbg !2664
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_args.addr, metadata !976, metadata !DIExpression()), !dbg !2665
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwds.addr, metadata !977, metadata !DIExpression()), !dbg !2666
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_name) #8, !dbg !2667
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_name, metadata !978, metadata !DIExpression()), !dbg !2668
  store ptr null, ptr %__pyx_v_name, align 8, !dbg !2668, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_obj) #8, !dbg !2669
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_obj, metadata !979, metadata !DIExpression()), !dbg !2670
  store ptr null, ptr %__pyx_v_obj, align 8, !dbg !2670, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !2671
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !980, metadata !DIExpression()), !dbg !2672
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !2672, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #8, !dbg !2673
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !981, metadata !DIExpression()), !dbg !2674
  store ptr null, ptr %__pyx_filename, align 8, !dbg !2674, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !2675
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !982, metadata !DIExpression()), !dbg !2676
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !2676, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #8, !dbg !2677
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !983, metadata !DIExpression()), !dbg !2678
  call void @llvm.lifetime.start.p0(i64 16, ptr %values) #8, !dbg !2679
  tail call void @llvm.dbg.declare(metadata ptr %values, metadata !984, metadata !DIExpression()), !dbg !2680
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 16, i1 false), !dbg !2680
  %0 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !2681, !tbaa !1252
  %tobool = icmp ne ptr %0, null, !dbg !2681
  %lnot = xor i1 %tobool, true, !dbg !2681
  %lnot1 = xor i1 %lnot, true, !dbg !2681
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2681
  %conv = sext i32 %lnot.ext to i64, !dbg !2681
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2681
  %tobool2 = icmp ne i64 %expval, 0, !dbg !2681
  br i1 %tobool2, label %if.then, label %if.else62, !dbg !2682

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #8, !dbg !2683
  tail call void @llvm.dbg.declare(metadata ptr %kw_args, metadata !987, metadata !DIExpression()), !dbg !2684
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos_args) #8, !dbg !2685
  tail call void @llvm.dbg.declare(metadata ptr %pos_args, metadata !990, metadata !DIExpression()), !dbg !2686
  %1 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !2687, !tbaa !1252
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %1, i32 0, i32 1, !dbg !2687
  %2 = load i64, ptr %ob_size, align 8, !dbg !2687, !tbaa !2688
  store i64 %2, ptr %pos_args, align 8, !dbg !2686, !tbaa !1368
  %3 = load i64, ptr %pos_args, align 8, !dbg !2689, !tbaa !1368
  switch i64 %3, label %sw.default [
    i64 2, label %sw.bb
    i64 1, label %sw.bb4
    i64 0, label %sw.epilog
  ], !dbg !2690

sw.bb:                                            ; preds = %if.then
  %4 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !2691, !tbaa !1252
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %4, i32 0, i32 1, !dbg !2691
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 1, !dbg !2691
  %5 = load ptr, ptr %arrayidx, align 8, !dbg !2691, !tbaa !1252
  %arrayidx3 = getelementptr [2 x ptr], ptr %values, i64 0, i64 1, !dbg !2693
  store ptr %5, ptr %arrayidx3, align 8, !dbg !2694, !tbaa !1252
  br label %sw.bb4, !dbg !2693

sw.bb4:                                           ; preds = %if.then, %sw.bb
  %6 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !2695, !tbaa !1252
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %6, i32 0, i32 1, !dbg !2695
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 0, !dbg !2695
  %7 = load ptr, ptr %arrayidx6, align 8, !dbg !2695, !tbaa !1252
  %arrayidx7 = getelementptr [2 x ptr], ptr %values, i64 0, i64 0, !dbg !2696
  store ptr %7, ptr %arrayidx7, align 16, !dbg !2697, !tbaa !1252
  br label %sw.epilog, !dbg !2696

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2698

sw.epilog:                                        ; preds = %sw.bb4, %if.then
  %8 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !2699, !tbaa !1252
  %call = call i64 @PyDict_Size(ptr noundef %8), !dbg !2700
  store i64 %call, ptr %kw_args, align 8, !dbg !2701, !tbaa !1368
  %9 = load i64, ptr %pos_args, align 8, !dbg !2702, !tbaa !1368
  switch i64 %9, label %sw.epilog37 [
    i64 0, label %sw.bb8
    i64 1, label %sw.bb20
  ], !dbg !2703

sw.bb8:                                           ; preds = %sw.epilog
  %10 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !2704, !tbaa !1252
  %11 = load ptr, ptr @__pyx_n_s_name, align 8, !dbg !2704, !tbaa !1252
  %12 = load ptr, ptr @__pyx_n_s_name, align 8, !dbg !2704, !tbaa !1252
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %12, i32 0, i32 2, !dbg !2704
  %13 = load i64, ptr %hash, align 8, !dbg !2704, !tbaa !2707
  %call9 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %10, ptr noundef %11, i64 noundef %13), !dbg !2704
  %arrayidx10 = getelementptr [2 x ptr], ptr %values, i64 0, i64 0, !dbg !2704
  store ptr %call9, ptr %arrayidx10, align 16, !dbg !2704, !tbaa !1252
  %cmp = icmp ne ptr %call9, null, !dbg !2704
  %lnot12 = xor i1 %cmp, true, !dbg !2704
  %lnot14 = xor i1 %lnot12, true, !dbg !2704
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !2704
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !2704
  %expval17 = call i64 @llvm.expect.i64(i64 %conv16, i64 1), !dbg !2704
  %tobool18 = icmp ne i64 %expval17, 0, !dbg !2704
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !2710

if.then19:                                        ; preds = %sw.bb8
  %14 = load i64, ptr %kw_args, align 8, !dbg !2711, !tbaa !1368
  %dec = add i64 %14, -1, !dbg !2711
  store i64 %dec, ptr %kw_args, align 8, !dbg !2711, !tbaa !1368
  br label %if.end, !dbg !2712

if.else:                                          ; preds = %sw.bb8
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2713

if.end:                                           ; preds = %if.then19
  br label %sw.bb20, !dbg !2704

sw.bb20:                                          ; preds = %sw.epilog, %if.end
  %15 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !2714, !tbaa !1252
  %16 = load ptr, ptr @__pyx_n_s_obj, align 8, !dbg !2714, !tbaa !1252
  %17 = load ptr, ptr @__pyx_n_s_obj, align 8, !dbg !2714, !tbaa !1252
  %hash21 = getelementptr inbounds %struct.PyASCIIObject, ptr %17, i32 0, i32 2, !dbg !2714
  %18 = load i64, ptr %hash21, align 8, !dbg !2714, !tbaa !2707
  %call22 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %15, ptr noundef %16, i64 noundef %18), !dbg !2714
  %arrayidx23 = getelementptr [2 x ptr], ptr %values, i64 0, i64 1, !dbg !2714
  store ptr %call22, ptr %arrayidx23, align 8, !dbg !2714, !tbaa !1252
  %cmp24 = icmp ne ptr %call22, null, !dbg !2714
  %lnot26 = xor i1 %cmp24, true, !dbg !2714
  %lnot28 = xor i1 %lnot26, true, !dbg !2714
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !2714
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !2714
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 1), !dbg !2714
  %tobool32 = icmp ne i64 %expval31, 0, !dbg !2714
  br i1 %tobool32, label %if.then33, label %if.else35, !dbg !2716

if.then33:                                        ; preds = %sw.bb20
  %19 = load i64, ptr %kw_args, align 8, !dbg !2717, !tbaa !1368
  %dec34 = add i64 %19, -1, !dbg !2717
  store i64 %dec34, ptr %kw_args, align 8, !dbg !2717, !tbaa !1368
  br label %if.end36, !dbg !2718

if.else35:                                        ; preds = %sw.bb20
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.49, i32 noundef 1, i64 noundef 2, i64 noundef 2, i64 noundef 1), !dbg !2719
  %20 = load ptr, ptr @__pyx_f, align 16, !dbg !2721, !tbaa !1252
  store ptr %20, ptr %__pyx_filename, align 8, !dbg !2721, !tbaa !1252
  %21 = load ptr, ptr %__pyx_filename, align 8, !dbg !2721, !tbaa !1252
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !2721, !tbaa !1335
  %22 = load i32, ptr %__pyx_lineno, align 4, !dbg !2721, !tbaa !1335
  store i32 1505, ptr %__pyx_clineno, align 4, !dbg !2721, !tbaa !1335
  %23 = load i32, ptr %__pyx_clineno, align 4, !dbg !2721, !tbaa !1335
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2724

if.end36:                                         ; preds = %if.then33
  br label %sw.epilog37, !dbg !2725

sw.epilog37:                                      ; preds = %if.end36, %sw.epilog
  %24 = load i64, ptr %kw_args, align 8, !dbg !2726, !tbaa !1368
  %cmp38 = icmp sgt i64 %24, 0, !dbg !2726
  %lnot40 = xor i1 %cmp38, true, !dbg !2726
  %lnot42 = xor i1 %lnot40, true, !dbg !2726
  %lnot.ext43 = zext i1 %lnot42 to i32, !dbg !2726
  %conv44 = sext i32 %lnot.ext43 to i64, !dbg !2726
  %expval45 = call i64 @llvm.expect.i64(i64 %conv44, i64 0), !dbg !2726
  %tobool46 = icmp ne i64 %expval45, 0, !dbg !2726
  br i1 %tobool46, label %if.then47, label %if.end60, !dbg !2728

if.then47:                                        ; preds = %sw.epilog37
  %25 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !2729, !tbaa !1252
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %values, i64 0, i64 0, !dbg !2729
  %26 = load i64, ptr %pos_args, align 8, !dbg !2729, !tbaa !1368
  %call48 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %25, ptr noundef @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_1__init__.__pyx_pyargnames, ptr noundef null, ptr noundef %arraydecay, i64 noundef %26, ptr noundef @.str.49), !dbg !2729
  %cmp49 = icmp slt i32 %call48, 0, !dbg !2729
  %lnot51 = xor i1 %cmp49, true, !dbg !2729
  %lnot53 = xor i1 %lnot51, true, !dbg !2729
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !2729
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !2729
  %expval56 = call i64 @llvm.expect.i64(i64 %conv55, i64 0), !dbg !2729
  %tobool57 = icmp ne i64 %expval56, 0, !dbg !2729
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !2732

if.then58:                                        ; preds = %if.then47
  %27 = load ptr, ptr @__pyx_f, align 16, !dbg !2733, !tbaa !1252
  store ptr %27, ptr %__pyx_filename, align 8, !dbg !2733, !tbaa !1252
  %28 = load ptr, ptr %__pyx_filename, align 8, !dbg !2733, !tbaa !1252
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !2733, !tbaa !1335
  %29 = load i32, ptr %__pyx_lineno, align 4, !dbg !2733, !tbaa !1335
  store i32 1509, ptr %__pyx_clineno, align 4, !dbg !2733, !tbaa !1335
  %30 = load i32, ptr %__pyx_clineno, align 4, !dbg !2733, !tbaa !1335
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2736

if.end59:                                         ; preds = %if.then47
  br label %if.end60, !dbg !2737

if.end60:                                         ; preds = %if.end59, %sw.epilog37
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !2738
  br label %cleanup, !dbg !2738

cleanup:                                          ; preds = %if.then58, %if.else35, %if.else, %sw.default, %if.end60
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos_args) #8, !dbg !2738
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #8, !dbg !2738
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup78 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end75, !dbg !2739

if.else62:                                        ; preds = %entry
  %31 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !2740, !tbaa !1252
  %ob_size63 = getelementptr inbounds %struct.PyVarObject, ptr %31, i32 0, i32 1, !dbg !2740
  %32 = load i64, ptr %ob_size63, align 8, !dbg !2740, !tbaa !2688
  %cmp64 = icmp ne i64 %32, 2, !dbg !2742
  br i1 %cmp64, label %if.then66, label %if.else67, !dbg !2743

if.then66:                                        ; preds = %if.else62
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup78, !dbg !2744

if.else67:                                        ; preds = %if.else62
  %33 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !2746, !tbaa !1252
  %ob_item68 = getelementptr inbounds %struct.PyTupleObject, ptr %33, i32 0, i32 1, !dbg !2746
  %arrayidx69 = getelementptr [1 x ptr], ptr %ob_item68, i64 0, i64 0, !dbg !2746
  %34 = load ptr, ptr %arrayidx69, align 8, !dbg !2746, !tbaa !1252
  %arrayidx70 = getelementptr [2 x ptr], ptr %values, i64 0, i64 0, !dbg !2748
  store ptr %34, ptr %arrayidx70, align 16, !dbg !2749, !tbaa !1252
  %35 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !2750, !tbaa !1252
  %ob_item71 = getelementptr inbounds %struct.PyTupleObject, ptr %35, i32 0, i32 1, !dbg !2750
  %arrayidx72 = getelementptr [1 x ptr], ptr %ob_item71, i64 0, i64 1, !dbg !2750
  %36 = load ptr, ptr %arrayidx72, align 8, !dbg !2750, !tbaa !1252
  %arrayidx73 = getelementptr [2 x ptr], ptr %values, i64 0, i64 1, !dbg !2751
  store ptr %36, ptr %arrayidx73, align 8, !dbg !2752, !tbaa !1252
  br label %if.end74

if.end74:                                         ; preds = %if.else67
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %cleanup.cont
  %arrayidx76 = getelementptr [2 x ptr], ptr %values, i64 0, i64 0, !dbg !2753
  %37 = load ptr, ptr %arrayidx76, align 16, !dbg !2753, !tbaa !1252
  store ptr %37, ptr %__pyx_v_name, align 8, !dbg !2754, !tbaa !1252
  %arrayidx77 = getelementptr [2 x ptr], ptr %values, i64 0, i64 1, !dbg !2755
  %38 = load ptr, ptr %arrayidx77, align 8, !dbg !2755, !tbaa !1252
  store ptr %38, ptr %__pyx_v_obj, align 8, !dbg !2756, !tbaa !1252
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !2757
  br label %cleanup78, !dbg !2757

cleanup78:                                        ; preds = %if.then66, %if.end75, %cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr %values) #8, !dbg !2757
  %cleanup.dest79 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest79, label %cleanup108 [
    i32 0, label %cleanup.cont80
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont80:                                   ; preds = %cleanup78
  br label %__pyx_L4_argument_unpacking_done, !dbg !2758

__pyx_L5_argtuple_error:                          ; preds = %cleanup78
  tail call void @llvm.dbg.label(metadata !991), !dbg !2759
  %39 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !2760, !tbaa !1252
  %ob_size81 = getelementptr inbounds %struct.PyVarObject, ptr %39, i32 0, i32 1, !dbg !2760
  %40 = load i64, ptr %ob_size81, align 8, !dbg !2760, !tbaa !2688
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.49, i32 noundef 1, i64 noundef 2, i64 noundef 2, i64 noundef %40), !dbg !2761
  %41 = load ptr, ptr @__pyx_f, align 16, !dbg !2762, !tbaa !1252
  store ptr %41, ptr %__pyx_filename, align 8, !dbg !2762, !tbaa !1252
  %42 = load ptr, ptr %__pyx_filename, align 8, !dbg !2762, !tbaa !1252
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !2762, !tbaa !1335
  %43 = load i32, ptr %__pyx_lineno, align 4, !dbg !2762, !tbaa !1335
  store i32 1522, ptr %__pyx_clineno, align 4, !dbg !2762, !tbaa !1335
  %44 = load i32, ptr %__pyx_clineno, align 4, !dbg !2762, !tbaa !1335
  br label %__pyx_L3_error, !dbg !2765

__pyx_L3_error:                                   ; preds = %cleanup78, %__pyx_L5_argtuple_error
  tail call void @llvm.dbg.label(metadata !992), !dbg !2766
  %45 = load i32, ptr %__pyx_clineno, align 4, !dbg !2767, !tbaa !1335
  %46 = load i32, ptr %__pyx_lineno, align 4, !dbg !2768, !tbaa !1335
  %47 = load ptr, ptr %__pyx_filename, align 8, !dbg !2769, !tbaa !1252
  call void @__Pyx_AddTraceback(ptr noundef @.str.50, i32 noundef %45, i32 noundef %46, ptr noundef %47), !dbg !2770
  store i32 -1, ptr %retval, align 4, !dbg !2771
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !2771

__pyx_L4_argument_unpacking_done:                 ; preds = %cleanup.cont80
  tail call void @llvm.dbg.label(metadata !993), !dbg !2772
  %48 = load ptr, ptr %__pyx_v_name, align 8, !dbg !2773, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %48, i32 0, i32 1, !dbg !2773
  %49 = load ptr, ptr %ob_type, align 8, !dbg !2773, !tbaa !2317
  %cmp82 = icmp eq ptr %49, @PyUnicode_Type, !dbg !2773
  %conv83 = zext i1 %cmp82 to i32, !dbg !2773
  %50 = load ptr, ptr %__pyx_v_name, align 8, !dbg !2773, !tbaa !1252
  %cmp84 = icmp eq ptr %50, @_Py_NoneStruct, !dbg !2773
  %land.ext = zext i1 %cmp84 to i32, !dbg !2773
  %or = or i32 %conv83, %land.ext, !dbg !2773
  %tobool86 = icmp ne i32 %or, 0, !dbg !2773
  %lnot87 = xor i1 %tobool86, true, !dbg !2773
  %lnot89 = xor i1 %lnot87, true, !dbg !2773
  %lnot.ext90 = zext i1 %lnot89 to i32, !dbg !2773
  %conv91 = sext i32 %lnot.ext90 to i64, !dbg !2773
  %expval92 = call i64 @llvm.expect.i64(i64 %conv91, i64 1), !dbg !2773
  %tobool93 = icmp ne i64 %expval92, 0, !dbg !2773
  br i1 %tobool93, label %cond.true, label %cond.false, !dbg !2773

cond.true:                                        ; preds = %__pyx_L4_argument_unpacking_done
  br label %cond.end, !dbg !2773

cond.false:                                       ; preds = %__pyx_L4_argument_unpacking_done
  %51 = load ptr, ptr %__pyx_v_name, align 8, !dbg !2773, !tbaa !1252
  %call94 = call i32 @__Pyx__ArgTypeTest(ptr noundef %51, ptr noundef @PyUnicode_Type, ptr noundef @.str.1, i32 noundef 1), !dbg !2773
  br label %cond.end, !dbg !2773

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %call94, %cond.false ], !dbg !2773
  %tobool95 = icmp ne i32 %cond, 0, !dbg !2773
  %lnot96 = xor i1 %tobool95, true, !dbg !2773
  %lnot98 = xor i1 %lnot96, true, !dbg !2773
  %lnot100 = xor i1 %lnot98, true, !dbg !2773
  %lnot.ext101 = zext i1 %lnot100 to i32, !dbg !2773
  %conv102 = sext i32 %lnot.ext101 to i64, !dbg !2773
  %expval103 = call i64 @llvm.expect.i64(i64 %conv102, i64 0), !dbg !2773
  %tobool104 = icmp ne i64 %expval103, 0, !dbg !2773
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !2775

if.then105:                                       ; preds = %cond.end
  %52 = load ptr, ptr @__pyx_f, align 16, !dbg !2776, !tbaa !1252
  store ptr %52, ptr %__pyx_filename, align 8, !dbg !2776, !tbaa !1252
  %53 = load ptr, ptr %__pyx_filename, align 8, !dbg !2776, !tbaa !1252
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !2776, !tbaa !1335
  %54 = load i32, ptr %__pyx_lineno, align 4, !dbg !2776, !tbaa !1335
  store i32 1528, ptr %__pyx_clineno, align 4, !dbg !2776, !tbaa !1335
  %55 = load i32, ptr %__pyx_clineno, align 4, !dbg !2776, !tbaa !1335
  br label %__pyx_L1_error, !dbg !2779

if.end106:                                        ; preds = %cond.end
  %56 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !2780, !tbaa !1252
  %57 = load ptr, ptr %__pyx_v_name, align 8, !dbg !2781, !tbaa !1252
  %58 = load ptr, ptr %__pyx_v_obj, align 8, !dbg !2782, !tbaa !1252
  %call107 = call i32 @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase___init__(ptr noundef %56, ptr noundef %57, ptr noundef %58), !dbg !2783
  store i32 %call107, ptr %__pyx_r, align 4, !dbg !2784, !tbaa !1335
  br label %__pyx_L0, !dbg !2785

__pyx_L1_error:                                   ; preds = %if.then105
  tail call void @llvm.dbg.label(metadata !994), !dbg !2786
  store i32 -1, ptr %__pyx_r, align 4, !dbg !2787, !tbaa !1335
  br label %__pyx_L0, !dbg !2788

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end106
  tail call void @llvm.dbg.label(metadata !995), !dbg !2789
  %59 = load i32, ptr %__pyx_r, align 4, !dbg !2790, !tbaa !1335
  store i32 %59, ptr %retval, align 4, !dbg !2791
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !2791

cleanup108:                                       ; preds = %__pyx_L0, %__pyx_L3_error, %cleanup78
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #8, !dbg !2792
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !2792
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #8, !dbg !2792
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !2792
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_obj) #8, !dbg !2792
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_name) #8, !dbg !2792
  %60 = load i32, ptr %retval, align 4, !dbg !2792
  ret i32 %60, !dbg !2792
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_tp_new_6pandas_5_libs_8indexing_NDFrameIndexerBase(ptr noundef %t, ptr noundef %a, ptr noundef %k) #0 !dbg !2793 {
entry:
  %retval = alloca ptr, align 8
  %t.addr = alloca ptr, align 8
  %a.addr = alloca ptr, align 8
  %k.addr = alloca ptr, align 8
  %p = alloca ptr, align 8
  %o = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %t, ptr %t.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %t.addr, metadata !2795, metadata !DIExpression()), !dbg !2800
  store ptr %a, ptr %a.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !2796, metadata !DIExpression()), !dbg !2801
  store ptr %k, ptr %k.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %k.addr, metadata !2797, metadata !DIExpression()), !dbg !2802
  call void @llvm.lifetime.start.p0(i64 8, ptr %p) #8, !dbg !2803
  tail call void @llvm.dbg.declare(metadata ptr %p, metadata !2798, metadata !DIExpression()), !dbg !2804
  call void @llvm.lifetime.start.p0(i64 8, ptr %o) #8, !dbg !2805
  tail call void @llvm.dbg.declare(metadata ptr %o, metadata !2799, metadata !DIExpression()), !dbg !2806
  %0 = load ptr, ptr %t.addr, align 8, !dbg !2807, !tbaa !1252
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 19, !dbg !2807
  %1 = load i64, ptr %tp_flags, align 8, !dbg !2807, !tbaa !2809
  %and = and i64 %1, 1048576, !dbg !2807
  %cmp = icmp eq i64 %and, 0, !dbg !2807
  %lnot = xor i1 %cmp, true, !dbg !2807
  %lnot1 = xor i1 %lnot, true, !dbg !2807
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !2807
  %conv = sext i32 %lnot.ext to i64, !dbg !2807
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !2807
  %tobool = icmp ne i64 %expval, 0, !dbg !2807
  br i1 %tobool, label %if.then, label %if.else, !dbg !2810

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %t.addr, align 8, !dbg !2811, !tbaa !1252
  %tp_alloc = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 36, !dbg !2813
  %3 = load ptr, ptr %tp_alloc, align 8, !dbg !2813, !tbaa !2814
  %4 = load ptr, ptr %t.addr, align 8, !dbg !2815, !tbaa !1252
  %call = call ptr %3(ptr noundef %4, i64 noundef 0), !dbg !2816
  store ptr %call, ptr %o, align 8, !dbg !2817, !tbaa !1252
  br label %if.end, !dbg !2818

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr getelementptr inbounds (%struct._typeobject, ptr @PyBaseObject_Type, i32 0, i32 37), align 8, !dbg !2819, !tbaa !2821
  %6 = load ptr, ptr %t.addr, align 8, !dbg !2822, !tbaa !1252
  %7 = load ptr, ptr @__pyx_empty_tuple, align 8, !dbg !2823, !tbaa !1252
  %call2 = call ptr %5(ptr noundef %6, ptr noundef %7, ptr noundef null), !dbg !2824
  store ptr %call2, ptr %o, align 8, !dbg !2825, !tbaa !1252
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load ptr, ptr %o, align 8, !dbg !2826, !tbaa !1252
  %tobool3 = icmp ne ptr %8, null, !dbg !2826
  %lnot4 = xor i1 %tobool3, true, !dbg !2826
  %lnot6 = xor i1 %lnot4, true, !dbg !2826
  %lnot8 = xor i1 %lnot6, true, !dbg !2826
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !2826
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !2826
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !2826
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !2826
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !2828

if.then13:                                        ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !2829
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2829

if.end14:                                         ; preds = %if.end
  %9 = load ptr, ptr %o, align 8, !dbg !2830, !tbaa !1252
  store ptr %9, ptr %p, align 8, !dbg !2831, !tbaa !1252
  %10 = load ptr, ptr %p, align 8, !dbg !2832, !tbaa !1252
  %name = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %10, i32 0, i32 2, !dbg !2833
  store ptr @_Py_NoneStruct, ptr %name, align 8, !dbg !2834, !tbaa !2590
  call void @_Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !2835
  %11 = load ptr, ptr %p, align 8, !dbg !2836, !tbaa !1252
  %obj = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %11, i32 0, i32 3, !dbg !2837
  store ptr @_Py_NoneStruct, ptr %obj, align 8, !dbg !2838, !tbaa !2598
  call void @_Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !2839
  %12 = load ptr, ptr %o, align 8, !dbg !2840, !tbaa !1252
  store ptr %12, ptr %retval, align 8, !dbg !2841
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2841

cleanup:                                          ; preds = %if.end14, %if.then13
  call void @llvm.lifetime.end.p0(i64 8, ptr %o) #8, !dbg !2842
  call void @llvm.lifetime.end.p0(i64 8, ptr %p) #8, !dbg !2842
  %13 = load ptr, ptr %retval, align 8, !dbg !2842
  ret ptr %13, !dbg !2842
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PyType_HasFeature(ptr noundef %type, i64 noundef %feature) #3 !dbg !2843 {
entry:
  %type.addr = alloca ptr, align 8
  %feature.addr = alloca i64, align 8
  %flags = alloca i64, align 8
  store ptr %type, ptr %type.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !2847, metadata !DIExpression()), !dbg !2850
  store i64 %feature, ptr %feature.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %feature.addr, metadata !2848, metadata !DIExpression()), !dbg !2851
  call void @llvm.lifetime.start.p0(i64 8, ptr %flags) #8, !dbg !2852
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !2849, metadata !DIExpression()), !dbg !2853
  %0 = load ptr, ptr %type.addr, align 8, !dbg !2854, !tbaa !1252
  %tp_flags = getelementptr inbounds %struct._typeobject, ptr %0, i32 0, i32 19, !dbg !2855
  %1 = load i64, ptr %tp_flags, align 8, !dbg !2855, !tbaa !2809
  store i64 %1, ptr %flags, align 8, !dbg !2856, !tbaa !1368
  %2 = load i64, ptr %flags, align 8, !dbg !2857, !tbaa !1368
  %3 = load i64, ptr %feature.addr, align 8, !dbg !2858, !tbaa !1368
  %and = and i64 %2, %3, !dbg !2859
  %cmp = icmp ne i64 %and, 0, !dbg !2860
  %conv = zext i1 %cmp to i32, !dbg !2860
  call void @llvm.lifetime.end.p0(i64 8, ptr %flags) #8, !dbg !2861
  ret i32 %conv, !dbg !2862
}

declare !dbg !2863 i32 @PyObject_GC_IsFinalized(ptr noundef) #1

declare !dbg !2865 i32 @PyObject_CallFinalizerFromDealloc(ptr noundef) #1

declare !dbg !2866 void @PyObject_GC_UnTrack(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3__reduce_cython__(ptr noundef %__pyx_v_self, ptr noundef %unused) #0 !dbg !2867 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %unused.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !2869, metadata !DIExpression()), !dbg !2872
  store ptr %unused, ptr %unused.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %unused.addr, metadata !2870, metadata !DIExpression()), !dbg !2873
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !2874
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !2871, metadata !DIExpression()), !dbg !2875
  store ptr null, ptr %__pyx_r, align 8, !dbg !2875, !tbaa !1252
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !2876, !tbaa !1252
  %call = call ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__(ptr noundef %0), !dbg !2877
  store ptr %call, ptr %__pyx_r, align 8, !dbg !2878, !tbaa !1252
  %1 = load ptr, ptr %__pyx_r, align 8, !dbg !2879, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !2880
  ret ptr %1, !dbg !2881
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_5__setstate_cython__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v___pyx_state) #0 !dbg !2882 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !2884, metadata !DIExpression()), !dbg !2887
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_state.addr, metadata !2885, metadata !DIExpression()), !dbg !2888
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !2889
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !2886, metadata !DIExpression()), !dbg !2890
  store ptr null, ptr %__pyx_r, align 8, !dbg !2890, !tbaa !1252
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !2891, !tbaa !1252
  %1 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !2892, !tbaa !1252
  %call = call ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4__setstate_cython__(ptr noundef %0, ptr noundef %1), !dbg !2893
  store ptr %call, ptr %__pyx_r, align 8, !dbg !2894, !tbaa !1252
  %2 = load ptr, ptr %__pyx_r, align 8, !dbg !2895, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !2896
  ret ptr %2, !dbg !2897
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__(ptr noundef %__pyx_v_self) #0 !dbg !863 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_state = alloca ptr, align 8
  %__pyx_v__dict = alloca ptr, align 8
  %__pyx_v_use_setstate = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca ptr, align 8
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !867, metadata !DIExpression()), !dbg !2898
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_state) #8, !dbg !2899
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_state, metadata !868, metadata !DIExpression()), !dbg !2900
  store ptr null, ptr %__pyx_v_state, align 8, !dbg !2900, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v__dict) #8, !dbg !2901
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v__dict, metadata !869, metadata !DIExpression()), !dbg !2902
  store ptr null, ptr %__pyx_v__dict, align 8, !dbg !2902, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_v_use_setstate) #8, !dbg !2903
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_use_setstate, metadata !870, metadata !DIExpression()), !dbg !2904
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !2905
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !871, metadata !DIExpression()), !dbg !2906
  store ptr null, ptr %__pyx_r, align 8, !dbg !2906, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !2907
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !872, metadata !DIExpression()), !dbg !2908
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !2908, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #8, !dbg !2909
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !873, metadata !DIExpression()), !dbg !2910
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !2910, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #8, !dbg !2911
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !874, metadata !DIExpression()), !dbg !2912
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #8, !dbg !2913
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !875, metadata !DIExpression()), !dbg !2914
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #8, !dbg !2915
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !876, metadata !DIExpression()), !dbg !2916
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #8, !dbg !2917
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !877, metadata !DIExpression()), !dbg !2918
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !2918, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !2919
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !878, metadata !DIExpression()), !dbg !2920
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !2920, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #8, !dbg !2921
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !879, metadata !DIExpression()), !dbg !2922
  store ptr null, ptr %__pyx_filename, align 8, !dbg !2922, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !2923
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !880, metadata !DIExpression()), !dbg !2924
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !2924, !tbaa !1335
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !2925, !tbaa !1252
  %_ndim = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %0, i32 0, i32 1, !dbg !2926
  %1 = load i64, ptr %_ndim, align 8, !dbg !2926, !tbaa !2927
  %call = call ptr @PyLong_FromSsize_t(i64 noundef %1), !dbg !2928
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !2929, !tbaa !1252
  %2 = load ptr, ptr %__pyx_t_1, align 8, !dbg !2930, !tbaa !1252
  %tobool = icmp ne ptr %2, null, !dbg !2930
  %lnot = xor i1 %tobool, true, !dbg !2930
  %lnot1 = xor i1 %lnot, true, !dbg !2930
  %lnot2 = xor i1 %lnot1, true, !dbg !2930
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !2930
  %conv = sext i32 %lnot.ext to i64, !dbg !2930
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !2930
  %tobool3 = icmp ne i64 %expval, 0, !dbg !2930
  br i1 %tobool3, label %if.then, label %if.end, !dbg !2932

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2933, !tbaa !1252
  store ptr %3, ptr %__pyx_filename, align 8, !dbg !2933, !tbaa !1252
  %4 = load ptr, ptr %__pyx_filename, align 8, !dbg !2933, !tbaa !1252
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !2933, !tbaa !1335
  %5 = load i32, ptr %__pyx_lineno, align 4, !dbg !2933, !tbaa !1335
  store i32 1986, ptr %__pyx_clineno, align 4, !dbg !2933, !tbaa !1335
  %6 = load i32, ptr %__pyx_clineno, align 4, !dbg !2933, !tbaa !1335
  br label %__pyx_L1_error, !dbg !2936

if.end:                                           ; preds = %entry
  %call4 = call ptr @PyTuple_New(i64 noundef 3), !dbg !2937
  store ptr %call4, ptr %__pyx_t_2, align 8, !dbg !2938, !tbaa !1252
  %7 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2939, !tbaa !1252
  %tobool5 = icmp ne ptr %7, null, !dbg !2939
  %lnot6 = xor i1 %tobool5, true, !dbg !2939
  %lnot8 = xor i1 %lnot6, true, !dbg !2939
  %lnot10 = xor i1 %lnot8, true, !dbg !2939
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !2939
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !2939
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !2939
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !2939
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !2941

if.then15:                                        ; preds = %if.end
  %8 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2942, !tbaa !1252
  store ptr %8, ptr %__pyx_filename, align 8, !dbg !2942, !tbaa !1252
  %9 = load ptr, ptr %__pyx_filename, align 8, !dbg !2942, !tbaa !1252
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !2942, !tbaa !1335
  %10 = load i32, ptr %__pyx_lineno, align 4, !dbg !2942, !tbaa !1335
  store i32 1988, ptr %__pyx_clineno, align 4, !dbg !2942, !tbaa !1335
  %11 = load i32, ptr %__pyx_clineno, align 4, !dbg !2942, !tbaa !1335
  br label %__pyx_L1_error, !dbg !2945

if.end16:                                         ; preds = %if.end
  %12 = load ptr, ptr %__pyx_t_1, align 8, !dbg !2946, !tbaa !1252
  %13 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2946, !tbaa !1252
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %13, i32 0, i32 1, !dbg !2946
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !2946
  store ptr %12, ptr %arrayidx, align 8, !dbg !2946, !tbaa !1252
  %14 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !2947, !tbaa !1252
  %name = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %14, i32 0, i32 2, !dbg !2947
  %15 = load ptr, ptr %name, align 8, !dbg !2947, !tbaa !2590
  call void @_Py_INCREF(ptr noundef %15), !dbg !2947
  %16 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !2948, !tbaa !1252
  %name17 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %16, i32 0, i32 2, !dbg !2948
  %17 = load ptr, ptr %name17, align 8, !dbg !2948, !tbaa !2590
  %18 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2948, !tbaa !1252
  %ob_item18 = getelementptr inbounds %struct.PyTupleObject, ptr %18, i32 0, i32 1, !dbg !2948
  %arrayidx19 = getelementptr [1 x ptr], ptr %ob_item18, i64 0, i64 1, !dbg !2948
  store ptr %17, ptr %arrayidx19, align 8, !dbg !2948, !tbaa !1252
  %19 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !2949, !tbaa !1252
  %obj = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %19, i32 0, i32 3, !dbg !2949
  %20 = load ptr, ptr %obj, align 8, !dbg !2949, !tbaa !2598
  call void @_Py_INCREF(ptr noundef %20), !dbg !2949
  %21 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !2950, !tbaa !1252
  %obj20 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %21, i32 0, i32 3, !dbg !2950
  %22 = load ptr, ptr %obj20, align 8, !dbg !2950, !tbaa !2598
  %23 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2950, !tbaa !1252
  %ob_item21 = getelementptr inbounds %struct.PyTupleObject, ptr %23, i32 0, i32 1, !dbg !2950
  %arrayidx22 = getelementptr [1 x ptr], ptr %ob_item21, i64 0, i64 2, !dbg !2950
  store ptr %22, ptr %arrayidx22, align 8, !dbg !2950, !tbaa !1252
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !2951, !tbaa !1252
  %24 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2952, !tbaa !1252
  store ptr %24, ptr %__pyx_v_state, align 8, !dbg !2953, !tbaa !1252
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !2954, !tbaa !1252
  %25 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !2955, !tbaa !1252
  %26 = load ptr, ptr @__pyx_n_s_dict, align 8, !dbg !2956, !tbaa !1252
  %call23 = call ptr @__Pyx_GetAttr3(ptr noundef %25, ptr noundef %26, ptr noundef @_Py_NoneStruct), !dbg !2957
  store ptr %call23, ptr %__pyx_t_2, align 8, !dbg !2958, !tbaa !1252
  %27 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2959, !tbaa !1252
  %tobool24 = icmp ne ptr %27, null, !dbg !2959
  %lnot25 = xor i1 %tobool24, true, !dbg !2959
  %lnot27 = xor i1 %lnot25, true, !dbg !2959
  %lnot29 = xor i1 %lnot27, true, !dbg !2959
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !2959
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !2959
  %expval32 = call i64 @llvm.expect.i64(i64 %conv31, i64 0), !dbg !2959
  %tobool33 = icmp ne i64 %expval32, 0, !dbg !2959
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !2961

if.then34:                                        ; preds = %if.end16
  %28 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2962, !tbaa !1252
  store ptr %28, ptr %__pyx_filename, align 8, !dbg !2962, !tbaa !1252
  %29 = load ptr, ptr %__pyx_filename, align 8, !dbg !2962, !tbaa !1252
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !2962, !tbaa !1335
  %30 = load i32, ptr %__pyx_lineno, align 4, !dbg !2962, !tbaa !1335
  store i32 2009, ptr %__pyx_clineno, align 4, !dbg !2962, !tbaa !1335
  %31 = load i32, ptr %__pyx_clineno, align 4, !dbg !2962, !tbaa !1335
  br label %__pyx_L1_error, !dbg !2965

if.end35:                                         ; preds = %if.end16
  %32 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2966, !tbaa !1252
  store ptr %32, ptr %__pyx_v__dict, align 8, !dbg !2967, !tbaa !1252
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !2968, !tbaa !1252
  %33 = load ptr, ptr %__pyx_v__dict, align 8, !dbg !2969, !tbaa !1252
  %cmp = icmp ne ptr %33, @_Py_NoneStruct, !dbg !2970
  %conv36 = zext i1 %cmp to i32, !dbg !2970
  store i32 %conv36, ptr %__pyx_t_3, align 4, !dbg !2971, !tbaa !1335
  %34 = load i32, ptr %__pyx_t_3, align 4, !dbg !2972, !tbaa !1335
  %cmp37 = icmp ne i32 %34, 0, !dbg !2973
  %conv38 = zext i1 %cmp37 to i32, !dbg !2973
  store i32 %conv38, ptr %__pyx_t_4, align 4, !dbg !2974, !tbaa !1335
  %35 = load i32, ptr %__pyx_t_4, align 4, !dbg !2975, !tbaa !1335
  %tobool39 = icmp ne i32 %35, 0, !dbg !2975
  br i1 %tobool39, label %if.then40, label %if.end69, !dbg !2976

if.then40:                                        ; preds = %if.end35
  %call41 = call ptr @PyTuple_New(i64 noundef 1), !dbg !2977
  store ptr %call41, ptr %__pyx_t_2, align 8, !dbg !2978, !tbaa !1252
  %36 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2979, !tbaa !1252
  %tobool42 = icmp ne ptr %36, null, !dbg !2979
  %lnot43 = xor i1 %tobool42, true, !dbg !2979
  %lnot45 = xor i1 %lnot43, true, !dbg !2979
  %lnot47 = xor i1 %lnot45, true, !dbg !2979
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !2979
  %conv49 = sext i32 %lnot.ext48 to i64, !dbg !2979
  %expval50 = call i64 @llvm.expect.i64(i64 %conv49, i64 0), !dbg !2979
  %tobool51 = icmp ne i64 %expval50, 0, !dbg !2979
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !2981

if.then52:                                        ; preds = %if.then40
  %37 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2982, !tbaa !1252
  store ptr %37, ptr %__pyx_filename, align 8, !dbg !2982, !tbaa !1252
  %38 = load ptr, ptr %__pyx_filename, align 8, !dbg !2982, !tbaa !1252
  store i32 8, ptr %__pyx_lineno, align 4, !dbg !2982, !tbaa !1335
  %39 = load i32, ptr %__pyx_lineno, align 4, !dbg !2982, !tbaa !1335
  store i32 2032, ptr %__pyx_clineno, align 4, !dbg !2982, !tbaa !1335
  %40 = load i32, ptr %__pyx_clineno, align 4, !dbg !2982, !tbaa !1335
  br label %__pyx_L1_error, !dbg !2985

if.end53:                                         ; preds = %if.then40
  %41 = load ptr, ptr %__pyx_v__dict, align 8, !dbg !2986, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %41), !dbg !2986
  %42 = load ptr, ptr %__pyx_v__dict, align 8, !dbg !2987, !tbaa !1252
  %43 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2987, !tbaa !1252
  %ob_item54 = getelementptr inbounds %struct.PyTupleObject, ptr %43, i32 0, i32 1, !dbg !2987
  %arrayidx55 = getelementptr [1 x ptr], ptr %ob_item54, i64 0, i64 0, !dbg !2987
  store ptr %42, ptr %arrayidx55, align 8, !dbg !2987, !tbaa !1252
  %44 = load ptr, ptr %__pyx_v_state, align 8, !dbg !2988, !tbaa !1252
  %45 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2989, !tbaa !1252
  %call56 = call ptr @PyNumber_InPlaceAdd(ptr noundef %44, ptr noundef %45), !dbg !2990
  store ptr %call56, ptr %__pyx_t_1, align 8, !dbg !2991, !tbaa !1252
  %46 = load ptr, ptr %__pyx_t_1, align 8, !dbg !2992, !tbaa !1252
  %tobool57 = icmp ne ptr %46, null, !dbg !2992
  %lnot58 = xor i1 %tobool57, true, !dbg !2992
  %lnot60 = xor i1 %lnot58, true, !dbg !2992
  %lnot62 = xor i1 %lnot60, true, !dbg !2992
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !2992
  %conv64 = sext i32 %lnot.ext63 to i64, !dbg !2992
  %expval65 = call i64 @llvm.expect.i64(i64 %conv64, i64 0), !dbg !2992
  %tobool66 = icmp ne i64 %expval65, 0, !dbg !2992
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !2994

if.then67:                                        ; preds = %if.end53
  %47 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !2995, !tbaa !1252
  store ptr %47, ptr %__pyx_filename, align 8, !dbg !2995, !tbaa !1252
  %48 = load ptr, ptr %__pyx_filename, align 8, !dbg !2995, !tbaa !1252
  store i32 8, ptr %__pyx_lineno, align 4, !dbg !2995, !tbaa !1335
  %49 = load i32, ptr %__pyx_lineno, align 4, !dbg !2995, !tbaa !1335
  store i32 2037, ptr %__pyx_clineno, align 4, !dbg !2995, !tbaa !1335
  %50 = load i32, ptr %__pyx_clineno, align 4, !dbg !2995, !tbaa !1335
  br label %__pyx_L1_error, !dbg !2998

if.end68:                                         ; preds = %if.end53
  %51 = load ptr, ptr %__pyx_t_2, align 8, !dbg !2999, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %51), !dbg !2999
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !3000, !tbaa !1252
  br label %do.body, !dbg !3001

do.body:                                          ; preds = %if.end68
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !3002
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !881, metadata !DIExpression()), !dbg !3002
  %52 = load ptr, ptr %__pyx_v_state, align 8, !dbg !3002, !tbaa !1252
  store ptr %52, ptr %tmp, align 8, !dbg !3002, !tbaa !1252
  %53 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3002, !tbaa !1252
  store ptr %53, ptr %__pyx_v_state, align 8, !dbg !3002, !tbaa !1252
  %54 = load ptr, ptr %tmp, align 8, !dbg !3002, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %54), !dbg !3002
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !3001
  br label %do.cond, !dbg !3002

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !3002

do.end:                                           ; preds = %do.cond
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3003, !tbaa !1252
  store i32 1, ptr %__pyx_v_use_setstate, align 4, !dbg !3004, !tbaa !1335
  br label %__pyx_L3, !dbg !3005

if.end69:                                         ; preds = %if.end35
  %55 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !3006, !tbaa !1252
  %name70 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %55, i32 0, i32 2, !dbg !3007
  %56 = load ptr, ptr %name70, align 8, !dbg !3007, !tbaa !2590
  %cmp71 = icmp ne ptr %56, @_Py_NoneStruct, !dbg !3008
  %conv72 = zext i1 %cmp71 to i32, !dbg !3008
  store i32 %conv72, ptr %__pyx_t_3, align 4, !dbg !3009, !tbaa !1335
  %57 = load i32, ptr %__pyx_t_3, align 4, !dbg !3010, !tbaa !1335
  %cmp73 = icmp ne i32 %57, 0, !dbg !3011
  %conv74 = zext i1 %cmp73 to i32, !dbg !3011
  store i32 %conv74, ptr %__pyx_t_5, align 4, !dbg !3012, !tbaa !1335
  %58 = load i32, ptr %__pyx_t_5, align 4, !dbg !3013, !tbaa !1335
  %tobool75 = icmp ne i32 %58, 0, !dbg !3013
  br i1 %tobool75, label %if.else, label %if.then76, !dbg !3015

if.then76:                                        ; preds = %if.end69
  br label %if.end77, !dbg !3016

if.else:                                          ; preds = %if.end69
  %59 = load i32, ptr %__pyx_t_5, align 4, !dbg !3018, !tbaa !1335
  store i32 %59, ptr %__pyx_t_4, align 4, !dbg !3020, !tbaa !1335
  br label %__pyx_L4_bool_binop_done, !dbg !3021

if.end77:                                         ; preds = %if.then76
  %60 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !3022, !tbaa !1252
  %obj78 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %60, i32 0, i32 3, !dbg !3023
  %61 = load ptr, ptr %obj78, align 8, !dbg !3023, !tbaa !2598
  %cmp79 = icmp ne ptr %61, @_Py_NoneStruct, !dbg !3024
  %conv80 = zext i1 %cmp79 to i32, !dbg !3024
  store i32 %conv80, ptr %__pyx_t_5, align 4, !dbg !3025, !tbaa !1335
  %62 = load i32, ptr %__pyx_t_5, align 4, !dbg !3026, !tbaa !1335
  %cmp81 = icmp ne i32 %62, 0, !dbg !3027
  %conv82 = zext i1 %cmp81 to i32, !dbg !3027
  store i32 %conv82, ptr %__pyx_t_3, align 4, !dbg !3028, !tbaa !1335
  %63 = load i32, ptr %__pyx_t_3, align 4, !dbg !3029, !tbaa !1335
  store i32 %63, ptr %__pyx_t_4, align 4, !dbg !3030, !tbaa !1335
  br label %__pyx_L4_bool_binop_done, !dbg !3031

__pyx_L4_bool_binop_done:                         ; preds = %if.end77, %if.else
  tail call void @llvm.dbg.label(metadata !885), !dbg !3032
  %64 = load i32, ptr %__pyx_t_4, align 4, !dbg !3033, !tbaa !1335
  store i32 %64, ptr %__pyx_v_use_setstate, align 4, !dbg !3034, !tbaa !1335
  br label %__pyx_L3, !dbg !3035

__pyx_L3:                                         ; preds = %__pyx_L4_bool_binop_done, %do.end
  tail call void @llvm.dbg.label(metadata !887), !dbg !3036
  %65 = load i32, ptr %__pyx_v_use_setstate, align 4, !dbg !3037, !tbaa !1335
  %cmp83 = icmp ne i32 %65, 0, !dbg !3038
  %conv84 = zext i1 %cmp83 to i32, !dbg !3038
  store i32 %conv84, ptr %__pyx_t_4, align 4, !dbg !3039, !tbaa !1335
  %66 = load i32, ptr %__pyx_t_4, align 4, !dbg !3040, !tbaa !1335
  %tobool85 = icmp ne i32 %66, 0, !dbg !3040
  br i1 %tobool85, label %if.then86, label %if.end164, !dbg !3042

if.then86:                                        ; preds = %__pyx_L3
  %67 = load ptr, ptr %__pyx_r, align 8, !dbg !3043, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %67), !dbg !3043
  br label %do.body87, !dbg !3045

do.body87:                                        ; preds = %if.then86
  %68 = load i64, ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_version, align 8, !dbg !3046, !tbaa !1368
  %69 = load ptr, ptr @__pyx_d, align 8, !dbg !3046, !tbaa !1252
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %69, i32 0, i32 2, !dbg !3046
  %70 = load i64, ptr %ma_version_tag, align 8, !dbg !3046, !tbaa !3048
  %cmp88 = icmp eq i64 %68, %70, !dbg !3046
  %lnot90 = xor i1 %cmp88, true, !dbg !3046
  %lnot92 = xor i1 %lnot90, true, !dbg !3046
  %lnot.ext93 = zext i1 %lnot92 to i32, !dbg !3046
  %conv94 = sext i32 %lnot.ext93 to i64, !dbg !3046
  %expval95 = call i64 @llvm.expect.i64(i64 %conv94, i64 1), !dbg !3046
  %tobool96 = icmp ne i64 %expval95, 0, !dbg !3046
  br i1 %tobool96, label %cond.true, label %cond.false107, !dbg !3046

cond.true:                                        ; preds = %do.body87
  %71 = load ptr, ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_cached_value, align 8, !dbg !3046, !tbaa !1252
  %tobool97 = icmp ne ptr %71, null, !dbg !3046
  %lnot98 = xor i1 %tobool97, true, !dbg !3046
  %lnot100 = xor i1 %lnot98, true, !dbg !3046
  %lnot.ext101 = zext i1 %lnot100 to i32, !dbg !3046
  %conv102 = sext i32 %lnot.ext101 to i64, !dbg !3046
  %expval103 = call i64 @llvm.expect.i64(i64 %conv102, i64 1), !dbg !3046
  %tobool104 = icmp ne i64 %expval103, 0, !dbg !3046
  br i1 %tobool104, label %cond.true105, label %cond.false, !dbg !3046

cond.true105:                                     ; preds = %cond.true
  %72 = load ptr, ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_cached_value, align 8, !dbg !3046, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %72), !dbg !3046
  %73 = load ptr, ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_cached_value, align 8, !dbg !3046, !tbaa !1252
  br label %cond.end, !dbg !3046

cond.false:                                       ; preds = %cond.true
  %74 = load ptr, ptr @__pyx_n_s_pyx_unpickle_NDFrameIndexerBas, align 8, !dbg !3046, !tbaa !1252
  %call106 = call ptr @__Pyx_GetBuiltinName(ptr noundef %74), !dbg !3046
  br label %cond.end, !dbg !3046

cond.end:                                         ; preds = %cond.false, %cond.true105
  %cond = phi ptr [ %73, %cond.true105 ], [ %call106, %cond.false ], !dbg !3046
  br label %cond.end109, !dbg !3046

cond.false107:                                    ; preds = %do.body87
  %75 = load ptr, ptr @__pyx_n_s_pyx_unpickle_NDFrameIndexerBas, align 8, !dbg !3046, !tbaa !1252
  %call108 = call ptr @__Pyx__GetModuleGlobalName(ptr noundef %75, ptr noundef @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_version, ptr noundef @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_cached_value), !dbg !3046
  br label %cond.end109, !dbg !3046

cond.end109:                                      ; preds = %cond.false107, %cond.end
  %cond110 = phi ptr [ %cond, %cond.end ], [ %call108, %cond.false107 ], !dbg !3046
  store ptr %cond110, ptr %__pyx_t_1, align 8, !dbg !3046, !tbaa !1252
  br label %do.cond111, !dbg !3046

do.cond111:                                       ; preds = %cond.end109
  br label %do.end112, !dbg !3046

do.end112:                                        ; preds = %do.cond111
  %76 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3050, !tbaa !1252
  %tobool113 = icmp ne ptr %76, null, !dbg !3050
  %lnot114 = xor i1 %tobool113, true, !dbg !3050
  %lnot116 = xor i1 %lnot114, true, !dbg !3050
  %lnot118 = xor i1 %lnot116, true, !dbg !3050
  %lnot.ext119 = zext i1 %lnot118 to i32, !dbg !3050
  %conv120 = sext i32 %lnot.ext119 to i64, !dbg !3050
  %expval121 = call i64 @llvm.expect.i64(i64 %conv120, i64 0), !dbg !3050
  %tobool122 = icmp ne i64 %expval121, 0, !dbg !3050
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !3052

if.then123:                                       ; preds = %do.end112
  %77 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3053, !tbaa !1252
  store ptr %77, ptr %__pyx_filename, align 8, !dbg !3053, !tbaa !1252
  %78 = load ptr, ptr %__pyx_filename, align 8, !dbg !3053, !tbaa !1252
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !3053, !tbaa !1335
  %79 = load i32, ptr %__pyx_lineno, align 4, !dbg !3053, !tbaa !1335
  store i32 2103, ptr %__pyx_clineno, align 4, !dbg !3053, !tbaa !1335
  %80 = load i32, ptr %__pyx_clineno, align 4, !dbg !3053, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3056

if.end124:                                        ; preds = %do.end112
  %call125 = call ptr @PyTuple_New(i64 noundef 3), !dbg !3057
  store ptr %call125, ptr %__pyx_t_2, align 8, !dbg !3058, !tbaa !1252
  %81 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3059, !tbaa !1252
  %tobool126 = icmp ne ptr %81, null, !dbg !3059
  %lnot127 = xor i1 %tobool126, true, !dbg !3059
  %lnot129 = xor i1 %lnot127, true, !dbg !3059
  %lnot131 = xor i1 %lnot129, true, !dbg !3059
  %lnot.ext132 = zext i1 %lnot131 to i32, !dbg !3059
  %conv133 = sext i32 %lnot.ext132 to i64, !dbg !3059
  %expval134 = call i64 @llvm.expect.i64(i64 %conv133, i64 0), !dbg !3059
  %tobool135 = icmp ne i64 %expval134, 0, !dbg !3059
  br i1 %tobool135, label %if.then136, label %if.end137, !dbg !3061

if.then136:                                       ; preds = %if.end124
  %82 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3062, !tbaa !1252
  store ptr %82, ptr %__pyx_filename, align 8, !dbg !3062, !tbaa !1252
  %83 = load ptr, ptr %__pyx_filename, align 8, !dbg !3062, !tbaa !1252
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !3062, !tbaa !1335
  %84 = load i32, ptr %__pyx_lineno, align 4, !dbg !3062, !tbaa !1335
  store i32 2105, ptr %__pyx_clineno, align 4, !dbg !3062, !tbaa !1335
  %85 = load i32, ptr %__pyx_clineno, align 4, !dbg !3062, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3065

if.end137:                                        ; preds = %if.end124
  %86 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !3066, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %86, i32 0, i32 1, !dbg !3066
  %87 = load ptr, ptr %ob_type, align 8, !dbg !3066, !tbaa !2317
  call void @_Py_INCREF(ptr noundef %87), !dbg !3066
  %88 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !3067, !tbaa !1252
  %ob_type138 = getelementptr inbounds %struct._object, ptr %88, i32 0, i32 1, !dbg !3067
  %89 = load ptr, ptr %ob_type138, align 8, !dbg !3067, !tbaa !2317
  %90 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3067, !tbaa !1252
  %ob_item139 = getelementptr inbounds %struct.PyTupleObject, ptr %90, i32 0, i32 1, !dbg !3067
  %arrayidx140 = getelementptr [1 x ptr], ptr %ob_item139, i64 0, i64 0, !dbg !3067
  store ptr %89, ptr %arrayidx140, align 8, !dbg !3067, !tbaa !1252
  %91 = load ptr, ptr @__pyx_int_68575658, align 8, !dbg !3068, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %91), !dbg !3068
  %92 = load ptr, ptr @__pyx_int_68575658, align 8, !dbg !3069, !tbaa !1252
  %93 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3069, !tbaa !1252
  %ob_item141 = getelementptr inbounds %struct.PyTupleObject, ptr %93, i32 0, i32 1, !dbg !3069
  %arrayidx142 = getelementptr [1 x ptr], ptr %ob_item141, i64 0, i64 1, !dbg !3069
  store ptr %92, ptr %arrayidx142, align 8, !dbg !3069, !tbaa !1252
  call void @_Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !3070
  %94 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3071, !tbaa !1252
  %ob_item143 = getelementptr inbounds %struct.PyTupleObject, ptr %94, i32 0, i32 1, !dbg !3071
  %arrayidx144 = getelementptr [1 x ptr], ptr %ob_item143, i64 0, i64 2, !dbg !3071
  store ptr @_Py_NoneStruct, ptr %arrayidx144, align 8, !dbg !3071, !tbaa !1252
  %call145 = call ptr @PyTuple_New(i64 noundef 3), !dbg !3072
  store ptr %call145, ptr %__pyx_t_6, align 8, !dbg !3073, !tbaa !1252
  %95 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3074, !tbaa !1252
  %tobool146 = icmp ne ptr %95, null, !dbg !3074
  %lnot147 = xor i1 %tobool146, true, !dbg !3074
  %lnot149 = xor i1 %lnot147, true, !dbg !3074
  %lnot151 = xor i1 %lnot149, true, !dbg !3074
  %lnot.ext152 = zext i1 %lnot151 to i32, !dbg !3074
  %conv153 = sext i32 %lnot.ext152 to i64, !dbg !3074
  %expval154 = call i64 @llvm.expect.i64(i64 %conv153, i64 0), !dbg !3074
  %tobool155 = icmp ne i64 %expval154, 0, !dbg !3074
  br i1 %tobool155, label %if.then156, label %if.end157, !dbg !3076

if.then156:                                       ; preds = %if.end137
  %96 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3077, !tbaa !1252
  store ptr %96, ptr %__pyx_filename, align 8, !dbg !3077, !tbaa !1252
  %97 = load ptr, ptr %__pyx_filename, align 8, !dbg !3077, !tbaa !1252
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !3077, !tbaa !1335
  %98 = load i32, ptr %__pyx_lineno, align 4, !dbg !3077, !tbaa !1335
  store i32 2116, ptr %__pyx_clineno, align 4, !dbg !3077, !tbaa !1335
  %99 = load i32, ptr %__pyx_clineno, align 4, !dbg !3077, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3080

if.end157:                                        ; preds = %if.end137
  %100 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3081, !tbaa !1252
  %101 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3081, !tbaa !1252
  %ob_item158 = getelementptr inbounds %struct.PyTupleObject, ptr %101, i32 0, i32 1, !dbg !3081
  %arrayidx159 = getelementptr [1 x ptr], ptr %ob_item158, i64 0, i64 0, !dbg !3081
  store ptr %100, ptr %arrayidx159, align 8, !dbg !3081, !tbaa !1252
  %102 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3082, !tbaa !1252
  %103 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3082, !tbaa !1252
  %ob_item160 = getelementptr inbounds %struct.PyTupleObject, ptr %103, i32 0, i32 1, !dbg !3082
  %arrayidx161 = getelementptr [1 x ptr], ptr %ob_item160, i64 0, i64 1, !dbg !3082
  store ptr %102, ptr %arrayidx161, align 8, !dbg !3082, !tbaa !1252
  %104 = load ptr, ptr %__pyx_v_state, align 8, !dbg !3083, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %104), !dbg !3083
  %105 = load ptr, ptr %__pyx_v_state, align 8, !dbg !3084, !tbaa !1252
  %106 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3084, !tbaa !1252
  %ob_item162 = getelementptr inbounds %struct.PyTupleObject, ptr %106, i32 0, i32 1, !dbg !3084
  %arrayidx163 = getelementptr [1 x ptr], ptr %ob_item162, i64 0, i64 2, !dbg !3084
  store ptr %105, ptr %arrayidx163, align 8, !dbg !3084, !tbaa !1252
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3085, !tbaa !1252
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !3086, !tbaa !1252
  %107 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3087, !tbaa !1252
  store ptr %107, ptr %__pyx_r, align 8, !dbg !3088, !tbaa !1252
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3089, !tbaa !1252
  br label %__pyx_L0, !dbg !3090

if.end164:                                        ; preds = %__pyx_L3
  %108 = load ptr, ptr %__pyx_r, align 8, !dbg !3091, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %108), !dbg !3091
  br label %do.body165, !dbg !3093

do.body165:                                       ; preds = %if.end164
  %109 = load i64, ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_version.27, align 8, !dbg !3094, !tbaa !1368
  %110 = load ptr, ptr @__pyx_d, align 8, !dbg !3094, !tbaa !1252
  %ma_version_tag166 = getelementptr inbounds %struct.PyDictObject, ptr %110, i32 0, i32 2, !dbg !3094
  %111 = load i64, ptr %ma_version_tag166, align 8, !dbg !3094, !tbaa !3048
  %cmp167 = icmp eq i64 %109, %111, !dbg !3094
  %lnot169 = xor i1 %cmp167, true, !dbg !3094
  %lnot171 = xor i1 %lnot169, true, !dbg !3094
  %lnot.ext172 = zext i1 %lnot171 to i32, !dbg !3094
  %conv173 = sext i32 %lnot.ext172 to i64, !dbg !3094
  %expval174 = call i64 @llvm.expect.i64(i64 %conv173, i64 1), !dbg !3094
  %tobool175 = icmp ne i64 %expval174, 0, !dbg !3094
  br i1 %tobool175, label %cond.true176, label %cond.false190, !dbg !3094

cond.true176:                                     ; preds = %do.body165
  %112 = load ptr, ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_cached_value.28, align 8, !dbg !3094, !tbaa !1252
  %tobool177 = icmp ne ptr %112, null, !dbg !3094
  %lnot178 = xor i1 %tobool177, true, !dbg !3094
  %lnot180 = xor i1 %lnot178, true, !dbg !3094
  %lnot.ext181 = zext i1 %lnot180 to i32, !dbg !3094
  %conv182 = sext i32 %lnot.ext181 to i64, !dbg !3094
  %expval183 = call i64 @llvm.expect.i64(i64 %conv182, i64 1), !dbg !3094
  %tobool184 = icmp ne i64 %expval183, 0, !dbg !3094
  br i1 %tobool184, label %cond.true185, label %cond.false186, !dbg !3094

cond.true185:                                     ; preds = %cond.true176
  %113 = load ptr, ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_cached_value.28, align 8, !dbg !3094, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %113), !dbg !3094
  %114 = load ptr, ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_cached_value.28, align 8, !dbg !3094, !tbaa !1252
  br label %cond.end188, !dbg !3094

cond.false186:                                    ; preds = %cond.true176
  %115 = load ptr, ptr @__pyx_n_s_pyx_unpickle_NDFrameIndexerBas, align 8, !dbg !3094, !tbaa !1252
  %call187 = call ptr @__Pyx_GetBuiltinName(ptr noundef %115), !dbg !3094
  br label %cond.end188, !dbg !3094

cond.end188:                                      ; preds = %cond.false186, %cond.true185
  %cond189 = phi ptr [ %114, %cond.true185 ], [ %call187, %cond.false186 ], !dbg !3094
  br label %cond.end192, !dbg !3094

cond.false190:                                    ; preds = %do.body165
  %116 = load ptr, ptr @__pyx_n_s_pyx_unpickle_NDFrameIndexerBas, align 8, !dbg !3094, !tbaa !1252
  %call191 = call ptr @__Pyx__GetModuleGlobalName(ptr noundef %116, ptr noundef @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_version.27, ptr noundef @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__.__pyx_dict_cached_value.28), !dbg !3094
  br label %cond.end192, !dbg !3094

cond.end192:                                      ; preds = %cond.false190, %cond.end188
  %cond193 = phi ptr [ %cond189, %cond.end188 ], [ %call191, %cond.false190 ], !dbg !3094
  store ptr %cond193, ptr %__pyx_t_6, align 8, !dbg !3094, !tbaa !1252
  br label %do.cond194, !dbg !3094

do.cond194:                                       ; preds = %cond.end192
  br label %do.end195, !dbg !3094

do.end195:                                        ; preds = %do.cond194
  %117 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3096, !tbaa !1252
  %tobool196 = icmp ne ptr %117, null, !dbg !3096
  %lnot197 = xor i1 %tobool196, true, !dbg !3096
  %lnot199 = xor i1 %lnot197, true, !dbg !3096
  %lnot201 = xor i1 %lnot199, true, !dbg !3096
  %lnot.ext202 = zext i1 %lnot201 to i32, !dbg !3096
  %conv203 = sext i32 %lnot.ext202 to i64, !dbg !3096
  %expval204 = call i64 @llvm.expect.i64(i64 %conv203, i64 0), !dbg !3096
  %tobool205 = icmp ne i64 %expval204, 0, !dbg !3096
  br i1 %tobool205, label %if.then206, label %if.end207, !dbg !3098

if.then206:                                       ; preds = %do.end195
  %118 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3099, !tbaa !1252
  store ptr %118, ptr %__pyx_filename, align 8, !dbg !3099, !tbaa !1252
  %119 = load ptr, ptr %__pyx_filename, align 8, !dbg !3099, !tbaa !1252
  store i32 15, ptr %__pyx_lineno, align 4, !dbg !3099, !tbaa !1335
  %120 = load i32, ptr %__pyx_lineno, align 4, !dbg !3099, !tbaa !1335
  store i32 2149, ptr %__pyx_clineno, align 4, !dbg !3099, !tbaa !1335
  %121 = load i32, ptr %__pyx_clineno, align 4, !dbg !3099, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3102

if.end207:                                        ; preds = %do.end195
  %call208 = call ptr @PyTuple_New(i64 noundef 3), !dbg !3103
  store ptr %call208, ptr %__pyx_t_2, align 8, !dbg !3104, !tbaa !1252
  %122 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3105, !tbaa !1252
  %tobool209 = icmp ne ptr %122, null, !dbg !3105
  %lnot210 = xor i1 %tobool209, true, !dbg !3105
  %lnot212 = xor i1 %lnot210, true, !dbg !3105
  %lnot214 = xor i1 %lnot212, true, !dbg !3105
  %lnot.ext215 = zext i1 %lnot214 to i32, !dbg !3105
  %conv216 = sext i32 %lnot.ext215 to i64, !dbg !3105
  %expval217 = call i64 @llvm.expect.i64(i64 %conv216, i64 0), !dbg !3105
  %tobool218 = icmp ne i64 %expval217, 0, !dbg !3105
  br i1 %tobool218, label %if.then219, label %if.end220, !dbg !3107

if.then219:                                       ; preds = %if.end207
  %123 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3108, !tbaa !1252
  store ptr %123, ptr %__pyx_filename, align 8, !dbg !3108, !tbaa !1252
  %124 = load ptr, ptr %__pyx_filename, align 8, !dbg !3108, !tbaa !1252
  store i32 15, ptr %__pyx_lineno, align 4, !dbg !3108, !tbaa !1335
  %125 = load i32, ptr %__pyx_lineno, align 4, !dbg !3108, !tbaa !1335
  store i32 2151, ptr %__pyx_clineno, align 4, !dbg !3108, !tbaa !1335
  %126 = load i32, ptr %__pyx_clineno, align 4, !dbg !3108, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3111

if.end220:                                        ; preds = %if.end207
  %127 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !3112, !tbaa !1252
  %ob_type221 = getelementptr inbounds %struct._object, ptr %127, i32 0, i32 1, !dbg !3112
  %128 = load ptr, ptr %ob_type221, align 8, !dbg !3112, !tbaa !2317
  call void @_Py_INCREF(ptr noundef %128), !dbg !3112
  %129 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !3113, !tbaa !1252
  %ob_type222 = getelementptr inbounds %struct._object, ptr %129, i32 0, i32 1, !dbg !3113
  %130 = load ptr, ptr %ob_type222, align 8, !dbg !3113, !tbaa !2317
  %131 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3113, !tbaa !1252
  %ob_item223 = getelementptr inbounds %struct.PyTupleObject, ptr %131, i32 0, i32 1, !dbg !3113
  %arrayidx224 = getelementptr [1 x ptr], ptr %ob_item223, i64 0, i64 0, !dbg !3113
  store ptr %130, ptr %arrayidx224, align 8, !dbg !3113, !tbaa !1252
  %132 = load ptr, ptr @__pyx_int_68575658, align 8, !dbg !3114, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %132), !dbg !3114
  %133 = load ptr, ptr @__pyx_int_68575658, align 8, !dbg !3115, !tbaa !1252
  %134 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3115, !tbaa !1252
  %ob_item225 = getelementptr inbounds %struct.PyTupleObject, ptr %134, i32 0, i32 1, !dbg !3115
  %arrayidx226 = getelementptr [1 x ptr], ptr %ob_item225, i64 0, i64 1, !dbg !3115
  store ptr %133, ptr %arrayidx226, align 8, !dbg !3115, !tbaa !1252
  %135 = load ptr, ptr %__pyx_v_state, align 8, !dbg !3116, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %135), !dbg !3116
  %136 = load ptr, ptr %__pyx_v_state, align 8, !dbg !3117, !tbaa !1252
  %137 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3117, !tbaa !1252
  %ob_item227 = getelementptr inbounds %struct.PyTupleObject, ptr %137, i32 0, i32 1, !dbg !3117
  %arrayidx228 = getelementptr [1 x ptr], ptr %ob_item227, i64 0, i64 2, !dbg !3117
  store ptr %136, ptr %arrayidx228, align 8, !dbg !3117, !tbaa !1252
  %call229 = call ptr @PyTuple_New(i64 noundef 2), !dbg !3118
  store ptr %call229, ptr %__pyx_t_1, align 8, !dbg !3119, !tbaa !1252
  %138 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3120, !tbaa !1252
  %tobool230 = icmp ne ptr %138, null, !dbg !3120
  %lnot231 = xor i1 %tobool230, true, !dbg !3120
  %lnot233 = xor i1 %lnot231, true, !dbg !3120
  %lnot235 = xor i1 %lnot233, true, !dbg !3120
  %lnot.ext236 = zext i1 %lnot235 to i32, !dbg !3120
  %conv237 = sext i32 %lnot.ext236 to i64, !dbg !3120
  %expval238 = call i64 @llvm.expect.i64(i64 %conv237, i64 0), !dbg !3120
  %tobool239 = icmp ne i64 %expval238, 0, !dbg !3120
  br i1 %tobool239, label %if.then240, label %if.end241, !dbg !3122

if.then240:                                       ; preds = %if.end220
  %139 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3123, !tbaa !1252
  store ptr %139, ptr %__pyx_filename, align 8, !dbg !3123, !tbaa !1252
  %140 = load ptr, ptr %__pyx_filename, align 8, !dbg !3123, !tbaa !1252
  store i32 15, ptr %__pyx_lineno, align 4, !dbg !3123, !tbaa !1335
  %141 = load i32, ptr %__pyx_lineno, align 4, !dbg !3123, !tbaa !1335
  store i32 2162, ptr %__pyx_clineno, align 4, !dbg !3123, !tbaa !1335
  %142 = load i32, ptr %__pyx_clineno, align 4, !dbg !3123, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3126

if.end241:                                        ; preds = %if.end220
  %143 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3127, !tbaa !1252
  %144 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3127, !tbaa !1252
  %ob_item242 = getelementptr inbounds %struct.PyTupleObject, ptr %144, i32 0, i32 1, !dbg !3127
  %arrayidx243 = getelementptr [1 x ptr], ptr %ob_item242, i64 0, i64 0, !dbg !3127
  store ptr %143, ptr %arrayidx243, align 8, !dbg !3127, !tbaa !1252
  %145 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3128, !tbaa !1252
  %146 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3128, !tbaa !1252
  %ob_item244 = getelementptr inbounds %struct.PyTupleObject, ptr %146, i32 0, i32 1, !dbg !3128
  %arrayidx245 = getelementptr [1 x ptr], ptr %ob_item244, i64 0, i64 1, !dbg !3128
  store ptr %145, ptr %arrayidx245, align 8, !dbg !3128, !tbaa !1252
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3129, !tbaa !1252
  store ptr null, ptr %__pyx_t_2, align 8, !dbg !3130, !tbaa !1252
  %147 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3131, !tbaa !1252
  store ptr %147, ptr %__pyx_r, align 8, !dbg !3132, !tbaa !1252
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3133, !tbaa !1252
  br label %__pyx_L0, !dbg !3134

__pyx_L1_error:                                   ; preds = %if.then240, %if.then219, %if.then206, %if.then156, %if.then136, %if.then123, %if.then67, %if.then52, %if.then34, %if.then15, %if.then
  tail call void @llvm.dbg.label(metadata !888), !dbg !3135
  %148 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3136, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %148), !dbg !3136
  %149 = load ptr, ptr %__pyx_t_2, align 8, !dbg !3137, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %149), !dbg !3137
  %150 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3138, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %150), !dbg !3138
  %151 = load i32, ptr %__pyx_clineno, align 4, !dbg !3139, !tbaa !1335
  %152 = load i32, ptr %__pyx_lineno, align 4, !dbg !3140, !tbaa !1335
  %153 = load ptr, ptr %__pyx_filename, align 8, !dbg !3141, !tbaa !1252
  call void @__Pyx_AddTraceback(ptr noundef @.str.29, i32 noundef %151, i32 noundef %152, ptr noundef %153), !dbg !3142
  store ptr null, ptr %__pyx_r, align 8, !dbg !3143, !tbaa !1252
  br label %__pyx_L0, !dbg !3144

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end241, %if.end157
  tail call void @llvm.dbg.label(metadata !889), !dbg !3145
  %154 = load ptr, ptr %__pyx_v_state, align 8, !dbg !3146, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %154), !dbg !3146
  %155 = load ptr, ptr %__pyx_v__dict, align 8, !dbg !3147, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %155), !dbg !3147
  %156 = load ptr, ptr %__pyx_r, align 8, !dbg !3148, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !3149
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #8, !dbg !3149
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !3149
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #8, !dbg !3149
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #8, !dbg !3149
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #8, !dbg !3149
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #8, !dbg !3149
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #8, !dbg !3149
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !3149
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !3149
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_v_use_setstate) #8, !dbg !3149
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v__dict) #8, !dbg !3149
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_state) #8, !dbg !3149
  ret ptr %156, !dbg !3150
}

declare !dbg !3151 ptr @PyLong_FromSsize_t(i64 noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_GetAttr3(ptr noundef %o, ptr noundef %n, ptr noundef %d) #3 !dbg !3152 {
entry:
  %o.addr = alloca ptr, align 8
  %n.addr = alloca ptr, align 8
  %d.addr = alloca ptr, align 8
  %r = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !3154, metadata !DIExpression()), !dbg !3158
  store ptr %n, ptr %n.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !3155, metadata !DIExpression()), !dbg !3159
  store ptr %d, ptr %d.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %d.addr, metadata !3156, metadata !DIExpression()), !dbg !3160
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #8, !dbg !3161
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !3157, metadata !DIExpression()), !dbg !3162
  %0 = load ptr, ptr %o.addr, align 8, !dbg !3163, !tbaa !1252
  %1 = load ptr, ptr %n.addr, align 8, !dbg !3164, !tbaa !1252
  %call = call ptr @__Pyx_GetAttr(ptr noundef %0, ptr noundef %1), !dbg !3165
  store ptr %call, ptr %r, align 8, !dbg !3162, !tbaa !1252
  %2 = load ptr, ptr %r, align 8, !dbg !3166, !tbaa !1252
  %tobool = icmp ne ptr %2, null, !dbg !3166
  %lnot = xor i1 %tobool, true, !dbg !3166
  %lnot1 = xor i1 %lnot, true, !dbg !3166
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3166
  %conv = sext i32 %lnot.ext to i64, !dbg !3166
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3166
  %tobool2 = icmp ne i64 %expval, 0, !dbg !3166
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !3167

cond.true:                                        ; preds = %entry
  %3 = load ptr, ptr %r, align 8, !dbg !3168, !tbaa !1252
  br label %cond.end, !dbg !3167

cond.false:                                       ; preds = %entry
  %4 = load ptr, ptr %d.addr, align 8, !dbg !3169, !tbaa !1252
  %call3 = call ptr @__Pyx_GetAttr3Default(ptr noundef %4), !dbg !3170
  br label %cond.end, !dbg !3167

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %3, %cond.true ], [ %call3, %cond.false ], !dbg !3167
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #8, !dbg !3171
  ret ptr %cond, !dbg !3172
}

declare !dbg !3173 ptr @PyNumber_InPlaceAdd(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx__GetModuleGlobalName(ptr noundef %name, ptr noundef %dict_version, ptr noundef %dict_cached_value) #0 !dbg !3175 {
entry:
  %retval = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %dict_version.addr = alloca ptr, align 8
  %dict_cached_value.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %name, ptr %name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !3180, metadata !DIExpression()), !dbg !3184
  store ptr %dict_version, ptr %dict_version.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %dict_version.addr, metadata !3181, metadata !DIExpression()), !dbg !3185
  store ptr %dict_cached_value, ptr %dict_cached_value.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %dict_cached_value.addr, metadata !3182, metadata !DIExpression()), !dbg !3186
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #8, !dbg !3187
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !3183, metadata !DIExpression()), !dbg !3188
  %0 = load ptr, ptr @__pyx_d, align 8, !dbg !3189, !tbaa !1252
  %1 = load ptr, ptr %name.addr, align 8, !dbg !3190, !tbaa !1252
  %2 = load ptr, ptr %name.addr, align 8, !dbg !3191, !tbaa !1252
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %2, i32 0, i32 2, !dbg !3192
  %3 = load i64, ptr %hash, align 8, !dbg !3192, !tbaa !2707
  %call = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %0, ptr noundef %1, i64 noundef %3), !dbg !3193
  store ptr %call, ptr %result, align 8, !dbg !3194, !tbaa !1252
  %4 = load ptr, ptr @__pyx_d, align 8, !dbg !3195, !tbaa !1252
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %4, i32 0, i32 2, !dbg !3195
  %5 = load i64, ptr %ma_version_tag, align 8, !dbg !3195, !tbaa !3048
  %6 = load ptr, ptr %dict_version.addr, align 8, !dbg !3195, !tbaa !1252
  store i64 %5, ptr %6, align 8, !dbg !3195, !tbaa !1368
  %7 = load ptr, ptr %result, align 8, !dbg !3195, !tbaa !1252
  %8 = load ptr, ptr %dict_cached_value.addr, align 8, !dbg !3195, !tbaa !1252
  store ptr %7, ptr %8, align 8, !dbg !3195, !tbaa !1252
  %9 = load ptr, ptr %result, align 8, !dbg !3196, !tbaa !1252
  %tobool = icmp ne ptr %9, null, !dbg !3196
  %lnot = xor i1 %tobool, true, !dbg !3196
  %lnot1 = xor i1 %lnot, true, !dbg !3196
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3196
  %conv = sext i32 %lnot.ext to i64, !dbg !3196
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3196
  %tobool2 = icmp ne i64 %expval, 0, !dbg !3196
  br i1 %tobool2, label %if.then, label %if.else, !dbg !3198

if.then:                                          ; preds = %entry
  %10 = load ptr, ptr %result, align 8, !dbg !3199, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %10), !dbg !3199
  %11 = load ptr, ptr %result, align 8, !dbg !3199, !tbaa !1252
  store ptr %11, ptr %retval, align 8, !dbg !3201
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3201

if.else:                                          ; preds = %entry
  %call3 = call ptr @PyErr_Occurred(), !dbg !3202
  %tobool4 = icmp ne ptr %call3, null, !dbg !3202
  %lnot5 = xor i1 %tobool4, true, !dbg !3202
  %lnot7 = xor i1 %lnot5, true, !dbg !3202
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !3202
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !3202
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !3202
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !3202
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !3204

if.then12:                                        ; preds = %if.else
  store ptr null, ptr %retval, align 8, !dbg !3205
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3205

if.end:                                           ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end
  %12 = load ptr, ptr %name.addr, align 8, !dbg !3207, !tbaa !1252
  %call14 = call ptr @__Pyx_GetBuiltinName(ptr noundef %12), !dbg !3208
  store ptr %call14, ptr %retval, align 8, !dbg !3209
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3209

cleanup:                                          ; preds = %if.end13, %if.then12, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #8, !dbg !3210
  %13 = load ptr, ptr %retval, align 8, !dbg !3210
  ret ptr %13, !dbg !3210
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_GetAttr(ptr noundef %o, ptr noundef %n) #3 !dbg !3211 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %n.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !3213, metadata !DIExpression()), !dbg !3215
  store ptr %n, ptr %n.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !3214, metadata !DIExpression()), !dbg !3216
  %0 = load ptr, ptr %n.addr, align 8, !dbg !3217, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1, !dbg !3217
  %1 = load ptr, ptr %ob_type, align 8, !dbg !3217, !tbaa !2317
  %call = call i32 @PyType_HasFeature(ptr noundef %1, i64 noundef 268435456), !dbg !3217
  %tobool = icmp ne i32 %call, 0, !dbg !3217
  %lnot = xor i1 %tobool, true, !dbg !3217
  %lnot1 = xor i1 %lnot, true, !dbg !3217
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3217
  %conv = sext i32 %lnot.ext to i64, !dbg !3217
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3217
  %tobool2 = icmp ne i64 %expval, 0, !dbg !3217
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3219

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %o.addr, align 8, !dbg !3220, !tbaa !1252
  %3 = load ptr, ptr %n.addr, align 8, !dbg !3221, !tbaa !1252
  %call3 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %2, ptr noundef %3), !dbg !3222
  store ptr %call3, ptr %retval, align 8, !dbg !3223
  br label %return, !dbg !3223

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %o.addr, align 8, !dbg !3224, !tbaa !1252
  %5 = load ptr, ptr %n.addr, align 8, !dbg !3225, !tbaa !1252
  %call4 = call ptr @PyObject_GetAttr(ptr noundef %4, ptr noundef %5), !dbg !3226
  store ptr %call4, ptr %retval, align 8, !dbg !3227
  br label %return, !dbg !3227

return:                                           ; preds = %if.end, %if.then
  %6 = load ptr, ptr %retval, align 8, !dbg !3228
  ret ptr %6, !dbg !3228
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetAttr3Default(ptr noundef %d) #0 !dbg !3229 {
entry:
  %retval = alloca ptr, align 8
  %d.addr = alloca ptr, align 8
  %__pyx_tstate = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %d, ptr %d.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %d.addr, metadata !3231, metadata !DIExpression()), !dbg !3233
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate) #8, !dbg !3234
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate, metadata !3232, metadata !DIExpression()), !dbg !3234
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !3235
  store ptr %call, ptr %__pyx_tstate, align 8, !dbg !3235, !tbaa !1252
  %0 = load ptr, ptr %__pyx_tstate, align 8, !dbg !3236, !tbaa !1252
  %1 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !3236, !tbaa !1252
  %call1 = call i32 @__Pyx_PyErr_ExceptionMatchesInState(ptr noundef %0, ptr noundef %1), !dbg !3236
  %tobool = icmp ne i32 %call1, 0, !dbg !3236
  %lnot = xor i1 %tobool, true, !dbg !3236
  %lnot2 = xor i1 %lnot, true, !dbg !3236
  %lnot3 = xor i1 %lnot2, true, !dbg !3236
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !3236
  %conv = sext i32 %lnot.ext to i64, !dbg !3236
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !3236
  %tobool4 = icmp ne i64 %expval, 0, !dbg !3236
  br i1 %tobool4, label %if.then, label %if.end, !dbg !3238

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !3239
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3239

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %__pyx_tstate, align 8, !dbg !3240, !tbaa !1252
  call void @__Pyx_ErrRestoreInState(ptr noundef %2, ptr noundef null, ptr noundef null, ptr noundef null), !dbg !3240
  %3 = load ptr, ptr %d.addr, align 8, !dbg !3241, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %3), !dbg !3241
  %4 = load ptr, ptr %d.addr, align 8, !dbg !3242, !tbaa !1252
  store ptr %4, ptr %retval, align 8, !dbg !3243
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3243

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate) #8, !dbg !3244
  %5 = load ptr, ptr %retval, align 8, !dbg !3244
  ret ptr %5, !dbg !3244
}

declare !dbg !3245 ptr @_PyThreadState_UncheckedGet() #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyErr_ExceptionMatchesInState(ptr noundef %tstate, ptr noundef %err) #3 !dbg !3246 {
entry:
  %retval = alloca i32, align 4
  %tstate.addr = alloca ptr, align 8
  %err.addr = alloca ptr, align 8
  %exc_type = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !3250, metadata !DIExpression()), !dbg !3253
  store ptr %err, ptr %err.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !3251, metadata !DIExpression()), !dbg !3254
  call void @llvm.lifetime.start.p0(i64 8, ptr %exc_type) #8, !dbg !3255
  tail call void @llvm.dbg.declare(metadata ptr %exc_type, metadata !3252, metadata !DIExpression()), !dbg !3256
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !3257, !tbaa !1252
  %curexc_type = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 14, !dbg !3258
  %1 = load ptr, ptr %curexc_type, align 8, !dbg !3258, !tbaa !3259
  store ptr %1, ptr %exc_type, align 8, !dbg !3256, !tbaa !1252
  %2 = load ptr, ptr %exc_type, align 8, !dbg !3260, !tbaa !1252
  %3 = load ptr, ptr %err.addr, align 8, !dbg !3262, !tbaa !1252
  %cmp = icmp eq ptr %2, %3, !dbg !3263
  br i1 %cmp, label %if.then, label %if.end, !dbg !3264

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !3265
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3265

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %exc_type, align 8, !dbg !3266, !tbaa !1252
  %tobool = icmp ne ptr %4, null, !dbg !3266
  %lnot = xor i1 %tobool, true, !dbg !3266
  %lnot1 = xor i1 %lnot, true, !dbg !3266
  %lnot2 = xor i1 %lnot1, true, !dbg !3266
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !3266
  %conv = sext i32 %lnot.ext to i64, !dbg !3266
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !3266
  %tobool3 = icmp ne i64 %expval, 0, !dbg !3266
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !3268

if.then4:                                         ; preds = %if.end
  store i32 0, ptr %retval, align 4, !dbg !3269
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3269

if.end5:                                          ; preds = %if.end
  %5 = load ptr, ptr %err.addr, align 8, !dbg !3270, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %5, i32 0, i32 1, !dbg !3270
  %6 = load ptr, ptr %ob_type, align 8, !dbg !3270, !tbaa !2317
  %call = call i32 @PyType_HasFeature(ptr noundef %6, i64 noundef 67108864), !dbg !3270
  %tobool6 = icmp ne i32 %call, 0, !dbg !3270
  %lnot7 = xor i1 %tobool6, true, !dbg !3270
  %lnot9 = xor i1 %lnot7, true, !dbg !3270
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !3270
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !3270
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !3270
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !3270
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !3272

if.then14:                                        ; preds = %if.end5
  %7 = load ptr, ptr %exc_type, align 8, !dbg !3273, !tbaa !1252
  %8 = load ptr, ptr %err.addr, align 8, !dbg !3274, !tbaa !1252
  %call15 = call i32 @__Pyx_PyErr_ExceptionMatchesTuple(ptr noundef %7, ptr noundef %8), !dbg !3275
  store i32 %call15, ptr %retval, align 4, !dbg !3276
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3276

if.end16:                                         ; preds = %if.end5
  %9 = load ptr, ptr %exc_type, align 8, !dbg !3277, !tbaa !1252
  %10 = load ptr, ptr %err.addr, align 8, !dbg !3278, !tbaa !1252
  %call17 = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %9, ptr noundef %10), !dbg !3279
  store i32 %call17, ptr %retval, align 4, !dbg !3280
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3280

cleanup:                                          ; preds = %if.end16, %if.then14, %if.then4, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %exc_type) #8, !dbg !3281
  %11 = load i32, ptr %retval, align 4, !dbg !3281
  ret i32 %11, !dbg !3281
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_ErrRestoreInState(ptr noundef %tstate, ptr noundef %type, ptr noundef %value, ptr noundef %tb) #3 !dbg !3282 {
entry:
  %tstate.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  %tmp_type = alloca ptr, align 8
  %tmp_value = alloca ptr, align 8
  %tmp_tb = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !3286, metadata !DIExpression()), !dbg !3293
  store ptr %type, ptr %type.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !3287, metadata !DIExpression()), !dbg !3294
  store ptr %value, ptr %value.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !3288, metadata !DIExpression()), !dbg !3295
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %tb.addr, metadata !3289, metadata !DIExpression()), !dbg !3296
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_type) #8, !dbg !3297
  tail call void @llvm.dbg.declare(metadata ptr %tmp_type, metadata !3290, metadata !DIExpression()), !dbg !3298
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_value) #8, !dbg !3297
  tail call void @llvm.dbg.declare(metadata ptr %tmp_value, metadata !3291, metadata !DIExpression()), !dbg !3299
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_tb) #8, !dbg !3297
  tail call void @llvm.dbg.declare(metadata ptr %tmp_tb, metadata !3292, metadata !DIExpression()), !dbg !3300
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !3301, !tbaa !1252
  %curexc_type = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 14, !dbg !3302
  %1 = load ptr, ptr %curexc_type, align 8, !dbg !3302, !tbaa !3259
  store ptr %1, ptr %tmp_type, align 8, !dbg !3303, !tbaa !1252
  %2 = load ptr, ptr %tstate.addr, align 8, !dbg !3304, !tbaa !1252
  %curexc_value = getelementptr inbounds %struct._ts, ptr %2, i32 0, i32 15, !dbg !3305
  %3 = load ptr, ptr %curexc_value, align 8, !dbg !3305, !tbaa !3306
  store ptr %3, ptr %tmp_value, align 8, !dbg !3307, !tbaa !1252
  %4 = load ptr, ptr %tstate.addr, align 8, !dbg !3308, !tbaa !1252
  %curexc_traceback = getelementptr inbounds %struct._ts, ptr %4, i32 0, i32 16, !dbg !3309
  %5 = load ptr, ptr %curexc_traceback, align 8, !dbg !3309, !tbaa !3310
  store ptr %5, ptr %tmp_tb, align 8, !dbg !3311, !tbaa !1252
  %6 = load ptr, ptr %type.addr, align 8, !dbg !3312, !tbaa !1252
  %7 = load ptr, ptr %tstate.addr, align 8, !dbg !3313, !tbaa !1252
  %curexc_type1 = getelementptr inbounds %struct._ts, ptr %7, i32 0, i32 14, !dbg !3314
  store ptr %6, ptr %curexc_type1, align 8, !dbg !3315, !tbaa !3259
  %8 = load ptr, ptr %value.addr, align 8, !dbg !3316, !tbaa !1252
  %9 = load ptr, ptr %tstate.addr, align 8, !dbg !3317, !tbaa !1252
  %curexc_value2 = getelementptr inbounds %struct._ts, ptr %9, i32 0, i32 15, !dbg !3318
  store ptr %8, ptr %curexc_value2, align 8, !dbg !3319, !tbaa !3306
  %10 = load ptr, ptr %tb.addr, align 8, !dbg !3320, !tbaa !1252
  %11 = load ptr, ptr %tstate.addr, align 8, !dbg !3321, !tbaa !1252
  %curexc_traceback3 = getelementptr inbounds %struct._ts, ptr %11, i32 0, i32 16, !dbg !3322
  store ptr %10, ptr %curexc_traceback3, align 8, !dbg !3323, !tbaa !3310
  %12 = load ptr, ptr %tmp_type, align 8, !dbg !3324, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %12), !dbg !3324
  %13 = load ptr, ptr %tmp_value, align 8, !dbg !3325, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %13), !dbg !3325
  %14 = load ptr, ptr %tmp_tb, align 8, !dbg !3326, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %14), !dbg !3326
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_tb) #8, !dbg !3327
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_value) #8, !dbg !3327
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_type) #8, !dbg !3327
  ret void, !dbg !3327
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_PyErr_ExceptionMatchesTuple(ptr noundef %exc_type, ptr noundef %tuple) #0 !dbg !3328 {
entry:
  %retval = alloca i32, align 4
  %exc_type.addr = alloca ptr, align 8
  %tuple.addr = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %exc_type, ptr %exc_type.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %exc_type.addr, metadata !3330, metadata !DIExpression()), !dbg !3334
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %tuple.addr, metadata !3331, metadata !DIExpression()), !dbg !3335
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #8, !dbg !3336
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !3332, metadata !DIExpression()), !dbg !3337
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #8, !dbg !3336
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !3333, metadata !DIExpression()), !dbg !3338
  %0 = load ptr, ptr %tuple.addr, align 8, !dbg !3339, !tbaa !1252
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %0, i32 0, i32 1, !dbg !3339
  %1 = load i64, ptr %ob_size, align 8, !dbg !3339, !tbaa !2688
  store i64 %1, ptr %n, align 8, !dbg !3340, !tbaa !1368
  store i64 0, ptr %i, align 8, !dbg !3341, !tbaa !1368
  br label %for.cond, !dbg !3343

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, ptr %i, align 8, !dbg !3344, !tbaa !1368
  %3 = load i64, ptr %n, align 8, !dbg !3346, !tbaa !1368
  %cmp = icmp slt i64 %2, %3, !dbg !3347
  br i1 %cmp, label %for.body, label %for.end, !dbg !3348

for.body:                                         ; preds = %for.cond
  %4 = load ptr, ptr %exc_type.addr, align 8, !dbg !3349, !tbaa !1252
  %5 = load ptr, ptr %tuple.addr, align 8, !dbg !3352, !tbaa !1252
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %5, i32 0, i32 1, !dbg !3352
  %6 = load i64, ptr %i, align 8, !dbg !3352, !tbaa !1368
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %6, !dbg !3352
  %7 = load ptr, ptr %arrayidx, align 8, !dbg !3352, !tbaa !1252
  %cmp1 = icmp eq ptr %4, %7, !dbg !3353
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3354

if.then:                                          ; preds = %for.body
  store i32 1, ptr %retval, align 4, !dbg !3355
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3355

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3356

for.inc:                                          ; preds = %if.end
  %8 = load i64, ptr %i, align 8, !dbg !3357, !tbaa !1368
  %inc = add i64 %8, 1, !dbg !3357
  store i64 %inc, ptr %i, align 8, !dbg !3357, !tbaa !1368
  br label %for.cond, !dbg !3358, !llvm.loop !3359

for.end:                                          ; preds = %for.cond
  store i64 0, ptr %i, align 8, !dbg !3361, !tbaa !1368
  br label %for.cond2, !dbg !3363

for.cond2:                                        ; preds = %for.inc9, %for.end
  %9 = load i64, ptr %i, align 8, !dbg !3364, !tbaa !1368
  %10 = load i64, ptr %n, align 8, !dbg !3366, !tbaa !1368
  %cmp3 = icmp slt i64 %9, %10, !dbg !3367
  br i1 %cmp3, label %for.body4, label %for.end11, !dbg !3368

for.body4:                                        ; preds = %for.cond2
  %11 = load ptr, ptr %exc_type.addr, align 8, !dbg !3369, !tbaa !1252
  %12 = load ptr, ptr %tuple.addr, align 8, !dbg !3372, !tbaa !1252
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %12, i32 0, i32 1, !dbg !3372
  %13 = load i64, ptr %i, align 8, !dbg !3372, !tbaa !1368
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 %13, !dbg !3372
  %14 = load ptr, ptr %arrayidx6, align 8, !dbg !3372, !tbaa !1252
  %call = call i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %11, ptr noundef %14), !dbg !3373
  %tobool = icmp ne i32 %call, 0, !dbg !3373
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !3374

if.then7:                                         ; preds = %for.body4
  store i32 1, ptr %retval, align 4, !dbg !3375
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3375

if.end8:                                          ; preds = %for.body4
  br label %for.inc9, !dbg !3376

for.inc9:                                         ; preds = %if.end8
  %15 = load i64, ptr %i, align 8, !dbg !3377, !tbaa !1368
  %inc10 = add i64 %15, 1, !dbg !3377
  store i64 %inc10, ptr %i, align 8, !dbg !3377, !tbaa !1368
  br label %for.cond2, !dbg !3378, !llvm.loop !3379

for.end11:                                        ; preds = %for.cond2
  store i32 0, ptr %retval, align 4, !dbg !3381
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3381

cleanup:                                          ; preds = %for.end11, %if.then7, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #8, !dbg !3382
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #8, !dbg !3382
  %16 = load i32, ptr %retval, align 4, !dbg !3382
  ret i32 %16, !dbg !3382
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyErr_GivenExceptionMatches(ptr noundef %err, ptr noundef %exc_type) #3 !dbg !3383 {
entry:
  %retval = alloca i32, align 4
  %err.addr = alloca ptr, align 8
  %exc_type.addr = alloca ptr, align 8
  store ptr %err, ptr %err.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !3385, metadata !DIExpression()), !dbg !3387
  store ptr %exc_type, ptr %exc_type.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %exc_type.addr, metadata !3386, metadata !DIExpression()), !dbg !3388
  %0 = load ptr, ptr %err.addr, align 8, !dbg !3389, !tbaa !1252
  %1 = load ptr, ptr %exc_type.addr, align 8, !dbg !3389, !tbaa !1252
  %cmp = icmp eq ptr %0, %1, !dbg !3389
  %lnot = xor i1 %cmp, true, !dbg !3389
  %lnot1 = xor i1 %lnot, true, !dbg !3389
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3389
  %conv = sext i32 %lnot.ext to i64, !dbg !3389
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3389
  %tobool = icmp ne i64 %expval, 0, !dbg !3389
  br i1 %tobool, label %if.then, label %if.end, !dbg !3391

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !3392
  br label %return, !dbg !3392

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %err.addr, align 8, !dbg !3393, !tbaa !1252
  %call = call i32 @_PyType_Check(ptr noundef %2), !dbg !3393
  %tobool2 = icmp ne i32 %call, 0, !dbg !3393
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !3393

land.rhs:                                         ; preds = %if.end
  %3 = load ptr, ptr %err.addr, align 8, !dbg !3393, !tbaa !1252
  %call3 = call i32 @PyType_HasFeature(ptr noundef %3, i64 noundef 1073741824), !dbg !3393
  %tobool4 = icmp ne i32 %call3, 0, !dbg !3393
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %4 = phi i1 [ false, %if.end ], [ %tobool4, %land.rhs ], !dbg !3395
  %lnot5 = xor i1 %4, true, !dbg !3393
  %lnot7 = xor i1 %lnot5, true, !dbg !3393
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !3393
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !3393
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !3393
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !3393
  br i1 %tobool11, label %if.then12, label %if.end42, !dbg !3396

if.then12:                                        ; preds = %land.end
  %5 = load ptr, ptr %exc_type.addr, align 8, !dbg !3397, !tbaa !1252
  %call13 = call i32 @_PyType_Check(ptr noundef %5), !dbg !3397
  %tobool14 = icmp ne i32 %call13, 0, !dbg !3397
  br i1 %tobool14, label %land.rhs15, label %land.end18, !dbg !3397

land.rhs15:                                       ; preds = %if.then12
  %6 = load ptr, ptr %exc_type.addr, align 8, !dbg !3397, !tbaa !1252
  %call16 = call i32 @PyType_HasFeature(ptr noundef %6, i64 noundef 1073741824), !dbg !3397
  %tobool17 = icmp ne i32 %call16, 0, !dbg !3397
  br label %land.end18

land.end18:                                       ; preds = %land.rhs15, %if.then12
  %7 = phi i1 [ false, %if.then12 ], [ %tobool17, %land.rhs15 ], !dbg !3400
  %lnot19 = xor i1 %7, true, !dbg !3397
  %lnot21 = xor i1 %lnot19, true, !dbg !3397
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !3397
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !3397
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 1), !dbg !3397
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !3397
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !3401

if.then26:                                        ; preds = %land.end18
  %8 = load ptr, ptr %err.addr, align 8, !dbg !3402, !tbaa !1252
  %9 = load ptr, ptr %exc_type.addr, align 8, !dbg !3404, !tbaa !1252
  %call27 = call i32 @__Pyx_inner_PyErr_GivenExceptionMatches2(ptr noundef %8, ptr noundef null, ptr noundef %9), !dbg !3405
  store i32 %call27, ptr %retval, align 4, !dbg !3406
  br label %return, !dbg !3406

if.else:                                          ; preds = %land.end18
  %10 = load ptr, ptr %exc_type.addr, align 8, !dbg !3407, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %10, i32 0, i32 1, !dbg !3407
  %11 = load ptr, ptr %ob_type, align 8, !dbg !3407, !tbaa !2317
  %call28 = call i32 @PyType_HasFeature(ptr noundef %11, i64 noundef 67108864), !dbg !3407
  %tobool29 = icmp ne i32 %call28, 0, !dbg !3407
  %lnot30 = xor i1 %tobool29, true, !dbg !3407
  %lnot32 = xor i1 %lnot30, true, !dbg !3407
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !3407
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !3407
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 1), !dbg !3407
  %tobool36 = icmp ne i64 %expval35, 0, !dbg !3407
  br i1 %tobool36, label %if.then37, label %if.else39, !dbg !3409

if.then37:                                        ; preds = %if.else
  %12 = load ptr, ptr %err.addr, align 8, !dbg !3410, !tbaa !1252
  %13 = load ptr, ptr %exc_type.addr, align 8, !dbg !3412, !tbaa !1252
  %call38 = call i32 @__Pyx_PyErr_GivenExceptionMatchesTuple(ptr noundef %12, ptr noundef %13), !dbg !3413
  store i32 %call38, ptr %retval, align 4, !dbg !3414
  br label %return, !dbg !3414

if.else39:                                        ; preds = %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.else39
  br label %if.end41

if.end41:                                         ; preds = %if.end40
  br label %if.end42, !dbg !3415

if.end42:                                         ; preds = %if.end41, %land.end
  %14 = load ptr, ptr %err.addr, align 8, !dbg !3416, !tbaa !1252
  %15 = load ptr, ptr %exc_type.addr, align 8, !dbg !3417, !tbaa !1252
  %call43 = call i32 @PyErr_GivenExceptionMatches(ptr noundef %14, ptr noundef %15), !dbg !3418
  store i32 %call43, ptr %retval, align 4, !dbg !3419
  br label %return, !dbg !3419

return:                                           ; preds = %if.end42, %if.then37, %if.then26, %if.then
  %16 = load i32, ptr %retval, align 4, !dbg !3420
  ret i32 %16, !dbg !3420
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @_PyType_Check(ptr noundef %op) #3 !dbg !3421 {
entry:
  %op.addr = alloca ptr, align 8
  store ptr %op, ptr %op.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %op.addr, metadata !3423, metadata !DIExpression()), !dbg !3424
  %0 = load ptr, ptr %op.addr, align 8, !dbg !3425, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1, !dbg !3425
  %1 = load ptr, ptr %ob_type, align 8, !dbg !3425, !tbaa !2317
  %call = call i32 @PyType_HasFeature(ptr noundef %1, i64 noundef 2147483648), !dbg !3425
  ret i32 %call, !dbg !3426
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_inner_PyErr_GivenExceptionMatches2(ptr noundef %err, ptr noundef %exc_type1, ptr noundef %exc_type2) #3 !dbg !3427 {
entry:
  %err.addr = alloca ptr, align 8
  %exc_type1.addr = alloca ptr, align 8
  %exc_type2.addr = alloca ptr, align 8
  %res = alloca i32, align 4
  store ptr %err, ptr %err.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %err.addr, metadata !3429, metadata !DIExpression()), !dbg !3433
  store ptr %exc_type1, ptr %exc_type1.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %exc_type1.addr, metadata !3430, metadata !DIExpression()), !dbg !3434
  store ptr %exc_type2, ptr %exc_type2.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %exc_type2.addr, metadata !3431, metadata !DIExpression()), !dbg !3435
  call void @llvm.lifetime.start.p0(i64 4, ptr %res) #8, !dbg !3436
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !3432, metadata !DIExpression()), !dbg !3437
  %0 = load ptr, ptr %exc_type1.addr, align 8, !dbg !3438, !tbaa !1252
  %tobool = icmp ne ptr %0, null, !dbg !3438
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3438

cond.true:                                        ; preds = %entry
  %1 = load ptr, ptr %err.addr, align 8, !dbg !3439, !tbaa !1252
  %2 = load ptr, ptr %exc_type1.addr, align 8, !dbg !3440, !tbaa !1252
  %call = call i32 @__Pyx_IsSubtype(ptr noundef %1, ptr noundef %2), !dbg !3441
  br label %cond.end, !dbg !3438

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3438

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !3438
  store i32 %cond, ptr %res, align 4, !dbg !3437, !tbaa !1335
  %3 = load i32, ptr %res, align 4, !dbg !3442, !tbaa !1335
  %tobool1 = icmp ne i32 %3, 0, !dbg !3442
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3444

if.then:                                          ; preds = %cond.end
  %4 = load ptr, ptr %err.addr, align 8, !dbg !3445, !tbaa !1252
  %5 = load ptr, ptr %exc_type2.addr, align 8, !dbg !3447, !tbaa !1252
  %call2 = call i32 @__Pyx_IsSubtype(ptr noundef %4, ptr noundef %5), !dbg !3448
  store i32 %call2, ptr %res, align 4, !dbg !3449, !tbaa !1335
  br label %if.end, !dbg !3450

if.end:                                           ; preds = %if.then, %cond.end
  %6 = load i32, ptr %res, align 4, !dbg !3451, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 4, ptr %res) #8, !dbg !3452
  ret i32 %6, !dbg !3453
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_PyErr_GivenExceptionMatchesTuple(ptr noundef %exc_type, ptr noundef %tuple) #0 !dbg !3454 {
entry:
  %retval = alloca i32, align 4
  %exc_type.addr = alloca ptr, align 8
  %tuple.addr = alloca ptr, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %t = alloca ptr, align 8
  store ptr %exc_type, ptr %exc_type.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %exc_type.addr, metadata !3456, metadata !DIExpression()), !dbg !3464
  store ptr %tuple, ptr %tuple.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %tuple.addr, metadata !3457, metadata !DIExpression()), !dbg !3465
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #8, !dbg !3466
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !3458, metadata !DIExpression()), !dbg !3467
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #8, !dbg !3466
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !3459, metadata !DIExpression()), !dbg !3468
  %0 = load ptr, ptr %tuple.addr, align 8, !dbg !3469, !tbaa !1252
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %0, i32 0, i32 1, !dbg !3469
  %1 = load i64, ptr %ob_size, align 8, !dbg !3469, !tbaa !2688
  store i64 %1, ptr %n, align 8, !dbg !3470, !tbaa !1368
  store i64 0, ptr %i, align 8, !dbg !3471, !tbaa !1368
  br label %for.cond, !dbg !3473

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, ptr %i, align 8, !dbg !3474, !tbaa !1368
  %3 = load i64, ptr %n, align 8, !dbg !3476, !tbaa !1368
  %cmp = icmp slt i64 %2, %3, !dbg !3477
  br i1 %cmp, label %for.body, label %for.end, !dbg !3478

for.body:                                         ; preds = %for.cond
  %4 = load ptr, ptr %exc_type.addr, align 8, !dbg !3479, !tbaa !1252
  %5 = load ptr, ptr %tuple.addr, align 8, !dbg !3482, !tbaa !1252
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %5, i32 0, i32 1, !dbg !3482
  %6 = load i64, ptr %i, align 8, !dbg !3482, !tbaa !1368
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %6, !dbg !3482
  %7 = load ptr, ptr %arrayidx, align 8, !dbg !3482, !tbaa !1252
  %cmp1 = icmp eq ptr %4, %7, !dbg !3483
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3484

if.then:                                          ; preds = %for.body
  store i32 1, ptr %retval, align 4, !dbg !3485
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup20, !dbg !3485

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3486

for.inc:                                          ; preds = %if.end
  %8 = load i64, ptr %i, align 8, !dbg !3487, !tbaa !1368
  %inc = add i64 %8, 1, !dbg !3487
  store i64 %inc, ptr %i, align 8, !dbg !3487, !tbaa !1368
  br label %for.cond, !dbg !3488, !llvm.loop !3489

for.end:                                          ; preds = %for.cond
  store i64 0, ptr %i, align 8, !dbg !3491, !tbaa !1368
  br label %for.cond2, !dbg !3492

for.cond2:                                        ; preds = %for.inc17, %for.end
  %9 = load i64, ptr %i, align 8, !dbg !3493, !tbaa !1368
  %10 = load i64, ptr %n, align 8, !dbg !3494, !tbaa !1368
  %cmp3 = icmp slt i64 %9, %10, !dbg !3495
  br i1 %cmp3, label %for.body4, label %for.end19, !dbg !3496

for.body4:                                        ; preds = %for.cond2
  call void @llvm.lifetime.start.p0(i64 8, ptr %t) #8, !dbg !3497
  tail call void @llvm.dbg.declare(metadata ptr %t, metadata !3460, metadata !DIExpression()), !dbg !3498
  %11 = load ptr, ptr %tuple.addr, align 8, !dbg !3499, !tbaa !1252
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %11, i32 0, i32 1, !dbg !3499
  %12 = load i64, ptr %i, align 8, !dbg !3499, !tbaa !1368
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 %12, !dbg !3499
  %13 = load ptr, ptr %arrayidx6, align 8, !dbg !3499, !tbaa !1252
  store ptr %13, ptr %t, align 8, !dbg !3498, !tbaa !1252
  %14 = load ptr, ptr %t, align 8, !dbg !3500, !tbaa !1252
  %call = call i32 @_PyType_Check(ptr noundef %14), !dbg !3500
  %tobool = icmp ne i32 %call, 0, !dbg !3500
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3500

land.rhs:                                         ; preds = %for.body4
  %15 = load ptr, ptr %t, align 8, !dbg !3500, !tbaa !1252
  %call7 = call i32 @PyType_HasFeature(ptr noundef %15, i64 noundef 1073741824), !dbg !3500
  %tobool8 = icmp ne i32 %call7, 0, !dbg !3500
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body4
  %16 = phi i1 [ false, %for.body4 ], [ %tobool8, %land.rhs ], !dbg !3502
  %lnot = xor i1 %16, true, !dbg !3500
  %lnot9 = xor i1 %lnot, true, !dbg !3500
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !3500
  %conv = sext i32 %lnot.ext to i64, !dbg !3500
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3500
  %tobool10 = icmp ne i64 %expval, 0, !dbg !3500
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !3503

if.then11:                                        ; preds = %land.end
  %17 = load ptr, ptr %exc_type.addr, align 8, !dbg !3504, !tbaa !1252
  %18 = load ptr, ptr %t, align 8, !dbg !3507, !tbaa !1252
  %call12 = call i32 @__Pyx_inner_PyErr_GivenExceptionMatches2(ptr noundef %17, ptr noundef null, ptr noundef %18), !dbg !3508
  %tobool13 = icmp ne i32 %call12, 0, !dbg !3508
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !3509

if.then14:                                        ; preds = %if.then11
  store i32 1, ptr %retval, align 4, !dbg !3510
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3510

if.end15:                                         ; preds = %if.then11
  br label %if.end16, !dbg !3511

if.else:                                          ; preds = %land.end
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.end15
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !3512
  br label %cleanup, !dbg !3512

cleanup:                                          ; preds = %if.end16, %if.then14
  call void @llvm.lifetime.end.p0(i64 8, ptr %t) #8, !dbg !3512
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup20 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc17, !dbg !3513

for.inc17:                                        ; preds = %cleanup.cont
  %19 = load i64, ptr %i, align 8, !dbg !3514, !tbaa !1368
  %inc18 = add i64 %19, 1, !dbg !3514
  store i64 %inc18, ptr %i, align 8, !dbg !3514, !tbaa !1368
  br label %for.cond2, !dbg !3515, !llvm.loop !3516

for.end19:                                        ; preds = %for.cond2
  store i32 0, ptr %retval, align 4, !dbg !3518
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup20, !dbg !3518

cleanup20:                                        ; preds = %for.end19, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #8, !dbg !3519
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #8, !dbg !3519
  %20 = load i32, ptr %retval, align 4, !dbg !3519
  ret i32 %20, !dbg !3519
}

declare !dbg !3520 i32 @PyErr_GivenExceptionMatches(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_IsSubtype(ptr noundef %a, ptr noundef %b) #3 !dbg !3521 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca ptr, align 8
  %b.addr = alloca ptr, align 8
  %mro = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !3525, metadata !DIExpression()), !dbg !3532
  store ptr %b, ptr %b.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !3526, metadata !DIExpression()), !dbg !3533
  call void @llvm.lifetime.start.p0(i64 8, ptr %mro) #8, !dbg !3534
  tail call void @llvm.dbg.declare(metadata ptr %mro, metadata !3527, metadata !DIExpression()), !dbg !3535
  %0 = load ptr, ptr %a.addr, align 8, !dbg !3536, !tbaa !1252
  %1 = load ptr, ptr %b.addr, align 8, !dbg !3538, !tbaa !1252
  %cmp = icmp eq ptr %0, %1, !dbg !3539
  br i1 %cmp, label %if.then, label %if.end, !dbg !3540

if.then:                                          ; preds = %entry
  store i32 1, ptr %retval, align 4, !dbg !3541
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup12, !dbg !3541

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %a.addr, align 8, !dbg !3542, !tbaa !1252
  %tp_mro = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 41, !dbg !3543
  %3 = load ptr, ptr %tp_mro, align 8, !dbg !3543, !tbaa !3544
  store ptr %3, ptr %mro, align 8, !dbg !3545, !tbaa !1252
  %4 = load ptr, ptr %mro, align 8, !dbg !3546, !tbaa !1252
  %tobool = icmp ne ptr %4, null, !dbg !3546
  %lnot = xor i1 %tobool, true, !dbg !3546
  %lnot1 = xor i1 %lnot, true, !dbg !3546
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3546
  %conv = sext i32 %lnot.ext to i64, !dbg !3546
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3546
  %tobool2 = icmp ne i64 %expval, 0, !dbg !3546
  br i1 %tobool2, label %if.then3, label %if.end11, !dbg !3547

if.then3:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #8, !dbg !3548
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !3528, metadata !DIExpression()), !dbg !3549
  call void @llvm.lifetime.start.p0(i64 8, ptr %n) #8, !dbg !3548
  tail call void @llvm.dbg.declare(metadata ptr %n, metadata !3531, metadata !DIExpression()), !dbg !3550
  %5 = load ptr, ptr %mro, align 8, !dbg !3551, !tbaa !1252
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %5, i32 0, i32 1, !dbg !3551
  %6 = load i64, ptr %ob_size, align 8, !dbg !3551, !tbaa !2688
  store i64 %6, ptr %n, align 8, !dbg !3552, !tbaa !1368
  store i64 0, ptr %i, align 8, !dbg !3553, !tbaa !1368
  br label %for.cond, !dbg !3555

for.cond:                                         ; preds = %for.inc, %if.then3
  %7 = load i64, ptr %i, align 8, !dbg !3556, !tbaa !1368
  %8 = load i64, ptr %n, align 8, !dbg !3558, !tbaa !1368
  %cmp4 = icmp slt i64 %7, %8, !dbg !3559
  br i1 %cmp4, label %for.body, label %for.end, !dbg !3560

for.body:                                         ; preds = %for.cond
  %9 = load ptr, ptr %mro, align 8, !dbg !3561, !tbaa !1252
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %9, i32 0, i32 1, !dbg !3561
  %10 = load i64, ptr %i, align 8, !dbg !3561, !tbaa !1368
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %10, !dbg !3561
  %11 = load ptr, ptr %arrayidx, align 8, !dbg !3561, !tbaa !1252
  %12 = load ptr, ptr %b.addr, align 8, !dbg !3564, !tbaa !1252
  %cmp6 = icmp eq ptr %11, %12, !dbg !3565
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !3566

if.then8:                                         ; preds = %for.body
  store i32 1, ptr %retval, align 4, !dbg !3567
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3567

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !3568

for.inc:                                          ; preds = %if.end9
  %13 = load i64, ptr %i, align 8, !dbg !3569, !tbaa !1368
  %inc = add i64 %13, 1, !dbg !3569
  store i64 %inc, ptr %i, align 8, !dbg !3569, !tbaa !1368
  br label %for.cond, !dbg !3570, !llvm.loop !3571

for.end:                                          ; preds = %for.cond
  store i32 0, ptr %retval, align 4, !dbg !3573
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3573

cleanup:                                          ; preds = %for.end, %if.then8
  call void @llvm.lifetime.end.p0(i64 8, ptr %n) #8, !dbg !3574
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #8, !dbg !3574
  br label %cleanup12

if.end11:                                         ; preds = %if.end
  %14 = load ptr, ptr %a.addr, align 8, !dbg !3575, !tbaa !1252
  %15 = load ptr, ptr %b.addr, align 8, !dbg !3576, !tbaa !1252
  %call = call i32 @__Pyx_InBases(ptr noundef %14, ptr noundef %15), !dbg !3577
  store i32 %call, ptr %retval, align 4, !dbg !3578
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup12, !dbg !3578

cleanup12:                                        ; preds = %if.end11, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %mro) #8, !dbg !3579
  %16 = load i32, ptr %retval, align 4, !dbg !3579
  ret i32 %16, !dbg !3579
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_InBases(ptr noundef %a, ptr noundef %b) #0 !dbg !3580 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca ptr, align 8
  %b.addr = alloca ptr, align 8
  store ptr %a, ptr %a.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %a.addr, metadata !3582, metadata !DIExpression()), !dbg !3584
  store ptr %b, ptr %b.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !3583, metadata !DIExpression()), !dbg !3585
  br label %while.cond, !dbg !3586

while.cond:                                       ; preds = %if.end, %entry
  %0 = load ptr, ptr %a.addr, align 8, !dbg !3587, !tbaa !1252
  %tobool = icmp ne ptr %0, null, !dbg !3586
  br i1 %tobool, label %while.body, label %while.end, !dbg !3586

while.body:                                       ; preds = %while.cond
  %1 = load ptr, ptr %a.addr, align 8, !dbg !3588, !tbaa !1252
  %tp_base = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 30, !dbg !3590
  %2 = load ptr, ptr %tp_base, align 8, !dbg !3590, !tbaa !3591
  store ptr %2, ptr %a.addr, align 8, !dbg !3592, !tbaa !1252
  %3 = load ptr, ptr %a.addr, align 8, !dbg !3593, !tbaa !1252
  %4 = load ptr, ptr %b.addr, align 8, !dbg !3595, !tbaa !1252
  %cmp = icmp eq ptr %3, %4, !dbg !3596
  br i1 %cmp, label %if.then, label %if.end, !dbg !3597

if.then:                                          ; preds = %while.body
  store i32 1, ptr %retval, align 4, !dbg !3598
  br label %return, !dbg !3598

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !3586, !llvm.loop !3599

while.end:                                        ; preds = %while.cond
  %5 = load ptr, ptr %b.addr, align 8, !dbg !3601, !tbaa !1252
  %cmp1 = icmp eq ptr %5, @PyBaseObject_Type, !dbg !3602
  %conv = zext i1 %cmp1 to i32, !dbg !3602
  store i32 %conv, ptr %retval, align 4, !dbg !3603
  br label %return, !dbg !3603

return:                                           ; preds = %while.end, %if.then
  %6 = load i32, ptr %retval, align 4, !dbg !3604
  ret i32 %6, !dbg !3604
}

declare !dbg !3605 ptr @_PyDict_GetItem_KnownHash(ptr noundef, ptr noundef, i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4__setstate_cython__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v___pyx_state) #0 !dbg !3608 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !3612, metadata !DIExpression()), !dbg !3621
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_state.addr, metadata !3613, metadata !DIExpression()), !dbg !3622
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !3623
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !3614, metadata !DIExpression()), !dbg !3624
  store ptr null, ptr %__pyx_r, align 8, !dbg !3624, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !3625
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !3615, metadata !DIExpression()), !dbg !3626
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3626, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !3627
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !3616, metadata !DIExpression()), !dbg !3628
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !3628, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #8, !dbg !3629
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !3617, metadata !DIExpression()), !dbg !3630
  store ptr null, ptr %__pyx_filename, align 8, !dbg !3630, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !3631
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !3618, metadata !DIExpression()), !dbg !3632
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !3632, !tbaa !1335
  %0 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3633, !tbaa !1252
  %call = call i32 @_Py_IS_TYPE(ptr noundef %0, ptr noundef @PyTuple_Type), !dbg !3633
  %tobool = icmp ne i32 %call, 0, !dbg !3633
  %lnot = xor i1 %tobool, true, !dbg !3633
  %lnot1 = xor i1 %lnot, true, !dbg !3633
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3633
  %conv = sext i32 %lnot.ext to i64, !dbg !3633
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !3633
  %tobool2 = icmp ne i64 %expval, 0, !dbg !3633
  br i1 %tobool2, label %if.end, label %lor.lhs.false, !dbg !3635

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3636, !tbaa !1252
  %cmp = icmp eq ptr %1, @_Py_NoneStruct, !dbg !3637
  br i1 %cmp, label %if.end, label %lor.lhs.false4, !dbg !3638

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %2 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !3639, !tbaa !1252
  %3 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3640, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %3, i32 0, i32 1, !dbg !3640
  %4 = load ptr, ptr %ob_type, align 8, !dbg !3640, !tbaa !2317
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %4, i32 0, i32 1, !dbg !3641
  %5 = load ptr, ptr %tp_name, align 8, !dbg !3641, !tbaa !2547
  %call5 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %2, ptr noundef @.str.30, ptr noundef @.str.31, ptr noundef %5), !dbg !3642
  br i1 false, label %if.end, label %if.then, !dbg !3643

if.then:                                          ; preds = %lor.lhs.false4
  %6 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3644, !tbaa !1252
  store ptr %6, ptr %__pyx_filename, align 8, !dbg !3644, !tbaa !1252
  %7 = load ptr, ptr %__pyx_filename, align 8, !dbg !3644, !tbaa !1252
  store i32 17, ptr %__pyx_lineno, align 4, !dbg !3644, !tbaa !1335
  %8 = load i32, ptr %__pyx_lineno, align 4, !dbg !3644, !tbaa !1335
  store i32 2230, ptr %__pyx_clineno, align 4, !dbg !3644, !tbaa !1335
  %9 = load i32, ptr %__pyx_clineno, align 4, !dbg !3644, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3647

if.end:                                           ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  %10 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !3648, !tbaa !1252
  %11 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3649, !tbaa !1252
  %call6 = call ptr @__pyx_f_6pandas_5_libs_8indexing___pyx_unpickle_NDFrameIndexerBase__set_state(ptr noundef %10, ptr noundef %11), !dbg !3650
  store ptr %call6, ptr %__pyx_t_1, align 8, !dbg !3651, !tbaa !1252
  %12 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3652, !tbaa !1252
  %tobool7 = icmp ne ptr %12, null, !dbg !3652
  %lnot8 = xor i1 %tobool7, true, !dbg !3652
  %lnot10 = xor i1 %lnot8, true, !dbg !3652
  %lnot12 = xor i1 %lnot10, true, !dbg !3652
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !3652
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !3652
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0), !dbg !3652
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !3652
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !3654

if.then17:                                        ; preds = %if.end
  %13 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3655, !tbaa !1252
  store ptr %13, ptr %__pyx_filename, align 8, !dbg !3655, !tbaa !1252
  %14 = load ptr, ptr %__pyx_filename, align 8, !dbg !3655, !tbaa !1252
  store i32 17, ptr %__pyx_lineno, align 4, !dbg !3655, !tbaa !1335
  %15 = load i32, ptr %__pyx_lineno, align 4, !dbg !3655, !tbaa !1335
  store i32 2231, ptr %__pyx_clineno, align 4, !dbg !3655, !tbaa !1335
  %16 = load i32, ptr %__pyx_clineno, align 4, !dbg !3655, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3658

if.end18:                                         ; preds = %if.end
  %17 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3659, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %17), !dbg !3659
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3660, !tbaa !1252
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !dbg !3661, !tbaa !1252
  call void @_Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !3662
  br label %__pyx_L0, !dbg !3663

__pyx_L1_error:                                   ; preds = %if.then17, %if.then
  tail call void @llvm.dbg.label(metadata !3619), !dbg !3664
  %18 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3665, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %18), !dbg !3665
  %19 = load i32, ptr %__pyx_clineno, align 4, !dbg !3666, !tbaa !1335
  %20 = load i32, ptr %__pyx_lineno, align 4, !dbg !3667, !tbaa !1335
  %21 = load ptr, ptr %__pyx_filename, align 8, !dbg !3668, !tbaa !1252
  call void @__Pyx_AddTraceback(ptr noundef @.str.32, i32 noundef %19, i32 noundef %20, ptr noundef %21), !dbg !3669
  store ptr null, ptr %__pyx_r, align 8, !dbg !3670, !tbaa !1252
  br label %__pyx_L0, !dbg !3671

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end18
  tail call void @llvm.dbg.label(metadata !3620), !dbg !3672
  %22 = load ptr, ptr %__pyx_r, align 8, !dbg !3673, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !3674
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #8, !dbg !3674
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !3674
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !3674
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !3674
  ret ptr %22, !dbg !3675
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @_Py_IS_TYPE(ptr noundef %ob, ptr noundef %type) #3 !dbg !3676 {
entry:
  %ob.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  store ptr %ob, ptr %ob.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %ob.addr, metadata !3682, metadata !DIExpression()), !dbg !3684
  store ptr %type, ptr %type.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !3683, metadata !DIExpression()), !dbg !3685
  %0 = load ptr, ptr %ob.addr, align 8, !dbg !3686, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1, !dbg !3687
  %1 = load ptr, ptr %ob_type, align 8, !dbg !3687, !tbaa !2317
  %2 = load ptr, ptr %type.addr, align 8, !dbg !3688, !tbaa !1252
  %cmp = icmp eq ptr %1, %2, !dbg !3689
  %conv = zext i1 %cmp to i32, !dbg !3689
  ret i32 %conv, !dbg !3690
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_f_6pandas_5_libs_8indexing___pyx_unpickle_NDFrameIndexerBase__set_state(ptr noundef %__pyx_v___pyx_result, ptr noundef %__pyx_v___pyx_state) #0 !dbg !3691 {
entry:
  %__pyx_v___pyx_result.addr = alloca ptr, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i64, align 8
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca i32, align 4
  %__pyx_t_5 = alloca i32, align 4
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_t_7 = alloca ptr, align 8
  %__pyx_t_8 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v___pyx_result, ptr %__pyx_v___pyx_result.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_result.addr, metadata !3693, metadata !DIExpression()), !dbg !3719
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_state.addr, metadata !3694, metadata !DIExpression()), !dbg !3720
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !3721
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !3695, metadata !DIExpression()), !dbg !3722
  store ptr null, ptr %__pyx_r, align 8, !dbg !3722, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !3723
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !3696, metadata !DIExpression()), !dbg !3724
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3724, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_2) #8, !dbg !3725
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !3697, metadata !DIExpression()), !dbg !3726
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #8, !dbg !3727
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !3698, metadata !DIExpression()), !dbg !3728
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_4) #8, !dbg !3729
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !3699, metadata !DIExpression()), !dbg !3730
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_5) #8, !dbg !3731
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !3700, metadata !DIExpression()), !dbg !3732
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #8, !dbg !3733
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !3701, metadata !DIExpression()), !dbg !3734
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3734, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_7) #8, !dbg !3735
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_7, metadata !3702, metadata !DIExpression()), !dbg !3736
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !3736, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_8) #8, !dbg !3737
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_8, metadata !3703, metadata !DIExpression()), !dbg !3738
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !3738, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !3739
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !3704, metadata !DIExpression()), !dbg !3740
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !3740, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #8, !dbg !3741
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !3705, metadata !DIExpression()), !dbg !3742
  store ptr null, ptr %__pyx_filename, align 8, !dbg !3742, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !3743
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !3706, metadata !DIExpression()), !dbg !3744
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !3744, !tbaa !1335
  %0 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3745, !tbaa !1252
  %cmp = icmp eq ptr %0, @_Py_NoneStruct, !dbg !3745
  %lnot = xor i1 %cmp, true, !dbg !3745
  %lnot1 = xor i1 %lnot, true, !dbg !3745
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3745
  %conv = sext i32 %lnot.ext to i64, !dbg !3745
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !3745
  %tobool = icmp ne i64 %expval, 0, !dbg !3745
  br i1 %tobool, label %if.then, label %if.end, !dbg !3747

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !3748, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.33), !dbg !3750
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3751, !tbaa !1252
  store ptr %2, ptr %__pyx_filename, align 8, !dbg !3751, !tbaa !1252
  %3 = load ptr, ptr %__pyx_filename, align 8, !dbg !3751, !tbaa !1252
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !3751, !tbaa !1335
  %4 = load i32, ptr %__pyx_lineno, align 4, !dbg !3751, !tbaa !1335
  store i32 2557, ptr %__pyx_clineno, align 4, !dbg !3751, !tbaa !1335
  %5 = load i32, ptr %__pyx_clineno, align 4, !dbg !3751, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3754

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3755, !tbaa !1252
  %call = call ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %6, i64 noundef 0, i32 noundef 0, i32 noundef 1), !dbg !3755
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !3756, !tbaa !1252
  %7 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3757, !tbaa !1252
  %tobool2 = icmp ne ptr %7, null, !dbg !3757
  %lnot3 = xor i1 %tobool2, true, !dbg !3757
  %lnot5 = xor i1 %lnot3, true, !dbg !3757
  %lnot7 = xor i1 %lnot5, true, !dbg !3757
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !3757
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !3757
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !3757
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !3757
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !3759

if.then12:                                        ; preds = %if.end
  %8 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3760, !tbaa !1252
  store ptr %8, ptr %__pyx_filename, align 8, !dbg !3760, !tbaa !1252
  %9 = load ptr, ptr %__pyx_filename, align 8, !dbg !3760, !tbaa !1252
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !3760, !tbaa !1335
  %10 = load i32, ptr %__pyx_lineno, align 4, !dbg !3760, !tbaa !1335
  store i32 2559, ptr %__pyx_clineno, align 4, !dbg !3760, !tbaa !1335
  %11 = load i32, ptr %__pyx_clineno, align 4, !dbg !3760, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3763

if.end13:                                         ; preds = %if.end
  %12 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3764, !tbaa !1252
  %call14 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %12), !dbg !3765
  store i64 %call14, ptr %__pyx_t_2, align 8, !dbg !3766, !tbaa !1368
  %13 = load i64, ptr %__pyx_t_2, align 8, !dbg !3767, !tbaa !1368
  %cmp15 = icmp eq i64 %13, -1, !dbg !3767
  br i1 %cmp15, label %land.rhs, label %land.end, !dbg !3767

land.rhs:                                         ; preds = %if.end13
  %call17 = call ptr @PyErr_Occurred(), !dbg !3767
  %tobool18 = icmp ne ptr %call17, null, !dbg !3767
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end13
  %14 = phi i1 [ false, %if.end13 ], [ %tobool18, %land.rhs ], !dbg !3769
  %lnot19 = xor i1 %14, true, !dbg !3767
  %lnot21 = xor i1 %lnot19, true, !dbg !3767
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !3767
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !3767
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !3767
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !3767
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !3770

if.then26:                                        ; preds = %land.end
  %15 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3771, !tbaa !1252
  store ptr %15, ptr %__pyx_filename, align 8, !dbg !3771, !tbaa !1252
  %16 = load ptr, ptr %__pyx_filename, align 8, !dbg !3771, !tbaa !1252
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !3771, !tbaa !1335
  %17 = load i32, ptr %__pyx_lineno, align 4, !dbg !3771, !tbaa !1335
  store i32 2561, ptr %__pyx_clineno, align 4, !dbg !3771, !tbaa !1335
  %18 = load i32, ptr %__pyx_clineno, align 4, !dbg !3771, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3774

if.end27:                                         ; preds = %land.end
  %19 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3775, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %19), !dbg !3775
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3776, !tbaa !1252
  %20 = load i64, ptr %__pyx_t_2, align 8, !dbg !3777, !tbaa !1368
  %21 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !3778, !tbaa !1252
  %_ndim = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %21, i32 0, i32 1, !dbg !3779
  store i64 %20, ptr %_ndim, align 8, !dbg !3780, !tbaa !2927
  %22 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3781, !tbaa !1252
  %cmp28 = icmp eq ptr %22, @_Py_NoneStruct, !dbg !3781
  %lnot30 = xor i1 %cmp28, true, !dbg !3781
  %lnot32 = xor i1 %lnot30, true, !dbg !3781
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !3781
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !3781
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 0), !dbg !3781
  %tobool36 = icmp ne i64 %expval35, 0, !dbg !3781
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !3783

if.then37:                                        ; preds = %if.end27
  %23 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !3784, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %23, ptr noundef @.str.33), !dbg !3786
  %24 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3787, !tbaa !1252
  store ptr %24, ptr %__pyx_filename, align 8, !dbg !3787, !tbaa !1252
  %25 = load ptr, ptr %__pyx_filename, align 8, !dbg !3787, !tbaa !1252
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !3787, !tbaa !1335
  %26 = load i32, ptr %__pyx_lineno, align 4, !dbg !3787, !tbaa !1335
  store i32 2566, ptr %__pyx_clineno, align 4, !dbg !3787, !tbaa !1335
  %27 = load i32, ptr %__pyx_clineno, align 4, !dbg !3787, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3790

if.end38:                                         ; preds = %if.end27
  %28 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3791, !tbaa !1252
  %call39 = call ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %28, i64 noundef 1, i32 noundef 0, i32 noundef 1), !dbg !3791
  store ptr %call39, ptr %__pyx_t_1, align 8, !dbg !3792, !tbaa !1252
  %29 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3793, !tbaa !1252
  %tobool40 = icmp ne ptr %29, null, !dbg !3793
  %lnot41 = xor i1 %tobool40, true, !dbg !3793
  %lnot43 = xor i1 %lnot41, true, !dbg !3793
  %lnot45 = xor i1 %lnot43, true, !dbg !3793
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !3793
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !3793
  %expval48 = call i64 @llvm.expect.i64(i64 %conv47, i64 0), !dbg !3793
  %tobool49 = icmp ne i64 %expval48, 0, !dbg !3793
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !3795

if.then50:                                        ; preds = %if.end38
  %30 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3796, !tbaa !1252
  store ptr %30, ptr %__pyx_filename, align 8, !dbg !3796, !tbaa !1252
  %31 = load ptr, ptr %__pyx_filename, align 8, !dbg !3796, !tbaa !1252
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !3796, !tbaa !1335
  %32 = load i32, ptr %__pyx_lineno, align 4, !dbg !3796, !tbaa !1335
  store i32 2568, ptr %__pyx_clineno, align 4, !dbg !3796, !tbaa !1335
  %33 = load i32, ptr %__pyx_clineno, align 4, !dbg !3796, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3799

if.end51:                                         ; preds = %if.end38
  %34 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3800, !tbaa !1252
  %call52 = call i32 @_Py_IS_TYPE(ptr noundef %34, ptr noundef @PyUnicode_Type), !dbg !3800
  %tobool53 = icmp ne i32 %call52, 0, !dbg !3800
  %lnot54 = xor i1 %tobool53, true, !dbg !3800
  %lnot56 = xor i1 %lnot54, true, !dbg !3800
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !3800
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !3800
  %expval59 = call i64 @llvm.expect.i64(i64 %conv58, i64 1), !dbg !3800
  %tobool60 = icmp ne i64 %expval59, 0, !dbg !3800
  br i1 %tobool60, label %if.end66, label %lor.lhs.false, !dbg !3802

lor.lhs.false:                                    ; preds = %if.end51
  %35 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3803, !tbaa !1252
  %cmp61 = icmp eq ptr %35, @_Py_NoneStruct, !dbg !3804
  br i1 %cmp61, label %if.end66, label %lor.lhs.false63, !dbg !3805

lor.lhs.false63:                                  ; preds = %lor.lhs.false
  %36 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !3806, !tbaa !1252
  %37 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3807, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %37, i32 0, i32 1, !dbg !3807
  %38 = load ptr, ptr %ob_type, align 8, !dbg !3807, !tbaa !2317
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %38, i32 0, i32 1, !dbg !3808
  %39 = load ptr, ptr %tp_name, align 8, !dbg !3808, !tbaa !2547
  %call64 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %36, ptr noundef @.str.30, ptr noundef @.str.34, ptr noundef %39), !dbg !3809
  br i1 false, label %if.end66, label %if.then65, !dbg !3810

if.then65:                                        ; preds = %lor.lhs.false63
  %40 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3811, !tbaa !1252
  store ptr %40, ptr %__pyx_filename, align 8, !dbg !3811, !tbaa !1252
  %41 = load ptr, ptr %__pyx_filename, align 8, !dbg !3811, !tbaa !1252
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !3811, !tbaa !1335
  %42 = load i32, ptr %__pyx_lineno, align 4, !dbg !3811, !tbaa !1335
  store i32 2570, ptr %__pyx_clineno, align 4, !dbg !3811, !tbaa !1335
  %43 = load i32, ptr %__pyx_clineno, align 4, !dbg !3811, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3814

if.end66:                                         ; preds = %lor.lhs.false63, %lor.lhs.false, %if.end51
  %44 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !3815, !tbaa !1252
  %name = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %44, i32 0, i32 2, !dbg !3815
  %45 = load ptr, ptr %name, align 8, !dbg !3815, !tbaa !2590
  call void @_Py_DECREF(ptr noundef %45), !dbg !3815
  %46 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3816, !tbaa !1252
  %47 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !3817, !tbaa !1252
  %name67 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %47, i32 0, i32 2, !dbg !3818
  store ptr %46, ptr %name67, align 8, !dbg !3819, !tbaa !2590
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3820, !tbaa !1252
  %48 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3821, !tbaa !1252
  %cmp68 = icmp eq ptr %48, @_Py_NoneStruct, !dbg !3821
  %lnot70 = xor i1 %cmp68, true, !dbg !3821
  %lnot72 = xor i1 %lnot70, true, !dbg !3821
  %lnot.ext73 = zext i1 %lnot72 to i32, !dbg !3821
  %conv74 = sext i32 %lnot.ext73 to i64, !dbg !3821
  %expval75 = call i64 @llvm.expect.i64(i64 %conv74, i64 0), !dbg !3821
  %tobool76 = icmp ne i64 %expval75, 0, !dbg !3821
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !3823

if.then77:                                        ; preds = %if.end66
  %49 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !3824, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %49, ptr noundef @.str.33), !dbg !3826
  %50 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3827, !tbaa !1252
  store ptr %50, ptr %__pyx_filename, align 8, !dbg !3827, !tbaa !1252
  %51 = load ptr, ptr %__pyx_filename, align 8, !dbg !3827, !tbaa !1252
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !3827, !tbaa !1335
  %52 = load i32, ptr %__pyx_lineno, align 4, !dbg !3827, !tbaa !1335
  store i32 2578, ptr %__pyx_clineno, align 4, !dbg !3827, !tbaa !1335
  %53 = load i32, ptr %__pyx_clineno, align 4, !dbg !3827, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3830

if.end78:                                         ; preds = %if.end66
  %54 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3831, !tbaa !1252
  %call79 = call ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %54, i64 noundef 2, i32 noundef 0, i32 noundef 1), !dbg !3831
  store ptr %call79, ptr %__pyx_t_1, align 8, !dbg !3832, !tbaa !1252
  %55 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3833, !tbaa !1252
  %tobool80 = icmp ne ptr %55, null, !dbg !3833
  %lnot81 = xor i1 %tobool80, true, !dbg !3833
  %lnot83 = xor i1 %lnot81, true, !dbg !3833
  %lnot85 = xor i1 %lnot83, true, !dbg !3833
  %lnot.ext86 = zext i1 %lnot85 to i32, !dbg !3833
  %conv87 = sext i32 %lnot.ext86 to i64, !dbg !3833
  %expval88 = call i64 @llvm.expect.i64(i64 %conv87, i64 0), !dbg !3833
  %tobool89 = icmp ne i64 %expval88, 0, !dbg !3833
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !3835

if.then90:                                        ; preds = %if.end78
  %56 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3836, !tbaa !1252
  store ptr %56, ptr %__pyx_filename, align 8, !dbg !3836, !tbaa !1252
  %57 = load ptr, ptr %__pyx_filename, align 8, !dbg !3836, !tbaa !1252
  store i32 12, ptr %__pyx_lineno, align 4, !dbg !3836, !tbaa !1335
  %58 = load i32, ptr %__pyx_lineno, align 4, !dbg !3836, !tbaa !1335
  store i32 2580, ptr %__pyx_clineno, align 4, !dbg !3836, !tbaa !1335
  %59 = load i32, ptr %__pyx_clineno, align 4, !dbg !3836, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3839

if.end91:                                         ; preds = %if.end78
  %60 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !3840, !tbaa !1252
  %obj = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %60, i32 0, i32 3, !dbg !3840
  %61 = load ptr, ptr %obj, align 8, !dbg !3840, !tbaa !2598
  call void @_Py_DECREF(ptr noundef %61), !dbg !3840
  %62 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3841, !tbaa !1252
  %63 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !3842, !tbaa !1252
  %obj92 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %63, i32 0, i32 3, !dbg !3843
  store ptr %62, ptr %obj92, align 8, !dbg !3844, !tbaa !2598
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3845, !tbaa !1252
  %64 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3846, !tbaa !1252
  %cmp93 = icmp eq ptr %64, @_Py_NoneStruct, !dbg !3846
  %lnot95 = xor i1 %cmp93, true, !dbg !3846
  %lnot97 = xor i1 %lnot95, true, !dbg !3846
  %lnot.ext98 = zext i1 %lnot97 to i32, !dbg !3846
  %conv99 = sext i32 %lnot.ext98 to i64, !dbg !3846
  %expval100 = call i64 @llvm.expect.i64(i64 %conv99, i64 0), !dbg !3846
  %tobool101 = icmp ne i64 %expval100, 0, !dbg !3846
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !3848

if.then102:                                       ; preds = %if.end91
  %65 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !3849, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %65, ptr noundef @.str.35), !dbg !3851
  %66 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3852, !tbaa !1252
  store ptr %66, ptr %__pyx_filename, align 8, !dbg !3852, !tbaa !1252
  %67 = load ptr, ptr %__pyx_filename, align 8, !dbg !3852, !tbaa !1252
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !3852, !tbaa !1335
  %68 = load i32, ptr %__pyx_lineno, align 4, !dbg !3852, !tbaa !1335
  store i32 2596, ptr %__pyx_clineno, align 4, !dbg !3852, !tbaa !1335
  %69 = load i32, ptr %__pyx_clineno, align 4, !dbg !3852, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3855

if.end103:                                        ; preds = %if.end91
  %70 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3856, !tbaa !1252
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %70, i32 0, i32 1, !dbg !3856
  %71 = load i64, ptr %ob_size, align 8, !dbg !3856, !tbaa !2688
  store i64 %71, ptr %__pyx_t_2, align 8, !dbg !3857, !tbaa !1368
  %72 = load i64, ptr %__pyx_t_2, align 8, !dbg !3858, !tbaa !1368
  %cmp104 = icmp eq i64 %72, -1, !dbg !3858
  %lnot106 = xor i1 %cmp104, true, !dbg !3858
  %lnot108 = xor i1 %lnot106, true, !dbg !3858
  %lnot.ext109 = zext i1 %lnot108 to i32, !dbg !3858
  %conv110 = sext i32 %lnot.ext109 to i64, !dbg !3858
  %expval111 = call i64 @llvm.expect.i64(i64 %conv110, i64 0), !dbg !3858
  %tobool112 = icmp ne i64 %expval111, 0, !dbg !3858
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !3860

if.then113:                                       ; preds = %if.end103
  %73 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3861, !tbaa !1252
  store ptr %73, ptr %__pyx_filename, align 8, !dbg !3861, !tbaa !1252
  %74 = load ptr, ptr %__pyx_filename, align 8, !dbg !3861, !tbaa !1252
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !3861, !tbaa !1335
  %75 = load i32, ptr %__pyx_lineno, align 4, !dbg !3861, !tbaa !1335
  store i32 2598, ptr %__pyx_clineno, align 4, !dbg !3861, !tbaa !1335
  %76 = load i32, ptr %__pyx_clineno, align 4, !dbg !3861, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3864

if.end114:                                        ; preds = %if.end103
  %77 = load i64, ptr %__pyx_t_2, align 8, !dbg !3865, !tbaa !1368
  %cmp115 = icmp sgt i64 %77, 3, !dbg !3866
  %conv116 = zext i1 %cmp115 to i32, !dbg !3866
  %cmp117 = icmp ne i32 %conv116, 0, !dbg !3867
  %conv118 = zext i1 %cmp117 to i32, !dbg !3867
  store i32 %conv118, ptr %__pyx_t_4, align 4, !dbg !3868, !tbaa !1335
  %78 = load i32, ptr %__pyx_t_4, align 4, !dbg !3869, !tbaa !1335
  %tobool119 = icmp ne i32 %78, 0, !dbg !3869
  br i1 %tobool119, label %if.then120, label %if.else, !dbg !3871

if.then120:                                       ; preds = %if.end114
  br label %if.end121, !dbg !3872

if.else:                                          ; preds = %if.end114
  %79 = load i32, ptr %__pyx_t_4, align 4, !dbg !3874, !tbaa !1335
  store i32 %79, ptr %__pyx_t_3, align 4, !dbg !3876, !tbaa !1335
  br label %__pyx_L4_bool_binop_done, !dbg !3877

if.end121:                                        ; preds = %if.then120
  %80 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !3878, !tbaa !1252
  %81 = load ptr, ptr @__pyx_n_s_dict, align 8, !dbg !3879, !tbaa !1252
  %call122 = call i32 @__Pyx_HasAttr(ptr noundef %80, ptr noundef %81), !dbg !3880
  store i32 %call122, ptr %__pyx_t_4, align 4, !dbg !3881, !tbaa !1335
  %82 = load i32, ptr %__pyx_t_4, align 4, !dbg !3882, !tbaa !1335
  %cmp123 = icmp eq i32 %82, -1, !dbg !3882
  %lnot125 = xor i1 %cmp123, true, !dbg !3882
  %lnot127 = xor i1 %lnot125, true, !dbg !3882
  %lnot.ext128 = zext i1 %lnot127 to i32, !dbg !3882
  %conv129 = sext i32 %lnot.ext128 to i64, !dbg !3882
  %expval130 = call i64 @llvm.expect.i64(i64 %conv129, i64 0), !dbg !3882
  %tobool131 = icmp ne i64 %expval130, 0, !dbg !3882
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !3884

if.then132:                                       ; preds = %if.end121
  %83 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3885, !tbaa !1252
  store ptr %83, ptr %__pyx_filename, align 8, !dbg !3885, !tbaa !1252
  %84 = load ptr, ptr %__pyx_filename, align 8, !dbg !3885, !tbaa !1252
  store i32 13, ptr %__pyx_lineno, align 4, !dbg !3885, !tbaa !1335
  %85 = load i32, ptr %__pyx_lineno, align 4, !dbg !3885, !tbaa !1335
  store i32 2605, ptr %__pyx_clineno, align 4, !dbg !3885, !tbaa !1335
  %86 = load i32, ptr %__pyx_clineno, align 4, !dbg !3885, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3888

if.end133:                                        ; preds = %if.end121
  %87 = load i32, ptr %__pyx_t_4, align 4, !dbg !3889, !tbaa !1335
  %cmp134 = icmp ne i32 %87, 0, !dbg !3890
  %conv135 = zext i1 %cmp134 to i32, !dbg !3890
  store i32 %conv135, ptr %__pyx_t_5, align 4, !dbg !3891, !tbaa !1335
  %88 = load i32, ptr %__pyx_t_5, align 4, !dbg !3892, !tbaa !1335
  store i32 %88, ptr %__pyx_t_3, align 4, !dbg !3893, !tbaa !1335
  br label %__pyx_L4_bool_binop_done, !dbg !3894

__pyx_L4_bool_binop_done:                         ; preds = %if.end133, %if.else
  tail call void @llvm.dbg.label(metadata !3707), !dbg !3895
  %89 = load i32, ptr %__pyx_t_3, align 4, !dbg !3896, !tbaa !1335
  %tobool136 = icmp ne i32 %89, 0, !dbg !3896
  br i1 %tobool136, label %if.then137, label %if.end224, !dbg !3897

if.then137:                                       ; preds = %__pyx_L4_bool_binop_done
  %90 = load ptr, ptr %__pyx_v___pyx_result.addr, align 8, !dbg !3898, !tbaa !1252
  %91 = load ptr, ptr @__pyx_n_s_dict, align 8, !dbg !3899, !tbaa !1252
  %call138 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %90, ptr noundef %91), !dbg !3900
  store ptr %call138, ptr %__pyx_t_6, align 8, !dbg !3901, !tbaa !1252
  %92 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3902, !tbaa !1252
  %tobool139 = icmp ne ptr %92, null, !dbg !3902
  %lnot140 = xor i1 %tobool139, true, !dbg !3902
  %lnot142 = xor i1 %lnot140, true, !dbg !3902
  %lnot144 = xor i1 %lnot142, true, !dbg !3902
  %lnot.ext145 = zext i1 %lnot144 to i32, !dbg !3902
  %conv146 = sext i32 %lnot.ext145 to i64, !dbg !3902
  %expval147 = call i64 @llvm.expect.i64(i64 %conv146, i64 0), !dbg !3902
  %tobool148 = icmp ne i64 %expval147, 0, !dbg !3902
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !3904

if.then149:                                       ; preds = %if.then137
  %93 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3905, !tbaa !1252
  store ptr %93, ptr %__pyx_filename, align 8, !dbg !3905, !tbaa !1252
  %94 = load ptr, ptr %__pyx_filename, align 8, !dbg !3905, !tbaa !1252
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !3905, !tbaa !1335
  %95 = load i32, ptr %__pyx_lineno, align 4, !dbg !3905, !tbaa !1335
  store i32 2616, ptr %__pyx_clineno, align 4, !dbg !3905, !tbaa !1335
  %96 = load i32, ptr %__pyx_clineno, align 4, !dbg !3905, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3908

if.end150:                                        ; preds = %if.then137
  %97 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3909, !tbaa !1252
  %98 = load ptr, ptr @__pyx_n_s_update, align 8, !dbg !3910, !tbaa !1252
  %call151 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %97, ptr noundef %98), !dbg !3911
  store ptr %call151, ptr %__pyx_t_7, align 8, !dbg !3912, !tbaa !1252
  %99 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3913, !tbaa !1252
  %tobool152 = icmp ne ptr %99, null, !dbg !3913
  %lnot153 = xor i1 %tobool152, true, !dbg !3913
  %lnot155 = xor i1 %lnot153, true, !dbg !3913
  %lnot157 = xor i1 %lnot155, true, !dbg !3913
  %lnot.ext158 = zext i1 %lnot157 to i32, !dbg !3913
  %conv159 = sext i32 %lnot.ext158 to i64, !dbg !3913
  %expval160 = call i64 @llvm.expect.i64(i64 %conv159, i64 0), !dbg !3913
  %tobool161 = icmp ne i64 %expval160, 0, !dbg !3913
  br i1 %tobool161, label %if.then162, label %if.end163, !dbg !3915

if.then162:                                       ; preds = %if.end150
  %100 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3916, !tbaa !1252
  store ptr %100, ptr %__pyx_filename, align 8, !dbg !3916, !tbaa !1252
  %101 = load ptr, ptr %__pyx_filename, align 8, !dbg !3916, !tbaa !1252
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !3916, !tbaa !1335
  %102 = load i32, ptr %__pyx_lineno, align 4, !dbg !3916, !tbaa !1335
  store i32 2618, ptr %__pyx_clineno, align 4, !dbg !3916, !tbaa !1335
  %103 = load i32, ptr %__pyx_clineno, align 4, !dbg !3916, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3919

if.end163:                                        ; preds = %if.end150
  %104 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3920, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %104), !dbg !3920
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3921, !tbaa !1252
  %105 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3922, !tbaa !1252
  %cmp164 = icmp eq ptr %105, @_Py_NoneStruct, !dbg !3922
  %lnot166 = xor i1 %cmp164, true, !dbg !3922
  %lnot168 = xor i1 %lnot166, true, !dbg !3922
  %lnot.ext169 = zext i1 %lnot168 to i32, !dbg !3922
  %conv170 = sext i32 %lnot.ext169 to i64, !dbg !3922
  %expval171 = call i64 @llvm.expect.i64(i64 %conv170, i64 0), !dbg !3922
  %tobool172 = icmp ne i64 %expval171, 0, !dbg !3922
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !3924

if.then173:                                       ; preds = %if.end163
  %106 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !3925, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %106, ptr noundef @.str.33), !dbg !3927
  %107 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3928, !tbaa !1252
  store ptr %107, ptr %__pyx_filename, align 8, !dbg !3928, !tbaa !1252
  %108 = load ptr, ptr %__pyx_filename, align 8, !dbg !3928, !tbaa !1252
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !3928, !tbaa !1335
  %109 = load i32, ptr %__pyx_lineno, align 4, !dbg !3928, !tbaa !1335
  store i32 2623, ptr %__pyx_clineno, align 4, !dbg !3928, !tbaa !1335
  %110 = load i32, ptr %__pyx_clineno, align 4, !dbg !3928, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3931

if.end174:                                        ; preds = %if.end163
  %111 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !3932, !tbaa !1252
  %call175 = call ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %111, i64 noundef 3, i32 noundef 0, i32 noundef 1), !dbg !3932
  store ptr %call175, ptr %__pyx_t_6, align 8, !dbg !3933, !tbaa !1252
  %112 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3934, !tbaa !1252
  %tobool176 = icmp ne ptr %112, null, !dbg !3934
  %lnot177 = xor i1 %tobool176, true, !dbg !3934
  %lnot179 = xor i1 %lnot177, true, !dbg !3934
  %lnot181 = xor i1 %lnot179, true, !dbg !3934
  %lnot.ext182 = zext i1 %lnot181 to i32, !dbg !3934
  %conv183 = sext i32 %lnot.ext182 to i64, !dbg !3934
  %expval184 = call i64 @llvm.expect.i64(i64 %conv183, i64 0), !dbg !3934
  %tobool185 = icmp ne i64 %expval184, 0, !dbg !3934
  br i1 %tobool185, label %if.then186, label %if.end187, !dbg !3936

if.then186:                                       ; preds = %if.end174
  %113 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3937, !tbaa !1252
  store ptr %113, ptr %__pyx_filename, align 8, !dbg !3937, !tbaa !1252
  %114 = load ptr, ptr %__pyx_filename, align 8, !dbg !3937, !tbaa !1252
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !3937, !tbaa !1335
  %115 = load i32, ptr %__pyx_lineno, align 4, !dbg !3937, !tbaa !1335
  store i32 2625, ptr %__pyx_clineno, align 4, !dbg !3937, !tbaa !1335
  %116 = load i32, ptr %__pyx_clineno, align 4, !dbg !3937, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3940

if.end187:                                        ; preds = %if.end174
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !3941, !tbaa !1252
  %117 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3942, !tbaa !1252
  %call188 = call i32 @_Py_IS_TYPE(ptr noundef %117, ptr noundef @PyMethod_Type), !dbg !3942
  %tobool189 = icmp ne i32 %call188, 0, !dbg !3942
  %lnot190 = xor i1 %tobool189, true, !dbg !3942
  %lnot192 = xor i1 %lnot190, true, !dbg !3942
  %lnot.ext193 = zext i1 %lnot192 to i32, !dbg !3942
  %conv194 = sext i32 %lnot.ext193 to i64, !dbg !3942
  %expval195 = call i64 @llvm.expect.i64(i64 %conv194, i64 1), !dbg !3942
  %tobool196 = icmp ne i64 %expval195, 0, !dbg !3942
  br i1 %tobool196, label %if.then197, label %if.end208, !dbg !3943

if.then197:                                       ; preds = %if.end187
  %118 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3944, !tbaa !1252
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %118, i32 0, i32 2, !dbg !3944
  %119 = load ptr, ptr %im_self, align 8, !dbg !3944, !tbaa !3945
  store ptr %119, ptr %__pyx_t_8, align 8, !dbg !3947, !tbaa !1252
  %120 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3948, !tbaa !1252
  %tobool198 = icmp ne ptr %120, null, !dbg !3948
  %lnot199 = xor i1 %tobool198, true, !dbg !3948
  %lnot201 = xor i1 %lnot199, true, !dbg !3948
  %lnot.ext202 = zext i1 %lnot201 to i32, !dbg !3948
  %conv203 = sext i32 %lnot.ext202 to i64, !dbg !3948
  %expval204 = call i64 @llvm.expect.i64(i64 %conv203, i64 1), !dbg !3948
  %tobool205 = icmp ne i64 %expval204, 0, !dbg !3948
  br i1 %tobool205, label %if.then206, label %if.end207, !dbg !3949

if.then206:                                       ; preds = %if.then197
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #8, !dbg !3950
  tail call void @llvm.dbg.declare(metadata ptr %function, metadata !3708, metadata !DIExpression()), !dbg !3951
  %121 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3952, !tbaa !1252
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %121, i32 0, i32 1, !dbg !3952
  %122 = load ptr, ptr %im_func, align 8, !dbg !3952, !tbaa !3953
  store ptr %122, ptr %function, align 8, !dbg !3951, !tbaa !1252
  %123 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3954, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %123), !dbg !3954
  %124 = load ptr, ptr %function, align 8, !dbg !3955, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %124), !dbg !3955
  br label %do.body, !dbg !3956

do.body:                                          ; preds = %if.then206
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !3957
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !3715, metadata !DIExpression()), !dbg !3957
  %125 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3957, !tbaa !1252
  store ptr %125, ptr %tmp, align 8, !dbg !3957, !tbaa !1252
  %126 = load ptr, ptr %function, align 8, !dbg !3957, !tbaa !1252
  store ptr %126, ptr %__pyx_t_7, align 8, !dbg !3957, !tbaa !1252
  %127 = load ptr, ptr %tmp, align 8, !dbg !3957, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %127), !dbg !3957
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !3956
  br label %do.cond, !dbg !3957

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !3957

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #8, !dbg !3958
  br label %if.end207, !dbg !3959

if.end207:                                        ; preds = %do.end, %if.then197
  br label %if.end208, !dbg !3960

if.end208:                                        ; preds = %if.end207, %if.end187
  %128 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3961, !tbaa !1252
  %tobool209 = icmp ne ptr %128, null, !dbg !3962
  br i1 %tobool209, label %cond.true, label %cond.false, !dbg !3962

cond.true:                                        ; preds = %if.end208
  %129 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3963, !tbaa !1252
  %130 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3964, !tbaa !1252
  %131 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3965, !tbaa !1252
  %call210 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %129, ptr noundef %130, ptr noundef %131), !dbg !3966
  br label %cond.end, !dbg !3962

cond.false:                                       ; preds = %if.end208
  %132 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3967, !tbaa !1252
  %133 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3968, !tbaa !1252
  %call211 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %132, ptr noundef %133), !dbg !3969
  br label %cond.end, !dbg !3962

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call210, %cond.true ], [ %call211, %cond.false ], !dbg !3962
  store ptr %cond, ptr %__pyx_t_1, align 8, !dbg !3970, !tbaa !1252
  %134 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3971, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %134), !dbg !3971
  store ptr null, ptr %__pyx_t_8, align 8, !dbg !3972, !tbaa !1252
  %135 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3973, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %135), !dbg !3973
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !3974, !tbaa !1252
  %136 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3975, !tbaa !1252
  %tobool212 = icmp ne ptr %136, null, !dbg !3975
  %lnot213 = xor i1 %tobool212, true, !dbg !3975
  %lnot215 = xor i1 %lnot213, true, !dbg !3975
  %lnot217 = xor i1 %lnot215, true, !dbg !3975
  %lnot.ext218 = zext i1 %lnot217 to i32, !dbg !3975
  %conv219 = sext i32 %lnot.ext218 to i64, !dbg !3975
  %expval220 = call i64 @llvm.expect.i64(i64 %conv219, i64 0), !dbg !3975
  %tobool221 = icmp ne i64 %expval220, 0, !dbg !3975
  br i1 %tobool221, label %if.then222, label %if.end223, !dbg !3977

if.then222:                                       ; preds = %cond.end
  %137 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !3978, !tbaa !1252
  store ptr %137, ptr %__pyx_filename, align 8, !dbg !3978, !tbaa !1252
  %138 = load ptr, ptr %__pyx_filename, align 8, !dbg !3978, !tbaa !1252
  store i32 14, ptr %__pyx_lineno, align 4, !dbg !3978, !tbaa !1335
  %139 = load i32, ptr %__pyx_lineno, align 4, !dbg !3978, !tbaa !1335
  store i32 2640, ptr %__pyx_clineno, align 4, !dbg !3978, !tbaa !1335
  %140 = load i32, ptr %__pyx_clineno, align 4, !dbg !3978, !tbaa !1335
  br label %__pyx_L1_error, !dbg !3981

if.end223:                                        ; preds = %cond.end
  %141 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3982, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %141), !dbg !3982
  store ptr null, ptr %__pyx_t_7, align 8, !dbg !3983, !tbaa !1252
  %142 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3984, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %142), !dbg !3984
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !3985, !tbaa !1252
  br label %if.end224, !dbg !3986

if.end224:                                        ; preds = %if.end223, %__pyx_L4_bool_binop_done
  store ptr @_Py_NoneStruct, ptr %__pyx_r, align 8, !dbg !3987, !tbaa !1252
  call void @_Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !3988
  br label %__pyx_L0, !dbg !3989

__pyx_L1_error:                                   ; preds = %if.then222, %if.then186, %if.then173, %if.then162, %if.then149, %if.then132, %if.then113, %if.then102, %if.then90, %if.then77, %if.then65, %if.then50, %if.then37, %if.then26, %if.then12, %if.then
  tail call void @llvm.dbg.label(metadata !3717), !dbg !3990
  %143 = load ptr, ptr %__pyx_t_1, align 8, !dbg !3991, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %143), !dbg !3991
  %144 = load ptr, ptr %__pyx_t_6, align 8, !dbg !3992, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %144), !dbg !3992
  %145 = load ptr, ptr %__pyx_t_7, align 8, !dbg !3993, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %145), !dbg !3993
  %146 = load ptr, ptr %__pyx_t_8, align 8, !dbg !3994, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %146), !dbg !3994
  %147 = load i32, ptr %__pyx_clineno, align 4, !dbg !3995, !tbaa !1335
  %148 = load i32, ptr %__pyx_lineno, align 4, !dbg !3996, !tbaa !1335
  %149 = load ptr, ptr %__pyx_filename, align 8, !dbg !3997, !tbaa !1252
  call void @__Pyx_AddTraceback(ptr noundef @.str.36, i32 noundef %147, i32 noundef %148, ptr noundef %149), !dbg !3998
  store ptr null, ptr %__pyx_r, align 8, !dbg !3999, !tbaa !1252
  br label %__pyx_L0, !dbg !4000

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end224
  tail call void @llvm.dbg.label(metadata !3718), !dbg !4001
  %150 = load ptr, ptr %__pyx_r, align 8, !dbg !4002, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !4003
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #8, !dbg !4003
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !4003
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_8) #8, !dbg !4003
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_7) #8, !dbg !4003
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #8, !dbg !4003
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_5) #8, !dbg !4003
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_4) #8, !dbg !4003
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #8, !dbg !4003
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_2) #8, !dbg !4003
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !4003
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !4003
  ret ptr %150, !dbg !4004
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_GetItemInt_Tuple_Fast(ptr noundef %o, i64 noundef %i, i32 noundef %wraparound, i32 noundef %boundscheck) #3 !dbg !4005 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %i.addr = alloca i64, align 8
  %wraparound.addr = alloca i32, align 4
  %boundscheck.addr = alloca i32, align 4
  %wrapped_i = alloca i64, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !4009, metadata !DIExpression()), !dbg !4017
  store i64 %i, ptr %i.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %i.addr, metadata !4010, metadata !DIExpression()), !dbg !4018
  store i32 %wraparound, ptr %wraparound.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %wraparound.addr, metadata !4011, metadata !DIExpression()), !dbg !4019
  store i32 %boundscheck, ptr %boundscheck.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %boundscheck.addr, metadata !4012, metadata !DIExpression()), !dbg !4020
  call void @llvm.lifetime.start.p0(i64 8, ptr %wrapped_i) #8, !dbg !4021
  tail call void @llvm.dbg.declare(metadata ptr %wrapped_i, metadata !4013, metadata !DIExpression()), !dbg !4022
  %0 = load i64, ptr %i.addr, align 8, !dbg !4023, !tbaa !1368
  store i64 %0, ptr %wrapped_i, align 8, !dbg !4022, !tbaa !1368
  %1 = load i32, ptr %wraparound.addr, align 4, !dbg !4024, !tbaa !1335
  %conv = sext i32 %1 to i64, !dbg !4024
  %2 = load i64, ptr %i.addr, align 8, !dbg !4026, !tbaa !1368
  %cmp = icmp slt i64 %2, 0, !dbg !4026
  %lnot = xor i1 %cmp, true, !dbg !4026
  %lnot2 = xor i1 %lnot, true, !dbg !4026
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4026
  %conv3 = sext i32 %lnot.ext to i64, !dbg !4026
  %expval = call i64 @llvm.expect.i64(i64 %conv3, i64 0), !dbg !4026
  %and = and i64 %conv, %expval, !dbg !4027
  %tobool = icmp ne i64 %and, 0, !dbg !4027
  br i1 %tobool, label %if.then, label %if.end, !dbg !4028

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %o.addr, align 8, !dbg !4029, !tbaa !1252
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %3, i32 0, i32 1, !dbg !4029
  %4 = load i64, ptr %ob_size, align 8, !dbg !4029, !tbaa !2688
  %5 = load i64, ptr %wrapped_i, align 8, !dbg !4031, !tbaa !1368
  %add = add i64 %5, %4, !dbg !4031
  store i64 %add, ptr %wrapped_i, align 8, !dbg !4031, !tbaa !1368
  br label %if.end, !dbg !4032

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, ptr %boundscheck.addr, align 4, !dbg !4033, !tbaa !1335
  %tobool4 = icmp ne i32 %6, 0, !dbg !4033
  br i1 %tobool4, label %lor.lhs.false, label %if.then14, !dbg !4034

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i64, ptr %wrapped_i, align 8, !dbg !4035, !tbaa !1368
  %8 = load ptr, ptr %o.addr, align 8, !dbg !4035, !tbaa !1252
  %ob_size5 = getelementptr inbounds %struct.PyVarObject, ptr %8, i32 0, i32 1, !dbg !4035
  %9 = load i64, ptr %ob_size5, align 8, !dbg !4035, !tbaa !2688
  %call = call i32 @__Pyx_is_valid_index(i64 noundef %7, i64 noundef %9), !dbg !4035
  %tobool6 = icmp ne i32 %call, 0, !dbg !4035
  %lnot7 = xor i1 %tobool6, true, !dbg !4035
  %lnot9 = xor i1 %lnot7, true, !dbg !4035
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !4035
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !4035
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 1), !dbg !4035
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !4035
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !4036

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #8, !dbg !4037
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !4014, metadata !DIExpression()), !dbg !4038
  %10 = load ptr, ptr %o.addr, align 8, !dbg !4039, !tbaa !1252
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %10, i32 0, i32 1, !dbg !4039
  %11 = load i64, ptr %wrapped_i, align 8, !dbg !4039, !tbaa !1368
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 %11, !dbg !4039
  %12 = load ptr, ptr %arrayidx, align 8, !dbg !4039, !tbaa !1252
  store ptr %12, ptr %r, align 8, !dbg !4038, !tbaa !1252
  %13 = load ptr, ptr %r, align 8, !dbg !4040, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %13), !dbg !4040
  %14 = load ptr, ptr %r, align 8, !dbg !4041, !tbaa !1252
  store ptr %14, ptr %retval, align 8, !dbg !4042
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #8, !dbg !4043
  br label %cleanup

if.end15:                                         ; preds = %lor.lhs.false
  %15 = load ptr, ptr %o.addr, align 8, !dbg !4044, !tbaa !1252
  %16 = load i64, ptr %i.addr, align 8, !dbg !4045, !tbaa !1368
  %call16 = call ptr @PyLong_FromSsize_t(i64 noundef %16), !dbg !4046
  %call17 = call ptr @__Pyx_GetItemInt_Generic(ptr noundef %15, ptr noundef %call16), !dbg !4047
  store ptr %call17, ptr %retval, align 8, !dbg !4048
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4048

cleanup:                                          ; preds = %if.end15, %if.then14
  call void @llvm.lifetime.end.p0(i64 8, ptr %wrapped_i) #8, !dbg !4049
  %17 = load ptr, ptr %retval, align 8, !dbg !4049
  ret ptr %17, !dbg !4049
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %b) #3 !dbg !4050 {
entry:
  %retval = alloca i64, align 8
  %b.addr = alloca ptr, align 8
  %ival = alloca i64, align 8
  %x = alloca ptr, align 8
  %digits = alloca ptr, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %b, ptr %b.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %b.addr, metadata !4052, metadata !DIExpression()), !dbg !4061
  call void @llvm.lifetime.start.p0(i64 8, ptr %ival) #8, !dbg !4062
  tail call void @llvm.dbg.declare(metadata ptr %ival, metadata !4053, metadata !DIExpression()), !dbg !4063
  call void @llvm.lifetime.start.p0(i64 8, ptr %x) #8, !dbg !4064
  tail call void @llvm.dbg.declare(metadata ptr %x, metadata !4054, metadata !DIExpression()), !dbg !4065
  %0 = load ptr, ptr %b.addr, align 8, !dbg !4066, !tbaa !1252
  %call = call i32 @_Py_IS_TYPE(ptr noundef %0, ptr noundef @PyLong_Type), !dbg !4066
  %tobool = icmp ne i32 %call, 0, !dbg !4066
  %lnot = xor i1 %tobool, true, !dbg !4066
  %lnot1 = xor i1 %lnot, true, !dbg !4066
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4066
  %conv = sext i32 %lnot.ext to i64, !dbg !4066
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4066
  %tobool2 = icmp ne i64 %expval, 0, !dbg !4066
  br i1 %tobool2, label %if.then, label %if.end43, !dbg !4067

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %digits) #8, !dbg !4068
  tail call void @llvm.dbg.declare(metadata ptr %digits, metadata !4055, metadata !DIExpression()), !dbg !4069
  %1 = load ptr, ptr %b.addr, align 8, !dbg !4070, !tbaa !1252
  %ob_digit = getelementptr inbounds %struct._longobject, ptr %1, i32 0, i32 1, !dbg !4071
  %arraydecay = getelementptr inbounds [1 x i32], ptr %ob_digit, i64 0, i64 0, !dbg !4072
  store ptr %arraydecay, ptr %digits, align 8, !dbg !4069, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #8, !dbg !4073
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !4060, metadata !DIExpression()), !dbg !4074
  %2 = load ptr, ptr %b.addr, align 8, !dbg !4075, !tbaa !1252
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %2, i32 0, i32 1, !dbg !4075
  %3 = load i64, ptr %ob_size, align 8, !dbg !4075, !tbaa !2688
  store i64 %3, ptr %size, align 8, !dbg !4074, !tbaa !1368
  %4 = load i64, ptr %size, align 8, !dbg !4076, !tbaa !1368
  %neg = sub i64 0, %4, !dbg !4076
  %abscond = icmp slt i64 %4, 0, !dbg !4076
  %abs = select i1 %abscond, i64 %neg, i64 %4, !dbg !4076
  %cmp = icmp sle i64 %abs, 1, !dbg !4076
  %lnot4 = xor i1 %cmp, true, !dbg !4076
  %lnot6 = xor i1 %lnot4, true, !dbg !4076
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !4076
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !4076
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 1), !dbg !4076
  %tobool10 = icmp ne i64 %expval9, 0, !dbg !4076
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !4078

if.then11:                                        ; preds = %if.then
  %5 = load i64, ptr %size, align 8, !dbg !4079, !tbaa !1368
  %tobool12 = icmp ne i64 %5, 0, !dbg !4079
  %lnot13 = xor i1 %tobool12, true, !dbg !4079
  %lnot15 = xor i1 %lnot13, true, !dbg !4079
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !4079
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !4079
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 1), !dbg !4079
  %tobool19 = icmp ne i64 %expval18, 0, !dbg !4079
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !4079

cond.true:                                        ; preds = %if.then11
  %6 = load ptr, ptr %digits, align 8, !dbg !4081, !tbaa !1252
  %arrayidx = getelementptr i32, ptr %6, i64 0, !dbg !4081
  %7 = load i32, ptr %arrayidx, align 4, !dbg !4081, !tbaa !1335
  br label %cond.end, !dbg !4079

cond.false:                                       ; preds = %if.then11
  br label %cond.end, !dbg !4079

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ 0, %cond.false ], !dbg !4079
  %conv20 = zext i32 %cond to i64, !dbg !4079
  store i64 %conv20, ptr %ival, align 8, !dbg !4082, !tbaa !1368
  %8 = load i64, ptr %size, align 8, !dbg !4083, !tbaa !1368
  %cmp21 = icmp eq i64 %8, -1, !dbg !4085
  br i1 %cmp21, label %if.then23, label %if.end, !dbg !4086

if.then23:                                        ; preds = %cond.end
  %9 = load i64, ptr %ival, align 8, !dbg !4087, !tbaa !1368
  %sub = sub i64 0, %9, !dbg !4088
  store i64 %sub, ptr %ival, align 8, !dbg !4089, !tbaa !1368
  br label %if.end, !dbg !4090

if.end:                                           ; preds = %if.then23, %cond.end
  %10 = load i64, ptr %ival, align 8, !dbg !4091, !tbaa !1368
  store i64 %10, ptr %retval, align 8, !dbg !4092
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4092

if.else:                                          ; preds = %if.then
  %11 = load i64, ptr %size, align 8, !dbg !4093, !tbaa !1368
  switch i64 %11, label %sw.epilog [
    i64 2, label %sw.bb
    i64 -2, label %sw.bb28
    i64 3, label %sw.bb36
    i64 -3, label %sw.bb37
    i64 4, label %sw.bb38
    i64 -4, label %sw.bb39
  ], !dbg !4095

sw.bb:                                            ; preds = %if.else
  %12 = load ptr, ptr %digits, align 8, !dbg !4096, !tbaa !1252
  %arrayidx24 = getelementptr i32, ptr %12, i64 1, !dbg !4096
  %13 = load i32, ptr %arrayidx24, align 4, !dbg !4096, !tbaa !1335
  %conv25 = zext i32 %13 to i64, !dbg !4100
  %shl = shl i64 %conv25, 30, !dbg !4101
  %14 = load ptr, ptr %digits, align 8, !dbg !4102, !tbaa !1252
  %arrayidx26 = getelementptr i32, ptr %14, i64 0, !dbg !4102
  %15 = load i32, ptr %arrayidx26, align 4, !dbg !4102, !tbaa !1335
  %conv27 = zext i32 %15 to i64, !dbg !4103
  %or = or i64 %shl, %conv27, !dbg !4104
  store i64 %or, ptr %retval, align 8, !dbg !4105
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4105

sw.bb28:                                          ; preds = %if.else
  %16 = load ptr, ptr %digits, align 8, !dbg !4106, !tbaa !1252
  %arrayidx29 = getelementptr i32, ptr %16, i64 1, !dbg !4106
  %17 = load i32, ptr %arrayidx29, align 4, !dbg !4106, !tbaa !1335
  %conv30 = zext i32 %17 to i64, !dbg !4109
  %shl31 = shl i64 %conv30, 30, !dbg !4110
  %18 = load ptr, ptr %digits, align 8, !dbg !4111, !tbaa !1252
  %arrayidx32 = getelementptr i32, ptr %18, i64 0, !dbg !4111
  %19 = load i32, ptr %arrayidx32, align 4, !dbg !4111, !tbaa !1335
  %conv33 = zext i32 %19 to i64, !dbg !4112
  %or34 = or i64 %shl31, %conv33, !dbg !4113
  %sub35 = sub i64 0, %or34, !dbg !4114
  store i64 %sub35, ptr %retval, align 8, !dbg !4115
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4115

sw.bb36:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !4116

sw.bb37:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !4117

sw.bb38:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !4118

sw.bb39:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !4119

sw.epilog:                                        ; preds = %if.else, %sw.bb39, %sw.bb38, %sw.bb37, %sw.bb36
  br label %if.end40

if.end40:                                         ; preds = %sw.epilog
  %20 = load ptr, ptr %b.addr, align 8, !dbg !4120, !tbaa !1252
  %call41 = call i64 @PyLong_AsSsize_t(ptr noundef %20), !dbg !4121
  store i64 %call41, ptr %retval, align 8, !dbg !4122
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4122

cleanup:                                          ; preds = %if.end40, %sw.bb28, %sw.bb, %if.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #8, !dbg !4123
  call void @llvm.lifetime.end.p0(i64 8, ptr %digits) #8, !dbg !4123
  br label %cleanup49

if.end43:                                         ; preds = %entry
  %21 = load ptr, ptr %b.addr, align 8, !dbg !4124, !tbaa !1252
  %call44 = call ptr @PyNumber_Index(ptr noundef %21), !dbg !4125
  store ptr %call44, ptr %x, align 8, !dbg !4126, !tbaa !1252
  %22 = load ptr, ptr %x, align 8, !dbg !4127, !tbaa !1252
  %tobool45 = icmp ne ptr %22, null, !dbg !4127
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !4129

if.then46:                                        ; preds = %if.end43
  store i64 -1, ptr %retval, align 8, !dbg !4130
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup49, !dbg !4130

if.end47:                                         ; preds = %if.end43
  %23 = load ptr, ptr %x, align 8, !dbg !4131, !tbaa !1252
  %call48 = call i64 @PyLong_AsSsize_t(ptr noundef %23), !dbg !4132
  store i64 %call48, ptr %ival, align 8, !dbg !4133, !tbaa !1368
  %24 = load ptr, ptr %x, align 8, !dbg !4134, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %24), !dbg !4134
  %25 = load i64, ptr %ival, align 8, !dbg !4135, !tbaa !1368
  store i64 %25, ptr %retval, align 8, !dbg !4136
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup49, !dbg !4136

cleanup49:                                        ; preds = %if.end47, %if.then46, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %x) #8, !dbg !4137
  call void @llvm.lifetime.end.p0(i64 8, ptr %ival) #8, !dbg !4137
  %26 = load i64, ptr %retval, align 8, !dbg !4137
  ret i64 %26, !dbg !4137
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_HasAttr(ptr noundef %o, ptr noundef %n) #3 !dbg !4138 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %n.addr = alloca ptr, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !4140, metadata !DIExpression()), !dbg !4143
  store ptr %n, ptr %n.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %n.addr, metadata !4141, metadata !DIExpression()), !dbg !4144
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #8, !dbg !4145
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !4142, metadata !DIExpression()), !dbg !4146
  %0 = load ptr, ptr %n.addr, align 8, !dbg !4147, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1, !dbg !4147
  %1 = load ptr, ptr %ob_type, align 8, !dbg !4147, !tbaa !2317
  %call = call i32 @PyType_HasFeature(ptr noundef %1, i64 noundef 268435456), !dbg !4147
  %tobool = icmp ne i32 %call, 0, !dbg !4147
  %lnot = xor i1 %tobool, true, !dbg !4147
  %lnot1 = xor i1 %lnot, true, !dbg !4147
  %lnot2 = xor i1 %lnot1, true, !dbg !4147
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4147
  %conv = sext i32 %lnot.ext to i64, !dbg !4147
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4147
  %tobool3 = icmp ne i64 %expval, 0, !dbg !4147
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4149

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !4150, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %2, ptr noundef @.str.37), !dbg !4152
  store i32 -1, ptr %retval, align 4, !dbg !4153
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4153

if.end:                                           ; preds = %entry
  %3 = load ptr, ptr %o.addr, align 8, !dbg !4154, !tbaa !1252
  %4 = load ptr, ptr %n.addr, align 8, !dbg !4155, !tbaa !1252
  %call4 = call ptr @__Pyx_GetAttr(ptr noundef %3, ptr noundef %4), !dbg !4156
  store ptr %call4, ptr %r, align 8, !dbg !4157, !tbaa !1252
  %5 = load ptr, ptr %r, align 8, !dbg !4158, !tbaa !1252
  %tobool5 = icmp ne ptr %5, null, !dbg !4158
  %lnot6 = xor i1 %tobool5, true, !dbg !4158
  %lnot8 = xor i1 %lnot6, true, !dbg !4158
  %lnot10 = xor i1 %lnot8, true, !dbg !4158
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !4158
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !4158
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !4158
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !4158
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !4160

if.then15:                                        ; preds = %if.end
  call void @PyErr_Clear(), !dbg !4161
  store i32 0, ptr %retval, align 4, !dbg !4163
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4163

if.else:                                          ; preds = %if.end
  %6 = load ptr, ptr %r, align 8, !dbg !4164, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %6), !dbg !4164
  store i32 1, ptr %retval, align 4, !dbg !4166
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4166

cleanup:                                          ; preds = %if.else, %if.then15, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #8, !dbg !4167
  %7 = load i32, ptr %retval, align 4, !dbg !4167
  ret i32 %7, !dbg !4167
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyObject_Call2Args(ptr noundef %function, ptr noundef %arg1, ptr noundef %arg2) #0 !dbg !4168 {
entry:
  %retval = alloca ptr, align 8
  %function.addr = alloca ptr, align 8
  %arg1.addr = alloca ptr, align 8
  %arg2.addr = alloca ptr, align 8
  %args = alloca ptr, align 8
  %result = alloca ptr, align 8
  %args1 = alloca [2 x ptr], align 16
  %cleanup.dest.slot = alloca i32, align 4
  %args8 = alloca [2 x ptr], align 16
  store ptr %function, ptr %function.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %function.addr, metadata !4170, metadata !DIExpression()), !dbg !4182
  store ptr %arg1, ptr %arg1.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %arg1.addr, metadata !4171, metadata !DIExpression()), !dbg !4183
  store ptr %arg2, ptr %arg2.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %arg2.addr, metadata !4172, metadata !DIExpression()), !dbg !4184
  call void @llvm.lifetime.start.p0(i64 8, ptr %args) #8, !dbg !4185
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !4173, metadata !DIExpression()), !dbg !4186
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #8, !dbg !4185
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4174, metadata !DIExpression()), !dbg !4187
  store ptr null, ptr %result, align 8, !dbg !4187, !tbaa !1252
  %0 = load ptr, ptr %function.addr, align 8, !dbg !4188, !tbaa !1252
  %call = call i32 @_Py_IS_TYPE(ptr noundef %0, ptr noundef @PyFunction_Type), !dbg !4188
  %tobool = icmp ne i32 %call, 0, !dbg !4188
  br i1 %tobool, label %if.then, label %if.end, !dbg !4189

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr %args1) #8, !dbg !4190
  tail call void @llvm.dbg.declare(metadata ptr %args1, metadata !4175, metadata !DIExpression()), !dbg !4191
  %arrayinit.begin = getelementptr inbounds [2 x ptr], ptr %args1, i64 0, i64 0, !dbg !4192
  %1 = load ptr, ptr %arg1.addr, align 8, !dbg !4193, !tbaa !1252
  store ptr %1, ptr %arrayinit.begin, align 8, !dbg !4192, !tbaa !1252
  %arrayinit.element = getelementptr inbounds ptr, ptr %arrayinit.begin, i64 1, !dbg !4192
  %2 = load ptr, ptr %arg2.addr, align 8, !dbg !4194, !tbaa !1252
  store ptr %2, ptr %arrayinit.element, align 8, !dbg !4192, !tbaa !1252
  %3 = load ptr, ptr %function.addr, align 8, !dbg !4195, !tbaa !1252
  %arraydecay = getelementptr inbounds [2 x ptr], ptr %args1, i64 0, i64 0, !dbg !4195
  %call2 = call ptr @__Pyx_PyFunction_FastCallDict(ptr noundef %3, ptr noundef %arraydecay, i64 noundef 2, ptr noundef null), !dbg !4195
  store ptr %call2, ptr %retval, align 8, !dbg !4196
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 16, ptr %args1) #8, !dbg !4197
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %function.addr, align 8, !dbg !4198, !tbaa !1252
  %call3 = call i32 @_Py_IS_TYPE(ptr noundef %4, ptr noundef @PyCFunction_Type), !dbg !4198
  %tobool4 = icmp ne i32 %call3, 0, !dbg !4198
  br i1 %tobool4, label %land.lhs.true, label %lor.lhs.false, !dbg !4198

lor.lhs.false:                                    ; preds = %if.end
  %5 = load ptr, ptr %function.addr, align 8, !dbg !4198, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %5, i32 0, i32 1, !dbg !4198
  %6 = load ptr, ptr %ob_type, align 8, !dbg !4198, !tbaa !2317
  %call5 = call i32 @PyType_IsSubtype(ptr noundef %6, ptr noundef @PyCFunction_Type), !dbg !4198
  %tobool6 = icmp ne i32 %call5, 0, !dbg !4198
  br i1 %tobool6, label %land.lhs.true, label %if.end13, !dbg !4198

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %7 = load ptr, ptr %function.addr, align 8, !dbg !4198, !tbaa !1252
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %7, i32 0, i32 1, !dbg !4198
  %8 = load ptr, ptr %m_ml, align 8, !dbg !4198, !tbaa !4199
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %8, i32 0, i32 2, !dbg !4198
  %9 = load i32, ptr %ml_flags, align 8, !dbg !4198, !tbaa !4201
  %and = and i32 %9, -115, !dbg !4198
  %cmp = icmp eq i32 128, %and, !dbg !4198
  br i1 %cmp, label %if.then7, label %if.end13, !dbg !4203

if.then7:                                         ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 16, ptr %args8) #8, !dbg !4204
  tail call void @llvm.dbg.declare(metadata ptr %args8, metadata !4178, metadata !DIExpression()), !dbg !4205
  %arrayinit.begin9 = getelementptr inbounds [2 x ptr], ptr %args8, i64 0, i64 0, !dbg !4206
  %10 = load ptr, ptr %arg1.addr, align 8, !dbg !4207, !tbaa !1252
  store ptr %10, ptr %arrayinit.begin9, align 8, !dbg !4206, !tbaa !1252
  %arrayinit.element10 = getelementptr inbounds ptr, ptr %arrayinit.begin9, i64 1, !dbg !4206
  %11 = load ptr, ptr %arg2.addr, align 8, !dbg !4208, !tbaa !1252
  store ptr %11, ptr %arrayinit.element10, align 8, !dbg !4206, !tbaa !1252
  %12 = load ptr, ptr %function.addr, align 8, !dbg !4209, !tbaa !1252
  %arraydecay11 = getelementptr inbounds [2 x ptr], ptr %args8, i64 0, i64 0, !dbg !4210
  %call12 = call ptr @__Pyx_PyCFunction_FastCall(ptr noundef %12, ptr noundef %arraydecay11, i64 noundef 2), !dbg !4211
  store ptr %call12, ptr %retval, align 8, !dbg !4212
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 16, ptr %args8) #8, !dbg !4213
  br label %cleanup

if.end13:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %call14 = call ptr @PyTuple_New(i64 noundef 2), !dbg !4214
  store ptr %call14, ptr %args, align 8, !dbg !4215, !tbaa !1252
  %13 = load ptr, ptr %args, align 8, !dbg !4216, !tbaa !1252
  %tobool15 = icmp ne ptr %13, null, !dbg !4216
  %lnot = xor i1 %tobool15, true, !dbg !4216
  %lnot16 = xor i1 %lnot, true, !dbg !4216
  %lnot17 = xor i1 %lnot16, true, !dbg !4216
  %lnot.ext = zext i1 %lnot17 to i32, !dbg !4216
  %conv = sext i32 %lnot.ext to i64, !dbg !4216
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4216
  %tobool18 = icmp ne i64 %expval, 0, !dbg !4216
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !4218

if.then19:                                        ; preds = %if.end13
  br label %done, !dbg !4219

if.end20:                                         ; preds = %if.end13
  %14 = load ptr, ptr %arg1.addr, align 8, !dbg !4220, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %14), !dbg !4220
  %15 = load ptr, ptr %arg1.addr, align 8, !dbg !4221, !tbaa !1252
  %16 = load ptr, ptr %args, align 8, !dbg !4221, !tbaa !1252
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %16, i32 0, i32 1, !dbg !4221
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !4221
  store ptr %15, ptr %arrayidx, align 8, !dbg !4221, !tbaa !1252
  %17 = load ptr, ptr %arg2.addr, align 8, !dbg !4222, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %17), !dbg !4222
  %18 = load ptr, ptr %arg2.addr, align 8, !dbg !4223, !tbaa !1252
  %19 = load ptr, ptr %args, align 8, !dbg !4223, !tbaa !1252
  %ob_item21 = getelementptr inbounds %struct.PyTupleObject, ptr %19, i32 0, i32 1, !dbg !4223
  %arrayidx22 = getelementptr [1 x ptr], ptr %ob_item21, i64 0, i64 1, !dbg !4223
  store ptr %18, ptr %arrayidx22, align 8, !dbg !4223, !tbaa !1252
  %20 = load ptr, ptr %function.addr, align 8, !dbg !4224, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %20), !dbg !4224
  %21 = load ptr, ptr %function.addr, align 8, !dbg !4225, !tbaa !1252
  %22 = load ptr, ptr %args, align 8, !dbg !4226, !tbaa !1252
  %call23 = call ptr @__Pyx_PyObject_Call(ptr noundef %21, ptr noundef %22, ptr noundef null), !dbg !4227
  store ptr %call23, ptr %result, align 8, !dbg !4228, !tbaa !1252
  %23 = load ptr, ptr %args, align 8, !dbg !4229, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %23), !dbg !4229
  %24 = load ptr, ptr %function.addr, align 8, !dbg !4230, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %24), !dbg !4230
  br label %done, !dbg !4230

done:                                             ; preds = %if.end20, %if.then19
  tail call void @llvm.dbg.label(metadata !4181), !dbg !4231
  %25 = load ptr, ptr %result, align 8, !dbg !4232, !tbaa !1252
  store ptr %25, ptr %retval, align 8, !dbg !4233
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4233

cleanup:                                          ; preds = %done, %if.then7, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #8, !dbg !4234
  call void @llvm.lifetime.end.p0(i64 8, ptr %args) #8, !dbg !4234
  %26 = load ptr, ptr %retval, align 8, !dbg !4234
  ret ptr %26, !dbg !4234
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_CallOneArg(ptr noundef %func, ptr noundef %arg) #3 !dbg !4235 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !4237, metadata !DIExpression()), !dbg !4239
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !4238, metadata !DIExpression()), !dbg !4240
  %0 = load ptr, ptr %func.addr, align 8, !dbg !4241, !tbaa !1252
  %call = call i32 @_Py_IS_TYPE(ptr noundef %0, ptr noundef @PyFunction_Type), !dbg !4241
  %tobool = icmp ne i32 %call, 0, !dbg !4241
  br i1 %tobool, label %if.then, label %if.end, !dbg !4243

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %func.addr, align 8, !dbg !4244, !tbaa !1252
  %call1 = call ptr @__Pyx_PyFunction_FastCallDict(ptr noundef %1, ptr noundef %arg.addr, i64 noundef 1, ptr noundef null), !dbg !4244
  store ptr %call1, ptr %retval, align 8, !dbg !4246
  br label %return, !dbg !4246

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %func.addr, align 8, !dbg !4247, !tbaa !1252
  %call2 = call i32 @_Py_IS_TYPE(ptr noundef %2, ptr noundef @PyCFunction_Type), !dbg !4247
  %tobool3 = icmp ne i32 %call2, 0, !dbg !4247
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !4247

lor.rhs:                                          ; preds = %if.end
  %3 = load ptr, ptr %func.addr, align 8, !dbg !4247, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %3, i32 0, i32 1, !dbg !4247
  %4 = load ptr, ptr %ob_type, align 8, !dbg !4247, !tbaa !2317
  %call4 = call i32 @PyType_IsSubtype(ptr noundef %4, ptr noundef @PyCFunction_Type), !dbg !4247
  %tobool5 = icmp ne i32 %call4, 0, !dbg !4247
  br label %lor.end, !dbg !4247

lor.end:                                          ; preds = %lor.rhs, %if.end
  %5 = phi i1 [ true, %if.end ], [ %tobool5, %lor.rhs ]
  %lnot = xor i1 %5, true, !dbg !4247
  %lnot6 = xor i1 %lnot, true, !dbg !4247
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !4247
  %conv = sext i32 %lnot.ext to i64, !dbg !4247
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4247
  %tobool7 = icmp ne i64 %expval, 0, !dbg !4247
  br i1 %tobool7, label %if.then8, label %if.end32, !dbg !4249

if.then8:                                         ; preds = %lor.end
  %6 = load ptr, ptr %func.addr, align 8, !dbg !4250, !tbaa !1252
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %6, i32 0, i32 1, !dbg !4250
  %7 = load ptr, ptr %m_ml, align 8, !dbg !4250, !tbaa !4199
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %7, i32 0, i32 2, !dbg !4250
  %8 = load i32, ptr %ml_flags, align 8, !dbg !4250, !tbaa !4201
  %and = and i32 %8, 8, !dbg !4250
  %tobool9 = icmp ne i32 %and, 0, !dbg !4250
  %lnot10 = xor i1 %tobool9, true, !dbg !4250
  %lnot12 = xor i1 %lnot10, true, !dbg !4250
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !4250
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !4250
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 1), !dbg !4250
  %tobool16 = icmp ne i64 %expval15, 0, !dbg !4250
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !4253

if.then17:                                        ; preds = %if.then8
  %9 = load ptr, ptr %func.addr, align 8, !dbg !4254, !tbaa !1252
  %10 = load ptr, ptr %arg.addr, align 8, !dbg !4256, !tbaa !1252
  %call18 = call ptr @__Pyx_PyObject_CallMethO(ptr noundef %9, ptr noundef %10), !dbg !4257
  store ptr %call18, ptr %retval, align 8, !dbg !4258
  br label %return, !dbg !4258

if.else:                                          ; preds = %if.then8
  %11 = load ptr, ptr %func.addr, align 8, !dbg !4259, !tbaa !1252
  %call19 = call i32 @_Py_IS_TYPE(ptr noundef %11, ptr noundef @PyCFunction_Type), !dbg !4259
  %tobool20 = icmp ne i32 %call19, 0, !dbg !4259
  br i1 %tobool20, label %land.lhs.true, label %lor.lhs.false, !dbg !4259

lor.lhs.false:                                    ; preds = %if.else
  %12 = load ptr, ptr %func.addr, align 8, !dbg !4259, !tbaa !1252
  %ob_type21 = getelementptr inbounds %struct._object, ptr %12, i32 0, i32 1, !dbg !4259
  %13 = load ptr, ptr %ob_type21, align 8, !dbg !4259, !tbaa !2317
  %call22 = call i32 @PyType_IsSubtype(ptr noundef %13, ptr noundef @PyCFunction_Type), !dbg !4259
  %tobool23 = icmp ne i32 %call22, 0, !dbg !4259
  br i1 %tobool23, label %land.lhs.true, label %if.end30, !dbg !4259

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else
  %14 = load ptr, ptr %func.addr, align 8, !dbg !4259, !tbaa !1252
  %m_ml24 = getelementptr inbounds %struct.PyCFunctionObject, ptr %14, i32 0, i32 1, !dbg !4259
  %15 = load ptr, ptr %m_ml24, align 8, !dbg !4259, !tbaa !4199
  %ml_flags25 = getelementptr inbounds %struct.PyMethodDef, ptr %15, i32 0, i32 2, !dbg !4259
  %16 = load i32, ptr %ml_flags25, align 8, !dbg !4259, !tbaa !4201
  %and26 = and i32 %16, -115, !dbg !4259
  %cmp = icmp eq i32 128, %and26, !dbg !4259
  br i1 %cmp, label %if.then28, label %if.end30, !dbg !4261

if.then28:                                        ; preds = %land.lhs.true
  %17 = load ptr, ptr %func.addr, align 8, !dbg !4262, !tbaa !1252
  %call29 = call ptr @__Pyx_PyCFunction_FastCall(ptr noundef %17, ptr noundef %arg.addr, i64 noundef 1), !dbg !4264
  store ptr %call29, ptr %retval, align 8, !dbg !4265
  br label %return, !dbg !4265

if.end30:                                         ; preds = %land.lhs.true, %lor.lhs.false
  br label %if.end31

if.end31:                                         ; preds = %if.end30
  br label %if.end32, !dbg !4266

if.end32:                                         ; preds = %if.end31, %lor.end
  %18 = load ptr, ptr %func.addr, align 8, !dbg !4267, !tbaa !1252
  %19 = load ptr, ptr %arg.addr, align 8, !dbg !4268, !tbaa !1252
  %call33 = call ptr @__Pyx__PyObject_CallOneArg(ptr noundef %18, ptr noundef %19), !dbg !4269
  store ptr %call33, ptr %retval, align 8, !dbg !4270
  br label %return, !dbg !4270

return:                                           ; preds = %if.end32, %if.then28, %if.then17, %if.then
  %20 = load ptr, ptr %retval, align 8, !dbg !4271
  ret ptr %20, !dbg !4271
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_is_valid_index(i64 noundef %i, i64 noundef %limit) #3 !dbg !4272 {
entry:
  %i.addr = alloca i64, align 8
  %limit.addr = alloca i64, align 8
  store i64 %i, ptr %i.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %i.addr, metadata !4276, metadata !DIExpression()), !dbg !4278
  store i64 %limit, ptr %limit.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %limit.addr, metadata !4277, metadata !DIExpression()), !dbg !4279
  %0 = load i64, ptr %i.addr, align 8, !dbg !4280, !tbaa !1368
  %1 = load i64, ptr %limit.addr, align 8, !dbg !4281, !tbaa !1368
  %cmp = icmp ult i64 %0, %1, !dbg !4282
  %conv = zext i1 %cmp to i32, !dbg !4282
  ret i32 %conv, !dbg !4283
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_GetItemInt_Generic(ptr noundef %o, ptr noundef %j) #0 !dbg !4284 {
entry:
  %retval = alloca ptr, align 8
  %o.addr = alloca ptr, align 8
  %j.addr = alloca ptr, align 8
  %r = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !4286, metadata !DIExpression()), !dbg !4289
  store ptr %j, ptr %j.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %j.addr, metadata !4287, metadata !DIExpression()), !dbg !4290
  call void @llvm.lifetime.start.p0(i64 8, ptr %r) #8, !dbg !4291
  tail call void @llvm.dbg.declare(metadata ptr %r, metadata !4288, metadata !DIExpression()), !dbg !4292
  %0 = load ptr, ptr %j.addr, align 8, !dbg !4293, !tbaa !1252
  %tobool = icmp ne ptr %0, null, !dbg !4293
  br i1 %tobool, label %if.end, label %if.then, !dbg !4295

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !4296
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4296

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !dbg !4297, !tbaa !1252
  %2 = load ptr, ptr %j.addr, align 8, !dbg !4298, !tbaa !1252
  %call = call ptr @PyObject_GetItem(ptr noundef %1, ptr noundef %2), !dbg !4299
  store ptr %call, ptr %r, align 8, !dbg !4300, !tbaa !1252
  %3 = load ptr, ptr %j.addr, align 8, !dbg !4301, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %3), !dbg !4301
  %4 = load ptr, ptr %r, align 8, !dbg !4302, !tbaa !1252
  store ptr %4, ptr %retval, align 8, !dbg !4303
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4303

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %r) #8, !dbg !4304
  %5 = load ptr, ptr %retval, align 8, !dbg !4304
  ret ptr %5, !dbg !4304
}

declare !dbg !4305 ptr @PyObject_GetItem(ptr noundef, ptr noundef) #1

declare !dbg !4306 i64 @PyLong_AsSsize_t(ptr noundef) #1

declare !dbg !4307 ptr @PyNumber_Index(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyFunction_FastCallDict(ptr noundef %func, ptr noundef %args, i64 noundef %nargs, ptr noundef %kwargs) #0 !dbg !4308 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %nargs.addr = alloca i64, align 8
  %kwargs.addr = alloca ptr, align 8
  %co = alloca ptr, align 8
  %globals = alloca ptr, align 8
  %argdefs = alloca ptr, align 8
  %closure = alloca ptr, align 8
  %kwdefs = alloca ptr, align 8
  %kwtuple = alloca ptr, align 8
  %k = alloca ptr, align 8
  %d = alloca ptr, align 8
  %nd = alloca i64, align 8
  %nk = alloca i64, align 8
  %result = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %pos = alloca i64, align 8
  %i = alloca i64, align 8
  store ptr %func, ptr %func.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !4312, metadata !DIExpression()), !dbg !4332
  store ptr %args, ptr %args.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !4313, metadata !DIExpression()), !dbg !4333
  store i64 %nargs, ptr %nargs.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %nargs.addr, metadata !4314, metadata !DIExpression()), !dbg !4334
  store ptr %kwargs, ptr %kwargs.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %kwargs.addr, metadata !4315, metadata !DIExpression()), !dbg !4335
  call void @llvm.lifetime.start.p0(i64 8, ptr %co) #8, !dbg !4336
  tail call void @llvm.dbg.declare(metadata ptr %co, metadata !4316, metadata !DIExpression()), !dbg !4337
  %0 = load ptr, ptr %func.addr, align 8, !dbg !4338, !tbaa !1252
  %func_code = getelementptr inbounds %struct.PyFunctionObject, ptr %0, i32 0, i32 1, !dbg !4338
  %1 = load ptr, ptr %func_code, align 8, !dbg !4338, !tbaa !4339
  store ptr %1, ptr %co, align 8, !dbg !4337, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %globals) #8, !dbg !4341
  tail call void @llvm.dbg.declare(metadata ptr %globals, metadata !4317, metadata !DIExpression()), !dbg !4342
  %2 = load ptr, ptr %func.addr, align 8, !dbg !4343, !tbaa !1252
  %func_globals = getelementptr inbounds %struct.PyFunctionObject, ptr %2, i32 0, i32 2, !dbg !4343
  %3 = load ptr, ptr %func_globals, align 8, !dbg !4343, !tbaa !4344
  store ptr %3, ptr %globals, align 8, !dbg !4342, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %argdefs) #8, !dbg !4345
  tail call void @llvm.dbg.declare(metadata ptr %argdefs, metadata !4318, metadata !DIExpression()), !dbg !4346
  %4 = load ptr, ptr %func.addr, align 8, !dbg !4347, !tbaa !1252
  %func_defaults = getelementptr inbounds %struct.PyFunctionObject, ptr %4, i32 0, i32 3, !dbg !4347
  %5 = load ptr, ptr %func_defaults, align 8, !dbg !4347, !tbaa !4348
  store ptr %5, ptr %argdefs, align 8, !dbg !4346, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %closure) #8, !dbg !4349
  tail call void @llvm.dbg.declare(metadata ptr %closure, metadata !4319, metadata !DIExpression()), !dbg !4350
  call void @llvm.lifetime.start.p0(i64 8, ptr %kwdefs) #8, !dbg !4351
  tail call void @llvm.dbg.declare(metadata ptr %kwdefs, metadata !4320, metadata !DIExpression()), !dbg !4352
  call void @llvm.lifetime.start.p0(i64 8, ptr %kwtuple) #8, !dbg !4353
  tail call void @llvm.dbg.declare(metadata ptr %kwtuple, metadata !4321, metadata !DIExpression()), !dbg !4354
  call void @llvm.lifetime.start.p0(i64 8, ptr %k) #8, !dbg !4353
  tail call void @llvm.dbg.declare(metadata ptr %k, metadata !4322, metadata !DIExpression()), !dbg !4355
  call void @llvm.lifetime.start.p0(i64 8, ptr %d) #8, !dbg !4356
  tail call void @llvm.dbg.declare(metadata ptr %d, metadata !4323, metadata !DIExpression()), !dbg !4357
  call void @llvm.lifetime.start.p0(i64 8, ptr %nd) #8, !dbg !4358
  tail call void @llvm.dbg.declare(metadata ptr %nd, metadata !4324, metadata !DIExpression()), !dbg !4359
  call void @llvm.lifetime.start.p0(i64 8, ptr %nk) #8, !dbg !4360
  tail call void @llvm.dbg.declare(metadata ptr %nk, metadata !4325, metadata !DIExpression()), !dbg !4361
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #8, !dbg !4362
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4326, metadata !DIExpression()), !dbg !4363
  %6 = load ptr, ptr %kwargs.addr, align 8, !dbg !4364, !tbaa !1252
  %tobool = icmp ne ptr %6, null, !dbg !4364
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4364

cond.true:                                        ; preds = %entry
  %7 = load ptr, ptr %kwargs.addr, align 8, !dbg !4365, !tbaa !1252
  %call = call i64 @PyDict_Size(ptr noundef %7), !dbg !4366
  br label %cond.end, !dbg !4364

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4364

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !4364
  store i64 %cond, ptr %nk, align 8, !dbg !4367, !tbaa !1368
  %call1 = call i32 @Py_EnterRecursiveCall(ptr noundef @.str.38), !dbg !4368
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4368
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4370

if.then:                                          ; preds = %cond.end
  store ptr null, ptr %retval, align 8, !dbg !4371
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup68, !dbg !4371

if.end:                                           ; preds = %cond.end
  %8 = load ptr, ptr %co, align 8, !dbg !4373, !tbaa !1252
  %co_kwonlyargcount = getelementptr inbounds %struct.PyCodeObject, ptr %8, i32 0, i32 3, !dbg !4375
  %9 = load i32, ptr %co_kwonlyargcount, align 8, !dbg !4375, !tbaa !4376
  %cmp = icmp eq i32 %9, 0, !dbg !4378
  br i1 %cmp, label %land.lhs.true, label %if.end34, !dbg !4379

land.lhs.true:                                    ; preds = %if.end
  %10 = load ptr, ptr %kwargs.addr, align 8, !dbg !4380, !tbaa !1252
  %cmp3 = icmp eq ptr %10, null, !dbg !4380
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !4380

lor.rhs:                                          ; preds = %land.lhs.true
  %11 = load i64, ptr %nk, align 8, !dbg !4380, !tbaa !1368
  %cmp4 = icmp eq i64 %11, 0, !dbg !4380
  br label %lor.end, !dbg !4380

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true
  %12 = phi i1 [ true, %land.lhs.true ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %12, true, !dbg !4380
  %lnot5 = xor i1 %lnot, true, !dbg !4380
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !4380
  %conv = sext i32 %lnot.ext to i64, !dbg !4380
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !4380
  %tobool6 = icmp ne i64 %expval, 0, !dbg !4380
  br i1 %tobool6, label %land.lhs.true7, label %if.end34, !dbg !4381

land.lhs.true7:                                   ; preds = %lor.end
  %13 = load ptr, ptr %co, align 8, !dbg !4382, !tbaa !1252
  %co_flags = getelementptr inbounds %struct.PyCodeObject, ptr %13, i32 0, i32 6, !dbg !4383
  %14 = load i32, ptr %co_flags, align 4, !dbg !4383, !tbaa !4384
  %cmp8 = icmp eq i32 %14, 67, !dbg !4385
  br i1 %cmp8, label %if.then10, label %if.end34, !dbg !4386

if.then10:                                        ; preds = %land.lhs.true7
  %15 = load ptr, ptr %argdefs, align 8, !dbg !4387, !tbaa !1252
  %cmp11 = icmp eq ptr %15, null, !dbg !4390
  br i1 %cmp11, label %land.lhs.true13, label %if.else, !dbg !4391

land.lhs.true13:                                  ; preds = %if.then10
  %16 = load ptr, ptr %co, align 8, !dbg !4392, !tbaa !1252
  %co_argcount = getelementptr inbounds %struct.PyCodeObject, ptr %16, i32 0, i32 1, !dbg !4393
  %17 = load i32, ptr %co_argcount, align 8, !dbg !4393, !tbaa !4394
  %conv14 = sext i32 %17 to i64, !dbg !4392
  %18 = load i64, ptr %nargs.addr, align 8, !dbg !4395, !tbaa !1368
  %cmp15 = icmp eq i64 %conv14, %18, !dbg !4396
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !4397

if.then17:                                        ; preds = %land.lhs.true13
  %19 = load ptr, ptr %co, align 8, !dbg !4398, !tbaa !1252
  %20 = load ptr, ptr %args.addr, align 8, !dbg !4400, !tbaa !1252
  %21 = load i64, ptr %nargs.addr, align 8, !dbg !4401, !tbaa !1368
  %22 = load ptr, ptr %globals, align 8, !dbg !4402, !tbaa !1252
  %call18 = call ptr @__Pyx_PyFunction_FastCallNoKw(ptr noundef %19, ptr noundef %20, i64 noundef %21, ptr noundef %22), !dbg !4403
  store ptr %call18, ptr %result, align 8, !dbg !4404, !tbaa !1252
  br label %done, !dbg !4405

if.else:                                          ; preds = %land.lhs.true13, %if.then10
  %23 = load i64, ptr %nargs.addr, align 8, !dbg !4406, !tbaa !1368
  %cmp19 = icmp eq i64 %23, 0, !dbg !4408
  br i1 %cmp19, label %land.lhs.true21, label %if.end32, !dbg !4409

land.lhs.true21:                                  ; preds = %if.else
  %24 = load ptr, ptr %argdefs, align 8, !dbg !4410, !tbaa !1252
  %cmp22 = icmp ne ptr %24, null, !dbg !4411
  br i1 %cmp22, label %land.lhs.true24, label %if.end32, !dbg !4412

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %25 = load ptr, ptr %co, align 8, !dbg !4413, !tbaa !1252
  %co_argcount25 = getelementptr inbounds %struct.PyCodeObject, ptr %25, i32 0, i32 1, !dbg !4414
  %26 = load i32, ptr %co_argcount25, align 8, !dbg !4414, !tbaa !4394
  %conv26 = sext i32 %26 to i64, !dbg !4413
  %27 = load ptr, ptr %argdefs, align 8, !dbg !4415, !tbaa !1252
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %27, i32 0, i32 1, !dbg !4415
  %28 = load i64, ptr %ob_size, align 8, !dbg !4415, !tbaa !2688
  %cmp27 = icmp eq i64 %conv26, %28, !dbg !4416
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !4417

if.then29:                                        ; preds = %land.lhs.true24
  %29 = load ptr, ptr %argdefs, align 8, !dbg !4418, !tbaa !1252
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %29, i32 0, i32 1, !dbg !4418
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !4418
  store ptr %arrayidx, ptr %args.addr, align 8, !dbg !4420, !tbaa !1252
  %30 = load ptr, ptr %co, align 8, !dbg !4421, !tbaa !1252
  %31 = load ptr, ptr %args.addr, align 8, !dbg !4422, !tbaa !1252
  %32 = load ptr, ptr %argdefs, align 8, !dbg !4423, !tbaa !1252
  %ob_size30 = getelementptr inbounds %struct.PyVarObject, ptr %32, i32 0, i32 1, !dbg !4423
  %33 = load i64, ptr %ob_size30, align 8, !dbg !4423, !tbaa !2688
  %34 = load ptr, ptr %globals, align 8, !dbg !4424, !tbaa !1252
  %call31 = call ptr @__Pyx_PyFunction_FastCallNoKw(ptr noundef %30, ptr noundef %31, i64 noundef %33, ptr noundef %34), !dbg !4425
  store ptr %call31, ptr %result, align 8, !dbg !4426, !tbaa !1252
  br label %done, !dbg !4427

if.end32:                                         ; preds = %land.lhs.true24, %land.lhs.true21, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %if.end34, !dbg !4428

if.end34:                                         ; preds = %if.end33, %land.lhs.true7, %lor.end, %if.end
  %35 = load ptr, ptr %kwargs.addr, align 8, !dbg !4429, !tbaa !1252
  %cmp35 = icmp ne ptr %35, null, !dbg !4430
  br i1 %cmp35, label %if.then37, label %if.else54, !dbg !4431

if.then37:                                        ; preds = %if.end34
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos) #8, !dbg !4432
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !4327, metadata !DIExpression()), !dbg !4433
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #8, !dbg !4432
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4330, metadata !DIExpression()), !dbg !4434
  %36 = load i64, ptr %nk, align 8, !dbg !4435, !tbaa !1368
  %mul = mul i64 2, %36, !dbg !4436
  %call38 = call ptr @PyTuple_New(i64 noundef %mul), !dbg !4437
  store ptr %call38, ptr %kwtuple, align 8, !dbg !4438, !tbaa !1252
  %37 = load ptr, ptr %kwtuple, align 8, !dbg !4439, !tbaa !1252
  %cmp39 = icmp eq ptr %37, null, !dbg !4441
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !4442

if.then41:                                        ; preds = %if.then37
  store ptr null, ptr %result, align 8, !dbg !4443, !tbaa !1252
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4445

if.end42:                                         ; preds = %if.then37
  %38 = load ptr, ptr %kwtuple, align 8, !dbg !4446, !tbaa !1252
  %ob_item43 = getelementptr inbounds %struct.PyTupleObject, ptr %38, i32 0, i32 1, !dbg !4446
  %arrayidx44 = getelementptr [1 x ptr], ptr %ob_item43, i64 0, i64 0, !dbg !4446
  store ptr %arrayidx44, ptr %k, align 8, !dbg !4447, !tbaa !1252
  store i64 0, ptr %i, align 8, !dbg !4448, !tbaa !1368
  store i64 0, ptr %pos, align 8, !dbg !4449, !tbaa !1368
  br label %while.cond, !dbg !4450

while.cond:                                       ; preds = %while.body, %if.end42
  %39 = load ptr, ptr %kwargs.addr, align 8, !dbg !4451, !tbaa !1252
  %40 = load ptr, ptr %k, align 8, !dbg !4452, !tbaa !1252
  %41 = load i64, ptr %i, align 8, !dbg !4453, !tbaa !1368
  %arrayidx45 = getelementptr ptr, ptr %40, i64 %41, !dbg !4452
  %42 = load ptr, ptr %k, align 8, !dbg !4454, !tbaa !1252
  %43 = load i64, ptr %i, align 8, !dbg !4455, !tbaa !1368
  %add = add i64 %43, 1, !dbg !4456
  %arrayidx46 = getelementptr ptr, ptr %42, i64 %add, !dbg !4454
  %call47 = call i32 @PyDict_Next(ptr noundef %39, ptr noundef %pos, ptr noundef %arrayidx45, ptr noundef %arrayidx46), !dbg !4457
  %tobool48 = icmp ne i32 %call47, 0, !dbg !4450
  br i1 %tobool48, label %while.body, label %while.end, !dbg !4450

while.body:                                       ; preds = %while.cond
  %44 = load ptr, ptr %k, align 8, !dbg !4458, !tbaa !1252
  %45 = load i64, ptr %i, align 8, !dbg !4458, !tbaa !1368
  %arrayidx49 = getelementptr ptr, ptr %44, i64 %45, !dbg !4458
  %46 = load ptr, ptr %arrayidx49, align 8, !dbg !4458, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %46), !dbg !4458
  %47 = load ptr, ptr %k, align 8, !dbg !4460, !tbaa !1252
  %48 = load i64, ptr %i, align 8, !dbg !4460, !tbaa !1368
  %add50 = add i64 %48, 1, !dbg !4460
  %arrayidx51 = getelementptr ptr, ptr %47, i64 %add50, !dbg !4460
  %49 = load ptr, ptr %arrayidx51, align 8, !dbg !4460, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %49), !dbg !4460
  %50 = load i64, ptr %i, align 8, !dbg !4461, !tbaa !1368
  %add52 = add i64 %50, 2, !dbg !4461
  store i64 %add52, ptr %i, align 8, !dbg !4461, !tbaa !1368
  br label %while.cond, !dbg !4450, !llvm.loop !4462

while.end:                                        ; preds = %while.cond
  %51 = load i64, ptr %i, align 8, !dbg !4464, !tbaa !1368
  %div = sdiv i64 %51, 2, !dbg !4465
  store i64 %div, ptr %nk, align 8, !dbg !4466, !tbaa !1368
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !4467
  br label %cleanup, !dbg !4467

cleanup:                                          ; preds = %if.then41, %while.end
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #8, !dbg !4467
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos) #8, !dbg !4467
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup68 [
    i32 0, label %cleanup.cont
    i32 2, label %done
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end55, !dbg !4468

if.else54:                                        ; preds = %if.end34
  store ptr null, ptr %kwtuple, align 8, !dbg !4469, !tbaa !1252
  store ptr null, ptr %k, align 8, !dbg !4471, !tbaa !1252
  br label %if.end55

if.end55:                                         ; preds = %if.else54, %cleanup.cont
  %52 = load ptr, ptr %func.addr, align 8, !dbg !4472, !tbaa !1252
  %func_closure = getelementptr inbounds %struct.PyFunctionObject, ptr %52, i32 0, i32 5, !dbg !4472
  %53 = load ptr, ptr %func_closure, align 8, !dbg !4472, !tbaa !4473
  store ptr %53, ptr %closure, align 8, !dbg !4474, !tbaa !1252
  %54 = load ptr, ptr %func.addr, align 8, !dbg !4475, !tbaa !1252
  %func_kwdefaults = getelementptr inbounds %struct.PyFunctionObject, ptr %54, i32 0, i32 4, !dbg !4475
  %55 = load ptr, ptr %func_kwdefaults, align 8, !dbg !4475, !tbaa !4476
  store ptr %55, ptr %kwdefs, align 8, !dbg !4477, !tbaa !1252
  %56 = load ptr, ptr %argdefs, align 8, !dbg !4478, !tbaa !1252
  %cmp56 = icmp ne ptr %56, null, !dbg !4480
  br i1 %cmp56, label %if.then58, label %if.else62, !dbg !4481

if.then58:                                        ; preds = %if.end55
  %57 = load ptr, ptr %argdefs, align 8, !dbg !4482, !tbaa !1252
  %ob_item59 = getelementptr inbounds %struct.PyTupleObject, ptr %57, i32 0, i32 1, !dbg !4482
  %arrayidx60 = getelementptr [1 x ptr], ptr %ob_item59, i64 0, i64 0, !dbg !4482
  store ptr %arrayidx60, ptr %d, align 8, !dbg !4484, !tbaa !1252
  %58 = load ptr, ptr %argdefs, align 8, !dbg !4485, !tbaa !1252
  %ob_size61 = getelementptr inbounds %struct.PyVarObject, ptr %58, i32 0, i32 1, !dbg !4485
  %59 = load i64, ptr %ob_size61, align 8, !dbg !4485, !tbaa !2688
  store i64 %59, ptr %nd, align 8, !dbg !4486, !tbaa !1368
  br label %if.end63, !dbg !4487

if.else62:                                        ; preds = %if.end55
  store ptr null, ptr %d, align 8, !dbg !4488, !tbaa !1252
  store i64 0, ptr %nd, align 8, !dbg !4490, !tbaa !1368
  br label %if.end63

if.end63:                                         ; preds = %if.else62, %if.then58
  %60 = load ptr, ptr %co, align 8, !dbg !4491, !tbaa !1252
  %61 = load ptr, ptr %globals, align 8, !dbg !4492, !tbaa !1252
  %62 = load ptr, ptr %args.addr, align 8, !dbg !4493, !tbaa !1252
  %63 = load i64, ptr %nargs.addr, align 8, !dbg !4494, !tbaa !1368
  %conv64 = trunc i64 %63 to i32, !dbg !4495
  %64 = load ptr, ptr %k, align 8, !dbg !4496, !tbaa !1252
  %65 = load i64, ptr %nk, align 8, !dbg !4497, !tbaa !1368
  %conv65 = trunc i64 %65 to i32, !dbg !4498
  %66 = load ptr, ptr %d, align 8, !dbg !4499, !tbaa !1252
  %67 = load i64, ptr %nd, align 8, !dbg !4500, !tbaa !1368
  %conv66 = trunc i64 %67 to i32, !dbg !4501
  %68 = load ptr, ptr %kwdefs, align 8, !dbg !4502, !tbaa !1252
  %69 = load ptr, ptr %closure, align 8, !dbg !4503, !tbaa !1252
  %call67 = call ptr @PyEval_EvalCodeEx(ptr noundef %60, ptr noundef %61, ptr noundef null, ptr noundef %62, i32 noundef %conv64, ptr noundef %64, i32 noundef %conv65, ptr noundef %66, i32 noundef %conv66, ptr noundef %68, ptr noundef %69), !dbg !4504
  store ptr %call67, ptr %result, align 8, !dbg !4505, !tbaa !1252
  %70 = load ptr, ptr %kwtuple, align 8, !dbg !4506, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %70), !dbg !4506
  br label %done, !dbg !4506

done:                                             ; preds = %if.end63, %cleanup, %if.then29, %if.then17
  tail call void @llvm.dbg.label(metadata !4331), !dbg !4507
  call void @Py_LeaveRecursiveCall(), !dbg !4508
  %71 = load ptr, ptr %result, align 8, !dbg !4509, !tbaa !1252
  store ptr %71, ptr %retval, align 8, !dbg !4510
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup68, !dbg !4510

cleanup68:                                        ; preds = %done, %cleanup, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #8, !dbg !4511
  call void @llvm.lifetime.end.p0(i64 8, ptr %nk) #8, !dbg !4511
  call void @llvm.lifetime.end.p0(i64 8, ptr %nd) #8, !dbg !4511
  call void @llvm.lifetime.end.p0(i64 8, ptr %d) #8, !dbg !4511
  call void @llvm.lifetime.end.p0(i64 8, ptr %k) #8, !dbg !4511
  call void @llvm.lifetime.end.p0(i64 8, ptr %kwtuple) #8, !dbg !4511
  call void @llvm.lifetime.end.p0(i64 8, ptr %kwdefs) #8, !dbg !4511
  call void @llvm.lifetime.end.p0(i64 8, ptr %closure) #8, !dbg !4511
  call void @llvm.lifetime.end.p0(i64 8, ptr %argdefs) #8, !dbg !4511
  call void @llvm.lifetime.end.p0(i64 8, ptr %globals) #8, !dbg !4511
  call void @llvm.lifetime.end.p0(i64 8, ptr %co) #8, !dbg !4511
  %72 = load ptr, ptr %retval, align 8, !dbg !4511
  ret ptr %72, !dbg !4511
}

declare !dbg !4512 i32 @PyType_IsSubtype(ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyCFunction_FastCall(ptr noundef %func_obj, ptr noundef %args, i64 noundef %nargs) #3 !dbg !4513 {
entry:
  %retval = alloca ptr, align 8
  %func_obj.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %nargs.addr = alloca i64, align 8
  %func = alloca ptr, align 8
  %meth = alloca ptr, align 8
  %self = alloca ptr, align 8
  %flags = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func_obj, ptr %func_obj.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %func_obj.addr, metadata !4517, metadata !DIExpression()), !dbg !4524
  store ptr %args, ptr %args.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !4518, metadata !DIExpression()), !dbg !4525
  store i64 %nargs, ptr %nargs.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %nargs.addr, metadata !4519, metadata !DIExpression()), !dbg !4526
  call void @llvm.lifetime.start.p0(i64 8, ptr %func) #8, !dbg !4527
  tail call void @llvm.dbg.declare(metadata ptr %func, metadata !4520, metadata !DIExpression()), !dbg !4528
  %0 = load ptr, ptr %func_obj.addr, align 8, !dbg !4529, !tbaa !1252
  store ptr %0, ptr %func, align 8, !dbg !4528, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %meth) #8, !dbg !4530
  tail call void @llvm.dbg.declare(metadata ptr %meth, metadata !4521, metadata !DIExpression()), !dbg !4531
  %1 = load ptr, ptr %func, align 8, !dbg !4532, !tbaa !1252
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %1, i32 0, i32 1, !dbg !4532
  %2 = load ptr, ptr %m_ml, align 8, !dbg !4532, !tbaa !4199
  %ml_meth = getelementptr inbounds %struct.PyMethodDef, ptr %2, i32 0, i32 1, !dbg !4532
  %3 = load ptr, ptr %ml_meth, align 8, !dbg !4532, !tbaa !4533
  store ptr %3, ptr %meth, align 8, !dbg !4531, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #8, !dbg !4534
  tail call void @llvm.dbg.declare(metadata ptr %self, metadata !4522, metadata !DIExpression()), !dbg !4535
  %4 = load ptr, ptr %func, align 8, !dbg !4536, !tbaa !1252
  %m_ml1 = getelementptr inbounds %struct.PyCFunctionObject, ptr %4, i32 0, i32 1, !dbg !4536
  %5 = load ptr, ptr %m_ml1, align 8, !dbg !4536, !tbaa !4199
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %5, i32 0, i32 2, !dbg !4536
  %6 = load i32, ptr %ml_flags, align 8, !dbg !4536, !tbaa !4201
  %and = and i32 %6, 32, !dbg !4536
  %tobool = icmp ne i32 %and, 0, !dbg !4536
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4536

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4536

cond.false:                                       ; preds = %entry
  %7 = load ptr, ptr %func, align 8, !dbg !4536, !tbaa !1252
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %7, i32 0, i32 2, !dbg !4536
  %8 = load ptr, ptr %m_self, align 8, !dbg !4536, !tbaa !4537
  br label %cond.end, !dbg !4536

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ null, %cond.true ], [ %8, %cond.false ], !dbg !4536
  store ptr %cond, ptr %self, align 8, !dbg !4535, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %flags) #8, !dbg !4538
  tail call void @llvm.dbg.declare(metadata ptr %flags, metadata !4523, metadata !DIExpression()), !dbg !4539
  %9 = load ptr, ptr %func, align 8, !dbg !4540, !tbaa !1252
  %m_ml2 = getelementptr inbounds %struct.PyCFunctionObject, ptr %9, i32 0, i32 1, !dbg !4540
  %10 = load ptr, ptr %m_ml2, align 8, !dbg !4540, !tbaa !4199
  %ml_flags3 = getelementptr inbounds %struct.PyMethodDef, ptr %10, i32 0, i32 2, !dbg !4540
  %11 = load i32, ptr %ml_flags3, align 8, !dbg !4540, !tbaa !4201
  store i32 %11, ptr %flags, align 4, !dbg !4539, !tbaa !1335
  %12 = load i32, ptr %flags, align 4, !dbg !4541, !tbaa !1335
  %and4 = and i32 %12, 2, !dbg !4541
  %tobool5 = icmp ne i32 %and4, 0, !dbg !4541
  %lnot = xor i1 %tobool5, true, !dbg !4541
  %lnot6 = xor i1 %lnot, true, !dbg !4541
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !4541
  %conv = sext i32 %lnot.ext to i64, !dbg !4541
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4541
  %tobool7 = icmp ne i64 %expval, 0, !dbg !4541
  br i1 %tobool7, label %if.then, label %if.else, !dbg !4543

if.then:                                          ; preds = %cond.end
  %13 = load ptr, ptr %meth, align 8, !dbg !4544, !tbaa !1252
  %14 = load ptr, ptr %self, align 8, !dbg !4546, !tbaa !1252
  %15 = load ptr, ptr %args.addr, align 8, !dbg !4547, !tbaa !1252
  %16 = load i64, ptr %nargs.addr, align 8, !dbg !4548, !tbaa !1368
  %call = call ptr %13(ptr noundef %14, ptr noundef %15, i64 noundef %16, ptr noundef null), !dbg !4549
  store ptr %call, ptr %retval, align 8, !dbg !4550
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4550

if.else:                                          ; preds = %cond.end
  %17 = load ptr, ptr %meth, align 8, !dbg !4551, !tbaa !1252
  %18 = load ptr, ptr %self, align 8, !dbg !4553, !tbaa !1252
  %19 = load ptr, ptr %args.addr, align 8, !dbg !4554, !tbaa !1252
  %20 = load i64, ptr %nargs.addr, align 8, !dbg !4555, !tbaa !1368
  %call8 = call ptr %17(ptr noundef %18, ptr noundef %19, i64 noundef %20), !dbg !4556
  store ptr %call8, ptr %retval, align 8, !dbg !4557
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4557

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %flags) #8, !dbg !4558
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #8, !dbg !4558
  call void @llvm.lifetime.end.p0(i64 8, ptr %meth) #8, !dbg !4558
  call void @llvm.lifetime.end.p0(i64 8, ptr %func) #8, !dbg !4558
  %21 = load ptr, ptr %retval, align 8, !dbg !4558
  ret ptr %21, !dbg !4558
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_Call(ptr noundef %func, ptr noundef %arg, ptr noundef %kw) #3 !dbg !4559 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %kw.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %call = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !4561, metadata !DIExpression()), !dbg !4566
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !4562, metadata !DIExpression()), !dbg !4567
  store ptr %kw, ptr %kw.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %kw.addr, metadata !4563, metadata !DIExpression()), !dbg !4568
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #8, !dbg !4569
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4564, metadata !DIExpression()), !dbg !4570
  call void @llvm.lifetime.start.p0(i64 8, ptr %call) #8, !dbg !4571
  tail call void @llvm.dbg.declare(metadata ptr %call, metadata !4565, metadata !DIExpression()), !dbg !4572
  %0 = load ptr, ptr %func.addr, align 8, !dbg !4573, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1, !dbg !4573
  %1 = load ptr, ptr %ob_type, align 8, !dbg !4573, !tbaa !2317
  %tp_call = getelementptr inbounds %struct._typeobject, ptr %1, i32 0, i32 14, !dbg !4574
  %2 = load ptr, ptr %tp_call, align 8, !dbg !4574, !tbaa !4575
  store ptr %2, ptr %call, align 8, !dbg !4572, !tbaa !1252
  %3 = load ptr, ptr %call, align 8, !dbg !4576, !tbaa !1252
  %tobool = icmp ne ptr %3, null, !dbg !4576
  %lnot = xor i1 %tobool, true, !dbg !4576
  %lnot1 = xor i1 %lnot, true, !dbg !4576
  %lnot2 = xor i1 %lnot1, true, !dbg !4576
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4576
  %conv = sext i32 %lnot.ext to i64, !dbg !4576
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4576
  %tobool3 = icmp ne i64 %expval, 0, !dbg !4576
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4578

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %func.addr, align 8, !dbg !4579, !tbaa !1252
  %5 = load ptr, ptr %arg.addr, align 8, !dbg !4580, !tbaa !1252
  %6 = load ptr, ptr %kw.addr, align 8, !dbg !4581, !tbaa !1252
  %call4 = call ptr @PyObject_Call(ptr noundef %4, ptr noundef %5, ptr noundef %6), !dbg !4582
  store ptr %call4, ptr %retval, align 8, !dbg !4583
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4583

if.end:                                           ; preds = %entry
  %call5 = call i32 @Py_EnterRecursiveCall(ptr noundef @.str.38), !dbg !4584
  %tobool6 = icmp ne i32 %call5, 0, !dbg !4584
  %lnot7 = xor i1 %tobool6, true, !dbg !4584
  %lnot9 = xor i1 %lnot7, true, !dbg !4584
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !4584
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !4584
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !4584
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !4584
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !4586

if.then14:                                        ; preds = %if.end
  store ptr null, ptr %retval, align 8, !dbg !4587
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4587

if.end15:                                         ; preds = %if.end
  %7 = load ptr, ptr %call, align 8, !dbg !4588, !tbaa !1252
  %8 = load ptr, ptr %func.addr, align 8, !dbg !4589, !tbaa !1252
  %9 = load ptr, ptr %arg.addr, align 8, !dbg !4590, !tbaa !1252
  %10 = load ptr, ptr %kw.addr, align 8, !dbg !4591, !tbaa !1252
  %call16 = call ptr %7(ptr noundef %8, ptr noundef %9, ptr noundef %10), !dbg !4592
  store ptr %call16, ptr %result, align 8, !dbg !4593, !tbaa !1252
  call void @Py_LeaveRecursiveCall(), !dbg !4594
  %11 = load ptr, ptr %result, align 8, !dbg !4595, !tbaa !1252
  %tobool17 = icmp ne ptr %11, null, !dbg !4595
  %lnot18 = xor i1 %tobool17, true, !dbg !4595
  %lnot20 = xor i1 %lnot18, true, !dbg !4595
  %lnot22 = xor i1 %lnot20, true, !dbg !4595
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !4595
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !4595
  %expval25 = call i64 @llvm.expect.i64(i64 %conv24, i64 0), !dbg !4595
  %tobool26 = icmp ne i64 %expval25, 0, !dbg !4595
  br i1 %tobool26, label %land.lhs.true, label %if.end39, !dbg !4597

land.lhs.true:                                    ; preds = %if.end15
  %call27 = call ptr @PyErr_Occurred(), !dbg !4598
  %tobool28 = icmp ne ptr %call27, null, !dbg !4598
  %lnot29 = xor i1 %tobool28, true, !dbg !4598
  %lnot31 = xor i1 %lnot29, true, !dbg !4598
  %lnot33 = xor i1 %lnot31, true, !dbg !4598
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !4598
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !4598
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 0), !dbg !4598
  %tobool37 = icmp ne i64 %expval36, 0, !dbg !4598
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !4599

if.then38:                                        ; preds = %land.lhs.true
  %12 = load ptr, ptr @PyExc_SystemError, align 8, !dbg !4600, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %12, ptr noundef @.str.39), !dbg !4602
  br label %if.end39, !dbg !4603

if.end39:                                         ; preds = %if.then38, %land.lhs.true, %if.end15
  %13 = load ptr, ptr %result, align 8, !dbg !4604, !tbaa !1252
  store ptr %13, ptr %retval, align 8, !dbg !4605
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4605

cleanup:                                          ; preds = %if.end39, %if.then14, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %call) #8, !dbg !4606
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #8, !dbg !4606
  %14 = load ptr, ptr %retval, align 8, !dbg !4606
  ret ptr %14, !dbg !4606
}

declare !dbg !4607 i64 @PyDict_Size(ptr noundef) #1

declare !dbg !4608 i32 @Py_EnterRecursiveCall(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyFunction_FastCallNoKw(ptr noundef %co, ptr noundef %args, i64 noundef %na, ptr noundef %globals) #0 !dbg !4612 {
entry:
  %retval = alloca ptr, align 8
  %co.addr = alloca ptr, align 8
  %args.addr = alloca ptr, align 8
  %na.addr = alloca i64, align 8
  %globals.addr = alloca ptr, align 8
  %f = alloca ptr, align 8
  %tstate = alloca ptr, align 8
  %fastlocals = alloca ptr, align 8
  %i = alloca i64, align 8
  %result = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %co, ptr %co.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %co.addr, metadata !4616, metadata !DIExpression()), !dbg !4625
  store ptr %args, ptr %args.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %args.addr, metadata !4617, metadata !DIExpression()), !dbg !4626
  store i64 %na, ptr %na.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %na.addr, metadata !4618, metadata !DIExpression()), !dbg !4627
  store ptr %globals, ptr %globals.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %globals.addr, metadata !4619, metadata !DIExpression()), !dbg !4628
  call void @llvm.lifetime.start.p0(i64 8, ptr %f) #8, !dbg !4629
  tail call void @llvm.dbg.declare(metadata ptr %f, metadata !4620, metadata !DIExpression()), !dbg !4630
  call void @llvm.lifetime.start.p0(i64 8, ptr %tstate) #8, !dbg !4631
  tail call void @llvm.dbg.declare(metadata ptr %tstate, metadata !4621, metadata !DIExpression()), !dbg !4632
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !4633
  store ptr %call, ptr %tstate, align 8, !dbg !4632, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %fastlocals) #8, !dbg !4634
  tail call void @llvm.dbg.declare(metadata ptr %fastlocals, metadata !4622, metadata !DIExpression()), !dbg !4635
  call void @llvm.lifetime.start.p0(i64 8, ptr %i) #8, !dbg !4636
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !4623, metadata !DIExpression()), !dbg !4637
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #8, !dbg !4638
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4624, metadata !DIExpression()), !dbg !4639
  %0 = load ptr, ptr %tstate, align 8, !dbg !4640, !tbaa !1252
  %1 = load ptr, ptr %co.addr, align 8, !dbg !4641, !tbaa !1252
  %2 = load ptr, ptr %globals.addr, align 8, !dbg !4642, !tbaa !1252
  %call1 = call ptr @PyFrame_New(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef null), !dbg !4643
  store ptr %call1, ptr %f, align 8, !dbg !4644, !tbaa !1252
  %3 = load ptr, ptr %f, align 8, !dbg !4645, !tbaa !1252
  %cmp = icmp eq ptr %3, null, !dbg !4647
  br i1 %cmp, label %if.then, label %if.end, !dbg !4648

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !4649
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4649

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %f, align 8, !dbg !4651, !tbaa !1252
  %5 = load i64, ptr @__pyx_pyframe_localsplus_offset, align 8, !dbg !4651, !tbaa !1368
  %add.ptr = getelementptr i8, ptr %4, i64 %5, !dbg !4651
  store ptr %add.ptr, ptr %fastlocals, align 8, !dbg !4652, !tbaa !1252
  store i64 0, ptr %i, align 8, !dbg !4653, !tbaa !1368
  br label %for.cond, !dbg !4655

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, ptr %i, align 8, !dbg !4656, !tbaa !1368
  %7 = load i64, ptr %na.addr, align 8, !dbg !4658, !tbaa !1368
  %cmp2 = icmp slt i64 %6, %7, !dbg !4659
  br i1 %cmp2, label %for.body, label %for.end, !dbg !4660

for.body:                                         ; preds = %for.cond
  %8 = load ptr, ptr %args.addr, align 8, !dbg !4661, !tbaa !1252
  %9 = load ptr, ptr %8, align 8, !dbg !4661, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %9), !dbg !4661
  %10 = load ptr, ptr %args.addr, align 8, !dbg !4663, !tbaa !1252
  %incdec.ptr = getelementptr ptr, ptr %10, i32 1, !dbg !4663
  store ptr %incdec.ptr, ptr %args.addr, align 8, !dbg !4663, !tbaa !1252
  %11 = load ptr, ptr %10, align 8, !dbg !4664, !tbaa !1252
  %12 = load ptr, ptr %fastlocals, align 8, !dbg !4665, !tbaa !1252
  %13 = load i64, ptr %i, align 8, !dbg !4666, !tbaa !1368
  %arrayidx = getelementptr ptr, ptr %12, i64 %13, !dbg !4665
  store ptr %11, ptr %arrayidx, align 8, !dbg !4667, !tbaa !1252
  br label %for.inc, !dbg !4668

for.inc:                                          ; preds = %for.body
  %14 = load i64, ptr %i, align 8, !dbg !4669, !tbaa !1368
  %inc = add i64 %14, 1, !dbg !4669
  store i64 %inc, ptr %i, align 8, !dbg !4669, !tbaa !1368
  br label %for.cond, !dbg !4670, !llvm.loop !4671

for.end:                                          ; preds = %for.cond
  %15 = load ptr, ptr %f, align 8, !dbg !4673, !tbaa !1252
  %call3 = call ptr @PyEval_EvalFrameEx(ptr noundef %15, i32 noundef 0), !dbg !4674
  store ptr %call3, ptr %result, align 8, !dbg !4675, !tbaa !1252
  %16 = load ptr, ptr %tstate, align 8, !dbg !4676, !tbaa !1252
  %recursion_depth = getelementptr inbounds %struct._ts, ptr %16, i32 0, i32 4, !dbg !4677
  %17 = load i32, ptr %recursion_depth, align 8, !dbg !4678, !tbaa !4679
  %inc4 = add i32 %17, 1, !dbg !4678
  store i32 %inc4, ptr %recursion_depth, align 8, !dbg !4678, !tbaa !4679
  %18 = load ptr, ptr %f, align 8, !dbg !4680, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %18), !dbg !4680
  %19 = load ptr, ptr %tstate, align 8, !dbg !4681, !tbaa !1252
  %recursion_depth5 = getelementptr inbounds %struct._ts, ptr %19, i32 0, i32 4, !dbg !4682
  %20 = load i32, ptr %recursion_depth5, align 8, !dbg !4683, !tbaa !4679
  %dec = add i32 %20, -1, !dbg !4683
  store i32 %dec, ptr %recursion_depth5, align 8, !dbg !4683, !tbaa !4679
  %21 = load ptr, ptr %result, align 8, !dbg !4684, !tbaa !1252
  store ptr %21, ptr %retval, align 8, !dbg !4685
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4685

cleanup:                                          ; preds = %for.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #8, !dbg !4686
  call void @llvm.lifetime.end.p0(i64 8, ptr %i) #8, !dbg !4686
  call void @llvm.lifetime.end.p0(i64 8, ptr %fastlocals) #8, !dbg !4686
  call void @llvm.lifetime.end.p0(i64 8, ptr %tstate) #8, !dbg !4686
  call void @llvm.lifetime.end.p0(i64 8, ptr %f) #8, !dbg !4686
  %22 = load ptr, ptr %retval, align 8, !dbg !4686
  ret ptr %22, !dbg !4686
}

declare !dbg !4687 i32 @PyDict_Next(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !4690 ptr @PyEval_EvalCodeEx(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) #1

declare !dbg !4694 void @Py_LeaveRecursiveCall() #1

declare !dbg !4695 ptr @PyFrame_New(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare !dbg !4698 ptr @PyEval_EvalFrameEx(ptr noundef, i32 noundef) #1

declare !dbg !4701 ptr @PyObject_Call(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_CallMethO(ptr noundef %func, ptr noundef %arg) #3 !dbg !4702 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %self = alloca ptr, align 8
  %result = alloca ptr, align 8
  %cfunc = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !4704, metadata !DIExpression()), !dbg !4709
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !4705, metadata !DIExpression()), !dbg !4710
  call void @llvm.lifetime.start.p0(i64 8, ptr %self) #8, !dbg !4711
  tail call void @llvm.dbg.declare(metadata ptr %self, metadata !4706, metadata !DIExpression()), !dbg !4712
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #8, !dbg !4711
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4707, metadata !DIExpression()), !dbg !4713
  call void @llvm.lifetime.start.p0(i64 8, ptr %cfunc) #8, !dbg !4714
  tail call void @llvm.dbg.declare(metadata ptr %cfunc, metadata !4708, metadata !DIExpression()), !dbg !4715
  %0 = load ptr, ptr %func.addr, align 8, !dbg !4716, !tbaa !1252
  %m_ml = getelementptr inbounds %struct.PyCFunctionObject, ptr %0, i32 0, i32 1, !dbg !4716
  %1 = load ptr, ptr %m_ml, align 8, !dbg !4716, !tbaa !4199
  %ml_meth = getelementptr inbounds %struct.PyMethodDef, ptr %1, i32 0, i32 1, !dbg !4716
  %2 = load ptr, ptr %ml_meth, align 8, !dbg !4716, !tbaa !4533
  store ptr %2, ptr %cfunc, align 8, !dbg !4717, !tbaa !1252
  %3 = load ptr, ptr %func.addr, align 8, !dbg !4718, !tbaa !1252
  %m_ml1 = getelementptr inbounds %struct.PyCFunctionObject, ptr %3, i32 0, i32 1, !dbg !4718
  %4 = load ptr, ptr %m_ml1, align 8, !dbg !4718, !tbaa !4199
  %ml_flags = getelementptr inbounds %struct.PyMethodDef, ptr %4, i32 0, i32 2, !dbg !4718
  %5 = load i32, ptr %ml_flags, align 8, !dbg !4718, !tbaa !4201
  %and = and i32 %5, 32, !dbg !4718
  %tobool = icmp ne i32 %and, 0, !dbg !4718
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4718

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4718

cond.false:                                       ; preds = %entry
  %6 = load ptr, ptr %func.addr, align 8, !dbg !4718, !tbaa !1252
  %m_self = getelementptr inbounds %struct.PyCFunctionObject, ptr %6, i32 0, i32 2, !dbg !4718
  %7 = load ptr, ptr %m_self, align 8, !dbg !4718, !tbaa !4537
  br label %cond.end, !dbg !4718

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ null, %cond.true ], [ %7, %cond.false ], !dbg !4718
  store ptr %cond, ptr %self, align 8, !dbg !4719, !tbaa !1252
  %call = call i32 @Py_EnterRecursiveCall(ptr noundef @.str.38), !dbg !4720
  %tobool2 = icmp ne i32 %call, 0, !dbg !4720
  %lnot = xor i1 %tobool2, true, !dbg !4720
  %lnot3 = xor i1 %lnot, true, !dbg !4720
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !4720
  %conv = sext i32 %lnot.ext to i64, !dbg !4720
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4720
  %tobool4 = icmp ne i64 %expval, 0, !dbg !4720
  br i1 %tobool4, label %if.then, label %if.end, !dbg !4722

if.then:                                          ; preds = %cond.end
  store ptr null, ptr %retval, align 8, !dbg !4723
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4723

if.end:                                           ; preds = %cond.end
  %8 = load ptr, ptr %cfunc, align 8, !dbg !4724, !tbaa !1252
  %9 = load ptr, ptr %self, align 8, !dbg !4725, !tbaa !1252
  %10 = load ptr, ptr %arg.addr, align 8, !dbg !4726, !tbaa !1252
  %call5 = call ptr %8(ptr noundef %9, ptr noundef %10), !dbg !4724
  store ptr %call5, ptr %result, align 8, !dbg !4727, !tbaa !1252
  call void @Py_LeaveRecursiveCall(), !dbg !4728
  %11 = load ptr, ptr %result, align 8, !dbg !4729, !tbaa !1252
  %tobool6 = icmp ne ptr %11, null, !dbg !4729
  %lnot7 = xor i1 %tobool6, true, !dbg !4729
  %lnot9 = xor i1 %lnot7, true, !dbg !4729
  %lnot11 = xor i1 %lnot9, true, !dbg !4729
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !4729
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !4729
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0), !dbg !4729
  %tobool15 = icmp ne i64 %expval14, 0, !dbg !4729
  br i1 %tobool15, label %land.lhs.true, label %if.end28, !dbg !4731

land.lhs.true:                                    ; preds = %if.end
  %call16 = call ptr @PyErr_Occurred(), !dbg !4732
  %tobool17 = icmp ne ptr %call16, null, !dbg !4732
  %lnot18 = xor i1 %tobool17, true, !dbg !4732
  %lnot20 = xor i1 %lnot18, true, !dbg !4732
  %lnot22 = xor i1 %lnot20, true, !dbg !4732
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !4732
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !4732
  %expval25 = call i64 @llvm.expect.i64(i64 %conv24, i64 0), !dbg !4732
  %tobool26 = icmp ne i64 %expval25, 0, !dbg !4732
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !4733

if.then27:                                        ; preds = %land.lhs.true
  %12 = load ptr, ptr @PyExc_SystemError, align 8, !dbg !4734, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %12, ptr noundef @.str.39), !dbg !4736
  br label %if.end28, !dbg !4737

if.end28:                                         ; preds = %if.then27, %land.lhs.true, %if.end
  %13 = load ptr, ptr %result, align 8, !dbg !4738, !tbaa !1252
  store ptr %13, ptr %retval, align 8, !dbg !4739
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4739

cleanup:                                          ; preds = %if.end28, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cfunc) #8, !dbg !4740
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #8, !dbg !4740
  call void @llvm.lifetime.end.p0(i64 8, ptr %self) #8, !dbg !4740
  %14 = load ptr, ptr %retval, align 8, !dbg !4740
  ret ptr %14, !dbg !4740
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx__PyObject_CallOneArg(ptr noundef %func, ptr noundef %arg) #0 !dbg !4741 {
entry:
  %retval = alloca ptr, align 8
  %func.addr = alloca ptr, align 8
  %arg.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %args = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %func, ptr %func.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %func.addr, metadata !4743, metadata !DIExpression()), !dbg !4747
  store ptr %arg, ptr %arg.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %arg.addr, metadata !4744, metadata !DIExpression()), !dbg !4748
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #8, !dbg !4749
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !4745, metadata !DIExpression()), !dbg !4750
  call void @llvm.lifetime.start.p0(i64 8, ptr %args) #8, !dbg !4751
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !4746, metadata !DIExpression()), !dbg !4752
  %call = call ptr @PyTuple_New(i64 noundef 1), !dbg !4753
  store ptr %call, ptr %args, align 8, !dbg !4752, !tbaa !1252
  %0 = load ptr, ptr %args, align 8, !dbg !4754, !tbaa !1252
  %tobool = icmp ne ptr %0, null, !dbg !4754
  %lnot = xor i1 %tobool, true, !dbg !4754
  %lnot1 = xor i1 %lnot, true, !dbg !4754
  %lnot2 = xor i1 %lnot1, true, !dbg !4754
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4754
  %conv = sext i32 %lnot.ext to i64, !dbg !4754
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4754
  %tobool3 = icmp ne i64 %expval, 0, !dbg !4754
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4756

if.then:                                          ; preds = %entry
  store ptr null, ptr %retval, align 8, !dbg !4757
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4757

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr %arg.addr, align 8, !dbg !4758, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %1), !dbg !4758
  %2 = load ptr, ptr %arg.addr, align 8, !dbg !4759, !tbaa !1252
  %3 = load ptr, ptr %args, align 8, !dbg !4759, !tbaa !1252
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %3, i32 0, i32 1, !dbg !4759
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 0, !dbg !4759
  store ptr %2, ptr %arrayidx, align 8, !dbg !4759, !tbaa !1252
  %4 = load ptr, ptr %func.addr, align 8, !dbg !4760, !tbaa !1252
  %5 = load ptr, ptr %args, align 8, !dbg !4761, !tbaa !1252
  %call4 = call ptr @__Pyx_PyObject_Call(ptr noundef %4, ptr noundef %5, ptr noundef null), !dbg !4762
  store ptr %call4, ptr %result, align 8, !dbg !4763, !tbaa !1252
  %6 = load ptr, ptr %args, align 8, !dbg !4764, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %6), !dbg !4764
  %7 = load ptr, ptr %result, align 8, !dbg !4765, !tbaa !1252
  store ptr %7, ptr %retval, align 8, !dbg !4766
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4766

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %args) #8, !dbg !4767
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #8, !dbg !4767
  %8 = load ptr, ptr %retval, align 8, !dbg !4767
  ret ptr %8, !dbg !4767
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_ndim(ptr noundef %o, ptr noundef %x) #0 !dbg !4768 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !4770, metadata !DIExpression()), !dbg !4772
  store ptr %x, ptr %x.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !4771, metadata !DIExpression()), !dbg !4773
  %0 = load ptr, ptr %o.addr, align 8, !dbg !4774, !tbaa !1252
  %call = call ptr @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4ndim_1__get__(ptr noundef %0), !dbg !4775
  ret ptr %call, !dbg !4776
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_name(ptr noundef %o, ptr noundef %x) #0 !dbg !4777 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !4779, metadata !DIExpression()), !dbg !4781
  store ptr %x, ptr %x.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !4780, metadata !DIExpression()), !dbg !4782
  %0 = load ptr, ptr %o.addr, align 8, !dbg !4783, !tbaa !1252
  %call = call ptr @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_1__get__(ptr noundef %0), !dbg !4784
  ret ptr %call, !dbg !4785
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_setprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_name(ptr noundef %o, ptr noundef %v, ptr noundef %x) #0 !dbg !4786 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !4788, metadata !DIExpression()), !dbg !4791
  store ptr %v, ptr %v.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !4789, metadata !DIExpression()), !dbg !4792
  store ptr %x, ptr %x.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !4790, metadata !DIExpression()), !dbg !4793
  %0 = load ptr, ptr %v.addr, align 8, !dbg !4794, !tbaa !1252
  %tobool = icmp ne ptr %0, null, !dbg !4794
  br i1 %tobool, label %if.then, label %if.else, !dbg !4796

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !dbg !4797, !tbaa !1252
  %2 = load ptr, ptr %v.addr, align 8, !dbg !4799, !tbaa !1252
  %call = call i32 @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_3__set__(ptr noundef %1, ptr noundef %2), !dbg !4800
  store i32 %call, ptr %retval, align 4, !dbg !4801
  br label %return, !dbg !4801

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr %o.addr, align 8, !dbg !4802, !tbaa !1252
  %call1 = call i32 @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_5__del__(ptr noundef %3), !dbg !4804
  store i32 %call1, ptr %retval, align 4, !dbg !4805
  br label %return, !dbg !4805

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, ptr %retval, align 4, !dbg !4806
  ret i32 %4, !dbg !4806
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_getprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_obj(ptr noundef %o, ptr noundef %x) #0 !dbg !4807 {
entry:
  %o.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !4809, metadata !DIExpression()), !dbg !4811
  store ptr %x, ptr %x.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !4810, metadata !DIExpression()), !dbg !4812
  %0 = load ptr, ptr %o.addr, align 8, !dbg !4813, !tbaa !1252
  %call = call ptr @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_1__get__(ptr noundef %0), !dbg !4814
  ret ptr %call, !dbg !4815
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_setprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_obj(ptr noundef %o, ptr noundef %v, ptr noundef %x) #0 !dbg !4816 {
entry:
  %retval = alloca i32, align 4
  %o.addr = alloca ptr, align 8
  %v.addr = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  store ptr %o, ptr %o.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %o.addr, metadata !4818, metadata !DIExpression()), !dbg !4821
  store ptr %v, ptr %v.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %v.addr, metadata !4819, metadata !DIExpression()), !dbg !4822
  store ptr %x, ptr %x.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !4820, metadata !DIExpression()), !dbg !4823
  %0 = load ptr, ptr %v.addr, align 8, !dbg !4824, !tbaa !1252
  %tobool = icmp ne ptr %0, null, !dbg !4824
  br i1 %tobool, label %if.then, label %if.else, !dbg !4826

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %o.addr, align 8, !dbg !4827, !tbaa !1252
  %2 = load ptr, ptr %v.addr, align 8, !dbg !4829, !tbaa !1252
  %call = call i32 @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_3__set__(ptr noundef %1, ptr noundef %2), !dbg !4830
  store i32 %call, ptr %retval, align 4, !dbg !4831
  br label %return, !dbg !4831

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr %o.addr, align 8, !dbg !4832, !tbaa !1252
  %call1 = call i32 @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_5__del__(ptr noundef %3), !dbg !4834
  store i32 %call1, ptr %retval, align 4, !dbg !4835
  br label %return, !dbg !4835

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, ptr %retval, align 4, !dbg !4836
  ret i32 %4, !dbg !4836
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4ndim_1__get__(ptr noundef %__pyx_v_self) #0 !dbg !4837 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !4839, metadata !DIExpression()), !dbg !4841
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !4842
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !4840, metadata !DIExpression()), !dbg !4843
  store ptr null, ptr %__pyx_r, align 8, !dbg !4843, !tbaa !1252
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !4844, !tbaa !1252
  %call = call ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4ndim___get__(ptr noundef %0), !dbg !4845
  store ptr %call, ptr %__pyx_r, align 8, !dbg !4846, !tbaa !1252
  %1 = load ptr, ptr %__pyx_r, align 8, !dbg !4847, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !4848
  ret ptr %1, !dbg !4849
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4ndim___get__(ptr noundef %__pyx_v_self) #0 !dbg !4850 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_ndim = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i64, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %tmp = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !4852, metadata !DIExpression()), !dbg !4867
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v_ndim) #8, !dbg !4868
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_ndim, metadata !4853, metadata !DIExpression()), !dbg !4869
  store ptr null, ptr %__pyx_v_ndim, align 8, !dbg !4869, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !4870
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !4854, metadata !DIExpression()), !dbg !4871
  store ptr null, ptr %__pyx_r, align 8, !dbg !4871, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !4872
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !4855, metadata !DIExpression()), !dbg !4873
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !4873, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #8, !dbg !4874
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !4856, metadata !DIExpression()), !dbg !4875
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_3) #8, !dbg !4876
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !4857, metadata !DIExpression()), !dbg !4877
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !4878
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !4858, metadata !DIExpression()), !dbg !4879
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !4879, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #8, !dbg !4880
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !4859, metadata !DIExpression()), !dbg !4881
  store ptr null, ptr %__pyx_filename, align 8, !dbg !4881, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !4882
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !4860, metadata !DIExpression()), !dbg !4883
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !4883, !tbaa !1335
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !4884, !tbaa !1252
  %_ndim = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %0, i32 0, i32 1, !dbg !4885
  %1 = load i64, ptr %_ndim, align 8, !dbg !4885, !tbaa !2927
  %call = call ptr @PyLong_FromSsize_t(i64 noundef %1), !dbg !4886
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !4887, !tbaa !1252
  %2 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4888, !tbaa !1252
  %tobool = icmp ne ptr %2, null, !dbg !4888
  %lnot = xor i1 %tobool, true, !dbg !4888
  %lnot1 = xor i1 %lnot, true, !dbg !4888
  %lnot2 = xor i1 %lnot1, true, !dbg !4888
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4888
  %conv = sext i32 %lnot.ext to i64, !dbg !4888
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !4888
  %tobool3 = icmp ne i64 %expval, 0, !dbg !4888
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4890

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr @__pyx_f, align 16, !dbg !4891, !tbaa !1252
  store ptr %3, ptr %__pyx_filename, align 8, !dbg !4891, !tbaa !1252
  %4 = load ptr, ptr %__pyx_filename, align 8, !dbg !4891, !tbaa !1252
  store i32 21, ptr %__pyx_lineno, align 4, !dbg !4891, !tbaa !1335
  %5 = load i32, ptr %__pyx_lineno, align 4, !dbg !4891, !tbaa !1335
  store i32 1634, ptr %__pyx_clineno, align 4, !dbg !4891, !tbaa !1335
  %6 = load i32, ptr %__pyx_clineno, align 4, !dbg !4891, !tbaa !1335
  br label %__pyx_L1_error, !dbg !4894

if.end:                                           ; preds = %entry
  %7 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4895, !tbaa !1252
  store ptr %7, ptr %__pyx_v_ndim, align 8, !dbg !4896, !tbaa !1252
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !4897, !tbaa !1252
  %8 = load ptr, ptr %__pyx_v_ndim, align 8, !dbg !4898, !tbaa !1252
  %9 = load ptr, ptr @__pyx_int_neg_1, align 8, !dbg !4899, !tbaa !1252
  %call4 = call ptr @__Pyx_PyInt_EqObjC(ptr noundef %8, ptr noundef %9, i64 noundef -1, i64 noundef 0), !dbg !4900
  store ptr %call4, ptr %__pyx_t_1, align 8, !dbg !4901, !tbaa !1252
  %10 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4902, !tbaa !1252
  %tobool5 = icmp ne ptr %10, null, !dbg !4902
  %lnot6 = xor i1 %tobool5, true, !dbg !4902
  %lnot8 = xor i1 %lnot6, true, !dbg !4902
  %lnot10 = xor i1 %lnot8, true, !dbg !4902
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !4902
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !4902
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 0), !dbg !4902
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !4902
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !4904

if.then15:                                        ; preds = %if.end
  %11 = load ptr, ptr @__pyx_f, align 16, !dbg !4905, !tbaa !1252
  store ptr %11, ptr %__pyx_filename, align 8, !dbg !4905, !tbaa !1252
  %12 = load ptr, ptr %__pyx_filename, align 8, !dbg !4905, !tbaa !1252
  store i32 22, ptr %__pyx_lineno, align 4, !dbg !4905, !tbaa !1335
  %13 = load i32, ptr %__pyx_lineno, align 4, !dbg !4905, !tbaa !1335
  store i32 1646, ptr %__pyx_clineno, align 4, !dbg !4905, !tbaa !1335
  %14 = load i32, ptr %__pyx_clineno, align 4, !dbg !4905, !tbaa !1335
  br label %__pyx_L1_error, !dbg !4908

if.end16:                                         ; preds = %if.end
  %15 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4909, !tbaa !1252
  %call17 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %15), !dbg !4910
  store i32 %call17, ptr %__pyx_t_2, align 4, !dbg !4911, !tbaa !1335
  %16 = load i32, ptr %__pyx_t_2, align 4, !dbg !4912, !tbaa !1335
  %cmp = icmp slt i32 %16, 0, !dbg !4912
  %lnot19 = xor i1 %cmp, true, !dbg !4912
  %lnot21 = xor i1 %lnot19, true, !dbg !4912
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !4912
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !4912
  %expval24 = call i64 @llvm.expect.i64(i64 %conv23, i64 0), !dbg !4912
  %tobool25 = icmp ne i64 %expval24, 0, !dbg !4912
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !4914

if.then26:                                        ; preds = %if.end16
  %17 = load ptr, ptr @__pyx_f, align 16, !dbg !4915, !tbaa !1252
  store ptr %17, ptr %__pyx_filename, align 8, !dbg !4915, !tbaa !1252
  %18 = load ptr, ptr %__pyx_filename, align 8, !dbg !4915, !tbaa !1252
  store i32 22, ptr %__pyx_lineno, align 4, !dbg !4915, !tbaa !1335
  %19 = load i32, ptr %__pyx_lineno, align 4, !dbg !4915, !tbaa !1335
  store i32 1648, ptr %__pyx_clineno, align 4, !dbg !4915, !tbaa !1335
  %20 = load i32, ptr %__pyx_clineno, align 4, !dbg !4915, !tbaa !1335
  br label %__pyx_L1_error, !dbg !4918

if.end27:                                         ; preds = %if.end16
  %21 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4919, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %21), !dbg !4919
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !4920, !tbaa !1252
  %22 = load i32, ptr %__pyx_t_2, align 4, !dbg !4921, !tbaa !1335
  %tobool28 = icmp ne i32 %22, 0, !dbg !4921
  br i1 %tobool28, label %if.then29, label %if.end106, !dbg !4922

if.then29:                                        ; preds = %if.end27
  %23 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !4923, !tbaa !1252
  %obj = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %23, i32 0, i32 3, !dbg !4924
  %24 = load ptr, ptr %obj, align 8, !dbg !4924, !tbaa !2598
  %25 = load ptr, ptr @__pyx_n_s_ndim, align 8, !dbg !4925, !tbaa !1252
  %call30 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %24, ptr noundef %25), !dbg !4926
  store ptr %call30, ptr %__pyx_t_1, align 8, !dbg !4927, !tbaa !1252
  %26 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4928, !tbaa !1252
  %tobool31 = icmp ne ptr %26, null, !dbg !4928
  %lnot32 = xor i1 %tobool31, true, !dbg !4928
  %lnot34 = xor i1 %lnot32, true, !dbg !4928
  %lnot36 = xor i1 %lnot34, true, !dbg !4928
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !4928
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !4928
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0), !dbg !4928
  %tobool40 = icmp ne i64 %expval39, 0, !dbg !4928
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !4930

if.then41:                                        ; preds = %if.then29
  %27 = load ptr, ptr @__pyx_f, align 16, !dbg !4931, !tbaa !1252
  store ptr %27, ptr %__pyx_filename, align 8, !dbg !4931, !tbaa !1252
  %28 = load ptr, ptr %__pyx_filename, align 8, !dbg !4931, !tbaa !1252
  store i32 23, ptr %__pyx_lineno, align 4, !dbg !4931, !tbaa !1335
  %29 = load i32, ptr %__pyx_lineno, align 4, !dbg !4931, !tbaa !1335
  store i32 1659, ptr %__pyx_clineno, align 4, !dbg !4931, !tbaa !1335
  %30 = load i32, ptr %__pyx_clineno, align 4, !dbg !4931, !tbaa !1335
  br label %__pyx_L1_error, !dbg !4934

if.end42:                                         ; preds = %if.then29
  %31 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4935, !tbaa !1252
  %call43 = call i64 @__Pyx_PyIndex_AsSsize_t(ptr noundef %31), !dbg !4936
  store i64 %call43, ptr %__pyx_t_3, align 8, !dbg !4937, !tbaa !1368
  %32 = load i64, ptr %__pyx_t_3, align 8, !dbg !4938, !tbaa !1368
  %cmp44 = icmp eq i64 %32, -1, !dbg !4938
  br i1 %cmp44, label %land.rhs, label %land.end, !dbg !4938

land.rhs:                                         ; preds = %if.end42
  %call46 = call ptr @PyErr_Occurred(), !dbg !4938
  %tobool47 = icmp ne ptr %call46, null, !dbg !4938
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end42
  %33 = phi i1 [ false, %if.end42 ], [ %tobool47, %land.rhs ], !dbg !4940
  %lnot48 = xor i1 %33, true, !dbg !4938
  %lnot50 = xor i1 %lnot48, true, !dbg !4938
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !4938
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !4938
  %expval53 = call i64 @llvm.expect.i64(i64 %conv52, i64 0), !dbg !4938
  %tobool54 = icmp ne i64 %expval53, 0, !dbg !4938
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !4941

if.then55:                                        ; preds = %land.end
  %34 = load ptr, ptr @__pyx_f, align 16, !dbg !4942, !tbaa !1252
  store ptr %34, ptr %__pyx_filename, align 8, !dbg !4942, !tbaa !1252
  %35 = load ptr, ptr %__pyx_filename, align 8, !dbg !4942, !tbaa !1252
  store i32 23, ptr %__pyx_lineno, align 4, !dbg !4942, !tbaa !1335
  %36 = load i32, ptr %__pyx_lineno, align 4, !dbg !4942, !tbaa !1335
  store i32 1661, ptr %__pyx_clineno, align 4, !dbg !4942, !tbaa !1335
  %37 = load i32, ptr %__pyx_clineno, align 4, !dbg !4942, !tbaa !1335
  br label %__pyx_L1_error, !dbg !4945

if.end56:                                         ; preds = %land.end
  %38 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4946, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %38), !dbg !4946
  br label %do.body, !dbg !4947

do.body:                                          ; preds = %if.end56
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !4948
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !4861, metadata !DIExpression()), !dbg !4948
  %39 = load ptr, ptr %__pyx_v_ndim, align 8, !dbg !4948, !tbaa !1252
  store ptr %39, ptr %tmp, align 8, !dbg !4948, !tbaa !1252
  %40 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4948, !tbaa !1252
  store ptr %40, ptr %__pyx_v_ndim, align 8, !dbg !4948, !tbaa !1252
  %41 = load ptr, ptr %tmp, align 8, !dbg !4948, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %41), !dbg !4948
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !4947
  br label %do.cond, !dbg !4948

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4948

do.end:                                           ; preds = %do.cond
  %42 = load i64, ptr %__pyx_t_3, align 8, !dbg !4949, !tbaa !1368
  %43 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !4950, !tbaa !1252
  %_ndim57 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %43, i32 0, i32 1, !dbg !4951
  store i64 %42, ptr %_ndim57, align 8, !dbg !4952, !tbaa !2927
  %44 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4953, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %44), !dbg !4953
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !4954, !tbaa !1252
  %45 = load ptr, ptr %__pyx_v_ndim, align 8, !dbg !4955, !tbaa !1252
  %46 = load ptr, ptr @__pyx_int_2, align 8, !dbg !4956, !tbaa !1252
  %call58 = call ptr @PyObject_RichCompare(ptr noundef %45, ptr noundef %46, i32 noundef 4), !dbg !4957
  store ptr %call58, ptr %__pyx_t_1, align 8, !dbg !4958, !tbaa !1252
  %47 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4959, !tbaa !1252
  %tobool59 = icmp ne ptr %47, null, !dbg !4959
  %lnot60 = xor i1 %tobool59, true, !dbg !4959
  %lnot62 = xor i1 %lnot60, true, !dbg !4959
  %lnot64 = xor i1 %lnot62, true, !dbg !4959
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !4959
  %conv66 = sext i32 %lnot.ext65 to i64, !dbg !4959
  %expval67 = call i64 @llvm.expect.i64(i64 %conv66, i64 0), !dbg !4959
  %tobool68 = icmp ne i64 %expval67, 0, !dbg !4959
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !4961

if.then69:                                        ; preds = %do.end
  %48 = load ptr, ptr @__pyx_f, align 16, !dbg !4962, !tbaa !1252
  store ptr %48, ptr %__pyx_filename, align 8, !dbg !4962, !tbaa !1252
  %49 = load ptr, ptr %__pyx_filename, align 8, !dbg !4962, !tbaa !1252
  store i32 24, ptr %__pyx_lineno, align 4, !dbg !4962, !tbaa !1335
  %50 = load i32, ptr %__pyx_lineno, align 4, !dbg !4962, !tbaa !1335
  store i32 1674, ptr %__pyx_clineno, align 4, !dbg !4962, !tbaa !1335
  %51 = load i32, ptr %__pyx_clineno, align 4, !dbg !4962, !tbaa !1335
  br label %__pyx_L1_error, !dbg !4965

if.end70:                                         ; preds = %do.end
  %52 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4966, !tbaa !1252
  %call71 = call i32 @__Pyx_PyObject_IsTrue(ptr noundef %52), !dbg !4967
  store i32 %call71, ptr %__pyx_t_2, align 4, !dbg !4968, !tbaa !1335
  %53 = load i32, ptr %__pyx_t_2, align 4, !dbg !4969, !tbaa !1335
  %cmp72 = icmp slt i32 %53, 0, !dbg !4969
  %lnot74 = xor i1 %cmp72, true, !dbg !4969
  %lnot76 = xor i1 %lnot74, true, !dbg !4969
  %lnot.ext77 = zext i1 %lnot76 to i32, !dbg !4969
  %conv78 = sext i32 %lnot.ext77 to i64, !dbg !4969
  %expval79 = call i64 @llvm.expect.i64(i64 %conv78, i64 0), !dbg !4969
  %tobool80 = icmp ne i64 %expval79, 0, !dbg !4969
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !4971

if.then81:                                        ; preds = %if.end70
  %54 = load ptr, ptr @__pyx_f, align 16, !dbg !4972, !tbaa !1252
  store ptr %54, ptr %__pyx_filename, align 8, !dbg !4972, !tbaa !1252
  %55 = load ptr, ptr %__pyx_filename, align 8, !dbg !4972, !tbaa !1252
  store i32 24, ptr %__pyx_lineno, align 4, !dbg !4972, !tbaa !1335
  %56 = load i32, ptr %__pyx_lineno, align 4, !dbg !4972, !tbaa !1335
  store i32 1675, ptr %__pyx_clineno, align 4, !dbg !4972, !tbaa !1335
  %57 = load i32, ptr %__pyx_clineno, align 4, !dbg !4972, !tbaa !1335
  br label %__pyx_L1_error, !dbg !4975

if.end82:                                         ; preds = %if.end70
  %58 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4976, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %58), !dbg !4976
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !4977, !tbaa !1252
  %59 = load i32, ptr %__pyx_t_2, align 4, !dbg !4978, !tbaa !1335
  %tobool83 = icmp ne i32 %59, 0, !dbg !4978
  %lnot84 = xor i1 %tobool83, true, !dbg !4978
  %lnot86 = xor i1 %lnot84, true, !dbg !4978
  %lnot.ext87 = zext i1 %lnot86 to i32, !dbg !4978
  %conv88 = sext i32 %lnot.ext87 to i64, !dbg !4978
  %expval89 = call i64 @llvm.expect.i64(i64 %conv88, i64 0), !dbg !4978
  %tobool90 = icmp ne i64 %expval89, 0, !dbg !4978
  br i1 %tobool90, label %if.then91, label %if.end105, !dbg !4980

if.then91:                                        ; preds = %if.end82
  %60 = load ptr, ptr @__pyx_builtin_ValueError, align 8, !dbg !4981, !tbaa !1252
  %61 = load ptr, ptr @__pyx_tuple_, align 8, !dbg !4983, !tbaa !1252
  %call92 = call ptr @__Pyx_PyObject_Call(ptr noundef %60, ptr noundef %61, ptr noundef null), !dbg !4984
  store ptr %call92, ptr %__pyx_t_1, align 8, !dbg !4985, !tbaa !1252
  %62 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4986, !tbaa !1252
  %tobool93 = icmp ne ptr %62, null, !dbg !4986
  %lnot94 = xor i1 %tobool93, true, !dbg !4986
  %lnot96 = xor i1 %lnot94, true, !dbg !4986
  %lnot98 = xor i1 %lnot96, true, !dbg !4986
  %lnot.ext99 = zext i1 %lnot98 to i32, !dbg !4986
  %conv100 = sext i32 %lnot.ext99 to i64, !dbg !4986
  %expval101 = call i64 @llvm.expect.i64(i64 %conv100, i64 0), !dbg !4986
  %tobool102 = icmp ne i64 %expval101, 0, !dbg !4986
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !4988

if.then103:                                       ; preds = %if.then91
  %63 = load ptr, ptr @__pyx_f, align 16, !dbg !4989, !tbaa !1252
  store ptr %63, ptr %__pyx_filename, align 8, !dbg !4989, !tbaa !1252
  %64 = load ptr, ptr %__pyx_filename, align 8, !dbg !4989, !tbaa !1252
  store i32 25, ptr %__pyx_lineno, align 4, !dbg !4989, !tbaa !1335
  %65 = load i32, ptr %__pyx_lineno, align 4, !dbg !4989, !tbaa !1335
  store i32 1686, ptr %__pyx_clineno, align 4, !dbg !4989, !tbaa !1335
  %66 = load i32, ptr %__pyx_clineno, align 4, !dbg !4989, !tbaa !1335
  br label %__pyx_L1_error, !dbg !4992

if.end104:                                        ; preds = %if.then91
  %67 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4993, !tbaa !1252
  call void @__Pyx_Raise(ptr noundef %67, ptr noundef null, ptr noundef null, ptr noundef null), !dbg !4994
  %68 = load ptr, ptr %__pyx_t_1, align 8, !dbg !4995, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %68), !dbg !4995
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !4996, !tbaa !1252
  %69 = load ptr, ptr @__pyx_f, align 16, !dbg !4997, !tbaa !1252
  store ptr %69, ptr %__pyx_filename, align 8, !dbg !4997, !tbaa !1252
  %70 = load ptr, ptr %__pyx_filename, align 8, !dbg !4997, !tbaa !1252
  store i32 25, ptr %__pyx_lineno, align 4, !dbg !4997, !tbaa !1335
  %71 = load i32, ptr %__pyx_lineno, align 4, !dbg !4997, !tbaa !1335
  store i32 1690, ptr %__pyx_clineno, align 4, !dbg !4997, !tbaa !1335
  %72 = load i32, ptr %__pyx_clineno, align 4, !dbg !4997, !tbaa !1335
  br label %__pyx_L1_error, !dbg !5000

if.end105:                                        ; preds = %if.end82
  br label %if.end106, !dbg !5001

if.end106:                                        ; preds = %if.end105, %if.end27
  %73 = load ptr, ptr %__pyx_r, align 8, !dbg !5002, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %73), !dbg !5002
  %74 = load ptr, ptr %__pyx_v_ndim, align 8, !dbg !5003, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %74), !dbg !5003
  %75 = load ptr, ptr %__pyx_v_ndim, align 8, !dbg !5004, !tbaa !1252
  store ptr %75, ptr %__pyx_r, align 8, !dbg !5005, !tbaa !1252
  br label %__pyx_L0, !dbg !5006

__pyx_L1_error:                                   ; preds = %if.end104, %if.then103, %if.then81, %if.then69, %if.then55, %if.then41, %if.then26, %if.then15, %if.then
  tail call void @llvm.dbg.label(metadata !4865), !dbg !5007
  %76 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5008, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %76), !dbg !5008
  %77 = load i32, ptr %__pyx_clineno, align 4, !dbg !5009, !tbaa !1335
  %78 = load i32, ptr %__pyx_lineno, align 4, !dbg !5010, !tbaa !1335
  %79 = load ptr, ptr %__pyx_filename, align 8, !dbg !5011, !tbaa !1252
  call void @__Pyx_AddTraceback(ptr noundef @.str.42, i32 noundef %77, i32 noundef %78, ptr noundef %79), !dbg !5012
  store ptr null, ptr %__pyx_r, align 8, !dbg !5013, !tbaa !1252
  br label %__pyx_L0, !dbg !5014

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end106
  tail call void @llvm.dbg.label(metadata !4866), !dbg !5015
  %80 = load ptr, ptr %__pyx_v_ndim, align 8, !dbg !5016, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %80), !dbg !5016
  %81 = load ptr, ptr %__pyx_r, align 8, !dbg !5017, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !5018
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #8, !dbg !5018
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !5018
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_3) #8, !dbg !5018
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #8, !dbg !5018
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !5018
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !5018
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v_ndim) #8, !dbg !5018
  ret ptr %81, !dbg !5019
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyInt_EqObjC(ptr noundef %op1, ptr noundef %op2, i64 noundef %intval, i64 noundef %inplace) #3 !dbg !5020 {
entry:
  %retval = alloca ptr, align 8
  %op1.addr = alloca ptr, align 8
  %op2.addr = alloca ptr, align 8
  %intval.addr = alloca i64, align 8
  %inplace.addr = alloca i64, align 8
  %unequal = alloca i32, align 4
  %uintval = alloca i64, align 8
  %size = alloca i64, align 8
  %digits = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %b = alloca i64, align 8
  %a = alloca double, align 8
  store ptr %op1, ptr %op1.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %op1.addr, metadata !5024, metadata !DIExpression()), !dbg !5039
  store ptr %op2, ptr %op2.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %op2.addr, metadata !5025, metadata !DIExpression()), !dbg !5040
  store i64 %intval, ptr %intval.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %intval.addr, metadata !5026, metadata !DIExpression()), !dbg !5041
  store i64 %inplace, ptr %inplace.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %inplace.addr, metadata !5027, metadata !DIExpression()), !dbg !5042
  %0 = load ptr, ptr %op1.addr, align 8, !dbg !5043, !tbaa !1252
  %1 = load ptr, ptr %op2.addr, align 8, !dbg !5045, !tbaa !1252
  %cmp = icmp eq ptr %0, %1, !dbg !5046
  br i1 %cmp, label %if.then, label %if.end, !dbg !5047

if.then:                                          ; preds = %entry
  call void @_Py_INCREF(ptr noundef @_Py_TrueStruct), !dbg !5048
  store ptr @_Py_TrueStruct, ptr %retval, align 8, !dbg !5048
  br label %return, !dbg !5048

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %op1.addr, align 8, !dbg !5050, !tbaa !1252
  %call = call i32 @_Py_IS_TYPE(ptr noundef %2, ptr noundef @PyLong_Type), !dbg !5050
  %tobool = icmp ne i32 %call, 0, !dbg !5050
  %lnot = xor i1 %tobool, true, !dbg !5050
  %lnot1 = xor i1 %lnot, true, !dbg !5050
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5050
  %conv = sext i32 %lnot.ext to i64, !dbg !5050
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5050
  %tobool2 = icmp ne i64 %expval, 0, !dbg !5050
  br i1 %tobool2, label %if.then3, label %if.end89, !dbg !5051

if.then3:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr %unequal) #8, !dbg !5052
  tail call void @llvm.dbg.declare(metadata ptr %unequal, metadata !5028, metadata !DIExpression()), !dbg !5053
  call void @llvm.lifetime.start.p0(i64 8, ptr %uintval) #8, !dbg !5054
  tail call void @llvm.dbg.declare(metadata ptr %uintval, metadata !5031, metadata !DIExpression()), !dbg !5055
  call void @llvm.lifetime.start.p0(i64 8, ptr %size) #8, !dbg !5056
  tail call void @llvm.dbg.declare(metadata ptr %size, metadata !5032, metadata !DIExpression()), !dbg !5057
  %3 = load ptr, ptr %op1.addr, align 8, !dbg !5058, !tbaa !1252
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %3, i32 0, i32 1, !dbg !5058
  %4 = load i64, ptr %ob_size, align 8, !dbg !5058, !tbaa !2688
  store i64 %4, ptr %size, align 8, !dbg !5057, !tbaa !1368
  call void @llvm.lifetime.start.p0(i64 8, ptr %digits) #8, !dbg !5059
  tail call void @llvm.dbg.declare(metadata ptr %digits, metadata !5033, metadata !DIExpression()), !dbg !5060
  %5 = load ptr, ptr %op1.addr, align 8, !dbg !5061, !tbaa !1252
  %ob_digit = getelementptr inbounds %struct._longobject, ptr %5, i32 0, i32 1, !dbg !5062
  %arraydecay = getelementptr inbounds [1 x i32], ptr %ob_digit, i64 0, i64 0, !dbg !5063
  store ptr %arraydecay, ptr %digits, align 8, !dbg !5060, !tbaa !1252
  %6 = load i64, ptr %intval.addr, align 8, !dbg !5064, !tbaa !1368
  %cmp4 = icmp eq i64 %6, 0, !dbg !5066
  br i1 %cmp4, label %if.then6, label %if.else10, !dbg !5067

if.then6:                                         ; preds = %if.then3
  %7 = load i64, ptr %size, align 8, !dbg !5068, !tbaa !1368
  %cmp7 = icmp eq i64 %7, 0, !dbg !5071
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !5072

if.then9:                                         ; preds = %if.then6
  call void @_Py_INCREF(ptr noundef @_Py_TrueStruct), !dbg !5073
  store ptr @_Py_TrueStruct, ptr %retval, align 8, !dbg !5073
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5073

if.else:                                          ; preds = %if.then6
  call void @_Py_INCREF(ptr noundef @_Py_FalseStruct), !dbg !5074
  store ptr @_Py_FalseStruct, ptr %retval, align 8, !dbg !5074
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5074

if.else10:                                        ; preds = %if.then3
  %8 = load i64, ptr %intval.addr, align 8, !dbg !5075, !tbaa !1368
  %cmp11 = icmp slt i64 %8, 0, !dbg !5077
  br i1 %cmp11, label %if.then13, label %if.else19, !dbg !5078

if.then13:                                        ; preds = %if.else10
  %9 = load i64, ptr %size, align 8, !dbg !5079, !tbaa !1368
  %cmp14 = icmp sge i64 %9, 0, !dbg !5082
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !5083

if.then16:                                        ; preds = %if.then13
  call void @_Py_INCREF(ptr noundef @_Py_FalseStruct), !dbg !5084
  store ptr @_Py_FalseStruct, ptr %retval, align 8, !dbg !5084
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5084

if.end17:                                         ; preds = %if.then13
  %10 = load i64, ptr %intval.addr, align 8, !dbg !5085, !tbaa !1368
  %sub = sub i64 0, %10, !dbg !5086
  store i64 %sub, ptr %intval.addr, align 8, !dbg !5087, !tbaa !1368
  %11 = load i64, ptr %size, align 8, !dbg !5088, !tbaa !1368
  %sub18 = sub i64 0, %11, !dbg !5089
  store i64 %sub18, ptr %size, align 8, !dbg !5090, !tbaa !1368
  br label %if.end24, !dbg !5091

if.else19:                                        ; preds = %if.else10
  %12 = load i64, ptr %size, align 8, !dbg !5092, !tbaa !1368
  %cmp20 = icmp sle i64 %12, 0, !dbg !5095
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !5096

if.then22:                                        ; preds = %if.else19
  call void @_Py_INCREF(ptr noundef @_Py_FalseStruct), !dbg !5097
  store ptr @_Py_FalseStruct, ptr %retval, align 8, !dbg !5097
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5097

if.end23:                                         ; preds = %if.else19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end17
  br label %if.end25

if.end25:                                         ; preds = %if.end24
  %13 = load i64, ptr %intval.addr, align 8, !dbg !5098, !tbaa !1368
  store i64 %13, ptr %uintval, align 8, !dbg !5099, !tbaa !1368
  %14 = load i64, ptr %uintval, align 8, !dbg !5100, !tbaa !1368
  %shr = lshr i64 %14, 60, !dbg !5102
  %tobool26 = icmp ne i64 %shr, 0, !dbg !5102
  br i1 %tobool26, label %if.then27, label %if.else47, !dbg !5103

if.then27:                                        ; preds = %if.end25
  %15 = load i64, ptr %size, align 8, !dbg !5104, !tbaa !1368
  %cmp28 = icmp ne i64 %15, 3, !dbg !5106
  br i1 %cmp28, label %lor.end, label %lor.rhs, !dbg !5107

lor.rhs:                                          ; preds = %if.then27
  %16 = load ptr, ptr %digits, align 8, !dbg !5108, !tbaa !1252
  %arrayidx = getelementptr i32, ptr %16, i64 0, !dbg !5108
  %17 = load i32, ptr %arrayidx, align 4, !dbg !5108, !tbaa !1335
  %conv30 = zext i32 %17 to i64, !dbg !5108
  %18 = load i64, ptr %uintval, align 8, !dbg !5109, !tbaa !1368
  %and = and i64 %18, 1073741823, !dbg !5110
  %cmp31 = icmp ne i64 %conv30, %and, !dbg !5111
  %conv32 = zext i1 %cmp31 to i32, !dbg !5111
  %19 = load ptr, ptr %digits, align 8, !dbg !5112, !tbaa !1252
  %arrayidx33 = getelementptr i32, ptr %19, i64 1, !dbg !5112
  %20 = load i32, ptr %arrayidx33, align 4, !dbg !5112, !tbaa !1335
  %conv34 = zext i32 %20 to i64, !dbg !5112
  %21 = load i64, ptr %uintval, align 8, !dbg !5113, !tbaa !1368
  %shr35 = lshr i64 %21, 30, !dbg !5114
  %and36 = and i64 %shr35, 1073741823, !dbg !5115
  %cmp37 = icmp ne i64 %conv34, %and36, !dbg !5116
  %conv38 = zext i1 %cmp37 to i32, !dbg !5116
  %or = or i32 %conv32, %conv38, !dbg !5117
  %22 = load ptr, ptr %digits, align 8, !dbg !5118, !tbaa !1252
  %arrayidx39 = getelementptr i32, ptr %22, i64 2, !dbg !5118
  %23 = load i32, ptr %arrayidx39, align 4, !dbg !5118, !tbaa !1335
  %conv40 = zext i32 %23 to i64, !dbg !5118
  %24 = load i64, ptr %uintval, align 8, !dbg !5119, !tbaa !1368
  %shr41 = lshr i64 %24, 60, !dbg !5120
  %and42 = and i64 %shr41, 1073741823, !dbg !5121
  %cmp43 = icmp ne i64 %conv40, %and42, !dbg !5122
  %conv44 = zext i1 %cmp43 to i32, !dbg !5122
  %or45 = or i32 %or, %conv44, !dbg !5123
  %tobool46 = icmp ne i32 %or45, 0, !dbg !5107
  br label %lor.end, !dbg !5107

lor.end:                                          ; preds = %lor.rhs, %if.then27
  %25 = phi i1 [ true, %if.then27 ], [ %tobool46, %lor.rhs ]
  %lor.ext = zext i1 %25 to i32, !dbg !5107
  store i32 %lor.ext, ptr %unequal, align 4, !dbg !5124, !tbaa !1335
  br label %if.end81, !dbg !5125

if.else47:                                        ; preds = %if.end25
  %26 = load i64, ptr %uintval, align 8, !dbg !5126, !tbaa !1368
  %shr48 = lshr i64 %26, 30, !dbg !5128
  %tobool49 = icmp ne i64 %shr48, 0, !dbg !5128
  br i1 %tobool49, label %if.then50, label %if.else69, !dbg !5129

if.then50:                                        ; preds = %if.else47
  %27 = load i64, ptr %size, align 8, !dbg !5130, !tbaa !1368
  %cmp51 = icmp ne i64 %27, 2, !dbg !5132
  br i1 %cmp51, label %lor.end67, label %lor.rhs53, !dbg !5133

lor.rhs53:                                        ; preds = %if.then50
  %28 = load ptr, ptr %digits, align 8, !dbg !5134, !tbaa !1252
  %arrayidx54 = getelementptr i32, ptr %28, i64 0, !dbg !5134
  %29 = load i32, ptr %arrayidx54, align 4, !dbg !5134, !tbaa !1335
  %conv55 = zext i32 %29 to i64, !dbg !5134
  %30 = load i64, ptr %uintval, align 8, !dbg !5135, !tbaa !1368
  %and56 = and i64 %30, 1073741823, !dbg !5136
  %cmp57 = icmp ne i64 %conv55, %and56, !dbg !5137
  %conv58 = zext i1 %cmp57 to i32, !dbg !5137
  %31 = load ptr, ptr %digits, align 8, !dbg !5138, !tbaa !1252
  %arrayidx59 = getelementptr i32, ptr %31, i64 1, !dbg !5138
  %32 = load i32, ptr %arrayidx59, align 4, !dbg !5138, !tbaa !1335
  %conv60 = zext i32 %32 to i64, !dbg !5138
  %33 = load i64, ptr %uintval, align 8, !dbg !5139, !tbaa !1368
  %shr61 = lshr i64 %33, 30, !dbg !5140
  %and62 = and i64 %shr61, 1073741823, !dbg !5141
  %cmp63 = icmp ne i64 %conv60, %and62, !dbg !5142
  %conv64 = zext i1 %cmp63 to i32, !dbg !5142
  %or65 = or i32 %conv58, %conv64, !dbg !5143
  %tobool66 = icmp ne i32 %or65, 0, !dbg !5133
  br label %lor.end67, !dbg !5133

lor.end67:                                        ; preds = %lor.rhs53, %if.then50
  %34 = phi i1 [ true, %if.then50 ], [ %tobool66, %lor.rhs53 ]
  %lor.ext68 = zext i1 %34 to i32, !dbg !5133
  store i32 %lor.ext68, ptr %unequal, align 4, !dbg !5144, !tbaa !1335
  br label %if.end80, !dbg !5145

if.else69:                                        ; preds = %if.else47
  %35 = load i64, ptr %size, align 8, !dbg !5146, !tbaa !1368
  %cmp70 = icmp ne i64 %35, 1, !dbg !5147
  br i1 %cmp70, label %lor.end78, label %lor.rhs72, !dbg !5148

lor.rhs72:                                        ; preds = %if.else69
  %36 = load ptr, ptr %digits, align 8, !dbg !5149, !tbaa !1252
  %arrayidx73 = getelementptr i32, ptr %36, i64 0, !dbg !5149
  %37 = load i32, ptr %arrayidx73, align 4, !dbg !5149, !tbaa !1335
  %conv74 = zext i32 %37 to i64, !dbg !5150
  %38 = load i64, ptr %uintval, align 8, !dbg !5151, !tbaa !1368
  %and75 = and i64 %38, 1073741823, !dbg !5152
  %cmp76 = icmp ne i64 %conv74, %and75, !dbg !5153
  br label %lor.end78, !dbg !5148

lor.end78:                                        ; preds = %lor.rhs72, %if.else69
  %39 = phi i1 [ true, %if.else69 ], [ %cmp76, %lor.rhs72 ]
  %lor.ext79 = zext i1 %39 to i32, !dbg !5148
  store i32 %lor.ext79, ptr %unequal, align 4, !dbg !5154, !tbaa !1335
  br label %if.end80

if.end80:                                         ; preds = %lor.end78, %lor.end67
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %lor.end
  %40 = load i32, ptr %unequal, align 4, !dbg !5155, !tbaa !1335
  %cmp82 = icmp eq i32 %40, 0, !dbg !5157
  br i1 %cmp82, label %if.then84, label %if.else85, !dbg !5158

if.then84:                                        ; preds = %if.end81
  call void @_Py_INCREF(ptr noundef @_Py_TrueStruct), !dbg !5159
  store ptr @_Py_TrueStruct, ptr %retval, align 8, !dbg !5159
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5159

if.else85:                                        ; preds = %if.end81
  call void @_Py_INCREF(ptr noundef @_Py_FalseStruct), !dbg !5160
  store ptr @_Py_FalseStruct, ptr %retval, align 8, !dbg !5160
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5160

cleanup:                                          ; preds = %if.else85, %if.then84, %if.then22, %if.then16, %if.else, %if.then9
  call void @llvm.lifetime.end.p0(i64 8, ptr %digits) #8, !dbg !5161
  call void @llvm.lifetime.end.p0(i64 8, ptr %size) #8, !dbg !5161
  call void @llvm.lifetime.end.p0(i64 8, ptr %uintval) #8, !dbg !5161
  call void @llvm.lifetime.end.p0(i64 4, ptr %unequal) #8, !dbg !5161
  br label %return

if.end89:                                         ; preds = %if.end
  %41 = load ptr, ptr %op1.addr, align 8, !dbg !5162, !tbaa !1252
  %call90 = call i32 @_Py_IS_TYPE(ptr noundef %41, ptr noundef @PyFloat_Type), !dbg !5162
  %tobool91 = icmp ne i32 %call90, 0, !dbg !5162
  br i1 %tobool91, label %if.then92, label %if.end100, !dbg !5163

if.then92:                                        ; preds = %if.end89
  call void @llvm.lifetime.start.p0(i64 8, ptr %b) #8, !dbg !5164
  tail call void @llvm.dbg.declare(metadata ptr %b, metadata !5034, metadata !DIExpression()), !dbg !5165
  %42 = load i64, ptr %intval.addr, align 8, !dbg !5166, !tbaa !1368
  store i64 %42, ptr %b, align 8, !dbg !5165, !tbaa !1368
  call void @llvm.lifetime.start.p0(i64 8, ptr %a) #8, !dbg !5167
  tail call void @llvm.dbg.declare(metadata ptr %a, metadata !5038, metadata !DIExpression()), !dbg !5168
  %43 = load ptr, ptr %op1.addr, align 8, !dbg !5169, !tbaa !1252
  %ob_fval = getelementptr inbounds %struct.PyFloatObject, ptr %43, i32 0, i32 1, !dbg !5169
  %44 = load double, ptr %ob_fval, align 8, !dbg !5169, !tbaa !5170
  store double %44, ptr %a, align 8, !dbg !5168, !tbaa !5173
  %45 = load double, ptr %a, align 8, !dbg !5174, !tbaa !5173
  %46 = load i64, ptr %b, align 8, !dbg !5176, !tbaa !1368
  %conv93 = sitofp i64 %46 to double, !dbg !5177
  %cmp94 = fcmp oeq double %45, %conv93, !dbg !5178
  br i1 %cmp94, label %if.then96, label %if.else97, !dbg !5179

if.then96:                                        ; preds = %if.then92
  call void @_Py_INCREF(ptr noundef @_Py_TrueStruct), !dbg !5180
  store ptr @_Py_TrueStruct, ptr %retval, align 8, !dbg !5180
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup98, !dbg !5180

if.else97:                                        ; preds = %if.then92
  call void @_Py_INCREF(ptr noundef @_Py_FalseStruct), !dbg !5181
  store ptr @_Py_FalseStruct, ptr %retval, align 8, !dbg !5181
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup98, !dbg !5181

cleanup98:                                        ; preds = %if.else97, %if.then96
  call void @llvm.lifetime.end.p0(i64 8, ptr %a) #8, !dbg !5182
  call void @llvm.lifetime.end.p0(i64 8, ptr %b) #8, !dbg !5182
  br label %return

if.end100:                                        ; preds = %if.end89
  %47 = load ptr, ptr %op1.addr, align 8, !dbg !5183, !tbaa !1252
  %48 = load ptr, ptr %op2.addr, align 8, !dbg !5184, !tbaa !1252
  %call101 = call ptr @PyObject_RichCompare(ptr noundef %47, ptr noundef %48, i32 noundef 2), !dbg !5185
  store ptr %call101, ptr %retval, align 8, !dbg !5186
  br label %return, !dbg !5186

return:                                           ; preds = %if.end100, %cleanup98, %cleanup, %if.then
  %49 = load ptr, ptr %retval, align 8, !dbg !5187
  ret ptr %49, !dbg !5187
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PyObject_IsTrue(ptr noundef %x) #3 !dbg !5188 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca ptr, align 8
  %is_true = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %x, ptr %x.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !5190, metadata !DIExpression()), !dbg !5192
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_true) #8, !dbg !5193
  tail call void @llvm.dbg.declare(metadata ptr %is_true, metadata !5191, metadata !DIExpression()), !dbg !5194
  %0 = load ptr, ptr %x.addr, align 8, !dbg !5195, !tbaa !1252
  %cmp = icmp eq ptr %0, @_Py_TrueStruct, !dbg !5196
  %conv = zext i1 %cmp to i32, !dbg !5196
  store i32 %conv, ptr %is_true, align 4, !dbg !5194, !tbaa !1335
  %1 = load i32, ptr %is_true, align 4, !dbg !5197, !tbaa !1335
  %2 = load ptr, ptr %x.addr, align 8, !dbg !5199, !tbaa !1252
  %cmp1 = icmp eq ptr %2, @_Py_FalseStruct, !dbg !5200
  %conv2 = zext i1 %cmp1 to i32, !dbg !5200
  %or = or i32 %1, %conv2, !dbg !5201
  %3 = load ptr, ptr %x.addr, align 8, !dbg !5202, !tbaa !1252
  %cmp3 = icmp eq ptr %3, @_Py_NoneStruct, !dbg !5203
  %conv4 = zext i1 %cmp3 to i32, !dbg !5203
  %or5 = or i32 %or, %conv4, !dbg !5204
  %tobool = icmp ne i32 %or5, 0, !dbg !5204
  br i1 %tobool, label %if.then, label %if.else, !dbg !5205

if.then:                                          ; preds = %entry
  %4 = load i32, ptr %is_true, align 4, !dbg !5206, !tbaa !1335
  store i32 %4, ptr %retval, align 4, !dbg !5207
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5207

if.else:                                          ; preds = %entry
  %5 = load ptr, ptr %x.addr, align 8, !dbg !5208, !tbaa !1252
  %call = call i32 @PyObject_IsTrue(ptr noundef %5), !dbg !5209
  store i32 %call, ptr %retval, align 4, !dbg !5210
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5210

cleanup:                                          ; preds = %if.else, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_true) #8, !dbg !5211
  %6 = load i32, ptr %retval, align 4, !dbg !5211
  ret i32 %6, !dbg !5211
}

declare !dbg !5212 ptr @PyObject_RichCompare(ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_Raise(ptr noundef %type, ptr noundef %value, ptr noundef %tb, ptr noundef %cause) #0 !dbg !5213 {
entry:
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  %cause.addr = alloca ptr, align 8
  %owned_instance = alloca ptr, align 8
  %instance_class = alloca ptr, align 8
  %is_subclass = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %args = alloca ptr, align 8
  %fixed_cause = alloca ptr, align 8
  %tstate = alloca ptr, align 8
  %tmp_tb = alloca ptr, align 8
  store ptr %type, ptr %type.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !5217, metadata !DIExpression()), !dbg !5242
  store ptr %value, ptr %value.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !5218, metadata !DIExpression()), !dbg !5243
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %tb.addr, metadata !5219, metadata !DIExpression()), !dbg !5244
  store ptr %cause, ptr %cause.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %cause.addr, metadata !5220, metadata !DIExpression()), !dbg !5245
  call void @llvm.lifetime.start.p0(i64 8, ptr %owned_instance) #8, !dbg !5246
  tail call void @llvm.dbg.declare(metadata ptr %owned_instance, metadata !5221, metadata !DIExpression()), !dbg !5247
  store ptr null, ptr %owned_instance, align 8, !dbg !5247, !tbaa !1252
  %0 = load ptr, ptr %tb.addr, align 8, !dbg !5248, !tbaa !1252
  %cmp = icmp eq ptr %0, @_Py_NoneStruct, !dbg !5250
  br i1 %cmp, label %if.then, label %if.else, !dbg !5251

if.then:                                          ; preds = %entry
  store ptr null, ptr %tb.addr, align 8, !dbg !5252, !tbaa !1252
  br label %if.end3, !dbg !5254

if.else:                                          ; preds = %entry
  %1 = load ptr, ptr %tb.addr, align 8, !dbg !5255, !tbaa !1252
  %tobool = icmp ne ptr %1, null, !dbg !5255
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5257

land.lhs.true:                                    ; preds = %if.else
  %2 = load ptr, ptr %tb.addr, align 8, !dbg !5258, !tbaa !1252
  %call = call i32 @_Py_IS_TYPE(ptr noundef %2, ptr noundef @PyTraceBack_Type), !dbg !5258
  %tobool1 = icmp ne i32 %call, 0, !dbg !5258
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !5259

if.then2:                                         ; preds = %land.lhs.true
  %3 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5260, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %3, ptr noundef @.str.43), !dbg !5262
  br label %bad, !dbg !5263

if.end:                                           ; preds = %land.lhs.true, %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %4 = load ptr, ptr %value.addr, align 8, !dbg !5264, !tbaa !1252
  %cmp4 = icmp eq ptr %4, @_Py_NoneStruct, !dbg !5266
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5267

if.then5:                                         ; preds = %if.end3
  store ptr null, ptr %value.addr, align 8, !dbg !5268, !tbaa !1252
  br label %if.end6, !dbg !5269

if.end6:                                          ; preds = %if.then5, %if.end3
  %5 = load ptr, ptr %type.addr, align 8, !dbg !5270, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %5, i32 0, i32 1, !dbg !5270
  %6 = load ptr, ptr %ob_type, align 8, !dbg !5270, !tbaa !2317
  %call7 = call i32 @PyType_HasFeature(ptr noundef %6, i64 noundef 1073741824), !dbg !5270
  %tobool8 = icmp ne i32 %call7, 0, !dbg !5270
  br i1 %tobool8, label %if.then9, label %if.else14, !dbg !5271

if.then9:                                         ; preds = %if.end6
  %7 = load ptr, ptr %value.addr, align 8, !dbg !5272, !tbaa !1252
  %tobool10 = icmp ne ptr %7, null, !dbg !5272
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !5275

if.then11:                                        ; preds = %if.then9
  %8 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5276, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %8, ptr noundef @.str.44), !dbg !5278
  br label %bad, !dbg !5279

if.end12:                                         ; preds = %if.then9
  %9 = load ptr, ptr %type.addr, align 8, !dbg !5280, !tbaa !1252
  store ptr %9, ptr %value.addr, align 8, !dbg !5281, !tbaa !1252
  %10 = load ptr, ptr %value.addr, align 8, !dbg !5282, !tbaa !1252
  %ob_type13 = getelementptr inbounds %struct._object, ptr %10, i32 0, i32 1, !dbg !5282
  %11 = load ptr, ptr %ob_type13, align 8, !dbg !5282, !tbaa !2317
  store ptr %11, ptr %type.addr, align 8, !dbg !5283, !tbaa !1252
  br label %if.end80, !dbg !5284

if.else14:                                        ; preds = %if.end6
  %12 = load ptr, ptr %type.addr, align 8, !dbg !5285, !tbaa !1252
  %call15 = call i32 @_PyType_Check(ptr noundef %12), !dbg !5285
  %tobool16 = icmp ne i32 %call15, 0, !dbg !5285
  br i1 %tobool16, label %land.lhs.true17, label %if.else78, !dbg !5285

land.lhs.true17:                                  ; preds = %if.else14
  %13 = load ptr, ptr %type.addr, align 8, !dbg !5285, !tbaa !1252
  %call18 = call i32 @PyType_HasFeature(ptr noundef %13, i64 noundef 1073741824), !dbg !5285
  %tobool19 = icmp ne i32 %call18, 0, !dbg !5285
  br i1 %tobool19, label %if.then20, label %if.else78, !dbg !5286

if.then20:                                        ; preds = %land.lhs.true17
  call void @llvm.lifetime.start.p0(i64 8, ptr %instance_class) #8, !dbg !5287
  tail call void @llvm.dbg.declare(metadata ptr %instance_class, metadata !5222, metadata !DIExpression()), !dbg !5288
  store ptr null, ptr %instance_class, align 8, !dbg !5288, !tbaa !1252
  %14 = load ptr, ptr %value.addr, align 8, !dbg !5289, !tbaa !1252
  %tobool21 = icmp ne ptr %14, null, !dbg !5289
  br i1 %tobool21, label %land.lhs.true22, label %if.end42, !dbg !5290

land.lhs.true22:                                  ; preds = %if.then20
  %15 = load ptr, ptr %value.addr, align 8, !dbg !5291, !tbaa !1252
  %ob_type23 = getelementptr inbounds %struct._object, ptr %15, i32 0, i32 1, !dbg !5291
  %16 = load ptr, ptr %ob_type23, align 8, !dbg !5291, !tbaa !2317
  %call24 = call i32 @PyType_HasFeature(ptr noundef %16, i64 noundef 1073741824), !dbg !5291
  %tobool25 = icmp ne i32 %call24, 0, !dbg !5291
  br i1 %tobool25, label %if.then26, label %if.end42, !dbg !5292

if.then26:                                        ; preds = %land.lhs.true22
  %17 = load ptr, ptr %value.addr, align 8, !dbg !5293, !tbaa !1252
  %ob_type27 = getelementptr inbounds %struct._object, ptr %17, i32 0, i32 1, !dbg !5293
  %18 = load ptr, ptr %ob_type27, align 8, !dbg !5293, !tbaa !2317
  store ptr %18, ptr %instance_class, align 8, !dbg !5294, !tbaa !1252
  %19 = load ptr, ptr %instance_class, align 8, !dbg !5295, !tbaa !1252
  %20 = load ptr, ptr %type.addr, align 8, !dbg !5296, !tbaa !1252
  %cmp28 = icmp ne ptr %19, %20, !dbg !5297
  br i1 %cmp28, label %if.then29, label %if.end41, !dbg !5298

if.then29:                                        ; preds = %if.then26
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_subclass) #8, !dbg !5299
  tail call void @llvm.dbg.declare(metadata ptr %is_subclass, metadata !5226, metadata !DIExpression()), !dbg !5300
  %21 = load ptr, ptr %instance_class, align 8, !dbg !5301, !tbaa !1252
  %22 = load ptr, ptr %type.addr, align 8, !dbg !5302, !tbaa !1252
  %call30 = call i32 @PyObject_IsSubclass(ptr noundef %21, ptr noundef %22), !dbg !5303
  store i32 %call30, ptr %is_subclass, align 4, !dbg !5300, !tbaa !1335
  %23 = load i32, ptr %is_subclass, align 4, !dbg !5304, !tbaa !1335
  %tobool31 = icmp ne i32 %23, 0, !dbg !5304
  br i1 %tobool31, label %if.else33, label %if.then32, !dbg !5306

if.then32:                                        ; preds = %if.then29
  store ptr null, ptr %instance_class, align 8, !dbg !5307, !tbaa !1252
  br label %if.end40, !dbg !5309

if.else33:                                        ; preds = %if.then29
  %24 = load i32, ptr %is_subclass, align 4, !dbg !5310, !tbaa !1335
  %cmp34 = icmp eq i32 %24, -1, !dbg !5310
  %lnot = xor i1 %cmp34, true, !dbg !5310
  %lnot35 = xor i1 %lnot, true, !dbg !5310
  %lnot.ext = zext i1 %lnot35 to i32, !dbg !5310
  %conv = sext i32 %lnot.ext to i64, !dbg !5310
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5310
  %tobool36 = icmp ne i64 %expval, 0, !dbg !5310
  br i1 %tobool36, label %if.then37, label %if.else38, !dbg !5312

if.then37:                                        ; preds = %if.else33
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5313

if.else38:                                        ; preds = %if.else33
  %25 = load ptr, ptr %instance_class, align 8, !dbg !5315, !tbaa !1252
  store ptr %25, ptr %type.addr, align 8, !dbg !5317, !tbaa !1252
  br label %if.end39

if.end39:                                         ; preds = %if.else38
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then32
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5318
  br label %cleanup, !dbg !5318

cleanup:                                          ; preds = %if.then37, %if.end40
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_subclass) #8, !dbg !5318
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup75 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end41, !dbg !5319

if.end41:                                         ; preds = %cleanup.cont, %if.then26
  br label %if.end42, !dbg !5320

if.end42:                                         ; preds = %if.end41, %land.lhs.true22, %if.then20
  %26 = load ptr, ptr %instance_class, align 8, !dbg !5321, !tbaa !1252
  %tobool43 = icmp ne ptr %26, null, !dbg !5321
  br i1 %tobool43, label %if.end74, label %if.then44, !dbg !5322

if.then44:                                        ; preds = %if.end42
  call void @llvm.lifetime.start.p0(i64 8, ptr %args) #8, !dbg !5323
  tail call void @llvm.dbg.declare(metadata ptr %args, metadata !5231, metadata !DIExpression()), !dbg !5324
  %27 = load ptr, ptr %value.addr, align 8, !dbg !5325, !tbaa !1252
  %tobool45 = icmp ne ptr %27, null, !dbg !5325
  br i1 %tobool45, label %if.else48, label %if.then46, !dbg !5327

if.then46:                                        ; preds = %if.then44
  %call47 = call ptr @PyTuple_New(i64 noundef 0), !dbg !5328
  store ptr %call47, ptr %args, align 8, !dbg !5329, !tbaa !1252
  br label %if.end56, !dbg !5330

if.else48:                                        ; preds = %if.then44
  %28 = load ptr, ptr %value.addr, align 8, !dbg !5331, !tbaa !1252
  %ob_type49 = getelementptr inbounds %struct._object, ptr %28, i32 0, i32 1, !dbg !5331
  %29 = load ptr, ptr %ob_type49, align 8, !dbg !5331, !tbaa !2317
  %call50 = call i32 @PyType_HasFeature(ptr noundef %29, i64 noundef 67108864), !dbg !5331
  %tobool51 = icmp ne i32 %call50, 0, !dbg !5331
  br i1 %tobool51, label %if.then52, label %if.else53, !dbg !5333

if.then52:                                        ; preds = %if.else48
  %30 = load ptr, ptr %value.addr, align 8, !dbg !5334, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %30), !dbg !5334
  %31 = load ptr, ptr %value.addr, align 8, !dbg !5336, !tbaa !1252
  store ptr %31, ptr %args, align 8, !dbg !5337, !tbaa !1252
  br label %if.end55, !dbg !5338

if.else53:                                        ; preds = %if.else48
  %32 = load ptr, ptr %value.addr, align 8, !dbg !5339, !tbaa !1252
  %call54 = call ptr (i64, ...) @PyTuple_Pack(i64 noundef 1, ptr noundef %32), !dbg !5340
  store ptr %call54, ptr %args, align 8, !dbg !5341, !tbaa !1252
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.then52
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then46
  %33 = load ptr, ptr %args, align 8, !dbg !5342, !tbaa !1252
  %tobool57 = icmp ne ptr %33, null, !dbg !5342
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !5344

if.then58:                                        ; preds = %if.end56
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup71, !dbg !5345

if.end59:                                         ; preds = %if.end56
  %34 = load ptr, ptr %type.addr, align 8, !dbg !5346, !tbaa !1252
  %35 = load ptr, ptr %args, align 8, !dbg !5347, !tbaa !1252
  %call60 = call ptr @PyObject_Call(ptr noundef %34, ptr noundef %35, ptr noundef null), !dbg !5348
  store ptr %call60, ptr %owned_instance, align 8, !dbg !5349, !tbaa !1252
  %36 = load ptr, ptr %args, align 8, !dbg !5350, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %36), !dbg !5350
  %37 = load ptr, ptr %owned_instance, align 8, !dbg !5351, !tbaa !1252
  %tobool61 = icmp ne ptr %37, null, !dbg !5351
  br i1 %tobool61, label %if.end63, label %if.then62, !dbg !5353

if.then62:                                        ; preds = %if.end59
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup71, !dbg !5354

if.end63:                                         ; preds = %if.end59
  %38 = load ptr, ptr %owned_instance, align 8, !dbg !5355, !tbaa !1252
  store ptr %38, ptr %value.addr, align 8, !dbg !5356, !tbaa !1252
  %39 = load ptr, ptr %value.addr, align 8, !dbg !5357, !tbaa !1252
  %ob_type64 = getelementptr inbounds %struct._object, ptr %39, i32 0, i32 1, !dbg !5357
  %40 = load ptr, ptr %ob_type64, align 8, !dbg !5357, !tbaa !2317
  %call65 = call i32 @PyType_HasFeature(ptr noundef %40, i64 noundef 1073741824), !dbg !5357
  %tobool66 = icmp ne i32 %call65, 0, !dbg !5357
  br i1 %tobool66, label %if.end70, label %if.then67, !dbg !5359

if.then67:                                        ; preds = %if.end63
  %41 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5360, !tbaa !1252
  %42 = load ptr, ptr %type.addr, align 8, !dbg !5362, !tbaa !1252
  %43 = load ptr, ptr %value.addr, align 8, !dbg !5363, !tbaa !1252
  %ob_type68 = getelementptr inbounds %struct._object, ptr %43, i32 0, i32 1, !dbg !5363
  %44 = load ptr, ptr %ob_type68, align 8, !dbg !5363, !tbaa !2317
  %call69 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %41, ptr noundef @.str.45, ptr noundef %42, ptr noundef %44), !dbg !5364
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup71, !dbg !5365

if.end70:                                         ; preds = %if.end63
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5366
  br label %cleanup71, !dbg !5366

cleanup71:                                        ; preds = %if.then67, %if.then62, %if.then58, %if.end70
  call void @llvm.lifetime.end.p0(i64 8, ptr %args) #8, !dbg !5366
  %cleanup.dest72 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest72, label %cleanup75 [
    i32 0, label %cleanup.cont73
  ]

cleanup.cont73:                                   ; preds = %cleanup71
  br label %if.end74, !dbg !5367

if.end74:                                         ; preds = %cleanup.cont73, %if.end42
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5368
  br label %cleanup75, !dbg !5368

cleanup75:                                        ; preds = %if.end74, %cleanup71, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %instance_class) #8, !dbg !5368
  %cleanup.dest76 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest76, label %cleanup120 [
    i32 0, label %cleanup.cont77
    i32 2, label %bad
  ]

cleanup.cont77:                                   ; preds = %cleanup75
  br label %if.end79, !dbg !5369

if.else78:                                        ; preds = %land.lhs.true17, %if.else14
  %45 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5370, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %45, ptr noundef @.str.46), !dbg !5372
  br label %bad, !dbg !5373

if.end79:                                         ; preds = %cleanup.cont77
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.end12
  %46 = load ptr, ptr %cause.addr, align 8, !dbg !5374, !tbaa !1252
  %tobool81 = icmp ne ptr %46, null, !dbg !5374
  br i1 %tobool81, label %if.then82, label %if.end110, !dbg !5375

if.then82:                                        ; preds = %if.end80
  call void @llvm.lifetime.start.p0(i64 8, ptr %fixed_cause) #8, !dbg !5376
  tail call void @llvm.dbg.declare(metadata ptr %fixed_cause, metadata !5234, metadata !DIExpression()), !dbg !5377
  %47 = load ptr, ptr %cause.addr, align 8, !dbg !5378, !tbaa !1252
  %cmp83 = icmp eq ptr %47, @_Py_NoneStruct, !dbg !5380
  br i1 %cmp83, label %if.then85, label %if.else86, !dbg !5381

if.then85:                                        ; preds = %if.then82
  store ptr null, ptr %fixed_cause, align 8, !dbg !5382, !tbaa !1252
  br label %if.end106, !dbg !5384

if.else86:                                        ; preds = %if.then82
  %48 = load ptr, ptr %cause.addr, align 8, !dbg !5385, !tbaa !1252
  %call87 = call i32 @_PyType_Check(ptr noundef %48), !dbg !5385
  %tobool88 = icmp ne i32 %call87, 0, !dbg !5385
  br i1 %tobool88, label %land.lhs.true89, label %if.else98, !dbg !5385

land.lhs.true89:                                  ; preds = %if.else86
  %49 = load ptr, ptr %cause.addr, align 8, !dbg !5385, !tbaa !1252
  %call90 = call i32 @PyType_HasFeature(ptr noundef %49, i64 noundef 1073741824), !dbg !5385
  %tobool91 = icmp ne i32 %call90, 0, !dbg !5385
  br i1 %tobool91, label %if.then92, label %if.else98, !dbg !5387

if.then92:                                        ; preds = %land.lhs.true89
  %50 = load ptr, ptr %cause.addr, align 8, !dbg !5388, !tbaa !1252
  %call93 = call ptr @PyObject_CallObject(ptr noundef %50, ptr noundef null), !dbg !5390
  store ptr %call93, ptr %fixed_cause, align 8, !dbg !5391, !tbaa !1252
  %51 = load ptr, ptr %fixed_cause, align 8, !dbg !5392, !tbaa !1252
  %cmp94 = icmp eq ptr %51, null, !dbg !5394
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !5395

if.then96:                                        ; preds = %if.then92
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup107, !dbg !5396

if.end97:                                         ; preds = %if.then92
  br label %if.end105, !dbg !5397

if.else98:                                        ; preds = %land.lhs.true89, %if.else86
  %52 = load ptr, ptr %cause.addr, align 8, !dbg !5398, !tbaa !1252
  %ob_type99 = getelementptr inbounds %struct._object, ptr %52, i32 0, i32 1, !dbg !5398
  %53 = load ptr, ptr %ob_type99, align 8, !dbg !5398, !tbaa !2317
  %call100 = call i32 @PyType_HasFeature(ptr noundef %53, i64 noundef 1073741824), !dbg !5398
  %tobool101 = icmp ne i32 %call100, 0, !dbg !5398
  br i1 %tobool101, label %if.then102, label %if.else103, !dbg !5400

if.then102:                                       ; preds = %if.else98
  %54 = load ptr, ptr %cause.addr, align 8, !dbg !5401, !tbaa !1252
  store ptr %54, ptr %fixed_cause, align 8, !dbg !5403, !tbaa !1252
  %55 = load ptr, ptr %fixed_cause, align 8, !dbg !5404, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %55), !dbg !5404
  br label %if.end104, !dbg !5405

if.else103:                                       ; preds = %if.else98
  %56 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5406, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %56, ptr noundef @.str.47), !dbg !5408
  store i32 2, ptr %cleanup.dest.slot, align 4
  br label %cleanup107, !dbg !5409

if.end104:                                        ; preds = %if.then102
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end97
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then85
  %57 = load ptr, ptr %value.addr, align 8, !dbg !5410, !tbaa !1252
  %58 = load ptr, ptr %fixed_cause, align 8, !dbg !5411, !tbaa !1252
  call void @PyException_SetCause(ptr noundef %57, ptr noundef %58), !dbg !5412
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5413
  br label %cleanup107, !dbg !5413

cleanup107:                                       ; preds = %if.else103, %if.then96, %if.end106
  call void @llvm.lifetime.end.p0(i64 8, ptr %fixed_cause) #8, !dbg !5413
  %cleanup.dest108 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest108, label %cleanup120 [
    i32 0, label %cleanup.cont109
    i32 2, label %bad
  ]

cleanup.cont109:                                  ; preds = %cleanup107
  br label %if.end110, !dbg !5414

if.end110:                                        ; preds = %cleanup.cont109, %if.end80
  %59 = load ptr, ptr %type.addr, align 8, !dbg !5415, !tbaa !1252
  %60 = load ptr, ptr %value.addr, align 8, !dbg !5416, !tbaa !1252
  call void @PyErr_SetObject(ptr noundef %59, ptr noundef %60), !dbg !5417
  %61 = load ptr, ptr %tb.addr, align 8, !dbg !5418, !tbaa !1252
  %tobool111 = icmp ne ptr %61, null, !dbg !5418
  br i1 %tobool111, label %if.then112, label %if.end119, !dbg !5419

if.then112:                                       ; preds = %if.end110
  call void @llvm.lifetime.start.p0(i64 8, ptr %tstate) #8, !dbg !5420
  tail call void @llvm.dbg.declare(metadata ptr %tstate, metadata !5237, metadata !DIExpression()), !dbg !5421
  %call113 = call ptr @_PyThreadState_UncheckedGet(), !dbg !5422
  store ptr %call113, ptr %tstate, align 8, !dbg !5421, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp_tb) #8, !dbg !5423
  tail call void @llvm.dbg.declare(metadata ptr %tmp_tb, metadata !5240, metadata !DIExpression()), !dbg !5424
  %62 = load ptr, ptr %tstate, align 8, !dbg !5425, !tbaa !1252
  %curexc_traceback = getelementptr inbounds %struct._ts, ptr %62, i32 0, i32 16, !dbg !5426
  %63 = load ptr, ptr %curexc_traceback, align 8, !dbg !5426, !tbaa !3310
  store ptr %63, ptr %tmp_tb, align 8, !dbg !5424, !tbaa !1252
  %64 = load ptr, ptr %tb.addr, align 8, !dbg !5427, !tbaa !1252
  %65 = load ptr, ptr %tmp_tb, align 8, !dbg !5429, !tbaa !1252
  %cmp114 = icmp ne ptr %64, %65, !dbg !5430
  br i1 %cmp114, label %if.then116, label %if.end118, !dbg !5431

if.then116:                                       ; preds = %if.then112
  %66 = load ptr, ptr %tb.addr, align 8, !dbg !5432, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %66), !dbg !5432
  %67 = load ptr, ptr %tb.addr, align 8, !dbg !5434, !tbaa !1252
  %68 = load ptr, ptr %tstate, align 8, !dbg !5435, !tbaa !1252
  %curexc_traceback117 = getelementptr inbounds %struct._ts, ptr %68, i32 0, i32 16, !dbg !5436
  store ptr %67, ptr %curexc_traceback117, align 8, !dbg !5437, !tbaa !3310
  %69 = load ptr, ptr %tmp_tb, align 8, !dbg !5438, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %69), !dbg !5438
  br label %if.end118, !dbg !5439

if.end118:                                        ; preds = %if.then116, %if.then112
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp_tb) #8, !dbg !5440
  call void @llvm.lifetime.end.p0(i64 8, ptr %tstate) #8, !dbg !5440
  br label %if.end119, !dbg !5441

if.end119:                                        ; preds = %if.end118, %if.end110
  br label %bad, !dbg !5418

bad:                                              ; preds = %if.end119, %cleanup107, %cleanup75, %if.else78, %if.then11, %if.then2
  tail call void @llvm.dbg.label(metadata !5241), !dbg !5442
  %70 = load ptr, ptr %owned_instance, align 8, !dbg !5443, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %70), !dbg !5443
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup120, !dbg !5444

cleanup120:                                       ; preds = %bad, %cleanup107, %cleanup75
  call void @llvm.lifetime.end.p0(i64 8, ptr %owned_instance) #8, !dbg !5445
  ret void, !dbg !5445
}

declare !dbg !5446 i32 @PyObject_IsTrue(ptr noundef) #1

declare !dbg !5447 i32 @PyObject_IsSubclass(ptr noundef, ptr noundef) #1

declare !dbg !5448 ptr @PyObject_CallObject(ptr noundef, ptr noundef) #1

declare !dbg !5449 void @PyException_SetCause(ptr noundef, ptr noundef) #1

declare !dbg !5452 void @PyErr_SetObject(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_1__get__(ptr noundef %__pyx_v_self) #0 !dbg !5453 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5455, metadata !DIExpression()), !dbg !5457
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !5458
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5456, metadata !DIExpression()), !dbg !5459
  store ptr null, ptr %__pyx_r, align 8, !dbg !5459, !tbaa !1252
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5460, !tbaa !1252
  %call = call ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name___get__(ptr noundef %0), !dbg !5461
  store ptr %call, ptr %__pyx_r, align 8, !dbg !5462, !tbaa !1252
  %1 = load ptr, ptr %__pyx_r, align 8, !dbg !5463, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !5464
  ret ptr %1, !dbg !5465
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name___get__(ptr noundef %__pyx_v_self) #0 !dbg !5466 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5468, metadata !DIExpression()), !dbg !5471
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !5472
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5469, metadata !DIExpression()), !dbg !5473
  store ptr null, ptr %__pyx_r, align 8, !dbg !5473, !tbaa !1252
  %0 = load ptr, ptr %__pyx_r, align 8, !dbg !5474, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %0), !dbg !5474
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5475, !tbaa !1252
  %name = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %1, i32 0, i32 2, !dbg !5475
  %2 = load ptr, ptr %name, align 8, !dbg !5475, !tbaa !2590
  call void @_Py_INCREF(ptr noundef %2), !dbg !5475
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5476, !tbaa !1252
  %name1 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %3, i32 0, i32 2, !dbg !5477
  %4 = load ptr, ptr %name1, align 8, !dbg !5477, !tbaa !2590
  store ptr %4, ptr %__pyx_r, align 8, !dbg !5478, !tbaa !1252
  br label %__pyx_L0, !dbg !5479

__pyx_L0:                                         ; preds = %entry
  tail call void @llvm.dbg.label(metadata !5470), !dbg !5480
  %5 = load ptr, ptr %__pyx_r, align 8, !dbg !5481, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !5482
  ret ptr %5, !dbg !5483
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_3__set__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_value) #0 !dbg !5484 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_value.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5486, metadata !DIExpression()), !dbg !5489
  store ptr %__pyx_v_value, ptr %__pyx_v_value.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_value.addr, metadata !5487, metadata !DIExpression()), !dbg !5490
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #8, !dbg !5491
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5488, metadata !DIExpression()), !dbg !5492
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5493, !tbaa !1252
  %1 = load ptr, ptr %__pyx_v_value.addr, align 8, !dbg !5494, !tbaa !1252
  %call = call i32 @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_2__set__(ptr noundef %0, ptr noundef %1), !dbg !5495
  store i32 %call, ptr %__pyx_r, align 4, !dbg !5496, !tbaa !1335
  %2 = load i32, ptr %__pyx_r, align 4, !dbg !5497, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #8, !dbg !5498
  ret i32 %2, !dbg !5499
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_5__del__(ptr noundef %__pyx_v_self) #0 !dbg !5500 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5502, metadata !DIExpression()), !dbg !5504
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #8, !dbg !5505
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5503, metadata !DIExpression()), !dbg !5506
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5507, !tbaa !1252
  %call = call i32 @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_4__del__(ptr noundef %0), !dbg !5508
  store i32 %call, ptr %__pyx_r, align 4, !dbg !5509, !tbaa !1335
  %1 = load i32, ptr %__pyx_r, align 4, !dbg !5510, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #8, !dbg !5511
  ret i32 %1, !dbg !5512
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_2__set__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_value) #0 !dbg !5513 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_value.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5517, metadata !DIExpression()), !dbg !5526
  store ptr %__pyx_v_value, ptr %__pyx_v_value.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_value.addr, metadata !5518, metadata !DIExpression()), !dbg !5527
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #8, !dbg !5528
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5519, metadata !DIExpression()), !dbg !5529
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !5530
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !5520, metadata !DIExpression()), !dbg !5531
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !5531, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !5532
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !5521, metadata !DIExpression()), !dbg !5533
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !5533, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #8, !dbg !5534
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !5522, metadata !DIExpression()), !dbg !5535
  store ptr null, ptr %__pyx_filename, align 8, !dbg !5535, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !5536
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !5523, metadata !DIExpression()), !dbg !5537
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !5537, !tbaa !1335
  %0 = load ptr, ptr %__pyx_v_value.addr, align 8, !dbg !5538, !tbaa !1252
  %call = call i32 @_Py_IS_TYPE(ptr noundef %0, ptr noundef @PyUnicode_Type), !dbg !5538
  %tobool = icmp ne i32 %call, 0, !dbg !5538
  %lnot = xor i1 %tobool, true, !dbg !5538
  %lnot1 = xor i1 %lnot, true, !dbg !5538
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5538
  %conv = sext i32 %lnot.ext to i64, !dbg !5538
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5538
  %tobool2 = icmp ne i64 %expval, 0, !dbg !5538
  br i1 %tobool2, label %if.end, label %lor.lhs.false, !dbg !5540

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr %__pyx_v_value.addr, align 8, !dbg !5541, !tbaa !1252
  %cmp = icmp eq ptr %1, @_Py_NoneStruct, !dbg !5542
  br i1 %cmp, label %if.end, label %lor.lhs.false4, !dbg !5543

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %2 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5544, !tbaa !1252
  %3 = load ptr, ptr %__pyx_v_value.addr, align 8, !dbg !5545, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %3, i32 0, i32 1, !dbg !5545
  %4 = load ptr, ptr %ob_type, align 8, !dbg !5545, !tbaa !2317
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %4, i32 0, i32 1, !dbg !5546
  %5 = load ptr, ptr %tp_name, align 8, !dbg !5546, !tbaa !2547
  %call5 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %2, ptr noundef @.str.30, ptr noundef @.str.34, ptr noundef %5), !dbg !5547
  br i1 false, label %if.end, label %if.then, !dbg !5548

if.then:                                          ; preds = %lor.lhs.false4
  %6 = load ptr, ptr @__pyx_f, align 16, !dbg !5549, !tbaa !1252
  store ptr %6, ptr %__pyx_filename, align 8, !dbg !5549, !tbaa !1252
  %7 = load ptr, ptr %__pyx_filename, align 8, !dbg !5549, !tbaa !1252
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !5549, !tbaa !1335
  %8 = load i32, ptr %__pyx_lineno, align 4, !dbg !5549, !tbaa !1335
  store i32 1798, ptr %__pyx_clineno, align 4, !dbg !5549, !tbaa !1335
  %9 = load i32, ptr %__pyx_clineno, align 4, !dbg !5549, !tbaa !1335
  br label %__pyx_L1_error, !dbg !5552

if.end:                                           ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  %10 = load ptr, ptr %__pyx_v_value.addr, align 8, !dbg !5553, !tbaa !1252
  store ptr %10, ptr %__pyx_t_1, align 8, !dbg !5554, !tbaa !1252
  %11 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5555, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %11), !dbg !5555
  %12 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5556, !tbaa !1252
  %name = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %12, i32 0, i32 2, !dbg !5556
  %13 = load ptr, ptr %name, align 8, !dbg !5556, !tbaa !2590
  call void @_Py_DECREF(ptr noundef %13), !dbg !5556
  %14 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5557, !tbaa !1252
  %15 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5558, !tbaa !1252
  %name6 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %15, i32 0, i32 2, !dbg !5559
  store ptr %14, ptr %name6, align 8, !dbg !5560, !tbaa !2590
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !5561, !tbaa !1252
  store i32 0, ptr %__pyx_r, align 4, !dbg !5562, !tbaa !1335
  br label %__pyx_L0, !dbg !5563

__pyx_L1_error:                                   ; preds = %if.then
  tail call void @llvm.dbg.label(metadata !5524), !dbg !5564
  %16 = load ptr, ptr %__pyx_t_1, align 8, !dbg !5565, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %16), !dbg !5565
  %17 = load i32, ptr %__pyx_clineno, align 4, !dbg !5566, !tbaa !1335
  %18 = load i32, ptr %__pyx_lineno, align 4, !dbg !5567, !tbaa !1335
  %19 = load ptr, ptr %__pyx_filename, align 8, !dbg !5568, !tbaa !1252
  call void @__Pyx_AddTraceback(ptr noundef @.str.48, i32 noundef %17, i32 noundef %18, ptr noundef %19), !dbg !5569
  store i32 -1, ptr %__pyx_r, align 4, !dbg !5570, !tbaa !1335
  br label %__pyx_L0, !dbg !5571

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end
  tail call void @llvm.dbg.label(metadata !5525), !dbg !5572
  %20 = load i32, ptr %__pyx_r, align 4, !dbg !5573, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !5574
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #8, !dbg !5574
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !5574
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !5574
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #8, !dbg !5574
  ret i32 %20, !dbg !5575
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_4__del__(ptr noundef %__pyx_v_self) #0 !dbg !5576 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5580, metadata !DIExpression()), !dbg !5582
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #8, !dbg !5583
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5581, metadata !DIExpression()), !dbg !5584
  call void @_Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !5585
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5586, !tbaa !1252
  %name = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %0, i32 0, i32 2, !dbg !5586
  %1 = load ptr, ptr %name, align 8, !dbg !5586, !tbaa !2590
  call void @_Py_DECREF(ptr noundef %1), !dbg !5586
  %2 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5587, !tbaa !1252
  %name1 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %2, i32 0, i32 2, !dbg !5588
  store ptr @_Py_NoneStruct, ptr %name1, align 8, !dbg !5589, !tbaa !2590
  store i32 0, ptr %__pyx_r, align 4, !dbg !5590, !tbaa !1335
  %3 = load i32, ptr %__pyx_r, align 4, !dbg !5591, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #8, !dbg !5592
  ret i32 %3, !dbg !5593
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_1__get__(ptr noundef %__pyx_v_self) #0 !dbg !5594 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5596, metadata !DIExpression()), !dbg !5598
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !5599
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5597, metadata !DIExpression()), !dbg !5600
  store ptr null, ptr %__pyx_r, align 8, !dbg !5600, !tbaa !1252
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5601, !tbaa !1252
  %call = call ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj___get__(ptr noundef %0), !dbg !5602
  store ptr %call, ptr %__pyx_r, align 8, !dbg !5603, !tbaa !1252
  %1 = load ptr, ptr %__pyx_r, align 8, !dbg !5604, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !5605
  ret ptr %1, !dbg !5606
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj___get__(ptr noundef %__pyx_v_self) #0 !dbg !5607 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5609, metadata !DIExpression()), !dbg !5612
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !5613
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5610, metadata !DIExpression()), !dbg !5614
  store ptr null, ptr %__pyx_r, align 8, !dbg !5614, !tbaa !1252
  %0 = load ptr, ptr %__pyx_r, align 8, !dbg !5615, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %0), !dbg !5615
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5616, !tbaa !1252
  %obj = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %1, i32 0, i32 3, !dbg !5616
  %2 = load ptr, ptr %obj, align 8, !dbg !5616, !tbaa !2598
  call void @_Py_INCREF(ptr noundef %2), !dbg !5616
  %3 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5617, !tbaa !1252
  %obj1 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %3, i32 0, i32 3, !dbg !5618
  %4 = load ptr, ptr %obj1, align 8, !dbg !5618, !tbaa !2598
  store ptr %4, ptr %__pyx_r, align 8, !dbg !5619, !tbaa !1252
  br label %__pyx_L0, !dbg !5620

__pyx_L0:                                         ; preds = %entry
  tail call void @llvm.dbg.label(metadata !5611), !dbg !5621
  %5 = load ptr, ptr %__pyx_r, align 8, !dbg !5622, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !5623
  ret ptr %5, !dbg !5624
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_3__set__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_value) #0 !dbg !5625 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_value.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5627, metadata !DIExpression()), !dbg !5630
  store ptr %__pyx_v_value, ptr %__pyx_v_value.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_value.addr, metadata !5628, metadata !DIExpression()), !dbg !5631
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #8, !dbg !5632
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5629, metadata !DIExpression()), !dbg !5633
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5634, !tbaa !1252
  %1 = load ptr, ptr %__pyx_v_value.addr, align 8, !dbg !5635, !tbaa !1252
  %call = call i32 @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_2__set__(ptr noundef %0, ptr noundef %1), !dbg !5636
  store i32 %call, ptr %__pyx_r, align 4, !dbg !5637, !tbaa !1335
  %2 = load i32, ptr %__pyx_r, align 4, !dbg !5638, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #8, !dbg !5639
  ret i32 %2, !dbg !5640
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_5__del__(ptr noundef %__pyx_v_self) #0 !dbg !5641 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5643, metadata !DIExpression()), !dbg !5645
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #8, !dbg !5646
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5644, metadata !DIExpression()), !dbg !5647
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5648, !tbaa !1252
  %call = call i32 @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_4__del__(ptr noundef %0), !dbg !5649
  store i32 %call, ptr %__pyx_r, align 4, !dbg !5650, !tbaa !1335
  %1 = load i32, ptr %__pyx_r, align 4, !dbg !5651, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #8, !dbg !5652
  ret i32 %1, !dbg !5653
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_2__set__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_value) #0 !dbg !5654 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_value.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5656, metadata !DIExpression()), !dbg !5659
  store ptr %__pyx_v_value, ptr %__pyx_v_value.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_value.addr, metadata !5657, metadata !DIExpression()), !dbg !5660
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #8, !dbg !5661
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5658, metadata !DIExpression()), !dbg !5662
  %0 = load ptr, ptr %__pyx_v_value.addr, align 8, !dbg !5663, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %0), !dbg !5663
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5664, !tbaa !1252
  %obj = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %1, i32 0, i32 3, !dbg !5664
  %2 = load ptr, ptr %obj, align 8, !dbg !5664, !tbaa !2598
  call void @_Py_DECREF(ptr noundef %2), !dbg !5664
  %3 = load ptr, ptr %__pyx_v_value.addr, align 8, !dbg !5665, !tbaa !1252
  %4 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5666, !tbaa !1252
  %obj1 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %4, i32 0, i32 3, !dbg !5667
  store ptr %3, ptr %obj1, align 8, !dbg !5668, !tbaa !2598
  store i32 0, ptr %__pyx_r, align 4, !dbg !5669, !tbaa !1335
  %5 = load i32, ptr %__pyx_r, align 4, !dbg !5670, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #8, !dbg !5671
  ret i32 %5, !dbg !5672
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_4__del__(ptr noundef %__pyx_v_self) #0 !dbg !5673 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5675, metadata !DIExpression()), !dbg !5677
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #8, !dbg !5678
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5676, metadata !DIExpression()), !dbg !5679
  call void @_Py_INCREF(ptr noundef @_Py_NoneStruct), !dbg !5680
  %0 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5681, !tbaa !1252
  %obj = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %0, i32 0, i32 3, !dbg !5681
  %1 = load ptr, ptr %obj, align 8, !dbg !5681, !tbaa !2598
  call void @_Py_DECREF(ptr noundef %1), !dbg !5681
  %2 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5682, !tbaa !1252
  %obj1 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %2, i32 0, i32 3, !dbg !5683
  store ptr @_Py_NoneStruct, ptr %obj1, align 8, !dbg !5684, !tbaa !2598
  store i32 0, ptr %__pyx_r, align 4, !dbg !5685, !tbaa !1335
  %3 = load i32, ptr %__pyx_r, align 4, !dbg !5686, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #8, !dbg !5687
  ret i32 %3, !dbg !5688
}

; Function Attrs: nounwind uwtable
define internal void @__Pyx_RaiseArgtupleInvalid(ptr noundef %func_name, i32 noundef %exact, i64 noundef %num_min, i64 noundef %num_max, i64 noundef %num_found) #0 !dbg !5689 {
entry:
  %func_name.addr = alloca ptr, align 8
  %exact.addr = alloca i32, align 4
  %num_min.addr = alloca i64, align 8
  %num_max.addr = alloca i64, align 8
  %num_found.addr = alloca i64, align 8
  %num_expected = alloca i64, align 8
  %more_or_less = alloca ptr, align 8
  store ptr %func_name, ptr %func_name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %func_name.addr, metadata !5693, metadata !DIExpression()), !dbg !5700
  store i32 %exact, ptr %exact.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %exact.addr, metadata !5694, metadata !DIExpression()), !dbg !5701
  store i64 %num_min, ptr %num_min.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %num_min.addr, metadata !5695, metadata !DIExpression()), !dbg !5702
  store i64 %num_max, ptr %num_max.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %num_max.addr, metadata !5696, metadata !DIExpression()), !dbg !5703
  store i64 %num_found, ptr %num_found.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %num_found.addr, metadata !5697, metadata !DIExpression()), !dbg !5704
  call void @llvm.lifetime.start.p0(i64 8, ptr %num_expected) #8, !dbg !5705
  tail call void @llvm.dbg.declare(metadata ptr %num_expected, metadata !5698, metadata !DIExpression()), !dbg !5706
  call void @llvm.lifetime.start.p0(i64 8, ptr %more_or_less) #8, !dbg !5707
  tail call void @llvm.dbg.declare(metadata ptr %more_or_less, metadata !5699, metadata !DIExpression()), !dbg !5708
  %0 = load i64, ptr %num_found.addr, align 8, !dbg !5709, !tbaa !1368
  %1 = load i64, ptr %num_min.addr, align 8, !dbg !5711, !tbaa !1368
  %cmp = icmp slt i64 %0, %1, !dbg !5712
  br i1 %cmp, label %if.then, label %if.else, !dbg !5713

if.then:                                          ; preds = %entry
  %2 = load i64, ptr %num_min.addr, align 8, !dbg !5714, !tbaa !1368
  store i64 %2, ptr %num_expected, align 8, !dbg !5716, !tbaa !1368
  store ptr @.str.51, ptr %more_or_less, align 8, !dbg !5717, !tbaa !1252
  br label %if.end, !dbg !5718

if.else:                                          ; preds = %entry
  %3 = load i64, ptr %num_max.addr, align 8, !dbg !5719, !tbaa !1368
  store i64 %3, ptr %num_expected, align 8, !dbg !5721, !tbaa !1368
  store ptr @.str.52, ptr %more_or_less, align 8, !dbg !5722, !tbaa !1252
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i32, ptr %exact.addr, align 4, !dbg !5723, !tbaa !1335
  %tobool = icmp ne i32 %4, 0, !dbg !5723
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !5725

if.then1:                                         ; preds = %if.end
  store ptr @.str.53, ptr %more_or_less, align 8, !dbg !5726, !tbaa !1252
  br label %if.end2, !dbg !5728

if.end2:                                          ; preds = %if.then1, %if.end
  %5 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5729, !tbaa !1252
  %6 = load ptr, ptr %func_name.addr, align 8, !dbg !5730, !tbaa !1252
  %7 = load ptr, ptr %more_or_less, align 8, !dbg !5731, !tbaa !1252
  %8 = load i64, ptr %num_expected, align 8, !dbg !5732, !tbaa !1368
  %9 = load i64, ptr %num_expected, align 8, !dbg !5733, !tbaa !1368
  %cmp3 = icmp eq i64 %9, 1, !dbg !5734
  %10 = zext i1 %cmp3 to i64, !dbg !5735
  %cond = select i1 %cmp3, ptr @.str.12, ptr @.str.55, !dbg !5735
  %11 = load i64, ptr %num_found.addr, align 8, !dbg !5736, !tbaa !1368
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %5, ptr noundef @.str.54, ptr noundef %6, ptr noundef %7, i64 noundef %8, ptr noundef %cond, i64 noundef %11), !dbg !5737
  call void @llvm.lifetime.end.p0(i64 8, ptr %more_or_less) #8, !dbg !5738
  call void @llvm.lifetime.end.p0(i64 8, ptr %num_expected) #8, !dbg !5738
  ret void, !dbg !5738
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_ParseOptionalKeywords(ptr noundef %kwds, ptr noundef %argnames, ptr noundef %kwds2, ptr noundef %values, i64 noundef %num_pos_args, ptr noundef %function_name) #0 !dbg !5739 {
entry:
  %retval = alloca i32, align 4
  %kwds.addr = alloca ptr, align 8
  %argnames.addr = alloca ptr, align 8
  %kwds2.addr = alloca ptr, align 8
  %values.addr = alloca ptr, align 8
  %num_pos_args.addr = alloca i64, align 8
  %function_name.addr = alloca ptr, align 8
  %key = alloca ptr, align 8
  %value = alloca ptr, align 8
  %pos = alloca i64, align 8
  %name = alloca ptr, align 8
  %first_kw_arg = alloca ptr, align 8
  %cmp13 = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %argname = alloca ptr, align 8
  %cmp54 = alloca i32, align 4
  store ptr %kwds, ptr %kwds.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %kwds.addr, metadata !5744, metadata !DIExpression()), !dbg !5769
  store ptr %argnames, ptr %argnames.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %argnames.addr, metadata !5745, metadata !DIExpression()), !dbg !5770
  store ptr %kwds2, ptr %kwds2.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %kwds2.addr, metadata !5746, metadata !DIExpression()), !dbg !5771
  store ptr %values, ptr %values.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %values.addr, metadata !5747, metadata !DIExpression()), !dbg !5772
  store i64 %num_pos_args, ptr %num_pos_args.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %num_pos_args.addr, metadata !5748, metadata !DIExpression()), !dbg !5773
  store ptr %function_name, ptr %function_name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %function_name.addr, metadata !5749, metadata !DIExpression()), !dbg !5774
  call void @llvm.lifetime.start.p0(i64 8, ptr %key) #8, !dbg !5775
  tail call void @llvm.dbg.declare(metadata ptr %key, metadata !5750, metadata !DIExpression()), !dbg !5776
  store ptr null, ptr %key, align 8, !dbg !5776, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #8, !dbg !5775
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !5751, metadata !DIExpression()), !dbg !5777
  store ptr null, ptr %value, align 8, !dbg !5777, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos) #8, !dbg !5778
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !5752, metadata !DIExpression()), !dbg !5779
  store i64 0, ptr %pos, align 8, !dbg !5779, !tbaa !1368
  call void @llvm.lifetime.start.p0(i64 8, ptr %name) #8, !dbg !5780
  tail call void @llvm.dbg.declare(metadata ptr %name, metadata !5753, metadata !DIExpression()), !dbg !5781
  call void @llvm.lifetime.start.p0(i64 8, ptr %first_kw_arg) #8, !dbg !5782
  tail call void @llvm.dbg.declare(metadata ptr %first_kw_arg, metadata !5754, metadata !DIExpression()), !dbg !5783
  %0 = load ptr, ptr %argnames.addr, align 8, !dbg !5784, !tbaa !1252
  %1 = load i64, ptr %num_pos_args.addr, align 8, !dbg !5785, !tbaa !1368
  %add.ptr = getelementptr ptr, ptr %0, i64 %1, !dbg !5786
  store ptr %add.ptr, ptr %first_kw_arg, align 8, !dbg !5783, !tbaa !1252
  br label %while.cond, !dbg !5787

while.cond:                                       ; preds = %if.end113, %if.then49, %if.then, %entry
  %2 = load ptr, ptr %kwds.addr, align 8, !dbg !5788, !tbaa !1252
  %call = call i32 @PyDict_Next(ptr noundef %2, ptr noundef %pos, ptr noundef %key, ptr noundef %value), !dbg !5789
  %tobool = icmp ne i32 %call, 0, !dbg !5787
  br i1 %tobool, label %while.body, label %while.end114, !dbg !5787

while.body:                                       ; preds = %while.cond
  %3 = load ptr, ptr %first_kw_arg, align 8, !dbg !5790, !tbaa !1252
  store ptr %3, ptr %name, align 8, !dbg !5791, !tbaa !1252
  br label %while.cond1, !dbg !5792

while.cond1:                                      ; preds = %while.body3, %while.body
  %4 = load ptr, ptr %name, align 8, !dbg !5793, !tbaa !1252
  %5 = load ptr, ptr %4, align 8, !dbg !5794, !tbaa !1252
  %tobool2 = icmp ne ptr %5, null, !dbg !5794
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !5795

land.rhs:                                         ; preds = %while.cond1
  %6 = load ptr, ptr %name, align 8, !dbg !5796, !tbaa !1252
  %7 = load ptr, ptr %6, align 8, !dbg !5797, !tbaa !1252
  %8 = load ptr, ptr %7, align 8, !dbg !5798, !tbaa !1252
  %9 = load ptr, ptr %key, align 8, !dbg !5799, !tbaa !1252
  %cmp = icmp ne ptr %8, %9, !dbg !5800
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond1
  %10 = phi i1 [ false, %while.cond1 ], [ %cmp, %land.rhs ], !dbg !5801
  br i1 %10, label %while.body3, label %while.end, !dbg !5792

while.body3:                                      ; preds = %land.end
  %11 = load ptr, ptr %name, align 8, !dbg !5802, !tbaa !1252
  %incdec.ptr = getelementptr ptr, ptr %11, i32 1, !dbg !5802
  store ptr %incdec.ptr, ptr %name, align 8, !dbg !5802, !tbaa !1252
  br label %while.cond1, !dbg !5792, !llvm.loop !5803

while.end:                                        ; preds = %land.end
  %12 = load ptr, ptr %name, align 8, !dbg !5804, !tbaa !1252
  %13 = load ptr, ptr %12, align 8, !dbg !5806, !tbaa !1252
  %tobool4 = icmp ne ptr %13, null, !dbg !5806
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5807

if.then:                                          ; preds = %while.end
  %14 = load ptr, ptr %value, align 8, !dbg !5808, !tbaa !1252
  %15 = load ptr, ptr %values.addr, align 8, !dbg !5810, !tbaa !1252
  %16 = load ptr, ptr %name, align 8, !dbg !5811, !tbaa !1252
  %17 = load ptr, ptr %argnames.addr, align 8, !dbg !5812, !tbaa !1252
  %sub.ptr.lhs.cast = ptrtoint ptr %16 to i64, !dbg !5813
  %sub.ptr.rhs.cast = ptrtoint ptr %17 to i64, !dbg !5813
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5813
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !5813
  %arrayidx = getelementptr ptr, ptr %15, i64 %sub.ptr.div, !dbg !5810
  store ptr %14, ptr %arrayidx, align 8, !dbg !5814, !tbaa !1252
  br label %while.cond, !dbg !5815, !llvm.loop !5816

if.end:                                           ; preds = %while.end
  %18 = load ptr, ptr %first_kw_arg, align 8, !dbg !5818, !tbaa !1252
  store ptr %18, ptr %name, align 8, !dbg !5819, !tbaa !1252
  %19 = load ptr, ptr %key, align 8, !dbg !5820, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %19, i32 0, i32 1, !dbg !5820
  %20 = load ptr, ptr %ob_type, align 8, !dbg !5820, !tbaa !2317
  %call5 = call i32 @PyType_HasFeature(ptr noundef %20, i64 noundef 268435456), !dbg !5820
  %tobool6 = icmp ne i32 %call5, 0, !dbg !5820
  %lnot = xor i1 %tobool6, true, !dbg !5820
  %lnot7 = xor i1 %lnot, true, !dbg !5820
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !5820
  %conv = sext i32 %lnot.ext to i64, !dbg !5820
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !5820
  %tobool8 = icmp ne i64 %expval, 0, !dbg !5820
  br i1 %tobool8, label %if.then9, label %if.else97, !dbg !5821

if.then9:                                         ; preds = %if.end
  br label %while.cond10, !dbg !5822

while.cond10:                                     ; preds = %cleanup.cont, %if.then9
  %21 = load ptr, ptr %name, align 8, !dbg !5823, !tbaa !1252
  %22 = load ptr, ptr %21, align 8, !dbg !5824, !tbaa !1252
  %tobool11 = icmp ne ptr %22, null, !dbg !5822
  br i1 %tobool11, label %while.body12, label %while.end47, !dbg !5822

while.body12:                                     ; preds = %while.cond10
  call void @llvm.lifetime.start.p0(i64 4, ptr %cmp13) #8, !dbg !5825
  tail call void @llvm.dbg.declare(metadata ptr %cmp13, metadata !5755, metadata !DIExpression()), !dbg !5826
  %23 = load ptr, ptr %name, align 8, !dbg !5827, !tbaa !1252
  %24 = load ptr, ptr %23, align 8, !dbg !5828, !tbaa !1252
  %25 = load ptr, ptr %24, align 8, !dbg !5829, !tbaa !1252
  %26 = load ptr, ptr %key, align 8, !dbg !5830, !tbaa !1252
  %cmp14 = icmp eq ptr %25, %26, !dbg !5831
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !5832

cond.true:                                        ; preds = %while.body12
  br label %cond.end22, !dbg !5832

cond.false:                                       ; preds = %while.body12
  %27 = load ptr, ptr %name, align 8, !dbg !5833, !tbaa !1252
  %28 = load ptr, ptr %27, align 8, !dbg !5833, !tbaa !1252
  %29 = load ptr, ptr %28, align 8, !dbg !5833, !tbaa !1252
  %length = getelementptr inbounds %struct.PyASCIIObject, ptr %29, i32 0, i32 1, !dbg !5833
  %30 = load i64, ptr %length, align 8, !dbg !5833, !tbaa !5834
  %31 = load ptr, ptr %key, align 8, !dbg !5835, !tbaa !1252
  %length16 = getelementptr inbounds %struct.PyASCIIObject, ptr %31, i32 0, i32 1, !dbg !5835
  %32 = load i64, ptr %length16, align 8, !dbg !5835, !tbaa !5834
  %cmp17 = icmp ne i64 %30, %32, !dbg !5836
  br i1 %cmp17, label %cond.true19, label %cond.false20, !dbg !5837

cond.true19:                                      ; preds = %cond.false
  br label %cond.end, !dbg !5837

cond.false20:                                     ; preds = %cond.false
  %33 = load ptr, ptr %name, align 8, !dbg !5838, !tbaa !1252
  %34 = load ptr, ptr %33, align 8, !dbg !5839, !tbaa !1252
  %35 = load ptr, ptr %34, align 8, !dbg !5840, !tbaa !1252
  %36 = load ptr, ptr %key, align 8, !dbg !5841, !tbaa !1252
  %call21 = call i32 @PyUnicode_Compare(ptr noundef %35, ptr noundef %36), !dbg !5842
  br label %cond.end, !dbg !5837

cond.end:                                         ; preds = %cond.false20, %cond.true19
  %cond = phi i32 [ 1, %cond.true19 ], [ %call21, %cond.false20 ], !dbg !5837
  br label %cond.end22, !dbg !5832

cond.end22:                                       ; preds = %cond.end, %cond.true
  %cond23 = phi i32 [ 0, %cond.true ], [ %cond, %cond.end ], !dbg !5832
  store i32 %cond23, ptr %cmp13, align 4, !dbg !5826, !tbaa !1335
  %37 = load i32, ptr %cmp13, align 4, !dbg !5843, !tbaa !1335
  %cmp24 = icmp slt i32 %37, 0, !dbg !5845
  br i1 %cmp24, label %land.lhs.true, label %if.end36, !dbg !5846

land.lhs.true:                                    ; preds = %cond.end22
  %call26 = call ptr @PyErr_Occurred(), !dbg !5847
  %tobool27 = icmp ne ptr %call26, null, !dbg !5847
  %lnot28 = xor i1 %tobool27, true, !dbg !5847
  %lnot30 = xor i1 %lnot28, true, !dbg !5847
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !5847
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !5847
  %expval33 = call i64 @llvm.expect.i64(i64 %conv32, i64 0), !dbg !5847
  %tobool34 = icmp ne i64 %expval33, 0, !dbg !5847
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !5848

if.then35:                                        ; preds = %land.lhs.true
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5849

if.end36:                                         ; preds = %land.lhs.true, %cond.end22
  %38 = load i32, ptr %cmp13, align 4, !dbg !5850, !tbaa !1335
  %cmp37 = icmp eq i32 %38, 0, !dbg !5852
  br i1 %cmp37, label %if.then39, label %if.end45, !dbg !5853

if.then39:                                        ; preds = %if.end36
  %39 = load ptr, ptr %value, align 8, !dbg !5854, !tbaa !1252
  %40 = load ptr, ptr %values.addr, align 8, !dbg !5856, !tbaa !1252
  %41 = load ptr, ptr %name, align 8, !dbg !5857, !tbaa !1252
  %42 = load ptr, ptr %argnames.addr, align 8, !dbg !5858, !tbaa !1252
  %sub.ptr.lhs.cast40 = ptrtoint ptr %41 to i64, !dbg !5859
  %sub.ptr.rhs.cast41 = ptrtoint ptr %42 to i64, !dbg !5859
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast41, !dbg !5859
  %sub.ptr.div43 = sdiv exact i64 %sub.ptr.sub42, 8, !dbg !5859
  %arrayidx44 = getelementptr ptr, ptr %40, i64 %sub.ptr.div43, !dbg !5856
  store ptr %39, ptr %arrayidx44, align 8, !dbg !5860, !tbaa !1252
  store i32 7, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5861

if.end45:                                         ; preds = %if.end36
  %43 = load ptr, ptr %name, align 8, !dbg !5862, !tbaa !1252
  %incdec.ptr46 = getelementptr ptr, ptr %43, i32 1, !dbg !5862
  store ptr %incdec.ptr46, ptr %name, align 8, !dbg !5862, !tbaa !1252
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5863
  br label %cleanup, !dbg !5863

cleanup:                                          ; preds = %if.then35, %if.end45, %if.then39
  call void @llvm.lifetime.end.p0(i64 4, ptr %cmp13) #8, !dbg !5863
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup117 [
    i32 0, label %cleanup.cont
    i32 7, label %while.end47
    i32 8, label %bad
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond10, !dbg !5822, !llvm.loop !5864

while.end47:                                      ; preds = %cleanup, %while.cond10
  %44 = load ptr, ptr %name, align 8, !dbg !5865, !tbaa !1252
  %45 = load ptr, ptr %44, align 8, !dbg !5866, !tbaa !1252
  %tobool48 = icmp ne ptr %45, null, !dbg !5866
  br i1 %tobool48, label %if.then49, label %if.else, !dbg !5867

if.then49:                                        ; preds = %while.end47
  br label %while.cond, !dbg !5868, !llvm.loop !5816

if.else:                                          ; preds = %while.end47
  call void @llvm.lifetime.start.p0(i64 8, ptr %argname) #8, !dbg !5869
  tail call void @llvm.dbg.declare(metadata ptr %argname, metadata !5760, metadata !DIExpression()), !dbg !5870
  %46 = load ptr, ptr %argnames.addr, align 8, !dbg !5871, !tbaa !1252
  store ptr %46, ptr %argname, align 8, !dbg !5870, !tbaa !1252
  br label %while.cond50, !dbg !5872

while.cond50:                                     ; preds = %cleanup.cont91, %if.else
  %47 = load ptr, ptr %argname, align 8, !dbg !5873, !tbaa !1252
  %48 = load ptr, ptr %first_kw_arg, align 8, !dbg !5874, !tbaa !1252
  %cmp51 = icmp ne ptr %47, %48, !dbg !5875
  br i1 %cmp51, label %while.body53, label %while.end92, !dbg !5872

while.body53:                                     ; preds = %while.cond50
  call void @llvm.lifetime.start.p0(i64 4, ptr %cmp54) #8, !dbg !5876
  tail call void @llvm.dbg.declare(metadata ptr %cmp54, metadata !5763, metadata !DIExpression()), !dbg !5877
  %49 = load ptr, ptr %argname, align 8, !dbg !5878, !tbaa !1252
  %50 = load ptr, ptr %49, align 8, !dbg !5879, !tbaa !1252
  %51 = load ptr, ptr %50, align 8, !dbg !5880, !tbaa !1252
  %52 = load ptr, ptr %key, align 8, !dbg !5881, !tbaa !1252
  %cmp55 = icmp eq ptr %51, %52, !dbg !5882
  br i1 %cmp55, label %cond.true57, label %cond.false58, !dbg !5883

cond.true57:                                      ; preds = %while.body53
  br label %cond.end68, !dbg !5883

cond.false58:                                     ; preds = %while.body53
  %53 = load ptr, ptr %argname, align 8, !dbg !5884, !tbaa !1252
  %54 = load ptr, ptr %53, align 8, !dbg !5884, !tbaa !1252
  %55 = load ptr, ptr %54, align 8, !dbg !5884, !tbaa !1252
  %length59 = getelementptr inbounds %struct.PyASCIIObject, ptr %55, i32 0, i32 1, !dbg !5884
  %56 = load i64, ptr %length59, align 8, !dbg !5884, !tbaa !5834
  %57 = load ptr, ptr %key, align 8, !dbg !5885, !tbaa !1252
  %length60 = getelementptr inbounds %struct.PyASCIIObject, ptr %57, i32 0, i32 1, !dbg !5885
  %58 = load i64, ptr %length60, align 8, !dbg !5885, !tbaa !5834
  %cmp61 = icmp ne i64 %56, %58, !dbg !5886
  br i1 %cmp61, label %cond.true63, label %cond.false64, !dbg !5887

cond.true63:                                      ; preds = %cond.false58
  br label %cond.end66, !dbg !5887

cond.false64:                                     ; preds = %cond.false58
  %59 = load ptr, ptr %argname, align 8, !dbg !5888, !tbaa !1252
  %60 = load ptr, ptr %59, align 8, !dbg !5889, !tbaa !1252
  %61 = load ptr, ptr %60, align 8, !dbg !5890, !tbaa !1252
  %62 = load ptr, ptr %key, align 8, !dbg !5891, !tbaa !1252
  %call65 = call i32 @PyUnicode_Compare(ptr noundef %61, ptr noundef %62), !dbg !5892
  br label %cond.end66, !dbg !5887

cond.end66:                                       ; preds = %cond.false64, %cond.true63
  %cond67 = phi i32 [ 1, %cond.true63 ], [ %call65, %cond.false64 ], !dbg !5887
  br label %cond.end68, !dbg !5883

cond.end68:                                       ; preds = %cond.end66, %cond.true57
  %cond69 = phi i32 [ 0, %cond.true57 ], [ %cond67, %cond.end66 ], !dbg !5883
  store i32 %cond69, ptr %cmp54, align 4, !dbg !5877, !tbaa !1335
  %63 = load i32, ptr %cmp54, align 4, !dbg !5893, !tbaa !1335
  %cmp70 = icmp slt i32 %63, 0, !dbg !5895
  br i1 %cmp70, label %land.lhs.true72, label %if.end83, !dbg !5896

land.lhs.true72:                                  ; preds = %cond.end68
  %call73 = call ptr @PyErr_Occurred(), !dbg !5897
  %tobool74 = icmp ne ptr %call73, null, !dbg !5897
  %lnot75 = xor i1 %tobool74, true, !dbg !5897
  %lnot77 = xor i1 %lnot75, true, !dbg !5897
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !5897
  %conv79 = sext i32 %lnot.ext78 to i64, !dbg !5897
  %expval80 = call i64 @llvm.expect.i64(i64 %conv79, i64 0), !dbg !5897
  %tobool81 = icmp ne i64 %expval80, 0, !dbg !5897
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !5898

if.then82:                                        ; preds = %land.lhs.true72
  store i32 8, ptr %cleanup.dest.slot, align 4
  br label %cleanup89, !dbg !5899

if.end83:                                         ; preds = %land.lhs.true72, %cond.end68
  %64 = load i32, ptr %cmp54, align 4, !dbg !5900, !tbaa !1335
  %cmp84 = icmp eq i32 %64, 0, !dbg !5902
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !5903

if.then86:                                        ; preds = %if.end83
  store i32 11, ptr %cleanup.dest.slot, align 4
  br label %cleanup89, !dbg !5904

if.end87:                                         ; preds = %if.end83
  %65 = load ptr, ptr %argname, align 8, !dbg !5905, !tbaa !1252
  %incdec.ptr88 = getelementptr ptr, ptr %65, i32 1, !dbg !5905
  store ptr %incdec.ptr88, ptr %argname, align 8, !dbg !5905, !tbaa !1252
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5906
  br label %cleanup89, !dbg !5906

cleanup89:                                        ; preds = %if.then86, %if.then82, %if.end87
  call void @llvm.lifetime.end.p0(i64 4, ptr %cmp54) #8, !dbg !5906
  %cleanup.dest90 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest90, label %cleanup93 [
    i32 0, label %cleanup.cont91
  ]

cleanup.cont91:                                   ; preds = %cleanup89
  br label %while.cond50, !dbg !5872, !llvm.loop !5907

while.end92:                                      ; preds = %while.cond50
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !5908
  br label %cleanup93, !dbg !5908

cleanup93:                                        ; preds = %while.end92, %cleanup89
  call void @llvm.lifetime.end.p0(i64 8, ptr %argname) #8, !dbg !5908
  %cleanup.dest94 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest94, label %cleanup117 [
    i32 0, label %cleanup.cont95
    i32 11, label %arg_passed_twice
    i32 8, label %bad
  ]

cleanup.cont95:                                   ; preds = %cleanup93
  br label %if.end96

if.end96:                                         ; preds = %cleanup.cont95
  br label %if.end98, !dbg !5909

if.else97:                                        ; preds = %if.end
  br label %invalid_keyword_type, !dbg !5910

if.end98:                                         ; preds = %if.end96
  %66 = load ptr, ptr %kwds2.addr, align 8, !dbg !5911, !tbaa !1252
  %tobool99 = icmp ne ptr %66, null, !dbg !5911
  br i1 %tobool99, label %if.then100, label %if.else112, !dbg !5913

if.then100:                                       ; preds = %if.end98
  %67 = load ptr, ptr %kwds2.addr, align 8, !dbg !5914, !tbaa !1252
  %68 = load ptr, ptr %key, align 8, !dbg !5914, !tbaa !1252
  %69 = load ptr, ptr %value, align 8, !dbg !5914, !tbaa !1252
  %call101 = call i32 @PyDict_SetItem(ptr noundef %67, ptr noundef %68, ptr noundef %69), !dbg !5914
  %tobool102 = icmp ne i32 %call101, 0, !dbg !5914
  %lnot103 = xor i1 %tobool102, true, !dbg !5914
  %lnot105 = xor i1 %lnot103, true, !dbg !5914
  %lnot.ext106 = zext i1 %lnot105 to i32, !dbg !5914
  %conv107 = sext i32 %lnot.ext106 to i64, !dbg !5914
  %expval108 = call i64 @llvm.expect.i64(i64 %conv107, i64 0), !dbg !5914
  %tobool109 = icmp ne i64 %expval108, 0, !dbg !5914
  br i1 %tobool109, label %if.then110, label %if.end111, !dbg !5917

if.then110:                                       ; preds = %if.then100
  br label %bad, !dbg !5918

if.end111:                                        ; preds = %if.then100
  br label %if.end113, !dbg !5919

if.else112:                                       ; preds = %if.end98
  br label %invalid_keyword, !dbg !5920

if.end113:                                        ; preds = %if.end111
  br label %while.cond, !dbg !5787, !llvm.loop !5816

while.end114:                                     ; preds = %while.cond
  store i32 0, ptr %retval, align 4, !dbg !5922
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !5922

arg_passed_twice:                                 ; preds = %cleanup93
  tail call void @llvm.dbg.label(metadata !5765), !dbg !5923
  %70 = load ptr, ptr %function_name.addr, align 8, !dbg !5924, !tbaa !1252
  %71 = load ptr, ptr %key, align 8, !dbg !5925, !tbaa !1252
  call void @__Pyx_RaiseDoubleKeywordsError(ptr noundef %70, ptr noundef %71), !dbg !5926
  br label %bad, !dbg !5927

invalid_keyword_type:                             ; preds = %if.else97
  tail call void @llvm.dbg.label(metadata !5766), !dbg !5928
  %72 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5929, !tbaa !1252
  %73 = load ptr, ptr %function_name.addr, align 8, !dbg !5930, !tbaa !1252
  %call115 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %72, ptr noundef @.str.56, ptr noundef %73), !dbg !5931
  br label %bad, !dbg !5932

invalid_keyword:                                  ; preds = %if.else112
  tail call void @llvm.dbg.label(metadata !5767), !dbg !5933
  %74 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5934, !tbaa !1252
  %75 = load ptr, ptr %function_name.addr, align 8, !dbg !5935, !tbaa !1252
  %76 = load ptr, ptr %key, align 8, !dbg !5936, !tbaa !1252
  %call116 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %74, ptr noundef @.str.57, ptr noundef %75, ptr noundef %76), !dbg !5937
  br label %bad, !dbg !5937

bad:                                              ; preds = %invalid_keyword, %cleanup93, %cleanup, %invalid_keyword_type, %arg_passed_twice, %if.then110
  tail call void @llvm.dbg.label(metadata !5768), !dbg !5938
  store i32 -1, ptr %retval, align 4, !dbg !5939
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !5939

cleanup117:                                       ; preds = %bad, %while.end114, %cleanup93, %cleanup
  call void @llvm.lifetime.end.p0(i64 8, ptr %first_kw_arg) #8, !dbg !5940
  call void @llvm.lifetime.end.p0(i64 8, ptr %name) #8, !dbg !5940
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos) #8, !dbg !5940
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #8, !dbg !5940
  call void @llvm.lifetime.end.p0(i64 8, ptr %key) #8, !dbg !5940
  %77 = load i32, ptr %retval, align 4, !dbg !5940
  ret i32 %77, !dbg !5940
}

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx__ArgTypeTest(ptr noundef %obj, ptr noundef %type, ptr noundef %name, i32 noundef %exact) #0 !dbg !5941 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %exact.addr = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !5945, metadata !DIExpression()), !dbg !5949
  store ptr %type, ptr %type.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !5946, metadata !DIExpression()), !dbg !5950
  store ptr %name, ptr %name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !5947, metadata !DIExpression()), !dbg !5951
  store i32 %exact, ptr %exact.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %exact.addr, metadata !5948, metadata !DIExpression()), !dbg !5952
  %0 = load ptr, ptr %type.addr, align 8, !dbg !5953, !tbaa !1252
  %tobool = icmp ne ptr %0, null, !dbg !5953
  %lnot = xor i1 %tobool, true, !dbg !5953
  %lnot1 = xor i1 %lnot, true, !dbg !5953
  %lnot2 = xor i1 %lnot1, true, !dbg !5953
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5953
  %conv = sext i32 %lnot.ext to i64, !dbg !5953
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !5953
  %tobool3 = icmp ne i64 %expval, 0, !dbg !5953
  br i1 %tobool3, label %if.then, label %if.else, !dbg !5955

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @PyExc_SystemError, align 8, !dbg !5956, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %1, ptr noundef @.str.59), !dbg !5958
  store i32 0, ptr %retval, align 4, !dbg !5959
  br label %return, !dbg !5959

if.else:                                          ; preds = %entry
  %2 = load i32, ptr %exact.addr, align 4, !dbg !5960, !tbaa !1335
  %tobool4 = icmp ne i32 %2, 0, !dbg !5960
  br i1 %tobool4, label %if.then5, label %if.else6, !dbg !5962

if.then5:                                         ; preds = %if.else
  br label %if.end16, !dbg !5963

if.else6:                                         ; preds = %if.else
  %3 = load ptr, ptr %obj.addr, align 8, !dbg !5965, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %3, i32 0, i32 1, !dbg !5965
  %4 = load ptr, ptr %ob_type, align 8, !dbg !5965, !tbaa !2317
  %5 = load ptr, ptr %type.addr, align 8, !dbg !5965, !tbaa !1252
  %call = call i32 @__Pyx_IsSubtype(ptr noundef %4, ptr noundef %5), !dbg !5965
  %tobool7 = icmp ne i32 %call, 0, !dbg !5965
  %lnot8 = xor i1 %tobool7, true, !dbg !5965
  %lnot10 = xor i1 %lnot8, true, !dbg !5965
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !5965
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !5965
  %expval13 = call i64 @llvm.expect.i64(i64 %conv12, i64 1), !dbg !5965
  %tobool14 = icmp ne i64 %expval13, 0, !dbg !5965
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !5968

if.then15:                                        ; preds = %if.else6
  store i32 1, ptr %retval, align 4, !dbg !5969
  br label %return, !dbg !5969

if.end:                                           ; preds = %if.else6
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then5
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  %6 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !5970, !tbaa !1252
  %7 = load ptr, ptr %name.addr, align 8, !dbg !5971, !tbaa !1252
  %8 = load ptr, ptr %type.addr, align 8, !dbg !5972, !tbaa !1252
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %8, i32 0, i32 1, !dbg !5973
  %9 = load ptr, ptr %tp_name, align 8, !dbg !5973, !tbaa !2547
  %10 = load ptr, ptr %obj.addr, align 8, !dbg !5974, !tbaa !1252
  %ob_type18 = getelementptr inbounds %struct._object, ptr %10, i32 0, i32 1, !dbg !5974
  %11 = load ptr, ptr %ob_type18, align 8, !dbg !5974, !tbaa !2317
  %tp_name19 = getelementptr inbounds %struct._typeobject, ptr %11, i32 0, i32 1, !dbg !5975
  %12 = load ptr, ptr %tp_name19, align 8, !dbg !5975, !tbaa !2547
  %call20 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %6, ptr noundef @.str.60, ptr noundef %7, ptr noundef %9, ptr noundef %12), !dbg !5976
  store i32 0, ptr %retval, align 4, !dbg !5977
  br label %return, !dbg !5977

return:                                           ; preds = %if.end17, %if.then15, %if.then
  %13 = load i32, ptr %retval, align 4, !dbg !5978
  ret i32 %13, !dbg !5978
}

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase___init__(ptr noundef %__pyx_v_self, ptr noundef %__pyx_v_name, ptr noundef %__pyx_v_obj) #0 !dbg !5979 {
entry:
  %__pyx_v_self.addr = alloca ptr, align 8
  %__pyx_v_name.addr = alloca ptr, align 8
  %__pyx_v_obj.addr = alloca ptr, align 8
  %__pyx_r = alloca i32, align 4
  store ptr %__pyx_v_self, ptr %__pyx_v_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_self.addr, metadata !5983, metadata !DIExpression()), !dbg !5987
  store ptr %__pyx_v_name, ptr %__pyx_v_name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_name.addr, metadata !5984, metadata !DIExpression()), !dbg !5988
  store ptr %__pyx_v_obj, ptr %__pyx_v_obj.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v_obj.addr, metadata !5985, metadata !DIExpression()), !dbg !5989
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_r) #8, !dbg !5990
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !5986, metadata !DIExpression()), !dbg !5991
  %0 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !5992, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %0), !dbg !5992
  %1 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5993, !tbaa !1252
  %obj = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %1, i32 0, i32 3, !dbg !5993
  %2 = load ptr, ptr %obj, align 8, !dbg !5993, !tbaa !2598
  call void @_Py_DECREF(ptr noundef %2), !dbg !5993
  %3 = load ptr, ptr %__pyx_v_obj.addr, align 8, !dbg !5994, !tbaa !1252
  %4 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5995, !tbaa !1252
  %obj1 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %4, i32 0, i32 3, !dbg !5996
  store ptr %3, ptr %obj1, align 8, !dbg !5997, !tbaa !2598
  %5 = load ptr, ptr %__pyx_v_name.addr, align 8, !dbg !5998, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %5), !dbg !5998
  %6 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !5999, !tbaa !1252
  %name = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %6, i32 0, i32 2, !dbg !5999
  %7 = load ptr, ptr %name, align 8, !dbg !5999, !tbaa !2590
  call void @_Py_DECREF(ptr noundef %7), !dbg !5999
  %8 = load ptr, ptr %__pyx_v_name.addr, align 8, !dbg !6000, !tbaa !1252
  %9 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !6001, !tbaa !1252
  %name2 = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %9, i32 0, i32 2, !dbg !6002
  store ptr %8, ptr %name2, align 8, !dbg !6003, !tbaa !2590
  %10 = load ptr, ptr %__pyx_v_self.addr, align 8, !dbg !6004, !tbaa !1252
  %_ndim = getelementptr inbounds %struct.__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase, ptr %10, i32 0, i32 1, !dbg !6005
  store i64 -1, ptr %_ndim, align 8, !dbg !6006, !tbaa !2927
  store i32 0, ptr %__pyx_r, align 4, !dbg !6007, !tbaa !1335
  %11 = load i32, ptr %__pyx_r, align 4, !dbg !6008, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_r) #8, !dbg !6009
  ret i32 %11, !dbg !6010
}

declare !dbg !6011 i32 @PyUnicode_Compare(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_RaiseDoubleKeywordsError(ptr noundef %func_name, ptr noundef %kw_name) #0 !dbg !6012 {
entry:
  %func_name.addr = alloca ptr, align 8
  %kw_name.addr = alloca ptr, align 8
  store ptr %func_name, ptr %func_name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %func_name.addr, metadata !6016, metadata !DIExpression()), !dbg !6018
  store ptr %kw_name, ptr %kw_name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %kw_name.addr, metadata !6017, metadata !DIExpression()), !dbg !6019
  %0 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !6020, !tbaa !1252
  %1 = load ptr, ptr %func_name.addr, align 8, !dbg !6021, !tbaa !1252
  %2 = load ptr, ptr %kw_name.addr, align 8, !dbg !6022, !tbaa !1252
  %call = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %0, ptr noundef @.str.58, ptr noundef %1, ptr noundef %2), !dbg !6023
  ret void, !dbg !6024
}

declare !dbg !6025 ptr @_PyType_Lookup(ptr noundef, ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_setup_reduce_is_named(ptr noundef %meth, ptr noundef %name) #0 !dbg !6028 {
entry:
  %meth.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %ret = alloca i32, align 4
  %name_attr = alloca ptr, align 8
  store ptr %meth, ptr %meth.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %meth.addr, metadata !6030, metadata !DIExpression()), !dbg !6034
  store ptr %name, ptr %name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !6031, metadata !DIExpression()), !dbg !6035
  call void @llvm.lifetime.start.p0(i64 4, ptr %ret) #8, !dbg !6036
  tail call void @llvm.dbg.declare(metadata ptr %ret, metadata !6032, metadata !DIExpression()), !dbg !6037
  call void @llvm.lifetime.start.p0(i64 8, ptr %name_attr) #8, !dbg !6038
  tail call void @llvm.dbg.declare(metadata ptr %name_attr, metadata !6033, metadata !DIExpression()), !dbg !6039
  %0 = load ptr, ptr %meth.addr, align 8, !dbg !6040, !tbaa !1252
  %1 = load ptr, ptr @__pyx_n_s_name_2, align 8, !dbg !6041, !tbaa !1252
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %0, ptr noundef %1), !dbg !6042
  store ptr %call, ptr %name_attr, align 8, !dbg !6043, !tbaa !1252
  %2 = load ptr, ptr %name_attr, align 8, !dbg !6044, !tbaa !1252
  %tobool = icmp ne ptr %2, null, !dbg !6044
  %lnot = xor i1 %tobool, true, !dbg !6044
  %lnot1 = xor i1 %lnot, true, !dbg !6044
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6044
  %conv = sext i32 %lnot.ext to i64, !dbg !6044
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6044
  %tobool2 = icmp ne i64 %expval, 0, !dbg !6044
  br i1 %tobool2, label %if.then, label %if.else, !dbg !6046

if.then:                                          ; preds = %entry
  %3 = load ptr, ptr %name_attr, align 8, !dbg !6047, !tbaa !1252
  %4 = load ptr, ptr %name.addr, align 8, !dbg !6049, !tbaa !1252
  %call3 = call i32 @PyObject_RichCompareBool(ptr noundef %3, ptr noundef %4, i32 noundef 2), !dbg !6050
  store i32 %call3, ptr %ret, align 4, !dbg !6051, !tbaa !1335
  br label %if.end, !dbg !6052

if.else:                                          ; preds = %entry
  store i32 -1, ptr %ret, align 4, !dbg !6053, !tbaa !1335
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i32, ptr %ret, align 4, !dbg !6055, !tbaa !1335
  %cmp = icmp slt i32 %5, 0, !dbg !6055
  %lnot5 = xor i1 %cmp, true, !dbg !6055
  %lnot7 = xor i1 %lnot5, true, !dbg !6055
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !6055
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !6055
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0), !dbg !6055
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !6055
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !6057

if.then12:                                        ; preds = %if.end
  call void @PyErr_Clear(), !dbg !6058
  store i32 0, ptr %ret, align 4, !dbg !6060, !tbaa !1335
  br label %if.end13, !dbg !6061

if.end13:                                         ; preds = %if.then12, %if.end
  %6 = load ptr, ptr %name_attr, align 8, !dbg !6062, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %6), !dbg !6062
  %7 = load i32, ptr %ret, align 4, !dbg !6063, !tbaa !1335
  call void @llvm.lifetime.end.p0(i64 8, ptr %name_attr) #8, !dbg !6064
  call void @llvm.lifetime.end.p0(i64 4, ptr %ret) #8, !dbg !6064
  ret i32 %7, !dbg !6065
}

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyObject_GetAttrStrNoError(ptr noundef %obj, ptr noundef %attr_name) #3 !dbg !6066 {
entry:
  %retval = alloca ptr, align 8
  %obj.addr = alloca ptr, align 8
  %attr_name.addr = alloca ptr, align 8
  %result = alloca ptr, align 8
  %tp = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %obj, ptr %obj.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %obj.addr, metadata !6068, metadata !DIExpression()), !dbg !6072
  store ptr %attr_name, ptr %attr_name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %attr_name.addr, metadata !6069, metadata !DIExpression()), !dbg !6073
  call void @llvm.lifetime.start.p0(i64 8, ptr %result) #8, !dbg !6074
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !6070, metadata !DIExpression()), !dbg !6075
  call void @llvm.lifetime.start.p0(i64 8, ptr %tp) #8, !dbg !6076
  tail call void @llvm.dbg.declare(metadata ptr %tp, metadata !6071, metadata !DIExpression()), !dbg !6077
  %0 = load ptr, ptr %obj.addr, align 8, !dbg !6078, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1, !dbg !6078
  %1 = load ptr, ptr %ob_type, align 8, !dbg !6078, !tbaa !2317
  store ptr %1, ptr %tp, align 8, !dbg !6077, !tbaa !1252
  %2 = load ptr, ptr %tp, align 8, !dbg !6079, !tbaa !1252
  %tp_getattro = getelementptr inbounds %struct._typeobject, ptr %2, i32 0, i32 16, !dbg !6079
  %3 = load ptr, ptr %tp_getattro, align 8, !dbg !6079, !tbaa !2035
  %cmp = icmp eq ptr %3, @PyObject_GenericGetAttr, !dbg !6079
  %lnot = xor i1 %cmp, true, !dbg !6079
  %lnot1 = xor i1 %lnot, true, !dbg !6079
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6079
  %conv = sext i32 %lnot.ext to i64, !dbg !6079
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6079
  %tobool = icmp ne i64 %expval, 0, !dbg !6079
  br i1 %tobool, label %if.then, label %if.end, !dbg !6081

if.then:                                          ; preds = %entry
  %4 = load ptr, ptr %obj.addr, align 8, !dbg !6082, !tbaa !1252
  %5 = load ptr, ptr %attr_name.addr, align 8, !dbg !6084, !tbaa !1252
  %call = call ptr @_PyObject_GenericGetAttrWithDict(ptr noundef %4, ptr noundef %5, ptr noundef null, i32 noundef 1), !dbg !6085
  store ptr %call, ptr %retval, align 8, !dbg !6086
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6086

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %obj.addr, align 8, !dbg !6087, !tbaa !1252
  %7 = load ptr, ptr %attr_name.addr, align 8, !dbg !6088, !tbaa !1252
  %call2 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %6, ptr noundef %7), !dbg !6089
  store ptr %call2, ptr %result, align 8, !dbg !6090, !tbaa !1252
  %8 = load ptr, ptr %result, align 8, !dbg !6091, !tbaa !1252
  %tobool3 = icmp ne ptr %8, null, !dbg !6091
  %lnot4 = xor i1 %tobool3, true, !dbg !6091
  %lnot6 = xor i1 %lnot4, true, !dbg !6091
  %lnot8 = xor i1 %lnot6, true, !dbg !6091
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !6091
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !6091
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !6091
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !6091
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6093

if.then13:                                        ; preds = %if.end
  call void @__Pyx_PyObject_GetAttrStr_ClearAttributeError(), !dbg !6094
  br label %if.end14, !dbg !6096

if.end14:                                         ; preds = %if.then13, %if.end
  %9 = load ptr, ptr %result, align 8, !dbg !6097, !tbaa !1252
  store ptr %9, ptr %retval, align 8, !dbg !6098
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6098

cleanup:                                          ; preds = %if.end14, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %tp) #8, !dbg !6099
  call void @llvm.lifetime.end.p0(i64 8, ptr %result) #8, !dbg !6099
  %10 = load ptr, ptr %retval, align 8, !dbg !6099
  ret ptr %10, !dbg !6099
}

declare !dbg !6100 i32 @PyDict_DelItem(ptr noundef, ptr noundef) #1

declare !dbg !6101 void @PyType_Modified(ptr noundef) #1

declare !dbg !6104 i32 @PyObject_RichCompareBool(ptr noundef, ptr noundef, i32 noundef) #1

declare !dbg !6107 ptr @_PyObject_GenericGetAttrWithDict(ptr noundef, ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: nounwind uwtable
define internal void @__Pyx_PyObject_GetAttrStr_ClearAttributeError() #0 !dbg !6110 {
entry:
  %__pyx_tstate = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_tstate) #8, !dbg !6113
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_tstate, metadata !6112, metadata !DIExpression()), !dbg !6113
  %call = call ptr @_PyThreadState_UncheckedGet(), !dbg !6114
  store ptr %call, ptr %__pyx_tstate, align 8, !dbg !6114, !tbaa !1252
  %0 = load ptr, ptr %__pyx_tstate, align 8, !dbg !6115, !tbaa !1252
  %1 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !6115, !tbaa !1252
  %call1 = call i32 @__Pyx_PyErr_ExceptionMatchesInState(ptr noundef %0, ptr noundef %1), !dbg !6115
  %tobool = icmp ne i32 %call1, 0, !dbg !6115
  %lnot = xor i1 %tobool, true, !dbg !6115
  %lnot2 = xor i1 %lnot, true, !dbg !6115
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6115
  %conv = sext i32 %lnot.ext to i64, !dbg !6115
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6115
  %tobool3 = icmp ne i64 %expval, 0, !dbg !6115
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6117

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %__pyx_tstate, align 8, !dbg !6118, !tbaa !1252
  call void @__Pyx_ErrRestoreInState(ptr noundef %2, ptr noundef null, ptr noundef null, ptr noundef null), !dbg !6118
  br label %if.end, !dbg !6118

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_tstate) #8, !dbg !6119
  ret void, !dbg !6119
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pw_6pandas_5_libs_8indexing_1__pyx_unpickle_NDFrameIndexerBase(ptr noundef %__pyx_self, ptr noundef %__pyx_args, ptr noundef %__pyx_kwds) #0 !dbg !1048 {
entry:
  %retval = alloca ptr, align 8
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_args.addr = alloca ptr, align 8
  %__pyx_kwds.addr = alloca ptr, align 8
  %__pyx_v___pyx_type = alloca ptr, align 8
  %__pyx_v___pyx_checksum = alloca i64, align 8
  %__pyx_v___pyx_state = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %__pyx_r = alloca ptr, align 8
  %values = alloca [3 x ptr], align 16
  %kw_args = alloca i64, align 8
  %pos_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_self.addr, metadata !1050, metadata !DIExpression()), !dbg !6120
  store ptr %__pyx_args, ptr %__pyx_args.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_args.addr, metadata !1051, metadata !DIExpression()), !dbg !6121
  store ptr %__pyx_kwds, ptr %__pyx_kwds.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_kwds.addr, metadata !1052, metadata !DIExpression()), !dbg !6122
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_type) #8, !dbg !6123
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_type, metadata !1053, metadata !DIExpression()), !dbg !6124
  store ptr null, ptr %__pyx_v___pyx_type, align 8, !dbg !6124, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_checksum) #8, !dbg !6125
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_checksum, metadata !1054, metadata !DIExpression()), !dbg !6126
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_state) #8, !dbg !6127
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_state, metadata !1055, metadata !DIExpression()), !dbg !6128
  store ptr null, ptr %__pyx_v___pyx_state, align 8, !dbg !6128, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !6129
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !1056, metadata !DIExpression()), !dbg !6130
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !6130, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #8, !dbg !6131
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !1057, metadata !DIExpression()), !dbg !6132
  store ptr null, ptr %__pyx_filename, align 8, !dbg !6132, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !6133
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !1058, metadata !DIExpression()), !dbg !6134
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !6134, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !6135
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !1059, metadata !DIExpression()), !dbg !6136
  store ptr null, ptr %__pyx_r, align 8, !dbg !6136, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 24, ptr %values) #8, !dbg !6137
  tail call void @llvm.dbg.declare(metadata ptr %values, metadata !1060, metadata !DIExpression()), !dbg !6138
  call void @llvm.memset.p0.i64(ptr align 16 %values, i8 0, i64 24, i1 false), !dbg !6138
  %0 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !6139, !tbaa !1252
  %tobool = icmp ne ptr %0, null, !dbg !6139
  %lnot = xor i1 %tobool, true, !dbg !6139
  %lnot1 = xor i1 %lnot, true, !dbg !6139
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6139
  %conv = sext i32 %lnot.ext to i64, !dbg !6139
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6139
  %tobool2 = icmp ne i64 %expval, 0, !dbg !6139
  br i1 %tobool2, label %if.then, label %if.else83, !dbg !6140

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %kw_args) #8, !dbg !6141
  tail call void @llvm.dbg.declare(metadata ptr %kw_args, metadata !1063, metadata !DIExpression()), !dbg !6142
  call void @llvm.lifetime.start.p0(i64 8, ptr %pos_args) #8, !dbg !6143
  tail call void @llvm.dbg.declare(metadata ptr %pos_args, metadata !1066, metadata !DIExpression()), !dbg !6144
  %1 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !6145, !tbaa !1252
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %1, i32 0, i32 1, !dbg !6145
  %2 = load i64, ptr %ob_size, align 8, !dbg !6145, !tbaa !2688
  store i64 %2, ptr %pos_args, align 8, !dbg !6144, !tbaa !1368
  %3 = load i64, ptr %pos_args, align 8, !dbg !6146, !tbaa !1368
  switch i64 %3, label %sw.default [
    i64 3, label %sw.bb
    i64 2, label %sw.bb4
    i64 1, label %sw.bb8
    i64 0, label %sw.epilog
  ], !dbg !6147

sw.bb:                                            ; preds = %if.then
  %4 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !6148, !tbaa !1252
  %ob_item = getelementptr inbounds %struct.PyTupleObject, ptr %4, i32 0, i32 1, !dbg !6148
  %arrayidx = getelementptr [1 x ptr], ptr %ob_item, i64 0, i64 2, !dbg !6148
  %5 = load ptr, ptr %arrayidx, align 8, !dbg !6148, !tbaa !1252
  %arrayidx3 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !6150
  store ptr %5, ptr %arrayidx3, align 16, !dbg !6151, !tbaa !1252
  br label %sw.bb4, !dbg !6150

sw.bb4:                                           ; preds = %if.then, %sw.bb
  %6 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !6152, !tbaa !1252
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, ptr %6, i32 0, i32 1, !dbg !6152
  %arrayidx6 = getelementptr [1 x ptr], ptr %ob_item5, i64 0, i64 1, !dbg !6152
  %7 = load ptr, ptr %arrayidx6, align 8, !dbg !6152, !tbaa !1252
  %arrayidx7 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !6153
  store ptr %7, ptr %arrayidx7, align 8, !dbg !6154, !tbaa !1252
  br label %sw.bb8, !dbg !6153

sw.bb8:                                           ; preds = %if.then, %sw.bb4
  %8 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !6155, !tbaa !1252
  %ob_item9 = getelementptr inbounds %struct.PyTupleObject, ptr %8, i32 0, i32 1, !dbg !6155
  %arrayidx10 = getelementptr [1 x ptr], ptr %ob_item9, i64 0, i64 0, !dbg !6155
  %9 = load ptr, ptr %arrayidx10, align 8, !dbg !6155, !tbaa !1252
  %arrayidx11 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !6156
  store ptr %9, ptr %arrayidx11, align 16, !dbg !6157, !tbaa !1252
  br label %sw.epilog, !dbg !6156

sw.default:                                       ; preds = %if.then
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6158

sw.epilog:                                        ; preds = %sw.bb8, %if.then
  %10 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !6159, !tbaa !1252
  %call = call i64 @PyDict_Size(ptr noundef %10), !dbg !6160
  store i64 %call, ptr %kw_args, align 8, !dbg !6161, !tbaa !1368
  %11 = load i64, ptr %pos_args, align 8, !dbg !6162, !tbaa !1368
  switch i64 %11, label %sw.epilog58 [
    i64 0, label %sw.bb12
    i64 1, label %sw.bb24
    i64 2, label %sw.bb41
  ], !dbg !6163

sw.bb12:                                          ; preds = %sw.epilog
  %12 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !6164, !tbaa !1252
  %13 = load ptr, ptr @__pyx_n_s_pyx_type, align 8, !dbg !6164, !tbaa !1252
  %14 = load ptr, ptr @__pyx_n_s_pyx_type, align 8, !dbg !6164, !tbaa !1252
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %14, i32 0, i32 2, !dbg !6164
  %15 = load i64, ptr %hash, align 8, !dbg !6164, !tbaa !2707
  %call13 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %12, ptr noundef %13, i64 noundef %15), !dbg !6164
  %arrayidx14 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !6164
  store ptr %call13, ptr %arrayidx14, align 16, !dbg !6164, !tbaa !1252
  %cmp = icmp ne ptr %call13, null, !dbg !6164
  %lnot16 = xor i1 %cmp, true, !dbg !6164
  %lnot18 = xor i1 %lnot16, true, !dbg !6164
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !6164
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !6164
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 1), !dbg !6164
  %tobool22 = icmp ne i64 %expval21, 0, !dbg !6164
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !6167

if.then23:                                        ; preds = %sw.bb12
  %16 = load i64, ptr %kw_args, align 8, !dbg !6168, !tbaa !1368
  %dec = add i64 %16, -1, !dbg !6168
  store i64 %dec, ptr %kw_args, align 8, !dbg !6168, !tbaa !1368
  br label %if.end, !dbg !6169

if.else:                                          ; preds = %sw.bb12
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6170

if.end:                                           ; preds = %if.then23
  br label %sw.bb24, !dbg !6164

sw.bb24:                                          ; preds = %sw.epilog, %if.end
  %17 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !6171, !tbaa !1252
  %18 = load ptr, ptr @__pyx_n_s_pyx_checksum, align 8, !dbg !6171, !tbaa !1252
  %19 = load ptr, ptr @__pyx_n_s_pyx_checksum, align 8, !dbg !6171, !tbaa !1252
  %hash25 = getelementptr inbounds %struct.PyASCIIObject, ptr %19, i32 0, i32 2, !dbg !6171
  %20 = load i64, ptr %hash25, align 8, !dbg !6171, !tbaa !2707
  %call26 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %17, ptr noundef %18, i64 noundef %20), !dbg !6171
  %arrayidx27 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !6171
  store ptr %call26, ptr %arrayidx27, align 8, !dbg !6171, !tbaa !1252
  %cmp28 = icmp ne ptr %call26, null, !dbg !6171
  %lnot30 = xor i1 %cmp28, true, !dbg !6171
  %lnot32 = xor i1 %lnot30, true, !dbg !6171
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !6171
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !6171
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 1), !dbg !6171
  %tobool36 = icmp ne i64 %expval35, 0, !dbg !6171
  br i1 %tobool36, label %if.then37, label %if.else39, !dbg !6173

if.then37:                                        ; preds = %sw.bb24
  %21 = load i64, ptr %kw_args, align 8, !dbg !6174, !tbaa !1368
  %dec38 = add i64 %21, -1, !dbg !6174
  store i64 %dec38, ptr %kw_args, align 8, !dbg !6174, !tbaa !1368
  br label %if.end40, !dbg !6175

if.else39:                                        ; preds = %sw.bb24
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.62, i32 noundef 1, i64 noundef 3, i64 noundef 3, i64 noundef 1), !dbg !6176
  %22 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6178, !tbaa !1252
  store ptr %22, ptr %__pyx_filename, align 8, !dbg !6178, !tbaa !1252
  %23 = load ptr, ptr %__pyx_filename, align 8, !dbg !6178, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !6178, !tbaa !1335
  %24 = load i32, ptr %__pyx_lineno, align 4, !dbg !6178, !tbaa !1335
  store i32 2299, ptr %__pyx_clineno, align 4, !dbg !6178, !tbaa !1335
  %25 = load i32, ptr %__pyx_clineno, align 4, !dbg !6178, !tbaa !1335
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6181

if.end40:                                         ; preds = %if.then37
  br label %sw.bb41, !dbg !6171

sw.bb41:                                          ; preds = %sw.epilog, %if.end40
  %26 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !6182, !tbaa !1252
  %27 = load ptr, ptr @__pyx_n_s_pyx_state, align 8, !dbg !6182, !tbaa !1252
  %28 = load ptr, ptr @__pyx_n_s_pyx_state, align 8, !dbg !6182, !tbaa !1252
  %hash42 = getelementptr inbounds %struct.PyASCIIObject, ptr %28, i32 0, i32 2, !dbg !6182
  %29 = load i64, ptr %hash42, align 8, !dbg !6182, !tbaa !2707
  %call43 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %26, ptr noundef %27, i64 noundef %29), !dbg !6182
  %arrayidx44 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !6182
  store ptr %call43, ptr %arrayidx44, align 16, !dbg !6182, !tbaa !1252
  %cmp45 = icmp ne ptr %call43, null, !dbg !6182
  %lnot47 = xor i1 %cmp45, true, !dbg !6182
  %lnot49 = xor i1 %lnot47, true, !dbg !6182
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !6182
  %conv51 = sext i32 %lnot.ext50 to i64, !dbg !6182
  %expval52 = call i64 @llvm.expect.i64(i64 %conv51, i64 1), !dbg !6182
  %tobool53 = icmp ne i64 %expval52, 0, !dbg !6182
  br i1 %tobool53, label %if.then54, label %if.else56, !dbg !6184

if.then54:                                        ; preds = %sw.bb41
  %30 = load i64, ptr %kw_args, align 8, !dbg !6185, !tbaa !1368
  %dec55 = add i64 %30, -1, !dbg !6185
  store i64 %dec55, ptr %kw_args, align 8, !dbg !6185, !tbaa !1368
  br label %if.end57, !dbg !6186

if.else56:                                        ; preds = %sw.bb41
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.62, i32 noundef 1, i64 noundef 3, i64 noundef 3, i64 noundef 2), !dbg !6187
  %31 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6189, !tbaa !1252
  store ptr %31, ptr %__pyx_filename, align 8, !dbg !6189, !tbaa !1252
  %32 = load ptr, ptr %__pyx_filename, align 8, !dbg !6189, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !6189, !tbaa !1335
  %33 = load i32, ptr %__pyx_lineno, align 4, !dbg !6189, !tbaa !1335
  store i32 2305, ptr %__pyx_clineno, align 4, !dbg !6189, !tbaa !1335
  %34 = load i32, ptr %__pyx_clineno, align 4, !dbg !6189, !tbaa !1335
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6192

if.end57:                                         ; preds = %if.then54
  br label %sw.epilog58, !dbg !6193

sw.epilog58:                                      ; preds = %if.end57, %sw.epilog
  %35 = load i64, ptr %kw_args, align 8, !dbg !6194, !tbaa !1368
  %cmp59 = icmp sgt i64 %35, 0, !dbg !6194
  %lnot61 = xor i1 %cmp59, true, !dbg !6194
  %lnot63 = xor i1 %lnot61, true, !dbg !6194
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !6194
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !6194
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 0), !dbg !6194
  %tobool67 = icmp ne i64 %expval66, 0, !dbg !6194
  br i1 %tobool67, label %if.then68, label %if.end81, !dbg !6196

if.then68:                                        ; preds = %sw.epilog58
  %36 = load ptr, ptr %__pyx_kwds.addr, align 8, !dbg !6197, !tbaa !1252
  %arraydecay = getelementptr inbounds [3 x ptr], ptr %values, i64 0, i64 0, !dbg !6197
  %37 = load i64, ptr %pos_args, align 8, !dbg !6197, !tbaa !1368
  %call69 = call i32 @__Pyx_ParseOptionalKeywords(ptr noundef %36, ptr noundef @__pyx_pw_6pandas_5_libs_8indexing_1__pyx_unpickle_NDFrameIndexerBase.__pyx_pyargnames, ptr noundef null, ptr noundef %arraydecay, i64 noundef %37, ptr noundef @.str.62), !dbg !6197
  %cmp70 = icmp slt i32 %call69, 0, !dbg !6197
  %lnot72 = xor i1 %cmp70, true, !dbg !6197
  %lnot74 = xor i1 %lnot72, true, !dbg !6197
  %lnot.ext75 = zext i1 %lnot74 to i32, !dbg !6197
  %conv76 = sext i32 %lnot.ext75 to i64, !dbg !6197
  %expval77 = call i64 @llvm.expect.i64(i64 %conv76, i64 0), !dbg !6197
  %tobool78 = icmp ne i64 %expval77, 0, !dbg !6197
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !6200

if.then79:                                        ; preds = %if.then68
  %38 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6201, !tbaa !1252
  store ptr %38, ptr %__pyx_filename, align 8, !dbg !6201, !tbaa !1252
  %39 = load ptr, ptr %__pyx_filename, align 8, !dbg !6201, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !6201, !tbaa !1335
  %40 = load i32, ptr %__pyx_lineno, align 4, !dbg !6201, !tbaa !1335
  store i32 2309, ptr %__pyx_clineno, align 4, !dbg !6201, !tbaa !1335
  %41 = load i32, ptr %__pyx_clineno, align 4, !dbg !6201, !tbaa !1335
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6204

if.end80:                                         ; preds = %if.then68
  br label %if.end81, !dbg !6205

if.end81:                                         ; preds = %if.end80, %sw.epilog58
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6206
  br label %cleanup, !dbg !6206

cleanup:                                          ; preds = %if.then79, %if.else56, %if.else39, %if.else, %sw.default, %if.end81
  call void @llvm.lifetime.end.p0(i64 8, ptr %pos_args) #8, !dbg !6206
  call void @llvm.lifetime.end.p0(i64 8, ptr %kw_args) #8, !dbg !6206
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup117 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end99, !dbg !6207

if.else83:                                        ; preds = %entry
  %42 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !6208, !tbaa !1252
  %ob_size84 = getelementptr inbounds %struct.PyVarObject, ptr %42, i32 0, i32 1, !dbg !6208
  %43 = load i64, ptr %ob_size84, align 8, !dbg !6208, !tbaa !2688
  %cmp85 = icmp ne i64 %43, 3, !dbg !6210
  br i1 %cmp85, label %if.then87, label %if.else88, !dbg !6211

if.then87:                                        ; preds = %if.else83
  store i32 3, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !6212

if.else88:                                        ; preds = %if.else83
  %44 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !6214, !tbaa !1252
  %ob_item89 = getelementptr inbounds %struct.PyTupleObject, ptr %44, i32 0, i32 1, !dbg !6214
  %arrayidx90 = getelementptr [1 x ptr], ptr %ob_item89, i64 0, i64 0, !dbg !6214
  %45 = load ptr, ptr %arrayidx90, align 8, !dbg !6214, !tbaa !1252
  %arrayidx91 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !6216
  store ptr %45, ptr %arrayidx91, align 16, !dbg !6217, !tbaa !1252
  %46 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !6218, !tbaa !1252
  %ob_item92 = getelementptr inbounds %struct.PyTupleObject, ptr %46, i32 0, i32 1, !dbg !6218
  %arrayidx93 = getelementptr [1 x ptr], ptr %ob_item92, i64 0, i64 1, !dbg !6218
  %47 = load ptr, ptr %arrayidx93, align 8, !dbg !6218, !tbaa !1252
  %arrayidx94 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !6219
  store ptr %47, ptr %arrayidx94, align 8, !dbg !6220, !tbaa !1252
  %48 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !6221, !tbaa !1252
  %ob_item95 = getelementptr inbounds %struct.PyTupleObject, ptr %48, i32 0, i32 1, !dbg !6221
  %arrayidx96 = getelementptr [1 x ptr], ptr %ob_item95, i64 0, i64 2, !dbg !6221
  %49 = load ptr, ptr %arrayidx96, align 8, !dbg !6221, !tbaa !1252
  %arrayidx97 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !6222
  store ptr %49, ptr %arrayidx97, align 16, !dbg !6223, !tbaa !1252
  br label %if.end98

if.end98:                                         ; preds = %if.else88
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %cleanup.cont
  %arrayidx100 = getelementptr [3 x ptr], ptr %values, i64 0, i64 0, !dbg !6224
  %50 = load ptr, ptr %arrayidx100, align 16, !dbg !6224, !tbaa !1252
  store ptr %50, ptr %__pyx_v___pyx_type, align 8, !dbg !6225, !tbaa !1252
  %arrayidx101 = getelementptr [3 x ptr], ptr %values, i64 0, i64 1, !dbg !6226
  %51 = load ptr, ptr %arrayidx101, align 8, !dbg !6226, !tbaa !1252
  %call102 = call i64 @__Pyx_PyInt_As_long(ptr noundef %51), !dbg !6227
  store i64 %call102, ptr %__pyx_v___pyx_checksum, align 8, !dbg !6228, !tbaa !1368
  %52 = load i64, ptr %__pyx_v___pyx_checksum, align 8, !dbg !6229, !tbaa !1368
  %cmp103 = icmp eq i64 %52, -1, !dbg !6229
  br i1 %cmp103, label %land.rhs, label %land.end, !dbg !6229

land.rhs:                                         ; preds = %if.end99
  %call105 = call ptr @PyErr_Occurred(), !dbg !6229
  %tobool106 = icmp ne ptr %call105, null, !dbg !6229
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end99
  %53 = phi i1 [ false, %if.end99 ], [ %tobool106, %land.rhs ], !dbg !6231
  %lnot107 = xor i1 %53, true, !dbg !6229
  %lnot109 = xor i1 %lnot107, true, !dbg !6229
  %lnot.ext110 = zext i1 %lnot109 to i32, !dbg !6229
  %conv111 = sext i32 %lnot.ext110 to i64, !dbg !6229
  %expval112 = call i64 @llvm.expect.i64(i64 %conv111, i64 0), !dbg !6229
  %tobool113 = icmp ne i64 %expval112, 0, !dbg !6229
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !6232

if.then114:                                       ; preds = %land.end
  %54 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6233, !tbaa !1252
  store ptr %54, ptr %__pyx_filename, align 8, !dbg !6233, !tbaa !1252
  %55 = load ptr, ptr %__pyx_filename, align 8, !dbg !6233, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !6233, !tbaa !1335
  %56 = load i32, ptr %__pyx_lineno, align 4, !dbg !6233, !tbaa !1335
  store i32 2319, ptr %__pyx_clineno, align 4, !dbg !6233, !tbaa !1335
  %57 = load i32, ptr %__pyx_clineno, align 4, !dbg !6233, !tbaa !1335
  store i32 5, ptr %cleanup.dest.slot, align 4
  br label %cleanup117, !dbg !6236

if.end115:                                        ; preds = %land.end
  %arrayidx116 = getelementptr [3 x ptr], ptr %values, i64 0, i64 2, !dbg !6237
  %58 = load ptr, ptr %arrayidx116, align 16, !dbg !6237, !tbaa !1252
  store ptr %58, ptr %__pyx_v___pyx_state, align 8, !dbg !6238, !tbaa !1252
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !6239
  br label %cleanup117, !dbg !6239

cleanup117:                                       ; preds = %if.then114, %if.then87, %if.end115, %cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr %values) #8, !dbg !6239
  %cleanup.dest118 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest118, label %cleanup122 [
    i32 0, label %cleanup.cont119
    i32 3, label %__pyx_L5_argtuple_error
    i32 5, label %__pyx_L3_error
  ]

cleanup.cont119:                                  ; preds = %cleanup117
  br label %__pyx_L4_argument_unpacking_done, !dbg !6240

__pyx_L5_argtuple_error:                          ; preds = %cleanup117
  tail call void @llvm.dbg.label(metadata !1067), !dbg !6241
  %59 = load ptr, ptr %__pyx_args.addr, align 8, !dbg !6242, !tbaa !1252
  %ob_size120 = getelementptr inbounds %struct.PyVarObject, ptr %59, i32 0, i32 1, !dbg !6242
  %60 = load i64, ptr %ob_size120, align 8, !dbg !6242, !tbaa !2688
  call void @__Pyx_RaiseArgtupleInvalid(ptr noundef @.str.62, i32 noundef 1, i64 noundef 3, i64 noundef 3, i64 noundef %60), !dbg !6243
  %61 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6244, !tbaa !1252
  store ptr %61, ptr %__pyx_filename, align 8, !dbg !6244, !tbaa !1252
  %62 = load ptr, ptr %__pyx_filename, align 8, !dbg !6244, !tbaa !1252
  store i32 1, ptr %__pyx_lineno, align 4, !dbg !6244, !tbaa !1335
  %63 = load i32, ptr %__pyx_lineno, align 4, !dbg !6244, !tbaa !1335
  store i32 2324, ptr %__pyx_clineno, align 4, !dbg !6244, !tbaa !1335
  %64 = load i32, ptr %__pyx_clineno, align 4, !dbg !6244, !tbaa !1335
  br label %__pyx_L3_error, !dbg !6247

__pyx_L3_error:                                   ; preds = %cleanup117, %__pyx_L5_argtuple_error
  tail call void @llvm.dbg.label(metadata !1068), !dbg !6248
  %65 = load i32, ptr %__pyx_clineno, align 4, !dbg !6249, !tbaa !1335
  %66 = load i32, ptr %__pyx_lineno, align 4, !dbg !6250, !tbaa !1335
  %67 = load ptr, ptr %__pyx_filename, align 8, !dbg !6251, !tbaa !1252
  call void @__Pyx_AddTraceback(ptr noundef @.str.63, i32 noundef %65, i32 noundef %66, ptr noundef %67), !dbg !6252
  store ptr null, ptr %retval, align 8, !dbg !6253
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup122, !dbg !6253

__pyx_L4_argument_unpacking_done:                 ; preds = %cleanup.cont119
  tail call void @llvm.dbg.label(metadata !1069), !dbg !6254
  %68 = load ptr, ptr %__pyx_self.addr, align 8, !dbg !6255, !tbaa !1252
  %69 = load ptr, ptr %__pyx_v___pyx_type, align 8, !dbg !6256, !tbaa !1252
  %70 = load i64, ptr %__pyx_v___pyx_checksum, align 8, !dbg !6257, !tbaa !1368
  %71 = load ptr, ptr %__pyx_v___pyx_state, align 8, !dbg !6258, !tbaa !1252
  %call121 = call ptr @__pyx_pf_6pandas_5_libs_8indexing___pyx_unpickle_NDFrameIndexerBase(ptr noundef %68, ptr noundef %69, i64 noundef %70, ptr noundef %71), !dbg !6259
  store ptr %call121, ptr %__pyx_r, align 8, !dbg !6260, !tbaa !1252
  %72 = load ptr, ptr %__pyx_r, align 8, !dbg !6261, !tbaa !1252
  store ptr %72, ptr %retval, align 8, !dbg !6262
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup122, !dbg !6262

cleanup122:                                       ; preds = %__pyx_L4_argument_unpacking_done, %__pyx_L3_error, %cleanup117
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !6263
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !6263
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #8, !dbg !6263
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !6263
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_state) #8, !dbg !6263
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_checksum) #8, !dbg !6263
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_type) #8, !dbg !6263
  %73 = load ptr, ptr %retval, align 8, !dbg !6263
  ret ptr %73, !dbg !6263
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @__Pyx_PyInt_As_long(ptr noundef %x) #3 !dbg !6264 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca ptr, align 8
  %neg_one = alloca i64, align 8
  %const_zero = alloca i64, align 8
  %is_unsigned = alloca i32, align 4
  %digits = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %value = alloca i32, align 4
  %value6 = alloca i32, align 4
  %value10 = alloca i64, align 8
  %value17 = alloca i64, align 8
  %value28 = alloca i64, align 8
  %val = alloca i64, align 8
  %v = alloca ptr, align 8
  %val30 = alloca i64, align 8
  %tmp = alloca ptr, align 8
  store ptr %x, ptr %x.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !6268, metadata !DIExpression()), !dbg !6304
  call void @llvm.lifetime.start.p0(i64 8, ptr %neg_one) #8, !dbg !6305
  tail call void @llvm.dbg.declare(metadata ptr %neg_one, metadata !6269, metadata !DIExpression()), !dbg !6306
  store i64 -1, ptr %neg_one, align 8, !dbg !6306, !tbaa !1368
  call void @llvm.lifetime.start.p0(i64 8, ptr %const_zero) #8, !dbg !6305
  tail call void @llvm.dbg.declare(metadata ptr %const_zero, metadata !6270, metadata !DIExpression()), !dbg !6307
  store i64 0, ptr %const_zero, align 8, !dbg !6307, !tbaa !1368
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_unsigned) #8, !dbg !6308
  tail call void @llvm.dbg.declare(metadata ptr %is_unsigned, metadata !6271, metadata !DIExpression()), !dbg !6309
  store i32 0, ptr %is_unsigned, align 4, !dbg !6309, !tbaa !1335
  %0 = load ptr, ptr %x.addr, align 8, !dbg !6310, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1, !dbg !6310
  %1 = load ptr, ptr %ob_type, align 8, !dbg !6310, !tbaa !2317
  %call = call i32 @PyType_HasFeature(ptr noundef %1, i64 noundef 16777216), !dbg !6310
  %tobool = icmp ne i32 %call, 0, !dbg !6310
  %lnot = xor i1 %tobool, true, !dbg !6310
  %lnot1 = xor i1 %lnot, true, !dbg !6310
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6310
  %conv = sext i32 %lnot.ext to i64, !dbg !6310
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6310
  %tobool2 = icmp ne i64 %expval, 0, !dbg !6310
  br i1 %tobool2, label %if.then, label %if.else, !dbg !6311

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %digits) #8, !dbg !6312
  tail call void @llvm.dbg.declare(metadata ptr %digits, metadata !6273, metadata !DIExpression()), !dbg !6313
  %2 = load ptr, ptr %x.addr, align 8, !dbg !6314, !tbaa !1252
  %ob_digit = getelementptr inbounds %struct._longobject, ptr %2, i32 0, i32 1, !dbg !6315
  %arraydecay = getelementptr inbounds [1 x i32], ptr %ob_digit, i64 0, i64 0, !dbg !6316
  store ptr %arraydecay, ptr %digits, align 8, !dbg !6313, !tbaa !1252
  %3 = load ptr, ptr %x.addr, align 8, !dbg !6317, !tbaa !1252
  %ob_size = getelementptr inbounds %struct.PyVarObject, ptr %3, i32 0, i32 1, !dbg !6317
  %4 = load i64, ptr %ob_size, align 8, !dbg !6317, !tbaa !2688
  switch i64 %4, label %sw.epilog [
    i64 0, label %sw.bb
    i64 -1, label %sw.bb3
    i64 1, label %sw.bb5
    i64 -2, label %sw.bb9
    i64 2, label %sw.bb16
    i64 -3, label %sw.bb24
    i64 3, label %sw.bb25
    i64 -4, label %sw.bb26
    i64 4, label %sw.bb27
  ], !dbg !6318

sw.bb:                                            ; preds = %if.then
  store i64 0, ptr %retval, align 8, !dbg !6319
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6319

sw.bb3:                                           ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %value) #8, !dbg !6320
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !6278, metadata !DIExpression()), !dbg !6320
  %5 = load ptr, ptr %digits, align 8, !dbg !6320, !tbaa !1252
  %arrayidx = getelementptr i32, ptr %5, i64 0, !dbg !6320
  %6 = load i32, ptr %arrayidx, align 4, !dbg !6320, !tbaa !1335
  %sub = sub i32 0, %6, !dbg !6320
  store i32 %sub, ptr %value, align 4, !dbg !6320, !tbaa !1335
  %7 = load i32, ptr %value, align 4, !dbg !6320, !tbaa !1335
  %conv4 = sext i32 %7 to i64, !dbg !6320
  store i64 %conv4, ptr %retval, align 8, !dbg !6320
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %value) #8, !dbg !6321
  br label %cleanup

sw.bb5:                                           ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 4, ptr %value6) #8, !dbg !6322
  tail call void @llvm.dbg.declare(metadata ptr %value6, metadata !6281, metadata !DIExpression()), !dbg !6322
  %8 = load ptr, ptr %digits, align 8, !dbg !6322, !tbaa !1252
  %arrayidx7 = getelementptr i32, ptr %8, i64 0, !dbg !6322
  %9 = load i32, ptr %arrayidx7, align 4, !dbg !6322, !tbaa !1335
  store i32 %9, ptr %value6, align 4, !dbg !6322, !tbaa !1335
  %10 = load i32, ptr %value6, align 4, !dbg !6322, !tbaa !1335
  %conv8 = zext i32 %10 to i64, !dbg !6322
  store i64 %conv8, ptr %retval, align 8, !dbg !6322
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr %value6) #8, !dbg !6323
  br label %cleanup

sw.bb9:                                           ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 8, ptr %value10) #8, !dbg !6324
  tail call void @llvm.dbg.declare(metadata ptr %value10, metadata !6283, metadata !DIExpression()), !dbg !6324
  %11 = load ptr, ptr %digits, align 8, !dbg !6324, !tbaa !1252
  %arrayidx11 = getelementptr i32, ptr %11, i64 1, !dbg !6324
  %12 = load i32, ptr %arrayidx11, align 4, !dbg !6324, !tbaa !1335
  %conv12 = zext i32 %12 to i64, !dbg !6324
  %shl = shl i64 %conv12, 30, !dbg !6324
  %13 = load ptr, ptr %digits, align 8, !dbg !6324, !tbaa !1252
  %arrayidx13 = getelementptr i32, ptr %13, i64 0, !dbg !6324
  %14 = load i32, ptr %arrayidx13, align 4, !dbg !6324, !tbaa !1335
  %conv14 = zext i32 %14 to i64, !dbg !6324
  %or = or i64 %shl, %conv14, !dbg !6324
  %sub15 = sub i64 0, %or, !dbg !6324
  store i64 %sub15, ptr %value10, align 8, !dbg !6324, !tbaa !1368
  %15 = load i64, ptr %value10, align 8, !dbg !6324, !tbaa !1368
  store i64 %15, ptr %retval, align 8, !dbg !6324
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %value10) #8, !dbg !6325
  br label %cleanup

sw.bb16:                                          ; preds = %if.then
  call void @llvm.lifetime.start.p0(i64 8, ptr %value17) #8, !dbg !6326
  tail call void @llvm.dbg.declare(metadata ptr %value17, metadata !6289, metadata !DIExpression()), !dbg !6326
  %16 = load ptr, ptr %digits, align 8, !dbg !6326, !tbaa !1252
  %arrayidx18 = getelementptr i32, ptr %16, i64 1, !dbg !6326
  %17 = load i32, ptr %arrayidx18, align 4, !dbg !6326, !tbaa !1335
  %conv19 = zext i32 %17 to i64, !dbg !6326
  %shl20 = shl i64 %conv19, 30, !dbg !6326
  %18 = load ptr, ptr %digits, align 8, !dbg !6326, !tbaa !1252
  %arrayidx21 = getelementptr i32, ptr %18, i64 0, !dbg !6326
  %19 = load i32, ptr %arrayidx21, align 4, !dbg !6326, !tbaa !1335
  %conv22 = zext i32 %19 to i64, !dbg !6326
  %or23 = or i64 %shl20, %conv22, !dbg !6326
  store i64 %or23, ptr %value17, align 8, !dbg !6326, !tbaa !1368
  %20 = load i64, ptr %value17, align 8, !dbg !6326, !tbaa !1368
  store i64 %20, ptr %retval, align 8, !dbg !6326
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %value17) #8, !dbg !6327
  br label %cleanup

sw.bb24:                                          ; preds = %if.then
  br label %sw.epilog, !dbg !6328

sw.bb25:                                          ; preds = %if.then
  br label %sw.epilog, !dbg !6329

sw.bb26:                                          ; preds = %if.then
  br label %sw.epilog, !dbg !6330

sw.bb27:                                          ; preds = %if.then
  br label %sw.epilog, !dbg !6331

sw.epilog:                                        ; preds = %if.then, %sw.bb27, %sw.bb26, %sw.bb25, %sw.bb24
  call void @llvm.lifetime.start.p0(i64 8, ptr %value28) #8, !dbg !6332
  tail call void @llvm.dbg.declare(metadata ptr %value28, metadata !6295, metadata !DIExpression()), !dbg !6332
  %21 = load ptr, ptr %x.addr, align 8, !dbg !6332, !tbaa !1252
  %call29 = call i64 @PyLong_AsLong(ptr noundef %21), !dbg !6332
  store i64 %call29, ptr %value28, align 8, !dbg !6332, !tbaa !1368
  %22 = load i64, ptr %value28, align 8, !dbg !6332, !tbaa !1368
  store i64 %22, ptr %retval, align 8, !dbg !6332
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %value28) #8, !dbg !6333
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.bb16, %sw.bb9, %sw.bb5, %sw.bb3, %sw.bb
  call void @llvm.lifetime.end.p0(i64 8, ptr %digits) #8, !dbg !6334
  br label %cleanup37

if.else:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr %val30) #8, !dbg !6335
  tail call void @llvm.dbg.declare(metadata ptr %val30, metadata !6299, metadata !DIExpression()), !dbg !6336
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !6337
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !6301, metadata !DIExpression()), !dbg !6338
  %23 = load ptr, ptr %x.addr, align 8, !dbg !6339, !tbaa !1252
  %call31 = call ptr @__Pyx_PyNumber_IntOrLong(ptr noundef %23), !dbg !6340
  store ptr %call31, ptr %tmp, align 8, !dbg !6338, !tbaa !1252
  %24 = load ptr, ptr %tmp, align 8, !dbg !6341, !tbaa !1252
  %tobool32 = icmp ne ptr %24, null, !dbg !6341
  br i1 %tobool32, label %if.end, label %if.then33, !dbg !6343

if.then33:                                        ; preds = %if.else
  store i64 -1, ptr %retval, align 8, !dbg !6344
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup35, !dbg !6344

if.end:                                           ; preds = %if.else
  %25 = load ptr, ptr %tmp, align 8, !dbg !6345, !tbaa !1252
  %call34 = call i64 @__Pyx_PyInt_As_long(ptr noundef %25), !dbg !6346
  store i64 %call34, ptr %val30, align 8, !dbg !6347, !tbaa !1368
  %26 = load ptr, ptr %tmp, align 8, !dbg !6348, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %26), !dbg !6348
  %27 = load i64, ptr %val30, align 8, !dbg !6349, !tbaa !1368
  store i64 %27, ptr %retval, align 8, !dbg !6350
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup35, !dbg !6350

cleanup35:                                        ; preds = %if.end, %if.then33
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !6351
  call void @llvm.lifetime.end.p0(i64 8, ptr %val30) #8, !dbg !6351
  br label %cleanup37

raise_overflow:                                   ; No predecessors!
  tail call void @llvm.dbg.label(metadata !6302), !dbg !6352
  %28 = load ptr, ptr @PyExc_OverflowError, align 8, !dbg !6353, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %28, ptr noundef @.str.64), !dbg !6354
  store i64 -1, ptr %retval, align 8, !dbg !6355
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup37, !dbg !6355

raise_neg_overflow:                               ; No predecessors!
  tail call void @llvm.dbg.label(metadata !6303), !dbg !6356
  %29 = load ptr, ptr @PyExc_OverflowError, align 8, !dbg !6357, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %29, ptr noundef @.str.65), !dbg !6358
  store i64 -1, ptr %retval, align 8, !dbg !6359
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup37, !dbg !6359

cleanup37:                                        ; preds = %raise_neg_overflow, %raise_overflow, %cleanup35, %cleanup
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_unsigned) #8, !dbg !6360
  call void @llvm.lifetime.end.p0(i64 8, ptr %const_zero) #8, !dbg !6360
  call void @llvm.lifetime.end.p0(i64 8, ptr %neg_one) #8, !dbg !6360
  %30 = load i64, ptr %retval, align 8, !dbg !6360
  ret i64 %30, !dbg !6360
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_pf_6pandas_5_libs_8indexing___pyx_unpickle_NDFrameIndexerBase(ptr noundef %__pyx_self, ptr noundef %__pyx_v___pyx_type, i64 noundef %__pyx_v___pyx_checksum, ptr noundef %__pyx_v___pyx_state) #0 !dbg !6361 {
entry:
  %__pyx_self.addr = alloca ptr, align 8
  %__pyx_v___pyx_type.addr = alloca ptr, align 8
  %__pyx_v___pyx_checksum.addr = alloca i64, align 8
  %__pyx_v___pyx_state.addr = alloca ptr, align 8
  %__pyx_v___pyx_PickleError = alloca ptr, align 8
  %__pyx_v___pyx_result = alloca ptr, align 8
  %__pyx_r = alloca ptr, align 8
  %__pyx_t_1 = alloca ptr, align 8
  %__pyx_t_2 = alloca i32, align 4
  %__pyx_t_3 = alloca i32, align 4
  %__pyx_t_4 = alloca ptr, align 8
  %__pyx_t_5 = alloca ptr, align 8
  %__pyx_t_6 = alloca ptr, align 8
  %__pyx_lineno = alloca i32, align 4
  %__pyx_filename = alloca ptr, align 8
  %__pyx_clineno = alloca i32, align 4
  %function = alloca ptr, align 8
  %tmp = alloca ptr, align 8
  %function154 = alloca ptr, align 8
  %tmp157 = alloca ptr, align 8
  store ptr %__pyx_self, ptr %__pyx_self.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_self.addr, metadata !6365, metadata !DIExpression()), !dbg !6399
  store ptr %__pyx_v___pyx_type, ptr %__pyx_v___pyx_type.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_type.addr, metadata !6366, metadata !DIExpression()), !dbg !6400
  store i64 %__pyx_v___pyx_checksum, ptr %__pyx_v___pyx_checksum.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_checksum.addr, metadata !6367, metadata !DIExpression()), !dbg !6401
  store ptr %__pyx_v___pyx_state, ptr %__pyx_v___pyx_state.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_state.addr, metadata !6368, metadata !DIExpression()), !dbg !6402
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_PickleError) #8, !dbg !6403
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_PickleError, metadata !6369, metadata !DIExpression()), !dbg !6404
  store ptr null, ptr %__pyx_v___pyx_PickleError, align 8, !dbg !6404, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_v___pyx_result) #8, !dbg !6405
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_v___pyx_result, metadata !6370, metadata !DIExpression()), !dbg !6406
  store ptr null, ptr %__pyx_v___pyx_result, align 8, !dbg !6406, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_r) #8, !dbg !6407
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_r, metadata !6371, metadata !DIExpression()), !dbg !6408
  store ptr null, ptr %__pyx_r, align 8, !dbg !6408, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !6409
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_1, metadata !6372, metadata !DIExpression()), !dbg !6410
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6410, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_2) #8, !dbg !6411
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_2, metadata !6373, metadata !DIExpression()), !dbg !6412
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_t_3) #8, !dbg !6413
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_3, metadata !6374, metadata !DIExpression()), !dbg !6414
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_4) #8, !dbg !6415
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_4, metadata !6375, metadata !DIExpression()), !dbg !6416
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !6416, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_5) #8, !dbg !6417
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_5, metadata !6376, metadata !DIExpression()), !dbg !6418
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !6418, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_t_6) #8, !dbg !6419
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_t_6, metadata !6377, metadata !DIExpression()), !dbg !6420
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !6420, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !6421
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_lineno, metadata !6378, metadata !DIExpression()), !dbg !6422
  store i32 0, ptr %__pyx_lineno, align 4, !dbg !6422, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 8, ptr %__pyx_filename) #8, !dbg !6423
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_filename, metadata !6379, metadata !DIExpression()), !dbg !6424
  store ptr null, ptr %__pyx_filename, align 8, !dbg !6424, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !6425
  tail call void @llvm.dbg.declare(metadata ptr %__pyx_clineno, metadata !6380, metadata !DIExpression()), !dbg !6426
  store i32 0, ptr %__pyx_clineno, align 4, !dbg !6426, !tbaa !1335
  %0 = load i64, ptr %__pyx_v___pyx_checksum.addr, align 8, !dbg !6427, !tbaa !1368
  %call = call ptr @__Pyx_PyInt_From_long(i64 noundef %0), !dbg !6428
  store ptr %call, ptr %__pyx_t_1, align 8, !dbg !6429, !tbaa !1252
  %1 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6430, !tbaa !1252
  %tobool = icmp ne ptr %1, null, !dbg !6430
  %lnot = xor i1 %tobool, true, !dbg !6430
  %lnot1 = xor i1 %lnot, true, !dbg !6430
  %lnot2 = xor i1 %lnot1, true, !dbg !6430
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6430
  %conv = sext i32 %lnot.ext to i64, !dbg !6430
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6430
  %tobool3 = icmp ne i64 %expval, 0, !dbg !6430
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6432

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6433, !tbaa !1252
  store ptr %2, ptr %__pyx_filename, align 8, !dbg !6433, !tbaa !1252
  %3 = load ptr, ptr %__pyx_filename, align 8, !dbg !6433, !tbaa !1252
  store i32 4, ptr %__pyx_lineno, align 4, !dbg !6433, !tbaa !1335
  %4 = load i32, ptr %__pyx_lineno, align 4, !dbg !6433, !tbaa !1335
  store i32 2360, ptr %__pyx_clineno, align 4, !dbg !6433, !tbaa !1335
  %5 = load i32, ptr %__pyx_clineno, align 4, !dbg !6433, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6436

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6437, !tbaa !1252
  %7 = load ptr, ptr @__pyx_tuple__2, align 8, !dbg !6438, !tbaa !1252
  %call4 = call i32 @__Pyx_PySequence_ContainsTF(ptr noundef %6, ptr noundef %7, i32 noundef 3), !dbg !6439
  store i32 %call4, ptr %__pyx_t_2, align 4, !dbg !6440, !tbaa !1335
  %8 = load i32, ptr %__pyx_t_2, align 4, !dbg !6441, !tbaa !1335
  %cmp = icmp slt i32 %8, 0, !dbg !6441
  %lnot6 = xor i1 %cmp, true, !dbg !6441
  %lnot8 = xor i1 %lnot6, true, !dbg !6441
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !6441
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !6441
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 0), !dbg !6441
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !6441
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6443

if.then13:                                        ; preds = %if.end
  %9 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6444, !tbaa !1252
  store ptr %9, ptr %__pyx_filename, align 8, !dbg !6444, !tbaa !1252
  %10 = load ptr, ptr %__pyx_filename, align 8, !dbg !6444, !tbaa !1252
  store i32 4, ptr %__pyx_lineno, align 4, !dbg !6444, !tbaa !1335
  %11 = load i32, ptr %__pyx_lineno, align 4, !dbg !6444, !tbaa !1335
  store i32 2362, ptr %__pyx_clineno, align 4, !dbg !6444, !tbaa !1335
  %12 = load i32, ptr %__pyx_clineno, align 4, !dbg !6444, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6447

if.end14:                                         ; preds = %if.end
  %13 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6448, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %13), !dbg !6448
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6449, !tbaa !1252
  %14 = load i32, ptr %__pyx_t_2, align 4, !dbg !6450, !tbaa !1335
  %cmp15 = icmp ne i32 %14, 0, !dbg !6451
  %conv16 = zext i1 %cmp15 to i32, !dbg !6451
  store i32 %conv16, ptr %__pyx_t_3, align 4, !dbg !6452, !tbaa !1335
  %15 = load i32, ptr %__pyx_t_3, align 4, !dbg !6453, !tbaa !1335
  %tobool17 = icmp ne i32 %15, 0, !dbg !6453
  br i1 %tobool17, label %if.then18, label %if.end120, !dbg !6454

if.then18:                                        ; preds = %if.end14
  %call19 = call ptr @PyList_New(i64 noundef 1), !dbg !6455
  store ptr %call19, ptr %__pyx_t_1, align 8, !dbg !6456, !tbaa !1252
  %16 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6457, !tbaa !1252
  %tobool20 = icmp ne ptr %16, null, !dbg !6457
  %lnot21 = xor i1 %tobool20, true, !dbg !6457
  %lnot23 = xor i1 %lnot21, true, !dbg !6457
  %lnot25 = xor i1 %lnot23, true, !dbg !6457
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !6457
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !6457
  %expval28 = call i64 @llvm.expect.i64(i64 %conv27, i64 0), !dbg !6457
  %tobool29 = icmp ne i64 %expval28, 0, !dbg !6457
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !6459

if.then30:                                        ; preds = %if.then18
  %17 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6460, !tbaa !1252
  store ptr %17, ptr %__pyx_filename, align 8, !dbg !6460, !tbaa !1252
  %18 = load ptr, ptr %__pyx_filename, align 8, !dbg !6460, !tbaa !1252
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !6460, !tbaa !1335
  %19 = load i32, ptr %__pyx_lineno, align 4, !dbg !6460, !tbaa !1335
  store i32 2374, ptr %__pyx_clineno, align 4, !dbg !6460, !tbaa !1335
  %20 = load i32, ptr %__pyx_clineno, align 4, !dbg !6460, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6463

if.end31:                                         ; preds = %if.then18
  %21 = load ptr, ptr @__pyx_n_s_PickleError, align 8, !dbg !6464, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %21), !dbg !6464
  %22 = load ptr, ptr @__pyx_n_s_PickleError, align 8, !dbg !6465, !tbaa !1252
  %23 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6465, !tbaa !1252
  %ob_item = getelementptr inbounds %struct.PyListObject, ptr %23, i32 0, i32 1, !dbg !6465
  %24 = load ptr, ptr %ob_item, align 8, !dbg !6465, !tbaa !6466
  %arrayidx = getelementptr ptr, ptr %24, i64 0, !dbg !6465
  store ptr %22, ptr %arrayidx, align 8, !dbg !6465, !tbaa !1252
  %25 = load ptr, ptr @__pyx_n_s_pickle, align 8, !dbg !6468, !tbaa !1252
  %26 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6469, !tbaa !1252
  %call32 = call ptr @__Pyx_Import(ptr noundef %25, ptr noundef %26, i32 noundef 0), !dbg !6470
  store ptr %call32, ptr %__pyx_t_4, align 8, !dbg !6471, !tbaa !1252
  %27 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6472, !tbaa !1252
  %tobool33 = icmp ne ptr %27, null, !dbg !6472
  %lnot34 = xor i1 %tobool33, true, !dbg !6472
  %lnot36 = xor i1 %lnot34, true, !dbg !6472
  %lnot38 = xor i1 %lnot36, true, !dbg !6472
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !6472
  %conv40 = sext i32 %lnot.ext39 to i64, !dbg !6472
  %expval41 = call i64 @llvm.expect.i64(i64 %conv40, i64 0), !dbg !6472
  %tobool42 = icmp ne i64 %expval41, 0, !dbg !6472
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !6474

if.then43:                                        ; preds = %if.end31
  %28 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6475, !tbaa !1252
  store ptr %28, ptr %__pyx_filename, align 8, !dbg !6475, !tbaa !1252
  %29 = load ptr, ptr %__pyx_filename, align 8, !dbg !6475, !tbaa !1252
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !6475, !tbaa !1335
  %30 = load i32, ptr %__pyx_lineno, align 4, !dbg !6475, !tbaa !1335
  store i32 2379, ptr %__pyx_clineno, align 4, !dbg !6475, !tbaa !1335
  %31 = load i32, ptr %__pyx_clineno, align 4, !dbg !6475, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6478

if.end44:                                         ; preds = %if.end31
  %32 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6479, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %32), !dbg !6479
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6480, !tbaa !1252
  %33 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6481, !tbaa !1252
  %34 = load ptr, ptr @__pyx_n_s_PickleError, align 8, !dbg !6482, !tbaa !1252
  %call45 = call ptr @__Pyx_ImportFrom(ptr noundef %33, ptr noundef %34), !dbg !6483
  store ptr %call45, ptr %__pyx_t_1, align 8, !dbg !6484, !tbaa !1252
  %35 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6485, !tbaa !1252
  %tobool46 = icmp ne ptr %35, null, !dbg !6485
  %lnot47 = xor i1 %tobool46, true, !dbg !6485
  %lnot49 = xor i1 %lnot47, true, !dbg !6485
  %lnot51 = xor i1 %lnot49, true, !dbg !6485
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !6485
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !6485
  %expval54 = call i64 @llvm.expect.i64(i64 %conv53, i64 0), !dbg !6485
  %tobool55 = icmp ne i64 %expval54, 0, !dbg !6485
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !6487

if.then56:                                        ; preds = %if.end44
  %36 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6488, !tbaa !1252
  store ptr %36, ptr %__pyx_filename, align 8, !dbg !6488, !tbaa !1252
  %37 = load ptr, ptr %__pyx_filename, align 8, !dbg !6488, !tbaa !1252
  store i32 5, ptr %__pyx_lineno, align 4, !dbg !6488, !tbaa !1335
  %38 = load i32, ptr %__pyx_lineno, align 4, !dbg !6488, !tbaa !1335
  store i32 2382, ptr %__pyx_clineno, align 4, !dbg !6488, !tbaa !1335
  %39 = load i32, ptr %__pyx_clineno, align 4, !dbg !6488, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6491

if.end57:                                         ; preds = %if.end44
  %40 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6492, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %40), !dbg !6492
  %41 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6493, !tbaa !1252
  store ptr %41, ptr %__pyx_v___pyx_PickleError, align 8, !dbg !6494, !tbaa !1252
  %42 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6495, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %42), !dbg !6495
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6496, !tbaa !1252
  %43 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6497, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %43), !dbg !6497
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !6498, !tbaa !1252
  %44 = load i64, ptr %__pyx_v___pyx_checksum.addr, align 8, !dbg !6499, !tbaa !1368
  %call58 = call ptr @__Pyx_PyInt_From_long(i64 noundef %44), !dbg !6500
  store ptr %call58, ptr %__pyx_t_1, align 8, !dbg !6501, !tbaa !1252
  %45 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6502, !tbaa !1252
  %tobool59 = icmp ne ptr %45, null, !dbg !6502
  %lnot60 = xor i1 %tobool59, true, !dbg !6502
  %lnot62 = xor i1 %lnot60, true, !dbg !6502
  %lnot64 = xor i1 %lnot62, true, !dbg !6502
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !6502
  %conv66 = sext i32 %lnot.ext65 to i64, !dbg !6502
  %expval67 = call i64 @llvm.expect.i64(i64 %conv66, i64 0), !dbg !6502
  %tobool68 = icmp ne i64 %expval67, 0, !dbg !6502
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !6504

if.then69:                                        ; preds = %if.end57
  %46 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6505, !tbaa !1252
  store ptr %46, ptr %__pyx_filename, align 8, !dbg !6505, !tbaa !1252
  %47 = load ptr, ptr %__pyx_filename, align 8, !dbg !6505, !tbaa !1252
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !6505, !tbaa !1335
  %48 = load i32, ptr %__pyx_lineno, align 4, !dbg !6505, !tbaa !1335
  store i32 2396, ptr %__pyx_clineno, align 4, !dbg !6505, !tbaa !1335
  %49 = load i32, ptr %__pyx_clineno, align 4, !dbg !6505, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6508

if.end70:                                         ; preds = %if.end57
  %50 = load ptr, ptr @__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, align 8, !dbg !6509, !tbaa !1252
  %51 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6509, !tbaa !1252
  %call71 = call ptr @PyUnicode_Format(ptr noundef %50, ptr noundef %51), !dbg !6509
  store ptr %call71, ptr %__pyx_t_5, align 8, !dbg !6510, !tbaa !1252
  %52 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6511, !tbaa !1252
  %tobool72 = icmp ne ptr %52, null, !dbg !6511
  %lnot73 = xor i1 %tobool72, true, !dbg !6511
  %lnot75 = xor i1 %lnot73, true, !dbg !6511
  %lnot77 = xor i1 %lnot75, true, !dbg !6511
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !6511
  %conv79 = sext i32 %lnot.ext78 to i64, !dbg !6511
  %expval80 = call i64 @llvm.expect.i64(i64 %conv79, i64 0), !dbg !6511
  %tobool81 = icmp ne i64 %expval80, 0, !dbg !6511
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !6513

if.then82:                                        ; preds = %if.end70
  %53 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6514, !tbaa !1252
  store ptr %53, ptr %__pyx_filename, align 8, !dbg !6514, !tbaa !1252
  %54 = load ptr, ptr %__pyx_filename, align 8, !dbg !6514, !tbaa !1252
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !6514, !tbaa !1335
  %55 = load i32, ptr %__pyx_lineno, align 4, !dbg !6514, !tbaa !1335
  store i32 2398, ptr %__pyx_clineno, align 4, !dbg !6514, !tbaa !1335
  %56 = load i32, ptr %__pyx_clineno, align 4, !dbg !6514, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6517

if.end83:                                         ; preds = %if.end70
  %57 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6518, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %57), !dbg !6518
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6519, !tbaa !1252
  %58 = load ptr, ptr %__pyx_v___pyx_PickleError, align 8, !dbg !6520, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %58), !dbg !6520
  %59 = load ptr, ptr %__pyx_v___pyx_PickleError, align 8, !dbg !6521, !tbaa !1252
  store ptr %59, ptr %__pyx_t_1, align 8, !dbg !6522, !tbaa !1252
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !6523, !tbaa !1252
  %60 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6524, !tbaa !1252
  %call84 = call i32 @_Py_IS_TYPE(ptr noundef %60, ptr noundef @PyMethod_Type), !dbg !6524
  %tobool85 = icmp ne i32 %call84, 0, !dbg !6524
  %lnot86 = xor i1 %tobool85, true, !dbg !6524
  %lnot88 = xor i1 %lnot86, true, !dbg !6524
  %lnot.ext89 = zext i1 %lnot88 to i32, !dbg !6524
  %conv90 = sext i32 %lnot.ext89 to i64, !dbg !6524
  %expval91 = call i64 @llvm.expect.i64(i64 %conv90, i64 0), !dbg !6524
  %tobool92 = icmp ne i64 %expval91, 0, !dbg !6524
  br i1 %tobool92, label %if.then93, label %if.end104, !dbg !6525

if.then93:                                        ; preds = %if.end83
  %61 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6526, !tbaa !1252
  %im_self = getelementptr inbounds %struct.PyMethodObject, ptr %61, i32 0, i32 2, !dbg !6526
  %62 = load ptr, ptr %im_self, align 8, !dbg !6526, !tbaa !3945
  store ptr %62, ptr %__pyx_t_6, align 8, !dbg !6527, !tbaa !1252
  %63 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6528, !tbaa !1252
  %tobool94 = icmp ne ptr %63, null, !dbg !6528
  %lnot95 = xor i1 %tobool94, true, !dbg !6528
  %lnot97 = xor i1 %lnot95, true, !dbg !6528
  %lnot.ext98 = zext i1 %lnot97 to i32, !dbg !6528
  %conv99 = sext i32 %lnot.ext98 to i64, !dbg !6528
  %expval100 = call i64 @llvm.expect.i64(i64 %conv99, i64 1), !dbg !6528
  %tobool101 = icmp ne i64 %expval100, 0, !dbg !6528
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !6529

if.then102:                                       ; preds = %if.then93
  call void @llvm.lifetime.start.p0(i64 8, ptr %function) #8, !dbg !6530
  tail call void @llvm.dbg.declare(metadata ptr %function, metadata !6381, metadata !DIExpression()), !dbg !6531
  %64 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6532, !tbaa !1252
  %im_func = getelementptr inbounds %struct.PyMethodObject, ptr %64, i32 0, i32 1, !dbg !6532
  %65 = load ptr, ptr %im_func, align 8, !dbg !6532, !tbaa !3953
  store ptr %65, ptr %function, align 8, !dbg !6531, !tbaa !1252
  %66 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6533, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %66), !dbg !6533
  %67 = load ptr, ptr %function, align 8, !dbg !6534, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %67), !dbg !6534
  br label %do.body, !dbg !6535

do.body:                                          ; preds = %if.then102
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !6536
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !6388, metadata !DIExpression()), !dbg !6536
  %68 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6536, !tbaa !1252
  store ptr %68, ptr %tmp, align 8, !dbg !6536, !tbaa !1252
  %69 = load ptr, ptr %function, align 8, !dbg !6536, !tbaa !1252
  store ptr %69, ptr %__pyx_t_1, align 8, !dbg !6536, !tbaa !1252
  %70 = load ptr, ptr %tmp, align 8, !dbg !6536, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %70), !dbg !6536
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !6535
  br label %do.cond, !dbg !6536

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !6536

do.end:                                           ; preds = %do.cond
  call void @llvm.lifetime.end.p0(i64 8, ptr %function) #8, !dbg !6537
  br label %if.end103, !dbg !6538

if.end103:                                        ; preds = %do.end, %if.then93
  br label %if.end104, !dbg !6539

if.end104:                                        ; preds = %if.end103, %if.end83
  %71 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6540, !tbaa !1252
  %tobool105 = icmp ne ptr %71, null, !dbg !6541
  br i1 %tobool105, label %cond.true, label %cond.false, !dbg !6541

cond.true:                                        ; preds = %if.end104
  %72 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6542, !tbaa !1252
  %73 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6543, !tbaa !1252
  %74 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6544, !tbaa !1252
  %call106 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %72, ptr noundef %73, ptr noundef %74), !dbg !6545
  br label %cond.end, !dbg !6541

cond.false:                                       ; preds = %if.end104
  %75 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6546, !tbaa !1252
  %76 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6547, !tbaa !1252
  %call107 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %75, ptr noundef %76), !dbg !6548
  br label %cond.end, !dbg !6541

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call106, %cond.true ], [ %call107, %cond.false ], !dbg !6541
  store ptr %cond, ptr %__pyx_t_4, align 8, !dbg !6549, !tbaa !1252
  %77 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6550, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %77), !dbg !6550
  store ptr null, ptr %__pyx_t_6, align 8, !dbg !6551, !tbaa !1252
  %78 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6552, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %78), !dbg !6552
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !6553, !tbaa !1252
  %79 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6554, !tbaa !1252
  %tobool108 = icmp ne ptr %79, null, !dbg !6554
  %lnot109 = xor i1 %tobool108, true, !dbg !6554
  %lnot111 = xor i1 %lnot109, true, !dbg !6554
  %lnot113 = xor i1 %lnot111, true, !dbg !6554
  %lnot.ext114 = zext i1 %lnot113 to i32, !dbg !6554
  %conv115 = sext i32 %lnot.ext114 to i64, !dbg !6554
  %expval116 = call i64 @llvm.expect.i64(i64 %conv115, i64 0), !dbg !6554
  %tobool117 = icmp ne i64 %expval116, 0, !dbg !6554
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !6556

if.then118:                                       ; preds = %cond.end
  %80 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6557, !tbaa !1252
  store ptr %80, ptr %__pyx_filename, align 8, !dbg !6557, !tbaa !1252
  %81 = load ptr, ptr %__pyx_filename, align 8, !dbg !6557, !tbaa !1252
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !6557, !tbaa !1335
  %82 = load i32, ptr %__pyx_lineno, align 4, !dbg !6557, !tbaa !1335
  store i32 2415, ptr %__pyx_clineno, align 4, !dbg !6557, !tbaa !1335
  %83 = load i32, ptr %__pyx_clineno, align 4, !dbg !6557, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6560

if.end119:                                        ; preds = %cond.end
  %84 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6561, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %84), !dbg !6561
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6562, !tbaa !1252
  %85 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6563, !tbaa !1252
  call void @__Pyx_Raise(ptr noundef %85, ptr noundef null, ptr noundef null, ptr noundef null), !dbg !6564
  %86 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6565, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %86), !dbg !6565
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !6566, !tbaa !1252
  %87 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6567, !tbaa !1252
  store ptr %87, ptr %__pyx_filename, align 8, !dbg !6567, !tbaa !1252
  %88 = load ptr, ptr %__pyx_filename, align 8, !dbg !6567, !tbaa !1252
  store i32 6, ptr %__pyx_lineno, align 4, !dbg !6567, !tbaa !1335
  %89 = load i32, ptr %__pyx_lineno, align 4, !dbg !6567, !tbaa !1335
  store i32 2420, ptr %__pyx_clineno, align 4, !dbg !6567, !tbaa !1335
  %90 = load i32, ptr %__pyx_clineno, align 4, !dbg !6567, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6570

if.end120:                                        ; preds = %if.end14
  %91 = load ptr, ptr @__pyx_ptype_6pandas_5_libs_8indexing_NDFrameIndexerBase, align 8, !dbg !6571, !tbaa !1252
  %92 = load ptr, ptr @__pyx_n_s_new, align 8, !dbg !6572, !tbaa !1252
  %call121 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %91, ptr noundef %92), !dbg !6573
  store ptr %call121, ptr %__pyx_t_1, align 8, !dbg !6574, !tbaa !1252
  %93 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6575, !tbaa !1252
  %tobool122 = icmp ne ptr %93, null, !dbg !6575
  %lnot123 = xor i1 %tobool122, true, !dbg !6575
  %lnot125 = xor i1 %lnot123, true, !dbg !6575
  %lnot127 = xor i1 %lnot125, true, !dbg !6575
  %lnot.ext128 = zext i1 %lnot127 to i32, !dbg !6575
  %conv129 = sext i32 %lnot.ext128 to i64, !dbg !6575
  %expval130 = call i64 @llvm.expect.i64(i64 %conv129, i64 0), !dbg !6575
  %tobool131 = icmp ne i64 %expval130, 0, !dbg !6575
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !6577

if.then132:                                       ; preds = %if.end120
  %94 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6578, !tbaa !1252
  store ptr %94, ptr %__pyx_filename, align 8, !dbg !6578, !tbaa !1252
  %95 = load ptr, ptr %__pyx_filename, align 8, !dbg !6578, !tbaa !1252
  store i32 7, ptr %__pyx_lineno, align 4, !dbg !6578, !tbaa !1335
  %96 = load i32, ptr %__pyx_lineno, align 4, !dbg !6578, !tbaa !1335
  store i32 2438, ptr %__pyx_clineno, align 4, !dbg !6578, !tbaa !1335
  %97 = load i32, ptr %__pyx_clineno, align 4, !dbg !6578, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6581

if.end133:                                        ; preds = %if.end120
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !6582, !tbaa !1252
  %98 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6583, !tbaa !1252
  %call134 = call i32 @_Py_IS_TYPE(ptr noundef %98, ptr noundef @PyMethod_Type), !dbg !6583
  %tobool135 = icmp ne i32 %call134, 0, !dbg !6583
  %lnot136 = xor i1 %tobool135, true, !dbg !6583
  %lnot138 = xor i1 %lnot136, true, !dbg !6583
  %lnot.ext139 = zext i1 %lnot138 to i32, !dbg !6583
  %conv140 = sext i32 %lnot.ext139 to i64, !dbg !6583
  %expval141 = call i64 @llvm.expect.i64(i64 %conv140, i64 1), !dbg !6583
  %tobool142 = icmp ne i64 %expval141, 0, !dbg !6583
  br i1 %tobool142, label %if.then143, label %if.end161, !dbg !6584

if.then143:                                       ; preds = %if.end133
  %99 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6585, !tbaa !1252
  %im_self144 = getelementptr inbounds %struct.PyMethodObject, ptr %99, i32 0, i32 2, !dbg !6585
  %100 = load ptr, ptr %im_self144, align 8, !dbg !6585, !tbaa !3945
  store ptr %100, ptr %__pyx_t_5, align 8, !dbg !6586, !tbaa !1252
  %101 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6587, !tbaa !1252
  %tobool145 = icmp ne ptr %101, null, !dbg !6587
  %lnot146 = xor i1 %tobool145, true, !dbg !6587
  %lnot148 = xor i1 %lnot146, true, !dbg !6587
  %lnot.ext149 = zext i1 %lnot148 to i32, !dbg !6587
  %conv150 = sext i32 %lnot.ext149 to i64, !dbg !6587
  %expval151 = call i64 @llvm.expect.i64(i64 %conv150, i64 1), !dbg !6587
  %tobool152 = icmp ne i64 %expval151, 0, !dbg !6587
  br i1 %tobool152, label %if.then153, label %if.end160, !dbg !6588

if.then153:                                       ; preds = %if.then143
  call void @llvm.lifetime.start.p0(i64 8, ptr %function154) #8, !dbg !6589
  tail call void @llvm.dbg.declare(metadata ptr %function154, metadata !6390, metadata !DIExpression()), !dbg !6590
  %102 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6591, !tbaa !1252
  %im_func155 = getelementptr inbounds %struct.PyMethodObject, ptr %102, i32 0, i32 1, !dbg !6591
  %103 = load ptr, ptr %im_func155, align 8, !dbg !6591, !tbaa !3953
  store ptr %103, ptr %function154, align 8, !dbg !6590, !tbaa !1252
  %104 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6592, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %104), !dbg !6592
  %105 = load ptr, ptr %function154, align 8, !dbg !6593, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %105), !dbg !6593
  br label %do.body156, !dbg !6594

do.body156:                                       ; preds = %if.then153
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp157) #8, !dbg !6595
  tail call void @llvm.dbg.declare(metadata ptr %tmp157, metadata !6395, metadata !DIExpression()), !dbg !6595
  %106 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6595, !tbaa !1252
  store ptr %106, ptr %tmp157, align 8, !dbg !6595, !tbaa !1252
  %107 = load ptr, ptr %function154, align 8, !dbg !6595, !tbaa !1252
  store ptr %107, ptr %__pyx_t_1, align 8, !dbg !6595, !tbaa !1252
  %108 = load ptr, ptr %tmp157, align 8, !dbg !6595, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %108), !dbg !6595
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp157) #8, !dbg !6594
  br label %do.cond158, !dbg !6595

do.cond158:                                       ; preds = %do.body156
  br label %do.end159, !dbg !6595

do.end159:                                        ; preds = %do.cond158
  call void @llvm.lifetime.end.p0(i64 8, ptr %function154) #8, !dbg !6596
  br label %if.end160, !dbg !6597

if.end160:                                        ; preds = %do.end159, %if.then143
  br label %if.end161, !dbg !6598

if.end161:                                        ; preds = %if.end160, %if.end133
  %109 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6599, !tbaa !1252
  %tobool162 = icmp ne ptr %109, null, !dbg !6600
  br i1 %tobool162, label %cond.true163, label %cond.false165, !dbg !6600

cond.true163:                                     ; preds = %if.end161
  %110 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6601, !tbaa !1252
  %111 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6602, !tbaa !1252
  %112 = load ptr, ptr %__pyx_v___pyx_type.addr, align 8, !dbg !6603, !tbaa !1252
  %call164 = call ptr @__Pyx_PyObject_Call2Args(ptr noundef %110, ptr noundef %111, ptr noundef %112), !dbg !6604
  br label %cond.end167, !dbg !6600

cond.false165:                                    ; preds = %if.end161
  %113 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6605, !tbaa !1252
  %114 = load ptr, ptr %__pyx_v___pyx_type.addr, align 8, !dbg !6606, !tbaa !1252
  %call166 = call ptr @__Pyx_PyObject_CallOneArg(ptr noundef %113, ptr noundef %114), !dbg !6607
  br label %cond.end167, !dbg !6600

cond.end167:                                      ; preds = %cond.false165, %cond.true163
  %cond168 = phi ptr [ %call164, %cond.true163 ], [ %call166, %cond.false165 ], !dbg !6600
  store ptr %cond168, ptr %__pyx_t_4, align 8, !dbg !6608, !tbaa !1252
  %115 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6609, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %115), !dbg !6609
  store ptr null, ptr %__pyx_t_5, align 8, !dbg !6610, !tbaa !1252
  %116 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6611, !tbaa !1252
  %tobool169 = icmp ne ptr %116, null, !dbg !6611
  %lnot170 = xor i1 %tobool169, true, !dbg !6611
  %lnot172 = xor i1 %lnot170, true, !dbg !6611
  %lnot174 = xor i1 %lnot172, true, !dbg !6611
  %lnot.ext175 = zext i1 %lnot174 to i32, !dbg !6611
  %conv176 = sext i32 %lnot.ext175 to i64, !dbg !6611
  %expval177 = call i64 @llvm.expect.i64(i64 %conv176, i64 0), !dbg !6611
  %tobool178 = icmp ne i64 %expval177, 0, !dbg !6611
  br i1 %tobool178, label %if.then179, label %if.end180, !dbg !6613

if.then179:                                       ; preds = %cond.end167
  %117 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6614, !tbaa !1252
  store ptr %117, ptr %__pyx_filename, align 8, !dbg !6614, !tbaa !1252
  %118 = load ptr, ptr %__pyx_filename, align 8, !dbg !6614, !tbaa !1252
  store i32 7, ptr %__pyx_lineno, align 4, !dbg !6614, !tbaa !1335
  %119 = load i32, ptr %__pyx_lineno, align 4, !dbg !6614, !tbaa !1335
  store i32 2452, ptr %__pyx_clineno, align 4, !dbg !6614, !tbaa !1335
  %120 = load i32, ptr %__pyx_clineno, align 4, !dbg !6614, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6617

if.end180:                                        ; preds = %cond.end167
  %121 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6618, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %121), !dbg !6618
  store ptr null, ptr %__pyx_t_1, align 8, !dbg !6619, !tbaa !1252
  %122 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6620, !tbaa !1252
  store ptr %122, ptr %__pyx_v___pyx_result, align 8, !dbg !6621, !tbaa !1252
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !6622, !tbaa !1252
  %123 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !6623, !tbaa !1252
  %cmp181 = icmp ne ptr %123, @_Py_NoneStruct, !dbg !6624
  %conv182 = zext i1 %cmp181 to i32, !dbg !6624
  store i32 %conv182, ptr %__pyx_t_3, align 4, !dbg !6625, !tbaa !1335
  %124 = load i32, ptr %__pyx_t_3, align 4, !dbg !6626, !tbaa !1335
  %cmp183 = icmp ne i32 %124, 0, !dbg !6627
  %conv184 = zext i1 %cmp183 to i32, !dbg !6627
  store i32 %conv184, ptr %__pyx_t_2, align 4, !dbg !6628, !tbaa !1335
  %125 = load i32, ptr %__pyx_t_2, align 4, !dbg !6629, !tbaa !1335
  %tobool185 = icmp ne i32 %125, 0, !dbg !6629
  br i1 %tobool185, label %if.then186, label %if.end215, !dbg !6631

if.then186:                                       ; preds = %if.end180
  %126 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !6632, !tbaa !1252
  %call187 = call i32 @_Py_IS_TYPE(ptr noundef %126, ptr noundef @PyTuple_Type), !dbg !6632
  %tobool188 = icmp ne i32 %call187, 0, !dbg !6632
  %lnot189 = xor i1 %tobool188, true, !dbg !6632
  %lnot191 = xor i1 %lnot189, true, !dbg !6632
  %lnot.ext192 = zext i1 %lnot191 to i32, !dbg !6632
  %conv193 = sext i32 %lnot.ext192 to i64, !dbg !6632
  %expval194 = call i64 @llvm.expect.i64(i64 %conv193, i64 1), !dbg !6632
  %tobool195 = icmp ne i64 %expval194, 0, !dbg !6632
  br i1 %tobool195, label %if.end201, label %lor.lhs.false, !dbg !6635

lor.lhs.false:                                    ; preds = %if.then186
  %127 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !6636, !tbaa !1252
  %cmp196 = icmp eq ptr %127, @_Py_NoneStruct, !dbg !6637
  br i1 %cmp196, label %if.end201, label %lor.lhs.false198, !dbg !6638

lor.lhs.false198:                                 ; preds = %lor.lhs.false
  %128 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !6639, !tbaa !1252
  %129 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !6640, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %129, i32 0, i32 1, !dbg !6640
  %130 = load ptr, ptr %ob_type, align 8, !dbg !6640, !tbaa !2317
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %130, i32 0, i32 1, !dbg !6641
  %131 = load ptr, ptr %tp_name, align 8, !dbg !6641, !tbaa !2547
  %call199 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %128, ptr noundef @.str.30, ptr noundef @.str.31, ptr noundef %131), !dbg !6642
  br i1 false, label %if.end201, label %if.then200, !dbg !6643

if.then200:                                       ; preds = %lor.lhs.false198
  %132 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6644, !tbaa !1252
  store ptr %132, ptr %__pyx_filename, align 8, !dbg !6644, !tbaa !1252
  %133 = load ptr, ptr %__pyx_filename, align 8, !dbg !6644, !tbaa !1252
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !6644, !tbaa !1335
  %134 = load i32, ptr %__pyx_lineno, align 4, !dbg !6644, !tbaa !1335
  store i32 2476, ptr %__pyx_clineno, align 4, !dbg !6644, !tbaa !1335
  %135 = load i32, ptr %__pyx_clineno, align 4, !dbg !6644, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6647

if.end201:                                        ; preds = %lor.lhs.false198, %lor.lhs.false, %if.then186
  %136 = load ptr, ptr %__pyx_v___pyx_result, align 8, !dbg !6648, !tbaa !1252
  %137 = load ptr, ptr %__pyx_v___pyx_state.addr, align 8, !dbg !6649, !tbaa !1252
  %call202 = call ptr @__pyx_f_6pandas_5_libs_8indexing___pyx_unpickle_NDFrameIndexerBase__set_state(ptr noundef %136, ptr noundef %137), !dbg !6650
  store ptr %call202, ptr %__pyx_t_4, align 8, !dbg !6651, !tbaa !1252
  %138 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6652, !tbaa !1252
  %tobool203 = icmp ne ptr %138, null, !dbg !6652
  %lnot204 = xor i1 %tobool203, true, !dbg !6652
  %lnot206 = xor i1 %lnot204, true, !dbg !6652
  %lnot208 = xor i1 %lnot206, true, !dbg !6652
  %lnot.ext209 = zext i1 %lnot208 to i32, !dbg !6652
  %conv210 = sext i32 %lnot.ext209 to i64, !dbg !6652
  %expval211 = call i64 @llvm.expect.i64(i64 %conv210, i64 0), !dbg !6652
  %tobool212 = icmp ne i64 %expval211, 0, !dbg !6652
  br i1 %tobool212, label %if.then213, label %if.end214, !dbg !6654

if.then213:                                       ; preds = %if.end201
  %139 = load ptr, ptr getelementptr inbounds ([2 x ptr], ptr @__pyx_f, i64 0, i64 1), align 8, !dbg !6655, !tbaa !1252
  store ptr %139, ptr %__pyx_filename, align 8, !dbg !6655, !tbaa !1252
  %140 = load ptr, ptr %__pyx_filename, align 8, !dbg !6655, !tbaa !1252
  store i32 9, ptr %__pyx_lineno, align 4, !dbg !6655, !tbaa !1335
  %141 = load i32, ptr %__pyx_lineno, align 4, !dbg !6655, !tbaa !1335
  store i32 2477, ptr %__pyx_clineno, align 4, !dbg !6655, !tbaa !1335
  %142 = load i32, ptr %__pyx_clineno, align 4, !dbg !6655, !tbaa !1335
  br label %__pyx_L1_error, !dbg !6658

if.end214:                                        ; preds = %if.end201
  %143 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6659, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %143), !dbg !6659
  store ptr null, ptr %__pyx_t_4, align 8, !dbg !6660, !tbaa !1252
  br label %if.end215, !dbg !6661

if.end215:                                        ; preds = %if.end214, %if.end180
  %144 = load ptr, ptr %__pyx_r, align 8, !dbg !6662, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %144), !dbg !6662
  %145 = load ptr, ptr %__pyx_v___pyx_result, align 8, !dbg !6663, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %145), !dbg !6663
  %146 = load ptr, ptr %__pyx_v___pyx_result, align 8, !dbg !6664, !tbaa !1252
  store ptr %146, ptr %__pyx_r, align 8, !dbg !6665, !tbaa !1252
  br label %__pyx_L0, !dbg !6666

__pyx_L1_error:                                   ; preds = %if.then213, %if.then200, %if.then179, %if.then132, %if.end119, %if.then118, %if.then82, %if.then69, %if.then56, %if.then43, %if.then30, %if.then13, %if.then
  tail call void @llvm.dbg.label(metadata !6397), !dbg !6667
  %147 = load ptr, ptr %__pyx_t_1, align 8, !dbg !6668, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %147), !dbg !6668
  %148 = load ptr, ptr %__pyx_t_4, align 8, !dbg !6669, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %148), !dbg !6669
  %149 = load ptr, ptr %__pyx_t_5, align 8, !dbg !6670, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %149), !dbg !6670
  %150 = load ptr, ptr %__pyx_t_6, align 8, !dbg !6671, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %150), !dbg !6671
  %151 = load i32, ptr %__pyx_clineno, align 4, !dbg !6672, !tbaa !1335
  %152 = load i32, ptr %__pyx_lineno, align 4, !dbg !6673, !tbaa !1335
  %153 = load ptr, ptr %__pyx_filename, align 8, !dbg !6674, !tbaa !1252
  call void @__Pyx_AddTraceback(ptr noundef @.str.63, i32 noundef %151, i32 noundef %152, ptr noundef %153), !dbg !6675
  store ptr null, ptr %__pyx_r, align 8, !dbg !6676, !tbaa !1252
  br label %__pyx_L0, !dbg !6677

__pyx_L0:                                         ; preds = %__pyx_L1_error, %if.end215
  tail call void @llvm.dbg.label(metadata !6398), !dbg !6678
  %154 = load ptr, ptr %__pyx_v___pyx_PickleError, align 8, !dbg !6679, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %154), !dbg !6679
  %155 = load ptr, ptr %__pyx_v___pyx_result, align 8, !dbg !6680, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %155), !dbg !6680
  %156 = load ptr, ptr %__pyx_r, align 8, !dbg !6681, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_clineno) #8, !dbg !6682
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_filename) #8, !dbg !6682
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_lineno) #8, !dbg !6682
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_6) #8, !dbg !6682
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_5) #8, !dbg !6682
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_4) #8, !dbg !6682
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_3) #8, !dbg !6682
  call void @llvm.lifetime.end.p0(i64 4, ptr %__pyx_t_2) #8, !dbg !6682
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_t_1) #8, !dbg !6682
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_r) #8, !dbg !6682
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_result) #8, !dbg !6682
  call void @llvm.lifetime.end.p0(i64 8, ptr %__pyx_v___pyx_PickleError) #8, !dbg !6682
  ret ptr %156, !dbg !6683
}

declare !dbg !6684 i64 @PyLong_AsLong(ptr noundef) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyNumber_IntOrLong(ptr noundef %x) #3 !dbg !6685 {
entry:
  %retval = alloca ptr, align 8
  %x.addr = alloca ptr, align 8
  %m = alloca ptr, align 8
  %name = alloca ptr, align 8
  %res = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %x, ptr %x.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %x.addr, metadata !6687, metadata !DIExpression()), !dbg !6691
  call void @llvm.lifetime.start.p0(i64 8, ptr %m) #8, !dbg !6692
  tail call void @llvm.dbg.declare(metadata ptr %m, metadata !6688, metadata !DIExpression()), !dbg !6693
  call void @llvm.lifetime.start.p0(i64 8, ptr %name) #8, !dbg !6694
  tail call void @llvm.dbg.declare(metadata ptr %name, metadata !6689, metadata !DIExpression()), !dbg !6695
  store ptr null, ptr %name, align 8, !dbg !6695, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %res) #8, !dbg !6696
  tail call void @llvm.dbg.declare(metadata ptr %res, metadata !6690, metadata !DIExpression()), !dbg !6697
  store ptr null, ptr %res, align 8, !dbg !6697, !tbaa !1252
  %0 = load ptr, ptr %x.addr, align 8, !dbg !6698, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1, !dbg !6698
  %1 = load ptr, ptr %ob_type, align 8, !dbg !6698, !tbaa !2317
  %call = call i32 @PyType_HasFeature(ptr noundef %1, i64 noundef 16777216), !dbg !6698
  %tobool = icmp ne i32 %call, 0, !dbg !6698
  %lnot = xor i1 %tobool, true, !dbg !6698
  %lnot1 = xor i1 %lnot, true, !dbg !6698
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6698
  %conv = sext i32 %lnot.ext to i64, !dbg !6698
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1), !dbg !6698
  %tobool2 = icmp ne i64 %expval, 0, !dbg !6698
  br i1 %tobool2, label %if.then, label %if.end, !dbg !6700

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr %x.addr, align 8, !dbg !6701, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %2), !dbg !6701
  %3 = load ptr, ptr %x.addr, align 8, !dbg !6701, !tbaa !1252
  store ptr %3, ptr %retval, align 8, !dbg !6702
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6702

if.end:                                           ; preds = %entry
  %4 = load ptr, ptr %x.addr, align 8, !dbg !6703, !tbaa !1252
  %ob_type3 = getelementptr inbounds %struct._object, ptr %4, i32 0, i32 1, !dbg !6703
  %5 = load ptr, ptr %ob_type3, align 8, !dbg !6703, !tbaa !2317
  %tp_as_number = getelementptr inbounds %struct._typeobject, ptr %5, i32 0, i32 10, !dbg !6704
  %6 = load ptr, ptr %tp_as_number, align 8, !dbg !6704, !tbaa !6705
  store ptr %6, ptr %m, align 8, !dbg !6706, !tbaa !1252
  %7 = load ptr, ptr %m, align 8, !dbg !6707, !tbaa !1252
  %tobool4 = icmp ne ptr %7, null, !dbg !6707
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !6707

land.rhs:                                         ; preds = %if.end
  %8 = load ptr, ptr %m, align 8, !dbg !6707, !tbaa !1252
  %nb_int = getelementptr inbounds %struct.PyNumberMethods, ptr %8, i32 0, i32 16, !dbg !6707
  %9 = load ptr, ptr %nb_int, align 8, !dbg !6707, !tbaa !6709
  %tobool5 = icmp ne ptr %9, null, !dbg !6707
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %10 = phi i1 [ false, %if.end ], [ %tobool5, %land.rhs ], !dbg !6711
  %lnot6 = xor i1 %10, true, !dbg !6707
  %lnot8 = xor i1 %lnot6, true, !dbg !6707
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !6707
  %conv10 = sext i32 %lnot.ext9 to i64, !dbg !6707
  %expval11 = call i64 @llvm.expect.i64(i64 %conv10, i64 1), !dbg !6707
  %tobool12 = icmp ne i64 %expval11, 0, !dbg !6707
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !6712

if.then13:                                        ; preds = %land.end
  store ptr @.str.66, ptr %name, align 8, !dbg !6713, !tbaa !1252
  %11 = load ptr, ptr %m, align 8, !dbg !6715, !tbaa !1252
  %nb_int14 = getelementptr inbounds %struct.PyNumberMethods, ptr %11, i32 0, i32 16, !dbg !6716
  %12 = load ptr, ptr %nb_int14, align 8, !dbg !6716, !tbaa !6709
  %13 = load ptr, ptr %x.addr, align 8, !dbg !6717, !tbaa !1252
  %call15 = call ptr %12(ptr noundef %13), !dbg !6715
  store ptr %call15, ptr %res, align 8, !dbg !6718, !tbaa !1252
  br label %if.end16, !dbg !6719

if.end16:                                         ; preds = %if.then13, %land.end
  %14 = load ptr, ptr %res, align 8, !dbg !6720, !tbaa !1252
  %tobool17 = icmp ne ptr %14, null, !dbg !6720
  %lnot18 = xor i1 %tobool17, true, !dbg !6720
  %lnot20 = xor i1 %lnot18, true, !dbg !6720
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !6720
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !6720
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 1), !dbg !6720
  %tobool24 = icmp ne i64 %expval23, 0, !dbg !6720
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !6722

if.then25:                                        ; preds = %if.end16
  %15 = load ptr, ptr %res, align 8, !dbg !6723, !tbaa !1252
  %call26 = call i32 @_Py_IS_TYPE(ptr noundef %15, ptr noundef @PyLong_Type), !dbg !6723
  %tobool27 = icmp ne i32 %call26, 0, !dbg !6723
  %lnot28 = xor i1 %tobool27, true, !dbg !6723
  %lnot30 = xor i1 %lnot28, true, !dbg !6723
  %lnot32 = xor i1 %lnot30, true, !dbg !6723
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !6723
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !6723
  %expval35 = call i64 @llvm.expect.i64(i64 %conv34, i64 0), !dbg !6723
  %tobool36 = icmp ne i64 %expval35, 0, !dbg !6723
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !6726

if.then37:                                        ; preds = %if.then25
  %16 = load ptr, ptr %res, align 8, !dbg !6727, !tbaa !1252
  %17 = load ptr, ptr %name, align 8, !dbg !6729, !tbaa !1252
  %call38 = call ptr @__Pyx_PyNumber_IntOrLongWrongResultType(ptr noundef %16, ptr noundef %17), !dbg !6730
  store ptr %call38, ptr %retval, align 8, !dbg !6731
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6731

if.end39:                                         ; preds = %if.then25
  br label %if.end44, !dbg !6732

if.else:                                          ; preds = %if.end16
  %call40 = call ptr @PyErr_Occurred(), !dbg !6733
  %tobool41 = icmp ne ptr %call40, null, !dbg !6733
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !6735

if.then42:                                        ; preds = %if.else
  %18 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !6736, !tbaa !1252
  call void @PyErr_SetString(ptr noundef %18, ptr noundef @.str.67), !dbg !6738
  br label %if.end43, !dbg !6739

if.end43:                                         ; preds = %if.then42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end39
  %19 = load ptr, ptr %res, align 8, !dbg !6740, !tbaa !1252
  store ptr %19, ptr %retval, align 8, !dbg !6741
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6741

cleanup:                                          ; preds = %if.end44, %if.then37, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %res) #8, !dbg !6742
  call void @llvm.lifetime.end.p0(i64 8, ptr %name) #8, !dbg !6742
  call void @llvm.lifetime.end.p0(i64 8, ptr %m) #8, !dbg !6742
  %20 = load ptr, ptr %retval, align 8, !dbg !6742
  ret ptr %20, !dbg !6742
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_PyNumber_IntOrLongWrongResultType(ptr noundef %result, ptr noundef %type_name) #0 !dbg !6743 {
entry:
  %retval = alloca ptr, align 8
  %result.addr = alloca ptr, align 8
  %type_name.addr = alloca ptr, align 8
  store ptr %result, ptr %result.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %result.addr, metadata !6745, metadata !DIExpression()), !dbg !6747
  store ptr %type_name, ptr %type_name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %type_name.addr, metadata !6746, metadata !DIExpression()), !dbg !6748
  %0 = load ptr, ptr %result.addr, align 8, !dbg !6749, !tbaa !1252
  %ob_type = getelementptr inbounds %struct._object, ptr %0, i32 0, i32 1, !dbg !6749
  %1 = load ptr, ptr %ob_type, align 8, !dbg !6749, !tbaa !2317
  %call = call i32 @PyType_HasFeature(ptr noundef %1, i64 noundef 16777216), !dbg !6749
  %tobool = icmp ne i32 %call, 0, !dbg !6749
  br i1 %tobool, label %if.then, label %if.end5, !dbg !6751

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @PyExc_DeprecationWarning, align 8, !dbg !6752, !tbaa !1252
  %3 = load ptr, ptr %result.addr, align 8, !dbg !6755, !tbaa !1252
  %ob_type1 = getelementptr inbounds %struct._object, ptr %3, i32 0, i32 1, !dbg !6755
  %4 = load ptr, ptr %ob_type1, align 8, !dbg !6755, !tbaa !2317
  %tp_name = getelementptr inbounds %struct._typeobject, ptr %4, i32 0, i32 1, !dbg !6756
  %5 = load ptr, ptr %tp_name, align 8, !dbg !6756, !tbaa !2547
  %call2 = call i32 (ptr, i64, ptr, ...) @PyErr_WarnFormat(ptr noundef %2, i64 noundef 1, ptr noundef @.str.68, ptr noundef %5), !dbg !6757
  %tobool3 = icmp ne i32 %call2, 0, !dbg !6757
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !6758

if.then4:                                         ; preds = %if.then
  %6 = load ptr, ptr %result.addr, align 8, !dbg !6759, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %6), !dbg !6759
  store ptr null, ptr %retval, align 8, !dbg !6761
  br label %return, !dbg !6761

if.end:                                           ; preds = %if.then
  %7 = load ptr, ptr %result.addr, align 8, !dbg !6762, !tbaa !1252
  store ptr %7, ptr %retval, align 8, !dbg !6763
  br label %return, !dbg !6763

if.end5:                                          ; preds = %entry
  %8 = load ptr, ptr @PyExc_TypeError, align 8, !dbg !6764, !tbaa !1252
  %9 = load ptr, ptr %type_name.addr, align 8, !dbg !6765, !tbaa !1252
  %10 = load ptr, ptr %type_name.addr, align 8, !dbg !6766, !tbaa !1252
  %11 = load ptr, ptr %result.addr, align 8, !dbg !6767, !tbaa !1252
  %ob_type6 = getelementptr inbounds %struct._object, ptr %11, i32 0, i32 1, !dbg !6767
  %12 = load ptr, ptr %ob_type6, align 8, !dbg !6767, !tbaa !2317
  %tp_name7 = getelementptr inbounds %struct._typeobject, ptr %12, i32 0, i32 1, !dbg !6768
  %13 = load ptr, ptr %tp_name7, align 8, !dbg !6768, !tbaa !2547
  %call8 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %8, ptr noundef @.str.69, ptr noundef %9, ptr noundef %10, ptr noundef %13), !dbg !6769
  %14 = load ptr, ptr %result.addr, align 8, !dbg !6770, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %14), !dbg !6770
  store ptr null, ptr %retval, align 8, !dbg !6771
  br label %return, !dbg !6771

return:                                           ; preds = %if.end5, %if.end, %if.then4
  %15 = load ptr, ptr %retval, align 8, !dbg !6772
  ret ptr %15, !dbg !6772
}

declare !dbg !6773 i32 @PyErr_WarnFormat(ptr noundef, i64 noundef, ptr noundef, ...) #1

; Function Attrs: inlinehint nounwind uwtable
define internal ptr @__Pyx_PyInt_From_long(i64 noundef %value) #3 !dbg !6776 {
entry:
  %value.addr = alloca i64, align 8
  %neg_one = alloca i64, align 8
  %const_zero = alloca i64, align 8
  %is_unsigned = alloca i32, align 4
  %one = alloca i32, align 4
  %little = alloca i32, align 4
  %bytes = alloca ptr, align 8
  store i64 %value, ptr %value.addr, align 8, !tbaa !1368
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !6778, metadata !DIExpression()), !dbg !6782
  call void @llvm.lifetime.start.p0(i64 8, ptr %neg_one) #8, !dbg !6783
  tail call void @llvm.dbg.declare(metadata ptr %neg_one, metadata !6779, metadata !DIExpression()), !dbg !6784
  store i64 -1, ptr %neg_one, align 8, !dbg !6784, !tbaa !1368
  call void @llvm.lifetime.start.p0(i64 8, ptr %const_zero) #8, !dbg !6783
  tail call void @llvm.dbg.declare(metadata ptr %const_zero, metadata !6780, metadata !DIExpression()), !dbg !6785
  store i64 0, ptr %const_zero, align 8, !dbg !6785, !tbaa !1368
  call void @llvm.lifetime.start.p0(i64 4, ptr %is_unsigned) #8, !dbg !6786
  tail call void @llvm.dbg.declare(metadata ptr %is_unsigned, metadata !6781, metadata !DIExpression()), !dbg !6787
  store i32 0, ptr %is_unsigned, align 4, !dbg !6787, !tbaa !1335
  %0 = load i64, ptr %value.addr, align 8, !dbg !6788, !tbaa !1368
  %call = call ptr @PyLong_FromLong(i64 noundef %0), !dbg !6793
  call void @llvm.lifetime.end.p0(i64 4, ptr %is_unsigned) #8, !dbg !6794
  call void @llvm.lifetime.end.p0(i64 8, ptr %const_zero) #8, !dbg !6794
  call void @llvm.lifetime.end.p0(i64 8, ptr %neg_one) #8, !dbg !6794
  ret ptr %call, !dbg !6795
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__Pyx_PySequence_ContainsTF(ptr noundef %item, ptr noundef %seq, i32 noundef %eq) #3 !dbg !6796 {
entry:
  %item.addr = alloca ptr, align 8
  %seq.addr = alloca ptr, align 8
  %eq.addr = alloca i32, align 4
  %result = alloca i32, align 4
  store ptr %item, ptr %item.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %item.addr, metadata !6798, metadata !DIExpression()), !dbg !6802
  store ptr %seq, ptr %seq.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %seq.addr, metadata !6799, metadata !DIExpression()), !dbg !6803
  store i32 %eq, ptr %eq.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %eq.addr, metadata !6800, metadata !DIExpression()), !dbg !6804
  call void @llvm.lifetime.start.p0(i64 4, ptr %result) #8, !dbg !6805
  tail call void @llvm.dbg.declare(metadata ptr %result, metadata !6801, metadata !DIExpression()), !dbg !6806
  %0 = load ptr, ptr %seq.addr, align 8, !dbg !6807, !tbaa !1252
  %1 = load ptr, ptr %item.addr, align 8, !dbg !6808, !tbaa !1252
  %call = call i32 @PySequence_Contains(ptr noundef %0, ptr noundef %1), !dbg !6809
  store i32 %call, ptr %result, align 4, !dbg !6806, !tbaa !1335
  %2 = load i32, ptr %result, align 4, !dbg !6810, !tbaa !1335
  %cmp = icmp slt i32 %2, 0, !dbg !6810
  %lnot = xor i1 %cmp, true, !dbg !6810
  %lnot1 = xor i1 %lnot, true, !dbg !6810
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6810
  %conv = sext i32 %lnot.ext to i64, !dbg !6810
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6810
  %tobool = icmp ne i64 %expval, 0, !dbg !6810
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6810

cond.true:                                        ; preds = %entry
  %3 = load i32, ptr %result, align 4, !dbg !6811, !tbaa !1335
  br label %cond.end, !dbg !6810

cond.false:                                       ; preds = %entry
  %4 = load i32, ptr %result, align 4, !dbg !6812, !tbaa !1335
  %5 = load i32, ptr %eq.addr, align 4, !dbg !6813, !tbaa !1335
  %cmp2 = icmp eq i32 %5, 2, !dbg !6814
  %conv3 = zext i1 %cmp2 to i32, !dbg !6814
  %cmp4 = icmp eq i32 %4, %conv3, !dbg !6815
  %conv5 = zext i1 %cmp4 to i32, !dbg !6815
  br label %cond.end, !dbg !6810

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ %conv5, %cond.false ], !dbg !6810
  call void @llvm.lifetime.end.p0(i64 4, ptr %result) #8, !dbg !6816
  ret i32 %cond, !dbg !6817
}

declare !dbg !6818 ptr @PyList_New(i64 noundef) #1

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_Import(ptr noundef %name, ptr noundef %from_list, i32 noundef %level) #0 !dbg !6820 {
entry:
  %name.addr = alloca ptr, align 8
  %from_list.addr = alloca ptr, align 8
  %level.addr = alloca i32, align 4
  %empty_list = alloca ptr, align 8
  %module = alloca ptr, align 8
  %global_dict = alloca ptr, align 8
  %empty_dict = alloca ptr, align 8
  %list = alloca ptr, align 8
  store ptr %name, ptr %name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !6822, metadata !DIExpression()), !dbg !6831
  store ptr %from_list, ptr %from_list.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %from_list.addr, metadata !6823, metadata !DIExpression()), !dbg !6832
  store i32 %level, ptr %level.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %level.addr, metadata !6824, metadata !DIExpression()), !dbg !6833
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty_list) #8, !dbg !6834
  tail call void @llvm.dbg.declare(metadata ptr %empty_list, metadata !6825, metadata !DIExpression()), !dbg !6835
  store ptr null, ptr %empty_list, align 8, !dbg !6835, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %module) #8, !dbg !6836
  tail call void @llvm.dbg.declare(metadata ptr %module, metadata !6826, metadata !DIExpression()), !dbg !6837
  store ptr null, ptr %module, align 8, !dbg !6837, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %global_dict) #8, !dbg !6838
  tail call void @llvm.dbg.declare(metadata ptr %global_dict, metadata !6827, metadata !DIExpression()), !dbg !6839
  store ptr null, ptr %global_dict, align 8, !dbg !6839, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %empty_dict) #8, !dbg !6840
  tail call void @llvm.dbg.declare(metadata ptr %empty_dict, metadata !6828, metadata !DIExpression()), !dbg !6841
  store ptr null, ptr %empty_dict, align 8, !dbg !6841, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %list) #8, !dbg !6842
  tail call void @llvm.dbg.declare(metadata ptr %list, metadata !6829, metadata !DIExpression()), !dbg !6843
  %0 = load ptr, ptr %from_list.addr, align 8, !dbg !6844, !tbaa !1252
  %tobool = icmp ne ptr %0, null, !dbg !6844
  br i1 %tobool, label %if.then, label %if.else, !dbg !6846

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %from_list.addr, align 8, !dbg !6847, !tbaa !1252
  store ptr %1, ptr %list, align 8, !dbg !6848, !tbaa !1252
  br label %if.end3, !dbg !6849

if.else:                                          ; preds = %entry
  %call = call ptr @PyList_New(i64 noundef 0), !dbg !6850
  store ptr %call, ptr %empty_list, align 8, !dbg !6852, !tbaa !1252
  %2 = load ptr, ptr %empty_list, align 8, !dbg !6853, !tbaa !1252
  %tobool1 = icmp ne ptr %2, null, !dbg !6853
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !6855

if.then2:                                         ; preds = %if.else
  br label %bad, !dbg !6856

if.end:                                           ; preds = %if.else
  %3 = load ptr, ptr %empty_list, align 8, !dbg !6857, !tbaa !1252
  store ptr %3, ptr %list, align 8, !dbg !6858, !tbaa !1252
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %4 = load ptr, ptr @__pyx_m, align 8, !dbg !6859, !tbaa !1252
  %call4 = call ptr @PyModule_GetDict(ptr noundef %4), !dbg !6860
  store ptr %call4, ptr %global_dict, align 8, !dbg !6861, !tbaa !1252
  %5 = load ptr, ptr %global_dict, align 8, !dbg !6862, !tbaa !1252
  %tobool5 = icmp ne ptr %5, null, !dbg !6862
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !6864

if.then6:                                         ; preds = %if.end3
  br label %bad, !dbg !6865

if.end7:                                          ; preds = %if.end3
  %call8 = call ptr @PyDict_New(), !dbg !6866
  store ptr %call8, ptr %empty_dict, align 8, !dbg !6867, !tbaa !1252
  %6 = load ptr, ptr %empty_dict, align 8, !dbg !6868, !tbaa !1252
  %tobool9 = icmp ne ptr %6, null, !dbg !6868
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !6870

if.then10:                                        ; preds = %if.end7
  br label %bad, !dbg !6871

if.end11:                                         ; preds = %if.end7
  %7 = load i32, ptr %level.addr, align 4, !dbg !6872, !tbaa !1335
  %cmp = icmp eq i32 %7, -1, !dbg !6875
  br i1 %cmp, label %if.then12, label %if.end21, !dbg !6876

if.then12:                                        ; preds = %if.end11
  %8 = load ptr, ptr %name.addr, align 8, !dbg !6877, !tbaa !1252
  %9 = load ptr, ptr %global_dict, align 8, !dbg !6881, !tbaa !1252
  %10 = load ptr, ptr %empty_dict, align 8, !dbg !6882, !tbaa !1252
  %11 = load ptr, ptr %list, align 8, !dbg !6883, !tbaa !1252
  %call13 = call ptr @PyImport_ImportModuleLevelObject(ptr noundef %8, ptr noundef %9, ptr noundef %10, ptr noundef %11, i32 noundef 1), !dbg !6884
  store ptr %call13, ptr %module, align 8, !dbg !6885, !tbaa !1252
  %12 = load ptr, ptr %module, align 8, !dbg !6886, !tbaa !1252
  %tobool14 = icmp ne ptr %12, null, !dbg !6886
  br i1 %tobool14, label %if.end20, label %if.then15, !dbg !6888

if.then15:                                        ; preds = %if.then12
  %13 = load ptr, ptr @PyExc_ImportError, align 8, !dbg !6889, !tbaa !1252
  %call16 = call i32 @PyErr_ExceptionMatches(ptr noundef %13), !dbg !6892
  %tobool17 = icmp ne i32 %call16, 0, !dbg !6892
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !6893

if.then18:                                        ; preds = %if.then15
  br label %bad, !dbg !6894

if.end19:                                         ; preds = %if.then15
  call void @PyErr_Clear(), !dbg !6895
  br label %if.end20, !dbg !6896

if.end20:                                         ; preds = %if.end19, %if.then12
  store i32 0, ptr %level.addr, align 4, !dbg !6897, !tbaa !1335
  br label %if.end21, !dbg !6898

if.end21:                                         ; preds = %if.end20, %if.end11
  %14 = load ptr, ptr %module, align 8, !dbg !6899, !tbaa !1252
  %tobool22 = icmp ne ptr %14, null, !dbg !6899
  br i1 %tobool22, label %if.end25, label %if.then23, !dbg !6901

if.then23:                                        ; preds = %if.end21
  %15 = load ptr, ptr %name.addr, align 8, !dbg !6902, !tbaa !1252
  %16 = load ptr, ptr %global_dict, align 8, !dbg !6904, !tbaa !1252
  %17 = load ptr, ptr %empty_dict, align 8, !dbg !6905, !tbaa !1252
  %18 = load ptr, ptr %list, align 8, !dbg !6906, !tbaa !1252
  %19 = load i32, ptr %level.addr, align 4, !dbg !6907, !tbaa !1335
  %call24 = call ptr @PyImport_ImportModuleLevelObject(ptr noundef %15, ptr noundef %16, ptr noundef %17, ptr noundef %18, i32 noundef %19), !dbg !6908
  store ptr %call24, ptr %module, align 8, !dbg !6909, !tbaa !1252
  br label %if.end25, !dbg !6910

if.end25:                                         ; preds = %if.then23, %if.end21
  br label %bad, !dbg !6911

bad:                                              ; preds = %if.end25, %if.then18, %if.then10, %if.then6, %if.then2
  tail call void @llvm.dbg.label(metadata !6830), !dbg !6912
  %20 = load ptr, ptr %empty_list, align 8, !dbg !6913, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %20), !dbg !6913
  %21 = load ptr, ptr %empty_dict, align 8, !dbg !6914, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %21), !dbg !6914
  %22 = load ptr, ptr %module, align 8, !dbg !6915, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 8, ptr %list) #8, !dbg !6916
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty_dict) #8, !dbg !6916
  call void @llvm.lifetime.end.p0(i64 8, ptr %global_dict) #8, !dbg !6916
  call void @llvm.lifetime.end.p0(i64 8, ptr %module) #8, !dbg !6916
  call void @llvm.lifetime.end.p0(i64 8, ptr %empty_list) #8, !dbg !6916
  ret ptr %22, !dbg !6917
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_ImportFrom(ptr noundef %module, ptr noundef %name) #0 !dbg !6918 {
entry:
  %module.addr = alloca ptr, align 8
  %name.addr = alloca ptr, align 8
  %value = alloca ptr, align 8
  store ptr %module, ptr %module.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %module.addr, metadata !6920, metadata !DIExpression()), !dbg !6923
  store ptr %name, ptr %name.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %name.addr, metadata !6921, metadata !DIExpression()), !dbg !6924
  call void @llvm.lifetime.start.p0(i64 8, ptr %value) #8, !dbg !6925
  tail call void @llvm.dbg.declare(metadata ptr %value, metadata !6922, metadata !DIExpression()), !dbg !6926
  %0 = load ptr, ptr %module.addr, align 8, !dbg !6927, !tbaa !1252
  %1 = load ptr, ptr %name.addr, align 8, !dbg !6928, !tbaa !1252
  %call = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %0, ptr noundef %1), !dbg !6929
  store ptr %call, ptr %value, align 8, !dbg !6926, !tbaa !1252
  %2 = load ptr, ptr %value, align 8, !dbg !6930, !tbaa !1252
  %tobool = icmp ne ptr %2, null, !dbg !6930
  %lnot = xor i1 %tobool, true, !dbg !6930
  %lnot1 = xor i1 %lnot, true, !dbg !6930
  %lnot2 = xor i1 %lnot1, true, !dbg !6930
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6930
  %conv = sext i32 %lnot.ext to i64, !dbg !6930
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6930
  %tobool3 = icmp ne i64 %expval, 0, !dbg !6930
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !6932

land.lhs.true:                                    ; preds = %entry
  %3 = load ptr, ptr @PyExc_AttributeError, align 8, !dbg !6933, !tbaa !1252
  %call4 = call i32 @PyErr_ExceptionMatches(ptr noundef %3), !dbg !6934
  %tobool5 = icmp ne i32 %call4, 0, !dbg !6934
  br i1 %tobool5, label %if.then, label %if.end, !dbg !6935

if.then:                                          ; preds = %land.lhs.true
  %4 = load ptr, ptr @PyExc_ImportError, align 8, !dbg !6936, !tbaa !1252
  %5 = load ptr, ptr %name.addr, align 8, !dbg !6938, !tbaa !1252
  %call6 = call ptr (ptr, ptr, ...) @PyErr_Format(ptr noundef %4, ptr noundef @.str.70, ptr noundef %5), !dbg !6939
  br label %if.end, !dbg !6940

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load ptr, ptr %value, align 8, !dbg !6941, !tbaa !1252
  call void @llvm.lifetime.end.p0(i64 8, ptr %value) #8, !dbg !6942
  ret ptr %6, !dbg !6943
}

declare !dbg !6944 ptr @PyUnicode_Format(ptr noundef, ptr noundef) #1

declare !dbg !6945 i32 @PySequence_Contains(ptr noundef, ptr noundef) #1

declare !dbg !6946 ptr @PyImport_ImportModuleLevelObject(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__Pyx_CLineForTraceback(ptr noundef %tstate, i32 noundef %c_line) #0 !dbg !1107 {
entry:
  %retval = alloca i32, align 4
  %tstate.addr = alloca ptr, align 8
  %c_line.addr = alloca i32, align 4
  %use_cline = alloca ptr, align 8
  %ptype = alloca ptr, align 8
  %pvalue = alloca ptr, align 8
  %ptraceback = alloca ptr, align 8
  %cython_runtime_dict = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %use_cline_obj = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !1199, metadata !DIExpression()), !dbg !6949
  store i32 %c_line, ptr %c_line.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %c_line.addr, metadata !1200, metadata !DIExpression()), !dbg !6950
  call void @llvm.lifetime.start.p0(i64 8, ptr %use_cline) #8, !dbg !6951
  tail call void @llvm.dbg.declare(metadata ptr %use_cline, metadata !1201, metadata !DIExpression()), !dbg !6952
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptype) #8, !dbg !6953
  tail call void @llvm.dbg.declare(metadata ptr %ptype, metadata !1202, metadata !DIExpression()), !dbg !6954
  call void @llvm.lifetime.start.p0(i64 8, ptr %pvalue) #8, !dbg !6953
  tail call void @llvm.dbg.declare(metadata ptr %pvalue, metadata !1203, metadata !DIExpression()), !dbg !6955
  call void @llvm.lifetime.start.p0(i64 8, ptr %ptraceback) #8, !dbg !6953
  tail call void @llvm.dbg.declare(metadata ptr %ptraceback, metadata !1204, metadata !DIExpression()), !dbg !6956
  call void @llvm.lifetime.start.p0(i64 8, ptr %cython_runtime_dict) #8, !dbg !6957
  tail call void @llvm.dbg.declare(metadata ptr %cython_runtime_dict, metadata !1205, metadata !DIExpression()), !dbg !6958
  %0 = load ptr, ptr @__pyx_cython_runtime, align 8, !dbg !6959, !tbaa !1252
  %tobool = icmp ne ptr %0, null, !dbg !6959
  %lnot = xor i1 %tobool, true, !dbg !6959
  %lnot1 = xor i1 %lnot, true, !dbg !6959
  %lnot2 = xor i1 %lnot1, true, !dbg !6959
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6959
  %conv = sext i32 %lnot.ext to i64, !dbg !6959
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !6959
  %tobool3 = icmp ne i64 %expval, 0, !dbg !6959
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6961

if.then:                                          ; preds = %entry
  %1 = load i32, ptr %c_line.addr, align 4, !dbg !6962, !tbaa !1335
  store i32 %1, ptr %retval, align 4, !dbg !6964
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6964

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %tstate.addr, align 8, !dbg !6965, !tbaa !1252
  call void @__Pyx_ErrFetchInState(ptr noundef %2, ptr noundef %ptype, ptr noundef %pvalue, ptr noundef %ptraceback), !dbg !6966
  %3 = load ptr, ptr @__pyx_cython_runtime, align 8, !dbg !6967, !tbaa !1252
  %call = call ptr @_PyObject_GetDictPtr(ptr noundef %3), !dbg !6968
  store ptr %call, ptr %cython_runtime_dict, align 8, !dbg !6969, !tbaa !1252
  %4 = load ptr, ptr %cython_runtime_dict, align 8, !dbg !6970, !tbaa !1252
  %tobool4 = icmp ne ptr %4, null, !dbg !6970
  %lnot5 = xor i1 %tobool4, true, !dbg !6970
  %lnot7 = xor i1 %lnot5, true, !dbg !6970
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !6970
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !6970
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 1), !dbg !6970
  %tobool11 = icmp ne i64 %expval10, 0, !dbg !6970
  br i1 %tobool11, label %if.then12, label %if.else25, !dbg !6971

if.then12:                                        ; preds = %if.end
  %5 = load ptr, ptr %cython_runtime_dict, align 8, !dbg !6972, !tbaa !1252
  %6 = load ptr, ptr %5, align 8, !dbg !6972, !tbaa !1252
  %ma_version_tag = getelementptr inbounds %struct.PyDictObject, ptr %6, i32 0, i32 2, !dbg !6972
  %7 = load i64, ptr %ma_version_tag, align 8, !dbg !6972, !tbaa !3048
  %8 = load i64, ptr @__Pyx_CLineForTraceback.__pyx_dict_version, align 8, !dbg !6972, !tbaa !1368
  %cmp = icmp eq i64 %7, %8, !dbg !6972
  %lnot14 = xor i1 %cmp, true, !dbg !6972
  %lnot16 = xor i1 %lnot14, true, !dbg !6972
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !6972
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !6972
  %expval19 = call i64 @llvm.expect.i64(i64 %conv18, i64 1), !dbg !6972
  %tobool20 = icmp ne i64 %expval19, 0, !dbg !6972
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !6976

if.then21:                                        ; preds = %if.then12
  %9 = load ptr, ptr @__Pyx_CLineForTraceback.__pyx_dict_cached_value, align 8, !dbg !6977, !tbaa !1252
  store ptr %9, ptr %use_cline, align 8, !dbg !6977, !tbaa !1252
  br label %if.end24, !dbg !6977

if.else:                                          ; preds = %if.then12
  %10 = load ptr, ptr %cython_runtime_dict, align 8, !dbg !6979, !tbaa !1252
  %11 = load ptr, ptr %10, align 8, !dbg !6979, !tbaa !1252
  %12 = load ptr, ptr @__pyx_n_s_cline_in_traceback, align 8, !dbg !6979, !tbaa !1252
  %13 = load ptr, ptr @__pyx_n_s_cline_in_traceback, align 8, !dbg !6979, !tbaa !1252
  %hash = getelementptr inbounds %struct.PyASCIIObject, ptr %13, i32 0, i32 2, !dbg !6979
  %14 = load i64, ptr %hash, align 8, !dbg !6979, !tbaa !2707
  %call22 = call ptr @_PyDict_GetItem_KnownHash(ptr noundef %11, ptr noundef %12, i64 noundef %14), !dbg !6979
  store ptr %call22, ptr @__Pyx_CLineForTraceback.__pyx_dict_cached_value, align 8, !dbg !6979, !tbaa !1252
  store ptr %call22, ptr %use_cline, align 8, !dbg !6979, !tbaa !1252
  %15 = load ptr, ptr %cython_runtime_dict, align 8, !dbg !6979, !tbaa !1252
  %16 = load ptr, ptr %15, align 8, !dbg !6979, !tbaa !1252
  %ma_version_tag23 = getelementptr inbounds %struct.PyDictObject, ptr %16, i32 0, i32 2, !dbg !6979
  %17 = load i64, ptr %ma_version_tag23, align 8, !dbg !6979, !tbaa !3048
  store i64 %17, ptr @__Pyx_CLineForTraceback.__pyx_dict_version, align 8, !dbg !6979, !tbaa !1368
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then21
  br label %if.end33, !dbg !6981

if.else25:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr %use_cline_obj) #8, !dbg !6982
  tail call void @llvm.dbg.declare(metadata ptr %use_cline_obj, metadata !1206, metadata !DIExpression()), !dbg !6983
  %18 = load ptr, ptr @__pyx_cython_runtime, align 8, !dbg !6984, !tbaa !1252
  %19 = load ptr, ptr @__pyx_n_s_cline_in_traceback, align 8, !dbg !6985, !tbaa !1252
  %call26 = call ptr @__Pyx_PyObject_GetAttrStr(ptr noundef %18, ptr noundef %19), !dbg !6986
  store ptr %call26, ptr %use_cline_obj, align 8, !dbg !6983, !tbaa !1252
  %20 = load ptr, ptr %use_cline_obj, align 8, !dbg !6987, !tbaa !1252
  %tobool27 = icmp ne ptr %20, null, !dbg !6987
  br i1 %tobool27, label %if.then28, label %if.else31, !dbg !6989

if.then28:                                        ; preds = %if.else25
  %21 = load ptr, ptr %use_cline_obj, align 8, !dbg !6990, !tbaa !1252
  %call29 = call i32 @PyObject_Not(ptr noundef %21), !dbg !6992
  %tobool30 = icmp ne i32 %call29, 0, !dbg !6992
  %22 = zext i1 %tobool30 to i64, !dbg !6992
  %cond = select i1 %tobool30, ptr @_Py_FalseStruct, ptr @_Py_TrueStruct, !dbg !6992
  store ptr %cond, ptr %use_cline, align 8, !dbg !6993, !tbaa !1252
  %23 = load ptr, ptr %use_cline_obj, align 8, !dbg !6994, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %23), !dbg !6994
  br label %if.end32, !dbg !6995

if.else31:                                        ; preds = %if.else25
  call void @PyErr_Clear(), !dbg !6996
  store ptr null, ptr %use_cline, align 8, !dbg !6998, !tbaa !1252
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.then28
  call void @llvm.lifetime.end.p0(i64 8, ptr %use_cline_obj) #8, !dbg !6999
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end24
  %24 = load ptr, ptr %use_cline, align 8, !dbg !7000, !tbaa !1252
  %tobool34 = icmp ne ptr %24, null, !dbg !7000
  br i1 %tobool34, label %if.else37, label %if.then35, !dbg !7002

if.then35:                                        ; preds = %if.end33
  store i32 0, ptr %c_line.addr, align 4, !dbg !7003, !tbaa !1335
  %25 = load ptr, ptr @__pyx_cython_runtime, align 8, !dbg !7005, !tbaa !1252
  %26 = load ptr, ptr @__pyx_n_s_cline_in_traceback, align 8, !dbg !7006, !tbaa !1252
  %call36 = call i32 @PyObject_SetAttr(ptr noundef %25, ptr noundef %26, ptr noundef @_Py_FalseStruct), !dbg !7007
  br label %if.end47, !dbg !7008

if.else37:                                        ; preds = %if.end33
  %27 = load ptr, ptr %use_cline, align 8, !dbg !7009, !tbaa !1252
  %cmp38 = icmp eq ptr %27, @_Py_FalseStruct, !dbg !7011
  br i1 %cmp38, label %if.then45, label %lor.lhs.false, !dbg !7012

lor.lhs.false:                                    ; preds = %if.else37
  %28 = load ptr, ptr %use_cline, align 8, !dbg !7013, !tbaa !1252
  %cmp40 = icmp ne ptr %28, @_Py_TrueStruct, !dbg !7014
  br i1 %cmp40, label %land.lhs.true, label %if.end46, !dbg !7015

land.lhs.true:                                    ; preds = %lor.lhs.false
  %29 = load ptr, ptr %use_cline, align 8, !dbg !7016, !tbaa !1252
  %call42 = call i32 @PyObject_Not(ptr noundef %29), !dbg !7017
  %cmp43 = icmp ne i32 %call42, 0, !dbg !7018
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !7019

if.then45:                                        ; preds = %land.lhs.true, %if.else37
  store i32 0, ptr %c_line.addr, align 4, !dbg !7020, !tbaa !1335
  br label %if.end46, !dbg !7022

if.end46:                                         ; preds = %if.then45, %land.lhs.true, %lor.lhs.false
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then35
  %30 = load ptr, ptr %tstate.addr, align 8, !dbg !7023, !tbaa !1252
  %31 = load ptr, ptr %ptype, align 8, !dbg !7024, !tbaa !1252
  %32 = load ptr, ptr %pvalue, align 8, !dbg !7025, !tbaa !1252
  %33 = load ptr, ptr %ptraceback, align 8, !dbg !7026, !tbaa !1252
  call void @__Pyx_ErrRestoreInState(ptr noundef %30, ptr noundef %31, ptr noundef %32, ptr noundef %33), !dbg !7027
  %34 = load i32, ptr %c_line.addr, align 4, !dbg !7028, !tbaa !1335
  store i32 %34, ptr %retval, align 4, !dbg !7029
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7029

cleanup:                                          ; preds = %if.end47, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %cython_runtime_dict) #8, !dbg !7030
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptraceback) #8, !dbg !7030
  call void @llvm.lifetime.end.p0(i64 8, ptr %pvalue) #8, !dbg !7030
  call void @llvm.lifetime.end.p0(i64 8, ptr %ptype) #8, !dbg !7030
  call void @llvm.lifetime.end.p0(i64 8, ptr %use_cline) #8, !dbg !7030
  %35 = load i32, ptr %retval, align 4, !dbg !7030
  ret i32 %35, !dbg !7030
}

; Function Attrs: nounwind uwtable
define internal ptr @__pyx_find_code_object(i32 noundef %code_line) #0 !dbg !7031 {
entry:
  %retval = alloca ptr, align 8
  %code_line.addr = alloca i32, align 4
  %code_object = alloca ptr, align 8
  %pos = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %code_line, ptr %code_line.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %code_line.addr, metadata !7035, metadata !DIExpression()), !dbg !7038
  call void @llvm.lifetime.start.p0(i64 8, ptr %code_object) #8, !dbg !7039
  tail call void @llvm.dbg.declare(metadata ptr %code_object, metadata !7036, metadata !DIExpression()), !dbg !7040
  call void @llvm.lifetime.start.p0(i64 4, ptr %pos) #8, !dbg !7041
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !7037, metadata !DIExpression()), !dbg !7042
  %0 = load i32, ptr %code_line.addr, align 4, !dbg !7043, !tbaa !1335
  %tobool = icmp ne i32 %0, 0, !dbg !7043
  %lnot = xor i1 %tobool, true, !dbg !7043
  %lnot1 = xor i1 %lnot, true, !dbg !7043
  %lnot2 = xor i1 %lnot1, true, !dbg !7043
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7043
  %conv = sext i32 %lnot.ext to i64, !dbg !7043
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7043
  %tobool3 = icmp ne i64 %expval, 0, !dbg !7043
  br i1 %tobool3, label %if.then, label %lor.lhs.false, !dbg !7045

lor.lhs.false:                                    ; preds = %entry
  %1 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !7046, !tbaa !7047
  %tobool4 = icmp ne ptr %1, null, !dbg !7046
  %lnot5 = xor i1 %tobool4, true, !dbg !7046
  %lnot7 = xor i1 %lnot5, true, !dbg !7046
  %lnot9 = xor i1 %lnot7, true, !dbg !7046
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !7046
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !7046
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !7046
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !7046
  br i1 %tobool13, label %if.then, label %if.end, !dbg !7049

if.then:                                          ; preds = %lor.lhs.false, %entry
  store ptr null, ptr %retval, align 8, !dbg !7050
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7050

if.end:                                           ; preds = %lor.lhs.false
  %2 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !7052, !tbaa !7047
  %3 = load i32, ptr @__pyx_code_cache, align 8, !dbg !7053, !tbaa !7054
  %4 = load i32, ptr %code_line.addr, align 4, !dbg !7055, !tbaa !1335
  %call = call i32 @__pyx_bisect_code_objects(ptr noundef %2, i32 noundef %3, i32 noundef %4), !dbg !7056
  store i32 %call, ptr %pos, align 4, !dbg !7057, !tbaa !1335
  %5 = load i32, ptr %pos, align 4, !dbg !7058, !tbaa !1335
  %6 = load i32, ptr @__pyx_code_cache, align 8, !dbg !7058, !tbaa !7054
  %cmp = icmp sge i32 %5, %6, !dbg !7058
  %lnot15 = xor i1 %cmp, true, !dbg !7058
  %lnot17 = xor i1 %lnot15, true, !dbg !7058
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !7058
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !7058
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0), !dbg !7058
  %tobool21 = icmp ne i64 %expval20, 0, !dbg !7058
  br i1 %tobool21, label %if.then33, label %lor.lhs.false22, !dbg !7060

lor.lhs.false22:                                  ; preds = %if.end
  %7 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !7061, !tbaa !7047
  %8 = load i32, ptr %pos, align 4, !dbg !7061, !tbaa !1335
  %idxprom = sext i32 %8 to i64, !dbg !7061
  %arrayidx = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %7, i64 %idxprom, !dbg !7061
  %code_line23 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx, i32 0, i32 1, !dbg !7061
  %9 = load i32, ptr %code_line23, align 8, !dbg !7061, !tbaa !7062
  %10 = load i32, ptr %code_line.addr, align 4, !dbg !7061, !tbaa !1335
  %cmp24 = icmp ne i32 %9, %10, !dbg !7061
  %lnot26 = xor i1 %cmp24, true, !dbg !7061
  %lnot28 = xor i1 %lnot26, true, !dbg !7061
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !7061
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !7061
  %expval31 = call i64 @llvm.expect.i64(i64 %conv30, i64 0), !dbg !7061
  %tobool32 = icmp ne i64 %expval31, 0, !dbg !7061
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !7064

if.then33:                                        ; preds = %lor.lhs.false22, %if.end
  store ptr null, ptr %retval, align 8, !dbg !7065
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7065

if.end34:                                         ; preds = %lor.lhs.false22
  %11 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !7067, !tbaa !7047
  %12 = load i32, ptr %pos, align 4, !dbg !7068, !tbaa !1335
  %idxprom35 = sext i32 %12 to i64, !dbg !7069
  %arrayidx36 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %11, i64 %idxprom35, !dbg !7069
  %code_object37 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx36, i32 0, i32 0, !dbg !7070
  %13 = load ptr, ptr %code_object37, align 8, !dbg !7070, !tbaa !7071
  store ptr %13, ptr %code_object, align 8, !dbg !7072, !tbaa !1252
  %14 = load ptr, ptr %code_object, align 8, !dbg !7073, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %14), !dbg !7073
  %15 = load ptr, ptr %code_object, align 8, !dbg !7074, !tbaa !1252
  store ptr %15, ptr %retval, align 8, !dbg !7075
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7075

cleanup:                                          ; preds = %if.end34, %if.then33, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %pos) #8, !dbg !7076
  call void @llvm.lifetime.end.p0(i64 8, ptr %code_object) #8, !dbg !7076
  %16 = load ptr, ptr %retval, align 8, !dbg !7076
  ret ptr %16, !dbg !7076
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__Pyx_ErrFetchInState(ptr noundef %tstate, ptr noundef %type, ptr noundef %value, ptr noundef %tb) #3 !dbg !7077 {
entry:
  %tstate.addr = alloca ptr, align 8
  %type.addr = alloca ptr, align 8
  %value.addr = alloca ptr, align 8
  %tb.addr = alloca ptr, align 8
  store ptr %tstate, ptr %tstate.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %tstate.addr, metadata !7081, metadata !DIExpression()), !dbg !7085
  store ptr %type, ptr %type.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %type.addr, metadata !7082, metadata !DIExpression()), !dbg !7086
  store ptr %value, ptr %value.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %value.addr, metadata !7083, metadata !DIExpression()), !dbg !7087
  store ptr %tb, ptr %tb.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %tb.addr, metadata !7084, metadata !DIExpression()), !dbg !7088
  %0 = load ptr, ptr %tstate.addr, align 8, !dbg !7089, !tbaa !1252
  %curexc_type = getelementptr inbounds %struct._ts, ptr %0, i32 0, i32 14, !dbg !7090
  %1 = load ptr, ptr %curexc_type, align 8, !dbg !7090, !tbaa !3259
  %2 = load ptr, ptr %type.addr, align 8, !dbg !7091, !tbaa !1252
  store ptr %1, ptr %2, align 8, !dbg !7092, !tbaa !1252
  %3 = load ptr, ptr %tstate.addr, align 8, !dbg !7093, !tbaa !1252
  %curexc_value = getelementptr inbounds %struct._ts, ptr %3, i32 0, i32 15, !dbg !7094
  %4 = load ptr, ptr %curexc_value, align 8, !dbg !7094, !tbaa !3306
  %5 = load ptr, ptr %value.addr, align 8, !dbg !7095, !tbaa !1252
  store ptr %4, ptr %5, align 8, !dbg !7096, !tbaa !1252
  %6 = load ptr, ptr %tstate.addr, align 8, !dbg !7097, !tbaa !1252
  %curexc_traceback = getelementptr inbounds %struct._ts, ptr %6, i32 0, i32 16, !dbg !7098
  %7 = load ptr, ptr %curexc_traceback, align 8, !dbg !7098, !tbaa !3310
  %8 = load ptr, ptr %tb.addr, align 8, !dbg !7099, !tbaa !1252
  store ptr %7, ptr %8, align 8, !dbg !7100, !tbaa !1252
  %9 = load ptr, ptr %tstate.addr, align 8, !dbg !7101, !tbaa !1252
  %curexc_type1 = getelementptr inbounds %struct._ts, ptr %9, i32 0, i32 14, !dbg !7102
  store ptr null, ptr %curexc_type1, align 8, !dbg !7103, !tbaa !3259
  %10 = load ptr, ptr %tstate.addr, align 8, !dbg !7104, !tbaa !1252
  %curexc_value2 = getelementptr inbounds %struct._ts, ptr %10, i32 0, i32 15, !dbg !7105
  store ptr null, ptr %curexc_value2, align 8, !dbg !7106, !tbaa !3306
  %11 = load ptr, ptr %tstate.addr, align 8, !dbg !7107, !tbaa !1252
  %curexc_traceback3 = getelementptr inbounds %struct._ts, ptr %11, i32 0, i32 16, !dbg !7108
  store ptr null, ptr %curexc_traceback3, align 8, !dbg !7109, !tbaa !3310
  ret void, !dbg !7110
}

; Function Attrs: nounwind uwtable
define internal ptr @__Pyx_CreateCodeObjectForTraceback(ptr noundef %funcname, i32 noundef %c_line, i32 noundef %py_line, ptr noundef %filename) #0 !dbg !7111 {
entry:
  %retval = alloca ptr, align 8
  %funcname.addr = alloca ptr, align 8
  %c_line.addr = alloca i32, align 4
  %py_line.addr = alloca i32, align 4
  %filename.addr = alloca ptr, align 8
  %py_code = alloca ptr, align 8
  %py_funcname = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %funcname, ptr %funcname.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %funcname.addr, metadata !7115, metadata !DIExpression()), !dbg !7122
  store i32 %c_line, ptr %c_line.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %c_line.addr, metadata !7116, metadata !DIExpression()), !dbg !7123
  store i32 %py_line, ptr %py_line.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %py_line.addr, metadata !7117, metadata !DIExpression()), !dbg !7124
  store ptr %filename, ptr %filename.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %filename.addr, metadata !7118, metadata !DIExpression()), !dbg !7125
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_code) #8, !dbg !7126
  tail call void @llvm.dbg.declare(metadata ptr %py_code, metadata !7119, metadata !DIExpression()), !dbg !7127
  store ptr null, ptr %py_code, align 8, !dbg !7127, !tbaa !1252
  call void @llvm.lifetime.start.p0(i64 8, ptr %py_funcname) #8, !dbg !7128
  tail call void @llvm.dbg.declare(metadata ptr %py_funcname, metadata !7120, metadata !DIExpression()), !dbg !7129
  store ptr null, ptr %py_funcname, align 8, !dbg !7129, !tbaa !1252
  %0 = load i32, ptr %c_line.addr, align 4, !dbg !7130, !tbaa !1335
  %tobool = icmp ne i32 %0, 0, !dbg !7130
  br i1 %tobool, label %if.then, label %if.else, !dbg !7132

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %funcname.addr, align 8, !dbg !7133, !tbaa !1252
  %2 = load ptr, ptr @__pyx_cfilenm, align 8, !dbg !7135, !tbaa !1252
  %3 = load i32, ptr %c_line.addr, align 4, !dbg !7136, !tbaa !1335
  %call = call ptr (ptr, ...) @PyUnicode_FromFormat(ptr noundef @.str.71, ptr noundef %1, ptr noundef %2, i32 noundef %3), !dbg !7137
  store ptr %call, ptr %py_funcname, align 8, !dbg !7138, !tbaa !1252
  %4 = load ptr, ptr %py_funcname, align 8, !dbg !7139, !tbaa !1252
  %tobool1 = icmp ne ptr %4, null, !dbg !7139
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !7141

if.then2:                                         ; preds = %if.then
  br label %bad, !dbg !7142

if.end:                                           ; preds = %if.then
  %5 = load ptr, ptr %py_funcname, align 8, !dbg !7143, !tbaa !1252
  %call3 = call ptr @PyUnicode_AsUTF8(ptr noundef %5), !dbg !7144
  store ptr %call3, ptr %funcname.addr, align 8, !dbg !7145, !tbaa !1252
  %6 = load ptr, ptr %funcname.addr, align 8, !dbg !7146, !tbaa !1252
  %tobool4 = icmp ne ptr %6, null, !dbg !7146
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !7148

if.then5:                                         ; preds = %if.end
  br label %bad, !dbg !7149

if.end6:                                          ; preds = %if.end
  br label %if.end7, !dbg !7150

if.else:                                          ; preds = %entry
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end6
  %7 = load ptr, ptr %filename.addr, align 8, !dbg !7151, !tbaa !1252
  %8 = load ptr, ptr %funcname.addr, align 8, !dbg !7152, !tbaa !1252
  %9 = load i32, ptr %py_line.addr, align 4, !dbg !7153, !tbaa !1335
  %call8 = call ptr @PyCode_NewEmpty(ptr noundef %7, ptr noundef %8, i32 noundef %9), !dbg !7154
  store ptr %call8, ptr %py_code, align 8, !dbg !7155, !tbaa !1252
  %10 = load ptr, ptr %py_funcname, align 8, !dbg !7156, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %10), !dbg !7156
  %11 = load ptr, ptr %py_code, align 8, !dbg !7157, !tbaa !1252
  store ptr %11, ptr %retval, align 8, !dbg !7158
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7158

bad:                                              ; preds = %if.then5, %if.then2
  tail call void @llvm.dbg.label(metadata !7121), !dbg !7159
  %12 = load ptr, ptr %py_funcname, align 8, !dbg !7160, !tbaa !1252
  call void @_Py_XDECREF(ptr noundef %12), !dbg !7160
  store ptr null, ptr %retval, align 8, !dbg !7161
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7161

cleanup:                                          ; preds = %bad, %if.end7
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_funcname) #8, !dbg !7162
  call void @llvm.lifetime.end.p0(i64 8, ptr %py_code) #8, !dbg !7162
  %13 = load ptr, ptr %retval, align 8, !dbg !7162
  ret ptr %13, !dbg !7162
}

; Function Attrs: nounwind uwtable
define internal void @__pyx_insert_code_object(i32 noundef %code_line, ptr noundef %code_object) #0 !dbg !7163 {
entry:
  %code_line.addr = alloca i32, align 4
  %code_object.addr = alloca ptr, align 8
  %pos = alloca i32, align 4
  %i = alloca i32, align 4
  %entries = alloca ptr, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %tmp = alloca ptr, align 8
  %new_max = alloca i32, align 4
  store i32 %code_line, ptr %code_line.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %code_line.addr, metadata !7167, metadata !DIExpression()), !dbg !7178
  store ptr %code_object, ptr %code_object.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %code_object.addr, metadata !7168, metadata !DIExpression()), !dbg !7179
  call void @llvm.lifetime.start.p0(i64 4, ptr %pos) #8, !dbg !7180
  tail call void @llvm.dbg.declare(metadata ptr %pos, metadata !7169, metadata !DIExpression()), !dbg !7181
  call void @llvm.lifetime.start.p0(i64 4, ptr %i) #8, !dbg !7180
  tail call void @llvm.dbg.declare(metadata ptr %i, metadata !7170, metadata !DIExpression()), !dbg !7182
  call void @llvm.lifetime.start.p0(i64 8, ptr %entries) #8, !dbg !7183
  tail call void @llvm.dbg.declare(metadata ptr %entries, metadata !7171, metadata !DIExpression()), !dbg !7184
  %0 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !7185, !tbaa !7047
  store ptr %0, ptr %entries, align 8, !dbg !7184, !tbaa !1252
  %1 = load i32, ptr %code_line.addr, align 4, !dbg !7186, !tbaa !1335
  %tobool = icmp ne i32 %1, 0, !dbg !7186
  %lnot = xor i1 %tobool, true, !dbg !7186
  %lnot1 = xor i1 %lnot, true, !dbg !7186
  %lnot2 = xor i1 %lnot1, true, !dbg !7186
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7186
  %conv = sext i32 %lnot.ext to i64, !dbg !7186
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0), !dbg !7186
  %tobool3 = icmp ne i64 %expval, 0, !dbg !7186
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7188

if.then:                                          ; preds = %entry
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80, !dbg !7189

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr %entries, align 8, !dbg !7191, !tbaa !1252
  %tobool4 = icmp ne ptr %2, null, !dbg !7191
  %lnot5 = xor i1 %tobool4, true, !dbg !7191
  %lnot7 = xor i1 %lnot5, true, !dbg !7191
  %lnot9 = xor i1 %lnot7, true, !dbg !7191
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !7191
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !7191
  %expval12 = call i64 @llvm.expect.i64(i64 %conv11, i64 0), !dbg !7191
  %tobool13 = icmp ne i64 %expval12, 0, !dbg !7191
  br i1 %tobool13, label %if.then14, label %if.end28, !dbg !7193

if.then14:                                        ; preds = %if.end
  %call = call ptr @PyMem_Malloc(i64 noundef 1024), !dbg !7194
  store ptr %call, ptr %entries, align 8, !dbg !7196, !tbaa !1252
  %3 = load ptr, ptr %entries, align 8, !dbg !7197, !tbaa !1252
  %tobool15 = icmp ne ptr %3, null, !dbg !7197
  %lnot16 = xor i1 %tobool15, true, !dbg !7197
  %lnot18 = xor i1 %lnot16, true, !dbg !7197
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !7197
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !7197
  %expval21 = call i64 @llvm.expect.i64(i64 %conv20, i64 1), !dbg !7197
  %tobool22 = icmp ne i64 %expval21, 0, !dbg !7197
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !7199

if.then23:                                        ; preds = %if.then14
  %4 = load ptr, ptr %entries, align 8, !dbg !7200, !tbaa !1252
  store ptr %4, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !7202, !tbaa !7047
  store i32 64, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !dbg !7203, !tbaa !7204
  store i32 1, ptr @__pyx_code_cache, align 8, !dbg !7205, !tbaa !7054
  %5 = load i32, ptr %code_line.addr, align 4, !dbg !7206, !tbaa !1335
  %6 = load ptr, ptr %entries, align 8, !dbg !7207, !tbaa !1252
  %arrayidx = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %6, i64 0, !dbg !7207
  %code_line24 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx, i32 0, i32 1, !dbg !7208
  store i32 %5, ptr %code_line24, align 8, !dbg !7209, !tbaa !7062
  %7 = load ptr, ptr %code_object.addr, align 8, !dbg !7210, !tbaa !1252
  %8 = load ptr, ptr %entries, align 8, !dbg !7211, !tbaa !1252
  %arrayidx25 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %8, i64 0, !dbg !7211
  %code_object26 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx25, i32 0, i32 0, !dbg !7212
  store ptr %7, ptr %code_object26, align 8, !dbg !7213, !tbaa !7071
  %9 = load ptr, ptr %code_object.addr, align 8, !dbg !7214, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %9), !dbg !7214
  br label %if.end27, !dbg !7215

if.end27:                                         ; preds = %if.then23, %if.then14
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup80, !dbg !7216

if.end28:                                         ; preds = %if.end
  %10 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !7217, !tbaa !7047
  %11 = load i32, ptr @__pyx_code_cache, align 8, !dbg !7218, !tbaa !7054
  %12 = load i32, ptr %code_line.addr, align 4, !dbg !7219, !tbaa !1335
  %call29 = call i32 @__pyx_bisect_code_objects(ptr noundef %10, i32 noundef %11, i32 noundef %12), !dbg !7220
  store i32 %call29, ptr %pos, align 4, !dbg !7221, !tbaa !1335
  %13 = load i32, ptr %pos, align 4, !dbg !7222, !tbaa !1335
  %14 = load i32, ptr @__pyx_code_cache, align 8, !dbg !7223, !tbaa !7054
  %cmp = icmp slt i32 %13, %14, !dbg !7224
  br i1 %cmp, label %land.lhs.true, label %if.end49, !dbg !7225

land.lhs.true:                                    ; preds = %if.end28
  %15 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !7226, !tbaa !7047
  %16 = load i32, ptr %pos, align 4, !dbg !7226, !tbaa !1335
  %idxprom = sext i32 %16 to i64, !dbg !7226
  %arrayidx31 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %15, i64 %idxprom, !dbg !7226
  %code_line32 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx31, i32 0, i32 1, !dbg !7226
  %17 = load i32, ptr %code_line32, align 8, !dbg !7226, !tbaa !7062
  %18 = load i32, ptr %code_line.addr, align 4, !dbg !7226, !tbaa !1335
  %cmp33 = icmp eq i32 %17, %18, !dbg !7226
  %lnot35 = xor i1 %cmp33, true, !dbg !7226
  %lnot37 = xor i1 %lnot35, true, !dbg !7226
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !7226
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !7226
  %expval40 = call i64 @llvm.expect.i64(i64 %conv39, i64 0), !dbg !7226
  %tobool41 = icmp ne i64 %expval40, 0, !dbg !7226
  br i1 %tobool41, label %if.then42, label %if.end49, !dbg !7227

if.then42:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr %tmp) #8, !dbg !7228
  tail call void @llvm.dbg.declare(metadata ptr %tmp, metadata !7172, metadata !DIExpression()), !dbg !7229
  %19 = load ptr, ptr %entries, align 8, !dbg !7230, !tbaa !1252
  %20 = load i32, ptr %pos, align 4, !dbg !7231, !tbaa !1335
  %idxprom43 = sext i32 %20 to i64, !dbg !7230
  %arrayidx44 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %19, i64 %idxprom43, !dbg !7230
  %code_object45 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx44, i32 0, i32 0, !dbg !7232
  %21 = load ptr, ptr %code_object45, align 8, !dbg !7232, !tbaa !7071
  store ptr %21, ptr %tmp, align 8, !dbg !7229, !tbaa !1252
  %22 = load ptr, ptr %code_object.addr, align 8, !dbg !7233, !tbaa !1252
  %23 = load ptr, ptr %entries, align 8, !dbg !7234, !tbaa !1252
  %24 = load i32, ptr %pos, align 4, !dbg !7235, !tbaa !1335
  %idxprom46 = sext i32 %24 to i64, !dbg !7234
  %arrayidx47 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %23, i64 %idxprom46, !dbg !7234
  %code_object48 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx47, i32 0, i32 0, !dbg !7236
  store ptr %22, ptr %code_object48, align 8, !dbg !7237, !tbaa !7071
  %25 = load ptr, ptr %tmp, align 8, !dbg !7238, !tbaa !1252
  call void @_Py_DECREF(ptr noundef %25), !dbg !7238
  store i32 1, ptr %cleanup.dest.slot, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr %tmp) #8, !dbg !7239
  br label %cleanup80

if.end49:                                         ; preds = %land.lhs.true, %if.end28
  %26 = load i32, ptr @__pyx_code_cache, align 8, !dbg !7240, !tbaa !7054
  %27 = load i32, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !dbg !7241, !tbaa !7204
  %cmp50 = icmp eq i32 %26, %27, !dbg !7242
  br i1 %cmp50, label %if.then52, label %if.end67, !dbg !7243

if.then52:                                        ; preds = %if.end49
  call void @llvm.lifetime.start.p0(i64 4, ptr %new_max) #8, !dbg !7244
  tail call void @llvm.dbg.declare(metadata ptr %new_max, metadata !7175, metadata !DIExpression()), !dbg !7245
  %28 = load i32, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !dbg !7246, !tbaa !7204
  %add = add i32 %28, 64, !dbg !7247
  store i32 %add, ptr %new_max, align 4, !dbg !7245, !tbaa !1335
  %29 = load ptr, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !7248, !tbaa !7047
  %30 = load i32, ptr %new_max, align 4, !dbg !7249, !tbaa !1335
  %conv53 = sext i32 %30 to i64, !dbg !7250
  %mul = mul i64 %conv53, 16, !dbg !7251
  %call54 = call ptr @PyMem_Realloc(ptr noundef %29, i64 noundef %mul), !dbg !7252
  store ptr %call54, ptr %entries, align 8, !dbg !7253, !tbaa !1252
  %31 = load ptr, ptr %entries, align 8, !dbg !7254, !tbaa !1252
  %tobool55 = icmp ne ptr %31, null, !dbg !7254
  %lnot56 = xor i1 %tobool55, true, !dbg !7254
  %lnot58 = xor i1 %lnot56, true, !dbg !7254
  %lnot60 = xor i1 %lnot58, true, !dbg !7254
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !7254
  %conv62 = sext i32 %lnot.ext61 to i64, !dbg !7254
  %expval63 = call i64 @llvm.expect.i64(i64 %conv62, i64 0), !dbg !7254
  %tobool64 = icmp ne i64 %expval63, 0, !dbg !7254
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !7256

if.then65:                                        ; preds = %if.then52
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7257

if.end66:                                         ; preds = %if.then52
  %32 = load ptr, ptr %entries, align 8, !dbg !7259, !tbaa !1252
  store ptr %32, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 2), align 8, !dbg !7260, !tbaa !7047
  %33 = load i32, ptr %new_max, align 4, !dbg !7261, !tbaa !1335
  store i32 %33, ptr getelementptr inbounds (%struct.__Pyx_CodeObjectCache, ptr @__pyx_code_cache, i32 0, i32 1), align 4, !dbg !7262, !tbaa !7204
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7263
  br label %cleanup, !dbg !7263

cleanup:                                          ; preds = %if.end66, %if.then65
  call void @llvm.lifetime.end.p0(i64 4, ptr %new_max) #8, !dbg !7263
  %cleanup.dest = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup80 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end67, !dbg !7264

if.end67:                                         ; preds = %cleanup.cont, %if.end49
  %34 = load i32, ptr @__pyx_code_cache, align 8, !dbg !7265, !tbaa !7054
  store i32 %34, ptr %i, align 4, !dbg !7267, !tbaa !1335
  br label %for.cond, !dbg !7268

for.cond:                                         ; preds = %for.inc, %if.end67
  %35 = load i32, ptr %i, align 4, !dbg !7269, !tbaa !1335
  %36 = load i32, ptr %pos, align 4, !dbg !7271, !tbaa !1335
  %cmp68 = icmp sgt i32 %35, %36, !dbg !7272
  br i1 %cmp68, label %for.body, label %for.end, !dbg !7273

for.body:                                         ; preds = %for.cond
  %37 = load ptr, ptr %entries, align 8, !dbg !7274, !tbaa !1252
  %38 = load i32, ptr %i, align 4, !dbg !7276, !tbaa !1335
  %idxprom70 = sext i32 %38 to i64, !dbg !7274
  %arrayidx71 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %37, i64 %idxprom70, !dbg !7274
  %39 = load ptr, ptr %entries, align 8, !dbg !7277, !tbaa !1252
  %40 = load i32, ptr %i, align 4, !dbg !7278, !tbaa !1335
  %sub = sub i32 %40, 1, !dbg !7279
  %idxprom72 = sext i32 %sub to i64, !dbg !7277
  %arrayidx73 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %39, i64 %idxprom72, !dbg !7277
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %arrayidx71, ptr align 8 %arrayidx73, i64 16, i1 false), !dbg !7277, !tbaa.struct !7280
  br label %for.inc, !dbg !7281

for.inc:                                          ; preds = %for.body
  %41 = load i32, ptr %i, align 4, !dbg !7282, !tbaa !1335
  %dec = add i32 %41, -1, !dbg !7282
  store i32 %dec, ptr %i, align 4, !dbg !7282, !tbaa !1335
  br label %for.cond, !dbg !7283, !llvm.loop !7284

for.end:                                          ; preds = %for.cond
  %42 = load i32, ptr %code_line.addr, align 4, !dbg !7286, !tbaa !1335
  %43 = load ptr, ptr %entries, align 8, !dbg !7287, !tbaa !1252
  %44 = load i32, ptr %pos, align 4, !dbg !7288, !tbaa !1335
  %idxprom74 = sext i32 %44 to i64, !dbg !7287
  %arrayidx75 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %43, i64 %idxprom74, !dbg !7287
  %code_line76 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx75, i32 0, i32 1, !dbg !7289
  store i32 %42, ptr %code_line76, align 8, !dbg !7290, !tbaa !7062
  %45 = load ptr, ptr %code_object.addr, align 8, !dbg !7291, !tbaa !1252
  %46 = load ptr, ptr %entries, align 8, !dbg !7292, !tbaa !1252
  %47 = load i32, ptr %pos, align 4, !dbg !7293, !tbaa !1335
  %idxprom77 = sext i32 %47 to i64, !dbg !7292
  %arrayidx78 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %46, i64 %idxprom77, !dbg !7292
  %code_object79 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx78, i32 0, i32 0, !dbg !7294
  store ptr %45, ptr %code_object79, align 8, !dbg !7295, !tbaa !7071
  %48 = load i32, ptr @__pyx_code_cache, align 8, !dbg !7296, !tbaa !7054
  %inc = add i32 %48, 1, !dbg !7296
  store i32 %inc, ptr @__pyx_code_cache, align 8, !dbg !7296, !tbaa !7054
  %49 = load ptr, ptr %code_object.addr, align 8, !dbg !7297, !tbaa !1252
  call void @_Py_INCREF(ptr noundef %49), !dbg !7297
  store i32 0, ptr %cleanup.dest.slot, align 4, !dbg !7298
  br label %cleanup80, !dbg !7298

cleanup80:                                        ; preds = %for.end, %cleanup, %if.then42, %if.end27, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr %entries) #8, !dbg !7298
  call void @llvm.lifetime.end.p0(i64 4, ptr %i) #8, !dbg !7298
  call void @llvm.lifetime.end.p0(i64 4, ptr %pos) #8, !dbg !7298
  %cleanup.dest83 = load i32, ptr %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest83, label %unreachable [
    i32 0, label %cleanup.cont84
    i32 1, label %cleanup.cont84
  ]

cleanup.cont84:                                   ; preds = %cleanup80, %cleanup80
  ret void, !dbg !7298

unreachable:                                      ; preds = %cleanup80
  unreachable
}

declare !dbg !7299 i32 @PyTraceBack_Here(ptr noundef) #1

declare !dbg !7303 ptr @_PyObject_GetDictPtr(ptr noundef) #1

declare !dbg !7306 i32 @PyObject_Not(ptr noundef) #1

; Function Attrs: nounwind uwtable
define internal i32 @__pyx_bisect_code_objects(ptr noundef %entries, i32 noundef %count, i32 noundef %code_line) #0 !dbg !7307 {
entry:
  %retval = alloca i32, align 4
  %entries.addr = alloca ptr, align 8
  %count.addr = alloca i32, align 4
  %code_line.addr = alloca i32, align 4
  %start = alloca i32, align 4
  %mid = alloca i32, align 4
  %end = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store ptr %entries, ptr %entries.addr, align 8, !tbaa !1252
  tail call void @llvm.dbg.declare(metadata ptr %entries.addr, metadata !7311, metadata !DIExpression()), !dbg !7317
  store i32 %count, ptr %count.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %count.addr, metadata !7312, metadata !DIExpression()), !dbg !7318
  store i32 %code_line, ptr %code_line.addr, align 4, !tbaa !1335
  tail call void @llvm.dbg.declare(metadata ptr %code_line.addr, metadata !7313, metadata !DIExpression()), !dbg !7319
  call void @llvm.lifetime.start.p0(i64 4, ptr %start) #8, !dbg !7320
  tail call void @llvm.dbg.declare(metadata ptr %start, metadata !7314, metadata !DIExpression()), !dbg !7321
  store i32 0, ptr %start, align 4, !dbg !7321, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 4, ptr %mid) #8, !dbg !7320
  tail call void @llvm.dbg.declare(metadata ptr %mid, metadata !7315, metadata !DIExpression()), !dbg !7322
  store i32 0, ptr %mid, align 4, !dbg !7322, !tbaa !1335
  call void @llvm.lifetime.start.p0(i64 4, ptr %end) #8, !dbg !7320
  tail call void @llvm.dbg.declare(metadata ptr %end, metadata !7316, metadata !DIExpression()), !dbg !7323
  %0 = load i32, ptr %count.addr, align 4, !dbg !7324, !tbaa !1335
  %sub = sub i32 %0, 1, !dbg !7325
  store i32 %sub, ptr %end, align 4, !dbg !7323, !tbaa !1335
  %1 = load i32, ptr %end, align 4, !dbg !7326, !tbaa !1335
  %cmp = icmp sge i32 %1, 0, !dbg !7328
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7329

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, ptr %code_line.addr, align 4, !dbg !7330, !tbaa !1335
  %3 = load ptr, ptr %entries.addr, align 8, !dbg !7331, !tbaa !1252
  %4 = load i32, ptr %end, align 4, !dbg !7332, !tbaa !1335
  %idxprom = sext i32 %4 to i64, !dbg !7331
  %arrayidx = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %3, i64 %idxprom, !dbg !7331
  %code_line1 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx, i32 0, i32 1, !dbg !7333
  %5 = load i32, ptr %code_line1, align 8, !dbg !7333, !tbaa !7062
  %cmp2 = icmp sgt i32 %2, %5, !dbg !7334
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7335

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, ptr %count.addr, align 4, !dbg !7336, !tbaa !1335
  store i32 %6, ptr %retval, align 4, !dbg !7338
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7338

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %while.cond, !dbg !7339

while.cond:                                       ; preds = %if.end18, %if.end
  %7 = load i32, ptr %start, align 4, !dbg !7340, !tbaa !1335
  %8 = load i32, ptr %end, align 4, !dbg !7341, !tbaa !1335
  %cmp3 = icmp slt i32 %7, %8, !dbg !7342
  br i1 %cmp3, label %while.body, label %while.end, !dbg !7339

while.body:                                       ; preds = %while.cond
  %9 = load i32, ptr %start, align 4, !dbg !7343, !tbaa !1335
  %10 = load i32, ptr %end, align 4, !dbg !7345, !tbaa !1335
  %11 = load i32, ptr %start, align 4, !dbg !7346, !tbaa !1335
  %sub4 = sub i32 %10, %11, !dbg !7347
  %div = sdiv i32 %sub4, 2, !dbg !7348
  %add = add i32 %9, %div, !dbg !7349
  store i32 %add, ptr %mid, align 4, !dbg !7350, !tbaa !1335
  %12 = load i32, ptr %code_line.addr, align 4, !dbg !7351, !tbaa !1335
  %13 = load ptr, ptr %entries.addr, align 8, !dbg !7353, !tbaa !1252
  %14 = load i32, ptr %mid, align 4, !dbg !7354, !tbaa !1335
  %idxprom5 = sext i32 %14 to i64, !dbg !7353
  %arrayidx6 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %13, i64 %idxprom5, !dbg !7353
  %code_line7 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx6, i32 0, i32 1, !dbg !7355
  %15 = load i32, ptr %code_line7, align 8, !dbg !7355, !tbaa !7062
  %cmp8 = icmp slt i32 %12, %15, !dbg !7356
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !7357

if.then9:                                         ; preds = %while.body
  %16 = load i32, ptr %mid, align 4, !dbg !7358, !tbaa !1335
  store i32 %16, ptr %end, align 4, !dbg !7360, !tbaa !1335
  br label %if.end18, !dbg !7361

if.else:                                          ; preds = %while.body
  %17 = load i32, ptr %code_line.addr, align 4, !dbg !7362, !tbaa !1335
  %18 = load ptr, ptr %entries.addr, align 8, !dbg !7364, !tbaa !1252
  %19 = load i32, ptr %mid, align 4, !dbg !7365, !tbaa !1335
  %idxprom10 = sext i32 %19 to i64, !dbg !7364
  %arrayidx11 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %18, i64 %idxprom10, !dbg !7364
  %code_line12 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx11, i32 0, i32 1, !dbg !7366
  %20 = load i32, ptr %code_line12, align 8, !dbg !7366, !tbaa !7062
  %cmp13 = icmp sgt i32 %17, %20, !dbg !7367
  br i1 %cmp13, label %if.then14, label %if.else16, !dbg !7368

if.then14:                                        ; preds = %if.else
  %21 = load i32, ptr %mid, align 4, !dbg !7369, !tbaa !1335
  %add15 = add i32 %21, 1, !dbg !7371
  store i32 %add15, ptr %start, align 4, !dbg !7372, !tbaa !1335
  br label %if.end17, !dbg !7373

if.else16:                                        ; preds = %if.else
  %22 = load i32, ptr %mid, align 4, !dbg !7374, !tbaa !1335
  store i32 %22, ptr %retval, align 4, !dbg !7376
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7376

if.end17:                                         ; preds = %if.then14
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then9
  br label %while.cond, !dbg !7339, !llvm.loop !7377

while.end:                                        ; preds = %while.cond
  %23 = load i32, ptr %code_line.addr, align 4, !dbg !7379, !tbaa !1335
  %24 = load ptr, ptr %entries.addr, align 8, !dbg !7381, !tbaa !1252
  %25 = load i32, ptr %mid, align 4, !dbg !7382, !tbaa !1335
  %idxprom19 = sext i32 %25 to i64, !dbg !7381
  %arrayidx20 = getelementptr %struct.__Pyx_CodeObjectCacheEntry, ptr %24, i64 %idxprom19, !dbg !7381
  %code_line21 = getelementptr inbounds %struct.__Pyx_CodeObjectCacheEntry, ptr %arrayidx20, i32 0, i32 1, !dbg !7383
  %26 = load i32, ptr %code_line21, align 8, !dbg !7383, !tbaa !7062
  %cmp22 = icmp sle i32 %23, %26, !dbg !7384
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !7385

if.then23:                                        ; preds = %while.end
  %27 = load i32, ptr %mid, align 4, !dbg !7386, !tbaa !1335
  store i32 %27, ptr %retval, align 4, !dbg !7388
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7388

if.else24:                                        ; preds = %while.end
  %28 = load i32, ptr %mid, align 4, !dbg !7389, !tbaa !1335
  %add25 = add i32 %28, 1, !dbg !7391
  store i32 %add25, ptr %retval, align 4, !dbg !7392
  store i32 1, ptr %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7392

cleanup:                                          ; preds = %if.else24, %if.then23, %if.else16, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr %end) #8, !dbg !7393
  call void @llvm.lifetime.end.p0(i64 4, ptr %mid) #8, !dbg !7393
  call void @llvm.lifetime.end.p0(i64 4, ptr %start) #8, !dbg !7393
  %29 = load i32, ptr %retval, align 4, !dbg !7393
  ret i32 %29, !dbg !7393
}

declare !dbg !7394 ptr @PyUnicode_FromFormat(ptr noundef, ...) #1

declare !dbg !7397 ptr @PyUnicode_AsUTF8(ptr noundef) #1

declare !dbg !7400 ptr @PyCode_NewEmpty(ptr noundef, ptr noundef, i32 noundef) #1

declare !dbg !7403 ptr @PyMem_Malloc(i64 noundef) #1

declare !dbg !7407 ptr @PyMem_Realloc(ptr noundef, i64 noundef) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.label(metadata) #7

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #6 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1227, !1228, !1229, !1230, !1231}
!llvm.ident = !{!1232}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__pyx_module_is_main_pandas___libs__indexing", scope: !2, file: !3, line: 1374, type: !54, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C11, file: !3, producer: "clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !4, globals: !486, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "pandas/_libs/indexing.c", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build/aidengro/spack-stage-py-pandas-1.5.3-t2ah26ijbt7dck44kjkjgtwnjnacpkvn/spack-src", checksumkind: CSK_MD5, checksum: "ea92cdd179b5feea66c7ddc62d440dd3")
!4 = !{!5, !6, !304, !48, !306, !238, !313, !323, !340, !20, !341, !360, !12, !54, !362, !372, !384, !397, !433, !339, !452, !456, !209, !381, !460, !467, !18, !468, !472, !480}
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !8, line: 109, baseType: !9)
!8 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/object.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "3f9979776300c70b1e34aa51eda1adeb")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !8, line: 105, size: 128, elements: !10)
!10 = !{!11, !19}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !9, file: !8, line: 107, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !13, line: 105, baseType: !14)
!13 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/pyport.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "130a2fc9ce18e45cf2f23659ef07d5ba")
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !15, line: 77, baseType: !16)
!15 = !DIFile(filename: "/usr/include/stdio.h", directory: "", checksumkind: CSK_MD5, checksum: "f31eefcc3f15835fc5a4023a625cf609")
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !17, line: 194, baseType: !18)
!17 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!18 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !9, file: !8, line: 108, baseType: !20, size: 64, offset: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !8, line: 66, baseType: !22)
!22 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !23, line: 193, size: 3264, elements: !24)
!23 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/cpython/object.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "90f773997436a8640d3c606f1a7092f7")
!24 = !{!25, !31, !35, !36, !37, !42, !43, !49, !55, !67, !69, !122, !153, !165, !171, !172, !173, !175, !177, !208, !210, !211, !220, !221, !226, !227, !229, !231, !241, !244, !262, !264, !265, !267, !269, !270, !272, !277, !282, !287, !288, !289, !290, !291, !292, !293, !294, !296, !297}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !22, file: !23, line: 194, baseType: !26, size: 192)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !8, line: 118, baseType: !27)
!27 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8, line: 115, size: 192, elements: !28)
!28 = !{!29, !30}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !27, file: !8, line: 116, baseType: !7, size: 128)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !27, file: !8, line: 117, baseType: !12, size: 64, offset: 128)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !22, file: !23, line: 195, baseType: !32, size: 64, offset: 192)
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64)
!33 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!34 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !22, file: !23, line: 196, baseType: !12, size: 64, offset: 256)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !22, file: !23, line: 196, baseType: !12, size: 64, offset: 320)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !22, file: !23, line: 200, baseType: !38, size: 64, offset: 384)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !8, line: 180, baseType: !39)
!39 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!40 = !DISubroutineType(types: !41)
!41 = !{null, !6}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "tp_vectorcall_offset", scope: !22, file: !23, line: 201, baseType: !12, size: 64, offset: 448)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !22, file: !23, line: 202, baseType: !44, size: 64, offset: 512)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !8, line: 181, baseType: !45)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64)
!46 = !DISubroutineType(types: !47)
!47 = !{!6, !6, !48}
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !22, file: !23, line: 203, baseType: !50, size: 64, offset: 576)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !8, line: 183, baseType: !51)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!52 = !DISubroutineType(types: !53)
!53 = !{!54, !6, !48, !6}
!54 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_async", scope: !22, file: !23, line: 204, baseType: !56, size: 64, offset: 640)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyAsyncMethods", file: !23, line: 182, baseType: !58)
!58 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !23, line: 178, size: 192, elements: !59)
!59 = !{!60, !65, !66}
!60 = !DIDerivedType(tag: DW_TAG_member, name: "am_await", scope: !58, file: !23, line: 179, baseType: !61, size: 64)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !8, line: 163, baseType: !62)
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !63, size: 64)
!63 = !DISubroutineType(types: !64)
!64 = !{!6, !6}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "am_aiter", scope: !58, file: !23, line: 180, baseType: !61, size: 64, offset: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "am_anext", scope: !58, file: !23, line: 181, baseType: !61, size: 64, offset: 128)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !22, file: !23, line: 206, baseType: !68, size: 64, offset: 704)
!68 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !8, line: 185, baseType: !62)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !22, file: !23, line: 210, baseType: !70, size: 64, offset: 768)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !23, line: 156, baseType: !72)
!72 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !23, line: 111, size: 2304, elements: !73)
!73 = !{!74, !79, !80, !81, !82, !83, !88, !89, !90, !91, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !72, file: !23, line: 116, baseType: !75, size: 64)
!75 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !8, line: 164, baseType: !76)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!77 = !DISubroutineType(types: !78)
!78 = !{!6, !6, !6}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !72, file: !23, line: 117, baseType: !75, size: 64, offset: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !72, file: !23, line: 118, baseType: !75, size: 64, offset: 128)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !72, file: !23, line: 119, baseType: !75, size: 64, offset: 192)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !72, file: !23, line: 120, baseType: !75, size: 64, offset: 256)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !72, file: !23, line: 121, baseType: !84, size: 64, offset: 320)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !8, line: 165, baseType: !85)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = !DISubroutineType(types: !87)
!87 = !{!6, !6, !6, !6}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !72, file: !23, line: 122, baseType: !61, size: 64, offset: 384)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !72, file: !23, line: 123, baseType: !61, size: 64, offset: 448)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !72, file: !23, line: 124, baseType: !61, size: 64, offset: 512)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !72, file: !23, line: 125, baseType: !92, size: 64, offset: 576)
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !8, line: 166, baseType: !93)
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!94 = !DISubroutineType(types: !95)
!95 = !{!54, !6}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !72, file: !23, line: 126, baseType: !61, size: 64, offset: 640)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !72, file: !23, line: 127, baseType: !75, size: 64, offset: 704)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !72, file: !23, line: 128, baseType: !75, size: 64, offset: 768)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !72, file: !23, line: 129, baseType: !75, size: 64, offset: 832)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !72, file: !23, line: 130, baseType: !75, size: 64, offset: 896)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !72, file: !23, line: 131, baseType: !75, size: 64, offset: 960)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !72, file: !23, line: 132, baseType: !61, size: 64, offset: 1024)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !72, file: !23, line: 133, baseType: !5, size: 64, offset: 1088)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !72, file: !23, line: 134, baseType: !61, size: 64, offset: 1152)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !72, file: !23, line: 136, baseType: !75, size: 64, offset: 1216)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !72, file: !23, line: 137, baseType: !75, size: 64, offset: 1280)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !72, file: !23, line: 138, baseType: !75, size: 64, offset: 1344)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !72, file: !23, line: 139, baseType: !75, size: 64, offset: 1408)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !72, file: !23, line: 140, baseType: !84, size: 64, offset: 1472)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !72, file: !23, line: 141, baseType: !75, size: 64, offset: 1536)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !72, file: !23, line: 142, baseType: !75, size: 64, offset: 1600)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !72, file: !23, line: 143, baseType: !75, size: 64, offset: 1664)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !72, file: !23, line: 144, baseType: !75, size: 64, offset: 1728)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !72, file: !23, line: 145, baseType: !75, size: 64, offset: 1792)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !72, file: !23, line: 147, baseType: !75, size: 64, offset: 1856)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !72, file: !23, line: 148, baseType: !75, size: 64, offset: 1920)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !72, file: !23, line: 149, baseType: !75, size: 64, offset: 1984)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !72, file: !23, line: 150, baseType: !75, size: 64, offset: 2048)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !72, file: !23, line: 152, baseType: !61, size: 64, offset: 2112)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "nb_matrix_multiply", scope: !72, file: !23, line: 154, baseType: !75, size: 64, offset: 2176)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_matrix_multiply", scope: !72, file: !23, line: 155, baseType: !75, size: 64, offset: 2240)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !22, file: !23, line: 211, baseType: !123, size: 64, offset: 832)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !23, line: 170, baseType: !125)
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !23, line: 158, size: 640, elements: !126)
!126 = !{!127, !132, !133, !138, !139, !140, !145, !146, !151, !152}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !125, file: !23, line: 159, baseType: !128, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !8, line: 167, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DISubroutineType(types: !131)
!131 = !{!12, !6}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !125, file: !23, line: 160, baseType: !75, size: 64, offset: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !125, file: !23, line: 161, baseType: !134, size: 64, offset: 128)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !8, line: 168, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!136 = !DISubroutineType(types: !137)
!137 = !{!6, !6, !12}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !125, file: !23, line: 162, baseType: !134, size: 64, offset: 192)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !125, file: !23, line: 163, baseType: !5, size: 64, offset: 256)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !125, file: !23, line: 164, baseType: !141, size: 64, offset: 320)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !8, line: 170, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = !DISubroutineType(types: !144)
!144 = !{!54, !6, !12, !6}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !125, file: !23, line: 165, baseType: !5, size: 64, offset: 384)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !125, file: !23, line: 166, baseType: !147, size: 64, offset: 448)
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !8, line: 174, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = !DISubroutineType(types: !150)
!150 = !{!54, !6, !6}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !125, file: !23, line: 168, baseType: !75, size: 64, offset: 512)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !125, file: !23, line: 169, baseType: !134, size: 64, offset: 576)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !22, file: !23, line: 212, baseType: !154, size: 64, offset: 896)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !23, line: 176, baseType: !156)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !23, line: 172, size: 192, elements: !157)
!157 = !{!158, !159, !160}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !156, file: !23, line: 173, baseType: !128, size: 64)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !156, file: !23, line: 174, baseType: !75, size: 64, offset: 64)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !156, file: !23, line: 175, baseType: !161, size: 64, offset: 128)
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !8, line: 172, baseType: !162)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!163 = !DISubroutineType(types: !164)
!164 = !{!54, !6, !6, !6}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !22, file: !23, line: 216, baseType: !166, size: 64, offset: 960)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !8, line: 186, baseType: !167)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = !DISubroutineType(types: !169)
!169 = !{!170, !6}
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !13, line: 114, baseType: !12)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !22, file: !23, line: 217, baseType: !84, size: 64, offset: 1024)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !22, file: !23, line: 218, baseType: !68, size: 64, offset: 1088)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !22, file: !23, line: 219, baseType: !174, size: 64, offset: 1152)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !8, line: 182, baseType: !76)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !22, file: !23, line: 220, baseType: !176, size: 64, offset: 1216)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !8, line: 184, baseType: !162)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !22, file: !23, line: 223, baseType: !178, size: 64, offset: 1280)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !23, line: 187, baseType: !180)
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !23, line: 184, size: 128, elements: !181)
!181 = !{!182, !203}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !180, file: !23, line: 185, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !23, line: 71, baseType: !184)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!185 = !DISubroutineType(types: !186)
!186 = !{!54, !6, !187, !54}
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !23, line: 69, baseType: !189)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !23, line: 56, size: 640, elements: !190)
!190 = !{!191, !192, !193, !194, !195, !196, !197, !198, !200, !201, !202}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !189, file: !23, line: 57, baseType: !5, size: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !189, file: !23, line: 58, baseType: !6, size: 64, offset: 64)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !189, file: !23, line: 59, baseType: !12, size: 64, offset: 128)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !189, file: !23, line: 60, baseType: !12, size: 64, offset: 192)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !189, file: !23, line: 62, baseType: !54, size: 32, offset: 256)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !189, file: !23, line: 63, baseType: !54, size: 32, offset: 288)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !189, file: !23, line: 64, baseType: !48, size: 64, offset: 320)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !189, file: !23, line: 65, baseType: !199, size: 64, offset: 384)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !189, file: !23, line: 66, baseType: !199, size: 64, offset: 448)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !189, file: !23, line: 67, baseType: !199, size: 64, offset: 512)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !189, file: !23, line: 68, baseType: !5, size: 64, offset: 576)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !180, file: !23, line: 186, baseType: !204, size: 64, offset: 64)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !23, line: 72, baseType: !205)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!206 = !DISubroutineType(types: !207)
!207 = !{null, !6, !187}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !22, file: !23, line: 226, baseType: !209, size: 64, offset: 1344)
!209 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !22, file: !23, line: 228, baseType: !32, size: 64, offset: 1408)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !22, file: !23, line: 232, baseType: !212, size: 64, offset: 1472)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !8, line: 176, baseType: !213)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = !DISubroutineType(types: !215)
!215 = !{!54, !6, !216, !5}
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !8, line: 175, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!218 = !DISubroutineType(types: !219)
!219 = !{!54, !6, !5}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !22, file: !23, line: 235, baseType: !92, size: 64, offset: 1536)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !22, file: !23, line: 239, baseType: !222, size: 64, offset: 1600)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !8, line: 187, baseType: !223)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!224 = !DISubroutineType(types: !225)
!225 = !{!6, !6, !6, !54}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !22, file: !23, line: 242, baseType: !12, size: 64, offset: 1664)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !22, file: !23, line: 245, baseType: !228, size: 64, offset: 1728)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !8, line: 188, baseType: !62)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !22, file: !23, line: 246, baseType: !230, size: 64, offset: 1792)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !8, line: 189, baseType: !62)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !22, file: !23, line: 249, baseType: !232, size: 64, offset: 1856)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !234, line: 35, size: 256, elements: !235)
!234 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/methodobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "bbf63d5b676c05c658805ba163513296")
!235 = !{!236, !237, !239, !240}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !233, file: !234, line: 36, baseType: !32, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !233, file: !234, line: 37, baseType: !238, size: 64, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !234, line: 19, baseType: !76)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !233, file: !234, line: 38, baseType: !54, size: 32, offset: 128)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !233, file: !234, line: 40, baseType: !32, size: 64, offset: 192)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !22, file: !23, line: 250, baseType: !242, size: 64, offset: 1920)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !23, line: 250, flags: DIFlagFwdDecl)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !22, file: !23, line: 251, baseType: !245, size: 64, offset: 1984)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !247, line: 11, size: 320, elements: !248)
!247 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/descrobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "4865dae4e254db6f261f61dcb32e8571")
!248 = !{!249, !250, !255, !260, !261}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !247, line: 12, baseType: !32, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !246, file: !247, line: 13, baseType: !251, size: 64, offset: 64)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !247, line: 8, baseType: !252)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = !DISubroutineType(types: !254)
!254 = !{!6, !6, !5}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !246, file: !247, line: 14, baseType: !256, size: 64, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !247, line: 9, baseType: !257)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!258 = !DISubroutineType(types: !259)
!259 = !{!54, !6, !6, !5}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !246, file: !247, line: 15, baseType: !32, size: 64, offset: 192)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !246, file: !247, line: 16, baseType: !5, size: 64, offset: 256)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !22, file: !23, line: 252, baseType: !263, size: 64, offset: 2048)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !22, file: !23, line: 253, baseType: !6, size: 64, offset: 2112)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !22, file: !23, line: 254, baseType: !266, size: 64, offset: 2176)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !8, line: 190, baseType: !85)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !22, file: !23, line: 255, baseType: !268, size: 64, offset: 2240)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !8, line: 191, baseType: !162)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !22, file: !23, line: 256, baseType: !12, size: 64, offset: 2304)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !22, file: !23, line: 257, baseType: !271, size: 64, offset: 2368)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !8, line: 192, baseType: !162)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !22, file: !23, line: 258, baseType: !273, size: 64, offset: 2432)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !8, line: 194, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DISubroutineType(types: !276)
!276 = !{!6, !20, !12}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !22, file: !23, line: 259, baseType: !278, size: 64, offset: 2496)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !8, line: 193, baseType: !279)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!280 = !DISubroutineType(types: !281)
!281 = !{!6, !20, !6, !6}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !22, file: !23, line: 260, baseType: !283, size: 64, offset: 2560)
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !8, line: 179, baseType: !284)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DISubroutineType(types: !286)
!286 = !{null, !5}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !22, file: !23, line: 261, baseType: !92, size: 64, offset: 2624)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !22, file: !23, line: 262, baseType: !6, size: 64, offset: 2688)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !22, file: !23, line: 263, baseType: !6, size: 64, offset: 2752)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !22, file: !23, line: 264, baseType: !6, size: 64, offset: 2816)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !22, file: !23, line: 265, baseType: !6, size: 64, offset: 2880)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !22, file: !23, line: 266, baseType: !6, size: 64, offset: 2944)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !22, file: !23, line: 267, baseType: !38, size: 64, offset: 3008)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !22, file: !23, line: 270, baseType: !295, size: 32, offset: 3072)
!295 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !22, file: !23, line: 272, baseType: !38, size: 64, offset: 3136)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "tp_vectorcall", scope: !22, file: !23, line: 273, baseType: !298, size: 64, offset: 3200)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "vectorcallfunc", file: !23, line: 74, baseType: !299)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = !DISubroutineType(types: !301)
!301 = !{!6, !6, !302, !304, !6}
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !305, line: 70, baseType: !209)
!305 = !DIFile(filename: "/usr/lib/clang/18/include/stddef.h", directory: "", checksumkind: CSK_MD5, checksum: "592de6c0120e294e25519119517dd24e")
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase", file: !3, line: 993, size: 320, elements: !308)
!308 = !{!309, !310, !311, !312}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !307, file: !3, line: 994, baseType: !7, size: 128)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "_ndim", scope: !307, file: !3, line: 995, baseType: !12, size: 64, offset: 128)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !307, file: !3, line: 996, baseType: !6, size: 64, offset: 192)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !307, file: !3, line: 997, baseType: !6, size: 64, offset: 256)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !315, line: 15, baseType: !316)
!315 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/cpython/tupleobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "5f7ba6d97ded9aa1272172424c6ae4e3")
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !315, line: 9, size: 256, elements: !317)
!317 = !{!318, !319}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !316, file: !315, line: 10, baseType: !26, size: 192)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !316, file: !315, line: 14, baseType: !320, size: 64, offset: 192)
!320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 64, elements: !321)
!321 = !{!322}
!322 = !DISubrange(count: 1)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDictObject", file: !325, line: 32, baseType: !326)
!325 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/cpython/dictobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "7b11975c6ebf262dd56773c52c3767e4")
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !325, line: 14, size: 384, elements: !327)
!327 = !{!328, !329, !330, !334, !338}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !326, file: !325, line: 15, baseType: !7, size: 128)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "ma_used", scope: !326, file: !325, line: 18, baseType: !12, size: 64, offset: 128)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "ma_version_tag", scope: !326, file: !325, line: 22, baseType: !331, size: 64, offset: 192)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !332, line: 27, baseType: !333)
!332 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !17, line: 45, baseType: !209)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "ma_keys", scope: !326, file: !325, line: 24, baseType: !335, size: 64, offset: 256)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDictKeysObject", file: !325, line: 9, baseType: !337)
!337 = !DICompositeType(tag: DW_TAG_structure_type, name: "_dictkeysobject", file: !23, line: 291, flags: DIFlagFwdDecl)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "ma_values", scope: !326, file: !325, line: 31, baseType: !339, size: 64, offset: 320)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyASCIIObject", file: !343, line: 219, baseType: !344)
!343 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/cpython/unicodeobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "4e8ada5abdaead20669503dfb3a48df9")
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !343, line: 85, size: 384, elements: !345)
!345 = !{!346, !347, !348, !349, !357}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !344, file: !343, line: 159, baseType: !7, size: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !344, file: !343, line: 160, baseType: !12, size: 64, offset: 128)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !344, file: !343, line: 161, baseType: !170, size: 64, offset: 192)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !344, file: !343, line: 217, baseType: !350, size: 32, offset: 256)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !344, file: !343, line: 162, size: 32, elements: !351)
!351 = !{!352, !353, !354, !355, !356}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "interned", scope: !350, file: !343, line: 171, baseType: !295, size: 2, flags: DIFlagBitField, extraData: i64 0)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !350, file: !343, line: 199, baseType: !295, size: 3, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !350, file: !343, line: 204, baseType: !295, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !350, file: !343, line: 208, baseType: !295, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !350, file: !343, line: 213, baseType: !295, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "wstr", scope: !344, file: !343, line: 218, baseType: !358, size: 64, offset: 320)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !305, line: 96, baseType: !54)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodObject", file: !364, line: 18, baseType: !365)
!364 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/classobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "8eaf9417880dc0f5c842fa4a58d84d47")
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !364, line: 12, size: 384, elements: !366)
!366 = !{!367, !368, !369, !370, !371}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !365, file: !364, line: 13, baseType: !7, size: 128)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "im_func", scope: !365, file: !364, line: 14, baseType: !6, size: 64, offset: 128)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "im_self", scope: !365, file: !364, line: 15, baseType: !6, size: 64, offset: 192)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "im_weakreflist", scope: !365, file: !364, line: 16, baseType: !6, size: 64, offset: 256)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "vectorcall", scope: !365, file: !364, line: 17, baseType: !298, size: 64, offset: 320)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyLongObject", file: !374, line: 10, baseType: !375)
!374 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/longobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "c5b0e7fbad7df1df28a36b8fa53f9db6")
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_longobject", file: !376, line: 85, size: 256, elements: !377)
!376 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/longintrepr.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "7f0868f7ad63ec0bc19e24f85b1936af")
!377 = !{!378, !379}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !375, file: !376, line: 86, baseType: !26, size: 192)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "ob_digit", scope: !375, file: !376, line: 87, baseType: !380, size: 32, offset: 192)
!380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 32, elements: !321)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "digit", file: !376, line: 45, baseType: !382)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !332, line: 26, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !17, line: 42, baseType: !295)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunctionObject", file: !386, line: 30, baseType: !387)
!386 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/cpython/methodobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "bfbc0cc805e2824afcda5a852577ba23")
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !386, line: 23, size: 448, elements: !388)
!388 = !{!389, !390, !393, !394, !395, !396}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !387, file: !386, line: 24, baseType: !7, size: 128)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "m_ml", scope: !387, file: !386, line: 25, baseType: !391, size: 64, offset: 128)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !234, line: 42, baseType: !233)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "m_self", scope: !387, file: !386, line: 26, baseType: !6, size: 64, offset: 192)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "m_module", scope: !387, file: !386, line: 27, baseType: !6, size: 64, offset: 256)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "m_weakreflist", scope: !387, file: !386, line: 28, baseType: !6, size: 64, offset: 320)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "vectorcall", scope: !387, file: !386, line: 29, baseType: !298, size: 64, offset: 384)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCodeObject", file: !399, line: 9, baseType: !400)
!399 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/code.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "e081917cfdb5732f878695837e533cb0")
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyCodeObject", file: !401, line: 18, size: 1408, elements: !402)
!401 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/cpython/code.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "218edcf5df759abd05684d50058089cb")
!402 = !{!403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !427, !431, !432}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !400, file: !401, line: 19, baseType: !7, size: 128)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "co_argcount", scope: !400, file: !401, line: 20, baseType: !54, size: 32, offset: 128)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "co_posonlyargcount", scope: !400, file: !401, line: 21, baseType: !54, size: 32, offset: 160)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "co_kwonlyargcount", scope: !400, file: !401, line: 22, baseType: !54, size: 32, offset: 192)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "co_nlocals", scope: !400, file: !401, line: 23, baseType: !54, size: 32, offset: 224)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "co_stacksize", scope: !400, file: !401, line: 24, baseType: !54, size: 32, offset: 256)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "co_flags", scope: !400, file: !401, line: 25, baseType: !54, size: 32, offset: 288)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "co_firstlineno", scope: !400, file: !401, line: 26, baseType: !54, size: 32, offset: 320)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "co_code", scope: !400, file: !401, line: 27, baseType: !6, size: 64, offset: 384)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "co_consts", scope: !400, file: !401, line: 28, baseType: !6, size: 64, offset: 448)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "co_names", scope: !400, file: !401, line: 29, baseType: !6, size: 64, offset: 512)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "co_varnames", scope: !400, file: !401, line: 30, baseType: !6, size: 64, offset: 576)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "co_freevars", scope: !400, file: !401, line: 31, baseType: !6, size: 64, offset: 640)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "co_cellvars", scope: !400, file: !401, line: 32, baseType: !6, size: 64, offset: 704)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "co_cell2arg", scope: !400, file: !401, line: 38, baseType: !199, size: 64, offset: 768)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "co_filename", scope: !400, file: !401, line: 39, baseType: !6, size: 64, offset: 832)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "co_name", scope: !400, file: !401, line: 40, baseType: !6, size: 64, offset: 896)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "co_lnotab", scope: !400, file: !401, line: 41, baseType: !6, size: 64, offset: 960)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "co_zombieframe", scope: !400, file: !401, line: 43, baseType: !5, size: 64, offset: 1024)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "co_weakreflist", scope: !400, file: !401, line: 44, baseType: !6, size: 64, offset: 1088)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "co_extra", scope: !400, file: !401, line: 48, baseType: !5, size: 64, offset: 1152)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "co_opcache_map", scope: !400, file: !401, line: 60, baseType: !425, size: 64, offset: 1216)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "co_opcache", scope: !400, file: !401, line: 61, baseType: !428, size: 64, offset: 1280)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyOpcache", file: !401, line: 15, baseType: !430)
!430 = !DICompositeType(tag: DW_TAG_structure_type, name: "_PyOpcache", file: !401, line: 15, flags: DIFlagFwdDecl)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "co_opcache_flag", scope: !400, file: !401, line: 62, baseType: !54, size: 32, offset: 1344)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "co_opcache_size", scope: !400, file: !401, line: 63, baseType: !426, size: 8, offset: 1376)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyFunctionObject", file: !435, line: 42, baseType: !436)
!435 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/funcobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "0de716df241a7060ded7ab7fcb73c6ae")
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !435, line: 21, size: 960, elements: !437)
!437 = !{!438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !436, file: !435, line: 22, baseType: !7, size: 128)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "func_code", scope: !436, file: !435, line: 23, baseType: !6, size: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "func_globals", scope: !436, file: !435, line: 24, baseType: !6, size: 64, offset: 192)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "func_defaults", scope: !436, file: !435, line: 25, baseType: !6, size: 64, offset: 256)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "func_kwdefaults", scope: !436, file: !435, line: 26, baseType: !6, size: 64, offset: 320)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "func_closure", scope: !436, file: !435, line: 27, baseType: !6, size: 64, offset: 384)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "func_doc", scope: !436, file: !435, line: 28, baseType: !6, size: 64, offset: 448)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !436, file: !435, line: 29, baseType: !6, size: 64, offset: 512)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "func_dict", scope: !436, file: !435, line: 30, baseType: !6, size: 64, offset: 576)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "func_weakreflist", scope: !436, file: !435, line: 31, baseType: !6, size: 64, offset: 640)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "func_module", scope: !436, file: !435, line: 32, baseType: !6, size: 64, offset: 704)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "func_annotations", scope: !436, file: !435, line: 33, baseType: !6, size: 64, offset: 768)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "func_qualname", scope: !436, file: !435, line: 34, baseType: !6, size: 64, offset: 832)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "vectorcall", scope: !436, file: !435, line: 35, baseType: !298, size: 64, offset: 896)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyCFunctionFastWithKeywords", file: !234, line: 23, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DISubroutineType(types: !455)
!455 = !{!6, !6, !302, !12, !6}
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyCFunctionFast", file: !234, line: 20, baseType: !457)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = !DISubroutineType(types: !459)
!459 = !{!6, !6, !302, !12}
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyFloatObject", file: !462, line: 18, baseType: !463)
!462 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/floatobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "0f3a658931202298bccdf481c13bf65e")
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !462, line: 15, size: 192, elements: !464)
!464 = !{!465, !466}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !463, file: !462, line: 16, baseType: !7, size: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "ob_fval", scope: !463, file: !462, line: 17, baseType: !467, size: 64, offset: 128)
!467 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "sdigit", file: !376, line: 46, baseType: !469)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !470, line: 26, baseType: !471)
!470 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !17, line: 41, baseType: !54)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyListObject", file: !474, line: 26, baseType: !475)
!474 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/cpython/listobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "43a2cf0f4be0c7900fb5a853db58d688")
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !474, line: 9, size: 320, elements: !476)
!476 = !{!477, !478, !479}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !475, file: !474, line: 10, baseType: !26, size: 192)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !475, file: !474, line: 12, baseType: !339, size: 64, offset: 192)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !475, file: !474, line: 25, baseType: !12, size: 64, offset: 256)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__Pyx_CodeObjectCacheEntry", file: !3, line: 1320, baseType: !482)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 1317, size: 128, elements: !483)
!483 = !{!484, !485}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "code_object", scope: !482, file: !3, line: 1318, baseType: !397, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "code_line", scope: !482, file: !3, line: 1319, baseType: !54, size: 32, offset: 64)
!486 = !{!0, !487, !492, !521, !524, !530, !535, !540, !545, !547, !549, !551, !556, !561, !563, !572, !577, !579, !584, !587, !589, !594, !599, !604, !606, !611, !616, !621, !623, !628, !630, !632, !634, !636, !638, !640, !642, !658, !660, !665, !667, !672, !674, !679, !681, !684, !686, !689, !691, !693, !695, !698, !700, !703, !705, !707, !709, !711, !714, !716, !718, !720, !722, !727, !729, !734, !737, !739, !742, !744, !749, !751, !754, !756, !758, !760, !762, !764, !766, !771, !773, !775, !777, !779, !781, !786, !788, !790, !792, !797, !799, !801, !803, !805, !807, !809, !811, !813, !815, !817, !819, !821, !823, !825, !827, !832, !834, !836, !838, !840, !842, !847, !850, !852, !855, !858, !861, !890, !892, !894, !896, !901, !903, !905, !910, !915, !918, !920, !925, !927, !932, !937, !939, !942, !945, !950, !952, !957, !962, !964, !969, !971, !997, !999, !1004, !1006, !1008, !1010, !1015, !1018, !1021, !1026, !1031, !1033, !1035, !1040, !1042, !1044, !1046, !1071, !1076, !1081, !1083, !1085, !1090, !1095, !1097, !1099, !1101, !1103, !1105, !1209, !1211, !1218, !1220, !1225}
!487 = !DIGlobalVariableExpression(var: !488, expr: !DIExpression())
!488 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2855, type: !489, isLocal: true, isDefinition: true)
!489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 72, elements: !490)
!490 = !{!491}
!491 = !DISubrange(count: 9)
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "__pyx_moduledef", scope: !2, file: !3, line: 2853, type: !494, isLocal: true, isDefinition: true)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !495, line: 75, size: 832, elements: !496)
!495 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/moduleobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "78b4265f6930100d3efb78b20d6243db")
!496 = !{!497, !508, !509, !510, !511, !512, !518, !519, !520}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !494, file: !495, line: 76, baseType: !498, size: 320)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !495, line: 49, baseType: !499)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !495, line: 44, size: 320, elements: !500)
!500 = !{!501, !502, !506, !507}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !499, file: !495, line: 45, baseType: !7, size: 128)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !499, file: !495, line: 46, baseType: !503, size: 64, offset: 128)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DISubroutineType(types: !505)
!505 = !{!6}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !499, file: !495, line: 47, baseType: !12, size: 64, offset: 192)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !499, file: !495, line: 48, baseType: !6, size: 64, offset: 256)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !494, file: !495, line: 77, baseType: !32, size: 64, offset: 320)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !494, file: !495, line: 78, baseType: !32, size: 64, offset: 384)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !494, file: !495, line: 79, baseType: !12, size: 64, offset: 448)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !494, file: !495, line: 80, baseType: !391, size: 64, offset: 512)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "m_slots", scope: !494, file: !495, line: 81, baseType: !513, size: 64, offset: 576)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Slot", file: !495, line: 61, size: 128, elements: !515)
!515 = !{!516, !517}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !514, file: !495, line: 62, baseType: !54, size: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !514, file: !495, line: 63, baseType: !5, size: 64, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !494, file: !495, line: 82, baseType: !212, size: 64, offset: 640)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !494, file: !495, line: 83, baseType: !92, size: 64, offset: 704)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !494, file: !495, line: 84, baseType: !283, size: 64, offset: 768)
!521 = !DIGlobalVariableExpression(var: !522, expr: !DIExpression())
!522 = distinct !DIGlobalVariable(name: "__pyx_methods", scope: !2, file: !3, line: 2838, type: !523, isLocal: true, isDefinition: true)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !392, size: 256, elements: !321)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "__pyx_moduledef_slots", scope: !2, file: !3, line: 2846, type: !526, isLocal: true, isDefinition: true)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !527, size: 384, elements: !528)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Slot", file: !495, line: 64, baseType: !514)
!528 = !{!529}
!529 = !DISubrange(count: 3)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3130, type: !532, isLocal: true, isDefinition: true)
!532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 40, elements: !533)
!533 = !{!534}
!534 = !DISubrange(count: 5)
!535 = !DIGlobalVariableExpression(var: !536, expr: !DIExpression())
!536 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3137, type: !537, isLocal: true, isDefinition: true)
!537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 56, elements: !538)
!538 = !{!539}
!539 = !DISubrange(count: 7)
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3137, type: !542, isLocal: true, isDefinition: true)
!542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 88, elements: !543)
!543 = !{!544}
!544 = !DISubrange(count: 11)
!545 = !DIGlobalVariableExpression(var: !546, expr: !DIExpression())
!546 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3138, type: !537, isLocal: true, isDefinition: true)
!547 = !DIGlobalVariableExpression(var: !548, expr: !DIExpression())
!548 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3138, type: !489, isLocal: true, isDefinition: true)
!549 = !DIGlobalVariableExpression(var: !550, expr: !DIExpression())
!550 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3139, type: !537, isLocal: true, isDefinition: true)
!551 = !DIGlobalVariableExpression(var: !552, expr: !DIExpression())
!552 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3139, type: !553, isLocal: true, isDefinition: true)
!553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 96, elements: !554)
!554 = !{!555}
!555 = !DISubrange(count: 12)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3140, type: !558, isLocal: true, isDefinition: true)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 216, elements: !559)
!559 = !{!560}
!560 = !DISubrange(count: 27)
!561 = !DIGlobalVariableExpression(var: !562, expr: !DIExpression())
!562 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3140, type: !489, isLocal: true, isDefinition: true)
!563 = !DIGlobalVariableExpression(var: !564, expr: !DIExpression())
!564 = distinct !DIGlobalVariable(name: "main_interpreter_id", scope: !565, file: !3, line: 3088, type: !570, isLocal: true, isDefinition: true)
!565 = distinct !DISubprogram(name: "__Pyx_check_single_interpreter", scope: !3, file: !3, line: 3086, type: !566, scopeLine: 3086, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !568)
!566 = !DISubroutineType(types: !567)
!567 = !{!54}
!568 = !{!569}
!569 = !DILocalVariable(name: "current_id", scope: !565, file: !3, line: 3089, type: !570)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !470, line: 27, baseType: !571)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !17, line: 44, baseType: !18)
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3104, type: !574, isLocal: true, isDefinition: true)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 760, elements: !575)
!575 = !{!576}
!576 = !DISubrange(count: 95)
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "__pyx_m", scope: !2, file: !3, line: 967, type: !6, isLocal: true, isDefinition: true)
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3160, type: !581, isLocal: true, isDefinition: true)
!581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 648, elements: !582)
!582 = !{!583}
!583 = !DISubrange(count: 81)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3181, type: !586, isLocal: true, isDefinition: true)
!586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 8, elements: !321)
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3220, type: !489, isLocal: true, isDefinition: true)
!589 = !DIGlobalVariableExpression(var: !590, expr: !DIExpression())
!590 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3222, type: !591, isLocal: true, isDefinition: true)
!591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 120, elements: !592)
!592 = !{!593}
!593 = !DISubrange(count: 15)
!594 = !DIGlobalVariableExpression(var: !595, expr: !DIExpression())
!595 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3224, type: !596, isLocal: true, isDefinition: true)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 104, elements: !597)
!597 = !{!598}
!598 = !DISubrange(count: 13)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3236, type: !601, isLocal: true, isDefinition: true)
!601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 176, elements: !602)
!602 = !{!603}
!603 = !DISubrange(count: 22)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3285, type: !558, isLocal: true, isDefinition: true)
!606 = !DIGlobalVariableExpression(var: !607, expr: !DIExpression())
!607 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5272, type: !608, isLocal: true, isDefinition: true)
!608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 48, elements: !609)
!609 = !{!610}
!610 = !DISubrange(count: 6)
!611 = !DIGlobalVariableExpression(var: !612, expr: !DIExpression())
!612 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5297, type: !613, isLocal: true, isDefinition: true)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 608, elements: !614)
!614 = !{!615}
!615 = !DISubrange(count: 76)
!616 = !DIGlobalVariableExpression(var: !617, expr: !DIExpression())
!617 = distinct !DIGlobalVariable(scope: null, file: !3, line: 981, type: !618, isLocal: true, isDefinition: true)
!618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 208, elements: !619)
!619 = !{!620}
!620 = !DISubrange(count: 26)
!621 = !DIGlobalVariableExpression(var: !622, expr: !DIExpression())
!622 = distinct !DIGlobalVariable(scope: null, file: !3, line: 982, type: !596, isLocal: true, isDefinition: true)
!623 = !DIGlobalVariableExpression(var: !624, expr: !DIExpression())
!624 = distinct !DIGlobalVariable(name: "__pyx_f", scope: !2, file: !3, line: 980, type: !625, isLocal: true, isDefinition: true)
!625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 128, elements: !626)
!626 = !{!627}
!627 = !DISubrange(count: 2)
!628 = !DIGlobalVariableExpression(var: !629, expr: !DIExpression())
!629 = distinct !DIGlobalVariable(name: "__pyx_pyframe_localsplus_offset", scope: !2, file: !3, line: 1237, type: !304, isLocal: true, isDefinition: true)
!630 = !DIGlobalVariableExpression(var: !631, expr: !DIExpression())
!631 = distinct !DIGlobalVariable(name: "__pyx_empty_tuple", scope: !2, file: !3, line: 971, type: !6, isLocal: true, isDefinition: true)
!632 = !DIGlobalVariableExpression(var: !633, expr: !DIExpression())
!633 = distinct !DIGlobalVariable(name: "__pyx_empty_bytes", scope: !2, file: !3, line: 972, type: !6, isLocal: true, isDefinition: true)
!634 = !DIGlobalVariableExpression(var: !635, expr: !DIExpression())
!635 = distinct !DIGlobalVariable(name: "__pyx_empty_unicode", scope: !2, file: !3, line: 973, type: !6, isLocal: true, isDefinition: true)
!636 = !DIGlobalVariableExpression(var: !637, expr: !DIExpression())
!637 = distinct !DIGlobalVariable(name: "__pyx_d", scope: !2, file: !3, line: 968, type: !6, isLocal: true, isDefinition: true)
!638 = !DIGlobalVariableExpression(var: !639, expr: !DIExpression())
!639 = distinct !DIGlobalVariable(name: "__pyx_b", scope: !2, file: !3, line: 969, type: !6, isLocal: true, isDefinition: true)
!640 = !DIGlobalVariableExpression(var: !641, expr: !DIExpression())
!641 = distinct !DIGlobalVariable(name: "__pyx_cython_runtime", scope: !2, file: !3, line: 970, type: !6, isLocal: true, isDefinition: true)
!642 = !DIGlobalVariableExpression(var: !643, expr: !DIExpression())
!643 = distinct !DIGlobalVariable(name: "__pyx_string_tab", scope: !2, file: !3, line: 2883, type: !644, isLocal: true, isDefinition: true)
!644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !645, size: 10240, elements: !656)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "__Pyx_StringTabEntry", file: !3, line: 781, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 780, size: 320, elements: !647)
!647 = !{!648, !649, !650, !652, !653, !654, !655}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !646, file: !3, line: 780, baseType: !339, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !646, file: !3, line: 780, baseType: !32, size: 64, offset: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !646, file: !3, line: 780, baseType: !651, size: 64, offset: 128)
!651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !646, file: !3, line: 780, baseType: !32, size: 64, offset: 192)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "is_unicode", scope: !646, file: !3, line: 781, baseType: !33, size: 8, offset: 256)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "is_str", scope: !646, file: !3, line: 781, baseType: !33, size: 8, offset: 264)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "intern", scope: !646, file: !3, line: 781, baseType: !33, size: 8, offset: 272)
!656 = !{!657}
!657 = !DISubrange(count: 32)
!658 = !DIGlobalVariableExpression(var: !659, expr: !DIExpression())
!659 = distinct !DIGlobalVariable(name: "__pyx_kp_s_Incompatible_checksums_0x_x_vs_0", scope: !2, file: !3, line: 1409, type: !6, isLocal: true, isDefinition: true)
!660 = !DIGlobalVariableExpression(var: !661, expr: !DIExpression())
!661 = distinct !DIGlobalVariable(name: "__pyx_k_Incompatible_checksums_0x_x_vs_0", scope: !2, file: !3, line: 1408, type: !662, isLocal: true, isDefinition: true)
!662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 704, elements: !663)
!663 = !{!664}
!664 = !DISubrange(count: 88)
!665 = !DIGlobalVariableExpression(var: !666, expr: !DIExpression())
!666 = distinct !DIGlobalVariable(name: "__pyx_n_s_NDFrameIndexerBase", scope: !2, file: !3, line: 1410, type: !6, isLocal: true, isDefinition: true)
!667 = !DIGlobalVariableExpression(var: !668, expr: !DIExpression())
!668 = distinct !DIGlobalVariable(name: "__pyx_k_NDFrameIndexerBase", scope: !2, file: !3, line: 1403, type: !669, isLocal: true, isDefinition: true)
!669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 152, elements: !670)
!670 = !{!671}
!671 = !DISubrange(count: 19)
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "__pyx_kp_u_NDFrameIndexer_does_not_support", scope: !2, file: !3, line: 1411, type: !6, isLocal: true, isDefinition: true)
!674 = !DIGlobalVariableExpression(var: !675, expr: !DIExpression())
!675 = distinct !DIGlobalVariable(name: "__pyx_k_NDFrameIndexer_does_not_support", scope: !2, file: !3, line: 1407, type: !676, isLocal: true, isDefinition: true)
!676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 496, elements: !677)
!677 = !{!678}
!678 = !DISubrange(count: 62)
!679 = !DIGlobalVariableExpression(var: !680, expr: !DIExpression())
!680 = distinct !DIGlobalVariable(name: "__pyx_n_s_PickleError", scope: !2, file: !3, line: 1412, type: !6, isLocal: true, isDefinition: true)
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "__pyx_k_PickleError", scope: !2, file: !3, line: 1397, type: !683, isLocal: true, isDefinition: true)
!683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 96, elements: !554)
!684 = !DIGlobalVariableExpression(var: !685, expr: !DIExpression())
!685 = distinct !DIGlobalVariable(name: "__pyx_n_s_ValueError", scope: !2, file: !3, line: 1413, type: !6, isLocal: true, isDefinition: true)
!686 = !DIGlobalVariableExpression(var: !687, expr: !DIExpression())
!687 = distinct !DIGlobalVariable(name: "__pyx_k_ValueError", scope: !2, file: !3, line: 1395, type: !688, isLocal: true, isDefinition: true)
!688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 88, elements: !543)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__pyx_n_s_cline_in_traceback", scope: !2, file: !3, line: 1414, type: !6, isLocal: true, isDefinition: true)
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "__pyx_k_cline_in_traceback", scope: !2, file: !3, line: 1404, type: !669, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression())
!694 = distinct !DIGlobalVariable(name: "__pyx_n_s_dict", scope: !2, file: !3, line: 1415, type: !6, isLocal: true, isDefinition: true)
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "__pyx_k_dict", scope: !2, file: !3, line: 1380, type: !697, isLocal: true, isDefinition: true)
!697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 72, elements: !490)
!698 = !DIGlobalVariableExpression(var: !699, expr: !DIExpression())
!699 = distinct !DIGlobalVariable(name: "__pyx_n_s_getstate", scope: !2, file: !3, line: 1416, type: !6, isLocal: true, isDefinition: true)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "__pyx_k_getstate", scope: !2, file: !3, line: 1390, type: !702, isLocal: true, isDefinition: true)
!702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 104, elements: !597)
!703 = !DIGlobalVariableExpression(var: !704, expr: !DIExpression())
!704 = distinct !DIGlobalVariable(name: "__pyx_n_s_import", scope: !2, file: !3, line: 1417, type: !6, isLocal: true, isDefinition: true)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "__pyx_k_import", scope: !2, file: !3, line: 1385, type: !688, isLocal: true, isDefinition: true)
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "__pyx_k_main", scope: !2, file: !3, line: 1381, type: !697, isLocal: true, isDefinition: true)
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "__pyx_n_s_name", scope: !2, file: !3, line: 1419, type: !6, isLocal: true, isDefinition: true)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "__pyx_k_name", scope: !2, file: !3, line: 1382, type: !713, isLocal: true, isDefinition: true)
!713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 40, elements: !533)
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "__pyx_k_name_2", scope: !2, file: !3, line: 1386, type: !697, isLocal: true, isDefinition: true)
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "__pyx_n_s_ndim", scope: !2, file: !3, line: 1421, type: !6, isLocal: true, isDefinition: true)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "__pyx_k_ndim", scope: !2, file: !3, line: 1383, type: !713, isLocal: true, isDefinition: true)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "__pyx_n_s_new", scope: !2, file: !3, line: 1422, type: !6, isLocal: true, isDefinition: true)
!722 = !DIGlobalVariableExpression(var: !723, expr: !DIExpression())
!723 = distinct !DIGlobalVariable(name: "__pyx_k_new", scope: !2, file: !3, line: 1378, type: !724, isLocal: true, isDefinition: true)
!724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 64, elements: !725)
!725 = !{!726}
!726 = !DISubrange(count: 8)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "__pyx_n_s_obj", scope: !2, file: !3, line: 1423, type: !6, isLocal: true, isDefinition: true)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "__pyx_k_obj", scope: !2, file: !3, line: 1379, type: !731, isLocal: true, isDefinition: true)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 32, elements: !732)
!732 = !{!733}
!733 = !DISubrange(count: 4)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__pyx_k_pandas__libs_indexing", scope: !2, file: !3, line: 1405, type: !736, isLocal: true, isDefinition: true)
!736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 176, elements: !602)
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "__pyx_n_s_pickle", scope: !2, file: !3, line: 1425, type: !6, isLocal: true, isDefinition: true)
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "__pyx_k_pickle", scope: !2, file: !3, line: 1387, type: !741, isLocal: true, isDefinition: true)
!741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 56, elements: !538)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "__pyx_n_s_pyx_PickleError", scope: !2, file: !3, line: 1426, type: !6, isLocal: true, isDefinition: true)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_PickleError", scope: !2, file: !3, line: 1401, type: !746, isLocal: true, isDefinition: true)
!746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 144, elements: !747)
!747 = !{!748}
!748 = !DISubrange(count: 18)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "__pyx_n_s_pyx_checksum", scope: !2, file: !3, line: 1427, type: !6, isLocal: true, isDefinition: true)
!751 = !DIGlobalVariableExpression(var: !752, expr: !DIExpression())
!752 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_checksum", scope: !2, file: !3, line: 1398, type: !753, isLocal: true, isDefinition: true)
!753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 120, elements: !592)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__pyx_n_s_pyx_result", scope: !2, file: !3, line: 1428, type: !6, isLocal: true, isDefinition: true)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_result", scope: !2, file: !3, line: 1396, type: !702, isLocal: true, isDefinition: true)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__pyx_n_s_pyx_state", scope: !2, file: !3, line: 1429, type: !6, isLocal: true, isDefinition: true)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_state", scope: !2, file: !3, line: 1393, type: !683, isLocal: true, isDefinition: true)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__pyx_n_s_pyx_type", scope: !2, file: !3, line: 1430, type: !6, isLocal: true, isDefinition: true)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_type", scope: !2, file: !3, line: 1391, type: !688, isLocal: true, isDefinition: true)
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__pyx_k_pyx_unpickle_NDFrameIndexerBas", scope: !2, file: !3, line: 1406, type: !768, isLocal: true, isDefinition: true)
!768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 272, elements: !769)
!769 = !{!770}
!770 = !DISubrange(count: 34)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "__pyx_n_s_reduce", scope: !2, file: !3, line: 1432, type: !6, isLocal: true, isDefinition: true)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "__pyx_k_reduce", scope: !2, file: !3, line: 1388, type: !688, isLocal: true, isDefinition: true)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "__pyx_n_s_reduce_cython", scope: !2, file: !3, line: 1433, type: !6, isLocal: true, isDefinition: true)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__pyx_k_reduce_cython", scope: !2, file: !3, line: 1400, type: !746, isLocal: true, isDefinition: true)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "__pyx_n_s_reduce_ex", scope: !2, file: !3, line: 1434, type: !6, isLocal: true, isDefinition: true)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__pyx_k_reduce_ex", scope: !2, file: !3, line: 1394, type: !783, isLocal: true, isDefinition: true)
!783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 112, elements: !784)
!784 = !{!785}
!785 = !DISubrange(count: 14)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__pyx_n_s_setstate", scope: !2, file: !3, line: 1435, type: !6, isLocal: true, isDefinition: true)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__pyx_k_setstate", scope: !2, file: !3, line: 1392, type: !702, isLocal: true, isDefinition: true)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__pyx_n_s_setstate_cython", scope: !2, file: !3, line: 1436, type: !6, isLocal: true, isDefinition: true)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__pyx_k_setstate_cython", scope: !2, file: !3, line: 1402, type: !794, isLocal: true, isDefinition: true)
!794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 160, elements: !795)
!795 = !{!796}
!796 = !DISubrange(count: 20)
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "__pyx_kp_s_stringsource", scope: !2, file: !3, line: 1437, type: !6, isLocal: true, isDefinition: true)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "__pyx_k_stringsource", scope: !2, file: !3, line: 1399, type: !702, isLocal: true, isDefinition: true)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "__pyx_k_test", scope: !2, file: !3, line: 1384, type: !697, isLocal: true, isDefinition: true)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "__pyx_n_s_update", scope: !2, file: !3, line: 1439, type: !6, isLocal: true, isDefinition: true)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "__pyx_k_update", scope: !2, file: !3, line: 1389, type: !741, isLocal: true, isDefinition: true)
!807 = !DIGlobalVariableExpression(var: !808, expr: !DIExpression())
!808 = distinct !DIGlobalVariable(name: "__pyx_filename", scope: !2, file: !3, line: 977, type: !32, isLocal: true, isDefinition: true)
!809 = !DIGlobalVariableExpression(var: !810, expr: !DIExpression())
!810 = distinct !DIGlobalVariable(name: "__pyx_lineno", scope: !2, file: !3, line: 974, type: !54, isLocal: true, isDefinition: true)
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "__pyx_clineno", scope: !2, file: !3, line: 975, type: !54, isLocal: true, isDefinition: true)
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "__pyx_int_2", scope: !2, file: !3, line: 1452, type: !6, isLocal: true, isDefinition: true)
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "__pyx_int_68575658", scope: !2, file: !3, line: 1453, type: !6, isLocal: true, isDefinition: true)
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "__pyx_int_87510373", scope: !2, file: !3, line: 1454, type: !6, isLocal: true, isDefinition: true)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "__pyx_int_202888320", scope: !2, file: !3, line: 1455, type: !6, isLocal: true, isDefinition: true)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "__pyx_int_neg_1", scope: !2, file: !3, line: 1456, type: !6, isLocal: true, isDefinition: true)
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(name: "__pyx_n_s_name_2", scope: !2, file: !3, line: 1420, type: !6, isLocal: true, isDefinition: true)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "__pyx_n_s_main", scope: !2, file: !3, line: 1418, type: !6, isLocal: true, isDefinition: true)
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3340, type: !829, isLocal: true, isDefinition: true)
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 200, elements: !830)
!830 = !{!831}
!831 = !DISubrange(count: 25)
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "__pyx_builtin_ValueError", scope: !2, file: !3, line: 1377, type: !6, isLocal: true, isDefinition: true)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "__pyx_tuple_", scope: !2, file: !3, line: 1457, type: !6, isLocal: true, isDefinition: true)
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "__pyx_tuple__2", scope: !2, file: !3, line: 1458, type: !6, isLocal: true, isDefinition: true)
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "__pyx_tuple__3", scope: !2, file: !3, line: 1459, type: !6, isLocal: true, isDefinition: true)
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "__pyx_codeobj__4", scope: !2, file: !3, line: 1460, type: !6, isLocal: true, isDefinition: true)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2768, type: !844, isLocal: true, isDefinition: true)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 328, elements: !845)
!845 = !{!846}
!846 = !DISubrange(count: 41)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2797, type: !849, isLocal: true, isDefinition: true)
!849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 704, elements: !663)
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "__pyx_type_6pandas_5_libs_8indexing_NDFrameIndexerBase", scope: !2, file: !3, line: 2766, type: !21, isLocal: true, isDefinition: true)
!852 = !DIGlobalVariableExpression(var: !853, expr: !DIExpression())
!853 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2754, type: !854, isLocal: true, isDefinition: true)
!854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 144, elements: !747)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2755, type: !857, isLocal: true, isDefinition: true)
!857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 160, elements: !795)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "__pyx_methods_6pandas_5_libs_8indexing_NDFrameIndexerBase", scope: !2, file: !3, line: 2753, type: !860, isLocal: true, isDefinition: true)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !392, size: 768, elements: !528)
!861 = !DIGlobalVariableExpression(var: !862, expr: !DIExpression())
!862 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !863, file: !3, line: 2103, type: !331, isLocal: true, isDefinition: true)
!863 = distinct !DISubprogram(name: "__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_2__reduce_cython__", scope: !3, file: !3, line: 1962, type: !864, scopeLine: 1962, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !866)
!864 = !DISubroutineType(types: !865)
!865 = !{!6, !306}
!866 = !{!867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !885, !887, !888, !889}
!867 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !863, file: !3, line: 1962, type: !306)
!868 = !DILocalVariable(name: "__pyx_v_state", scope: !863, file: !3, line: 1963, type: !6)
!869 = !DILocalVariable(name: "__pyx_v__dict", scope: !863, file: !3, line: 1964, type: !6)
!870 = !DILocalVariable(name: "__pyx_v_use_setstate", scope: !863, file: !3, line: 1965, type: !54)
!871 = !DILocalVariable(name: "__pyx_r", scope: !863, file: !3, line: 1966, type: !6)
!872 = !DILocalVariable(name: "__pyx_t_1", scope: !863, file: !3, line: 1968, type: !6)
!873 = !DILocalVariable(name: "__pyx_t_2", scope: !863, file: !3, line: 1969, type: !6)
!874 = !DILocalVariable(name: "__pyx_t_3", scope: !863, file: !3, line: 1970, type: !54)
!875 = !DILocalVariable(name: "__pyx_t_4", scope: !863, file: !3, line: 1971, type: !54)
!876 = !DILocalVariable(name: "__pyx_t_5", scope: !863, file: !3, line: 1972, type: !54)
!877 = !DILocalVariable(name: "__pyx_t_6", scope: !863, file: !3, line: 1973, type: !6)
!878 = !DILocalVariable(name: "__pyx_lineno", scope: !863, file: !3, line: 1974, type: !54)
!879 = !DILocalVariable(name: "__pyx_filename", scope: !863, file: !3, line: 1975, type: !32)
!880 = !DILocalVariable(name: "__pyx_clineno", scope: !863, file: !3, line: 1976, type: !54)
!881 = !DILocalVariable(name: "tmp", scope: !882, file: !3, line: 2040, type: !6)
!882 = distinct !DILexicalBlock(scope: !883, file: !3, line: 2040, column: 5)
!883 = distinct !DILexicalBlock(scope: !884, file: !3, line: 2023, column: 18)
!884 = distinct !DILexicalBlock(scope: !863, file: !3, line: 2023, column: 7)
!885 = !DILabel(scope: !886, name: "__pyx_L4_bool_binop_done", file: !3, line: 2080)
!886 = distinct !DILexicalBlock(scope: !863, file: !3, line: 2069, column: 12)
!887 = !DILabel(scope: !863, name: "__pyx_L3", file: !3, line: 2083)
!888 = !DILabel(scope: !863, name: "__pyx_L1_error", file: !3, line: 2182)
!889 = !DILabel(scope: !863, name: "__pyx_L0", file: !3, line: 2188)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !863, file: !3, line: 2103, type: !6, isLocal: true, isDefinition: true)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !863, file: !3, line: 2149, type: !331, isLocal: true, isDefinition: true)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !863, file: !3, line: 2149, type: !6, isLocal: true, isDefinition: true)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2186, type: !898, isLocal: true, isDefinition: true)
!898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 472, elements: !899)
!899 = !{!900}
!900 = !DISubrange(count: 59)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2230, type: !558, isLocal: true, isDefinition: true)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2230, type: !608, isLocal: true, isDefinition: true)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2247, type: !907, isLocal: true, isDefinition: true)
!907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 488, elements: !908)
!908 = !{!909}
!909 = !DISubrange(count: 61)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2556, type: !912, isLocal: true, isDefinition: true)
!912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 312, elements: !913)
!913 = !{!914}
!914 = !DISubrange(count: 39)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2570, type: !917, isLocal: true, isDefinition: true)
!917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 64, elements: !725)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2595, type: !912, isLocal: true, isDefinition: true)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2669, type: !922, isLocal: true, isDefinition: true)
!922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 536, elements: !923)
!923 = !{!924}
!924 = !DISubrange(count: 67)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4297, type: !844, isLocal: true, isDefinition: true)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4043, type: !929, isLocal: true, isDefinition: true)
!929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 248, elements: !930)
!930 = !{!931}
!931 = !DISubrange(count: 31)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3592, type: !934, isLocal: true, isDefinition: true)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 344, elements: !935)
!935 = !{!936}
!936 = !DISubrange(count: 43)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2760, type: !532, isLocal: true, isDefinition: true)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2762, type: !941, isLocal: true, isDefinition: true)
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 32, elements: !732)
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "__pyx_getsets_6pandas_5_libs_8indexing_NDFrameIndexerBase", scope: !2, file: !3, line: 2759, type: !944, isLocal: true, isDefinition: true)
!944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 1280, elements: !732)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1731, type: !947, isLocal: true, isDefinition: true)
!947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 432, elements: !948)
!948 = !{!949}
!949 = !DISubrange(count: 54)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3681, type: !844, isLocal: true, isDefinition: true)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3689, type: !954, isLocal: true, isDefinition: true)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 392, elements: !955)
!955 = !{!956}
!956 = !DISubrange(count: 49)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3727, type: !959, isLocal: true, isDefinition: true)
!959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 552, elements: !960)
!960 = !{!961}
!961 = !DISubrange(count: 69)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3735, type: !898, isLocal: true, isDefinition: true)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3751, type: !966, isLocal: true, isDefinition: true)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 384, elements: !967)
!967 = !{!968}
!968 = !DISubrange(count: 48)
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1812, type: !947, isLocal: true, isDefinition: true)
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "__pyx_pyargnames", scope: !973, file: !3, line: 1483, type: !996, isLocal: true, isDefinition: true)
!973 = distinct !DISubprogram(name: "__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_1__init__", scope: !3, file: !3, line: 1473, type: !163, scopeLine: 1473, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !974)
!974 = !{!975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !987, !990, !991, !992, !993, !994, !995}
!975 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !973, file: !3, line: 1473, type: !6)
!976 = !DILocalVariable(name: "__pyx_args", arg: 2, scope: !973, file: !3, line: 1473, type: !6)
!977 = !DILocalVariable(name: "__pyx_kwds", arg: 3, scope: !973, file: !3, line: 1473, type: !6)
!978 = !DILocalVariable(name: "__pyx_v_name", scope: !973, file: !3, line: 1474, type: !6)
!979 = !DILocalVariable(name: "__pyx_v_obj", scope: !973, file: !3, line: 1475, type: !6)
!980 = !DILocalVariable(name: "__pyx_lineno", scope: !973, file: !3, line: 1476, type: !54)
!981 = !DILocalVariable(name: "__pyx_filename", scope: !973, file: !3, line: 1477, type: !32)
!982 = !DILocalVariable(name: "__pyx_clineno", scope: !973, file: !3, line: 1478, type: !54)
!983 = !DILocalVariable(name: "__pyx_r", scope: !973, file: !3, line: 1479, type: !54)
!984 = !DILocalVariable(name: "values", scope: !985, file: !3, line: 1484, type: !986)
!985 = distinct !DILexicalBlock(scope: !973, file: !3, line: 1482, column: 3)
!986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 128, elements: !626)
!987 = !DILocalVariable(name: "kw_args", scope: !988, file: !3, line: 1486, type: !12)
!988 = distinct !DILexicalBlock(scope: !989, file: !3, line: 1485, column: 31)
!989 = distinct !DILexicalBlock(scope: !985, file: !3, line: 1485, column: 9)
!990 = !DILocalVariable(name: "pos_args", scope: !988, file: !3, line: 1487, type: !651)
!991 = !DILabel(scope: !973, name: "__pyx_L5_argtuple_error", file: !3, line: 1521)
!992 = !DILabel(scope: !973, name: "__pyx_L3_error", file: !3, line: 1523)
!993 = !DILabel(scope: !973, name: "__pyx_L4_argument_unpacking_done", file: !3, line: 1527)
!994 = !DILabel(scope: !973, name: "__pyx_L1_error", file: !3, line: 1533)
!995 = !DILabel(scope: !973, name: "__pyx_L0", file: !3, line: 1535)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 192, elements: !528)
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1505, type: !489, isLocal: true, isDefinition: true)
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(scope: null, file: !3, line: 1524, type: !1001, isLocal: true, isDefinition: true)
!1001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 400, elements: !1002)
!1002 = !{!1003}
!1003 = !DISubrange(count: 50)
!1004 = !DIGlobalVariableExpression(var: !1005, expr: !DIExpression())
!1005 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3360, type: !489, isLocal: true, isDefinition: true)
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3363, type: !917, isLocal: true, isDefinition: true)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3366, type: !917, isLocal: true, isDefinition: true)
!1010 = !DIGlobalVariableExpression(var: !1011, expr: !DIExpression())
!1011 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3369, type: !1012, isLocal: true, isDefinition: true)
!1012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 480, elements: !1013)
!1013 = !{!1014}
!1014 = !DISubrange(count: 60)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3371, type: !1017, isLocal: true, isDefinition: true)
!1017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 16, elements: !626)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3475, type: !1020, isLocal: true, isDefinition: true)
!1020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 272, elements: !769)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3483, type: !1023, isLocal: true, isDefinition: true)
!1023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 360, elements: !1024)
!1024 = !{!1025}
!1025 = !DISubrange(count: 45)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3381, type: !1028, isLocal: true, isDefinition: true)
!1028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 408, elements: !1029)
!1029 = !{!1030}
!1030 = !DISubrange(count: 51)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3494, type: !857, isLocal: true, isDefinition: true)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3506, type: !922, isLocal: true, isDefinition: true)
!1035 = !DIGlobalVariableExpression(var: !1036, expr: !DIExpression())
!1036 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4469, type: !1037, isLocal: true, isDefinition: true)
!1037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 296, elements: !1038)
!1038 = !{!1039}
!1039 = !DISubrange(count: 37)
!1040 = !DIGlobalVariableExpression(var: !1041, expr: !DIExpression())
!1041 = distinct !DIGlobalVariable(name: "__pyx_ptype_6pandas_5_libs_8indexing_NDFrameIndexerBase", scope: !2, file: !3, line: 1370, type: !20, isLocal: true, isDefinition: true)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2263, type: !1020, isLocal: true, isDefinition: true)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "__pyx_mdef_6pandas_5_libs_8indexing_1__pyx_unpickle_NDFrameIndexerBase", scope: !2, file: !3, line: 2263, type: !392, isLocal: true, isDefinition: true)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "__pyx_pyargnames", scope: !1048, file: !3, line: 2275, type: !1070, isLocal: true, isDefinition: true)
!1048 = distinct !DISubprogram(name: "__pyx_pw_6pandas_5_libs_8indexing_1__pyx_unpickle_NDFrameIndexerBase", scope: !3, file: !3, line: 2264, type: !86, scopeLine: 2264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1049)
!1049 = !{!1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1063, !1066, !1067, !1068, !1069}
!1050 = !DILocalVariable(name: "__pyx_self", arg: 1, scope: !1048, file: !3, line: 2264, type: !6)
!1051 = !DILocalVariable(name: "__pyx_args", arg: 2, scope: !1048, file: !3, line: 2264, type: !6)
!1052 = !DILocalVariable(name: "__pyx_kwds", arg: 3, scope: !1048, file: !3, line: 2264, type: !6)
!1053 = !DILocalVariable(name: "__pyx_v___pyx_type", scope: !1048, file: !3, line: 2265, type: !6)
!1054 = !DILocalVariable(name: "__pyx_v___pyx_checksum", scope: !1048, file: !3, line: 2266, type: !18)
!1055 = !DILocalVariable(name: "__pyx_v___pyx_state", scope: !1048, file: !3, line: 2267, type: !6)
!1056 = !DILocalVariable(name: "__pyx_lineno", scope: !1048, file: !3, line: 2268, type: !54)
!1057 = !DILocalVariable(name: "__pyx_filename", scope: !1048, file: !3, line: 2269, type: !32)
!1058 = !DILocalVariable(name: "__pyx_clineno", scope: !1048, file: !3, line: 2270, type: !54)
!1059 = !DILocalVariable(name: "__pyx_r", scope: !1048, file: !3, line: 2271, type: !6)
!1060 = !DILocalVariable(name: "values", scope: !1061, file: !3, line: 2276, type: !1062)
!1061 = distinct !DILexicalBlock(scope: !1048, file: !3, line: 2274, column: 3)
!1062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 192, elements: !528)
!1063 = !DILocalVariable(name: "kw_args", scope: !1064, file: !3, line: 2278, type: !12)
!1064 = distinct !DILexicalBlock(scope: !1065, file: !3, line: 2277, column: 31)
!1065 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 2277, column: 9)
!1066 = !DILocalVariable(name: "pos_args", scope: !1064, file: !3, line: 2279, type: !651)
!1067 = !DILabel(scope: !1048, name: "__pyx_L5_argtuple_error", file: !3, line: 2323)
!1068 = !DILabel(scope: !1048, name: "__pyx_L3_error", file: !3, line: 2325)
!1069 = !DILabel(scope: !1048, name: "__pyx_L4_argument_unpacking_done", file: !3, line: 2329)
!1070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 256, elements: !732)
!1071 = !DIGlobalVariableExpression(var: !1072, expr: !DIExpression())
!1072 = distinct !DIGlobalVariable(scope: null, file: !3, line: 2326, type: !1073, isLocal: true, isDefinition: true)
!1073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 448, elements: !1074)
!1074 = !{!1075}
!1075 = !DISubrange(count: 56)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4925, type: !1078, isLocal: true, isDefinition: true)
!1078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 280, elements: !1079)
!1079 = !{!1080}
!1080 = !DISubrange(count: 35)
!1081 = !DIGlobalVariableExpression(var: !1082, expr: !DIExpression())
!1082 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4929, type: !1037, isLocal: true, isDefinition: true)
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5467, type: !941, isLocal: true, isDefinition: true)
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5487, type: !1087, isLocal: true, isDefinition: true)
!1087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 184, elements: !1088)
!1088 = !{!1089}
!1089 = !DISubrange(count: 23)
!1090 = !DIGlobalVariableExpression(var: !1091, expr: !DIExpression())
!1091 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5426, type: !1092, isLocal: true, isDefinition: true)
!1092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 1344, elements: !1093)
!1093 = !{!1094}
!1094 = !DISubrange(count: 168)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(scope: null, file: !3, line: 5437, type: !844, isLocal: true, isDefinition: true)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(scope: null, file: !3, line: 3968, type: !601, isLocal: true, isDefinition: true)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "__pyx_n_s_pandas__libs_indexing", scope: !2, file: !3, line: 1424, type: !6, isLocal: true, isDefinition: true)
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "__pyx_n_s_pyx_unpickle_NDFrameIndexerBas", scope: !2, file: !3, line: 1431, type: !6, isLocal: true, isDefinition: true)
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "__pyx_n_s_test", scope: !2, file: !3, line: 1438, type: !6, isLocal: true, isDefinition: true)
!1105 = !DIGlobalVariableExpression(var: !1106, expr: !DIExpression())
!1106 = distinct !DIGlobalVariable(name: "__pyx_dict_version", scope: !1107, file: !3, line: 4501, type: !331, isLocal: true, isDefinition: true)
!1107 = distinct !DISubprogram(name: "__Pyx_CLineForTraceback", scope: !3, file: !3, line: 4488, type: !1108, scopeLine: 4488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1198)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!54, !1110, !54}
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyThreadState", file: !1112, line: 20, baseType: !1113)
!1112 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/pystate.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "f6ca3968fef8f0a44b819c7c6d96e365")
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ts", file: !1114, line: 49, size: 2112, elements: !1115)
!1114 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/cpython/pystate.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "1605830d929fc22822d97063bae04276")
!1115 = !{!1116, !1118, !1119, !1123, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1182, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1113, file: !1114, line: 52, baseType: !1117, size: 64)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1113, file: !1114, line: 53, baseType: !1117, size: 64, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "interp", scope: !1113, file: !1114, line: 54, baseType: !1120, size: 64, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyInterpreterState", file: !1112, line: 22, baseType: !1122)
!1122 = !DICompositeType(tag: DW_TAG_structure_type, name: "_is", file: !1112, line: 17, flags: DIFlagFwdDecl)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1113, file: !1114, line: 57, baseType: !1124, size: 64, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyFrameObject", file: !1126, line: 12, baseType: !1127)
!1126 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/pyframe.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "38e05c7b48bac69ca74dd3c7c60346ed")
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_frame", file: !1128, line: 17, size: 2944, elements: !1129)
!1128 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/cpython/frameobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "5b279e41c82c17de005f35c3c87237b1")
!1129 = !{!1130, !1131, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1155}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1127, file: !1128, line: 18, baseType: !26, size: 192)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "f_back", scope: !1127, file: !1128, line: 19, baseType: !1132, size: 64, offset: 192)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "f_code", scope: !1127, file: !1128, line: 20, baseType: !397, size: 64, offset: 256)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "f_builtins", scope: !1127, file: !1128, line: 21, baseType: !6, size: 64, offset: 320)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "f_globals", scope: !1127, file: !1128, line: 22, baseType: !6, size: 64, offset: 384)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "f_locals", scope: !1127, file: !1128, line: 23, baseType: !6, size: 64, offset: 448)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "f_valuestack", scope: !1127, file: !1128, line: 24, baseType: !339, size: 64, offset: 512)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "f_stacktop", scope: !1127, file: !1128, line: 28, baseType: !339, size: 64, offset: 576)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "f_trace", scope: !1127, file: !1128, line: 29, baseType: !6, size: 64, offset: 640)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "f_trace_lines", scope: !1127, file: !1128, line: 30, baseType: !34, size: 8, offset: 704)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "f_trace_opcodes", scope: !1127, file: !1128, line: 31, baseType: !34, size: 8, offset: 712)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "f_gen", scope: !1127, file: !1128, line: 34, baseType: !6, size: 64, offset: 768)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "f_lasti", scope: !1127, file: !1128, line: 36, baseType: !54, size: 32, offset: 832)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "f_lineno", scope: !1127, file: !1128, line: 42, baseType: !54, size: 32, offset: 864)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "f_iblock", scope: !1127, file: !1128, line: 43, baseType: !54, size: 32, offset: 896)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "f_executing", scope: !1127, file: !1128, line: 44, baseType: !34, size: 8, offset: 928)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "f_blockstack", scope: !1127, file: !1128, line: 45, baseType: !1148, size: 1920, offset: 960)
!1148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1149, size: 1920, elements: !795)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTryBlock", file: !1128, line: 15, baseType: !1150)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1128, line: 11, size: 96, elements: !1151)
!1151 = !{!1152, !1153, !1154}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "b_type", scope: !1150, file: !1128, line: 12, baseType: !54, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "b_handler", scope: !1150, file: !1128, line: 13, baseType: !54, size: 32, offset: 32)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "b_level", scope: !1150, file: !1128, line: 14, baseType: !54, size: 32, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "f_localsplus", scope: !1127, file: !1128, line: 46, baseType: !320, size: 64, offset: 2880)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_depth", scope: !1113, file: !1114, line: 58, baseType: !54, size: 32, offset: 256)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "overflowed", scope: !1113, file: !1114, line: 59, baseType: !34, size: 8, offset: 288)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_critical", scope: !1113, file: !1114, line: 61, baseType: !34, size: 8, offset: 296)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "stackcheck_counter", scope: !1113, file: !1114, line: 63, baseType: !54, size: 32, offset: 320)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "tracing", scope: !1113, file: !1114, line: 68, baseType: !54, size: 32, offset: 352)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "use_tracing", scope: !1113, file: !1114, line: 69, baseType: !54, size: 32, offset: 384)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "c_profilefunc", scope: !1113, file: !1114, line: 71, baseType: !1163, size: 64, offset: 448)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_tracefunc", file: !1114, line: 17, baseType: !1164)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!54, !6, !1124, !54, !6}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "c_tracefunc", scope: !1113, file: !1114, line: 72, baseType: !1163, size: 64, offset: 512)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "c_profileobj", scope: !1113, file: !1114, line: 73, baseType: !6, size: 64, offset: 576)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "c_traceobj", scope: !1113, file: !1114, line: 74, baseType: !6, size: 64, offset: 640)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_type", scope: !1113, file: !1114, line: 77, baseType: !6, size: 64, offset: 704)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_value", scope: !1113, file: !1114, line: 78, baseType: !6, size: 64, offset: 768)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_traceback", scope: !1113, file: !1114, line: 79, baseType: !6, size: 64, offset: 832)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "exc_state", scope: !1113, file: !1114, line: 84, baseType: !1174, size: 256, offset: 896)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "_PyErr_StackItem", file: !1114, line: 45, baseType: !1175)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_err_stackitem", file: !1114, line: 34, size: 256, elements: !1176)
!1176 = !{!1177, !1178, !1179, !1180}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "exc_type", scope: !1175, file: !1114, line: 41, baseType: !6, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "exc_value", scope: !1175, file: !1114, line: 41, baseType: !6, size: 64, offset: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "exc_traceback", scope: !1175, file: !1114, line: 41, baseType: !6, size: 64, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "previous_item", scope: !1175, file: !1114, line: 43, baseType: !1181, size: 64, offset: 192)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "exc_info", scope: !1113, file: !1114, line: 88, baseType: !1183, size: 64, offset: 1152)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !1113, file: !1114, line: 90, baseType: !6, size: 64, offset: 1216)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "gilstate_counter", scope: !1113, file: !1114, line: 92, baseType: !54, size: 32, offset: 1280)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "async_exc", scope: !1113, file: !1114, line: 94, baseType: !6, size: 64, offset: 1344)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_id", scope: !1113, file: !1114, line: 95, baseType: !209, size: 64, offset: 1408)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_nesting", scope: !1113, file: !1114, line: 97, baseType: !54, size: 32, offset: 1472)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_later", scope: !1113, file: !1114, line: 98, baseType: !6, size: 64, offset: 1536)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete", scope: !1113, file: !1114, line: 123, baseType: !284, size: 64, offset: 1600)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete_data", scope: !1113, file: !1114, line: 124, baseType: !5, size: 64, offset: 1664)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "coroutine_origin_tracking_depth", scope: !1113, file: !1114, line: 126, baseType: !54, size: 32, offset: 1728)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "async_gen_firstiter", scope: !1113, file: !1114, line: 128, baseType: !6, size: 64, offset: 1792)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "async_gen_finalizer", scope: !1113, file: !1114, line: 129, baseType: !6, size: 64, offset: 1856)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1113, file: !1114, line: 131, baseType: !6, size: 64, offset: 1920)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "context_ver", scope: !1113, file: !1114, line: 132, baseType: !331, size: 64, offset: 1984)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1113, file: !1114, line: 135, baseType: !331, size: 64, offset: 2048)
!1198 = !{!1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206}
!1199 = !DILocalVariable(name: "tstate", arg: 1, scope: !1107, file: !3, line: 4488, type: !1110)
!1200 = !DILocalVariable(name: "c_line", arg: 2, scope: !1107, file: !3, line: 4488, type: !54)
!1201 = !DILocalVariable(name: "use_cline", scope: !1107, file: !3, line: 4489, type: !6)
!1202 = !DILocalVariable(name: "ptype", scope: !1107, file: !3, line: 4490, type: !6)
!1203 = !DILocalVariable(name: "pvalue", scope: !1107, file: !3, line: 4490, type: !6)
!1204 = !DILocalVariable(name: "ptraceback", scope: !1107, file: !3, line: 4490, type: !6)
!1205 = !DILocalVariable(name: "cython_runtime_dict", scope: !1107, file: !3, line: 4492, type: !339)
!1206 = !DILocalVariable(name: "use_cline_obj", scope: !1207, file: !3, line: 4507, type: !6)
!1207 = distinct !DILexicalBlock(scope: !1208, file: !3, line: 4506, column: 5)
!1208 = distinct !DILexicalBlock(scope: !1107, file: !3, line: 4500, column: 9)
!1209 = !DIGlobalVariableExpression(var: !1210, expr: !DIExpression())
!1210 = distinct !DIGlobalVariable(name: "__pyx_dict_cached_value", scope: !1107, file: !3, line: 4501, type: !6, isLocal: true, isDefinition: true)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "__pyx_code_cache", scope: !2, file: !3, line: 1326, type: !1213, isLocal: true, isDefinition: true)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__Pyx_CodeObjectCache", file: !3, line: 1321, size: 128, elements: !1214)
!1214 = !{!1215, !1216, !1217}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1213, file: !3, line: 1322, baseType: !54, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "max_count", scope: !1213, file: !3, line: 1323, baseType: !54, size: 32, offset: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1213, file: !3, line: 1324, baseType: !480, size: 64, offset: 64)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(scope: null, file: !3, line: 4633, type: !542, isLocal: true, isDefinition: true)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(scope: null, file: !3, line: 976, type: !1222, isLocal: true, isDefinition: true)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 192, elements: !1223)
!1223 = !{!1224}
!1224 = !DISubrange(count: 24)
!1225 = !DIGlobalVariableExpression(var: !1226, expr: !DIExpression())
!1226 = distinct !DIGlobalVariable(name: "__pyx_cfilenm", scope: !2, file: !3, line: 976, type: !32, isLocal: true, isDefinition: true)
!1227 = !{i32 7, !"Dwarf Version", i32 5}
!1228 = !{i32 2, !"Debug Info Version", i32 3}
!1229 = !{i32 1, !"wchar_size", i32 4}
!1230 = !{i32 8, !"PIC Level", i32 2}
!1231 = !{i32 7, !"uwtable", i32 2}
!1232 = !{!"clang version 18.0.0 (https://github.com/llvm-ml/llvm-project b452eb491a2ae09c12cc88b715f003377cec543b)"}
!1233 = distinct !DISubprogram(name: "PyInit_indexing", scope: !3, file: !3, line: 3081, type: !504, scopeLine: 3083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!1234 = !DILocation(line: 3084, column: 10, scope: !1233)
!1235 = !DILocation(line: 3084, column: 3, scope: !1233)
!1236 = !DISubprogram(name: "PyModuleDef_Init", scope: !495, file: !495, line: 40, type: !1237, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!6, !1239}
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!1240 = distinct !DISubprogram(name: "__pyx_pymod_create", scope: !3, file: !3, line: 3124, type: !1241, scopeLine: 3124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1245)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!6, !6, !1243}
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef", file: !495, line: 85, baseType: !494)
!1245 = !{!1246, !1247, !1248, !1249, !1250, !1251}
!1246 = !DILocalVariable(name: "spec", arg: 1, scope: !1240, file: !3, line: 3124, type: !6)
!1247 = !DILocalVariable(name: "def", arg: 2, scope: !1240, file: !3, line: 3124, type: !1243)
!1248 = !DILocalVariable(name: "module", scope: !1240, file: !3, line: 3125, type: !6)
!1249 = !DILocalVariable(name: "moddict", scope: !1240, file: !3, line: 3125, type: !6)
!1250 = !DILocalVariable(name: "modname", scope: !1240, file: !3, line: 3125, type: !6)
!1251 = !DILabel(scope: !1240, name: "bad", file: !3, line: 3142)
!1252 = !{!1253, !1253, i64 0}
!1253 = !{!"any pointer", !1254, i64 0}
!1254 = !{!"omnipotent char", !1255, i64 0}
!1255 = !{!"Simple C/C++ TBAA"}
!1256 = !DILocation(line: 3124, column: 65, scope: !1240)
!1257 = !DILocation(line: 3124, column: 98, scope: !1240)
!1258 = !DILocation(line: 3125, column: 5, scope: !1240)
!1259 = !DILocation(line: 3125, column: 15, scope: !1240)
!1260 = !DILocation(line: 3125, column: 31, scope: !1240)
!1261 = !DILocation(line: 3125, column: 41, scope: !1240)
!1262 = !DILocation(line: 3126, column: 9, scope: !1263)
!1263 = distinct !DILexicalBlock(scope: !1240, file: !3, line: 3126, column: 9)
!1264 = !DILocation(line: 3126, column: 9, scope: !1240)
!1265 = !DILocation(line: 3127, column: 9, scope: !1263)
!1266 = !DILocation(line: 3128, column: 9, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !1240, file: !3, line: 3128, column: 9)
!1268 = !DILocation(line: 3128, column: 9, scope: !1240)
!1269 = !DILocation(line: 3129, column: 16, scope: !1267)
!1270 = !DILocation(line: 3129, column: 9, scope: !1267)
!1271 = !DILocation(line: 3130, column: 38, scope: !1240)
!1272 = !DILocation(line: 3130, column: 15, scope: !1240)
!1273 = !DILocation(line: 3130, column: 13, scope: !1240)
!1274 = !DILocation(line: 3131, column: 9, scope: !1275)
!1275 = distinct !DILexicalBlock(scope: !1240, file: !3, line: 3131, column: 9)
!1276 = !DILocation(line: 3131, column: 9, scope: !1240)
!1277 = !DILocation(line: 3131, column: 29, scope: !1275)
!1278 = !DILocation(line: 3132, column: 33, scope: !1240)
!1279 = !DILocation(line: 3132, column: 14, scope: !1240)
!1280 = !DILocation(line: 3132, column: 12, scope: !1240)
!1281 = !DILocation(line: 3133, column: 5, scope: !1240)
!1282 = !DILocation(line: 3134, column: 9, scope: !1283)
!1283 = distinct !DILexicalBlock(scope: !1240, file: !3, line: 3134, column: 9)
!1284 = !DILocation(line: 3134, column: 9, scope: !1240)
!1285 = !DILocation(line: 3134, column: 28, scope: !1283)
!1286 = !DILocation(line: 3135, column: 32, scope: !1240)
!1287 = !DILocation(line: 3135, column: 15, scope: !1240)
!1288 = !DILocation(line: 3135, column: 13, scope: !1240)
!1289 = !DILocation(line: 3136, column: 9, scope: !1290)
!1290 = distinct !DILexicalBlock(scope: !1240, file: !3, line: 3136, column: 9)
!1291 = !DILocation(line: 3136, column: 9, scope: !1240)
!1292 = !DILocation(line: 3136, column: 29, scope: !1290)
!1293 = !DILocation(line: 3137, column: 9, scope: !1294)
!1294 = distinct !DILexicalBlock(scope: !1240, file: !3, line: 3137, column: 9)
!1295 = !DILocation(line: 3137, column: 9, scope: !1240)
!1296 = !DILocation(line: 3137, column: 92, scope: !1294)
!1297 = !DILocation(line: 3138, column: 9, scope: !1298)
!1298 = distinct !DILexicalBlock(scope: !1240, file: !3, line: 3138, column: 9)
!1299 = !DILocation(line: 3138, column: 9, scope: !1240)
!1300 = !DILocation(line: 3138, column: 90, scope: !1298)
!1301 = !DILocation(line: 3139, column: 9, scope: !1302)
!1302 = distinct !DILexicalBlock(scope: !1240, file: !3, line: 3139, column: 9)
!1303 = !DILocation(line: 3139, column: 9, scope: !1240)
!1304 = !DILocation(line: 3139, column: 93, scope: !1302)
!1305 = !DILocation(line: 3140, column: 9, scope: !1306)
!1306 = distinct !DILexicalBlock(scope: !1240, file: !3, line: 3140, column: 9)
!1307 = !DILocation(line: 3140, column: 9, scope: !1240)
!1308 = !DILocation(line: 3140, column: 110, scope: !1306)
!1309 = !DILocation(line: 3141, column: 12, scope: !1240)
!1310 = !DILocation(line: 3141, column: 5, scope: !1240)
!1311 = !DILocation(line: 3142, column: 1, scope: !1240)
!1312 = !DILocation(line: 3143, column: 5, scope: !1240)
!1313 = !DILocation(line: 3144, column: 5, scope: !1240)
!1314 = !DILocation(line: 3145, column: 1, scope: !1240)
!1315 = distinct !DISubprogram(name: "__pyx_pymod_exec_indexing", scope: !3, file: !3, line: 3148, type: !94, scopeLine: 3151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1316)
!1316 = !{!1317, !1318, !1319, !1320, !1321, !1322, !1324, !1325, !1329}
!1317 = !DILocalVariable(name: "__pyx_pyinit_module", arg: 1, scope: !1315, file: !3, line: 3148, type: !6)
!1318 = !DILocalVariable(name: "__pyx_t_1", scope: !1315, file: !3, line: 3152, type: !6)
!1319 = !DILocalVariable(name: "__pyx_lineno", scope: !1315, file: !3, line: 3153, type: !54)
!1320 = !DILocalVariable(name: "__pyx_filename", scope: !1315, file: !3, line: 3154, type: !32)
!1321 = !DILocalVariable(name: "__pyx_clineno", scope: !1315, file: !3, line: 3155, type: !54)
!1322 = !DILocalVariable(name: "modules", scope: !1323, file: !3, line: 3235, type: !6)
!1323 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3234, column: 3)
!1324 = !DILabel(scope: !1315, name: "__pyx_L1_error", file: !3, line: 3281)
!1325 = !DILocalVariable(name: "_py_tmp", scope: !1326, file: !3, line: 3287, type: !6)
!1326 = distinct !DILexicalBlock(scope: !1327, file: !3, line: 3287, column: 5)
!1327 = distinct !DILexicalBlock(scope: !1328, file: !3, line: 3283, column: 16)
!1328 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3283, column: 7)
!1329 = !DILabel(scope: !1315, name: "__pyx_L0", file: !3, line: 3291)
!1330 = !DILocation(line: 3148, column: 66, scope: !1315)
!1331 = !DILocation(line: 3152, column: 3, scope: !1315)
!1332 = !DILocation(line: 3152, column: 13, scope: !1315)
!1333 = !DILocation(line: 3153, column: 3, scope: !1315)
!1334 = !DILocation(line: 3153, column: 7, scope: !1315)
!1335 = !{!1336, !1336, i64 0}
!1336 = !{!"int", !1254, i64 0}
!1337 = !DILocation(line: 3154, column: 3, scope: !1315)
!1338 = !DILocation(line: 3154, column: 15, scope: !1315)
!1339 = !DILocation(line: 3155, column: 3, scope: !1315)
!1340 = !DILocation(line: 3155, column: 7, scope: !1315)
!1341 = !DILocation(line: 3158, column: 7, scope: !1342)
!1342 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3158, column: 7)
!1343 = !DILocation(line: 3158, column: 7, scope: !1315)
!1344 = !DILocation(line: 3159, column: 9, scope: !1345)
!1345 = distinct !DILexicalBlock(scope: !1346, file: !3, line: 3159, column: 9)
!1346 = distinct !DILexicalBlock(scope: !1342, file: !3, line: 3158, column: 16)
!1347 = !DILocation(line: 3159, column: 20, scope: !1345)
!1348 = !DILocation(line: 3159, column: 17, scope: !1345)
!1349 = !DILocation(line: 3159, column: 9, scope: !1346)
!1350 = !DILocation(line: 3159, column: 41, scope: !1345)
!1351 = !DILocation(line: 3160, column: 21, scope: !1346)
!1352 = !DILocation(line: 3160, column: 5, scope: !1346)
!1353 = !DILocation(line: 3161, column: 5, scope: !1346)
!1354 = !DILocation(line: 3176, column: 7, scope: !1355)
!1355 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3176, column: 7)
!1356 = !DILocation(line: 3176, column: 36, scope: !1355)
!1357 = !DILocation(line: 3176, column: 7, scope: !1315)
!1358 = !DILocation(line: 3176, column: 41, scope: !1359)
!1359 = distinct !DILexicalBlock(scope: !1360, file: !3, line: 3176, column: 41)
!1360 = distinct !DILexicalBlock(scope: !1355, file: !3, line: 3176, column: 41)
!1361 = !DILocation(line: 3176, column: 41, scope: !1360)
!1362 = !DILocation(line: 3178, column: 3, scope: !1315)
!1363 = !{!1364, !1367, i64 32}
!1364 = !{!"_typeobject", !1365, i64 0, !1253, i64 24, !1367, i64 32, !1367, i64 40, !1253, i64 48, !1367, i64 56, !1253, i64 64, !1253, i64 72, !1253, i64 80, !1253, i64 88, !1253, i64 96, !1253, i64 104, !1253, i64 112, !1253, i64 120, !1253, i64 128, !1253, i64 136, !1253, i64 144, !1253, i64 152, !1253, i64 160, !1367, i64 168, !1253, i64 176, !1253, i64 184, !1253, i64 192, !1253, i64 200, !1367, i64 208, !1253, i64 216, !1253, i64 224, !1253, i64 232, !1253, i64 240, !1253, i64 248, !1253, i64 256, !1253, i64 264, !1253, i64 272, !1253, i64 280, !1367, i64 288, !1253, i64 296, !1253, i64 304, !1253, i64 312, !1253, i64 320, !1253, i64 328, !1253, i64 336, !1253, i64 344, !1253, i64 352, !1253, i64 360, !1253, i64 368, !1253, i64 376, !1336, i64 384, !1253, i64 392, !1253, i64 400}
!1365 = !{!"", !1366, i64 0, !1367, i64 16}
!1366 = !{!"_object", !1367, i64 0, !1253, i64 8}
!1367 = !{!"long", !1254, i64 0}
!1368 = !{!1367, !1367, i64 0}
!1369 = !DILocation(line: 3180, column: 23, scope: !1315)
!1370 = !DILocation(line: 3180, column: 21, scope: !1315)
!1371 = !DILocation(line: 3180, column: 43, scope: !1372)
!1372 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3180, column: 43)
!1373 = !DILocation(line: 3180, column: 43, scope: !1315)
!1374 = !DILocation(line: 3180, column: 73, scope: !1375)
!1375 = distinct !DILexicalBlock(scope: !1376, file: !3, line: 3180, column: 73)
!1376 = distinct !DILexicalBlock(scope: !1372, file: !3, line: 3180, column: 73)
!1377 = !DILocation(line: 3180, column: 73, scope: !1376)
!1378 = !DILocation(line: 3181, column: 23, scope: !1315)
!1379 = !DILocation(line: 3181, column: 21, scope: !1315)
!1380 = !DILocation(line: 3181, column: 61, scope: !1381)
!1381 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3181, column: 61)
!1382 = !DILocation(line: 3181, column: 61, scope: !1315)
!1383 = !DILocation(line: 3181, column: 91, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1385, file: !3, line: 3181, column: 91)
!1385 = distinct !DILexicalBlock(scope: !1381, file: !3, line: 3181, column: 91)
!1386 = !DILocation(line: 3181, column: 91, scope: !1385)
!1387 = !DILocation(line: 3182, column: 25, scope: !1315)
!1388 = !DILocation(line: 3182, column: 23, scope: !1315)
!1389 = !DILocation(line: 3182, column: 65, scope: !1390)
!1390 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3182, column: 65)
!1391 = !DILocation(line: 3182, column: 65, scope: !1315)
!1392 = !DILocation(line: 3182, column: 97, scope: !1393)
!1393 = distinct !DILexicalBlock(scope: !1394, file: !3, line: 3182, column: 97)
!1394 = distinct !DILexicalBlock(scope: !1390, file: !3, line: 3182, column: 97)
!1395 = !DILocation(line: 3182, column: 97, scope: !1394)
!1396 = !DILocation(line: 3208, column: 13, scope: !1315)
!1397 = !DILocation(line: 3208, column: 11, scope: !1315)
!1398 = !DILocation(line: 3209, column: 3, scope: !1315)
!1399 = !DILocation(line: 3218, column: 30, scope: !1315)
!1400 = !DILocation(line: 3218, column: 13, scope: !1315)
!1401 = !DILocation(line: 3218, column: 11, scope: !1315)
!1402 = !DILocation(line: 3218, column: 44, scope: !1403)
!1403 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3218, column: 44)
!1404 = !DILocation(line: 3218, column: 44, scope: !1315)
!1405 = !DILocation(line: 3218, column: 64, scope: !1406)
!1406 = distinct !DILexicalBlock(scope: !1407, file: !3, line: 3218, column: 64)
!1407 = distinct !DILexicalBlock(scope: !1403, file: !3, line: 3218, column: 64)
!1408 = !DILocation(line: 3218, column: 64, scope: !1407)
!1409 = !DILocation(line: 3219, column: 3, scope: !1315)
!1410 = !DILocation(line: 3220, column: 13, scope: !1315)
!1411 = !DILocation(line: 3220, column: 11, scope: !1315)
!1412 = !DILocation(line: 3220, column: 64, scope: !1413)
!1413 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3220, column: 64)
!1414 = !DILocation(line: 3220, column: 64, scope: !1315)
!1415 = !DILocation(line: 3220, column: 84, scope: !1416)
!1416 = distinct !DILexicalBlock(scope: !1417, file: !3, line: 3220, column: 84)
!1417 = distinct !DILexicalBlock(scope: !1413, file: !3, line: 3220, column: 84)
!1418 = !DILocation(line: 3220, column: 84, scope: !1417)
!1419 = !DILocation(line: 3221, column: 3, scope: !1315)
!1420 = !DILocation(line: 3222, column: 26, scope: !1315)
!1421 = !DILocation(line: 3222, column: 24, scope: !1315)
!1422 = !DILocation(line: 3222, column: 77, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3222, column: 77)
!1424 = !DILocation(line: 3222, column: 77, scope: !1315)
!1425 = !DILocation(line: 3222, column: 110, scope: !1426)
!1426 = distinct !DILexicalBlock(scope: !1427, file: !3, line: 3222, column: 110)
!1427 = distinct !DILexicalBlock(scope: !1423, file: !3, line: 3222, column: 110)
!1428 = !DILocation(line: 3222, column: 110, scope: !1427)
!1429 = !DILocation(line: 3223, column: 3, scope: !1315)
!1430 = !DILocation(line: 3224, column: 30, scope: !1431)
!1431 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3224, column: 7)
!1432 = !DILocation(line: 3224, column: 55, scope: !1431)
!1433 = !DILocation(line: 3224, column: 7, scope: !1431)
!1434 = !DILocation(line: 3224, column: 64, scope: !1431)
!1435 = !DILocation(line: 3224, column: 7, scope: !1315)
!1436 = !DILocation(line: 3224, column: 69, scope: !1437)
!1437 = distinct !DILexicalBlock(scope: !1438, file: !3, line: 3224, column: 69)
!1438 = distinct !DILexicalBlock(scope: !1431, file: !3, line: 3224, column: 69)
!1439 = !DILocation(line: 3224, column: 69, scope: !1438)
!1440 = !DILocation(line: 3226, column: 7, scope: !1441)
!1441 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3226, column: 7)
!1442 = !DILocation(line: 3226, column: 27, scope: !1441)
!1443 = !DILocation(line: 3226, column: 7, scope: !1315)
!1444 = !DILocation(line: 3226, column: 32, scope: !1445)
!1445 = distinct !DILexicalBlock(scope: !1446, file: !3, line: 3226, column: 32)
!1446 = distinct !DILexicalBlock(scope: !1441, file: !3, line: 3226, column: 32)
!1447 = !DILocation(line: 3226, column: 32, scope: !1446)
!1448 = !DILocation(line: 3230, column: 7, scope: !1449)
!1449 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3230, column: 7)
!1450 = !DILocation(line: 3230, column: 7, scope: !1315)
!1451 = !DILocation(line: 3231, column: 26, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !1453, file: !3, line: 3231, column: 9)
!1453 = distinct !DILexicalBlock(scope: !1449, file: !3, line: 3230, column: 53)
!1454 = !DILocation(line: 3231, column: 35, scope: !1452)
!1455 = !DILocation(line: 3231, column: 53, scope: !1452)
!1456 = !DILocation(line: 3231, column: 9, scope: !1452)
!1457 = !DILocation(line: 3231, column: 69, scope: !1452)
!1458 = !DILocation(line: 3231, column: 9, scope: !1453)
!1459 = !DILocation(line: 3231, column: 74, scope: !1460)
!1460 = distinct !DILexicalBlock(scope: !1461, file: !3, line: 3231, column: 74)
!1461 = distinct !DILexicalBlock(scope: !1452, file: !3, line: 3231, column: 74)
!1462 = !DILocation(line: 3231, column: 74, scope: !1461)
!1463 = !DILocation(line: 3232, column: 3, scope: !1453)
!1464 = !DILocation(line: 3235, column: 5, scope: !1323)
!1465 = !DILocation(line: 3235, column: 15, scope: !1323)
!1466 = !DILocation(line: 3235, column: 25, scope: !1323)
!1467 = !DILocation(line: 3235, column: 55, scope: !1468)
!1468 = distinct !DILexicalBlock(scope: !1323, file: !3, line: 3235, column: 55)
!1469 = !DILocation(line: 3235, column: 55, scope: !1323)
!1470 = !DILocation(line: 3235, column: 75, scope: !1471)
!1471 = distinct !DILexicalBlock(scope: !1472, file: !3, line: 3235, column: 75)
!1472 = distinct !DILexicalBlock(scope: !1468, file: !3, line: 3235, column: 75)
!1473 = !DILocation(line: 3235, column: 75, scope: !1472)
!1474 = !DILocation(line: 3236, column: 31, scope: !1475)
!1475 = distinct !DILexicalBlock(scope: !1323, file: !3, line: 3236, column: 9)
!1476 = !DILocation(line: 3236, column: 10, scope: !1475)
!1477 = !DILocation(line: 3236, column: 9, scope: !1323)
!1478 = !DILocation(line: 3237, column: 11, scope: !1479)
!1479 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 3237, column: 11)
!1480 = distinct !DILexicalBlock(scope: !1475, file: !3, line: 3236, column: 66)
!1481 = !DILocation(line: 3237, column: 11, scope: !1480)
!1482 = !DILocation(line: 3237, column: 90, scope: !1483)
!1483 = distinct !DILexicalBlock(scope: !1484, file: !3, line: 3237, column: 90)
!1484 = distinct !DILexicalBlock(scope: !1479, file: !3, line: 3237, column: 90)
!1485 = !DILocation(line: 3237, column: 90, scope: !1484)
!1486 = !DILocation(line: 3238, column: 5, scope: !1480)
!1487 = !DILocation(line: 3239, column: 3, scope: !1315)
!1488 = !DILocation(line: 3242, column: 7, scope: !1489)
!1489 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3242, column: 7)
!1490 = !DILocation(line: 3242, column: 34, scope: !1489)
!1491 = !DILocation(line: 3242, column: 7, scope: !1315)
!1492 = !DILocation(line: 3242, column: 39, scope: !1493)
!1493 = distinct !DILexicalBlock(scope: !1494, file: !3, line: 3242, column: 39)
!1494 = distinct !DILexicalBlock(scope: !1489, file: !3, line: 3242, column: 39)
!1495 = !DILocation(line: 3242, column: 39, scope: !1494)
!1496 = !DILocation(line: 3244, column: 7, scope: !1497)
!1497 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3244, column: 7)
!1498 = !DILocation(line: 3244, column: 35, scope: !1497)
!1499 = !DILocation(line: 3244, column: 7, scope: !1315)
!1500 = !DILocation(line: 3244, column: 40, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1502, file: !3, line: 3244, column: 40)
!1502 = distinct !DILexicalBlock(scope: !1497, file: !3, line: 3244, column: 40)
!1503 = !DILocation(line: 3244, column: 40, scope: !1502)
!1504 = !DILocation(line: 3246, column: 9, scope: !1315)
!1505 = !DILocation(line: 3247, column: 9, scope: !1315)
!1506 = !DILocation(line: 3248, column: 9, scope: !1315)
!1507 = !DILocation(line: 3249, column: 7, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3249, column: 7)
!1509 = !DILocation(line: 3249, column: 7, scope: !1315)
!1510 = !DILocation(line: 3249, column: 53, scope: !1511)
!1511 = distinct !DILexicalBlock(scope: !1512, file: !3, line: 3249, column: 53)
!1512 = distinct !DILexicalBlock(scope: !1508, file: !3, line: 3249, column: 53)
!1513 = !DILocation(line: 3249, column: 53, scope: !1512)
!1514 = !DILocation(line: 3250, column: 9, scope: !1315)
!1515 = !DILocation(line: 3251, column: 9, scope: !1315)
!1516 = !DILocation(line: 3252, column: 9, scope: !1315)
!1517 = !DILocation(line: 3263, column: 15, scope: !1315)
!1518 = !DILocation(line: 3263, column: 13, scope: !1315)
!1519 = !DILocation(line: 3263, column: 150, scope: !1520)
!1520 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3263, column: 150)
!1521 = !DILocation(line: 3263, column: 150, scope: !1315)
!1522 = !DILocation(line: 3263, column: 172, scope: !1523)
!1523 = distinct !DILexicalBlock(scope: !1524, file: !3, line: 3263, column: 172)
!1524 = distinct !DILexicalBlock(scope: !1520, file: !3, line: 3263, column: 172)
!1525 = !DILocation(line: 3263, column: 172, scope: !1524)
!1526 = !DILocation(line: 3265, column: 22, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3265, column: 7)
!1528 = !DILocation(line: 3265, column: 31, scope: !1527)
!1529 = !DILocation(line: 3265, column: 73, scope: !1527)
!1530 = !DILocation(line: 3265, column: 7, scope: !1527)
!1531 = !DILocation(line: 3265, column: 84, scope: !1527)
!1532 = !DILocation(line: 3265, column: 7, scope: !1315)
!1533 = !DILocation(line: 3265, column: 89, scope: !1534)
!1534 = distinct !DILexicalBlock(scope: !1535, file: !3, line: 3265, column: 89)
!1535 = distinct !DILexicalBlock(scope: !1527, file: !3, line: 3265, column: 89)
!1536 = !DILocation(line: 3265, column: 89, scope: !1535)
!1537 = !DILocation(line: 3266, column: 3, scope: !1315)
!1538 = !DILocation(line: 3266, column: 38, scope: !1315)
!1539 = !DILocation(line: 3273, column: 15, scope: !1315)
!1540 = !DILocation(line: 3273, column: 13, scope: !1315)
!1541 = !DILocation(line: 3273, column: 48, scope: !1542)
!1542 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3273, column: 48)
!1543 = !DILocation(line: 3273, column: 48, scope: !1315)
!1544 = !DILocation(line: 3273, column: 70, scope: !1545)
!1545 = distinct !DILexicalBlock(scope: !1546, file: !3, line: 3273, column: 70)
!1546 = distinct !DILexicalBlock(scope: !1542, file: !3, line: 3273, column: 70)
!1547 = !DILocation(line: 3273, column: 70, scope: !1546)
!1548 = !DILocation(line: 3275, column: 22, scope: !1549)
!1549 = distinct !DILexicalBlock(scope: !1315, file: !3, line: 3275, column: 7)
!1550 = !DILocation(line: 3275, column: 31, scope: !1549)
!1551 = !DILocation(line: 3275, column: 47, scope: !1549)
!1552 = !DILocation(line: 3275, column: 7, scope: !1549)
!1553 = !DILocation(line: 3275, column: 58, scope: !1549)
!1554 = !DILocation(line: 3275, column: 7, scope: !1315)
!1555 = !DILocation(line: 3275, column: 63, scope: !1556)
!1556 = distinct !DILexicalBlock(scope: !1557, file: !3, line: 3275, column: 63)
!1557 = distinct !DILexicalBlock(scope: !1549, file: !3, line: 3275, column: 63)
!1558 = !DILocation(line: 3275, column: 63, scope: !1557)
!1559 = !DILocation(line: 3276, column: 3, scope: !1315)
!1560 = !DILocation(line: 3276, column: 38, scope: !1315)
!1561 = !DILocation(line: 3280, column: 3, scope: !1315)
!1562 = !DILocation(line: 3281, column: 3, scope: !1315)
!1563 = !DILocation(line: 3282, column: 3, scope: !1315)
!1564 = !DILocation(line: 3283, column: 7, scope: !1328)
!1565 = !DILocation(line: 3283, column: 7, scope: !1315)
!1566 = !DILocation(line: 3284, column: 9, scope: !1567)
!1567 = distinct !DILexicalBlock(scope: !1327, file: !3, line: 3284, column: 9)
!1568 = !DILocation(line: 3284, column: 9, scope: !1327)
!1569 = !DILocation(line: 3285, column: 56, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !1567, file: !3, line: 3284, column: 18)
!1571 = !DILocation(line: 3285, column: 71, scope: !1570)
!1572 = !DILocation(line: 3285, column: 85, scope: !1570)
!1573 = !DILocation(line: 3285, column: 7, scope: !1570)
!1574 = !DILocation(line: 3286, column: 5, scope: !1570)
!1575 = !DILocation(line: 3287, column: 5, scope: !1327)
!1576 = !DILocation(line: 3287, column: 5, scope: !1326)
!1577 = !DILocation(line: 3287, column: 5, scope: !1578)
!1578 = distinct !DILexicalBlock(scope: !1326, file: !3, line: 3287, column: 5)
!1579 = !DILocation(line: 3287, column: 5, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1578, file: !3, line: 3287, column: 5)
!1581 = !DILocation(line: 3288, column: 3, scope: !1327)
!1582 = !DILocation(line: 3288, column: 15, scope: !1583)
!1583 = distinct !DILexicalBlock(scope: !1328, file: !3, line: 3288, column: 14)
!1584 = !DILocation(line: 3288, column: 14, scope: !1328)
!1585 = !DILocation(line: 3289, column: 21, scope: !1586)
!1586 = distinct !DILexicalBlock(scope: !1583, file: !3, line: 3288, column: 33)
!1587 = !DILocation(line: 3289, column: 5, scope: !1586)
!1588 = !DILocation(line: 3290, column: 3, scope: !1586)
!1589 = !DILocation(line: 3291, column: 3, scope: !1315)
!1590 = !DILocation(line: 3294, column: 11, scope: !1315)
!1591 = !DILocation(line: 3294, column: 19, scope: !1315)
!1592 = !DILocation(line: 3294, column: 10, scope: !1315)
!1593 = !DILocation(line: 3294, column: 3, scope: !1315)
!1594 = !DILocation(line: 3300, column: 1, scope: !1315)
!1595 = !DILocation(line: 3089, column: 5, scope: !565)
!1596 = !DILocation(line: 3089, column: 16, scope: !565)
!1597 = !DILocation(line: 3089, column: 54, scope: !565)
!1598 = !DILocation(line: 3089, column: 75, scope: !565)
!1599 = !{!1600, !1253, i64 16}
!1600 = !{!"_ts", !1253, i64 0, !1253, i64 8, !1253, i64 16, !1253, i64 24, !1336, i64 32, !1254, i64 36, !1254, i64 37, !1336, i64 40, !1336, i64 44, !1336, i64 48, !1253, i64 56, !1253, i64 64, !1253, i64 72, !1253, i64 80, !1253, i64 88, !1253, i64 96, !1253, i64 104, !1601, i64 112, !1253, i64 144, !1253, i64 152, !1336, i64 160, !1253, i64 168, !1367, i64 176, !1336, i64 184, !1253, i64 192, !1253, i64 200, !1253, i64 208, !1336, i64 216, !1253, i64 224, !1253, i64 232, !1253, i64 240, !1367, i64 248, !1367, i64 256}
!1601 = !{!"_err_stackitem", !1253, i64 0, !1253, i64 8, !1253, i64 16, !1253, i64 24}
!1602 = !DILocation(line: 3089, column: 29, scope: !565)
!1603 = !DILocation(line: 3090, column: 9, scope: !1604)
!1604 = distinct !DILexicalBlock(scope: !565, file: !3, line: 3090, column: 9)
!1605 = !DILocation(line: 3090, column: 29, scope: !1604)
!1606 = !DILocation(line: 3090, column: 9, scope: !565)
!1607 = !DILocation(line: 3091, column: 31, scope: !1608)
!1608 = distinct !DILexicalBlock(scope: !1604, file: !3, line: 3090, column: 36)
!1609 = !DILocation(line: 3091, column: 29, scope: !1608)
!1610 = !DILocation(line: 3092, column: 17, scope: !1608)
!1611 = !DILocation(line: 3092, column: 16, scope: !1608)
!1612 = !DILocation(line: 3092, column: 9, scope: !1608)
!1613 = !DILocation(line: 3093, column: 16, scope: !1614)
!1614 = distinct !DILexicalBlock(scope: !1604, file: !3, line: 3093, column: 16)
!1615 = !DILocation(line: 3093, column: 16, scope: !1604)
!1616 = !DILocation(line: 3103, column: 13, scope: !1617)
!1617 = distinct !DILexicalBlock(scope: !1614, file: !3, line: 3101, column: 5)
!1618 = !DILocation(line: 3102, column: 9, scope: !1617)
!1619 = !DILocation(line: 3105, column: 9, scope: !1617)
!1620 = !DILocation(line: 3107, column: 5, scope: !565)
!1621 = !DILocation(line: 3108, column: 1, scope: !565)
!1622 = distinct !DISubprogram(name: "_Py_INCREF", scope: !8, file: !8, line: 403, type: !40, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1623)
!1623 = !{!1624}
!1624 = !DILocalVariable(name: "op", arg: 1, scope: !1622, file: !8, line: 403, type: !6)
!1625 = !DILocation(line: 403, column: 41, scope: !1622)
!1626 = !DILocation(line: 408, column: 5, scope: !1622)
!1627 = !DILocation(line: 408, column: 9, scope: !1622)
!1628 = !DILocation(line: 408, column: 18, scope: !1622)
!1629 = !{!1366, !1367, i64 0}
!1630 = !DILocation(line: 409, column: 1, scope: !1622)
!1631 = !DISubprogram(name: "PyObject_GetAttrString", scope: !8, file: !8, line: 247, type: !1632, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!6, !6, !32}
!1634 = !DISubprogram(name: "PyModule_NewObject", scope: !495, file: !495, line: 16, type: !63, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1635 = distinct !DISubprogram(name: "_Py_DECREF", scope: !8, file: !8, line: 413, type: !40, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1636)
!1636 = !{!1637}
!1637 = !DILocalVariable(name: "op", arg: 1, scope: !1635, file: !8, line: 417, type: !6)
!1638 = !DILocation(line: 417, column: 15, scope: !1635)
!1639 = !DILocation(line: 422, column: 11, scope: !1640)
!1640 = distinct !DILexicalBlock(scope: !1635, file: !8, line: 422, column: 9)
!1641 = !DILocation(line: 422, column: 15, scope: !1640)
!1642 = !DILocation(line: 422, column: 9, scope: !1640)
!1643 = !DILocation(line: 422, column: 25, scope: !1640)
!1644 = !DILocation(line: 422, column: 9, scope: !1635)
!1645 = !DILocation(line: 428, column: 5, scope: !1646)
!1646 = distinct !DILexicalBlock(scope: !1640, file: !8, line: 422, column: 31)
!1647 = !DILocation(line: 430, column: 21, scope: !1648)
!1648 = distinct !DILexicalBlock(scope: !1640, file: !8, line: 429, column: 10)
!1649 = !DILocation(line: 430, column: 9, scope: !1648)
!1650 = !DILocation(line: 432, column: 1, scope: !1635)
!1651 = !DISubprogram(name: "PyModule_GetDict", scope: !495, file: !495, line: 23, type: !63, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1652 = distinct !DISubprogram(name: "__Pyx_copy_spec_to_module", scope: !3, file: !3, line: 3109, type: !1653, scopeLine: 3109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1655)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{!54, !6, !6, !32, !32, !54}
!1655 = !{!1656, !1657, !1658, !1659, !1660, !1661, !1662}
!1656 = !DILocalVariable(name: "spec", arg: 1, scope: !1652, file: !3, line: 3109, type: !6)
!1657 = !DILocalVariable(name: "moddict", arg: 2, scope: !1652, file: !3, line: 3109, type: !6)
!1658 = !DILocalVariable(name: "from_name", arg: 3, scope: !1652, file: !3, line: 3109, type: !32)
!1659 = !DILocalVariable(name: "to_name", arg: 4, scope: !1652, file: !3, line: 3109, type: !32)
!1660 = !DILocalVariable(name: "allow_none", arg: 5, scope: !1652, file: !3, line: 3109, type: !54)
!1661 = !DILocalVariable(name: "value", scope: !1652, file: !3, line: 3110, type: !6)
!1662 = !DILocalVariable(name: "result", scope: !1652, file: !3, line: 3111, type: !54)
!1663 = !DILocation(line: 3109, column: 66, scope: !1652)
!1664 = !DILocation(line: 3109, column: 82, scope: !1652)
!1665 = !DILocation(line: 3109, column: 103, scope: !1652)
!1666 = !DILocation(line: 3109, column: 126, scope: !1652)
!1667 = !DILocation(line: 3109, column: 139, scope: !1652)
!1668 = !DILocation(line: 3110, column: 5, scope: !1652)
!1669 = !DILocation(line: 3110, column: 15, scope: !1652)
!1670 = !DILocation(line: 3110, column: 46, scope: !1652)
!1671 = !DILocation(line: 3110, column: 52, scope: !1652)
!1672 = !DILocation(line: 3110, column: 23, scope: !1652)
!1673 = !DILocation(line: 3111, column: 5, scope: !1652)
!1674 = !DILocation(line: 3111, column: 9, scope: !1652)
!1675 = !DILocation(line: 3112, column: 9, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1652, file: !3, line: 3112, column: 9)
!1677 = !DILocation(line: 3112, column: 9, scope: !1652)
!1678 = !DILocation(line: 3113, column: 13, scope: !1679)
!1679 = distinct !DILexicalBlock(scope: !1680, file: !3, line: 3113, column: 13)
!1680 = distinct !DILexicalBlock(scope: !1676, file: !3, line: 3112, column: 24)
!1681 = !DILocation(line: 3113, column: 24, scope: !1679)
!1682 = !DILocation(line: 3113, column: 27, scope: !1679)
!1683 = !DILocation(line: 3113, column: 33, scope: !1679)
!1684 = !DILocation(line: 3113, column: 13, scope: !1680)
!1685 = !DILocation(line: 3114, column: 43, scope: !1686)
!1686 = distinct !DILexicalBlock(scope: !1679, file: !3, line: 3113, column: 45)
!1687 = !DILocation(line: 3114, column: 52, scope: !1686)
!1688 = !DILocation(line: 3114, column: 61, scope: !1686)
!1689 = !DILocation(line: 3114, column: 22, scope: !1686)
!1690 = !DILocation(line: 3114, column: 20, scope: !1686)
!1691 = !DILocation(line: 3115, column: 9, scope: !1686)
!1692 = !DILocation(line: 3116, column: 9, scope: !1680)
!1693 = !DILocation(line: 3117, column: 5, scope: !1680)
!1694 = !DILocation(line: 3117, column: 39, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1676, file: !3, line: 3117, column: 16)
!1696 = !DILocation(line: 3117, column: 16, scope: !1695)
!1697 = !DILocation(line: 3117, column: 16, scope: !1676)
!1698 = !DILocation(line: 3118, column: 9, scope: !1699)
!1699 = distinct !DILexicalBlock(scope: !1695, file: !3, line: 3117, column: 62)
!1700 = !DILocation(line: 3119, column: 5, scope: !1699)
!1701 = !DILocation(line: 3120, column: 16, scope: !1702)
!1702 = distinct !DILexicalBlock(scope: !1695, file: !3, line: 3119, column: 12)
!1703 = !DILocation(line: 3122, column: 12, scope: !1652)
!1704 = !DILocation(line: 3123, column: 1, scope: !1652)
!1705 = !DILocation(line: 3122, column: 5, scope: !1652)
!1706 = distinct !DISubprogram(name: "_Py_XDECREF", scope: !8, file: !8, line: 494, type: !40, scopeLine: 495, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1707)
!1707 = !{!1708}
!1708 = !DILocalVariable(name: "op", arg: 1, scope: !1706, file: !8, line: 494, type: !6)
!1709 = !DILocation(line: 494, column: 42, scope: !1706)
!1710 = !DILocation(line: 496, column: 9, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !1706, file: !8, line: 496, column: 9)
!1712 = !DILocation(line: 496, column: 12, scope: !1711)
!1713 = !DILocation(line: 496, column: 9, scope: !1706)
!1714 = !DILocation(line: 497, column: 9, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !1711, file: !8, line: 496, column: 21)
!1716 = !DILocation(line: 498, column: 5, scope: !1715)
!1717 = !DILocation(line: 499, column: 1, scope: !1706)
!1718 = !DISubprogram(name: "PyInterpreterState_GetID", scope: !1112, file: !1112, line: 46, type: !1719, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!570, !1120}
!1721 = !DISubprogram(name: "PyThreadState_Get", scope: !1112, file: !1112, line: 70, type: !1722, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!1110}
!1724 = !DISubprogram(name: "PyErr_SetString", scope: !1725, file: !1725, line: 13, type: !1726, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1725 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/pyerrors.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "901b38e3df828a38acb12a9a545ab778")
!1726 = !DISubroutineType(types: !1727)
!1727 = !{null, !6, !32}
!1728 = !DISubprogram(name: "_Py_Dealloc", scope: !8, file: !8, line: 401, type: !40, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1729 = !DISubprogram(name: "PyDict_SetItemString", scope: !1730, file: !1730, line: 58, type: !1731, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1730 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/dictobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "8f9d89a095e39834fd51a0248adb1587")
!1731 = !DISubroutineType(types: !1732)
!1732 = !{!54, !6, !32, !6}
!1733 = !DISubprogram(name: "PyErr_ExceptionMatches", scope: !1725, file: !1725, line: 41, type: !94, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1734 = !DISubprogram(name: "PyErr_Clear", scope: !1725, file: !1725, line: 18, type: !1735, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1735 = !DISubroutineType(types: !1736)
!1736 = !{null}
!1737 = distinct !DISubprogram(name: "__Pyx_check_binary_version", scope: !3, file: !3, line: 5268, type: !566, scopeLine: 5268, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1738)
!1738 = !{!1739, !1740, !1741, !1742, !1743, !1744, !1747}
!1739 = !DILocalVariable(name: "ctversion", scope: !1737, file: !3, line: 5269, type: !532)
!1740 = !DILocalVariable(name: "same", scope: !1737, file: !3, line: 5270, type: !54)
!1741 = !DILocalVariable(name: "i", scope: !1737, file: !3, line: 5270, type: !54)
!1742 = !DILocalVariable(name: "found_dot", scope: !1737, file: !3, line: 5270, type: !54)
!1743 = !DILocalVariable(name: "rt_from_call", scope: !1737, file: !3, line: 5271, type: !32)
!1744 = !DILocalVariable(name: "rtversion", scope: !1745, file: !3, line: 5285, type: !532)
!1745 = distinct !DILexicalBlock(scope: !1746, file: !3, line: 5284, column: 16)
!1746 = distinct !DILexicalBlock(scope: !1737, file: !3, line: 5284, column: 9)
!1747 = !DILocalVariable(name: "message", scope: !1745, file: !3, line: 5286, type: !1748)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 1600, elements: !1749)
!1749 = !{!1750}
!1750 = !DISubrange(count: 200)
!1751 = !DILocation(line: 5269, column: 5, scope: !1737)
!1752 = !DILocation(line: 5269, column: 10, scope: !1737)
!1753 = !DILocation(line: 5270, column: 5, scope: !1737)
!1754 = !DILocation(line: 5270, column: 9, scope: !1737)
!1755 = !DILocation(line: 5270, column: 17, scope: !1737)
!1756 = !DILocation(line: 5270, column: 20, scope: !1737)
!1757 = !DILocation(line: 5271, column: 5, scope: !1737)
!1758 = !DILocation(line: 5271, column: 17, scope: !1737)
!1759 = !DILocation(line: 5271, column: 32, scope: !1737)
!1760 = !DILocation(line: 5272, column: 19, scope: !1737)
!1761 = !DILocation(line: 5272, column: 5, scope: !1737)
!1762 = !DILocation(line: 5273, column: 15, scope: !1737)
!1763 = !DILocation(line: 5274, column: 12, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1737, file: !3, line: 5274, column: 5)
!1765 = !DILocation(line: 5274, column: 10, scope: !1764)
!1766 = !DILocation(line: 5274, column: 17, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !1764, file: !3, line: 5274, column: 5)
!1768 = !DILocation(line: 5274, column: 19, scope: !1767)
!1769 = !DILocation(line: 5274, column: 5, scope: !1764)
!1770 = !DILocation(line: 5275, column: 24, scope: !1771)
!1771 = distinct !DILexicalBlock(scope: !1772, file: !3, line: 5275, column: 13)
!1772 = distinct !DILexicalBlock(scope: !1767, file: !3, line: 5274, column: 29)
!1773 = !DILocation(line: 5275, column: 14, scope: !1771)
!1774 = !{!1254, !1254, i64 0}
!1775 = !DILocation(line: 5275, column: 13, scope: !1772)
!1776 = !DILocation(line: 5276, column: 21, scope: !1777)
!1777 = distinct !DILexicalBlock(scope: !1771, file: !3, line: 5275, column: 28)
!1778 = !DILocation(line: 5276, column: 34, scope: !1777)
!1779 = !DILocation(line: 5276, column: 37, scope: !1777)
!1780 = !DILocation(line: 5276, column: 43, scope: !1777)
!1781 = !DILocation(line: 5276, column: 46, scope: !1777)
!1782 = !DILocation(line: 5276, column: 59, scope: !1777)
!1783 = !DILocation(line: 5276, column: 62, scope: !1777)
!1784 = !DILocation(line: 5276, column: 18, scope: !1777)
!1785 = !DILocation(line: 5277, column: 13, scope: !1777)
!1786 = !DILocation(line: 5279, column: 13, scope: !1787)
!1787 = distinct !DILexicalBlock(scope: !1772, file: !3, line: 5279, column: 13)
!1788 = !DILocation(line: 5279, column: 26, scope: !1787)
!1789 = !DILocation(line: 5279, column: 42, scope: !1787)
!1790 = !DILocation(line: 5279, column: 32, scope: !1787)
!1791 = !DILocation(line: 5279, column: 29, scope: !1787)
!1792 = !DILocation(line: 5279, column: 13, scope: !1772)
!1793 = !DILocation(line: 5280, column: 18, scope: !1794)
!1794 = distinct !DILexicalBlock(scope: !1787, file: !3, line: 5279, column: 46)
!1795 = !DILocation(line: 5281, column: 13, scope: !1794)
!1796 = !DILocation(line: 5283, column: 5, scope: !1772)
!1797 = !DILocation(line: 5274, column: 25, scope: !1767)
!1798 = !DILocation(line: 5274, column: 5, scope: !1767)
!1799 = distinct !{!1799, !1769, !1800, !1801}
!1800 = !DILocation(line: 5283, column: 5, scope: !1764)
!1801 = !{!"llvm.loop.mustprogress"}
!1802 = !DILocation(line: 5284, column: 10, scope: !1746)
!1803 = !DILocation(line: 5284, column: 9, scope: !1737)
!1804 = !DILocation(line: 5285, column: 9, scope: !1745)
!1805 = !DILocation(line: 5285, column: 14, scope: !1745)
!1806 = !DILocation(line: 5286, column: 9, scope: !1745)
!1807 = !DILocation(line: 5286, column: 14, scope: !1745)
!1808 = !DILocation(line: 5287, column: 15, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !1745, file: !3, line: 5287, column: 9)
!1810 = !DILocation(line: 5287, column: 14, scope: !1809)
!1811 = !DILocation(line: 5287, column: 19, scope: !1812)
!1812 = distinct !DILexicalBlock(scope: !1809, file: !3, line: 5287, column: 9)
!1813 = !DILocation(line: 5287, column: 20, scope: !1812)
!1814 = !DILocation(line: 5287, column: 9, scope: !1809)
!1815 = !DILocation(line: 5288, column: 17, scope: !1816)
!1816 = distinct !DILexicalBlock(scope: !1817, file: !3, line: 5288, column: 17)
!1817 = distinct !DILexicalBlock(scope: !1812, file: !3, line: 5287, column: 29)
!1818 = !DILocation(line: 5288, column: 30, scope: !1816)
!1819 = !DILocation(line: 5288, column: 33, scope: !1816)
!1820 = !DILocation(line: 5288, column: 17, scope: !1817)
!1821 = !DILocation(line: 5289, column: 21, scope: !1822)
!1822 = distinct !DILexicalBlock(scope: !1823, file: !3, line: 5289, column: 21)
!1823 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 5288, column: 41)
!1824 = !DILocation(line: 5289, column: 21, scope: !1823)
!1825 = !DILocation(line: 5289, column: 32, scope: !1822)
!1826 = !DILocation(line: 5290, column: 27, scope: !1823)
!1827 = !DILocation(line: 5291, column: 13, scope: !1823)
!1828 = !DILocation(line: 5291, column: 24, scope: !1829)
!1829 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 5291, column: 24)
!1830 = !DILocation(line: 5291, column: 37, scope: !1829)
!1831 = !DILocation(line: 5291, column: 40, scope: !1829)
!1832 = !DILocation(line: 5291, column: 46, scope: !1829)
!1833 = !DILocation(line: 5291, column: 49, scope: !1829)
!1834 = !DILocation(line: 5291, column: 62, scope: !1829)
!1835 = !DILocation(line: 5291, column: 65, scope: !1829)
!1836 = !DILocation(line: 5291, column: 24, scope: !1816)
!1837 = !DILocation(line: 5292, column: 17, scope: !1838)
!1838 = distinct !DILexicalBlock(scope: !1829, file: !3, line: 5291, column: 72)
!1839 = !DILocation(line: 5294, column: 28, scope: !1817)
!1840 = !DILocation(line: 5294, column: 41, scope: !1817)
!1841 = !DILocation(line: 5294, column: 23, scope: !1817)
!1842 = !DILocation(line: 5294, column: 13, scope: !1817)
!1843 = !DILocation(line: 5294, column: 26, scope: !1817)
!1844 = !DILocation(line: 5295, column: 9, scope: !1817)
!1845 = !DILocation(line: 5287, column: 24, scope: !1812)
!1846 = !DILocation(line: 5287, column: 9, scope: !1812)
!1847 = distinct !{!1847, !1814, !1848, !1801}
!1848 = !DILocation(line: 5295, column: 9, scope: !1809)
!1849 = !DILocation(line: 5296, column: 23, scope: !1745)
!1850 = !DILocation(line: 5299, column: 23, scope: !1745)
!1851 = !DILocation(line: 5299, column: 53, scope: !1745)
!1852 = !DILocation(line: 5296, column: 9, scope: !1745)
!1853 = !DILocation(line: 5300, column: 35, scope: !1745)
!1854 = !DILocation(line: 5300, column: 16, scope: !1745)
!1855 = !DILocation(line: 5300, column: 9, scope: !1745)
!1856 = !DILocation(line: 5301, column: 5, scope: !1746)
!1857 = !DILocation(line: 5302, column: 5, scope: !1737)
!1858 = !DILocation(line: 5303, column: 1, scope: !1737)
!1859 = !DISubprogram(name: "PyTuple_New", scope: !1860, file: !1860, line: 30, type: !1861, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1860 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/tupleobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "a28bb551a5639c1da2ed4c77902350fe")
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!6, !12}
!1863 = !DISubprogram(name: "PyBytes_FromStringAndSize", scope: !1864, file: !1864, line: 37, type: !1865, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1864 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/bytesobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "5c90d9342057aefb0cd1bab6cfdd9cf0")
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!6, !32, !12}
!1867 = !DISubprogram(name: "PyUnicode_FromStringAndSize", scope: !1868, file: !1868, line: 130, type: !1865, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1868 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/unicodeobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "91a8207950c5b174a776ca9df9eddf7a")
!1869 = !DISubprogram(name: "PyImport_AddModule", scope: !1870, file: !1870, line: 43, type: !1871, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1870 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/import.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "82514711531d5084b7ab372000e8a90f")
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!6, !32}
!1873 = !DISubprogram(name: "PyObject_SetAttrString", scope: !8, file: !8, line: 248, type: !1731, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1874 = distinct !DISubprogram(name: "__Pyx_InitGlobals", scope: !3, file: !3, line: 2966, type: !566, scopeLine: 2966, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1875)
!1875 = !{!1876}
!1876 = !DILabel(scope: !1874, name: "__pyx_L1_error", file: !3, line: 2974)
!1877 = !DILocation(line: 2967, column: 7, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !1874, file: !3, line: 2967, column: 7)
!1879 = !DILocation(line: 2967, column: 43, scope: !1878)
!1880 = !DILocation(line: 2967, column: 7, scope: !1874)
!1881 = !DILocation(line: 2967, column: 48, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1883, file: !3, line: 2967, column: 48)
!1883 = distinct !DILexicalBlock(scope: !1878, file: !3, line: 2967, column: 48)
!1884 = !DILocation(line: 2967, column: 48, scope: !1883)
!1885 = !DILocation(line: 2968, column: 17, scope: !1874)
!1886 = !DILocation(line: 2968, column: 15, scope: !1874)
!1887 = !DILocation(line: 2968, column: 40, scope: !1888)
!1888 = distinct !DILexicalBlock(scope: !1874, file: !3, line: 2968, column: 40)
!1889 = !DILocation(line: 2968, column: 40, scope: !1874)
!1890 = !DILocation(line: 2968, column: 64, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1892, file: !3, line: 2968, column: 64)
!1892 = distinct !DILexicalBlock(scope: !1888, file: !3, line: 2968, column: 64)
!1893 = !DILocation(line: 2968, column: 64, scope: !1892)
!1894 = !DILocation(line: 2969, column: 24, scope: !1874)
!1895 = !DILocation(line: 2969, column: 22, scope: !1874)
!1896 = !DILocation(line: 2969, column: 55, scope: !1897)
!1897 = distinct !DILexicalBlock(scope: !1874, file: !3, line: 2969, column: 55)
!1898 = !DILocation(line: 2969, column: 55, scope: !1874)
!1899 = !DILocation(line: 2969, column: 86, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !1901, file: !3, line: 2969, column: 86)
!1901 = distinct !DILexicalBlock(scope: !1897, file: !3, line: 2969, column: 86)
!1902 = !DILocation(line: 2969, column: 86, scope: !1901)
!1903 = !DILocation(line: 2970, column: 24, scope: !1874)
!1904 = !DILocation(line: 2970, column: 22, scope: !1874)
!1905 = !DILocation(line: 2970, column: 55, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !1874, file: !3, line: 2970, column: 55)
!1907 = !DILocation(line: 2970, column: 55, scope: !1874)
!1908 = !DILocation(line: 2970, column: 86, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1910, file: !3, line: 2970, column: 86)
!1910 = distinct !DILexicalBlock(scope: !1906, file: !3, line: 2970, column: 86)
!1911 = !DILocation(line: 2970, column: 86, scope: !1910)
!1912 = !DILocation(line: 2971, column: 25, scope: !1874)
!1913 = !DILocation(line: 2971, column: 23, scope: !1874)
!1914 = !DILocation(line: 2971, column: 57, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1874, file: !3, line: 2971, column: 57)
!1916 = !DILocation(line: 2971, column: 57, scope: !1874)
!1917 = !DILocation(line: 2971, column: 89, scope: !1918)
!1918 = distinct !DILexicalBlock(scope: !1919, file: !3, line: 2971, column: 89)
!1919 = distinct !DILexicalBlock(scope: !1915, file: !3, line: 2971, column: 89)
!1920 = !DILocation(line: 2971, column: 89, scope: !1919)
!1921 = !DILocation(line: 2972, column: 21, scope: !1874)
!1922 = !DILocation(line: 2972, column: 19, scope: !1874)
!1923 = !DILocation(line: 2972, column: 45, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1874, file: !3, line: 2972, column: 45)
!1925 = !DILocation(line: 2972, column: 45, scope: !1874)
!1926 = !DILocation(line: 2972, column: 73, scope: !1927)
!1927 = distinct !DILexicalBlock(scope: !1928, file: !3, line: 2972, column: 73)
!1928 = distinct !DILexicalBlock(scope: !1924, file: !3, line: 2972, column: 73)
!1929 = !DILocation(line: 2972, column: 73, scope: !1928)
!1930 = !DILocation(line: 2973, column: 3, scope: !1874)
!1931 = !DILocation(line: 2974, column: 3, scope: !1874)
!1932 = !DILocation(line: 2975, column: 3, scope: !1874)
!1933 = !DILocation(line: 2976, column: 1, scope: !1874)
!1934 = !DISubprogram(name: "PyObject_SetAttr", scope: !8, file: !8, line: 251, type: !163, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1935 = !DISubprogram(name: "PyImport_GetModuleDict", scope: !1870, file: !1870, line: 34, type: !504, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1936 = !DISubprogram(name: "PyDict_GetItemString", scope: !1730, file: !1730, line: 57, type: !1632, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1937 = distinct !DISubprogram(name: "__Pyx_InitCachedBuiltins", scope: !3, file: !3, line: 2917, type: !566, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1938)
!1938 = !{!1939}
!1939 = !DILabel(scope: !1937, name: "__pyx_L1_error", file: !3, line: 2920)
!1940 = !DILocation(line: 2918, column: 51, scope: !1937)
!1941 = !DILocation(line: 2918, column: 30, scope: !1937)
!1942 = !DILocation(line: 2918, column: 28, scope: !1937)
!1943 = !DILocation(line: 2918, column: 79, scope: !1944)
!1944 = distinct !DILexicalBlock(scope: !1937, file: !3, line: 2918, column: 78)
!1945 = !DILocation(line: 2918, column: 78, scope: !1937)
!1946 = !DILocation(line: 2918, column: 105, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1948, file: !3, line: 2918, column: 105)
!1948 = distinct !DILexicalBlock(scope: !1944, file: !3, line: 2918, column: 105)
!1949 = !DILocation(line: 2918, column: 105, scope: !1948)
!1950 = !DILocation(line: 2919, column: 3, scope: !1937)
!1951 = !DILocation(line: 2920, column: 3, scope: !1937)
!1952 = !DILocation(line: 2921, column: 3, scope: !1937)
!1953 = !DILocation(line: 2922, column: 1, scope: !1937)
!1954 = distinct !DISubprogram(name: "__Pyx_InitCachedConstants", scope: !3, file: !3, line: 2924, type: !566, scopeLine: 2924, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1955)
!1955 = !{!1956}
!1956 = !DILabel(scope: !1954, name: "__pyx_L1_error", file: !3, line: 2961)
!1957 = !DILocation(line: 2935, column: 34, scope: !1954)
!1958 = !DILocation(line: 2935, column: 18, scope: !1954)
!1959 = !DILocation(line: 2935, column: 16, scope: !1954)
!1960 = !DILocation(line: 2935, column: 83, scope: !1961)
!1961 = distinct !DILexicalBlock(scope: !1954, file: !3, line: 2935, column: 83)
!1962 = !DILocation(line: 2935, column: 83, scope: !1954)
!1963 = !DILocation(line: 2935, column: 108, scope: !1964)
!1964 = distinct !DILexicalBlock(scope: !1965, file: !3, line: 2935, column: 108)
!1965 = distinct !DILexicalBlock(scope: !1961, file: !3, line: 2935, column: 108)
!1966 = !DILocation(line: 2935, column: 108, scope: !1965)
!1967 = !DILocation(line: 2946, column: 36, scope: !1954)
!1968 = !DILocation(line: 2946, column: 56, scope: !1954)
!1969 = !DILocation(line: 2946, column: 77, scope: !1954)
!1970 = !DILocation(line: 2946, column: 20, scope: !1954)
!1971 = !DILocation(line: 2946, column: 18, scope: !1954)
!1972 = !DILocation(line: 2946, column: 102, scope: !1973)
!1973 = distinct !DILexicalBlock(scope: !1954, file: !3, line: 2946, column: 102)
!1974 = !DILocation(line: 2946, column: 102, scope: !1954)
!1975 = !DILocation(line: 2946, column: 129, scope: !1976)
!1976 = distinct !DILexicalBlock(scope: !1977, file: !3, line: 2946, column: 129)
!1977 = distinct !DILexicalBlock(scope: !1973, file: !3, line: 2946, column: 129)
!1978 = !DILocation(line: 2946, column: 129, scope: !1977)
!1979 = !DILocation(line: 2955, column: 36, scope: !1954)
!1980 = !DILocation(line: 2955, column: 56, scope: !1954)
!1981 = !DILocation(line: 2955, column: 80, scope: !1954)
!1982 = !DILocation(line: 2955, column: 101, scope: !1954)
!1983 = !DILocation(line: 2955, column: 128, scope: !1954)
!1984 = !DILocation(line: 2955, column: 20, scope: !1954)
!1985 = !DILocation(line: 2955, column: 18, scope: !1954)
!1986 = !DILocation(line: 2955, column: 155, scope: !1987)
!1987 = distinct !DILexicalBlock(scope: !1954, file: !3, line: 2955, column: 155)
!1988 = !DILocation(line: 2955, column: 155, scope: !1954)
!1989 = !DILocation(line: 2955, column: 182, scope: !1990)
!1990 = distinct !DILexicalBlock(scope: !1991, file: !3, line: 2955, column: 182)
!1991 = distinct !DILexicalBlock(scope: !1987, file: !3, line: 2955, column: 182)
!1992 = !DILocation(line: 2955, column: 182, scope: !1991)
!1993 = !DILocation(line: 2958, column: 33, scope: !1954)
!1994 = !DILocation(line: 2958, column: 20, scope: !1954)
!1995 = !DILocation(line: 2958, column: 294, scope: !1996)
!1996 = distinct !DILexicalBlock(scope: !1954, file: !3, line: 2958, column: 294)
!1997 = !DILocation(line: 2958, column: 294, scope: !1954)
!1998 = !DILocation(line: 2958, column: 323, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !2000, file: !3, line: 2958, column: 323)
!2000 = distinct !DILexicalBlock(scope: !1996, file: !3, line: 2958, column: 323)
!2001 = !DILocation(line: 2958, column: 323, scope: !2000)
!2002 = !DILocation(line: 2960, column: 3, scope: !1954)
!2003 = !DILocation(line: 2961, column: 3, scope: !1954)
!2004 = !DILocation(line: 2963, column: 3, scope: !1954)
!2005 = !DILocation(line: 2964, column: 1, scope: !1954)
!2006 = distinct !DISubprogram(name: "__Pyx_modinit_global_init_code", scope: !3, file: !3, line: 2986, type: !566, scopeLine: 2986, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2007 = !DILocation(line: 2991, column: 3, scope: !2006)
!2008 = distinct !DISubprogram(name: "__Pyx_modinit_variable_export_code", scope: !3, file: !3, line: 2994, type: !566, scopeLine: 2994, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2009 = !DILocation(line: 2999, column: 3, scope: !2008)
!2010 = distinct !DISubprogram(name: "__Pyx_modinit_function_export_code", scope: !3, file: !3, line: 3002, type: !566, scopeLine: 3002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2011 = !DILocation(line: 3007, column: 3, scope: !2010)
!2012 = distinct !DISubprogram(name: "__Pyx_modinit_type_init_code", scope: !3, file: !3, line: 3010, type: !566, scopeLine: 3010, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2013)
!2013 = !{!2014, !2015, !2016, !2017}
!2014 = !DILocalVariable(name: "__pyx_lineno", scope: !2012, file: !3, line: 3012, type: !54)
!2015 = !DILocalVariable(name: "__pyx_filename", scope: !2012, file: !3, line: 3013, type: !32)
!2016 = !DILocalVariable(name: "__pyx_clineno", scope: !2012, file: !3, line: 3014, type: !54)
!2017 = !DILabel(scope: !2012, name: "__pyx_L1_error", file: !3, line: 3029)
!2018 = !DILocation(line: 3012, column: 3, scope: !2012)
!2019 = !DILocation(line: 3012, column: 7, scope: !2012)
!2020 = !DILocation(line: 3013, column: 3, scope: !2012)
!2021 = !DILocation(line: 3013, column: 15, scope: !2012)
!2022 = !DILocation(line: 3014, column: 3, scope: !2012)
!2023 = !DILocation(line: 3014, column: 7, scope: !2012)
!2024 = !DILocation(line: 3017, column: 7, scope: !2025)
!2025 = distinct !DILexicalBlock(scope: !2012, file: !3, line: 3017, column: 7)
!2026 = !DILocation(line: 3017, column: 77, scope: !2025)
!2027 = !DILocation(line: 3017, column: 7, scope: !2012)
!2028 = !DILocation(line: 3017, column: 82, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !2030, file: !3, line: 3017, column: 82)
!2030 = distinct !DILexicalBlock(scope: !2025, file: !3, line: 3017, column: 82)
!2031 = !DILocation(line: 3017, column: 82, scope: !2030)
!2032 = !DILocation(line: 3021, column: 62, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !2012, file: !3, line: 3021, column: 7)
!2034 = !{!1364, !1367, i64 288}
!2035 = !{!1364, !1253, i64 144}
!2036 = !DILocation(line: 0, scope: !2033)
!2037 = !DILocation(line: 3021, column: 7, scope: !2012)
!2038 = !DILocation(line: 3022, column: 72, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !2033, file: !3, line: 3021, column: 238)
!2040 = !DILocation(line: 3023, column: 3, scope: !2039)
!2041 = !DILocation(line: 3024, column: 24, scope: !2042)
!2042 = distinct !DILexicalBlock(scope: !2012, file: !3, line: 3024, column: 7)
!2043 = !DILocation(line: 3024, column: 33, scope: !2042)
!2044 = !DILocation(line: 3024, column: 7, scope: !2042)
!2045 = !DILocation(line: 3024, column: 132, scope: !2042)
!2046 = !DILocation(line: 3024, column: 7, scope: !2012)
!2047 = !DILocation(line: 3024, column: 137, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !2049, file: !3, line: 3024, column: 137)
!2049 = distinct !DILexicalBlock(scope: !2042, file: !3, line: 3024, column: 137)
!2050 = !DILocation(line: 3024, column: 137, scope: !2049)
!2051 = !DILocation(line: 3025, column: 7, scope: !2052)
!2052 = distinct !DILexicalBlock(scope: !2012, file: !3, line: 3025, column: 7)
!2053 = !DILocation(line: 3025, column: 94, scope: !2052)
!2054 = !DILocation(line: 3025, column: 7, scope: !2012)
!2055 = !DILocation(line: 3025, column: 99, scope: !2056)
!2056 = distinct !DILexicalBlock(scope: !2057, file: !3, line: 3025, column: 99)
!2057 = distinct !DILexicalBlock(scope: !2052, file: !3, line: 3025, column: 99)
!2058 = !DILocation(line: 3025, column: 99, scope: !2057)
!2059 = !DILocation(line: 3026, column: 59, scope: !2012)
!2060 = !DILocation(line: 3028, column: 3, scope: !2012)
!2061 = !DILocation(line: 3029, column: 3, scope: !2012)
!2062 = !DILocation(line: 3031, column: 3, scope: !2012)
!2063 = !DILocation(line: 3032, column: 1, scope: !2012)
!2064 = distinct !DISubprogram(name: "__Pyx_modinit_type_import_code", scope: !3, file: !3, line: 3034, type: !566, scopeLine: 3034, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2065 = !DILocation(line: 3039, column: 3, scope: !2064)
!2066 = distinct !DISubprogram(name: "__Pyx_modinit_variable_import_code", scope: !3, file: !3, line: 3042, type: !566, scopeLine: 3042, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2067 = !DILocation(line: 3047, column: 3, scope: !2066)
!2068 = distinct !DISubprogram(name: "__Pyx_modinit_function_import_code", scope: !3, file: !3, line: 3050, type: !566, scopeLine: 3050, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!2069 = !DILocation(line: 3055, column: 3, scope: !2068)
!2070 = !DISubprogram(name: "PyCMethod_New", scope: !234, file: !234, line: 50, type: !2071, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2071 = !DISubroutineType(types: !2072)
!2072 = !{!6, !391, !6, !6, !20}
!2073 = !DISubprogram(name: "PyDict_SetItem", scope: !1730, file: !1730, line: 24, type: !163, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2074 = !DISubprogram(name: "PyDict_New", scope: !1730, file: !1730, line: 21, type: !504, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2075 = distinct !DISubprogram(name: "__Pyx_AddTraceback", scope: !3, file: !3, line: 4676, type: !2076, scopeLine: 4677, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2078)
!2076 = !DISubroutineType(types: !2077)
!2077 = !{null, !32, !54, !54, !32}
!2078 = !{!2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089}
!2079 = !DILocalVariable(name: "funcname", arg: 1, scope: !2075, file: !3, line: 4676, type: !32)
!2080 = !DILocalVariable(name: "c_line", arg: 2, scope: !2075, file: !3, line: 4676, type: !54)
!2081 = !DILocalVariable(name: "py_line", arg: 3, scope: !2075, file: !3, line: 4677, type: !54)
!2082 = !DILocalVariable(name: "filename", arg: 4, scope: !2075, file: !3, line: 4677, type: !32)
!2083 = !DILocalVariable(name: "py_code", scope: !2075, file: !3, line: 4678, type: !397)
!2084 = !DILocalVariable(name: "py_frame", scope: !2075, file: !3, line: 4679, type: !1124)
!2085 = !DILocalVariable(name: "tstate", scope: !2075, file: !3, line: 4680, type: !1110)
!2086 = !DILocalVariable(name: "ptype", scope: !2075, file: !3, line: 4681, type: !6)
!2087 = !DILocalVariable(name: "pvalue", scope: !2075, file: !3, line: 4681, type: !6)
!2088 = !DILocalVariable(name: "ptraceback", scope: !2075, file: !3, line: 4681, type: !6)
!2089 = !DILabel(scope: !2075, name: "bad", file: !3, line: 4710)
!2090 = !DILocation(line: 4676, column: 44, scope: !2075)
!2091 = !DILocation(line: 4676, column: 58, scope: !2075)
!2092 = !DILocation(line: 4677, column: 36, scope: !2075)
!2093 = !DILocation(line: 4677, column: 57, scope: !2075)
!2094 = !DILocation(line: 4678, column: 5, scope: !2075)
!2095 = !DILocation(line: 4678, column: 19, scope: !2075)
!2096 = !DILocation(line: 4679, column: 5, scope: !2075)
!2097 = !DILocation(line: 4679, column: 20, scope: !2075)
!2098 = !DILocation(line: 4680, column: 5, scope: !2075)
!2099 = !DILocation(line: 4680, column: 20, scope: !2075)
!2100 = !DILocation(line: 4680, column: 29, scope: !2075)
!2101 = !DILocation(line: 4681, column: 5, scope: !2075)
!2102 = !DILocation(line: 4681, column: 15, scope: !2075)
!2103 = !DILocation(line: 4681, column: 23, scope: !2075)
!2104 = !DILocation(line: 4681, column: 32, scope: !2075)
!2105 = !DILocation(line: 4682, column: 9, scope: !2106)
!2106 = distinct !DILexicalBlock(scope: !2075, file: !3, line: 4682, column: 9)
!2107 = !DILocation(line: 4682, column: 9, scope: !2075)
!2108 = !DILocation(line: 4683, column: 42, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !2106, file: !3, line: 4682, column: 17)
!2110 = !DILocation(line: 4683, column: 50, scope: !2109)
!2111 = !DILocation(line: 4683, column: 18, scope: !2109)
!2112 = !DILocation(line: 4683, column: 16, scope: !2109)
!2113 = !DILocation(line: 4684, column: 5, scope: !2109)
!2114 = !DILocation(line: 4685, column: 38, scope: !2075)
!2115 = !DILocation(line: 4685, column: 48, scope: !2075)
!2116 = !DILocation(line: 4685, column: 47, scope: !2075)
!2117 = !DILocation(line: 4685, column: 57, scope: !2075)
!2118 = !DILocation(line: 4685, column: 15, scope: !2075)
!2119 = !DILocation(line: 4685, column: 13, scope: !2075)
!2120 = !DILocation(line: 4686, column: 10, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !2075, file: !3, line: 4686, column: 9)
!2122 = !DILocation(line: 4686, column: 9, scope: !2075)
!2123 = !DILocation(line: 4687, column: 31, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !2121, file: !3, line: 4686, column: 19)
!2125 = !DILocation(line: 4687, column: 9, scope: !2124)
!2126 = !DILocation(line: 4689, column: 13, scope: !2124)
!2127 = !DILocation(line: 4689, column: 23, scope: !2124)
!2128 = !DILocation(line: 4689, column: 31, scope: !2124)
!2129 = !DILocation(line: 4689, column: 40, scope: !2124)
!2130 = !DILocation(line: 4688, column: 19, scope: !2124)
!2131 = !DILocation(line: 4688, column: 17, scope: !2124)
!2132 = !DILocation(line: 4690, column: 14, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2124, file: !3, line: 4690, column: 13)
!2134 = !DILocation(line: 4690, column: 13, scope: !2124)
!2135 = !DILocation(line: 4693, column: 13, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2133, file: !3, line: 4690, column: 23)
!2137 = !DILocation(line: 4694, column: 13, scope: !2136)
!2138 = !DILocation(line: 4695, column: 13, scope: !2136)
!2139 = !DILocation(line: 4696, column: 13, scope: !2136)
!2140 = !DILocation(line: 4698, column: 33, scope: !2124)
!2141 = !DILocation(line: 4698, column: 41, scope: !2124)
!2142 = !DILocation(line: 4698, column: 48, scope: !2124)
!2143 = !DILocation(line: 4698, column: 56, scope: !2124)
!2144 = !DILocation(line: 4698, column: 9, scope: !2124)
!2145 = !DILocation(line: 4699, column: 34, scope: !2124)
!2146 = !DILocation(line: 4699, column: 44, scope: !2124)
!2147 = !DILocation(line: 4699, column: 43, scope: !2124)
!2148 = !DILocation(line: 4699, column: 53, scope: !2124)
!2149 = !DILocation(line: 4699, column: 62, scope: !2124)
!2150 = !DILocation(line: 4699, column: 9, scope: !2124)
!2151 = !DILocation(line: 4700, column: 5, scope: !2124)
!2152 = !DILocation(line: 4702, column: 9, scope: !2075)
!2153 = !DILocation(line: 4703, column: 9, scope: !2075)
!2154 = !DILocation(line: 4704, column: 9, scope: !2075)
!2155 = !DILocation(line: 4701, column: 16, scope: !2075)
!2156 = !DILocation(line: 4701, column: 14, scope: !2075)
!2157 = !DILocation(line: 4707, column: 10, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2075, file: !3, line: 4707, column: 9)
!2159 = !DILocation(line: 4707, column: 9, scope: !2075)
!2160 = !DILocation(line: 4707, column: 20, scope: !2158)
!2161 = !DILocation(line: 4708, column: 5, scope: !2075)
!2162 = !{!2163, !1336, i64 108}
!2163 = !{!"_frame", !1365, i64 0, !1253, i64 24, !1253, i64 32, !1253, i64 40, !1253, i64 48, !1253, i64 56, !1253, i64 64, !1253, i64 72, !1253, i64 80, !1254, i64 88, !1254, i64 89, !1253, i64 96, !1336, i64 104, !1336, i64 108, !1336, i64 112, !1254, i64 116, !1254, i64 120, !1254, i64 360}
!2164 = !DILocation(line: 4709, column: 22, scope: !2075)
!2165 = !DILocation(line: 4709, column: 5, scope: !2075)
!2166 = !DILocation(line: 4710, column: 1, scope: !2075)
!2167 = !DILocation(line: 4711, column: 5, scope: !2075)
!2168 = !DILocation(line: 4712, column: 5, scope: !2075)
!2169 = !DILocation(line: 4713, column: 1, scope: !2075)
!2170 = !DISubprogram(name: "PyErr_Occurred", scope: !1725, file: !1725, line: 17, type: !504, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2171 = !DISubprogram(name: "Py_GetVersion", scope: !2172, file: !2172, line: 57, type: !2173, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2172 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/pylifecycle.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "3f4f9ec386cff013ceab3484413ee9cd")
!2173 = !DISubroutineType(types: !2174)
!2174 = !{!32}
!2175 = !DISubprogram(name: "PyOS_snprintf", scope: !1725, file: !1725, line: 312, type: !2176, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{!54, !48, !304, !32, null}
!2178 = !DISubprogram(name: "PyErr_WarnEx", scope: !2179, file: !2179, line: 11, type: !2180, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2179 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/warnings.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "53a18ae6762e1aea09c0fa2fc0ab5640")
!2180 = !DISubroutineType(types: !2181)
!2181 = !{!54, !6, !32, !12}
!2182 = distinct !DISubprogram(name: "__Pyx_InitStrings", scope: !3, file: !3, line: 5306, type: !2183, scopeLine: 5306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2186)
!2183 = !DISubroutineType(types: !2184)
!2184 = !{!54, !2185}
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!2186 = !{!2187}
!2187 = !DILocalVariable(name: "t", arg: 1, scope: !2182, file: !3, line: 5306, type: !2185)
!2188 = !DILocation(line: 5306, column: 52, scope: !2182)
!2189 = !DILocation(line: 5307, column: 5, scope: !2182)
!2190 = !DILocation(line: 5307, column: 12, scope: !2182)
!2191 = !DILocation(line: 5307, column: 15, scope: !2182)
!2192 = !{!2193, !1253, i64 0}
!2193 = !{!"", !1253, i64 0, !1253, i64 8, !1367, i64 16, !1253, i64 24, !1254, i64 32, !1254, i64 33, !1254, i64 34}
!2194 = !DILocation(line: 5317, column: 13, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2196, file: !3, line: 5317, column: 13)
!2196 = distinct !DILexicalBlock(scope: !2182, file: !3, line: 5307, column: 18)
!2197 = !DILocation(line: 5317, column: 16, scope: !2195)
!2198 = !{!2193, !1254, i64 32}
!2199 = !DILocation(line: 5317, column: 29, scope: !2195)
!2200 = !DILocation(line: 5317, column: 32, scope: !2195)
!2201 = !{!2193, !1254, i64 33}
!2202 = !DILocation(line: 5317, column: 27, scope: !2195)
!2203 = !DILocation(line: 5317, column: 13, scope: !2196)
!2204 = !DILocation(line: 5318, column: 17, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !2206, file: !3, line: 5318, column: 17)
!2206 = distinct !DILexicalBlock(scope: !2195, file: !3, line: 5317, column: 40)
!2207 = !DILocation(line: 5318, column: 20, scope: !2205)
!2208 = !{!2193, !1254, i64 34}
!2209 = !DILocation(line: 5318, column: 17, scope: !2206)
!2210 = !DILocation(line: 5319, column: 52, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2205, file: !3, line: 5318, column: 28)
!2212 = !DILocation(line: 5319, column: 55, scope: !2211)
!2213 = !{!2193, !1253, i64 8}
!2214 = !DILocation(line: 5319, column: 25, scope: !2211)
!2215 = !DILocation(line: 5319, column: 18, scope: !2211)
!2216 = !DILocation(line: 5319, column: 21, scope: !2211)
!2217 = !DILocation(line: 5319, column: 23, scope: !2211)
!2218 = !DILocation(line: 5320, column: 13, scope: !2211)
!2219 = !DILocation(line: 5320, column: 24, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2205, file: !3, line: 5320, column: 24)
!2221 = !DILocation(line: 5320, column: 27, scope: !2220)
!2222 = !{!2193, !1253, i64 24}
!2223 = !DILocation(line: 5320, column: 24, scope: !2205)
!2224 = !DILocation(line: 5321, column: 42, scope: !2225)
!2225 = distinct !DILexicalBlock(scope: !2220, file: !3, line: 5320, column: 37)
!2226 = !DILocation(line: 5321, column: 45, scope: !2225)
!2227 = !DILocation(line: 5321, column: 48, scope: !2225)
!2228 = !DILocation(line: 5321, column: 51, scope: !2225)
!2229 = !{!2193, !1367, i64 16}
!2230 = !DILocation(line: 5321, column: 53, scope: !2225)
!2231 = !DILocation(line: 5321, column: 58, scope: !2225)
!2232 = !DILocation(line: 5321, column: 61, scope: !2225)
!2233 = !DILocation(line: 5321, column: 25, scope: !2225)
!2234 = !DILocation(line: 5321, column: 18, scope: !2225)
!2235 = !DILocation(line: 5321, column: 21, scope: !2225)
!2236 = !DILocation(line: 5321, column: 23, scope: !2225)
!2237 = !DILocation(line: 5322, column: 13, scope: !2225)
!2238 = !DILocation(line: 5323, column: 53, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2220, file: !3, line: 5322, column: 20)
!2240 = !DILocation(line: 5323, column: 56, scope: !2239)
!2241 = !DILocation(line: 5323, column: 59, scope: !2239)
!2242 = !DILocation(line: 5323, column: 62, scope: !2239)
!2243 = !DILocation(line: 5323, column: 64, scope: !2239)
!2244 = !DILocation(line: 5323, column: 25, scope: !2239)
!2245 = !DILocation(line: 5323, column: 18, scope: !2239)
!2246 = !DILocation(line: 5323, column: 21, scope: !2239)
!2247 = !DILocation(line: 5323, column: 23, scope: !2239)
!2248 = !DILocation(line: 5325, column: 9, scope: !2206)
!2249 = !DILocation(line: 5326, column: 47, scope: !2250)
!2250 = distinct !DILexicalBlock(scope: !2195, file: !3, line: 5325, column: 16)
!2251 = !DILocation(line: 5326, column: 50, scope: !2250)
!2252 = !DILocation(line: 5326, column: 53, scope: !2250)
!2253 = !DILocation(line: 5326, column: 56, scope: !2250)
!2254 = !DILocation(line: 5326, column: 58, scope: !2250)
!2255 = !DILocation(line: 5326, column: 21, scope: !2250)
!2256 = !DILocation(line: 5326, column: 14, scope: !2250)
!2257 = !DILocation(line: 5326, column: 17, scope: !2250)
!2258 = !DILocation(line: 5326, column: 19, scope: !2250)
!2259 = !DILocation(line: 5329, column: 15, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2196, file: !3, line: 5329, column: 13)
!2261 = !DILocation(line: 5329, column: 18, scope: !2260)
!2262 = !DILocation(line: 5329, column: 14, scope: !2260)
!2263 = !DILocation(line: 5329, column: 13, scope: !2196)
!2264 = !DILocation(line: 5330, column: 13, scope: !2260)
!2265 = !DILocation(line: 5331, column: 28, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2196, file: !3, line: 5331, column: 13)
!2267 = !DILocation(line: 5331, column: 31, scope: !2266)
!2268 = !DILocation(line: 5331, column: 27, scope: !2266)
!2269 = !DILocation(line: 5331, column: 13, scope: !2266)
!2270 = !DILocation(line: 5331, column: 34, scope: !2266)
!2271 = !DILocation(line: 5331, column: 13, scope: !2196)
!2272 = !DILocation(line: 5332, column: 13, scope: !2266)
!2273 = !DILocation(line: 5333, column: 9, scope: !2196)
!2274 = distinct !{!2274, !2189, !2275, !1801}
!2275 = !DILocation(line: 5334, column: 5, scope: !2182)
!2276 = !DILocation(line: 5335, column: 5, scope: !2182)
!2277 = !DILocation(line: 5336, column: 1, scope: !2182)
!2278 = !DISubprogram(name: "PyLong_FromLong", scope: !374, file: !374, line: 18, type: !2279, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{!6, !18}
!2281 = !DISubprogram(name: "PyUnicode_InternFromString", scope: !1868, file: !1868, line: 265, type: !1871, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2282 = !DISubprogram(name: "PyUnicode_Decode", scope: !1868, file: !1868, line: 359, type: !2283, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!6, !32, !12, !32, !32}
!2285 = !DISubprogram(name: "PyObject_Hash", scope: !8, file: !8, line: 259, type: !168, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2286 = distinct !DISubprogram(name: "__Pyx_GetBuiltinName", scope: !3, file: !3, line: 3335, type: !63, scopeLine: 3335, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2287)
!2287 = !{!2288, !2289}
!2288 = !DILocalVariable(name: "name", arg: 1, scope: !2286, file: !3, line: 3335, type: !6)
!2289 = !DILocalVariable(name: "result", scope: !2286, file: !3, line: 3336, type: !6)
!2290 = !DILocation(line: 3335, column: 49, scope: !2286)
!2291 = !DILocation(line: 3336, column: 5, scope: !2286)
!2292 = !DILocation(line: 3336, column: 15, scope: !2286)
!2293 = !DILocation(line: 3336, column: 50, scope: !2286)
!2294 = !DILocation(line: 3336, column: 59, scope: !2286)
!2295 = !DILocation(line: 3336, column: 24, scope: !2286)
!2296 = !DILocation(line: 3337, column: 9, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 3337, column: 9)
!2298 = !DILocation(line: 3337, column: 9, scope: !2286)
!2299 = !DILocation(line: 3338, column: 22, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2297, file: !3, line: 3337, column: 28)
!2301 = !DILocation(line: 3340, column: 41, scope: !2300)
!2302 = !DILocation(line: 3338, column: 9, scope: !2300)
!2303 = !DILocation(line: 3344, column: 5, scope: !2300)
!2304 = !DILocation(line: 3345, column: 12, scope: !2286)
!2305 = !DILocation(line: 3346, column: 1, scope: !2286)
!2306 = !DILocation(line: 3345, column: 5, scope: !2286)
!2307 = distinct !DISubprogram(name: "__Pyx_PyObject_GetAttrStr", scope: !3, file: !3, line: 3322, type: !77, scopeLine: 3322, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2308)
!2308 = !{!2309, !2310, !2311}
!2309 = !DILocalVariable(name: "obj", arg: 1, scope: !2307, file: !3, line: 3322, type: !6)
!2310 = !DILocalVariable(name: "attr_name", arg: 2, scope: !2307, file: !3, line: 3322, type: !6)
!2311 = !DILocalVariable(name: "tp", scope: !2307, file: !3, line: 3323, type: !20)
!2312 = !DILocation(line: 3322, column: 68, scope: !2307)
!2313 = !DILocation(line: 3322, column: 83, scope: !2307)
!2314 = !DILocation(line: 3323, column: 5, scope: !2307)
!2315 = !DILocation(line: 3323, column: 19, scope: !2307)
!2316 = !DILocation(line: 3323, column: 24, scope: !2307)
!2317 = !{!1366, !1253, i64 8}
!2318 = !DILocation(line: 3324, column: 9, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 3324, column: 9)
!2320 = !DILocation(line: 3324, column: 9, scope: !2307)
!2321 = !DILocation(line: 3325, column: 16, scope: !2319)
!2322 = !DILocation(line: 3325, column: 20, scope: !2319)
!2323 = !DILocation(line: 3325, column: 32, scope: !2319)
!2324 = !DILocation(line: 3325, column: 37, scope: !2319)
!2325 = !DILocation(line: 3325, column: 9, scope: !2319)
!2326 = !DILocation(line: 3330, column: 29, scope: !2307)
!2327 = !DILocation(line: 3330, column: 34, scope: !2307)
!2328 = !DILocation(line: 3330, column: 12, scope: !2307)
!2329 = !DILocation(line: 3330, column: 5, scope: !2307)
!2330 = !DILocation(line: 3331, column: 1, scope: !2307)
!2331 = !DISubprogram(name: "PyErr_Format", scope: !1725, file: !1725, line: 174, type: !2332, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!6, !6, !32, null}
!2334 = !DISubprogram(name: "PyObject_GetAttr", scope: !8, file: !8, line: 250, type: !77, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2335 = !DISubprogram(name: "PyTuple_Pack", scope: !1860, file: !1860, line: 35, type: !2336, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2336 = !DISubroutineType(types: !2337)
!2337 = !{!6, !12, null}
!2338 = !DISubprogram(name: "PyCode_New", scope: !401, file: !401, line: 117, type: !2339, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{!397, !54, !54, !54, !54, !54, !6, !6, !6, !6, !6, !6, !6, !6, !54, !6}
!2341 = !DISubprogram(name: "PyType_Ready", scope: !8, file: !8, line: 233, type: !2342, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2342 = !DISubroutineType(types: !2343)
!2343 = !{!54, !20}
!2344 = distinct !DISubprogram(name: "__Pyx_setup_reduce", scope: !3, file: !3, line: 4399, type: !94, scopeLine: 4399, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2345)
!2345 = !{!2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358}
!2346 = !DILocalVariable(name: "type_obj", arg: 1, scope: !2344, file: !3, line: 4399, type: !6)
!2347 = !DILocalVariable(name: "ret", scope: !2344, file: !3, line: 4400, type: !54)
!2348 = !DILocalVariable(name: "object_reduce", scope: !2344, file: !3, line: 4401, type: !6)
!2349 = !DILocalVariable(name: "object_getstate", scope: !2344, file: !3, line: 4402, type: !6)
!2350 = !DILocalVariable(name: "object_reduce_ex", scope: !2344, file: !3, line: 4403, type: !6)
!2351 = !DILocalVariable(name: "reduce", scope: !2344, file: !3, line: 4404, type: !6)
!2352 = !DILocalVariable(name: "reduce_ex", scope: !2344, file: !3, line: 4405, type: !6)
!2353 = !DILocalVariable(name: "reduce_cython", scope: !2344, file: !3, line: 4406, type: !6)
!2354 = !DILocalVariable(name: "setstate", scope: !2344, file: !3, line: 4407, type: !6)
!2355 = !DILocalVariable(name: "setstate_cython", scope: !2344, file: !3, line: 4408, type: !6)
!2356 = !DILocalVariable(name: "getstate", scope: !2344, file: !3, line: 4409, type: !6)
!2357 = !DILabel(scope: !2344, name: "__PYX_BAD", file: !3, line: 4467)
!2358 = !DILabel(scope: !2344, name: "__PYX_GOOD", file: !3, line: 4471)
!2359 = !DILocation(line: 4399, column: 41, scope: !2344)
!2360 = !DILocation(line: 4400, column: 5, scope: !2344)
!2361 = !DILocation(line: 4400, column: 9, scope: !2344)
!2362 = !DILocation(line: 4401, column: 5, scope: !2344)
!2363 = !DILocation(line: 4401, column: 15, scope: !2344)
!2364 = !DILocation(line: 4402, column: 5, scope: !2344)
!2365 = !DILocation(line: 4402, column: 15, scope: !2344)
!2366 = !DILocation(line: 4403, column: 5, scope: !2344)
!2367 = !DILocation(line: 4403, column: 15, scope: !2344)
!2368 = !DILocation(line: 4404, column: 5, scope: !2344)
!2369 = !DILocation(line: 4404, column: 15, scope: !2344)
!2370 = !DILocation(line: 4405, column: 5, scope: !2344)
!2371 = !DILocation(line: 4405, column: 15, scope: !2344)
!2372 = !DILocation(line: 4406, column: 5, scope: !2344)
!2373 = !DILocation(line: 4406, column: 15, scope: !2344)
!2374 = !DILocation(line: 4407, column: 5, scope: !2344)
!2375 = !DILocation(line: 4407, column: 15, scope: !2344)
!2376 = !DILocation(line: 4408, column: 5, scope: !2344)
!2377 = !DILocation(line: 4408, column: 15, scope: !2344)
!2378 = !DILocation(line: 4409, column: 5, scope: !2344)
!2379 = !DILocation(line: 4409, column: 15, scope: !2344)
!2380 = !DILocation(line: 4411, column: 46, scope: !2344)
!2381 = !DILocation(line: 4411, column: 56, scope: !2344)
!2382 = !DILocation(line: 4411, column: 16, scope: !2344)
!2383 = !DILocation(line: 4411, column: 14, scope: !2344)
!2384 = !DILocation(line: 4418, column: 9, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2344, file: !3, line: 4418, column: 9)
!2386 = !DILocation(line: 4418, column: 9, scope: !2344)
!2387 = !DILocation(line: 4420, column: 62, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 4418, column: 19)
!2389 = !DILocation(line: 4420, column: 27, scope: !2388)
!2390 = !DILocation(line: 4420, column: 25, scope: !2388)
!2391 = !DILocation(line: 4427, column: 13, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !2388, file: !3, line: 4427, column: 13)
!2393 = !DILocation(line: 4427, column: 32, scope: !2392)
!2394 = !DILocation(line: 4427, column: 29, scope: !2392)
!2395 = !DILocation(line: 4427, column: 13, scope: !2388)
!2396 = !DILocation(line: 4428, column: 13, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2392, file: !3, line: 4427, column: 42)
!2398 = !DILocation(line: 4430, column: 5, scope: !2388)
!2399 = !DILocation(line: 4432, column: 59, scope: !2344)
!2400 = !DILocation(line: 4432, column: 24, scope: !2344)
!2401 = !DILocation(line: 4432, column: 22, scope: !2344)
!2402 = !DILocation(line: 4432, column: 86, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2344, file: !3, line: 4432, column: 85)
!2404 = !DILocation(line: 4432, column: 85, scope: !2344)
!2405 = !DILocation(line: 4432, column: 104, scope: !2403)
!2406 = !DILocation(line: 4436, column: 43, scope: !2344)
!2407 = !DILocation(line: 4436, column: 53, scope: !2344)
!2408 = !DILocation(line: 4436, column: 17, scope: !2344)
!2409 = !DILocation(line: 4436, column: 15, scope: !2344)
!2410 = !DILocation(line: 4436, column: 79, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2344, file: !3, line: 4436, column: 79)
!2412 = !DILocation(line: 4436, column: 79, scope: !2344)
!2413 = !DILocation(line: 4436, column: 101, scope: !2411)
!2414 = !DILocation(line: 4437, column: 9, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2344, file: !3, line: 4437, column: 9)
!2416 = !DILocation(line: 4437, column: 22, scope: !2415)
!2417 = !DILocation(line: 4437, column: 19, scope: !2415)
!2418 = !DILocation(line: 4437, column: 9, scope: !2344)
!2419 = !DILocation(line: 4439, column: 60, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2415, file: !3, line: 4437, column: 40)
!2421 = !DILocation(line: 4439, column: 25, scope: !2420)
!2422 = !DILocation(line: 4439, column: 23, scope: !2420)
!2423 = !DILocation(line: 4439, column: 84, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2420, file: !3, line: 4439, column: 83)
!2425 = !DILocation(line: 4439, column: 83, scope: !2420)
!2426 = !DILocation(line: 4439, column: 99, scope: !2424)
!2427 = !DILocation(line: 4443, column: 44, scope: !2420)
!2428 = !DILocation(line: 4443, column: 54, scope: !2420)
!2429 = !DILocation(line: 4443, column: 18, scope: !2420)
!2430 = !DILocation(line: 4443, column: 16, scope: !2420)
!2431 = !DILocation(line: 4443, column: 77, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2420, file: !3, line: 4443, column: 77)
!2433 = !DILocation(line: 4443, column: 77, scope: !2420)
!2434 = !DILocation(line: 4443, column: 96, scope: !2432)
!2435 = !DILocation(line: 4444, column: 13, scope: !2436)
!2436 = distinct !DILexicalBlock(scope: !2420, file: !3, line: 4444, column: 13)
!2437 = !DILocation(line: 4444, column: 23, scope: !2436)
!2438 = !DILocation(line: 4444, column: 20, scope: !2436)
!2439 = !DILocation(line: 4444, column: 37, scope: !2436)
!2440 = !DILocation(line: 4444, column: 68, scope: !2436)
!2441 = !DILocation(line: 4444, column: 76, scope: !2436)
!2442 = !DILocation(line: 4444, column: 40, scope: !2436)
!2443 = !DILocation(line: 4444, column: 13, scope: !2420)
!2444 = !DILocation(line: 4445, column: 62, scope: !2445)
!2445 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 4444, column: 102)
!2446 = !DILocation(line: 4445, column: 72, scope: !2445)
!2447 = !DILocation(line: 4445, column: 29, scope: !2445)
!2448 = !DILocation(line: 4445, column: 27, scope: !2445)
!2449 = !DILocation(line: 4446, column: 17, scope: !2450)
!2450 = distinct !DILexicalBlock(scope: !2445, file: !3, line: 4446, column: 17)
!2451 = !DILocation(line: 4446, column: 17, scope: !2445)
!2452 = !DILocation(line: 4447, column: 54, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2450, file: !3, line: 4446, column: 40)
!2454 = !DILocation(line: 4447, column: 65, scope: !2453)
!2455 = !{!1364, !1253, i64 264}
!2456 = !DILocation(line: 4447, column: 74, scope: !2453)
!2457 = !DILocation(line: 4447, column: 92, scope: !2453)
!2458 = !DILocation(line: 4447, column: 23, scope: !2453)
!2459 = !DILocation(line: 4447, column: 21, scope: !2453)
!2460 = !DILocation(line: 4447, column: 112, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2453, file: !3, line: 4447, column: 112)
!2462 = !DILocation(line: 4447, column: 112, scope: !2453)
!2463 = !DILocation(line: 4447, column: 131, scope: !2461)
!2464 = !DILocation(line: 4448, column: 54, scope: !2453)
!2465 = !DILocation(line: 4448, column: 65, scope: !2453)
!2466 = !DILocation(line: 4448, column: 74, scope: !2453)
!2467 = !DILocation(line: 4448, column: 23, scope: !2453)
!2468 = !DILocation(line: 4448, column: 21, scope: !2453)
!2469 = !DILocation(line: 4448, column: 104, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2453, file: !3, line: 4448, column: 104)
!2471 = !DILocation(line: 4448, column: 104, scope: !2453)
!2472 = !DILocation(line: 4448, column: 123, scope: !2470)
!2473 = !DILocation(line: 4449, column: 13, scope: !2453)
!2474 = !DILocation(line: 4449, column: 24, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2450, file: !3, line: 4449, column: 24)
!2476 = !DILocation(line: 4449, column: 34, scope: !2475)
!2477 = !DILocation(line: 4449, column: 31, scope: !2475)
!2478 = !DILocation(line: 4449, column: 48, scope: !2475)
!2479 = !DILocation(line: 4449, column: 51, scope: !2475)
!2480 = !DILocation(line: 4449, column: 24, scope: !2450)
!2481 = !DILocation(line: 4450, column: 17, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2475, file: !3, line: 4449, column: 69)
!2483 = !DILocation(line: 4452, column: 50, scope: !2445)
!2484 = !DILocation(line: 4452, column: 60, scope: !2445)
!2485 = !DILocation(line: 4452, column: 24, scope: !2445)
!2486 = !DILocation(line: 4452, column: 22, scope: !2445)
!2487 = !DILocation(line: 4453, column: 18, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2445, file: !3, line: 4453, column: 17)
!2489 = !DILocation(line: 4453, column: 17, scope: !2445)
!2490 = !DILocation(line: 4453, column: 28, scope: !2488)
!2491 = !DILocation(line: 4454, column: 18, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2445, file: !3, line: 4454, column: 17)
!2493 = !DILocation(line: 4454, column: 27, scope: !2492)
!2494 = !DILocation(line: 4454, column: 58, scope: !2492)
!2495 = !DILocation(line: 4454, column: 68, scope: !2492)
!2496 = !DILocation(line: 4454, column: 30, scope: !2492)
!2497 = !DILocation(line: 4454, column: 17, scope: !2445)
!2498 = !DILocation(line: 4455, column: 68, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2492, file: !3, line: 4454, column: 96)
!2500 = !DILocation(line: 4455, column: 78, scope: !2499)
!2501 = !DILocation(line: 4455, column: 35, scope: !2499)
!2502 = !DILocation(line: 4455, column: 33, scope: !2499)
!2503 = !DILocation(line: 4456, column: 21, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 4456, column: 21)
!2505 = !DILocation(line: 4456, column: 21, scope: !2499)
!2506 = !DILocation(line: 4457, column: 58, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 4456, column: 46)
!2508 = !DILocation(line: 4457, column: 69, scope: !2507)
!2509 = !DILocation(line: 4457, column: 78, scope: !2507)
!2510 = !DILocation(line: 4457, column: 98, scope: !2507)
!2511 = !DILocation(line: 4457, column: 27, scope: !2507)
!2512 = !DILocation(line: 4457, column: 25, scope: !2507)
!2513 = !DILocation(line: 4457, column: 120, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 4457, column: 120)
!2515 = !DILocation(line: 4457, column: 120, scope: !2507)
!2516 = !DILocation(line: 4457, column: 139, scope: !2514)
!2517 = !DILocation(line: 4458, column: 58, scope: !2507)
!2518 = !DILocation(line: 4458, column: 69, scope: !2507)
!2519 = !DILocation(line: 4458, column: 78, scope: !2507)
!2520 = !DILocation(line: 4458, column: 27, scope: !2507)
!2521 = !DILocation(line: 4458, column: 25, scope: !2507)
!2522 = !DILocation(line: 4458, column: 110, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 4458, column: 110)
!2524 = !DILocation(line: 4458, column: 110, scope: !2507)
!2525 = !DILocation(line: 4458, column: 129, scope: !2523)
!2526 = !DILocation(line: 4459, column: 17, scope: !2507)
!2527 = !DILocation(line: 4459, column: 29, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 4459, column: 28)
!2529 = !DILocation(line: 4459, column: 38, scope: !2528)
!2530 = !DILocation(line: 4459, column: 41, scope: !2528)
!2531 = !DILocation(line: 4459, column: 28, scope: !2504)
!2532 = !DILocation(line: 4460, column: 21, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2528, file: !3, line: 4459, column: 59)
!2534 = !DILocation(line: 4462, column: 13, scope: !2499)
!2535 = !DILocation(line: 4463, column: 44, scope: !2445)
!2536 = !DILocation(line: 4463, column: 13, scope: !2445)
!2537 = !DILocation(line: 4464, column: 9, scope: !2445)
!2538 = !DILocation(line: 4465, column: 5, scope: !2420)
!2539 = !DILocation(line: 4466, column: 5, scope: !2344)
!2540 = !DILocation(line: 4467, column: 1, scope: !2344)
!2541 = !DILocation(line: 4468, column: 10, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2344, file: !3, line: 4468, column: 9)
!2543 = !DILocation(line: 4468, column: 9, scope: !2344)
!2544 = !DILocation(line: 4469, column: 22, scope: !2542)
!2545 = !DILocation(line: 4469, column: 98, scope: !2542)
!2546 = !DILocation(line: 4469, column: 109, scope: !2542)
!2547 = !{!1364, !1253, i64 24}
!2548 = !DILocation(line: 4469, column: 9, scope: !2542)
!2549 = !DILocation(line: 4470, column: 9, scope: !2344)
!2550 = !DILocation(line: 4470, column: 5, scope: !2344)
!2551 = !DILocation(line: 4471, column: 1, scope: !2344)
!2552 = !DILocation(line: 4478, column: 5, scope: !2344)
!2553 = !DILocation(line: 4479, column: 5, scope: !2344)
!2554 = !DILocation(line: 4480, column: 5, scope: !2344)
!2555 = !DILocation(line: 4481, column: 5, scope: !2344)
!2556 = !DILocation(line: 4482, column: 5, scope: !2344)
!2557 = !DILocation(line: 4483, column: 12, scope: !2344)
!2558 = !DILocation(line: 4484, column: 1, scope: !2344)
!2559 = !DILocation(line: 4483, column: 5, scope: !2344)
!2560 = distinct !DISubprogram(name: "__pyx_tp_dealloc_6pandas_5_libs_8indexing_NDFrameIndexerBase", scope: !3, file: !3, line: 2692, type: !40, scopeLine: 2692, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2561)
!2561 = !{!2562, !2563, !2564, !2566}
!2562 = !DILocalVariable(name: "o", arg: 1, scope: !2560, file: !3, line: 2692, type: !6)
!2563 = !DILocalVariable(name: "p", scope: !2560, file: !3, line: 2693, type: !306)
!2564 = !DILocalVariable(name: "_py_tmp", scope: !2565, file: !3, line: 2700, type: !6)
!2565 = distinct !DILexicalBlock(scope: !2560, file: !3, line: 2700, column: 3)
!2566 = !DILocalVariable(name: "_py_tmp", scope: !2567, file: !3, line: 2701, type: !6)
!2567 = distinct !DILexicalBlock(scope: !2560, file: !3, line: 2701, column: 3)
!2568 = !DILocation(line: 2692, column: 84, scope: !2560)
!2569 = !DILocation(line: 2693, column: 3, scope: !2560)
!2570 = !DILocation(line: 2693, column: 65, scope: !2560)
!2571 = !DILocation(line: 2693, column: 133, scope: !2560)
!2572 = !DILocation(line: 2695, column: 7, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2560, file: !3, line: 2695, column: 7)
!2574 = !{!1364, !1253, i64 392}
!2575 = !DILocation(line: 0, scope: !2573)
!2576 = !DILocation(line: 2695, column: 100, scope: !2573)
!2577 = !DILocation(line: 2695, column: 104, scope: !2573)
!2578 = !DILocation(line: 2695, column: 7, scope: !2560)
!2579 = !DILocation(line: 2696, column: 43, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2581, file: !3, line: 2696, column: 9)
!2581 = distinct !DILexicalBlock(scope: !2573, file: !3, line: 2695, column: 138)
!2582 = !DILocation(line: 2696, column: 9, scope: !2580)
!2583 = !DILocation(line: 2696, column: 9, scope: !2581)
!2584 = !DILocation(line: 2696, column: 47, scope: !2580)
!2585 = !DILocation(line: 2697, column: 3, scope: !2581)
!2586 = !DILocation(line: 2699, column: 23, scope: !2560)
!2587 = !DILocation(line: 2699, column: 3, scope: !2560)
!2588 = !DILocation(line: 2700, column: 3, scope: !2560)
!2589 = !DILocation(line: 2700, column: 3, scope: !2565)
!2590 = !{!2591, !1253, i64 24}
!2591 = !{!"__pyx_obj_6pandas_5_libs_8indexing_NDFrameIndexerBase", !1366, i64 0, !1367, i64 16, !1253, i64 24, !1253, i64 32}
!2592 = !DILocation(line: 2700, column: 3, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2565, file: !3, line: 2700, column: 3)
!2594 = !DILocation(line: 2700, column: 3, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2593, file: !3, line: 2700, column: 3)
!2596 = !DILocation(line: 2701, column: 3, scope: !2560)
!2597 = !DILocation(line: 2701, column: 3, scope: !2567)
!2598 = !{!2591, !1253, i64 32}
!2599 = !DILocation(line: 2701, column: 3, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2567, file: !3, line: 2701, column: 3)
!2601 = !DILocation(line: 2701, column: 3, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2600, file: !3, line: 2701, column: 3)
!2603 = !DILocation(line: 2702, column: 5, scope: !2560)
!2604 = !DILocation(line: 2702, column: 17, scope: !2560)
!2605 = !{!1364, !1253, i64 320}
!2606 = !DILocation(line: 2702, column: 26, scope: !2560)
!2607 = !DILocation(line: 2702, column: 3, scope: !2560)
!2608 = !DILocation(line: 2703, column: 1, scope: !2560)
!2609 = distinct !DISubprogram(name: "__pyx_tp_traverse_6pandas_5_libs_8indexing_NDFrameIndexerBase", scope: !3, file: !3, line: 2705, type: !214, scopeLine: 2705, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2610)
!2610 = !{!2611, !2612, !2613, !2614, !2615}
!2611 = !DILocalVariable(name: "o", arg: 1, scope: !2609, file: !3, line: 2705, type: !6)
!2612 = !DILocalVariable(name: "v", arg: 2, scope: !2609, file: !3, line: 2705, type: !216)
!2613 = !DILocalVariable(name: "a", arg: 3, scope: !2609, file: !3, line: 2705, type: !5)
!2614 = !DILocalVariable(name: "e", scope: !2609, file: !3, line: 2706, type: !54)
!2615 = !DILocalVariable(name: "p", scope: !2609, file: !3, line: 2707, type: !306)
!2616 = !DILocation(line: 2705, column: 84, scope: !2609)
!2617 = !DILocation(line: 2705, column: 97, scope: !2609)
!2618 = !DILocation(line: 2705, column: 106, scope: !2609)
!2619 = !DILocation(line: 2706, column: 3, scope: !2609)
!2620 = !DILocation(line: 2706, column: 7, scope: !2609)
!2621 = !DILocation(line: 2707, column: 3, scope: !2609)
!2622 = !DILocation(line: 2707, column: 65, scope: !2609)
!2623 = !DILocation(line: 2707, column: 133, scope: !2609)
!2624 = !DILocation(line: 2708, column: 7, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2609, file: !3, line: 2708, column: 7)
!2626 = !DILocation(line: 2708, column: 10, scope: !2625)
!2627 = !DILocation(line: 2708, column: 7, scope: !2609)
!2628 = !DILocation(line: 2709, column: 11, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2625, file: !3, line: 2708, column: 15)
!2630 = !DILocation(line: 2709, column: 14, scope: !2629)
!2631 = !DILocation(line: 2709, column: 17, scope: !2629)
!2632 = !DILocation(line: 2709, column: 22, scope: !2629)
!2633 = !DILocation(line: 2709, column: 9, scope: !2629)
!2634 = !DILocation(line: 2709, column: 7, scope: !2629)
!2635 = !DILocation(line: 2709, column: 30, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 2709, column: 30)
!2637 = !DILocation(line: 2709, column: 30, scope: !2629)
!2638 = !DILocation(line: 2709, column: 40, scope: !2636)
!2639 = !DILocation(line: 2709, column: 33, scope: !2636)
!2640 = !DILocation(line: 2710, column: 3, scope: !2629)
!2641 = !DILocation(line: 2711, column: 3, scope: !2609)
!2642 = !DILocation(line: 2712, column: 1, scope: !2609)
!2643 = distinct !DISubprogram(name: "__pyx_tp_clear_6pandas_5_libs_8indexing_NDFrameIndexerBase", scope: !3, file: !3, line: 2714, type: !94, scopeLine: 2714, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2644)
!2644 = !{!2645, !2646, !2647}
!2645 = !DILocalVariable(name: "o", arg: 1, scope: !2643, file: !3, line: 2714, type: !6)
!2646 = !DILocalVariable(name: "tmp", scope: !2643, file: !3, line: 2715, type: !6)
!2647 = !DILocalVariable(name: "p", scope: !2643, file: !3, line: 2716, type: !306)
!2648 = !DILocation(line: 2714, column: 81, scope: !2643)
!2649 = !DILocation(line: 2715, column: 3, scope: !2643)
!2650 = !DILocation(line: 2715, column: 13, scope: !2643)
!2651 = !DILocation(line: 2716, column: 3, scope: !2643)
!2652 = !DILocation(line: 2716, column: 65, scope: !2643)
!2653 = !DILocation(line: 2716, column: 133, scope: !2643)
!2654 = !DILocation(line: 2717, column: 21, scope: !2643)
!2655 = !DILocation(line: 2717, column: 24, scope: !2643)
!2656 = !DILocation(line: 2717, column: 7, scope: !2643)
!2657 = !DILocation(line: 2718, column: 3, scope: !2643)
!2658 = !DILocation(line: 2718, column: 6, scope: !2643)
!2659 = !DILocation(line: 2718, column: 10, scope: !2643)
!2660 = !DILocation(line: 2718, column: 21, scope: !2643)
!2661 = !DILocation(line: 2719, column: 3, scope: !2643)
!2662 = !DILocation(line: 2721, column: 1, scope: !2643)
!2663 = !DILocation(line: 2720, column: 3, scope: !2643)
!2664 = !DILocation(line: 1473, column: 87, scope: !973)
!2665 = !DILocation(line: 1473, column: 111, scope: !973)
!2666 = !DILocation(line: 1473, column: 133, scope: !973)
!2667 = !DILocation(line: 1474, column: 3, scope: !973)
!2668 = !DILocation(line: 1474, column: 13, scope: !973)
!2669 = !DILocation(line: 1475, column: 3, scope: !973)
!2670 = !DILocation(line: 1475, column: 13, scope: !973)
!2671 = !DILocation(line: 1476, column: 3, scope: !973)
!2672 = !DILocation(line: 1476, column: 7, scope: !973)
!2673 = !DILocation(line: 1477, column: 3, scope: !973)
!2674 = !DILocation(line: 1477, column: 15, scope: !973)
!2675 = !DILocation(line: 1478, column: 3, scope: !973)
!2676 = !DILocation(line: 1478, column: 7, scope: !973)
!2677 = !DILocation(line: 1479, column: 3, scope: !973)
!2678 = !DILocation(line: 1479, column: 7, scope: !973)
!2679 = !DILocation(line: 1484, column: 5, scope: !985)
!2680 = !DILocation(line: 1484, column: 15, scope: !985)
!2681 = !DILocation(line: 1485, column: 9, scope: !989)
!2682 = !DILocation(line: 1485, column: 9, scope: !985)
!2683 = !DILocation(line: 1486, column: 7, scope: !988)
!2684 = !DILocation(line: 1486, column: 18, scope: !988)
!2685 = !DILocation(line: 1487, column: 7, scope: !988)
!2686 = !DILocation(line: 1487, column: 24, scope: !988)
!2687 = !DILocation(line: 1487, column: 35, scope: !988)
!2688 = !{!1365, !1367, i64 16}
!2689 = !DILocation(line: 1488, column: 15, scope: !988)
!2690 = !DILocation(line: 1488, column: 7, scope: !988)
!2691 = !DILocation(line: 1489, column: 30, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !988, file: !3, line: 1488, column: 25)
!2693 = !DILocation(line: 1489, column: 18, scope: !2692)
!2694 = !DILocation(line: 1489, column: 28, scope: !2692)
!2695 = !DILocation(line: 1491, column: 30, scope: !2692)
!2696 = !DILocation(line: 1491, column: 18, scope: !2692)
!2697 = !DILocation(line: 1491, column: 28, scope: !2692)
!2698 = !DILocation(line: 1494, column: 18, scope: !2692)
!2699 = !DILocation(line: 1496, column: 29, scope: !988)
!2700 = !DILocation(line: 1496, column: 17, scope: !988)
!2701 = !DILocation(line: 1496, column: 15, scope: !988)
!2702 = !DILocation(line: 1497, column: 15, scope: !988)
!2703 = !DILocation(line: 1497, column: 7, scope: !988)
!2704 = !DILocation(line: 1499, column: 13, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2706, file: !3, line: 1499, column: 13)
!2706 = distinct !DILexicalBlock(scope: !988, file: !3, line: 1497, column: 25)
!2707 = !{!2708, !1367, i64 24}
!2708 = !{!"", !1366, i64 0, !1367, i64 16, !1367, i64 24, !2709, i64 32, !1253, i64 40}
!2709 = !{!"", !1336, i64 0, !1336, i64 0, !1336, i64 0, !1336, i64 0, !1336, i64 0}
!2710 = !DILocation(line: 1499, column: 13, scope: !2706)
!2711 = !DILocation(line: 1499, column: 100, scope: !2705)
!2712 = !DILocation(line: 1499, column: 93, scope: !2705)
!2713 = !DILocation(line: 1500, column: 14, scope: !2705)
!2714 = !DILocation(line: 1503, column: 13, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2706, file: !3, line: 1503, column: 13)
!2716 = !DILocation(line: 1503, column: 13, scope: !2706)
!2717 = !DILocation(line: 1503, column: 99, scope: !2715)
!2718 = !DILocation(line: 1503, column: 92, scope: !2715)
!2719 = !DILocation(line: 1505, column: 11, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2715, file: !3, line: 1504, column: 14)
!2721 = !DILocation(line: 1505, column: 63, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2723, file: !3, line: 1505, column: 63)
!2723 = distinct !DILexicalBlock(scope: !2720, file: !3, line: 1505, column: 63)
!2724 = !DILocation(line: 1505, column: 63, scope: !2723)
!2725 = !DILocation(line: 1507, column: 7, scope: !2706)
!2726 = !DILocation(line: 1508, column: 11, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !988, file: !3, line: 1508, column: 11)
!2728 = !DILocation(line: 1508, column: 11, scope: !988)
!2729 = !DILocation(line: 1509, column: 13, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2731, file: !3, line: 1509, column: 13)
!2731 = distinct !DILexicalBlock(scope: !2727, file: !3, line: 1508, column: 34)
!2732 = !DILocation(line: 1509, column: 13, scope: !2731)
!2733 = !DILocation(line: 1509, column: 119, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2735, file: !3, line: 1509, column: 119)
!2735 = distinct !DILexicalBlock(scope: !2730, file: !3, line: 1509, column: 119)
!2736 = !DILocation(line: 1509, column: 119, scope: !2735)
!2737 = !DILocation(line: 1510, column: 7, scope: !2731)
!2738 = !DILocation(line: 1511, column: 5, scope: !989)
!2739 = !DILocation(line: 1511, column: 5, scope: !988)
!2740 = !DILocation(line: 1511, column: 16, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !989, file: !3, line: 1511, column: 16)
!2742 = !DILocation(line: 1511, column: 45, scope: !2741)
!2743 = !DILocation(line: 1511, column: 16, scope: !989)
!2744 = !DILocation(line: 1512, column: 7, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 1511, column: 51)
!2746 = !DILocation(line: 1514, column: 19, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 1513, column: 12)
!2748 = !DILocation(line: 1514, column: 7, scope: !2747)
!2749 = !DILocation(line: 1514, column: 17, scope: !2747)
!2750 = !DILocation(line: 1515, column: 19, scope: !2747)
!2751 = !DILocation(line: 1515, column: 7, scope: !2747)
!2752 = !DILocation(line: 1515, column: 17, scope: !2747)
!2753 = !DILocation(line: 1517, column: 32, scope: !985)
!2754 = !DILocation(line: 1517, column: 18, scope: !985)
!2755 = !DILocation(line: 1518, column: 19, scope: !985)
!2756 = !DILocation(line: 1518, column: 17, scope: !985)
!2757 = !DILocation(line: 1519, column: 3, scope: !973)
!2758 = !DILocation(line: 1520, column: 3, scope: !973)
!2759 = !DILocation(line: 1521, column: 3, scope: !973)
!2760 = !DILocation(line: 1522, column: 51, scope: !973)
!2761 = !DILocation(line: 1522, column: 3, scope: !973)
!2762 = !DILocation(line: 1522, column: 82, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2764, file: !3, line: 1522, column: 82)
!2764 = distinct !DILexicalBlock(scope: !973, file: !3, line: 1522, column: 82)
!2765 = !DILocation(line: 1522, column: 82, scope: !2764)
!2766 = !DILocation(line: 1523, column: 3, scope: !973)
!2767 = !DILocation(line: 1524, column: 75, scope: !973)
!2768 = !DILocation(line: 1524, column: 90, scope: !973)
!2769 = !DILocation(line: 1524, column: 104, scope: !973)
!2770 = !DILocation(line: 1524, column: 3, scope: !973)
!2771 = !DILocation(line: 1526, column: 3, scope: !973)
!2772 = !DILocation(line: 1527, column: 3, scope: !973)
!2773 = !DILocation(line: 1528, column: 7, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !973, file: !3, line: 1528, column: 7)
!2775 = !DILocation(line: 1528, column: 7, scope: !973)
!2776 = !DILocation(line: 1528, column: 98, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2778, file: !3, line: 1528, column: 98)
!2778 = distinct !DILexicalBlock(scope: !2774, file: !3, line: 1528, column: 98)
!2779 = !DILocation(line: 1528, column: 98, scope: !2778)
!2780 = !DILocation(line: 1529, column: 142, scope: !973)
!2781 = !DILocation(line: 1529, column: 157, scope: !973)
!2782 = !DILocation(line: 1529, column: 171, scope: !973)
!2783 = !DILocation(line: 1529, column: 13, scope: !973)
!2784 = !DILocation(line: 1529, column: 11, scope: !973)
!2785 = !DILocation(line: 1532, column: 3, scope: !973)
!2786 = !DILocation(line: 1533, column: 3, scope: !973)
!2787 = !DILocation(line: 1534, column: 11, scope: !973)
!2788 = !DILocation(line: 1534, column: 3, scope: !973)
!2789 = !DILocation(line: 1535, column: 3, scope: !973)
!2790 = !DILocation(line: 1537, column: 10, scope: !973)
!2791 = !DILocation(line: 1537, column: 3, scope: !973)
!2792 = !DILocation(line: 1538, column: 1, scope: !973)
!2793 = distinct !DISubprogram(name: "__pyx_tp_new_6pandas_5_libs_8indexing_NDFrameIndexerBase", scope: !3, file: !3, line: 2677, type: !280, scopeLine: 2677, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2794)
!2794 = !{!2795, !2796, !2797, !2798, !2799}
!2795 = !DILocalVariable(name: "t", arg: 1, scope: !2793, file: !3, line: 2677, type: !20)
!2796 = !DILocalVariable(name: "a", arg: 2, scope: !2793, file: !3, line: 2677, type: !6)
!2797 = !DILocalVariable(name: "k", arg: 3, scope: !2793, file: !3, line: 2677, type: !6)
!2798 = !DILocalVariable(name: "p", scope: !2793, file: !3, line: 2678, type: !306)
!2799 = !DILocalVariable(name: "o", scope: !2793, file: !3, line: 2679, type: !6)
!2800 = !DILocation(line: 2677, column: 89, scope: !2793)
!2801 = !DILocation(line: 2677, column: 116, scope: !2793)
!2802 = !DILocation(line: 2677, column: 143, scope: !2793)
!2803 = !DILocation(line: 2678, column: 3, scope: !2793)
!2804 = !DILocation(line: 2678, column: 65, scope: !2793)
!2805 = !DILocation(line: 2679, column: 3, scope: !2793)
!2806 = !DILocation(line: 2679, column: 13, scope: !2793)
!2807 = !DILocation(line: 2680, column: 7, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 2680, column: 7)
!2809 = !{!1364, !1367, i64 168}
!2810 = !DILocation(line: 2680, column: 7, scope: !2793)
!2811 = !DILocation(line: 2681, column: 11, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2680, column: 60)
!2813 = !DILocation(line: 2681, column: 14, scope: !2812)
!2814 = !{!1364, !1253, i64 304}
!2815 = !DILocation(line: 2681, column: 24, scope: !2812)
!2816 = !DILocation(line: 2681, column: 9, scope: !2812)
!2817 = !DILocation(line: 2681, column: 7, scope: !2812)
!2818 = !DILocation(line: 2682, column: 3, scope: !2812)
!2819 = !DILocation(line: 2683, column: 40, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 2682, column: 10)
!2821 = !{!1364, !1253, i64 312}
!2822 = !DILocation(line: 2683, column: 47, scope: !2820)
!2823 = !DILocation(line: 2683, column: 50, scope: !2820)
!2824 = !DILocation(line: 2683, column: 22, scope: !2820)
!2825 = !DILocation(line: 2683, column: 7, scope: !2820)
!2826 = !DILocation(line: 2685, column: 7, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 2685, column: 7)
!2828 = !DILocation(line: 2685, column: 7, scope: !2793)
!2829 = !DILocation(line: 2685, column: 21, scope: !2827)
!2830 = !DILocation(line: 2686, column: 72, scope: !2793)
!2831 = !DILocation(line: 2686, column: 5, scope: !2793)
!2832 = !DILocation(line: 2687, column: 3, scope: !2793)
!2833 = !DILocation(line: 2687, column: 6, scope: !2793)
!2834 = !DILocation(line: 2687, column: 11, scope: !2793)
!2835 = !DILocation(line: 2687, column: 35, scope: !2793)
!2836 = !DILocation(line: 2688, column: 3, scope: !2793)
!2837 = !DILocation(line: 2688, column: 6, scope: !2793)
!2838 = !DILocation(line: 2688, column: 10, scope: !2793)
!2839 = !DILocation(line: 2688, column: 21, scope: !2793)
!2840 = !DILocation(line: 2689, column: 10, scope: !2793)
!2841 = !DILocation(line: 2689, column: 3, scope: !2793)
!2842 = !DILocation(line: 2690, column: 1, scope: !2793)
!2843 = distinct !DISubprogram(name: "PyType_HasFeature", scope: !8, file: !8, line: 621, type: !2844, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2846)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{!54, !20, !209}
!2846 = !{!2847, !2848, !2849}
!2847 = !DILocalVariable(name: "type", arg: 1, scope: !2843, file: !8, line: 621, type: !20)
!2848 = !DILocalVariable(name: "feature", arg: 2, scope: !2843, file: !8, line: 621, type: !209)
!2849 = !DILocalVariable(name: "flags", scope: !2843, file: !8, line: 623, type: !209)
!2850 = !DILocation(line: 621, column: 33, scope: !2843)
!2851 = !DILocation(line: 621, column: 53, scope: !2843)
!2852 = !DILocation(line: 623, column: 5, scope: !2843)
!2853 = !DILocation(line: 623, column: 19, scope: !2843)
!2854 = !DILocation(line: 628, column: 13, scope: !2843)
!2855 = !DILocation(line: 628, column: 19, scope: !2843)
!2856 = !DILocation(line: 628, column: 11, scope: !2843)
!2857 = !DILocation(line: 630, column: 14, scope: !2843)
!2858 = !DILocation(line: 630, column: 22, scope: !2843)
!2859 = !DILocation(line: 630, column: 20, scope: !2843)
!2860 = !DILocation(line: 630, column: 31, scope: !2843)
!2861 = !DILocation(line: 631, column: 1, scope: !2843)
!2862 = !DILocation(line: 630, column: 5, scope: !2843)
!2863 = !DISubprogram(name: "PyObject_GC_IsFinalized", scope: !2864, file: !2864, line: 190, type: !94, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2864 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/objimpl.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "9270416a7571e454813fce7911a47b6b")
!2865 = !DISubprogram(name: "PyObject_CallFinalizerFromDealloc", scope: !23, file: !23, line: 335, type: !94, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2866 = !DISubprogram(name: "PyObject_GC_UnTrack", scope: !2864, file: !2864, line: 180, type: !285, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2867 = distinct !DISubprogram(name: "__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3__reduce_cython__", scope: !3, file: !3, line: 1951, type: !77, scopeLine: 1951, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2868)
!2868 = !{!2869, !2870, !2871}
!2869 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !2867, file: !3, line: 1951, type: !6)
!2870 = !DILocalVariable(name: "unused", arg: 2, scope: !2867, file: !3, line: 1951, type: !6)
!2871 = !DILocalVariable(name: "__pyx_r", scope: !2867, file: !3, line: 1952, type: !6)
!2872 = !DILocation(line: 1951, column: 102, scope: !2867)
!2873 = !DILocation(line: 1951, column: 140, scope: !2867)
!2874 = !DILocation(line: 1952, column: 3, scope: !2867)
!2875 = !DILocation(line: 1952, column: 13, scope: !2867)
!2876 = !DILocation(line: 1955, column: 152, scope: !2867)
!2877 = !DILocation(line: 1955, column: 13, scope: !2867)
!2878 = !DILocation(line: 1955, column: 11, scope: !2867)
!2879 = !DILocation(line: 1959, column: 10, scope: !2867)
!2880 = !DILocation(line: 1960, column: 1, scope: !2867)
!2881 = !DILocation(line: 1959, column: 3, scope: !2867)
!2882 = distinct !DISubprogram(name: "__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_5__setstate_cython__", scope: !3, file: !3, line: 2205, type: !77, scopeLine: 2205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2883)
!2883 = !{!2884, !2885, !2886}
!2884 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !2882, file: !3, line: 2205, type: !6)
!2885 = !DILocalVariable(name: "__pyx_v___pyx_state", arg: 2, scope: !2882, file: !3, line: 2205, type: !6)
!2886 = !DILocalVariable(name: "__pyx_r", scope: !2882, file: !3, line: 2206, type: !6)
!2887 = !DILocation(line: 2205, column: 104, scope: !2882)
!2888 = !DILocation(line: 2205, column: 128, scope: !2882)
!2889 = !DILocation(line: 2206, column: 3, scope: !2882)
!2890 = !DILocation(line: 2206, column: 13, scope: !2882)
!2891 = !DILocation(line: 2209, column: 154, scope: !2882)
!2892 = !DILocation(line: 2209, column: 182, scope: !2882)
!2893 = !DILocation(line: 2209, column: 13, scope: !2882)
!2894 = !DILocation(line: 2209, column: 11, scope: !2882)
!2895 = !DILocation(line: 2213, column: 10, scope: !2882)
!2896 = !DILocation(line: 2214, column: 1, scope: !2882)
!2897 = !DILocation(line: 2213, column: 3, scope: !2882)
!2898 = !DILocation(line: 1962, column: 154, scope: !863)
!2899 = !DILocation(line: 1963, column: 3, scope: !863)
!2900 = !DILocation(line: 1963, column: 13, scope: !863)
!2901 = !DILocation(line: 1964, column: 3, scope: !863)
!2902 = !DILocation(line: 1964, column: 13, scope: !863)
!2903 = !DILocation(line: 1965, column: 3, scope: !863)
!2904 = !DILocation(line: 1965, column: 7, scope: !863)
!2905 = !DILocation(line: 1966, column: 3, scope: !863)
!2906 = !DILocation(line: 1966, column: 13, scope: !863)
!2907 = !DILocation(line: 1968, column: 3, scope: !863)
!2908 = !DILocation(line: 1968, column: 13, scope: !863)
!2909 = !DILocation(line: 1969, column: 3, scope: !863)
!2910 = !DILocation(line: 1969, column: 13, scope: !863)
!2911 = !DILocation(line: 1970, column: 3, scope: !863)
!2912 = !DILocation(line: 1970, column: 7, scope: !863)
!2913 = !DILocation(line: 1971, column: 3, scope: !863)
!2914 = !DILocation(line: 1971, column: 7, scope: !863)
!2915 = !DILocation(line: 1972, column: 3, scope: !863)
!2916 = !DILocation(line: 1972, column: 7, scope: !863)
!2917 = !DILocation(line: 1973, column: 3, scope: !863)
!2918 = !DILocation(line: 1973, column: 13, scope: !863)
!2919 = !DILocation(line: 1974, column: 3, scope: !863)
!2920 = !DILocation(line: 1974, column: 7, scope: !863)
!2921 = !DILocation(line: 1975, column: 3, scope: !863)
!2922 = !DILocation(line: 1975, column: 15, scope: !863)
!2923 = !DILocation(line: 1976, column: 3, scope: !863)
!2924 = !DILocation(line: 1976, column: 7, scope: !863)
!2925 = !DILocation(line: 1986, column: 33, scope: !863)
!2926 = !DILocation(line: 1986, column: 47, scope: !863)
!2927 = !{!2591, !1367, i64 16}
!2928 = !DILocation(line: 1986, column: 15, scope: !863)
!2929 = !DILocation(line: 1986, column: 13, scope: !863)
!2930 = !DILocation(line: 1986, column: 59, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !863, file: !3, line: 1986, column: 59)
!2932 = !DILocation(line: 1986, column: 59, scope: !863)
!2933 = !DILocation(line: 1986, column: 81, scope: !2934)
!2934 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 1986, column: 81)
!2935 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 1986, column: 81)
!2936 = !DILocation(line: 1986, column: 81, scope: !2935)
!2937 = !DILocation(line: 1988, column: 15, scope: !863)
!2938 = !DILocation(line: 1988, column: 13, scope: !863)
!2939 = !DILocation(line: 1988, column: 35, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !863, file: !3, line: 1988, column: 35)
!2941 = !DILocation(line: 1988, column: 35, scope: !863)
!2942 = !DILocation(line: 1988, column: 57, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2944, file: !3, line: 1988, column: 57)
!2944 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 1988, column: 57)
!2945 = !DILocation(line: 1988, column: 57, scope: !2944)
!2946 = !DILocation(line: 1991, column: 3, scope: !863)
!2947 = !DILocation(line: 1992, column: 3, scope: !863)
!2948 = !DILocation(line: 1994, column: 3, scope: !863)
!2949 = !DILocation(line: 1995, column: 3, scope: !863)
!2950 = !DILocation(line: 1997, column: 3, scope: !863)
!2951 = !DILocation(line: 1998, column: 13, scope: !863)
!2952 = !DILocation(line: 1999, column: 31, scope: !863)
!2953 = !DILocation(line: 1999, column: 17, scope: !863)
!2954 = !DILocation(line: 2000, column: 13, scope: !863)
!2955 = !DILocation(line: 2009, column: 43, scope: !863)
!2956 = !DILocation(line: 2009, column: 58, scope: !863)
!2957 = !DILocation(line: 2009, column: 15, scope: !863)
!2958 = !DILocation(line: 2009, column: 13, scope: !863)
!2959 = !DILocation(line: 2009, column: 88, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !863, file: !3, line: 2009, column: 88)
!2961 = !DILocation(line: 2009, column: 88, scope: !863)
!2962 = !DILocation(line: 2009, column: 110, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 2009, column: 110)
!2964 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 2009, column: 110)
!2965 = !DILocation(line: 2009, column: 110, scope: !2964)
!2966 = !DILocation(line: 2011, column: 19, scope: !863)
!2967 = !DILocation(line: 2011, column: 17, scope: !863)
!2968 = !DILocation(line: 2012, column: 13, scope: !863)
!2969 = !DILocation(line: 2021, column: 16, scope: !863)
!2970 = !DILocation(line: 2021, column: 30, scope: !863)
!2971 = !DILocation(line: 2021, column: 13, scope: !863)
!2972 = !DILocation(line: 2022, column: 16, scope: !863)
!2973 = !DILocation(line: 2022, column: 26, scope: !863)
!2974 = !DILocation(line: 2022, column: 13, scope: !863)
!2975 = !DILocation(line: 2023, column: 7, scope: !884)
!2976 = !DILocation(line: 2023, column: 7, scope: !863)
!2977 = !DILocation(line: 2032, column: 17, scope: !883)
!2978 = !DILocation(line: 2032, column: 15, scope: !883)
!2979 = !DILocation(line: 2032, column: 37, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !883, file: !3, line: 2032, column: 37)
!2981 = !DILocation(line: 2032, column: 37, scope: !883)
!2982 = !DILocation(line: 2032, column: 59, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2984, file: !3, line: 2032, column: 59)
!2984 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 2032, column: 59)
!2985 = !DILocation(line: 2032, column: 59, scope: !2984)
!2986 = !DILocation(line: 2034, column: 5, scope: !883)
!2987 = !DILocation(line: 2036, column: 5, scope: !883)
!2988 = !DILocation(line: 2037, column: 37, scope: !883)
!2989 = !DILocation(line: 2037, column: 52, scope: !883)
!2990 = !DILocation(line: 2037, column: 17, scope: !883)
!2991 = !DILocation(line: 2037, column: 15, scope: !883)
!2992 = !DILocation(line: 2037, column: 68, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !883, file: !3, line: 2037, column: 68)
!2994 = !DILocation(line: 2037, column: 68, scope: !883)
!2995 = !DILocation(line: 2037, column: 90, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2997, file: !3, line: 2037, column: 90)
!2997 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 2037, column: 90)
!2998 = !DILocation(line: 2037, column: 90, scope: !2997)
!2999 = !DILocation(line: 2039, column: 5, scope: !883)
!3000 = !DILocation(line: 2039, column: 40, scope: !883)
!3001 = !DILocation(line: 2040, column: 5, scope: !883)
!3002 = !DILocation(line: 2040, column: 5, scope: !882)
!3003 = !DILocation(line: 2041, column: 15, scope: !883)
!3004 = !DILocation(line: 2050, column: 26, scope: !883)
!3005 = !DILocation(line: 2059, column: 5, scope: !883)
!3006 = !DILocation(line: 2070, column: 18, scope: !886)
!3007 = !DILocation(line: 2070, column: 32, scope: !886)
!3008 = !DILocation(line: 2070, column: 37, scope: !886)
!3009 = !DILocation(line: 2070, column: 15, scope: !886)
!3010 = !DILocation(line: 2071, column: 18, scope: !886)
!3011 = !DILocation(line: 2071, column: 28, scope: !886)
!3012 = !DILocation(line: 2071, column: 15, scope: !886)
!3013 = !DILocation(line: 2072, column: 10, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !886, file: !3, line: 2072, column: 9)
!3015 = !DILocation(line: 2072, column: 9, scope: !886)
!3016 = !DILocation(line: 2073, column: 5, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 2072, column: 21)
!3018 = !DILocation(line: 2074, column: 19, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 2073, column: 12)
!3020 = !DILocation(line: 2074, column: 17, scope: !3019)
!3021 = !DILocation(line: 2075, column: 7, scope: !3019)
!3022 = !DILocation(line: 2077, column: 18, scope: !886)
!3023 = !DILocation(line: 2077, column: 32, scope: !886)
!3024 = !DILocation(line: 2077, column: 36, scope: !886)
!3025 = !DILocation(line: 2077, column: 15, scope: !886)
!3026 = !DILocation(line: 2078, column: 18, scope: !886)
!3027 = !DILocation(line: 2078, column: 28, scope: !886)
!3028 = !DILocation(line: 2078, column: 15, scope: !886)
!3029 = !DILocation(line: 2079, column: 17, scope: !886)
!3030 = !DILocation(line: 2079, column: 15, scope: !886)
!3031 = !DILocation(line: 2079, column: 5, scope: !886)
!3032 = !DILocation(line: 2080, column: 5, scope: !886)
!3033 = !DILocation(line: 2081, column: 28, scope: !886)
!3034 = !DILocation(line: 2081, column: 26, scope: !886)
!3035 = !DILocation(line: 2082, column: 3, scope: !886)
!3036 = !DILocation(line: 2083, column: 3, scope: !863)
!3037 = !DILocation(line: 2092, column: 16, scope: !863)
!3038 = !DILocation(line: 2092, column: 37, scope: !863)
!3039 = !DILocation(line: 2092, column: 13, scope: !863)
!3040 = !DILocation(line: 2093, column: 7, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !863, file: !3, line: 2093, column: 7)
!3042 = !DILocation(line: 2093, column: 7, scope: !863)
!3043 = !DILocation(line: 2102, column: 5, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 2093, column: 18)
!3045 = !DILocation(line: 2103, column: 5, scope: !3044)
!3046 = !DILocation(line: 2103, column: 5, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 2103, column: 5)
!3048 = !{!3049, !1367, i64 24}
!3049 = !{!"", !1366, i64 0, !1367, i64 16, !1367, i64 24, !1253, i64 32, !1253, i64 40}
!3050 = !DILocation(line: 2103, column: 89, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 2103, column: 89)
!3052 = !DILocation(line: 2103, column: 89, scope: !3044)
!3053 = !DILocation(line: 2103, column: 111, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 2103, column: 111)
!3055 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 2103, column: 111)
!3056 = !DILocation(line: 2103, column: 111, scope: !3055)
!3057 = !DILocation(line: 2105, column: 17, scope: !3044)
!3058 = !DILocation(line: 2105, column: 15, scope: !3044)
!3059 = !DILocation(line: 2105, column: 37, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 2105, column: 37)
!3061 = !DILocation(line: 2105, column: 37, scope: !3044)
!3062 = !DILocation(line: 2105, column: 59, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 2105, column: 59)
!3064 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 2105, column: 59)
!3065 = !DILocation(line: 2105, column: 59, scope: !3064)
!3066 = !DILocation(line: 2107, column: 5, scope: !3044)
!3067 = !DILocation(line: 2109, column: 5, scope: !3044)
!3068 = !DILocation(line: 2110, column: 5, scope: !3044)
!3069 = !DILocation(line: 2112, column: 5, scope: !3044)
!3070 = !DILocation(line: 2113, column: 5, scope: !3044)
!3071 = !DILocation(line: 2115, column: 5, scope: !3044)
!3072 = !DILocation(line: 2116, column: 17, scope: !3044)
!3073 = !DILocation(line: 2116, column: 15, scope: !3044)
!3074 = !DILocation(line: 2116, column: 37, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 2116, column: 37)
!3076 = !DILocation(line: 2116, column: 37, scope: !3044)
!3077 = !DILocation(line: 2116, column: 59, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3079, file: !3, line: 2116, column: 59)
!3079 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 2116, column: 59)
!3080 = !DILocation(line: 2116, column: 59, scope: !3079)
!3081 = !DILocation(line: 2119, column: 5, scope: !3044)
!3082 = !DILocation(line: 2121, column: 5, scope: !3044)
!3083 = !DILocation(line: 2122, column: 5, scope: !3044)
!3084 = !DILocation(line: 2124, column: 5, scope: !3044)
!3085 = !DILocation(line: 2125, column: 15, scope: !3044)
!3086 = !DILocation(line: 2126, column: 15, scope: !3044)
!3087 = !DILocation(line: 2127, column: 15, scope: !3044)
!3088 = !DILocation(line: 2127, column: 13, scope: !3044)
!3089 = !DILocation(line: 2128, column: 15, scope: !3044)
!3090 = !DILocation(line: 2129, column: 5, scope: !3044)
!3091 = !DILocation(line: 2148, column: 5, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !863, file: !3, line: 2147, column: 12)
!3093 = !DILocation(line: 2149, column: 5, scope: !3092)
!3094 = !DILocation(line: 2149, column: 5, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 2149, column: 5)
!3096 = !DILocation(line: 2149, column: 89, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 2149, column: 89)
!3098 = !DILocation(line: 2149, column: 89, scope: !3092)
!3099 = !DILocation(line: 2149, column: 111, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 2149, column: 111)
!3101 = distinct !DILexicalBlock(scope: !3097, file: !3, line: 2149, column: 111)
!3102 = !DILocation(line: 2149, column: 111, scope: !3101)
!3103 = !DILocation(line: 2151, column: 17, scope: !3092)
!3104 = !DILocation(line: 2151, column: 15, scope: !3092)
!3105 = !DILocation(line: 2151, column: 37, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 2151, column: 37)
!3107 = !DILocation(line: 2151, column: 37, scope: !3092)
!3108 = !DILocation(line: 2151, column: 59, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 2151, column: 59)
!3110 = distinct !DILexicalBlock(scope: !3106, file: !3, line: 2151, column: 59)
!3111 = !DILocation(line: 2151, column: 59, scope: !3110)
!3112 = !DILocation(line: 2153, column: 5, scope: !3092)
!3113 = !DILocation(line: 2155, column: 5, scope: !3092)
!3114 = !DILocation(line: 2156, column: 5, scope: !3092)
!3115 = !DILocation(line: 2158, column: 5, scope: !3092)
!3116 = !DILocation(line: 2159, column: 5, scope: !3092)
!3117 = !DILocation(line: 2161, column: 5, scope: !3092)
!3118 = !DILocation(line: 2162, column: 17, scope: !3092)
!3119 = !DILocation(line: 2162, column: 15, scope: !3092)
!3120 = !DILocation(line: 2162, column: 37, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3092, file: !3, line: 2162, column: 37)
!3122 = !DILocation(line: 2162, column: 37, scope: !3092)
!3123 = !DILocation(line: 2162, column: 59, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !3, line: 2162, column: 59)
!3125 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 2162, column: 59)
!3126 = !DILocation(line: 2162, column: 59, scope: !3125)
!3127 = !DILocation(line: 2165, column: 5, scope: !3092)
!3128 = !DILocation(line: 2167, column: 5, scope: !3092)
!3129 = !DILocation(line: 2168, column: 15, scope: !3092)
!3130 = !DILocation(line: 2169, column: 15, scope: !3092)
!3131 = !DILocation(line: 2170, column: 15, scope: !3092)
!3132 = !DILocation(line: 2170, column: 13, scope: !3092)
!3133 = !DILocation(line: 2171, column: 15, scope: !3092)
!3134 = !DILocation(line: 2172, column: 5, scope: !3092)
!3135 = !DILocation(line: 2182, column: 3, scope: !863)
!3136 = !DILocation(line: 2183, column: 3, scope: !863)
!3137 = !DILocation(line: 2184, column: 3, scope: !863)
!3138 = !DILocation(line: 2185, column: 3, scope: !863)
!3139 = !DILocation(line: 2186, column: 84, scope: !863)
!3140 = !DILocation(line: 2186, column: 99, scope: !863)
!3141 = !DILocation(line: 2186, column: 113, scope: !863)
!3142 = !DILocation(line: 2186, column: 3, scope: !863)
!3143 = !DILocation(line: 2187, column: 11, scope: !863)
!3144 = !DILocation(line: 2187, column: 3, scope: !863)
!3145 = !DILocation(line: 2188, column: 3, scope: !863)
!3146 = !DILocation(line: 2189, column: 3, scope: !863)
!3147 = !DILocation(line: 2190, column: 3, scope: !863)
!3148 = !DILocation(line: 2193, column: 10, scope: !863)
!3149 = !DILocation(line: 2194, column: 1, scope: !863)
!3150 = !DILocation(line: 2193, column: 3, scope: !863)
!3151 = !DISubprogram(name: "PyLong_FromSsize_t", scope: !374, file: !374, line: 21, type: !1861, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3152 = distinct !DISubprogram(name: "__Pyx_GetAttr3", scope: !3, file: !3, line: 3829, type: !86, scopeLine: 3829, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3153)
!3153 = !{!3154, !3155, !3156, !3157}
!3154 = !DILocalVariable(name: "o", arg: 1, scope: !3152, file: !3, line: 3829, type: !6)
!3155 = !DILocalVariable(name: "n", arg: 2, scope: !3152, file: !3, line: 3829, type: !6)
!3156 = !DILocalVariable(name: "d", arg: 3, scope: !3152, file: !3, line: 3829, type: !6)
!3157 = !DILocalVariable(name: "r", scope: !3152, file: !3, line: 3830, type: !6)
!3158 = !DILocation(line: 3829, column: 57, scope: !3152)
!3159 = !DILocation(line: 3829, column: 70, scope: !3152)
!3160 = !DILocation(line: 3829, column: 83, scope: !3152)
!3161 = !DILocation(line: 3830, column: 5, scope: !3152)
!3162 = !DILocation(line: 3830, column: 15, scope: !3152)
!3163 = !DILocation(line: 3830, column: 33, scope: !3152)
!3164 = !DILocation(line: 3830, column: 36, scope: !3152)
!3165 = !DILocation(line: 3830, column: 19, scope: !3152)
!3166 = !DILocation(line: 3831, column: 13, scope: !3152)
!3167 = !DILocation(line: 3831, column: 12, scope: !3152)
!3168 = !DILocation(line: 3831, column: 26, scope: !3152)
!3169 = !DILocation(line: 3831, column: 52, scope: !3152)
!3170 = !DILocation(line: 3831, column: 30, scope: !3152)
!3171 = !DILocation(line: 3832, column: 1, scope: !3152)
!3172 = !DILocation(line: 3831, column: 5, scope: !3152)
!3173 = !DISubprogram(name: "PyNumber_InPlaceAdd", scope: !3174, file: !3174, line: 530, type: !77, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3174 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/abstract.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "0073b56b2259a36c0706791b20f6f07c")
!3175 = distinct !DISubprogram(name: "__Pyx__GetModuleGlobalName", scope: !3, file: !3, line: 3862, type: !3176, scopeLine: 3866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3179)
!3176 = !DISubroutineType(types: !3177)
!3177 = !{!6, !6, !3178, !339}
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!3179 = !{!3180, !3181, !3182, !3183}
!3180 = !DILocalVariable(name: "name", arg: 1, scope: !3175, file: !3, line: 3862, type: !6)
!3181 = !DILocalVariable(name: "dict_version", arg: 2, scope: !3175, file: !3, line: 3862, type: !3178)
!3182 = !DILocalVariable(name: "dict_cached_value", arg: 3, scope: !3175, file: !3, line: 3862, type: !339)
!3183 = !DILocalVariable(name: "result", scope: !3175, file: !3, line: 3867, type: !6)
!3184 = !DILocation(line: 3862, column: 55, scope: !3175)
!3185 = !DILocation(line: 3862, column: 74, scope: !3175)
!3186 = !DILocation(line: 3862, column: 99, scope: !3175)
!3187 = !DILocation(line: 3867, column: 5, scope: !3175)
!3188 = !DILocation(line: 3867, column: 15, scope: !3175)
!3189 = !DILocation(line: 3870, column: 40, scope: !3175)
!3190 = !DILocation(line: 3870, column: 49, scope: !3175)
!3191 = !DILocation(line: 3870, column: 74, scope: !3175)
!3192 = !DILocation(line: 3870, column: 81, scope: !3175)
!3193 = !DILocation(line: 3870, column: 14, scope: !3175)
!3194 = !DILocation(line: 3870, column: 12, scope: !3175)
!3195 = !DILocation(line: 3871, column: 5, scope: !3175)
!3196 = !DILocation(line: 3872, column: 9, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 3872, column: 9)
!3198 = !DILocation(line: 3872, column: 9, scope: !3175)
!3199 = !DILocation(line: 3873, column: 16, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 3872, column: 25)
!3201 = !DILocation(line: 3873, column: 9, scope: !3200)
!3202 = !DILocation(line: 3874, column: 16, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 3874, column: 16)
!3204 = !DILocation(line: 3874, column: 16, scope: !3197)
!3205 = !DILocation(line: 3875, column: 9, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 3874, column: 44)
!3207 = !DILocation(line: 3892, column: 33, scope: !3175)
!3208 = !DILocation(line: 3892, column: 12, scope: !3175)
!3209 = !DILocation(line: 3892, column: 5, scope: !3175)
!3210 = !DILocation(line: 3893, column: 1, scope: !3175)
!3211 = distinct !DISubprogram(name: "__Pyx_GetAttr", scope: !3, file: !3, line: 3807, type: !77, scopeLine: 3807, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3212)
!3212 = !{!3213, !3214}
!3213 = !DILocalVariable(name: "o", arg: 1, scope: !3211, file: !3, line: 3807, type: !6)
!3214 = !DILocalVariable(name: "n", arg: 2, scope: !3211, file: !3, line: 3807, type: !6)
!3215 = !DILocation(line: 3807, column: 56, scope: !3211)
!3216 = !DILocation(line: 3807, column: 69, scope: !3211)
!3217 = !DILocation(line: 3810, column: 9, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 3810, column: 9)
!3219 = !DILocation(line: 3810, column: 9, scope: !3211)
!3220 = !DILocation(line: 3814, column: 42, scope: !3218)
!3221 = !DILocation(line: 3814, column: 45, scope: !3218)
!3222 = !DILocation(line: 3814, column: 16, scope: !3218)
!3223 = !DILocation(line: 3814, column: 9, scope: !3218)
!3224 = !DILocation(line: 3816, column: 29, scope: !3211)
!3225 = !DILocation(line: 3816, column: 32, scope: !3211)
!3226 = !DILocation(line: 3816, column: 12, scope: !3211)
!3227 = !DILocation(line: 3816, column: 5, scope: !3211)
!3228 = !DILocation(line: 3817, column: 1, scope: !3211)
!3229 = distinct !DISubprogram(name: "__Pyx_GetAttr3Default", scope: !3, file: !3, line: 3820, type: !63, scopeLine: 3820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3230)
!3230 = !{!3231, !3232}
!3231 = !DILocalVariable(name: "d", arg: 1, scope: !3229, file: !3, line: 3820, type: !6)
!3232 = !DILocalVariable(name: "__pyx_tstate", scope: !3229, file: !3, line: 3821, type: !1110)
!3233 = !DILocation(line: 3820, column: 50, scope: !3229)
!3234 = !DILocation(line: 3821, column: 5, scope: !3229)
!3235 = !DILocation(line: 3822, column: 5, scope: !3229)
!3236 = !DILocation(line: 3823, column: 9, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 3823, column: 9)
!3238 = !DILocation(line: 3823, column: 9, scope: !3229)
!3239 = !DILocation(line: 3824, column: 9, scope: !3237)
!3240 = !DILocation(line: 3825, column: 5, scope: !3229)
!3241 = !DILocation(line: 3826, column: 5, scope: !3229)
!3242 = !DILocation(line: 3827, column: 12, scope: !3229)
!3243 = !DILocation(line: 3827, column: 5, scope: !3229)
!3244 = !DILocation(line: 3828, column: 1, scope: !3229)
!3245 = !DISubprogram(name: "_PyThreadState_UncheckedGet", scope: !1114, file: !1114, line: 148, type: !1722, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3246 = distinct !DISubprogram(name: "__Pyx_PyErr_ExceptionMatchesInState", scope: !3, file: !3, line: 3796, type: !3247, scopeLine: 3796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3249)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{!54, !1110, !6}
!3249 = !{!3250, !3251, !3252}
!3250 = !DILocalVariable(name: "tstate", arg: 1, scope: !3246, file: !3, line: 3796, type: !1110)
!3251 = !DILocalVariable(name: "err", arg: 2, scope: !3246, file: !3, line: 3796, type: !6)
!3252 = !DILocalVariable(name: "exc_type", scope: !3246, file: !3, line: 3797, type: !6)
!3253 = !DILocation(line: 3796, column: 77, scope: !3246)
!3254 = !DILocation(line: 3796, column: 95, scope: !3246)
!3255 = !DILocation(line: 3797, column: 5, scope: !3246)
!3256 = !DILocation(line: 3797, column: 15, scope: !3246)
!3257 = !DILocation(line: 3797, column: 26, scope: !3246)
!3258 = !DILocation(line: 3797, column: 34, scope: !3246)
!3259 = !{!1600, !1253, i64 88}
!3260 = !DILocation(line: 3798, column: 9, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 3798, column: 9)
!3262 = !DILocation(line: 3798, column: 21, scope: !3261)
!3263 = !DILocation(line: 3798, column: 18, scope: !3261)
!3264 = !DILocation(line: 3798, column: 9, scope: !3246)
!3265 = !DILocation(line: 3798, column: 26, scope: !3261)
!3266 = !DILocation(line: 3799, column: 9, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 3799, column: 9)
!3268 = !DILocation(line: 3799, column: 9, scope: !3246)
!3269 = !DILocation(line: 3799, column: 30, scope: !3267)
!3270 = !DILocation(line: 3800, column: 9, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 3800, column: 9)
!3272 = !DILocation(line: 3800, column: 9, scope: !3246)
!3273 = !DILocation(line: 3801, column: 50, scope: !3271)
!3274 = !DILocation(line: 3801, column: 60, scope: !3271)
!3275 = !DILocation(line: 3801, column: 16, scope: !3271)
!3276 = !DILocation(line: 3801, column: 9, scope: !3271)
!3277 = !DILocation(line: 3802, column: 46, scope: !3246)
!3278 = !DILocation(line: 3802, column: 56, scope: !3246)
!3279 = !DILocation(line: 3802, column: 12, scope: !3246)
!3280 = !DILocation(line: 3802, column: 5, scope: !3246)
!3281 = !DILocation(line: 3803, column: 1, scope: !3246)
!3282 = distinct !DISubprogram(name: "__Pyx_ErrRestoreInState", scope: !3, file: !3, line: 3600, type: !3283, scopeLine: 3600, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3285)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{null, !1110, !6, !6, !6}
!3285 = !{!3286, !3287, !3288, !3289, !3290, !3291, !3292}
!3286 = !DILocalVariable(name: "tstate", arg: 1, scope: !3282, file: !3, line: 3600, type: !1110)
!3287 = !DILocalVariable(name: "type", arg: 2, scope: !3282, file: !3, line: 3600, type: !6)
!3288 = !DILocalVariable(name: "value", arg: 3, scope: !3282, file: !3, line: 3600, type: !6)
!3289 = !DILocalVariable(name: "tb", arg: 4, scope: !3282, file: !3, line: 3600, type: !6)
!3290 = !DILocalVariable(name: "tmp_type", scope: !3282, file: !3, line: 3601, type: !6)
!3291 = !DILocalVariable(name: "tmp_value", scope: !3282, file: !3, line: 3601, type: !6)
!3292 = !DILocalVariable(name: "tmp_tb", scope: !3282, file: !3, line: 3601, type: !6)
!3293 = !DILocation(line: 3600, column: 66, scope: !3282)
!3294 = !DILocation(line: 3600, column: 84, scope: !3282)
!3295 = !DILocation(line: 3600, column: 100, scope: !3282)
!3296 = !DILocation(line: 3600, column: 117, scope: !3282)
!3297 = !DILocation(line: 3601, column: 5, scope: !3282)
!3298 = !DILocation(line: 3601, column: 15, scope: !3282)
!3299 = !DILocation(line: 3601, column: 26, scope: !3282)
!3300 = !DILocation(line: 3601, column: 38, scope: !3282)
!3301 = !DILocation(line: 3602, column: 16, scope: !3282)
!3302 = !DILocation(line: 3602, column: 24, scope: !3282)
!3303 = !DILocation(line: 3602, column: 14, scope: !3282)
!3304 = !DILocation(line: 3603, column: 17, scope: !3282)
!3305 = !DILocation(line: 3603, column: 25, scope: !3282)
!3306 = !{!1600, !1253, i64 96}
!3307 = !DILocation(line: 3603, column: 15, scope: !3282)
!3308 = !DILocation(line: 3604, column: 14, scope: !3282)
!3309 = !DILocation(line: 3604, column: 22, scope: !3282)
!3310 = !{!1600, !1253, i64 104}
!3311 = !DILocation(line: 3604, column: 12, scope: !3282)
!3312 = !DILocation(line: 3605, column: 27, scope: !3282)
!3313 = !DILocation(line: 3605, column: 5, scope: !3282)
!3314 = !DILocation(line: 3605, column: 13, scope: !3282)
!3315 = !DILocation(line: 3605, column: 25, scope: !3282)
!3316 = !DILocation(line: 3606, column: 28, scope: !3282)
!3317 = !DILocation(line: 3606, column: 5, scope: !3282)
!3318 = !DILocation(line: 3606, column: 13, scope: !3282)
!3319 = !DILocation(line: 3606, column: 26, scope: !3282)
!3320 = !DILocation(line: 3607, column: 32, scope: !3282)
!3321 = !DILocation(line: 3607, column: 5, scope: !3282)
!3322 = !DILocation(line: 3607, column: 13, scope: !3282)
!3323 = !DILocation(line: 3607, column: 30, scope: !3282)
!3324 = !DILocation(line: 3608, column: 5, scope: !3282)
!3325 = !DILocation(line: 3609, column: 5, scope: !3282)
!3326 = !DILocation(line: 3610, column: 5, scope: !3282)
!3327 = !DILocation(line: 3611, column: 1, scope: !3282)
!3328 = distinct !DISubprogram(name: "__Pyx_PyErr_ExceptionMatchesTuple", scope: !3, file: !3, line: 3783, type: !149, scopeLine: 3783, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3329)
!3329 = !{!3330, !3331, !3332, !3333}
!3330 = !DILocalVariable(name: "exc_type", arg: 1, scope: !3328, file: !3, line: 3783, type: !6)
!3331 = !DILocalVariable(name: "tuple", arg: 2, scope: !3328, file: !3, line: 3783, type: !6)
!3332 = !DILocalVariable(name: "i", scope: !3328, file: !3, line: 3784, type: !12)
!3333 = !DILocalVariable(name: "n", scope: !3328, file: !3, line: 3784, type: !12)
!3334 = !DILocation(line: 3783, column: 56, scope: !3328)
!3335 = !DILocation(line: 3783, column: 76, scope: !3328)
!3336 = !DILocation(line: 3784, column: 5, scope: !3328)
!3337 = !DILocation(line: 3784, column: 16, scope: !3328)
!3338 = !DILocation(line: 3784, column: 19, scope: !3328)
!3339 = !DILocation(line: 3785, column: 9, scope: !3328)
!3340 = !DILocation(line: 3785, column: 7, scope: !3328)
!3341 = !DILocation(line: 3787, column: 11, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3328, file: !3, line: 3787, column: 5)
!3343 = !DILocation(line: 3787, column: 10, scope: !3342)
!3344 = !DILocation(line: 3787, column: 15, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 3787, column: 5)
!3346 = !DILocation(line: 3787, column: 17, scope: !3345)
!3347 = !DILocation(line: 3787, column: 16, scope: !3345)
!3348 = !DILocation(line: 3787, column: 5, scope: !3342)
!3349 = !DILocation(line: 3788, column: 13, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 3788, column: 13)
!3351 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 3787, column: 25)
!3352 = !DILocation(line: 3788, column: 25, scope: !3350)
!3353 = !DILocation(line: 3788, column: 22, scope: !3350)
!3354 = !DILocation(line: 3788, column: 13, scope: !3351)
!3355 = !DILocation(line: 3788, column: 53, scope: !3350)
!3356 = !DILocation(line: 3789, column: 5, scope: !3351)
!3357 = !DILocation(line: 3787, column: 21, scope: !3345)
!3358 = !DILocation(line: 3787, column: 5, scope: !3345)
!3359 = distinct !{!3359, !3348, !3360, !1801}
!3360 = !DILocation(line: 3789, column: 5, scope: !3342)
!3361 = !DILocation(line: 3791, column: 11, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3328, file: !3, line: 3791, column: 5)
!3363 = !DILocation(line: 3791, column: 10, scope: !3362)
!3364 = !DILocation(line: 3791, column: 15, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 3791, column: 5)
!3366 = !DILocation(line: 3791, column: 17, scope: !3365)
!3367 = !DILocation(line: 3791, column: 16, scope: !3365)
!3368 = !DILocation(line: 3791, column: 5, scope: !3362)
!3369 = !DILocation(line: 3792, column: 47, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 3792, column: 13)
!3371 = distinct !DILexicalBlock(scope: !3365, file: !3, line: 3791, column: 25)
!3372 = !DILocation(line: 3792, column: 57, scope: !3370)
!3373 = !DILocation(line: 3792, column: 13, scope: !3370)
!3374 = !DILocation(line: 3792, column: 13, scope: !3371)
!3375 = !DILocation(line: 3792, column: 86, scope: !3370)
!3376 = !DILocation(line: 3793, column: 5, scope: !3371)
!3377 = !DILocation(line: 3791, column: 21, scope: !3365)
!3378 = !DILocation(line: 3791, column: 5, scope: !3365)
!3379 = distinct !{!3379, !3368, !3380, !1801}
!3380 = !DILocation(line: 3793, column: 5, scope: !3362)
!3381 = !DILocation(line: 3794, column: 5, scope: !3328)
!3382 = !DILocation(line: 3795, column: 1, scope: !3328)
!3383 = distinct !DISubprogram(name: "__Pyx_PyErr_GivenExceptionMatches", scope: !3, file: !3, line: 5244, type: !149, scopeLine: 5244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3384)
!3384 = !{!3385, !3386}
!3385 = !DILocalVariable(name: "err", arg: 1, scope: !3383, file: !3, line: 5244, type: !6)
!3386 = !DILocalVariable(name: "exc_type", arg: 2, scope: !3383, file: !3, line: 5244, type: !6)
!3387 = !DILocation(line: 5244, column: 70, scope: !3383)
!3388 = !DILocation(line: 5244, column: 85, scope: !3383)
!3389 = !DILocation(line: 5245, column: 9, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 5245, column: 9)
!3391 = !DILocation(line: 5245, column: 9, scope: !3383)
!3392 = !DILocation(line: 5245, column: 34, scope: !3390)
!3393 = !DILocation(line: 5246, column: 9, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 5246, column: 9)
!3395 = !DILocation(line: 0, scope: !3394)
!3396 = !DILocation(line: 5246, column: 9, scope: !3383)
!3397 = !DILocation(line: 5247, column: 13, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 5247, column: 13)
!3399 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 5246, column: 46)
!3400 = !DILocation(line: 0, scope: !3398)
!3401 = !DILocation(line: 5247, column: 13, scope: !3399)
!3402 = !DILocation(line: 5248, column: 61, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 5247, column: 55)
!3404 = !DILocation(line: 5248, column: 72, scope: !3403)
!3405 = !DILocation(line: 5248, column: 20, scope: !3403)
!3406 = !DILocation(line: 5248, column: 13, scope: !3403)
!3407 = !DILocation(line: 5249, column: 20, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 5249, column: 20)
!3409 = !DILocation(line: 5249, column: 20, scope: !3398)
!3410 = !DILocation(line: 5250, column: 59, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 5249, column: 53)
!3412 = !DILocation(line: 5250, column: 64, scope: !3411)
!3413 = !DILocation(line: 5250, column: 20, scope: !3411)
!3414 = !DILocation(line: 5250, column: 13, scope: !3411)
!3415 = !DILocation(line: 5253, column: 5, scope: !3399)
!3416 = !DILocation(line: 5254, column: 40, scope: !3383)
!3417 = !DILocation(line: 5254, column: 45, scope: !3383)
!3418 = !DILocation(line: 5254, column: 12, scope: !3383)
!3419 = !DILocation(line: 5254, column: 5, scope: !3383)
!3420 = !DILocation(line: 5255, column: 1, scope: !3383)
!3421 = distinct !DISubprogram(name: "_PyType_Check", scope: !8, file: !8, line: 635, type: !94, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3422)
!3422 = !{!3423}
!3423 = !DILocalVariable(name: "op", arg: 1, scope: !3421, file: !8, line: 635, type: !6)
!3424 = !DILocation(line: 635, column: 43, scope: !3421)
!3425 = !DILocation(line: 636, column: 12, scope: !3421)
!3426 = !DILocation(line: 636, column: 5, scope: !3421)
!3427 = distinct !DISubprogram(name: "__Pyx_inner_PyErr_GivenExceptionMatches2", scope: !3, file: !3, line: 5215, type: !163, scopeLine: 5215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3428)
!3428 = !{!3429, !3430, !3431, !3432}
!3429 = !DILocalVariable(name: "err", arg: 1, scope: !3427, file: !3, line: 5215, type: !6)
!3430 = !DILocalVariable(name: "exc_type1", arg: 2, scope: !3427, file: !3, line: 5215, type: !6)
!3431 = !DILocalVariable(name: "exc_type2", arg: 3, scope: !3427, file: !3, line: 5215, type: !6)
!3432 = !DILocalVariable(name: "res", scope: !3427, file: !3, line: 5216, type: !54)
!3433 = !DILocation(line: 5215, column: 77, scope: !3427)
!3434 = !DILocation(line: 5215, column: 92, scope: !3427)
!3435 = !DILocation(line: 5215, column: 113, scope: !3427)
!3436 = !DILocation(line: 5216, column: 5, scope: !3427)
!3437 = !DILocation(line: 5216, column: 9, scope: !3427)
!3438 = !DILocation(line: 5216, column: 15, scope: !3427)
!3439 = !DILocation(line: 5216, column: 58, scope: !3427)
!3440 = !DILocation(line: 5216, column: 78, scope: !3427)
!3441 = !DILocation(line: 5216, column: 27, scope: !3427)
!3442 = !DILocation(line: 5217, column: 10, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 5217, column: 9)
!3444 = !DILocation(line: 5217, column: 9, scope: !3427)
!3445 = !DILocation(line: 5218, column: 46, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3443, file: !3, line: 5217, column: 15)
!3447 = !DILocation(line: 5218, column: 66, scope: !3446)
!3448 = !DILocation(line: 5218, column: 15, scope: !3446)
!3449 = !DILocation(line: 5218, column: 13, scope: !3446)
!3450 = !DILocation(line: 5219, column: 5, scope: !3446)
!3451 = !DILocation(line: 5220, column: 12, scope: !3427)
!3452 = !DILocation(line: 5221, column: 1, scope: !3427)
!3453 = !DILocation(line: 5220, column: 5, scope: !3427)
!3454 = distinct !DISubprogram(name: "__Pyx_PyErr_GivenExceptionMatchesTuple", scope: !3, file: !3, line: 5223, type: !149, scopeLine: 5223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3455)
!3455 = !{!3456, !3457, !3458, !3459, !3460}
!3456 = !DILocalVariable(name: "exc_type", arg: 1, scope: !3454, file: !3, line: 5223, type: !6)
!3457 = !DILocalVariable(name: "tuple", arg: 2, scope: !3454, file: !3, line: 5223, type: !6)
!3458 = !DILocalVariable(name: "i", scope: !3454, file: !3, line: 5224, type: !12)
!3459 = !DILocalVariable(name: "n", scope: !3454, file: !3, line: 5224, type: !12)
!3460 = !DILocalVariable(name: "t", scope: !3461, file: !3, line: 5233, type: !6)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !3, line: 5232, column: 25)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !3, line: 5232, column: 5)
!3463 = distinct !DILexicalBlock(scope: !3454, file: !3, line: 5232, column: 5)
!3464 = !DILocation(line: 5223, column: 61, scope: !3454)
!3465 = !DILocation(line: 5223, column: 81, scope: !3454)
!3466 = !DILocation(line: 5224, column: 5, scope: !3454)
!3467 = !DILocation(line: 5224, column: 16, scope: !3454)
!3468 = !DILocation(line: 5224, column: 19, scope: !3454)
!3469 = !DILocation(line: 5226, column: 9, scope: !3454)
!3470 = !DILocation(line: 5226, column: 7, scope: !3454)
!3471 = !DILocation(line: 5228, column: 11, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3454, file: !3, line: 5228, column: 5)
!3473 = !DILocation(line: 5228, column: 10, scope: !3472)
!3474 = !DILocation(line: 5228, column: 15, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3472, file: !3, line: 5228, column: 5)
!3476 = !DILocation(line: 5228, column: 17, scope: !3475)
!3477 = !DILocation(line: 5228, column: 16, scope: !3475)
!3478 = !DILocation(line: 5228, column: 5, scope: !3472)
!3479 = !DILocation(line: 5229, column: 13, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 5229, column: 13)
!3481 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 5228, column: 25)
!3482 = !DILocation(line: 5229, column: 25, scope: !3480)
!3483 = !DILocation(line: 5229, column: 22, scope: !3480)
!3484 = !DILocation(line: 5229, column: 13, scope: !3481)
!3485 = !DILocation(line: 5229, column: 53, scope: !3480)
!3486 = !DILocation(line: 5230, column: 5, scope: !3481)
!3487 = !DILocation(line: 5228, column: 21, scope: !3475)
!3488 = !DILocation(line: 5228, column: 5, scope: !3475)
!3489 = distinct !{!3489, !3478, !3490, !1801}
!3490 = !DILocation(line: 5230, column: 5, scope: !3472)
!3491 = !DILocation(line: 5232, column: 11, scope: !3463)
!3492 = !DILocation(line: 5232, column: 10, scope: !3463)
!3493 = !DILocation(line: 5232, column: 15, scope: !3462)
!3494 = !DILocation(line: 5232, column: 17, scope: !3462)
!3495 = !DILocation(line: 5232, column: 16, scope: !3462)
!3496 = !DILocation(line: 5232, column: 5, scope: !3463)
!3497 = !DILocation(line: 5233, column: 9, scope: !3461)
!3498 = !DILocation(line: 5233, column: 19, scope: !3461)
!3499 = !DILocation(line: 5233, column: 23, scope: !3461)
!3500 = !DILocation(line: 5237, column: 13, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 5237, column: 13)
!3502 = !DILocation(line: 0, scope: !3501)
!3503 = !DILocation(line: 5237, column: 13, scope: !3461)
!3504 = !DILocation(line: 5238, column: 58, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 5238, column: 17)
!3506 = distinct !DILexicalBlock(scope: !3501, file: !3, line: 5237, column: 48)
!3507 = !DILocation(line: 5238, column: 74, scope: !3505)
!3508 = !DILocation(line: 5238, column: 17, scope: !3505)
!3509 = !DILocation(line: 5238, column: 17, scope: !3506)
!3510 = !DILocation(line: 5238, column: 78, scope: !3505)
!3511 = !DILocation(line: 5239, column: 9, scope: !3506)
!3512 = !DILocation(line: 5241, column: 5, scope: !3462)
!3513 = !DILocation(line: 5241, column: 5, scope: !3461)
!3514 = !DILocation(line: 5232, column: 21, scope: !3462)
!3515 = !DILocation(line: 5232, column: 5, scope: !3462)
!3516 = distinct !{!3516, !3496, !3517, !1801}
!3517 = !DILocation(line: 5241, column: 5, scope: !3463)
!3518 = !DILocation(line: 5242, column: 5, scope: !3454)
!3519 = !DILocation(line: 5243, column: 1, scope: !3454)
!3520 = !DISubprogram(name: "PyErr_GivenExceptionMatches", scope: !1725, file: !1725, line: 40, type: !149, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3521 = distinct !DISubprogram(name: "__Pyx_IsSubtype", scope: !3, file: !3, line: 5177, type: !3522, scopeLine: 5177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3524)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{!54, !20, !20}
!3524 = !{!3525, !3526, !3527, !3528, !3531}
!3525 = !DILocalVariable(name: "a", arg: 1, scope: !3521, file: !3, line: 5177, type: !20)
!3526 = !DILocalVariable(name: "b", arg: 2, scope: !3521, file: !3, line: 5177, type: !20)
!3527 = !DILocalVariable(name: "mro", scope: !3521, file: !3, line: 5178, type: !6)
!3528 = !DILocalVariable(name: "i", scope: !3529, file: !3, line: 5182, type: !12)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 5181, column: 22)
!3530 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 5181, column: 9)
!3531 = !DILocalVariable(name: "n", scope: !3529, file: !3, line: 5182, type: !12)
!3532 = !DILocation(line: 5177, column: 56, scope: !3521)
!3533 = !DILocation(line: 5177, column: 73, scope: !3521)
!3534 = !DILocation(line: 5178, column: 5, scope: !3521)
!3535 = !DILocation(line: 5178, column: 15, scope: !3521)
!3536 = !DILocation(line: 5179, column: 9, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 5179, column: 9)
!3538 = !DILocation(line: 5179, column: 14, scope: !3537)
!3539 = !DILocation(line: 5179, column: 11, scope: !3537)
!3540 = !DILocation(line: 5179, column: 9, scope: !3521)
!3541 = !DILocation(line: 5179, column: 17, scope: !3537)
!3542 = !DILocation(line: 5180, column: 11, scope: !3521)
!3543 = !DILocation(line: 5180, column: 14, scope: !3521)
!3544 = !{!1364, !1253, i64 344}
!3545 = !DILocation(line: 5180, column: 9, scope: !3521)
!3546 = !DILocation(line: 5181, column: 9, scope: !3530)
!3547 = !DILocation(line: 5181, column: 9, scope: !3521)
!3548 = !DILocation(line: 5182, column: 9, scope: !3529)
!3549 = !DILocation(line: 5182, column: 20, scope: !3529)
!3550 = !DILocation(line: 5182, column: 23, scope: !3529)
!3551 = !DILocation(line: 5183, column: 13, scope: !3529)
!3552 = !DILocation(line: 5183, column: 11, scope: !3529)
!3553 = !DILocation(line: 5184, column: 16, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3529, file: !3, line: 5184, column: 9)
!3555 = !DILocation(line: 5184, column: 14, scope: !3554)
!3556 = !DILocation(line: 5184, column: 21, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 5184, column: 9)
!3558 = !DILocation(line: 5184, column: 25, scope: !3557)
!3559 = !DILocation(line: 5184, column: 23, scope: !3557)
!3560 = !DILocation(line: 5184, column: 9, scope: !3554)
!3561 = !DILocation(line: 5185, column: 17, scope: !3562)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !3, line: 5185, column: 17)
!3563 = distinct !DILexicalBlock(scope: !3557, file: !3, line: 5184, column: 33)
!3564 = !DILocation(line: 5185, column: 57, scope: !3562)
!3565 = !DILocation(line: 5185, column: 42, scope: !3562)
!3566 = !DILocation(line: 5185, column: 17, scope: !3563)
!3567 = !DILocation(line: 5186, column: 17, scope: !3562)
!3568 = !DILocation(line: 5187, column: 9, scope: !3563)
!3569 = !DILocation(line: 5184, column: 29, scope: !3557)
!3570 = !DILocation(line: 5184, column: 9, scope: !3557)
!3571 = distinct !{!3571, !3560, !3572, !1801}
!3572 = !DILocation(line: 5187, column: 9, scope: !3554)
!3573 = !DILocation(line: 5188, column: 9, scope: !3529)
!3574 = !DILocation(line: 5189, column: 5, scope: !3530)
!3575 = !DILocation(line: 5190, column: 26, scope: !3521)
!3576 = !DILocation(line: 5190, column: 29, scope: !3521)
!3577 = !DILocation(line: 5190, column: 12, scope: !3521)
!3578 = !DILocation(line: 5190, column: 5, scope: !3521)
!3579 = !DILocation(line: 5191, column: 1, scope: !3521)
!3580 = distinct !DISubprogram(name: "__Pyx_InBases", scope: !3, file: !3, line: 5169, type: !3522, scopeLine: 5169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3581)
!3581 = !{!3582, !3583}
!3582 = !DILocalVariable(name: "a", arg: 1, scope: !3580, file: !3, line: 5169, type: !20)
!3583 = !DILocalVariable(name: "b", arg: 2, scope: !3580, file: !3, line: 5169, type: !20)
!3584 = !DILocation(line: 5169, column: 40, scope: !3580)
!3585 = !DILocation(line: 5169, column: 57, scope: !3580)
!3586 = !DILocation(line: 5170, column: 5, scope: !3580)
!3587 = !DILocation(line: 5170, column: 12, scope: !3580)
!3588 = !DILocation(line: 5171, column: 13, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3580, file: !3, line: 5170, column: 15)
!3590 = !DILocation(line: 5171, column: 16, scope: !3589)
!3591 = !{!1364, !1253, i64 256}
!3592 = !DILocation(line: 5171, column: 11, scope: !3589)
!3593 = !DILocation(line: 5172, column: 13, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3589, file: !3, line: 5172, column: 13)
!3595 = !DILocation(line: 5172, column: 18, scope: !3594)
!3596 = !DILocation(line: 5172, column: 15, scope: !3594)
!3597 = !DILocation(line: 5172, column: 13, scope: !3589)
!3598 = !DILocation(line: 5173, column: 13, scope: !3594)
!3599 = distinct !{!3599, !3586, !3600, !1801}
!3600 = !DILocation(line: 5174, column: 5, scope: !3580)
!3601 = !DILocation(line: 5175, column: 12, scope: !3580)
!3602 = !DILocation(line: 5175, column: 14, scope: !3580)
!3603 = !DILocation(line: 5175, column: 5, scope: !3580)
!3604 = !DILocation(line: 5176, column: 1, scope: !3580)
!3605 = !DISubprogram(name: "_PyDict_GetItem_KnownHash", scope: !325, file: !325, line: 34, type: !3606, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{!6, !6, !6, !170}
!3608 = distinct !DISubprogram(name: "__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4__setstate_cython__", scope: !3, file: !3, line: 2216, type: !3609, scopeLine: 2216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3611)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!6, !306, !6}
!3611 = !{!3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620}
!3612 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !3608, file: !3, line: 2216, type: !306)
!3613 = !DILocalVariable(name: "__pyx_v___pyx_state", arg: 2, scope: !3608, file: !3, line: 2216, type: !6)
!3614 = !DILocalVariable(name: "__pyx_r", scope: !3608, file: !3, line: 2217, type: !6)
!3615 = !DILocalVariable(name: "__pyx_t_1", scope: !3608, file: !3, line: 2219, type: !6)
!3616 = !DILocalVariable(name: "__pyx_lineno", scope: !3608, file: !3, line: 2220, type: !54)
!3617 = !DILocalVariable(name: "__pyx_filename", scope: !3608, file: !3, line: 2221, type: !32)
!3618 = !DILocalVariable(name: "__pyx_clineno", scope: !3608, file: !3, line: 2222, type: !54)
!3619 = !DILabel(scope: !3608, name: "__pyx_L1_error", file: !3, line: 2245)
!3620 = !DILabel(scope: !3608, name: "__pyx_L0", file: !3, line: 2249)
!3621 = !DILocation(line: 2216, column: 156, scope: !3608)
!3622 = !DILocation(line: 2216, column: 180, scope: !3608)
!3623 = !DILocation(line: 2217, column: 3, scope: !3608)
!3624 = !DILocation(line: 2217, column: 13, scope: !3608)
!3625 = !DILocation(line: 2219, column: 3, scope: !3608)
!3626 = !DILocation(line: 2219, column: 13, scope: !3608)
!3627 = !DILocation(line: 2220, column: 3, scope: !3608)
!3628 = !DILocation(line: 2220, column: 7, scope: !3608)
!3629 = !DILocation(line: 2221, column: 3, scope: !3608)
!3630 = !DILocation(line: 2221, column: 15, scope: !3608)
!3631 = !DILocation(line: 2222, column: 3, scope: !3608)
!3632 = !DILocation(line: 2222, column: 7, scope: !3608)
!3633 = !DILocation(line: 2230, column: 9, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 2230, column: 7)
!3635 = !DILocation(line: 2230, column: 56, scope: !3634)
!3636 = !DILocation(line: 2230, column: 60, scope: !3634)
!3637 = !DILocation(line: 2230, column: 81, scope: !3634)
!3638 = !DILocation(line: 2230, column: 92, scope: !3634)
!3639 = !DILocation(line: 2230, column: 114, scope: !3634)
!3640 = !DILocation(line: 2230, column: 170, scope: !3634)
!3641 = !DILocation(line: 2230, column: 200, scope: !3634)
!3642 = !DILocation(line: 2230, column: 101, scope: !3634)
!3643 = !DILocation(line: 2230, column: 7, scope: !3608)
!3644 = !DILocation(line: 2230, column: 215, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 2230, column: 215)
!3646 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 2230, column: 215)
!3647 = !DILocation(line: 2230, column: 215, scope: !3646)
!3648 = !DILocation(line: 2231, column: 93, scope: !3608)
!3649 = !DILocation(line: 2231, column: 119, scope: !3608)
!3650 = !DILocation(line: 2231, column: 15, scope: !3608)
!3651 = !DILocation(line: 2231, column: 13, scope: !3608)
!3652 = !DILocation(line: 2231, column: 146, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 2231, column: 146)
!3654 = !DILocation(line: 2231, column: 146, scope: !3608)
!3655 = !DILocation(line: 2231, column: 168, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !3, line: 2231, column: 168)
!3657 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 2231, column: 168)
!3658 = !DILocation(line: 2231, column: 168, scope: !3657)
!3659 = !DILocation(line: 2233, column: 3, scope: !3608)
!3660 = !DILocation(line: 2233, column: 38, scope: !3608)
!3661 = !DILocation(line: 2243, column: 11, scope: !3608)
!3662 = !DILocation(line: 2243, column: 22, scope: !3608)
!3663 = !DILocation(line: 2244, column: 3, scope: !3608)
!3664 = !DILocation(line: 2245, column: 3, scope: !3608)
!3665 = !DILocation(line: 2246, column: 3, scope: !3608)
!3666 = !DILocation(line: 2247, column: 86, scope: !3608)
!3667 = !DILocation(line: 2247, column: 101, scope: !3608)
!3668 = !DILocation(line: 2247, column: 115, scope: !3608)
!3669 = !DILocation(line: 2247, column: 3, scope: !3608)
!3670 = !DILocation(line: 2248, column: 11, scope: !3608)
!3671 = !DILocation(line: 2248, column: 3, scope: !3608)
!3672 = !DILocation(line: 2249, column: 3, scope: !3608)
!3673 = !DILocation(line: 2252, column: 10, scope: !3608)
!3674 = !DILocation(line: 2253, column: 1, scope: !3608)
!3675 = !DILocation(line: 2252, column: 3, scope: !3608)
!3676 = distinct !DISubprogram(name: "_Py_IS_TYPE", scope: !8, file: !8, line: 127, type: !3677, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3681)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!54, !360, !3679}
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!3681 = !{!3682, !3683}
!3682 = !DILocalVariable(name: "ob", arg: 1, scope: !3676, file: !8, line: 127, type: !360)
!3683 = !DILocalVariable(name: "type", arg: 2, scope: !3676, file: !8, line: 127, type: !3679)
!3684 = !DILocation(line: 127, column: 47, scope: !3676)
!3685 = !DILocation(line: 127, column: 71, scope: !3676)
!3686 = !DILocation(line: 128, column: 12, scope: !3676)
!3687 = !DILocation(line: 128, column: 16, scope: !3676)
!3688 = !DILocation(line: 128, column: 27, scope: !3676)
!3689 = !DILocation(line: 128, column: 24, scope: !3676)
!3690 = !DILocation(line: 128, column: 5, scope: !3676)
!3691 = distinct !DISubprogram(name: "__pyx_f_6pandas_5_libs_8indexing___pyx_unpickle_NDFrameIndexerBase__set_state", scope: !3, file: !3, line: 2532, type: !3609, scopeLine: 2532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3692)
!3692 = !{!3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3715, !3717, !3718}
!3693 = !DILocalVariable(name: "__pyx_v___pyx_result", arg: 1, scope: !3691, file: !3, line: 2532, type: !306)
!3694 = !DILocalVariable(name: "__pyx_v___pyx_state", arg: 2, scope: !3691, file: !3, line: 2532, type: !6)
!3695 = !DILocalVariable(name: "__pyx_r", scope: !3691, file: !3, line: 2533, type: !6)
!3696 = !DILocalVariable(name: "__pyx_t_1", scope: !3691, file: !3, line: 2535, type: !6)
!3697 = !DILocalVariable(name: "__pyx_t_2", scope: !3691, file: !3, line: 2536, type: !12)
!3698 = !DILocalVariable(name: "__pyx_t_3", scope: !3691, file: !3, line: 2537, type: !54)
!3699 = !DILocalVariable(name: "__pyx_t_4", scope: !3691, file: !3, line: 2538, type: !54)
!3700 = !DILocalVariable(name: "__pyx_t_5", scope: !3691, file: !3, line: 2539, type: !54)
!3701 = !DILocalVariable(name: "__pyx_t_6", scope: !3691, file: !3, line: 2540, type: !6)
!3702 = !DILocalVariable(name: "__pyx_t_7", scope: !3691, file: !3, line: 2541, type: !6)
!3703 = !DILocalVariable(name: "__pyx_t_8", scope: !3691, file: !3, line: 2542, type: !6)
!3704 = !DILocalVariable(name: "__pyx_lineno", scope: !3691, file: !3, line: 2543, type: !54)
!3705 = !DILocalVariable(name: "__pyx_filename", scope: !3691, file: !3, line: 2544, type: !32)
!3706 = !DILocalVariable(name: "__pyx_clineno", scope: !3691, file: !3, line: 2545, type: !54)
!3707 = !DILabel(scope: !3691, name: "__pyx_L4_bool_binop_done", file: !3, line: 2608)
!3708 = !DILocalVariable(name: "function", scope: !3709, file: !3, line: 2631, type: !6)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !3, line: 2630, column: 30)
!3710 = distinct !DILexicalBlock(scope: !3711, file: !3, line: 2630, column: 11)
!3711 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 2628, column: 69)
!3712 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 2628, column: 9)
!3713 = distinct !DILexicalBlock(scope: !3714, file: !3, line: 2609, column: 18)
!3714 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2609, column: 7)
!3715 = !DILocalVariable(name: "tmp", scope: !3716, file: !3, line: 2634, type: !6)
!3716 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 2634, column: 9)
!3717 = !DILabel(scope: !3691, name: "__pyx_L1_error", file: !3, line: 2664)
!3718 = !DILabel(scope: !3691, name: "__pyx_L0", file: !3, line: 2671)
!3719 = !DILocation(line: 2532, column: 158, scope: !3691)
!3720 = !DILocation(line: 2532, column: 190, scope: !3691)
!3721 = !DILocation(line: 2533, column: 3, scope: !3691)
!3722 = !DILocation(line: 2533, column: 13, scope: !3691)
!3723 = !DILocation(line: 2535, column: 3, scope: !3691)
!3724 = !DILocation(line: 2535, column: 13, scope: !3691)
!3725 = !DILocation(line: 2536, column: 3, scope: !3691)
!3726 = !DILocation(line: 2536, column: 14, scope: !3691)
!3727 = !DILocation(line: 2537, column: 3, scope: !3691)
!3728 = !DILocation(line: 2537, column: 7, scope: !3691)
!3729 = !DILocation(line: 2538, column: 3, scope: !3691)
!3730 = !DILocation(line: 2538, column: 7, scope: !3691)
!3731 = !DILocation(line: 2539, column: 3, scope: !3691)
!3732 = !DILocation(line: 2539, column: 7, scope: !3691)
!3733 = !DILocation(line: 2540, column: 3, scope: !3691)
!3734 = !DILocation(line: 2540, column: 13, scope: !3691)
!3735 = !DILocation(line: 2541, column: 3, scope: !3691)
!3736 = !DILocation(line: 2541, column: 13, scope: !3691)
!3737 = !DILocation(line: 2542, column: 3, scope: !3691)
!3738 = !DILocation(line: 2542, column: 13, scope: !3691)
!3739 = !DILocation(line: 2543, column: 3, scope: !3691)
!3740 = !DILocation(line: 2543, column: 7, scope: !3691)
!3741 = !DILocation(line: 2544, column: 3, scope: !3691)
!3742 = !DILocation(line: 2544, column: 15, scope: !3691)
!3743 = !DILocation(line: 2545, column: 3, scope: !3691)
!3744 = !DILocation(line: 2545, column: 7, scope: !3691)
!3745 = !DILocation(line: 2555, column: 7, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2555, column: 7)
!3747 = !DILocation(line: 2555, column: 7, scope: !3691)
!3748 = !DILocation(line: 2556, column: 21, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 2555, column: 49)
!3750 = !DILocation(line: 2556, column: 5, scope: !3749)
!3751 = !DILocation(line: 2557, column: 5, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !3, line: 2557, column: 5)
!3753 = distinct !DILexicalBlock(scope: !3749, file: !3, line: 2557, column: 5)
!3754 = !DILocation(line: 2557, column: 5, scope: !3753)
!3755 = !DILocation(line: 2559, column: 15, scope: !3691)
!3756 = !DILocation(line: 2559, column: 13, scope: !3691)
!3757 = !DILocation(line: 2559, column: 108, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2559, column: 108)
!3759 = !DILocation(line: 2559, column: 108, scope: !3691)
!3760 = !DILocation(line: 2559, column: 130, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !3, line: 2559, column: 130)
!3762 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 2559, column: 130)
!3763 = !DILocation(line: 2559, column: 130, scope: !3762)
!3764 = !DILocation(line: 2561, column: 39, scope: !3691)
!3765 = !DILocation(line: 2561, column: 15, scope: !3691)
!3766 = !DILocation(line: 2561, column: 13, scope: !3691)
!3767 = !DILocation(line: 2561, column: 55, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2561, column: 55)
!3769 = !DILocation(line: 0, scope: !3768)
!3770 = !DILocation(line: 2561, column: 55, scope: !3691)
!3771 = !DILocation(line: 2561, column: 116, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 2561, column: 116)
!3773 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 2561, column: 116)
!3774 = !DILocation(line: 2561, column: 116, scope: !3773)
!3775 = !DILocation(line: 2562, column: 3, scope: !3691)
!3776 = !DILocation(line: 2562, column: 38, scope: !3691)
!3777 = !DILocation(line: 2563, column: 33, scope: !3691)
!3778 = !DILocation(line: 2563, column: 3, scope: !3691)
!3779 = !DILocation(line: 2563, column: 25, scope: !3691)
!3780 = !DILocation(line: 2563, column: 31, scope: !3691)
!3781 = !DILocation(line: 2564, column: 7, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2564, column: 7)
!3783 = !DILocation(line: 2564, column: 7, scope: !3691)
!3784 = !DILocation(line: 2565, column: 21, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 2564, column: 49)
!3786 = !DILocation(line: 2565, column: 5, scope: !3785)
!3787 = !DILocation(line: 2566, column: 5, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 2566, column: 5)
!3789 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 2566, column: 5)
!3790 = !DILocation(line: 2566, column: 5, scope: !3789)
!3791 = !DILocation(line: 2568, column: 15, scope: !3691)
!3792 = !DILocation(line: 2568, column: 13, scope: !3691)
!3793 = !DILocation(line: 2568, column: 108, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2568, column: 108)
!3795 = !DILocation(line: 2568, column: 108, scope: !3691)
!3796 = !DILocation(line: 2568, column: 130, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 2568, column: 130)
!3798 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 2568, column: 130)
!3799 = !DILocation(line: 2568, column: 130, scope: !3798)
!3800 = !DILocation(line: 2570, column: 9, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2570, column: 7)
!3802 = !DILocation(line: 2570, column: 48, scope: !3801)
!3803 = !DILocation(line: 2570, column: 52, scope: !3801)
!3804 = !DILocation(line: 2570, column: 63, scope: !3801)
!3805 = !DILocation(line: 2570, column: 74, scope: !3801)
!3806 = !DILocation(line: 2570, column: 96, scope: !3801)
!3807 = !DILocation(line: 2570, column: 154, scope: !3801)
!3808 = !DILocation(line: 2570, column: 174, scope: !3801)
!3809 = !DILocation(line: 2570, column: 83, scope: !3801)
!3810 = !DILocation(line: 2570, column: 7, scope: !3691)
!3811 = !DILocation(line: 2570, column: 189, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 2570, column: 189)
!3813 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 2570, column: 189)
!3814 = !DILocation(line: 2570, column: 189, scope: !3813)
!3815 = !DILocation(line: 2573, column: 3, scope: !3691)
!3816 = !DILocation(line: 2574, column: 44, scope: !3691)
!3817 = !DILocation(line: 2574, column: 3, scope: !3691)
!3818 = !DILocation(line: 2574, column: 25, scope: !3691)
!3819 = !DILocation(line: 2574, column: 30, scope: !3691)
!3820 = !DILocation(line: 2575, column: 13, scope: !3691)
!3821 = !DILocation(line: 2576, column: 7, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2576, column: 7)
!3823 = !DILocation(line: 2576, column: 7, scope: !3691)
!3824 = !DILocation(line: 2577, column: 21, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 2576, column: 49)
!3826 = !DILocation(line: 2577, column: 5, scope: !3825)
!3827 = !DILocation(line: 2578, column: 5, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 2578, column: 5)
!3829 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 2578, column: 5)
!3830 = !DILocation(line: 2578, column: 5, scope: !3829)
!3831 = !DILocation(line: 2580, column: 15, scope: !3691)
!3832 = !DILocation(line: 2580, column: 13, scope: !3691)
!3833 = !DILocation(line: 2580, column: 108, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2580, column: 108)
!3835 = !DILocation(line: 2580, column: 108, scope: !3691)
!3836 = !DILocation(line: 2580, column: 130, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 2580, column: 130)
!3838 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 2580, column: 130)
!3839 = !DILocation(line: 2580, column: 130, scope: !3838)
!3840 = !DILocation(line: 2584, column: 3, scope: !3691)
!3841 = !DILocation(line: 2585, column: 31, scope: !3691)
!3842 = !DILocation(line: 2585, column: 3, scope: !3691)
!3843 = !DILocation(line: 2585, column: 25, scope: !3691)
!3844 = !DILocation(line: 2585, column: 29, scope: !3691)
!3845 = !DILocation(line: 2586, column: 13, scope: !3691)
!3846 = !DILocation(line: 2594, column: 7, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2594, column: 7)
!3848 = !DILocation(line: 2594, column: 7, scope: !3691)
!3849 = !DILocation(line: 2595, column: 21, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 2594, column: 49)
!3851 = !DILocation(line: 2595, column: 5, scope: !3850)
!3852 = !DILocation(line: 2596, column: 5, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 2596, column: 5)
!3854 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 2596, column: 5)
!3855 = !DILocation(line: 2596, column: 5, scope: !3854)
!3856 = !DILocation(line: 2598, column: 15, scope: !3691)
!3857 = !DILocation(line: 2598, column: 13, scope: !3691)
!3858 = !DILocation(line: 2598, column: 58, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2598, column: 58)
!3860 = !DILocation(line: 2598, column: 58, scope: !3691)
!3861 = !DILocation(line: 2598, column: 99, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 2598, column: 99)
!3863 = distinct !DILexicalBlock(scope: !3859, file: !3, line: 2598, column: 99)
!3864 = !DILocation(line: 2598, column: 99, scope: !3863)
!3865 = !DILocation(line: 2599, column: 17, scope: !3691)
!3866 = !DILocation(line: 2599, column: 27, scope: !3691)
!3867 = !DILocation(line: 2599, column: 32, scope: !3691)
!3868 = !DILocation(line: 2599, column: 13, scope: !3691)
!3869 = !DILocation(line: 2600, column: 7, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2600, column: 7)
!3871 = !DILocation(line: 2600, column: 7, scope: !3691)
!3872 = !DILocation(line: 2601, column: 3, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 2600, column: 18)
!3874 = !DILocation(line: 2602, column: 17, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 2601, column: 10)
!3876 = !DILocation(line: 2602, column: 15, scope: !3875)
!3877 = !DILocation(line: 2603, column: 5, scope: !3875)
!3878 = !DILocation(line: 2605, column: 42, scope: !3691)
!3879 = !DILocation(line: 2605, column: 65, scope: !3691)
!3880 = !DILocation(line: 2605, column: 15, scope: !3691)
!3881 = !DILocation(line: 2605, column: 13, scope: !3691)
!3882 = !DILocation(line: 2605, column: 86, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 2605, column: 86)
!3884 = !DILocation(line: 2605, column: 86, scope: !3691)
!3885 = !DILocation(line: 2605, column: 120, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 2605, column: 120)
!3887 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 2605, column: 120)
!3888 = !DILocation(line: 2605, column: 120, scope: !3887)
!3889 = !DILocation(line: 2606, column: 16, scope: !3691)
!3890 = !DILocation(line: 2606, column: 26, scope: !3691)
!3891 = !DILocation(line: 2606, column: 13, scope: !3691)
!3892 = !DILocation(line: 2607, column: 15, scope: !3691)
!3893 = !DILocation(line: 2607, column: 13, scope: !3691)
!3894 = !DILocation(line: 2607, column: 3, scope: !3691)
!3895 = !DILocation(line: 2608, column: 3, scope: !3691)
!3896 = !DILocation(line: 2609, column: 7, scope: !3714)
!3897 = !DILocation(line: 2609, column: 7, scope: !3691)
!3898 = !DILocation(line: 2616, column: 56, scope: !3713)
!3899 = !DILocation(line: 2616, column: 79, scope: !3713)
!3900 = !DILocation(line: 2616, column: 17, scope: !3713)
!3901 = !DILocation(line: 2616, column: 15, scope: !3713)
!3902 = !DILocation(line: 2616, column: 100, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 2616, column: 100)
!3904 = !DILocation(line: 2616, column: 100, scope: !3713)
!3905 = !DILocation(line: 2616, column: 122, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 2616, column: 122)
!3907 = distinct !DILexicalBlock(scope: !3903, file: !3, line: 2616, column: 122)
!3908 = !DILocation(line: 2616, column: 122, scope: !3907)
!3909 = !DILocation(line: 2618, column: 43, scope: !3713)
!3910 = !DILocation(line: 2618, column: 54, scope: !3713)
!3911 = !DILocation(line: 2618, column: 17, scope: !3713)
!3912 = !DILocation(line: 2618, column: 15, scope: !3713)
!3913 = !DILocation(line: 2618, column: 77, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 2618, column: 77)
!3915 = !DILocation(line: 2618, column: 77, scope: !3713)
!3916 = !DILocation(line: 2618, column: 99, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3918, file: !3, line: 2618, column: 99)
!3918 = distinct !DILexicalBlock(scope: !3914, file: !3, line: 2618, column: 99)
!3919 = !DILocation(line: 2618, column: 99, scope: !3918)
!3920 = !DILocation(line: 2620, column: 5, scope: !3713)
!3921 = !DILocation(line: 2620, column: 40, scope: !3713)
!3922 = !DILocation(line: 2621, column: 9, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 2621, column: 9)
!3924 = !DILocation(line: 2621, column: 9, scope: !3713)
!3925 = !DILocation(line: 2622, column: 23, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 2621, column: 51)
!3927 = !DILocation(line: 2622, column: 7, scope: !3926)
!3928 = !DILocation(line: 2623, column: 7, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3930, file: !3, line: 2623, column: 7)
!3930 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 2623, column: 7)
!3931 = !DILocation(line: 2623, column: 7, scope: !3930)
!3932 = !DILocation(line: 2625, column: 17, scope: !3713)
!3933 = !DILocation(line: 2625, column: 15, scope: !3713)
!3934 = !DILocation(line: 2625, column: 110, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 2625, column: 110)
!3936 = !DILocation(line: 2625, column: 110, scope: !3713)
!3937 = !DILocation(line: 2625, column: 132, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 2625, column: 132)
!3939 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 2625, column: 132)
!3940 = !DILocation(line: 2625, column: 132, scope: !3939)
!3941 = !DILocation(line: 2627, column: 15, scope: !3713)
!3942 = !DILocation(line: 2628, column: 34, scope: !3712)
!3943 = !DILocation(line: 2628, column: 9, scope: !3713)
!3944 = !DILocation(line: 2629, column: 19, scope: !3711)
!3945 = !{!3946, !1253, i64 24}
!3946 = !{!"", !1366, i64 0, !1253, i64 16, !1253, i64 24, !1253, i64 32, !1253, i64 40}
!3947 = !DILocation(line: 2629, column: 17, scope: !3711)
!3948 = !DILocation(line: 2630, column: 11, scope: !3710)
!3949 = !DILocation(line: 2630, column: 11, scope: !3711)
!3950 = !DILocation(line: 2631, column: 9, scope: !3709)
!3951 = !DILocation(line: 2631, column: 19, scope: !3709)
!3952 = !DILocation(line: 2631, column: 30, scope: !3709)
!3953 = !{!3946, !1253, i64 16}
!3954 = !DILocation(line: 2632, column: 9, scope: !3709)
!3955 = !DILocation(line: 2633, column: 9, scope: !3709)
!3956 = !DILocation(line: 2634, column: 9, scope: !3709)
!3957 = !DILocation(line: 2634, column: 9, scope: !3716)
!3958 = !DILocation(line: 2635, column: 7, scope: !3710)
!3959 = !DILocation(line: 2635, column: 7, scope: !3709)
!3960 = !DILocation(line: 2636, column: 5, scope: !3711)
!3961 = !DILocation(line: 2637, column: 18, scope: !3713)
!3962 = !DILocation(line: 2637, column: 17, scope: !3713)
!3963 = !DILocation(line: 2637, column: 56, scope: !3713)
!3964 = !DILocation(line: 2637, column: 67, scope: !3713)
!3965 = !DILocation(line: 2637, column: 78, scope: !3713)
!3966 = !DILocation(line: 2637, column: 31, scope: !3713)
!3967 = !DILocation(line: 2637, column: 117, scope: !3713)
!3968 = !DILocation(line: 2637, column: 128, scope: !3713)
!3969 = !DILocation(line: 2637, column: 91, scope: !3713)
!3970 = !DILocation(line: 2637, column: 15, scope: !3713)
!3971 = !DILocation(line: 2638, column: 5, scope: !3713)
!3972 = !DILocation(line: 2638, column: 41, scope: !3713)
!3973 = !DILocation(line: 2639, column: 5, scope: !3713)
!3974 = !DILocation(line: 2639, column: 40, scope: !3713)
!3975 = !DILocation(line: 2640, column: 9, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 2640, column: 9)
!3977 = !DILocation(line: 2640, column: 9, scope: !3713)
!3978 = !DILocation(line: 2640, column: 31, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 2640, column: 31)
!3980 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 2640, column: 31)
!3981 = !DILocation(line: 2640, column: 31, scope: !3980)
!3982 = !DILocation(line: 2642, column: 5, scope: !3713)
!3983 = !DILocation(line: 2642, column: 40, scope: !3713)
!3984 = !DILocation(line: 2643, column: 5, scope: !3713)
!3985 = !DILocation(line: 2643, column: 40, scope: !3713)
!3986 = !DILocation(line: 2651, column: 3, scope: !3713)
!3987 = !DILocation(line: 2662, column: 11, scope: !3691)
!3988 = !DILocation(line: 2662, column: 22, scope: !3691)
!3989 = !DILocation(line: 2663, column: 3, scope: !3691)
!3990 = !DILocation(line: 2664, column: 3, scope: !3691)
!3991 = !DILocation(line: 2665, column: 3, scope: !3691)
!3992 = !DILocation(line: 2666, column: 3, scope: !3691)
!3993 = !DILocation(line: 2667, column: 3, scope: !3691)
!3994 = !DILocation(line: 2668, column: 3, scope: !3691)
!3995 = !DILocation(line: 2669, column: 92, scope: !3691)
!3996 = !DILocation(line: 2669, column: 107, scope: !3691)
!3997 = !DILocation(line: 2669, column: 121, scope: !3691)
!3998 = !DILocation(line: 2669, column: 3, scope: !3691)
!3999 = !DILocation(line: 2670, column: 11, scope: !3691)
!4000 = !DILocation(line: 2670, column: 3, scope: !3691)
!4001 = !DILocation(line: 2671, column: 3, scope: !3691)
!4002 = !DILocation(line: 2674, column: 10, scope: !3691)
!4003 = !DILocation(line: 2675, column: 1, scope: !3691)
!4004 = !DILocation(line: 2674, column: 3, scope: !3691)
!4005 = distinct !DISubprogram(name: "__Pyx_GetItemInt_Tuple_Fast", scope: !3, file: !3, line: 4231, type: !4006, scopeLine: 4233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4008)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{!6, !6, !12, !54, !54}
!4008 = !{!4009, !4010, !4011, !4012, !4013, !4014}
!4009 = !DILocalVariable(name: "o", arg: 1, scope: !4005, file: !3, line: 4231, type: !6)
!4010 = !DILocalVariable(name: "i", arg: 2, scope: !4005, file: !3, line: 4231, type: !12)
!4011 = !DILocalVariable(name: "wraparound", arg: 3, scope: !4005, file: !3, line: 4232, type: !54)
!4012 = !DILocalVariable(name: "boundscheck", arg: 4, scope: !4005, file: !3, line: 4233, type: !54)
!4013 = !DILocalVariable(name: "wrapped_i", scope: !4005, file: !3, line: 4235, type: !12)
!4014 = !DILocalVariable(name: "r", scope: !4015, file: !3, line: 4240, type: !6)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 4239, column: 89)
!4016 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 4239, column: 9)
!4017 = !DILocation(line: 4231, column: 70, scope: !4005)
!4018 = !DILocation(line: 4231, column: 84, scope: !4005)
!4019 = !DILocation(line: 4232, column: 85, scope: !4005)
!4020 = !DILocation(line: 4233, column: 85, scope: !4005)
!4021 = !DILocation(line: 4235, column: 5, scope: !4005)
!4022 = !DILocation(line: 4235, column: 16, scope: !4005)
!4023 = !DILocation(line: 4235, column: 28, scope: !4005)
!4024 = !DILocation(line: 4236, column: 9, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 4236, column: 9)
!4026 = !DILocation(line: 4236, column: 22, scope: !4025)
!4027 = !DILocation(line: 4236, column: 20, scope: !4025)
!4028 = !DILocation(line: 4236, column: 9, scope: !4005)
!4029 = !DILocation(line: 4237, column: 22, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 4236, column: 39)
!4031 = !DILocation(line: 4237, column: 19, scope: !4030)
!4032 = !DILocation(line: 4238, column: 5, scope: !4030)
!4033 = !DILocation(line: 4239, column: 11, scope: !4016)
!4034 = !DILocation(line: 4239, column: 24, scope: !4016)
!4035 = !DILocation(line: 4239, column: 27, scope: !4016)
!4036 = !DILocation(line: 4239, column: 9, scope: !4005)
!4037 = !DILocation(line: 4240, column: 9, scope: !4015)
!4038 = !DILocation(line: 4240, column: 19, scope: !4015)
!4039 = !DILocation(line: 4240, column: 23, scope: !4015)
!4040 = !DILocation(line: 4241, column: 9, scope: !4015)
!4041 = !DILocation(line: 4242, column: 16, scope: !4015)
!4042 = !DILocation(line: 4242, column: 9, scope: !4015)
!4043 = !DILocation(line: 4243, column: 5, scope: !4016)
!4044 = !DILocation(line: 4244, column: 37, scope: !4005)
!4045 = !DILocation(line: 4244, column: 58, scope: !4005)
!4046 = !DILocation(line: 4244, column: 40, scope: !4005)
!4047 = !DILocation(line: 4244, column: 12, scope: !4005)
!4048 = !DILocation(line: 4244, column: 5, scope: !4005)
!4049 = !DILocation(line: 4248, column: 1, scope: !4005)
!4050 = distinct !DISubprogram(name: "__Pyx_PyIndex_AsSsize_t", scope: !3, file: !3, line: 5491, type: !130, scopeLine: 5491, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4051)
!4051 = !{!4052, !4053, !4054, !4055, !4060}
!4052 = !DILocalVariable(name: "b", arg: 1, scope: !4050, file: !3, line: 5491, type: !6)
!4053 = !DILocalVariable(name: "ival", scope: !4050, file: !3, line: 5492, type: !12)
!4054 = !DILocalVariable(name: "x", scope: !4050, file: !3, line: 5493, type: !6)
!4055 = !DILocalVariable(name: "digits", scope: !4056, file: !3, line: 5504, type: !4058)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 5502, column: 37)
!4057 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 5502, column: 7)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !381)
!4060 = !DILocalVariable(name: "size", scope: !4056, file: !3, line: 5505, type: !651)
!4061 = !DILocation(line: 5491, column: 67, scope: !4050)
!4062 = !DILocation(line: 5492, column: 3, scope: !4050)
!4063 = !DILocation(line: 5492, column: 14, scope: !4050)
!4064 = !DILocation(line: 5493, column: 3, scope: !4050)
!4065 = !DILocation(line: 5493, column: 13, scope: !4050)
!4066 = !DILocation(line: 5502, column: 7, scope: !4057)
!4067 = !DILocation(line: 5502, column: 7, scope: !4050)
!4068 = !DILocation(line: 5504, column: 5, scope: !4056)
!4069 = !DILocation(line: 5504, column: 18, scope: !4056)
!4070 = !DILocation(line: 5504, column: 43, scope: !4056)
!4071 = !DILocation(line: 5504, column: 47, scope: !4056)
!4072 = !DILocation(line: 5504, column: 27, scope: !4056)
!4073 = !DILocation(line: 5505, column: 5, scope: !4056)
!4074 = !DILocation(line: 5505, column: 22, scope: !4056)
!4075 = !DILocation(line: 5505, column: 29, scope: !4056)
!4076 = !DILocation(line: 5506, column: 9, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 5506, column: 9)
!4078 = !DILocation(line: 5506, column: 9, scope: !4056)
!4079 = !DILocation(line: 5507, column: 16, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 5506, column: 43)
!4081 = !DILocation(line: 5507, column: 31, scope: !4080)
!4082 = !DILocation(line: 5507, column: 14, scope: !4080)
!4083 = !DILocation(line: 5508, column: 13, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 5508, column: 13)
!4085 = !DILocation(line: 5508, column: 18, scope: !4084)
!4086 = !DILocation(line: 5508, column: 13, scope: !4080)
!4087 = !DILocation(line: 5508, column: 33, scope: !4084)
!4088 = !DILocation(line: 5508, column: 32, scope: !4084)
!4089 = !DILocation(line: 5508, column: 30, scope: !4084)
!4090 = !DILocation(line: 5508, column: 25, scope: !4084)
!4091 = !DILocation(line: 5509, column: 16, scope: !4080)
!4092 = !DILocation(line: 5509, column: 9, scope: !4080)
!4093 = !DILocation(line: 5511, column: 15, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 5510, column: 12)
!4095 = !DILocation(line: 5511, column: 7, scope: !4094)
!4096 = !DILocation(line: 5514, column: 46, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 5513, column: 59)
!4098 = distinct !DILexicalBlock(scope: !4099, file: !3, line: 5513, column: 16)
!4099 = distinct !DILexicalBlock(scope: !4094, file: !3, line: 5511, column: 21)
!4100 = !DILocation(line: 5514, column: 38, scope: !4097)
!4101 = !DILocation(line: 5514, column: 57, scope: !4097)
!4102 = !DILocation(line: 5514, column: 84, scope: !4097)
!4103 = !DILocation(line: 5514, column: 76, scope: !4097)
!4104 = !DILocation(line: 5514, column: 74, scope: !4097)
!4105 = !DILocation(line: 5514, column: 14, scope: !4097)
!4106 = !DILocation(line: 5519, column: 47, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !3, line: 5518, column: 59)
!4108 = distinct !DILexicalBlock(scope: !4099, file: !3, line: 5518, column: 16)
!4109 = !DILocation(line: 5519, column: 39, scope: !4107)
!4110 = !DILocation(line: 5519, column: 58, scope: !4107)
!4111 = !DILocation(line: 5519, column: 85, scope: !4107)
!4112 = !DILocation(line: 5519, column: 77, scope: !4107)
!4113 = !DILocation(line: 5519, column: 75, scope: !4107)
!4114 = !DILocation(line: 5519, column: 21, scope: !4107)
!4115 = !DILocation(line: 5519, column: 14, scope: !4107)
!4116 = !DILocation(line: 5526, column: 12, scope: !4099)
!4117 = !DILocation(line: 5531, column: 12, scope: !4099)
!4118 = !DILocation(line: 5536, column: 12, scope: !4099)
!4119 = !DILocation(line: 5541, column: 12, scope: !4099)
!4120 = !DILocation(line: 5545, column: 29, scope: !4056)
!4121 = !DILocation(line: 5545, column: 12, scope: !4056)
!4122 = !DILocation(line: 5545, column: 5, scope: !4056)
!4123 = !DILocation(line: 5546, column: 3, scope: !4057)
!4124 = !DILocation(line: 5547, column: 22, scope: !4050)
!4125 = !DILocation(line: 5547, column: 7, scope: !4050)
!4126 = !DILocation(line: 5547, column: 5, scope: !4050)
!4127 = !DILocation(line: 5548, column: 8, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 5548, column: 7)
!4129 = !DILocation(line: 5548, column: 7, scope: !4050)
!4130 = !DILocation(line: 5548, column: 11, scope: !4128)
!4131 = !DILocation(line: 5549, column: 26, scope: !4050)
!4132 = !DILocation(line: 5549, column: 10, scope: !4050)
!4133 = !DILocation(line: 5549, column: 8, scope: !4050)
!4134 = !DILocation(line: 5550, column: 3, scope: !4050)
!4135 = !DILocation(line: 5551, column: 10, scope: !4050)
!4136 = !DILocation(line: 5551, column: 3, scope: !4050)
!4137 = !DILocation(line: 5552, column: 1, scope: !4050)
!4138 = distinct !DISubprogram(name: "__Pyx_HasAttr", scope: !3, file: !3, line: 4293, type: !149, scopeLine: 4293, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4139)
!4139 = !{!4140, !4141, !4142}
!4140 = !DILocalVariable(name: "o", arg: 1, scope: !4138, file: !3, line: 4293, type: !6)
!4141 = !DILocalVariable(name: "n", arg: 2, scope: !4138, file: !3, line: 4293, type: !6)
!4142 = !DILocalVariable(name: "r", scope: !4138, file: !3, line: 4294, type: !6)
!4143 = !DILocation(line: 4293, column: 50, scope: !4138)
!4144 = !DILocation(line: 4293, column: 63, scope: !4138)
!4145 = !DILocation(line: 4294, column: 5, scope: !4138)
!4146 = !DILocation(line: 4294, column: 15, scope: !4138)
!4147 = !DILocation(line: 4295, column: 9, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 4295, column: 9)
!4149 = !DILocation(line: 4295, column: 9, scope: !4138)
!4150 = !DILocation(line: 4296, column: 25, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 4295, column: 49)
!4152 = !DILocation(line: 4296, column: 9, scope: !4151)
!4153 = !DILocation(line: 4298, column: 9, scope: !4151)
!4154 = !DILocation(line: 4300, column: 23, scope: !4138)
!4155 = !DILocation(line: 4300, column: 26, scope: !4138)
!4156 = !DILocation(line: 4300, column: 9, scope: !4138)
!4157 = !DILocation(line: 4300, column: 7, scope: !4138)
!4158 = !DILocation(line: 4301, column: 9, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4138, file: !3, line: 4301, column: 9)
!4160 = !DILocation(line: 4301, column: 9, scope: !4138)
!4161 = !DILocation(line: 4302, column: 9, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 4301, column: 23)
!4163 = !DILocation(line: 4303, column: 9, scope: !4162)
!4164 = !DILocation(line: 4305, column: 9, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 4304, column: 12)
!4166 = !DILocation(line: 4306, column: 9, scope: !4165)
!4167 = !DILocation(line: 4308, column: 1, scope: !4138)
!4168 = distinct !DISubprogram(name: "__Pyx_PyObject_Call2Args", scope: !3, file: !3, line: 4117, type: !86, scopeLine: 4117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4169)
!4169 = !{!4170, !4171, !4172, !4173, !4174, !4175, !4178, !4181}
!4170 = !DILocalVariable(name: "function", arg: 1, scope: !4168, file: !3, line: 4117, type: !6)
!4171 = !DILocalVariable(name: "arg1", arg: 2, scope: !4168, file: !3, line: 4117, type: !6)
!4172 = !DILocalVariable(name: "arg2", arg: 3, scope: !4168, file: !3, line: 4117, type: !6)
!4173 = !DILocalVariable(name: "args", scope: !4168, file: !3, line: 4118, type: !6)
!4174 = !DILocalVariable(name: "result", scope: !4168, file: !3, line: 4118, type: !6)
!4175 = !DILocalVariable(name: "args", scope: !4176, file: !3, line: 4121, type: !986)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 4120, column: 37)
!4177 = distinct !DILexicalBlock(scope: !4168, file: !3, line: 4120, column: 9)
!4178 = !DILocalVariable(name: "args", scope: !4179, file: !3, line: 4127, type: !986)
!4179 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 4126, column: 48)
!4180 = distinct !DILexicalBlock(scope: !4168, file: !3, line: 4126, column: 9)
!4181 = !DILabel(scope: !4168, name: "done", file: !3, line: 4141)
!4182 = !DILocation(line: 4117, column: 67, scope: !4168)
!4183 = !DILocation(line: 4117, column: 87, scope: !4168)
!4184 = !DILocation(line: 4117, column: 103, scope: !4168)
!4185 = !DILocation(line: 4118, column: 5, scope: !4168)
!4186 = !DILocation(line: 4118, column: 15, scope: !4168)
!4187 = !DILocation(line: 4118, column: 22, scope: !4168)
!4188 = !DILocation(line: 4120, column: 9, scope: !4177)
!4189 = !DILocation(line: 4120, column: 9, scope: !4168)
!4190 = !DILocation(line: 4121, column: 9, scope: !4176)
!4191 = !DILocation(line: 4121, column: 19, scope: !4176)
!4192 = !DILocation(line: 4121, column: 29, scope: !4176)
!4193 = !DILocation(line: 4121, column: 30, scope: !4176)
!4194 = !DILocation(line: 4121, column: 36, scope: !4176)
!4195 = !DILocation(line: 4122, column: 16, scope: !4176)
!4196 = !DILocation(line: 4122, column: 9, scope: !4176)
!4197 = !DILocation(line: 4123, column: 5, scope: !4177)
!4198 = !DILocation(line: 4126, column: 9, scope: !4180)
!4199 = !{!4200, !1253, i64 16}
!4200 = !{!"", !1366, i64 0, !1253, i64 16, !1253, i64 24, !1253, i64 32, !1253, i64 40, !1253, i64 48}
!4201 = !{!4202, !1336, i64 16}
!4202 = !{!"PyMethodDef", !1253, i64 0, !1253, i64 8, !1336, i64 16, !1253, i64 24}
!4203 = !DILocation(line: 4126, column: 9, scope: !4168)
!4204 = !DILocation(line: 4127, column: 9, scope: !4179)
!4205 = !DILocation(line: 4127, column: 19, scope: !4179)
!4206 = !DILocation(line: 4127, column: 29, scope: !4179)
!4207 = !DILocation(line: 4127, column: 30, scope: !4179)
!4208 = !DILocation(line: 4127, column: 36, scope: !4179)
!4209 = !DILocation(line: 4128, column: 43, scope: !4179)
!4210 = !DILocation(line: 4128, column: 53, scope: !4179)
!4211 = !DILocation(line: 4128, column: 16, scope: !4179)
!4212 = !DILocation(line: 4128, column: 9, scope: !4179)
!4213 = !DILocation(line: 4129, column: 5, scope: !4180)
!4214 = !DILocation(line: 4131, column: 12, scope: !4168)
!4215 = !DILocation(line: 4131, column: 10, scope: !4168)
!4216 = !DILocation(line: 4132, column: 9, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4168, file: !3, line: 4132, column: 9)
!4218 = !DILocation(line: 4132, column: 9, scope: !4168)
!4219 = !DILocation(line: 4132, column: 26, scope: !4217)
!4220 = !DILocation(line: 4133, column: 5, scope: !4168)
!4221 = !DILocation(line: 4134, column: 5, scope: !4168)
!4222 = !DILocation(line: 4135, column: 5, scope: !4168)
!4223 = !DILocation(line: 4136, column: 5, scope: !4168)
!4224 = !DILocation(line: 4137, column: 5, scope: !4168)
!4225 = !DILocation(line: 4138, column: 34, scope: !4168)
!4226 = !DILocation(line: 4138, column: 44, scope: !4168)
!4227 = !DILocation(line: 4138, column: 14, scope: !4168)
!4228 = !DILocation(line: 4138, column: 12, scope: !4168)
!4229 = !DILocation(line: 4139, column: 5, scope: !4168)
!4230 = !DILocation(line: 4140, column: 5, scope: !4168)
!4231 = !DILocation(line: 4141, column: 1, scope: !4168)
!4232 = !DILocation(line: 4142, column: 12, scope: !4168)
!4233 = !DILocation(line: 4142, column: 5, scope: !4168)
!4234 = !DILocation(line: 4143, column: 1, scope: !4168)
!4235 = distinct !DISubprogram(name: "__Pyx_PyObject_CallOneArg", scope: !3, file: !3, line: 4177, type: !77, scopeLine: 4177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4236)
!4236 = !{!4237, !4238}
!4237 = !DILocalVariable(name: "func", arg: 1, scope: !4235, file: !3, line: 4177, type: !6)
!4238 = !DILocalVariable(name: "arg", arg: 2, scope: !4235, file: !3, line: 4177, type: !6)
!4239 = !DILocation(line: 4177, column: 68, scope: !4235)
!4240 = !DILocation(line: 4177, column: 84, scope: !4235)
!4241 = !DILocation(line: 4179, column: 9, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 4179, column: 9)
!4243 = !DILocation(line: 4179, column: 9, scope: !4235)
!4244 = !DILocation(line: 4180, column: 16, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 4179, column: 33)
!4246 = !DILocation(line: 4180, column: 9, scope: !4245)
!4247 = !DILocation(line: 4183, column: 9, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4235, file: !3, line: 4183, column: 9)
!4249 = !DILocation(line: 4183, column: 9, scope: !4235)
!4250 = !DILocation(line: 4184, column: 13, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 4184, column: 13)
!4252 = distinct !DILexicalBlock(scope: !4248, file: !3, line: 4183, column: 42)
!4253 = !DILocation(line: 4184, column: 13, scope: !4252)
!4254 = !DILocation(line: 4185, column: 45, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 4184, column: 59)
!4256 = !DILocation(line: 4185, column: 51, scope: !4255)
!4257 = !DILocation(line: 4185, column: 20, scope: !4255)
!4258 = !DILocation(line: 4185, column: 13, scope: !4255)
!4259 = !DILocation(line: 4187, column: 20, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 4187, column: 20)
!4261 = !DILocation(line: 4187, column: 20, scope: !4251)
!4262 = !DILocation(line: 4188, column: 47, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 4187, column: 55)
!4264 = !DILocation(line: 4188, column: 20, scope: !4263)
!4265 = !DILocation(line: 4188, column: 13, scope: !4263)
!4266 = !DILocation(line: 4191, column: 5, scope: !4252)
!4267 = !DILocation(line: 4192, column: 39, scope: !4235)
!4268 = !DILocation(line: 4192, column: 45, scope: !4235)
!4269 = !DILocation(line: 4192, column: 12, scope: !4235)
!4270 = !DILocation(line: 4192, column: 5, scope: !4235)
!4271 = !DILocation(line: 4193, column: 1, scope: !4235)
!4272 = distinct !DISubprogram(name: "__Pyx_is_valid_index", scope: !3, file: !3, line: 801, type: !4273, scopeLine: 801, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4275)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{!54, !12, !12}
!4275 = !{!4276, !4277}
!4276 = !DILocalVariable(name: "i", arg: 1, scope: !4272, file: !3, line: 801, type: !12)
!4277 = !DILocalVariable(name: "limit", arg: 2, scope: !4272, file: !3, line: 801, type: !12)
!4278 = !DILocation(line: 801, column: 58, scope: !4272)
!4279 = !DILocation(line: 801, column: 72, scope: !4272)
!4280 = !DILocation(line: 802, column: 21, scope: !4272)
!4281 = !DILocation(line: 802, column: 34, scope: !4272)
!4282 = !DILocation(line: 802, column: 23, scope: !4272)
!4283 = !DILocation(line: 802, column: 5, scope: !4272)
!4284 = distinct !DISubprogram(name: "__Pyx_GetItemInt_Generic", scope: !3, file: !3, line: 4206, type: !77, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4285)
!4285 = !{!4286, !4287, !4288}
!4286 = !DILocalVariable(name: "o", arg: 1, scope: !4284, file: !3, line: 4206, type: !6)
!4287 = !DILocalVariable(name: "j", arg: 2, scope: !4284, file: !3, line: 4206, type: !6)
!4288 = !DILocalVariable(name: "r", scope: !4284, file: !3, line: 4207, type: !6)
!4289 = !DILocation(line: 4206, column: 53, scope: !4284)
!4290 = !DILocation(line: 4206, column: 66, scope: !4284)
!4291 = !DILocation(line: 4207, column: 5, scope: !4284)
!4292 = !DILocation(line: 4207, column: 15, scope: !4284)
!4293 = !DILocation(line: 4208, column: 10, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 4208, column: 9)
!4295 = !DILocation(line: 4208, column: 9, scope: !4284)
!4296 = !DILocation(line: 4208, column: 13, scope: !4294)
!4297 = !DILocation(line: 4209, column: 26, scope: !4284)
!4298 = !DILocation(line: 4209, column: 29, scope: !4284)
!4299 = !DILocation(line: 4209, column: 9, scope: !4284)
!4300 = !DILocation(line: 4209, column: 7, scope: !4284)
!4301 = !DILocation(line: 4210, column: 5, scope: !4284)
!4302 = !DILocation(line: 4211, column: 12, scope: !4284)
!4303 = !DILocation(line: 4211, column: 5, scope: !4284)
!4304 = !DILocation(line: 4212, column: 1, scope: !4284)
!4305 = !DISubprogram(name: "PyObject_GetItem", scope: !3174, file: !3174, line: 289, type: !77, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4306 = !DISubprogram(name: "PyLong_AsSsize_t", scope: !374, file: !374, line: 25, type: !130, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4307 = !DISubprogram(name: "PyNumber_Index", scope: !3174, file: !3174, line: 501, type: !63, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4308 = distinct !DISubprogram(name: "__Pyx_PyFunction_FastCallDict", scope: !3, file: !3, line: 4028, type: !4309, scopeLine: 4028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4311)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{!6, !6, !339, !12, !6}
!4311 = !{!4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4330, !4331}
!4312 = !DILocalVariable(name: "func", arg: 1, scope: !4308, file: !3, line: 4028, type: !6)
!4313 = !DILocalVariable(name: "args", arg: 2, scope: !4308, file: !3, line: 4028, type: !339)
!4314 = !DILocalVariable(name: "nargs", arg: 3, scope: !4308, file: !3, line: 4028, type: !12)
!4315 = !DILocalVariable(name: "kwargs", arg: 4, scope: !4308, file: !3, line: 4028, type: !6)
!4316 = !DILocalVariable(name: "co", scope: !4308, file: !3, line: 4029, type: !397)
!4317 = !DILocalVariable(name: "globals", scope: !4308, file: !3, line: 4030, type: !6)
!4318 = !DILocalVariable(name: "argdefs", scope: !4308, file: !3, line: 4031, type: !6)
!4319 = !DILocalVariable(name: "closure", scope: !4308, file: !3, line: 4032, type: !6)
!4320 = !DILocalVariable(name: "kwdefs", scope: !4308, file: !3, line: 4034, type: !6)
!4321 = !DILocalVariable(name: "kwtuple", scope: !4308, file: !3, line: 4036, type: !6)
!4322 = !DILocalVariable(name: "k", scope: !4308, file: !3, line: 4036, type: !339)
!4323 = !DILocalVariable(name: "d", scope: !4308, file: !3, line: 4037, type: !339)
!4324 = !DILocalVariable(name: "nd", scope: !4308, file: !3, line: 4038, type: !12)
!4325 = !DILocalVariable(name: "nk", scope: !4308, file: !3, line: 4039, type: !12)
!4326 = !DILocalVariable(name: "result", scope: !4308, file: !3, line: 4040, type: !6)
!4327 = !DILocalVariable(name: "pos", scope: !4328, file: !3, line: 4066, type: !12)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 4065, column: 25)
!4329 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 4065, column: 9)
!4330 = !DILocalVariable(name: "i", scope: !4328, file: !3, line: 4066, type: !12)
!4331 = !DILabel(scope: !4308, name: "done", file: !3, line: 4109)
!4332 = !DILocation(line: 4028, column: 58, scope: !4308)
!4333 = !DILocation(line: 4028, column: 75, scope: !4308)
!4334 = !DILocation(line: 4028, column: 92, scope: !4308)
!4335 = !DILocation(line: 4028, column: 109, scope: !4308)
!4336 = !DILocation(line: 4029, column: 5, scope: !4308)
!4337 = !DILocation(line: 4029, column: 19, scope: !4308)
!4338 = !DILocation(line: 4029, column: 40, scope: !4308)
!4339 = !{!4340, !1253, i64 16}
!4340 = !{!"", !1366, i64 0, !1253, i64 16, !1253, i64 24, !1253, i64 32, !1253, i64 40, !1253, i64 48, !1253, i64 56, !1253, i64 64, !1253, i64 72, !1253, i64 80, !1253, i64 88, !1253, i64 96, !1253, i64 104, !1253, i64 112}
!4341 = !DILocation(line: 4030, column: 5, scope: !4308)
!4342 = !DILocation(line: 4030, column: 15, scope: !4308)
!4343 = !DILocation(line: 4030, column: 25, scope: !4308)
!4344 = !{!4340, !1253, i64 24}
!4345 = !DILocation(line: 4031, column: 5, scope: !4308)
!4346 = !DILocation(line: 4031, column: 15, scope: !4308)
!4347 = !DILocation(line: 4031, column: 25, scope: !4308)
!4348 = !{!4340, !1253, i64 32}
!4349 = !DILocation(line: 4032, column: 5, scope: !4308)
!4350 = !DILocation(line: 4032, column: 15, scope: !4308)
!4351 = !DILocation(line: 4034, column: 5, scope: !4308)
!4352 = !DILocation(line: 4034, column: 15, scope: !4308)
!4353 = !DILocation(line: 4036, column: 5, scope: !4308)
!4354 = !DILocation(line: 4036, column: 15, scope: !4308)
!4355 = !DILocation(line: 4036, column: 26, scope: !4308)
!4356 = !DILocation(line: 4037, column: 5, scope: !4308)
!4357 = !DILocation(line: 4037, column: 16, scope: !4308)
!4358 = !DILocation(line: 4038, column: 5, scope: !4308)
!4359 = !DILocation(line: 4038, column: 16, scope: !4308)
!4360 = !DILocation(line: 4039, column: 5, scope: !4308)
!4361 = !DILocation(line: 4039, column: 16, scope: !4308)
!4362 = !DILocation(line: 4040, column: 5, scope: !4308)
!4363 = !DILocation(line: 4040, column: 15, scope: !4308)
!4364 = !DILocation(line: 4042, column: 10, scope: !4308)
!4365 = !DILocation(line: 4042, column: 31, scope: !4308)
!4366 = !DILocation(line: 4042, column: 19, scope: !4308)
!4367 = !DILocation(line: 4042, column: 8, scope: !4308)
!4368 = !DILocation(line: 4043, column: 9, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 4043, column: 9)
!4370 = !DILocation(line: 4043, column: 9, scope: !4308)
!4371 = !DILocation(line: 4044, column: 9, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 4043, column: 73)
!4373 = !DILocation(line: 4048, column: 13, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 4048, column: 13)
!4375 = !DILocation(line: 4048, column: 17, scope: !4374)
!4376 = !{!4377, !1336, i64 24}
!4377 = !{!"PyCodeObject", !1366, i64 0, !1336, i64 16, !1336, i64 20, !1336, i64 24, !1336, i64 28, !1336, i64 32, !1336, i64 36, !1336, i64 40, !1253, i64 48, !1253, i64 56, !1253, i64 64, !1253, i64 72, !1253, i64 80, !1253, i64 88, !1253, i64 96, !1253, i64 104, !1253, i64 112, !1253, i64 120, !1253, i64 128, !1253, i64 136, !1253, i64 144, !1253, i64 152, !1253, i64 160, !1336, i64 168, !1254, i64 172}
!4378 = !DILocation(line: 4048, column: 35, scope: !4374)
!4379 = !DILocation(line: 4048, column: 40, scope: !4374)
!4380 = !DILocation(line: 4050, column: 13, scope: !4374)
!4381 = !DILocation(line: 4050, column: 47, scope: !4374)
!4382 = !DILocation(line: 4051, column: 13, scope: !4374)
!4383 = !DILocation(line: 4051, column: 17, scope: !4374)
!4384 = !{!4377, !1336, i64 36}
!4385 = !DILocation(line: 4051, column: 26, scope: !4374)
!4386 = !DILocation(line: 4048, column: 13, scope: !4308)
!4387 = !DILocation(line: 4052, column: 13, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 4052, column: 13)
!4389 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 4051, column: 72)
!4390 = !DILocation(line: 4052, column: 21, scope: !4388)
!4391 = !DILocation(line: 4052, column: 29, scope: !4388)
!4392 = !DILocation(line: 4052, column: 32, scope: !4388)
!4393 = !DILocation(line: 4052, column: 36, scope: !4388)
!4394 = !{!4377, !1336, i64 16}
!4395 = !DILocation(line: 4052, column: 51, scope: !4388)
!4396 = !DILocation(line: 4052, column: 48, scope: !4388)
!4397 = !DILocation(line: 4052, column: 13, scope: !4389)
!4398 = !DILocation(line: 4053, column: 52, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 4052, column: 58)
!4400 = !DILocation(line: 4053, column: 56, scope: !4399)
!4401 = !DILocation(line: 4053, column: 62, scope: !4399)
!4402 = !DILocation(line: 4053, column: 69, scope: !4399)
!4403 = !DILocation(line: 4053, column: 22, scope: !4399)
!4404 = !DILocation(line: 4053, column: 20, scope: !4399)
!4405 = !DILocation(line: 4054, column: 13, scope: !4399)
!4406 = !DILocation(line: 4056, column: 18, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 4056, column: 18)
!4408 = !DILocation(line: 4056, column: 24, scope: !4407)
!4409 = !DILocation(line: 4056, column: 29, scope: !4407)
!4410 = !DILocation(line: 4056, column: 32, scope: !4407)
!4411 = !DILocation(line: 4056, column: 40, scope: !4407)
!4412 = !DILocation(line: 4057, column: 18, scope: !4407)
!4413 = !DILocation(line: 4057, column: 21, scope: !4407)
!4414 = !DILocation(line: 4057, column: 25, scope: !4407)
!4415 = !DILocation(line: 4057, column: 40, scope: !4407)
!4416 = !DILocation(line: 4057, column: 37, scope: !4407)
!4417 = !DILocation(line: 4056, column: 18, scope: !4388)
!4418 = !DILocation(line: 4060, column: 21, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 4057, column: 58)
!4420 = !DILocation(line: 4060, column: 18, scope: !4419)
!4421 = !DILocation(line: 4061, column: 51, scope: !4419)
!4422 = !DILocation(line: 4061, column: 55, scope: !4419)
!4423 = !DILocation(line: 4061, column: 61, scope: !4419)
!4424 = !DILocation(line: 4061, column: 79, scope: !4419)
!4425 = !DILocation(line: 4061, column: 21, scope: !4419)
!4426 = !DILocation(line: 4061, column: 20, scope: !4419)
!4427 = !DILocation(line: 4062, column: 13, scope: !4419)
!4428 = !DILocation(line: 4064, column: 5, scope: !4389)
!4429 = !DILocation(line: 4065, column: 9, scope: !4329)
!4430 = !DILocation(line: 4065, column: 16, scope: !4329)
!4431 = !DILocation(line: 4065, column: 9, scope: !4308)
!4432 = !DILocation(line: 4066, column: 9, scope: !4328)
!4433 = !DILocation(line: 4066, column: 20, scope: !4328)
!4434 = !DILocation(line: 4066, column: 25, scope: !4328)
!4435 = !DILocation(line: 4067, column: 35, scope: !4328)
!4436 = !DILocation(line: 4067, column: 33, scope: !4328)
!4437 = !DILocation(line: 4067, column: 19, scope: !4328)
!4438 = !DILocation(line: 4067, column: 17, scope: !4328)
!4439 = !DILocation(line: 4068, column: 13, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 4068, column: 13)
!4441 = !DILocation(line: 4068, column: 21, scope: !4440)
!4442 = !DILocation(line: 4068, column: 13, scope: !4328)
!4443 = !DILocation(line: 4069, column: 20, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4440, file: !3, line: 4068, column: 30)
!4445 = !DILocation(line: 4070, column: 13, scope: !4444)
!4446 = !DILocation(line: 4072, column: 14, scope: !4328)
!4447 = !DILocation(line: 4072, column: 11, scope: !4328)
!4448 = !DILocation(line: 4073, column: 17, scope: !4328)
!4449 = !DILocation(line: 4073, column: 13, scope: !4328)
!4450 = !DILocation(line: 4074, column: 9, scope: !4328)
!4451 = !DILocation(line: 4074, column: 28, scope: !4328)
!4452 = !DILocation(line: 4074, column: 43, scope: !4328)
!4453 = !DILocation(line: 4074, column: 45, scope: !4328)
!4454 = !DILocation(line: 4074, column: 50, scope: !4328)
!4455 = !DILocation(line: 4074, column: 52, scope: !4328)
!4456 = !DILocation(line: 4074, column: 53, scope: !4328)
!4457 = !DILocation(line: 4074, column: 16, scope: !4328)
!4458 = !DILocation(line: 4075, column: 13, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 4074, column: 59)
!4460 = !DILocation(line: 4076, column: 13, scope: !4459)
!4461 = !DILocation(line: 4077, column: 15, scope: !4459)
!4462 = distinct !{!4462, !4450, !4463, !1801}
!4463 = !DILocation(line: 4078, column: 9, scope: !4328)
!4464 = !DILocation(line: 4079, column: 14, scope: !4328)
!4465 = !DILocation(line: 4079, column: 16, scope: !4328)
!4466 = !DILocation(line: 4079, column: 12, scope: !4328)
!4467 = !DILocation(line: 4080, column: 5, scope: !4329)
!4468 = !DILocation(line: 4080, column: 5, scope: !4328)
!4469 = !DILocation(line: 4082, column: 17, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 4081, column: 10)
!4471 = !DILocation(line: 4083, column: 11, scope: !4470)
!4472 = !DILocation(line: 4085, column: 15, scope: !4308)
!4473 = !{!4340, !1253, i64 48}
!4474 = !DILocation(line: 4085, column: 13, scope: !4308)
!4475 = !DILocation(line: 4087, column: 14, scope: !4308)
!4476 = !{!4340, !1253, i64 40}
!4477 = !DILocation(line: 4087, column: 12, scope: !4308)
!4478 = !DILocation(line: 4089, column: 9, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 4089, column: 9)
!4480 = !DILocation(line: 4089, column: 17, scope: !4479)
!4481 = !DILocation(line: 4089, column: 9, scope: !4308)
!4482 = !DILocation(line: 4090, column: 14, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 4089, column: 26)
!4484 = !DILocation(line: 4090, column: 11, scope: !4483)
!4485 = !DILocation(line: 4091, column: 14, scope: !4483)
!4486 = !DILocation(line: 4091, column: 12, scope: !4483)
!4487 = !DILocation(line: 4092, column: 5, scope: !4483)
!4488 = !DILocation(line: 4094, column: 11, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 4093, column: 10)
!4490 = !DILocation(line: 4095, column: 12, scope: !4489)
!4491 = !DILocation(line: 4098, column: 43, scope: !4308)
!4492 = !DILocation(line: 4098, column: 47, scope: !4308)
!4493 = !DILocation(line: 4099, column: 32, scope: !4308)
!4494 = !DILocation(line: 4099, column: 43, scope: !4308)
!4495 = !DILocation(line: 4099, column: 38, scope: !4308)
!4496 = !DILocation(line: 4100, column: 32, scope: !4308)
!4497 = !DILocation(line: 4100, column: 40, scope: !4308)
!4498 = !DILocation(line: 4100, column: 35, scope: !4308)
!4499 = !DILocation(line: 4101, column: 32, scope: !4308)
!4500 = !DILocation(line: 4101, column: 40, scope: !4308)
!4501 = !DILocation(line: 4101, column: 35, scope: !4308)
!4502 = !DILocation(line: 4101, column: 44, scope: !4308)
!4503 = !DILocation(line: 4101, column: 52, scope: !4308)
!4504 = !DILocation(line: 4098, column: 14, scope: !4308)
!4505 = !DILocation(line: 4098, column: 12, scope: !4308)
!4506 = !DILocation(line: 4108, column: 5, scope: !4308)
!4507 = !DILocation(line: 4109, column: 1, scope: !4308)
!4508 = !DILocation(line: 4110, column: 5, scope: !4308)
!4509 = !DILocation(line: 4111, column: 12, scope: !4308)
!4510 = !DILocation(line: 4111, column: 5, scope: !4308)
!4511 = !DILocation(line: 4112, column: 1, scope: !4308)
!4512 = !DISubprogram(name: "PyType_IsSubtype", scope: !8, file: !8, line: 223, type: !3522, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4513 = distinct !DISubprogram(name: "__Pyx_PyCFunction_FastCall", scope: !3, file: !3, line: 3976, type: !4514, scopeLine: 3976, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4516)
!4514 = !DISubroutineType(types: !4515)
!4515 = !{!6, !6, !339, !12}
!4516 = !{!4517, !4518, !4519, !4520, !4521, !4522, !4523}
!4517 = !DILocalVariable(name: "func_obj", arg: 1, scope: !4513, file: !3, line: 3976, type: !6)
!4518 = !DILocalVariable(name: "args", arg: 2, scope: !4513, file: !3, line: 3976, type: !339)
!4519 = !DILocalVariable(name: "nargs", arg: 3, scope: !4513, file: !3, line: 3976, type: !12)
!4520 = !DILocalVariable(name: "func", scope: !4513, file: !3, line: 3977, type: !384)
!4521 = !DILocalVariable(name: "meth", scope: !4513, file: !3, line: 3978, type: !238)
!4522 = !DILocalVariable(name: "self", scope: !4513, file: !3, line: 3979, type: !6)
!4523 = !DILocalVariable(name: "flags", scope: !4513, file: !3, line: 3980, type: !54)
!4524 = !DILocation(line: 3976, column: 70, scope: !4513)
!4525 = !DILocation(line: 3976, column: 91, scope: !4513)
!4526 = !DILocation(line: 3976, column: 108, scope: !4513)
!4527 = !DILocation(line: 3977, column: 5, scope: !4513)
!4528 = !DILocation(line: 3977, column: 24, scope: !4513)
!4529 = !DILocation(line: 3977, column: 51, scope: !4513)
!4530 = !DILocation(line: 3978, column: 5, scope: !4513)
!4531 = !DILocation(line: 3978, column: 17, scope: !4513)
!4532 = !DILocation(line: 3978, column: 24, scope: !4513)
!4533 = !{!4202, !1253, i64 8}
!4534 = !DILocation(line: 3979, column: 5, scope: !4513)
!4535 = !DILocation(line: 3979, column: 15, scope: !4513)
!4536 = !DILocation(line: 3979, column: 22, scope: !4513)
!4537 = !{!4200, !1253, i64 24}
!4538 = !DILocation(line: 3980, column: 5, scope: !4513)
!4539 = !DILocation(line: 3980, column: 9, scope: !4513)
!4540 = !DILocation(line: 3980, column: 17, scope: !4513)
!4541 = !DILocation(line: 3989, column: 42, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 3989, column: 9)
!4543 = !DILocation(line: 3989, column: 9, scope: !4513)
!4544 = !DILocation(line: 3990, column: 61, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 3989, column: 75)
!4546 = !DILocation(line: 3990, column: 69, scope: !4545)
!4547 = !DILocation(line: 3990, column: 75, scope: !4545)
!4548 = !DILocation(line: 3990, column: 81, scope: !4545)
!4549 = !DILocation(line: 3990, column: 16, scope: !4545)
!4550 = !DILocation(line: 3990, column: 9, scope: !4545)
!4551 = !DILocation(line: 3992, column: 49, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 3991, column: 12)
!4553 = !DILocation(line: 3992, column: 57, scope: !4552)
!4554 = !DILocation(line: 3992, column: 63, scope: !4552)
!4555 = !DILocation(line: 3992, column: 69, scope: !4552)
!4556 = !DILocation(line: 3992, column: 16, scope: !4552)
!4557 = !DILocation(line: 3992, column: 9, scope: !4552)
!4558 = !DILocation(line: 3994, column: 1, scope: !4513)
!4559 = distinct !DISubprogram(name: "__Pyx_PyObject_Call", scope: !3, file: !3, line: 3580, type: !86, scopeLine: 3580, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4560)
!4560 = !{!4561, !4562, !4563, !4564, !4565}
!4561 = !DILocalVariable(name: "func", arg: 1, scope: !4559, file: !3, line: 3580, type: !6)
!4562 = !DILocalVariable(name: "arg", arg: 2, scope: !4559, file: !3, line: 3580, type: !6)
!4563 = !DILocalVariable(name: "kw", arg: 3, scope: !4559, file: !3, line: 3580, type: !6)
!4564 = !DILocalVariable(name: "result", scope: !4559, file: !3, line: 3581, type: !6)
!4565 = !DILocalVariable(name: "call", scope: !4559, file: !3, line: 3582, type: !84)
!4566 = !DILocation(line: 3580, column: 62, scope: !4559)
!4567 = !DILocation(line: 3580, column: 78, scope: !4559)
!4568 = !DILocation(line: 3580, column: 93, scope: !4559)
!4569 = !DILocation(line: 3581, column: 5, scope: !4559)
!4570 = !DILocation(line: 3581, column: 15, scope: !4559)
!4571 = !DILocation(line: 3582, column: 5, scope: !4559)
!4572 = !DILocation(line: 3582, column: 17, scope: !4559)
!4573 = !DILocation(line: 3582, column: 24, scope: !4559)
!4574 = !DILocation(line: 3582, column: 39, scope: !4559)
!4575 = !{!1364, !1253, i64 128}
!4576 = !DILocation(line: 3583, column: 9, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 3583, column: 9)
!4578 = !DILocation(line: 3583, column: 9, scope: !4559)
!4579 = !DILocation(line: 3584, column: 30, scope: !4577)
!4580 = !DILocation(line: 3584, column: 36, scope: !4577)
!4581 = !DILocation(line: 3584, column: 41, scope: !4577)
!4582 = !DILocation(line: 3584, column: 16, scope: !4577)
!4583 = !DILocation(line: 3584, column: 9, scope: !4577)
!4584 = !DILocation(line: 3585, column: 9, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 3585, column: 9)
!4586 = !DILocation(line: 3585, column: 9, scope: !4559)
!4587 = !DILocation(line: 3586, column: 9, scope: !4585)
!4588 = !DILocation(line: 3587, column: 16, scope: !4559)
!4589 = !DILocation(line: 3587, column: 22, scope: !4559)
!4590 = !DILocation(line: 3587, column: 28, scope: !4559)
!4591 = !DILocation(line: 3587, column: 33, scope: !4559)
!4592 = !DILocation(line: 3587, column: 14, scope: !4559)
!4593 = !DILocation(line: 3587, column: 12, scope: !4559)
!4594 = !DILocation(line: 3588, column: 5, scope: !4559)
!4595 = !DILocation(line: 3589, column: 9, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 3589, column: 9)
!4597 = !DILocation(line: 3589, column: 27, scope: !4596)
!4598 = !DILocation(line: 3589, column: 30, scope: !4596)
!4599 = !DILocation(line: 3589, column: 9, scope: !4559)
!4600 = !DILocation(line: 3591, column: 13, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 3589, column: 59)
!4602 = !DILocation(line: 3590, column: 9, scope: !4601)
!4603 = !DILocation(line: 3593, column: 5, scope: !4601)
!4604 = !DILocation(line: 3594, column: 12, scope: !4559)
!4605 = !DILocation(line: 3594, column: 5, scope: !4559)
!4606 = !DILocation(line: 3595, column: 1, scope: !4559)
!4607 = !DISubprogram(name: "PyDict_Size", scope: !1730, file: !1730, line: 32, type: !130, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4608 = !DISubprogram(name: "Py_EnterRecursiveCall", scope: !4609, file: !4609, line: 67, type: !4610, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4609 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/ceval.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "5e4411c7c9bfe0bf076cffeeca7f597f")
!4610 = !DISubroutineType(types: !4611)
!4611 = !{!54, !32}
!4612 = distinct !DISubprogram(name: "__Pyx_PyFunction_FastCallNoKw", scope: !3, file: !3, line: 3999, type: !4613, scopeLine: 4000, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4615)
!4613 = !DISubroutineType(types: !4614)
!4614 = !{!6, !397, !339, !12, !6}
!4615 = !{!4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624}
!4616 = !DILocalVariable(name: "co", arg: 1, scope: !4612, file: !3, line: 3999, type: !397)
!4617 = !DILocalVariable(name: "args", arg: 2, scope: !4612, file: !3, line: 3999, type: !339)
!4618 = !DILocalVariable(name: "na", arg: 3, scope: !4612, file: !3, line: 3999, type: !12)
!4619 = !DILocalVariable(name: "globals", arg: 4, scope: !4612, file: !3, line: 4000, type: !6)
!4620 = !DILocalVariable(name: "f", scope: !4612, file: !3, line: 4001, type: !1124)
!4621 = !DILocalVariable(name: "tstate", scope: !4612, file: !3, line: 4002, type: !1110)
!4622 = !DILocalVariable(name: "fastlocals", scope: !4612, file: !3, line: 4003, type: !339)
!4623 = !DILocalVariable(name: "i", scope: !4612, file: !3, line: 4004, type: !12)
!4624 = !DILocalVariable(name: "result", scope: !4612, file: !3, line: 4005, type: !6)
!4625 = !DILocation(line: 3999, column: 62, scope: !4612)
!4626 = !DILocation(line: 3999, column: 77, scope: !4612)
!4627 = !DILocation(line: 3999, column: 94, scope: !4612)
!4628 = !DILocation(line: 4000, column: 58, scope: !4612)
!4629 = !DILocation(line: 4001, column: 5, scope: !4612)
!4630 = !DILocation(line: 4001, column: 20, scope: !4612)
!4631 = !DILocation(line: 4002, column: 5, scope: !4612)
!4632 = !DILocation(line: 4002, column: 20, scope: !4612)
!4633 = !DILocation(line: 4002, column: 29, scope: !4612)
!4634 = !DILocation(line: 4003, column: 5, scope: !4612)
!4635 = !DILocation(line: 4003, column: 16, scope: !4612)
!4636 = !DILocation(line: 4004, column: 5, scope: !4612)
!4637 = !DILocation(line: 4004, column: 16, scope: !4612)
!4638 = !DILocation(line: 4005, column: 5, scope: !4612)
!4639 = !DILocation(line: 4005, column: 15, scope: !4612)
!4640 = !DILocation(line: 4012, column: 21, scope: !4612)
!4641 = !DILocation(line: 4012, column: 29, scope: !4612)
!4642 = !DILocation(line: 4012, column: 33, scope: !4612)
!4643 = !DILocation(line: 4012, column: 9, scope: !4612)
!4644 = !DILocation(line: 4012, column: 7, scope: !4612)
!4645 = !DILocation(line: 4013, column: 9, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 4013, column: 9)
!4647 = !DILocation(line: 4013, column: 11, scope: !4646)
!4648 = !DILocation(line: 4013, column: 9, scope: !4612)
!4649 = !DILocation(line: 4014, column: 9, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 4013, column: 20)
!4651 = !DILocation(line: 4016, column: 18, scope: !4612)
!4652 = !DILocation(line: 4016, column: 16, scope: !4612)
!4653 = !DILocation(line: 4017, column: 12, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 4017, column: 5)
!4655 = !DILocation(line: 4017, column: 10, scope: !4654)
!4656 = !DILocation(line: 4017, column: 17, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 4017, column: 5)
!4658 = !DILocation(line: 4017, column: 21, scope: !4657)
!4659 = !DILocation(line: 4017, column: 19, scope: !4657)
!4660 = !DILocation(line: 4017, column: 5, scope: !4654)
!4661 = !DILocation(line: 4018, column: 9, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 4017, column: 30)
!4663 = !DILocation(line: 4019, column: 30, scope: !4662)
!4664 = !DILocation(line: 4019, column: 25, scope: !4662)
!4665 = !DILocation(line: 4019, column: 9, scope: !4662)
!4666 = !DILocation(line: 4019, column: 20, scope: !4662)
!4667 = !DILocation(line: 4019, column: 23, scope: !4662)
!4668 = !DILocation(line: 4020, column: 5, scope: !4662)
!4669 = !DILocation(line: 4017, column: 26, scope: !4657)
!4670 = !DILocation(line: 4017, column: 5, scope: !4657)
!4671 = distinct !{!4671, !4660, !4672, !1801}
!4672 = !DILocation(line: 4020, column: 5, scope: !4654)
!4673 = !DILocation(line: 4021, column: 33, scope: !4612)
!4674 = !DILocation(line: 4021, column: 14, scope: !4612)
!4675 = !DILocation(line: 4021, column: 12, scope: !4612)
!4676 = !DILocation(line: 4022, column: 7, scope: !4612)
!4677 = !DILocation(line: 4022, column: 15, scope: !4612)
!4678 = !DILocation(line: 4022, column: 5, scope: !4612)
!4679 = !{!1600, !1336, i64 32}
!4680 = !DILocation(line: 4023, column: 5, scope: !4612)
!4681 = !DILocation(line: 4024, column: 7, scope: !4612)
!4682 = !DILocation(line: 4024, column: 15, scope: !4612)
!4683 = !DILocation(line: 4024, column: 5, scope: !4612)
!4684 = !DILocation(line: 4025, column: 12, scope: !4612)
!4685 = !DILocation(line: 4025, column: 5, scope: !4612)
!4686 = !DILocation(line: 4026, column: 1, scope: !4612)
!4687 = !DISubprogram(name: "PyDict_Next", scope: !1730, file: !1730, line: 27, type: !4688, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4688 = !DISubroutineType(types: !4689)
!4689 = !{!54, !6, !199, !339, !339}
!4690 = !DISubprogram(name: "PyEval_EvalCodeEx", scope: !4691, file: !4691, line: 12, type: !4692, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4691 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/eval.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "cb87da0770a58eab5ca5babda6866d11")
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!6, !6, !6, !6, !302, !54, !302, !54, !302, !54, !6, !6}
!4694 = !DISubprogram(name: "Py_LeaveRecursiveCall", scope: !4609, file: !4609, line: 68, type: !1735, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4695 = !DISubprogram(name: "PyFrame_New", scope: !1128, file: !1128, line: 56, type: !4696, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4696 = !DISubroutineType(types: !4697)
!4697 = !{!1124, !1110, !397, !6, !6}
!4698 = !DISubprogram(name: "PyEval_EvalFrameEx", scope: !4609, file: !4609, line: 82, type: !4699, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{!6, !1124, !54}
!4701 = !DISubprogram(name: "PyObject_Call", scope: !3174, file: !3174, line: 158, type: !86, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!4702 = distinct !DISubprogram(name: "__Pyx_PyObject_CallMethO", scope: !3, file: !3, line: 4147, type: !77, scopeLine: 4147, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4703)
!4703 = !{!4704, !4705, !4706, !4707, !4708}
!4704 = !DILocalVariable(name: "func", arg: 1, scope: !4702, file: !3, line: 4147, type: !6)
!4705 = !DILocalVariable(name: "arg", arg: 2, scope: !4702, file: !3, line: 4147, type: !6)
!4706 = !DILocalVariable(name: "self", scope: !4702, file: !3, line: 4148, type: !6)
!4707 = !DILocalVariable(name: "result", scope: !4702, file: !3, line: 4148, type: !6)
!4708 = !DILocalVariable(name: "cfunc", scope: !4702, file: !3, line: 4149, type: !238)
!4709 = !DILocation(line: 4147, column: 67, scope: !4702)
!4710 = !DILocation(line: 4147, column: 83, scope: !4702)
!4711 = !DILocation(line: 4148, column: 5, scope: !4702)
!4712 = !DILocation(line: 4148, column: 15, scope: !4702)
!4713 = !DILocation(line: 4148, column: 22, scope: !4702)
!4714 = !DILocation(line: 4149, column: 5, scope: !4702)
!4715 = !DILocation(line: 4149, column: 17, scope: !4702)
!4716 = !DILocation(line: 4150, column: 13, scope: !4702)
!4717 = !DILocation(line: 4150, column: 11, scope: !4702)
!4718 = !DILocation(line: 4151, column: 12, scope: !4702)
!4719 = !DILocation(line: 4151, column: 10, scope: !4702)
!4720 = !DILocation(line: 4152, column: 9, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 4152, column: 9)
!4722 = !DILocation(line: 4152, column: 9, scope: !4702)
!4723 = !DILocation(line: 4153, column: 9, scope: !4721)
!4724 = !DILocation(line: 4154, column: 14, scope: !4702)
!4725 = !DILocation(line: 4154, column: 20, scope: !4702)
!4726 = !DILocation(line: 4154, column: 26, scope: !4702)
!4727 = !DILocation(line: 4154, column: 12, scope: !4702)
!4728 = !DILocation(line: 4155, column: 5, scope: !4702)
!4729 = !DILocation(line: 4156, column: 9, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 4156, column: 9)
!4731 = !DILocation(line: 4156, column: 27, scope: !4730)
!4732 = !DILocation(line: 4156, column: 30, scope: !4730)
!4733 = !DILocation(line: 4156, column: 9, scope: !4702)
!4734 = !DILocation(line: 4158, column: 13, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 4156, column: 59)
!4736 = !DILocation(line: 4157, column: 9, scope: !4735)
!4737 = !DILocation(line: 4160, column: 5, scope: !4735)
!4738 = !DILocation(line: 4161, column: 12, scope: !4702)
!4739 = !DILocation(line: 4161, column: 5, scope: !4702)
!4740 = !DILocation(line: 4162, column: 1, scope: !4702)
!4741 = distinct !DISubprogram(name: "__Pyx__PyObject_CallOneArg", scope: !3, file: !3, line: 4167, type: !77, scopeLine: 4167, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4742)
!4742 = !{!4743, !4744, !4745, !4746}
!4743 = !DILocalVariable(name: "func", arg: 1, scope: !4741, file: !3, line: 4167, type: !6)
!4744 = !DILocalVariable(name: "arg", arg: 2, scope: !4741, file: !3, line: 4167, type: !6)
!4745 = !DILocalVariable(name: "result", scope: !4741, file: !3, line: 4168, type: !6)
!4746 = !DILocalVariable(name: "args", scope: !4741, file: !3, line: 4169, type: !6)
!4747 = !DILocation(line: 4167, column: 55, scope: !4741)
!4748 = !DILocation(line: 4167, column: 71, scope: !4741)
!4749 = !DILocation(line: 4168, column: 5, scope: !4741)
!4750 = !DILocation(line: 4168, column: 15, scope: !4741)
!4751 = !DILocation(line: 4169, column: 5, scope: !4741)
!4752 = !DILocation(line: 4169, column: 15, scope: !4741)
!4753 = !DILocation(line: 4169, column: 22, scope: !4741)
!4754 = !DILocation(line: 4170, column: 9, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 4170, column: 9)
!4756 = !DILocation(line: 4170, column: 9, scope: !4741)
!4757 = !DILocation(line: 4170, column: 26, scope: !4755)
!4758 = !DILocation(line: 4171, column: 5, scope: !4741)
!4759 = !DILocation(line: 4172, column: 5, scope: !4741)
!4760 = !DILocation(line: 4173, column: 34, scope: !4741)
!4761 = !DILocation(line: 4173, column: 40, scope: !4741)
!4762 = !DILocation(line: 4173, column: 14, scope: !4741)
!4763 = !DILocation(line: 4173, column: 12, scope: !4741)
!4764 = !DILocation(line: 4174, column: 5, scope: !4741)
!4765 = !DILocation(line: 4175, column: 12, scope: !4741)
!4766 = !DILocation(line: 4175, column: 5, scope: !4741)
!4767 = !DILocation(line: 4176, column: 1, scope: !4741)
!4768 = distinct !DISubprogram(name: "__pyx_getprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_ndim", scope: !3, file: !3, line: 2723, type: !253, scopeLine: 2723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4769)
!4769 = !{!4770, !4771}
!4770 = !DILocalVariable(name: "o", arg: 1, scope: !4768, file: !3, line: 2723, type: !6)
!4771 = !DILocalVariable(name: "x", arg: 2, scope: !4768, file: !3, line: 2723, type: !5)
!4772 = !DILocation(line: 2723, column: 93, scope: !4768)
!4773 = !DILocation(line: 2723, column: 116, scope: !4768)
!4774 = !DILocation(line: 2724, column: 80, scope: !4768)
!4775 = !DILocation(line: 2724, column: 10, scope: !4768)
!4776 = !DILocation(line: 2724, column: 3, scope: !4768)
!4777 = distinct !DISubprogram(name: "__pyx_getprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_name", scope: !3, file: !3, line: 2727, type: !253, scopeLine: 2727, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4778)
!4778 = !{!4779, !4780}
!4779 = !DILocalVariable(name: "o", arg: 1, scope: !4777, file: !3, line: 2727, type: !6)
!4780 = !DILocalVariable(name: "x", arg: 2, scope: !4777, file: !3, line: 2727, type: !5)
!4781 = !DILocation(line: 2727, column: 93, scope: !4777)
!4782 = !DILocation(line: 2727, column: 116, scope: !4777)
!4783 = !DILocation(line: 2728, column: 80, scope: !4777)
!4784 = !DILocation(line: 2728, column: 10, scope: !4777)
!4785 = !DILocation(line: 2728, column: 3, scope: !4777)
!4786 = distinct !DISubprogram(name: "__pyx_setprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_name", scope: !3, file: !3, line: 2731, type: !258, scopeLine: 2731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4787)
!4787 = !{!4788, !4789, !4790}
!4788 = !DILocalVariable(name: "o", arg: 1, scope: !4786, file: !3, line: 2731, type: !6)
!4789 = !DILocalVariable(name: "v", arg: 2, scope: !4786, file: !3, line: 2731, type: !6)
!4790 = !DILocalVariable(name: "x", arg: 3, scope: !4786, file: !3, line: 2731, type: !5)
!4791 = !DILocation(line: 2731, column: 87, scope: !4786)
!4792 = !DILocation(line: 2731, column: 100, scope: !4786)
!4793 = !DILocation(line: 2731, column: 123, scope: !4786)
!4794 = !DILocation(line: 2732, column: 7, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 2732, column: 7)
!4796 = !DILocation(line: 2732, column: 7, scope: !4786)
!4797 = !DILocation(line: 2733, column: 82, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 2732, column: 10)
!4799 = !DILocation(line: 2733, column: 85, scope: !4798)
!4800 = !DILocation(line: 2733, column: 12, scope: !4798)
!4801 = !DILocation(line: 2733, column: 5, scope: !4798)
!4802 = !DILocation(line: 2736, column: 82, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 2735, column: 8)
!4804 = !DILocation(line: 2736, column: 12, scope: !4803)
!4805 = !DILocation(line: 2736, column: 5, scope: !4803)
!4806 = !DILocation(line: 2738, column: 1, scope: !4786)
!4807 = distinct !DISubprogram(name: "__pyx_getprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_obj", scope: !3, file: !3, line: 2740, type: !253, scopeLine: 2740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4808)
!4808 = !{!4809, !4810}
!4809 = !DILocalVariable(name: "o", arg: 1, scope: !4807, file: !3, line: 2740, type: !6)
!4810 = !DILocalVariable(name: "x", arg: 2, scope: !4807, file: !3, line: 2740, type: !5)
!4811 = !DILocation(line: 2740, column: 92, scope: !4807)
!4812 = !DILocation(line: 2740, column: 115, scope: !4807)
!4813 = !DILocation(line: 2741, column: 79, scope: !4807)
!4814 = !DILocation(line: 2741, column: 10, scope: !4807)
!4815 = !DILocation(line: 2741, column: 3, scope: !4807)
!4816 = distinct !DISubprogram(name: "__pyx_setprop_6pandas_5_libs_8indexing_18NDFrameIndexerBase_obj", scope: !3, file: !3, line: 2744, type: !258, scopeLine: 2744, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4817)
!4817 = !{!4818, !4819, !4820}
!4818 = !DILocalVariable(name: "o", arg: 1, scope: !4816, file: !3, line: 2744, type: !6)
!4819 = !DILocalVariable(name: "v", arg: 2, scope: !4816, file: !3, line: 2744, type: !6)
!4820 = !DILocalVariable(name: "x", arg: 3, scope: !4816, file: !3, line: 2744, type: !5)
!4821 = !DILocation(line: 2744, column: 86, scope: !4816)
!4822 = !DILocation(line: 2744, column: 99, scope: !4816)
!4823 = !DILocation(line: 2744, column: 122, scope: !4816)
!4824 = !DILocation(line: 2745, column: 7, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 2745, column: 7)
!4826 = !DILocation(line: 2745, column: 7, scope: !4816)
!4827 = !DILocation(line: 2746, column: 81, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 2745, column: 10)
!4829 = !DILocation(line: 2746, column: 84, scope: !4828)
!4830 = !DILocation(line: 2746, column: 12, scope: !4828)
!4831 = !DILocation(line: 2746, column: 5, scope: !4828)
!4832 = !DILocation(line: 2749, column: 81, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 2748, column: 8)
!4834 = !DILocation(line: 2749, column: 12, scope: !4833)
!4835 = !DILocation(line: 2749, column: 5, scope: !4833)
!4836 = !DILocation(line: 2751, column: 1, scope: !4816)
!4837 = distinct !DISubprogram(name: "__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4ndim_1__get__", scope: !3, file: !3, line: 1604, type: !63, scopeLine: 1604, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4838)
!4838 = !{!4839, !4840}
!4839 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !4837, file: !3, line: 1604, type: !6)
!4840 = !DILocalVariable(name: "__pyx_r", scope: !4837, file: !3, line: 1605, type: !6)
!4841 = !DILocation(line: 1604, column: 98, scope: !4837)
!4842 = !DILocation(line: 1605, column: 3, scope: !4837)
!4843 = !DILocation(line: 1605, column: 13, scope: !4837)
!4844 = !DILocation(line: 1608, column: 147, scope: !4837)
!4845 = !DILocation(line: 1608, column: 13, scope: !4837)
!4846 = !DILocation(line: 1608, column: 11, scope: !4837)
!4847 = !DILocation(line: 1612, column: 10, scope: !4837)
!4848 = !DILocation(line: 1613, column: 1, scope: !4837)
!4849 = !DILocation(line: 1612, column: 3, scope: !4837)
!4850 = distinct !DISubprogram(name: "__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4ndim___get__", scope: !3, file: !3, line: 1615, type: !864, scopeLine: 1615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4851)
!4851 = !{!4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4865, !4866}
!4852 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !4850, file: !3, line: 1615, type: !306)
!4853 = !DILocalVariable(name: "__pyx_v_ndim", scope: !4850, file: !3, line: 1616, type: !6)
!4854 = !DILocalVariable(name: "__pyx_r", scope: !4850, file: !3, line: 1617, type: !6)
!4855 = !DILocalVariable(name: "__pyx_t_1", scope: !4850, file: !3, line: 1619, type: !6)
!4856 = !DILocalVariable(name: "__pyx_t_2", scope: !4850, file: !3, line: 1620, type: !54)
!4857 = !DILocalVariable(name: "__pyx_t_3", scope: !4850, file: !3, line: 1621, type: !12)
!4858 = !DILocalVariable(name: "__pyx_lineno", scope: !4850, file: !3, line: 1622, type: !54)
!4859 = !DILocalVariable(name: "__pyx_filename", scope: !4850, file: !3, line: 1623, type: !32)
!4860 = !DILocalVariable(name: "__pyx_clineno", scope: !4850, file: !3, line: 1624, type: !54)
!4861 = !DILocalVariable(name: "tmp", scope: !4862, file: !3, line: 1663, type: !6)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 1663, column: 5)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1650, column: 18)
!4864 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1650, column: 7)
!4865 = !DILabel(scope: !4850, name: "__pyx_L1_error", file: !3, line: 1729)
!4866 = !DILabel(scope: !4850, name: "__pyx_L0", file: !3, line: 1733)
!4867 = !DILocation(line: 1615, column: 149, scope: !4850)
!4868 = !DILocation(line: 1616, column: 3, scope: !4850)
!4869 = !DILocation(line: 1616, column: 13, scope: !4850)
!4870 = !DILocation(line: 1617, column: 3, scope: !4850)
!4871 = !DILocation(line: 1617, column: 13, scope: !4850)
!4872 = !DILocation(line: 1619, column: 3, scope: !4850)
!4873 = !DILocation(line: 1619, column: 13, scope: !4850)
!4874 = !DILocation(line: 1620, column: 3, scope: !4850)
!4875 = !DILocation(line: 1620, column: 7, scope: !4850)
!4876 = !DILocation(line: 1621, column: 3, scope: !4850)
!4877 = !DILocation(line: 1621, column: 14, scope: !4850)
!4878 = !DILocation(line: 1622, column: 3, scope: !4850)
!4879 = !DILocation(line: 1622, column: 7, scope: !4850)
!4880 = !DILocation(line: 1623, column: 3, scope: !4850)
!4881 = !DILocation(line: 1623, column: 15, scope: !4850)
!4882 = !DILocation(line: 1624, column: 3, scope: !4850)
!4883 = !DILocation(line: 1624, column: 7, scope: !4850)
!4884 = !DILocation(line: 1634, column: 33, scope: !4850)
!4885 = !DILocation(line: 1634, column: 47, scope: !4850)
!4886 = !DILocation(line: 1634, column: 15, scope: !4850)
!4887 = !DILocation(line: 1634, column: 13, scope: !4850)
!4888 = !DILocation(line: 1634, column: 59, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1634, column: 59)
!4890 = !DILocation(line: 1634, column: 59, scope: !4850)
!4891 = !DILocation(line: 1634, column: 81, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4893, file: !3, line: 1634, column: 81)
!4893 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 1634, column: 81)
!4894 = !DILocation(line: 1634, column: 81, scope: !4893)
!4895 = !DILocation(line: 1636, column: 18, scope: !4850)
!4896 = !DILocation(line: 1636, column: 16, scope: !4850)
!4897 = !DILocation(line: 1637, column: 13, scope: !4850)
!4898 = !DILocation(line: 1646, column: 34, scope: !4850)
!4899 = !DILocation(line: 1646, column: 48, scope: !4850)
!4900 = !DILocation(line: 1646, column: 15, scope: !4850)
!4901 = !DILocation(line: 1646, column: 13, scope: !4850)
!4902 = !DILocation(line: 1646, column: 78, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1646, column: 78)
!4904 = !DILocation(line: 1646, column: 78, scope: !4850)
!4905 = !DILocation(line: 1646, column: 100, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 1646, column: 100)
!4907 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 1646, column: 100)
!4908 = !DILocation(line: 1646, column: 100, scope: !4907)
!4909 = !DILocation(line: 1648, column: 37, scope: !4850)
!4910 = !DILocation(line: 1648, column: 15, scope: !4850)
!4911 = !DILocation(line: 1648, column: 13, scope: !4850)
!4912 = !DILocation(line: 1648, column: 53, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 1648, column: 53)
!4914 = !DILocation(line: 1648, column: 53, scope: !4850)
!4915 = !DILocation(line: 1648, column: 78, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 1648, column: 78)
!4917 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 1648, column: 78)
!4918 = !DILocation(line: 1648, column: 78, scope: !4917)
!4919 = !DILocation(line: 1649, column: 3, scope: !4850)
!4920 = !DILocation(line: 1649, column: 38, scope: !4850)
!4921 = !DILocation(line: 1650, column: 7, scope: !4864)
!4922 = !DILocation(line: 1650, column: 7, scope: !4850)
!4923 = !DILocation(line: 1659, column: 43, scope: !4863)
!4924 = !DILocation(line: 1659, column: 57, scope: !4863)
!4925 = !DILocation(line: 1659, column: 62, scope: !4863)
!4926 = !DILocation(line: 1659, column: 17, scope: !4863)
!4927 = !DILocation(line: 1659, column: 15, scope: !4863)
!4928 = !DILocation(line: 1659, column: 83, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 1659, column: 83)
!4930 = !DILocation(line: 1659, column: 83, scope: !4863)
!4931 = !DILocation(line: 1659, column: 105, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 1659, column: 105)
!4933 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 1659, column: 105)
!4934 = !DILocation(line: 1659, column: 105, scope: !4933)
!4935 = !DILocation(line: 1661, column: 41, scope: !4863)
!4936 = !DILocation(line: 1661, column: 17, scope: !4863)
!4937 = !DILocation(line: 1661, column: 15, scope: !4863)
!4938 = !DILocation(line: 1661, column: 57, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 1661, column: 57)
!4940 = !DILocation(line: 0, scope: !4939)
!4941 = !DILocation(line: 1661, column: 57, scope: !4863)
!4942 = !DILocation(line: 1661, column: 118, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4944, file: !3, line: 1661, column: 118)
!4944 = distinct !DILexicalBlock(scope: !4939, file: !3, line: 1661, column: 118)
!4945 = !DILocation(line: 1661, column: 118, scope: !4944)
!4946 = !DILocation(line: 1662, column: 5, scope: !4863)
!4947 = !DILocation(line: 1663, column: 5, scope: !4863)
!4948 = !DILocation(line: 1663, column: 5, scope: !4862)
!4949 = !DILocation(line: 1664, column: 27, scope: !4863)
!4950 = !DILocation(line: 1664, column: 5, scope: !4863)
!4951 = !DILocation(line: 1664, column: 19, scope: !4863)
!4952 = !DILocation(line: 1664, column: 25, scope: !4863)
!4953 = !DILocation(line: 1665, column: 5, scope: !4863)
!4954 = !DILocation(line: 1665, column: 40, scope: !4863)
!4955 = !DILocation(line: 1674, column: 38, scope: !4863)
!4956 = !DILocation(line: 1674, column: 52, scope: !4863)
!4957 = !DILocation(line: 1674, column: 17, scope: !4863)
!4958 = !DILocation(line: 1674, column: 15, scope: !4863)
!4959 = !DILocation(line: 1674, column: 103, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 1674, column: 103)
!4961 = !DILocation(line: 1674, column: 103, scope: !4863)
!4962 = !DILocation(line: 1674, column: 125, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 1674, column: 125)
!4964 = distinct !DILexicalBlock(scope: !4960, file: !3, line: 1674, column: 125)
!4965 = !DILocation(line: 1674, column: 125, scope: !4964)
!4966 = !DILocation(line: 1675, column: 39, scope: !4863)
!4967 = !DILocation(line: 1675, column: 17, scope: !4863)
!4968 = !DILocation(line: 1675, column: 15, scope: !4863)
!4969 = !DILocation(line: 1675, column: 55, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 1675, column: 55)
!4971 = !DILocation(line: 1675, column: 55, scope: !4863)
!4972 = !DILocation(line: 1675, column: 80, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 1675, column: 80)
!4974 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 1675, column: 80)
!4975 = !DILocation(line: 1675, column: 80, scope: !4974)
!4976 = !DILocation(line: 1676, column: 5, scope: !4863)
!4977 = !DILocation(line: 1676, column: 40, scope: !4863)
!4978 = !DILocation(line: 1677, column: 9, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 1677, column: 9)
!4980 = !DILocation(line: 1677, column: 9, scope: !4863)
!4981 = !DILocation(line: 1686, column: 39, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 1677, column: 30)
!4983 = !DILocation(line: 1686, column: 65, scope: !4982)
!4984 = !DILocation(line: 1686, column: 19, scope: !4982)
!4985 = !DILocation(line: 1686, column: 17, scope: !4982)
!4986 = !DILocation(line: 1686, column: 90, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 1686, column: 90)
!4988 = !DILocation(line: 1686, column: 90, scope: !4982)
!4989 = !DILocation(line: 1686, column: 112, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 1686, column: 112)
!4991 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 1686, column: 112)
!4992 = !DILocation(line: 1686, column: 112, scope: !4991)
!4993 = !DILocation(line: 1688, column: 19, scope: !4982)
!4994 = !DILocation(line: 1688, column: 7, scope: !4982)
!4995 = !DILocation(line: 1689, column: 7, scope: !4982)
!4996 = !DILocation(line: 1689, column: 42, scope: !4982)
!4997 = !DILocation(line: 1690, column: 7, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 1690, column: 7)
!4999 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 1690, column: 7)
!5000 = !DILocation(line: 1690, column: 7, scope: !4999)
!5001 = !DILocation(line: 1708, column: 3, scope: !4863)
!5002 = !DILocation(line: 1715, column: 3, scope: !4850)
!5003 = !DILocation(line: 1716, column: 3, scope: !4850)
!5004 = !DILocation(line: 1717, column: 13, scope: !4850)
!5005 = !DILocation(line: 1717, column: 11, scope: !4850)
!5006 = !DILocation(line: 1718, column: 3, scope: !4850)
!5007 = !DILocation(line: 1729, column: 3, scope: !4850)
!5008 = !DILocation(line: 1730, column: 3, scope: !4850)
!5009 = !DILocation(line: 1731, column: 79, scope: !4850)
!5010 = !DILocation(line: 1731, column: 94, scope: !4850)
!5011 = !DILocation(line: 1731, column: 108, scope: !4850)
!5012 = !DILocation(line: 1731, column: 3, scope: !4850)
!5013 = !DILocation(line: 1732, column: 11, scope: !4850)
!5014 = !DILocation(line: 1732, column: 3, scope: !4850)
!5015 = !DILocation(line: 1733, column: 3, scope: !4850)
!5016 = !DILocation(line: 1734, column: 3, scope: !4850)
!5017 = !DILocation(line: 1737, column: 10, scope: !4850)
!5018 = !DILocation(line: 1738, column: 1, scope: !4850)
!5019 = !DILocation(line: 1737, column: 3, scope: !4850)
!5020 = distinct !DISubprogram(name: "__Pyx_PyInt_EqObjC", scope: !3, file: !3, line: 3512, type: !5021, scopeLine: 3512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5023)
!5021 = !DISubroutineType(types: !5022)
!5022 = !{!6, !6, !6, !18, !18}
!5023 = !{!5024, !5025, !5026, !5027, !5028, !5031, !5032, !5033, !5034, !5038}
!5024 = !DILocalVariable(name: "op1", arg: 1, scope: !5020, file: !3, line: 3512, type: !6)
!5025 = !DILocalVariable(name: "op2", arg: 2, scope: !5020, file: !3, line: 3512, type: !6)
!5026 = !DILocalVariable(name: "intval", arg: 3, scope: !5020, file: !3, line: 3512, type: !18)
!5027 = !DILocalVariable(name: "inplace", arg: 4, scope: !5020, file: !3, line: 3512, type: !18)
!5028 = !DILocalVariable(name: "unequal", scope: !5029, file: !3, line: 3525, type: !54)
!5029 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 3524, column: 41)
!5030 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 3524, column: 9)
!5031 = !DILocalVariable(name: "uintval", scope: !5029, file: !3, line: 3526, type: !209)
!5032 = !DILocalVariable(name: "size", scope: !5029, file: !3, line: 3527, type: !12)
!5033 = !DILocalVariable(name: "digits", scope: !5029, file: !3, line: 3528, type: !4058)
!5034 = !DILocalVariable(name: "b", scope: !5035, file: !3, line: 3570, type: !5037)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 3569, column: 34)
!5036 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 3569, column: 9)
!5037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18)
!5038 = !DILocalVariable(name: "a", scope: !5035, file: !3, line: 3571, type: !467)
!5039 = !DILocation(line: 3512, column: 61, scope: !5020)
!5040 = !DILocation(line: 3512, column: 76, scope: !5020)
!5041 = !DILocation(line: 3512, column: 100, scope: !5020)
!5042 = !DILocation(line: 3512, column: 127, scope: !5020)
!5043 = !DILocation(line: 3513, column: 9, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 3513, column: 9)
!5045 = !DILocation(line: 3513, column: 16, scope: !5044)
!5046 = !DILocation(line: 3513, column: 13, scope: !5044)
!5047 = !DILocation(line: 3513, column: 9, scope: !5020)
!5048 = !DILocation(line: 3514, column: 9, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 3513, column: 21)
!5050 = !DILocation(line: 3524, column: 9, scope: !5030)
!5051 = !DILocation(line: 3524, column: 9, scope: !5020)
!5052 = !DILocation(line: 3525, column: 9, scope: !5029)
!5053 = !DILocation(line: 3525, column: 13, scope: !5029)
!5054 = !DILocation(line: 3526, column: 9, scope: !5029)
!5055 = !DILocation(line: 3526, column: 23, scope: !5029)
!5056 = !DILocation(line: 3527, column: 9, scope: !5029)
!5057 = !DILocation(line: 3527, column: 20, scope: !5029)
!5058 = !DILocation(line: 3527, column: 27, scope: !5029)
!5059 = !DILocation(line: 3528, column: 9, scope: !5029)
!5060 = !DILocation(line: 3528, column: 22, scope: !5029)
!5061 = !DILocation(line: 3528, column: 47, scope: !5029)
!5062 = !DILocation(line: 3528, column: 53, scope: !5029)
!5063 = !DILocation(line: 3528, column: 31, scope: !5029)
!5064 = !DILocation(line: 3529, column: 13, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 3529, column: 13)
!5066 = !DILocation(line: 3529, column: 20, scope: !5065)
!5067 = !DILocation(line: 3529, column: 13, scope: !5029)
!5068 = !DILocation(line: 3530, column: 17, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 3530, column: 17)
!5070 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 3529, column: 26)
!5071 = !DILocation(line: 3530, column: 22, scope: !5069)
!5072 = !DILocation(line: 3530, column: 17, scope: !5070)
!5073 = !DILocation(line: 3530, column: 28, scope: !5069)
!5074 = !DILocation(line: 3530, column: 49, scope: !5069)
!5075 = !DILocation(line: 3531, column: 20, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 3531, column: 20)
!5077 = !DILocation(line: 3531, column: 27, scope: !5076)
!5078 = !DILocation(line: 3531, column: 20, scope: !5065)
!5079 = !DILocation(line: 3532, column: 17, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 3532, column: 17)
!5081 = distinct !DILexicalBlock(scope: !5076, file: !3, line: 3531, column: 32)
!5082 = !DILocation(line: 3532, column: 22, scope: !5080)
!5083 = !DILocation(line: 3532, column: 17, scope: !5081)
!5084 = !DILocation(line: 3533, column: 17, scope: !5080)
!5085 = !DILocation(line: 3534, column: 23, scope: !5081)
!5086 = !DILocation(line: 3534, column: 22, scope: !5081)
!5087 = !DILocation(line: 3534, column: 20, scope: !5081)
!5088 = !DILocation(line: 3535, column: 21, scope: !5081)
!5089 = !DILocation(line: 3535, column: 20, scope: !5081)
!5090 = !DILocation(line: 3535, column: 18, scope: !5081)
!5091 = !DILocation(line: 3536, column: 9, scope: !5081)
!5092 = !DILocation(line: 3537, column: 17, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 3537, column: 17)
!5094 = distinct !DILexicalBlock(scope: !5076, file: !3, line: 3536, column: 16)
!5095 = !DILocation(line: 3537, column: 22, scope: !5093)
!5096 = !DILocation(line: 3537, column: 17, scope: !5094)
!5097 = !DILocation(line: 3538, column: 17, scope: !5093)
!5098 = !DILocation(line: 3540, column: 35, scope: !5029)
!5099 = !DILocation(line: 3540, column: 17, scope: !5029)
!5100 = !DILocation(line: 3554, column: 13, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 3554, column: 13)
!5102 = !DILocation(line: 3554, column: 21, scope: !5101)
!5103 = !DILocation(line: 3554, column: 13, scope: !5029)
!5104 = !DILocation(line: 3555, column: 24, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 3554, column: 44)
!5106 = !DILocation(line: 3555, column: 29, scope: !5105)
!5107 = !DILocation(line: 3555, column: 35, scope: !5105)
!5108 = !DILocation(line: 3555, column: 39, scope: !5105)
!5109 = !DILocation(line: 3555, column: 53, scope: !5105)
!5110 = !DILocation(line: 3555, column: 61, scope: !5105)
!5111 = !DILocation(line: 3555, column: 49, scope: !5105)
!5112 = !DILocation(line: 3556, column: 21, scope: !5105)
!5113 = !DILocation(line: 3556, column: 36, scope: !5105)
!5114 = !DILocation(line: 3556, column: 44, scope: !5105)
!5115 = !DILocation(line: 3556, column: 67, scope: !5105)
!5116 = !DILocation(line: 3556, column: 31, scope: !5105)
!5117 = !DILocation(line: 3556, column: 18, scope: !5105)
!5118 = !DILocation(line: 3556, column: 102, scope: !5105)
!5119 = !DILocation(line: 3556, column: 117, scope: !5105)
!5120 = !DILocation(line: 3556, column: 125, scope: !5105)
!5121 = !DILocation(line: 3556, column: 148, scope: !5105)
!5122 = !DILocation(line: 3556, column: 112, scope: !5105)
!5123 = !DILocation(line: 3556, column: 99, scope: !5105)
!5124 = !DILocation(line: 3555, column: 21, scope: !5105)
!5125 = !DILocation(line: 3557, column: 9, scope: !5105)
!5126 = !DILocation(line: 3560, column: 13, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 3560, column: 13)
!5128 = !DILocation(line: 3560, column: 21, scope: !5127)
!5129 = !DILocation(line: 3560, column: 13, scope: !5101)
!5130 = !DILocation(line: 3561, column: 24, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 3560, column: 44)
!5132 = !DILocation(line: 3561, column: 29, scope: !5131)
!5133 = !DILocation(line: 3561, column: 35, scope: !5131)
!5134 = !DILocation(line: 3561, column: 39, scope: !5131)
!5135 = !DILocation(line: 3561, column: 53, scope: !5131)
!5136 = !DILocation(line: 3561, column: 61, scope: !5131)
!5137 = !DILocation(line: 3561, column: 49, scope: !5131)
!5138 = !DILocation(line: 3562, column: 21, scope: !5131)
!5139 = !DILocation(line: 3562, column: 36, scope: !5131)
!5140 = !DILocation(line: 3562, column: 44, scope: !5131)
!5141 = !DILocation(line: 3562, column: 67, scope: !5131)
!5142 = !DILocation(line: 3562, column: 31, scope: !5131)
!5143 = !DILocation(line: 3562, column: 18, scope: !5131)
!5144 = !DILocation(line: 3561, column: 21, scope: !5131)
!5145 = !DILocation(line: 3563, column: 9, scope: !5131)
!5146 = !DILocation(line: 3565, column: 24, scope: !5127)
!5147 = !DILocation(line: 3565, column: 29, scope: !5127)
!5148 = !DILocation(line: 3565, column: 35, scope: !5127)
!5149 = !DILocation(line: 3565, column: 56, scope: !5127)
!5150 = !DILocation(line: 3565, column: 40, scope: !5127)
!5151 = !DILocation(line: 3565, column: 71, scope: !5127)
!5152 = !DILocation(line: 3565, column: 79, scope: !5127)
!5153 = !DILocation(line: 3565, column: 67, scope: !5127)
!5154 = !DILocation(line: 3565, column: 21, scope: !5127)
!5155 = !DILocation(line: 3566, column: 13, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 3566, column: 13)
!5157 = !DILocation(line: 3566, column: 21, scope: !5156)
!5158 = !DILocation(line: 3566, column: 13, scope: !5029)
!5159 = !DILocation(line: 3566, column: 27, scope: !5156)
!5160 = !DILocation(line: 3566, column: 48, scope: !5156)
!5161 = !DILocation(line: 3567, column: 5, scope: !5030)
!5162 = !DILocation(line: 3569, column: 9, scope: !5036)
!5163 = !DILocation(line: 3569, column: 9, scope: !5020)
!5164 = !DILocation(line: 3570, column: 9, scope: !5035)
!5165 = !DILocation(line: 3570, column: 20, scope: !5035)
!5166 = !DILocation(line: 3570, column: 24, scope: !5035)
!5167 = !DILocation(line: 3571, column: 9, scope: !5035)
!5168 = !DILocation(line: 3571, column: 16, scope: !5035)
!5169 = !DILocation(line: 3571, column: 20, scope: !5035)
!5170 = !{!5171, !5172, i64 16}
!5171 = !{!"", !1366, i64 0, !5172, i64 16}
!5172 = !{!"double", !1254, i64 0}
!5173 = !{!5172, !5172, i64 0}
!5174 = !DILocation(line: 3572, column: 21, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 3572, column: 13)
!5176 = !DILocation(line: 3572, column: 34, scope: !5175)
!5177 = !DILocation(line: 3572, column: 26, scope: !5175)
!5178 = !DILocation(line: 3572, column: 23, scope: !5175)
!5179 = !DILocation(line: 3572, column: 13, scope: !5035)
!5180 = !DILocation(line: 3572, column: 37, scope: !5175)
!5181 = !DILocation(line: 3572, column: 58, scope: !5175)
!5182 = !DILocation(line: 3573, column: 5, scope: !5036)
!5183 = !DILocation(line: 3575, column: 30, scope: !5020)
!5184 = !DILocation(line: 3575, column: 35, scope: !5020)
!5185 = !DILocation(line: 3575, column: 9, scope: !5020)
!5186 = !DILocation(line: 3574, column: 5, scope: !5020)
!5187 = !DILocation(line: 3576, column: 1, scope: !5020)
!5188 = distinct !DISubprogram(name: "__Pyx_PyObject_IsTrue", scope: !3, file: !3, line: 5410, type: !94, scopeLine: 5410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5189)
!5189 = !{!5190, !5191}
!5190 = !DILocalVariable(name: "x", arg: 1, scope: !5188, file: !3, line: 5410, type: !6)
!5191 = !DILocalVariable(name: "is_true", scope: !5188, file: !3, line: 5411, type: !54)
!5192 = !DILocation(line: 5410, column: 58, scope: !5188)
!5193 = !DILocation(line: 5411, column: 4, scope: !5188)
!5194 = !DILocation(line: 5411, column: 8, scope: !5188)
!5195 = !DILocation(line: 5411, column: 18, scope: !5188)
!5196 = !DILocation(line: 5411, column: 20, scope: !5188)
!5197 = !DILocation(line: 5412, column: 8, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 5412, column: 8)
!5199 = !DILocation(line: 5412, column: 19, scope: !5198)
!5200 = !DILocation(line: 5412, column: 21, scope: !5198)
!5201 = !DILocation(line: 5412, column: 16, scope: !5198)
!5202 = !DILocation(line: 5412, column: 37, scope: !5198)
!5203 = !DILocation(line: 5412, column: 39, scope: !5198)
!5204 = !DILocation(line: 5412, column: 34, scope: !5198)
!5205 = !DILocation(line: 5412, column: 8, scope: !5188)
!5206 = !DILocation(line: 5412, column: 59, scope: !5198)
!5207 = !DILocation(line: 5412, column: 52, scope: !5198)
!5208 = !DILocation(line: 5413, column: 32, scope: !5198)
!5209 = !DILocation(line: 5413, column: 16, scope: !5198)
!5210 = !DILocation(line: 5413, column: 9, scope: !5198)
!5211 = !DILocation(line: 5414, column: 1, scope: !5188)
!5212 = !DISubprogram(name: "PyObject_RichCompare", scope: !8, file: !8, line: 245, type: !224, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5213 = distinct !DISubprogram(name: "__Pyx_Raise", scope: !3, file: !3, line: 3675, type: !5214, scopeLine: 3675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5216)
!5214 = !DISubroutineType(types: !5215)
!5215 = !{null, !6, !6, !6, !6}
!5216 = !{!5217, !5218, !5219, !5220, !5221, !5222, !5226, !5231, !5234, !5237, !5240, !5241}
!5217 = !DILocalVariable(name: "type", arg: 1, scope: !5213, file: !3, line: 3675, type: !6)
!5218 = !DILocalVariable(name: "value", arg: 2, scope: !5213, file: !3, line: 3675, type: !6)
!5219 = !DILocalVariable(name: "tb", arg: 3, scope: !5213, file: !3, line: 3675, type: !6)
!5220 = !DILocalVariable(name: "cause", arg: 4, scope: !5213, file: !3, line: 3675, type: !6)
!5221 = !DILocalVariable(name: "owned_instance", scope: !5213, file: !3, line: 3676, type: !6)
!5222 = !DILocalVariable(name: "instance_class", scope: !5223, file: !3, line: 3695, type: !6)
!5223 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 3694, column: 46)
!5224 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 3694, column: 16)
!5225 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 3686, column: 9)
!5226 = !DILocalVariable(name: "is_subclass", scope: !5227, file: !3, line: 3699, type: !54)
!5227 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 3698, column: 41)
!5228 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 3698, column: 17)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 3696, column: 56)
!5230 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 3696, column: 13)
!5231 = !DILocalVariable(name: "args", scope: !5232, file: !3, line: 3710, type: !6)
!5232 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 3709, column: 30)
!5233 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 3709, column: 13)
!5234 = !DILocalVariable(name: "fixed_cause", scope: !5235, file: !3, line: 3739, type: !6)
!5235 = distinct !DILexicalBlock(scope: !5236, file: !3, line: 3738, column: 16)
!5236 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 3738, column: 9)
!5237 = !DILocalVariable(name: "tstate", scope: !5238, file: !3, line: 3760, type: !1110)
!5238 = distinct !DILexicalBlock(scope: !5239, file: !3, line: 3758, column: 13)
!5239 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 3758, column: 9)
!5240 = !DILocalVariable(name: "tmp_tb", scope: !5238, file: !3, line: 3761, type: !6)
!5241 = !DILabel(scope: !5213, name: "bad", file: !3, line: 3775)
!5242 = !DILocation(line: 3675, column: 35, scope: !5213)
!5243 = !DILocation(line: 3675, column: 51, scope: !5213)
!5244 = !DILocation(line: 3675, column: 68, scope: !5213)
!5245 = !DILocation(line: 3675, column: 82, scope: !5213)
!5246 = !DILocation(line: 3676, column: 5, scope: !5213)
!5247 = !DILocation(line: 3676, column: 15, scope: !5213)
!5248 = !DILocation(line: 3677, column: 9, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 3677, column: 9)
!5250 = !DILocation(line: 3677, column: 12, scope: !5249)
!5251 = !DILocation(line: 3677, column: 9, scope: !5213)
!5252 = !DILocation(line: 3678, column: 12, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 3677, column: 24)
!5254 = !DILocation(line: 3679, column: 5, scope: !5253)
!5255 = !DILocation(line: 3679, column: 16, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 3679, column: 16)
!5257 = !DILocation(line: 3679, column: 19, scope: !5256)
!5258 = !DILocation(line: 3679, column: 23, scope: !5256)
!5259 = !DILocation(line: 3679, column: 16, scope: !5249)
!5260 = !DILocation(line: 3680, column: 25, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 3679, column: 46)
!5262 = !DILocation(line: 3680, column: 9, scope: !5261)
!5263 = !DILocation(line: 3682, column: 9, scope: !5261)
!5264 = !DILocation(line: 3684, column: 9, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 3684, column: 9)
!5266 = !DILocation(line: 3684, column: 15, scope: !5265)
!5267 = !DILocation(line: 3684, column: 9, scope: !5213)
!5268 = !DILocation(line: 3685, column: 15, scope: !5265)
!5269 = !DILocation(line: 3685, column: 9, scope: !5265)
!5270 = !DILocation(line: 3686, column: 9, scope: !5225)
!5271 = !DILocation(line: 3686, column: 9, scope: !5213)
!5272 = !DILocation(line: 3687, column: 13, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 3687, column: 13)
!5274 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 3686, column: 42)
!5275 = !DILocation(line: 3687, column: 13, scope: !5274)
!5276 = !DILocation(line: 3688, column: 29, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 3687, column: 20)
!5278 = !DILocation(line: 3688, column: 13, scope: !5277)
!5279 = !DILocation(line: 3690, column: 13, scope: !5277)
!5280 = !DILocation(line: 3692, column: 17, scope: !5274)
!5281 = !DILocation(line: 3692, column: 15, scope: !5274)
!5282 = !DILocation(line: 3693, column: 28, scope: !5274)
!5283 = !DILocation(line: 3693, column: 14, scope: !5274)
!5284 = !DILocation(line: 3694, column: 5, scope: !5274)
!5285 = !DILocation(line: 3694, column: 16, scope: !5224)
!5286 = !DILocation(line: 3694, column: 16, scope: !5225)
!5287 = !DILocation(line: 3695, column: 9, scope: !5223)
!5288 = !DILocation(line: 3695, column: 19, scope: !5223)
!5289 = !DILocation(line: 3696, column: 13, scope: !5230)
!5290 = !DILocation(line: 3696, column: 19, scope: !5230)
!5291 = !DILocation(line: 3696, column: 22, scope: !5230)
!5292 = !DILocation(line: 3696, column: 13, scope: !5223)
!5293 = !DILocation(line: 3697, column: 42, scope: !5229)
!5294 = !DILocation(line: 3697, column: 28, scope: !5229)
!5295 = !DILocation(line: 3698, column: 17, scope: !5228)
!5296 = !DILocation(line: 3698, column: 35, scope: !5228)
!5297 = !DILocation(line: 3698, column: 32, scope: !5228)
!5298 = !DILocation(line: 3698, column: 17, scope: !5229)
!5299 = !DILocation(line: 3699, column: 17, scope: !5227)
!5300 = !DILocation(line: 3699, column: 21, scope: !5227)
!5301 = !DILocation(line: 3699, column: 55, scope: !5227)
!5302 = !DILocation(line: 3699, column: 71, scope: !5227)
!5303 = !DILocation(line: 3699, column: 35, scope: !5227)
!5304 = !DILocation(line: 3700, column: 22, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 3700, column: 21)
!5306 = !DILocation(line: 3700, column: 21, scope: !5227)
!5307 = !DILocation(line: 3701, column: 36, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 3700, column: 35)
!5309 = !DILocation(line: 3702, column: 17, scope: !5308)
!5310 = !DILocation(line: 3702, column: 28, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 3702, column: 28)
!5312 = !DILocation(line: 3702, column: 28, scope: !5305)
!5313 = !DILocation(line: 3703, column: 21, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 3702, column: 57)
!5315 = !DILocation(line: 3705, column: 28, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 3704, column: 24)
!5317 = !DILocation(line: 3705, column: 26, scope: !5316)
!5318 = !DILocation(line: 3707, column: 13, scope: !5228)
!5319 = !DILocation(line: 3707, column: 13, scope: !5227)
!5320 = !DILocation(line: 3708, column: 9, scope: !5229)
!5321 = !DILocation(line: 3709, column: 14, scope: !5233)
!5322 = !DILocation(line: 3709, column: 13, scope: !5223)
!5323 = !DILocation(line: 3710, column: 13, scope: !5232)
!5324 = !DILocation(line: 3710, column: 23, scope: !5232)
!5325 = !DILocation(line: 3711, column: 18, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 3711, column: 17)
!5327 = !DILocation(line: 3711, column: 17, scope: !5232)
!5328 = !DILocation(line: 3712, column: 24, scope: !5326)
!5329 = !DILocation(line: 3712, column: 22, scope: !5326)
!5330 = !DILocation(line: 3712, column: 17, scope: !5326)
!5331 = !DILocation(line: 3713, column: 22, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5326, file: !3, line: 3713, column: 22)
!5333 = !DILocation(line: 3713, column: 22, scope: !5326)
!5334 = !DILocation(line: 3714, column: 17, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 3713, column: 44)
!5336 = !DILocation(line: 3715, column: 24, scope: !5335)
!5337 = !DILocation(line: 3715, column: 22, scope: !5335)
!5338 = !DILocation(line: 3716, column: 13, scope: !5335)
!5339 = !DILocation(line: 3717, column: 40, scope: !5332)
!5340 = !DILocation(line: 3717, column: 24, scope: !5332)
!5341 = !DILocation(line: 3717, column: 22, scope: !5332)
!5342 = !DILocation(line: 3718, column: 18, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 3718, column: 17)
!5344 = !DILocation(line: 3718, column: 17, scope: !5232)
!5345 = !DILocation(line: 3719, column: 17, scope: !5343)
!5346 = !DILocation(line: 3720, column: 44, scope: !5232)
!5347 = !DILocation(line: 3720, column: 50, scope: !5232)
!5348 = !DILocation(line: 3720, column: 30, scope: !5232)
!5349 = !DILocation(line: 3720, column: 28, scope: !5232)
!5350 = !DILocation(line: 3721, column: 13, scope: !5232)
!5351 = !DILocation(line: 3722, column: 18, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 3722, column: 17)
!5353 = !DILocation(line: 3722, column: 17, scope: !5232)
!5354 = !DILocation(line: 3723, column: 17, scope: !5352)
!5355 = !DILocation(line: 3724, column: 21, scope: !5232)
!5356 = !DILocation(line: 3724, column: 19, scope: !5232)
!5357 = !DILocation(line: 3725, column: 18, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 3725, column: 17)
!5359 = !DILocation(line: 3725, column: 17, scope: !5232)
!5360 = !DILocation(line: 3726, column: 30, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 3725, column: 52)
!5362 = !DILocation(line: 3729, column: 30, scope: !5361)
!5363 = !DILocation(line: 3729, column: 36, scope: !5361)
!5364 = !DILocation(line: 3726, column: 17, scope: !5361)
!5365 = !DILocation(line: 3730, column: 17, scope: !5361)
!5366 = !DILocation(line: 3732, column: 9, scope: !5233)
!5367 = !DILocation(line: 3732, column: 9, scope: !5232)
!5368 = !DILocation(line: 3733, column: 5, scope: !5224)
!5369 = !DILocation(line: 3733, column: 5, scope: !5223)
!5370 = !DILocation(line: 3734, column: 25, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 3733, column: 12)
!5372 = !DILocation(line: 3734, column: 9, scope: !5371)
!5373 = !DILocation(line: 3736, column: 9, scope: !5371)
!5374 = !DILocation(line: 3738, column: 9, scope: !5236)
!5375 = !DILocation(line: 3738, column: 9, scope: !5213)
!5376 = !DILocation(line: 3739, column: 9, scope: !5235)
!5377 = !DILocation(line: 3739, column: 19, scope: !5235)
!5378 = !DILocation(line: 3740, column: 13, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 3740, column: 13)
!5380 = !DILocation(line: 3740, column: 19, scope: !5379)
!5381 = !DILocation(line: 3740, column: 13, scope: !5235)
!5382 = !DILocation(line: 3741, column: 25, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 3740, column: 31)
!5384 = !DILocation(line: 3742, column: 9, scope: !5383)
!5385 = !DILocation(line: 3742, column: 20, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5379, file: !3, line: 3742, column: 20)
!5387 = !DILocation(line: 3742, column: 20, scope: !5379)
!5388 = !DILocation(line: 3743, column: 47, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 3742, column: 51)
!5390 = !DILocation(line: 3743, column: 27, scope: !5389)
!5391 = !DILocation(line: 3743, column: 25, scope: !5389)
!5392 = !DILocation(line: 3744, column: 17, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 3744, column: 17)
!5394 = !DILocation(line: 3744, column: 29, scope: !5393)
!5395 = !DILocation(line: 3744, column: 17, scope: !5389)
!5396 = !DILocation(line: 3745, column: 17, scope: !5393)
!5397 = !DILocation(line: 3746, column: 9, scope: !5389)
!5398 = !DILocation(line: 3746, column: 20, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 3746, column: 20)
!5400 = !DILocation(line: 3746, column: 20, scope: !5386)
!5401 = !DILocation(line: 3747, column: 27, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5399, file: !3, line: 3746, column: 54)
!5403 = !DILocation(line: 3747, column: 25, scope: !5402)
!5404 = !DILocation(line: 3748, column: 13, scope: !5402)
!5405 = !DILocation(line: 3749, column: 9, scope: !5402)
!5406 = !DILocation(line: 3750, column: 29, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5399, file: !3, line: 3749, column: 16)
!5408 = !DILocation(line: 3750, column: 13, scope: !5407)
!5409 = !DILocation(line: 3753, column: 13, scope: !5407)
!5410 = !DILocation(line: 3755, column: 30, scope: !5235)
!5411 = !DILocation(line: 3755, column: 37, scope: !5235)
!5412 = !DILocation(line: 3755, column: 9, scope: !5235)
!5413 = !DILocation(line: 3756, column: 5, scope: !5236)
!5414 = !DILocation(line: 3756, column: 5, scope: !5235)
!5415 = !DILocation(line: 3757, column: 21, scope: !5213)
!5416 = !DILocation(line: 3757, column: 27, scope: !5213)
!5417 = !DILocation(line: 3757, column: 5, scope: !5213)
!5418 = !DILocation(line: 3758, column: 9, scope: !5239)
!5419 = !DILocation(line: 3758, column: 9, scope: !5213)
!5420 = !DILocation(line: 3760, column: 9, scope: !5238)
!5421 = !DILocation(line: 3760, column: 24, scope: !5238)
!5422 = !DILocation(line: 3760, column: 33, scope: !5238)
!5423 = !DILocation(line: 3761, column: 9, scope: !5238)
!5424 = !DILocation(line: 3761, column: 19, scope: !5238)
!5425 = !DILocation(line: 3761, column: 28, scope: !5238)
!5426 = !DILocation(line: 3761, column: 36, scope: !5238)
!5427 = !DILocation(line: 3762, column: 13, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 3762, column: 13)
!5429 = !DILocation(line: 3762, column: 19, scope: !5428)
!5430 = !DILocation(line: 3762, column: 16, scope: !5428)
!5431 = !DILocation(line: 3762, column: 13, scope: !5238)
!5432 = !DILocation(line: 3763, column: 13, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5428, file: !3, line: 3762, column: 27)
!5434 = !DILocation(line: 3764, column: 40, scope: !5433)
!5435 = !DILocation(line: 3764, column: 13, scope: !5433)
!5436 = !DILocation(line: 3764, column: 21, scope: !5433)
!5437 = !DILocation(line: 3764, column: 38, scope: !5433)
!5438 = !DILocation(line: 3765, column: 13, scope: !5433)
!5439 = !DILocation(line: 3766, column: 9, scope: !5433)
!5440 = !DILocation(line: 3774, column: 5, scope: !5239)
!5441 = !DILocation(line: 3774, column: 5, scope: !5238)
!5442 = !DILocation(line: 3775, column: 1, scope: !5213)
!5443 = !DILocation(line: 3776, column: 5, scope: !5213)
!5444 = !DILocation(line: 3777, column: 5, scope: !5213)
!5445 = !DILocation(line: 3778, column: 1, scope: !5213)
!5446 = !DISubprogram(name: "PyObject_IsTrue", scope: !8, file: !8, line: 261, type: !94, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5447 = !DISubprogram(name: "PyObject_IsSubclass", scope: !3174, file: !3174, line: 839, type: !149, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5448 = !DISubprogram(name: "PyObject_CallObject", scope: !3174, file: !3174, line: 169, type: !77, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5449 = !DISubprogram(name: "PyException_SetCause", scope: !1725, file: !1725, line: 50, type: !5450, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5450 = !DISubroutineType(types: !5451)
!5451 = !{null, !6, !6}
!5452 = !DISubprogram(name: "PyErr_SetObject", scope: !1725, file: !1725, line: 12, type: !5450, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!5453 = distinct !DISubprogram(name: "__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_1__get__", scope: !3, file: !3, line: 1750, type: !63, scopeLine: 1750, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5454)
!5454 = !{!5455, !5456}
!5455 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5453, file: !3, line: 1750, type: !6)
!5456 = !DILocalVariable(name: "__pyx_r", scope: !5453, file: !3, line: 1751, type: !6)
!5457 = !DILocation(line: 1750, column: 98, scope: !5453)
!5458 = !DILocation(line: 1751, column: 3, scope: !5453)
!5459 = !DILocation(line: 1751, column: 13, scope: !5453)
!5460 = !DILocation(line: 1754, column: 147, scope: !5453)
!5461 = !DILocation(line: 1754, column: 13, scope: !5453)
!5462 = !DILocation(line: 1754, column: 11, scope: !5453)
!5463 = !DILocation(line: 1758, column: 10, scope: !5453)
!5464 = !DILocation(line: 1759, column: 1, scope: !5453)
!5465 = !DILocation(line: 1758, column: 3, scope: !5453)
!5466 = distinct !DISubprogram(name: "__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name___get__", scope: !3, file: !3, line: 1761, type: !864, scopeLine: 1761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5467)
!5467 = !{!5468, !5469, !5470}
!5468 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5466, file: !3, line: 1761, type: !306)
!5469 = !DILocalVariable(name: "__pyx_r", scope: !5466, file: !3, line: 1762, type: !6)
!5470 = !DILabel(scope: !5466, name: "__pyx_L0", file: !3, line: 1771)
!5471 = !DILocation(line: 1761, column: 149, scope: !5466)
!5472 = !DILocation(line: 1762, column: 3, scope: !5466)
!5473 = !DILocation(line: 1762, column: 13, scope: !5466)
!5474 = !DILocation(line: 1765, column: 3, scope: !5466)
!5475 = !DILocation(line: 1766, column: 3, scope: !5466)
!5476 = !DILocation(line: 1767, column: 13, scope: !5466)
!5477 = !DILocation(line: 1767, column: 27, scope: !5466)
!5478 = !DILocation(line: 1767, column: 11, scope: !5466)
!5479 = !DILocation(line: 1768, column: 3, scope: !5466)
!5480 = !DILocation(line: 1771, column: 3, scope: !5466)
!5481 = !DILocation(line: 1774, column: 10, scope: !5466)
!5482 = !DILocation(line: 1775, column: 1, scope: !5466)
!5483 = !DILocation(line: 1774, column: 3, scope: !5466)
!5484 = distinct !DISubprogram(name: "__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_3__set__", scope: !3, file: !3, line: 1779, type: !149, scopeLine: 1779, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5485)
!5485 = !{!5486, !5487, !5488}
!5486 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5484, file: !3, line: 1779, type: !6)
!5487 = !DILocalVariable(name: "__pyx_v_value", arg: 2, scope: !5484, file: !3, line: 1779, type: !6)
!5488 = !DILocalVariable(name: "__pyx_r", scope: !5484, file: !3, line: 1780, type: !54)
!5489 = !DILocation(line: 1779, column: 92, scope: !5484)
!5490 = !DILocation(line: 1779, column: 116, scope: !5484)
!5491 = !DILocation(line: 1780, column: 3, scope: !5484)
!5492 = !DILocation(line: 1780, column: 7, scope: !5484)
!5493 = !DILocation(line: 1783, column: 148, scope: !5484)
!5494 = !DILocation(line: 1783, column: 176, scope: !5484)
!5495 = !DILocation(line: 1783, column: 13, scope: !5484)
!5496 = !DILocation(line: 1783, column: 11, scope: !5484)
!5497 = !DILocation(line: 1787, column: 10, scope: !5484)
!5498 = !DILocation(line: 1788, column: 1, scope: !5484)
!5499 = !DILocation(line: 1787, column: 3, scope: !5484)
!5500 = distinct !DISubprogram(name: "__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_5__del__", scope: !3, file: !3, line: 1821, type: !94, scopeLine: 1821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5501)
!5501 = !{!5502, !5503}
!5502 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5500, file: !3, line: 1821, type: !6)
!5503 = !DILocalVariable(name: "__pyx_r", scope: !5500, file: !3, line: 1822, type: !54)
!5504 = !DILocation(line: 1821, column: 92, scope: !5500)
!5505 = !DILocation(line: 1822, column: 3, scope: !5500)
!5506 = !DILocation(line: 1822, column: 7, scope: !5500)
!5507 = !DILocation(line: 1825, column: 148, scope: !5500)
!5508 = !DILocation(line: 1825, column: 13, scope: !5500)
!5509 = !DILocation(line: 1825, column: 11, scope: !5500)
!5510 = !DILocation(line: 1829, column: 10, scope: !5500)
!5511 = !DILocation(line: 1830, column: 1, scope: !5500)
!5512 = !DILocation(line: 1829, column: 3, scope: !5500)
!5513 = distinct !DISubprogram(name: "__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_2__set__", scope: !3, file: !3, line: 1790, type: !5514, scopeLine: 1790, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5516)
!5514 = !DISubroutineType(types: !5515)
!5515 = !{!54, !306, !6}
!5516 = !{!5517, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525}
!5517 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5513, file: !3, line: 1790, type: !306)
!5518 = !DILocalVariable(name: "__pyx_v_value", arg: 2, scope: !5513, file: !3, line: 1790, type: !6)
!5519 = !DILocalVariable(name: "__pyx_r", scope: !5513, file: !3, line: 1791, type: !54)
!5520 = !DILocalVariable(name: "__pyx_t_1", scope: !5513, file: !3, line: 1793, type: !6)
!5521 = !DILocalVariable(name: "__pyx_lineno", scope: !5513, file: !3, line: 1794, type: !54)
!5522 = !DILocalVariable(name: "__pyx_filename", scope: !5513, file: !3, line: 1795, type: !32)
!5523 = !DILocalVariable(name: "__pyx_clineno", scope: !5513, file: !3, line: 1796, type: !54)
!5524 = !DILabel(scope: !5513, name: "__pyx_L1_error", file: !3, line: 1810)
!5525 = !DILabel(scope: !5513, name: "__pyx_L0", file: !3, line: 1814)
!5526 = !DILocation(line: 1790, column: 144, scope: !5513)
!5527 = !DILocation(line: 1790, column: 168, scope: !5513)
!5528 = !DILocation(line: 1791, column: 3, scope: !5513)
!5529 = !DILocation(line: 1791, column: 7, scope: !5513)
!5530 = !DILocation(line: 1793, column: 3, scope: !5513)
!5531 = !DILocation(line: 1793, column: 13, scope: !5513)
!5532 = !DILocation(line: 1794, column: 3, scope: !5513)
!5533 = !DILocation(line: 1794, column: 7, scope: !5513)
!5534 = !DILocation(line: 1795, column: 3, scope: !5513)
!5535 = !DILocation(line: 1795, column: 15, scope: !5513)
!5536 = !DILocation(line: 1796, column: 3, scope: !5513)
!5537 = !DILocation(line: 1796, column: 7, scope: !5513)
!5538 = !DILocation(line: 1798, column: 9, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 1798, column: 7)
!5540 = !DILocation(line: 1798, column: 52, scope: !5539)
!5541 = !DILocation(line: 1798, column: 56, scope: !5539)
!5542 = !DILocation(line: 1798, column: 71, scope: !5539)
!5543 = !DILocation(line: 1798, column: 82, scope: !5539)
!5544 = !DILocation(line: 1798, column: 104, scope: !5539)
!5545 = !DILocation(line: 1798, column: 162, scope: !5539)
!5546 = !DILocation(line: 1798, column: 186, scope: !5539)
!5547 = !DILocation(line: 1798, column: 91, scope: !5539)
!5548 = !DILocation(line: 1798, column: 7, scope: !5513)
!5549 = !DILocation(line: 1798, column: 201, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 1798, column: 201)
!5551 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 1798, column: 201)
!5552 = !DILocation(line: 1798, column: 201, scope: !5551)
!5553 = !DILocation(line: 1799, column: 15, scope: !5513)
!5554 = !DILocation(line: 1799, column: 13, scope: !5513)
!5555 = !DILocation(line: 1800, column: 3, scope: !5513)
!5556 = !DILocation(line: 1803, column: 3, scope: !5513)
!5557 = !DILocation(line: 1804, column: 36, scope: !5513)
!5558 = !DILocation(line: 1804, column: 3, scope: !5513)
!5559 = !DILocation(line: 1804, column: 17, scope: !5513)
!5560 = !DILocation(line: 1804, column: 22, scope: !5513)
!5561 = !DILocation(line: 1805, column: 13, scope: !5513)
!5562 = !DILocation(line: 1808, column: 11, scope: !5513)
!5563 = !DILocation(line: 1809, column: 3, scope: !5513)
!5564 = !DILocation(line: 1810, column: 3, scope: !5513)
!5565 = !DILocation(line: 1811, column: 3, scope: !5513)
!5566 = !DILocation(line: 1812, column: 79, scope: !5513)
!5567 = !DILocation(line: 1812, column: 94, scope: !5513)
!5568 = !DILocation(line: 1812, column: 108, scope: !5513)
!5569 = !DILocation(line: 1812, column: 3, scope: !5513)
!5570 = !DILocation(line: 1813, column: 11, scope: !5513)
!5571 = !DILocation(line: 1813, column: 3, scope: !5513)
!5572 = !DILocation(line: 1814, column: 3, scope: !5513)
!5573 = !DILocation(line: 1816, column: 10, scope: !5513)
!5574 = !DILocation(line: 1817, column: 1, scope: !5513)
!5575 = !DILocation(line: 1816, column: 3, scope: !5513)
!5576 = distinct !DISubprogram(name: "__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_4name_4__del__", scope: !3, file: !3, line: 1832, type: !5577, scopeLine: 1832, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5579)
!5577 = !DISubroutineType(types: !5578)
!5578 = !{!54, !306}
!5579 = !{!5580, !5581}
!5580 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5576, file: !3, line: 1832, type: !306)
!5581 = !DILocalVariable(name: "__pyx_r", scope: !5576, file: !3, line: 1833, type: !54)
!5582 = !DILocation(line: 1832, column: 144, scope: !5576)
!5583 = !DILocation(line: 1833, column: 3, scope: !5576)
!5584 = !DILocation(line: 1833, column: 7, scope: !5576)
!5585 = !DILocation(line: 1836, column: 3, scope: !5576)
!5586 = !DILocation(line: 1839, column: 3, scope: !5576)
!5587 = !DILocation(line: 1840, column: 3, scope: !5576)
!5588 = !DILocation(line: 1840, column: 17, scope: !5576)
!5589 = !DILocation(line: 1840, column: 22, scope: !5576)
!5590 = !DILocation(line: 1843, column: 11, scope: !5576)
!5591 = !DILocation(line: 1845, column: 10, scope: !5576)
!5592 = !DILocation(line: 1846, column: 1, scope: !5576)
!5593 = !DILocation(line: 1845, column: 3, scope: !5576)
!5594 = distinct !DISubprogram(name: "__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_1__get__", scope: !3, file: !3, line: 1858, type: !63, scopeLine: 1858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5595)
!5595 = !{!5596, !5597}
!5596 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5594, file: !3, line: 1858, type: !6)
!5597 = !DILocalVariable(name: "__pyx_r", scope: !5594, file: !3, line: 1859, type: !6)
!5598 = !DILocation(line: 1858, column: 97, scope: !5594)
!5599 = !DILocation(line: 1859, column: 3, scope: !5594)
!5600 = !DILocation(line: 1859, column: 13, scope: !5594)
!5601 = !DILocation(line: 1862, column: 146, scope: !5594)
!5602 = !DILocation(line: 1862, column: 13, scope: !5594)
!5603 = !DILocation(line: 1862, column: 11, scope: !5594)
!5604 = !DILocation(line: 1866, column: 10, scope: !5594)
!5605 = !DILocation(line: 1867, column: 1, scope: !5594)
!5606 = !DILocation(line: 1866, column: 3, scope: !5594)
!5607 = distinct !DISubprogram(name: "__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj___get__", scope: !3, file: !3, line: 1869, type: !864, scopeLine: 1869, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5608)
!5608 = !{!5609, !5610, !5611}
!5609 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5607, file: !3, line: 1869, type: !306)
!5610 = !DILocalVariable(name: "__pyx_r", scope: !5607, file: !3, line: 1870, type: !6)
!5611 = !DILabel(scope: !5607, name: "__pyx_L0", file: !3, line: 1879)
!5612 = !DILocation(line: 1869, column: 148, scope: !5607)
!5613 = !DILocation(line: 1870, column: 3, scope: !5607)
!5614 = !DILocation(line: 1870, column: 13, scope: !5607)
!5615 = !DILocation(line: 1873, column: 3, scope: !5607)
!5616 = !DILocation(line: 1874, column: 3, scope: !5607)
!5617 = !DILocation(line: 1875, column: 13, scope: !5607)
!5618 = !DILocation(line: 1875, column: 27, scope: !5607)
!5619 = !DILocation(line: 1875, column: 11, scope: !5607)
!5620 = !DILocation(line: 1876, column: 3, scope: !5607)
!5621 = !DILocation(line: 1879, column: 3, scope: !5607)
!5622 = !DILocation(line: 1882, column: 10, scope: !5607)
!5623 = !DILocation(line: 1883, column: 1, scope: !5607)
!5624 = !DILocation(line: 1882, column: 3, scope: !5607)
!5625 = distinct !DISubprogram(name: "__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_3__set__", scope: !3, file: !3, line: 1887, type: !149, scopeLine: 1887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5626)
!5626 = !{!5627, !5628, !5629}
!5627 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5625, file: !3, line: 1887, type: !6)
!5628 = !DILocalVariable(name: "__pyx_v_value", arg: 2, scope: !5625, file: !3, line: 1887, type: !6)
!5629 = !DILocalVariable(name: "__pyx_r", scope: !5625, file: !3, line: 1888, type: !54)
!5630 = !DILocation(line: 1887, column: 91, scope: !5625)
!5631 = !DILocation(line: 1887, column: 115, scope: !5625)
!5632 = !DILocation(line: 1888, column: 3, scope: !5625)
!5633 = !DILocation(line: 1888, column: 7, scope: !5625)
!5634 = !DILocation(line: 1891, column: 147, scope: !5625)
!5635 = !DILocation(line: 1891, column: 175, scope: !5625)
!5636 = !DILocation(line: 1891, column: 13, scope: !5625)
!5637 = !DILocation(line: 1891, column: 11, scope: !5625)
!5638 = !DILocation(line: 1895, column: 10, scope: !5625)
!5639 = !DILocation(line: 1896, column: 1, scope: !5625)
!5640 = !DILocation(line: 1895, column: 3, scope: !5625)
!5641 = distinct !DISubprogram(name: "__pyx_pw_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_5__del__", scope: !3, file: !3, line: 1916, type: !94, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5642)
!5642 = !{!5643, !5644}
!5643 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5641, file: !3, line: 1916, type: !6)
!5644 = !DILocalVariable(name: "__pyx_r", scope: !5641, file: !3, line: 1917, type: !54)
!5645 = !DILocation(line: 1916, column: 91, scope: !5641)
!5646 = !DILocation(line: 1917, column: 3, scope: !5641)
!5647 = !DILocation(line: 1917, column: 7, scope: !5641)
!5648 = !DILocation(line: 1920, column: 147, scope: !5641)
!5649 = !DILocation(line: 1920, column: 13, scope: !5641)
!5650 = !DILocation(line: 1920, column: 11, scope: !5641)
!5651 = !DILocation(line: 1924, column: 10, scope: !5641)
!5652 = !DILocation(line: 1925, column: 1, scope: !5641)
!5653 = !DILocation(line: 1924, column: 3, scope: !5641)
!5654 = distinct !DISubprogram(name: "__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_2__set__", scope: !3, file: !3, line: 1898, type: !5514, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5655)
!5655 = !{!5656, !5657, !5658}
!5656 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5654, file: !3, line: 1898, type: !306)
!5657 = !DILocalVariable(name: "__pyx_v_value", arg: 2, scope: !5654, file: !3, line: 1898, type: !6)
!5658 = !DILocalVariable(name: "__pyx_r", scope: !5654, file: !3, line: 1899, type: !54)
!5659 = !DILocation(line: 1898, column: 143, scope: !5654)
!5660 = !DILocation(line: 1898, column: 167, scope: !5654)
!5661 = !DILocation(line: 1899, column: 3, scope: !5654)
!5662 = !DILocation(line: 1899, column: 7, scope: !5654)
!5663 = !DILocation(line: 1902, column: 3, scope: !5654)
!5664 = !DILocation(line: 1905, column: 3, scope: !5654)
!5665 = !DILocation(line: 1906, column: 23, scope: !5654)
!5666 = !DILocation(line: 1906, column: 3, scope: !5654)
!5667 = !DILocation(line: 1906, column: 17, scope: !5654)
!5668 = !DILocation(line: 1906, column: 21, scope: !5654)
!5669 = !DILocation(line: 1909, column: 11, scope: !5654)
!5670 = !DILocation(line: 1911, column: 10, scope: !5654)
!5671 = !DILocation(line: 1912, column: 1, scope: !5654)
!5672 = !DILocation(line: 1911, column: 3, scope: !5654)
!5673 = distinct !DISubprogram(name: "__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase_3obj_4__del__", scope: !3, file: !3, line: 1927, type: !5577, scopeLine: 1927, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5674)
!5674 = !{!5675, !5676}
!5675 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5673, file: !3, line: 1927, type: !306)
!5676 = !DILocalVariable(name: "__pyx_r", scope: !5673, file: !3, line: 1928, type: !54)
!5677 = !DILocation(line: 1927, column: 143, scope: !5673)
!5678 = !DILocation(line: 1928, column: 3, scope: !5673)
!5679 = !DILocation(line: 1928, column: 7, scope: !5673)
!5680 = !DILocation(line: 1931, column: 3, scope: !5673)
!5681 = !DILocation(line: 1934, column: 3, scope: !5673)
!5682 = !DILocation(line: 1935, column: 3, scope: !5673)
!5683 = !DILocation(line: 1935, column: 17, scope: !5673)
!5684 = !DILocation(line: 1935, column: 21, scope: !5673)
!5685 = !DILocation(line: 1938, column: 11, scope: !5673)
!5686 = !DILocation(line: 1940, column: 10, scope: !5673)
!5687 = !DILocation(line: 1941, column: 1, scope: !5673)
!5688 = !DILocation(line: 1940, column: 3, scope: !5673)
!5689 = distinct !DISubprogram(name: "__Pyx_RaiseArgtupleInvalid", scope: !3, file: !3, line: 3349, type: !5690, scopeLine: 3355, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5692)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{null, !32, !54, !12, !12, !12}
!5692 = !{!5693, !5694, !5695, !5696, !5697, !5698, !5699}
!5693 = !DILocalVariable(name: "func_name", arg: 1, scope: !5689, file: !3, line: 3350, type: !32)
!5694 = !DILocalVariable(name: "exact", arg: 2, scope: !5689, file: !3, line: 3351, type: !54)
!5695 = !DILocalVariable(name: "num_min", arg: 3, scope: !5689, file: !3, line: 3352, type: !12)
!5696 = !DILocalVariable(name: "num_max", arg: 4, scope: !5689, file: !3, line: 3353, type: !12)
!5697 = !DILocalVariable(name: "num_found", arg: 5, scope: !5689, file: !3, line: 3354, type: !12)
!5698 = !DILocalVariable(name: "num_expected", scope: !5689, file: !3, line: 3356, type: !12)
!5699 = !DILocalVariable(name: "more_or_less", scope: !5689, file: !3, line: 3357, type: !32)
!5700 = !DILocation(line: 3350, column: 17, scope: !5689)
!5701 = !DILocation(line: 3351, column: 9, scope: !5689)
!5702 = !DILocation(line: 3352, column: 16, scope: !5689)
!5703 = !DILocation(line: 3353, column: 16, scope: !5689)
!5704 = !DILocation(line: 3354, column: 16, scope: !5689)
!5705 = !DILocation(line: 3356, column: 5, scope: !5689)
!5706 = !DILocation(line: 3356, column: 16, scope: !5689)
!5707 = !DILocation(line: 3357, column: 5, scope: !5689)
!5708 = !DILocation(line: 3357, column: 17, scope: !5689)
!5709 = !DILocation(line: 3358, column: 9, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 3358, column: 9)
!5711 = !DILocation(line: 3358, column: 21, scope: !5710)
!5712 = !DILocation(line: 3358, column: 19, scope: !5710)
!5713 = !DILocation(line: 3358, column: 9, scope: !5689)
!5714 = !DILocation(line: 3359, column: 24, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 3358, column: 30)
!5716 = !DILocation(line: 3359, column: 22, scope: !5715)
!5717 = !DILocation(line: 3360, column: 22, scope: !5715)
!5718 = !DILocation(line: 3361, column: 5, scope: !5715)
!5719 = !DILocation(line: 3362, column: 24, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 3361, column: 12)
!5721 = !DILocation(line: 3362, column: 22, scope: !5720)
!5722 = !DILocation(line: 3363, column: 22, scope: !5720)
!5723 = !DILocation(line: 3365, column: 9, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 3365, column: 9)
!5725 = !DILocation(line: 3365, column: 9, scope: !5689)
!5726 = !DILocation(line: 3366, column: 22, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 3365, column: 16)
!5728 = !DILocation(line: 3367, column: 5, scope: !5727)
!5729 = !DILocation(line: 3368, column: 18, scope: !5689)
!5730 = !DILocation(line: 3370, column: 18, scope: !5689)
!5731 = !DILocation(line: 3370, column: 29, scope: !5689)
!5732 = !DILocation(line: 3370, column: 43, scope: !5689)
!5733 = !DILocation(line: 3371, column: 19, scope: !5689)
!5734 = !DILocation(line: 3371, column: 32, scope: !5689)
!5735 = !DILocation(line: 3371, column: 18, scope: !5689)
!5736 = !DILocation(line: 3371, column: 50, scope: !5689)
!5737 = !DILocation(line: 3368, column: 5, scope: !5689)
!5738 = !DILocation(line: 3372, column: 1, scope: !5689)
!5739 = distinct !DISubprogram(name: "__Pyx_ParseOptionalKeywords", scope: !3, file: !3, line: 3389, type: !5740, scopeLine: 3396, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5743)
!5740 = !DISubroutineType(types: !5741)
!5741 = !{!54, !6, !5742, !6, !339, !12, !32}
!5742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!5743 = !{!5744, !5745, !5746, !5747, !5748, !5749, !5750, !5751, !5752, !5753, !5754, !5755, !5760, !5763, !5765, !5766, !5767, !5768}
!5744 = !DILocalVariable(name: "kwds", arg: 1, scope: !5739, file: !3, line: 3390, type: !6)
!5745 = !DILocalVariable(name: "argnames", arg: 2, scope: !5739, file: !3, line: 3391, type: !5742)
!5746 = !DILocalVariable(name: "kwds2", arg: 3, scope: !5739, file: !3, line: 3392, type: !6)
!5747 = !DILocalVariable(name: "values", arg: 4, scope: !5739, file: !3, line: 3393, type: !339)
!5748 = !DILocalVariable(name: "num_pos_args", arg: 5, scope: !5739, file: !3, line: 3394, type: !12)
!5749 = !DILocalVariable(name: "function_name", arg: 6, scope: !5739, file: !3, line: 3395, type: !32)
!5750 = !DILocalVariable(name: "key", scope: !5739, file: !3, line: 3397, type: !6)
!5751 = !DILocalVariable(name: "value", scope: !5739, file: !3, line: 3397, type: !6)
!5752 = !DILocalVariable(name: "pos", scope: !5739, file: !3, line: 3398, type: !12)
!5753 = !DILocalVariable(name: "name", scope: !5739, file: !3, line: 3399, type: !5742)
!5754 = !DILocalVariable(name: "first_kw_arg", scope: !5739, file: !3, line: 3400, type: !5742)
!5755 = !DILocalVariable(name: "cmp", scope: !5756, file: !3, line: 3435, type: !54)
!5756 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 3434, column: 27)
!5757 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 3433, column: 43)
!5758 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 3433, column: 13)
!5759 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 3401, column: 51)
!5760 = !DILocalVariable(name: "argname", scope: !5761, file: !3, line: 3449, type: !5742)
!5761 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 3448, column: 18)
!5762 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 3447, column: 17)
!5763 = !DILocalVariable(name: "cmp", scope: !5764, file: !3, line: 3451, type: !54)
!5764 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 3450, column: 49)
!5765 = !DILabel(scope: !5739, name: "arg_passed_twice", file: !3, line: 3470)
!5766 = !DILabel(scope: !5739, name: "invalid_keyword_type", file: !3, line: 3473)
!5767 = !DILabel(scope: !5739, name: "invalid_keyword", file: !3, line: 3477)
!5768 = !DILabel(scope: !5739, name: "bad", file: !3, line: 3486)
!5769 = !DILocation(line: 3390, column: 15, scope: !5739)
!5770 = !DILocation(line: 3391, column: 16, scope: !5739)
!5771 = !DILocation(line: 3392, column: 15, scope: !5739)
!5772 = !DILocation(line: 3393, column: 15, scope: !5739)
!5773 = !DILocation(line: 3394, column: 16, scope: !5739)
!5774 = !DILocation(line: 3395, column: 17, scope: !5739)
!5775 = !DILocation(line: 3397, column: 5, scope: !5739)
!5776 = !DILocation(line: 3397, column: 15, scope: !5739)
!5777 = !DILocation(line: 3397, column: 25, scope: !5739)
!5778 = !DILocation(line: 3398, column: 5, scope: !5739)
!5779 = !DILocation(line: 3398, column: 16, scope: !5739)
!5780 = !DILocation(line: 3399, column: 5, scope: !5739)
!5781 = !DILocation(line: 3399, column: 17, scope: !5739)
!5782 = !DILocation(line: 3400, column: 5, scope: !5739)
!5783 = !DILocation(line: 3400, column: 17, scope: !5739)
!5784 = !DILocation(line: 3400, column: 32, scope: !5739)
!5785 = !DILocation(line: 3400, column: 43, scope: !5739)
!5786 = !DILocation(line: 3400, column: 41, scope: !5739)
!5787 = !DILocation(line: 3401, column: 5, scope: !5739)
!5788 = !DILocation(line: 3401, column: 24, scope: !5739)
!5789 = !DILocation(line: 3401, column: 12, scope: !5739)
!5790 = !DILocation(line: 3402, column: 16, scope: !5759)
!5791 = !DILocation(line: 3402, column: 14, scope: !5759)
!5792 = !DILocation(line: 3403, column: 9, scope: !5759)
!5793 = !DILocation(line: 3403, column: 17, scope: !5759)
!5794 = !DILocation(line: 3403, column: 16, scope: !5759)
!5795 = !DILocation(line: 3403, column: 22, scope: !5759)
!5796 = !DILocation(line: 3403, column: 28, scope: !5759)
!5797 = !DILocation(line: 3403, column: 27, scope: !5759)
!5798 = !DILocation(line: 3403, column: 26, scope: !5759)
!5799 = !DILocation(line: 3403, column: 36, scope: !5759)
!5800 = !DILocation(line: 3403, column: 33, scope: !5759)
!5801 = !DILocation(line: 0, scope: !5759)
!5802 = !DILocation(line: 3403, column: 46, scope: !5759)
!5803 = distinct !{!5803, !5792, !5802, !1801}
!5804 = !DILocation(line: 3404, column: 14, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 3404, column: 13)
!5806 = !DILocation(line: 3404, column: 13, scope: !5805)
!5807 = !DILocation(line: 3404, column: 13, scope: !5759)
!5808 = !DILocation(line: 3405, column: 37, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 3404, column: 20)
!5810 = !DILocation(line: 3405, column: 13, scope: !5809)
!5811 = !DILocation(line: 3405, column: 20, scope: !5809)
!5812 = !DILocation(line: 3405, column: 25, scope: !5809)
!5813 = !DILocation(line: 3405, column: 24, scope: !5809)
!5814 = !DILocation(line: 3405, column: 35, scope: !5809)
!5815 = !DILocation(line: 3406, column: 13, scope: !5809)
!5816 = distinct !{!5816, !5787, !5817, !1801}
!5817 = !DILocation(line: 3468, column: 5, scope: !5739)
!5818 = !DILocation(line: 3408, column: 16, scope: !5759)
!5819 = !DILocation(line: 3408, column: 14, scope: !5759)
!5820 = !DILocation(line: 3433, column: 13, scope: !5758)
!5821 = !DILocation(line: 3433, column: 13, scope: !5759)
!5822 = !DILocation(line: 3434, column: 13, scope: !5757)
!5823 = !DILocation(line: 3434, column: 21, scope: !5757)
!5824 = !DILocation(line: 3434, column: 20, scope: !5757)
!5825 = !DILocation(line: 3435, column: 17, scope: !5756)
!5826 = !DILocation(line: 3435, column: 21, scope: !5756)
!5827 = !DILocation(line: 3435, column: 30, scope: !5756)
!5828 = !DILocation(line: 3435, column: 29, scope: !5756)
!5829 = !DILocation(line: 3435, column: 28, scope: !5756)
!5830 = !DILocation(line: 3435, column: 38, scope: !5756)
!5831 = !DILocation(line: 3435, column: 35, scope: !5756)
!5832 = !DILocation(line: 3435, column: 27, scope: !5756)
!5833 = !DILocation(line: 3437, column: 22, scope: !5756)
!5834 = !{!2708, !1367, i64 16}
!5835 = !DILocation(line: 3437, column: 60, scope: !5756)
!5836 = !DILocation(line: 3437, column: 57, scope: !5756)
!5837 = !DILocation(line: 3437, column: 21, scope: !5756)
!5838 = !DILocation(line: 3439, column: 41, scope: !5756)
!5839 = !DILocation(line: 3439, column: 40, scope: !5756)
!5840 = !DILocation(line: 3439, column: 39, scope: !5756)
!5841 = !DILocation(line: 3439, column: 47, scope: !5756)
!5842 = !DILocation(line: 3439, column: 21, scope: !5756)
!5843 = !DILocation(line: 3440, column: 21, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 3440, column: 21)
!5845 = !DILocation(line: 3440, column: 25, scope: !5844)
!5846 = !DILocation(line: 3440, column: 29, scope: !5844)
!5847 = !DILocation(line: 3440, column: 32, scope: !5844)
!5848 = !DILocation(line: 3440, column: 21, scope: !5756)
!5849 = !DILocation(line: 3440, column: 60, scope: !5844)
!5850 = !DILocation(line: 3441, column: 21, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 3441, column: 21)
!5852 = !DILocation(line: 3441, column: 25, scope: !5851)
!5853 = !DILocation(line: 3441, column: 21, scope: !5756)
!5854 = !DILocation(line: 3442, column: 45, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 3441, column: 31)
!5856 = !DILocation(line: 3442, column: 21, scope: !5855)
!5857 = !DILocation(line: 3442, column: 28, scope: !5855)
!5858 = !DILocation(line: 3442, column: 33, scope: !5855)
!5859 = !DILocation(line: 3442, column: 32, scope: !5855)
!5860 = !DILocation(line: 3442, column: 43, scope: !5855)
!5861 = !DILocation(line: 3443, column: 21, scope: !5855)
!5862 = !DILocation(line: 3445, column: 21, scope: !5756)
!5863 = !DILocation(line: 3446, column: 13, scope: !5757)
!5864 = distinct !{!5864, !5822, !5863, !1801}
!5865 = !DILocation(line: 3447, column: 18, scope: !5762)
!5866 = !DILocation(line: 3447, column: 17, scope: !5762)
!5867 = !DILocation(line: 3447, column: 17, scope: !5757)
!5868 = !DILocation(line: 3447, column: 24, scope: !5762)
!5869 = !DILocation(line: 3449, column: 17, scope: !5761)
!5870 = !DILocation(line: 3449, column: 29, scope: !5761)
!5871 = !DILocation(line: 3449, column: 39, scope: !5761)
!5872 = !DILocation(line: 3450, column: 17, scope: !5761)
!5873 = !DILocation(line: 3450, column: 24, scope: !5761)
!5874 = !DILocation(line: 3450, column: 35, scope: !5761)
!5875 = !DILocation(line: 3450, column: 32, scope: !5761)
!5876 = !DILocation(line: 3451, column: 21, scope: !5764)
!5877 = !DILocation(line: 3451, column: 25, scope: !5764)
!5878 = !DILocation(line: 3451, column: 34, scope: !5764)
!5879 = !DILocation(line: 3451, column: 33, scope: !5764)
!5880 = !DILocation(line: 3451, column: 32, scope: !5764)
!5881 = !DILocation(line: 3451, column: 45, scope: !5764)
!5882 = !DILocation(line: 3451, column: 42, scope: !5764)
!5883 = !DILocation(line: 3451, column: 31, scope: !5764)
!5884 = !DILocation(line: 3453, column: 26, scope: !5764)
!5885 = !DILocation(line: 3453, column: 67, scope: !5764)
!5886 = !DILocation(line: 3453, column: 64, scope: !5764)
!5887 = !DILocation(line: 3453, column: 25, scope: !5764)
!5888 = !DILocation(line: 3455, column: 45, scope: !5764)
!5889 = !DILocation(line: 3455, column: 44, scope: !5764)
!5890 = !DILocation(line: 3455, column: 43, scope: !5764)
!5891 = !DILocation(line: 3455, column: 54, scope: !5764)
!5892 = !DILocation(line: 3455, column: 25, scope: !5764)
!5893 = !DILocation(line: 3456, column: 25, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 3456, column: 25)
!5895 = !DILocation(line: 3456, column: 29, scope: !5894)
!5896 = !DILocation(line: 3456, column: 33, scope: !5894)
!5897 = !DILocation(line: 3456, column: 36, scope: !5894)
!5898 = !DILocation(line: 3456, column: 25, scope: !5764)
!5899 = !DILocation(line: 3456, column: 64, scope: !5894)
!5900 = !DILocation(line: 3457, column: 25, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 3457, column: 25)
!5902 = !DILocation(line: 3457, column: 29, scope: !5901)
!5903 = !DILocation(line: 3457, column: 25, scope: !5764)
!5904 = !DILocation(line: 3457, column: 35, scope: !5901)
!5905 = !DILocation(line: 3458, column: 28, scope: !5764)
!5906 = !DILocation(line: 3459, column: 17, scope: !5761)
!5907 = distinct !{!5907, !5872, !5906, !1801}
!5908 = !DILocation(line: 3460, column: 13, scope: !5762)
!5909 = !DILocation(line: 3461, column: 9, scope: !5757)
!5910 = !DILocation(line: 3462, column: 13, scope: !5758)
!5911 = !DILocation(line: 3463, column: 13, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 3463, column: 13)
!5913 = !DILocation(line: 3463, column: 13, scope: !5759)
!5914 = !DILocation(line: 3464, column: 17, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 3464, column: 17)
!5916 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 3463, column: 20)
!5917 = !DILocation(line: 3464, column: 17, scope: !5916)
!5918 = !DILocation(line: 3464, column: 62, scope: !5915)
!5919 = !DILocation(line: 3465, column: 9, scope: !5916)
!5920 = !DILocation(line: 3466, column: 13, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 3465, column: 16)
!5922 = !DILocation(line: 3469, column: 5, scope: !5739)
!5923 = !DILocation(line: 3470, column: 1, scope: !5739)
!5924 = !DILocation(line: 3471, column: 36, scope: !5739)
!5925 = !DILocation(line: 3471, column: 51, scope: !5739)
!5926 = !DILocation(line: 3471, column: 5, scope: !5739)
!5927 = !DILocation(line: 3472, column: 5, scope: !5739)
!5928 = !DILocation(line: 3473, column: 1, scope: !5739)
!5929 = !DILocation(line: 3474, column: 18, scope: !5739)
!5930 = !DILocation(line: 3475, column: 46, scope: !5739)
!5931 = !DILocation(line: 3474, column: 5, scope: !5739)
!5932 = !DILocation(line: 3476, column: 5, scope: !5739)
!5933 = !DILocation(line: 3477, column: 1, scope: !5739)
!5934 = !DILocation(line: 3478, column: 18, scope: !5739)
!5935 = !DILocation(line: 3484, column: 9, scope: !5739)
!5936 = !DILocation(line: 3484, column: 24, scope: !5739)
!5937 = !DILocation(line: 3478, column: 5, scope: !5739)
!5938 = !DILocation(line: 3486, column: 1, scope: !5739)
!5939 = !DILocation(line: 3487, column: 5, scope: !5739)
!5940 = !DILocation(line: 3488, column: 1, scope: !5739)
!5941 = distinct !DISubprogram(name: "__Pyx__ArgTypeTest", scope: !3, file: !3, line: 3491, type: !5942, scopeLine: 3492, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5944)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!54, !6, !20, !32, !54}
!5944 = !{!5945, !5946, !5947, !5948}
!5945 = !DILocalVariable(name: "obj", arg: 1, scope: !5941, file: !3, line: 3491, type: !6)
!5946 = !DILocalVariable(name: "type", arg: 2, scope: !5941, file: !3, line: 3491, type: !20)
!5947 = !DILocalVariable(name: "name", arg: 3, scope: !5941, file: !3, line: 3491, type: !32)
!5948 = !DILocalVariable(name: "exact", arg: 4, scope: !5941, file: !3, line: 3491, type: !54)
!5949 = !DILocation(line: 3491, column: 41, scope: !5941)
!5950 = !DILocation(line: 3491, column: 60, scope: !5941)
!5951 = !DILocation(line: 3491, column: 78, scope: !5941)
!5952 = !DILocation(line: 3491, column: 88, scope: !5941)
!5953 = !DILocation(line: 3493, column: 9, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 3493, column: 9)
!5955 = !DILocation(line: 3493, column: 9, scope: !5941)
!5956 = !DILocation(line: 3494, column: 25, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 3493, column: 26)
!5958 = !DILocation(line: 3494, column: 9, scope: !5957)
!5959 = !DILocation(line: 3495, column: 9, scope: !5957)
!5960 = !DILocation(line: 3497, column: 14, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 3497, column: 14)
!5962 = !DILocation(line: 3497, column: 14, scope: !5954)
!5963 = !DILocation(line: 3501, column: 5, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 3497, column: 21)
!5965 = !DILocation(line: 3503, column: 13, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 3503, column: 13)
!5967 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 3502, column: 10)
!5968 = !DILocation(line: 3503, column: 13, scope: !5967)
!5969 = !DILocation(line: 3503, column: 49, scope: !5966)
!5970 = !DILocation(line: 3505, column: 18, scope: !5941)
!5971 = !DILocation(line: 3507, column: 9, scope: !5941)
!5972 = !DILocation(line: 3507, column: 15, scope: !5941)
!5973 = !DILocation(line: 3507, column: 21, scope: !5941)
!5974 = !DILocation(line: 3507, column: 30, scope: !5941)
!5975 = !DILocation(line: 3507, column: 44, scope: !5941)
!5976 = !DILocation(line: 3505, column: 5, scope: !5941)
!5977 = !DILocation(line: 3508, column: 5, scope: !5941)
!5978 = !DILocation(line: 3509, column: 1, scope: !5941)
!5979 = distinct !DISubprogram(name: "__pyx_pf_6pandas_5_libs_8indexing_18NDFrameIndexerBase___init__", scope: !3, file: !3, line: 1540, type: !5980, scopeLine: 1540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5982)
!5980 = !DISubroutineType(types: !5981)
!5981 = !{!54, !306, !6, !6}
!5982 = !{!5983, !5984, !5985, !5986}
!5983 = !DILocalVariable(name: "__pyx_v_self", arg: 1, scope: !5979, file: !3, line: 1540, type: !306)
!5984 = !DILocalVariable(name: "__pyx_v_name", arg: 2, scope: !5979, file: !3, line: 1540, type: !6)
!5985 = !DILocalVariable(name: "__pyx_v_obj", arg: 3, scope: !5979, file: !3, line: 1540, type: !6)
!5986 = !DILocalVariable(name: "__pyx_r", scope: !5979, file: !3, line: 1541, type: !54)
!5987 = !DILocation(line: 1540, column: 138, scope: !5979)
!5988 = !DILocation(line: 1540, column: 162, scope: !5979)
!5989 = !DILocation(line: 1540, column: 186, scope: !5979)
!5990 = !DILocation(line: 1541, column: 3, scope: !5979)
!5991 = !DILocation(line: 1541, column: 7, scope: !5979)
!5992 = !DILocation(line: 1552, column: 3, scope: !5979)
!5993 = !DILocation(line: 1555, column: 3, scope: !5979)
!5994 = !DILocation(line: 1556, column: 23, scope: !5979)
!5995 = !DILocation(line: 1556, column: 3, scope: !5979)
!5996 = !DILocation(line: 1556, column: 17, scope: !5979)
!5997 = !DILocation(line: 1556, column: 21, scope: !5979)
!5998 = !DILocation(line: 1565, column: 3, scope: !5979)
!5999 = !DILocation(line: 1568, column: 3, scope: !5979)
!6000 = !DILocation(line: 1569, column: 24, scope: !5979)
!6001 = !DILocation(line: 1569, column: 3, scope: !5979)
!6002 = !DILocation(line: 1569, column: 17, scope: !5979)
!6003 = !DILocation(line: 1569, column: 22, scope: !5979)
!6004 = !DILocation(line: 1578, column: 3, scope: !5979)
!6005 = !DILocation(line: 1578, column: 17, scope: !5979)
!6006 = !DILocation(line: 1578, column: 23, scope: !5979)
!6007 = !DILocation(line: 1589, column: 11, scope: !5979)
!6008 = !DILocation(line: 1591, column: 10, scope: !5979)
!6009 = !DILocation(line: 1592, column: 1, scope: !5979)
!6010 = !DILocation(line: 1591, column: 3, scope: !5979)
!6011 = !DISubprogram(name: "PyUnicode_Compare", scope: !1868, file: !1868, line: 965, type: !149, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6012 = distinct !DISubprogram(name: "__Pyx_RaiseDoubleKeywordsError", scope: !3, file: !3, line: 3375, type: !6013, scopeLine: 3378, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6015)
!6013 = !DISubroutineType(types: !6014)
!6014 = !{null, !32, !6}
!6015 = !{!6016, !6017}
!6016 = !DILocalVariable(name: "func_name", arg: 1, scope: !6012, file: !3, line: 3376, type: !32)
!6017 = !DILocalVariable(name: "kw_name", arg: 2, scope: !6012, file: !3, line: 3377, type: !6)
!6018 = !DILocation(line: 3376, column: 17, scope: !6012)
!6019 = !DILocation(line: 3377, column: 15, scope: !6012)
!6020 = !DILocation(line: 3379, column: 18, scope: !6012)
!6021 = !DILocation(line: 3381, column: 63, scope: !6012)
!6022 = !DILocation(line: 3381, column: 74, scope: !6012)
!6023 = !DILocation(line: 3379, column: 5, scope: !6012)
!6024 = !DILocation(line: 3386, column: 1, scope: !6012)
!6025 = !DISubprogram(name: "_PyType_Lookup", scope: !23, file: !23, line: 301, type: !6026, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{!6, !20, !6}
!6028 = distinct !DISubprogram(name: "__Pyx_setup_reduce_is_named", scope: !3, file: !3, line: 4383, type: !149, scopeLine: 4383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6029)
!6029 = !{!6030, !6031, !6032, !6033}
!6030 = !DILocalVariable(name: "meth", arg: 1, scope: !6028, file: !3, line: 4383, type: !6)
!6031 = !DILocalVariable(name: "name", arg: 2, scope: !6028, file: !3, line: 4383, type: !6)
!6032 = !DILocalVariable(name: "ret", scope: !6028, file: !3, line: 4384, type: !54)
!6033 = !DILocalVariable(name: "name_attr", scope: !6028, file: !3, line: 4385, type: !6)
!6034 = !DILocation(line: 4383, column: 50, scope: !6028)
!6035 = !DILocation(line: 4383, column: 66, scope: !6028)
!6036 = !DILocation(line: 4384, column: 3, scope: !6028)
!6037 = !DILocation(line: 4384, column: 7, scope: !6028)
!6038 = !DILocation(line: 4385, column: 3, scope: !6028)
!6039 = !DILocation(line: 4385, column: 13, scope: !6028)
!6040 = !DILocation(line: 4386, column: 41, scope: !6028)
!6041 = !DILocation(line: 4386, column: 47, scope: !6028)
!6042 = !DILocation(line: 4386, column: 15, scope: !6028)
!6043 = !DILocation(line: 4386, column: 13, scope: !6028)
!6044 = !DILocation(line: 4387, column: 7, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 4387, column: 7)
!6046 = !DILocation(line: 4387, column: 7, scope: !6028)
!6047 = !DILocation(line: 4388, column: 38, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 4387, column: 26)
!6049 = !DILocation(line: 4388, column: 49, scope: !6048)
!6050 = !DILocation(line: 4388, column: 13, scope: !6048)
!6051 = !DILocation(line: 4388, column: 11, scope: !6048)
!6052 = !DILocation(line: 4389, column: 3, scope: !6048)
!6053 = !DILocation(line: 4390, column: 11, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 4389, column: 10)
!6055 = !DILocation(line: 4392, column: 7, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 4392, column: 7)
!6057 = !DILocation(line: 4392, column: 7, scope: !6028)
!6058 = !DILocation(line: 4393, column: 7, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 4392, column: 26)
!6060 = !DILocation(line: 4394, column: 11, scope: !6059)
!6061 = !DILocation(line: 4395, column: 3, scope: !6059)
!6062 = !DILocation(line: 4396, column: 3, scope: !6028)
!6063 = !DILocation(line: 4397, column: 10, scope: !6028)
!6064 = !DILocation(line: 4398, column: 1, scope: !6028)
!6065 = !DILocation(line: 4397, column: 3, scope: !6028)
!6066 = distinct !DISubprogram(name: "__Pyx_PyObject_GetAttrStrNoError", scope: !3, file: !3, line: 4367, type: !77, scopeLine: 4367, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6067)
!6067 = !{!6068, !6069, !6070, !6071}
!6068 = !DILocalVariable(name: "obj", arg: 1, scope: !6066, file: !3, line: 4367, type: !6)
!6069 = !DILocalVariable(name: "attr_name", arg: 2, scope: !6066, file: !3, line: 4367, type: !6)
!6070 = !DILocalVariable(name: "result", scope: !6066, file: !3, line: 4368, type: !6)
!6071 = !DILocalVariable(name: "tp", scope: !6066, file: !3, line: 4370, type: !20)
!6072 = !DILocation(line: 4367, column: 75, scope: !6066)
!6073 = !DILocation(line: 4367, column: 90, scope: !6066)
!6074 = !DILocation(line: 4368, column: 5, scope: !6066)
!6075 = !DILocation(line: 4368, column: 15, scope: !6066)
!6076 = !DILocation(line: 4370, column: 5, scope: !6066)
!6077 = !DILocation(line: 4370, column: 19, scope: !6066)
!6078 = !DILocation(line: 4370, column: 24, scope: !6066)
!6079 = !DILocation(line: 4371, column: 9, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 4371, column: 9)
!6081 = !DILocation(line: 4371, column: 9, scope: !6066)
!6082 = !DILocation(line: 4372, column: 49, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 4371, column: 61)
!6084 = !DILocation(line: 4372, column: 54, scope: !6083)
!6085 = !DILocation(line: 4372, column: 16, scope: !6083)
!6086 = !DILocation(line: 4372, column: 9, scope: !6083)
!6087 = !DILocation(line: 4375, column: 40, scope: !6066)
!6088 = !DILocation(line: 4375, column: 45, scope: !6066)
!6089 = !DILocation(line: 4375, column: 14, scope: !6066)
!6090 = !DILocation(line: 4375, column: 12, scope: !6066)
!6091 = !DILocation(line: 4376, column: 9, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 4376, column: 9)
!6093 = !DILocation(line: 4376, column: 9, scope: !6066)
!6094 = !DILocation(line: 4377, column: 9, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 4376, column: 28)
!6096 = !DILocation(line: 4378, column: 5, scope: !6095)
!6097 = !DILocation(line: 4379, column: 12, scope: !6066)
!6098 = !DILocation(line: 4379, column: 5, scope: !6066)
!6099 = !DILocation(line: 4380, column: 1, scope: !6066)
!6100 = !DISubprogram(name: "PyDict_DelItem", scope: !1730, file: !1730, line: 25, type: !149, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6101 = !DISubprogram(name: "PyType_Modified", scope: !8, file: !8, line: 238, type: !6102, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6102 = !DISubroutineType(types: !6103)
!6103 = !{null, !20}
!6104 = !DISubprogram(name: "PyObject_RichCompareBool", scope: !8, file: !8, line: 246, type: !6105, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{!54, !6, !6, !54}
!6107 = !DISubprogram(name: "_PyObject_GenericGetAttrWithDict", scope: !23, file: !23, line: 340, type: !6108, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6108 = !DISubroutineType(types: !6109)
!6109 = !{!6, !6, !6, !6, !54}
!6110 = distinct !DISubprogram(name: "__Pyx_PyObject_GetAttrStr_ClearAttributeError", scope: !3, file: !3, line: 4361, type: !1735, scopeLine: 4361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6111)
!6111 = !{!6112}
!6112 = !DILocalVariable(name: "__pyx_tstate", scope: !6110, file: !3, line: 4362, type: !1110)
!6113 = !DILocation(line: 4362, column: 5, scope: !6110)
!6114 = !DILocation(line: 4363, column: 5, scope: !6110)
!6115 = !DILocation(line: 4364, column: 9, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 4364, column: 9)
!6117 = !DILocation(line: 4364, column: 9, scope: !6110)
!6118 = !DILocation(line: 4365, column: 9, scope: !6116)
!6119 = !DILocation(line: 4366, column: 1, scope: !6110)
!6120 = !DILocation(line: 2264, column: 97, scope: !1048)
!6121 = !DILocation(line: 2264, column: 119, scope: !1048)
!6122 = !DILocation(line: 2264, column: 141, scope: !1048)
!6123 = !DILocation(line: 2265, column: 3, scope: !1048)
!6124 = !DILocation(line: 2265, column: 13, scope: !1048)
!6125 = !DILocation(line: 2266, column: 3, scope: !1048)
!6126 = !DILocation(line: 2266, column: 8, scope: !1048)
!6127 = !DILocation(line: 2267, column: 3, scope: !1048)
!6128 = !DILocation(line: 2267, column: 13, scope: !1048)
!6129 = !DILocation(line: 2268, column: 3, scope: !1048)
!6130 = !DILocation(line: 2268, column: 7, scope: !1048)
!6131 = !DILocation(line: 2269, column: 3, scope: !1048)
!6132 = !DILocation(line: 2269, column: 15, scope: !1048)
!6133 = !DILocation(line: 2270, column: 3, scope: !1048)
!6134 = !DILocation(line: 2270, column: 7, scope: !1048)
!6135 = !DILocation(line: 2271, column: 3, scope: !1048)
!6136 = !DILocation(line: 2271, column: 13, scope: !1048)
!6137 = !DILocation(line: 2276, column: 5, scope: !1061)
!6138 = !DILocation(line: 2276, column: 15, scope: !1061)
!6139 = !DILocation(line: 2277, column: 9, scope: !1065)
!6140 = !DILocation(line: 2277, column: 9, scope: !1061)
!6141 = !DILocation(line: 2278, column: 7, scope: !1064)
!6142 = !DILocation(line: 2278, column: 18, scope: !1064)
!6143 = !DILocation(line: 2279, column: 7, scope: !1064)
!6144 = !DILocation(line: 2279, column: 24, scope: !1064)
!6145 = !DILocation(line: 2279, column: 35, scope: !1064)
!6146 = !DILocation(line: 2280, column: 15, scope: !1064)
!6147 = !DILocation(line: 2280, column: 7, scope: !1064)
!6148 = !DILocation(line: 2281, column: 30, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !1064, file: !3, line: 2280, column: 25)
!6150 = !DILocation(line: 2281, column: 18, scope: !6149)
!6151 = !DILocation(line: 2281, column: 28, scope: !6149)
!6152 = !DILocation(line: 2283, column: 30, scope: !6149)
!6153 = !DILocation(line: 2283, column: 18, scope: !6149)
!6154 = !DILocation(line: 2283, column: 28, scope: !6149)
!6155 = !DILocation(line: 2285, column: 30, scope: !6149)
!6156 = !DILocation(line: 2285, column: 18, scope: !6149)
!6157 = !DILocation(line: 2285, column: 28, scope: !6149)
!6158 = !DILocation(line: 2288, column: 18, scope: !6149)
!6159 = !DILocation(line: 2290, column: 29, scope: !1064)
!6160 = !DILocation(line: 2290, column: 17, scope: !1064)
!6161 = !DILocation(line: 2290, column: 15, scope: !1064)
!6162 = !DILocation(line: 2291, column: 15, scope: !1064)
!6163 = !DILocation(line: 2291, column: 7, scope: !1064)
!6164 = !DILocation(line: 2293, column: 13, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 2293, column: 13)
!6166 = distinct !DILexicalBlock(scope: !1064, file: !3, line: 2291, column: 25)
!6167 = !DILocation(line: 2293, column: 13, scope: !6166)
!6168 = !DILocation(line: 2293, column: 104, scope: !6165)
!6169 = !DILocation(line: 2293, column: 97, scope: !6165)
!6170 = !DILocation(line: 2294, column: 14, scope: !6165)
!6171 = !DILocation(line: 2297, column: 13, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 2297, column: 13)
!6173 = !DILocation(line: 2297, column: 13, scope: !6166)
!6174 = !DILocation(line: 2297, column: 108, scope: !6172)
!6175 = !DILocation(line: 2297, column: 101, scope: !6172)
!6176 = !DILocation(line: 2299, column: 11, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6172, file: !3, line: 2298, column: 14)
!6178 = !DILocation(line: 2299, column: 88, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 2299, column: 88)
!6180 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 2299, column: 88)
!6181 = !DILocation(line: 2299, column: 88, scope: !6180)
!6182 = !DILocation(line: 2303, column: 13, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 2303, column: 13)
!6184 = !DILocation(line: 2303, column: 13, scope: !6166)
!6185 = !DILocation(line: 2303, column: 105, scope: !6183)
!6186 = !DILocation(line: 2303, column: 98, scope: !6183)
!6187 = !DILocation(line: 2305, column: 11, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 2304, column: 14)
!6189 = !DILocation(line: 2305, column: 88, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 2305, column: 88)
!6191 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 2305, column: 88)
!6192 = !DILocation(line: 2305, column: 88, scope: !6191)
!6193 = !DILocation(line: 2307, column: 7, scope: !6166)
!6194 = !DILocation(line: 2308, column: 11, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !1064, file: !3, line: 2308, column: 11)
!6196 = !DILocation(line: 2308, column: 11, scope: !1064)
!6197 = !DILocation(line: 2309, column: 13, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 2309, column: 13)
!6199 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 2308, column: 34)
!6200 = !DILocation(line: 2309, column: 13, scope: !6199)
!6201 = !DILocation(line: 2309, column: 144, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 2309, column: 144)
!6203 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 2309, column: 144)
!6204 = !DILocation(line: 2309, column: 144, scope: !6203)
!6205 = !DILocation(line: 2310, column: 7, scope: !6199)
!6206 = !DILocation(line: 2311, column: 5, scope: !1065)
!6207 = !DILocation(line: 2311, column: 5, scope: !1064)
!6208 = !DILocation(line: 2311, column: 16, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !1065, file: !3, line: 2311, column: 16)
!6210 = !DILocation(line: 2311, column: 45, scope: !6209)
!6211 = !DILocation(line: 2311, column: 16, scope: !1065)
!6212 = !DILocation(line: 2312, column: 7, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 2311, column: 51)
!6214 = !DILocation(line: 2314, column: 19, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 2313, column: 12)
!6216 = !DILocation(line: 2314, column: 7, scope: !6215)
!6217 = !DILocation(line: 2314, column: 17, scope: !6215)
!6218 = !DILocation(line: 2315, column: 19, scope: !6215)
!6219 = !DILocation(line: 2315, column: 7, scope: !6215)
!6220 = !DILocation(line: 2315, column: 17, scope: !6215)
!6221 = !DILocation(line: 2316, column: 19, scope: !6215)
!6222 = !DILocation(line: 2316, column: 7, scope: !6215)
!6223 = !DILocation(line: 2316, column: 17, scope: !6215)
!6224 = !DILocation(line: 2318, column: 26, scope: !1061)
!6225 = !DILocation(line: 2318, column: 24, scope: !1061)
!6226 = !DILocation(line: 2319, column: 50, scope: !1061)
!6227 = !DILocation(line: 2319, column: 30, scope: !1061)
!6228 = !DILocation(line: 2319, column: 28, scope: !1061)
!6229 = !DILocation(line: 2319, column: 66, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 2319, column: 66)
!6231 = !DILocation(line: 0, scope: !6230)
!6232 = !DILocation(line: 2319, column: 66, scope: !1061)
!6233 = !DILocation(line: 2319, column: 134, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6235, file: !3, line: 2319, column: 134)
!6235 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 2319, column: 134)
!6236 = !DILocation(line: 2319, column: 134, scope: !6235)
!6237 = !DILocation(line: 2320, column: 27, scope: !1061)
!6238 = !DILocation(line: 2320, column: 25, scope: !1061)
!6239 = !DILocation(line: 2321, column: 3, scope: !1048)
!6240 = !DILocation(line: 2322, column: 3, scope: !1048)
!6241 = !DILocation(line: 2323, column: 3, scope: !1048)
!6242 = !DILocation(line: 2324, column: 76, scope: !1048)
!6243 = !DILocation(line: 2324, column: 3, scope: !1048)
!6244 = !DILocation(line: 2324, column: 107, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 2324, column: 107)
!6246 = distinct !DILexicalBlock(scope: !1048, file: !3, line: 2324, column: 107)
!6247 = !DILocation(line: 2324, column: 107, scope: !6246)
!6248 = !DILocation(line: 2325, column: 3, scope: !1048)
!6249 = !DILocation(line: 2326, column: 81, scope: !1048)
!6250 = !DILocation(line: 2326, column: 96, scope: !1048)
!6251 = !DILocation(line: 2326, column: 110, scope: !1048)
!6252 = !DILocation(line: 2326, column: 3, scope: !1048)
!6253 = !DILocation(line: 2328, column: 3, scope: !1048)
!6254 = !DILocation(line: 2329, column: 3, scope: !1048)
!6255 = !DILocation(line: 2330, column: 81, scope: !1048)
!6256 = !DILocation(line: 2330, column: 93, scope: !1048)
!6257 = !DILocation(line: 2330, column: 113, scope: !1048)
!6258 = !DILocation(line: 2330, column: 137, scope: !1048)
!6259 = !DILocation(line: 2330, column: 13, scope: !1048)
!6260 = !DILocation(line: 2330, column: 11, scope: !1048)
!6261 = !DILocation(line: 2334, column: 10, scope: !1048)
!6262 = !DILocation(line: 2334, column: 3, scope: !1048)
!6263 = !DILocation(line: 2335, column: 1, scope: !1048)
!6264 = distinct !DISubprogram(name: "__Pyx_PyInt_As_long", scope: !3, file: !3, line: 4738, type: !6265, scopeLine: 4738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6267)
!6265 = !DISubroutineType(types: !6266)
!6266 = !{!18, !6}
!6267 = !{!6268, !6269, !6270, !6271, !6273, !6278, !6281, !6283, !6289, !6295, !6299, !6301, !6302, !6303}
!6268 = !DILocalVariable(name: "x", arg: 1, scope: !6264, file: !3, line: 4738, type: !6)
!6269 = !DILocalVariable(name: "neg_one", scope: !6264, file: !3, line: 4743, type: !5037)
!6270 = !DILocalVariable(name: "const_zero", scope: !6264, file: !3, line: 4743, type: !5037)
!6271 = !DILocalVariable(name: "is_unsigned", scope: !6264, file: !3, line: 4747, type: !6272)
!6272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !54)
!6273 = !DILocalVariable(name: "digits", scope: !6274, file: !3, line: 4819, type: !4058)
!6274 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 4817, column: 16)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 4762, column: 13)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 4761, column: 34)
!6277 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 4761, column: 9)
!6278 = !DILocalVariable(name: "value", scope: !6279, file: !3, line: 4822, type: !468)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 4822, column: 26)
!6280 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 4820, column: 33)
!6281 = !DILocalVariable(name: "value", scope: !6282, file: !3, line: 4823, type: !381)
!6282 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 4823, column: 26)
!6283 = !DILocalVariable(name: "value", scope: !6284, file: !3, line: 4827, type: !18)
!6284 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 4827, column: 29)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 4826, column: 75)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 4826, column: 29)
!6287 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 4825, column: 66)
!6288 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 4825, column: 25)
!6289 = !DILocalVariable(name: "value", scope: !6290, file: !3, line: 4836, type: !209)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 4836, column: 29)
!6291 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 4835, column: 75)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 4835, column: 29)
!6293 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 4834, column: 62)
!6294 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 4834, column: 25)
!6295 = !DILocalVariable(name: "value", scope: !6296, file: !3, line: 4881, type: !18)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 4881, column: 17)
!6297 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 4880, column: 47)
!6298 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 4880, column: 17)
!6299 = !DILocalVariable(name: "val", scope: !6300, file: !3, line: 4916, type: !18)
!6300 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 4915, column: 12)
!6301 = !DILocalVariable(name: "tmp", scope: !6300, file: !3, line: 4917, type: !6)
!6302 = !DILabel(scope: !6264, name: "raise_overflow", file: !3, line: 4923)
!6303 = !DILabel(scope: !6264, name: "raise_neg_overflow", file: !3, line: 4927)
!6304 = !DILocation(line: 4738, column: 57, scope: !6264)
!6305 = !DILocation(line: 4743, column: 5, scope: !6264)
!6306 = !DILocation(line: 4743, column: 16, scope: !6264)
!6307 = !DILocation(line: 4743, column: 37, scope: !6264)
!6308 = !DILocation(line: 4747, column: 5, scope: !6264)
!6309 = !DILocation(line: 4747, column: 15, scope: !6264)
!6310 = !DILocation(line: 4761, column: 9, scope: !6277)
!6311 = !DILocation(line: 4761, column: 9, scope: !6264)
!6312 = !DILocation(line: 4819, column: 13, scope: !6274)
!6313 = !DILocation(line: 4819, column: 26, scope: !6274)
!6314 = !DILocation(line: 4819, column: 51, scope: !6274)
!6315 = !DILocation(line: 4819, column: 55, scope: !6274)
!6316 = !DILocation(line: 4819, column: 35, scope: !6274)
!6317 = !DILocation(line: 4820, column: 21, scope: !6274)
!6318 = !DILocation(line: 4820, column: 13, scope: !6274)
!6319 = !DILocation(line: 4821, column: 26, scope: !6280)
!6320 = !DILocation(line: 4822, column: 26, scope: !6279)
!6321 = !DILocation(line: 4822, column: 26, scope: !6280)
!6322 = !DILocation(line: 4823, column: 26, scope: !6282)
!6323 = !DILocation(line: 4823, column: 26, scope: !6280)
!6324 = !DILocation(line: 4827, column: 29, scope: !6284)
!6325 = !DILocation(line: 4827, column: 29, scope: !6285)
!6326 = !DILocation(line: 4836, column: 29, scope: !6290)
!6327 = !DILocation(line: 4836, column: 29, scope: !6291)
!6328 = !DILocation(line: 4850, column: 21, scope: !6280)
!6329 = !DILocation(line: 4859, column: 21, scope: !6280)
!6330 = !DILocation(line: 4868, column: 21, scope: !6280)
!6331 = !DILocation(line: 4877, column: 21, scope: !6280)
!6332 = !DILocation(line: 4881, column: 17, scope: !6296)
!6333 = !DILocation(line: 4881, column: 17, scope: !6297)
!6334 = !DILocation(line: 4887, column: 9, scope: !6275)
!6335 = !DILocation(line: 4916, column: 9, scope: !6300)
!6336 = !DILocation(line: 4916, column: 14, scope: !6300)
!6337 = !DILocation(line: 4917, column: 9, scope: !6300)
!6338 = !DILocation(line: 4917, column: 19, scope: !6300)
!6339 = !DILocation(line: 4917, column: 50, scope: !6300)
!6340 = !DILocation(line: 4917, column: 25, scope: !6300)
!6341 = !DILocation(line: 4918, column: 14, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 4918, column: 13)
!6343 = !DILocation(line: 4918, column: 13, scope: !6300)
!6344 = !DILocation(line: 4918, column: 19, scope: !6342)
!6345 = !DILocation(line: 4919, column: 35, scope: !6300)
!6346 = !DILocation(line: 4919, column: 15, scope: !6300)
!6347 = !DILocation(line: 4919, column: 13, scope: !6300)
!6348 = !DILocation(line: 4920, column: 9, scope: !6300)
!6349 = !DILocation(line: 4921, column: 16, scope: !6300)
!6350 = !DILocation(line: 4921, column: 9, scope: !6300)
!6351 = !DILocation(line: 4922, column: 5, scope: !6277)
!6352 = !DILocation(line: 4923, column: 1, scope: !6264)
!6353 = !DILocation(line: 4924, column: 21, scope: !6264)
!6354 = !DILocation(line: 4924, column: 5, scope: !6264)
!6355 = !DILocation(line: 4926, column: 5, scope: !6264)
!6356 = !DILocation(line: 4927, column: 1, scope: !6264)
!6357 = !DILocation(line: 4928, column: 21, scope: !6264)
!6358 = !DILocation(line: 4928, column: 5, scope: !6264)
!6359 = !DILocation(line: 4930, column: 5, scope: !6264)
!6360 = !DILocation(line: 4931, column: 1, scope: !6264)
!6361 = distinct !DISubprogram(name: "__pyx_pf_6pandas_5_libs_8indexing___pyx_unpickle_NDFrameIndexerBase", scope: !3, file: !3, line: 2337, type: !6362, scopeLine: 2337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6364)
!6362 = !DISubroutineType(types: !6363)
!6363 = !{!6, !6, !6, !18, !6}
!6364 = !{!6365, !6366, !6367, !6368, !6369, !6370, !6371, !6372, !6373, !6374, !6375, !6376, !6377, !6378, !6379, !6380, !6381, !6388, !6390, !6395, !6397, !6398}
!6365 = !DILocalVariable(name: "__pyx_self", arg: 1, scope: !6361, file: !3, line: 2337, type: !6)
!6366 = !DILocalVariable(name: "__pyx_v___pyx_type", arg: 2, scope: !6361, file: !3, line: 2337, type: !6)
!6367 = !DILocalVariable(name: "__pyx_v___pyx_checksum", arg: 3, scope: !6361, file: !3, line: 2337, type: !18)
!6368 = !DILocalVariable(name: "__pyx_v___pyx_state", arg: 4, scope: !6361, file: !3, line: 2337, type: !6)
!6369 = !DILocalVariable(name: "__pyx_v___pyx_PickleError", scope: !6361, file: !3, line: 2338, type: !6)
!6370 = !DILocalVariable(name: "__pyx_v___pyx_result", scope: !6361, file: !3, line: 2339, type: !6)
!6371 = !DILocalVariable(name: "__pyx_r", scope: !6361, file: !3, line: 2340, type: !6)
!6372 = !DILocalVariable(name: "__pyx_t_1", scope: !6361, file: !3, line: 2342, type: !6)
!6373 = !DILocalVariable(name: "__pyx_t_2", scope: !6361, file: !3, line: 2343, type: !54)
!6374 = !DILocalVariable(name: "__pyx_t_3", scope: !6361, file: !3, line: 2344, type: !54)
!6375 = !DILocalVariable(name: "__pyx_t_4", scope: !6361, file: !3, line: 2345, type: !6)
!6376 = !DILocalVariable(name: "__pyx_t_5", scope: !6361, file: !3, line: 2346, type: !6)
!6377 = !DILocalVariable(name: "__pyx_t_6", scope: !6361, file: !3, line: 2347, type: !6)
!6378 = !DILocalVariable(name: "__pyx_lineno", scope: !6361, file: !3, line: 2348, type: !54)
!6379 = !DILocalVariable(name: "__pyx_filename", scope: !6361, file: !3, line: 2349, type: !32)
!6380 = !DILocalVariable(name: "__pyx_clineno", scope: !6361, file: !3, line: 2350, type: !54)
!6381 = !DILocalVariable(name: "function", scope: !6382, file: !3, line: 2406, type: !6)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 2405, column: 30)
!6383 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 2405, column: 11)
!6384 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 2403, column: 71)
!6385 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2403, column: 9)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 2365, column: 18)
!6387 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 2365, column: 7)
!6388 = !DILocalVariable(name: "tmp", scope: !6389, file: !3, line: 2409, type: !6)
!6389 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 2409, column: 9)
!6390 = !DILocalVariable(name: "function", scope: !6391, file: !3, line: 2444, type: !6)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2443, column: 28)
!6392 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 2443, column: 9)
!6393 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 2441, column: 67)
!6394 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 2441, column: 7)
!6395 = !DILocalVariable(name: "tmp", scope: !6396, file: !3, line: 2447, type: !6)
!6396 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2447, column: 7)
!6397 = !DILabel(scope: !6361, name: "__pyx_L1_error", file: !3, line: 2509)
!6398 = !DILabel(scope: !6361, name: "__pyx_L0", file: !3, line: 2516)
!6399 = !DILocation(line: 2337, column: 110, scope: !6361)
!6400 = !DILocation(line: 2337, column: 132, scope: !6361)
!6401 = !DILocation(line: 2337, column: 157, scope: !6361)
!6402 = !DILocation(line: 2337, column: 191, scope: !6361)
!6403 = !DILocation(line: 2338, column: 3, scope: !6361)
!6404 = !DILocation(line: 2338, column: 13, scope: !6361)
!6405 = !DILocation(line: 2339, column: 3, scope: !6361)
!6406 = !DILocation(line: 2339, column: 13, scope: !6361)
!6407 = !DILocation(line: 2340, column: 3, scope: !6361)
!6408 = !DILocation(line: 2340, column: 13, scope: !6361)
!6409 = !DILocation(line: 2342, column: 3, scope: !6361)
!6410 = !DILocation(line: 2342, column: 13, scope: !6361)
!6411 = !DILocation(line: 2343, column: 3, scope: !6361)
!6412 = !DILocation(line: 2343, column: 7, scope: !6361)
!6413 = !DILocation(line: 2344, column: 3, scope: !6361)
!6414 = !DILocation(line: 2344, column: 7, scope: !6361)
!6415 = !DILocation(line: 2345, column: 3, scope: !6361)
!6416 = !DILocation(line: 2345, column: 13, scope: !6361)
!6417 = !DILocation(line: 2346, column: 3, scope: !6361)
!6418 = !DILocation(line: 2346, column: 13, scope: !6361)
!6419 = !DILocation(line: 2347, column: 3, scope: !6361)
!6420 = !DILocation(line: 2347, column: 13, scope: !6361)
!6421 = !DILocation(line: 2348, column: 3, scope: !6361)
!6422 = !DILocation(line: 2348, column: 7, scope: !6361)
!6423 = !DILocation(line: 2349, column: 3, scope: !6361)
!6424 = !DILocation(line: 2349, column: 15, scope: !6361)
!6425 = !DILocation(line: 2350, column: 3, scope: !6361)
!6426 = !DILocation(line: 2350, column: 7, scope: !6361)
!6427 = !DILocation(line: 2360, column: 37, scope: !6361)
!6428 = !DILocation(line: 2360, column: 15, scope: !6361)
!6429 = !DILocation(line: 2360, column: 13, scope: !6361)
!6430 = !DILocation(line: 2360, column: 66, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 2360, column: 66)
!6432 = !DILocation(line: 2360, column: 66, scope: !6361)
!6433 = !DILocation(line: 2360, column: 88, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 2360, column: 88)
!6435 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 2360, column: 88)
!6436 = !DILocation(line: 2360, column: 88, scope: !6435)
!6437 = !DILocation(line: 2362, column: 44, scope: !6361)
!6438 = !DILocation(line: 2362, column: 55, scope: !6361)
!6439 = !DILocation(line: 2362, column: 16, scope: !6361)
!6440 = !DILocation(line: 2362, column: 13, scope: !6361)
!6441 = !DILocation(line: 2362, column: 84, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 2362, column: 84)
!6443 = !DILocation(line: 2362, column: 84, scope: !6361)
!6444 = !DILocation(line: 2362, column: 109, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 2362, column: 109)
!6446 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 2362, column: 109)
!6447 = !DILocation(line: 2362, column: 109, scope: !6446)
!6448 = !DILocation(line: 2363, column: 3, scope: !6361)
!6449 = !DILocation(line: 2363, column: 38, scope: !6361)
!6450 = !DILocation(line: 2364, column: 16, scope: !6361)
!6451 = !DILocation(line: 2364, column: 26, scope: !6361)
!6452 = !DILocation(line: 2364, column: 13, scope: !6361)
!6453 = !DILocation(line: 2365, column: 7, scope: !6387)
!6454 = !DILocation(line: 2365, column: 7, scope: !6361)
!6455 = !DILocation(line: 2374, column: 17, scope: !6386)
!6456 = !DILocation(line: 2374, column: 15, scope: !6386)
!6457 = !DILocation(line: 2374, column: 36, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2374, column: 36)
!6459 = !DILocation(line: 2374, column: 36, scope: !6386)
!6460 = !DILocation(line: 2374, column: 58, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 2374, column: 58)
!6462 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 2374, column: 58)
!6463 = !DILocation(line: 2374, column: 58, scope: !6462)
!6464 = !DILocation(line: 2376, column: 5, scope: !6386)
!6465 = !DILocation(line: 2378, column: 5, scope: !6386)
!6466 = !{!6467, !1253, i64 24}
!6467 = !{!"", !1365, i64 0, !1253, i64 24, !1367, i64 32}
!6468 = !DILocation(line: 2379, column: 30, scope: !6386)
!6469 = !DILocation(line: 2379, column: 48, scope: !6386)
!6470 = !DILocation(line: 2379, column: 17, scope: !6386)
!6471 = !DILocation(line: 2379, column: 15, scope: !6386)
!6472 = !DILocation(line: 2379, column: 67, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2379, column: 67)
!6474 = !DILocation(line: 2379, column: 67, scope: !6386)
!6475 = !DILocation(line: 2379, column: 89, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 2379, column: 89)
!6477 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 2379, column: 89)
!6478 = !DILocation(line: 2379, column: 89, scope: !6477)
!6479 = !DILocation(line: 2381, column: 5, scope: !6386)
!6480 = !DILocation(line: 2381, column: 40, scope: !6386)
!6481 = !DILocation(line: 2382, column: 34, scope: !6386)
!6482 = !DILocation(line: 2382, column: 45, scope: !6386)
!6483 = !DILocation(line: 2382, column: 17, scope: !6386)
!6484 = !DILocation(line: 2382, column: 15, scope: !6386)
!6485 = !DILocation(line: 2382, column: 73, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2382, column: 73)
!6487 = !DILocation(line: 2382, column: 73, scope: !6386)
!6488 = !DILocation(line: 2382, column: 95, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 2382, column: 95)
!6490 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 2382, column: 95)
!6491 = !DILocation(line: 2382, column: 95, scope: !6490)
!6492 = !DILocation(line: 2384, column: 5, scope: !6386)
!6493 = !DILocation(line: 2385, column: 33, scope: !6386)
!6494 = !DILocation(line: 2385, column: 31, scope: !6386)
!6495 = !DILocation(line: 2386, column: 5, scope: !6386)
!6496 = !DILocation(line: 2386, column: 40, scope: !6386)
!6497 = !DILocation(line: 2387, column: 5, scope: !6386)
!6498 = !DILocation(line: 2387, column: 40, scope: !6386)
!6499 = !DILocation(line: 2396, column: 39, scope: !6386)
!6500 = !DILocation(line: 2396, column: 17, scope: !6386)
!6501 = !DILocation(line: 2396, column: 15, scope: !6386)
!6502 = !DILocation(line: 2396, column: 68, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2396, column: 68)
!6504 = !DILocation(line: 2396, column: 68, scope: !6386)
!6505 = !DILocation(line: 2396, column: 90, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 2396, column: 90)
!6507 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 2396, column: 90)
!6508 = !DILocation(line: 2396, column: 90, scope: !6507)
!6509 = !DILocation(line: 2398, column: 17, scope: !6386)
!6510 = !DILocation(line: 2398, column: 15, scope: !6386)
!6511 = !DILocation(line: 2398, column: 100, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2398, column: 100)
!6513 = !DILocation(line: 2398, column: 100, scope: !6386)
!6514 = !DILocation(line: 2398, column: 122, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 2398, column: 122)
!6516 = distinct !DILexicalBlock(scope: !6512, file: !3, line: 2398, column: 122)
!6517 = !DILocation(line: 2398, column: 122, scope: !6516)
!6518 = !DILocation(line: 2400, column: 5, scope: !6386)
!6519 = !DILocation(line: 2400, column: 40, scope: !6386)
!6520 = !DILocation(line: 2401, column: 5, scope: !6386)
!6521 = !DILocation(line: 2402, column: 17, scope: !6386)
!6522 = !DILocation(line: 2402, column: 15, scope: !6386)
!6523 = !DILocation(line: 2402, column: 54, scope: !6386)
!6524 = !DILocation(line: 2403, column: 34, scope: !6385)
!6525 = !DILocation(line: 2403, column: 9, scope: !6386)
!6526 = !DILocation(line: 2404, column: 19, scope: !6384)
!6527 = !DILocation(line: 2404, column: 17, scope: !6384)
!6528 = !DILocation(line: 2405, column: 11, scope: !6383)
!6529 = !DILocation(line: 2405, column: 11, scope: !6384)
!6530 = !DILocation(line: 2406, column: 9, scope: !6382)
!6531 = !DILocation(line: 2406, column: 19, scope: !6382)
!6532 = !DILocation(line: 2406, column: 30, scope: !6382)
!6533 = !DILocation(line: 2407, column: 9, scope: !6382)
!6534 = !DILocation(line: 2408, column: 9, scope: !6382)
!6535 = !DILocation(line: 2409, column: 9, scope: !6382)
!6536 = !DILocation(line: 2409, column: 9, scope: !6389)
!6537 = !DILocation(line: 2410, column: 7, scope: !6383)
!6538 = !DILocation(line: 2410, column: 7, scope: !6382)
!6539 = !DILocation(line: 2411, column: 5, scope: !6384)
!6540 = !DILocation(line: 2412, column: 18, scope: !6386)
!6541 = !DILocation(line: 2412, column: 17, scope: !6386)
!6542 = !DILocation(line: 2412, column: 56, scope: !6386)
!6543 = !DILocation(line: 2412, column: 67, scope: !6386)
!6544 = !DILocation(line: 2412, column: 78, scope: !6386)
!6545 = !DILocation(line: 2412, column: 31, scope: !6386)
!6546 = !DILocation(line: 2412, column: 117, scope: !6386)
!6547 = !DILocation(line: 2412, column: 128, scope: !6386)
!6548 = !DILocation(line: 2412, column: 91, scope: !6386)
!6549 = !DILocation(line: 2412, column: 15, scope: !6386)
!6550 = !DILocation(line: 2413, column: 5, scope: !6386)
!6551 = !DILocation(line: 2413, column: 41, scope: !6386)
!6552 = !DILocation(line: 2414, column: 5, scope: !6386)
!6553 = !DILocation(line: 2414, column: 40, scope: !6386)
!6554 = !DILocation(line: 2415, column: 9, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2415, column: 9)
!6556 = !DILocation(line: 2415, column: 9, scope: !6386)
!6557 = !DILocation(line: 2415, column: 31, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 2415, column: 31)
!6559 = distinct !DILexicalBlock(scope: !6555, file: !3, line: 2415, column: 31)
!6560 = !DILocation(line: 2415, column: 31, scope: !6559)
!6561 = !DILocation(line: 2417, column: 5, scope: !6386)
!6562 = !DILocation(line: 2417, column: 40, scope: !6386)
!6563 = !DILocation(line: 2418, column: 17, scope: !6386)
!6564 = !DILocation(line: 2418, column: 5, scope: !6386)
!6565 = !DILocation(line: 2419, column: 5, scope: !6386)
!6566 = !DILocation(line: 2419, column: 40, scope: !6386)
!6567 = !DILocation(line: 2420, column: 5, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 2420, column: 5)
!6569 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 2420, column: 5)
!6570 = !DILocation(line: 2420, column: 5, scope: !6569)
!6571 = !DILocation(line: 2438, column: 54, scope: !6361)
!6572 = !DILocation(line: 2438, column: 112, scope: !6361)
!6573 = !DILocation(line: 2438, column: 15, scope: !6361)
!6574 = !DILocation(line: 2438, column: 13, scope: !6361)
!6575 = !DILocation(line: 2438, column: 132, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 2438, column: 132)
!6577 = !DILocation(line: 2438, column: 132, scope: !6361)
!6578 = !DILocation(line: 2438, column: 154, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 2438, column: 154)
!6580 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 2438, column: 154)
!6581 = !DILocation(line: 2438, column: 154, scope: !6580)
!6582 = !DILocation(line: 2440, column: 13, scope: !6361)
!6583 = !DILocation(line: 2441, column: 32, scope: !6394)
!6584 = !DILocation(line: 2441, column: 7, scope: !6361)
!6585 = !DILocation(line: 2442, column: 17, scope: !6393)
!6586 = !DILocation(line: 2442, column: 15, scope: !6393)
!6587 = !DILocation(line: 2443, column: 9, scope: !6392)
!6588 = !DILocation(line: 2443, column: 9, scope: !6393)
!6589 = !DILocation(line: 2444, column: 7, scope: !6391)
!6590 = !DILocation(line: 2444, column: 17, scope: !6391)
!6591 = !DILocation(line: 2444, column: 28, scope: !6391)
!6592 = !DILocation(line: 2445, column: 7, scope: !6391)
!6593 = !DILocation(line: 2446, column: 7, scope: !6391)
!6594 = !DILocation(line: 2447, column: 7, scope: !6391)
!6595 = !DILocation(line: 2447, column: 7, scope: !6396)
!6596 = !DILocation(line: 2448, column: 5, scope: !6392)
!6597 = !DILocation(line: 2448, column: 5, scope: !6391)
!6598 = !DILocation(line: 2449, column: 3, scope: !6393)
!6599 = !DILocation(line: 2450, column: 16, scope: !6361)
!6600 = !DILocation(line: 2450, column: 15, scope: !6361)
!6601 = !DILocation(line: 2450, column: 54, scope: !6361)
!6602 = !DILocation(line: 2450, column: 65, scope: !6361)
!6603 = !DILocation(line: 2450, column: 76, scope: !6361)
!6604 = !DILocation(line: 2450, column: 29, scope: !6361)
!6605 = !DILocation(line: 2450, column: 124, scope: !6361)
!6606 = !DILocation(line: 2450, column: 135, scope: !6361)
!6607 = !DILocation(line: 2450, column: 98, scope: !6361)
!6608 = !DILocation(line: 2450, column: 13, scope: !6361)
!6609 = !DILocation(line: 2451, column: 3, scope: !6361)
!6610 = !DILocation(line: 2451, column: 39, scope: !6361)
!6611 = !DILocation(line: 2452, column: 7, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 2452, column: 7)
!6613 = !DILocation(line: 2452, column: 7, scope: !6361)
!6614 = !DILocation(line: 2452, column: 29, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 2452, column: 29)
!6616 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 2452, column: 29)
!6617 = !DILocation(line: 2452, column: 29, scope: !6616)
!6618 = !DILocation(line: 2454, column: 3, scope: !6361)
!6619 = !DILocation(line: 2454, column: 38, scope: !6361)
!6620 = !DILocation(line: 2455, column: 26, scope: !6361)
!6621 = !DILocation(line: 2455, column: 24, scope: !6361)
!6622 = !DILocation(line: 2456, column: 13, scope: !6361)
!6623 = !DILocation(line: 2465, column: 16, scope: !6361)
!6624 = !DILocation(line: 2465, column: 36, scope: !6361)
!6625 = !DILocation(line: 2465, column: 13, scope: !6361)
!6626 = !DILocation(line: 2466, column: 16, scope: !6361)
!6627 = !DILocation(line: 2466, column: 26, scope: !6361)
!6628 = !DILocation(line: 2466, column: 13, scope: !6361)
!6629 = !DILocation(line: 2467, column: 7, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 2467, column: 7)
!6631 = !DILocation(line: 2467, column: 7, scope: !6361)
!6632 = !DILocation(line: 2476, column: 11, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2476, column: 9)
!6634 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 2467, column: 18)
!6635 = !DILocation(line: 2476, column: 58, scope: !6633)
!6636 = !DILocation(line: 2476, column: 62, scope: !6633)
!6637 = !DILocation(line: 2476, column: 83, scope: !6633)
!6638 = !DILocation(line: 2476, column: 94, scope: !6633)
!6639 = !DILocation(line: 2476, column: 116, scope: !6633)
!6640 = !DILocation(line: 2476, column: 172, scope: !6633)
!6641 = !DILocation(line: 2476, column: 202, scope: !6633)
!6642 = !DILocation(line: 2476, column: 103, scope: !6633)
!6643 = !DILocation(line: 2476, column: 9, scope: !6634)
!6644 = !DILocation(line: 2476, column: 217, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 2476, column: 217)
!6646 = distinct !DILexicalBlock(scope: !6633, file: !3, line: 2476, column: 217)
!6647 = !DILocation(line: 2476, column: 217, scope: !6646)
!6648 = !DILocation(line: 2477, column: 160, scope: !6634)
!6649 = !DILocation(line: 2477, column: 195, scope: !6634)
!6650 = !DILocation(line: 2477, column: 17, scope: !6634)
!6651 = !DILocation(line: 2477, column: 15, scope: !6634)
!6652 = !DILocation(line: 2477, column: 222, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 2477, column: 222)
!6654 = !DILocation(line: 2477, column: 222, scope: !6634)
!6655 = !DILocation(line: 2477, column: 244, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 2477, column: 244)
!6657 = distinct !DILexicalBlock(scope: !6653, file: !3, line: 2477, column: 244)
!6658 = !DILocation(line: 2477, column: 244, scope: !6657)
!6659 = !DILocation(line: 2479, column: 5, scope: !6634)
!6660 = !DILocation(line: 2479, column: 40, scope: !6634)
!6661 = !DILocation(line: 2488, column: 3, scope: !6634)
!6662 = !DILocation(line: 2497, column: 3, scope: !6361)
!6663 = !DILocation(line: 2498, column: 3, scope: !6361)
!6664 = !DILocation(line: 2499, column: 13, scope: !6361)
!6665 = !DILocation(line: 2499, column: 11, scope: !6361)
!6666 = !DILocation(line: 2500, column: 3, scope: !6361)
!6667 = !DILocation(line: 2509, column: 3, scope: !6361)
!6668 = !DILocation(line: 2510, column: 3, scope: !6361)
!6669 = !DILocation(line: 2511, column: 3, scope: !6361)
!6670 = !DILocation(line: 2512, column: 3, scope: !6361)
!6671 = !DILocation(line: 2513, column: 3, scope: !6361)
!6672 = !DILocation(line: 2514, column: 81, scope: !6361)
!6673 = !DILocation(line: 2514, column: 96, scope: !6361)
!6674 = !DILocation(line: 2514, column: 110, scope: !6361)
!6675 = !DILocation(line: 2514, column: 3, scope: !6361)
!6676 = !DILocation(line: 2515, column: 11, scope: !6361)
!6677 = !DILocation(line: 2515, column: 3, scope: !6361)
!6678 = !DILocation(line: 2516, column: 3, scope: !6361)
!6679 = !DILocation(line: 2517, column: 3, scope: !6361)
!6680 = !DILocation(line: 2518, column: 3, scope: !6361)
!6681 = !DILocation(line: 2521, column: 10, scope: !6361)
!6682 = !DILocation(line: 2522, column: 1, scope: !6361)
!6683 = !DILocation(line: 2521, column: 3, scope: !6361)
!6684 = !DISubprogram(name: "PyLong_AsLong", scope: !374, file: !374, line: 23, type: !6265, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6685 = distinct !DISubprogram(name: "__Pyx_PyNumber_IntOrLong", scope: !3, file: !3, line: 5442, type: !63, scopeLine: 5442, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6686)
!6686 = !{!6687, !6688, !6689, !6690}
!6687 = !DILocalVariable(name: "x", arg: 1, scope: !6685, file: !3, line: 5442, type: !6)
!6688 = !DILocalVariable(name: "m", scope: !6685, file: !3, line: 5444, type: !70)
!6689 = !DILocalVariable(name: "name", scope: !6685, file: !3, line: 5446, type: !32)
!6690 = !DILocalVariable(name: "res", scope: !6685, file: !3, line: 5447, type: !6)
!6691 = !DILocation(line: 5442, column: 67, scope: !6685)
!6692 = !DILocation(line: 5444, column: 3, scope: !6685)
!6693 = !DILocation(line: 5444, column: 20, scope: !6685)
!6694 = !DILocation(line: 5446, column: 3, scope: !6685)
!6695 = !DILocation(line: 5446, column: 15, scope: !6685)
!6696 = !DILocation(line: 5447, column: 3, scope: !6685)
!6697 = !DILocation(line: 5447, column: 13, scope: !6685)
!6698 = !DILocation(line: 5451, column: 7, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 5451, column: 7)
!6700 = !DILocation(line: 5451, column: 7, scope: !6685)
!6701 = !DILocation(line: 5453, column: 12, scope: !6699)
!6702 = !DILocation(line: 5453, column: 5, scope: !6699)
!6703 = !DILocation(line: 5455, column: 7, scope: !6685)
!6704 = !DILocation(line: 5455, column: 19, scope: !6685)
!6705 = !{!1364, !1253, i64 96}
!6706 = !DILocation(line: 5455, column: 5, scope: !6685)
!6707 = !DILocation(line: 5466, column: 7, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 5466, column: 7)
!6709 = !{!6710, !1253, i64 128}
!6710 = !{!"", !1253, i64 0, !1253, i64 8, !1253, i64 16, !1253, i64 24, !1253, i64 32, !1253, i64 40, !1253, i64 48, !1253, i64 56, !1253, i64 64, !1253, i64 72, !1253, i64 80, !1253, i64 88, !1253, i64 96, !1253, i64 104, !1253, i64 112, !1253, i64 120, !1253, i64 128, !1253, i64 136, !1253, i64 144, !1253, i64 152, !1253, i64 160, !1253, i64 168, !1253, i64 176, !1253, i64 184, !1253, i64 192, !1253, i64 200, !1253, i64 208, !1253, i64 216, !1253, i64 224, !1253, i64 232, !1253, i64 240, !1253, i64 248, !1253, i64 256, !1253, i64 264, !1253, i64 272, !1253, i64 280}
!6711 = !DILocation(line: 0, scope: !6708)
!6712 = !DILocation(line: 5466, column: 7, scope: !6685)
!6713 = !DILocation(line: 5467, column: 10, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 5466, column: 31)
!6715 = !DILocation(line: 5468, column: 11, scope: !6714)
!6716 = !DILocation(line: 5468, column: 14, scope: !6714)
!6717 = !DILocation(line: 5468, column: 21, scope: !6714)
!6718 = !DILocation(line: 5468, column: 9, scope: !6714)
!6719 = !DILocation(line: 5469, column: 3, scope: !6714)
!6720 = !DILocation(line: 5476, column: 7, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 5476, column: 7)
!6722 = !DILocation(line: 5476, column: 7, scope: !6685)
!6723 = !DILocation(line: 5480, column: 9, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 5480, column: 9)
!6725 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 5476, column: 20)
!6726 = !DILocation(line: 5480, column: 9, scope: !6725)
!6727 = !DILocation(line: 5482, column: 56, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 5480, column: 44)
!6729 = !DILocation(line: 5482, column: 61, scope: !6728)
!6730 = !DILocation(line: 5482, column: 16, scope: !6728)
!6731 = !DILocation(line: 5482, column: 9, scope: !6728)
!6732 = !DILocation(line: 5484, column: 3, scope: !6725)
!6733 = !DILocation(line: 5485, column: 13, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 5485, column: 12)
!6735 = !DILocation(line: 5485, column: 12, scope: !6721)
!6736 = !DILocation(line: 5486, column: 21, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 5485, column: 31)
!6738 = !DILocation(line: 5486, column: 5, scope: !6737)
!6739 = !DILocation(line: 5488, column: 3, scope: !6737)
!6740 = !DILocation(line: 5489, column: 10, scope: !6685)
!6741 = !DILocation(line: 5489, column: 3, scope: !6685)
!6742 = !DILocation(line: 5490, column: 1, scope: !6685)
!6743 = distinct !DISubprogram(name: "__Pyx_PyNumber_IntOrLongWrongResultType", scope: !3, file: !3, line: 5422, type: !1632, scopeLine: 5422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6744)
!6744 = !{!6745, !6746}
!6745 = !DILocalVariable(name: "result", arg: 1, scope: !6743, file: !3, line: 5422, type: !6)
!6746 = !DILocalVariable(name: "type_name", arg: 2, scope: !6743, file: !3, line: 5422, type: !32)
!6747 = !DILocation(line: 5422, column: 68, scope: !6743)
!6748 = !DILocation(line: 5422, column: 88, scope: !6743)
!6749 = !DILocation(line: 5424, column: 9, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 5424, column: 9)
!6751 = !DILocation(line: 5424, column: 9, scope: !6743)
!6752 = !DILocation(line: 5425, column: 30, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 5425, column: 13)
!6754 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 5424, column: 31)
!6755 = !DILocation(line: 5429, column: 17, scope: !6753)
!6756 = !DILocation(line: 5429, column: 34, scope: !6753)
!6757 = !DILocation(line: 5425, column: 13, scope: !6753)
!6758 = !DILocation(line: 5425, column: 13, scope: !6754)
!6759 = !DILocation(line: 5430, column: 13, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 5429, column: 44)
!6761 = !DILocation(line: 5431, column: 13, scope: !6760)
!6762 = !DILocation(line: 5433, column: 16, scope: !6754)
!6763 = !DILocation(line: 5433, column: 9, scope: !6754)
!6764 = !DILocation(line: 5436, column: 18, scope: !6743)
!6765 = !DILocation(line: 5438, column: 18, scope: !6743)
!6766 = !DILocation(line: 5438, column: 29, scope: !6743)
!6767 = !DILocation(line: 5438, column: 40, scope: !6743)
!6768 = !DILocation(line: 5438, column: 57, scope: !6743)
!6769 = !DILocation(line: 5436, column: 5, scope: !6743)
!6770 = !DILocation(line: 5439, column: 5, scope: !6743)
!6771 = !DILocation(line: 5440, column: 5, scope: !6743)
!6772 = !DILocation(line: 5441, column: 1, scope: !6743)
!6773 = !DISubprogram(name: "PyErr_WarnFormat", scope: !2179, file: !2179, line: 15, type: !6774, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6774 = !DISubroutineType(types: !6775)
!6775 = !{!54, !6, !12, !32, null}
!6776 = distinct !DISubprogram(name: "__Pyx_PyInt_From_long", scope: !3, file: !3, line: 4934, type: !2279, scopeLine: 4934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6777)
!6777 = !{!6778, !6779, !6780, !6781}
!6778 = !DILocalVariable(name: "value", arg: 1, scope: !6776, file: !3, line: 4934, type: !18)
!6779 = !DILocalVariable(name: "neg_one", scope: !6776, file: !3, line: 4939, type: !5037)
!6780 = !DILocalVariable(name: "const_zero", scope: !6776, file: !3, line: 4939, type: !5037)
!6781 = !DILocalVariable(name: "is_unsigned", scope: !6776, file: !3, line: 4943, type: !6272)
!6782 = !DILocation(line: 4934, column: 59, scope: !6776)
!6783 = !DILocation(line: 4939, column: 5, scope: !6776)
!6784 = !DILocation(line: 4939, column: 16, scope: !6776)
!6785 = !DILocation(line: 4939, column: 37, scope: !6776)
!6786 = !DILocation(line: 4943, column: 5, scope: !6776)
!6787 = !DILocation(line: 4943, column: 15, scope: !6776)
!6788 = !DILocation(line: 4956, column: 42, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6790, file: !3, line: 4955, column: 43)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 4955, column: 13)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 4954, column: 12)
!6792 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 4944, column: 9)
!6793 = !DILocation(line: 4956, column: 20, scope: !6789)
!6794 = !DILocation(line: 4969, column: 1, scope: !6776)
!6795 = !DILocation(line: 4956, column: 13, scope: !6789)
!6796 = distinct !DISubprogram(name: "__Pyx_PySequence_ContainsTF", scope: !3, file: !3, line: 1204, type: !6105, scopeLine: 1204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6797)
!6797 = !{!6798, !6799, !6800, !6801}
!6798 = !DILocalVariable(name: "item", arg: 1, scope: !6796, file: !3, line: 1204, type: !6)
!6799 = !DILocalVariable(name: "seq", arg: 2, scope: !6796, file: !3, line: 1204, type: !6)
!6800 = !DILocalVariable(name: "eq", arg: 3, scope: !6796, file: !3, line: 1204, type: !54)
!6801 = !DILocalVariable(name: "result", scope: !6796, file: !3, line: 1205, type: !54)
!6802 = !DILocation(line: 1204, column: 64, scope: !6796)
!6803 = !DILocation(line: 1204, column: 80, scope: !6796)
!6804 = !DILocation(line: 1204, column: 89, scope: !6796)
!6805 = !DILocation(line: 1205, column: 5, scope: !6796)
!6806 = !DILocation(line: 1205, column: 9, scope: !6796)
!6807 = !DILocation(line: 1205, column: 38, scope: !6796)
!6808 = !DILocation(line: 1205, column: 43, scope: !6796)
!6809 = !DILocation(line: 1205, column: 18, scope: !6796)
!6810 = !DILocation(line: 1206, column: 12, scope: !6796)
!6811 = !DILocation(line: 1206, column: 35, scope: !6796)
!6812 = !DILocation(line: 1206, column: 45, scope: !6796)
!6813 = !DILocation(line: 1206, column: 56, scope: !6796)
!6814 = !DILocation(line: 1206, column: 59, scope: !6796)
!6815 = !DILocation(line: 1206, column: 52, scope: !6796)
!6816 = !DILocation(line: 1207, column: 1, scope: !6796)
!6817 = !DILocation(line: 1206, column: 5, scope: !6796)
!6818 = !DISubprogram(name: "PyList_New", scope: !6819, file: !6819, line: 28, type: !1861, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6819 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/listobject.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "385f312692ce47ea9e6b347f7797b08c")
!6820 = distinct !DISubprogram(name: "__Pyx_Import", scope: !3, file: !3, line: 3896, type: !224, scopeLine: 3896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6821)
!6821 = !{!6822, !6823, !6824, !6825, !6826, !6827, !6828, !6829, !6830}
!6822 = !DILocalVariable(name: "name", arg: 1, scope: !6820, file: !3, line: 3896, type: !6)
!6823 = !DILocalVariable(name: "from_list", arg: 2, scope: !6820, file: !3, line: 3896, type: !6)
!6824 = !DILocalVariable(name: "level", arg: 3, scope: !6820, file: !3, line: 3896, type: !54)
!6825 = !DILocalVariable(name: "empty_list", scope: !6820, file: !3, line: 3897, type: !6)
!6826 = !DILocalVariable(name: "module", scope: !6820, file: !3, line: 3898, type: !6)
!6827 = !DILocalVariable(name: "global_dict", scope: !6820, file: !3, line: 3899, type: !6)
!6828 = !DILocalVariable(name: "empty_dict", scope: !6820, file: !3, line: 3900, type: !6)
!6829 = !DILocalVariable(name: "list", scope: !6820, file: !3, line: 3901, type: !6)
!6830 = !DILabel(scope: !6820, name: "bad", file: !3, line: 3951)
!6831 = !DILocation(line: 3896, column: 41, scope: !6820)
!6832 = !DILocation(line: 3896, column: 57, scope: !6820)
!6833 = !DILocation(line: 3896, column: 72, scope: !6820)
!6834 = !DILocation(line: 3897, column: 5, scope: !6820)
!6835 = !DILocation(line: 3897, column: 15, scope: !6820)
!6836 = !DILocation(line: 3898, column: 5, scope: !6820)
!6837 = !DILocation(line: 3898, column: 15, scope: !6820)
!6838 = !DILocation(line: 3899, column: 5, scope: !6820)
!6839 = !DILocation(line: 3899, column: 15, scope: !6820)
!6840 = !DILocation(line: 3900, column: 5, scope: !6820)
!6841 = !DILocation(line: 3900, column: 15, scope: !6820)
!6842 = !DILocation(line: 3901, column: 5, scope: !6820)
!6843 = !DILocation(line: 3901, column: 15, scope: !6820)
!6844 = !DILocation(line: 3908, column: 9, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 3908, column: 9)
!6846 = !DILocation(line: 3908, column: 9, scope: !6820)
!6847 = !DILocation(line: 3909, column: 16, scope: !6845)
!6848 = !DILocation(line: 3909, column: 14, scope: !6845)
!6849 = !DILocation(line: 3909, column: 9, scope: !6845)
!6850 = !DILocation(line: 3911, column: 22, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 3910, column: 10)
!6852 = !DILocation(line: 3911, column: 20, scope: !6851)
!6853 = !DILocation(line: 3912, column: 14, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 3912, column: 13)
!6855 = !DILocation(line: 3912, column: 13, scope: !6851)
!6856 = !DILocation(line: 3913, column: 13, scope: !6854)
!6857 = !DILocation(line: 3914, column: 16, scope: !6851)
!6858 = !DILocation(line: 3914, column: 14, scope: !6851)
!6859 = !DILocation(line: 3916, column: 36, scope: !6820)
!6860 = !DILocation(line: 3916, column: 19, scope: !6820)
!6861 = !DILocation(line: 3916, column: 17, scope: !6820)
!6862 = !DILocation(line: 3917, column: 10, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 3917, column: 9)
!6864 = !DILocation(line: 3917, column: 9, scope: !6820)
!6865 = !DILocation(line: 3918, column: 9, scope: !6863)
!6866 = !DILocation(line: 3919, column: 18, scope: !6820)
!6867 = !DILocation(line: 3919, column: 16, scope: !6820)
!6868 = !DILocation(line: 3920, column: 10, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 3920, column: 9)
!6870 = !DILocation(line: 3920, column: 9, scope: !6820)
!6871 = !DILocation(line: 3921, column: 9, scope: !6869)
!6872 = !DILocation(line: 3924, column: 13, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 3924, column: 13)
!6874 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 3922, column: 5)
!6875 = !DILocation(line: 3924, column: 19, scope: !6873)
!6876 = !DILocation(line: 3924, column: 13, scope: !6874)
!6877 = !DILocation(line: 3927, column: 21, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 3925, column: 58)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 3925, column: 17)
!6880 = distinct !DILexicalBlock(scope: !6873, file: !3, line: 3924, column: 26)
!6881 = !DILocation(line: 3927, column: 27, scope: !6878)
!6882 = !DILocation(line: 3927, column: 40, scope: !6878)
!6883 = !DILocation(line: 3927, column: 52, scope: !6878)
!6884 = !DILocation(line: 3926, column: 26, scope: !6878)
!6885 = !DILocation(line: 3926, column: 24, scope: !6878)
!6886 = !DILocation(line: 3928, column: 22, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 3928, column: 21)
!6888 = !DILocation(line: 3928, column: 21, scope: !6878)
!6889 = !DILocation(line: 3929, column: 49, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !3, line: 3929, column: 25)
!6891 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 3928, column: 30)
!6892 = !DILocation(line: 3929, column: 26, scope: !6890)
!6893 = !DILocation(line: 3929, column: 25, scope: !6891)
!6894 = !DILocation(line: 3930, column: 25, scope: !6890)
!6895 = !DILocation(line: 3931, column: 21, scope: !6891)
!6896 = !DILocation(line: 3932, column: 17, scope: !6891)
!6897 = !DILocation(line: 3934, column: 19, scope: !6880)
!6898 = !DILocation(line: 3935, column: 9, scope: !6880)
!6899 = !DILocation(line: 3937, column: 14, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 3937, column: 13)
!6901 = !DILocation(line: 3937, column: 13, scope: !6874)
!6902 = !DILocation(line: 3947, column: 17, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 3937, column: 22)
!6904 = !DILocation(line: 3947, column: 23, scope: !6903)
!6905 = !DILocation(line: 3947, column: 36, scope: !6903)
!6906 = !DILocation(line: 3947, column: 48, scope: !6903)
!6907 = !DILocation(line: 3947, column: 54, scope: !6903)
!6908 = !DILocation(line: 3946, column: 22, scope: !6903)
!6909 = !DILocation(line: 3946, column: 20, scope: !6903)
!6910 = !DILocation(line: 3949, column: 9, scope: !6903)
!6911 = !DILocation(line: 3950, column: 5, scope: !6874)
!6912 = !DILocation(line: 3951, column: 1, scope: !6820)
!6913 = !DILocation(line: 3955, column: 5, scope: !6820)
!6914 = !DILocation(line: 3956, column: 5, scope: !6820)
!6915 = !DILocation(line: 3957, column: 12, scope: !6820)
!6916 = !DILocation(line: 3958, column: 1, scope: !6820)
!6917 = !DILocation(line: 3957, column: 5, scope: !6820)
!6918 = distinct !DISubprogram(name: "__Pyx_ImportFrom", scope: !3, file: !3, line: 3961, type: !77, scopeLine: 3961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6919)
!6919 = !{!6920, !6921, !6922}
!6920 = !DILocalVariable(name: "module", arg: 1, scope: !6918, file: !3, line: 3961, type: !6)
!6921 = !DILocalVariable(name: "name", arg: 2, scope: !6918, file: !3, line: 3961, type: !6)
!6922 = !DILocalVariable(name: "value", scope: !6918, file: !3, line: 3962, type: !6)
!6923 = !DILocation(line: 3961, column: 45, scope: !6918)
!6924 = !DILocation(line: 3961, column: 63, scope: !6918)
!6925 = !DILocation(line: 3962, column: 5, scope: !6918)
!6926 = !DILocation(line: 3962, column: 15, scope: !6918)
!6927 = !DILocation(line: 3962, column: 49, scope: !6918)
!6928 = !DILocation(line: 3962, column: 57, scope: !6918)
!6929 = !DILocation(line: 3962, column: 23, scope: !6918)
!6930 = !DILocation(line: 3963, column: 9, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6918, file: !3, line: 3963, column: 9)
!6932 = !DILocation(line: 3963, column: 26, scope: !6931)
!6933 = !DILocation(line: 3963, column: 52, scope: !6931)
!6934 = !DILocation(line: 3963, column: 29, scope: !6931)
!6935 = !DILocation(line: 3963, column: 9, scope: !6918)
!6936 = !DILocation(line: 3964, column: 22, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 3963, column: 75)
!6938 = !DILocation(line: 3968, column: 38, scope: !6937)
!6939 = !DILocation(line: 3964, column: 9, scope: !6937)
!6940 = !DILocation(line: 3970, column: 5, scope: !6937)
!6941 = !DILocation(line: 3971, column: 12, scope: !6918)
!6942 = !DILocation(line: 3972, column: 1, scope: !6918)
!6943 = !DILocation(line: 3971, column: 5, scope: !6918)
!6944 = !DISubprogram(name: "PyUnicode_Format", scope: !1868, file: !1868, line: 1002, type: !77, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6945 = !DISubprogram(name: "PySequence_Contains", scope: !3174, file: !3174, line: 721, type: !149, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6946 = !DISubprogram(name: "PyImport_ImportModuleLevelObject", scope: !1870, file: !1870, line: 60, type: !6947, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!6947 = !DISubroutineType(types: !6948)
!6948 = !{!6, !6, !6, !6, !6, !54}
!6949 = !DILocation(line: 4488, column: 65, scope: !1107)
!6950 = !DILocation(line: 4488, column: 77, scope: !1107)
!6951 = !DILocation(line: 4489, column: 5, scope: !1107)
!6952 = !DILocation(line: 4489, column: 15, scope: !1107)
!6953 = !DILocation(line: 4490, column: 5, scope: !1107)
!6954 = !DILocation(line: 4490, column: 15, scope: !1107)
!6955 = !DILocation(line: 4490, column: 23, scope: !1107)
!6956 = !DILocation(line: 4490, column: 32, scope: !1107)
!6957 = !DILocation(line: 4492, column: 5, scope: !1107)
!6958 = !DILocation(line: 4492, column: 16, scope: !1107)
!6959 = !DILocation(line: 4494, column: 9, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !1107, file: !3, line: 4494, column: 9)
!6961 = !DILocation(line: 4494, column: 9, scope: !1107)
!6962 = !DILocation(line: 4495, column: 16, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 4494, column: 42)
!6964 = !DILocation(line: 4495, column: 9, scope: !6963)
!6965 = !DILocation(line: 4497, column: 27, scope: !1107)
!6966 = !DILocation(line: 4497, column: 5, scope: !1107)
!6967 = !DILocation(line: 4499, column: 48, scope: !1107)
!6968 = !DILocation(line: 4499, column: 27, scope: !1107)
!6969 = !DILocation(line: 4499, column: 25, scope: !1107)
!6970 = !DILocation(line: 4500, column: 9, scope: !1208)
!6971 = !DILocation(line: 4500, column: 9, scope: !1107)
!6972 = !DILocation(line: 4501, column: 9, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 4501, column: 9)
!6974 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 4501, column: 9)
!6975 = distinct !DILexicalBlock(scope: !1208, file: !3, line: 4500, column: 38)
!6976 = !DILocation(line: 4501, column: 9, scope: !6974)
!6977 = !DILocation(line: 4501, column: 9, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 4501, column: 9)
!6979 = !DILocation(line: 4501, column: 9, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 4501, column: 9)
!6981 = !DILocation(line: 4504, column: 5, scope: !6975)
!6982 = !DILocation(line: 4507, column: 7, scope: !1207)
!6983 = !DILocation(line: 4507, column: 17, scope: !1207)
!6984 = !DILocation(line: 4507, column: 59, scope: !1207)
!6985 = !DILocation(line: 4507, column: 81, scope: !1207)
!6986 = !DILocation(line: 4507, column: 33, scope: !1207)
!6987 = !DILocation(line: 4508, column: 11, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !1207, file: !3, line: 4508, column: 11)
!6989 = !DILocation(line: 4508, column: 11, scope: !1207)
!6990 = !DILocation(line: 4509, column: 34, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 4508, column: 26)
!6992 = !DILocation(line: 4509, column: 21, scope: !6991)
!6993 = !DILocation(line: 4509, column: 19, scope: !6991)
!6994 = !DILocation(line: 4510, column: 9, scope: !6991)
!6995 = !DILocation(line: 4511, column: 7, scope: !6991)
!6996 = !DILocation(line: 4512, column: 9, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 4511, column: 14)
!6998 = !DILocation(line: 4513, column: 19, scope: !6997)
!6999 = !DILocation(line: 4515, column: 5, scope: !1208)
!7000 = !DILocation(line: 4516, column: 10, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !1107, file: !3, line: 4516, column: 9)
!7002 = !DILocation(line: 4516, column: 9, scope: !1107)
!7003 = !DILocation(line: 4517, column: 16, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 4516, column: 21)
!7005 = !DILocation(line: 4518, column: 33, scope: !7004)
!7006 = !DILocation(line: 4518, column: 55, scope: !7004)
!7007 = !DILocation(line: 4518, column: 16, scope: !7004)
!7008 = !DILocation(line: 4519, column: 5, scope: !7004)
!7009 = !DILocation(line: 4520, column: 14, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 4520, column: 14)
!7011 = !DILocation(line: 4520, column: 24, scope: !7010)
!7012 = !DILocation(line: 4520, column: 36, scope: !7010)
!7013 = !DILocation(line: 4520, column: 40, scope: !7010)
!7014 = !DILocation(line: 4520, column: 50, scope: !7010)
!7015 = !DILocation(line: 4520, column: 61, scope: !7010)
!7016 = !DILocation(line: 4520, column: 77, scope: !7010)
!7017 = !DILocation(line: 4520, column: 64, scope: !7010)
!7018 = !DILocation(line: 4520, column: 88, scope: !7010)
!7019 = !DILocation(line: 4520, column: 14, scope: !7001)
!7020 = !DILocation(line: 4521, column: 16, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 4520, column: 95)
!7022 = !DILocation(line: 4522, column: 5, scope: !7021)
!7023 = !DILocation(line: 4523, column: 29, scope: !1107)
!7024 = !DILocation(line: 4523, column: 37, scope: !1107)
!7025 = !DILocation(line: 4523, column: 44, scope: !1107)
!7026 = !DILocation(line: 4523, column: 52, scope: !1107)
!7027 = !DILocation(line: 4523, column: 5, scope: !1107)
!7028 = !DILocation(line: 4524, column: 12, scope: !1107)
!7029 = !DILocation(line: 4524, column: 5, scope: !1107)
!7030 = !DILocation(line: 4525, column: 1, scope: !1107)
!7031 = distinct !DISubprogram(name: "__pyx_find_code_object", scope: !3, file: !3, line: 4550, type: !7032, scopeLine: 4550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7034)
!7032 = !DISubroutineType(types: !7033)
!7033 = !{!397, !54}
!7034 = !{!7035, !7036, !7037}
!7035 = !DILocalVariable(name: "code_line", arg: 1, scope: !7031, file: !3, line: 4550, type: !54)
!7036 = !DILocalVariable(name: "code_object", scope: !7031, file: !3, line: 4551, type: !397)
!7037 = !DILocalVariable(name: "pos", scope: !7031, file: !3, line: 4552, type: !54)
!7038 = !DILocation(line: 4550, column: 49, scope: !7031)
!7039 = !DILocation(line: 4551, column: 5, scope: !7031)
!7040 = !DILocation(line: 4551, column: 19, scope: !7031)
!7041 = !DILocation(line: 4552, column: 5, scope: !7031)
!7042 = !DILocation(line: 4552, column: 9, scope: !7031)
!7043 = !DILocation(line: 4553, column: 9, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7031, file: !3, line: 4553, column: 9)
!7045 = !DILocation(line: 4553, column: 30, scope: !7044)
!7046 = !DILocation(line: 4553, column: 33, scope: !7044)
!7047 = !{!7048, !1253, i64 8}
!7048 = !{!"__Pyx_CodeObjectCache", !1336, i64 0, !1336, i64 4, !1253, i64 8}
!7049 = !DILocation(line: 4553, column: 9, scope: !7031)
!7050 = !DILocation(line: 4554, column: 9, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7044, file: !3, line: 4553, column: 70)
!7052 = !DILocation(line: 4556, column: 54, scope: !7031)
!7053 = !DILocation(line: 4556, column: 80, scope: !7031)
!7054 = !{!7048, !1336, i64 0}
!7055 = !DILocation(line: 4556, column: 87, scope: !7031)
!7056 = !DILocation(line: 4556, column: 11, scope: !7031)
!7057 = !DILocation(line: 4556, column: 9, scope: !7031)
!7058 = !DILocation(line: 4557, column: 9, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7031, file: !3, line: 4557, column: 9)
!7060 = !DILocation(line: 4557, column: 49, scope: !7059)
!7061 = !DILocation(line: 4557, column: 52, scope: !7059)
!7062 = !{!7063, !1336, i64 8}
!7063 = !{!"", !1253, i64 0, !1336, i64 8}
!7064 = !DILocation(line: 4557, column: 9, scope: !7031)
!7065 = !DILocation(line: 4558, column: 9, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 4557, column: 116)
!7067 = !DILocation(line: 4560, column: 36, scope: !7031)
!7068 = !DILocation(line: 4560, column: 44, scope: !7031)
!7069 = !DILocation(line: 4560, column: 19, scope: !7031)
!7070 = !DILocation(line: 4560, column: 49, scope: !7031)
!7071 = !{!7063, !1253, i64 0}
!7072 = !DILocation(line: 4560, column: 17, scope: !7031)
!7073 = !DILocation(line: 4561, column: 5, scope: !7031)
!7074 = !DILocation(line: 4562, column: 12, scope: !7031)
!7075 = !DILocation(line: 4562, column: 5, scope: !7031)
!7076 = !DILocation(line: 4563, column: 1, scope: !7031)
!7077 = distinct !DISubprogram(name: "__Pyx_ErrFetchInState", scope: !3, file: !3, line: 3612, type: !7078, scopeLine: 3612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7080)
!7078 = !DISubroutineType(types: !7079)
!7079 = !{null, !1110, !339, !339, !339}
!7080 = !{!7081, !7082, !7083, !7084}
!7081 = !DILocalVariable(name: "tstate", arg: 1, scope: !7077, file: !3, line: 3612, type: !1110)
!7082 = !DILocalVariable(name: "type", arg: 2, scope: !7077, file: !3, line: 3612, type: !339)
!7083 = !DILocalVariable(name: "value", arg: 3, scope: !7077, file: !3, line: 3612, type: !339)
!7084 = !DILocalVariable(name: "tb", arg: 4, scope: !7077, file: !3, line: 3612, type: !339)
!7085 = !DILocation(line: 3612, column: 64, scope: !7077)
!7086 = !DILocation(line: 3612, column: 83, scope: !7077)
!7087 = !DILocation(line: 3612, column: 100, scope: !7077)
!7088 = !DILocation(line: 3612, column: 118, scope: !7077)
!7089 = !DILocation(line: 3613, column: 13, scope: !7077)
!7090 = !DILocation(line: 3613, column: 21, scope: !7077)
!7091 = !DILocation(line: 3613, column: 6, scope: !7077)
!7092 = !DILocation(line: 3613, column: 11, scope: !7077)
!7093 = !DILocation(line: 3614, column: 14, scope: !7077)
!7094 = !DILocation(line: 3614, column: 22, scope: !7077)
!7095 = !DILocation(line: 3614, column: 6, scope: !7077)
!7096 = !DILocation(line: 3614, column: 12, scope: !7077)
!7097 = !DILocation(line: 3615, column: 11, scope: !7077)
!7098 = !DILocation(line: 3615, column: 19, scope: !7077)
!7099 = !DILocation(line: 3615, column: 6, scope: !7077)
!7100 = !DILocation(line: 3615, column: 9, scope: !7077)
!7101 = !DILocation(line: 3616, column: 5, scope: !7077)
!7102 = !DILocation(line: 3616, column: 13, scope: !7077)
!7103 = !DILocation(line: 3616, column: 25, scope: !7077)
!7104 = !DILocation(line: 3617, column: 5, scope: !7077)
!7105 = !DILocation(line: 3617, column: 13, scope: !7077)
!7106 = !DILocation(line: 3617, column: 26, scope: !7077)
!7107 = !DILocation(line: 3618, column: 5, scope: !7077)
!7108 = !DILocation(line: 3618, column: 13, scope: !7077)
!7109 = !DILocation(line: 3618, column: 30, scope: !7077)
!7110 = !DILocation(line: 3619, column: 1, scope: !7077)
!7111 = distinct !DISubprogram(name: "__Pyx_CreateCodeObjectForTraceback", scope: !3, file: !3, line: 4618, type: !7112, scopeLine: 4620, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7114)
!7112 = !DISubroutineType(types: !7113)
!7113 = !{!397, !32, !54, !54, !32}
!7114 = !{!7115, !7116, !7117, !7118, !7119, !7120, !7121}
!7115 = !DILocalVariable(name: "funcname", arg: 1, scope: !7111, file: !3, line: 4619, type: !32)
!7116 = !DILocalVariable(name: "c_line", arg: 2, scope: !7111, file: !3, line: 4619, type: !54)
!7117 = !DILocalVariable(name: "py_line", arg: 3, scope: !7111, file: !3, line: 4620, type: !54)
!7118 = !DILocalVariable(name: "filename", arg: 4, scope: !7111, file: !3, line: 4620, type: !32)
!7119 = !DILocalVariable(name: "py_code", scope: !7111, file: !3, line: 4621, type: !397)
!7120 = !DILocalVariable(name: "py_funcname", scope: !7111, file: !3, line: 4622, type: !6)
!7121 = !DILabel(scope: !7111, name: "bad", file: !3, line: 4669)
!7122 = !DILocation(line: 4619, column: 25, scope: !7111)
!7123 = !DILocation(line: 4619, column: 39, scope: !7111)
!7124 = !DILocation(line: 4620, column: 17, scope: !7111)
!7125 = !DILocation(line: 4620, column: 38, scope: !7111)
!7126 = !DILocation(line: 4621, column: 5, scope: !7111)
!7127 = !DILocation(line: 4621, column: 19, scope: !7111)
!7128 = !DILocation(line: 4622, column: 5, scope: !7111)
!7129 = !DILocation(line: 4622, column: 15, scope: !7111)
!7130 = !DILocation(line: 4628, column: 9, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 4628, column: 9)
!7132 = !DILocation(line: 4628, column: 9, scope: !7111)
!7133 = !DILocation(line: 4633, column: 59, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7131, file: !3, line: 4628, column: 17)
!7135 = !DILocation(line: 4633, column: 69, scope: !7134)
!7136 = !DILocation(line: 4633, column: 84, scope: !7134)
!7137 = !DILocation(line: 4633, column: 23, scope: !7134)
!7138 = !DILocation(line: 4633, column: 21, scope: !7134)
!7139 = !DILocation(line: 4634, column: 14, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 4634, column: 13)
!7141 = !DILocation(line: 4634, column: 13, scope: !7134)
!7142 = !DILocation(line: 4634, column: 27, scope: !7140)
!7143 = !DILocation(line: 4635, column: 37, scope: !7134)
!7144 = !DILocation(line: 4635, column: 20, scope: !7134)
!7145 = !DILocation(line: 4635, column: 18, scope: !7134)
!7146 = !DILocation(line: 4636, column: 14, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 4636, column: 13)
!7148 = !DILocation(line: 4636, column: 13, scope: !7134)
!7149 = !DILocation(line: 4636, column: 24, scope: !7147)
!7150 = !DILocation(line: 4638, column: 5, scope: !7134)
!7151 = !DILocation(line: 4665, column: 31, scope: !7111)
!7152 = !DILocation(line: 4665, column: 41, scope: !7111)
!7153 = !DILocation(line: 4665, column: 51, scope: !7111)
!7154 = !DILocation(line: 4665, column: 15, scope: !7111)
!7155 = !DILocation(line: 4665, column: 13, scope: !7111)
!7156 = !DILocation(line: 4667, column: 5, scope: !7111)
!7157 = !DILocation(line: 4668, column: 12, scope: !7111)
!7158 = !DILocation(line: 4668, column: 5, scope: !7111)
!7159 = !DILocation(line: 4669, column: 1, scope: !7111)
!7160 = !DILocation(line: 4670, column: 5, scope: !7111)
!7161 = !DILocation(line: 4674, column: 5, scope: !7111)
!7162 = !DILocation(line: 4675, column: 1, scope: !7111)
!7163 = distinct !DISubprogram(name: "__pyx_insert_code_object", scope: !3, file: !3, line: 4564, type: !7164, scopeLine: 4564, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7166)
!7164 = !DISubroutineType(types: !7165)
!7165 = !{null, !54, !397}
!7166 = !{!7167, !7168, !7169, !7170, !7171, !7172, !7175}
!7167 = !DILocalVariable(name: "code_line", arg: 1, scope: !7163, file: !3, line: 4564, type: !54)
!7168 = !DILocalVariable(name: "code_object", arg: 2, scope: !7163, file: !3, line: 4564, type: !397)
!7169 = !DILocalVariable(name: "pos", scope: !7163, file: !3, line: 4565, type: !54)
!7170 = !DILocalVariable(name: "i", scope: !7163, file: !3, line: 4565, type: !54)
!7171 = !DILocalVariable(name: "entries", scope: !7163, file: !3, line: 4566, type: !480)
!7172 = !DILocalVariable(name: "tmp", scope: !7173, file: !3, line: 4584, type: !397)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 4583, column: 107)
!7174 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 4583, column: 9)
!7175 = !DILocalVariable(name: "new_max", scope: !7176, file: !3, line: 4590, type: !54)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 4589, column: 63)
!7177 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 4589, column: 9)
!7178 = !DILocation(line: 4564, column: 42, scope: !7163)
!7179 = !DILocation(line: 4564, column: 67, scope: !7163)
!7180 = !DILocation(line: 4565, column: 5, scope: !7163)
!7181 = !DILocation(line: 4565, column: 9, scope: !7163)
!7182 = !DILocation(line: 4565, column: 14, scope: !7163)
!7183 = !DILocation(line: 4566, column: 5, scope: !7163)
!7184 = !DILocation(line: 4566, column: 33, scope: !7163)
!7185 = !DILocation(line: 4566, column: 60, scope: !7163)
!7186 = !DILocation(line: 4567, column: 9, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 4567, column: 9)
!7188 = !DILocation(line: 4567, column: 9, scope: !7163)
!7189 = !DILocation(line: 4568, column: 9, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 4567, column: 31)
!7191 = !DILocation(line: 4570, column: 9, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 4570, column: 9)
!7193 = !DILocation(line: 4570, column: 9, scope: !7163)
!7194 = !DILocation(line: 4571, column: 48, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 4570, column: 29)
!7196 = !DILocation(line: 4571, column: 17, scope: !7195)
!7197 = !DILocation(line: 4572, column: 13, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 4572, column: 13)
!7199 = !DILocation(line: 4572, column: 13, scope: !7195)
!7200 = !DILocation(line: 4573, column: 40, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 4572, column: 30)
!7202 = !DILocation(line: 4573, column: 38, scope: !7201)
!7203 = !DILocation(line: 4574, column: 40, scope: !7201)
!7204 = !{!7048, !1336, i64 4}
!7205 = !DILocation(line: 4575, column: 36, scope: !7201)
!7206 = !DILocation(line: 4576, column: 36, scope: !7201)
!7207 = !DILocation(line: 4576, column: 13, scope: !7201)
!7208 = !DILocation(line: 4576, column: 24, scope: !7201)
!7209 = !DILocation(line: 4576, column: 34, scope: !7201)
!7210 = !DILocation(line: 4577, column: 38, scope: !7201)
!7211 = !DILocation(line: 4577, column: 13, scope: !7201)
!7212 = !DILocation(line: 4577, column: 24, scope: !7201)
!7213 = !DILocation(line: 4577, column: 36, scope: !7201)
!7214 = !DILocation(line: 4578, column: 13, scope: !7201)
!7215 = !DILocation(line: 4579, column: 9, scope: !7201)
!7216 = !DILocation(line: 4580, column: 9, scope: !7195)
!7217 = !DILocation(line: 4582, column: 54, scope: !7163)
!7218 = !DILocation(line: 4582, column: 80, scope: !7163)
!7219 = !DILocation(line: 4582, column: 87, scope: !7163)
!7220 = !DILocation(line: 4582, column: 11, scope: !7163)
!7221 = !DILocation(line: 4582, column: 9, scope: !7163)
!7222 = !DILocation(line: 4583, column: 10, scope: !7174)
!7223 = !DILocation(line: 4583, column: 33, scope: !7174)
!7224 = !DILocation(line: 4583, column: 14, scope: !7174)
!7225 = !DILocation(line: 4583, column: 40, scope: !7174)
!7226 = !DILocation(line: 4583, column: 43, scope: !7174)
!7227 = !DILocation(line: 4583, column: 9, scope: !7163)
!7228 = !DILocation(line: 4584, column: 9, scope: !7173)
!7229 = !DILocation(line: 4584, column: 23, scope: !7173)
!7230 = !DILocation(line: 4584, column: 29, scope: !7173)
!7231 = !DILocation(line: 4584, column: 37, scope: !7173)
!7232 = !DILocation(line: 4584, column: 42, scope: !7173)
!7233 = !DILocation(line: 4585, column: 36, scope: !7173)
!7234 = !DILocation(line: 4585, column: 9, scope: !7173)
!7235 = !DILocation(line: 4585, column: 17, scope: !7173)
!7236 = !DILocation(line: 4585, column: 22, scope: !7173)
!7237 = !DILocation(line: 4585, column: 34, scope: !7173)
!7238 = !DILocation(line: 4586, column: 9, scope: !7173)
!7239 = !DILocation(line: 4588, column: 5, scope: !7174)
!7240 = !DILocation(line: 4589, column: 26, scope: !7177)
!7241 = !DILocation(line: 4589, column: 52, scope: !7177)
!7242 = !DILocation(line: 4589, column: 32, scope: !7177)
!7243 = !DILocation(line: 4589, column: 9, scope: !7163)
!7244 = !DILocation(line: 4590, column: 9, scope: !7176)
!7245 = !DILocation(line: 4590, column: 13, scope: !7176)
!7246 = !DILocation(line: 4590, column: 40, scope: !7176)
!7247 = !DILocation(line: 4590, column: 50, scope: !7176)
!7248 = !DILocation(line: 4592, column: 30, scope: !7176)
!7249 = !DILocation(line: 4592, column: 48, scope: !7176)
!7250 = !DILocation(line: 4592, column: 40, scope: !7176)
!7251 = !DILocation(line: 4592, column: 57, scope: !7176)
!7252 = !DILocation(line: 4591, column: 48, scope: !7176)
!7253 = !DILocation(line: 4591, column: 17, scope: !7176)
!7254 = !DILocation(line: 4593, column: 13, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7176, file: !3, line: 4593, column: 13)
!7256 = !DILocation(line: 4593, column: 13, scope: !7176)
!7257 = !DILocation(line: 4594, column: 13, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 4593, column: 33)
!7259 = !DILocation(line: 4596, column: 36, scope: !7176)
!7260 = !DILocation(line: 4596, column: 34, scope: !7176)
!7261 = !DILocation(line: 4597, column: 38, scope: !7176)
!7262 = !DILocation(line: 4597, column: 36, scope: !7176)
!7263 = !DILocation(line: 4598, column: 5, scope: !7177)
!7264 = !DILocation(line: 4598, column: 5, scope: !7176)
!7265 = !DILocation(line: 4599, column: 29, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 4599, column: 5)
!7267 = !DILocation(line: 4599, column: 11, scope: !7266)
!7268 = !DILocation(line: 4599, column: 10, scope: !7266)
!7269 = !DILocation(line: 4599, column: 36, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 4599, column: 5)
!7271 = !DILocation(line: 4599, column: 38, scope: !7270)
!7272 = !DILocation(line: 4599, column: 37, scope: !7270)
!7273 = !DILocation(line: 4599, column: 5, scope: !7266)
!7274 = !DILocation(line: 4600, column: 9, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7270, file: !3, line: 4599, column: 48)
!7276 = !DILocation(line: 4600, column: 17, scope: !7275)
!7277 = !DILocation(line: 4600, column: 22, scope: !7275)
!7278 = !DILocation(line: 4600, column: 30, scope: !7275)
!7279 = !DILocation(line: 4600, column: 31, scope: !7275)
!7280 = !{i64 0, i64 8, !1252, i64 8, i64 4, !1335}
!7281 = !DILocation(line: 4601, column: 5, scope: !7275)
!7282 = !DILocation(line: 4599, column: 44, scope: !7270)
!7283 = !DILocation(line: 4599, column: 5, scope: !7270)
!7284 = distinct !{!7284, !7273, !7285, !1801}
!7285 = !DILocation(line: 4601, column: 5, scope: !7266)
!7286 = !DILocation(line: 4602, column: 30, scope: !7163)
!7287 = !DILocation(line: 4602, column: 5, scope: !7163)
!7288 = !DILocation(line: 4602, column: 13, scope: !7163)
!7289 = !DILocation(line: 4602, column: 18, scope: !7163)
!7290 = !DILocation(line: 4602, column: 28, scope: !7163)
!7291 = !DILocation(line: 4603, column: 32, scope: !7163)
!7292 = !DILocation(line: 4603, column: 5, scope: !7163)
!7293 = !DILocation(line: 4603, column: 13, scope: !7163)
!7294 = !DILocation(line: 4603, column: 18, scope: !7163)
!7295 = !DILocation(line: 4603, column: 30, scope: !7163)
!7296 = !DILocation(line: 4604, column: 27, scope: !7163)
!7297 = !DILocation(line: 4605, column: 5, scope: !7163)
!7298 = !DILocation(line: 4606, column: 1, scope: !7163)
!7299 = !DISubprogram(name: "PyTraceBack_Here", scope: !7300, file: !7300, line: 9, type: !7301, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7300 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/traceback.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "187bd937dfcfb6454fc7878203c45538")
!7301 = !DISubroutineType(types: !7302)
!7302 = !{!54, !1124}
!7303 = !DISubprogram(name: "_PyObject_GetDictPtr", scope: !23, file: !23, line: 332, type: !7304, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7304 = !DISubroutineType(types: !7305)
!7305 = !{!339, !6}
!7306 = !DISubprogram(name: "PyObject_Not", scope: !8, file: !8, line: 262, type: !94, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7307 = distinct !DISubprogram(name: "__pyx_bisect_code_objects", scope: !3, file: !3, line: 4529, type: !7308, scopeLine: 4529, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7310)
!7308 = !DISubroutineType(types: !7309)
!7309 = !{!54, !480, !54, !54}
!7310 = !{!7311, !7312, !7313, !7314, !7315, !7316}
!7311 = !DILocalVariable(name: "entries", arg: 1, scope: !7307, file: !3, line: 4529, type: !480)
!7312 = !DILocalVariable(name: "count", arg: 2, scope: !7307, file: !3, line: 4529, type: !54)
!7313 = !DILocalVariable(name: "code_line", arg: 3, scope: !7307, file: !3, line: 4529, type: !54)
!7314 = !DILocalVariable(name: "start", scope: !7307, file: !3, line: 4530, type: !54)
!7315 = !DILocalVariable(name: "mid", scope: !7307, file: !3, line: 4530, type: !54)
!7316 = !DILocalVariable(name: "end", scope: !7307, file: !3, line: 4530, type: !54)
!7317 = !DILocation(line: 4529, column: 66, scope: !7307)
!7318 = !DILocation(line: 4529, column: 79, scope: !7307)
!7319 = !DILocation(line: 4529, column: 90, scope: !7307)
!7320 = !DILocation(line: 4530, column: 5, scope: !7307)
!7321 = !DILocation(line: 4530, column: 9, scope: !7307)
!7322 = !DILocation(line: 4530, column: 20, scope: !7307)
!7323 = !DILocation(line: 4530, column: 29, scope: !7307)
!7324 = !DILocation(line: 4530, column: 35, scope: !7307)
!7325 = !DILocation(line: 4530, column: 41, scope: !7307)
!7326 = !DILocation(line: 4531, column: 9, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 4531, column: 9)
!7328 = !DILocation(line: 4531, column: 13, scope: !7327)
!7329 = !DILocation(line: 4531, column: 18, scope: !7327)
!7330 = !DILocation(line: 4531, column: 21, scope: !7327)
!7331 = !DILocation(line: 4531, column: 33, scope: !7327)
!7332 = !DILocation(line: 4531, column: 41, scope: !7327)
!7333 = !DILocation(line: 4531, column: 46, scope: !7327)
!7334 = !DILocation(line: 4531, column: 31, scope: !7327)
!7335 = !DILocation(line: 4531, column: 9, scope: !7307)
!7336 = !DILocation(line: 4532, column: 16, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 4531, column: 57)
!7338 = !DILocation(line: 4532, column: 9, scope: !7337)
!7339 = !DILocation(line: 4534, column: 5, scope: !7307)
!7340 = !DILocation(line: 4534, column: 12, scope: !7307)
!7341 = !DILocation(line: 4534, column: 20, scope: !7307)
!7342 = !DILocation(line: 4534, column: 18, scope: !7307)
!7343 = !DILocation(line: 4535, column: 15, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 4534, column: 25)
!7345 = !DILocation(line: 4535, column: 24, scope: !7344)
!7346 = !DILocation(line: 4535, column: 30, scope: !7344)
!7347 = !DILocation(line: 4535, column: 28, scope: !7344)
!7348 = !DILocation(line: 4535, column: 37, scope: !7344)
!7349 = !DILocation(line: 4535, column: 21, scope: !7344)
!7350 = !DILocation(line: 4535, column: 13, scope: !7344)
!7351 = !DILocation(line: 4536, column: 13, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 4536, column: 13)
!7353 = !DILocation(line: 4536, column: 25, scope: !7352)
!7354 = !DILocation(line: 4536, column: 33, scope: !7352)
!7355 = !DILocation(line: 4536, column: 38, scope: !7352)
!7356 = !DILocation(line: 4536, column: 23, scope: !7352)
!7357 = !DILocation(line: 4536, column: 13, scope: !7344)
!7358 = !DILocation(line: 4537, column: 19, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 4536, column: 49)
!7360 = !DILocation(line: 4537, column: 17, scope: !7359)
!7361 = !DILocation(line: 4538, column: 9, scope: !7359)
!7362 = !DILocation(line: 4538, column: 20, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 4538, column: 20)
!7364 = !DILocation(line: 4538, column: 32, scope: !7363)
!7365 = !DILocation(line: 4538, column: 40, scope: !7363)
!7366 = !DILocation(line: 4538, column: 45, scope: !7363)
!7367 = !DILocation(line: 4538, column: 30, scope: !7363)
!7368 = !DILocation(line: 4538, column: 20, scope: !7352)
!7369 = !DILocation(line: 4539, column: 22, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 4538, column: 56)
!7371 = !DILocation(line: 4539, column: 26, scope: !7370)
!7372 = !DILocation(line: 4539, column: 20, scope: !7370)
!7373 = !DILocation(line: 4540, column: 9, scope: !7370)
!7374 = !DILocation(line: 4541, column: 20, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 4540, column: 16)
!7376 = !DILocation(line: 4541, column: 13, scope: !7375)
!7377 = distinct !{!7377, !7339, !7378, !1801}
!7378 = !DILocation(line: 4543, column: 5, scope: !7307)
!7379 = !DILocation(line: 4544, column: 9, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 4544, column: 9)
!7381 = !DILocation(line: 4544, column: 22, scope: !7380)
!7382 = !DILocation(line: 4544, column: 30, scope: !7380)
!7383 = !DILocation(line: 4544, column: 35, scope: !7380)
!7384 = !DILocation(line: 4544, column: 19, scope: !7380)
!7385 = !DILocation(line: 4544, column: 9, scope: !7307)
!7386 = !DILocation(line: 4545, column: 16, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 4544, column: 46)
!7388 = !DILocation(line: 4545, column: 9, scope: !7387)
!7389 = !DILocation(line: 4547, column: 16, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 4546, column: 12)
!7391 = !DILocation(line: 4547, column: 20, scope: !7390)
!7392 = !DILocation(line: 4547, column: 9, scope: !7390)
!7393 = !DILocation(line: 4549, column: 1, scope: !7307)
!7394 = !DISubprogram(name: "PyUnicode_FromFormat", scope: !1868, file: !1868, line: 258, type: !7395, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7395 = !DISubroutineType(types: !7396)
!7396 = !{!6, !32, null}
!7397 = !DISubprogram(name: "PyUnicode_AsUTF8", scope: !343, file: !343, line: 765, type: !7398, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7398 = !DISubroutineType(types: !7399)
!7399 = !{!32, !6}
!7400 = !DISubprogram(name: "PyCode_NewEmpty", scope: !401, file: !401, line: 130, type: !7401, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7401 = !DISubroutineType(types: !7402)
!7402 = !{!397, !32, !32, !54}
!7403 = !DISubprogram(name: "PyMem_Malloc", scope: !7404, file: !7404, line: 52, type: !7405, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7404 = !DIFile(filename: "spack-installs/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spack_path_placeholder__/__spa/linux-ubuntu22.04-zen2/clang-18.0.0/python-3.9.18-tfi3mxfib577g7oeypbrcz2fdcvilq6g/include/python3.9/pymem.h", directory: "/local-ssd/py-pandas-t2ah26ijbt7dck44kjkjgtwnjnacpkvn-build", checksumkind: CSK_MD5, checksum: "672ac308b3244eaf09aadc2df59d3c67")
!7405 = !DISubroutineType(types: !7406)
!7406 = !{!5, !304}
!7407 = !DISubprogram(name: "PyMem_Realloc", scope: !7404, file: !7404, line: 53, type: !7408, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!7408 = !DISubroutineType(types: !7409)
!7409 = !{!5, !5, !304}
